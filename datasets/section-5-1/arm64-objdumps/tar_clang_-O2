
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tar_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000403e70 <.init>:
  403e70:	stp	x29, x30, [sp, #-16]!
  403e74:	mov	x29, sp
  403e78:	bl	404ba0 <wcrtomb@plt+0x60>
  403e7c:	ldp	x29, x30, [sp], #16
  403e80:	ret

Disassembly of section .plt:

0000000000403e90 <mbrtowc@plt-0x20>:
  403e90:	stp	x16, x30, [sp, #-16]!
  403e94:	adrp	x16, 476000 <_obstack_memory_used@@Base+0x2f4b0>
  403e98:	ldr	x17, [x16, #4088]
  403e9c:	add	x16, x16, #0xff8
  403ea0:	br	x17
  403ea4:	nop
  403ea8:	nop
  403eac:	nop

0000000000403eb0 <mbrtowc@plt>:
  403eb0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403eb4:	ldr	x17, [x16]
  403eb8:	add	x16, x16, #0x0
  403ebc:	br	x17

0000000000403ec0 <memcpy@plt>:
  403ec0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403ec4:	ldr	x17, [x16, #8]
  403ec8:	add	x16, x16, #0x8
  403ecc:	br	x17

0000000000403ed0 <memmove@plt>:
  403ed0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403ed4:	ldr	x17, [x16, #16]
  403ed8:	add	x16, x16, #0x10
  403edc:	br	x17

0000000000403ee0 <_exit@plt>:
  403ee0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403ee4:	ldr	x17, [x16, #24]
  403ee8:	add	x16, x16, #0x18
  403eec:	br	x17

0000000000403ef0 <getcwd@plt>:
  403ef0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403ef4:	ldr	x17, [x16, #32]
  403ef8:	add	x16, x16, #0x20
  403efc:	br	x17

0000000000403f00 <setuid@plt>:
  403f00:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403f04:	ldr	x17, [x16, #40]
  403f08:	add	x16, x16, #0x28
  403f0c:	br	x17

0000000000403f10 <strtok@plt>:
  403f10:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403f14:	ldr	x17, [x16, #48]
  403f18:	add	x16, x16, #0x30
  403f1c:	br	x17

0000000000403f20 <fwrite_unlocked@plt>:
  403f20:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403f24:	ldr	x17, [x16, #56]
  403f28:	add	x16, x16, #0x38
  403f2c:	br	x17

0000000000403f30 <strtoul@plt>:
  403f30:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403f34:	ldr	x17, [x16, #64]
  403f38:	add	x16, x16, #0x40
  403f3c:	br	x17

0000000000403f40 <strlen@plt>:
  403f40:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403f44:	ldr	x17, [x16, #72]
  403f48:	add	x16, x16, #0x48
  403f4c:	br	x17

0000000000403f50 <fputs@plt>:
  403f50:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403f54:	ldr	x17, [x16, #80]
  403f58:	add	x16, x16, #0x50
  403f5c:	br	x17

0000000000403f60 <__sprintf_chk@plt>:
  403f60:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403f64:	ldr	x17, [x16, #88]
  403f68:	add	x16, x16, #0x58
  403f6c:	br	x17

0000000000403f70 <exit@plt>:
  403f70:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403f74:	ldr	x17, [x16, #96]
  403f78:	add	x16, x16, #0x60
  403f7c:	br	x17

0000000000403f80 <raise@plt>:
  403f80:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403f84:	ldr	x17, [x16, #104]
  403f88:	add	x16, x16, #0x68
  403f8c:	br	x17

0000000000403f90 <dup@plt>:
  403f90:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403f94:	ldr	x17, [x16, #112]
  403f98:	add	x16, x16, #0x70
  403f9c:	br	x17

0000000000403fa0 <error@plt>:
  403fa0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403fa4:	ldr	x17, [x16, #120]
  403fa8:	add	x16, x16, #0x78
  403fac:	br	x17

0000000000403fb0 <fchdir@plt>:
  403fb0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403fb4:	ldr	x17, [x16, #128]
  403fb8:	add	x16, x16, #0x80
  403fbc:	br	x17

0000000000403fc0 <rpmatch@plt>:
  403fc0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403fc4:	ldr	x17, [x16, #136]
  403fc8:	add	x16, x16, #0x88
  403fcc:	br	x17

0000000000403fd0 <execl@plt>:
  403fd0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403fd4:	ldr	x17, [x16, #144]
  403fd8:	add	x16, x16, #0x90
  403fdc:	br	x17

0000000000403fe0 <flockfile@plt>:
  403fe0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403fe4:	ldr	x17, [x16, #152]
  403fe8:	add	x16, x16, #0x98
  403fec:	br	x17

0000000000403ff0 <wctype@plt>:
  403ff0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  403ff4:	ldr	x17, [x16, #160]
  403ff8:	add	x16, x16, #0xa0
  403ffc:	br	x17

0000000000404000 <sigprocmask@plt>:
  404000:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404004:	ldr	x17, [x16, #168]
  404008:	add	x16, x16, #0xa8
  40400c:	br	x17

0000000000404010 <strnlen@plt>:
  404010:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404014:	ldr	x17, [x16, #176]
  404018:	add	x16, x16, #0xb0
  40401c:	br	x17

0000000000404020 <geteuid@plt>:
  404020:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404024:	ldr	x17, [x16, #184]
  404028:	add	x16, x16, #0xb8
  40402c:	br	x17

0000000000404030 <linkat@plt>:
  404030:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404034:	ldr	x17, [x16, #192]
  404038:	add	x16, x16, #0xc0
  40403c:	br	x17

0000000000404040 <localtime_r@plt>:
  404040:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404044:	ldr	x17, [x16, #200]
  404048:	add	x16, x16, #0xc8
  40404c:	br	x17

0000000000404050 <setenv@plt>:
  404050:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404054:	ldr	x17, [x16, #208]
  404058:	add	x16, x16, #0xd0
  40405c:	br	x17

0000000000404060 <getgrnam@plt>:
  404060:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404064:	ldr	x17, [x16, #216]
  404068:	add	x16, x16, #0xd8
  40406c:	br	x17

0000000000404070 <getuid@plt>:
  404070:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404074:	ldr	x17, [x16, #224]
  404078:	add	x16, x16, #0xe0
  40407c:	br	x17

0000000000404080 <pipe@plt>:
  404080:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404084:	ldr	x17, [x16, #232]
  404088:	add	x16, x16, #0xe8
  40408c:	br	x17

0000000000404090 <opendir@plt>:
  404090:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404094:	ldr	x17, [x16, #240]
  404098:	add	x16, x16, #0xf0
  40409c:	br	x17

00000000004040a0 <strftime@plt>:
  4040a0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4040a4:	ldr	x17, [x16, #248]
  4040a8:	add	x16, x16, #0xf8
  4040ac:	br	x17

00000000004040b0 <unlinkat@plt>:
  4040b0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4040b4:	ldr	x17, [x16, #256]
  4040b8:	add	x16, x16, #0x100
  4040bc:	br	x17

00000000004040c0 <fputc@plt>:
  4040c0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4040c4:	ldr	x17, [x16, #264]
  4040c8:	add	x16, x16, #0x108
  4040cc:	br	x17

00000000004040d0 <iswcntrl@plt>:
  4040d0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4040d4:	ldr	x17, [x16, #272]
  4040d8:	add	x16, x16, #0x110
  4040dc:	br	x17

00000000004040e0 <clock_gettime@plt>:
  4040e0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4040e4:	ldr	x17, [x16, #280]
  4040e8:	add	x16, x16, #0x118
  4040ec:	br	x17

00000000004040f0 <qsort@plt>:
  4040f0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4040f4:	ldr	x17, [x16, #288]
  4040f8:	add	x16, x16, #0x120
  4040fc:	br	x17

0000000000404100 <pathconf@plt>:
  404100:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404104:	ldr	x17, [x16, #296]
  404108:	add	x16, x16, #0x128
  40410c:	br	x17

0000000000404110 <fork@plt>:
  404110:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404114:	ldr	x17, [x16, #304]
  404118:	add	x16, x16, #0x130
  40411c:	br	x17

0000000000404120 <lseek@plt>:
  404120:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404124:	ldr	x17, [x16, #312]
  404128:	add	x16, x16, #0x138
  40412c:	br	x17

0000000000404130 <__fpending@plt>:
  404130:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404134:	ldr	x17, [x16, #320]
  404138:	add	x16, x16, #0x140
  40413c:	br	x17

0000000000404140 <__ctype_tolower_loc@plt>:
  404140:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404144:	ldr	x17, [x16, #328]
  404148:	add	x16, x16, #0x148
  40414c:	br	x17

0000000000404150 <localeconv@plt>:
  404150:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404154:	ldr	x17, [x16, #336]
  404158:	add	x16, x16, #0x150
  40415c:	br	x17

0000000000404160 <stpcpy@plt>:
  404160:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404164:	ldr	x17, [x16, #344]
  404168:	add	x16, x16, #0x158
  40416c:	br	x17

0000000000404170 <fileno@plt>:
  404170:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404174:	ldr	x17, [x16, #352]
  404178:	add	x16, x16, #0x160
  40417c:	br	x17

0000000000404180 <localtime@plt>:
  404180:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404184:	ldr	x17, [x16, #360]
  404188:	add	x16, x16, #0x168
  40418c:	br	x17

0000000000404190 <__memcpy_chk@plt>:
  404190:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404194:	ldr	x17, [x16, #368]
  404198:	add	x16, x16, #0x170
  40419c:	br	x17

00000000004041a0 <mkdirat@plt>:
  4041a0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4041a4:	ldr	x17, [x16, #376]
  4041a8:	add	x16, x16, #0x178
  4041ac:	br	x17

00000000004041b0 <signal@plt>:
  4041b0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4041b4:	ldr	x17, [x16, #384]
  4041b8:	add	x16, x16, #0x180
  4041bc:	br	x17

00000000004041c0 <acl_delete_def_file@plt>:
  4041c0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4041c4:	ldr	x17, [x16, #392]
  4041c8:	add	x16, x16, #0x188
  4041cc:	br	x17

00000000004041d0 <__snprintf_chk@plt>:
  4041d0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4041d4:	ldr	x17, [x16, #400]
  4041d8:	add	x16, x16, #0x190
  4041dc:	br	x17

00000000004041e0 <fclose@plt>:
  4041e0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4041e4:	ldr	x17, [x16, #408]
  4041e8:	add	x16, x16, #0x198
  4041ec:	br	x17

00000000004041f0 <fsync@plt>:
  4041f0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4041f4:	ldr	x17, [x16, #416]
  4041f8:	add	x16, x16, #0x1a0
  4041fc:	br	x17

0000000000404200 <getpid@plt>:
  404200:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404204:	ldr	x17, [x16, #424]
  404208:	add	x16, x16, #0x1a8
  40420c:	br	x17

0000000000404210 <nl_langinfo@plt>:
  404210:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404214:	ldr	x17, [x16, #432]
  404218:	add	x16, x16, #0x1b0
  40421c:	br	x17

0000000000404220 <fopen@plt>:
  404220:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404224:	ldr	x17, [x16, #440]
  404228:	add	x16, x16, #0x1b8
  40422c:	br	x17

0000000000404230 <__vsnprintf_chk@plt>:
  404230:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404234:	ldr	x17, [x16, #448]
  404238:	add	x16, x16, #0x1c0
  40423c:	br	x17

0000000000404240 <iswctype@plt>:
  404240:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404244:	ldr	x17, [x16, #456]
  404248:	add	x16, x16, #0x1c8
  40424c:	br	x17

0000000000404250 <malloc@plt>:
  404250:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404254:	ldr	x17, [x16, #464]
  404258:	add	x16, x16, #0x1d0
  40425c:	br	x17

0000000000404260 <wcwidth@plt>:
  404260:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404264:	ldr	x17, [x16, #472]
  404268:	add	x16, x16, #0x1d8
  40426c:	br	x17

0000000000404270 <funlockfile@plt>:
  404270:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404274:	ldr	x17, [x16, #480]
  404278:	add	x16, x16, #0x1e0
  40427c:	br	x17

0000000000404280 <open@plt>:
  404280:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404284:	ldr	x17, [x16, #488]
  404288:	add	x16, x16, #0x1e8
  40428c:	br	x17

0000000000404290 <__vasprintf_chk@plt>:
  404290:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404294:	ldr	x17, [x16, #496]
  404298:	add	x16, x16, #0x1f0
  40429c:	br	x17

00000000004042a0 <tzset@plt>:
  4042a0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4042a4:	ldr	x17, [x16, #504]
  4042a8:	add	x16, x16, #0x1f8
  4042ac:	br	x17

00000000004042b0 <__strcpy_chk@plt>:
  4042b0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4042b4:	ldr	x17, [x16, #512]
  4042b8:	add	x16, x16, #0x200
  4042bc:	br	x17

00000000004042c0 <__isoc99_fscanf@plt>:
  4042c0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4042c4:	ldr	x17, [x16, #520]
  4042c8:	add	x16, x16, #0x208
  4042cc:	br	x17

00000000004042d0 <__strtol_internal@plt>:
  4042d0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4042d4:	ldr	x17, [x16, #528]
  4042d8:	add	x16, x16, #0x210
  4042dc:	br	x17

00000000004042e0 <sigemptyset@plt>:
  4042e0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4042e4:	ldr	x17, [x16, #536]
  4042e8:	add	x16, x16, #0x218
  4042ec:	br	x17

00000000004042f0 <futimens@plt>:
  4042f0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4042f4:	ldr	x17, [x16, #544]
  4042f8:	add	x16, x16, #0x220
  4042fc:	br	x17

0000000000404300 <strncmp@plt>:
  404300:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404304:	ldr	x17, [x16, #552]
  404308:	add	x16, x16, #0x228
  40430c:	br	x17

0000000000404310 <bindtextdomain@plt>:
  404310:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404314:	ldr	x17, [x16, #560]
  404318:	add	x16, x16, #0x230
  40431c:	br	x17

0000000000404320 <__libc_start_main@plt>:
  404320:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404324:	ldr	x17, [x16, #568]
  404328:	add	x16, x16, #0x238
  40432c:	br	x17

0000000000404330 <setxattr@plt>:
  404330:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404334:	ldr	x17, [x16, #576]
  404338:	add	x16, x16, #0x240
  40433c:	br	x17

0000000000404340 <strcat@plt>:
  404340:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404344:	ldr	x17, [x16, #584]
  404348:	add	x16, x16, #0x248
  40434c:	br	x17

0000000000404350 <__printf_chk@plt>:
  404350:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404354:	ldr	x17, [x16, #592]
  404358:	add	x16, x16, #0x250
  40435c:	br	x17

0000000000404360 <memset@plt>:
  404360:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404364:	ldr	x17, [x16, #600]
  404368:	add	x16, x16, #0x258
  40436c:	br	x17

0000000000404370 <fdopen@plt>:
  404370:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404374:	ldr	x17, [x16, #608]
  404378:	add	x16, x16, #0x260
  40437c:	br	x17

0000000000404380 <gettimeofday@plt>:
  404380:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404384:	ldr	x17, [x16, #616]
  404388:	add	x16, x16, #0x268
  40438c:	br	x17

0000000000404390 <getpwnam@plt>:
  404390:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404394:	ldr	x17, [x16, #624]
  404398:	add	x16, x16, #0x270
  40439c:	br	x17

00000000004043a0 <gmtime_r@plt>:
  4043a0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4043a4:	ldr	x17, [x16, #632]
  4043a8:	add	x16, x16, #0x278
  4043ac:	br	x17

00000000004043b0 <sleep@plt>:
  4043b0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4043b4:	ldr	x17, [x16, #640]
  4043b8:	add	x16, x16, #0x280
  4043bc:	br	x17

00000000004043c0 <fchmod@plt>:
  4043c0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4043c4:	ldr	x17, [x16, #648]
  4043c8:	add	x16, x16, #0x288
  4043cc:	br	x17

00000000004043d0 <__xmknodat@plt>:
  4043d0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4043d4:	ldr	x17, [x16, #656]
  4043d8:	add	x16, x16, #0x290
  4043dc:	br	x17

00000000004043e0 <strerror_r@plt>:
  4043e0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4043e4:	ldr	x17, [x16, #664]
  4043e8:	add	x16, x16, #0x298
  4043ec:	br	x17

00000000004043f0 <__vfprintf_chk@plt>:
  4043f0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4043f4:	ldr	x17, [x16, #672]
  4043f8:	add	x16, x16, #0x2a0
  4043fc:	br	x17

0000000000404400 <__strtoul_internal@plt>:
  404400:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404404:	ldr	x17, [x16, #680]
  404408:	add	x16, x16, #0x2a8
  40440c:	br	x17

0000000000404410 <calloc@plt>:
  404410:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404414:	ldr	x17, [x16, #688]
  404418:	add	x16, x16, #0x2b0
  40441c:	br	x17

0000000000404420 <lsetxattr@plt>:
  404420:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404424:	ldr	x17, [x16, #696]
  404428:	add	x16, x16, #0x2b8
  40442c:	br	x17

0000000000404430 <listxattr@plt>:
  404430:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404434:	ldr	x17, [x16, #704]
  404438:	add	x16, x16, #0x2c0
  40443c:	br	x17

0000000000404440 <bcmp@plt>:
  404440:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404444:	ldr	x17, [x16, #712]
  404448:	add	x16, x16, #0x2c8
  40444c:	br	x17

0000000000404450 <execv@plt>:
  404450:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404454:	ldr	x17, [x16, #720]
  404458:	add	x16, x16, #0x2d0
  40445c:	br	x17

0000000000404460 <strcasecmp@plt>:
  404460:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404464:	ldr	x17, [x16, #728]
  404468:	add	x16, x16, #0x2d8
  40446c:	br	x17

0000000000404470 <gmtime@plt>:
  404470:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404474:	ldr	x17, [x16, #736]
  404478:	add	x16, x16, #0x2e0
  40447c:	br	x17

0000000000404480 <readdir@plt>:
  404480:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404484:	ldr	x17, [x16, #744]
  404488:	add	x16, x16, #0x2e8
  40448c:	br	x17

0000000000404490 <realloc@plt>:
  404490:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404494:	ldr	x17, [x16, #752]
  404498:	add	x16, x16, #0x2f0
  40449c:	br	x17

00000000004044a0 <__ctype_toupper_loc@plt>:
  4044a0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4044a4:	ldr	x17, [x16, #760]
  4044a8:	add	x16, x16, #0x2f8
  4044ac:	br	x17

00000000004044b0 <acl_set_file@plt>:
  4044b0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4044b4:	ldr	x17, [x16, #768]
  4044b8:	add	x16, x16, #0x300
  4044bc:	br	x17

00000000004044c0 <getpagesize@plt>:
  4044c0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4044c4:	ldr	x17, [x16, #776]
  4044c8:	add	x16, x16, #0x308
  4044cc:	br	x17

00000000004044d0 <lgetxattr@plt>:
  4044d0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4044d4:	ldr	x17, [x16, #784]
  4044d8:	add	x16, x16, #0x310
  4044dc:	br	x17

00000000004044e0 <strdup@plt>:
  4044e0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4044e4:	ldr	x17, [x16, #792]
  4044e8:	add	x16, x16, #0x318
  4044ec:	br	x17

00000000004044f0 <closedir@plt>:
  4044f0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4044f4:	ldr	x17, [x16, #800]
  4044f8:	add	x16, x16, #0x320
  4044fc:	br	x17

0000000000404500 <getc_unlocked@plt>:
  404500:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404504:	ldr	x17, [x16, #808]
  404508:	add	x16, x16, #0x328
  40450c:	br	x17

0000000000404510 <strerror@plt>:
  404510:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404514:	ldr	x17, [x16, #816]
  404518:	add	x16, x16, #0x330
  40451c:	br	x17

0000000000404520 <close@plt>:
  404520:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404524:	ldr	x17, [x16, #824]
  404528:	add	x16, x16, #0x338
  40452c:	br	x17

0000000000404530 <strrchr@plt>:
  404530:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404534:	ldr	x17, [x16, #832]
  404538:	add	x16, x16, #0x340
  40453c:	br	x17

0000000000404540 <acl_to_text@plt>:
  404540:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404544:	ldr	x17, [x16, #840]
  404548:	add	x16, x16, #0x348
  40454c:	br	x17

0000000000404550 <__gmon_start__@plt>:
  404550:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404554:	ldr	x17, [x16, #848]
  404558:	add	x16, x16, #0x350
  40455c:	br	x17

0000000000404560 <mktime@plt>:
  404560:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404564:	ldr	x17, [x16, #856]
  404568:	add	x16, x16, #0x358
  40456c:	br	x17

0000000000404570 <fdopendir@plt>:
  404570:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404574:	ldr	x17, [x16, #864]
  404578:	add	x16, x16, #0x360
  40457c:	br	x17

0000000000404580 <write@plt>:
  404580:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404584:	ldr	x17, [x16, #872]
  404588:	add	x16, x16, #0x368
  40458c:	br	x17

0000000000404590 <btowc@plt>:
  404590:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404594:	ldr	x17, [x16, #880]
  404598:	add	x16, x16, #0x370
  40459c:	br	x17

00000000004045a0 <mkdtemp@plt>:
  4045a0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4045a4:	ldr	x17, [x16, #888]
  4045a8:	add	x16, x16, #0x378
  4045ac:	br	x17

00000000004045b0 <abort@plt>:
  4045b0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4045b4:	ldr	x17, [x16, #896]
  4045b8:	add	x16, x16, #0x380
  4045bc:	br	x17

00000000004045c0 <setgid@plt>:
  4045c0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4045c4:	ldr	x17, [x16, #904]
  4045c8:	add	x16, x16, #0x388
  4045cc:	br	x17

00000000004045d0 <mbsinit@plt>:
  4045d0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4045d4:	ldr	x17, [x16, #912]
  4045d8:	add	x16, x16, #0x390
  4045dc:	br	x17

00000000004045e0 <__overflow@plt>:
  4045e0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4045e4:	ldr	x17, [x16, #920]
  4045e8:	add	x16, x16, #0x398
  4045ec:	br	x17

00000000004045f0 <access@plt>:
  4045f0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4045f4:	ldr	x17, [x16, #928]
  4045f8:	add	x16, x16, #0x3a0
  4045fc:	br	x17

0000000000404600 <fpathconf@plt>:
  404600:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404604:	ldr	x17, [x16, #936]
  404608:	add	x16, x16, #0x3a8
  40460c:	br	x17

0000000000404610 <getxattr@plt>:
  404610:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404614:	ldr	x17, [x16, #944]
  404618:	add	x16, x16, #0x3b0
  40461c:	br	x17

0000000000404620 <memcmp@plt>:
  404620:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404624:	ldr	x17, [x16, #952]
  404628:	add	x16, x16, #0x3b8
  40462c:	br	x17

0000000000404630 <textdomain@plt>:
  404630:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404634:	ldr	x17, [x16, #960]
  404638:	add	x16, x16, #0x3c0
  40463c:	br	x17

0000000000404640 <execvp@plt>:
  404640:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404644:	ldr	x17, [x16, #968]
  404648:	add	x16, x16, #0x3c8
  40464c:	br	x17

0000000000404650 <__fprintf_chk@plt>:
  404650:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404654:	ldr	x17, [x16, #976]
  404658:	add	x16, x16, #0x3d0
  40465c:	br	x17

0000000000404660 <strcmp@plt>:
  404660:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404664:	ldr	x17, [x16, #984]
  404668:	add	x16, x16, #0x3d8
  40466c:	br	x17

0000000000404670 <getpwuid@plt>:
  404670:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404674:	ldr	x17, [x16, #992]
  404678:	add	x16, x16, #0x3e0
  40467c:	br	x17

0000000000404680 <iconv@plt>:
  404680:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404684:	ldr	x17, [x16, #1000]
  404688:	add	x16, x16, #0x3e8
  40468c:	br	x17

0000000000404690 <__ctype_b_loc@plt>:
  404690:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404694:	ldr	x17, [x16, #1008]
  404698:	add	x16, x16, #0x3f0
  40469c:	br	x17

00000000004046a0 <rewinddir@plt>:
  4046a0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4046a4:	ldr	x17, [x16, #1016]
  4046a8:	add	x16, x16, #0x3f8
  4046ac:	br	x17

00000000004046b0 <acl_get_file@plt>:
  4046b0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4046b4:	ldr	x17, [x16, #1024]
  4046b8:	add	x16, x16, #0x400
  4046bc:	br	x17

00000000004046c0 <strtol@plt>:
  4046c0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4046c4:	ldr	x17, [x16, #1032]
  4046c8:	add	x16, x16, #0x408
  4046cc:	br	x17

00000000004046d0 <fseeko@plt>:
  4046d0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4046d4:	ldr	x17, [x16, #1040]
  4046d8:	add	x16, x16, #0x410
  4046dc:	br	x17

00000000004046e0 <sigwait@plt>:
  4046e0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4046e4:	ldr	x17, [x16, #1048]
  4046e8:	add	x16, x16, #0x418
  4046ec:	br	x17

00000000004046f0 <chdir@plt>:
  4046f0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4046f4:	ldr	x17, [x16, #1056]
  4046f8:	add	x16, x16, #0x420
  4046fc:	br	x17

0000000000404700 <free@plt>:
  404700:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404704:	ldr	x17, [x16, #1064]
  404708:	add	x16, x16, #0x428
  40470c:	br	x17

0000000000404710 <__strcat_chk@plt>:
  404710:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404714:	ldr	x17, [x16, #1072]
  404718:	add	x16, x16, #0x430
  40471c:	br	x17

0000000000404720 <renameat2@plt>:
  404720:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404724:	ldr	x17, [x16, #1080]
  404728:	add	x16, x16, #0x438
  40472c:	br	x17

0000000000404730 <__ctype_get_mb_cur_max@plt>:
  404730:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404734:	ldr	x17, [x16, #1088]
  404738:	add	x16, x16, #0x440
  40473c:	br	x17

0000000000404740 <getgid@plt>:
  404740:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404744:	ldr	x17, [x16, #1096]
  404748:	add	x16, x16, #0x448
  40474c:	br	x17

0000000000404750 <renameat@plt>:
  404750:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404754:	ldr	x17, [x16, #1104]
  404758:	add	x16, x16, #0x450
  40475c:	br	x17

0000000000404760 <fgetxattr@plt>:
  404760:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404764:	ldr	x17, [x16, #1112]
  404768:	add	x16, x16, #0x458
  40476c:	br	x17

0000000000404770 <fchownat@plt>:
  404770:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404774:	ldr	x17, [x16, #1120]
  404778:	add	x16, x16, #0x460
  40477c:	br	x17

0000000000404780 <strndup@plt>:
  404780:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404784:	ldr	x17, [x16, #1128]
  404788:	add	x16, x16, #0x468
  40478c:	br	x17

0000000000404790 <strspn@plt>:
  404790:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404794:	ldr	x17, [x16, #1136]
  404798:	add	x16, x16, #0x470
  40479c:	br	x17

00000000004047a0 <strchr@plt>:
  4047a0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4047a4:	ldr	x17, [x16, #1144]
  4047a8:	add	x16, x16, #0x478
  4047ac:	br	x17

00000000004047b0 <globfree@plt>:
  4047b0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4047b4:	ldr	x17, [x16, #1152]
  4047b8:	add	x16, x16, #0x480
  4047bc:	br	x17

00000000004047c0 <memrchr@plt>:
  4047c0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4047c4:	ldr	x17, [x16, #1160]
  4047c8:	add	x16, x16, #0x488
  4047cc:	br	x17

00000000004047d0 <utimensat@plt>:
  4047d0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4047d4:	ldr	x17, [x16, #1168]
  4047d8:	add	x16, x16, #0x490
  4047dc:	br	x17

00000000004047e0 <fwrite@plt>:
  4047e0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4047e4:	ldr	x17, [x16, #1176]
  4047e8:	add	x16, x16, #0x498
  4047ec:	br	x17

00000000004047f0 <fnmatch@plt>:
  4047f0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4047f4:	ldr	x17, [x16, #1184]
  4047f8:	add	x16, x16, #0x4a0
  4047fc:	br	x17

0000000000404800 <fflush_unlocked@plt>:
  404800:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404804:	ldr	x17, [x16, #1192]
  404808:	add	x16, x16, #0x4a8
  40480c:	br	x17

0000000000404810 <fcntl@plt>:
  404810:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404814:	ldr	x17, [x16, #1200]
  404818:	add	x16, x16, #0x4b0
  40481c:	br	x17

0000000000404820 <dcngettext@plt>:
  404820:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404824:	ldr	x17, [x16, #1208]
  404828:	add	x16, x16, #0x4b8
  40482c:	br	x17

0000000000404830 <ftello@plt>:
  404830:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404834:	ldr	x17, [x16, #1216]
  404838:	add	x16, x16, #0x4c0
  40483c:	br	x17

0000000000404840 <strcpy@plt>:
  404840:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404844:	ldr	x17, [x16, #1224]
  404848:	add	x16, x16, #0x4c8
  40484c:	br	x17

0000000000404850 <dirfd@plt>:
  404850:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404854:	ldr	x17, [x16, #1232]
  404858:	add	x16, x16, #0x4d0
  40485c:	br	x17

0000000000404860 <unsetenv@plt>:
  404860:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404864:	ldr	x17, [x16, #1240]
  404868:	add	x16, x16, #0x4d8
  40486c:	br	x17

0000000000404870 <iconv_open@plt>:
  404870:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404874:	ldr	x17, [x16, #1248]
  404878:	add	x16, x16, #0x4e0
  40487c:	br	x17

0000000000404880 <read@plt>:
  404880:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404884:	ldr	x17, [x16, #1256]
  404888:	add	x16, x16, #0x4e8
  40488c:	br	x17

0000000000404890 <memchr@plt>:
  404890:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404894:	ldr	x17, [x16, #1264]
  404898:	add	x16, x16, #0x4f0
  40489c:	br	x17

00000000004048a0 <isatty@plt>:
  4048a0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4048a4:	ldr	x17, [x16, #1272]
  4048a8:	add	x16, x16, #0x4f8
  4048ac:	br	x17

00000000004048b0 <__mempcpy_chk@plt>:
  4048b0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4048b4:	ldr	x17, [x16, #1280]
  4048b8:	add	x16, x16, #0x500
  4048bc:	br	x17

00000000004048c0 <flistxattr@plt>:
  4048c0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4048c4:	ldr	x17, [x16, #1288]
  4048c8:	add	x16, x16, #0x508
  4048cc:	br	x17

00000000004048d0 <iswalnum@plt>:
  4048d0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4048d4:	ldr	x17, [x16, #1296]
  4048d8:	add	x16, x16, #0x510
  4048dc:	br	x17

00000000004048e0 <__fxstat@plt>:
  4048e0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4048e4:	ldr	x17, [x16, #1304]
  4048e8:	add	x16, x16, #0x518
  4048ec:	br	x17

00000000004048f0 <strchrnul@plt>:
  4048f0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4048f4:	ldr	x17, [x16, #1312]
  4048f8:	add	x16, x16, #0x520
  4048fc:	br	x17

0000000000404900 <dcgettext@plt>:
  404900:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404904:	ldr	x17, [x16, #1320]
  404908:	add	x16, x16, #0x528
  40490c:	br	x17

0000000000404910 <mkfifoat@plt>:
  404910:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404914:	ldr	x17, [x16, #1328]
  404918:	add	x16, x16, #0x530
  40491c:	br	x17

0000000000404920 <fputs_unlocked@plt>:
  404920:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404924:	ldr	x17, [x16, #1336]
  404928:	add	x16, x16, #0x538
  40492c:	br	x17

0000000000404930 <acl_from_text@plt>:
  404930:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404934:	ldr	x17, [x16, #1344]
  404938:	add	x16, x16, #0x540
  40493c:	br	x17

0000000000404940 <glob@plt>:
  404940:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404944:	ldr	x17, [x16, #1352]
  404948:	add	x16, x16, #0x548
  40494c:	br	x17

0000000000404950 <ftruncate@plt>:
  404950:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404954:	ldr	x17, [x16, #1360]
  404958:	add	x16, x16, #0x550
  40495c:	br	x17

0000000000404960 <llistxattr@plt>:
  404960:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404964:	ldr	x17, [x16, #1368]
  404968:	add	x16, x16, #0x558
  40496c:	br	x17

0000000000404970 <dup2@plt>:
  404970:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404974:	ldr	x17, [x16, #1376]
  404978:	add	x16, x16, #0x560
  40497c:	br	x17

0000000000404980 <symlinkat@plt>:
  404980:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404984:	ldr	x17, [x16, #1384]
  404988:	add	x16, x16, #0x568
  40498c:	br	x17

0000000000404990 <sigaddset@plt>:
  404990:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404994:	ldr	x17, [x16, #1392]
  404998:	add	x16, x16, #0x570
  40499c:	br	x17

00000000004049a0 <towupper@plt>:
  4049a0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4049a4:	ldr	x17, [x16, #1400]
  4049a8:	add	x16, x16, #0x578
  4049ac:	br	x17

00000000004049b0 <iswprint@plt>:
  4049b0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4049b4:	ldr	x17, [x16, #1408]
  4049b8:	add	x16, x16, #0x580
  4049bc:	br	x17

00000000004049c0 <umask@plt>:
  4049c0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4049c4:	ldr	x17, [x16, #1416]
  4049c8:	add	x16, x16, #0x588
  4049cc:	br	x17

00000000004049d0 <strcspn@plt>:
  4049d0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4049d4:	ldr	x17, [x16, #1424]
  4049d8:	add	x16, x16, #0x590
  4049dc:	br	x17

00000000004049e0 <faccessat@plt>:
  4049e0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4049e4:	ldr	x17, [x16, #1432]
  4049e8:	add	x16, x16, #0x598
  4049ec:	br	x17

00000000004049f0 <openat@plt>:
  4049f0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  4049f4:	ldr	x17, [x16, #1440]
  4049f8:	add	x16, x16, #0x5a0
  4049fc:	br	x17

0000000000404a00 <__assert_fail@plt>:
  404a00:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404a04:	ldr	x17, [x16, #1448]
  404a08:	add	x16, x16, #0x5a8
  404a0c:	br	x17

0000000000404a10 <__errno_location@plt>:
  404a10:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404a14:	ldr	x17, [x16, #1456]
  404a18:	add	x16, x16, #0x5b0
  404a1c:	br	x17

0000000000404a20 <execlp@plt>:
  404a20:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404a24:	ldr	x17, [x16, #1464]
  404a28:	add	x16, x16, #0x5b8
  404a2c:	br	x17

0000000000404a30 <getenv@plt>:
  404a30:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404a34:	ldr	x17, [x16, #1472]
  404a38:	add	x16, x16, #0x5c0
  404a3c:	br	x17

0000000000404a40 <__xstat@plt>:
  404a40:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404a44:	ldr	x17, [x16, #1480]
  404a48:	add	x16, x16, #0x5c8
  404a4c:	br	x17

0000000000404a50 <getgrgid@plt>:
  404a50:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404a54:	ldr	x17, [x16, #1488]
  404a58:	add	x16, x16, #0x5d0
  404a5c:	br	x17

0000000000404a60 <fchmodat@plt>:
  404a60:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404a64:	ldr	x17, [x16, #1496]
  404a68:	add	x16, x16, #0x5d8
  404a6c:	br	x17

0000000000404a70 <__getdelim@plt>:
  404a70:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404a74:	ldr	x17, [x16, #1504]
  404a78:	add	x16, x16, #0x5e0
  404a7c:	br	x17

0000000000404a80 <timegm@plt>:
  404a80:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404a84:	ldr	x17, [x16, #1512]
  404a88:	add	x16, x16, #0x5e8
  404a8c:	br	x17

0000000000404a90 <waitpid@plt>:
  404a90:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404a94:	ldr	x17, [x16, #1520]
  404a98:	add	x16, x16, #0x5f0
  404a9c:	br	x17

0000000000404aa0 <fchown@plt>:
  404aa0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404aa4:	ldr	x17, [x16, #1528]
  404aa8:	add	x16, x16, #0x5f8
  404aac:	br	x17

0000000000404ab0 <towlower@plt>:
  404ab0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404ab4:	ldr	x17, [x16, #1536]
  404ab8:	add	x16, x16, #0x600
  404abc:	br	x17

0000000000404ac0 <__uflow@plt>:
  404ac0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404ac4:	ldr	x17, [x16, #1544]
  404ac8:	add	x16, x16, #0x608
  404acc:	br	x17

0000000000404ad0 <creat@plt>:
  404ad0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404ad4:	ldr	x17, [x16, #1552]
  404ad8:	add	x16, x16, #0x610
  404adc:	br	x17

0000000000404ae0 <gethostbyname@plt>:
  404ae0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404ae4:	ldr	x17, [x16, #1560]
  404ae8:	add	x16, x16, #0x618
  404aec:	br	x17

0000000000404af0 <ioctl@plt>:
  404af0:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404af4:	ldr	x17, [x16, #1568]
  404af8:	add	x16, x16, #0x620
  404afc:	br	x17

0000000000404b00 <setlocale@plt>:
  404b00:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404b04:	ldr	x17, [x16, #1576]
  404b08:	add	x16, x16, #0x628
  404b0c:	br	x17

0000000000404b10 <acl_free@plt>:
  404b10:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404b14:	ldr	x17, [x16, #1584]
  404b18:	add	x16, x16, #0x630
  404b1c:	br	x17

0000000000404b20 <__fxstatat@plt>:
  404b20:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404b24:	ldr	x17, [x16, #1592]
  404b28:	add	x16, x16, #0x638
  404b2c:	br	x17

0000000000404b30 <readlinkat@plt>:
  404b30:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404b34:	ldr	x17, [x16, #1600]
  404b38:	add	x16, x16, #0x640
  404b3c:	br	x17

0000000000404b40 <wcrtomb@plt>:
  404b40:	adrp	x16, 477000 <mbrtowc@GLIBC_2.17>
  404b44:	ldr	x17, [x16, #1608]
  404b48:	add	x16, x16, #0x648
  404b4c:	br	x17

Disassembly of section .text:

0000000000404b50 <argp_help@@Base-0x2fd60>:
  404b50:	mov	x29, #0x0                   	// #0
  404b54:	mov	x30, #0x0                   	// #0
  404b58:	mov	x5, x0
  404b5c:	ldr	x1, [sp]
  404b60:	add	x2, sp, #0x8
  404b64:	mov	x6, sp
  404b68:	movz	x0, #0x0, lsl #48
  404b6c:	movk	x0, #0x0, lsl #32
  404b70:	movk	x0, #0x42, lsl #16
  404b74:	movk	x0, #0x3164
  404b78:	movz	x3, #0x0, lsl #48
  404b7c:	movk	x3, #0x0, lsl #32
  404b80:	movk	x3, #0x45, lsl #16
  404b84:	movk	x3, #0xaf78
  404b88:	movz	x4, #0x0, lsl #48
  404b8c:	movk	x4, #0x0, lsl #32
  404b90:	movk	x4, #0x45, lsl #16
  404b94:	movk	x4, #0xaff8
  404b98:	bl	404320 <__libc_start_main@plt>
  404b9c:	bl	4045b0 <abort@plt>
  404ba0:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x2f4b0>
  404ba4:	ldr	x0, [x0, #4064]
  404ba8:	cbz	x0, 404bb0 <wcrtomb@plt+0x70>
  404bac:	b	404550 <__gmon_start__@plt>
  404bb0:	ret
  404bb4:	nop
  404bb8:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404bbc:	add	x0, x0, #0x58
  404bc0:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404bc4:	add	x1, x1, #0x58
  404bc8:	cmp	x1, x0
  404bcc:	b.eq	404be4 <wcrtomb@plt+0xa4>  // b.none
  404bd0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  404bd4:	ldr	x1, [x1, #24]
  404bd8:	cbz	x1, 404be4 <wcrtomb@plt+0xa4>
  404bdc:	mov	x16, x1
  404be0:	br	x16
  404be4:	ret
  404be8:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404bec:	add	x0, x0, #0x58
  404bf0:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404bf4:	add	x1, x1, #0x58
  404bf8:	sub	x1, x1, x0
  404bfc:	lsr	x2, x1, #63
  404c00:	add	x1, x2, x1, asr #3
  404c04:	cmp	xzr, x1, asr #1
  404c08:	asr	x1, x1, #1
  404c0c:	b.eq	404c24 <wcrtomb@plt+0xe4>  // b.none
  404c10:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  404c14:	ldr	x2, [x2, #32]
  404c18:	cbz	x2, 404c24 <wcrtomb@plt+0xe4>
  404c1c:	mov	x16, x2
  404c20:	br	x16
  404c24:	ret
  404c28:	stp	x29, x30, [sp, #-32]!
  404c2c:	mov	x29, sp
  404c30:	str	x19, [sp, #16]
  404c34:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404c38:	ldrb	w0, [x19, #136]
  404c3c:	cbnz	w0, 404c4c <wcrtomb@plt+0x10c>
  404c40:	bl	404bb8 <wcrtomb@plt+0x78>
  404c44:	mov	w0, #0x1                   	// #1
  404c48:	strb	w0, [x19, #136]
  404c4c:	ldr	x19, [sp, #16]
  404c50:	ldp	x29, x30, [sp], #32
  404c54:	ret
  404c58:	b	404be8 <wcrtomb@plt+0xa8>
  404c5c:	stp	x29, x30, [sp, #-48]!
  404c60:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404c64:	ldrb	w8, [x8, #3132]
  404c68:	stp	x22, x21, [sp, #16]
  404c6c:	stp	x20, x19, [sp, #32]
  404c70:	mov	x29, sp
  404c74:	cbz	w8, 404cdc <wcrtomb@plt+0x19c>
  404c78:	mov	x21, x0
  404c7c:	mov	w0, #0x30                  	// #48
  404c80:	mov	x19, x2
  404c84:	mov	x20, x1
  404c88:	bl	4459e8 <argp_parse@@Base+0xe13c>
  404c8c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404c90:	ldr	x9, [x8, #144]
  404c94:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404c98:	add	x10, x10, #0x98
  404c9c:	mov	x22, x0
  404ca0:	cmp	x9, #0x0
  404ca4:	csel	x9, x10, x9, eq  // eq = none
  404ca8:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404cac:	str	x0, [x9]
  404cb0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404cb4:	ldr	x10, [x10, #2968]
  404cb8:	ldr	x9, [x9, #2944]
  404cbc:	str	x0, [x8, #144]
  404cc0:	sub	x8, x10, x9
  404cc4:	asr	x8, x8, #9
  404cc8:	stp	xzr, x8, [x0]
  404ccc:	mov	x0, x21
  404cd0:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  404cd4:	stp	x0, x20, [x22, #16]
  404cd8:	stp	x19, xzr, [x22, #32]
  404cdc:	ldp	x20, x19, [sp, #32]
  404ce0:	ldp	x22, x21, [sp, #16]
  404ce4:	ldp	x29, x30, [sp], #48
  404ce8:	ret
  404cec:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404cf0:	add	x0, x0, #0x1f8
  404cf4:	b	4120d8 <wcrtomb@plt+0xd598>
  404cf8:	stp	x29, x30, [sp, #-48]!
  404cfc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404d00:	ldrb	w8, [x8, #3132]
  404d04:	str	x21, [sp, #16]
  404d08:	stp	x20, x19, [sp, #32]
  404d0c:	mov	x29, sp
  404d10:	cbz	w8, 404d74 <wcrtomb@plt+0x234>
  404d14:	ldr	x21, [x0, #136]
  404d18:	ldr	x19, [x0]
  404d1c:	mov	w0, #0x30                  	// #48
  404d20:	bl	4459e8 <argp_parse@@Base+0xe13c>
  404d24:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404d28:	ldr	x9, [x8, #144]
  404d2c:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404d30:	add	x10, x10, #0x98
  404d34:	mov	x20, x0
  404d38:	cmp	x9, #0x0
  404d3c:	csel	x9, x10, x9, eq  // eq = none
  404d40:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404d44:	str	x0, [x9]
  404d48:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404d4c:	ldr	x10, [x10, #2968]
  404d50:	ldr	x9, [x9, #2944]
  404d54:	str	x0, [x8, #144]
  404d58:	sub	x8, x10, x9
  404d5c:	asr	x8, x8, #9
  404d60:	stp	xzr, x8, [x0]
  404d64:	mov	x0, x19
  404d68:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  404d6c:	stp	x0, x21, [x20, #16]
  404d70:	stp	x21, xzr, [x20, #32]
  404d74:	ldp	x20, x19, [sp, #32]
  404d78:	ldr	x21, [sp, #16]
  404d7c:	ldp	x29, x30, [sp], #48
  404d80:	ret
  404d84:	stp	x29, x30, [sp, #-48]!
  404d88:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404d8c:	ldrb	w8, [x8, #3132]
  404d90:	str	x21, [sp, #16]
  404d94:	stp	x20, x19, [sp, #32]
  404d98:	mov	x29, sp
  404d9c:	cbz	w8, 404dd4 <wcrtomb@plt+0x294>
  404da0:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404da4:	ldr	x19, [x20, #152]
  404da8:	cbz	x19, 404dc8 <wcrtomb@plt+0x288>
  404dac:	ldr	x0, [x19, #16]
  404db0:	ldr	x21, [x19]
  404db4:	bl	404700 <free@plt>
  404db8:	mov	x0, x19
  404dbc:	bl	404700 <free@plt>
  404dc0:	mov	x19, x21
  404dc4:	cbnz	x21, 404dac <wcrtomb@plt+0x26c>
  404dc8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404dcc:	str	xzr, [x20, #152]
  404dd0:	str	xzr, [x8, #144]
  404dd4:	ldp	x20, x19, [sp, #32]
  404dd8:	ldr	x21, [sp, #16]
  404ddc:	ldp	x29, x30, [sp], #48
  404de0:	ret
  404de4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404de8:	ldr	x8, [x8, #152]
  404dec:	cbz	x8, 404df4 <wcrtomb@plt+0x2b4>
  404df0:	str	x0, [x8, #32]
  404df4:	ret
  404df8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404dfc:	str	wzr, [x8, #584]
  404e00:	ret
  404e04:	stp	x29, x30, [sp, #-32]!
  404e08:	str	x19, [sp, #16]
  404e0c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404e10:	add	x19, x19, #0xeb8
  404e14:	mov	x0, x19
  404e18:	mov	x29, sp
  404e1c:	bl	43b52c <argp_parse@@Base+0x3c80>
  404e20:	ldr	q0, [x19]
  404e24:	ldr	x19, [sp, #16]
  404e28:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404e2c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404e30:	add	x8, x8, #0xf98
  404e34:	add	x9, x9, #0xf50
  404e38:	str	q0, [x8]
  404e3c:	str	q0, [x9]
  404e40:	ldp	x29, x30, [sp], #32
  404e44:	ret
  404e48:	sub	sp, sp, #0x30
  404e4c:	mov	x0, sp
  404e50:	stp	x29, x30, [sp, #16]
  404e54:	str	x19, [sp, #32]
  404e58:	add	x29, sp, #0x10
  404e5c:	bl	43b52c <argp_parse@@Base+0x3c80>
  404e60:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404e64:	add	x0, x0, #0xf50
  404e68:	ldp	x8, x9, [sp]
  404e6c:	ldp	x10, x11, [x0]
  404e70:	mov	x12, #0xcd6500000000        	// #225833675390976
  404e74:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404e78:	movk	x12, #0x41cd, lsl #48
  404e7c:	sub	x9, x9, x11
  404e80:	ldr	d2, [x19, #592]
  404e84:	fmov	d0, x12
  404e88:	sub	x8, x8, x10
  404e8c:	scvtf	d1, x9
  404e90:	fdiv	d0, d1, d0
  404e94:	scvtf	d1, x8
  404e98:	fadd	d0, d0, d1
  404e9c:	fadd	d0, d2, d0
  404ea0:	str	d0, [x19, #592]
  404ea4:	bl	43b52c <argp_parse@@Base+0x3c80>
  404ea8:	ldr	d0, [x19, #592]
  404eac:	ldr	x19, [sp, #32]
  404eb0:	ldp	x29, x30, [sp, #16]
  404eb4:	add	sp, sp, #0x30
  404eb8:	ret
  404ebc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404ec0:	ldr	x8, [x8, #3960]
  404ec4:	cbz	x8, 404ed0 <wcrtomb@plt+0x390>
  404ec8:	mov	x0, x8
  404ecc:	ret
  404ed0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404ed4:	ldr	w8, [x8, #600]
  404ed8:	cbz	w8, 404f14 <wcrtomb@plt+0x3d4>
  404edc:	adrp	x10, 45b000 <_obstack_memory_used@@Base+0x144b0>
  404ee0:	mov	x9, xzr
  404ee4:	add	x10, x10, #0x88
  404ee8:	str	wzr, [x0]
  404eec:	cmp	x9, #0xb
  404ef0:	b.eq	404f1c <wcrtomb@plt+0x3dc>  // b.none
  404ef4:	ldr	w11, [x10], #24
  404ef8:	add	x9, x9, #0x1
  404efc:	cmp	w11, w8
  404f00:	b.ne	404eec <wcrtomb@plt+0x3ac>  // b.any
  404f04:	str	w9, [x0]
  404f08:	ldur	x8, [x10, #-16]
  404f0c:	mov	x0, x8
  404f10:	ret
  404f14:	mov	x0, xzr
  404f18:	ret
  404f1c:	str	w9, [x0]
  404f20:	mov	x0, xzr
  404f24:	ret
  404f28:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404f2c:	ldr	x8, [x8, #3960]
  404f30:	cbz	x8, 404f3c <wcrtomb@plt+0x3fc>
  404f34:	mov	x0, xzr
  404f38:	ret
  404f3c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404f40:	ldrsw	x9, [x0]
  404f44:	ldr	w10, [x8, #600]
  404f48:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0x144b0>
  404f4c:	mov	w11, #0x18                  	// #24
  404f50:	add	x8, x8, #0x88
  404f54:	madd	x8, x9, x11, x8
  404f58:	sub	x11, x9, #0xb
  404f5c:	cbz	x11, 404f80 <wcrtomb@plt+0x440>
  404f60:	ldr	w12, [x8], #24
  404f64:	add	w9, w9, #0x1
  404f68:	add	x11, x11, #0x1
  404f6c:	cmp	w12, w10
  404f70:	b.ne	404f5c <wcrtomb@plt+0x41c>  // b.any
  404f74:	str	w9, [x0]
  404f78:	ldur	x0, [x8, #-16]
  404f7c:	ret
  404f80:	str	w9, [x0]
  404f84:	mov	x0, xzr
  404f88:	ret
  404f8c:	sub	sp, sp, #0x80
  404f90:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404f94:	ldr	w8, [x8, #3916]
  404f98:	stp	x29, x30, [sp, #32]
  404f9c:	str	x27, [sp, #48]
  404fa0:	stp	x26, x25, [sp, #64]
  404fa4:	cmp	w8, #0x8
  404fa8:	stp	x24, x23, [sp, #80]
  404fac:	stp	x22, x21, [sp, #96]
  404fb0:	stp	x20, x19, [sp, #112]
  404fb4:	add	x29, sp, #0x20
  404fb8:	b.hi	4051d4 <wcrtomb@plt+0x694>  // b.pmore
  404fbc:	mov	w9, #0x1                   	// #1
  404fc0:	lsl	w9, w9, w8
  404fc4:	mov	w10, #0x10e                 	// #270
  404fc8:	mov	w19, w3
  404fcc:	mov	x21, x1
  404fd0:	mov	x20, x0
  404fd4:	tst	w9, w10
  404fd8:	b.eq	404ff8 <wcrtomb@plt+0x4b8>  // b.none
  404fdc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404fe0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  404fe4:	ldr	d0, [x8, #608]
  404fe8:	ldr	d1, [x9, #616]
  404fec:	ldr	x1, [x21, #8]
  404ff0:	fadd	d0, d0, d1
  404ff4:	b	40502c <wcrtomb@plt+0x4ec>
  404ff8:	tst	w9, #0xe0
  404ffc:	b.eq	40507c <wcrtomb@plt+0x53c>  // b.none
  405000:	ldr	x1, [x21]
  405004:	mov	w2, #0x5                   	// #5
  405008:	mov	x0, xzr
  40500c:	bl	404900 <dcgettext@plt>
  405010:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405014:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405018:	ldr	x8, [x8, #2896]
  40501c:	ldr	x9, [x9, #3976]
  405020:	mov	x1, x0
  405024:	mul	x8, x9, x8
  405028:	ucvtf	d0, x8
  40502c:	mov	x0, x20
  405030:	bl	4051d8 <wcrtomb@plt+0x698>
  405034:	mov	w21, w0
  405038:	cbz	w19, 405058 <wcrtomb@plt+0x518>
  40503c:	ldp	x8, x9, [x20, #40]
  405040:	cmp	x8, x9
  405044:	b.cs	40519c <wcrtomb@plt+0x65c>  // b.hs, b.nlast
  405048:	add	x9, x8, #0x1
  40504c:	str	x9, [x20, #40]
  405050:	strb	w19, [x8]
  405054:	add	w21, w21, #0x1
  405058:	mov	w0, w21
  40505c:	ldp	x20, x19, [sp, #112]
  405060:	ldp	x22, x21, [sp, #96]
  405064:	ldp	x24, x23, [sp, #80]
  405068:	ldp	x26, x25, [sp, #64]
  40506c:	ldr	x27, [sp, #48]
  405070:	ldp	x29, x30, [sp, #32]
  405074:	add	sp, sp, #0x80
  405078:	ret
  40507c:	cmp	w8, #0x4
  405080:	b.ne	4051d4 <wcrtomb@plt+0x694>  // b.any
  405084:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405088:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40508c:	ldr	x8, [x25, #2896]
  405090:	ldr	x9, [x24, #3976]
  405094:	ldr	x1, [x21]
  405098:	mov	x0, x20
  40509c:	mov	w22, w2
  4050a0:	mul	x8, x9, x8
  4050a4:	ucvtf	d0, x8
  4050a8:	bl	4051d8 <wcrtomb@plt+0x698>
  4050ac:	ldp	x8, x9, [x20, #40]
  4050b0:	mov	w23, w0
  4050b4:	cmp	x8, x9
  4050b8:	b.cs	4051ac <wcrtomb@plt+0x66c>  // b.hs, b.nlast
  4050bc:	add	x9, x8, #0x1
  4050c0:	str	x9, [x20, #40]
  4050c4:	strb	w22, [x8]
  4050c8:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4050cc:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4050d0:	ldr	d0, [x26, #608]
  4050d4:	ldr	d1, [x27, #616]
  4050d8:	ldr	x1, [x21, #8]
  4050dc:	mov	x0, x20
  4050e0:	fadd	d0, d0, d1
  4050e4:	bl	4051d8 <wcrtomb@plt+0x698>
  4050e8:	ldp	x8, x9, [x20, #40]
  4050ec:	cmp	x8, x9
  4050f0:	b.cs	4051bc <wcrtomb@plt+0x67c>  // b.hs, b.nlast
  4050f4:	add	x9, x8, #0x1
  4050f8:	str	x9, [x20, #40]
  4050fc:	strb	w22, [x8]
  405100:	ldr	x1, [x21, #16]
  405104:	add	w8, w23, w0
  405108:	add	w21, w8, #0x2
  40510c:	cbz	x1, 405140 <wcrtomb@plt+0x600>
  405110:	ldrb	w8, [x1]
  405114:	cbz	w8, 405140 <wcrtomb@plt+0x600>
  405118:	mov	w2, #0x5                   	// #5
  40511c:	mov	x0, xzr
  405120:	bl	404900 <dcgettext@plt>
  405124:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  405128:	mov	x3, x0
  40512c:	add	x2, x2, #0x315
  405130:	mov	w1, #0x1                   	// #1
  405134:	mov	x0, x20
  405138:	bl	404650 <__fprintf_chk@plt>
  40513c:	add	w21, w0, w21
  405140:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405144:	ldr	x8, [x25, #2896]
  405148:	ldr	x9, [x9, #2992]
  40514c:	ldr	x10, [x24, #3976]
  405150:	ldr	d0, [x26, #608]
  405154:	ldr	d1, [x27, #616]
  405158:	sub	x8, x8, x9
  40515c:	mul	x8, x8, x10
  405160:	ucvtf	d2, x8
  405164:	fadd	d0, d0, d1
  405168:	fsub	d0, d2, d0
  40516c:	fcvtzu	x0, d0
  405170:	add	x1, sp, #0x8
  405174:	bl	43d080 <argp_parse@@Base+0x57d4>
  405178:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  40517c:	mov	x3, x0
  405180:	add	x2, x2, #0x7a4
  405184:	mov	w1, #0x1                   	// #1
  405188:	mov	x0, x20
  40518c:	bl	404650 <__fprintf_chk@plt>
  405190:	add	w21, w0, w21
  405194:	cbnz	w19, 40503c <wcrtomb@plt+0x4fc>
  405198:	b	405058 <wcrtomb@plt+0x518>
  40519c:	and	w1, w19, #0xff
  4051a0:	mov	x0, x20
  4051a4:	bl	4045e0 <__overflow@plt>
  4051a8:	b	405054 <wcrtomb@plt+0x514>
  4051ac:	and	w1, w22, #0xff
  4051b0:	mov	x0, x20
  4051b4:	bl	4045e0 <__overflow@plt>
  4051b8:	b	4050c8 <wcrtomb@plt+0x588>
  4051bc:	and	w1, w22, #0xff
  4051c0:	mov	w22, w0
  4051c4:	mov	x0, x20
  4051c8:	bl	4045e0 <__overflow@plt>
  4051cc:	mov	w0, w22
  4051d0:	b	405100 <wcrtomb@plt+0x5c0>
  4051d4:	bl	4045b0 <abort@plt>
  4051d8:	str	d8, [sp, #-64]!
  4051dc:	stp	x29, x30, [sp, #16]
  4051e0:	stp	x28, x21, [sp, #32]
  4051e4:	stp	x20, x19, [sp, #48]
  4051e8:	mov	x29, sp
  4051ec:	sub	sp, sp, #0x520
  4051f0:	mov	v8.16b, v0.16b
  4051f4:	mov	x19, x0
  4051f8:	cbz	x1, 405230 <wcrtomb@plt+0x6f0>
  4051fc:	ldrb	w8, [x1]
  405200:	cbz	w8, 405230 <wcrtomb@plt+0x6f0>
  405204:	mov	w2, #0x5                   	// #5
  405208:	mov	x0, xzr
  40520c:	bl	404900 <dcgettext@plt>
  405210:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  405214:	mov	x3, x0
  405218:	add	x2, x2, #0x315
  40521c:	mov	w1, #0x1                   	// #1
  405220:	mov	x0, x19
  405224:	bl	404650 <__fprintf_chk@plt>
  405228:	mov	w20, w0
  40522c:	b	405234 <wcrtomb@plt+0x6f4>
  405230:	mov	w20, wzr
  405234:	fcvtzu	x0, d8
  405238:	add	x1, sp, #0x294
  40523c:	mov	w2, #0x1b0                 	// #432
  405240:	mov	w3, #0x1                   	// #1
  405244:	mov	w4, #0x1                   	// #1
  405248:	bl	43c678 <argp_parse@@Base+0x4dcc>
  40524c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405250:	ldr	d0, [x8, #592]
  405254:	mov	x21, x0
  405258:	fcmp	d0, #0.0
  40525c:	b.le	405294 <wcrtomb@plt+0x754>
  405260:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
  405264:	fdiv	d0, d8, d0
  405268:	fmov	d1, x8
  40526c:	fcmp	d0, d1
  405270:	b.pl	405294 <wcrtomb@plt+0x754>  // b.nfrst
  405274:	fcvtzu	x0, d0
  405278:	add	x1, sp, #0x8
  40527c:	mov	w2, #0x1b0                 	// #432
  405280:	mov	w3, #0x1                   	// #1
  405284:	mov	w4, #0x1                   	// #1
  405288:	bl	43c678 <argp_parse@@Base+0x4dcc>
  40528c:	mov	x4, x0
  405290:	b	40529c <wcrtomb@plt+0x75c>
  405294:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  405298:	add	x4, x4, #0xf7e
  40529c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4052a0:	add	x2, x2, #0x361
  4052a4:	mov	w1, #0x1                   	// #1
  4052a8:	mov	x0, x19
  4052ac:	mov	v0.16b, v8.16b
  4052b0:	mov	x3, x21
  4052b4:	bl	404650 <__fprintf_chk@plt>
  4052b8:	add	w0, w0, w20
  4052bc:	add	sp, sp, #0x520
  4052c0:	ldp	x20, x19, [sp, #48]
  4052c4:	ldp	x28, x21, [sp, #32]
  4052c8:	ldp	x29, x30, [sp, #16]
  4052cc:	ldr	d8, [sp], #64
  4052d0:	ret
  4052d4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4052d8:	ldr	x0, [x8, #96]
  4052dc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4052e0:	add	x1, x1, #0x70
  4052e4:	mov	w2, #0xa                   	// #10
  4052e8:	mov	w3, #0xa                   	// #10
  4052ec:	b	404f8c <wcrtomb@plt+0x44c>
  4052f0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4052f4:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4052f8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4052fc:	ldr	x9, [x9, #2968]
  405300:	ldr	x10, [x10, #2944]
  405304:	ldr	x8, [x8, #624]
  405308:	sub	x9, x9, x10
  40530c:	add	x0, x8, x9, asr #9
  405310:	ret
  405314:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405318:	ldrb	w9, [x8, #632]
  40531c:	cmp	w9, #0x1
  405320:	b.ne	405358 <wcrtomb@plt+0x818>  // b.any
  405324:	strb	wzr, [x8, #632]
  405328:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40532c:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405330:	ldr	x8, [x8, #2944]
  405334:	ldrsw	x10, [x10, #3804]
  405338:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40533c:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405340:	adrp	x12, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405344:	mov	w13, #0x1                   	// #1
  405348:	str	x8, [x9, #2968]
  40534c:	add	x8, x8, x10, lsl #9
  405350:	str	x8, [x11, #2904]
  405354:	str	w13, [x12, #2920]
  405358:	ret
  40535c:	stp	x29, x30, [sp, #-48]!
  405360:	stp	x20, x19, [sp, #32]
  405364:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405368:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40536c:	ldr	x0, [x19, #2968]
  405370:	ldr	x8, [x20, #2904]
  405374:	str	x21, [sp, #16]
  405378:	mov	x29, sp
  40537c:	cmp	x0, x8
  405380:	b.ne	4053b8 <wcrtomb@plt+0x878>  // b.any
  405384:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405388:	ldrb	w8, [x21, #632]
  40538c:	tbz	w8, #0, 405398 <wcrtomb@plt+0x858>
  405390:	mov	x0, xzr
  405394:	b	4053b8 <wcrtomb@plt+0x878>
  405398:	bl	4053c8 <wcrtomb@plt+0x888>
  40539c:	ldr	x0, [x19, #2968]
  4053a0:	ldr	x8, [x20, #2904]
  4053a4:	cmp	x0, x8
  4053a8:	b.ne	4053b8 <wcrtomb@plt+0x878>  // b.any
  4053ac:	mov	x0, xzr
  4053b0:	mov	w8, #0x1                   	// #1
  4053b4:	strb	w8, [x21, #632]
  4053b8:	ldp	x20, x19, [sp, #32]
  4053bc:	ldr	x21, [sp, #16]
  4053c0:	ldp	x29, x30, [sp], #48
  4053c4:	ret
  4053c8:	sub	sp, sp, #0x40
  4053cc:	stp	x22, x21, [sp, #32]
  4053d0:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4053d4:	ldr	w9, [x21, #2920]
  4053d8:	stp	x20, x19, [sp, #48]
  4053dc:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4053e0:	stp	x29, x30, [sp, #16]
  4053e4:	add	x29, sp, #0x10
  4053e8:	cbnz	w9, 405448 <wcrtomb@plt+0x908>
  4053ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4053f0:	ldrb	w10, [x8, #4048]
  4053f4:	cbz	w10, 405448 <wcrtomb@plt+0x908>
  4053f8:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4053fc:	ldr	w0, [x19, #4032]
  405400:	strb	wzr, [x8, #4048]
  405404:	mov	w8, #0x4                   	// #4
  405408:	strh	w8, [sp, #8]
  40540c:	mov	w8, #0x40000000            	// #1073741824
  405410:	mov	w9, #0x1                   	// #1
  405414:	cmp	w0, w8
  405418:	str	w9, [x21, #2920]
  40541c:	str	w9, [sp, #12]
  405420:	b.lt	405468 <wcrtomb@plt+0x928>  // b.tstop
  405424:	mov	w8, #0xc0000000            	// #-1073741824
  405428:	mov	w1, #0x6d01                	// #27905
  40542c:	add	w0, w0, w8
  405430:	add	x2, sp, #0x8
  405434:	movk	w1, #0x4008, lsl #16
  405438:	bl	42c5a4 <wcrtomb@plt+0x27a64>
  40543c:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405440:	tbz	w0, #31, 4055b8 <wcrtomb@plt+0xa78>
  405444:	b	405480 <wcrtomb@plt+0x940>
  405448:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40544c:	ldr	x8, [x8, #2944]
  405450:	ldr	x11, [x20, #2904]
  405454:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405458:	ldrsw	x10, [x10, #3804]
  40545c:	sub	x11, x11, x8
  405460:	asr	x11, x11, #9
  405464:	b	405600 <wcrtomb@plt+0xac0>
  405468:	mov	w1, #0x6d01                	// #27905
  40546c:	add	x2, sp, #0x8
  405470:	movk	w1, #0x4008, lsl #16
  405474:	bl	404af0 <ioctl@plt>
  405478:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40547c:	tbz	w0, #31, 4055b8 <wcrtomb@plt+0xa78>
  405480:	bl	404a10 <__errno_location@plt>
  405484:	ldr	w8, [x0]
  405488:	cmp	w8, #0x5
  40548c:	b.ne	4054d4 <wcrtomb@plt+0x994>  // b.any
  405490:	ldr	w0, [x19, #4032]
  405494:	mov	w8, #0x40000000            	// #1073741824
  405498:	cmp	w0, w8
  40549c:	b.lt	4054c0 <wcrtomb@plt+0x980>  // b.tstop
  4054a0:	mov	w8, #0xc0000000            	// #-1073741824
  4054a4:	mov	w1, #0x6d01                	// #27905
  4054a8:	add	w0, w0, w8
  4054ac:	add	x2, sp, #0x8
  4054b0:	movk	w1, #0x4008, lsl #16
  4054b4:	bl	42c5a4 <wcrtomb@plt+0x27a64>
  4054b8:	tbz	w0, #31, 4055b8 <wcrtomb@plt+0xa78>
  4054bc:	b	4054d4 <wcrtomb@plt+0x994>
  4054c0:	mov	w1, #0x6d01                	// #27905
  4054c4:	add	x2, sp, #0x8
  4054c8:	movk	w1, #0x4008, lsl #16
  4054cc:	bl	404af0 <ioctl@plt>
  4054d0:	tbz	w0, #31, 4055b8 <wcrtomb@plt+0xa78>
  4054d4:	ldr	w0, [x19, #4032]
  4054d8:	mov	w8, #0x40000000            	// #1073741824
  4054dc:	cmp	w0, w8
  4054e0:	b.lt	4054fc <wcrtomb@plt+0x9bc>  // b.tstop
  4054e4:	mov	w8, #0xc0000000            	// #-1073741824
  4054e8:	add	w0, w0, w8
  4054ec:	mov	w2, #0x1                   	// #1
  4054f0:	mov	x1, xzr
  4054f4:	bl	42c3b4 <wcrtomb@plt+0x27874>
  4054f8:	b	405508 <wcrtomb@plt+0x9c8>
  4054fc:	mov	w2, #0x1                   	// #1
  405500:	mov	x1, xzr
  405504:	bl	404120 <lseek@plt>
  405508:	ldr	x9, [x20, #2904]
  40550c:	ldr	x10, [x22, #2944]
  405510:	ldr	w8, [x19, #4032]
  405514:	mov	w11, #0x40000000            	// #1073741824
  405518:	sub	x9, x10, x9
  40551c:	add	x9, x9, x0
  405520:	cmp	w8, w11
  405524:	bic	x19, x9, x9, asr #63
  405528:	b.lt	40554c <wcrtomb@plt+0xa0c>  // b.tstop
  40552c:	mov	w9, #0xc0000000            	// #-1073741824
  405530:	add	w0, w8, w9
  405534:	mov	x1, x19
  405538:	mov	w2, wzr
  40553c:	bl	42c3b4 <wcrtomb@plt+0x27874>
  405540:	cmp	x0, x19
  405544:	b.ne	405564 <wcrtomb@plt+0xa24>  // b.any
  405548:	b	4055b8 <wcrtomb@plt+0xa78>
  40554c:	mov	w0, w8
  405550:	mov	x1, x19
  405554:	mov	w2, wzr
  405558:	bl	404120 <lseek@plt>
  40555c:	cmp	x0, x19
  405560:	b.eq	4055b8 <wcrtomb@plt+0xa78>  // b.none
  405564:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405568:	ldr	x8, [x8, #4064]
  40556c:	cbz	x8, 405574 <wcrtomb@plt+0xa34>
  405570:	blr	x8
  405574:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  405578:	add	x1, x1, #0x3aa
  40557c:	mov	w2, #0x5                   	// #5
  405580:	mov	x0, xzr
  405584:	bl	404900 <dcgettext@plt>
  405588:	mov	x2, x0
  40558c:	mov	w0, wzr
  405590:	mov	w1, wzr
  405594:	bl	403fa0 <error@plt>
  405598:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40559c:	ldr	x0, [x22, #2944]
  4055a0:	ldr	x8, [x8, #4056]
  4055a4:	cmp	x0, x8
  4055a8:	b.eq	4055b8 <wcrtomb@plt+0xa78>  // b.none
  4055ac:	sub	x2, x8, x0
  4055b0:	mov	w1, wzr
  4055b4:	bl	404360 <memset@plt>
  4055b8:	ldr	x0, [x20, #2904]
  4055bc:	ldr	x8, [x22, #2944]
  4055c0:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4055c4:	ldrsw	x10, [x19, #3804]
  4055c8:	sub	x9, x0, x8
  4055cc:	asr	x11, x9, #9
  4055d0:	cmp	x11, x10
  4055d4:	b.ge	4055fc <wcrtomb@plt+0xabc>  // b.tcont
  4055d8:	sub	x8, x10, x11
  4055dc:	lsl	x2, x8, #9
  4055e0:	mov	w1, wzr
  4055e4:	bl	404360 <memset@plt>
  4055e8:	ldr	x8, [x22, #2944]
  4055ec:	ldrsw	x9, [x19, #3804]
  4055f0:	add	x8, x8, x9, lsl #9
  4055f4:	str	x8, [x20, #2904]
  4055f8:	b	40565c <wcrtomb@plt+0xb1c>
  4055fc:	ldr	w9, [x21, #2920]
  405600:	adrp	x13, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405604:	adrp	x12, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405608:	ldr	x14, [x13, #624]
  40560c:	add	x15, x8, x10, lsl #9
  405610:	ldr	x10, [x12, #2968]
  405614:	str	x8, [x12, #2968]
  405618:	add	x11, x11, x14
  40561c:	str	x11, [x13, #624]
  405620:	str	x15, [x20, #2904]
  405624:	cbz	w9, 405650 <wcrtomb@plt+0xb10>
  405628:	cmp	w9, #0x1
  40562c:	b.eq	40563c <wcrtomb@plt+0xafc>  // b.none
  405630:	cmp	w9, #0x2
  405634:	b.ne	40565c <wcrtomb@plt+0xb1c>  // b.any
  405638:	bl	4045b0 <abort@plt>
  40563c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405640:	ldr	x9, [x9, #640]
  405644:	sub	x0, x10, x8
  405648:	blr	x9
  40564c:	b	40565c <wcrtomb@plt+0xb1c>
  405650:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405654:	ldr	x8, [x8, #672]
  405658:	blr	x8
  40565c:	ldp	x20, x19, [sp, #48]
  405660:	ldp	x22, x21, [sp, #32]
  405664:	ldp	x29, x30, [sp, #16]
  405668:	add	sp, sp, #0x40
  40566c:	ret
  405670:	stp	x29, x30, [sp, #-16]!
  405674:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405678:	ldr	x8, [x9, #2968]
  40567c:	mov	x29, sp
  405680:	cmp	x8, x0
  405684:	b.hi	405698 <wcrtomb@plt+0xb58>  // b.pmore
  405688:	add	x8, x8, #0x200
  40568c:	cmp	x8, x0
  405690:	b.ls	405688 <wcrtomb@plt+0xb48>  // b.plast
  405694:	str	x8, [x9, #2968]
  405698:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40569c:	ldr	x9, [x9, #2904]
  4056a0:	cmp	x8, x9
  4056a4:	b.hi	4056b0 <wcrtomb@plt+0xb70>  // b.pmore
  4056a8:	ldp	x29, x30, [sp], #16
  4056ac:	ret
  4056b0:	bl	4045b0 <abort@plt>
  4056b4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4056b8:	ldr	x8, [x8, #2904]
  4056bc:	sub	x0, x8, x0
  4056c0:	ret
  4056c4:	stp	x29, x30, [sp, #-16]!
  4056c8:	mov	x29, sp
  4056cc:	bl	404520 <close@plt>
  4056d0:	cbz	w0, 4056f0 <wcrtomb@plt+0xbb0>
  4056d4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4056d8:	add	x1, x1, #0x298
  4056dc:	mov	w2, #0x5                   	// #5
  4056e0:	mov	x0, xzr
  4056e4:	bl	404900 <dcgettext@plt>
  4056e8:	ldp	x29, x30, [sp], #16
  4056ec:	b	42a53c <wcrtomb@plt+0x259fc>
  4056f0:	ldp	x29, x30, [sp], #16
  4056f4:	ret
  4056f8:	stp	x29, x30, [sp, #-48]!
  4056fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405700:	ldrb	w8, [x8, #3753]
  405704:	stp	x20, x19, [sp, #32]
  405708:	mov	x19, x0
  40570c:	str	x21, [sp, #16]
  405710:	mov	x29, sp
  405714:	cbz	w8, 405744 <wcrtomb@plt+0xc04>
  405718:	bl	404a10 <__errno_location@plt>
  40571c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405720:	mov	x20, x0
  405724:	ldr	w21, [x0]
  405728:	ldr	x0, [x8, #96]
  40572c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  405730:	add	x1, x1, #0x70
  405734:	mov	w2, #0xa                   	// #10
  405738:	mov	w3, #0xa                   	// #10
  40573c:	bl	404f8c <wcrtomb@plt+0x44c>
  405740:	str	w21, [x20]
  405744:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405748:	ldr	x8, [x8, #3792]
  40574c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405750:	ldr	x2, [x9, #3976]
  405754:	mov	x1, x19
  405758:	ldr	x0, [x8]
  40575c:	bl	405760 <wcrtomb@plt+0xc20>
  405760:	stp	x29, x30, [sp, #-16]!
  405764:	mov	x29, sp
  405768:	bl	42b558 <wcrtomb@plt+0x26a18>
  40576c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405770:	ldr	w0, [x8, #4032]
  405774:	mov	w8, #0x40000000            	// #1073741824
  405778:	cmp	w0, w8
  40577c:	b.lt	405794 <wcrtomb@plt+0xc54>  // b.tstop
  405780:	mov	w8, #0xc0000000            	// #-1073741824
  405784:	add	w0, w0, w8
  405788:	bl	42bf94 <wcrtomb@plt+0x27454>
  40578c:	cbnz	w0, 40579c <wcrtomb@plt+0xc5c>
  405790:	b	4057ac <wcrtomb@plt+0xc6c>
  405794:	bl	404520 <close@plt>
  405798:	cbz	w0, 4057ac <wcrtomb@plt+0xc6c>
  40579c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4057a0:	ldr	x8, [x8, #3792]
  4057a4:	ldr	x0, [x8]
  4057a8:	bl	42a53c <wcrtomb@plt+0x259fc>
  4057ac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4057b0:	ldr	w0, [x8, #648]
  4057b4:	mov	w1, wzr
  4057b8:	bl	42172c <wcrtomb@plt+0x1cbec>
  4057bc:	bl	40e96c <wcrtomb@plt+0x9e2c>
  4057c0:	stp	x29, x30, [sp, #-16]!
  4057c4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4057c8:	ldr	x8, [x8, #3792]
  4057cc:	mov	x29, sp
  4057d0:	ldr	x0, [x8]
  4057d4:	bl	42a97c <wcrtomb@plt+0x25e3c>
  4057d8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4057dc:	ldr	x8, [x8, #624]
  4057e0:	cbz	x8, 405804 <wcrtomb@plt+0xcc4>
  4057e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4057e8:	ldr	w9, [x8, #584]
  4057ec:	add	w10, w9, #0x1
  4057f0:	cmp	w9, #0xb
  4057f4:	str	w10, [x8, #584]
  4057f8:	b.ge	405820 <wcrtomb@plt+0xce0>  // b.tcont
  4057fc:	ldp	x29, x30, [sp], #16
  405800:	ret
  405804:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405808:	ldr	x8, [x8, #4064]
  40580c:	cbz	x8, 405814 <wcrtomb@plt+0xcd4>
  405810:	blr	x8
  405814:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  405818:	add	x1, x1, #0x29f
  40581c:	b	405838 <wcrtomb@plt+0xcf8>
  405820:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405824:	ldr	x8, [x8, #4064]
  405828:	cbz	x8, 405830 <wcrtomb@plt+0xcf0>
  40582c:	blr	x8
  405830:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  405834:	add	x1, x1, #0x2c2
  405838:	mov	w2, #0x5                   	// #5
  40583c:	mov	x0, xzr
  405840:	bl	404900 <dcgettext@plt>
  405844:	mov	x2, x0
  405848:	mov	w0, wzr
  40584c:	mov	w1, wzr
  405850:	bl	403fa0 <error@plt>
  405854:	bl	40e96c <wcrtomb@plt+0x9e2c>
  405858:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40585c:	ldr	x0, [x8, #672]
  405860:	br	x0
  405864:	stp	x29, x30, [sp, #-64]!
  405868:	stp	x20, x19, [sp, #48]
  40586c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405870:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405874:	ldr	x9, [x19, #2968]
  405878:	ldr	x8, [x8, #2944]
  40587c:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405880:	ldrsw	x10, [x20, #3804]
  405884:	stp	x22, x21, [sp, #32]
  405888:	sub	x8, x9, x8
  40588c:	asr	x21, x8, #9
  405890:	sub	x8, x10, x21
  405894:	lsl	x9, x8, #9
  405898:	cmp	x9, x0
  40589c:	stp	x24, x23, [sp, #16]
  4058a0:	mov	x29, sp
  4058a4:	b.ge	4058bc <wcrtomb@plt+0xd7c>  // b.tcont
  4058a8:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4058ac:	ldr	x8, [x23, #3976]
  4058b0:	sub	x9, x0, x9
  4058b4:	cmp	x8, x9
  4058b8:	b.ls	4058d4 <wcrtomb@plt+0xd94>  // b.plast
  4058bc:	mov	x0, xzr
  4058c0:	ldp	x20, x19, [sp, #48]
  4058c4:	ldp	x22, x21, [sp, #32]
  4058c8:	ldp	x24, x23, [sp, #16]
  4058cc:	ldp	x29, x30, [sp], #64
  4058d0:	ret
  4058d4:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4058d8:	ldr	w0, [x10, #4032]
  4058dc:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4058e0:	ldr	x24, [x22, #624]
  4058e4:	mov	w10, #0x40000000            	// #1073741824
  4058e8:	cmp	w0, w10
  4058ec:	udiv	x9, x9, x8
  4058f0:	b.lt	405910 <wcrtomb@plt+0xdd0>  // b.tstop
  4058f4:	mov	w10, #0xc0000000            	// #-1073741824
  4058f8:	add	w0, w0, w10
  4058fc:	mul	x1, x9, x8
  405900:	mov	w2, #0x1                   	// #1
  405904:	bl	42c3b4 <wcrtomb@plt+0x27874>
  405908:	tbz	x0, #63, 405920 <wcrtomb@plt+0xde0>
  40590c:	b	4058c0 <wcrtomb@plt+0xd80>
  405910:	mul	x1, x9, x8
  405914:	mov	w2, #0x1                   	// #1
  405918:	bl	404120 <lseek@plt>
  40591c:	tbnz	x0, #63, 4058c0 <wcrtomb@plt+0xd80>
  405920:	ldr	x8, [x23, #3976]
  405924:	udiv	x9, x0, x8
  405928:	msub	x8, x9, x8, x0
  40592c:	cbnz	x8, 40596c <wcrtomb@plt+0xe2c>
  405930:	lsr	x8, x0, #9
  405934:	add	x9, x21, x24
  405938:	ldrsw	x10, [x20, #3804]
  40593c:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405940:	adrp	x12, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405944:	sub	x0, x8, x9
  405948:	ldr	x9, [x11, #2896]
  40594c:	ldr	x12, [x12, #2904]
  405950:	sdiv	x13, x0, x10
  405954:	sub	x8, x8, x10
  405958:	add	x9, x9, x13
  40595c:	str	x8, [x22, #624]
  405960:	str	x9, [x11, #2896]
  405964:	str	x12, [x19, #2968]
  405968:	b	4058c0 <wcrtomb@plt+0xd80>
  40596c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405970:	ldr	x8, [x8, #4064]
  405974:	cbz	x8, 40597c <wcrtomb@plt+0xe3c>
  405978:	blr	x8
  40597c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  405980:	add	x1, x1, #0x2dc
  405984:	mov	w2, #0x5                   	// #5
  405988:	mov	x0, xzr
  40598c:	bl	404900 <dcgettext@plt>
  405990:	mov	x2, x0
  405994:	mov	w0, wzr
  405998:	mov	w1, wzr
  40599c:	bl	403fa0 <error@plt>
  4059a0:	bl	40e96c <wcrtomb@plt+0x9e2c>
  4059a4:	sub	sp, sp, #0x40
  4059a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4059ac:	ldrb	w8, [x8, #4048]
  4059b0:	stp	x29, x30, [sp, #16]
  4059b4:	str	x21, [sp, #32]
  4059b8:	stp	x20, x19, [sp, #48]
  4059bc:	add	x29, sp, #0x10
  4059c0:	cbnz	w8, 4059d4 <wcrtomb@plt+0xe94>
  4059c4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4059c8:	ldr	w8, [x8, #2920]
  4059cc:	cmp	w8, #0x1
  4059d0:	b.ne	4059f0 <wcrtomb@plt+0xeb0>  // b.any
  4059d4:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4059d8:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4059dc:	bl	4053c8 <wcrtomb@plt+0x888>
  4059e0:	ldr	x8, [x19, #2968]
  4059e4:	ldr	x9, [x20, #2944]
  4059e8:	cmp	x8, x9
  4059ec:	b.hi	4059dc <wcrtomb@plt+0xe9c>  // b.pmore
  4059f0:	mov	x0, sp
  4059f4:	bl	43b52c <argp_parse@@Base+0x3c80>
  4059f8:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4059fc:	add	x0, x0, #0xf50
  405a00:	ldp	x8, x9, [sp]
  405a04:	ldp	x10, x11, [x0]
  405a08:	mov	x12, #0xcd6500000000        	// #225833675390976
  405a0c:	movk	x12, #0x41cd, lsl #48
  405a10:	fmov	d0, x12
  405a14:	sub	x9, x9, x11
  405a18:	scvtf	d1, x9
  405a1c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405a20:	ldr	d2, [x9, #592]
  405a24:	sub	x8, x8, x10
  405a28:	fdiv	d0, d1, d0
  405a2c:	scvtf	d1, x8
  405a30:	fadd	d0, d0, d1
  405a34:	fadd	d0, d2, d0
  405a38:	str	d0, [x9, #592]
  405a3c:	bl	43b52c <argp_parse@@Base+0x3c80>
  405a40:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405a44:	ldrb	w8, [x8, #3898]
  405a48:	cbz	w8, 405a50 <wcrtomb@plt+0xf10>
  405a4c:	bl	40a000 <wcrtomb@plt+0x54c0>
  405a50:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405a54:	ldr	w0, [x8, #4032]
  405a58:	mov	w8, #0x40000000            	// #1073741824
  405a5c:	cmp	w0, w8
  405a60:	b.lt	405a78 <wcrtomb@plt+0xf38>  // b.tstop
  405a64:	mov	w8, #0xc0000000            	// #-1073741824
  405a68:	add	w0, w0, w8
  405a6c:	bl	42bf94 <wcrtomb@plt+0x27454>
  405a70:	cbnz	w0, 405a80 <wcrtomb@plt+0xf40>
  405a74:	b	405a90 <wcrtomb@plt+0xf50>
  405a78:	bl	404520 <close@plt>
  405a7c:	cbz	w0, 405a90 <wcrtomb@plt+0xf50>
  405a80:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405a84:	ldr	x8, [x8, #3792]
  405a88:	ldr	x0, [x8]
  405a8c:	bl	42a53c <wcrtomb@plt+0x259fc>
  405a90:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405a94:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405a98:	ldr	w0, [x8, #648]
  405a9c:	ldrb	w1, [x9, #632]
  405aa0:	bl	42172c <wcrtomb@plt+0x1cbec>
  405aa4:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405aa8:	add	x0, x0, #0xc50
  405aac:	bl	424420 <wcrtomb@plt+0x1f8e0>
  405ab0:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405ab4:	add	x19, x19, #0x290
  405ab8:	ldr	x0, [x19]
  405abc:	bl	404700 <free@plt>
  405ac0:	ldr	x0, [x19, #8]
  405ac4:	bl	404700 <free@plt>
  405ac8:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405acc:	ldr	x19, [x20, #152]
  405ad0:	cbz	x19, 405af0 <wcrtomb@plt+0xfb0>
  405ad4:	ldr	x0, [x19, #16]
  405ad8:	ldr	x21, [x19]
  405adc:	bl	404700 <free@plt>
  405ae0:	mov	x0, x19
  405ae4:	bl	404700 <free@plt>
  405ae8:	mov	x19, x21
  405aec:	cbnz	x21, 405ad4 <wcrtomb@plt+0xf94>
  405af0:	str	xzr, [x20, #152]
  405af4:	ldp	x20, x19, [sp, #48]
  405af8:	ldr	x21, [sp, #32]
  405afc:	ldp	x29, x30, [sp, #16]
  405b00:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405b04:	str	xzr, [x8, #144]
  405b08:	add	sp, sp, #0x40
  405b0c:	ret
  405b10:	stp	x29, x30, [sp, #-48]!
  405b14:	str	x21, [sp, #16]
  405b18:	stp	x20, x19, [sp, #32]
  405b1c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405b20:	ldr	x0, [x21, #3720]
  405b24:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  405b28:	add	x1, x1, #0x40b
  405b2c:	mov	x29, sp
  405b30:	bl	404220 <fopen@plt>
  405b34:	cbz	x0, 405b94 <wcrtomb@plt+0x1054>
  405b38:	adrp	x20, 477000 <_obstack_memory_used@@Base+0x304b0>
  405b3c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  405b40:	add	x20, x20, #0x660
  405b44:	add	x1, x1, #0xa49
  405b48:	mov	x2, x20
  405b4c:	mov	x19, x0
  405b50:	bl	4042c0 <__isoc99_fscanf@plt>
  405b54:	cmp	w0, #0x1
  405b58:	b.ne	405bc8 <wcrtomb@plt+0x1088>  // b.any
  405b5c:	ldr	w8, [x20]
  405b60:	tbnz	w8, #31, 405bc8 <wcrtomb@plt+0x1088>
  405b64:	ldrb	w8, [x19]
  405b68:	tbz	w8, #5, 405b74 <wcrtomb@plt+0x1034>
  405b6c:	ldr	x0, [x21, #3720]
  405b70:	bl	42a97c <wcrtomb@plt+0x25e3c>
  405b74:	mov	x0, x19
  405b78:	bl	4041e0 <fclose@plt>
  405b7c:	cbz	w0, 405ba4 <wcrtomb@plt+0x1064>
  405b80:	ldr	x0, [x21, #3720]
  405b84:	ldp	x20, x19, [sp, #32]
  405b88:	ldr	x21, [sp, #16]
  405b8c:	ldp	x29, x30, [sp], #48
  405b90:	b	42a53c <wcrtomb@plt+0x259fc>
  405b94:	bl	404a10 <__errno_location@plt>
  405b98:	ldr	w8, [x0]
  405b9c:	cmp	w8, #0x2
  405ba0:	b.ne	405bb4 <wcrtomb@plt+0x1074>  // b.any
  405ba4:	ldp	x20, x19, [sp, #32]
  405ba8:	ldr	x21, [sp, #16]
  405bac:	ldp	x29, x30, [sp], #48
  405bb0:	ret
  405bb4:	ldr	x0, [x21, #3720]
  405bb8:	ldp	x20, x19, [sp, #32]
  405bbc:	ldr	x21, [sp, #16]
  405bc0:	ldp	x29, x30, [sp], #48
  405bc4:	b	42a86c <wcrtomb@plt+0x25d2c>
  405bc8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405bcc:	ldr	x8, [x8, #4064]
  405bd0:	cbz	x8, 405bd8 <wcrtomb@plt+0x1098>
  405bd4:	blr	x8
  405bd8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  405bdc:	add	x1, x1, #0x306
  405be0:	mov	w2, #0x5                   	// #5
  405be4:	mov	x0, xzr
  405be8:	bl	404900 <dcgettext@plt>
  405bec:	ldr	x8, [x21, #3720]
  405bf0:	mov	x19, x0
  405bf4:	mov	x0, x8
  405bf8:	bl	444778 <argp_parse@@Base+0xcecc>
  405bfc:	mov	x3, x0
  405c00:	mov	w0, wzr
  405c04:	mov	w1, wzr
  405c08:	mov	x2, x19
  405c0c:	bl	403fa0 <error@plt>
  405c10:	bl	40e96c <wcrtomb@plt+0x9e2c>
  405c14:	stp	x29, x30, [sp, #-32]!
  405c18:	stp	x20, x19, [sp, #16]
  405c1c:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405c20:	ldr	x0, [x20, #3720]
  405c24:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  405c28:	add	x1, x1, #0x3f8
  405c2c:	mov	x29, sp
  405c30:	bl	404220 <fopen@plt>
  405c34:	cbz	x0, 405c80 <wcrtomb@plt+0x1140>
  405c38:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  405c3c:	ldr	w3, [x8, #1632]
  405c40:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  405c44:	add	x2, x2, #0x503
  405c48:	mov	w1, #0x1                   	// #1
  405c4c:	mov	x19, x0
  405c50:	bl	404650 <__fprintf_chk@plt>
  405c54:	ldrb	w8, [x19]
  405c58:	tbz	w8, #5, 405c64 <wcrtomb@plt+0x1124>
  405c5c:	ldr	x0, [x20, #3720]
  405c60:	bl	42b4d4 <wcrtomb@plt+0x26994>
  405c64:	mov	x0, x19
  405c68:	bl	4041e0 <fclose@plt>
  405c6c:	cbz	w0, 405c90 <wcrtomb@plt+0x1150>
  405c70:	ldr	x0, [x20, #3720]
  405c74:	ldp	x20, x19, [sp, #16]
  405c78:	ldp	x29, x30, [sp], #32
  405c7c:	b	42a53c <wcrtomb@plt+0x259fc>
  405c80:	ldr	x0, [x20, #3720]
  405c84:	ldp	x20, x19, [sp, #16]
  405c88:	ldp	x29, x30, [sp], #32
  405c8c:	b	42a86c <wcrtomb@plt+0x25d2c>
  405c90:	ldp	x20, x19, [sp, #16]
  405c94:	ldp	x29, x30, [sp], #32
  405c98:	ret
  405c9c:	stp	x29, x30, [sp, #-48]!
  405ca0:	str	x21, [sp, #16]
  405ca4:	stp	x20, x19, [sp, #32]
  405ca8:	mov	x29, sp
  405cac:	mov	x19, x0
  405cb0:	bl	403f40 <strlen@plt>
  405cb4:	cbz	x0, 405d04 <wcrtomb@plt+0x11c4>
  405cb8:	add	x8, x0, x19
  405cbc:	sub	x21, x8, #0x1
  405cc0:	cmp	x21, x19
  405cc4:	b.ls	405d04 <wcrtomb@plt+0x11c4>  // b.plast
  405cc8:	bl	404690 <__ctype_b_loc@plt>
  405ccc:	ldr	x8, [x0]
  405cd0:	ldrb	w9, [x21], #-1
  405cd4:	ldrh	w8, [x8, x9, lsl #1]
  405cd8:	tbnz	w8, #11, 405cc0 <wcrtomb@plt+0x1180>
  405cdc:	sub	x8, x21, #0x6
  405ce0:	subs	x20, x8, x19
  405ce4:	b.ls	405d04 <wcrtomb@plt+0x11c4>  // b.plast
  405ce8:	ldur	x8, [x21, #-6]
  405cec:	mov	x9, #0x5620                	// #22048
  405cf0:	movk	x9, #0x6c6f, lsl #16
  405cf4:	movk	x9, #0x6d75, lsl #32
  405cf8:	movk	x9, #0x2065, lsl #48
  405cfc:	cmp	x8, x9
  405d00:	b.eq	405d1c <wcrtomb@plt+0x11dc>  // b.none
  405d04:	mov	x21, xzr
  405d08:	mov	x0, x21
  405d0c:	ldp	x20, x19, [sp, #32]
  405d10:	ldr	x21, [sp, #16]
  405d14:	ldp	x29, x30, [sp], #48
  405d18:	ret
  405d1c:	add	x0, x20, #0x1
  405d20:	bl	4459e8 <argp_parse@@Base+0xe13c>
  405d24:	mov	x1, x19
  405d28:	mov	x2, x20
  405d2c:	mov	x21, x0
  405d30:	bl	403ec0 <memcpy@plt>
  405d34:	strb	wzr, [x21, x20]
  405d38:	b	405d08 <wcrtomb@plt+0x11c8>
  405d3c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405d40:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405d44:	ldr	x1, [x8, #640]
  405d48:	ldr	x0, [x9, #3976]
  405d4c:	br	x1
  405d50:	stp	x29, x30, [sp, #-96]!
  405d54:	stp	x28, x27, [sp, #16]
  405d58:	stp	x26, x25, [sp, #32]
  405d5c:	stp	x24, x23, [sp, #48]
  405d60:	stp	x22, x21, [sp, #64]
  405d64:	stp	x20, x19, [sp, #80]
  405d68:	mov	x29, sp
  405d6c:	sub	sp, sp, #0x1b0
  405d70:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405d74:	adrp	x9, 406000 <wcrtomb@plt+0x14c0>
  405d78:	ldr	x10, [x20, #3976]
  405d7c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405d80:	add	x9, x9, #0x7fc
  405d84:	str	x9, [x8, #672]
  405d88:	adrp	x9, 407000 <wcrtomb@plt+0x24c0>
  405d8c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405d90:	add	x9, x9, #0x1c
  405d94:	str	x9, [x8, #640]
  405d98:	cbz	x10, 40665c <wcrtomb@plt+0x1b1c>
  405d9c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405da0:	ldr	x8, [x8, #3904]
  405da4:	cbz	x8, 406678 <wcrtomb@plt+0x1b38>
  405da8:	mov	w19, w0
  405dac:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405db0:	add	x0, x0, #0xc50
  405db4:	bl	424420 <wcrtomb@plt+0x1f8e0>
  405db8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405dbc:	ldr	x0, [x8, #712]
  405dc0:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405dc4:	str	wzr, [x21, #704]
  405dc8:	cbnz	x0, 405dec <wcrtomb@plt+0x12ac>
  405dcc:	ldr	x1, [x20, #3976]
  405dd0:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405dd4:	add	x0, x0, #0x290
  405dd8:	bl	41c554 <wcrtomb@plt+0x17a14>
  405ddc:	ldrsw	x8, [x21, #704]
  405de0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405de4:	add	x9, x9, #0x2c8
  405de8:	str	x0, [x9, x8, lsl #3]
  405dec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405df0:	ldrsw	x8, [x8, #3804]
  405df4:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405df8:	ldr	x10, [x23, #3744]
  405dfc:	cmp	w19, #0x2
  405e00:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405e04:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405e08:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405e0c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405e10:	add	x8, x0, x8, lsl #9
  405e14:	csel	w20, wzr, w19, eq  // eq = none
  405e18:	str	x0, [x24, #2944]
  405e1c:	str	x0, [x21, #2968]
  405e20:	str	x8, [x22, #2904]
  405e24:	str	w20, [x9, #2920]
  405e28:	ldr	x0, [x10]
  405e2c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  405e30:	add	x1, x1, #0x85
  405e34:	bl	404660 <strcmp@plt>
  405e38:	cbnz	w0, 405e4c <wcrtomb@plt+0x130c>
  405e3c:	cmp	w20, #0x0
  405e40:	cset	w0, ne  // ne = any
  405e44:	bl	4048a0 <isatty@plt>
  405e48:	cbnz	w0, 4066f4 <wcrtomb@plt+0x1bb4>
  405e4c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405e50:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405e54:	ldrb	w8, [x8, #3897]
  405e58:	ldr	x9, [x25, #3960]
  405e5c:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405e60:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405e64:	strb	w8, [x26, #680]
  405e68:	str	xzr, [x27, #2896]
  405e6c:	cbz	x9, 405e88 <wcrtomb@plt+0x1348>
  405e70:	cbz	w19, 405f7c <wcrtomb@plt+0x143c>
  405e74:	cmp	w19, #0x1
  405e78:	b.eq	405f48 <wcrtomb@plt+0x1408>  // b.none
  405e7c:	cmp	w19, #0x2
  405e80:	b.ne	406228 <wcrtomb@plt+0x16e8>  // b.any
  405e84:	bl	4045b0 <abort@plt>
  405e88:	ldr	x28, [x23, #3744]
  405e8c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  405e90:	add	x1, x1, #0x85
  405e94:	ldr	x20, [x28]
  405e98:	mov	x0, x20
  405e9c:	bl	404660 <strcmp@plt>
  405ea0:	cbz	w0, 405f9c <wcrtomb@plt+0x145c>
  405ea4:	cmp	w19, #0x2
  405ea8:	b.eq	40604c <wcrtomb@plt+0x150c>  // b.none
  405eac:	cmp	w19, #0x1
  405eb0:	b.eq	406028 <wcrtomb@plt+0x14e8>  // b.none
  405eb4:	cbnz	w19, 406228 <wcrtomb@plt+0x16e8>
  405eb8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405ebc:	ldrb	w8, [x8, #4072]
  405ec0:	cbnz	w8, 405ef4 <wcrtomb@plt+0x13b4>
  405ec4:	mov	w1, #0x3a                  	// #58
  405ec8:	mov	x0, x20
  405ecc:	bl	4047a0 <strchr@plt>
  405ed0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405ed4:	str	x0, [x8, #4080]
  405ed8:	ldr	x20, [x28]
  405edc:	subs	x2, x0, x20
  405ee0:	b.ls	405ef4 <wcrtomb@plt+0x13b4>  // b.plast
  405ee4:	mov	w1, #0x2f                  	// #47
  405ee8:	mov	x0, x20
  405eec:	bl	404890 <memchr@plt>
  405ef0:	cbz	x0, 4065a4 <wcrtomb@plt+0x1a64>
  405ef4:	mov	w2, #0x1b6                 	// #438
  405ef8:	mov	x0, x20
  405efc:	mov	w1, wzr
  405f00:	bl	404280 <open@plt>
  405f04:	mov	w1, w0
  405f08:	adrp	x28, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405f0c:	cmn	w0, #0x1
  405f10:	str	w0, [x28, #4032]
  405f14:	b.eq	406758 <wcrtomb@plt+0x1c18>  // b.none
  405f18:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405f1c:	ldrb	w8, [x20, #3132]
  405f20:	cbnz	w8, 4061e0 <wcrtomb@plt+0x16a0>
  405f24:	ldr	x8, [x25, #3960]
  405f28:	cbz	x8, 406524 <wcrtomb@plt+0x19e4>
  405f2c:	mov	w8, #0x40000000            	// #1073741824
  405f30:	cmp	w1, w8
  405f34:	b.lt	4061b8 <wcrtomb@plt+0x1678>  // b.tstop
  405f38:	mov	w8, #0xc0000000            	// #-1073741824
  405f3c:	add	w0, w1, w8
  405f40:	bl	42bf94 <wcrtomb@plt+0x27454>
  405f44:	b	4061c0 <wcrtomb@plt+0x1680>
  405f48:	bl	4219b0 <wcrtomb@plt+0x1ce70>
  405f4c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405f50:	ldr	x8, [x8, #4016]
  405f54:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405f58:	str	w0, [x9, #648]
  405f5c:	cbnz	x8, 406228 <wcrtomb@plt+0x16e8>
  405f60:	ldr	x8, [x23, #3744]
  405f64:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  405f68:	add	x1, x1, #0x85
  405f6c:	ldr	x0, [x8]
  405f70:	bl	404660 <strcmp@plt>
  405f74:	cbnz	w0, 406228 <wcrtomb@plt+0x16e8>
  405f78:	b	406114 <wcrtomb@plt+0x15d4>
  405f7c:	bl	421edc <wcrtomb@plt+0x1d39c>
  405f80:	ldr	x9, [x24, #2944]
  405f84:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405f88:	str	w0, [x8, #648]
  405f8c:	mov	w8, #0x1                   	// #1
  405f90:	strb	w8, [x26, #680]
  405f94:	str	x9, [x22, #2904]
  405f98:	b	406228 <wcrtomb@plt+0x16e8>
  405f9c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405fa0:	ldrb	w8, [x8, #3898]
  405fa4:	mov	w9, #0x1                   	// #1
  405fa8:	strb	w9, [x26, #680]
  405fac:	cbnz	w8, 406720 <wcrtomb@plt+0x1be0>
  405fb0:	cmp	w19, #0x2
  405fb4:	b.eq	4060ec <wcrtomb@plt+0x15ac>  // b.none
  405fb8:	cmp	w19, #0x1
  405fbc:	b.eq	4060cc <wcrtomb@plt+0x158c>  // b.none
  405fc0:	cbnz	w19, 406228 <wcrtomb@plt+0x16e8>
  405fc4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405fc8:	mov	x0, sp
  405fcc:	str	wzr, [x8, #4032]
  405fd0:	bl	4085c4 <wcrtomb@plt+0x3a84>
  405fd4:	cmp	w0, #0x2
  405fd8:	b.cs	4067c4 <wcrtomb@plt+0x1c84>  // b.hs, b.nlast
  405fdc:	ldrb	w8, [sp]
  405fe0:	cbz	w8, 406228 <wcrtomb@plt+0x16e8>
  405fe4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  405fe8:	ldr	x8, [x8, #4064]
  405fec:	cbz	x8, 405ff4 <wcrtomb@plt+0x14b4>
  405ff0:	blr	x8
  405ff4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  405ff8:	add	x1, x1, #0x467
  405ffc:	mov	w2, #0x5                   	// #5
  406000:	mov	x0, xzr
  406004:	bl	404900 <dcgettext@plt>
  406008:	mov	x2, x0
  40600c:	mov	w0, wzr
  406010:	mov	w1, wzr
  406014:	bl	403fa0 <error@plt>
  406018:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40601c:	mov	w9, #0x2                   	// #2
  406020:	str	w9, [x8, #2416]
  406024:	b	406228 <wcrtomb@plt+0x16e8>
  406028:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40602c:	ldrb	w8, [x8, #3813]
  406030:	cbz	w8, 406128 <wcrtomb@plt+0x15e8>
  406034:	mov	w1, #0x1                   	// #1
  406038:	mov	x0, x20
  40603c:	mov	w24, #0x1                   	// #1
  406040:	bl	41b994 <wcrtomb@plt+0x16e54>
  406044:	ldr	x28, [x23, #3744]
  406048:	b	40612c <wcrtomb@plt+0x15ec>
  40604c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406050:	ldrb	w8, [x8, #4072]
  406054:	cbnz	w8, 406088 <wcrtomb@plt+0x1548>
  406058:	mov	w1, #0x3a                  	// #58
  40605c:	mov	x0, x20
  406060:	bl	4047a0 <strchr@plt>
  406064:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406068:	str	x0, [x8, #4080]
  40606c:	ldr	x20, [x28]
  406070:	subs	x2, x0, x20
  406074:	b.ls	406088 <wcrtomb@plt+0x1548>  // b.plast
  406078:	mov	w1, #0x2f                  	// #47
  40607c:	mov	x0, x20
  406080:	bl	404890 <memchr@plt>
  406084:	cbz	x0, 406588 <wcrtomb@plt+0x1a48>
  406088:	mov	w1, #0x42                  	// #66
  40608c:	mov	w2, #0x1b6                 	// #438
  406090:	mov	x0, x20
  406094:	bl	404280 <open@plt>
  406098:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40609c:	str	w0, [x8, #4032]
  4060a0:	mov	x0, xzr
  4060a4:	bl	4085c4 <wcrtomb@plt+0x3a84>
  4060a8:	cmp	w0, #0x2
  4060ac:	b.cc	406228 <wcrtomb@plt+0x16e8>  // b.lo, b.ul, b.last
  4060b0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4060b4:	ldr	x8, [x8, #4064]
  4060b8:	cbz	x8, 4060c0 <wcrtomb@plt+0x1580>
  4060bc:	blr	x8
  4060c0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4060c4:	add	x1, x1, #0x86f
  4060c8:	b	406738 <wcrtomb@plt+0x1bf8>
  4060cc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4060d0:	ldr	x8, [x8, #4016]
  4060d4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4060d8:	mov	w10, #0x1                   	// #1
  4060dc:	str	w10, [x9, #4032]
  4060e0:	cbz	x8, 406114 <wcrtomb@plt+0x15d4>
  4060e4:	mov	w24, wzr
  4060e8:	b	406244 <wcrtomb@plt+0x1704>
  4060ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4060f0:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4060f4:	ldr	x9, [x24, #2944]
  4060f8:	str	wzr, [x8, #4032]
  4060fc:	ldr	x8, [x10, #4016]
  406100:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406104:	mov	w11, #0x1                   	// #1
  406108:	strb	w11, [x10, #2952]
  40610c:	str	x9, [x22, #2904]
  406110:	cbnz	x8, 406228 <wcrtomb@plt+0x16e8>
  406114:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406118:	ldr	x8, [x8, #96]
  40611c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406120:	str	x8, [x9, #2888]
  406124:	b	406228 <wcrtomb@plt+0x16e8>
  406128:	mov	w24, wzr
  40612c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406130:	ldrb	w9, [x8, #3898]
  406134:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406138:	ldrb	w8, [x8, #4072]
  40613c:	cbz	w9, 406158 <wcrtomb@plt+0x1618>
  406140:	cbz	w8, 406174 <wcrtomb@plt+0x1634>
  406144:	ldr	x0, [x28]
  406148:	mov	w1, #0x42                  	// #66
  40614c:	mov	w2, #0x1b6                 	// #438
  406150:	bl	404280 <open@plt>
  406154:	b	406168 <wcrtomb@plt+0x1628>
  406158:	cbz	w8, 4064d4 <wcrtomb@plt+0x1994>
  40615c:	ldr	x0, [x28]
  406160:	mov	w1, #0x1b6                 	// #438
  406164:	bl	404ad0 <creat@plt>
  406168:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40616c:	str	w0, [x8, #4032]
  406170:	b	406234 <wcrtomb@plt+0x16f4>
  406174:	ldr	x0, [x28]
  406178:	mov	w1, #0x3a                  	// #58
  40617c:	bl	4047a0 <strchr@plt>
  406180:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406184:	str	x0, [x8, #4080]
  406188:	cbz	x0, 406144 <wcrtomb@plt+0x1604>
  40618c:	ldr	x20, [x28]
  406190:	subs	x2, x0, x20
  406194:	b.ls	406144 <wcrtomb@plt+0x1604>  // b.plast
  406198:	mov	w1, #0x2f                  	// #47
  40619c:	mov	x0, x20
  4061a0:	bl	404890 <memchr@plt>
  4061a4:	cbnz	x0, 406144 <wcrtomb@plt+0x1604>
  4061a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4061ac:	ldr	x3, [x8, #3864]
  4061b0:	mov	w1, #0x42                  	// #66
  4061b4:	b	406514 <wcrtomb@plt+0x19d4>
  4061b8:	mov	w0, w1
  4061bc:	bl	404520 <close@plt>
  4061c0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4061c4:	strb	wzr, [x8, #632]
  4061c8:	bl	421edc <wcrtomb@plt+0x1d39c>
  4061cc:	ldr	w1, [x28, #4032]
  4061d0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4061d4:	str	w0, [x8, #648]
  4061d8:	mov	w8, #0x1                   	// #1
  4061dc:	strb	w8, [x26, #680]
  4061e0:	ldr	x8, [x24, #2944]
  4061e4:	str	xzr, [x27, #2896]
  4061e8:	str	x8, [x22, #2904]
  4061ec:	str	w1, [x28, #4032]
  4061f0:	tbnz	w1, #31, 406760 <wcrtomb@plt+0x1c20>
  4061f4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4061f8:	ldr	w8, [x8, #3916]
  4061fc:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406200:	cmp	w8, #0x4
  406204:	b.ne	40620c <wcrtomb@plt+0x16cc>  // b.any
  406208:	strb	wzr, [x24, #3984]
  40620c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406210:	ldr	w8, [x8, #3128]
  406214:	cmn	w8, #0x1
  406218:	b.eq	406498 <wcrtomb@plt+0x1958>  // b.none
  40621c:	cmp	w8, #0x0
  406220:	cset	w8, ne  // ne = any
  406224:	strb	w8, [x24, #3984]
  406228:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40622c:	ldr	w0, [x8, #4032]
  406230:	mov	w24, wzr
  406234:	tbnz	w0, #31, 406638 <wcrtomb@plt+0x1af8>
  406238:	mov	w8, #0x3fffffff            	// #1073741823
  40623c:	cmp	w0, w8
  406240:	b.gt	40624c <wcrtomb@plt+0x170c>
  406244:	bl	4215b8 <wcrtomb@plt+0x1ca78>
  406248:	tbz	w0, #0, 406638 <wcrtomb@plt+0x1af8>
  40624c:	bl	421674 <wcrtomb@plt+0x1cb34>
  406250:	bl	421620 <wcrtomb@plt+0x1cae0>
  406254:	sub	w8, w19, #0x1
  406258:	cmp	w8, #0x2
  40625c:	b.cs	40627c <wcrtomb@plt+0x173c>  // b.hs, b.nlast
  406260:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406264:	cmp	w19, #0x1
  406268:	str	xzr, [x8, #2912]
  40626c:	b.eq	406330 <wcrtomb@plt+0x17f0>  // b.none
  406270:	cmp	w19, #0x2
  406274:	b.eq	4062b8 <wcrtomb@plt+0x1778>  // b.none
  406278:	b	406458 <wcrtomb@plt+0x1918>
  40627c:	cbnz	w19, 406458 <wcrtomb@plt+0x1918>
  406280:	ldr	x8, [x21, #2968]
  406284:	ldr	x9, [x22, #2904]
  406288:	cmp	x8, x9
  40628c:	b.ne	4062b8 <wcrtomb@plt+0x1778>  // b.any
  406290:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406294:	ldrb	w8, [x19, #632]
  406298:	tbnz	w8, #0, 4062b8 <wcrtomb@plt+0x1778>
  40629c:	bl	4053c8 <wcrtomb@plt+0x888>
  4062a0:	ldr	x8, [x21, #2968]
  4062a4:	ldr	x9, [x22, #2904]
  4062a8:	cmp	x8, x9
  4062ac:	b.ne	4062b8 <wcrtomb@plt+0x1778>  // b.any
  4062b0:	mov	w8, #0x1                   	// #1
  4062b4:	strb	w8, [x19, #632]
  4062b8:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4062bc:	ldr	x0, [x23, #3704]
  4062c0:	cbz	x0, 406458 <wcrtomb@plt+0x1918>
  4062c4:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4062c8:	ldr	x19, [x24, #2928]
  4062cc:	cbnz	x19, 406410 <wcrtomb@plt+0x18d0>
  4062d0:	ldr	x19, [x21, #2968]
  4062d4:	ldr	x8, [x22, #2904]
  4062d8:	cmp	x19, x8
  4062dc:	b.ne	406300 <wcrtomb@plt+0x17c0>  // b.any
  4062e0:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4062e4:	ldrb	w8, [x20, #632]
  4062e8:	tbnz	w8, #0, 406778 <wcrtomb@plt+0x1c38>
  4062ec:	bl	4053c8 <wcrtomb@plt+0x888>
  4062f0:	ldr	x19, [x21, #2968]
  4062f4:	ldr	x8, [x22, #2904]
  4062f8:	cmp	x19, x8
  4062fc:	b.eq	406770 <wcrtomb@plt+0x1c30>  // b.none
  406300:	cbz	x19, 406778 <wcrtomb@plt+0x1c38>
  406304:	ldrb	w8, [x19, #156]
  406308:	cmp	w8, #0x67
  40630c:	b.eq	4063c8 <wcrtomb@plt+0x1888>  // b.none
  406310:	cmp	w8, #0x56
  406314:	b.ne	406404 <wcrtomb@plt+0x18c4>  // b.any
  406318:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40631c:	add	x0, x0, #0xb70
  406320:	mov	w2, #0x64                  	// #100
  406324:	mov	x1, x19
  406328:	bl	41aa68 <wcrtomb@plt+0x15f28>
  40632c:	b	406404 <wcrtomb@plt+0x18c4>
  406330:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406334:	ldr	x0, [x21, #3704]
  406338:	str	xzr, [x8, #2912]
  40633c:	cbz	x0, 406458 <wcrtomb@plt+0x1918>
  406340:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406344:	ldrb	w8, [x8, #3132]
  406348:	cbz	w8, 4063c0 <wcrtomb@plt+0x1880>
  40634c:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  406350:	ldrsw	x0, [x8, #1636]
  406354:	mov	x1, sp
  406358:	bl	43d080 <argp_parse@@Base+0x57d4>
  40635c:	ldr	x8, [x21, #3704]
  406360:	mov	x19, x0
  406364:	mov	x0, x8
  406368:	bl	403f40 <strlen@plt>
  40636c:	mov	x20, x0
  406370:	mov	x0, x19
  406374:	bl	403f40 <strlen@plt>
  406378:	add	x8, x20, x0
  40637c:	add	x0, x8, #0x9
  406380:	bl	4459e8 <argp_parse@@Base+0xe13c>
  406384:	ldr	x4, [x21, #3704]
  406388:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40638c:	adrp	x5, 45b000 <_obstack_memory_used@@Base+0x144b0>
  406390:	add	x3, x3, #0x738
  406394:	add	x5, x5, #0x741
  406398:	mov	w1, #0x1                   	// #1
  40639c:	mov	x2, #0xffffffffffffffff    	// #-1
  4063a0:	mov	x6, x19
  4063a4:	mov	x20, x0
  4063a8:	bl	403f60 <__sprintf_chk@plt>
  4063ac:	mov	x0, x20
  4063b0:	bl	408448 <wcrtomb@plt+0x3908>
  4063b4:	mov	x0, x20
  4063b8:	bl	404700 <free@plt>
  4063bc:	b	406458 <wcrtomb@plt+0x1918>
  4063c0:	bl	408448 <wcrtomb@plt+0x3908>
  4063c4:	b	406458 <wcrtomb@plt+0x1918>
  4063c8:	mov	x0, sp
  4063cc:	mov	x20, sp
  4063d0:	bl	42437c <wcrtomb@plt+0x1f83c>
  4063d4:	add	x0, x19, #0x7c
  4063d8:	mov	w1, #0xc                   	// #12
  4063dc:	add	x20, x20, #0x158
  4063e0:	bl	4197d4 <wcrtomb@plt+0x14c94>
  4063e4:	mov	x2, x0
  4063e8:	mov	x0, x20
  4063ec:	mov	x1, x19
  4063f0:	bl	412dc0 <wcrtomb@plt+0xe280>
  4063f4:	mov	x0, sp
  4063f8:	bl	412524 <wcrtomb@plt+0xd9e4>
  4063fc:	mov	x0, sp
  406400:	bl	424420 <wcrtomb@plt+0x1f8e0>
  406404:	ldr	x19, [x24, #2928]
  406408:	cbz	x19, 406778 <wcrtomb@plt+0x1c38>
  40640c:	ldr	x0, [x23, #3704]
  406410:	mov	x1, x19
  406414:	mov	w2, wzr
  406418:	bl	4047f0 <fnmatch@plt>
  40641c:	cbz	w0, 406458 <wcrtomb@plt+0x1918>
  406420:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406424:	ldrb	w8, [x8, #3132]
  406428:	cbz	w8, 406694 <wcrtomb@plt+0x1b54>
  40642c:	mov	x0, x19
  406430:	bl	405c9c <wcrtomb@plt+0x115c>
  406434:	cbz	x0, 406694 <wcrtomb@plt+0x1b54>
  406438:	ldr	x1, [x23, #3704]
  40643c:	mov	w2, wzr
  406440:	mov	x19, x0
  406444:	bl	4047f0 <fnmatch@plt>
  406448:	mov	w20, w0
  40644c:	mov	x0, x19
  406450:	bl	404700 <free@plt>
  406454:	cbnz	w20, 406694 <wcrtomb@plt+0x1b54>
  406458:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40645c:	add	x19, x19, #0xf98
  406460:	mov	x0, x19
  406464:	bl	43b52c <argp_parse@@Base+0x3c80>
  406468:	ldr	q0, [x19]
  40646c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406470:	add	x8, x8, #0xf50
  406474:	str	q0, [x8]
  406478:	add	sp, sp, #0x1b0
  40647c:	ldp	x20, x19, [sp, #80]
  406480:	ldp	x22, x21, [sp, #64]
  406484:	ldp	x24, x23, [sp, #48]
  406488:	ldp	x26, x25, [sp, #32]
  40648c:	ldp	x28, x27, [sp, #16]
  406490:	ldp	x29, x30, [sp], #96
  406494:	ret
  406498:	ldrb	w9, [x20, #3132]
  40649c:	mov	w8, wzr
  4064a0:	cbnz	w9, 406224 <wcrtomb@plt+0x16e4>
  4064a4:	ldr	x9, [x25, #3960]
  4064a8:	cbnz	x9, 406224 <wcrtomb@plt+0x16e4>
  4064ac:	mov	x2, sp
  4064b0:	mov	w0, wzr
  4064b4:	bl	4048e0 <__fxstat@plt>
  4064b8:	mov	w8, wzr
  4064bc:	cbnz	w0, 406224 <wcrtomb@plt+0x16e4>
  4064c0:	ldr	w8, [sp, #16]
  4064c4:	and	w8, w8, #0xf000
  4064c8:	cmp	w8, #0x8, lsl #12
  4064cc:	cset	w8, eq  // eq = none
  4064d0:	b	406224 <wcrtomb@plt+0x16e4>
  4064d4:	ldr	x0, [x28]
  4064d8:	mov	w1, #0x3a                  	// #58
  4064dc:	bl	4047a0 <strchr@plt>
  4064e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4064e4:	str	x0, [x8, #4080]
  4064e8:	cbz	x0, 40615c <wcrtomb@plt+0x161c>
  4064ec:	ldr	x20, [x28]
  4064f0:	subs	x2, x0, x20
  4064f4:	b.ls	40615c <wcrtomb@plt+0x161c>  // b.plast
  4064f8:	mov	w1, #0x2f                  	// #47
  4064fc:	mov	x0, x20
  406500:	bl	404890 <memchr@plt>
  406504:	cbnz	x0, 40615c <wcrtomb@plt+0x161c>
  406508:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40650c:	ldr	x3, [x8, #3864]
  406510:	mov	w1, #0x41                  	// #65
  406514:	mov	w2, #0x40000000            	// #1073741824
  406518:	mov	x0, x20
  40651c:	bl	42b8a0 <wcrtomb@plt+0x26d60>
  406520:	b	406168 <wcrtomb@plt+0x1628>
  406524:	mov	x0, sp
  406528:	bl	4085c4 <wcrtomb@plt+0x3a84>
  40652c:	cbz	w0, 4065c0 <wcrtomb@plt+0x1a80>
  406530:	cmp	w0, #0x1
  406534:	b.ne	406628 <wcrtomb@plt+0x1ae8>  // b.any
  406538:	ldrb	w8, [sp]
  40653c:	cbz	w8, 406580 <wcrtomb@plt+0x1a40>
  406540:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406544:	ldr	x8, [x8, #4064]
  406548:	cbz	x8, 406550 <wcrtomb@plt+0x1a10>
  40654c:	blr	x8
  406550:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  406554:	add	x1, x1, #0x467
  406558:	mov	w2, #0x5                   	// #5
  40655c:	mov	x0, xzr
  406560:	bl	404900 <dcgettext@plt>
  406564:	mov	x2, x0
  406568:	mov	w0, wzr
  40656c:	mov	w1, wzr
  406570:	bl	403fa0 <error@plt>
  406574:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406578:	mov	w9, #0x2                   	// #2
  40657c:	str	w9, [x8, #2416]
  406580:	ldr	w1, [x28, #4032]
  406584:	b	4061ec <wcrtomb@plt+0x16ac>
  406588:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40658c:	ldr	x3, [x8, #3864]
  406590:	mov	w1, #0x42                  	// #66
  406594:	mov	w2, #0x40000000            	// #1073741824
  406598:	mov	x0, x20
  40659c:	bl	42b8a0 <wcrtomb@plt+0x26d60>
  4065a0:	b	406098 <wcrtomb@plt+0x1558>
  4065a4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4065a8:	ldr	x3, [x8, #3864]
  4065ac:	mov	w2, #0x40000000            	// #1073741824
  4065b0:	mov	x0, x20
  4065b4:	mov	w1, wzr
  4065b8:	bl	42b8a0 <wcrtomb@plt+0x26d60>
  4065bc:	b	405f04 <wcrtomb@plt+0x13c4>
  4065c0:	ldrb	w8, [sp]
  4065c4:	cbz	w8, 406608 <wcrtomb@plt+0x1ac8>
  4065c8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4065cc:	ldr	x8, [x8, #4064]
  4065d0:	cbz	x8, 4065d8 <wcrtomb@plt+0x1a98>
  4065d4:	blr	x8
  4065d8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4065dc:	add	x1, x1, #0x467
  4065e0:	mov	w2, #0x5                   	// #5
  4065e4:	mov	x0, xzr
  4065e8:	bl	404900 <dcgettext@plt>
  4065ec:	mov	x2, x0
  4065f0:	mov	w0, wzr
  4065f4:	mov	w1, wzr
  4065f8:	bl	403fa0 <error@plt>
  4065fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406600:	mov	w9, #0x2                   	// #2
  406604:	str	w9, [x8, #2416]
  406608:	ldr	x8, [x23, #3744]
  40660c:	mov	x1, xzr
  406610:	ldr	x0, [x8]
  406614:	bl	421434 <wcrtomb@plt+0x1c8f4>
  406618:	ldr	x8, [x25, #3960]
  40661c:	ldr	w1, [x28, #4032]
  406620:	cbnz	x8, 405f2c <wcrtomb@plt+0x13ec>
  406624:	b	4061ec <wcrtomb@plt+0x16ac>
  406628:	ldr	w1, [x28, #4032]
  40662c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406630:	str	w0, [x8, #600]
  406634:	b	405f2c <wcrtomb@plt+0x13ec>
  406638:	bl	404a10 <__errno_location@plt>
  40663c:	ldr	w20, [x0]
  406640:	mov	x19, x0
  406644:	cbz	w24, 40664c <wcrtomb@plt+0x1b0c>
  406648:	bl	41bbf4 <wcrtomb@plt+0x170b4>
  40664c:	str	w20, [x19]
  406650:	ldr	x8, [x23, #3744]
  406654:	ldr	x0, [x8]
  406658:	bl	42a8f0 <wcrtomb@plt+0x25db0>
  40665c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406660:	ldr	x8, [x8, #4064]
  406664:	cbz	x8, 40666c <wcrtomb@plt+0x1b2c>
  406668:	blr	x8
  40666c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  406670:	add	x1, x1, #0x7f3
  406674:	b	406738 <wcrtomb@plt+0x1bf8>
  406678:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40667c:	ldr	x8, [x8, #4064]
  406680:	cbz	x8, 406688 <wcrtomb@plt+0x1b48>
  406684:	blr	x8
  406688:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40668c:	add	x1, x1, #0x811
  406690:	b	406738 <wcrtomb@plt+0x1bf8>
  406694:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406698:	ldr	x8, [x8, #4064]
  40669c:	cbz	x8, 4066a4 <wcrtomb@plt+0x1b64>
  4066a0:	blr	x8
  4066a4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4066a8:	add	x1, x1, #0x967
  4066ac:	mov	w2, #0x5                   	// #5
  4066b0:	mov	x0, xzr
  4066b4:	bl	404900 <dcgettext@plt>
  4066b8:	ldr	x1, [x24, #2928]
  4066bc:	mov	x19, x0
  4066c0:	mov	w0, wzr
  4066c4:	bl	444a58 <argp_parse@@Base+0xd1ac>
  4066c8:	ldr	x1, [x23, #3704]
  4066cc:	mov	x20, x0
  4066d0:	mov	w0, #0x1                   	// #1
  4066d4:	bl	444a58 <argp_parse@@Base+0xd1ac>
  4066d8:	mov	x4, x0
  4066dc:	mov	w0, wzr
  4066e0:	mov	w1, wzr
  4066e4:	mov	x2, x19
  4066e8:	mov	x3, x20
  4066ec:	bl	403fa0 <error@plt>
  4066f0:	bl	40e96c <wcrtomb@plt+0x9e2c>
  4066f4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4066f8:	ldr	x8, [x8, #4064]
  4066fc:	cbz	x8, 406704 <wcrtomb@plt+0x1bc4>
  406700:	blr	x8
  406704:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0x144b0>
  406708:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40670c:	add	x8, x8, #0x8d6
  406710:	add	x9, x9, #0x891
  406714:	cmp	w20, #0x0
  406718:	csel	x1, x9, x8, eq  // eq = none
  40671c:	b	406738 <wcrtomb@plt+0x1bf8>
  406720:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406724:	ldr	x8, [x8, #4064]
  406728:	cbz	x8, 406730 <wcrtomb@plt+0x1bf0>
  40672c:	blr	x8
  406730:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  406734:	add	x1, x1, #0x827
  406738:	mov	w2, #0x5                   	// #5
  40673c:	mov	x0, xzr
  406740:	bl	404900 <dcgettext@plt>
  406744:	mov	x2, x0
  406748:	mov	w0, wzr
  40674c:	mov	w1, wzr
  406750:	bl	403fa0 <error@plt>
  406754:	bl	40e96c <wcrtomb@plt+0x9e2c>
  406758:	mov	w8, #0xffffffff            	// #-1
  40675c:	str	w8, [x28, #4032]
  406760:	bl	404a10 <__errno_location@plt>
  406764:	ldr	w20, [x0]
  406768:	mov	x19, x0
  40676c:	b	40664c <wcrtomb@plt+0x1b0c>
  406770:	mov	w8, #0x1                   	// #1
  406774:	strb	w8, [x20, #632]
  406778:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40677c:	ldr	x8, [x8, #4064]
  406780:	cbz	x8, 406788 <wcrtomb@plt+0x1c48>
  406784:	blr	x8
  406788:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40678c:	add	x1, x1, #0x947
  406790:	mov	w2, #0x5                   	// #5
  406794:	mov	x0, xzr
  406798:	bl	404900 <dcgettext@plt>
  40679c:	ldr	x8, [x23, #3704]
  4067a0:	mov	x19, x0
  4067a4:	mov	x0, x8
  4067a8:	bl	444a68 <argp_parse@@Base+0xd1bc>
  4067ac:	mov	x3, x0
  4067b0:	mov	w0, wzr
  4067b4:	mov	w1, wzr
  4067b8:	mov	x2, x19
  4067bc:	bl	403fa0 <error@plt>
  4067c0:	bl	40e96c <wcrtomb@plt+0x9e2c>
  4067c4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4067c8:	ldr	x8, [x8, #4064]
  4067cc:	mov	w20, w0
  4067d0:	cbz	x8, 4067d8 <wcrtomb@plt+0x1c98>
  4067d4:	blr	x8
  4067d8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4067dc:	add	x1, x1, #0x84a
  4067e0:	mov	w2, #0x5                   	// #5
  4067e4:	mov	x0, xzr
  4067e8:	bl	404900 <dcgettext@plt>
  4067ec:	mov	x19, x0
  4067f0:	mov	w0, w20
  4067f4:	bl	4087f8 <wcrtomb@plt+0x3cb8>
  4067f8:	b	4067ac <wcrtomb@plt+0x1c6c>
  4067fc:	sub	sp, sp, #0xb0
  406800:	adrp	x8, 407000 <wcrtomb@plt+0x24c0>
  406804:	stp	x20, x19, [sp, #160]
  406808:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40680c:	add	x8, x8, #0x85c
  406810:	mov	w0, wzr
  406814:	stp	x29, x30, [sp, #80]
  406818:	stp	x28, x27, [sp, #96]
  40681c:	stp	x26, x25, [sp, #112]
  406820:	stp	x24, x23, [sp, #128]
  406824:	stp	x22, x21, [sp, #144]
  406828:	add	x29, sp, #0x50
  40682c:	str	x8, [x20, #672]
  406830:	bl	408dac <wcrtomb@plt+0x426c>
  406834:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406838:	ldrb	w8, [x8, #2952]
  40683c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406840:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406844:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406848:	str	wzr, [x9, #584]
  40684c:	cbz	w8, 406880 <wcrtomb@plt+0x1d40>
  406850:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406854:	ldr	x8, [x8, #624]
  406858:	cbz	x8, 406880 <wcrtomb@plt+0x1d40>
  40685c:	mov	w8, #0x1                   	// #1
  406860:	str	w8, [x22, #4032]
  406864:	bl	42196c <wcrtomb@plt+0x1ce2c>
  406868:	ldr	x8, [x23, #3976]
  40686c:	str	wzr, [x22, #4032]
  406870:	cmp	x0, x8
  406874:	b.eq	406880 <wcrtomb@plt+0x1d40>  // b.none
  406878:	bl	4056f8 <wcrtomb@plt+0xbb8>
  40687c:	bl	4057c0 <wcrtomb@plt+0xc80>
  406880:	ldr	w0, [x22, #4032]
  406884:	mov	w8, #0x40000000            	// #1073741824
  406888:	cmp	w0, w8
  40688c:	b.lt	4068ac <wcrtomb@plt+0x1d6c>  // b.tstop
  406890:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406894:	ldr	x1, [x8, #2944]
  406898:	ldr	x2, [x23, #3976]
  40689c:	mov	w8, #0xc0000000            	// #-1073741824
  4068a0:	add	w0, w0, w8
  4068a4:	bl	42c0bc <wcrtomb@plt+0x2757c>
  4068a8:	b	4068bc <wcrtomb@plt+0x1d7c>
  4068ac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4068b0:	ldr	x1, [x8, #2944]
  4068b4:	ldr	x2, [x23, #3976]
  4068b8:	bl	444d88 <argp_parse@@Base+0xd4dc>
  4068bc:	ldr	x8, [x23, #3976]
  4068c0:	mov	x19, x0
  4068c4:	cmp	x0, x8
  4068c8:	b.eq	406908 <wcrtomb@plt+0x1dc8>  // b.none
  4068cc:	cbz	x19, 4068e8 <wcrtomb@plt+0x1da8>
  4068d0:	cmn	x19, #0x1
  4068d4:	b.ne	4068fc <wcrtomb@plt+0x1dbc>  // b.any
  4068d8:	bl	404a10 <__errno_location@plt>
  4068dc:	ldr	w8, [x0]
  4068e0:	cmp	w8, #0x1c
  4068e4:	b.ne	40687c <wcrtomb@plt+0x1d3c>  // b.any
  4068e8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4068ec:	ldrb	w8, [x8, #3132]
  4068f0:	cbnz	w8, 40691c <wcrtomb@plt+0x1ddc>
  4068f4:	cmn	x19, #0x1
  4068f8:	b.eq	40687c <wcrtomb@plt+0x1d3c>  // b.none
  4068fc:	mov	x0, x19
  406900:	bl	407930 <wcrtomb@plt+0x2df0>
  406904:	b	406fb8 <wcrtomb@plt+0x2478>
  406908:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40690c:	ldr	x9, [x8, #2896]
  406910:	add	x9, x9, #0x1
  406914:	str	x9, [x8, #2896]
  406918:	b	406fb8 <wcrtomb@plt+0x2478>
  40691c:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406920:	mov	w19, #0x40000000            	// #1073741824
  406924:	mov	w20, #0xc0000000            	// #-1073741824
  406928:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40692c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406930:	adrp	x28, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406934:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406938:	b	406960 <wcrtomb@plt+0x1e20>
  40693c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  406940:	mov	w2, #0x5                   	// #5
  406944:	mov	x0, xzr
  406948:	add	x1, x1, #0x467
  40694c:	bl	404900 <dcgettext@plt>
  406950:	mov	x2, x0
  406954:	mov	w0, wzr
  406958:	mov	w1, wzr
  40695c:	bl	403fa0 <error@plt>
  406960:	ldr	w8, [x26, #3916]
  406964:	cmp	w8, #0x8
  406968:	b.hi	406990 <wcrtomb@plt+0x1e50>  // b.pmore
  40696c:	mov	w9, #0x1                   	// #1
  406970:	lsl	w8, w9, w8
  406974:	mov	w9, #0x106                 	// #262
  406978:	tst	w8, w9
  40697c:	b.eq	406990 <wcrtomb@plt+0x1e50>  // b.none
  406980:	mov	w0, #0x2                   	// #2
  406984:	bl	407b44 <wcrtomb@plt+0x3004>
  406988:	tbnz	w0, #0, 40699c <wcrtomb@plt+0x1e5c>
  40698c:	b	406f9c <wcrtomb@plt+0x245c>
  406990:	mov	w0, wzr
  406994:	bl	407b44 <wcrtomb@plt+0x3004>
  406998:	tbz	w0, #0, 406f9c <wcrtomb@plt+0x245c>
  40699c:	ldr	w0, [x22, #4032]
  4069a0:	cmp	w0, w19
  4069a4:	b.lt	4069c4 <wcrtomb@plt+0x1e84>  // b.tstop
  4069a8:	ldr	x1, [x27, #2944]
  4069ac:	ldr	x2, [x23, #3976]
  4069b0:	add	w0, w0, w20
  4069b4:	bl	42c0bc <wcrtomb@plt+0x2757c>
  4069b8:	cmn	x0, #0x1
  4069bc:	b.eq	4069d8 <wcrtomb@plt+0x1e98>  // b.none
  4069c0:	b	4069e0 <wcrtomb@plt+0x1ea0>
  4069c4:	ldr	x1, [x27, #2944]
  4069c8:	ldr	x2, [x23, #3976]
  4069cc:	bl	444d88 <argp_parse@@Base+0xd4dc>
  4069d0:	cmn	x0, #0x1
  4069d4:	b.ne	4069e0 <wcrtomb@plt+0x1ea0>  // b.any
  4069d8:	bl	4057c0 <wcrtomb@plt+0xc80>
  4069dc:	b	40699c <wcrtomb@plt+0x1e5c>
  4069e0:	ldr	x8, [x23, #3976]
  4069e4:	cmp	x0, x8
  4069e8:	b.eq	4069f0 <wcrtomb@plt+0x1eb0>  // b.none
  4069ec:	bl	407930 <wcrtomb@plt+0x2df0>
  4069f0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4069f4:	ldr	x24, [x21, #2968]
  4069f8:	ldr	x8, [x8, #2904]
  4069fc:	cmp	x24, x8
  406a00:	b.eq	406ab4 <wcrtomb@plt+0x1f74>  // b.none
  406a04:	stur	x24, [x29, #-8]
  406a08:	cbz	x24, 406ae8 <wcrtomb@plt+0x1fa8>
  406a0c:	ldrb	w8, [x24, #156]
  406a10:	cmp	w8, #0x4d
  406a14:	b.eq	406c0c <wcrtomb@plt+0x20cc>  // b.none
  406a18:	cmp	w8, #0x56
  406a1c:	b.eq	406af8 <wcrtomb@plt+0x1fb8>  // b.none
  406a20:	cmp	w8, #0x67
  406a24:	b.ne	406cc0 <wcrtomb@plt+0x2180>  // b.any
  406a28:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406a2c:	add	x24, x24, #0xa0
  406a30:	mov	x0, x24
  406a34:	bl	42437c <wcrtomb@plt+0x1f83c>
  406a38:	sub	x0, x29, #0x8
  406a3c:	mov	w2, #0x2                   	// #2
  406a40:	mov	x1, x24
  406a44:	bl	418578 <wcrtomb@plt+0x13a38>
  406a48:	cmp	w0, #0x2
  406a4c:	b.ne	406ae8 <wcrtomb@plt+0x1fa8>  // b.any
  406a50:	mov	x0, x24
  406a54:	bl	412524 <wcrtomb@plt+0xd9e4>
  406a58:	mov	x0, x24
  406a5c:	bl	424420 <wcrtomb@plt+0x1f8e0>
  406a60:	sub	x0, x29, #0x8
  406a64:	mov	x1, x24
  406a68:	mov	w2, wzr
  406a6c:	bl	418578 <wcrtomb@plt+0x13a38>
  406a70:	cmp	w0, #0x5
  406a74:	b.eq	406cc0 <wcrtomb@plt+0x2180>  // b.none
  406a78:	cmp	w0, #0x1
  406a7c:	b.ne	406ae8 <wcrtomb@plt+0x1fa8>  // b.any
  406a80:	ldur	x9, [x29, #-8]
  406a84:	ldr	x8, [x21, #2968]
  406a88:	cmp	x8, x9
  406a8c:	b.hi	406aa0 <wcrtomb@plt+0x1f60>  // b.pmore
  406a90:	add	x8, x8, #0x200
  406a94:	cmp	x8, x9
  406a98:	b.ls	406a90 <wcrtomb@plt+0x1f50>  // b.plast
  406a9c:	str	x8, [x21, #2968]
  406aa0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406aa4:	ldr	x9, [x9, #2904]
  406aa8:	cmp	x8, x9
  406aac:	b.ls	406cc0 <wcrtomb@plt+0x2180>  // b.plast
  406ab0:	b	406fe4 <wcrtomb@plt+0x24a4>
  406ab4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406ab8:	ldrb	w8, [x8, #632]
  406abc:	tbnz	w8, #0, 406ae4 <wcrtomb@plt+0x1fa4>
  406ac0:	bl	4053c8 <wcrtomb@plt+0x888>
  406ac4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406ac8:	ldr	x24, [x21, #2968]
  406acc:	ldr	x8, [x8, #2904]
  406ad0:	cmp	x24, x8
  406ad4:	b.ne	406a04 <wcrtomb@plt+0x1ec4>  // b.any
  406ad8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406adc:	mov	w9, #0x1                   	// #1
  406ae0:	strb	w9, [x8, #632]
  406ae4:	stur	xzr, [x29, #-8]
  406ae8:	ldr	x8, [x28, #4064]
  406aec:	cbz	x8, 40693c <wcrtomb@plt+0x1dfc>
  406af0:	blr	x8
  406af4:	b	40693c <wcrtomb@plt+0x1dfc>
  406af8:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406afc:	add	x25, x25, #0xa0
  406b00:	mov	x0, x25
  406b04:	bl	42437c <wcrtomb@plt+0x1f83c>
  406b08:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406b0c:	add	x0, x0, #0xbd8
  406b10:	mov	x1, x25
  406b14:	mov	w2, wzr
  406b18:	bl	418578 <wcrtomb@plt+0x13a38>
  406b1c:	cmp	w0, #0x1
  406b20:	b.ne	406bc4 <wcrtomb@plt+0x2084>  // b.any
  406b24:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406b28:	ldr	x9, [x8, #3032]
  406b2c:	ldr	x8, [x21, #2968]
  406b30:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406b34:	cmp	x8, x9
  406b38:	b.hi	406b4c <wcrtomb@plt+0x200c>  // b.pmore
  406b3c:	add	x8, x8, #0x200
  406b40:	cmp	x8, x9
  406b44:	b.ls	406b3c <wcrtomb@plt+0x1ffc>  // b.plast
  406b48:	str	x8, [x21, #2968]
  406b4c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406b50:	ldr	x9, [x9, #2904]
  406b54:	cmp	x8, x9
  406b58:	b.hi	406fe4 <wcrtomb@plt+0x24a4>  // b.pmore
  406b5c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406b60:	add	x0, x0, #0xa0
  406b64:	bl	424420 <wcrtomb@plt+0x1f8e0>
  406b68:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406b6c:	ldr	x1, [x8, #3032]
  406b70:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406b74:	mov	w2, #0x64                  	// #100
  406b78:	add	x0, x0, #0xb70
  406b7c:	bl	41aa68 <wcrtomb@plt+0x15f28>
  406b80:	ldr	x8, [x21, #2968]
  406b84:	cmp	x8, x24
  406b88:	b.hi	406b9c <wcrtomb@plt+0x205c>  // b.pmore
  406b8c:	add	x8, x8, #0x200
  406b90:	cmp	x8, x24
  406b94:	b.ls	406b8c <wcrtomb@plt+0x204c>  // b.plast
  406b98:	str	x8, [x21, #2968]
  406b9c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406ba0:	ldr	x9, [x9, #2904]
  406ba4:	cmp	x8, x9
  406ba8:	b.hi	406fe4 <wcrtomb@plt+0x24a4>  // b.pmore
  406bac:	b.ne	406bfc <wcrtomb@plt+0x20bc>  // b.any
  406bb0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406bb4:	ldrb	w8, [x8, #632]
  406bb8:	tbz	w8, #0, 406bd4 <wcrtomb@plt+0x2094>
  406bbc:	mov	x8, xzr
  406bc0:	b	406bfc <wcrtomb@plt+0x20bc>
  406bc4:	ldr	x8, [x28, #4064]
  406bc8:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406bcc:	cbnz	x8, 406d7c <wcrtomb@plt+0x223c>
  406bd0:	b	406d80 <wcrtomb@plt+0x2240>
  406bd4:	bl	4053c8 <wcrtomb@plt+0x888>
  406bd8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406bdc:	ldr	x8, [x21, #2968]
  406be0:	ldr	x9, [x9, #2904]
  406be4:	cmp	x8, x9
  406be8:	b.ne	406bfc <wcrtomb@plt+0x20bc>  // b.any
  406bec:	mov	x8, xzr
  406bf0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406bf4:	mov	w10, #0x1                   	// #1
  406bf8:	strb	w10, [x9, #632]
  406bfc:	stur	x8, [x29, #-8]
  406c00:	ldrb	w8, [x8, #156]
  406c04:	cmp	w8, #0x4d
  406c08:	b.ne	406cc0 <wcrtomb@plt+0x2180>  // b.any
  406c0c:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406c10:	add	x24, x24, #0xa0
  406c14:	mov	x0, x24
  406c18:	bl	42437c <wcrtomb@plt+0x1f83c>
  406c1c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406c20:	add	x0, x0, #0xbd8
  406c24:	mov	x1, x24
  406c28:	mov	w2, wzr
  406c2c:	bl	418578 <wcrtomb@plt+0x13a38>
  406c30:	cmp	w0, #0x1
  406c34:	b.ne	406d74 <wcrtomb@plt+0x2234>  // b.any
  406c38:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406c3c:	ldr	x9, [x8, #3032]
  406c40:	ldr	x8, [x21, #2968]
  406c44:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406c48:	add	x0, x0, #0xa0
  406c4c:	cmp	x8, x9
  406c50:	b.hi	406c64 <wcrtomb@plt+0x2124>  // b.pmore
  406c54:	add	x8, x8, #0x200
  406c58:	cmp	x8, x9
  406c5c:	b.ls	406c54 <wcrtomb@plt+0x2114>  // b.plast
  406c60:	str	x8, [x21, #2968]
  406c64:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406c68:	ldr	x9, [x9, #2904]
  406c6c:	cmp	x8, x9
  406c70:	b.hi	406fe4 <wcrtomb@plt+0x24a4>  // b.pmore
  406c74:	bl	424420 <wcrtomb@plt+0x1f8e0>
  406c78:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406c7c:	ldr	x1, [x21, #3032]
  406c80:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406c84:	mov	w2, #0x64                  	// #100
  406c88:	add	x0, x0, #0xb78
  406c8c:	bl	41aa68 <wcrtomb@plt+0x15f28>
  406c90:	ldr	x8, [x21, #3032]
  406c94:	mov	w1, #0xc                   	// #12
  406c98:	add	x0, x8, #0x7c
  406c9c:	bl	4197f0 <wcrtomb@plt+0x14cb0>
  406ca0:	ldr	x8, [x21, #3032]
  406ca4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406ca8:	str	x0, [x9, #2960]
  406cac:	mov	w1, #0xc                   	// #12
  406cb0:	add	x0, x8, #0x171
  406cb4:	bl	4197f0 <wcrtomb@plt+0x14cb0>
  406cb8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406cbc:	str	x0, [x8, #2976]
  406cc0:	ldr	x24, [x25, #152]
  406cc4:	mov	x21, x28
  406cc8:	cbz	x24, 406f70 <wcrtomb@plt+0x2430>
  406ccc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406cd0:	ldr	x28, [x8, #2936]
  406cd4:	cbz	x28, 406d24 <wcrtomb@plt+0x21e4>
  406cd8:	ldr	x26, [x24, #16]
  406cdc:	mov	x0, x28
  406ce0:	mov	x1, x26
  406ce4:	bl	404660 <strcmp@plt>
  406ce8:	cbz	w0, 406e00 <wcrtomb@plt+0x22c0>
  406cec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406cf0:	ldr	w8, [x8, #3872]
  406cf4:	orr	w8, w8, #0x4
  406cf8:	cmp	w8, #0x6
  406cfc:	b.ne	406d24 <wcrtomb@plt+0x21e4>  // b.any
  406d00:	mov	x0, x26
  406d04:	bl	403f40 <strlen@plt>
  406d08:	cmp	x0, #0x64
  406d0c:	b.cc	406d24 <wcrtomb@plt+0x21e4>  // b.lo, b.ul, b.last
  406d10:	mov	w2, #0x64                  	// #100
  406d14:	mov	x0, x28
  406d18:	mov	x1, x26
  406d1c:	bl	404300 <strncmp@plt>
  406d20:	cbz	w0, 406db4 <wcrtomb@plt+0x2274>
  406d24:	ldr	x8, [x21, #4064]
  406d28:	mov	x28, x21
  406d2c:	cbz	x8, 406d34 <wcrtomb@plt+0x21f4>
  406d30:	blr	x8
  406d34:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  406d38:	mov	w2, #0x5                   	// #5
  406d3c:	mov	x0, xzr
  406d40:	add	x1, x1, #0x48d
  406d44:	bl	404900 <dcgettext@plt>
  406d48:	ldr	x8, [x25, #152]
  406d4c:	mov	x26, x0
  406d50:	ldr	x8, [x8, #16]
  406d54:	mov	x0, x8
  406d58:	bl	444a68 <argp_parse@@Base+0xd1bc>
  406d5c:	mov	x3, x0
  406d60:	mov	w0, wzr
  406d64:	mov	w1, wzr
  406d68:	mov	x2, x26
  406d6c:	bl	403fa0 <error@plt>
  406d70:	b	406f64 <wcrtomb@plt+0x2424>
  406d74:	ldr	x8, [x28, #4064]
  406d78:	cbz	x8, 406d80 <wcrtomb@plt+0x2240>
  406d7c:	blr	x8
  406d80:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  406d84:	mov	w2, #0x5                   	// #5
  406d88:	mov	x0, xzr
  406d8c:	add	x1, x1, #0x467
  406d90:	bl	404900 <dcgettext@plt>
  406d94:	mov	x2, x0
  406d98:	mov	w0, wzr
  406d9c:	mov	w1, wzr
  406da0:	bl	403fa0 <error@plt>
  406da4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406da8:	mov	w9, #0x2                   	// #2
  406dac:	str	w9, [x8, #2416]
  406db0:	b	406960 <wcrtomb@plt+0x1e20>
  406db4:	ldr	x8, [x21, #4064]
  406db8:	cbz	x8, 406dc0 <wcrtomb@plt+0x2280>
  406dbc:	blr	x8
  406dc0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  406dc4:	mov	w2, #0x5                   	// #5
  406dc8:	mov	x0, xzr
  406dcc:	add	x1, x1, #0x4b0
  406dd0:	bl	404900 <dcgettext@plt>
  406dd4:	ldr	x8, [x25, #152]
  406dd8:	mov	x26, x0
  406ddc:	ldr	x8, [x8, #16]
  406de0:	mov	x0, x8
  406de4:	bl	444a68 <argp_parse@@Base+0xd1bc>
  406de8:	mov	x3, x0
  406dec:	mov	w0, wzr
  406df0:	mov	w1, wzr
  406df4:	mov	x2, x26
  406df8:	bl	403fa0 <error@plt>
  406dfc:	ldr	x24, [x25, #152]
  406e00:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406e04:	ldr	x9, [x8, #2960]
  406e08:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406e0c:	ldr	x8, [x8, #2976]
  406e10:	adds	x9, x8, x9
  406e14:	b.cs	406ec0 <wcrtomb@plt+0x2380>  // b.hs, b.nlast
  406e18:	ldr	x10, [x24, #24]
  406e1c:	cmp	x10, x9
  406e20:	b.ne	406ec0 <wcrtomb@plt+0x2380>  // b.any
  406e24:	ldr	x10, [x24, #32]
  406e28:	sub	x9, x9, x10
  406e2c:	cmp	x9, x8
  406e30:	b.eq	406f70 <wcrtomb@plt+0x2430>  // b.none
  406e34:	ldr	x8, [x21, #4064]
  406e38:	cbz	x8, 406e40 <wcrtomb@plt+0x2300>
  406e3c:	blr	x8
  406e40:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  406e44:	mov	w2, #0x5                   	// #5
  406e48:	mov	x0, xzr
  406e4c:	add	x1, x1, #0x51d
  406e50:	bl	404900 <dcgettext@plt>
  406e54:	ldr	x8, [x25, #152]
  406e58:	mov	x24, x0
  406e5c:	sub	x1, x29, #0x20
  406e60:	ldr	x8, [x8, #24]
  406e64:	mov	x0, x8
  406e68:	bl	43d080 <argp_parse@@Base+0x57d4>
  406e6c:	ldr	x8, [x25, #152]
  406e70:	mov	x25, x0
  406e74:	add	x1, sp, #0x18
  406e78:	ldr	x8, [x8, #32]
  406e7c:	mov	x0, x8
  406e80:	bl	43d080 <argp_parse@@Base+0x57d4>
  406e84:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406e88:	ldr	x8, [x8, #2976]
  406e8c:	mov	x26, x0
  406e90:	mov	x1, sp
  406e94:	mov	x0, x8
  406e98:	bl	43d080 <argp_parse@@Base+0x57d4>
  406e9c:	mov	x5, x0
  406ea0:	mov	w0, wzr
  406ea4:	mov	w1, wzr
  406ea8:	mov	x2, x24
  406eac:	mov	x3, x25
  406eb0:	mov	x4, x26
  406eb4:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406eb8:	bl	403fa0 <error@plt>
  406ebc:	b	406f60 <wcrtomb@plt+0x2420>
  406ec0:	ldr	x8, [x21, #4064]
  406ec4:	cbz	x8, 406ecc <wcrtomb@plt+0x238c>
  406ec8:	blr	x8
  406ecc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  406ed0:	mov	w2, #0x5                   	// #5
  406ed4:	mov	x0, xzr
  406ed8:	add	x1, x1, #0x4f8
  406edc:	bl	404900 <dcgettext@plt>
  406ee0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406ee4:	ldr	x8, [x8, #2936]
  406ee8:	mov	x26, x0
  406eec:	mov	x0, x8
  406ef0:	bl	444a68 <argp_parse@@Base+0xd1bc>
  406ef4:	ldr	x8, [x25, #152]
  406ef8:	mov	x28, x0
  406efc:	sub	x1, x29, #0x20
  406f00:	ldr	x8, [x8, #24]
  406f04:	mov	x0, x8
  406f08:	bl	43d080 <argp_parse@@Base+0x57d4>
  406f0c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406f10:	ldr	x8, [x8, #2960]
  406f14:	mov	x25, x0
  406f18:	add	x1, sp, #0x18
  406f1c:	mov	x0, x8
  406f20:	bl	43d080 <argp_parse@@Base+0x57d4>
  406f24:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406f28:	ldr	x8, [x8, #2976]
  406f2c:	mov	x24, x0
  406f30:	mov	x1, sp
  406f34:	mov	x0, x8
  406f38:	bl	43d080 <argp_parse@@Base+0x57d4>
  406f3c:	mov	x6, x0
  406f40:	mov	w0, wzr
  406f44:	mov	w1, wzr
  406f48:	mov	x2, x26
  406f4c:	mov	x3, x28
  406f50:	mov	x4, x25
  406f54:	mov	x5, x24
  406f58:	bl	403fa0 <error@plt>
  406f5c:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406f60:	mov	x28, x21
  406f64:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406f68:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406f6c:	b	406960 <wcrtomb@plt+0x1e20>
  406f70:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  406f74:	ldr	w9, [x8, #1632]
  406f78:	add	w10, w9, #0x1
  406f7c:	cmn	w9, #0x2
  406f80:	str	w10, [x8, #1632]
  406f84:	b.le	406fe8 <wcrtomb@plt+0x24a8>
  406f88:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  406f8c:	ldr	w9, [x8, #1636]
  406f90:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406f94:	add	w9, w9, #0x1
  406f98:	str	w9, [x8, #1636]
  406f9c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406fa0:	ldr	x8, [x21, #2968]
  406fa4:	ldr	x9, [x9, #2904]
  406fa8:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  406fac:	cmp	x8, x9
  406fb0:	b.ne	406fb8 <wcrtomb@plt+0x2478>  // b.any
  406fb4:	bl	4053c8 <wcrtomb@plt+0x888>
  406fb8:	adrp	x8, 406000 <wcrtomb@plt+0x14c0>
  406fbc:	add	x8, x8, #0x7fc
  406fc0:	str	x8, [x20, #672]
  406fc4:	ldp	x20, x19, [sp, #160]
  406fc8:	ldp	x22, x21, [sp, #144]
  406fcc:	ldp	x24, x23, [sp, #128]
  406fd0:	ldp	x26, x25, [sp, #112]
  406fd4:	ldp	x28, x27, [sp, #96]
  406fd8:	ldp	x29, x30, [sp, #80]
  406fdc:	add	sp, sp, #0xb0
  406fe0:	ret
  406fe4:	bl	4045b0 <abort@plt>
  406fe8:	ldr	x8, [x21, #4064]
  406fec:	cbz	x8, 406ff4 <wcrtomb@plt+0x24b4>
  406ff0:	blr	x8
  406ff4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  406ff8:	add	x1, x1, #0x6fb
  406ffc:	mov	w2, #0x5                   	// #5
  407000:	mov	x0, xzr
  407004:	bl	404900 <dcgettext@plt>
  407008:	mov	x2, x0
  40700c:	mov	w0, wzr
  407010:	mov	w1, wzr
  407014:	bl	403fa0 <error@plt>
  407018:	bl	40e96c <wcrtomb@plt+0x9e2c>
  40701c:	stp	x29, x30, [sp, #-96]!
  407020:	stp	x28, x27, [sp, #16]
  407024:	stp	x26, x25, [sp, #32]
  407028:	stp	x24, x23, [sp, #48]
  40702c:	stp	x22, x21, [sp, #64]
  407030:	stp	x20, x19, [sp, #80]
  407034:	mov	x29, sp
  407038:	sub	sp, sp, #0x1c0
  40703c:	adrp	x8, 408000 <wcrtomb@plt+0x34c0>
  407040:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407044:	add	x8, x8, #0x298
  407048:	mov	x20, x0
  40704c:	str	x8, [x23, #640]
  407050:	bl	4082e4 <wcrtomb@plt+0x37a4>
  407054:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407058:	ldr	x8, [x21, #3976]
  40705c:	mov	x19, x0
  407060:	cmp	x0, x8
  407064:	b.eq	407074 <wcrtomb@plt+0x2534>  // b.none
  407068:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40706c:	ldrb	w9, [x9, #3132]
  407070:	cbz	w9, 40781c <wcrtomb@plt+0x2cdc>
  407074:	cbz	x19, 407088 <wcrtomb@plt+0x2548>
  407078:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40707c:	ldr	x10, [x9, #2912]
  407080:	add	x10, x10, #0x1
  407084:	str	x10, [x9, #2912]
  407088:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40708c:	ldr	d0, [x22, #616]
  407090:	scvtf	d1, x19
  407094:	cmp	x19, x8
  407098:	fadd	d0, d0, d1
  40709c:	str	d0, [x22, #616]
  4070a0:	b.eq	4077ec <wcrtomb@plt+0x2cac>  // b.none
  4070a4:	adrp	x28, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4070a8:	ldr	x8, [x28, #152]
  4070ac:	mov	x26, x8
  4070b0:	cbz	x8, 407274 <wcrtomb@plt+0x2734>
  4070b4:	ldr	x8, [x26]
  4070b8:	cbz	x8, 4070c8 <wcrtomb@plt+0x2588>
  4070bc:	ldr	x9, [x8, #8]
  4070c0:	cmp	x19, x9, lsl #9
  4070c4:	b.cs	4070ac <wcrtomb@plt+0x256c>  // b.hs, b.nlast
  4070c8:	mov	w24, wzr
  4070cc:	tst	x19, #0x1ff
  4070d0:	b.ne	407280 <wcrtomb@plt+0x2740>  // b.any
  4070d4:	tbz	x19, #63, 4070f4 <wcrtomb@plt+0x25b4>
  4070d8:	bl	404a10 <__errno_location@plt>
  4070dc:	ldr	w8, [x0]
  4070e0:	sub	w9, w8, #0x5
  4070e4:	cmp	w9, #0x2
  4070e8:	b.cc	4070f4 <wcrtomb@plt+0x25b4>  // b.lo, b.ul, b.last
  4070ec:	cmp	w8, #0x1c
  4070f0:	b.ne	40781c <wcrtomb@plt+0x2cdc>  // b.any
  4070f4:	mov	w0, #0x1                   	// #1
  4070f8:	bl	407b44 <wcrtomb@plt+0x3004>
  4070fc:	tbz	w0, #0, 4077ec <wcrtomb@plt+0x2cac>
  407100:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407104:	add	x0, x0, #0xa0
  407108:	str	w24, [sp, #12]
  40710c:	bl	424420 <wcrtomb@plt+0x1f8e0>
  407110:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  407114:	ldr	w9, [x8, #1632]
  407118:	add	w10, w9, #0x1
  40711c:	cmn	w9, #0x2
  407120:	str	w10, [x8, #1632]
  407124:	b.le	407824 <wcrtomb@plt+0x2ce4>
  407128:	adrp	x12, 477000 <_obstack_memory_used@@Base+0x304b0>
  40712c:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407130:	ldr	w8, [x12, #1636]
  407134:	ldr	w10, [x25, #704]
  407138:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40713c:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407140:	add	w8, w8, #0x1
  407144:	cmp	w10, #0x0
  407148:	ldr	d0, [x22, #616]
  40714c:	ldr	d1, [x9, #608]
  407150:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407154:	str	w8, [x12, #1636]
  407158:	cset	w8, eq  // eq = none
  40715c:	add	x24, x24, #0x2c8
  407160:	ldr	x10, [x24, w8, uxtw #3]
  407164:	ldr	x23, [x11, #2944]
  407168:	fadd	d0, d0, d1
  40716c:	str	d0, [x9, #608]
  407170:	str	xzr, [x22, #616]
  407174:	str	w8, [x25, #704]
  407178:	cbnz	x10, 407198 <wcrtomb@plt+0x2658>
  40717c:	ldr	x1, [x21, #3976]
  407180:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407184:	add	x9, x9, #0x290
  407188:	add	x0, x9, x8, lsl #3
  40718c:	bl	41c554 <wcrtomb@plt+0x17a14>
  407190:	ldrsw	x8, [x25, #704]
  407194:	str	x0, [x24, x8, lsl #3]
  407198:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40719c:	ldr	x8, [x24, x8, lsl #3]
  4071a0:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4071a4:	ldrsw	x9, [x9, #3804]
  4071a8:	ldr	x11, [x27, #3704]
  4071ac:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4071b0:	adrp	x13, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4071b4:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4071b8:	adrp	x12, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4071bc:	mov	w10, #0x1                   	// #1
  4071c0:	str	x8, [x13, #2944]
  4071c4:	str	x8, [x24, #2968]
  4071c8:	add	x8, x8, x9, lsl #9
  4071cc:	str	x8, [x25, #2904]
  4071d0:	strb	w10, [x12, #700]
  4071d4:	cbz	x11, 407248 <wcrtomb@plt+0x2708>
  4071d8:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  4071dc:	ldrsw	x0, [x8, #1636]
  4071e0:	add	x1, sp, #0x10
  4071e4:	bl	43d080 <argp_parse@@Base+0x57d4>
  4071e8:	ldr	x8, [x27, #3704]
  4071ec:	mov	x21, x0
  4071f0:	mov	x0, x8
  4071f4:	bl	403f40 <strlen@plt>
  4071f8:	mov	x22, x0
  4071fc:	mov	x0, x21
  407200:	bl	403f40 <strlen@plt>
  407204:	add	x8, x22, x0
  407208:	add	x0, x8, #0x9
  40720c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  407210:	ldr	x4, [x27, #3704]
  407214:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407218:	adrp	x5, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40721c:	add	x3, x3, #0x738
  407220:	add	x5, x5, #0x741
  407224:	mov	w1, #0x1                   	// #1
  407228:	mov	x2, #0xffffffffffffffff    	// #-1
  40722c:	mov	x6, x21
  407230:	mov	x22, x0
  407234:	bl	403f60 <__sprintf_chk@plt>
  407238:	mov	x0, x22
  40723c:	bl	408448 <wcrtomb@plt+0x3908>
  407240:	mov	x0, x22
  407244:	bl	404700 <free@plt>
  407248:	ldr	w8, [sp, #12]
  40724c:	tbz	w8, #0, 4072c8 <wcrtomb@plt+0x2788>
  407250:	ldr	x2, [x24, #2968]
  407254:	ldr	x8, [x25, #2904]
  407258:	cmp	x2, x8
  40725c:	b.ne	40737c <wcrtomb@plt+0x283c>  // b.any
  407260:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407264:	ldrb	w8, [x21, #632]
  407268:	tbz	w8, #0, 40735c <wcrtomb@plt+0x281c>
  40726c:	mov	x2, xzr
  407270:	b	40737c <wcrtomb@plt+0x283c>
  407274:	mov	w24, #0x1                   	// #1
  407278:	tst	x19, #0x1ff
  40727c:	b.eq	4070d4 <wcrtomb@plt+0x2594>  // b.none
  407280:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407284:	ldr	x8, [x8, #4064]
  407288:	cbz	x8, 407290 <wcrtomb@plt+0x2750>
  40728c:	blr	x8
  407290:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407294:	add	x1, x1, #0x712
  407298:	mov	w2, #0x5                   	// #5
  40729c:	mov	x0, xzr
  4072a0:	bl	404900 <dcgettext@plt>
  4072a4:	mov	x2, x0
  4072a8:	mov	w0, wzr
  4072ac:	mov	w1, wzr
  4072b0:	bl	403fa0 <error@plt>
  4072b4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4072b8:	mov	w9, #0x2                   	// #2
  4072bc:	mov	x0, x19
  4072c0:	str	w9, [x8, #2416]
  4072c4:	bl	4056f8 <wcrtomb@plt+0xbb8>
  4072c8:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4072cc:	ldr	w8, [x27, #3872]
  4072d0:	cmp	w8, #0x4
  4072d4:	b.ne	407338 <wcrtomb@plt+0x27f8>  // b.any
  4072d8:	mov	x21, x26
  4072dc:	ldr	x8, [x21, #32]!
  4072e0:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4072e4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4072e8:	add	x22, x22, #0xa0
  4072ec:	ldp	x2, x9, [x21, #-16]
  4072f0:	add	x0, x0, #0x759
  4072f4:	mov	x1, x22
  4072f8:	sub	x8, x9, x8
  4072fc:	str	x8, [sp, #16]
  407300:	bl	412c84 <wcrtomb@plt+0xe144>
  407304:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407308:	add	x0, x0, #0x76d
  40730c:	mov	x1, x22
  407310:	mov	x2, x21
  407314:	bl	412c84 <wcrtomb@plt+0xe144>
  407318:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40731c:	add	x0, x0, #0x77d
  407320:	add	x2, sp, #0x10
  407324:	mov	x1, x22
  407328:	bl	412c84 <wcrtomb@plt+0xe144>
  40732c:	ldr	x2, [x24, #2968]
  407330:	ldr	x8, [x25, #2904]
  407334:	b	4074e8 <wcrtomb@plt+0x29a8>
  407338:	ldr	x21, [x24, #2968]
  40733c:	ldr	x8, [x25, #2904]
  407340:	cmp	x21, x8
  407344:	b.ne	4073bc <wcrtomb@plt+0x287c>  // b.any
  407348:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40734c:	ldrb	w8, [x22, #632]
  407350:	tbz	w8, #0, 40739c <wcrtomb@plt+0x285c>
  407354:	mov	x21, xzr
  407358:	b	4073bc <wcrtomb@plt+0x287c>
  40735c:	bl	4053c8 <wcrtomb@plt+0x888>
  407360:	ldr	x2, [x24, #2968]
  407364:	ldr	x8, [x25, #2904]
  407368:	cmp	x2, x8
  40736c:	b.ne	40737c <wcrtomb@plt+0x283c>  // b.any
  407370:	mov	x2, xzr
  407374:	mov	w8, #0x1                   	// #1
  407378:	strb	w8, [x21, #632]
  40737c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407380:	add	x21, x21, #0xa0
  407384:	mov	w0, #0x1                   	// #1
  407388:	mov	x1, x21
  40738c:	bl	40af60 <wcrtomb@plt+0x6420>
  407390:	mov	x0, x21
  407394:	bl	424420 <wcrtomb@plt+0x1f8e0>
  407398:	b	4075f8 <wcrtomb@plt+0x2ab8>
  40739c:	bl	4053c8 <wcrtomb@plt+0x888>
  4073a0:	ldr	x21, [x24, #2968]
  4073a4:	ldr	x8, [x25, #2904]
  4073a8:	cmp	x21, x8
  4073ac:	b.ne	4073bc <wcrtomb@plt+0x287c>  // b.any
  4073b0:	mov	x21, xzr
  4073b4:	mov	w8, #0x1                   	// #1
  4073b8:	strb	w8, [x22, #632]
  4073bc:	ldr	x0, [x26, #16]
  4073c0:	bl	403f40 <strlen@plt>
  4073c4:	mov	x2, x0
  4073c8:	cmp	x0, #0x65
  4073cc:	b.cc	40741c <wcrtomb@plt+0x28dc>  // b.lo, b.ul, b.last
  4073d0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4073d4:	ldr	x8, [x8, #4064]
  4073d8:	cbz	x8, 4073e0 <wcrtomb@plt+0x28a0>
  4073dc:	blr	x8
  4073e0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4073e4:	add	x1, x1, #0x78f
  4073e8:	mov	w2, #0x5                   	// #5
  4073ec:	mov	x0, xzr
  4073f0:	bl	404900 <dcgettext@plt>
  4073f4:	ldr	x8, [x26, #16]
  4073f8:	mov	x22, x0
  4073fc:	mov	x0, x8
  407400:	bl	444778 <argp_parse@@Base+0xcecc>
  407404:	mov	x3, x0
  407408:	mov	w0, wzr
  40740c:	mov	w1, wzr
  407410:	mov	x2, x22
  407414:	bl	403fa0 <error@plt>
  407418:	mov	w2, #0x64                  	// #100
  40741c:	movi	v0.2d, #0x0
  407420:	stp	q0, q0, [x21, #480]
  407424:	stp	q0, q0, [x21, #448]
  407428:	stp	q0, q0, [x21, #416]
  40742c:	stp	q0, q0, [x21, #384]
  407430:	stp	q0, q0, [x21, #352]
  407434:	stp	q0, q0, [x21, #320]
  407438:	stp	q0, q0, [x21, #288]
  40743c:	stp	q0, q0, [x21, #256]
  407440:	stp	q0, q0, [x21, #224]
  407444:	stp	q0, q0, [x21, #192]
  407448:	stp	q0, q0, [x21, #160]
  40744c:	stp	q0, q0, [x21, #128]
  407450:	stp	q0, q0, [x21, #96]
  407454:	stp	q0, q0, [x21, #64]
  407458:	stp	q0, q0, [x21, #32]
  40745c:	stp	q0, q0, [x21]
  407460:	ldr	x1, [x26, #16]
  407464:	mov	x0, x21
  407468:	bl	403ec0 <memcpy@plt>
  40746c:	mov	w8, #0x4d                  	// #77
  407470:	strb	w8, [x21, #156]
  407474:	ldr	x0, [x26, #32]
  407478:	add	x1, x21, #0x7c
  40747c:	mov	w2, #0xc                   	// #12
  407480:	bl	40a960 <wcrtomb@plt+0x5e20>
  407484:	ldp	x8, x9, [x26, #24]
  407488:	add	x1, x21, #0x171
  40748c:	mov	w2, #0xc                   	// #12
  407490:	sub	x0, x8, x9
  407494:	bl	40a960 <wcrtomb@plt+0x5e20>
  407498:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40749c:	ldr	w27, [x22, #3700]
  4074a0:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4074a4:	add	x0, x0, #0xc50
  4074a8:	mov	x2, #0xffffffffffffffff    	// #-1
  4074ac:	mov	x1, x21
  4074b0:	str	wzr, [x22, #3700]
  4074b4:	bl	40bbbc <wcrtomb@plt+0x707c>
  4074b8:	ldr	x2, [x24, #2968]
  4074bc:	str	w27, [x22, #3700]
  4074c0:	cmp	x2, x21
  4074c4:	b.hi	4074d8 <wcrtomb@plt+0x2998>  // b.pmore
  4074c8:	add	x2, x2, #0x200
  4074cc:	cmp	x2, x21
  4074d0:	b.ls	4074c8 <wcrtomb@plt+0x2988>  // b.plast
  4074d4:	str	x2, [x24, #2968]
  4074d8:	ldr	x8, [x25, #2904]
  4074dc:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4074e0:	cmp	x2, x8
  4074e4:	b.hi	407818 <wcrtomb@plt+0x2cd8>  // b.pmore
  4074e8:	cmp	x2, x8
  4074ec:	b.ne	407524 <wcrtomb@plt+0x29e4>  // b.any
  4074f0:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4074f4:	ldrb	w8, [x21, #632]
  4074f8:	tbz	w8, #0, 407504 <wcrtomb@plt+0x29c4>
  4074fc:	mov	x2, xzr
  407500:	b	407524 <wcrtomb@plt+0x29e4>
  407504:	bl	4053c8 <wcrtomb@plt+0x888>
  407508:	ldr	x2, [x24, #2968]
  40750c:	ldr	x8, [x25, #2904]
  407510:	cmp	x2, x8
  407514:	b.ne	407524 <wcrtomb@plt+0x29e4>  // b.any
  407518:	mov	x2, xzr
  40751c:	mov	w8, #0x1                   	// #1
  407520:	strb	w8, [x21, #632]
  407524:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407528:	add	x21, x21, #0xa0
  40752c:	mov	w0, #0x1                   	// #1
  407530:	mov	x1, x21
  407534:	bl	40af60 <wcrtomb@plt+0x6420>
  407538:	mov	x0, x21
  40753c:	bl	424420 <wcrtomb@plt+0x1f8e0>
  407540:	ldr	w8, [x27, #3872]
  407544:	cmp	w8, #0x4
  407548:	b.ne	4075f8 <wcrtomb@plt+0x2ab8>  // b.any
  40754c:	movi	v0.2d, #0x0
  407550:	str	xzr, [sp, #432]
  407554:	stp	q0, q0, [sp, #400]
  407558:	stp	q0, q0, [sp, #368]
  40755c:	stp	q0, q0, [sp, #336]
  407560:	stp	q0, q0, [sp, #304]
  407564:	stp	q0, q0, [sp, #272]
  407568:	stp	q0, q0, [sp, #240]
  40756c:	stp	q0, q0, [sp, #208]
  407570:	stp	q0, q0, [sp, #176]
  407574:	stp	q0, q0, [sp, #144]
  407578:	stp	q0, q0, [sp, #112]
  40757c:	stp	q0, q0, [sp, #80]
  407580:	stp	q0, q0, [sp, #48]
  407584:	str	q0, [sp, #32]
  407588:	ldr	x8, [x26, #16]
  40758c:	stp	x8, x8, [sp, #16]
  407590:	mov	w8, #0x81a4                	// #33188
  407594:	str	w8, [sp, #120]
  407598:	bl	404070 <getuid@plt>
  40759c:	str	w0, [sp, #128]
  4075a0:	bl	404740 <getgid@plt>
  4075a4:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  4075a8:	ldrsw	x2, [x8, #1636]
  4075ac:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4075b0:	str	w0, [sp, #132]
  4075b4:	add	x1, x1, #0x7da
  4075b8:	add	x0, sp, #0x10
  4075bc:	bl	411be4 <wcrtomb@plt+0xd0a4>
  4075c0:	stp	x0, x0, [sp, #16]
  4075c4:	ldr	x8, [x26, #32]
  4075c8:	add	x0, sp, #0x10
  4075cc:	str	x8, [sp, #152]
  4075d0:	str	x8, [sp, #280]
  4075d4:	bl	40b044 <wcrtomb@plt+0x6504>
  4075d8:	cbz	x0, 407818 <wcrtomb@plt+0x2cd8>
  4075dc:	mov	x2, x0
  4075e0:	add	x1, sp, #0x10
  4075e4:	mov	w0, wzr
  4075e8:	bl	40af60 <wcrtomb@plt+0x6420>
  4075ec:	bl	40bb44 <wcrtomb@plt+0x7004>
  4075f0:	ldr	x0, [sp, #16]
  4075f4:	bl	404700 <free@plt>
  4075f8:	ldr	x21, [x24, #2968]
  4075fc:	ldr	x8, [x25, #2904]
  407600:	cmp	x21, x8
  407604:	b.ne	40763c <wcrtomb@plt+0x2afc>  // b.any
  407608:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40760c:	ldrb	w8, [x22, #632]
  407610:	tbz	w8, #0, 40761c <wcrtomb@plt+0x2adc>
  407614:	mov	x21, xzr
  407618:	b	40763c <wcrtomb@plt+0x2afc>
  40761c:	bl	4053c8 <wcrtomb@plt+0x888>
  407620:	ldr	x21, [x24, #2968]
  407624:	ldr	x8, [x25, #2904]
  407628:	cmp	x21, x8
  40762c:	b.ne	40763c <wcrtomb@plt+0x2afc>  // b.any
  407630:	mov	x21, xzr
  407634:	mov	w8, #0x1                   	// #1
  407638:	strb	w8, [x22, #632]
  40763c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407640:	ldr	x28, [x28, #152]
  407644:	ldr	x27, [x8, #2944]
  407648:	cmp	x28, #0x0
  40764c:	cset	w8, ne  // ne = any
  407650:	cbz	x28, 407678 <wcrtomb@plt+0x2b38>
  407654:	cmp	x28, x26
  407658:	b.eq	407678 <wcrtomb@plt+0x2b38>  // b.none
  40765c:	mov	x22, x28
  407660:	ldr	x0, [x22, #16]
  407664:	ldr	x28, [x28]
  407668:	bl	404700 <free@plt>
  40766c:	mov	x0, x22
  407670:	bl	404700 <free@plt>
  407674:	b	407648 <wcrtomb@plt+0x2b08>
  407678:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40767c:	str	x28, [x9, #152]
  407680:	tbnz	w8, #0, 40768c <wcrtomb@plt+0x2b4c>
  407684:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407688:	str	xzr, [x8, #144]
  40768c:	ldr	w8, [sp, #12]
  407690:	add	x22, x23, x19
  407694:	sub	x19, x20, x19
  407698:	tbnz	w8, #0, 4076bc <wcrtomb@plt+0x2b7c>
  40769c:	sub	x8, x21, x27
  4076a0:	asr	x8, x8, #9
  4076a4:	ldr	x9, [x26, #8]
  4076a8:	str	xzr, [x26, #40]
  4076ac:	add	x9, x9, x8
  4076b0:	str	x9, [x26, #8]
  4076b4:	ldr	x26, [x26]
  4076b8:	cbnz	x26, 4076a4 <wcrtomb@plt+0x2b64>
  4076bc:	ldr	x8, [x25, #2904]
  4076c0:	sub	x20, x8, x21
  4076c4:	cmp	x20, x19
  4076c8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4076cc:	strb	wzr, [x8, #700]
  4076d0:	b.cs	407768 <wcrtomb@plt+0x2c28>  // b.hs, b.nlast
  4076d4:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4076d8:	mov	w27, #0x1                   	// #1
  4076dc:	b	4076f0 <wcrtomb@plt+0x2bb0>
  4076e0:	mov	x21, xzr
  4076e4:	sub	x20, x8, x21
  4076e8:	cmp	x20, x19
  4076ec:	b.cs	407768 <wcrtomb@plt+0x2c28>  // b.hs, b.nlast
  4076f0:	mov	x0, x21
  4076f4:	mov	x1, x22
  4076f8:	mov	x2, x20
  4076fc:	bl	403ec0 <memcpy@plt>
  407700:	sub	x8, x20, #0x1
  407704:	and	x8, x8, #0xfffffffffffffe00
  407708:	add	x8, x21, x8
  40770c:	ldr	x21, [x24, #2968]
  407710:	cmp	x21, x8
  407714:	b.hi	407728 <wcrtomb@plt+0x2be8>  // b.pmore
  407718:	add	x21, x21, #0x200
  40771c:	cmp	x21, x8
  407720:	b.ls	407718 <wcrtomb@plt+0x2bd8>  // b.plast
  407724:	str	x21, [x24, #2968]
  407728:	ldr	x8, [x25, #2904]
  40772c:	sub	x19, x19, x20
  407730:	cmp	x21, x8
  407734:	b.hi	407818 <wcrtomb@plt+0x2cd8>  // b.pmore
  407738:	add	x22, x22, x20
  40773c:	b.ne	4076e4 <wcrtomb@plt+0x2ba4>  // b.any
  407740:	ldrb	w9, [x26, #632]
  407744:	tbnz	w9, #0, 4076e0 <wcrtomb@plt+0x2ba0>
  407748:	bl	4053c8 <wcrtomb@plt+0x888>
  40774c:	ldr	x21, [x24, #2968]
  407750:	ldr	x8, [x25, #2904]
  407754:	cmp	x21, x8
  407758:	b.ne	4076e4 <wcrtomb@plt+0x2ba4>  // b.any
  40775c:	mov	x21, xzr
  407760:	strb	w27, [x26, #632]
  407764:	b	4076e4 <wcrtomb@plt+0x2ba4>
  407768:	mov	x0, x21
  40776c:	mov	x1, x22
  407770:	mov	x2, x19
  407774:	bl	403ec0 <memcpy@plt>
  407778:	add	x0, x21, x19
  40777c:	sub	x2, x20, x19
  407780:	mov	w1, wzr
  407784:	bl	404360 <memset@plt>
  407788:	ldr	x8, [x24, #2968]
  40778c:	sub	x9, x19, #0x1
  407790:	and	x9, x9, #0xfffffffffffffe00
  407794:	add	x9, x21, x9
  407798:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40779c:	cmp	x8, x9
  4077a0:	b.hi	4077b4 <wcrtomb@plt+0x2c74>  // b.pmore
  4077a4:	add	x8, x8, #0x200
  4077a8:	cmp	x8, x9
  4077ac:	b.ls	4077a4 <wcrtomb@plt+0x2c64>  // b.plast
  4077b0:	str	x8, [x24, #2968]
  4077b4:	ldr	x9, [x25, #2904]
  4077b8:	cmp	x8, x9
  4077bc:	b.hi	407818 <wcrtomb@plt+0x2cd8>  // b.pmore
  4077c0:	b.ne	4077ec <wcrtomb@plt+0x2cac>  // b.any
  4077c4:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4077c8:	ldrb	w8, [x19, #632]
  4077cc:	tbnz	w8, #0, 4077ec <wcrtomb@plt+0x2cac>
  4077d0:	bl	4053c8 <wcrtomb@plt+0x888>
  4077d4:	ldr	x8, [x24, #2968]
  4077d8:	ldr	x9, [x25, #2904]
  4077dc:	cmp	x8, x9
  4077e0:	b.ne	4077ec <wcrtomb@plt+0x2cac>  // b.any
  4077e4:	mov	w8, #0x1                   	// #1
  4077e8:	strb	w8, [x19, #632]
  4077ec:	adrp	x8, 407000 <wcrtomb@plt+0x24c0>
  4077f0:	add	x8, x8, #0x1c
  4077f4:	str	x8, [x23, #640]
  4077f8:	add	sp, sp, #0x1c0
  4077fc:	ldp	x20, x19, [sp, #80]
  407800:	ldp	x22, x21, [sp, #64]
  407804:	ldp	x24, x23, [sp, #48]
  407808:	ldp	x26, x25, [sp, #32]
  40780c:	ldp	x28, x27, [sp, #16]
  407810:	ldp	x29, x30, [sp], #96
  407814:	ret
  407818:	bl	4045b0 <abort@plt>
  40781c:	mov	x0, x19
  407820:	bl	4056f8 <wcrtomb@plt+0xbb8>
  407824:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407828:	ldr	x8, [x8, #4064]
  40782c:	cbz	x8, 407834 <wcrtomb@plt+0x2cf4>
  407830:	blr	x8
  407834:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407838:	add	x1, x1, #0x6fb
  40783c:	mov	w2, #0x5                   	// #5
  407840:	mov	x0, xzr
  407844:	bl	404900 <dcgettext@plt>
  407848:	mov	x2, x0
  40784c:	mov	w0, wzr
  407850:	mov	w1, wzr
  407854:	bl	403fa0 <error@plt>
  407858:	bl	40e96c <wcrtomb@plt+0x9e2c>
  40785c:	stp	x29, x30, [sp, #-32]!
  407860:	mov	w0, wzr
  407864:	stp	x20, x19, [sp, #16]
  407868:	mov	x29, sp
  40786c:	bl	408dac <wcrtomb@plt+0x426c>
  407870:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407874:	ldrb	w8, [x8, #2952]
  407878:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40787c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407880:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407884:	str	wzr, [x9, #584]
  407888:	cbz	w8, 4078c4 <wcrtomb@plt+0x2d84>
  40788c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407890:	ldr	x8, [x8, #624]
  407894:	cbz	x8, 4078c4 <wcrtomb@plt+0x2d84>
  407898:	mov	w8, #0x1                   	// #1
  40789c:	str	w8, [x19, #4032]
  4078a0:	bl	42196c <wcrtomb@plt+0x1ce2c>
  4078a4:	ldr	x8, [x20, #3976]
  4078a8:	str	wzr, [x19, #4032]
  4078ac:	cmp	x0, x8
  4078b0:	b.eq	4078c4 <wcrtomb@plt+0x2d84>  // b.none
  4078b4:	bl	4056f8 <wcrtomb@plt+0xbb8>
  4078b8:	cmn	x0, #0x1
  4078bc:	b.ne	407924 <wcrtomb@plt+0x2de4>  // b.any
  4078c0:	bl	4057c0 <wcrtomb@plt+0xc80>
  4078c4:	ldr	w0, [x19, #4032]
  4078c8:	mov	w8, #0x40000000            	// #1073741824
  4078cc:	cmp	w0, w8
  4078d0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4078d4:	b.lt	4078f0 <wcrtomb@plt+0x2db0>  // b.tstop
  4078d8:	ldr	x1, [x8, #2944]
  4078dc:	ldr	x2, [x20, #3976]
  4078e0:	mov	w8, #0xc0000000            	// #-1073741824
  4078e4:	add	w0, w0, w8
  4078e8:	bl	42c0bc <wcrtomb@plt+0x2757c>
  4078ec:	b	4078fc <wcrtomb@plt+0x2dbc>
  4078f0:	ldr	x1, [x8, #2944]
  4078f4:	ldr	x2, [x20, #3976]
  4078f8:	bl	444d88 <argp_parse@@Base+0xd4dc>
  4078fc:	ldr	x8, [x20, #3976]
  407900:	cmp	x0, x8
  407904:	b.ne	4078b8 <wcrtomb@plt+0x2d78>  // b.any
  407908:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40790c:	ldr	x9, [x8, #2896]
  407910:	add	x9, x9, #0x1
  407914:	str	x9, [x8, #2896]
  407918:	ldp	x20, x19, [sp, #16]
  40791c:	ldp	x29, x30, [sp], #32
  407920:	ret
  407924:	ldp	x20, x19, [sp, #16]
  407928:	ldp	x29, x30, [sp], #32
  40792c:	b	407930 <wcrtomb@plt+0x2df0>
  407930:	sub	sp, sp, #0xe0
  407934:	stp	x24, x23, [sp, #176]
  407938:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40793c:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407940:	ldr	x8, [x23, #2944]
  407944:	ldr	x9, [x24, #3976]
  407948:	stp	x26, x25, [sp, #160]
  40794c:	stp	x22, x21, [sp, #192]
  407950:	stp	x20, x19, [sp, #208]
  407954:	mov	x21, x0
  407958:	add	x20, x8, x0
  40795c:	subs	x19, x9, x0
  407960:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407964:	stp	x29, x30, [sp, #128]
  407968:	str	x27, [sp, #144]
  40796c:	add	x29, sp, #0x80
  407970:	b.eq	407a1c <wcrtomb@plt+0x2edc>  // b.none
  407974:	and	x8, x19, #0x1ff
  407978:	cbnz	x8, 407a1c <wcrtomb@plt+0x2edc>
  40797c:	cbz	x21, 407a1c <wcrtomb@plt+0x2edc>
  407980:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  407984:	ldr	w8, [x8, #3720]
  407988:	tbz	w8, #22, 407a1c <wcrtomb@plt+0x2edc>
  40798c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407990:	ldr	x8, [x8, #624]
  407994:	cbnz	x8, 407a1c <wcrtomb@plt+0x2edc>
  407998:	ldr	w1, [x25, #4032]
  40799c:	mov	x2, sp
  4079a0:	mov	w0, wzr
  4079a4:	bl	4048e0 <__fxstat@plt>
  4079a8:	cbz	w0, 4079c0 <wcrtomb@plt+0x2e80>
  4079ac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4079b0:	ldr	x8, [x8, #3792]
  4079b4:	ldr	x0, [x8]
  4079b8:	bl	41c40c <wcrtomb@plt+0x178cc>
  4079bc:	b	407a1c <wcrtomb@plt+0x2edc>
  4079c0:	ldr	w8, [sp, #16]
  4079c4:	and	w8, w8, #0xf000
  4079c8:	orr	w8, w8, #0x4000
  4079cc:	cmp	w8, #0x6, lsl #12
  4079d0:	b.ne	407a1c <wcrtomb@plt+0x2edc>  // b.any
  4079d4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4079d8:	ldr	x8, [x8, #4064]
  4079dc:	lsr	x22, x21, #9
  4079e0:	cbz	x8, 4079e8 <wcrtomb@plt+0x2ea8>
  4079e4:	blr	x8
  4079e8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4079ec:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4079f0:	add	x1, x1, #0x3e9
  4079f4:	add	x2, x2, #0x401
  4079f8:	mov	w4, #0x5                   	// #5
  4079fc:	mov	x0, xzr
  407a00:	mov	x3, x22
  407a04:	bl	404820 <dcngettext@plt>
  407a08:	mov	x2, x0
  407a0c:	mov	w0, wzr
  407a10:	mov	w1, wzr
  407a14:	mov	x3, x22
  407a18:	bl	403fa0 <error@plt>
  407a1c:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407a20:	mov	w26, #0x40000000            	// #1073741824
  407a24:	mov	w27, #0xc0000000            	// #-1073741824
  407a28:	tst	x19, #0x1ff
  407a2c:	b.eq	407a38 <wcrtomb@plt+0x2ef8>  // b.none
  407a30:	cbnz	x21, 407a50 <wcrtomb@plt+0x2f10>
  407a34:	b	407aa8 <wcrtomb@plt+0x2f68>
  407a38:	cbz	x19, 407aa8 <wcrtomb@plt+0x2f68>
  407a3c:	cbz	x21, 407aa8 <wcrtomb@plt+0x2f68>
  407a40:	ldrb	w8, [x22, #680]
  407a44:	cbnz	w8, 407a50 <wcrtomb@plt+0x2f10>
  407a48:	b	407aa8 <wcrtomb@plt+0x2f68>
  407a4c:	bl	4057c0 <wcrtomb@plt+0xc80>
  407a50:	ldr	w0, [x25, #4032]
  407a54:	cmp	w0, w26
  407a58:	b.lt	407a70 <wcrtomb@plt+0x2f30>  // b.tstop
  407a5c:	add	w0, w0, w27
  407a60:	mov	x1, x20
  407a64:	mov	x2, x19
  407a68:	bl	42c0bc <wcrtomb@plt+0x2757c>
  407a6c:	b	407a7c <wcrtomb@plt+0x2f3c>
  407a70:	mov	x1, x20
  407a74:	mov	x2, x19
  407a78:	bl	444d88 <argp_parse@@Base+0xd4dc>
  407a7c:	mov	x21, x0
  407a80:	cmn	x0, #0x1
  407a84:	b.eq	407a4c <wcrtomb@plt+0x2f0c>  // b.none
  407a88:	cbz	x21, 407aa8 <wcrtomb@plt+0x2f68>
  407a8c:	ldrb	w8, [x22, #680]
  407a90:	cbz	w8, 407af4 <wcrtomb@plt+0x2fb4>
  407a94:	sub	x19, x19, x21
  407a98:	add	x20, x20, x21
  407a9c:	tst	x19, #0x1ff
  407aa0:	b.ne	407a30 <wcrtomb@plt+0x2ef0>  // b.any
  407aa4:	b	407a38 <wcrtomb@plt+0x2ef8>
  407aa8:	ldr	x9, [x24, #3976]
  407aac:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407ab0:	ldr	x8, [x23, #2944]
  407ab4:	ldr	x11, [x10, #2896]
  407ab8:	sub	x9, x9, x19
  407abc:	ldp	x20, x19, [sp, #208]
  407ac0:	ldp	x22, x21, [sp, #192]
  407ac4:	ldp	x24, x23, [sp, #176]
  407ac8:	ldp	x26, x25, [sp, #160]
  407acc:	ldr	x27, [sp, #144]
  407ad0:	ldp	x29, x30, [sp, #128]
  407ad4:	and	x9, x9, #0xfffffffffffffe00
  407ad8:	adrp	x12, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407adc:	add	x11, x11, #0x1
  407ae0:	add	x8, x8, x9
  407ae4:	str	x8, [x12, #2904]
  407ae8:	str	x11, [x10, #2896]
  407aec:	add	sp, sp, #0xe0
  407af0:	ret
  407af4:	ldr	x9, [x24, #3976]
  407af8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407afc:	ldr	x8, [x8, #4064]
  407b00:	sub	x19, x9, x19
  407b04:	cbz	x8, 407b0c <wcrtomb@plt+0x2fcc>
  407b08:	blr	x8
  407b0c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407b10:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407b14:	add	x1, x1, #0x41a
  407b18:	add	x2, x2, #0x440
  407b1c:	mov	w4, #0x5                   	// #5
  407b20:	mov	x0, xzr
  407b24:	mov	x3, x19
  407b28:	bl	404820 <dcngettext@plt>
  407b2c:	mov	x2, x0
  407b30:	mov	w0, wzr
  407b34:	mov	w1, wzr
  407b38:	mov	x3, x19
  407b3c:	bl	403fa0 <error@plt>
  407b40:	bl	40e96c <wcrtomb@plt+0x9e2c>
  407b44:	sub	sp, sp, #0xf0
  407b48:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407b4c:	ldr	x8, [x8, #688]
  407b50:	stp	x24, x23, [sp, #192]
  407b54:	stp	x20, x19, [sp, #224]
  407b58:	mov	w19, w0
  407b5c:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407b60:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407b64:	stp	x29, x30, [sp, #144]
  407b68:	stp	x28, x27, [sp, #160]
  407b6c:	stp	x26, x25, [sp, #176]
  407b70:	stp	x22, x21, [sp, #208]
  407b74:	add	x29, sp, #0x90
  407b78:	cbnz	x8, 407bb4 <wcrtomb@plt+0x3074>
  407b7c:	ldr	x8, [x23, #3824]
  407b80:	cbnz	x8, 407bb4 <wcrtomb@plt+0x3074>
  407b84:	ldr	w8, [x24, #4032]
  407b88:	cbz	w8, 407b98 <wcrtomb@plt+0x3058>
  407b8c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407b90:	ldr	x0, [x8, #112]
  407b94:	b	407bac <wcrtomb@plt+0x306c>
  407b98:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407b9c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  407ba0:	add	x0, x0, #0x54c
  407ba4:	add	x1, x1, #0x40b
  407ba8:	bl	404220 <fopen@plt>
  407bac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407bb0:	str	x0, [x8, #688]
  407bb4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407bb8:	ldrb	w8, [x8, #2984]
  407bbc:	cbz	w8, 407bc8 <wcrtomb@plt+0x3088>
  407bc0:	mov	w0, wzr
  407bc4:	b	4081c4 <wcrtomb@plt+0x3684>
  407bc8:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407bcc:	ldrb	w8, [x25, #3898]
  407bd0:	cbz	w8, 407bd8 <wcrtomb@plt+0x3098>
  407bd4:	bl	40a000 <wcrtomb@plt+0x54c0>
  407bd8:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407bdc:	add	x0, x0, #0xb70
  407be0:	mov	x1, xzr
  407be4:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  407be8:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407bec:	add	x0, x0, #0xb78
  407bf0:	mov	x1, xzr
  407bf4:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  407bf8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407bfc:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407c00:	ldr	w0, [x24, #4032]
  407c04:	str	xzr, [x8, #2976]
  407c08:	ldr	x8, [x10, #2944]
  407c0c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407c10:	mov	w10, #0x40000000            	// #1073741824
  407c14:	str	xzr, [x9, #2960]
  407c18:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407c1c:	cmp	w0, w10
  407c20:	str	x8, [x9, #2968]
  407c24:	b.lt	407c40 <wcrtomb@plt+0x3100>  // b.tstop
  407c28:	mov	w8, #0xc0000000            	// #-1073741824
  407c2c:	add	w0, w0, w8
  407c30:	bl	42bf94 <wcrtomb@plt+0x27454>
  407c34:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407c38:	cbnz	w0, 407c4c <wcrtomb@plt+0x310c>
  407c3c:	b	407c58 <wcrtomb@plt+0x3118>
  407c40:	bl	404520 <close@plt>
  407c44:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407c48:	cbz	w0, 407c58 <wcrtomb@plt+0x3118>
  407c4c:	ldr	x8, [x26, #3792]
  407c50:	ldr	x0, [x8]
  407c54:	bl	42a53c <wcrtomb@plt+0x259fc>
  407c58:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407c5c:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407c60:	ldr	x9, [x26, #3792]
  407c64:	ldr	x8, [x8, #3744]
  407c68:	ldr	x10, [x10, #3904]
  407c6c:	str	w19, [sp, #4]
  407c70:	add	x9, x9, #0x8
  407c74:	str	x9, [x26, #3792]
  407c78:	add	x10, x8, x10, lsl #3
  407c7c:	cmp	x9, x10
  407c80:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407c84:	b.eq	407c94 <wcrtomb@plt+0x3154>  // b.none
  407c88:	ldrb	w8, [x9, #696]
  407c8c:	tbnz	w8, #0, 407ca0 <wcrtomb@plt+0x3160>
  407c90:	b	407f78 <wcrtomb@plt+0x3438>
  407c94:	str	x8, [x26, #3792]
  407c98:	mov	w8, #0x1                   	// #1
  407c9c:	strb	w8, [x9, #696]
  407ca0:	ldr	x8, [x23, #3824]
  407ca4:	adrp	x27, 477000 <_obstack_memory_used@@Base+0x304b0>
  407ca8:	cbz	x8, 407d1c <wcrtomb@plt+0x31dc>
  407cac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407cb0:	ldr	x8, [x8, #3720]
  407cb4:	cbz	x8, 407cbc <wcrtomb@plt+0x317c>
  407cb8:	bl	405c14 <wcrtomb@plt+0x10d4>
  407cbc:	ldr	w8, [x27, #1632]
  407cc0:	ldr	x0, [x26, #3792]
  407cc4:	add	w1, w8, #0x1
  407cc8:	bl	4229b0 <wcrtomb@plt+0x1de70>
  407ccc:	cbz	w0, 407f78 <wcrtomb@plt+0x3438>
  407cd0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407cd4:	ldr	x8, [x8, #4064]
  407cd8:	cbz	x8, 407ce0 <wcrtomb@plt+0x31a0>
  407cdc:	blr	x8
  407ce0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407ce4:	add	x1, x1, #0x555
  407ce8:	mov	w2, #0x5                   	// #5
  407cec:	mov	x0, xzr
  407cf0:	bl	404900 <dcgettext@plt>
  407cf4:	ldr	x8, [x23, #3824]
  407cf8:	mov	x19, x0
  407cfc:	mov	x0, x8
  407d00:	bl	444a68 <argp_parse@@Base+0xd1bc>
  407d04:	mov	x3, x0
  407d08:	mov	w0, wzr
  407d0c:	mov	w1, wzr
  407d10:	mov	x2, x19
  407d14:	bl	403fa0 <error@plt>
  407d18:	bl	40e96c <wcrtomb@plt+0x9e2c>
  407d1c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407d20:	ldr	x20, [x8, #688]
  407d24:	mov	x19, x25
  407d28:	mov	x21, x24
  407d2c:	mov	x24, x23
  407d30:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407d34:	stp	xzr, xzr, [sp, #8]
  407d38:	ldr	x0, [x25, #96]
  407d3c:	ldp	x8, x9, [x0, #40]
  407d40:	cmp	x8, x9
  407d44:	b.cs	407f44 <wcrtomb@plt+0x3404>  // b.hs, b.nlast
  407d48:	add	x9, x8, #0x1
  407d4c:	str	x9, [x0, #40]
  407d50:	mov	w9, #0x7                   	// #7
  407d54:	strb	w9, [x8]
  407d58:	ldr	x28, [x25, #96]
  407d5c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407d60:	mov	w2, #0x5                   	// #5
  407d64:	mov	x0, xzr
  407d68:	add	x1, x1, #0x567
  407d6c:	bl	404900 <dcgettext@plt>
  407d70:	ldr	x8, [x26, #3792]
  407d74:	mov	x23, x0
  407d78:	ldr	w9, [x27, #1632]
  407d7c:	ldr	x0, [x8]
  407d80:	add	w22, w9, #0x1
  407d84:	bl	444a68 <argp_parse@@Base+0xd1bc>
  407d88:	mov	x4, x0
  407d8c:	mov	w1, #0x1                   	// #1
  407d90:	mov	x0, x28
  407d94:	mov	x2, x23
  407d98:	mov	w3, w22
  407d9c:	bl	404650 <__fprintf_chk@plt>
  407da0:	ldr	x0, [x25, #96]
  407da4:	bl	404800 <fflush_unlocked@plt>
  407da8:	add	x0, sp, #0x10
  407dac:	add	x1, sp, #0x8
  407db0:	mov	w2, #0xa                   	// #10
  407db4:	mov	x3, x20
  407db8:	bl	404a70 <__getdelim@plt>
  407dbc:	cmp	x0, #0x0
  407dc0:	b.le	40821c <wcrtomb@plt+0x36dc>
  407dc4:	ldr	x8, [sp, #16]
  407dc8:	ldrb	w9, [x8]
  407dcc:	cmp	w9, #0x58
  407dd0:	b.le	407e78 <wcrtomb@plt+0x3338>
  407dd4:	sub	w9, w9, #0x59
  407dd8:	cmp	w9, #0x20
  407ddc:	b.hi	407f10 <wcrtomb@plt+0x33d0>  // b.pmore
  407de0:	adrp	x12, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407de4:	add	x12, x12, #0x28
  407de8:	adr	x10, 407df8 <wcrtomb@plt+0x32b8>
  407dec:	ldrh	w11, [x12, x9, lsl #1]
  407df0:	add	x10, x10, x11, lsl #2
  407df4:	br	x10
  407df8:	add	x0, x8, #0x1
  407dfc:	add	x8, x8, #0x2
  407e00:	b	407e0c <wcrtomb@plt+0x32cc>
  407e04:	add	x0, x0, #0x1
  407e08:	add	x8, x8, #0x1
  407e0c:	ldrb	w9, [x0]
  407e10:	cmp	w9, #0x20
  407e14:	b.eq	407e04 <wcrtomb@plt+0x32c4>  // b.none
  407e18:	cmp	w9, #0x9
  407e1c:	b.eq	407e04 <wcrtomb@plt+0x32c4>  // b.none
  407e20:	b	407e28 <wcrtomb@plt+0x32e8>
  407e24:	ldrb	w9, [x8], #1
  407e28:	ands	w9, w9, #0xff
  407e2c:	b.eq	407e38 <wcrtomb@plt+0x32f8>  // b.none
  407e30:	cmp	w9, #0xa
  407e34:	b.ne	407e24 <wcrtomb@plt+0x32e4>  // b.any
  407e38:	sturb	wzr, [x8, #-1]
  407e3c:	ldrb	w8, [x0]
  407e40:	cbnz	w8, 407f50 <wcrtomb@plt+0x3410>
  407e44:	ldr	x22, [x25, #96]
  407e48:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407e4c:	mov	w2, #0x5                   	// #5
  407e50:	mov	x0, xzr
  407e54:	add	x1, x1, #0x6b5
  407e58:	bl	404900 <dcgettext@plt>
  407e5c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  407e60:	mov	x3, x0
  407e64:	mov	w1, #0x1                   	// #1
  407e68:	mov	x0, x22
  407e6c:	add	x2, x2, #0x7a4
  407e70:	bl	404650 <__fprintf_chk@plt>
  407e74:	b	407d38 <wcrtomb@plt+0x31f8>
  407e78:	cmp	w9, #0xa
  407e7c:	b.eq	407f60 <wcrtomb@plt+0x3420>  // b.none
  407e80:	cmp	w9, #0x21
  407e84:	b.eq	407f04 <wcrtomb@plt+0x33c4>  // b.none
  407e88:	cmp	w9, #0x3f
  407e8c:	b.ne	407f10 <wcrtomb@plt+0x33d0>  // b.any
  407e90:	ldr	x22, [x25, #96]
  407e94:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407e98:	mov	w2, #0x5                   	// #5
  407e9c:	mov	x0, xzr
  407ea0:	add	x1, x1, #0x5d3
  407ea4:	bl	404900 <dcgettext@plt>
  407ea8:	mov	x2, x0
  407eac:	mov	w1, #0x1                   	// #1
  407eb0:	mov	x0, x22
  407eb4:	bl	404650 <__fprintf_chk@plt>
  407eb8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407ebc:	ldrb	w8, [x8, #3832]
  407ec0:	cbnz	w8, 407eec <wcrtomb@plt+0x33ac>
  407ec4:	ldr	x22, [x25, #96]
  407ec8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407ecc:	mov	w2, #0x5                   	// #5
  407ed0:	mov	x0, xzr
  407ed4:	add	x1, x1, #0x65b
  407ed8:	bl	404900 <dcgettext@plt>
  407edc:	mov	x2, x0
  407ee0:	mov	w1, #0x1                   	// #1
  407ee4:	mov	x0, x22
  407ee8:	bl	404650 <__fprintf_chk@plt>
  407eec:	ldr	x22, [x25, #96]
  407ef0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407ef4:	mov	w2, #0x5                   	// #5
  407ef8:	mov	x0, xzr
  407efc:	add	x1, x1, #0x67c
  407f00:	b	407f24 <wcrtomb@plt+0x33e4>
  407f04:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407f08:	ldrb	w8, [x8, #3832]
  407f0c:	cbz	w8, 407f3c <wcrtomb@plt+0x33fc>
  407f10:	ldr	x22, [x25, #96]
  407f14:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  407f18:	mov	w2, #0x5                   	// #5
  407f1c:	mov	x0, xzr
  407f20:	add	x1, x1, #0x6da
  407f24:	bl	404900 <dcgettext@plt>
  407f28:	mov	x2, x0
  407f2c:	mov	w1, #0x1                   	// #1
  407f30:	mov	x0, x22
  407f34:	bl	404650 <__fprintf_chk@plt>
  407f38:	b	407d38 <wcrtomb@plt+0x31f8>
  407f3c:	bl	421838 <wcrtomb@plt+0x1ccf8>
  407f40:	b	407d38 <wcrtomb@plt+0x31f8>
  407f44:	mov	w1, #0x7                   	// #7
  407f48:	bl	4045e0 <__overflow@plt>
  407f4c:	b	407d58 <wcrtomb@plt+0x3218>
  407f50:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  407f54:	ldr	x8, [x26, #3792]
  407f58:	str	x0, [x8]
  407f5c:	ldr	x8, [sp, #16]
  407f60:	mov	x0, x8
  407f64:	bl	404700 <free@plt>
  407f68:	mov	x25, x19
  407f6c:	ldr	w19, [sp, #4]
  407f70:	mov	x23, x24
  407f74:	mov	x24, x21
  407f78:	ldr	x22, [x26, #3792]
  407f7c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  407f80:	add	x1, x1, #0x85
  407f84:	ldr	x20, [x22]
  407f88:	mov	x0, x20
  407f8c:	bl	404660 <strcmp@plt>
  407f90:	cbz	w0, 4081b4 <wcrtomb@plt+0x3674>
  407f94:	ldrb	w8, [x25, #3898]
  407f98:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407f9c:	cbz	w8, 408020 <wcrtomb@plt+0x34e0>
  407fa0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407fa4:	ldrb	w8, [x8, #4072]
  407fa8:	cbnz	w8, 407fdc <wcrtomb@plt+0x349c>
  407fac:	mov	w1, #0x3a                  	// #58
  407fb0:	mov	x0, x20
  407fb4:	bl	4047a0 <strchr@plt>
  407fb8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  407fbc:	str	x0, [x8, #4080]
  407fc0:	ldr	x20, [x22]
  407fc4:	subs	x2, x0, x20
  407fc8:	b.ls	407fdc <wcrtomb@plt+0x349c>  // b.plast
  407fcc:	mov	w1, #0x2f                  	// #47
  407fd0:	mov	x0, x20
  407fd4:	bl	404890 <memchr@plt>
  407fd8:	cbz	x0, 408108 <wcrtomb@plt+0x35c8>
  407fdc:	mov	w1, #0x42                  	// #66
  407fe0:	mov	w2, #0x1b6                 	// #438
  407fe4:	mov	x0, x20
  407fe8:	bl	404280 <open@plt>
  407fec:	str	w0, [x24, #4032]
  407ff0:	tbz	w0, #31, 4080c4 <wcrtomb@plt+0x3584>
  407ff4:	ldr	x8, [x26, #3792]
  407ff8:	ldr	x0, [x8]
  407ffc:	bl	42a908 <wcrtomb@plt+0x25dc8>
  408000:	cmp	w19, #0x1
  408004:	b.ne	407ca0 <wcrtomb@plt+0x3160>  // b.any
  408008:	ldrb	w8, [x25, #3898]
  40800c:	cbnz	w8, 407ca0 <wcrtomb@plt+0x3160>
  408010:	ldrb	w8, [x21, #3813]
  408014:	cbz	w8, 407ca0 <wcrtomb@plt+0x3160>
  408018:	bl	41bbf4 <wcrtomb@plt+0x170b4>
  40801c:	b	407ca0 <wcrtomb@plt+0x3160>
  408020:	cmp	w19, #0x2
  408024:	b.eq	407fa0 <wcrtomb@plt+0x3460>  // b.none
  408028:	cmp	w19, #0x1
  40802c:	b.eq	4080cc <wcrtomb@plt+0x358c>  // b.none
  408030:	cbnz	w19, 4080bc <wcrtomb@plt+0x357c>
  408034:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408038:	ldrb	w8, [x8, #4072]
  40803c:	cbnz	w8, 408070 <wcrtomb@plt+0x3530>
  408040:	mov	w1, #0x3a                  	// #58
  408044:	mov	x0, x20
  408048:	bl	4047a0 <strchr@plt>
  40804c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408050:	str	x0, [x8, #4080]
  408054:	ldr	x20, [x22]
  408058:	subs	x2, x0, x20
  40805c:	b.ls	408070 <wcrtomb@plt+0x3530>  // b.plast
  408060:	mov	w1, #0x2f                  	// #47
  408064:	mov	x0, x20
  408068:	bl	404890 <memchr@plt>
  40806c:	cbz	x0, 4081e4 <wcrtomb@plt+0x36a4>
  408070:	mov	w2, #0x1b6                 	// #438
  408074:	mov	x0, x20
  408078:	mov	w1, wzr
  40807c:	bl	404280 <open@plt>
  408080:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408084:	ldr	w8, [x8, #3916]
  408088:	mov	w1, w0
  40808c:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408090:	str	w0, [x24, #4032]
  408094:	cmp	w8, #0x4
  408098:	b.ne	4080a0 <wcrtomb@plt+0x3560>  // b.any
  40809c:	strb	wzr, [x20, #3984]
  4080a0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4080a4:	ldr	w8, [x8, #3128]
  4080a8:	cmn	w8, #0x1
  4080ac:	b.eq	408170 <wcrtomb@plt+0x3630>  // b.none
  4080b0:	cmp	w8, #0x0
  4080b4:	cset	w8, ne  // ne = any
  4080b8:	strb	w8, [x20, #3984]
  4080bc:	ldr	w0, [x24, #4032]
  4080c0:	tbnz	w0, #31, 407ff4 <wcrtomb@plt+0x34b4>
  4080c4:	mov	w0, #0x1                   	// #1
  4080c8:	b	4081c4 <wcrtomb@plt+0x3684>
  4080cc:	ldrb	w8, [x21, #3813]
  4080d0:	cbz	w8, 4080e0 <wcrtomb@plt+0x35a0>
  4080d4:	mov	w1, #0x1                   	// #1
  4080d8:	mov	x0, x20
  4080dc:	bl	41b994 <wcrtomb@plt+0x16e54>
  4080e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4080e4:	ldrb	w8, [x8, #4072]
  4080e8:	ldr	x22, [x26, #3792]
  4080ec:	cbz	w8, 40812c <wcrtomb@plt+0x35ec>
  4080f0:	ldr	x0, [x22]
  4080f4:	mov	w1, #0x1b6                 	// #438
  4080f8:	bl	404ad0 <creat@plt>
  4080fc:	str	w0, [x24, #4032]
  408100:	tbnz	w0, #31, 407ff4 <wcrtomb@plt+0x34b4>
  408104:	b	4080c4 <wcrtomb@plt+0x3584>
  408108:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40810c:	ldr	x3, [x8, #3864]
  408110:	mov	w1, #0x42                  	// #66
  408114:	mov	w2, #0x40000000            	// #1073741824
  408118:	mov	x0, x20
  40811c:	bl	42b8a0 <wcrtomb@plt+0x26d60>
  408120:	str	w0, [x24, #4032]
  408124:	tbnz	w0, #31, 407ff4 <wcrtomb@plt+0x34b4>
  408128:	b	4080c4 <wcrtomb@plt+0x3584>
  40812c:	ldr	x0, [x22]
  408130:	mov	w1, #0x3a                  	// #58
  408134:	bl	4047a0 <strchr@plt>
  408138:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40813c:	str	x0, [x8, #4080]
  408140:	cbz	x0, 4080f0 <wcrtomb@plt+0x35b0>
  408144:	ldr	x20, [x22]
  408148:	subs	x2, x0, x20
  40814c:	b.ls	4080f0 <wcrtomb@plt+0x35b0>  // b.plast
  408150:	mov	w1, #0x2f                  	// #47
  408154:	mov	x0, x20
  408158:	bl	404890 <memchr@plt>
  40815c:	cbnz	x0, 4080f0 <wcrtomb@plt+0x35b0>
  408160:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408164:	ldr	x3, [x8, #3864]
  408168:	mov	w1, #0x41                  	// #65
  40816c:	b	408114 <wcrtomb@plt+0x35d4>
  408170:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408174:	ldrb	w9, [x8, #3132]
  408178:	mov	w8, wzr
  40817c:	cbnz	w9, 4080b8 <wcrtomb@plt+0x3578>
  408180:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408184:	ldr	x9, [x9, #3960]
  408188:	cbnz	x9, 4080b8 <wcrtomb@plt+0x3578>
  40818c:	add	x2, sp, #0x10
  408190:	mov	w0, wzr
  408194:	bl	4048e0 <__fxstat@plt>
  408198:	mov	w8, wzr
  40819c:	cbnz	w0, 4080b8 <wcrtomb@plt+0x3578>
  4081a0:	ldr	w8, [sp, #32]
  4081a4:	and	w8, w8, #0xf000
  4081a8:	cmp	w8, #0x8, lsl #12
  4081ac:	cset	w8, eq  // eq = none
  4081b0:	b	4080b8 <wcrtomb@plt+0x3578>
  4081b4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4081b8:	mov	w0, #0x1                   	// #1
  4081bc:	strb	w0, [x8, #680]
  4081c0:	str	wzr, [x24, #4032]
  4081c4:	ldp	x20, x19, [sp, #224]
  4081c8:	ldp	x22, x21, [sp, #208]
  4081cc:	ldp	x24, x23, [sp, #192]
  4081d0:	ldp	x26, x25, [sp, #176]
  4081d4:	ldp	x28, x27, [sp, #160]
  4081d8:	ldp	x29, x30, [sp, #144]
  4081dc:	add	sp, sp, #0xf0
  4081e0:	ret
  4081e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4081e8:	ldr	x3, [x8, #3864]
  4081ec:	mov	w2, #0x40000000            	// #1073741824
  4081f0:	mov	x0, x20
  4081f4:	mov	w1, wzr
  4081f8:	bl	42b8a0 <wcrtomb@plt+0x26d60>
  4081fc:	b	408080 <wcrtomb@plt+0x3540>
  408200:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408204:	ldr	x8, [x19, #4064]
  408208:	cbz	x8, 408210 <wcrtomb@plt+0x36d0>
  40820c:	blr	x8
  408210:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408214:	add	x1, x1, #0x69c
  408218:	b	408234 <wcrtomb@plt+0x36f4>
  40821c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408220:	ldr	x8, [x19, #4064]
  408224:	cbz	x8, 40822c <wcrtomb@plt+0x36ec>
  408228:	blr	x8
  40822c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408230:	add	x1, x1, #0x592
  408234:	mov	w2, #0x5                   	// #5
  408238:	mov	x0, xzr
  40823c:	bl	404900 <dcgettext@plt>
  408240:	mov	x2, x0
  408244:	mov	w0, wzr
  408248:	mov	w1, wzr
  40824c:	bl	403fa0 <error@plt>
  408250:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408254:	ldr	w8, [x8, #3916]
  408258:	sub	w8, w8, #0x5
  40825c:	cmp	w8, #0x3
  408260:	b.cc	408294 <wcrtomb@plt+0x3754>  // b.lo, b.ul, b.last
  408264:	ldr	x8, [x19, #4064]
  408268:	cbz	x8, 408270 <wcrtomb@plt+0x3730>
  40826c:	blr	x8
  408270:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408274:	add	x1, x1, #0x5b4
  408278:	mov	w2, #0x5                   	// #5
  40827c:	mov	x0, xzr
  408280:	bl	404900 <dcgettext@plt>
  408284:	mov	x2, x0
  408288:	mov	w0, wzr
  40828c:	mov	w1, wzr
  408290:	bl	403fa0 <error@plt>
  408294:	bl	40e96c <wcrtomb@plt+0x9e2c>
  408298:	stp	x29, x30, [sp, #-16]!
  40829c:	mov	x29, sp
  4082a0:	bl	4082e4 <wcrtomb@plt+0x37a4>
  4082a4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4082a8:	ldr	x8, [x8, #3976]
  4082ac:	cmp	x0, x8
  4082b0:	b.ne	4082e0 <wcrtomb@plt+0x37a0>  // b.any
  4082b4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4082b8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4082bc:	ldr	x10, [x8, #2912]
  4082c0:	ldr	d0, [x9, #616]
  4082c4:	scvtf	d1, x0
  4082c8:	add	x10, x10, #0x1
  4082cc:	fadd	d0, d0, d1
  4082d0:	str	x10, [x8, #2912]
  4082d4:	str	d0, [x9, #616]
  4082d8:	ldp	x29, x30, [sp], #16
  4082dc:	ret
  4082e0:	bl	4056f8 <wcrtomb@plt+0xbb8>
  4082e4:	stp	x29, x30, [sp, #-80]!
  4082e8:	mov	w0, #0x1                   	// #1
  4082ec:	str	x25, [sp, #16]
  4082f0:	stp	x24, x23, [sp, #32]
  4082f4:	stp	x22, x21, [sp, #48]
  4082f8:	stp	x20, x19, [sp, #64]
  4082fc:	mov	x29, sp
  408300:	bl	408dac <wcrtomb@plt+0x426c>
  408304:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408308:	ldr	d0, [x8, #3688]
  40830c:	fcmp	d0, #0.0
  408310:	b.eq	408338 <wcrtomb@plt+0x37f8>  // b.none
  408314:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408318:	ldr	d1, [x8, #616]
  40831c:	fcmp	d0, d1
  408320:	b.hi	408338 <wcrtomb@plt+0x37f8>  // b.pmore
  408324:	bl	404a10 <__errno_location@plt>
  408328:	mov	w8, #0x1c                  	// #28
  40832c:	mov	x19, xzr
  408330:	str	w8, [x0]
  408334:	b	40842c <wcrtomb@plt+0x38ec>
  408338:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40833c:	ldrb	w8, [x8, #3592]
  408340:	cbz	w8, 408354 <wcrtomb@plt+0x3814>
  408344:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408348:	ldr	x19, [x8, #3976]
  40834c:	cbnz	x19, 408360 <wcrtomb@plt+0x3820>
  408350:	b	40842c <wcrtomb@plt+0x38ec>
  408354:	bl	42196c <wcrtomb@plt+0x1ce2c>
  408358:	mov	x19, x0
  40835c:	cbz	x19, 40842c <wcrtomb@plt+0x38ec>
  408360:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408364:	ldrb	w8, [x8, #3132]
  408368:	cbz	w8, 40842c <wcrtomb@plt+0x38ec>
  40836c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408370:	ldrb	w8, [x8, #700]
  408374:	tbnz	w8, #0, 40842c <wcrtomb@plt+0x38ec>
  408378:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40837c:	ldr	x22, [x21, #152]
  408380:	mov	x9, x22
  408384:	cbz	x9, 40842c <wcrtomb@plt+0x38ec>
  408388:	mov	x8, x9
  40838c:	ldr	x9, [x9]
  408390:	cbz	x9, 4083a0 <wcrtomb@plt+0x3860>
  408394:	ldr	x10, [x9, #8]
  408398:	cmp	x19, x10, lsl #9
  40839c:	b.cs	408384 <wcrtomb@plt+0x3844>  // b.hs, b.nlast
  4083a0:	ldr	x24, [x8, #8]
  4083a4:	ldp	x11, x10, [x8, #32]
  4083a8:	sub	x12, x19, x24, lsl #9
  4083ac:	add	x10, x10, x12, lsr #9
  4083b0:	subs	x11, x11, x12
  4083b4:	csel	x11, xzr, x11, cc  // cc = lo, ul, last
  4083b8:	csel	x23, x8, x9, hi  // hi = pmore
  4083bc:	csel	x25, xzr, x10, hi  // hi = pmore
  4083c0:	cmp	x22, #0x0
  4083c4:	stp	x11, x10, [x8, #32]
  4083c8:	cset	w8, ne  // ne = any
  4083cc:	cbz	x22, 4083fc <wcrtomb@plt+0x38bc>
  4083d0:	cmp	x22, x23
  4083d4:	b.eq	4083fc <wcrtomb@plt+0x38bc>  // b.none
  4083d8:	mov	x20, x22
  4083dc:	ldr	x0, [x20, #16]
  4083e0:	ldr	x22, [x22]
  4083e4:	bl	404700 <free@plt>
  4083e8:	mov	x0, x20
  4083ec:	bl	404700 <free@plt>
  4083f0:	cmp	x22, #0x0
  4083f4:	cset	w8, ne  // ne = any
  4083f8:	cbnz	x22, 4083d0 <wcrtomb@plt+0x3890>
  4083fc:	str	x22, [x21, #152]
  408400:	tbnz	w8, #0, 40840c <wcrtomb@plt+0x38cc>
  408404:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408408:	str	xzr, [x8, #144]
  40840c:	cbz	x23, 40842c <wcrtomb@plt+0x38ec>
  408410:	add	x8, x24, x25
  408414:	ldr	x9, [x23, #8]
  408418:	str	xzr, [x23, #40]
  40841c:	sub	x9, x9, x8
  408420:	str	x9, [x23, #8]
  408424:	ldr	x23, [x23]
  408428:	cbnz	x23, 408414 <wcrtomb@plt+0x38d4>
  40842c:	mov	x0, x19
  408430:	ldp	x20, x19, [sp, #64]
  408434:	ldp	x22, x21, [sp, #48]
  408438:	ldp	x24, x23, [sp, #32]
  40843c:	ldr	x25, [sp, #16]
  408440:	ldp	x29, x30, [sp], #80
  408444:	ret
  408448:	stp	x29, x30, [sp, #-64]!
  40844c:	stp	x22, x21, [sp, #32]
  408450:	stp	x20, x19, [sp, #48]
  408454:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408458:	ldr	w8, [x8, #3872]
  40845c:	mov	x20, x0
  408460:	str	x23, [sp, #16]
  408464:	mov	x29, sp
  408468:	cmp	w8, #0x4
  40846c:	b.ne	408498 <wcrtomb@plt+0x3958>  // b.any
  408470:	mov	x2, x20
  408474:	ldp	x20, x19, [sp, #48]
  408478:	ldp	x22, x21, [sp, #32]
  40847c:	ldr	x23, [sp, #16]
  408480:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408484:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408488:	add	x0, x0, #0x748
  40848c:	add	x1, x1, #0xa0
  408490:	ldp	x29, x30, [sp], #64
  408494:	b	412c84 <wcrtomb@plt+0xe144>
  408498:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40849c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4084a0:	ldr	x19, [x22, #2968]
  4084a4:	ldr	x8, [x21, #2904]
  4084a8:	cmp	x19, x8
  4084ac:	b.ne	4084e4 <wcrtomb@plt+0x39a4>  // b.any
  4084b0:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4084b4:	ldrb	w8, [x23, #632]
  4084b8:	tbz	w8, #0, 4084c4 <wcrtomb@plt+0x3984>
  4084bc:	mov	x19, xzr
  4084c0:	b	4084e4 <wcrtomb@plt+0x39a4>
  4084c4:	bl	4053c8 <wcrtomb@plt+0x888>
  4084c8:	ldr	x19, [x22, #2968]
  4084cc:	ldr	x8, [x21, #2904]
  4084d0:	cmp	x19, x8
  4084d4:	b.ne	4084e4 <wcrtomb@plt+0x39a4>  // b.any
  4084d8:	mov	x19, xzr
  4084dc:	mov	w8, #0x1                   	// #1
  4084e0:	strb	w8, [x23, #632]
  4084e4:	movi	v0.2d, #0x0
  4084e8:	mov	x0, x19
  4084ec:	mov	x1, x20
  4084f0:	stp	q0, q0, [x19, #480]
  4084f4:	stp	q0, q0, [x19, #448]
  4084f8:	stp	q0, q0, [x19, #416]
  4084fc:	stp	q0, q0, [x19, #384]
  408500:	stp	q0, q0, [x19, #352]
  408504:	stp	q0, q0, [x19, #320]
  408508:	stp	q0, q0, [x19, #288]
  40850c:	stp	q0, q0, [x19, #256]
  408510:	stp	q0, q0, [x19, #224]
  408514:	stp	q0, q0, [x19, #192]
  408518:	stp	q0, q0, [x19, #160]
  40851c:	stp	q0, q0, [x19, #128]
  408520:	stp	q0, q0, [x19, #96]
  408524:	stp	q0, q0, [x19, #64]
  408528:	stp	q0, q0, [x19, #32]
  40852c:	stp	q0, q0, [x19]
  408530:	bl	404840 <strcpy@plt>
  408534:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408538:	add	x20, x20, #0xc50
  40853c:	add	x0, x20, #0x8
  408540:	mov	x1, x19
  408544:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  408548:	ldr	x0, [x20, #8]
  40854c:	bl	4392ec <argp_parse@@Base+0x1a40>
  408550:	and	w8, w0, #0x1
  408554:	mov	w9, #0x56                  	// #86
  408558:	strb	w8, [x20, #16]
  40855c:	strb	w9, [x19, #156]
  408560:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408564:	ldr	x0, [x8, #3768]
  408568:	add	x1, x19, #0x88
  40856c:	mov	w2, #0xc                   	// #12
  408570:	bl	40ad04 <wcrtomb@plt+0x61c4>
  408574:	mov	x2, #0xffffffffffffffff    	// #-1
  408578:	mov	x0, x20
  40857c:	mov	x1, x19
  408580:	bl	40bbbc <wcrtomb@plt+0x707c>
  408584:	ldr	x8, [x22, #2968]
  408588:	cmp	x8, x19
  40858c:	b.hi	4085a0 <wcrtomb@plt+0x3a60>  // b.pmore
  408590:	add	x8, x8, #0x200
  408594:	cmp	x8, x19
  408598:	b.ls	408590 <wcrtomb@plt+0x3a50>  // b.plast
  40859c:	str	x8, [x22, #2968]
  4085a0:	ldr	x9, [x21, #2904]
  4085a4:	cmp	x8, x9
  4085a8:	b.hi	4085c0 <wcrtomb@plt+0x3a80>  // b.pmore
  4085ac:	ldp	x20, x19, [sp, #48]
  4085b0:	ldp	x22, x21, [sp, #32]
  4085b4:	ldr	x23, [sp, #16]
  4085b8:	ldp	x29, x30, [sp], #64
  4085bc:	ret
  4085c0:	bl	4045b0 <abort@plt>
  4085c4:	stp	x29, x30, [sp, #-80]!
  4085c8:	str	x25, [sp, #16]
  4085cc:	stp	x22, x21, [sp, #48]
  4085d0:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4085d4:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4085d8:	stp	x20, x19, [sp, #64]
  4085dc:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4085e0:	ldr	x9, [x21, #2944]
  4085e4:	ldr	x8, [x25, #2968]
  4085e8:	ldrb	w22, [x20, #680]
  4085ec:	mov	x29, sp
  4085f0:	cmp	x0, #0x0
  4085f4:	add	x10, x29, #0x1c
  4085f8:	stp	x24, x23, [sp, #32]
  4085fc:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408600:	mov	w11, #0x1                   	// #1
  408604:	csel	x19, x10, x0, eq  // eq = none
  408608:	cmp	x8, x9
  40860c:	str	x9, [x23, #2904]
  408610:	strb	w11, [x20, #680]
  408614:	b.ne	408648 <wcrtomb@plt+0x3b08>  // b.any
  408618:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40861c:	ldrb	w9, [x24, #632]
  408620:	tbnz	w9, #0, 408640 <wcrtomb@plt+0x3b00>
  408624:	bl	4053c8 <wcrtomb@plt+0x888>
  408628:	ldr	x8, [x25, #2968]
  40862c:	ldr	x9, [x23, #2904]
  408630:	cmp	x8, x9
  408634:	b.ne	408648 <wcrtomb@plt+0x3b08>  // b.any
  408638:	mov	w9, #0x1                   	// #1
  40863c:	strb	w9, [x24, #632]
  408640:	mov	x9, x8
  408644:	mov	x8, xzr
  408648:	cmp	x8, #0x0
  40864c:	cset	w8, eq  // eq = none
  408650:	strb	w8, [x19]
  408654:	ldr	x19, [x21, #2944]
  408658:	strb	w22, [x20, #680]
  40865c:	cmp	x19, x9
  408660:	b.eq	4086ac <wcrtomb@plt+0x3b6c>  // b.none
  408664:	add	x20, x19, #0x101
  408668:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x194b0>
  40866c:	add	x1, x1, #0x7d6
  408670:	mov	x0, x20
  408674:	bl	404660 <strcmp@plt>
  408678:	cbz	w0, 408690 <wcrtomb@plt+0x3b50>
  40867c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408680:	add	x1, x1, #0x91a
  408684:	mov	x0, x20
  408688:	bl	404660 <strcmp@plt>
  40868c:	cbnz	w0, 4086ac <wcrtomb@plt+0x3b6c>
  408690:	mov	w1, #0x1                   	// #1
  408694:	mov	x0, x19
  408698:	mov	w20, #0x1                   	// #1
  40869c:	bl	419034 <wcrtomb@plt+0x144f4>
  4086a0:	cmp	w0, #0x1
  4086a4:	b.eq	4087dc <wcrtomb@plt+0x3c9c>  // b.none
  4086a8:	ldr	x19, [x21, #2944]
  4086ac:	ldrh	w8, [x19]
  4086b0:	mov	w9, #0x9d1f                	// #40223
  4086b4:	cmp	w8, w9
  4086b8:	b.eq	40877c <wcrtomb@plt+0x3c3c>  // b.none
  4086bc:	ldrh	w8, [x19]
  4086c0:	mov	w9, #0x8b1f                	// #35615
  4086c4:	cmp	w8, w9
  4086c8:	b.eq	408788 <wcrtomb@plt+0x3c48>  // b.none
  4086cc:	ldrh	w8, [x19]
  4086d0:	ldrb	w9, [x19, #2]
  4086d4:	mov	w10, #0x5a42                	// #23106
  4086d8:	mov	w11, #0x68                  	// #104
  4086dc:	eor	w8, w8, w10
  4086e0:	eor	w9, w9, w11
  4086e4:	orr	w8, w8, w9
  4086e8:	tst	w8, #0xffff
  4086ec:	b.eq	408794 <wcrtomb@plt+0x3c54>  // b.none
  4086f0:	ldr	w8, [x19]
  4086f4:	mov	w9, #0x5a4c                	// #23116
  4086f8:	movk	w9, #0x5049, lsl #16
  4086fc:	cmp	w8, w9
  408700:	b.eq	4087a0 <wcrtomb@plt+0x3c60>  // b.none
  408704:	ldr	w8, [x19]
  408708:	ldrh	w9, [x19, #4]
  40870c:	mov	w10, #0x4cff                	// #19711
  408710:	movk	w10, #0x4d5a, lsl #16
  408714:	mov	w11, #0x41                  	// #65
  408718:	eor	w8, w8, w10
  40871c:	eor	w9, w9, w11
  408720:	orr	w8, w8, w9
  408724:	cbz	w8, 4087ac <wcrtomb@plt+0x3c6c>
  408728:	ldr	w8, [x19]
  40872c:	mov	w9, #0x4c89                	// #19593
  408730:	movk	w9, #0x4f5a, lsl #16
  408734:	cmp	w8, w9
  408738:	b.eq	4087b8 <wcrtomb@plt+0x3c78>  // b.none
  40873c:	ldr	w8, [x19]
  408740:	ldrh	w9, [x19, #4]
  408744:	mov	w10, #0x37fd                	// #14333
  408748:	movk	w10, #0x587a, lsl #16
  40874c:	mov	w11, #0x5a                  	// #90
  408750:	eor	w8, w8, w10
  408754:	eor	w9, w9, w11
  408758:	orr	w8, w8, w9
  40875c:	cbz	w8, 4087c4 <wcrtomb@plt+0x3c84>
  408760:	ldr	w8, [x19]
  408764:	mov	w9, #0xb528                	// #46376
  408768:	movk	w9, #0xfd2f, lsl #16
  40876c:	cmp	w8, w9
  408770:	b.eq	4087d0 <wcrtomb@plt+0x3c90>  // b.none
  408774:	mov	w20, wzr
  408778:	b	4087dc <wcrtomb@plt+0x3c9c>
  40877c:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408780:	add	x8, x8, #0x1d8
  408784:	b	4087d8 <wcrtomb@plt+0x3c98>
  408788:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40878c:	add	x8, x8, #0x1f0
  408790:	b	4087d8 <wcrtomb@plt+0x3c98>
  408794:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408798:	add	x8, x8, #0x208
  40879c:	b	4087d8 <wcrtomb@plt+0x3c98>
  4087a0:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4087a4:	add	x8, x8, #0x220
  4087a8:	b	4087d8 <wcrtomb@plt+0x3c98>
  4087ac:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4087b0:	add	x8, x8, #0x238
  4087b4:	b	4087d8 <wcrtomb@plt+0x3c98>
  4087b8:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4087bc:	add	x8, x8, #0x250
  4087c0:	b	4087d8 <wcrtomb@plt+0x3c98>
  4087c4:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4087c8:	add	x8, x8, #0x268
  4087cc:	b	4087d8 <wcrtomb@plt+0x3c98>
  4087d0:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4087d4:	add	x8, x8, #0x280
  4087d8:	ldr	w20, [x8]
  4087dc:	mov	w0, w20
  4087e0:	ldp	x20, x19, [sp, #64]
  4087e4:	ldp	x22, x21, [sp, #48]
  4087e8:	ldp	x24, x23, [sp, #32]
  4087ec:	ldr	x25, [sp, #16]
  4087f0:	ldp	x29, x30, [sp], #80
  4087f4:	ret
  4087f8:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4087fc:	mov	x9, xzr
  408800:	add	x8, x8, #0x88
  408804:	add	x10, x9, #0x18
  408808:	cmp	x10, #0x120
  40880c:	b.eq	40882c <wcrtomb@plt+0x3cec>  // b.none
  408810:	ldr	w9, [x8, x9]
  408814:	cmp	w9, w0
  408818:	mov	x9, x10
  40881c:	b.ne	408804 <wcrtomb@plt+0x3cc4>  // b.any
  408820:	add	x8, x8, x10
  408824:	ldur	x0, [x8, #-8]
  408828:	ret
  40882c:	mov	x0, xzr
  408830:	ret
  408834:	stp	x29, x30, [sp, #-48]!
  408838:	stp	x20, x19, [sp, #32]
  40883c:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408840:	ldr	w8, [x20, #728]
  408844:	mov	x19, x0
  408848:	str	x21, [sp, #16]
  40884c:	mov	x29, sp
  408850:	cbnz	w8, 408868 <wcrtomb@plt+0x3d28>
  408854:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408858:	add	x0, x0, #0x2e0
  40885c:	bl	4042e0 <sigemptyset@plt>
  408860:	mov	w8, #0x1                   	// #1
  408864:	str	w8, [x20, #728]
  408868:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  40886c:	add	x1, x1, #0x50a
  408870:	mov	x0, x19
  408874:	bl	404660 <strcmp@plt>
  408878:	cbz	w0, 4089a4 <wcrtomb@plt+0x3e64>
  40887c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408880:	add	x1, x1, #0x9ad
  408884:	mov	x0, x19
  408888:	bl	404660 <strcmp@plt>
  40888c:	cbz	w0, 4089a4 <wcrtomb@plt+0x3e64>
  408890:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408894:	add	x1, x1, #0x9b1
  408898:	mov	x0, x19
  40889c:	bl	404660 <strcmp@plt>
  4088a0:	cbz	w0, 4089d4 <wcrtomb@plt+0x3e94>
  4088a4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4088a8:	add	x1, x1, #0x9b6
  4088ac:	mov	x0, x19
  4088b0:	bl	404660 <strcmp@plt>
  4088b4:	cbz	w0, 4089f4 <wcrtomb@plt+0x3eb4>
  4088b8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4088bc:	add	x1, x1, #0x9bb
  4088c0:	mov	w2, #0x5                   	// #5
  4088c4:	mov	x0, x19
  4088c8:	bl	404300 <strncmp@plt>
  4088cc:	cbz	w0, 408a28 <wcrtomb@plt+0x3ee8>
  4088d0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4088d4:	add	x1, x1, #0x9c1
  4088d8:	mov	w2, #0x5                   	// #5
  4088dc:	mov	x0, x19
  4088e0:	mov	w21, #0x5                   	// #5
  4088e4:	bl	404300 <strncmp@plt>
  4088e8:	cbz	w0, 408a60 <wcrtomb@plt+0x3f20>
  4088ec:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4088f0:	add	x1, x1, #0x9c7
  4088f4:	mov	w2, #0x7                   	// #7
  4088f8:	mov	x0, x19
  4088fc:	bl	404300 <strncmp@plt>
  408900:	cbz	w0, 408af8 <wcrtomb@plt+0x3fb8>
  408904:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408908:	add	x1, x1, #0x9cf
  40890c:	mov	w2, #0x6                   	// #6
  408910:	mov	x0, x19
  408914:	bl	404300 <strncmp@plt>
  408918:	cbz	w0, 408b34 <wcrtomb@plt+0x3ff4>
  40891c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408920:	add	x1, x1, #0x9ee
  408924:	mov	x0, x19
  408928:	bl	404660 <strcmp@plt>
  40892c:	cbz	w0, 408b8c <wcrtomb@plt+0x404c>
  408930:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408934:	add	x1, x1, #0x9f5
  408938:	mov	w2, #0x5                   	// #5
  40893c:	mov	x0, x19
  408940:	bl	404300 <strncmp@plt>
  408944:	cbnz	w0, 408bac <wcrtomb@plt+0x406c>
  408948:	mov	w0, #0x18                  	// #24
  40894c:	bl	445be0 <argp_parse@@Base+0xe334>
  408950:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408954:	ldr	x9, [x8, #888]
  408958:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40895c:	add	x10, x10, #0x360
  408960:	mov	w11, #0x7                   	// #7
  408964:	cmp	x9, #0x0
  408968:	csel	x9, x10, x9, eq  // eq = none
  40896c:	mov	x20, x0
  408970:	str	x0, [x9]
  408974:	str	x0, [x8, #888]
  408978:	str	w11, [x0, #8]
  40897c:	add	x0, x19, #0x5
  408980:	bl	422fb4 <wcrtomb@plt+0x1e474>
  408984:	mov	w1, w0
  408988:	str	w1, [x20, #16]
  40898c:	ldp	x20, x19, [sp, #32]
  408990:	ldr	x21, [sp, #16]
  408994:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408998:	add	x0, x0, #0x2e0
  40899c:	ldp	x29, x30, [sp], #48
  4089a0:	b	404990 <sigaddset@plt>
  4089a4:	mov	w0, #0x18                  	// #24
  4089a8:	bl	445be0 <argp_parse@@Base+0xe334>
  4089ac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4089b0:	ldr	x9, [x8, #888]
  4089b4:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4089b8:	add	x10, x10, #0x360
  4089bc:	cmp	x9, #0x0
  4089c0:	csel	x9, x10, x9, eq  // eq = none
  4089c4:	str	x0, [x9]
  4089c8:	str	x0, [x8, #888]
  4089cc:	str	wzr, [x0, #8]
  4089d0:	b	408ae8 <wcrtomb@plt+0x3fa8>
  4089d4:	mov	w0, #0x18                  	// #24
  4089d8:	bl	445be0 <argp_parse@@Base+0xe334>
  4089dc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4089e0:	ldr	x9, [x8, #888]
  4089e4:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4089e8:	add	x10, x10, #0x360
  4089ec:	mov	w11, #0x1                   	// #1
  4089f0:	b	408a10 <wcrtomb@plt+0x3ed0>
  4089f4:	mov	w0, #0x18                  	// #24
  4089f8:	bl	445be0 <argp_parse@@Base+0xe334>
  4089fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408a00:	ldr	x9, [x8, #888]
  408a04:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408a08:	add	x10, x10, #0x360
  408a0c:	mov	w11, #0x2                   	// #2
  408a10:	cmp	x9, #0x0
  408a14:	csel	x9, x10, x9, eq  // eq = none
  408a18:	str	x0, [x9]
  408a1c:	str	x0, [x8, #888]
  408a20:	str	w11, [x0, #8]
  408a24:	b	408ae8 <wcrtomb@plt+0x3fa8>
  408a28:	mov	w0, #0x18                  	// #24
  408a2c:	bl	445be0 <argp_parse@@Base+0xe334>
  408a30:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408a34:	ldr	x9, [x8, #888]
  408a38:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408a3c:	add	x10, x10, #0x360
  408a40:	mov	x20, x0
  408a44:	cmp	x9, #0x0
  408a48:	mov	w11, #0x2                   	// #2
  408a4c:	csel	x9, x10, x9, eq  // eq = none
  408a50:	str	x0, [x9]
  408a54:	str	x0, [x8, #888]
  408a58:	str	w11, [x0, #8]
  408a5c:	b	408a90 <wcrtomb@plt+0x3f50>
  408a60:	mov	w0, #0x18                  	// #24
  408a64:	bl	445be0 <argp_parse@@Base+0xe334>
  408a68:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408a6c:	ldr	x9, [x8, #888]
  408a70:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408a74:	add	x10, x10, #0x360
  408a78:	mov	x20, x0
  408a7c:	cmp	x9, #0x0
  408a80:	csel	x9, x10, x9, eq  // eq = none
  408a84:	str	x0, [x9]
  408a88:	str	x0, [x8, #888]
  408a8c:	str	w21, [x0, #8]
  408a90:	add	x0, x19, #0x5
  408a94:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  408a98:	mov	x19, x0
  408a9c:	bl	403f40 <strlen@plt>
  408aa0:	ldrb	w8, [x19]
  408aa4:	cmp	w8, #0x27
  408aa8:	b.eq	408ab4 <wcrtomb@plt+0x3f74>  // b.none
  408aac:	cmp	w8, #0x22
  408ab0:	b.ne	408adc <wcrtomb@plt+0x3f9c>  // b.any
  408ab4:	add	x9, x0, x19
  408ab8:	ldurb	w9, [x9, #-1]
  408abc:	cmp	w9, w8
  408ac0:	b.ne	408adc <wcrtomb@plt+0x3f9c>  // b.any
  408ac4:	sub	x21, x0, #0x2
  408ac8:	add	x1, x19, #0x1
  408acc:	mov	x0, x19
  408ad0:	mov	x2, x21
  408ad4:	bl	403ed0 <memmove@plt>
  408ad8:	strb	wzr, [x19, x21]
  408adc:	mov	x0, x19
  408ae0:	bl	41aad0 <wcrtomb@plt+0x15f90>
  408ae4:	str	x19, [x20, #16]
  408ae8:	ldp	x20, x19, [sp, #32]
  408aec:	ldr	x21, [sp, #16]
  408af0:	ldp	x29, x30, [sp], #48
  408af4:	ret
  408af8:	mov	w0, #0x18                  	// #24
  408afc:	bl	445be0 <argp_parse@@Base+0xe334>
  408b00:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408b04:	ldr	x9, [x8, #888]
  408b08:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408b0c:	add	x10, x10, #0x360
  408b10:	mov	w11, #0x3                   	// #3
  408b14:	cmp	x9, #0x0
  408b18:	csel	x9, x10, x9, eq  // eq = none
  408b1c:	mov	x20, x0
  408b20:	str	x0, [x9]
  408b24:	str	x0, [x8, #888]
  408b28:	str	w11, [x0, #8]
  408b2c:	add	x0, x19, #0x7
  408b30:	b	408a94 <wcrtomb@plt+0x3f54>
  408b34:	add	x0, x19, #0x6
  408b38:	add	x1, x29, #0x18
  408b3c:	mov	w2, #0xa                   	// #10
  408b40:	bl	403f30 <strtoul@plt>
  408b44:	ldr	x8, [x29, #24]
  408b48:	ldrb	w8, [x8]
  408b4c:	cbnz	w8, 408bc8 <wcrtomb@plt+0x4088>
  408b50:	mov	x20, x0
  408b54:	mov	w0, #0x18                  	// #24
  408b58:	bl	445be0 <argp_parse@@Base+0xe334>
  408b5c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408b60:	ldr	x9, [x8, #888]
  408b64:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408b68:	add	x10, x10, #0x360
  408b6c:	mov	w11, #0x4                   	// #4
  408b70:	cmp	x9, #0x0
  408b74:	csel	x9, x10, x9, eq  // eq = none
  408b78:	str	x0, [x9]
  408b7c:	str	x0, [x8, #888]
  408b80:	str	w11, [x0, #8]
  408b84:	str	x20, [x0, #16]
  408b88:	b	408ae8 <wcrtomb@plt+0x3fa8>
  408b8c:	mov	w0, #0x18                  	// #24
  408b90:	bl	445be0 <argp_parse@@Base+0xe334>
  408b94:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408b98:	ldr	x9, [x8, #888]
  408b9c:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408ba0:	add	x10, x10, #0x360
  408ba4:	mov	w11, #0x6                   	// #6
  408ba8:	b	408a10 <wcrtomb@plt+0x3ed0>
  408bac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408bb0:	ldr	x8, [x8, #4064]
  408bb4:	cbz	x8, 408bbc <wcrtomb@plt+0x407c>
  408bb8:	blr	x8
  408bbc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408bc0:	add	x1, x1, #0x9fb
  408bc4:	b	408be0 <wcrtomb@plt+0x40a0>
  408bc8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408bcc:	ldr	x8, [x8, #4064]
  408bd0:	cbz	x8, 408bd8 <wcrtomb@plt+0x4098>
  408bd4:	blr	x8
  408bd8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408bdc:	add	x1, x1, #0x9d6
  408be0:	mov	w2, #0x5                   	// #5
  408be4:	mov	x0, xzr
  408be8:	bl	404900 <dcgettext@plt>
  408bec:	mov	x2, x0
  408bf0:	mov	w0, wzr
  408bf4:	mov	w1, wzr
  408bf8:	mov	x3, x19
  408bfc:	bl	403fa0 <error@plt>
  408c00:	bl	40e96c <wcrtomb@plt+0x9e2c>
  408c04:	stp	x29, x30, [sp, #-32]!
  408c08:	stp	x20, x19, [sp, #16]
  408c0c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408c10:	ldr	w8, [x19, #728]
  408c14:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408c18:	mov	x29, sp
  408c1c:	cbnz	w8, 408c44 <wcrtomb@plt+0x4104>
  408c20:	ldr	w9, [x20, #3912]
  408c24:	cbz	w9, 408c44 <wcrtomb@plt+0x4104>
  408c28:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408c2c:	ldr	x9, [x9, #864]
  408c30:	cbnz	x9, 408c44 <wcrtomb@plt+0x4104>
  408c34:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408c38:	add	x0, x0, #0x9b6
  408c3c:	bl	408834 <wcrtomb@plt+0x3cf4>
  408c40:	ldr	w8, [x19, #728]
  408c44:	cmp	w8, #0x1
  408c48:	b.ne	408c78 <wcrtomb@plt+0x4138>  // b.any
  408c4c:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408c50:	add	x1, x1, #0x2e0
  408c54:	mov	w0, wzr
  408c58:	mov	x2, xzr
  408c5c:	bl	404000 <sigprocmask@plt>
  408c60:	ldr	w8, [x20, #3912]
  408c64:	cbnz	w8, 408c70 <wcrtomb@plt+0x4130>
  408c68:	mov	w8, #0xa                   	// #10
  408c6c:	str	w8, [x20, #3912]
  408c70:	mov	w8, #0x2                   	// #2
  408c74:	str	w8, [x19, #728]
  408c78:	ldp	x20, x19, [sp, #16]
  408c7c:	ldp	x29, x30, [sp], #32
  408c80:	ret
  408c84:	stp	x29, x30, [sp, #-80]!
  408c88:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408c8c:	stp	x22, x21, [sp, #48]
  408c90:	ldr	x21, [x8, #864]
  408c94:	str	x25, [sp, #16]
  408c98:	stp	x24, x23, [sp, #32]
  408c9c:	stp	x20, x19, [sp, #64]
  408ca0:	mov	x29, sp
  408ca4:	cbz	x21, 408d94 <wcrtomb@plt+0x4254>
  408ca8:	adrp	x19, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408cac:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408cb0:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408cb4:	add	x19, x19, #0xa19
  408cb8:	mov	w24, #0x20                  	// #32
  408cbc:	mov	w25, #0xd                   	// #13
  408cc0:	b	408cdc <wcrtomb@plt+0x419c>
  408cc4:	mov	w1, #0xd                   	// #13
  408cc8:	bl	4045e0 <__overflow@plt>
  408ccc:	ldr	x0, [x22, #872]
  408cd0:	bl	404800 <fflush_unlocked@plt>
  408cd4:	ldr	x21, [x21]
  408cd8:	cbz	x21, 408d94 <wcrtomb@plt+0x4254>
  408cdc:	ldr	w8, [x21, #8]
  408ce0:	cmp	w8, #0x3
  408ce4:	b.ne	408cd4 <wcrtomb@plt+0x4194>  // b.any
  408ce8:	ldr	x0, [x22, #872]
  408cec:	cbz	x0, 408cd4 <wcrtomb@plt+0x4194>
  408cf0:	ldrb	w8, [x23, #880]
  408cf4:	cbz	w8, 408cd4 <wcrtomb@plt+0x4194>
  408cf8:	bl	404170 <fileno@plt>
  408cfc:	add	x2, x29, #0x18
  408d00:	mov	w1, #0x5413                	// #21523
  408d04:	bl	404af0 <ioctl@plt>
  408d08:	cbz	w0, 408d38 <wcrtomb@plt+0x41f8>
  408d0c:	mov	x0, x19
  408d10:	bl	404a30 <getenv@plt>
  408d14:	cbz	x0, 408d30 <wcrtomb@plt+0x41f0>
  408d18:	mov	w2, #0xa                   	// #10
  408d1c:	mov	x1, xzr
  408d20:	bl	4046c0 <strtol@plt>
  408d24:	mov	x20, x0
  408d28:	cmp	x0, #0x0
  408d2c:	b.gt	408d40 <wcrtomb@plt+0x4200>
  408d30:	mov	w20, #0x50                  	// #80
  408d34:	b	408d40 <wcrtomb@plt+0x4200>
  408d38:	ldrh	w20, [x29, #26]
  408d3c:	cbz	x20, 408d0c <wcrtomb@plt+0x41cc>
  408d40:	ldr	x0, [x22, #872]
  408d44:	ldp	x8, x9, [x0, #40]
  408d48:	sub	x20, x20, #0x1
  408d4c:	cmp	x8, x9
  408d50:	b.cs	408d68 <wcrtomb@plt+0x4228>  // b.hs, b.nlast
  408d54:	add	x9, x8, #0x1
  408d58:	str	x9, [x0, #40]
  408d5c:	strb	w24, [x8]
  408d60:	cbnz	x20, 408d44 <wcrtomb@plt+0x4204>
  408d64:	b	408d78 <wcrtomb@plt+0x4238>
  408d68:	mov	w1, #0x20                  	// #32
  408d6c:	bl	4045e0 <__overflow@plt>
  408d70:	ldr	x0, [x22, #872]
  408d74:	cbnz	x20, 408d44 <wcrtomb@plt+0x4204>
  408d78:	ldp	x8, x9, [x0, #40]
  408d7c:	cmp	x8, x9
  408d80:	b.cs	408cc4 <wcrtomb@plt+0x4184>  // b.hs, b.nlast
  408d84:	add	x9, x8, #0x1
  408d88:	str	x9, [x0, #40]
  408d8c:	strb	w25, [x8]
  408d90:	b	408ccc <wcrtomb@plt+0x418c>
  408d94:	ldp	x20, x19, [sp, #64]
  408d98:	ldp	x22, x21, [sp, #48]
  408d9c:	ldp	x24, x23, [sp, #32]
  408da0:	ldr	x25, [sp, #16]
  408da4:	ldp	x29, x30, [sp], #80
  408da8:	ret
  408dac:	sub	sp, sp, #0x70
  408db0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408db4:	ldr	w8, [x8, #3912]
  408db8:	stp	x29, x30, [sp, #16]
  408dbc:	stp	x28, x27, [sp, #32]
  408dc0:	stp	x26, x25, [sp, #48]
  408dc4:	stp	x24, x23, [sp, #64]
  408dc8:	stp	x22, x21, [sp, #80]
  408dcc:	stp	x20, x19, [sp, #96]
  408dd0:	add	x29, sp, #0x10
  408dd4:	cbz	w8, 408df4 <wcrtomb@plt+0x42b4>
  408dd8:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408ddc:	ldr	w9, [x24, #884]
  408de0:	add	w9, w9, #0x1
  408de4:	udiv	w10, w9, w8
  408de8:	msub	w8, w10, w8, w9
  408dec:	str	w9, [x24, #884]
  408df0:	cbz	w8, 408e14 <wcrtomb@plt+0x42d4>
  408df4:	ldp	x20, x19, [sp, #96]
  408df8:	ldp	x22, x21, [sp, #80]
  408dfc:	ldp	x24, x23, [sp, #64]
  408e00:	ldp	x26, x25, [sp, #48]
  408e04:	ldp	x28, x27, [sp, #32]
  408e08:	ldp	x29, x30, [sp, #16]
  408e0c:	add	sp, sp, #0x70
  408e10:	ret
  408e14:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408e18:	ldr	x25, [x8, #864]
  408e1c:	cbz	x25, 408df4 <wcrtomb@plt+0x42b4>
  408e20:	adrp	x26, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408e24:	adrp	x22, 45d000 <_obstack_memory_used@@Base+0x164b0>
  408e28:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408e2c:	mov	w19, w0
  408e30:	add	x26, x26, #0x983
  408e34:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408e38:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408e3c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408e40:	add	x22, x22, #0x315
  408e44:	adrp	x28, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408e48:	add	x23, x23, #0x2e0
  408e4c:	b	408e64 <wcrtomb@plt+0x4324>
  408e50:	sub	x1, x29, #0x4
  408e54:	mov	x0, x23
  408e58:	bl	4046e0 <sigwait@plt>
  408e5c:	ldr	x25, [x25]
  408e60:	cbz	x25, 408df4 <wcrtomb@plt+0x42b4>
  408e64:	ldr	w8, [x25, #8]
  408e68:	cmp	w8, #0x7
  408e6c:	b.hi	408e5c <wcrtomb@plt+0x431c>  // b.pmore
  408e70:	adr	x9, 408e50 <wcrtomb@plt+0x4310>
  408e74:	ldrb	w10, [x26, x8]
  408e78:	add	x9, x9, x10, lsl #2
  408e7c:	br	x9
  408e80:	ldr	x0, [x27, #2888]
  408e84:	ldp	x8, x9, [x0, #40]
  408e88:	cmp	x8, x9
  408e8c:	b.cs	408fb8 <wcrtomb@plt+0x4478>  // b.hs, b.nlast
  408e90:	add	x9, x8, #0x1
  408e94:	str	x9, [x0, #40]
  408e98:	mov	w9, #0x2e                  	// #46
  408e9c:	strb	w9, [x8]
  408ea0:	ldr	x0, [x27, #2888]
  408ea4:	bl	404800 <fflush_unlocked@plt>
  408ea8:	b	408e5c <wcrtomb@plt+0x431c>
  408eac:	ldr	x0, [x20, #872]
  408eb0:	cbnz	x0, 408ed0 <wcrtomb@plt+0x4390>
  408eb4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408eb8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  408ebc:	add	x0, x0, #0x54c
  408ec0:	add	x1, x1, #0x3f8
  408ec4:	bl	404220 <fopen@plt>
  408ec8:	str	x0, [x20, #872]
  408ecc:	cbz	x0, 408e5c <wcrtomb@plt+0x431c>
  408ed0:	ldp	x8, x9, [x0, #40]
  408ed4:	cmp	x8, x9
  408ed8:	b.cs	408fd0 <wcrtomb@plt+0x4490>  // b.hs, b.nlast
  408edc:	add	x9, x8, #0x1
  408ee0:	str	x9, [x0, #40]
  408ee4:	mov	w9, #0x7                   	// #7
  408ee8:	strb	w9, [x8]
  408eec:	bl	404800 <fflush_unlocked@plt>
  408ef0:	b	408e5c <wcrtomb@plt+0x431c>
  408ef4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408ef8:	ldr	x0, [x21, #96]
  408efc:	ldr	x3, [x8, #2504]
  408f00:	mov	w1, #0x1                   	// #1
  408f04:	mov	x2, x22
  408f08:	bl	404650 <__fprintf_chk@plt>
  408f0c:	ldr	x8, [x21, #96]
  408f10:	ldr	x2, [x25, #16]
  408f14:	ldr	w4, [x24, #884]
  408f18:	sxtw	x1, w0
  408f1c:	and	w3, w19, #0x1
  408f20:	mov	x0, x8
  408f24:	bl	409018 <wcrtomb@plt+0x44d8>
  408f28:	ldr	x0, [x21, #96]
  408f2c:	ldp	x8, x9, [x0, #40]
  408f30:	cmp	x8, x9
  408f34:	b.cs	408fc4 <wcrtomb@plt+0x4484>  // b.hs, b.nlast
  408f38:	add	x9, x8, #0x1
  408f3c:	str	x9, [x0, #40]
  408f40:	mov	w9, #0xa                   	// #10
  408f44:	strb	w9, [x8]
  408f48:	b	408e5c <wcrtomb@plt+0x431c>
  408f4c:	ldr	x0, [x20, #872]
  408f50:	cbnz	x0, 408f70 <wcrtomb@plt+0x4430>
  408f54:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  408f58:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  408f5c:	add	x0, x0, #0x54c
  408f60:	add	x1, x1, #0x3f8
  408f64:	bl	404220 <fopen@plt>
  408f68:	str	x0, [x20, #872]
  408f6c:	cbz	x0, 408e5c <wcrtomb@plt+0x431c>
  408f70:	ldr	x2, [x25, #16]
  408f74:	ldr	w4, [x24, #884]
  408f78:	and	w3, w19, #0x1
  408f7c:	mov	x1, xzr
  408f80:	bl	409018 <wcrtomb@plt+0x44d8>
  408f84:	b	408e5c <wcrtomb@plt+0x431c>
  408f88:	ldr	w0, [x25, #16]
  408f8c:	bl	4043b0 <sleep@plt>
  408f90:	b	408e5c <wcrtomb@plt+0x431c>
  408f94:	ldr	x8, [x28, #3792]
  408f98:	ldr	x0, [x25, #16]
  408f9c:	ldr	w2, [x24, #884]
  408fa0:	ldr	x1, [x8]
  408fa4:	bl	422c08 <wcrtomb@plt+0x1e0c8>
  408fa8:	b	408e5c <wcrtomb@plt+0x431c>
  408fac:	bl	404e48 <wcrtomb@plt+0x308>
  408fb0:	bl	4052d4 <wcrtomb@plt+0x794>
  408fb4:	b	408e5c <wcrtomb@plt+0x431c>
  408fb8:	mov	w1, #0x2e                  	// #46
  408fbc:	bl	4045e0 <__overflow@plt>
  408fc0:	b	408ea0 <wcrtomb@plt+0x4360>
  408fc4:	mov	w1, #0xa                   	// #10
  408fc8:	bl	4045e0 <__overflow@plt>
  408fcc:	b	408e5c <wcrtomb@plt+0x431c>
  408fd0:	mov	w1, #0x7                   	// #7
  408fd4:	bl	4045e0 <__overflow@plt>
  408fd8:	ldr	x0, [x20, #872]
  408fdc:	bl	404800 <fflush_unlocked@plt>
  408fe0:	b	408e5c <wcrtomb@plt+0x431c>
  408fe4:	stp	x29, x30, [sp, #-16]!
  408fe8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  408fec:	ldr	w8, [x8, #3912]
  408ff0:	mov	x29, sp
  408ff4:	cbz	w8, 409010 <wcrtomb@plt+0x44d0>
  408ff8:	bl	408c84 <wcrtomb@plt+0x4144>
  408ffc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409000:	ldr	x0, [x8, #872]
  409004:	cbz	x0, 409010 <wcrtomb@plt+0x44d0>
  409008:	ldp	x29, x30, [sp], #16
  40900c:	b	4041e0 <fclose@plt>
  409010:	ldp	x29, x30, [sp], #16
  409014:	ret
  409018:	sub	sp, sp, #0x1a0
  40901c:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409020:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  409024:	add	x8, x8, #0x37d
  409028:	add	x9, x9, #0xeda
  40902c:	tst	w3, #0x1
  409030:	stp	x28, x27, [sp, #336]
  409034:	stp	x22, x21, [sp, #384]
  409038:	stp	x20, x19, [sp, #400]
  40903c:	mov	x27, x2
  409040:	mov	x19, x1
  409044:	mov	x22, x0
  409048:	csel	x1, x9, x8, ne  // ne = any
  40904c:	mov	w2, #0x5                   	// #5
  409050:	mov	x0, xzr
  409054:	stp	x29, x30, [sp, #320]
  409058:	stp	x26, x25, [sp, #352]
  40905c:	stp	x24, x23, [sp, #368]
  409060:	add	x29, sp, #0x140
  409064:	mov	w20, w4
  409068:	str	w3, [sp, #28]
  40906c:	bl	404900 <dcgettext@plt>
  409070:	str	x0, [sp, #16]
  409074:	mov	w0, w20
  409078:	sub	x1, x29, #0x20
  40907c:	str	w20, [sp, #24]
  409080:	bl	43d080 <argp_parse@@Base+0x57d4>
  409084:	str	x0, [sp, #8]
  409088:	cbnz	x27, 4090b8 <wcrtomb@plt+0x4578>
  40908c:	ldr	w10, [sp, #28]
  409090:	adrp	x8, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409094:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409098:	add	x8, x8, #0xa35
  40909c:	add	x9, x9, #0xa21
  4090a0:	tst	w10, #0x1
  4090a4:	csel	x1, x9, x8, ne  // ne = any
  4090a8:	mov	w2, #0x5                   	// #5
  4090ac:	mov	x0, xzr
  4090b0:	bl	404900 <dcgettext@plt>
  4090b4:	mov	x27, x0
  4090b8:	sub	x8, x29, #0x38
  4090bc:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4090c0:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4090c4:	mov	w24, #0x20                  	// #32
  4090c8:	add	x20, x20, #0x98b
  4090cc:	mov	w25, #0x1                   	// #1
  4090d0:	add	x8, x8, #0x10
  4090d4:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4090d8:	str	x8, [sp]
  4090dc:	b	409100 <wcrtomb@plt+0x45c0>
  4090e0:	ldr	x26, [sp, #8]
  4090e4:	mov	x0, x26
  4090e8:	mov	x1, x22
  4090ec:	bl	404920 <fputs_unlocked@plt>
  4090f0:	mov	x0, x26
  4090f4:	bl	403f40 <strlen@plt>
  4090f8:	add	x19, x0, x19
  4090fc:	add	x27, x28, #0x1
  409100:	ldrb	w1, [x27]
  409104:	cmp	w1, #0x25
  409108:	b.eq	409140 <wcrtomb@plt+0x4600>  // b.none
  40910c:	cbz	w1, 4095c8 <wcrtomb@plt+0x4a88>
  409110:	ldp	x8, x9, [x22, #40]
  409114:	cmp	x8, x9
  409118:	b.cs	409574 <wcrtomb@plt+0x4a34>  // b.hs, b.nlast
  40911c:	add	x9, x8, #0x1
  409120:	str	x9, [x22, #40]
  409124:	strb	w1, [x8]
  409128:	ldrb	w8, [x27]
  40912c:	cmp	w8, #0xd
  409130:	b.ne	409194 <wcrtomb@plt+0x4654>  // b.any
  409134:	mov	x19, xzr
  409138:	strb	w25, [x21, #880]
  40913c:	b	409198 <wcrtomb@plt+0x4658>
  409140:	mov	x28, x27
  409144:	ldrb	w8, [x28, #1]!
  409148:	cmp	w8, #0x7b
  40914c:	b.ne	4091a4 <wcrtomb@plt+0x4664>  // b.any
  409150:	add	x27, x27, #0x2
  409154:	mov	w1, #0x7d                  	// #125
  409158:	mov	x0, x27
  40915c:	bl	4047a0 <strchr@plt>
  409160:	cbz	x0, 409280 <wcrtomb@plt+0x4740>
  409164:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409168:	ldr	x8, [x9, #904]
  40916c:	sub	x28, x0, x28
  409170:	mov	x26, x0
  409174:	cmp	x28, x8
  409178:	b.ls	4091ac <wcrtomb@plt+0x466c>  // b.plast
  40917c:	ldr	x0, [x23, #896]
  409180:	mov	x1, x28
  409184:	str	x28, [x9, #904]
  409188:	bl	445a68 <argp_parse@@Base+0xe1bc>
  40918c:	str	x0, [x23, #896]
  409190:	b	4091b0 <wcrtomb@plt+0x4670>
  409194:	add	x19, x19, #0x1
  409198:	mov	x28, x27
  40919c:	add	x27, x28, #0x1
  4091a0:	b	409100 <wcrtomb@plt+0x45c0>
  4091a4:	mov	x27, xzr
  4091a8:	b	4091d4 <wcrtomb@plt+0x4694>
  4091ac:	ldr	x0, [x23, #896]
  4091b0:	sub	x28, x28, #0x1
  4091b4:	mov	x1, x27
  4091b8:	mov	x2, x28
  4091bc:	bl	403ec0 <memcpy@plt>
  4091c0:	ldr	x27, [x23, #896]
  4091c4:	strb	wzr, [x27, x28]
  4091c8:	add	x28, x26, #0x1
  4091cc:	cbz	x27, 409280 <wcrtomb@plt+0x4740>
  4091d0:	ldrb	w8, [x28]
  4091d4:	sub	w9, w8, #0x54
  4091d8:	cmp	w9, #0x21
  4091dc:	b.hi	4092c4 <wcrtomb@plt+0x4784>  // b.pmore
  4091e0:	adr	x8, 4090e0 <wcrtomb@plt+0x45a0>
  4091e4:	ldrb	w10, [x20, x9]
  4091e8:	add	x8, x8, x10, lsl #2
  4091ec:	br	x8
  4091f0:	bl	404e48 <wcrtomb@plt+0x308>
  4091f4:	cbz	x27, 4093d0 <wcrtomb@plt+0x4890>
  4091f8:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4091fc:	add	x8, x8, #0xf0
  409200:	add	x1, sp, #0x20
  409204:	mov	w2, #0x4644                	// #17988
  409208:	mov	x0, x27
  40920c:	str	x8, [sp, #88]
  409210:	bl	42d338 <wcrtomb@plt+0x287f8>
  409214:	cbz	w0, 409440 <wcrtomb@plt+0x4900>
  409218:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40921c:	ldr	x8, [x8, #4064]
  409220:	cbz	x8, 409228 <wcrtomb@plt+0x46e8>
  409224:	blr	x8
  409228:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40922c:	mov	w2, #0x5                   	// #5
  409230:	mov	x0, xzr
  409234:	add	x1, x1, #0xa4d
  409238:	bl	404900 <dcgettext@plt>
  40923c:	mov	x26, x0
  409240:	add	x0, sp, #0x20
  409244:	bl	42d5dc <wcrtomb@plt+0x28a9c>
  409248:	mov	x4, x0
  40924c:	mov	w0, wzr
  409250:	mov	w1, wzr
  409254:	mov	x2, x26
  409258:	mov	x3, x27
  40925c:	bl	403fa0 <error@plt>
  409260:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x304b0>
  409264:	mov	w8, #0x2                   	// #2
  409268:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40926c:	mov	w2, #0x2c                  	// #44
  409270:	mov	x0, x22
  409274:	add	x1, x1, #0x668
  409278:	str	w8, [x9, #2416]
  40927c:	b	409520 <wcrtomb@plt+0x49e0>
  409280:	ldp	x8, x9, [x22, #40]
  409284:	cmp	x8, x9
  409288:	b.cs	409580 <wcrtomb@plt+0x4a40>  // b.hs, b.nlast
  40928c:	add	x9, x8, #0x1
  409290:	str	x9, [x22, #40]
  409294:	mov	w9, #0x25                  	// #37
  409298:	strb	w9, [x8]
  40929c:	ldp	x8, x9, [x22, #40]
  4092a0:	ldrb	w1, [x28]
  4092a4:	cmp	x8, x9
  4092a8:	b.cs	409590 <wcrtomb@plt+0x4a50>  // b.hs, b.nlast
  4092ac:	add	x9, x8, #0x1
  4092b0:	str	x9, [x22, #40]
  4092b4:	strb	w1, [x8]
  4092b8:	add	x19, x19, #0x2
  4092bc:	add	x27, x28, #0x1
  4092c0:	b	409100 <wcrtomb@plt+0x45c0>
  4092c4:	cmp	w8, #0x2a
  4092c8:	b.ne	4092e8 <wcrtomb@plt+0x47a8>  // b.any
  4092cc:	cbz	x27, 4093f8 <wcrtomb@plt+0x48b8>
  4092d0:	mov	w2, #0xa                   	// #10
  4092d4:	mov	x0, x27
  4092d8:	mov	x1, xzr
  4092dc:	bl	4046c0 <strtol@plt>
  4092e0:	mov	x27, x0
  4092e4:	b	4094a4 <wcrtomb@plt+0x4964>
  4092e8:	ldp	x8, x9, [x22, #40]
  4092ec:	cmp	x8, x9
  4092f0:	b.cs	4095a4 <wcrtomb@plt+0x4a64>  // b.hs, b.nlast
  4092f4:	add	x9, x8, #0x1
  4092f8:	str	x9, [x22, #40]
  4092fc:	mov	w9, #0x25                  	// #37
  409300:	strb	w9, [x8]
  409304:	ldp	x8, x9, [x22, #40]
  409308:	ldrb	w1, [x28]
  40930c:	cmp	x8, x9
  409310:	b.cs	4095b4 <wcrtomb@plt+0x4a74>  // b.hs, b.nlast
  409314:	add	x9, x8, #0x1
  409318:	str	x9, [x22, #40]
  40931c:	strb	w1, [x8]
  409320:	add	x19, x19, #0x2
  409324:	add	x27, x28, #0x1
  409328:	b	409100 <wcrtomb@plt+0x45c0>
  40932c:	ldp	w4, w8, [sp, #24]
  409330:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409334:	mov	x0, x22
  409338:	mov	x1, x19
  40933c:	and	w3, w8, #0x1
  409340:	add	x2, x2, #0xa6a
  409344:	bl	409018 <wcrtomb@plt+0x44d8>
  409348:	add	x19, x19, w0, sxtw
  40934c:	add	x27, x28, #0x1
  409350:	b	409100 <wcrtomb@plt+0x45c0>
  409354:	bl	404e48 <wcrtomb@plt+0x308>
  409358:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40935c:	mov	w1, #0x1                   	// #1
  409360:	mov	x0, x22
  409364:	add	x2, x2, #0xa48
  409368:	bl	404650 <__fprintf_chk@plt>
  40936c:	add	x19, x19, w0, sxtw
  409370:	add	x27, x28, #0x1
  409374:	b	409100 <wcrtomb@plt+0x45c0>
  409378:	ldr	x26, [sp, #16]
  40937c:	b	4090e4 <wcrtomb@plt+0x45a4>
  409380:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  409384:	cmp	x27, #0x0
  409388:	add	x8, x8, #0xcb9
  40938c:	add	x0, sp, #0x20
  409390:	mov	x1, xzr
  409394:	csel	x26, x8, x27, eq  // eq = none
  409398:	bl	404380 <gettimeofday@plt>
  40939c:	add	x0, sp, #0x20
  4093a0:	bl	404180 <localtime@plt>
  4093a4:	ldr	w8, [sp, #40]
  4093a8:	mov	w9, #0x3e8                 	// #1000
  4093ac:	mov	x2, x0
  4093b0:	mov	x0, x22
  4093b4:	mul	w4, w8, w9
  4093b8:	mov	x1, x26
  4093bc:	mov	x3, xzr
  4093c0:	bl	43a088 <argp_parse@@Base+0x27dc>
  4093c4:	add	x19, x0, x19
  4093c8:	add	x27, x28, #0x1
  4093cc:	b	409100 <wcrtomb@plt+0x45c0>
  4093d0:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x304b0>
  4093d4:	mov	w2, #0x2c                  	// #44
  4093d8:	mov	x0, x22
  4093dc:	add	x1, x1, #0x668
  4093e0:	mov	w3, wzr
  4093e4:	bl	404f8c <wcrtomb@plt+0x44c>
  4093e8:	mov	w26, w0
  4093ec:	add	x19, x19, w0, sxtw
  4093f0:	add	x27, x28, #0x1
  4093f4:	b	409100 <wcrtomb@plt+0x45c0>
  4093f8:	mov	x0, x22
  4093fc:	bl	404170 <fileno@plt>
  409400:	add	x2, sp, #0x20
  409404:	mov	w1, #0x5413                	// #21523
  409408:	bl	404af0 <ioctl@plt>
  40940c:	cbz	w0, 40949c <wcrtomb@plt+0x495c>
  409410:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409414:	add	x0, x0, #0xa19
  409418:	bl	404a30 <getenv@plt>
  40941c:	cbz	x0, 409438 <wcrtomb@plt+0x48f8>
  409420:	mov	w2, #0xa                   	// #10
  409424:	mov	x1, xzr
  409428:	bl	4046c0 <strtol@plt>
  40942c:	mov	x27, x0
  409430:	cmp	x0, #0x0
  409434:	b.gt	4094a4 <wcrtomb@plt+0x4964>
  409438:	mov	w27, #0x50                  	// #80
  40943c:	b	4094a4 <wcrtomb@plt+0x4964>
  409440:	ldr	x8, [sp, #32]
  409444:	cbz	x8, 4094f0 <wcrtomb@plt+0x49b0>
  409448:	ldr	x9, [sp, #40]
  40944c:	cmp	x8, #0x3
  409450:	sub	x14, x29, #0x38
  409454:	b.ls	409474 <wcrtomb@plt+0x4934>  // b.plast
  409458:	lsl	x10, x8, #3
  40945c:	add	x11, x9, x10
  409460:	cmp	x14, x11
  409464:	b.cs	409540 <wcrtomb@plt+0x4a00>  // b.hs, b.nlast
  409468:	add	x10, x14, x10
  40946c:	cmp	x9, x10
  409470:	b.cs	409540 <wcrtomb@plt+0x4a00>  // b.hs, b.nlast
  409474:	mov	x10, xzr
  409478:	lsl	x11, x10, #3
  40947c:	ldr	x12, [x9, x11]
  409480:	add	x10, x10, #0x1
  409484:	cmp	x8, x10
  409488:	str	x12, [x14, x11]
  40948c:	b.hi	409478 <wcrtomb@plt+0x4938>  // b.pmore
  409490:	cmp	w10, #0x2
  409494:	b.ls	4094f8 <wcrtomb@plt+0x49b8>  // b.plast
  409498:	b	409514 <wcrtomb@plt+0x49d4>
  40949c:	ldrh	w27, [sp, #34]
  4094a0:	cbz	x27, 409410 <wcrtomb@plt+0x48d0>
  4094a4:	cmp	x27, x19
  4094a8:	b.ls	40919c <wcrtomb@plt+0x465c>  // b.plast
  4094ac:	ldp	x8, x9, [x22, #40]
  4094b0:	cmp	x8, x9
  4094b4:	b.cs	4094d4 <wcrtomb@plt+0x4994>  // b.hs, b.nlast
  4094b8:	add	x9, x8, #0x1
  4094bc:	str	x9, [x22, #40]
  4094c0:	strb	w24, [x8]
  4094c4:	add	x19, x19, #0x1
  4094c8:	cmp	x27, x19
  4094cc:	b.ne	4094ac <wcrtomb@plt+0x496c>  // b.any
  4094d0:	b	4094e4 <wcrtomb@plt+0x49a4>
  4094d4:	mov	w1, #0x20                  	// #32
  4094d8:	mov	x0, x22
  4094dc:	bl	4045e0 <__overflow@plt>
  4094e0:	b	4094c4 <wcrtomb@plt+0x4984>
  4094e4:	mov	x19, x27
  4094e8:	add	x27, x28, #0x1
  4094ec:	b	409100 <wcrtomb@plt+0x45c0>
  4094f0:	mov	w10, wzr
  4094f4:	sub	x14, x29, #0x38
  4094f8:	mov	w8, #0x2                   	// #2
  4094fc:	sub	w8, w8, w10
  409500:	lsl	x8, x8, #3
  409504:	add	x0, x14, w10, uxtw #3
  409508:	add	x2, x8, #0x8
  40950c:	mov	w1, wzr
  409510:	bl	404360 <memset@plt>
  409514:	sub	x1, x29, #0x38
  409518:	mov	w2, #0x2c                  	// #44
  40951c:	mov	x0, x22
  409520:	mov	w3, wzr
  409524:	bl	404f8c <wcrtomb@plt+0x44c>
  409528:	mov	w26, w0
  40952c:	add	x0, sp, #0x20
  409530:	bl	42d484 <wcrtomb@plt+0x28944>
  409534:	add	x19, x19, w26, sxtw
  409538:	add	x27, x28, #0x1
  40953c:	b	409100 <wcrtomb@plt+0x45c0>
  409540:	ldr	x13, [sp]
  409544:	and	x10, x8, #0xfffffffffffffffc
  409548:	add	x11, x9, #0x10
  40954c:	mov	x12, x10
  409550:	ldp	q0, q1, [x11, #-16]
  409554:	add	x11, x11, #0x20
  409558:	subs	x12, x12, #0x4
  40955c:	stp	q0, q1, [x13, #-16]
  409560:	add	x13, x13, #0x20
  409564:	b.ne	409550 <wcrtomb@plt+0x4a10>  // b.any
  409568:	cmp	x8, x10
  40956c:	b.ne	409478 <wcrtomb@plt+0x4938>  // b.any
  409570:	b	409490 <wcrtomb@plt+0x4950>
  409574:	mov	x0, x22
  409578:	bl	4045e0 <__overflow@plt>
  40957c:	b	409128 <wcrtomb@plt+0x45e8>
  409580:	mov	w1, #0x25                  	// #37
  409584:	mov	x0, x22
  409588:	bl	4045e0 <__overflow@plt>
  40958c:	b	40929c <wcrtomb@plt+0x475c>
  409590:	mov	x0, x22
  409594:	bl	4045e0 <__overflow@plt>
  409598:	add	x19, x19, #0x2
  40959c:	add	x27, x28, #0x1
  4095a0:	b	409100 <wcrtomb@plt+0x45c0>
  4095a4:	mov	w1, #0x25                  	// #37
  4095a8:	mov	x0, x22
  4095ac:	bl	4045e0 <__overflow@plt>
  4095b0:	b	409304 <wcrtomb@plt+0x47c4>
  4095b4:	mov	x0, x22
  4095b8:	bl	4045e0 <__overflow@plt>
  4095bc:	add	x19, x19, #0x2
  4095c0:	add	x27, x28, #0x1
  4095c4:	b	409100 <wcrtomb@plt+0x45c0>
  4095c8:	mov	x0, x22
  4095cc:	bl	404800 <fflush_unlocked@plt>
  4095d0:	mov	w0, w19
  4095d4:	ldp	x20, x19, [sp, #400]
  4095d8:	ldp	x22, x21, [sp, #384]
  4095dc:	ldp	x24, x23, [sp, #368]
  4095e0:	ldp	x26, x25, [sp, #352]
  4095e4:	ldp	x28, x27, [sp, #336]
  4095e8:	ldp	x29, x30, [sp, #320]
  4095ec:	add	sp, sp, #0x1a0
  4095f0:	ret
  4095f4:	sub	sp, sp, #0x20
  4095f8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4095fc:	ldr	x1, [x8, #3976]
  409600:	add	x0, sp, #0x8
  409604:	stp	x29, x30, [sp, #16]
  409608:	add	x29, sp, #0x10
  40960c:	bl	41c554 <wcrtomb@plt+0x17a14>
  409610:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409614:	ldr	x8, [x8, #3888]
  409618:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40961c:	str	x0, [x9, #912]
  409620:	cbz	x8, 409628 <wcrtomb@plt+0x4ae8>
  409624:	bl	415e30 <wcrtomb@plt+0x112f0>
  409628:	ldp	x29, x30, [sp, #16]
  40962c:	add	sp, sp, #0x20
  409630:	ret
  409634:	sub	sp, sp, #0x120
  409638:	stp	x29, x30, [sp, #240]
  40963c:	add	x29, sp, #0xf0
  409640:	stp	x28, x21, [sp, #256]
  409644:	stp	x20, x19, [sp, #272]
  409648:	stp	x2, x3, [x29, #-112]
  40964c:	stp	x4, x5, [x29, #-96]
  409650:	stp	x6, x7, [x29, #-80]
  409654:	stp	q1, q2, [sp, #16]
  409658:	stp	q3, q4, [sp, #48]
  40965c:	str	q0, [sp]
  409660:	stp	q5, q6, [sp, #80]
  409664:	str	q7, [sp, #112]
  409668:	cbz	x1, 4096f0 <wcrtomb@plt+0x4bb0>
  40966c:	mov	x19, x1
  409670:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409674:	ldr	x1, [x0, #8]
  409678:	ldr	x20, [x21, #2888]
  40967c:	mov	w0, #0x1                   	// #1
  409680:	bl	41a9f4 <wcrtomb@plt+0x15eb4>
  409684:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  409688:	mov	x3, x0
  40968c:	add	x2, x2, #0x315
  409690:	mov	w1, #0x1                   	// #1
  409694:	mov	x0, x20
  409698:	bl	404650 <__fprintf_chk@plt>
  40969c:	sub	x9, x29, #0x70
  4096a0:	mov	x10, sp
  4096a4:	mov	x11, #0xffffffffffffffd0    	// #-48
  4096a8:	add	x8, x29, #0x30
  4096ac:	movk	x11, #0xff80, lsl #32
  4096b0:	add	x9, x9, #0x30
  4096b4:	add	x10, x10, #0x80
  4096b8:	stp	x8, x9, [x29, #-64]
  4096bc:	stp	x10, x11, [x29, #-48]
  4096c0:	ldp	q0, q1, [x29, #-64]
  4096c4:	ldr	x0, [x21, #2888]
  4096c8:	sub	x3, x29, #0x20
  4096cc:	mov	w1, #0x1                   	// #1
  4096d0:	mov	x2, x19
  4096d4:	stp	q0, q1, [x29, #-32]
  4096d8:	bl	4043f0 <__vfprintf_chk@plt>
  4096dc:	ldr	x0, [x21, #2888]
  4096e0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4096e4:	add	x2, x2, #0x783
  4096e8:	mov	w1, #0x1                   	// #1
  4096ec:	bl	404650 <__fprintf_chk@plt>
  4096f0:	mov	w0, #0x1                   	// #1
  4096f4:	bl	424364 <wcrtomb@plt+0x1f824>
  4096f8:	ldp	x20, x19, [sp, #272]
  4096fc:	ldp	x28, x21, [sp, #256]
  409700:	ldp	x29, x30, [sp, #240]
  409704:	add	sp, sp, #0x120
  409708:	ret
  40970c:	stp	x29, x30, [sp, #-80]!
  409710:	str	x28, [sp, #16]
  409714:	stp	x24, x23, [sp, #32]
  409718:	stp	x22, x21, [sp, #48]
  40971c:	stp	x20, x19, [sp, #64]
  409720:	mov	x29, sp
  409724:	sub	sp, sp, #0x480
  409728:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40972c:	ldr	x0, [x20, #3032]
  409730:	bl	405670 <wcrtomb@plt+0xb30>
  409734:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409738:	ldr	w8, [x8, #3700]
  40973c:	cbz	w8, 40978c <wcrtomb@plt+0x4c4c>
  409740:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409744:	ldrb	w8, [x8, #2984]
  409748:	cbz	w8, 409778 <wcrtomb@plt+0x4c38>
  40974c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409750:	ldr	x19, [x8, #2888]
  409754:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409758:	add	x1, x1, #0xb46
  40975c:	mov	w2, #0x5                   	// #5
  409760:	mov	x0, xzr
  409764:	bl	404900 <dcgettext@plt>
  409768:	mov	x2, x0
  40976c:	mov	w1, #0x1                   	// #1
  409770:	mov	x0, x19
  409774:	bl	404650 <__fprintf_chk@plt>
  409778:	ldr	x1, [x20, #3032]
  40977c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409780:	add	x0, x0, #0xc50
  409784:	mov	x2, #0xffffffffffffffff    	// #-1
  409788:	bl	418fc8 <wcrtomb@plt+0x14488>
  40978c:	ldr	x8, [x20, #3032]
  409790:	ldrb	w8, [x8, #156]
  409794:	cmp	w8, #0x56
  409798:	b.hi	409904 <wcrtomb@plt+0x4dc4>  // b.pmore
  40979c:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4097a0:	add	x9, x9, #0xa98
  4097a4:	adr	x10, 4097b4 <wcrtomb@plt+0x4c74>
  4097a8:	ldrh	w11, [x9, x8, lsl #1]
  4097ac:	add	x10, x10, x11, lsl #2
  4097b0:	br	x10
  4097b4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4097b8:	ldrb	w8, [x8, #3168]
  4097bc:	cbnz	w8, 409da4 <wcrtomb@plt+0x5264>
  4097c0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4097c4:	ldr	x19, [x8, #3160]
  4097c8:	add	x1, sp, #0x80
  4097cc:	mov	x0, x19
  4097d0:	bl	41bbd4 <wcrtomb@plt+0x17094>
  4097d4:	cbz	w0, 409a20 <wcrtomb@plt+0x4ee0>
  4097d8:	bl	404a10 <__errno_location@plt>
  4097dc:	ldr	w8, [x0]
  4097e0:	mov	x0, x19
  4097e4:	cmp	w8, #0x2
  4097e8:	b.ne	409b78 <wcrtomb@plt+0x5038>  // b.any
  4097ec:	bl	42b1dc <wcrtomb@plt+0x2669c>
  4097f0:	b	409b7c <wcrtomb@plt+0x503c>
  4097f4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4097f8:	ldr	x19, [x8, #3160]
  4097fc:	add	x1, sp, #0x80
  409800:	mov	x0, x19
  409804:	bl	41bbd4 <wcrtomb@plt+0x17094>
  409808:	cbnz	w0, 409cc0 <wcrtomb@plt+0x5180>
  40980c:	ldr	x8, [x20, #3032]
  409810:	ldrb	w9, [x8, #156]
  409814:	cmp	w9, #0x33
  409818:	b.ne	409b88 <wcrtomb@plt+0x5048>  // b.any
  40981c:	ldr	w8, [sp, #144]
  409820:	and	w9, w8, #0xf000
  409824:	cmp	w9, #0x2, lsl #12
  409828:	b.eq	409ba0 <wcrtomb@plt+0x5060>  // b.none
  40982c:	b	409d30 <wcrtomb@plt+0x51f0>
  409830:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409834:	add	x19, x19, #0xc50
  409838:	mov	x0, x19
  40983c:	bl	416b64 <wcrtomb@plt+0x12024>
  409840:	tbz	w0, #0, 409da4 <wcrtomb@plt+0x5264>
  409844:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409848:	ldr	w8, [x20, #3560]
  40984c:	cbz	w8, 409c60 <wcrtomb@plt+0x5120>
  409850:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409854:	add	x0, x0, #0xc50
  409858:	bl	414d04 <wcrtomb@plt+0x101c4>
  40985c:	bl	41590c <wcrtomb@plt+0x10dcc>
  409860:	cbz	x0, 409d58 <wcrtomb@plt+0x5218>
  409864:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409868:	ldr	x20, [x8, #3536]
  40986c:	mov	w23, #0x4000                	// #16384
  409870:	mov	w24, #0x400                 	// #1024
  409874:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409878:	mov	x19, x0
  40987c:	mov	w22, #0x1                   	// #1
  409880:	movk	w23, #0x11, lsl #16
  409884:	movk	w24, #0x20, lsl #16
  409888:	add	x21, x21, #0xd7a
  40988c:	ldrb	w8, [x20]
  409890:	b	409898 <wcrtomb@plt+0x4d58>
  409894:	cbz	w8, 409c30 <wcrtomb@plt+0x50f0>
  409898:	sub	w9, w8, #0x44
  40989c:	cmp	w9, #0x15
  4098a0:	b.hi	409894 <wcrtomb@plt+0x4d54>  // b.pmore
  4098a4:	lsl	w10, w22, w9
  4098a8:	tst	w10, w23
  4098ac:	b.ne	409c30 <wcrtomb@plt+0x50f0>  // b.any
  4098b0:	tst	w10, w24
  4098b4:	b.ne	4098c8 <wcrtomb@plt+0x4d88>  // b.any
  4098b8:	cbnz	w9, 409894 <wcrtomb@plt+0x4d54>
  4098bc:	mov	x0, x20
  4098c0:	mov	x1, x19
  4098c4:	b	4098e4 <wcrtomb@plt+0x4da4>
  4098c8:	ldrb	w1, [x19]
  4098cc:	mov	w2, #0x3                   	// #3
  4098d0:	mov	x0, x21
  4098d4:	bl	404890 <memchr@plt>
  4098d8:	cbz	x0, 409c38 <wcrtomb@plt+0x50f8>
  4098dc:	add	x0, x20, #0x1
  4098e0:	add	x1, x19, #0x1
  4098e4:	bl	404660 <strcmp@plt>
  4098e8:	cbnz	w0, 409c38 <wcrtomb@plt+0x50f8>
  4098ec:	mov	x0, x20
  4098f0:	bl	403f40 <strlen@plt>
  4098f4:	add	x8, x0, #0x1
  4098f8:	add	x19, x19, x8
  4098fc:	add	x20, x20, x8
  409900:	b	40988c <wcrtomb@plt+0x4d4c>
  409904:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409908:	ldr	x8, [x8, #4064]
  40990c:	cbz	x8, 409914 <wcrtomb@plt+0x4dd4>
  409910:	blr	x8
  409914:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409918:	add	x1, x1, #0xb4e
  40991c:	mov	w2, #0x5                   	// #5
  409920:	mov	x0, xzr
  409924:	bl	404900 <dcgettext@plt>
  409928:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40992c:	ldr	x8, [x8, #3160]
  409930:	mov	x19, x0
  409934:	mov	x0, x8
  409938:	bl	444778 <argp_parse@@Base+0xcecc>
  40993c:	ldr	x8, [x20, #3032]
  409940:	mov	x3, x0
  409944:	mov	w0, wzr
  409948:	mov	w1, wzr
  40994c:	ldrb	w4, [x8, #156]
  409950:	mov	x2, x19
  409954:	bl	403fa0 <error@plt>
  409958:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40995c:	mov	w9, #0x2                   	// #2
  409960:	str	w9, [x8, #2416]
  409964:	b	4097b4 <wcrtomb@plt+0x4c74>
  409968:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40996c:	ldr	x19, [x8, #3160]
  409970:	add	x1, sp, #0x80
  409974:	mov	x0, x19
  409978:	bl	41bbd4 <wcrtomb@plt+0x17094>
  40997c:	cbnz	w0, 409cc0 <wcrtomb@plt+0x5180>
  409980:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409984:	ldr	x19, [x8, #3176]
  409988:	mov	x1, sp
  40998c:	mov	x0, x19
  409990:	bl	41bbd4 <wcrtomb@plt+0x17094>
  409994:	cbnz	w0, 409cc0 <wcrtomb@plt+0x5180>
  409998:	add	x0, sp, #0x80
  40999c:	mov	x1, sp
  4099a0:	bl	4218fc <wcrtomb@plt+0x1cdbc>
  4099a4:	tbnz	w0, #0, 409e84 <wcrtomb@plt+0x5344>
  4099a8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4099ac:	add	x1, x1, #0xd43
  4099b0:	mov	w2, #0x5                   	// #5
  4099b4:	mov	x0, xzr
  4099b8:	bl	404900 <dcgettext@plt>
  4099bc:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4099c0:	add	x19, x19, #0xc50
  4099c4:	ldr	x1, [x19, #24]
  4099c8:	mov	x20, x0
  4099cc:	mov	w0, wzr
  4099d0:	bl	41a9f4 <wcrtomb@plt+0x15eb4>
  4099d4:	mov	x2, x0
  4099d8:	mov	x0, x19
  4099dc:	mov	x1, x20
  4099e0:	bl	409634 <wcrtomb@plt+0x4af4>
  4099e4:	b	409e84 <wcrtomb@plt+0x5344>
  4099e8:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4099ec:	ldr	x0, [x22, #3176]
  4099f0:	bl	403f40 <strlen@plt>
  4099f4:	mov	x20, x0
  4099f8:	cmp	x0, #0x400
  4099fc:	add	x21, x0, #0x1
  409a00:	b.cs	409bc0 <wcrtomb@plt+0x5080>  // b.hs, b.nlast
  409a04:	add	x19, sp, #0x80
  409a08:	b	409bcc <wcrtomb@plt+0x508c>
  409a0c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409a10:	ldrb	w8, [x8, #3168]
  409a14:	cbz	w8, 409ca8 <wcrtomb@plt+0x5168>
  409a18:	bl	409f48 <wcrtomb@plt+0x5408>
  409a1c:	b	409e84 <wcrtomb@plt+0x5344>
  409a20:	ldr	w8, [sp, #144]
  409a24:	and	w9, w8, #0xf000
  409a28:	cmp	w9, #0x8, lsl #12
  409a2c:	b.ne	409e50 <wcrtomb@plt+0x5310>  // b.any
  409a30:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409a34:	ldr	w9, [x9, #3256]
  409a38:	eor	w8, w9, w8
  409a3c:	tst	w8, #0xfff
  409a40:	b.eq	409a68 <wcrtomb@plt+0x4f28>  // b.none
  409a44:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409a48:	add	x1, x1, #0xc95
  409a4c:	mov	w2, #0x5                   	// #5
  409a50:	mov	x0, xzr
  409a54:	bl	404900 <dcgettext@plt>
  409a58:	mov	x1, x0
  409a5c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409a60:	add	x0, x0, #0xc50
  409a64:	bl	409634 <wcrtomb@plt+0x4af4>
  409a68:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409a6c:	add	x1, x1, #0xca8
  409a70:	add	x0, sp, #0x80
  409a74:	bl	4218d4 <wcrtomb@plt+0x1cd94>
  409a78:	tbnz	w0, #0, 409aa0 <wcrtomb@plt+0x4f60>
  409a7c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409a80:	add	x1, x1, #0xca2
  409a84:	mov	w2, #0x5                   	// #5
  409a88:	mov	x0, xzr
  409a8c:	bl	404900 <dcgettext@plt>
  409a90:	mov	x1, x0
  409a94:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409a98:	add	x0, x0, #0xc50
  409a9c:	bl	409634 <wcrtomb@plt+0x4af4>
  409aa0:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409aa4:	add	x1, x1, #0xca8
  409aa8:	add	x0, sp, #0x80
  409aac:	bl	4218e8 <wcrtomb@plt+0x1cda8>
  409ab0:	tbnz	w0, #0, 409ad8 <wcrtomb@plt+0x4f98>
  409ab4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409ab8:	add	x1, x1, #0xcae
  409abc:	mov	w2, #0x5                   	// #5
  409ac0:	mov	x0, xzr
  409ac4:	bl	404900 <dcgettext@plt>
  409ac8:	mov	x1, x0
  409acc:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409ad0:	add	x0, x0, #0xc50
  409ad4:	bl	409634 <wcrtomb@plt+0x4af4>
  409ad8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409adc:	add	x8, x8, #0xd38
  409ae0:	ldp	x0, x1, [sp, #216]
  409ae4:	ldp	x2, x3, [x8]
  409ae8:	bl	424520 <wcrtomb@plt+0x1f9e0>
  409aec:	cbz	w0, 409b14 <wcrtomb@plt+0x4fd4>
  409af0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409af4:	add	x1, x1, #0xcba
  409af8:	mov	w2, #0x5                   	// #5
  409afc:	mov	x0, xzr
  409b00:	bl	404900 <dcgettext@plt>
  409b04:	mov	x1, x0
  409b08:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409b0c:	add	x0, x0, #0xc50
  409b10:	bl	409634 <wcrtomb@plt+0x4af4>
  409b14:	ldr	x8, [x20, #3032]
  409b18:	ldrb	w8, [x8, #156]
  409b1c:	cmp	w8, #0x53
  409b20:	b.eq	409b38 <wcrtomb@plt+0x4ff8>  // b.none
  409b24:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409b28:	ldr	x8, [sp, #176]
  409b2c:	ldr	x9, [x9, #3288]
  409b30:	cmp	x8, x9
  409b34:	b.ne	409e5c <wcrtomb@plt+0x531c>  // b.any
  409b38:	adrp	x21, 477000 <_obstack_memory_used@@Base+0x304b0>
  409b3c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409b40:	ldr	w0, [x21, #1872]
  409b44:	ldr	w2, [x8, #3764]
  409b48:	mov	x1, x19
  409b4c:	bl	4049f0 <openat@plt>
  409b50:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409b54:	str	w0, [x20, #920]
  409b58:	tbnz	w0, #31, 409ea0 <wcrtomb@plt+0x5360>
  409b5c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409b60:	ldrb	w8, [x8, #3424]
  409b64:	cbz	w8, 409eb8 <wcrtomb@plt+0x5378>
  409b68:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409b6c:	add	x1, x1, #0xc50
  409b70:	bl	41fa00 <wcrtomb@plt+0x1aec0>
  409b74:	b	409ec4 <wcrtomb@plt+0x5384>
  409b78:	bl	42b158 <wcrtomb@plt+0x26618>
  409b7c:	mov	w0, #0x1                   	// #1
  409b80:	bl	424364 <wcrtomb@plt+0x1f824>
  409b84:	b	409e80 <wcrtomb@plt+0x5340>
  409b88:	ldr	w8, [sp, #144]
  409b8c:	cmp	w9, #0x34
  409b90:	and	w9, w8, #0xf000
  409b94:	b.ne	409d08 <wcrtomb@plt+0x51c8>  // b.any
  409b98:	cmp	w9, #0x6, lsl #12
  409b9c:	b.ne	409d30 <wcrtomb@plt+0x51f0>  // b.any
  409ba0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409ba4:	ldr	x9, [x9, #3272]
  409ba8:	ldr	x10, [sp, #160]
  409bac:	cmp	x9, x10
  409bb0:	b.eq	409d10 <wcrtomb@plt+0x51d0>  // b.none
  409bb4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409bb8:	add	x1, x1, #0xd64
  409bbc:	b	409d38 <wcrtomb@plt+0x51f8>
  409bc0:	mov	x0, x21
  409bc4:	bl	4459e8 <argp_parse@@Base+0xe13c>
  409bc8:	mov	x19, x0
  409bcc:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  409bd0:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409bd4:	ldr	w0, [x8, #1872]
  409bd8:	ldr	x1, [x23, #3160]
  409bdc:	mov	x2, x19
  409be0:	mov	x3, x21
  409be4:	bl	404b30 <readlinkat@plt>
  409be8:	tbnz	x0, #63, 409cec <wcrtomb@plt+0x51ac>
  409bec:	cmp	x0, x20
  409bf0:	b.ne	409c08 <wcrtomb@plt+0x50c8>  // b.any
  409bf4:	ldr	x0, [x22, #3176]
  409bf8:	mov	x1, x19
  409bfc:	mov	x2, x20
  409c00:	bl	404440 <bcmp@plt>
  409c04:	cbz	w0, 409d74 <wcrtomb@plt+0x5234>
  409c08:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409c0c:	add	x1, x1, #0xd54
  409c10:	mov	w2, #0x5                   	// #5
  409c14:	mov	x0, xzr
  409c18:	bl	404900 <dcgettext@plt>
  409c1c:	mov	x1, x0
  409c20:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409c24:	add	x0, x0, #0xc50
  409c28:	bl	409634 <wcrtomb@plt+0x4af4>
  409c2c:	b	409d74 <wcrtomb@plt+0x5234>
  409c30:	ldrb	w8, [x19]
  409c34:	cbz	w8, 409da4 <wcrtomb@plt+0x5264>
  409c38:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409c3c:	add	x1, x1, #0xd33
  409c40:	mov	w2, #0x5                   	// #5
  409c44:	mov	x0, xzr
  409c48:	bl	404900 <dcgettext@plt>
  409c4c:	mov	x1, x0
  409c50:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409c54:	add	x0, x0, #0xc50
  409c58:	bl	409634 <wcrtomb@plt+0x4af4>
  409c5c:	b	409da4 <wcrtomb@plt+0x5264>
  409c60:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409c64:	ldr	x0, [x19, #392]
  409c68:	ldr	x1, [x19]
  409c6c:	ldr	w2, [x8, #3764]
  409c70:	bl	40a770 <wcrtomb@plt+0x5c30>
  409c74:	tbnz	w0, #31, 409d8c <wcrtomb@plt+0x524c>
  409c78:	mov	w19, w0
  409c7c:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409c80:	add	x2, x2, #0xca8
  409c84:	mov	w0, wzr
  409c88:	mov	w1, w19
  409c8c:	bl	4048e0 <__fxstat@plt>
  409c90:	cbz	w0, 409eb0 <wcrtomb@plt+0x5370>
  409c94:	mov	w0, w19
  409c98:	bl	404520 <close@plt>
  409c9c:	adrp	x2, 41c000 <wcrtomb@plt+0x174c0>
  409ca0:	add	x2, x2, #0x40c
  409ca4:	b	409d94 <wcrtomb@plt+0x5254>
  409ca8:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409cac:	ldr	x19, [x21, #3160]
  409cb0:	add	x1, sp, #0x80
  409cb4:	mov	x0, x19
  409cb8:	bl	41bbd4 <wcrtomb@plt+0x17094>
  409cbc:	cbz	w0, 409dc0 <wcrtomb@plt+0x5280>
  409cc0:	bl	404a10 <__errno_location@plt>
  409cc4:	ldr	w8, [x0]
  409cc8:	mov	x0, x19
  409ccc:	cmp	w8, #0x2
  409cd0:	b.ne	409cdc <wcrtomb@plt+0x519c>  // b.any
  409cd4:	bl	42b1dc <wcrtomb@plt+0x2669c>
  409cd8:	b	409ce0 <wcrtomb@plt+0x51a0>
  409cdc:	bl	42b158 <wcrtomb@plt+0x26618>
  409ce0:	mov	w0, #0x1                   	// #1
  409ce4:	bl	424364 <wcrtomb@plt+0x1f824>
  409ce8:	b	409e84 <wcrtomb@plt+0x5344>
  409cec:	bl	404a10 <__errno_location@plt>
  409cf0:	ldr	w8, [x0]
  409cf4:	ldr	x0, [x23, #3160]
  409cf8:	cmp	w8, #0x2
  409cfc:	b.ne	409d68 <wcrtomb@plt+0x5228>  // b.any
  409d00:	bl	42ac98 <wcrtomb@plt+0x26158>
  409d04:	b	409d6c <wcrtomb@plt+0x522c>
  409d08:	cmp	w9, #0x1, lsl #12
  409d0c:	b.ne	409d30 <wcrtomb@plt+0x51f0>  // b.any
  409d10:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409d14:	ldr	w9, [x9, #3256]
  409d18:	eor	w8, w9, w8
  409d1c:	tst	w8, #0xfff
  409d20:	b.eq	409e84 <wcrtomb@plt+0x5344>  // b.none
  409d24:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409d28:	add	x1, x1, #0xc95
  409d2c:	b	409d38 <wcrtomb@plt+0x51f8>
  409d30:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409d34:	add	x1, x1, #0xc83
  409d38:	mov	w2, #0x5                   	// #5
  409d3c:	mov	x0, xzr
  409d40:	bl	404900 <dcgettext@plt>
  409d44:	mov	x1, x0
  409d48:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409d4c:	add	x0, x0, #0xc50
  409d50:	bl	409634 <wcrtomb@plt+0x4af4>
  409d54:	b	409e84 <wcrtomb@plt+0x5344>
  409d58:	adrp	x0, 40a000 <wcrtomb@plt+0x54c0>
  409d5c:	add	x0, x0, #0x5ac
  409d60:	bl	40a3d4 <wcrtomb@plt+0x5894>
  409d64:	b	409da4 <wcrtomb@plt+0x5264>
  409d68:	bl	42ac14 <wcrtomb@plt+0x260d4>
  409d6c:	mov	w0, #0x1                   	// #1
  409d70:	bl	424364 <wcrtomb@plt+0x1f824>
  409d74:	add	x8, sp, #0x80
  409d78:	cmp	x19, x8
  409d7c:	b.eq	409e84 <wcrtomb@plt+0x5344>  // b.none
  409d80:	mov	x0, x19
  409d84:	bl	404700 <free@plt>
  409d88:	b	409e84 <wcrtomb@plt+0x5344>
  409d8c:	adrp	x2, 41c000 <wcrtomb@plt+0x174c0>
  409d90:	add	x2, x2, #0x358
  409d94:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409d98:	ldr	x0, [x8, #3152]
  409d9c:	mov	w1, wzr
  409da0:	bl	41c430 <wcrtomb@plt+0x178f0>
  409da4:	add	sp, sp, #0x480
  409da8:	ldp	x20, x19, [sp, #64]
  409dac:	ldp	x22, x21, [sp, #48]
  409db0:	ldp	x24, x23, [sp, #32]
  409db4:	ldr	x28, [sp, #16]
  409db8:	ldp	x29, x30, [sp], #80
  409dbc:	b	409f48 <wcrtomb@plt+0x5408>
  409dc0:	ldr	w8, [sp, #144]
  409dc4:	and	w8, w8, #0xf000
  409dc8:	cmp	w8, #0x8, lsl #12
  409dcc:	b.ne	409e50 <wcrtomb@plt+0x5310>  // b.any
  409dd0:	ldr	x8, [x20, #3032]
  409dd4:	mov	w1, #0xc                   	// #12
  409dd8:	add	x0, x8, #0x171
  409ddc:	bl	4197d4 <wcrtomb@plt+0x14c94>
  409de0:	tbnz	x0, #63, 409e5c <wcrtomb@plt+0x531c>
  409de4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409de8:	ldr	x8, [x8, #3288]
  409dec:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  409df0:	sub	x9, x9, x0
  409df4:	mov	x19, x0
  409df8:	cmp	x9, x8
  409dfc:	b.lt	409e5c <wcrtomb@plt+0x531c>  // b.tstop
  409e00:	ldr	x9, [sp, #176]
  409e04:	add	x8, x8, x19
  409e08:	cmp	x9, x8
  409e0c:	b.ne	409e5c <wcrtomb@plt+0x531c>  // b.any
  409e10:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  409e14:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409e18:	ldr	x1, [x21, #3160]
  409e1c:	ldr	w0, [x8, #1872]
  409e20:	ldr	w2, [x9, #3764]
  409e24:	bl	4049f0 <openat@plt>
  409e28:	tbnz	w0, #31, 409f14 <wcrtomb@plt+0x53d4>
  409e2c:	mov	x1, x19
  409e30:	mov	w2, wzr
  409e34:	mov	w20, w0
  409e38:	bl	404120 <lseek@plt>
  409e3c:	tbnz	x0, #63, 409f20 <wcrtomb@plt+0x53e0>
  409e40:	adrp	x0, 40a000 <wcrtomb@plt+0x54c0>
  409e44:	add	x0, x0, #0x4bc
  409e48:	bl	40a3d4 <wcrtomb@plt+0x5894>
  409e4c:	b	409f34 <wcrtomb@plt+0x53f4>
  409e50:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409e54:	add	x1, x1, #0xc83
  409e58:	b	409e64 <wcrtomb@plt+0x5324>
  409e5c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409e60:	add	x1, x1, #0xccb
  409e64:	mov	w2, #0x5                   	// #5
  409e68:	mov	x0, xzr
  409e6c:	bl	404900 <dcgettext@plt>
  409e70:	mov	x1, x0
  409e74:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409e78:	add	x0, x0, #0xc50
  409e7c:	bl	409634 <wcrtomb@plt+0x4af4>
  409e80:	bl	418e14 <wcrtomb@plt+0x142d4>
  409e84:	add	sp, sp, #0x480
  409e88:	ldp	x20, x19, [sp, #64]
  409e8c:	ldp	x22, x21, [sp, #48]
  409e90:	ldp	x24, x23, [sp, #32]
  409e94:	ldr	x28, [sp, #16]
  409e98:	ldp	x29, x30, [sp], #80
  409e9c:	ret
  409ea0:	mov	x0, x19
  409ea4:	bl	42a86c <wcrtomb@plt+0x25d2c>
  409ea8:	bl	418e14 <wcrtomb@plt+0x142d4>
  409eac:	b	409ce0 <wcrtomb@plt+0x51a0>
  409eb0:	str	w19, [x20, #3560]
  409eb4:	b	409850 <wcrtomb@plt+0x4d10>
  409eb8:	adrp	x0, 40a000 <wcrtomb@plt+0x54c0>
  409ebc:	add	x0, x0, #0x4bc
  409ec0:	bl	40a3d4 <wcrtomb@plt+0x5894>
  409ec4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409ec8:	ldr	w8, [x8, #3612]
  409ecc:	cmp	w8, #0x1
  409ed0:	b.ne	409efc <wcrtomb@plt+0x53bc>  // b.any
  409ed4:	ldr	x8, [sp, #176]
  409ed8:	cbz	x8, 409efc <wcrtomb@plt+0x53bc>
  409edc:	ldp	x3, x4, [sp, #200]
  409ee0:	ldr	w0, [x20, #920]
  409ee4:	ldr	w1, [x21, #1872]
  409ee8:	mov	x2, x19
  409eec:	bl	41be5c <wcrtomb@plt+0x1731c>
  409ef0:	cbz	w0, 409efc <wcrtomb@plt+0x53bc>
  409ef4:	mov	x0, x19
  409ef8:	bl	42b3cc <wcrtomb@plt+0x2688c>
  409efc:	ldr	w0, [x20, #920]
  409f00:	bl	404520 <close@plt>
  409f04:	cbz	w0, 409e84 <wcrtomb@plt+0x5344>
  409f08:	mov	x0, x19
  409f0c:	bl	42a53c <wcrtomb@plt+0x259fc>
  409f10:	b	409e84 <wcrtomb@plt+0x5344>
  409f14:	ldr	x0, [x21, #3160]
  409f18:	bl	42a86c <wcrtomb@plt+0x25d2c>
  409f1c:	b	409b7c <wcrtomb@plt+0x503c>
  409f20:	ldr	x0, [x21, #3160]
  409f24:	mov	x1, x19
  409f28:	bl	42af0c <wcrtomb@plt+0x263cc>
  409f2c:	mov	w0, #0x1                   	// #1
  409f30:	bl	424364 <wcrtomb@plt+0x1f824>
  409f34:	mov	w0, w20
  409f38:	bl	404520 <close@plt>
  409f3c:	cbz	w0, 409e84 <wcrtomb@plt+0x5344>
  409f40:	ldr	x0, [x21, #3160]
  409f44:	b	409f0c <wcrtomb@plt+0x53cc>
  409f48:	sub	sp, sp, #0xa0
  409f4c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409f50:	str	x19, [sp, #144]
  409f54:	ldr	x19, [x8, #3160]
  409f58:	mov	x1, sp
  409f5c:	stp	x29, x30, [sp, #128]
  409f60:	add	x29, sp, #0x80
  409f64:	mov	x0, x19
  409f68:	bl	41bbd4 <wcrtomb@plt+0x17094>
  409f6c:	cbz	w0, 409f8c <wcrtomb@plt+0x544c>
  409f70:	bl	404a10 <__errno_location@plt>
  409f74:	ldr	w8, [x0]
  409f78:	mov	x0, x19
  409f7c:	cmp	w8, #0x2
  409f80:	b.ne	409fbc <wcrtomb@plt+0x547c>  // b.any
  409f84:	bl	42b1dc <wcrtomb@plt+0x2669c>
  409f88:	b	409fc0 <wcrtomb@plt+0x5480>
  409f8c:	ldr	w8, [sp, #16]
  409f90:	and	w9, w8, #0xf000
  409f94:	cmp	w9, #0x4, lsl #12
  409f98:	b.ne	409fcc <wcrtomb@plt+0x548c>  // b.any
  409f9c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409fa0:	ldr	w9, [x9, #3256]
  409fa4:	eor	w8, w9, w8
  409fa8:	tst	w8, #0xfff
  409fac:	b.eq	409ff0 <wcrtomb@plt+0x54b0>  // b.none
  409fb0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409fb4:	add	x1, x1, #0xc95
  409fb8:	b	409fd4 <wcrtomb@plt+0x5494>
  409fbc:	bl	42b158 <wcrtomb@plt+0x26618>
  409fc0:	mov	w0, #0x1                   	// #1
  409fc4:	bl	424364 <wcrtomb@plt+0x1f824>
  409fc8:	b	409ff0 <wcrtomb@plt+0x54b0>
  409fcc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  409fd0:	add	x1, x1, #0xc83
  409fd4:	mov	w2, #0x5                   	// #5
  409fd8:	mov	x0, xzr
  409fdc:	bl	404900 <dcgettext@plt>
  409fe0:	mov	x1, x0
  409fe4:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  409fe8:	add	x0, x0, #0xc50
  409fec:	bl	409634 <wcrtomb@plt+0x4af4>
  409ff0:	ldr	x19, [sp, #144]
  409ff4:	ldp	x29, x30, [sp, #128]
  409ff8:	add	sp, sp, #0xa0
  409ffc:	ret
  40a000:	sub	sp, sp, #0x80
  40a004:	stp	x29, x30, [sp, #32]
  40a008:	stp	x28, x27, [sp, #48]
  40a00c:	stp	x26, x25, [sp, #64]
  40a010:	stp	x24, x23, [sp, #80]
  40a014:	stp	x22, x21, [sp, #96]
  40a018:	stp	x20, x19, [sp, #112]
  40a01c:	add	x29, sp, #0x20
  40a020:	bl	42b650 <wcrtomb@plt+0x26b10>
  40a024:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a028:	tbz	w0, #0, 40a128 <wcrtomb@plt+0x55e8>
  40a02c:	ldr	x8, [x21, #4064]
  40a030:	cbz	x8, 40a038 <wcrtomb@plt+0x54f8>
  40a034:	blr	x8
  40a038:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40a03c:	add	x1, x1, #0xb80
  40a040:	mov	w2, #0x5                   	// #5
  40a044:	mov	x0, xzr
  40a048:	bl	404900 <dcgettext@plt>
  40a04c:	mov	x2, x0
  40a050:	mov	w0, wzr
  40a054:	mov	w1, wzr
  40a058:	bl	403fa0 <error@plt>
  40a05c:	mov	w19, #0x1                   	// #1
  40a060:	bl	427c98 <wcrtomb@plt+0x23158>
  40a064:	tbnz	w0, #0, 40a134 <wcrtomb@plt+0x55f4>
  40a068:	cbz	w19, 40a09c <wcrtomb@plt+0x555c>
  40a06c:	ldr	x8, [x21, #4064]
  40a070:	cbz	x8, 40a078 <wcrtomb@plt+0x5538>
  40a074:	blr	x8
  40a078:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40a07c:	add	x1, x1, #0xbe4
  40a080:	mov	w2, #0x5                   	// #5
  40a084:	mov	x0, xzr
  40a088:	bl	404900 <dcgettext@plt>
  40a08c:	mov	x2, x0
  40a090:	mov	w0, wzr
  40a094:	mov	w1, wzr
  40a098:	bl	403fa0 <error@plt>
  40a09c:	bl	414b3c <wcrtomb@plt+0xfffc>
  40a0a0:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a0a4:	ldr	x8, [x19, #912]
  40a0a8:	cbnz	x8, 40a0d0 <wcrtomb@plt+0x5590>
  40a0ac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a0b0:	ldr	x1, [x8, #3976]
  40a0b4:	add	x0, sp, #0x8
  40a0b8:	bl	41c554 <wcrtomb@plt+0x17a14>
  40a0bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a0c0:	ldr	x8, [x8, #3888]
  40a0c4:	str	x0, [x19, #912]
  40a0c8:	cbz	x8, 40a0d0 <wcrtomb@plt+0x5590>
  40a0cc:	bl	415e30 <wcrtomb@plt+0x112f0>
  40a0d0:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a0d4:	ldr	w0, [x19, #4032]
  40a0d8:	bl	4041f0 <fsync@plt>
  40a0dc:	ldr	w0, [x19, #4032]
  40a0e0:	mov	w1, #0x24b                 	// #587
  40a0e4:	bl	404af0 <ioctl@plt>
  40a0e8:	ldr	w0, [x19, #4032]
  40a0ec:	mov	w8, #0x2                   	// #2
  40a0f0:	mov	w9, #0x40000000            	// #1073741824
  40a0f4:	strh	w8, [sp, #8]
  40a0f8:	mov	w8, #0x1                   	// #1
  40a0fc:	cmp	w0, w9
  40a100:	str	w8, [sp, #12]
  40a104:	b.lt	40a170 <wcrtomb@plt+0x5630>  // b.tstop
  40a108:	mov	w8, #0xc0000000            	// #-1073741824
  40a10c:	mov	w1, #0x6d01                	// #27905
  40a110:	add	w0, w0, w8
  40a114:	add	x2, sp, #0x8
  40a118:	movk	w1, #0x4008, lsl #16
  40a11c:	bl	42c5a4 <wcrtomb@plt+0x27a64>
  40a120:	tbz	w0, #31, 40a224 <wcrtomb@plt+0x56e4>
  40a124:	b	40a184 <wcrtomb@plt+0x5644>
  40a128:	mov	w19, wzr
  40a12c:	bl	427c98 <wcrtomb@plt+0x23158>
  40a130:	tbz	w0, #0, 40a068 <wcrtomb@plt+0x5528>
  40a134:	ldr	x8, [x21, #4064]
  40a138:	cbz	x8, 40a140 <wcrtomb@plt+0x5600>
  40a13c:	blr	x8
  40a140:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40a144:	add	x1, x1, #0xbbb
  40a148:	mov	w2, #0x5                   	// #5
  40a14c:	mov	x0, xzr
  40a150:	bl	404900 <dcgettext@plt>
  40a154:	mov	x2, x0
  40a158:	mov	w0, wzr
  40a15c:	mov	w1, wzr
  40a160:	bl	403fa0 <error@plt>
  40a164:	ldr	x8, [x21, #4064]
  40a168:	cbnz	x8, 40a074 <wcrtomb@plt+0x5534>
  40a16c:	b	40a078 <wcrtomb@plt+0x5538>
  40a170:	mov	w1, #0x6d01                	// #27905
  40a174:	add	x2, sp, #0x8
  40a178:	movk	w1, #0x4008, lsl #16
  40a17c:	bl	404af0 <ioctl@plt>
  40a180:	tbz	w0, #31, 40a224 <wcrtomb@plt+0x56e4>
  40a184:	bl	404a10 <__errno_location@plt>
  40a188:	ldr	w8, [x0]
  40a18c:	cmp	w8, #0x5
  40a190:	b.ne	40a1d8 <wcrtomb@plt+0x5698>  // b.any
  40a194:	ldr	w0, [x19, #4032]
  40a198:	mov	w8, #0x40000000            	// #1073741824
  40a19c:	cmp	w0, w8
  40a1a0:	b.lt	40a1c4 <wcrtomb@plt+0x5684>  // b.tstop
  40a1a4:	mov	w8, #0xc0000000            	// #-1073741824
  40a1a8:	mov	w1, #0x6d01                	// #27905
  40a1ac:	add	w0, w0, w8
  40a1b0:	add	x2, sp, #0x8
  40a1b4:	movk	w1, #0x4008, lsl #16
  40a1b8:	bl	42c5a4 <wcrtomb@plt+0x27a64>
  40a1bc:	tbz	w0, #31, 40a224 <wcrtomb@plt+0x56e4>
  40a1c0:	b	40a1d8 <wcrtomb@plt+0x5698>
  40a1c4:	mov	w1, #0x6d01                	// #27905
  40a1c8:	add	x2, sp, #0x8
  40a1cc:	movk	w1, #0x4008, lsl #16
  40a1d0:	bl	404af0 <ioctl@plt>
  40a1d4:	tbz	w0, #31, 40a224 <wcrtomb@plt+0x56e4>
  40a1d8:	ldr	w0, [x19, #4032]
  40a1dc:	mov	w8, #0x40000000            	// #1073741824
  40a1e0:	cmp	w0, w8
  40a1e4:	b.lt	40a214 <wcrtomb@plt+0x56d4>  // b.tstop
  40a1e8:	mov	w8, #0xc0000000            	// #-1073741824
  40a1ec:	add	w0, w0, w8
  40a1f0:	mov	x1, xzr
  40a1f4:	mov	w2, wzr
  40a1f8:	bl	42c3b4 <wcrtomb@plt+0x27874>
  40a1fc:	cbz	x0, 40a224 <wcrtomb@plt+0x56e4>
  40a200:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a204:	ldr	x8, [x8, #3744]
  40a208:	ldr	x0, [x8]
  40a20c:	bl	42afa8 <wcrtomb@plt+0x26468>
  40a210:	b	40a3b4 <wcrtomb@plt+0x5874>
  40a214:	mov	x1, xzr
  40a218:	mov	w2, wzr
  40a21c:	bl	404120 <lseek@plt>
  40a220:	cbnz	x0, 40a200 <wcrtomb@plt+0x56c0>
  40a224:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a228:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a22c:	mov	w8, #0x1                   	// #1
  40a230:	str	wzr, [x9, #2920]
  40a234:	strb	w8, [x10, #2984]
  40a238:	bl	405858 <wcrtomb@plt+0xd18>
  40a23c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a240:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a244:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40a248:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a24c:	add	x19, x19, #0xbd8
  40a250:	add	x20, x20, #0xc50
  40a254:	add	x22, x22, #0xc3f
  40a258:	adrp	x28, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a25c:	mov	w23, #0x2                   	// #2
  40a260:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a264:	add	x24, x24, #0xbc0
  40a268:	b	40a288 <wcrtomb@plt+0x5748>
  40a26c:	mov	w3, #0x1                   	// #1
  40a270:	mov	x1, x20
  40a274:	mov	x2, x24
  40a278:	bl	4189fc <wcrtomb@plt+0x13ebc>
  40a27c:	bl	40970c <wcrtomb@plt+0x4bcc>
  40a280:	mov	x0, x20
  40a284:	bl	424420 <wcrtomb@plt+0x1f8e0>
  40a288:	mov	x0, x19
  40a28c:	mov	x1, x20
  40a290:	mov	w2, wzr
  40a294:	bl	418578 <wcrtomb@plt+0x13a38>
  40a298:	mov	w25, w0
  40a29c:	cmp	w0, #0x5
  40a2a0:	b.ne	40a310 <wcrtomb@plt+0x57d0>  // b.any
  40a2a4:	mov	x26, xzr
  40a2a8:	ldr	x0, [x19]
  40a2ac:	bl	405670 <wcrtomb@plt+0xb30>
  40a2b0:	mov	x0, x19
  40a2b4:	mov	x1, x20
  40a2b8:	mov	w2, wzr
  40a2bc:	bl	418578 <wcrtomb@plt+0x13a38>
  40a2c0:	cmp	w0, #0x5
  40a2c4:	add	x26, x26, #0x1
  40a2c8:	b.eq	40a2a8 <wcrtomb@plt+0x5768>  // b.none
  40a2cc:	ldr	x8, [x21, #4064]
  40a2d0:	mov	w25, w0
  40a2d4:	cbz	x8, 40a2dc <wcrtomb@plt+0x579c>
  40a2d8:	blr	x8
  40a2dc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40a2e0:	mov	w4, #0x5                   	// #5
  40a2e4:	mov	x0, xzr
  40a2e8:	add	x1, x1, #0xc14
  40a2ec:	mov	x2, x22
  40a2f0:	mov	x3, x26
  40a2f4:	bl	404820 <dcngettext@plt>
  40a2f8:	mov	x2, x0
  40a2fc:	mov	w0, wzr
  40a300:	mov	w1, wzr
  40a304:	mov	w3, w26
  40a308:	bl	403fa0 <error@plt>
  40a30c:	str	w23, [x28, #2416]
  40a310:	cmp	w25, #0x4
  40a314:	b.eq	40a3a0 <wcrtomb@plt+0x5860>  // b.none
  40a318:	ldr	x0, [x27, #3032]
  40a31c:	cmp	w25, #0x3
  40a320:	b.ne	40a26c <wcrtomb@plt+0x572c>  // b.any
  40a324:	bl	405670 <wcrtomb@plt+0xb30>
  40a328:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a32c:	ldrb	w8, [x8, #3133]
  40a330:	cbnz	w8, 40a288 <wcrtomb@plt+0x5748>
  40a334:	mov	x0, x19
  40a338:	mov	x1, x20
  40a33c:	mov	w2, wzr
  40a340:	bl	418578 <wcrtomb@plt+0x13a38>
  40a344:	cmp	w0, #0x3
  40a348:	b.eq	40a3a0 <wcrtomb@plt+0x5860>  // b.none
  40a34c:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40a350:	ldrb	w8, [x8, #3720]
  40a354:	tbz	w8, #0, 40a288 <wcrtomb@plt+0x5748>
  40a358:	ldr	x8, [x21, #4064]
  40a35c:	cbz	x8, 40a364 <wcrtomb@plt+0x5824>
  40a360:	blr	x8
  40a364:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40a368:	mov	w2, #0x5                   	// #5
  40a36c:	mov	x0, xzr
  40a370:	add	x1, x1, #0xc6b
  40a374:	bl	404900 <dcgettext@plt>
  40a378:	mov	x25, x0
  40a37c:	bl	4052f0 <wcrtomb@plt+0x7b0>
  40a380:	add	x1, sp, #0x8
  40a384:	bl	43d080 <argp_parse@@Base+0x57d4>
  40a388:	mov	x3, x0
  40a38c:	mov	w0, wzr
  40a390:	mov	w1, wzr
  40a394:	mov	x2, x25
  40a398:	bl	403fa0 <error@plt>
  40a39c:	b	40a288 <wcrtomb@plt+0x5748>
  40a3a0:	mov	w8, #0x1                   	// #1
  40a3a4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a3a8:	str	w8, [x9, #2920]
  40a3ac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a3b0:	strb	wzr, [x8, #2984]
  40a3b4:	ldp	x20, x19, [sp, #112]
  40a3b8:	ldp	x22, x21, [sp, #96]
  40a3bc:	ldp	x24, x23, [sp, #80]
  40a3c0:	ldp	x26, x25, [sp, #64]
  40a3c4:	ldp	x28, x27, [sp, #48]
  40a3c8:	ldp	x29, x30, [sp, #32]
  40a3cc:	add	sp, sp, #0x80
  40a3d0:	ret
  40a3d4:	stp	x29, x30, [sp, #-64]!
  40a3d8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a3dc:	stp	x22, x21, [sp, #32]
  40a3e0:	stp	x20, x19, [sp, #48]
  40a3e4:	add	x8, x8, #0xc50
  40a3e8:	ldr	x19, [x8, #136]
  40a3ec:	mov	x20, x0
  40a3f0:	mov	x0, x8
  40a3f4:	str	x23, [sp, #16]
  40a3f8:	mov	x29, sp
  40a3fc:	bl	404cf8 <wcrtomb@plt+0x1b8>
  40a400:	cbz	x19, 40a454 <wcrtomb@plt+0x5914>
  40a404:	adrp	x23, 40a000 <wcrtomb@plt+0x54c0>
  40a408:	add	x23, x23, #0x5ac
  40a40c:	bl	40535c <wcrtomb@plt+0x81c>
  40a410:	cbz	x0, 40a468 <wcrtomb@plt+0x5928>
  40a414:	mov	x21, x0
  40a418:	bl	4056b4 <wcrtomb@plt+0xb74>
  40a41c:	cmp	x0, x19
  40a420:	csel	x22, x19, x0, hi  // hi = pmore
  40a424:	mov	x0, x22
  40a428:	mov	x1, x21
  40a42c:	blr	x20
  40a430:	add	x8, x21, x22
  40a434:	cmp	w0, #0x0
  40a438:	sub	x0, x8, #0x1
  40a43c:	csel	x20, x23, x20, eq  // eq = none
  40a440:	bl	405670 <wcrtomb@plt+0xb30>
  40a444:	sub	x19, x19, x22
  40a448:	mov	x0, x19
  40a44c:	bl	404de4 <wcrtomb@plt+0x2a4>
  40a450:	cbnz	x19, 40a40c <wcrtomb@plt+0x58cc>
  40a454:	ldp	x20, x19, [sp, #48]
  40a458:	ldp	x22, x21, [sp, #32]
  40a45c:	ldr	x23, [sp, #16]
  40a460:	ldp	x29, x30, [sp], #64
  40a464:	b	404d84 <wcrtomb@plt+0x244>
  40a468:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a46c:	ldr	x8, [x8, #4064]
  40a470:	cbz	x8, 40a478 <wcrtomb@plt+0x5938>
  40a474:	blr	x8
  40a478:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40a47c:	add	x1, x1, #0xcd8
  40a480:	mov	w2, #0x5                   	// #5
  40a484:	mov	x0, xzr
  40a488:	bl	404900 <dcgettext@plt>
  40a48c:	mov	x2, x0
  40a490:	mov	w0, wzr
  40a494:	mov	w1, wzr
  40a498:	bl	403fa0 <error@plt>
  40a49c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a4a0:	mov	w9, #0x2                   	// #2
  40a4a4:	str	w9, [x8, #2416]
  40a4a8:	ldp	x20, x19, [sp, #48]
  40a4ac:	ldp	x22, x21, [sp, #32]
  40a4b0:	ldr	x23, [sp, #16]
  40a4b4:	ldp	x29, x30, [sp], #64
  40a4b8:	ret
  40a4bc:	stp	x29, x30, [sp, #-48]!
  40a4c0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a4c4:	stp	x22, x21, [sp, #16]
  40a4c8:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a4cc:	ldr	w8, [x8, #920]
  40a4d0:	mov	x21, x1
  40a4d4:	ldr	x1, [x22, #912]
  40a4d8:	stp	x20, x19, [sp, #32]
  40a4dc:	mov	x19, x0
  40a4e0:	mov	w0, w8
  40a4e4:	mov	x2, x19
  40a4e8:	mov	x29, sp
  40a4ec:	bl	41bd20 <wcrtomb@plt+0x171e0>
  40a4f0:	cmp	x0, x19
  40a4f4:	b.ne	40a534 <wcrtomb@plt+0x59f4>  // b.any
  40a4f8:	ldr	x1, [x22, #912]
  40a4fc:	mov	x0, x21
  40a500:	mov	x2, x19
  40a504:	bl	404440 <bcmp@plt>
  40a508:	cbz	w0, 40a57c <wcrtomb@plt+0x5a3c>
  40a50c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40a510:	add	x1, x1, #0xd33
  40a514:	mov	w2, #0x5                   	// #5
  40a518:	mov	x0, xzr
  40a51c:	bl	404900 <dcgettext@plt>
  40a520:	mov	x1, x0
  40a524:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a528:	add	x0, x0, #0xc50
  40a52c:	bl	409634 <wcrtomb@plt+0x4af4>
  40a530:	b	40a598 <wcrtomb@plt+0x5a58>
  40a534:	mov	x20, x0
  40a538:	cmn	x0, #0x1
  40a53c:	b.eq	40a584 <wcrtomb@plt+0x5a44>  // b.none
  40a540:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40a544:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40a548:	add	x1, x1, #0xcf2
  40a54c:	add	x2, x2, #0xd12
  40a550:	mov	w4, #0x5                   	// #5
  40a554:	mov	x0, xzr
  40a558:	mov	x3, x19
  40a55c:	bl	404820 <dcngettext@plt>
  40a560:	mov	x1, x0
  40a564:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a568:	add	x0, x0, #0xc50
  40a56c:	mov	x2, x20
  40a570:	mov	x3, x19
  40a574:	bl	409634 <wcrtomb@plt+0x4af4>
  40a578:	b	40a598 <wcrtomb@plt+0x5a58>
  40a57c:	mov	w0, #0x1                   	// #1
  40a580:	b	40a59c <wcrtomb@plt+0x5a5c>
  40a584:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a588:	ldr	x0, [x8, #3160]
  40a58c:	bl	42a97c <wcrtomb@plt+0x25e3c>
  40a590:	mov	w0, #0x1                   	// #1
  40a594:	bl	424364 <wcrtomb@plt+0x1f824>
  40a598:	mov	w0, wzr
  40a59c:	ldp	x20, x19, [sp, #32]
  40a5a0:	ldp	x22, x21, [sp, #16]
  40a5a4:	ldp	x29, x30, [sp], #48
  40a5a8:	ret
  40a5ac:	mov	w0, #0x1                   	// #1
  40a5b0:	ret
  40a5b4:	stp	x29, x30, [sp, #-64]!
  40a5b8:	stp	x22, x21, [sp, #32]
  40a5bc:	mov	x21, x0
  40a5c0:	mov	w0, #0x28                  	// #40
  40a5c4:	str	x23, [sp, #16]
  40a5c8:	stp	x20, x19, [sp, #48]
  40a5cc:	mov	x29, sp
  40a5d0:	mov	x19, x2
  40a5d4:	mov	w20, w1
  40a5d8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  40a5dc:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a5e0:	ldr	x8, [x23, #928]
  40a5e4:	mov	x22, x0
  40a5e8:	str	x21, [x0]
  40a5ec:	str	w20, [x0, #16]
  40a5f0:	stp	x19, x8, [x0, #24]
  40a5f4:	mov	x0, x21
  40a5f8:	bl	403f40 <strlen@plt>
  40a5fc:	str	x0, [x22, #8]
  40a600:	str	x22, [x23, #928]
  40a604:	ldp	x20, x19, [sp, #48]
  40a608:	ldp	x22, x21, [sp, #32]
  40a60c:	ldr	x23, [sp, #16]
  40a610:	ldp	x29, x30, [sp], #64
  40a614:	ret
  40a618:	stp	x29, x30, [sp, #-48]!
  40a61c:	stp	x22, x21, [sp, #16]
  40a620:	stp	x20, x19, [sp, #32]
  40a624:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a628:	ldr	w8, [x8, #3700]
  40a62c:	mov	x29, sp
  40a630:	cbz	w8, 40a640 <wcrtomb@plt+0x5b00>
  40a634:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40a638:	ldrb	w8, [x8, #3720]
  40a63c:	tbnz	w8, #2, 40a650 <wcrtomb@plt+0x5b10>
  40a640:	ldp	x20, x19, [sp, #32]
  40a644:	ldp	x22, x21, [sp, #16]
  40a648:	ldp	x29, x30, [sp], #48
  40a64c:	ret
  40a650:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a654:	ldr	x8, [x8, #4064]
  40a658:	mov	x19, x2
  40a65c:	mov	x20, x1
  40a660:	mov	x21, x0
  40a664:	cbz	x8, 40a66c <wcrtomb@plt+0x5b2c>
  40a668:	blr	x8
  40a66c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40a670:	add	x1, x1, #0xda2
  40a674:	mov	w2, #0x5                   	// #5
  40a678:	mov	x0, xzr
  40a67c:	bl	404900 <dcgettext@plt>
  40a680:	mov	x22, x0
  40a684:	mov	x0, x21
  40a688:	bl	444778 <argp_parse@@Base+0xcecc>
  40a68c:	mov	x21, x0
  40a690:	mov	w0, #0x1                   	// #1
  40a694:	mov	x1, x20
  40a698:	bl	44438c <argp_parse@@Base+0xcae0>
  40a69c:	mov	x2, x22
  40a6a0:	mov	x3, x21
  40a6a4:	mov	x5, x19
  40a6a8:	ldp	x20, x19, [sp, #32]
  40a6ac:	ldp	x22, x21, [sp, #16]
  40a6b0:	mov	x4, x0
  40a6b4:	mov	w0, wzr
  40a6b8:	mov	w1, wzr
  40a6bc:	ldp	x29, x30, [sp], #48
  40a6c0:	b	403fa0 <error@plt>
  40a6c4:	stp	x29, x30, [sp, #-64]!
  40a6c8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a6cc:	stp	x24, x23, [sp, #16]
  40a6d0:	ldr	x23, [x8, #928]
  40a6d4:	stp	x22, x21, [sp, #32]
  40a6d8:	stp	x20, x19, [sp, #48]
  40a6dc:	mov	x29, sp
  40a6e0:	cbz	x23, 40a748 <wcrtomb@plt+0x5c08>
  40a6e4:	mov	x19, x1
  40a6e8:	mov	x20, x0
  40a6ec:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a6f0:	b	40a6fc <wcrtomb@plt+0x5bbc>
  40a6f4:	ldr	x23, [x23, #32]
  40a6f8:	cbz	x23, 40a748 <wcrtomb@plt+0x5c08>
  40a6fc:	ldr	x1, [x23]
  40a700:	ldr	w2, [x24, #3764]
  40a704:	mov	x0, x20
  40a708:	bl	40a770 <wcrtomb@plt+0x5c30>
  40a70c:	tbnz	w0, #31, 40a6f4 <wcrtomb@plt+0x5bb4>
  40a710:	ldr	x8, [x23, #24]
  40a714:	mov	w21, w0
  40a718:	cbz	x8, 40a760 <wcrtomb@plt+0x5c20>
  40a71c:	mov	w0, w21
  40a720:	blr	x8
  40a724:	mov	w22, w0
  40a728:	mov	w0, w21
  40a72c:	bl	404520 <close@plt>
  40a730:	tbz	w22, #0, 40a6f4 <wcrtomb@plt+0x5bb4>
  40a734:	cbz	x19, 40a740 <wcrtomb@plt+0x5c00>
  40a738:	ldr	x8, [x23]
  40a73c:	str	x8, [x19]
  40a740:	ldr	w0, [x23, #16]
  40a744:	b	40a74c <wcrtomb@plt+0x5c0c>
  40a748:	mov	w0, wzr
  40a74c:	ldp	x20, x19, [sp, #48]
  40a750:	ldp	x22, x21, [sp, #32]
  40a754:	ldp	x24, x23, [sp, #16]
  40a758:	ldp	x29, x30, [sp], #64
  40a75c:	ret
  40a760:	mov	w0, w21
  40a764:	bl	404520 <close@plt>
  40a768:	cbnz	x19, 40a738 <wcrtomb@plt+0x5bf8>
  40a76c:	b	40a740 <wcrtomb@plt+0x5c00>
  40a770:	stp	x29, x30, [sp, #-64]!
  40a774:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a778:	ldrb	w9, [x8, #952]
  40a77c:	stp	x22, x21, [sp, #32]
  40a780:	stp	x20, x19, [sp, #48]
  40a784:	mov	w19, w2
  40a788:	mov	x20, x1
  40a78c:	mov	x21, x0
  40a790:	stp	x24, x23, [sp, #16]
  40a794:	mov	x29, sp
  40a798:	tbnz	w9, #0, 40a7c0 <wcrtomb@plt+0x5c80>
  40a79c:	mov	w9, #0x1                   	// #1
  40a7a0:	mov	w0, #0x2                   	// #2
  40a7a4:	strb	w9, [x8, #952]
  40a7a8:	bl	404510 <strerror@plt>
  40a7ac:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  40a7b0:	add	x1, x1, #0x66
  40a7b4:	mov	w2, #0x5                   	// #5
  40a7b8:	mov	x0, xzr
  40a7bc:	bl	404900 <dcgettext@plt>
  40a7c0:	adrp	x9, 477000 <_obstack_memory_used@@Base+0x304b0>
  40a7c4:	add	x8, x21, #0x198
  40a7c8:	add	x9, x9, #0x750
  40a7cc:	cmp	x21, #0x0
  40a7d0:	csel	x24, x9, x8, eq  // eq = none
  40a7d4:	ldr	w0, [x24]
  40a7d8:	mov	x1, x20
  40a7dc:	mov	w2, w19
  40a7e0:	bl	4049f0 <openat@plt>
  40a7e4:	mov	w22, w0
  40a7e8:	tbz	w0, #31, 40a868 <wcrtomb@plt+0x5d28>
  40a7ec:	bl	404a10 <__errno_location@plt>
  40a7f0:	mov	x23, x0
  40a7f4:	cbz	x21, 40a868 <wcrtomb@plt+0x5d28>
  40a7f8:	ldr	w8, [x23]
  40a7fc:	cmp	w8, #0x18
  40a800:	b.ne	40a868 <wcrtomb@plt+0x5d28>  // b.any
  40a804:	ldr	x8, [x21, #392]
  40a808:	cbz	x8, 40a868 <wcrtomb@plt+0x5d28>
  40a80c:	ldr	x0, [x8, #392]
  40a810:	cbnz	x0, 40a820 <wcrtomb@plt+0x5ce0>
  40a814:	b	40a860 <wcrtomb@plt+0x5d20>
  40a818:	mov	x0, x8
  40a81c:	cbz	x8, 40a860 <wcrtomb@plt+0x5d20>
  40a820:	ldr	w9, [x0, #408]
  40a824:	ldr	x8, [x0, #392]
  40a828:	cmp	w9, #0x1
  40a82c:	b.lt	40a818 <wcrtomb@plt+0x5cd8>  // b.tstop
  40a830:	cbz	x8, 40a840 <wcrtomb@plt+0x5d00>
  40a834:	ldr	w9, [x8, #408]
  40a838:	cmp	w9, #0x1
  40a83c:	b.ge	40a818 <wcrtomb@plt+0x5cd8>  // b.tcont
  40a840:	bl	4243bc <wcrtomb@plt+0x1f87c>
  40a844:	ldr	w0, [x24]
  40a848:	mov	x1, x20
  40a84c:	mov	w2, w19
  40a850:	bl	4049f0 <openat@plt>
  40a854:	mov	w22, w0
  40a858:	tbnz	w0, #31, 40a7f4 <wcrtomb@plt+0x5cb4>
  40a85c:	b	40a868 <wcrtomb@plt+0x5d28>
  40a860:	mov	w8, #0x18                  	// #24
  40a864:	str	w8, [x23]
  40a868:	mov	w0, w22
  40a86c:	ldp	x20, x19, [sp, #48]
  40a870:	ldp	x22, x21, [sp, #32]
  40a874:	ldp	x24, x23, [sp, #16]
  40a878:	ldp	x29, x30, [sp], #64
  40a87c:	ret
  40a880:	sub	sp, sp, #0x40
  40a884:	add	x1, sp, #0x4
  40a888:	mov	w2, #0x2b                  	// #43
  40a88c:	stp	x29, x30, [sp, #48]
  40a890:	add	x29, sp, #0x30
  40a894:	bl	404880 <read@plt>
  40a898:	cmp	x0, #0x2b
  40a89c:	b.ne	40a950 <wcrtomb@plt+0x5e10>  // b.any
  40a8a0:	mov	x8, #0x6953                	// #26963
  40a8a4:	ldur	x9, [sp, #4]
  40a8a8:	movk	x8, #0x6e67, lsl #16
  40a8ac:	movk	x8, #0x7461, lsl #32
  40a8b0:	movk	x8, #0x7275, lsl #48
  40a8b4:	ldur	x10, [sp, #12]
  40a8b8:	mov	x11, #0x3a65                	// #14949
  40a8bc:	ldur	x14, [sp, #28]
  40a8c0:	eor	x8, x9, x8
  40a8c4:	mov	x9, #0x3731                	// #14129
  40a8c8:	movk	x11, #0x3820, lsl #16
  40a8cc:	movk	x9, #0x3732, lsl #16
  40a8d0:	movk	x11, #0x3461, lsl #32
  40a8d4:	movk	x9, #0x3938, lsl #32
  40a8d8:	movk	x11, #0x3737, lsl #48
  40a8dc:	movk	x9, #0x3066, lsl #48
  40a8e0:	mov	x12, #0x3566                	// #13670
  40a8e4:	ldur	x13, [sp, #20]
  40a8e8:	eor	x10, x10, x11
  40a8ec:	ldur	x11, [sp, #36]
  40a8f0:	eor	x9, x14, x9
  40a8f4:	mov	x14, #0x3836                	// #14390
  40a8f8:	movk	x12, #0x3739, lsl #16
  40a8fc:	movk	x14, #0x3638, lsl #16
  40a900:	movk	x12, #0x3264, lsl #32
  40a904:	movk	x14, #0x3038, lsl #32
  40a908:	movk	x12, #0x6438, lsl #48
  40a90c:	movk	x14, #0x6236, lsl #48
  40a910:	eor	x12, x13, x12
  40a914:	ldur	x13, [sp, #39]
  40a918:	eor	x11, x11, x14
  40a91c:	mov	x14, #0x3836                	// #14390
  40a920:	movk	x14, #0x3630, lsl #16
  40a924:	movk	x14, #0x6362, lsl #32
  40a928:	movk	x14, #0x3535, lsl #48
  40a92c:	eor	x13, x13, x14
  40a930:	orr	x8, x8, x10
  40a934:	orr	x9, x12, x9
  40a938:	orr	x10, x11, x13
  40a93c:	orr	x8, x8, x9
  40a940:	orr	x8, x8, x10
  40a944:	cmp	x8, #0x0
  40a948:	cset	w0, eq  // eq = none
  40a94c:	b	40a954 <wcrtomb@plt+0x5e14>
  40a950:	mov	w0, wzr
  40a954:	ldp	x29, x30, [sp, #48]
  40a958:	add	sp, sp, #0x40
  40a95c:	ret
  40a960:	mov	x8, x0
  40a964:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40a968:	mov	x5, x2
  40a96c:	lsr	x0, x0, #63
  40a970:	add	x6, x6, #0xdf8
  40a974:	mov	w2, #0x8                   	// #8
  40a978:	mov	x4, x1
  40a97c:	mov	x1, x8
  40a980:	mov	x3, xzr
  40a984:	b	40a988 <wcrtomb@plt+0x5e48>
  40a988:	sub	sp, sp, #0xd0
  40a98c:	stp	x22, x21, [sp, #176]
  40a990:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40a994:	ldr	w8, [x22, #3872]
  40a998:	stp	x28, x27, [sp, #128]
  40a99c:	stp	x26, x25, [sp, #144]
  40a9a0:	stp	x24, x23, [sp, #160]
  40a9a4:	stp	x20, x19, [sp, #192]
  40a9a8:	mov	x21, x6
  40a9ac:	mov	x19, x5
  40a9b0:	mov	x20, x4
  40a9b4:	mov	x25, x3
  40a9b8:	mov	x23, x1
  40a9bc:	mov	w27, w0
  40a9c0:	stp	x29, x30, [sp, #112]
  40a9c4:	add	x29, sp, #0x70
  40a9c8:	cbnz	w0, 40a9ec <wcrtomb@plt+0x5eac>
  40a9cc:	sub	x9, x19, #0x1
  40a9d0:	mov	x10, #0xffffffffffffffff    	// #-1
  40a9d4:	add	x11, x9, x9, lsl #1
  40a9d8:	lsl	x12, x10, x11
  40a9dc:	cmp	x11, #0x40
  40a9e0:	csinv	x10, x10, x12, cs  // cs = hs, nlast
  40a9e4:	cmp	x10, x23
  40a9e8:	b.cs	40ac34 <wcrtomb@plt+0x60f4>  // b.hs, b.nlast
  40a9ec:	orr	w26, w8, #0x4
  40a9f0:	cmp	w26, #0x6
  40a9f4:	b.ne	40aa50 <wcrtomb@plt+0x5f10>  // b.any
  40a9f8:	sub	x24, x19, #0x1
  40a9fc:	cmp	w27, #0x0
  40aa00:	mov	x8, #0xffffffffffffffff    	// #-1
  40aa04:	lsl	x10, x24, #3
  40aa08:	cinv	x9, x23, ne  // ne = any
  40aa0c:	lsl	x11, x8, x10
  40aa10:	cmp	x10, #0x40
  40aa14:	csinv	x8, x8, x11, cs  // cs = hs, nlast
  40aa18:	cmp	x9, x8
  40aa1c:	b.ls	40ac08 <wcrtomb@plt+0x60c8>  // b.plast
  40aa20:	cbz	w27, 40aa34 <wcrtomb@plt+0x5ef4>
  40aa24:	lsl	x28, x2, #3
  40aa28:	add	x8, x24, x24, lsl #1
  40aa2c:	cmp	x28, x8
  40aa30:	b.ls	40ac5c <wcrtomb@plt+0x611c>  // b.plast
  40aa34:	lsl	x8, x19, #3
  40aa38:	sub	x8, x8, #0x8
  40aa3c:	cmp	x8, #0x3f
  40aa40:	mov	x28, #0xffffffffffffffff    	// #-1
  40aa44:	str	x2, [sp]
  40aa48:	b.ls	40aa6c <wcrtomb@plt+0x5f2c>  // b.plast
  40aa4c:	b	40aa74 <wcrtomb@plt+0x5f34>
  40aa50:	add	x8, x19, x19, lsl #1
  40aa54:	sub	x8, x8, #0x3
  40aa58:	cmp	x8, #0x3f
  40aa5c:	mov	x28, #0xffffffffffffffff    	// #-1
  40aa60:	mov	x25, xzr
  40aa64:	str	x2, [sp]
  40aa68:	b.hi	40aa74 <wcrtomb@plt+0x5f34>  // b.pmore
  40aa6c:	lsl	x8, x28, x8
  40aa70:	mvn	x28, x8
  40aa74:	sub	x1, x29, #0x30
  40aa78:	mov	x0, x28
  40aa7c:	bl	43d080 <argp_parse@@Base+0x57d4>
  40aa80:	cmp	w26, #0x6
  40aa84:	mov	x24, x0
  40aa88:	b.ne	40ab90 <wcrtomb@plt+0x6050>  // b.any
  40aa8c:	adds	x8, x28, #0x1
  40aa90:	lsr	x9, x28, #1
  40aa94:	add	x10, sp, #0x28
  40aa98:	csinc	x0, x8, x9, cc  // cc = lo, ul, last
  40aa9c:	orr	x1, x10, #0x1
  40aaa0:	bl	43d080 <argp_parse@@Base+0x57d4>
  40aaa4:	mov	x26, x0
  40aaa8:	mov	w8, #0x2d                  	// #45
  40aaac:	strb	w8, [x26, #-1]!
  40aab0:	cbz	w27, 40ab9c <wcrtomb@plt+0x605c>
  40aab4:	sub	x8, x29, #0x18
  40aab8:	neg	x0, x23
  40aabc:	orr	x1, x8, #0x1
  40aac0:	bl	43d080 <argp_parse@@Base+0x57d4>
  40aac4:	mov	x23, x0
  40aac8:	mov	w8, #0x2d                  	// #45
  40aacc:	strb	w8, [x23, #-1]!
  40aad0:	cbz	x25, 40abb0 <wcrtomb@plt+0x6070>
  40aad4:	add	x0, sp, #0x24
  40aad8:	blr	x25
  40aadc:	ldr	w8, [x22, #3872]
  40aae0:	ldr	w10, [sp, #36]
  40aae4:	and	x9, x0, x28
  40aae8:	add	x11, sp, #0xc
  40aaec:	cmp	w8, #0x6
  40aaf0:	cset	w8, eq  // eq = none
  40aaf4:	tst	w10, w8
  40aaf8:	cneg	x25, x9, ne  // ne = any
  40aafc:	and	w12, w10, w8
  40ab00:	orr	x1, x11, #0x1
  40ab04:	mov	x0, x25
  40ab08:	str	w12, [sp, #36]
  40ab0c:	bl	43d080 <argp_parse@@Base+0x57d4>
  40ab10:	ldr	w8, [sp, #36]
  40ab14:	mov	x27, x0
  40ab18:	cbz	w8, 40ab24 <wcrtomb@plt+0x5fe4>
  40ab1c:	mov	w8, #0x2d                  	// #45
  40ab20:	strb	w8, [x27, #-1]!
  40ab24:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ab28:	ldr	x8, [x8, #4064]
  40ab2c:	cbz	x8, 40ab34 <wcrtomb@plt+0x5ff4>
  40ab30:	blr	x8
  40ab34:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40ab38:	add	x1, x1, #0xea8
  40ab3c:	mov	w2, #0x5                   	// #5
  40ab40:	mov	x0, xzr
  40ab44:	bl	404900 <dcgettext@plt>
  40ab48:	mov	x2, x0
  40ab4c:	mov	w0, wzr
  40ab50:	mov	w1, wzr
  40ab54:	mov	x3, x23
  40ab58:	mov	x4, x21
  40ab5c:	mov	x5, x26
  40ab60:	mov	x6, x24
  40ab64:	mov	x7, x27
  40ab68:	bl	403fa0 <error@plt>
  40ab6c:	ldr	w0, [sp, #36]
  40ab70:	ldr	x2, [sp]
  40ab74:	mov	x1, x25
  40ab78:	mov	x3, xzr
  40ab7c:	mov	x4, x20
  40ab80:	mov	x5, x19
  40ab84:	mov	x6, x21
  40ab88:	bl	40a988 <wcrtomb@plt+0x5e48>
  40ab8c:	b	40ace0 <wcrtomb@plt+0x61a0>
  40ab90:	adrp	x26, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  40ab94:	add	x26, x26, #0x3e8
  40ab98:	cbnz	w27, 40aab4 <wcrtomb@plt+0x5f74>
  40ab9c:	sub	x1, x29, #0x18
  40aba0:	mov	x0, x23
  40aba4:	bl	43d080 <argp_parse@@Base+0x57d4>
  40aba8:	mov	x23, x0
  40abac:	cbnz	x25, 40aad4 <wcrtomb@plt+0x5f94>
  40abb0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40abb4:	ldr	x8, [x8, #4064]
  40abb8:	cbz	x8, 40abc0 <wcrtomb@plt+0x6080>
  40abbc:	blr	x8
  40abc0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40abc4:	add	x1, x1, #0xed9
  40abc8:	mov	w2, #0x5                   	// #5
  40abcc:	mov	x0, xzr
  40abd0:	bl	404900 <dcgettext@plt>
  40abd4:	mov	x2, x0
  40abd8:	mov	w0, wzr
  40abdc:	mov	w1, wzr
  40abe0:	mov	x3, x23
  40abe4:	mov	x4, x21
  40abe8:	mov	x5, x26
  40abec:	mov	x6, x24
  40abf0:	bl	403fa0 <error@plt>
  40abf4:	mov	w0, wzr
  40abf8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40abfc:	mov	w9, #0x2                   	// #2
  40ac00:	str	w9, [x8, #2416]
  40ac04:	b	40ace0 <wcrtomb@plt+0x61a0>
  40ac08:	cmp	w27, #0x0
  40ac0c:	mov	w8, #0xffffff80            	// #-128
  40ac10:	neg	w9, w27
  40ac14:	csinv	w8, w8, wzr, eq  // eq = none
  40ac18:	strb	w8, [x20]
  40ac1c:	lsl	x8, x9, #56
  40ac20:	strb	w23, [x20, x24]
  40ac24:	subs	x24, x24, #0x1
  40ac28:	orr	x23, x8, x23, lsr #8
  40ac2c:	b.ne	40ac20 <wcrtomb@plt+0x60e0>  // b.any
  40ac30:	b	40acdc <wcrtomb@plt+0x619c>
  40ac34:	sub	x8, x20, #0x2
  40ac38:	strb	wzr, [x20, x9]
  40ac3c:	mov	w9, #0x30                  	// #48
  40ac40:	bfxil	w9, w23, #0, #3
  40ac44:	strb	w9, [x8, x19]
  40ac48:	sub	x19, x19, #0x1
  40ac4c:	cmp	x19, #0x1
  40ac50:	lsr	x23, x23, #3
  40ac54:	b.ne	40ac3c <wcrtomb@plt+0x60fc>  // b.any
  40ac58:	b	40acdc <wcrtomb@plt+0x619c>
  40ac5c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ac60:	ldrb	w9, [x8, #956]
  40ac64:	tbnz	w9, #0, 40aca4 <wcrtomb@plt+0x6164>
  40ac68:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ac6c:	ldr	x9, [x9, #4064]
  40ac70:	mov	w10, #0x1                   	// #1
  40ac74:	strb	w10, [x8, #956]
  40ac78:	cbz	x9, 40ac80 <wcrtomb@plt+0x6140>
  40ac7c:	blr	x9
  40ac80:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40ac84:	add	x1, x1, #0xe86
  40ac88:	mov	w2, #0x5                   	// #5
  40ac8c:	mov	x0, xzr
  40ac90:	bl	404900 <dcgettext@plt>
  40ac94:	mov	x2, x0
  40ac98:	mov	w0, wzr
  40ac9c:	mov	w1, wzr
  40aca0:	bl	403fa0 <error@plt>
  40aca4:	mov	x8, #0xffffffffffffffff    	// #-1
  40aca8:	cmp	x28, #0x40
  40acac:	lsl	x9, x8, x28
  40acb0:	csinv	x8, x8, x9, cs  // cs = hs, nlast
  40acb4:	and	x8, x8, x23
  40acb8:	sub	x9, x20, #0x2
  40acbc:	strb	wzr, [x20, x24]
  40acc0:	mov	w10, #0x30                  	// #48
  40acc4:	bfxil	w10, w8, #0, #3
  40acc8:	strb	w10, [x9, x19]
  40accc:	sub	x19, x19, #0x1
  40acd0:	cmp	x19, #0x1
  40acd4:	lsr	x8, x8, #3
  40acd8:	b.ne	40acc0 <wcrtomb@plt+0x6180>  // b.any
  40acdc:	mov	w0, #0x1                   	// #1
  40ace0:	ldp	x20, x19, [sp, #192]
  40ace4:	ldp	x22, x21, [sp, #176]
  40ace8:	ldp	x24, x23, [sp, #160]
  40acec:	ldp	x26, x25, [sp, #144]
  40acf0:	ldp	x28, x27, [sp, #128]
  40acf4:	ldp	x29, x30, [sp, #112]
  40acf8:	and	w0, w0, #0x1
  40acfc:	add	sp, sp, #0xd0
  40ad00:	ret
  40ad04:	mov	x8, x0
  40ad08:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40ad0c:	mov	x5, x2
  40ad10:	lsr	x0, x0, #63
  40ad14:	add	x6, x6, #0xdfe
  40ad18:	mov	w2, #0x8                   	// #8
  40ad1c:	mov	x4, x1
  40ad20:	mov	x1, x8
  40ad24:	mov	x3, xzr
  40ad28:	b	40a988 <wcrtomb@plt+0x5e48>
  40ad2c:	stp	x29, x30, [sp, #-32]!
  40ad30:	str	x19, [sp, #16]
  40ad34:	mov	x29, sp
  40ad38:	bl	40535c <wcrtomb@plt+0x81c>
  40ad3c:	movi	v0.2d, #0x0
  40ad40:	stp	q0, q0, [x0]
  40ad44:	stp	q0, q0, [x0, #32]
  40ad48:	stp	q0, q0, [x0, #64]
  40ad4c:	stp	q0, q0, [x0, #96]
  40ad50:	stp	q0, q0, [x0, #128]
  40ad54:	stp	q0, q0, [x0, #160]
  40ad58:	stp	q0, q0, [x0, #192]
  40ad5c:	stp	q0, q0, [x0, #224]
  40ad60:	stp	q0, q0, [x0, #256]
  40ad64:	stp	q0, q0, [x0, #288]
  40ad68:	stp	q0, q0, [x0, #320]
  40ad6c:	stp	q0, q0, [x0, #352]
  40ad70:	stp	q0, q0, [x0, #384]
  40ad74:	stp	q0, q0, [x0, #416]
  40ad78:	stp	q0, q0, [x0, #448]
  40ad7c:	stp	q0, q0, [x0, #480]
  40ad80:	bl	405670 <wcrtomb@plt+0xb30>
  40ad84:	bl	40535c <wcrtomb@plt+0x81c>
  40ad88:	mov	x19, x0
  40ad8c:	bl	4056b4 <wcrtomb@plt+0xb74>
  40ad90:	mov	x2, x0
  40ad94:	mov	x0, x19
  40ad98:	mov	w1, wzr
  40ad9c:	bl	404360 <memset@plt>
  40ada0:	mov	x0, x19
  40ada4:	ldr	x19, [sp, #16]
  40ada8:	ldp	x29, x30, [sp], #32
  40adac:	b	405670 <wcrtomb@plt+0xb30>
  40adb0:	stp	x29, x30, [sp, #-48]!
  40adb4:	stp	x22, x21, [sp, #16]
  40adb8:	stp	x20, x19, [sp, #32]
  40adbc:	mov	x29, sp
  40adc0:	mov	x20, x2
  40adc4:	mov	x21, x1
  40adc8:	mov	x22, x0
  40adcc:	bl	40535c <wcrtomb@plt+0x81c>
  40add0:	mov	x19, x0
  40add4:	mov	x8, xzr
  40add8:	movi	v0.2d, #0x0
  40addc:	stp	q0, q0, [x0]
  40ade0:	stp	q0, q0, [x0, #32]
  40ade4:	stp	q0, q0, [x0, #64]
  40ade8:	stp	q0, q0, [x0, #96]
  40adec:	stp	q0, q0, [x0, #128]
  40adf0:	stp	q0, q0, [x0, #160]
  40adf4:	stp	q0, q0, [x0, #192]
  40adf8:	stp	q0, q0, [x0, #224]
  40adfc:	stp	q0, q0, [x0, #256]
  40ae00:	stp	q0, q0, [x0, #288]
  40ae04:	stp	q0, q0, [x0, #320]
  40ae08:	stp	q0, q0, [x0, #352]
  40ae0c:	stp	q0, q0, [x0, #384]
  40ae10:	stp	q0, q0, [x0, #416]
  40ae14:	stp	q0, q0, [x0, #448]
  40ae18:	stp	q0, q0, [x0, #480]
  40ae1c:	ldrb	w9, [x22, x8]
  40ae20:	cmp	x8, #0x62
  40ae24:	strb	w9, [x19, x8]
  40ae28:	b.hi	40ae34 <wcrtomb@plt+0x62f4>  // b.pmore
  40ae2c:	add	x8, x8, #0x1
  40ae30:	cbnz	w9, 40ae1c <wcrtomb@plt+0x62dc>
  40ae34:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ae38:	ldr	w8, [x22, #3872]
  40ae3c:	cmp	w8, #0x2
  40ae40:	b.ne	40ae48 <wcrtomb@plt+0x6308>  // b.any
  40ae44:	strb	wzr, [x19, #99]
  40ae48:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40ae4c:	add	x4, x19, #0x7c
  40ae50:	lsr	x0, x21, #63
  40ae54:	add	x6, x6, #0xdf8
  40ae58:	mov	w2, #0x8                   	// #8
  40ae5c:	mov	w5, #0xc                   	// #12
  40ae60:	mov	x1, x21
  40ae64:	mov	x3, xzr
  40ae68:	bl	40a988 <wcrtomb@plt+0x5e48>
  40ae6c:	mov	x8, #0x1ffffffff           	// #8589934591
  40ae70:	cmp	x20, x8
  40ae74:	csel	x8, x20, x8, cc  // cc = lo, ul, last
  40ae78:	cmp	x20, #0x0
  40ae7c:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40ae80:	csel	x1, xzr, x8, lt  // lt = tstop
  40ae84:	add	x4, x19, #0x88
  40ae88:	add	x6, x6, #0xdfe
  40ae8c:	mov	w2, #0x8                   	// #8
  40ae90:	mov	w5, #0xc                   	// #12
  40ae94:	mov	w0, wzr
  40ae98:	mov	x3, xzr
  40ae9c:	bl	40a988 <wcrtomb@plt+0x5e48>
  40aea0:	ldr	w8, [x22, #3872]
  40aea4:	add	x4, x19, #0x64
  40aea8:	sub	w8, w8, #0x3
  40aeac:	cmp	w8, #0x3
  40aeb0:	b.hi	40aec4 <wcrtomb@plt+0x6384>  // b.pmore
  40aeb4:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40aeb8:	add	x9, x9, #0x138
  40aebc:	ldr	x1, [x9, w8, sxtw #3]
  40aec0:	b	40aec8 <wcrtomb@plt+0x6388>
  40aec4:	mov	w1, #0x81a4                	// #33188
  40aec8:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40aecc:	add	x6, x6, #0xef9
  40aed0:	mov	w2, #0x4                   	// #4
  40aed4:	mov	w5, #0x8                   	// #8
  40aed8:	mov	w0, wzr
  40aedc:	mov	x3, xzr
  40aee0:	bl	40a988 <wcrtomb@plt+0x5e48>
  40aee4:	adrp	x3, 40c000 <wcrtomb@plt+0x74c0>
  40aee8:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40aeec:	add	x4, x19, #0x6c
  40aef0:	add	x3, x3, #0xfec
  40aef4:	add	x6, x6, #0xf00
  40aef8:	mov	w2, #0x4                   	// #4
  40aefc:	mov	w5, #0x8                   	// #8
  40af00:	mov	w0, wzr
  40af04:	mov	x1, xzr
  40af08:	bl	40a988 <wcrtomb@plt+0x5e48>
  40af0c:	adrp	x3, 40d000 <wcrtomb@plt+0x84c0>
  40af10:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40af14:	add	x4, x19, #0x74
  40af18:	add	x3, x3, #0x44
  40af1c:	add	x6, x6, #0xf0d
  40af20:	mov	w2, #0x4                   	// #4
  40af24:	mov	w5, #0x8                   	// #8
  40af28:	mov	w0, wzr
  40af2c:	mov	x1, xzr
  40af30:	bl	40a988 <wcrtomb@plt+0x5e48>
  40af34:	mov	x9, #0x7375                	// #29557
  40af38:	movk	x9, #0x6174, lsl #16
  40af3c:	movk	x9, #0x72, lsl #32
  40af40:	add	x8, x19, #0x101
  40af44:	movk	x9, #0x3030, lsl #48
  40af48:	str	x9, [x8]
  40af4c:	mov	x0, x19
  40af50:	ldp	x20, x19, [sp, #32]
  40af54:	ldp	x22, x21, [sp, #16]
  40af58:	ldp	x29, x30, [sp], #48
  40af5c:	ret
  40af60:	stp	x29, x30, [sp, #-64]!
  40af64:	str	x28, [sp, #16]
  40af68:	stp	x22, x21, [sp, #32]
  40af6c:	stp	x20, x19, [sp, #48]
  40af70:	mov	x29, sp
  40af74:	sub	sp, sp, #0x200
  40af78:	ldr	x8, [x1, #360]
  40af7c:	mov	x20, x2
  40af80:	cbnz	x8, 40b028 <wcrtomb@plt+0x64e8>
  40af84:	add	x19, x1, #0x158
  40af88:	ldr	x8, [x19]
  40af8c:	mov	x21, x1
  40af90:	cbz	x8, 40b028 <wcrtomb@plt+0x64e8>
  40af94:	mov	w22, w0
  40af98:	mov	x0, x19
  40af9c:	bl	4121dc <wcrtomb@plt+0xd69c>
  40afa0:	mov	x0, sp
  40afa4:	mov	w2, #0x200                 	// #512
  40afa8:	mov	x1, x20
  40afac:	bl	403ec0 <memcpy@plt>
  40afb0:	tbz	w22, #0, 40afcc <wcrtomb@plt+0x648c>
  40afb4:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40afb8:	add	x22, x22, #0xeb8
  40afbc:	mov	w21, #0x67                  	// #103
  40afc0:	bl	411ec4 <wcrtomb@plt+0xd384>
  40afc4:	mov	x20, x0
  40afc8:	b	40aff8 <wcrtomb@plt+0x64b8>
  40afcc:	mov	x0, x21
  40afd0:	bl	411e78 <wcrtomb@plt+0xd338>
  40afd4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40afd8:	ldr	w8, [x8, #3112]
  40afdc:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40afe0:	add	x9, x21, #0xb0
  40afe4:	add	x10, x10, #0xf08
  40afe8:	cmp	w8, #0x0
  40afec:	mov	x20, x0
  40aff0:	csel	x22, x9, x10, eq  // eq = none
  40aff4:	mov	w21, #0x78                  	// #120
  40aff8:	ldr	x2, [x22]
  40affc:	mov	w0, w21
  40b000:	mov	x1, x20
  40b004:	mov	x3, x19
  40b008:	bl	411f5c <wcrtomb@plt+0xd41c>
  40b00c:	mov	x0, x20
  40b010:	bl	404700 <free@plt>
  40b014:	bl	40535c <wcrtomb@plt+0x81c>
  40b018:	mov	x1, sp
  40b01c:	mov	w2, #0x200                 	// #512
  40b020:	mov	x20, x0
  40b024:	bl	403ec0 <memcpy@plt>
  40b028:	mov	x0, x20
  40b02c:	add	sp, sp, #0x200
  40b030:	ldp	x20, x19, [sp, #48]
  40b034:	ldp	x22, x21, [sp, #32]
  40b038:	ldr	x28, [sp, #16]
  40b03c:	ldp	x29, x30, [sp], #64
  40b040:	ret
  40b044:	sub	sp, sp, #0x60
  40b048:	stp	x24, x23, [sp, #48]
  40b04c:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40b050:	stp	x20, x19, [sp, #80]
  40b054:	ldr	w20, [x24, #3872]
  40b058:	stp	x29, x30, [sp, #32]
  40b05c:	add	x29, sp, #0x20
  40b060:	mov	x19, x0
  40b064:	cmp	w20, #0x4
  40b068:	stp	x22, x21, [sp, #64]
  40b06c:	stur	xzr, [x29, #-8]
  40b070:	str	xzr, [sp, #16]
  40b074:	b.ne	40b088 <wcrtomb@plt+0x6548>  // b.any
  40b078:	ldr	x0, [x19, #8]
  40b07c:	bl	428878 <wcrtomb@plt+0x23d38>
  40b080:	tbz	w0, #0, 40b150 <wcrtomb@plt+0x6610>
  40b084:	ldr	w20, [x24, #3872]
  40b088:	ldr	x21, [x19, #8]
  40b08c:	cmp	w20, #0x2
  40b090:	mov	w8, #0x63                  	// #99
  40b094:	cinc	x22, x8, ne  // ne = any
  40b098:	mov	x0, x21
  40b09c:	bl	403f40 <strlen@plt>
  40b0a0:	cmp	x22, x0
  40b0a4:	b.cs	40b0e0 <wcrtomb@plt+0x65a0>  // b.hs, b.nlast
  40b0a8:	sub	w8, w20, #0x1
  40b0ac:	cmp	w8, #0x5
  40b0b0:	b.hi	40bb40 <wcrtomb@plt+0x7000>  // b.pmore
  40b0b4:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b0b8:	add	x9, x9, #0xd7e
  40b0bc:	adr	x10, 40b0cc <wcrtomb@plt+0x658c>
  40b0c0:	ldrb	w11, [x9, x8]
  40b0c4:	add	x10, x10, x11, lsl #2
  40b0c8:	br	x10
  40b0cc:	mov	w2, #0x4c                  	// #76
  40b0d0:	mov	x0, x19
  40b0d4:	mov	x1, x21
  40b0d8:	bl	40d09c <wcrtomb@plt+0x855c>
  40b0dc:	b	40b294 <wcrtomb@plt+0x6754>
  40b0e0:	bl	40535c <wcrtomb@plt+0x81c>
  40b0e4:	movi	v0.2d, #0x0
  40b0e8:	stp	q0, q0, [x0]
  40b0ec:	stp	q0, q0, [x0, #32]
  40b0f0:	stp	q0, q0, [x0, #64]
  40b0f4:	stp	q0, q0, [x0, #96]
  40b0f8:	stp	q0, q0, [x0, #128]
  40b0fc:	stp	q0, q0, [x0, #160]
  40b100:	stp	q0, q0, [x0, #192]
  40b104:	stp	q0, q0, [x0, #224]
  40b108:	stp	q0, q0, [x0, #256]
  40b10c:	stp	q0, q0, [x0, #288]
  40b110:	stp	q0, q0, [x0, #320]
  40b114:	stp	q0, q0, [x0, #352]
  40b118:	stp	q0, q0, [x0, #384]
  40b11c:	stp	q0, q0, [x0, #416]
  40b120:	stp	q0, q0, [x0, #448]
  40b124:	stp	q0, q0, [x0, #480]
  40b128:	ldr	x8, [x19, #8]
  40b12c:	mov	x20, x0
  40b130:	mov	x9, xzr
  40b134:	ldrb	w10, [x8, x9]
  40b138:	cmp	x9, #0x62
  40b13c:	strb	w10, [x20, x9]
  40b140:	b.hi	40b300 <wcrtomb@plt+0x67c0>  // b.pmore
  40b144:	add	x9, x9, #0x1
  40b148:	cbnz	w10, 40b134 <wcrtomb@plt+0x65f4>
  40b14c:	b	40b300 <wcrtomb@plt+0x67c0>
  40b150:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40b154:	add	x0, x0, #0xe8
  40b158:	mov	x1, x19
  40b15c:	mov	x2, xzr
  40b160:	bl	412c84 <wcrtomb@plt+0xe144>
  40b164:	bl	40535c <wcrtomb@plt+0x81c>
  40b168:	movi	v0.2d, #0x0
  40b16c:	stp	q0, q0, [x0]
  40b170:	stp	q0, q0, [x0, #32]
  40b174:	stp	q0, q0, [x0, #64]
  40b178:	stp	q0, q0, [x0, #96]
  40b17c:	stp	q0, q0, [x0, #128]
  40b180:	stp	q0, q0, [x0, #160]
  40b184:	stp	q0, q0, [x0, #192]
  40b188:	stp	q0, q0, [x0, #224]
  40b18c:	stp	q0, q0, [x0, #256]
  40b190:	stp	q0, q0, [x0, #288]
  40b194:	stp	q0, q0, [x0, #320]
  40b198:	stp	q0, q0, [x0, #352]
  40b19c:	stp	q0, q0, [x0, #384]
  40b1a0:	stp	q0, q0, [x0, #416]
  40b1a4:	stp	q0, q0, [x0, #448]
  40b1a8:	stp	q0, q0, [x0, #480]
  40b1ac:	ldr	x8, [x19, #8]
  40b1b0:	mov	x20, x0
  40b1b4:	mov	x9, xzr
  40b1b8:	ldrb	w10, [x8, x9]
  40b1bc:	cmp	x9, #0x62
  40b1c0:	strb	w10, [x20, x9]
  40b1c4:	b.hi	40b300 <wcrtomb@plt+0x67c0>  // b.pmore
  40b1c8:	add	x9, x9, #0x1
  40b1cc:	cbnz	w10, 40b1b8 <wcrtomb@plt+0x6678>
  40b1d0:	b	40b300 <wcrtomb@plt+0x67c0>
  40b1d4:	cmp	x0, #0x101
  40b1d8:	b.cc	40b218 <wcrtomb@plt+0x66d8>  // b.lo, b.ul, b.last
  40b1dc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40b1e0:	ldr	x8, [x8, #4064]
  40b1e4:	cbz	x8, 40b1ec <wcrtomb@plt+0x66ac>
  40b1e8:	blr	x8
  40b1ec:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b1f0:	add	x1, x1, #0xf13
  40b1f4:	mov	w2, #0x5                   	// #5
  40b1f8:	mov	x0, xzr
  40b1fc:	bl	404900 <dcgettext@plt>
  40b200:	mov	x19, x0
  40b204:	mov	x0, x21
  40b208:	bl	444778 <argp_parse@@Base+0xcecc>
  40b20c:	mov	x3, x0
  40b210:	mov	w4, #0x100                 	// #256
  40b214:	b	40b26c <wcrtomb@plt+0x672c>
  40b218:	cmp	x0, #0x9c
  40b21c:	b.ls	40b508 <wcrtomb@plt+0x69c8>  // b.plast
  40b220:	mov	w8, #0x9c                  	// #156
  40b224:	b	40b518 <wcrtomb@plt+0x69d8>
  40b228:	cmp	x0, #0x64
  40b22c:	b.cc	40b294 <wcrtomb@plt+0x6754>  // b.lo, b.ul, b.last
  40b230:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40b234:	ldr	x8, [x8, #4064]
  40b238:	cbz	x8, 40b240 <wcrtomb@plt+0x6700>
  40b23c:	blr	x8
  40b240:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b244:	add	x1, x1, #0xf13
  40b248:	mov	w2, #0x5                   	// #5
  40b24c:	mov	x0, xzr
  40b250:	bl	404900 <dcgettext@plt>
  40b254:	ldr	x8, [x19, #8]
  40b258:	mov	x19, x0
  40b25c:	mov	x0, x8
  40b260:	bl	444778 <argp_parse@@Base+0xcecc>
  40b264:	mov	x3, x0
  40b268:	mov	w4, #0x63                  	// #99
  40b26c:	mov	w0, wzr
  40b270:	mov	w1, wzr
  40b274:	mov	x2, x19
  40b278:	bl	403fa0 <error@plt>
  40b27c:	b	40b588 <wcrtomb@plt+0x6a48>
  40b280:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40b284:	add	x0, x0, #0xe8
  40b288:	mov	x1, x19
  40b28c:	mov	x2, xzr
  40b290:	bl	412c84 <wcrtomb@plt+0xe144>
  40b294:	bl	40535c <wcrtomb@plt+0x81c>
  40b298:	movi	v0.2d, #0x0
  40b29c:	stp	q0, q0, [x0]
  40b2a0:	stp	q0, q0, [x0, #32]
  40b2a4:	stp	q0, q0, [x0, #64]
  40b2a8:	stp	q0, q0, [x0, #96]
  40b2ac:	stp	q0, q0, [x0, #128]
  40b2b0:	stp	q0, q0, [x0, #160]
  40b2b4:	stp	q0, q0, [x0, #192]
  40b2b8:	stp	q0, q0, [x0, #224]
  40b2bc:	stp	q0, q0, [x0, #256]
  40b2c0:	stp	q0, q0, [x0, #288]
  40b2c4:	stp	q0, q0, [x0, #320]
  40b2c8:	stp	q0, q0, [x0, #352]
  40b2cc:	stp	q0, q0, [x0, #384]
  40b2d0:	stp	q0, q0, [x0, #416]
  40b2d4:	stp	q0, q0, [x0, #448]
  40b2d8:	stp	q0, q0, [x0, #480]
  40b2dc:	ldr	x8, [x19, #8]
  40b2e0:	mov	x20, x0
  40b2e4:	mov	x9, xzr
  40b2e8:	ldrb	w10, [x8, x9]
  40b2ec:	cmp	x9, #0x62
  40b2f0:	strb	w10, [x20, x9]
  40b2f4:	b.hi	40b300 <wcrtomb@plt+0x67c0>  // b.pmore
  40b2f8:	add	x9, x9, #0x1
  40b2fc:	cbnz	w10, 40b2e8 <wcrtomb@plt+0x67a8>
  40b300:	ldr	w8, [x24, #3872]
  40b304:	cmp	w8, #0x2
  40b308:	b.ne	40b310 <wcrtomb@plt+0x67d0>  // b.any
  40b30c:	strb	wzr, [x20, #99]
  40b310:	mov	x22, x19
  40b314:	ldr	w0, [x22, #112]!
  40b318:	sub	x2, x29, #0x8
  40b31c:	mov	x1, x22
  40b320:	bl	41a770 <wcrtomb@plt+0x15c30>
  40b324:	mov	x21, x19
  40b328:	ldr	w0, [x21, #116]!
  40b32c:	add	x2, sp, #0x10
  40b330:	mov	x1, x21
  40b334:	bl	41a854 <wcrtomb@plt+0x15d14>
  40b338:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40b33c:	ldr	x3, [x8, #3656]
  40b340:	ldur	w0, [x21, #-12]
  40b344:	cbz	x3, 40b370 <wcrtomb@plt+0x6830>
  40b348:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40b34c:	ldr	w2, [x8, #3136]
  40b350:	and	w8, w0, #0xf000
  40b354:	cmp	w8, #0x4, lsl #12
  40b358:	cset	w1, eq  // eq = none
  40b35c:	mov	x4, xzr
  40b360:	and	w23, w0, #0xfffff000
  40b364:	bl	43d8bc <argp_parse@@Base+0x6010>
  40b368:	orr	w0, w0, w23
  40b36c:	str	w0, [x19, #104]
  40b370:	ldr	w8, [x24, #3872]
  40b374:	orr	w9, w8, #0x2
  40b378:	cmp	w9, #0x3
  40b37c:	b.ne	40b38c <wcrtomb@plt+0x684c>  // b.any
  40b380:	and	w0, w0, #0xfff
  40b384:	add	x4, x20, #0x64
  40b388:	b	40b3b0 <wcrtomb@plt+0x6870>
  40b38c:	cmp	w8, #0x6
  40b390:	add	x4, x20, #0x64
  40b394:	b.hi	40b3b0 <wcrtomb@plt+0x6870>  // b.pmore
  40b398:	mov	w9, #0x1                   	// #1
  40b39c:	lsl	w8, w9, w8
  40b3a0:	mov	w9, #0x58                  	// #88
  40b3a4:	tst	w8, w9
  40b3a8:	b.eq	40b3b0 <wcrtomb@plt+0x6870>  // b.none
  40b3ac:	and	w0, w0, #0xfff
  40b3b0:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b3b4:	mov	w1, w0
  40b3b8:	add	x6, x6, #0xef9
  40b3bc:	mov	w2, #0x4                   	// #4
  40b3c0:	mov	w5, #0x8                   	// #8
  40b3c4:	mov	w0, wzr
  40b3c8:	mov	x3, xzr
  40b3cc:	bl	40a988 <wcrtomb@plt+0x5e48>
  40b3d0:	ldr	w8, [x22]
  40b3d4:	cmp	w8, #0x200, lsl #12
  40b3d8:	b.cc	40b400 <wcrtomb@plt+0x68c0>  // b.lo, b.ul, b.last
  40b3dc:	ldr	w9, [x24, #3872]
  40b3e0:	cmp	w9, #0x4
  40b3e4:	b.ne	40b400 <wcrtomb@plt+0x68c0>  // b.any
  40b3e8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b3ec:	add	x0, x0, #0xe05
  40b3f0:	mov	x1, x19
  40b3f4:	mov	x2, xzr
  40b3f8:	bl	412c84 <wcrtomb@plt+0xe144>
  40b3fc:	mov	w8, wzr
  40b400:	adrp	x3, 40c000 <wcrtomb@plt+0x74c0>
  40b404:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b408:	add	x4, x20, #0x6c
  40b40c:	mov	w1, w8
  40b410:	add	x3, x3, #0xfec
  40b414:	add	x6, x6, #0xf00
  40b418:	mov	w2, #0x4                   	// #4
  40b41c:	mov	w5, #0x8                   	// #8
  40b420:	mov	w0, wzr
  40b424:	bl	40a988 <wcrtomb@plt+0x5e48>
  40b428:	tbz	w0, #0, 40b644 <wcrtomb@plt+0x6b04>
  40b42c:	ldr	w8, [x21]
  40b430:	cmp	w8, #0x200, lsl #12
  40b434:	b.cc	40b45c <wcrtomb@plt+0x691c>  // b.lo, b.ul, b.last
  40b438:	ldr	w9, [x24, #3872]
  40b43c:	cmp	w9, #0x4
  40b440:	b.ne	40b45c <wcrtomb@plt+0x691c>  // b.any
  40b444:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b448:	add	x0, x0, #0xe09
  40b44c:	mov	x1, x19
  40b450:	mov	x2, xzr
  40b454:	bl	412c84 <wcrtomb@plt+0xe144>
  40b458:	mov	w8, wzr
  40b45c:	adrp	x3, 40d000 <wcrtomb@plt+0x84c0>
  40b460:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b464:	add	x4, x20, #0x74
  40b468:	mov	w1, w8
  40b46c:	add	x3, x3, #0x44
  40b470:	add	x6, x6, #0xf0d
  40b474:	mov	w2, #0x4                   	// #4
  40b478:	mov	w5, #0x8                   	// #8
  40b47c:	mov	w0, wzr
  40b480:	bl	40a988 <wcrtomb@plt+0x5e48>
  40b484:	tbz	w0, #0, 40b644 <wcrtomb@plt+0x6b04>
  40b488:	ldr	x1, [x19, #136]
  40b48c:	lsr	x8, x1, #33
  40b490:	cbz	x8, 40b4b8 <wcrtomb@plt+0x6978>
  40b494:	ldr	w8, [x24, #3872]
  40b498:	cmp	w8, #0x4
  40b49c:	b.ne	40b4b8 <wcrtomb@plt+0x6978>  // b.any
  40b4a0:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  40b4a4:	add	x0, x0, #0x38c
  40b4a8:	mov	x1, x19
  40b4ac:	mov	x2, xzr
  40b4b0:	bl	412c84 <wcrtomb@plt+0xe144>
  40b4b4:	mov	x1, xzr
  40b4b8:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b4bc:	add	x4, x20, #0x7c
  40b4c0:	lsr	x0, x1, #63
  40b4c4:	add	x6, x6, #0xdf8
  40b4c8:	mov	w2, #0x8                   	// #8
  40b4cc:	mov	w5, #0xc                   	// #12
  40b4d0:	mov	x3, xzr
  40b4d4:	bl	40a988 <wcrtomb@plt+0x5e48>
  40b4d8:	mov	w8, w0
  40b4dc:	mov	x0, xzr
  40b4e0:	tbz	w8, #0, 40b648 <wcrtomb@plt+0x6b08>
  40b4e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40b4e8:	ldr	w8, [x8, #3112]
  40b4ec:	cmp	w8, #0x2
  40b4f0:	b.eq	40b5a8 <wcrtomb@plt+0x6a68>  // b.none
  40b4f4:	cmp	w8, #0x1
  40b4f8:	b.eq	40b59c <wcrtomb@plt+0x6a5c>  // b.none
  40b4fc:	cbnz	w8, 40b680 <wcrtomb@plt+0x6b40>
  40b500:	ldur	q0, [x19, #232]
  40b504:	b	40b67c <wcrtomb@plt+0x6b3c>
  40b508:	sub	x8, x0, #0x1
  40b50c:	ldrb	w9, [x21, x8]
  40b510:	cmp	w9, #0x2f
  40b514:	csel	x8, x8, x0, eq  // eq = none
  40b518:	subs	x22, x8, #0x1
  40b51c:	b.eq	40b544 <wcrtomb@plt+0x6a04>  // b.none
  40b520:	add	x8, x21, x8
  40b524:	ldurb	w8, [x8, #-1]
  40b528:	cmp	w8, #0x2f
  40b52c:	mov	x8, x22
  40b530:	b.ne	40b518 <wcrtomb@plt+0x69d8>  // b.any
  40b534:	sub	x8, x0, x22
  40b538:	sub	x9, x8, #0x2
  40b53c:	cmp	x9, #0x64
  40b540:	b.cc	40b5cc <wcrtomb@plt+0x6a8c>  // b.lo, b.ul, b.last
  40b544:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40b548:	ldr	x8, [x8, #4064]
  40b54c:	cbz	x8, 40b554 <wcrtomb@plt+0x6a14>
  40b550:	blr	x8
  40b554:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b558:	add	x1, x1, #0xf42
  40b55c:	mov	w2, #0x5                   	// #5
  40b560:	mov	x0, xzr
  40b564:	bl	404900 <dcgettext@plt>
  40b568:	mov	x19, x0
  40b56c:	mov	x0, x21
  40b570:	bl	444778 <argp_parse@@Base+0xcecc>
  40b574:	mov	x3, x0
  40b578:	mov	w0, wzr
  40b57c:	mov	w1, wzr
  40b580:	mov	x2, x19
  40b584:	bl	403fa0 <error@plt>
  40b588:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40b58c:	mov	w9, #0x2                   	// #2
  40b590:	mov	x0, xzr
  40b594:	str	w9, [x8, #2416]
  40b598:	b	40b648 <wcrtomb@plt+0x6b08>
  40b59c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40b5a0:	add	x8, x8, #0xf08
  40b5a4:	b	40b5c4 <wcrtomb@plt+0x6a84>
  40b5a8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40b5ac:	mov	x8, x19
  40b5b0:	add	x9, x9, #0xf08
  40b5b4:	ldr	x10, [x8, #232]!
  40b5b8:	ldr	x11, [x9]
  40b5bc:	cmp	x10, x11
  40b5c0:	b.ge	40b660 <wcrtomb@plt+0x6b20>  // b.tcont
  40b5c4:	ldr	q0, [x8]
  40b5c8:	b	40b67c <wcrtomb@plt+0x6b3c>
  40b5cc:	sub	x23, x8, #0x1
  40b5d0:	bl	40535c <wcrtomb@plt+0x81c>
  40b5d4:	movi	v0.2d, #0x0
  40b5d8:	mov	x20, x0
  40b5dc:	stp	q0, q0, [x0]
  40b5e0:	stp	q0, q0, [x0, #32]
  40b5e4:	stp	q0, q0, [x0, #64]
  40b5e8:	stp	q0, q0, [x0, #96]
  40b5ec:	stp	q0, q0, [x0, #128]
  40b5f0:	stp	q0, q0, [x0, #160]
  40b5f4:	stp	q0, q0, [x0, #192]
  40b5f8:	stp	q0, q0, [x0, #224]
  40b5fc:	stp	q0, q0, [x0, #256]
  40b600:	stp	q0, q0, [x0, #288]
  40b604:	stp	q0, q0, [x0, #320]
  40b608:	stp	q0, q0, [x0, #352]
  40b60c:	stp	q0, q0, [x0, #384]
  40b610:	stp	q0, q0, [x0, #416]
  40b614:	stp	q0, q0, [x0, #448]
  40b618:	stp	q0, q0, [x0, #480]
  40b61c:	add	x0, x0, #0x159
  40b620:	mov	x1, x21
  40b624:	mov	x2, x22
  40b628:	bl	403ec0 <memcpy@plt>
  40b62c:	add	x8, x21, x22
  40b630:	add	x1, x8, #0x1
  40b634:	mov	x0, x20
  40b638:	mov	x2, x23
  40b63c:	bl	403ec0 <memcpy@plt>
  40b640:	cbnz	x20, 40b310 <wcrtomb@plt+0x67d0>
  40b644:	mov	x0, xzr
  40b648:	ldp	x20, x19, [sp, #80]
  40b64c:	ldp	x22, x21, [sp, #64]
  40b650:	ldp	x24, x23, [sp, #48]
  40b654:	ldp	x29, x30, [sp, #32]
  40b658:	add	sp, sp, #0x60
  40b65c:	ret
  40b660:	b.gt	40b678 <wcrtomb@plt+0x6b38>
  40b664:	ldr	x10, [x8, #8]
  40b668:	ldr	x11, [x9, #8]
  40b66c:	sub	w10, w10, w11
  40b670:	cmp	w10, #0x1
  40b674:	b.lt	40b5c4 <wcrtomb@plt+0x6a84>  // b.tstop
  40b678:	ldr	q0, [x9]
  40b67c:	str	q0, [sp]
  40b680:	ldr	w8, [x24, #3872]
  40b684:	ldr	x1, [sp]
  40b688:	cmp	w8, #0x4
  40b68c:	b.ne	40b6c8 <wcrtomb@plt+0x6b88>  // b.any
  40b690:	lsr	x8, x1, #33
  40b694:	cbnz	x8, 40b6a0 <wcrtomb@plt+0x6b60>
  40b698:	ldr	x8, [sp, #8]
  40b69c:	cbz	x8, 40b6c8 <wcrtomb@plt+0x6b88>
  40b6a0:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  40b6a4:	add	x0, x0, #0x912
  40b6a8:	mov	x2, sp
  40b6ac:	mov	x1, x19
  40b6b0:	bl	412c84 <wcrtomb@plt+0xe144>
  40b6b4:	ldr	x1, [sp]
  40b6b8:	lsr	x8, x1, #33
  40b6bc:	cbz	x8, 40b6c8 <wcrtomb@plt+0x6b88>
  40b6c0:	mov	x1, xzr
  40b6c4:	str	xzr, [sp]
  40b6c8:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b6cc:	add	x4, x20, #0x88
  40b6d0:	lsr	x0, x1, #63
  40b6d4:	add	x6, x6, #0xdfe
  40b6d8:	mov	w2, #0x8                   	// #8
  40b6dc:	mov	w5, #0xc                   	// #12
  40b6e0:	mov	x3, xzr
  40b6e4:	bl	40a988 <wcrtomb@plt+0x5e48>
  40b6e8:	mov	w8, w0
  40b6ec:	mov	x0, xzr
  40b6f0:	tbz	w8, #0, 40b648 <wcrtomb@plt+0x6b08>
  40b6f4:	ldr	w8, [x19, #104]
  40b6f8:	and	w8, w8, #0xf000
  40b6fc:	orr	w8, w8, #0x4000
  40b700:	cmp	w8, #0x6, lsl #12
  40b704:	b.ne	40b7c4 <wcrtomb@plt+0x6c84>  // b.any
  40b708:	ldr	x21, [x19, #120]
  40b70c:	ldr	w9, [x24, #3872]
  40b710:	lsr	x8, x21, #32
  40b714:	cmp	w9, #0x4
  40b718:	bfxil	w8, w21, #8, #12
  40b71c:	b.ne	40b740 <wcrtomb@plt+0x6c00>  // b.any
  40b720:	cmp	w8, #0x200, lsl #12
  40b724:	b.cc	40b740 <wcrtomb@plt+0x6c00>  // b.lo, b.ul, b.last
  40b728:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b72c:	add	x0, x0, #0xe0d
  40b730:	mov	x1, x19
  40b734:	mov	x2, xzr
  40b738:	bl	412c84 <wcrtomb@plt+0xe144>
  40b73c:	mov	w8, wzr
  40b740:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b744:	add	x4, x20, #0x149
  40b748:	lsr	w0, w8, #31
  40b74c:	sxtw	x1, w8
  40b750:	add	x6, x6, #0xf88
  40b754:	mov	w2, #0x4                   	// #4
  40b758:	mov	w5, #0x8                   	// #8
  40b75c:	mov	x3, xzr
  40b760:	bl	40a988 <wcrtomb@plt+0x5e48>
  40b764:	mov	w8, w0
  40b768:	mov	x0, xzr
  40b76c:	tbz	w8, #0, 40b648 <wcrtomb@plt+0x6b08>
  40b770:	lsr	x8, x21, #12
  40b774:	bfxil	w8, w21, #0, #8
  40b778:	cmp	w8, #0x200, lsl #12
  40b77c:	b.cc	40b7a4 <wcrtomb@plt+0x6c64>  // b.lo, b.ul, b.last
  40b780:	ldr	w9, [x24, #3872]
  40b784:	cmp	w9, #0x4
  40b788:	b.ne	40b7a4 <wcrtomb@plt+0x6c64>  // b.any
  40b78c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b790:	add	x0, x0, #0xe16
  40b794:	mov	x1, x19
  40b798:	mov	x2, xzr
  40b79c:	bl	412c84 <wcrtomb@plt+0xe144>
  40b7a0:	mov	w8, wzr
  40b7a4:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b7a8:	add	x4, x20, #0x151
  40b7ac:	lsr	w0, w8, #31
  40b7b0:	sxtw	x1, w8
  40b7b4:	add	x6, x6, #0xf90
  40b7b8:	mov	w2, #0x4                   	// #4
  40b7bc:	mov	w5, #0x8                   	// #8
  40b7c0:	b	40b820 <wcrtomb@plt+0x6ce0>
  40b7c4:	ldr	w8, [x24, #3872]
  40b7c8:	orr	w9, w8, #0x4
  40b7cc:	cmp	w9, #0x6
  40b7d0:	b.eq	40b838 <wcrtomb@plt+0x6cf8>  // b.none
  40b7d4:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b7d8:	add	x4, x20, #0x149
  40b7dc:	add	x6, x6, #0xf88
  40b7e0:	mov	w2, #0x4                   	// #4
  40b7e4:	mov	w5, #0x8                   	// #8
  40b7e8:	mov	w0, wzr
  40b7ec:	mov	x1, xzr
  40b7f0:	mov	x3, xzr
  40b7f4:	bl	40a988 <wcrtomb@plt+0x5e48>
  40b7f8:	mov	w8, w0
  40b7fc:	mov	x0, xzr
  40b800:	tbz	w8, #0, 40b648 <wcrtomb@plt+0x6b08>
  40b804:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b808:	add	x4, x20, #0x151
  40b80c:	add	x6, x6, #0xf90
  40b810:	mov	w2, #0x4                   	// #4
  40b814:	mov	w5, #0x8                   	// #8
  40b818:	mov	w0, wzr
  40b81c:	mov	x1, xzr
  40b820:	mov	x3, xzr
  40b824:	bl	40a988 <wcrtomb@plt+0x5e48>
  40b828:	mov	w8, w0
  40b82c:	mov	x0, xzr
  40b830:	tbz	w8, #0, 40b648 <wcrtomb@plt+0x6b08>
  40b834:	ldr	w8, [x24, #3872]
  40b838:	cmp	w8, #0x4
  40b83c:	b.ne	40b86c <wcrtomb@plt+0x6d2c>  // b.any
  40b840:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b844:	add	x0, x0, #0xe1f
  40b848:	mov	x1, x19
  40b84c:	mov	x2, xzr
  40b850:	bl	412c84 <wcrtomb@plt+0xe144>
  40b854:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b858:	add	x0, x0, #0xe25
  40b85c:	mov	x1, x19
  40b860:	mov	x2, xzr
  40b864:	bl	412c84 <wcrtomb@plt+0xe144>
  40b868:	b	40b8cc <wcrtomb@plt+0x6d8c>
  40b86c:	orr	w8, w8, #0x4
  40b870:	cmp	w8, #0x6
  40b874:	b.ne	40b8cc <wcrtomb@plt+0x6d8c>  // b.any
  40b878:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40b87c:	ldrb	w8, [x8, #3089]
  40b880:	cbz	w8, 40b8cc <wcrtomb@plt+0x6d8c>
  40b884:	ldr	x1, [x19, #216]
  40b888:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b88c:	add	x21, x21, #0xdfe
  40b890:	add	x4, x20, #0x159
  40b894:	lsr	x0, x1, #63
  40b898:	mov	w2, #0x8                   	// #8
  40b89c:	mov	w5, #0xc                   	// #12
  40b8a0:	mov	x3, xzr
  40b8a4:	mov	x6, x21
  40b8a8:	bl	40a988 <wcrtomb@plt+0x5e48>
  40b8ac:	ldr	x1, [x19, #248]
  40b8b0:	add	x4, x20, #0x165
  40b8b4:	mov	w2, #0x8                   	// #8
  40b8b8:	mov	w5, #0xc                   	// #12
  40b8bc:	lsr	x0, x1, #63
  40b8c0:	mov	x3, xzr
  40b8c4:	mov	x6, x21
  40b8c8:	bl	40a988 <wcrtomb@plt+0x5e48>
  40b8cc:	ldr	w8, [x24, #3872]
  40b8d0:	mov	w9, #0x30                  	// #48
  40b8d4:	subs	w8, w8, #0x1
  40b8d8:	csel	w9, wzr, w9, eq  // eq = none
  40b8dc:	cmp	w8, #0x5
  40b8e0:	strb	w9, [x20, #156]
  40b8e4:	b.hi	40bb40 <wcrtomb@plt+0x7000>  // b.pmore
  40b8e8:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b8ec:	add	x9, x9, #0xd84
  40b8f0:	adr	x10, 40b904 <wcrtomb@plt+0x6dc4>
  40b8f4:	ldrb	w11, [x9, x8]
  40b8f8:	add	x10, x10, x11, lsl #2
  40b8fc:	add	x8, x20, #0x101
  40b900:	br	x10
  40b904:	mov	x9, #0x7375                	// #29557
  40b908:	movk	x9, #0x6174, lsl #16
  40b90c:	movk	x9, #0x2072, lsl #32
  40b910:	movk	x9, #0x20, lsl #48
  40b914:	str	x9, [x8]
  40b918:	b	40b93c <wcrtomb@plt+0x6dfc>
  40b91c:	mov	w11, #0x7375                	// #29557
  40b920:	add	x9, x20, #0x101
  40b924:	mov	w10, #0x72                  	// #114
  40b928:	movk	w11, #0x6174, lsl #16
  40b92c:	mov	w12, #0x3030                	// #12336
  40b930:	strh	w10, [x9, #4]
  40b934:	str	w11, [x9]
  40b938:	strh	w12, [x8, #6]
  40b93c:	ldr	w8, [x24, #3872]
  40b940:	cmp	w8, #0x1
  40b944:	b.eq	40ba68 <wcrtomb@plt+0x6f28>  // b.none
  40b948:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40b94c:	ldrb	w9, [x9, #3728]
  40b950:	cbnz	w9, 40ba68 <wcrtomb@plt+0x6f28>
  40b954:	ldur	x0, [x29, #-8]
  40b958:	cbz	x0, 40b968 <wcrtomb@plt+0x6e28>
  40b95c:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  40b960:	str	x0, [x19, #32]
  40b964:	b	40b974 <wcrtomb@plt+0x6e34>
  40b968:	ldr	w0, [x19, #112]
  40b96c:	add	x1, x19, #0x20
  40b970:	bl	41c650 <wcrtomb@plt+0x17b10>
  40b974:	ldr	x0, [sp, #16]
  40b978:	cbz	x0, 40b988 <wcrtomb@plt+0x6e48>
  40b97c:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  40b980:	str	x0, [x19, #40]
  40b984:	b	40b994 <wcrtomb@plt+0x6e54>
  40b988:	ldr	w0, [x19, #116]
  40b98c:	add	x1, x19, #0x28
  40b990:	bl	41c6ec <wcrtomb@plt+0x17bac>
  40b994:	ldr	w8, [x24, #3872]
  40b998:	cmp	w8, #0x4
  40b99c:	b.ne	40b9d4 <wcrtomb@plt+0x6e94>  // b.any
  40b9a0:	ldr	x21, [x19, #32]
  40b9a4:	mov	x0, x21
  40b9a8:	bl	403f40 <strlen@plt>
  40b9ac:	cmp	x0, #0x20
  40b9b0:	b.hi	40b9c0 <wcrtomb@plt+0x6e80>  // b.pmore
  40b9b4:	mov	x0, x21
  40b9b8:	bl	428878 <wcrtomb@plt+0x23d38>
  40b9bc:	tbnz	w0, #0, 40b9d4 <wcrtomb@plt+0x6e94>
  40b9c0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40b9c4:	add	x0, x0, #0xe2b
  40b9c8:	mov	x1, x19
  40b9cc:	mov	x2, xzr
  40b9d0:	bl	412c84 <wcrtomb@plt+0xe144>
  40b9d4:	ldr	x9, [x19, #32]
  40b9d8:	mov	x8, xzr
  40b9dc:	add	x10, x20, #0x109
  40b9e0:	ldrb	w11, [x9, x8]
  40b9e4:	cmp	x8, #0x1e
  40b9e8:	strb	w11, [x10, x8]
  40b9ec:	b.hi	40b9f8 <wcrtomb@plt+0x6eb8>  // b.pmore
  40b9f0:	add	x8, x8, #0x1
  40b9f4:	cbnz	w11, 40b9e0 <wcrtomb@plt+0x6ea0>
  40b9f8:	strb	wzr, [x20, #296]
  40b9fc:	ldr	w8, [x24, #3872]
  40ba00:	cmp	w8, #0x4
  40ba04:	b.ne	40ba3c <wcrtomb@plt+0x6efc>  // b.any
  40ba08:	ldr	x21, [x19, #40]
  40ba0c:	mov	x0, x21
  40ba10:	bl	403f40 <strlen@plt>
  40ba14:	cmp	x0, #0x20
  40ba18:	b.hi	40ba28 <wcrtomb@plt+0x6ee8>  // b.pmore
  40ba1c:	mov	x0, x21
  40ba20:	bl	428878 <wcrtomb@plt+0x23d38>
  40ba24:	tbnz	w0, #0, 40ba3c <wcrtomb@plt+0x6efc>
  40ba28:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40ba2c:	add	x0, x0, #0xe31
  40ba30:	mov	x1, x19
  40ba34:	mov	x2, xzr
  40ba38:	bl	412c84 <wcrtomb@plt+0xe144>
  40ba3c:	ldr	x9, [x19, #40]
  40ba40:	mov	x8, xzr
  40ba44:	add	x10, x20, #0x129
  40ba48:	ldrb	w11, [x9, x8]
  40ba4c:	cmp	x8, #0x1e
  40ba50:	strb	w11, [x10, x8]
  40ba54:	b.hi	40ba60 <wcrtomb@plt+0x6f20>  // b.pmore
  40ba58:	add	x8, x8, #0x1
  40ba5c:	cbnz	w11, 40ba48 <wcrtomb@plt+0x6f08>
  40ba60:	strb	wzr, [x20, #328]
  40ba64:	ldr	w8, [x24, #3872]
  40ba68:	cmp	w8, #0x4
  40ba6c:	b.ne	40bb38 <wcrtomb@plt+0x6ff8>  // b.any
  40ba70:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ba74:	ldr	w8, [x8, #3952]
  40ba78:	cmp	w8, #0x1
  40ba7c:	b.lt	40bab8 <wcrtomb@plt+0x6f78>  // b.tstop
  40ba80:	ldr	x8, [x19, #56]
  40ba84:	cbz	x8, 40ba9c <wcrtomb@plt+0x6f5c>
  40ba88:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40ba8c:	add	x0, x0, #0xe37
  40ba90:	mov	x1, x19
  40ba94:	mov	x2, xzr
  40ba98:	bl	412c84 <wcrtomb@plt+0xe144>
  40ba9c:	ldr	x8, [x19, #72]
  40baa0:	cbz	x8, 40bab8 <wcrtomb@plt+0x6f78>
  40baa4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40baa8:	add	x0, x0, #0xe49
  40baac:	mov	x1, x19
  40bab0:	mov	x2, xzr
  40bab4:	bl	412c84 <wcrtomb@plt+0xe144>
  40bab8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40babc:	ldr	w8, [x8, #4040]
  40bac0:	cmp	w8, #0x1
  40bac4:	b.lt	40bae4 <wcrtomb@plt+0x6fa4>  // b.tstop
  40bac8:	ldr	x8, [x19, #48]
  40bacc:	cbz	x8, 40bae4 <wcrtomb@plt+0x6fa4>
  40bad0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40bad4:	add	x0, x0, #0xe5c
  40bad8:	mov	x1, x19
  40badc:	mov	x2, xzr
  40bae0:	bl	412c84 <wcrtomb@plt+0xe144>
  40bae4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40bae8:	ldr	w8, [x8, #3712]
  40baec:	cmp	w8, #0x1
  40baf0:	b.lt	40bb38 <wcrtomb@plt+0x6ff8>  // b.tstop
  40baf4:	str	xzr, [sp]
  40baf8:	ldr	x8, [x19, #328]
  40bafc:	cbz	x8, 40bb38 <wcrtomb@plt+0x6ff8>
  40bb00:	ldr	x21, [x19, #336]
  40bb04:	mov	x8, xzr
  40bb08:	mov	w22, #0x18                  	// #24
  40bb0c:	mul	x8, x8, x22
  40bb10:	ldr	x0, [x21, x8]
  40bb14:	mov	x2, sp
  40bb18:	mov	x1, x19
  40bb1c:	bl	412c84 <wcrtomb@plt+0xe144>
  40bb20:	ldr	x8, [sp]
  40bb24:	add	x8, x8, #0x1
  40bb28:	str	x8, [sp]
  40bb2c:	ldr	x9, [x19, #328]
  40bb30:	cmp	x8, x9
  40bb34:	b.cc	40bb0c <wcrtomb@plt+0x6fcc>  // b.lo, b.ul, b.last
  40bb38:	mov	x0, x20
  40bb3c:	b	40b648 <wcrtomb@plt+0x6b08>
  40bb40:	bl	4045b0 <abort@plt>
  40bb44:	stp	x29, x30, [sp, #-32]!
  40bb48:	mov	x11, #0x2020202020202020    	// #2314885530818453536
  40bb4c:	mov	x4, x0
  40bb50:	str	x19, [sp, #16]
  40bb54:	mov	x19, x0
  40bb58:	mov	x10, xzr
  40bb5c:	mov	w8, wzr
  40bb60:	mov	w9, wzr
  40bb64:	str	x11, [x4, #148]!
  40bb68:	mov	x29, sp
  40bb6c:	add	x11, x19, x10
  40bb70:	ldrb	w12, [x11]
  40bb74:	ldrb	w11, [x11, #1]
  40bb78:	add	x10, x10, #0x2
  40bb7c:	cmp	x10, #0x200
  40bb80:	add	w8, w8, w12
  40bb84:	add	w9, w9, w11
  40bb88:	b.ne	40bb6c <wcrtomb@plt+0x702c>  // b.any
  40bb8c:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40bb90:	add	w1, w9, w8
  40bb94:	add	x6, x6, #0xf98
  40bb98:	mov	w2, #0x8                   	// #8
  40bb9c:	mov	w5, #0x7                   	// #7
  40bba0:	mov	w0, wzr
  40bba4:	mov	x3, xzr
  40bba8:	bl	40a988 <wcrtomb@plt+0x5e48>
  40bbac:	mov	x0, x19
  40bbb0:	ldr	x19, [sp, #16]
  40bbb4:	ldp	x29, x30, [sp], #32
  40bbb8:	b	405670 <wcrtomb@plt+0xb30>
  40bbbc:	stp	x29, x30, [sp, #-32]!
  40bbc0:	stp	x20, x19, [sp, #16]
  40bbc4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40bbc8:	ldr	w8, [x8, #3700]
  40bbcc:	mov	x19, x1
  40bbd0:	mov	x20, x0
  40bbd4:	mov	x29, sp
  40bbd8:	cbz	w8, 40bc24 <wcrtomb@plt+0x70e4>
  40bbdc:	ldrb	w8, [x19, #156]
  40bbe0:	sub	w8, w8, #0x4b
  40bbe4:	cmp	w8, #0x2d
  40bbe8:	b.hi	40bc08 <wcrtomb@plt+0x70c8>  // b.pmore
  40bbec:	mov	w9, #0x1                   	// #1
  40bbf0:	lsl	x8, x9, x8
  40bbf4:	mov	x9, #0x3                   	// #3
  40bbf8:	movk	x9, #0x1000, lsl #16
  40bbfc:	movk	x9, #0x2000, lsl #32
  40bc00:	tst	x8, x9
  40bc04:	b.ne	40bc24 <wcrtomb@plt+0x70e4>  // b.any
  40bc08:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40bc0c:	ldr	w8, [x8, #3872]
  40bc10:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40bc14:	mov	x0, x20
  40bc18:	mov	x1, x19
  40bc1c:	str	w8, [x9, #3008]
  40bc20:	bl	418fc8 <wcrtomb@plt+0x14488>
  40bc24:	mov	w0, wzr
  40bc28:	mov	x1, x20
  40bc2c:	mov	x2, x19
  40bc30:	bl	40af60 <wcrtomb@plt+0x6420>
  40bc34:	mov	x11, #0x2020202020202020    	// #2314885530818453536
  40bc38:	mov	x4, x0
  40bc3c:	mov	x19, x0
  40bc40:	mov	x10, xzr
  40bc44:	mov	w8, wzr
  40bc48:	mov	w9, wzr
  40bc4c:	str	x11, [x4, #148]!
  40bc50:	add	x11, x19, x10
  40bc54:	ldrb	w12, [x11]
  40bc58:	ldrb	w11, [x11, #1]
  40bc5c:	add	x10, x10, #0x2
  40bc60:	cmp	x10, #0x200
  40bc64:	add	w8, w8, w12
  40bc68:	add	w9, w9, w11
  40bc6c:	b.ne	40bc50 <wcrtomb@plt+0x7110>  // b.any
  40bc70:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40bc74:	add	w1, w9, w8
  40bc78:	add	x6, x6, #0xf98
  40bc7c:	mov	w2, #0x8                   	// #8
  40bc80:	mov	w5, #0x7                   	// #7
  40bc84:	mov	w0, wzr
  40bc88:	mov	x3, xzr
  40bc8c:	bl	40a988 <wcrtomb@plt+0x5e48>
  40bc90:	mov	x0, x19
  40bc94:	ldp	x20, x19, [sp, #16]
  40bc98:	ldp	x29, x30, [sp], #32
  40bc9c:	b	405670 <wcrtomb@plt+0xb30>
  40bca0:	stp	x29, x30, [sp, #-32]!
  40bca4:	cmp	x0, #0x1
  40bca8:	str	x19, [sp, #16]
  40bcac:	mov	x29, sp
  40bcb0:	b.lt	40bd10 <wcrtomb@plt+0x71d0>  // b.tstop
  40bcb4:	add	x19, x0, #0x200
  40bcb8:	bl	40535c <wcrtomb@plt+0x81c>
  40bcbc:	movi	v0.2d, #0x0
  40bcc0:	stp	q0, q0, [x0]
  40bcc4:	stp	q0, q0, [x0, #32]
  40bcc8:	stp	q0, q0, [x0, #64]
  40bccc:	stp	q0, q0, [x0, #96]
  40bcd0:	stp	q0, q0, [x0, #128]
  40bcd4:	stp	q0, q0, [x0, #160]
  40bcd8:	stp	q0, q0, [x0, #192]
  40bcdc:	stp	q0, q0, [x0, #224]
  40bce0:	stp	q0, q0, [x0, #256]
  40bce4:	stp	q0, q0, [x0, #288]
  40bce8:	stp	q0, q0, [x0, #320]
  40bcec:	stp	q0, q0, [x0, #352]
  40bcf0:	stp	q0, q0, [x0, #384]
  40bcf4:	stp	q0, q0, [x0, #416]
  40bcf8:	stp	q0, q0, [x0, #448]
  40bcfc:	stp	q0, q0, [x0, #480]
  40bd00:	bl	405670 <wcrtomb@plt+0xb30>
  40bd04:	sub	x19, x19, #0x200
  40bd08:	cmp	x19, #0x200
  40bd0c:	b.gt	40bcb8 <wcrtomb@plt+0x7178>
  40bd10:	ldr	x19, [sp, #16]
  40bd14:	ldp	x29, x30, [sp], #32
  40bd18:	ret
  40bd1c:	stp	x29, x30, [sp, #-32]!
  40bd20:	stp	x20, x19, [sp, #16]
  40bd24:	mov	x19, x0
  40bd28:	ldr	w0, [x0, #408]
  40bd2c:	mov	x29, sp
  40bd30:	bl	404570 <fdopendir@plt>
  40bd34:	str	x0, [x19, #400]
  40bd38:	cbz	x0, 40bd50 <wcrtomb@plt+0x7210>
  40bd3c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40bd40:	ldr	w1, [x8, #3576]
  40bd44:	ldp	x20, x19, [sp, #16]
  40bd48:	ldp	x29, x30, [sp], #32
  40bd4c:	b	444f1c <argp_parse@@Base+0xd670>
  40bd50:	bl	404a10 <__errno_location@plt>
  40bd54:	mov	x20, x0
  40bd58:	ldr	w8, [x20]
  40bd5c:	cmp	w8, #0x18
  40bd60:	b.ne	40bdc0 <wcrtomb@plt+0x7280>  // b.any
  40bd64:	ldr	x8, [x19, #392]
  40bd68:	cbz	x8, 40bdc0 <wcrtomb@plt+0x7280>
  40bd6c:	ldr	x0, [x8, #392]
  40bd70:	cbnz	x0, 40bd80 <wcrtomb@plt+0x7240>
  40bd74:	b	40bdb8 <wcrtomb@plt+0x7278>
  40bd78:	mov	x0, x8
  40bd7c:	cbz	x8, 40bdb8 <wcrtomb@plt+0x7278>
  40bd80:	ldr	w9, [x0, #408]
  40bd84:	ldr	x8, [x0, #392]
  40bd88:	cmp	w9, #0x1
  40bd8c:	b.lt	40bd78 <wcrtomb@plt+0x7238>  // b.tstop
  40bd90:	cbz	x8, 40bda0 <wcrtomb@plt+0x7260>
  40bd94:	ldr	w9, [x8, #408]
  40bd98:	cmp	w9, #0x1
  40bd9c:	b.ge	40bd78 <wcrtomb@plt+0x7238>  // b.tcont
  40bda0:	bl	4243bc <wcrtomb@plt+0x1f87c>
  40bda4:	ldr	w0, [x19, #408]
  40bda8:	bl	404570 <fdopendir@plt>
  40bdac:	str	x0, [x19, #400]
  40bdb0:	cbz	x0, 40bd58 <wcrtomb@plt+0x7218>
  40bdb4:	b	40bd3c <wcrtomb@plt+0x71fc>
  40bdb8:	mov	w8, #0x18                  	// #24
  40bdbc:	str	w8, [x20]
  40bdc0:	ldp	x20, x19, [sp, #16]
  40bdc4:	mov	x0, xzr
  40bdc8:	ldp	x29, x30, [sp], #32
  40bdcc:	ret
  40bdd0:	stp	x29, x30, [sp, #-96]!
  40bdd4:	stp	x28, x27, [sp, #16]
  40bdd8:	stp	x26, x25, [sp, #32]
  40bddc:	stp	x24, x23, [sp, #48]
  40bde0:	stp	x22, x21, [sp, #64]
  40bde4:	stp	x20, x19, [sp, #80]
  40bde8:	mov	x29, sp
  40bdec:	sub	sp, sp, #0x360
  40bdf0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40bdf4:	ldr	x8, [x8, #3064]
  40bdf8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40bdfc:	ldrb	w9, [x9, #3632]
  40be00:	mov	w0, #0x1                   	// #1
  40be04:	cmp	x8, #0x2
  40be08:	cset	w8, cc  // cc = lo, ul, last
  40be0c:	tst	w9, #0x1
  40be10:	cset	w9, eq  // eq = none
  40be14:	and	w8, w8, w9
  40be18:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40be1c:	str	w8, [x9, #936]
  40be20:	bl	405d50 <wcrtomb@plt+0x1210>
  40be24:	bl	404cec <wcrtomb@plt+0x1ac>
  40be28:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40be2c:	ldrb	w8, [x8, #3089]
  40be30:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40be34:	cbz	w8, 40bec0 <wcrtomb@plt+0x7380>
  40be38:	mov	w0, #0x3e8                 	// #1000
  40be3c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  40be40:	mov	x19, x0
  40be44:	bl	41e2dc <wcrtomb@plt+0x1979c>
  40be48:	bl	41ebc4 <wcrtomb@plt+0x1a084>
  40be4c:	cbz	x0, 40bea0 <wcrtomb@plt+0x7360>
  40be50:	mov	x20, x0
  40be54:	b	40be64 <wcrtomb@plt+0x7324>
  40be58:	bl	41ebc4 <wcrtomb@plt+0x1a084>
  40be5c:	mov	x20, x0
  40be60:	cbz	x0, 40bea0 <wcrtomb@plt+0x7360>
  40be64:	ldr	x0, [x20, #16]
  40be68:	mov	x1, xzr
  40be6c:	bl	40eca0 <wcrtomb@plt+0xa160>
  40be70:	tbnz	w0, #0, 40be58 <wcrtomb@plt+0x7318>
  40be74:	ldr	x20, [x20, #16]
  40be78:	add	x0, sp, #0x1b0
  40be7c:	bl	42437c <wcrtomb@plt+0x1f83c>
  40be80:	add	x0, sp, #0x1b0
  40be84:	mov	x1, x20
  40be88:	mov	x2, x20
  40be8c:	str	xzr, [sp, #824]
  40be90:	bl	40c3bc <wcrtomb@plt+0x787c>
  40be94:	add	x0, sp, #0x1b0
  40be98:	bl	424420 <wcrtomb@plt+0x1f8e0>
  40be9c:	b	40be58 <wcrtomb@plt+0x7318>
  40bea0:	bl	41ec34 <wcrtomb@plt+0x1a0f4>
  40bea4:	bl	41ebc4 <wcrtomb@plt+0x1a084>
  40bea8:	cbz	x0, 40c0e0 <wcrtomb@plt+0x75a0>
  40beac:	add	x22, sp, #0x8
  40beb0:	mov	x24, x0
  40beb4:	mov	w20, #0x3e8                 	// #1000
  40beb8:	add	x23, x22, #0x58
  40bebc:	b	40bf4c <wcrtomb@plt+0x740c>
  40bec0:	mov	w0, #0x1                   	// #1
  40bec4:	bl	41c9e4 <wcrtomb@plt+0x17ea4>
  40bec8:	cbz	x0, 40c0e8 <wcrtomb@plt+0x75a8>
  40becc:	mov	x19, x0
  40bed0:	b	40bee4 <wcrtomb@plt+0x73a4>
  40bed4:	mov	w0, #0x1                   	// #1
  40bed8:	bl	41c9e4 <wcrtomb@plt+0x17ea4>
  40bedc:	mov	x19, x0
  40bee0:	cbz	x0, 40c0e8 <wcrtomb@plt+0x75a8>
  40bee4:	mov	x0, x19
  40bee8:	mov	x1, xzr
  40beec:	bl	40eca0 <wcrtomb@plt+0xa160>
  40bef0:	tbnz	w0, #0, 40bed4 <wcrtomb@plt+0x7394>
  40bef4:	add	x0, sp, #0x1b0
  40bef8:	bl	42437c <wcrtomb@plt+0x1f83c>
  40befc:	add	x0, sp, #0x1b0
  40bf00:	mov	x1, x19
  40bf04:	mov	x2, x19
  40bf08:	str	xzr, [sp, #824]
  40bf0c:	bl	40c3bc <wcrtomb@plt+0x787c>
  40bf10:	add	x0, sp, #0x1b0
  40bf14:	bl	424420 <wcrtomb@plt+0x1f8e0>
  40bf18:	b	40bed4 <wcrtomb@plt+0x7394>
  40bf1c:	ldr	x9, [x24, #64]
  40bf20:	adrp	x2, 41c000 <wcrtomb@plt+0x174c0>
  40bf24:	mov	x0, x8
  40bf28:	add	x2, x2, #0x40c
  40bf2c:	cmp	x9, #0x0
  40bf30:	cset	w1, eq  // eq = none
  40bf34:	bl	41c430 <wcrtomb@plt+0x178f0>
  40bf38:	add	x0, sp, #0x8
  40bf3c:	bl	424420 <wcrtomb@plt+0x1f8e0>
  40bf40:	bl	41ebc4 <wcrtomb@plt+0x1a084>
  40bf44:	mov	x24, x0
  40bf48:	cbz	x0, 40c0e0 <wcrtomb@plt+0x75a0>
  40bf4c:	ldr	x0, [x24, #16]
  40bf50:	mov	x1, xzr
  40bf54:	bl	40eca0 <wcrtomb@plt+0xa160>
  40bf58:	tbnz	w0, #0, 40bf40 <wcrtomb@plt+0x7400>
  40bf5c:	ldr	x26, [x24, #16]
  40bf60:	mov	x0, x26
  40bf64:	bl	403f40 <strlen@plt>
  40bf68:	mov	x25, x0
  40bf6c:	cmp	x20, x0
  40bf70:	b.hi	40bf94 <wcrtomb@plt+0x7454>  // b.pmore
  40bf74:	lsl	x20, x20, #1
  40bf78:	cmp	x20, x25
  40bf7c:	b.ls	40bf74 <wcrtomb@plt+0x7434>  // b.plast
  40bf80:	mov	x0, x19
  40bf84:	mov	x1, x20
  40bf88:	bl	445a68 <argp_parse@@Base+0xe1bc>
  40bf8c:	ldr	x26, [x24, #16]
  40bf90:	mov	x19, x0
  40bf94:	mov	x0, x19
  40bf98:	mov	x1, x26
  40bf9c:	mov	x2, x25
  40bfa0:	bl	403ec0 <memcpy@plt>
  40bfa4:	add	x8, x25, x19
  40bfa8:	ldurb	w8, [x8, #-1]
  40bfac:	cmp	w8, #0x2f
  40bfb0:	b.eq	40bfc4 <wcrtomb@plt+0x7484>  // b.none
  40bfb4:	add	x8, x25, #0x1
  40bfb8:	mov	w9, #0x2f                  	// #47
  40bfbc:	strb	w9, [x19, x25]
  40bfc0:	mov	x25, x8
  40bfc4:	add	x0, sp, #0x8
  40bfc8:	bl	42437c <wcrtomb@plt+0x1f83c>
  40bfcc:	ldr	x0, [x24, #56]
  40bfd0:	bl	41590c <wcrtomb@plt+0x10dcc>
  40bfd4:	cbz	x0, 40bf38 <wcrtomb@plt+0x73f8>
  40bfd8:	ldrb	w27, [x0]
  40bfdc:	mov	x26, x0
  40bfe0:	cbnz	w27, 40bffc <wcrtomb@plt+0x74bc>
  40bfe4:	b	40bf38 <wcrtomb@plt+0x73f8>
  40bfe8:	add	x0, sp, #0x1b0
  40bfec:	bl	424420 <wcrtomb@plt+0x1f8e0>
  40bff0:	add	x26, x27, x26
  40bff4:	ldrb	w27, [x26, #1]!
  40bff8:	cbz	w27, 40bf38 <wcrtomb@plt+0x73f8>
  40bffc:	mov	x0, x26
  40c000:	bl	403f40 <strlen@plt>
  40c004:	and	w8, w27, #0xff
  40c008:	cmp	w8, #0x59
  40c00c:	mov	x27, x0
  40c010:	b.ne	40bff0 <wcrtomb@plt+0x74b0>  // b.any
  40c014:	ldr	x8, [sp, #8]
  40c018:	cbnz	x8, 40c060 <wcrtomb@plt+0x7520>
  40c01c:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  40c020:	ldr	w0, [x8, #1872]
  40c024:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c028:	ldr	x1, [x24, #16]
  40c02c:	ldr	w2, [x8, #3756]
  40c030:	bl	4049f0 <openat@plt>
  40c034:	tbnz	w0, #31, 40c0c8 <wcrtomb@plt+0x7588>
  40c038:	mov	w1, w0
  40c03c:	str	w0, [sp, #416]
  40c040:	mov	w0, wzr
  40c044:	mov	x2, x23
  40c048:	bl	4048e0 <__fxstat@plt>
  40c04c:	ldr	x8, [x24, #16]
  40c050:	cbnz	w0, 40bf1c <wcrtomb@plt+0x73dc>
  40c054:	mov	x0, x8
  40c058:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  40c05c:	str	x0, [sp, #8]
  40c060:	add	x8, x27, x25
  40c064:	cmp	x20, x8
  40c068:	b.cs	40c088 <wcrtomb@plt+0x7548>  // b.hs, b.nlast
  40c06c:	lsl	x20, x20, #1
  40c070:	cmp	x20, x8
  40c074:	b.cc	40c06c <wcrtomb@plt+0x752c>  // b.lo, b.ul, b.last
  40c078:	mov	x0, x19
  40c07c:	mov	x1, x20
  40c080:	bl	445a68 <argp_parse@@Base+0xe1bc>
  40c084:	mov	x19, x0
  40c088:	add	x28, x26, #0x1
  40c08c:	add	x0, x19, x25
  40c090:	mov	x1, x28
  40c094:	bl	404840 <strcpy@plt>
  40c098:	add	x0, sp, #0x1b0
  40c09c:	bl	42437c <wcrtomb@plt+0x1f83c>
  40c0a0:	add	x0, sp, #0x1b0
  40c0a4:	mov	x1, x28
  40c0a8:	mov	x2, x19
  40c0ac:	str	x22, [sp, #824]
  40c0b0:	bl	40c3bc <wcrtomb@plt+0x787c>
  40c0b4:	ldr	x8, [x21, #3888]
  40c0b8:	cbz	x8, 40bfe8 <wcrtomb@plt+0x74a8>
  40c0bc:	add	x0, sp, #0x8
  40c0c0:	bl	414bc0 <wcrtomb@plt+0x10080>
  40c0c4:	b	40bfe8 <wcrtomb@plt+0x74a8>
  40c0c8:	ldr	x8, [x24, #64]
  40c0cc:	ldr	x0, [x24, #16]
  40c0d0:	adrp	x2, 41c000 <wcrtomb@plt+0x174c0>
  40c0d4:	add	x2, x2, #0x358
  40c0d8:	cmp	x8, #0x0
  40c0dc:	b	40bf30 <wcrtomb@plt+0x73f0>
  40c0e0:	mov	x0, x19
  40c0e4:	bl	404700 <free@plt>
  40c0e8:	bl	40535c <wcrtomb@plt+0x81c>
  40c0ec:	movi	v0.2d, #0x0
  40c0f0:	stp	q0, q0, [x0]
  40c0f4:	stp	q0, q0, [x0, #32]
  40c0f8:	stp	q0, q0, [x0, #64]
  40c0fc:	stp	q0, q0, [x0, #96]
  40c100:	stp	q0, q0, [x0, #128]
  40c104:	stp	q0, q0, [x0, #160]
  40c108:	stp	q0, q0, [x0, #192]
  40c10c:	stp	q0, q0, [x0, #224]
  40c110:	stp	q0, q0, [x0, #256]
  40c114:	stp	q0, q0, [x0, #288]
  40c118:	stp	q0, q0, [x0, #320]
  40c11c:	stp	q0, q0, [x0, #352]
  40c120:	stp	q0, q0, [x0, #384]
  40c124:	stp	q0, q0, [x0, #416]
  40c128:	stp	q0, q0, [x0, #448]
  40c12c:	stp	q0, q0, [x0, #480]
  40c130:	bl	405670 <wcrtomb@plt+0xb30>
  40c134:	bl	40535c <wcrtomb@plt+0x81c>
  40c138:	mov	x19, x0
  40c13c:	bl	4056b4 <wcrtomb@plt+0xb74>
  40c140:	mov	x2, x0
  40c144:	mov	x0, x19
  40c148:	mov	w1, wzr
  40c14c:	bl	404360 <memset@plt>
  40c150:	mov	x0, x19
  40c154:	bl	405670 <wcrtomb@plt+0xb30>
  40c158:	bl	4059a4 <wcrtomb@plt+0xe64>
  40c15c:	bl	427e5c <wcrtomb@plt+0x2331c>
  40c160:	ldr	x8, [x21, #3888]
  40c164:	cbz	x8, 40c16c <wcrtomb@plt+0x762c>
  40c168:	bl	4167c0 <wcrtomb@plt+0x11c80>
  40c16c:	add	sp, sp, #0x360
  40c170:	ldp	x20, x19, [sp, #80]
  40c174:	ldp	x22, x21, [sp, #64]
  40c178:	ldp	x24, x23, [sp, #48]
  40c17c:	ldp	x26, x25, [sp, #32]
  40c180:	ldp	x28, x27, [sp, #16]
  40c184:	ldp	x29, x30, [sp], #96
  40c188:	ret
  40c18c:	sub	sp, sp, #0x1e0
  40c190:	stp	x20, x19, [sp, #464]
  40c194:	mov	x19, x0
  40c198:	add	x0, sp, #0x8
  40c19c:	stp	x29, x30, [sp, #432]
  40c1a0:	stp	x28, x21, [sp, #448]
  40c1a4:	add	x29, sp, #0x1b0
  40c1a8:	mov	x20, x2
  40c1ac:	mov	x21, x1
  40c1b0:	bl	42437c <wcrtomb@plt+0x1f83c>
  40c1b4:	add	x0, sp, #0x8
  40c1b8:	mov	x1, x21
  40c1bc:	mov	x2, x20
  40c1c0:	str	x19, [sp, #400]
  40c1c4:	bl	40c3bc <wcrtomb@plt+0x787c>
  40c1c8:	cbz	x19, 40c1e0 <wcrtomb@plt+0x76a0>
  40c1cc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c1d0:	ldr	x8, [x8, #3888]
  40c1d4:	cbz	x8, 40c1e0 <wcrtomb@plt+0x76a0>
  40c1d8:	mov	x0, x19
  40c1dc:	bl	414bc0 <wcrtomb@plt+0x10080>
  40c1e0:	add	x0, sp, #0x8
  40c1e4:	bl	424420 <wcrtomb@plt+0x1f8e0>
  40c1e8:	ldp	x20, x19, [sp, #464]
  40c1ec:	ldp	x28, x21, [sp, #448]
  40c1f0:	ldp	x29, x30, [sp, #432]
  40c1f4:	add	sp, sp, #0x1e0
  40c1f8:	ret
  40c1fc:	stp	x29, x30, [sp, #-64]!
  40c200:	stp	x22, x21, [sp, #32]
  40c204:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c208:	ldr	x0, [x22, #944]
  40c20c:	str	x23, [sp, #16]
  40c210:	stp	x20, x19, [sp, #48]
  40c214:	mov	x29, sp
  40c218:	cbz	x0, 40c294 <wcrtomb@plt+0x7754>
  40c21c:	bl	43b7c0 <argp_parse@@Base+0x3f14>
  40c220:	cbz	x0, 40c294 <wcrtomb@plt+0x7754>
  40c224:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40c228:	mov	x19, x0
  40c22c:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c230:	add	x20, x20, #0xe71
  40c234:	b	40c27c <wcrtomb@plt+0x773c>
  40c238:	mov	w2, #0x5                   	// #5
  40c23c:	mov	x0, xzr
  40c240:	mov	x1, x20
  40c244:	bl	404900 <dcgettext@plt>
  40c248:	mov	x21, x0
  40c24c:	add	x0, x19, #0x14
  40c250:	bl	444a68 <argp_parse@@Base+0xd1bc>
  40c254:	mov	x3, x0
  40c258:	mov	w0, wzr
  40c25c:	mov	w1, wzr
  40c260:	mov	x2, x21
  40c264:	bl	403fa0 <error@plt>
  40c268:	ldr	x0, [x22, #944]
  40c26c:	mov	x1, x19
  40c270:	bl	43b7fc <argp_parse@@Base+0x3f50>
  40c274:	mov	x19, x0
  40c278:	cbz	x0, 40c294 <wcrtomb@plt+0x7754>
  40c27c:	ldr	w8, [x19, #16]
  40c280:	cbz	w8, 40c268 <wcrtomb@plt+0x7728>
  40c284:	ldr	x8, [x23, #4064]
  40c288:	cbz	x8, 40c238 <wcrtomb@plt+0x76f8>
  40c28c:	blr	x8
  40c290:	b	40c238 <wcrtomb@plt+0x76f8>
  40c294:	ldp	x20, x19, [sp, #48]
  40c298:	ldp	x22, x21, [sp, #32]
  40c29c:	ldr	x23, [sp, #16]
  40c2a0:	ldp	x29, x30, [sp], #64
  40c2a4:	ret
  40c2a8:	sub	sp, sp, #0xb0
  40c2ac:	stp	x29, x30, [sp, #128]
  40c2b0:	stp	x20, x19, [sp, #160]
  40c2b4:	str	x21, [sp, #144]
  40c2b8:	ldr	x21, [x0, #392]
  40c2bc:	add	x29, sp, #0x80
  40c2c0:	cbz	x21, 40c330 <wcrtomb@plt+0x77f0>
  40c2c4:	ldr	w8, [x21, #408]
  40c2c8:	cbnz	w8, 40c330 <wcrtomb@plt+0x77f0>
  40c2cc:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c2d0:	ldr	w0, [x0, #408]
  40c2d4:	ldr	w2, [x20, #3756]
  40c2d8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  40c2dc:	add	x1, x1, #0x509
  40c2e0:	bl	4049f0 <openat@plt>
  40c2e4:	tbnz	w0, #31, 40c344 <wcrtomb@plt+0x7804>
  40c2e8:	mov	w19, w0
  40c2ec:	mov	x2, sp
  40c2f0:	mov	w0, wzr
  40c2f4:	mov	w1, w19
  40c2f8:	bl	4048e0 <__fxstat@plt>
  40c2fc:	cbnz	w0, 40c320 <wcrtomb@plt+0x77e0>
  40c300:	ldr	x8, [x21, #96]
  40c304:	ldr	x9, [sp, #8]
  40c308:	cmp	x8, x9
  40c30c:	b.ne	40c320 <wcrtomb@plt+0x77e0>  // b.any
  40c310:	ldr	x8, [x21, #88]
  40c314:	ldr	x9, [sp]
  40c318:	cmp	x8, x9
  40c31c:	b.eq	40c32c <wcrtomb@plt+0x77ec>  // b.none
  40c320:	mov	w0, w19
  40c324:	bl	404520 <close@plt>
  40c328:	mov	w19, #0x2                   	// #2
  40c32c:	str	w19, [x21, #408]
  40c330:	ldp	x20, x19, [sp, #160]
  40c334:	ldr	x21, [sp, #144]
  40c338:	ldp	x29, x30, [sp, #128]
  40c33c:	add	sp, sp, #0xb0
  40c340:	ret
  40c344:	bl	404a10 <__errno_location@plt>
  40c348:	ldr	w8, [x0]
  40c34c:	cmp	w8, #0x1
  40c350:	neg	w19, w8
  40c354:	b.lt	40c32c <wcrtomb@plt+0x77ec>  // b.tstop
  40c358:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  40c35c:	ldr	x1, [x21]
  40c360:	ldr	w0, [x8, #1872]
  40c364:	ldr	w2, [x20, #3756]
  40c368:	bl	4049f0 <openat@plt>
  40c36c:	tbnz	w0, #31, 40c32c <wcrtomb@plt+0x77ec>
  40c370:	mov	w20, w0
  40c374:	mov	x2, sp
  40c378:	mov	w0, wzr
  40c37c:	mov	w1, w19
  40c380:	bl	4048e0 <__fxstat@plt>
  40c384:	cbnz	w0, 40c3b0 <wcrtomb@plt+0x7870>
  40c388:	ldr	x8, [x21, #96]
  40c38c:	ldr	x9, [sp, #8]
  40c390:	cmp	x8, x9
  40c394:	b.ne	40c3b0 <wcrtomb@plt+0x7870>  // b.any
  40c398:	ldr	x8, [x21, #88]
  40c39c:	ldr	x9, [sp]
  40c3a0:	cmp	x8, x9
  40c3a4:	b.ne	40c3b0 <wcrtomb@plt+0x7870>  // b.any
  40c3a8:	mov	w19, w20
  40c3ac:	b	40c32c <wcrtomb@plt+0x77ec>
  40c3b0:	mov	w0, w20
  40c3b4:	bl	404520 <close@plt>
  40c3b8:	b	40c32c <wcrtomb@plt+0x77ec>
  40c3bc:	sub	sp, sp, #0x120
  40c3c0:	stp	x29, x30, [sp, #192]
  40c3c4:	stp	x28, x27, [sp, #208]
  40c3c8:	stp	x26, x25, [sp, #224]
  40c3cc:	stp	x24, x23, [sp, #240]
  40c3d0:	stp	x22, x21, [sp, #256]
  40c3d4:	stp	x20, x19, [sp, #272]
  40c3d8:	ldr	x22, [x0, #392]
  40c3dc:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  40c3e0:	add	x8, x8, #0x750
  40c3e4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c3e8:	add	x10, x22, #0x198
  40c3ec:	cmp	x22, #0x0
  40c3f0:	csel	x27, x8, x10, eq  // eq = none
  40c3f4:	ldrb	w8, [x9, #3648]
  40c3f8:	ldr	w23, [x27]
  40c3fc:	mov	x19, x2
  40c400:	mov	x20, x0
  40c404:	mov	x21, x1
  40c408:	add	x29, sp, #0xc0
  40c40c:	cbz	w8, 40c424 <wcrtomb@plt+0x78e4>
  40c410:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40c414:	add	x0, x0, #0xfa2
  40c418:	mov	x1, x19
  40c41c:	bl	422df0 <wcrtomb@plt+0x1e2b0>
  40c420:	cbz	w0, 40ce70 <wcrtomb@plt+0x8330>
  40c424:	mov	x0, x20
  40c428:	mov	x1, x19
  40c42c:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  40c430:	adrp	x28, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c434:	ldrb	w2, [x28, #4008]
  40c438:	mov	x0, x19
  40c43c:	mov	w1, wzr
  40c440:	add	x24, x20, #0x8
  40c444:	bl	42b698 <wcrtomb@plt+0x26b58>
  40c448:	mov	x1, x0
  40c44c:	mov	x0, x24
  40c450:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  40c454:	mov	w1, #0x1                   	// #1
  40c458:	mov	x0, x24
  40c45c:	bl	427c8c <wcrtomb@plt+0x2314c>
  40c460:	cbz	x22, 40c480 <wcrtomb@plt+0x7940>
  40c464:	tbz	w23, #31, 40c480 <wcrtomb@plt+0x7940>
  40c468:	neg	w20, w23
  40c46c:	bl	404a10 <__errno_location@plt>
  40c470:	adrp	x2, 41c000 <wcrtomb@plt+0x174c0>
  40c474:	str	w20, [x0]
  40c478:	add	x2, x2, #0x358
  40c47c:	b	40c4ac <wcrtomb@plt+0x796c>
  40c480:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c484:	ldr	w4, [x8, #3616]
  40c488:	add	x26, x20, #0x58
  40c48c:	mov	w0, wzr
  40c490:	mov	w1, w23
  40c494:	mov	x2, x21
  40c498:	mov	x3, x26
  40c49c:	bl	404b20 <__fxstatat@plt>
  40c4a0:	cbz	w0, 40c4d8 <wcrtomb@plt+0x7998>
  40c4a4:	adrp	x2, 41c000 <wcrtomb@plt+0x174c0>
  40c4a8:	add	x2, x2, #0x40c
  40c4ac:	cmp	x22, #0x0
  40c4b0:	mov	x0, x19
  40c4b4:	ldp	x20, x19, [sp, #272]
  40c4b8:	ldp	x22, x21, [sp, #256]
  40c4bc:	ldp	x24, x23, [sp, #240]
  40c4c0:	ldp	x26, x25, [sp, #224]
  40c4c4:	ldp	x28, x27, [sp, #208]
  40c4c8:	ldp	x29, x30, [sp, #192]
  40c4cc:	cset	w1, eq  // eq = none
  40c4d0:	add	sp, sp, #0x120
  40c4d4:	b	41c430 <wcrtomb@plt+0x178f0>
  40c4d8:	ldr	w8, [x20, #104]
  40c4dc:	and	w9, w8, #0xf000
  40c4e0:	cmp	w9, #0x4, lsl #12
  40c4e4:	b.eq	40c620 <wcrtomb@plt+0x7ae0>  // b.none
  40c4e8:	cmp	w9, #0x8, lsl #12
  40c4ec:	b.ne	40c564 <wcrtomb@plt+0x7a24>  // b.any
  40c4f0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c4f4:	ldrb	w9, [x9, #3592]
  40c4f8:	cbz	w9, 40c550 <wcrtomb@plt+0x7a10>
  40c4fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c500:	ldrb	w8, [x8, #3753]
  40c504:	mov	w25, wzr
  40c508:	cbz	w8, 40c568 <wcrtomb@plt+0x7a28>
  40c50c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c510:	ldrb	w8, [x8, #3968]
  40c514:	cbz	w8, 40c568 <wcrtomb@plt+0x7a28>
  40c518:	ldr	x8, [x20, #136]
  40c51c:	ldr	x9, [x20, #152]
  40c520:	cmp	x8, #0x0
  40c524:	add	x10, x8, #0x1ff
  40c528:	csel	x11, x10, x8, lt  // lt = tstop
  40c52c:	tst	x8, #0x1ff
  40c530:	cset	w8, ne  // ne = any
  40c534:	cmp	x10, #0x3fe
  40c538:	cset	w10, hi  // hi = pmore
  40c53c:	and	w8, w10, w8
  40c540:	add	x8, x8, x11, asr #9
  40c544:	cmp	x9, x8
  40c548:	b.ge	40c564 <wcrtomb@plt+0x7a24>  // b.tcont
  40c54c:	b	40c620 <wcrtomb@plt+0x7ae0>
  40c550:	mov	w9, #0x124                 	// #292
  40c554:	bics	wzr, w9, w8
  40c558:	b.ne	40c620 <wcrtomb@plt+0x7ae0>  // b.any
  40c55c:	ldr	x8, [x20, #136]
  40c560:	cbnz	x8, 40c620 <wcrtomb@plt+0x7ae0>
  40c564:	mov	w25, wzr
  40c568:	ldr	x26, [x20, #136]
  40c56c:	ldp	q1, q0, [x20, #160]
  40c570:	ldr	q2, [x20, #192]
  40c574:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c578:	str	x26, [x20, #264]
  40c57c:	stur	q1, [x20, #216]
  40c580:	stur	q0, [x20, #232]
  40c584:	stur	q2, [x20, #248]
  40c588:	ldrb	w8, [x8, #3089]
  40c58c:	cbz	x22, 40c594 <wcrtomb@plt+0x7a54>
  40c590:	cbnz	w8, 40c5a4 <wcrtomb@plt+0x7a64>
  40c594:	ldr	w9, [x20, #104]
  40c598:	and	w9, w9, #0xf000
  40c59c:	cmp	w9, #0x4, lsl #12
  40c5a0:	b.ne	40c7e0 <wcrtomb@plt+0x7ca0>  // b.any
  40c5a4:	mov	x0, x20
  40c5a8:	str	q2, [sp, #32]
  40c5ac:	bl	4215e8 <wcrtomb@plt+0x1caa8>
  40c5b0:	tbz	w0, #0, 40c658 <wcrtomb@plt+0x7b18>
  40c5b4:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40c5b8:	ldrb	w8, [x8, #3721]
  40c5bc:	tbz	w8, #2, 40ce70 <wcrtomb@plt+0x8330>
  40c5c0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c5c4:	ldr	x8, [x8, #4064]
  40c5c8:	cbz	x8, 40c5d0 <wcrtomb@plt+0x7a90>
  40c5cc:	blr	x8
  40c5d0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40c5d4:	add	x1, x1, #0xfc8
  40c5d8:	mov	w2, #0x5                   	// #5
  40c5dc:	mov	x0, xzr
  40c5e0:	bl	404900 <dcgettext@plt>
  40c5e4:	mov	x20, x0
  40c5e8:	mov	x0, x19
  40c5ec:	bl	444778 <argp_parse@@Base+0xcecc>
  40c5f0:	mov	x2, x20
  40c5f4:	ldp	x20, x19, [sp, #272]
  40c5f8:	ldp	x22, x21, [sp, #256]
  40c5fc:	ldp	x24, x23, [sp, #240]
  40c600:	ldp	x26, x25, [sp, #224]
  40c604:	ldp	x28, x27, [sp, #208]
  40c608:	ldp	x29, x30, [sp, #192]
  40c60c:	mov	x3, x0
  40c610:	mov	w0, wzr
  40c614:	mov	w1, wzr
  40c618:	add	sp, sp, #0x120
  40c61c:	b	403fa0 <error@plt>
  40c620:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c624:	ldr	w2, [x8, #3764]
  40c628:	mov	x0, x22
  40c62c:	mov	x1, x21
  40c630:	bl	40a770 <wcrtomb@plt+0x5c30>
  40c634:	tbnz	w0, #31, 40c7d4 <wcrtomb@plt+0x7c94>
  40c638:	mov	w25, w0
  40c63c:	str	w0, [x20, #408]
  40c640:	mov	w0, wzr
  40c644:	mov	w1, w25
  40c648:	mov	x2, x26
  40c64c:	bl	4048e0 <__fxstat@plt>
  40c650:	cbnz	w0, 40c4a4 <wcrtomb@plt+0x7964>
  40c654:	b	40c568 <wcrtomb@plt+0x7a28>
  40c658:	ldr	w8, [x20, #104]
  40c65c:	str	x26, [sp, #16]
  40c660:	and	w8, w8, #0xf000
  40c664:	cmp	w8, #0x4, lsl #12
  40c668:	str	w8, [sp, #28]
  40c66c:	b.ne	40c85c <wcrtomb@plt+0x7d1c>  // b.any
  40c670:	ldr	w28, [sp, #28]
  40c674:	mov	w0, w23
  40c678:	mov	x1, x21
  40c67c:	mov	x2, x20
  40c680:	cmp	w28, #0x4, lsl #12
  40c684:	cset	w26, ne  // ne = any
  40c688:	mov	w3, wzr
  40c68c:	mov	w4, w26
  40c690:	bl	428978 <wcrtomb@plt+0x23e38>
  40c694:	mov	w0, w23
  40c698:	mov	x1, x21
  40c69c:	mov	x2, x20
  40c6a0:	mov	w3, w25
  40c6a4:	bl	42987c <wcrtomb@plt+0x24d3c>
  40c6a8:	mov	w0, w23
  40c6ac:	mov	x1, x21
  40c6b0:	mov	x2, x20
  40c6b4:	mov	w3, w25
  40c6b8:	bl	429420 <wcrtomb@plt+0x248e0>
  40c6bc:	cmp	w28, #0x4, lsl #12
  40c6c0:	b.ne	40c9a0 <wcrtomb@plt+0x7e60>  // b.any
  40c6c4:	ldr	x23, [x20]
  40c6c8:	mov	x0, x23
  40c6cc:	bl	403f40 <strlen@plt>
  40c6d0:	mov	x25, x0
  40c6d4:	cbz	x0, 40c6ec <wcrtomb@plt+0x7bac>
  40c6d8:	add	x8, x23, x25
  40c6dc:	ldurb	w8, [x8, #-1]
  40c6e0:	sub	x0, x25, #0x1
  40c6e4:	cmp	w8, #0x2f
  40c6e8:	b.eq	40c6d0 <wcrtomb@plt+0x7b90>  // b.none
  40c6ec:	ldrb	w8, [x23, x25]
  40c6f0:	cmp	w8, #0x2f
  40c6f4:	b.eq	40c70c <wcrtomb@plt+0x7bcc>  // b.none
  40c6f8:	add	x1, x25, #0x2
  40c6fc:	mov	x0, x23
  40c700:	bl	445a68 <argp_parse@@Base+0xe1bc>
  40c704:	mov	x23, x0
  40c708:	str	x0, [x20]
  40c70c:	mov	w8, #0x2f                  	// #47
  40c710:	strb	w8, [x23, x25]
  40c714:	ldr	x8, [x20]
  40c718:	add	x8, x8, x25
  40c71c:	strb	wzr, [x8, #1]
  40c720:	ldr	x23, [x20, #8]
  40c724:	mov	x0, x23
  40c728:	bl	403f40 <strlen@plt>
  40c72c:	mov	x25, x0
  40c730:	cbz	x0, 40c748 <wcrtomb@plt+0x7c08>
  40c734:	add	x8, x23, x25
  40c738:	ldurb	w8, [x8, #-1]
  40c73c:	sub	x0, x25, #0x1
  40c740:	cmp	w8, #0x2f
  40c744:	b.eq	40c72c <wcrtomb@plt+0x7bec>  // b.none
  40c748:	ldrb	w8, [x23, x25]
  40c74c:	cmp	w8, #0x2f
  40c750:	b.eq	40c768 <wcrtomb@plt+0x7c28>  // b.none
  40c754:	add	x1, x25, #0x2
  40c758:	mov	x0, x23
  40c75c:	bl	445a68 <argp_parse@@Base+0xe1bc>
  40c760:	mov	x23, x0
  40c764:	str	x0, [x24]
  40c768:	mov	w8, #0x2f                  	// #47
  40c76c:	strb	w8, [x23, x25]
  40c770:	ldr	x8, [x24]
  40c774:	add	x8, x8, x25
  40c778:	strb	wzr, [x8, #1]
  40c77c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c780:	ldr	x25, [x8, #928]
  40c784:	cbz	x25, 40cda8 <wcrtomb@plt+0x8268>
  40c788:	adrp	x28, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c78c:	b	40c798 <wcrtomb@plt+0x7c58>
  40c790:	ldr	x25, [x25, #32]
  40c794:	cbz	x25, 40cda8 <wcrtomb@plt+0x8268>
  40c798:	ldr	x1, [x25]
  40c79c:	ldr	w2, [x28, #3764]
  40c7a0:	mov	x0, x20
  40c7a4:	bl	40a770 <wcrtomb@plt+0x5c30>
  40c7a8:	tbnz	w0, #31, 40c790 <wcrtomb@plt+0x7c50>
  40c7ac:	ldr	x8, [x25, #24]
  40c7b0:	mov	w23, w0
  40c7b4:	cbz	x8, 40ccfc <wcrtomb@plt+0x81bc>
  40c7b8:	mov	w0, w23
  40c7bc:	blr	x8
  40c7c0:	mov	w24, w0
  40c7c4:	mov	w0, w23
  40c7c8:	bl	404520 <close@plt>
  40c7cc:	tbz	w24, #0, 40c790 <wcrtomb@plt+0x7c50>
  40c7d0:	b	40cd04 <wcrtomb@plt+0x81c4>
  40c7d4:	adrp	x2, 41c000 <wcrtomb@plt+0x174c0>
  40c7d8:	add	x2, x2, #0x358
  40c7dc:	b	40c4ac <wcrtomb@plt+0x796c>
  40c7e0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c7e4:	add	x9, x9, #0xc18
  40c7e8:	ldp	x10, x9, [x9]
  40c7ec:	fmov	x11, d0
  40c7f0:	cmp	x11, x10
  40c7f4:	b.ge	40ca24 <wcrtomb@plt+0x7ee4>  // b.tcont
  40c7f8:	fmov	x11, d2
  40c7fc:	cmp	x11, x10
  40c800:	b.lt	40c824 <wcrtomb@plt+0x7ce4>  // b.tstop
  40c804:	adrp	x12, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c808:	ldr	w12, [x12, #4028]
  40c80c:	cbz	w12, 40c824 <wcrtomb@plt+0x7ce4>
  40c810:	cmp	x11, x10
  40c814:	b.gt	40c5a4 <wcrtomb@plt+0x7a64>
  40c818:	mov	x10, v2.d[1]
  40c81c:	cmp	w10, w9
  40c820:	b.pl	40c5a4 <wcrtomb@plt+0x7a64>  // b.nfrst
  40c824:	cbnz	w8, 40ce70 <wcrtomb@plt+0x8330>
  40c828:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c82c:	ldr	w8, [x8, #3700]
  40c830:	cbz	w8, 40ce70 <wcrtomb@plt+0x8330>
  40c834:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40c838:	ldrb	w8, [x8, #3721]
  40c83c:	tbz	w8, #0, 40ce70 <wcrtomb@plt+0x8330>
  40c840:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c844:	ldr	x8, [x8, #4064]
  40c848:	cbz	x8, 40c850 <wcrtomb@plt+0x7d10>
  40c84c:	blr	x8
  40c850:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40c854:	add	x1, x1, #0xfa6
  40c858:	b	40c5d8 <wcrtomb@plt+0x7a98>
  40c85c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c860:	ldr	x0, [x8, #944]
  40c864:	cbz	x0, 40c964 <wcrtomb@plt+0x7e24>
  40c868:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c86c:	ldr	w8, [x8, #936]
  40c870:	ldr	w9, [x20, #108]
  40c874:	cmp	w8, w9
  40c878:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c87c:	b.cc	40c888 <wcrtomb@plt+0x7d48>  // b.lo, b.ul, b.last
  40c880:	ldrb	w8, [x8, #3800]
  40c884:	cbz	w8, 40c964 <wcrtomb@plt+0x7e24>
  40c888:	ldur	q0, [x20, #88]
  40c88c:	add	x1, sp, #0x30
  40c890:	str	q0, [sp, #48]
  40c894:	bl	43b71c <argp_parse@@Base+0x3e70>
  40c898:	cbz	x0, 40c964 <wcrtomb@plt+0x7e24>
  40c89c:	ldrb	w2, [x28, #4008]
  40c8a0:	mov	x26, x0
  40c8a4:	add	x0, x0, #0x14
  40c8a8:	mov	w1, #0x1                   	// #1
  40c8ac:	bl	42b698 <wcrtomb@plt+0x26b58>
  40c8b0:	ldr	w8, [x26, #16]
  40c8b4:	mov	x9, x26
  40c8b8:	mov	x26, x0
  40c8bc:	cbz	w8, 40c8c8 <wcrtomb@plt+0x7d88>
  40c8c0:	sub	w8, w8, #0x1
  40c8c4:	str	w8, [x9, #16]
  40c8c8:	bl	4052f0 <wcrtomb@plt+0x7b0>
  40c8cc:	str	x0, [sp, #8]
  40c8d0:	add	x0, x20, #0x18
  40c8d4:	mov	x1, x26
  40c8d8:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  40c8dc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c8e0:	ldr	w8, [x8, #3872]
  40c8e4:	mov	x0, x26
  40c8e8:	cmp	w8, #0x2
  40c8ec:	mov	w8, #0x63                  	// #99
  40c8f0:	cinc	x28, x8, ne  // ne = any
  40c8f4:	bl	403f40 <strlen@plt>
  40c8f8:	cmp	x28, x0
  40c8fc:	b.cs	40c908 <wcrtomb@plt+0x7dc8>  // b.hs, b.nlast
  40c900:	mov	x0, x20
  40c904:	bl	40d5bc <wcrtomb@plt+0x8a7c>
  40c908:	mov	x0, x20
  40c90c:	str	xzr, [x20, #136]
  40c910:	bl	40b044 <wcrtomb@plt+0x6504>
  40c914:	cbz	x0, 40c964 <wcrtomb@plt+0x7e24>
  40c918:	mov	x1, x0
  40c91c:	mov	x8, xzr
  40c920:	ldrb	w9, [x26, x8]
  40c924:	add	x10, x1, x8
  40c928:	cmp	x8, #0x62
  40c92c:	strb	w9, [x10, #157]
  40c930:	b.hi	40c93c <wcrtomb@plt+0x7dfc>  // b.pmore
  40c934:	add	x8, x8, #0x1
  40c938:	cbnz	w9, 40c920 <wcrtomb@plt+0x7de0>
  40c93c:	ldr	x2, [sp, #8]
  40c940:	mov	w8, #0x31                  	// #49
  40c944:	mov	x0, x20
  40c948:	strb	w8, [x1, #156]
  40c94c:	bl	40bbbc <wcrtomb@plt+0x707c>
  40c950:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c954:	ldrb	w8, [x8, #3800]
  40c958:	cbz	w8, 40ce70 <wcrtomb@plt+0x8330>
  40c95c:	ldr	x0, [x20]
  40c960:	b	40cc00 <wcrtomb@plt+0x80c0>
  40c964:	ldr	w8, [x20, #104]
  40c968:	and	w8, w8, #0xf000
  40c96c:	sub	w8, w8, #0x1, lsl #12
  40c970:	lsr	w8, w8, #12
  40c974:	cmp	w8, #0xb
  40c978:	b.hi	40caec <wcrtomb@plt+0x7fac>  // b.pmore
  40c97c:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40c980:	add	x9, x9, #0xd8a
  40c984:	adr	x10, 40c670 <wcrtomb@plt+0x7b30>
  40c988:	ldrh	w11, [x9, x8, lsl #1]
  40c98c:	add	x10, x10, x11, lsl #2
  40c990:	mov	w26, #0x33                  	// #51
  40c994:	br	x10
  40c998:	mov	w26, #0x36                  	// #54
  40c99c:	b	40ca9c <wcrtomb@plt+0x7f5c>
  40c9a0:	cbz	w25, 40c9fc <wcrtomb@plt+0x7ebc>
  40c9a4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40c9a8:	ldrb	w8, [x8, #3968]
  40c9ac:	cbz	w8, 40c9fc <wcrtomb@plt+0x7ebc>
  40c9b0:	ldr	x8, [x20, #136]
  40c9b4:	ldr	x9, [x20, #152]
  40c9b8:	cmp	x8, #0x0
  40c9bc:	add	x10, x8, #0x1ff
  40c9c0:	csel	x11, x10, x8, lt  // lt = tstop
  40c9c4:	tst	x8, #0x1ff
  40c9c8:	cset	w8, ne  // ne = any
  40c9cc:	cmp	x10, #0x3fe
  40c9d0:	cset	w10, hi  // hi = pmore
  40c9d4:	and	w8, w10, w8
  40c9d8:	add	x8, x8, x11, asr #9
  40c9dc:	cmp	x9, x8
  40c9e0:	b.ge	40c9fc <wcrtomb@plt+0x7ebc>  // b.tcont
  40c9e4:	mov	w0, w25
  40c9e8:	mov	x1, x20
  40c9ec:	bl	41f134 <wcrtomb@plt+0x1a5f4>
  40c9f0:	mov	w24, w0
  40c9f4:	cmp	w0, #0x3
  40c9f8:	b.ne	40ca0c <wcrtomb@plt+0x7ecc>  // b.any
  40c9fc:	mov	w0, w25
  40ca00:	mov	x1, x20
  40ca04:	bl	40d220 <wcrtomb@plt+0x86e0>
  40ca08:	mov	w24, w0
  40ca0c:	cmp	w24, #0x2
  40ca10:	b.cs	40ca38 <wcrtomb@plt+0x7ef8>  // b.hs, b.nlast
  40ca14:	mov	x0, x20
  40ca18:	bl	40d4b8 <wcrtomb@plt+0x8978>
  40ca1c:	cbnz	w24, 40ce3c <wcrtomb@plt+0x82fc>
  40ca20:	b	40cde0 <wcrtomb@plt+0x82a0>
  40ca24:	b.gt	40c5a4 <wcrtomb@plt+0x7a64>
  40ca28:	mov	x11, v0.d[1]
  40ca2c:	cmp	w11, w9
  40ca30:	b.pl	40c5a4 <wcrtomb@plt+0x7a64>  // b.nfrst
  40ca34:	b	40c7f8 <wcrtomb@plt+0x7cb8>
  40ca38:	cmp	w24, #0x3
  40ca3c:	b.ne	40ce3c <wcrtomb@plt+0x82fc>  // b.any
  40ca40:	bl	4045b0 <abort@plt>
  40ca44:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40ca48:	ldrb	w8, [x8, #3720]
  40ca4c:	tbz	w8, #5, 40ce70 <wcrtomb@plt+0x8330>
  40ca50:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ca54:	ldr	x8, [x8, #4064]
  40ca58:	cbz	x8, 40ca60 <wcrtomb@plt+0x7f20>
  40ca5c:	blr	x8
  40ca60:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40ca64:	add	x1, x1, #0x20
  40ca68:	mov	w2, #0x5                   	// #5
  40ca6c:	mov	x0, xzr
  40ca70:	bl	404900 <dcgettext@plt>
  40ca74:	mov	x20, x0
  40ca78:	mov	x0, x19
  40ca7c:	bl	444778 <argp_parse@@Base+0xcecc>
  40ca80:	mov	x3, x0
  40ca84:	mov	w0, wzr
  40ca88:	mov	w1, wzr
  40ca8c:	mov	x2, x20
  40ca90:	bl	403fa0 <error@plt>
  40ca94:	b	40ce70 <wcrtomb@plt+0x8330>
  40ca98:	mov	w26, #0x34                  	// #52
  40ca9c:	mov	w4, #0x1                   	// #1
  40caa0:	mov	w0, w23
  40caa4:	mov	x1, x21
  40caa8:	mov	x2, x20
  40caac:	mov	w3, wzr
  40cab0:	bl	428978 <wcrtomb@plt+0x23e38>
  40cab4:	mov	w0, w23
  40cab8:	mov	x1, x21
  40cabc:	mov	x2, x20
  40cac0:	mov	w3, wzr
  40cac4:	bl	42987c <wcrtomb@plt+0x24d3c>
  40cac8:	mov	w0, w23
  40cacc:	mov	x1, x21
  40cad0:	mov	x2, x20
  40cad4:	mov	w3, wzr
  40cad8:	bl	429420 <wcrtomb@plt+0x248e0>
  40cadc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40cae0:	ldr	w8, [x8, #3872]
  40cae4:	cmp	w8, #0x1
  40cae8:	b.ne	40cb54 <wcrtomb@plt+0x8014>  // b.any
  40caec:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40caf0:	ldrb	w8, [x8, #3720]
  40caf4:	tbz	w8, #5, 40cb3c <wcrtomb@plt+0x7ffc>
  40caf8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40cafc:	ldr	x8, [x8, #4064]
  40cb00:	cbz	x8, 40cb08 <wcrtomb@plt+0x7fc8>
  40cb04:	blr	x8
  40cb08:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40cb0c:	add	x1, x1, #0x113
  40cb10:	mov	w2, #0x5                   	// #5
  40cb14:	mov	x0, xzr
  40cb18:	bl	404900 <dcgettext@plt>
  40cb1c:	mov	x20, x0
  40cb20:	mov	x0, x19
  40cb24:	bl	444778 <argp_parse@@Base+0xcecc>
  40cb28:	mov	x3, x0
  40cb2c:	mov	w0, wzr
  40cb30:	mov	w1, wzr
  40cb34:	mov	x2, x20
  40cb38:	bl	403fa0 <error@plt>
  40cb3c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40cb40:	ldrb	w8, [x8, #4009]
  40cb44:	cbnz	w8, 40ce70 <wcrtomb@plt+0x8330>
  40cb48:	mov	w0, #0x2                   	// #2
  40cb4c:	bl	424364 <wcrtomb@plt+0x1f824>
  40cb50:	b	40ce70 <wcrtomb@plt+0x8330>
  40cb54:	bl	4052f0 <wcrtomb@plt+0x7b0>
  40cb58:	mov	x21, x0
  40cb5c:	mov	x0, x20
  40cb60:	str	xzr, [x20, #136]
  40cb64:	bl	40b044 <wcrtomb@plt+0x6504>
  40cb68:	cbz	x0, 40ce70 <wcrtomb@plt+0x8330>
  40cb6c:	mov	x22, x0
  40cb70:	cmp	w26, #0x36
  40cb74:	strb	w26, [x0, #156]
  40cb78:	b.eq	40cbe0 <wcrtomb@plt+0x80a0>  // b.none
  40cb7c:	ldr	x8, [x20, #120]
  40cb80:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40cb84:	add	x4, x22, #0x149
  40cb88:	add	x6, x6, #0xf88
  40cb8c:	lsr	x9, x8, #8
  40cb90:	lsr	x0, x8, #63
  40cb94:	and	x8, x8, #0xfffff00000000000
  40cb98:	bfi	x8, x9, #32, #12
  40cb9c:	asr	x1, x8, #32
  40cba0:	mov	w2, #0x4                   	// #4
  40cba4:	mov	w5, #0x8                   	// #8
  40cba8:	mov	x3, xzr
  40cbac:	bl	40a988 <wcrtomb@plt+0x5e48>
  40cbb0:	ldr	x8, [x20, #120]
  40cbb4:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40cbb8:	add	x4, x22, #0x151
  40cbbc:	add	x6, x6, #0xf90
  40cbc0:	lsr	x9, x8, #12
  40cbc4:	bfxil	w9, w8, #0, #8
  40cbc8:	ubfx	x0, x8, #43, #1
  40cbcc:	sxtw	x1, w9
  40cbd0:	mov	w2, #0x4                   	// #4
  40cbd4:	mov	w5, #0x8                   	// #8
  40cbd8:	mov	x3, xzr
  40cbdc:	bl	40a988 <wcrtomb@plt+0x5e48>
  40cbe0:	mov	x0, x20
  40cbe4:	mov	x1, x22
  40cbe8:	mov	x2, x21
  40cbec:	bl	40bbbc <wcrtomb@plt+0x707c>
  40cbf0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40cbf4:	ldrb	w8, [x8, #3800]
  40cbf8:	cbz	w8, 40ce70 <wcrtomb@plt+0x8330>
  40cbfc:	mov	x0, x19
  40cc00:	mov	w1, wzr
  40cc04:	b	40ce6c <wcrtomb@plt+0x832c>
  40cc08:	ldr	x2, [x20, #136]
  40cc0c:	mov	w0, w23
  40cc10:	mov	x1, x21
  40cc14:	bl	4342f0 <wcrtomb@plt+0x2f7b0>
  40cc18:	mov	x24, x20
  40cc1c:	str	x0, [x24, #24]!
  40cc20:	cbz	x0, 40cf5c <wcrtomb@plt+0x841c>
  40cc24:	mov	w1, #0x4                   	// #4
  40cc28:	mov	x0, x24
  40cc2c:	bl	427c8c <wcrtomb@plt+0x2314c>
  40cc30:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40cc34:	ldr	w8, [x8, #3872]
  40cc38:	ldr	x0, [x24]
  40cc3c:	cmp	w8, #0x2
  40cc40:	mov	w8, #0x63                  	// #99
  40cc44:	cinc	x22, x8, ne  // ne = any
  40cc48:	bl	403f40 <strlen@plt>
  40cc4c:	cmp	x22, x0
  40cc50:	b.cs	40cc5c <wcrtomb@plt+0x811c>  // b.hs, b.nlast
  40cc54:	mov	x0, x20
  40cc58:	bl	40d5bc <wcrtomb@plt+0x8a7c>
  40cc5c:	mov	w0, w23
  40cc60:	mov	x1, x21
  40cc64:	mov	x2, x20
  40cc68:	mov	w3, wzr
  40cc6c:	bl	42987c <wcrtomb@plt+0x24d3c>
  40cc70:	mov	w0, w23
  40cc74:	mov	x1, x21
  40cc78:	mov	x2, x20
  40cc7c:	mov	w3, wzr
  40cc80:	bl	429420 <wcrtomb@plt+0x248e0>
  40cc84:	bl	4052f0 <wcrtomb@plt+0x7b0>
  40cc88:	mov	x21, x0
  40cc8c:	mov	x0, x20
  40cc90:	str	xzr, [x20, #136]
  40cc94:	bl	40b044 <wcrtomb@plt+0x6504>
  40cc98:	cbz	x0, 40ce70 <wcrtomb@plt+0x8330>
  40cc9c:	ldr	x8, [x24]
  40cca0:	mov	x1, x0
  40cca4:	mov	x9, xzr
  40cca8:	ldrb	w10, [x8, x9]
  40ccac:	add	x11, x1, x9
  40ccb0:	cmp	x9, #0x62
  40ccb4:	strb	w10, [x11, #157]
  40ccb8:	b.hi	40ccc4 <wcrtomb@plt+0x8184>  // b.pmore
  40ccbc:	add	x9, x9, #0x1
  40ccc0:	cbnz	w10, 40cca8 <wcrtomb@plt+0x8168>
  40ccc4:	mov	w8, #0x32                  	// #50
  40ccc8:	mov	x0, x20
  40cccc:	mov	x2, x21
  40ccd0:	strb	w8, [x1, #156]
  40ccd4:	bl	40bbbc <wcrtomb@plt+0x707c>
  40ccd8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ccdc:	ldrb	w8, [x8, #3800]
  40cce0:	cbz	w8, 40ccf0 <wcrtomb@plt+0x81b0>
  40cce4:	mov	x0, x19
  40cce8:	mov	w1, wzr
  40ccec:	bl	4280f8 <wcrtomb@plt+0x235b8>
  40ccf0:	mov	x0, x20
  40ccf4:	bl	40d4b8 <wcrtomb@plt+0x8978>
  40ccf8:	b	40ce70 <wcrtomb@plt+0x8330>
  40ccfc:	mov	w0, w23
  40cd00:	bl	404520 <close@plt>
  40cd04:	ldr	w8, [x25, #16]
  40cd08:	cmp	w8, #0x3
  40cd0c:	b.ne	40cda8 <wcrtomb@plt+0x8268>  // b.any
  40cd10:	ldr	x19, [x25]
  40cd14:	ldr	x21, [x20]
  40cd18:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40cd1c:	add	x1, x1, #0xfec
  40cd20:	mov	w2, #0x5                   	// #5
  40cd24:	mov	x0, xzr
  40cd28:	bl	404900 <dcgettext@plt>
  40cd2c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40cd30:	ldr	w8, [x8, #3700]
  40cd34:	cbz	w8, 40ce70 <wcrtomb@plt+0x8330>
  40cd38:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40cd3c:	ldrb	w8, [x8, #3720]
  40cd40:	tbz	w8, #2, 40ce70 <wcrtomb@plt+0x8330>
  40cd44:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40cd48:	ldr	x8, [x8, #4064]
  40cd4c:	mov	x20, x0
  40cd50:	cbz	x8, 40cd58 <wcrtomb@plt+0x8218>
  40cd54:	blr	x8
  40cd58:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40cd5c:	add	x1, x1, #0xda2
  40cd60:	mov	w2, #0x5                   	// #5
  40cd64:	mov	x0, xzr
  40cd68:	bl	404900 <dcgettext@plt>
  40cd6c:	mov	x22, x0
  40cd70:	mov	x0, x21
  40cd74:	bl	444778 <argp_parse@@Base+0xcecc>
  40cd78:	mov	x21, x0
  40cd7c:	mov	w0, #0x1                   	// #1
  40cd80:	mov	x1, x19
  40cd84:	bl	44438c <argp_parse@@Base+0xcae0>
  40cd88:	mov	x4, x0
  40cd8c:	mov	w0, wzr
  40cd90:	mov	w1, wzr
  40cd94:	mov	x2, x22
  40cd98:	mov	x3, x21
  40cd9c:	mov	x5, x20
  40cda0:	bl	403fa0 <error@plt>
  40cda4:	b	40ce70 <wcrtomb@plt+0x8330>
  40cda8:	mov	x0, x20
  40cdac:	bl	40bd1c <wcrtomb@plt+0x71dc>
  40cdb0:	cbz	x0, 40cdfc <wcrtomb@plt+0x82bc>
  40cdb4:	mov	x23, x0
  40cdb8:	mov	x0, x20
  40cdbc:	mov	x1, x23
  40cdc0:	bl	40d69c <wcrtomb@plt+0x8b5c>
  40cdc4:	mov	x0, x20
  40cdc8:	bl	40c2a8 <wcrtomb@plt+0x7768>
  40cdcc:	mov	x0, x23
  40cdd0:	bl	404700 <free@plt>
  40cdd4:	ldr	w25, [x20, #408]
  40cdd8:	tbnz	w25, #31, 40ce18 <wcrtomb@plt+0x82d8>
  40cddc:	ldr	w23, [x27]
  40cde0:	cbz	w25, 40ce08 <wcrtomb@plt+0x82c8>
  40cde4:	add	x2, sp, #0x30
  40cde8:	mov	w0, wzr
  40cdec:	mov	w1, w25
  40cdf0:	bl	4048e0 <__fxstat@plt>
  40cdf4:	cbnz	w0, 40ce24 <wcrtomb@plt+0x82e4>
  40cdf8:	b	40ceb0 <wcrtomb@plt+0x8370>
  40cdfc:	ldr	x0, [x20]
  40ce00:	bl	41c3c4 <wcrtomb@plt+0x17884>
  40ce04:	b	40ce3c <wcrtomb@plt+0x82fc>
  40ce08:	cbz	x22, 40ce90 <wcrtomb@plt+0x8350>
  40ce0c:	tbz	w23, #31, 40ce90 <wcrtomb@plt+0x8350>
  40ce10:	neg	w21, w23
  40ce14:	b	40ce1c <wcrtomb@plt+0x82dc>
  40ce18:	neg	w21, w25
  40ce1c:	bl	404a10 <__errno_location@plt>
  40ce20:	str	w21, [x0]
  40ce24:	cmp	x22, #0x0
  40ce28:	adrp	x2, 41c000 <wcrtomb@plt+0x174c0>
  40ce2c:	cset	w1, eq  // eq = none
  40ce30:	add	x2, x2, #0x40c
  40ce34:	mov	x0, x19
  40ce38:	bl	41c430 <wcrtomb@plt+0x178f0>
  40ce3c:	mov	w22, wzr
  40ce40:	mov	x0, x20
  40ce44:	bl	4243bc <wcrtomb@plt+0x1f87c>
  40ce48:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ce4c:	ldrb	w8, [x8, #3800]
  40ce50:	cbz	w8, 40ce70 <wcrtomb@plt+0x8330>
  40ce54:	cbz	w22, 40ce70 <wcrtomb@plt+0x8330>
  40ce58:	tbz	w0, #0, 40ce70 <wcrtomb@plt+0x8330>
  40ce5c:	ldr	w8, [sp, #28]
  40ce60:	mov	x0, x19
  40ce64:	cmp	w8, #0x4, lsl #12
  40ce68:	cset	w1, eq  // eq = none
  40ce6c:	bl	4280f8 <wcrtomb@plt+0x235b8>
  40ce70:	ldp	x20, x19, [sp, #272]
  40ce74:	ldp	x22, x21, [sp, #256]
  40ce78:	ldp	x24, x23, [sp, #240]
  40ce7c:	ldp	x26, x25, [sp, #224]
  40ce80:	ldp	x28, x27, [sp, #208]
  40ce84:	ldp	x29, x30, [sp, #192]
  40ce88:	add	sp, sp, #0x120
  40ce8c:	ret
  40ce90:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ce94:	ldr	w4, [x8, #3616]
  40ce98:	add	x3, sp, #0x30
  40ce9c:	mov	w0, wzr
  40cea0:	mov	w1, w23
  40cea4:	mov	x2, x21
  40cea8:	bl	404b20 <__fxstatat@plt>
  40ceac:	cbnz	w0, 40ce24 <wcrtomb@plt+0x82e4>
  40ceb0:	ldr	q0, [sp, #32]
  40ceb4:	ldr	x8, [sp, #152]
  40ceb8:	fmov	x9, d0
  40cebc:	cmp	x8, x9
  40cec0:	b.ne	40ced4 <wcrtomb@plt+0x8394>  // b.any
  40cec4:	ldr	x8, [sp, #160]
  40cec8:	mov	x9, v0.d[1]
  40cecc:	cmp	w8, w9
  40ced0:	b.eq	40ceec <wcrtomb@plt+0x83ac>  // b.none
  40ced4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ced8:	ldrb	w8, [x8, #3800]
  40cedc:	cmp	w8, #0x0
  40cee0:	cset	w8, eq  // eq = none
  40cee4:	orr	w8, w8, w26
  40cee8:	tbnz	w8, #0, 40cefc <wcrtomb@plt+0x83bc>
  40ceec:	ldr	x8, [sp, #96]
  40cef0:	ldr	x9, [sp, #16]
  40cef4:	cmp	x9, x8
  40cef8:	b.ge	40cf88 <wcrtomb@plt+0x8448>  // b.tcont
  40cefc:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40cf00:	ldrb	w8, [x8, #3720]
  40cf04:	tbz	w8, #4, 40cf4c <wcrtomb@plt+0x840c>
  40cf08:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40cf0c:	ldr	x8, [x8, #4064]
  40cf10:	cbz	x8, 40cf18 <wcrtomb@plt+0x83d8>
  40cf14:	blr	x8
  40cf18:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40cf1c:	add	x1, x1, #0x1
  40cf20:	mov	w2, #0x5                   	// #5
  40cf24:	mov	x0, xzr
  40cf28:	bl	404900 <dcgettext@plt>
  40cf2c:	mov	x21, x0
  40cf30:	mov	x0, x19
  40cf34:	bl	444778 <argp_parse@@Base+0xcecc>
  40cf38:	mov	x3, x0
  40cf3c:	mov	w0, wzr
  40cf40:	mov	w1, wzr
  40cf44:	mov	x2, x21
  40cf48:	bl	403fa0 <error@plt>
  40cf4c:	mov	w0, #0x1                   	// #1
  40cf50:	mov	w22, #0x1                   	// #1
  40cf54:	bl	424364 <wcrtomb@plt+0x1f824>
  40cf58:	b	40ce40 <wcrtomb@plt+0x8300>
  40cf5c:	bl	404a10 <__errno_location@plt>
  40cf60:	ldr	w8, [x0]
  40cf64:	cmp	w8, #0xc
  40cf68:	b.eq	40cfe8 <wcrtomb@plt+0x84a8>  // b.none
  40cf6c:	cmp	x22, #0x0
  40cf70:	adrp	x2, 41c000 <wcrtomb@plt+0x174c0>
  40cf74:	cset	w1, eq  // eq = none
  40cf78:	add	x2, x2, #0x3a0
  40cf7c:	mov	x0, x19
  40cf80:	bl	41c430 <wcrtomb@plt+0x178f0>
  40cf84:	b	40ce70 <wcrtomb@plt+0x8330>
  40cf88:	ldr	w8, [sp, #28]
  40cf8c:	ldr	x9, [sp, #16]
  40cf90:	mov	w22, #0x1                   	// #1
  40cf94:	cmp	w8, #0x4, lsl #12
  40cf98:	cset	w8, ne  // ne = any
  40cf9c:	cmp	x9, #0x0
  40cfa0:	cset	w9, eq  // eq = none
  40cfa4:	and	w8, w9, w8
  40cfa8:	tbnz	w8, #0, 40ce40 <wcrtomb@plt+0x8300>
  40cfac:	cbz	w25, 40ce40 <wcrtomb@plt+0x8300>
  40cfb0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40cfb4:	ldr	w8, [x8, #3612]
  40cfb8:	cmp	w8, #0x1
  40cfbc:	b.ne	40ce40 <wcrtomb@plt+0x8300>  // b.any
  40cfc0:	ldp	x3, x4, [x20, #216]
  40cfc4:	mov	w0, w25
  40cfc8:	mov	w1, w23
  40cfcc:	mov	x2, x21
  40cfd0:	bl	41be5c <wcrtomb@plt+0x1731c>
  40cfd4:	cbz	w0, 40cfe0 <wcrtomb@plt+0x84a0>
  40cfd8:	mov	x0, x19
  40cfdc:	bl	42b3cc <wcrtomb@plt+0x2688c>
  40cfe0:	mov	w22, #0x1                   	// #1
  40cfe4:	b	40ce40 <wcrtomb@plt+0x8300>
  40cfe8:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  40cfec:	stp	x29, x30, [sp, #-32]!
  40cff0:	stp	x20, x19, [sp, #16]
  40cff4:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40cff8:	ldr	w8, [x20, #960]
  40cffc:	mov	x19, x0
  40d000:	mov	x29, sp
  40d004:	cbnz	w8, 40d030 <wcrtomb@plt+0x84f0>
  40d008:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40d00c:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d010:	add	x0, x0, #0xf06
  40d014:	add	x1, x1, #0x3c0
  40d018:	bl	41c788 <wcrtomb@plt+0x17c48>
  40d01c:	cbz	w0, 40d028 <wcrtomb@plt+0x84e8>
  40d020:	ldr	w8, [x20, #960]
  40d024:	b	40d030 <wcrtomb@plt+0x84f0>
  40d028:	mov	w8, #0xfffffffe            	// #-2
  40d02c:	str	w8, [x20, #960]
  40d030:	str	wzr, [x19]
  40d034:	ldp	x20, x19, [sp, #16]
  40d038:	mov	w0, w8
  40d03c:	ldp	x29, x30, [sp], #32
  40d040:	ret
  40d044:	stp	x29, x30, [sp, #-32]!
  40d048:	stp	x20, x19, [sp, #16]
  40d04c:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d050:	ldr	w8, [x20, #964]
  40d054:	mov	x19, x0
  40d058:	mov	x29, sp
  40d05c:	cbnz	w8, 40d088 <wcrtomb@plt+0x8548>
  40d060:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40d064:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d068:	add	x0, x0, #0xf06
  40d06c:	add	x1, x1, #0x3c4
  40d070:	bl	41c83c <wcrtomb@plt+0x17cfc>
  40d074:	cbz	w0, 40d080 <wcrtomb@plt+0x8540>
  40d078:	ldr	w8, [x20, #964]
  40d07c:	b	40d088 <wcrtomb@plt+0x8548>
  40d080:	mov	w8, #0xfffffffe            	// #-2
  40d084:	str	w8, [x20, #964]
  40d088:	str	wzr, [x19]
  40d08c:	ldp	x20, x19, [sp, #16]
  40d090:	mov	w0, w8
  40d094:	ldp	x29, x30, [sp], #32
  40d098:	ret
  40d09c:	stp	x29, x30, [sp, #-64]!
  40d0a0:	stp	x22, x21, [sp, #32]
  40d0a4:	mov	x21, x0
  40d0a8:	mov	x0, x1
  40d0ac:	stp	x24, x23, [sp, #16]
  40d0b0:	stp	x20, x19, [sp, #48]
  40d0b4:	mov	x29, sp
  40d0b8:	mov	w22, w2
  40d0bc:	mov	x20, x1
  40d0c0:	bl	403f40 <strlen@plt>
  40d0c4:	add	x19, x0, #0x1
  40d0c8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40d0cc:	add	x0, x0, #0xf7a
  40d0d0:	mov	x1, x19
  40d0d4:	mov	x2, xzr
  40d0d8:	bl	40adb0 <wcrtomb@plt+0x6270>
  40d0dc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d0e0:	ldrb	w8, [x8, #3728]
  40d0e4:	mov	x23, x0
  40d0e8:	cbnz	w8, 40d170 <wcrtomb@plt+0x8630>
  40d0ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d0f0:	ldr	x8, [x8, #968]
  40d0f4:	cbnz	x8, 40d120 <wcrtomb@plt+0x85e0>
  40d0f8:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d0fc:	add	x24, x24, #0x3c8
  40d100:	mov	w0, wzr
  40d104:	mov	x1, x24
  40d108:	bl	41c650 <wcrtomb@plt+0x17b10>
  40d10c:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d110:	add	x1, x1, #0x3d0
  40d114:	mov	w0, wzr
  40d118:	bl	41c6ec <wcrtomb@plt+0x17bac>
  40d11c:	ldr	x8, [x24]
  40d120:	mov	x9, xzr
  40d124:	add	x10, x23, #0x109
  40d128:	ldrb	w11, [x8, x9]
  40d12c:	cmp	x9, #0x1e
  40d130:	strb	w11, [x10, x9]
  40d134:	b.hi	40d140 <wcrtomb@plt+0x8600>  // b.pmore
  40d138:	add	x9, x9, #0x1
  40d13c:	cbnz	w11, 40d128 <wcrtomb@plt+0x85e8>
  40d140:	strb	wzr, [x23, #296]
  40d144:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d148:	ldr	x9, [x9, #976]
  40d14c:	mov	x8, xzr
  40d150:	add	x10, x23, #0x129
  40d154:	ldrb	w11, [x9, x8]
  40d158:	cmp	x8, #0x1e
  40d15c:	strb	w11, [x10, x8]
  40d160:	b.hi	40d16c <wcrtomb@plt+0x862c>  // b.pmore
  40d164:	add	x8, x8, #0x1
  40d168:	cbnz	w11, 40d154 <wcrtomb@plt+0x8614>
  40d16c:	strb	wzr, [x23, #328]
  40d170:	mov	x9, #0x7375                	// #29557
  40d174:	movk	x9, #0x6174, lsl #16
  40d178:	movk	x9, #0x2072, lsl #32
  40d17c:	add	x8, x23, #0x101
  40d180:	movk	x9, #0x20, lsl #48
  40d184:	mov	x2, #0xffffffffffffffff    	// #-1
  40d188:	mov	x0, x21
  40d18c:	mov	x1, x23
  40d190:	str	x9, [x8]
  40d194:	strb	w22, [x23, #156]
  40d198:	bl	40bbbc <wcrtomb@plt+0x707c>
  40d19c:	bl	40535c <wcrtomb@plt+0x81c>
  40d1a0:	mov	x21, x0
  40d1a4:	bl	4056b4 <wcrtomb@plt+0xb74>
  40d1a8:	mov	x22, x0
  40d1ac:	cmp	x0, x19
  40d1b0:	b.cs	40d1e0 <wcrtomb@plt+0x86a0>  // b.hs, b.nlast
  40d1b4:	mov	x0, x21
  40d1b8:	mov	x1, x20
  40d1bc:	mov	x2, x22
  40d1c0:	bl	403ec0 <memcpy@plt>
  40d1c4:	sub	x8, x22, #0x1
  40d1c8:	and	x8, x8, #0xfffffffffffffe00
  40d1cc:	add	x0, x21, x8
  40d1d0:	add	x20, x20, x22
  40d1d4:	sub	x19, x19, x22
  40d1d8:	bl	405670 <wcrtomb@plt+0xb30>
  40d1dc:	b	40d19c <wcrtomb@plt+0x865c>
  40d1e0:	mov	x0, x21
  40d1e4:	mov	x1, x20
  40d1e8:	mov	x2, x19
  40d1ec:	bl	403ec0 <memcpy@plt>
  40d1f0:	add	x0, x21, x19
  40d1f4:	sub	x2, x22, x19
  40d1f8:	mov	w1, wzr
  40d1fc:	bl	404360 <memset@plt>
  40d200:	sub	x8, x19, #0x1
  40d204:	and	x8, x8, #0xfffffffffffffe00
  40d208:	add	x0, x21, x8
  40d20c:	ldp	x20, x19, [sp, #48]
  40d210:	ldp	x22, x21, [sp, #32]
  40d214:	ldp	x24, x23, [sp, #16]
  40d218:	ldp	x29, x30, [sp], #64
  40d21c:	b	405670 <wcrtomb@plt+0xb30>
  40d220:	sub	sp, sp, #0x80
  40d224:	stp	x29, x30, [sp, #32]
  40d228:	stp	x26, x25, [sp, #64]
  40d22c:	stp	x24, x23, [sp, #80]
  40d230:	stp	x22, x21, [sp, #96]
  40d234:	stp	x20, x19, [sp, #112]
  40d238:	ldr	x21, [x1, #136]
  40d23c:	str	x27, [sp, #48]
  40d240:	add	x29, sp, #0x20
  40d244:	mov	x19, x1
  40d248:	mov	w22, w0
  40d24c:	bl	4052f0 <wcrtomb@plt+0x7b0>
  40d250:	mov	x20, x0
  40d254:	mov	x0, x19
  40d258:	bl	40b044 <wcrtomb@plt+0x6504>
  40d25c:	cbz	x0, 40d414 <wcrtomb@plt+0x88d4>
  40d260:	mov	x1, x0
  40d264:	mov	x0, x19
  40d268:	mov	x2, x20
  40d26c:	bl	40bbbc <wcrtomb@plt+0x707c>
  40d270:	ldr	x1, [x19, #136]
  40d274:	ldr	x0, [x19, #8]
  40d278:	mov	x2, x1
  40d27c:	bl	404c5c <wcrtomb@plt+0x11c>
  40d280:	mov	w27, #0x200                 	// #512
  40d284:	cmp	x21, #0x1
  40d288:	b.lt	40d41c <wcrtomb@plt+0x88dc>  // b.tstop
  40d28c:	mov	x26, x21
  40d290:	bl	40535c <wcrtomb@plt+0x81c>
  40d294:	mov	x24, x0
  40d298:	bl	4056b4 <wcrtomb@plt+0xb74>
  40d29c:	mov	x20, x0
  40d2a0:	cmp	x21, x0
  40d2a4:	b.cs	40d2c8 <wcrtomb@plt+0x8788>  // b.hs, b.nlast
  40d2a8:	ands	x8, x26, #0x1ff
  40d2ac:	mov	x20, x26
  40d2b0:	b.eq	40d2c8 <wcrtomb@plt+0x8788>  // b.none
  40d2b4:	add	x0, x24, x26
  40d2b8:	sub	x2, x27, x8
  40d2bc:	mov	w1, wzr
  40d2c0:	bl	404360 <memset@plt>
  40d2c4:	mov	x20, x26
  40d2c8:	cmp	w22, #0x1
  40d2cc:	mov	x25, x20
  40d2d0:	b.lt	40d2e8 <wcrtomb@plt+0x87a8>  // b.tstop
  40d2d4:	mov	w0, w22
  40d2d8:	mov	x1, x24
  40d2dc:	mov	x2, x20
  40d2e0:	bl	41bd20 <wcrtomb@plt+0x171e0>
  40d2e4:	mov	x25, x0
  40d2e8:	cmn	x25, #0x1
  40d2ec:	b.eq	40d424 <wcrtomb@plt+0x88e4>  // b.none
  40d2f0:	sub	x8, x20, #0x1
  40d2f4:	and	x8, x8, #0xfffffffffffffe00
  40d2f8:	add	x0, x24, x8
  40d2fc:	sub	x21, x26, x25
  40d300:	bl	405670 <wcrtomb@plt+0xb30>
  40d304:	subs	x23, x20, x25
  40d308:	b.eq	40d284 <wcrtomb@plt+0x8744>  // b.none
  40d30c:	add	x0, x24, x25
  40d310:	mov	w1, wzr
  40d314:	mov	x2, x23
  40d318:	bl	404360 <memset@plt>
  40d31c:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40d320:	ldrb	w8, [x8, #3720]
  40d324:	tbz	w8, #7, 40d390 <wcrtomb@plt+0x8850>
  40d328:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d32c:	ldr	x8, [x8, #4064]
  40d330:	cbz	x8, 40d338 <wcrtomb@plt+0x87f8>
  40d334:	blr	x8
  40d338:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40d33c:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40d340:	add	x1, x1, #0x85
  40d344:	add	x2, x2, #0xb4
  40d348:	mov	w4, #0x5                   	// #5
  40d34c:	mov	x0, xzr
  40d350:	mov	x3, x21
  40d354:	bl	404820 <dcngettext@plt>
  40d358:	ldr	x8, [x19]
  40d35c:	mov	x19, x0
  40d360:	mov	x0, x8
  40d364:	bl	444778 <argp_parse@@Base+0xcecc>
  40d368:	mov	x22, x0
  40d36c:	add	x1, sp, #0x8
  40d370:	mov	x0, x21
  40d374:	bl	43d080 <argp_parse@@Base+0x57d4>
  40d378:	mov	x4, x0
  40d37c:	mov	w0, wzr
  40d380:	mov	w1, wzr
  40d384:	mov	x2, x19
  40d388:	mov	x3, x22
  40d38c:	bl	403fa0 <error@plt>
  40d390:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d394:	ldrb	w8, [x8, #4009]
  40d398:	cbnz	w8, 40d3a4 <wcrtomb@plt+0x8864>
  40d39c:	mov	w0, #0x1                   	// #1
  40d3a0:	bl	424364 <wcrtomb@plt+0x1f824>
  40d3a4:	sub	x8, x21, x23
  40d3a8:	cmp	x8, #0x1
  40d3ac:	b.lt	40d494 <wcrtomb@plt+0x8954>  // b.tstop
  40d3b0:	sub	x8, x26, x20
  40d3b4:	add	x19, x8, #0x200
  40d3b8:	bl	40535c <wcrtomb@plt+0x81c>
  40d3bc:	movi	v0.2d, #0x0
  40d3c0:	stp	q0, q0, [x0]
  40d3c4:	stp	q0, q0, [x0, #32]
  40d3c8:	stp	q0, q0, [x0, #64]
  40d3cc:	stp	q0, q0, [x0, #96]
  40d3d0:	stp	q0, q0, [x0, #128]
  40d3d4:	stp	q0, q0, [x0, #160]
  40d3d8:	stp	q0, q0, [x0, #192]
  40d3dc:	stp	q0, q0, [x0, #224]
  40d3e0:	stp	q0, q0, [x0, #256]
  40d3e4:	stp	q0, q0, [x0, #288]
  40d3e8:	stp	q0, q0, [x0, #320]
  40d3ec:	stp	q0, q0, [x0, #352]
  40d3f0:	stp	q0, q0, [x0, #384]
  40d3f4:	stp	q0, q0, [x0, #416]
  40d3f8:	stp	q0, q0, [x0, #448]
  40d3fc:	stp	q0, q0, [x0, #480]
  40d400:	bl	405670 <wcrtomb@plt+0xb30>
  40d404:	sub	x19, x19, #0x200
  40d408:	cmp	x19, #0x200
  40d40c:	b.gt	40d3b8 <wcrtomb@plt+0x8878>
  40d410:	b	40d494 <wcrtomb@plt+0x8954>
  40d414:	mov	w0, #0x2                   	// #2
  40d418:	b	40d498 <wcrtomb@plt+0x8958>
  40d41c:	mov	w0, wzr
  40d420:	b	40d498 <wcrtomb@plt+0x8958>
  40d424:	ldr	x8, [x19, #136]
  40d428:	ldr	x0, [x19]
  40d42c:	mov	x2, x20
  40d430:	sub	x1, x8, x26
  40d434:	bl	41c37c <wcrtomb@plt+0x1783c>
  40d438:	add	x19, x26, #0x200
  40d43c:	bl	40535c <wcrtomb@plt+0x81c>
  40d440:	movi	v0.2d, #0x0
  40d444:	stp	q0, q0, [x0]
  40d448:	stp	q0, q0, [x0, #32]
  40d44c:	stp	q0, q0, [x0, #64]
  40d450:	stp	q0, q0, [x0, #96]
  40d454:	stp	q0, q0, [x0, #128]
  40d458:	stp	q0, q0, [x0, #160]
  40d45c:	stp	q0, q0, [x0, #192]
  40d460:	stp	q0, q0, [x0, #224]
  40d464:	stp	q0, q0, [x0, #256]
  40d468:	stp	q0, q0, [x0, #288]
  40d46c:	stp	q0, q0, [x0, #320]
  40d470:	stp	q0, q0, [x0, #352]
  40d474:	stp	q0, q0, [x0, #384]
  40d478:	stp	q0, q0, [x0, #416]
  40d47c:	stp	q0, q0, [x0, #448]
  40d480:	stp	q0, q0, [x0, #480]
  40d484:	bl	405670 <wcrtomb@plt+0xb30>
  40d488:	sub	x19, x19, #0x200
  40d48c:	cmp	x19, #0x200
  40d490:	b.gt	40d43c <wcrtomb@plt+0x88fc>
  40d494:	mov	w0, #0x1                   	// #1
  40d498:	ldp	x20, x19, [sp, #112]
  40d49c:	ldp	x22, x21, [sp, #96]
  40d4a0:	ldp	x24, x23, [sp, #80]
  40d4a4:	ldp	x26, x25, [sp, #64]
  40d4a8:	ldr	x27, [sp, #48]
  40d4ac:	ldp	x29, x30, [sp, #32]
  40d4b0:	add	sp, sp, #0x80
  40d4b4:	ret
  40d4b8:	sub	sp, sp, #0x30
  40d4bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d4c0:	ldrb	w8, [x8, #3140]
  40d4c4:	stp	x29, x30, [sp, #16]
  40d4c8:	stp	x20, x19, [sp, #32]
  40d4cc:	add	x29, sp, #0x10
  40d4d0:	cbnz	w8, 40d5a4 <wcrtomb@plt+0x8a64>
  40d4d4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d4d8:	ldr	w8, [x8, #936]
  40d4dc:	ldr	w9, [x0, #108]
  40d4e0:	mov	x20, x0
  40d4e4:	cmp	w8, w9
  40d4e8:	b.cs	40d5a4 <wcrtomb@plt+0x8a64>  // b.hs, b.nlast
  40d4ec:	str	xzr, [sp, #8]
  40d4f0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d4f4:	ldr	x0, [x20]
  40d4f8:	ldrb	w2, [x8, #4008]
  40d4fc:	mov	w1, #0x1                   	// #1
  40d500:	bl	42b698 <wcrtomb@plt+0x26b58>
  40d504:	mov	x1, x0
  40d508:	add	x0, sp, #0x8
  40d50c:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  40d510:	add	x0, sp, #0x8
  40d514:	mov	w1, #0x2                   	// #2
  40d518:	bl	427c8c <wcrtomb@plt+0x2314c>
  40d51c:	ldr	x0, [sp, #8]
  40d520:	bl	403f40 <strlen@plt>
  40d524:	add	x0, x0, #0x15
  40d528:	bl	4459e8 <argp_parse@@Base+0xe13c>
  40d52c:	ldur	q0, [x20, #88]
  40d530:	ldr	x1, [sp, #8]
  40d534:	mov	x19, x0
  40d538:	str	q0, [x0]
  40d53c:	ldr	w8, [x20, #108]
  40d540:	str	w8, [x0, #16]
  40d544:	add	x0, x0, #0x14
  40d548:	bl	404840 <strcpy@plt>
  40d54c:	ldr	x0, [sp, #8]
  40d550:	bl	404700 <free@plt>
  40d554:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d558:	ldr	x0, [x20, #944]
  40d55c:	cbnz	x0, 40d584 <wcrtomb@plt+0x8a44>
  40d560:	adrp	x2, 40d000 <wcrtomb@plt+0x84c0>
  40d564:	adrp	x3, 40d000 <wcrtomb@plt+0x84c0>
  40d568:	add	x2, x2, #0xc24
  40d56c:	add	x3, x3, #0xc38
  40d570:	mov	x1, xzr
  40d574:	mov	x4, xzr
  40d578:	bl	43b9f4 <argp_parse@@Base+0x4148>
  40d57c:	str	x0, [x20, #944]
  40d580:	cbz	x0, 40d5b4 <wcrtomb@plt+0x8a74>
  40d584:	mov	x1, x19
  40d588:	bl	43c408 <argp_parse@@Base+0x4b5c>
  40d58c:	cbz	x0, 40d5b4 <wcrtomb@plt+0x8a74>
  40d590:	cmp	x0, x19
  40d594:	b.ne	40d5b8 <wcrtomb@plt+0x8a78>  // b.any
  40d598:	ldr	w8, [x19, #16]
  40d59c:	sub	w8, w8, #0x1
  40d5a0:	str	w8, [x19, #16]
  40d5a4:	ldp	x20, x19, [sp, #32]
  40d5a8:	ldp	x29, x30, [sp, #16]
  40d5ac:	add	sp, sp, #0x30
  40d5b0:	ret
  40d5b4:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  40d5b8:	bl	4045b0 <abort@plt>
  40d5bc:	stp	x29, x30, [sp, #-32]!
  40d5c0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d5c4:	ldr	w8, [x8, #3872]
  40d5c8:	str	x19, [sp, #16]
  40d5cc:	mov	x29, sp
  40d5d0:	cmp	w8, #0x6
  40d5d4:	b.hi	40d698 <wcrtomb@plt+0x8b58>  // b.pmore
  40d5d8:	mov	w9, #0x1                   	// #1
  40d5dc:	lsl	w9, w9, w8
  40d5e0:	mov	w10, #0x2a                  	// #42
  40d5e4:	mov	x19, x0
  40d5e8:	tst	w9, w10
  40d5ec:	b.eq	40d650 <wcrtomb@plt+0x8b10>  // b.none
  40d5f0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d5f4:	ldr	x8, [x8, #4064]
  40d5f8:	cbz	x8, 40d600 <wcrtomb@plt+0x8ac0>
  40d5fc:	blr	x8
  40d600:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40d604:	add	x1, x1, #0xed
  40d608:	mov	w2, #0x5                   	// #5
  40d60c:	mov	x0, xzr
  40d610:	bl	404900 <dcgettext@plt>
  40d614:	ldr	x8, [x19, #24]
  40d618:	mov	x19, x0
  40d61c:	mov	x0, x8
  40d620:	bl	444778 <argp_parse@@Base+0xcecc>
  40d624:	mov	x3, x0
  40d628:	mov	w0, wzr
  40d62c:	mov	w1, wzr
  40d630:	mov	x2, x19
  40d634:	bl	403fa0 <error@plt>
  40d638:	ldr	x19, [sp, #16]
  40d63c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d640:	mov	w9, #0x2                   	// #2
  40d644:	str	w9, [x8, #2416]
  40d648:	ldp	x29, x30, [sp], #32
  40d64c:	ret
  40d650:	mov	w10, #0x44                  	// #68
  40d654:	tst	w9, w10
  40d658:	b.eq	40d674 <wcrtomb@plt+0x8b34>  // b.none
  40d65c:	ldr	x1, [x19, #24]
  40d660:	mov	x0, x19
  40d664:	ldr	x19, [sp, #16]
  40d668:	mov	w2, #0x4b                  	// #75
  40d66c:	ldp	x29, x30, [sp], #32
  40d670:	b	40d09c <wcrtomb@plt+0x855c>
  40d674:	cmp	w8, #0x4
  40d678:	b.ne	40d698 <wcrtomb@plt+0x8b58>  // b.any
  40d67c:	mov	x1, x19
  40d680:	ldr	x19, [sp, #16]
  40d684:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40d688:	add	x0, x0, #0xe4
  40d68c:	mov	x2, xzr
  40d690:	ldp	x29, x30, [sp], #32
  40d694:	b	412c84 <wcrtomb@plt+0xe144>
  40d698:	bl	4045b0 <abort@plt>
  40d69c:	stp	x29, x30, [sp, #-96]!
  40d6a0:	str	x28, [sp, #16]
  40d6a4:	stp	x26, x25, [sp, #32]
  40d6a8:	stp	x24, x23, [sp, #48]
  40d6ac:	stp	x22, x21, [sp, #64]
  40d6b0:	stp	x20, x19, [sp, #80]
  40d6b4:	mov	x29, sp
  40d6b8:	sub	sp, sp, #0x1b0
  40d6bc:	ldr	x23, [x0, #392]
  40d6c0:	mov	x19, x0
  40d6c4:	mov	x20, x1
  40d6c8:	bl	4052f0 <wcrtomb@plt+0x7b0>
  40d6cc:	mov	x21, x0
  40d6d0:	mov	x0, x19
  40d6d4:	str	xzr, [x19, #136]
  40d6d8:	bl	40b044 <wcrtomb@plt+0x6504>
  40d6dc:	cbz	x0, 40da54 <wcrtomb@plt+0x8f14>
  40d6e0:	mov	x22, x0
  40d6e4:	mov	x0, x19
  40d6e8:	bl	40ea50 <wcrtomb@plt+0x9f10>
  40d6ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d6f0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d6f4:	ldr	w8, [x8, #3872]
  40d6f8:	ldrb	w9, [x9, #3089]
  40d6fc:	mov	w10, #0x35                  	// #53
  40d700:	mov	w11, #0x44                  	// #68
  40d704:	cmp	w8, #0x4
  40d708:	ccmp	w9, #0x0, #0x4, ne  // ne = any
  40d70c:	csel	w10, w11, w10, ne  // ne = any
  40d710:	strb	w10, [x22, #156]
  40d714:	cbz	w9, 40d774 <wcrtomb@plt+0x8c34>
  40d718:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d71c:	ldr	x9, [x24, #3072]
  40d720:	ldr	x0, [x9, #56]
  40d724:	cbz	x0, 40d784 <wcrtomb@plt+0x8c44>
  40d728:	cmp	w8, #0x4
  40d72c:	b.ne	40d80c <wcrtomb@plt+0x8ccc>  // b.any
  40d730:	bl	415928 <wcrtomb@plt+0x10de8>
  40d734:	mov	x2, x0
  40d738:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40d73c:	add	x0, x0, #0x33
  40d740:	mov	x1, x19
  40d744:	bl	412c84 <wcrtomb@plt+0xe144>
  40d748:	mov	x0, x19
  40d74c:	mov	x1, x22
  40d750:	mov	x2, x21
  40d754:	add	sp, sp, #0x1b0
  40d758:	ldp	x20, x19, [sp, #80]
  40d75c:	ldp	x22, x21, [sp, #64]
  40d760:	ldp	x24, x23, [sp, #48]
  40d764:	ldp	x26, x25, [sp, #32]
  40d768:	ldr	x28, [sp, #16]
  40d76c:	ldp	x29, x30, [sp], #96
  40d770:	b	40bbbc <wcrtomb@plt+0x707c>
  40d774:	mov	x0, x19
  40d778:	mov	x1, x22
  40d77c:	mov	x2, x21
  40d780:	bl	40bbbc <wcrtomb@plt+0x707c>
  40d784:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d788:	ldr	w8, [x8, #3732]
  40d78c:	cbz	w8, 40da54 <wcrtomb@plt+0x8f14>
  40d790:	cbz	x23, 40d7b4 <wcrtomb@plt+0x8c74>
  40d794:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d798:	ldrb	w8, [x8, #3141]
  40d79c:	cbz	w8, 40d7b4 <wcrtomb@plt+0x8c74>
  40d7a0:	ldr	x8, [x19, #392]
  40d7a4:	ldr	x9, [x19, #88]
  40d7a8:	ldr	x8, [x8, #88]
  40d7ac:	cmp	x8, x9
  40d7b0:	b.ne	40d8f0 <wcrtomb@plt+0x8db0>  // b.any
  40d7b4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d7b8:	ldr	x23, [x8, #928]
  40d7bc:	cbz	x23, 40d990 <wcrtomb@plt+0x8e50>
  40d7c0:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d7c4:	b	40d7d0 <wcrtomb@plt+0x8c90>
  40d7c8:	ldr	x23, [x23, #32]
  40d7cc:	cbz	x23, 40d990 <wcrtomb@plt+0x8e50>
  40d7d0:	ldr	x1, [x23]
  40d7d4:	ldr	w2, [x24, #3764]
  40d7d8:	mov	x0, x19
  40d7dc:	bl	40a770 <wcrtomb@plt+0x5c30>
  40d7e0:	tbnz	w0, #31, 40d7c8 <wcrtomb@plt+0x8c88>
  40d7e4:	ldr	x8, [x23, #24]
  40d7e8:	mov	w21, w0
  40d7ec:	cbz	x8, 40d96c <wcrtomb@plt+0x8e2c>
  40d7f0:	mov	w0, w21
  40d7f4:	blr	x8
  40d7f8:	mov	w22, w0
  40d7fc:	mov	w0, w21
  40d800:	bl	404520 <close@plt>
  40d804:	tbz	w22, #0, 40d7c8 <wcrtomb@plt+0x8c88>
  40d808:	b	40d974 <wcrtomb@plt+0x8e34>
  40d80c:	bl	4052f0 <wcrtomb@plt+0x7b0>
  40d810:	ldr	x8, [x24, #3072]
  40d814:	mov	x23, x0
  40d818:	ldr	x8, [x8, #56]
  40d81c:	mov	x0, x8
  40d820:	bl	415928 <wcrtomb@plt+0x10de8>
  40d824:	mov	x20, x0
  40d828:	bl	414aec <wcrtomb@plt+0xffac>
  40d82c:	mov	x21, x0
  40d830:	adrp	x6, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40d834:	add	x4, x22, #0x7c
  40d838:	lsr	x0, x0, #63
  40d83c:	add	x6, x6, #0xdf8
  40d840:	mov	w2, #0x8                   	// #8
  40d844:	mov	w5, #0xc                   	// #12
  40d848:	mov	x1, x21
  40d84c:	mov	x3, xzr
  40d850:	bl	40a988 <wcrtomb@plt+0x5e48>
  40d854:	mov	x0, x19
  40d858:	mov	x1, x22
  40d85c:	mov	x2, x23
  40d860:	bl	40bbbc <wcrtomb@plt+0x707c>
  40d864:	ldr	x0, [x19, #8]
  40d868:	mov	x1, x21
  40d86c:	mov	x2, x21
  40d870:	bl	404c5c <wcrtomb@plt+0x11c>
  40d874:	cmp	x21, #0x1
  40d878:	b.lt	40da54 <wcrtomb@plt+0x8f14>  // b.tstop
  40d87c:	mov	w23, #0x200                 	// #512
  40d880:	b	40d8b4 <wcrtomb@plt+0x8d74>
  40d884:	mov	x0, x19
  40d888:	mov	x1, x20
  40d88c:	mov	x2, x22
  40d890:	bl	403ec0 <memcpy@plt>
  40d894:	sub	x8, x22, #0x1
  40d898:	and	x8, x8, #0xfffffffffffffe00
  40d89c:	add	x0, x19, x8
  40d8a0:	sub	x21, x21, x22
  40d8a4:	add	x20, x20, x22
  40d8a8:	bl	405670 <wcrtomb@plt+0xb30>
  40d8ac:	cmp	x21, #0x0
  40d8b0:	b.le	40da54 <wcrtomb@plt+0x8f14>
  40d8b4:	bl	40535c <wcrtomb@plt+0x81c>
  40d8b8:	mov	x19, x0
  40d8bc:	bl	4056b4 <wcrtomb@plt+0xb74>
  40d8c0:	mov	x22, x0
  40d8c4:	cmp	x21, x0
  40d8c8:	b.cs	40d884 <wcrtomb@plt+0x8d44>  // b.hs, b.nlast
  40d8cc:	ands	x8, x21, #0x1ff
  40d8d0:	mov	x22, x21
  40d8d4:	b.eq	40d884 <wcrtomb@plt+0x8d44>  // b.none
  40d8d8:	add	x0, x19, x21
  40d8dc:	sub	x2, x23, x8
  40d8e0:	mov	w1, wzr
  40d8e4:	bl	404360 <memset@plt>
  40d8e8:	mov	x22, x21
  40d8ec:	b	40d884 <wcrtomb@plt+0x8d44>
  40d8f0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d8f4:	ldr	w8, [x8, #3700]
  40d8f8:	cbz	w8, 40da54 <wcrtomb@plt+0x8f14>
  40d8fc:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40d900:	ldrb	w8, [x8, #3722]
  40d904:	tbz	w8, #2, 40da54 <wcrtomb@plt+0x8f14>
  40d908:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d90c:	ldr	x8, [x8, #4064]
  40d910:	cbz	x8, 40d918 <wcrtomb@plt+0x8dd8>
  40d914:	blr	x8
  40d918:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40d91c:	add	x1, x1, #0x3f
  40d920:	mov	w2, #0x5                   	// #5
  40d924:	mov	x0, xzr
  40d928:	bl	404900 <dcgettext@plt>
  40d92c:	ldr	x8, [x19]
  40d930:	mov	x19, x0
  40d934:	mov	x0, x8
  40d938:	bl	444778 <argp_parse@@Base+0xcecc>
  40d93c:	mov	x3, x0
  40d940:	mov	w0, wzr
  40d944:	mov	w1, wzr
  40d948:	mov	x2, x19
  40d94c:	add	sp, sp, #0x1b0
  40d950:	ldp	x20, x19, [sp, #80]
  40d954:	ldp	x22, x21, [sp, #64]
  40d958:	ldp	x24, x23, [sp, #48]
  40d95c:	ldp	x26, x25, [sp, #32]
  40d960:	ldr	x28, [sp, #16]
  40d964:	ldp	x29, x30, [sp], #96
  40d968:	b	403fa0 <error@plt>
  40d96c:	mov	w0, w21
  40d970:	bl	404520 <close@plt>
  40d974:	ldr	w8, [x23, #16]
  40d978:	ldr	x21, [x23]
  40d97c:	cmp	w8, #0x2
  40d980:	b.eq	40da74 <wcrtomb@plt+0x8f34>  // b.none
  40d984:	cmp	w8, #0x1
  40d988:	b.eq	40db20 <wcrtomb@plt+0x8fe0>  // b.none
  40d98c:	cbnz	w8, 40da54 <wcrtomb@plt+0x8f14>
  40d990:	ldr	x0, [x19]
  40d994:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  40d998:	mov	x21, x0
  40d99c:	bl	403f40 <strlen@plt>
  40d9a0:	mov	x22, x0
  40d9a4:	mov	x0, x20
  40d9a8:	bl	403f40 <strlen@plt>
  40d9ac:	cbz	x0, 40da4c <wcrtomb@plt+0x8f0c>
  40d9b0:	mov	x23, x0
  40d9b4:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40d9b8:	mov	x25, x22
  40d9bc:	b	40d9e0 <wcrtomb@plt+0x8ea0>
  40d9c0:	add	x0, sp, #0x8
  40d9c4:	bl	424420 <wcrtomb@plt+0x1f8e0>
  40d9c8:	add	x8, x23, x20
  40d9cc:	add	x20, x8, #0x1
  40d9d0:	mov	x0, x20
  40d9d4:	bl	403f40 <strlen@plt>
  40d9d8:	mov	x23, x0
  40d9dc:	cbz	x0, 40da4c <wcrtomb@plt+0x8f0c>
  40d9e0:	add	x26, x23, x22
  40d9e4:	cmp	x25, x26
  40d9e8:	b.cs	40da00 <wcrtomb@plt+0x8ec0>  // b.hs, b.nlast
  40d9ec:	add	x1, x26, #0x1
  40d9f0:	mov	x0, x21
  40d9f4:	bl	445a68 <argp_parse@@Base+0xe1bc>
  40d9f8:	mov	x21, x0
  40d9fc:	mov	x25, x26
  40da00:	add	x0, x21, x22
  40da04:	mov	x1, x20
  40da08:	bl	404840 <strcpy@plt>
  40da0c:	mov	x0, x21
  40da10:	mov	x1, x19
  40da14:	bl	40eca0 <wcrtomb@plt+0xa160>
  40da18:	tbnz	w0, #0, 40d9c8 <wcrtomb@plt+0x8e88>
  40da1c:	add	x0, sp, #0x8
  40da20:	bl	42437c <wcrtomb@plt+0x1f83c>
  40da24:	add	x0, sp, #0x8
  40da28:	mov	x1, x20
  40da2c:	mov	x2, x21
  40da30:	str	x19, [sp, #400]
  40da34:	bl	40c3bc <wcrtomb@plt+0x787c>
  40da38:	ldr	x8, [x24, #3888]
  40da3c:	cbz	x8, 40d9c0 <wcrtomb@plt+0x8e80>
  40da40:	mov	x0, x19
  40da44:	bl	414bc0 <wcrtomb@plt+0x10080>
  40da48:	b	40d9c0 <wcrtomb@plt+0x8e80>
  40da4c:	mov	x0, x21
  40da50:	bl	404700 <free@plt>
  40da54:	add	sp, sp, #0x1b0
  40da58:	ldp	x20, x19, [sp, #80]
  40da5c:	ldp	x22, x21, [sp, #64]
  40da60:	ldp	x24, x23, [sp, #48]
  40da64:	ldp	x26, x25, [sp, #32]
  40da68:	ldr	x28, [sp, #16]
  40da6c:	ldp	x29, x30, [sp], #96
  40da70:	ret
  40da74:	ldr	x20, [x19]
  40da78:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40da7c:	add	x1, x1, #0x71
  40da80:	mov	w2, #0x5                   	// #5
  40da84:	mov	x0, xzr
  40da88:	bl	404900 <dcgettext@plt>
  40da8c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40da90:	ldr	w8, [x8, #3700]
  40da94:	cbz	w8, 40da54 <wcrtomb@plt+0x8f14>
  40da98:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40da9c:	ldrb	w8, [x8, #3720]
  40daa0:	tbz	w8, #2, 40da54 <wcrtomb@plt+0x8f14>
  40daa4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40daa8:	ldr	x8, [x8, #4064]
  40daac:	mov	x19, x0
  40dab0:	cbz	x8, 40dab8 <wcrtomb@plt+0x8f78>
  40dab4:	blr	x8
  40dab8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40dabc:	add	x1, x1, #0xda2
  40dac0:	mov	w2, #0x5                   	// #5
  40dac4:	mov	x0, xzr
  40dac8:	bl	404900 <dcgettext@plt>
  40dacc:	mov	x22, x0
  40dad0:	mov	x0, x20
  40dad4:	bl	444778 <argp_parse@@Base+0xcecc>
  40dad8:	mov	x20, x0
  40dadc:	mov	w0, #0x1                   	// #1
  40dae0:	mov	x1, x21
  40dae4:	bl	44438c <argp_parse@@Base+0xcae0>
  40dae8:	mov	x4, x0
  40daec:	mov	w0, wzr
  40daf0:	mov	w1, wzr
  40daf4:	mov	x2, x22
  40daf8:	mov	x3, x20
  40dafc:	mov	x5, x19
  40db00:	add	sp, sp, #0x1b0
  40db04:	ldp	x20, x19, [sp, #80]
  40db08:	ldp	x22, x21, [sp, #64]
  40db0c:	ldp	x24, x23, [sp, #48]
  40db10:	ldp	x26, x25, [sp, #32]
  40db14:	ldr	x28, [sp, #16]
  40db18:	ldp	x29, x30, [sp], #96
  40db1c:	b	403fa0 <error@plt>
  40db20:	ldr	x22, [x19]
  40db24:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40db28:	add	x1, x1, #0x71
  40db2c:	mov	w2, #0x5                   	// #5
  40db30:	mov	x0, xzr
  40db34:	bl	404900 <dcgettext@plt>
  40db38:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40db3c:	ldr	w8, [x8, #3700]
  40db40:	cbz	w8, 40dbb0 <wcrtomb@plt+0x9070>
  40db44:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40db48:	ldrb	w8, [x8, #3720]
  40db4c:	tbz	w8, #2, 40dbb0 <wcrtomb@plt+0x9070>
  40db50:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40db54:	ldr	x8, [x8, #4064]
  40db58:	mov	x20, x0
  40db5c:	cbz	x8, 40db64 <wcrtomb@plt+0x9024>
  40db60:	blr	x8
  40db64:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40db68:	add	x1, x1, #0xda2
  40db6c:	mov	w2, #0x5                   	// #5
  40db70:	mov	x0, xzr
  40db74:	bl	404900 <dcgettext@plt>
  40db78:	mov	x23, x0
  40db7c:	mov	x0, x22
  40db80:	bl	444778 <argp_parse@@Base+0xcecc>
  40db84:	mov	x22, x0
  40db88:	mov	w0, #0x1                   	// #1
  40db8c:	mov	x1, x21
  40db90:	bl	44438c <argp_parse@@Base+0xcae0>
  40db94:	mov	x4, x0
  40db98:	mov	w0, wzr
  40db9c:	mov	w1, wzr
  40dba0:	mov	x2, x23
  40dba4:	mov	x3, x22
  40dba8:	mov	x5, x20
  40dbac:	bl	403fa0 <error@plt>
  40dbb0:	ldr	x0, [x19]
  40dbb4:	bl	403f40 <strlen@plt>
  40dbb8:	mov	x20, x0
  40dbbc:	mov	x0, x21
  40dbc0:	bl	403f40 <strlen@plt>
  40dbc4:	add	x8, x20, x0
  40dbc8:	add	x0, x8, #0x1
  40dbcc:	bl	4459e8 <argp_parse@@Base+0xe13c>
  40dbd0:	ldr	x1, [x19]
  40dbd4:	mov	x20, x0
  40dbd8:	bl	404840 <strcpy@plt>
  40dbdc:	mov	x1, x21
  40dbe0:	bl	404340 <strcat@plt>
  40dbe4:	add	x0, sp, #0x8
  40dbe8:	bl	42437c <wcrtomb@plt+0x1f83c>
  40dbec:	add	x0, sp, #0x8
  40dbf0:	mov	x1, x21
  40dbf4:	mov	x2, x20
  40dbf8:	str	x19, [sp, #400]
  40dbfc:	bl	40c3bc <wcrtomb@plt+0x787c>
  40dc00:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dc04:	ldr	x8, [x8, #3888]
  40dc08:	cbz	x8, 40dc14 <wcrtomb@plt+0x90d4>
  40dc0c:	mov	x0, x19
  40dc10:	bl	414bc0 <wcrtomb@plt+0x10080>
  40dc14:	add	x0, sp, #0x8
  40dc18:	bl	424420 <wcrtomb@plt+0x1f8e0>
  40dc1c:	mov	x0, x20
  40dc20:	b	40da50 <wcrtomb@plt+0x8f10>
  40dc24:	ldp	x8, x9, [x0]
  40dc28:	eor	x8, x9, x8
  40dc2c:	udiv	x9, x8, x1
  40dc30:	msub	x0, x9, x1, x8
  40dc34:	ret
  40dc38:	ldp	x8, x11, [x1]
  40dc3c:	ldp	x9, x10, [x0]
  40dc40:	cmp	x9, x8
  40dc44:	cset	w8, eq  // eq = none
  40dc48:	cmp	x10, x11
  40dc4c:	cset	w9, eq  // eq = none
  40dc50:	and	w0, w8, w9
  40dc54:	ret
  40dc58:	sub	sp, sp, #0x80
  40dc5c:	stp	x29, x30, [sp, #32]
  40dc60:	stp	x28, x27, [sp, #48]
  40dc64:	stp	x26, x25, [sp, #64]
  40dc68:	stp	x24, x23, [sp, #80]
  40dc6c:	stp	x22, x21, [sp, #96]
  40dc70:	stp	x20, x19, [sp, #112]
  40dc74:	add	x29, sp, #0x20
  40dc78:	bl	41d81c <wcrtomb@plt+0x18cdc>
  40dc7c:	mov	w0, #0x2                   	// #2
  40dc80:	mov	w24, #0x2                   	// #2
  40dc84:	bl	405d50 <wcrtomb@plt+0x1210>
  40dc88:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dc8c:	ldr	x8, [x8, #3744]
  40dc90:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  40dc94:	add	x1, x1, #0x85
  40dc98:	ldr	x0, [x8]
  40dc9c:	bl	404660 <strcmp@plt>
  40dca0:	cmp	w0, #0x0
  40dca4:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dca8:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dcac:	adrp	x26, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40dcb0:	adrp	x22, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40dcb4:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x144b0>
  40dcb8:	mov	w19, wzr
  40dcbc:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dcc0:	add	x20, x20, #0xbd8
  40dcc4:	add	x21, x21, #0xc50
  40dcc8:	add	x26, x26, #0x158
  40dccc:	add	x22, x22, #0x164
  40dcd0:	cset	w8, eq  // eq = none
  40dcd4:	add	x23, x23, #0x467
  40dcd8:	strb	w8, [x25, #984]
  40dcdc:	mov	w2, #0x1                   	// #1
  40dce0:	mov	x0, x20
  40dce4:	mov	x1, x21
  40dce8:	mov	w27, w19
  40dcec:	bl	418578 <wcrtomb@plt+0x13a38>
  40dcf0:	mov	w19, w0
  40dcf4:	cmp	w0, #0x5
  40dcf8:	mov	w8, w0
  40dcfc:	b.hi	40dcdc <wcrtomb@plt+0x919c>  // b.pmore
  40dd00:	adr	x9, 40dd10 <wcrtomb@plt+0x91d0>
  40dd04:	ldrh	w10, [x26, x8, lsl #1]
  40dd08:	add	x9, x9, x10, lsl #2
  40dd0c:	br	x9
  40dd10:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dd14:	ldr	x0, [x8, #3160]
  40dd18:	bl	41eb34 <wcrtomb@plt+0x19ff4>
  40dd1c:	cbz	x0, 40dd88 <wcrtomb@plt+0x9248>
  40dd20:	ldr	x8, [x0, #48]
  40dd24:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dd28:	add	x8, x8, #0x1
  40dd2c:	str	x8, [x0, #48]
  40dd30:	ldr	x9, [x9, #3816]
  40dd34:	cbz	x9, 40dd90 <wcrtomb@plt+0x9250>
  40dd38:	cmp	x8, x9
  40dd3c:	b.ne	40dd94 <wcrtomb@plt+0x9254>  // b.any
  40dd40:	b	40de10 <wcrtomb@plt+0x92d0>
  40dd44:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dd48:	ldrb	w8, [x8, #3133]
  40dd4c:	cbz	w8, 40de08 <wcrtomb@plt+0x92c8>
  40dd50:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dd54:	ldr	x0, [x8, #3032]
  40dd58:	bl	405670 <wcrtomb@plt+0xb30>
  40dd5c:	b	40dcdc <wcrtomb@plt+0x919c>
  40dd60:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dd64:	ldr	x0, [x8, #3032]
  40dd68:	bl	405670 <wcrtomb@plt+0xb30>
  40dd6c:	sub	w8, w27, #0x1
  40dd70:	cmp	w8, #0x3
  40dd74:	b.cc	40ddcc <wcrtomb@plt+0x928c>  // b.lo, b.ul, b.last
  40dd78:	cbz	w27, 40dd9c <wcrtomb@plt+0x925c>
  40dd7c:	cmp	w27, #0x4
  40dd80:	b.ne	40dcdc <wcrtomb@plt+0x919c>  // b.any
  40dd84:	b	40e7c0 <wcrtomb@plt+0x9c80>
  40dd88:	bl	418e14 <wcrtomb@plt+0x142d4>
  40dd8c:	b	40dcdc <wcrtomb@plt+0x919c>
  40dd90:	cbnz	x8, 40de10 <wcrtomb@plt+0x92d0>
  40dd94:	bl	418e14 <wcrtomb@plt+0x142d4>
  40dd98:	b	40dcdc <wcrtomb@plt+0x919c>
  40dd9c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dda0:	ldr	x8, [x8, #4064]
  40dda4:	cbz	x8, 40ddac <wcrtomb@plt+0x926c>
  40dda8:	blr	x8
  40ddac:	mov	w2, #0x5                   	// #5
  40ddb0:	mov	x0, xzr
  40ddb4:	mov	x1, x23
  40ddb8:	bl	404900 <dcgettext@plt>
  40ddbc:	mov	x2, x0
  40ddc0:	mov	w0, wzr
  40ddc4:	mov	w1, wzr
  40ddc8:	bl	403fa0 <error@plt>
  40ddcc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ddd0:	ldr	x8, [x8, #4064]
  40ddd4:	cbz	x8, 40dddc <wcrtomb@plt+0x929c>
  40ddd8:	blr	x8
  40dddc:	mov	w2, #0x5                   	// #5
  40dde0:	mov	x0, xzr
  40dde4:	mov	x1, x22
  40dde8:	bl	404900 <dcgettext@plt>
  40ddec:	mov	x2, x0
  40ddf0:	mov	w0, wzr
  40ddf4:	mov	w1, wzr
  40ddf8:	bl	403fa0 <error@plt>
  40ddfc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40de00:	str	w24, [x8, #2416]
  40de04:	b	40dcdc <wcrtomb@plt+0x919c>
  40de08:	mov	w19, #0x4                   	// #4
  40de0c:	b	40de14 <wcrtomb@plt+0x92d4>
  40de10:	mov	w19, #0x1                   	// #1
  40de14:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40de18:	ldr	x8, [x8, #2896]
  40de1c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40de20:	ldr	x0, [x9, #3976]
  40de24:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40de28:	sub	x8, x8, #0x1
  40de2c:	str	x8, [x9, #2992]
  40de30:	bl	4459e8 <argp_parse@@Base+0xe13c>
  40de34:	sub	w8, w19, #0x1
  40de38:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40de3c:	cmp	w8, #0x1
  40de40:	str	x0, [x26, #992]
  40de44:	b.hi	40e794 <wcrtomb@plt+0x9c54>  // b.pmore
  40de48:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40de4c:	adrp	x28, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40de50:	ldr	x8, [x21, #2968]
  40de54:	ldr	x1, [x28, #2944]
  40de58:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40de5c:	strb	wzr, [x9, #2952]
  40de60:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40de64:	sub	x8, x8, x1
  40de68:	lsr	x9, x8, #9
  40de6c:	str	w9, [x24, #1000]
  40de70:	cbz	w9, 40de80 <wcrtomb@plt+0x9340>
  40de74:	sxtw	x8, w8
  40de78:	and	x2, x8, #0xfffffffffffffe00
  40de7c:	bl	403ec0 <memcpy@plt>
  40de80:	cmp	w19, #0x1
  40de84:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40de88:	b.ne	40def0 <wcrtomb@plt+0x93b0>  // b.any
  40de8c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40de90:	ldr	x0, [x8, #3032]
  40de94:	bl	405670 <wcrtomb@plt+0xb30>
  40de98:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40de9c:	ldr	x9, [x8, #3288]
  40dea0:	ldr	x10, [x27, #2904]
  40dea4:	ldr	x8, [x21, #2968]
  40dea8:	add	x11, x9, #0x1ff
  40deac:	add	x9, x9, #0x3fe
  40deb0:	cmp	x11, #0x0
  40deb4:	sub	x10, x10, x8
  40deb8:	csel	x9, x9, x11, lt  // lt = tstop
  40debc:	asr	x19, x9, #9
  40dec0:	asr	x9, x10, #9
  40dec4:	b	40dee0 <wcrtomb@plt+0x93a0>
  40dec8:	sub	x19, x19, x9
  40decc:	bl	4053c8 <wcrtomb@plt+0x888>
  40ded0:	ldr	x9, [x27, #2904]
  40ded4:	ldr	x8, [x21, #2968]
  40ded8:	sub	x9, x9, x8
  40dedc:	asr	x9, x9, #9
  40dee0:	cmp	x19, x9
  40dee4:	b.ge	40dec8 <wcrtomb@plt+0x9388>  // b.tcont
  40dee8:	add	x8, x8, x19, lsl #9
  40deec:	str	x8, [x21, #2968]
  40def0:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40def4:	b	40df04 <wcrtomb@plt+0x93c4>
  40def8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40defc:	ldr	x0, [x8, #3032]
  40df00:	bl	405670 <wcrtomb@plt+0xb30>
  40df04:	ldr	x8, [x21, #2968]
  40df08:	ldr	x9, [x27, #2904]
  40df0c:	cmp	x8, x9
  40df10:	b.ne	40df18 <wcrtomb@plt+0x93d8>  // b.any
  40df14:	bl	4053c8 <wcrtomb@plt+0x888>
  40df18:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40df1c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40df20:	add	x19, x19, #0xc50
  40df24:	add	x0, x0, #0xbd8
  40df28:	mov	x1, x19
  40df2c:	mov	w2, wzr
  40df30:	bl	418578 <wcrtomb@plt+0x13a38>
  40df34:	mov	w22, w0
  40df38:	mov	x0, x19
  40df3c:	bl	412524 <wcrtomb@plt+0xd9e4>
  40df40:	subs	w8, w22, #0x3
  40df44:	b.ne	40df54 <wcrtomb@plt+0x9414>  // b.any
  40df48:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40df4c:	ldrb	w9, [x9, #3133]
  40df50:	cbnz	w9, 40def8 <wcrtomb@plt+0x93b8>
  40df54:	cmp	w8, #0x1
  40df58:	b.ls	40e5ec <wcrtomb@plt+0x9aac>  // b.plast
  40df5c:	cmp	w22, #0x5
  40df60:	b.ne	40dfb4 <wcrtomb@plt+0x9474>  // b.any
  40df64:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40df68:	ldr	x8, [x8, #4064]
  40df6c:	cbz	x8, 40df74 <wcrtomb@plt+0x9434>
  40df70:	blr	x8
  40df74:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40df78:	mov	w2, #0x5                   	// #5
  40df7c:	mov	x0, xzr
  40df80:	add	x1, x1, #0x17c
  40df84:	bl	404900 <dcgettext@plt>
  40df88:	mov	x2, x0
  40df8c:	mov	w0, wzr
  40df90:	mov	w1, wzr
  40df94:	bl	403fa0 <error@plt>
  40df98:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40df9c:	ldr	x0, [x8, #3032]
  40dfa0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dfa4:	mov	w9, #0x2                   	// #2
  40dfa8:	str	w9, [x8, #2416]
  40dfac:	bl	405670 <wcrtomb@plt+0xb30>
  40dfb0:	b	40df04 <wcrtomb@plt+0x93c4>
  40dfb4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dfb8:	ldr	x0, [x8, #3160]
  40dfbc:	bl	41eb34 <wcrtomb@plt+0x19ff4>
  40dfc0:	cbz	x0, 40dfec <wcrtomb@plt+0x94ac>
  40dfc4:	ldr	x8, [x0, #48]
  40dfc8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dfcc:	add	x8, x8, #0x1
  40dfd0:	str	x8, [x0, #48]
  40dfd4:	ldr	x9, [x9, #3816]
  40dfd8:	cbz	x9, 40dfe8 <wcrtomb@plt+0x94a8>
  40dfdc:	cmp	x8, x9
  40dfe0:	b.ne	40dfec <wcrtomb@plt+0x94ac>  // b.any
  40dfe4:	b	40de8c <wcrtomb@plt+0x934c>
  40dfe8:	cbnz	x8, 40de8c <wcrtomb@plt+0x934c>
  40dfec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dff0:	ldr	x9, [x8, #3504]
  40dff4:	cbz	x9, 40e178 <wcrtomb@plt+0x9638>
  40dff8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40dffc:	ldr	x23, [x8, #3512]
  40e000:	ldr	w8, [x24, #1000]
  40e004:	lsr	x27, x9, #9
  40e008:	and	x10, x9, #0xfffffffffffffe00
  40e00c:	and	x9, x9, #0x1ff
  40e010:	stur	x9, [x29, #-8]
  40e014:	stp	x10, x23, [sp, #8]
  40e018:	cbnz	x27, 40e0c8 <wcrtomb@plt+0x9588>
  40e01c:	mov	w19, w8
  40e020:	ldr	x8, [x26, #992]
  40e024:	sxtw	x9, w19
  40e028:	ldur	x19, [x29, #-8]
  40e02c:	add	x0, x8, x9, lsl #9
  40e030:	ldp	x9, x8, [sp, #8]
  40e034:	mov	x2, x19
  40e038:	add	x1, x8, x9
  40e03c:	bl	403ec0 <memcpy@plt>
  40e040:	cmp	x19, #0x1ff
  40e044:	b.hi	40e068 <wcrtomb@plt+0x9528>  // b.pmore
  40e048:	ldr	x8, [x26, #992]
  40e04c:	ldrsw	x9, [x24, #1000]
  40e050:	mov	w1, wzr
  40e054:	add	x8, x8, x9, lsl #9
  40e058:	add	x0, x8, x19
  40e05c:	mov	w8, #0x200                 	// #512
  40e060:	sub	x2, x8, x19
  40e064:	bl	404360 <memset@plt>
  40e068:	ldr	w8, [x24, #1000]
  40e06c:	ldr	w9, [x20, #3804]
  40e070:	add	w27, w8, #0x1
  40e074:	cmp	w27, w9
  40e078:	str	w27, [x24, #1000]
  40e07c:	b.ne	40e3b0 <wcrtomb@plt+0x9870>  // b.any
  40e080:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e084:	ldr	x8, [x26, #992]
  40e088:	ldrb	w9, [x22, #984]
  40e08c:	ldr	x19, [x28, #2944]
  40e090:	str	x8, [x28, #2944]
  40e094:	cbz	w9, 40e350 <wcrtomb@plt+0x9810>
  40e098:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e09c:	mov	w8, #0x1                   	// #1
  40e0a0:	str	w8, [x23, #4032]
  40e0a4:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e0a8:	str	wzr, [x23, #4032]
  40e0ac:	b	40e378 <wcrtomb@plt+0x9838>
  40e0b0:	mov	w19, wzr
  40e0b4:	str	wzr, [x24, #1000]
  40e0b8:	subs	x27, x27, #0x1
  40e0bc:	add	x23, x23, #0x200
  40e0c0:	mov	w8, w19
  40e0c4:	b.eq	40e020 <wcrtomb@plt+0x94e0>  // b.none
  40e0c8:	ldr	x22, [x26, #992]
  40e0cc:	add	w19, w8, #0x1
  40e0d0:	sxtw	x8, w8
  40e0d4:	mov	w2, #0x200                 	// #512
  40e0d8:	add	x0, x22, x8, lsl #9
  40e0dc:	mov	x1, x23
  40e0e0:	str	w19, [x24, #1000]
  40e0e4:	bl	403ec0 <memcpy@plt>
  40e0e8:	ldr	w8, [x20, #3804]
  40e0ec:	cmp	w19, w8
  40e0f0:	b.ne	40e0b8 <wcrtomb@plt+0x9578>  // b.any
  40e0f4:	ldrb	w8, [x25, #984]
  40e0f8:	ldr	x19, [x28, #2944]
  40e0fc:	str	x22, [x28, #2944]
  40e100:	cbz	w8, 40e11c <wcrtomb@plt+0x95dc>
  40e104:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e108:	mov	w8, #0x1                   	// #1
  40e10c:	str	w8, [x22, #4032]
  40e110:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e114:	str	wzr, [x22, #4032]
  40e118:	b	40e144 <wcrtomb@plt+0x9604>
  40e11c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e120:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e124:	ldr	x8, [x8, #2912]
  40e128:	ldr	x9, [x9, #2992]
  40e12c:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e130:	ldr	x10, [x10, #2896]
  40e134:	add	x8, x9, x8
  40e138:	sub	x0, x8, x10
  40e13c:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e140:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e144:	ldrb	w8, [x25, #984]
  40e148:	str	x19, [x28, #2944]
  40e14c:	cbnz	w8, 40e0b0 <wcrtomb@plt+0x9570>
  40e150:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e154:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e158:	ldr	x8, [x8, #2896]
  40e15c:	ldr	x9, [x9, #2912]
  40e160:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e164:	ldr	x10, [x10, #2992]
  40e168:	sub	x8, x8, x9
  40e16c:	sub	x0, x8, x10
  40e170:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e174:	b	40e0b0 <wcrtomb@plt+0x9570>
  40e178:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e17c:	ldr	x23, [x8, #3024]
  40e180:	cbz	x23, 40e25c <wcrtomb@plt+0x971c>
  40e184:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e188:	ldr	x22, [x8, #3016]
  40e18c:	ldr	w8, [x24, #1000]
  40e190:	b	40e1ac <wcrtomb@plt+0x966c>
  40e194:	mov	w19, wzr
  40e198:	str	wzr, [x24, #1000]
  40e19c:	subs	x23, x23, #0x1
  40e1a0:	add	x22, x22, #0x200
  40e1a4:	mov	w8, w19
  40e1a8:	b.eq	40e25c <wcrtomb@plt+0x971c>  // b.none
  40e1ac:	ldr	x27, [x26, #992]
  40e1b0:	add	w19, w8, #0x1
  40e1b4:	sxtw	x8, w8
  40e1b8:	mov	w2, #0x200                 	// #512
  40e1bc:	add	x0, x27, x8, lsl #9
  40e1c0:	mov	x1, x22
  40e1c4:	str	w19, [x24, #1000]
  40e1c8:	bl	403ec0 <memcpy@plt>
  40e1cc:	ldr	w8, [x20, #3804]
  40e1d0:	cmp	w19, w8
  40e1d4:	b.ne	40e19c <wcrtomb@plt+0x965c>  // b.any
  40e1d8:	ldrb	w8, [x25, #984]
  40e1dc:	ldr	x19, [x28, #2944]
  40e1e0:	str	x27, [x28, #2944]
  40e1e4:	cbz	w8, 40e200 <wcrtomb@plt+0x96c0>
  40e1e8:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e1ec:	mov	w8, #0x1                   	// #1
  40e1f0:	str	w8, [x27, #4032]
  40e1f4:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e1f8:	str	wzr, [x27, #4032]
  40e1fc:	b	40e228 <wcrtomb@plt+0x96e8>
  40e200:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e204:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e208:	ldr	x8, [x8, #2912]
  40e20c:	ldr	x9, [x9, #2992]
  40e210:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e214:	ldr	x10, [x10, #2896]
  40e218:	add	x8, x9, x8
  40e21c:	sub	x0, x8, x10
  40e220:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e224:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e228:	ldrb	w8, [x25, #984]
  40e22c:	str	x19, [x28, #2944]
  40e230:	cbnz	w8, 40e194 <wcrtomb@plt+0x9654>
  40e234:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e238:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e23c:	ldr	x8, [x8, #2896]
  40e240:	ldr	x9, [x9, #2912]
  40e244:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e248:	ldr	x10, [x10, #2992]
  40e24c:	sub	x8, x8, x9
  40e250:	sub	x0, x8, x10
  40e254:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e258:	b	40e194 <wcrtomb@plt+0x9654>
  40e25c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e260:	ldr	x23, [x8, #3040]
  40e264:	ldr	w8, [x24, #1000]
  40e268:	cbz	x23, 40e348 <wcrtomb@plt+0x9808>
  40e26c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e270:	ldr	x22, [x9, #3048]
  40e274:	b	40e290 <wcrtomb@plt+0x9750>
  40e278:	mov	w27, wzr
  40e27c:	str	wzr, [x24, #1000]
  40e280:	subs	x23, x23, #0x1
  40e284:	add	x22, x22, #0x200
  40e288:	mov	w8, w27
  40e28c:	b.eq	40e3b0 <wcrtomb@plt+0x9870>  // b.none
  40e290:	ldr	x25, [x26, #992]
  40e294:	add	w27, w8, #0x1
  40e298:	sxtw	x8, w8
  40e29c:	mov	w2, #0x200                 	// #512
  40e2a0:	add	x0, x25, x8, lsl #9
  40e2a4:	mov	x1, x22
  40e2a8:	str	w27, [x24, #1000]
  40e2ac:	bl	403ec0 <memcpy@plt>
  40e2b0:	ldr	w8, [x20, #3804]
  40e2b4:	cmp	w27, w8
  40e2b8:	b.ne	40e280 <wcrtomb@plt+0x9740>  // b.any
  40e2bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e2c0:	ldrb	w8, [x8, #984]
  40e2c4:	ldr	x19, [x28, #2944]
  40e2c8:	str	x25, [x28, #2944]
  40e2cc:	cbz	w8, 40e2e8 <wcrtomb@plt+0x97a8>
  40e2d0:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e2d4:	mov	w8, #0x1                   	// #1
  40e2d8:	str	w8, [x25, #4032]
  40e2dc:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e2e0:	str	wzr, [x25, #4032]
  40e2e4:	b	40e310 <wcrtomb@plt+0x97d0>
  40e2e8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e2ec:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e2f0:	ldr	x8, [x8, #2912]
  40e2f4:	ldr	x9, [x9, #2992]
  40e2f8:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e2fc:	ldr	x10, [x10, #2896]
  40e300:	add	x8, x9, x8
  40e304:	sub	x0, x8, x10
  40e308:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e30c:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e310:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e314:	ldrb	w8, [x8, #984]
  40e318:	str	x19, [x28, #2944]
  40e31c:	cbnz	w8, 40e278 <wcrtomb@plt+0x9738>
  40e320:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e324:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e328:	ldr	x8, [x8, #2896]
  40e32c:	ldr	x9, [x9, #2912]
  40e330:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e334:	ldr	x10, [x10, #2992]
  40e338:	sub	x8, x8, x9
  40e33c:	sub	x0, x8, x10
  40e340:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e344:	b	40e278 <wcrtomb@plt+0x9738>
  40e348:	mov	w27, w8
  40e34c:	b	40e3b0 <wcrtomb@plt+0x9870>
  40e350:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e354:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e358:	ldr	x8, [x8, #2912]
  40e35c:	ldr	x9, [x9, #2992]
  40e360:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e364:	ldr	x10, [x10, #2896]
  40e368:	add	x8, x9, x8
  40e36c:	sub	x0, x8, x10
  40e370:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e374:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e378:	ldrb	w8, [x22, #984]
  40e37c:	str	x19, [x28, #2944]
  40e380:	cbnz	w8, 40e3a8 <wcrtomb@plt+0x9868>
  40e384:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e388:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e38c:	ldr	x8, [x8, #2896]
  40e390:	ldr	x9, [x9, #2912]
  40e394:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e398:	ldr	x10, [x10, #2992]
  40e39c:	sub	x8, x8, x9
  40e3a0:	sub	x0, x8, x10
  40e3a4:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e3a8:	mov	w27, wzr
  40e3ac:	str	wzr, [x24, #1000]
  40e3b0:	ldr	x8, [x26, #992]
  40e3b4:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e3b8:	ldr	x1, [x19, #3032]
  40e3bc:	sxtw	x9, w27
  40e3c0:	add	x0, x8, x9, lsl #9
  40e3c4:	mov	w2, #0x200                 	// #512
  40e3c8:	bl	403ec0 <memcpy@plt>
  40e3cc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e3d0:	ldr	x8, [x8, #3288]
  40e3d4:	ldr	x0, [x19, #3032]
  40e3d8:	add	w9, w27, #0x1
  40e3dc:	str	w9, [x24, #1000]
  40e3e0:	add	x9, x8, #0x1ff
  40e3e4:	add	x23, x8, #0x3fe
  40e3e8:	cmp	x9, #0x0
  40e3ec:	csel	x22, x23, x9, lt  // lt = tstop
  40e3f0:	bl	405670 <wcrtomb@plt+0xb30>
  40e3f4:	ldr	w8, [x24, #1000]
  40e3f8:	ldr	w9, [x20, #3804]
  40e3fc:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e400:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e404:	cmp	w8, w9
  40e408:	b.ne	40e49c <wcrtomb@plt+0x995c>  // b.any
  40e40c:	ldr	x8, [x26, #992]
  40e410:	ldrb	w9, [x25, #984]
  40e414:	ldr	x19, [x28, #2944]
  40e418:	str	x8, [x28, #2944]
  40e41c:	cbz	w9, 40e43c <wcrtomb@plt+0x98fc>
  40e420:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e424:	mov	w8, #0x1                   	// #1
  40e428:	str	w8, [x27, #4032]
  40e42c:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e430:	str	wzr, [x27, #4032]
  40e434:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e438:	b	40e464 <wcrtomb@plt+0x9924>
  40e43c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e440:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e444:	ldr	x8, [x8, #2912]
  40e448:	ldr	x9, [x9, #2992]
  40e44c:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e450:	ldr	x10, [x10, #2896]
  40e454:	add	x8, x9, x8
  40e458:	sub	x0, x8, x10
  40e45c:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e460:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e464:	ldrb	w8, [x25, #984]
  40e468:	str	x19, [x28, #2944]
  40e46c:	cbnz	w8, 40e494 <wcrtomb@plt+0x9954>
  40e470:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e474:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e478:	ldr	x8, [x8, #2896]
  40e47c:	ldr	x9, [x9, #2912]
  40e480:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e484:	ldr	x10, [x10, #2992]
  40e488:	sub	x8, x8, x9
  40e48c:	sub	x0, x8, x10
  40e490:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e494:	mov	w8, wzr
  40e498:	str	wzr, [x24, #1000]
  40e49c:	cmp	x23, #0x3ff
  40e4a0:	b.cc	40df04 <wcrtomb@plt+0x93c4>  // b.lo, b.ul, b.last
  40e4a4:	ldr	x9, [x27, #2904]
  40e4a8:	ldr	x1, [x21, #2968]
  40e4ac:	asr	x22, x22, #9
  40e4b0:	sub	x10, x9, x1
  40e4b4:	lsr	x10, x10, #9
  40e4b8:	cmp	x22, w10, sxtw
  40e4bc:	csel	w23, w22, w10, lt  // lt = tstop
  40e4c0:	cmp	x1, x9
  40e4c4:	b.eq	40e4d0 <wcrtomb@plt+0x9990>  // b.none
  40e4c8:	ldr	w9, [x20, #3804]
  40e4cc:	b	40e4ec <wcrtomb@plt+0x99ac>
  40e4d0:	bl	405858 <wcrtomb@plt+0xd18>
  40e4d4:	ldrsw	x9, [x20, #3804]
  40e4d8:	ldr	x1, [x28, #2944]
  40e4dc:	ldr	w8, [x24, #1000]
  40e4e0:	cmp	x22, x9
  40e4e4:	csel	w23, w22, w9, lt  // lt = tstop
  40e4e8:	str	x1, [x21, #2968]
  40e4ec:	sub	w9, w9, w8
  40e4f0:	cmp	w9, w23
  40e4f4:	csel	w19, w9, w23, lt  // lt = tstop
  40e4f8:	cbz	w19, 40e7c0 <wcrtomb@plt+0x9c80>
  40e4fc:	ldr	x9, [x26, #992]
  40e500:	sxtw	x8, w8
  40e504:	lsl	w10, w19, #9
  40e508:	sxtw	x2, w10
  40e50c:	add	x0, x9, x8, lsl #9
  40e510:	bl	403ec0 <memcpy@plt>
  40e514:	ldr	w8, [x24, #1000]
  40e518:	ldr	x9, [x21, #2968]
  40e51c:	ldr	w11, [x20, #3804]
  40e520:	sxtw	x10, w19
  40e524:	add	w8, w8, w19
  40e528:	sub	x22, x22, x10
  40e52c:	add	x9, x9, x10, lsl #9
  40e530:	cmp	w8, w11
  40e534:	sub	w23, w23, w19
  40e538:	str	w8, [x24, #1000]
  40e53c:	str	x9, [x21, #2968]
  40e540:	b.ne	40e5d4 <wcrtomb@plt+0x9a94>  // b.any
  40e544:	ldr	x8, [x26, #992]
  40e548:	ldrb	w9, [x25, #984]
  40e54c:	ldr	x19, [x28, #2944]
  40e550:	str	x8, [x28, #2944]
  40e554:	cbz	w9, 40e574 <wcrtomb@plt+0x9a34>
  40e558:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e55c:	mov	w8, #0x1                   	// #1
  40e560:	str	w8, [x27, #4032]
  40e564:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e568:	str	wzr, [x27, #4032]
  40e56c:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e570:	b	40e59c <wcrtomb@plt+0x9a5c>
  40e574:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e578:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e57c:	ldr	x8, [x8, #2912]
  40e580:	ldr	x9, [x9, #2992]
  40e584:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e588:	ldr	x10, [x10, #2896]
  40e58c:	add	x8, x9, x8
  40e590:	sub	x0, x8, x10
  40e594:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e598:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e59c:	ldrb	w8, [x25, #984]
  40e5a0:	str	x19, [x28, #2944]
  40e5a4:	cbnz	w8, 40e5cc <wcrtomb@plt+0x9a8c>
  40e5a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e5ac:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e5b0:	ldr	x8, [x8, #2896]
  40e5b4:	ldr	x9, [x9, #2912]
  40e5b8:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e5bc:	ldr	x10, [x10, #2992]
  40e5c0:	sub	x8, x8, x9
  40e5c4:	sub	x0, x8, x10
  40e5c8:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e5cc:	mov	w8, wzr
  40e5d0:	str	wzr, [x24, #1000]
  40e5d4:	cbz	x22, 40df04 <wcrtomb@plt+0x93c4>
  40e5d8:	ldr	x1, [x21, #2968]
  40e5dc:	ldr	x9, [x27, #2904]
  40e5e0:	cmp	x1, x9
  40e5e4:	b.ne	40e4c8 <wcrtomb@plt+0x9988>  // b.any
  40e5e8:	b	40e4d0 <wcrtomb@plt+0x9990>
  40e5ec:	ldrsw	x8, [x24, #1000]
  40e5f0:	ldr	w9, [x20, #3804]
  40e5f4:	ldr	x10, [x26, #992]
  40e5f8:	mov	w1, wzr
  40e5fc:	sub	w21, w9, w8
  40e600:	add	x0, x10, x8, lsl #9
  40e604:	lsl	w8, w21, #9
  40e608:	sxtw	x2, w8
  40e60c:	bl	404360 <memset@plt>
  40e610:	ldr	x8, [x26, #992]
  40e614:	ldrb	w9, [x25, #984]
  40e618:	ldr	x19, [x28, #2944]
  40e61c:	str	x8, [x28, #2944]
  40e620:	cbz	w9, 40e63c <wcrtomb@plt+0x9afc>
  40e624:	mov	w8, #0x1                   	// #1
  40e628:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e62c:	str	w8, [x22, #4032]
  40e630:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e634:	str	wzr, [x22, #4032]
  40e638:	b	40e664 <wcrtomb@plt+0x9b24>
  40e63c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e640:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e644:	ldr	x8, [x8, #2912]
  40e648:	ldr	x9, [x9, #2992]
  40e64c:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e650:	ldr	x10, [x10, #2896]
  40e654:	add	x8, x9, x8
  40e658:	sub	x0, x8, x10
  40e65c:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e660:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e664:	cmp	w21, #0x1
  40e668:	str	x19, [x28, #2944]
  40e66c:	b.gt	40e69c <wcrtomb@plt+0x9b5c>
  40e670:	ldrb	w8, [x25, #984]
  40e674:	cbnz	w8, 40e69c <wcrtomb@plt+0x9b5c>
  40e678:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e67c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e680:	ldr	x8, [x8, #2896]
  40e684:	ldr	x9, [x9, #2912]
  40e688:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e68c:	ldr	x10, [x10, #2992]
  40e690:	sub	x8, x8, x9
  40e694:	sub	x0, x8, x10
  40e698:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e69c:	cmp	w21, #0x1
  40e6a0:	str	wzr, [x24, #1000]
  40e6a4:	b.gt	40e760 <wcrtomb@plt+0x9c20>
  40e6a8:	mov	w22, #0x1                   	// #1
  40e6ac:	b	40e6bc <wcrtomb@plt+0x9b7c>
  40e6b0:	cmp	w21, #0x2
  40e6b4:	str	wzr, [x24, #1000]
  40e6b8:	b.ge	40e760 <wcrtomb@plt+0x9c20>  // b.tcont
  40e6bc:	ldrsw	x23, [x20, #3804]
  40e6c0:	ldr	x0, [x26, #992]
  40e6c4:	mov	w1, wzr
  40e6c8:	lsl	x2, x23, #9
  40e6cc:	bl	404360 <memset@plt>
  40e6d0:	ldr	x8, [x26, #992]
  40e6d4:	ldrb	w9, [x25, #984]
  40e6d8:	ldr	x19, [x28, #2944]
  40e6dc:	add	w21, w23, w21
  40e6e0:	str	x8, [x28, #2944]
  40e6e4:	cbz	w9, 40e6fc <wcrtomb@plt+0x9bbc>
  40e6e8:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e6ec:	str	w22, [x23, #4032]
  40e6f0:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e6f4:	str	wzr, [x23, #4032]
  40e6f8:	b	40e724 <wcrtomb@plt+0x9be4>
  40e6fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e700:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e704:	ldr	x8, [x8, #2912]
  40e708:	ldr	x9, [x9, #2992]
  40e70c:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e710:	ldr	x10, [x10, #2896]
  40e714:	add	x8, x9, x8
  40e718:	sub	x0, x8, x10
  40e71c:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e720:	bl	405d3c <wcrtomb@plt+0x11fc>
  40e724:	cmp	w21, #0x1
  40e728:	str	x19, [x28, #2944]
  40e72c:	b.gt	40e6b0 <wcrtomb@plt+0x9b70>
  40e730:	ldrb	w8, [x25, #984]
  40e734:	cbnz	w8, 40e6b0 <wcrtomb@plt+0x9b70>
  40e738:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e73c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e740:	ldr	x8, [x8, #2896]
  40e744:	ldr	x9, [x9, #2912]
  40e748:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e74c:	ldr	x10, [x10, #2992]
  40e750:	sub	x8, x8, x9
  40e754:	sub	x0, x8, x10
  40e758:	bl	40e7c4 <wcrtomb@plt+0x9c84>
  40e75c:	b	40e6b0 <wcrtomb@plt+0x9b70>
  40e760:	ldrb	w8, [x25, #984]
  40e764:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e768:	cbnz	w8, 40e794 <wcrtomb@plt+0x9c54>
  40e76c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e770:	ldr	w0, [x8, #4032]
  40e774:	mov	w8, #0x3fffffff            	// #1073741823
  40e778:	cmp	w0, w8
  40e77c:	b.gt	40e794 <wcrtomb@plt+0x9c54>
  40e780:	bl	421928 <wcrtomb@plt+0x1cde8>
  40e784:	cbz	w0, 40e794 <wcrtomb@plt+0x9c54>
  40e788:	ldr	x8, [x19, #3744]
  40e78c:	ldr	x0, [x8]
  40e790:	bl	42b2d4 <wcrtomb@plt+0x26794>
  40e794:	ldr	x0, [x26, #992]
  40e798:	bl	404700 <free@plt>
  40e79c:	bl	4059a4 <wcrtomb@plt+0xe64>
  40e7a0:	ldp	x20, x19, [sp, #112]
  40e7a4:	ldp	x22, x21, [sp, #96]
  40e7a8:	ldp	x24, x23, [sp, #80]
  40e7ac:	ldp	x26, x25, [sp, #64]
  40e7b0:	ldp	x28, x27, [sp, #48]
  40e7b4:	ldp	x29, x30, [sp, #32]
  40e7b8:	add	sp, sp, #0x80
  40e7bc:	b	41dfe0 <wcrtomb@plt+0x194a0>
  40e7c0:	bl	4045b0 <abort@plt>
  40e7c4:	sub	sp, sp, #0x30
  40e7c8:	stp	x29, x30, [sp, #16]
  40e7cc:	stp	x20, x19, [sp, #32]
  40e7d0:	add	x29, sp, #0x10
  40e7d4:	cbz	x0, 40e95c <wcrtomb@plt+0x9e1c>
  40e7d8:	mov	x19, x0
  40e7dc:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e7e0:	tbnz	x0, #63, 40e7fc <wcrtomb@plt+0x9cbc>
  40e7e4:	mov	w8, #0x3                   	// #3
  40e7e8:	lsr	x9, x19, #31
  40e7ec:	strh	w8, [sp, #8]
  40e7f0:	str	w19, [sp, #12]
  40e7f4:	cbz	x9, 40e81c <wcrtomb@plt+0x9cdc>
  40e7f8:	b	40e8b0 <wcrtomb@plt+0x9d70>
  40e7fc:	mov	w8, #0x4                   	// #4
  40e800:	mov	w10, #0x80000000            	// #-2147483648
  40e804:	strh	w8, [sp, #8]
  40e808:	sub	x8, x10, x19
  40e80c:	neg	w9, w19
  40e810:	lsr	x8, x8, #32
  40e814:	str	w9, [sp, #12]
  40e818:	cbnz	x8, 40e8b0 <wcrtomb@plt+0x9d70>
  40e81c:	ldr	w0, [x20, #4032]
  40e820:	mov	w8, #0x40000000            	// #1073741824
  40e824:	cmp	w0, w8
  40e828:	b.lt	40e84c <wcrtomb@plt+0x9d0c>  // b.tstop
  40e82c:	mov	w8, #0xc0000000            	// #-1073741824
  40e830:	mov	w1, #0x6d01                	// #27905
  40e834:	add	w0, w0, w8
  40e838:	add	x2, sp, #0x8
  40e83c:	movk	w1, #0x4008, lsl #16
  40e840:	bl	42c5a4 <wcrtomb@plt+0x27a64>
  40e844:	tbz	w0, #31, 40e95c <wcrtomb@plt+0x9e1c>
  40e848:	b	40e860 <wcrtomb@plt+0x9d20>
  40e84c:	mov	w1, #0x6d01                	// #27905
  40e850:	add	x2, sp, #0x8
  40e854:	movk	w1, #0x4008, lsl #16
  40e858:	bl	404af0 <ioctl@plt>
  40e85c:	tbz	w0, #31, 40e95c <wcrtomb@plt+0x9e1c>
  40e860:	bl	404a10 <__errno_location@plt>
  40e864:	ldr	w8, [x0]
  40e868:	cmp	w8, #0x5
  40e86c:	b.ne	40e8b0 <wcrtomb@plt+0x9d70>  // b.any
  40e870:	ldr	w0, [x20, #4032]
  40e874:	mov	w8, #0x40000000            	// #1073741824
  40e878:	cmp	w0, w8
  40e87c:	b.lt	40e89c <wcrtomb@plt+0x9d5c>  // b.tstop
  40e880:	mov	w8, #0xc0000000            	// #-1073741824
  40e884:	mov	w1, #0x6d01                	// #27905
  40e888:	add	w0, w0, w8
  40e88c:	add	x2, sp, #0x8
  40e890:	movk	w1, #0x4008, lsl #16
  40e894:	bl	42c5a4 <wcrtomb@plt+0x27a64>
  40e898:	b	40e8ac <wcrtomb@plt+0x9d6c>
  40e89c:	mov	w1, #0x6d01                	// #27905
  40e8a0:	add	x2, sp, #0x8
  40e8a4:	movk	w1, #0x4008, lsl #16
  40e8a8:	bl	404af0 <ioctl@plt>
  40e8ac:	tbz	w0, #31, 40e95c <wcrtomb@plt+0x9e1c>
  40e8b0:	ldr	w0, [x20, #4032]
  40e8b4:	mov	w8, #0x40000000            	// #1073741824
  40e8b8:	cmp	w0, w8
  40e8bc:	b.lt	40e8d8 <wcrtomb@plt+0x9d98>  // b.tstop
  40e8c0:	mov	w8, #0xc0000000            	// #-1073741824
  40e8c4:	add	w0, w0, w8
  40e8c8:	mov	w2, #0x1                   	// #1
  40e8cc:	mov	x1, xzr
  40e8d0:	bl	42c3b4 <wcrtomb@plt+0x27874>
  40e8d4:	b	40e8e4 <wcrtomb@plt+0x9da4>
  40e8d8:	mov	w2, #0x1                   	// #1
  40e8dc:	mov	x1, xzr
  40e8e0:	bl	404120 <lseek@plt>
  40e8e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e8e8:	ldr	x8, [x8, #3976]
  40e8ec:	mul	x9, x8, x19
  40e8f0:	sdiv	x10, x9, x19
  40e8f4:	cmp	x10, x8
  40e8f8:	add	x19, x9, x0
  40e8fc:	b.ne	40e948 <wcrtomb@plt+0x9e08>  // b.any
  40e900:	ldr	w0, [x20, #4032]
  40e904:	mov	w8, #0x40000000            	// #1073741824
  40e908:	bic	x19, x19, x19, asr #63
  40e90c:	cmp	w0, w8
  40e910:	b.lt	40e934 <wcrtomb@plt+0x9df4>  // b.tstop
  40e914:	mov	w8, #0xc0000000            	// #-1073741824
  40e918:	add	w0, w0, w8
  40e91c:	mov	x1, x19
  40e920:	mov	w2, wzr
  40e924:	bl	42c3b4 <wcrtomb@plt+0x27874>
  40e928:	cmp	x0, x19
  40e92c:	b.ne	40e948 <wcrtomb@plt+0x9e08>  // b.any
  40e930:	b	40e95c <wcrtomb@plt+0x9e1c>
  40e934:	mov	x1, x19
  40e938:	mov	w2, wzr
  40e93c:	bl	404120 <lseek@plt>
  40e940:	cmp	x0, x19
  40e944:	b.eq	40e95c <wcrtomb@plt+0x9e1c>  // b.none
  40e948:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e94c:	ldr	x8, [x8, #3744]
  40e950:	mov	x1, x19
  40e954:	ldr	x0, [x8]
  40e958:	bl	42af0c <wcrtomb@plt+0x263cc>
  40e95c:	ldp	x20, x19, [sp, #32]
  40e960:	ldp	x29, x30, [sp, #16]
  40e964:	add	sp, sp, #0x30
  40e968:	ret
  40e96c:	stp	x29, x30, [sp, #-16]!
  40e970:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40e974:	ldr	x8, [x8, #3000]
  40e978:	mov	x29, sp
  40e97c:	cbz	x8, 40e984 <wcrtomb@plt+0x9e44>
  40e980:	blr	x8
  40e984:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40e988:	add	x1, x1, #0x19d
  40e98c:	mov	w2, #0x5                   	// #5
  40e990:	mov	x0, xzr
  40e994:	bl	404900 <dcgettext@plt>
  40e998:	mov	x2, x0
  40e99c:	mov	w0, #0x2                   	// #2
  40e9a0:	mov	w1, wzr
  40e9a4:	bl	403fa0 <error@plt>
  40e9a8:	bl	4045b0 <abort@plt>
  40e9ac:	stp	x29, x30, [sp, #-16]!
  40e9b0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40e9b4:	add	x1, x1, #0x1c3
  40e9b8:	mov	w2, #0x5                   	// #5
  40e9bc:	mov	x0, xzr
  40e9c0:	mov	x29, sp
  40e9c4:	bl	404900 <dcgettext@plt>
  40e9c8:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  40e9cc:	mov	x3, x0
  40e9d0:	add	x2, x2, #0x7a4
  40e9d4:	mov	w0, wzr
  40e9d8:	mov	w1, wzr
  40e9dc:	bl	403fa0 <error@plt>
  40e9e0:	bl	40e96c <wcrtomb@plt+0x9e2c>
  40e9e4:	stp	x29, x30, [sp, #-48]!
  40e9e8:	str	x21, [sp, #16]
  40e9ec:	stp	x20, x19, [sp, #32]
  40e9f0:	mov	x29, sp
  40e9f4:	mov	w19, w1
  40e9f8:	mov	x20, x0
  40e9fc:	bl	403f40 <strlen@plt>
  40ea00:	add	x0, x0, #0x10
  40ea04:	bl	4459e8 <argp_parse@@Base+0xe13c>
  40ea08:	mov	x21, x0
  40ea0c:	str	xzr, [x0]
  40ea10:	str	w19, [x0, #8]
  40ea14:	add	x0, x0, #0xc
  40ea18:	mov	x1, x20
  40ea1c:	bl	404840 <strcpy@plt>
  40ea20:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ea24:	ldr	x9, [x8, #1008]
  40ea28:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ea2c:	add	x10, x10, #0x3f8
  40ea30:	cmp	x9, #0x0
  40ea34:	csel	x9, x10, x9, eq  // eq = none
  40ea38:	str	x21, [x9]
  40ea3c:	str	x21, [x8, #1008]
  40ea40:	ldp	x20, x19, [sp, #32]
  40ea44:	ldr	x21, [sp, #16]
  40ea48:	ldp	x29, x30, [sp], #48
  40ea4c:	ret
  40ea50:	stp	x29, x30, [sp, #-96]!
  40ea54:	stp	x28, x27, [sp, #16]
  40ea58:	stp	x26, x25, [sp, #32]
  40ea5c:	stp	x24, x23, [sp, #48]
  40ea60:	stp	x22, x21, [sp, #64]
  40ea64:	stp	x20, x19, [sp, #80]
  40ea68:	ldr	x8, [x0, #416]
  40ea6c:	mov	x29, sp
  40ea70:	cbnz	x8, 40ebfc <wcrtomb@plt+0xa0bc>
  40ea74:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ea78:	ldr	x26, [x8, #1016]
  40ea7c:	mov	x19, x0
  40ea80:	cbz	x26, 40ebf4 <wcrtomb@plt+0xa0b4>
  40ea84:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0x184b0>
  40ea88:	adrp	x25, 477000 <_obstack_memory_used@@Base+0x304b0>
  40ea8c:	mov	x27, xzr
  40ea90:	mov	x28, xzr
  40ea94:	add	x20, x20, #0x40b
  40ea98:	add	x25, x25, #0x680
  40ea9c:	b	40eab0 <wcrtomb@plt+0x9f70>
  40eaa0:	mov	x0, x22
  40eaa4:	bl	42a86c <wcrtomb@plt+0x25d2c>
  40eaa8:	ldr	x26, [x26]
  40eaac:	cbz	x26, 40ebf8 <wcrtomb@plt+0xa0b8>
  40eab0:	ldr	w0, [x19, #408]
  40eab4:	add	x22, x26, #0xc
  40eab8:	mov	x1, x22
  40eabc:	mov	w2, wzr
  40eac0:	mov	w3, wzr
  40eac4:	bl	4049e0 <faccessat@plt>
  40eac8:	cbnz	w0, 40eaa8 <wcrtomb@plt+0x9f68>
  40eacc:	mov	x0, x19
  40ead0:	mov	x1, x22
  40ead4:	mov	w2, wzr
  40ead8:	bl	40a770 <wcrtomb@plt+0x5c30>
  40eadc:	cmn	w0, #0x1
  40eae0:	b.eq	40eaa0 <wcrtomb@plt+0x9f60>  // b.none
  40eae4:	mov	x1, x20
  40eae8:	mov	w23, w0
  40eaec:	bl	404370 <fdopen@plt>
  40eaf0:	cbz	x0, 40eb90 <wcrtomb@plt+0xa050>
  40eaf4:	mov	x24, x0
  40eaf8:	bl	4393e4 <argp_parse@@Base+0x1b38>
  40eafc:	ldr	x8, [x25]
  40eb00:	mov	x23, x0
  40eb04:	mov	x21, x25
  40eb08:	cbz	x8, 40eb24 <wcrtomb@plt+0x9fe4>
  40eb0c:	mov	x0, x8
  40eb10:	mov	x1, x22
  40eb14:	bl	404660 <strcmp@plt>
  40eb18:	cbz	w0, 40eb24 <wcrtomb@plt+0x9fe4>
  40eb1c:	ldr	x8, [x21, #40]!
  40eb20:	cbnz	x8, 40eb0c <wcrtomb@plt+0x9fcc>
  40eb24:	ldp	x8, x5, [x21, #24]
  40eb28:	cbz	x8, 40eb3c <wcrtomb@plt+0x9ffc>
  40eb2c:	mov	x0, x5
  40eb30:	blr	x8
  40eb34:	mov	x5, x0
  40eb38:	str	x0, [x21, #32]
  40eb3c:	ldr	x0, [x21, #16]
  40eb40:	mov	w3, #0x50000000            	// #1342177280
  40eb44:	mov	w4, #0xa                   	// #10
  40eb48:	mov	x1, x23
  40eb4c:	mov	x2, x24
  40eb50:	bl	439bb4 <argp_parse@@Base+0x2308>
  40eb54:	cbnz	w0, 40ec18 <wcrtomb@plt+0xa0d8>
  40eb58:	mov	x0, x24
  40eb5c:	bl	4041e0 <fclose@plt>
  40eb60:	mov	w0, #0x20                  	// #32
  40eb64:	bl	4459e8 <argp_parse@@Base+0xe13c>
  40eb68:	str	x23, [x0, #24]
  40eb6c:	ldr	w8, [x26, #8]
  40eb70:	cbz	w8, 40eb78 <wcrtomb@plt+0xa038>
  40eb74:	ldr	w8, [x21, #8]
  40eb78:	str	w8, [x0, #16]
  40eb7c:	stp	xzr, x28, [x0]
  40eb80:	cbz	x28, 40ebe8 <wcrtomb@plt+0xa0a8>
  40eb84:	str	x0, [x28]
  40eb88:	mov	x28, x0
  40eb8c:	b	40eaa8 <wcrtomb@plt+0x9f68>
  40eb90:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40eb94:	ldr	x8, [x8, #4064]
  40eb98:	cbz	x8, 40eba0 <wcrtomb@plt+0xa060>
  40eb9c:	blr	x8
  40eba0:	bl	404a10 <__errno_location@plt>
  40eba4:	ldr	w24, [x0]
  40eba8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40ebac:	mov	w2, #0x5                   	// #5
  40ebb0:	mov	x0, xzr
  40ebb4:	add	x1, x1, #0x1d4
  40ebb8:	bl	404900 <dcgettext@plt>
  40ebbc:	mov	x2, x0
  40ebc0:	mov	w0, wzr
  40ebc4:	mov	w1, w24
  40ebc8:	mov	x3, x22
  40ebcc:	bl	403fa0 <error@plt>
  40ebd0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ebd4:	mov	w9, #0x2                   	// #2
  40ebd8:	mov	w0, w23
  40ebdc:	str	w9, [x8, #2416]
  40ebe0:	bl	404520 <close@plt>
  40ebe4:	b	40eaa8 <wcrtomb@plt+0x9f68>
  40ebe8:	mov	x28, x0
  40ebec:	mov	x27, x0
  40ebf0:	b	40eaa8 <wcrtomb@plt+0x9f68>
  40ebf4:	mov	x27, xzr
  40ebf8:	str	x27, [x19, #416]
  40ebfc:	ldp	x20, x19, [sp, #80]
  40ec00:	ldp	x22, x21, [sp, #64]
  40ec04:	ldp	x24, x23, [sp, #48]
  40ec08:	ldp	x26, x25, [sp, #32]
  40ec0c:	ldp	x28, x27, [sp, #16]
  40ec10:	ldp	x29, x30, [sp], #96
  40ec14:	ret
  40ec18:	bl	404a10 <__errno_location@plt>
  40ec1c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ec20:	ldr	x8, [x8, #4064]
  40ec24:	ldr	w19, [x0]
  40ec28:	cbz	x8, 40ec30 <wcrtomb@plt+0xa0f0>
  40ec2c:	blr	x8
  40ec30:	mov	x0, x22
  40ec34:	bl	444778 <argp_parse@@Base+0xcecc>
  40ec38:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  40ec3c:	mov	x3, x0
  40ec40:	add	x2, x2, #0x7a4
  40ec44:	mov	w0, wzr
  40ec48:	mov	w1, w19
  40ec4c:	bl	403fa0 <error@plt>
  40ec50:	bl	40e96c <wcrtomb@plt+0x9e2c>
  40ec54:	stp	x29, x30, [sp, #-48]!
  40ec58:	stp	x20, x19, [sp, #32]
  40ec5c:	ldr	x20, [x0, #416]
  40ec60:	mov	x19, x0
  40ec64:	str	x21, [sp, #16]
  40ec68:	mov	x29, sp
  40ec6c:	cbz	x20, 40ec8c <wcrtomb@plt+0xa14c>
  40ec70:	ldr	x0, [x20, #24]
  40ec74:	ldr	x21, [x20]
  40ec78:	bl	4393ec <argp_parse@@Base+0x1b40>
  40ec7c:	mov	x0, x20
  40ec80:	bl	404700 <free@plt>
  40ec84:	mov	x20, x21
  40ec88:	cbnz	x21, 40ec70 <wcrtomb@plt+0xa130>
  40ec8c:	str	xzr, [x19, #416]
  40ec90:	ldp	x20, x19, [sp, #32]
  40ec94:	ldr	x21, [sp, #16]
  40ec98:	ldp	x29, x30, [sp], #48
  40ec9c:	ret
  40eca0:	stp	x29, x30, [sp, #-64]!
  40eca4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40eca8:	ldr	x8, [x8, #3120]
  40ecac:	stp	x22, x21, [sp, #32]
  40ecb0:	mov	x21, x0
  40ecb4:	stp	x20, x19, [sp, #48]
  40ecb8:	mov	x20, x1
  40ecbc:	mov	x0, x8
  40ecc0:	mov	x1, x21
  40ecc4:	stp	x24, x23, [sp, #16]
  40ecc8:	mov	x29, sp
  40eccc:	bl	439670 <argp_parse@@Base+0x1dc4>
  40ecd0:	tbz	w0, #0, 40ecdc <wcrtomb@plt+0xa19c>
  40ecd4:	mov	w20, #0x1                   	// #1
  40ecd8:	b	40ed98 <wcrtomb@plt+0xa258>
  40ecdc:	cbz	x20, 40ed98 <wcrtomb@plt+0xa258>
  40ece0:	mov	w23, wzr
  40ece4:	mov	x19, xzr
  40ece8:	mov	x22, xzr
  40ecec:	ldr	x24, [x20, #416]
  40ecf0:	cbnz	x24, 40ed1c <wcrtomb@plt+0xa1dc>
  40ecf4:	ldr	x20, [x20, #392]
  40ecf8:	mov	w23, #0x2                   	// #2
  40ecfc:	cbnz	x20, 40ecec <wcrtomb@plt+0xa1ac>
  40ed00:	b	40ed90 <wcrtomb@plt+0xa250>
  40ed04:	ldr	x0, [x24, #24]
  40ed08:	mov	x1, x19
  40ed0c:	bl	439670 <argp_parse@@Base+0x1dc4>
  40ed10:	tbnz	w0, #0, 40ed8c <wcrtomb@plt+0xa24c>
  40ed14:	ldr	x24, [x24]
  40ed18:	cbz	x24, 40ecf4 <wcrtomb@plt+0xa1b4>
  40ed1c:	ldr	w8, [x24, #16]
  40ed20:	tst	w8, w23
  40ed24:	b.ne	40ed14 <wcrtomb@plt+0xa1d4>  // b.any
  40ed28:	ldr	x0, [x24, #24]
  40ed2c:	mov	x1, x21
  40ed30:	bl	439670 <argp_parse@@Base+0x1dc4>
  40ed34:	tbnz	w0, #0, 40ed8c <wcrtomb@plt+0xa24c>
  40ed38:	cbnz	x22, 40ed68 <wcrtomb@plt+0xa228>
  40ed3c:	ldrb	w8, [x21]
  40ed40:	mov	x22, x21
  40ed44:	cmp	w8, #0x2e
  40ed48:	b.ne	40ed68 <wcrtomb@plt+0xa228>  // b.any
  40ed4c:	mov	x22, x21
  40ed50:	ldrb	w8, [x22, #1]
  40ed54:	cmp	w8, #0x2f
  40ed58:	b.ne	40ed68 <wcrtomb@plt+0xa228>  // b.any
  40ed5c:	ldrb	w8, [x22, #2]!
  40ed60:	cmp	w8, #0x2e
  40ed64:	b.eq	40ed50 <wcrtomb@plt+0xa210>  // b.none
  40ed68:	ldr	x0, [x24, #24]
  40ed6c:	mov	x1, x22
  40ed70:	bl	439670 <argp_parse@@Base+0x1dc4>
  40ed74:	tbnz	w0, #0, 40ed8c <wcrtomb@plt+0xa24c>
  40ed78:	cbnz	x19, 40ed04 <wcrtomb@plt+0xa1c4>
  40ed7c:	mov	x0, x21
  40ed80:	bl	439118 <argp_parse@@Base+0x186c>
  40ed84:	mov	x19, x0
  40ed88:	b	40ed04 <wcrtomb@plt+0xa1c4>
  40ed8c:	mov	w20, #0x1                   	// #1
  40ed90:	mov	x0, x19
  40ed94:	bl	404700 <free@plt>
  40ed98:	mov	w0, w20
  40ed9c:	ldp	x20, x19, [sp, #48]
  40eda0:	ldp	x22, x21, [sp, #32]
  40eda4:	ldp	x24, x23, [sp, #16]
  40eda8:	ldp	x29, x30, [sp], #64
  40edac:	ret
  40edb0:	stp	x29, x30, [sp, #-64]!
  40edb4:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  40edb8:	stp	x20, x19, [sp, #48]
  40edbc:	ldr	x19, [x8, #1664]
  40edc0:	str	x23, [sp, #16]
  40edc4:	stp	x22, x21, [sp, #32]
  40edc8:	mov	x29, sp
  40edcc:	cbz	x19, 40ee28 <wcrtomb@plt+0xa2e8>
  40edd0:	adrp	x21, 477000 <_obstack_memory_used@@Base+0x304b0>
  40edd4:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40edd8:	add	x21, x21, #0x6a8
  40eddc:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ede0:	add	x23, x23, #0x3f8
  40ede4:	mov	x0, x19
  40ede8:	bl	403f40 <strlen@plt>
  40edec:	add	x0, x0, #0x10
  40edf0:	bl	4459e8 <argp_parse@@Base+0xe13c>
  40edf4:	mov	x20, x0
  40edf8:	str	xzr, [x0]
  40edfc:	str	wzr, [x0, #8]
  40ee00:	add	x0, x0, #0xc
  40ee04:	mov	x1, x19
  40ee08:	bl	404840 <strcpy@plt>
  40ee0c:	ldr	x8, [x22, #1008]
  40ee10:	cmp	x8, #0x0
  40ee14:	csel	x8, x23, x8, eq  // eq = none
  40ee18:	str	x20, [x8]
  40ee1c:	str	x20, [x22, #1008]
  40ee20:	ldr	x19, [x21], #40
  40ee24:	cbnz	x19, 40ede4 <wcrtomb@plt+0xa2a4>
  40ee28:	ldp	x20, x19, [sp, #48]
  40ee2c:	ldp	x22, x21, [sp, #32]
  40ee30:	ldr	x23, [sp, #16]
  40ee34:	ldp	x29, x30, [sp], #64
  40ee38:	ret
  40ee3c:	sub	sp, sp, #0x120
  40ee40:	mov	x8, x1
  40ee44:	stp	x20, x19, [sp, #272]
  40ee48:	mov	w19, w2
  40ee4c:	mov	x20, x0
  40ee50:	add	x1, sp, #0x8
  40ee54:	mov	w2, #0x844                 	// #2116
  40ee58:	mov	x0, x8
  40ee5c:	stp	x29, x30, [sp, #240]
  40ee60:	stp	x28, x21, [sp, #256]
  40ee64:	add	x29, sp, #0xf0
  40ee68:	bl	42d338 <wcrtomb@plt+0x287f8>
  40ee6c:	cbnz	w0, 40eea8 <wcrtomb@plt+0xa368>
  40ee70:	ldr	x8, [sp, #8]
  40ee74:	cbz	x8, 40eea0 <wcrtomb@plt+0xa360>
  40ee78:	mov	x21, xzr
  40ee7c:	ldr	x8, [sp, #16]
  40ee80:	mov	x0, x20
  40ee84:	mov	w2, w19
  40ee88:	ldr	x1, [x8, x21, lsl #3]
  40ee8c:	bl	43986c <argp_parse@@Base+0x1fc0>
  40ee90:	ldr	x8, [sp, #8]
  40ee94:	add	x21, x21, #0x1
  40ee98:	cmp	x21, x8
  40ee9c:	b.cc	40ee7c <wcrtomb@plt+0xa33c>  // b.lo, b.ul, b.last
  40eea0:	add	x0, sp, #0x8
  40eea4:	bl	42d484 <wcrtomb@plt+0x28944>
  40eea8:	ldp	x20, x19, [sp, #272]
  40eeac:	ldp	x28, x21, [sp, #256]
  40eeb0:	ldp	x29, x30, [sp, #240]
  40eeb4:	add	sp, sp, #0x120
  40eeb8:	ret
  40eebc:	stp	x29, x30, [sp, #-48]!
  40eec0:	str	x21, [sp, #16]
  40eec4:	stp	x20, x19, [sp, #32]
  40eec8:	mov	x29, sp
  40eecc:	mov	w19, w2
  40eed0:	mov	x21, x1
  40eed4:	mov	x20, x0
  40eed8:	bl	404690 <__ctype_b_loc@plt>
  40eedc:	ldr	x9, [x0]
  40eee0:	ldrb	w8, [x21], #1
  40eee4:	ldrh	w10, [x9, x8, lsl #1]
  40eee8:	tbnz	w10, #13, 40eee0 <wcrtomb@plt+0xa3a0>
  40eeec:	cbz	w8, 40ef28 <wcrtomb@plt+0xa3e8>
  40eef0:	cmp	w8, #0x23
  40eef4:	b.eq	40ef28 <wcrtomb@plt+0xa3e8>  // b.none
  40eef8:	cmp	w8, #0x5c
  40eefc:	sub	x1, x21, #0x1
  40ef00:	b.ne	40ef10 <wcrtomb@plt+0xa3d0>  // b.any
  40ef04:	ldrb	w8, [x21]
  40ef08:	cmp	w8, #0x23
  40ef0c:	csel	x1, x21, x1, eq  // eq = none
  40ef10:	mov	x0, x20
  40ef14:	mov	w2, w19
  40ef18:	ldp	x20, x19, [sp, #32]
  40ef1c:	ldr	x21, [sp, #16]
  40ef20:	ldp	x29, x30, [sp], #48
  40ef24:	b	43986c <argp_parse@@Base+0x1fc0>
  40ef28:	ldp	x20, x19, [sp, #32]
  40ef2c:	ldr	x21, [sp, #16]
  40ef30:	ldp	x29, x30, [sp], #48
  40ef34:	ret
  40ef38:	stp	x29, x30, [sp, #-48]!
  40ef3c:	str	x21, [sp, #16]
  40ef40:	stp	x20, x19, [sp, #32]
  40ef44:	mov	x29, sp
  40ef48:	mov	w21, w2
  40ef4c:	mov	x19, x1
  40ef50:	mov	x20, x0
  40ef54:	bl	404690 <__ctype_b_loc@plt>
  40ef58:	ldr	x9, [x0]
  40ef5c:	ldrb	w8, [x19], #1
  40ef60:	ldrh	w10, [x9, x8, lsl #1]
  40ef64:	tbnz	w10, #13, 40ef5c <wcrtomb@plt+0xa41c>
  40ef68:	cbz	w8, 40ef7c <wcrtomb@plt+0xa43c>
  40ef6c:	cmp	w8, #0x21
  40ef70:	b.eq	40ef8c <wcrtomb@plt+0xa44c>  // b.none
  40ef74:	cmp	w8, #0x23
  40ef78:	b.ne	40efa0 <wcrtomb@plt+0xa460>  // b.any
  40ef7c:	ldp	x20, x19, [sp, #32]
  40ef80:	ldr	x21, [sp, #16]
  40ef84:	ldp	x29, x30, [sp], #48
  40ef88:	ret
  40ef8c:	ldrb	w8, [x19]
  40ef90:	cmp	w8, #0x21
  40ef94:	b.ne	40efa8 <wcrtomb@plt+0xa468>  // b.any
  40ef98:	add	x19, x19, #0x1
  40ef9c:	b	40efac <wcrtomb@plt+0xa46c>
  40efa0:	sub	x19, x19, #0x1
  40efa4:	b	40efac <wcrtomb@plt+0xa46c>
  40efa8:	orr	w21, w21, #0x20000000
  40efac:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40efb0:	add	x1, x1, #0x211
  40efb4:	mov	w2, #0x3                   	// #3
  40efb8:	mov	x0, x19
  40efbc:	bl	404300 <strncmp@plt>
  40efc0:	and	w9, w21, #0xe7ffffff
  40efc4:	add	x8, x19, #0x3
  40efc8:	cmp	w0, #0x0
  40efcc:	orr	w9, w9, #0x8000000
  40efd0:	csel	w2, w9, w21, eq  // eq = none
  40efd4:	csel	x1, x8, x19, eq  // eq = none
  40efd8:	mov	x0, x20
  40efdc:	ldp	x20, x19, [sp, #32]
  40efe0:	ldr	x21, [sp, #16]
  40efe4:	ldp	x29, x30, [sp], #48
  40efe8:	b	43986c <argp_parse@@Base+0x1fc0>
  40efec:	stp	x29, x30, [sp, #-64]!
  40eff0:	stp	x24, x23, [sp, #16]
  40eff4:	stp	x22, x21, [sp, #32]
  40eff8:	stp	x20, x19, [sp, #48]
  40effc:	mov	x29, sp
  40f000:	mov	x19, x3
  40f004:	mov	w21, w2
  40f008:	mov	x22, x1
  40f00c:	mov	x20, x0
  40f010:	bl	404690 <__ctype_b_loc@plt>
  40f014:	ldr	x23, [x0]
  40f018:	sub	x24, x22, #0x2
  40f01c:	ldrb	w8, [x24, #2]
  40f020:	add	x24, x24, #0x1
  40f024:	ldrh	w9, [x23, x8, lsl #1]
  40f028:	tbnz	w9, #13, 40f01c <wcrtomb@plt+0xa4dc>
  40f02c:	cbz	w8, 40f038 <wcrtomb@plt+0xa4f8>
  40f030:	cmp	w8, #0x23
  40f034:	b.ne	40f04c <wcrtomb@plt+0xa50c>  // b.any
  40f038:	ldp	x20, x19, [sp, #48]
  40f03c:	ldp	x22, x21, [sp, #32]
  40f040:	ldp	x24, x23, [sp, #16]
  40f044:	ldp	x29, x30, [sp], #64
  40f048:	ret
  40f04c:	add	x22, x24, #0x1
  40f050:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40f054:	add	x1, x1, #0x215
  40f058:	mov	w2, #0x7                   	// #7
  40f05c:	mov	x0, x22
  40f060:	bl	404300 <strncmp@plt>
  40f064:	cbz	w0, 40f0f0 <wcrtomb@plt+0xa5b0>
  40f068:	mov	x0, x22
  40f06c:	bl	403f40 <strlen@plt>
  40f070:	ldrb	w8, [x24, x0]
  40f074:	cmp	w8, #0x2f
  40f078:	b.ne	40f0b4 <wcrtomb@plt+0xa574>  // b.any
  40f07c:	sub	x23, x0, #0x1
  40f080:	bl	4459e8 <argp_parse@@Base+0xe13c>
  40f084:	mov	x1, x22
  40f088:	mov	x2, x23
  40f08c:	mov	x24, x0
  40f090:	bl	403ec0 <memcpy@plt>
  40f094:	mov	x0, x20
  40f098:	mov	x1, x24
  40f09c:	strb	wzr, [x24, x23]
  40f0a0:	bl	439330 <argp_parse@@Base+0x1a84>
  40f0a4:	mov	w8, #0x8                   	// #8
  40f0a8:	movk	w8, #0x400, lsl #16
  40f0ac:	orr	w21, w21, w8
  40f0b0:	mov	x22, x24
  40f0b4:	ldr	w8, [x19]
  40f0b8:	mov	w9, #0x8000000             	// #134217728
  40f0bc:	mov	w10, #0xf7ffffff            	// #-134217729
  40f0c0:	mov	x0, x20
  40f0c4:	cmp	w8, w9
  40f0c8:	mov	w9, #0xefffffff            	// #-268435457
  40f0cc:	csel	w9, w9, w10, eq  // eq = none
  40f0d0:	and	w9, w9, w21
  40f0d4:	mov	x1, x22
  40f0d8:	ldp	x20, x19, [sp, #48]
  40f0dc:	ldp	x22, x21, [sp, #32]
  40f0e0:	ldp	x24, x23, [sp, #16]
  40f0e4:	orr	w2, w9, w8
  40f0e8:	ldp	x29, x30, [sp], #64
  40f0ec:	b	43986c <argp_parse@@Base+0x1fc0>
  40f0f0:	add	x20, x24, #0x7
  40f0f4:	ldrb	w8, [x20, #1]!
  40f0f8:	ldrh	w8, [x23, x8, lsl #1]
  40f0fc:	tbnz	w8, #13, 40f0f4 <wcrtomb@plt+0xa5b4>
  40f100:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40f104:	add	x1, x1, #0x21d
  40f108:	mov	x0, x20
  40f10c:	bl	404660 <strcmp@plt>
  40f110:	cbz	w0, 40f130 <wcrtomb@plt+0xa5f0>
  40f114:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40f118:	add	x1, x1, #0x224
  40f11c:	mov	x0, x20
  40f120:	bl	404660 <strcmp@plt>
  40f124:	cbnz	w0, 40f038 <wcrtomb@plt+0xa4f8>
  40f128:	mov	w8, #0x10000000            	// #268435456
  40f12c:	b	40f134 <wcrtomb@plt+0xa5f4>
  40f130:	mov	w8, #0x8000000             	// #134217728
  40f134:	str	w8, [x19]
  40f138:	b	40f038 <wcrtomb@plt+0xa4f8>
  40f13c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f140:	add	x8, x8, #0x400
  40f144:	cmp	x0, #0x0
  40f148:	csel	x0, x8, x0, eq  // eq = none
  40f14c:	mov	w8, #0x8000000             	// #134217728
  40f150:	str	w8, [x0]
  40f154:	ret
  40f158:	stp	x29, x30, [sp, #-32]!
  40f15c:	str	x19, [sp, #16]
  40f160:	mov	x29, sp
  40f164:	bl	404020 <geteuid@plt>
  40f168:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f16c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f170:	ldr	w10, [x19, #3668]
  40f174:	ldr	w11, [x9, #4036]
  40f178:	cmp	w0, #0x0
  40f17c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f180:	cset	w12, eq  // eq = none
  40f184:	strb	w12, [x8, #1032]
  40f188:	cinc	w8, w10, eq  // eq = none
  40f18c:	cinc	w10, w11, eq  // eq = none
  40f190:	mov	w0, wzr
  40f194:	str	w8, [x19, #3668]
  40f198:	str	w10, [x9, #4036]
  40f19c:	bl	4049c0 <umask@plt>
  40f1a0:	ldr	w9, [x19, #3668]
  40f1a4:	mov	w8, wzr
  40f1a8:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f1ac:	str	w0, [x19, #1036]
  40f1b0:	cmp	w9, #0x0
  40f1b4:	b.gt	40f1c0 <wcrtomb@plt+0xa680>
  40f1b8:	bl	4049c0 <umask@plt>
  40f1bc:	ldr	w8, [x19, #1036]
  40f1c0:	ldr	x19, [sp, #16]
  40f1c4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f1c8:	str	w8, [x9, #1040]
  40f1cc:	ldp	x29, x30, [sp], #32
  40f1d0:	ret
  40f1d4:	stp	x29, x30, [sp, #-80]!
  40f1d8:	stp	x22, x21, [sp, #48]
  40f1dc:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f1e0:	stp	x20, x19, [sp, #64]
  40f1e4:	ldr	x19, [x22, #1048]
  40f1e8:	str	x25, [sp, #16]
  40f1ec:	stp	x24, x23, [sp, #32]
  40f1f0:	mov	x29, sp
  40f1f4:	cbz	x19, 40f27c <wcrtomb@plt+0xa73c>
  40f1f8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f1fc:	ldr	w25, [x8, #3056]
  40f200:	mov	x20, x0
  40f204:	mov	x23, xzr
  40f208:	b	40f218 <wcrtomb@plt+0xa6d8>
  40f20c:	mov	x23, x19
  40f210:	mov	x19, x24
  40f214:	cbz	x24, 40f27c <wcrtomb@plt+0xa73c>
  40f218:	ldr	w8, [x19, #92]
  40f21c:	ldr	x24, [x19]
  40f220:	cmp	w25, w8
  40f224:	b.ne	40f20c <wcrtomb@plt+0xa6cc>  // b.any
  40f228:	ldr	x21, [x19, #160]
  40f22c:	mov	x1, x20
  40f230:	mov	x0, x21
  40f234:	bl	404660 <strcmp@plt>
  40f238:	cbnz	w0, 40f20c <wcrtomb@plt+0xa6cc>
  40f23c:	mov	x0, x21
  40f240:	bl	404700 <free@plt>
  40f244:	ldp	x1, x0, [x19, #136]
  40f248:	bl	412330 <wcrtomb@plt+0xd7f0>
  40f24c:	ldr	x0, [x19, #96]
  40f250:	bl	404700 <free@plt>
  40f254:	ldr	x0, [x19, #104]
  40f258:	bl	404700 <free@plt>
  40f25c:	ldr	x0, [x19, #120]
  40f260:	bl	404700 <free@plt>
  40f264:	mov	x0, x19
  40f268:	bl	404700 <free@plt>
  40f26c:	cbz	x23, 40f278 <wcrtomb@plt+0xa738>
  40f270:	str	x24, [x23]
  40f274:	b	40f27c <wcrtomb@plt+0xa73c>
  40f278:	str	x24, [x22, #1048]
  40f27c:	ldp	x20, x19, [sp, #64]
  40f280:	ldp	x22, x21, [sp, #48]
  40f284:	ldp	x24, x23, [sp, #32]
  40f288:	ldr	x25, [sp, #16]
  40f28c:	ldp	x29, x30, [sp], #80
  40f290:	ret
  40f294:	sub	sp, sp, #0xe0
  40f298:	stp	x29, x30, [sp, #128]
  40f29c:	stp	x26, x25, [sp, #160]
  40f2a0:	stp	x24, x23, [sp, #176]
  40f2a4:	stp	x22, x21, [sp, #192]
  40f2a8:	stp	x20, x19, [sp, #208]
  40f2ac:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f2b0:	ldr	x0, [x20, #3032]
  40f2b4:	adrp	x9, 40f000 <wcrtomb@plt+0xa4c0>
  40f2b8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f2bc:	add	x9, x9, #0x790
  40f2c0:	str	x27, [sp, #144]
  40f2c4:	add	x29, sp, #0x80
  40f2c8:	str	x9, [x8, #3000]
  40f2cc:	bl	405670 <wcrtomb@plt+0xb30>
  40f2d0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f2d4:	ldrb	w8, [x8, #4008]
  40f2d8:	cbnz	w8, 40f334 <wcrtomb@plt+0xa7f4>
  40f2dc:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f2e0:	ldr	x0, [x19, #3152]
  40f2e4:	bl	41ed4c <wcrtomb@plt+0x1a20c>
  40f2e8:	tbz	w0, #0, 40f334 <wcrtomb@plt+0xa7f4>
  40f2ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f2f0:	ldr	x8, [x8, #4064]
  40f2f4:	cbz	x8, 40f2fc <wcrtomb@plt+0xa7bc>
  40f2f8:	blr	x8
  40f2fc:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40f300:	add	x1, x1, #0x2ae
  40f304:	mov	w2, #0x5                   	// #5
  40f308:	mov	x0, xzr
  40f30c:	bl	404900 <dcgettext@plt>
  40f310:	ldr	x8, [x19, #3152]
  40f314:	mov	x19, x0
  40f318:	mov	x0, x8
  40f31c:	bl	444778 <argp_parse@@Base+0xcecc>
  40f320:	mov	x3, x0
  40f324:	mov	w0, wzr
  40f328:	mov	w1, wzr
  40f32c:	mov	x2, x19
  40f330:	b	40f4a0 <wcrtomb@plt+0xa960>
  40f334:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f338:	ldr	x1, [x22, #3160]
  40f33c:	ldrb	w8, [x1]
  40f340:	cbz	w8, 40f4b0 <wcrtomb@plt+0xa970>
  40f344:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f348:	ldrb	w8, [x8, #3648]
  40f34c:	cbz	w8, 40f360 <wcrtomb@plt+0xa820>
  40f350:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40f354:	add	x0, x0, #0x2cc
  40f358:	bl	422df0 <wcrtomb@plt+0x1e2b0>
  40f35c:	cbz	w0, 40f4b0 <wcrtomb@plt+0xa970>
  40f360:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f364:	ldr	w8, [x8, #3700]
  40f368:	cbz	w8, 40f380 <wcrtomb@plt+0xa840>
  40f36c:	ldr	x1, [x20, #3032]
  40f370:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f374:	add	x0, x0, #0xc50
  40f378:	mov	x2, #0xffffffffffffffff    	// #-1
  40f37c:	bl	418fc8 <wcrtomb@plt+0x14488>
  40f380:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f384:	ldrb	w8, [x27, #4024]
  40f388:	cbnz	w8, 40f3a8 <wcrtomb@plt+0xa868>
  40f38c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f390:	ldr	x0, [x22, #3160]
  40f394:	ldr	w19, [x8, #3056]
  40f398:	mov	w1, wzr
  40f39c:	bl	40f9e8 <wcrtomb@plt+0xaea8>
  40f3a0:	mov	w0, w19
  40f3a4:	bl	41c19c <wcrtomb@plt+0x1765c>
  40f3a8:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f3ac:	ldrb	w8, [x23, #3813]
  40f3b0:	cbz	w8, 40f3c4 <wcrtomb@plt+0xa884>
  40f3b4:	ldr	x0, [x22, #3160]
  40f3b8:	mov	w1, wzr
  40f3bc:	bl	41b994 <wcrtomb@plt+0x16e54>
  40f3c0:	tbz	w0, #0, 40f454 <wcrtomb@plt+0xa914>
  40f3c4:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f3c8:	add	x0, x0, #0xc50
  40f3cc:	bl	41f664 <wcrtomb@plt+0x1ab24>
  40f3d0:	tbz	w0, #0, 40f3e8 <wcrtomb@plt+0xa8a8>
  40f3d4:	ldr	x19, [x22, #3160]
  40f3d8:	adrp	x26, 410000 <wcrtomb@plt+0xb4c0>
  40f3dc:	add	x26, x26, #0x46c
  40f3e0:	mov	w21, #0x53                  	// #83
  40f3e4:	b	40f658 <wcrtomb@plt+0xab18>
  40f3e8:	ldr	x8, [x20, #3032]
  40f3ec:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f3f0:	ldr	x19, [x22, #3160]
  40f3f4:	ldrb	w25, [x9, #3681]
  40f3f8:	ldrb	w20, [x8, #156]
  40f3fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f400:	ldr	x24, [x8, #3672]
  40f404:	cmp	w20, #0x56
  40f408:	b.hi	40f53c <wcrtomb@plt+0xa9fc>  // b.pmore
  40f40c:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40f410:	add	x9, x9, #0x229
  40f414:	adrp	x8, 410000 <wcrtomb@plt+0xb4c0>
  40f418:	adrp	x26, 410000 <wcrtomb@plt+0xb4c0>
  40f41c:	adr	x10, 40f438 <wcrtomb@plt+0xa8f8>
  40f420:	ldrb	w11, [x9, x20]
  40f424:	add	x10, x10, x11, lsl #2
  40f428:	add	x8, x8, #0xc94
  40f42c:	add	x26, x26, #0x46c
  40f430:	mov	w21, #0x53                  	// #83
  40f434:	br	x10
  40f438:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f43c:	ldrb	w8, [x8, #3168]
  40f440:	cbnz	w8, 40f4e4 <wcrtomb@plt+0xa9a4>
  40f444:	adrp	x26, 410000 <wcrtomb@plt+0xb4c0>
  40f448:	add	x26, x26, #0x46c
  40f44c:	mov	w21, w20
  40f450:	b	40f658 <wcrtomb@plt+0xab18>
  40f454:	bl	404a10 <__errno_location@plt>
  40f458:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f45c:	ldr	x8, [x8, #4064]
  40f460:	ldr	w19, [x0]
  40f464:	cbz	x8, 40f46c <wcrtomb@plt+0xa92c>
  40f468:	blr	x8
  40f46c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40f470:	add	x1, x1, #0x2d4
  40f474:	mov	w2, #0x5                   	// #5
  40f478:	mov	x0, xzr
  40f47c:	bl	404900 <dcgettext@plt>
  40f480:	ldr	x8, [x22, #3160]
  40f484:	mov	x20, x0
  40f488:	mov	x0, x8
  40f48c:	bl	444778 <argp_parse@@Base+0xcecc>
  40f490:	mov	x3, x0
  40f494:	mov	w0, wzr
  40f498:	mov	w1, w19
  40f49c:	mov	x2, x20
  40f4a0:	bl	403fa0 <error@plt>
  40f4a4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f4a8:	mov	w9, #0x2                   	// #2
  40f4ac:	str	w9, [x8, #2416]
  40f4b0:	ldp	x20, x19, [sp, #208]
  40f4b4:	ldp	x22, x21, [sp, #192]
  40f4b8:	ldp	x24, x23, [sp, #176]
  40f4bc:	ldp	x26, x25, [sp, #160]
  40f4c0:	ldr	x27, [sp, #144]
  40f4c4:	ldp	x29, x30, [sp, #128]
  40f4c8:	add	sp, sp, #0xe0
  40f4cc:	b	418e14 <wcrtomb@plt+0x142d4>
  40f4d0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f4d4:	ldrb	w8, [x8, #3528]
  40f4d8:	cbz	w8, 40f4e4 <wcrtomb@plt+0xa9a4>
  40f4dc:	mov	w8, #0x1                   	// #1
  40f4e0:	strb	w8, [x27, #4024]
  40f4e4:	adrp	x8, 410000 <wcrtomb@plt+0xb4c0>
  40f4e8:	add	x8, x8, #0x900
  40f4ec:	b	40f648 <wcrtomb@plt+0xab08>
  40f4f0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f4f4:	ldr	x8, [x8, #4064]
  40f4f8:	cbz	x8, 40f500 <wcrtomb@plt+0xa9c0>
  40f4fc:	blr	x8
  40f500:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40f504:	add	x1, x1, #0x3cf
  40f508:	mov	w2, #0x5                   	// #5
  40f50c:	mov	x0, xzr
  40f510:	bl	404900 <dcgettext@plt>
  40f514:	mov	x2, x0
  40f518:	mov	w0, wzr
  40f51c:	mov	w1, wzr
  40f520:	bl	403fa0 <error@plt>
  40f524:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f528:	mov	w9, #0x2                   	// #2
  40f52c:	str	w9, [x8, #2416]
  40f530:	adrp	x8, 411000 <wcrtomb@plt+0xc4c0>
  40f534:	add	x8, x8, #0x170
  40f538:	b	40f648 <wcrtomb@plt+0xab08>
  40f53c:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40f540:	ldrb	w8, [x8, #3722]
  40f544:	tbz	w8, #0, 40f590 <wcrtomb@plt+0xaa50>
  40f548:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f54c:	ldr	x8, [x8, #4064]
  40f550:	cbz	x8, 40f558 <wcrtomb@plt+0xaa18>
  40f554:	blr	x8
  40f558:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40f55c:	add	x1, x1, #0x3eb
  40f560:	mov	w2, #0x5                   	// #5
  40f564:	mov	x0, xzr
  40f568:	bl	404900 <dcgettext@plt>
  40f56c:	mov	x21, x0
  40f570:	mov	x0, x19
  40f574:	bl	444778 <argp_parse@@Base+0xcecc>
  40f578:	mov	x3, x0
  40f57c:	mov	w0, wzr
  40f580:	mov	w1, wzr
  40f584:	mov	x2, x21
  40f588:	mov	w4, w20
  40f58c:	bl	403fa0 <error@plt>
  40f590:	adrp	x8, 410000 <wcrtomb@plt+0xb4c0>
  40f594:	add	x8, x8, #0x46c
  40f598:	b	40f648 <wcrtomb@plt+0xab08>
  40f59c:	adrp	x8, 410000 <wcrtomb@plt+0xb4c0>
  40f5a0:	add	x8, x8, #0xd6c
  40f5a4:	b	40f648 <wcrtomb@plt+0xab08>
  40f5a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f5ac:	ldr	w9, [x8, #3256]
  40f5b0:	orr	w9, w9, #0x2000
  40f5b4:	b	40f5c4 <wcrtomb@plt+0xaa84>
  40f5b8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f5bc:	ldr	w9, [x8, #3256]
  40f5c0:	orr	w9, w9, #0x6000
  40f5c4:	str	w9, [x8, #3256]
  40f5c8:	adrp	x8, 410000 <wcrtomb@plt+0xb4c0>
  40f5cc:	add	x8, x8, #0xf80
  40f5d0:	b	40f648 <wcrtomb@plt+0xab08>
  40f5d4:	adrp	x8, 411000 <wcrtomb@plt+0xc4c0>
  40f5d8:	add	x8, x8, #0x70
  40f5dc:	b	40f648 <wcrtomb@plt+0xab08>
  40f5e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f5e4:	ldr	x8, [x8, #4064]
  40f5e8:	cbz	x8, 40f5f0 <wcrtomb@plt+0xaab0>
  40f5ec:	blr	x8
  40f5f0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40f5f4:	add	x1, x1, #0x393
  40f5f8:	mov	w2, #0x5                   	// #5
  40f5fc:	mov	x0, xzr
  40f600:	bl	404900 <dcgettext@plt>
  40f604:	ldr	x8, [x22, #3160]
  40f608:	mov	x21, x0
  40f60c:	mov	x0, x8
  40f610:	bl	444778 <argp_parse@@Base+0xcecc>
  40f614:	mov	x3, x0
  40f618:	mov	w0, wzr
  40f61c:	mov	w1, wzr
  40f620:	mov	x2, x21
  40f624:	bl	403fa0 <error@plt>
  40f628:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f62c:	mov	w9, #0x2                   	// #2
  40f630:	str	w9, [x8, #2416]
  40f634:	adrp	x8, 411000 <wcrtomb@plt+0xc4c0>
  40f638:	add	x8, x8, #0x158
  40f63c:	b	40f648 <wcrtomb@plt+0xab08>
  40f640:	adrp	x8, 411000 <wcrtomb@plt+0xc4c0>
  40f644:	add	x8, x8, #0x140
  40f648:	cbnz	w25, 40f720 <wcrtomb@plt+0xabe0>
  40f64c:	mov	w21, w20
  40f650:	mov	x26, x8
  40f654:	cbnz	x24, 40f720 <wcrtomb@plt+0xabe0>
  40f658:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f65c:	ldr	w8, [x8, #3808]
  40f660:	cmp	w8, #0x6
  40f664:	b.eq	40f6a8 <wcrtomb@plt+0xab68>  // b.none
  40f668:	cmp	w8, #0x3
  40f66c:	b.ne	40f754 <wcrtomb@plt+0xac14>  // b.any
  40f670:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f674:	ldrb	w1, [x8, #3090]
  40f678:	mov	x0, x19
  40f67c:	bl	41b620 <wcrtomb@plt+0x16ae0>
  40f680:	cbnz	w0, 40f754 <wcrtomb@plt+0xac14>
  40f684:	bl	404a10 <__errno_location@plt>
  40f688:	ldr	w8, [x0]
  40f68c:	orr	w8, w8, #0x2
  40f690:	cmp	w8, #0x2
  40f694:	b.eq	40f754 <wcrtomb@plt+0xac14>  // b.none
  40f698:	mov	x0, x19
  40f69c:	bl	42b348 <wcrtomb@plt+0x26808>
  40f6a0:	bl	418e14 <wcrtomb@plt+0x142d4>
  40f6a4:	b	40f770 <wcrtomb@plt+0xac30>
  40f6a8:	mov	x1, sp
  40f6ac:	mov	x0, x19
  40f6b0:	bl	41bbd4 <wcrtomb@plt+0x17094>
  40f6b4:	cbz	w0, 40f728 <wcrtomb@plt+0xabe8>
  40f6b8:	bl	404a10 <__errno_location@plt>
  40f6bc:	ldr	w8, [x0]
  40f6c0:	cmp	w8, #0x2
  40f6c4:	b.eq	40f754 <wcrtomb@plt+0xac14>  // b.none
  40f6c8:	mov	x0, x19
  40f6cc:	bl	42b1dc <wcrtomb@plt+0x2669c>
  40f6d0:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  40f6d4:	ldrb	w8, [x8, #3721]
  40f6d8:	tbz	w8, #3, 40f720 <wcrtomb@plt+0xabe0>
  40f6dc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f6e0:	ldr	x8, [x8, #4064]
  40f6e4:	cbz	x8, 40f6ec <wcrtomb@plt+0xabac>
  40f6e8:	blr	x8
  40f6ec:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40f6f0:	add	x1, x1, #0x420
  40f6f4:	mov	w2, #0x5                   	// #5
  40f6f8:	mov	x0, xzr
  40f6fc:	bl	404900 <dcgettext@plt>
  40f700:	mov	x20, x0
  40f704:	mov	x0, x19
  40f708:	bl	444a68 <argp_parse@@Base+0xd1bc>
  40f70c:	mov	x3, x0
  40f710:	mov	w0, wzr
  40f714:	mov	w1, wzr
  40f718:	mov	x2, x20
  40f71c:	bl	403fa0 <error@plt>
  40f720:	bl	418e14 <wcrtomb@plt+0x142d4>
  40f724:	b	40f770 <wcrtomb@plt+0xac30>
  40f728:	ldr	w8, [sp, #16]
  40f72c:	and	w8, w8, #0xf000
  40f730:	cmp	w8, #0x4, lsl #12
  40f734:	b.eq	40f754 <wcrtomb@plt+0xac14>  // b.none
  40f738:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f73c:	add	x8, x8, #0xd38
  40f740:	ldp	x2, x3, [sp, #88]
  40f744:	ldp	x0, x1, [x8]
  40f748:	bl	424520 <wcrtomb@plt+0x1f9e0>
  40f74c:	cmp	w0, #0x0
  40f750:	b.le	40f6d0 <wcrtomb@plt+0xab90>
  40f754:	ldr	x0, [x22, #3160]
  40f758:	mov	w1, w21
  40f75c:	blr	x26
  40f760:	cbz	w0, 40f770 <wcrtomb@plt+0xac30>
  40f764:	ldrb	w8, [x23, #3813]
  40f768:	cbz	w8, 40f770 <wcrtomb@plt+0xac30>
  40f76c:	bl	41bbf4 <wcrtomb@plt+0x170b4>
  40f770:	ldp	x20, x19, [sp, #208]
  40f774:	ldp	x22, x21, [sp, #192]
  40f778:	ldp	x24, x23, [sp, #176]
  40f77c:	ldp	x26, x25, [sp, #160]
  40f780:	ldr	x27, [sp, #144]
  40f784:	ldp	x29, x30, [sp, #128]
  40f788:	add	sp, sp, #0xe0
  40f78c:	ret
  40f790:	stp	x29, x30, [sp, #-96]!
  40f794:	stp	x28, x27, [sp, #16]
  40f798:	stp	x26, x25, [sp, #32]
  40f79c:	stp	x24, x23, [sp, #48]
  40f7a0:	stp	x22, x21, [sp, #64]
  40f7a4:	stp	x20, x19, [sp, #80]
  40f7a8:	mov	x29, sp
  40f7ac:	sub	sp, sp, #0x240
  40f7b0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  40f7b4:	add	x0, x0, #0x66
  40f7b8:	mov	w1, wzr
  40f7bc:	bl	40f9e8 <wcrtomb@plt+0xaea8>
  40f7c0:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40f7c4:	ldr	x19, [x23, #1064]
  40f7c8:	cbz	x19, 40f9b4 <wcrtomb@plt+0xae74>
  40f7cc:	add	x8, sp, #0x10
  40f7d0:	add	x9, x8, #0xd8
  40f7d4:	str	x9, [sp, #8]
  40f7d8:	add	x9, x8, #0xe8
  40f7dc:	add	x26, x8, #0x148
  40f7e0:	adrp	x27, 477000 <_obstack_memory_used@@Base+0x304b0>
  40f7e4:	str	x9, [sp]
  40f7e8:	b	40f810 <wcrtomb@plt+0xacd0>
  40f7ec:	ldp	x1, x0, [x19, #144]
  40f7f0:	bl	412330 <wcrtomb@plt+0xd7f0>
  40f7f4:	ldr	x0, [x19, #104]
  40f7f8:	bl	404700 <free@plt>
  40f7fc:	ldr	x20, [x19]
  40f800:	mov	x0, x19
  40f804:	bl	404700 <free@plt>
  40f808:	mov	x19, x20
  40f80c:	cbz	x20, 40f9b4 <wcrtomb@plt+0xae74>
  40f810:	ldr	w0, [x19, #88]
  40f814:	bl	41c19c <wcrtomb@plt+0x1765c>
  40f818:	ldr	x28, [x19, #96]
  40f81c:	cbz	x28, 40f7ec <wcrtomb@plt+0xacac>
  40f820:	mov	x21, xzr
  40f824:	add	x20, x19, #0xa0
  40f828:	add	x24, x19, #0x38
  40f82c:	add	x25, x19, #0x48
  40f830:	b	40f844 <wcrtomb@plt+0xad04>
  40f834:	mov	x0, x22
  40f838:	bl	42b348 <wcrtomb@plt+0x26808>
  40f83c:	ldr	x28, [x28]
  40f840:	cbz	x28, 40f998 <wcrtomb@plt+0xae58>
  40f844:	ldr	w1, [x27, #1872]
  40f848:	add	x22, x28, #0x8
  40f84c:	sub	x3, x29, #0x88
  40f850:	mov	w4, #0x100                 	// #256
  40f854:	mov	w0, wzr
  40f858:	mov	x2, x22
  40f85c:	bl	404b20 <__fxstatat@plt>
  40f860:	cbnz	w0, 40f83c <wcrtomb@plt+0xacfc>
  40f864:	ldur	x8, [x29, #-136]
  40f868:	ldr	x9, [x19, #8]
  40f86c:	cmp	x8, x9
  40f870:	b.ne	40f83c <wcrtomb@plt+0xacfc>  // b.any
  40f874:	ldur	x8, [x29, #-128]
  40f878:	ldr	x9, [x19, #16]
  40f87c:	cmp	x8, x9
  40f880:	b.ne	40f83c <wcrtomb@plt+0xacfc>  // b.any
  40f884:	ldr	x8, [x19, #24]
  40f888:	cmn	x8, #0x1
  40f88c:	b.ne	40f83c <wcrtomb@plt+0xacfc>  // b.any
  40f890:	ldr	x8, [x19, #32]
  40f894:	cmn	w8, #0x1
  40f898:	b.ne	40f83c <wcrtomb@plt+0xacfc>  // b.any
  40f89c:	ldr	w0, [x27, #1872]
  40f8a0:	mov	x1, x22
  40f8a4:	mov	w2, wzr
  40f8a8:	bl	4040b0 <unlinkat@plt>
  40f8ac:	cbnz	w0, 40f834 <wcrtomb@plt+0xacf4>
  40f8b0:	cbz	x21, 40f8d0 <wcrtomb@plt+0xad90>
  40f8b4:	ldr	w0, [x27, #1872]
  40f8b8:	mov	x1, x21
  40f8bc:	mov	x3, x22
  40f8c0:	mov	w4, wzr
  40f8c4:	mov	w2, w0
  40f8c8:	bl	404030 <linkat@plt>
  40f8cc:	cbz	w0, 40f83c <wcrtomb@plt+0xacfc>
  40f8d0:	ldrb	w8, [x19, #40]
  40f8d4:	ldr	w2, [x27, #1872]
  40f8d8:	cbz	w8, 40f900 <wcrtomb@plt+0xadc0>
  40f8dc:	mov	x0, x20
  40f8e0:	mov	w1, w2
  40f8e4:	mov	x2, x22
  40f8e8:	bl	404980 <symlinkat@plt>
  40f8ec:	cbz	w0, 40f928 <wcrtomb@plt+0xade8>
  40f8f0:	mov	x0, x20
  40f8f4:	mov	x1, x22
  40f8f8:	bl	42b0ac <wcrtomb@plt+0x2656c>
  40f8fc:	b	40f83c <wcrtomb@plt+0xacfc>
  40f900:	mov	w0, w2
  40f904:	mov	x1, x20
  40f908:	mov	x3, x22
  40f90c:	mov	w4, wzr
  40f910:	bl	404030 <linkat@plt>
  40f914:	cbz	w0, 40f83c <wcrtomb@plt+0xacfc>
  40f918:	mov	x0, x20
  40f91c:	mov	x1, x22
  40f920:	bl	42a64c <wcrtomb@plt+0x25b0c>
  40f924:	b	40f83c <wcrtomb@plt+0xacfc>
  40f928:	ldr	w8, [x19, #44]
  40f92c:	add	x1, sp, #0x10
  40f930:	mov	w2, #0xffffffff            	// #-1
  40f934:	mov	w5, #0x32                  	// #50
  40f938:	str	w8, [sp, #120]
  40f93c:	ldr	x8, [x19, #48]
  40f940:	mov	w7, #0x100                 	// #256
  40f944:	mov	x0, x22
  40f948:	mov	w3, wzr
  40f94c:	str	x8, [sp, #128]
  40f950:	ldr	q0, [x24]
  40f954:	ldr	x8, [sp, #8]
  40f958:	mov	w4, wzr
  40f95c:	mov	w6, wzr
  40f960:	str	q0, [x8]
  40f964:	ldr	q0, [x25]
  40f968:	ldr	x8, [sp]
  40f96c:	str	q0, [x8]
  40f970:	ldur	q0, [x19, #120]
  40f974:	ldur	q1, [x19, #104]
  40f978:	stp	q1, q0, [sp, #64]
  40f97c:	ldr	x8, [x19, #136]
  40f980:	str	x8, [sp, #96]
  40f984:	ldr	q0, [x19, #144]
  40f988:	str	q0, [x26]
  40f98c:	bl	40ff34 <wcrtomb@plt+0xb3f4>
  40f990:	mov	x21, x22
  40f994:	b	40f83c <wcrtomb@plt+0xacfc>
  40f998:	ldr	x0, [x19, #96]
  40f99c:	cbz	x0, 40f7ec <wcrtomb@plt+0xacac>
  40f9a0:	ldr	x20, [x0]
  40f9a4:	bl	404700 <free@plt>
  40f9a8:	mov	x0, x20
  40f9ac:	cbnz	x20, 40f9a0 <wcrtomb@plt+0xae60>
  40f9b0:	b	40f7ec <wcrtomb@plt+0xacac>
  40f9b4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  40f9b8:	add	x0, x0, #0x66
  40f9bc:	mov	w1, #0x1                   	// #1
  40f9c0:	str	xzr, [x23, #1064]
  40f9c4:	bl	40f9e8 <wcrtomb@plt+0xaea8>
  40f9c8:	add	sp, sp, #0x240
  40f9cc:	ldp	x20, x19, [sp, #80]
  40f9d0:	ldp	x22, x21, [sp, #64]
  40f9d4:	ldp	x24, x23, [sp, #48]
  40f9d8:	ldp	x26, x25, [sp, #32]
  40f9dc:	ldp	x28, x27, [sp, #16]
  40f9e0:	ldp	x29, x30, [sp], #96
  40f9e4:	ret
  40f9e8:	stp	x29, x30, [sp, #-96]!
  40f9ec:	stp	x28, x27, [sp, #16]
  40f9f0:	stp	x26, x25, [sp, #32]
  40f9f4:	stp	x24, x23, [sp, #48]
  40f9f8:	stp	x22, x21, [sp, #64]
  40f9fc:	stp	x20, x19, [sp, #80]
  40fa00:	mov	x29, sp
  40fa04:	sub	sp, sp, #0x240
  40fa08:	mov	w22, w1
  40fa0c:	mov	x19, x0
  40fa10:	bl	403f40 <strlen@plt>
  40fa14:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40fa18:	ldr	x21, [x25, #1048]
  40fa1c:	cbz	x21, 40fc00 <wcrtomb@plt+0xb0c0>
  40fa20:	add	x8, sp, #0x10
  40fa24:	add	x9, x8, #0xd8
  40fa28:	mov	x20, x0
  40fa2c:	mov	w27, wzr
  40fa30:	and	w26, w22, #0x1
  40fa34:	str	x9, [sp, #8]
  40fa38:	add	x9, x8, #0xe8
  40fa3c:	add	x22, x8, #0x148
  40fa40:	str	x9, [sp]
  40fa44:	b	40faf4 <wcrtomb@plt+0xafb4>
  40fa48:	ldur	w23, [x29, #-120]
  40fa4c:	mov	w24, #0xffffffff            	// #-1
  40fa50:	ldr	w8, [x21, #24]
  40fa54:	add	x1, sp, #0x10
  40fa58:	mov	w2, #0xffffffff            	// #-1
  40fa5c:	mov	w5, #0x35                  	// #53
  40fa60:	str	w8, [sp, #120]
  40fa64:	ldur	x8, [x21, #28]
  40fa68:	mov	w3, w23
  40fa6c:	mov	w4, w24
  40fa70:	str	x8, [sp, #128]
  40fa74:	ldur	q0, [x21, #40]
  40fa78:	ldr	x8, [sp, #8]
  40fa7c:	str	q0, [x8]
  40fa80:	ldur	q0, [x21, #56]
  40fa84:	ldr	x8, [sp]
  40fa88:	str	q0, [x8]
  40fa8c:	ldp	q1, q0, [x21, #96]
  40fa90:	stp	q1, q0, [sp, #64]
  40fa94:	ldr	x8, [x21, #128]
  40fa98:	str	x8, [sp, #96]
  40fa9c:	ldur	q0, [x21, #136]
  40faa0:	str	q0, [x22]
  40faa4:	ldr	x0, [x21, #160]
  40faa8:	ldrb	w6, [x21, #80]
  40faac:	ldr	w7, [x21, #84]
  40fab0:	bl	40ff34 <wcrtomb@plt+0xb3f4>
  40fab4:	ldr	x8, [x21]
  40fab8:	str	x8, [x25, #1048]
  40fabc:	ldr	x0, [x21, #160]
  40fac0:	bl	404700 <free@plt>
  40fac4:	ldp	x1, x0, [x21, #136]
  40fac8:	bl	412330 <wcrtomb@plt+0xd7f0>
  40facc:	ldr	x0, [x21, #96]
  40fad0:	bl	404700 <free@plt>
  40fad4:	ldr	x0, [x21, #104]
  40fad8:	bl	404700 <free@plt>
  40fadc:	ldr	x0, [x21, #120]
  40fae0:	bl	404700 <free@plt>
  40fae4:	mov	x0, x21
  40fae8:	bl	404700 <free@plt>
  40faec:	ldr	x21, [x25, #1048]
  40faf0:	cbz	x21, 40fc00 <wcrtomb@plt+0xb0c0>
  40faf4:	ldrb	w8, [x21, #88]
  40faf8:	and	w9, w27, #0x1
  40fafc:	orr	w28, w8, w9
  40fb00:	cmp	w28, #0x0
  40fb04:	cset	w27, ne  // ne = any
  40fb08:	cmp	w8, w26
  40fb0c:	b.hi	40fc00 <wcrtomb@plt+0xb0c0>  // b.pmore
  40fb10:	ldr	x2, [x21, #152]
  40fb14:	ldp	w23, w24, [x21, #72]
  40fb18:	cmp	x2, x20
  40fb1c:	b.cs	40fb50 <wcrtomb@plt+0xb010>  // b.hs, b.nlast
  40fb20:	ldrb	w8, [x19, x2]
  40fb24:	cbz	w8, 40fb50 <wcrtomb@plt+0xb010>
  40fb28:	cmp	w8, #0x2f
  40fb2c:	b.eq	40fb40 <wcrtomb@plt+0xb000>  // b.none
  40fb30:	add	x8, x2, x19
  40fb34:	ldurb	w8, [x8, #-1]
  40fb38:	cmp	w8, #0x2f
  40fb3c:	b.ne	40fb50 <wcrtomb@plt+0xb010>  // b.any
  40fb40:	ldr	x1, [x21, #160]
  40fb44:	mov	x0, x19
  40fb48:	bl	404440 <bcmp@plt>
  40fb4c:	cbz	w0, 40fc00 <wcrtomb@plt+0xb0c0>
  40fb50:	ldr	w0, [x21, #92]
  40fb54:	bl	41c19c <wcrtomb@plt+0x1765c>
  40fb58:	cbz	w28, 40fa50 <wcrtomb@plt+0xaf10>
  40fb5c:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  40fb60:	ldr	w1, [x8, #1872]
  40fb64:	ldr	x2, [x21, #160]
  40fb68:	ldr	w4, [x21, #84]
  40fb6c:	sub	x3, x29, #0x88
  40fb70:	mov	w0, wzr
  40fb74:	bl	404b20 <__fxstatat@plt>
  40fb78:	cbz	w0, 40fb88 <wcrtomb@plt+0xb048>
  40fb7c:	ldr	x0, [x21, #160]
  40fb80:	bl	42b158 <wcrtomb@plt+0x26618>
  40fb84:	b	40fab4 <wcrtomb@plt+0xaf74>
  40fb88:	ldur	x8, [x29, #-136]
  40fb8c:	ldr	x9, [x21, #8]
  40fb90:	cmp	x8, x9
  40fb94:	b.ne	40fba8 <wcrtomb@plt+0xb068>  // b.any
  40fb98:	ldur	x8, [x29, #-128]
  40fb9c:	ldr	x9, [x21, #16]
  40fba0:	cmp	x8, x9
  40fba4:	b.eq	40fa48 <wcrtomb@plt+0xaf08>  // b.none
  40fba8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40fbac:	ldr	x8, [x8, #4064]
  40fbb0:	cbz	x8, 40fbb8 <wcrtomb@plt+0xb078>
  40fbb4:	blr	x8
  40fbb8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40fbbc:	mov	w2, #0x5                   	// #5
  40fbc0:	mov	x0, xzr
  40fbc4:	add	x1, x1, #0x30e
  40fbc8:	bl	404900 <dcgettext@plt>
  40fbcc:	ldr	x8, [x21, #160]
  40fbd0:	mov	x23, x0
  40fbd4:	mov	x0, x8
  40fbd8:	bl	444778 <argp_parse@@Base+0xcecc>
  40fbdc:	mov	x3, x0
  40fbe0:	mov	w0, wzr
  40fbe4:	mov	w1, wzr
  40fbe8:	mov	x2, x23
  40fbec:	bl	403fa0 <error@plt>
  40fbf0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40fbf4:	mov	w9, #0x2                   	// #2
  40fbf8:	str	w9, [x8, #2416]
  40fbfc:	b	40fab4 <wcrtomb@plt+0xaf74>
  40fc00:	add	sp, sp, #0x240
  40fc04:	ldp	x20, x19, [sp, #80]
  40fc08:	ldp	x22, x21, [sp, #64]
  40fc0c:	ldp	x24, x23, [sp, #48]
  40fc10:	ldp	x26, x25, [sp, #32]
  40fc14:	ldp	x28, x27, [sp, #16]
  40fc18:	ldp	x29, x30, [sp], #96
  40fc1c:	ret
  40fc20:	stp	x29, x30, [sp, #-64]!
  40fc24:	str	x23, [sp, #16]
  40fc28:	adrp	x23, 477000 <_obstack_memory_used@@Base+0x304b0>
  40fc2c:	ldr	w2, [x23, #1872]
  40fc30:	stp	x20, x19, [sp, #48]
  40fc34:	mov	x19, x1
  40fc38:	mov	x20, x0
  40fc3c:	mov	w0, w2
  40fc40:	mov	x1, x20
  40fc44:	mov	x3, x19
  40fc48:	stp	x22, x21, [sp, #32]
  40fc4c:	mov	x29, sp
  40fc50:	bl	404750 <renameat@plt>
  40fc54:	cbz	w0, 40fc84 <wcrtomb@plt+0xb144>
  40fc58:	bl	404a10 <__errno_location@plt>
  40fc5c:	ldr	w21, [x0]
  40fc60:	cmp	w21, #0x2
  40fc64:	b.ne	40fd08 <wcrtomb@plt+0xb1c8>  // b.any
  40fc68:	mov	x22, x0
  40fc6c:	add	x1, x29, #0x1c
  40fc70:	mov	x0, x19
  40fc74:	bl	40fd90 <wcrtomb@plt+0xb250>
  40fc78:	cbz	w0, 40fcec <wcrtomb@plt+0xb1ac>
  40fc7c:	mov	w21, #0x2                   	// #2
  40fc80:	b	40fd08 <wcrtomb@plt+0xb1c8>
  40fc84:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40fc88:	ldr	x22, [x8, #1048]
  40fc8c:	cbz	x22, 40fd78 <wcrtomb@plt+0xb238>
  40fc90:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40fc94:	ldr	w23, [x8, #3056]
  40fc98:	b	40fca4 <wcrtomb@plt+0xb164>
  40fc9c:	ldr	x22, [x22]
  40fca0:	cbz	x22, 40fd78 <wcrtomb@plt+0xb238>
  40fca4:	ldr	w8, [x22, #92]
  40fca8:	cmp	w23, w8
  40fcac:	b.ne	40fc9c <wcrtomb@plt+0xb15c>  // b.any
  40fcb0:	ldr	x21, [x22, #160]
  40fcb4:	mov	x1, x20
  40fcb8:	mov	x0, x21
  40fcbc:	bl	404660 <strcmp@plt>
  40fcc0:	cbnz	w0, 40fc9c <wcrtomb@plt+0xb15c>
  40fcc4:	mov	x0, x21
  40fcc8:	bl	404700 <free@plt>
  40fccc:	mov	x0, x19
  40fcd0:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  40fcd4:	str	x0, [x22, #160]
  40fcd8:	mov	x0, x19
  40fcdc:	bl	403f40 <strlen@plt>
  40fce0:	str	x0, [x22, #152]
  40fce4:	mov	w0, #0x1                   	// #1
  40fce8:	b	40fd7c <wcrtomb@plt+0xb23c>
  40fcec:	ldr	w0, [x23, #1872]
  40fcf0:	mov	x1, x20
  40fcf4:	mov	x3, x19
  40fcf8:	mov	w2, w0
  40fcfc:	bl	404750 <renameat@plt>
  40fd00:	cbz	w0, 40fd78 <wcrtomb@plt+0xb238>
  40fd04:	ldr	w21, [x22]
  40fd08:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40fd0c:	ldr	x8, [x8, #4064]
  40fd10:	cbz	x8, 40fd18 <wcrtomb@plt+0xb1d8>
  40fd14:	blr	x8
  40fd18:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  40fd1c:	add	x1, x1, #0x2f7
  40fd20:	mov	w2, #0x5                   	// #5
  40fd24:	mov	x0, xzr
  40fd28:	bl	404900 <dcgettext@plt>
  40fd2c:	mov	x22, x0
  40fd30:	mov	w0, wzr
  40fd34:	mov	x1, x20
  40fd38:	bl	444a58 <argp_parse@@Base+0xd1ac>
  40fd3c:	mov	x20, x0
  40fd40:	mov	w0, #0x1                   	// #1
  40fd44:	mov	x1, x19
  40fd48:	bl	444a58 <argp_parse@@Base+0xd1ac>
  40fd4c:	mov	x4, x0
  40fd50:	mov	w0, wzr
  40fd54:	mov	w1, w21
  40fd58:	mov	x2, x22
  40fd5c:	mov	x3, x20
  40fd60:	bl	403fa0 <error@plt>
  40fd64:	mov	w0, wzr
  40fd68:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40fd6c:	mov	w9, #0x2                   	// #2
  40fd70:	str	w9, [x8, #2416]
  40fd74:	b	40fd7c <wcrtomb@plt+0xb23c>
  40fd78:	mov	w0, #0x1                   	// #1
  40fd7c:	ldp	x20, x19, [sp, #48]
  40fd80:	ldp	x22, x21, [sp, #32]
  40fd84:	ldr	x23, [sp, #16]
  40fd88:	ldp	x29, x30, [sp], #64
  40fd8c:	ret
  40fd90:	sub	sp, sp, #0xf0
  40fd94:	stp	x28, x27, [sp, #160]
  40fd98:	stp	x26, x25, [sp, #176]
  40fd9c:	stp	x20, x19, [sp, #224]
  40fda0:	mov	x19, x0
  40fda4:	mov	x20, xzr
  40fda8:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40fdac:	mov	w26, #0xc0                  	// #192
  40fdb0:	adrp	x27, 477000 <_obstack_memory_used@@Base+0x304b0>
  40fdb4:	mov	w28, #0x2f                  	// #47
  40fdb8:	stp	x29, x30, [sp, #144]
  40fdbc:	stp	x24, x23, [sp, #192]
  40fdc0:	stp	x22, x21, [sp, #208]
  40fdc4:	add	x29, sp, #0x90
  40fdc8:	str	x1, [sp, #8]
  40fdcc:	b	40fdd8 <wcrtomb@plt+0xb298>
  40fdd0:	cbz	w8, 40fef0 <wcrtomb@plt+0xb3b0>
  40fdd4:	add	x20, x20, #0x1
  40fdd8:	add	x21, x19, x20
  40fddc:	ldrb	w8, [x21]
  40fde0:	cmp	w8, #0x2f
  40fde4:	b.ne	40fdd0 <wcrtomb@plt+0xb290>  // b.any
  40fde8:	cbz	x20, 40fdd4 <wcrtomb@plt+0xb294>
  40fdec:	add	x8, x19, x20
  40fdf0:	ldurb	w8, [x8, #-1]
  40fdf4:	cmp	w8, #0x2f
  40fdf8:	b.eq	40fdd4 <wcrtomb@plt+0xb294>  // b.none
  40fdfc:	cmp	w8, #0x2e
  40fe00:	b.ne	40fe3c <wcrtomb@plt+0xb2fc>  // b.any
  40fe04:	cmp	x20, #0x1
  40fe08:	b.eq	40fdd4 <wcrtomb@plt+0xb294>  // b.none
  40fe0c:	add	x8, x19, x20
  40fe10:	ldurb	w8, [x8, #-2]
  40fe14:	cmp	w8, #0x2f
  40fe18:	b.eq	40fdd4 <wcrtomb@plt+0xb294>  // b.none
  40fe1c:	cmp	w8, #0x2e
  40fe20:	b.ne	40fe3c <wcrtomb@plt+0xb2fc>  // b.any
  40fe24:	cmp	x20, #0x2
  40fe28:	b.eq	40fdd4 <wcrtomb@plt+0xb294>  // b.none
  40fe2c:	add	x8, x19, x20
  40fe30:	ldurb	w8, [x8, #-3]
  40fe34:	cmp	w8, #0x2f
  40fe38:	b.eq	40fdd4 <wcrtomb@plt+0xb294>  // b.none
  40fe3c:	strb	wzr, [x21]
  40fe40:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40fe44:	ldr	w8, [x8, #1036]
  40fe48:	ldrb	w9, [x25, #1032]
  40fe4c:	ldr	w0, [x27, #1872]
  40fe50:	mov	x1, x19
  40fe54:	mvn	w8, w8
  40fe58:	cmp	w9, #0x0
  40fe5c:	and	w22, w8, #0x1ff
  40fe60:	csel	w8, w26, wzr, eq  // eq = none
  40fe64:	orr	w23, w8, w22
  40fe68:	mov	w2, w23
  40fe6c:	bl	4041a0 <mkdirat@plt>
  40fe70:	cbz	w0, 40fea8 <wcrtomb@plt+0xb368>
  40fe74:	bl	404a10 <__errno_location@plt>
  40fe78:	ldr	w24, [x0]
  40fe7c:	cmp	w24, #0x11
  40fe80:	b.eq	40fee8 <wcrtomb@plt+0xb3a8>  // b.none
  40fe84:	ldr	w1, [x27, #1872]
  40fe88:	mov	x22, x0
  40fe8c:	add	x3, sp, #0x10
  40fe90:	mov	w0, wzr
  40fe94:	mov	x2, x19
  40fe98:	mov	w4, wzr
  40fe9c:	bl	404b20 <__fxstatat@plt>
  40fea0:	cbz	w0, 40fee8 <wcrtomb@plt+0xb3a8>
  40fea4:	b	40ff18 <wcrtomb@plt+0xb3d8>
  40fea8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40feac:	ldr	w8, [x8, #1040]
  40feb0:	mov	w3, #0x1ff                 	// #511
  40feb4:	mov	w5, #0x100                 	// #256
  40feb8:	mov	x0, x19
  40febc:	bic	w2, w23, w8
  40fec0:	mov	x1, xzr
  40fec4:	mov	w4, w22
  40fec8:	bl	411370 <wcrtomb@plt+0xc830>
  40fecc:	mov	x0, x19
  40fed0:	mov	w1, w20
  40fed4:	mov	w2, w22
  40fed8:	bl	41a068 <wcrtomb@plt+0x15528>
  40fedc:	ldr	x8, [sp, #8]
  40fee0:	mov	w9, #0x1                   	// #1
  40fee4:	strb	w9, [x8]
  40fee8:	strb	w28, [x21]
  40feec:	b	40fdd4 <wcrtomb@plt+0xb294>
  40fef0:	mov	w23, wzr
  40fef4:	mov	w0, w23
  40fef8:	ldp	x20, x19, [sp, #224]
  40fefc:	ldp	x22, x21, [sp, #208]
  40ff00:	ldp	x24, x23, [sp, #192]
  40ff04:	ldp	x26, x25, [sp, #176]
  40ff08:	ldp	x28, x27, [sp, #160]
  40ff0c:	ldp	x29, x30, [sp, #144]
  40ff10:	add	sp, sp, #0xf0
  40ff14:	ret
  40ff18:	mov	w23, w0
  40ff1c:	mov	x0, x19
  40ff20:	str	w24, [x22]
  40ff24:	bl	42a6e0 <wcrtomb@plt+0x25ba0>
  40ff28:	mov	w8, #0x2f                  	// #47
  40ff2c:	strb	w8, [x19, x20]
  40ff30:	b	40fef4 <wcrtomb@plt+0xb3b4>
  40ff34:	sub	sp, sp, #0xe0
  40ff38:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ff3c:	ldrb	w8, [x8, #3608]
  40ff40:	stp	x26, x25, [sp, #160]
  40ff44:	stp	x24, x23, [sp, #176]
  40ff48:	stp	x22, x21, [sp, #192]
  40ff4c:	stp	x20, x19, [sp, #208]
  40ff50:	mov	w23, w7
  40ff54:	mov	w26, w6
  40ff58:	mov	w19, w5
  40ff5c:	mov	w25, w4
  40ff60:	mov	w24, w3
  40ff64:	mov	w22, w2
  40ff68:	mov	x20, x1
  40ff6c:	mov	x21, x0
  40ff70:	stp	x29, x30, [sp, #128]
  40ff74:	stp	x28, x27, [sp, #144]
  40ff78:	add	x29, sp, #0x80
  40ff7c:	cbnz	w8, 41001c <wcrtomb@plt+0xb4dc>
  40ff80:	tbnz	w26, #0, 41001c <wcrtomb@plt+0xb4dc>
  40ff84:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  40ff88:	ldrb	w8, [x27, #3089]
  40ff8c:	cbz	w8, 40ff9c <wcrtomb@plt+0xb45c>
  40ff90:	ldur	q0, [x20, #216]
  40ff94:	str	q0, [sp]
  40ff98:	b	40ffa4 <wcrtomb@plt+0xb464>
  40ff9c:	mov	w8, #0x3ffffffe            	// #1073741822
  40ffa0:	str	x8, [sp, #8]
  40ffa4:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  40ffa8:	ldur	q0, [x20, #232]
  40ffac:	ldr	w1, [x8, #1872]
  40ffb0:	mov	x3, sp
  40ffb4:	mov	w0, w22
  40ffb8:	mov	x2, x21
  40ffbc:	mov	w4, w23
  40ffc0:	str	q0, [sp, #16]
  40ffc4:	bl	439f28 <argp_parse@@Base+0x267c>
  40ffc8:	cbz	w0, 40fffc <wcrtomb@plt+0xb4bc>
  40ffcc:	and	w8, w19, #0xff
  40ffd0:	cmp	w8, #0x32
  40ffd4:	b.ne	40fff0 <wcrtomb@plt+0xb4b0>  // b.any
  40ffd8:	bl	404a10 <__errno_location@plt>
  40ffdc:	ldr	w8, [x0]
  40ffe0:	cmp	w8, #0x26
  40ffe4:	b.eq	41001c <wcrtomb@plt+0xb4dc>  // b.none
  40ffe8:	cmp	w8, #0x5f
  40ffec:	b.eq	41001c <wcrtomb@plt+0xb4dc>  // b.none
  40fff0:	mov	x0, x21
  40fff4:	bl	42b3cc <wcrtomb@plt+0x2688c>
  40fff8:	b	41001c <wcrtomb@plt+0xb4dc>
  40fffc:	ldrb	w8, [x27, #3089]
  410000:	cbz	w8, 410010 <wcrtomb@plt+0xb4d0>
  410004:	ldp	x1, x2, [sp]
  410008:	mov	x0, x21
  41000c:	bl	4102e0 <wcrtomb@plt+0xb7a0>
  410010:	ldp	x1, x2, [sp, #16]
  410014:	mov	x0, x21
  410018:	bl	4102e0 <wcrtomb@plt+0xb7a0>
  41001c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410020:	ldr	w8, [x8, #4036]
  410024:	cmp	w8, #0x1
  410028:	b.lt	4100d8 <wcrtomb@plt+0xb598>  // b.tstop
  41002c:	tbnz	w26, #0, 4100d8 <wcrtomb@plt+0xb598>
  410030:	ldp	w27, w28, [x20, #112]
  410034:	tbnz	w22, #31, 410064 <wcrtomb@plt+0xb524>
  410038:	mov	w0, w22
  41003c:	mov	w1, w27
  410040:	mov	w2, w28
  410044:	bl	404aa0 <fchown@plt>
  410048:	cbz	w0, 4100bc <wcrtomb@plt+0xb57c>
  41004c:	bl	404a10 <__errno_location@plt>
  410050:	ldr	w8, [x0]
  410054:	cmp	w8, #0x5f
  410058:	b.eq	410064 <wcrtomb@plt+0xb524>  // b.none
  41005c:	cmp	w8, #0x26
  410060:	b.ne	410084 <wcrtomb@plt+0xb544>  // b.any
  410064:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  410068:	ldr	w0, [x8, #1872]
  41006c:	mov	x1, x21
  410070:	mov	w2, w27
  410074:	mov	w3, w28
  410078:	mov	w4, w23
  41007c:	bl	404770 <fchownat@plt>
  410080:	cbz	w0, 4100bc <wcrtomb@plt+0xb57c>
  410084:	and	w8, w19, #0xff
  410088:	cmp	w8, #0x32
  41008c:	b.ne	4100a8 <wcrtomb@plt+0xb568>  // b.any
  410090:	bl	404a10 <__errno_location@plt>
  410094:	ldr	w8, [x0]
  410098:	cmp	w8, #0x26
  41009c:	b.eq	4100d8 <wcrtomb@plt+0xb598>  // b.none
  4100a0:	cmp	w8, #0x5f
  4100a4:	b.eq	4100d8 <wcrtomb@plt+0xb598>  // b.none
  4100a8:	mov	x0, x21
  4100ac:	mov	w1, w27
  4100b0:	mov	w2, w28
  4100b4:	bl	42a4a8 <wcrtomb@plt+0x25968>
  4100b8:	b	4100d8 <wcrtomb@plt+0xb598>
  4100bc:	orn	w8, w24, w25
  4100c0:	mov	w9, #0x49                  	// #73
  4100c4:	tst	w8, w9
  4100c8:	b.eq	4100d8 <wcrtomb@plt+0xb598>  // b.none
  4100cc:	mvn	w8, w24
  4100d0:	orr	w8, w8, #0xfffff3ff
  4100d4:	and	w25, w8, w25
  4100d8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4100dc:	ldr	w9, [x9, #3668]
  4100e0:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4100e4:	ldr	w8, [x20, #104]
  4100e8:	ldr	w10, [x10, #1040]
  4100ec:	cmp	w9, #0x0
  4100f0:	eor	w11, w26, #0x1
  4100f4:	cset	w9, gt
  4100f8:	tst	w9, w11
  4100fc:	mov	w9, #0x1ff                 	// #511
  410100:	bic	w26, w8, w10
  410104:	mov	w8, #0xfff                 	// #4095
  410108:	csel	w27, w8, w9, ne  // ne = any
  41010c:	eor	w8, w26, w24
  410110:	orn	w8, w8, w25
  410114:	tst	w27, w8
  410118:	b.eq	41028c <wcrtomb@plt+0xb74c>  // b.none
  41011c:	mvn	w8, w25
  410120:	bic	w8, w8, w27
  410124:	tst	w8, #0xe00
  410128:	b.eq	410174 <wcrtomb@plt+0xb634>  // b.none
  41012c:	tbnz	w22, #31, 410150 <wcrtomb@plt+0xb610>
  410130:	mov	x2, sp
  410134:	mov	w0, wzr
  410138:	mov	w1, w22
  41013c:	bl	4048e0 <__fxstat@plt>
  410140:	cbz	w0, 410170 <wcrtomb@plt+0xb630>
  410144:	mov	x0, x21
  410148:	bl	42b158 <wcrtomb@plt+0x26618>
  41014c:	b	41028c <wcrtomb@plt+0xb74c>
  410150:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  410154:	ldr	w1, [x8, #1872]
  410158:	mov	x3, sp
  41015c:	mov	w0, wzr
  410160:	mov	x2, x21
  410164:	mov	w4, w23
  410168:	bl	404b20 <__fxstatat@plt>
  41016c:	cbnz	w0, 410144 <wcrtomb@plt+0xb604>
  410170:	ldr	w24, [sp, #16]
  410174:	mvn	w8, w27
  410178:	and	w9, w24, #0xfff
  41017c:	and	w8, w9, w8
  410180:	and	w10, w27, w26
  410184:	orr	w24, w8, w10
  410188:	cmp	w9, w24
  41018c:	b.eq	41028c <wcrtomb@plt+0xb74c>  // b.none
  410190:	tbnz	w22, #31, 4101bc <wcrtomb@plt+0xb67c>
  410194:	mov	w0, w22
  410198:	mov	w1, w24
  41019c:	bl	4043c0 <fchmod@plt>
  4101a0:	cbz	w0, 4101e4 <wcrtomb@plt+0xb6a4>
  4101a4:	bl	404a10 <__errno_location@plt>
  4101a8:	ldr	w25, [x0]
  4101ac:	cmp	w25, #0x5f
  4101b0:	b.eq	4101bc <wcrtomb@plt+0xb67c>  // b.none
  4101b4:	cmp	w25, #0x26
  4101b8:	b.ne	4101e8 <wcrtomb@plt+0xb6a8>  // b.any
  4101bc:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  4101c0:	ldr	w0, [x8, #1872]
  4101c4:	mov	x1, x21
  4101c8:	mov	w2, w24
  4101cc:	mov	w3, w23
  4101d0:	bl	404a60 <fchmodat@plt>
  4101d4:	cbz	w0, 4101e4 <wcrtomb@plt+0xb6a4>
  4101d8:	bl	404a10 <__errno_location@plt>
  4101dc:	ldr	w25, [x0]
  4101e0:	b	4101e8 <wcrtomb@plt+0xb6a8>
  4101e4:	mov	w25, wzr
  4101e8:	and	w8, w19, #0xff
  4101ec:	cmp	w8, #0x32
  4101f0:	b.eq	410258 <wcrtomb@plt+0xb718>  // b.none
  4101f4:	cbz	w23, 410258 <wcrtomb@plt+0xb718>
  4101f8:	cmp	w25, #0x5f
  4101fc:	b.eq	410208 <wcrtomb@plt+0xb6c8>  // b.none
  410200:	cmp	w25, #0x26
  410204:	b.ne	410258 <wcrtomb@plt+0xb718>  // b.any
  410208:	tbnz	w22, #31, 410234 <wcrtomb@plt+0xb6f4>
  41020c:	mov	w0, w22
  410210:	mov	w1, w24
  410214:	bl	4043c0 <fchmod@plt>
  410218:	cbz	w0, 41028c <wcrtomb@plt+0xb74c>
  41021c:	bl	404a10 <__errno_location@plt>
  410220:	ldr	w25, [x0]
  410224:	cmp	w25, #0x5f
  410228:	b.eq	410234 <wcrtomb@plt+0xb6f4>  // b.none
  41022c:	cmp	w25, #0x26
  410230:	b.ne	410258 <wcrtomb@plt+0xb718>  // b.any
  410234:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  410238:	ldr	w0, [x8, #1872]
  41023c:	mov	x1, x21
  410240:	mov	w2, w24
  410244:	mov	w3, wzr
  410248:	bl	404a60 <fchmodat@plt>
  41024c:	cbz	w0, 41028c <wcrtomb@plt+0xb74c>
  410250:	bl	404a10 <__errno_location@plt>
  410254:	ldr	w25, [x0]
  410258:	cbz	w25, 41028c <wcrtomb@plt+0xb74c>
  41025c:	and	w8, w19, #0xff
  410260:	cmp	w8, #0x32
  410264:	b.ne	410278 <wcrtomb@plt+0xb738>  // b.any
  410268:	cmp	w25, #0x26
  41026c:	b.eq	41028c <wcrtomb@plt+0xb74c>  // b.none
  410270:	cmp	w25, #0x5f
  410274:	b.eq	41028c <wcrtomb@plt+0xb74c>  // b.none
  410278:	bl	404a10 <__errno_location@plt>
  41027c:	str	w25, [x0]
  410280:	mov	x0, x21
  410284:	mov	w1, w24
  410288:	bl	42a368 <wcrtomb@plt+0x25828>
  41028c:	mov	w3, #0x1                   	// #1
  410290:	mov	x0, x20
  410294:	mov	x1, x21
  410298:	mov	w2, w19
  41029c:	bl	42995c <wcrtomb@plt+0x24e1c>
  4102a0:	mov	x0, x20
  4102a4:	mov	x1, x21
  4102a8:	mov	w2, w19
  4102ac:	bl	428d14 <wcrtomb@plt+0x241d4>
  4102b0:	mov	x0, x20
  4102b4:	mov	x1, x21
  4102b8:	mov	w2, w19
  4102bc:	bl	4298ec <wcrtomb@plt+0x24dac>
  4102c0:	ldp	x20, x19, [sp, #208]
  4102c4:	ldp	x22, x21, [sp, #192]
  4102c8:	ldp	x24, x23, [sp, #176]
  4102cc:	ldp	x26, x25, [sp, #160]
  4102d0:	ldp	x28, x27, [sp, #144]
  4102d4:	ldp	x29, x30, [sp, #128]
  4102d8:	add	sp, sp, #0xe0
  4102dc:	ret
  4102e0:	sub	sp, sp, #0x70
  4102e4:	stp	x22, x21, [sp, #80]
  4102e8:	stp	x20, x19, [sp, #96]
  4102ec:	mov	x20, x2
  4102f0:	mov	x21, x1
  4102f4:	mov	x19, x0
  4102f8:	stp	x29, x30, [sp, #48]
  4102fc:	stp	x24, x23, [sp, #64]
  410300:	add	x29, sp, #0x30
  410304:	tbnz	x1, #63, 4103c4 <wcrtomb@plt+0xb884>
  410308:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41030c:	add	x8, x8, #0xf98
  410310:	ldr	x9, [x8]
  410314:	cmp	x9, x21
  410318:	b.ge	410434 <wcrtomb@plt+0xb8f4>  // b.tcont
  41031c:	sub	x0, x29, #0x10
  410320:	bl	43b52c <argp_parse@@Base+0x3c80>
  410324:	ldp	x8, x9, [x29, #-16]
  410328:	subs	x8, x21, x8
  41032c:	b.le	410448 <wcrtomb@plt+0xb908>
  410330:	adrp	x10, 479000 <_obstack_memory_used@@Base+0x324b0>
  410334:	ldrb	w10, [x10, #3721]
  410338:	mov	w11, #0xca00                	// #51712
  41033c:	sub	x9, x20, x9
  410340:	movk	w11, #0x3b9a, lsl #16
  410344:	add	x11, x9, x11
  410348:	cmp	x9, #0x0
  41034c:	csel	x22, x11, x9, lt  // lt = tstop
  410350:	tbz	w10, #7, 410454 <wcrtomb@plt+0xb914>
  410354:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410358:	ldr	x10, [x10, #4064]
  41035c:	add	x23, x8, x9, asr #63
  410360:	cbz	x10, 410368 <wcrtomb@plt+0xb828>
  410364:	blr	x10
  410368:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41036c:	add	x1, x1, #0x36b
  410370:	mov	w2, #0x5                   	// #5
  410374:	mov	x0, xzr
  410378:	bl	404900 <dcgettext@plt>
  41037c:	mov	x24, x0
  410380:	mov	w2, #0x1                   	// #1
  410384:	mov	x0, x21
  410388:	mov	x1, x20
  41038c:	bl	41980c <wcrtomb@plt+0x14ccc>
  410390:	mov	x20, x0
  410394:	mov	x2, sp
  410398:	mov	x0, x23
  41039c:	mov	x1, x22
  4103a0:	bl	41b22c <wcrtomb@plt+0x166ec>
  4103a4:	mov	x5, x0
  4103a8:	mov	w0, wzr
  4103ac:	mov	w1, wzr
  4103b0:	mov	x2, x24
  4103b4:	mov	x3, x19
  4103b8:	mov	x4, x20
  4103bc:	bl	403fa0 <error@plt>
  4103c0:	b	410454 <wcrtomb@plt+0xb914>
  4103c4:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4103c8:	ldrb	w8, [x8, #3721]
  4103cc:	tbz	w8, #7, 410454 <wcrtomb@plt+0xb914>
  4103d0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4103d4:	ldr	x8, [x8, #4064]
  4103d8:	cbz	x8, 4103e0 <wcrtomb@plt+0xb8a0>
  4103dc:	blr	x8
  4103e0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4103e4:	add	x1, x1, #0x349
  4103e8:	mov	w2, #0x5                   	// #5
  4103ec:	mov	x0, xzr
  4103f0:	bl	404900 <dcgettext@plt>
  4103f4:	mov	x22, x0
  4103f8:	mov	w2, #0x1                   	// #1
  4103fc:	mov	x0, x21
  410400:	mov	x1, x20
  410404:	bl	41980c <wcrtomb@plt+0x14ccc>
  410408:	mov	x2, x22
  41040c:	mov	x3, x19
  410410:	ldp	x20, x19, [sp, #96]
  410414:	ldp	x22, x21, [sp, #80]
  410418:	ldp	x24, x23, [sp, #64]
  41041c:	ldp	x29, x30, [sp, #48]
  410420:	mov	x4, x0
  410424:	mov	w0, wzr
  410428:	mov	w1, wzr
  41042c:	add	sp, sp, #0x70
  410430:	b	403fa0 <error@plt>
  410434:	b.gt	410454 <wcrtomb@plt+0xb914>
  410438:	ldr	x8, [x8, #8]
  41043c:	cmp	w8, w20
  410440:	b.pl	410454 <wcrtomb@plt+0xb914>  // b.nfrst
  410444:	b	41031c <wcrtomb@plt+0xb7dc>
  410448:	b.lt	410454 <wcrtomb@plt+0xb914>  // b.tstop
  41044c:	cmp	w9, w20
  410450:	b.mi	410330 <wcrtomb@plt+0xb7f0>  // b.first
  410454:	ldp	x20, x19, [sp, #96]
  410458:	ldp	x22, x21, [sp, #80]
  41045c:	ldp	x24, x23, [sp, #64]
  410460:	ldp	x29, x30, [sp, #48]
  410464:	add	sp, sp, #0x70
  410468:	ret
  41046c:	sub	sp, sp, #0xf0
  410470:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410474:	ldr	w9, [x9, #4036]
  410478:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41047c:	ldr	w8, [x8, #3256]
  410480:	stp	x28, x27, [sp, #160]
  410484:	mov	w10, #0x1ff                 	// #511
  410488:	mov	w11, #0x1c0                 	// #448
  41048c:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410490:	cmp	w9, #0x0
  410494:	ldrb	w12, [x27, #3681]
  410498:	csel	w9, w11, w10, gt
  41049c:	stp	x22, x21, [sp, #208]
  4104a0:	and	w22, w8, w9
  4104a4:	and	w9, w22, #0x3f
  4104a8:	stp	x20, x19, [sp, #224]
  4104ac:	mov	w20, w1
  4104b0:	mov	x19, x0
  4104b4:	csel	w9, w9, wzr, gt
  4104b8:	stp	x29, x30, [sp, #144]
  4104bc:	stp	x26, x25, [sp, #176]
  4104c0:	stp	x24, x23, [sp, #192]
  4104c4:	add	x29, sp, #0x90
  4104c8:	strb	wzr, [sp, #8]
  4104cc:	cbz	w12, 410524 <wcrtomb@plt+0xb9e4>
  4104d0:	mov	w23, wzr
  4104d4:	mov	w22, wzr
  4104d8:	mov	w21, #0x1                   	// #1
  4104dc:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4104e0:	add	x24, x24, #0xc50
  4104e4:	mov	x0, x24
  4104e8:	bl	404cf8 <wcrtomb@plt+0x1b8>
  4104ec:	ldrb	w8, [x24, #272]
  4104f0:	cbz	w8, 410558 <wcrtomb@plt+0xba18>
  4104f4:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4104f8:	add	x1, x1, #0xc50
  4104fc:	add	x2, sp, #0x10
  410500:	mov	w0, w21
  410504:	bl	41f7bc <wcrtomb@plt+0x1ac7c>
  410508:	ldr	x0, [sp, #16]
  41050c:	bl	41a168 <wcrtomb@plt+0x15628>
  410510:	bl	404d84 <wcrtomb@plt+0x244>
  410514:	ldrb	w8, [x27, #3681]
  410518:	cbz	w8, 4105d8 <wcrtomb@plt+0xba98>
  41051c:	mov	w20, wzr
  410520:	b	4108bc <wcrtomb@plt+0xbd7c>
  410524:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410528:	ldr	x10, [x10, #3672]
  41052c:	cbz	x10, 410644 <wcrtomb@plt+0xbb04>
  410530:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410534:	add	x2, x2, #0xc50
  410538:	mov	w1, #0x66                  	// #102
  41053c:	mov	x0, x19
  410540:	bl	4223bc <wcrtomb@plt+0x1d87c>
  410544:	tbnz	w0, #31, 4106c8 <wcrtomb@plt+0xbb88>
  410548:	mov	w21, w0
  41054c:	mov	w23, wzr
  410550:	mov	w22, wzr
  410554:	b	4104dc <wcrtomb@plt+0xb99c>
  410558:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41055c:	ldr	x0, [x8, #3288]
  410560:	cmp	x0, #0x1
  410564:	str	x0, [sp, #16]
  410568:	b.lt	410508 <wcrtomb@plt+0xb9c8>  // b.tstop
  41056c:	bl	404de4 <wcrtomb@plt+0x2a4>
  410570:	bl	40535c <wcrtomb@plt+0x81c>
  410574:	cbz	x0, 4106d0 <wcrtomb@plt+0xbb90>
  410578:	mov	x25, x0
  41057c:	bl	4056b4 <wcrtomb@plt+0xb74>
  410580:	ldr	x8, [sp, #16]
  410584:	cmp	x0, x8
  410588:	csel	x24, x8, x0, hi  // hi = pmore
  41058c:	bl	404a10 <__errno_location@plt>
  410590:	str	wzr, [x0]
  410594:	mov	w0, w21
  410598:	mov	x1, x25
  41059c:	mov	x2, x24
  4105a0:	bl	41bdc0 <wcrtomb@plt+0x17280>
  4105a4:	ldr	x8, [sp, #16]
  4105a8:	add	x9, x25, x24
  4105ac:	mov	x26, x0
  4105b0:	sub	x0, x9, #0x1
  4105b4:	sub	x8, x8, x24
  4105b8:	str	x8, [sp, #16]
  4105bc:	bl	405670 <wcrtomb@plt+0xb30>
  4105c0:	cmp	x26, x24
  4105c4:	b.ne	410714 <wcrtomb@plt+0xbbd4>  // b.any
  4105c8:	ldr	x0, [sp, #16]
  4105cc:	cmp	x0, #0x1
  4105d0:	b.ge	41056c <wcrtomb@plt+0xba2c>  // b.tcont
  4105d4:	b	410508 <wcrtomb@plt+0xb9c8>
  4105d8:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4105dc:	ldr	x8, [x24, #3672]
  4105e0:	cbnz	x8, 41061c <wcrtomb@plt+0xbadc>
  4105e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4105e8:	ldr	w8, [x8, #3808]
  4105ec:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4105f0:	add	x1, x1, #0xc50
  4105f4:	mov	x0, x19
  4105f8:	cmp	w8, #0x2
  4105fc:	cset	w8, ne  // ne = any
  410600:	lsl	w7, w8, #8
  410604:	mov	w2, w21
  410608:	mov	w3, w23
  41060c:	mov	w4, w22
  410610:	mov	w5, w20
  410614:	mov	w6, wzr
  410618:	bl	40ff34 <wcrtomb@plt+0xb3f4>
  41061c:	mov	w0, w21
  410620:	bl	404520 <close@plt>
  410624:	mov	w20, w0
  410628:	tbz	w0, #31, 410634 <wcrtomb@plt+0xbaf4>
  41062c:	mov	x0, x19
  410630:	bl	42a53c <wcrtomb@plt+0x259fc>
  410634:	ldr	x8, [x24, #3672]
  410638:	cbz	x8, 4108bc <wcrtomb@plt+0xbd7c>
  41063c:	bl	422840 <wcrtomb@plt+0x1dd00>
  410640:	b	4108bc <wcrtomb@plt+0xbd7c>
  410644:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410648:	ldr	w10, [x10, #3712]
  41064c:	adrp	x26, 477000 <_obstack_memory_used@@Base+0x304b0>
  410650:	strb	wzr, [sp, #12]
  410654:	cmp	w10, #0x1
  410658:	b.lt	410734 <wcrtomb@plt+0xbbf4>  // b.tstop
  41065c:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410660:	ldr	x10, [x10, #3480]
  410664:	mov	w11, #0x1                   	// #1
  410668:	str	w11, [sp, #4]
  41066c:	cbz	x10, 41075c <wcrtomb@plt+0xbc1c>
  410670:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410674:	ldr	w10, [x10, #1040]
  410678:	and	w8, w8, #0x1ff
  41067c:	bic	w8, w8, w10
  410680:	eor	w21, w8, w9
  410684:	ldr	w1, [x26, #1872]
  410688:	add	x4, sp, #0x10
  41068c:	mov	w0, wzr
  410690:	mov	x2, x19
  410694:	mov	w3, w21
  410698:	str	xzr, [sp, #16]
  41069c:	bl	4043d0 <__xmknodat@plt>
  4106a0:	cbz	w0, 410740 <wcrtomb@plt+0xbc00>
  4106a4:	add	x2, sp, #0xc
  4106a8:	mov	x0, x19
  4106ac:	mov	w1, wzr
  4106b0:	bl	411178 <wcrtomb@plt+0xc638>
  4106b4:	cmp	w0, #0x2
  4106b8:	b.eq	410734 <wcrtomb@plt+0xbbf4>  // b.none
  4106bc:	cbnz	w0, 410684 <wcrtomb@plt+0xbb44>
  4106c0:	bl	418e14 <wcrtomb@plt+0x142d4>
  4106c4:	b	4108b0 <wcrtomb@plt+0xbd70>
  4106c8:	bl	418e14 <wcrtomb@plt+0x142d4>
  4106cc:	b	41051c <wcrtomb@plt+0xb9dc>
  4106d0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4106d4:	ldr	x8, [x8, #4064]
  4106d8:	cbz	x8, 4106e0 <wcrtomb@plt+0xbba0>
  4106dc:	blr	x8
  4106e0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4106e4:	add	x1, x1, #0xcd8
  4106e8:	mov	w2, #0x5                   	// #5
  4106ec:	mov	x0, xzr
  4106f0:	bl	404900 <dcgettext@plt>
  4106f4:	mov	x2, x0
  4106f8:	mov	w0, wzr
  4106fc:	mov	w1, wzr
  410700:	bl	403fa0 <error@plt>
  410704:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410708:	mov	w9, #0x2                   	// #2
  41070c:	str	w9, [x8, #2416]
  410710:	b	410508 <wcrtomb@plt+0xb9c8>
  410714:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410718:	ldr	x8, [x8, #3672]
  41071c:	cbnz	x8, 410508 <wcrtomb@plt+0xb9c8>
  410720:	mov	x0, x19
  410724:	mov	x1, x26
  410728:	mov	x2, x24
  41072c:	bl	42b558 <wcrtomb@plt+0x26a18>
  410730:	b	410508 <wcrtomb@plt+0xb9c8>
  410734:	mov	w8, #0x1                   	// #1
  410738:	str	w8, [sp, #4]
  41073c:	b	41075c <wcrtomb@plt+0xbc1c>
  410740:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410744:	add	x0, x0, #0xc50
  410748:	mov	x1, x19
  41074c:	mov	w2, w20
  410750:	mov	w3, wzr
  410754:	bl	42995c <wcrtomb@plt+0x24e1c>
  410758:	str	wzr, [sp, #4]
  41075c:	mov	w24, #0x8b41                	// #35649
  410760:	mov	w25, #0x9c1                 	// #2497
  410764:	movk	w24, #0x8, lsl #16
  410768:	movk	w25, #0x8, lsl #16
  41076c:	adrp	x28, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410770:	b	4107b0 <wcrtomb@plt+0xbc70>
  410774:	bl	404a10 <__errno_location@plt>
  410778:	mov	w26, w20
  41077c:	ldr	w20, [x0]
  410780:	mov	x23, x0
  410784:	mov	w0, w21
  410788:	bl	404520 <close@plt>
  41078c:	str	w20, [x23]
  410790:	mov	w20, w26
  410794:	mov	x26, x27
  410798:	add	x2, sp, #0x8
  41079c:	mov	w1, #0x1                   	// #1
  4107a0:	mov	x0, x19
  4107a4:	bl	411178 <wcrtomb@plt+0xc638>
  4107a8:	cmp	w0, #0x1
  4107ac:	b.ne	4108a0 <wcrtomb@plt+0xbd60>  // b.any
  4107b0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4107b4:	ldrb	w8, [x8, #3632]
  4107b8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4107bc:	ldr	w23, [x9, #3808]
  4107c0:	add	w9, w25, #0x180
  4107c4:	cmp	w8, #0x0
  4107c8:	csel	w8, w24, w9, eq  // eq = none
  4107cc:	ldr	w9, [sp, #4]
  4107d0:	cmp	w23, #0x2
  4107d4:	csel	w8, w8, w25, eq  // eq = none
  4107d8:	cmp	w9, #0x0
  4107dc:	and	w9, w8, w24
  4107e0:	csel	w21, w8, w9, ne  // ne = any
  4107e4:	cmp	w20, #0x37
  4107e8:	b.ne	41083c <wcrtomb@plt+0xbcfc>  // b.any
  4107ec:	ldrb	w8, [x28, #1056]
  4107f0:	tbnz	w8, #0, 41083c <wcrtomb@plt+0xbcfc>
  4107f4:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4107f8:	ldrb	w8, [x8, #3720]
  4107fc:	mov	w9, #0x1                   	// #1
  410800:	strb	w9, [x28, #1056]
  410804:	tbz	w8, #3, 41083c <wcrtomb@plt+0xbcfc>
  410808:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41080c:	ldr	x8, [x8, #4064]
  410810:	cbz	x8, 410818 <wcrtomb@plt+0xbcd8>
  410814:	blr	x8
  410818:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41081c:	mov	w2, #0x5                   	// #5
  410820:	mov	x0, xzr
  410824:	add	x1, x1, #0x440
  410828:	bl	404900 <dcgettext@plt>
  41082c:	mov	x2, x0
  410830:	mov	w0, wzr
  410834:	mov	w1, wzr
  410838:	bl	403fa0 <error@plt>
  41083c:	ldr	w0, [x26, #1872]
  410840:	mov	x1, x19
  410844:	mov	w2, w21
  410848:	mov	w3, w22
  41084c:	bl	4049f0 <openat@plt>
  410850:	tbnz	w0, #31, 410798 <wcrtomb@plt+0xbc58>
  410854:	mov	w21, w0
  410858:	cmp	w23, #0x2
  41085c:	b.ne	4108e0 <wcrtomb@plt+0xbda0>  // b.any
  410860:	add	x2, sp, #0x10
  410864:	mov	w0, wzr
  410868:	mov	w1, w21
  41086c:	mov	x27, x26
  410870:	bl	4048e0 <__fxstat@plt>
  410874:	cbnz	w0, 410774 <wcrtomb@plt+0xbc34>
  410878:	ldr	w23, [sp, #32]
  41087c:	and	w8, w23, #0xf000
  410880:	cmp	w8, #0x8, lsl #12
  410884:	b.eq	4108f4 <wcrtomb@plt+0xbdb4>  // b.none
  410888:	mov	w0, w21
  41088c:	bl	404520 <close@plt>
  410890:	bl	404a10 <__errno_location@plt>
  410894:	mov	w8, #0x11                  	// #17
  410898:	str	w8, [x0]
  41089c:	b	410794 <wcrtomb@plt+0xbc54>
  4108a0:	mov	w21, w0
  4108a4:	bl	418e14 <wcrtomb@plt+0x142d4>
  4108a8:	cmp	w21, #0x2
  4108ac:	b.eq	41051c <wcrtomb@plt+0xb9dc>  // b.none
  4108b0:	mov	x0, x19
  4108b4:	bl	42a86c <wcrtomb@plt+0x25d2c>
  4108b8:	mov	w20, #0x1                   	// #1
  4108bc:	mov	w0, w20
  4108c0:	ldp	x20, x19, [sp, #224]
  4108c4:	ldp	x22, x21, [sp, #208]
  4108c8:	ldp	x24, x23, [sp, #192]
  4108cc:	ldp	x26, x25, [sp, #176]
  4108d0:	ldp	x28, x27, [sp, #160]
  4108d4:	ldp	x29, x30, [sp, #144]
  4108d8:	add	sp, sp, #0xf0
  4108dc:	ret
  4108e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4108e4:	ldr	w8, [x8, #1040]
  4108e8:	bic	w23, w22, w8
  4108ec:	mov	w22, #0x1ff                 	// #511
  4108f0:	b	4108f8 <wcrtomb@plt+0xbdb8>
  4108f4:	mov	w22, #0xffffffff            	// #-1
  4108f8:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4108fc:	b	4104dc <wcrtomb@plt+0xb99c>
  410900:	sub	sp, sp, #0x170
  410904:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410908:	ldrb	w8, [x8, #3141]
  41090c:	stp	x26, x25, [sp, #304]
  410910:	stp	x20, x19, [sp, #352]
  410914:	mov	w20, w1
  410918:	mov	x19, x0
  41091c:	adrp	x25, 477000 <_obstack_memory_used@@Base+0x304b0>
  410920:	stp	x29, x30, [sp, #272]
  410924:	stp	x28, x27, [sp, #288]
  410928:	stp	x24, x23, [sp, #320]
  41092c:	stp	x22, x21, [sp, #336]
  410930:	add	x29, sp, #0x110
  410934:	strb	wzr, [sp, #132]
  410938:	cbz	w8, 410980 <wcrtomb@plt+0xbe40>
  41093c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410940:	ldr	x8, [x21, #3880]
  410944:	cbnz	x8, 410980 <wcrtomb@plt+0xbe40>
  410948:	ldr	w1, [x25, #1872]
  41094c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x184b0>
  410950:	add	x2, x2, #0x50a
  410954:	add	x3, sp, #0x88
  410958:	mov	w0, wzr
  41095c:	mov	w4, wzr
  410960:	bl	404b20 <__fxstatat@plt>
  410964:	cbz	w0, 410978 <wcrtomb@plt+0xbe38>
  410968:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x184b0>
  41096c:	add	x0, x0, #0x50a
  410970:	bl	41c40c <wcrtomb@plt+0x178cc>
  410974:	b	410980 <wcrtomb@plt+0xbe40>
  410978:	ldr	x8, [sp, #136]
  41097c:	str	x8, [x21, #3880]
  410980:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410984:	ldrb	w8, [x8, #3089]
  410988:	cbz	w8, 410998 <wcrtomb@plt+0xbe58>
  41098c:	mov	x0, x19
  410990:	bl	416ca4 <wcrtomb@plt+0x12164>
  410994:	b	4109a4 <wcrtomb@plt+0xbe64>
  410998:	cmp	w20, #0x44
  41099c:	b.ne	4109a4 <wcrtomb@plt+0xbe64>  // b.any
  4109a0:	bl	418e14 <wcrtomb@plt+0x142d4>
  4109a4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4109a8:	ldr	w9, [x9, #3668]
  4109ac:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4109b0:	ldr	w10, [x10, #4036]
  4109b4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4109b8:	cmp	w9, #0x0
  4109bc:	ldr	w8, [x8, #3256]
  4109c0:	ccmp	w10, #0x0, #0x0, le
  4109c4:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4109c8:	ldrb	w10, [x10, #1032]
  4109cc:	mov	w11, #0x1ff                 	// #511
  4109d0:	mov	w9, #0x1c0                 	// #448
  4109d4:	csel	w9, w9, w11, gt
  4109d8:	mov	w11, #0xc0                  	// #192
  4109dc:	cmp	w10, #0x0
  4109e0:	and	w8, w9, w8
  4109e4:	csel	w9, w11, wzr, eq  // eq = none
  4109e8:	mov	w20, wzr
  4109ec:	mov	w21, wzr
  4109f0:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4109f4:	orr	w23, w8, w9
  4109f8:	mov	w28, #0x11                  	// #17
  4109fc:	b	410a20 <wcrtomb@plt+0xbee0>
  410a00:	mov	w21, #0xffffffff            	// #-1
  410a04:	str	w28, [x24]
  410a08:	add	x2, sp, #0x84
  410a0c:	mov	x0, x19
  410a10:	mov	w1, wzr
  410a14:	bl	411178 <wcrtomb@plt+0xc638>
  410a18:	cmp	w0, #0x1
  410a1c:	b.ne	410b14 <wcrtomb@plt+0xbfd4>  // b.any
  410a20:	ldr	w0, [x25, #1872]
  410a24:	mov	x1, x19
  410a28:	mov	w2, w23
  410a2c:	bl	4041a0 <mkdirat@plt>
  410a30:	mov	w22, w0
  410a34:	cbz	w0, 410afc <wcrtomb@plt+0xbfbc>
  410a38:	bl	404a10 <__errno_location@plt>
  410a3c:	ldr	w8, [x0]
  410a40:	mov	x24, x0
  410a44:	cmp	w8, #0x11
  410a48:	b.ne	410a08 <wcrtomb@plt+0xbec8>  // b.any
  410a4c:	ldrb	w26, [sp, #132]
  410a50:	ldrb	w8, [x27, #3680]
  410a54:	cbz	w26, 410acc <wcrtomb@plt+0xbf8c>
  410a58:	cbz	w8, 410aa8 <wcrtomb@plt+0xbf68>
  410a5c:	ldr	w1, [x25, #1872]
  410a60:	add	x3, sp, #0x88
  410a64:	mov	w4, #0x100                 	// #256
  410a68:	mov	w0, wzr
  410a6c:	mov	x2, x19
  410a70:	bl	404b20 <__fxstatat@plt>
  410a74:	cbnz	w0, 410aa4 <wcrtomb@plt+0xbf64>
  410a78:	ldr	w8, [sp, #152]
  410a7c:	and	w8, w8, #0xf000
  410a80:	cmp	w8, #0xa, lsl #12
  410a84:	b.ne	410aa4 <wcrtomb@plt+0xbf64>  // b.any
  410a88:	ldr	w1, [x25, #1872]
  410a8c:	add	x3, sp, #0x88
  410a90:	mov	w0, wzr
  410a94:	mov	x2, x19
  410a98:	mov	w4, wzr
  410a9c:	bl	404b20 <__fxstatat@plt>
  410aa0:	cbz	w0, 410ae4 <wcrtomb@plt+0xbfa4>
  410aa4:	str	w28, [x24]
  410aa8:	mov	x1, sp
  410aac:	mov	x0, x19
  410ab0:	bl	41bbd4 <wcrtomb@plt+0x17094>
  410ab4:	cbnz	w0, 410a04 <wcrtomb@plt+0xbec4>
  410ab8:	ldr	w20, [sp, #16]
  410abc:	and	w8, w20, #0xf000
  410ac0:	cmp	w8, #0x4, lsl #12
  410ac4:	b.ne	410a00 <wcrtomb@plt+0xbec0>  // b.any
  410ac8:	b	410b88 <wcrtomb@plt+0xc048>
  410acc:	cbnz	w8, 410a58 <wcrtomb@plt+0xbf18>
  410ad0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410ad4:	ldr	w9, [x9, #3808]
  410ad8:	and	w9, w9, #0xfffffffd
  410adc:	cbnz	w9, 410a08 <wcrtomb@plt+0xbec8>
  410ae0:	b	410a58 <wcrtomb@plt+0xbf18>
  410ae4:	ldr	w8, [sp, #152]
  410ae8:	str	w28, [x24]
  410aec:	and	w8, w8, #0xf000
  410af0:	cmp	w8, #0x4, lsl #12
  410af4:	b.ne	410aa8 <wcrtomb@plt+0xbf68>  // b.any
  410af8:	b	410be8 <wcrtomb@plt+0xc0a8>
  410afc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410b00:	ldr	w8, [x8, #1040]
  410b04:	mov	w21, #0x1ff                 	// #511
  410b08:	mov	w5, #0x100                 	// #256
  410b0c:	bic	w20, w23, w8
  410b10:	b	410b38 <wcrtomb@plt+0xbff8>
  410b14:	cbnz	w0, 410b24 <wcrtomb@plt+0xbfe4>
  410b18:	ldr	w8, [x24]
  410b1c:	cmp	w8, #0x11
  410b20:	b.ne	410b78 <wcrtomb@plt+0xc038>  // b.any
  410b24:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410b28:	ldr	w8, [x8, #3808]
  410b2c:	tst	w8, #0xfffffffd
  410b30:	b.ne	410b54 <wcrtomb@plt+0xc014>  // b.any
  410b34:	mov	w5, wzr
  410b38:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410b3c:	add	x1, x1, #0xc50
  410b40:	ldr	w4, [x1, #104]
  410b44:	mov	x0, x19
  410b48:	mov	w2, w20
  410b4c:	mov	w3, w21
  410b50:	bl	411370 <wcrtomb@plt+0xc830>
  410b54:	mov	w0, w22
  410b58:	ldp	x20, x19, [sp, #352]
  410b5c:	ldp	x22, x21, [sp, #336]
  410b60:	ldp	x24, x23, [sp, #320]
  410b64:	ldp	x26, x25, [sp, #304]
  410b68:	ldp	x28, x27, [sp, #288]
  410b6c:	ldp	x29, x30, [sp, #272]
  410b70:	add	sp, sp, #0x170
  410b74:	ret
  410b78:	mov	x0, x19
  410b7c:	bl	42a6e0 <wcrtomb@plt+0x25ba0>
  410b80:	mov	w22, #0x1                   	// #1
  410b84:	b	410b54 <wcrtomb@plt+0xc014>
  410b88:	cbz	w26, 410c7c <wcrtomb@plt+0xc13c>
  410b8c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410b90:	ldr	x20, [x8, #1048]
  410b94:	cbnz	x20, 410bf8 <wcrtomb@plt+0xc0b8>
  410b98:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410b9c:	ldr	x8, [x8, #4064]
  410ba0:	cbz	x8, 410ba8 <wcrtomb@plt+0xc068>
  410ba4:	blr	x8
  410ba8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  410bac:	add	x1, x1, #0x488
  410bb0:	mov	w2, #0x5                   	// #5
  410bb4:	mov	x0, xzr
  410bb8:	bl	404900 <dcgettext@plt>
  410bbc:	mov	x20, x0
  410bc0:	mov	x0, x19
  410bc4:	bl	444778 <argp_parse@@Base+0xcecc>
  410bc8:	mov	x3, x0
  410bcc:	mov	w0, wzr
  410bd0:	mov	w1, wzr
  410bd4:	mov	x2, x20
  410bd8:	bl	403fa0 <error@plt>
  410bdc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410be0:	mov	w9, #0x2                   	// #2
  410be4:	str	w9, [x8, #2416]
  410be8:	mov	w22, wzr
  410bec:	b	410b54 <wcrtomb@plt+0xc014>
  410bf0:	ldr	x20, [x20]
  410bf4:	cbz	x20, 410b98 <wcrtomb@plt+0xc058>
  410bf8:	ldr	w1, [x25, #1872]
  410bfc:	ldr	x2, [x20, #160]
  410c00:	ldr	w4, [x20, #84]
  410c04:	add	x3, sp, #0x88
  410c08:	mov	w0, wzr
  410c0c:	bl	404b20 <__fxstatat@plt>
  410c10:	cbnz	w0, 410c84 <wcrtomb@plt+0xc144>
  410c14:	ldr	x8, [sp, #136]
  410c18:	ldr	x9, [sp]
  410c1c:	cmp	x8, x9
  410c20:	b.ne	410bf0 <wcrtomb@plt+0xc0b0>  // b.any
  410c24:	ldr	x8, [sp, #144]
  410c28:	ldr	x9, [sp, #8]
  410c2c:	cmp	x8, x9
  410c30:	b.ne	410bf0 <wcrtomb@plt+0xc0b0>  // b.any
  410c34:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410c38:	add	x8, x8, #0xca8
  410c3c:	ldr	q0, [x8]
  410c40:	mov	w22, wzr
  410c44:	stur	q0, [x20, #8]
  410c48:	ldr	w9, [x8, #16]
  410c4c:	str	w9, [x20, #24]
  410c50:	ldr	x9, [x8, #24]
  410c54:	stur	x9, [x20, #28]
  410c58:	ldr	q0, [x8, #128]
  410c5c:	mov	w9, #0xffffffff            	// #-1
  410c60:	stur	q0, [x20, #40]
  410c64:	ldr	q0, [x8, #144]
  410c68:	stur	q0, [x20, #56]
  410c6c:	ldr	w8, [sp, #152]
  410c70:	strb	wzr, [x20, #80]
  410c74:	stp	w8, w9, [x20, #72]
  410c78:	b	410b54 <wcrtomb@plt+0xc014>
  410c7c:	mov	w21, #0xffffffff            	// #-1
  410c80:	b	410b24 <wcrtomb@plt+0xbfe4>
  410c84:	ldr	x0, [x20, #160]
  410c88:	bl	42b158 <wcrtomb@plt+0x26618>
  410c8c:	mov	w22, wzr
  410c90:	b	410b54 <wcrtomb@plt+0xc014>
  410c94:	sub	sp, sp, #0x30
  410c98:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410c9c:	ldrb	w8, [x8, #4008]
  410ca0:	stp	x29, x30, [sp, #16]
  410ca4:	stp	x20, x19, [sp, #32]
  410ca8:	add	x29, sp, #0x10
  410cac:	mov	x19, x0
  410cb0:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410cb4:	sturb	wzr, [x29, #-4]
  410cb8:	cbz	w8, 410d04 <wcrtomb@plt+0xc1c4>
  410cbc:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  410cc0:	ldr	x0, [x20, #3176]
  410cc4:	ldr	w1, [x8, #1872]
  410cc8:	mov	x2, x19
  410ccc:	bl	404980 <symlinkat@plt>
  410cd0:	cbz	w0, 410d30 <wcrtomb@plt+0xc1f0>
  410cd4:	sub	x2, x29, #0x4
  410cd8:	mov	x0, x19
  410cdc:	mov	w1, wzr
  410ce0:	bl	411178 <wcrtomb@plt+0xc638>
  410ce4:	cmp	w0, #0x2
  410ce8:	b.eq	410d58 <wcrtomb@plt+0xc218>  // b.none
  410cec:	cbnz	w0, 410cbc <wcrtomb@plt+0xc17c>
  410cf0:	ldr	x0, [x20, #3176]
  410cf4:	mov	x1, x19
  410cf8:	bl	42b0ac <wcrtomb@plt+0x2656c>
  410cfc:	mov	w0, #0xffffffff            	// #-1
  410d00:	b	410d5c <wcrtomb@plt+0xc21c>
  410d04:	ldr	x0, [x20, #3176]
  410d08:	ldrb	w8, [x0]
  410d0c:	cmp	w8, #0x2f
  410d10:	b.eq	410d1c <wcrtomb@plt+0xc1dc>  // b.none
  410d14:	bl	41ed4c <wcrtomb@plt+0x1a20c>
  410d18:	tbz	w0, #0, 410cbc <wcrtomb@plt+0xc17c>
  410d1c:	sub	x2, x29, #0x4
  410d20:	mov	w1, #0x1                   	// #1
  410d24:	mov	x0, x19
  410d28:	bl	41152c <wcrtomb@plt+0xc9ec>
  410d2c:	b	410d5c <wcrtomb@plt+0xc21c>
  410d30:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410d34:	add	x1, x1, #0xc50
  410d38:	mov	w2, #0xffffffff            	// #-1
  410d3c:	mov	w5, #0x32                  	// #50
  410d40:	mov	w7, #0x100                 	// #256
  410d44:	mov	x0, x19
  410d48:	mov	w3, wzr
  410d4c:	mov	w4, wzr
  410d50:	mov	w6, wzr
  410d54:	bl	40ff34 <wcrtomb@plt+0xb3f4>
  410d58:	mov	w0, wzr
  410d5c:	ldp	x20, x19, [sp, #32]
  410d60:	ldp	x29, x30, [sp, #16]
  410d64:	add	sp, sp, #0x30
  410d68:	ret
  410d6c:	sub	sp, sp, #0x150
  410d70:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410d74:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410d78:	stp	x20, x19, [sp, #320]
  410d7c:	ldrb	w9, [x9, #4008]
  410d80:	ldr	x20, [x8, #3176]
  410d84:	stp	x29, x30, [sp, #272]
  410d88:	add	x29, sp, #0x110
  410d8c:	mov	x19, x0
  410d90:	stp	x28, x23, [sp, #288]
  410d94:	stp	x22, x21, [sp, #304]
  410d98:	sturb	wzr, [x29, #-4]
  410d9c:	cbnz	w9, 410dc0 <wcrtomb@plt+0xc280>
  410da0:	mov	x0, x20
  410da4:	bl	41ed4c <wcrtomb@plt+0x1a20c>
  410da8:	tbz	w0, #0, 410dc0 <wcrtomb@plt+0xc280>
  410dac:	sub	x2, x29, #0x4
  410db0:	mov	x0, x19
  410db4:	mov	w1, wzr
  410db8:	bl	41152c <wcrtomb@plt+0xc9ec>
  410dbc:	b	410f54 <wcrtomb@plt+0xc414>
  410dc0:	adrp	x23, 477000 <_obstack_memory_used@@Base+0x304b0>
  410dc4:	b	410e00 <wcrtomb@plt+0xc2c0>
  410dc8:	ldr	w1, [x23, #1872]
  410dcc:	add	x3, sp, #0x88
  410dd0:	mov	w4, #0x100                 	// #256
  410dd4:	mov	w0, wzr
  410dd8:	mov	x2, x20
  410ddc:	bl	404b20 <__fxstatat@plt>
  410de0:	cbz	w0, 410e48 <wcrtomb@plt+0xc308>
  410de4:	sub	x2, x29, #0x4
  410de8:	mov	x0, x19
  410dec:	mov	w1, wzr
  410df0:	str	w22, [x21]
  410df4:	bl	411178 <wcrtomb@plt+0xc638>
  410df8:	cmp	w0, #0x1
  410dfc:	b.ne	410f30 <wcrtomb@plt+0xc3f0>  // b.any
  410e00:	ldr	w0, [x23, #1872]
  410e04:	mov	x1, x20
  410e08:	mov	x3, x19
  410e0c:	mov	w4, wzr
  410e10:	mov	w2, w0
  410e14:	bl	404030 <linkat@plt>
  410e18:	mov	w22, w0
  410e1c:	bl	404a10 <__errno_location@plt>
  410e20:	cbz	w22, 410e84 <wcrtomb@plt+0xc344>
  410e24:	ldr	w22, [x0]
  410e28:	mov	x21, x0
  410e2c:	cmp	w22, #0x11
  410e30:	b.ne	410dc8 <wcrtomb@plt+0xc288>  // b.any
  410e34:	mov	x0, x20
  410e38:	mov	x1, x19
  410e3c:	bl	404660 <strcmp@plt>
  410e40:	cbnz	w0, 410dc8 <wcrtomb@plt+0xc288>
  410e44:	b	410f50 <wcrtomb@plt+0xc410>
  410e48:	ldr	w1, [x23, #1872]
  410e4c:	add	x3, sp, #0x8
  410e50:	mov	w4, #0x100                 	// #256
  410e54:	mov	x2, x19
  410e58:	bl	404b20 <__fxstatat@plt>
  410e5c:	cbnz	w0, 410de4 <wcrtomb@plt+0xc2a4>
  410e60:	ldr	x8, [sp, #136]
  410e64:	ldr	x9, [sp, #8]
  410e68:	cmp	x8, x9
  410e6c:	b.ne	410de4 <wcrtomb@plt+0xc2a4>  // b.any
  410e70:	ldr	x8, [sp, #144]
  410e74:	ldr	x9, [sp, #16]
  410e78:	cmp	x8, x9
  410e7c:	b.ne	410de4 <wcrtomb@plt+0xc2a4>  // b.any
  410e80:	b	410f50 <wcrtomb@plt+0xc410>
  410e84:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410e88:	ldr	x21, [x8, #1064]
  410e8c:	cbz	x21, 410f50 <wcrtomb@plt+0xc410>
  410e90:	ldr	w1, [x23, #1872]
  410e94:	add	x3, sp, #0x88
  410e98:	mov	w4, #0x100                 	// #256
  410e9c:	mov	w0, wzr
  410ea0:	mov	x2, x20
  410ea4:	bl	404b20 <__fxstatat@plt>
  410ea8:	cbnz	w0, 410f50 <wcrtomb@plt+0xc410>
  410eac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410eb0:	ldr	w8, [x8, #3056]
  410eb4:	ldp	x9, x10, [sp, #136]
  410eb8:	b	410ec4 <wcrtomb@plt+0xc384>
  410ebc:	ldr	x21, [x21]
  410ec0:	cbz	x21, 410f50 <wcrtomb@plt+0xc410>
  410ec4:	ldr	w11, [x21, #88]
  410ec8:	cmp	w11, w8
  410ecc:	b.ne	410ebc <wcrtomb@plt+0xc37c>  // b.any
  410ed0:	ldr	x11, [x21, #8]
  410ed4:	cmp	x11, x9
  410ed8:	b.ne	410ebc <wcrtomb@plt+0xc37c>  // b.any
  410edc:	ldr	x11, [x21, #16]
  410ee0:	cmp	x11, x10
  410ee4:	b.ne	410ebc <wcrtomb@plt+0xc37c>  // b.any
  410ee8:	ldr	x11, [x21, #24]
  410eec:	cmn	x11, #0x1
  410ef0:	b.ne	410ebc <wcrtomb@plt+0xc37c>  // b.any
  410ef4:	ldr	x11, [x21, #32]
  410ef8:	cmn	w11, #0x1
  410efc:	b.ne	410ebc <wcrtomb@plt+0xc37c>  // b.any
  410f00:	mov	x0, x19
  410f04:	bl	403f40 <strlen@plt>
  410f08:	add	x0, x0, #0x9
  410f0c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  410f10:	mov	x20, x0
  410f14:	add	x0, x0, #0x8
  410f18:	mov	x1, x19
  410f1c:	bl	404840 <strcpy@plt>
  410f20:	ldr	x8, [x21, #96]
  410f24:	str	x8, [x20]
  410f28:	str	x20, [x21, #96]
  410f2c:	b	410f50 <wcrtomb@plt+0xc410>
  410f30:	cmp	w0, #0x2
  410f34:	b.eq	410f50 <wcrtomb@plt+0xc410>  // b.none
  410f38:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410f3c:	ldrb	w8, [x8, #3089]
  410f40:	cbz	w8, 410f6c <wcrtomb@plt+0xc42c>
  410f44:	ldr	w8, [x21]
  410f48:	cmp	w8, #0x11
  410f4c:	b.ne	410f6c <wcrtomb@plt+0xc42c>  // b.any
  410f50:	mov	w0, wzr
  410f54:	ldp	x20, x19, [sp, #320]
  410f58:	ldp	x22, x21, [sp, #304]
  410f5c:	ldp	x28, x23, [sp, #288]
  410f60:	ldp	x29, x30, [sp, #272]
  410f64:	add	sp, sp, #0x150
  410f68:	ret
  410f6c:	mov	x0, x20
  410f70:	mov	x1, x19
  410f74:	bl	42a64c <wcrtomb@plt+0x25b0c>
  410f78:	mov	w0, #0x1                   	// #1
  410f7c:	b	410f54 <wcrtomb@plt+0xc414>
  410f80:	sub	sp, sp, #0x50
  410f84:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410f88:	ldr	w9, [x9, #4036]
  410f8c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410f90:	ldr	w8, [x8, #3256]
  410f94:	mov	w10, #0xffffffc0            	// #-64
  410f98:	cmp	w9, #0x0
  410f9c:	csinv	w9, w10, wzr, gt
  410fa0:	mov	w11, #0x61ff                	// #25087
  410fa4:	and	w8, w8, w9
  410fa8:	stp	x29, x30, [sp, #16]
  410fac:	str	x23, [sp, #32]
  410fb0:	stp	x22, x21, [sp, #48]
  410fb4:	stp	x20, x19, [sp, #64]
  410fb8:	add	x29, sp, #0x10
  410fbc:	mov	w19, w1
  410fc0:	mov	x20, x0
  410fc4:	adrp	x22, 477000 <_obstack_memory_used@@Base+0x304b0>
  410fc8:	and	w21, w8, w11
  410fcc:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  410fd0:	sturb	wzr, [x29, #-4]
  410fd4:	ldr	x8, [x23, #3272]
  410fd8:	ldr	w1, [x22, #1872]
  410fdc:	add	x4, x29, #0x18
  410fe0:	mov	w0, wzr
  410fe4:	mov	x2, x20
  410fe8:	mov	w3, w21
  410fec:	str	x8, [x29, #24]
  410ff0:	bl	4043d0 <__xmknodat@plt>
  410ff4:	cbz	w0, 411024 <wcrtomb@plt+0xc4e4>
  410ff8:	sub	x2, x29, #0x4
  410ffc:	mov	x0, x20
  411000:	mov	w1, wzr
  411004:	bl	411178 <wcrtomb@plt+0xc638>
  411008:	cmp	w0, #0x2
  41100c:	b.eq	411054 <wcrtomb@plt+0xc514>  // b.none
  411010:	cbnz	w0, 410fd4 <wcrtomb@plt+0xc494>
  411014:	mov	x0, x20
  411018:	bl	42a7e8 <wcrtomb@plt+0x25ca8>
  41101c:	mov	w0, #0xffffffff            	// #-1
  411020:	b	411058 <wcrtomb@plt+0xc518>
  411024:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411028:	ldr	w8, [x8, #1040]
  41102c:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411030:	add	x1, x1, #0xc50
  411034:	mov	w2, #0xffffffff            	// #-1
  411038:	bic	w3, w21, w8
  41103c:	mov	w4, #0x1ff                 	// #511
  411040:	mov	w7, #0x100                 	// #256
  411044:	mov	x0, x20
  411048:	mov	w5, w19
  41104c:	mov	w6, wzr
  411050:	bl	40ff34 <wcrtomb@plt+0xb3f4>
  411054:	mov	w0, wzr
  411058:	ldp	x20, x19, [sp, #64]
  41105c:	ldp	x22, x21, [sp, #48]
  411060:	ldr	x23, [sp, #32]
  411064:	ldp	x29, x30, [sp, #16]
  411068:	add	sp, sp, #0x50
  41106c:	ret
  411070:	sub	sp, sp, #0x40
  411074:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411078:	ldr	w8, [x8, #4036]
  41107c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411080:	ldr	w9, [x9, #3256]
  411084:	mov	w10, #0xffffffc0            	// #-64
  411088:	cmp	w8, #0x0
  41108c:	csinv	w8, w10, wzr, gt
  411090:	and	w8, w9, w8
  411094:	stp	x29, x30, [sp, #16]
  411098:	stp	x22, x21, [sp, #32]
  41109c:	stp	x20, x19, [sp, #48]
  4110a0:	add	x29, sp, #0x10
  4110a4:	mov	w19, w1
  4110a8:	mov	x20, x0
  4110ac:	and	w21, w8, #0x1ff
  4110b0:	adrp	x22, 477000 <_obstack_memory_used@@Base+0x304b0>
  4110b4:	sturb	wzr, [x29, #-4]
  4110b8:	ldr	w0, [x22, #1872]
  4110bc:	mov	x1, x20
  4110c0:	mov	w2, w21
  4110c4:	bl	404910 <mkfifoat@plt>
  4110c8:	cbz	w0, 4110f8 <wcrtomb@plt+0xc5b8>
  4110cc:	sub	x2, x29, #0x4
  4110d0:	mov	x0, x20
  4110d4:	mov	w1, wzr
  4110d8:	bl	411178 <wcrtomb@plt+0xc638>
  4110dc:	cmp	w0, #0x2
  4110e0:	b.eq	411128 <wcrtomb@plt+0xc5e8>  // b.none
  4110e4:	cbnz	w0, 4110b8 <wcrtomb@plt+0xc578>
  4110e8:	mov	x0, x20
  4110ec:	bl	42a764 <wcrtomb@plt+0x25c24>
  4110f0:	mov	w0, #0xffffffff            	// #-1
  4110f4:	b	41112c <wcrtomb@plt+0xc5ec>
  4110f8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4110fc:	ldr	w8, [x8, #1040]
  411100:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411104:	add	x1, x1, #0xc50
  411108:	mov	w2, #0xffffffff            	// #-1
  41110c:	bic	w3, w21, w8
  411110:	mov	w4, #0x1ff                 	// #511
  411114:	mov	w7, #0x100                 	// #256
  411118:	mov	x0, x20
  41111c:	mov	w5, w19
  411120:	mov	w6, wzr
  411124:	bl	40ff34 <wcrtomb@plt+0xb3f4>
  411128:	mov	w0, wzr
  41112c:	ldp	x20, x19, [sp, #48]
  411130:	ldp	x22, x21, [sp, #32]
  411134:	ldp	x29, x30, [sp, #16]
  411138:	add	sp, sp, #0x40
  41113c:	ret
  411140:	stp	x29, x30, [sp, #-16]!
  411144:	mov	x29, sp
  411148:	bl	418e14 <wcrtomb@plt+0x142d4>
  41114c:	mov	w0, wzr
  411150:	ldp	x29, x30, [sp], #16
  411154:	ret
  411158:	stp	x29, x30, [sp, #-16]!
  41115c:	mov	x29, sp
  411160:	bl	418e14 <wcrtomb@plt+0x142d4>
  411164:	mov	w0, wzr
  411168:	ldp	x29, x30, [sp], #16
  41116c:	ret
  411170:	mov	w0, #0x1                   	// #1
  411174:	ret
  411178:	sub	sp, sp, #0x150
  41117c:	stp	x29, x30, [sp, #256]
  411180:	str	x28, [sp, #272]
  411184:	stp	x24, x23, [sp, #288]
  411188:	stp	x22, x21, [sp, #304]
  41118c:	stp	x20, x19, [sp, #320]
  411190:	add	x29, sp, #0x100
  411194:	mov	x20, x2
  411198:	mov	w22, w1
  41119c:	mov	x19, x0
  4111a0:	bl	404a10 <__errno_location@plt>
  4111a4:	ldrb	w8, [x20]
  4111a8:	cbz	w8, 4111b4 <wcrtomb@plt+0xc674>
  4111ac:	mov	w0, wzr
  4111b0:	b	411290 <wcrtomb@plt+0xc750>
  4111b4:	ldr	w23, [x0]
  4111b8:	mov	x21, x0
  4111bc:	sub	w8, w23, #0x2
  4111c0:	cmp	w8, #0x26
  4111c4:	b.hi	4111e4 <wcrtomb@plt+0xc6a4>  // b.pmore
  4111c8:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4111cc:	add	x9, x9, #0x280
  4111d0:	adr	x10, 4111ec <wcrtomb@plt+0xc6ac>
  4111d4:	ldrb	w11, [x9, x8]
  4111d8:	add	x10, x10, x11, lsl #2
  4111dc:	mov	x24, xzr
  4111e0:	br	x10
  4111e4:	cmp	w23, #0x5f
  4111e8:	b.ne	411288 <wcrtomb@plt+0xc748>  // b.any
  4111ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4111f0:	ldr	w8, [x8, #3808]
  4111f4:	cmp	w8, #0x2
  4111f8:	b.ne	411288 <wcrtomb@plt+0xc748>  // b.any
  4111fc:	tbz	w22, #0, 411288 <wcrtomb@plt+0xc748>
  411200:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411204:	ldrb	w8, [x8, #3632]
  411208:	cbnz	w8, 411288 <wcrtomb@plt+0xc748>
  41120c:	mov	w1, #0x2f                  	// #47
  411210:	mov	x0, x19
  411214:	bl	4047a0 <strchr@plt>
  411218:	cbz	x0, 411234 <wcrtomb@plt+0xc6f4>
  41121c:	mov	x1, sp
  411220:	mov	x0, x19
  411224:	mov	x24, sp
  411228:	bl	41bbd4 <wcrtomb@plt+0x17094>
  41122c:	cbnz	w0, 411288 <wcrtomb@plt+0xc748>
  411230:	b	411238 <wcrtomb@plt+0xc6f8>
  411234:	mov	x24, xzr
  411238:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41123c:	ldr	w8, [x8, #3808]
  411240:	cmp	w8, #0x6
  411244:	b.hi	411278 <wcrtomb@plt+0xc738>  // b.pmore
  411248:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41124c:	add	x9, x9, #0x2a7
  411250:	adr	x10, 411264 <wcrtomb@plt+0xc724>
  411254:	ldrb	w11, [x9, x8]
  411258:	add	x10, x10, x11, lsl #2
  41125c:	mov	w0, wzr
  411260:	br	x10
  411264:	mov	x0, x19
  411268:	mov	w1, wzr
  41126c:	bl	41b620 <wcrtomb@plt+0x16ae0>
  411270:	cmp	w0, #0x0
  411274:	b.gt	4112b4 <wcrtomb@plt+0xc774>
  411278:	mov	x0, x19
  41127c:	mov	x1, x20
  411280:	bl	40fd90 <wcrtomb@plt+0xb250>
  411284:	cbz	w0, 4112ac <wcrtomb@plt+0xc76c>
  411288:	mov	w0, wzr
  41128c:	str	w23, [x21]
  411290:	ldp	x20, x19, [sp, #320]
  411294:	ldp	x22, x21, [sp, #304]
  411298:	ldp	x24, x23, [sp, #288]
  41129c:	ldr	x28, [sp, #272]
  4112a0:	ldp	x29, x30, [sp, #256]
  4112a4:	add	sp, sp, #0x150
  4112a8:	ret
  4112ac:	ldrb	w8, [x20]
  4112b0:	cbz	w8, 411288 <wcrtomb@plt+0xc748>
  4112b4:	mov	w0, #0x1                   	// #1
  4112b8:	b	411290 <wcrtomb@plt+0xc750>
  4112bc:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4112c0:	ldrb	w8, [x8, #3722]
  4112c4:	tbnz	w8, #4, 411304 <wcrtomb@plt+0xc7c4>
  4112c8:	mov	w0, #0x2                   	// #2
  4112cc:	b	411290 <wcrtomb@plt+0xc750>
  4112d0:	cbz	x24, 411344 <wcrtomb@plt+0xc804>
  4112d4:	ldr	w8, [x24, #16]
  4112d8:	and	w8, w8, #0xf000
  4112dc:	cmp	w8, #0x4, lsl #12
  4112e0:	b.eq	411264 <wcrtomb@plt+0xc724>  // b.none
  4112e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4112e8:	add	x8, x8, #0xd38
  4112ec:	ldp	x2, x3, [x24, #88]
  4112f0:	ldp	x0, x1, [x8]
  4112f4:	bl	424520 <wcrtomb@plt+0x1f9e0>
  4112f8:	cmp	w0, #0x1
  4112fc:	b.ge	411264 <wcrtomb@plt+0xc724>  // b.tcont
  411300:	b	411278 <wcrtomb@plt+0xc738>
  411304:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411308:	ldr	x8, [x8, #4064]
  41130c:	cbz	x8, 411314 <wcrtomb@plt+0xc7d4>
  411310:	blr	x8
  411314:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411318:	add	x1, x1, #0x46d
  41131c:	mov	w2, #0x5                   	// #5
  411320:	mov	x0, xzr
  411324:	bl	404900 <dcgettext@plt>
  411328:	mov	x2, x0
  41132c:	mov	w0, wzr
  411330:	mov	w1, wzr
  411334:	mov	x3, x19
  411338:	bl	403fa0 <error@plt>
  41133c:	mov	w0, #0x2                   	// #2
  411340:	b	411290 <wcrtomb@plt+0xc750>
  411344:	add	x1, sp, #0x80
  411348:	mov	x0, x19
  41134c:	add	x24, sp, #0x80
  411350:	bl	41bbd4 <wcrtomb@plt+0x17094>
  411354:	cbz	w0, 4112d4 <wcrtomb@plt+0xc794>
  411358:	ldr	w8, [x21]
  41135c:	cmp	w8, #0x2
  411360:	b.eq	411264 <wcrtomb@plt+0xc724>  // b.none
  411364:	mov	x0, x19
  411368:	bl	42b1dc <wcrtomb@plt+0x2669c>
  41136c:	b	411278 <wcrtomb@plt+0xc738>
  411370:	sub	sp, sp, #0xe0
  411374:	stp	x29, x30, [sp, #128]
  411378:	str	x27, [sp, #144]
  41137c:	stp	x26, x25, [sp, #160]
  411380:	stp	x24, x23, [sp, #176]
  411384:	stp	x22, x21, [sp, #192]
  411388:	stp	x20, x19, [sp, #208]
  41138c:	add	x29, sp, #0x80
  411390:	mov	w22, w5
  411394:	mov	w26, w4
  411398:	mov	w23, w3
  41139c:	mov	w24, w2
  4113a0:	mov	x21, x1
  4113a4:	mov	x20, x0
  4113a8:	bl	403f40 <strlen@plt>
  4113ac:	mov	x25, x0
  4113b0:	mov	w0, #0xa8                  	// #168
  4113b4:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4113b8:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4113bc:	ldr	x8, [x27, #1048]
  4113c0:	mov	x19, x0
  4113c4:	str	w26, [x0, #24]
  4113c8:	str	x8, [x0]
  4113cc:	cbz	x21, 4113f0 <wcrtomb@plt+0xc8b0>
  4113d0:	ldur	q0, [x21, #88]
  4113d4:	stur	q0, [x19, #8]
  4113d8:	ldr	x8, [x21, #112]
  4113dc:	stur	x8, [x19, #28]
  4113e0:	ldur	q0, [x21, #216]
  4113e4:	stur	q0, [x19, #40]
  4113e8:	ldur	q0, [x21, #232]
  4113ec:	stur	q0, [x19, #56]
  4113f0:	cmp	x21, #0x0
  4113f4:	mov	x0, x20
  4113f8:	cset	w26, eq  // eq = none
  4113fc:	str	x25, [x19, #152]
  411400:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  411404:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411408:	ldr	w9, [x8, #3056]
  41140c:	mov	x8, x19
  411410:	str	x0, [x19, #160]
  411414:	stp	w24, w23, [x19, #72]
  411418:	strb	w26, [x19, #80]
  41141c:	str	w22, [x19, #84]
  411420:	strb	wzr, [x19, #88]
  411424:	str	xzr, [x8, #96]!
  411428:	stur	w9, [x8, #-4]
  41142c:	cbz	x21, 411478 <wcrtomb@plt+0xc938>
  411430:	ldr	x1, [x21, #48]
  411434:	mov	x0, x8
  411438:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  41143c:	ldr	x0, [x21, #56]
  411440:	cbz	x0, 41148c <wcrtomb@plt+0xc94c>
  411444:	ldr	x8, [x21, #64]
  411448:	add	x1, x8, #0x1
  41144c:	bl	445c50 <argp_parse@@Base+0xe3a4>
  411450:	ldr	x8, [x21, #64]
  411454:	stp	x0, x8, [x19, #104]
  411458:	ldr	x0, [x21, #72]
  41145c:	cbz	x0, 411498 <wcrtomb@plt+0xc958>
  411460:	ldr	x8, [x21, #80]
  411464:	add	x1, x8, #0x1
  411468:	bl	445c50 <argp_parse@@Base+0xe3a4>
  41146c:	ldr	x8, [x21, #80]
  411470:	stp	x0, x8, [x19, #120]
  411474:	b	41149c <wcrtomb@plt+0xc95c>
  411478:	movi	v0.2d, #0x0
  41147c:	stur	q0, [x19, #136]
  411480:	stur	q0, [x19, #120]
  411484:	stur	q0, [x19, #104]
  411488:	b	4114b0 <wcrtomb@plt+0xc970>
  41148c:	stp	xzr, xzr, [x19, #104]
  411490:	ldr	x0, [x21, #72]
  411494:	cbnz	x0, 411460 <wcrtomb@plt+0xc920>
  411498:	stp	xzr, xzr, [x19, #120]
  41149c:	add	x1, x19, #0x90
  4114a0:	add	x2, x19, #0x88
  4114a4:	mov	x0, x21
  4114a8:	bl	412444 <wcrtomb@plt+0xd904>
  4114ac:	ldr	x0, [x19, #160]
  4114b0:	mov	x1, x20
  4114b4:	bl	404840 <strcpy@plt>
  4114b8:	mov	x0, x20
  4114bc:	str	x19, [x27, #1048]
  4114c0:	bl	41b584 <wcrtomb@plt+0x16a44>
  4114c4:	tbz	w0, #0, 41150c <wcrtomb@plt+0xc9cc>
  4114c8:	mov	w20, #0x1                   	// #1
  4114cc:	ldr	x0, [x19, #160]
  4114d0:	mov	x1, sp
  4114d4:	strb	w20, [x19, #88]
  4114d8:	bl	41bbd4 <wcrtomb@plt+0x17094>
  4114dc:	cbz	w0, 4114f4 <wcrtomb@plt+0xc9b4>
  4114e0:	ldr	x0, [x19, #160]
  4114e4:	bl	42b158 <wcrtomb@plt+0x26618>
  4114e8:	ldr	x19, [x19]
  4114ec:	cbnz	x19, 411504 <wcrtomb@plt+0xc9c4>
  4114f0:	b	41150c <wcrtomb@plt+0xc9cc>
  4114f4:	ldr	q0, [sp]
  4114f8:	stur	q0, [x19, #8]
  4114fc:	ldr	x19, [x19]
  411500:	cbz	x19, 41150c <wcrtomb@plt+0xc9cc>
  411504:	ldrb	w8, [x19, #88]
  411508:	cbz	w8, 4114cc <wcrtomb@plt+0xc98c>
  41150c:	ldp	x20, x19, [sp, #208]
  411510:	ldp	x22, x21, [sp, #192]
  411514:	ldp	x24, x23, [sp, #176]
  411518:	ldp	x26, x25, [sp, #160]
  41151c:	ldr	x27, [sp, #144]
  411520:	ldp	x29, x30, [sp, #128]
  411524:	add	sp, sp, #0xe0
  411528:	ret
  41152c:	sub	sp, sp, #0x150
  411530:	stp	x24, x23, [sp, #288]
  411534:	stp	x22, x21, [sp, #304]
  411538:	stp	x20, x19, [sp, #320]
  41153c:	mov	x21, x2
  411540:	mov	w20, w1
  411544:	mov	x19, x0
  411548:	and	w23, w1, #0x1
  41154c:	adrp	x24, 477000 <_obstack_memory_used@@Base+0x304b0>
  411550:	stp	x29, x30, [sp, #256]
  411554:	str	x28, [sp, #272]
  411558:	add	x29, sp, #0x100
  41155c:	ldr	w0, [x24, #1872]
  411560:	mov	w2, #0xc1                  	// #193
  411564:	mov	x1, x19
  411568:	mov	w3, wzr
  41156c:	bl	4049f0 <openat@plt>
  411570:	tbz	w0, #31, 41159c <wcrtomb@plt+0xca5c>
  411574:	mov	x0, x19
  411578:	mov	w1, wzr
  41157c:	mov	x2, x21
  411580:	bl	411178 <wcrtomb@plt+0xc638>
  411584:	cmp	w0, #0x2
  411588:	b.eq	4116c0 <wcrtomb@plt+0xcb80>  // b.none
  41158c:	cbnz	w0, 41155c <wcrtomb@plt+0xca1c>
  411590:	mov	x0, x19
  411594:	bl	42a86c <wcrtomb@plt+0x25d2c>
  411598:	b	4115dc <wcrtomb@plt+0xca9c>
  41159c:	mov	w22, w0
  4115a0:	mov	x2, sp
  4115a4:	mov	w0, wzr
  4115a8:	mov	w1, w22
  4115ac:	bl	4048e0 <__fxstat@plt>
  4115b0:	cbz	w0, 4115c8 <wcrtomb@plt+0xca88>
  4115b4:	mov	x0, x19
  4115b8:	bl	42b158 <wcrtomb@plt+0x26618>
  4115bc:	mov	w0, w22
  4115c0:	bl	404520 <close@plt>
  4115c4:	b	4115dc <wcrtomb@plt+0xca9c>
  4115c8:	mov	w0, w22
  4115cc:	bl	404520 <close@plt>
  4115d0:	cbz	w0, 4115e4 <wcrtomb@plt+0xcaa4>
  4115d4:	mov	x0, x19
  4115d8:	bl	42a53c <wcrtomb@plt+0x259fc>
  4115dc:	mov	w0, #0xffffffff            	// #-1
  4115e0:	b	4116c4 <wcrtomb@plt+0xcb84>
  4115e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4115e8:	ldr	x0, [x8, #3176]
  4115ec:	bl	403f40 <strlen@plt>
  4115f0:	add	x0, x0, #0xa1
  4115f4:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4115f8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4115fc:	ldr	q0, [sp]
  411600:	ldr	x10, [x8, #1064]
  411604:	mov	x21, x0
  411608:	mov	x9, #0xffffffffffffffff    	// #-1
  41160c:	str	x0, [x8, #1064]
  411610:	stp	x9, x9, [x0, #24]
  411614:	stur	q0, [x0, #8]
  411618:	str	x10, [x0]
  41161c:	strb	w23, [x0, #40]
  411620:	tbz	w20, #0, 411648 <wcrtomb@plt+0xcb08>
  411624:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411628:	add	x8, x8, #0xcb8
  41162c:	ldr	w9, [x8]
  411630:	ldr	x10, [x8, #8]
  411634:	ldp	q0, q1, [x8, #112]
  411638:	str	w9, [x21, #44]
  41163c:	str	x10, [x21, #48]
  411640:	stur	q0, [x21, #56]
  411644:	stur	q1, [x21, #72]
  411648:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41164c:	ldr	w8, [x8, #3056]
  411650:	mov	x0, x19
  411654:	str	w8, [x21, #88]
  411658:	bl	403f40 <strlen@plt>
  41165c:	add	x0, x0, #0x9
  411660:	bl	4459e8 <argp_parse@@Base+0xe13c>
  411664:	str	x0, [x21, #96]
  411668:	str	xzr, [x0], #8
  41166c:	mov	x1, x19
  411670:	bl	404840 <strcpy@plt>
  411674:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411678:	add	x20, x20, #0xc50
  41167c:	ldr	x1, [x20, #48]
  411680:	str	xzr, [x21, #104]!
  411684:	mov	x0, x21
  411688:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  41168c:	add	x1, x21, #0x30
  411690:	add	x2, x21, #0x28
  411694:	movi	v0.2d, #0x0
  411698:	mov	x0, x20
  41169c:	stur	q0, [x21, #24]
  4116a0:	stur	q0, [x21, #8]
  4116a4:	bl	412444 <wcrtomb@plt+0xd904>
  4116a8:	ldr	x1, [x20, #24]
  4116ac:	add	x0, x21, #0x38
  4116b0:	bl	404840 <strcpy@plt>
  4116b4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4116b8:	ldr	x22, [x8, #1048]
  4116bc:	cbnz	x22, 4116e8 <wcrtomb@plt+0xcba8>
  4116c0:	mov	w0, wzr
  4116c4:	ldp	x20, x19, [sp, #320]
  4116c8:	ldp	x22, x21, [sp, #304]
  4116cc:	ldp	x24, x23, [sp, #288]
  4116d0:	ldr	x28, [sp, #272]
  4116d4:	ldp	x29, x30, [sp, #256]
  4116d8:	add	sp, sp, #0x150
  4116dc:	ret
  4116e0:	ldr	x22, [x22]
  4116e4:	cbz	x22, 4116c0 <wcrtomb@plt+0xcb80>
  4116e8:	ldrb	w8, [x22, #88]
  4116ec:	cbnz	w8, 4116e0 <wcrtomb@plt+0xcba0>
  4116f0:	ldp	x21, x20, [x22, #152]
  4116f4:	mov	x0, x19
  4116f8:	mov	x1, x20
  4116fc:	mov	x2, x21
  411700:	bl	404300 <strncmp@plt>
  411704:	cbnz	w0, 4116e0 <wcrtomb@plt+0xcba0>
  411708:	add	x21, x19, x21
  41170c:	ldrb	w8, [x21]
  411710:	cmp	w8, #0x2f
  411714:	b.ne	4116e0 <wcrtomb@plt+0xcba0>  // b.any
  411718:	mov	x0, x19
  41171c:	bl	43925c <argp_parse@@Base+0x19b0>
  411720:	add	x8, x21, #0x1
  411724:	cmp	x0, x8
  411728:	b.ne	4116e0 <wcrtomb@plt+0xcba0>  // b.any
  41172c:	mov	w19, #0x1                   	// #1
  411730:	add	x1, sp, #0x80
  411734:	mov	x0, x20
  411738:	strb	w19, [x22, #88]
  41173c:	bl	41bbd4 <wcrtomb@plt+0x17094>
  411740:	cbz	w0, 411750 <wcrtomb@plt+0xcc10>
  411744:	ldr	x0, [x22, #160]
  411748:	bl	42b158 <wcrtomb@plt+0x26618>
  41174c:	b	411758 <wcrtomb@plt+0xcc18>
  411750:	ldr	q0, [sp, #128]
  411754:	stur	q0, [x22, #8]
  411758:	ldr	x22, [x22]
  41175c:	cbz	x22, 4116c0 <wcrtomb@plt+0xcb80>
  411760:	ldrb	w8, [x22, #88]
  411764:	cbnz	w8, 4116c0 <wcrtomb@plt+0xcb80>
  411768:	ldr	x20, [x22, #160]
  41176c:	b	411730 <wcrtomb@plt+0xcbf0>
  411770:	stp	x29, x30, [sp, #-32]!
  411774:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411778:	stp	x20, x19, [sp, #16]
  41177c:	ldr	x20, [x8, #1072]
  411780:	mov	x29, sp
  411784:	cbz	x20, 4117a8 <wcrtomb@plt+0xcc68>
  411788:	mov	x19, x0
  41178c:	ldr	x0, [x20, #8]
  411790:	mov	x1, x19
  411794:	mov	w2, wzr
  411798:	bl	4047f0 <fnmatch@plt>
  41179c:	cbz	w0, 4117b0 <wcrtomb@plt+0xcc70>
  4117a0:	ldr	x20, [x20]
  4117a4:	cbnz	x20, 41178c <wcrtomb@plt+0xcc4c>
  4117a8:	mov	w0, wzr
  4117ac:	b	4117b4 <wcrtomb@plt+0xcc74>
  4117b0:	mov	w0, #0x1                   	// #1
  4117b4:	ldp	x20, x19, [sp, #16]
  4117b8:	ldp	x29, x30, [sp], #32
  4117bc:	ret
  4117c0:	sub	sp, sp, #0x70
  4117c4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4117c8:	add	x1, x1, #0xf0
  4117cc:	stp	x29, x30, [sp, #16]
  4117d0:	stp	x28, x27, [sp, #32]
  4117d4:	stp	x26, x25, [sp, #48]
  4117d8:	stp	x24, x23, [sp, #64]
  4117dc:	stp	x22, x21, [sp, #80]
  4117e0:	stp	x20, x19, [sp, #96]
  4117e4:	add	x29, sp, #0x10
  4117e8:	bl	403f10 <strtok@plt>
  4117ec:	cbz	x0, 411ab8 <wcrtomb@plt+0xcf78>
  4117f0:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4117f4:	adrp	x28, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4117f8:	adrp	x22, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4117fc:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  411800:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411804:	mov	x26, x0
  411808:	add	x19, x19, #0xa2e
  41180c:	add	x28, x28, #0xe1f
  411810:	add	x22, x22, #0x500
  411814:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411818:	add	x20, x20, #0xf0
  41181c:	add	x21, x21, #0xa53
  411820:	b	411848 <wcrtomb@plt+0xcd08>
  411824:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411828:	add	x0, x0, #0x438
  41182c:	mov	x1, x27
  411830:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  411834:	mov	x0, xzr
  411838:	mov	x1, x20
  41183c:	bl	403f10 <strtok@plt>
  411840:	mov	x26, x0
  411844:	cbz	x0, 411ab8 <wcrtomb@plt+0xcf78>
  411848:	mov	w1, #0x3d                  	// #61
  41184c:	mov	x0, x26
  411850:	bl	4047a0 <strchr@plt>
  411854:	cbz	x0, 411b08 <wcrtomb@plt+0xcfc8>
  411858:	mov	x27, x0
  41185c:	cmp	x0, x26
  411860:	b.eq	411b10 <wcrtomb@plt+0xcfd0>  // b.none
  411864:	mov	x8, x27
  411868:	ldrb	w23, [x8, #-1]!
  41186c:	cmp	w23, #0x3a
  411870:	csel	x24, x8, x27, eq  // eq = none
  411874:	cmp	x24, x26
  411878:	b.ls	41189c <wcrtomb@plt+0xcd5c>  // b.plast
  41187c:	bl	404690 <__ctype_b_loc@plt>
  411880:	ldr	x8, [x0]
  411884:	ldrb	w9, [x24]
  411888:	ldrh	w9, [x8, x9, lsl #1]
  41188c:	tbz	w9, #13, 41189c <wcrtomb@plt+0xcd5c>
  411890:	sub	x24, x24, #0x1
  411894:	cmp	x24, x26
  411898:	b.hi	411884 <wcrtomb@plt+0xcd44>  // b.pmore
  41189c:	add	x8, x27, #0x1
  4118a0:	strb	wzr, [x24]
  4118a4:	ldrb	w24, [x8]
  4118a8:	mov	x27, x8
  4118ac:	cbz	x24, 4118c4 <wcrtomb@plt+0xcd84>
  4118b0:	bl	404690 <__ctype_b_loc@plt>
  4118b4:	ldr	x8, [x0]
  4118b8:	ldrh	w9, [x8, x24, lsl #1]
  4118bc:	add	x8, x27, #0x1
  4118c0:	tbnz	w9, #13, 4118a4 <wcrtomb@plt+0xcd64>
  4118c4:	mov	x0, x26
  4118c8:	mov	x1, x19
  4118cc:	bl	404660 <strcmp@plt>
  4118d0:	cbz	w0, 411954 <wcrtomb@plt+0xce14>
  4118d4:	mov	x0, x26
  4118d8:	mov	x1, x21
  4118dc:	bl	404660 <strcmp@plt>
  4118e0:	cbz	w0, 411824 <wcrtomb@plt+0xcce4>
  4118e4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4118e8:	mov	x0, x26
  4118ec:	add	x1, x1, #0xa4f
  4118f0:	bl	404660 <strcmp@plt>
  4118f4:	cbz	w0, 4119b4 <wcrtomb@plt+0xce74>
  4118f8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4118fc:	mov	x0, x26
  411900:	add	x1, x1, #0xa63
  411904:	bl	404660 <strcmp@plt>
  411908:	cbz	w0, 4119fc <wcrtomb@plt+0xcebc>
  41190c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411910:	mov	x0, x26
  411914:	add	x1, x1, #0xa5f
  411918:	bl	404660 <strcmp@plt>
  41191c:	cbz	w0, 411a30 <wcrtomb@plt+0xcef0>
  411920:	mov	x24, x22
  411924:	mov	x0, x28
  411928:	b	411934 <wcrtomb@plt+0xcdf4>
  41192c:	ldr	x0, [x24], #32
  411930:	cbz	x0, 4119c0 <wcrtomb@plt+0xce80>
  411934:	ldurb	w8, [x24, #-4]
  411938:	cbnz	w8, 41192c <wcrtomb@plt+0xcdec>
  41193c:	ldurb	w8, [x24, #-8]
  411940:	tbz	w8, #0, 41192c <wcrtomb@plt+0xcdec>
  411944:	mov	x1, x26
  411948:	bl	404660 <strcmp@plt>
  41194c:	cbnz	w0, 41192c <wcrtomb@plt+0xcdec>
  411950:	b	411b5c <wcrtomb@plt+0xd01c>
  411954:	mov	x23, x22
  411958:	mov	x1, x28
  41195c:	b	411968 <wcrtomb@plt+0xce28>
  411960:	ldr	x1, [x23], #32
  411964:	cbz	x1, 41198c <wcrtomb@plt+0xce4c>
  411968:	ldurb	w8, [x23, #-4]
  41196c:	cbnz	w8, 411960 <wcrtomb@plt+0xce20>
  411970:	ldurb	w8, [x23, #-8]
  411974:	tbz	w8, #0, 411960 <wcrtomb@plt+0xce20>
  411978:	mov	x0, x27
  41197c:	mov	w2, wzr
  411980:	bl	4047f0 <fnmatch@plt>
  411984:	cbnz	w0, 411960 <wcrtomb@plt+0xce20>
  411988:	b	411ad8 <wcrtomb@plt+0xcf98>
  41198c:	mov	w0, #0x18                  	// #24
  411990:	bl	4459e8 <argp_parse@@Base+0xe13c>
  411994:	mov	x24, x0
  411998:	mov	x0, x27
  41199c:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4119a0:	ldr	x8, [x25, #1072]
  4119a4:	stp	x0, xzr, [x24, #8]
  4119a8:	str	x24, [x25, #1072]
  4119ac:	str	x8, [x24]
  4119b0:	b	411834 <wcrtomb@plt+0xccf4>
  4119b4:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4119b8:	add	x0, x0, #0x440
  4119bc:	b	41182c <wcrtomb@plt+0xccec>
  4119c0:	mov	w0, #0x18                  	// #24
  4119c4:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4119c8:	mov	x24, x0
  4119cc:	mov	x0, x26
  4119d0:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4119d4:	str	x0, [x24, #8]
  4119d8:	mov	x0, x27
  4119dc:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4119e0:	cmp	w23, #0x3a
  4119e4:	str	x0, [x24, #16]
  4119e8:	b.ne	411a94 <wcrtomb@plt+0xcf54>  // b.any
  4119ec:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4119f0:	ldr	x8, [x9, #1152]
  4119f4:	str	x24, [x9, #1152]
  4119f8:	b	4119ac <wcrtomb@plt+0xce6c>
  4119fc:	add	x1, sp, #0x8
  411a00:	mov	x0, x27
  411a04:	mov	w2, wzr
  411a08:	bl	41b370 <wcrtomb@plt+0x16830>
  411a0c:	tbnz	x1, #63, 411a50 <wcrtomb@plt+0xcf10>
  411a10:	ldr	x8, [sp, #8]
  411a14:	ldrb	w8, [x8]
  411a18:	cbnz	w8, 411a50 <wcrtomb@plt+0xcf10>
  411a1c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411a20:	str	x0, [x8, #1128]
  411a24:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411a28:	add	x0, x0, #0x460
  411a2c:	b	41182c <wcrtomb@plt+0xccec>
  411a30:	add	x1, sp, #0x8
  411a34:	mov	x0, x27
  411a38:	mov	w2, wzr
  411a3c:	bl	41b370 <wcrtomb@plt+0x16830>
  411a40:	tbnz	x1, #63, 411a50 <wcrtomb@plt+0xcf10>
  411a44:	ldr	x8, [sp, #8]
  411a48:	ldrb	w8, [x8]
  411a4c:	cbz	w8, 411aa4 <wcrtomb@plt+0xcf64>
  411a50:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411a54:	ldr	x8, [x8, #4064]
  411a58:	cbz	x8, 411a60 <wcrtomb@plt+0xcf20>
  411a5c:	blr	x8
  411a60:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411a64:	mov	w2, #0x5                   	// #5
  411a68:	mov	x0, xzr
  411a6c:	add	x1, x1, #0xa90
  411a70:	bl	404900 <dcgettext@plt>
  411a74:	mov	x2, x0
  411a78:	mov	w0, wzr
  411a7c:	mov	w1, wzr
  411a80:	bl	403fa0 <error@plt>
  411a84:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411a88:	mov	w9, #0x2                   	// #2
  411a8c:	str	w9, [x8, #2416]
  411a90:	b	411834 <wcrtomb@plt+0xccf4>
  411a94:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411a98:	ldr	x8, [x9, #1136]
  411a9c:	str	x24, [x9, #1136]
  411aa0:	b	4119ac <wcrtomb@plt+0xce6c>
  411aa4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411aa8:	str	x0, [x8, #1112]
  411aac:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411ab0:	add	x0, x0, #0x450
  411ab4:	b	41182c <wcrtomb@plt+0xccec>
  411ab8:	ldp	x20, x19, [sp, #96]
  411abc:	ldp	x22, x21, [sp, #80]
  411ac0:	ldp	x24, x23, [sp, #64]
  411ac4:	ldp	x26, x25, [sp, #48]
  411ac8:	ldp	x28, x27, [sp, #32]
  411acc:	ldp	x29, x30, [sp, #16]
  411ad0:	add	sp, sp, #0x70
  411ad4:	ret
  411ad8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411adc:	ldr	x8, [x8, #4064]
  411ae0:	cbz	x8, 411ae8 <wcrtomb@plt+0xcfa8>
  411ae4:	blr	x8
  411ae8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411aec:	add	x1, x1, #0xa35
  411af0:	mov	w2, #0x5                   	// #5
  411af4:	mov	x0, xzr
  411af8:	bl	404900 <dcgettext@plt>
  411afc:	mov	x19, x0
  411b00:	mov	x0, x27
  411b04:	b	411b3c <wcrtomb@plt+0xcffc>
  411b08:	mov	x0, x26
  411b0c:	bl	411b94 <wcrtomb@plt+0xd054>
  411b10:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411b14:	ldr	x8, [x8, #4064]
  411b18:	cbz	x8, 411b20 <wcrtomb@plt+0xcfe0>
  411b1c:	blr	x8
  411b20:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411b24:	add	x1, x1, #0xa15
  411b28:	mov	w2, #0x5                   	// #5
  411b2c:	mov	x0, xzr
  411b30:	bl	404900 <dcgettext@plt>
  411b34:	mov	x19, x0
  411b38:	mov	x0, x26
  411b3c:	bl	444a68 <argp_parse@@Base+0xd1bc>
  411b40:	mov	x3, x0
  411b44:	mov	w0, wzr
  411b48:	mov	w1, wzr
  411b4c:	mov	x2, x19
  411b50:	bl	403fa0 <error@plt>
  411b54:	mov	w0, #0x2                   	// #2
  411b58:	bl	422db4 <wcrtomb@plt+0x1e274>
  411b5c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411b60:	ldr	x8, [x8, #4064]
  411b64:	cbz	x8, 411b6c <wcrtomb@plt+0xd02c>
  411b68:	blr	x8
  411b6c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411b70:	add	x1, x1, #0xa70
  411b74:	mov	w2, #0x5                   	// #5
  411b78:	mov	x0, xzr
  411b7c:	bl	404900 <dcgettext@plt>
  411b80:	mov	x2, x0
  411b84:	mov	w0, wzr
  411b88:	mov	w1, wzr
  411b8c:	mov	x3, x26
  411b90:	b	411b50 <wcrtomb@plt+0xd010>
  411b94:	stp	x29, x30, [sp, #-32]!
  411b98:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411b9c:	ldr	x8, [x8, #4064]
  411ba0:	str	x19, [sp, #16]
  411ba4:	mov	x19, x0
  411ba8:	mov	x29, sp
  411bac:	cbz	x8, 411bb4 <wcrtomb@plt+0xd074>
  411bb0:	blr	x8
  411bb4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411bb8:	add	x1, x1, #0x9e8
  411bbc:	mov	w2, #0x5                   	// #5
  411bc0:	mov	x0, xzr
  411bc4:	bl	404900 <dcgettext@plt>
  411bc8:	mov	x2, x0
  411bcc:	mov	w0, wzr
  411bd0:	mov	w1, wzr
  411bd4:	mov	x3, x19
  411bd8:	bl	403fa0 <error@plt>
  411bdc:	mov	w0, #0x2                   	// #2
  411be0:	bl	422db4 <wcrtomb@plt+0x1e274>
  411be4:	sub	sp, sp, #0xb0
  411be8:	stp	x29, x30, [sp, #80]
  411bec:	add	x29, sp, #0x50
  411bf0:	add	x8, sp, #0x20
  411bf4:	sub	x9, x29, #0x18
  411bf8:	add	x8, x8, #0x14
  411bfc:	stp	x28, x27, [sp, #96]
  411c00:	adrp	x28, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411c04:	stp	x8, x2, [sp, #16]
  411c08:	add	x8, x9, #0x14
  411c0c:	stp	x26, x25, [sp, #112]
  411c10:	stp	x24, x23, [sp, #128]
  411c14:	stp	x22, x21, [sp, #144]
  411c18:	stp	x20, x19, [sp, #160]
  411c1c:	mov	x19, x1
  411c20:	mov	x26, x0
  411c24:	mov	x27, xzr
  411c28:	mov	x24, xzr
  411c2c:	mov	x23, xzr
  411c30:	mov	x20, xzr
  411c34:	mov	x22, xzr
  411c38:	mov	x21, xzr
  411c3c:	add	x28, x28, #0x4c0
  411c40:	str	x8, [sp, #8]
  411c44:	mov	x8, x1
  411c48:	b	411c6c <wcrtomb@plt+0xd12c>
  411c4c:	ldr	x0, [sp, #24]
  411c50:	add	x1, sp, #0x20
  411c54:	bl	43d080 <argp_parse@@Base+0x57d4>
  411c58:	ldr	x8, [sp, #16]
  411c5c:	mov	x21, x0
  411c60:	add	x8, x27, x8
  411c64:	sub	x27, x8, x0
  411c68:	add	x8, x25, #0x1
  411c6c:	ldrb	w9, [x8]
  411c70:	cmp	w9, #0x25
  411c74:	b.eq	411c8c <wcrtomb@plt+0xd14c>  // b.none
  411c78:	cbz	w9, 411d44 <wcrtomb@plt+0xd204>
  411c7c:	add	x27, x27, #0x1
  411c80:	mov	x25, x8
  411c84:	add	x8, x8, #0x1
  411c88:	b	411c6c <wcrtomb@plt+0xd12c>
  411c8c:	mov	x25, x8
  411c90:	ldrb	w9, [x25, #1]!
  411c94:	sub	w10, w9, #0x64
  411c98:	cmp	w10, #0xc
  411c9c:	b.hi	411ce0 <wcrtomb@plt+0xd1a0>  // b.pmore
  411ca0:	adr	x8, 411c4c <wcrtomb@plt+0xd10c>
  411ca4:	ldrb	w9, [x28, x10]
  411ca8:	add	x8, x8, x9, lsl #2
  411cac:	br	x8
  411cb0:	cbz	x26, 411d20 <wcrtomb@plt+0xd1e0>
  411cb4:	cbnz	x24, 411cc4 <wcrtomb@plt+0xd184>
  411cb8:	ldr	x0, [x26]
  411cbc:	bl	4390fc <argp_parse@@Base+0x1850>
  411cc0:	mov	x24, x0
  411cc4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411cc8:	ldrb	w2, [x8, #4008]
  411ccc:	mov	x0, x24
  411cd0:	mov	w1, wzr
  411cd4:	bl	42b698 <wcrtomb@plt+0x26b58>
  411cd8:	mov	x23, x0
  411cdc:	b	411d10 <wcrtomb@plt+0xd1d0>
  411ce0:	cbz	w9, 411c7c <wcrtomb@plt+0xd13c>
  411ce4:	cmp	w9, #0x25
  411ce8:	b.ne	411cf8 <wcrtomb@plt+0xd1b8>  // b.any
  411cec:	add	x27, x27, #0x1
  411cf0:	add	x8, x25, #0x1
  411cf4:	b	411c6c <wcrtomb@plt+0xd12c>
  411cf8:	add	x27, x27, #0x2
  411cfc:	b	411d20 <wcrtomb@plt+0xd1e0>
  411d00:	cbz	x26, 411d20 <wcrtomb@plt+0xd1e0>
  411d04:	ldr	x0, [x26]
  411d08:	bl	43925c <argp_parse@@Base+0x19b0>
  411d0c:	mov	x20, x0
  411d10:	bl	403f40 <strlen@plt>
  411d14:	add	x27, x0, x27
  411d18:	add	x8, x25, #0x1
  411d1c:	b	411c6c <wcrtomb@plt+0xd12c>
  411d20:	add	x8, x25, #0x1
  411d24:	b	411c6c <wcrtomb@plt+0xd12c>
  411d28:	bl	404200 <getpid@plt>
  411d2c:	sub	x1, x29, #0x18
  411d30:	sxtw	x0, w0
  411d34:	bl	43d080 <argp_parse@@Base+0x57d4>
  411d38:	ldr	x8, [sp, #8]
  411d3c:	mov	x22, x0
  411d40:	b	411c60 <wcrtomb@plt+0xd120>
  411d44:	add	x0, x27, #0x1
  411d48:	str	x24, [sp, #24]
  411d4c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  411d50:	adrp	x28, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411d54:	mov	x25, x0
  411d58:	mov	w27, #0x25                  	// #37
  411d5c:	add	x28, x28, #0x4cd
  411d60:	b	411d70 <wcrtomb@plt+0xd230>
  411d64:	strb	w27, [x26], #1
  411d68:	add	x19, x24, #0x2
  411d6c:	mov	x0, x26
  411d70:	ldrb	w8, [x19]
  411d74:	mov	x24, x19
  411d78:	mov	x26, x0
  411d7c:	cmp	w8, #0x25
  411d80:	b.eq	411d98 <wcrtomb@plt+0xd258>  // b.none
  411d84:	cbz	w8, 411e2c <wcrtomb@plt+0xd2ec>
  411d88:	strb	w8, [x26], #1
  411d8c:	add	x19, x24, #0x1
  411d90:	mov	x0, x26
  411d94:	b	411d70 <wcrtomb@plt+0xd230>
  411d98:	mov	x19, x24
  411d9c:	ldrb	w9, [x19, #1]!
  411da0:	sub	w8, w9, #0x64
  411da4:	cmp	w8, #0xc
  411da8:	b.hi	411dcc <wcrtomb@plt+0xd28c>  // b.pmore
  411dac:	adr	x9, 411dbc <wcrtomb@plt+0xd27c>
  411db0:	ldrb	w10, [x28, x8]
  411db4:	add	x9, x9, x10, lsl #2
  411db8:	br	x9
  411dbc:	cbz	x23, 411d68 <wcrtomb@plt+0xd228>
  411dc0:	mov	x0, x26
  411dc4:	mov	x1, x23
  411dc8:	b	411e00 <wcrtomb@plt+0xd2c0>
  411dcc:	cmp	w9, #0x25
  411dd0:	b.eq	411d64 <wcrtomb@plt+0xd224>  // b.none
  411dd4:	mov	x0, x26
  411dd8:	strb	w27, [x0], #1
  411ddc:	ldrb	w8, [x19]
  411de0:	cbz	w8, 411d70 <wcrtomb@plt+0xd230>
  411de4:	add	x19, x24, #0x2
  411de8:	add	x0, x26, #0x2
  411dec:	strb	w8, [x26, #1]
  411df0:	b	411d70 <wcrtomb@plt+0xd230>
  411df4:	cbz	x20, 411d68 <wcrtomb@plt+0xd228>
  411df8:	mov	x0, x26
  411dfc:	mov	x1, x20
  411e00:	bl	404160 <stpcpy@plt>
  411e04:	mov	x26, x0
  411e08:	b	411d68 <wcrtomb@plt+0xd228>
  411e0c:	mov	x0, x26
  411e10:	mov	x1, x21
  411e14:	b	411e20 <wcrtomb@plt+0xd2e0>
  411e18:	mov	x0, x26
  411e1c:	mov	x1, x22
  411e20:	bl	404160 <stpcpy@plt>
  411e24:	add	x19, x24, #0x2
  411e28:	b	411d70 <wcrtomb@plt+0xd230>
  411e2c:	ldr	x0, [sp, #24]
  411e30:	bl	404700 <free@plt>
  411e34:	mov	x8, x26
  411e38:	cmp	x26, x25
  411e3c:	b.ls	411e50 <wcrtomb@plt+0xd310>  // b.plast
  411e40:	mov	x26, x8
  411e44:	ldrb	w9, [x26, #-1]!
  411e48:	cmp	w9, #0x2f
  411e4c:	b.eq	411e34 <wcrtomb@plt+0xd2f4>  // b.none
  411e50:	strb	wzr, [x8]
  411e54:	mov	x0, x25
  411e58:	ldp	x20, x19, [sp, #160]
  411e5c:	ldp	x22, x21, [sp, #144]
  411e60:	ldp	x24, x23, [sp, #128]
  411e64:	ldp	x26, x25, [sp, #112]
  411e68:	ldp	x28, x27, [sp, #96]
  411e6c:	ldp	x29, x30, [sp, #80]
  411e70:	add	sp, sp, #0xb0
  411e74:	ret
  411e78:	stp	x29, x30, [sp, #-32]!
  411e7c:	stp	x20, x19, [sp, #16]
  411e80:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411e84:	ldr	x1, [x8, #1080]
  411e88:	mov	x19, x0
  411e8c:	mov	x29, sp
  411e90:	cbnz	x1, 411eb0 <wcrtomb@plt+0xd370>
  411e94:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411e98:	add	x20, x20, #0x438
  411e9c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411ea0:	add	x1, x1, #0x8c0
  411ea4:	mov	x0, x20
  411ea8:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  411eac:	ldr	x1, [x20]
  411eb0:	mov	x0, x19
  411eb4:	ldp	x20, x19, [sp, #16]
  411eb8:	mov	x2, xzr
  411ebc:	ldp	x29, x30, [sp], #32
  411ec0:	b	411be4 <wcrtomb@plt+0xd0a4>
  411ec4:	stp	x29, x30, [sp, #-32]!
  411ec8:	stp	x20, x19, [sp, #16]
  411ecc:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411ed0:	ldr	x19, [x20, #1088]
  411ed4:	mov	x29, sp
  411ed8:	cbnz	x19, 411f3c <wcrtomb@plt+0xd3fc>
  411edc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411ee0:	add	x0, x0, #0x8d4
  411ee4:	bl	404a30 <getenv@plt>
  411ee8:	adrp	x8, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411eec:	add	x8, x8, #0x8db
  411ef0:	cmp	x0, #0x0
  411ef4:	csel	x19, x8, x0, eq  // eq = none
  411ef8:	mov	x0, x19
  411efc:	bl	403f40 <strlen@plt>
  411f00:	add	x0, x0, #0x12
  411f04:	bl	4459e8 <argp_parse@@Base+0xe13c>
  411f08:	mov	x1, x19
  411f0c:	str	x0, [x20, #1088]
  411f10:	bl	404840 <strcpy@plt>
  411f14:	ldr	x19, [x20, #1088]
  411f18:	mov	x0, x19
  411f1c:	bl	403f40 <strlen@plt>
  411f20:	adrp	x8, 45c000 <_obstack_memory_used@@Base+0x154b0>
  411f24:	add	x8, x8, #0x8e0
  411f28:	ldr	q0, [x8]
  411f2c:	add	x8, x19, x0
  411f30:	mov	w9, #0x6e                  	// #110
  411f34:	strh	w9, [x8, #16]
  411f38:	str	q0, [x8]
  411f3c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411f40:	ldr	x8, [x8, #1096]
  411f44:	mov	x1, x19
  411f48:	ldp	x20, x19, [sp, #16]
  411f4c:	mov	x0, xzr
  411f50:	add	x2, x8, #0x1
  411f54:	ldp	x29, x30, [sp], #32
  411f58:	b	411be4 <wcrtomb@plt+0xd0a4>
  411f5c:	stp	x29, x30, [sp, #-80]!
  411f60:	stp	x26, x25, [sp, #16]
  411f64:	stp	x24, x23, [sp, #32]
  411f68:	stp	x22, x21, [sp, #48]
  411f6c:	stp	x20, x19, [sp, #64]
  411f70:	mov	x25, x3
  411f74:	ldr	x21, [x25, #8]!
  411f78:	and	w8, w0, #0xff
  411f7c:	mov	x20, x3
  411f80:	mov	w19, w0
  411f84:	cmp	w8, #0x78
  411f88:	mov	x0, x1
  411f8c:	mov	x29, sp
  411f90:	b.eq	411fb0 <wcrtomb@plt+0xd470>  // b.none
  411f94:	cmp	w8, #0x67
  411f98:	b.ne	411fc8 <wcrtomb@plt+0xd488>  // b.any
  411f9c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411fa0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411fa4:	ldr	x8, [x8, #1104]
  411fa8:	ldr	x9, [x9, #1112]
  411fac:	b	411fc0 <wcrtomb@plt+0xd480>
  411fb0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411fb4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  411fb8:	ldr	x8, [x8, #1120]
  411fbc:	ldr	x9, [x9, #1128]
  411fc0:	cmp	x8, #0x0
  411fc4:	csel	x2, x2, x9, eq  // eq = none
  411fc8:	mov	x1, x21
  411fcc:	bl	40adb0 <wcrtomb@plt+0x6270>
  411fd0:	strb	w19, [x0, #156]
  411fd4:	bl	40bb44 <wcrtomb@plt+0x7004>
  411fd8:	ldr	x22, [x20, #16]
  411fdc:	mov	w26, #0x200                 	// #512
  411fe0:	b	411ff8 <wcrtomb@plt+0xd4b8>
  411fe4:	mov	x0, x23
  411fe8:	add	x22, x22, x24
  411fec:	sub	x21, x21, x24
  411ff0:	bl	405670 <wcrtomb@plt+0xb30>
  411ff4:	cbz	x21, 412030 <wcrtomb@plt+0xd4f0>
  411ff8:	bl	40535c <wcrtomb@plt+0x81c>
  411ffc:	cmp	x21, #0x200
  412000:	csel	x24, x21, x26, cc  // cc = lo, ul, last
  412004:	mov	x1, x22
  412008:	mov	x2, x24
  41200c:	mov	x23, x0
  412010:	bl	403ec0 <memcpy@plt>
  412014:	cmp	x21, #0x1ff
  412018:	b.hi	411fe4 <wcrtomb@plt+0xd4a4>  // b.pmore
  41201c:	add	x0, x23, x24
  412020:	sub	x2, x26, x24
  412024:	mov	w1, wzr
  412028:	bl	404360 <memset@plt>
  41202c:	b	411fe4 <wcrtomb@plt+0xd4a4>
  412030:	ldr	x0, [x20]
  412034:	cbz	x0, 412050 <wcrtomb@plt+0xd510>
  412038:	mov	x1, xzr
  41203c:	bl	446ab4 <_obstack_free@@Base>
  412040:	ldr	x0, [x20]
  412044:	bl	404700 <free@plt>
  412048:	str	xzr, [x20]
  41204c:	b	412058 <wcrtomb@plt+0xd518>
  412050:	ldr	x0, [x20, #16]
  412054:	bl	404700 <free@plt>
  412058:	and	w8, w19, #0xff
  41205c:	cmp	w8, #0x67
  412060:	stp	xzr, xzr, [x25]
  412064:	b.ne	412078 <wcrtomb@plt+0xd538>  // b.any
  412068:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41206c:	ldr	x9, [x8, #1096]
  412070:	add	x9, x9, #0x1
  412074:	str	x9, [x8, #1096]
  412078:	ldp	x20, x19, [sp, #64]
  41207c:	ldp	x22, x21, [sp, #48]
  412080:	ldp	x24, x23, [sp, #32]
  412084:	ldp	x26, x25, [sp, #16]
  412088:	ldp	x29, x30, [sp], #80
  41208c:	ret
  412090:	stp	x29, x30, [sp, #-32]!
  412094:	str	x19, [sp, #16]
  412098:	mov	x19, x0
  41209c:	ldr	x0, [x0]
  4120a0:	mov	x29, sp
  4120a4:	cbz	x0, 4120c0 <wcrtomb@plt+0xd580>
  4120a8:	mov	x1, xzr
  4120ac:	bl	446ab4 <_obstack_free@@Base>
  4120b0:	ldr	x0, [x19]
  4120b4:	bl	404700 <free@plt>
  4120b8:	str	xzr, [x19]
  4120bc:	b	4120c8 <wcrtomb@plt+0xd588>
  4120c0:	ldr	x0, [x19, #16]
  4120c4:	bl	404700 <free@plt>
  4120c8:	stp	xzr, xzr, [x19, #8]
  4120cc:	ldr	x19, [sp, #16]
  4120d0:	ldp	x29, x30, [sp], #32
  4120d4:	ret
  4120d8:	sub	sp, sp, #0x40
  4120dc:	stp	x20, x19, [sp, #48]
  4120e0:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4120e4:	stp	x22, x21, [sp, #32]
  4120e8:	ldr	x22, [x20, #1136]
  4120ec:	mov	x19, x0
  4120f0:	stp	x29, x30, [sp, #16]
  4120f4:	add	x29, sp, #0x10
  4120f8:	cbz	x22, 412134 <wcrtomb@plt+0xd5f4>
  4120fc:	ldr	x8, [x19]
  412100:	cbnz	x8, 4121bc <wcrtomb@plt+0xd67c>
  412104:	mov	w0, #0x58                  	// #88
  412108:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41210c:	adrp	x3, 445000 <argp_parse@@Base+0xd754>
  412110:	adrp	x4, 404000 <sigprocmask@plt>
  412114:	add	x3, x3, #0x9e8
  412118:	add	x4, x4, #0x700
  41211c:	mov	x1, xzr
  412120:	mov	x2, xzr
  412124:	str	x0, [x19]
  412128:	bl	4467e8 <_obstack_begin@@Base>
  41212c:	ldr	x22, [x20, #1136]
  412130:	cbnz	x22, 4121bc <wcrtomb@plt+0xd67c>
  412134:	ldr	x8, [x19]
  412138:	cbz	x8, 41216c <wcrtomb@plt+0xd62c>
  41213c:	mov	x0, x19
  412140:	bl	4121dc <wcrtomb@plt+0xd69c>
  412144:	bl	411ec4 <wcrtomb@plt+0xd384>
  412148:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41214c:	ldr	x2, [x8, #3768]
  412150:	mov	x20, x0
  412154:	mov	w0, #0x67                  	// #103
  412158:	mov	x1, x20
  41215c:	mov	x3, x19
  412160:	bl	411f5c <wcrtomb@plt+0xd41c>
  412164:	mov	x0, x20
  412168:	bl	404700 <free@plt>
  41216c:	ldp	x20, x19, [sp, #48]
  412170:	ldp	x22, x21, [sp, #32]
  412174:	ldp	x29, x30, [sp, #16]
  412178:	add	sp, sp, #0x40
  41217c:	ret
  412180:	mov	x0, x21
  412184:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  412188:	mov	x21, x0
  41218c:	str	x0, [sp, #8]
  412190:	mov	x0, x21
  412194:	bl	403f40 <strlen@plt>
  412198:	mov	x3, x0
  41219c:	mov	x0, x19
  4121a0:	mov	x1, x20
  4121a4:	mov	x2, x21
  4121a8:	bl	4145b0 <wcrtomb@plt+0xfa70>
  4121ac:	ldr	x0, [sp, #8]
  4121b0:	bl	404700 <free@plt>
  4121b4:	ldr	x22, [x22]
  4121b8:	cbz	x22, 412134 <wcrtomb@plt+0xd5f4>
  4121bc:	ldp	x20, x21, [x22, #8]
  4121c0:	add	x2, sp, #0x8
  4121c4:	mov	w0, #0x1                   	// #1
  4121c8:	mov	x1, x21
  4121cc:	bl	428760 <wcrtomb@plt+0x23c20>
  4121d0:	tbz	w0, #0, 412180 <wcrtomb@plt+0xd640>
  4121d4:	ldr	x21, [sp, #8]
  4121d8:	b	412190 <wcrtomb@plt+0xd650>
  4121dc:	sub	sp, sp, #0x40
  4121e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4121e4:	stp	x22, x21, [sp, #32]
  4121e8:	ldr	x22, [x8, #1152]
  4121ec:	stp	x20, x19, [sp, #48]
  4121f0:	mov	x19, x0
  4121f4:	stp	x29, x30, [sp, #16]
  4121f8:	add	x29, sp, #0x10
  4121fc:	cbnz	x22, 4122a4 <wcrtomb@plt+0xd764>
  412200:	ldr	x8, [x19]
  412204:	ldp	x9, x10, [x8, #16]
  412208:	cmp	x10, x9
  41220c:	b.ne	41221c <wcrtomb@plt+0xd6dc>  // b.any
  412210:	ldrb	w11, [x8, #80]
  412214:	orr	w11, w11, #0x2
  412218:	strb	w11, [x8, #80]
  41221c:	ldr	x12, [x8, #48]
  412220:	ldr	x13, [x8, #8]
  412224:	ldr	x11, [x8, #32]
  412228:	add	x10, x12, x10
  41222c:	bic	x10, x10, x12
  412230:	sub	x12, x10, x13
  412234:	sub	x13, x11, x13
  412238:	cmp	x12, x13
  41223c:	str	x10, [x8, #24]
  412240:	b.ls	41224c <wcrtomb@plt+0xd70c>  // b.plast
  412244:	mov	x10, x11
  412248:	str	x11, [x8, #24]
  41224c:	str	x10, [x8, #16]
  412250:	str	x9, [x19, #16]
  412254:	ldp	x20, x19, [sp, #48]
  412258:	ldp	x22, x21, [sp, #32]
  41225c:	ldp	x29, x30, [sp, #16]
  412260:	add	sp, sp, #0x40
  412264:	ret
  412268:	mov	x0, x21
  41226c:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  412270:	mov	x21, x0
  412274:	str	x0, [sp, #8]
  412278:	mov	x0, x21
  41227c:	bl	403f40 <strlen@plt>
  412280:	mov	x3, x0
  412284:	mov	x0, x19
  412288:	mov	x1, x20
  41228c:	mov	x2, x21
  412290:	bl	4145b0 <wcrtomb@plt+0xfa70>
  412294:	ldr	x0, [sp, #8]
  412298:	bl	404700 <free@plt>
  41229c:	ldr	x22, [x22]
  4122a0:	cbz	x22, 412200 <wcrtomb@plt+0xd6c0>
  4122a4:	ldp	x20, x21, [x22, #8]
  4122a8:	add	x2, sp, #0x8
  4122ac:	mov	w0, #0x1                   	// #1
  4122b0:	mov	x1, x21
  4122b4:	bl	428760 <wcrtomb@plt+0x23c20>
  4122b8:	tbz	w0, #0, 412268 <wcrtomb@plt+0xd728>
  4122bc:	ldr	x21, [sp, #8]
  4122c0:	b	412278 <wcrtomb@plt+0xd738>
  4122c4:	stp	x29, x30, [sp, #-16]!
  4122c8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4122cc:	ldr	x8, [x8, #1136]
  4122d0:	mov	x29, sp
  4122d4:	cbnz	x8, 4122e0 <wcrtomb@plt+0xd7a0>
  4122d8:	ldp	x29, x30, [sp], #16
  4122dc:	ret
  4122e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4122e4:	ldr	x8, [x8, #4064]
  4122e8:	cbz	x8, 4122f0 <wcrtomb@plt+0xd7b0>
  4122ec:	blr	x8
  4122f0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4122f4:	add	x1, x1, #0x8f2
  4122f8:	mov	w2, #0x5                   	// #5
  4122fc:	mov	x0, xzr
  412300:	bl	404900 <dcgettext@plt>
  412304:	mov	x2, x0
  412308:	mov	w0, wzr
  41230c:	mov	w1, wzr
  412310:	bl	403fa0 <error@plt>
  412314:	mov	w0, #0x2                   	// #2
  412318:	bl	422db4 <wcrtomb@plt+0x1e274>
  41231c:	movi	v0.2d, #0x0
  412320:	str	xzr, [x0, #80]
  412324:	stp	q0, q0, [x0, #48]
  412328:	stp	xzr, xzr, [x0, #328]
  41232c:	ret
  412330:	stp	x29, x30, [sp, #-48]!
  412334:	stp	x20, x19, [sp, #32]
  412338:	mov	x19, x0
  41233c:	str	x21, [sp, #16]
  412340:	mov	x29, sp
  412344:	cbz	x1, 412368 <wcrtomb@plt+0xd828>
  412348:	mov	x20, x1
  41234c:	add	x21, x19, #0x8
  412350:	ldur	x0, [x21, #-8]
  412354:	bl	404700 <free@plt>
  412358:	ldr	x0, [x21], #24
  41235c:	bl	404700 <free@plt>
  412360:	subs	x20, x20, #0x1
  412364:	b.ne	412350 <wcrtomb@plt+0xd810>  // b.any
  412368:	mov	x0, x19
  41236c:	ldp	x20, x19, [sp, #32]
  412370:	ldr	x21, [sp, #16]
  412374:	ldp	x29, x30, [sp], #48
  412378:	b	404700 <free@plt>
  41237c:	stp	x29, x30, [sp, #-64]!
  412380:	stp	x22, x21, [sp, #32]
  412384:	mov	x22, x0
  412388:	mov	x0, x1
  41238c:	str	x23, [sp, #16]
  412390:	stp	x20, x19, [sp, #48]
  412394:	mov	x29, sp
  412398:	mov	x19, x3
  41239c:	mov	x20, x2
  4123a0:	mov	x21, x1
  4123a4:	bl	403f40 <strlen@plt>
  4123a8:	add	x0, x0, #0xe
  4123ac:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4123b0:	adrp	x8, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4123b4:	add	x8, x8, #0x91d
  4123b8:	ldr	x9, [x8]
  4123bc:	ldur	x8, [x8, #6]
  4123c0:	mov	x23, x0
  4123c4:	mov	x1, x21
  4123c8:	str	x9, [x0]
  4123cc:	stur	x8, [x0, #6]
  4123d0:	add	x0, x0, #0xd
  4123d4:	bl	404160 <stpcpy@plt>
  4123d8:	ldp	x8, x0, [x22, #328]
  4123dc:	add	x9, x8, #0x1
  4123e0:	add	x8, x8, x8, lsl #1
  4123e4:	lsl	x21, x8, #3
  4123e8:	add	x1, x21, #0x18
  4123ec:	str	x9, [x22, #328]
  4123f0:	bl	445a68 <argp_parse@@Base+0xe1bc>
  4123f4:	str	x0, [x22, #336]
  4123f8:	mov	x0, x23
  4123fc:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  412400:	ldr	x8, [x22, #336]
  412404:	add	x1, x19, #0x1
  412408:	str	x0, [x8, x21]
  41240c:	mov	x0, x20
  412410:	bl	445c50 <argp_parse@@Base+0xe3a4>
  412414:	ldr	x8, [x22, #336]
  412418:	add	x8, x8, x21
  41241c:	str	x0, [x8, #8]
  412420:	ldr	x8, [x22, #336]
  412424:	mov	x0, x23
  412428:	ldr	x23, [sp, #16]
  41242c:	add	x8, x8, x21
  412430:	str	x19, [x8, #16]
  412434:	ldp	x20, x19, [sp, #48]
  412438:	ldp	x22, x21, [sp, #32]
  41243c:	ldp	x29, x30, [sp], #64
  412440:	b	404700 <free@plt>
  412444:	stp	x29, x30, [sp, #-96]!
  412448:	stp	x26, x25, [sp, #32]
  41244c:	stp	x24, x23, [sp, #48]
  412450:	stp	x22, x21, [sp, #64]
  412454:	stp	x20, x19, [sp, #80]
  412458:	str	xzr, [x1]
  41245c:	str	xzr, [x2]
  412460:	ldr	x8, [x0, #328]
  412464:	str	x27, [sp, #16]
  412468:	mov	x29, sp
  41246c:	cbz	x8, 412508 <wcrtomb@plt+0xd9c8>
  412470:	mov	x19, x2
  412474:	mov	x20, x1
  412478:	mov	x21, x0
  41247c:	mov	x24, xzr
  412480:	mov	x0, xzr
  412484:	mov	x8, xzr
  412488:	mov	w25, #0x1                   	// #1
  41248c:	ldr	x9, [x21, #336]
  412490:	add	x10, x8, #0x1
  412494:	add	x8, x8, x8, lsl #1
  412498:	lsl	x27, x8, #3
  41249c:	add	x9, x9, x24
  4124a0:	ldp	x22, x23, [x9]
  4124a4:	ldr	x26, [x9, #16]
  4124a8:	add	x1, x27, #0x18
  4124ac:	str	x10, [x19]
  4124b0:	bl	445a68 <argp_parse@@Base+0xe1bc>
  4124b4:	str	x0, [x20]
  4124b8:	mov	x0, x22
  4124bc:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4124c0:	ldr	x8, [x20]
  4124c4:	add	x1, x26, #0x1
  4124c8:	str	x0, [x8, x27]
  4124cc:	mov	x0, x23
  4124d0:	bl	445c50 <argp_parse@@Base+0xe3a4>
  4124d4:	ldr	x8, [x20]
  4124d8:	add	x8, x8, x27
  4124dc:	str	x0, [x8, #8]
  4124e0:	ldr	x0, [x20]
  4124e4:	add	x8, x0, x27
  4124e8:	str	x26, [x8, #16]
  4124ec:	ldr	x8, [x21, #328]
  4124f0:	cmp	x25, x8
  4124f4:	b.cs	412508 <wcrtomb@plt+0xd9c8>  // b.hs, b.nlast
  4124f8:	ldr	x8, [x19]
  4124fc:	add	x25, x25, #0x1
  412500:	add	x24, x24, #0x18
  412504:	b	41248c <wcrtomb@plt+0xd94c>
  412508:	ldp	x20, x19, [sp, #80]
  41250c:	ldp	x22, x21, [sp, #64]
  412510:	ldp	x24, x23, [sp, #48]
  412514:	ldp	x26, x25, [sp, #32]
  412518:	ldr	x27, [sp, #16]
  41251c:	ldp	x29, x30, [sp], #96
  412520:	ret
  412524:	sub	sp, sp, #0x60
  412528:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41252c:	stp	x22, x21, [sp, #64]
  412530:	ldr	x22, [x8, #1136]
  412534:	stp	x20, x19, [sp, #80]
  412538:	mov	x19, x0
  41253c:	stp	x29, x30, [sp, #16]
  412540:	stp	x26, x25, [sp, #32]
  412544:	stp	x24, x23, [sp, #48]
  412548:	add	x29, sp, #0x10
  41254c:	cbz	x22, 4125e4 <wcrtomb@plt+0xdaa4>
  412550:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x144b0>
  412554:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0x154b0>
  412558:	add	x23, x23, #0xe1f
  41255c:	add	x24, x24, #0x500
  412560:	b	412594 <wcrtomb@plt+0xda54>
  412564:	ldr	x21, [x22, #16]
  412568:	ldur	x26, [x25, #-16]
  41256c:	ldur	x20, [x25, #-32]
  412570:	mov	x0, x21
  412574:	bl	403f40 <strlen@plt>
  412578:	mov	x3, x0
  41257c:	mov	x0, x19
  412580:	mov	x1, x20
  412584:	mov	x2, x21
  412588:	blr	x26
  41258c:	ldr	x22, [x22]
  412590:	cbz	x22, 4125e4 <wcrtomb@plt+0xdaa4>
  412594:	ldr	x20, [x22, #8]
  412598:	mov	x25, x24
  41259c:	mov	x21, x23
  4125a0:	b	4125bc <wcrtomb@plt+0xda7c>
  4125a4:	mov	x0, x21
  4125a8:	mov	x1, x20
  4125ac:	bl	404660 <strcmp@plt>
  4125b0:	cbz	w0, 412564 <wcrtomb@plt+0xda24>
  4125b4:	ldr	x21, [x25], #32
  4125b8:	cbz	x21, 41258c <wcrtomb@plt+0xda4c>
  4125bc:	ldurb	w8, [x25, #-4]
  4125c0:	cbz	w8, 4125a4 <wcrtomb@plt+0xda64>
  4125c4:	mov	x0, x21
  4125c8:	bl	403f40 <strlen@plt>
  4125cc:	mov	x2, x0
  4125d0:	mov	x0, x21
  4125d4:	mov	x1, x20
  4125d8:	bl	404300 <strncmp@plt>
  4125dc:	cbnz	w0, 4125b4 <wcrtomb@plt+0xda74>
  4125e0:	b	412564 <wcrtomb@plt+0xda24>
  4125e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4125e8:	ldr	x22, [x8, #1144]
  4125ec:	cbz	x22, 412684 <wcrtomb@plt+0xdb44>
  4125f0:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4125f4:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4125f8:	add	x23, x23, #0xe1f
  4125fc:	add	x24, x24, #0x500
  412600:	b	412634 <wcrtomb@plt+0xdaf4>
  412604:	ldr	x21, [x22, #16]
  412608:	ldur	x26, [x25, #-16]
  41260c:	ldur	x20, [x25, #-32]
  412610:	mov	x0, x21
  412614:	bl	403f40 <strlen@plt>
  412618:	mov	x3, x0
  41261c:	mov	x0, x19
  412620:	mov	x1, x20
  412624:	mov	x2, x21
  412628:	blr	x26
  41262c:	ldr	x22, [x22]
  412630:	cbz	x22, 412684 <wcrtomb@plt+0xdb44>
  412634:	ldr	x20, [x22, #8]
  412638:	mov	x25, x24
  41263c:	mov	x21, x23
  412640:	b	41265c <wcrtomb@plt+0xdb1c>
  412644:	mov	x0, x21
  412648:	mov	x1, x20
  41264c:	bl	404660 <strcmp@plt>
  412650:	cbz	w0, 412604 <wcrtomb@plt+0xdac4>
  412654:	ldr	x21, [x25], #32
  412658:	cbz	x21, 41262c <wcrtomb@plt+0xdaec>
  41265c:	ldurb	w8, [x25, #-4]
  412660:	cbz	w8, 412644 <wcrtomb@plt+0xdb04>
  412664:	mov	x0, x21
  412668:	bl	403f40 <strlen@plt>
  41266c:	mov	x2, x0
  412670:	mov	x0, x21
  412674:	mov	x1, x20
  412678:	bl	404300 <strncmp@plt>
  41267c:	cbnz	w0, 412654 <wcrtomb@plt+0xdb14>
  412680:	b	412604 <wcrtomb@plt+0xdac4>
  412684:	ldr	x8, [x19, #352]
  412688:	cbz	x8, 4126bc <wcrtomb@plt+0xdb7c>
  41268c:	ldr	x8, [x19, #360]
  412690:	adrp	x21, 412000 <wcrtomb@plt+0xd4c0>
  412694:	add	x20, x19, #0x158
  412698:	add	x21, x21, #0x9a8
  41269c:	add	x8, x8, #0x200
  4126a0:	str	x8, [sp, #8]
  4126a4:	add	x1, sp, #0x8
  4126a8:	mov	x0, x20
  4126ac:	mov	x2, x21
  4126b0:	mov	x3, x19
  4126b4:	bl	412790 <wcrtomb@plt+0xdc50>
  4126b8:	tbnz	w0, #0, 4126a4 <wcrtomb@plt+0xdb64>
  4126bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4126c0:	ldr	x22, [x8, #1152]
  4126c4:	cbz	x22, 41275c <wcrtomb@plt+0xdc1c>
  4126c8:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4126cc:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4126d0:	add	x23, x23, #0xe1f
  4126d4:	add	x24, x24, #0x500
  4126d8:	b	41270c <wcrtomb@plt+0xdbcc>
  4126dc:	ldr	x21, [x22, #16]
  4126e0:	ldur	x26, [x25, #-16]
  4126e4:	ldur	x20, [x25, #-32]
  4126e8:	mov	x0, x21
  4126ec:	bl	403f40 <strlen@plt>
  4126f0:	mov	x3, x0
  4126f4:	mov	x0, x19
  4126f8:	mov	x1, x20
  4126fc:	mov	x2, x21
  412700:	blr	x26
  412704:	ldr	x22, [x22]
  412708:	cbz	x22, 41275c <wcrtomb@plt+0xdc1c>
  41270c:	ldr	x20, [x22, #8]
  412710:	mov	x25, x24
  412714:	mov	x21, x23
  412718:	b	412734 <wcrtomb@plt+0xdbf4>
  41271c:	mov	x0, x21
  412720:	mov	x1, x20
  412724:	bl	404660 <strcmp@plt>
  412728:	cbz	w0, 4126dc <wcrtomb@plt+0xdb9c>
  41272c:	ldr	x21, [x25], #32
  412730:	cbz	x21, 412704 <wcrtomb@plt+0xdbc4>
  412734:	ldurb	w8, [x25, #-4]
  412738:	cbz	w8, 41271c <wcrtomb@plt+0xdbdc>
  41273c:	mov	x0, x21
  412740:	bl	403f40 <strlen@plt>
  412744:	mov	x2, x0
  412748:	mov	x0, x21
  41274c:	mov	x1, x20
  412750:	bl	404300 <strncmp@plt>
  412754:	cbnz	w0, 41272c <wcrtomb@plt+0xdbec>
  412758:	b	4126dc <wcrtomb@plt+0xdb9c>
  41275c:	ldr	x8, [x19, #136]
  412760:	ldrb	w9, [x19, #320]
  412764:	str	x8, [x19, #264]
  412768:	cbz	w9, 412774 <wcrtomb@plt+0xdc34>
  41276c:	ldr	x8, [x19, #312]
  412770:	str	x8, [x19, #136]
  412774:	ldp	x20, x19, [sp, #80]
  412778:	ldp	x22, x21, [sp, #64]
  41277c:	ldp	x24, x23, [sp, #48]
  412780:	ldp	x26, x25, [sp, #32]
  412784:	ldp	x29, x30, [sp, #16]
  412788:	add	sp, sp, #0x60
  41278c:	ret
  412790:	stp	x29, x30, [sp, #-80]!
  412794:	str	x25, [sp, #16]
  412798:	stp	x24, x23, [sp, #32]
  41279c:	stp	x22, x21, [sp, #48]
  4127a0:	stp	x20, x19, [sp, #64]
  4127a4:	ldr	x25, [x1]
  4127a8:	ldp	x9, x8, [x0, #8]
  4127ac:	mov	x21, x3
  4127b0:	mov	x20, x2
  4127b4:	mov	x19, x1
  4127b8:	add	x8, x8, x9
  4127bc:	mov	x22, x25
  4127c0:	mov	x29, sp
  4127c4:	b	4127cc <wcrtomb@plt+0xdc8c>
  4127c8:	add	x22, x22, #0x1
  4127cc:	ldrb	w9, [x22]
  4127d0:	cmp	w9, #0x20
  4127d4:	b.eq	4127c8 <wcrtomb@plt+0xdc88>  // b.none
  4127d8:	cmp	w9, #0x9
  4127dc:	b.eq	4127c8 <wcrtomb@plt+0xdc88>  // b.none
  4127e0:	sub	w10, w9, #0x30
  4127e4:	cmp	w10, #0xa
  4127e8:	b.cs	412854 <wcrtomb@plt+0xdd14>  // b.hs, b.nlast
  4127ec:	add	x1, x29, #0x18
  4127f0:	mov	w2, #0xa                   	// #10
  4127f4:	mov	x0, x22
  4127f8:	mov	w3, wzr
  4127fc:	sub	x24, x8, x25
  412800:	bl	404400 <__strtoul_internal@plt>
  412804:	cmp	x24, x0
  412808:	b.cs	412874 <wcrtomb@plt+0xdd34>  // b.hs, b.nlast
  41280c:	ldr	w9, [x29, #24]
  412810:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  412814:	ldr	x8, [x8, #4064]
  412818:	sub	w19, w9, w22
  41281c:	cbz	x8, 412824 <wcrtomb@plt+0xdce4>
  412820:	blr	x8
  412824:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  412828:	add	x1, x1, #0xadd
  41282c:	mov	w2, #0x5                   	// #5
  412830:	mov	x0, xzr
  412834:	bl	404900 <dcgettext@plt>
  412838:	mov	x2, x0
  41283c:	mov	w0, wzr
  412840:	mov	w1, wzr
  412844:	mov	w3, w19
  412848:	mov	x4, x22
  41284c:	bl	403fa0 <error@plt>
  412850:	b	412980 <wcrtomb@plt+0xde40>
  412854:	cbz	w9, 41290c <wcrtomb@plt+0xddcc>
  412858:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41285c:	ldr	x8, [x8, #4064]
  412860:	cbz	x8, 412868 <wcrtomb@plt+0xdd28>
  412864:	blr	x8
  412868:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41286c:	add	x1, x1, #0xab3
  412870:	b	412964 <wcrtomb@plt+0xde24>
  412874:	ldr	x8, [x29, #24]
  412878:	mov	x23, x0
  41287c:	mov	x9, xzr
  412880:	b	412888 <wcrtomb@plt+0xdd48>
  412884:	add	x9, x9, #0x1
  412888:	ldrb	w10, [x8, x9]
  41288c:	cmp	w10, #0x20
  412890:	b.eq	412884 <wcrtomb@plt+0xdd44>  // b.none
  412894:	cmp	w10, #0x9
  412898:	b.eq	412884 <wcrtomb@plt+0xdd44>  // b.none
  41289c:	cbz	x9, 412914 <wcrtomb@plt+0xddd4>
  4128a0:	add	x22, x8, x9
  4128a4:	mov	w1, #0x3d                  	// #61
  4128a8:	mov	x0, x22
  4128ac:	bl	4047a0 <strchr@plt>
  4128b0:	cbz	x0, 412930 <wcrtomb@plt+0xddf0>
  4128b4:	add	x23, x25, x23
  4128b8:	mov	x24, x0
  4128bc:	cmp	x0, x23
  4128c0:	b.cs	412930 <wcrtomb@plt+0xddf0>  // b.hs, b.nlast
  4128c4:	ldurb	w8, [x23, #-1]
  4128c8:	cmp	w8, #0xa
  4128cc:	b.ne	41294c <wcrtomb@plt+0xde0c>  // b.any
  4128d0:	mov	x2, x24
  4128d4:	sub	x8, x23, x24
  4128d8:	sturb	wzr, [x23, #-1]
  4128dc:	strb	wzr, [x2], #1
  4128e0:	sub	x3, x8, #0x2
  4128e4:	mov	x0, x21
  4128e8:	mov	x1, x22
  4128ec:	blr	x20
  4128f0:	mov	w8, #0x3d                  	// #61
  4128f4:	mov	w9, #0xa                   	// #10
  4128f8:	mov	w0, #0x1                   	// #1
  4128fc:	strb	w8, [x24]
  412900:	sturb	w9, [x23, #-1]
  412904:	str	x23, [x19]
  412908:	b	412990 <wcrtomb@plt+0xde50>
  41290c:	mov	w0, wzr
  412910:	b	412990 <wcrtomb@plt+0xde50>
  412914:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  412918:	ldr	x8, [x8, #4064]
  41291c:	cbz	x8, 412924 <wcrtomb@plt+0xdde4>
  412920:	blr	x8
  412924:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  412928:	add	x1, x1, #0xb08
  41292c:	b	412964 <wcrtomb@plt+0xde24>
  412930:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  412934:	ldr	x8, [x8, #4064]
  412938:	cbz	x8, 412940 <wcrtomb@plt+0xde00>
  41293c:	blr	x8
  412940:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  412944:	add	x1, x1, #0xb3e
  412948:	b	412964 <wcrtomb@plt+0xde24>
  41294c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  412950:	ldr	x8, [x8, #4064]
  412954:	cbz	x8, 41295c <wcrtomb@plt+0xde1c>
  412958:	blr	x8
  41295c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  412960:	add	x1, x1, #0xb6c
  412964:	mov	w2, #0x5                   	// #5
  412968:	mov	x0, xzr
  41296c:	bl	404900 <dcgettext@plt>
  412970:	mov	x2, x0
  412974:	mov	w0, wzr
  412978:	mov	w1, wzr
  41297c:	bl	403fa0 <error@plt>
  412980:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  412984:	mov	w9, #0x2                   	// #2
  412988:	mov	w0, wzr
  41298c:	str	w9, [x8, #2416]
  412990:	ldp	x20, x19, [sp, #64]
  412994:	ldp	x22, x21, [sp, #48]
  412998:	ldp	x24, x23, [sp, #32]
  41299c:	ldr	x25, [sp, #16]
  4129a0:	ldp	x29, x30, [sp], #80
  4129a4:	ret
  4129a8:	stp	x29, x30, [sp, #-64]!
  4129ac:	stp	x24, x23, [sp, #16]
  4129b0:	stp	x22, x21, [sp, #32]
  4129b4:	stp	x20, x19, [sp, #48]
  4129b8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4129bc:	ldr	x23, [x8, #1072]
  4129c0:	mov	x20, x3
  4129c4:	mov	x21, x2
  4129c8:	mov	x19, x1
  4129cc:	mov	x22, x0
  4129d0:	mov	x29, sp
  4129d4:	cbz	x23, 4129f4 <wcrtomb@plt+0xdeb4>
  4129d8:	ldr	x0, [x23, #8]
  4129dc:	mov	x1, x19
  4129e0:	mov	w2, wzr
  4129e4:	bl	4047f0 <fnmatch@plt>
  4129e8:	cbz	w0, 412a9c <wcrtomb@plt+0xdf5c>
  4129ec:	ldr	x23, [x23]
  4129f0:	cbnz	x23, 4129d8 <wcrtomb@plt+0xde98>
  4129f4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4129f8:	ldr	x23, [x8, #1152]
  4129fc:	cbz	x23, 412a18 <wcrtomb@plt+0xded8>
  412a00:	ldr	x0, [x23, #8]
  412a04:	mov	x1, x19
  412a08:	bl	404660 <strcmp@plt>
  412a0c:	cbz	w0, 412a9c <wcrtomb@plt+0xdf5c>
  412a10:	ldr	x23, [x23]
  412a14:	cbnz	x23, 412a00 <wcrtomb@plt+0xdec0>
  412a18:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x144b0>
  412a1c:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0x154b0>
  412a20:	add	x23, x23, #0xe1f
  412a24:	add	x24, x24, #0x500
  412a28:	b	412a44 <wcrtomb@plt+0xdf04>
  412a2c:	mov	x0, x23
  412a30:	mov	x1, x19
  412a34:	bl	404660 <strcmp@plt>
  412a38:	cbz	w0, 412a68 <wcrtomb@plt+0xdf28>
  412a3c:	ldr	x23, [x24], #32
  412a40:	cbz	x23, 412a90 <wcrtomb@plt+0xdf50>
  412a44:	ldurb	w8, [x24, #-4]
  412a48:	cbz	w8, 412a2c <wcrtomb@plt+0xdeec>
  412a4c:	mov	x0, x23
  412a50:	bl	403f40 <strlen@plt>
  412a54:	mov	x2, x0
  412a58:	mov	x0, x23
  412a5c:	mov	x1, x19
  412a60:	bl	404300 <strncmp@plt>
  412a64:	cbnz	w0, 412a3c <wcrtomb@plt+0xdefc>
  412a68:	ldur	x4, [x24, #-16]
  412a6c:	mov	x0, x22
  412a70:	mov	x1, x19
  412a74:	mov	x2, x21
  412a78:	mov	x3, x20
  412a7c:	ldp	x20, x19, [sp, #48]
  412a80:	ldp	x22, x21, [sp, #32]
  412a84:	ldp	x24, x23, [sp, #16]
  412a88:	ldp	x29, x30, [sp], #64
  412a8c:	br	x4
  412a90:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  412a94:	ldrb	w8, [x8, #3722]
  412a98:	tbnz	w8, #1, 412ab0 <wcrtomb@plt+0xdf70>
  412a9c:	ldp	x20, x19, [sp, #48]
  412aa0:	ldp	x22, x21, [sp, #32]
  412aa4:	ldp	x24, x23, [sp, #16]
  412aa8:	ldp	x29, x30, [sp], #64
  412aac:	ret
  412ab0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  412ab4:	ldr	x8, [x8, #4064]
  412ab8:	cbz	x8, 412ac0 <wcrtomb@plt+0xdf80>
  412abc:	blr	x8
  412ac0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  412ac4:	add	x1, x1, #0xb97
  412ac8:	mov	w2, #0x5                   	// #5
  412acc:	mov	x0, xzr
  412ad0:	bl	404900 <dcgettext@plt>
  412ad4:	mov	x3, x19
  412ad8:	ldp	x20, x19, [sp, #48]
  412adc:	ldp	x22, x21, [sp, #32]
  412ae0:	ldp	x24, x23, [sp, #16]
  412ae4:	mov	x2, x0
  412ae8:	mov	w0, wzr
  412aec:	mov	w1, wzr
  412af0:	ldp	x29, x30, [sp], #64
  412af4:	b	403fa0 <error@plt>
  412af8:	sub	sp, sp, #0x40
  412afc:	stp	x29, x30, [sp, #16]
  412b00:	stp	x22, x21, [sp, #32]
  412b04:	stp	x20, x19, [sp, #48]
  412b08:	ldr	x8, [x0, #8]
  412b0c:	add	x29, sp, #0x10
  412b10:	cbz	x8, 412b7c <wcrtomb@plt+0xe03c>
  412b14:	ldr	x8, [x0, #16]
  412b18:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  412b1c:	ldr	x20, [x21, #1144]
  412b20:	mov	x19, x0
  412b24:	add	x8, x8, #0x200
  412b28:	str	x8, [sp, #8]
  412b2c:	cbz	x20, 412b50 <wcrtomb@plt+0xe010>
  412b30:	ldp	x22, x0, [x20]
  412b34:	bl	404700 <free@plt>
  412b38:	ldr	x0, [x20, #16]
  412b3c:	bl	404700 <free@plt>
  412b40:	mov	x0, x20
  412b44:	bl	404700 <free@plt>
  412b48:	mov	x20, x22
  412b4c:	cbnz	x22, 412b30 <wcrtomb@plt+0xdff0>
  412b50:	str	xzr, [x21, #1144]
  412b54:	adrp	x20, 412000 <wcrtomb@plt+0xd4c0>
  412b58:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  412b5c:	add	x20, x20, #0xb90
  412b60:	add	x21, x21, #0x478
  412b64:	add	x1, sp, #0x8
  412b68:	mov	x0, x19
  412b6c:	mov	x2, x20
  412b70:	mov	x3, x21
  412b74:	bl	412790 <wcrtomb@plt+0xdc50>
  412b78:	tbnz	w0, #0, 412b64 <wcrtomb@plt+0xe024>
  412b7c:	ldp	x20, x19, [sp, #48]
  412b80:	ldp	x22, x21, [sp, #32]
  412b84:	ldp	x29, x30, [sp, #16]
  412b88:	add	sp, sp, #0x40
  412b8c:	ret
  412b90:	stp	x29, x30, [sp, #-64]!
  412b94:	stp	x24, x23, [sp, #16]
  412b98:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x144b0>
  412b9c:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0x154b0>
  412ba0:	stp	x22, x21, [sp, #32]
  412ba4:	stp	x20, x19, [sp, #48]
  412ba8:	mov	x22, x3
  412bac:	mov	x20, x2
  412bb0:	mov	x21, x1
  412bb4:	mov	x19, x0
  412bb8:	add	x23, x23, #0xe1f
  412bbc:	add	x24, x24, #0x500
  412bc0:	mov	x29, sp
  412bc4:	b	412be0 <wcrtomb@plt+0xe0a0>
  412bc8:	mov	x0, x23
  412bcc:	mov	x1, x21
  412bd0:	bl	404660 <strcmp@plt>
  412bd4:	cbz	w0, 412c04 <wcrtomb@plt+0xe0c4>
  412bd8:	ldr	x23, [x24], #32
  412bdc:	cbz	x23, 412c0c <wcrtomb@plt+0xe0cc>
  412be0:	ldurb	w8, [x24, #-4]
  412be4:	cbz	w8, 412bc8 <wcrtomb@plt+0xe088>
  412be8:	mov	x0, x23
  412bec:	bl	403f40 <strlen@plt>
  412bf0:	mov	x2, x0
  412bf4:	mov	x0, x23
  412bf8:	mov	x1, x21
  412bfc:	bl	404300 <strncmp@plt>
  412c00:	cbnz	w0, 412bd8 <wcrtomb@plt+0xe098>
  412c04:	ldurb	w8, [x24, #-8]
  412c08:	tbnz	w8, #1, 412c34 <wcrtomb@plt+0xe0f4>
  412c0c:	mov	w0, #0x18                  	// #24
  412c10:	bl	4459e8 <argp_parse@@Base+0xe13c>
  412c14:	mov	x22, x0
  412c18:	mov	x0, x21
  412c1c:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  412c20:	str	x0, [x22, #8]
  412c24:	cbz	x20, 412c5c <wcrtomb@plt+0xe11c>
  412c28:	mov	x0, x20
  412c2c:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  412c30:	b	412c60 <wcrtomb@plt+0xe120>
  412c34:	ldur	x4, [x24, #-16]
  412c38:	mov	x0, x19
  412c3c:	mov	x1, x21
  412c40:	mov	x2, x20
  412c44:	mov	x3, x22
  412c48:	ldp	x20, x19, [sp, #48]
  412c4c:	ldp	x22, x21, [sp, #32]
  412c50:	ldp	x24, x23, [sp, #16]
  412c54:	ldp	x29, x30, [sp], #64
  412c58:	br	x4
  412c5c:	mov	x0, xzr
  412c60:	str	x0, [x22, #16]
  412c64:	ldr	x8, [x19]
  412c68:	str	x8, [x22]
  412c6c:	str	x22, [x19]
  412c70:	ldp	x20, x19, [sp, #48]
  412c74:	ldp	x22, x21, [sp, #32]
  412c78:	ldp	x24, x23, [sp, #16]
  412c7c:	ldp	x29, x30, [sp], #64
  412c80:	ret
  412c84:	stp	x29, x30, [sp, #-64]!
  412c88:	stp	x24, x23, [sp, #16]
  412c8c:	stp	x22, x21, [sp, #32]
  412c90:	stp	x20, x19, [sp, #48]
  412c94:	ldr	x8, [x1, #360]
  412c98:	mov	x29, sp
  412c9c:	cbz	x8, 412cb4 <wcrtomb@plt+0xe174>
  412ca0:	ldp	x20, x19, [sp, #48]
  412ca4:	ldp	x22, x21, [sp, #32]
  412ca8:	ldp	x24, x23, [sp, #16]
  412cac:	ldp	x29, x30, [sp], #64
  412cb0:	ret
  412cb4:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x144b0>
  412cb8:	adrp	x24, 45c000 <_obstack_memory_used@@Base+0x154b0>
  412cbc:	mov	x19, x2
  412cc0:	mov	x20, x1
  412cc4:	mov	x21, x0
  412cc8:	add	x22, x1, #0x158
  412ccc:	add	x23, x23, #0xe1f
  412cd0:	add	x24, x24, #0x500
  412cd4:	b	412cf0 <wcrtomb@plt+0xe1b0>
  412cd8:	mov	x0, x23
  412cdc:	mov	x1, x21
  412ce0:	bl	404660 <strcmp@plt>
  412ce4:	cbz	w0, 412d14 <wcrtomb@plt+0xe1d4>
  412ce8:	ldr	x23, [x24], #32
  412cec:	cbz	x23, 412ca0 <wcrtomb@plt+0xe160>
  412cf0:	ldurb	w8, [x24, #-4]
  412cf4:	cbz	w8, 412cd8 <wcrtomb@plt+0xe198>
  412cf8:	mov	x0, x23
  412cfc:	bl	403f40 <strlen@plt>
  412d00:	mov	x2, x0
  412d04:	mov	x0, x23
  412d08:	mov	x1, x21
  412d0c:	bl	404300 <strncmp@plt>
  412d10:	cbnz	w0, 412ce8 <wcrtomb@plt+0xe1a8>
  412d14:	ldur	x8, [x24, #-24]
  412d18:	cbz	x8, 412ca0 <wcrtomb@plt+0xe160>
  412d1c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  412d20:	ldr	x23, [x8, #1072]
  412d24:	cbz	x23, 412d44 <wcrtomb@plt+0xe204>
  412d28:	ldr	x0, [x23, #8]
  412d2c:	mov	x1, x21
  412d30:	mov	w2, wzr
  412d34:	bl	4047f0 <fnmatch@plt>
  412d38:	cbz	w0, 412ca0 <wcrtomb@plt+0xe160>
  412d3c:	ldr	x23, [x23]
  412d40:	cbnz	x23, 412d28 <wcrtomb@plt+0xe1e8>
  412d44:	ldr	x8, [x22]
  412d48:	cbnz	x8, 412d74 <wcrtomb@plt+0xe234>
  412d4c:	mov	w0, #0x58                  	// #88
  412d50:	bl	4459e8 <argp_parse@@Base+0xe13c>
  412d54:	adrp	x3, 445000 <argp_parse@@Base+0xd754>
  412d58:	adrp	x4, 404000 <sigprocmask@plt>
  412d5c:	add	x3, x3, #0x9e8
  412d60:	add	x4, x4, #0x700
  412d64:	mov	x1, xzr
  412d68:	mov	x2, xzr
  412d6c:	str	x0, [x22]
  412d70:	bl	4467e8 <_obstack_begin@@Base>
  412d74:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  412d78:	ldr	x23, [x8, #1152]
  412d7c:	cbz	x23, 412d98 <wcrtomb@plt+0xe258>
  412d80:	ldr	x0, [x23, #8]
  412d84:	mov	x1, x21
  412d88:	bl	404660 <strcmp@plt>
  412d8c:	cbz	w0, 412ca0 <wcrtomb@plt+0xe160>
  412d90:	ldr	x23, [x23]
  412d94:	cbnz	x23, 412d80 <wcrtomb@plt+0xe240>
  412d98:	ldur	x4, [x24, #-24]
  412d9c:	mov	x0, x20
  412da0:	mov	x1, x21
  412da4:	mov	x2, x22
  412da8:	mov	x3, x19
  412dac:	ldp	x20, x19, [sp, #48]
  412db0:	ldp	x22, x21, [sp, #32]
  412db4:	ldp	x24, x23, [sp, #16]
  412db8:	ldp	x29, x30, [sp], #64
  412dbc:	br	x4
  412dc0:	stp	x29, x30, [sp, #-64]!
  412dc4:	bic	x8, x2, x2, asr #63
  412dc8:	stp	x22, x21, [sp, #32]
  412dcc:	add	x22, x8, #0x200
  412dd0:	stp	x24, x23, [sp, #16]
  412dd4:	stp	x20, x19, [sp, #48]
  412dd8:	mov	x19, x0
  412ddc:	str	x22, [x0, #8]
  412de0:	add	x0, x8, #0x201
  412de4:	mov	x29, sp
  412de8:	mov	x20, x1
  412dec:	bl	4459e8 <argp_parse@@Base+0xe13c>
  412df0:	mov	x23, xzr
  412df4:	mov	w24, #0x200                 	// #512
  412df8:	str	x0, [x19, #16]
  412dfc:	strb	wzr, [x0, x22]
  412e00:	cmp	x22, #0x200
  412e04:	csel	x21, x22, x24, cc  // cc = lo, ul, last
  412e08:	cbz	x20, 412e54 <wcrtomb@plt+0xe314>
  412e0c:	ldr	x8, [x19, #16]
  412e10:	mov	x1, x20
  412e14:	mov	x2, x21
  412e18:	add	x0, x8, x23
  412e1c:	bl	403ec0 <memcpy@plt>
  412e20:	mov	x0, x20
  412e24:	bl	405670 <wcrtomb@plt+0xb30>
  412e28:	bl	40535c <wcrtomb@plt+0x81c>
  412e2c:	sub	x22, x22, x21
  412e30:	mov	x20, x0
  412e34:	cmp	x22, #0x0
  412e38:	add	x23, x21, x23
  412e3c:	b.gt	412e00 <wcrtomb@plt+0xe2c0>
  412e40:	ldp	x20, x19, [sp, #48]
  412e44:	ldp	x22, x21, [sp, #32]
  412e48:	ldp	x24, x23, [sp, #16]
  412e4c:	ldp	x29, x30, [sp], #64
  412e50:	ret
  412e54:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  412e58:	ldr	x8, [x8, #4064]
  412e5c:	cbz	x8, 412e64 <wcrtomb@plt+0xe324>
  412e60:	blr	x8
  412e64:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  412e68:	add	x1, x1, #0xcd8
  412e6c:	mov	w2, #0x5                   	// #5
  412e70:	mov	x0, xzr
  412e74:	bl	404900 <dcgettext@plt>
  412e78:	mov	x2, x0
  412e7c:	mov	w0, wzr
  412e80:	mov	w1, wzr
  412e84:	bl	403fa0 <error@plt>
  412e88:	bl	40e96c <wcrtomb@plt+0x9e2c>
  412e8c:	str	xzr, [x0, #24]
  412e90:	ret
  412e94:	stp	x29, x30, [sp, #-48]!
  412e98:	stp	x22, x21, [sp, #16]
  412e9c:	stp	x20, x19, [sp, #32]
  412ea0:	ldr	x8, [x0, #16]
  412ea4:	mov	x29, sp
  412ea8:	cbnz	x8, 412f4c <wcrtomb@plt+0xe40c>
  412eac:	ldr	x21, [x0]
  412eb0:	mov	x19, x0
  412eb4:	mov	x20, x1
  412eb8:	cbnz	x21, 412ee8 <wcrtomb@plt+0xe3a8>
  412ebc:	mov	w0, #0x58                  	// #88
  412ec0:	bl	4459e8 <argp_parse@@Base+0xe13c>
  412ec4:	adrp	x3, 445000 <argp_parse@@Base+0xd754>
  412ec8:	adrp	x4, 404000 <sigprocmask@plt>
  412ecc:	add	x3, x3, #0x9e8
  412ed0:	add	x4, x4, #0x700
  412ed4:	mov	x1, xzr
  412ed8:	mov	x2, xzr
  412edc:	str	x0, [x19]
  412ee0:	bl	4467e8 <_obstack_begin@@Base>
  412ee4:	ldr	x21, [x19]
  412ee8:	mov	x0, x20
  412eec:	bl	403f40 <strlen@plt>
  412ef0:	ldr	x8, [x19, #24]
  412ef4:	add	x8, x8, x0
  412ef8:	mov	x0, x20
  412efc:	str	x8, [x19, #24]
  412f00:	bl	403f40 <strlen@plt>
  412f04:	mov	x22, x0
  412f08:	ldp	x0, x8, [x21, #24]
  412f0c:	sub	x8, x8, x0
  412f10:	cmp	x8, x22
  412f14:	b.cs	412f28 <wcrtomb@plt+0xe3e8>  // b.hs, b.nlast
  412f18:	mov	x0, x21
  412f1c:	mov	x1, x22
  412f20:	bl	44693c <_obstack_newchunk@@Base>
  412f24:	ldr	x0, [x21, #24]
  412f28:	mov	x1, x20
  412f2c:	mov	x2, x22
  412f30:	bl	403ec0 <memcpy@plt>
  412f34:	ldr	x8, [x21, #24]
  412f38:	add	x8, x8, x22
  412f3c:	str	x8, [x21, #24]
  412f40:	ldr	x8, [x19, #8]
  412f44:	add	x8, x8, x22
  412f48:	str	x8, [x19, #8]
  412f4c:	ldp	x20, x19, [sp, #32]
  412f50:	ldp	x22, x21, [sp, #16]
  412f54:	ldp	x29, x30, [sp], #48
  412f58:	ret
  412f5c:	sub	sp, sp, #0x70
  412f60:	stp	x29, x30, [sp, #32]
  412f64:	stp	x24, x23, [sp, #64]
  412f68:	stp	x22, x21, [sp, #80]
  412f6c:	stp	x20, x19, [sp, #96]
  412f70:	ldr	x8, [x0, #16]
  412f74:	str	x25, [sp, #48]
  412f78:	add	x29, sp, #0x20
  412f7c:	cbz	x8, 412f88 <wcrtomb@plt+0xe448>
  412f80:	mov	w0, wzr
  412f84:	b	4130d8 <wcrtomb@plt+0xe598>
  412f88:	ldr	x8, [x0]
  412f8c:	mov	x20, x0
  412f90:	mov	x19, x1
  412f94:	cbnz	x8, 412fc0 <wcrtomb@plt+0xe480>
  412f98:	mov	w0, #0x58                  	// #88
  412f9c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  412fa0:	adrp	x3, 445000 <argp_parse@@Base+0xd754>
  412fa4:	adrp	x4, 404000 <sigprocmask@plt>
  412fa8:	add	x3, x3, #0x9e8
  412fac:	add	x4, x4, #0x700
  412fb0:	mov	x1, xzr
  412fb4:	mov	x2, xzr
  412fb8:	str	x0, [x20]
  412fbc:	bl	4467e8 <_obstack_begin@@Base>
  412fc0:	mov	x0, x19
  412fc4:	bl	403f40 <strlen@plt>
  412fc8:	ldr	x9, [x20, #24]
  412fcc:	add	x10, sp, #0x8
  412fd0:	mov	x8, xzr
  412fd4:	add	x24, x10, #0x14
  412fd8:	add	x9, x0, x9
  412fdc:	add	x23, x9, #0x3
  412fe0:	add	x0, x23, x8
  412fe4:	add	x1, sp, #0x8
  412fe8:	mov	x22, x8
  412fec:	bl	43d080 <argp_parse@@Base+0x57d4>
  412ff0:	sub	x8, x24, x0
  412ff4:	cmp	x8, x22
  412ff8:	b.ne	412fe0 <wcrtomb@plt+0xe4a0>  // b.any
  412ffc:	mov	x21, x0
  413000:	mov	x0, x19
  413004:	bl	403f40 <strlen@plt>
  413008:	ldr	x24, [x20]
  41300c:	add	x25, x0, x22
  413010:	add	x22, x25, #0x2
  413014:	ldp	x9, x8, [x24, #24]
  413018:	sub	x10, x8, x9
  41301c:	cmp	x10, x22
  413020:	b.cs	413040 <wcrtomb@plt+0xe500>  // b.hs, b.nlast
  413024:	mov	x0, x24
  413028:	mov	x1, x22
  41302c:	bl	44693c <_obstack_newchunk@@Base>
  413030:	ldr	x23, [x20]
  413034:	ldr	x9, [x24, #24]
  413038:	ldr	x8, [x23, #32]
  41303c:	b	413044 <wcrtomb@plt+0xe504>
  413040:	mov	x23, x24
  413044:	add	x9, x9, x22
  413048:	str	x9, [x24, #24]
  41304c:	ldr	x9, [x20, #8]
  413050:	add	x9, x9, x22
  413054:	str	x9, [x20, #8]
  413058:	ldr	x9, [x23, #24]
  41305c:	cmp	x8, x9
  413060:	b.ne	413074 <wcrtomb@plt+0xe534>  // b.any
  413064:	mov	w1, #0x1                   	// #1
  413068:	mov	x0, x23
  41306c:	bl	44693c <_obstack_newchunk@@Base>
  413070:	ldr	x9, [x23, #24]
  413074:	add	x8, x9, #0x1
  413078:	mov	w10, #0xa                   	// #10
  41307c:	str	x8, [x23, #24]
  413080:	strb	w10, [x9]
  413084:	ldp	x9, x8, [x20]
  413088:	ldr	x2, [x20, #24]
  41308c:	add	x8, x8, #0x1
  413090:	str	x8, [x20, #8]
  413094:	ldr	x8, [x9, #24]
  413098:	sub	x8, x8, x2
  41309c:	sub	x8, x8, x25
  4130a0:	sub	x20, x8, #0x3
  4130a4:	add	x0, x20, x22
  4130a8:	mov	x1, x20
  4130ac:	bl	403ed0 <memmove@plt>
  4130b0:	mov	x0, x20
  4130b4:	mov	x1, x21
  4130b8:	bl	404160 <stpcpy@plt>
  4130bc:	mov	w8, #0x20                  	// #32
  4130c0:	strb	w8, [x0], #1
  4130c4:	mov	x1, x19
  4130c8:	bl	404160 <stpcpy@plt>
  4130cc:	mov	w8, #0x3d                  	// #61
  4130d0:	strb	w8, [x0]
  4130d4:	mov	w0, #0x1                   	// #1
  4130d8:	ldp	x20, x19, [sp, #96]
  4130dc:	ldp	x22, x21, [sp, #80]
  4130e0:	ldp	x24, x23, [sp, #64]
  4130e4:	ldr	x25, [sp, #48]
  4130e8:	ldp	x29, x30, [sp, #32]
  4130ec:	add	sp, sp, #0x70
  4130f0:	ret
  4130f4:	sub	sp, sp, #0x50
  4130f8:	stp	x29, x30, [sp, #32]
  4130fc:	str	x21, [sp, #48]
  413100:	stp	x20, x19, [sp, #64]
  413104:	ldp	x8, x9, [x0, #216]
  413108:	mov	x19, x2
  41310c:	mov	x20, x1
  413110:	mov	x2, sp
  413114:	mov	x0, x8
  413118:	mov	x1, x9
  41311c:	add	x29, sp, #0x20
  413120:	bl	41b22c <wcrtomb@plt+0x166ec>
  413124:	mov	x21, x0
  413128:	bl	403f40 <strlen@plt>
  41312c:	mov	x3, x0
  413130:	mov	x0, x19
  413134:	mov	x1, x20
  413138:	mov	x2, x21
  41313c:	bl	4145b0 <wcrtomb@plt+0xfa70>
  413140:	ldp	x20, x19, [sp, #64]
  413144:	ldr	x21, [sp, #48]
  413148:	ldp	x29, x30, [sp, #32]
  41314c:	add	sp, sp, #0x50
  413150:	ret
  413154:	sub	sp, sp, #0x30
  413158:	mov	x8, x1
  41315c:	str	x19, [sp, #32]
  413160:	mov	x19, x0
  413164:	mov	x0, sp
  413168:	mov	x1, x2
  41316c:	mov	x2, x8
  413170:	stp	x29, x30, [sp, #16]
  413174:	add	x29, sp, #0x10
  413178:	bl	414894 <wcrtomb@plt+0xfd54>
  41317c:	tbz	w0, #0, 413188 <wcrtomb@plt+0xe648>
  413180:	ldr	q0, [sp]
  413184:	stur	q0, [x19, #216]
  413188:	ldr	x19, [sp, #32]
  41318c:	ldp	x29, x30, [sp, #16]
  413190:	add	sp, sp, #0x30
  413194:	ret
  413198:	ret
  41319c:	ret
  4131a0:	sub	sp, sp, #0x50
  4131a4:	stp	x29, x30, [sp, #32]
  4131a8:	str	x21, [sp, #48]
  4131ac:	stp	x20, x19, [sp, #64]
  4131b0:	ldp	x8, x9, [x0, #248]
  4131b4:	mov	x19, x2
  4131b8:	mov	x20, x1
  4131bc:	mov	x2, sp
  4131c0:	mov	x0, x8
  4131c4:	mov	x1, x9
  4131c8:	add	x29, sp, #0x20
  4131cc:	bl	41b22c <wcrtomb@plt+0x166ec>
  4131d0:	mov	x21, x0
  4131d4:	bl	403f40 <strlen@plt>
  4131d8:	mov	x3, x0
  4131dc:	mov	x0, x19
  4131e0:	mov	x1, x20
  4131e4:	mov	x2, x21
  4131e8:	bl	4145b0 <wcrtomb@plt+0xfa70>
  4131ec:	ldp	x20, x19, [sp, #64]
  4131f0:	ldr	x21, [sp, #48]
  4131f4:	ldp	x29, x30, [sp, #32]
  4131f8:	add	sp, sp, #0x50
  4131fc:	ret
  413200:	sub	sp, sp, #0x30
  413204:	mov	x8, x1
  413208:	str	x19, [sp, #32]
  41320c:	mov	x19, x0
  413210:	mov	x0, sp
  413214:	mov	x1, x2
  413218:	mov	x2, x8
  41321c:	stp	x29, x30, [sp, #16]
  413220:	add	x29, sp, #0x10
  413224:	bl	414894 <wcrtomb@plt+0xfd54>
  413228:	tbz	w0, #0, 413234 <wcrtomb@plt+0xe6f4>
  41322c:	ldr	q0, [sp]
  413230:	stur	q0, [x19, #248]
  413234:	ldr	x19, [sp, #32]
  413238:	ldp	x29, x30, [sp, #16]
  41323c:	add	sp, sp, #0x30
  413240:	ret
  413244:	sub	sp, sp, #0x50
  413248:	stp	x29, x30, [sp, #32]
  41324c:	stp	x20, x19, [sp, #64]
  413250:	ldr	w0, [x0, #116]
  413254:	mov	x19, x2
  413258:	mov	x20, x1
  41325c:	add	x3, sp, #0x8
  413260:	mov	w2, #0xffffffff            	// #-1
  413264:	mov	x1, xzr
  413268:	str	x21, [sp, #48]
  41326c:	add	x29, sp, #0x20
  413270:	bl	41b06c <wcrtomb@plt+0x1652c>
  413274:	mov	x21, x0
  413278:	bl	403f40 <strlen@plt>
  41327c:	mov	x3, x0
  413280:	mov	x0, x19
  413284:	mov	x1, x20
  413288:	mov	x2, x21
  41328c:	bl	4145b0 <wcrtomb@plt+0xfa70>
  413290:	ldp	x20, x19, [sp, #64]
  413294:	ldr	x21, [sp, #48]
  413298:	ldp	x29, x30, [sp, #32]
  41329c:	add	sp, sp, #0x50
  4132a0:	ret
  4132a4:	stp	x29, x30, [sp, #-32]!
  4132a8:	mov	x29, sp
  4132ac:	mov	x8, x2
  4132b0:	str	x19, [sp, #16]
  4132b4:	mov	x3, x1
  4132b8:	mov	x19, x0
  4132bc:	add	x0, x29, #0x18
  4132c0:	mov	w2, #0xffffffff            	// #-1
  4132c4:	mov	x1, x8
  4132c8:	bl	4149b0 <wcrtomb@plt+0xfe70>
  4132cc:	tbz	w0, #0, 4132d8 <wcrtomb@plt+0xe798>
  4132d0:	ldr	x8, [x29, #24]
  4132d4:	str	w8, [x19, #116]
  4132d8:	ldr	x19, [sp, #16]
  4132dc:	ldp	x29, x30, [sp], #32
  4132e0:	ret
  4132e4:	stp	x29, x30, [sp, #-48]!
  4132e8:	stp	x20, x19, [sp, #32]
  4132ec:	str	x21, [sp, #16]
  4132f0:	ldr	x21, [x0, #40]
  4132f4:	mov	x29, sp
  4132f8:	mov	x19, x2
  4132fc:	mov	x20, x1
  413300:	add	x2, x29, #0x18
  413304:	mov	w0, #0x1                   	// #1
  413308:	mov	x1, x21
  41330c:	bl	428760 <wcrtomb@plt+0x23c20>
  413310:	tbz	w0, #0, 41331c <wcrtomb@plt+0xe7dc>
  413314:	ldr	x21, [x29, #24]
  413318:	b	41332c <wcrtomb@plt+0xe7ec>
  41331c:	mov	x0, x21
  413320:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  413324:	mov	x21, x0
  413328:	str	x0, [x29, #24]
  41332c:	mov	x0, x21
  413330:	bl	403f40 <strlen@plt>
  413334:	mov	x3, x0
  413338:	mov	x0, x19
  41333c:	mov	x1, x20
  413340:	mov	x2, x21
  413344:	bl	4145b0 <wcrtomb@plt+0xfa70>
  413348:	ldr	x0, [x29, #24]
  41334c:	bl	404700 <free@plt>
  413350:	ldp	x20, x19, [sp, #32]
  413354:	ldr	x21, [sp, #16]
  413358:	ldp	x29, x30, [sp], #48
  41335c:	ret
  413360:	stp	x29, x30, [sp, #-32]!
  413364:	stp	x20, x19, [sp, #16]
  413368:	mov	x19, x0
  41336c:	ldr	x0, [x19, #40]!
  413370:	mov	x20, x2
  413374:	mov	x29, sp
  413378:	cbz	x0, 413384 <wcrtomb@plt+0xe844>
  41337c:	bl	404700 <free@plt>
  413380:	str	xzr, [x19]
  413384:	mov	w0, wzr
  413388:	mov	x1, x20
  41338c:	mov	x2, x19
  413390:	bl	428760 <wcrtomb@plt+0x23c20>
  413394:	tbz	w0, #0, 4133a4 <wcrtomb@plt+0xe864>
  413398:	ldp	x20, x19, [sp, #16]
  41339c:	ldp	x29, x30, [sp], #32
  4133a0:	ret
  4133a4:	mov	x0, x19
  4133a8:	mov	x1, x20
  4133ac:	ldp	x20, x19, [sp, #16]
  4133b0:	ldp	x29, x30, [sp], #32
  4133b4:	b	41aa28 <wcrtomb@plt+0x15ee8>
  4133b8:	stp	x29, x30, [sp, #-48]!
  4133bc:	stp	x20, x19, [sp, #32]
  4133c0:	str	x21, [sp, #16]
  4133c4:	ldr	x21, [x0, #24]
  4133c8:	mov	x29, sp
  4133cc:	mov	x19, x2
  4133d0:	mov	x20, x1
  4133d4:	add	x2, x29, #0x18
  4133d8:	mov	w0, #0x1                   	// #1
  4133dc:	mov	x1, x21
  4133e0:	bl	428760 <wcrtomb@plt+0x23c20>
  4133e4:	tbz	w0, #0, 4133f0 <wcrtomb@plt+0xe8b0>
  4133e8:	ldr	x21, [x29, #24]
  4133ec:	b	413400 <wcrtomb@plt+0xe8c0>
  4133f0:	mov	x0, x21
  4133f4:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4133f8:	mov	x21, x0
  4133fc:	str	x0, [x29, #24]
  413400:	mov	x0, x21
  413404:	bl	403f40 <strlen@plt>
  413408:	mov	x3, x0
  41340c:	mov	x0, x19
  413410:	mov	x1, x20
  413414:	mov	x2, x21
  413418:	bl	4145b0 <wcrtomb@plt+0xfa70>
  41341c:	ldr	x0, [x29, #24]
  413420:	bl	404700 <free@plt>
  413424:	ldp	x20, x19, [sp, #32]
  413428:	ldr	x21, [sp, #16]
  41342c:	ldp	x29, x30, [sp], #48
  413430:	ret
  413434:	stp	x29, x30, [sp, #-32]!
  413438:	stp	x20, x19, [sp, #16]
  41343c:	mov	x19, x0
  413440:	ldr	x0, [x19, #24]!
  413444:	mov	x20, x2
  413448:	mov	x29, sp
  41344c:	cbz	x0, 413458 <wcrtomb@plt+0xe918>
  413450:	bl	404700 <free@plt>
  413454:	str	xzr, [x19]
  413458:	mov	w0, wzr
  41345c:	mov	x1, x20
  413460:	mov	x2, x19
  413464:	bl	428760 <wcrtomb@plt+0x23c20>
  413468:	tbz	w0, #0, 413478 <wcrtomb@plt+0xe938>
  41346c:	ldp	x20, x19, [sp, #16]
  413470:	ldp	x29, x30, [sp], #32
  413474:	ret
  413478:	mov	x0, x19
  41347c:	mov	x1, x20
  413480:	ldp	x20, x19, [sp, #16]
  413484:	ldp	x29, x30, [sp], #32
  413488:	b	41aa28 <wcrtomb@plt+0x15ee8>
  41348c:	sub	sp, sp, #0x50
  413490:	add	x8, x3, #0x8
  413494:	add	x10, x0, #0xf0
  413498:	cmp	x3, #0x0
  41349c:	stp	x29, x30, [sp, #32]
  4134a0:	stp	x20, x19, [sp, #64]
  4134a4:	add	x9, x0, #0xe8
  4134a8:	csel	x8, x10, x8, eq  // eq = none
  4134ac:	csel	x9, x9, x3, eq  // eq = none
  4134b0:	ldr	x8, [x8]
  4134b4:	ldr	x0, [x9]
  4134b8:	mov	x19, x2
  4134bc:	mov	x20, x1
  4134c0:	mov	x2, sp
  4134c4:	mov	x1, x8
  4134c8:	str	x21, [sp, #48]
  4134cc:	add	x29, sp, #0x20
  4134d0:	bl	41b22c <wcrtomb@plt+0x166ec>
  4134d4:	mov	x21, x0
  4134d8:	bl	403f40 <strlen@plt>
  4134dc:	mov	x3, x0
  4134e0:	mov	x0, x19
  4134e4:	mov	x1, x20
  4134e8:	mov	x2, x21
  4134ec:	bl	4145b0 <wcrtomb@plt+0xfa70>
  4134f0:	ldp	x20, x19, [sp, #64]
  4134f4:	ldr	x21, [sp, #48]
  4134f8:	ldp	x29, x30, [sp, #32]
  4134fc:	add	sp, sp, #0x50
  413500:	ret
  413504:	sub	sp, sp, #0x30
  413508:	mov	x8, x1
  41350c:	str	x19, [sp, #32]
  413510:	mov	x19, x0
  413514:	mov	x0, sp
  413518:	mov	x1, x2
  41351c:	mov	x2, x8
  413520:	stp	x29, x30, [sp, #16]
  413524:	add	x29, sp, #0x10
  413528:	bl	414894 <wcrtomb@plt+0xfd54>
  41352c:	tbz	w0, #0, 413538 <wcrtomb@plt+0xe9f8>
  413530:	ldr	q0, [sp]
  413534:	stur	q0, [x19, #232]
  413538:	ldr	x19, [sp, #32]
  41353c:	ldp	x29, x30, [sp, #16]
  413540:	add	sp, sp, #0x30
  413544:	ret
  413548:	stp	x29, x30, [sp, #-48]!
  41354c:	stp	x20, x19, [sp, #32]
  413550:	str	x21, [sp, #16]
  413554:	ldr	x21, [x0, #8]
  413558:	mov	x29, sp
  41355c:	mov	x19, x2
  413560:	mov	x20, x1
  413564:	add	x2, x29, #0x18
  413568:	mov	w0, #0x1                   	// #1
  41356c:	mov	x1, x21
  413570:	bl	428760 <wcrtomb@plt+0x23c20>
  413574:	tbz	w0, #0, 413580 <wcrtomb@plt+0xea40>
  413578:	ldr	x21, [x29, #24]
  41357c:	b	413590 <wcrtomb@plt+0xea50>
  413580:	mov	x0, x21
  413584:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  413588:	mov	x21, x0
  41358c:	str	x0, [x29, #24]
  413590:	mov	x0, x21
  413594:	bl	403f40 <strlen@plt>
  413598:	mov	x3, x0
  41359c:	mov	x0, x19
  4135a0:	mov	x1, x20
  4135a4:	mov	x2, x21
  4135a8:	bl	4145b0 <wcrtomb@plt+0xfa70>
  4135ac:	ldr	x0, [x29, #24]
  4135b0:	bl	404700 <free@plt>
  4135b4:	ldp	x20, x19, [sp, #32]
  4135b8:	ldr	x21, [sp, #16]
  4135bc:	ldp	x29, x30, [sp], #48
  4135c0:	ret
  4135c4:	stp	x29, x30, [sp, #-48]!
  4135c8:	stp	x20, x19, [sp, #32]
  4135cc:	ldrb	w8, [x0, #321]
  4135d0:	str	x21, [sp, #16]
  4135d4:	mov	x29, sp
  4135d8:	cbnz	w8, 413658 <wcrtomb@plt+0xeb18>
  4135dc:	mov	x19, x0
  4135e0:	ldr	x0, [x0]
  4135e4:	mov	x20, x2
  4135e8:	cbz	x0, 4135f4 <wcrtomb@plt+0xeab4>
  4135ec:	bl	404700 <free@plt>
  4135f0:	str	xzr, [x19]
  4135f4:	mov	w0, wzr
  4135f8:	mov	x1, x20
  4135fc:	mov	x2, x19
  413600:	bl	428760 <wcrtomb@plt+0x23c20>
  413604:	tbnz	w0, #0, 413614 <wcrtomb@plt+0xead4>
  413608:	mov	x0, x19
  41360c:	mov	x1, x20
  413610:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  413614:	mov	x21, x19
  413618:	ldr	x0, [x21, #8]!
  41361c:	cbz	x0, 413628 <wcrtomb@plt+0xeae8>
  413620:	bl	404700 <free@plt>
  413624:	str	xzr, [x21]
  413628:	mov	w0, wzr
  41362c:	mov	x1, x20
  413630:	mov	x2, x21
  413634:	bl	428760 <wcrtomb@plt+0x23c20>
  413638:	tbnz	w0, #0, 413648 <wcrtomb@plt+0xeb08>
  41363c:	mov	x0, x21
  413640:	mov	x1, x20
  413644:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  413648:	ldr	x0, [x19, #8]
  41364c:	bl	4392ec <argp_parse@@Base+0x1a40>
  413650:	and	w8, w0, #0x1
  413654:	strb	w8, [x19, #16]
  413658:	ldp	x20, x19, [sp, #32]
  41365c:	ldr	x21, [sp, #16]
  413660:	ldp	x29, x30, [sp], #48
  413664:	ret
  413668:	sub	sp, sp, #0x50
  41366c:	stp	x29, x30, [sp, #32]
  413670:	stp	x20, x19, [sp, #64]
  413674:	ldr	x0, [x0, #136]
  413678:	mov	x19, x2
  41367c:	mov	x20, x1
  413680:	add	x3, sp, #0x8
  413684:	mov	x2, #0xffffffffffffffff    	// #-1
  413688:	mov	x1, xzr
  41368c:	str	x21, [sp, #48]
  413690:	add	x29, sp, #0x20
  413694:	bl	41b06c <wcrtomb@plt+0x1652c>
  413698:	mov	x21, x0
  41369c:	bl	403f40 <strlen@plt>
  4136a0:	mov	x3, x0
  4136a4:	mov	x0, x19
  4136a8:	mov	x1, x20
  4136ac:	mov	x2, x21
  4136b0:	bl	4145b0 <wcrtomb@plt+0xfa70>
  4136b4:	ldp	x20, x19, [sp, #64]
  4136b8:	ldr	x21, [sp, #48]
  4136bc:	ldp	x29, x30, [sp, #32]
  4136c0:	add	sp, sp, #0x50
  4136c4:	ret
  4136c8:	stp	x29, x30, [sp, #-32]!
  4136cc:	mov	x29, sp
  4136d0:	mov	x8, x2
  4136d4:	str	x19, [sp, #16]
  4136d8:	mov	x3, x1
  4136dc:	mov	x19, x0
  4136e0:	add	x0, x29, #0x18
  4136e4:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  4136e8:	mov	x1, x8
  4136ec:	bl	4149b0 <wcrtomb@plt+0xfe70>
  4136f0:	tbz	w0, #0, 4136fc <wcrtomb@plt+0xebbc>
  4136f4:	ldr	x8, [x29, #24]
  4136f8:	str	x8, [x19, #136]
  4136fc:	ldr	x19, [sp, #16]
  413700:	ldp	x29, x30, [sp], #32
  413704:	ret
  413708:	sub	sp, sp, #0x50
  41370c:	stp	x29, x30, [sp, #32]
  413710:	stp	x20, x19, [sp, #64]
  413714:	ldr	w0, [x0, #112]
  413718:	mov	x19, x2
  41371c:	mov	x20, x1
  413720:	add	x3, sp, #0x8
  413724:	mov	w2, #0xffffffff            	// #-1
  413728:	mov	x1, xzr
  41372c:	str	x21, [sp, #48]
  413730:	add	x29, sp, #0x20
  413734:	bl	41b06c <wcrtomb@plt+0x1652c>
  413738:	mov	x21, x0
  41373c:	bl	403f40 <strlen@plt>
  413740:	mov	x3, x0
  413744:	mov	x0, x19
  413748:	mov	x1, x20
  41374c:	mov	x2, x21
  413750:	bl	4145b0 <wcrtomb@plt+0xfa70>
  413754:	ldp	x20, x19, [sp, #64]
  413758:	ldr	x21, [sp, #48]
  41375c:	ldp	x29, x30, [sp, #32]
  413760:	add	sp, sp, #0x50
  413764:	ret
  413768:	stp	x29, x30, [sp, #-32]!
  41376c:	mov	x29, sp
  413770:	mov	x8, x2
  413774:	str	x19, [sp, #16]
  413778:	mov	x3, x1
  41377c:	mov	x19, x0
  413780:	add	x0, x29, #0x18
  413784:	mov	w2, #0xffffffff            	// #-1
  413788:	mov	x1, x8
  41378c:	bl	4149b0 <wcrtomb@plt+0xfe70>
  413790:	tbz	w0, #0, 41379c <wcrtomb@plt+0xec5c>
  413794:	ldr	x8, [x29, #24]
  413798:	str	w8, [x19, #112]
  41379c:	ldr	x19, [sp, #16]
  4137a0:	ldp	x29, x30, [sp], #32
  4137a4:	ret
  4137a8:	stp	x29, x30, [sp, #-48]!
  4137ac:	stp	x20, x19, [sp, #32]
  4137b0:	str	x21, [sp, #16]
  4137b4:	ldr	x21, [x0, #32]
  4137b8:	mov	x29, sp
  4137bc:	mov	x19, x2
  4137c0:	mov	x20, x1
  4137c4:	add	x2, x29, #0x18
  4137c8:	mov	w0, #0x1                   	// #1
  4137cc:	mov	x1, x21
  4137d0:	bl	428760 <wcrtomb@plt+0x23c20>
  4137d4:	tbz	w0, #0, 4137e0 <wcrtomb@plt+0xeca0>
  4137d8:	ldr	x21, [x29, #24]
  4137dc:	b	4137f0 <wcrtomb@plt+0xecb0>
  4137e0:	mov	x0, x21
  4137e4:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4137e8:	mov	x21, x0
  4137ec:	str	x0, [x29, #24]
  4137f0:	mov	x0, x21
  4137f4:	bl	403f40 <strlen@plt>
  4137f8:	mov	x3, x0
  4137fc:	mov	x0, x19
  413800:	mov	x1, x20
  413804:	mov	x2, x21
  413808:	bl	4145b0 <wcrtomb@plt+0xfa70>
  41380c:	ldr	x0, [x29, #24]
  413810:	bl	404700 <free@plt>
  413814:	ldp	x20, x19, [sp, #32]
  413818:	ldr	x21, [sp, #16]
  41381c:	ldp	x29, x30, [sp], #48
  413820:	ret
  413824:	stp	x29, x30, [sp, #-32]!
  413828:	stp	x20, x19, [sp, #16]
  41382c:	mov	x19, x0
  413830:	ldr	x0, [x19, #32]!
  413834:	mov	x20, x2
  413838:	mov	x29, sp
  41383c:	cbz	x0, 413848 <wcrtomb@plt+0xed08>
  413840:	bl	404700 <free@plt>
  413844:	str	xzr, [x19]
  413848:	mov	w0, wzr
  41384c:	mov	x1, x20
  413850:	mov	x2, x19
  413854:	bl	428760 <wcrtomb@plt+0x23c20>
  413858:	tbz	w0, #0, 413868 <wcrtomb@plt+0xed28>
  41385c:	ldp	x20, x19, [sp, #16]
  413860:	ldp	x29, x30, [sp], #32
  413864:	ret
  413868:	mov	x0, x19
  41386c:	mov	x1, x20
  413870:	ldp	x20, x19, [sp, #16]
  413874:	ldp	x29, x30, [sp], #32
  413878:	b	41aa28 <wcrtomb@plt+0x15ee8>
  41387c:	stp	x29, x30, [sp, #-48]!
  413880:	stp	x20, x19, [sp, #32]
  413884:	mov	x19, x0
  413888:	ldr	x0, [x0]
  41388c:	mov	x20, x2
  413890:	mov	w8, #0x1                   	// #1
  413894:	str	x21, [sp, #16]
  413898:	mov	x29, sp
  41389c:	strb	w8, [x19, #321]
  4138a0:	cbz	x0, 4138ac <wcrtomb@plt+0xed6c>
  4138a4:	bl	404700 <free@plt>
  4138a8:	str	xzr, [x19]
  4138ac:	mov	w0, wzr
  4138b0:	mov	x1, x20
  4138b4:	mov	x2, x19
  4138b8:	bl	428760 <wcrtomb@plt+0x23c20>
  4138bc:	tbnz	w0, #0, 4138cc <wcrtomb@plt+0xed8c>
  4138c0:	mov	x0, x19
  4138c4:	mov	x1, x20
  4138c8:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  4138cc:	mov	x21, x19
  4138d0:	ldr	x0, [x21, #8]!
  4138d4:	cbz	x0, 4138e0 <wcrtomb@plt+0xeda0>
  4138d8:	bl	404700 <free@plt>
  4138dc:	str	xzr, [x21]
  4138e0:	mov	w0, wzr
  4138e4:	mov	x1, x20
  4138e8:	mov	x2, x21
  4138ec:	bl	428760 <wcrtomb@plt+0x23c20>
  4138f0:	tbnz	w0, #0, 413900 <wcrtomb@plt+0xedc0>
  4138f4:	mov	x0, x21
  4138f8:	mov	x1, x20
  4138fc:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  413900:	ldr	x0, [x19, #8]
  413904:	bl	4392ec <argp_parse@@Base+0x1a40>
  413908:	and	w8, w0, #0x1
  41390c:	strb	w8, [x19, #16]
  413910:	ldp	x20, x19, [sp, #32]
  413914:	ldr	x21, [sp, #16]
  413918:	ldp	x29, x30, [sp], #48
  41391c:	ret
  413920:	sub	sp, sp, #0x50
  413924:	stp	x29, x30, [sp, #32]
  413928:	stp	x20, x19, [sp, #64]
  41392c:	ldr	w0, [x0, #276]
  413930:	mov	x19, x2
  413934:	mov	x20, x1
  413938:	add	x3, sp, #0x8
  41393c:	mov	x2, #0xffffffffffffffff    	// #-1
  413940:	mov	x1, xzr
  413944:	str	x21, [sp, #48]
  413948:	add	x29, sp, #0x20
  41394c:	bl	41b06c <wcrtomb@plt+0x1652c>
  413950:	mov	x21, x0
  413954:	bl	403f40 <strlen@plt>
  413958:	mov	x3, x0
  41395c:	mov	x0, x19
  413960:	mov	x1, x20
  413964:	mov	x2, x21
  413968:	bl	4145b0 <wcrtomb@plt+0xfa70>
  41396c:	ldp	x20, x19, [sp, #64]
  413970:	ldr	x21, [sp, #48]
  413974:	ldp	x29, x30, [sp, #32]
  413978:	add	sp, sp, #0x50
  41397c:	ret
  413980:	stp	x29, x30, [sp, #-32]!
  413984:	mov	x29, sp
  413988:	mov	x8, x2
  41398c:	str	x19, [sp, #16]
  413990:	mov	x3, x1
  413994:	mov	x19, x0
  413998:	add	x0, x29, #0x18
  41399c:	mov	w2, #0xffffffff            	// #-1
  4139a0:	mov	x1, x8
  4139a4:	bl	4149b0 <wcrtomb@plt+0xfe70>
  4139a8:	tbz	w0, #0, 4139b4 <wcrtomb@plt+0xee74>
  4139ac:	ldr	x8, [x29, #24]
  4139b0:	str	w8, [x19, #276]
  4139b4:	ldr	x19, [sp, #16]
  4139b8:	ldp	x29, x30, [sp], #32
  4139bc:	ret
  4139c0:	sub	sp, sp, #0x50
  4139c4:	stp	x29, x30, [sp, #32]
  4139c8:	stp	x20, x19, [sp, #64]
  4139cc:	ldr	w0, [x0, #280]
  4139d0:	mov	x19, x2
  4139d4:	mov	x20, x1
  4139d8:	add	x3, sp, #0x8
  4139dc:	mov	x2, #0xffffffffffffffff    	// #-1
  4139e0:	mov	x1, xzr
  4139e4:	str	x21, [sp, #48]
  4139e8:	add	x29, sp, #0x20
  4139ec:	bl	41b06c <wcrtomb@plt+0x1652c>
  4139f0:	mov	x21, x0
  4139f4:	bl	403f40 <strlen@plt>
  4139f8:	mov	x3, x0
  4139fc:	mov	x0, x19
  413a00:	mov	x1, x20
  413a04:	mov	x2, x21
  413a08:	bl	4145b0 <wcrtomb@plt+0xfa70>
  413a0c:	ldp	x20, x19, [sp, #64]
  413a10:	ldr	x21, [sp, #48]
  413a14:	ldp	x29, x30, [sp, #32]
  413a18:	add	sp, sp, #0x50
  413a1c:	ret
  413a20:	stp	x29, x30, [sp, #-32]!
  413a24:	mov	x29, sp
  413a28:	mov	x8, x2
  413a2c:	str	x19, [sp, #16]
  413a30:	mov	x3, x1
  413a34:	mov	x19, x0
  413a38:	add	x0, x29, #0x18
  413a3c:	mov	w2, #0xffffffff            	// #-1
  413a40:	mov	x1, x8
  413a44:	bl	4149b0 <wcrtomb@plt+0xfe70>
  413a48:	tbz	w0, #0, 413a54 <wcrtomb@plt+0xef14>
  413a4c:	ldr	x8, [x29, #24]
  413a50:	str	w8, [x19, #280]
  413a54:	ldr	x19, [sp, #16]
  413a58:	ldp	x29, x30, [sp], #32
  413a5c:	ret
  413a60:	sub	sp, sp, #0x50
  413a64:	stp	x29, x30, [sp, #32]
  413a68:	stp	x20, x19, [sp, #64]
  413a6c:	ldr	x0, [x0, #136]
  413a70:	mov	x19, x2
  413a74:	mov	x20, x1
  413a78:	add	x3, sp, #0x8
  413a7c:	mov	x2, #0xffffffffffffffff    	// #-1
  413a80:	mov	x1, xzr
  413a84:	str	x21, [sp, #48]
  413a88:	add	x29, sp, #0x20
  413a8c:	bl	41b06c <wcrtomb@plt+0x1652c>
  413a90:	mov	x21, x0
  413a94:	bl	403f40 <strlen@plt>
  413a98:	mov	x3, x0
  413a9c:	mov	x0, x19
  413aa0:	mov	x1, x20
  413aa4:	mov	x2, x21
  413aa8:	bl	4145b0 <wcrtomb@plt+0xfa70>
  413aac:	ldp	x20, x19, [sp, #64]
  413ab0:	ldr	x21, [sp, #48]
  413ab4:	ldp	x29, x30, [sp, #32]
  413ab8:	add	sp, sp, #0x50
  413abc:	ret
  413ac0:	stp	x29, x30, [sp, #-32]!
  413ac4:	mov	x29, sp
  413ac8:	mov	x8, x2
  413acc:	str	x19, [sp, #16]
  413ad0:	mov	x3, x1
  413ad4:	mov	x19, x0
  413ad8:	add	x0, x29, #0x18
  413adc:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  413ae0:	mov	x1, x8
  413ae4:	bl	4149b0 <wcrtomb@plt+0xfe70>
  413ae8:	tbz	w0, #0, 413afc <wcrtomb@plt+0xefbc>
  413aec:	ldr	x8, [x29, #24]
  413af0:	mov	w9, #0x1                   	// #1
  413af4:	strb	w9, [x19, #320]
  413af8:	str	x8, [x19, #312]
  413afc:	ldr	x19, [sp, #16]
  413b00:	ldp	x29, x30, [sp], #32
  413b04:	ret
  413b08:	sub	sp, sp, #0x50
  413b0c:	stp	x29, x30, [sp, #32]
  413b10:	stp	x20, x19, [sp, #64]
  413b14:	ldr	x0, [x0, #288]
  413b18:	mov	x19, x2
  413b1c:	mov	x20, x1
  413b20:	add	x3, sp, #0x8
  413b24:	mov	x2, #0xffffffffffffffff    	// #-1
  413b28:	mov	x1, xzr
  413b2c:	str	x21, [sp, #48]
  413b30:	add	x29, sp, #0x20
  413b34:	bl	41b06c <wcrtomb@plt+0x1652c>
  413b38:	mov	x21, x0
  413b3c:	bl	403f40 <strlen@plt>
  413b40:	mov	x3, x0
  413b44:	mov	x0, x19
  413b48:	mov	x1, x20
  413b4c:	mov	x2, x21
  413b50:	bl	4145b0 <wcrtomb@plt+0xfa70>
  413b54:	ldp	x20, x19, [sp, #64]
  413b58:	ldr	x21, [sp, #48]
  413b5c:	ldp	x29, x30, [sp, #32]
  413b60:	add	sp, sp, #0x50
  413b64:	ret
  413b68:	stp	x29, x30, [sp, #-32]!
  413b6c:	mov	x29, sp
  413b70:	mov	x8, x2
  413b74:	str	x19, [sp, #16]
  413b78:	mov	x3, x1
  413b7c:	mov	x19, x0
  413b80:	add	x0, x29, #0x18
  413b84:	mov	x2, #0xffffffffffffffff    	// #-1
  413b88:	mov	x1, x8
  413b8c:	bl	4149b0 <wcrtomb@plt+0xfe70>
  413b90:	tbz	w0, #0, 413bac <wcrtomb@plt+0xf06c>
  413b94:	ldr	x0, [x29, #24]
  413b98:	mov	w1, #0x10                  	// #16
  413b9c:	str	x0, [x19, #296]
  413ba0:	bl	445c24 <argp_parse@@Base+0xe378>
  413ba4:	str	x0, [x19, #304]
  413ba8:	str	xzr, [x19, #288]
  413bac:	ldr	x19, [sp, #16]
  413bb0:	ldp	x29, x30, [sp], #32
  413bb4:	ret
  413bb8:	sub	sp, sp, #0x50
  413bbc:	stp	x29, x30, [sp, #32]
  413bc0:	stp	x20, x19, [sp, #64]
  413bc4:	ldr	x8, [x3]
  413bc8:	ldr	x9, [x0, #304]
  413bcc:	mov	x19, x2
  413bd0:	mov	x20, x1
  413bd4:	lsl	x8, x8, #4
  413bd8:	ldr	x0, [x9, x8]
  413bdc:	add	x3, sp, #0x8
  413be0:	mov	x2, #0xffffffffffffffff    	// #-1
  413be4:	mov	x1, xzr
  413be8:	str	x21, [sp, #48]
  413bec:	add	x29, sp, #0x20
  413bf0:	bl	41b06c <wcrtomb@plt+0x1652c>
  413bf4:	mov	x21, x0
  413bf8:	bl	403f40 <strlen@plt>
  413bfc:	mov	x3, x0
  413c00:	mov	x0, x19
  413c04:	mov	x1, x20
  413c08:	mov	x2, x21
  413c0c:	bl	4145b0 <wcrtomb@plt+0xfa70>
  413c10:	ldp	x20, x19, [sp, #64]
  413c14:	ldr	x21, [sp, #48]
  413c18:	ldp	x29, x30, [sp, #32]
  413c1c:	add	sp, sp, #0x50
  413c20:	ret
  413c24:	sub	sp, sp, #0x30
  413c28:	stp	x20, x19, [sp, #32]
  413c2c:	mov	x19, x2
  413c30:	mov	x3, x1
  413c34:	mov	x20, x0
  413c38:	add	x0, sp, #0x8
  413c3c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  413c40:	mov	x1, x19
  413c44:	stp	x29, x30, [sp, #16]
  413c48:	add	x29, sp, #0x10
  413c4c:	bl	4149b0 <wcrtomb@plt+0xfe70>
  413c50:	tbz	w0, #0, 413cc0 <wcrtomb@plt+0xf180>
  413c54:	ldp	x8, x9, [x20, #288]
  413c58:	cmp	x8, x9
  413c5c:	b.cs	413c74 <wcrtomb@plt+0xf134>  // b.hs, b.nlast
  413c60:	ldr	x9, [sp, #8]
  413c64:	ldr	x10, [x20, #304]
  413c68:	lsl	x8, x8, #4
  413c6c:	str	x9, [x10, x8]
  413c70:	b	413cc0 <wcrtomb@plt+0xf180>
  413c74:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  413c78:	ldr	x8, [x8, #4064]
  413c7c:	cbz	x8, 413c84 <wcrtomb@plt+0xf144>
  413c80:	blr	x8
  413c84:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  413c88:	add	x1, x1, #0xc1b
  413c8c:	mov	w2, #0x5                   	// #5
  413c90:	mov	x0, xzr
  413c94:	bl	404900 <dcgettext@plt>
  413c98:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x154b0>
  413c9c:	mov	x2, x0
  413ca0:	add	x3, x3, #0x9a6
  413ca4:	mov	w0, wzr
  413ca8:	mov	w1, wzr
  413cac:	mov	x4, x19
  413cb0:	bl	403fa0 <error@plt>
  413cb4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  413cb8:	mov	w9, #0x2                   	// #2
  413cbc:	str	w9, [x8, #2416]
  413cc0:	ldp	x20, x19, [sp, #32]
  413cc4:	ldp	x29, x30, [sp, #16]
  413cc8:	add	sp, sp, #0x30
  413ccc:	ret
  413cd0:	sub	sp, sp, #0x50
  413cd4:	stp	x29, x30, [sp, #32]
  413cd8:	stp	x20, x19, [sp, #64]
  413cdc:	ldr	x8, [x0, #304]
  413ce0:	ldr	x9, [x3]
  413ce4:	mov	x19, x2
  413ce8:	mov	x20, x1
  413cec:	add	x3, sp, #0x8
  413cf0:	add	x8, x8, x9, lsl #4
  413cf4:	ldr	x0, [x8, #8]
  413cf8:	mov	x2, #0xffffffffffffffff    	// #-1
  413cfc:	mov	x1, xzr
  413d00:	str	x21, [sp, #48]
  413d04:	add	x29, sp, #0x20
  413d08:	bl	41b06c <wcrtomb@plt+0x1652c>
  413d0c:	mov	x21, x0
  413d10:	bl	403f40 <strlen@plt>
  413d14:	mov	x3, x0
  413d18:	mov	x0, x19
  413d1c:	mov	x1, x20
  413d20:	mov	x2, x21
  413d24:	bl	4145b0 <wcrtomb@plt+0xfa70>
  413d28:	ldp	x20, x19, [sp, #64]
  413d2c:	ldr	x21, [sp, #48]
  413d30:	ldp	x29, x30, [sp, #32]
  413d34:	add	sp, sp, #0x50
  413d38:	ret
  413d3c:	stp	x29, x30, [sp, #-48]!
  413d40:	stp	x20, x19, [sp, #32]
  413d44:	mov	x29, sp
  413d48:	mov	x19, x2
  413d4c:	mov	x20, x1
  413d50:	str	x21, [sp, #16]
  413d54:	mov	x21, x0
  413d58:	add	x0, x29, #0x18
  413d5c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  413d60:	mov	x1, x19
  413d64:	mov	x3, x20
  413d68:	bl	4149b0 <wcrtomb@plt+0xfe70>
  413d6c:	tbz	w0, #0, 413de0 <wcrtomb@plt+0xf2a0>
  413d70:	ldp	x8, x9, [x21, #288]
  413d74:	cmp	x8, x9
  413d78:	b.cs	413d98 <wcrtomb@plt+0xf258>  // b.hs, b.nlast
  413d7c:	ldr	x9, [x21, #304]
  413d80:	ldr	x10, [x29, #24]
  413d84:	add	x11, x8, #0x1
  413d88:	str	x11, [x21, #288]
  413d8c:	add	x8, x9, x8, lsl #4
  413d90:	str	x10, [x8, #8]
  413d94:	b	413de0 <wcrtomb@plt+0xf2a0>
  413d98:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  413d9c:	ldr	x8, [x8, #4064]
  413da0:	cbz	x8, 413da8 <wcrtomb@plt+0xf268>
  413da4:	blr	x8
  413da8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  413dac:	add	x1, x1, #0xc1b
  413db0:	mov	w2, #0x5                   	// #5
  413db4:	mov	x0, xzr
  413db8:	bl	404900 <dcgettext@plt>
  413dbc:	mov	x2, x0
  413dc0:	mov	w0, wzr
  413dc4:	mov	w1, wzr
  413dc8:	mov	x3, x20
  413dcc:	mov	x4, x19
  413dd0:	bl	403fa0 <error@plt>
  413dd4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  413dd8:	mov	w9, #0x2                   	// #2
  413ddc:	str	w9, [x8, #2416]
  413de0:	ldp	x20, x19, [sp, #32]
  413de4:	ldr	x21, [sp, #16]
  413de8:	ldp	x29, x30, [sp], #48
  413dec:	ret
  413df0:	sub	sp, sp, #0x80
  413df4:	stp	x29, x30, [sp, #64]
  413df8:	stp	x24, x23, [sp, #80]
  413dfc:	stp	x22, x21, [sp, #96]
  413e00:	stp	x20, x19, [sp, #112]
  413e04:	str	xzr, [x0, #288]
  413e08:	ldrb	w8, [x2]
  413e0c:	mov	x20, x2
  413e10:	mov	x19, x1
  413e14:	add	x29, sp, #0x40
  413e18:	sub	w8, w8, #0x30
  413e1c:	cmp	w8, #0x9
  413e20:	b.hi	413eb4 <wcrtomb@plt+0xf374>  // b.pmore
  413e24:	mov	x21, x0
  413e28:	mov	w23, #0x1                   	// #1
  413e2c:	bl	404a10 <__errno_location@plt>
  413e30:	mov	x22, x0
  413e34:	add	x1, sp, #0x8
  413e38:	mov	w2, #0xa                   	// #10
  413e3c:	mov	x0, x20
  413e40:	mov	w3, wzr
  413e44:	str	wzr, [x22]
  413e48:	bl	4042d0 <__strtol_internal@plt>
  413e4c:	ldr	w8, [x22]
  413e50:	cmp	w8, #0x22
  413e54:	cbz	w23, 413e60 <wcrtomb@plt+0xf320>
  413e58:	b.ne	413e88 <wcrtomb@plt+0xf348>  // b.any
  413e5c:	b	413f14 <wcrtomb@plt+0xf3d4>
  413e60:	b.eq	413f14 <wcrtomb@plt+0xf3d4>  // b.none
  413e64:	ldp	x8, x9, [x21, #288]
  413e68:	cmp	x8, x9
  413e6c:	b.cs	414004 <wcrtomb@plt+0xf4c4>  // b.hs, b.nlast
  413e70:	ldr	x9, [x21, #304]
  413e74:	add	x10, x8, #0x1
  413e78:	str	x10, [x21, #288]
  413e7c:	add	x8, x9, x8, lsl #4
  413e80:	stp	x24, x0, [x8]
  413e84:	mov	x0, x24
  413e88:	ldr	x20, [sp, #8]
  413e8c:	ldrb	w8, [x20]
  413e90:	cmp	w8, #0x2c
  413e94:	b.ne	413f7c <wcrtomb@plt+0xf43c>  // b.any
  413e98:	ldrb	w8, [x20, #1]!
  413e9c:	cmp	w23, #0x0
  413ea0:	cset	w23, eq  // eq = none
  413ea4:	mov	x24, x0
  413ea8:	sub	w8, w8, #0x30
  413eac:	cmp	w8, #0xa
  413eb0:	b.cc	413e34 <wcrtomb@plt+0xf2f4>  // b.lo, b.ul, b.last
  413eb4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  413eb8:	ldr	x8, [x8, #4064]
  413ebc:	cbz	x8, 413ec4 <wcrtomb@plt+0xf384>
  413ec0:	blr	x8
  413ec4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  413ec8:	add	x1, x1, #0xbc5
  413ecc:	mov	w2, #0x5                   	// #5
  413ed0:	mov	x0, xzr
  413ed4:	bl	404900 <dcgettext@plt>
  413ed8:	mov	x2, x0
  413edc:	mov	w0, wzr
  413ee0:	mov	w1, wzr
  413ee4:	mov	x3, x19
  413ee8:	mov	x4, x20
  413eec:	bl	403fa0 <error@plt>
  413ef0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  413ef4:	mov	w9, #0x2                   	// #2
  413ef8:	str	w9, [x8, #2416]
  413efc:	ldp	x20, x19, [sp, #112]
  413f00:	ldp	x22, x21, [sp, #96]
  413f04:	ldp	x24, x23, [sp, #80]
  413f08:	ldp	x29, x30, [sp, #64]
  413f0c:	add	sp, sp, #0x80
  413f10:	ret
  413f14:	sub	x1, x29, #0x18
  413f18:	mov	x0, xzr
  413f1c:	bl	43cf60 <argp_parse@@Base+0x56b4>
  413f20:	mov	x21, x0
  413f24:	add	x1, sp, #0x10
  413f28:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  413f2c:	bl	43d080 <argp_parse@@Base+0x57d4>
  413f30:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  413f34:	ldr	x8, [x8, #4064]
  413f38:	mov	x22, x0
  413f3c:	cbz	x8, 413f44 <wcrtomb@plt+0xf404>
  413f40:	blr	x8
  413f44:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  413f48:	add	x1, x1, #0xbee
  413f4c:	mov	w2, #0x5                   	// #5
  413f50:	mov	x0, xzr
  413f54:	bl	404900 <dcgettext@plt>
  413f58:	mov	x2, x0
  413f5c:	mov	w0, wzr
  413f60:	mov	w1, wzr
  413f64:	mov	x3, x19
  413f68:	mov	x4, x20
  413f6c:	mov	x5, x21
  413f70:	mov	x6, x22
  413f74:	bl	403fa0 <error@plt>
  413f78:	b	413ef0 <wcrtomb@plt+0xf3b0>
  413f7c:	cbnz	w8, 413fc0 <wcrtomb@plt+0xf480>
  413f80:	cbz	w23, 413efc <wcrtomb@plt+0xf3bc>
  413f84:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  413f88:	ldr	x8, [x8, #4064]
  413f8c:	cbz	x8, 413f94 <wcrtomb@plt+0xf454>
  413f90:	blr	x8
  413f94:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  413f98:	add	x1, x1, #0xc82
  413f9c:	mov	w2, #0x5                   	// #5
  413fa0:	mov	x0, xzr
  413fa4:	bl	404900 <dcgettext@plt>
  413fa8:	mov	x2, x0
  413fac:	mov	w0, wzr
  413fb0:	mov	w1, wzr
  413fb4:	mov	x3, x19
  413fb8:	bl	403fa0 <error@plt>
  413fbc:	b	413ef0 <wcrtomb@plt+0xf3b0>
  413fc0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  413fc4:	ldr	x8, [x8, #4064]
  413fc8:	cbz	x8, 413fd0 <wcrtomb@plt+0xf490>
  413fcc:	blr	x8
  413fd0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  413fd4:	add	x1, x1, #0xc43
  413fd8:	mov	w2, #0x5                   	// #5
  413fdc:	mov	x0, xzr
  413fe0:	bl	404900 <dcgettext@plt>
  413fe4:	ldr	x8, [sp, #8]
  413fe8:	mov	x2, x0
  413fec:	mov	w0, wzr
  413ff0:	mov	w1, wzr
  413ff4:	ldrb	w4, [x8]
  413ff8:	mov	x3, x19
  413ffc:	bl	403fa0 <error@plt>
  414000:	b	413ef0 <wcrtomb@plt+0xf3b0>
  414004:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414008:	ldr	x8, [x8, #4064]
  41400c:	cbz	x8, 414014 <wcrtomb@plt+0xf4d4>
  414010:	blr	x8
  414014:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  414018:	add	x1, x1, #0xc1b
  41401c:	b	413ecc <wcrtomb@plt+0xf38c>
  414020:	stp	x29, x30, [sp, #-48]!
  414024:	mov	x0, x3
  414028:	str	x21, [sp, #16]
  41402c:	stp	x20, x19, [sp, #32]
  414030:	mov	x29, sp
  414034:	mov	x19, x3
  414038:	mov	x20, x2
  41403c:	mov	x21, x1
  414040:	bl	414aec <wcrtomb@plt+0xffac>
  414044:	mov	x3, x0
  414048:	mov	x0, x20
  41404c:	mov	x1, x21
  414050:	mov	x2, x19
  414054:	ldp	x20, x19, [sp, #32]
  414058:	ldr	x21, [sp, #16]
  41405c:	ldp	x29, x30, [sp], #48
  414060:	b	4145b0 <wcrtomb@plt+0xfa70>
  414064:	stp	x29, x30, [sp, #-48]!
  414068:	str	x21, [sp, #16]
  41406c:	mov	x21, x0
  414070:	mov	x0, x3
  414074:	stp	x20, x19, [sp, #32]
  414078:	mov	x29, sp
  41407c:	mov	x19, x3
  414080:	mov	x20, x2
  414084:	bl	4459e8 <argp_parse@@Base+0xe13c>
  414088:	mov	x1, x20
  41408c:	mov	x2, x19
  414090:	str	x0, [x21, #384]
  414094:	bl	403ec0 <memcpy@plt>
  414098:	ldp	x20, x19, [sp, #32]
  41409c:	ldr	x21, [sp, #16]
  4140a0:	ldp	x29, x30, [sp], #48
  4140a4:	ret
  4140a8:	stp	x29, x30, [sp, #-48]!
  4140ac:	mov	x29, sp
  4140b0:	stp	x20, x19, [sp, #32]
  4140b4:	mov	x20, x2
  4140b8:	mov	x19, x1
  4140bc:	add	x2, x29, #0x18
  4140c0:	mov	w0, #0x1                   	// #1
  4140c4:	mov	x1, x3
  4140c8:	str	x21, [sp, #16]
  4140cc:	mov	x21, x3
  4140d0:	bl	428760 <wcrtomb@plt+0x23c20>
  4140d4:	tbz	w0, #0, 4140e0 <wcrtomb@plt+0xf5a0>
  4140d8:	ldr	x21, [x29, #24]
  4140dc:	b	4140f0 <wcrtomb@plt+0xf5b0>
  4140e0:	mov	x0, x21
  4140e4:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4140e8:	mov	x21, x0
  4140ec:	str	x0, [x29, #24]
  4140f0:	mov	x0, x21
  4140f4:	bl	403f40 <strlen@plt>
  4140f8:	mov	x3, x0
  4140fc:	mov	x0, x20
  414100:	mov	x1, x19
  414104:	mov	x2, x21
  414108:	bl	4145b0 <wcrtomb@plt+0xfa70>
  41410c:	ldr	x0, [x29, #24]
  414110:	bl	404700 <free@plt>
  414114:	ldp	x20, x19, [sp, #32]
  414118:	ldr	x21, [sp, #16]
  41411c:	ldp	x29, x30, [sp], #48
  414120:	ret
  414124:	stp	x29, x30, [sp, #-32]!
  414128:	stp	x20, x19, [sp, #16]
  41412c:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414130:	ldr	x0, [x20, #2928]
  414134:	mov	x19, x2
  414138:	mov	x29, sp
  41413c:	cbz	x0, 414148 <wcrtomb@plt+0xf608>
  414140:	bl	404700 <free@plt>
  414144:	str	xzr, [x20, #2928]
  414148:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41414c:	add	x2, x2, #0xb70
  414150:	mov	w0, wzr
  414154:	mov	x1, x19
  414158:	bl	428760 <wcrtomb@plt+0x23c20>
  41415c:	tbz	w0, #0, 41416c <wcrtomb@plt+0xf62c>
  414160:	ldp	x20, x19, [sp, #16]
  414164:	ldp	x29, x30, [sp], #32
  414168:	ret
  41416c:	mov	x1, x19
  414170:	ldp	x20, x19, [sp, #16]
  414174:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414178:	add	x0, x0, #0xb70
  41417c:	ldp	x29, x30, [sp], #32
  414180:	b	41aa28 <wcrtomb@plt+0x15ee8>
  414184:	stp	x29, x30, [sp, #-32]!
  414188:	stp	x20, x19, [sp, #16]
  41418c:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414190:	ldr	x0, [x20, #2936]
  414194:	mov	x19, x2
  414198:	mov	x29, sp
  41419c:	cbz	x0, 4141a8 <wcrtomb@plt+0xf668>
  4141a0:	bl	404700 <free@plt>
  4141a4:	str	xzr, [x20, #2936]
  4141a8:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4141ac:	add	x2, x2, #0xb78
  4141b0:	mov	w0, wzr
  4141b4:	mov	x1, x19
  4141b8:	bl	428760 <wcrtomb@plt+0x23c20>
  4141bc:	tbz	w0, #0, 4141cc <wcrtomb@plt+0xf68c>
  4141c0:	ldp	x20, x19, [sp, #16]
  4141c4:	ldp	x29, x30, [sp], #32
  4141c8:	ret
  4141cc:	mov	x1, x19
  4141d0:	ldp	x20, x19, [sp, #16]
  4141d4:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4141d8:	add	x0, x0, #0xb78
  4141dc:	ldp	x29, x30, [sp], #32
  4141e0:	b	41aa28 <wcrtomb@plt+0x15ee8>
  4141e4:	sub	sp, sp, #0x50
  4141e8:	stp	x29, x30, [sp, #32]
  4141ec:	stp	x20, x19, [sp, #64]
  4141f0:	ldr	x0, [x3]
  4141f4:	mov	x19, x2
  4141f8:	mov	x20, x1
  4141fc:	add	x3, sp, #0x8
  414200:	mov	x2, #0xffffffffffffffff    	// #-1
  414204:	mov	x1, xzr
  414208:	str	x21, [sp, #48]
  41420c:	add	x29, sp, #0x20
  414210:	bl	41b06c <wcrtomb@plt+0x1652c>
  414214:	mov	x21, x0
  414218:	bl	403f40 <strlen@plt>
  41421c:	mov	x3, x0
  414220:	mov	x0, x19
  414224:	mov	x1, x20
  414228:	mov	x2, x21
  41422c:	bl	4145b0 <wcrtomb@plt+0xfa70>
  414230:	ldp	x20, x19, [sp, #64]
  414234:	ldr	x21, [sp, #48]
  414238:	ldp	x29, x30, [sp, #32]
  41423c:	add	sp, sp, #0x50
  414240:	ret
  414244:	sub	sp, sp, #0x20
  414248:	mov	x8, x2
  41424c:	mov	x3, x1
  414250:	add	x0, sp, #0x8
  414254:	mov	x2, #0xffffffffffffffff    	// #-1
  414258:	mov	x1, x8
  41425c:	stp	x29, x30, [sp, #16]
  414260:	add	x29, sp, #0x10
  414264:	bl	4149b0 <wcrtomb@plt+0xfe70>
  414268:	tbz	w0, #0, 414278 <wcrtomb@plt+0xf738>
  41426c:	ldr	x8, [sp, #8]
  414270:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414274:	str	x8, [x9, #2960]
  414278:	ldp	x29, x30, [sp, #16]
  41427c:	add	sp, sp, #0x20
  414280:	ret
  414284:	sub	sp, sp, #0x50
  414288:	stp	x29, x30, [sp, #32]
  41428c:	stp	x20, x19, [sp, #64]
  414290:	ldr	x0, [x3]
  414294:	mov	x19, x2
  414298:	mov	x20, x1
  41429c:	add	x3, sp, #0x8
  4142a0:	mov	x2, #0xffffffffffffffff    	// #-1
  4142a4:	mov	x1, xzr
  4142a8:	str	x21, [sp, #48]
  4142ac:	add	x29, sp, #0x20
  4142b0:	bl	41b06c <wcrtomb@plt+0x1652c>
  4142b4:	mov	x21, x0
  4142b8:	bl	403f40 <strlen@plt>
  4142bc:	mov	x3, x0
  4142c0:	mov	x0, x19
  4142c4:	mov	x1, x20
  4142c8:	mov	x2, x21
  4142cc:	bl	4145b0 <wcrtomb@plt+0xfa70>
  4142d0:	ldp	x20, x19, [sp, #64]
  4142d4:	ldr	x21, [sp, #48]
  4142d8:	ldp	x29, x30, [sp, #32]
  4142dc:	add	sp, sp, #0x50
  4142e0:	ret
  4142e4:	sub	sp, sp, #0x20
  4142e8:	mov	x8, x2
  4142ec:	mov	x3, x1
  4142f0:	add	x0, sp, #0x8
  4142f4:	mov	x2, #0xffffffffffffffff    	// #-1
  4142f8:	mov	x1, x8
  4142fc:	stp	x29, x30, [sp, #16]
  414300:	add	x29, sp, #0x10
  414304:	bl	4149b0 <wcrtomb@plt+0xfe70>
  414308:	tbz	w0, #0, 414318 <wcrtomb@plt+0xf7d8>
  41430c:	ldr	x8, [sp, #8]
  414310:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414314:	str	x8, [x9, #2976]
  414318:	ldp	x29, x30, [sp, #16]
  41431c:	add	sp, sp, #0x20
  414320:	ret
  414324:	stp	x29, x30, [sp, #-48]!
  414328:	stp	x20, x19, [sp, #32]
  41432c:	str	x21, [sp, #16]
  414330:	ldr	x21, [x0, #48]
  414334:	mov	x29, sp
  414338:	mov	x19, x2
  41433c:	mov	x20, x1
  414340:	add	x2, x29, #0x18
  414344:	mov	w0, #0x1                   	// #1
  414348:	mov	x1, x21
  41434c:	bl	428760 <wcrtomb@plt+0x23c20>
  414350:	tbz	w0, #0, 41435c <wcrtomb@plt+0xf81c>
  414354:	ldr	x21, [x29, #24]
  414358:	b	41436c <wcrtomb@plt+0xf82c>
  41435c:	mov	x0, x21
  414360:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  414364:	mov	x21, x0
  414368:	str	x0, [x29, #24]
  41436c:	mov	x0, x21
  414370:	bl	403f40 <strlen@plt>
  414374:	mov	x3, x0
  414378:	mov	x0, x19
  41437c:	mov	x1, x20
  414380:	mov	x2, x21
  414384:	bl	4145b0 <wcrtomb@plt+0xfa70>
  414388:	ldr	x0, [x29, #24]
  41438c:	bl	404700 <free@plt>
  414390:	ldp	x20, x19, [sp, #32]
  414394:	ldr	x21, [sp, #16]
  414398:	ldp	x29, x30, [sp], #48
  41439c:	ret
  4143a0:	stp	x29, x30, [sp, #-32]!
  4143a4:	stp	x20, x19, [sp, #16]
  4143a8:	mov	x19, x0
  4143ac:	ldr	x0, [x19, #48]!
  4143b0:	mov	x20, x2
  4143b4:	mov	x29, sp
  4143b8:	cbz	x0, 4143c4 <wcrtomb@plt+0xf884>
  4143bc:	bl	404700 <free@plt>
  4143c0:	str	xzr, [x19]
  4143c4:	mov	w0, wzr
  4143c8:	mov	x1, x20
  4143cc:	mov	x2, x19
  4143d0:	bl	428760 <wcrtomb@plt+0x23c20>
  4143d4:	tbz	w0, #0, 4143e4 <wcrtomb@plt+0xf8a4>
  4143d8:	ldp	x20, x19, [sp, #16]
  4143dc:	ldp	x29, x30, [sp], #32
  4143e0:	ret
  4143e4:	mov	x0, x19
  4143e8:	mov	x1, x20
  4143ec:	ldp	x20, x19, [sp, #16]
  4143f0:	ldp	x29, x30, [sp], #32
  4143f4:	b	41aa28 <wcrtomb@plt+0x15ee8>
  4143f8:	mov	x8, x2
  4143fc:	ldp	x2, x3, [x0, #56]
  414400:	mov	x0, x8
  414404:	b	4145b0 <wcrtomb@plt+0xfa70>
  414408:	stp	x29, x30, [sp, #-32]!
  41440c:	stp	x20, x19, [sp, #16]
  414410:	mov	x20, x0
  414414:	add	x1, x3, #0x1
  414418:	mov	x0, x2
  41441c:	mov	x29, sp
  414420:	mov	x19, x3
  414424:	bl	445c50 <argp_parse@@Base+0xe3a4>
  414428:	stp	x0, x19, [x20, #56]
  41442c:	ldp	x20, x19, [sp, #16]
  414430:	ldp	x29, x30, [sp], #32
  414434:	ret
  414438:	mov	x8, x2
  41443c:	ldp	x2, x3, [x0, #72]
  414440:	mov	x0, x8
  414444:	b	4145b0 <wcrtomb@plt+0xfa70>
  414448:	stp	x29, x30, [sp, #-32]!
  41444c:	stp	x20, x19, [sp, #16]
  414450:	mov	x20, x0
  414454:	add	x1, x3, #0x1
  414458:	mov	x0, x2
  41445c:	mov	x29, sp
  414460:	mov	x19, x3
  414464:	bl	445c50 <argp_parse@@Base+0xe3a4>
  414468:	stp	x0, x19, [x20, #72]
  41446c:	ldp	x20, x19, [sp, #16]
  414470:	ldp	x29, x30, [sp], #32
  414474:	ret
  414478:	ldr	x9, [x0, #336]
  41447c:	ldr	x10, [x3]
  414480:	mov	w11, #0x18                  	// #24
  414484:	mov	x8, x2
  414488:	mov	x0, x8
  41448c:	madd	x9, x10, x11, x9
  414490:	ldp	x2, x3, [x9, #8]
  414494:	b	4145b0 <wcrtomb@plt+0xfa70>
  414498:	stp	x29, x30, [sp, #-64]!
  41449c:	stp	x20, x19, [sp, #48]
  4144a0:	mov	x20, x0
  4144a4:	mov	x0, x1
  4144a8:	str	x23, [sp, #16]
  4144ac:	stp	x22, x21, [sp, #32]
  4144b0:	mov	x29, sp
  4144b4:	mov	x19, x3
  4144b8:	mov	x23, x2
  4144bc:	mov	x22, x1
  4144c0:	bl	403f40 <strlen@plt>
  4144c4:	add	x9, x0, #0x10
  4144c8:	mov	x8, sp
  4144cc:	and	x9, x9, #0xfffffffffffffff0
  4144d0:	sub	x21, x8, x9
  4144d4:	add	x2, x0, #0x1
  4144d8:	mov	sp, x21
  4144dc:	mov	x0, x21
  4144e0:	mov	x1, x22
  4144e4:	bl	403ec0 <memcpy@plt>
  4144e8:	add	x9, x19, #0x10
  4144ec:	mov	x8, sp
  4144f0:	and	x9, x9, #0xfffffffffffffff0
  4144f4:	sub	x22, x8, x9
  4144f8:	add	x2, x19, #0x1
  4144fc:	mov	sp, x22
  414500:	mov	x0, x22
  414504:	mov	x1, x23
  414508:	bl	403ec0 <memcpy@plt>
  41450c:	mov	x8, x21
  414510:	mov	x9, x21
  414514:	b	41452c <wcrtomb@plt+0xf9ec>
  414518:	mov	w10, #0x3d                  	// #61
  41451c:	strb	w10, [x9]
  414520:	mov	w10, #0x3                   	// #3
  414524:	add	x8, x8, x10
  414528:	add	x9, x9, #0x1
  41452c:	ldrb	w10, [x8]
  414530:	cmp	w10, #0x25
  414534:	b.ne	414570 <wcrtomb@plt+0xfa30>  // b.any
  414538:	ldrb	w11, [x8, #1]
  41453c:	cmp	w11, #0x32
  414540:	b.eq	41455c <wcrtomb@plt+0xfa1c>  // b.none
  414544:	cmp	w11, #0x33
  414548:	b.ne	414570 <wcrtomb@plt+0xfa30>  // b.any
  41454c:	ldrb	w11, [x8, #2]
  414550:	cmp	w11, #0x44
  414554:	b.eq	414518 <wcrtomb@plt+0xf9d8>  // b.none
  414558:	b	414570 <wcrtomb@plt+0xfa30>
  41455c:	ldrb	w11, [x8, #2]
  414560:	cmp	w11, #0x35
  414564:	b.ne	414570 <wcrtomb@plt+0xfa30>  // b.any
  414568:	mov	w10, #0x25                  	// #37
  41456c:	b	41451c <wcrtomb@plt+0xf9dc>
  414570:	strb	w10, [x9]
  414574:	ldrb	w10, [x8]
  414578:	cbz	w10, 414584 <wcrtomb@plt+0xfa44>
  41457c:	mov	w10, #0x1                   	// #1
  414580:	b	414524 <wcrtomb@plt+0xf9e4>
  414584:	add	x1, x21, #0xd
  414588:	mov	x0, x20
  41458c:	mov	x2, x22
  414590:	mov	x3, x19
  414594:	bl	41237c <wcrtomb@plt+0xd83c>
  414598:	mov	sp, x29
  41459c:	ldp	x20, x19, [sp, #48]
  4145a0:	ldp	x22, x21, [sp, #32]
  4145a4:	ldr	x23, [sp, #16]
  4145a8:	ldp	x29, x30, [sp], #64
  4145ac:	ret
  4145b0:	sub	sp, sp, #0x90
  4145b4:	stp	x24, x23, [sp, #96]
  4145b8:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4145bc:	stp	x22, x21, [sp, #112]
  4145c0:	ldr	x22, [x24, #1160]
  4145c4:	stp	x28, x27, [sp, #64]
  4145c8:	stp	x26, x25, [sp, #80]
  4145cc:	stp	x20, x19, [sp, #128]
  4145d0:	mov	x27, x3
  4145d4:	mov	x28, x2
  4145d8:	mov	x23, x1
  4145dc:	mov	x19, x0
  4145e0:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4145e4:	stp	x29, x30, [sp, #48]
  4145e8:	add	x29, sp, #0x30
  4145ec:	cbz	x22, 414694 <wcrtomb@plt+0xfb54>
  4145f0:	strb	wzr, [x22]
  4145f4:	ldrb	w21, [x23]
  4145f8:	cbz	w21, 4146b4 <wcrtomb@plt+0xfb74>
  4145fc:	stp	x28, x27, [sp, #8]
  414600:	mov	w27, #0x3325                	// #13093
  414604:	mov	w28, #0x3225                	// #12837
  414608:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41460c:	mov	x26, xzr
  414610:	add	x23, x23, #0x1
  414614:	movk	w27, #0x44, lsl #16
  414618:	movk	w28, #0x35, lsl #16
  41461c:	add	x22, x22, #0x490
  414620:	b	41463c <wcrtomb@plt+0xfafc>
  414624:	ldr	x8, [x24, #1160]
  414628:	mov	x20, x26
  41462c:	strb	w21, [x8, x26]
  414630:	ldrb	w21, [x23], #1
  414634:	add	x26, x20, #0x1
  414638:	cbz	w21, 414688 <wcrtomb@plt+0xfb48>
  41463c:	ldr	x8, [x25, #1168]
  414640:	add	x20, x26, #0x2
  414644:	cmp	x20, x8
  414648:	b.cc	41465c <wcrtomb@plt+0xfb1c>  // b.lo, b.ul, b.last
  41464c:	ldr	x0, [x24, #1160]
  414650:	mov	x1, x22
  414654:	bl	445b6c <argp_parse@@Base+0xe2c0>
  414658:	str	x0, [x24, #1160]
  41465c:	and	w8, w21, #0xff
  414660:	cmp	w8, #0x3d
  414664:	b.eq	41467c <wcrtomb@plt+0xfb3c>  // b.none
  414668:	cmp	w8, #0x25
  41466c:	b.ne	414624 <wcrtomb@plt+0xfae4>  // b.any
  414670:	ldr	x8, [x24, #1160]
  414674:	str	w28, [x8, x26]
  414678:	b	414630 <wcrtomb@plt+0xfaf0>
  41467c:	ldr	x8, [x24, #1160]
  414680:	str	w27, [x8, x26]
  414684:	b	414630 <wcrtomb@plt+0xfaf0>
  414688:	ldr	x22, [x24, #1160]
  41468c:	ldp	x28, x27, [sp, #8]
  414690:	b	4146b8 <wcrtomb@plt+0xfb78>
  414694:	mov	w8, #0x100                 	// #256
  414698:	mov	w0, #0x100                 	// #256
  41469c:	str	x8, [x25, #1168]
  4146a0:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4146a4:	mov	x22, x0
  4146a8:	str	x0, [x24, #1160]
  4146ac:	ldrb	w21, [x23]
  4146b0:	cbnz	w21, 4145fc <wcrtomb@plt+0xfabc>
  4146b4:	mov	x26, xzr
  4146b8:	mov	x0, x22
  4146bc:	strb	wzr, [x22, x26]
  4146c0:	bl	403f40 <strlen@plt>
  4146c4:	add	x9, x27, x0
  4146c8:	add	x10, sp, #0x18
  4146cc:	mov	x23, x0
  4146d0:	mov	x8, xzr
  4146d4:	add	x20, x9, #0x3
  4146d8:	add	x21, x10, #0x14
  4146dc:	add	x0, x20, x8
  4146e0:	add	x1, sp, #0x18
  4146e4:	mov	x24, x8
  4146e8:	bl	43d080 <argp_parse@@Base+0x57d4>
  4146ec:	sub	x8, x21, x0
  4146f0:	cmp	x8, x24
  4146f4:	b.ne	4146dc <wcrtomb@plt+0xfb9c>  // b.any
  4146f8:	ldr	x26, [x19]
  4146fc:	mov	x25, x0
  414700:	ldp	x0, x8, [x26, #24]
  414704:	sub	x8, x8, x0
  414708:	cmp	x8, x24
  41470c:	b.cs	414720 <wcrtomb@plt+0xfbe0>  // b.hs, b.nlast
  414710:	mov	x0, x26
  414714:	mov	x1, x24
  414718:	bl	44693c <_obstack_newchunk@@Base>
  41471c:	ldr	x0, [x26, #24]
  414720:	mov	x1, x25
  414724:	mov	x2, x24
  414728:	bl	403ec0 <memcpy@plt>
  41472c:	ldr	x8, [x26, #24]
  414730:	add	x8, x8, x24
  414734:	str	x8, [x26, #24]
  414738:	ldp	x25, x8, [x19]
  41473c:	add	x8, x8, x24
  414740:	str	x8, [x19, #8]
  414744:	ldp	x8, x9, [x25, #24]
  414748:	cmp	x9, x8
  41474c:	b.ne	414760 <wcrtomb@plt+0xfc20>  // b.any
  414750:	mov	w1, #0x1                   	// #1
  414754:	mov	x0, x25
  414758:	bl	44693c <_obstack_newchunk@@Base>
  41475c:	ldr	x8, [x25, #24]
  414760:	add	x9, x8, #0x1
  414764:	mov	w10, #0x20                  	// #32
  414768:	str	x9, [x25, #24]
  41476c:	strb	w10, [x8]
  414770:	ldp	x24, x8, [x19]
  414774:	add	x8, x8, #0x1
  414778:	str	x8, [x19, #8]
  41477c:	ldp	x0, x8, [x24, #24]
  414780:	sub	x8, x8, x0
  414784:	cmp	x8, x23
  414788:	b.cs	41479c <wcrtomb@plt+0xfc5c>  // b.hs, b.nlast
  41478c:	mov	x0, x24
  414790:	mov	x1, x23
  414794:	bl	44693c <_obstack_newchunk@@Base>
  414798:	ldr	x0, [x24, #24]
  41479c:	mov	x1, x22
  4147a0:	mov	x2, x23
  4147a4:	bl	403ec0 <memcpy@plt>
  4147a8:	ldr	x8, [x24, #24]
  4147ac:	add	x8, x8, x23
  4147b0:	str	x8, [x24, #24]
  4147b4:	ldp	x22, x8, [x19]
  4147b8:	add	x8, x8, x23
  4147bc:	str	x8, [x19, #8]
  4147c0:	ldp	x8, x9, [x22, #24]
  4147c4:	cmp	x9, x8
  4147c8:	b.ne	4147dc <wcrtomb@plt+0xfc9c>  // b.any
  4147cc:	mov	w1, #0x1                   	// #1
  4147d0:	mov	x0, x22
  4147d4:	bl	44693c <_obstack_newchunk@@Base>
  4147d8:	ldr	x8, [x22, #24]
  4147dc:	add	x9, x8, #0x1
  4147e0:	mov	w10, #0x3d                  	// #61
  4147e4:	str	x9, [x22, #24]
  4147e8:	strb	w10, [x8]
  4147ec:	ldp	x22, x8, [x19]
  4147f0:	add	x8, x8, #0x1
  4147f4:	str	x8, [x19, #8]
  4147f8:	ldp	x0, x8, [x22, #24]
  4147fc:	sub	x8, x8, x0
  414800:	cmp	x8, x27
  414804:	b.cs	414818 <wcrtomb@plt+0xfcd8>  // b.hs, b.nlast
  414808:	mov	x0, x22
  41480c:	mov	x1, x27
  414810:	bl	44693c <_obstack_newchunk@@Base>
  414814:	ldr	x0, [x22, #24]
  414818:	mov	x1, x28
  41481c:	mov	x2, x27
  414820:	bl	403ec0 <memcpy@plt>
  414824:	ldr	x8, [x22, #24]
  414828:	add	x8, x8, x27
  41482c:	str	x8, [x22, #24]
  414830:	ldp	x21, x8, [x19]
  414834:	add	x8, x8, x27
  414838:	str	x8, [x19, #8]
  41483c:	ldp	x8, x9, [x21, #24]
  414840:	cmp	x9, x8
  414844:	b.ne	414858 <wcrtomb@plt+0xfd18>  // b.any
  414848:	mov	w1, #0x1                   	// #1
  41484c:	mov	x0, x21
  414850:	bl	44693c <_obstack_newchunk@@Base>
  414854:	ldr	x8, [x21, #24]
  414858:	add	x9, x8, #0x1
  41485c:	mov	w10, #0xa                   	// #10
  414860:	str	x9, [x21, #24]
  414864:	strb	w10, [x8]
  414868:	ldr	x8, [x19, #8]
  41486c:	add	x8, x8, #0x1
  414870:	str	x8, [x19, #8]
  414874:	ldp	x20, x19, [sp, #128]
  414878:	ldp	x22, x21, [sp, #112]
  41487c:	ldp	x24, x23, [sp, #96]
  414880:	ldp	x26, x25, [sp, #80]
  414884:	ldp	x28, x27, [sp, #64]
  414888:	ldp	x29, x30, [sp, #48]
  41488c:	add	sp, sp, #0x90
  414890:	ret
  414894:	sub	sp, sp, #0x70
  414898:	stp	x20, x19, [sp, #96]
  41489c:	mov	x19, x1
  4148a0:	stp	x22, x21, [sp, #80]
  4148a4:	mov	x20, x2
  4148a8:	mov	x21, x0
  4148ac:	add	x1, sp, #0x8
  4148b0:	mov	w2, #0x1                   	// #1
  4148b4:	mov	x0, x19
  4148b8:	stp	x29, x30, [sp, #64]
  4148bc:	add	x29, sp, #0x40
  4148c0:	bl	41b370 <wcrtomb@plt+0x16830>
  4148c4:	tbnz	x1, #63, 4148d4 <wcrtomb@plt+0xfd94>
  4148c8:	stp	x0, x1, [x21]
  4148cc:	mov	w0, #0x1                   	// #1
  4148d0:	b	414934 <wcrtomb@plt+0xfdf4>
  4148d4:	ldr	x8, [sp, #8]
  4148d8:	cmp	x8, x19
  4148dc:	b.ls	4148e8 <wcrtomb@plt+0xfda8>  // b.plast
  4148e0:	ldrb	w8, [x8]
  4148e4:	cbz	w8, 414948 <wcrtomb@plt+0xfe08>
  4148e8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4148ec:	ldr	x8, [x8, #4064]
  4148f0:	cbz	x8, 4148f8 <wcrtomb@plt+0xfdb8>
  4148f4:	blr	x8
  4148f8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4148fc:	add	x1, x1, #0xbc5
  414900:	mov	w2, #0x5                   	// #5
  414904:	mov	x0, xzr
  414908:	bl	404900 <dcgettext@plt>
  41490c:	mov	x2, x0
  414910:	mov	w0, wzr
  414914:	mov	w1, wzr
  414918:	mov	x3, x20
  41491c:	mov	x4, x19
  414920:	bl	403fa0 <error@plt>
  414924:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414928:	mov	w9, #0x2                   	// #2
  41492c:	mov	w0, wzr
  414930:	str	w9, [x8, #2416]
  414934:	ldp	x20, x19, [sp, #96]
  414938:	ldp	x22, x21, [sp, #80]
  41493c:	ldp	x29, x30, [sp, #64]
  414940:	add	sp, sp, #0x70
  414944:	ret
  414948:	sub	x1, x29, #0x18
  41494c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  414950:	bl	43cf60 <argp_parse@@Base+0x56b4>
  414954:	mov	x21, x0
  414958:	add	x1, sp, #0x10
  41495c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  414960:	bl	43d080 <argp_parse@@Base+0x57d4>
  414964:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414968:	ldr	x8, [x8, #4064]
  41496c:	mov	x22, x0
  414970:	cbz	x8, 414978 <wcrtomb@plt+0xfe38>
  414974:	blr	x8
  414978:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41497c:	add	x1, x1, #0xbee
  414980:	mov	w2, #0x5                   	// #5
  414984:	mov	x0, xzr
  414988:	bl	404900 <dcgettext@plt>
  41498c:	mov	x2, x0
  414990:	mov	w0, wzr
  414994:	mov	w1, wzr
  414998:	mov	x3, x20
  41499c:	mov	x4, x19
  4149a0:	mov	x5, x21
  4149a4:	mov	x6, x22
  4149a8:	bl	403fa0 <error@plt>
  4149ac:	b	414924 <wcrtomb@plt+0xfde4>
  4149b0:	sub	sp, sp, #0x70
  4149b4:	stp	x29, x30, [sp, #48]
  4149b8:	stp	x22, x21, [sp, #80]
  4149bc:	stp	x20, x19, [sp, #96]
  4149c0:	add	x29, sp, #0x30
  4149c4:	mov	x21, x2
  4149c8:	mov	x19, x1
  4149cc:	mov	x20, x3
  4149d0:	mov	x22, x0
  4149d4:	add	x1, x29, #0x18
  4149d8:	mov	x0, x19
  4149dc:	mov	x2, xzr
  4149e0:	mov	x3, x21
  4149e4:	str	x23, [sp, #64]
  4149e8:	bl	41b080 <wcrtomb@plt+0x16540>
  4149ec:	mov	x23, x0
  4149f0:	bl	404a10 <__errno_location@plt>
  4149f4:	ldr	w8, [x0]
  4149f8:	cmp	w8, #0x16
  4149fc:	b.eq	414a0c <wcrtomb@plt+0xfecc>  // b.none
  414a00:	ldr	x9, [x29, #24]
  414a04:	ldrb	w9, [x9]
  414a08:	cbz	w9, 414a70 <wcrtomb@plt+0xff30>
  414a0c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414a10:	ldr	x8, [x8, #4064]
  414a14:	cbz	x8, 414a1c <wcrtomb@plt+0xfedc>
  414a18:	blr	x8
  414a1c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  414a20:	add	x1, x1, #0xbc5
  414a24:	mov	w2, #0x5                   	// #5
  414a28:	mov	x0, xzr
  414a2c:	bl	404900 <dcgettext@plt>
  414a30:	mov	x2, x0
  414a34:	mov	w0, wzr
  414a38:	mov	w1, wzr
  414a3c:	mov	x3, x20
  414a40:	mov	x4, x19
  414a44:	bl	403fa0 <error@plt>
  414a48:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414a4c:	mov	w9, #0x2                   	// #2
  414a50:	mov	w0, wzr
  414a54:	str	w9, [x8, #2416]
  414a58:	ldp	x20, x19, [sp, #96]
  414a5c:	ldp	x22, x21, [sp, #80]
  414a60:	ldr	x23, [sp, #64]
  414a64:	ldp	x29, x30, [sp, #48]
  414a68:	add	sp, sp, #0x70
  414a6c:	ret
  414a70:	cmp	w8, #0x22
  414a74:	b.ne	414ae0 <wcrtomb@plt+0xffa0>  // b.any
  414a78:	add	x1, sp, #0x18
  414a7c:	mov	x0, xzr
  414a80:	bl	43cf60 <argp_parse@@Base+0x56b4>
  414a84:	mov	x22, x0
  414a88:	mov	x1, sp
  414a8c:	mov	x0, x21
  414a90:	bl	43d080 <argp_parse@@Base+0x57d4>
  414a94:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414a98:	ldr	x8, [x8, #4064]
  414a9c:	mov	x21, x0
  414aa0:	cbz	x8, 414aa8 <wcrtomb@plt+0xff68>
  414aa4:	blr	x8
  414aa8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  414aac:	add	x1, x1, #0xbee
  414ab0:	mov	w2, #0x5                   	// #5
  414ab4:	mov	x0, xzr
  414ab8:	bl	404900 <dcgettext@plt>
  414abc:	mov	x2, x0
  414ac0:	mov	w0, wzr
  414ac4:	mov	w1, wzr
  414ac8:	mov	x3, x20
  414acc:	mov	x4, x19
  414ad0:	mov	x5, x22
  414ad4:	mov	x6, x21
  414ad8:	bl	403fa0 <error@plt>
  414adc:	b	414a48 <wcrtomb@plt+0xff08>
  414ae0:	mov	w0, #0x1                   	// #1
  414ae4:	str	x23, [x22]
  414ae8:	b	414a58 <wcrtomb@plt+0xff18>
  414aec:	stp	x29, x30, [sp, #-32]!
  414af0:	stp	x20, x19, [sp, #16]
  414af4:	ldrb	w8, [x0]
  414af8:	mov	x29, sp
  414afc:	cbz	w8, 414b2c <wcrtomb@plt+0xffec>
  414b00:	mov	x19, x0
  414b04:	mov	x20, xzr
  414b08:	mov	x0, x19
  414b0c:	bl	403f40 <strlen@plt>
  414b10:	add	x8, x0, #0x1
  414b14:	add	x19, x19, x8
  414b18:	ldrb	w9, [x19]
  414b1c:	add	x20, x8, x20
  414b20:	cbnz	w9, 414b08 <wcrtomb@plt+0xffc8>
  414b24:	add	x0, x20, #0x1
  414b28:	b	414b30 <wcrtomb@plt+0xfff0>
  414b2c:	mov	w0, #0x1                   	// #1
  414b30:	ldp	x20, x19, [sp, #16]
  414b34:	ldp	x29, x30, [sp], #32
  414b38:	ret
  414b3c:	stp	x29, x30, [sp, #-48]!
  414b40:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414b44:	ldr	x0, [x8, #1176]
  414b48:	str	x21, [sp, #16]
  414b4c:	stp	x20, x19, [sp, #32]
  414b50:	mov	x29, sp
  414b54:	cbz	x0, 414b5c <wcrtomb@plt+0x1001c>
  414b58:	bl	43bbf8 <argp_parse@@Base+0x434c>
  414b5c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414b60:	ldr	x0, [x8, #1184]
  414b64:	cbz	x0, 414b6c <wcrtomb@plt+0x1002c>
  414b68:	bl	43bbf8 <argp_parse@@Base+0x434c>
  414b6c:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414b70:	ldr	x19, [x20, #1192]
  414b74:	cbz	x19, 414b9c <wcrtomb@plt+0x1005c>
  414b78:	ldr	x0, [x19, #80]
  414b7c:	ldr	x21, [x19]
  414b80:	bl	404700 <free@plt>
  414b84:	ldr	x0, [x19, #88]
  414b88:	bl	404700 <free@plt>
  414b8c:	mov	x0, x19
  414b90:	bl	404700 <free@plt>
  414b94:	mov	x19, x21
  414b98:	cbnz	x21, 414b78 <wcrtomb@plt+0x10038>
  414b9c:	str	xzr, [x20, #1192]
  414ba0:	ldp	x20, x19, [sp, #32]
  414ba4:	ldr	x21, [sp, #16]
  414ba8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414bac:	str	xzr, [x8, #1200]
  414bb0:	ldp	x29, x30, [sp], #48
  414bb4:	ret
  414bb8:	add	x0, x0, #0x58
  414bbc:	b	41afa8 <wcrtomb@plt+0x16468>
  414bc0:	sub	sp, sp, #0xa0
  414bc4:	stp	x29, x30, [sp, #128]
  414bc8:	stp	x20, x19, [sp, #144]
  414bcc:	mov	x20, x0
  414bd0:	ldr	x0, [x0]
  414bd4:	add	x29, sp, #0x80
  414bd8:	bl	414c1c <wcrtomb@plt+0x100dc>
  414bdc:	cbz	x0, 414c0c <wcrtomb@plt+0x100cc>
  414be0:	ldr	w1, [x20, #408]
  414be4:	mov	x19, x0
  414be8:	mov	x2, sp
  414bec:	mov	w0, wzr
  414bf0:	bl	4048e0 <__fxstat@plt>
  414bf4:	cbz	w0, 414c04 <wcrtomb@plt+0x100c4>
  414bf8:	ldr	x0, [x19, #88]
  414bfc:	bl	41c40c <wcrtomb@plt+0x178cc>
  414c00:	b	414c0c <wcrtomb@plt+0x100cc>
  414c04:	ldur	q0, [sp, #88]
  414c08:	stur	q0, [x19, #8]
  414c0c:	ldp	x20, x19, [sp, #144]
  414c10:	ldp	x29, x30, [sp, #128]
  414c14:	add	sp, sp, #0xa0
  414c18:	ret
  414c1c:	stp	x29, x30, [sp, #-64]!
  414c20:	stp	x24, x23, [sp, #16]
  414c24:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414c28:	ldr	x8, [x24, #1176]
  414c2c:	stp	x22, x21, [sp, #32]
  414c30:	stp	x20, x19, [sp, #48]
  414c34:	mov	x29, sp
  414c38:	cbz	x8, 414cec <wcrtomb@plt+0x101ac>
  414c3c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  414c40:	mov	x20, x0
  414c44:	ldr	w0, [x8, #3056]
  414c48:	mov	x1, x20
  414c4c:	bl	41ade4 <wcrtomb@plt+0x162a4>
  414c50:	mov	x21, x0
  414c54:	mov	x0, x20
  414c58:	bl	403f40 <strlen@plt>
  414c5c:	mov	x22, x0
  414c60:	mov	w0, #0x60                  	// #96
  414c64:	bl	4459e8 <argp_parse@@Base+0xe13c>
  414c68:	mov	x19, x0
  414c6c:	cmp	x22, #0x2
  414c70:	str	xzr, [x0]
  414c74:	str	xzr, [x0, #64]
  414c78:	str	wzr, [x0, #60]
  414c7c:	stp	xzr, xzr, [x0, #40]
  414c80:	b.cc	414c94 <wcrtomb@plt+0x10154>  // b.lo, b.ul, b.last
  414c84:	sub	x8, x22, #0x1
  414c88:	ldrb	w9, [x20, x8]
  414c8c:	cmp	w9, #0x2f
  414c90:	csel	x22, x8, x22, eq  // eq = none
  414c94:	add	x0, x22, #0x1
  414c98:	bl	4459e8 <argp_parse@@Base+0xe13c>
  414c9c:	mov	x1, x20
  414ca0:	mov	x2, x22
  414ca4:	mov	x23, x0
  414ca8:	str	x0, [x19, #88]
  414cac:	bl	403ec0 <memcpy@plt>
  414cb0:	ldr	x0, [x24, #1176]
  414cb4:	mov	x1, x19
  414cb8:	strb	wzr, [x23, x22]
  414cbc:	stp	xzr, x21, [x19, #72]
  414cc0:	bl	43b71c <argp_parse@@Base+0x3e70>
  414cc4:	ldr	x8, [x19, #80]
  414cc8:	mov	x20, x0
  414ccc:	mov	x0, x8
  414cd0:	bl	404700 <free@plt>
  414cd4:	ldr	x0, [x19, #88]
  414cd8:	bl	404700 <free@plt>
  414cdc:	mov	x0, x19
  414ce0:	bl	404700 <free@plt>
  414ce4:	mov	x0, x20
  414ce8:	b	414cf0 <wcrtomb@plt+0x101b0>
  414cec:	mov	x0, xzr
  414cf0:	ldp	x20, x19, [sp, #48]
  414cf4:	ldp	x22, x21, [sp, #32]
  414cf8:	ldp	x24, x23, [sp, #16]
  414cfc:	ldp	x29, x30, [sp], #64
  414d00:	ret
  414d04:	stp	x29, x30, [sp, #-96]!
  414d08:	stp	x28, x27, [sp, #16]
  414d0c:	stp	x26, x25, [sp, #32]
  414d10:	stp	x24, x23, [sp, #48]
  414d14:	stp	x22, x21, [sp, #64]
  414d18:	stp	x20, x19, [sp, #80]
  414d1c:	mov	x29, sp
  414d20:	sub	sp, sp, #0x1f0
  414d24:	ldr	x21, [x0]
  414d28:	mov	x25, x0
  414d2c:	bl	40bd1c <wcrtomb@plt+0x71dc>
  414d30:	ldr	x26, [x25, #88]
  414d34:	ldr	x19, [x25, #392]
  414d38:	mov	x24, x0
  414d3c:	cbnz	x0, 414d48 <wcrtomb@plt+0x10208>
  414d40:	mov	x0, x21
  414d44:	bl	42ad90 <wcrtomb@plt+0x26250>
  414d48:	cmp	x19, #0x0
  414d4c:	mov	x0, x25
  414d50:	cset	w19, eq  // eq = none
  414d54:	bl	40ea50 <wcrtomb@plt+0x9f10>
  414d58:	mov	x0, x21
  414d5c:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  414d60:	mov	x23, x0
  414d64:	bl	41ac90 <wcrtomb@plt+0x16150>
  414d68:	lsl	w2, w19, #5
  414d6c:	sub	x3, x29, #0xc
  414d70:	mov	x0, x23
  414d74:	mov	x1, x25
  414d78:	bl	415284 <wcrtomb@plt+0x10744>
  414d7c:	mov	x22, x0
  414d80:	mov	x0, x23
  414d84:	bl	404700 <free@plt>
  414d88:	mov	x0, x21
  414d8c:	bl	41c11c <wcrtomb@plt+0x175dc>
  414d90:	mov	x20, x0
  414d94:	cbz	x24, 415250 <wcrtomb@plt+0x10710>
  414d98:	ldr	w8, [x22, #56]
  414d9c:	str	x22, [sp, #48]
  414da0:	cbz	w8, 414db4 <wcrtomb@plt+0x10274>
  414da4:	cmp	w8, #0x2
  414da8:	b.ne	414e24 <wcrtomb@plt+0x102e4>  // b.any
  414dac:	mov	x19, xzr
  414db0:	b	414e44 <wcrtomb@plt+0x10304>
  414db4:	ldr	x0, [x22, #72]
  414db8:	cbz	x0, 415250 <wcrtomb@plt+0x10710>
  414dbc:	bl	403f40 <strlen@plt>
  414dc0:	mov	x22, x0
  414dc4:	add	x23, x0, #0x1
  414dc8:	add	x0, x0, #0x3
  414dcc:	bl	4459e8 <argp_parse@@Base+0xe13c>
  414dd0:	mov	w8, #0x59                  	// #89
  414dd4:	mov	x19, x24
  414dd8:	mov	x24, x0
  414ddc:	strb	w8, [x0], #1
  414de0:	ldr	x8, [sp, #48]
  414de4:	mov	x2, x23
  414de8:	ldr	x1, [x8, #72]
  414dec:	bl	403ec0 <memcpy@plt>
  414df0:	add	x8, x22, x24
  414df4:	ldr	x22, [sp, #48]
  414df8:	strb	wzr, [x8, #2]
  414dfc:	mov	x0, x24
  414e00:	mov	x1, xzr
  414e04:	ldr	x8, [x22, #40]
  414e08:	str	x8, [x22, #48]
  414e0c:	bl	4176e0 <wcrtomb@plt+0x12ba0>
  414e10:	str	x0, [x22, #40]
  414e14:	mov	x0, x24
  414e18:	mov	x24, x19
  414e1c:	bl	404700 <free@plt>
  414e20:	b	415250 <wcrtomb@plt+0x10710>
  414e24:	ldrb	w8, [x22, #60]
  414e28:	tbnz	w8, #4, 414e34 <wcrtomb@plt+0x102f4>
  414e2c:	ldr	x19, [x22, #40]
  414e30:	b	414e44 <wcrtomb@plt+0x10304>
  414e34:	ldr	x8, [x22, #64]
  414e38:	ldr	x19, [x8, #48]
  414e3c:	cbnz	x19, 414e44 <wcrtomb@plt+0x10304>
  414e40:	ldr	x19, [x8, #40]
  414e44:	stp	x20, x25, [sp, #32]
  414e48:	ldrb	w8, [x24]
  414e4c:	mov	x23, xzr
  414e50:	str	x26, [sp, #8]
  414e54:	cbz	w8, 414e8c <wcrtomb@plt+0x1034c>
  414e58:	mov	x20, xzr
  414e5c:	mov	x21, x24
  414e60:	mov	x0, x24
  414e64:	bl	403f40 <strlen@plt>
  414e68:	add	x24, x0, x24
  414e6c:	ldrb	w8, [x24, #1]!
  414e70:	add	x9, x20, x0
  414e74:	add	x20, x9, #0x2
  414e78:	add	x23, x23, #0x1
  414e7c:	cbnz	w8, 414e60 <wcrtomb@plt+0x10320>
  414e80:	add	x25, x20, #0x1
  414e84:	mov	x24, x21
  414e88:	b	414e90 <wcrtomb@plt+0x10350>
  414e8c:	mov	w25, #0x1                   	// #1
  414e90:	mov	w1, #0x8                   	// #8
  414e94:	mov	x0, x23
  414e98:	bl	445c24 <argp_parse@@Base+0xe378>
  414e9c:	ldrb	w8, [x24]
  414ea0:	str	x24, [sp, #24]
  414ea4:	mov	x24, x0
  414ea8:	cbz	w8, 414ecc <wcrtomb@plt+0x1038c>
  414eac:	ldr	x26, [sp, #24]
  414eb0:	mov	x20, x24
  414eb4:	mov	x0, x26
  414eb8:	str	x26, [x20], #8
  414ebc:	bl	403f40 <strlen@plt>
  414ec0:	add	x26, x0, x26
  414ec4:	ldrb	w8, [x26, #1]!
  414ec8:	cbnz	w8, 414eb4 <wcrtomb@plt+0x10374>
  414ecc:	adrp	x3, 417000 <wcrtomb@plt+0x124c0>
  414ed0:	add	x3, x3, #0x6d4
  414ed4:	mov	w2, #0x8                   	// #8
  414ed8:	mov	x0, x24
  414edc:	mov	x1, x23
  414ee0:	bl	4040f0 <qsort@plt>
  414ee4:	mov	x0, x25
  414ee8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  414eec:	mov	x25, x0
  414ef0:	str	x0, [sp, #16]
  414ef4:	cbz	x23, 414fb8 <wcrtomb@plt+0x10478>
  414ef8:	ldr	x25, [sp, #16]
  414efc:	mov	x27, xzr
  414f00:	cbz	x19, 414f50 <wcrtomb@plt+0x10410>
  414f04:	ldr	x28, [x19, #16]
  414f08:	cbz	x28, 414f50 <wcrtomb@plt+0x10410>
  414f0c:	ldr	x26, [x24, x27, lsl #3]
  414f10:	ldr	x21, [x19, #24]
  414f14:	mov	x22, xzr
  414f18:	b	414f28 <wcrtomb@plt+0x103e8>
  414f1c:	cmp	x22, x20
  414f20:	mov	x28, x20
  414f24:	b.cs	414f50 <wcrtomb@plt+0x10410>  // b.hs, b.nlast
  414f28:	add	x8, x28, x22
  414f2c:	lsr	x20, x8, #1
  414f30:	ldr	x1, [x21, x20, lsl #3]
  414f34:	mov	x0, x26
  414f38:	bl	404660 <strcmp@plt>
  414f3c:	tbnz	w0, #31, 414f1c <wcrtomb@plt+0x103dc>
  414f40:	cbz	w0, 414f94 <wcrtomb@plt+0x10454>
  414f44:	add	x22, x20, #0x1
  414f48:	mov	x20, x28
  414f4c:	b	414f1c <wcrtomb@plt+0x103dc>
  414f50:	ldr	x22, [sp, #48]
  414f54:	add	x8, x25, #0x1
  414f58:	ldr	x9, [x22, #72]
  414f5c:	cbz	x9, 414f68 <wcrtomb@plt+0x10428>
  414f60:	mov	w9, #0x49                  	// #73
  414f64:	b	414f6c <wcrtomb@plt+0x1042c>
  414f68:	mov	w9, #0x59                  	// #89
  414f6c:	strb	w9, [x25]
  414f70:	ldr	x9, [x24, x27, lsl #3]
  414f74:	mov	x25, x8
  414f78:	ldrb	w8, [x9], #1
  414f7c:	strb	w8, [x25], #1
  414f80:	cbnz	w8, 414f78 <wcrtomb@plt+0x10438>
  414f84:	add	x27, x27, #0x1
  414f88:	cmp	x27, x23
  414f8c:	b.ne	414f00 <wcrtomb@plt+0x103c0>  // b.any
  414f90:	b	414fb8 <wcrtomb@plt+0x10478>
  414f94:	ldr	x22, [sp, #48]
  414f98:	mov	w9, #0x20                  	// #32
  414f9c:	ldr	x8, [x22, #72]
  414fa0:	cmp	x8, #0x0
  414fa4:	mov	w8, #0x49                  	// #73
  414fa8:	csel	w8, w9, w8, eq  // eq = none
  414fac:	strb	w8, [x25], #1
  414fb0:	mov	x8, x25
  414fb4:	b	414f70 <wcrtomb@plt+0x10430>
  414fb8:	strb	wzr, [x25]
  414fbc:	ldr	x19, [sp, #16]
  414fc0:	ldr	x8, [x22, #40]
  414fc4:	mov	x1, xzr
  414fc8:	mov	x0, x19
  414fcc:	str	x8, [x22, #48]
  414fd0:	bl	4176e0 <wcrtomb@plt+0x12ba0>
  414fd4:	str	x0, [x22, #40]
  414fd8:	mov	x0, x19
  414fdc:	bl	404700 <free@plt>
  414fe0:	mov	x0, x24
  414fe4:	bl	404700 <free@plt>
  414fe8:	ldr	x25, [x22, #40]
  414fec:	mov	w0, #0x18                  	// #24
  414ff0:	bl	4459e8 <argp_parse@@Base+0xe13c>
  414ff4:	mov	w8, #0x1                   	// #1
  414ff8:	str	x25, [x0]
  414ffc:	str	w8, [x0, #8]
  415000:	str	xzr, [x0, #16]
  415004:	ldr	x24, [x25]
  415008:	ldr	x20, [sp, #32]
  41500c:	mov	x23, x0
  415010:	ldrb	w8, [x24]
  415014:	cbz	w8, 415244 <wcrtomb@plt+0x10704>
  415018:	mov	x0, x24
  41501c:	bl	403f40 <strlen@plt>
  415020:	ldr	x21, [sp, #40]
  415024:	add	x8, sp, #0x38
  415028:	add	x19, x0, #0x1
  41502c:	mov	w28, #0x4e                  	// #78
  415030:	add	x8, x8, #0x58
  415034:	str	x19, [x23, #16]
  415038:	str	x8, [sp, #48]
  41503c:	add	x27, x24, #0x1
  415040:	mov	x0, x20
  415044:	mov	x1, x27
  415048:	bl	41c5d4 <wcrtomb@plt+0x17a94>
  41504c:	ldrb	w8, [x24]
  415050:	cmp	w8, #0x49
  415054:	b.eq	415068 <wcrtomb@plt+0x10528>  // b.none
  415058:	mov	x1, x21
  41505c:	mov	x26, x0
  415060:	bl	40eca0 <wcrtomb@plt+0xa160>
  415064:	tbz	w0, #0, 415070 <wcrtomb@plt+0x10530>
  415068:	strb	w28, [x24]
  41506c:	b	415158 <wcrtomb@plt+0x10618>
  415070:	ldr	w28, [x21, #408]
  415074:	add	x0, sp, #0x38
  415078:	bl	42437c <wcrtomb@plt+0x1f83c>
  41507c:	tbnz	w28, #31, 415124 <wcrtomb@plt+0x105e4>
  415080:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415084:	ldr	w4, [x8, #3616]
  415088:	ldr	x3, [sp, #48]
  41508c:	mov	w0, wzr
  415090:	mov	w1, w28
  415094:	mov	x2, x27
  415098:	bl	404b20 <__fxstatat@plt>
  41509c:	adrp	x2, 41c000 <wcrtomb@plt+0x174c0>
  4150a0:	add	x2, x2, #0x40c
  4150a4:	mov	w28, #0x4e                  	// #78
  4150a8:	cbnz	w0, 415140 <wcrtomb@plt+0x10600>
  4150ac:	ldr	w8, [sp, #160]
  4150b0:	and	w9, w8, #0xf000
  4150b4:	cmp	w9, #0x4, lsl #12
  4150b8:	b.ne	4150f8 <wcrtomb@plt+0x105b8>  // b.any
  4150bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4150c0:	ldr	w2, [x8, #3764]
  4150c4:	ldr	x0, [sp, #40]
  4150c8:	mov	x1, x27
  4150cc:	bl	40a770 <wcrtomb@plt+0x5c30>
  4150d0:	tbnz	w0, #31, 4151ec <wcrtomb@plt+0x106ac>
  4150d4:	ldr	x2, [sp, #48]
  4150d8:	mov	w1, w0
  4150dc:	str	w0, [sp, #464]
  4150e0:	mov	w0, wzr
  4150e4:	bl	4048e0 <__fxstat@plt>
  4150e8:	adrp	x2, 41c000 <wcrtomb@plt+0x174c0>
  4150ec:	add	x2, x2, #0x40c
  4150f0:	cbnz	w0, 415140 <wcrtomb@plt+0x10600>
  4150f4:	ldr	w8, [sp, #160]
  4150f8:	and	w8, w8, #0xf000
  4150fc:	cmp	w8, #0x4, lsl #12
  415100:	b.ne	415180 <wcrtomb@plt+0x10640>  // b.any
  415104:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415108:	ldr	w8, [x8, #3732]
  41510c:	cbz	w8, 4151f8 <wcrtomb@plt+0x106b8>
  415110:	ldr	w8, [x22, #56]
  415114:	cmp	w8, #0x2
  415118:	mov	w8, #0x12                  	// #18
  41511c:	csel	w2, w8, wzr, eq  // eq = none
  415120:	b	4151fc <wcrtomb@plt+0x106bc>
  415124:	neg	w20, w28
  415128:	bl	404a10 <__errno_location@plt>
  41512c:	str	w20, [x0]
  415130:	ldr	x20, [sp, #32]
  415134:	adrp	x2, 41c000 <wcrtomb@plt+0x174c0>
  415138:	add	x2, x2, #0x358
  41513c:	mov	w28, #0x4e                  	// #78
  415140:	mov	x0, x26
  415144:	mov	w1, wzr
  415148:	bl	41c430 <wcrtomb@plt+0x178f0>
  41514c:	strb	w28, [x24]
  415150:	add	x0, sp, #0x38
  415154:	bl	424420 <wcrtomb@plt+0x1f8e0>
  415158:	ldr	x8, [x25]
  41515c:	add	x24, x8, x19
  415160:	ldrb	w8, [x24]
  415164:	cbz	w8, 415244 <wcrtomb@plt+0x10704>
  415168:	mov	x0, x24
  41516c:	bl	403f40 <strlen@plt>
  415170:	add	x8, x19, x0
  415174:	add	x19, x8, #0x1
  415178:	str	x19, [x23, #16]
  41517c:	b	41503c <wcrtomb@plt+0x104fc>
  415180:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415184:	ldrb	w8, [x8, #3141]
  415188:	cbz	w8, 41519c <wcrtomb@plt+0x1065c>
  41518c:	ldr	x8, [sp, #144]
  415190:	ldr	x9, [sp, #8]
  415194:	cmp	x9, x8
  415198:	b.ne	41514c <wcrtomb@plt+0x1060c>  // b.any
  41519c:	ldrb	w8, [x24]
  4151a0:	cmp	w8, #0x59
  4151a4:	b.eq	415150 <wcrtomb@plt+0x10610>  // b.none
  4151a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4151ac:	add	x8, x8, #0xc18
  4151b0:	ldr	x10, [sp, #232]
  4151b4:	ldp	x9, x8, [x8]
  4151b8:	cmp	x10, x9
  4151bc:	b.ge	415228 <wcrtomb@plt+0x106e8>  // b.tcont
  4151c0:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4151c4:	ldr	w10, [x10, #4028]
  4151c8:	cbz	w10, 41514c <wcrtomb@plt+0x1060c>
  4151cc:	ldr	x10, [sp, #248]
  4151d0:	cmp	x10, x9
  4151d4:	b.lt	41514c <wcrtomb@plt+0x1060c>  // b.tstop
  4151d8:	b.gt	415238 <wcrtomb@plt+0x106f8>
  4151dc:	ldr	x9, [sp, #256]
  4151e0:	cmp	w9, w8
  4151e4:	b.pl	415238 <wcrtomb@plt+0x106f8>  // b.nfrst
  4151e8:	b	41514c <wcrtomb@plt+0x1060c>
  4151ec:	adrp	x2, 41c000 <wcrtomb@plt+0x174c0>
  4151f0:	add	x2, x2, #0x358
  4151f4:	b	415140 <wcrtomb@plt+0x10600>
  4151f8:	mov	w2, #0x10                  	// #16
  4151fc:	mov	w8, #0x44                  	// #68
  415200:	strb	w8, [x24]
  415204:	ldr	x8, [sp, #40]
  415208:	add	x1, sp, #0x38
  41520c:	mov	x0, x26
  415210:	mov	x3, x24
  415214:	str	x8, [sp, #448]
  415218:	bl	415284 <wcrtomb@plt+0x10744>
  41521c:	add	x0, sp, #0x38
  415220:	bl	40c2a8 <wcrtomb@plt+0x7768>
  415224:	b	415150 <wcrtomb@plt+0x10610>
  415228:	b.gt	415238 <wcrtomb@plt+0x106f8>
  41522c:	ldr	x10, [sp, #240]
  415230:	cmp	w10, w8
  415234:	b.mi	4151c0 <wcrtomb@plt+0x10680>  // b.first
  415238:	mov	w8, #0x59                  	// #89
  41523c:	strb	w8, [x24]
  415240:	b	415150 <wcrtomb@plt+0x10610>
  415244:	mov	x0, x23
  415248:	bl	404700 <free@plt>
  41524c:	ldr	x24, [sp, #24]
  415250:	mov	x0, x20
  415254:	bl	41c5ac <wcrtomb@plt+0x17a6c>
  415258:	mov	x0, x24
  41525c:	bl	404700 <free@plt>
  415260:	mov	x0, x22
  415264:	add	sp, sp, #0x1f0
  415268:	ldp	x20, x19, [sp, #80]
  41526c:	ldp	x22, x21, [sp, #64]
  415270:	ldp	x24, x23, [sp, #48]
  415274:	ldp	x26, x25, [sp, #32]
  415278:	ldp	x28, x27, [sp, #16]
  41527c:	ldp	x29, x30, [sp], #96
  415280:	ret
  415284:	sub	sp, sp, #0x70
  415288:	stp	x29, x30, [sp, #16]
  41528c:	stp	x28, x27, [sp, #32]
  415290:	stp	x26, x25, [sp, #48]
  415294:	stp	x24, x23, [sp, #64]
  415298:	stp	x22, x21, [sp, #80]
  41529c:	stp	x20, x19, [sp, #96]
  4152a0:	ldr	x27, [x1, #88]
  4152a4:	add	x29, sp, #0x10
  4152a8:	mov	x20, x3
  4152ac:	mov	w23, w2
  4152b0:	mov	x22, x1
  4152b4:	mov	x19, x0
  4152b8:	bl	414c1c <wcrtomb@plt+0x100dc>
  4152bc:	cbz	x0, 4152f8 <wcrtomb@plt+0x107b8>
  4152c0:	ldrb	w8, [x0, #60]
  4152c4:	mov	x21, x0
  4152c8:	tbz	w8, #0, 4152dc <wcrtomb@plt+0x1079c>
  4152cc:	tbz	w23, #5, 4152ec <wcrtomb@plt+0x107ac>
  4152d0:	add	x0, x21, #0x58
  4152d4:	mov	x1, x19
  4152d8:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  4152dc:	ldr	x0, [x21, #88]
  4152e0:	mov	x1, x19
  4152e4:	bl	404660 <strcmp@plt>
  4152e8:	cbz	w0, 41536c <wcrtomb@plt+0x1082c>
  4152ec:	mov	w8, #0x4e                  	// #78
  4152f0:	strb	w8, [x20]
  4152f4:	b	4158a4 <wcrtomb@plt+0x10d64>
  4152f8:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4152fc:	ldr	x8, [x24, #1184]
  415300:	cbz	x8, 4153b4 <wcrtomb@plt+0x10874>
  415304:	ldp	x26, x25, [x22, #88]
  415308:	mov	w0, #0x60                  	// #96
  41530c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  415310:	mov	x21, x0
  415314:	str	xzr, [x0]
  415318:	str	xzr, [x0, #64]
  41531c:	str	wzr, [x0, #60]
  415320:	stp	xzr, xzr, [x0, #40]
  415324:	mov	w0, #0x1                   	// #1
  415328:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41532c:	stp	xzr, x0, [x21, #80]
  415330:	strb	wzr, [x0]
  415334:	ldr	x0, [x24, #1184]
  415338:	mov	x1, x21
  41533c:	str	xzr, [x21, #72]
  415340:	stp	x26, x25, [x21, #24]
  415344:	bl	43b71c <argp_parse@@Base+0x3e70>
  415348:	ldr	x8, [x21, #80]
  41534c:	mov	x24, x0
  415350:	mov	x0, x8
  415354:	bl	404700 <free@plt>
  415358:	ldr	x0, [x21, #88]
  41535c:	bl	404700 <free@plt>
  415360:	mov	x0, x21
  415364:	bl	404700 <free@plt>
  415368:	b	4153b8 <wcrtomb@plt+0x10878>
  41536c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415370:	ldrb	w8, [x8, #3088]
  415374:	cbz	w8, 415394 <wcrtomb@plt+0x10854>
  415378:	ldrb	w8, [x21, #60]
  41537c:	tbz	w8, #1, 415384 <wcrtomb@plt+0x10844>
  415380:	tbnz	x27, #63, 415394 <wcrtomb@plt+0x10854>
  415384:	ldr	x8, [x21, #24]
  415388:	ldr	x9, [x22, #88]
  41538c:	cmp	x8, x9
  415390:	b.ne	415548 <wcrtomb@plt+0x10a08>  // b.any
  415394:	ldr	x8, [x21, #32]
  415398:	ldr	x9, [x22, #96]
  41539c:	cmp	x8, x9
  4153a0:	b.ne	415548 <wcrtomb@plt+0x10a08>  // b.any
  4153a4:	mov	w8, wzr
  4153a8:	mov	w9, #0x1                   	// #1
  4153ac:	str	w9, [x21, #56]
  4153b0:	b	4156c4 <wcrtomb@plt+0x10b84>
  4153b4:	mov	x24, xzr
  4153b8:	ldp	x1, x2, [x22, #176]
  4153bc:	ldp	x3, x4, [x22, #88]
  4153c0:	lsr	x5, x27, #63
  4153c4:	mov	w6, #0x1                   	// #1
  4153c8:	mov	x0, x19
  4153cc:	mov	x7, xzr
  4153d0:	bl	417478 <wcrtomb@plt+0x12938>
  4153d4:	mov	x21, x0
  4153d8:	cbz	x24, 4154b8 <wcrtomb@plt+0x10978>
  4153dc:	ldr	x25, [x24, #88]
  4153e0:	mov	x1, x19
  4153e4:	mov	x0, x25
  4153e8:	bl	404660 <strcmp@plt>
  4153ec:	cbz	w0, 4154ac <wcrtomb@plt+0x1096c>
  4153f0:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4153f4:	ldrb	w8, [x8, #3721]
  4153f8:	tbz	w8, #5, 415458 <wcrtomb@plt+0x10918>
  4153fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415400:	ldr	x8, [x8, #4064]
  415404:	cbz	x8, 41540c <wcrtomb@plt+0x108cc>
  415408:	blr	x8
  41540c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415410:	add	x1, x1, #0xd99
  415414:	mov	w2, #0x5                   	// #5
  415418:	mov	x0, xzr
  41541c:	bl	404900 <dcgettext@plt>
  415420:	mov	x25, x0
  415424:	mov	x0, x19
  415428:	bl	444778 <argp_parse@@Base+0xcecc>
  41542c:	ldr	x1, [x24, #88]
  415430:	mov	x26, x0
  415434:	mov	w0, #0x1                   	// #1
  415438:	bl	444a58 <argp_parse@@Base+0xd1ac>
  41543c:	mov	x4, x0
  415440:	mov	w0, wzr
  415444:	mov	w1, wzr
  415448:	mov	x2, x25
  41544c:	mov	x3, x26
  415450:	bl	403fa0 <error@plt>
  415454:	ldr	x25, [x24, #88]
  415458:	ldr	w8, [x21, #60]
  41545c:	mov	x0, x25
  415460:	str	x24, [x21, #64]
  415464:	orr	w8, w8, #0x10
  415468:	str	w8, [x21, #60]
  41546c:	bl	403f40 <strlen@plt>
  415470:	mov	x24, x0
  415474:	mov	x0, x19
  415478:	bl	403f40 <strlen@plt>
  41547c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415480:	ldr	x27, [x8, #1192]
  415484:	cbz	x27, 4154ac <wcrtomb@plt+0x1096c>
  415488:	mov	x26, x0
  41548c:	add	x0, x27, #0x58
  415490:	mov	x1, x25
  415494:	mov	x2, x24
  415498:	mov	x3, x19
  41549c:	mov	x4, x26
  4154a0:	bl	41afa8 <wcrtomb@plt+0x16468>
  4154a4:	ldr	x27, [x27]
  4154a8:	cbnz	x27, 41548c <wcrtomb@plt+0x1094c>
  4154ac:	mov	w8, wzr
  4154b0:	mov	w9, #0x1                   	// #1
  4154b4:	b	415540 <wcrtomb@plt+0x10a00>
  4154b8:	ldr	w8, [x21, #60]
  4154bc:	orr	w8, w8, #0x8
  4154c0:	str	w8, [x21, #60]
  4154c4:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4154c8:	ldrb	w8, [x8, #3721]
  4154cc:	tbz	w8, #4, 415514 <wcrtomb@plt+0x109d4>
  4154d0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4154d4:	ldr	x8, [x8, #4064]
  4154d8:	cbz	x8, 4154e0 <wcrtomb@plt+0x109a0>
  4154dc:	blr	x8
  4154e0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4154e4:	add	x1, x1, #0xdc0
  4154e8:	mov	w2, #0x5                   	// #5
  4154ec:	mov	x0, xzr
  4154f0:	bl	404900 <dcgettext@plt>
  4154f4:	mov	x24, x0
  4154f8:	mov	x0, x19
  4154fc:	bl	444778 <argp_parse@@Base+0xcecc>
  415500:	mov	x3, x0
  415504:	mov	w0, wzr
  415508:	mov	w1, wzr
  41550c:	mov	x2, x24
  415510:	bl	403fa0 <error@plt>
  415514:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415518:	ldr	x8, [x8, #3888]
  41551c:	cbnz	x8, 415538 <wcrtomb@plt+0x109f8>
  415520:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415524:	add	x8, x8, #0xc18
  415528:	ldr	x10, [x22, #176]
  41552c:	ldr	x9, [x8]
  415530:	cmp	x10, x9
  415534:	b.ge	4158c8 <wcrtomb@plt+0x10d88>  // b.tcont
  415538:	mov	w9, #0x2                   	// #2
  41553c:	mov	w8, wzr
  415540:	str	w9, [x21, #56]
  415544:	b	4156d0 <wcrtomb@plt+0x10b90>
  415548:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41554c:	ldr	x8, [x24, #1184]
  415550:	cbz	x8, 4156a0 <wcrtomb@plt+0x10b60>
  415554:	ldp	x28, x26, [x22, #88]
  415558:	mov	w0, #0x60                  	// #96
  41555c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  415560:	mov	x25, x0
  415564:	str	xzr, [x0]
  415568:	str	xzr, [x0, #64]
  41556c:	str	wzr, [x0, #60]
  415570:	stp	xzr, xzr, [x0, #40]
  415574:	mov	w0, #0x1                   	// #1
  415578:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41557c:	stp	xzr, x0, [x25, #80]
  415580:	strb	wzr, [x0]
  415584:	ldr	x0, [x24, #1184]
  415588:	mov	x1, x25
  41558c:	str	xzr, [x25, #72]
  415590:	stp	x28, x26, [x25, #24]
  415594:	bl	43b71c <argp_parse@@Base+0x3e70>
  415598:	ldr	x8, [x25, #80]
  41559c:	mov	x24, x0
  4155a0:	mov	x0, x8
  4155a4:	bl	404700 <free@plt>
  4155a8:	ldr	x0, [x25, #88]
  4155ac:	bl	404700 <free@plt>
  4155b0:	mov	x0, x25
  4155b4:	bl	404700 <free@plt>
  4155b8:	cbz	x24, 4156a0 <wcrtomb@plt+0x10b60>
  4155bc:	ldr	x25, [x24, #88]
  4155c0:	mov	x1, x19
  4155c4:	mov	x0, x25
  4155c8:	bl	404660 <strcmp@plt>
  4155cc:	cbz	w0, 41568c <wcrtomb@plt+0x10b4c>
  4155d0:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4155d4:	ldrb	w8, [x8, #3721]
  4155d8:	tbz	w8, #5, 415638 <wcrtomb@plt+0x10af8>
  4155dc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4155e0:	ldr	x8, [x8, #4064]
  4155e4:	cbz	x8, 4155ec <wcrtomb@plt+0x10aac>
  4155e8:	blr	x8
  4155ec:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4155f0:	add	x1, x1, #0xd99
  4155f4:	mov	w2, #0x5                   	// #5
  4155f8:	mov	x0, xzr
  4155fc:	bl	404900 <dcgettext@plt>
  415600:	mov	x25, x0
  415604:	mov	x0, x19
  415608:	bl	444778 <argp_parse@@Base+0xcecc>
  41560c:	ldr	x1, [x24, #88]
  415610:	mov	x26, x0
  415614:	mov	w0, #0x1                   	// #1
  415618:	bl	444a58 <argp_parse@@Base+0xd1ac>
  41561c:	mov	x4, x0
  415620:	mov	w0, wzr
  415624:	mov	w1, wzr
  415628:	mov	x2, x25
  41562c:	mov	x3, x26
  415630:	bl	403fa0 <error@plt>
  415634:	ldr	x25, [x24, #88]
  415638:	ldr	w8, [x21, #60]
  41563c:	mov	x0, x25
  415640:	str	x24, [x21, #64]
  415644:	orr	w8, w8, #0x10
  415648:	str	w8, [x21, #60]
  41564c:	bl	403f40 <strlen@plt>
  415650:	mov	x24, x0
  415654:	mov	x0, x19
  415658:	bl	403f40 <strlen@plt>
  41565c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415660:	ldr	x28, [x8, #1192]
  415664:	cbz	x28, 41568c <wcrtomb@plt+0x10b4c>
  415668:	mov	x26, x0
  41566c:	add	x0, x28, #0x58
  415670:	mov	x1, x25
  415674:	mov	x2, x24
  415678:	mov	x3, x19
  41567c:	mov	x4, x26
  415680:	bl	41afa8 <wcrtomb@plt+0x16468>
  415684:	ldr	x28, [x28]
  415688:	cbnz	x28, 41566c <wcrtomb@plt+0x10b2c>
  41568c:	mov	w9, #0x1                   	// #1
  415690:	mov	w8, wzr
  415694:	str	w9, [x21, #56]
  415698:	tbz	x27, #63, 4156c4 <wcrtomb@plt+0x10b84>
  41569c:	b	4156b8 <wcrtomb@plt+0x10b78>
  4156a0:	mov	w8, #0x2                   	// #2
  4156a4:	str	w8, [x21, #56]
  4156a8:	ldur	q0, [x22, #88]
  4156ac:	mov	w8, #0x1                   	// #1
  4156b0:	stur	q0, [x21, #24]
  4156b4:	tbz	x27, #63, 4156c4 <wcrtomb@plt+0x10b84>
  4156b8:	ldr	w9, [x21, #60]
  4156bc:	orr	w9, w9, #0x2
  4156c0:	str	w9, [x21, #60]
  4156c4:	ldr	w9, [x21, #60]
  4156c8:	orr	w9, w9, #0x4
  4156cc:	str	w9, [x21, #60]
  4156d0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4156d4:	ldrb	w9, [x9, #3141]
  4156d8:	cbz	w9, 4156f4 <wcrtomb@plt+0x10bb4>
  4156dc:	ldr	x9, [x22, #392]
  4156e0:	cbz	x9, 4156f4 <wcrtomb@plt+0x10bb4>
  4156e4:	ldr	x10, [x22, #88]
  4156e8:	ldr	x9, [x9, #88]
  4156ec:	cmp	x10, x9
  4156f0:	b.ne	415764 <wcrtomb@plt+0x10c24>  // b.any
  4156f4:	tbz	w23, #4, 41570c <wcrtomb@plt+0x10bcc>
  4156f8:	ands	w9, w23, #0x3
  4156fc:	str	w9, [x21, #56]
  415700:	b.ne	41570c <wcrtomb@plt+0x10bcc>  // b.any
  415704:	mov	w9, #0x4e                  	// #78
  415708:	strb	w9, [x20]
  41570c:	cbz	w8, 4157d8 <wcrtomb@plt+0x10c98>
  415710:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  415714:	ldrb	w8, [x8, #3721]
  415718:	tbz	w8, #5, 4157d8 <wcrtomb@plt+0x10c98>
  41571c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415720:	ldr	x8, [x8, #4064]
  415724:	cbz	x8, 41572c <wcrtomb@plt+0x10bec>
  415728:	blr	x8
  41572c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415730:	add	x1, x1, #0xe0c
  415734:	mov	w2, #0x5                   	// #5
  415738:	mov	x0, xzr
  41573c:	bl	404900 <dcgettext@plt>
  415740:	mov	x23, x0
  415744:	mov	x0, x19
  415748:	bl	444778 <argp_parse@@Base+0xcecc>
  41574c:	mov	x3, x0
  415750:	mov	w0, wzr
  415754:	mov	w1, wzr
  415758:	mov	x2, x23
  41575c:	bl	403fa0 <error@plt>
  415760:	b	4157d8 <wcrtomb@plt+0x10c98>
  415764:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  415768:	ldrb	w8, [x8, #3722]
  41576c:	tbz	w8, #2, 4157b8 <wcrtomb@plt+0x10c78>
  415770:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415774:	ldr	x8, [x8, #4064]
  415778:	cbz	x8, 415780 <wcrtomb@plt+0x10c40>
  41577c:	blr	x8
  415780:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415784:	add	x1, x1, #0xdd5
  415788:	mov	w2, #0x5                   	// #5
  41578c:	mov	x0, xzr
  415790:	bl	404900 <dcgettext@plt>
  415794:	ldr	x8, [x21, #88]
  415798:	mov	x23, x0
  41579c:	mov	x0, x8
  4157a0:	bl	444778 <argp_parse@@Base+0xcecc>
  4157a4:	mov	x3, x0
  4157a8:	mov	w0, wzr
  4157ac:	mov	w1, wzr
  4157b0:	mov	x2, x23
  4157b4:	bl	403fa0 <error@plt>
  4157b8:	ldr	x23, [x21, #40]
  4157bc:	str	wzr, [x21, #56]
  4157c0:	cbz	x23, 4157d8 <wcrtomb@plt+0x10c98>
  4157c4:	ldr	x0, [x23, #24]
  4157c8:	bl	404700 <free@plt>
  4157cc:	mov	x0, x23
  4157d0:	bl	404700 <free@plt>
  4157d4:	str	xzr, [x21, #40]
  4157d8:	ldp	w9, w8, [x21, #56]
  4157dc:	orr	w8, w8, #0x1
  4157e0:	str	w8, [x21, #60]
  4157e4:	cbz	w9, 4158a4 <wcrtomb@plt+0x10d64>
  4157e8:	add	x1, sp, #0x8
  4157ec:	mov	x0, x22
  4157f0:	bl	40a6c4 <wcrtomb@plt+0x5b84>
  4157f4:	cmp	w0, #0x1
  4157f8:	b.eq	415844 <wcrtomb@plt+0x10d04>  // b.none
  4157fc:	cmp	w0, #0x2
  415800:	b.eq	415874 <wcrtomb@plt+0x10d34>  // b.none
  415804:	cmp	w0, #0x3
  415808:	b.ne	4158a4 <wcrtomb@plt+0x10d64>  // b.any
  41580c:	ldr	x22, [sp, #8]
  415810:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  415814:	add	x1, x1, #0xfec
  415818:	mov	w2, #0x5                   	// #5
  41581c:	mov	x0, xzr
  415820:	bl	404900 <dcgettext@plt>
  415824:	mov	x2, x0
  415828:	mov	x0, x19
  41582c:	mov	x1, x22
  415830:	bl	40a618 <wcrtomb@plt+0x5ad8>
  415834:	mov	w8, #0x4e                  	// #78
  415838:	strb	w8, [x20]
  41583c:	str	wzr, [x21, #56]
  415840:	b	4158a4 <wcrtomb@plt+0x10d64>
  415844:	ldr	x20, [sp, #8]
  415848:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41584c:	add	x1, x1, #0x71
  415850:	mov	w2, #0x5                   	// #5
  415854:	mov	x0, xzr
  415858:	bl	404900 <dcgettext@plt>
  41585c:	mov	x2, x0
  415860:	mov	x0, x19
  415864:	mov	x1, x20
  415868:	bl	40a618 <wcrtomb@plt+0x5ad8>
  41586c:	str	wzr, [x21, #56]
  415870:	b	41589c <wcrtomb@plt+0x10d5c>
  415874:	ldr	x20, [sp, #8]
  415878:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41587c:	add	x1, x1, #0x71
  415880:	mov	w2, #0x5                   	// #5
  415884:	mov	x0, xzr
  415888:	bl	404900 <dcgettext@plt>
  41588c:	mov	x2, x0
  415890:	mov	x0, x19
  415894:	mov	x1, x20
  415898:	bl	40a618 <wcrtomb@plt+0x5ad8>
  41589c:	ldr	x8, [sp, #8]
  4158a0:	str	x8, [x21, #72]
  4158a4:	mov	x0, x21
  4158a8:	ldp	x20, x19, [sp, #96]
  4158ac:	ldp	x22, x21, [sp, #80]
  4158b0:	ldp	x24, x23, [sp, #64]
  4158b4:	ldp	x26, x25, [sp, #48]
  4158b8:	ldp	x28, x27, [sp, #32]
  4158bc:	ldp	x29, x30, [sp, #16]
  4158c0:	add	sp, sp, #0x70
  4158c4:	ret
  4158c8:	ldr	x8, [x8, #8]
  4158cc:	b.gt	4158dc <wcrtomb@plt+0x10d9c>
  4158d0:	ldr	x10, [x22, #184]
  4158d4:	cmp	w10, w8
  4158d8:	b.mi	415538 <wcrtomb@plt+0x109f8>  // b.first
  4158dc:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4158e0:	ldr	w10, [x10, #4028]
  4158e4:	cbz	w10, 415904 <wcrtomb@plt+0x10dc4>
  4158e8:	ldr	x10, [x22, #192]
  4158ec:	cmp	x10, x9
  4158f0:	b.lt	415538 <wcrtomb@plt+0x109f8>  // b.tstop
  4158f4:	b.gt	415904 <wcrtomb@plt+0x10dc4>
  4158f8:	ldr	x9, [x22, #200]
  4158fc:	cmp	w9, w8
  415900:	b.mi	415538 <wcrtomb@plt+0x109f8>  // b.first
  415904:	mov	w9, #0x1                   	// #1
  415908:	b	41553c <wcrtomb@plt+0x109fc>
  41590c:	cbz	x0, 41591c <wcrtomb@plt+0x10ddc>
  415910:	ldr	x8, [x0, #40]
  415914:	cbz	x8, 415920 <wcrtomb@plt+0x10de0>
  415918:	ldr	x0, [x8]
  41591c:	ret
  415920:	mov	x0, xzr
  415924:	ret
  415928:	cbz	x0, 41593c <wcrtomb@plt+0x10dfc>
  41592c:	ldr	x8, [x0, #40]
  415930:	cbz	x8, 415940 <wcrtomb@plt+0x10e00>
  415934:	ldr	x8, [x8]
  415938:	b	415940 <wcrtomb@plt+0x10e00>
  41593c:	mov	x8, xzr
  415940:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415944:	add	x9, x9, #0xcbe
  415948:	cmp	x8, #0x0
  41594c:	csel	x0, x9, x8, eq  // eq = none
  415950:	ret
  415954:	sub	sp, sp, #0xb0
  415958:	stp	x24, x23, [sp, #128]
  41595c:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415960:	ldr	x8, [x23, #1192]
  415964:	stp	x29, x30, [sp, #96]
  415968:	stp	x26, x25, [sp, #112]
  41596c:	stp	x22, x21, [sp, #144]
  415970:	stp	x20, x19, [sp, #160]
  415974:	add	x29, sp, #0x60
  415978:	cbz	x8, 415c30 <wcrtomb@plt+0x110f0>
  41597c:	adrp	x3, 445000 <argp_parse@@Base+0xd754>
  415980:	adrp	x4, 404000 <sigprocmask@plt>
  415984:	mov	x19, x0
  415988:	add	x3, x3, #0x9e8
  41598c:	add	x4, x4, #0x700
  415990:	add	x0, sp, #0x8
  415994:	mov	x1, xzr
  415998:	mov	x2, xzr
  41599c:	bl	4467e8 <_obstack_begin@@Base>
  4159a0:	cbz	x19, 4159e4 <wcrtomb@plt+0x10ea4>
  4159a4:	ldr	x8, [x19, #40]
  4159a8:	cbz	x8, 4159e4 <wcrtomb@plt+0x10ea4>
  4159ac:	ldr	x21, [x8]
  4159b0:	cbz	x21, 4159e4 <wcrtomb@plt+0x10ea4>
  4159b4:	ldrb	w8, [x21]
  4159b8:	cbz	w8, 4159f4 <wcrtomb@plt+0x10eb4>
  4159bc:	mov	x20, xzr
  4159c0:	mov	x22, x21
  4159c4:	mov	x0, x22
  4159c8:	bl	403f40 <strlen@plt>
  4159cc:	add	x8, x0, #0x1
  4159d0:	add	x22, x22, x8
  4159d4:	ldrb	w9, [x22]
  4159d8:	add	x20, x8, x20
  4159dc:	cbnz	w9, 4159c4 <wcrtomb@plt+0x10e84>
  4159e0:	b	4159f8 <wcrtomb@plt+0x10eb8>
  4159e4:	mov	x20, xzr
  4159e8:	ldr	x24, [x23, #1192]
  4159ec:	cbnz	x24, 415a38 <wcrtomb@plt+0x10ef8>
  4159f0:	b	415b78 <wcrtomb@plt+0x11038>
  4159f4:	mov	x20, xzr
  4159f8:	ldp	x0, x8, [sp, #32]
  4159fc:	sub	x8, x8, x0
  415a00:	cmp	x8, x20
  415a04:	b.cs	415a18 <wcrtomb@plt+0x10ed8>  // b.hs, b.nlast
  415a08:	add	x0, sp, #0x8
  415a0c:	mov	x1, x20
  415a10:	bl	44693c <_obstack_newchunk@@Base>
  415a14:	ldr	x0, [sp, #32]
  415a18:	mov	x1, x21
  415a1c:	mov	x2, x20
  415a20:	bl	403ec0 <memcpy@plt>
  415a24:	ldr	x8, [sp, #32]
  415a28:	add	x8, x8, x20
  415a2c:	str	x8, [sp, #32]
  415a30:	ldr	x24, [x23, #1192]
  415a34:	cbz	x24, 415b78 <wcrtomb@plt+0x11038>
  415a38:	adrp	x21, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  415a3c:	mov	w25, #0x58                  	// #88
  415a40:	add	x21, x21, #0x66
  415a44:	b	415a68 <wcrtomb@plt+0x10f28>
  415a48:	ldr	x2, [x26, #88]
  415a4c:	add	x0, sp, #0x8
  415a50:	mov	x1, x21
  415a54:	bl	417818 <wcrtomb@plt+0x12cd8>
  415a58:	mov	x0, x22
  415a5c:	bl	404700 <free@plt>
  415a60:	ldr	x24, [x24]
  415a64:	cbz	x24, 415b78 <wcrtomb@plt+0x11038>
  415a68:	ldrb	w8, [x24, #60]
  415a6c:	tbz	w8, #4, 415a60 <wcrtomb@plt+0x10f20>
  415a70:	mov	x8, x24
  415a74:	cbz	x8, 415b50 <wcrtomb@plt+0x11010>
  415a78:	mov	x26, x8
  415a7c:	ldr	w9, [x8, #60]
  415a80:	ldr	x8, [x8, #64]
  415a84:	and	w9, w9, #0xffffffef
  415a88:	cmp	x8, x24
  415a8c:	str	w9, [x26, #60]
  415a90:	b.ne	415a74 <wcrtomb@plt+0x10f34>  // b.any
  415a94:	ldr	x0, [x24, #88]
  415a98:	bl	4390fc <argp_parse@@Base+0x1850>
  415a9c:	ldp	x8, x9, [sp, #32]
  415aa0:	mov	x22, x0
  415aa4:	cmp	x9, x8
  415aa8:	b.ne	415abc <wcrtomb@plt+0x10f7c>  // b.any
  415aac:	add	x0, sp, #0x8
  415ab0:	mov	w1, #0x1                   	// #1
  415ab4:	bl	44693c <_obstack_newchunk@@Base>
  415ab8:	ldr	x8, [sp, #32]
  415abc:	add	x9, x8, #0x1
  415ac0:	mov	x0, x22
  415ac4:	str	x9, [sp, #32]
  415ac8:	strb	w25, [x8]
  415acc:	bl	403f40 <strlen@plt>
  415ad0:	mov	x8, x0
  415ad4:	ldp	x0, x9, [sp, #32]
  415ad8:	add	x23, x8, #0x1
  415adc:	sub	x8, x9, x0
  415ae0:	cmp	x8, x23
  415ae4:	b.cs	415af8 <wcrtomb@plt+0x10fb8>  // b.hs, b.nlast
  415ae8:	add	x0, sp, #0x8
  415aec:	mov	x1, x23
  415af0:	bl	44693c <_obstack_newchunk@@Base>
  415af4:	ldr	x0, [sp, #32]
  415af8:	mov	x1, x22
  415afc:	mov	x2, x23
  415b00:	bl	403ec0 <memcpy@plt>
  415b04:	ldr	x8, [sp, #32]
  415b08:	add	x0, sp, #0x8
  415b0c:	mov	x2, x21
  415b10:	add	x8, x8, x23
  415b14:	str	x8, [sp, #32]
  415b18:	ldr	x1, [x24, #88]
  415b1c:	bl	417818 <wcrtomb@plt+0x12cd8>
  415b20:	cmp	x26, x24
  415b24:	b.eq	415a48 <wcrtomb@plt+0x10f08>  // b.none
  415b28:	mov	x23, x24
  415b2c:	ldr	x8, [x23, #64]
  415b30:	ldr	x2, [x23, #88]
  415b34:	add	x0, sp, #0x8
  415b38:	ldr	x1, [x8, #88]
  415b3c:	bl	417818 <wcrtomb@plt+0x12cd8>
  415b40:	ldr	x23, [x23, #64]
  415b44:	cmp	x23, x26
  415b48:	b.ne	415b2c <wcrtomb@plt+0x10fec>  // b.any
  415b4c:	b	415a48 <wcrtomb@plt+0x10f08>
  415b50:	mov	x22, x24
  415b54:	ldr	x8, [x22, #64]
  415b58:	cbz	x8, 415a60 <wcrtomb@plt+0x10f20>
  415b5c:	ldr	x1, [x8, #88]
  415b60:	ldr	x2, [x22, #88]
  415b64:	add	x0, sp, #0x8
  415b68:	bl	417818 <wcrtomb@plt+0x12cd8>
  415b6c:	ldr	x22, [x22, #64]
  415b70:	cbnz	x22, 415b54 <wcrtomb@plt+0x11014>
  415b74:	b	415a60 <wcrtomb@plt+0x10f20>
  415b78:	cbz	x19, 415c24 <wcrtomb@plt+0x110e4>
  415b7c:	ldp	x9, x8, [sp, #24]
  415b80:	sub	x9, x8, x9
  415b84:	cmp	x9, x20
  415b88:	b.eq	415c24 <wcrtomb@plt+0x110e4>  // b.none
  415b8c:	ldr	x9, [sp, #40]
  415b90:	cmp	x9, x8
  415b94:	b.ne	415ba8 <wcrtomb@plt+0x11068>  // b.any
  415b98:	add	x0, sp, #0x8
  415b9c:	mov	w1, #0x1                   	// #1
  415ba0:	bl	44693c <_obstack_newchunk@@Base>
  415ba4:	ldr	x8, [sp, #32]
  415ba8:	add	x9, x8, #0x1
  415bac:	str	x9, [sp, #32]
  415bb0:	strb	wzr, [x8]
  415bb4:	ldr	x20, [x19, #40]
  415bb8:	ldr	x0, [x20, #24]
  415bbc:	bl	404700 <free@plt>
  415bc0:	mov	x0, x20
  415bc4:	bl	404700 <free@plt>
  415bc8:	ldp	x0, x8, [sp, #24]
  415bcc:	cmp	x8, x0
  415bd0:	b.ne	415be0 <wcrtomb@plt+0x110a0>  // b.any
  415bd4:	ldrb	w9, [sp, #88]
  415bd8:	orr	w9, w9, #0x2
  415bdc:	strb	w9, [sp, #88]
  415be0:	ldr	x10, [sp, #56]
  415be4:	ldr	x11, [sp, #16]
  415be8:	ldr	x9, [sp, #40]
  415bec:	add	x8, x10, x8
  415bf0:	bic	x8, x8, x10
  415bf4:	sub	x10, x8, x11
  415bf8:	sub	x11, x9, x11
  415bfc:	cmp	x10, x11
  415c00:	str	x8, [sp, #32]
  415c04:	b.ls	415c10 <wcrtomb@plt+0x110d0>  // b.plast
  415c08:	mov	x8, x9
  415c0c:	str	x9, [sp, #32]
  415c10:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415c14:	add	x1, x1, #0xe2b
  415c18:	str	x8, [sp, #24]
  415c1c:	bl	4176e0 <wcrtomb@plt+0x12ba0>
  415c20:	str	x0, [x19, #40]
  415c24:	add	x0, sp, #0x8
  415c28:	mov	x1, xzr
  415c2c:	bl	446ab4 <_obstack_free@@Base>
  415c30:	ldp	x20, x19, [sp, #160]
  415c34:	ldp	x22, x21, [sp, #144]
  415c38:	ldp	x24, x23, [sp, #128]
  415c3c:	ldp	x26, x25, [sp, #112]
  415c40:	ldp	x29, x30, [sp, #96]
  415c44:	add	sp, sp, #0xb0
  415c48:	ret
  415c4c:	sub	sp, sp, #0x50
  415c50:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415c54:	add	x1, x1, #0xcc3
  415c58:	mov	w0, #0x1                   	// #1
  415c5c:	stp	x29, x30, [sp, #48]
  415c60:	stp	x20, x19, [sp, #64]
  415c64:	add	x29, sp, #0x30
  415c68:	bl	404350 <__printf_chk@plt>
  415c6c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415c70:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415c74:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415c78:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415c7c:	add	x1, x1, #0xcee
  415c80:	add	x2, x2, #0xd0a
  415c84:	add	x3, x3, #0xd15
  415c88:	add	x4, x4, #0xd19
  415c8c:	mov	w0, #0x1                   	// #1
  415c90:	bl	404350 <__printf_chk@plt>
  415c94:	add	x3, sp, #0x18
  415c98:	mov	w2, #0x1                   	// #1
  415c9c:	mov	x0, xzr
  415ca0:	mov	x1, xzr
  415ca4:	bl	41b06c <wcrtomb@plt+0x1652c>
  415ca8:	mov	x20, x0
  415cac:	mov	x3, sp
  415cb0:	mov	w0, #0x1                   	// #1
  415cb4:	mov	w2, #0x1                   	// #1
  415cb8:	mov	x1, xzr
  415cbc:	bl	41b06c <wcrtomb@plt+0x1652c>
  415cc0:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415cc4:	add	x19, x19, #0xd1d
  415cc8:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415ccc:	mov	x4, x0
  415cd0:	add	x2, x2, #0xe2f
  415cd4:	mov	w0, #0x1                   	// #1
  415cd8:	mov	x1, x19
  415cdc:	mov	x3, x20
  415ce0:	bl	404350 <__printf_chk@plt>
  415ce4:	add	x3, sp, #0x18
  415ce8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  415cec:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  415cf0:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  415cf4:	bl	41b06c <wcrtomb@plt+0x1652c>
  415cf8:	mov	x20, x0
  415cfc:	mov	x3, sp
  415d00:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  415d04:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  415d08:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  415d0c:	bl	41b06c <wcrtomb@plt+0x1652c>
  415d10:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415d14:	mov	x4, x0
  415d18:	add	x2, x2, #0xe33
  415d1c:	mov	w0, #0x1                   	// #1
  415d20:	mov	x1, x19
  415d24:	mov	x3, x20
  415d28:	bl	404350 <__printf_chk@plt>
  415d2c:	mov	w2, #0xc9ff                	// #51711
  415d30:	add	x3, sp, #0x18
  415d34:	movk	w2, #0x3b9a, lsl #16
  415d38:	mov	x0, xzr
  415d3c:	mov	x1, xzr
  415d40:	bl	41b06c <wcrtomb@plt+0x1652c>
  415d44:	mov	x20, x0
  415d48:	mov	w0, #0xc9ff                	// #51711
  415d4c:	mov	w2, #0xc9ff                	// #51711
  415d50:	mov	x3, sp
  415d54:	movk	w0, #0x3b9a, lsl #16
  415d58:	movk	w2, #0x3b9a, lsl #16
  415d5c:	mov	x1, xzr
  415d60:	bl	41b06c <wcrtomb@plt+0x1652c>
  415d64:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415d68:	mov	x4, x0
  415d6c:	add	x2, x2, #0xe41
  415d70:	mov	w0, #0x1                   	// #1
  415d74:	mov	x1, x19
  415d78:	mov	x3, x20
  415d7c:	bl	404350 <__printf_chk@plt>
  415d80:	add	x3, sp, #0x18
  415d84:	mov	x2, #0xffffffffffffffff    	// #-1
  415d88:	mov	x0, xzr
  415d8c:	mov	x1, xzr
  415d90:	bl	41b06c <wcrtomb@plt+0x1652c>
  415d94:	mov	x20, x0
  415d98:	mov	x3, sp
  415d9c:	mov	x0, #0xffffffffffffffff    	// #-1
  415da0:	mov	x2, #0xffffffffffffffff    	// #-1
  415da4:	mov	x1, xzr
  415da8:	bl	41b06c <wcrtomb@plt+0x1652c>
  415dac:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  415db0:	mov	x4, x0
  415db4:	add	x2, x2, #0xeaf
  415db8:	mov	w0, #0x1                   	// #1
  415dbc:	mov	x1, x19
  415dc0:	mov	x3, x20
  415dc4:	bl	404350 <__printf_chk@plt>
  415dc8:	add	x3, sp, #0x18
  415dcc:	mov	x2, #0xffffffffffffffff    	// #-1
  415dd0:	mov	x0, xzr
  415dd4:	mov	x1, xzr
  415dd8:	bl	41b06c <wcrtomb@plt+0x1652c>
  415ddc:	mov	x20, x0
  415de0:	mov	x3, sp
  415de4:	mov	x0, #0xffffffffffffffff    	// #-1
  415de8:	mov	x2, #0xffffffffffffffff    	// #-1
  415dec:	mov	x1, xzr
  415df0:	bl	41b06c <wcrtomb@plt+0x1652c>
  415df4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415df8:	mov	x4, x0
  415dfc:	add	x2, x2, #0xe50
  415e00:	mov	w0, #0x1                   	// #1
  415e04:	mov	x1, x19
  415e08:	mov	x3, x20
  415e0c:	bl	404350 <__printf_chk@plt>
  415e10:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  415e14:	add	x1, x1, #0x783
  415e18:	mov	w0, #0x1                   	// #1
  415e1c:	bl	404350 <__printf_chk@plt>
  415e20:	ldp	x20, x19, [sp, #64]
  415e24:	ldp	x29, x30, [sp, #48]
  415e28:	add	sp, sp, #0x50
  415e2c:	ret
  415e30:	sub	sp, sp, #0x100
  415e34:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415e38:	ldr	w8, [x8, #3836]
  415e3c:	stp	x20, x19, [sp, #240]
  415e40:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415e44:	ldr	x0, [x20, #3888]
  415e48:	mov	w9, #0x42                  	// #66
  415e4c:	cmp	w8, #0x0
  415e50:	mov	w8, #0x242                 	// #578
  415e54:	csel	w1, w8, w9, eq  // eq = none
  415e58:	mov	w2, #0x1b6                 	// #438
  415e5c:	stp	x29, x30, [sp, #160]
  415e60:	stp	x28, x27, [sp, #176]
  415e64:	stp	x26, x25, [sp, #192]
  415e68:	stp	x24, x23, [sp, #208]
  415e6c:	stp	x22, x21, [sp, #224]
  415e70:	add	x29, sp, #0xa0
  415e74:	stp	xzr, xzr, [sp]
  415e78:	bl	404280 <open@plt>
  415e7c:	tbnz	w0, #31, 415ee4 <wcrtomb@plt+0x113a4>
  415e80:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415e84:	add	x1, x1, #0xd37
  415e88:	mov	w19, w0
  415e8c:	bl	404370 <fdopen@plt>
  415e90:	adrp	x28, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415e94:	str	x0, [x28, #1208]
  415e98:	cbz	x0, 415ef0 <wcrtomb@plt+0x113b0>
  415e9c:	bl	41ebc4 <wcrtomb@plt+0x1a084>
  415ea0:	bl	41ec34 <wcrtomb@plt+0x1a0f4>
  415ea4:	ldr	x3, [x28, #1208]
  415ea8:	add	x0, sp, #0x8
  415eac:	mov	x1, sp
  415eb0:	mov	w2, #0xa                   	// #10
  415eb4:	bl	404a70 <__getdelim@plt>
  415eb8:	cmp	x0, #0x1
  415ebc:	b.lt	416578 <wcrtomb@plt+0x11a38>  // b.tstop
  415ec0:	ldr	x19, [sp, #8]
  415ec4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415ec8:	add	x1, x1, #0xd3a
  415ecc:	mov	w2, #0x7                   	// #7
  415ed0:	mov	x0, x19
  415ed4:	bl	404300 <strncmp@plt>
  415ed8:	cbz	w0, 415f04 <wcrtomb@plt+0x113c4>
  415edc:	mov	x19, xzr
  415ee0:	b	415fd8 <wcrtomb@plt+0x11498>
  415ee4:	ldr	x0, [x20, #3888]
  415ee8:	bl	42a86c <wcrtomb@plt+0x25d2c>
  415eec:	b	416594 <wcrtomb@plt+0x11a54>
  415ef0:	ldr	x0, [x20, #3888]
  415ef4:	bl	42a86c <wcrtomb@plt+0x25d2c>
  415ef8:	mov	w0, w19
  415efc:	bl	404520 <close@plt>
  415f00:	b	416594 <wcrtomb@plt+0x11a54>
  415f04:	ldrb	w8, [x19, #7]
  415f08:	cmp	w8, #0x2d
  415f0c:	b.eq	415f50 <wcrtomb@plt+0x11410>  // b.none
  415f10:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415f14:	ldr	x8, [x8, #4064]
  415f18:	cbz	x8, 415f20 <wcrtomb@plt+0x113e0>
  415f1c:	blr	x8
  415f20:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415f24:	add	x1, x1, #0xd42
  415f28:	mov	w2, #0x5                   	// #5
  415f2c:	mov	x0, xzr
  415f30:	bl	404900 <dcgettext@plt>
  415f34:	mov	x2, x0
  415f38:	mov	w0, #0x1                   	// #1
  415f3c:	mov	w1, wzr
  415f40:	bl	403fa0 <error@plt>
  415f44:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415f48:	mov	w9, #0x2                   	// #2
  415f4c:	str	w9, [x8, #2416]
  415f50:	adrp	x20, 45c000 <_obstack_memory_used@@Base+0x154b0>
  415f54:	add	x19, x19, #0x9
  415f58:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415f5c:	add	x20, x20, #0xd42
  415f60:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415f64:	mov	w22, #0x2                   	// #2
  415f68:	b	415f78 <wcrtomb@plt+0x11438>
  415f6c:	cmp	w8, #0x2d
  415f70:	b.eq	415fb4 <wcrtomb@plt+0x11474>  // b.none
  415f74:	add	x19, x19, #0x1
  415f78:	ldurb	w8, [x19, #-1]
  415f7c:	cbnz	w8, 415f6c <wcrtomb@plt+0x1142c>
  415f80:	ldr	x8, [x26, #4064]
  415f84:	cbz	x8, 415f8c <wcrtomb@plt+0x1144c>
  415f88:	blr	x8
  415f8c:	mov	w2, #0x5                   	// #5
  415f90:	mov	x0, xzr
  415f94:	mov	x1, x20
  415f98:	bl	404900 <dcgettext@plt>
  415f9c:	mov	x2, x0
  415fa0:	mov	w0, #0x1                   	// #1
  415fa4:	mov	w1, wzr
  415fa8:	bl	403fa0 <error@plt>
  415fac:	str	w22, [x21, #2416]
  415fb0:	b	415f74 <wcrtomb@plt+0x11434>
  415fb4:	mov	w2, #0xa                   	// #10
  415fb8:	mov	x0, x19
  415fbc:	mov	x1, xzr
  415fc0:	mov	w3, wzr
  415fc4:	bl	404400 <__strtoul_internal@plt>
  415fc8:	mov	x19, x0
  415fcc:	cmp	x0, #0x2
  415fd0:	b.cs	416120 <wcrtomb@plt+0x115e0>  // b.hs, b.nlast
  415fd4:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  415fd8:	ldr	x0, [sp, #8]
  415fdc:	cmp	w19, #0x1
  415fe0:	str	xzr, [sp, #72]
  415fe4:	str	xzr, [sp, #48]
  415fe8:	b.ne	416014 <wcrtomb@plt+0x114d4>  // b.any
  415fec:	ldr	x3, [x28, #1208]
  415ff0:	add	x0, sp, #0x48
  415ff4:	add	x1, sp, #0x30
  415ff8:	mov	w2, #0xa                   	// #10
  415ffc:	bl	404a70 <__getdelim@plt>
  416000:	cmp	x0, #0x1
  416004:	b.lt	4163ac <wcrtomb@plt+0x1186c>  // b.tstop
  416008:	ldr	x21, [sp, #72]
  41600c:	mov	w20, #0x2                   	// #2
  416010:	b	416030 <wcrtomb@plt+0x114f0>
  416014:	bl	4044e0 <strdup@plt>
  416018:	mov	x21, x0
  41601c:	str	x0, [sp, #72]
  416020:	bl	403f40 <strlen@plt>
  416024:	add	x8, x0, #0x1
  416028:	mov	w20, #0x1                   	// #1
  41602c:	str	x8, [sp, #48]
  416030:	add	x1, sp, #0x18
  416034:	mov	x0, x21
  416038:	mov	w2, wzr
  41603c:	bl	41b370 <wcrtomb@plt+0x16830>
  416040:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416044:	add	x8, x8, #0xc18
  416048:	stp	x0, x1, [x8]
  41604c:	tbnz	x1, #63, 41678c <wcrtomb@plt+0x11c4c>
  416050:	cmp	w19, #0x1
  416054:	b.ne	4163d4 <wcrtomb@plt+0x11894>  // b.any
  416058:	ldr	x8, [sp, #24]
  41605c:	ldrb	w9, [x8]
  416060:	cbz	w9, 4163d4 <wcrtomb@plt+0x11894>
  416064:	add	x23, x8, #0x1
  416068:	bl	404a10 <__errno_location@plt>
  41606c:	mov	x22, x0
  416070:	str	wzr, [x0]
  416074:	add	x1, sp, #0x18
  416078:	mov	w2, #0xa                   	// #10
  41607c:	mov	x0, x23
  416080:	mov	w3, wzr
  416084:	bl	404400 <__strtoul_internal@plt>
  416088:	ldr	w21, [x22]
  41608c:	mov	w8, #0xc9ff                	// #51711
  416090:	movk	w8, #0x3b9a, lsl #16
  416094:	cmp	x0, x8
  416098:	b.ls	4163bc <wcrtomb@plt+0x1187c>  // b.plast
  41609c:	cbnz	w21, 4163bc <wcrtomb@plt+0x1187c>
  4160a0:	mov	w21, #0x22                  	// #34
  4160a4:	str	w21, [x22]
  4160a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4160ac:	ldr	x8, [x8, #4064]
  4160b0:	cbz	x8, 4160bc <wcrtomb@plt+0x1157c>
  4160b4:	blr	x8
  4160b8:	ldr	w21, [x22]
  4160bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4160c0:	ldr	x0, [x8, #3888]
  4160c4:	bl	444778 <argp_parse@@Base+0xcecc>
  4160c8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4160cc:	mov	x22, x0
  4160d0:	add	x1, x1, #0xe5f
  4160d4:	mov	w2, #0x5                   	// #5
  4160d8:	mov	x0, xzr
  4160dc:	bl	404900 <dcgettext@plt>
  4160e0:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4160e4:	mov	x5, x0
  4160e8:	add	x2, x2, #0xe54
  4160ec:	mov	w0, wzr
  4160f0:	mov	w1, w21
  4160f4:	mov	x3, x22
  4160f8:	mov	x4, x20
  4160fc:	bl	403fa0 <error@plt>
  416100:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416104:	mov	w9, #0x2                   	// #2
  416108:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41610c:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  416110:	mov	x0, #0xffffffffffffffff    	// #-1
  416114:	str	w9, [x8, #2416]
  416118:	str	x11, [x10, #3096]
  41611c:	b	4163cc <wcrtomb@plt+0x1188c>
  416120:	b.ne	4165b4 <wcrtomb@plt+0x11a74>  // b.any
  416124:	adrp	x3, 445000 <argp_parse@@Base+0xd754>
  416128:	adrp	x4, 404000 <sigprocmask@plt>
  41612c:	add	x3, x3, #0x9e8
  416130:	add	x4, x4, #0x700
  416134:	add	x0, sp, #0x48
  416138:	mov	x1, xzr
  41613c:	mov	x2, xzr
  416140:	bl	4467e8 <_obstack_begin@@Base>
  416144:	ldr	x0, [x28, #1208]
  416148:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41614c:	add	x1, x1, #0xc18
  416150:	bl	417974 <wcrtomb@plt+0x12e34>
  416154:	ldr	x0, [x28, #1208]
  416158:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41615c:	add	x1, x1, #0xe2f
  416160:	add	x4, sp, #0x28
  416164:	mov	w3, #0x1                   	// #1
  416168:	mov	x2, xzr
  41616c:	bl	417a40 <wcrtomb@plt+0x12f00>
  416170:	tbz	w0, #0, 416574 <wcrtomb@plt+0x11a34>
  416174:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  416178:	adrp	x20, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41617c:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x154b0>
  416180:	add	x19, x19, #0xeaf
  416184:	add	x20, x20, #0xe50
  416188:	add	x21, x21, #0xe2f
  41618c:	b	4161b8 <wcrtomb@plt+0x11678>
  416190:	add	x0, sp, #0x48
  416194:	mov	x1, x25
  416198:	bl	446ab4 <_obstack_free@@Base>
  41619c:	ldr	x0, [x28, #1208]
  4161a0:	add	x4, sp, #0x28
  4161a4:	mov	w3, #0x1                   	// #1
  4161a8:	mov	x1, x21
  4161ac:	mov	x2, xzr
  4161b0:	bl	417a40 <wcrtomb@plt+0x12f00>
  4161b4:	tbz	w0, #0, 416574 <wcrtomb@plt+0x11a34>
  4161b8:	ldr	x0, [x28, #1208]
  4161bc:	ldr	x27, [sp, #40]
  4161c0:	add	x1, sp, #0x18
  4161c4:	bl	417974 <wcrtomb@plt+0x12e34>
  4161c8:	ldr	x0, [x28, #1208]
  4161cc:	add	x4, sp, #0x28
  4161d0:	mov	x3, #0xffffffffffffffff    	// #-1
  4161d4:	mov	x1, x19
  4161d8:	mov	x2, xzr
  4161dc:	bl	417a40 <wcrtomb@plt+0x12f00>
  4161e0:	tbz	w0, #0, 41673c <wcrtomb@plt+0x11bfc>
  4161e4:	ldr	x0, [x28, #1208]
  4161e8:	ldr	x22, [sp, #40]
  4161ec:	add	x4, sp, #0x28
  4161f0:	mov	x3, #0xffffffffffffffff    	// #-1
  4161f4:	mov	x1, x20
  4161f8:	mov	x2, xzr
  4161fc:	bl	417a40 <wcrtomb@plt+0x12f00>
  416200:	tbz	w0, #0, 41673c <wcrtomb@plt+0x11bfc>
  416204:	ldr	x0, [x28, #1208]
  416208:	ldr	x23, [sp, #40]
  41620c:	add	x1, sp, #0x48
  416210:	add	x2, sp, #0x10
  416214:	bl	417dc8 <wcrtomb@plt+0x13288>
  416218:	cbnz	w0, 41673c <wcrtomb@plt+0x11bfc>
  41621c:	ldp	x24, x8, [sp, #88]
  416220:	cmp	x8, x24
  416224:	b.ne	416234 <wcrtomb@plt+0x116f4>  // b.any
  416228:	ldrb	w9, [sp, #152]
  41622c:	orr	w9, w9, #0x2
  416230:	strb	w9, [sp, #152]
  416234:	ldr	x9, [sp, #120]
  416238:	ldr	x10, [sp, #80]
  41623c:	ldr	x11, [sp, #104]
  416240:	add	x8, x9, x8
  416244:	bic	x8, x8, x9
  416248:	sub	x12, x11, x10
  41624c:	sub	x9, x8, x10
  416250:	cmp	x9, x12
  416254:	csel	x8, x11, x8, hi  // hi = pmore
  416258:	stp	x8, x8, [sp, #88]
  41625c:	ldr	x0, [x28, #1208]
  416260:	add	x1, sp, #0x48
  416264:	add	x2, sp, #0x10
  416268:	bl	417dc8 <wcrtomb@plt+0x13288>
  41626c:	cbnz	w0, 41627c <wcrtomb@plt+0x1173c>
  416270:	ldr	x8, [sp, #16]
  416274:	cmp	x8, #0x1
  416278:	b.hi	41625c <wcrtomb@plt+0x1171c>  // b.pmore
  41627c:	ldr	x0, [x28, #1208]
  416280:	ldp	x8, x9, [x0, #8]
  416284:	cmp	x8, x9
  416288:	b.cs	416320 <wcrtomb@plt+0x117e0>  // b.hs, b.nlast
  41628c:	add	x9, x8, #0x1
  416290:	str	x9, [x0, #8]
  416294:	ldrb	w0, [x8]
  416298:	cbnz	w0, 416328 <wcrtomb@plt+0x117e8>
  41629c:	ldp	x25, x8, [sp, #88]
  4162a0:	cmp	x8, x25
  4162a4:	b.ne	4162b4 <wcrtomb@plt+0x11774>  // b.any
  4162a8:	ldrb	w9, [sp, #152]
  4162ac:	orr	w9, w9, #0x2
  4162b0:	strb	w9, [sp, #152]
  4162b4:	ldr	x9, [sp, #120]
  4162b8:	ldr	x10, [sp, #80]
  4162bc:	ldr	x11, [sp, #104]
  4162c0:	ldp	x1, x2, [sp, #24]
  4162c4:	add	x8, x9, x8
  4162c8:	bic	x8, x8, x9
  4162cc:	cmp	x27, #0x0
  4162d0:	sub	x12, x11, x10
  4162d4:	sub	x9, x8, x10
  4162d8:	cset	w5, ne  // ne = any
  4162dc:	cmp	x9, x12
  4162e0:	csel	x8, x11, x8, hi  // hi = pmore
  4162e4:	mov	x0, x24
  4162e8:	mov	x3, x22
  4162ec:	mov	x4, x23
  4162f0:	mov	w6, wzr
  4162f4:	mov	x7, x25
  4162f8:	stp	x8, x8, [sp, #88]
  4162fc:	bl	417478 <wcrtomb@plt+0x12938>
  416300:	ldr	x8, [sp, #80]
  416304:	cmp	x25, x8
  416308:	b.ls	416190 <wcrtomb@plt+0x11650>  // b.plast
  41630c:	ldr	x8, [sp, #104]
  416310:	cmp	x25, x8
  416314:	b.cs	416190 <wcrtomb@plt+0x11650>  // b.hs, b.nlast
  416318:	stp	x25, x25, [sp, #88]
  41631c:	b	41619c <wcrtomb@plt+0x1165c>
  416320:	bl	404ac0 <__uflow@plt>
  416324:	cbz	w0, 41629c <wcrtomb@plt+0x1175c>
  416328:	ldr	x8, [x26, #4064]
  41632c:	cbz	x8, 416334 <wcrtomb@plt+0x117f4>
  416330:	blr	x8
  416334:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  416338:	add	x1, x1, #0xedf
  41633c:	mov	w2, #0x5                   	// #5
  416340:	mov	x0, xzr
  416344:	bl	404900 <dcgettext@plt>
  416348:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41634c:	ldr	x8, [x8, #3888]
  416350:	mov	x19, x0
  416354:	mov	x0, x8
  416358:	bl	444778 <argp_parse@@Base+0xcecc>
  41635c:	ldr	x8, [x28, #1208]
  416360:	mov	x20, x0
  416364:	mov	x0, x8
  416368:	bl	404830 <ftello@plt>
  41636c:	add	x1, sp, #0x30
  416370:	bl	43cff0 <argp_parse@@Base+0x5744>
  416374:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  416378:	mov	x21, x0
  41637c:	add	x1, x1, #0xeef
  416380:	mov	w2, #0x5                   	// #5
  416384:	mov	x0, xzr
  416388:	bl	404900 <dcgettext@plt>
  41638c:	mov	x5, x0
  416390:	mov	w0, wzr
  416394:	mov	w1, wzr
  416398:	mov	x2, x19
  41639c:	mov	x3, x20
  4163a0:	mov	x4, x21
  4163a4:	bl	403fa0 <error@plt>
  4163a8:	bl	40e96c <wcrtomb@plt+0x9e2c>
  4163ac:	ldr	x0, [x20, #3888]
  4163b0:	bl	42a97c <wcrtomb@plt+0x25e3c>
  4163b4:	ldr	x8, [sp, #72]
  4163b8:	b	41656c <wcrtomb@plt+0x11a2c>
  4163bc:	cbnz	w21, 4160a8 <wcrtomb@plt+0x11568>
  4163c0:	ldr	x8, [sp, #24]
  4163c4:	cmp	x23, x8
  4163c8:	b.eq	4160a8 <wcrtomb@plt+0x11568>  // b.none
  4163cc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4163d0:	str	x0, [x8, #3104]
  4163d4:	ldr	x3, [x28, #1208]
  4163d8:	add	x0, sp, #0x48
  4163dc:	add	x1, sp, #0x30
  4163e0:	mov	w2, #0xa                   	// #10
  4163e4:	bl	404a70 <__getdelim@plt>
  4163e8:	ldr	x8, [sp, #72]
  4163ec:	cmp	w0, #0x1
  4163f0:	b.lt	41656c <wcrtomb@plt+0x11a2c>  // b.tstop
  4163f4:	add	x20, x20, #0x1
  4163f8:	sub	w9, w0, #0x1
  4163fc:	ldrb	w27, [x8]
  416400:	sxtw	x9, w9
  416404:	ldrb	w10, [x8, x9]
  416408:	cmp	w27, #0x2b
  41640c:	cinc	x0, x8, eq  // eq = none
  416410:	cmp	w10, #0xa
  416414:	b.ne	41641c <wcrtomb@plt+0x118dc>  // b.any
  416418:	strb	wzr, [x8, x9]
  41641c:	cmp	w19, #0x1
  416420:	b.ne	4164a4 <wcrtomb@plt+0x11964>  // b.any
  416424:	add	x1, sp, #0x18
  416428:	mov	w2, wzr
  41642c:	bl	41b370 <wcrtomb@plt+0x16830>
  416430:	tbnz	x1, #63, 416678 <wcrtomb@plt+0x11b38>
  416434:	ldr	x25, [sp, #24]
  416438:	ldrb	w8, [x25]
  41643c:	cmp	w8, #0x20
  416440:	b.ne	416678 <wcrtomb@plt+0x11b38>  // b.any
  416444:	mov	x21, x0
  416448:	bl	404a10 <__errno_location@plt>
  41644c:	mov	x23, x0
  416450:	str	wzr, [x0]
  416454:	add	x1, sp, #0x18
  416458:	mov	w2, #0xa                   	// #10
  41645c:	mov	x0, x25
  416460:	mov	w3, wzr
  416464:	bl	404400 <__strtoul_internal@plt>
  416468:	ldr	w24, [x23]
  41646c:	mov	w8, #0xc9ff                	// #51711
  416470:	movk	w8, #0x3b9a, lsl #16
  416474:	mov	x22, x0
  416478:	cmp	x0, x8
  41647c:	b.ls	416484 <wcrtomb@plt+0x11944>  // b.plast
  416480:	cbz	w24, 4166d8 <wcrtomb@plt+0x11b98>
  416484:	cbnz	w24, 4166e0 <wcrtomb@plt+0x11ba0>
  416488:	ldr	x0, [sp, #24]
  41648c:	cmp	x25, x0
  416490:	b.eq	4166d0 <wcrtomb@plt+0x11b90>  // b.none
  416494:	ldrb	w8, [x0]
  416498:	cmp	w8, #0x20
  41649c:	b.eq	4164ac <wcrtomb@plt+0x1196c>  // b.none
  4164a0:	b	4166d0 <wcrtomb@plt+0x11b90>
  4164a4:	mov	x22, xzr
  4164a8:	mov	x21, xzr
  4164ac:	add	x1, sp, #0x18
  4164b0:	mov	x3, #0xffffffffffffffff    	// #-1
  4164b4:	mov	x2, xzr
  4164b8:	bl	41b080 <wcrtomb@plt+0x16540>
  4164bc:	ldr	x26, [sp, #24]
  4164c0:	mov	x24, x0
  4164c4:	bl	404a10 <__errno_location@plt>
  4164c8:	ldr	w25, [x0]
  4164cc:	mov	x23, x0
  4164d0:	cbnz	w25, 4165f8 <wcrtomb@plt+0x11ab8>
  4164d4:	ldrb	w8, [x26]
  4164d8:	cmp	w8, #0x20
  4164dc:	b.ne	4165f8 <wcrtomb@plt+0x11ab8>  // b.any
  4164e0:	add	x1, sp, #0x18
  4164e4:	mov	x3, #0xffffffffffffffff    	// #-1
  4164e8:	mov	x0, x26
  4164ec:	mov	x2, xzr
  4164f0:	bl	41b080 <wcrtomb@plt+0x16540>
  4164f4:	ldr	w25, [x23]
  4164f8:	cbnz	w25, 416628 <wcrtomb@plt+0x11ae8>
  4164fc:	ldr	x8, [sp, #24]
  416500:	ldrb	w9, [x8]
  416504:	cmp	w9, #0x20
  416508:	b.ne	416628 <wcrtomb@plt+0x11ae8>  // b.any
  41650c:	add	x25, x8, #0x1
  416510:	mov	x26, x0
  416514:	cmp	w27, #0x2b
  416518:	mov	x0, x25
  41651c:	cset	w23, eq  // eq = none
  416520:	bl	41aad0 <wcrtomb@plt+0x15f90>
  416524:	mov	x0, x25
  416528:	mov	x1, x21
  41652c:	mov	x2, x22
  416530:	mov	x3, x24
  416534:	mov	x4, x26
  416538:	mov	w5, w23
  41653c:	mov	w6, wzr
  416540:	mov	x7, xzr
  416544:	bl	417478 <wcrtomb@plt+0x12938>
  416548:	ldr	x3, [x28, #1208]
  41654c:	add	x0, sp, #0x48
  416550:	add	x1, sp, #0x30
  416554:	mov	w2, #0xa                   	// #10
  416558:	bl	404a70 <__getdelim@plt>
  41655c:	ldr	x8, [sp, #72]
  416560:	cmp	w0, #0x0
  416564:	add	x20, x20, #0x1
  416568:	b.gt	4163f8 <wcrtomb@plt+0x118b8>
  41656c:	mov	x0, x8
  416570:	bl	404700 <free@plt>
  416574:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416578:	ldr	x8, [x28, #1208]
  41657c:	ldrb	w8, [x8]
  416580:	tbz	w8, #5, 41658c <wcrtomb@plt+0x11a4c>
  416584:	ldr	x0, [x20, #3888]
  416588:	bl	42a97c <wcrtomb@plt+0x25e3c>
  41658c:	ldr	x0, [sp, #8]
  416590:	bl	404700 <free@plt>
  416594:	ldp	x20, x19, [sp, #240]
  416598:	ldp	x22, x21, [sp, #224]
  41659c:	ldp	x24, x23, [sp, #208]
  4165a0:	ldp	x26, x25, [sp, #192]
  4165a4:	ldp	x28, x27, [sp, #176]
  4165a8:	ldp	x29, x30, [sp, #160]
  4165ac:	add	sp, sp, #0x100
  4165b0:	ret
  4165b4:	ldr	x8, [x26, #4064]
  4165b8:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4165bc:	cbz	x8, 4165c4 <wcrtomb@plt+0x11a84>
  4165c0:	blr	x8
  4165c4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4165c8:	add	x1, x1, #0xd5e
  4165cc:	mov	w2, #0x5                   	// #5
  4165d0:	mov	x0, xzr
  4165d4:	bl	404900 <dcgettext@plt>
  4165d8:	mov	x2, x0
  4165dc:	mov	w0, #0x1                   	// #1
  4165e0:	mov	w1, wzr
  4165e4:	mov	x3, x19
  4165e8:	bl	403fa0 <error@plt>
  4165ec:	mov	w8, #0x2                   	// #2
  4165f0:	str	w8, [x21, #2416]
  4165f4:	b	416578 <wcrtomb@plt+0x11a38>
  4165f8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4165fc:	ldr	x8, [x8, #4064]
  416600:	cbz	x8, 41660c <wcrtomb@plt+0x11acc>
  416604:	blr	x8
  416608:	ldr	w25, [x23]
  41660c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416610:	ldr	x0, [x8, #3888]
  416614:	bl	444778 <argp_parse@@Base+0xcecc>
  416618:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41661c:	mov	x19, x0
  416620:	add	x1, x1, #0xeb4
  416624:	b	416654 <wcrtomb@plt+0x11b14>
  416628:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41662c:	ldr	x8, [x8, #4064]
  416630:	cbz	x8, 41663c <wcrtomb@plt+0x11afc>
  416634:	blr	x8
  416638:	ldr	w25, [x23]
  41663c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416640:	ldr	x0, [x8, #3888]
  416644:	bl	444778 <argp_parse@@Base+0xcecc>
  416648:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41664c:	mov	x19, x0
  416650:	add	x1, x1, #0xeca
  416654:	mov	w2, #0x5                   	// #5
  416658:	mov	x0, xzr
  41665c:	bl	404900 <dcgettext@plt>
  416660:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  416664:	mov	x5, x0
  416668:	add	x2, x2, #0xe54
  41666c:	mov	w0, wzr
  416670:	mov	w1, w25
  416674:	b	41672c <wcrtomb@plt+0x11bec>
  416678:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41667c:	ldr	x8, [x8, #4064]
  416680:	cbz	x8, 416688 <wcrtomb@plt+0x11b48>
  416684:	blr	x8
  416688:	bl	404a10 <__errno_location@plt>
  41668c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416690:	ldr	w19, [x0]
  416694:	ldr	x0, [x8, #3888]
  416698:	bl	444778 <argp_parse@@Base+0xcecc>
  41669c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4166a0:	mov	x21, x0
  4166a4:	add	x1, x1, #0xe72
  4166a8:	mov	w2, #0x5                   	// #5
  4166ac:	mov	x0, xzr
  4166b0:	bl	404900 <dcgettext@plt>
  4166b4:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4166b8:	mov	x5, x0
  4166bc:	add	x2, x2, #0xe54
  4166c0:	mov	w0, wzr
  4166c4:	mov	w1, w19
  4166c8:	mov	x3, x21
  4166cc:	b	416730 <wcrtomb@plt+0x11bf0>
  4166d0:	mov	w24, wzr
  4166d4:	b	4166e0 <wcrtomb@plt+0x11ba0>
  4166d8:	mov	w24, #0x22                  	// #34
  4166dc:	str	w24, [x23]
  4166e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4166e4:	ldr	x8, [x8, #4064]
  4166e8:	cbz	x8, 4166f4 <wcrtomb@plt+0x11bb4>
  4166ec:	blr	x8
  4166f0:	ldr	w24, [x23]
  4166f4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4166f8:	ldr	x0, [x8, #3888]
  4166fc:	bl	444778 <argp_parse@@Base+0xcecc>
  416700:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  416704:	mov	x19, x0
  416708:	add	x1, x1, #0xe8c
  41670c:	mov	w2, #0x5                   	// #5
  416710:	mov	x0, xzr
  416714:	bl	404900 <dcgettext@plt>
  416718:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41671c:	mov	x5, x0
  416720:	add	x2, x2, #0xe54
  416724:	mov	w0, wzr
  416728:	mov	w1, w24
  41672c:	mov	x3, x19
  416730:	mov	x4, x20
  416734:	bl	403fa0 <error@plt>
  416738:	bl	40e96c <wcrtomb@plt+0x9e2c>
  41673c:	ldr	x8, [x26, #4064]
  416740:	cbz	x8, 416748 <wcrtomb@plt+0x11c08>
  416744:	blr	x8
  416748:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41674c:	ldr	x0, [x8, #3888]
  416750:	bl	444778 <argp_parse@@Base+0xcecc>
  416754:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  416758:	mov	x19, x0
  41675c:	add	x1, x1, #0xf09
  416760:	mov	w2, #0x5                   	// #5
  416764:	mov	x0, xzr
  416768:	bl	404900 <dcgettext@plt>
  41676c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  416770:	mov	x4, x0
  416774:	add	x2, x2, #0x5d8
  416778:	mov	w0, wzr
  41677c:	mov	w1, wzr
  416780:	mov	x3, x19
  416784:	bl	403fa0 <error@plt>
  416788:	bl	40e96c <wcrtomb@plt+0x9e2c>
  41678c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416790:	ldr	x8, [x8, #4064]
  416794:	cbz	x8, 41679c <wcrtomb@plt+0x11c5c>
  416798:	blr	x8
  41679c:	bl	404a10 <__errno_location@plt>
  4167a0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4167a4:	ldr	w19, [x0]
  4167a8:	ldr	x0, [x8, #3888]
  4167ac:	bl	444778 <argp_parse@@Base+0xcecc>
  4167b0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4167b4:	mov	x21, x0
  4167b8:	add	x1, x1, #0xe5f
  4167bc:	b	4166a8 <wcrtomb@plt+0x11b68>
  4167c0:	sub	sp, sp, #0x50
  4167c4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4167c8:	stp	x20, x19, [sp, #64]
  4167cc:	ldr	x19, [x8, #1208]
  4167d0:	stp	x29, x30, [sp, #32]
  4167d4:	stp	x22, x21, [sp, #48]
  4167d8:	add	x29, sp, #0x20
  4167dc:	cbz	x19, 4168e8 <wcrtomb@plt+0x11da8>
  4167e0:	mov	x0, x19
  4167e4:	mov	x1, xzr
  4167e8:	mov	w2, wzr
  4167ec:	bl	4046d0 <fseeko@plt>
  4167f0:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4167f4:	cbz	w0, 416800 <wcrtomb@plt+0x11cc0>
  4167f8:	ldr	x0, [x21, #3888]
  4167fc:	bl	42ae88 <wcrtomb@plt+0x26348>
  416800:	mov	x0, x19
  416804:	bl	404170 <fileno@plt>
  416808:	bl	421928 <wcrtomb@plt+0x1cde8>
  41680c:	cbz	w0, 416818 <wcrtomb@plt+0x11cd8>
  416810:	ldr	x0, [x21, #3888]
  416814:	bl	42b250 <wcrtomb@plt+0x26710>
  416818:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41681c:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x154b0>
  416820:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0x154b0>
  416824:	add	x2, x2, #0xd8a
  416828:	add	x3, x3, #0xd3a
  41682c:	add	x4, x4, #0xd94
  416830:	mov	w1, #0x1                   	// #1
  416834:	mov	w5, #0x2                   	// #2
  416838:	mov	x0, x19
  41683c:	bl	404650 <__fprintf_chk@plt>
  416840:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416844:	add	x22, x22, #0xeb8
  416848:	ldr	x0, [x22]
  41684c:	add	x1, sp, #0x8
  416850:	bl	43cf60 <argp_parse@@Base+0x56b4>
  416854:	mov	x20, x0
  416858:	bl	403f40 <strlen@plt>
  41685c:	add	x1, x0, #0x1
  416860:	mov	w2, #0x1                   	// #1
  416864:	mov	x0, x20
  416868:	mov	x3, x19
  41686c:	bl	403f20 <fwrite_unlocked@plt>
  416870:	ldr	x0, [x22, #8]
  416874:	add	x1, sp, #0x8
  416878:	bl	43d080 <argp_parse@@Base+0x57d4>
  41687c:	mov	x20, x0
  416880:	bl	403f40 <strlen@plt>
  416884:	add	x1, x0, #0x1
  416888:	mov	w2, #0x1                   	// #1
  41688c:	mov	x0, x20
  416890:	mov	x3, x19
  416894:	bl	403f20 <fwrite_unlocked@plt>
  416898:	ldr	w9, [x19]
  41689c:	and	w8, w9, #0x20
  4168a0:	tbnz	w9, #5, 4168c8 <wcrtomb@plt+0x11d88>
  4168a4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4168a8:	ldr	x0, [x9, #1176]
  4168ac:	cbz	x0, 4168c8 <wcrtomb@plt+0x11d88>
  4168b0:	adrp	x1, 416000 <wcrtomb@plt+0x114c0>
  4168b4:	add	x1, x1, #0x8fc
  4168b8:	mov	x2, x19
  4168bc:	bl	43b900 <argp_parse@@Base+0x4054>
  4168c0:	ldr	w8, [x19]
  4168c4:	and	w8, w8, #0x20
  4168c8:	cbz	w8, 4168d4 <wcrtomb@plt+0x11d94>
  4168cc:	ldr	x0, [x21, #3888]
  4168d0:	bl	42b4d4 <wcrtomb@plt+0x26994>
  4168d4:	mov	x0, x19
  4168d8:	bl	4041e0 <fclose@plt>
  4168dc:	cbz	w0, 4168e8 <wcrtomb@plt+0x11da8>
  4168e0:	ldr	x0, [x21, #3888]
  4168e4:	bl	42a53c <wcrtomb@plt+0x259fc>
  4168e8:	ldp	x20, x19, [sp, #64]
  4168ec:	ldp	x22, x21, [sp, #48]
  4168f0:	ldp	x29, x30, [sp, #32]
  4168f4:	add	sp, sp, #0x50
  4168f8:	ret
  4168fc:	sub	sp, sp, #0x60
  416900:	stp	x29, x30, [sp, #32]
  416904:	stp	x22, x21, [sp, #64]
  416908:	stp	x20, x19, [sp, #80]
  41690c:	ldr	w8, [x0, #60]
  416910:	mov	x19, x1
  416914:	str	x23, [sp, #48]
  416918:	add	x29, sp, #0x20
  41691c:	tbz	w8, #2, 416af8 <wcrtomb@plt+0x11fb8>
  416920:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0x184b0>
  416924:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  416928:	add	x9, x9, #0x91d
  41692c:	add	x10, x10, #0x3e8
  416930:	tst	w8, #0x2
  416934:	ldp	x8, x11, [x19, #40]
  416938:	csel	x21, x10, x9, eq  // eq = none
  41693c:	ldrb	w1, [x21]
  416940:	mov	x20, x0
  416944:	cmp	x8, x11
  416948:	b.cs	416b1c <wcrtomb@plt+0x11fdc>  // b.hs, b.nlast
  41694c:	add	x9, x8, #0x1
  416950:	str	x9, [x19, #40]
  416954:	strb	w1, [x8]
  416958:	ldp	x8, x9, [x19, #40]
  41695c:	ldrb	w1, [x21, #1]
  416960:	cmp	x8, x9
  416964:	b.cs	416b30 <wcrtomb@plt+0x11ff0>  // b.hs, b.nlast
  416968:	add	x9, x8, #0x1
  41696c:	str	x9, [x19, #40]
  416970:	strb	w1, [x8]
  416974:	ldr	x0, [x20, #8]
  416978:	add	x3, sp, #0x8
  41697c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  416980:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  416984:	bl	41b06c <wcrtomb@plt+0x1652c>
  416988:	mov	x21, x0
  41698c:	bl	403f40 <strlen@plt>
  416990:	add	x1, x0, #0x1
  416994:	mov	w2, #0x1                   	// #1
  416998:	mov	x0, x21
  41699c:	mov	x3, x19
  4169a0:	bl	403f20 <fwrite_unlocked@plt>
  4169a4:	ldr	x0, [x20, #16]
  4169a8:	add	x1, sp, #0x8
  4169ac:	bl	43cf60 <argp_parse@@Base+0x56b4>
  4169b0:	mov	x21, x0
  4169b4:	bl	403f40 <strlen@plt>
  4169b8:	add	x1, x0, #0x1
  4169bc:	mov	w2, #0x1                   	// #1
  4169c0:	mov	x0, x21
  4169c4:	mov	x3, x19
  4169c8:	bl	403f20 <fwrite_unlocked@plt>
  4169cc:	ldr	x0, [x20, #24]
  4169d0:	add	x3, sp, #0x8
  4169d4:	mov	x2, #0xffffffffffffffff    	// #-1
  4169d8:	mov	x1, xzr
  4169dc:	bl	41b06c <wcrtomb@plt+0x1652c>
  4169e0:	mov	x21, x0
  4169e4:	bl	403f40 <strlen@plt>
  4169e8:	add	x1, x0, #0x1
  4169ec:	mov	w2, #0x1                   	// #1
  4169f0:	mov	x0, x21
  4169f4:	mov	x3, x19
  4169f8:	bl	403f20 <fwrite_unlocked@plt>
  4169fc:	ldr	x0, [x20, #32]
  416a00:	add	x3, sp, #0x8
  416a04:	mov	x2, #0xffffffffffffffff    	// #-1
  416a08:	mov	x1, xzr
  416a0c:	bl	41b06c <wcrtomb@plt+0x1652c>
  416a10:	mov	x21, x0
  416a14:	bl	403f40 <strlen@plt>
  416a18:	add	x1, x0, #0x1
  416a1c:	mov	w2, #0x1                   	// #1
  416a20:	mov	x0, x21
  416a24:	mov	x3, x19
  416a28:	bl	403f20 <fwrite_unlocked@plt>
  416a2c:	ldr	x21, [x20, #88]
  416a30:	mov	x0, x21
  416a34:	bl	403f40 <strlen@plt>
  416a38:	add	x1, x0, #0x1
  416a3c:	mov	w2, #0x1                   	// #1
  416a40:	mov	x0, x21
  416a44:	mov	x3, x19
  416a48:	bl	403f20 <fwrite_unlocked@plt>
  416a4c:	ldr	x22, [x20, #40]
  416a50:	cbz	x22, 416ac8 <wcrtomb@plt+0x11f88>
  416a54:	mov	w0, #0x18                  	// #24
  416a58:	bl	4459e8 <argp_parse@@Base+0xe13c>
  416a5c:	str	x22, [x0]
  416a60:	str	wzr, [x0, #8]
  416a64:	str	xzr, [x0, #16]
  416a68:	ldr	x8, [x22, #16]
  416a6c:	mov	x20, x0
  416a70:	cbz	x8, 416ac0 <wcrtomb@plt+0x11f80>
  416a74:	ldr	x8, [x22, #24]
  416a78:	mov	w23, #0x1                   	// #1
  416a7c:	ldr	x8, [x8]
  416a80:	sub	x21, x8, #0x1
  416a84:	mov	x0, x21
  416a88:	str	x23, [x20, #16]
  416a8c:	bl	403f40 <strlen@plt>
  416a90:	add	x1, x0, #0x1
  416a94:	mov	w2, #0x1                   	// #1
  416a98:	mov	x0, x21
  416a9c:	mov	x3, x19
  416aa0:	bl	403f20 <fwrite_unlocked@plt>
  416aa4:	ldr	x8, [x22, #16]
  416aa8:	cmp	x23, x8
  416aac:	b.cs	416ac0 <wcrtomb@plt+0x11f80>  // b.hs, b.nlast
  416ab0:	ldr	x8, [x22, #24]
  416ab4:	ldr	x8, [x8, x23, lsl #3]
  416ab8:	add	x23, x23, #0x1
  416abc:	b	416a80 <wcrtomb@plt+0x11f40>
  416ac0:	mov	x0, x20
  416ac4:	bl	404700 <free@plt>
  416ac8:	ldp	x8, x9, [x19, #40]
  416acc:	cmp	x8, x9
  416ad0:	b.cs	416b3c <wcrtomb@plt+0x11ffc>  // b.hs, b.nlast
  416ad4:	add	x9, x8, #0x1
  416ad8:	str	x9, [x19, #40]
  416adc:	strb	wzr, [x8]
  416ae0:	ldp	x8, x9, [x19, #40]
  416ae4:	cmp	x8, x9
  416ae8:	b.cs	416b54 <wcrtomb@plt+0x12014>  // b.hs, b.nlast
  416aec:	add	x9, x8, #0x1
  416af0:	str	x9, [x19, #40]
  416af4:	strb	wzr, [x8]
  416af8:	ldrb	w8, [x19]
  416afc:	ldp	x20, x19, [sp, #80]
  416b00:	ldp	x22, x21, [sp, #64]
  416b04:	ldr	x23, [sp, #48]
  416b08:	ldp	x29, x30, [sp, #32]
  416b0c:	tst	w8, #0x20
  416b10:	cset	w0, eq  // eq = none
  416b14:	add	sp, sp, #0x60
  416b18:	ret
  416b1c:	mov	x0, x19
  416b20:	bl	4045e0 <__overflow@plt>
  416b24:	cmn	w0, #0x1
  416b28:	b.ne	416958 <wcrtomb@plt+0x11e18>  // b.any
  416b2c:	b	416974 <wcrtomb@plt+0x11e34>
  416b30:	mov	x0, x19
  416b34:	bl	4045e0 <__overflow@plt>
  416b38:	b	416974 <wcrtomb@plt+0x11e34>
  416b3c:	mov	x0, x19
  416b40:	mov	w1, wzr
  416b44:	bl	4045e0 <__overflow@plt>
  416b48:	cmn	w0, #0x1
  416b4c:	b.ne	416ae0 <wcrtomb@plt+0x11fa0>  // b.any
  416b50:	b	416af8 <wcrtomb@plt+0x11fb8>
  416b54:	mov	x0, x19
  416b58:	mov	w1, wzr
  416b5c:	bl	4045e0 <__overflow@plt>
  416b60:	b	416af8 <wcrtomb@plt+0x11fb8>
  416b64:	stp	x29, x30, [sp, #-96]!
  416b68:	stp	x28, x27, [sp, #16]
  416b6c:	stp	x26, x25, [sp, #32]
  416b70:	stp	x24, x23, [sp, #48]
  416b74:	stp	x22, x21, [sp, #64]
  416b78:	stp	x20, x19, [sp, #80]
  416b7c:	ldrb	w8, [x0, #376]
  416b80:	mov	x29, sp
  416b84:	cbz	w8, 416b9c <wcrtomb@plt+0x1205c>
  416b88:	ldr	x8, [x0, #384]
  416b8c:	mov	x19, x0
  416b90:	cbz	x8, 416ba4 <wcrtomb@plt+0x12064>
  416b94:	mov	w0, #0x1                   	// #1
  416b98:	b	416c88 <wcrtomb@plt+0x12148>
  416b9c:	mov	w0, wzr
  416ba0:	b	416c88 <wcrtomb@plt+0x12148>
  416ba4:	ldr	x20, [x19, #136]
  416ba8:	mov	x0, x20
  416bac:	bl	4459e8 <argp_parse@@Base+0xe13c>
  416bb0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416bb4:	ldr	x8, [x8, #3032]
  416bb8:	mov	x21, x0
  416bbc:	mov	x0, x8
  416bc0:	bl	405670 <wcrtomb@plt+0xb30>
  416bc4:	mov	x0, x19
  416bc8:	bl	404cf8 <wcrtomb@plt+0x1b8>
  416bcc:	cbz	x20, 416c6c <wcrtomb@plt+0x1212c>
  416bd0:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x144b0>
  416bd4:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416bd8:	add	x22, x22, #0xcd8
  416bdc:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416be0:	mov	w28, #0x2                   	// #2
  416be4:	mov	x23, x21
  416be8:	b	416c48 <wcrtomb@plt+0x12108>
  416bec:	mov	w2, #0x5                   	// #5
  416bf0:	mov	x0, xzr
  416bf4:	mov	x1, x22
  416bf8:	bl	404900 <dcgettext@plt>
  416bfc:	mov	x2, x0
  416c00:	mov	w0, #0x1                   	// #1
  416c04:	mov	w1, wzr
  416c08:	bl	403fa0 <error@plt>
  416c0c:	str	w28, [x27, #2416]
  416c10:	mov	x0, x24
  416c14:	bl	4056b4 <wcrtomb@plt+0xb74>
  416c18:	cmp	x0, x20
  416c1c:	csel	x25, x20, x0, hi  // hi = pmore
  416c20:	mov	x0, x23
  416c24:	mov	x1, x24
  416c28:	mov	x2, x25
  416c2c:	bl	403ec0 <memcpy@plt>
  416c30:	add	x8, x24, x25
  416c34:	sub	x0, x8, #0x1
  416c38:	add	x23, x23, x25
  416c3c:	bl	405670 <wcrtomb@plt+0xb30>
  416c40:	subs	x20, x20, x25
  416c44:	b.eq	416c6c <wcrtomb@plt+0x1212c>  // b.none
  416c48:	mov	x0, x20
  416c4c:	bl	404de4 <wcrtomb@plt+0x2a4>
  416c50:	bl	40535c <wcrtomb@plt+0x81c>
  416c54:	mov	x24, x0
  416c58:	cbnz	x0, 416c10 <wcrtomb@plt+0x120d0>
  416c5c:	ldr	x8, [x26, #4064]
  416c60:	cbz	x8, 416bec <wcrtomb@plt+0x120ac>
  416c64:	blr	x8
  416c68:	b	416bec <wcrtomb@plt+0x120ac>
  416c6c:	bl	404d84 <wcrtomb@plt+0x244>
  416c70:	ldrb	w8, [x19, #376]
  416c74:	mov	w9, #0x1                   	// #1
  416c78:	str	x21, [x19, #384]
  416c7c:	strb	w9, [x19, #377]
  416c80:	cmp	w8, #0x0
  416c84:	cset	w0, ne  // ne = any
  416c88:	ldp	x20, x19, [sp, #80]
  416c8c:	ldp	x22, x21, [sp, #64]
  416c90:	ldp	x24, x23, [sp, #48]
  416c94:	ldp	x26, x25, [sp, #32]
  416c98:	ldp	x28, x27, [sp, #16]
  416c9c:	ldp	x29, x30, [sp], #96
  416ca0:	ret
  416ca4:	sub	sp, sp, #0xf0
  416ca8:	stp	x20, x19, [sp, #224]
  416cac:	mov	x20, x0
  416cb0:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416cb4:	add	x0, x0, #0xc50
  416cb8:	stp	x29, x30, [sp, #144]
  416cbc:	stp	x28, x27, [sp, #160]
  416cc0:	stp	x26, x25, [sp, #176]
  416cc4:	stp	x24, x23, [sp, #192]
  416cc8:	stp	x22, x21, [sp, #208]
  416ccc:	add	x29, sp, #0x90
  416cd0:	bl	416b64 <wcrtomb@plt+0x12024>
  416cd4:	tbz	w0, #0, 417334 <wcrtomb@plt+0x127f4>
  416cd8:	mov	x0, x20
  416cdc:	mov	w1, wzr
  416ce0:	bl	41b8c0 <wcrtomb@plt+0x16d80>
  416ce4:	cbz	x0, 417334 <wcrtomb@plt+0x127f4>
  416ce8:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416cec:	ldr	x21, [x26, #3536]
  416cf0:	mov	x19, x0
  416cf4:	ldrb	w8, [x21]
  416cf8:	cbz	w8, 416d98 <wcrtomb@plt+0x12258>
  416cfc:	mov	w9, wzr
  416d00:	mov	w22, wzr
  416d04:	mov	w25, wzr
  416d08:	mov	x23, x21
  416d0c:	b	416d38 <wcrtomb@plt+0x121f8>
  416d10:	ldrb	w8, [x23, #1]
  416d14:	cbz	w8, 416d8c <wcrtomb@plt+0x1224c>
  416d18:	mov	w22, #0x54                  	// #84
  416d1c:	mov	x0, x23
  416d20:	bl	403f40 <strlen@plt>
  416d24:	add	x23, x0, x23
  416d28:	ldrb	w8, [x23, #1]!
  416d2c:	cmp	w22, #0x0
  416d30:	cset	w9, ne  // ne = any
  416d34:	cbz	w8, 417164 <wcrtomb@plt+0x12624>
  416d38:	tbz	w9, #0, 416d48 <wcrtomb@plt+0x12208>
  416d3c:	and	w24, w8, #0xff
  416d40:	cmp	w22, w24
  416d44:	b.ne	4171a4 <wcrtomb@plt+0x12664>  // b.any
  416d48:	and	w8, w8, #0xff
  416d4c:	cmp	w8, #0x52
  416d50:	b.eq	416d10 <wcrtomb@plt+0x121d0>  // b.none
  416d54:	cmp	w8, #0x54
  416d58:	b.eq	416d70 <wcrtomb@plt+0x12230>  // b.none
  416d5c:	cmp	w8, #0x58
  416d60:	b.ne	416d1c <wcrtomb@plt+0x121dc>  // b.any
  416d64:	cbnz	w25, 4172bc <wcrtomb@plt+0x1277c>
  416d68:	mov	w25, #0x1                   	// #1
  416d6c:	b	416d1c <wcrtomb@plt+0x121dc>
  416d70:	cmp	w22, #0x54
  416d74:	b.ne	4171e4 <wcrtomb@plt+0x126a4>  // b.any
  416d78:	mov	w22, wzr
  416d7c:	cbnz	w25, 416d1c <wcrtomb@plt+0x121dc>
  416d80:	ldrb	w8, [x23, #1]
  416d84:	cbnz	w8, 416d1c <wcrtomb@plt+0x121dc>
  416d88:	b	4172d8 <wcrtomb@plt+0x12798>
  416d8c:	cbz	w25, 4172f4 <wcrtomb@plt+0x127b4>
  416d90:	mov	w25, wzr
  416d94:	b	416d18 <wcrtomb@plt+0x121d8>
  416d98:	str	x19, [sp, #8]
  416d9c:	mov	w28, #0x5858                	// #22616
  416da0:	adrp	x25, 45c000 <_obstack_memory_used@@Base+0x154b0>
  416da4:	mov	x22, xzr
  416da8:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416dac:	mov	w27, #0x2f                  	// #47
  416db0:	movk	w28, #0x58, lsl #16
  416db4:	add	x25, x25, #0xfb9
  416db8:	b	416e18 <wcrtomb@plt+0x122d8>
  416dbc:	add	x23, x21, #0x1
  416dc0:	mov	x0, x23
  416dc4:	bl	403f40 <strlen@plt>
  416dc8:	mov	x24, x0
  416dcc:	add	x1, x0, #0xc
  416dd0:	mov	x0, x22
  416dd4:	bl	445a68 <argp_parse@@Base+0xe1bc>
  416dd8:	mov	x1, x23
  416ddc:	mov	x2, x24
  416de0:	mov	x22, x0
  416de4:	bl	403ec0 <memcpy@plt>
  416de8:	ldr	x8, [x25]
  416dec:	add	x9, x22, x24
  416df0:	mov	x0, x22
  416df4:	strb	w27, [x9]
  416df8:	str	w28, [x9, #8]
  416dfc:	stur	x8, [x9, #1]
  416e00:	bl	4045a0 <mkdtemp@plt>
  416e04:	cbz	x0, 417200 <wcrtomb@plt+0x126c0>
  416e08:	mov	x0, x21
  416e0c:	bl	403f40 <strlen@plt>
  416e10:	add	x8, x0, x21
  416e14:	add	x21, x8, #0x1
  416e18:	ldrb	w8, [x21]
  416e1c:	cmp	w8, #0x52
  416e20:	b.eq	416e34 <wcrtomb@plt+0x122f4>  // b.none
  416e24:	cmp	w8, #0x58
  416e28:	b.eq	416dbc <wcrtomb@plt+0x1227c>  // b.none
  416e2c:	cbnz	w8, 416e08 <wcrtomb@plt+0x122c8>
  416e30:	b	416eb4 <wcrtomb@plt+0x12374>
  416e34:	mov	x0, x21
  416e38:	bl	403f40 <strlen@plt>
  416e3c:	add	x19, x0, x21
  416e40:	ldrb	w8, [x21, #1]!
  416e44:	add	x23, x19, #0x2
  416e48:	mov	x24, x21
  416e4c:	cbz	w8, 416e64 <wcrtomb@plt+0x12324>
  416e50:	ldrb	w2, [x26, #4008]
  416e54:	mov	x0, x24
  416e58:	mov	w1, wzr
  416e5c:	bl	42b698 <wcrtomb@plt+0x26b58>
  416e60:	mov	x24, x0
  416e64:	ldrb	w8, [x23]
  416e68:	cbz	w8, 416e80 <wcrtomb@plt+0x12340>
  416e6c:	ldrb	w2, [x26, #4008]
  416e70:	mov	x0, x23
  416e74:	mov	w1, wzr
  416e78:	bl	42b698 <wcrtomb@plt+0x26b58>
  416e7c:	mov	x23, x0
  416e80:	ldrb	w8, [x24]
  416e84:	add	x21, x19, #0x1
  416e88:	cbz	w8, 416e9c <wcrtomb@plt+0x1235c>
  416e8c:	ldrb	w8, [x23]
  416e90:	cmp	w8, #0x0
  416e94:	csel	x23, x22, x23, eq  // eq = none
  416e98:	b	416ea0 <wcrtomb@plt+0x12360>
  416e9c:	mov	x24, x22
  416ea0:	mov	x0, x24
  416ea4:	mov	x1, x23
  416ea8:	bl	40fc20 <wcrtomb@plt+0xb0e0>
  416eac:	tbnz	w0, #0, 416e08 <wcrtomb@plt+0x122c8>
  416eb0:	b	417258 <wcrtomb@plt+0x12718>
  416eb4:	mov	x0, x22
  416eb8:	bl	404700 <free@plt>
  416ebc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416ec0:	ldr	x0, [x8, #3536]
  416ec4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  416ec8:	add	x1, x1, #0xe2b
  416ecc:	bl	4176e0 <wcrtomb@plt+0x12ba0>
  416ed0:	ldr	x28, [sp, #8]
  416ed4:	mov	x21, x0
  416ed8:	mov	x22, xzr
  416edc:	ldrb	w8, [x28]
  416ee0:	cbz	w8, 417124 <wcrtomb@plt+0x125e4>
  416ee4:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  416ee8:	b	416f34 <wcrtomb@plt+0x123f4>
  416eec:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  416ef0:	mov	w2, #0x5                   	// #5
  416ef4:	mov	x0, xzr
  416ef8:	add	x1, x1, #0xff8
  416efc:	bl	404900 <dcgettext@plt>
  416f00:	mov	x23, x0
  416f04:	mov	x0, x22
  416f08:	bl	444778 <argp_parse@@Base+0xcecc>
  416f0c:	mov	x3, x0
  416f10:	mov	w0, wzr
  416f14:	mov	w1, wzr
  416f18:	mov	x2, x23
  416f1c:	bl	403fa0 <error@plt>
  416f20:	mov	x0, x28
  416f24:	bl	403f40 <strlen@plt>
  416f28:	add	x28, x0, x28
  416f2c:	ldrb	w8, [x28, #1]!
  416f30:	cbz	w8, 417124 <wcrtomb@plt+0x125e4>
  416f34:	mov	x0, x22
  416f38:	bl	404700 <free@plt>
  416f3c:	mov	x0, x20
  416f40:	mov	x1, x28
  416f44:	bl	41ec58 <wcrtomb@plt+0x1a118>
  416f48:	add	x1, sp, #0x10
  416f4c:	mov	x22, x0
  416f50:	bl	41bbd4 <wcrtomb@plt+0x17094>
  416f54:	cbz	w0, 416f80 <wcrtomb@plt+0x12440>
  416f58:	bl	404a10 <__errno_location@plt>
  416f5c:	ldr	w8, [x0]
  416f60:	cmp	w8, #0x2
  416f64:	b.eq	416f20 <wcrtomb@plt+0x123e0>  // b.none
  416f68:	mov	x0, x22
  416f6c:	bl	41c40c <wcrtomb@plt+0x178cc>
  416f70:	ldr	x8, [x27, #4064]
  416f74:	cbz	x8, 416eec <wcrtomb@plt+0x123ac>
  416f78:	blr	x8
  416f7c:	b	416eec <wcrtomb@plt+0x123ac>
  416f80:	cbz	x21, 417008 <wcrtomb@plt+0x124c8>
  416f84:	ldr	x25, [x21, #16]
  416f88:	cbz	x25, 417008 <wcrtomb@plt+0x124c8>
  416f8c:	ldr	x19, [x21, #24]
  416f90:	mov	x26, xzr
  416f94:	b	416fa4 <wcrtomb@plt+0x12464>
  416f98:	cmp	x26, x24
  416f9c:	mov	x25, x24
  416fa0:	b.cs	417008 <wcrtomb@plt+0x124c8>  // b.hs, b.nlast
  416fa4:	add	x8, x25, x26
  416fa8:	lsr	x24, x8, #1
  416fac:	ldr	x23, [x19, x24, lsl #3]
  416fb0:	mov	x0, x28
  416fb4:	mov	x1, x23
  416fb8:	bl	404660 <strcmp@plt>
  416fbc:	tbnz	w0, #31, 416f98 <wcrtomb@plt+0x12458>
  416fc0:	cbz	w0, 416fd0 <wcrtomb@plt+0x12490>
  416fc4:	add	x26, x24, #0x1
  416fc8:	mov	x24, x25
  416fcc:	b	416f98 <wcrtomb@plt+0x12458>
  416fd0:	ldurb	w8, [x23, #-1]
  416fd4:	cmp	w8, #0x59
  416fd8:	b.eq	416ff8 <wcrtomb@plt+0x124b8>  // b.none
  416fdc:	cmp	w8, #0x44
  416fe0:	b.ne	416f20 <wcrtomb@plt+0x123e0>  // b.any
  416fe4:	ldr	w8, [sp, #32]
  416fe8:	and	w8, w8, #0xf000
  416fec:	cmp	w8, #0x4, lsl #12
  416ff0:	b.eq	416f20 <wcrtomb@plt+0x123e0>  // b.none
  416ff4:	b	417008 <wcrtomb@plt+0x124c8>
  416ff8:	ldr	w8, [sp, #32]
  416ffc:	and	w8, w8, #0xf000
  417000:	cmp	w8, #0x4, lsl #12
  417004:	b.ne	416f20 <wcrtomb@plt+0x123e0>  // b.any
  417008:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41700c:	ldrb	w8, [x8, #3141]
  417010:	cbz	w8, 417028 <wcrtomb@plt+0x124e8>
  417014:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417018:	ldr	x8, [sp, #16]
  41701c:	ldr	x9, [x9, #3880]
  417020:	cmp	x8, x9
  417024:	b.ne	417104 <wcrtomb@plt+0x125c4>  // b.any
  417028:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41702c:	ldrb	w8, [x8, #3648]
  417030:	cbz	w8, 417048 <wcrtomb@plt+0x12508>
  417034:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  417038:	add	x0, x0, #0xa2e
  41703c:	mov	x1, x22
  417040:	bl	422df0 <wcrtomb@plt+0x1e2b0>
  417044:	cbz	w0, 416f20 <wcrtomb@plt+0x123e0>
  417048:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41704c:	ldr	w8, [x8, #3700]
  417050:	cbz	w8, 41709c <wcrtomb@plt+0x1255c>
  417054:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417058:	ldr	x23, [x8, #2888]
  41705c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  417060:	mov	w2, #0x5                   	// #5
  417064:	mov	x0, xzr
  417068:	add	x1, x1, #0x56
  41706c:	bl	404900 <dcgettext@plt>
  417070:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417074:	ldr	x26, [x8, #2504]
  417078:	mov	x24, x0
  41707c:	mov	x0, x22
  417080:	bl	444a68 <argp_parse@@Base+0xd1bc>
  417084:	mov	x4, x0
  417088:	mov	w1, #0x1                   	// #1
  41708c:	mov	x0, x23
  417090:	mov	x2, x24
  417094:	mov	x3, x26
  417098:	bl	404650 <__fprintf_chk@plt>
  41709c:	mov	w1, #0x1                   	// #1
  4170a0:	mov	x0, x22
  4170a4:	bl	41b620 <wcrtomb@plt+0x16ae0>
  4170a8:	cbnz	w0, 416f20 <wcrtomb@plt+0x123e0>
  4170ac:	bl	404a10 <__errno_location@plt>
  4170b0:	ldr	x8, [x27, #4064]
  4170b4:	ldr	w23, [x0]
  4170b8:	cbz	x8, 4170c0 <wcrtomb@plt+0x12580>
  4170bc:	blr	x8
  4170c0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4170c4:	mov	w2, #0x5                   	// #5
  4170c8:	mov	x0, xzr
  4170cc:	add	x1, x1, #0x67
  4170d0:	bl	404900 <dcgettext@plt>
  4170d4:	mov	x24, x0
  4170d8:	mov	x0, x22
  4170dc:	bl	444778 <argp_parse@@Base+0xcecc>
  4170e0:	mov	x3, x0
  4170e4:	mov	w0, wzr
  4170e8:	mov	w1, w23
  4170ec:	mov	x2, x24
  4170f0:	bl	403fa0 <error@plt>
  4170f4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4170f8:	mov	w9, #0x2                   	// #2
  4170fc:	str	w9, [x8, #2416]
  417100:	b	416f20 <wcrtomb@plt+0x123e0>
  417104:	ldr	x8, [x27, #4064]
  417108:	cbz	x8, 417110 <wcrtomb@plt+0x125d0>
  41710c:	blr	x8
  417110:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  417114:	mov	w2, #0x5                   	// #5
  417118:	mov	x0, xzr
  41711c:	add	x1, x1, #0x22
  417120:	b	416efc <wcrtomb@plt+0x123bc>
  417124:	mov	x0, x22
  417128:	bl	404700 <free@plt>
  41712c:	ldr	x0, [x21, #24]
  417130:	bl	404700 <free@plt>
  417134:	mov	x0, x21
  417138:	bl	404700 <free@plt>
  41713c:	ldr	x0, [sp, #8]
  417140:	bl	404700 <free@plt>
  417144:	ldp	x20, x19, [sp, #224]
  417148:	ldp	x22, x21, [sp, #208]
  41714c:	ldp	x24, x23, [sp, #192]
  417150:	ldp	x26, x25, [sp, #176]
  417154:	ldp	x28, x27, [sp, #160]
  417158:	ldp	x29, x30, [sp, #144]
  41715c:	add	sp, sp, #0xf0
  417160:	ret
  417164:	cbz	w22, 41726c <wcrtomb@plt+0x1272c>
  417168:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41716c:	ldr	x8, [x8, #4064]
  417170:	cbz	x8, 417178 <wcrtomb@plt+0x12638>
  417174:	blr	x8
  417178:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41717c:	add	x1, x1, #0x140
  417180:	mov	w2, #0x5                   	// #5
  417184:	mov	x0, xzr
  417188:	bl	404900 <dcgettext@plt>
  41718c:	mov	x2, x0
  417190:	mov	w0, wzr
  417194:	mov	w1, wzr
  417198:	mov	w3, w22
  41719c:	bl	403fa0 <error@plt>
  4171a0:	b	417328 <wcrtomb@plt+0x127e8>
  4171a4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4171a8:	ldr	x8, [x8, #4064]
  4171ac:	cbz	x8, 4171b4 <wcrtomb@plt+0x12674>
  4171b0:	blr	x8
  4171b4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4171b8:	add	x1, x1, #0x79
  4171bc:	mov	w2, #0x5                   	// #5
  4171c0:	mov	x0, xzr
  4171c4:	bl	404900 <dcgettext@plt>
  4171c8:	mov	x2, x0
  4171cc:	mov	w0, wzr
  4171d0:	mov	w1, wzr
  4171d4:	mov	w3, w22
  4171d8:	mov	w4, w24
  4171dc:	bl	403fa0 <error@plt>
  4171e0:	b	417328 <wcrtomb@plt+0x127e8>
  4171e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4171e8:	ldr	x8, [x8, #4064]
  4171ec:	cbz	x8, 4171f4 <wcrtomb@plt+0x126b4>
  4171f0:	blr	x8
  4171f4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4171f8:	add	x1, x1, #0xf0
  4171fc:	b	41730c <wcrtomb@plt+0x127cc>
  417200:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417204:	ldr	x8, [x8, #4064]
  417208:	cbz	x8, 417210 <wcrtomb@plt+0x126d0>
  41720c:	blr	x8
  417210:	bl	404a10 <__errno_location@plt>
  417214:	ldr	w20, [x0]
  417218:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  41721c:	add	x1, x1, #0xfc4
  417220:	mov	w2, #0x5                   	// #5
  417224:	mov	x0, xzr
  417228:	bl	404900 <dcgettext@plt>
  41722c:	mov	x21, x0
  417230:	mov	x0, x22
  417234:	bl	444a68 <argp_parse@@Base+0xd1bc>
  417238:	mov	x3, x0
  41723c:	mov	w0, wzr
  417240:	mov	w1, w20
  417244:	mov	x2, x21
  417248:	bl	403fa0 <error@plt>
  41724c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417250:	mov	w9, #0x2                   	// #2
  417254:	str	w9, [x8, #2416]
  417258:	mov	x0, x22
  41725c:	bl	404700 <free@plt>
  417260:	ldr	x0, [sp, #8]
  417264:	bl	404700 <free@plt>
  417268:	b	417334 <wcrtomb@plt+0x127f4>
  41726c:	str	x19, [sp, #8]
  417270:	cbz	w25, 416d9c <wcrtomb@plt+0x1225c>
  417274:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  417278:	ldrb	w8, [x8, #3720]
  41727c:	tbz	w8, #1, 416d9c <wcrtomb@plt+0x1225c>
  417280:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417284:	ldr	x8, [x8, #4064]
  417288:	cbz	x8, 417290 <wcrtomb@plt+0x12750>
  41728c:	blr	x8
  417290:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  417294:	add	x1, x1, #0x177
  417298:	mov	w2, #0x5                   	// #5
  41729c:	mov	x0, xzr
  4172a0:	bl	404900 <dcgettext@plt>
  4172a4:	mov	x2, x0
  4172a8:	mov	w0, wzr
  4172ac:	mov	w1, wzr
  4172b0:	bl	403fa0 <error@plt>
  4172b4:	ldr	x21, [x26, #3536]
  4172b8:	b	416d9c <wcrtomb@plt+0x1225c>
  4172bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4172c0:	ldr	x8, [x8, #4064]
  4172c4:	cbz	x8, 4172cc <wcrtomb@plt+0x1278c>
  4172c8:	blr	x8
  4172cc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4172d0:	add	x1, x1, #0xa9
  4172d4:	b	41730c <wcrtomb@plt+0x127cc>
  4172d8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4172dc:	ldr	x8, [x8, #4064]
  4172e0:	cbz	x8, 4172e8 <wcrtomb@plt+0x127a8>
  4172e4:	blr	x8
  4172e8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4172ec:	add	x1, x1, #0x11b
  4172f0:	b	41730c <wcrtomb@plt+0x127cc>
  4172f4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4172f8:	ldr	x8, [x8, #4064]
  4172fc:	cbz	x8, 417304 <wcrtomb@plt+0x127c4>
  417300:	blr	x8
  417304:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  417308:	add	x1, x1, #0xcb
  41730c:	mov	w2, #0x5                   	// #5
  417310:	mov	x0, xzr
  417314:	bl	404900 <dcgettext@plt>
  417318:	mov	x2, x0
  41731c:	mov	w0, wzr
  417320:	mov	w1, wzr
  417324:	bl	403fa0 <error@plt>
  417328:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41732c:	mov	w9, #0x2                   	// #2
  417330:	str	w9, [x8, #2416]
  417334:	ldp	x20, x19, [sp, #224]
  417338:	ldp	x22, x21, [sp, #208]
  41733c:	ldp	x24, x23, [sp, #192]
  417340:	ldp	x26, x25, [sp, #176]
  417344:	ldp	x28, x27, [sp, #160]
  417348:	ldp	x29, x30, [sp, #144]
  41734c:	add	sp, sp, #0xf0
  417350:	b	418e14 <wcrtomb@plt+0x142d4>
  417354:	stp	x29, x30, [sp, #-96]!
  417358:	str	x27, [sp, #16]
  41735c:	stp	x26, x25, [sp, #32]
  417360:	stp	x24, x23, [sp, #48]
  417364:	stp	x22, x21, [sp, #64]
  417368:	stp	x20, x19, [sp, #80]
  41736c:	mov	x29, sp
  417370:	cbz	x1, 41745c <wcrtomb@plt+0x1291c>
  417374:	mov	w26, #0x4401                	// #17409
  417378:	adrp	x21, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  41737c:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  417380:	mov	x19, x1
  417384:	mov	x20, x0
  417388:	mov	w27, wzr
  41738c:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417390:	mov	w24, #0xa                   	// #10
  417394:	mov	w25, #0x1                   	// #1
  417398:	movk	w26, #0x31, lsl #16
  41739c:	add	x21, x21, #0xcb9
  4173a0:	add	x22, x22, #0xc35
  4173a4:	b	4173c0 <wcrtomb@plt+0x12880>
  4173a8:	mov	w1, #0xa                   	// #10
  4173ac:	bl	4045e0 <__overflow@plt>
  4173b0:	mov	w27, wzr
  4173b4:	subs	x19, x19, #0x1
  4173b8:	add	x20, x20, #0x1
  4173bc:	b.eq	41745c <wcrtomb@plt+0x1291c>  // b.none
  4173c0:	ldrb	w3, [x20]
  4173c4:	sub	w8, w3, #0x44
  4173c8:	cmp	w8, #0x15
  4173cc:	b.hi	417408 <wcrtomb@plt+0x128c8>  // b.pmore
  4173d0:	lsl	w8, w25, w8
  4173d4:	tst	w8, w26
  4173d8:	b.eq	417408 <wcrtomb@plt+0x128c8>  // b.none
  4173dc:	ldr	x0, [x23, #2888]
  4173e0:	mov	w1, #0x1                   	// #1
  4173e4:	mov	x2, x21
  4173e8:	bl	404650 <__fprintf_chk@plt>
  4173ec:	cbnz	w27, 4173b4 <wcrtomb@plt+0x12874>
  4173f0:	ldr	x0, [x23, #2888]
  4173f4:	mov	w1, #0x1                   	// #1
  4173f8:	mov	x2, x22
  4173fc:	mov	w27, #0x1                   	// #1
  417400:	bl	404650 <__fprintf_chk@plt>
  417404:	b	4173b4 <wcrtomb@plt+0x12874>
  417408:	cbnz	w3, 417430 <wcrtomb@plt+0x128f0>
  41740c:	ldr	x0, [x23, #2888]
  417410:	ldp	x8, x9, [x0, #40]
  417414:	cmp	x8, x9
  417418:	b.cs	4173a8 <wcrtomb@plt+0x12868>  // b.hs, b.nlast
  41741c:	add	x9, x8, #0x1
  417420:	mov	w27, wzr
  417424:	str	x9, [x0, #40]
  417428:	strb	w24, [x8]
  41742c:	b	4173b4 <wcrtomb@plt+0x12874>
  417430:	ldr	x0, [x23, #2888]
  417434:	ldp	x8, x9, [x0, #40]
  417438:	cmp	x8, x9
  41743c:	b.cs	417450 <wcrtomb@plt+0x12910>  // b.hs, b.nlast
  417440:	add	x9, x8, #0x1
  417444:	str	x9, [x0, #40]
  417448:	strb	w3, [x8]
  41744c:	b	4173b4 <wcrtomb@plt+0x12874>
  417450:	mov	w1, w3
  417454:	bl	4045e0 <__overflow@plt>
  417458:	b	4173b4 <wcrtomb@plt+0x12874>
  41745c:	ldp	x20, x19, [sp, #80]
  417460:	ldp	x22, x21, [sp, #64]
  417464:	ldp	x24, x23, [sp, #48]
  417468:	ldp	x26, x25, [sp, #32]
  41746c:	ldr	x27, [sp, #16]
  417470:	ldp	x29, x30, [sp], #96
  417474:	ret
  417478:	sub	sp, sp, #0x80
  41747c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417480:	ldr	w8, [x8, #3056]
  417484:	stp	x28, x27, [sp, #48]
  417488:	mov	x28, x0
  41748c:	stp	x29, x30, [sp, #32]
  417490:	stp	x26, x25, [sp, #64]
  417494:	add	x29, sp, #0x20
  417498:	mov	x26, x1
  41749c:	mov	w0, w8
  4174a0:	mov	x1, x28
  4174a4:	stp	x24, x23, [sp, #80]
  4174a8:	stp	x22, x21, [sp, #96]
  4174ac:	stp	x20, x19, [sp, #112]
  4174b0:	mov	x20, x7
  4174b4:	stur	w6, [x29, #-4]
  4174b8:	mov	w22, w5
  4174bc:	stp	x3, x4, [sp, #8]
  4174c0:	mov	x25, x2
  4174c4:	bl	41ade4 <wcrtomb@plt+0x162a4>
  4174c8:	mov	x27, x0
  4174cc:	mov	x0, x28
  4174d0:	bl	403f40 <strlen@plt>
  4174d4:	mov	x23, x0
  4174d8:	mov	w0, #0x60                  	// #96
  4174dc:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4174e0:	mov	x24, x0
  4174e4:	mov	x19, x0
  4174e8:	str	xzr, [x0]
  4174ec:	cmp	x23, #0x2
  4174f0:	str	xzr, [x24, #40]!
  4174f4:	str	xzr, [x0, #64]
  4174f8:	str	wzr, [x0, #60]
  4174fc:	str	xzr, [x0, #48]
  417500:	b.cc	417514 <wcrtomb@plt+0x129d4>  // b.lo, b.ul, b.last
  417504:	sub	x8, x23, #0x1
  417508:	ldrb	w9, [x28, x8]
  41750c:	cmp	w9, #0x2f
  417510:	csel	x23, x8, x23, eq  // eq = none
  417514:	add	x0, x23, #0x1
  417518:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41751c:	mov	x1, x28
  417520:	mov	x2, x23
  417524:	mov	x21, x0
  417528:	str	x0, [x19, #88]
  41752c:	bl	403ec0 <memcpy@plt>
  417530:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417534:	ldr	x9, [x8, #1200]
  417538:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41753c:	add	x10, x10, #0x4a8
  417540:	strb	wzr, [x21, x23]
  417544:	cmp	x9, #0x0
  417548:	csel	x9, x10, x9, eq  // eq = none
  41754c:	stp	xzr, x27, [x19, #72]
  417550:	str	x19, [x9]
  417554:	str	x19, [x8, #1200]
  417558:	ldr	x8, [sp, #8]
  41755c:	mov	w10, #0x1                   	// #1
  417560:	str	w10, [x19, #56]
  417564:	ldur	w10, [x29, #-4]
  417568:	str	x8, [x19, #24]
  41756c:	ldr	x8, [sp, #16]
  417570:	stp	x26, x25, [x19, #8]
  417574:	str	x8, [x19, #32]
  417578:	tbnz	w22, #0, 41759c <wcrtomb@plt+0x12a5c>
  41757c:	tbnz	w10, #0, 41759c <wcrtomb@plt+0x12a5c>
  417580:	cbz	x20, 4175c0 <wcrtomb@plt+0x12a80>
  417584:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  417588:	add	x1, x1, #0xe2b
  41758c:	mov	x0, x20
  417590:	bl	4176e0 <wcrtomb@plt+0x12ba0>
  417594:	mov	x8, x0
  417598:	b	4175c4 <wcrtomb@plt+0x12a84>
  41759c:	tst	w22, #0x1
  4175a0:	mov	w8, #0x4                   	// #4
  4175a4:	mov	w9, #0x6                   	// #6
  4175a8:	csel	w8, w9, w8, ne  // ne = any
  4175ac:	tst	w10, #0x1
  4175b0:	mov	w9, #0x2                   	// #2
  4175b4:	csel	w8, w8, w9, ne  // ne = any
  4175b8:	str	w8, [x19, #60]
  4175bc:	cbnz	x20, 417584 <wcrtomb@plt+0x12a44>
  4175c0:	mov	x8, xzr
  4175c4:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4175c8:	ldr	x0, [x20, #1176]
  4175cc:	str	x8, [x24]
  4175d0:	cbnz	x0, 4175f8 <wcrtomb@plt+0x12ab8>
  4175d4:	adrp	x2, 417000 <wcrtomb@plt+0x124c0>
  4175d8:	adrp	x3, 417000 <wcrtomb@plt+0x124c0>
  4175dc:	add	x2, x2, #0x668
  4175e0:	add	x3, x3, #0x670
  4175e4:	mov	x1, xzr
  4175e8:	mov	x4, xzr
  4175ec:	bl	43b9f4 <argp_parse@@Base+0x4148>
  4175f0:	str	x0, [x20, #1176]
  4175f4:	cbz	x0, 417664 <wcrtomb@plt+0x12b24>
  4175f8:	mov	x1, x19
  4175fc:	bl	43c408 <argp_parse@@Base+0x4b5c>
  417600:	cbz	x0, 417664 <wcrtomb@plt+0x12b24>
  417604:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417608:	ldr	x0, [x20, #1184]
  41760c:	cbnz	x0, 417634 <wcrtomb@plt+0x12af4>
  417610:	adrp	x2, 417000 <wcrtomb@plt+0x124c0>
  417614:	adrp	x3, 417000 <wcrtomb@plt+0x124c0>
  417618:	add	x2, x2, #0x694
  41761c:	add	x3, x3, #0x6a8
  417620:	mov	x1, xzr
  417624:	mov	x4, xzr
  417628:	bl	43b9f4 <argp_parse@@Base+0x4148>
  41762c:	str	x0, [x20, #1184]
  417630:	cbz	x0, 417664 <wcrtomb@plt+0x12b24>
  417634:	mov	x1, x19
  417638:	bl	43c408 <argp_parse@@Base+0x4b5c>
  41763c:	cbz	x0, 417664 <wcrtomb@plt+0x12b24>
  417640:	mov	x0, x19
  417644:	ldp	x20, x19, [sp, #112]
  417648:	ldp	x22, x21, [sp, #96]
  41764c:	ldp	x24, x23, [sp, #80]
  417650:	ldp	x26, x25, [sp, #64]
  417654:	ldp	x28, x27, [sp, #48]
  417658:	ldp	x29, x30, [sp, #32]
  41765c:	add	sp, sp, #0x80
  417660:	ret
  417664:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  417668:	ldr	x0, [x0, #80]
  41766c:	b	43b99c <argp_parse@@Base+0x40f0>
  417670:	stp	x29, x30, [sp, #-16]!
  417674:	ldr	x0, [x0, #80]
  417678:	ldr	x1, [x1, #80]
  41767c:	mov	x29, sp
  417680:	bl	404660 <strcmp@plt>
  417684:	cmp	w0, #0x0
  417688:	cset	w0, eq  // eq = none
  41768c:	ldp	x29, x30, [sp], #16
  417690:	ret
  417694:	ldp	x8, x9, [x0, #24]
  417698:	add	x8, x9, x8
  41769c:	udiv	x9, x8, x1
  4176a0:	msub	x0, x9, x1, x8
  4176a4:	ret
  4176a8:	ldr	x8, [x0, #24]
  4176ac:	ldr	x9, [x1, #24]
  4176b0:	cmp	x8, x9
  4176b4:	b.ne	4176cc <wcrtomb@plt+0x12b8c>  // b.any
  4176b8:	ldr	x8, [x0, #32]
  4176bc:	ldr	x9, [x1, #32]
  4176c0:	cmp	x8, x9
  4176c4:	cset	w0, eq  // eq = none
  4176c8:	ret
  4176cc:	mov	w0, wzr
  4176d0:	ret
  4176d4:	ldr	x0, [x0]
  4176d8:	ldr	x1, [x1]
  4176dc:	b	404660 <strcmp@plt>
  4176e0:	stp	x29, x30, [sp, #-80]!
  4176e4:	stp	x26, x25, [sp, #16]
  4176e8:	stp	x24, x23, [sp, #32]
  4176ec:	stp	x22, x21, [sp, #48]
  4176f0:	stp	x20, x19, [sp, #64]
  4176f4:	ldrb	w25, [x0]
  4176f8:	mov	x21, x0
  4176fc:	mov	x19, x1
  417700:	mov	x29, sp
  417704:	cbz	w25, 417758 <wcrtomb@plt+0x12c18>
  417708:	mov	x23, xzr
  41770c:	mov	x24, xzr
  417710:	mov	w22, #0x1                   	// #1
  417714:	mov	x20, x21
  417718:	b	417730 <wcrtomb@plt+0x12bf0>
  41771c:	add	x23, x23, #0x1
  417720:	add	x20, x20, x26
  417724:	ldrb	w25, [x20]
  417728:	add	x24, x24, #0x1
  41772c:	cbz	w25, 417764 <wcrtomb@plt+0x12c24>
  417730:	mov	x0, x20
  417734:	bl	403f40 <strlen@plt>
  417738:	add	x26, x0, #0x1
  41773c:	add	x22, x26, x22
  417740:	cbz	x19, 41771c <wcrtomb@plt+0x12bdc>
  417744:	and	w1, w25, #0xff
  417748:	mov	x0, x19
  41774c:	bl	4047a0 <strchr@plt>
  417750:	cbnz	x0, 41771c <wcrtomb@plt+0x12bdc>
  417754:	b	417720 <wcrtomb@plt+0x12be0>
  417758:	mov	x24, xzr
  41775c:	mov	x23, xzr
  417760:	mov	w22, #0x1                   	// #1
  417764:	add	x0, x22, #0x20
  417768:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41776c:	mov	x20, x0
  417770:	add	x0, x0, #0x20
  417774:	mov	x1, x21
  417778:	mov	x2, x22
  41777c:	str	x0, [x20]
  417780:	bl	403ec0 <memcpy@plt>
  417784:	add	x0, x23, #0x1
  417788:	mov	w1, #0x8                   	// #8
  41778c:	stp	x24, x23, [x20, #8]
  417790:	bl	445c24 <argp_parse@@Base+0xe378>
  417794:	ldr	x21, [x20]
  417798:	str	x0, [x20, #24]
  41779c:	ldrb	w8, [x21]
  4177a0:	cbz	w8, 4177f4 <wcrtomb@plt+0x12cb4>
  4177a4:	mov	x22, xzr
  4177a8:	b	4177d4 <wcrtomb@plt+0x12c94>
  4177ac:	ldr	x8, [x20, #24]
  4177b0:	add	x9, x21, #0x1
  4177b4:	add	x10, x22, #0x1
  4177b8:	str	x9, [x8, x22, lsl #3]
  4177bc:	mov	x22, x10
  4177c0:	mov	x0, x21
  4177c4:	bl	403f40 <strlen@plt>
  4177c8:	add	x21, x0, x21
  4177cc:	ldrb	w8, [x21, #1]!
  4177d0:	cbz	w8, 4177ec <wcrtomb@plt+0x12cac>
  4177d4:	cbz	x19, 4177ac <wcrtomb@plt+0x12c6c>
  4177d8:	and	w1, w8, #0xff
  4177dc:	mov	x0, x19
  4177e0:	bl	4047a0 <strchr@plt>
  4177e4:	cbnz	x0, 4177ac <wcrtomb@plt+0x12c6c>
  4177e8:	b	4177c0 <wcrtomb@plt+0x12c80>
  4177ec:	ldr	x0, [x20, #24]
  4177f0:	b	4177f8 <wcrtomb@plt+0x12cb8>
  4177f4:	mov	x22, xzr
  4177f8:	str	xzr, [x0, x22, lsl #3]
  4177fc:	mov	x0, x20
  417800:	ldp	x20, x19, [sp, #64]
  417804:	ldp	x22, x21, [sp, #48]
  417808:	ldp	x24, x23, [sp, #32]
  41780c:	ldp	x26, x25, [sp, #16]
  417810:	ldp	x29, x30, [sp], #80
  417814:	ret
  417818:	stp	x29, x30, [sp, #-64]!
  41781c:	stp	x22, x21, [sp, #32]
  417820:	stp	x20, x19, [sp, #48]
  417824:	ldrb	w8, [x1]
  417828:	str	x23, [sp, #16]
  41782c:	mov	x20, x2
  417830:	mov	x21, x1
  417834:	mov	x19, x0
  417838:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41783c:	mov	x29, sp
  417840:	cbz	w8, 417858 <wcrtomb@plt+0x12d18>
  417844:	ldrb	w2, [x23, #4008]
  417848:	mov	x0, x21
  41784c:	mov	w1, wzr
  417850:	bl	42b698 <wcrtomb@plt+0x26b58>
  417854:	mov	x21, x0
  417858:	ldp	x8, x9, [x19, #24]
  41785c:	cmp	x9, x8
  417860:	b.ne	417874 <wcrtomb@plt+0x12d34>  // b.any
  417864:	mov	w1, #0x1                   	// #1
  417868:	mov	x0, x19
  41786c:	bl	44693c <_obstack_newchunk@@Base>
  417870:	ldr	x8, [x19, #24]
  417874:	add	x9, x8, #0x1
  417878:	mov	w10, #0x52                  	// #82
  41787c:	mov	x0, x21
  417880:	str	x9, [x19, #24]
  417884:	strb	w10, [x8]
  417888:	bl	403f40 <strlen@plt>
  41788c:	mov	x8, x0
  417890:	ldp	x0, x9, [x19, #24]
  417894:	add	x22, x8, #0x1
  417898:	sub	x8, x9, x0
  41789c:	cmp	x8, x22
  4178a0:	b.cs	4178b4 <wcrtomb@plt+0x12d74>  // b.hs, b.nlast
  4178a4:	mov	x0, x19
  4178a8:	mov	x1, x22
  4178ac:	bl	44693c <_obstack_newchunk@@Base>
  4178b0:	ldr	x0, [x19, #24]
  4178b4:	mov	x1, x21
  4178b8:	mov	x2, x22
  4178bc:	bl	403ec0 <memcpy@plt>
  4178c0:	ldr	x8, [x19, #24]
  4178c4:	add	x8, x8, x22
  4178c8:	str	x8, [x19, #24]
  4178cc:	ldrb	w9, [x20]
  4178d0:	cbz	w9, 4178ec <wcrtomb@plt+0x12dac>
  4178d4:	ldrb	w2, [x23, #4008]
  4178d8:	mov	x0, x20
  4178dc:	mov	w1, wzr
  4178e0:	bl	42b698 <wcrtomb@plt+0x26b58>
  4178e4:	ldr	x8, [x19, #24]
  4178e8:	mov	x20, x0
  4178ec:	ldr	x9, [x19, #32]
  4178f0:	cmp	x9, x8
  4178f4:	b.ne	417908 <wcrtomb@plt+0x12dc8>  // b.any
  4178f8:	mov	w1, #0x1                   	// #1
  4178fc:	mov	x0, x19
  417900:	bl	44693c <_obstack_newchunk@@Base>
  417904:	ldr	x8, [x19, #24]
  417908:	add	x9, x8, #0x1
  41790c:	mov	w10, #0x54                  	// #84
  417910:	mov	x0, x20
  417914:	str	x9, [x19, #24]
  417918:	strb	w10, [x8]
  41791c:	bl	403f40 <strlen@plt>
  417920:	mov	x8, x0
  417924:	ldp	x0, x9, [x19, #24]
  417928:	add	x21, x8, #0x1
  41792c:	sub	x8, x9, x0
  417930:	cmp	x8, x21
  417934:	b.cs	417948 <wcrtomb@plt+0x12e08>  // b.hs, b.nlast
  417938:	mov	x0, x19
  41793c:	mov	x1, x21
  417940:	bl	44693c <_obstack_newchunk@@Base>
  417944:	ldr	x0, [x19, #24]
  417948:	mov	x1, x20
  41794c:	mov	x2, x21
  417950:	bl	403ec0 <memcpy@plt>
  417954:	ldr	x8, [x19, #24]
  417958:	ldr	x23, [sp, #16]
  41795c:	add	x8, x8, x21
  417960:	str	x8, [x19, #24]
  417964:	ldp	x20, x19, [sp, #48]
  417968:	ldp	x22, x21, [sp, #32]
  41796c:	ldp	x29, x30, [sp], #64
  417970:	ret
  417974:	sub	sp, sp, #0x30
  417978:	stp	x20, x19, [sp, #32]
  41797c:	mov	x19, x1
  417980:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  417984:	add	x1, x1, #0xe3d
  417988:	add	x4, sp, #0x8
  41798c:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  417990:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  417994:	stp	x29, x30, [sp, #16]
  417998:	add	x29, sp, #0x10
  41799c:	mov	x20, x0
  4179a0:	bl	417a40 <wcrtomb@plt+0x12f00>
  4179a4:	tbz	w0, #0, 4179ec <wcrtomb@plt+0x12eac>
  4179a8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4179ac:	mov	w3, #0xc9ff                	// #51711
  4179b0:	add	x1, x1, #0xe4b
  4179b4:	mov	x4, sp
  4179b8:	movk	w3, #0x3b9a, lsl #16
  4179bc:	mov	x0, x20
  4179c0:	mov	x2, xzr
  4179c4:	bl	417a40 <wcrtomb@plt+0x12f00>
  4179c8:	tbz	w0, #0, 4179ec <wcrtomb@plt+0x12eac>
  4179cc:	ldr	x8, [sp, #8]
  4179d0:	str	x8, [x19]
  4179d4:	ldr	x8, [sp]
  4179d8:	str	x8, [x19, #8]
  4179dc:	ldp	x20, x19, [sp, #32]
  4179e0:	ldp	x29, x30, [sp, #16]
  4179e4:	add	sp, sp, #0x30
  4179e8:	ret
  4179ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4179f0:	ldr	x8, [x8, #4064]
  4179f4:	cbz	x8, 4179fc <wcrtomb@plt+0x12ebc>
  4179f8:	blr	x8
  4179fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417a00:	ldr	x0, [x8, #3888]
  417a04:	bl	444778 <argp_parse@@Base+0xcecc>
  417a08:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  417a0c:	mov	x19, x0
  417a10:	add	x1, x1, #0xf09
  417a14:	mov	w2, #0x5                   	// #5
  417a18:	mov	x0, xzr
  417a1c:	bl	404900 <dcgettext@plt>
  417a20:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  417a24:	mov	x4, x0
  417a28:	add	x2, x2, #0x5d8
  417a2c:	mov	w0, wzr
  417a30:	mov	w1, wzr
  417a34:	mov	x3, x19
  417a38:	bl	403fa0 <error@plt>
  417a3c:	bl	40e96c <wcrtomb@plt+0x9e2c>
  417a40:	sub	sp, sp, #0xc0
  417a44:	stp	x29, x30, [sp, #112]
  417a48:	str	x25, [sp, #128]
  417a4c:	stp	x24, x23, [sp, #144]
  417a50:	stp	x22, x21, [sp, #160]
  417a54:	stp	x20, x19, [sp, #176]
  417a58:	ldp	x8, x9, [x0, #8]
  417a5c:	mov	x23, x4
  417a60:	mov	x21, x3
  417a64:	mov	x22, x2
  417a68:	mov	x20, x0
  417a6c:	cmp	x8, x9
  417a70:	mov	x19, x1
  417a74:	add	x29, sp, #0x70
  417a78:	b.cs	417b60 <wcrtomb@plt+0x13020>  // b.hs, b.nlast
  417a7c:	add	x9, x8, #0x1
  417a80:	str	x9, [x20, #8]
  417a84:	ldrb	w0, [x8]
  417a88:	sub	w8, w0, #0x30
  417a8c:	cmp	w8, #0xa
  417a90:	b.cc	417aa8 <wcrtomb@plt+0x12f68>  // b.lo, b.ul, b.last
  417a94:	cmp	w0, #0x2d
  417a98:	b.eq	417aa8 <wcrtomb@plt+0x12f68>  // b.none
  417a9c:	mov	x24, xzr
  417aa0:	mov	w8, #0x1                   	// #1
  417aa4:	b	417af8 <wcrtomb@plt+0x12fb8>
  417aa8:	mov	x24, xzr
  417aac:	sub	x25, x29, #0x18
  417ab0:	cmp	x24, #0x14
  417ab4:	strb	w0, [x25, x24]
  417ab8:	b.eq	417b6c <wcrtomb@plt+0x1302c>  // b.none
  417abc:	ldp	x8, x9, [x20, #8]
  417ac0:	cmp	x8, x9
  417ac4:	b.cs	417ae8 <wcrtomb@plt+0x12fa8>  // b.hs, b.nlast
  417ac8:	add	x9, x8, #0x1
  417acc:	str	x9, [x20, #8]
  417ad0:	ldrb	w0, [x8]
  417ad4:	sub	w8, w0, #0x30
  417ad8:	cmp	w8, #0xa
  417adc:	add	x24, x24, #0x1
  417ae0:	b.cc	417ab0 <wcrtomb@plt+0x12f70>  // b.lo, b.ul, b.last
  417ae4:	b	417af4 <wcrtomb@plt+0x12fb4>
  417ae8:	mov	x0, x20
  417aec:	bl	404ac0 <__uflow@plt>
  417af0:	b	417ad4 <wcrtomb@plt+0x12f94>
  417af4:	mov	w8, wzr
  417af8:	sub	x9, x29, #0x18
  417afc:	strb	wzr, [x9, x24]
  417b00:	tbnz	w0, #31, 417b34 <wcrtomb@plt+0x12ff4>
  417b04:	cbnz	w0, 417c84 <wcrtomb@plt+0x13144>
  417b08:	sub	x0, x29, #0x18
  417b0c:	mov	x1, xzr
  417b10:	mov	x2, x22
  417b14:	mov	x3, x21
  417b18:	bl	41b080 <wcrtomb@plt+0x16540>
  417b1c:	str	x0, [x23]
  417b20:	bl	404a10 <__errno_location@plt>
  417b24:	ldr	w23, [x0]
  417b28:	cbnz	w23, 417be0 <wcrtomb@plt+0x130a0>
  417b2c:	mov	w0, #0x1                   	// #1
  417b30:	b	417b44 <wcrtomb@plt+0x13004>
  417b34:	ldrb	w9, [x20]
  417b38:	tbnz	w9, #5, 417d68 <wcrtomb@plt+0x13228>
  417b3c:	tbz	w8, #0, 417d74 <wcrtomb@plt+0x13234>
  417b40:	mov	w0, wzr
  417b44:	ldp	x20, x19, [sp, #176]
  417b48:	ldp	x22, x21, [sp, #160]
  417b4c:	ldp	x24, x23, [sp, #144]
  417b50:	ldr	x25, [sp, #128]
  417b54:	ldp	x29, x30, [sp, #112]
  417b58:	add	sp, sp, #0xc0
  417b5c:	ret
  417b60:	mov	x0, x20
  417b64:	bl	404ac0 <__uflow@plt>
  417b68:	b	417a88 <wcrtomb@plt+0x12f48>
  417b6c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417b70:	ldr	x8, [x8, #4064]
  417b74:	cbz	x8, 417b7c <wcrtomb@plt+0x1303c>
  417b78:	blr	x8
  417b7c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  417b80:	add	x1, x1, #0xf29
  417b84:	mov	w2, #0x5                   	// #5
  417b88:	mov	x0, xzr
  417b8c:	bl	404900 <dcgettext@plt>
  417b90:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417b94:	ldr	x8, [x8, #3888]
  417b98:	mov	x21, x0
  417b9c:	mov	x0, x8
  417ba0:	bl	444778 <argp_parse@@Base+0xcecc>
  417ba4:	mov	x22, x0
  417ba8:	mov	x0, x20
  417bac:	bl	404830 <ftello@plt>
  417bb0:	sub	x1, x29, #0x30
  417bb4:	bl	43cff0 <argp_parse@@Base+0x5744>
  417bb8:	mov	x4, x0
  417bbc:	sub	x7, x29, #0x18
  417bc0:	mov	w6, #0x15                  	// #21
  417bc4:	mov	w0, wzr
  417bc8:	mov	w1, wzr
  417bcc:	mov	x2, x21
  417bd0:	mov	x3, x22
  417bd4:	mov	x5, x19
  417bd8:	bl	403fa0 <error@plt>
  417bdc:	bl	40e96c <wcrtomb@plt+0x9e2c>
  417be0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417be4:	cmp	w23, #0x22
  417be8:	b.ne	417cfc <wcrtomb@plt+0x131bc>  // b.any
  417bec:	ldr	x8, [x8, #4064]
  417bf0:	cbz	x8, 417bf8 <wcrtomb@plt+0x130b8>
  417bf4:	blr	x8
  417bf8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  417bfc:	add	x1, x1, #0xf7d
  417c00:	mov	w2, #0x5                   	// #5
  417c04:	mov	x0, xzr
  417c08:	bl	404900 <dcgettext@plt>
  417c0c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417c10:	ldr	x8, [x8, #3888]
  417c14:	mov	x23, x0
  417c18:	mov	x0, x8
  417c1c:	bl	444778 <argp_parse@@Base+0xcecc>
  417c20:	mov	x24, x0
  417c24:	mov	x0, x20
  417c28:	bl	404830 <ftello@plt>
  417c2c:	sub	x1, x29, #0x30
  417c30:	bl	43cff0 <argp_parse@@Base+0x5744>
  417c34:	mov	x20, x0
  417c38:	add	x1, sp, #0x28
  417c3c:	mov	x0, x22
  417c40:	bl	43cf60 <argp_parse@@Base+0x56b4>
  417c44:	mov	x22, x0
  417c48:	add	x1, sp, #0x10
  417c4c:	mov	x0, x21
  417c50:	bl	43d080 <argp_parse@@Base+0x57d4>
  417c54:	mov	x6, x0
  417c58:	sub	x8, x29, #0x18
  417c5c:	mov	w1, #0x22                  	// #34
  417c60:	mov	w0, wzr
  417c64:	mov	x2, x23
  417c68:	mov	x3, x24
  417c6c:	mov	x4, x20
  417c70:	mov	x5, x22
  417c74:	mov	x7, x19
  417c78:	str	x8, [sp]
  417c7c:	bl	403fa0 <error@plt>
  417c80:	bl	40e96c <wcrtomb@plt+0x9e2c>
  417c84:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417c88:	ldr	x8, [x8, #4064]
  417c8c:	mov	w21, w0
  417c90:	cbz	x8, 417c98 <wcrtomb@plt+0x13158>
  417c94:	blr	x8
  417c98:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  417c9c:	add	x1, x1, #0xf4a
  417ca0:	mov	w2, #0x5                   	// #5
  417ca4:	mov	x0, xzr
  417ca8:	bl	404900 <dcgettext@plt>
  417cac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417cb0:	ldr	x8, [x8, #3888]
  417cb4:	mov	x22, x0
  417cb8:	mov	x0, x8
  417cbc:	bl	444778 <argp_parse@@Base+0xcecc>
  417cc0:	mov	x23, x0
  417cc4:	mov	x0, x20
  417cc8:	bl	404830 <ftello@plt>
  417ccc:	sub	x1, x29, #0x30
  417cd0:	bl	43cff0 <argp_parse@@Base+0x5744>
  417cd4:	mov	x4, x0
  417cd8:	sub	x6, x29, #0x18
  417cdc:	mov	w0, wzr
  417ce0:	mov	w1, wzr
  417ce4:	mov	x2, x22
  417ce8:	mov	x3, x23
  417cec:	mov	x5, x19
  417cf0:	mov	w7, w21
  417cf4:	bl	403fa0 <error@plt>
  417cf8:	bl	40e96c <wcrtomb@plt+0x9e2c>
  417cfc:	ldr	x8, [x8, #4064]
  417d00:	cbz	x8, 417d08 <wcrtomb@plt+0x131c8>
  417d04:	blr	x8
  417d08:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  417d0c:	add	x1, x1, #0xfa6
  417d10:	mov	w2, #0x5                   	// #5
  417d14:	mov	x0, xzr
  417d18:	bl	404900 <dcgettext@plt>
  417d1c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417d20:	ldr	x8, [x8, #3888]
  417d24:	mov	x21, x0
  417d28:	mov	x0, x8
  417d2c:	bl	444778 <argp_parse@@Base+0xcecc>
  417d30:	mov	x22, x0
  417d34:	mov	x0, x20
  417d38:	bl	404830 <ftello@plt>
  417d3c:	sub	x1, x29, #0x30
  417d40:	bl	43cff0 <argp_parse@@Base+0x5744>
  417d44:	mov	x4, x0
  417d48:	sub	x6, x29, #0x18
  417d4c:	mov	w0, wzr
  417d50:	mov	w1, w23
  417d54:	mov	x2, x21
  417d58:	mov	x3, x22
  417d5c:	mov	x5, x19
  417d60:	bl	403fa0 <error@plt>
  417d64:	bl	40e96c <wcrtomb@plt+0x9e2c>
  417d68:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417d6c:	ldr	x0, [x8, #3888]
  417d70:	bl	42ab64 <wcrtomb@plt+0x26024>
  417d74:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417d78:	ldr	x8, [x8, #4064]
  417d7c:	cbz	x8, 417d84 <wcrtomb@plt+0x13244>
  417d80:	blr	x8
  417d84:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417d88:	ldr	x0, [x8, #3888]
  417d8c:	bl	444778 <argp_parse@@Base+0xcecc>
  417d90:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  417d94:	mov	x19, x0
  417d98:	add	x1, x1, #0xf09
  417d9c:	mov	w2, #0x5                   	// #5
  417da0:	mov	x0, xzr
  417da4:	bl	404900 <dcgettext@plt>
  417da8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  417dac:	mov	x4, x0
  417db0:	add	x2, x2, #0x5d8
  417db4:	mov	w0, wzr
  417db8:	mov	w1, wzr
  417dbc:	mov	x3, x19
  417dc0:	bl	403fa0 <error@plt>
  417dc4:	bl	40e96c <wcrtomb@plt+0x9e2c>
  417dc8:	stp	x29, x30, [sp, #-64]!
  417dcc:	str	x23, [sp, #16]
  417dd0:	stp	x22, x21, [sp, #32]
  417dd4:	stp	x20, x19, [sp, #48]
  417dd8:	ldp	x8, x9, [x0, #8]
  417ddc:	mov	x19, x2
  417de0:	mov	x22, x0
  417de4:	mov	x20, x1
  417de8:	cmp	x8, x9
  417dec:	mov	x29, sp
  417df0:	b.cs	417eac <wcrtomb@plt+0x1336c>  // b.hs, b.nlast
  417df4:	add	x9, x8, #0x1
  417df8:	str	x9, [x22, #8]
  417dfc:	ldrb	w21, [x8]
  417e00:	ldp	x8, x9, [x20, #24]
  417e04:	add	w10, w21, #0x1
  417e08:	cmp	x9, x8
  417e0c:	cset	w9, eq  // eq = none
  417e10:	cmp	w10, #0x2
  417e14:	b.cc	417e6c <wcrtomb@plt+0x1332c>  // b.lo, b.ul, b.last
  417e18:	mov	x23, xzr
  417e1c:	b	417e54 <wcrtomb@plt+0x13314>
  417e20:	add	x9, x8, #0x1
  417e24:	mov	x0, x22
  417e28:	str	x9, [x20, #24]
  417e2c:	strb	w21, [x8]
  417e30:	bl	404500 <getc_unlocked@plt>
  417e34:	ldp	x8, x9, [x20, #24]
  417e38:	add	w10, w0, #0x1
  417e3c:	mov	w21, w0
  417e40:	add	x23, x23, #0x1
  417e44:	cmp	x9, x8
  417e48:	cset	w9, eq  // eq = none
  417e4c:	cmp	w10, #0x1
  417e50:	b.ls	417e70 <wcrtomb@plt+0x13330>  // b.plast
  417e54:	tbz	w9, #0, 417e20 <wcrtomb@plt+0x132e0>
  417e58:	mov	w1, #0x1                   	// #1
  417e5c:	mov	x0, x20
  417e60:	bl	44693c <_obstack_newchunk@@Base>
  417e64:	ldr	x8, [x20, #24]
  417e68:	b	417e20 <wcrtomb@plt+0x132e0>
  417e6c:	mov	x23, xzr
  417e70:	cbz	w9, 417e84 <wcrtomb@plt+0x13344>
  417e74:	mov	w1, #0x1                   	// #1
  417e78:	mov	x0, x20
  417e7c:	bl	44693c <_obstack_newchunk@@Base>
  417e80:	ldr	x8, [x20, #24]
  417e84:	add	x9, x8, #0x1
  417e88:	str	x9, [x20, #24]
  417e8c:	strb	wzr, [x8]
  417e90:	str	x23, [x19]
  417e94:	mov	w0, w21
  417e98:	ldp	x20, x19, [sp, #48]
  417e9c:	ldp	x22, x21, [sp, #32]
  417ea0:	ldr	x23, [sp, #16]
  417ea4:	ldp	x29, x30, [sp], #64
  417ea8:	ret
  417eac:	mov	x0, x22
  417eb0:	bl	404ac0 <__uflow@plt>
  417eb4:	mov	w21, w0
  417eb8:	b	417e00 <wcrtomb@plt+0x132c0>
  417ebc:	sub	sp, sp, #0x50
  417ec0:	cmp	w0, #0x56
  417ec4:	stp	x29, x30, [sp, #16]
  417ec8:	str	x23, [sp, #32]
  417ecc:	stp	x22, x21, [sp, #48]
  417ed0:	stp	x20, x19, [sp, #64]
  417ed4:	add	x29, sp, #0x10
  417ed8:	b.eq	417fd4 <wcrtomb@plt+0x13494>  // b.none
  417edc:	adrp	x2, 41a000 <wcrtomb@plt+0x154c0>
  417ee0:	mov	w20, w0
  417ee4:	mov	x19, x1
  417ee8:	add	x0, x1, #0x8
  417eec:	mov	w8, #0x1                   	// #1
  417ef0:	add	x2, x2, #0x334
  417ef4:	sub	x3, x29, #0x4
  417ef8:	mov	w1, #0x1                   	// #1
  417efc:	stur	w8, [x29, #-4]
  417f00:	bl	427720 <wcrtomb@plt+0x22be0>
  417f04:	cmp	w20, #0x31
  417f08:	b.eq	417f34 <wcrtomb@plt+0x133f4>  // b.none
  417f0c:	cmp	w20, #0x32
  417f10:	b.ne	417f54 <wcrtomb@plt+0x13414>  // b.any
  417f14:	mov	w8, #0x4                   	// #4
  417f18:	adrp	x2, 41a000 <wcrtomb@plt+0x154c0>
  417f1c:	add	x0, x19, #0x18
  417f20:	str	w8, [x29, #24]
  417f24:	add	x2, x2, #0x334
  417f28:	add	x3, x29, #0x18
  417f2c:	mov	w1, #0x4                   	// #4
  417f30:	b	417f50 <wcrtomb@plt+0x13410>
  417f34:	adrp	x2, 41a000 <wcrtomb@plt+0x154c0>
  417f38:	add	x0, x19, #0x18
  417f3c:	mov	w8, #0x2                   	// #2
  417f40:	add	x2, x2, #0x334
  417f44:	add	x3, x29, #0x1c
  417f48:	mov	w1, #0x2                   	// #2
  417f4c:	str	w8, [x29, #28]
  417f50:	bl	427720 <wcrtomb@plt+0x22be0>
  417f54:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417f58:	ldrb	w8, [x8, #3899]
  417f5c:	cbz	w8, 417fd4 <wcrtomb@plt+0x13494>
  417f60:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417f64:	ldr	x19, [x23, #3160]
  417f68:	sub	x20, x19, #0x1
  417f6c:	ldrb	w8, [x20, #1]!
  417f70:	and	w9, w8, #0xfe
  417f74:	cmp	w9, #0x2e
  417f78:	b.eq	417f6c <wcrtomb@plt+0x1342c>  // b.none
  417f7c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  417f80:	ldr	x21, [x9, #3624]
  417f84:	cbz	w8, 417fc0 <wcrtomb@plt+0x13480>
  417f88:	mov	x0, x21
  417f8c:	bl	403f40 <strlen@plt>
  417f90:	mov	x22, x0
  417f94:	sxtw	x2, w0
  417f98:	mov	x0, x20
  417f9c:	mov	x1, x21
  417fa0:	bl	404300 <strncmp@plt>
  417fa4:	cbz	w0, 417fec <wcrtomb@plt+0x134ac>
  417fa8:	mov	x0, x21
  417fac:	mov	x1, x19
  417fb0:	bl	41ec58 <wcrtomb@plt+0x1a118>
  417fb4:	str	x0, [x23, #3160]
  417fb8:	bl	41acec <wcrtomb@plt+0x161ac>
  417fbc:	b	417fcc <wcrtomb@plt+0x1348c>
  417fc0:	mov	x0, x21
  417fc4:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  417fc8:	str	x0, [x23, #3160]
  417fcc:	mov	x0, x19
  417fd0:	bl	404700 <free@plt>
  417fd4:	ldp	x20, x19, [sp, #64]
  417fd8:	ldp	x22, x21, [sp, #48]
  417fdc:	ldr	x23, [sp, #32]
  417fe0:	ldp	x29, x30, [sp, #16]
  417fe4:	add	sp, sp, #0x50
  417fe8:	ret
  417fec:	ldrb	w8, [x20, w22, sxtw]
  417ff0:	cbz	w8, 417fd4 <wcrtomb@plt+0x13494>
  417ff4:	cmp	w8, #0x2f
  417ff8:	b.eq	417fd4 <wcrtomb@plt+0x13494>  // b.none
  417ffc:	b	417fa8 <wcrtomb@plt+0x13468>
  418000:	sub	sp, sp, #0x80
  418004:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418008:	adrp	x10, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41800c:	mov	x8, xzr
  418010:	add	x9, x9, #0x4ee
  418014:	movi	v0.16b, #0x40
  418018:	add	x10, x10, #0x286
  41801c:	stp	x29, x30, [sp, #32]
  418020:	stp	x28, x27, [sp, #48]
  418024:	stp	x26, x25, [sp, #64]
  418028:	stp	x24, x23, [sp, #80]
  41802c:	stp	x22, x21, [sp, #96]
  418030:	stp	x20, x19, [sp, #112]
  418034:	add	x29, sp, #0x20
  418038:	str	x0, [sp]
  41803c:	stp	q0, q0, [x9, #224]
  418040:	stp	q0, q0, [x9, #192]
  418044:	stp	q0, q0, [x9, #160]
  418048:	stp	q0, q0, [x9, #128]
  41804c:	stp	q0, q0, [x9, #96]
  418050:	stp	q0, q0, [x9, #64]
  418054:	stp	q0, q0, [x9, #32]
  418058:	stp	q0, q0, [x9]
  41805c:	ldrb	w11, [x10, x8]
  418060:	strb	w8, [x9, x11]
  418064:	add	x8, x8, #0x1
  418068:	cmp	x8, #0x40
  41806c:	b.ne	41805c <wcrtomb@plt+0x1351c>  // b.any
  418070:	bl	41d81c <wcrtomb@plt+0x18cdc>
  418074:	mov	w0, wzr
  418078:	bl	405d50 <wcrtomb@plt+0x1210>
  41807c:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418080:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418084:	adrp	x22, 45d000 <_obstack_memory_used@@Base+0x164b0>
  418088:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41808c:	adrp	x28, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418090:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418094:	mov	w26, wzr
  418098:	add	x20, x20, #0xc50
  41809c:	add	x21, x21, #0xbd8
  4180a0:	add	x22, x22, #0x19a
  4180a4:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4180a8:	add	x23, x23, #0xbc0
  4180ac:	add	x28, x28, #0xdfe
  4180b0:	add	x27, x27, #0xc18
  4180b4:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4180b8:	mov	x0, x20
  4180bc:	bl	424420 <wcrtomb@plt+0x1f8e0>
  4180c0:	mov	x0, x21
  4180c4:	mov	x1, x20
  4180c8:	mov	w2, wzr
  4180cc:	bl	418578 <wcrtomb@plt+0x13a38>
  4180d0:	cmp	w0, #0x5
  4180d4:	b.hi	4184d4 <wcrtomb@plt+0x13994>  // b.pmore
  4180d8:	mov	w8, w0
  4180dc:	adr	x9, 4180ec <wcrtomb@plt+0x135ac>
  4180e0:	ldrh	w10, [x22, x8, lsl #1]
  4180e4:	add	x9, x9, x10, lsl #2
  4180e8:	br	x9
  4180ec:	ldr	x0, [x25, #3032]
  4180f0:	mov	w3, #0x1                   	// #1
  4180f4:	mov	x1, x20
  4180f8:	mov	x2, x23
  4180fc:	bl	4189fc <wcrtomb@plt+0x13ebc>
  418100:	ldr	x0, [x20, #8]
  418104:	bl	41ddf8 <wcrtomb@plt+0x192b8>
  418108:	tbz	w0, #0, 41817c <wcrtomb@plt+0x1363c>
  41810c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418110:	ldr	x8, [x8, #3104]
  418114:	tbnz	x8, #63, 418164 <wcrtomb@plt+0x13624>
  418118:	ldr	x8, [x25, #3032]
  41811c:	mov	w1, #0xc                   	// #12
  418120:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418124:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418128:	add	x0, x8, #0x88
  41812c:	mov	x2, x28
  418130:	mov	w5, wzr
  418134:	mov	w6, wzr
  418138:	bl	419168 <wcrtomb@plt+0x14628>
  41813c:	ldr	x8, [x27]
  418140:	cmp	x0, x8
  418144:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418148:	add	x8, x8, #0xd38
  41814c:	stp	x0, xzr, [x8]
  418150:	b.lt	41817c <wcrtomb@plt+0x1363c>  // b.tstop
  418154:	b.gt	418164 <wcrtomb@plt+0x13624>
  418158:	ldr	x8, [x27, #8]
  41815c:	cmp	w8, #0x0
  418160:	b.gt	41817c <wcrtomb@plt+0x1363c>
  418164:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418168:	add	x8, x8, #0xc58
  41816c:	ldr	x0, [x8]
  418170:	ldr	x1, [x8, #384]
  418174:	bl	40eca0 <wcrtomb@plt+0xa160>
  418178:	tbz	w0, #0, 41842c <wcrtomb@plt+0x138ec>
  41817c:	ldr	x8, [x25, #3032]
  418180:	ldrb	w0, [x8, #156]
  418184:	cmp	w0, #0x56
  418188:	b.eq	418434 <wcrtomb@plt+0x138f4>  // b.none
  41818c:	cmp	w0, #0x4d
  418190:	b.eq	418434 <wcrtomb@plt+0x138f4>  // b.none
  418194:	cmp	w0, #0x35
  418198:	b.ne	418208 <wcrtomb@plt+0x136c8>  // b.any
  41819c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4181a0:	ldrb	w8, [x8, #3754]
  4181a4:	cbz	w8, 418208 <wcrtomb@plt+0x136c8>
  4181a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4181ac:	ldr	x8, [x8, #4064]
  4181b0:	mov	x26, x25
  4181b4:	mov	x25, x22
  4181b8:	cbz	x8, 4181c0 <wcrtomb@plt+0x13680>
  4181bc:	blr	x8
  4181c0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4181c4:	mov	w2, #0x5                   	// #5
  4181c8:	mov	x0, xzr
  4181cc:	add	x1, x1, #0x2c6
  4181d0:	bl	404900 <dcgettext@plt>
  4181d4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4181d8:	ldr	x8, [x8, #3160]
  4181dc:	mov	x24, x0
  4181e0:	mov	x0, x8
  4181e4:	bl	444778 <argp_parse@@Base+0xcecc>
  4181e8:	mov	x3, x0
  4181ec:	mov	w0, wzr
  4181f0:	mov	w1, wzr
  4181f4:	mov	x2, x24
  4181f8:	bl	403fa0 <error@plt>
  4181fc:	mov	x22, x25
  418200:	mov	x25, x26
  418204:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418208:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41820c:	ldrb	w8, [x8, #3529]
  418210:	cbz	w8, 4183f0 <wcrtomb@plt+0x138b0>
  418214:	mov	w26, #0x1                   	// #1
  418218:	b	41847c <wcrtomb@plt+0x1393c>
  41821c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418220:	ldrb	w8, [x8, #3729]
  418224:	cbz	w8, 418294 <wcrtomb@plt+0x13754>
  418228:	ldr	x22, [x19, #2888]
  41822c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  418230:	mov	w2, #0x5                   	// #5
  418234:	mov	x0, xzr
  418238:	add	x1, x1, #0x2d3
  41823c:	bl	404900 <dcgettext@plt>
  418240:	mov	x24, x27
  418244:	mov	x27, x20
  418248:	mov	x20, x21
  41824c:	mov	x21, x25
  418250:	mov	x19, x23
  418254:	mov	x23, x0
  418258:	bl	4052f0 <wcrtomb@plt+0x7b0>
  41825c:	add	x1, sp, #0x8
  418260:	bl	43d080 <argp_parse@@Base+0x57d4>
  418264:	mov	x3, x0
  418268:	mov	w1, #0x1                   	// #1
  41826c:	mov	x0, x22
  418270:	adrp	x22, 45d000 <_obstack_memory_used@@Base+0x164b0>
  418274:	mov	x2, x23
  418278:	add	x22, x22, #0x19a
  41827c:	mov	x23, x19
  418280:	mov	x21, x20
  418284:	mov	x20, x27
  418288:	mov	x27, x24
  41828c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418290:	bl	404650 <__fprintf_chk@plt>
  418294:	ldr	x0, [x25, #3032]
  418298:	bl	405670 <wcrtomb@plt+0xb30>
  41829c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4182a0:	ldrb	w8, [x8, #3133]
  4182a4:	cbnz	w8, 41847c <wcrtomb@plt+0x1393c>
  4182a8:	b	4184fc <wcrtomb@plt+0x139bc>
  4182ac:	ldr	x0, [x25, #3032]
  4182b0:	bl	405670 <wcrtomb@plt+0xb30>
  4182b4:	cmp	w26, #0x3
  4182b8:	b.hi	4183e8 <wcrtomb@plt+0x138a8>  // b.pmore
  4182bc:	adrp	x11, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4182c0:	mov	w8, w26
  4182c4:	add	x11, x11, #0x1a6
  4182c8:	adr	x9, 4182dc <wcrtomb@plt+0x1379c>
  4182cc:	ldrb	w10, [x11, x8]
  4182d0:	add	x9, x9, x10, lsl #2
  4182d4:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4182d8:	br	x9
  4182dc:	ldr	x8, [x24, #4064]
  4182e0:	cbz	x8, 4182e8 <wcrtomb@plt+0x137a8>
  4182e4:	blr	x8
  4182e8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4182ec:	mov	w2, #0x5                   	// #5
  4182f0:	mov	x0, xzr
  4182f4:	add	x1, x1, #0x467
  4182f8:	bl	404900 <dcgettext@plt>
  4182fc:	mov	x2, x0
  418300:	mov	w0, wzr
  418304:	mov	w1, wzr
  418308:	bl	403fa0 <error@plt>
  41830c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418310:	mov	w9, #0x2                   	// #2
  418314:	str	w9, [x8, #2416]
  418318:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41831c:	ldrb	w8, [x8, #3729]
  418320:	cbz	w8, 4183a4 <wcrtomb@plt+0x13864>
  418324:	bl	4052f0 <wcrtomb@plt+0x7b0>
  418328:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41832c:	ldr	x8, [x8, #3024]
  418330:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418334:	ldr	x9, [x9, #3040]
  418338:	mov	x28, x23
  41833c:	ldr	x23, [x19, #2888]
  418340:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  418344:	sub	x8, x0, x8
  418348:	mov	w2, #0x5                   	// #5
  41834c:	mov	x0, xzr
  418350:	add	x1, x1, #0x30f
  418354:	mov	x21, x22
  418358:	mov	x22, x24
  41835c:	sub	x25, x8, x9
  418360:	bl	404900 <dcgettext@plt>
  418364:	mov	x26, x0
  418368:	add	x1, sp, #0x8
  41836c:	mov	x0, x25
  418370:	mov	x22, x21
  418374:	bl	43d080 <argp_parse@@Base+0x57d4>
  418378:	mov	x3, x0
  41837c:	mov	w1, #0x1                   	// #1
  418380:	mov	x0, x23
  418384:	mov	x23, x28
  418388:	adrp	x28, 45b000 <_obstack_memory_used@@Base+0x144b0>
  41838c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418390:	mov	x2, x26
  418394:	add	x28, x28, #0xdfe
  418398:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41839c:	add	x21, x21, #0xbd8
  4183a0:	bl	404650 <__fprintf_chk@plt>
  4183a4:	ldr	x8, [x24, #4064]
  4183a8:	cbz	x8, 4183b0 <wcrtomb@plt+0x13870>
  4183ac:	blr	x8
  4183b0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4183b4:	mov	w2, #0x5                   	// #5
  4183b8:	mov	x0, xzr
  4183bc:	add	x1, x1, #0x164
  4183c0:	mov	w26, #0x5                   	// #5
  4183c4:	bl	404900 <dcgettext@plt>
  4183c8:	mov	x2, x0
  4183cc:	mov	w0, wzr
  4183d0:	mov	w1, wzr
  4183d4:	bl	403fa0 <error@plt>
  4183d8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4183dc:	mov	w9, #0x2                   	// #2
  4183e0:	str	w9, [x8, #2416]
  4183e4:	b	41847c <wcrtomb@plt+0x1393c>
  4183e8:	mov	w26, #0x5                   	// #5
  4183ec:	b	41847c <wcrtomb@plt+0x1393c>
  4183f0:	mov	x8, x25
  4183f4:	ldr	x0, [x8, #3032]
  4183f8:	mov	x25, x22
  4183fc:	mov	x22, x23
  418400:	mov	x27, x8
  418404:	ldrb	w23, [x0, #156]
  418408:	bl	405670 <wcrtomb@plt+0xb30>
  41840c:	mov	x0, x20
  418410:	bl	404cf8 <wcrtomb@plt+0x1b8>
  418414:	ldrb	w8, [x20, #272]
  418418:	cbz	w8, 41844c <wcrtomb@plt+0x1390c>
  41841c:	mov	x0, x20
  418420:	bl	41f90c <wcrtomb@plt+0x1adcc>
  418424:	mov	x23, x22
  418428:	b	418464 <wcrtomb@plt+0x13924>
  41842c:	ldr	x8, [x25, #3032]
  418430:	ldrb	w0, [x8, #156]
  418434:	mov	x1, x20
  418438:	bl	417ebc <wcrtomb@plt+0x1337c>
  41843c:	ldr	x8, [sp]
  418440:	blr	x8
  418444:	mov	w26, #0x1                   	// #1
  418448:	b	41847c <wcrtomb@plt+0x1393c>
  41844c:	cmp	w23, #0x35
  418450:	mov	x23, x22
  418454:	b.eq	418464 <wcrtomb@plt+0x13924>  // b.none
  418458:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41845c:	ldr	x0, [x8, #3288]
  418460:	bl	41a168 <wcrtomb@plt+0x15628>
  418464:	bl	404d84 <wcrtomb@plt+0x244>
  418468:	mov	x22, x25
  41846c:	mov	x25, x27
  418470:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418474:	mov	w26, #0x1                   	// #1
  418478:	add	x27, x27, #0xc18
  41847c:	mov	x0, x20
  418480:	bl	41df48 <wcrtomb@plt+0x19408>
  418484:	tbz	w0, #0, 4180b8 <wcrtomb@plt+0x13578>
  418488:	b	4184d4 <wcrtomb@plt+0x13994>
  41848c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418490:	ldrb	w8, [x8, #3729]
  418494:	cbz	w8, 4184d4 <wcrtomb@plt+0x13994>
  418498:	ldr	x19, [x19, #2888]
  41849c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4184a0:	add	x1, x1, #0x2f2
  4184a4:	mov	w2, #0x5                   	// #5
  4184a8:	mov	x0, xzr
  4184ac:	bl	404900 <dcgettext@plt>
  4184b0:	mov	x20, x0
  4184b4:	bl	4052f0 <wcrtomb@plt+0x7b0>
  4184b8:	add	x1, sp, #0x8
  4184bc:	bl	43d080 <argp_parse@@Base+0x57d4>
  4184c0:	mov	x3, x0
  4184c4:	mov	w1, #0x1                   	// #1
  4184c8:	mov	x0, x19
  4184cc:	mov	x2, x20
  4184d0:	bl	404650 <__fprintf_chk@plt>
  4184d4:	bl	4059a4 <wcrtomb@plt+0xe64>
  4184d8:	bl	41dfe0 <wcrtomb@plt+0x194a0>
  4184dc:	ldp	x20, x19, [sp, #112]
  4184e0:	ldp	x22, x21, [sp, #96]
  4184e4:	ldp	x24, x23, [sp, #80]
  4184e8:	ldp	x26, x25, [sp, #64]
  4184ec:	ldp	x28, x27, [sp, #48]
  4184f0:	ldp	x29, x30, [sp, #32]
  4184f4:	add	sp, sp, #0x80
  4184f8:	ret
  4184fc:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418500:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418504:	add	x0, x0, #0xbd8
  418508:	add	x1, x1, #0xc50
  41850c:	mov	w2, wzr
  418510:	bl	418578 <wcrtomb@plt+0x13a38>
  418514:	cmp	w0, #0x3
  418518:	b.eq	4184d4 <wcrtomb@plt+0x13994>  // b.none
  41851c:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  418520:	ldrb	w8, [x8, #3720]
  418524:	tbz	w8, #0, 4184d4 <wcrtomb@plt+0x13994>
  418528:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41852c:	ldr	x8, [x8, #4064]
  418530:	cbz	x8, 418538 <wcrtomb@plt+0x139f8>
  418534:	blr	x8
  418538:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  41853c:	add	x1, x1, #0xc6b
  418540:	mov	w2, #0x5                   	// #5
  418544:	mov	x0, xzr
  418548:	bl	404900 <dcgettext@plt>
  41854c:	mov	x19, x0
  418550:	bl	4052f0 <wcrtomb@plt+0x7b0>
  418554:	add	x1, sp, #0x8
  418558:	bl	43d080 <argp_parse@@Base+0x57d4>
  41855c:	mov	x3, x0
  418560:	mov	w0, wzr
  418564:	mov	w1, wzr
  418568:	mov	x2, x19
  41856c:	bl	403fa0 <error@plt>
  418570:	b	4184d4 <wcrtomb@plt+0x13994>
  418574:	bl	4045b0 <abort@plt>
  418578:	sub	sp, sp, #0x1a0
  41857c:	stp	x29, x30, [sp, #320]
  418580:	stp	x28, x27, [sp, #336]
  418584:	stp	x26, x25, [sp, #352]
  418588:	stp	x24, x23, [sp, #368]
  41858c:	stp	x22, x21, [sp, #384]
  418590:	stp	x20, x19, [sp, #400]
  418594:	add	x29, sp, #0x140
  418598:	mov	w23, w2
  41859c:	mov	x19, x1
  4185a0:	mov	x24, x0
  4185a4:	bl	40535c <wcrtomb@plt+0x81c>
  4185a8:	str	x0, [x24]
  4185ac:	cbz	x0, 418850 <wcrtomb@plt+0x13d10>
  4185b0:	mov	x21, #0x2003                	// #8195
  4185b4:	movk	x21, #0x1000, lsl #16
  4185b8:	adrp	x25, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4185bc:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4185c0:	mov	x22, x0
  4185c4:	add	x8, x19, #0x158
  4185c8:	mov	w20, #0x1                   	// #1
  4185cc:	movk	x21, #0x2000, lsl #32
  4185d0:	add	x25, x25, #0x1aa
  4185d4:	add	x27, x27, #0xdf8
  4185d8:	stp	xzr, xzr, [sp, #8]
  4185dc:	stp	xzr, xzr, [sp, #32]
  4185e0:	str	x8, [sp, #24]
  4185e4:	b	418628 <wcrtomb@plt+0x13ae8>
  4185e8:	add	x0, x22, #0x7c
  4185ec:	mov	w1, #0xc                   	// #12
  4185f0:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  4185f4:	mov	x2, x27
  4185f8:	mov	x3, xzr
  4185fc:	mov	w5, wzr
  418600:	mov	w6, wzr
  418604:	bl	419168 <wcrtomb@plt+0x14628>
  418608:	mov	x2, x0
  41860c:	ldr	x0, [sp, #24]
  418610:	mov	x1, x22
  418614:	bl	412dc0 <wcrtomb@plt+0xe280>
  418618:	bl	40535c <wcrtomb@plt+0x81c>
  41861c:	mov	x22, x0
  418620:	str	x0, [x24]
  418624:	cbz	x0, 418850 <wcrtomb@plt+0x13d10>
  418628:	mov	x0, x22
  41862c:	mov	w1, wzr
  418630:	bl	419034 <wcrtomb@plt+0x144f4>
  418634:	cmp	w0, #0x1
  418638:	b.ne	4189d8 <wcrtomb@plt+0x13e98>  // b.any
  41863c:	ldrb	w8, [x22, #156]
  418640:	cmp	w8, #0x31
  418644:	b.ne	418654 <wcrtomb@plt+0x13b14>  // b.any
  418648:	mov	x0, xzr
  41864c:	str	xzr, [x19, #136]
  418650:	b	41867c <wcrtomb@plt+0x13b3c>
  418654:	add	x0, x22, #0x7c
  418658:	mov	w1, #0xc                   	// #12
  41865c:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418660:	mov	x2, x27
  418664:	mov	x3, xzr
  418668:	mov	w5, wzr
  41866c:	mov	w6, wzr
  418670:	bl	419168 <wcrtomb@plt+0x14628>
  418674:	str	x0, [x19, #136]
  418678:	tbnz	x0, #63, 418880 <wcrtomb@plt+0x13d40>
  41867c:	ldrb	w8, [x22, #156]
  418680:	sub	w8, w8, #0x4b
  418684:	cmp	w8, #0x2d
  418688:	b.hi	418860 <wcrtomb@plt+0x13d20>  // b.pmore
  41868c:	lsl	x9, x20, x8
  418690:	tst	x9, x21
  418694:	b.eq	418860 <wcrtomb@plt+0x13d20>  // b.none
  418698:	cmp	w23, #0x1
  41869c:	b.eq	418858 <wcrtomb@plt+0x13d18>  // b.none
  4186a0:	cmp	w8, #0x2d
  4186a4:	b.hi	418618 <wcrtomb@plt+0x13ad8>  // b.pmore
  4186a8:	adr	x9, 4185e8 <wcrtomb@plt+0x13aa8>
  4186ac:	ldrb	w10, [x25, x8]
  4186b0:	add	x9, x9, x10, lsl #2
  4186b4:	br	x9
  4186b8:	and	x8, x0, #0x1ff
  4186bc:	mov	w9, #0x200                 	// #512
  4186c0:	sub	x8, x9, x8
  4186c4:	tst	x0, #0x1ff
  4186c8:	csel	x8, xzr, x8, eq  // eq = none
  4186cc:	mov	x20, x25
  4186d0:	add	x25, x8, x0
  4186d4:	add	x26, x25, #0x200
  4186d8:	cmp	x26, x0
  4186dc:	b.cc	4189f8 <wcrtomb@plt+0x13eb8>  // b.lo, b.ul, b.last
  4186e0:	add	x0, x25, #0x201
  4186e4:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4186e8:	ldrb	w8, [x22, #156]
  4186ec:	mov	x28, x0
  4186f0:	lsr	x26, x26, #9
  4186f4:	cmp	w8, #0x4c
  4186f8:	b.ne	418710 <wcrtomb@plt+0x13bd0>  // b.any
  4186fc:	ldr	x0, [sp, #32]
  418700:	bl	404700 <free@plt>
  418704:	str	x28, [sp, #32]
  418708:	str	x26, [sp, #8]
  41870c:	b	418720 <wcrtomb@plt+0x13be0>
  418710:	ldr	x0, [sp, #40]
  418714:	bl	404700 <free@plt>
  418718:	str	x28, [sp, #40]
  41871c:	str	x26, [sp, #16]
  418720:	mov	x0, x22
  418724:	bl	405670 <wcrtomb@plt+0xb30>
  418728:	mov	w2, #0x200                 	// #512
  41872c:	mov	x0, x28
  418730:	mov	x1, x22
  418734:	bl	403ec0 <memcpy@plt>
  418738:	add	x22, x28, #0x200
  41873c:	cbz	x25, 418840 <wcrtomb@plt+0x13d00>
  418740:	bl	40535c <wcrtomb@plt+0x81c>
  418744:	cbz	x0, 418800 <wcrtomb@plt+0x13cc0>
  418748:	mov	x28, x0
  41874c:	bl	4056b4 <wcrtomb@plt+0xb74>
  418750:	cmp	x0, x25
  418754:	csel	x26, x25, x0, hi  // hi = pmore
  418758:	mov	x0, x22
  41875c:	mov	x1, x28
  418760:	mov	x2, x26
  418764:	bl	403ec0 <memcpy@plt>
  418768:	add	x8, x28, x26
  41876c:	sub	x0, x8, #0x1
  418770:	add	x22, x22, x26
  418774:	bl	405670 <wcrtomb@plt+0xb30>
  418778:	subs	x25, x25, x26
  41877c:	b.ne	418740 <wcrtomb@plt+0x13c00>  // b.any
  418780:	b	418840 <wcrtomb@plt+0x13d00>
  418784:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418788:	ldr	x0, [x8, #1216]
  41878c:	cbnz	x0, 4187a0 <wcrtomb@plt+0x13c60>
  418790:	mov	w0, #0x200                 	// #512
  418794:	bl	4459e8 <argp_parse@@Base+0xe13c>
  418798:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41879c:	str	x0, [x8, #1216]
  4187a0:	mov	w2, #0x200                 	// #512
  4187a4:	mov	x1, x22
  4187a8:	bl	403ec0 <memcpy@plt>
  4187ac:	movi	v0.2d, #0x0
  4187b0:	add	x0, x22, #0x7c
  4187b4:	mov	w1, #0xc                   	// #12
  4187b8:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  4187bc:	mov	x2, x27
  4187c0:	mov	x3, xzr
  4187c4:	mov	w5, wzr
  4187c8:	mov	w6, wzr
  4187cc:	stp	q0, q0, [sp, #48]
  4187d0:	bl	419168 <wcrtomb@plt+0x14628>
  4187d4:	mov	x2, x0
  4187d8:	add	x0, sp, #0x30
  4187dc:	mov	x1, x22
  4187e0:	bl	412dc0 <wcrtomb@plt+0xe280>
  4187e4:	add	x0, sp, #0x30
  4187e8:	bl	412af8 <wcrtomb@plt+0xdfb8>
  4187ec:	add	x0, sp, #0x30
  4187f0:	bl	412090 <wcrtomb@plt+0xd550>
  4187f4:	cmp	w23, #0x2
  4187f8:	b.ne	418618 <wcrtomb@plt+0x13ad8>  // b.any
  4187fc:	b	418858 <wcrtomb@plt+0x13d18>
  418800:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418804:	ldr	x8, [x8, #4064]
  418808:	cbz	x8, 418810 <wcrtomb@plt+0x13cd0>
  41880c:	blr	x8
  418810:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418814:	mov	w2, #0x5                   	// #5
  418818:	mov	x0, xzr
  41881c:	add	x1, x1, #0xcd8
  418820:	bl	404900 <dcgettext@plt>
  418824:	mov	x2, x0
  418828:	mov	w0, wzr
  41882c:	mov	w1, wzr
  418830:	bl	403fa0 <error@plt>
  418834:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418838:	mov	w9, #0x2                   	// #2
  41883c:	str	w9, [x8, #2416]
  418840:	strb	wzr, [x22]
  418844:	mov	x25, x20
  418848:	mov	w20, #0x1                   	// #1
  41884c:	b	418618 <wcrtomb@plt+0x13ad8>
  418850:	mov	w0, #0x4                   	// #4
  418854:	b	4189d8 <wcrtomb@plt+0x13e98>
  418858:	mov	w0, #0x2                   	// #2
  41885c:	b	4189d8 <wcrtomb@plt+0x13e98>
  418860:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418864:	ldr	x0, [x20, #3016]
  418868:	bl	404700 <free@plt>
  41886c:	ldr	x24, [sp, #32]
  418870:	cbz	x24, 418888 <wcrtomb@plt+0x13d48>
  418874:	ldr	x9, [sp, #8]
  418878:	add	x23, x24, #0x200
  41887c:	b	418930 <wcrtomb@plt+0x13df0>
  418880:	mov	w0, #0x5                   	// #5
  418884:	b	4189d8 <wcrtomb@plt+0x13e98>
  418888:	ldrb	w8, [x22, #345]
  41888c:	cbz	w8, 4188f8 <wcrtomb@plt+0x13db8>
  418890:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x194b0>
  418894:	add	x0, x22, #0x101
  418898:	add	x1, x1, #0x7d6
  41889c:	add	x21, sp, #0x30
  4188a0:	bl	404660 <strcmp@plt>
  4188a4:	cbnz	w0, 4188fc <wcrtomb@plt+0x13dbc>
  4188a8:	add	x8, x22, #0x159
  4188ac:	ldp	q1, q0, [x8]
  4188b0:	add	x0, sp, #0x30
  4188b4:	stp	q1, q0, [sp, #48]
  4188b8:	ldp	q1, q0, [x8, #64]
  4188bc:	ldp	q3, q2, [x8, #32]
  4188c0:	stp	q1, q0, [sp, #112]
  4188c4:	stp	q3, q2, [sp, #80]
  4188c8:	ldur	q0, [x8, #139]
  4188cc:	ldp	q2, q1, [x8, #112]
  4188d0:	ldr	q3, [x8, #96]
  4188d4:	strb	wzr, [sp, #203]
  4188d8:	stur	q0, [sp, #187]
  4188dc:	stp	q2, q1, [sp, #160]
  4188e0:	str	q3, [sp, #144]
  4188e4:	bl	403f40 <strlen@plt>
  4188e8:	add	x21, x21, x0
  4188ec:	mov	w8, #0x2f                  	// #47
  4188f0:	strb	w8, [x21], #1
  4188f4:	b	4188fc <wcrtomb@plt+0x13dbc>
  4188f8:	add	x21, sp, #0x30
  4188fc:	ldp	q1, q0, [x22, #16]
  418900:	ldr	q2, [x22]
  418904:	mov	x9, xzr
  418908:	add	x23, sp, #0x30
  41890c:	stp	q1, q0, [x21, #16]
  418910:	str	q2, [x21]
  418914:	ldr	w8, [x22, #96]
  418918:	ldp	q2, q0, [x22, #64]
  41891c:	ldr	q1, [x22, #48]
  418920:	strb	wzr, [x21, #100]
  418924:	str	w8, [x21, #96]
  418928:	stp	q2, q0, [x21, #64]
  41892c:	str	q1, [x21, #48]
  418930:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418934:	mov	x0, x19
  418938:	mov	x1, x23
  41893c:	str	x24, [x20, #3016]
  418940:	str	x9, [x8, #3024]
  418944:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  418948:	add	x0, x19, #0x8
  41894c:	mov	x1, x23
  418950:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  418954:	ldr	x0, [x19, #8]
  418958:	bl	4392ec <argp_parse@@Base+0x1a40>
  41895c:	and	w8, w0, #0x1
  418960:	strb	w8, [x19, #16]
  418964:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418968:	ldr	x0, [x20, #3048]
  41896c:	bl	404700 <free@plt>
  418970:	ldr	x9, [sp, #40]
  418974:	cbz	x9, 418984 <wcrtomb@plt+0x13e44>
  418978:	ldr	x10, [sp, #16]
  41897c:	add	x1, x9, #0x200
  418980:	b	4189c0 <wcrtomb@plt+0x13e80>
  418984:	ldur	q0, [x22, #189]
  418988:	ldur	q1, [x22, #173]
  41898c:	ldur	q2, [x22, #157]
  418990:	mov	x10, xzr
  418994:	add	x1, sp, #0x30
  418998:	stp	q1, q0, [sp, #64]
  41899c:	str	q2, [sp, #48]
  4189a0:	ldur	w8, [x22, #253]
  4189a4:	ldur	q0, [x22, #205]
  4189a8:	ldur	q1, [x22, #237]
  4189ac:	ldur	q2, [x22, #221]
  4189b0:	str	w8, [sp, #144]
  4189b4:	str	q0, [sp, #96]
  4189b8:	strb	wzr, [sp, #148]
  4189bc:	stp	q2, q1, [sp, #112]
  4189c0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4189c4:	add	x0, x19, #0x18
  4189c8:	str	x9, [x20, #3048]
  4189cc:	str	x10, [x8, #3040]
  4189d0:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  4189d4:	mov	w0, #0x1                   	// #1
  4189d8:	ldp	x20, x19, [sp, #400]
  4189dc:	ldp	x22, x21, [sp, #384]
  4189e0:	ldp	x24, x23, [sp, #368]
  4189e4:	ldp	x26, x25, [sp, #352]
  4189e8:	ldp	x28, x27, [sp, #336]
  4189ec:	ldp	x29, x30, [sp, #320]
  4189f0:	add	sp, sp, #0x1a0
  4189f4:	ret
  4189f8:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  4189fc:	stp	x29, x30, [sp, #-80]!
  418a00:	stp	x22, x21, [sp, #48]
  418a04:	mov	x22, x2
  418a08:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418a0c:	stp	x20, x19, [sp, #64]
  418a10:	mov	w21, w3
  418a14:	mov	x19, x1
  418a18:	mov	x20, x0
  418a1c:	add	x0, x0, #0x64
  418a20:	add	x2, x2, #0xef9
  418a24:	mov	w1, #0x8                   	// #8
  418a28:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418a2c:	mov	x4, #0xffffffffffffffff    	// #-1
  418a30:	mov	w5, wzr
  418a34:	mov	w6, wzr
  418a38:	str	x25, [sp, #16]
  418a3c:	stp	x24, x23, [sp, #32]
  418a40:	mov	x29, sp
  418a44:	bl	419168 <wcrtomb@plt+0x14628>
  418a48:	add	x24, x20, #0x101
  418a4c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x194b0>
  418a50:	mov	x23, x0
  418a54:	add	x1, x1, #0x7d6
  418a58:	mov	x0, x24
  418a5c:	and	w25, w23, #0xfff
  418a60:	bl	404660 <strcmp@plt>
  418a64:	cbz	w0, 418a94 <wcrtomb@plt+0x13f54>
  418a68:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418a6c:	add	x1, x1, #0x91a
  418a70:	mov	x0, x24
  418a74:	bl	404660 <strcmp@plt>
  418a78:	cmp	x23, #0x1, lsl #12
  418a7c:	mov	w8, #0x2                   	// #2
  418a80:	mov	w9, #0x6                   	// #6
  418a84:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  418a88:	cmp	w0, #0x0
  418a8c:	csinc	w24, w8, wzr, eq  // eq = none
  418a90:	b	418aec <wcrtomb@plt+0x13fac>
  418a94:	ldrb	w8, [x20, #475]
  418a98:	cbnz	w8, 418adc <wcrtomb@plt+0x13f9c>
  418a9c:	ldrb	w8, [x20, #476]
  418aa0:	and	w8, w8, #0xf8
  418aa4:	cmp	w8, #0x30
  418aa8:	b.ne	418adc <wcrtomb@plt+0x13f9c>  // b.any
  418aac:	ldrb	w8, [x20, #487]
  418ab0:	cmp	w8, #0x20
  418ab4:	b.ne	418adc <wcrtomb@plt+0x13f9c>  // b.any
  418ab8:	ldrb	w8, [x20, #488]
  418abc:	and	w8, w8, #0xf8
  418ac0:	cmp	w8, #0x30
  418ac4:	b.ne	418adc <wcrtomb@plt+0x13f9c>  // b.any
  418ac8:	ldrb	w8, [x20, #499]
  418acc:	cmp	w8, #0x20
  418ad0:	b.ne	418adc <wcrtomb@plt+0x13f9c>  // b.any
  418ad4:	mov	w24, #0x5                   	// #5
  418ad8:	b	418aec <wcrtomb@plt+0x13fac>
  418adc:	ldr	x8, [x19, #352]
  418ae0:	cmp	x8, #0x0
  418ae4:	mov	w8, #0x3                   	// #3
  418ae8:	cinc	w24, w8, ne  // ne = any
  418aec:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418af0:	add	x0, x20, #0x88
  418af4:	add	x2, x2, #0xdfe
  418af8:	mov	w1, #0xc                   	// #12
  418afc:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418b00:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418b04:	mov	w5, wzr
  418b08:	mov	w6, wzr
  418b0c:	str	w24, [x22]
  418b10:	str	w25, [x19, #104]
  418b14:	bl	419168 <wcrtomb@plt+0x14628>
  418b18:	stp	x0, xzr, [x19, #232]
  418b1c:	ldrb	w8, [x20, #265]
  418b20:	add	x23, x20, #0x109
  418b24:	add	x0, x19, #0x20
  418b28:	mov	w2, #0x20                  	// #32
  418b2c:	cmp	w8, #0x0
  418b30:	csel	x1, xzr, x23, eq  // eq = none
  418b34:	bl	41aa68 <wcrtomb@plt+0x15f28>
  418b38:	ldrb	w8, [x20, #297]
  418b3c:	add	x22, x20, #0x129
  418b40:	add	x0, x19, #0x28
  418b44:	mov	w2, #0x20                  	// #32
  418b48:	cmp	w8, #0x0
  418b4c:	csel	x1, xzr, x22, eq  // eq = none
  418b50:	bl	41aa68 <wcrtomb@plt+0x15f28>
  418b54:	mov	x0, x19
  418b58:	bl	41231c <wcrtomb@plt+0xd7dc>
  418b5c:	cmp	w24, #0x2
  418b60:	b.ne	418ba0 <wcrtomb@plt+0x14060>  // b.any
  418b64:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418b68:	ldrb	w8, [x8, #3089]
  418b6c:	cbz	w8, 418ba0 <wcrtomb@plt+0x14060>
  418b70:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418b74:	add	x0, x20, #0x159
  418b78:	add	x2, x2, #0xdfe
  418b7c:	mov	w1, #0xc                   	// #12
  418b80:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418b84:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418b88:	mov	w5, wzr
  418b8c:	mov	w6, wzr
  418b90:	bl	419168 <wcrtomb@plt+0x14628>
  418b94:	str	x0, [x19, #216]
  418b98:	add	x0, x20, #0x165
  418b9c:	b	418bd4 <wcrtomb@plt+0x14094>
  418ba0:	cmp	w24, #0x5
  418ba4:	b.ne	418ce8 <wcrtomb@plt+0x141a8>  // b.any
  418ba8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418bac:	add	x0, x20, #0x1dc
  418bb0:	add	x2, x2, #0xdfe
  418bb4:	mov	w1, #0xc                   	// #12
  418bb8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418bbc:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418bc0:	mov	w5, wzr
  418bc4:	mov	w6, wzr
  418bc8:	bl	419168 <wcrtomb@plt+0x14628>
  418bcc:	str	x0, [x19, #216]
  418bd0:	add	x0, x20, #0x1e8
  418bd4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418bd8:	add	x2, x2, #0xdfe
  418bdc:	mov	w1, #0xc                   	// #12
  418be0:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  418be4:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418be8:	mov	w5, wzr
  418bec:	mov	w6, wzr
  418bf0:	bl	419168 <wcrtomb@plt+0x14628>
  418bf4:	stp	x0, xzr, [x19, #248]
  418bf8:	str	xzr, [x19, #224]
  418bfc:	cbz	w21, 418c64 <wcrtomb@plt+0x14124>
  418c00:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418c04:	ldrb	w8, [x21, #3728]
  418c08:	cbz	w8, 418ddc <wcrtomb@plt+0x1429c>
  418c0c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418c10:	add	x0, x20, #0x6c
  418c14:	add	x2, x2, #0xf00
  418c18:	mov	w1, #0x8                   	// #8
  418c1c:	mov	w4, #0xffffffff            	// #-1
  418c20:	mov	x3, xzr
  418c24:	mov	w5, wzr
  418c28:	mov	w6, wzr
  418c2c:	bl	419168 <wcrtomb@plt+0x14628>
  418c30:	str	w0, [x19, #112]
  418c34:	ldrb	w8, [x21, #3728]
  418c38:	cbz	w8, 418df8 <wcrtomb@plt+0x142b8>
  418c3c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418c40:	add	x0, x20, #0x74
  418c44:	add	x2, x2, #0xf0d
  418c48:	mov	w1, #0x8                   	// #8
  418c4c:	mov	w4, #0xffffffff            	// #-1
  418c50:	mov	x3, xzr
  418c54:	mov	w5, wzr
  418c58:	mov	w6, wzr
  418c5c:	bl	419168 <wcrtomb@plt+0x14628>
  418c60:	str	w0, [x19, #116]
  418c64:	ldrb	w8, [x20, #156]
  418c68:	sub	w8, w8, #0x33
  418c6c:	cmp	w8, #0x1
  418c70:	b.hi	418ce0 <wcrtomb@plt+0x141a0>  // b.pmore
  418c74:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418c78:	add	x0, x20, #0x149
  418c7c:	add	x2, x2, #0xf88
  418c80:	mov	w1, #0x8                   	// #8
  418c84:	mov	x3, #0xffffffff80000000    	// #-2147483648
  418c88:	mov	w4, #0x7fffffff            	// #2147483647
  418c8c:	mov	w5, wzr
  418c90:	mov	w6, wzr
  418c94:	bl	419168 <wcrtomb@plt+0x14628>
  418c98:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418c9c:	mov	x21, x0
  418ca0:	lsr	x22, x0, #12
  418ca4:	add	x0, x20, #0x151
  418ca8:	add	x2, x2, #0xf90
  418cac:	mov	w1, #0x8                   	// #8
  418cb0:	mov	x3, #0xffffffff80000000    	// #-2147483648
  418cb4:	mov	w4, #0x7fffffff            	// #2147483647
  418cb8:	mov	w5, wzr
  418cbc:	mov	w6, wzr
  418cc0:	bl	419168 <wcrtomb@plt+0x14628>
  418cc4:	lsl	w8, w21, #8
  418cc8:	and	x8, x8, #0xfff00
  418ccc:	bfi	x8, x22, #44, #20
  418cd0:	lsr	x9, x0, #8
  418cd4:	bfxil	x8, x0, #0, #8
  418cd8:	bfi	x8, x9, #20, #24
  418cdc:	b	418d5c <wcrtomb@plt+0x1421c>
  418ce0:	mov	x8, xzr
  418ce4:	b	418d5c <wcrtomb@plt+0x1421c>
  418ce8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418cec:	add	x8, x8, #0xeb8
  418cf0:	ldr	q0, [x8]
  418cf4:	cmp	w24, #0x1
  418cf8:	stur	q0, [x19, #248]
  418cfc:	ldr	q0, [x8]
  418d00:	stur	q0, [x19, #216]
  418d04:	b.ne	418bfc <wcrtomb@plt+0x140bc>  // b.any
  418d08:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418d0c:	add	x0, x20, #0x6c
  418d10:	add	x2, x2, #0xf00
  418d14:	mov	w1, #0x8                   	// #8
  418d18:	mov	w4, #0xffffffff            	// #-1
  418d1c:	mov	x3, xzr
  418d20:	mov	w5, wzr
  418d24:	mov	w6, wzr
  418d28:	bl	419168 <wcrtomb@plt+0x14628>
  418d2c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  418d30:	str	w0, [x19, #112]
  418d34:	add	x0, x20, #0x74
  418d38:	add	x2, x2, #0xf0d
  418d3c:	mov	w1, #0x8                   	// #8
  418d40:	mov	w4, #0xffffffff            	// #-1
  418d44:	mov	x3, xzr
  418d48:	mov	w5, wzr
  418d4c:	mov	w6, wzr
  418d50:	bl	419168 <wcrtomb@plt+0x14628>
  418d54:	mov	x8, xzr
  418d58:	str	w0, [x19, #116]
  418d5c:	mov	x0, x19
  418d60:	str	x8, [x19, #120]
  418d64:	bl	412524 <wcrtomb@plt+0xd9e4>
  418d68:	mov	x0, x19
  418d6c:	bl	41f664 <wcrtomb@plt+0x1ab24>
  418d70:	tbz	w0, #0, 418d84 <wcrtomb@plt+0x14244>
  418d74:	mov	x0, x19
  418d78:	bl	41f70c <wcrtomb@plt+0x1abcc>
  418d7c:	add	x8, x19, #0x110
  418d80:	b	418dbc <wcrtomb@plt+0x1427c>
  418d84:	strb	wzr, [x19, #272]
  418d88:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418d8c:	ldr	w8, [x8, #3008]
  418d90:	orr	w8, w8, #0x4
  418d94:	cmp	w8, #0x6
  418d98:	b.ne	418db0 <wcrtomb@plt+0x14270>  // b.any
  418d9c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418da0:	ldr	x8, [x8, #3032]
  418da4:	ldrb	w8, [x8, #156]
  418da8:	cmp	w8, #0x44
  418dac:	b.eq	418db8 <wcrtomb@plt+0x14278>  // b.none
  418db0:	ldr	x8, [x19, #384]
  418db4:	cbz	x8, 418dc4 <wcrtomb@plt+0x14284>
  418db8:	add	x8, x19, #0x178
  418dbc:	mov	w9, #0x1                   	// #1
  418dc0:	strb	w9, [x8]
  418dc4:	ldp	x20, x19, [sp, #64]
  418dc8:	ldp	x22, x21, [sp, #48]
  418dcc:	ldp	x24, x23, [sp, #32]
  418dd0:	ldr	x25, [sp, #16]
  418dd4:	ldp	x29, x30, [sp], #80
  418dd8:	ret
  418ddc:	ldrb	w8, [x23]
  418de0:	cbz	w8, 418c0c <wcrtomb@plt+0x140cc>
  418de4:	add	x1, x19, #0x70
  418de8:	mov	x0, x23
  418dec:	bl	41c788 <wcrtomb@plt+0x17c48>
  418df0:	cbnz	w0, 418c34 <wcrtomb@plt+0x140f4>
  418df4:	b	418c0c <wcrtomb@plt+0x140cc>
  418df8:	ldrb	w8, [x22]
  418dfc:	cbz	w8, 418c3c <wcrtomb@plt+0x140fc>
  418e00:	add	x1, x19, #0x74
  418e04:	mov	x0, x22
  418e08:	bl	41c83c <wcrtomb@plt+0x17cfc>
  418e0c:	cbnz	w0, 418c64 <wcrtomb@plt+0x14124>
  418e10:	b	418c3c <wcrtomb@plt+0x140fc>
  418e14:	stp	x29, x30, [sp, #-32]!
  418e18:	stp	x20, x19, [sp, #16]
  418e1c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418e20:	ldrb	w8, [x8, #3529]
  418e24:	mov	x29, sp
  418e28:	cbz	w8, 418e38 <wcrtomb@plt+0x142f8>
  418e2c:	ldp	x20, x19, [sp, #16]
  418e30:	ldp	x29, x30, [sp], #32
  418e34:	ret
  418e38:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418e3c:	ldr	x0, [x8, #3032]
  418e40:	ldrb	w20, [x0, #156]
  418e44:	bl	405670 <wcrtomb@plt+0xb30>
  418e48:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418e4c:	add	x19, x19, #0xc50
  418e50:	mov	x0, x19
  418e54:	bl	404cf8 <wcrtomb@plt+0x1b8>
  418e58:	ldrb	w8, [x19, #272]
  418e5c:	cbz	w8, 418e70 <wcrtomb@plt+0x14330>
  418e60:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418e64:	add	x0, x0, #0xc50
  418e68:	bl	41f90c <wcrtomb@plt+0x1adcc>
  418e6c:	b	418e84 <wcrtomb@plt+0x14344>
  418e70:	cmp	w20, #0x35
  418e74:	b.eq	418e84 <wcrtomb@plt+0x14344>  // b.none
  418e78:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418e7c:	ldr	x0, [x8, #3288]
  418e80:	bl	41a168 <wcrtomb@plt+0x15628>
  418e84:	ldp	x20, x19, [sp, #16]
  418e88:	ldp	x29, x30, [sp], #32
  418e8c:	b	404d84 <wcrtomb@plt+0x244>
  418e90:	stp	x29, x30, [sp, #-64]!
  418e94:	str	x23, [sp, #16]
  418e98:	stp	x22, x21, [sp, #32]
  418e9c:	stp	x20, x19, [sp, #48]
  418ea0:	mov	x29, sp
  418ea4:	bl	4052f0 <wcrtomb@plt+0x7b0>
  418ea8:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418eac:	ldr	w8, [x22, #3700]
  418eb0:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418eb4:	cbz	w8, 418f4c <wcrtomb@plt+0x1440c>
  418eb8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418ebc:	ldr	w8, [x8, #3008]
  418ec0:	ldr	x20, [x21, #3032]
  418ec4:	mov	x19, x0
  418ec8:	cmp	w8, #0x4
  418ecc:	b.ne	418ef4 <wcrtomb@plt+0x143b4>  // b.any
  418ed0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418ed4:	ldr	x8, [x8, #2928]
  418ed8:	cbz	x8, 418ef4 <wcrtomb@plt+0x143b4>
  418edc:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418ee0:	ldrb	w8, [x23, #1261]
  418ee4:	cbnz	w8, 418ef4 <wcrtomb@plt+0x143b4>
  418ee8:	bl	419980 <wcrtomb@plt+0x14e40>
  418eec:	mov	w8, #0x1                   	// #1
  418ef0:	strb	w8, [x23, #1261]
  418ef4:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418ef8:	add	x0, x0, #0xc50
  418efc:	mov	x1, x20
  418f00:	mov	x2, x19
  418f04:	bl	419a68 <wcrtomb@plt+0x14f28>
  418f08:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418f0c:	ldrb	w8, [x8, #3089]
  418f10:	cbz	w8, 418f4c <wcrtomb@plt+0x1440c>
  418f14:	ldr	w8, [x22, #3700]
  418f18:	cmp	w8, #0x3
  418f1c:	b.lt	418f4c <wcrtomb@plt+0x1440c>  // b.tstop
  418f20:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418f24:	add	x0, x0, #0xc50
  418f28:	bl	416b64 <wcrtomb@plt+0x12024>
  418f2c:	tbz	w0, #0, 418f4c <wcrtomb@plt+0x1440c>
  418f30:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418f34:	ldr	x19, [x8, #3536]
  418f38:	mov	x0, x19
  418f3c:	bl	414aec <wcrtomb@plt+0xffac>
  418f40:	mov	x1, x0
  418f44:	mov	x0, x19
  418f48:	bl	417354 <wcrtomb@plt+0x12814>
  418f4c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418f50:	ldrb	w8, [x8, #3529]
  418f54:	cbz	w8, 418f6c <wcrtomb@plt+0x1442c>
  418f58:	ldp	x20, x19, [sp, #48]
  418f5c:	ldp	x22, x21, [sp, #32]
  418f60:	ldr	x23, [sp, #16]
  418f64:	ldp	x29, x30, [sp], #64
  418f68:	ret
  418f6c:	ldr	x0, [x21, #3032]
  418f70:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418f74:	add	x19, x19, #0xc50
  418f78:	ldrb	w20, [x0, #156]
  418f7c:	bl	405670 <wcrtomb@plt+0xb30>
  418f80:	mov	x0, x19
  418f84:	bl	404cf8 <wcrtomb@plt+0x1b8>
  418f88:	ldrb	w8, [x19, #272]
  418f8c:	cbz	w8, 418fa0 <wcrtomb@plt+0x14460>
  418f90:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418f94:	add	x0, x0, #0xc50
  418f98:	bl	41f90c <wcrtomb@plt+0x1adcc>
  418f9c:	b	418fb4 <wcrtomb@plt+0x14474>
  418fa0:	cmp	w20, #0x35
  418fa4:	b.eq	418fb4 <wcrtomb@plt+0x14474>  // b.none
  418fa8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418fac:	ldr	x0, [x8, #3288]
  418fb0:	bl	41a168 <wcrtomb@plt+0x15628>
  418fb4:	ldp	x20, x19, [sp, #48]
  418fb8:	ldp	x22, x21, [sp, #32]
  418fbc:	ldr	x23, [sp, #16]
  418fc0:	ldp	x29, x30, [sp], #64
  418fc4:	b	404d84 <wcrtomb@plt+0x244>
  418fc8:	stp	x29, x30, [sp, #-48]!
  418fcc:	stp	x22, x21, [sp, #16]
  418fd0:	stp	x20, x19, [sp, #32]
  418fd4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418fd8:	ldr	w8, [x8, #3008]
  418fdc:	mov	x19, x2
  418fe0:	mov	x20, x1
  418fe4:	mov	x21, x0
  418fe8:	cmp	w8, #0x4
  418fec:	mov	x29, sp
  418ff0:	b.ne	419018 <wcrtomb@plt+0x144d8>  // b.any
  418ff4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  418ff8:	ldr	x8, [x8, #2928]
  418ffc:	cbz	x8, 419018 <wcrtomb@plt+0x144d8>
  419000:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419004:	ldrb	w8, [x22, #1261]
  419008:	cbnz	w8, 419018 <wcrtomb@plt+0x144d8>
  41900c:	bl	419980 <wcrtomb@plt+0x14e40>
  419010:	mov	w8, #0x1                   	// #1
  419014:	strb	w8, [x22, #1261]
  419018:	mov	x0, x21
  41901c:	mov	x1, x20
  419020:	mov	x2, x19
  419024:	ldp	x20, x19, [sp, #32]
  419028:	ldp	x22, x21, [sp, #16]
  41902c:	ldp	x29, x30, [sp], #48
  419030:	b	419a68 <wcrtomb@plt+0x14f28>
  419034:	sub	sp, sp, #0x70
  419038:	stp	x20, x19, [sp, #96]
  41903c:	mov	x8, xzr
  419040:	mov	w19, wzr
  419044:	mov	w20, wzr
  419048:	mov	w9, wzr
  41904c:	mov	w10, wzr
  419050:	stp	x29, x30, [sp, #16]
  419054:	stp	x28, x27, [sp, #32]
  419058:	stp	x26, x25, [sp, #48]
  41905c:	stp	x24, x23, [sp, #64]
  419060:	stp	x22, x21, [sp, #80]
  419064:	add	x29, sp, #0x10
  419068:	add	x11, x0, x8
  41906c:	ldrsb	w12, [x11]
  419070:	ldrsb	w11, [x11, #1]
  419074:	add	x8, x8, #0x2
  419078:	cmp	x8, #0x200
  41907c:	add	w9, w9, w12, uxtb
  419080:	add	w10, w10, w11, uxtb
  419084:	add	w19, w19, w12
  419088:	add	w20, w20, w11
  41908c:	b.ne	419068 <wcrtomb@plt+0x14528>  // b.any
  419090:	adds	w22, w10, w9
  419094:	b.eq	419144 <wcrtomb@plt+0x14604>  // b.none
  419098:	ldrsb	w8, [x0, #148]!
  41909c:	and	w6, w1, #0x1
  4190a0:	mov	w1, #0x8                   	// #8
  4190a4:	mov	w4, #0x7fffffff            	// #2147483647
  4190a8:	ldrsb	w23, [x0, #7]
  4190ac:	ldrsb	w24, [x0, #6]
  4190b0:	ldrsb	w25, [x0, #5]
  4190b4:	ldrsb	w26, [x0, #4]
  4190b8:	ldrsb	w27, [x0, #3]
  4190bc:	ldrsb	w28, [x0, #2]
  4190c0:	ldrsb	w21, [x0, #1]
  4190c4:	mov	w5, #0x1                   	// #1
  4190c8:	mov	x2, xzr
  4190cc:	mov	x3, xzr
  4190d0:	stur	w8, [x29, #-4]
  4190d4:	bl	419168 <wcrtomb@plt+0x14628>
  4190d8:	mov	x8, x0
  4190dc:	mov	w0, #0x5                   	// #5
  4190e0:	tbnz	w8, #31, 419148 <wcrtomb@plt+0x14608>
  4190e4:	add	w9, w20, w19
  4190e8:	sub	w9, w9, w23
  4190ec:	sub	w10, w22, w23, uxtb
  4190f0:	sub	w9, w9, w24
  4190f4:	sub	w10, w10, w24, uxtb
  4190f8:	sub	w9, w9, w25
  4190fc:	sub	w10, w10, w25, uxtb
  419100:	sub	w9, w9, w26
  419104:	ldur	w11, [x29, #-4]
  419108:	sub	w10, w10, w26, uxtb
  41910c:	sub	w9, w9, w27
  419110:	sub	w10, w10, w27, uxtb
  419114:	sub	w9, w9, w28
  419118:	sub	w10, w10, w28, uxtb
  41911c:	sub	w9, w9, w21
  419120:	sub	w10, w10, w21, uxtb
  419124:	sub	w9, w9, w11
  419128:	sub	w10, w10, w11, uxtb
  41912c:	add	w9, w9, #0x100
  419130:	add	w10, w10, #0x100
  419134:	cmp	w9, w8
  419138:	ccmp	w10, w8, #0x4, ne  // ne = any
  41913c:	csinc	w0, w0, wzr, ne  // ne = any
  419140:	b	419148 <wcrtomb@plt+0x14608>
  419144:	mov	w0, #0x3                   	// #3
  419148:	ldp	x20, x19, [sp, #96]
  41914c:	ldp	x22, x21, [sp, #80]
  419150:	ldp	x24, x23, [sp, #64]
  419154:	ldp	x26, x25, [sp, #48]
  419158:	ldp	x28, x27, [sp, #32]
  41915c:	ldp	x29, x30, [sp, #16]
  419160:	add	sp, sp, #0x70
  419164:	ret
  419168:	stp	x29, x30, [sp, #-96]!
  41916c:	stp	x28, x27, [sp, #16]
  419170:	stp	x26, x25, [sp, #32]
  419174:	stp	x24, x23, [sp, #48]
  419178:	stp	x22, x21, [sp, #64]
  41917c:	stp	x20, x19, [sp, #80]
  419180:	mov	x29, sp
  419184:	sub	sp, sp, #0x440
  419188:	ldrb	w8, [x0]
  41918c:	mov	x20, x2
  419190:	mov	x19, sp
  419194:	cmp	w8, #0x0
  419198:	cset	w21, eq  // eq = none
  41919c:	cmp	x21, x1
  4191a0:	b.eq	419210 <wcrtomb@plt+0x146d0>  // b.none
  4191a4:	neg	x8, x3
  4191a8:	mov	w24, w5
  4191ac:	mov	x23, x3
  4191b0:	mov	x26, x1
  4191b4:	mov	x25, x0
  4191b8:	str	x8, [x19, #8]
  4191bc:	add	x22, x0, x1
  4191c0:	add	x28, x0, x21
  4191c4:	str	w6, [x19, #20]
  4191c8:	str	x4, [x19, #24]
  4191cc:	bl	404690 <__ctype_b_loc@plt>
  4191d0:	ldr	x17, [x19, #24]
  4191d4:	ldr	w6, [x19, #20]
  4191d8:	ldr	x11, [x0]
  4191dc:	sub	x9, x26, x21
  4191e0:	sub	x8, x9, #0x1
  4191e4:	add	x27, x21, #0x1
  4191e8:	sub	x10, x9, #0x2
  4191ec:	ldrb	w9, [x28]
  4191f0:	ldrh	w12, [x11, x9, lsl #1]
  4191f4:	tbz	w12, #13, 419284 <wcrtomb@plt+0x14744>
  4191f8:	add	x28, x28, #0x1
  4191fc:	sub	x8, x8, #0x1
  419200:	add	x27, x27, #0x1
  419204:	cmp	x28, x22
  419208:	sub	x10, x10, #0x1
  41920c:	b.ne	4191ec <wcrtomb@plt+0x146ac>  // b.any
  419210:	mov	x0, #0xffffffffffffffff    	// #-1
  419214:	cbz	x20, 419264 <wcrtomb@plt+0x14724>
  419218:	tbnz	w6, #0, 419264 <wcrtomb@plt+0x14724>
  41921c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419220:	ldr	x8, [x8, #4064]
  419224:	cbz	x8, 41922c <wcrtomb@plt+0x146ec>
  419228:	blr	x8
  41922c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419230:	add	x1, x1, #0x348
  419234:	mov	w2, #0x5                   	// #5
  419238:	mov	x0, xzr
  41923c:	bl	404900 <dcgettext@plt>
  419240:	mov	x2, x0
  419244:	mov	w0, wzr
  419248:	mov	w1, wzr
  41924c:	mov	x3, x20
  419250:	bl	403fa0 <error@plt>
  419254:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419258:	mov	w9, #0x2                   	// #2
  41925c:	str	w9, [x8, #2416]
  419260:	mov	x0, #0xffffffffffffffff    	// #-1
  419264:	mov	sp, x29
  419268:	ldp	x20, x19, [sp, #80]
  41926c:	ldp	x22, x21, [sp, #64]
  419270:	ldp	x24, x23, [sp, #48]
  419274:	ldp	x26, x25, [sp, #32]
  419278:	ldp	x28, x27, [sp, #16]
  41927c:	ldp	x29, x30, [sp], #96
  419280:	ret
  419284:	and	w11, w9, #0xf8
  419288:	cmp	w11, #0x30
  41928c:	b.ne	4192f0 <wcrtomb@plt+0x147b0>  // b.any
  419290:	add	x10, x28, #0x1
  419294:	cmp	x10, x22
  419298:	sub	x12, x9, #0x30
  41929c:	b.eq	4193d0 <wcrtomb@plt+0x14890>  // b.none
  4192a0:	mov	x13, xzr
  4192a4:	mov	w11, wzr
  4192a8:	mov	x24, x12
  4192ac:	add	x15, x28, x13
  4192b0:	ldrb	w14, [x15, #1]
  4192b4:	and	w16, w14, #0xf8
  4192b8:	cmp	w16, #0x30
  4192bc:	b.ne	4193e4 <wcrtomb@plt+0x148a4>  // b.any
  4192c0:	lsr	x15, x24, #61
  4192c4:	cmp	x15, #0x0
  4192c8:	add	x14, x14, x24, lsl #3
  4192cc:	add	x13, x13, #0x1
  4192d0:	cset	w15, ne  // ne = any
  4192d4:	cmp	x8, x13
  4192d8:	orr	w11, w11, w15
  4192dc:	sub	x24, x14, #0x30
  4192e0:	b.ne	4192ac <wcrtomb@plt+0x1476c>  // b.any
  4192e4:	mov	x27, x22
  4192e8:	tbz	w11, #0, 4193ec <wcrtomb@plt+0x148ac>
  4192ec:	b	4193f4 <wcrtomb@plt+0x148b4>
  4192f0:	tbz	w24, #0, 419304 <wcrtomb@plt+0x147c4>
  4192f4:	mov	w21, wzr
  4192f8:	mov	x24, xzr
  4192fc:	mov	x27, x28
  419300:	b	4194d0 <wcrtomb@plt+0x14990>
  419304:	mov	x24, xzr
  419308:	cmp	w9, #0x7f
  41930c:	mov	w21, wzr
  419310:	b.gt	419530 <wcrtomb@plt+0x149f0>
  419314:	cmp	w9, #0x2b
  419318:	b.eq	419324 <wcrtomb@plt+0x147e4>  // b.none
  41931c:	cmp	w9, #0x2d
  419320:	b.ne	419670 <wcrtomb@plt+0x14b30>  // b.any
  419324:	tbnz	w6, #0, 419384 <wcrtomb@plt+0x14844>
  419328:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41932c:	ldrb	w10, [x8, #1518]
  419330:	tbnz	w10, #0, 419384 <wcrtomb@plt+0x14844>
  419334:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419338:	ldr	x9, [x9, #4064]
  41933c:	mov	x21, x0
  419340:	mov	w10, #0x1                   	// #1
  419344:	strb	w10, [x8, #1518]
  419348:	cbz	x9, 419350 <wcrtomb@plt+0x14810>
  41934c:	blr	x9
  419350:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419354:	add	x1, x1, #0x3ec
  419358:	mov	w2, #0x5                   	// #5
  41935c:	mov	x0, xzr
  419360:	bl	404900 <dcgettext@plt>
  419364:	mov	x2, x0
  419368:	mov	w0, wzr
  41936c:	mov	w1, wzr
  419370:	bl	403fa0 <error@plt>
  419374:	ldrb	w9, [x28]
  419378:	ldr	w6, [x19, #20]
  41937c:	ldr	x17, [x19, #24]
  419380:	mov	x0, x21
  419384:	cmp	w9, #0x2d
  419388:	add	x8, x28, #0x1
  41938c:	cset	w21, eq  // eq = none
  419390:	cmp	x8, x22
  419394:	b.eq	4196e0 <wcrtomb@plt+0x14ba0>  // b.none
  419398:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41939c:	mov	x24, xzr
  4193a0:	add	x8, x8, #0x4ee
  4193a4:	ldrb	w9, [x25, x27]
  4193a8:	ldrb	w9, [x8, x9]
  4193ac:	cmp	x9, #0x3f
  4193b0:	b.hi	419748 <wcrtomb@plt+0x14c08>  // b.pmore
  4193b4:	lsr	x10, x24, #58
  4193b8:	cbnz	x10, 419750 <wcrtomb@plt+0x14c10>
  4193bc:	add	x27, x27, #0x1
  4193c0:	cmp	x26, x27
  4193c4:	orr	x24, x9, x24, lsl #6
  4193c8:	b.ne	4193a4 <wcrtomb@plt+0x14864>  // b.any
  4193cc:	b	4195b8 <wcrtomb@plt+0x14a78>
  4193d0:	mov	w11, wzr
  4193d4:	mov	x27, x22
  4193d8:	mov	x24, x12
  4193dc:	tbz	w11, #0, 4193ec <wcrtomb@plt+0x148ac>
  4193e0:	b	4193f4 <wcrtomb@plt+0x148b4>
  4193e4:	add	x27, x15, #0x1
  4193e8:	tbnz	w11, #0, 4193f4 <wcrtomb@plt+0x148b4>
  4193ec:	cmp	x24, x17
  4193f0:	b.ls	4194cc <wcrtomb@plt+0x1498c>  // b.plast
  4193f4:	cbz	x20, 419480 <wcrtomb@plt+0x14940>
  4193f8:	cmp	w9, #0x32
  4193fc:	b.cc	419480 <wcrtomb@plt+0x14940>  // b.lo, b.ul, b.last
  419400:	orr	x9, x12, #0x4
  419404:	mov	w11, #0x7                   	// #7
  419408:	cmp	x10, x22
  41940c:	sub	x11, x11, x9
  419410:	mov	w9, wzr
  419414:	b.eq	419454 <wcrtomb@plt+0x14914>  // b.none
  419418:	mov	x27, x10
  41941c:	ldrb	w10, [x27]
  419420:	and	w12, w10, #0xf8
  419424:	cmp	w12, #0x30
  419428:	b.ne	419458 <wcrtomb@plt+0x14918>  // b.any
  41942c:	lsl	x12, x11, #3
  419430:	lsr	x11, x11, #61
  419434:	cmp	x11, #0x0
  419438:	sub	x10, x12, x10
  41943c:	cset	w12, ne  // ne = any
  419440:	add	x11, x10, #0x37
  419444:	subs	x8, x8, #0x1
  419448:	orr	w9, w9, w12
  41944c:	add	x27, x27, #0x1
  419450:	b.ne	41941c <wcrtomb@plt+0x148dc>  // b.any
  419454:	mov	x27, x22
  419458:	ldr	x10, [x19, #8]
  41945c:	adds	x24, x11, #0x1
  419460:	cset	w8, cs  // cs = hs, nlast
  419464:	orr	w11, w9, w8
  419468:	cmp	x24, x10
  41946c:	b.hi	419480 <wcrtomb@plt+0x14940>  // b.pmore
  419470:	tbnz	w11, #0, 419480 <wcrtomb@plt+0x14940>
  419474:	tbz	w6, #0, 4196f0 <wcrtomb@plt+0x14bb0>
  419478:	mov	w21, #0x1                   	// #1
  41947c:	b	4194d0 <wcrtomb@plt+0x14990>
  419480:	tbz	w11, #0, 4194cc <wcrtomb@plt+0x1498c>
  419484:	mov	x0, #0xffffffffffffffff    	// #-1
  419488:	cbz	x20, 419264 <wcrtomb@plt+0x14724>
  41948c:	tbnz	w6, #0, 419264 <wcrtomb@plt+0x14724>
  419490:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419494:	ldr	x8, [x8, #4064]
  419498:	cbz	x8, 4194a0 <wcrtomb@plt+0x14960>
  41949c:	blr	x8
  4194a0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4194a4:	add	x1, x1, #0x3c0
  4194a8:	mov	w2, #0x5                   	// #5
  4194ac:	mov	x0, xzr
  4194b0:	bl	404900 <dcgettext@plt>
  4194b4:	mov	x2, x0
  4194b8:	sub	w3, w27, w28
  4194bc:	mov	w0, wzr
  4194c0:	mov	w1, wzr
  4194c4:	mov	x4, x28
  4194c8:	b	4196d4 <wcrtomb@plt+0x14b94>
  4194cc:	mov	w21, wzr
  4194d0:	cmp	x27, x22
  4194d4:	b.eq	4195b8 <wcrtomb@plt+0x14a78>  // b.none
  4194d8:	ldrb	w8, [x27]
  4194dc:	cbz	x8, 4195b8 <wcrtomb@plt+0x14a78>
  4194e0:	ldr	x9, [x0]
  4194e4:	ldrh	w8, [x9, x8, lsl #1]
  4194e8:	tbnz	w8, #13, 4195b8 <wcrtomb@plt+0x14a78>
  4194ec:	cbz	x20, 419260 <wcrtomb@plt+0x14720>
  4194f0:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4194f4:	ldr	x8, [x21, #1520]
  4194f8:	cbnz	x8, 419510 <wcrtomb@plt+0x149d0>
  4194fc:	mov	x0, xzr
  419500:	bl	443348 <argp_parse@@Base+0xba9c>
  419504:	mov	w1, #0x8                   	// #8
  419508:	str	x0, [x21, #1520]
  41950c:	bl	4433ac <argp_parse@@Base+0xbb00>
  419510:	cbz	x26, 419678 <wcrtomb@plt+0x14b38>
  419514:	add	x8, x25, x26
  419518:	ldurb	w8, [x8, #-1]
  41951c:	sub	x26, x26, #0x1
  419520:	cbz	w8, 419510 <wcrtomb@plt+0x149d0>
  419524:	add	x8, x25, x26
  419528:	add	x8, x8, #0x1
  41952c:	b	41967c <wcrtomb@plt+0x14b3c>
  419530:	cmp	w9, #0x80
  419534:	b.eq	419540 <wcrtomb@plt+0x14a00>  // b.none
  419538:	cmp	w9, #0xff
  41953c:	b.ne	419670 <wcrtomb@plt+0x14b30>  // b.any
  419540:	and	w8, w9, #0x40
  419544:	and	w9, w9, #0x3f
  419548:	neg	w11, w8
  41954c:	sub	w12, w9, w8
  419550:	lsl	x9, x11, #50
  419554:	sxtw	x13, w12
  419558:	mov	w11, #0x1                   	// #1
  41955c:	ldrb	w12, [x28, x11]
  419560:	bfi	x12, x13, #8, #56
  419564:	cbz	x10, 4195ac <wcrtomb@plt+0x14a6c>
  419568:	and	x13, x12, #0xffffffffffffff
  41956c:	orr	x13, x13, x9
  419570:	add	x11, x11, #0x1
  419574:	cmp	x13, x12
  419578:	sub	x10, x10, #0x1
  41957c:	mov	x13, x12
  419580:	b.eq	41955c <wcrtomb@plt+0x14a1c>  // b.none
  419584:	mov	x0, #0xffffffffffffffff    	// #-1
  419588:	cbz	x20, 419264 <wcrtomb@plt+0x14724>
  41958c:	tbnz	w6, #0, 419264 <wcrtomb@plt+0x14724>
  419590:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419594:	ldr	x8, [x8, #4064]
  419598:	cbz	x8, 4195a0 <wcrtomb@plt+0x14a60>
  41959c:	blr	x8
  4195a0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4195a4:	add	x1, x1, #0x44d
  4195a8:	b	419234 <wcrtomb@plt+0x146f4>
  4195ac:	cmp	w8, #0x0
  4195b0:	cset	w21, ne  // ne = any
  4195b4:	cneg	x24, x12, ne  // ne = any
  4195b8:	ldr	x9, [x19, #8]
  4195bc:	cmp	w21, #0x0
  4195c0:	csel	x8, x9, x17, ne  // ne = any
  4195c4:	cmp	x24, x8
  4195c8:	b.ls	4196e4 <wcrtomb@plt+0x14ba4>  // b.plast
  4195cc:	mov	x0, #0xffffffffffffffff    	// #-1
  4195d0:	cbz	x20, 419264 <wcrtomb@plt+0x14724>
  4195d4:	tbnz	w6, #0, 419264 <wcrtomb@plt+0x14724>
  4195d8:	add	x8, x19, #0x50
  4195dc:	orr	x1, x8, #0x1
  4195e0:	mov	x0, x9
  4195e4:	bl	43d080 <argp_parse@@Base+0x57d4>
  4195e8:	add	x8, x19, #0x20
  4195ec:	mov	x22, x0
  4195f0:	orr	x1, x8, #0x1
  4195f4:	mov	x0, x24
  4195f8:	bl	43d080 <argp_parse@@Base+0x57d4>
  4195fc:	mov	x24, x0
  419600:	cbz	w21, 41960c <wcrtomb@plt+0x14acc>
  419604:	mov	w8, #0x2d                  	// #45
  419608:	strb	w8, [x24, #-1]!
  41960c:	cbz	x23, 419618 <wcrtomb@plt+0x14ad8>
  419610:	mov	w8, #0x2d                  	// #45
  419614:	strb	w8, [x22, #-1]!
  419618:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41961c:	ldr	x8, [x8, #4064]
  419620:	cbz	x8, 419628 <wcrtomb@plt+0x14ae8>
  419624:	blr	x8
  419628:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41962c:	add	x1, x1, #0x4ad
  419630:	mov	w2, #0x5                   	// #5
  419634:	mov	x0, xzr
  419638:	bl	404900 <dcgettext@plt>
  41963c:	mov	x23, x0
  419640:	ldr	x0, [x19, #24]
  419644:	add	x1, x19, #0x38
  419648:	bl	43d080 <argp_parse@@Base+0x57d4>
  41964c:	mov	x6, x0
  419650:	mov	w0, wzr
  419654:	mov	w1, wzr
  419658:	mov	x2, x23
  41965c:	mov	x3, x24
  419660:	mov	x4, x20
  419664:	mov	x5, x22
  419668:	bl	403fa0 <error@plt>
  41966c:	b	419254 <wcrtomb@plt+0x14714>
  419670:	mov	x27, x28
  419674:	b	4194d0 <wcrtomb@plt+0x14990>
  419678:	mov	x8, x25
  41967c:	ldr	x4, [x21, #1520]
  419680:	sub	x3, x8, x25
  419684:	add	x0, x19, #0x50
  419688:	mov	w1, #0x3e8                 	// #1000
  41968c:	mov	x2, x25
  419690:	bl	443454 <argp_parse@@Base+0xbba8>
  419694:	ldr	w8, [x19, #20]
  419698:	tbnz	w8, #0, 419260 <wcrtomb@plt+0x14720>
  41969c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4196a0:	ldr	x8, [x8, #4064]
  4196a4:	cbz	x8, 4196ac <wcrtomb@plt+0x14b6c>
  4196a8:	blr	x8
  4196ac:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4196b0:	add	x1, x1, #0x477
  4196b4:	mov	w2, #0x5                   	// #5
  4196b8:	mov	x0, xzr
  4196bc:	bl	404900 <dcgettext@plt>
  4196c0:	mov	x2, x0
  4196c4:	add	x4, x19, #0x50
  4196c8:	mov	w3, #0x3e8                 	// #1000
  4196cc:	mov	w0, wzr
  4196d0:	mov	w1, wzr
  4196d4:	mov	x5, x20
  4196d8:	bl	403fa0 <error@plt>
  4196dc:	b	419254 <wcrtomb@plt+0x14714>
  4196e0:	mov	x24, xzr
  4196e4:	cmp	w21, #0x0
  4196e8:	cneg	x0, x24, ne  // ne = any
  4196ec:	b	419264 <wcrtomb@plt+0x14724>
  4196f0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4196f4:	ldr	x8, [x8, #4064]
  4196f8:	str	x0, [x19]
  4196fc:	cbz	x8, 419704 <wcrtomb@plt+0x14bc4>
  419700:	blr	x8
  419704:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419708:	add	x1, x1, #0x379
  41970c:	mov	w2, #0x5                   	// #5
  419710:	mov	x0, xzr
  419714:	bl	404900 <dcgettext@plt>
  419718:	mov	x2, x0
  41971c:	sub	w3, w27, w28
  419720:	mov	w0, wzr
  419724:	mov	w1, wzr
  419728:	mov	x4, x28
  41972c:	mov	x5, x20
  419730:	bl	403fa0 <error@plt>
  419734:	ldr	w6, [x19, #20]
  419738:	ldr	x17, [x19, #24]
  41973c:	ldr	x0, [x19]
  419740:	mov	w21, #0x1                   	// #1
  419744:	b	4194d0 <wcrtomb@plt+0x14990>
  419748:	add	x27, x25, x27
  41974c:	b	4194d0 <wcrtomb@plt+0x14990>
  419750:	add	x9, x26, #0x10
  419754:	mov	x8, sp
  419758:	and	x9, x9, #0xfffffffffffffff0
  41975c:	sub	x22, x8, x9
  419760:	mov	sp, x22
  419764:	mov	x0, x22
  419768:	mov	x1, x25
  41976c:	mov	x2, x26
  419770:	bl	403ec0 <memcpy@plt>
  419774:	mov	x0, #0xffffffffffffffff    	// #-1
  419778:	strb	wzr, [x22, x26]
  41977c:	cbz	x20, 419264 <wcrtomb@plt+0x14724>
  419780:	ldr	w8, [x19, #20]
  419784:	tbnz	w8, #0, 419264 <wcrtomb@plt+0x14724>
  419788:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41978c:	ldr	x8, [x8, #4064]
  419790:	cbz	x8, 419798 <wcrtomb@plt+0x14c58>
  419794:	blr	x8
  419798:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41979c:	add	x1, x1, #0x419
  4197a0:	mov	w2, #0x5                   	// #5
  4197a4:	mov	x0, xzr
  4197a8:	bl	404900 <dcgettext@plt>
  4197ac:	mov	x21, x0
  4197b0:	mov	x0, x22
  4197b4:	bl	444a68 <argp_parse@@Base+0xd1bc>
  4197b8:	mov	x3, x0
  4197bc:	mov	w0, wzr
  4197c0:	mov	w1, wzr
  4197c4:	mov	x2, x21
  4197c8:	mov	x4, x20
  4197cc:	bl	403fa0 <error@plt>
  4197d0:	b	419254 <wcrtomb@plt+0x14714>
  4197d4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4197d8:	add	x2, x2, #0xdf8
  4197dc:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  4197e0:	mov	x3, xzr
  4197e4:	mov	w5, wzr
  4197e8:	mov	w6, wzr
  4197ec:	b	419168 <wcrtomb@plt+0x14628>
  4197f0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4197f4:	add	x2, x2, #0xf98
  4197f8:	mov	x4, #0xffffffffffffffff    	// #-1
  4197fc:	mov	x3, xzr
  419800:	mov	w5, wzr
  419804:	mov	w6, wzr
  419808:	b	419168 <wcrtomb@plt+0x14628>
  41980c:	stp	x29, x30, [sp, #-64]!
  419810:	stp	x22, x21, [sp, #32]
  419814:	stp	x20, x19, [sp, #48]
  419818:	mov	x29, sp
  41981c:	mov	w20, w2
  419820:	mov	x19, x1
  419824:	mov	x22, x0
  419828:	str	x23, [sp, #16]
  41982c:	str	x0, [x29, #24]
  419830:	tbz	x0, #63, 41984c <wcrtomb@plt+0x14d0c>
  419834:	cbz	w19, 41984c <wcrtomb@plt+0x14d0c>
  419838:	mov	w9, #0xca00                	// #51712
  41983c:	movk	w9, #0x3b9a, lsl #16
  419840:	add	x8, x22, #0x1
  419844:	sub	w19, w9, w19
  419848:	str	x8, [x29, #24]
  41984c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419850:	ldrb	w8, [x8, #3609]
  419854:	cbz	w8, 419898 <wcrtomb@plt+0x14d58>
  419858:	add	x0, x29, #0x18
  41985c:	bl	404470 <gmtime@plt>
  419860:	mov	x3, x0
  419864:	cbz	x0, 4198a8 <wcrtomb@plt+0x14d68>
  419868:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41986c:	add	x21, x21, #0x4c8
  419870:	tbz	w20, #0, 419954 <wcrtomb@plt+0x14e14>
  419874:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  419878:	add	x2, x2, #0x150
  41987c:	mov	w1, #0x25                  	// #37
  419880:	mov	x0, x21
  419884:	bl	4040a0 <strftime@plt>
  419888:	mov	x0, x21
  41988c:	bl	403f40 <strlen@plt>
  419890:	add	x1, x21, x0
  419894:	b	419948 <wcrtomb@plt+0x14e08>
  419898:	add	x0, x29, #0x18
  41989c:	bl	404180 <localtime@plt>
  4198a0:	mov	x3, x0
  4198a4:	cbnz	x0, 419868 <wcrtomb@plt+0x14d28>
  4198a8:	ldr	x8, [x29, #24]
  4198ac:	cmp	x22, #0x0
  4198b0:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4198b4:	add	x1, x1, #0x4ce
  4198b8:	cneg	x0, x8, lt  // lt = tstop
  4198bc:	bl	43d080 <argp_parse@@Base+0x57d4>
  4198c0:	mov	x21, x0
  4198c4:	tbz	x22, #63, 4198d0 <wcrtomb@plt+0x14d90>
  4198c8:	mov	w8, #0x2d                  	// #45
  4198cc:	strb	w8, [x21, #-1]!
  4198d0:	tst	w20, #0x1
  4198d4:	mov	w8, #0xd                   	// #13
  4198d8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4198dc:	csel	x8, x8, xzr, ne  // ne = any
  4198e0:	add	x9, x9, #0x4c8
  4198e4:	add	x8, x9, x8
  4198e8:	add	x22, x8, #0x14
  4198ec:	cmp	x22, x21
  4198f0:	b.cs	41993c <wcrtomb@plt+0x14dfc>  // b.hs, b.nlast
  4198f4:	sub	x8, x21, x8
  4198f8:	sub	x23, x8, #0x14
  4198fc:	mov	w1, #0x20                  	// #32
  419900:	mov	x0, x22
  419904:	mov	x2, x23
  419908:	bl	404360 <memset@plt>
  41990c:	cmp	x23, #0x2
  419910:	b.cc	419930 <wcrtomb@plt+0x14df0>  // b.lo, b.ul, b.last
  419914:	and	x8, x23, #0xfffffffffffffffe
  419918:	sub	x21, x21, x8
  41991c:	mov	x9, x8
  419920:	subs	x9, x9, #0x2
  419924:	b.ne	419920 <wcrtomb@plt+0x14de0>  // b.any
  419928:	cmp	x8, x23
  41992c:	b.eq	41993c <wcrtomb@plt+0x14dfc>  // b.none
  419930:	sub	x21, x21, #0x1
  419934:	cmp	x22, x21
  419938:	b.cc	419930 <wcrtomb@plt+0x14df0>  // b.lo, b.ul, b.last
  41993c:	tbz	w20, #0, 419968 <wcrtomb@plt+0x14e28>
  419940:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419944:	add	x1, x1, #0x4e2
  419948:	mov	w0, w19
  41994c:	bl	41b160 <wcrtomb@plt+0x16620>
  419950:	b	419968 <wcrtomb@plt+0x14e28>
  419954:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419958:	add	x2, x2, #0x31a
  41995c:	mov	w1, #0x25                  	// #37
  419960:	mov	x0, x21
  419964:	bl	4040a0 <strftime@plt>
  419968:	mov	x0, x21
  41996c:	ldp	x20, x19, [sp, #48]
  419970:	ldp	x22, x21, [sp, #32]
  419974:	ldr	x23, [sp, #16]
  419978:	ldp	x29, x30, [sp], #64
  41997c:	ret
  419980:	stp	x29, x30, [sp, #-32]!
  419984:	stp	x28, x19, [sp, #16]
  419988:	mov	x29, sp
  41998c:	sub	sp, sp, #0x3c0
  419990:	add	x8, sp, #0x10
  419994:	movi	v0.2d, #0x0
  419998:	mov	w9, #0x56                  	// #86
  41999c:	stp	q0, q0, [x8, #128]
  4199a0:	stp	q0, q0, [x8, #160]
  4199a4:	stp	q0, q0, [x8, #192]
  4199a8:	stp	q0, q0, [x8, #224]
  4199ac:	stp	q0, q0, [x8, #256]
  4199b0:	stp	q0, q0, [x8, #288]
  4199b4:	stp	q0, q0, [x8, #320]
  4199b8:	stp	q0, q0, [x8, #352]
  4199bc:	stp	q0, q0, [x8, #384]
  4199c0:	stp	q0, q0, [x8, #416]
  4199c4:	stp	q0, q0, [x8, #448]
  4199c8:	stp	q0, q0, [x8, #480]
  4199cc:	strb	w9, [sp, #172]
  4199d0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4199d4:	ldr	x9, [x9, #1216]
  4199d8:	stp	q0, q0, [sp, #16]
  4199dc:	stp	q0, q0, [sp, #48]
  4199e0:	stp	q0, q0, [sp, #80]
  4199e4:	stp	q0, q0, [sp, #112]
  4199e8:	cbz	x9, 4199fc <wcrtomb@plt+0x14ebc>
  4199ec:	ldr	w10, [x9, #144]
  4199f0:	ldr	x9, [x9, #136]
  4199f4:	str	w10, [sp, #160]
  4199f8:	str	x9, [x8, #136]
  4199fc:	add	x0, sp, #0x218
  419a00:	add	x19, sp, #0x218
  419a04:	bl	42437c <wcrtomb@plt+0x1f83c>
  419a08:	add	x19, x19, #0x8
  419a0c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  419a10:	add	x1, x1, #0x50a
  419a14:	mov	x0, x19
  419a18:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  419a1c:	add	x0, sp, #0x10
  419a20:	add	x1, sp, #0x218
  419a24:	add	x2, sp, #0xc
  419a28:	mov	w3, wzr
  419a2c:	bl	4189fc <wcrtomb@plt+0x13ebc>
  419a30:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419a34:	ldr	x1, [x8, #2928]
  419a38:	mov	x0, x19
  419a3c:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  419a40:	add	x0, sp, #0x218
  419a44:	add	x1, sp, #0x10
  419a48:	mov	x2, xzr
  419a4c:	bl	419a68 <wcrtomb@plt+0x14f28>
  419a50:	add	x0, sp, #0x218
  419a54:	bl	424420 <wcrtomb@plt+0x1f8e0>
  419a58:	add	sp, sp, #0x3c0
  419a5c:	ldp	x28, x19, [sp, #16]
  419a60:	ldp	x29, x30, [sp], #32
  419a64:	ret
  419a68:	sub	sp, sp, #0x100
  419a6c:	stp	x26, x25, [sp, #192]
  419a70:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419a74:	ldrb	w8, [x25, #3896]
  419a78:	stp	x20, x19, [sp, #240]
  419a7c:	mov	x20, x1
  419a80:	mov	x19, x0
  419a84:	stp	x29, x30, [sp, #160]
  419a88:	stp	x28, x27, [sp, #176]
  419a8c:	stp	x24, x23, [sp, #208]
  419a90:	stp	x22, x21, [sp, #224]
  419a94:	add	x29, sp, #0xa0
  419a98:	cbz	w8, 419aac <wcrtomb@plt+0x14f6c>
  419a9c:	ldr	x21, [x19, #8]
  419aa0:	cbnz	x21, 419ab8 <wcrtomb@plt+0x14f78>
  419aa4:	ldr	x21, [x19]
  419aa8:	b	419ab8 <wcrtomb@plt+0x14f78>
  419aac:	ldr	x21, [x19]
  419ab0:	cbnz	x21, 419ab8 <wcrtomb@plt+0x14f78>
  419ab4:	ldr	x21, [x19, #8]
  419ab8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419abc:	ldrb	w8, [x8, #3729]
  419ac0:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419ac4:	cbz	w8, 419b28 <wcrtomb@plt+0x14fe8>
  419ac8:	tbz	x2, #63, 419ad4 <wcrtomb@plt+0x14f94>
  419acc:	bl	4052f0 <wcrtomb@plt+0x7b0>
  419ad0:	mov	x2, x0
  419ad4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419ad8:	ldr	x8, [x8, #3024]
  419adc:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419ae0:	ldr	x9, [x9, #3040]
  419ae4:	ldr	x22, [x27, #2888]
  419ae8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419aec:	sub	x8, x2, x8
  419af0:	add	x1, x1, #0x30f
  419af4:	mov	w2, #0x5                   	// #5
  419af8:	mov	x0, xzr
  419afc:	sub	x23, x8, x9
  419b00:	bl	404900 <dcgettext@plt>
  419b04:	mov	x24, x0
  419b08:	add	x1, sp, #0x38
  419b0c:	mov	x0, x23
  419b10:	bl	43d080 <argp_parse@@Base+0x57d4>
  419b14:	mov	x3, x0
  419b18:	mov	w1, #0x1                   	// #1
  419b1c:	mov	x0, x22
  419b20:	mov	x2, x24
  419b24:	bl	404650 <__fprintf_chk@plt>
  419b28:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419b2c:	ldr	w8, [x8, #3700]
  419b30:	cmp	w8, #0x1
  419b34:	b.gt	419b7c <wcrtomb@plt+0x1503c>
  419b38:	mov	x0, x21
  419b3c:	bl	444534 <argp_parse@@Base+0xcc88>
  419b40:	ldr	x1, [x27, #2888]
  419b44:	bl	404920 <fputs_unlocked@plt>
  419b48:	ldrb	w8, [x25, #3896]
  419b4c:	cbz	w8, 419e9c <wcrtomb@plt+0x1535c>
  419b50:	ldrb	w8, [x19, #16]
  419b54:	cbz	w8, 419e9c <wcrtomb@plt+0x1535c>
  419b58:	ldr	x0, [x27, #2888]
  419b5c:	ldp	x8, x9, [x0, #40]
  419b60:	cmp	x8, x9
  419b64:	b.cs	41a050 <wcrtomb@plt+0x15510>  // b.hs, b.nlast
  419b68:	add	x9, x8, #0x1
  419b6c:	mov	w10, #0x2f                  	// #47
  419b70:	str	x9, [x0, #40]
  419b74:	strb	w10, [x8]
  419b78:	b	419e9c <wcrtomb@plt+0x1535c>
  419b7c:	mov	w8, #0x3f                  	// #63
  419b80:	sturb	w8, [x29, #-12]
  419b84:	ldrb	w8, [x20, #156]
  419b88:	cmp	w8, #0x56
  419b8c:	b.hi	419c4c <wcrtomb@plt+0x1510c>  // b.pmore
  419b90:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419b94:	add	x9, x9, #0x1d8
  419b98:	adr	x10, 419ba8 <wcrtomb@plt+0x15068>
  419b9c:	ldrb	w11, [x9, x8]
  419ba0:	add	x10, x10, x11, lsl #2
  419ba4:	br	x10
  419ba8:	ldrb	w8, [x19, #16]
  419bac:	mov	w9, #0x64                  	// #100
  419bb0:	cmp	w8, #0x0
  419bb4:	mov	w8, #0x2d                  	// #45
  419bb8:	csel	w8, w8, w9, eq  // eq = none
  419bbc:	b	419c48 <wcrtomb@plt+0x15108>
  419bc0:	mov	w8, #0x64                  	// #100
  419bc4:	b	419c48 <wcrtomb@plt+0x15108>
  419bc8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419bcc:	ldr	x8, [x8, #4064]
  419bd0:	mov	w9, #0x4c                  	// #76
  419bd4:	sturb	w9, [x29, #-12]
  419bd8:	cbz	x8, 419be0 <wcrtomb@plt+0x150a0>
  419bdc:	blr	x8
  419be0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  419be4:	add	x1, x1, #0x3cf
  419be8:	mov	w2, #0x5                   	// #5
  419bec:	mov	x0, xzr
  419bf0:	bl	404900 <dcgettext@plt>
  419bf4:	mov	x2, x0
  419bf8:	mov	w0, wzr
  419bfc:	mov	w1, wzr
  419c00:	bl	403fa0 <error@plt>
  419c04:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419c08:	mov	w9, #0x2                   	// #2
  419c0c:	str	w9, [x8, #2416]
  419c10:	b	419c4c <wcrtomb@plt+0x1510c>
  419c14:	mov	w8, #0x68                  	// #104
  419c18:	b	419c48 <wcrtomb@plt+0x15108>
  419c1c:	mov	w8, #0x6c                  	// #108
  419c20:	b	419c48 <wcrtomb@plt+0x15108>
  419c24:	mov	w8, #0x63                  	// #99
  419c28:	b	419c48 <wcrtomb@plt+0x15108>
  419c2c:	mov	w8, #0x62                  	// #98
  419c30:	b	419c48 <wcrtomb@plt+0x15108>
  419c34:	mov	w8, #0x70                  	// #112
  419c38:	b	419c48 <wcrtomb@plt+0x15108>
  419c3c:	mov	w8, #0x43                  	// #67
  419c40:	b	419c48 <wcrtomb@plt+0x15108>
  419c44:	mov	w8, #0x4d                  	// #77
  419c48:	sturb	w8, [x29, #-12]
  419c4c:	ldr	w0, [x19, #104]
  419c50:	sub	x22, x29, #0xc
  419c54:	orr	x1, x22, #0x1
  419c58:	bl	42a14c <wcrtomb@plt+0x2560c>
  419c5c:	add	x1, x22, #0xa
  419c60:	mov	x0, x19
  419c64:	bl	429ae8 <wcrtomb@plt+0x24fa8>
  419c68:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419c6c:	ldrb	w2, [x8, #3752]
  419c70:	ldp	x0, x1, [x19, #232]
  419c74:	bl	41980c <wcrtomb@plt+0x14ccc>
  419c78:	mov	x22, x0
  419c7c:	bl	403f40 <strlen@plt>
  419c80:	adrp	x28, 477000 <_obstack_memory_used@@Base+0x304b0>
  419c84:	ldr	w8, [x28, #1868]
  419c88:	cmp	w8, w0
  419c8c:	b.ge	419c94 <wcrtomb@plt+0x15154>  // b.tcont
  419c90:	str	w0, [x28, #1868]
  419c94:	ldr	x23, [x19, #32]
  419c98:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419c9c:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419ca0:	cbz	x23, 419ccc <wcrtomb@plt+0x1518c>
  419ca4:	ldrb	w8, [x23]
  419ca8:	cbz	w8, 419ccc <wcrtomb@plt+0x1518c>
  419cac:	ldr	w8, [x26, #3008]
  419cb0:	cmp	w8, #0x1
  419cb4:	b.eq	419ccc <wcrtomb@plt+0x1518c>  // b.none
  419cb8:	ldrb	w8, [x25, #3728]
  419cbc:	cbnz	w8, 419ccc <wcrtomb@plt+0x1518c>
  419cc0:	ldr	x24, [x19, #40]
  419cc4:	cbnz	x24, 419ce4 <wcrtomb@plt+0x151a4>
  419cc8:	b	419d00 <wcrtomb@plt+0x151c0>
  419ccc:	ldr	w0, [x19, #112]
  419cd0:	sub	x1, x29, #0x24
  419cd4:	bl	43d080 <argp_parse@@Base+0x57d4>
  419cd8:	mov	x23, x0
  419cdc:	ldr	x24, [x19, #40]
  419ce0:	cbz	x24, 419d00 <wcrtomb@plt+0x151c0>
  419ce4:	ldrb	w8, [x24]
  419ce8:	cbz	w8, 419d00 <wcrtomb@plt+0x151c0>
  419cec:	ldr	w8, [x26, #3008]
  419cf0:	cmp	w8, #0x1
  419cf4:	b.eq	419d00 <wcrtomb@plt+0x151c0>  // b.none
  419cf8:	ldrb	w8, [x25, #3728]
  419cfc:	cbz	w8, 419d10 <wcrtomb@plt+0x151d0>
  419d00:	ldr	w0, [x19, #116]
  419d04:	sub	x1, x29, #0x3c
  419d08:	bl	43d080 <argp_parse@@Base+0x57d4>
  419d0c:	mov	x24, x0
  419d10:	ldrb	w8, [x20, #156]
  419d14:	sub	w8, w8, #0x33
  419d18:	cmp	w8, #0x1
  419d1c:	b.hi	419d88 <wcrtomb@plt+0x15248>  // b.pmore
  419d20:	ldr	x8, [x19, #120]
  419d24:	add	x1, sp, #0x20
  419d28:	lsr	x9, x8, #32
  419d2c:	and	x0, x9, #0xfffff000
  419d30:	bfxil	x0, x8, #8, #12
  419d34:	bl	43d080 <argp_parse@@Base+0x57d4>
  419d38:	mov	x1, x0
  419d3c:	add	x0, sp, #0x38
  419d40:	mov	w2, #0x2a                  	// #42
  419d44:	bl	4042b0 <__strcpy_chk@plt>
  419d48:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  419d4c:	add	x1, x1, #0xf0
  419d50:	add	x0, sp, #0x38
  419d54:	mov	w2, #0x2a                  	// #42
  419d58:	bl	404710 <__strcat_chk@plt>
  419d5c:	ldr	x8, [x19, #120]
  419d60:	add	x1, sp, #0x20
  419d64:	lsr	x9, x8, #12
  419d68:	and	x0, x9, #0xffffff00
  419d6c:	bfxil	x0, x8, #0, #8
  419d70:	bl	43d080 <argp_parse@@Base+0x57d4>
  419d74:	mov	x1, x0
  419d78:	add	x0, sp, #0x38
  419d7c:	mov	w2, #0x2a                  	// #42
  419d80:	bl	404710 <__strcat_chk@plt>
  419d84:	b	419da4 <wcrtomb@plt+0x15264>
  419d88:	ldr	x0, [x19, #136]
  419d8c:	add	x1, sp, #0x20
  419d90:	bl	43d080 <argp_parse@@Base+0x57d4>
  419d94:	mov	x1, x0
  419d98:	add	x0, sp, #0x38
  419d9c:	mov	w2, #0x2a                  	// #42
  419da0:	bl	4042b0 <__strcpy_chk@plt>
  419da4:	add	x0, sp, #0x38
  419da8:	bl	403f40 <strlen@plt>
  419dac:	mov	x25, x0
  419db0:	mov	x0, x23
  419db4:	bl	403f40 <strlen@plt>
  419db8:	mov	x26, x0
  419dbc:	mov	x0, x24
  419dc0:	bl	403f40 <strlen@plt>
  419dc4:	adrp	x10, 477000 <_obstack_memory_used@@Base+0x304b0>
  419dc8:	ldr	w9, [x10, #1864]
  419dcc:	add	w8, w25, w26
  419dd0:	add	w8, w8, w0
  419dd4:	add	w8, w8, #0x2
  419dd8:	cmp	w9, w8
  419ddc:	b.ge	419de8 <wcrtomb@plt+0x152a8>  // b.tcont
  419de0:	mov	w9, w8
  419de4:	str	w8, [x10, #1864]
  419de8:	ldr	x0, [x27, #2888]
  419dec:	ldr	w10, [x28, #1868]
  419df0:	sub	w8, w25, w8
  419df4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419df8:	add	w6, w8, w9
  419dfc:	add	x2, x2, #0x4d8
  419e00:	sub	x3, x29, #0xc
  419e04:	add	x7, sp, #0x38
  419e08:	mov	w1, #0x1                   	// #1
  419e0c:	mov	x4, x23
  419e10:	mov	x5, x24
  419e14:	str	x22, [sp, #8]
  419e18:	str	w10, [sp]
  419e1c:	bl	404650 <__fprintf_chk@plt>
  419e20:	ldr	x22, [x27, #2888]
  419e24:	mov	x0, x21
  419e28:	bl	444534 <argp_parse@@Base+0xcc88>
  419e2c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  419e30:	mov	x3, x0
  419e34:	add	x2, x2, #0x7a3
  419e38:	mov	w1, #0x1                   	// #1
  419e3c:	mov	x0, x22
  419e40:	bl	404650 <__fprintf_chk@plt>
  419e44:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419e48:	ldrb	w8, [x8, #3896]
  419e4c:	cbz	w8, 419e78 <wcrtomb@plt+0x15338>
  419e50:	ldrb	w8, [x19, #16]
  419e54:	cbz	w8, 419e78 <wcrtomb@plt+0x15338>
  419e58:	ldr	x0, [x27, #2888]
  419e5c:	ldp	x8, x9, [x0, #40]
  419e60:	cmp	x8, x9
  419e64:	b.cs	41a05c <wcrtomb@plt+0x1551c>  // b.hs, b.nlast
  419e68:	add	x9, x8, #0x1
  419e6c:	mov	w10, #0x2f                  	// #47
  419e70:	str	x9, [x0, #40]
  419e74:	strb	w10, [x8]
  419e78:	ldrb	w8, [x20, #156]
  419e7c:	cmp	w8, #0x56
  419e80:	b.hi	419f04 <wcrtomb@plt+0x153c4>  // b.pmore
  419e84:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419e88:	add	x9, x9, #0x22f
  419e8c:	adr	x10, 419e9c <wcrtomb@plt+0x1535c>
  419e90:	ldrb	w11, [x9, x8]
  419e94:	add	x10, x10, x11, lsl #2
  419e98:	br	x10
  419e9c:	ldr	x0, [x27, #2888]
  419ea0:	ldp	x8, x9, [x0, #40]
  419ea4:	cmp	x8, x9
  419ea8:	b.cs	41a044 <wcrtomb@plt+0x15504>  // b.hs, b.nlast
  419eac:	add	x9, x8, #0x1
  419eb0:	mov	w10, #0xa                   	// #10
  419eb4:	str	x9, [x0, #40]
  419eb8:	strb	w10, [x8]
  419ebc:	ldr	x0, [x27, #2888]
  419ec0:	bl	404800 <fflush_unlocked@plt>
  419ec4:	mov	x0, x19
  419ec8:	bl	429bfc <wcrtomb@plt+0x250bc>
  419ecc:	ldp	x20, x19, [sp, #240]
  419ed0:	ldp	x22, x21, [sp, #224]
  419ed4:	ldp	x24, x23, [sp, #208]
  419ed8:	ldp	x26, x25, [sp, #192]
  419edc:	ldp	x28, x27, [sp, #176]
  419ee0:	ldp	x29, x30, [sp, #160]
  419ee4:	add	sp, sp, #0x100
  419ee8:	ret
  419eec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  419ef0:	mov	w9, #0x1                   	// #1
  419ef4:	mov	w10, #0x56                  	// #86
  419ef8:	strb	w9, [x8, #1261]
  419efc:	sturb	w10, [x29, #-12]
  419f00:	b	419c4c <wcrtomb@plt+0x1510c>
  419f04:	ldr	x20, [x27, #2888]
  419f08:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419f0c:	add	x1, x1, #0x4ff
  419f10:	mov	w2, #0x5                   	// #5
  419f14:	mov	x0, xzr
  419f18:	strb	w8, [sp, #28]
  419f1c:	strb	wzr, [sp, #29]
  419f20:	bl	404900 <dcgettext@plt>
  419f24:	mov	x21, x0
  419f28:	add	x0, sp, #0x1c
  419f2c:	bl	444a68 <argp_parse@@Base+0xd1bc>
  419f30:	b	419f5c <wcrtomb@plt+0x1541c>
  419f34:	ldr	x20, [x27, #2888]
  419f38:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419f3c:	add	x1, x1, #0x4f2
  419f40:	mov	w2, #0x5                   	// #5
  419f44:	mov	x0, xzr
  419f48:	bl	404900 <dcgettext@plt>
  419f4c:	ldr	x8, [x19, #24]
  419f50:	mov	x21, x0
  419f54:	mov	x0, x8
  419f58:	bl	444534 <argp_parse@@Base+0xcc88>
  419f5c:	mov	x3, x0
  419f60:	mov	w1, #0x1                   	// #1
  419f64:	mov	x0, x20
  419f68:	mov	x2, x21
  419f6c:	b	41a010 <wcrtomb@plt+0x154d0>
  419f70:	ldr	x0, [x19, #24]
  419f74:	ldr	x20, [x27, #2888]
  419f78:	bl	444534 <argp_parse@@Base+0xcc88>
  419f7c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419f80:	mov	x3, x0
  419f84:	add	x2, x2, #0x4ea
  419f88:	b	41a008 <wcrtomb@plt+0x154c8>
  419f8c:	ldr	x20, [x27, #2888]
  419f90:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419f94:	add	x1, x1, #0x516
  419f98:	b	41a024 <wcrtomb@plt+0x154e4>
  419f9c:	ldr	x20, [x27, #2888]
  419fa0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419fa4:	add	x1, x1, #0x525
  419fa8:	b	41a024 <wcrtomb@plt+0x154e4>
  419fac:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  419fb0:	add	x0, x20, #0x171
  419fb4:	add	x2, x2, #0xf98
  419fb8:	mov	w1, #0xc                   	// #12
  419fbc:	mov	x4, #0xffffffffffffffff    	// #-1
  419fc0:	mov	x3, xzr
  419fc4:	mov	w5, wzr
  419fc8:	mov	w6, wzr
  419fcc:	bl	419168 <wcrtomb@plt+0x14628>
  419fd0:	add	x1, sp, #0x20
  419fd4:	bl	43d080 <argp_parse@@Base+0x57d4>
  419fd8:	mov	x1, x0
  419fdc:	add	x0, sp, #0x38
  419fe0:	mov	w2, #0x2a                  	// #42
  419fe4:	bl	4042b0 <__strcpy_chk@plt>
  419fe8:	ldr	x20, [x27, #2888]
  419fec:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  419ff0:	add	x1, x1, #0x547
  419ff4:	mov	w2, #0x5                   	// #5
  419ff8:	mov	x0, xzr
  419ffc:	bl	404900 <dcgettext@plt>
  41a000:	mov	x2, x0
  41a004:	add	x3, sp, #0x38
  41a008:	mov	w1, #0x1                   	// #1
  41a00c:	mov	x0, x20
  41a010:	bl	404650 <__fprintf_chk@plt>
  41a014:	b	419ebc <wcrtomb@plt+0x1537c>
  41a018:	ldr	x20, [x27, #2888]
  41a01c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41a020:	add	x1, x1, #0x534
  41a024:	mov	w2, #0x5                   	// #5
  41a028:	mov	x0, xzr
  41a02c:	bl	404900 <dcgettext@plt>
  41a030:	mov	x2, x0
  41a034:	mov	w1, #0x1                   	// #1
  41a038:	mov	x0, x20
  41a03c:	bl	404650 <__fprintf_chk@plt>
  41a040:	b	419ebc <wcrtomb@plt+0x1537c>
  41a044:	mov	w1, #0xa                   	// #10
  41a048:	bl	4045e0 <__overflow@plt>
  41a04c:	b	419ebc <wcrtomb@plt+0x1537c>
  41a050:	mov	w1, #0x2f                  	// #47
  41a054:	bl	4045e0 <__overflow@plt>
  41a058:	b	419e9c <wcrtomb@plt+0x1535c>
  41a05c:	mov	w1, #0x2f                  	// #47
  41a060:	bl	4045e0 <__overflow@plt>
  41a064:	b	419e78 <wcrtomb@plt+0x15338>
  41a068:	sub	sp, sp, #0x60
  41a06c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a070:	ldr	w8, [x8, #3700]
  41a074:	stp	x29, x30, [sp, #48]
  41a078:	stp	x22, x21, [sp, #64]
  41a07c:	stp	x20, x19, [sp, #80]
  41a080:	cmp	w8, #0x2
  41a084:	add	x29, sp, #0x30
  41a088:	b.lt	41a154 <wcrtomb@plt+0x15614>  // b.tstop
  41a08c:	sub	x9, x29, #0xc
  41a090:	mov	x19, x0
  41a094:	mov	w8, #0x64                  	// #100
  41a098:	orr	x1, x9, #0x1
  41a09c:	mov	w0, w2
  41a0a0:	sturb	w8, [x29, #-12]
  41a0a4:	bl	42a14c <wcrtomb@plt+0x2560c>
  41a0a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a0ac:	ldrb	w8, [x8, #3729]
  41a0b0:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a0b4:	cbz	w8, 41a0f4 <wcrtomb@plt+0x155b4>
  41a0b8:	ldr	x20, [x22, #2888]
  41a0bc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41a0c0:	add	x1, x1, #0x30f
  41a0c4:	mov	w2, #0x5                   	// #5
  41a0c8:	mov	x0, xzr
  41a0cc:	bl	404900 <dcgettext@plt>
  41a0d0:	mov	x21, x0
  41a0d4:	bl	4052f0 <wcrtomb@plt+0x7b0>
  41a0d8:	add	x1, sp, #0xc
  41a0dc:	bl	43d080 <argp_parse@@Base+0x57d4>
  41a0e0:	mov	x3, x0
  41a0e4:	mov	w1, #0x1                   	// #1
  41a0e8:	mov	x0, x20
  41a0ec:	mov	x2, x21
  41a0f0:	bl	404650 <__fprintf_chk@plt>
  41a0f4:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  41a0f8:	adrp	x9, 477000 <_obstack_memory_used@@Base+0x304b0>
  41a0fc:	ldr	w8, [x8, #1864]
  41a100:	ldr	w9, [x9, #1868]
  41a104:	ldr	x20, [x22, #2888]
  41a108:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41a10c:	add	x1, x1, #0x334
  41a110:	add	w8, w8, w9
  41a114:	mov	w2, #0x5                   	// #5
  41a118:	mov	x0, xzr
  41a11c:	add	w21, w8, #0x1
  41a120:	bl	404900 <dcgettext@plt>
  41a124:	mov	x22, x0
  41a128:	mov	x0, x19
  41a12c:	bl	444534 <argp_parse@@Base+0xcc88>
  41a130:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41a134:	mov	x6, x0
  41a138:	add	x2, x2, #0x329
  41a13c:	sub	x3, x29, #0xc
  41a140:	mov	w1, #0x1                   	// #1
  41a144:	mov	x0, x20
  41a148:	mov	w4, w21
  41a14c:	mov	x5, x22
  41a150:	bl	404650 <__fprintf_chk@plt>
  41a154:	ldp	x20, x19, [sp, #80]
  41a158:	ldp	x22, x21, [sp, #64]
  41a15c:	ldp	x29, x30, [sp, #48]
  41a160:	add	sp, sp, #0x60
  41a164:	ret
  41a168:	stp	x29, x30, [sp, #-32]!
  41a16c:	stp	x20, x19, [sp, #16]
  41a170:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a174:	ldrb	w8, [x20, #3984]
  41a178:	mov	x19, x0
  41a17c:	mov	x29, sp
  41a180:	cbz	w8, 41a19c <wcrtomb@plt+0x1565c>
  41a184:	mov	x0, x19
  41a188:	bl	405864 <wcrtomb@plt+0xd24>
  41a18c:	tbnz	x0, #63, 41a198 <wcrtomb@plt+0x15658>
  41a190:	sub	x19, x19, x0, lsl #9
  41a194:	b	41a19c <wcrtomb@plt+0x1565c>
  41a198:	strb	wzr, [x20, #3984]
  41a19c:	mov	x0, x19
  41a1a0:	bl	404de4 <wcrtomb@plt+0x2a4>
  41a1a4:	cmp	x19, #0x1
  41a1a8:	b.lt	41a1d0 <wcrtomb@plt+0x15690>  // b.tstop
  41a1ac:	add	x19, x19, #0x200
  41a1b0:	bl	40535c <wcrtomb@plt+0x81c>
  41a1b4:	cbz	x0, 41a1dc <wcrtomb@plt+0x1569c>
  41a1b8:	bl	405670 <wcrtomb@plt+0xb30>
  41a1bc:	sub	x0, x19, #0x400
  41a1c0:	bl	404de4 <wcrtomb@plt+0x2a4>
  41a1c4:	sub	x19, x19, #0x200
  41a1c8:	cmp	x19, #0x200
  41a1cc:	b.gt	41a1b0 <wcrtomb@plt+0x15670>
  41a1d0:	ldp	x20, x19, [sp, #16]
  41a1d4:	ldp	x29, x30, [sp], #32
  41a1d8:	ret
  41a1dc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a1e0:	ldr	x8, [x8, #4064]
  41a1e4:	cbz	x8, 41a1ec <wcrtomb@plt+0x156ac>
  41a1e8:	blr	x8
  41a1ec:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  41a1f0:	add	x1, x1, #0xcd8
  41a1f4:	mov	w2, #0x5                   	// #5
  41a1f8:	mov	x0, xzr
  41a1fc:	bl	404900 <dcgettext@plt>
  41a200:	mov	x2, x0
  41a204:	mov	w0, wzr
  41a208:	mov	w1, wzr
  41a20c:	bl	403fa0 <error@plt>
  41a210:	bl	40e96c <wcrtomb@plt+0x9e2c>
  41a214:	stp	x29, x30, [sp, #-32]!
  41a218:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a21c:	adrp	x10, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41a220:	mov	x8, xzr
  41a224:	add	x9, x9, #0x4ee
  41a228:	movi	v0.16b, #0x40
  41a22c:	add	x10, x10, #0x286
  41a230:	str	x19, [sp, #16]
  41a234:	mov	x29, sp
  41a238:	stp	q0, q0, [x9, #224]
  41a23c:	stp	q0, q0, [x9, #192]
  41a240:	stp	q0, q0, [x9, #160]
  41a244:	stp	q0, q0, [x9, #128]
  41a248:	stp	q0, q0, [x9, #96]
  41a24c:	stp	q0, q0, [x9, #64]
  41a250:	stp	q0, q0, [x9, #32]
  41a254:	stp	q0, q0, [x9]
  41a258:	ldrb	w11, [x10, x8]
  41a25c:	strb	w8, [x9, x11]
  41a260:	add	x8, x8, #0x1
  41a264:	cmp	x8, #0x40
  41a268:	b.ne	41a258 <wcrtomb@plt+0x15718>  // b.any
  41a26c:	bl	41d81c <wcrtomb@plt+0x18cdc>
  41a270:	mov	w0, wzr
  41a274:	bl	405d50 <wcrtomb@plt+0x1210>
  41a278:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a27c:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a280:	add	x0, x0, #0xbd8
  41a284:	add	x1, x1, #0xc50
  41a288:	mov	w2, wzr
  41a28c:	bl	418578 <wcrtomb@plt+0x13a38>
  41a290:	cmp	w0, #0x1
  41a294:	b.ne	41a324 <wcrtomb@plt+0x157e4>  // b.any
  41a298:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a29c:	ldr	x0, [x19, #3032]
  41a2a0:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a2a4:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a2a8:	add	x1, x1, #0xc50
  41a2ac:	add	x2, x2, #0xbc0
  41a2b0:	mov	w3, wzr
  41a2b4:	bl	4189fc <wcrtomb@plt+0x13ebc>
  41a2b8:	ldr	x1, [x19, #3032]
  41a2bc:	ldrb	w8, [x1, #156]
  41a2c0:	cmp	w8, #0x56
  41a2c4:	b.ne	41a2d8 <wcrtomb@plt+0x15798>  // b.any
  41a2c8:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a2cc:	add	x0, x0, #0xb70
  41a2d0:	mov	w2, #0x64                  	// #100
  41a2d4:	bl	41aa68 <wcrtomb@plt+0x15f28>
  41a2d8:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a2dc:	ldr	x0, [x19, #2928]
  41a2e0:	cbz	x0, 41a324 <wcrtomb@plt+0x157e4>
  41a2e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a2e8:	ldr	w8, [x8, #3700]
  41a2ec:	cbz	w8, 41a2f8 <wcrtomb@plt+0x157b8>
  41a2f0:	bl	419980 <wcrtomb@plt+0x14e40>
  41a2f4:	ldr	x0, [x19, #2928]
  41a2f8:	bl	41ddf8 <wcrtomb@plt+0x192b8>
  41a2fc:	tbnz	w0, #0, 41a324 <wcrtomb@plt+0x157e4>
  41a300:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a304:	ldrb	w8, [x8, #3132]
  41a308:	cbz	w8, 41a324 <wcrtomb@plt+0x157e4>
  41a30c:	ldr	x0, [x19, #2928]
  41a310:	bl	405c9c <wcrtomb@plt+0x115c>
  41a314:	mov	x19, x0
  41a318:	bl	41ddf8 <wcrtomb@plt+0x192b8>
  41a31c:	mov	x0, x19
  41a320:	bl	404700 <free@plt>
  41a324:	bl	4059a4 <wcrtomb@plt+0xe64>
  41a328:	ldr	x19, [sp, #16]
  41a32c:	ldp	x29, x30, [sp], #32
  41a330:	b	41e204 <wcrtomb@plt+0x196c4>
  41a334:	stp	x29, x30, [sp, #-32]!
  41a338:	ldr	w8, [x1]
  41a33c:	str	x19, [sp, #16]
  41a340:	mov	x19, x0
  41a344:	mov	x29, sp
  41a348:	cmp	w8, #0x4
  41a34c:	b.eq	41a3a8 <wcrtomb@plt+0x15868>  // b.none
  41a350:	cmp	w8, #0x2
  41a354:	b.eq	41a368 <wcrtomb@plt+0x15828>  // b.none
  41a358:	cmp	w8, #0x1
  41a35c:	b.ne	41a380 <wcrtomb@plt+0x15840>  // b.any
  41a360:	mov	w1, wzr
  41a364:	b	41a36c <wcrtomb@plt+0x1582c>
  41a368:	mov	w1, #0x1                   	// #1
  41a36c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a370:	ldrb	w2, [x8, #4008]
  41a374:	mov	x0, x19
  41a378:	bl	42b698 <wcrtomb@plt+0x26b58>
  41a37c:	mov	x19, x0
  41a380:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a384:	ldr	x1, [x8, #3936]
  41a388:	cbz	x1, 41a3a8 <wcrtomb@plt+0x15868>
  41a38c:	mov	x0, x19
  41a390:	bl	41ecf4 <wcrtomb@plt+0x1a1b4>
  41a394:	cmn	x0, #0x1
  41a398:	b.ne	41a3a4 <wcrtomb@plt+0x15864>  // b.any
  41a39c:	mov	x0, x19
  41a3a0:	bl	403f40 <strlen@plt>
  41a3a4:	add	x19, x19, x0
  41a3a8:	mov	x0, x19
  41a3ac:	ldr	x19, [sp, #16]
  41a3b0:	ldp	x29, x30, [sp], #32
  41a3b4:	ret
  41a3b8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a3bc:	add	x8, x8, #0x5f8
  41a3c0:	adrp	x2, 41a000 <wcrtomb@plt+0x154c0>
  41a3c4:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41a3c8:	add	x2, x2, #0x748
  41a3cc:	add	x3, x3, #0xc14
  41a3d0:	mov	x1, x0
  41a3d4:	mov	x0, x8
  41a3d8:	b	41a3dc <wcrtomb@plt+0x1589c>
  41a3dc:	sub	sp, sp, #0x180
  41a3e0:	stp	x20, x19, [sp, #368]
  41a3e4:	mov	x19, x1
  41a3e8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  41a3ec:	stp	x29, x30, [sp, #288]
  41a3f0:	add	x29, sp, #0x120
  41a3f4:	str	x0, [sp, #8]
  41a3f8:	add	x1, x1, #0x40b
  41a3fc:	mov	x0, x19
  41a400:	stp	x28, x27, [sp, #304]
  41a404:	stp	x26, x25, [sp, #320]
  41a408:	stp	x24, x23, [sp, #336]
  41a40c:	stp	x22, x21, [sp, #352]
  41a410:	mov	x20, x3
  41a414:	mov	x21, x2
  41a418:	stp	xzr, xzr, [x29, #-24]
  41a41c:	bl	404220 <fopen@plt>
  41a420:	cbz	x0, 41a740 <wcrtomb@plt+0x15c00>
  41a424:	mov	x23, x0
  41a428:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41a42c:	add	x8, x8, #0x260
  41a430:	sub	x0, x29, #0x10
  41a434:	sub	x1, x29, #0x18
  41a438:	mov	w2, #0xa                   	// #10
  41a43c:	mov	x3, x23
  41a440:	str	x8, [sp, #96]
  41a444:	bl	404a70 <__getdelim@plt>
  41a448:	cmp	x0, #0x0
  41a44c:	b.le	41a6c4 <wcrtomb@plt+0x15b84>
  41a450:	adrp	x27, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41a454:	mov	w22, wzr
  41a458:	mov	w25, #0x8e44                	// #36420
  41a45c:	mov	w24, #0x1                   	// #1
  41a460:	add	x27, x27, #0x57e
  41a464:	b	41a4b8 <wcrtomb@plt+0x15978>
  41a468:	mov	w2, #0x5                   	// #5
  41a46c:	mov	x0, xzr
  41a470:	mov	x1, x27
  41a474:	bl	404900 <dcgettext@plt>
  41a478:	mov	x2, x0
  41a47c:	mov	w0, wzr
  41a480:	mov	w1, wzr
  41a484:	mov	x3, x19
  41a488:	mov	w4, w24
  41a48c:	bl	403fa0 <error@plt>
  41a490:	mov	w22, #0x1                   	// #1
  41a494:	sub	x0, x29, #0x10
  41a498:	sub	x1, x29, #0x18
  41a49c:	mov	w2, #0xa                   	// #10
  41a4a0:	mov	x3, x23
  41a4a4:	orr	w25, w25, #0x8
  41a4a8:	bl	404a70 <__getdelim@plt>
  41a4ac:	cmp	x0, #0x0
  41a4b0:	add	w24, w24, #0x1
  41a4b4:	b.le	41a678 <wcrtomb@plt+0x15b38>
  41a4b8:	ldur	x0, [x29, #-16]
  41a4bc:	add	x1, sp, #0x20
  41a4c0:	mov	w2, w25
  41a4c4:	bl	42d338 <wcrtomb@plt+0x287f8>
  41a4c8:	cbnz	w0, 41a6ec <wcrtomb@plt+0x15bac>
  41a4cc:	ldr	x8, [sp, #32]
  41a4d0:	cbz	x8, 41a494 <wcrtomb@plt+0x15954>
  41a4d4:	cmp	x8, #0x2
  41a4d8:	b.ne	41a468 <wcrtomb@plt+0x15928>  // b.any
  41a4dc:	ldr	x8, [sp, #40]
  41a4e0:	ldr	x0, [x8]
  41a4e4:	ldrb	w8, [x0]
  41a4e8:	cmp	w8, #0x2b
  41a4ec:	b.ne	41a510 <wcrtomb@plt+0x159d0>  // b.any
  41a4f0:	add	x1, x0, #0x1
  41a4f4:	add	x0, sp, #0x18
  41a4f8:	mov	x2, x20
  41a4fc:	mov	x3, x19
  41a500:	mov	w4, w24
  41a504:	bl	41a8ec <wcrtomb@plt+0x15dac>
  41a508:	cbnz	w0, 41a490 <wcrtomb@plt+0x15950>
  41a50c:	b	41a524 <wcrtomb@plt+0x159e4>
  41a510:	cbz	x21, 41a524 <wcrtomb@plt+0x159e4>
  41a514:	blr	x21
  41a518:	cmn	x0, #0x1
  41a51c:	str	x0, [sp, #24]
  41a520:	b.eq	41a598 <wcrtomb@plt+0x15a58>  // b.none
  41a524:	ldr	x8, [sp, #40]
  41a528:	mov	w1, #0x3a                  	// #58
  41a52c:	ldr	x28, [x8, #8]
  41a530:	mov	x0, x28
  41a534:	bl	4047a0 <strchr@plt>
  41a538:	cbz	x0, 41a568 <wcrtomb@plt+0x15a28>
  41a53c:	mov	x1, x0
  41a540:	cmp	x0, x28
  41a544:	strb	wzr, [x1], #1
  41a548:	add	x0, sp, #0x10
  41a54c:	mov	x2, x20
  41a550:	mov	x3, x19
  41a554:	mov	w4, w24
  41a558:	csel	x28, x28, xzr, hi  // hi = pmore
  41a55c:	bl	41a8ec <wcrtomb@plt+0x15dac>
  41a560:	cbnz	w0, 41a490 <wcrtomb@plt+0x15950>
  41a564:	b	41a5cc <wcrtomb@plt+0x15a8c>
  41a568:	ldrb	w8, [x28]
  41a56c:	cmp	w8, #0x2b
  41a570:	b.ne	41a5b8 <wcrtomb@plt+0x15a78>  // b.any
  41a574:	add	x0, sp, #0x10
  41a578:	mov	x1, x28
  41a57c:	mov	x2, x20
  41a580:	mov	x3, x19
  41a584:	mov	w4, w24
  41a588:	bl	41a8ec <wcrtomb@plt+0x15dac>
  41a58c:	cbnz	w0, 41a490 <wcrtomb@plt+0x15950>
  41a590:	mov	x28, xzr
  41a594:	b	41a5cc <wcrtomb@plt+0x15a8c>
  41a598:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41a59c:	mov	w2, #0x5                   	// #5
  41a5a0:	mov	x0, xzr
  41a5a4:	add	x1, x1, #0x594
  41a5a8:	bl	404900 <dcgettext@plt>
  41a5ac:	ldr	x8, [sp, #40]
  41a5b0:	ldr	x6, [x8]
  41a5b4:	b	41a658 <wcrtomb@plt+0x15b18>
  41a5b8:	mov	x0, x28
  41a5bc:	blr	x21
  41a5c0:	cmn	x0, #0x1
  41a5c4:	str	x0, [sp, #16]
  41a5c8:	b.eq	41a63c <wcrtomb@plt+0x15afc>  // b.none
  41a5cc:	mov	w0, #0x18                  	// #24
  41a5d0:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41a5d4:	ldp	x9, x8, [sp, #16]
  41a5d8:	mov	x26, x0
  41a5dc:	stp	x8, x9, [x0]
  41a5e0:	cbz	x28, 41a5f0 <wcrtomb@plt+0x15ab0>
  41a5e4:	mov	x0, x28
  41a5e8:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41a5ec:	b	41a5f4 <wcrtomb@plt+0x15ab4>
  41a5f0:	mov	x0, xzr
  41a5f4:	ldr	x8, [sp, #8]
  41a5f8:	str	x0, [x26, #16]
  41a5fc:	ldr	x0, [x8]
  41a600:	cbnz	x0, 41a62c <wcrtomb@plt+0x15aec>
  41a604:	adrp	x2, 41a000 <wcrtomb@plt+0x154c0>
  41a608:	adrp	x3, 41a000 <wcrtomb@plt+0x154c0>
  41a60c:	mov	x1, xzr
  41a610:	add	x2, x2, #0x9c0
  41a614:	add	x3, x3, #0x9d0
  41a618:	mov	x4, xzr
  41a61c:	bl	43b9f4 <argp_parse@@Base+0x4148>
  41a620:	ldr	x8, [sp, #8]
  41a624:	str	x0, [x8]
  41a628:	cbz	x0, 41a73c <wcrtomb@plt+0x15bfc>
  41a62c:	mov	x1, x26
  41a630:	bl	43c408 <argp_parse@@Base+0x4b5c>
  41a634:	cbnz	x0, 41a494 <wcrtomb@plt+0x15954>
  41a638:	b	41a73c <wcrtomb@plt+0x15bfc>
  41a63c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41a640:	mov	w2, #0x5                   	// #5
  41a644:	mov	x0, xzr
  41a648:	add	x1, x1, #0x594
  41a64c:	bl	404900 <dcgettext@plt>
  41a650:	ldr	x8, [sp, #40]
  41a654:	ldr	x6, [x8, #8]
  41a658:	mov	x2, x0
  41a65c:	mov	w0, wzr
  41a660:	mov	w1, wzr
  41a664:	mov	x3, x19
  41a668:	mov	w4, w24
  41a66c:	mov	x5, x20
  41a670:	bl	403fa0 <error@plt>
  41a674:	b	41a490 <wcrtomb@plt+0x15950>
  41a678:	add	x0, sp, #0x20
  41a67c:	bl	42d484 <wcrtomb@plt+0x28944>
  41a680:	mov	x0, x23
  41a684:	bl	4041e0 <fclose@plt>
  41a688:	cbz	w22, 41a6cc <wcrtomb@plt+0x15b8c>
  41a68c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a690:	ldr	x8, [x8, #4064]
  41a694:	cbz	x8, 41a69c <wcrtomb@plt+0x15b5c>
  41a698:	blr	x8
  41a69c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41a6a0:	add	x1, x1, #0x5b1
  41a6a4:	mov	w2, #0x5                   	// #5
  41a6a8:	mov	x0, xzr
  41a6ac:	bl	404900 <dcgettext@plt>
  41a6b0:	mov	x2, x0
  41a6b4:	mov	w0, wzr
  41a6b8:	mov	w1, wzr
  41a6bc:	bl	403fa0 <error@plt>
  41a6c0:	bl	40e96c <wcrtomb@plt+0x9e2c>
  41a6c4:	mov	x0, x23
  41a6c8:	bl	4041e0 <fclose@plt>
  41a6cc:	ldp	x20, x19, [sp, #368]
  41a6d0:	ldp	x22, x21, [sp, #352]
  41a6d4:	ldp	x24, x23, [sp, #336]
  41a6d8:	ldp	x26, x25, [sp, #320]
  41a6dc:	ldp	x28, x27, [sp, #304]
  41a6e0:	ldp	x29, x30, [sp, #288]
  41a6e4:	add	sp, sp, #0x180
  41a6e8:	ret
  41a6ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a6f0:	ldr	x8, [x8, #4064]
  41a6f4:	cbz	x8, 41a6fc <wcrtomb@plt+0x15bbc>
  41a6f8:	blr	x8
  41a6fc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41a700:	add	x1, x1, #0x561
  41a704:	mov	w2, #0x5                   	// #5
  41a708:	mov	x0, xzr
  41a70c:	bl	404900 <dcgettext@plt>
  41a710:	mov	x20, x0
  41a714:	add	x0, sp, #0x20
  41a718:	bl	42d5dc <wcrtomb@plt+0x28a9c>
  41a71c:	mov	x5, x0
  41a720:	mov	w0, wzr
  41a724:	mov	w1, wzr
  41a728:	mov	x2, x20
  41a72c:	mov	x3, x19
  41a730:	mov	w4, w24
  41a734:	bl	403fa0 <error@plt>
  41a738:	bl	40e96c <wcrtomb@plt+0x9e2c>
  41a73c:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  41a740:	mov	x0, x19
  41a744:	bl	42a8f0 <wcrtomb@plt+0x25db0>
  41a748:	stp	x29, x30, [sp, #-16]!
  41a74c:	mov	x29, sp
  41a750:	bl	404390 <getpwnam@plt>
  41a754:	cbz	x0, 41a764 <wcrtomb@plt+0x15c24>
  41a758:	ldr	w0, [x0, #16]
  41a75c:	ldp	x29, x30, [sp], #16
  41a760:	ret
  41a764:	mov	x0, #0xffffffffffffffff    	// #-1
  41a768:	ldp	x29, x30, [sp], #16
  41a76c:	ret
  41a770:	sub	sp, sp, #0x40
  41a774:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a778:	ldr	x8, [x8, #1528]
  41a77c:	stp	x20, x19, [sp, #48]
  41a780:	mov	x19, x2
  41a784:	mov	x20, x1
  41a788:	stp	x29, x30, [sp, #32]
  41a78c:	add	x29, sp, #0x20
  41a790:	cbz	x8, 41a7c4 <wcrtomb@plt+0x15c84>
  41a794:	mov	w9, w0
  41a798:	add	x1, sp, #0x8
  41a79c:	mov	x0, x8
  41a7a0:	str	x9, [sp, #8]
  41a7a4:	bl	43b71c <argp_parse@@Base+0x3e70>
  41a7a8:	cbz	x0, 41a7c4 <wcrtomb@plt+0x15c84>
  41a7ac:	mov	x8, x0
  41a7b0:	ldr	x9, [x8, #8]
  41a7b4:	mov	w0, wzr
  41a7b8:	str	w9, [x20]
  41a7bc:	ldr	x8, [x8, #16]
  41a7c0:	b	41a7f4 <wcrtomb@plt+0x15cb4>
  41a7c4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a7c8:	ldr	w8, [x8, #3840]
  41a7cc:	cmn	w8, #0x1
  41a7d0:	b.eq	41a7e0 <wcrtomb@plt+0x15ca0>  // b.none
  41a7d4:	mov	w0, wzr
  41a7d8:	str	w8, [x20]
  41a7dc:	b	41a7e4 <wcrtomb@plt+0x15ca4>
  41a7e0:	mov	w0, #0x1                   	// #1
  41a7e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a7e8:	ldr	x8, [x8, #3640]
  41a7ec:	cbz	x8, 41a7f8 <wcrtomb@plt+0x15cb8>
  41a7f0:	mov	w0, wzr
  41a7f4:	str	x8, [x19]
  41a7f8:	ldp	x20, x19, [sp, #48]
  41a7fc:	ldp	x29, x30, [sp, #32]
  41a800:	add	sp, sp, #0x40
  41a804:	ret
  41a808:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a80c:	add	x8, x8, #0x600
  41a810:	adrp	x2, 41a000 <wcrtomb@plt+0x154c0>
  41a814:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41a818:	add	x2, x2, #0x82c
  41a81c:	add	x3, x3, #0xc1c
  41a820:	mov	x1, x0
  41a824:	mov	x0, x8
  41a828:	b	41a3dc <wcrtomb@plt+0x1589c>
  41a82c:	stp	x29, x30, [sp, #-16]!
  41a830:	mov	x29, sp
  41a834:	bl	404060 <getgrnam@plt>
  41a838:	cbz	x0, 41a848 <wcrtomb@plt+0x15d08>
  41a83c:	ldr	w0, [x0, #16]
  41a840:	ldp	x29, x30, [sp], #16
  41a844:	ret
  41a848:	mov	x0, #0xffffffffffffffff    	// #-1
  41a84c:	ldp	x29, x30, [sp], #16
  41a850:	ret
  41a854:	sub	sp, sp, #0x40
  41a858:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a85c:	ldr	x8, [x8, #1536]
  41a860:	stp	x20, x19, [sp, #48]
  41a864:	mov	x19, x2
  41a868:	mov	x20, x1
  41a86c:	stp	x29, x30, [sp, #32]
  41a870:	add	x29, sp, #0x20
  41a874:	cbz	x8, 41a8a8 <wcrtomb@plt+0x15d68>
  41a878:	mov	w9, w0
  41a87c:	add	x1, sp, #0x8
  41a880:	mov	x0, x8
  41a884:	str	x9, [sp, #8]
  41a888:	bl	43b71c <argp_parse@@Base+0x3e70>
  41a88c:	cbz	x0, 41a8a8 <wcrtomb@plt+0x15d68>
  41a890:	mov	x8, x0
  41a894:	ldr	x9, [x8, #8]
  41a898:	mov	w0, wzr
  41a89c:	str	w9, [x20]
  41a8a0:	ldr	x8, [x8, #16]
  41a8a4:	b	41a8d8 <wcrtomb@plt+0x15d98>
  41a8a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a8ac:	ldr	w8, [x8, #3760]
  41a8b0:	cmn	w8, #0x1
  41a8b4:	b.eq	41a8c4 <wcrtomb@plt+0x15d84>  // b.none
  41a8b8:	mov	w0, wzr
  41a8bc:	str	w8, [x20]
  41a8c0:	b	41a8c8 <wcrtomb@plt+0x15d88>
  41a8c4:	mov	w0, #0x1                   	// #1
  41a8c8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41a8cc:	ldr	x8, [x8, #3584]
  41a8d0:	cbz	x8, 41a8dc <wcrtomb@plt+0x15d9c>
  41a8d4:	mov	w0, wzr
  41a8d8:	str	x8, [x19]
  41a8dc:	ldp	x20, x19, [sp, #48]
  41a8e0:	ldp	x29, x30, [sp, #32]
  41a8e4:	add	sp, sp, #0x40
  41a8e8:	ret
  41a8ec:	sub	sp, sp, #0x50
  41a8f0:	stp	x29, x30, [sp, #16]
  41a8f4:	stp	x24, x23, [sp, #32]
  41a8f8:	stp	x22, x21, [sp, #48]
  41a8fc:	stp	x20, x19, [sp, #64]
  41a900:	add	x29, sp, #0x10
  41a904:	mov	w21, w4
  41a908:	mov	x22, x3
  41a90c:	mov	x20, x2
  41a910:	mov	x19, x1
  41a914:	mov	x23, x0
  41a918:	bl	404a10 <__errno_location@plt>
  41a91c:	mov	x24, x0
  41a920:	str	wzr, [x0]
  41a924:	add	x1, sp, #0x8
  41a928:	mov	w2, #0xa                   	// #10
  41a92c:	mov	x0, x19
  41a930:	mov	w3, wzr
  41a934:	bl	404400 <__strtoul_internal@plt>
  41a938:	ldr	x8, [sp, #8]
  41a93c:	ldrb	w9, [x8]
  41a940:	cbnz	w9, 41a94c <wcrtomb@plt+0x15e0c>
  41a944:	ldr	w9, [x24]
  41a948:	cbz	w9, 41a99c <wcrtomb@plt+0x15e5c>
  41a94c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41a950:	add	x1, x1, #0x5c9
  41a954:	mov	w2, #0x5                   	// #5
  41a958:	mov	x0, xzr
  41a95c:	bl	404900 <dcgettext@plt>
  41a960:	mov	x2, x0
  41a964:	mov	w0, wzr
  41a968:	mov	w1, wzr
  41a96c:	mov	x3, x22
  41a970:	mov	w4, w21
  41a974:	mov	x5, x20
  41a978:	mov	x6, x19
  41a97c:	bl	403fa0 <error@plt>
  41a980:	mov	w0, #0xffffffff            	// #-1
  41a984:	ldp	x20, x19, [sp, #64]
  41a988:	ldp	x22, x21, [sp, #48]
  41a98c:	ldp	x24, x23, [sp, #32]
  41a990:	ldp	x29, x30, [sp, #16]
  41a994:	add	sp, sp, #0x50
  41a998:	ret
  41a99c:	mov	x8, x0
  41a9a0:	lsr	x9, x0, #32
  41a9a4:	cbz	x9, 41a9b4 <wcrtomb@plt+0x15e74>
  41a9a8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41a9ac:	add	x1, x1, #0x5df
  41a9b0:	b	41a954 <wcrtomb@plt+0x15e14>
  41a9b4:	mov	w0, wzr
  41a9b8:	str	x8, [x23]
  41a9bc:	b	41a984 <wcrtomb@plt+0x15e44>
  41a9c0:	ldr	x8, [x0]
  41a9c4:	udiv	x9, x8, x1
  41a9c8:	msub	x0, x9, x1, x8
  41a9cc:	ret
  41a9d0:	ldr	x8, [x0]
  41a9d4:	ldr	x9, [x1]
  41a9d8:	cmp	x8, x9
  41a9dc:	cset	w0, eq  // eq = none
  41a9e0:	ret
  41a9e4:	ret
  41a9e8:	lsr	x8, x1, #63
  41a9ec:	eor	w0, w8, #0x1
  41a9f0:	ret
  41a9f4:	stp	x29, x30, [sp, #-32]!
  41a9f8:	stp	x20, x19, [sp, #16]
  41a9fc:	mov	w20, w0
  41aa00:	mov	x0, xzr
  41aa04:	mov	x29, sp
  41aa08:	mov	x19, x1
  41aa0c:	bl	443394 <argp_parse@@Base+0xbae8>
  41aa10:	mov	w1, w0
  41aa14:	mov	w0, w20
  41aa18:	mov	x2, x19
  41aa1c:	ldp	x20, x19, [sp, #16]
  41aa20:	ldp	x29, x30, [sp], #32
  41aa24:	b	444828 <argp_parse@@Base+0xcf7c>
  41aa28:	stp	x29, x30, [sp, #-32]!
  41aa2c:	stp	x20, x19, [sp, #16]
  41aa30:	mov	x19, x0
  41aa34:	ldr	x0, [x0]
  41aa38:	mov	x29, sp
  41aa3c:	mov	x20, x1
  41aa40:	bl	404700 <free@plt>
  41aa44:	cbz	x20, 41aa54 <wcrtomb@plt+0x15f14>
  41aa48:	mov	x0, x20
  41aa4c:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41aa50:	b	41aa58 <wcrtomb@plt+0x15f18>
  41aa54:	mov	x0, xzr
  41aa58:	str	x0, [x19]
  41aa5c:	ldp	x20, x19, [sp, #16]
  41aa60:	ldp	x29, x30, [sp], #32
  41aa64:	ret
  41aa68:	stp	x29, x30, [sp, #-48]!
  41aa6c:	stp	x22, x21, [sp, #16]
  41aa70:	stp	x20, x19, [sp, #32]
  41aa74:	mov	x19, x0
  41aa78:	ldr	x0, [x0]
  41aa7c:	mov	x29, sp
  41aa80:	mov	x21, x2
  41aa84:	mov	x20, x1
  41aa88:	bl	404700 <free@plt>
  41aa8c:	cbz	x20, 41aac0 <wcrtomb@plt+0x15f80>
  41aa90:	mov	x0, x20
  41aa94:	mov	x1, x21
  41aa98:	bl	404010 <strnlen@plt>
  41aa9c:	mov	x21, x0
  41aaa0:	add	x0, x0, #0x1
  41aaa4:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41aaa8:	mov	x1, x20
  41aaac:	mov	x2, x21
  41aab0:	mov	x22, x0
  41aab4:	bl	403ec0 <memcpy@plt>
  41aab8:	strb	wzr, [x22, x21]
  41aabc:	str	x22, [x19]
  41aac0:	ldp	x20, x19, [sp, #32]
  41aac4:	ldp	x22, x21, [sp, #16]
  41aac8:	ldp	x29, x30, [sp], #48
  41aacc:	ret
  41aad0:	adrp	x17, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41aad4:	ldr	q1, [x17, #1536]
  41aad8:	mov	w16, #0x2                   	// #2
  41aadc:	adrp	x10, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41aae0:	dup	v3.2d, x0
  41aae4:	mov	w8, #0x1                   	// #1
  41aae8:	mov	w9, #0x5c                  	// #92
  41aaec:	add	x10, x10, #0x610
  41aaf0:	mov	w11, #0x7f                  	// #127
  41aaf4:	mov	w12, #0x7                   	// #7
  41aaf8:	mov	w13, #0x8                   	// #8
  41aafc:	mov	w14, #0xc                   	// #12
  41ab00:	mov	w15, #0xa                   	// #10
  41ab04:	dup	v0.2d, x16
  41ab08:	mov	w16, #0xd                   	// #13
  41ab0c:	mov	w17, #0x9                   	// #9
  41ab10:	mov	w18, #0xb                   	// #11
  41ab14:	mov	w0, #0x1                   	// #1
  41ab18:	b	41ab2c <wcrtomb@plt+0x15fec>
  41ab1c:	mov	x2, v2.d[1]
  41ab20:	strb	w1, [x2], #1
  41ab24:	fmov	d3, x3
  41ab28:	mov	v3.d[1], x2
  41ab2c:	mov	v2.16b, v3.16b
  41ab30:	fmov	x2, d2
  41ab34:	ldrb	w3, [x2]
  41ab38:	cmp	w3, #0x5c
  41ab3c:	b.eq	41ab60 <wcrtomb@plt+0x16020>  // b.none
  41ab40:	mov	x1, v2.d[1]
  41ab44:	cbz	w3, 41ac80 <wcrtomb@plt+0x16140>
  41ab48:	dup	v3.2d, x8
  41ab4c:	cmp	x2, x1
  41ab50:	add	v3.2d, v2.2d, v3.2d
  41ab54:	b.eq	41ab2c <wcrtomb@plt+0x15fec>  // b.none
  41ab58:	strb	w3, [x1]
  41ab5c:	b	41ab2c <wcrtomb@plt+0x15fec>
  41ab60:	mov	x3, x2
  41ab64:	ldrb	w1, [x3, #1]!
  41ab68:	sub	w1, w1, #0x30
  41ab6c:	cmp	w1, #0x46
  41ab70:	b.hi	41ac24 <wcrtomb@plt+0x160e4>  // b.pmore
  41ab74:	adr	x4, 41ab84 <wcrtomb@plt+0x16044>
  41ab78:	ldrb	w5, [x10, x1]
  41ab7c:	add	x4, x4, x5, lsl #2
  41ab80:	br	x4
  41ab84:	mov	x3, x2
  41ab88:	ldrb	w5, [x3, #2]!
  41ab8c:	and	w4, w5, #0xf8
  41ab90:	cmp	w4, #0x30
  41ab94:	b.ne	41ab1c <wcrtomb@plt+0x15fdc>  // b.any
  41ab98:	mov	x3, x2
  41ab9c:	ldrb	w4, [x3, #3]!
  41aba0:	add	w1, w5, w1, lsl #3
  41aba4:	sub	w1, w1, #0x30
  41aba8:	and	w5, w4, #0xf8
  41abac:	cmp	w5, #0x30
  41abb0:	b.ne	41ab1c <wcrtomb@plt+0x15fdc>  // b.any
  41abb4:	add	w1, w4, w1, lsl #3
  41abb8:	add	x3, x2, #0x4
  41abbc:	sub	w1, w1, #0x30
  41abc0:	b	41ab1c <wcrtomb@plt+0x15fdc>
  41abc4:	mov	x1, v2.d[1]
  41abc8:	strb	w11, [x1]
  41abcc:	add	v3.2d, v2.2d, v1.2d
  41abd0:	b	41ab2c <wcrtomb@plt+0x15fec>
  41abd4:	mov	x1, v2.d[1]
  41abd8:	strb	w9, [x1]
  41abdc:	add	v3.2d, v2.2d, v1.2d
  41abe0:	b	41ab2c <wcrtomb@plt+0x15fec>
  41abe4:	mov	x1, v2.d[1]
  41abe8:	strb	w13, [x1]
  41abec:	add	v3.2d, v2.2d, v1.2d
  41abf0:	b	41ab2c <wcrtomb@plt+0x15fec>
  41abf4:	mov	x1, v2.d[1]
  41abf8:	strb	w14, [x1]
  41abfc:	add	v3.2d, v2.2d, v1.2d
  41ac00:	b	41ab2c <wcrtomb@plt+0x15fec>
  41ac04:	mov	x1, v2.d[1]
  41ac08:	strb	w16, [x1]
  41ac0c:	add	v3.2d, v2.2d, v1.2d
  41ac10:	b	41ab2c <wcrtomb@plt+0x15fec>
  41ac14:	mov	x1, v2.d[1]
  41ac18:	strb	w17, [x1]
  41ac1c:	add	v3.2d, v2.2d, v1.2d
  41ac20:	b	41ab2c <wcrtomb@plt+0x15fec>
  41ac24:	mov	x1, v2.d[1]
  41ac28:	strb	w9, [x1], #1
  41ac2c:	ldrb	w2, [x3]
  41ac30:	fmov	d3, x3
  41ac34:	mov	w0, wzr
  41ac38:	mov	v3.d[1], x1
  41ac3c:	cbz	w2, 41ab2c <wcrtomb@plt+0x15fec>
  41ac40:	mov	w0, wzr
  41ac44:	add	v3.2d, v2.2d, v0.2d
  41ac48:	strb	w2, [x1]
  41ac4c:	b	41ab2c <wcrtomb@plt+0x15fec>
  41ac50:	mov	x1, v2.d[1]
  41ac54:	strb	w12, [x1]
  41ac58:	add	v3.2d, v2.2d, v1.2d
  41ac5c:	b	41ab2c <wcrtomb@plt+0x15fec>
  41ac60:	mov	x1, v2.d[1]
  41ac64:	strb	w15, [x1]
  41ac68:	add	v3.2d, v2.2d, v1.2d
  41ac6c:	b	41ab2c <wcrtomb@plt+0x15fec>
  41ac70:	mov	x1, v2.d[1]
  41ac74:	strb	w18, [x1]
  41ac78:	add	v3.2d, v2.2d, v1.2d
  41ac7c:	b	41ab2c <wcrtomb@plt+0x15fec>
  41ac80:	cmp	x2, x1
  41ac84:	b.eq	41ac8c <wcrtomb@plt+0x1614c>  // b.none
  41ac88:	strb	wzr, [x1]
  41ac8c:	ret
  41ac90:	stp	x29, x30, [sp, #-32]!
  41ac94:	str	x19, [sp, #16]
  41ac98:	mov	x19, x0
  41ac9c:	mov	x29, sp
  41aca0:	cbz	x0, 41acdc <wcrtomb@plt+0x1619c>
  41aca4:	ldrb	w8, [x19]
  41aca8:	cbz	w8, 41acdc <wcrtomb@plt+0x1619c>
  41acac:	mov	x0, x19
  41acb0:	bl	403f40 <strlen@plt>
  41acb4:	add	x8, x19, x0
  41acb8:	sub	x8, x8, #0x1
  41acbc:	cmp	x8, x19
  41acc0:	b.ls	41acdc <wcrtomb@plt+0x1619c>  // b.plast
  41acc4:	ldrb	w9, [x8]
  41acc8:	cmp	w9, #0x2f
  41accc:	b.ne	41acdc <wcrtomb@plt+0x1619c>  // b.any
  41acd0:	strb	wzr, [x8], #-1
  41acd4:	cmp	x8, x19
  41acd8:	b.hi	41acc4 <wcrtomb@plt+0x16184>  // b.pmore
  41acdc:	mov	x0, x19
  41ace0:	ldr	x19, [sp, #16]
  41ace4:	ldp	x29, x30, [sp], #32
  41ace8:	ret
  41acec:	ldrb	w8, [x0]
  41acf0:	mov	x9, x0
  41acf4:	cmp	w8, #0x2e
  41acf8:	mov	x8, x0
  41acfc:	b.ne	41ad38 <wcrtomb@plt+0x161f8>  // b.any
  41ad00:	mov	x9, x0
  41ad04:	mov	x8, x0
  41ad08:	ldrb	w10, [x9, #1]
  41ad0c:	cmp	w10, #0x2f
  41ad10:	b.ne	41ad38 <wcrtomb@plt+0x161f8>  // b.any
  41ad14:	add	x9, x9, #0x1
  41ad18:	ldrb	w10, [x9, #1]!
  41ad1c:	cmp	w10, #0x2f
  41ad20:	b.eq	41ad18 <wcrtomb@plt+0x161d8>  // b.none
  41ad24:	cmp	w10, #0x0
  41ad28:	cinc	x8, x8, eq  // eq = none
  41ad2c:	cmp	w10, #0x2e
  41ad30:	strb	w10, [x8]
  41ad34:	b.eq	41ad08 <wcrtomb@plt+0x161c8>  // b.none
  41ad38:	mov	w10, #0x1                   	// #1
  41ad3c:	ldrb	w12, [x9], #1
  41ad40:	mov	x11, x8
  41ad44:	cmp	w12, #0x2f
  41ad48:	strb	w12, [x8], #1
  41ad4c:	b.eq	41ad64 <wcrtomb@plt+0x16224>  // b.none
  41ad50:	cbnz	w12, 41ad3c <wcrtomb@plt+0x161fc>
  41ad54:	b	41ad88 <wcrtomb@plt+0x16248>
  41ad58:	tst	w11, #0x1
  41ad5c:	cinc	x11, x10, ne  // ne = any
  41ad60:	add	x9, x9, x11
  41ad64:	mov	x11, x9
  41ad68:	ldrb	w12, [x11], #1
  41ad6c:	cmp	w12, #0x2e
  41ad70:	csel	x11, x9, x11, ne  // ne = any
  41ad74:	ldrb	w12, [x11]
  41ad78:	cset	w11, eq  // eq = none
  41ad7c:	cmp	w12, #0x2f
  41ad80:	b.eq	41ad58 <wcrtomb@plt+0x16218>  // b.none
  41ad84:	b	41ad3c <wcrtomb@plt+0x161fc>
  41ad88:	sub	x9, x8, x0
  41ad8c:	cmp	x9, #0x3
  41ad90:	b.lt	41ade0 <wcrtomb@plt+0x162a0>  // b.tstop
  41ad94:	ldurb	w9, [x11, #-1]
  41ad98:	cmp	w9, #0x2e
  41ad9c:	b.ne	41adb0 <wcrtomb@plt+0x16270>  // b.any
  41ada0:	ldurb	w9, [x11, #-2]
  41ada4:	cmp	w9, #0x2f
  41ada8:	csetm	x9, eq  // eq = none
  41adac:	b	41adb4 <wcrtomb@plt+0x16274>
  41adb0:	mov	x9, xzr
  41adb4:	add	x8, x8, x9
  41adb8:	sub	x9, x8, x0
  41adbc:	cmp	x9, #0x3
  41adc0:	b.lt	41add4 <wcrtomb@plt+0x16294>  // b.tstop
  41adc4:	ldurb	w9, [x8, #-2]
  41adc8:	cmp	w9, #0x2f
  41adcc:	csetm	x9, eq  // eq = none
  41add0:	b	41add8 <wcrtomb@plt+0x16298>
  41add4:	mov	x9, xzr
  41add8:	add	x8, x8, x9
  41addc:	sturb	wzr, [x8, #-1]
  41ade0:	ret
  41ade4:	stp	x29, x30, [sp, #-48]!
  41ade8:	stp	x22, x21, [sp, #16]
  41adec:	stp	x20, x19, [sp, #32]
  41adf0:	ldrb	w8, [x1]
  41adf4:	mov	x20, x1
  41adf8:	mov	x29, sp
  41adfc:	cmp	w8, #0x2f
  41ae00:	b.eq	41ae94 <wcrtomb@plt+0x16354>  // b.none
  41ae04:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ae08:	ldr	x8, [x8, #1576]
  41ae0c:	cbz	x8, 41ae34 <wcrtomb@plt+0x162f4>
  41ae10:	mov	w9, #0x18                  	// #24
  41ae14:	smaddl	x8, w0, w9, x8
  41ae18:	ldr	x21, [x8, #8]
  41ae1c:	cbnz	x21, 41ae50 <wcrtomb@plt+0x16310>
  41ae20:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41ae24:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  41ae28:	add	x0, x0, #0x67f
  41ae2c:	add	x1, x1, #0x50a
  41ae30:	bl	42a288 <wcrtomb@plt+0x25748>
  41ae34:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ae38:	ldr	x21, [x19, #1656]
  41ae3c:	cbnz	x21, 41ae50 <wcrtomb@plt+0x16310>
  41ae40:	bl	445cfc <argp_parse@@Base+0xe450>
  41ae44:	mov	x21, x0
  41ae48:	str	x0, [x19, #1656]
  41ae4c:	cbz	x21, 41ae20 <wcrtomb@plt+0x162e0>
  41ae50:	mov	x0, x21
  41ae54:	bl	403f40 <strlen@plt>
  41ae58:	mov	x22, x0
  41ae5c:	mov	x0, x20
  41ae60:	bl	403f40 <strlen@plt>
  41ae64:	add	x8, x22, x0
  41ae68:	add	x0, x8, #0x2
  41ae6c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41ae70:	mov	x1, x21
  41ae74:	mov	x19, x0
  41ae78:	bl	404840 <strcpy@plt>
  41ae7c:	add	x0, x0, x22
  41ae80:	mov	w8, #0x2f                  	// #47
  41ae84:	strb	w8, [x0], #1
  41ae88:	mov	x1, x20
  41ae8c:	bl	404840 <strcpy@plt>
  41ae90:	cbnz	x19, 41aea0 <wcrtomb@plt+0x16360>
  41ae94:	mov	x0, x20
  41ae98:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41ae9c:	mov	x19, x0
  41aea0:	ldrb	w8, [x19]
  41aea4:	mov	x9, x19
  41aea8:	cmp	w8, #0x2e
  41aeac:	mov	x8, x19
  41aeb0:	b.ne	41aeec <wcrtomb@plt+0x163ac>  // b.any
  41aeb4:	mov	x9, x19
  41aeb8:	mov	x8, x19
  41aebc:	ldrb	w10, [x9, #1]
  41aec0:	cmp	w10, #0x2f
  41aec4:	b.ne	41aeec <wcrtomb@plt+0x163ac>  // b.any
  41aec8:	add	x9, x9, #0x1
  41aecc:	ldrb	w10, [x9, #1]!
  41aed0:	cmp	w10, #0x2f
  41aed4:	b.eq	41aecc <wcrtomb@plt+0x1638c>  // b.none
  41aed8:	cmp	w10, #0x0
  41aedc:	cinc	x8, x8, eq  // eq = none
  41aee0:	cmp	w10, #0x2e
  41aee4:	strb	w10, [x8]
  41aee8:	b.eq	41aebc <wcrtomb@plt+0x1637c>  // b.none
  41aeec:	mov	w10, #0x1                   	// #1
  41aef0:	ldrb	w12, [x9], #1
  41aef4:	mov	x11, x8
  41aef8:	cmp	w12, #0x2f
  41aefc:	strb	w12, [x8], #1
  41af00:	b.eq	41af18 <wcrtomb@plt+0x163d8>  // b.none
  41af04:	cbnz	w12, 41aef0 <wcrtomb@plt+0x163b0>
  41af08:	b	41af3c <wcrtomb@plt+0x163fc>
  41af0c:	tst	w11, #0x1
  41af10:	cinc	x11, x10, ne  // ne = any
  41af14:	add	x9, x9, x11
  41af18:	mov	x11, x9
  41af1c:	ldrb	w12, [x11], #1
  41af20:	cmp	w12, #0x2e
  41af24:	csel	x11, x9, x11, ne  // ne = any
  41af28:	ldrb	w12, [x11]
  41af2c:	cset	w11, eq  // eq = none
  41af30:	cmp	w12, #0x2f
  41af34:	b.eq	41af0c <wcrtomb@plt+0x163cc>  // b.none
  41af38:	b	41aef0 <wcrtomb@plt+0x163b0>
  41af3c:	sub	x9, x8, x19
  41af40:	cmp	x9, #0x3
  41af44:	b.lt	41af94 <wcrtomb@plt+0x16454>  // b.tstop
  41af48:	ldurb	w9, [x11, #-1]
  41af4c:	cmp	w9, #0x2e
  41af50:	b.ne	41af64 <wcrtomb@plt+0x16424>  // b.any
  41af54:	ldurb	w9, [x11, #-2]
  41af58:	cmp	w9, #0x2f
  41af5c:	csetm	x9, eq  // eq = none
  41af60:	b	41af68 <wcrtomb@plt+0x16428>
  41af64:	mov	x9, xzr
  41af68:	add	x8, x8, x9
  41af6c:	sub	x9, x8, x19
  41af70:	cmp	x9, #0x3
  41af74:	b.lt	41af88 <wcrtomb@plt+0x16448>  // b.tstop
  41af78:	ldurb	w9, [x8, #-2]
  41af7c:	cmp	w9, #0x2f
  41af80:	csetm	x9, eq  // eq = none
  41af84:	b	41af8c <wcrtomb@plt+0x1644c>
  41af88:	mov	x9, xzr
  41af8c:	add	x8, x8, x9
  41af90:	sturb	wzr, [x8, #-1]
  41af94:	mov	x0, x19
  41af98:	ldp	x20, x19, [sp, #32]
  41af9c:	ldp	x22, x21, [sp, #16]
  41afa0:	ldp	x29, x30, [sp], #48
  41afa4:	ret
  41afa8:	stp	x29, x30, [sp, #-80]!
  41afac:	stp	x24, x23, [sp, #32]
  41afb0:	stp	x22, x21, [sp, #48]
  41afb4:	stp	x20, x19, [sp, #64]
  41afb8:	ldr	x21, [x0]
  41afbc:	mov	x24, x0
  41afc0:	str	x25, [sp, #16]
  41afc4:	mov	x29, sp
  41afc8:	mov	x0, x21
  41afcc:	mov	x19, x4
  41afd0:	mov	x20, x3
  41afd4:	mov	x22, x2
  41afd8:	mov	x25, x1
  41afdc:	bl	403f40 <strlen@plt>
  41afe0:	cmp	x0, x22
  41afe4:	b.ls	41b054 <wcrtomb@plt+0x16514>  // b.plast
  41afe8:	mov	x23, x0
  41afec:	mov	x0, x21
  41aff0:	mov	x1, x25
  41aff4:	mov	x2, x22
  41aff8:	bl	404440 <bcmp@plt>
  41affc:	cbnz	w0, 41b054 <wcrtomb@plt+0x16514>
  41b000:	ldrb	w8, [x21, x22]
  41b004:	cmp	w8, #0x2f
  41b008:	b.ne	41b054 <wcrtomb@plt+0x16514>  // b.any
  41b00c:	mov	w8, #0x1                   	// #1
  41b010:	cmp	x19, x22
  41b014:	sub	x25, x8, x22
  41b018:	b.ls	41b034 <wcrtomb@plt+0x164f4>  // b.plast
  41b01c:	add	x8, x25, x19
  41b020:	add	x1, x8, x23
  41b024:	mov	x0, x21
  41b028:	bl	445a68 <argp_parse@@Base+0xe1bc>
  41b02c:	mov	x21, x0
  41b030:	str	x0, [x24]
  41b034:	add	x0, x21, x19
  41b038:	add	x1, x21, x22
  41b03c:	add	x2, x25, x23
  41b040:	bl	403ed0 <memmove@plt>
  41b044:	mov	x0, x21
  41b048:	mov	x1, x20
  41b04c:	mov	x2, x19
  41b050:	bl	403ec0 <memcpy@plt>
  41b054:	ldp	x20, x19, [sp, #64]
  41b058:	ldp	x22, x21, [sp, #48]
  41b05c:	ldp	x24, x23, [sp, #32]
  41b060:	ldr	x25, [sp, #16]
  41b064:	ldp	x29, x30, [sp], #80
  41b068:	ret
  41b06c:	cmp	x0, x2
  41b070:	mov	x1, x3
  41b074:	b.ls	41b07c <wcrtomb@plt+0x1653c>  // b.plast
  41b078:	b	43cf60 <argp_parse@@Base+0x56b4>
  41b07c:	b	43d080 <argp_parse@@Base+0x57d4>
  41b080:	stp	x29, x30, [sp, #-64]!
  41b084:	str	x23, [sp, #16]
  41b088:	stp	x22, x21, [sp, #32]
  41b08c:	stp	x20, x19, [sp, #48]
  41b090:	mov	x29, sp
  41b094:	mov	x19, x3
  41b098:	mov	x21, x2
  41b09c:	mov	x22, x1
  41b0a0:	mov	x23, x0
  41b0a4:	bl	404a10 <__errno_location@plt>
  41b0a8:	str	wzr, [x0]
  41b0ac:	ldrb	w8, [x23]
  41b0b0:	mov	x20, x0
  41b0b4:	tbnz	x19, #63, 41b108 <wcrtomb@plt+0x165c8>
  41b0b8:	cmp	w8, #0x2d
  41b0bc:	cinc	x8, x23, eq  // eq = none
  41b0c0:	ldrb	w8, [x8]
  41b0c4:	sub	w8, w8, #0x30
  41b0c8:	cmp	w8, #0x9
  41b0cc:	b.hi	41b140 <wcrtomb@plt+0x16600>  // b.pmore
  41b0d0:	mov	w2, #0xa                   	// #10
  41b0d4:	mov	x0, x23
  41b0d8:	mov	x1, x22
  41b0dc:	mov	w3, wzr
  41b0e0:	bl	4042d0 <__strtol_internal@plt>
  41b0e4:	cmp	x0, x21
  41b0e8:	b.lt	41b0f4 <wcrtomb@plt+0x165b4>  // b.tstop
  41b0ec:	cmp	x0, x19
  41b0f0:	b.le	41b14c <wcrtomb@plt+0x1660c>
  41b0f4:	mov	w8, #0x22                  	// #34
  41b0f8:	cmp	x0, x21
  41b0fc:	str	w8, [x20]
  41b100:	csel	x0, x21, x19, lt  // lt = tstop
  41b104:	b	41b14c <wcrtomb@plt+0x1660c>
  41b108:	sub	w8, w8, #0x30
  41b10c:	cmp	w8, #0x9
  41b110:	b.hi	41b140 <wcrtomb@plt+0x16600>  // b.pmore
  41b114:	mov	w2, #0xa                   	// #10
  41b118:	mov	x0, x23
  41b11c:	mov	x1, x22
  41b120:	mov	w3, wzr
  41b124:	bl	404400 <__strtoul_internal@plt>
  41b128:	cmp	x0, x19
  41b12c:	b.ls	41b14c <wcrtomb@plt+0x1660c>  // b.plast
  41b130:	mov	w8, #0x22                  	// #34
  41b134:	str	w8, [x20]
  41b138:	mov	x0, x19
  41b13c:	b	41b14c <wcrtomb@plt+0x1660c>
  41b140:	mov	x0, xzr
  41b144:	mov	w8, #0x16                  	// #22
  41b148:	str	w8, [x20]
  41b14c:	ldp	x20, x19, [sp, #48]
  41b150:	ldp	x22, x21, [sp, #32]
  41b154:	ldr	x23, [sp, #16]
  41b158:	ldp	x29, x30, [sp], #64
  41b15c:	ret
  41b160:	cbz	w0, 41b224 <wcrtomb@plt+0x166e4>
  41b164:	mov	w10, #0x6667                	// #26215
  41b168:	movk	w10, #0x6666, lsl #16
  41b16c:	smull	x11, w0, w10
  41b170:	lsr	x12, x11, #63
  41b174:	asr	x11, x11, #34
  41b178:	mov	w9, #0x2e                  	// #46
  41b17c:	mov	x8, x1
  41b180:	add	w12, w11, w12
  41b184:	mov	w11, #0xa                   	// #10
  41b188:	msub	w12, w12, w11, w0
  41b18c:	strb	w9, [x8], #1
  41b190:	mov	w9, #0x9                   	// #9
  41b194:	cbnz	w12, 41b1c4 <wcrtomb@plt+0x16684>
  41b198:	smull	x12, w0, w10
  41b19c:	lsr	x13, x12, #63
  41b1a0:	asr	x12, x12, #34
  41b1a4:	add	w0, w12, w13
  41b1a8:	smull	x12, w0, w10
  41b1ac:	lsr	x13, x12, #63
  41b1b0:	asr	x12, x12, #34
  41b1b4:	add	w12, w12, w13
  41b1b8:	msub	w12, w12, w11, w0
  41b1bc:	sub	w9, w9, #0x1
  41b1c0:	cbz	w12, 41b198 <wcrtomb@plt+0x16658>
  41b1c4:	strb	wzr, [x8, w9, sxtw]
  41b1c8:	subs	w9, w9, #0x1
  41b1cc:	add	w11, w12, #0x30
  41b1d0:	sxtw	x10, w9
  41b1d4:	strb	w11, [x8, x10]
  41b1d8:	b.eq	41b220 <wcrtomb@plt+0x166e0>  // b.none
  41b1dc:	add	x8, x1, x10
  41b1e0:	mov	w10, #0x6667                	// #26215
  41b1e4:	movk	w10, #0x6666, lsl #16
  41b1e8:	mov	w11, #0xa                   	// #10
  41b1ec:	smull	x12, w0, w10
  41b1f0:	lsr	x13, x12, #63
  41b1f4:	asr	x12, x12, #34
  41b1f8:	add	w0, w12, w13
  41b1fc:	smull	x12, w0, w10
  41b200:	lsr	x13, x12, #63
  41b204:	lsr	x12, x12, #34
  41b208:	add	w12, w12, w13
  41b20c:	msub	w12, w12, w11, w0
  41b210:	add	w12, w12, #0x30
  41b214:	subs	w9, w9, #0x1
  41b218:	strb	w12, [x8], #-1
  41b21c:	b.ne	41b1ec <wcrtomb@plt+0x166ac>  // b.any
  41b220:	ret
  41b224:	strb	wzr, [x1]
  41b228:	ret
  41b22c:	stp	x29, x30, [sp, #-48]!
  41b230:	mov	w8, #0xc9ff                	// #51711
  41b234:	movk	w8, #0x3b9a, lsl #16
  41b238:	cmp	w1, w8
  41b23c:	csel	w9, wzr, w1, hi  // hi = pmore
  41b240:	cmp	w9, #0x0
  41b244:	cset	w10, ne  // ne = any
  41b248:	cmp	x0, #0x0
  41b24c:	cset	w11, lt  // lt = tstop
  41b250:	and	w12, w11, w10
  41b254:	add	x12, x0, x12
  41b258:	stp	x20, x19, [sp, #32]
  41b25c:	mov	x20, x0
  41b260:	sub	w8, w8, w9
  41b264:	cneg	x0, x12, lt  // lt = tstop
  41b268:	tst	w11, w10
  41b26c:	add	x1, x2, #0x1
  41b270:	str	x21, [sp, #16]
  41b274:	mov	x29, sp
  41b278:	mov	x19, x2
  41b27c:	csinc	w21, w9, w8, eq  // eq = none
  41b280:	bl	43d080 <argp_parse@@Base+0x57d4>
  41b284:	tbnz	x20, #63, 41b350 <wcrtomb@plt+0x16810>
  41b288:	cbz	w21, 41b35c <wcrtomb@plt+0x1681c>
  41b28c:	mov	w10, #0xcccd                	// #52429
  41b290:	movk	w10, #0xcccc, lsl #16
  41b294:	umull	x10, w21, w10
  41b298:	mov	w9, #0x2e                  	// #46
  41b29c:	lsr	x11, x10, #35
  41b2a0:	mov	w10, #0xa                   	// #10
  41b2a4:	add	x8, x19, #0x16
  41b2a8:	msub	w12, w11, w10, w21
  41b2ac:	strb	w9, [x19, #21]
  41b2b0:	mov	w9, #0x9                   	// #9
  41b2b4:	cbnz	w12, 41b2ec <wcrtomb@plt+0x167ac>
  41b2b8:	mov	w11, #0x6667                	// #26215
  41b2bc:	movk	w11, #0x6666, lsl #16
  41b2c0:	smull	x12, w21, w11
  41b2c4:	lsr	x13, x12, #63
  41b2c8:	asr	x12, x12, #34
  41b2cc:	add	w21, w12, w13
  41b2d0:	smull	x12, w21, w11
  41b2d4:	lsr	x13, x12, #63
  41b2d8:	asr	x12, x12, #34
  41b2dc:	add	w12, w12, w13
  41b2e0:	msub	w12, w12, w10, w21
  41b2e4:	sub	w9, w9, #0x1
  41b2e8:	cbz	w12, 41b2c0 <wcrtomb@plt+0x16780>
  41b2ec:	strb	wzr, [x8, w9, sxtw]
  41b2f0:	subs	w9, w9, #0x1
  41b2f4:	add	w11, w12, #0x30
  41b2f8:	sxtw	x10, w9
  41b2fc:	strb	w11, [x8, x10]
  41b300:	b.eq	41b360 <wcrtomb@plt+0x16820>  // b.none
  41b304:	add	x10, x10, x19
  41b308:	mov	w8, #0x6667                	// #26215
  41b30c:	movk	w8, #0x6666, lsl #16
  41b310:	add	x10, x10, #0x15
  41b314:	mov	w11, #0xa                   	// #10
  41b318:	smull	x12, w21, w8
  41b31c:	lsr	x13, x12, #63
  41b320:	asr	x12, x12, #34
  41b324:	add	w21, w12, w13
  41b328:	smull	x12, w21, w8
  41b32c:	lsr	x13, x12, #63
  41b330:	lsr	x12, x12, #34
  41b334:	add	w12, w12, w13
  41b338:	msub	w12, w12, w11, w21
  41b33c:	add	w12, w12, #0x30
  41b340:	subs	w9, w9, #0x1
  41b344:	strb	w12, [x10], #-1
  41b348:	b.ne	41b318 <wcrtomb@plt+0x167d8>  // b.any
  41b34c:	b	41b360 <wcrtomb@plt+0x16820>
  41b350:	mov	w8, #0x2d                  	// #45
  41b354:	strb	w8, [x0, #-1]!
  41b358:	cbnz	w21, 41b28c <wcrtomb@plt+0x1674c>
  41b35c:	strb	wzr, [x19, #21]
  41b360:	ldp	x20, x19, [sp, #32]
  41b364:	ldr	x21, [sp, #16]
  41b368:	ldp	x29, x30, [sp], #48
  41b36c:	ret
  41b370:	stp	x29, x30, [sp, #-64]!
  41b374:	str	x23, [sp, #16]
  41b378:	stp	x22, x21, [sp, #32]
  41b37c:	stp	x20, x19, [sp, #48]
  41b380:	mov	x8, x0
  41b384:	ldrb	w23, [x8], #1
  41b388:	mov	x29, sp
  41b38c:	mov	w22, w2
  41b390:	mov	x19, x1
  41b394:	cmp	w23, #0x2d
  41b398:	csel	x8, x0, x8, ne  // ne = any
  41b39c:	ldrb	w8, [x8]
  41b3a0:	mov	x20, x0
  41b3a4:	sub	w21, w8, #0x30
  41b3a8:	bl	404a10 <__errno_location@plt>
  41b3ac:	cmp	w21, #0xa
  41b3b0:	mov	x21, x0
  41b3b4:	b.cs	41b3e4 <wcrtomb@plt+0x168a4>  // b.hs, b.nlast
  41b3b8:	cmp	w23, #0x2d
  41b3bc:	mov	w2, #0xa                   	// #10
  41b3c0:	mov	x0, x20
  41b3c4:	mov	x1, x19
  41b3c8:	mov	w3, wzr
  41b3cc:	str	wzr, [x21]
  41b3d0:	b.ne	41b3f8 <wcrtomb@plt+0x168b8>  // b.any
  41b3d4:	bl	4042d0 <__strtol_internal@plt>
  41b3d8:	ldr	x20, [x19]
  41b3dc:	tbnz	w22, #0, 41b408 <wcrtomb@plt+0x168c8>
  41b3e0:	b	41b544 <wcrtomb@plt+0x16a04>
  41b3e4:	mov	w8, #0x16                  	// #22
  41b3e8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41b3ec:	str	w8, [x21]
  41b3f0:	mov	x1, #0xffffffffffffffff    	// #-1
  41b3f4:	b	41b558 <wcrtomb@plt+0x16a18>
  41b3f8:	bl	404400 <__strtoul_internal@plt>
  41b3fc:	tbnz	x0, #63, 41b46c <wcrtomb@plt+0x1692c>
  41b400:	ldr	x20, [x19]
  41b404:	tbz	w22, #0, 41b544 <wcrtomb@plt+0x16a04>
  41b408:	ldrb	w8, [x20]
  41b40c:	cmp	w8, #0x2e
  41b410:	b.ne	41b544 <wcrtomb@plt+0x16a04>  // b.any
  41b414:	ldrb	w12, [x20, #1]!
  41b418:	sub	w13, w12, #0x30
  41b41c:	cmp	w13, #0x9
  41b420:	b.hi	41b484 <wcrtomb@plt+0x16944>  // b.pmore
  41b424:	mov	w8, wzr
  41b428:	mov	w10, wzr
  41b42c:	mov	w9, wzr
  41b430:	mov	w11, #0xa                   	// #10
  41b434:	b	41b458 <wcrtomb@plt+0x16918>
  41b438:	and	w12, w12, #0xff
  41b43c:	cmp	w12, #0x30
  41b440:	cset	w12, ne  // ne = any
  41b444:	orr	w8, w8, w12
  41b448:	ldrb	w12, [x20, #1]!
  41b44c:	sub	w13, w12, #0x30
  41b450:	cmp	w13, #0xa
  41b454:	b.cs	41b494 <wcrtomb@plt+0x16954>  // b.hs, b.nlast
  41b458:	cmp	w10, #0x8
  41b45c:	b.gt	41b438 <wcrtomb@plt+0x168f8>
  41b460:	add	w10, w10, #0x1
  41b464:	madd	w9, w9, w11, w13
  41b468:	b	41b448 <wcrtomb@plt+0x16908>
  41b46c:	mov	w8, #0x22                  	// #34
  41b470:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41b474:	str	w8, [x21]
  41b478:	ldr	x20, [x19]
  41b47c:	tbnz	w22, #0, 41b408 <wcrtomb@plt+0x168c8>
  41b480:	b	41b544 <wcrtomb@plt+0x16a04>
  41b484:	mov	w8, wzr
  41b488:	mov	w10, wzr
  41b48c:	mov	w9, wzr
  41b490:	b	41b49c <wcrtomb@plt+0x1695c>
  41b494:	cmp	w10, #0x8
  41b498:	b.gt	41b518 <wcrtomb@plt+0x169d8>
  41b49c:	cmp	w10, #0x8
  41b4a0:	mov	w11, #0x8                   	// #8
  41b4a4:	csel	w11, w10, w11, gt
  41b4a8:	sub	w11, w11, w10
  41b4ac:	add	w11, w11, #0x1
  41b4b0:	cmp	w11, #0x7
  41b4b4:	b.ls	41b500 <wcrtomb@plt+0x169c0>  // b.plast
  41b4b8:	and	w12, w11, #0xfffffff8
  41b4bc:	movi	v1.4s, #0x1
  41b4c0:	movi	v0.4s, #0x1
  41b4c4:	add	w10, w10, w12
  41b4c8:	mov	v1.s[0], w9
  41b4cc:	movi	v2.4s, #0xa
  41b4d0:	mov	w9, w12
  41b4d4:	mul	v1.4s, v1.4s, v2.4s
  41b4d8:	subs	w9, w9, #0x8
  41b4dc:	mul	v0.4s, v0.4s, v2.4s
  41b4e0:	b.ne	41b4d4 <wcrtomb@plt+0x16994>  // b.any
  41b4e4:	mul	v0.4s, v0.4s, v1.4s
  41b4e8:	ext	v1.16b, v0.16b, v0.16b, #8
  41b4ec:	mul	v0.4s, v0.4s, v1.4s
  41b4f0:	mul	v0.4s, v0.4s, v0.s[1]
  41b4f4:	cmp	w11, w12
  41b4f8:	fmov	w9, s0
  41b4fc:	b.eq	41b518 <wcrtomb@plt+0x169d8>  // b.none
  41b500:	sub	w10, w10, #0x1
  41b504:	add	w9, w9, w9, lsl #2
  41b508:	add	w10, w10, #0x1
  41b50c:	cmp	w10, #0x8
  41b510:	lsl	w9, w9, #1
  41b514:	b.lt	41b504 <wcrtomb@plt+0x169c4>  // b.tstop
  41b518:	cmp	w23, #0x2d
  41b51c:	b.ne	41b548 <wcrtomb@plt+0x16a08>  // b.any
  41b520:	and	w8, w8, #0x1
  41b524:	adds	w8, w9, w8
  41b528:	b.eq	41b544 <wcrtomb@plt+0x16a04>  // b.none
  41b52c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  41b530:	cmp	x0, x9
  41b534:	b.ne	41b570 <wcrtomb@plt+0x16a30>  // b.any
  41b538:	mov	w9, #0xffffffff            	// #-1
  41b53c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41b540:	b	41b548 <wcrtomb@plt+0x16a08>
  41b544:	mov	w9, wzr
  41b548:	ldr	w8, [x21]
  41b54c:	cmp	w8, #0x22
  41b550:	csinv	w8, w9, wzr, ne  // ne = any
  41b554:	sxtw	x1, w8
  41b558:	str	x20, [x19]
  41b55c:	ldp	x20, x19, [sp, #48]
  41b560:	ldp	x22, x21, [sp, #32]
  41b564:	ldr	x23, [sp, #16]
  41b568:	ldp	x29, x30, [sp], #64
  41b56c:	ret
  41b570:	mov	w9, #0xca00                	// #51712
  41b574:	movk	w9, #0x3b9a, lsl #16
  41b578:	sub	x0, x0, #0x1
  41b57c:	sub	w9, w9, w8
  41b580:	b	41b548 <wcrtomb@plt+0x16a08>
  41b584:	ldrb	w8, [x0]
  41b588:	cmp	w8, #0x2f
  41b58c:	b.ne	41b5d4 <wcrtomb@plt+0x16a94>  // b.any
  41b590:	mov	w8, #0x2                   	// #2
  41b594:	mov	x10, x0
  41b598:	ldrb	w9, [x0, #1]!
  41b59c:	cmp	w9, #0x2f
  41b5a0:	b.eq	41b594 <wcrtomb@plt+0x16a54>  // b.none
  41b5a4:	cmp	w9, #0x2e
  41b5a8:	b.ne	41b5c8 <wcrtomb@plt+0x16a88>  // b.any
  41b5ac:	ldrb	w11, [x10, #2]
  41b5b0:	cmp	w11, #0x2e
  41b5b4:	cinc	x11, x8, eq  // eq = none
  41b5b8:	add	x0, x10, x11
  41b5bc:	ldrb	w10, [x0]
  41b5c0:	cmp	w10, #0x2f
  41b5c4:	b.eq	41b594 <wcrtomb@plt+0x16a54>  // b.none
  41b5c8:	cmp	w9, #0x0
  41b5cc:	cset	w0, eq  // eq = none
  41b5d0:	ret
  41b5d4:	and	w8, w8, #0xff
  41b5d8:	cmp	w8, #0x2e
  41b5dc:	b.ne	41b600 <wcrtomb@plt+0x16ac0>  // b.any
  41b5e0:	ldrb	w8, [x0, #1]
  41b5e4:	cmp	w8, #0x2f
  41b5e8:	b.ne	41b60c <wcrtomb@plt+0x16acc>  // b.any
  41b5ec:	add	x0, x0, #0x1
  41b5f0:	ldrb	w8, [x0, #1]!
  41b5f4:	cmp	w8, #0x2f
  41b5f8:	b.eq	41b5f0 <wcrtomb@plt+0x16ab0>  // b.none
  41b5fc:	b	41b5d4 <wcrtomb@plt+0x16a94>
  41b600:	cbnz	w8, 41b618 <wcrtomb@plt+0x16ad8>
  41b604:	mov	w0, #0x1                   	// #1
  41b608:	ret
  41b60c:	cmp	w8, #0x0
  41b610:	cset	w0, eq  // eq = none
  41b614:	ret
  41b618:	mov	w0, wzr
  41b61c:	ret
  41b620:	stp	x29, x30, [sp, #-96]!
  41b624:	stp	x26, x25, [sp, #32]
  41b628:	adrp	x26, 477000 <_obstack_memory_used@@Base+0x304b0>
  41b62c:	ldr	w8, [x26, #1872]
  41b630:	stp	x20, x19, [sp, #80]
  41b634:	mov	x19, x0
  41b638:	stp	x22, x21, [sp, #64]
  41b63c:	mov	w21, w1
  41b640:	mov	w0, w8
  41b644:	mov	x1, x19
  41b648:	mov	w2, wzr
  41b64c:	str	x27, [sp, #16]
  41b650:	stp	x24, x23, [sp, #48]
  41b654:	mov	x29, sp
  41b658:	bl	4040b0 <unlinkat@plt>
  41b65c:	cbz	w0, 41b84c <wcrtomb@plt+0x16d0c>
  41b660:	bl	404a10 <__errno_location@plt>
  41b664:	ldr	w8, [x0]
  41b668:	mov	x20, x0
  41b66c:	cmp	w8, #0x15
  41b670:	b.eq	41b67c <wcrtomb@plt+0x16b3c>  // b.none
  41b674:	cmp	w8, #0x1
  41b678:	b.ne	41b7f4 <wcrtomb@plt+0x16cb4>  // b.any
  41b67c:	ldrb	w9, [x19]
  41b680:	cmp	w9, #0x2f
  41b684:	b.ne	41b7fc <wcrtomb@plt+0x16cbc>  // b.any
  41b688:	mov	w8, #0x2                   	// #2
  41b68c:	mov	x9, x19
  41b690:	b	41b6b0 <wcrtomb@plt+0x16b70>
  41b694:	ldrb	w10, [x9, #2]
  41b698:	cmp	w10, #0x2e
  41b69c:	cinc	x10, x8, eq  // eq = none
  41b6a0:	add	x9, x9, x10
  41b6a4:	ldrb	w10, [x9]
  41b6a8:	cmp	w10, #0x2f
  41b6ac:	b.ne	41b6d0 <wcrtomb@plt+0x16b90>  // b.any
  41b6b0:	mov	x11, x9
  41b6b4:	ldrb	w10, [x11, #1]!
  41b6b8:	cmp	w10, #0x2e
  41b6bc:	b.eq	41b694 <wcrtomb@plt+0x16b54>  // b.none
  41b6c0:	cmp	w10, #0x2f
  41b6c4:	mov	x9, x11
  41b6c8:	b.eq	41b6b0 <wcrtomb@plt+0x16b70>  // b.none
  41b6cc:	cbz	w10, 41b830 <wcrtomb@plt+0x16cf0>
  41b6d0:	ldr	w0, [x26, #1872]
  41b6d4:	mov	w2, #0x200                 	// #512
  41b6d8:	mov	x1, x19
  41b6dc:	bl	4040b0 <unlinkat@plt>
  41b6e0:	cbz	w0, 41b844 <wcrtomb@plt+0x16d04>
  41b6e4:	ldr	w8, [x20]
  41b6e8:	cmp	w8, #0x27
  41b6ec:	b.hi	41b7f4 <wcrtomb@plt+0x16cb4>  // b.pmore
  41b6f0:	adrp	x9, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41b6f4:	add	x9, x9, #0x657
  41b6f8:	adr	x10, 41b70c <wcrtomb@plt+0x16bcc>
  41b6fc:	ldrb	w11, [x9, x8]
  41b700:	add	x10, x10, x11, lsl #2
  41b704:	mov	w0, wzr
  41b708:	br	x10
  41b70c:	cmp	w21, #0x2
  41b710:	b.eq	41b83c <wcrtomb@plt+0x16cfc>  // b.none
  41b714:	cmp	w21, #0x1
  41b718:	b.ne	41b7f4 <wcrtomb@plt+0x16cb4>  // b.any
  41b71c:	mov	x0, x19
  41b720:	mov	w1, wzr
  41b724:	bl	41b8c0 <wcrtomb@plt+0x16d80>
  41b728:	cbz	x0, 41b850 <wcrtomb@plt+0x16d10>
  41b72c:	mov	x21, x0
  41b730:	bl	403f40 <strlen@plt>
  41b734:	cbz	x0, 41b784 <wcrtomb@plt+0x16c44>
  41b738:	mov	x22, x0
  41b73c:	mov	x23, x21
  41b740:	mov	x0, x19
  41b744:	mov	x1, x23
  41b748:	bl	41ec58 <wcrtomb@plt+0x1a118>
  41b74c:	mov	w1, #0x1                   	// #1
  41b750:	mov	x24, x0
  41b754:	bl	41b620 <wcrtomb@plt+0x16ae0>
  41b758:	ldr	w27, [x20]
  41b75c:	mov	w25, w0
  41b760:	mov	x0, x24
  41b764:	bl	404700 <free@plt>
  41b768:	cbz	w25, 41b8ac <wcrtomb@plt+0x16d6c>
  41b76c:	add	x8, x22, x23
  41b770:	add	x23, x8, #0x1
  41b774:	mov	x0, x23
  41b778:	bl	403f40 <strlen@plt>
  41b77c:	mov	x22, x0
  41b780:	cbnz	x0, 41b740 <wcrtomb@plt+0x16c00>
  41b784:	mov	x0, x21
  41b788:	bl	404700 <free@plt>
  41b78c:	ldrb	w9, [x19]
  41b790:	cmp	w9, #0x2f
  41b794:	b.ne	41b86c <wcrtomb@plt+0x16d2c>  // b.any
  41b798:	mov	w8, #0x2                   	// #2
  41b79c:	mov	x9, x19
  41b7a0:	b	41b7c0 <wcrtomb@plt+0x16c80>
  41b7a4:	ldrb	w10, [x9, #2]
  41b7a8:	cmp	w10, #0x2e
  41b7ac:	cinc	x10, x8, eq  // eq = none
  41b7b0:	add	x9, x9, x10
  41b7b4:	ldrb	w10, [x9]
  41b7b8:	cmp	w10, #0x2f
  41b7bc:	b.ne	41b7e0 <wcrtomb@plt+0x16ca0>  // b.any
  41b7c0:	mov	x11, x9
  41b7c4:	ldrb	w10, [x11, #1]!
  41b7c8:	cmp	w10, #0x2e
  41b7cc:	b.eq	41b7a4 <wcrtomb@plt+0x16c64>  // b.none
  41b7d0:	cmp	w10, #0x2f
  41b7d4:	mov	x9, x11
  41b7d8:	b.eq	41b7c0 <wcrtomb@plt+0x16c80>  // b.none
  41b7dc:	cbz	w10, 41b8a0 <wcrtomb@plt+0x16d60>
  41b7e0:	ldr	w0, [x26, #1872]
  41b7e4:	mov	w2, #0x200                 	// #512
  41b7e8:	mov	x1, x19
  41b7ec:	bl	4040b0 <unlinkat@plt>
  41b7f0:	cbz	w0, 41b844 <wcrtomb@plt+0x16d04>
  41b7f4:	mov	w0, wzr
  41b7f8:	b	41b850 <wcrtomb@plt+0x16d10>
  41b7fc:	mov	x8, x19
  41b800:	and	w9, w9, #0xff
  41b804:	cmp	w9, #0x2e
  41b808:	b.ne	41b82c <wcrtomb@plt+0x16cec>  // b.any
  41b80c:	ldrb	w9, [x8, #1]
  41b810:	cmp	w9, #0x2f
  41b814:	b.ne	41b82c <wcrtomb@plt+0x16cec>  // b.any
  41b818:	add	x8, x8, #0x1
  41b81c:	ldrb	w9, [x8, #1]!
  41b820:	cmp	w9, #0x2f
  41b824:	b.eq	41b81c <wcrtomb@plt+0x16cdc>  // b.none
  41b828:	b	41b800 <wcrtomb@plt+0x16cc0>
  41b82c:	cbnz	w9, 41b6d0 <wcrtomb@plt+0x16b90>
  41b830:	str	wzr, [x20]
  41b834:	cmp	w21, #0x2
  41b838:	b.ne	41b714 <wcrtomb@plt+0x16bd4>  // b.any
  41b83c:	mov	w0, #0xffffffff            	// #-1
  41b840:	b	41b850 <wcrtomb@plt+0x16d10>
  41b844:	mov	x0, x19
  41b848:	bl	40f1d4 <wcrtomb@plt+0xa694>
  41b84c:	mov	w0, #0x1                   	// #1
  41b850:	ldp	x20, x19, [sp, #80]
  41b854:	ldp	x22, x21, [sp, #64]
  41b858:	ldp	x24, x23, [sp, #48]
  41b85c:	ldp	x26, x25, [sp, #32]
  41b860:	ldr	x27, [sp, #16]
  41b864:	ldp	x29, x30, [sp], #96
  41b868:	ret
  41b86c:	mov	x8, x19
  41b870:	and	w9, w9, #0xff
  41b874:	cmp	w9, #0x2e
  41b878:	b.ne	41b89c <wcrtomb@plt+0x16d5c>  // b.any
  41b87c:	ldrb	w9, [x8, #1]
  41b880:	cmp	w9, #0x2f
  41b884:	b.ne	41b89c <wcrtomb@plt+0x16d5c>  // b.any
  41b888:	add	x8, x8, #0x1
  41b88c:	ldrb	w9, [x8, #1]!
  41b890:	cmp	w9, #0x2f
  41b894:	b.eq	41b88c <wcrtomb@plt+0x16d4c>  // b.none
  41b898:	b	41b870 <wcrtomb@plt+0x16d30>
  41b89c:	cbnz	w9, 41b7e0 <wcrtomb@plt+0x16ca0>
  41b8a0:	mov	w0, wzr
  41b8a4:	str	wzr, [x20]
  41b8a8:	b	41b850 <wcrtomb@plt+0x16d10>
  41b8ac:	mov	x0, x21
  41b8b0:	bl	404700 <free@plt>
  41b8b4:	mov	w0, wzr
  41b8b8:	str	w27, [x20]
  41b8bc:	b	41b850 <wcrtomb@plt+0x16d10>
  41b8c0:	stp	x29, x30, [sp, #-48]!
  41b8c4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41b8c8:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  41b8cc:	ldr	w9, [x9, #3764]
  41b8d0:	stp	x20, x19, [sp, #32]
  41b8d4:	mov	x19, x0
  41b8d8:	ldr	w0, [x8, #1872]
  41b8dc:	str	x21, [sp, #16]
  41b8e0:	mov	w21, w1
  41b8e4:	orr	w2, w9, #0x4000
  41b8e8:	mov	x1, x19
  41b8ec:	mov	x29, sp
  41b8f0:	bl	4049f0 <openat@plt>
  41b8f4:	tbnz	w0, #31, 41b934 <wcrtomb@plt+0x16df4>
  41b8f8:	mov	w20, w0
  41b8fc:	bl	404570 <fdopendir@plt>
  41b900:	cbz	x0, 41b960 <wcrtomb@plt+0x16e20>
  41b904:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41b908:	ldr	w1, [x8, #3576]
  41b90c:	mov	x21, x0
  41b910:	bl	444f1c <argp_parse@@Base+0xd670>
  41b914:	mov	x20, x0
  41b918:	cbnz	x0, 41b924 <wcrtomb@plt+0x16de4>
  41b91c:	mov	x0, x19
  41b920:	bl	42ad90 <wcrtomb@plt+0x26250>
  41b924:	mov	x0, x21
  41b928:	bl	4044f0 <closedir@plt>
  41b92c:	cbnz	w0, 41b978 <wcrtomb@plt+0x16e38>
  41b930:	b	41b980 <wcrtomb@plt+0x16e40>
  41b934:	cbnz	w21, 41b950 <wcrtomb@plt+0x16e10>
  41b938:	bl	404a10 <__errno_location@plt>
  41b93c:	ldr	w8, [x0]
  41b940:	cmp	w8, #0x2
  41b944:	b.ne	41b950 <wcrtomb@plt+0x16e10>  // b.any
  41b948:	mov	x20, xzr
  41b94c:	b	41b980 <wcrtomb@plt+0x16e40>
  41b950:	mov	x0, x19
  41b954:	bl	42a86c <wcrtomb@plt+0x25d2c>
  41b958:	mov	x20, xzr
  41b95c:	b	41b980 <wcrtomb@plt+0x16e40>
  41b960:	mov	x0, x19
  41b964:	bl	42ad90 <wcrtomb@plt+0x26250>
  41b968:	mov	w0, w20
  41b96c:	bl	404520 <close@plt>
  41b970:	mov	x20, xzr
  41b974:	cbz	w0, 41b980 <wcrtomb@plt+0x16e40>
  41b978:	mov	x0, x19
  41b97c:	bl	42ad90 <wcrtomb@plt+0x26250>
  41b980:	mov	x0, x20
  41b984:	ldp	x20, x19, [sp, #32]
  41b988:	ldr	x21, [sp, #16]
  41b98c:	ldp	x29, x30, [sp], #48
  41b990:	ret
  41b994:	sub	sp, sp, #0xc0
  41b998:	stp	x22, x21, [sp, #160]
  41b99c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41b9a0:	ldr	x8, [x21, #1544]
  41b9a4:	stp	x20, x19, [sp, #176]
  41b9a8:	mov	x19, x0
  41b9ac:	stp	x29, x30, [sp, #128]
  41b9b0:	mov	x0, x8
  41b9b4:	str	x23, [sp, #144]
  41b9b8:	add	x29, sp, #0x80
  41b9bc:	mov	w20, w1
  41b9c0:	bl	404700 <free@plt>
  41b9c4:	cbz	x19, 41b9d4 <wcrtomb@plt+0x16e94>
  41b9c8:	mov	x0, x19
  41b9cc:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41b9d0:	b	41b9d8 <wcrtomb@plt+0x16e98>
  41b9d4:	mov	x0, xzr
  41b9d8:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41b9dc:	ldr	x8, [x22, #1552]
  41b9e0:	str	x0, [x21, #1544]
  41b9e4:	mov	x0, x8
  41b9e8:	bl	404700 <free@plt>
  41b9ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41b9f0:	ldrb	w8, [x8, #4072]
  41b9f4:	str	xzr, [x22, #1552]
  41b9f8:	cbnz	w8, 41ba2c <wcrtomb@plt+0x16eec>
  41b9fc:	tbz	w20, #0, 41ba2c <wcrtomb@plt+0x16eec>
  41ba00:	mov	w1, #0x3a                  	// #58
  41ba04:	mov	x0, x19
  41ba08:	bl	4047a0 <strchr@plt>
  41ba0c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ba10:	subs	x2, x0, x19
  41ba14:	str	x0, [x8, #4080]
  41ba18:	b.ls	41ba2c <wcrtomb@plt+0x16eec>  // b.plast
  41ba1c:	mov	w1, #0x2f                  	// #47
  41ba20:	mov	x0, x19
  41ba24:	bl	404890 <memchr@plt>
  41ba28:	cbz	x0, 41bbb0 <wcrtomb@plt+0x17070>
  41ba2c:	adrp	x23, 477000 <_obstack_memory_used@@Base+0x304b0>
  41ba30:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ba34:	ldr	w1, [x23, #1872]
  41ba38:	ldr	w4, [x8, #3616]
  41ba3c:	mov	x3, sp
  41ba40:	mov	w0, wzr
  41ba44:	mov	x2, x19
  41ba48:	bl	404b20 <__fxstatat@plt>
  41ba4c:	cbz	w0, 41ba70 <wcrtomb@plt+0x16f30>
  41ba50:	bl	404a10 <__errno_location@plt>
  41ba54:	ldr	w8, [x0]
  41ba58:	cmp	w8, #0x2
  41ba5c:	b.eq	41bbb0 <wcrtomb@plt+0x17070>  // b.none
  41ba60:	mov	x0, x19
  41ba64:	bl	42b158 <wcrtomb@plt+0x26618>
  41ba68:	mov	w19, wzr
  41ba6c:	b	41bbb4 <wcrtomb@plt+0x17074>
  41ba70:	ldr	w8, [sp, #16]
  41ba74:	and	w8, w8, #0xf000
  41ba78:	cmp	w8, #0x4, lsl #12
  41ba7c:	b.eq	41bbb0 <wcrtomb@plt+0x17070>  // b.none
  41ba80:	tbz	w20, #0, 41ba90 <wcrtomb@plt+0x16f50>
  41ba84:	orr	w8, w8, #0x4000
  41ba88:	cmp	w8, #0x6, lsl #12
  41ba8c:	b.eq	41bbb0 <wcrtomb@plt+0x17070>  // b.none
  41ba90:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ba94:	ldr	w0, [x23, #1872]
  41ba98:	ldr	w2, [x8, #3784]
  41ba9c:	mov	x1, x19
  41baa0:	bl	438f14 <argp_parse@@Base+0x1668>
  41baa4:	str	x0, [x22, #1552]
  41baa8:	cbz	x0, 41bbd0 <wcrtomb@plt+0x17090>
  41baac:	mov	x3, x0
  41bab0:	ldr	w0, [x23, #1872]
  41bab4:	ldr	x1, [x21, #1544]
  41bab8:	mov	w2, w0
  41babc:	bl	404750 <renameat@plt>
  41bac0:	cbz	w0, 41bb48 <wcrtomb@plt+0x17008>
  41bac4:	bl	404a10 <__errno_location@plt>
  41bac8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41bacc:	ldr	x8, [x8, #4064]
  41bad0:	ldr	w19, [x0]
  41bad4:	cbz	x8, 41badc <wcrtomb@plt+0x16f9c>
  41bad8:	blr	x8
  41badc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41bae0:	add	x1, x1, #0x699
  41bae4:	mov	w2, #0x5                   	// #5
  41bae8:	mov	x0, xzr
  41baec:	bl	404900 <dcgettext@plt>
  41baf0:	ldr	x8, [x21, #1544]
  41baf4:	mov	x20, x0
  41baf8:	mov	x0, x8
  41bafc:	bl	444778 <argp_parse@@Base+0xcecc>
  41bb00:	ldr	x1, [x22, #1552]
  41bb04:	mov	x21, x0
  41bb08:	mov	w0, #0x1                   	// #1
  41bb0c:	bl	444a58 <argp_parse@@Base+0xd1ac>
  41bb10:	mov	x4, x0
  41bb14:	mov	w0, wzr
  41bb18:	mov	w1, w19
  41bb1c:	mov	x2, x20
  41bb20:	mov	x3, x21
  41bb24:	bl	403fa0 <error@plt>
  41bb28:	ldr	x0, [x22, #1552]
  41bb2c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41bb30:	mov	w9, #0x2                   	// #2
  41bb34:	str	w9, [x8, #2416]
  41bb38:	bl	404700 <free@plt>
  41bb3c:	mov	w19, wzr
  41bb40:	str	xzr, [x22, #1552]
  41bb44:	b	41bbb4 <wcrtomb@plt+0x17074>
  41bb48:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41bb4c:	ldr	w8, [x8, #3700]
  41bb50:	cbz	w8, 41bbb0 <wcrtomb@plt+0x17070>
  41bb54:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41bb58:	ldr	x20, [x8, #2888]
  41bb5c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41bb60:	add	x1, x1, #0x686
  41bb64:	mov	w2, #0x5                   	// #5
  41bb68:	mov	x0, xzr
  41bb6c:	bl	404900 <dcgettext@plt>
  41bb70:	ldr	x1, [x21, #1544]
  41bb74:	mov	x21, x0
  41bb78:	mov	w0, wzr
  41bb7c:	bl	444a58 <argp_parse@@Base+0xd1ac>
  41bb80:	ldr	x1, [x22, #1552]
  41bb84:	mov	x22, x0
  41bb88:	mov	w0, #0x1                   	// #1
  41bb8c:	mov	w19, #0x1                   	// #1
  41bb90:	bl	444a58 <argp_parse@@Base+0xd1ac>
  41bb94:	mov	x4, x0
  41bb98:	mov	w1, #0x1                   	// #1
  41bb9c:	mov	x0, x20
  41bba0:	mov	x2, x21
  41bba4:	mov	x3, x22
  41bba8:	bl	404650 <__fprintf_chk@plt>
  41bbac:	b	41bbb4 <wcrtomb@plt+0x17074>
  41bbb0:	mov	w19, #0x1                   	// #1
  41bbb4:	mov	w0, w19
  41bbb8:	ldp	x20, x19, [sp, #176]
  41bbbc:	ldp	x22, x21, [sp, #160]
  41bbc0:	ldr	x23, [sp, #144]
  41bbc4:	ldp	x29, x30, [sp, #128]
  41bbc8:	add	sp, sp, #0xc0
  41bbcc:	ret
  41bbd0:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  41bbd4:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  41bbd8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41bbdc:	mov	x3, x1
  41bbe0:	ldr	w1, [x8, #1872]
  41bbe4:	ldr	w4, [x9, #3616]
  41bbe8:	mov	x2, x0
  41bbec:	mov	w0, wzr
  41bbf0:	b	404b20 <__fxstatat@plt>
  41bbf4:	stp	x29, x30, [sp, #-64]!
  41bbf8:	stp	x22, x21, [sp, #32]
  41bbfc:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41bc00:	ldr	x1, [x22, #1552]
  41bc04:	str	x23, [sp, #16]
  41bc08:	stp	x20, x19, [sp, #48]
  41bc0c:	mov	x29, sp
  41bc10:	cbz	x1, 41bd0c <wcrtomb@plt+0x171cc>
  41bc14:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  41bc18:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41bc1c:	ldr	w0, [x8, #1872]
  41bc20:	ldr	x3, [x23, #1544]
  41bc24:	mov	w2, w0
  41bc28:	bl	404750 <renameat@plt>
  41bc2c:	cbz	w0, 41bca0 <wcrtomb@plt+0x17160>
  41bc30:	bl	404a10 <__errno_location@plt>
  41bc34:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41bc38:	ldr	x8, [x8, #4064]
  41bc3c:	ldr	w19, [x0]
  41bc40:	cbz	x8, 41bc48 <wcrtomb@plt+0x17108>
  41bc44:	blr	x8
  41bc48:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41bc4c:	add	x1, x1, #0x699
  41bc50:	mov	w2, #0x5                   	// #5
  41bc54:	mov	x0, xzr
  41bc58:	bl	404900 <dcgettext@plt>
  41bc5c:	ldr	x8, [x22, #1552]
  41bc60:	mov	x20, x0
  41bc64:	mov	x0, x8
  41bc68:	bl	444778 <argp_parse@@Base+0xcecc>
  41bc6c:	ldr	x1, [x23, #1544]
  41bc70:	mov	x21, x0
  41bc74:	mov	w0, #0x1                   	// #1
  41bc78:	bl	444a58 <argp_parse@@Base+0xd1ac>
  41bc7c:	mov	x4, x0
  41bc80:	mov	w0, wzr
  41bc84:	mov	w1, w19
  41bc88:	mov	x2, x20
  41bc8c:	mov	x3, x21
  41bc90:	bl	403fa0 <error@plt>
  41bc94:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41bc98:	mov	w9, #0x2                   	// #2
  41bc9c:	str	w9, [x8, #2416]
  41bca0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41bca4:	ldr	w8, [x8, #3700]
  41bca8:	cbz	w8, 41bd00 <wcrtomb@plt+0x171c0>
  41bcac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41bcb0:	ldr	x19, [x8, #2888]
  41bcb4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41bcb8:	add	x1, x1, #0x6b1
  41bcbc:	mov	w2, #0x5                   	// #5
  41bcc0:	mov	x0, xzr
  41bcc4:	bl	404900 <dcgettext@plt>
  41bcc8:	ldr	x1, [x22, #1552]
  41bccc:	mov	x20, x0
  41bcd0:	mov	w0, wzr
  41bcd4:	bl	444a58 <argp_parse@@Base+0xd1ac>
  41bcd8:	ldr	x1, [x23, #1544]
  41bcdc:	mov	x21, x0
  41bce0:	mov	w0, #0x1                   	// #1
  41bce4:	bl	444a58 <argp_parse@@Base+0xd1ac>
  41bce8:	mov	x4, x0
  41bcec:	mov	w1, #0x1                   	// #1
  41bcf0:	mov	x0, x19
  41bcf4:	mov	x2, x20
  41bcf8:	mov	x3, x21
  41bcfc:	bl	404650 <__fprintf_chk@plt>
  41bd00:	ldr	x0, [x22, #1552]
  41bd04:	bl	404700 <free@plt>
  41bd08:	str	xzr, [x22, #1552]
  41bd0c:	ldp	x20, x19, [sp, #48]
  41bd10:	ldp	x22, x21, [sp, #32]
  41bd14:	ldr	x23, [sp, #16]
  41bd18:	ldp	x29, x30, [sp], #64
  41bd1c:	ret
  41bd20:	stp	x29, x30, [sp, #-48]!
  41bd24:	str	x21, [sp, #16]
  41bd28:	stp	x20, x19, [sp, #32]
  41bd2c:	mov	x29, sp
  41bd30:	mov	x19, x2
  41bd34:	mov	x20, x1
  41bd38:	mov	w21, w0
  41bd3c:	bl	444d88 <argp_parse@@Base+0xd4dc>
  41bd40:	cmn	x0, #0x1
  41bd44:	b.ne	41bdb0 <wcrtomb@plt+0x17270>  // b.any
  41bd48:	bl	404a10 <__errno_location@plt>
  41bd4c:	ldr	w8, [x0]
  41bd50:	cmp	w8, #0xb
  41bd54:	b.ne	41bdac <wcrtomb@plt+0x1726c>  // b.any
  41bd58:	mov	w1, #0x3                   	// #3
  41bd5c:	mov	w0, w21
  41bd60:	bl	446494 <argp_parse@@Base+0xebe8>
  41bd64:	mov	w8, #0x800                 	// #2048
  41bd68:	movk	w8, #0x8000, lsl #16
  41bd6c:	and	w8, w0, w8
  41bd70:	cmp	w8, #0x800
  41bd74:	b.ne	41bdac <wcrtomb@plt+0x1726c>  // b.any
  41bd78:	and	w2, w0, #0xfffff7ff
  41bd7c:	mov	w1, #0x4                   	// #4
  41bd80:	mov	w0, w21
  41bd84:	bl	446494 <argp_parse@@Base+0xebe8>
  41bd88:	cmn	w0, #0x1
  41bd8c:	b.eq	41bdac <wcrtomb@plt+0x1726c>  // b.none
  41bd90:	mov	w0, w21
  41bd94:	mov	x1, x20
  41bd98:	mov	x2, x19
  41bd9c:	ldp	x20, x19, [sp, #32]
  41bda0:	ldr	x21, [sp, #16]
  41bda4:	ldp	x29, x30, [sp], #48
  41bda8:	b	444d88 <argp_parse@@Base+0xd4dc>
  41bdac:	mov	x0, #0xffffffffffffffff    	// #-1
  41bdb0:	ldp	x20, x19, [sp, #32]
  41bdb4:	ldr	x21, [sp, #16]
  41bdb8:	ldp	x29, x30, [sp], #48
  41bdbc:	ret
  41bdc0:	stp	x29, x30, [sp, #-48]!
  41bdc4:	stp	x22, x21, [sp, #16]
  41bdc8:	stp	x20, x19, [sp, #32]
  41bdcc:	mov	x29, sp
  41bdd0:	mov	x21, x2
  41bdd4:	mov	x22, x1
  41bdd8:	mov	w20, w0
  41bddc:	bl	43b4b0 <argp_parse@@Base+0x3c04>
  41bde0:	mov	x19, x0
  41bde4:	cmp	x0, x21
  41bde8:	b.cs	41be48 <wcrtomb@plt+0x17308>  // b.hs, b.nlast
  41bdec:	bl	404a10 <__errno_location@plt>
  41bdf0:	ldr	w8, [x0]
  41bdf4:	cmp	w8, #0xb
  41bdf8:	b.ne	41be48 <wcrtomb@plt+0x17308>  // b.any
  41bdfc:	mov	w1, #0x3                   	// #3
  41be00:	mov	w0, w20
  41be04:	bl	446494 <argp_parse@@Base+0xebe8>
  41be08:	mov	w8, #0x800                 	// #2048
  41be0c:	movk	w8, #0x8000, lsl #16
  41be10:	and	w8, w0, w8
  41be14:	cmp	w8, #0x800
  41be18:	b.ne	41be48 <wcrtomb@plt+0x17308>  // b.any
  41be1c:	and	w2, w0, #0xfffff7ff
  41be20:	mov	w1, #0x4                   	// #4
  41be24:	mov	w0, w20
  41be28:	bl	446494 <argp_parse@@Base+0xebe8>
  41be2c:	cmn	w0, #0x1
  41be30:	b.eq	41be48 <wcrtomb@plt+0x17308>  // b.none
  41be34:	add	x1, x22, x19
  41be38:	sub	x2, x21, x19
  41be3c:	mov	w0, w20
  41be40:	bl	43b4b0 <argp_parse@@Base+0x3c04>
  41be44:	add	x19, x0, x19
  41be48:	mov	x0, x19
  41be4c:	ldp	x20, x19, [sp, #32]
  41be50:	ldp	x22, x21, [sp, #16]
  41be54:	ldp	x29, x30, [sp], #48
  41be58:	ret
  41be5c:	sub	sp, sp, #0x30
  41be60:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41be64:	ldr	w8, [x8, #3616]
  41be68:	stp	x3, x4, [sp]
  41be6c:	mov	w9, #0x3ffffffe            	// #1073741822
  41be70:	mov	x3, sp
  41be74:	mov	w4, w8
  41be78:	stp	x29, x30, [sp, #32]
  41be7c:	add	x29, sp, #0x20
  41be80:	str	x9, [sp, #24]
  41be84:	bl	439f28 <argp_parse@@Base+0x267c>
  41be88:	ldp	x29, x30, [sp, #32]
  41be8c:	add	sp, sp, #0x30
  41be90:	ret
  41be94:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41be98:	ldr	x8, [x8, #1560]
  41be9c:	sub	w9, w8, #0x1
  41bea0:	cmp	x8, #0x0
  41bea4:	csel	w0, wzr, w9, eq  // eq = none
  41bea8:	ret
  41beac:	stp	x29, x30, [sp, #-96]!
  41beb0:	stp	x26, x25, [sp, #32]
  41beb4:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41beb8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41bebc:	ldr	x8, [x25, #1560]
  41bec0:	ldr	x10, [x9, #1568]
  41bec4:	stp	x20, x19, [sp, #80]
  41bec8:	mov	x19, x0
  41becc:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41bed0:	cmp	x8, x10
  41bed4:	str	x27, [sp, #16]
  41bed8:	stp	x24, x23, [sp, #48]
  41bedc:	stp	x22, x21, [sp, #64]
  41bee0:	mov	x29, sp
  41bee4:	b.ne	41bf8c <wcrtomb@plt+0x1744c>  // b.any
  41bee8:	cbz	x8, 41bf18 <wcrtomb@plt+0x173d8>
  41beec:	ldr	x0, [x26, #1576]
  41bef0:	cbz	x0, 41bf28 <wcrtomb@plt+0x173e8>
  41bef4:	mov	x10, #0xe38e                	// #58254
  41bef8:	movk	x10, #0x8e38, lsl #16
  41befc:	movk	x10, #0x38e3, lsl #32
  41bf00:	movk	x10, #0x38e, lsl #48
  41bf04:	cmp	x8, x10
  41bf08:	b.cs	41c118 <wcrtomb@plt+0x175d8>  // b.hs, b.nlast
  41bf0c:	add	x8, x8, x8, lsr #1
  41bf10:	add	x8, x8, #0x1
  41bf14:	b	41bf3c <wcrtomb@plt+0x173fc>
  41bf18:	mov	w8, #0x2                   	// #2
  41bf1c:	str	x8, [x9, #1568]
  41bf20:	ldr	x0, [x26, #1576]
  41bf24:	cbnz	x0, 41bef4 <wcrtomb@plt+0x173b4>
  41bf28:	mov	x10, #0x5555555555555555    	// #6148914691236517205
  41bf2c:	movk	x10, #0x5556
  41bf30:	movk	x10, #0x555, lsl #48
  41bf34:	cmp	x8, x10
  41bf38:	b.cs	41c118 <wcrtomb@plt+0x175d8>  // b.hs, b.nlast
  41bf3c:	str	x8, [x9, #1568]
  41bf40:	add	x8, x8, x8, lsl #1
  41bf44:	lsl	x1, x8, #3
  41bf48:	bl	445a68 <argp_parse@@Base+0xe1bc>
  41bf4c:	ldr	x8, [x25, #1560]
  41bf50:	str	x0, [x26, #1576]
  41bf54:	cbnz	x8, 41bf8c <wcrtomb@plt+0x1744c>
  41bf58:	adrp	x8, 45f000 <_obstack_memory_used@@Base+0x184b0>
  41bf5c:	add	x8, x8, #0x50a
  41bf60:	str	x8, [x0]
  41bf64:	bl	445cfc <argp_parse@@Base+0xe450>
  41bf68:	ldr	x8, [x26, #1576]
  41bf6c:	ldr	x9, [x25, #1560]
  41bf70:	mov	w10, #0x18                  	// #24
  41bf74:	mov	w11, #0xffffff9c            	// #-100
  41bf78:	madd	x10, x9, x10, x8
  41bf7c:	add	x8, x9, #0x1
  41bf80:	str	x0, [x10, #8]
  41bf84:	str	w11, [x10, #16]
  41bf88:	str	x8, [x25, #1560]
  41bf8c:	ldrb	w9, [x19]
  41bf90:	cmp	w9, #0x2f
  41bf94:	b.eq	41c0c0 <wcrtomb@plt+0x17580>  // b.none
  41bf98:	cmp	w9, #0x2e
  41bf9c:	b.ne	41bfc8 <wcrtomb@plt+0x17488>  // b.any
  41bfa0:	ldrb	w9, [x19, #1]
  41bfa4:	cmp	w9, #0x2f
  41bfa8:	b.ne	41bfc4 <wcrtomb@plt+0x17484>  // b.any
  41bfac:	add	x19, x19, #0x1
  41bfb0:	ldrb	w9, [x19, #1]!
  41bfb4:	cmp	w9, #0x2f
  41bfb8:	b.eq	41bfb0 <wcrtomb@plt+0x17470>  // b.none
  41bfbc:	cmp	w9, #0x2e
  41bfc0:	b.eq	41bfa0 <wcrtomb@plt+0x17460>  // b.none
  41bfc4:	cbz	w9, 41c110 <wcrtomb@plt+0x175d0>
  41bfc8:	ldr	x9, [x26, #1576]
  41bfcc:	mov	w10, #0x18                  	// #24
  41bfd0:	madd	x8, x8, x10, x9
  41bfd4:	ldur	x24, [x8, #-16]
  41bfd8:	cbz	x24, 41c0d0 <wcrtomb@plt+0x17590>
  41bfdc:	mov	w0, #0x18                  	// #24
  41bfe0:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41bfe4:	mov	x20, x0
  41bfe8:	mov	x0, x24
  41bfec:	bl	403f40 <strlen@plt>
  41bff0:	add	x23, x0, #0x2
  41bff4:	mov	x22, x20
  41bff8:	mov	x0, x23
  41bffc:	str	x23, [x22, #8]!
  41c000:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41c004:	mov	x1, x24
  41c008:	mov	x21, x0
  41c00c:	str	x0, [x20]
  41c010:	bl	404840 <strcpy@plt>
  41c014:	bl	403f40 <strlen@plt>
  41c018:	add	x8, x0, x21
  41c01c:	ldurb	w8, [x8, #-1]
  41c020:	mov	x24, x0
  41c024:	str	x0, [x20, #16]
  41c028:	cmp	w8, #0x2f
  41c02c:	b.eq	41c040 <wcrtomb@plt+0x17500>  // b.none
  41c030:	mov	w8, #0x2f                  	// #47
  41c034:	strb	w8, [x21, x24]
  41c038:	add	x24, x24, #0x1
  41c03c:	str	x24, [x20, #16]
  41c040:	mov	x0, x19
  41c044:	bl	403f40 <strlen@plt>
  41c048:	add	x27, x0, #0x1
  41c04c:	add	x8, x27, x24
  41c050:	cmp	x8, x23
  41c054:	b.cc	41c07c <wcrtomb@plt+0x1753c>  // b.lo, b.ul, b.last
  41c058:	mov	x0, x21
  41c05c:	mov	x1, x22
  41c060:	bl	445b6c <argp_parse@@Base+0xe2c0>
  41c064:	ldp	x8, x24, [x20, #8]
  41c068:	mov	x21, x0
  41c06c:	str	x0, [x20]
  41c070:	add	x9, x24, x27
  41c074:	cmp	x9, x8
  41c078:	b.cs	41c058 <wcrtomb@plt+0x17518>  // b.hs, b.nlast
  41c07c:	add	x0, x21, x24
  41c080:	mov	x1, x19
  41c084:	bl	404840 <strcpy@plt>
  41c088:	mov	x0, x19
  41c08c:	bl	403f40 <strlen@plt>
  41c090:	ldr	x8, [x20, #16]
  41c094:	ldr	x21, [x20]
  41c098:	add	x8, x8, x0
  41c09c:	str	x8, [x20, #16]
  41c0a0:	add	x9, x8, x21
  41c0a4:	ldurb	w9, [x9, #-1]
  41c0a8:	cmp	w9, #0x2f
  41c0ac:	b.ne	41c0b4 <wcrtomb@plt+0x17574>  // b.any
  41c0b0:	strb	wzr, [x21, x8]
  41c0b4:	mov	x0, x20
  41c0b8:	bl	404700 <free@plt>
  41c0bc:	b	41c0d4 <wcrtomb@plt+0x17594>
  41c0c0:	mov	x0, x19
  41c0c4:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41c0c8:	mov	x21, x0
  41c0cc:	b	41c0d4 <wcrtomb@plt+0x17594>
  41c0d0:	mov	x21, xzr
  41c0d4:	ldr	x8, [x26, #1576]
  41c0d8:	ldr	x0, [x25, #1560]
  41c0dc:	mov	w9, #0x18                  	// #24
  41c0e0:	madd	x8, x0, x9, x8
  41c0e4:	add	x9, x0, #0x1
  41c0e8:	stp	x19, x21, [x8]
  41c0ec:	str	wzr, [x8, #16]
  41c0f0:	str	x9, [x25, #1560]
  41c0f4:	ldp	x20, x19, [sp, #80]
  41c0f8:	ldp	x22, x21, [sp, #64]
  41c0fc:	ldp	x24, x23, [sp, #48]
  41c100:	ldp	x26, x25, [sp, #32]
  41c104:	ldr	x27, [sp, #16]
  41c108:	ldp	x29, x30, [sp], #96
  41c10c:	ret
  41c110:	sub	x0, x8, #0x1
  41c114:	b	41c0f4 <wcrtomb@plt+0x175b4>
  41c118:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  41c11c:	stp	x29, x30, [sp, #-48]!
  41c120:	str	x21, [sp, #16]
  41c124:	mov	x21, x0
  41c128:	mov	w0, #0x18                  	// #24
  41c12c:	stp	x20, x19, [sp, #32]
  41c130:	mov	x29, sp
  41c134:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41c138:	mov	x19, x0
  41c13c:	mov	x0, x21
  41c140:	bl	403f40 <strlen@plt>
  41c144:	add	x0, x0, #0x2
  41c148:	str	x0, [x19, #8]
  41c14c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41c150:	mov	x1, x21
  41c154:	mov	x20, x0
  41c158:	str	x0, [x19]
  41c15c:	bl	404840 <strcpy@plt>
  41c160:	bl	403f40 <strlen@plt>
  41c164:	add	x8, x0, x20
  41c168:	ldurb	w8, [x8, #-1]
  41c16c:	str	x0, [x19, #16]
  41c170:	cmp	w8, #0x2f
  41c174:	b.eq	41c188 <wcrtomb@plt+0x17648>  // b.none
  41c178:	add	x8, x0, #0x1
  41c17c:	mov	w9, #0x2f                  	// #47
  41c180:	str	x8, [x19, #16]
  41c184:	strb	w9, [x20, x0]
  41c188:	mov	x0, x19
  41c18c:	ldp	x20, x19, [sp, #32]
  41c190:	ldr	x21, [sp, #16]
  41c194:	ldp	x29, x30, [sp], #48
  41c198:	ret
  41c19c:	stp	x29, x30, [sp, #-80]!
  41c1a0:	stp	x22, x21, [sp, #48]
  41c1a4:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c1a8:	ldr	w8, [x21, #3056]
  41c1ac:	str	x25, [sp, #16]
  41c1b0:	stp	x24, x23, [sp, #32]
  41c1b4:	stp	x20, x19, [sp, #64]
  41c1b8:	cmp	w8, w0
  41c1bc:	mov	x29, sp
  41c1c0:	b.eq	41c2f4 <wcrtomb@plt+0x177b4>  // b.none
  41c1c4:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c1c8:	ldr	x8, [x23, #1576]
  41c1cc:	mov	w9, #0x18                  	// #24
  41c1d0:	mov	w19, w0
  41c1d4:	adrp	x22, 477000 <_obstack_memory_used@@Base+0x304b0>
  41c1d8:	smaddl	x24, w0, w9, x8
  41c1dc:	ldr	w20, [x24, #16]!
  41c1e0:	cbnz	w20, 41c2b4 <wcrtomb@plt+0x17774>
  41c1e4:	sxtw	x9, w19
  41c1e8:	mov	w10, #0x18                  	// #24
  41c1ec:	madd	x25, x9, x10, x8
  41c1f0:	ldr	x1, [x25]
  41c1f4:	ldrb	w8, [x1]
  41c1f8:	cmp	w8, #0x2f
  41c1fc:	b.eq	41c20c <wcrtomb@plt+0x176cc>  // b.none
  41c200:	sub	w0, w19, #0x1
  41c204:	bl	41c19c <wcrtomb@plt+0x1765c>
  41c208:	ldr	x1, [x25]
  41c20c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c210:	ldr	w8, [x8, #3756]
  41c214:	ldr	w0, [x22, #1872]
  41c218:	and	w2, w8, #0xffff7fff
  41c21c:	bl	4049f0 <openat@plt>
  41c220:	tbnz	w0, #31, 41c30c <wcrtomb@plt+0x177cc>
  41c224:	str	w0, [x24]
  41c228:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c22c:	ldr	x9, [x8, #1584]
  41c230:	mov	w20, w0
  41c234:	cmp	x9, #0xf
  41c238:	b.hi	41c254 <wcrtomb@plt+0x17714>  // b.pmore
  41c23c:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c240:	add	x10, x9, #0x1
  41c244:	add	x11, x11, #0x638
  41c248:	str	x10, [x8, #1584]
  41c24c:	add	x8, x11, x9, lsl #2
  41c250:	b	41c2b0 <wcrtomb@plt+0x17770>
  41c254:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c258:	ldr	x24, [x23, #1576]
  41c25c:	ldrsw	x25, [x8, #1652]
  41c260:	mov	w8, #0x18                  	// #24
  41c264:	madd	x23, x25, x8, x24
  41c268:	ldr	w0, [x23, #16]!
  41c26c:	bl	404520 <close@plt>
  41c270:	cbz	w0, 41c2a4 <wcrtomb@plt+0x17764>
  41c274:	mov	w8, #0x18                  	// #24
  41c278:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c27c:	mul	x8, x25, x8
  41c280:	ldrb	w9, [x9, #4009]
  41c284:	ldr	x0, [x24, x8]
  41c288:	cbz	w9, 41c2a0 <wcrtomb@plt+0x17760>
  41c28c:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  41c290:	ldrb	w8, [x8, #3722]
  41c294:	tbz	w8, #7, 41c2a4 <wcrtomb@plt+0x17764>
  41c298:	bl	42a5c0 <wcrtomb@plt+0x25a80>
  41c29c:	b	41c2a4 <wcrtomb@plt+0x17764>
  41c2a0:	bl	42a53c <wcrtomb@plt+0x259fc>
  41c2a4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c2a8:	add	x8, x8, #0x674
  41c2ac:	str	wzr, [x23]
  41c2b0:	str	w19, [x8]
  41c2b4:	cmp	w20, #0x1
  41c2b8:	b.lt	41c2ec <wcrtomb@plt+0x177ac>  // b.tstop
  41c2bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c2c0:	ldr	w9, [x8, #1592]
  41c2c4:	cmp	w9, w19
  41c2c8:	b.eq	41c2e8 <wcrtomb@plt+0x177a8>  // b.none
  41c2cc:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c2d0:	add	x10, x10, #0x63c
  41c2d4:	ldr	w11, [x10]
  41c2d8:	str	w9, [x10], #4
  41c2dc:	cmp	w11, w19
  41c2e0:	mov	w9, w11
  41c2e4:	b.ne	41c2d4 <wcrtomb@plt+0x17794>  // b.any
  41c2e8:	str	w19, [x8, #1592]
  41c2ec:	str	w19, [x21, #3056]
  41c2f0:	str	w20, [x22, #1872]
  41c2f4:	ldp	x20, x19, [sp, #64]
  41c2f8:	ldp	x22, x21, [sp, #48]
  41c2fc:	ldp	x24, x23, [sp, #32]
  41c300:	ldr	x25, [sp, #16]
  41c304:	ldp	x29, x30, [sp], #80
  41c308:	ret
  41c30c:	ldr	x0, [x25]
  41c310:	bl	42a8f0 <wcrtomb@plt+0x25db0>
  41c314:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c318:	ldrb	w8, [x8, #4009]
  41c31c:	cbz	w8, 41c330 <wcrtomb@plt+0x177f0>
  41c320:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  41c324:	ldrb	w8, [x8, #3722]
  41c328:	tbnz	w8, #7, 41c334 <wcrtomb@plt+0x177f4>
  41c32c:	ret
  41c330:	b	42a53c <wcrtomb@plt+0x259fc>
  41c334:	b	42a5c0 <wcrtomb@plt+0x25a80>
  41c338:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c33c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c340:	ldrsw	x9, [x9, #3056]
  41c344:	ldr	x8, [x8, #1576]
  41c348:	mov	w10, #0x18                  	// #24
  41c34c:	mul	x9, x9, x10
  41c350:	ldr	x0, [x8, x9]
  41c354:	ret
  41c358:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c35c:	ldrb	w8, [x8, #4009]
  41c360:	cbz	w8, 41c374 <wcrtomb@plt+0x17834>
  41c364:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  41c368:	ldrb	w8, [x8, #3722]
  41c36c:	tbnz	w8, #7, 41c378 <wcrtomb@plt+0x17838>
  41c370:	ret
  41c374:	b	42a86c <wcrtomb@plt+0x25d2c>
  41c378:	b	42a908 <wcrtomb@plt+0x25dc8>
  41c37c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c380:	ldrb	w8, [x8, #4009]
  41c384:	cbz	w8, 41c398 <wcrtomb@plt+0x17858>
  41c388:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  41c38c:	ldrb	w8, [x8, #3722]
  41c390:	tbnz	w8, #7, 41c39c <wcrtomb@plt+0x1785c>
  41c394:	ret
  41c398:	b	42aa00 <wcrtomb@plt+0x25ec0>
  41c39c:	b	42aab8 <wcrtomb@plt+0x25f78>
  41c3a0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c3a4:	ldrb	w8, [x8, #4009]
  41c3a8:	cbz	w8, 41c3bc <wcrtomb@plt+0x1787c>
  41c3ac:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  41c3b0:	ldrb	w8, [x8, #3722]
  41c3b4:	tbnz	w8, #7, 41c3c0 <wcrtomb@plt+0x17880>
  41c3b8:	ret
  41c3bc:	b	42ac14 <wcrtomb@plt+0x260d4>
  41c3c0:	b	42ac98 <wcrtomb@plt+0x26158>
  41c3c4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c3c8:	ldrb	w8, [x8, #4009]
  41c3cc:	cbz	w8, 41c3e0 <wcrtomb@plt+0x178a0>
  41c3d0:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  41c3d4:	ldrb	w8, [x8, #3722]
  41c3d8:	tbnz	w8, #7, 41c3e4 <wcrtomb@plt+0x178a4>
  41c3dc:	ret
  41c3e0:	b	42ad90 <wcrtomb@plt+0x26250>
  41c3e4:	b	42ae14 <wcrtomb@plt+0x262d4>
  41c3e8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c3ec:	ldrb	w8, [x8, #4009]
  41c3f0:	cbz	w8, 41c404 <wcrtomb@plt+0x178c4>
  41c3f4:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  41c3f8:	ldrb	w8, [x8, #3722]
  41c3fc:	tbnz	w8, #7, 41c408 <wcrtomb@plt+0x178c8>
  41c400:	ret
  41c404:	b	42af0c <wcrtomb@plt+0x263cc>
  41c408:	b	42b01c <wcrtomb@plt+0x264dc>
  41c40c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c410:	ldrb	w8, [x8, #4009]
  41c414:	cbz	w8, 41c428 <wcrtomb@plt+0x178e8>
  41c418:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  41c41c:	ldrb	w8, [x8, #3722]
  41c420:	tbnz	w8, #7, 41c42c <wcrtomb@plt+0x178ec>
  41c424:	ret
  41c428:	b	42b158 <wcrtomb@plt+0x26618>
  41c42c:	b	42b1dc <wcrtomb@plt+0x2669c>
  41c430:	sub	sp, sp, #0x30
  41c434:	stp	x20, x19, [sp, #32]
  41c438:	mov	x19, x0
  41c43c:	stp	x29, x30, [sp, #16]
  41c440:	add	x29, sp, #0x10
  41c444:	tbnz	w1, #0, 41c4c4 <wcrtomb@plt+0x17984>
  41c448:	str	x2, [sp, #8]
  41c44c:	bl	404a10 <__errno_location@plt>
  41c450:	ldr	w8, [x0]
  41c454:	ldr	x2, [sp, #8]
  41c458:	cmp	w8, #0x2
  41c45c:	b.ne	41c4c4 <wcrtomb@plt+0x17984>  // b.any
  41c460:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  41c464:	ldrb	w8, [x8, #3720]
  41c468:	tbz	w8, #6, 41c4b0 <wcrtomb@plt+0x17970>
  41c46c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c470:	ldr	x8, [x8, #4064]
  41c474:	cbz	x8, 41c47c <wcrtomb@plt+0x1793c>
  41c478:	blr	x8
  41c47c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41c480:	add	x1, x1, #0x6c9
  41c484:	mov	w2, #0x5                   	// #5
  41c488:	mov	x0, xzr
  41c48c:	bl	404900 <dcgettext@plt>
  41c490:	mov	x20, x0
  41c494:	mov	x0, x19
  41c498:	bl	444778 <argp_parse@@Base+0xcecc>
  41c49c:	mov	x3, x0
  41c4a0:	mov	w0, wzr
  41c4a4:	mov	w1, wzr
  41c4a8:	mov	x2, x20
  41c4ac:	bl	403fa0 <error@plt>
  41c4b0:	ldp	x20, x19, [sp, #32]
  41c4b4:	ldp	x29, x30, [sp, #16]
  41c4b8:	mov	w0, #0x1                   	// #1
  41c4bc:	add	sp, sp, #0x30
  41c4c0:	b	424364 <wcrtomb@plt+0x1f824>
  41c4c4:	mov	x0, x19
  41c4c8:	ldp	x20, x19, [sp, #32]
  41c4cc:	ldp	x29, x30, [sp, #16]
  41c4d0:	add	sp, sp, #0x30
  41c4d4:	br	x2
  41c4d8:	stp	x29, x30, [sp, #-16]!
  41c4dc:	mov	x29, sp
  41c4e0:	bl	404110 <fork@plt>
  41c4e4:	cmn	w0, #0x1
  41c4e8:	b.eq	41c4f4 <wcrtomb@plt+0x179b4>  // b.none
  41c4ec:	ldp	x29, x30, [sp], #16
  41c4f0:	ret
  41c4f4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41c4f8:	add	x1, x1, #0x6f1
  41c4fc:	mov	w2, #0x5                   	// #5
  41c500:	mov	x0, xzr
  41c504:	bl	404900 <dcgettext@plt>
  41c508:	mov	x1, x0
  41c50c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41c510:	add	x0, x0, #0x6ec
  41c514:	bl	42a288 <wcrtomb@plt+0x25748>
  41c518:	stp	x29, x30, [sp, #-16]!
  41c51c:	mov	x29, sp
  41c520:	bl	404080 <pipe@plt>
  41c524:	tbnz	w0, #31, 41c530 <wcrtomb@plt+0x179f0>
  41c528:	ldp	x29, x30, [sp], #16
  41c52c:	ret
  41c530:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41c534:	add	x1, x1, #0x704
  41c538:	mov	w2, #0x5                   	// #5
  41c53c:	mov	x0, xzr
  41c540:	bl	404900 <dcgettext@plt>
  41c544:	mov	x1, x0
  41c548:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41c54c:	add	x0, x0, #0x6ff
  41c550:	bl	42a288 <wcrtomb@plt+0x25748>
  41c554:	stp	x29, x30, [sp, #-48]!
  41c558:	str	x21, [sp, #16]
  41c55c:	stp	x20, x19, [sp, #32]
  41c560:	mov	x29, sp
  41c564:	mov	x20, x1
  41c568:	mov	x19, x0
  41c56c:	bl	4044c0 <getpagesize@plt>
  41c570:	sxtw	x21, w0
  41c574:	adds	x0, x21, x20
  41c578:	b.cs	41c5a8 <wcrtomb@plt+0x17a68>  // b.hs, b.nlast
  41c57c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41c580:	add	x8, x0, x21
  41c584:	sub	x8, x8, #0x1
  41c588:	udiv	x8, x8, x21
  41c58c:	str	x0, [x19]
  41c590:	mul	x8, x8, x21
  41c594:	ldp	x20, x19, [sp, #32]
  41c598:	ldr	x21, [sp, #16]
  41c59c:	mov	x0, x8
  41c5a0:	ldp	x29, x30, [sp], #48
  41c5a4:	ret
  41c5a8:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  41c5ac:	stp	x29, x30, [sp, #-32]!
  41c5b0:	str	x19, [sp, #16]
  41c5b4:	mov	x19, x0
  41c5b8:	ldr	x0, [x0]
  41c5bc:	mov	x29, sp
  41c5c0:	bl	404700 <free@plt>
  41c5c4:	mov	x0, x19
  41c5c8:	ldr	x19, [sp, #16]
  41c5cc:	ldp	x29, x30, [sp], #32
  41c5d0:	b	404700 <free@plt>
  41c5d4:	stp	x29, x30, [sp, #-48]!
  41c5d8:	stp	x20, x19, [sp, #32]
  41c5dc:	mov	x19, x0
  41c5e0:	mov	x0, x1
  41c5e4:	stp	x22, x21, [sp, #16]
  41c5e8:	mov	x29, sp
  41c5ec:	mov	x20, x1
  41c5f0:	bl	403f40 <strlen@plt>
  41c5f4:	ldr	x8, [x19, #16]
  41c5f8:	mov	x21, x19
  41c5fc:	ldr	x9, [x21, #8]!
  41c600:	add	x22, x0, #0x1
  41c604:	ldr	x0, [x19]
  41c608:	add	x10, x22, x8
  41c60c:	cmp	x10, x9
  41c610:	b.cc	41c630 <wcrtomb@plt+0x17af0>  // b.lo, b.ul, b.last
  41c614:	mov	x1, x21
  41c618:	bl	445b6c <argp_parse@@Base+0xe2c0>
  41c61c:	ldp	x9, x8, [x19, #8]
  41c620:	str	x0, [x19]
  41c624:	add	x10, x22, x8
  41c628:	cmp	x10, x9
  41c62c:	b.cs	41c614 <wcrtomb@plt+0x17ad4>  // b.hs, b.nlast
  41c630:	add	x0, x0, x8
  41c634:	mov	x1, x20
  41c638:	bl	404840 <strcpy@plt>
  41c63c:	ldr	x0, [x19]
  41c640:	ldp	x20, x19, [sp, #32]
  41c644:	ldp	x22, x21, [sp, #16]
  41c648:	ldp	x29, x30, [sp], #48
  41c64c:	ret
  41c650:	stp	x29, x30, [sp, #-48]!
  41c654:	stp	x22, x21, [sp, #16]
  41c658:	stp	x20, x19, [sp, #32]
  41c65c:	mov	x19, x1
  41c660:	mov	w20, w0
  41c664:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c668:	mov	x29, sp
  41c66c:	cbz	w0, 41c688 <wcrtomb@plt+0x17b48>
  41c670:	ldr	w8, [x21, #1664]
  41c674:	cmp	w8, w20
  41c678:	b.ne	41c688 <wcrtomb@plt+0x17b48>  // b.any
  41c67c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  41c680:	add	x0, x0, #0x66
  41c684:	b	41c6cc <wcrtomb@plt+0x17b8c>
  41c688:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c68c:	ldr	x0, [x8, #1672]
  41c690:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c694:	cbz	x0, 41c6a4 <wcrtomb@plt+0x17b64>
  41c698:	ldr	w8, [x22, #1680]
  41c69c:	cmp	w8, w20
  41c6a0:	b.eq	41c6cc <wcrtomb@plt+0x17b8c>  // b.none
  41c6a4:	mov	w0, w20
  41c6a8:	bl	404670 <getpwuid@plt>
  41c6ac:	cbz	x0, 41c6e4 <wcrtomb@plt+0x17ba4>
  41c6b0:	str	w20, [x22, #1680]
  41c6b4:	ldr	x1, [x0]
  41c6b8:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c6bc:	add	x20, x20, #0x688
  41c6c0:	mov	x0, x20
  41c6c4:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  41c6c8:	ldr	x0, [x20]
  41c6cc:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41c6d0:	str	x0, [x19]
  41c6d4:	ldp	x20, x19, [sp, #32]
  41c6d8:	ldp	x22, x21, [sp, #16]
  41c6dc:	ldp	x29, x30, [sp], #48
  41c6e0:	ret
  41c6e4:	str	w20, [x21, #1664]
  41c6e8:	b	41c67c <wcrtomb@plt+0x17b3c>
  41c6ec:	stp	x29, x30, [sp, #-48]!
  41c6f0:	stp	x22, x21, [sp, #16]
  41c6f4:	stp	x20, x19, [sp, #32]
  41c6f8:	mov	x19, x1
  41c6fc:	mov	w20, w0
  41c700:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c704:	mov	x29, sp
  41c708:	cbz	w0, 41c724 <wcrtomb@plt+0x17be4>
  41c70c:	ldr	w8, [x21, #1684]
  41c710:	cmp	w8, w20
  41c714:	b.ne	41c724 <wcrtomb@plt+0x17be4>  // b.any
  41c718:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  41c71c:	add	x0, x0, #0x66
  41c720:	b	41c768 <wcrtomb@plt+0x17c28>
  41c724:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c728:	ldr	x0, [x8, #1688]
  41c72c:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c730:	cbz	x0, 41c740 <wcrtomb@plt+0x17c00>
  41c734:	ldr	w8, [x22, #1696]
  41c738:	cmp	w8, w20
  41c73c:	b.eq	41c768 <wcrtomb@plt+0x17c28>  // b.none
  41c740:	mov	w0, w20
  41c744:	bl	404a50 <getgrgid@plt>
  41c748:	cbz	x0, 41c780 <wcrtomb@plt+0x17c40>
  41c74c:	str	w20, [x22, #1696]
  41c750:	ldr	x1, [x0]
  41c754:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c758:	add	x20, x20, #0x698
  41c75c:	mov	x0, x20
  41c760:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  41c764:	ldr	x0, [x20]
  41c768:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41c76c:	str	x0, [x19]
  41c770:	ldp	x20, x19, [sp, #32]
  41c774:	ldp	x22, x21, [sp, #16]
  41c778:	ldp	x29, x30, [sp], #48
  41c77c:	ret
  41c780:	str	w20, [x21, #1684]
  41c784:	b	41c718 <wcrtomb@plt+0x17bd8>
  41c788:	stp	x29, x30, [sp, #-48]!
  41c78c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c790:	stp	x20, x19, [sp, #32]
  41c794:	mov	x19, x1
  41c798:	ldr	x1, [x8, #1704]
  41c79c:	mov	x20, x0
  41c7a0:	str	x21, [sp, #16]
  41c7a4:	mov	x29, sp
  41c7a8:	cbz	x1, 41c7b8 <wcrtomb@plt+0x17c78>
  41c7ac:	mov	x0, x20
  41c7b0:	bl	404660 <strcmp@plt>
  41c7b4:	cbz	w0, 41c82c <wcrtomb@plt+0x17cec>
  41c7b8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c7bc:	ldr	x1, [x8, #1672]
  41c7c0:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c7c4:	cbz	x1, 41c7e4 <wcrtomb@plt+0x17ca4>
  41c7c8:	ldrb	w8, [x20]
  41c7cc:	ldrb	w9, [x1]
  41c7d0:	cmp	w8, w9
  41c7d4:	b.ne	41c7e4 <wcrtomb@plt+0x17ca4>  // b.any
  41c7d8:	mov	x0, x20
  41c7dc:	bl	404660 <strcmp@plt>
  41c7e0:	cbz	w0, 41c808 <wcrtomb@plt+0x17cc8>
  41c7e4:	mov	x0, x20
  41c7e8:	bl	404390 <getpwnam@plt>
  41c7ec:	cbz	x0, 41c818 <wcrtomb@plt+0x17cd8>
  41c7f0:	ldr	w8, [x0, #16]
  41c7f4:	str	w8, [x21, #1680]
  41c7f8:	ldr	x1, [x0]
  41c7fc:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c800:	add	x0, x0, #0x688
  41c804:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  41c808:	ldr	w8, [x21, #1680]
  41c80c:	mov	w0, #0x1                   	// #1
  41c810:	str	w8, [x19]
  41c814:	b	41c82c <wcrtomb@plt+0x17cec>
  41c818:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c81c:	add	x0, x0, #0x6a8
  41c820:	mov	x1, x20
  41c824:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  41c828:	mov	w0, wzr
  41c82c:	ldp	x20, x19, [sp, #32]
  41c830:	ldr	x21, [sp, #16]
  41c834:	ldp	x29, x30, [sp], #48
  41c838:	ret
  41c83c:	stp	x29, x30, [sp, #-48]!
  41c840:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c844:	stp	x20, x19, [sp, #32]
  41c848:	mov	x19, x1
  41c84c:	ldr	x1, [x8, #1712]
  41c850:	mov	x20, x0
  41c854:	str	x21, [sp, #16]
  41c858:	mov	x29, sp
  41c85c:	cbz	x1, 41c86c <wcrtomb@plt+0x17d2c>
  41c860:	mov	x0, x20
  41c864:	bl	404660 <strcmp@plt>
  41c868:	cbz	w0, 41c8e0 <wcrtomb@plt+0x17da0>
  41c86c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c870:	ldr	x1, [x8, #1688]
  41c874:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c878:	cbz	x1, 41c898 <wcrtomb@plt+0x17d58>
  41c87c:	ldrb	w8, [x20]
  41c880:	ldrb	w9, [x1]
  41c884:	cmp	w8, w9
  41c888:	b.ne	41c898 <wcrtomb@plt+0x17d58>  // b.any
  41c88c:	mov	x0, x20
  41c890:	bl	404660 <strcmp@plt>
  41c894:	cbz	w0, 41c8bc <wcrtomb@plt+0x17d7c>
  41c898:	mov	x0, x20
  41c89c:	bl	404060 <getgrnam@plt>
  41c8a0:	cbz	x0, 41c8cc <wcrtomb@plt+0x17d8c>
  41c8a4:	ldr	w8, [x0, #16]
  41c8a8:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c8ac:	add	x0, x0, #0x698
  41c8b0:	mov	x1, x20
  41c8b4:	str	w8, [x21, #1696]
  41c8b8:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  41c8bc:	ldr	w8, [x21, #1696]
  41c8c0:	mov	w0, #0x1                   	// #1
  41c8c4:	str	w8, [x19]
  41c8c8:	b	41c8e0 <wcrtomb@plt+0x17da0>
  41c8cc:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c8d0:	add	x0, x0, #0x6b0
  41c8d4:	mov	x1, x20
  41c8d8:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  41c8dc:	mov	w0, wzr
  41c8e0:	ldp	x20, x19, [sp, #32]
  41c8e4:	ldr	x21, [sp, #16]
  41c8e8:	ldp	x29, x30, [sp], #48
  41c8ec:	ret
  41c8f0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c8f4:	ldr	x8, [x8, #3064]
  41c8f8:	cmp	x8, #0x0
  41c8fc:	cset	w0, ne  // ne = any
  41c900:	ret
  41c904:	stp	x29, x30, [sp, #-32]!
  41c908:	stp	x20, x19, [sp, #16]
  41c90c:	mov	x19, x0
  41c910:	mov	w0, #0x38                  	// #56
  41c914:	mov	x29, sp
  41c918:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41c91c:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c920:	ldr	x8, [x20, #1776]
  41c924:	cbnz	x8, 41c944 <wcrtomb@plt+0x17e04>
  41c928:	mov	w8, #0x3                   	// #3
  41c92c:	str	x0, [x20, #1776]
  41c930:	stp	xzr, xzr, [x0]
  41c934:	str	w8, [x0, #16]
  41c938:	mov	w0, #0x38                  	// #56
  41c93c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41c940:	ldr	x8, [x20, #1776]
  41c944:	ldr	x9, [x8, #8]
  41c948:	str	x9, [x0, #8]
  41c94c:	ldr	x9, [x8, #8]
  41c950:	cbz	x9, 41c95c <wcrtomb@plt+0x17e1c>
  41c954:	str	x0, [x9]
  41c958:	ldr	x8, [x20, #1776]
  41c95c:	str	x8, [x0]
  41c960:	str	x0, [x8, #8]
  41c964:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c968:	ldr	x9, [x8, #3064]
  41c96c:	str	x19, [x0, #24]
  41c970:	ldp	x20, x19, [sp, #16]
  41c974:	str	wzr, [x0, #16]
  41c978:	add	x9, x9, #0x1
  41c97c:	str	x9, [x8, #3064]
  41c980:	ldp	x29, x30, [sp], #32
  41c984:	ret
  41c988:	stp	x29, x30, [sp, #-16]!
  41c98c:	mov	w0, #0x66                  	// #102
  41c990:	mov	x29, sp
  41c994:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41c998:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c99c:	ldr	x9, [x8, #1776]
  41c9a0:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c9a4:	str	x0, [x10, #1720]
  41c9a8:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c9ac:	mov	w11, #0x64                  	// #100
  41c9b0:	str	x11, [x10, #1728]
  41c9b4:	cbz	x9, 41c9d0 <wcrtomb@plt+0x17e90>
  41c9b8:	ldr	x9, [x9, #8]
  41c9bc:	cbz	x9, 41c9d0 <wcrtomb@plt+0x17e90>
  41c9c0:	mov	x10, x9
  41c9c4:	ldr	x9, [x9, #8]
  41c9c8:	cbnz	x9, 41c9c0 <wcrtomb@plt+0x17e80>
  41c9cc:	str	x10, [x8, #1776]
  41c9d0:	ldp	x29, x30, [sp], #16
  41c9d4:	ret
  41c9d8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41c9dc:	ldr	x0, [x8, #1720]
  41c9e0:	b	404700 <free@plt>
  41c9e4:	stp	x29, x30, [sp, #-16]!
  41c9e8:	mov	x29, sp
  41c9ec:	bl	41ca00 <wcrtomb@plt+0x17ec0>
  41c9f0:	cbz	x0, 41c9f8 <wcrtomb@plt+0x17eb8>
  41c9f4:	ldr	x0, [x0, #24]
  41c9f8:	ldp	x29, x30, [sp], #16
  41c9fc:	ret
  41ca00:	sub	sp, sp, #0x180
  41ca04:	stp	x22, x21, [sp, #352]
  41ca08:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ca0c:	stp	x28, x27, [sp, #304]
  41ca10:	ldr	x27, [x22, #1776]
  41ca14:	stp	x26, x25, [sp, #320]
  41ca18:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ca1c:	stp	x29, x30, [sp, #288]
  41ca20:	stp	x24, x23, [sp, #336]
  41ca24:	stp	x20, x19, [sp, #368]
  41ca28:	add	x29, sp, #0x120
  41ca2c:	str	w0, [sp, #12]
  41ca30:	cbz	x27, 41d3e8 <wcrtomb@plt+0x188a8>
  41ca34:	adrp	x28, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41ca38:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ca3c:	add	x28, x28, #0x720
  41ca40:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ca44:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ca48:	add	x25, x25, #0x6c0
  41ca4c:	ldr	w8, [x27, #16]
  41ca50:	cmp	w8, #0x4
  41ca54:	b.hi	41d3b4 <wcrtomb@plt+0x18874>  // b.pmore
  41ca58:	adr	x9, 41ca68 <wcrtomb@plt+0x17f28>
  41ca5c:	ldrh	w10, [x28, x8, lsl #1]
  41ca60:	add	x9, x9, x10, lsl #2
  41ca64:	br	x9
  41ca68:	ldr	w8, [sp, #12]
  41ca6c:	cbz	w8, 41d5d8 <wcrtomb@plt+0x18a98>
  41ca70:	ldr	x0, [x27, #24]
  41ca74:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41ca78:	bl	41beac <wcrtomb@plt+0x1736c>
  41ca7c:	bl	41c19c <wcrtomb@plt+0x1765c>
  41ca80:	ldr	x24, [x22, #1776]
  41ca84:	ldr	x8, [x24]
  41ca88:	str	x8, [x22, #1776]
  41ca8c:	cbz	x8, 41ca94 <wcrtomb@plt+0x17f54>
  41ca90:	str	xzr, [x8, #8]
  41ca94:	ldr	w8, [x24, #16]
  41ca98:	cmp	w8, #0x4
  41ca9c:	b.eq	41cab0 <wcrtomb@plt+0x17f70>  // b.none
  41caa0:	cmp	w8, #0x3
  41caa4:	b.eq	41d3d8 <wcrtomb@plt+0x18898>  // b.none
  41caa8:	cmp	w8, #0x1
  41caac:	b.ne	41caec <wcrtomb@plt+0x17fac>  // b.any
  41cab0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cab4:	ldr	w8, [x8, #3916]
  41cab8:	cmp	w8, #0x8
  41cabc:	b.eq	41cac8 <wcrtomb@plt+0x17f88>  // b.none
  41cac0:	cmp	w8, #0x3
  41cac4:	b.ne	41d3b4 <wcrtomb@plt+0x18874>  // b.any
  41cac8:	str	xzr, [x24]
  41cacc:	ldr	x8, [x26, #3080]
  41cad0:	str	x8, [x24, #8]
  41cad4:	cbz	x8, 41cadc <wcrtomb@plt+0x17f9c>
  41cad8:	str	x24, [x8]
  41cadc:	str	x24, [x26, #3080]
  41cae0:	ldr	x27, [x22, #1776]
  41cae4:	cbnz	x27, 41ca4c <wcrtomb@plt+0x17f0c>
  41cae8:	b	41d3e8 <wcrtomb@plt+0x188a8>
  41caec:	ldr	x0, [x26, #3080]
  41caf0:	cbz	x0, 41d3d8 <wcrtomb@plt+0x18898>
  41caf4:	ldr	x8, [x0, #8]
  41caf8:	str	x8, [x26, #3080]
  41cafc:	bl	404700 <free@plt>
  41cb00:	b	41caec <wcrtomb@plt+0x17fac>
  41cb04:	ldr	w28, [x27, #24]
  41cb08:	sub	w8, w28, #0x58
  41cb0c:	cmp	w8, #0xc4
  41cb10:	b.hi	41d758 <wcrtomb@plt+0x18c18>  // b.pmore
  41cb14:	ldr	x24, [x27, #32]
  41cb18:	adrp	x11, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41cb1c:	add	x11, x11, #0x72a
  41cb20:	adr	x9, 41cb34 <wcrtomb@plt+0x17ff4>
  41cb24:	ldrh	w10, [x11, x8, lsl #1]
  41cb28:	add	x9, x9, x10, lsl #2
  41cb2c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cb30:	br	x9
  41cb34:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cb38:	ldr	w8, [x8, #1748]
  41cb3c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cb40:	ldr	w9, [x9, #1756]
  41cb44:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cb48:	ldr	w10, [x10, #3732]
  41cb4c:	ldr	x1, [x19, #3120]
  41cb50:	cmp	w8, #0x1
  41cb54:	cset	w8, ne  // ne = any
  41cb58:	orr	w8, w9, w8, lsl #28
  41cb5c:	adrp	x0, 439000 <argp_parse@@Base+0x1754>
  41cb60:	orr	w3, w8, w10
  41cb64:	add	x0, x0, #0x86c
  41cb68:	mov	w4, #0xa                   	// #10
  41cb6c:	mov	x2, x24
  41cb70:	bl	439d68 <argp_parse@@Base+0x24bc>
  41cb74:	cbz	w0, 41d34c <wcrtomb@plt+0x1880c>
  41cb78:	b	41d784 <wcrtomb@plt+0x18c44>
  41cb7c:	ldr	x8, [x27]
  41cb80:	str	x8, [x22, #1776]
  41cb84:	cbz	x8, 41cb8c <wcrtomb@plt+0x1804c>
  41cb88:	str	xzr, [x8, #8]
  41cb8c:	mov	x0, x27
  41cb90:	b	41d3dc <wcrtomb@plt+0x1889c>
  41cb94:	ldr	x24, [x27, #48]
  41cb98:	cbnz	x24, 41cdd0 <wcrtomb@plt+0x18290>
  41cb9c:	ldr	x24, [x27, #24]
  41cba0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  41cba4:	add	x1, x1, #0x85
  41cba8:	mov	x0, x24
  41cbac:	bl	404660 <strcmp@plt>
  41cbb0:	cbz	w0, 41cd94 <wcrtomb@plt+0x18254>
  41cbb4:	add	x2, sp, #0x30
  41cbb8:	mov	w0, wzr
  41cbbc:	mov	x1, x24
  41cbc0:	bl	404a40 <__xstat@plt>
  41cbc4:	cbnz	w0, 41d7c0 <wcrtomb@plt+0x18c80>
  41cbc8:	ldr	x8, [x22, #1776]
  41cbcc:	cbnz	x8, 41cbf4 <wcrtomb@plt+0x180b4>
  41cbd0:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41cbd4:	mov	w2, #0x5                   	// #5
  41cbd8:	mov	x0, xzr
  41cbdc:	add	x1, x1, #0x22b
  41cbe0:	bl	404900 <dcgettext@plt>
  41cbe4:	mov	x28, x0
  41cbe8:	b	41cc0c <wcrtomb@plt+0x180cc>
  41cbec:	ldr	x8, [x8]
  41cbf0:	cbz	x8, 41cbd0 <wcrtomb@plt+0x18090>
  41cbf4:	ldr	w9, [x8, #16]
  41cbf8:	cmp	w9, #0x2
  41cbfc:	b.ne	41cbec <wcrtomb@plt+0x180ac>  // b.any
  41cc00:	ldr	x9, [x8, #48]
  41cc04:	cbz	x9, 41cbec <wcrtomb@plt+0x180ac>
  41cc08:	ldr	x28, [x8, #24]
  41cc0c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cc10:	ldr	x19, [x8, #1848]
  41cc14:	cbz	x19, 41cd4c <wcrtomb@plt+0x1820c>
  41cc18:	ldp	x9, x8, [sp, #48]
  41cc1c:	b	41cc28 <wcrtomb@plt+0x180e8>
  41cc20:	ldr	x19, [x19]
  41cc24:	cbz	x19, 41cd4c <wcrtomb@plt+0x1820c>
  41cc28:	ldr	x10, [x19, #8]
  41cc2c:	cmp	x10, x8
  41cc30:	b.ne	41cc20 <wcrtomb@plt+0x180e0>  // b.any
  41cc34:	ldr	x10, [x19, #16]
  41cc38:	cmp	x10, x9
  41cc3c:	b.ne	41cc20 <wcrtomb@plt+0x180e0>  // b.any
  41cc40:	mov	w1, #0x3a                  	// #58
  41cc44:	mov	w2, #0x1                   	// #1
  41cc48:	mov	x0, xzr
  41cc4c:	bl	4433c4 <argp_parse@@Base+0xbb18>
  41cc50:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cc54:	ldr	x8, [x8, #4064]
  41cc58:	mov	w27, w0
  41cc5c:	cbz	x8, 41cc64 <wcrtomb@plt+0x18124>
  41cc60:	blr	x8
  41cc64:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41cc68:	mov	w2, #0x5                   	// #5
  41cc6c:	mov	x0, xzr
  41cc70:	add	x1, x1, #0x1f6
  41cc74:	bl	404900 <dcgettext@plt>
  41cc78:	mov	x21, x0
  41cc7c:	mov	w0, wzr
  41cc80:	mov	x1, x24
  41cc84:	bl	44438c <argp_parse@@Base+0xcae0>
  41cc88:	ldr	x5, [x19, #24]
  41cc8c:	mov	x3, x0
  41cc90:	mov	w0, wzr
  41cc94:	mov	w1, wzr
  41cc98:	mov	x2, x21
  41cc9c:	mov	x4, x28
  41cca0:	bl	403fa0 <error@plt>
  41cca4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cca8:	mov	w9, #0x2                   	// #2
  41ccac:	mov	w1, #0x3a                  	// #58
  41ccb0:	mov	x0, xzr
  41ccb4:	mov	w2, w27
  41ccb8:	str	w9, [x8, #2416]
  41ccbc:	bl	4433c4 <argp_parse@@Base+0xbb18>
  41ccc0:	ldr	x24, [x22, #1776]
  41ccc4:	ldr	x8, [x24]
  41ccc8:	str	x8, [x22, #1776]
  41cccc:	cbz	x8, 41ccd4 <wcrtomb@plt+0x18194>
  41ccd0:	str	xzr, [x8, #8]
  41ccd4:	ldr	w8, [x24, #16]
  41ccd8:	adrp	x28, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41ccdc:	add	x28, x28, #0x720
  41cce0:	cmp	w8, #0x4
  41cce4:	b.eq	41ccf8 <wcrtomb@plt+0x181b8>  // b.none
  41cce8:	cmp	w8, #0x3
  41ccec:	b.eq	41d3d8 <wcrtomb@plt+0x18898>  // b.none
  41ccf0:	cmp	w8, #0x1
  41ccf4:	b.ne	41cd34 <wcrtomb@plt+0x181f4>  // b.any
  41ccf8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ccfc:	ldr	w8, [x8, #3916]
  41cd00:	cmp	w8, #0x8
  41cd04:	b.eq	41cd10 <wcrtomb@plt+0x181d0>  // b.none
  41cd08:	cmp	w8, #0x3
  41cd0c:	b.ne	41d3b4 <wcrtomb@plt+0x18874>  // b.any
  41cd10:	str	xzr, [x24]
  41cd14:	ldr	x8, [x26, #3080]
  41cd18:	str	x8, [x24, #8]
  41cd1c:	cbz	x8, 41cd24 <wcrtomb@plt+0x181e4>
  41cd20:	str	x24, [x8]
  41cd24:	str	x24, [x26, #3080]
  41cd28:	ldr	x27, [x22, #1776]
  41cd2c:	cbnz	x27, 41ca4c <wcrtomb@plt+0x17f0c>
  41cd30:	b	41d3e8 <wcrtomb@plt+0x188a8>
  41cd34:	ldr	x0, [x26, #3080]
  41cd38:	cbz	x0, 41d3d8 <wcrtomb@plt+0x18898>
  41cd3c:	ldr	x8, [x0, #8]
  41cd40:	str	x8, [x26, #3080]
  41cd44:	bl	404700 <free@plt>
  41cd48:	b	41cd34 <wcrtomb@plt+0x181f4>
  41cd4c:	mov	w0, #0x20                  	// #32
  41cd50:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41cd54:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cd58:	ldr	q0, [sp, #48]
  41cd5c:	ldr	x8, [x9, #1848]
  41cd60:	str	x28, [x0, #24]
  41cd64:	str	x0, [x9, #1848]
  41cd68:	ext	v0.16b, v0.16b, v0.16b, #8
  41cd6c:	str	x8, [x0]
  41cd70:	stur	q0, [x0, #8]
  41cd74:	ldr	x0, [x27, #24]
  41cd78:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  41cd7c:	add	x1, x1, #0x40b
  41cd80:	bl	404220 <fopen@plt>
  41cd84:	mov	x24, x0
  41cd88:	str	x0, [x27, #48]
  41cd8c:	cbnz	x0, 41cdac <wcrtomb@plt+0x1826c>
  41cd90:	b	41d7c8 <wcrtomb@plt+0x18c88>
  41cd94:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41cd98:	add	x0, x0, #0x1c9
  41cd9c:	bl	422d40 <wcrtomb@plt+0x1e200>
  41cda0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cda4:	ldr	x24, [x8, #112]
  41cda8:	str	x24, [x27, #48]
  41cdac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cdb0:	ldrb	w8, [x8, #1840]
  41cdb4:	cmp	w8, #0x0
  41cdb8:	mov	w8, #0xa                   	// #10
  41cdbc:	csel	w8, wzr, w8, ne  // ne = any
  41cdc0:	str	w8, [x27, #40]
  41cdc4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cdc8:	ldrb	w8, [x8, #1841]
  41cdcc:	strb	w8, [x27, #44]
  41cdd0:	ldr	x8, [x27, #32]
  41cdd4:	ldr	w19, [x27, #40]
  41cdd8:	add	x8, x8, #0x1
  41cddc:	str	x8, [x27, #32]
  41cde0:	ldp	x8, x9, [x24, #8]
  41cde4:	cmp	x8, x9
  41cde8:	b.cs	41ce8c <wcrtomb@plt+0x1834c>  // b.hs, b.nlast
  41cdec:	add	x9, x8, #0x1
  41cdf0:	str	x9, [x24, #8]
  41cdf4:	ldrb	w28, [x8]
  41cdf8:	cmn	w28, #0x1
  41cdfc:	mov	x21, xzr
  41ce00:	cset	w8, ne  // ne = any
  41ce04:	b.eq	41ce7c <wcrtomb@plt+0x1833c>  // b.none
  41ce08:	cmp	w28, w19
  41ce0c:	b.eq	41ce7c <wcrtomb@plt+0x1833c>  // b.none
  41ce10:	mov	x21, xzr
  41ce14:	ldr	x8, [x20, #1728]
  41ce18:	ldr	x0, [x23, #1720]
  41ce1c:	cmp	x21, x8
  41ce20:	b.ne	41ce30 <wcrtomb@plt+0x182f0>  // b.any
  41ce24:	mov	x1, x25
  41ce28:	bl	445b6c <argp_parse@@Base+0xe2c0>
  41ce2c:	str	x0, [x23, #1720]
  41ce30:	strb	w28, [x0, x21]
  41ce34:	cbz	w28, 41ce9c <wcrtomb@plt+0x1835c>
  41ce38:	ldp	x8, x9, [x24, #8]
  41ce3c:	add	x21, x21, #0x1
  41ce40:	cmp	x8, x9
  41ce44:	b.cs	41ce6c <wcrtomb@plt+0x1832c>  // b.hs, b.nlast
  41ce48:	add	x9, x8, #0x1
  41ce4c:	str	x9, [x24, #8]
  41ce50:	ldrb	w28, [x8]
  41ce54:	cmn	w28, #0x1
  41ce58:	cset	w8, ne  // ne = any
  41ce5c:	b.eq	41ce7c <wcrtomb@plt+0x1833c>  // b.none
  41ce60:	cmp	w28, w19
  41ce64:	b.ne	41ce14 <wcrtomb@plt+0x182d4>  // b.any
  41ce68:	b	41ce7c <wcrtomb@plt+0x1833c>
  41ce6c:	mov	x0, x24
  41ce70:	bl	404ac0 <__uflow@plt>
  41ce74:	mov	w28, w0
  41ce78:	b	41ce54 <wcrtomb@plt+0x18314>
  41ce7c:	cbnz	x21, 41cff0 <wcrtomb@plt+0x184b0>
  41ce80:	tbz	w8, #0, 41cff0 <wcrtomb@plt+0x184b0>
  41ce84:	ldr	x24, [x27, #48]
  41ce88:	b	41cdd0 <wcrtomb@plt+0x18290>
  41ce8c:	mov	x0, x24
  41ce90:	bl	404ac0 <__uflow@plt>
  41ce94:	mov	w28, w0
  41ce98:	b	41cdf8 <wcrtomb@plt+0x182b8>
  41ce9c:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  41cea0:	ldrb	w8, [x8, #3721]
  41cea4:	tbz	w8, #1, 41ced8 <wcrtomb@plt+0x18398>
  41cea8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ceac:	ldr	x8, [x8, #4064]
  41ceb0:	cbz	x8, 41ceb8 <wcrtomb@plt+0x18378>
  41ceb4:	blr	x8
  41ceb8:	ldr	x0, [x27, #24]
  41cebc:	bl	444778 <argp_parse@@Base+0xcecc>
  41cec0:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41cec4:	mov	x3, x0
  41cec8:	mov	w0, wzr
  41cecc:	mov	w1, wzr
  41ced0:	add	x2, x2, #0x1cc
  41ced4:	bl	403fa0 <error@plt>
  41ced8:	str	wzr, [x27, #40]
  41cedc:	ldrb	w8, [x27, #44]
  41cee0:	cbnz	w8, 41d71c <wcrtomb@plt+0x18bdc>
  41cee4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cee8:	ldrb	w8, [x8, #3812]
  41ceec:	cbz	w8, 41cef8 <wcrtomb@plt+0x183b8>
  41cef0:	ldr	x0, [x23, #1720]
  41cef4:	bl	41aad0 <wcrtomb@plt+0x15f90>
  41cef8:	ldr	x19, [x23, #1720]
  41cefc:	adrp	x28, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41cf00:	add	x28, x28, #0x720
  41cf04:	ldrb	w21, [x19]
  41cf08:	cbz	w21, 41d720 <wcrtomb@plt+0x18be0>
  41cf0c:	bl	404690 <__ctype_b_loc@plt>
  41cf10:	ldr	x8, [x0]
  41cf14:	mov	x24, x19
  41cf18:	and	x9, x21, #0xff
  41cf1c:	ldrh	w9, [x8, x9, lsl #1]
  41cf20:	tbz	w9, #13, 41cf30 <wcrtomb@plt+0x183f0>
  41cf24:	ldrb	w21, [x24, #1]!
  41cf28:	cbnz	w21, 41cf18 <wcrtomb@plt+0x183d8>
  41cf2c:	b	41d720 <wcrtomb@plt+0x18be0>
  41cf30:	and	w8, w21, #0xff
  41cf34:	cmp	w8, #0x2d
  41cf38:	b.ne	41d720 <wcrtomb@plt+0x18be0>  // b.any
  41cf3c:	mov	w2, #0xe46                 	// #3654
  41cf40:	mov	w8, #0x1                   	// #1
  41cf44:	add	x1, sp, #0x30
  41cf48:	movk	w2, #0x200, lsl #16
  41cf4c:	mov	x0, x24
  41cf50:	str	x8, [sp, #64]
  41cf54:	bl	42d338 <wcrtomb@plt+0x287f8>
  41cf58:	cbnz	w0, 41d7d0 <wcrtomb@plt+0x18c90>
  41cf5c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41cf60:	ldr	x8, [x8, #2504]
  41cf64:	ldr	x9, [sp, #56]
  41cf68:	add	x2, sp, #0x10
  41cf6c:	str	x8, [x9]
  41cf70:	mov	w8, #0x2                   	// #2
  41cf74:	str	w8, [sp, #16]
  41cf78:	ldr	w8, [sp, #48]
  41cf7c:	ldr	w9, [sp, #64]
  41cf80:	ldur	q0, [x27, #24]
  41cf84:	ldr	x1, [sp, #56]
  41cf88:	add	w0, w9, w8
  41cf8c:	stur	q0, [sp, #24]
  41cf90:	bl	4230c8 <wcrtomb@plt+0x1e588>
  41cf94:	ldr	x9, [sp, #48]
  41cf98:	ldr	x10, [sp, #64]
  41cf9c:	cmn	x10, x9
  41cfa0:	b.eq	41cfc0 <wcrtomb@plt+0x18480>  // b.none
  41cfa4:	mov	x8, xzr
  41cfa8:	add	x9, x10, x9
  41cfac:	ldr	x10, [sp, #56]
  41cfb0:	str	xzr, [x10, x8, lsl #3]
  41cfb4:	add	x8, x8, #0x1
  41cfb8:	cmp	x9, x8
  41cfbc:	b.hi	41cfac <wcrtomb@plt+0x1846c>  // b.pmore
  41cfc0:	add	x0, sp, #0x30
  41cfc4:	bl	42d484 <wcrtomb@plt+0x28944>
  41cfc8:	ldr	x8, [x22, #1776]
  41cfcc:	cbz	x8, 41d3e8 <wcrtomb@plt+0x188a8>
  41cfd0:	ldr	x8, [x8, #8]
  41cfd4:	cbz	x8, 41d3b4 <wcrtomb@plt+0x18874>
  41cfd8:	mov	x27, x8
  41cfdc:	ldr	x8, [x8, #8]
  41cfe0:	cbnz	x8, 41cfd8 <wcrtomb@plt+0x18498>
  41cfe4:	str	x27, [x22, #1776]
  41cfe8:	cbnz	x27, 41ca4c <wcrtomb@plt+0x17f0c>
  41cfec:	b	41d3e8 <wcrtomb@plt+0x188a8>
  41cff0:	ldr	x8, [x20, #1728]
  41cff4:	ldr	x24, [x23, #1720]
  41cff8:	cmp	x21, x8
  41cffc:	b.ne	41d014 <wcrtomb@plt+0x184d4>  // b.any
  41d000:	mov	x0, x24
  41d004:	mov	x1, x25
  41d008:	bl	445b6c <argp_parse@@Base+0xe2c0>
  41d00c:	mov	x24, x0
  41d010:	str	x0, [x23, #1720]
  41d014:	mov	x0, x24
  41d018:	strb	wzr, [x24, x21]
  41d01c:	bl	403f40 <strlen@plt>
  41d020:	add	x8, x24, x0
  41d024:	sub	x8, x8, #0x1
  41d028:	cmp	x8, x24
  41d02c:	b.ls	41d048 <wcrtomb@plt+0x18508>  // b.plast
  41d030:	ldrb	w9, [x8]
  41d034:	cmp	w9, #0x2f
  41d038:	b.ne	41d048 <wcrtomb@plt+0x18508>  // b.any
  41d03c:	strb	wzr, [x8], #-1
  41d040:	cmp	x8, x24
  41d044:	b.hi	41d030 <wcrtomb@plt+0x184f0>  // b.pmore
  41d048:	cbnz	x21, 41cedc <wcrtomb@plt+0x1839c>
  41d04c:	cmn	w28, #0x1
  41d050:	b.ne	41cedc <wcrtomb@plt+0x1839c>  // b.any
  41d054:	ldr	x0, [x27, #24]
  41d058:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  41d05c:	add	x1, x1, #0x85
  41d060:	bl	404660 <strcmp@plt>
  41d064:	cbz	w0, 41d070 <wcrtomb@plt+0x18530>
  41d068:	ldr	x0, [x27, #48]
  41d06c:	bl	4041e0 <fclose@plt>
  41d070:	str	xzr, [x27, #48]
  41d074:	ldr	x24, [x22, #1776]
  41d078:	adrp	x28, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41d07c:	add	x28, x28, #0x720
  41d080:	ldr	x8, [x24]
  41d084:	str	x8, [x22, #1776]
  41d088:	cbz	x8, 41d090 <wcrtomb@plt+0x18550>
  41d08c:	str	xzr, [x8, #8]
  41d090:	ldr	w8, [x24, #16]
  41d094:	cmp	w8, #0x4
  41d098:	b.eq	41d0ac <wcrtomb@plt+0x1856c>  // b.none
  41d09c:	cmp	w8, #0x3
  41d0a0:	b.eq	41d3d8 <wcrtomb@plt+0x18898>  // b.none
  41d0a4:	cmp	w8, #0x1
  41d0a8:	b.ne	41d0e8 <wcrtomb@plt+0x185a8>  // b.any
  41d0ac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d0b0:	ldr	w8, [x8, #3916]
  41d0b4:	cmp	w8, #0x8
  41d0b8:	b.eq	41d0c4 <wcrtomb@plt+0x18584>  // b.none
  41d0bc:	cmp	w8, #0x3
  41d0c0:	b.ne	41d3b4 <wcrtomb@plt+0x18874>  // b.any
  41d0c4:	str	xzr, [x24]
  41d0c8:	ldr	x8, [x26, #3080]
  41d0cc:	str	x8, [x24, #8]
  41d0d0:	cbz	x8, 41d0d8 <wcrtomb@plt+0x18598>
  41d0d4:	str	x24, [x8]
  41d0d8:	str	x24, [x26, #3080]
  41d0dc:	ldr	x27, [x22, #1776]
  41d0e0:	cbnz	x27, 41ca4c <wcrtomb@plt+0x17f0c>
  41d0e4:	b	41d3e8 <wcrtomb@plt+0x188a8>
  41d0e8:	ldr	x0, [x26, #3080]
  41d0ec:	cbz	x0, 41d3d8 <wcrtomb@plt+0x18898>
  41d0f0:	ldr	x8, [x0, #8]
  41d0f4:	str	x8, [x26, #3080]
  41d0f8:	bl	404700 <free@plt>
  41d0fc:	b	41d0e8 <wcrtomb@plt+0x185a8>
  41d100:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d104:	ldr	w9, [x8, #1756]
  41d108:	and	w9, w9, #0xfffffffe
  41d10c:	str	w9, [x8, #1756]
  41d110:	b	41d34c <wcrtomb@plt+0x1880c>
  41d114:	mov	w1, #0x2                   	// #2
  41d118:	b	41d1bc <wcrtomb@plt+0x1867c>
  41d11c:	mov	w1, #0x1                   	// #1
  41d120:	b	41d1a4 <wcrtomb@plt+0x18664>
  41d124:	bl	40edb0 <wcrtomb@plt+0xa270>
  41d128:	b	41d34c <wcrtomb@plt+0x1880c>
  41d12c:	ldr	x0, [x19, #3120]
  41d130:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41d134:	add	x1, x1, #0x257
  41d138:	mov	w2, #0x10000000            	// #268435456
  41d13c:	bl	43986c <argp_parse@@Base+0x1fc0>
  41d140:	ldr	x0, [x19, #3120]
  41d144:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41d148:	add	x1, x1, #0x25b
  41d14c:	mov	w2, #0x10000000            	// #268435456
  41d150:	bl	43986c <argp_parse@@Base+0x1fc0>
  41d154:	ldr	x0, [x19, #3120]
  41d158:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41d15c:	add	x1, x1, #0x25e
  41d160:	mov	w2, #0x10000000            	// #268435456
  41d164:	b	41d198 <wcrtomb@plt+0x18658>
  41d168:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d16c:	ldr	w8, [x8, #1748]
  41d170:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d174:	ldr	w9, [x9, #1756]
  41d178:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d17c:	ldr	w10, [x10, #3732]
  41d180:	ldr	x0, [x19, #3120]
  41d184:	cmp	w8, #0x1
  41d188:	cset	w8, ne  // ne = any
  41d18c:	orr	w8, w9, w8, lsl #28
  41d190:	orr	w2, w8, w10
  41d194:	mov	x1, x24
  41d198:	bl	43986c <argp_parse@@Base+0x1fc0>
  41d19c:	b	41d34c <wcrtomb@plt+0x1880c>
  41d1a0:	mov	w1, #0x2                   	// #2
  41d1a4:	mov	x0, x24
  41d1a8:	bl	40e9e4 <wcrtomb@plt+0x9ea4>
  41d1ac:	b	41d34c <wcrtomb@plt+0x1880c>
  41d1b0:	mov	w1, #0x1                   	// #1
  41d1b4:	b	41d1bc <wcrtomb@plt+0x1867c>
  41d1b8:	mov	w1, #0x3                   	// #3
  41d1bc:	mov	x0, x24
  41d1c0:	mov	x2, xzr
  41d1c4:	bl	40a5b4 <wcrtomb@plt+0x5a74>
  41d1c8:	b	41d34c <wcrtomb@plt+0x1880c>
  41d1cc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d1d0:	ldr	w9, [x8, #1756]
  41d1d4:	orr	w9, w9, #0x10
  41d1d8:	str	w9, [x8, #1756]
  41d1dc:	b	41d34c <wcrtomb@plt+0x1880c>
  41d1e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d1e4:	ldr	w9, [x8, #1756]
  41d1e8:	orr	w9, w9, #0x40000000
  41d1ec:	str	w9, [x8, #1756]
  41d1f0:	b	41d34c <wcrtomb@plt+0x1880c>
  41d1f4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d1f8:	mov	w9, #0x8                   	// #8
  41d1fc:	str	w9, [x8, #3732]
  41d200:	b	41d34c <wcrtomb@plt+0x1880c>
  41d204:	mov	w8, #0x1                   	// #1
  41d208:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d20c:	strb	w8, [x9, #1840]
  41d210:	b	41d344 <wcrtomb@plt+0x18804>
  41d214:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d218:	strb	wzr, [x8, #1840]
  41d21c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d220:	strb	wzr, [x8, #1841]
  41d224:	b	41d34c <wcrtomb@plt+0x1880c>
  41d228:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41d22c:	adrp	x2, 40a000 <wcrtomb@plt+0x54c0>
  41d230:	add	x0, x0, #0xd95
  41d234:	add	x2, x2, #0x880
  41d238:	mov	w1, #0x1                   	// #1
  41d23c:	bl	40a5b4 <wcrtomb@plt+0x5a74>
  41d240:	b	41d34c <wcrtomb@plt+0x1880c>
  41d244:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41d248:	adrp	x2, 40a000 <wcrtomb@plt+0x54c0>
  41d24c:	add	x0, x0, #0xd95
  41d250:	add	x2, x2, #0x880
  41d254:	mov	w1, #0x2                   	// #2
  41d258:	bl	40a5b4 <wcrtomb@plt+0x5a74>
  41d25c:	b	41d34c <wcrtomb@plt+0x1880c>
  41d260:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d264:	str	wzr, [x8, #3732]
  41d268:	b	41d34c <wcrtomb@plt+0x1880c>
  41d26c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d270:	strb	wzr, [x8, #3812]
  41d274:	b	41d34c <wcrtomb@plt+0x1880c>
  41d278:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41d27c:	adrp	x2, 40a000 <wcrtomb@plt+0x54c0>
  41d280:	add	x0, x0, #0xd95
  41d284:	add	x2, x2, #0x880
  41d288:	mov	w1, #0x3                   	// #3
  41d28c:	bl	40a5b4 <wcrtomb@plt+0x5a74>
  41d290:	b	41d34c <wcrtomb@plt+0x1880c>
  41d294:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41d298:	add	x1, x1, #0x262
  41d29c:	mov	w21, #0x8                   	// #8
  41d2a0:	ldr	x0, [x19, #3120]
  41d2a4:	mov	w2, wzr
  41d2a8:	bl	43986c <argp_parse@@Base+0x1fc0>
  41d2ac:	adrp	x8, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41d2b0:	add	x8, x8, #0x8b8
  41d2b4:	ldr	x1, [x8, x21]
  41d2b8:	add	x21, x21, #0x8
  41d2bc:	cmp	x21, #0xb0
  41d2c0:	b.ne	41d2a0 <wcrtomb@plt+0x18760>  // b.any
  41d2c4:	b	41d34c <wcrtomb@plt+0x1880c>
  41d2c8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d2cc:	ldr	w9, [x8, #1756]
  41d2d0:	and	w9, w9, #0xffffffef
  41d2d4:	str	w9, [x8, #1756]
  41d2d8:	b	41d34c <wcrtomb@plt+0x1880c>
  41d2dc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d2e0:	ldr	w9, [x8, #1756]
  41d2e4:	orr	w9, w9, #0x1
  41d2e8:	str	w9, [x8, #1756]
  41d2ec:	b	41d34c <wcrtomb@plt+0x1880c>
  41d2f0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d2f4:	ldr	w9, [x8, #1756]
  41d2f8:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d2fc:	mov	w11, #0x1                   	// #1
  41d300:	strb	w11, [x10, #1752]
  41d304:	and	w9, w9, #0xbfffffff
  41d308:	str	w9, [x8, #1756]
  41d30c:	b	41d34c <wcrtomb@plt+0x1880c>
  41d310:	mov	w8, #0x1                   	// #1
  41d314:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d318:	strb	w8, [x9, #3812]
  41d31c:	b	41d34c <wcrtomb@plt+0x1880c>
  41d320:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d324:	mov	w9, #0x1                   	// #1
  41d328:	str	w9, [x8, #1748]
  41d32c:	b	41d34c <wcrtomb@plt+0x1880c>
  41d330:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d334:	mov	w9, #0x2                   	// #2
  41d338:	str	w9, [x8, #1748]
  41d33c:	b	41d34c <wcrtomb@plt+0x1880c>
  41d340:	mov	w8, #0x1                   	// #1
  41d344:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d348:	strb	w8, [x9, #1841]
  41d34c:	ldr	x24, [x22, #1776]
  41d350:	adrp	x28, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41d354:	add	x28, x28, #0x720
  41d358:	ldr	x8, [x24]
  41d35c:	str	x8, [x22, #1776]
  41d360:	cbz	x8, 41d368 <wcrtomb@plt+0x18828>
  41d364:	str	xzr, [x8, #8]
  41d368:	ldr	w8, [x24, #16]
  41d36c:	cmp	w8, #0x4
  41d370:	b.eq	41d384 <wcrtomb@plt+0x18844>  // b.none
  41d374:	cmp	w8, #0x3
  41d378:	b.eq	41d3d8 <wcrtomb@plt+0x18898>  // b.none
  41d37c:	cmp	w8, #0x1
  41d380:	b.ne	41d3c0 <wcrtomb@plt+0x18880>  // b.any
  41d384:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d388:	ldr	w8, [x8, #3916]
  41d38c:	cmp	w8, #0x8
  41d390:	b.eq	41d39c <wcrtomb@plt+0x1885c>  // b.none
  41d394:	cmp	w8, #0x3
  41d398:	b.ne	41d3b4 <wcrtomb@plt+0x18874>  // b.any
  41d39c:	str	xzr, [x24]
  41d3a0:	ldr	x8, [x26, #3080]
  41d3a4:	str	x8, [x24, #8]
  41d3a8:	cbz	x8, 41d3b0 <wcrtomb@plt+0x18870>
  41d3ac:	str	x24, [x8]
  41d3b0:	str	x24, [x26, #3080]
  41d3b4:	ldr	x27, [x22, #1776]
  41d3b8:	cbnz	x27, 41ca4c <wcrtomb@plt+0x17f0c>
  41d3bc:	b	41d3e8 <wcrtomb@plt+0x188a8>
  41d3c0:	ldr	x0, [x26, #3080]
  41d3c4:	cbz	x0, 41d3d8 <wcrtomb@plt+0x18898>
  41d3c8:	ldr	x8, [x0, #8]
  41d3cc:	str	x8, [x26, #3080]
  41d3d0:	bl	404700 <free@plt>
  41d3d4:	b	41d3c0 <wcrtomb@plt+0x18880>
  41d3d8:	mov	x0, x24
  41d3dc:	bl	404700 <free@plt>
  41d3e0:	ldr	x27, [x22, #1776]
  41d3e4:	cbnz	x27, 41ca4c <wcrtomb@plt+0x17f0c>
  41d3e8:	ldr	x8, [x26, #3080]
  41d3ec:	cbz	x8, 41d5d0 <wcrtomb@plt+0x18a90>
  41d3f0:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d3f4:	ldr	x8, [x24, #4064]
  41d3f8:	cbz	x8, 41d400 <wcrtomb@plt+0x188c0>
  41d3fc:	blr	x8
  41d400:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41d404:	add	x1, x1, #0x2e7
  41d408:	mov	w2, #0x5                   	// #5
  41d40c:	mov	x0, xzr
  41d410:	bl	404900 <dcgettext@plt>
  41d414:	mov	x2, x0
  41d418:	mov	w0, wzr
  41d41c:	mov	w1, wzr
  41d420:	bl	403fa0 <error@plt>
  41d424:	ldr	x0, [x26, #3080]
  41d428:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d42c:	mov	w8, #0x2                   	// #2
  41d430:	str	w8, [x25, #2416]
  41d434:	mov	x8, x0
  41d438:	mov	x27, x8
  41d43c:	ldr	x8, [x8, #8]
  41d440:	cbnz	x8, 41d438 <wcrtomb@plt+0x188f8>
  41d444:	cbz	x27, 41d5b4 <wcrtomb@plt+0x18a74>
  41d448:	adrp	x28, 477000 <_obstack_memory_used@@Base+0x304b0>
  41d44c:	adrp	x20, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41d450:	adrp	x21, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41d454:	add	x28, x28, #0x7f0
  41d458:	add	x20, x20, #0x3ca
  41d45c:	mov	w19, #0x2                   	// #2
  41d460:	add	x21, x21, #0x3b6
  41d464:	b	41d494 <wcrtomb@plt+0x18954>
  41d468:	ldr	x0, [x27, #32]
  41d46c:	bl	444a68 <argp_parse@@Base+0xd1bc>
  41d470:	mov	x4, x0
  41d474:	mov	w0, wzr
  41d478:	mov	w1, wzr
  41d47c:	mov	x2, x22
  41d480:	mov	x3, x23
  41d484:	bl	403fa0 <error@plt>
  41d488:	str	w19, [x25, #2416]
  41d48c:	ldr	x27, [x27]
  41d490:	cbz	x27, 41d5b0 <wcrtomb@plt+0x18a70>
  41d494:	ldr	w8, [x27, #16]
  41d498:	cmp	w8, #0x4
  41d49c:	b.eq	41d4ec <wcrtomb@plt+0x189ac>  // b.none
  41d4a0:	cmp	w8, #0x1
  41d4a4:	b.ne	41d48c <wcrtomb@plt+0x1894c>  // b.any
  41d4a8:	ldr	x8, [x24, #4064]
  41d4ac:	cbz	x8, 41d4b4 <wcrtomb@plt+0x18974>
  41d4b0:	blr	x8
  41d4b4:	mov	w2, #0x5                   	// #5
  41d4b8:	mov	x0, xzr
  41d4bc:	mov	x1, x21
  41d4c0:	bl	404900 <dcgettext@plt>
  41d4c4:	ldr	x8, [x27, #24]
  41d4c8:	mov	x22, x0
  41d4cc:	mov	x0, x8
  41d4d0:	bl	444a68 <argp_parse@@Base+0xd1bc>
  41d4d4:	mov	x3, x0
  41d4d8:	mov	w0, wzr
  41d4dc:	mov	w1, wzr
  41d4e0:	mov	x2, x22
  41d4e4:	bl	403fa0 <error@plt>
  41d4e8:	b	41d488 <wcrtomb@plt+0x18948>
  41d4ec:	ldr	x9, [x27, #32]
  41d4f0:	ldr	x8, [x24, #4064]
  41d4f4:	cbz	x9, 41d54c <wcrtomb@plt+0x18a0c>
  41d4f8:	cbz	x8, 41d500 <wcrtomb@plt+0x189c0>
  41d4fc:	blr	x8
  41d500:	mov	w2, #0x5                   	// #5
  41d504:	mov	x0, xzr
  41d508:	mov	x1, x20
  41d50c:	bl	404900 <dcgettext@plt>
  41d510:	ldr	w8, [x27, #24]
  41d514:	mov	x22, x0
  41d518:	mov	x9, x28
  41d51c:	b	41d52c <wcrtomb@plt+0x189ec>
  41d520:	cmp	w10, w8
  41d524:	b.eq	41d468 <wcrtomb@plt+0x18928>  // b.none
  41d528:	add	x9, x9, #0x30
  41d52c:	ldur	x23, [x9, #-32]
  41d530:	ldur	w10, [x9, #-24]
  41d534:	cbnz	x23, 41d520 <wcrtomb@plt+0x189e0>
  41d538:	cbnz	w10, 41d520 <wcrtomb@plt+0x189e0>
  41d53c:	cbz	w8, 41d468 <wcrtomb@plt+0x18928>
  41d540:	ldr	x10, [x9]
  41d544:	cbnz	x10, 41d528 <wcrtomb@plt+0x189e8>
  41d548:	b	41d468 <wcrtomb@plt+0x18928>
  41d54c:	cbz	x8, 41d554 <wcrtomb@plt+0x18a14>
  41d550:	blr	x8
  41d554:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41d558:	mov	w2, #0x5                   	// #5
  41d55c:	mov	x0, xzr
  41d560:	add	x1, x1, #0x3e0
  41d564:	bl	404900 <dcgettext@plt>
  41d568:	ldr	w8, [x27, #24]
  41d56c:	mov	x2, x0
  41d570:	mov	x9, x28
  41d574:	b	41d584 <wcrtomb@plt+0x18a44>
  41d578:	cmp	w10, w8
  41d57c:	b.eq	41d5a0 <wcrtomb@plt+0x18a60>  // b.none
  41d580:	add	x9, x9, #0x30
  41d584:	ldur	x3, [x9, #-32]
  41d588:	ldur	w10, [x9, #-24]
  41d58c:	cbnz	x3, 41d578 <wcrtomb@plt+0x18a38>
  41d590:	cbnz	w10, 41d578 <wcrtomb@plt+0x18a38>
  41d594:	cbz	w8, 41d5a0 <wcrtomb@plt+0x18a60>
  41d598:	ldr	x10, [x9]
  41d59c:	cbnz	x10, 41d580 <wcrtomb@plt+0x18a40>
  41d5a0:	mov	w0, wzr
  41d5a4:	mov	w1, wzr
  41d5a8:	bl	403fa0 <error@plt>
  41d5ac:	b	41d488 <wcrtomb@plt+0x18948>
  41d5b0:	ldr	x0, [x26, #3080]
  41d5b4:	cbz	x0, 41d730 <wcrtomb@plt+0x18bf0>
  41d5b8:	ldr	x8, [x0, #8]
  41d5bc:	str	x8, [x26, #3080]
  41d5c0:	bl	404700 <free@plt>
  41d5c4:	ldr	x0, [x26, #3080]
  41d5c8:	cbnz	x0, 41d5b8 <wcrtomb@plt+0x18a78>
  41d5cc:	b	41d730 <wcrtomb@plt+0x18bf0>
  41d5d0:	mov	x0, xzr
  41d5d4:	b	41d730 <wcrtomb@plt+0x18bf0>
  41d5d8:	ldr	x19, [x27, #24]
  41d5dc:	mov	x0, x19
  41d5e0:	bl	403f40 <strlen@plt>
  41d5e4:	ldr	x8, [x20, #1728]
  41d5e8:	cmp	x8, x0
  41d5ec:	b.cs	41d620 <wcrtomb@plt+0x18ae0>  // b.hs, b.nlast
  41d5f0:	lsl	x8, x8, #1
  41d5f4:	cbz	x8, 41d750 <wcrtomb@plt+0x18c10>
  41d5f8:	cmp	x8, x0
  41d5fc:	b.cc	41d5f0 <wcrtomb@plt+0x18ab0>  // b.lo, b.ul, b.last
  41d600:	ldr	x0, [x23, #1720]
  41d604:	str	x8, [x20, #1728]
  41d608:	bl	404700 <free@plt>
  41d60c:	ldr	x8, [x20, #1728]
  41d610:	add	x0, x8, #0x2
  41d614:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41d618:	str	x0, [x23, #1720]
  41d61c:	b	41d624 <wcrtomb@plt+0x18ae4>
  41d620:	ldr	x0, [x23, #1720]
  41d624:	mov	x1, x19
  41d628:	bl	404840 <strcpy@plt>
  41d62c:	ldr	x20, [x23, #1720]
  41d630:	mov	x0, x20
  41d634:	bl	403f40 <strlen@plt>
  41d638:	add	x8, x20, x0
  41d63c:	sub	x8, x8, #0x1
  41d640:	cmp	x8, x20
  41d644:	b.ls	41d660 <wcrtomb@plt+0x18b20>  // b.plast
  41d648:	ldrb	w9, [x8]
  41d64c:	cmp	w9, #0x2f
  41d650:	b.ne	41d660 <wcrtomb@plt+0x18b20>  // b.any
  41d654:	strb	wzr, [x8], #-1
  41d658:	cmp	x8, x20
  41d65c:	b.hi	41d648 <wcrtomb@plt+0x18b08>  // b.pmore
  41d660:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d664:	ldrb	w8, [x8, #3812]
  41d668:	cbz	w8, 41d678 <wcrtomb@plt+0x18b38>
  41d66c:	mov	x0, x20
  41d670:	bl	41aad0 <wcrtomb@plt+0x15f90>
  41d674:	ldr	x20, [x23, #1720]
  41d678:	ldr	w8, [x27, #16]
  41d67c:	ldr	x19, [x22, #1776]
  41d680:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d684:	add	x9, x9, #0x708
  41d688:	str	w8, [x9]
  41d68c:	str	x20, [x9, #8]
  41d690:	ldr	x8, [x19]
  41d694:	str	x8, [x22, #1776]
  41d698:	cbz	x8, 41d6a0 <wcrtomb@plt+0x18b60>
  41d69c:	str	xzr, [x8, #8]
  41d6a0:	ldr	w8, [x19, #16]
  41d6a4:	cmp	w8, #0x4
  41d6a8:	b.eq	41d6bc <wcrtomb@plt+0x18b7c>  // b.none
  41d6ac:	cmp	w8, #0x3
  41d6b0:	b.eq	41d708 <wcrtomb@plt+0x18bc8>  // b.none
  41d6b4:	cmp	w8, #0x1
  41d6b8:	b.ne	41d6f0 <wcrtomb@plt+0x18bb0>  // b.any
  41d6bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d6c0:	ldr	w8, [x8, #3916]
  41d6c4:	cmp	w8, #0x8
  41d6c8:	b.eq	41d6d4 <wcrtomb@plt+0x18b94>  // b.none
  41d6cc:	cmp	w8, #0x3
  41d6d0:	b.ne	41d710 <wcrtomb@plt+0x18bd0>  // b.any
  41d6d4:	str	xzr, [x19]
  41d6d8:	ldr	x8, [x26, #3080]
  41d6dc:	str	x8, [x19, #8]
  41d6e0:	cbz	x8, 41d6e8 <wcrtomb@plt+0x18ba8>
  41d6e4:	str	x19, [x8]
  41d6e8:	str	x19, [x26, #3080]
  41d6ec:	b	41d710 <wcrtomb@plt+0x18bd0>
  41d6f0:	ldr	x0, [x26, #3080]
  41d6f4:	cbz	x0, 41d708 <wcrtomb@plt+0x18bc8>
  41d6f8:	ldr	x8, [x0, #8]
  41d6fc:	str	x8, [x26, #3080]
  41d700:	bl	404700 <free@plt>
  41d704:	b	41d6f0 <wcrtomb@plt+0x18bb0>
  41d708:	mov	x0, x19
  41d70c:	bl	404700 <free@plt>
  41d710:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d714:	add	x0, x0, #0x6f8
  41d718:	b	41d730 <wcrtomb@plt+0x18bf0>
  41d71c:	ldr	x19, [x23, #1720]
  41d720:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d724:	add	x0, x0, #0x6f8
  41d728:	str	wzr, [x0, #16]
  41d72c:	str	x19, [x0, #24]
  41d730:	ldp	x20, x19, [sp, #368]
  41d734:	ldp	x22, x21, [sp, #352]
  41d738:	ldp	x24, x23, [sp, #336]
  41d73c:	ldp	x26, x25, [sp, #320]
  41d740:	ldp	x28, x27, [sp, #304]
  41d744:	ldp	x29, x30, [sp, #288]
  41d748:	add	sp, sp, #0x180
  41d74c:	ret
  41d750:	str	xzr, [x20, #1728]
  41d754:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  41d758:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d75c:	ldr	x8, [x8, #4064]
  41d760:	cbz	x8, 41d768 <wcrtomb@plt+0x18c28>
  41d764:	blr	x8
  41d768:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41d76c:	add	x2, x2, #0x238
  41d770:	mov	w0, wzr
  41d774:	mov	w1, wzr
  41d778:	mov	w3, w28
  41d77c:	bl	403fa0 <error@plt>
  41d780:	bl	40e96c <wcrtomb@plt+0x9e2c>
  41d784:	bl	404a10 <__errno_location@plt>
  41d788:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d78c:	ldr	x8, [x8, #4064]
  41d790:	ldr	w19, [x0]
  41d794:	cbz	x8, 41d79c <wcrtomb@plt+0x18c5c>
  41d798:	blr	x8
  41d79c:	mov	x0, x24
  41d7a0:	bl	444778 <argp_parse@@Base+0xcecc>
  41d7a4:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  41d7a8:	mov	x3, x0
  41d7ac:	add	x2, x2, #0x7a4
  41d7b0:	mov	w0, wzr
  41d7b4:	mov	w1, w19
  41d7b8:	bl	403fa0 <error@plt>
  41d7bc:	bl	40e96c <wcrtomb@plt+0x9e2c>
  41d7c0:	mov	x0, x24
  41d7c4:	bl	42b140 <wcrtomb@plt+0x26600>
  41d7c8:	ldr	x0, [x27, #24]
  41d7cc:	bl	42a8f0 <wcrtomb@plt+0x25db0>
  41d7d0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d7d4:	ldr	x8, [x8, #4064]
  41d7d8:	cbz	x8, 41d7e0 <wcrtomb@plt+0x18ca0>
  41d7dc:	blr	x8
  41d7e0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  41d7e4:	add	x1, x1, #0xa4d
  41d7e8:	mov	w2, #0x5                   	// #5
  41d7ec:	mov	x0, xzr
  41d7f0:	bl	404900 <dcgettext@plt>
  41d7f4:	mov	x19, x0
  41d7f8:	add	x0, sp, #0x30
  41d7fc:	bl	42d5dc <wcrtomb@plt+0x28a9c>
  41d800:	mov	x4, x0
  41d804:	mov	w0, wzr
  41d808:	mov	w1, wzr
  41d80c:	mov	x2, x19
  41d810:	mov	x3, x24
  41d814:	bl	403fa0 <error@plt>
  41d818:	bl	40e96c <wcrtomb@plt+0x9e2c>
  41d81c:	stp	x29, x30, [sp, #-96]!
  41d820:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d824:	stp	x20, x19, [sp, #80]
  41d828:	ldrb	w19, [x8, #3696]
  41d82c:	mov	w0, wzr
  41d830:	stp	x28, x27, [sp, #16]
  41d834:	stp	x26, x25, [sp, #32]
  41d838:	stp	x24, x23, [sp, #48]
  41d83c:	stp	x22, x21, [sp, #64]
  41d840:	mov	x29, sp
  41d844:	bl	41ca00 <wcrtomb@plt+0x17ec0>
  41d848:	mov	x20, x0
  41d84c:	cbz	w19, 41d930 <wcrtomb@plt+0x18df0>
  41d850:	cbz	x20, 41d884 <wcrtomb@plt+0x18d44>
  41d854:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d858:	ldr	w8, [x20, #16]
  41d85c:	cmp	w8, #0x1
  41d860:	b.ne	41dad4 <wcrtomb@plt+0x18f94>  // b.any
  41d864:	ldr	x0, [x20, #24]
  41d868:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41d86c:	bl	41beac <wcrtomb@plt+0x1736c>
  41d870:	str	w0, [x21, #1744]
  41d874:	mov	w0, wzr
  41d878:	bl	41ca00 <wcrtomb@plt+0x17ec0>
  41d87c:	mov	x20, x0
  41d880:	cbnz	x0, 41d858 <wcrtomb@plt+0x18d18>
  41d884:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d888:	ldr	w20, [x8, #1744]
  41d88c:	cbz	w20, 41db9c <wcrtomb@plt+0x1905c>
  41d890:	mov	w0, #0x60                  	// #96
  41d894:	bl	445be0 <argp_parse@@Base+0xe334>
  41d898:	mov	x19, x0
  41d89c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  41d8a0:	add	x0, x0, #0x66
  41d8a4:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41d8a8:	str	x0, [x19, #16]
  41d8ac:	bl	403f40 <strlen@plt>
  41d8b0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d8b4:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d8b8:	ldr	w9, [x9, #1748]
  41d8bc:	ldrb	w10, [x10, #1752]
  41d8c0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d8c4:	adrp	x12, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d8c8:	cmp	w9, #0x2
  41d8cc:	cset	w9, eq  // eq = none
  41d8d0:	cmp	w10, #0x0
  41d8d4:	ldr	x10, [x8, #1760]
  41d8d8:	mov	w11, #0x40000000            	// #1073741824
  41d8dc:	adrp	x13, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d8e0:	ldr	w12, [x12, #1756]
  41d8e4:	csel	w11, wzr, w11, ne  // ne = any
  41d8e8:	ldr	w13, [x13, #3732]
  41d8ec:	bfi	w11, w9, #28, #1
  41d8f0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d8f4:	add	x9, x9, #0x6e8
  41d8f8:	cmp	x10, #0x0
  41d8fc:	csel	x9, x9, x10, eq  // eq = none
  41d900:	stp	xzr, x10, [x19]
  41d904:	orr	w10, w11, w12
  41d908:	orr	w10, w10, w13
  41d90c:	str	x0, [x19, #24]
  41d910:	str	w20, [x19, #40]
  41d914:	strb	wzr, [x19, #36]
  41d918:	stp	xzr, xzr, [x19, #56]
  41d91c:	str	xzr, [x19, #48]
  41d920:	str	w10, [x19, #32]
  41d924:	str	x19, [x9]
  41d928:	str	x19, [x8, #1760]
  41d92c:	b	41db9c <wcrtomb@plt+0x1905c>
  41d930:	cbz	x20, 41db9c <wcrtomb@plt+0x1905c>
  41d934:	adrp	x28, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  41d938:	mov	w21, wzr
  41d93c:	add	x28, x28, #0x66
  41d940:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d944:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d948:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d94c:	mov	w23, #0x40000000            	// #1073741824
  41d950:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d954:	mov	w24, #0x1                   	// #1
  41d958:	ldr	w8, [x20, #16]
  41d95c:	ldr	x20, [x20, #24]
  41d960:	cmp	w8, #0x1
  41d964:	b.ne	41d998 <wcrtomb@plt+0x18e58>  // b.any
  41d968:	mov	x0, x20
  41d96c:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41d970:	bl	41beac <wcrtomb@plt+0x1736c>
  41d974:	mov	w19, w0
  41d978:	mov	w0, wzr
  41d97c:	bl	41ca00 <wcrtomb@plt+0x17ec0>
  41d980:	cbz	x0, 41da3c <wcrtomb@plt+0x18efc>
  41d984:	ldr	w8, [x0, #16]
  41d988:	ldr	x20, [x0, #24]
  41d98c:	cmp	w8, #0x1
  41d990:	b.eq	41d968 <wcrtomb@plt+0x18e28>  // b.none
  41d994:	b	41d99c <wcrtomb@plt+0x18e5c>
  41d998:	mov	w19, w21
  41d99c:	mov	w0, #0x60                  	// #96
  41d9a0:	bl	445be0 <argp_parse@@Base+0xe334>
  41d9a4:	cmp	x20, #0x0
  41d9a8:	mov	x21, x0
  41d9ac:	csel	x0, x28, x20, eq  // eq = none
  41d9b0:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41d9b4:	str	x0, [x21, #16]
  41d9b8:	bl	403f40 <strlen@plt>
  41d9bc:	ldr	w8, [x27, #1748]
  41d9c0:	ldrb	w9, [x26, #1752]
  41d9c4:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d9c8:	ldr	w10, [x10, #1756]
  41d9cc:	cmp	w8, #0x2
  41d9d0:	cset	w8, eq  // eq = none
  41d9d4:	cmp	w9, #0x0
  41d9d8:	csel	w9, wzr, w23, ne  // ne = any
  41d9dc:	bfi	w9, w8, #28, #1
  41d9e0:	ldr	x8, [x22, #1760]
  41d9e4:	orr	w9, w9, w10
  41d9e8:	ldr	w10, [x25, #3732]
  41d9ec:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41d9f0:	cmp	x8, #0x0
  41d9f4:	add	x11, x11, #0x6e8
  41d9f8:	str	x0, [x21, #24]
  41d9fc:	stp	xzr, x8, [x21]
  41da00:	csel	x8, x11, x8, eq  // eq = none
  41da04:	orr	w9, w9, w10
  41da08:	mov	w0, wzr
  41da0c:	str	w19, [x21, #40]
  41da10:	stp	xzr, xzr, [x21, #56]
  41da14:	str	xzr, [x21, #48]
  41da18:	strb	w24, [x21, #36]
  41da1c:	str	w9, [x21, #32]
  41da20:	str	x21, [x8]
  41da24:	str	x21, [x22, #1760]
  41da28:	bl	41ca00 <wcrtomb@plt+0x17ec0>
  41da2c:	mov	x20, x0
  41da30:	mov	w21, w19
  41da34:	cbnz	x0, 41d958 <wcrtomb@plt+0x18e18>
  41da38:	b	41db9c <wcrtomb@plt+0x1905c>
  41da3c:	cmp	w19, w21
  41da40:	b.eq	41db9c <wcrtomb@plt+0x1905c>  // b.none
  41da44:	mov	w0, #0x60                  	// #96
  41da48:	bl	445be0 <argp_parse@@Base+0xe334>
  41da4c:	mov	x20, x0
  41da50:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  41da54:	add	x0, x0, #0x66
  41da58:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41da5c:	str	x0, [x20, #16]
  41da60:	bl	403f40 <strlen@plt>
  41da64:	ldr	w9, [x27, #1748]
  41da68:	ldrb	w10, [x26, #1752]
  41da6c:	ldr	x8, [x22, #1760]
  41da70:	adrp	x12, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41da74:	cmp	w9, #0x2
  41da78:	mov	w11, #0x40000000            	// #1073741824
  41da7c:	ldr	w12, [x12, #1756]
  41da80:	cset	w9, eq  // eq = none
  41da84:	cmp	w10, #0x0
  41da88:	ldr	w13, [x25, #3732]
  41da8c:	csel	w10, wzr, w11, ne  // ne = any
  41da90:	bfi	w10, w9, #28, #1
  41da94:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41da98:	cmp	x8, #0x0
  41da9c:	add	x9, x9, #0x6e8
  41daa0:	stp	xzr, x8, [x20]
  41daa4:	csel	x8, x9, x8, eq  // eq = none
  41daa8:	orr	w9, w10, w12
  41daac:	orr	w9, w9, w13
  41dab0:	str	x0, [x20, #24]
  41dab4:	str	w19, [x20, #40]
  41dab8:	strb	wzr, [x20, #36]
  41dabc:	stp	xzr, xzr, [x20, #56]
  41dac0:	str	xzr, [x20, #48]
  41dac4:	str	w9, [x20, #32]
  41dac8:	str	x20, [x8]
  41dacc:	str	x20, [x22, #1760]
  41dad0:	b	41db9c <wcrtomb@plt+0x1905c>
  41dad4:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dad8:	ldr	x19, [x22, #1736]
  41dadc:	cbz	x19, 41daf8 <wcrtomb@plt+0x18fb8>
  41dae0:	ldr	x0, [x19, #16]
  41dae4:	bl	404700 <free@plt>
  41dae8:	ldr	x0, [x19, #88]
  41daec:	bl	404700 <free@plt>
  41daf0:	mov	x0, x19
  41daf4:	bl	404700 <free@plt>
  41daf8:	ldr	x20, [x20, #24]
  41dafc:	mov	w0, #0x60                  	// #96
  41db00:	bl	445be0 <argp_parse@@Base+0xe334>
  41db04:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  41db08:	add	x8, x8, #0x66
  41db0c:	cmp	x20, #0x0
  41db10:	mov	x19, x0
  41db14:	csel	x0, x8, x20, eq  // eq = none
  41db18:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41db1c:	str	x0, [x19, #16]
  41db20:	bl	403f40 <strlen@plt>
  41db24:	mov	w10, #0x1                   	// #1
  41db28:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41db2c:	strb	w10, [x19, #36]
  41db30:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41db34:	str	x19, [x10, #1760]
  41db38:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41db3c:	ldr	w9, [x9, #1748]
  41db40:	ldr	w8, [x21, #1744]
  41db44:	ldrb	w10, [x10, #1752]
  41db48:	str	x0, [x19, #24]
  41db4c:	cmp	w9, #0x2
  41db50:	str	w8, [x19, #40]
  41db54:	mov	w8, #0x40000000            	// #1073741824
  41db58:	cset	w9, eq  // eq = none
  41db5c:	cmp	w10, #0x0
  41db60:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41db64:	csel	w8, wzr, w8, ne  // ne = any
  41db68:	bfi	w8, w9, #28, #1
  41db6c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41db70:	ldr	w10, [x10, #1756]
  41db74:	ldr	w9, [x9, #3732]
  41db78:	str	x19, [x22, #1736]
  41db7c:	str	xzr, [x19]
  41db80:	orr	w8, w8, w10
  41db84:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41db88:	orr	w8, w8, w9
  41db8c:	stp	xzr, xzr, [x19, #56]
  41db90:	str	xzr, [x19, #48]
  41db94:	str	w8, [x19, #32]
  41db98:	str	x19, [x10, #1768]
  41db9c:	ldp	x20, x19, [sp, #80]
  41dba0:	ldp	x22, x21, [sp, #64]
  41dba4:	ldp	x24, x23, [sp, #48]
  41dba8:	ldp	x26, x25, [sp, #32]
  41dbac:	ldp	x28, x27, [sp, #16]
  41dbb0:	ldp	x29, x30, [sp], #96
  41dbb4:	ret
  41dbb8:	stp	x29, x30, [sp, #-64]!
  41dbbc:	stp	x22, x21, [sp, #32]
  41dbc0:	mov	x21, x0
  41dbc4:	mov	w0, #0x60                  	// #96
  41dbc8:	str	x23, [sp, #16]
  41dbcc:	stp	x20, x19, [sp, #48]
  41dbd0:	mov	x29, sp
  41dbd4:	mov	x19, x3
  41dbd8:	mov	w20, w1
  41dbdc:	and	w23, w2, #0x1
  41dbe0:	bl	445be0 <argp_parse@@Base+0xe334>
  41dbe4:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  41dbe8:	add	x8, x8, #0x66
  41dbec:	cmp	x21, #0x0
  41dbf0:	mov	x22, x0
  41dbf4:	csel	x0, x8, x21, eq  // eq = none
  41dbf8:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41dbfc:	str	x0, [x22, #16]
  41dc00:	bl	403f40 <strlen@plt>
  41dc04:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dc08:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dc0c:	ldr	w9, [x9, #1748]
  41dc10:	ldrb	w10, [x10, #1752]
  41dc14:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dc18:	adrp	x12, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dc1c:	ldr	x14, [x8, #1760]
  41dc20:	adrp	x13, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dc24:	cmp	w9, #0x2
  41dc28:	ldr	w12, [x12, #1756]
  41dc2c:	mov	w11, #0x40000000            	// #1073741824
  41dc30:	cset	w9, eq  // eq = none
  41dc34:	cmp	w10, #0x0
  41dc38:	ldr	w13, [x13, #3732]
  41dc3c:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dc40:	csel	w11, wzr, w11, ne  // ne = any
  41dc44:	add	x10, x10, #0x6e8
  41dc48:	cmp	x14, #0x0
  41dc4c:	bfi	w11, w9, #28, #1
  41dc50:	csel	x9, x10, x14, eq  // eq = none
  41dc54:	orr	w10, w11, w12
  41dc58:	orr	w10, w10, w13
  41dc5c:	str	x0, [x22, #24]
  41dc60:	str	w20, [x22, #40]
  41dc64:	stp	xzr, x19, [x22, #56]
  41dc68:	str	xzr, [x22, #48]
  41dc6c:	strb	w23, [x22, #36]
  41dc70:	stp	xzr, x14, [x22]
  41dc74:	str	w10, [x22, #32]
  41dc78:	str	x22, [x9]
  41dc7c:	str	x22, [x8, #1760]
  41dc80:	mov	x0, x22
  41dc84:	ldp	x20, x19, [sp, #48]
  41dc88:	ldp	x22, x21, [sp, #32]
  41dc8c:	ldr	x23, [sp, #16]
  41dc90:	ldp	x29, x30, [sp], #64
  41dc94:	ret
  41dc98:	stp	x29, x30, [sp, #-48]!
  41dc9c:	stp	x20, x19, [sp, #32]
  41dca0:	mov	x20, x0
  41dca4:	mov	w0, #0x60                  	// #96
  41dca8:	str	x21, [sp, #16]
  41dcac:	mov	x29, sp
  41dcb0:	bl	445be0 <argp_parse@@Base+0xe334>
  41dcb4:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  41dcb8:	add	x8, x8, #0x66
  41dcbc:	cmp	x20, #0x0
  41dcc0:	mov	x19, x0
  41dcc4:	csel	x0, x8, x20, eq  // eq = none
  41dcc8:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41dccc:	str	x0, [x19, #16]
  41dcd0:	bl	403f40 <strlen@plt>
  41dcd4:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dcd8:	ldrb	w8, [x21, #3736]
  41dcdc:	str	x0, [x19, #24]
  41dce0:	cbz	w8, 41dd34 <wcrtomb@plt+0x191f4>
  41dce4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dce8:	add	x8, x8, #0x6e8
  41dcec:	ldr	x20, [x8]
  41dcf0:	ldp	x10, x9, [x20]
  41dcf4:	cmp	x9, #0x0
  41dcf8:	csel	x8, x8, x9, eq  // eq = none
  41dcfc:	str	x10, [x8]
  41dd00:	ldr	x8, [x20]
  41dd04:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dd08:	add	x10, x10, #0x6e0
  41dd0c:	add	x11, x8, #0x8
  41dd10:	cmp	x8, #0x0
  41dd14:	csel	x8, x10, x11, eq  // eq = none
  41dd18:	str	x9, [x8]
  41dd1c:	ldr	x0, [x20, #16]
  41dd20:	bl	404700 <free@plt>
  41dd24:	ldr	x0, [x20, #88]
  41dd28:	bl	404700 <free@plt>
  41dd2c:	mov	x0, x20
  41dd30:	bl	404700 <free@plt>
  41dd34:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dd38:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dd3c:	ldr	x10, [x9, #1768]
  41dd40:	ldr	x11, [x8, #1760]
  41dd44:	str	x19, [x9, #1768]
  41dd48:	stp	x10, xzr, [x19]
  41dd4c:	cbnz	x11, 41dd54 <wcrtomb@plt+0x19214>
  41dd50:	str	x19, [x8, #1760]
  41dd54:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dd58:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dd5c:	ldr	w8, [x8, #1748]
  41dd60:	ldrb	w9, [x9, #1752]
  41dd64:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dd68:	ldr	w10, [x10, #1756]
  41dd6c:	cmp	w8, #0x2
  41dd70:	cset	w8, eq  // eq = none
  41dd74:	cmp	w9, #0x0
  41dd78:	mov	w9, #0x40000000            	// #1073741824
  41dd7c:	csel	w9, wzr, w9, ne  // ne = any
  41dd80:	bfi	w9, w8, #28, #1
  41dd84:	orr	w8, w9, w10
  41dd88:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dd8c:	ldr	w9, [x9, #3732]
  41dd90:	str	wzr, [x19, #40]
  41dd94:	stp	xzr, xzr, [x19, #56]
  41dd98:	str	xzr, [x19, #48]
  41dd9c:	orr	w8, w8, w9
  41dda0:	mov	w9, #0x1                   	// #1
  41dda4:	strb	w9, [x19, #36]
  41dda8:	str	w8, [x19, #32]
  41ddac:	strb	w9, [x21, #3736]
  41ddb0:	ldp	x20, x19, [sp, #32]
  41ddb4:	ldr	x21, [sp, #16]
  41ddb8:	ldp	x29, x30, [sp], #48
  41ddbc:	ret
  41ddc0:	ldp	x9, x8, [x0]
  41ddc4:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ddc8:	add	x10, x10, #0x6e8
  41ddcc:	cmp	x8, #0x0
  41ddd0:	csel	x10, x10, x8, eq  // eq = none
  41ddd4:	str	x9, [x10]
  41ddd8:	ldr	x9, [x0]
  41dddc:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dde0:	add	x10, x10, #0x6e0
  41dde4:	add	x11, x9, #0x8
  41dde8:	cmp	x9, #0x0
  41ddec:	csel	x9, x10, x11, eq  // eq = none
  41ddf0:	str	x8, [x9]
  41ddf4:	ret
  41ddf8:	stp	x29, x30, [sp, #-64]!
  41ddfc:	stp	x22, x21, [sp, #32]
  41de00:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41de04:	stp	x20, x19, [sp, #48]
  41de08:	ldr	x20, [x21, #1768]
  41de0c:	str	x23, [sp, #16]
  41de10:	mov	x19, x0
  41de14:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41de18:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41de1c:	mov	x29, sp
  41de20:	cbz	x20, 41deb0 <wcrtomb@plt+0x19370>
  41de24:	ldr	x0, [x20, #16]
  41de28:	ldrb	w8, [x0]
  41de2c:	cbz	w8, 41deb8 <wcrtomb@plt+0x19378>
  41de30:	mov	w8, #0x1                   	// #1
  41de34:	tst	w8, #0xff
  41de38:	b.eq	41de4c <wcrtomb@plt+0x1930c>  // b.none
  41de3c:	ldr	w2, [x20, #32]
  41de40:	mov	x1, x19
  41de44:	bl	4394c0 <argp_parse@@Base+0x1c14>
  41de48:	tbnz	w0, #0, 41de68 <wcrtomb@plt+0x19328>
  41de4c:	ldr	x20, [x20]
  41de50:	cbz	x20, 41de68 <wcrtomb@plt+0x19328>
  41de54:	ldr	x0, [x20, #16]
  41de58:	ldrb	w8, [x0]
  41de5c:	tst	w8, #0xff
  41de60:	b.ne	41de3c <wcrtomb@plt+0x192fc>  // b.any
  41de64:	b	41de4c <wcrtomb@plt+0x1930c>
  41de68:	ldrb	w8, [x22, #3736]
  41de6c:	cbz	w8, 41de80 <wcrtomb@plt+0x19340>
  41de70:	ldr	x8, [x21, #1768]
  41de74:	cmp	x20, x8
  41de78:	b.ne	41de84 <wcrtomb@plt+0x19344>  // b.any
  41de7c:	strb	wzr, [x22, #3736]
  41de80:	cbnz	x20, 41ded4 <wcrtomb@plt+0x19394>
  41de84:	ldrb	w8, [x23, #3696]
  41de88:	cbz	w8, 41dea8 <wcrtomb@plt+0x19368>
  41de8c:	ldr	x8, [x21, #1768]
  41de90:	ldr	x8, [x8, #48]
  41de94:	cbz	x8, 41dea8 <wcrtomb@plt+0x19368>
  41de98:	bl	41d81c <wcrtomb@plt+0x18cdc>
  41de9c:	ldr	x20, [x21, #1768]
  41dea0:	ldr	x8, [x20, #48]
  41dea4:	cbz	x8, 41de20 <wcrtomb@plt+0x192e0>
  41dea8:	mov	w0, wzr
  41deac:	b	41df34 <wcrtomb@plt+0x193f4>
  41deb0:	mov	w0, #0x1                   	// #1
  41deb4:	b	41df34 <wcrtomb@plt+0x193f4>
  41deb8:	ldr	w0, [x20, #40]
  41debc:	bl	41c19c <wcrtomb@plt+0x1765c>
  41dec0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dec4:	str	xzr, [x21, #1768]
  41dec8:	str	xzr, [x8, #1760]
  41decc:	mov	w0, #0x1                   	// #1
  41ded0:	b	41df34 <wcrtomb@plt+0x193f4>
  41ded4:	ldr	x8, [x20, #24]
  41ded8:	ldrb	w9, [x19, x8]
  41dedc:	ldr	x8, [x20, #48]
  41dee0:	cmp	w9, #0x2f
  41dee4:	b.ne	41df00 <wcrtomb@plt+0x193c0>  // b.any
  41dee8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41deec:	ldr	w9, [x9, #3732]
  41def0:	cbz	w9, 41df00 <wcrtomb@plt+0x193c0>
  41def4:	cbnz	x8, 41df08 <wcrtomb@plt+0x193c8>
  41def8:	mov	w8, #0x1                   	// #1
  41defc:	b	41df04 <wcrtomb@plt+0x193c4>
  41df00:	add	x8, x8, #0x1
  41df04:	str	x8, [x20, #48]
  41df08:	ldr	w0, [x20, #40]
  41df0c:	bl	41c19c <wcrtomb@plt+0x1765c>
  41df10:	ldr	x8, [x20, #48]
  41df14:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41df18:	ldr	x9, [x9, #3816]
  41df1c:	cmp	x8, #0x0
  41df20:	cset	w10, ne  // ne = any
  41df24:	cmp	x8, x9
  41df28:	cset	w8, eq  // eq = none
  41df2c:	cmp	x9, #0x0
  41df30:	csel	w0, w10, w8, eq  // eq = none
  41df34:	ldp	x20, x19, [sp, #48]
  41df38:	ldp	x22, x21, [sp, #32]
  41df3c:	ldr	x23, [sp, #16]
  41df40:	ldp	x29, x30, [sp], #64
  41df44:	ret
  41df48:	stp	x29, x30, [sp, #-32]!
  41df4c:	stp	x20, x19, [sp, #16]
  41df50:	ldr	x19, [x0, #8]
  41df54:	mov	x8, x0
  41df58:	mov	w0, wzr
  41df5c:	mov	x29, sp
  41df60:	cbz	x19, 41df98 <wcrtomb@plt+0x19458>
  41df64:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41df68:	ldr	x20, [x9, #3816]
  41df6c:	cbz	x20, 41df98 <wcrtomb@plt+0x19458>
  41df70:	ldrb	w8, [x8, #16]
  41df74:	cbz	w8, 41df80 <wcrtomb@plt+0x19440>
  41df78:	mov	w0, wzr
  41df7c:	b	41df98 <wcrtomb@plt+0x19458>
  41df80:	mov	x0, x19
  41df84:	bl	403f40 <strlen@plt>
  41df88:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41df8c:	ldr	x8, [x8, #1768]
  41df90:	cbnz	x8, 41dfac <wcrtomb@plt+0x1946c>
  41df94:	mov	w0, #0x1                   	// #1
  41df98:	ldp	x20, x19, [sp, #16]
  41df9c:	ldp	x29, x30, [sp], #32
  41dfa0:	ret
  41dfa4:	ldr	x8, [x8]
  41dfa8:	cbz	x8, 41df94 <wcrtomb@plt+0x19454>
  41dfac:	ldr	x9, [x8, #16]
  41dfb0:	ldrb	w9, [x9]
  41dfb4:	cbz	w9, 41dfc4 <wcrtomb@plt+0x19484>
  41dfb8:	ldr	x9, [x8, #48]
  41dfbc:	cmp	x9, x20
  41dfc0:	b.cc	41df78 <wcrtomb@plt+0x19438>  // b.lo, b.ul, b.last
  41dfc4:	ldr	x9, [x8, #24]
  41dfc8:	cmp	x0, x9
  41dfcc:	b.cc	41dfa4 <wcrtomb@plt+0x19464>  // b.lo, b.ul, b.last
  41dfd0:	ldrb	w9, [x19, x9]
  41dfd4:	cmp	w9, #0x2f
  41dfd8:	b.ne	41dfa4 <wcrtomb@plt+0x19464>  // b.any
  41dfdc:	b	41df78 <wcrtomb@plt+0x19438>
  41dfe0:	stp	x29, x30, [sp, #-96]!
  41dfe4:	stp	x20, x19, [sp, #80]
  41dfe8:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dfec:	stp	x22, x21, [sp, #64]
  41dff0:	ldr	x21, [x20, #1768]
  41dff4:	stp	x24, x23, [sp, #48]
  41dff8:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41dffc:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e000:	str	x27, [sp, #16]
  41e004:	stp	x26, x25, [sp, #32]
  41e008:	mov	x29, sp
  41e00c:	cbz	x21, 41e0b0 <wcrtomb@plt+0x19570>
  41e010:	adrp	x25, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41e014:	adrp	x26, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41e018:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e01c:	add	x25, x25, #0x981
  41e020:	add	x26, x26, #0x968
  41e024:	mov	w27, #0x2                   	// #2
  41e028:	b	41e074 <wcrtomb@plt+0x19534>
  41e02c:	ldr	x8, [x21, #48]
  41e030:	mov	w2, #0x5                   	// #5
  41e034:	mov	x0, xzr
  41e038:	cmp	x8, #0x0
  41e03c:	csel	x1, x26, x25, eq  // eq = none
  41e040:	bl	404900 <dcgettext@plt>
  41e044:	ldr	x8, [x21, #16]
  41e048:	mov	x19, x0
  41e04c:	mov	x0, x8
  41e050:	bl	444778 <argp_parse@@Base+0xcecc>
  41e054:	mov	x3, x0
  41e058:	mov	w0, wzr
  41e05c:	mov	w1, wzr
  41e060:	mov	x2, x19
  41e064:	bl	403fa0 <error@plt>
  41e068:	str	w27, [x23, #2416]
  41e06c:	ldr	x21, [x21]
  41e070:	cbz	x21, 41e0b0 <wcrtomb@plt+0x19570>
  41e074:	ldr	x9, [x24, #3816]
  41e078:	ldr	x8, [x21, #48]
  41e07c:	cbz	x9, 41e08c <wcrtomb@plt+0x1954c>
  41e080:	cmp	x8, x9
  41e084:	b.cs	41e06c <wcrtomb@plt+0x1952c>  // b.hs, b.nlast
  41e088:	b	41e090 <wcrtomb@plt+0x19550>
  41e08c:	cbnz	x8, 41e06c <wcrtomb@plt+0x1952c>
  41e090:	ldr	x0, [x21, #16]
  41e094:	ldrb	w8, [x0]
  41e098:	cbz	w8, 41e06c <wcrtomb@plt+0x1952c>
  41e09c:	bl	41e160 <wcrtomb@plt+0x19620>
  41e0a0:	ldr	x8, [x22, #4064]
  41e0a4:	cbz	x8, 41e02c <wcrtomb@plt+0x194ec>
  41e0a8:	blr	x8
  41e0ac:	b	41e02c <wcrtomb@plt+0x194ec>
  41e0b0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e0b4:	ldrb	w8, [x8, #3696]
  41e0b8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e0bc:	str	xzr, [x20, #1768]
  41e0c0:	str	xzr, [x9, #1760]
  41e0c4:	cbz	w8, 41e144 <wcrtomb@plt+0x19604>
  41e0c8:	mov	w0, #0x1                   	// #1
  41e0cc:	bl	41ca00 <wcrtomb@plt+0x17ec0>
  41e0d0:	cbz	x0, 41e144 <wcrtomb@plt+0x19604>
  41e0d4:	adrp	x19, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41e0d8:	add	x19, x19, #0x968
  41e0dc:	mov	w24, #0x2                   	// #2
  41e0e0:	b	41e124 <wcrtomb@plt+0x195e4>
  41e0e4:	mov	w2, #0x5                   	// #5
  41e0e8:	mov	x0, xzr
  41e0ec:	mov	x1, x19
  41e0f0:	bl	404900 <dcgettext@plt>
  41e0f4:	mov	x21, x0
  41e0f8:	mov	x0, x20
  41e0fc:	bl	444778 <argp_parse@@Base+0xcecc>
  41e100:	mov	x3, x0
  41e104:	mov	w0, wzr
  41e108:	mov	w1, wzr
  41e10c:	mov	x2, x21
  41e110:	bl	403fa0 <error@plt>
  41e114:	mov	w0, #0x1                   	// #1
  41e118:	str	w24, [x23, #2416]
  41e11c:	bl	41ca00 <wcrtomb@plt+0x17ec0>
  41e120:	cbz	x0, 41e144 <wcrtomb@plt+0x19604>
  41e124:	ldr	x20, [x0, #24]
  41e128:	cbz	x20, 41e144 <wcrtomb@plt+0x19604>
  41e12c:	mov	x0, x20
  41e130:	bl	41e160 <wcrtomb@plt+0x19620>
  41e134:	ldr	x8, [x22, #4064]
  41e138:	cbz	x8, 41e0e4 <wcrtomb@plt+0x195a4>
  41e13c:	blr	x8
  41e140:	b	41e0e4 <wcrtomb@plt+0x195a4>
  41e144:	ldp	x20, x19, [sp, #80]
  41e148:	ldp	x22, x21, [sp, #64]
  41e14c:	ldp	x24, x23, [sp, #48]
  41e150:	ldp	x26, x25, [sp, #32]
  41e154:	ldr	x27, [sp, #16]
  41e158:	ldp	x29, x30, [sp], #96
  41e15c:	ret
  41e160:	stp	x29, x30, [sp, #-32]!
  41e164:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e168:	ldr	w8, [x8, #1748]
  41e16c:	stp	x20, x19, [sp, #16]
  41e170:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e174:	mov	x29, sp
  41e178:	cbnz	w8, 41e1f4 <wcrtomb@plt+0x196b4>
  41e17c:	mov	w1, wzr
  41e180:	bl	439364 <argp_parse@@Base+0x1ab8>
  41e184:	tbz	w0, #0, 41e1f4 <wcrtomb@plt+0x196b4>
  41e188:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e18c:	ldr	x8, [x20, #4064]
  41e190:	mov	w9, #0x1                   	// #1
  41e194:	strb	w9, [x19, #1856]
  41e198:	cbz	x8, 41e1a0 <wcrtomb@plt+0x19660>
  41e19c:	blr	x8
  41e1a0:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41e1a4:	add	x1, x1, #0x3f3
  41e1a8:	mov	w2, #0x5                   	// #5
  41e1ac:	mov	x0, xzr
  41e1b0:	bl	404900 <dcgettext@plt>
  41e1b4:	mov	x2, x0
  41e1b8:	mov	w0, wzr
  41e1bc:	mov	w1, wzr
  41e1c0:	bl	403fa0 <error@plt>
  41e1c4:	ldr	x8, [x20, #4064]
  41e1c8:	cbz	x8, 41e1d0 <wcrtomb@plt+0x19690>
  41e1cc:	blr	x8
  41e1d0:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41e1d4:	add	x1, x1, #0x422
  41e1d8:	mov	w2, #0x5                   	// #5
  41e1dc:	mov	x0, xzr
  41e1e0:	bl	404900 <dcgettext@plt>
  41e1e4:	mov	x2, x0
  41e1e8:	mov	w0, wzr
  41e1ec:	mov	w1, wzr
  41e1f0:	bl	403fa0 <error@plt>
  41e1f4:	ldrb	w0, [x19, #1856]
  41e1f8:	ldp	x20, x19, [sp, #16]
  41e1fc:	ldp	x29, x30, [sp], #32
  41e200:	ret
  41e204:	stp	x29, x30, [sp, #-32]!
  41e208:	stp	x20, x19, [sp, #16]
  41e20c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e210:	ldr	x8, [x19, #1768]
  41e214:	mov	x29, sp
  41e218:	cbz	x8, 41e2d0 <wcrtomb@plt+0x19790>
  41e21c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e220:	ldr	x9, [x9, #3816]
  41e224:	b	41e234 <wcrtomb@plt+0x196f4>
  41e228:	cbnz	x10, 41e2d0 <wcrtomb@plt+0x19790>
  41e22c:	ldr	x8, [x8]
  41e230:	cbz	x8, 41e248 <wcrtomb@plt+0x19708>
  41e234:	ldr	x10, [x8, #48]
  41e238:	cbz	x9, 41e228 <wcrtomb@plt+0x196e8>
  41e23c:	cmp	x10, x9
  41e240:	b.cc	41e22c <wcrtomb@plt+0x196ec>  // b.lo, b.ul, b.last
  41e244:	b	41e2d0 <wcrtomb@plt+0x19790>
  41e248:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e24c:	ldr	w8, [x8, #3700]
  41e250:	cbz	w8, 41e278 <wcrtomb@plt+0x19738>
  41e254:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41e258:	add	x1, x1, #0x9ae
  41e25c:	mov	w2, #0x5                   	// #5
  41e260:	mov	x0, xzr
  41e264:	bl	404900 <dcgettext@plt>
  41e268:	mov	x2, x0
  41e26c:	mov	w0, wzr
  41e270:	mov	w1, wzr
  41e274:	bl	403fa0 <error@plt>
  41e278:	mov	w0, #0x1                   	// #1
  41e27c:	bl	424364 <wcrtomb@plt+0x1f824>
  41e280:	ldr	x20, [x19, #1768]
  41e284:	cbz	x20, 41e29c <wcrtomb@plt+0x1975c>
  41e288:	ldr	x0, [x20, #16]
  41e28c:	bl	41e160 <wcrtomb@plt+0x19620>
  41e290:	cbnz	w0, 41e29c <wcrtomb@plt+0x1975c>
  41e294:	ldr	x20, [x20]
  41e298:	cbnz	x20, 41e288 <wcrtomb@plt+0x19748>
  41e29c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e2a0:	ldrb	w8, [x8, #3696]
  41e2a4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e2a8:	str	xzr, [x19, #1768]
  41e2ac:	str	xzr, [x9, #1760]
  41e2b0:	cbz	w8, 41e2d0 <wcrtomb@plt+0x19790>
  41e2b4:	mov	w0, #0x1                   	// #1
  41e2b8:	bl	41ca00 <wcrtomb@plt+0x17ec0>
  41e2bc:	cbz	x0, 41e2d0 <wcrtomb@plt+0x19790>
  41e2c0:	ldr	x0, [x0, #24]
  41e2c4:	cbz	x0, 41e2d0 <wcrtomb@plt+0x19790>
  41e2c8:	bl	41e160 <wcrtomb@plt+0x19620>
  41e2cc:	cbz	w0, 41e2b4 <wcrtomb@plt+0x19774>
  41e2d0:	ldp	x20, x19, [sp, #16]
  41e2d4:	ldp	x29, x30, [sp], #32
  41e2d8:	ret
  41e2dc:	stp	x29, x30, [sp, #-96]!
  41e2e0:	stp	x28, x27, [sp, #16]
  41e2e4:	stp	x26, x25, [sp, #32]
  41e2e8:	stp	x24, x23, [sp, #48]
  41e2ec:	stp	x22, x21, [sp, #64]
  41e2f0:	stp	x20, x19, [sp, #80]
  41e2f4:	mov	x29, sp
  41e2f8:	sub	sp, sp, #0x1b0
  41e2fc:	bl	41d81c <wcrtomb@plt+0x18cdc>
  41e300:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e304:	ldr	x8, [x23, #1768]
  41e308:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e30c:	cbnz	x8, 41e3a8 <wcrtomb@plt+0x19868>
  41e310:	mov	w0, #0x60                  	// #96
  41e314:	bl	445be0 <argp_parse@@Base+0xe334>
  41e318:	mov	x19, x0
  41e31c:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x184b0>
  41e320:	add	x0, x0, #0x50a
  41e324:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41e328:	str	x0, [x19, #16]
  41e32c:	bl	403f40 <strlen@plt>
  41e330:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e334:	ldr	w9, [x9, #1748]
  41e338:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e33c:	ldrb	w10, [x10, #1752]
  41e340:	mov	w11, #0x40000000            	// #1073741824
  41e344:	cmp	w9, #0x2
  41e348:	cset	w9, eq  // eq = none
  41e34c:	cmp	w10, #0x0
  41e350:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e354:	csel	w11, wzr, w11, ne  // ne = any
  41e358:	ldr	w10, [x10, #1756]
  41e35c:	ldr	x8, [x20, #1760]
  41e360:	bfi	w11, w9, #28, #1
  41e364:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e368:	ldr	w9, [x9, #3732]
  41e36c:	orr	w10, w11, w10
  41e370:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e374:	add	x11, x11, #0x6e8
  41e378:	cmp	x8, #0x0
  41e37c:	csel	x11, x11, x8, eq  // eq = none
  41e380:	stp	xzr, x8, [x19]
  41e384:	orr	w8, w10, w9
  41e388:	str	x0, [x19, #24]
  41e38c:	str	wzr, [x19, #40]
  41e390:	strb	wzr, [x19, #36]
  41e394:	stp	xzr, xzr, [x19, #56]
  41e398:	str	xzr, [x19, #48]
  41e39c:	str	w8, [x19, #32]
  41e3a0:	str	x19, [x11]
  41e3a4:	str	x19, [x20, #1760]
  41e3a8:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e3ac:	ldr	x8, [x25, #3888]
  41e3b0:	cbz	x8, 41e3d4 <wcrtomb@plt+0x19894>
  41e3b4:	bl	41be94 <wcrtomb@plt+0x17354>
  41e3b8:	cbz	w0, 41e3d0 <wcrtomb@plt+0x19890>
  41e3bc:	cmp	w0, #0x1
  41e3c0:	b.ne	41e71c <wcrtomb@plt+0x19bdc>  // b.any
  41e3c4:	ldr	x8, [x23, #1768]
  41e3c8:	ldr	w8, [x8, #40]
  41e3cc:	cbz	w8, 41e738 <wcrtomb@plt+0x19bf8>
  41e3d0:	bl	415e30 <wcrtomb@plt+0x112f0>
  41e3d4:	ldr	x20, [x23, #1768]
  41e3d8:	cbz	x20, 41e3f4 <wcrtomb@plt+0x198b4>
  41e3dc:	mov	x8, sp
  41e3e0:	mov	w19, wzr
  41e3e4:	adrp	x22, 477000 <_obstack_memory_used@@Base+0x304b0>
  41e3e8:	add	x21, x8, #0x58
  41e3ec:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e3f0:	b	41e41c <wcrtomb@plt+0x198dc>
  41e3f4:	mov	x0, xzr
  41e3f8:	mov	w19, wzr
  41e3fc:	b	41e4e8 <wcrtomb@plt+0x199a8>
  41e400:	ldr	x0, [x20, #16]
  41e404:	bl	41c358 <wcrtomb@plt+0x17818>
  41e408:	mov	x0, sp
  41e40c:	bl	424420 <wcrtomb@plt+0x1f8e0>
  41e410:	ldr	x20, [x20]
  41e414:	add	w19, w19, #0x1
  41e418:	cbz	x20, 41e4e4 <wcrtomb@plt+0x199a4>
  41e41c:	ldr	x8, [x20, #48]
  41e420:	cbnz	x8, 41e410 <wcrtomb@plt+0x198d0>
  41e424:	ldr	x8, [x20, #56]
  41e428:	cbnz	x8, 41e410 <wcrtomb@plt+0x198d0>
  41e42c:	ldrb	w8, [x20, #35]
  41e430:	tbnz	w8, #4, 41e410 <wcrtomb@plt+0x198d0>
  41e434:	ldr	w0, [x20, #40]
  41e438:	bl	41c19c <wcrtomb@plt+0x1765c>
  41e43c:	ldr	x8, [x20, #16]
  41e440:	ldrb	w8, [x8]
  41e444:	cbz	w8, 41e410 <wcrtomb@plt+0x198d0>
  41e448:	mov	x0, sp
  41e44c:	bl	42437c <wcrtomb@plt+0x1f83c>
  41e450:	ldr	x0, [x20, #16]
  41e454:	mov	x1, x21
  41e458:	bl	41bbd4 <wcrtomb@plt+0x17094>
  41e45c:	cbz	w0, 41e46c <wcrtomb@plt+0x1992c>
  41e460:	ldr	x0, [x20, #16]
  41e464:	bl	41c40c <wcrtomb@plt+0x178cc>
  41e468:	b	41e410 <wcrtomb@plt+0x198d0>
  41e46c:	ldr	w8, [sp, #104]
  41e470:	and	w8, w8, #0xf000
  41e474:	cmp	w8, #0x4, lsl #12
  41e478:	b.ne	41e408 <wcrtomb@plt+0x198c8>  // b.any
  41e47c:	ldr	w8, [x26, #3764]
  41e480:	ldr	w0, [x22, #1872]
  41e484:	ldr	x1, [x20, #16]
  41e488:	orr	w2, w8, #0x4000
  41e48c:	bl	4049f0 <openat@plt>
  41e490:	tbnz	w0, #31, 41e400 <wcrtomb@plt+0x198c0>
  41e494:	mov	w1, w0
  41e498:	str	w0, [sp, #408]
  41e49c:	mov	w0, wzr
  41e4a0:	mov	x2, x21
  41e4a4:	bl	4048e0 <__fxstat@plt>
  41e4a8:	ldr	x8, [x20, #16]
  41e4ac:	cbz	w0, 41e4bc <wcrtomb@plt+0x1997c>
  41e4b0:	mov	x0, x8
  41e4b4:	bl	41c40c <wcrtomb@plt+0x178cc>
  41e4b8:	b	41e408 <wcrtomb@plt+0x198c8>
  41e4bc:	mov	x0, x8
  41e4c0:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41e4c4:	str	x0, [sp]
  41e4c8:	ldr	x8, [x20, #48]
  41e4cc:	mov	x0, sp
  41e4d0:	mov	x1, x20
  41e4d4:	add	x8, x8, #0x1
  41e4d8:	str	x8, [x20, #48]
  41e4dc:	bl	41e774 <wcrtomb@plt+0x19c34>
  41e4e0:	b	41e408 <wcrtomb@plt+0x198c8>
  41e4e4:	ldr	x0, [x23, #1768]
  41e4e8:	adrp	x2, 41e000 <wcrtomb@plt+0x194c0>
  41e4ec:	add	x2, x2, #0xa10
  41e4f0:	mov	w1, w19
  41e4f4:	bl	41efec <wcrtomb@plt+0x1a4ac>
  41e4f8:	cbz	x0, 41e518 <wcrtomb@plt+0x199d8>
  41e4fc:	mov	x8, xzr
  41e500:	mov	x9, x0
  41e504:	ldr	x10, [x9]
  41e508:	str	x8, [x9, #8]
  41e50c:	mov	x8, x9
  41e510:	mov	x9, x10
  41e514:	cbnz	x10, 41e504 <wcrtomb@plt+0x199c4>
  41e518:	adrp	x2, 41e000 <wcrtomb@plt+0x194c0>
  41e51c:	adrp	x3, 41e000 <wcrtomb@plt+0x194c0>
  41e520:	str	x0, [x23, #1768]
  41e524:	add	x2, x2, #0xa1c
  41e528:	add	x3, x3, #0xa24
  41e52c:	mov	x0, xzr
  41e530:	mov	x1, xzr
  41e534:	mov	x4, xzr
  41e538:	bl	43b9f4 <argp_parse@@Base+0x4148>
  41e53c:	ldr	x21, [x23, #1768]
  41e540:	mov	x20, x0
  41e544:	cbz	x21, 41e674 <wcrtomb@plt+0x19b34>
  41e548:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e54c:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e550:	mov	x24, xzr
  41e554:	mov	w19, wzr
  41e558:	add	x26, x26, #0x6e8
  41e55c:	add	x27, x27, #0x6e0
  41e560:	b	41e5a8 <wcrtomb@plt+0x19a68>
  41e564:	ldp	x9, x8, [x21]
  41e568:	cmp	x8, #0x0
  41e56c:	csel	x10, x26, x8, eq  // eq = none
  41e570:	str	x9, [x10]
  41e574:	ldr	x9, [x21]
  41e578:	add	x10, x9, #0x8
  41e57c:	cmp	x9, #0x0
  41e580:	csel	x9, x27, x10, eq  // eq = none
  41e584:	str	x8, [x9]
  41e588:	ldr	x0, [x21, #16]
  41e58c:	bl	404700 <free@plt>
  41e590:	ldr	x0, [x21, #88]
  41e594:	bl	404700 <free@plt>
  41e598:	mov	x0, x21
  41e59c:	bl	404700 <free@plt>
  41e5a0:	mov	x21, x28
  41e5a4:	cbz	x28, 41e67c <wcrtomb@plt+0x19b3c>
  41e5a8:	ldr	w0, [x21, #40]
  41e5ac:	ldr	x1, [x21, #16]
  41e5b0:	ldr	x28, [x21]
  41e5b4:	bl	41ade4 <wcrtomb@plt+0x162a4>
  41e5b8:	str	x0, [x21, #88]
  41e5bc:	cbz	x24, 41e64c <wcrtomb@plt+0x19b0c>
  41e5c0:	mov	x0, x20
  41e5c4:	mov	x1, x21
  41e5c8:	bl	43b71c <argp_parse@@Base+0x3e70>
  41e5cc:	cbz	x0, 41e64c <wcrtomb@plt+0x19b0c>
  41e5d0:	ldr	x8, [x21, #64]
  41e5d4:	mov	x22, x0
  41e5d8:	cbz	x8, 41e5f0 <wcrtomb@plt+0x19ab0>
  41e5dc:	ldr	x0, [x21, #72]
  41e5e0:	cbz	x0, 41e564 <wcrtomb@plt+0x19a24>
  41e5e4:	mov	x1, x22
  41e5e8:	bl	41ea48 <wcrtomb@plt+0x19f08>
  41e5ec:	b	41e564 <wcrtomb@plt+0x19a24>
  41e5f0:	ldr	x0, [x22, #72]
  41e5f4:	cbz	x0, 41e600 <wcrtomb@plt+0x19ac0>
  41e5f8:	mov	x1, x21
  41e5fc:	bl	41ea48 <wcrtomb@plt+0x19f08>
  41e600:	mov	x0, x20
  41e604:	mov	x1, x21
  41e608:	bl	43c440 <argp_parse@@Base+0x4b94>
  41e60c:	ldp	x9, x8, [x22]
  41e610:	cmp	x8, #0x0
  41e614:	csel	x10, x26, x8, eq  // eq = none
  41e618:	str	x9, [x10]
  41e61c:	ldr	x9, [x22]
  41e620:	add	x10, x9, #0x8
  41e624:	cmp	x9, #0x0
  41e628:	csel	x9, x27, x10, eq  // eq = none
  41e62c:	str	x8, [x9]
  41e630:	ldr	x0, [x22, #16]
  41e634:	bl	404700 <free@plt>
  41e638:	ldr	x0, [x22, #88]
  41e63c:	bl	404700 <free@plt>
  41e640:	mov	x0, x22
  41e644:	bl	404700 <free@plt>
  41e648:	sub	w19, w19, #0x1
  41e64c:	mov	x0, x20
  41e650:	mov	x1, x21
  41e654:	str	xzr, [x21, #48]
  41e658:	bl	43c408 <argp_parse@@Base+0x4b5c>
  41e65c:	cbz	x0, 41e718 <wcrtomb@plt+0x19bd8>
  41e660:	add	w19, w19, #0x1
  41e664:	mov	x24, x21
  41e668:	mov	x21, x28
  41e66c:	cbnz	x28, 41e5a8 <wcrtomb@plt+0x19a68>
  41e670:	b	41e67c <wcrtomb@plt+0x19b3c>
  41e674:	mov	w19, wzr
  41e678:	mov	x24, xzr
  41e67c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e680:	mov	x0, x20
  41e684:	str	x24, [x8, #1760]
  41e688:	bl	43bca0 <argp_parse@@Base+0x43f4>
  41e68c:	ldr	x0, [x23, #1768]
  41e690:	adrp	x2, 41e000 <wcrtomb@plt+0x194c0>
  41e694:	add	x2, x2, #0xadc
  41e698:	mov	w1, w19
  41e69c:	bl	41efec <wcrtomb@plt+0x1a4ac>
  41e6a0:	cbz	x0, 41e6e8 <wcrtomb@plt+0x19ba8>
  41e6a4:	mov	x8, xzr
  41e6a8:	mov	x9, x0
  41e6ac:	ldr	x10, [x9]
  41e6b0:	str	x8, [x9, #8]
  41e6b4:	mov	x8, x9
  41e6b8:	mov	x9, x10
  41e6bc:	cbnz	x10, 41e6ac <wcrtomb@plt+0x19b6c>
  41e6c0:	ldr	x8, [x25, #3888]
  41e6c4:	str	x0, [x23, #1768]
  41e6c8:	cbz	x8, 41e6f8 <wcrtomb@plt+0x19bb8>
  41e6cc:	cbz	x0, 41e6f8 <wcrtomb@plt+0x19bb8>
  41e6d0:	ldr	x8, [x0, #16]
  41e6d4:	ldrb	w8, [x8]
  41e6d8:	cbnz	w8, 41e6f0 <wcrtomb@plt+0x19bb0>
  41e6dc:	ldr	x0, [x0]
  41e6e0:	cbnz	x0, 41e6d0 <wcrtomb@plt+0x19b90>
  41e6e4:	b	41e6f8 <wcrtomb@plt+0x19bb8>
  41e6e8:	str	x0, [x23, #1768]
  41e6ec:	b	41e6f8 <wcrtomb@plt+0x19bb8>
  41e6f0:	ldr	x0, [x0, #56]
  41e6f4:	bl	415954 <wcrtomb@plt+0x10e14>
  41e6f8:	add	sp, sp, #0x1b0
  41e6fc:	ldp	x20, x19, [sp, #80]
  41e700:	ldp	x22, x21, [sp, #64]
  41e704:	ldp	x24, x23, [sp, #48]
  41e708:	ldp	x26, x25, [sp, #32]
  41e70c:	ldp	x28, x27, [sp, #16]
  41e710:	ldp	x29, x30, [sp], #96
  41e714:	ret
  41e718:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  41e71c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e720:	ldr	x8, [x8, #4064]
  41e724:	cbz	x8, 41e72c <wcrtomb@plt+0x19bec>
  41e728:	blr	x8
  41e72c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41e730:	add	x1, x1, #0xa0f
  41e734:	b	41e750 <wcrtomb@plt+0x19c10>
  41e738:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e73c:	ldr	x8, [x8, #4064]
  41e740:	cbz	x8, 41e748 <wcrtomb@plt+0x19c08>
  41e744:	blr	x8
  41e748:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  41e74c:	add	x1, x1, #0x9c5
  41e750:	mov	w2, #0x5                   	// #5
  41e754:	mov	x0, xzr
  41e758:	bl	404900 <dcgettext@plt>
  41e75c:	mov	x2, x0
  41e760:	mov	w0, wzr
  41e764:	mov	w1, wzr
  41e768:	bl	403fa0 <error@plt>
  41e76c:	mov	w0, #0x2                   	// #2
  41e770:	bl	422db4 <wcrtomb@plt+0x1e274>
  41e774:	stp	x29, x30, [sp, #-96]!
  41e778:	stp	x28, x27, [sp, #16]
  41e77c:	stp	x26, x25, [sp, #32]
  41e780:	stp	x24, x23, [sp, #48]
  41e784:	stp	x22, x21, [sp, #64]
  41e788:	stp	x20, x19, [sp, #80]
  41e78c:	mov	x29, sp
  41e790:	sub	sp, sp, #0x1d0
  41e794:	mov	x19, x1
  41e798:	mov	x20, x0
  41e79c:	bl	414d04 <wcrtomb@plt+0x101c4>
  41e7a0:	str	x0, [x19, #56]
  41e7a4:	bl	41590c <wcrtomb@plt+0x10dcc>
  41e7a8:	cbz	x0, 41e9ec <wcrtomb@plt+0x19eac>
  41e7ac:	ldr	x27, [x19, #24]
  41e7b0:	mov	w9, #0x64                  	// #100
  41e7b4:	mov	x21, x0
  41e7b8:	add	x8, x27, #0x64
  41e7bc:	cmp	x27, #0x64
  41e7c0:	csel	x28, x9, x8, cc  // cc = lo, ul, last
  41e7c4:	add	x0, x28, #0x1
  41e7c8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41e7cc:	ldr	w8, [x19, #40]
  41e7d0:	ldr	x1, [x19, #16]
  41e7d4:	mov	x22, x0
  41e7d8:	str	w8, [sp, #20]
  41e7dc:	bl	404840 <strcpy@plt>
  41e7e0:	add	x8, x27, x0
  41e7e4:	ldurb	w8, [x8, #-1]
  41e7e8:	cmp	w8, #0x2f
  41e7ec:	b.eq	41e800 <wcrtomb@plt+0x19cc0>  // b.none
  41e7f0:	add	x8, x27, #0x1
  41e7f4:	mov	w9, #0x2f                  	// #47
  41e7f8:	strh	w9, [x22, x27]
  41e7fc:	mov	x27, x8
  41e800:	ldrb	w24, [x21]
  41e804:	str	x19, [sp, #24]
  41e808:	cbz	w24, 41e9d8 <wcrtomb@plt+0x19e98>
  41e80c:	add	x8, sp, #0x20
  41e810:	mov	x23, xzr
  41e814:	mov	x19, xzr
  41e818:	add	x8, x8, #0x58
  41e81c:	str	x8, [sp, #8]
  41e820:	b	41e850 <wcrtomb@plt+0x19d10>
  41e824:	neg	w19, w8
  41e828:	bl	404a10 <__errno_location@plt>
  41e82c:	str	w19, [x0]
  41e830:	mov	x0, x22
  41e834:	bl	41c358 <wcrtomb@plt+0x17818>
  41e838:	add	x0, sp, #0x20
  41e83c:	bl	424420 <wcrtomb@plt+0x1f8e0>
  41e840:	mov	x19, x25
  41e844:	add	x21, x24, x21
  41e848:	ldrb	w24, [x21, #1]!
  41e84c:	cbz	w24, 41e9dc <wcrtomb@plt+0x19e9c>
  41e850:	mov	x0, x21
  41e854:	bl	403f40 <strlen@plt>
  41e858:	and	w8, w24, #0xff
  41e85c:	cmp	w8, #0x44
  41e860:	mov	x24, x0
  41e864:	b.ne	41e844 <wcrtomb@plt+0x19d04>  // b.any
  41e868:	add	x8, x24, x27
  41e86c:	cmp	x28, x8
  41e870:	b.hi	41e894 <wcrtomb@plt+0x19d54>  // b.pmore
  41e874:	lsl	x28, x28, #1
  41e878:	cbz	x28, 41ea0c <wcrtomb@plt+0x19ecc>
  41e87c:	cmp	x28, x8
  41e880:	b.ls	41e874 <wcrtomb@plt+0x19d34>  // b.plast
  41e884:	orr	x1, x28, #0x1
  41e888:	mov	x0, x22
  41e88c:	bl	445a68 <argp_parse@@Base+0xe1bc>
  41e890:	mov	x22, x0
  41e894:	add	x26, x21, #0x1
  41e898:	add	x0, x22, x27
  41e89c:	mov	x1, x26
  41e8a0:	bl	404840 <strcpy@plt>
  41e8a4:	mov	w0, #0x60                  	// #96
  41e8a8:	bl	445be0 <argp_parse@@Base+0xe334>
  41e8ac:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  41e8b0:	cmp	x22, #0x0
  41e8b4:	add	x8, x8, #0x66
  41e8b8:	mov	x25, x0
  41e8bc:	csel	x0, x8, x22, eq  // eq = none
  41e8c0:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41e8c4:	str	x0, [x25, #16]
  41e8c8:	bl	403f40 <strlen@plt>
  41e8cc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e8d0:	ldr	w8, [x8, #1748]
  41e8d4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e8d8:	ldrb	w9, [x9, #1752]
  41e8dc:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e8e0:	ldr	w11, [sp, #20]
  41e8e4:	ldr	w10, [x10, #1756]
  41e8e8:	cmp	w8, #0x2
  41e8ec:	cset	w8, eq  // eq = none
  41e8f0:	cmp	w9, #0x0
  41e8f4:	mov	w9, #0x40000000            	// #1073741824
  41e8f8:	csel	w9, wzr, w9, ne  // ne = any
  41e8fc:	bfi	w9, w8, #28, #1
  41e900:	adrp	x12, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e904:	str	w11, [x25, #40]
  41e908:	ldr	x11, [sp, #24]
  41e90c:	ldr	x8, [x12, #1760]
  41e910:	orr	w9, w9, w10
  41e914:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e918:	ldr	w10, [x10, #3732]
  41e91c:	str	x11, [x25, #64]
  41e920:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e924:	cmp	x8, #0x0
  41e928:	add	x11, x11, #0x6e8
  41e92c:	stp	xzr, x8, [x25]
  41e930:	csel	x8, x11, x8, eq  // eq = none
  41e934:	orr	w9, w9, w10
  41e938:	str	x0, [x25, #24]
  41e93c:	stp	xzr, xzr, [x25, #48]
  41e940:	strb	wzr, [x25, #36]
  41e944:	str	w9, [x25, #32]
  41e948:	str	x25, [x8]
  41e94c:	str	x25, [x12, #1760]
  41e950:	cbz	x23, 41e95c <wcrtomb@plt+0x19e1c>
  41e954:	str	x25, [x19, #80]
  41e958:	b	41e960 <wcrtomb@plt+0x19e20>
  41e95c:	mov	x23, x25
  41e960:	add	x0, sp, #0x20
  41e964:	bl	42437c <wcrtomb@plt+0x1f83c>
  41e968:	str	x20, [sp, #424]
  41e96c:	ldr	w8, [x20, #408]
  41e970:	tbnz	w8, #31, 41e824 <wcrtomb@plt+0x19ce4>
  41e974:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41e978:	ldr	w8, [x8, #3764]
  41e97c:	mov	x0, x20
  41e980:	mov	x1, x26
  41e984:	orr	w2, w8, #0x4000
  41e988:	bl	40a770 <wcrtomb@plt+0x5c30>
  41e98c:	tbnz	w0, #31, 41e830 <wcrtomb@plt+0x19cf0>
  41e990:	ldr	x2, [sp, #8]
  41e994:	mov	w1, w0
  41e998:	str	w0, [sp, #440]
  41e99c:	mov	w0, wzr
  41e9a0:	bl	4048e0 <__fxstat@plt>
  41e9a4:	cbz	w0, 41e9b4 <wcrtomb@plt+0x19e74>
  41e9a8:	mov	x0, x22
  41e9ac:	bl	41c40c <wcrtomb@plt+0x178cc>
  41e9b0:	b	41e838 <wcrtomb@plt+0x19cf8>
  41e9b4:	mov	x0, x22
  41e9b8:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  41e9bc:	str	x0, [sp, #32]
  41e9c0:	add	x0, sp, #0x20
  41e9c4:	mov	x1, x25
  41e9c8:	bl	41e774 <wcrtomb@plt+0x19c34>
  41e9cc:	add	x0, sp, #0x20
  41e9d0:	bl	40c2a8 <wcrtomb@plt+0x7768>
  41e9d4:	b	41e838 <wcrtomb@plt+0x19cf8>
  41e9d8:	mov	x23, xzr
  41e9dc:	mov	x0, x22
  41e9e0:	bl	404700 <free@plt>
  41e9e4:	ldr	x8, [sp, #24]
  41e9e8:	str	x23, [x8, #72]
  41e9ec:	add	sp, sp, #0x1d0
  41e9f0:	ldp	x20, x19, [sp, #80]
  41e9f4:	ldp	x22, x21, [sp, #64]
  41e9f8:	ldp	x24, x23, [sp, #48]
  41e9fc:	ldp	x26, x25, [sp, #32]
  41ea00:	ldp	x28, x27, [sp, #16]
  41ea04:	ldp	x29, x30, [sp], #96
  41ea08:	ret
  41ea0c:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  41ea10:	ldr	x0, [x0, #16]
  41ea14:	ldr	x1, [x1, #16]
  41ea18:	b	404660 <strcmp@plt>
  41ea1c:	ldr	x0, [x0, #88]
  41ea20:	b	43b99c <argp_parse@@Base+0x40f0>
  41ea24:	stp	x29, x30, [sp, #-16]!
  41ea28:	ldr	x0, [x0, #88]
  41ea2c:	ldr	x1, [x1, #88]
  41ea30:	mov	x29, sp
  41ea34:	bl	404660 <strcmp@plt>
  41ea38:	cmp	w0, #0x0
  41ea3c:	cset	w0, eq  // eq = none
  41ea40:	ldp	x29, x30, [sp], #16
  41ea44:	ret
  41ea48:	stp	x29, x30, [sp, #-64]!
  41ea4c:	stp	x24, x23, [sp, #16]
  41ea50:	stp	x22, x21, [sp, #32]
  41ea54:	stp	x20, x19, [sp, #48]
  41ea58:	mov	x29, sp
  41ea5c:	cbz	x0, 41eac8 <wcrtomb@plt+0x19f88>
  41ea60:	ldr	x8, [x0, #64]
  41ea64:	ldp	x22, x21, [x1, #16]
  41ea68:	mov	x19, x0
  41ea6c:	ldr	x20, [x8, #24]
  41ea70:	ldr	x8, [x19, #24]
  41ea74:	sub	x8, x8, x20
  41ea78:	add	x24, x8, x21
  41ea7c:	add	x0, x24, #0x1
  41ea80:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41ea84:	mov	x1, x22
  41ea88:	mov	x23, x0
  41ea8c:	bl	404840 <strcpy@plt>
  41ea90:	ldr	x8, [x19, #16]
  41ea94:	add	x1, x8, x20
  41ea98:	bl	404340 <strcat@plt>
  41ea9c:	ldr	x0, [x19, #16]
  41eaa0:	bl	404700 <free@plt>
  41eaa4:	ldp	x0, x8, [x19, #56]
  41eaa8:	stp	x23, x24, [x19, #16]
  41eaac:	mov	x2, x20
  41eab0:	mov	x3, x22
  41eab4:	ldr	x1, [x8, #16]
  41eab8:	mov	x4, x21
  41eabc:	bl	414bb8 <wcrtomb@plt+0x10078>
  41eac0:	ldr	x19, [x19, #80]
  41eac4:	cbnz	x19, 41ea70 <wcrtomb@plt+0x19f30>
  41eac8:	ldp	x20, x19, [sp, #48]
  41eacc:	ldp	x22, x21, [sp, #32]
  41ead0:	ldp	x24, x23, [sp, #16]
  41ead4:	ldp	x29, x30, [sp], #64
  41ead8:	ret
  41eadc:	ldr	x8, [x1, #48]
  41eae0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41eae4:	ldr	x9, [x9, #3816]
  41eae8:	ldr	x10, [x0, #48]
  41eaec:	cmp	x8, #0x0
  41eaf0:	cset	w11, ne  // ne = any
  41eaf4:	cmp	x8, x9
  41eaf8:	cset	w8, cs  // cs = hs, nlast
  41eafc:	cmp	x10, #0x0
  41eb00:	cset	w12, ne  // ne = any
  41eb04:	cmp	x10, x9
  41eb08:	cset	w10, cs  // cs = hs, nlast
  41eb0c:	cmp	x9, #0x0
  41eb10:	csel	w8, w11, w8, eq  // eq = none
  41eb14:	csel	w9, w12, w10, eq  // eq = none
  41eb18:	subs	w8, w8, w9
  41eb1c:	b.eq	41eb28 <wcrtomb@plt+0x19fe8>  // b.none
  41eb20:	mov	w0, w8
  41eb24:	ret
  41eb28:	ldr	x0, [x0, #16]
  41eb2c:	ldr	x1, [x1, #16]
  41eb30:	b	404660 <strcmp@plt>
  41eb34:	stp	x29, x30, [sp, #-48]!
  41eb38:	stp	x22, x21, [sp, #16]
  41eb3c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41eb40:	stp	x20, x19, [sp, #32]
  41eb44:	ldr	x19, [x21, #1768]
  41eb48:	mov	x20, x0
  41eb4c:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41eb50:	mov	x29, sp
  41eb54:	cbnz	x19, 41eb64 <wcrtomb@plt+0x1a024>
  41eb58:	b	41ebb0 <wcrtomb@plt+0x1a070>
  41eb5c:	ldr	x19, [x19]
  41eb60:	cbz	x19, 41eb84 <wcrtomb@plt+0x1a044>
  41eb64:	ldr	x0, [x19, #16]
  41eb68:	ldrb	w8, [x0]
  41eb6c:	cbz	w8, 41eb5c <wcrtomb@plt+0x1a01c>
  41eb70:	ldr	w2, [x19, #32]
  41eb74:	mov	x1, x20
  41eb78:	bl	4394c0 <argp_parse@@Base+0x1c14>
  41eb7c:	tbz	w0, #0, 41eb5c <wcrtomb@plt+0x1a01c>
  41eb80:	b	41ebb0 <wcrtomb@plt+0x1a070>
  41eb84:	ldrb	w8, [x22, #3696]
  41eb88:	cbz	w8, 41ebb0 <wcrtomb@plt+0x1a070>
  41eb8c:	ldr	x8, [x21, #1768]
  41eb90:	cbz	x8, 41ebb0 <wcrtomb@plt+0x1a070>
  41eb94:	ldr	x8, [x8, #48]
  41eb98:	cbz	x8, 41ebac <wcrtomb@plt+0x1a06c>
  41eb9c:	bl	41d81c <wcrtomb@plt+0x18cdc>
  41eba0:	ldr	x19, [x21, #1768]
  41eba4:	ldr	x8, [x19, #48]
  41eba8:	cbz	x8, 41eb54 <wcrtomb@plt+0x1a014>
  41ebac:	mov	x19, xzr
  41ebb0:	mov	x0, x19
  41ebb4:	ldp	x20, x19, [sp, #32]
  41ebb8:	ldp	x22, x21, [sp, #16]
  41ebbc:	ldp	x29, x30, [sp], #48
  41ebc0:	ret
  41ebc4:	stp	x29, x30, [sp, #-32]!
  41ebc8:	str	x19, [sp, #16]
  41ebcc:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ebd0:	ldr	x8, [x19, #3072]
  41ebd4:	mov	x29, sp
  41ebd8:	cbnz	x8, 41ec00 <wcrtomb@plt+0x1a0c0>
  41ebdc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ebe0:	ldr	x8, [x8, #1768]
  41ebe4:	str	x8, [x19, #3072]
  41ebe8:	cbnz	x8, 41ec00 <wcrtomb@plt+0x1a0c0>
  41ebec:	mov	x0, xzr
  41ebf0:	b	41ec28 <wcrtomb@plt+0x1a0e8>
  41ebf4:	ldr	x8, [x8]
  41ebf8:	str	x8, [x19, #3072]
  41ebfc:	cbz	x8, 41ebec <wcrtomb@plt+0x1a0ac>
  41ec00:	ldr	x9, [x8, #48]
  41ec04:	cbnz	x9, 41ebf4 <wcrtomb@plt+0x1a0b4>
  41ec08:	ldr	x9, [x8, #16]
  41ec0c:	ldrb	w9, [x9]
  41ec10:	cbz	w9, 41ebf4 <wcrtomb@plt+0x1a0b4>
  41ec14:	ldr	w0, [x8, #40]
  41ec18:	mov	w9, #0x1                   	// #1
  41ec1c:	str	x9, [x8, #48]
  41ec20:	bl	41c19c <wcrtomb@plt+0x1765c>
  41ec24:	ldr	x0, [x19, #3072]
  41ec28:	ldr	x19, [sp, #16]
  41ec2c:	ldp	x29, x30, [sp], #32
  41ec30:	ret
  41ec34:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ec38:	ldr	x8, [x8, #1768]
  41ec3c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ec40:	str	xzr, [x9, #3072]
  41ec44:	cbz	x8, 41ec54 <wcrtomb@plt+0x1a114>
  41ec48:	str	xzr, [x8, #48]
  41ec4c:	ldr	x8, [x8]
  41ec50:	cbnz	x8, 41ec48 <wcrtomb@plt+0x1a108>
  41ec54:	ret
  41ec58:	stp	x29, x30, [sp, #-64]!
  41ec5c:	stp	x24, x23, [sp, #16]
  41ec60:	stp	x22, x21, [sp, #32]
  41ec64:	stp	x20, x19, [sp, #48]
  41ec68:	mov	x29, sp
  41ec6c:	mov	x19, x1
  41ec70:	mov	x20, x0
  41ec74:	bl	403f40 <strlen@plt>
  41ec78:	mov	x21, x0
  41ec7c:	mov	x0, x19
  41ec80:	bl	403f40 <strlen@plt>
  41ec84:	add	x22, x0, #0x1
  41ec88:	cbz	x21, 41eca0 <wcrtomb@plt+0x1a160>
  41ec8c:	add	x8, x21, x20
  41ec90:	ldurb	w8, [x8, #-1]
  41ec94:	cmp	w8, #0x2f
  41ec98:	cset	w24, ne  // ne = any
  41ec9c:	b	41eca4 <wcrtomb@plt+0x1a164>
  41eca0:	mov	x24, xzr
  41eca4:	add	x8, x22, x21
  41eca8:	add	x0, x8, x24
  41ecac:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41ecb0:	mov	x1, x20
  41ecb4:	mov	x2, x21
  41ecb8:	mov	x23, x0
  41ecbc:	bl	403ec0 <memcpy@plt>
  41ecc0:	add	x8, x23, x21
  41ecc4:	mov	w9, #0x2f                  	// #47
  41ecc8:	add	x0, x8, x24
  41eccc:	mov	x1, x19
  41ecd0:	mov	x2, x22
  41ecd4:	strb	w9, [x8]
  41ecd8:	bl	403ec0 <memcpy@plt>
  41ecdc:	mov	x0, x23
  41ece0:	ldp	x20, x19, [sp, #48]
  41ece4:	ldp	x22, x21, [sp, #32]
  41ece8:	ldp	x24, x23, [sp, #16]
  41ecec:	ldp	x29, x30, [sp], #64
  41ecf0:	ret
  41ecf4:	sub	x8, x0, #0x1
  41ecf8:	ldrb	w9, [x8, #1]!
  41ecfc:	cmp	w9, #0x2f
  41ed00:	b.eq	41ecf8 <wcrtomb@plt+0x1a1b8>  // b.none
  41ed04:	cbnz	w9, 41ed1c <wcrtomb@plt+0x1a1dc>
  41ed08:	mov	x0, #0xffffffffffffffff    	// #-1
  41ed0c:	ret
  41ed10:	ldrb	w9, [x10]
  41ed14:	mov	x8, x10
  41ed18:	cbz	w9, 41ed08 <wcrtomb@plt+0x1a1c8>
  41ed1c:	and	w9, w9, #0xff
  41ed20:	cmp	w9, #0x2f
  41ed24:	add	x10, x8, #0x1
  41ed28:	b.ne	41ed10 <wcrtomb@plt+0x1a1d0>  // b.any
  41ed2c:	subs	x1, x1, #0x1
  41ed30:	b.eq	41ed44 <wcrtomb@plt+0x1a204>  // b.none
  41ed34:	ldrb	w9, [x8, #1]!
  41ed38:	cmp	w9, #0x2f
  41ed3c:	b.eq	41ed34 <wcrtomb@plt+0x1a1f4>  // b.none
  41ed40:	b	41ed18 <wcrtomb@plt+0x1a1d8>
  41ed44:	sub	x0, x10, x0
  41ed48:	ret
  41ed4c:	ldrb	w8, [x0]
  41ed50:	cmp	w8, #0x2e
  41ed54:	b.ne	41ed74 <wcrtomb@plt+0x1a234>  // b.any
  41ed58:	ldrb	w9, [x0, #1]
  41ed5c:	cmp	w9, #0x2e
  41ed60:	b.ne	41ed74 <wcrtomb@plt+0x1a234>  // b.any
  41ed64:	ldrb	w9, [x0, #2]
  41ed68:	cbz	w9, 41ed9c <wcrtomb@plt+0x1a25c>
  41ed6c:	cmp	w9, #0x2f
  41ed70:	b.eq	41ed9c <wcrtomb@plt+0x1a25c>  // b.none
  41ed74:	add	x0, x0, #0x1
  41ed78:	ands	w8, w8, #0xff
  41ed7c:	b.eq	41ed94 <wcrtomb@plt+0x1a254>  // b.none
  41ed80:	cmp	w8, #0x2f
  41ed84:	b.eq	41ed4c <wcrtomb@plt+0x1a20c>  // b.none
  41ed88:	ldrb	w8, [x0], #1
  41ed8c:	ands	w8, w8, #0xff
  41ed90:	b.ne	41ed80 <wcrtomb@plt+0x1a240>  // b.any
  41ed94:	mov	w0, wzr
  41ed98:	ret
  41ed9c:	mov	w0, #0x1                   	// #1
  41eda0:	ret
  41eda4:	stp	x29, x30, [sp, #-48]!
  41eda8:	stp	x20, x19, [sp, #32]
  41edac:	cmp	w0, #0x43
  41edb0:	mov	x19, x1
  41edb4:	str	x21, [sp, #16]
  41edb8:	mov	x29, sp
  41edbc:	b.eq	41ee4c <wcrtomb@plt+0x1a30c>  // b.none
  41edc0:	mov	w20, w0
  41edc4:	cmp	w0, #0x54
  41edc8:	b.eq	41eeb8 <wcrtomb@plt+0x1a378>  // b.none
  41edcc:	cmp	w20, #0x100
  41edd0:	b.ne	41ef38 <wcrtomb@plt+0x1a3f8>  // b.any
  41edd4:	mov	w0, #0x38                  	// #56
  41edd8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41eddc:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ede0:	ldr	x9, [x20, #1776]
  41ede4:	mov	x8, x0
  41ede8:	cbnz	x9, 41ee0c <wcrtomb@plt+0x1a2cc>
  41edec:	mov	w9, #0x3                   	// #3
  41edf0:	mov	w0, #0x38                  	// #56
  41edf4:	str	x8, [x20, #1776]
  41edf8:	stp	xzr, xzr, [x8]
  41edfc:	str	w9, [x8, #16]
  41ee00:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41ee04:	ldr	x9, [x20, #1776]
  41ee08:	mov	x8, x0
  41ee0c:	ldr	x10, [x9, #8]
  41ee10:	str	x10, [x8, #8]
  41ee14:	ldr	x10, [x9, #8]
  41ee18:	cbz	x10, 41ee24 <wcrtomb@plt+0x1a2e4>
  41ee1c:	str	x8, [x10]
  41ee20:	ldr	x9, [x20, #1776]
  41ee24:	str	x9, [x8]
  41ee28:	str	x8, [x9, #8]
  41ee2c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ee30:	ldr	x10, [x9, #3064]
  41ee34:	str	wzr, [x8, #16]
  41ee38:	str	x19, [x8, #24]
  41ee3c:	mov	w0, wzr
  41ee40:	add	x8, x10, #0x1
  41ee44:	str	x8, [x9, #3064]
  41ee48:	b	41efdc <wcrtomb@plt+0x1a49c>
  41ee4c:	mov	w0, #0x38                  	// #56
  41ee50:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41ee54:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ee58:	ldr	x9, [x20, #1776]
  41ee5c:	mov	x8, x0
  41ee60:	cbnz	x9, 41ee84 <wcrtomb@plt+0x1a344>
  41ee64:	mov	w9, #0x3                   	// #3
  41ee68:	mov	w0, #0x38                  	// #56
  41ee6c:	str	x8, [x20, #1776]
  41ee70:	stp	xzr, xzr, [x8]
  41ee74:	str	w9, [x8, #16]
  41ee78:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41ee7c:	ldr	x9, [x20, #1776]
  41ee80:	mov	x8, x0
  41ee84:	ldr	x10, [x9, #8]
  41ee88:	str	x10, [x8, #8]
  41ee8c:	ldr	x10, [x9, #8]
  41ee90:	cbz	x10, 41ee9c <wcrtomb@plt+0x1a35c>
  41ee94:	str	x8, [x10]
  41ee98:	ldr	x9, [x20, #1776]
  41ee9c:	str	x9, [x8]
  41eea0:	str	x8, [x9, #8]
  41eea4:	mov	w9, #0x1                   	// #1
  41eea8:	mov	w0, wzr
  41eeac:	str	w9, [x8, #16]
  41eeb0:	str	x19, [x8, #24]
  41eeb4:	b	41efdc <wcrtomb@plt+0x1a49c>
  41eeb8:	mov	w0, #0x38                  	// #56
  41eebc:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41eec0:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41eec4:	ldr	x9, [x20, #1776]
  41eec8:	mov	x8, x0
  41eecc:	cbnz	x9, 41eef0 <wcrtomb@plt+0x1a3b0>
  41eed0:	mov	w9, #0x3                   	// #3
  41eed4:	mov	w0, #0x38                  	// #56
  41eed8:	str	x8, [x20, #1776]
  41eedc:	stp	xzr, xzr, [x8]
  41eee0:	str	w9, [x8, #16]
  41eee4:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41eee8:	ldr	x9, [x20, #1776]
  41eeec:	mov	x8, x0
  41eef0:	ldr	x10, [x9, #8]
  41eef4:	str	x10, [x8, #8]
  41eef8:	ldr	x10, [x9, #8]
  41eefc:	cbz	x10, 41ef08 <wcrtomb@plt+0x1a3c8>
  41ef00:	str	x8, [x10]
  41ef04:	ldr	x9, [x20, #1776]
  41ef08:	str	x9, [x8]
  41ef0c:	str	x8, [x9, #8]
  41ef10:	mov	w9, #0x2                   	// #2
  41ef14:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ef18:	str	w9, [x8, #16]
  41ef1c:	ldr	x9, [x10, #3064]
  41ef20:	stp	x19, xzr, [x8, #24]
  41ef24:	str	xzr, [x8, #48]
  41ef28:	mov	w0, wzr
  41ef2c:	add	x8, x9, #0x1
  41ef30:	str	x8, [x10, #3064]
  41ef34:	b	41efdc <wcrtomb@plt+0x1a49c>
  41ef38:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  41ef3c:	add	x8, x8, #0x7f0
  41ef40:	b	41ef50 <wcrtomb@plt+0x1a410>
  41ef44:	cmp	w9, w20
  41ef48:	add	x8, x8, #0x30
  41ef4c:	b.eq	41ef70 <wcrtomb@plt+0x1a430>  // b.none
  41ef50:	ldur	x10, [x8, #-32]
  41ef54:	ldur	w9, [x8, #-24]
  41ef58:	cbnz	x10, 41ef44 <wcrtomb@plt+0x1a404>
  41ef5c:	cbnz	w9, 41ef44 <wcrtomb@plt+0x1a404>
  41ef60:	ldr	x10, [x8]
  41ef64:	cbnz	x10, 41ef44 <wcrtomb@plt+0x1a404>
  41ef68:	mov	w0, #0x7                   	// #7
  41ef6c:	b	41efdc <wcrtomb@plt+0x1a49c>
  41ef70:	mov	w0, #0x38                  	// #56
  41ef74:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41ef78:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41ef7c:	ldr	x9, [x21, #1776]
  41ef80:	mov	x8, x0
  41ef84:	cbnz	x9, 41efa8 <wcrtomb@plt+0x1a468>
  41ef88:	mov	w9, #0x3                   	// #3
  41ef8c:	mov	w0, #0x38                  	// #56
  41ef90:	str	x8, [x21, #1776]
  41ef94:	stp	xzr, xzr, [x8]
  41ef98:	str	w9, [x8, #16]
  41ef9c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  41efa0:	ldr	x9, [x21, #1776]
  41efa4:	mov	x8, x0
  41efa8:	ldr	x10, [x9, #8]
  41efac:	str	x10, [x8, #8]
  41efb0:	ldr	x10, [x9, #8]
  41efb4:	cbz	x10, 41efc0 <wcrtomb@plt+0x1a480>
  41efb8:	str	x8, [x10]
  41efbc:	ldr	x9, [x21, #1776]
  41efc0:	mov	w0, wzr
  41efc4:	str	x9, [x8]
  41efc8:	str	x8, [x9, #8]
  41efcc:	mov	w9, #0x4                   	// #4
  41efd0:	str	w20, [x8, #24]
  41efd4:	str	w9, [x8, #16]
  41efd8:	str	x19, [x8, #32]
  41efdc:	ldp	x20, x19, [sp, #32]
  41efe0:	ldr	x21, [sp, #16]
  41efe4:	ldp	x29, x30, [sp], #48
  41efe8:	ret
  41efec:	sub	sp, sp, #0x40
  41eff0:	stp	x20, x19, [sp, #48]
  41eff4:	cmp	w1, #0x1
  41eff8:	mov	x20, x0
  41effc:	stp	x29, x30, [sp, #16]
  41f000:	stp	x22, x21, [sp, #32]
  41f004:	add	x29, sp, #0x10
  41f008:	b.eq	41f11c <wcrtomb@plt+0x1a5dc>  // b.none
  41f00c:	mov	x19, x2
  41f010:	cmp	w1, #0x2
  41f014:	b.ne	41f044 <wcrtomb@plt+0x1a504>  // b.any
  41f018:	ldr	x1, [x20]
  41f01c:	mov	x0, x20
  41f020:	blr	x19
  41f024:	cmp	w0, #0x1
  41f028:	b.lt	41f11c <wcrtomb@plt+0x1a5dc>  // b.tstop
  41f02c:	ldr	x8, [x20]
  41f030:	str	x8, [sp, #8]
  41f034:	str	x20, [x8]
  41f038:	str	xzr, [x20]
  41f03c:	mov	x20, x8
  41f040:	b	41f11c <wcrtomb@plt+0x1a5dc>
  41f044:	add	w8, w1, #0x1
  41f048:	add	w9, w1, #0x2
  41f04c:	cmp	w8, #0x0
  41f050:	csinc	w8, w9, w1, lt  // lt = tstop
  41f054:	asr	w8, w8, #1
  41f058:	mov	x21, x20
  41f05c:	mov	w10, w8
  41f060:	mov	x9, x21
  41f064:	ldr	x21, [x21]
  41f068:	subs	w10, w10, #0x1
  41f06c:	b.ne	41f060 <wcrtomb@plt+0x1a520>  // b.any
  41f070:	cmp	w1, #0x0
  41f074:	cinc	w10, w1, lt  // lt = tstop
  41f078:	mov	x0, x20
  41f07c:	mov	w1, w8
  41f080:	mov	x2, x19
  41f084:	asr	w22, w10, #1
  41f088:	str	xzr, [x9]
  41f08c:	bl	41efec <wcrtomb@plt+0x1a4ac>
  41f090:	mov	x20, x0
  41f094:	mov	x0, x21
  41f098:	mov	w1, w22
  41f09c:	mov	x2, x19
  41f0a0:	bl	41efec <wcrtomb@plt+0x1a4ac>
  41f0a4:	cmp	x20, #0x0
  41f0a8:	mov	x21, x0
  41f0ac:	cset	w9, ne  // ne = any
  41f0b0:	add	x8, sp, #0x8
  41f0b4:	cbz	x0, 41f10c <wcrtomb@plt+0x1a5cc>
  41f0b8:	cbz	x20, 41f10c <wcrtomb@plt+0x1a5cc>
  41f0bc:	add	x22, sp, #0x8
  41f0c0:	mov	x0, x20
  41f0c4:	mov	x1, x21
  41f0c8:	blr	x19
  41f0cc:	tbnz	w0, #31, 41f0e4 <wcrtomb@plt+0x1a5a4>
  41f0d0:	ldr	x10, [x21]
  41f0d4:	mov	x8, x21
  41f0d8:	mov	x9, x21
  41f0dc:	mov	x21, x10
  41f0e0:	b	41f0f4 <wcrtomb@plt+0x1a5b4>
  41f0e4:	ldr	x10, [x20]
  41f0e8:	mov	x8, x20
  41f0ec:	mov	x9, x20
  41f0f0:	mov	x20, x10
  41f0f4:	cmp	x20, #0x0
  41f0f8:	str	x9, [x22]
  41f0fc:	cset	w9, ne  // ne = any
  41f100:	cbz	x21, 41f10c <wcrtomb@plt+0x1a5cc>
  41f104:	mov	x22, x8
  41f108:	cbnz	x20, 41f0c0 <wcrtomb@plt+0x1a580>
  41f10c:	cmp	w9, #0x0
  41f110:	csel	x9, x20, x21, ne  // ne = any
  41f114:	str	x9, [x8]
  41f118:	ldr	x20, [sp, #8]
  41f11c:	mov	x0, x20
  41f120:	ldp	x20, x19, [sp, #48]
  41f124:	ldp	x22, x21, [sp, #32]
  41f128:	ldp	x29, x30, [sp, #16]
  41f12c:	add	sp, sp, #0x40
  41f130:	ret
  41f134:	stp	x29, x30, [sp, #-96]!
  41f138:	stp	x28, x27, [sp, #16]
  41f13c:	stp	x26, x25, [sp, #32]
  41f140:	stp	x24, x23, [sp, #48]
  41f144:	stp	x22, x21, [sp, #64]
  41f148:	stp	x20, x19, [sp, #80]
  41f14c:	mov	x29, sp
  41f150:	sub	sp, sp, #0x230
  41f154:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41f158:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41f15c:	ldr	w8, [x8, #3008]
  41f160:	ldr	w9, [x9, #3872]
  41f164:	movi	v0.2d, #0x0
  41f168:	stp	q0, q0, [sp, #16]
  41f16c:	cmp	w8, #0x0
  41f170:	csel	w8, w9, w8, eq  // eq = none
  41f174:	sub	w8, w8, #0x2
  41f178:	cmp	w8, #0x4
  41f17c:	str	q0, [sp]
  41f180:	b.hi	41f220 <wcrtomb@plt+0x1a6e0>  // b.pmore
  41f184:	mov	w9, #0x1d                  	// #29
  41f188:	lsr	w9, w9, w8
  41f18c:	tbz	w9, #0, 41f220 <wcrtomb@plt+0x1a6e0>
  41f190:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41f194:	add	x9, x9, #0x758
  41f198:	ldr	x8, [x9, w8, sxtw #3]
  41f19c:	mov	x20, x1
  41f1a0:	mov	w19, w0
  41f1a4:	str	x8, [sp, #32]
  41f1a8:	ldr	x8, [x8]
  41f1ac:	cbz	x8, 41f1bc <wcrtomb@plt+0x1a67c>
  41f1b0:	mov	x0, sp
  41f1b4:	blr	x8
  41f1b8:	tbz	w0, #0, 41f220 <wcrtomb@plt+0x1a6e0>
  41f1bc:	mov	w8, #0x1                   	// #1
  41f1c0:	str	x20, [sp, #24]
  41f1c4:	str	w19, [sp]
  41f1c8:	strb	w8, [sp, #4]
  41f1cc:	ldr	x8, [x20, #152]
  41f1d0:	cbz	x8, 41f244 <wcrtomb@plt+0x1a704>
  41f1d4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41f1d8:	ldr	w8, [x8, #3972]
  41f1dc:	cmp	w8, #0x2
  41f1e0:	b.eq	41f1f0 <wcrtomb@plt+0x1a6b0>  // b.none
  41f1e4:	cmp	w8, #0x1
  41f1e8:	b.eq	41f37c <wcrtomb@plt+0x1a83c>  // b.none
  41f1ec:	cbnz	w8, 41f628 <wcrtomb@plt+0x1aae8>
  41f1f0:	mov	w2, #0x3                   	// #3
  41f1f4:	mov	w0, w19
  41f1f8:	mov	x1, xzr
  41f1fc:	str	xzr, [x20, #264]
  41f200:	bl	404120 <lseek@plt>
  41f204:	cmn	x0, #0x1
  41f208:	b.eq	41f330 <wcrtomb@plt+0x1a7f0>  // b.none
  41f20c:	mov	x23, #0x5555555555555555    	// #6148914691236517205
  41f210:	mov	x21, x0
  41f214:	mov	x22, xzr
  41f218:	movk	x23, #0x555, lsl #48
  41f21c:	b	41f2cc <wcrtomb@plt+0x1a78c>
  41f220:	mov	w0, #0x3                   	// #3
  41f224:	add	sp, sp, #0x230
  41f228:	ldp	x20, x19, [sp, #80]
  41f22c:	ldp	x22, x21, [sp, #64]
  41f230:	ldp	x24, x23, [sp, #48]
  41f234:	ldp	x26, x25, [sp, #32]
  41f238:	ldp	x28, x27, [sp, #16]
  41f23c:	ldp	x29, x30, [sp], #96
  41f240:	ret
  41f244:	ldp	x21, x8, [x20, #288]
  41f248:	ldr	x22, [x20, #136]
  41f24c:	ldr	x0, [x20, #304]
  41f250:	str	xzr, [x20, #264]
  41f254:	cmp	x21, x8
  41f258:	b.ne	41f550 <wcrtomb@plt+0x1aa10>  // b.any
  41f25c:	cbz	x0, 41f358 <wcrtomb@plt+0x1a818>
  41f260:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  41f264:	movk	x8, #0x555, lsl #48
  41f268:	cmp	x21, x8
  41f26c:	b.cs	41f538 <wcrtomb@plt+0x1a9f8>  // b.hs, b.nlast
  41f270:	add	x8, x21, x21, lsr #1
  41f274:	add	x8, x8, #0x1
  41f278:	b	41f540 <wcrtomb@plt+0x1aa00>
  41f27c:	mov	w8, #0x8                   	// #8
  41f280:	lsl	x1, x8, #4
  41f284:	str	x8, [x20, #296]
  41f288:	bl	445a68 <argp_parse@@Base+0xe1bc>
  41f28c:	str	x0, [x20, #304]
  41f290:	sub	x8, x22, x21
  41f294:	add	x9, x0, x24, lsl #4
  41f298:	stp	x21, x8, [x9]
  41f29c:	ldr	x9, [x20, #264]
  41f2a0:	add	x10, x24, #0x1
  41f2a4:	mov	w2, #0x3                   	// #3
  41f2a8:	mov	w0, w19
  41f2ac:	add	x8, x9, x8
  41f2b0:	mov	x1, x22
  41f2b4:	str	x10, [x20, #288]
  41f2b8:	str	x8, [x20, #264]
  41f2bc:	bl	404120 <lseek@plt>
  41f2c0:	mov	x21, x0
  41f2c4:	cmn	x0, #0x1
  41f2c8:	b.eq	41f330 <wcrtomb@plt+0x1a7f0>  // b.none
  41f2cc:	mov	w2, #0x4                   	// #4
  41f2d0:	mov	w0, w19
  41f2d4:	mov	x1, x21
  41f2d8:	bl	404120 <lseek@plt>
  41f2dc:	orr	x8, x22, x21
  41f2e0:	mov	x22, x0
  41f2e4:	cbnz	x8, 41f2f4 <wcrtomb@plt+0x1a7b4>
  41f2e8:	ldr	x8, [x20, #136]
  41f2ec:	cmp	x22, x8
  41f2f0:	b.eq	41f36c <wcrtomb@plt+0x1a82c>  // b.none
  41f2f4:	ldp	x24, x8, [x20, #288]
  41f2f8:	ldr	x0, [x20, #304]
  41f2fc:	cmp	x24, x8
  41f300:	b.ne	41f290 <wcrtomb@plt+0x1a750>  // b.any
  41f304:	cbz	x0, 41f31c <wcrtomb@plt+0x1a7dc>
  41f308:	cmp	x24, x23
  41f30c:	b.cs	41f538 <wcrtomb@plt+0x1a9f8>  // b.hs, b.nlast
  41f310:	add	x8, x24, x24, lsr #1
  41f314:	add	x8, x8, #0x1
  41f318:	b	41f280 <wcrtomb@plt+0x1a740>
  41f31c:	cbz	x24, 41f27c <wcrtomb@plt+0x1a73c>
  41f320:	lsr	x9, x24, #59
  41f324:	mov	x8, x24
  41f328:	cbz	x9, 41f280 <wcrtomb@plt+0x1a740>
  41f32c:	b	41f538 <wcrtomb@plt+0x1a9f8>
  41f330:	bl	404a10 <__errno_location@plt>
  41f334:	ldr	w8, [x0]
  41f338:	cmp	w8, #0x6
  41f33c:	b.ne	41f37c <wcrtomb@plt+0x1a83c>  // b.any
  41f340:	ldp	x21, x8, [x20, #288]
  41f344:	ldr	x22, [x20, #136]
  41f348:	ldr	x0, [x20, #304]
  41f34c:	cmp	x21, x8
  41f350:	b.ne	41f550 <wcrtomb@plt+0x1aa10>  // b.any
  41f354:	cbnz	x0, 41f260 <wcrtomb@plt+0x1a720>
  41f358:	cbz	x21, 41f53c <wcrtomb@plt+0x1a9fc>
  41f35c:	lsr	x9, x21, #59
  41f360:	mov	x8, x21
  41f364:	cbz	x9, 41f540 <wcrtomb@plt+0x1aa00>
  41f368:	b	41f538 <wcrtomb@plt+0x1a9f8>
  41f36c:	mov	w0, w19
  41f370:	mov	x1, xzr
  41f374:	mov	w2, wzr
  41f378:	bl	404120 <lseek@plt>
  41f37c:	ldp	x22, x8, [sp, #24]
  41f380:	ldr	w21, [sp]
  41f384:	str	xzr, [x22, #264]
  41f388:	ldr	x8, [x8, #48]
  41f38c:	cbz	x8, 41f3a4 <wcrtomb@plt+0x1a864>
  41f390:	mov	x0, sp
  41f394:	mov	w1, wzr
  41f398:	mov	x2, xzr
  41f39c:	blr	x8
  41f3a0:	tbz	w0, #0, 41f628 <wcrtomb@plt+0x1aae8>
  41f3a4:	add	x1, sp, #0x30
  41f3a8:	mov	w2, #0x200                 	// #512
  41f3ac:	mov	w0, w21
  41f3b0:	bl	41bd20 <wcrtomb@plt+0x171e0>
  41f3b4:	add	x8, x0, #0x1
  41f3b8:	mov	x20, x0
  41f3bc:	cmp	x8, #0x2
  41f3c0:	b.cc	41f4e4 <wcrtomb@plt+0x1a9a4>  // b.lo, b.ul, b.last
  41f3c4:	mov	x26, #0x5555555555555555    	// #6148914691236517205
  41f3c8:	mov	x25, xzr
  41f3cc:	mov	x24, xzr
  41f3d0:	mov	x23, xzr
  41f3d4:	movk	x26, #0x555, lsl #48
  41f3d8:	b	41f404 <wcrtomb@plt+0x1a8c4>
  41f3dc:	mov	x24, xzr
  41f3e0:	add	x1, sp, #0x30
  41f3e4:	mov	w2, #0x200                 	// #512
  41f3e8:	mov	w0, w21
  41f3ec:	add	x25, x25, x20
  41f3f0:	bl	41bd20 <wcrtomb@plt+0x171e0>
  41f3f4:	add	x8, x0, #0x1
  41f3f8:	mov	x20, x0
  41f3fc:	cmp	x8, #0x1
  41f400:	b.ls	41f4f4 <wcrtomb@plt+0x1a9b4>  // b.plast
  41f404:	add	x8, sp, #0x30
  41f408:	mov	x9, x20
  41f40c:	cbz	x9, 41f458 <wcrtomb@plt+0x1a918>
  41f410:	ldrb	w10, [x8], #1
  41f414:	sub	x9, x9, #0x1
  41f418:	cbz	w10, 41f40c <wcrtomb@plt+0x1a8cc>
  41f41c:	ldr	x8, [x22, #264]
  41f420:	cmp	x24, #0x0
  41f424:	csel	x23, x25, x23, eq  // eq = none
  41f428:	add	x24, x24, x20
  41f42c:	add	x8, x8, x20
  41f430:	str	x8, [x22, #264]
  41f434:	ldr	x8, [sp, #32]
  41f438:	ldr	x8, [x8, #48]
  41f43c:	cbz	x8, 41f3e0 <wcrtomb@plt+0x1a8a0>
  41f440:	mov	x0, sp
  41f444:	add	x2, sp, #0x30
  41f448:	mov	w1, #0x1                   	// #1
  41f44c:	blr	x8
  41f450:	tbnz	w0, #0, 41f3e0 <wcrtomb@plt+0x1a8a0>
  41f454:	b	41f628 <wcrtomb@plt+0x1aae8>
  41f458:	cbz	x24, 41f3e0 <wcrtomb@plt+0x1a8a0>
  41f45c:	ldp	x27, x8, [x22, #288]
  41f460:	ldr	x0, [x22, #304]
  41f464:	cmp	x27, x8
  41f468:	b.ne	41f4ac <wcrtomb@plt+0x1a96c>  // b.any
  41f46c:	cbz	x0, 41f484 <wcrtomb@plt+0x1a944>
  41f470:	cmp	x27, x26
  41f474:	b.cs	41f538 <wcrtomb@plt+0x1a9f8>  // b.hs, b.nlast
  41f478:	add	x8, x27, x27, lsr #1
  41f47c:	add	x8, x8, #0x1
  41f480:	b	41f49c <wcrtomb@plt+0x1a95c>
  41f484:	cbz	x27, 41f498 <wcrtomb@plt+0x1a958>
  41f488:	lsr	x9, x27, #59
  41f48c:	mov	x8, x27
  41f490:	cbz	x9, 41f49c <wcrtomb@plt+0x1a95c>
  41f494:	b	41f538 <wcrtomb@plt+0x1a9f8>
  41f498:	mov	w8, #0x8                   	// #8
  41f49c:	lsl	x1, x8, #4
  41f4a0:	str	x8, [x22, #296]
  41f4a4:	bl	445a68 <argp_parse@@Base+0xe1bc>
  41f4a8:	str	x0, [x22, #304]
  41f4ac:	add	x8, x0, x27, lsl #4
  41f4b0:	add	x9, x27, #0x1
  41f4b4:	stp	x23, x24, [x8]
  41f4b8:	str	x9, [x22, #288]
  41f4bc:	ldr	x8, [sp, #32]
  41f4c0:	ldr	x8, [x8, #48]
  41f4c4:	cbz	x8, 41f3dc <wcrtomb@plt+0x1a89c>
  41f4c8:	mov	x0, sp
  41f4cc:	mov	w1, #0x1                   	// #1
  41f4d0:	mov	x2, xzr
  41f4d4:	blr	x8
  41f4d8:	mov	x24, xzr
  41f4dc:	tbnz	w0, #0, 41f3e0 <wcrtomb@plt+0x1a8a0>
  41f4e0:	b	41f628 <wcrtomb@plt+0x1aae8>
  41f4e4:	mov	x25, xzr
  41f4e8:	mov	x24, xzr
  41f4ec:	mov	x23, x25
  41f4f0:	b	41f4f8 <wcrtomb@plt+0x1a9b8>
  41f4f4:	cbz	x24, 41f4e8 <wcrtomb@plt+0x1a9a8>
  41f4f8:	ldp	x21, x8, [x22, #288]
  41f4fc:	ldr	x0, [x22, #304]
  41f500:	cmp	x21, x8
  41f504:	b.ne	41f5ec <wcrtomb@plt+0x1aaac>  // b.any
  41f508:	cbz	x0, 41f528 <wcrtomb@plt+0x1a9e8>
  41f50c:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  41f510:	movk	x8, #0x555, lsl #48
  41f514:	cmp	x21, x8
  41f518:	b.cs	41f538 <wcrtomb@plt+0x1a9f8>  // b.hs, b.nlast
  41f51c:	add	x8, x21, x21, lsr #1
  41f520:	add	x8, x8, #0x1
  41f524:	b	41f5dc <wcrtomb@plt+0x1aa9c>
  41f528:	cbz	x21, 41f5d8 <wcrtomb@plt+0x1aa98>
  41f52c:	lsr	x9, x21, #59
  41f530:	mov	x8, x21
  41f534:	cbz	x9, 41f5dc <wcrtomb@plt+0x1aa9c>
  41f538:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  41f53c:	mov	w8, #0x8                   	// #8
  41f540:	lsl	x1, x8, #4
  41f544:	str	x8, [x20, #296]
  41f548:	bl	445a68 <argp_parse@@Base+0xe1bc>
  41f54c:	str	x0, [x20, #304]
  41f550:	add	x8, x0, x21, lsl #4
  41f554:	add	x9, x21, #0x1
  41f558:	stp	x22, xzr, [x8]
  41f55c:	str	x9, [x20, #288]
  41f560:	ldr	x8, [sp, #32]
  41f564:	ldr	x9, [x8, #56]
  41f568:	cbz	x9, 41f5d0 <wcrtomb@plt+0x1aa90>
  41f56c:	ldr	x8, [x8, #24]
  41f570:	cbz	x8, 41f57c <wcrtomb@plt+0x1aa3c>
  41f574:	mov	x0, sp
  41f578:	blr	x8
  41f57c:	tbnz	w19, #31, 41f5d0 <wcrtomb@plt+0x1aa90>
  41f580:	ldp	x9, x8, [sp, #16]
  41f584:	ldr	x10, [x8, #264]
  41f588:	ldr	x0, [x8, #8]
  41f58c:	ldr	x1, [x8, #136]
  41f590:	sub	x2, x10, x9
  41f594:	bl	404c5c <wcrtomb@plt+0x11c>
  41f598:	mov	x19, xzr
  41f59c:	ldr	x8, [sp, #24]
  41f5a0:	ldr	x8, [x8, #288]
  41f5a4:	cmp	x19, x8
  41f5a8:	b.cs	41f5d0 <wcrtomb@plt+0x1aa90>  // b.hs, b.nlast
  41f5ac:	ldr	x8, [sp, #32]
  41f5b0:	ldr	x8, [x8, #56]
  41f5b4:	cbz	x8, 41f628 <wcrtomb@plt+0x1aae8>
  41f5b8:	mov	x0, sp
  41f5bc:	mov	x1, x19
  41f5c0:	blr	x8
  41f5c4:	add	x19, x19, #0x1
  41f5c8:	tbnz	w0, #0, 41f59c <wcrtomb@plt+0x1aa5c>
  41f5cc:	b	41f628 <wcrtomb@plt+0x1aae8>
  41f5d0:	mov	w19, #0x1                   	// #1
  41f5d4:	b	41f62c <wcrtomb@plt+0x1aaec>
  41f5d8:	mov	w8, #0x8                   	// #8
  41f5dc:	lsl	x1, x8, #4
  41f5e0:	str	x8, [x22, #296]
  41f5e4:	bl	445a68 <argp_parse@@Base+0xe1bc>
  41f5e8:	str	x0, [x22, #304]
  41f5ec:	add	x8, x0, x21, lsl #4
  41f5f0:	stp	x23, x24, [x8]
  41f5f4:	ldr	x8, [x22, #264]
  41f5f8:	add	x9, x21, #0x1
  41f5fc:	str	x9, [x22, #288]
  41f600:	add	x8, x8, x20
  41f604:	str	x8, [x22, #264]
  41f608:	ldr	x8, [sp, #32]
  41f60c:	ldr	x8, [x8, #48]
  41f610:	cbz	x8, 41f560 <wcrtomb@plt+0x1aa20>
  41f614:	mov	x0, sp
  41f618:	mov	w1, #0x2                   	// #2
  41f61c:	mov	x2, xzr
  41f620:	blr	x8
  41f624:	tbnz	w0, #0, 41f560 <wcrtomb@plt+0x1aa20>
  41f628:	mov	w19, wzr
  41f62c:	ldp	x9, x8, [sp, #16]
  41f630:	ldr	x8, [x8, #264]
  41f634:	sub	x0, x8, x9
  41f638:	bl	40bca0 <wcrtomb@plt+0x7160>
  41f63c:	ldr	x8, [sp, #32]
  41f640:	ldr	x8, [x8, #8]
  41f644:	cbz	x8, 41f654 <wcrtomb@plt+0x1ab14>
  41f648:	mov	x0, sp
  41f64c:	blr	x8
  41f650:	b	41f658 <wcrtomb@plt+0x1ab18>
  41f654:	mov	w0, #0x1                   	// #1
  41f658:	and	w8, w19, w0
  41f65c:	eor	w0, w8, #0x1
  41f660:	b	41f224 <wcrtomb@plt+0x1a6e4>
  41f664:	sub	sp, sp, #0x50
  41f668:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41f66c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41f670:	ldr	w8, [x8, #3008]
  41f674:	ldr	w9, [x9, #3872]
  41f678:	movi	v0.2d, #0x0
  41f67c:	stp	x29, x30, [sp, #48]
  41f680:	cmp	w8, #0x0
  41f684:	csel	w8, w9, w8, eq  // eq = none
  41f688:	sub	w8, w8, #0x2
  41f68c:	cmp	w8, #0x4
  41f690:	str	x19, [sp, #64]
  41f694:	add	x29, sp, #0x30
  41f698:	stp	q0, q0, [sp, #16]
  41f69c:	str	q0, [sp]
  41f6a0:	b.hi	41f6f4 <wcrtomb@plt+0x1abb4>  // b.pmore
  41f6a4:	mov	w9, #0x1d                  	// #29
  41f6a8:	lsr	w9, w9, w8
  41f6ac:	tbz	w9, #0, 41f6f4 <wcrtomb@plt+0x1abb4>
  41f6b0:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41f6b4:	add	x9, x9, #0x758
  41f6b8:	ldr	x8, [x9, w8, sxtw #3]
  41f6bc:	mov	x19, x0
  41f6c0:	str	x8, [sp, #32]
  41f6c4:	ldr	x9, [x8]
  41f6c8:	cbz	x9, 41f6dc <wcrtomb@plt+0x1ab9c>
  41f6cc:	mov	x0, sp
  41f6d0:	blr	x9
  41f6d4:	tbz	w0, #0, 41f6f4 <wcrtomb@plt+0x1abb4>
  41f6d8:	ldr	x8, [sp, #32]
  41f6dc:	str	x19, [sp, #24]
  41f6e0:	ldr	x8, [x8, #16]
  41f6e4:	cbz	x8, 41f6f4 <wcrtomb@plt+0x1abb4>
  41f6e8:	mov	x0, sp
  41f6ec:	blr	x8
  41f6f0:	b	41f6f8 <wcrtomb@plt+0x1abb8>
  41f6f4:	mov	w0, wzr
  41f6f8:	ldr	x19, [sp, #64]
  41f6fc:	ldp	x29, x30, [sp, #48]
  41f700:	and	w0, w0, #0x1
  41f704:	add	sp, sp, #0x50
  41f708:	ret
  41f70c:	sub	sp, sp, #0x50
  41f710:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41f714:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41f718:	ldr	w8, [x8, #3008]
  41f71c:	ldr	w9, [x9, #3872]
  41f720:	movi	v0.2d, #0x0
  41f724:	stp	x29, x30, [sp, #48]
  41f728:	cmp	w8, #0x0
  41f72c:	csel	w8, w9, w8, eq  // eq = none
  41f730:	sub	w8, w8, #0x2
  41f734:	cmp	w8, #0x4
  41f738:	str	x19, [sp, #64]
  41f73c:	add	x29, sp, #0x30
  41f740:	stp	q0, q0, [sp, #16]
  41f744:	str	q0, [sp]
  41f748:	b.hi	41f79c <wcrtomb@plt+0x1ac5c>  // b.pmore
  41f74c:	mov	w9, #0x1d                  	// #29
  41f750:	lsr	w9, w9, w8
  41f754:	tbz	w9, #0, 41f79c <wcrtomb@plt+0x1ac5c>
  41f758:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41f75c:	add	x9, x9, #0x758
  41f760:	ldr	x8, [x9, w8, sxtw #3]
  41f764:	mov	x19, x0
  41f768:	str	x8, [sp, #32]
  41f76c:	ldr	x9, [x8]
  41f770:	cbz	x9, 41f784 <wcrtomb@plt+0x1ac44>
  41f774:	mov	x0, sp
  41f778:	blr	x9
  41f77c:	tbz	w0, #0, 41f79c <wcrtomb@plt+0x1ac5c>
  41f780:	ldr	x8, [sp, #32]
  41f784:	str	x19, [sp, #24]
  41f788:	ldr	x8, [x8, #32]
  41f78c:	cbz	x8, 41f7b4 <wcrtomb@plt+0x1ac74>
  41f790:	mov	x0, sp
  41f794:	blr	x8
  41f798:	b	41f7a0 <wcrtomb@plt+0x1ac60>
  41f79c:	mov	w0, wzr
  41f7a0:	ldr	x19, [sp, #64]
  41f7a4:	ldp	x29, x30, [sp, #48]
  41f7a8:	and	w0, w0, #0x1
  41f7ac:	add	sp, sp, #0x50
  41f7b0:	ret
  41f7b4:	mov	w0, #0x1                   	// #1
  41f7b8:	b	41f7a0 <wcrtomb@plt+0x1ac60>
  41f7bc:	sub	sp, sp, #0x60
  41f7c0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41f7c4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41f7c8:	ldr	w8, [x8, #3008]
  41f7cc:	ldr	w9, [x9, #3872]
  41f7d0:	movi	v0.2d, #0x0
  41f7d4:	stp	x29, x30, [sp, #48]
  41f7d8:	cmp	w8, #0x0
  41f7dc:	csel	w8, w9, w8, eq  // eq = none
  41f7e0:	sub	w8, w8, #0x2
  41f7e4:	cmp	w8, #0x4
  41f7e8:	str	x21, [sp, #64]
  41f7ec:	stp	x20, x19, [sp, #80]
  41f7f0:	add	x29, sp, #0x30
  41f7f4:	stp	q0, q0, [sp, #16]
  41f7f8:	str	q0, [sp]
  41f7fc:	b.hi	41f8b8 <wcrtomb@plt+0x1ad78>  // b.pmore
  41f800:	mov	w9, #0x1d                  	// #29
  41f804:	lsr	w9, w9, w8
  41f808:	tbz	w9, #0, 41f8b8 <wcrtomb@plt+0x1ad78>
  41f80c:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41f810:	add	x9, x9, #0x758
  41f814:	ldr	x8, [x9, w8, sxtw #3]
  41f818:	mov	x19, x2
  41f81c:	mov	x21, x1
  41f820:	mov	w20, w0
  41f824:	str	x8, [sp, #32]
  41f828:	ldr	x8, [x8]
  41f82c:	cbz	x8, 41f83c <wcrtomb@plt+0x1acfc>
  41f830:	mov	x0, sp
  41f834:	blr	x8
  41f838:	tbz	w0, #0, 41f8b8 <wcrtomb@plt+0x1ad78>
  41f83c:	mov	w0, w20
  41f840:	mov	x1, xzr
  41f844:	mov	w2, wzr
  41f848:	str	x21, [sp, #24]
  41f84c:	str	w20, [sp]
  41f850:	bl	404120 <lseek@plt>
  41f854:	ldr	x8, [sp, #32]
  41f858:	cmp	x0, #0x0
  41f85c:	cset	w9, eq  // eq = none
  41f860:	strb	w9, [sp, #4]
  41f864:	str	xzr, [sp, #8]
  41f868:	ldr	x8, [x8, #40]
  41f86c:	cbz	x8, 41f87c <wcrtomb@plt+0x1ad3c>
  41f870:	mov	x0, sp
  41f874:	blr	x8
  41f878:	tbz	w0, #0, 41f8b0 <wcrtomb@plt+0x1ad70>
  41f87c:	mov	x20, xzr
  41f880:	ldr	x8, [sp, #24]
  41f884:	ldr	x8, [x8, #288]
  41f888:	cmp	x20, x8
  41f88c:	b.cs	41f8d0 <wcrtomb@plt+0x1ad90>  // b.hs, b.nlast
  41f890:	ldr	x8, [sp, #32]
  41f894:	ldr	x8, [x8, #64]
  41f898:	cbz	x8, 41f8b0 <wcrtomb@plt+0x1ad70>
  41f89c:	mov	x0, sp
  41f8a0:	mov	x1, x20
  41f8a4:	blr	x8
  41f8a8:	add	x20, x20, #0x1
  41f8ac:	tbnz	w0, #0, 41f880 <wcrtomb@plt+0x1ad40>
  41f8b0:	mov	w20, wzr
  41f8b4:	b	41f8d4 <wcrtomb@plt+0x1ad94>
  41f8b8:	mov	w0, #0x3                   	// #3
  41f8bc:	ldp	x20, x19, [sp, #80]
  41f8c0:	ldr	x21, [sp, #64]
  41f8c4:	ldp	x29, x30, [sp, #48]
  41f8c8:	add	sp, sp, #0x60
  41f8cc:	ret
  41f8d0:	mov	w20, #0x1                   	// #1
  41f8d4:	ldp	x9, x8, [sp, #16]
  41f8d8:	ldr	x8, [x8, #264]
  41f8dc:	sub	x8, x8, x9
  41f8e0:	str	x8, [x19]
  41f8e4:	ldr	x8, [sp, #32]
  41f8e8:	ldr	x8, [x8, #8]
  41f8ec:	cbz	x8, 41f8fc <wcrtomb@plt+0x1adbc>
  41f8f0:	mov	x0, sp
  41f8f4:	blr	x8
  41f8f8:	b	41f900 <wcrtomb@plt+0x1adc0>
  41f8fc:	mov	w0, #0x1                   	// #1
  41f900:	and	w8, w20, w0
  41f904:	eor	w0, w8, #0x1
  41f908:	b	41f8bc <wcrtomb@plt+0x1ad7c>
  41f90c:	sub	sp, sp, #0x50
  41f910:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41f914:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41f918:	ldr	w8, [x8, #3008]
  41f91c:	ldr	w9, [x9, #3872]
  41f920:	movi	v0.2d, #0x0
  41f924:	stp	x29, x30, [sp, #48]
  41f928:	cmp	w8, #0x0
  41f92c:	csel	w8, w9, w8, eq  // eq = none
  41f930:	sub	w8, w8, #0x2
  41f934:	cmp	w8, #0x4
  41f938:	stp	x20, x19, [sp, #64]
  41f93c:	add	x29, sp, #0x30
  41f940:	stp	q0, q0, [sp, #16]
  41f944:	str	q0, [sp]
  41f948:	b.hi	41f9ac <wcrtomb@plt+0x1ae6c>  // b.pmore
  41f94c:	mov	w9, #0x1d                  	// #29
  41f950:	lsr	w9, w9, w8
  41f954:	tbz	w9, #0, 41f9ac <wcrtomb@plt+0x1ae6c>
  41f958:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41f95c:	add	x9, x9, #0x758
  41f960:	ldr	x8, [x9, w8, sxtw #3]
  41f964:	mov	x19, x0
  41f968:	str	x8, [sp, #32]
  41f96c:	ldr	x9, [x8]
  41f970:	cbz	x9, 41f984 <wcrtomb@plt+0x1ae44>
  41f974:	mov	x0, sp
  41f978:	blr	x9
  41f97c:	tbz	w0, #0, 41f9ac <wcrtomb@plt+0x1ae6c>
  41f980:	ldr	x8, [sp, #32]
  41f984:	mov	w9, #0xffffffff            	// #-1
  41f988:	str	x19, [sp, #24]
  41f98c:	str	w9, [sp]
  41f990:	ldr	x8, [x8, #40]
  41f994:	cbz	x8, 41f9c0 <wcrtomb@plt+0x1ae80>
  41f998:	mov	x0, sp
  41f99c:	blr	x8
  41f9a0:	ldr	x19, [sp, #24]
  41f9a4:	mov	w20, w0
  41f9a8:	b	41f9c4 <wcrtomb@plt+0x1ae84>
  41f9ac:	mov	w0, #0x3                   	// #3
  41f9b0:	ldp	x20, x19, [sp, #64]
  41f9b4:	ldp	x29, x30, [sp, #48]
  41f9b8:	add	sp, sp, #0x50
  41f9bc:	ret
  41f9c0:	mov	w20, #0x1                   	// #1
  41f9c4:	ldr	x8, [x19, #264]
  41f9c8:	ldr	x9, [sp, #16]
  41f9cc:	sub	x0, x8, x9
  41f9d0:	bl	41a168 <wcrtomb@plt+0x15628>
  41f9d4:	ldr	x8, [sp, #32]
  41f9d8:	ldr	x8, [x8, #8]
  41f9dc:	cbz	x8, 41f9ec <wcrtomb@plt+0x1aeac>
  41f9e0:	mov	x0, sp
  41f9e4:	blr	x8
  41f9e8:	b	41f9f0 <wcrtomb@plt+0x1aeb0>
  41f9ec:	mov	w0, #0x1                   	// #1
  41f9f0:	and	w8, w20, w0
  41f9f4:	mvn	w8, w8
  41f9f8:	and	w0, w8, #0x1
  41f9fc:	b	41f9b0 <wcrtomb@plt+0x1ae70>
  41fa00:	stp	x29, x30, [sp, #-96]!
  41fa04:	stp	x28, x27, [sp, #16]
  41fa08:	stp	x26, x25, [sp, #32]
  41fa0c:	stp	x24, x23, [sp, #48]
  41fa10:	stp	x22, x21, [sp, #64]
  41fa14:	stp	x20, x19, [sp, #80]
  41fa18:	mov	x29, sp
  41fa1c:	sub	sp, sp, #0x250
  41fa20:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41fa24:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41fa28:	ldr	w8, [x8, #3008]
  41fa2c:	ldr	w9, [x9, #3872]
  41fa30:	movi	v0.2d, #0x0
  41fa34:	stp	q0, q0, [sp, #16]
  41fa38:	cmp	w8, #0x0
  41fa3c:	csel	w8, w9, w8, eq  // eq = none
  41fa40:	sub	w8, w8, #0x2
  41fa44:	cmp	w8, #0x4
  41fa48:	str	q0, [sp]
  41fa4c:	b.hi	41fad8 <wcrtomb@plt+0x1af98>  // b.pmore
  41fa50:	mov	w9, #0x1d                  	// #29
  41fa54:	lsr	w9, w9, w8
  41fa58:	tbz	w9, #0, 41fad8 <wcrtomb@plt+0x1af98>
  41fa5c:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41fa60:	add	x9, x9, #0x758
  41fa64:	ldr	x8, [x9, w8, sxtw #3]
  41fa68:	mov	x19, x1
  41fa6c:	mov	w20, w0
  41fa70:	str	x8, [sp, #32]
  41fa74:	ldr	x9, [x8]
  41fa78:	cbz	x9, 41fa8c <wcrtomb@plt+0x1af4c>
  41fa7c:	mov	x0, sp
  41fa80:	blr	x9
  41fa84:	tbz	w0, #0, 41fad8 <wcrtomb@plt+0x1af98>
  41fa88:	ldr	x8, [sp, #32]
  41fa8c:	mov	w9, #0x1                   	// #1
  41fa90:	str	x19, [sp, #24]
  41fa94:	str	w20, [sp]
  41fa98:	strb	w9, [sp, #4]
  41fa9c:	ldr	x8, [x8, #40]
  41faa0:	cbz	x8, 41fb00 <wcrtomb@plt+0x1afc0>
  41faa4:	mov	x0, sp
  41faa8:	blr	x8
  41faac:	mov	w20, w0
  41fab0:	mov	x0, x19
  41fab4:	bl	404cf8 <wcrtomb@plt+0x1b8>
  41fab8:	ldr	x8, [sp, #24]
  41fabc:	tbnz	w20, #0, 41fb0c <wcrtomb@plt+0x1afcc>
  41fac0:	ldr	x8, [x8, #264]
  41fac4:	ldr	x9, [sp, #16]
  41fac8:	sub	x0, x8, x9
  41facc:	bl	41a168 <wcrtomb@plt+0x15628>
  41fad0:	mov	w19, wzr
  41fad4:	b	41fda0 <wcrtomb@plt+0x1b260>
  41fad8:	mov	w19, #0x1                   	// #1
  41fadc:	mov	w0, w19
  41fae0:	add	sp, sp, #0x250
  41fae4:	ldp	x20, x19, [sp, #80]
  41fae8:	ldp	x22, x21, [sp, #64]
  41faec:	ldp	x24, x23, [sp, #48]
  41faf0:	ldp	x26, x25, [sp, #32]
  41faf4:	ldp	x28, x27, [sp, #16]
  41faf8:	ldp	x29, x30, [sp], #96
  41fafc:	ret
  41fb00:	mov	x0, x19
  41fb04:	bl	404cf8 <wcrtomb@plt+0x1b8>
  41fb08:	ldr	x8, [sp, #24]
  41fb0c:	adrp	x20, 45e000 <_obstack_memory_used@@Base+0x174b0>
  41fb10:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0x144b0>
  41fb14:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x144b0>
  41fb18:	mov	x24, xzr
  41fb1c:	mov	x27, xzr
  41fb20:	mov	w28, #0x200                 	// #512
  41fb24:	add	x20, x20, #0x80b
  41fb28:	add	x21, x21, #0xcd8
  41fb2c:	mov	w22, #0x2                   	// #2
  41fb30:	add	x23, x23, #0xd33
  41fb34:	ldr	x9, [x8, #288]
  41fb38:	cmp	x27, x9
  41fb3c:	b.cs	41fd9c <wcrtomb@plt+0x1b25c>  // b.hs, b.nlast
  41fb40:	ldr	x8, [x8, #304]
  41fb44:	lsl	x19, x27, #4
  41fb48:	mov	x0, sp
  41fb4c:	mov	x1, x24
  41fb50:	ldr	x26, [x8, x19]
  41fb54:	bl	42060c <wcrtomb@plt+0x1bacc>
  41fb58:	tbz	w0, #0, 41fca0 <wcrtomb@plt+0x1b160>
  41fb5c:	cmp	x24, x26
  41fb60:	b.ge	41fbb4 <wcrtomb@plt+0x1b074>  // b.tcont
  41fb64:	ldr	w0, [sp]
  41fb68:	sub	x8, x26, x24
  41fb6c:	cmp	x8, #0x200
  41fb70:	csel	x25, x8, x28, lt  // lt = tstop
  41fb74:	add	x1, sp, #0x48
  41fb78:	mov	x2, x25
  41fb7c:	bl	444d88 <argp_parse@@Base+0xd4dc>
  41fb80:	cmn	x0, #0x1
  41fb84:	b.eq	41fd60 <wcrtomb@plt+0x1b220>  // b.none
  41fb88:	cbz	x0, 41fd78 <wcrtomb@plt+0x1b238>
  41fb8c:	add	x8, sp, #0x48
  41fb90:	mov	x9, x0
  41fb94:	cbz	x9, 41fba8 <wcrtomb@plt+0x1b068>
  41fb98:	ldrb	w10, [x8], #1
  41fb9c:	sub	x9, x9, #0x1
  41fba0:	cbz	w10, 41fb94 <wcrtomb@plt+0x1b054>
  41fba4:	b	41fc6c <wcrtomb@plt+0x1b12c>
  41fba8:	add	x24, x0, x24
  41fbac:	cmp	x24, x26
  41fbb0:	b.lt	41fb64 <wcrtomb@plt+0x1b024>  // b.tstop
  41fbb4:	ldr	x8, [sp, #24]
  41fbb8:	mov	x0, sp
  41fbbc:	ldr	x8, [x8, #304]
  41fbc0:	ldr	x1, [x8, x19]
  41fbc4:	bl	42060c <wcrtomb@plt+0x1bacc>
  41fbc8:	tbz	w0, #0, 41fca0 <wcrtomb@plt+0x1b160>
  41fbcc:	ldp	x9, x8, [sp, #16]
  41fbd0:	ldr	x10, [x8, #304]
  41fbd4:	ldr	x8, [x8, #264]
  41fbd8:	add	x10, x10, x27, lsl #4
  41fbdc:	ldr	x19, [x10, #8]
  41fbe0:	sub	x0, x8, x9
  41fbe4:	bl	404de4 <wcrtomb@plt+0x2a4>
  41fbe8:	cmp	x19, #0x1
  41fbec:	b.lt	41fcc4 <wcrtomb@plt+0x1b184>  // b.tstop
  41fbf0:	cmp	x19, #0x200
  41fbf4:	csel	x24, x19, x28, lt  // lt = tstop
  41fbf8:	bl	40535c <wcrtomb@plt+0x81c>
  41fbfc:	cbz	x0, 41fccc <wcrtomb@plt+0x1b18c>
  41fc00:	mov	x25, x0
  41fc04:	bl	405670 <wcrtomb@plt+0xb30>
  41fc08:	ldr	x8, [sp, #16]
  41fc0c:	ldr	w0, [sp]
  41fc10:	add	x1, sp, #0x48
  41fc14:	mov	x2, x24
  41fc18:	add	x8, x8, #0x200
  41fc1c:	str	x8, [sp, #16]
  41fc20:	bl	444d88 <argp_parse@@Base+0xd4dc>
  41fc24:	cbz	x0, 41fd1c <wcrtomb@plt+0x1b1dc>
  41fc28:	mov	x26, x0
  41fc2c:	cmn	x0, #0x1
  41fc30:	b.eq	41fd3c <wcrtomb@plt+0x1b1fc>  // b.none
  41fc34:	ldp	x9, x8, [sp, #16]
  41fc38:	ldr	x8, [x8, #264]
  41fc3c:	sub	x0, x8, x9
  41fc40:	bl	404de4 <wcrtomb@plt+0x2a4>
  41fc44:	add	x1, sp, #0x48
  41fc48:	mov	x0, x25
  41fc4c:	mov	x2, x24
  41fc50:	bl	404440 <bcmp@plt>
  41fc54:	cbnz	w0, 41fd08 <wcrtomb@plt+0x1b1c8>
  41fc58:	sub	x19, x19, x26
  41fc5c:	cmp	x19, #0x0
  41fc60:	mov	w9, #0x1                   	// #1
  41fc64:	b.gt	41fbf0 <wcrtomb@plt+0x1b0b0>
  41fc68:	b	41fca4 <wcrtomb@plt+0x1b164>
  41fc6c:	ldr	x25, [sp, #24]
  41fc70:	mov	w2, #0x5                   	// #5
  41fc74:	mov	x0, xzr
  41fc78:	mov	x1, x20
  41fc7c:	bl	404900 <dcgettext@plt>
  41fc80:	mov	x26, x0
  41fc84:	add	x1, sp, #0x30
  41fc88:	mov	x0, x24
  41fc8c:	bl	43cff0 <argp_parse@@Base+0x5744>
  41fc90:	mov	x2, x0
  41fc94:	mov	x0, x25
  41fc98:	mov	x1, x26
  41fc9c:	bl	409634 <wcrtomb@plt+0x4af4>
  41fca0:	mov	w9, wzr
  41fca4:	ldr	x8, [sp, #24]
  41fca8:	ldr	x10, [x8, #304]
  41fcac:	add	x10, x10, x27, lsl #4
  41fcb0:	ldp	x11, x10, [x10]
  41fcb4:	add	x27, x27, #0x1
  41fcb8:	add	x24, x10, x11
  41fcbc:	tbnz	w9, #0, 41fb34 <wcrtomb@plt+0x1aff4>
  41fcc0:	b	41fac0 <wcrtomb@plt+0x1af80>
  41fcc4:	mov	w9, #0x1                   	// #1
  41fcc8:	b	41fca4 <wcrtomb@plt+0x1b164>
  41fccc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41fcd0:	ldr	x8, [x8, #4064]
  41fcd4:	cbz	x8, 41fcdc <wcrtomb@plt+0x1b19c>
  41fcd8:	blr	x8
  41fcdc:	mov	w2, #0x5                   	// #5
  41fce0:	mov	x0, xzr
  41fce4:	mov	x1, x21
  41fce8:	bl	404900 <dcgettext@plt>
  41fcec:	mov	x2, x0
  41fcf0:	mov	w0, wzr
  41fcf4:	mov	w1, wzr
  41fcf8:	bl	403fa0 <error@plt>
  41fcfc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41fd00:	str	w22, [x8, #2416]
  41fd04:	b	41fca0 <wcrtomb@plt+0x1b160>
  41fd08:	ldr	x24, [sp, #24]
  41fd0c:	mov	w2, #0x5                   	// #5
  41fd10:	mov	x0, xzr
  41fd14:	mov	x1, x23
  41fd18:	b	41fd88 <wcrtomb@plt+0x1b248>
  41fd1c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  41fd20:	mov	w2, #0x5                   	// #5
  41fd24:	add	x1, x1, #0xccb
  41fd28:	bl	404900 <dcgettext@plt>
  41fd2c:	mov	x1, x0
  41fd30:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41fd34:	add	x0, x0, #0xc50
  41fd38:	b	41fd94 <wcrtomb@plt+0x1b254>
  41fd3c:	ldr	x8, [sp, #24]
  41fd40:	mov	x2, x24
  41fd44:	ldr	x9, [x8, #304]
  41fd48:	ldr	x0, [x8]
  41fd4c:	add	x9, x9, x27, lsl #4
  41fd50:	ldp	x10, x9, [x9]
  41fd54:	sub	x8, x10, x19
  41fd58:	add	x1, x8, x9
  41fd5c:	b	41fd70 <wcrtomb@plt+0x1b230>
  41fd60:	ldr	x8, [sp, #24]
  41fd64:	mov	x1, x24
  41fd68:	mov	x2, x25
  41fd6c:	ldr	x0, [x8]
  41fd70:	bl	41c37c <wcrtomb@plt+0x1783c>
  41fd74:	b	41fca0 <wcrtomb@plt+0x1b160>
  41fd78:	ldr	x24, [sp, #24]
  41fd7c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  41fd80:	mov	w2, #0x5                   	// #5
  41fd84:	add	x1, x1, #0xccb
  41fd88:	bl	404900 <dcgettext@plt>
  41fd8c:	mov	x1, x0
  41fd90:	mov	x0, x24
  41fd94:	bl	409634 <wcrtomb@plt+0x4af4>
  41fd98:	b	41fca0 <wcrtomb@plt+0x1b160>
  41fd9c:	mov	w19, #0x1                   	// #1
  41fda0:	bl	404d84 <wcrtomb@plt+0x244>
  41fda4:	ldr	x8, [sp, #32]
  41fda8:	ldr	x8, [x8, #8]
  41fdac:	cbz	x8, 41fadc <wcrtomb@plt+0x1af9c>
  41fdb0:	mov	x0, sp
  41fdb4:	blr	x8
  41fdb8:	b	41fadc <wcrtomb@plt+0x1af9c>
  41fdbc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  41fdc0:	ldr	x8, [x8, #3032]
  41fdc4:	ldrb	w8, [x8, #156]
  41fdc8:	cmp	w8, #0x53
  41fdcc:	cset	w0, eq  // eq = none
  41fdd0:	ret
  41fdd4:	stp	x29, x30, [sp, #-80]!
  41fdd8:	str	x25, [sp, #16]
  41fddc:	stp	x24, x23, [sp, #32]
  41fde0:	stp	x22, x21, [sp, #48]
  41fde4:	stp	x20, x19, [sp, #64]
  41fde8:	mov	x29, sp
  41fdec:	mov	x19, x0
  41fdf0:	bl	4052f0 <wcrtomb@plt+0x7b0>
  41fdf4:	ldr	x8, [x19, #24]
  41fdf8:	mov	x20, x0
  41fdfc:	mov	x0, x8
  41fe00:	bl	40b044 <wcrtomb@plt+0x6504>
  41fe04:	mov	w8, #0x53                  	// #83
  41fe08:	strb	w8, [x0, #156]
  41fe0c:	ldr	x8, [x19, #24]
  41fe10:	mov	x21, x0
  41fe14:	ldr	x9, [x8, #288]
  41fe18:	cmp	x9, #0x5
  41fe1c:	b.cc	41fe2c <wcrtomb@plt+0x1b2ec>  // b.lo, b.ul, b.last
  41fe20:	mov	w8, #0x1                   	// #1
  41fe24:	strb	w8, [x21, #482]
  41fe28:	ldr	x8, [x19, #24]
  41fe2c:	ldr	x0, [x8, #136]
  41fe30:	add	x1, x21, #0x1e3
  41fe34:	mov	w2, #0xc                   	// #12
  41fe38:	bl	40a960 <wcrtomb@plt+0x5e20>
  41fe3c:	ldr	x8, [x19, #24]
  41fe40:	add	x1, x21, #0x7c
  41fe44:	mov	w2, #0xc                   	// #12
  41fe48:	ldr	x0, [x8, #264]
  41fe4c:	bl	40a960 <wcrtomb@plt+0x5e20>
  41fe50:	ldr	x8, [x19, #24]
  41fe54:	ldr	x9, [x8, #288]
  41fe58:	cbz	x9, 41fec0 <wcrtomb@plt+0x1b380>
  41fe5c:	mov	x24, xzr
  41fe60:	mov	x23, xzr
  41fe64:	add	x22, x21, #0x182
  41fe68:	ldr	x8, [x8, #304]
  41fe6c:	mov	w2, #0xc                   	// #12
  41fe70:	mov	x1, x22
  41fe74:	ldr	x0, [x8, x24]
  41fe78:	bl	40a960 <wcrtomb@plt+0x5e20>
  41fe7c:	ldr	x8, [x19, #24]
  41fe80:	add	x1, x22, #0xc
  41fe84:	mov	w2, #0xc                   	// #12
  41fe88:	ldr	x8, [x8, #304]
  41fe8c:	add	x8, x8, x24
  41fe90:	ldr	x0, [x8, #8]
  41fe94:	bl	40a960 <wcrtomb@plt+0x5e20>
  41fe98:	ldr	x8, [x19, #24]
  41fe9c:	cmp	x23, #0x3
  41fea0:	add	x23, x23, #0x1
  41fea4:	ldr	x9, [x8, #288]
  41fea8:	b.eq	41fec4 <wcrtomb@plt+0x1b384>  // b.none
  41feac:	add	x24, x24, #0x10
  41feb0:	cmp	x23, x9
  41feb4:	add	x22, x22, #0x18
  41feb8:	b.cc	41fe68 <wcrtomb@plt+0x1b328>  // b.lo, b.ul, b.last
  41febc:	b	41fec4 <wcrtomb@plt+0x1b384>
  41fec0:	mov	x23, xzr
  41fec4:	cmp	x23, x9
  41fec8:	cset	w8, cc  // cc = lo, ul, last
  41fecc:	strb	w8, [x21, #482]
  41fed0:	ldr	x0, [x19, #24]
  41fed4:	mov	x1, x21
  41fed8:	mov	x2, x20
  41fedc:	bl	40bbbc <wcrtomb@plt+0x707c>
  41fee0:	ldr	x8, [x19, #24]
  41fee4:	ldr	x8, [x8, #288]
  41fee8:	cmp	x23, x8
  41feec:	b.cs	41ffdc <wcrtomb@plt+0x1b49c>  // b.hs, b.nlast
  41fef0:	mov	w22, #0x1                   	// #1
  41fef4:	b	41ff10 <wcrtomb@plt+0x1b3d0>
  41fef8:	mov	x0, x20
  41fefc:	bl	405670 <wcrtomb@plt+0xb30>
  41ff00:	ldr	x8, [x19, #24]
  41ff04:	ldr	x8, [x8, #288]
  41ff08:	cmp	x23, x8
  41ff0c:	b.cs	41ffdc <wcrtomb@plt+0x1b49c>  // b.hs, b.nlast
  41ff10:	bl	40535c <wcrtomb@plt+0x81c>
  41ff14:	movi	v0.2d, #0x0
  41ff18:	stp	q0, q0, [x0]
  41ff1c:	stp	q0, q0, [x0, #32]
  41ff20:	stp	q0, q0, [x0, #64]
  41ff24:	stp	q0, q0, [x0, #96]
  41ff28:	stp	q0, q0, [x0, #128]
  41ff2c:	stp	q0, q0, [x0, #160]
  41ff30:	stp	q0, q0, [x0, #192]
  41ff34:	stp	q0, q0, [x0, #224]
  41ff38:	stp	q0, q0, [x0, #256]
  41ff3c:	stp	q0, q0, [x0, #288]
  41ff40:	stp	q0, q0, [x0, #320]
  41ff44:	stp	q0, q0, [x0, #352]
  41ff48:	stp	q0, q0, [x0, #384]
  41ff4c:	stp	q0, q0, [x0, #416]
  41ff50:	stp	q0, q0, [x0, #448]
  41ff54:	stp	q0, q0, [x0, #480]
  41ff58:	ldr	x8, [x19, #24]
  41ff5c:	mov	x20, x0
  41ff60:	ldr	x9, [x8, #288]
  41ff64:	cmp	x23, x9
  41ff68:	b.cs	41ffcc <wcrtomb@plt+0x1b48c>  // b.hs, b.nlast
  41ff6c:	mov	x24, xzr
  41ff70:	lsl	x25, x23, #4
  41ff74:	ldr	x8, [x8, #304]
  41ff78:	add	x21, x20, x24
  41ff7c:	mov	w2, #0xc                   	// #12
  41ff80:	mov	x1, x21
  41ff84:	ldr	x0, [x8, x25]
  41ff88:	bl	40a960 <wcrtomb@plt+0x5e20>
  41ff8c:	ldr	x8, [x19, #24]
  41ff90:	add	x1, x21, #0xc
  41ff94:	mov	w2, #0xc                   	// #12
  41ff98:	ldr	x8, [x8, #304]
  41ff9c:	add	x8, x8, x25
  41ffa0:	ldr	x0, [x8, #8]
  41ffa4:	bl	40a960 <wcrtomb@plt+0x5e20>
  41ffa8:	ldr	x8, [x19, #24]
  41ffac:	cmp	x24, #0x1e0
  41ffb0:	add	x23, x23, #0x1
  41ffb4:	ldr	x9, [x8, #288]
  41ffb8:	b.eq	41ffcc <wcrtomb@plt+0x1b48c>  // b.none
  41ffbc:	add	x25, x25, #0x10
  41ffc0:	cmp	x23, x9
  41ffc4:	add	x24, x24, #0x18
  41ffc8:	b.cc	41ff74 <wcrtomb@plt+0x1b434>  // b.lo, b.ul, b.last
  41ffcc:	cmp	x23, x9
  41ffd0:	b.cs	41fef8 <wcrtomb@plt+0x1b3b8>  // b.hs, b.nlast
  41ffd4:	strb	w22, [x20, #504]
  41ffd8:	b	41fef8 <wcrtomb@plt+0x1b3b8>
  41ffdc:	ldp	x20, x19, [sp, #64]
  41ffe0:	ldp	x22, x21, [sp, #48]
  41ffe4:	ldp	x24, x23, [sp, #32]
  41ffe8:	ldr	x25, [sp, #16]
  41ffec:	mov	w0, #0x1                   	// #1
  41fff0:	ldp	x29, x30, [sp], #80
  41fff4:	ret
  41fff8:	stp	x29, x30, [sp, #-32]!
  41fffc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  420000:	ldr	x8, [x8, #3032]
  420004:	str	x19, [sp, #16]
  420008:	mov	x19, x0
  42000c:	mov	w1, #0xc                   	// #12
  420010:	add	x0, x8, #0x1e3
  420014:	mov	x29, sp
  420018:	bl	4197d4 <wcrtomb@plt+0x14c94>
  42001c:	ldr	x8, [x19, #24]
  420020:	ldr	x19, [sp, #16]
  420024:	bic	x10, x0, x0, asr #63
  420028:	lsr	x11, x0, #63
  42002c:	ldr	x9, [x8, #136]
  420030:	eor	w0, w11, #0x1
  420034:	str	x10, [x8, #136]
  420038:	str	x9, [x8, #264]
  42003c:	ldp	x29, x30, [sp], #32
  420040:	ret
  420044:	stp	x29, x30, [sp, #-96]!
  420048:	stp	x28, x27, [sp, #16]
  42004c:	stp	x26, x25, [sp, #32]
  420050:	stp	x24, x23, [sp, #48]
  420054:	stp	x22, x21, [sp, #64]
  420058:	stp	x20, x19, [sp, #80]
  42005c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  420060:	ldr	x8, [x0, #24]
  420064:	ldr	x23, [x9, #3032]
  420068:	mov	x24, #0x5555555555555555    	// #6148914691236517205
  42006c:	mov	x19, x0
  420070:	mov	x22, xzr
  420074:	movk	x24, #0x555, lsl #48
  420078:	mov	x25, #0x7fffffffffffffff    	// #9223372036854775807
  42007c:	mov	x29, sp
  420080:	str	xzr, [x8, #288]
  420084:	b	4200b8 <wcrtomb@plt+0x1b578>
  420088:	mov	w8, #0x8                   	// #8
  42008c:	lsl	x1, x8, #4
  420090:	str	x8, [x26, #296]
  420094:	bl	445a68 <argp_parse@@Base+0xe1bc>
  420098:	str	x0, [x26, #304]
  42009c:	add	x22, x22, #0x18
  4200a0:	add	x8, x0, x27, lsl #4
  4200a4:	add	x9, x27, #0x1
  4200a8:	cmp	x22, #0x60
  4200ac:	stp	x20, x21, [x8]
  4200b0:	str	x9, [x26, #288]
  4200b4:	b.eq	420154 <wcrtomb@plt+0x1b614>  // b.none
  4200b8:	add	x8, x23, x22
  4200bc:	ldrb	w9, [x8, #398]
  4200c0:	cbz	w9, 4202a4 <wcrtomb@plt+0x1b764>
  4200c4:	add	x0, x8, #0x182
  4200c8:	mov	w1, #0xc                   	// #12
  4200cc:	add	x21, x8, #0x18e
  4200d0:	bl	4197d4 <wcrtomb@plt+0x14c94>
  4200d4:	mov	x20, x0
  4200d8:	mov	w1, #0xc                   	// #12
  4200dc:	mov	x0, x21
  4200e0:	bl	4197d4 <wcrtomb@plt+0x14c94>
  4200e4:	orr	x8, x0, x20
  4200e8:	tbnz	x8, #63, 420254 <wcrtomb@plt+0x1b714>
  4200ec:	sub	x8, x25, x0
  4200f0:	mov	x21, x0
  4200f4:	cmp	x8, x20
  4200f8:	b.lt	420254 <wcrtomb@plt+0x1b714>  // b.tstop
  4200fc:	ldr	x26, [x19, #24]
  420100:	add	x9, x21, x20
  420104:	ldr	x8, [x26, #136]
  420108:	cmp	x8, x9
  42010c:	b.lt	420254 <wcrtomb@plt+0x1b714>  // b.tstop
  420110:	ldr	x8, [x26, #264]
  420114:	tbnz	x8, #63, 420254 <wcrtomb@plt+0x1b714>
  420118:	ldp	x27, x8, [x26, #288]
  42011c:	ldr	x0, [x26, #304]
  420120:	cmp	x27, x8
  420124:	b.ne	42009c <wcrtomb@plt+0x1b55c>  // b.any
  420128:	cbz	x0, 420140 <wcrtomb@plt+0x1b600>
  42012c:	cmp	x27, x24
  420130:	b.cs	420150 <wcrtomb@plt+0x1b610>  // b.hs, b.nlast
  420134:	add	x8, x27, x27, lsr #1
  420138:	add	x8, x8, #0x1
  42013c:	b	42008c <wcrtomb@plt+0x1b54c>
  420140:	cbz	x27, 420088 <wcrtomb@plt+0x1b548>
  420144:	lsr	x9, x27, #59
  420148:	mov	x8, x27
  42014c:	cbz	x9, 42008c <wcrtomb@plt+0x1b54c>
  420150:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  420154:	ldrb	w8, [x23, #482]
  420158:	cbz	w8, 4202a4 <wcrtomb@plt+0x1b764>
  42015c:	mov	x25, #0x7fffffffffffffff    	// #9223372036854775807
  420160:	bl	40535c <wcrtomb@plt+0x81c>
  420164:	cbz	x0, 4202c4 <wcrtomb@plt+0x1b784>
  420168:	mov	x20, x0
  42016c:	bl	405670 <wcrtomb@plt+0xb30>
  420170:	add	x21, x20, #0xc
  420174:	mov	x26, #0xffffffffffffffff    	// #-1
  420178:	b	4201b0 <wcrtomb@plt+0x1b670>
  42017c:	mov	w8, #0x8                   	// #8
  420180:	lsl	x1, x8, #4
  420184:	str	x8, [x27, #296]
  420188:	bl	445a68 <argp_parse@@Base+0xe1bc>
  42018c:	str	x0, [x27, #304]
  420190:	add	x26, x26, #0x1
  420194:	add	x8, x0, x28, lsl #4
  420198:	add	x9, x28, #0x1
  42019c:	cmp	x26, #0x14
  4201a0:	add	x21, x21, #0x18
  4201a4:	stp	x22, x23, [x8]
  4201a8:	str	x9, [x27, #288]
  4201ac:	b.cs	420244 <wcrtomb@plt+0x1b704>  // b.hs, b.nlast
  4201b0:	ldrb	w8, [x21]
  4201b4:	cbz	w8, 4202a4 <wcrtomb@plt+0x1b764>
  4201b8:	sub	x0, x21, #0xc
  4201bc:	mov	w1, #0xc                   	// #12
  4201c0:	bl	4197d4 <wcrtomb@plt+0x14c94>
  4201c4:	mov	x22, x0
  4201c8:	mov	w1, #0xc                   	// #12
  4201cc:	mov	x0, x21
  4201d0:	bl	4197d4 <wcrtomb@plt+0x14c94>
  4201d4:	orr	x8, x0, x22
  4201d8:	tbnz	x8, #63, 420254 <wcrtomb@plt+0x1b714>
  4201dc:	sub	x8, x25, x0
  4201e0:	mov	x23, x0
  4201e4:	cmp	x8, x22
  4201e8:	b.lt	420254 <wcrtomb@plt+0x1b714>  // b.tstop
  4201ec:	ldr	x27, [x19, #24]
  4201f0:	add	x9, x23, x22
  4201f4:	ldr	x8, [x27, #136]
  4201f8:	cmp	x8, x9
  4201fc:	b.lt	420254 <wcrtomb@plt+0x1b714>  // b.tstop
  420200:	ldr	x8, [x27, #264]
  420204:	tbnz	x8, #63, 420254 <wcrtomb@plt+0x1b714>
  420208:	ldp	x28, x8, [x27, #288]
  42020c:	ldr	x0, [x27, #304]
  420210:	cmp	x28, x8
  420214:	b.ne	420190 <wcrtomb@plt+0x1b650>  // b.any
  420218:	cbz	x0, 420230 <wcrtomb@plt+0x1b6f0>
  42021c:	cmp	x28, x24
  420220:	b.cs	420150 <wcrtomb@plt+0x1b610>  // b.hs, b.nlast
  420224:	add	x8, x28, x28, lsr #1
  420228:	add	x8, x8, #0x1
  42022c:	b	420180 <wcrtomb@plt+0x1b640>
  420230:	cbz	x28, 42017c <wcrtomb@plt+0x1b63c>
  420234:	lsr	x9, x28, #59
  420238:	mov	x8, x28
  42023c:	cbz	x9, 420180 <wcrtomb@plt+0x1b640>
  420240:	b	420150 <wcrtomb@plt+0x1b610>
  420244:	ldrb	w8, [x20, #504]
  420248:	mov	w0, #0x1                   	// #1
  42024c:	cbnz	w8, 420160 <wcrtomb@plt+0x1b620>
  420250:	b	4202a8 <wcrtomb@plt+0x1b768>
  420254:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  420258:	ldr	x8, [x8, #4064]
  42025c:	cbz	x8, 420264 <wcrtomb@plt+0x1b724>
  420260:	blr	x8
  420264:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  420268:	add	x1, x1, #0x780
  42026c:	mov	w2, #0x5                   	// #5
  420270:	mov	x0, xzr
  420274:	bl	404900 <dcgettext@plt>
  420278:	ldr	x8, [x19, #24]
  42027c:	mov	x2, x0
  420280:	mov	w0, wzr
  420284:	mov	w1, wzr
  420288:	ldr	x3, [x8]
  42028c:	bl	403fa0 <error@plt>
  420290:	mov	w0, wzr
  420294:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  420298:	mov	w9, #0x2                   	// #2
  42029c:	str	w9, [x8, #2416]
  4202a0:	b	4202a8 <wcrtomb@plt+0x1b768>
  4202a4:	mov	w0, #0x1                   	// #1
  4202a8:	ldp	x20, x19, [sp, #80]
  4202ac:	ldp	x22, x21, [sp, #64]
  4202b0:	ldp	x24, x23, [sp, #48]
  4202b4:	ldp	x26, x25, [sp, #32]
  4202b8:	ldp	x28, x27, [sp, #16]
  4202bc:	ldp	x29, x30, [sp], #96
  4202c0:	ret
  4202c4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4202c8:	ldr	x8, [x8, #4064]
  4202cc:	cbz	x8, 4202d4 <wcrtomb@plt+0x1b794>
  4202d0:	blr	x8
  4202d4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4202d8:	add	x1, x1, #0xcd8
  4202dc:	mov	w2, #0x5                   	// #5
  4202e0:	mov	x0, xzr
  4202e4:	bl	404900 <dcgettext@plt>
  4202e8:	mov	x2, x0
  4202ec:	mov	w0, wzr
  4202f0:	mov	w1, wzr
  4202f4:	bl	403fa0 <error@plt>
  4202f8:	b	420290 <wcrtomb@plt+0x1b750>
  4202fc:	sub	sp, sp, #0xf0
  420300:	stp	x29, x30, [sp, #160]
  420304:	stp	x24, x23, [sp, #192]
  420308:	stp	x22, x21, [sp, #208]
  42030c:	stp	x20, x19, [sp, #224]
  420310:	ldr	x8, [x0, #24]
  420314:	str	x25, [sp, #176]
  420318:	mov	x20, x1
  42031c:	add	x29, sp, #0xa0
  420320:	ldr	x8, [x8, #304]
  420324:	mov	x19, x0
  420328:	add	x8, x8, x1, lsl #4
  42032c:	ldp	x1, x24, [x8]
  420330:	bl	42060c <wcrtomb@plt+0x1bacc>
  420334:	tbz	w0, #0, 42049c <wcrtomb@plt+0x1b95c>
  420338:	cmp	x24, #0x1
  42033c:	b.lt	4203a8 <wcrtomb@plt+0x1b868>  // b.tstop
  420340:	mov	w25, #0x200                 	// #512
  420344:	cmp	x24, #0x200
  420348:	csel	x21, x24, x25, lt  // lt = tstop
  42034c:	bl	40535c <wcrtomb@plt+0x81c>
  420350:	ldr	w8, [x19]
  420354:	mov	x22, x0
  420358:	mov	x1, x22
  42035c:	mov	x2, x21
  420360:	mov	w0, w8
  420364:	bl	444d88 <argp_parse@@Base+0xd4dc>
  420368:	cbz	x0, 4203b0 <wcrtomb@plt+0x1b870>
  42036c:	mov	x23, x0
  420370:	cmn	x0, #0x1
  420374:	b.eq	4203e0 <wcrtomb@plt+0x1b8a0>  // b.none
  420378:	add	x0, x22, x23
  42037c:	sub	x2, x25, x23
  420380:	mov	w1, wzr
  420384:	bl	404360 <memset@plt>
  420388:	ldr	x8, [x19, #16]
  42038c:	mov	x0, x22
  420390:	sub	x24, x24, x23
  420394:	add	x8, x8, x23
  420398:	str	x8, [x19, #16]
  42039c:	bl	405670 <wcrtomb@plt+0xb30>
  4203a0:	cmp	x24, #0x0
  4203a4:	b.gt	420344 <wcrtomb@plt+0x1b804>
  4203a8:	mov	w0, #0x1                   	// #1
  4203ac:	b	4204a0 <wcrtomb@plt+0x1b960>
  4203b0:	ldr	w1, [x19]
  4203b4:	add	x2, sp, #0x8
  4203b8:	bl	4048e0 <__fxstat@plt>
  4203bc:	ldr	x9, [x19, #24]
  4203c0:	ldr	x8, [x9, #136]
  4203c4:	cbz	w0, 420408 <wcrtomb@plt+0x1b8c8>
  4203c8:	ldr	x9, [x9, #304]
  4203cc:	add	x8, x8, x24
  4203d0:	add	x9, x9, x20, lsl #4
  4203d4:	ldp	x10, x9, [x9]
  4203d8:	sub	x8, x8, x10
  4203dc:	b	42040c <wcrtomb@plt+0x1b8cc>
  4203e0:	ldr	x8, [x19, #24]
  4203e4:	mov	x2, x21
  4203e8:	ldr	x9, [x8, #304]
  4203ec:	ldr	x0, [x8]
  4203f0:	add	x9, x9, x20, lsl #4
  4203f4:	ldp	x10, x9, [x9]
  4203f8:	sub	x8, x10, x24
  4203fc:	add	x1, x8, x9
  420400:	bl	41c37c <wcrtomb@plt+0x1783c>
  420404:	b	42049c <wcrtomb@plt+0x1b95c>
  420408:	ldr	x9, [sp, #56]
  42040c:	sub	x20, x8, x9
  420410:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  420414:	ldrb	w8, [x8, #3720]
  420418:	tbz	w8, #7, 420488 <wcrtomb@plt+0x1b948>
  42041c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  420420:	ldr	x8, [x8, #4064]
  420424:	cbz	x8, 42042c <wcrtomb@plt+0x1b8ec>
  420428:	blr	x8
  42042c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  420430:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  420434:	add	x1, x1, #0x85
  420438:	add	x2, x2, #0xb4
  42043c:	mov	w4, #0x5                   	// #5
  420440:	mov	x0, xzr
  420444:	mov	x3, x20
  420448:	bl	404820 <dcngettext@plt>
  42044c:	ldr	x8, [x19, #24]
  420450:	mov	x19, x0
  420454:	ldr	x8, [x8]
  420458:	mov	x0, x8
  42045c:	bl	444778 <argp_parse@@Base+0xcecc>
  420460:	mov	x21, x0
  420464:	sub	x1, x29, #0x18
  420468:	mov	x0, x20
  42046c:	bl	43d080 <argp_parse@@Base+0x57d4>
  420470:	mov	x4, x0
  420474:	mov	w0, wzr
  420478:	mov	w1, wzr
  42047c:	mov	x2, x19
  420480:	mov	x3, x21
  420484:	bl	403fa0 <error@plt>
  420488:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42048c:	ldrb	w8, [x8, #4009]
  420490:	cbnz	w8, 42049c <wcrtomb@plt+0x1b95c>
  420494:	mov	w0, #0x1                   	// #1
  420498:	bl	424364 <wcrtomb@plt+0x1f824>
  42049c:	mov	w0, wzr
  4204a0:	ldp	x20, x19, [sp, #224]
  4204a4:	ldp	x22, x21, [sp, #208]
  4204a8:	ldp	x24, x23, [sp, #192]
  4204ac:	ldr	x25, [sp, #176]
  4204b0:	ldp	x29, x30, [sp, #160]
  4204b4:	add	sp, sp, #0xf0
  4204b8:	ret
  4204bc:	stp	x29, x30, [sp, #-64]!
  4204c0:	stp	x22, x21, [sp, #32]
  4204c4:	stp	x20, x19, [sp, #48]
  4204c8:	ldr	x8, [x0, #24]
  4204cc:	lsl	x9, x1, #4
  4204d0:	mov	x20, x1
  4204d4:	str	x23, [sp, #16]
  4204d8:	ldr	x8, [x8, #304]
  4204dc:	mov	x29, sp
  4204e0:	mov	x19, x0
  4204e4:	ldr	x1, [x8, x9]
  4204e8:	bl	42060c <wcrtomb@plt+0x1bacc>
  4204ec:	tbz	w0, #0, 420584 <wcrtomb@plt+0x1ba44>
  4204f0:	ldr	x8, [x19, #24]
  4204f4:	ldr	x8, [x8, #304]
  4204f8:	add	x8, x8, x20, lsl #4
  4204fc:	ldr	x22, [x8, #8]
  420500:	cbz	x22, 42058c <wcrtomb@plt+0x1ba4c>
  420504:	mov	w23, #0x200                 	// #512
  420508:	cmp	x22, #0x1
  42050c:	b.lt	4205ac <wcrtomb@plt+0x1ba6c>  // b.tstop
  420510:	cmp	x22, #0x200
  420514:	csel	x20, x22, x23, lt  // lt = tstop
  420518:	bl	40535c <wcrtomb@plt+0x81c>
  42051c:	cbz	x0, 4205b4 <wcrtomb@plt+0x1ba74>
  420520:	mov	x21, x0
  420524:	bl	405670 <wcrtomb@plt+0xb30>
  420528:	ldr	x8, [x19, #16]
  42052c:	ldr	w0, [x19]
  420530:	mov	x1, x21
  420534:	mov	x2, x20
  420538:	add	x8, x8, #0x200
  42053c:	str	x8, [x19, #16]
  420540:	bl	41bdc0 <wcrtomb@plt+0x17280>
  420544:	ldp	x9, x8, [x19, #16]
  420548:	mov	x21, x0
  42054c:	sub	x22, x22, x0
  420550:	ldr	x8, [x8, #264]
  420554:	sub	x0, x8, x9
  420558:	bl	404de4 <wcrtomb@plt+0x2a4>
  42055c:	ldr	x8, [x19, #8]
  420560:	cmp	x21, x20
  420564:	add	x8, x8, x21
  420568:	str	x8, [x19, #8]
  42056c:	b.eq	420508 <wcrtomb@plt+0x1b9c8>  // b.none
  420570:	ldr	x8, [x19, #24]
  420574:	mov	x1, x21
  420578:	mov	x2, x20
  42057c:	ldr	x0, [x8]
  420580:	bl	42b558 <wcrtomb@plt+0x26a18>
  420584:	mov	w0, wzr
  420588:	b	4205f8 <wcrtomb@plt+0x1bab8>
  42058c:	ldrb	w8, [x19, #4]
  420590:	cbz	w8, 4205ac <wcrtomb@plt+0x1ba6c>
  420594:	ldr	w0, [x19]
  420598:	bl	421928 <wcrtomb@plt+0x1cde8>
  42059c:	cbz	w0, 4205ac <wcrtomb@plt+0x1ba6c>
  4205a0:	ldr	x8, [x19, #24]
  4205a4:	ldr	x0, [x8]
  4205a8:	bl	42b2d4 <wcrtomb@plt+0x26794>
  4205ac:	mov	w0, #0x1                   	// #1
  4205b0:	b	4205f8 <wcrtomb@plt+0x1bab8>
  4205b4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4205b8:	ldr	x8, [x8, #4064]
  4205bc:	cbz	x8, 4205c4 <wcrtomb@plt+0x1ba84>
  4205c0:	blr	x8
  4205c4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4205c8:	add	x1, x1, #0xcd8
  4205cc:	mov	w2, #0x5                   	// #5
  4205d0:	mov	x0, xzr
  4205d4:	bl	404900 <dcgettext@plt>
  4205d8:	mov	x2, x0
  4205dc:	mov	w0, wzr
  4205e0:	mov	w1, wzr
  4205e4:	bl	403fa0 <error@plt>
  4205e8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4205ec:	mov	w9, #0x2                   	// #2
  4205f0:	mov	w0, wzr
  4205f4:	str	w9, [x8, #2416]
  4205f8:	ldp	x20, x19, [sp, #48]
  4205fc:	ldp	x22, x21, [sp, #32]
  420600:	ldr	x23, [sp, #16]
  420604:	ldp	x29, x30, [sp], #64
  420608:	ret
  42060c:	stp	x29, x30, [sp, #-48]!
  420610:	stp	x22, x21, [sp, #16]
  420614:	stp	x20, x19, [sp, #32]
  420618:	ldrb	w8, [x0, #4]
  42061c:	mov	x20, x0
  420620:	mov	x19, x1
  420624:	mov	x29, sp
  420628:	cbz	w8, 420648 <wcrtomb@plt+0x1bb08>
  42062c:	ldr	w0, [x20]
  420630:	mov	x1, x19
  420634:	mov	w2, wzr
  420638:	bl	404120 <lseek@plt>
  42063c:	tbnz	x0, #63, 420660 <wcrtomb@plt+0x1bb20>
  420640:	mov	w0, #0x1                   	// #1
  420644:	b	420674 <wcrtomb@plt+0x1bb34>
  420648:	ldr	x8, [x20, #8]
  42064c:	cmp	x8, x19
  420650:	b.le	420684 <wcrtomb@plt+0x1bb44>
  420654:	bl	404a10 <__errno_location@plt>
  420658:	mov	w8, #0x16                  	// #22
  42065c:	str	w8, [x0]
  420660:	ldr	x8, [x20, #24]
  420664:	mov	x1, x19
  420668:	ldr	x0, [x8]
  42066c:	bl	41c3e8 <wcrtomb@plt+0x178a8>
  420670:	mov	w0, wzr
  420674:	ldp	x20, x19, [sp, #32]
  420678:	ldp	x22, x21, [sp, #16]
  42067c:	ldp	x29, x30, [sp], #48
  420680:	ret
  420684:	b.ge	420640 <wcrtomb@plt+0x1bb00>  // b.tcont
  420688:	adrp	x21, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42068c:	mov	w22, #0x200                 	// #512
  420690:	add	x21, x21, #0x558
  420694:	ldr	w0, [x20]
  420698:	sub	x8, x19, x8
  42069c:	cmp	x8, #0x200
  4206a0:	csel	x2, x8, x22, lt  // lt = tstop
  4206a4:	mov	x1, x21
  4206a8:	bl	404580 <write@plt>
  4206ac:	cmp	x0, #0x0
  4206b0:	b.le	4206cc <wcrtomb@plt+0x1bb8c>
  4206b4:	ldr	x8, [x20, #8]
  4206b8:	add	x8, x8, x0
  4206bc:	cmp	x8, x19
  4206c0:	str	x8, [x20, #8]
  4206c4:	b.lt	420694 <wcrtomb@plt+0x1bb54>  // b.tstop
  4206c8:	b	420640 <wcrtomb@plt+0x1bb00>
  4206cc:	cbnz	x0, 420660 <wcrtomb@plt+0x1bb20>
  4206d0:	b	420654 <wcrtomb@plt+0x1bb14>
  4206d4:	ldr	x8, [x0, #24]
  4206d8:	ldr	x9, [x8, #288]
  4206dc:	cbz	x9, 4206e8 <wcrtomb@plt+0x1bba8>
  4206e0:	mov	w0, #0x1                   	// #1
  4206e4:	ret
  4206e8:	ldr	w8, [x8, #276]
  4206ec:	cmp	w8, #0x0
  4206f0:	cset	w0, ne  // ne = any
  4206f4:	ret
  4206f8:	sub	sp, sp, #0x80
  4206fc:	stp	x29, x30, [sp, #32]
  420700:	str	x27, [sp, #48]
  420704:	stp	x26, x25, [sp, #64]
  420708:	stp	x24, x23, [sp, #80]
  42070c:	stp	x22, x21, [sp, #96]
  420710:	stp	x20, x19, [sp, #112]
  420714:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  420718:	mov	x23, x0
  42071c:	ldr	w22, [x8, #3664]
  420720:	ldr	x8, [x23, #24]!
  420724:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  420728:	add	x29, sp, #0x20
  42072c:	mov	x20, x0
  420730:	str	w22, [x8, #276]
  420734:	ldr	w9, [x21, #3144]
  420738:	str	w9, [x8, #280]
  42073c:	bl	4052f0 <wcrtomb@plt+0x7b0>
  420740:	mov	x19, x0
  420744:	cbz	w22, 420918 <wcrtomb@plt+0x1bdd8>
  420748:	ldr	x8, [x23]
  42074c:	add	x1, sp, #0x8
  420750:	ldr	x0, [x8, #288]
  420754:	ldr	x22, [x8, #304]
  420758:	ldr	x24, [x8, #8]
  42075c:	bl	43d080 <argp_parse@@Base+0x57d4>
  420760:	bl	403f40 <strlen@plt>
  420764:	ldr	x1, [x23]
  420768:	add	x25, x0, #0x1
  42076c:	ldr	x8, [x1, #288]
  420770:	cbz	x8, 4207c4 <wcrtomb@plt+0x1bc84>
  420774:	mov	x26, xzr
  420778:	add	x27, x22, #0x8
  42077c:	ldur	x0, [x27, #-8]
  420780:	add	x1, sp, #0x8
  420784:	bl	43d080 <argp_parse@@Base+0x57d4>
  420788:	bl	403f40 <strlen@plt>
  42078c:	ldr	x8, [x27], #16
  420790:	mov	x21, x0
  420794:	add	x1, sp, #0x8
  420798:	mov	x0, x8
  42079c:	bl	43d080 <argp_parse@@Base+0x57d4>
  4207a0:	bl	403f40 <strlen@plt>
  4207a4:	ldr	x1, [x23]
  4207a8:	add	x8, x25, x21
  4207ac:	add	x8, x8, x0
  4207b0:	add	x26, x26, #0x1
  4207b4:	ldr	x9, [x1, #288]
  4207b8:	add	x25, x8, #0x2
  4207bc:	cmp	x26, x9
  4207c0:	b.cc	42077c <wcrtomb@plt+0x1bc3c>  // b.lo, b.ul, b.last
  4207c4:	add	x8, x25, #0x1ff
  4207c8:	ldr	x10, [x1, #264]
  4207cc:	add	x9, x25, #0x3fe
  4207d0:	cmp	x8, #0x0
  4207d4:	csel	x8, x9, x8, lt  // lt = tstop
  4207d8:	and	x8, x8, #0xfffffffffffffe00
  4207dc:	add	x9, x8, x10
  4207e0:	str	x9, [x1, #264]
  4207e4:	ldr	x9, [x20, #16]
  4207e8:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4207ec:	add	x0, x0, #0x94b
  4207f0:	mov	x2, xzr
  4207f4:	add	x8, x9, x8
  4207f8:	str	x8, [x20, #16]
  4207fc:	bl	412c84 <wcrtomb@plt+0xe144>
  420800:	ldr	x1, [x20, #24]
  420804:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  420808:	add	x0, x0, #0x95c
  42080c:	mov	x2, xzr
  420810:	bl	412c84 <wcrtomb@plt+0xe144>
  420814:	ldr	x1, [x20, #24]
  420818:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  42081c:	add	x0, x0, #0x93b
  420820:	mov	x2, xzr
  420824:	bl	412c84 <wcrtomb@plt+0xe144>
  420828:	ldr	x1, [x20, #24]
  42082c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  420830:	add	x0, x0, #0x96d
  420834:	mov	x2, xzr
  420838:	bl	412c84 <wcrtomb@plt+0xe144>
  42083c:	ldr	x0, [x20, #24]
  420840:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  420844:	add	x1, x1, #0x7a2
  420848:	mov	x2, xzr
  42084c:	bl	411be4 <wcrtomb@plt+0xd0a4>
  420850:	ldr	x20, [x20, #24]
  420854:	mov	x21, x0
  420858:	str	x0, [x20, #8]
  42085c:	bl	403f40 <strlen@plt>
  420860:	cmp	x0, #0x65
  420864:	b.cc	420870 <wcrtomb@plt+0x1bd30>  // b.lo, b.ul, b.last
  420868:	strb	wzr, [x21, #100]
  42086c:	ldr	x20, [x23]
  420870:	ldr	x8, [x20, #264]
  420874:	ldr	x21, [x20, #136]
  420878:	mov	x0, x20
  42087c:	str	x8, [x20, #136]
  420880:	bl	40b044 <wcrtomb@plt+0x6504>
  420884:	str	x21, [x20, #136]
  420888:	ldr	x8, [x23]
  42088c:	mov	x1, x0
  420890:	mov	x2, x19
  420894:	mov	x0, x8
  420898:	bl	40bbbc <wcrtomb@plt+0x707c>
  42089c:	ldr	x8, [x23]
  4208a0:	ldr	x0, [x8, #8]
  4208a4:	bl	404700 <free@plt>
  4208a8:	ldr	x8, [x23]
  4208ac:	str	x24, [x8, #8]
  4208b0:	bl	40535c <wcrtomb@plt+0x81c>
  4208b4:	ldr	x8, [x23]
  4208b8:	mov	x19, x0
  4208bc:	add	x1, sp, #0x8
  4208c0:	ldr	x8, [x8, #288]
  4208c4:	mov	x0, x8
  4208c8:	bl	43d080 <argp_parse@@Base+0x57d4>
  4208cc:	ldrb	w8, [x0]
  4208d0:	cbz	w8, 420a48 <wcrtomb@plt+0x1bf08>
  4208d4:	add	x9, x19, #0x200
  4208d8:	add	x21, x0, #0x1
  4208dc:	mov	x20, x19
  4208e0:	b	4208f0 <wcrtomb@plt+0x1bdb0>
  4208e4:	strb	w8, [x20], #1
  4208e8:	ldrb	w8, [x21], #1
  4208ec:	cbz	w8, 420a4c <wcrtomb@plt+0x1bf0c>
  4208f0:	cmp	x20, x9
  4208f4:	b.ne	4208e4 <wcrtomb@plt+0x1bda4>  // b.any
  4208f8:	mov	x0, x19
  4208fc:	bl	405670 <wcrtomb@plt+0xb30>
  420900:	bl	40535c <wcrtomb@plt+0x81c>
  420904:	ldurb	w8, [x21, #-1]
  420908:	mov	x20, x0
  42090c:	add	x9, x0, #0x200
  420910:	mov	x19, x0
  420914:	b	4208e4 <wcrtomb@plt+0x1bda4>
  420918:	ldr	x1, [x23]
  42091c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  420920:	add	x0, x0, #0x996
  420924:	mov	x2, xzr
  420928:	ldr	x24, [x1, #304]
  42092c:	bl	412c84 <wcrtomb@plt+0xe144>
  420930:	ldr	x1, [x23]
  420934:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  420938:	add	x0, x0, #0x981
  42093c:	mov	x2, xzr
  420940:	bl	412c84 <wcrtomb@plt+0xe144>
  420944:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  420948:	add	x0, x0, #0x9cc
  42094c:	bl	411770 <wcrtomb@plt+0xcc30>
  420950:	tbnz	w0, #0, 420bbc <wcrtomb@plt+0x1c07c>
  420954:	ldr	w8, [x21, #3144]
  420958:	cbz	w8, 420bbc <wcrtomb@plt+0x1c07c>
  42095c:	ldr	x1, [x23]
  420960:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x154b0>
  420964:	add	x0, x0, #0x93b
  420968:	mov	x2, xzr
  42096c:	bl	412c84 <wcrtomb@plt+0xe144>
  420970:	ldr	x0, [x23]
  420974:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  420978:	add	x1, x1, #0x7a2
  42097c:	mov	x2, xzr
  420980:	ldr	x22, [x0, #8]
  420984:	bl	411be4 <wcrtomb@plt+0xd0a4>
  420988:	ldr	x8, [x23]
  42098c:	str	x0, [x8, #8]
  420990:	add	x0, x8, #0x158
  420994:	bl	412e8c <wcrtomb@plt+0xe34c>
  420998:	str	xzr, [x29, #24]
  42099c:	ldr	x8, [x23]
  4209a0:	ldr	x9, [x8, #288]
  4209a4:	cbz	x9, 420c20 <wcrtomb@plt+0x1c0e0>
  4209a8:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4209ac:	mov	x9, xzr
  4209b0:	add	x20, x20, #0xf0
  4209b4:	b	420a2c <wcrtomb@plt+0x1beec>
  4209b8:	lsl	x9, x9, #4
  4209bc:	ldr	x0, [x24, x9]
  4209c0:	add	x1, sp, #0x8
  4209c4:	add	x21, x8, #0x158
  4209c8:	bl	43d080 <argp_parse@@Base+0x57d4>
  4209cc:	mov	x1, x0
  4209d0:	mov	x0, x21
  4209d4:	bl	412e94 <wcrtomb@plt+0xe354>
  4209d8:	ldr	x8, [x23]
  4209dc:	mov	x1, x20
  4209e0:	add	x0, x8, #0x158
  4209e4:	bl	412e94 <wcrtomb@plt+0xe354>
  4209e8:	ldr	x8, [x29, #24]
  4209ec:	ldr	x9, [x23]
  4209f0:	add	x1, sp, #0x8
  4209f4:	add	x8, x24, x8, lsl #4
  4209f8:	ldr	x0, [x8, #8]
  4209fc:	add	x21, x9, #0x158
  420a00:	bl	43d080 <argp_parse@@Base+0x57d4>
  420a04:	mov	x1, x0
  420a08:	mov	x0, x21
  420a0c:	bl	412e94 <wcrtomb@plt+0xe354>
  420a10:	ldr	x8, [x29, #24]
  420a14:	add	x9, x8, #0x1
  420a18:	str	x9, [x29, #24]
  420a1c:	ldr	x8, [x23]
  420a20:	ldr	x10, [x8, #288]
  420a24:	cmp	x9, x10
  420a28:	b.cs	420c20 <wcrtomb@plt+0x1c0e0>  // b.hs, b.nlast
  420a2c:	cbz	x9, 4209b8 <wcrtomb@plt+0x1be78>
  420a30:	add	x0, x8, #0x158
  420a34:	mov	x1, x20
  420a38:	bl	412e94 <wcrtomb@plt+0xe354>
  420a3c:	ldr	x8, [x23]
  420a40:	ldr	x9, [x29, #24]
  420a44:	b	4209b8 <wcrtomb@plt+0x1be78>
  420a48:	mov	x20, x19
  420a4c:	add	x8, x19, #0x200
  420a50:	cmp	x20, x8
  420a54:	b.ne	420a6c <wcrtomb@plt+0x1bf2c>  // b.any
  420a58:	mov	x0, x19
  420a5c:	bl	405670 <wcrtomb@plt+0xb30>
  420a60:	bl	40535c <wcrtomb@plt+0x81c>
  420a64:	mov	x20, x0
  420a68:	mov	x19, x0
  420a6c:	mov	w21, #0xa                   	// #10
  420a70:	strb	w21, [x20], #1
  420a74:	ldr	x8, [x23]
  420a78:	ldr	x8, [x8, #288]
  420a7c:	cbz	x8, 420b98 <wcrtomb@plt+0x1c058>
  420a80:	mov	x24, xzr
  420a84:	b	420aac <wcrtomb@plt+0x1bf6c>
  420a88:	add	x8, x19, #0x200
  420a8c:	cmp	x20, x8
  420a90:	b.eq	420b80 <wcrtomb@plt+0x1c040>  // b.none
  420a94:	strb	w21, [x20], #1
  420a98:	ldr	x8, [x23]
  420a9c:	add	x24, x24, #0x1
  420aa0:	ldr	x8, [x8, #288]
  420aa4:	cmp	x24, x8
  420aa8:	b.cs	420b98 <wcrtomb@plt+0x1c058>  // b.hs, b.nlast
  420aac:	lsl	x8, x24, #4
  420ab0:	ldr	x0, [x22, x8]
  420ab4:	add	x1, sp, #0x8
  420ab8:	bl	43d080 <argp_parse@@Base+0x57d4>
  420abc:	ldrb	w8, [x0]
  420ac0:	cbz	w8, 420b04 <wcrtomb@plt+0x1bfc4>
  420ac4:	add	x9, x19, #0x200
  420ac8:	add	x25, x0, #0x1
  420acc:	b	420adc <wcrtomb@plt+0x1bf9c>
  420ad0:	strb	w8, [x20], #1
  420ad4:	ldrb	w8, [x25], #1
  420ad8:	cbz	w8, 420b04 <wcrtomb@plt+0x1bfc4>
  420adc:	cmp	x20, x9
  420ae0:	b.ne	420ad0 <wcrtomb@plt+0x1bf90>  // b.any
  420ae4:	mov	x0, x19
  420ae8:	bl	405670 <wcrtomb@plt+0xb30>
  420aec:	bl	40535c <wcrtomb@plt+0x81c>
  420af0:	ldurb	w8, [x25, #-1]
  420af4:	mov	x20, x0
  420af8:	add	x9, x0, #0x200
  420afc:	mov	x19, x0
  420b00:	b	420ad0 <wcrtomb@plt+0x1bf90>
  420b04:	add	x8, x19, #0x200
  420b08:	cmp	x20, x8
  420b0c:	b.ne	420b24 <wcrtomb@plt+0x1bfe4>  // b.any
  420b10:	mov	x0, x19
  420b14:	bl	405670 <wcrtomb@plt+0xb30>
  420b18:	bl	40535c <wcrtomb@plt+0x81c>
  420b1c:	mov	x20, x0
  420b20:	mov	x19, x0
  420b24:	strb	w21, [x20], #1
  420b28:	add	x8, x22, x24, lsl #4
  420b2c:	ldr	x0, [x8, #8]
  420b30:	add	x1, sp, #0x8
  420b34:	bl	43d080 <argp_parse@@Base+0x57d4>
  420b38:	ldrb	w8, [x0]
  420b3c:	cbz	w8, 420a88 <wcrtomb@plt+0x1bf48>
  420b40:	add	x9, x19, #0x200
  420b44:	add	x25, x0, #0x1
  420b48:	b	420b58 <wcrtomb@plt+0x1c018>
  420b4c:	strb	w8, [x20], #1
  420b50:	ldrb	w8, [x25], #1
  420b54:	cbz	w8, 420a88 <wcrtomb@plt+0x1bf48>
  420b58:	cmp	x20, x9
  420b5c:	b.ne	420b4c <wcrtomb@plt+0x1c00c>  // b.any
  420b60:	mov	x0, x19
  420b64:	bl	405670 <wcrtomb@plt+0xb30>
  420b68:	bl	40535c <wcrtomb@plt+0x81c>
  420b6c:	ldurb	w8, [x25, #-1]
  420b70:	mov	x20, x0
  420b74:	add	x9, x0, #0x200
  420b78:	mov	x19, x0
  420b7c:	b	420b4c <wcrtomb@plt+0x1c00c>
  420b80:	mov	x0, x19
  420b84:	bl	405670 <wcrtomb@plt+0xb30>
  420b88:	bl	40535c <wcrtomb@plt+0x81c>
  420b8c:	mov	x20, x0
  420b90:	mov	x19, x0
  420b94:	b	420a94 <wcrtomb@plt+0x1bf54>
  420b98:	sub	x8, x19, x20
  420b9c:	add	x2, x8, #0x200
  420ba0:	mov	x0, x20
  420ba4:	mov	w1, wzr
  420ba8:	bl	404360 <memset@plt>
  420bac:	mov	x0, x19
  420bb0:	bl	405670 <wcrtomb@plt+0xb30>
  420bb4:	mov	w19, #0x1                   	// #1
  420bb8:	b	420c88 <wcrtomb@plt+0x1c148>
  420bbc:	str	xzr, [x29, #24]
  420bc0:	ldr	x20, [x23]
  420bc4:	ldr	x8, [x20, #288]
  420bc8:	cbz	x8, 420c18 <wcrtomb@plt+0x1c0d8>
  420bcc:	adrp	x21, 45c000 <_obstack_memory_used@@Base+0x154b0>
  420bd0:	adrp	x22, 45c000 <_obstack_memory_used@@Base+0x154b0>
  420bd4:	add	x21, x21, #0x9a6
  420bd8:	add	x22, x22, #0x9b8
  420bdc:	add	x2, x29, #0x18
  420be0:	mov	x0, x21
  420be4:	mov	x1, x20
  420be8:	bl	412c84 <wcrtomb@plt+0xe144>
  420bec:	ldr	x1, [x23]
  420bf0:	add	x2, x29, #0x18
  420bf4:	mov	x0, x22
  420bf8:	bl	412c84 <wcrtomb@plt+0xe144>
  420bfc:	ldr	x8, [x29, #24]
  420c00:	add	x8, x8, #0x1
  420c04:	str	x8, [x29, #24]
  420c08:	ldr	x20, [x23]
  420c0c:	ldr	x9, [x20, #288]
  420c10:	cmp	x8, x9
  420c14:	b.cc	420bdc <wcrtomb@plt+0x1c09c>  // b.lo, b.ul, b.last
  420c18:	mov	x22, xzr
  420c1c:	b	420c38 <wcrtomb@plt+0x1c0f8>
  420c20:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  420c24:	add	x0, x8, #0x158
  420c28:	add	x1, x1, #0x9cc
  420c2c:	bl	412f5c <wcrtomb@plt+0xe41c>
  420c30:	ldr	x20, [x23]
  420c34:	tbz	w0, #0, 420c74 <wcrtomb@plt+0x1c134>
  420c38:	ldr	x8, [x20, #264]
  420c3c:	ldr	x21, [x20, #136]
  420c40:	mov	x0, x20
  420c44:	str	x8, [x20, #136]
  420c48:	bl	40b044 <wcrtomb@plt+0x6504>
  420c4c:	str	x21, [x20, #136]
  420c50:	ldr	x8, [x23]
  420c54:	mov	x1, x0
  420c58:	mov	x2, x19
  420c5c:	mov	x0, x8
  420c60:	bl	40bbbc <wcrtomb@plt+0x707c>
  420c64:	cbz	x22, 420bb4 <wcrtomb@plt+0x1c074>
  420c68:	ldr	x20, [x23]
  420c6c:	mov	w19, #0x1                   	// #1
  420c70:	b	420c78 <wcrtomb@plt+0x1c138>
  420c74:	mov	w19, wzr
  420c78:	ldr	x0, [x20, #8]
  420c7c:	bl	404700 <free@plt>
  420c80:	ldr	x8, [x23]
  420c84:	str	x22, [x8, #8]
  420c88:	mov	w0, w19
  420c8c:	ldp	x20, x19, [sp, #112]
  420c90:	ldp	x22, x21, [sp, #96]
  420c94:	ldp	x24, x23, [sp, #80]
  420c98:	ldp	x26, x25, [sp, #64]
  420c9c:	ldr	x27, [sp, #48]
  420ca0:	ldp	x29, x30, [sp, #32]
  420ca4:	add	sp, sp, #0x80
  420ca8:	ret
  420cac:	sub	sp, sp, #0x90
  420cb0:	stp	x29, x30, [sp, #48]
  420cb4:	stp	x28, x27, [sp, #64]
  420cb8:	stp	x26, x25, [sp, #80]
  420cbc:	stp	x24, x23, [sp, #96]
  420cc0:	stp	x22, x21, [sp, #112]
  420cc4:	stp	x20, x19, [sp, #128]
  420cc8:	ldr	x8, [x0, #24]
  420ccc:	add	x29, sp, #0x30
  420cd0:	ldr	w8, [x8, #276]
  420cd4:	cbz	w8, 42100c <wcrtomb@plt+0x1c4cc>
  420cd8:	mov	x19, x0
  420cdc:	bl	4052f0 <wcrtomb@plt+0x7b0>
  420ce0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  420ce4:	ldr	x8, [x8, #3032]
  420ce8:	mov	x20, x0
  420cec:	mov	x0, x8
  420cf0:	bl	405670 <wcrtomb@plt+0xb30>
  420cf4:	bl	40535c <wcrtomb@plt+0x81c>
  420cf8:	cbz	x0, 420d54 <wcrtomb@plt+0x1c214>
  420cfc:	mov	x21, x0
  420d00:	mov	x22, xzr
  420d04:	add	x8, x0, #0x200
  420d08:	add	x23, sp, #0x10
  420d0c:	mov	x25, x0
  420d10:	b	420d34 <wcrtomb@plt+0x1c1f4>
  420d14:	mov	x21, x0
  420d18:	add	x8, x0, #0x200
  420d1c:	mov	x25, x0
  420d20:	ldrb	w9, [x25], #1
  420d24:	strb	w9, [x23, x22]
  420d28:	cmp	w9, #0xa
  420d2c:	add	x22, x22, #0x1
  420d30:	b.eq	420d8c <wcrtomb@plt+0x1c24c>  // b.none
  420d34:	cmp	x22, #0x14
  420d38:	b.eq	421014 <wcrtomb@plt+0x1c4d4>  // b.none
  420d3c:	cmp	x25, x8
  420d40:	b.ne	420d20 <wcrtomb@plt+0x1c1e0>  // b.any
  420d44:	mov	x0, x21
  420d48:	bl	405670 <wcrtomb@plt+0xb30>
  420d4c:	bl	40535c <wcrtomb@plt+0x81c>
  420d50:	cbnz	x0, 420d14 <wcrtomb@plt+0x1c1d4>
  420d54:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  420d58:	ldr	x8, [x8, #4064]
  420d5c:	cbz	x8, 420d64 <wcrtomb@plt+0x1c224>
  420d60:	blr	x8
  420d64:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  420d68:	add	x1, x1, #0xcd8
  420d6c:	mov	w2, #0x5                   	// #5
  420d70:	mov	x0, xzr
  420d74:	bl	404900 <dcgettext@plt>
  420d78:	mov	x2, x0
  420d7c:	mov	w0, wzr
  420d80:	mov	w1, wzr
  420d84:	bl	403fa0 <error@plt>
  420d88:	bl	40e96c <wcrtomb@plt+0x9e2c>
  420d8c:	add	x8, sp, #0x10
  420d90:	add	x8, x8, x22
  420d94:	sturb	wzr, [x8, #-1]
  420d98:	ldrb	w8, [sp, #16]
  420d9c:	sub	w8, w8, #0x30
  420da0:	cmp	w8, #0x9
  420da4:	b.hi	420de0 <wcrtomb@plt+0x1c2a0>  // b.pmore
  420da8:	bl	404a10 <__errno_location@plt>
  420dac:	mov	x22, x0
  420db0:	str	wzr, [x0]
  420db4:	add	x0, sp, #0x10
  420db8:	sub	x1, x29, #0x8
  420dbc:	mov	w2, #0xa                   	// #10
  420dc0:	mov	w3, wzr
  420dc4:	bl	404400 <__strtoul_internal@plt>
  420dc8:	ldr	w8, [x22]
  420dcc:	cmp	w8, #0x22
  420dd0:	b.eq	420de0 <wcrtomb@plt+0x1c2a0>  // b.none
  420dd4:	ldur	x8, [x29, #-8]
  420dd8:	ldrb	w8, [x8]
  420ddc:	cbz	w8, 420dfc <wcrtomb@plt+0x1c2bc>
  420de0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  420de4:	ldr	x8, [x8, #4064]
  420de8:	cbz	x8, 420df0 <wcrtomb@plt+0x1c2b0>
  420dec:	blr	x8
  420df0:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  420df4:	add	x1, x1, #0x7e7
  420df8:	b	42102c <wcrtomb@plt+0x1c4ec>
  420dfc:	ldr	x8, [x19, #24]
  420e00:	mov	w1, #0x10                  	// #16
  420e04:	str	x0, [x8, #296]
  420e08:	bl	445c24 <argp_parse@@Base+0xe378>
  420e0c:	ldr	x8, [x19, #24]
  420e10:	ldr	x9, [x8, #296]
  420e14:	str	x0, [x8, #304]
  420e18:	str	xzr, [x8, #288]
  420e1c:	cbz	x9, 420ff0 <wcrtomb@plt+0x1c4b0>
  420e20:	mov	x26, xzr
  420e24:	add	x27, sp, #0x10
  420e28:	mov	x23, xzr
  420e2c:	add	x8, x21, #0x200
  420e30:	b	420e48 <wcrtomb@plt+0x1c308>
  420e34:	ldrb	w9, [x25], #1
  420e38:	strb	w9, [x27, x23]
  420e3c:	cmp	w9, #0xa
  420e40:	add	x23, x23, #0x1
  420e44:	b.eq	420e78 <wcrtomb@plt+0x1c338>  // b.none
  420e48:	cmp	x23, #0x14
  420e4c:	b.eq	421014 <wcrtomb@plt+0x1c4d4>  // b.none
  420e50:	cmp	x25, x8
  420e54:	b.ne	420e34 <wcrtomb@plt+0x1c2f4>  // b.any
  420e58:	mov	x0, x21
  420e5c:	bl	405670 <wcrtomb@plt+0xb30>
  420e60:	bl	40535c <wcrtomb@plt+0x81c>
  420e64:	cbz	x0, 420d54 <wcrtomb@plt+0x1c214>
  420e68:	mov	x21, x0
  420e6c:	add	x8, x0, #0x200
  420e70:	mov	x25, x0
  420e74:	b	420e34 <wcrtomb@plt+0x1c2f4>
  420e78:	add	x8, x27, x23
  420e7c:	sturb	wzr, [x8, #-1]
  420e80:	ldrb	w8, [sp, #16]
  420e84:	sub	w8, w8, #0x30
  420e88:	cmp	w8, #0x9
  420e8c:	b.hi	420de0 <wcrtomb@plt+0x1c2a0>  // b.pmore
  420e90:	add	x0, sp, #0x10
  420e94:	sub	x1, x29, #0x8
  420e98:	mov	w2, #0xa                   	// #10
  420e9c:	mov	w3, wzr
  420ea0:	str	wzr, [x22]
  420ea4:	bl	404400 <__strtoul_internal@plt>
  420ea8:	tbnz	x0, #63, 420de0 <wcrtomb@plt+0x1c2a0>
  420eac:	ldr	w8, [x22]
  420eb0:	cmp	w8, #0x22
  420eb4:	b.eq	420de0 <wcrtomb@plt+0x1c2a0>  // b.none
  420eb8:	ldur	x8, [x29, #-8]
  420ebc:	ldrb	w8, [x8]
  420ec0:	cbnz	w8, 420de0 <wcrtomb@plt+0x1c2a0>
  420ec4:	mov	x23, x0
  420ec8:	mov	x24, xzr
  420ecc:	add	x8, x21, #0x200
  420ed0:	b	420ef4 <wcrtomb@plt+0x1c3b4>
  420ed4:	mov	x21, x0
  420ed8:	add	x8, x0, #0x200
  420edc:	mov	x25, x0
  420ee0:	ldrb	w9, [x25], #1
  420ee4:	strb	w9, [x27, x24]
  420ee8:	cmp	w9, #0xa
  420eec:	add	x24, x24, #0x1
  420ef0:	b.eq	420f18 <wcrtomb@plt+0x1c3d8>  // b.none
  420ef4:	cmp	x24, #0x14
  420ef8:	b.eq	421014 <wcrtomb@plt+0x1c4d4>  // b.none
  420efc:	cmp	x25, x8
  420f00:	b.ne	420ee0 <wcrtomb@plt+0x1c3a0>  // b.any
  420f04:	mov	x0, x21
  420f08:	bl	405670 <wcrtomb@plt+0xb30>
  420f0c:	bl	40535c <wcrtomb@plt+0x81c>
  420f10:	cbnz	x0, 420ed4 <wcrtomb@plt+0x1c394>
  420f14:	b	420d54 <wcrtomb@plt+0x1c214>
  420f18:	add	x8, x27, x24
  420f1c:	sturb	wzr, [x8, #-1]
  420f20:	ldrb	w8, [sp, #16]
  420f24:	sub	w8, w8, #0x30
  420f28:	cmp	w8, #0x9
  420f2c:	b.hi	420de0 <wcrtomb@plt+0x1c2a0>  // b.pmore
  420f30:	add	x0, sp, #0x10
  420f34:	sub	x1, x29, #0x8
  420f38:	mov	w2, #0xa                   	// #10
  420f3c:	mov	w3, wzr
  420f40:	str	wzr, [x22]
  420f44:	bl	404400 <__strtoul_internal@plt>
  420f48:	tbnz	x0, #63, 420de0 <wcrtomb@plt+0x1c2a0>
  420f4c:	ldr	w8, [x22]
  420f50:	cmp	w8, #0x22
  420f54:	b.eq	420de0 <wcrtomb@plt+0x1c2a0>  // b.none
  420f58:	ldur	x8, [x29, #-8]
  420f5c:	ldrb	w8, [x8]
  420f60:	cbnz	w8, 420de0 <wcrtomb@plt+0x1c2a0>
  420f64:	ldr	x28, [x19, #24]
  420f68:	str	x26, [sp, #8]
  420f6c:	mov	x24, x0
  420f70:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  420f74:	ldp	x26, x8, [x28, #288]
  420f78:	ldr	x0, [x28, #304]
  420f7c:	movk	x9, #0x555, lsl #48
  420f80:	cmp	x26, x8
  420f84:	b.ne	420fc8 <wcrtomb@plt+0x1c488>  // b.any
  420f88:	cbz	x0, 420fa0 <wcrtomb@plt+0x1c460>
  420f8c:	cmp	x26, x9
  420f90:	b.cs	421080 <wcrtomb@plt+0x1c540>  // b.hs, b.nlast
  420f94:	add	x8, x26, x26, lsr #1
  420f98:	add	x8, x8, #0x1
  420f9c:	b	420fb8 <wcrtomb@plt+0x1c478>
  420fa0:	cbz	x26, 420fb4 <wcrtomb@plt+0x1c474>
  420fa4:	lsr	x9, x26, #59
  420fa8:	mov	x8, x26
  420fac:	cbz	x9, 420fb8 <wcrtomb@plt+0x1c478>
  420fb0:	b	421080 <wcrtomb@plt+0x1c540>
  420fb4:	mov	w8, #0x8                   	// #8
  420fb8:	lsl	x1, x8, #4
  420fbc:	str	x8, [x28, #296]
  420fc0:	bl	445a68 <argp_parse@@Base+0xe1bc>
  420fc4:	str	x0, [x28, #304]
  420fc8:	add	x8, x0, x26, lsl #4
  420fcc:	add	x9, x26, #0x1
  420fd0:	stp	x23, x24, [x8]
  420fd4:	str	x9, [x28, #288]
  420fd8:	ldr	x8, [x19, #24]
  420fdc:	ldr	x26, [sp, #8]
  420fe0:	ldr	x8, [x8, #296]
  420fe4:	add	x26, x26, #0x1
  420fe8:	cmp	x26, x8
  420fec:	b.cc	420e28 <wcrtomb@plt+0x1c2e8>  // b.lo, b.ul, b.last
  420ff0:	mov	x0, x21
  420ff4:	bl	405670 <wcrtomb@plt+0xb30>
  420ff8:	bl	4052f0 <wcrtomb@plt+0x7b0>
  420ffc:	ldr	x8, [x19, #16]
  421000:	sub	x9, x0, x20
  421004:	add	x8, x8, x9, lsl #9
  421008:	str	x8, [x19, #16]
  42100c:	mov	w0, #0x1                   	// #1
  421010:	b	421060 <wcrtomb@plt+0x1c520>
  421014:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421018:	ldr	x8, [x8, #4064]
  42101c:	cbz	x8, 421024 <wcrtomb@plt+0x1c4e4>
  421020:	blr	x8
  421024:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421028:	add	x1, x1, #0x7b9
  42102c:	mov	w2, #0x5                   	// #5
  421030:	mov	x0, xzr
  421034:	bl	404900 <dcgettext@plt>
  421038:	ldr	x8, [x19, #24]
  42103c:	mov	x2, x0
  421040:	mov	w0, wzr
  421044:	mov	w1, wzr
  421048:	ldr	x3, [x8]
  42104c:	bl	403fa0 <error@plt>
  421050:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421054:	mov	w9, #0x2                   	// #2
  421058:	mov	w0, wzr
  42105c:	str	w9, [x8, #2416]
  421060:	ldp	x20, x19, [sp, #128]
  421064:	ldp	x22, x21, [sp, #112]
  421068:	ldp	x24, x23, [sp, #96]
  42106c:	ldp	x26, x25, [sp, #80]
  421070:	ldp	x28, x27, [sp, #64]
  421074:	ldp	x29, x30, [sp, #48]
  421078:	add	sp, sp, #0x90
  42107c:	ret
  421080:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  421084:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421088:	ldr	x8, [x8, #3032]
  42108c:	ldrb	w8, [x8, #156]
  421090:	cmp	w8, #0x53
  421094:	cset	w0, eq  // eq = none
  421098:	ret
  42109c:	stp	x29, x30, [sp, #-32]!
  4210a0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4210a4:	ldr	x8, [x8, #3032]
  4210a8:	str	x19, [sp, #16]
  4210ac:	mov	x19, x0
  4210b0:	mov	w1, #0xc                   	// #12
  4210b4:	add	x0, x8, #0x1c4
  4210b8:	mov	x29, sp
  4210bc:	bl	4197d4 <wcrtomb@plt+0x14c94>
  4210c0:	ldr	x8, [x19, #24]
  4210c4:	ldr	x19, [sp, #16]
  4210c8:	bic	x10, x0, x0, asr #63
  4210cc:	lsr	x11, x0, #63
  4210d0:	ldr	x9, [x8, #136]
  4210d4:	eor	w0, w11, #0x1
  4210d8:	str	x10, [x8, #136]
  4210dc:	str	x9, [x8, #264]
  4210e0:	ldp	x29, x30, [sp], #32
  4210e4:	ret
  4210e8:	stp	x29, x30, [sp, #-96]!
  4210ec:	stp	x28, x27, [sp, #16]
  4210f0:	stp	x26, x25, [sp, #32]
  4210f4:	stp	x24, x23, [sp, #48]
  4210f8:	stp	x22, x21, [sp, #64]
  4210fc:	stp	x20, x19, [sp, #80]
  421100:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421104:	ldr	x9, [x0, #24]
  421108:	ldr	x22, [x8, #3032]
  42110c:	mov	x19, x0
  421110:	mov	x29, sp
  421114:	str	xzr, [x9, #288]
  421118:	ldrb	w8, [x22, #345]
  42111c:	cbz	w8, 421130 <wcrtomb@plt+0x1c5f0>
  421120:	mov	w8, wzr
  421124:	mov	w9, #0x1                   	// #1
  421128:	cbnz	w9, 42124c <wcrtomb@plt+0x1c70c>
  42112c:	b	421380 <wcrtomb@plt+0x1c840>
  421130:	ldrb	w8, [x22, #366]
  421134:	cbz	w8, 42121c <wcrtomb@plt+0x1c6dc>
  421138:	mov	x24, #0x5555555555555555    	// #6148914691236517205
  42113c:	mov	x23, xzr
  421140:	movk	x24, #0x555, lsl #48
  421144:	mov	x25, #0x7fffffffffffffff    	// #9223372036854775807
  421148:	b	421188 <wcrtomb@plt+0x1c648>
  42114c:	cbz	x27, 421214 <wcrtomb@plt+0x1c6d4>
  421150:	lsr	x9, x27, #59
  421154:	mov	x8, x27
  421158:	cbnz	x9, 421430 <wcrtomb@plt+0x1c8f0>
  42115c:	lsl	x1, x8, #4
  421160:	str	x8, [x26, #296]
  421164:	bl	445a68 <argp_parse@@Base+0xe1bc>
  421168:	str	x0, [x26, #304]
  42116c:	add	x23, x23, #0x18
  421170:	add	x8, x0, x27, lsl #4
  421174:	add	x9, x27, #0x1
  421178:	cmp	x23, #0x60
  42117c:	stp	x20, x21, [x8]
  421180:	str	x9, [x26, #288]
  421184:	b.eq	421238 <wcrtomb@plt+0x1c6f8>  // b.none
  421188:	add	x8, x22, x23
  42118c:	ldrb	w9, [x8, #368]
  421190:	cbz	w9, 421230 <wcrtomb@plt+0x1c6f0>
  421194:	add	x0, x8, #0x164
  421198:	mov	w1, #0xc                   	// #12
  42119c:	add	x21, x8, #0x170
  4211a0:	bl	4197d4 <wcrtomb@plt+0x14c94>
  4211a4:	mov	x20, x0
  4211a8:	mov	w1, #0xc                   	// #12
  4211ac:	mov	x0, x21
  4211b0:	bl	4197d4 <wcrtomb@plt+0x14c94>
  4211b4:	orr	x9, x0, x20
  4211b8:	mov	w8, #0x2                   	// #2
  4211bc:	tbnz	x9, #63, 42123c <wcrtomb@plt+0x1c6fc>
  4211c0:	sub	x9, x25, x0
  4211c4:	mov	x21, x0
  4211c8:	cmp	x9, x20
  4211cc:	b.lt	42123c <wcrtomb@plt+0x1c6fc>  // b.tstop
  4211d0:	ldr	x26, [x19, #24]
  4211d4:	add	x9, x21, x20
  4211d8:	ldr	x8, [x26, #136]
  4211dc:	cmp	x8, x9
  4211e0:	b.lt	421228 <wcrtomb@plt+0x1c6e8>  // b.tstop
  4211e4:	ldr	x8, [x26, #264]
  4211e8:	tbnz	x8, #63, 421228 <wcrtomb@plt+0x1c6e8>
  4211ec:	ldp	x27, x8, [x26, #288]
  4211f0:	ldr	x0, [x26, #304]
  4211f4:	cmp	x27, x8
  4211f8:	b.ne	42116c <wcrtomb@plt+0x1c62c>  // b.any
  4211fc:	cbz	x0, 42114c <wcrtomb@plt+0x1c60c>
  421200:	cmp	x27, x24
  421204:	b.cs	421430 <wcrtomb@plt+0x1c8f0>  // b.hs, b.nlast
  421208:	add	x8, x27, x27, lsr #1
  42120c:	add	x8, x8, #0x1
  421210:	b	42115c <wcrtomb@plt+0x1c61c>
  421214:	mov	w8, #0x8                   	// #8
  421218:	b	42115c <wcrtomb@plt+0x1c61c>
  42121c:	mov	w9, #0x1                   	// #1
  421220:	cbnz	w9, 42124c <wcrtomb@plt+0x1c70c>
  421224:	b	421380 <wcrtomb@plt+0x1c840>
  421228:	mov	w8, #0x2                   	// #2
  42122c:	b	42123c <wcrtomb@plt+0x1c6fc>
  421230:	mov	w8, #0x1                   	// #1
  421234:	b	42123c <wcrtomb@plt+0x1c6fc>
  421238:	mov	w8, wzr
  42123c:	ldrb	w9, [x22, #355]
  421240:	cmp	w9, #0x0
  421244:	cset	w9, ne  // ne = any
  421248:	cbz	w9, 421380 <wcrtomb@plt+0x1c840>
  42124c:	cbnz	w8, 421380 <wcrtomb@plt+0x1c840>
  421250:	mov	x24, #0x5555555555555555    	// #6148914691236517205
  421254:	movk	x24, #0x555, lsl #48
  421258:	mov	x25, #0x7fffffffffffffff    	// #9223372036854775807
  42125c:	bl	40535c <wcrtomb@plt+0x81c>
  421260:	cbz	x0, 4213d0 <wcrtomb@plt+0x1c890>
  421264:	mov	x20, x0
  421268:	bl	405670 <wcrtomb@plt+0xb30>
  42126c:	add	x21, x20, #0xc
  421270:	mov	x26, #0xffffffffffffffff    	// #-1
  421274:	b	4212ac <wcrtomb@plt+0x1c76c>
  421278:	mov	w8, #0x8                   	// #8
  42127c:	lsl	x1, x8, #4
  421280:	str	x8, [x27, #296]
  421284:	bl	445a68 <argp_parse@@Base+0xe1bc>
  421288:	str	x0, [x27, #304]
  42128c:	add	x26, x26, #0x1
  421290:	add	x8, x0, x28, lsl #4
  421294:	add	x9, x28, #0x1
  421298:	cmp	x26, #0x14
  42129c:	add	x21, x21, #0x18
  4212a0:	stp	x22, x23, [x8]
  4212a4:	str	x9, [x27, #288]
  4212a8:	b.cs	421360 <wcrtomb@plt+0x1c820>  // b.hs, b.nlast
  4212ac:	ldrb	w8, [x21]
  4212b0:	cbz	w8, 421354 <wcrtomb@plt+0x1c814>
  4212b4:	sub	x0, x21, #0xc
  4212b8:	mov	w1, #0xc                   	// #12
  4212bc:	bl	4197d4 <wcrtomb@plt+0x14c94>
  4212c0:	mov	x22, x0
  4212c4:	mov	w1, #0xc                   	// #12
  4212c8:	mov	x0, x21
  4212cc:	bl	4197d4 <wcrtomb@plt+0x14c94>
  4212d0:	mov	w9, wzr
  4212d4:	orr	x10, x0, x22
  4212d8:	mov	w8, #0x2                   	// #2
  4212dc:	tbnz	x10, #63, 421368 <wcrtomb@plt+0x1c828>
  4212e0:	sub	x10, x25, x0
  4212e4:	mov	x23, x0
  4212e8:	cmp	x10, x22
  4212ec:	b.lt	421368 <wcrtomb@plt+0x1c828>  // b.tstop
  4212f0:	ldr	x27, [x19, #24]
  4212f4:	add	x9, x23, x22
  4212f8:	ldr	x8, [x27, #136]
  4212fc:	cmp	x8, x9
  421300:	b.lt	421348 <wcrtomb@plt+0x1c808>  // b.tstop
  421304:	ldr	x8, [x27, #264]
  421308:	tbnz	x8, #63, 421348 <wcrtomb@plt+0x1c808>
  42130c:	ldp	x28, x8, [x27, #288]
  421310:	ldr	x0, [x27, #304]
  421314:	cmp	x28, x8
  421318:	b.ne	42128c <wcrtomb@plt+0x1c74c>  // b.any
  42131c:	cbz	x0, 421334 <wcrtomb@plt+0x1c7f4>
  421320:	cmp	x28, x24
  421324:	b.cs	421430 <wcrtomb@plt+0x1c8f0>  // b.hs, b.nlast
  421328:	add	x8, x28, x28, lsr #1
  42132c:	add	x8, x8, #0x1
  421330:	b	42127c <wcrtomb@plt+0x1c73c>
  421334:	cbz	x28, 421278 <wcrtomb@plt+0x1c738>
  421338:	lsr	x9, x28, #59
  42133c:	mov	x8, x28
  421340:	cbz	x9, 42127c <wcrtomb@plt+0x1c73c>
  421344:	b	421430 <wcrtomb@plt+0x1c8f0>
  421348:	mov	w9, wzr
  42134c:	mov	w8, #0x2                   	// #2
  421350:	b	421368 <wcrtomb@plt+0x1c828>
  421354:	mov	w9, wzr
  421358:	mov	w8, #0x1                   	// #1
  42135c:	b	421368 <wcrtomb@plt+0x1c828>
  421360:	mov	w8, wzr
  421364:	mov	w9, #0x1                   	// #1
  421368:	ldr	x10, [x19, #16]
  42136c:	add	x10, x10, #0x200
  421370:	str	x10, [x19, #16]
  421374:	ldrb	w10, [x20, #504]
  421378:	cbz	w10, 421380 <wcrtomb@plt+0x1c840>
  42137c:	tbnz	w9, #0, 42125c <wcrtomb@plt+0x1c71c>
  421380:	cmp	w8, #0x2
  421384:	b.ne	4213c8 <wcrtomb@plt+0x1c888>  // b.any
  421388:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42138c:	ldr	x8, [x8, #4064]
  421390:	cbz	x8, 421398 <wcrtomb@plt+0x1c858>
  421394:	blr	x8
  421398:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42139c:	add	x1, x1, #0x780
  4213a0:	mov	w2, #0x5                   	// #5
  4213a4:	mov	x0, xzr
  4213a8:	bl	404900 <dcgettext@plt>
  4213ac:	ldr	x8, [x19, #24]
  4213b0:	mov	x2, x0
  4213b4:	mov	w0, wzr
  4213b8:	mov	w1, wzr
  4213bc:	ldr	x3, [x8]
  4213c0:	bl	403fa0 <error@plt>
  4213c4:	b	421404 <wcrtomb@plt+0x1c8c4>
  4213c8:	mov	w0, #0x1                   	// #1
  4213cc:	b	421414 <wcrtomb@plt+0x1c8d4>
  4213d0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4213d4:	ldr	x8, [x8, #4064]
  4213d8:	cbz	x8, 4213e0 <wcrtomb@plt+0x1c8a0>
  4213dc:	blr	x8
  4213e0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4213e4:	add	x1, x1, #0xcd8
  4213e8:	mov	w2, #0x5                   	// #5
  4213ec:	mov	x0, xzr
  4213f0:	bl	404900 <dcgettext@plt>
  4213f4:	mov	x2, x0
  4213f8:	mov	w0, wzr
  4213fc:	mov	w1, wzr
  421400:	bl	403fa0 <error@plt>
  421404:	mov	w0, wzr
  421408:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42140c:	mov	w9, #0x2                   	// #2
  421410:	str	w9, [x8, #2416]
  421414:	ldp	x20, x19, [sp, #80]
  421418:	ldp	x22, x21, [sp, #64]
  42141c:	ldp	x24, x23, [sp, #48]
  421420:	ldp	x26, x25, [sp, #32]
  421424:	ldp	x28, x27, [sp, #16]
  421428:	ldp	x29, x30, [sp], #96
  42142c:	ret
  421430:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  421434:	stp	x29, x30, [sp, #-48]!
  421438:	stp	x20, x19, [sp, #32]
  42143c:	mov	x19, x1
  421440:	mov	w1, #0x2e                  	// #46
  421444:	stp	x22, x21, [sp, #16]
  421448:	mov	x29, sp
  42144c:	bl	404530 <strrchr@plt>
  421450:	cbz	x0, 4214a4 <wcrtomb@plt+0x1c964>
  421454:	add	x20, x0, #0x1
  421458:	mov	x0, x20
  42145c:	bl	403f40 <strlen@plt>
  421460:	mov	x21, x0
  421464:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  421468:	adrp	x22, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42146c:	add	x0, x0, #0x42c
  421470:	add	x22, x22, #0x870
  421474:	b	421484 <wcrtomb@plt+0x1c944>
  421478:	ldr	x0, [x22, #8]
  42147c:	add	x22, x22, #0x18
  421480:	cbz	x0, 4214a4 <wcrtomb@plt+0x1c964>
  421484:	ldur	x8, [x22, #-8]
  421488:	cmp	x8, x21
  42148c:	b.ne	421478 <wcrtomb@plt+0x1c938>  // b.any
  421490:	mov	x1, x20
  421494:	mov	x2, x21
  421498:	bl	404440 <bcmp@plt>
  42149c:	cbnz	w0, 421478 <wcrtomb@plt+0x1c938>
  4214a0:	ldr	x19, [x22]
  4214a4:	cbz	x19, 4214b0 <wcrtomb@plt+0x1c970>
  4214a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4214ac:	str	x19, [x8, #3960]
  4214b0:	ldp	x20, x19, [sp, #32]
  4214b4:	ldp	x22, x21, [sp, #16]
  4214b8:	ldp	x29, x30, [sp], #48
  4214bc:	ret
  4214c0:	stp	x29, x30, [sp, #-64]!
  4214c4:	mov	w1, #0x2e                  	// #46
  4214c8:	str	x23, [sp, #16]
  4214cc:	stp	x22, x21, [sp, #32]
  4214d0:	stp	x20, x19, [sp, #48]
  4214d4:	mov	x29, sp
  4214d8:	mov	x19, x0
  4214dc:	bl	404530 <strrchr@plt>
  4214e0:	cbz	x0, 42159c <wcrtomb@plt+0x1ca5c>
  4214e4:	add	x22, x0, #0x1
  4214e8:	mov	x0, x22
  4214ec:	bl	403f40 <strlen@plt>
  4214f0:	adrp	x20, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4214f4:	adrp	x23, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4214f8:	mov	x21, x0
  4214fc:	add	x20, x20, #0x42c
  421500:	add	x23, x23, #0x878
  421504:	b	421510 <wcrtomb@plt+0x1c9d0>
  421508:	ldr	x20, [x23], #24
  42150c:	cbz	x20, 4215a0 <wcrtomb@plt+0x1ca60>
  421510:	ldur	x8, [x23, #-16]
  421514:	cmp	x8, x21
  421518:	b.ne	421508 <wcrtomb@plt+0x1c9c8>  // b.any
  42151c:	mov	x0, x20
  421520:	mov	x1, x22
  421524:	mov	x2, x21
  421528:	bl	404440 <bcmp@plt>
  42152c:	cbnz	w0, 421508 <wcrtomb@plt+0x1c9c8>
  421530:	mov	x0, x19
  421534:	bl	403f40 <strlen@plt>
  421538:	mvn	x8, x21
  42153c:	add	x21, x0, x8
  421540:	cmp	x21, #0x5
  421544:	b.cc	421578 <wcrtomb@plt+0x1ca38>  // b.lo, b.ul, b.last
  421548:	add	x8, x19, x21
  42154c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421550:	sub	x0, x8, #0x4
  421554:	add	x1, x1, #0x82d
  421558:	mov	w2, #0x4                   	// #4
  42155c:	bl	404300 <strncmp@plt>
  421560:	cbnz	w0, 42157c <wcrtomb@plt+0x1ca3c>
  421564:	ldrb	w8, [x20]
  421568:	sub	x9, x21, #0x4
  42156c:	cmp	w8, #0x74
  421570:	csel	x21, x21, x9, eq  // eq = none
  421574:	b	42157c <wcrtomb@plt+0x1ca3c>
  421578:	cbz	x21, 42159c <wcrtomb@plt+0x1ca5c>
  42157c:	add	x0, x21, #0x1
  421580:	bl	4459e8 <argp_parse@@Base+0xe13c>
  421584:	mov	x1, x19
  421588:	mov	x2, x21
  42158c:	mov	x20, x0
  421590:	bl	403ec0 <memcpy@plt>
  421594:	strb	wzr, [x20, x21]
  421598:	b	4215a0 <wcrtomb@plt+0x1ca60>
  42159c:	mov	x20, xzr
  4215a0:	mov	x0, x20
  4215a4:	ldp	x20, x19, [sp, #48]
  4215a8:	ldp	x22, x21, [sp, #32]
  4215ac:	ldr	x23, [sp, #16]
  4215b0:	ldp	x29, x30, [sp], #64
  4215b4:	ret
  4215b8:	stp	x29, x30, [sp, #-16]!
  4215bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4215c0:	ldr	w1, [x8, #4032]
  4215c4:	adrp	x2, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4215c8:	add	x2, x2, #0x748
  4215cc:	mov	w0, wzr
  4215d0:	mov	x29, sp
  4215d4:	bl	4048e0 <__fxstat@plt>
  4215d8:	cmp	w0, #0x0
  4215dc:	cset	w0, eq  // eq = none
  4215e0:	ldp	x29, x30, [sp], #16
  4215e4:	ret
  4215e8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4215ec:	ldr	x8, [x8, #3600]
  4215f0:	cbz	x8, 421618 <wcrtomb@plt+0x1cad8>
  4215f4:	ldr	x9, [x0, #88]
  4215f8:	cmp	x9, x8
  4215fc:	b.ne	421618 <wcrtomb@plt+0x1cad8>  // b.any
  421600:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421604:	ldr	x8, [x0, #96]
  421608:	ldr	x9, [x9, #3944]
  42160c:	cmp	x8, x9
  421610:	cset	w0, eq  // eq = none
  421614:	ret
  421618:	mov	w0, wzr
  42161c:	ret
  421620:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421624:	ldr	w8, [x8, #4032]
  421628:	mov	w9, #0x3fffffff            	// #1073741823
  42162c:	cmp	w8, w9
  421630:	b.gt	421668 <wcrtomb@plt+0x1cb28>
  421634:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421638:	ldr	w8, [x8, #1880]
  42163c:	and	w8, w8, #0xf000
  421640:	cmp	w8, #0x8, lsl #12
  421644:	b.ne	421668 <wcrtomb@plt+0x1cb28>  // b.any
  421648:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42164c:	add	x8, x8, #0x748
  421650:	ldp	x9, x8, [x8]
  421654:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421658:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42165c:	str	x9, [x10, #3600]
  421660:	str	x8, [x11, #3944]
  421664:	ret
  421668:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42166c:	str	xzr, [x8, #3600]
  421670:	ret
  421674:	sub	sp, sp, #0x90
  421678:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42167c:	ldr	x8, [x8, #3744]
  421680:	stp	x29, x30, [sp, #128]
  421684:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421688:	add	x1, x1, #0xa28
  42168c:	ldr	x0, [x8]
  421690:	add	x29, sp, #0x80
  421694:	bl	404660 <strcmp@plt>
  421698:	cbz	w0, 421714 <wcrtomb@plt+0x1cbd4>
  42169c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4216a0:	ldr	w8, [x8, #4032]
  4216a4:	mov	w9, #0x3fffffff            	// #1073741823
  4216a8:	cmp	w8, w9
  4216ac:	b.gt	42170c <wcrtomb@plt+0x1cbcc>
  4216b0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4216b4:	ldr	w8, [x8, #1880]
  4216b8:	and	w8, w8, #0xf000
  4216bc:	cmp	w8, #0x2, lsl #12
  4216c0:	b.ne	42170c <wcrtomb@plt+0x1cbcc>  // b.any
  4216c4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4216c8:	add	x1, x1, #0xa28
  4216cc:	mov	x2, sp
  4216d0:	mov	w0, wzr
  4216d4:	bl	404a40 <__xstat@plt>
  4216d8:	mov	w8, wzr
  4216dc:	cbnz	w0, 421718 <wcrtomb@plt+0x1cbd8>
  4216e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4216e4:	ldr	x8, [x8, #1864]
  4216e8:	ldr	x9, [sp]
  4216ec:	cmp	x8, x9
  4216f0:	b.ne	42170c <wcrtomb@plt+0x1cbcc>  // b.any
  4216f4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4216f8:	ldr	x8, [x8, #1872]
  4216fc:	ldr	x9, [sp, #8]
  421700:	cmp	x8, x9
  421704:	cset	w8, eq  // eq = none
  421708:	b	421718 <wcrtomb@plt+0x1cbd8>
  42170c:	mov	w8, wzr
  421710:	b	421718 <wcrtomb@plt+0x1cbd8>
  421714:	mov	w8, #0x1                   	// #1
  421718:	ldp	x29, x30, [sp, #128]
  42171c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421720:	strb	w8, [x9, #3592]
  421724:	add	sp, sp, #0x90
  421728:	ret
  42172c:	sub	sp, sp, #0x30
  421730:	stp	x29, x30, [sp, #16]
  421734:	stp	x20, x19, [sp, #32]
  421738:	add	x29, sp, #0x10
  42173c:	cbz	w0, 4217ec <wcrtomb@plt+0x1ccac>
  421740:	mov	w19, w1
  421744:	mov	w20, w0
  421748:	sub	x1, x29, #0x4
  42174c:	mov	w0, w20
  421750:	mov	w2, wzr
  421754:	bl	404a90 <waitpid@plt>
  421758:	cmn	w0, #0x1
  42175c:	b.ne	42177c <wcrtomb@plt+0x1cc3c>  // b.any
  421760:	bl	404a10 <__errno_location@plt>
  421764:	ldr	w8, [x0]
  421768:	cmp	w8, #0x4
  42176c:	b.eq	421748 <wcrtomb@plt+0x1cc08>  // b.none
  421770:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421774:	ldr	x0, [x8, #3960]
  421778:	bl	42b450 <wcrtomb@plt+0x26910>
  42177c:	ldur	w9, [x29, #-4]
  421780:	mov	w10, #0x1000000             	// #16777216
  421784:	mov	w11, #0x2000000             	// #33554432
  421788:	and	w8, w9, #0x7f
  42178c:	add	w10, w10, w8, lsl #24
  421790:	cmp	w10, w11
  421794:	b.lt	4217e4 <wcrtomb@plt+0x1cca4>  // b.tstop
  421798:	cmp	w8, #0xd
  42179c:	b.ne	4217a4 <wcrtomb@plt+0x1cc64>  // b.any
  4217a0:	tbz	w19, #0, 4217ec <wcrtomb@plt+0x1ccac>
  4217a4:	mov	w19, w8
  4217a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4217ac:	ldr	x8, [x8, #4064]
  4217b0:	cbz	x8, 4217b8 <wcrtomb@plt+0x1cc78>
  4217b4:	blr	x8
  4217b8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4217bc:	add	x1, x1, #0xa32
  4217c0:	mov	w2, #0x5                   	// #5
  4217c4:	mov	x0, xzr
  4217c8:	bl	404900 <dcgettext@plt>
  4217cc:	mov	x2, x0
  4217d0:	mov	w0, wzr
  4217d4:	mov	w1, wzr
  4217d8:	mov	w3, w19
  4217dc:	bl	403fa0 <error@plt>
  4217e0:	bl	40e96c <wcrtomb@plt+0x9e2c>
  4217e4:	tst	w9, #0xff00
  4217e8:	b.ne	4217fc <wcrtomb@plt+0x1ccbc>  // b.any
  4217ec:	ldp	x20, x19, [sp, #32]
  4217f0:	ldp	x29, x30, [sp, #16]
  4217f4:	add	sp, sp, #0x30
  4217f8:	ret
  4217fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421800:	ldr	x8, [x8, #4064]
  421804:	cbz	x8, 42180c <wcrtomb@plt+0x1cccc>
  421808:	blr	x8
  42180c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421810:	add	x1, x1, #0xa80
  421814:	mov	w2, #0x5                   	// #5
  421818:	mov	x0, xzr
  42181c:	bl	404900 <dcgettext@plt>
  421820:	ldurb	w3, [x29, #-3]
  421824:	mov	x2, x0
  421828:	mov	w0, wzr
  42182c:	mov	w1, wzr
  421830:	bl	403fa0 <error@plt>
  421834:	bl	40e96c <wcrtomb@plt+0x9e2c>
  421838:	sub	sp, sp, #0x30
  42183c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421840:	add	x0, x0, #0xa4c
  421844:	stp	x29, x30, [sp, #16]
  421848:	stp	x20, x19, [sp, #32]
  42184c:	add	x29, sp, #0x10
  421850:	bl	404a30 <getenv@plt>
  421854:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421858:	add	x8, x8, #0xa52
  42185c:	cmp	x0, #0x0
  421860:	csel	x19, x8, x0, eq  // eq = none
  421864:	bl	41c4d8 <wcrtomb@plt+0x17998>
  421868:	cbz	w0, 4218b0 <wcrtomb@plt+0x1cd70>
  42186c:	mov	w20, w0
  421870:	sub	x1, x29, #0x4
  421874:	mov	w0, w20
  421878:	mov	w2, wzr
  42187c:	bl	404a90 <waitpid@plt>
  421880:	cmn	w0, #0x1
  421884:	b.ne	4218a0 <wcrtomb@plt+0x1cd60>  // b.any
  421888:	bl	404a10 <__errno_location@plt>
  42188c:	ldr	w8, [x0]
  421890:	cmp	w8, #0x4
  421894:	b.eq	421870 <wcrtomb@plt+0x1cd30>  // b.none
  421898:	mov	x0, x19
  42189c:	bl	42b450 <wcrtomb@plt+0x26910>
  4218a0:	ldp	x20, x19, [sp, #32]
  4218a4:	ldp	x29, x30, [sp, #16]
  4218a8:	add	sp, sp, #0x30
  4218ac:	ret
  4218b0:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4218b4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4218b8:	add	x1, x1, #0xa5a
  4218bc:	add	x2, x2, #0x3e6
  4218c0:	mov	x0, x19
  4218c4:	mov	x3, xzr
  4218c8:	bl	404a20 <execlp@plt>
  4218cc:	mov	x0, x19
  4218d0:	bl	42a634 <wcrtomb@plt+0x25af4>
  4218d4:	ldr	w8, [x0, #24]
  4218d8:	ldr	w9, [x1, #24]
  4218dc:	cmp	w8, w9
  4218e0:	cset	w0, eq  // eq = none
  4218e4:	ret
  4218e8:	ldr	w8, [x0, #28]
  4218ec:	ldr	w9, [x1, #28]
  4218f0:	cmp	w8, w9
  4218f4:	cset	w0, eq  // eq = none
  4218f8:	ret
  4218fc:	ldr	x8, [x1]
  421900:	ldr	x9, [x0]
  421904:	cmp	x8, x9
  421908:	b.ne	421920 <wcrtomb@plt+0x1cde0>  // b.any
  42190c:	ldr	x8, [x1, #8]
  421910:	ldr	x9, [x0, #8]
  421914:	cmp	x8, x9
  421918:	cset	w0, eq  // eq = none
  42191c:	ret
  421920:	mov	w0, wzr
  421924:	ret
  421928:	stp	x29, x30, [sp, #-32]!
  42192c:	mov	w2, #0x1                   	// #1
  421930:	mov	x1, xzr
  421934:	str	x19, [sp, #16]
  421938:	mov	x29, sp
  42193c:	mov	w19, w0
  421940:	bl	404120 <lseek@plt>
  421944:	tbnz	x0, #63, 42195c <wcrtomb@plt+0x1ce1c>
  421948:	mov	x1, x0
  42194c:	mov	w0, w19
  421950:	ldr	x19, [sp, #16]
  421954:	ldp	x29, x30, [sp], #32
  421958:	b	404950 <ftruncate@plt>
  42195c:	ldr	x19, [sp, #16]
  421960:	mov	w0, #0xffffffff            	// #-1
  421964:	ldp	x29, x30, [sp], #32
  421968:	ret
  42196c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421970:	ldr	w0, [x8, #4032]
  421974:	mov	w8, #0x40000000            	// #1073741824
  421978:	cmp	w0, w8
  42197c:	b.lt	42199c <wcrtomb@plt+0x1ce5c>  // b.tstop
  421980:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421984:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421988:	ldr	x1, [x8, #2944]
  42198c:	ldr	x2, [x9, #3976]
  421990:	mov	w8, #0xc0000000            	// #-1073741824
  421994:	add	w0, w0, w8
  421998:	b	42c238 <wcrtomb@plt+0x276f8>
  42199c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4219a0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4219a4:	ldr	x1, [x8, #2944]
  4219a8:	ldr	x2, [x9, #3976]
  4219ac:	b	43b4b0 <argp_parse@@Base+0x3c04>
  4219b0:	sub	sp, sp, #0xe0
  4219b4:	mov	w0, #0xd                   	// #13
  4219b8:	mov	w1, #0x1                   	// #1
  4219bc:	stp	x29, x30, [sp, #144]
  4219c0:	stp	x26, x25, [sp, #160]
  4219c4:	stp	x24, x23, [sp, #176]
  4219c8:	stp	x22, x21, [sp, #192]
  4219cc:	stp	x20, x19, [sp, #208]
  4219d0:	add	x29, sp, #0x90
  4219d4:	bl	4041b0 <signal@plt>
  4219d8:	add	x0, sp, #0x8
  4219dc:	bl	41c518 <wcrtomb@plt+0x179d8>
  4219e0:	bl	41c4d8 <wcrtomb@plt+0x17998>
  4219e4:	cmp	w0, #0x1
  4219e8:	b.lt	421a20 <wcrtomb@plt+0x1cee0>  // b.tstop
  4219ec:	mov	w19, w0
  4219f0:	ldp	w0, w8, [sp, #8]
  4219f4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4219f8:	str	w8, [x9, #4032]
  4219fc:	bl	4056c4 <wcrtomb@plt+0xb84>
  421a00:	mov	w0, w19
  421a04:	ldp	x20, x19, [sp, #208]
  421a08:	ldp	x22, x21, [sp, #192]
  421a0c:	ldp	x24, x23, [sp, #176]
  421a10:	ldp	x26, x25, [sp, #160]
  421a14:	ldp	x29, x30, [sp, #144]
  421a18:	add	sp, sp, #0xe0
  421a1c:	ret
  421a20:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421a24:	add	x1, x1, #0xa5e
  421a28:	mov	w2, #0x5                   	// #5
  421a2c:	mov	x0, xzr
  421a30:	bl	404900 <dcgettext@plt>
  421a34:	bl	44329c <argp_parse@@Base+0xb9f0>
  421a38:	mov	w0, #0xd                   	// #13
  421a3c:	mov	x1, xzr
  421a40:	bl	4041b0 <signal@plt>
  421a44:	ldr	w0, [sp, #8]
  421a48:	mov	w1, wzr
  421a4c:	bl	421d60 <wcrtomb@plt+0x1d220>
  421a50:	ldr	w0, [sp, #12]
  421a54:	bl	4056c4 <wcrtomb@plt+0xb84>
  421a58:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421a5c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421a60:	ldrb	w8, [x23, #4072]
  421a64:	ldr	x19, [x21, #3744]
  421a68:	cbz	w8, 421a94 <wcrtomb@plt+0x1cf54>
  421a6c:	ldr	x1, [x19]
  421a70:	add	x2, sp, #0x10
  421a74:	mov	w0, wzr
  421a78:	bl	404a40 <__xstat@plt>
  421a7c:	cbz	w0, 421acc <wcrtomb@plt+0x1cf8c>
  421a80:	bl	404a10 <__errno_location@plt>
  421a84:	ldr	w8, [x0]
  421a88:	cmp	w8, #0x2
  421a8c:	b.ne	421adc <wcrtomb@plt+0x1cf9c>  // b.any
  421a90:	b	421cd4 <wcrtomb@plt+0x1d194>
  421a94:	ldr	x0, [x19]
  421a98:	mov	w1, #0x3a                  	// #58
  421a9c:	bl	4047a0 <strchr@plt>
  421aa0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421aa4:	str	x0, [x9, #4080]
  421aa8:	cbz	x0, 421a6c <wcrtomb@plt+0x1cf2c>
  421aac:	mov	x8, x0
  421ab0:	ldr	x0, [x19]
  421ab4:	subs	x2, x8, x0
  421ab8:	b.ls	421a6c <wcrtomb@plt+0x1cf2c>  // b.plast
  421abc:	mov	w1, #0x2f                  	// #47
  421ac0:	bl	404890 <memchr@plt>
  421ac4:	cbnz	x0, 421a6c <wcrtomb@plt+0x1cf2c>
  421ac8:	b	421adc <wcrtomb@plt+0x1cf9c>
  421acc:	ldr	w8, [sp, #32]
  421ad0:	and	w8, w8, #0xf000
  421ad4:	cmp	w8, #0x8, lsl #12
  421ad8:	b.eq	421cd4 <wcrtomb@plt+0x1d194>  // b.none
  421adc:	add	x0, sp, #0x10
  421ae0:	bl	41c518 <wcrtomb@plt+0x179d8>
  421ae4:	bl	41c4d8 <wcrtomb@plt+0x17998>
  421ae8:	cbz	w0, 421ca4 <wcrtomb@plt+0x1d164>
  421aec:	mov	w19, w0
  421af0:	ldr	w0, [sp, #16]
  421af4:	mov	w1, wzr
  421af8:	bl	421d60 <wcrtomb@plt+0x1d220>
  421afc:	ldr	w0, [sp, #20]
  421b00:	bl	4056c4 <wcrtomb@plt+0xb84>
  421b04:	ldr	x24, [x21, #3744]
  421b08:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  421b0c:	add	x1, x1, #0x85
  421b10:	ldr	x20, [x24]
  421b14:	mov	x0, x20
  421b18:	bl	404660 <strcmp@plt>
  421b1c:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421b20:	cbz	w0, 421b74 <wcrtomb@plt+0x1d034>
  421b24:	ldrb	w8, [x23, #4072]
  421b28:	cbnz	w8, 421b5c <wcrtomb@plt+0x1d01c>
  421b2c:	mov	w1, #0x3a                  	// #58
  421b30:	mov	x0, x20
  421b34:	bl	4047a0 <strchr@plt>
  421b38:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421b3c:	str	x0, [x8, #4080]
  421b40:	ldr	x20, [x24]
  421b44:	subs	x2, x0, x20
  421b48:	b.ls	421b5c <wcrtomb@plt+0x1d01c>  // b.plast
  421b4c:	mov	w1, #0x2f                  	// #47
  421b50:	mov	x0, x20
  421b54:	bl	404890 <memchr@plt>
  421b58:	cbz	x0, 421c78 <wcrtomb@plt+0x1d138>
  421b5c:	mov	w1, #0x1b6                 	// #438
  421b60:	mov	x0, x20
  421b64:	bl	404ad0 <creat@plt>
  421b68:	str	w0, [x22, #4032]
  421b6c:	tbz	w0, #31, 421b7c <wcrtomb@plt+0x1d03c>
  421b70:	b	421d40 <wcrtomb@plt+0x1d200>
  421b74:	mov	w8, #0x1                   	// #1
  421b78:	str	w8, [x22, #4032]
  421b7c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421b80:	ldr	x2, [x21, #3976]
  421b84:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421b88:	mov	w24, #0x40000000            	// #1073741824
  421b8c:	mov	w25, #0xc0000000            	// #-1073741824
  421b90:	b	421bac <wcrtomb@plt+0x1d06c>
  421b94:	ldr	x1, [x23, #2944]
  421b98:	bl	43b4b0 <argp_parse@@Base+0x3c04>
  421b9c:	ldr	x8, [x21, #3976]
  421ba0:	mov	x2, x0
  421ba4:	cmp	x0, x8
  421ba8:	b.ne	421c9c <wcrtomb@plt+0x1d15c>  // b.any
  421bac:	cbz	x2, 421c6c <wcrtomb@plt+0x1d12c>
  421bb0:	ldr	x20, [x23, #2944]
  421bb4:	mov	x26, xzr
  421bb8:	sub	x2, x2, x26
  421bbc:	mov	w0, wzr
  421bc0:	mov	x1, x20
  421bc4:	bl	444d88 <argp_parse@@Base+0xd4dc>
  421bc8:	cbz	x0, 421c04 <wcrtomb@plt+0x1d0c4>
  421bcc:	cmn	x0, #0x1
  421bd0:	b.eq	421c48 <wcrtomb@plt+0x1d108>  // b.none
  421bd4:	ldr	x2, [x21, #3976]
  421bd8:	add	x26, x0, x26
  421bdc:	add	x20, x20, x0
  421be0:	cmp	x2, x26
  421be4:	b.hi	421bb8 <wcrtomb@plt+0x1d078>  // b.pmore
  421be8:	ldr	w0, [x22, #4032]
  421bec:	cmp	w0, w24
  421bf0:	b.lt	421b94 <wcrtomb@plt+0x1d054>  // b.tstop
  421bf4:	ldr	x1, [x23, #2944]
  421bf8:	add	w0, w0, w25
  421bfc:	bl	42c238 <wcrtomb@plt+0x276f8>
  421c00:	b	421b9c <wcrtomb@plt+0x1d05c>
  421c04:	cbz	x26, 421c6c <wcrtomb@plt+0x1d12c>
  421c08:	ldr	x8, [x23, #2944]
  421c0c:	ldr	x9, [x21, #3976]
  421c10:	mov	w1, wzr
  421c14:	add	x0, x8, x26
  421c18:	sub	x2, x9, x26
  421c1c:	bl	404360 <memset@plt>
  421c20:	ldr	w0, [x22, #4032]
  421c24:	mov	w8, #0x40000000            	// #1073741824
  421c28:	cmp	w0, w8
  421c2c:	b.lt	421c54 <wcrtomb@plt+0x1d114>  // b.tstop
  421c30:	ldr	x1, [x23, #2944]
  421c34:	ldr	x2, [x21, #3976]
  421c38:	mov	w8, #0xc0000000            	// #-1073741824
  421c3c:	add	w0, w0, w8
  421c40:	bl	42c238 <wcrtomb@plt+0x276f8>
  421c44:	b	421c60 <wcrtomb@plt+0x1d120>
  421c48:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421c4c:	ldr	x0, [x8, #3960]
  421c50:	bl	42ab64 <wcrtomb@plt+0x26024>
  421c54:	ldr	x1, [x23, #2944]
  421c58:	ldr	x2, [x21, #3976]
  421c5c:	bl	43b4b0 <argp_parse@@Base+0x3c04>
  421c60:	ldr	x8, [x21, #3976]
  421c64:	cmp	x0, x8
  421c68:	b.ne	421c74 <wcrtomb@plt+0x1d134>  // b.any
  421c6c:	mov	w0, w19
  421c70:	bl	421e68 <wcrtomb@plt+0x1d328>
  421c74:	bl	4056f8 <wcrtomb@plt+0xbb8>
  421c78:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421c7c:	ldr	x3, [x8, #3864]
  421c80:	mov	w1, #0x41                  	// #65
  421c84:	mov	w2, #0x40000000            	// #1073741824
  421c88:	mov	x0, x20
  421c8c:	bl	42b8a0 <wcrtomb@plt+0x26d60>
  421c90:	str	w0, [x22, #4032]
  421c94:	tbz	w0, #31, 421b7c <wcrtomb@plt+0x1d03c>
  421c98:	b	421d40 <wcrtomb@plt+0x1d200>
  421c9c:	mov	x0, x2
  421ca0:	bl	4056f8 <wcrtomb@plt+0xbb8>
  421ca4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421ca8:	add	x1, x1, #0xa6a
  421cac:	mov	w2, #0x5                   	// #5
  421cb0:	mov	x0, xzr
  421cb4:	bl	404900 <dcgettext@plt>
  421cb8:	bl	44329c <argp_parse@@Base+0xb9f0>
  421cbc:	ldr	w0, [sp, #20]
  421cc0:	mov	w1, #0x1                   	// #1
  421cc4:	bl	421d60 <wcrtomb@plt+0x1d220>
  421cc8:	ldr	w0, [sp, #16]
  421ccc:	bl	4056c4 <wcrtomb@plt+0xb84>
  421cd0:	b	421d54 <wcrtomb@plt+0x1d214>
  421cd4:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421cd8:	ldrb	w8, [x20, #3813]
  421cdc:	cbz	w8, 421cf0 <wcrtomb@plt+0x1d1b0>
  421ce0:	ldr	x8, [x21, #3744]
  421ce4:	mov	w1, #0x1                   	// #1
  421ce8:	ldr	x0, [x8]
  421cec:	bl	41b994 <wcrtomb@plt+0x16e54>
  421cf0:	ldr	x8, [x21, #3744]
  421cf4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  421cf8:	add	x1, x1, #0x85
  421cfc:	ldr	x19, [x8]
  421d00:	mov	x0, x19
  421d04:	bl	404660 <strcmp@plt>
  421d08:	cbz	w0, 421d54 <wcrtomb@plt+0x1d214>
  421d0c:	mov	w1, #0x1b6                 	// #438
  421d10:	mov	x0, x19
  421d14:	bl	404ad0 <creat@plt>
  421d18:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421d1c:	str	w0, [x8, #4032]
  421d20:	tbz	w0, #31, 421d4c <wcrtomb@plt+0x1d20c>
  421d24:	bl	404a10 <__errno_location@plt>
  421d28:	ldrb	w8, [x20, #3813]
  421d2c:	ldr	w20, [x0]
  421d30:	mov	x19, x0
  421d34:	cbz	w8, 421d3c <wcrtomb@plt+0x1d1fc>
  421d38:	bl	41bbf4 <wcrtomb@plt+0x170b4>
  421d3c:	str	w20, [x19]
  421d40:	ldr	x8, [x21, #3744]
  421d44:	ldr	x0, [x8]
  421d48:	bl	42a8f0 <wcrtomb@plt+0x25db0>
  421d4c:	mov	w1, #0x1                   	// #1
  421d50:	bl	421d60 <wcrtomb@plt+0x1d220>
  421d54:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421d58:	ldr	x0, [x8, #3960]
  421d5c:	bl	421e2c <wcrtomb@plt+0x1d2ec>
  421d60:	stp	x29, x30, [sp, #-32]!
  421d64:	cmp	w0, w1
  421d68:	stp	x20, x19, [sp, #16]
  421d6c:	mov	x29, sp
  421d70:	b.ne	421d80 <wcrtomb@plt+0x1d240>  // b.any
  421d74:	ldp	x20, x19, [sp, #16]
  421d78:	ldp	x29, x30, [sp], #32
  421d7c:	ret
  421d80:	mov	w19, w0
  421d84:	mov	w0, w1
  421d88:	mov	w20, w1
  421d8c:	bl	404520 <close@plt>
  421d90:	cbz	w0, 421da4 <wcrtomb@plt+0x1d264>
  421d94:	bl	404a10 <__errno_location@plt>
  421d98:	ldr	w8, [x0]
  421d9c:	cmp	w8, #0x9
  421da0:	b.ne	421dec <wcrtomb@plt+0x1d2ac>  // b.any
  421da4:	mov	w0, w19
  421da8:	bl	403f90 <dup@plt>
  421dac:	cmp	w0, w20
  421db0:	b.ne	421dc4 <wcrtomb@plt+0x1d284>  // b.any
  421db4:	mov	w0, w19
  421db8:	ldp	x20, x19, [sp, #16]
  421dbc:	ldp	x29, x30, [sp], #32
  421dc0:	b	4056c4 <wcrtomb@plt+0xb84>
  421dc4:	tbz	w0, #31, 421e28 <wcrtomb@plt+0x1d2e8>
  421dc8:	bl	404a10 <__errno_location@plt>
  421dcc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421dd0:	ldr	x8, [x8, #4064]
  421dd4:	ldr	w19, [x0]
  421dd8:	cbz	x8, 421de0 <wcrtomb@plt+0x1d2a0>
  421ddc:	blr	x8
  421de0:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421de4:	add	x1, x1, #0xb58
  421de8:	b	421e08 <wcrtomb@plt+0x1d2c8>
  421dec:	mov	w19, w8
  421df0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421df4:	ldr	x8, [x8, #4064]
  421df8:	cbz	x8, 421e00 <wcrtomb@plt+0x1d2c0>
  421dfc:	blr	x8
  421e00:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421e04:	add	x1, x1, #0xb4b
  421e08:	mov	w2, #0x5                   	// #5
  421e0c:	mov	x0, xzr
  421e10:	bl	404900 <dcgettext@plt>
  421e14:	mov	x2, x0
  421e18:	mov	w0, wzr
  421e1c:	mov	w1, w19
  421e20:	bl	403fa0 <error@plt>
  421e24:	bl	40e96c <wcrtomb@plt+0x9e2c>
  421e28:	bl	4045b0 <abort@plt>
  421e2c:	sub	sp, sp, #0x40
  421e30:	str	x19, [sp, #48]
  421e34:	mov	x19, x0
  421e38:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421e3c:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421e40:	add	x0, x0, #0xa52
  421e44:	add	x8, x8, #0xb63
  421e48:	mov	x1, sp
  421e4c:	stp	x29, x30, [sp, #32]
  421e50:	add	x29, sp, #0x20
  421e54:	stp	x0, x8, [sp]
  421e58:	stp	x19, xzr, [sp, #16]
  421e5c:	bl	404450 <execv@plt>
  421e60:	mov	x0, x19
  421e64:	bl	42a634 <wcrtomb@plt+0x25af4>
  421e68:	stp	x29, x30, [sp, #-32]!
  421e6c:	str	x19, [sp, #16]
  421e70:	mov	w19, w0
  421e74:	mov	x29, sp
  421e78:	add	x1, x29, #0x1c
  421e7c:	mov	w0, w19
  421e80:	mov	w2, wzr
  421e84:	bl	404a90 <waitpid@plt>
  421e88:	cmn	w0, #0x1
  421e8c:	b.ne	421eac <wcrtomb@plt+0x1d36c>  // b.any
  421e90:	bl	404a10 <__errno_location@plt>
  421e94:	ldr	w8, [x0]
  421e98:	cmp	w8, #0x4
  421e9c:	b.eq	421e78 <wcrtomb@plt+0x1d338>  // b.none
  421ea0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421ea4:	ldr	x0, [x8, #3960]
  421ea8:	bl	42b450 <wcrtomb@plt+0x26910>
  421eac:	ldr	w8, [x29, #28]
  421eb0:	mov	w9, #0x1000000             	// #16777216
  421eb4:	mov	w10, #0x2000000             	// #33554432
  421eb8:	and	w0, w8, #0x7f
  421ebc:	add	w9, w9, w0, lsl #24
  421ec0:	cmp	w9, w10
  421ec4:	b.lt	421ed4 <wcrtomb@plt+0x1d394>  // b.tstop
  421ec8:	bl	403f80 <raise@plt>
  421ecc:	mov	w0, wzr
  421ed0:	bl	403f70 <exit@plt>
  421ed4:	ubfx	w0, w8, #8, #8
  421ed8:	bl	403f70 <exit@plt>
  421edc:	sub	sp, sp, #0xd0
  421ee0:	stp	x29, x30, [sp, #128]
  421ee4:	add	x29, sp, #0x80
  421ee8:	add	x0, x29, #0x18
  421eec:	str	x25, [sp, #144]
  421ef0:	stp	x24, x23, [sp, #160]
  421ef4:	stp	x22, x21, [sp, #176]
  421ef8:	stp	x20, x19, [sp, #192]
  421efc:	bl	41c518 <wcrtomb@plt+0x179d8>
  421f00:	bl	41c4d8 <wcrtomb@plt+0x17998>
  421f04:	cmp	w0, #0x1
  421f08:	b.lt	421f40 <wcrtomb@plt+0x1d400>  // b.tstop
  421f0c:	mov	w19, w0
  421f10:	ldp	w8, w0, [x29, #24]
  421f14:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421f18:	str	w8, [x9, #4032]
  421f1c:	bl	4056c4 <wcrtomb@plt+0xb84>
  421f20:	mov	w0, w19
  421f24:	ldp	x20, x19, [sp, #192]
  421f28:	ldp	x22, x21, [sp, #176]
  421f2c:	ldp	x24, x23, [sp, #160]
  421f30:	ldr	x25, [sp, #144]
  421f34:	ldp	x29, x30, [sp, #128]
  421f38:	add	sp, sp, #0xd0
  421f3c:	ret
  421f40:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421f44:	add	x1, x1, #0xa5e
  421f48:	mov	w2, #0x5                   	// #5
  421f4c:	mov	x0, xzr
  421f50:	bl	404900 <dcgettext@plt>
  421f54:	bl	44329c <argp_parse@@Base+0xb9f0>
  421f58:	mov	w0, #0xd                   	// #13
  421f5c:	mov	x1, xzr
  421f60:	bl	4041b0 <signal@plt>
  421f64:	ldr	w0, [x29, #28]
  421f68:	mov	w1, #0x1                   	// #1
  421f6c:	bl	421d60 <wcrtomb@plt+0x1d220>
  421f70:	ldr	w0, [x29, #24]
  421f74:	bl	4056c4 <wcrtomb@plt+0xb84>
  421f78:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421f7c:	ldr	x20, [x21, #3744]
  421f80:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  421f84:	add	x1, x1, #0x85
  421f88:	ldr	x19, [x20]
  421f8c:	mov	x0, x19
  421f90:	bl	404660 <strcmp@plt>
  421f94:	cbnz	w0, 421fd8 <wcrtomb@plt+0x1d498>
  421f98:	mov	x0, sp
  421f9c:	bl	41c518 <wcrtomb@plt+0x179d8>
  421fa0:	bl	41c4d8 <wcrtomb@plt+0x17998>
  421fa4:	cbnz	w0, 42203c <wcrtomb@plt+0x1d4fc>
  421fa8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  421fac:	add	x1, x1, #0xa6a
  421fb0:	mov	w2, #0x5                   	// #5
  421fb4:	mov	x0, xzr
  421fb8:	bl	404900 <dcgettext@plt>
  421fbc:	bl	44329c <argp_parse@@Base+0xb9f0>
  421fc0:	ldr	w0, [sp]
  421fc4:	mov	w1, wzr
  421fc8:	bl	421d60 <wcrtomb@plt+0x1d220>
  421fcc:	ldr	w0, [sp, #4]
  421fd0:	bl	4056c4 <wcrtomb@plt+0xb84>
  421fd4:	bl	4221e8 <wcrtomb@plt+0x1d6a8>
  421fd8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421fdc:	ldrb	w8, [x8, #4072]
  421fe0:	cbnz	w8, 422014 <wcrtomb@plt+0x1d4d4>
  421fe4:	mov	w1, #0x3a                  	// #58
  421fe8:	mov	x0, x19
  421fec:	bl	4047a0 <strchr@plt>
  421ff0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  421ff4:	str	x0, [x8, #4080]
  421ff8:	ldr	x19, [x20]
  421ffc:	subs	x2, x0, x19
  422000:	b.ls	422014 <wcrtomb@plt+0x1d4d4>  // b.plast
  422004:	mov	w1, #0x2f                  	// #47
  422008:	mov	x0, x19
  42200c:	bl	404890 <memchr@plt>
  422010:	cbz	x0, 421f98 <wcrtomb@plt+0x1d458>
  422014:	mov	x2, sp
  422018:	mov	w0, wzr
  42201c:	mov	x1, x19
  422020:	bl	404a40 <__xstat@plt>
  422024:	cbnz	w0, 42207c <wcrtomb@plt+0x1d53c>
  422028:	ldr	w8, [sp, #16]
  42202c:	and	w8, w8, #0xf000
  422030:	cmp	w8, #0x8, lsl #12
  422034:	b.ne	421f98 <wcrtomb@plt+0x1d458>  // b.any
  422038:	b	42208c <wcrtomb@plt+0x1d54c>
  42203c:	mov	w19, w0
  422040:	ldr	w0, [sp, #4]
  422044:	mov	w1, #0x1                   	// #1
  422048:	bl	421d60 <wcrtomb@plt+0x1d220>
  42204c:	ldr	w0, [sp]
  422050:	bl	4056c4 <wcrtomb@plt+0xb84>
  422054:	ldr	x22, [x21, #3744]
  422058:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  42205c:	add	x1, x1, #0x85
  422060:	ldr	x20, [x22]
  422064:	mov	x0, x20
  422068:	bl	404660 <strcmp@plt>
  42206c:	cbnz	w0, 4220b8 <wcrtomb@plt+0x1d578>
  422070:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422074:	str	wzr, [x8, #4032]
  422078:	b	422138 <wcrtomb@plt+0x1d5f8>
  42207c:	bl	404a10 <__errno_location@plt>
  422080:	ldr	w8, [x0]
  422084:	cmp	w8, #0x2
  422088:	b.ne	421f98 <wcrtomb@plt+0x1d458>  // b.any
  42208c:	ldr	x8, [x21, #3744]
  422090:	mov	w2, #0x1b6                 	// #438
  422094:	mov	w1, wzr
  422098:	ldr	x0, [x8]
  42209c:	bl	404280 <open@plt>
  4220a0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4220a4:	str	w0, [x8, #4032]
  4220a8:	tbnz	w0, #31, 42212c <wcrtomb@plt+0x1d5ec>
  4220ac:	mov	w1, wzr
  4220b0:	bl	421d60 <wcrtomb@plt+0x1d220>
  4220b4:	bl	4221e8 <wcrtomb@plt+0x1d6a8>
  4220b8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4220bc:	ldrb	w8, [x8, #4072]
  4220c0:	cbnz	w8, 422110 <wcrtomb@plt+0x1d5d0>
  4220c4:	mov	w1, #0x3a                  	// #58
  4220c8:	mov	x0, x20
  4220cc:	bl	4047a0 <strchr@plt>
  4220d0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4220d4:	str	x0, [x8, #4080]
  4220d8:	ldr	x20, [x22]
  4220dc:	subs	x2, x0, x20
  4220e0:	b.ls	422110 <wcrtomb@plt+0x1d5d0>  // b.plast
  4220e4:	mov	w1, #0x2f                  	// #47
  4220e8:	mov	x0, x20
  4220ec:	bl	404890 <memchr@plt>
  4220f0:	cbnz	x0, 422110 <wcrtomb@plt+0x1d5d0>
  4220f4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4220f8:	ldr	x3, [x8, #3864]
  4220fc:	mov	w2, #0x40000000            	// #1073741824
  422100:	mov	x0, x20
  422104:	mov	w1, wzr
  422108:	bl	42b8a0 <wcrtomb@plt+0x26d60>
  42210c:	b	422120 <wcrtomb@plt+0x1d5e0>
  422110:	mov	w2, #0x1b6                 	// #438
  422114:	mov	x0, x20
  422118:	mov	w1, wzr
  42211c:	bl	404280 <open@plt>
  422120:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422124:	str	w0, [x8, #4032]
  422128:	tbz	w0, #31, 422138 <wcrtomb@plt+0x1d5f8>
  42212c:	ldr	x8, [x21, #3744]
  422130:	ldr	x0, [x8]
  422134:	bl	42a8f0 <wcrtomb@plt+0x25db0>
  422138:	bl	404df8 <wcrtomb@plt+0x2b8>
  42213c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422140:	mov	w22, #0x40000000            	// #1073741824
  422144:	mov	w24, #0xc0000000            	// #-1073741824
  422148:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42214c:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422150:	ldr	w0, [x21, #4032]
  422154:	cmp	w0, w22
  422158:	b.lt	422170 <wcrtomb@plt+0x1d630>  // b.tstop
  42215c:	ldr	x1, [x23, #2944]
  422160:	ldr	x2, [x25, #3976]
  422164:	add	w0, w0, w24
  422168:	bl	42c0bc <wcrtomb@plt+0x2757c>
  42216c:	b	42217c <wcrtomb@plt+0x1d63c>
  422170:	ldr	x1, [x23, #2944]
  422174:	ldr	x2, [x25, #3976]
  422178:	bl	444d88 <argp_parse@@Base+0xd4dc>
  42217c:	mov	x20, x0
  422180:	cbz	x0, 4221d8 <wcrtomb@plt+0x1d698>
  422184:	cmn	x20, #0x1
  422188:	b.ne	422194 <wcrtomb@plt+0x1d654>  // b.any
  42218c:	bl	4057c0 <wcrtomb@plt+0xc80>
  422190:	b	422150 <wcrtomb@plt+0x1d610>
  422194:	ldr	x21, [x23, #2944]
  422198:	mov	w23, #0x200                 	// #512
  42219c:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4221a0:	cmp	x20, #0x200
  4221a4:	csel	x22, x20, x23, cc  // cc = lo, ul, last
  4221a8:	mov	w0, #0x1                   	// #1
  4221ac:	mov	x1, x21
  4221b0:	mov	x2, x22
  4221b4:	bl	43b4b0 <argp_parse@@Base+0x3c04>
  4221b8:	cmp	x0, x22
  4221bc:	b.eq	4221c8 <wcrtomb@plt+0x1d688>  // b.none
  4221c0:	ldr	x0, [x24, #3960]
  4221c4:	bl	42b4d4 <wcrtomb@plt+0x26994>
  4221c8:	subs	x20, x20, x22
  4221cc:	add	x21, x21, x22
  4221d0:	b.eq	422138 <wcrtomb@plt+0x1d5f8>  // b.none
  4221d4:	b	4221a0 <wcrtomb@plt+0x1d660>
  4221d8:	mov	w0, #0x1                   	// #1
  4221dc:	bl	4056c4 <wcrtomb@plt+0xb84>
  4221e0:	mov	w0, w19
  4221e4:	bl	421e68 <wcrtomb@plt+0x1d328>
  4221e8:	sub	sp, sp, #0x150
  4221ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4221f0:	ldr	x8, [x8, #120]
  4221f4:	stp	x29, x30, [sp, #240]
  4221f8:	add	x29, sp, #0xf0
  4221fc:	mov	w9, #0x1                   	// #1
  422200:	sub	x0, x29, #0x4
  422204:	stp	x28, x27, [sp, #256]
  422208:	stp	x26, x25, [sp, #272]
  42220c:	stp	x24, x23, [sp, #288]
  422210:	stp	x22, x21, [sp, #304]
  422214:	stp	x20, x19, [sp, #320]
  422218:	str	x8, [sp, #112]
  42221c:	str	x9, [sp, #16]
  422220:	bl	404ebc <wcrtomb@plt+0x37c>
  422224:	cbz	x0, 422384 <wcrtomb@plt+0x1d844>
  422228:	mov	w20, #0xe06                 	// #3590
  42222c:	adrp	x21, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422230:	adrp	x22, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422234:	adrp	x27, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422238:	mov	w8, wzr
  42223c:	mov	x23, xzr
  422240:	movk	w20, #0x208, lsl #16
  422244:	adrp	x26, 479000 <_obstack_memory_used@@Base+0x324b0>
  422248:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42224c:	add	x21, x21, #0xb66
  422250:	add	x22, x22, #0xb74
  422254:	add	x27, x27, #0xb7e
  422258:	mov	x19, x0
  42225c:	tbz	w8, #0, 4222d8 <wcrtomb@plt+0x1d798>
  422260:	ldrb	w8, [x26, #3722]
  422264:	tbz	w8, #3, 4222d8 <wcrtomb@plt+0x1d798>
  422268:	ldr	x8, [x25, #4064]
  42226c:	cbz	x8, 422274 <wcrtomb@plt+0x1d734>
  422270:	blr	x8
  422274:	bl	404a10 <__errno_location@plt>
  422278:	ldr	w24, [x0]
  42227c:	mov	w2, #0x5                   	// #5
  422280:	mov	x0, xzr
  422284:	mov	x1, x21
  422288:	bl	404900 <dcgettext@plt>
  42228c:	mov	x2, x0
  422290:	mov	w0, wzr
  422294:	mov	w1, w24
  422298:	mov	x3, x23
  42229c:	bl	403fa0 <error@plt>
  4222a0:	ldrb	w8, [x26, #3722]
  4222a4:	tbz	w8, #3, 4222d8 <wcrtomb@plt+0x1d798>
  4222a8:	ldr	x8, [x25, #4064]
  4222ac:	cbz	x8, 4222b4 <wcrtomb@plt+0x1d774>
  4222b0:	blr	x8
  4222b4:	mov	w2, #0x5                   	// #5
  4222b8:	mov	x0, xzr
  4222bc:	mov	x1, x22
  4222c0:	bl	404900 <dcgettext@plt>
  4222c4:	mov	x2, x0
  4222c8:	mov	w0, wzr
  4222cc:	mov	w1, wzr
  4222d0:	mov	x3, x19
  4222d4:	bl	403fa0 <error@plt>
  4222d8:	mov	x1, sp
  4222dc:	mov	x0, x19
  4222e0:	mov	w2, w20
  4222e4:	bl	42d338 <wcrtomb@plt+0x287f8>
  4222e8:	cbnz	w0, 42233c <wcrtomb@plt+0x1d7fc>
  4222ec:	ldp	x0, x8, [sp, #8]
  4222f0:	ldr	x9, [sp]
  4222f4:	orr	w20, w20, #0x8
  4222f8:	add	x1, x0, x8, lsl #3
  4222fc:	lsl	x2, x9, #3
  422300:	bl	403ed0 <memmove@plt>
  422304:	ldp	x9, x8, [sp]
  422308:	str	x27, [x8, x9, lsl #3]
  42230c:	ldr	x1, [sp, #8]
  422310:	ldr	x0, [x1]
  422314:	bl	404640 <execvp@plt>
  422318:	ldp	x9, x8, [sp]
  42231c:	sub	x0, x29, #0x4
  422320:	str	xzr, [x8, x9, lsl #3]
  422324:	bl	404f28 <wcrtomb@plt+0x3e8>
  422328:	mov	w8, #0x1                   	// #1
  42232c:	mov	x23, x19
  422330:	cbnz	x0, 422258 <wcrtomb@plt+0x1d718>
  422334:	mov	x0, x19
  422338:	bl	42a634 <wcrtomb@plt+0x25af4>
  42233c:	ldr	x8, [x25, #4064]
  422340:	cbz	x8, 422348 <wcrtomb@plt+0x1d808>
  422344:	blr	x8
  422348:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  42234c:	add	x1, x1, #0xa4d
  422350:	mov	w2, #0x5                   	// #5
  422354:	mov	x0, xzr
  422358:	bl	404900 <dcgettext@plt>
  42235c:	mov	x20, x0
  422360:	mov	x0, sp
  422364:	bl	42d5dc <wcrtomb@plt+0x28a9c>
  422368:	mov	x4, x0
  42236c:	mov	w0, wzr
  422370:	mov	w1, wzr
  422374:	mov	x2, x20
  422378:	mov	x3, x19
  42237c:	bl	403fa0 <error@plt>
  422380:	bl	40e96c <wcrtomb@plt+0x9e2c>
  422384:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422388:	ldr	x8, [x8, #4064]
  42238c:	cbz	x8, 422394 <wcrtomb@plt+0x1d854>
  422390:	blr	x8
  422394:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422398:	add	x1, x1, #0xb81
  42239c:	mov	w2, #0x5                   	// #5
  4223a0:	mov	x0, xzr
  4223a4:	bl	404900 <dcgettext@plt>
  4223a8:	mov	x2, x0
  4223ac:	mov	w0, wzr
  4223b0:	mov	w1, wzr
  4223b4:	bl	403fa0 <error@plt>
  4223b8:	bl	40e96c <wcrtomb@plt+0x9e2c>
  4223bc:	stp	x29, x30, [sp, #-48]!
  4223c0:	mov	x29, sp
  4223c4:	str	x21, [sp, #16]
  4223c8:	mov	x21, x0
  4223cc:	add	x0, x29, #0x18
  4223d0:	stp	x20, x19, [sp, #32]
  4223d4:	mov	x19, x2
  4223d8:	mov	w20, w1
  4223dc:	bl	41c518 <wcrtomb@plt+0x179d8>
  4223e0:	mov	w0, #0xd                   	// #13
  4223e4:	mov	w1, #0x1                   	// #1
  4223e8:	bl	4041b0 <signal@plt>
  4223ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4223f0:	str	x0, [x8, #1992]
  4223f4:	bl	41c4d8 <wcrtomb@plt+0x17998>
  4223f8:	mov	w8, w0
  4223fc:	ldr	w0, [x29, #24]
  422400:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422404:	str	w8, [x9, #2000]
  422408:	cbz	w8, 422424 <wcrtomb@plt+0x1d8e4>
  42240c:	bl	4056c4 <wcrtomb@plt+0xb84>
  422410:	ldr	w0, [x29, #28]
  422414:	ldp	x20, x19, [sp, #32]
  422418:	ldr	x21, [sp, #16]
  42241c:	ldp	x29, x30, [sp], #48
  422420:	ret
  422424:	mov	w1, wzr
  422428:	bl	421d60 <wcrtomb@plt+0x1d220>
  42242c:	ldr	w0, [x29, #28]
  422430:	bl	4056c4 <wcrtomb@plt+0xb84>
  422434:	mov	x0, x21
  422438:	mov	w1, w20
  42243c:	mov	x2, x19
  422440:	bl	422450 <wcrtomb@plt+0x1d910>
  422444:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422448:	ldr	x0, [x8, #3672]
  42244c:	bl	421e2c <wcrtomb@plt+0x1d2ec>
  422450:	sub	sp, sp, #0x50
  422454:	stp	x22, x21, [sp, #48]
  422458:	stp	x20, x19, [sp, #64]
  42245c:	mov	w20, w1
  422460:	mov	x21, x0
  422464:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422468:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  42246c:	mov	x19, x2
  422470:	add	x0, x0, #0xae4
  422474:	add	x1, x1, #0xd94
  422478:	mov	w2, #0x1                   	// #1
  42247c:	stp	x29, x30, [sp, #32]
  422480:	add	x29, sp, #0x20
  422484:	bl	404050 <setenv@plt>
  422488:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  42248c:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422490:	ldr	x8, [x22, #3792]
  422494:	ldr	x1, [x8]
  422498:	cbz	x1, 4224b4 <wcrtomb@plt+0x1d974>
  42249c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4224a0:	add	x0, x0, #0xaf0
  4224a4:	mov	w2, #0x1                   	// #1
  4224a8:	bl	404050 <setenv@plt>
  4224ac:	cbz	w0, 4224c0 <wcrtomb@plt+0x1d980>
  4224b0:	b	422804 <wcrtomb@plt+0x1dcc4>
  4224b4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4224b8:	add	x0, x0, #0xaf0
  4224bc:	bl	404860 <unsetenv@plt>
  4224c0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4224c4:	ldr	x8, [x22, #3792]
  4224c8:	ldr	x9, [x9, #3744]
  4224cc:	mov	x1, sp
  4224d0:	sub	x8, x8, x9
  4224d4:	asr	x8, x8, #3
  4224d8:	add	x0, x8, #0x1
  4224dc:	bl	43d080 <argp_parse@@Base+0x57d4>
  4224e0:	mov	x1, x0
  4224e4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4224e8:	add	x0, x0, #0xafc
  4224ec:	mov	w2, #0x1                   	// #1
  4224f0:	bl	404050 <setenv@plt>
  4224f4:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  4224f8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4224fc:	ldrsw	x0, [x8, #3804]
  422500:	mov	x1, sp
  422504:	bl	43d080 <argp_parse@@Base+0x57d4>
  422508:	mov	x1, x0
  42250c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422510:	add	x0, x0, #0xb07
  422514:	mov	w2, #0x1                   	// #1
  422518:	bl	404050 <setenv@plt>
  42251c:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  422520:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422524:	ldr	w8, [x8, #3008]
  422528:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42252c:	ldr	w9, [x9, #3872]
  422530:	cmp	w8, #0x0
  422534:	csel	w0, w9, w8, eq  // eq = none
  422538:	bl	422f64 <wcrtomb@plt+0x1e424>
  42253c:	cbz	x0, 42255c <wcrtomb@plt+0x1da1c>
  422540:	mov	x1, x0
  422544:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422548:	add	x0, x0, #0xb2a
  42254c:	mov	w2, #0x1                   	// #1
  422550:	bl	404050 <setenv@plt>
  422554:	cbz	w0, 422568 <wcrtomb@plt+0x1da28>
  422558:	b	422804 <wcrtomb@plt+0x1dcc4>
  42255c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422560:	add	x0, x0, #0xb2a
  422564:	bl	404860 <unsetenv@plt>
  422568:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42256c:	add	x0, x0, #0xba5
  422570:	mov	x1, sp
  422574:	mov	w2, #0x1                   	// #1
  422578:	strb	w20, [sp]
  42257c:	strb	wzr, [sp, #1]
  422580:	bl	404050 <setenv@plt>
  422584:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  422588:	ldr	w5, [x19, #104]
  42258c:	adrp	x4, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422590:	add	x4, x4, #0xc41
  422594:	mov	x0, sp
  422598:	mov	w1, #0x18                  	// #24
  42259c:	mov	w2, #0x1                   	// #1
  4225a0:	mov	w3, #0x18                  	// #24
  4225a4:	bl	4041d0 <__snprintf_chk@plt>
  4225a8:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4225ac:	add	x0, x0, #0xbb2
  4225b0:	mov	x1, sp
  4225b4:	mov	w2, #0x1                   	// #1
  4225b8:	bl	404050 <setenv@plt>
  4225bc:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  4225c0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4225c4:	add	x0, x0, #0xbbb
  4225c8:	cbz	x21, 422634 <wcrtomb@plt+0x1daf4>
  4225cc:	mov	w2, #0x1                   	// #1
  4225d0:	mov	x1, x21
  4225d4:	bl	404050 <setenv@plt>
  4225d8:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  4225dc:	ldr	x1, [x19, #8]
  4225e0:	cbz	x1, 422640 <wcrtomb@plt+0x1db00>
  4225e4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4225e8:	add	x0, x0, #0xbc8
  4225ec:	mov	w2, #0x1                   	// #1
  4225f0:	bl	404050 <setenv@plt>
  4225f4:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  4225f8:	ldr	x1, [x19, #32]
  4225fc:	cbz	x1, 422654 <wcrtomb@plt+0x1db14>
  422600:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422604:	add	x0, x0, #0xbd5
  422608:	mov	w2, #0x1                   	// #1
  42260c:	bl	404050 <setenv@plt>
  422610:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  422614:	ldr	x1, [x19, #40]
  422618:	cbz	x1, 422668 <wcrtomb@plt+0x1db28>
  42261c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422620:	add	x0, x0, #0xbdf
  422624:	mov	w2, #0x1                   	// #1
  422628:	bl	404050 <setenv@plt>
  42262c:	cbz	w0, 422674 <wcrtomb@plt+0x1db34>
  422630:	b	422804 <wcrtomb@plt+0x1dcc4>
  422634:	bl	404860 <unsetenv@plt>
  422638:	ldr	x1, [x19, #8]
  42263c:	cbnz	x1, 4225e4 <wcrtomb@plt+0x1daa4>
  422640:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422644:	add	x0, x0, #0xbc8
  422648:	bl	404860 <unsetenv@plt>
  42264c:	ldr	x1, [x19, #32]
  422650:	cbnz	x1, 422600 <wcrtomb@plt+0x1dac0>
  422654:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422658:	add	x0, x0, #0xbd5
  42265c:	bl	404860 <unsetenv@plt>
  422660:	ldr	x1, [x19, #40]
  422664:	cbnz	x1, 42261c <wcrtomb@plt+0x1dadc>
  422668:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42266c:	add	x0, x0, #0xbdf
  422670:	bl	404860 <unsetenv@plt>
  422674:	ldp	x0, x1, [x19, #216]
  422678:	mov	x2, sp
  42267c:	bl	41b22c <wcrtomb@plt+0x166ec>
  422680:	mov	x1, x0
  422684:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422688:	add	x0, x0, #0xbe9
  42268c:	mov	w2, #0x1                   	// #1
  422690:	bl	404050 <setenv@plt>
  422694:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  422698:	ldp	x0, x1, [x19, #232]
  42269c:	mov	x2, sp
  4226a0:	bl	41b22c <wcrtomb@plt+0x166ec>
  4226a4:	mov	x1, x0
  4226a8:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4226ac:	add	x0, x0, #0xbf3
  4226b0:	mov	w2, #0x1                   	// #1
  4226b4:	bl	404050 <setenv@plt>
  4226b8:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  4226bc:	ldp	x0, x1, [x19, #248]
  4226c0:	mov	x2, sp
  4226c4:	bl	41b22c <wcrtomb@plt+0x166ec>
  4226c8:	mov	x1, x0
  4226cc:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4226d0:	add	x0, x0, #0xbfd
  4226d4:	mov	w2, #0x1                   	// #1
  4226d8:	bl	404050 <setenv@plt>
  4226dc:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  4226e0:	ldr	x0, [x19, #136]
  4226e4:	mov	x1, sp
  4226e8:	bl	43d080 <argp_parse@@Base+0x57d4>
  4226ec:	mov	x1, x0
  4226f0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4226f4:	add	x0, x0, #0xc07
  4226f8:	mov	w2, #0x1                   	// #1
  4226fc:	bl	404050 <setenv@plt>
  422700:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  422704:	ldr	w0, [x19, #112]
  422708:	mov	x1, sp
  42270c:	bl	43d080 <argp_parse@@Base+0x57d4>
  422710:	mov	x1, x0
  422714:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422718:	add	x0, x0, #0xc10
  42271c:	mov	w2, #0x1                   	// #1
  422720:	bl	404050 <setenv@plt>
  422724:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  422728:	ldr	w0, [x19, #116]
  42272c:	mov	x1, sp
  422730:	bl	43d080 <argp_parse@@Base+0x57d4>
  422734:	mov	x1, x0
  422738:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42273c:	add	x0, x0, #0xc18
  422740:	mov	w2, #0x1                   	// #1
  422744:	bl	404050 <setenv@plt>
  422748:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  42274c:	and	w8, w20, #0xff
  422750:	sub	w9, w8, #0x62
  422754:	cmp	w9, #0x2
  422758:	b.cc	4227a4 <wcrtomb@plt+0x1dc64>  // b.lo, b.ul, b.last
  42275c:	cmp	w8, #0x68
  422760:	b.eq	42276c <wcrtomb@plt+0x1dc2c>  // b.none
  422764:	cmp	w8, #0x6c
  422768:	b.ne	422808 <wcrtomb@plt+0x1dcc8>  // b.any
  42276c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422770:	add	x0, x0, #0xc20
  422774:	bl	404860 <unsetenv@plt>
  422778:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42277c:	add	x0, x0, #0xc2a
  422780:	bl	404860 <unsetenv@plt>
  422784:	ldr	x1, [x19, #24]
  422788:	cbz	x1, 422820 <wcrtomb@plt+0x1dce0>
  42278c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422790:	add	x0, x0, #0xc34
  422794:	mov	w2, #0x1                   	// #1
  422798:	bl	404050 <setenv@plt>
  42279c:	cbz	w0, 42282c <wcrtomb@plt+0x1dcec>
  4227a0:	b	422804 <wcrtomb@plt+0x1dcc4>
  4227a4:	ldr	x8, [x19, #120]
  4227a8:	mov	x1, sp
  4227ac:	lsr	x9, x8, #12
  4227b0:	and	x0, x9, #0xffffff00
  4227b4:	bfxil	x0, x8, #0, #8
  4227b8:	bl	43d080 <argp_parse@@Base+0x57d4>
  4227bc:	mov	x1, x0
  4227c0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4227c4:	add	x0, x0, #0xc20
  4227c8:	mov	w2, #0x1                   	// #1
  4227cc:	bl	404050 <setenv@plt>
  4227d0:	cbnz	w0, 422804 <wcrtomb@plt+0x1dcc4>
  4227d4:	ldr	x8, [x19, #120]
  4227d8:	mov	x1, sp
  4227dc:	lsr	x9, x8, #32
  4227e0:	and	x0, x9, #0xfffff000
  4227e4:	bfxil	x0, x8, #8, #12
  4227e8:	bl	43d080 <argp_parse@@Base+0x57d4>
  4227ec:	mov	x1, x0
  4227f0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4227f4:	add	x0, x0, #0xc2a
  4227f8:	mov	w2, #0x1                   	// #1
  4227fc:	bl	404050 <setenv@plt>
  422800:	cbz	w0, 422820 <wcrtomb@plt+0x1dce0>
  422804:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  422808:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42280c:	add	x0, x0, #0xc20
  422810:	bl	404860 <unsetenv@plt>
  422814:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422818:	add	x0, x0, #0xc2a
  42281c:	bl	404860 <unsetenv@plt>
  422820:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422824:	add	x0, x0, #0xc34
  422828:	bl	404860 <unsetenv@plt>
  42282c:	ldp	x20, x19, [sp, #64]
  422830:	ldp	x22, x21, [sp, #48]
  422834:	ldp	x29, x30, [sp, #32]
  422838:	add	sp, sp, #0x50
  42283c:	ret
  422840:	stp	x29, x30, [sp, #-32]!
  422844:	str	x19, [sp, #16]
  422848:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42284c:	ldr	w8, [x19, #2000]
  422850:	mov	x29, sp
  422854:	tbnz	w8, #31, 4229a4 <wcrtomb@plt+0x1de64>
  422858:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42285c:	ldr	x1, [x8, #1992]
  422860:	mov	w0, #0xd                   	// #13
  422864:	bl	4041b0 <signal@plt>
  422868:	ldr	w0, [x19, #2000]
  42286c:	add	x1, x29, #0x1c
  422870:	mov	w2, wzr
  422874:	bl	404a90 <waitpid@plt>
  422878:	cmn	w0, #0x1
  42287c:	b.ne	4228a8 <wcrtomb@plt+0x1dd68>  // b.any
  422880:	bl	404a10 <__errno_location@plt>
  422884:	ldr	w8, [x0]
  422888:	cmp	w8, #0x4
  42288c:	b.eq	422868 <wcrtomb@plt+0x1dd28>  // b.none
  422890:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422894:	ldr	x0, [x8, #3672]
  422898:	mov	w8, #0xffffffff            	// #-1
  42289c:	str	w8, [x19, #2000]
  4228a0:	bl	42b450 <wcrtomb@plt+0x26910>
  4228a4:	b	4229a4 <wcrtomb@plt+0x1de64>
  4228a8:	ldr	w9, [x29, #28]
  4228ac:	ands	w8, w9, #0x7f
  4228b0:	b.eq	42290c <wcrtomb@plt+0x1ddcc>  // b.none
  4228b4:	mov	w9, #0x1000000             	// #16777216
  4228b8:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4228bc:	add	w9, w9, w8, lsl #24
  4228c0:	ldr	x8, [x10, #4064]
  4228c4:	mov	w10, #0x2000000             	// #33554432
  4228c8:	cmp	w9, w10
  4228cc:	b.lt	422960 <wcrtomb@plt+0x1de20>  // b.tstop
  4228d0:	cbz	x8, 4228d8 <wcrtomb@plt+0x1dd98>
  4228d4:	blr	x8
  4228d8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4228dc:	add	x1, x1, #0xa99
  4228e0:	mov	w2, #0x5                   	// #5
  4228e4:	mov	x0, xzr
  4228e8:	bl	404900 <dcgettext@plt>
  4228ec:	ldr	w8, [x29, #28]
  4228f0:	ldrsw	x3, [x19, #2000]
  4228f4:	mov	x2, x0
  4228f8:	mov	w0, wzr
  4228fc:	and	w4, w8, #0x7f
  422900:	mov	w1, wzr
  422904:	bl	403fa0 <error@plt>
  422908:	b	42299c <wcrtomb@plt+0x1de5c>
  42290c:	tst	w9, #0xff00
  422910:	b.eq	42299c <wcrtomb@plt+0x1de5c>  // b.none
  422914:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422918:	ldrb	w8, [x8, #3633]
  42291c:	cbnz	w8, 42299c <wcrtomb@plt+0x1de5c>
  422920:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422924:	ldr	x8, [x8, #4064]
  422928:	cbz	x8, 422930 <wcrtomb@plt+0x1ddf0>
  42292c:	blr	x8
  422930:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422934:	add	x1, x1, #0xa7b
  422938:	mov	w2, #0x5                   	// #5
  42293c:	mov	x0, xzr
  422940:	bl	404900 <dcgettext@plt>
  422944:	ldrsw	x3, [x19, #2000]
  422948:	ldrb	w4, [x29, #29]
  42294c:	mov	x2, x0
  422950:	mov	w0, wzr
  422954:	mov	w1, wzr
  422958:	bl	403fa0 <error@plt>
  42295c:	b	422990 <wcrtomb@plt+0x1de50>
  422960:	cbz	x8, 422968 <wcrtomb@plt+0x1de28>
  422964:	blr	x8
  422968:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42296c:	add	x1, x1, #0xabc
  422970:	mov	w2, #0x5                   	// #5
  422974:	mov	x0, xzr
  422978:	bl	404900 <dcgettext@plt>
  42297c:	ldrsw	x3, [x19, #2000]
  422980:	mov	x2, x0
  422984:	mov	w0, wzr
  422988:	mov	w1, wzr
  42298c:	bl	403fa0 <error@plt>
  422990:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422994:	mov	w9, #0x2                   	// #2
  422998:	str	w9, [x8, #2416]
  42299c:	mov	w8, #0xffffffff            	// #-1
  4229a0:	str	w8, [x19, #2000]
  4229a4:	ldr	x19, [sp, #16]
  4229a8:	ldp	x29, x30, [sp], #32
  4229ac:	ret
  4229b0:	sub	sp, sp, #0x70
  4229b4:	stp	x29, x30, [sp, #48]
  4229b8:	add	x29, sp, #0x30
  4229bc:	stp	x20, x19, [sp, #96]
  4229c0:	mov	x19, x0
  4229c4:	add	x0, x29, #0x18
  4229c8:	str	x23, [sp, #64]
  4229cc:	stp	x22, x21, [sp, #80]
  4229d0:	mov	w21, w1
  4229d4:	bl	41c518 <wcrtomb@plt+0x179d8>
  4229d8:	mov	w0, #0xd                   	// #13
  4229dc:	mov	w1, #0x1                   	// #1
  4229e0:	bl	4041b0 <signal@plt>
  4229e4:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4229e8:	str	x0, [x23, #2008]
  4229ec:	bl	41c4d8 <wcrtomb@plt+0x17998>
  4229f0:	cbz	w0, 422b14 <wcrtomb@plt+0x1dfd4>
  4229f4:	mov	w20, w0
  4229f8:	ldr	w0, [x29, #28]
  4229fc:	str	xzr, [sp, #24]
  422a00:	str	xzr, [sp, #8]
  422a04:	bl	4056c4 <wcrtomb@plt+0xb84>
  422a08:	ldr	w0, [x29, #24]
  422a0c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  422a10:	add	x1, x1, #0x40b
  422a14:	bl	404370 <fdopen@plt>
  422a18:	mov	x22, x0
  422a1c:	add	x0, sp, #0x18
  422a20:	add	x1, sp, #0x8
  422a24:	mov	w2, #0xa                   	// #10
  422a28:	mov	x3, x22
  422a2c:	bl	404a70 <__getdelim@plt>
  422a30:	mov	x21, x0
  422a34:	mov	x0, x22
  422a38:	bl	4041e0 <fclose@plt>
  422a3c:	cmp	w21, #0x1
  422a40:	b.lt	422a64 <wcrtomb@plt+0x1df24>  // b.tstop
  422a44:	ldr	x8, [sp, #24]
  422a48:	sub	w9, w21, #0x1
  422a4c:	ldrb	w9, [x8, w9, sxtw]
  422a50:	cmp	w9, #0xa
  422a54:	b.ne	422a64 <wcrtomb@plt+0x1df24>  // b.any
  422a58:	sxtw	x9, w21
  422a5c:	sub	x21, x9, #0x1
  422a60:	strb	wzr, [x8, x21]
  422a64:	add	x1, sp, #0x14
  422a68:	mov	w0, w20
  422a6c:	mov	w2, wzr
  422a70:	bl	404a90 <waitpid@plt>
  422a74:	cmn	w0, #0x1
  422a78:	b.ne	422aa8 <wcrtomb@plt+0x1df68>  // b.any
  422a7c:	bl	404a10 <__errno_location@plt>
  422a80:	ldr	w8, [x0]
  422a84:	cmp	w8, #0x4
  422a88:	b.eq	422a64 <wcrtomb@plt+0x1df24>  // b.none
  422a8c:	ldr	x1, [x23, #2008]
  422a90:	mov	w0, #0xd                   	// #13
  422a94:	bl	4041b0 <signal@plt>
  422a98:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422a9c:	ldr	x0, [x8, #3824]
  422aa0:	bl	42b450 <wcrtomb@plt+0x26910>
  422aa4:	b	422ac8 <wcrtomb@plt+0x1df88>
  422aa8:	ldr	x1, [x23, #2008]
  422aac:	mov	w0, #0xd                   	// #13
  422ab0:	bl	4041b0 <signal@plt>
  422ab4:	ldr	w8, [sp, #20]
  422ab8:	tst	w8, #0x7f
  422abc:	b.eq	422ae4 <wcrtomb@plt+0x1dfa4>  // b.none
  422ac0:	ldr	x0, [sp, #24]
  422ac4:	bl	404700 <free@plt>
  422ac8:	mov	w0, #0xffffffff            	// #-1
  422acc:	ldp	x20, x19, [sp, #96]
  422ad0:	ldp	x22, x21, [sp, #80]
  422ad4:	ldr	x23, [sp, #64]
  422ad8:	ldp	x29, x30, [sp, #48]
  422adc:	add	sp, sp, #0x70
  422ae0:	ret
  422ae4:	ldr	x0, [sp, #24]
  422ae8:	cmp	w21, #0x1
  422aec:	b.lt	422b04 <wcrtomb@plt+0x1dfc4>  // b.tstop
  422af0:	and	w9, w8, #0xff00
  422af4:	cbnz	w9, 422b04 <wcrtomb@plt+0x1dfc4>
  422af8:	str	x0, [x19]
  422afc:	ubfx	w0, w8, #8, #8
  422b00:	b	422acc <wcrtomb@plt+0x1df8c>
  422b04:	bl	404700 <free@plt>
  422b08:	ldr	w8, [sp, #20]
  422b0c:	ubfx	w0, w8, #8, #8
  422b10:	b	422acc <wcrtomb@plt+0x1df8c>
  422b14:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422b18:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  422b1c:	add	x0, x0, #0xae4
  422b20:	add	x1, x1, #0xd94
  422b24:	mov	w2, #0x1                   	// #1
  422b28:	bl	404050 <setenv@plt>
  422b2c:	ldr	x1, [x19]
  422b30:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422b34:	add	x0, x0, #0xaf0
  422b38:	mov	w2, #0x1                   	// #1
  422b3c:	bl	404050 <setenv@plt>
  422b40:	sxtw	x0, w21
  422b44:	add	x1, sp, #0x18
  422b48:	bl	43d080 <argp_parse@@Base+0x57d4>
  422b4c:	mov	x1, x0
  422b50:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422b54:	add	x0, x0, #0xafc
  422b58:	mov	w2, #0x1                   	// #1
  422b5c:	bl	404050 <setenv@plt>
  422b60:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422b64:	ldrsw	x0, [x8, #3804]
  422b68:	add	x1, sp, #0x18
  422b6c:	bl	43d080 <argp_parse@@Base+0x57d4>
  422b70:	mov	x1, x0
  422b74:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422b78:	add	x0, x0, #0xb07
  422b7c:	mov	w2, #0x1                   	// #1
  422b80:	bl	404050 <setenv@plt>
  422b84:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422b88:	ldr	w0, [x8, #3916]
  422b8c:	bl	422f8c <wcrtomb@plt+0x1e44c>
  422b90:	mov	x1, x0
  422b94:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422b98:	add	x0, x0, #0xb1b
  422b9c:	mov	w2, #0x1                   	// #1
  422ba0:	bl	404050 <setenv@plt>
  422ba4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422ba8:	ldr	w8, [x8, #3008]
  422bac:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422bb0:	ldr	w9, [x9, #3872]
  422bb4:	cmp	w8, #0x0
  422bb8:	csel	w0, w9, w8, eq  // eq = none
  422bbc:	bl	422f64 <wcrtomb@plt+0x1e424>
  422bc0:	mov	x1, x0
  422bc4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422bc8:	add	x0, x0, #0xb2a
  422bcc:	mov	w2, #0x1                   	// #1
  422bd0:	bl	404050 <setenv@plt>
  422bd4:	ldrsw	x0, [x29, #28]
  422bd8:	add	x1, sp, #0x18
  422bdc:	bl	43d080 <argp_parse@@Base+0x57d4>
  422be0:	mov	x1, x0
  422be4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422be8:	add	x0, x0, #0xb35
  422bec:	mov	w2, #0x1                   	// #1
  422bf0:	bl	404050 <setenv@plt>
  422bf4:	ldr	w0, [x29, #24]
  422bf8:	bl	4056c4 <wcrtomb@plt+0xb84>
  422bfc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422c00:	ldr	x0, [x8, #3824]
  422c04:	bl	421e2c <wcrtomb@plt+0x1d2ec>
  422c08:	sub	sp, sp, #0x50
  422c0c:	stp	x29, x30, [sp, #32]
  422c10:	stp	x22, x21, [sp, #48]
  422c14:	stp	x20, x19, [sp, #64]
  422c18:	add	x29, sp, #0x20
  422c1c:	mov	w20, w2
  422c20:	mov	x22, x1
  422c24:	mov	x19, x0
  422c28:	bl	41c4d8 <wcrtomb@plt+0x17998>
  422c2c:	cbz	w0, 422c78 <wcrtomb@plt+0x1e138>
  422c30:	mov	w21, w0
  422c34:	add	x1, sp, #0x8
  422c38:	mov	w0, w21
  422c3c:	mov	w2, wzr
  422c40:	bl	404a90 <waitpid@plt>
  422c44:	cmn	w0, #0x1
  422c48:	b.ne	422c64 <wcrtomb@plt+0x1e124>  // b.any
  422c4c:	bl	404a10 <__errno_location@plt>
  422c50:	ldr	w8, [x0]
  422c54:	cmp	w8, #0x4
  422c58:	b.eq	422c34 <wcrtomb@plt+0x1e0f4>  // b.none
  422c5c:	mov	x0, x19
  422c60:	bl	42b450 <wcrtomb@plt+0x26910>
  422c64:	ldp	x20, x19, [sp, #64]
  422c68:	ldp	x22, x21, [sp, #48]
  422c6c:	ldp	x29, x30, [sp, #32]
  422c70:	add	sp, sp, #0x50
  422c74:	ret
  422c78:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422c7c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  422c80:	add	x0, x0, #0xae4
  422c84:	add	x1, x1, #0xd94
  422c88:	mov	w2, #0x1                   	// #1
  422c8c:	bl	404050 <setenv@plt>
  422c90:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422c94:	add	x0, x0, #0xaf0
  422c98:	mov	w2, #0x1                   	// #1
  422c9c:	mov	x1, x22
  422ca0:	bl	404050 <setenv@plt>
  422ca4:	sxtw	x0, w20
  422ca8:	add	x1, sp, #0x8
  422cac:	bl	43d080 <argp_parse@@Base+0x57d4>
  422cb0:	mov	x1, x0
  422cb4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422cb8:	add	x0, x0, #0xb3c
  422cbc:	mov	w2, #0x1                   	// #1
  422cc0:	bl	404050 <setenv@plt>
  422cc4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422cc8:	ldrsw	x0, [x8, #3804]
  422ccc:	add	x1, sp, #0x8
  422cd0:	bl	43d080 <argp_parse@@Base+0x57d4>
  422cd4:	mov	x1, x0
  422cd8:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422cdc:	add	x0, x0, #0xb07
  422ce0:	mov	w2, #0x1                   	// #1
  422ce4:	bl	404050 <setenv@plt>
  422ce8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422cec:	ldr	w0, [x8, #3916]
  422cf0:	bl	422f8c <wcrtomb@plt+0x1e44c>
  422cf4:	mov	x1, x0
  422cf8:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422cfc:	add	x0, x0, #0xb1b
  422d00:	mov	w2, #0x1                   	// #1
  422d04:	bl	404050 <setenv@plt>
  422d08:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422d0c:	ldr	w8, [x8, #3008]
  422d10:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422d14:	ldr	w9, [x9, #3872]
  422d18:	cmp	w8, #0x0
  422d1c:	csel	w0, w9, w8, eq  // eq = none
  422d20:	bl	422f64 <wcrtomb@plt+0x1e424>
  422d24:	mov	x1, x0
  422d28:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  422d2c:	add	x0, x0, #0xb2a
  422d30:	mov	w2, #0x1                   	// #1
  422d34:	bl	404050 <setenv@plt>
  422d38:	mov	x0, x19
  422d3c:	bl	421e2c <wcrtomb@plt+0x1d2ec>
  422d40:	sub	sp, sp, #0x20
  422d44:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422d48:	ldr	x9, [x8, #2016]
  422d4c:	stp	x29, x30, [sp, #16]
  422d50:	add	x29, sp, #0x10
  422d54:	cbnz	x9, 422d68 <wcrtomb@plt+0x1e228>
  422d58:	ldp	x29, x30, [sp, #16]
  422d5c:	str	x0, [x8, #2016]
  422d60:	add	sp, sp, #0x20
  422d64:	ret
  422d68:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422d6c:	ldr	x8, [x8, #4064]
  422d70:	str	x0, [sp, #8]
  422d74:	cbz	x8, 422d7c <wcrtomb@plt+0x1e23c>
  422d78:	blr	x8
  422d7c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  422d80:	add	x1, x1, #0x3c8
  422d84:	mov	w2, #0x5                   	// #5
  422d88:	mov	x0, xzr
  422d8c:	bl	404900 <dcgettext@plt>
  422d90:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422d94:	ldr	x3, [x8, #2016]
  422d98:	ldr	x4, [sp, #8]
  422d9c:	mov	x2, x0
  422da0:	mov	w0, wzr
  422da4:	mov	w1, wzr
  422da8:	bl	403fa0 <error@plt>
  422dac:	mov	w0, #0x2                   	// #2
  422db0:	bl	422db4 <wcrtomb@plt+0x1e274>
  422db4:	stp	x29, x30, [sp, #-32]!
  422db8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422dbc:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422dc0:	ldr	x1, [x8, #96]
  422dc4:	ldr	x3, [x9, #2504]
  422dc8:	str	x19, [sp, #16]
  422dcc:	mov	w19, w0
  422dd0:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x304b0>
  422dd4:	add	x0, x0, #0xe60
  422dd8:	mov	w2, #0x4                   	// #4
  422ddc:	mov	x29, sp
  422de0:	bl	4348b0 <argp_help@@Base>
  422de4:	bl	439028 <argp_parse@@Base+0x177c>
  422de8:	mov	w0, w19
  422dec:	bl	403f70 <exit@plt>
  422df0:	sub	sp, sp, #0x50
  422df4:	str	x23, [sp, #32]
  422df8:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422dfc:	ldr	x8, [x23, #2024]
  422e00:	stp	x20, x19, [sp, #64]
  422e04:	mov	x20, x1
  422e08:	mov	x19, x0
  422e0c:	stp	x29, x30, [sp, #16]
  422e10:	stp	x22, x21, [sp, #48]
  422e14:	add	x29, sp, #0x10
  422e18:	cbnz	x8, 422e6c <wcrtomb@plt+0x1e32c>
  422e1c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422e20:	ldr	w8, [x8, #4032]
  422e24:	cbz	w8, 422e50 <wcrtomb@plt+0x1e310>
  422e28:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422e2c:	ldr	x9, [x8, #2016]
  422e30:	cbnz	x9, 422e50 <wcrtomb@plt+0x1e310>
  422e34:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422e38:	ldr	x9, [x9, #112]
  422e3c:	adrp	x10, 45f000 <_obstack_memory_used@@Base+0x184b0>
  422e40:	add	x10, x10, #0x3f7
  422e44:	str	x10, [x8, #2016]
  422e48:	str	x9, [x23, #2024]
  422e4c:	b	422e6c <wcrtomb@plt+0x1e32c>
  422e50:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  422e54:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  422e58:	add	x0, x0, #0x54c
  422e5c:	add	x1, x1, #0x40b
  422e60:	bl	404220 <fopen@plt>
  422e64:	str	x0, [x23, #2024]
  422e68:	cbz	x0, 422f58 <wcrtomb@plt+0x1e418>
  422e6c:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422e70:	ldr	x21, [x22, #2888]
  422e74:	mov	x0, x20
  422e78:	bl	444a68 <argp_parse@@Base+0xd1bc>
  422e7c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x184b0>
  422e80:	mov	x4, x0
  422e84:	add	x2, x2, #0x3fa
  422e88:	mov	w1, #0x1                   	// #1
  422e8c:	mov	x0, x21
  422e90:	mov	x3, x19
  422e94:	bl	404650 <__fprintf_chk@plt>
  422e98:	ldr	x0, [x22, #2888]
  422e9c:	bl	404800 <fflush_unlocked@plt>
  422ea0:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  422ea4:	ldrb	w8, [x20, #2032]
  422ea8:	tbz	w8, #0, 422eb4 <wcrtomb@plt+0x1e374>
  422eac:	mov	w19, wzr
  422eb0:	b	422f08 <wcrtomb@plt+0x1e3c8>
  422eb4:	ldr	x3, [x23, #2024]
  422eb8:	add	x0, x29, #0x18
  422ebc:	add	x1, sp, #0x8
  422ec0:	mov	w2, #0xa                   	// #10
  422ec4:	str	xzr, [x29, #24]
  422ec8:	str	xzr, [sp, #8]
  422ecc:	bl	404a70 <__getdelim@plt>
  422ed0:	tbnz	x0, #63, 422ee8 <wcrtomb@plt+0x1e3a8>
  422ed4:	ldr	x0, [x29, #24]
  422ed8:	bl	403fc0 <rpmatch@plt>
  422edc:	cmp	w0, #0x0
  422ee0:	cset	w19, gt
  422ee4:	b	422ef4 <wcrtomb@plt+0x1e3b4>
  422ee8:	mov	w8, #0x1                   	// #1
  422eec:	mov	w19, wzr
  422ef0:	strb	w8, [x20, #2032]
  422ef4:	ldr	x0, [x29, #24]
  422ef8:	bl	404700 <free@plt>
  422efc:	ldrb	w8, [x20, #2032]
  422f00:	cmp	w8, #0x1
  422f04:	b.ne	422f30 <wcrtomb@plt+0x1e3f0>  // b.any
  422f08:	ldr	x0, [x22, #2888]
  422f0c:	ldp	x8, x9, [x0, #40]
  422f10:	cmp	x8, x9
  422f14:	b.cs	422f4c <wcrtomb@plt+0x1e40c>  // b.hs, b.nlast
  422f18:	add	x9, x8, #0x1
  422f1c:	mov	w10, #0xa                   	// #10
  422f20:	str	x9, [x0, #40]
  422f24:	strb	w10, [x8]
  422f28:	ldr	x0, [x22, #2888]
  422f2c:	bl	404800 <fflush_unlocked@plt>
  422f30:	mov	w0, w19
  422f34:	ldp	x20, x19, [sp, #64]
  422f38:	ldp	x22, x21, [sp, #48]
  422f3c:	ldr	x23, [sp, #32]
  422f40:	ldp	x29, x30, [sp, #16]
  422f44:	add	sp, sp, #0x50
  422f48:	ret
  422f4c:	mov	w1, #0xa                   	// #10
  422f50:	bl	4045e0 <__overflow@plt>
  422f54:	b	422f28 <wcrtomb@plt+0x1e3e8>
  422f58:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  422f5c:	add	x0, x0, #0x54c
  422f60:	bl	42a8f0 <wcrtomb@plt+0x25db0>
  422f64:	sub	w8, w0, #0x1
  422f68:	cmp	w8, #0x5
  422f6c:	b.hi	422f80 <wcrtomb@plt+0x1e440>  // b.pmore
  422f70:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0x184b0>
  422f74:	add	x9, x9, #0x348
  422f78:	ldr	x0, [x9, w8, sxtw #3]
  422f7c:	ret
  422f80:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x184b0>
  422f84:	add	x0, x0, #0x401
  422f88:	ret
  422f8c:	stp	x29, x30, [sp, #-16]!
  422f90:	cmp	w0, #0xa
  422f94:	mov	x29, sp
  422f98:	b.cs	422fb0 <wcrtomb@plt+0x1e470>  // b.hs, b.nlast
  422f9c:	adrp	x8, 45f000 <_obstack_memory_used@@Base+0x184b0>
  422fa0:	add	x8, x8, #0x378
  422fa4:	ldr	x0, [x8, w0, sxtw #3]
  422fa8:	ldp	x29, x30, [sp], #16
  422fac:	ret
  422fb0:	bl	4045b0 <abort@plt>
  422fb4:	stp	x29, x30, [sp, #-32]!
  422fb8:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  422fbc:	add	x1, x1, #0x439
  422fc0:	mov	w2, #0x3                   	// #3
  422fc4:	stp	x20, x19, [sp, #16]
  422fc8:	mov	x29, sp
  422fcc:	mov	x19, x0
  422fd0:	bl	404300 <strncmp@plt>
  422fd4:	add	x8, x19, #0x3
  422fd8:	cmp	w0, #0x0
  422fdc:	csel	x20, x8, x19, eq  // eq = none
  422fe0:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x184b0>
  422fe4:	add	x0, x0, #0x426
  422fe8:	mov	x1, x20
  422fec:	bl	404660 <strcmp@plt>
  422ff0:	cbz	w0, 423050 <wcrtomb@plt+0x1e510>
  422ff4:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x184b0>
  422ff8:	add	x0, x0, #0x42b
  422ffc:	mov	x1, x20
  423000:	bl	404660 <strcmp@plt>
  423004:	cbz	w0, 42305c <wcrtomb@plt+0x1e51c>
  423008:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x184b0>
  42300c:	add	x0, x0, #0x430
  423010:	mov	x1, x20
  423014:	bl	404660 <strcmp@plt>
  423018:	cbz	w0, 423068 <wcrtomb@plt+0x1e528>
  42301c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  423020:	add	x0, x0, #0xb47
  423024:	mov	x1, x20
  423028:	bl	404660 <strcmp@plt>
  42302c:	cbz	w0, 423074 <wcrtomb@plt+0x1e534>
  423030:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x184b0>
  423034:	add	x0, x0, #0x434
  423038:	mov	x1, x20
  42303c:	bl	404660 <strcmp@plt>
  423040:	cbnz	w0, 42308c <wcrtomb@plt+0x1e54c>
  423044:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  423048:	add	x8, x8, #0xfc0
  42304c:	b	42307c <wcrtomb@plt+0x1e53c>
  423050:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  423054:	add	x8, x8, #0xf80
  423058:	b	42307c <wcrtomb@plt+0x1e53c>
  42305c:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  423060:	add	x8, x8, #0xf90
  423064:	b	42307c <wcrtomb@plt+0x1e53c>
  423068:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42306c:	add	x8, x8, #0xfa0
  423070:	b	42307c <wcrtomb@plt+0x1e53c>
  423074:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  423078:	add	x8, x8, #0xfb0
  42307c:	ldr	w0, [x8, #8]
  423080:	ldp	x20, x19, [sp, #16]
  423084:	ldp	x29, x30, [sp], #32
  423088:	ret
  42308c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423090:	ldr	x8, [x8, #4064]
  423094:	cbz	x8, 42309c <wcrtomb@plt+0x1e55c>
  423098:	blr	x8
  42309c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  4230a0:	add	x1, x1, #0x43d
  4230a4:	mov	w2, #0x5                   	// #5
  4230a8:	mov	x0, xzr
  4230ac:	bl	404900 <dcgettext@plt>
  4230b0:	mov	x2, x0
  4230b4:	mov	w0, wzr
  4230b8:	mov	w1, wzr
  4230bc:	mov	x3, x19
  4230c0:	bl	403fa0 <error@plt>
  4230c4:	bl	40e96c <wcrtomb@plt+0x9e2c>
  4230c8:	stp	x29, x30, [sp, #-32]!
  4230cc:	str	x19, [sp, #16]
  4230d0:	mov	x29, sp
  4230d4:	mov	x19, x2
  4230d8:	mov	x2, x1
  4230dc:	mov	w1, w0
  4230e0:	adrp	x5, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4230e4:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x304b0>
  4230e8:	add	x5, x5, #0x7f8
  4230ec:	add	x0, x0, #0xe60
  4230f0:	add	x4, x29, #0x1c
  4230f4:	mov	w3, #0x28                  	// #40
  4230f8:	str	x19, [x5]
  4230fc:	bl	4378ac <argp_parse@@Base>
  423100:	cbnz	w0, 423120 <wcrtomb@plt+0x1e5e0>
  423104:	ldr	w8, [x19]
  423108:	cbnz	w8, 423114 <wcrtomb@plt+0x1e5d4>
  42310c:	bl	41c8f0 <wcrtomb@plt+0x17db0>
  423110:	tbnz	w0, #0, 423124 <wcrtomb@plt+0x1e5e4>
  423114:	ldr	x19, [sp, #16]
  423118:	ldp	x29, x30, [sp], #32
  42311c:	ret
  423120:	bl	4045b0 <abort@plt>
  423124:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423128:	ldr	x8, [x8, #4064]
  42312c:	cbz	x8, 423134 <wcrtomb@plt+0x1e5f4>
  423130:	blr	x8
  423134:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  423138:	add	x1, x1, #0x455
  42313c:	mov	w2, #0x5                   	// #5
  423140:	mov	x0, xzr
  423144:	bl	404900 <dcgettext@plt>
  423148:	ldr	x3, [x19, #8]
  42314c:	mov	x2, x0
  423150:	mov	w0, wzr
  423154:	mov	w1, wzr
  423158:	bl	403fa0 <error@plt>
  42315c:	mov	w0, #0x2                   	// #2
  423160:	bl	422db4 <wcrtomb@plt+0x1e274>
  423164:	sub	sp, sp, #0x1a0
  423168:	stp	x29, x30, [sp, #320]
  42316c:	stp	x28, x27, [sp, #336]
  423170:	stp	x26, x25, [sp, #352]
  423174:	stp	x24, x23, [sp, #368]
  423178:	stp	x22, x21, [sp, #384]
  42317c:	stp	x20, x19, [sp, #400]
  423180:	add	x29, sp, #0x140
  423184:	mov	x19, x1
  423188:	mov	w20, w0
  42318c:	bl	404e04 <wcrtomb@plt+0x2c4>
  423190:	ldr	x0, [x19]
  423194:	bl	44329c <argp_parse@@Base+0xb9f0>
  423198:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42319c:	add	x1, x1, #0x66
  4231a0:	mov	w0, #0x6                   	// #6
  4231a4:	bl	404b00 <setlocale@plt>
  4231a8:	adrp	x21, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4231ac:	add	x21, x21, #0x42c
  4231b0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  4231b4:	add	x1, x1, #0x470
  4231b8:	mov	x0, x21
  4231bc:	bl	404310 <bindtextdomain@plt>
  4231c0:	mov	x0, x21
  4231c4:	bl	404630 <textdomain@plt>
  4231c8:	adrp	x10, 408000 <wcrtomb@plt+0x34c0>
  4231cc:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4231d0:	mov	w9, #0x2                   	// #2
  4231d4:	adrp	x28, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4231d8:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4231dc:	add	x10, x10, #0xc84
  4231e0:	mov	w1, #0x7                   	// #7
  4231e4:	mov	x0, xzr
  4231e8:	str	w9, [x8, #4064]
  4231ec:	str	wzr, [x28, #2416]
  4231f0:	str	x10, [x11, #4064]
  4231f4:	bl	4433ac <argp_parse@@Base+0xbb00>
  4231f8:	bl	42ca18 <wcrtomb@plt+0x27ed8>
  4231fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423200:	mov	w9, #0xa                   	// #10
  423204:	mov	w0, #0x50                  	// #80
  423208:	str	x9, [x8, #2088]
  42320c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  423210:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423214:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423218:	str	x0, [x27, #3744]
  42321c:	mov	w0, #0x11                  	// #17
  423220:	mov	x1, xzr
  423224:	str	xzr, [x22, #3904]
  423228:	bl	4041b0 <signal@plt>
  42322c:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  423230:	add	x8, x8, #0xba8
  423234:	ldp	q0, q1, [x8]
  423238:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x324b0>
  42323c:	add	x1, x1, #0xe58
  423240:	mov	x0, x21
  423244:	stp	q0, q1, [sp, #16]
  423248:	bl	4388c8 <argp_parse@@Base+0x101c>
  42324c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423250:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  423254:	add	x21, x21, #0x800
  423258:	add	x0, x0, #0x6fc
  42325c:	str	xzr, [x21]
  423260:	strh	wzr, [x21, #8]
  423264:	bl	404a30 <getenv@plt>
  423268:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42326c:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423270:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423274:	mov	w9, #0x14                  	// #20
  423278:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42327c:	mov	w10, #0x2800                	// #10240
  423280:	stp	x0, xzr, [x21, #16]
  423284:	str	wzr, [x21, #32]
  423288:	str	wzr, [x25, #3916]
  42328c:	str	wzr, [x24, #3872]
  423290:	str	w9, [x8, #3804]
  423294:	str	x10, [x11, #3976]
  423298:	bl	4393e4 <argp_parse@@Base+0x1b38>
  42329c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4232a0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4232a4:	adrp	x10, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4232a8:	str	x0, [x8, #3120]
  4232ac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4232b0:	mov	w11, #0x8                   	// #8
  4232b4:	str	w11, [x8, #3732]
  4232b8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4232bc:	mov	w11, #0x1                   	// #1
  4232c0:	str	wzr, [x9, #3972]
  4232c4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4232c8:	ldr	q0, [x10, #3152]
  4232cc:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4232d0:	strb	w11, [x8, #3812]
  4232d4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4232d8:	str	wzr, [x9, #3144]
  4232dc:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4232e0:	str	wzr, [x10, #3576]
  4232e4:	mov	w10, #0xffffffff            	// #-1
  4232e8:	str	w11, [x8, #3664]
  4232ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4232f0:	str	w10, [x9, #3840]
  4232f4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4232f8:	strb	w11, [x8, #3088]
  4232fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423300:	str	xzr, [x9, #3640]
  423304:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423308:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42330c:	add	x8, x8, #0xf08
  423310:	str	w10, [x9, #3760]
  423314:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423318:	add	x11, x11, #0xc18
  42331c:	str	xzr, [x9, #3584]
  423320:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423324:	str	q0, [x8]
  423328:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42332c:	cmp	w20, #0x2
  423330:	str	w10, [x9, #3836]
  423334:	str	q0, [x11]
  423338:	str	w10, [x8, #3128]
  42333c:	b.lt	423514 <wcrtomb@plt+0x1e9d4>  // b.tstop
  423340:	ldr	x0, [x19, #8]
  423344:	ldrb	w8, [x0]
  423348:	cmp	w8, #0x2d
  42334c:	b.eq	423514 <wcrtomb@plt+0x1e9d4>  // b.none
  423350:	mov	w8, #0x2d                  	// #45
  423354:	strb	w8, [sp, #80]
  423358:	strb	wzr, [sp, #82]
  42335c:	bl	403f40 <strlen@plt>
  423360:	add	w27, w0, w20
  423364:	sbfiz	x0, x27, #3, #32
  423368:	bl	4459e8 <argp_parse@@Base+0xe13c>
  42336c:	ldp	x8, x22, [x19]
  423370:	mov	x26, x0
  423374:	add	x23, x19, #0x10
  423378:	str	x8, [x26], #8
  42337c:	ldrb	w8, [x22]
  423380:	cbz	w8, 423494 <wcrtomb@plt+0x1e954>
  423384:	mov	w24, w20
  423388:	add	x20, x19, w20, uxtw #3
  42338c:	adrp	x21, 477000 <_obstack_memory_used@@Base+0x304b0>
  423390:	adrp	x28, 477000 <_obstack_memory_used@@Base+0x304b0>
  423394:	str	x0, [sp, #8]
  423398:	b	4233a8 <wcrtomb@plt+0x1e868>
  42339c:	mov	x26, x8
  4233a0:	ldrb	w8, [x22, #1]!
  4233a4:	cbz	w8, 423488 <wcrtomb@plt+0x1e948>
  4233a8:	add	x0, sp, #0x50
  4233ac:	strb	w8, [sp, #81]
  4233b0:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4233b4:	mov	x8, x26
  4233b8:	str	x0, [x8], #8
  4233bc:	ldrb	w9, [x22]
  4233c0:	ldr	x10, [x21, #3680]
  4233c4:	ldr	x12, [x10]
  4233c8:	ldr	w11, [x10, #8]
  4233cc:	cbnz	x12, 4233ec <wcrtomb@plt+0x1e8ac>
  4233d0:	cbnz	w11, 4233ec <wcrtomb@plt+0x1e8ac>
  4233d4:	ldr	x12, [x10, #16]
  4233d8:	cbnz	x12, 4233ec <wcrtomb@plt+0x1e8ac>
  4233dc:	ldr	w12, [x10, #24]
  4233e0:	cbnz	w12, 4233ec <wcrtomb@plt+0x1e8ac>
  4233e4:	ldr	x12, [x10, #32]
  4233e8:	cbz	x12, 42342c <wcrtomb@plt+0x1e8ec>
  4233ec:	cmp	w11, w9
  4233f0:	b.eq	4233fc <wcrtomb@plt+0x1e8bc>  // b.none
  4233f4:	add	x10, x10, #0x30
  4233f8:	b	4233c4 <wcrtomb@plt+0x1e884>
  4233fc:	cbz	x10, 42342c <wcrtomb@plt+0x1e8ec>
  423400:	ldr	x9, [x10, #16]
  423404:	cbz	x9, 42339c <wcrtomb@plt+0x1e85c>
  423408:	cmp	x23, x20
  42340c:	b.cs	4240a0 <wcrtomb@plt+0x1f560>  // b.hs, b.nlast
  423410:	ldr	x8, [x23], #8
  423414:	add	x9, x26, #0x10
  423418:	str	x8, [x26, #8]
  42341c:	mov	x26, x9
  423420:	ldrb	w8, [x22, #1]!
  423424:	cbnz	w8, 4233a8 <wcrtomb@plt+0x1e868>
  423428:	b	423488 <wcrtomb@plt+0x1e948>
  42342c:	ldr	x11, [x28, #3712]
  423430:	cbz	x11, 42339c <wcrtomb@plt+0x1e85c>
  423434:	ldr	x10, [x11]
  423438:	cbz	x10, 42339c <wcrtomb@plt+0x1e85c>
  42343c:	ldr	x10, [x10]
  423440:	ldr	x13, [x10]
  423444:	ldr	w12, [x10, #8]
  423448:	cbnz	x13, 423468 <wcrtomb@plt+0x1e928>
  42344c:	cbnz	w12, 423468 <wcrtomb@plt+0x1e928>
  423450:	ldr	x13, [x10, #16]
  423454:	cbnz	x13, 423468 <wcrtomb@plt+0x1e928>
  423458:	ldr	w13, [x10, #24]
  42345c:	cbnz	w13, 423468 <wcrtomb@plt+0x1e928>
  423460:	ldr	x13, [x10, #32]
  423464:	cbz	x13, 42347c <wcrtomb@plt+0x1e93c>
  423468:	cmp	w12, w9
  42346c:	b.eq	423478 <wcrtomb@plt+0x1e938>  // b.none
  423470:	add	x10, x10, #0x30
  423474:	b	423440 <wcrtomb@plt+0x1e900>
  423478:	cbnz	x10, 423400 <wcrtomb@plt+0x1e8c0>
  42347c:	ldr	x10, [x11, #32]!
  423480:	cbnz	x10, 42343c <wcrtomb@plt+0x1e8fc>
  423484:	b	42339c <wcrtomb@plt+0x1e85c>
  423488:	ldr	x0, [sp, #8]
  42348c:	adrp	x28, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423490:	b	423498 <wcrtomb@plt+0x1e958>
  423494:	mov	w24, w20
  423498:	add	x8, x19, x24, lsl #3
  42349c:	cmp	x23, x8
  4234a0:	sub	w20, w27, #0x1
  4234a4:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4234a8:	b.cs	423504 <wcrtomb@plt+0x1e9c4>  // b.hs, b.nlast
  4234ac:	mvn	x10, x23
  4234b0:	add	x9, x8, x10
  4234b4:	cmp	x9, #0x17
  4234b8:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4234bc:	b.ls	4234e8 <wcrtomb@plt+0x1e9a8>  // b.plast
  4234c0:	add	x11, x19, x24, lsl #3
  4234c4:	add	x10, x11, x10
  4234c8:	and	x10, x10, #0xfffffffffffffff8
  4234cc:	add	x10, x10, #0x8
  4234d0:	add	x11, x23, x10
  4234d4:	cmp	x26, x11
  4234d8:	b.cs	423fd8 <wcrtomb@plt+0x1f498>  // b.hs, b.nlast
  4234dc:	add	x10, x26, x10
  4234e0:	cmp	x23, x10
  4234e4:	b.cs	423fd8 <wcrtomb@plt+0x1f498>  // b.hs, b.nlast
  4234e8:	mov	x9, x23
  4234ec:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4234f0:	ldr	x10, [x9], #8
  4234f4:	cmp	x9, x8
  4234f8:	str	x10, [x26], #8
  4234fc:	b.cc	4234f0 <wcrtomb@plt+0x1e9b0>  // b.lo, b.ul, b.last
  423500:	b	42350c <wcrtomb@plt+0x1e9cc>
  423504:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423508:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42350c:	mov	x19, x0
  423510:	str	xzr, [x26]
  423514:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  423518:	add	x0, x0, #0xb21
  42351c:	bl	404a30 <getenv@plt>
  423520:	adrp	x8, 45f000 <_obstack_memory_used@@Base+0x184b0>
  423524:	add	x8, x8, #0x328
  423528:	ldp	q0, q1, [x8]
  42352c:	stp	q0, q1, [sp, #48]
  423530:	cbz	x0, 423588 <wcrtomb@plt+0x1ea48>
  423534:	mov	w2, #0xe46                 	// #3654
  423538:	mov	w8, #0x1                   	// #1
  42353c:	add	x1, sp, #0x50
  423540:	movk	w2, #0x200, lsl #16
  423544:	str	x8, [sp, #96]
  423548:	bl	42d338 <wcrtomb@plt+0x287f8>
  42354c:	cbnz	w0, 42411c <wcrtomb@plt+0x1f5dc>
  423550:	ldr	x8, [sp, #80]
  423554:	cbz	x8, 423580 <wcrtomb@plt+0x1ea40>
  423558:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42355c:	ldr	x9, [x9, #2504]
  423560:	ldr	x10, [sp, #88]
  423564:	add	x2, sp, #0x30
  423568:	str	x9, [x10]
  42356c:	ldr	w9, [sp, #96]
  423570:	ldr	x1, [sp, #88]
  423574:	add	w0, w9, w8
  423578:	bl	4230c8 <wcrtomb@plt+0x1e588>
  42357c:	str	xzr, [sp, #80]
  423580:	add	x0, sp, #0x50
  423584:	bl	42d484 <wcrtomb@plt+0x28944>
  423588:	adrp	x5, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42358c:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x304b0>
  423590:	add	x5, x5, #0x7f8
  423594:	add	x8, sp, #0x10
  423598:	add	x0, x0, #0xe60
  42359c:	add	x4, sp, #0x50
  4235a0:	mov	w3, #0x8                   	// #8
  4235a4:	mov	w1, w20
  4235a8:	mov	x2, x19
  4235ac:	str	x8, [x5]
  4235b0:	bl	4378ac <argp_parse@@Base>
  4235b4:	cbnz	w0, 4240e0 <wcrtomb@plt+0x1f5a0>
  4235b8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4235bc:	ldrb	w8, [x8, #2056]
  4235c0:	cbz	w8, 4235ec <wcrtomb@plt+0x1eaac>
  4235c4:	ldr	w8, [x25, #3916]
  4235c8:	cmp	w8, #0x3
  4235cc:	b.ne	4235e0 <wcrtomb@plt+0x1eaa0>  // b.any
  4235d0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  4235d4:	add	x0, x0, #0x77c
  4235d8:	bl	4268d4 <wcrtomb@plt+0x21d94>
  4235dc:	b	4235ec <wcrtomb@plt+0x1eaac>
  4235e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4235e4:	mov	w9, #0xffffffff            	// #-1
  4235e8:	str	w9, [x8, #4036]
  4235ec:	ldr	w8, [sp, #80]
  4235f0:	cmp	w8, w20
  4235f4:	b.ge	423614 <wcrtomb@plt+0x1ead4>  // b.tcont
  4235f8:	ldr	x0, [x19, w8, sxtw #3]
  4235fc:	bl	41c904 <wcrtomb@plt+0x17dc4>
  423600:	ldr	w8, [sp, #80]
  423604:	add	w8, w8, #0x1
  423608:	cmp	w8, w20
  42360c:	str	w8, [sp, #80]
  423610:	b.lt	4235f8 <wcrtomb@plt+0x1eab8>  // b.tstop
  423614:	ldr	w8, [x24, #3872]
  423618:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42361c:	cbnz	w8, 423638 <wcrtomb@plt+0x1eaf8>
  423620:	ldrb	w8, [x21, #2057]
  423624:	mov	w9, #0x4                   	// #4
  423628:	cmp	w8, #0x0
  42362c:	mov	w8, #0x6                   	// #6
  423630:	csel	w8, w8, w9, eq  // eq = none
  423634:	str	w8, [x24, #3872]
  423638:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42363c:	ldr	x9, [x26, #3704]
  423640:	ldr	w10, [x25, #3916]
  423644:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423648:	cmp	x9, #0x0
  42364c:	cset	w9, ne  // ne = any
  423650:	cmp	w10, #0x3
  423654:	cset	w10, eq  // eq = none
  423658:	and	w9, w9, w10
  42365c:	tbnz	w9, #0, 423684 <wcrtomb@plt+0x1eb44>
  423660:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423664:	ldrb	w10, [x23, #3132]
  423668:	ldrb	w9, [x9, #3089]
  42366c:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423670:	ldrb	w11, [x11, #3968]
  423674:	orr	w9, w10, w9
  423678:	orr	w9, w9, w11
  42367c:	tst	w9, #0xff
  423680:	b.eq	423698 <wcrtomb@plt+0x1eb58>  // b.none
  423684:	mov	w9, #0x1                   	// #1
  423688:	lsl	w8, w9, w8
  42368c:	mov	w9, #0x54                  	// #84
  423690:	tst	w8, w9
  423694:	b.eq	4241d0 <wcrtomb@plt+0x1f690>  // b.none
  423698:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42369c:	ldr	x8, [x19, #3816]
  4236a0:	cbz	x8, 4236d8 <wcrtomb@plt+0x1eb98>
  4236a4:	bl	41c8f0 <wcrtomb@plt+0x17db0>
  4236a8:	tbz	w0, #0, 424164 <wcrtomb@plt+0x1f624>
  4236ac:	ldr	w0, [x25, #3916]
  4236b0:	and	w8, w0, #0xfffffffc
  4236b4:	cmp	w8, #0x4
  4236b8:	b.eq	4236d8 <wcrtomb@plt+0x1eb98>  // b.none
  4236bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4236c0:	ldr	x8, [x8, #2112]
  4236c4:	cbz	x8, 4236d4 <wcrtomb@plt+0x1eb94>
  4236c8:	ldr	w8, [x8]
  4236cc:	cmp	w8, #0x1
  4236d0:	b.eq	4242fc <wcrtomb@plt+0x1f7bc>  // b.none
  4236d4:	str	xzr, [x19, #3816]
  4236d8:	ldr	x8, [x22, #3904]
  4236dc:	cbz	x8, 42370c <wcrtomb@plt+0x1ebcc>
  4236e0:	cmp	x8, #0x1
  4236e4:	b.eq	423740 <wcrtomb@plt+0x1ec00>  // b.none
  4236e8:	ldrb	w8, [x23, #3132]
  4236ec:	cbnz	w8, 423740 <wcrtomb@plt+0x1ec00>
  4236f0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4236f4:	ldr	x8, [x8, #4064]
  4236f8:	cbz	x8, 423700 <wcrtomb@plt+0x1ebc0>
  4236fc:	blr	x8
  423700:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  423704:	add	x1, x1, #0x779
  423708:	b	424038 <wcrtomb@plt+0x1f4f8>
  42370c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  423710:	mov	w8, #0x1                   	// #1
  423714:	add	x0, x0, #0x774
  423718:	str	x8, [x22, #3904]
  42371c:	bl	404a30 <getenv@plt>
  423720:	ldr	x8, [x27, #3744]
  423724:	str	x0, [x8]
  423728:	ldr	x8, [x27, #3744]
  42372c:	ldr	x9, [x8]
  423730:	cbnz	x9, 423740 <wcrtomb@plt+0x1ec00>
  423734:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  423738:	add	x9, x9, #0x85
  42373c:	str	x9, [x8]
  423740:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423744:	ldr	x8, [x20, #3888]
  423748:	cbz	x8, 4237c4 <wcrtomb@plt+0x1ec84>
  42374c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423750:	ldr	x9, [x9, #3104]
  423754:	tbnz	x9, #63, 4237c4 <wcrtomb@plt+0x1ec84>
  423758:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42375c:	add	x9, x9, #0x848
  423760:	ldp	x8, x9, [x9]
  423764:	ldr	w10, [x8]
  423768:	ldr	w11, [x9]
  42376c:	cmp	w10, w11
  423770:	b.ne	4237a0 <wcrtomb@plt+0x1ec60>  // b.any
  423774:	cmp	w10, #0x1
  423778:	b.eq	42378c <wcrtomb@plt+0x1ec4c>  // b.none
  42377c:	ldr	x0, [x8, #8]
  423780:	ldr	x1, [x9, #8]
  423784:	bl	404660 <strcmp@plt>
  423788:	cbnz	w0, 4237b4 <wcrtomb@plt+0x1ec74>
  42378c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x164b0>
  423790:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  423794:	add	x0, x0, #0xa32
  423798:	add	x1, x1, #0x7a4
  42379c:	bl	426b74 <wcrtomb@plt+0x22034>
  4237a0:	cmp	w10, #0x1
  4237a4:	b.ne	4237b4 <wcrtomb@plt+0x1ec74>  // b.any
  4237a8:	mov	x8, xzr
  4237ac:	str	xzr, [x20, #3888]
  4237b0:	b	4237c4 <wcrtomb@plt+0x1ec84>
  4237b4:	ldr	x8, [x20, #3888]
  4237b8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4237bc:	add	x9, x9, #0xc18
  4237c0:	stp	xzr, xzr, [x9]
  4237c4:	cbnz	x8, 42380c <wcrtomb@plt+0x1eccc>
  4237c8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4237cc:	ldr	w8, [x8, #3836]
  4237d0:	cmn	w8, #0x1
  4237d4:	b.eq	42380c <wcrtomb@plt+0x1eccc>  // b.none
  4237d8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4237dc:	ldr	x8, [x8, #4064]
  4237e0:	cbz	x8, 4237e8 <wcrtomb@plt+0x1eca8>
  4237e4:	blr	x8
  4237e8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4237ec:	add	x1, x1, #0x7ac
  4237f0:	mov	w2, #0x5                   	// #5
  4237f4:	mov	x0, xzr
  4237f8:	bl	404900 <dcgettext@plt>
  4237fc:	mov	x2, x0
  423800:	mov	w0, wzr
  423804:	mov	w1, wzr
  423808:	bl	403fa0 <error@plt>
  42380c:	ldr	x0, [x26, #3704]
  423810:	cbz	x0, 423844 <wcrtomb@plt+0x1ed04>
  423814:	ldr	w8, [x24, #3872]
  423818:	orr	w8, w8, #0x4
  42381c:	cmp	w8, #0x6
  423820:	b.ne	423844 <wcrtomb@plt+0x1ed04>  // b.any
  423824:	ldrb	w8, [x23, #3132]
  423828:	mov	w9, #0x51                  	// #81
  42382c:	cmp	w8, #0x0
  423830:	mov	w8, #0x63                  	// #99
  423834:	csel	x19, x8, x9, eq  // eq = none
  423838:	bl	403f40 <strlen@plt>
  42383c:	cmp	x19, x0
  423840:	b.cc	424250 <wcrtomb@plt+0x1f710>  // b.lo, b.ul, b.last
  423844:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423848:	ldrb	w9, [x8, #3898]
  42384c:	cbz	w9, 423894 <wcrtomb@plt+0x1ed54>
  423850:	ldrb	w9, [x23, #3132]
  423854:	cbnz	w9, 424180 <wcrtomb@plt+0x1f640>
  423858:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42385c:	ldr	x9, [x9, #3960]
  423860:	cbnz	x9, 42419c <wcrtomb@plt+0x1f65c>
  423864:	ldr	w0, [x25, #3916]
  423868:	mov	w9, #0x11e                 	// #286
  42386c:	lsr	x9, x9, x0
  423870:	tbnz	w9, #0, 4238c0 <wcrtomb@plt+0x1ed80>
  423874:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423878:	ldr	x9, [x9, #2136]
  42387c:	cbz	x9, 42388c <wcrtomb@plt+0x1ed4c>
  423880:	ldr	w9, [x9]
  423884:	cmp	w9, #0x1
  423888:	b.eq	424310 <wcrtomb@plt+0x1f7d0>  // b.none
  42388c:	strb	wzr, [x8, #3898]
  423890:	b	4238c0 <wcrtomb@plt+0x1ed80>
  423894:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423898:	ldr	x8, [x8, #3960]
  42389c:	cbz	x8, 4238c0 <wcrtomb@plt+0x1ed80>
  4238a0:	ldrb	w8, [x23, #3132]
  4238a4:	cbnz	w8, 4242a8 <wcrtomb@plt+0x1f768>
  4238a8:	ldr	w8, [x25, #3916]
  4238ac:	mov	w9, #0x112                 	// #274
  4238b0:	lsr	x9, x9, x8
  4238b4:	tbnz	w9, #0, 4242c4 <wcrtomb@plt+0x1f784>
  4238b8:	cmp	w8, #0x2
  4238bc:	b.eq	4242e0 <wcrtomb@plt+0x1f7a0>  // b.none
  4238c0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4238c4:	ldr	w8, [x8, #3112]
  4238c8:	cmp	w8, #0x2
  4238cc:	b.ne	4238dc <wcrtomb@plt+0x1ed9c>  // b.any
  4238d0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4238d4:	ldr	x8, [x8, #3856]
  4238d8:	tbnz	x8, #63, 4240e8 <wcrtomb@plt+0x1f5a8>
  4238dc:	ldrb	w9, [x21, #2057]
  4238e0:	ldr	w8, [x24, #3872]
  4238e4:	cbz	w9, 423900 <wcrtomb@plt+0x1edc0>
  4238e8:	cmp	w8, #0x4
  4238ec:	b.eq	423900 <wcrtomb@plt+0x1edc0>  // b.none
  4238f0:	ldr	w9, [x25, #3916]
  4238f4:	sub	x9, x9, #0x5
  4238f8:	cmp	x9, #0x3
  4238fc:	b.cs	4241ec <wcrtomb@plt+0x1f6ac>  // b.hs, b.nlast
  423900:	cmp	w8, #0x4
  423904:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423908:	b.eq	42392c <wcrtomb@plt+0x1edec>  // b.none
  42390c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423910:	ldr	w9, [x9, #3952]
  423914:	cmp	w9, #0x1
  423918:	b.lt	42392c <wcrtomb@plt+0x1edec>  // b.tstop
  42391c:	ldr	w9, [x25, #3916]
  423920:	sub	x9, x9, #0x5
  423924:	cmp	x9, #0x3
  423928:	b.cs	424208 <wcrtomb@plt+0x1f6c8>  // b.hs, b.nlast
  42392c:	cmp	w8, #0x4
  423930:	b.eq	423954 <wcrtomb@plt+0x1ee14>  // b.none
  423934:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423938:	ldr	w9, [x9, #4040]
  42393c:	cmp	w9, #0x1
  423940:	b.lt	423954 <wcrtomb@plt+0x1ee14>  // b.tstop
  423944:	ldr	w9, [x25, #3916]
  423948:	sub	x9, x9, #0x5
  42394c:	cmp	x9, #0x3
  423950:	b.cs	424220 <wcrtomb@plt+0x1f6e0>  // b.hs, b.nlast
  423954:	cmp	w8, #0x4
  423958:	b.eq	42397c <wcrtomb@plt+0x1ee3c>  // b.none
  42395c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423960:	ldr	w8, [x8, #3712]
  423964:	cmp	w8, #0x1
  423968:	b.lt	42397c <wcrtomb@plt+0x1ee3c>  // b.tstop
  42396c:	ldr	w8, [x25, #3916]
  423970:	sub	x8, x8, #0x5
  423974:	cmp	x8, #0x3
  423978:	b.cs	424238 <wcrtomb@plt+0x1f6f8>  // b.hs, b.nlast
  42397c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423980:	ldrb	w9, [x8, #3736]
  423984:	cbz	w9, 4239b4 <wcrtomb@plt+0x1ee74>
  423988:	ldr	w0, [x25, #3916]
  42398c:	sub	x9, x0, #0x5
  423990:	cmp	x9, #0x3
  423994:	b.cc	4239b4 <wcrtomb@plt+0x1ee74>  // b.lo, b.ul, b.last
  423998:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42399c:	ldr	x9, [x9, #2144]
  4239a0:	cbz	x9, 4239b0 <wcrtomb@plt+0x1ee70>
  4239a4:	ldr	w9, [x9]
  4239a8:	cmp	w9, #0x1
  4239ac:	b.eq	424324 <wcrtomb@plt+0x1f7e4>  // b.none
  4239b0:	strb	wzr, [x8, #3736]
  4239b4:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4239b8:	ldrb	w8, [x21, #3696]
  4239bc:	mov	x23, x22
  4239c0:	cbz	w8, 4239f0 <wcrtomb@plt+0x1eeb0>
  4239c4:	ldr	w0, [x25, #3916]
  4239c8:	sub	x8, x0, #0x5
  4239cc:	cmp	x8, #0x3
  4239d0:	b.cc	4239f0 <wcrtomb@plt+0x1eeb0>  // b.lo, b.ul, b.last
  4239d4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4239d8:	ldr	x8, [x8, #2152]
  4239dc:	cbz	x8, 4239ec <wcrtomb@plt+0x1eeac>
  4239e0:	ldr	w8, [x8]
  4239e4:	cmp	w8, #0x1
  4239e8:	b.eq	424338 <wcrtomb@plt+0x1f7f8>  // b.none
  4239ec:	strb	wzr, [x21, #3696]
  4239f0:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4239f4:	ldrb	w8, [x19, #3899]
  4239f8:	cbz	w8, 423aac <wcrtomb@plt+0x1ef6c>
  4239fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423a00:	ldrb	w9, [x8, #4008]
  423a04:	cbz	w9, 423a5c <wcrtomb@plt+0x1ef1c>
  423a08:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423a0c:	add	x10, x10, #0x870
  423a10:	ldp	x9, x10, [x10]
  423a14:	ldr	w11, [x9]
  423a18:	ldr	w12, [x10]
  423a1c:	cmp	w11, w12
  423a20:	b.ne	423a50 <wcrtomb@plt+0x1ef10>  // b.any
  423a24:	cmp	w11, #0x1
  423a28:	b.eq	423a3c <wcrtomb@plt+0x1eefc>  // b.none
  423a2c:	ldr	x0, [x9, #8]
  423a30:	ldr	x1, [x10, #8]
  423a34:	bl	404660 <strcmp@plt>
  423a38:	cbnz	w0, 423aa8 <wcrtomb@plt+0x1ef68>
  423a3c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  423a40:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  423a44:	add	x0, x0, #0x9e8
  423a48:	add	x1, x1, #0x9f8
  423a4c:	bl	426b74 <wcrtomb@plt+0x22034>
  423a50:	cmp	w11, #0x1
  423a54:	b.ne	423aa8 <wcrtomb@plt+0x1ef68>  // b.any
  423a58:	strb	wzr, [x8, #4008]
  423a5c:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423a60:	ldr	x8, [x22, #3624]
  423a64:	cbnz	x8, 423aac <wcrtomb@plt+0x1ef6c>
  423a68:	ldr	x8, [x27, #3744]
  423a6c:	ldr	x0, [x8]
  423a70:	bl	439118 <argp_parse@@Base+0x186c>
  423a74:	mov	x19, x0
  423a78:	bl	4214c0 <wcrtomb@plt+0x1c980>
  423a7c:	str	x0, [x22, #3624]
  423a80:	mov	x0, x19
  423a84:	bl	404700 <free@plt>
  423a88:	ldr	x8, [x22, #3624]
  423a8c:	cbnz	x8, 423aac <wcrtomb@plt+0x1ef6c>
  423a90:	ldr	x8, [x24, #4064]
  423a94:	cbz	x8, 423a9c <wcrtomb@plt+0x1ef5c>
  423a98:	blr	x8
  423a9c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  423aa0:	add	x1, x1, #0xa09
  423aa4:	b	424038 <wcrtomb@plt+0x1f4f8>
  423aa8:	strb	wzr, [x19, #3899]
  423aac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423ab0:	ldrb	w8, [x8, #3090]
  423ab4:	cbz	w8, 423ac4 <wcrtomb@plt+0x1ef84>
  423ab8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423abc:	mov	w9, #0x3                   	// #3
  423ac0:	str	w9, [x8, #3808]
  423ac4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423ac8:	ldrb	w8, [x8, #3632]
  423acc:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423ad0:	ldr	w10, [x10, #3612]
  423ad4:	mov	w9, #0x900                 	// #2304
  423ad8:	movk	w9, #0x8, lsl #16
  423adc:	cmp	w8, #0x0
  423ae0:	orr	w8, w9, #0x8000
  423ae4:	csel	w8, w8, w9, eq  // eq = none
  423ae8:	cset	w9, eq  // eq = none
  423aec:	cmp	w10, #0x2
  423af0:	cset	w10, eq  // eq = none
  423af4:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423af8:	bfi	w8, w10, #18, #1
  423afc:	str	w8, [x11, #3764]
  423b00:	ldr	w11, [x25, #3916]
  423b04:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423b08:	orr	w8, w8, #0x4000
  423b0c:	str	w8, [x10, #3756]
  423b10:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423b14:	lsl	w9, w9, #8
  423b18:	cmp	w11, #0x9
  423b1c:	str	w9, [x8, #3616]
  423b20:	b.ne	423b3c <wcrtomb@plt+0x1effc>  // b.any
  423b24:	bl	41c8f0 <wcrtomb@plt+0x17db0>
  423b28:	tbnz	w0, #0, 423b54 <wcrtomb@plt+0x1f014>
  423b2c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423b30:	ldr	w9, [x8, #3700]
  423b34:	add	w9, w9, #0x1
  423b38:	b	423b50 <wcrtomb@plt+0x1f010>
  423b3c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423b40:	ldrb	w8, [x8, #3609]
  423b44:	cbz	w8, 423b54 <wcrtomb@plt+0x1f014>
  423b48:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423b4c:	mov	w9, #0x2                   	// #2
  423b50:	str	w9, [x8, #3700]
  423b54:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423b58:	ldr	d0, [x8, #3688]
  423b5c:	fcmp	d0, #0.0
  423b60:	b.eq	423b78 <wcrtomb@plt+0x1f038>  // b.none
  423b64:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423b68:	ldr	d1, [x8, #3976]
  423b6c:	ucvtf	d1, d1
  423b70:	fcmp	d0, d1
  423b74:	b.mi	4241b8 <wcrtomb@plt+0x1f678>  // b.first
  423b78:	ldrb	w8, [x21, #3696]
  423b7c:	cbz	w8, 423be8 <wcrtomb@plt+0x1f0a8>
  423b80:	ldr	x8, [x20, #3888]
  423b84:	cbz	x8, 423be8 <wcrtomb@plt+0x1f0a8>
  423b88:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423b8c:	add	x9, x9, #0x848
  423b90:	ldr	x8, [x9, #32]
  423b94:	ldr	x9, [x9]
  423b98:	ldr	w10, [x8]
  423b9c:	ldr	w11, [x9]
  423ba0:	cmp	w10, w11
  423ba4:	b.ne	423bd4 <wcrtomb@plt+0x1f094>  // b.any
  423ba8:	cmp	w10, #0x1
  423bac:	b.eq	423bc0 <wcrtomb@plt+0x1f080>  // b.none
  423bb0:	ldr	x0, [x8, #8]
  423bb4:	ldr	x1, [x9, #8]
  423bb8:	bl	404660 <strcmp@plt>
  423bbc:	cbnz	w0, 423be4 <wcrtomb@plt+0x1f0a4>
  423bc0:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  423bc4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x164b0>
  423bc8:	add	x0, x0, #0xa91
  423bcc:	add	x1, x1, #0xa32
  423bd0:	bl	426b74 <wcrtomb@plt+0x22034>
  423bd4:	cmp	w10, #0x1
  423bd8:	b.ne	423be4 <wcrtomb@plt+0x1f0a4>  // b.any
  423bdc:	str	xzr, [x20, #3888]
  423be0:	b	423be8 <wcrtomb@plt+0x1f0a8>
  423be4:	strb	wzr, [x21, #3696]
  423be8:	ldr	w8, [x25, #3916]
  423bec:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423bf0:	cmp	w8, #0x9
  423bf4:	b.hi	423d0c <wcrtomb@plt+0x1f1cc>  // b.pmore
  423bf8:	mov	w9, #0x1                   	// #1
  423bfc:	lsl	w9, w9, w8
  423c00:	mov	w10, #0x2e0                 	// #736
  423c04:	tst	w9, w10
  423c08:	b.ne	423c5c <wcrtomb@plt+0x1f11c>  // b.any
  423c0c:	mov	w10, #0x106                 	// #262
  423c10:	tst	w9, w10
  423c14:	b.eq	423cbc <wcrtomb@plt+0x1f17c>  // b.none
  423c18:	ldr	x8, [x23, #3904]
  423c1c:	ldr	x21, [x27, #3744]
  423c20:	cmp	x8, #0x1
  423c24:	str	x21, [x20, #3792]
  423c28:	b.lt	423d0c <wcrtomb@plt+0x1f1cc>  // b.tstop
  423c2c:	adrp	x19, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  423c30:	add	x22, x21, x8, lsl #3
  423c34:	add	x19, x19, #0x85
  423c38:	ldr	x0, [x21]
  423c3c:	mov	x1, x19
  423c40:	bl	404660 <strcmp@plt>
  423c44:	cbz	w0, 424024 <wcrtomb@plt+0x1f4e4>
  423c48:	add	x21, x21, #0x8
  423c4c:	cmp	x21, x22
  423c50:	str	x21, [x20, #3792]
  423c54:	b.cc	423c38 <wcrtomb@plt+0x1f0f8>  // b.lo, b.ul, b.last
  423c58:	b	423d0c <wcrtomb@plt+0x1f1cc>
  423c5c:	ldr	x8, [x23, #3904]
  423c60:	ldr	x22, [x27, #3744]
  423c64:	cmp	x8, #0x1
  423c68:	str	x22, [x20, #3792]
  423c6c:	b.lt	423d0c <wcrtomb@plt+0x1f1cc>  // b.tstop
  423c70:	adrp	x19, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  423c74:	adrp	x26, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  423c78:	add	x23, x22, x8, lsl #3
  423c7c:	add	x19, x19, #0x85
  423c80:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423c84:	add	x26, x26, #0xacf
  423c88:	b	423c9c <wcrtomb@plt+0x1f15c>
  423c8c:	add	x22, x22, #0x8
  423c90:	cmp	x22, x23
  423c94:	str	x22, [x20, #3792]
  423c98:	b.cs	423d0c <wcrtomb@plt+0x1f1cc>  // b.hs, b.nlast
  423c9c:	ldr	x0, [x22]
  423ca0:	mov	x1, x19
  423ca4:	bl	404660 <strcmp@plt>
  423ca8:	cbnz	w0, 423c8c <wcrtomb@plt+0x1f14c>
  423cac:	ldr	x8, [x21, #2016]
  423cb0:	cbnz	x8, 42405c <wcrtomb@plt+0x1f51c>
  423cb4:	str	x26, [x21, #2016]
  423cb8:	b	423c8c <wcrtomb@plt+0x1f14c>
  423cbc:	cmp	w8, #0x3
  423cc0:	b.ne	423d0c <wcrtomb@plt+0x1f1cc>  // b.any
  423cc4:	bl	41c8f0 <wcrtomb@plt+0x17db0>
  423cc8:	tbz	w0, #0, 42434c <wcrtomb@plt+0x1f80c>
  423ccc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423cd0:	ldr	w8, [x8, #2080]
  423cd4:	cbz	w8, 423d0c <wcrtomb@plt+0x1f1cc>
  423cd8:	ldr	x8, [x23, #3904]
  423cdc:	cbz	x8, 423d0c <wcrtomb@plt+0x1f1cc>
  423ce0:	ldr	x8, [x27, #3744]
  423ce4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  423ce8:	add	x1, x1, #0x85
  423cec:	ldr	x19, [x8]
  423cf0:	mov	x0, x19
  423cf4:	bl	404660 <strcmp@plt>
  423cf8:	cbz	w0, 423d0c <wcrtomb@plt+0x1f1cc>
  423cfc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423d00:	ldr	x1, [x8, #3960]
  423d04:	mov	x0, x19
  423d08:	bl	421434 <wcrtomb@plt+0x1c8f4>
  423d0c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423d10:	ldr	x0, [x19, #4016]
  423d14:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423d18:	cbz	x0, 423d38 <wcrtomb@plt+0x1f1f8>
  423d1c:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  423d20:	add	x1, x1, #0x3f8
  423d24:	bl	404220 <fopen@plt>
  423d28:	str	x0, [x22, #2888]
  423d2c:	cbnz	x0, 423d60 <wcrtomb@plt+0x1f220>
  423d30:	ldr	x0, [x19, #4016]
  423d34:	bl	42a8f0 <wcrtomb@plt+0x25db0>
  423d38:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423d3c:	ldrb	w8, [x8, #3681]
  423d40:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423d44:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423d48:	add	x9, x9, #0x60
  423d4c:	add	x10, x10, #0x68
  423d50:	cmp	w8, #0x0
  423d54:	csel	x8, x10, x9, eq  // eq = none
  423d58:	ldr	x8, [x8]
  423d5c:	str	x8, [x22, #2888]
  423d60:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423d64:	ldr	x8, [x27, #3744]
  423d68:	ldr	x0, [x9, #2064]
  423d6c:	str	x8, [x20, #3792]
  423d70:	cbz	x0, 423d80 <wcrtomb@plt+0x1f240>
  423d74:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  423d78:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423d7c:	str	x0, [x8, #2480]
  423d80:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423d84:	ldrb	w8, [x19, #3813]
  423d88:	cbz	w8, 423dc8 <wcrtomb@plt+0x1f288>
  423d8c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423d90:	ldr	x1, [x8, #2072]
  423d94:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  423d98:	add	x0, x0, #0xafe
  423d9c:	bl	438f88 <argp_parse@@Base+0x16dc>
  423da0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423da4:	str	w0, [x8, #3784]
  423da8:	cbz	w0, 423dc4 <wcrtomb@plt+0x1f284>
  423dac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423db0:	ldrb	w8, [x8, #3681]
  423db4:	cbnz	w8, 423dc4 <wcrtomb@plt+0x1f284>
  423db8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423dbc:	ldr	x8, [x8, #3672]
  423dc0:	cbz	x8, 423dc8 <wcrtomb@plt+0x1f288>
  423dc4:	strb	wzr, [x19, #3813]
  423dc8:	bl	408c04 <wcrtomb@plt+0x40c4>
  423dcc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423dd0:	ldr	x23, [x8, #2048]
  423dd4:	cbz	x23, 423e68 <wcrtomb@plt+0x1f328>
  423dd8:	adrp	x19, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  423ddc:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423de0:	add	x19, x19, #0xb7d
  423de4:	b	423e24 <wcrtomb@plt+0x1f2e4>
  423de8:	mov	w2, #0x5                   	// #5
  423dec:	mov	x0, xzr
  423df0:	mov	x1, x19
  423df4:	bl	404900 <dcgettext@plt>
  423df8:	ldp	x3, x4, [x20, #24]
  423dfc:	mov	x2, x0
  423e00:	mov	w0, wzr
  423e04:	mov	w1, wzr
  423e08:	mov	x5, x21
  423e0c:	bl	403fa0 <error@plt>
  423e10:	ldr	x0, [x20, #32]
  423e14:	bl	404700 <free@plt>
  423e18:	mov	x0, x20
  423e1c:	bl	404700 <free@plt>
  423e20:	cbz	x23, 423e68 <wcrtomb@plt+0x1f328>
  423e24:	mov	x20, x23
  423e28:	ldr	w8, [x26, #3700]
  423e2c:	ldr	x23, [x23]
  423e30:	cbz	w8, 423e10 <wcrtomb@plt+0x1f2d0>
  423e34:	ldp	x0, x1, [x20, #8]
  423e38:	mov	w2, #0x1                   	// #1
  423e3c:	bl	41980c <wcrtomb@plt+0x14ccc>
  423e40:	ldr	x8, [x20, #32]
  423e44:	mov	x21, x0
  423e48:	mov	x1, x21
  423e4c:	mov	x0, x8
  423e50:	bl	404660 <strcmp@plt>
  423e54:	cbz	w0, 423e10 <wcrtomb@plt+0x1f2d0>
  423e58:	ldr	x8, [x24, #4064]
  423e5c:	cbz	x8, 423de8 <wcrtomb@plt+0x1f2a8>
  423e60:	blr	x8
  423e64:	b	423de8 <wcrtomb@plt+0x1f2a8>
  423e68:	bl	41c988 <wcrtomb@plt+0x17e48>
  423e6c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423e70:	ldr	x8, [x19, #3720]
  423e74:	cbz	x8, 423e7c <wcrtomb@plt+0x1f33c>
  423e78:	bl	405b10 <wcrtomb@plt+0xfd0>
  423e7c:	ldr	w8, [x25, #3916]
  423e80:	cmp	w8, #0x9
  423e84:	b.hi	423ef8 <wcrtomb@plt+0x1f3b8>  // b.pmore
  423e88:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0x174b0>
  423e8c:	add	x9, x9, #0xc60
  423e90:	adr	x10, 423ea0 <wcrtomb@plt+0x1f360>
  423e94:	ldrb	w11, [x9, x8]
  423e98:	add	x10, x10, x11, lsl #2
  423e9c:	br	x10
  423ea0:	bl	4282bc <wcrtomb@plt+0x2377c>
  423ea4:	b	423ef8 <wcrtomb@plt+0x1f3b8>
  423ea8:	adrp	x0, 418000 <wcrtomb@plt+0x134c0>
  423eac:	add	x0, x0, #0xe90
  423eb0:	bl	418000 <wcrtomb@plt+0x134c0>
  423eb4:	b	423ef8 <wcrtomb@plt+0x1f3b8>
  423eb8:	bl	4095f4 <wcrtomb@plt+0x4ab4>
  423ebc:	adrp	x0, 409000 <wcrtomb@plt+0x44c0>
  423ec0:	add	x0, x0, #0x70c
  423ec4:	bl	418000 <wcrtomb@plt+0x134c0>
  423ec8:	b	423ef8 <wcrtomb@plt+0x1f3b8>
  423ecc:	bl	40f158 <wcrtomb@plt+0xa618>
  423ed0:	adrp	x0, 40f000 <wcrtomb@plt+0xa4c0>
  423ed4:	add	x0, x0, #0x294
  423ed8:	bl	418000 <wcrtomb@plt+0x134c0>
  423edc:	bl	40f790 <wcrtomb@plt+0xac50>
  423ee0:	b	423ef8 <wcrtomb@plt+0x1f3b8>
  423ee4:	bl	41a214 <wcrtomb@plt+0x156d4>
  423ee8:	b	423ef8 <wcrtomb@plt+0x1f3b8>
  423eec:	bl	40dc58 <wcrtomb@plt+0x9118>
  423ef0:	b	423ef8 <wcrtomb@plt+0x1f3b8>
  423ef4:	bl	40bdd0 <wcrtomb@plt+0x7290>
  423ef8:	bl	408fe4 <wcrtomb@plt+0x44a4>
  423efc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423f00:	ldrb	w8, [x8, #3753]
  423f04:	cbz	w8, 423f0c <wcrtomb@plt+0x1f3cc>
  423f08:	bl	4052d4 <wcrtomb@plt+0x794>
  423f0c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423f10:	ldrb	w8, [x8, #2096]
  423f14:	cmp	w8, #0x1
  423f18:	b.ne	423f20 <wcrtomb@plt+0x1f3e0>  // b.any
  423f1c:	bl	40c1fc <wcrtomb@plt+0x76bc>
  423f20:	ldr	x8, [x19, #3720]
  423f24:	cbz	x8, 423f2c <wcrtomb@plt+0x1f3ec>
  423f28:	bl	405c14 <wcrtomb@plt+0x10d4>
  423f2c:	ldr	x0, [x27, #3744]
  423f30:	bl	404700 <free@plt>
  423f34:	bl	4293dc <wcrtomb@plt+0x2489c>
  423f38:	bl	41c9d8 <wcrtomb@plt+0x17e98>
  423f3c:	ldr	w8, [x28, #2416]
  423f40:	cmp	w8, #0x2
  423f44:	b.ne	423f6c <wcrtomb@plt+0x1f42c>  // b.any
  423f48:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  423f4c:	add	x1, x1, #0x4cf
  423f50:	mov	w2, #0x5                   	// #5
  423f54:	mov	x0, xzr
  423f58:	bl	404900 <dcgettext@plt>
  423f5c:	mov	x2, x0
  423f60:	mov	w0, wzr
  423f64:	mov	w1, wzr
  423f68:	bl	403fa0 <error@plt>
  423f6c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423f70:	ldr	x8, [x22, #2888]
  423f74:	ldr	x9, [x9, #104]
  423f78:	cmp	x8, x9
  423f7c:	b.eq	423fb0 <wcrtomb@plt+0x1f470>  // b.none
  423f80:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  423f84:	ldr	x0, [x8, #96]
  423f88:	ldrb	w8, [x0]
  423f8c:	tbnz	w8, #5, 423f98 <wcrtomb@plt+0x1f458>
  423f90:	bl	4041e0 <fclose@plt>
  423f94:	cbz	w0, 423fb4 <wcrtomb@plt+0x1f474>
  423f98:	ldr	w8, [x28, #2416]
  423f9c:	cmp	w8, #0x1
  423fa0:	b.gt	423fb4 <wcrtomb@plt+0x1f474>
  423fa4:	mov	w8, #0x2                   	// #2
  423fa8:	str	w8, [x28, #2416]
  423fac:	b	423fb4 <wcrtomb@plt+0x1f474>
  423fb0:	bl	439028 <argp_parse@@Base+0x177c>
  423fb4:	ldr	w0, [x28, #2416]
  423fb8:	ldp	x20, x19, [sp, #400]
  423fbc:	ldp	x22, x21, [sp, #384]
  423fc0:	ldp	x24, x23, [sp, #368]
  423fc4:	ldp	x26, x25, [sp, #352]
  423fc8:	ldp	x28, x27, [sp, #336]
  423fcc:	ldp	x29, x30, [sp, #320]
  423fd0:	add	sp, sp, #0x1a0
  423fd4:	ret
  423fd8:	lsr	x9, x9, #3
  423fdc:	add	x10, x9, #0x1
  423fe0:	and	x11, x10, #0x3ffffffffffffffc
  423fe4:	lsl	x13, x11, #3
  423fe8:	add	x12, x26, #0x10
  423fec:	add	x9, x23, x13
  423ff0:	add	x26, x26, x13
  423ff4:	add	x13, x23, #0x10
  423ff8:	mov	x14, x11
  423ffc:	ldp	q0, q1, [x13, #-16]
  424000:	subs	x14, x14, #0x4
  424004:	add	x13, x13, #0x20
  424008:	stp	q0, q1, [x12, #-16]
  42400c:	add	x12, x12, #0x20
  424010:	b.ne	423ffc <wcrtomb@plt+0x1f4bc>  // b.any
  424014:	cmp	x10, x11
  424018:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42401c:	b.ne	4234f0 <wcrtomb@plt+0x1e9b0>  // b.any
  424020:	b	42350c <wcrtomb@plt+0x1e9cc>
  424024:	ldr	x8, [x24, #4064]
  424028:	cbz	x8, 424030 <wcrtomb@plt+0x1f4f0>
  42402c:	blr	x8
  424030:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424034:	add	x1, x1, #0xad2
  424038:	mov	w2, #0x5                   	// #5
  42403c:	mov	x0, xzr
  424040:	bl	404900 <dcgettext@plt>
  424044:	mov	x2, x0
  424048:	mov	w0, wzr
  42404c:	mov	w1, wzr
  424050:	bl	403fa0 <error@plt>
  424054:	mov	w0, #0x2                   	// #2
  424058:	bl	422db4 <wcrtomb@plt+0x1e274>
  42405c:	ldr	x8, [x24, #4064]
  424060:	cbz	x8, 424068 <wcrtomb@plt+0x1f528>
  424064:	blr	x8
  424068:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  42406c:	add	x1, x1, #0x3c8
  424070:	mov	w2, #0x5                   	// #5
  424074:	mov	x0, xzr
  424078:	bl	404900 <dcgettext@plt>
  42407c:	ldr	x3, [x21, #2016]
  424080:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424084:	mov	x2, x0
  424088:	add	x4, x4, #0xacf
  42408c:	mov	w0, wzr
  424090:	mov	w1, wzr
  424094:	bl	403fa0 <error@plt>
  424098:	mov	w0, #0x2                   	// #2
  42409c:	bl	422db4 <wcrtomb@plt+0x1e274>
  4240a0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4240a4:	ldr	x8, [x8, #4064]
  4240a8:	cbz	x8, 4240b0 <wcrtomb@plt+0x1f570>
  4240ac:	blr	x8
  4240b0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4240b4:	add	x1, x1, #0x711
  4240b8:	mov	w2, #0x5                   	// #5
  4240bc:	mov	x0, xzr
  4240c0:	bl	404900 <dcgettext@plt>
  4240c4:	ldrb	w3, [x22]
  4240c8:	mov	x2, x0
  4240cc:	mov	w0, wzr
  4240d0:	mov	w1, wzr
  4240d4:	bl	403fa0 <error@plt>
  4240d8:	mov	w0, #0x2                   	// #2
  4240dc:	bl	422db4 <wcrtomb@plt+0x1e274>
  4240e0:	mov	w0, #0x2                   	// #2
  4240e4:	bl	403f70 <exit@plt>
  4240e8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4240ec:	ldr	x8, [x8, #4064]
  4240f0:	cbz	x8, 4240f8 <wcrtomb@plt+0x1f5b8>
  4240f4:	blr	x8
  4240f8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4240fc:	add	x1, x1, #0x8e5
  424100:	b	424038 <wcrtomb@plt+0x1f4f8>
  424104:	ldr	x8, [x24, #4064]
  424108:	cbz	x8, 424110 <wcrtomb@plt+0x1f5d0>
  42410c:	blr	x8
  424110:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  424114:	add	x1, x1, #0x482
  424118:	b	424038 <wcrtomb@plt+0x1f4f8>
  42411c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424120:	ldr	x8, [x8, #4064]
  424124:	cbz	x8, 42412c <wcrtomb@plt+0x1f5ec>
  424128:	blr	x8
  42412c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424130:	add	x1, x1, #0xb2d
  424134:	mov	w2, #0x5                   	// #5
  424138:	mov	x0, xzr
  42413c:	bl	404900 <dcgettext@plt>
  424140:	mov	x19, x0
  424144:	add	x0, sp, #0x50
  424148:	bl	42d5dc <wcrtomb@plt+0x28a9c>
  42414c:	mov	x3, x0
  424150:	mov	w0, wzr
  424154:	mov	w1, wzr
  424158:	mov	x2, x19
  42415c:	bl	403fa0 <error@plt>
  424160:	bl	40e96c <wcrtomb@plt+0x9e2c>
  424164:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424168:	ldr	x8, [x8, #4064]
  42416c:	cbz	x8, 424174 <wcrtomb@plt+0x1f634>
  424170:	blr	x8
  424174:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424178:	add	x1, x1, #0x737
  42417c:	b	424038 <wcrtomb@plt+0x1f4f8>
  424180:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424184:	ldr	x8, [x8, #4064]
  424188:	cbz	x8, 424190 <wcrtomb@plt+0x1f650>
  42418c:	blr	x8
  424190:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424194:	add	x1, x1, #0x843
  424198:	b	424038 <wcrtomb@plt+0x1f4f8>
  42419c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4241a0:	ldr	x8, [x8, #4064]
  4241a4:	cbz	x8, 4241ac <wcrtomb@plt+0x1f66c>
  4241a8:	blr	x8
  4241ac:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4241b0:	add	x1, x1, #0x867
  4241b4:	b	424038 <wcrtomb@plt+0x1f4f8>
  4241b8:	ldr	x8, [x24, #4064]
  4241bc:	cbz	x8, 4241c4 <wcrtomb@plt+0x1f684>
  4241c0:	blr	x8
  4241c4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4241c8:	add	x1, x1, #0xa63
  4241cc:	b	424038 <wcrtomb@plt+0x1f4f8>
  4241d0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4241d4:	ldr	x8, [x8, #4064]
  4241d8:	cbz	x8, 4241e0 <wcrtomb@plt+0x1f6a0>
  4241dc:	blr	x8
  4241e0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4241e4:	add	x1, x1, #0xb4a
  4241e8:	b	424038 <wcrtomb@plt+0x1f4f8>
  4241ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4241f0:	ldr	x8, [x8, #4064]
  4241f4:	cbz	x8, 4241fc <wcrtomb@plt+0x1f6bc>
  4241f8:	blr	x8
  4241fc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424200:	add	x1, x1, #0x918
  424204:	b	424038 <wcrtomb@plt+0x1f4f8>
  424208:	ldr	x8, [x24, #4064]
  42420c:	cbz	x8, 424214 <wcrtomb@plt+0x1f6d4>
  424210:	blr	x8
  424214:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424218:	add	x1, x1, #0x948
  42421c:	b	424038 <wcrtomb@plt+0x1f4f8>
  424220:	ldr	x8, [x24, #4064]
  424224:	cbz	x8, 42422c <wcrtomb@plt+0x1f6ec>
  424228:	blr	x8
  42422c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424230:	add	x1, x1, #0x972
  424234:	b	424038 <wcrtomb@plt+0x1f4f8>
  424238:	ldr	x8, [x24, #4064]
  42423c:	cbz	x8, 424244 <wcrtomb@plt+0x1f704>
  424240:	blr	x8
  424244:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424248:	add	x1, x1, #0x99f
  42424c:	b	424038 <wcrtomb@plt+0x1f4f8>
  424250:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424254:	ldr	x8, [x8, #4064]
  424258:	cbz	x8, 424260 <wcrtomb@plt+0x1f720>
  42425c:	blr	x8
  424260:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424264:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424268:	add	x1, x1, #0x7e0
  42426c:	add	x2, x2, #0x811
  424270:	mov	w4, #0x5                   	// #5
  424274:	mov	x0, xzr
  424278:	mov	x3, x19
  42427c:	bl	404820 <dcngettext@plt>
  424280:	ldr	x8, [x26, #3704]
  424284:	mov	x20, x0
  424288:	mov	x0, x8
  42428c:	bl	444778 <argp_parse@@Base+0xcecc>
  424290:	mov	x3, x0
  424294:	mov	w0, wzr
  424298:	mov	w1, wzr
  42429c:	mov	x2, x20
  4242a0:	mov	x4, x19
  4242a4:	b	424094 <wcrtomb@plt+0x1f554>
  4242a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4242ac:	ldr	x8, [x8, #4064]
  4242b0:	cbz	x8, 4242b8 <wcrtomb@plt+0x1f778>
  4242b4:	blr	x8
  4242b8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4242bc:	add	x1, x1, #0x892
  4242c0:	b	424038 <wcrtomb@plt+0x1f4f8>
  4242c4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4242c8:	ldr	x8, [x8, #4064]
  4242cc:	cbz	x8, 4242d4 <wcrtomb@plt+0x1f794>
  4242d0:	blr	x8
  4242d4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4242d8:	add	x1, x1, #0x86f
  4242dc:	b	424038 <wcrtomb@plt+0x1f4f8>
  4242e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4242e4:	ldr	x8, [x8, #4064]
  4242e8:	cbz	x8, 4242f0 <wcrtomb@plt+0x1f7b0>
  4242ec:	blr	x8
  4242f0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4242f4:	add	x1, x1, #0x8be
  4242f8:	b	424038 <wcrtomb@plt+0x1f4f8>
  4242fc:	bl	422f8c <wcrtomb@plt+0x1e44c>
  424300:	mov	x1, x0
  424304:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424308:	add	x0, x0, #0x767
  42430c:	bl	426b74 <wcrtomb@plt+0x22034>
  424310:	bl	422f8c <wcrtomb@plt+0x1e44c>
  424314:	mov	x1, x0
  424318:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  42431c:	add	x0, x0, #0x889
  424320:	bl	426b74 <wcrtomb@plt+0x22034>
  424324:	bl	422f8c <wcrtomb@plt+0x1e44c>
  424328:	mov	x1, x0
  42432c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424330:	add	x0, x0, #0x9cb
  424334:	bl	426b74 <wcrtomb@plt+0x22034>
  424338:	bl	422f8c <wcrtomb@plt+0x1e44c>
  42433c:	mov	x1, x0
  424340:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424344:	add	x0, x0, #0x9db
  424348:	bl	426b74 <wcrtomb@plt+0x22034>
  42434c:	ldr	x8, [x24, #4064]
  424350:	cbz	x8, 424358 <wcrtomb@plt+0x1f818>
  424354:	blr	x8
  424358:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  42435c:	add	x1, x1, #0xaa2
  424360:	b	424038 <wcrtomb@plt+0x1f4f8>
  424364:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424368:	ldr	w9, [x8, #2416]
  42436c:	cmp	w9, w0
  424370:	b.ge	424378 <wcrtomb@plt+0x1f838>  // b.tcont
  424374:	str	w0, [x8, #2416]
  424378:	ret
  42437c:	movi	v0.2d, #0x0
  424380:	str	xzr, [x0, #416]
  424384:	stp	q0, q0, [x0, #384]
  424388:	stp	q0, q0, [x0, #352]
  42438c:	stp	q0, q0, [x0, #320]
  424390:	stp	q0, q0, [x0, #288]
  424394:	stp	q0, q0, [x0, #256]
  424398:	stp	q0, q0, [x0, #224]
  42439c:	stp	q0, q0, [x0, #192]
  4243a0:	stp	q0, q0, [x0, #160]
  4243a4:	stp	q0, q0, [x0, #128]
  4243a8:	stp	q0, q0, [x0, #96]
  4243ac:	stp	q0, q0, [x0, #64]
  4243b0:	stp	q0, q0, [x0, #32]
  4243b4:	stp	q0, q0, [x0]
  4243b8:	ret
  4243bc:	stp	x29, x30, [sp, #-32]!
  4243c0:	str	x19, [sp, #16]
  4243c4:	mov	x19, x0
  4243c8:	ldr	x0, [x0, #400]
  4243cc:	mov	x29, sp
  4243d0:	cbz	x0, 4243dc <wcrtomb@plt+0x1f89c>
  4243d4:	bl	4044f0 <closedir@plt>
  4243d8:	b	4243ec <wcrtomb@plt+0x1f8ac>
  4243dc:	ldr	w0, [x19, #408]
  4243e0:	cmp	w0, #0x0
  4243e4:	b.le	424408 <wcrtomb@plt+0x1f8c8>
  4243e8:	bl	404520 <close@plt>
  4243ec:	str	xzr, [x19, #400]
  4243f0:	str	wzr, [x19, #408]
  4243f4:	cbz	w0, 424410 <wcrtomb@plt+0x1f8d0>
  4243f8:	ldr	x0, [x19]
  4243fc:	bl	41c314 <wcrtomb@plt+0x177d4>
  424400:	mov	w0, wzr
  424404:	b	424414 <wcrtomb@plt+0x1f8d4>
  424408:	str	xzr, [x19, #400]
  42440c:	str	wzr, [x19, #408]
  424410:	mov	w0, #0x1                   	// #1
  424414:	ldr	x19, [sp, #16]
  424418:	ldp	x29, x30, [sp], #32
  42441c:	ret
  424420:	stp	x29, x30, [sp, #-32]!
  424424:	str	x19, [sp, #16]
  424428:	mov	x19, x0
  42442c:	ldr	x0, [x0, #400]
  424430:	mov	x29, sp
  424434:	cbz	x0, 424440 <wcrtomb@plt+0x1f900>
  424438:	bl	4044f0 <closedir@plt>
  42443c:	b	424450 <wcrtomb@plt+0x1f910>
  424440:	ldr	w0, [x19, #408]
  424444:	cmp	w0, #0x0
  424448:	b.le	424468 <wcrtomb@plt+0x1f928>
  42444c:	bl	404520 <close@plt>
  424450:	str	xzr, [x19, #400]
  424454:	str	wzr, [x19, #408]
  424458:	cbz	w0, 424470 <wcrtomb@plt+0x1f930>
  42445c:	ldr	x0, [x19]
  424460:	bl	41c314 <wcrtomb@plt+0x177d4>
  424464:	b	424470 <wcrtomb@plt+0x1f930>
  424468:	str	xzr, [x19, #400]
  42446c:	str	wzr, [x19, #408]
  424470:	ldp	x1, x0, [x19, #328]
  424474:	bl	412330 <wcrtomb@plt+0xd7f0>
  424478:	ldr	x0, [x19]
  42447c:	bl	404700 <free@plt>
  424480:	ldr	x0, [x19, #8]
  424484:	bl	404700 <free@plt>
  424488:	ldr	x0, [x19, #24]
  42448c:	bl	404700 <free@plt>
  424490:	ldr	x0, [x19, #32]
  424494:	bl	404700 <free@plt>
  424498:	ldr	x0, [x19, #40]
  42449c:	bl	404700 <free@plt>
  4244a0:	ldr	x0, [x19, #48]
  4244a4:	bl	404700 <free@plt>
  4244a8:	ldr	x0, [x19, #56]
  4244ac:	bl	404700 <free@plt>
  4244b0:	ldr	x0, [x19, #72]
  4244b4:	bl	404700 <free@plt>
  4244b8:	ldr	x0, [x19, #304]
  4244bc:	bl	404700 <free@plt>
  4244c0:	ldr	x0, [x19, #384]
  4244c4:	bl	404700 <free@plt>
  4244c8:	add	x0, x19, #0x158
  4244cc:	bl	412090 <wcrtomb@plt+0xd550>
  4244d0:	mov	x0, x19
  4244d4:	bl	40ec54 <wcrtomb@plt+0xa114>
  4244d8:	movi	v0.2d, #0x0
  4244dc:	stp	q0, q0, [x19, #384]
  4244e0:	stp	q0, q0, [x19, #352]
  4244e4:	stp	q0, q0, [x19, #320]
  4244e8:	stp	q0, q0, [x19, #288]
  4244ec:	stp	q0, q0, [x19, #256]
  4244f0:	stp	q0, q0, [x19, #224]
  4244f4:	stp	q0, q0, [x19, #192]
  4244f8:	stp	q0, q0, [x19, #160]
  4244fc:	stp	q0, q0, [x19, #128]
  424500:	stp	q0, q0, [x19, #96]
  424504:	stp	q0, q0, [x19, #64]
  424508:	stp	q0, q0, [x19, #32]
  42450c:	stp	q0, q0, [x19]
  424510:	str	xzr, [x19, #416]
  424514:	ldr	x19, [sp, #16]
  424518:	ldp	x29, x30, [sp], #32
  42451c:	ret
  424520:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424524:	ldr	w8, [x8, #3008]
  424528:	cmp	w8, #0x4
  42452c:	csel	x8, x3, xzr, eq  // eq = none
  424530:	csel	x9, x1, xzr, eq  // eq = none
  424534:	cmp	x0, x2
  424538:	b.ge	424544 <wcrtomb@plt+0x1fa04>  // b.tcont
  42453c:	mov	w0, #0xffffffff            	// #-1
  424540:	ret
  424544:	b.le	424550 <wcrtomb@plt+0x1fa10>
  424548:	mov	w0, #0x1                   	// #1
  42454c:	ret
  424550:	sub	w0, w9, w8
  424554:	ret
  424558:	sub	sp, sp, #0xf0
  42455c:	stp	x29, x30, [sp, #144]
  424560:	stp	x28, x27, [sp, #160]
  424564:	stp	x26, x25, [sp, #176]
  424568:	stp	x24, x23, [sp, #192]
  42456c:	stp	x22, x21, [sp, #208]
  424570:	stp	x20, x19, [sp, #224]
  424574:	ldr	x20, [x2, #40]
  424578:	mov	w21, w0
  42457c:	cmp	w0, #0x14f
  424580:	mov	w0, #0x7                   	// #7
  424584:	add	x29, sp, #0x90
  424588:	b.hi	4256c4 <wcrtomb@plt+0x20b84>  // b.pmore
  42458c:	adrp	x9, 45e000 <_obstack_memory_used@@Base+0x174b0>
  424590:	mov	w8, w21
  424594:	add	x9, x9, #0xc6a
  424598:	adr	x10, 4245ac <wcrtomb@plt+0x1fa6c>
  42459c:	ldrh	w11, [x9, x8, lsl #1]
  4245a0:	add	x10, x10, x11, lsl #2
  4245a4:	mov	x19, x1
  4245a8:	br	x10
  4245ac:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  4245b0:	add	x0, x0, #0x824
  4245b4:	bl	4268d4 <wcrtomb@plt+0x21d94>
  4245b8:	cmp	w21, #0x14e
  4245bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4245c0:	mov	w9, #0x1                   	// #1
  4245c4:	cset	w1, eq  // eq = none
  4245c8:	mov	x0, x19
  4245cc:	str	w9, [x8, #3712]
  4245d0:	bl	429334 <wcrtomb@plt+0x247f4>
  4245d4:	b	425a50 <wcrtomb@plt+0x20f10>
  4245d8:	mov	x0, x19
  4245dc:	bl	426bfc <wcrtomb@plt+0x220bc>
  4245e0:	b	425a50 <wcrtomb@plt+0x20f10>
  4245e4:	adrp	x3, 445000 <argp_parse@@Base+0xd754>
  4245e8:	adrp	x4, 404000 <sigprocmask@plt>
  4245ec:	add	x3, x3, #0x9e8
  4245f0:	add	x4, x4, #0x700
  4245f4:	add	x0, sp, #0x38
  4245f8:	mov	x1, xzr
  4245fc:	mov	x2, xzr
  424600:	bl	4467e8 <_obstack_begin@@Base>
  424604:	ldrb	w8, [x19]
  424608:	cbz	w8, 424888 <wcrtomb@plt+0x1fd48>
  42460c:	adrp	x21, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  424610:	adrp	x22, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424614:	add	x21, x21, #0xf0
  424618:	add	x22, x22, #0x633
  42461c:	b	424634 <wcrtomb@plt+0x1faf4>
  424620:	add	x10, x9, #0x1
  424624:	str	x10, [sp, #80]
  424628:	strb	w8, [x9]
  42462c:	ldrb	w8, [x19, #1]!
  424630:	cbz	w8, 424888 <wcrtomb@plt+0x1fd48>
  424634:	mov	x0, x19
  424638:	mov	x1, x21
  42463c:	bl	4049d0 <strcspn@plt>
  424640:	mov	x23, x0
  424644:	mov	w1, #0x3d                  	// #61
  424648:	mov	x0, x19
  42464c:	mov	x2, x23
  424650:	bl	404890 <memchr@plt>
  424654:	cbz	x0, 424774 <wcrtomb@plt+0x1fc34>
  424658:	mov	x26, x0
  42465c:	ldp	x0, x8, [sp, #80]
  424660:	sub	x9, x26, x19
  424664:	add	x24, x9, #0x1
  424668:	sub	x8, x8, x0
  42466c:	cmp	x8, x24
  424670:	b.cs	424684 <wcrtomb@plt+0x1fb44>  // b.hs, b.nlast
  424674:	add	x0, sp, #0x38
  424678:	mov	x1, x24
  42467c:	bl	44693c <_obstack_newchunk@@Base>
  424680:	ldr	x0, [sp, #80]
  424684:	mov	x1, x19
  424688:	mov	x2, x24
  42468c:	bl	403ec0 <memcpy@plt>
  424690:	ldr	x8, [sp, #80]
  424694:	mov	x25, x26
  424698:	add	x27, x8, x24
  42469c:	str	x27, [sp, #80]
  4246a0:	ldrb	w28, [x25, #1]!
  4246a4:	sub	x24, x23, x24
  4246a8:	cbz	x28, 4247c0 <wcrtomb@plt+0x1fc80>
  4246ac:	bl	404690 <__ctype_b_loc@plt>
  4246b0:	ldr	x8, [x0]
  4246b4:	ldrh	w9, [x8, x28, lsl #1]
  4246b8:	tbz	w9, #13, 4246f0 <wcrtomb@plt+0x1fbb0>
  4246bc:	mov	x9, xzr
  4246c0:	add	x10, x26, x9
  4246c4:	ldrb	w28, [x10, #2]
  4246c8:	cbz	x28, 4247ac <wcrtomb@plt+0x1fc6c>
  4246cc:	ldrh	w10, [x8, x28, lsl #1]
  4246d0:	add	x9, x9, #0x1
  4246d4:	tbnz	w10, #13, 4246c0 <wcrtomb@plt+0x1fb80>
  4246d8:	add	x8, x23, x19
  4246dc:	mvn	x10, x9
  4246e0:	sub	x8, x8, x26
  4246e4:	add	x26, x26, x9
  4246e8:	add	x24, x10, x8
  4246ec:	add	x25, x26, #0x1
  4246f0:	cmp	w28, #0x7b
  4246f4:	b.ne	4247c0 <wcrtomb@plt+0x1fc80>  // b.any
  4246f8:	ldrb	w8, [x26, x24]
  4246fc:	cmp	w8, #0x7d
  424700:	b.ne	4247c0 <wcrtomb@plt+0x1fc80>  // b.any
  424704:	mov	x0, x24
  424708:	bl	4459e8 <argp_parse@@Base+0xe13c>
  42470c:	add	x1, x26, #0x2
  424710:	sub	x26, x24, #0x2
  424714:	mov	x2, x26
  424718:	mov	x27, x0
  42471c:	bl	403ec0 <memcpy@plt>
  424720:	add	x3, sp, #0x28
  424724:	mov	x0, x20
  424728:	mov	x1, x22
  42472c:	mov	x2, x27
  424730:	strb	wzr, [x27, x26]
  424734:	bl	42676c <wcrtomb@plt+0x21c2c>
  424738:	cbz	w0, 42482c <wcrtomb@plt+0x1fcec>
  42473c:	ldp	x0, x8, [sp, #80]
  424740:	sub	x8, x8, x0
  424744:	cmp	x8, x24
  424748:	b.cs	42475c <wcrtomb@plt+0x1fc1c>  // b.hs, b.nlast
  42474c:	add	x0, sp, #0x38
  424750:	mov	x1, x24
  424754:	bl	44693c <_obstack_newchunk@@Base>
  424758:	ldr	x0, [sp, #80]
  42475c:	mov	x1, x25
  424760:	mov	x2, x24
  424764:	bl	403ec0 <memcpy@plt>
  424768:	ldr	x8, [sp, #80]
  42476c:	add	x8, x8, x24
  424770:	b	424878 <wcrtomb@plt+0x1fd38>
  424774:	ldp	x0, x8, [sp, #80]
  424778:	sub	x8, x8, x0
  42477c:	cmp	x8, x23
  424780:	b.cs	424794 <wcrtomb@plt+0x1fc54>  // b.hs, b.nlast
  424784:	add	x0, sp, #0x38
  424788:	mov	x1, x23
  42478c:	bl	44693c <_obstack_newchunk@@Base>
  424790:	ldr	x0, [sp, #80]
  424794:	mov	x1, x19
  424798:	mov	x2, x23
  42479c:	bl	403ec0 <memcpy@plt>
  4247a0:	ldr	x8, [sp, #80]
  4247a4:	add	x8, x8, x23
  4247a8:	b	4247f8 <wcrtomb@plt+0x1fcb8>
  4247ac:	add	x8, x23, x19
  4247b0:	sub	x8, x8, x26
  4247b4:	sub	x8, x8, x9
  4247b8:	sub	x24, x8, #0x2
  4247bc:	add	x25, x10, #0x2
  4247c0:	ldr	x8, [sp, #88]
  4247c4:	sub	x8, x8, x27
  4247c8:	cmp	x8, x24
  4247cc:	b.cs	4247e0 <wcrtomb@plt+0x1fca0>  // b.hs, b.nlast
  4247d0:	add	x0, sp, #0x38
  4247d4:	mov	x1, x24
  4247d8:	bl	44693c <_obstack_newchunk@@Base>
  4247dc:	ldr	x27, [sp, #80]
  4247e0:	mov	x0, x27
  4247e4:	mov	x1, x25
  4247e8:	mov	x2, x24
  4247ec:	bl	403ec0 <memcpy@plt>
  4247f0:	ldr	x8, [sp, #80]
  4247f4:	add	x8, x8, x24
  4247f8:	str	x8, [sp, #80]
  4247fc:	add	x19, x19, x23
  424800:	ldrb	w8, [x19]
  424804:	cbz	w8, 424888 <wcrtomb@plt+0x1fd48>
  424808:	ldp	x9, x10, [sp, #80]
  42480c:	cmp	x10, x9
  424810:	b.ne	424620 <wcrtomb@plt+0x1fae0>  // b.any
  424814:	add	x0, sp, #0x38
  424818:	mov	w1, #0x1                   	// #1
  42481c:	bl	44693c <_obstack_newchunk@@Base>
  424820:	ldrb	w8, [x19]
  424824:	ldr	x9, [sp, #80]
  424828:	b	424620 <wcrtomb@plt+0x1fae0>
  42482c:	ldp	x0, x1, [sp, #40]
  424830:	add	x2, sp, #0x8
  424834:	bl	41b22c <wcrtomb@plt+0x166ec>
  424838:	mov	x24, x0
  42483c:	bl	403f40 <strlen@plt>
  424840:	mov	x25, x0
  424844:	ldp	x0, x8, [sp, #80]
  424848:	sub	x8, x8, x0
  42484c:	cmp	x8, x25
  424850:	b.cs	424864 <wcrtomb@plt+0x1fd24>  // b.hs, b.nlast
  424854:	add	x0, sp, #0x38
  424858:	mov	x1, x25
  42485c:	bl	44693c <_obstack_newchunk@@Base>
  424860:	ldr	x0, [sp, #80]
  424864:	mov	x1, x24
  424868:	mov	x2, x25
  42486c:	bl	403ec0 <memcpy@plt>
  424870:	ldr	x8, [sp, #80]
  424874:	add	x8, x8, x25
  424878:	mov	x0, x27
  42487c:	str	x8, [sp, #80]
  424880:	bl	404700 <free@plt>
  424884:	b	4247fc <wcrtomb@plt+0x1fcbc>
  424888:	ldp	x8, x9, [sp, #80]
  42488c:	cmp	x9, x8
  424890:	b.ne	4248a4 <wcrtomb@plt+0x1fd64>  // b.any
  424894:	add	x0, sp, #0x38
  424898:	mov	w1, #0x1                   	// #1
  42489c:	bl	44693c <_obstack_newchunk@@Base>
  4248a0:	ldr	x8, [sp, #80]
  4248a4:	add	x9, x8, #0x1
  4248a8:	str	x9, [sp, #80]
  4248ac:	strb	wzr, [x8]
  4248b0:	ldp	x0, x8, [sp, #72]
  4248b4:	cmp	x8, x0
  4248b8:	b.ne	4248c8 <wcrtomb@plt+0x1fd88>  // b.any
  4248bc:	ldrb	w9, [sp, #136]
  4248c0:	orr	w9, w9, #0x2
  4248c4:	strb	w9, [sp, #136]
  4248c8:	ldr	x10, [sp, #104]
  4248cc:	ldr	x11, [sp, #64]
  4248d0:	ldr	x9, [sp, #88]
  4248d4:	add	x8, x10, x8
  4248d8:	bic	x8, x8, x10
  4248dc:	sub	x10, x8, x11
  4248e0:	sub	x11, x9, x11
  4248e4:	cmp	x10, x11
  4248e8:	str	x8, [sp, #80]
  4248ec:	b.ls	4248f8 <wcrtomb@plt+0x1fdb8>  // b.plast
  4248f0:	mov	x8, x9
  4248f4:	str	x9, [sp, #80]
  4248f8:	str	x8, [sp, #72]
  4248fc:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  424900:	mov	x19, x0
  424904:	add	x0, sp, #0x38
  424908:	mov	x1, xzr
  42490c:	bl	446ab4 <_obstack_free@@Base>
  424910:	mov	w8, #0x1                   	// #1
  424914:	mov	x0, x19
  424918:	strb	w8, [x20, #17]
  42491c:	bl	4117c0 <wcrtomb@plt+0xcc80>
  424920:	mov	x0, x19
  424924:	bl	404700 <free@plt>
  424928:	b	425a50 <wcrtomb@plt+0x20f10>
  42492c:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  424930:	ldr	x5, [x8, #4016]
  424934:	adrp	x20, 479000 <_obstack_memory_used@@Base+0x324b0>
  424938:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  42493c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x184b0>
  424940:	add	x20, x20, #0xe48
  424944:	add	x0, x0, #0x3d2
  424948:	add	x2, x2, #0x2d0
  42494c:	mov	w4, #0x4                   	// #4
  424950:	mov	x1, x19
  424954:	mov	x3, x20
  424958:	bl	434698 <wcrtomb@plt+0x2fb58>
  42495c:	mov	x8, x0
  424960:	ldr	w8, [x20, x8, lsl #2]
  424964:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424968:	mov	w0, wzr
  42496c:	str	w8, [x9, #3576]
  424970:	b	425a54 <wcrtomb@plt+0x20f14>
  424974:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  424978:	ldr	x1, [x8, #608]
  42497c:	cbz	x1, 4249a8 <wcrtomb@plt+0x1fe68>
  424980:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  424984:	mov	x20, xzr
  424988:	add	x21, x21, #0x260
  42498c:	mov	x0, x19
  424990:	bl	404660 <strcmp@plt>
  424994:	cbz	w0, 424dec <wcrtomb@plt+0x202ac>
  424998:	add	x8, x21, x20, lsl #3
  42499c:	ldr	x1, [x8, #8]
  4249a0:	add	x20, x20, #0x1
  4249a4:	cbnz	x1, 42498c <wcrtomb@plt+0x1fe4c>
  4249a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4249ac:	ldr	x8, [x8, #4064]
  4249b0:	cbz	x8, 4249b8 <wcrtomb@plt+0x1fe78>
  4249b4:	blr	x8
  4249b8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4249bc:	add	x1, x1, #0x5ea
  4249c0:	mov	w2, #0x5                   	// #5
  4249c4:	mov	x0, xzr
  4249c8:	bl	404900 <dcgettext@plt>
  4249cc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4249d0:	ldr	x4, [x8, #2504]
  4249d4:	mov	x2, x0
  4249d8:	mov	w0, wzr
  4249dc:	mov	w1, wzr
  4249e0:	mov	x3, x19
  4249e4:	bl	403fa0 <error@plt>
  4249e8:	bl	40e96c <wcrtomb@plt+0x9e2c>
  4249ec:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  4249f0:	add	x0, x0, #0x77c
  4249f4:	bl	4268d4 <wcrtomb@plt+0x21d94>
  4249f8:	b	425a50 <wcrtomb@plt+0x20f10>
  4249fc:	ldrb	w1, [x19]
  424a00:	cbz	w1, 425a50 <wcrtomb@plt+0x20f10>
  424a04:	add	x19, x19, #0x1
  424a08:	mov	x0, xzr
  424a0c:	mov	w2, wzr
  424a10:	bl	4433c4 <argp_parse@@Base+0xbb18>
  424a14:	ldrb	w1, [x19], #1
  424a18:	mov	w0, wzr
  424a1c:	cbnz	w1, 424a08 <wcrtomb@plt+0x1fec8>
  424a20:	b	425a54 <wcrtomb@plt+0x20f14>
  424a24:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424a28:	add	x1, x1, #0xe38
  424a2c:	mov	x0, x19
  424a30:	bl	426a04 <wcrtomb@plt+0x21ec4>
  424a34:	cmn	x0, #0x1
  424a38:	b.eq	425728 <wcrtomb@plt+0x20be8>  // b.none
  424a3c:	mov	x8, x0
  424a40:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424a44:	mov	w0, wzr
  424a48:	str	w8, [x9, #3840]
  424a4c:	b	425a54 <wcrtomb@plt+0x20f14>
  424a50:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424a54:	mov	w9, #0x1                   	// #1
  424a58:	mov	w0, wzr
  424a5c:	strb	w9, [x8, #3896]
  424a60:	b	425a54 <wcrtomb@plt+0x20f14>
  424a64:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424a68:	ldr	x9, [x8, #3672]
  424a6c:	cbnz	x9, 425fc4 <wcrtomb@plt+0x21484>
  424a70:	mov	w0, wzr
  424a74:	str	x19, [x8, #3672]
  424a78:	b	425a54 <wcrtomb@plt+0x20f14>
  424a7c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424a80:	add	x4, x4, #0x273
  424a84:	add	x3, sp, #0x38
  424a88:	mov	w2, #0xa                   	// #10
  424a8c:	mov	x0, x19
  424a90:	mov	x1, xzr
  424a94:	bl	445d5c <argp_parse@@Base+0xe4b0>
  424a98:	cbnz	w0, 425fe0 <wcrtomb@plt+0x214a0>
  424a9c:	ldr	x8, [sp, #56]
  424aa0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424aa4:	tst	x8, #0x1ff
  424aa8:	str	x8, [x9, #3976]
  424aac:	b.ne	426008 <wcrtomb@plt+0x214c8>  // b.any
  424ab0:	lsr	x8, x8, #9
  424ab4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424ab8:	mov	w0, wzr
  424abc:	str	w8, [x9, #3804]
  424ac0:	b	425a54 <wcrtomb@plt+0x20f14>
  424ac4:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  424ac8:	add	x4, x4, #0x66
  424acc:	add	x3, sp, #0x38
  424ad0:	mov	w2, #0xa                   	// #10
  424ad4:	mov	x0, x19
  424ad8:	mov	x1, xzr
  424adc:	bl	445d5c <argp_parse@@Base+0xe4b0>
  424ae0:	cbnz	w0, 426048 <wcrtomb@plt+0x21508>
  424ae4:	ldr	x8, [sp, #56]
  424ae8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424aec:	str	x8, [x9, #3936]
  424af0:	b	425a54 <wcrtomb@plt+0x20f14>
  424af4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424af8:	mov	w9, #0x1                   	// #1
  424afc:	mov	w0, wzr
  424b00:	strb	w9, [x8, #3141]
  424b04:	b	425a54 <wcrtomb@plt+0x20f14>
  424b08:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424b0c:	mov	w9, #0x1                   	// #1
  424b10:	mov	w0, wzr
  424b14:	strb	w9, [x8, #3728]
  424b18:	b	425a54 <wcrtomb@plt+0x20f14>
  424b1c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  424b20:	add	x0, x0, #0x824
  424b24:	bl	4268d4 <wcrtomb@plt+0x21d94>
  424b28:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424b2c:	mov	w9, #0x1                   	// #1
  424b30:	b	4255e0 <wcrtomb@plt+0x20aa0>
  424b34:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424b38:	mov	w0, wzr
  424b3c:	strb	wzr, [x8, #3633]
  424b40:	b	425a54 <wcrtomb@plt+0x20f14>
  424b44:	ldr	x1, [x20]
  424b48:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  424b4c:	add	x0, x0, #0x344
  424b50:	bl	426684 <wcrtomb@plt+0x21b44>
  424b54:	b	425a50 <wcrtomb@plt+0x20f10>
  424b58:	cbz	x19, 425750 <wcrtomb@plt+0x20c10>
  424b5c:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  424b60:	ldr	x5, [x8, #4016]
  424b64:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0x184b0>
  424b68:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424b6c:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x184b0>
  424b70:	add	x20, x20, #0x2b0
  424b74:	add	x0, x0, #0x31b
  424b78:	add	x2, x2, #0x2b8
  424b7c:	mov	w4, #0x4                   	// #4
  424b80:	mov	x1, x19
  424b84:	mov	x3, x20
  424b88:	bl	434698 <wcrtomb@plt+0x2fb58>
  424b8c:	ldr	w8, [x20, x0, lsl #2]
  424b90:	b	425754 <wcrtomb@plt+0x20c14>
  424b94:	cbz	x19, 425764 <wcrtomb@plt+0x20c24>
  424b98:	ldrb	w8, [x19]
  424b9c:	cmp	w8, #0x2e
  424ba0:	b.ne	424bb4 <wcrtomb@plt+0x20074>  // b.any
  424ba4:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x184b0>
  424ba8:	add	x0, x0, #0x50a
  424bac:	bl	408834 <wcrtomb@plt+0x3cf4>
  424bb0:	add	x19, x19, #0x1
  424bb4:	add	x1, sp, #0x38
  424bb8:	mov	x0, x19
  424bbc:	mov	w2, wzr
  424bc0:	bl	403f30 <strtoul@plt>
  424bc4:	ldr	x8, [sp, #56]
  424bc8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424bcc:	str	w0, [x9, #3912]
  424bd0:	ldrb	w8, [x8]
  424bd4:	cbz	w8, 425a50 <wcrtomb@plt+0x20f10>
  424bd8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424bdc:	ldr	x8, [x8, #4064]
  424be0:	cbz	x8, 424be8 <wcrtomb@plt+0x200a8>
  424be4:	blr	x8
  424be8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424bec:	add	x1, x1, #0x32c
  424bf0:	b	426088 <wcrtomb@plt+0x21548>
  424bf4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424bf8:	mov	w9, #0x1                   	// #1
  424bfc:	mov	w0, wzr
  424c00:	strb	w9, [x8, #3813]
  424c04:	cbz	x19, 425a54 <wcrtomb@plt+0x20f14>
  424c08:	str	x19, [x20, #32]
  424c0c:	b	425a54 <wcrtomb@plt+0x20f14>
  424c10:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424c14:	mov	w0, wzr
  424c18:	str	wzr, [x8, #3128]
  424c1c:	b	425a54 <wcrtomb@plt+0x20f14>
  424c20:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424c24:	mov	w9, #0xffffffff            	// #-1
  424c28:	b	42549c <wcrtomb@plt+0x2095c>
  424c2c:	ldr	x20, [x20]
  424c30:	ldr	x0, [x20, #8]
  424c34:	cbz	x0, 425778 <wcrtomb@plt+0x20c38>
  424c38:	bl	403f40 <strlen@plt>
  424c3c:	add	x0, x0, #0x21
  424c40:	b	42577c <wcrtomb@plt+0x20c3c>
  424c44:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424c48:	ldr	w9, [x8, #3916]
  424c4c:	cbz	w9, 424c58 <wcrtomb@plt+0x20118>
  424c50:	cmp	w9, #0x6
  424c54:	b.ne	425f6c <wcrtomb@plt+0x2142c>  // b.any
  424c58:	mov	w9, #0x6                   	// #6
  424c5c:	b	4254d0 <wcrtomb@plt+0x20990>
  424c60:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424c64:	mov	w9, #0x1                   	// #1
  424c68:	mov	w0, wzr
  424c6c:	strb	w9, [x8, #4072]
  424c70:	b	425a54 <wcrtomb@plt+0x20f14>
  424c74:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424c78:	mov	w9, #0x1                   	// #1
  424c7c:	mov	w0, wzr
  424c80:	strb	w9, [x8, #3608]
  424c84:	b	425a54 <wcrtomb@plt+0x20f14>
  424c88:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424c8c:	ldr	w9, [x8, #3916]
  424c90:	cbz	w9, 424c9c <wcrtomb@plt+0x2015c>
  424c94:	cmp	w9, #0x5
  424c98:	b.ne	425f6c <wcrtomb@plt+0x2142c>  // b.any
  424c9c:	mov	w9, #0x5                   	// #5
  424ca0:	b	4254d0 <wcrtomb@plt+0x20990>
  424ca4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424ca8:	mov	w9, #0x1                   	// #1
  424cac:	b	4255b4 <wcrtomb@plt+0x20a74>
  424cb0:	ldr	x20, [x20]
  424cb4:	ldr	x0, [x20, #8]
  424cb8:	cbz	x0, 425804 <wcrtomb@plt+0x20cc4>
  424cbc:	bl	403f40 <strlen@plt>
  424cc0:	add	x0, x0, #0x21
  424cc4:	b	425808 <wcrtomb@plt+0x20cc8>
  424cc8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  424ccc:	add	x0, x0, #0x824
  424cd0:	bl	4268d4 <wcrtomb@plt+0x21d94>
  424cd4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424cd8:	mov	w9, #0x1                   	// #1
  424cdc:	b	42556c <wcrtomb@plt+0x20a2c>
  424ce0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424ce4:	mov	w9, #0x1                   	// #1
  424ce8:	mov	w0, wzr
  424cec:	strb	w9, [x8, #3752]
  424cf0:	b	425a54 <wcrtomb@plt+0x20f14>
  424cf4:	ldr	x21, [x20]
  424cf8:	ldr	x0, [x21, #8]
  424cfc:	cbz	x0, 425890 <wcrtomb@plt+0x20d50>
  424d00:	bl	403f40 <strlen@plt>
  424d04:	add	x0, x0, #0x21
  424d08:	b	425894 <wcrtomb@plt+0x20d54>
  424d0c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424d10:	mov	w9, #0x1                   	// #1
  424d14:	add	x1, sp, #0x38
  424d18:	mov	w2, #0xa                   	// #10
  424d1c:	mov	x0, x19
  424d20:	strb	w9, [x8, #3968]
  424d24:	bl	403f30 <strtoul@plt>
  424d28:	ldr	x8, [sp, #56]
  424d2c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424d30:	str	w0, [x9, #3664]
  424d34:	ldrb	w9, [x8]
  424d38:	cbz	w9, 425a50 <wcrtomb@plt+0x20f10>
  424d3c:	cmp	w9, #0x2e
  424d40:	b.ne	424d68 <wcrtomb@plt+0x20228>  // b.any
  424d44:	add	x0, x8, #0x1
  424d48:	add	x1, sp, #0x38
  424d4c:	mov	w2, #0xa                   	// #10
  424d50:	bl	403f30 <strtoul@plt>
  424d54:	ldr	x8, [sp, #56]
  424d58:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424d5c:	str	w0, [x9, #3144]
  424d60:	ldrb	w8, [x8]
  424d64:	cbz	w8, 425a50 <wcrtomb@plt+0x20f10>
  424d68:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424d6c:	ldr	x8, [x8, #4064]
  424d70:	cbz	x8, 424d78 <wcrtomb@plt+0x20238>
  424d74:	blr	x8
  424d78:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424d7c:	add	x1, x1, #0x2fe
  424d80:	b	425f84 <wcrtomb@plt+0x21444>
  424d84:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424d88:	mov	w9, #0x1                   	// #1
  424d8c:	mov	w0, wzr
  424d90:	strb	w9, [x8, #3609]
  424d94:	b	425a54 <wcrtomb@plt+0x20f14>
  424d98:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424d9c:	mov	w9, #0x1                   	// #1
  424da0:	mov	w0, wzr
  424da4:	strb	w9, [x8, #3729]
  424da8:	b	425a54 <wcrtomb@plt+0x20f14>
  424dac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424db0:	mov	w9, #0x1                   	// #1
  424db4:	mov	w0, wzr
  424db8:	strb	w9, [x8, #3133]
  424dbc:	b	425a54 <wcrtomb@plt+0x20f14>
  424dc0:	ldr	x21, [x20]
  424dc4:	ldr	x0, [x21, #8]
  424dc8:	cbz	x0, 4258ec <wcrtomb@plt+0x20dac>
  424dcc:	bl	403f40 <strlen@plt>
  424dd0:	add	x0, x0, #0x21
  424dd4:	b	4258f0 <wcrtomb@plt+0x20db0>
  424dd8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424ddc:	mov	w9, #0x1                   	// #1
  424de0:	mov	w0, wzr
  424de4:	strb	w9, [x8, #3633]
  424de8:	b	425a54 <wcrtomb@plt+0x20f14>
  424dec:	mov	x0, xzr
  424df0:	mov	w1, w20
  424df4:	bl	4433ac <argp_parse@@Base+0xbb00>
  424df8:	b	425a50 <wcrtomb@plt+0x20f10>
  424dfc:	ldr	x20, [x20]
  424e00:	ldr	x0, [x20, #8]
  424e04:	cbz	x0, 425978 <wcrtomb@plt+0x20e38>
  424e08:	bl	403f40 <strlen@plt>
  424e0c:	add	x0, x0, #0x21
  424e10:	b	42597c <wcrtomb@plt+0x20e3c>
  424e14:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424e18:	ldr	w9, [x8, #3916]
  424e1c:	cbz	w9, 424e28 <wcrtomb@plt+0x202e8>
  424e20:	cmp	w9, #0x9
  424e24:	b.ne	425f6c <wcrtomb@plt+0x2142c>  // b.any
  424e28:	mov	w9, #0x9                   	// #9
  424e2c:	b	4254d0 <wcrtomb@plt+0x20990>
  424e30:	add	x1, sp, #0x38
  424e34:	mov	w2, #0xa                   	// #10
  424e38:	mov	x0, x19
  424e3c:	bl	403f30 <strtoul@plt>
  424e40:	ldr	x8, [sp, #56]
  424e44:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424e48:	str	w0, [x9, #3836]
  424e4c:	ldrb	w8, [x8]
  424e50:	cbz	w8, 425a50 <wcrtomb@plt+0x20f10>
  424e54:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424e58:	ldr	x8, [x8, #4064]
  424e5c:	cbz	x8, 424e64 <wcrtomb@plt+0x20324>
  424e60:	blr	x8
  424e64:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424e68:	add	x1, x1, #0x295
  424e6c:	b	425f84 <wcrtomb@plt+0x21444>
  424e70:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424e74:	mov	w0, wzr
  424e78:	str	x19, [x8, #3720]
  424e7c:	b	425a54 <wcrtomb@plt+0x20f14>
  424e80:	mov	w8, #0x1                   	// #1
  424e84:	mov	w0, wzr
  424e88:	str	w8, [x20, #40]
  424e8c:	b	425a54 <wcrtomb@plt+0x20f14>
  424e90:	ldr	x21, [x20]
  424e94:	ldr	x0, [x21, #8]
  424e98:	cbz	x0, 425a04 <wcrtomb@plt+0x20ec4>
  424e9c:	bl	403f40 <strlen@plt>
  424ea0:	add	x0, x0, #0x21
  424ea4:	b	425a08 <wcrtomb@plt+0x20ec8>
  424ea8:	mov	x0, x19
  424eac:	bl	41a808 <wcrtomb@plt+0x15cc8>
  424eb0:	b	425a50 <wcrtomb@plt+0x20f10>
  424eb4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424eb8:	mov	w0, wzr
  424ebc:	strb	wzr, [x8, #3088]
  424ec0:	b	425a54 <wcrtomb@plt+0x20f14>
  424ec4:	ldr	x1, [x20]
  424ec8:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x174b0>
  424ecc:	add	x0, x0, #0x854
  424ed0:	bl	426684 <wcrtomb@plt+0x21b44>
  424ed4:	b	425a50 <wcrtomb@plt+0x20f10>
  424ed8:	ldr	x1, [x20]
  424edc:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  424ee0:	add	x0, x0, #0x33c
  424ee4:	bl	426684 <wcrtomb@plt+0x21b44>
  424ee8:	b	425a50 <wcrtomb@plt+0x20f10>
  424eec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424ef0:	mov	w9, #0x1                   	// #1
  424ef4:	mov	w0, wzr
  424ef8:	strb	w9, [x8, #3140]
  424efc:	b	425a54 <wcrtomb@plt+0x20f14>
  424f00:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424f04:	ldr	w9, [x8, #3916]
  424f08:	cmp	w9, #0x2
  424f0c:	b.cs	425f6c <wcrtomb@plt+0x2142c>  // b.hs, b.nlast
  424f10:	mov	w9, #0x1                   	// #1
  424f14:	b	4254d0 <wcrtomb@plt+0x20990>
  424f18:	mov	x0, x19
  424f1c:	bl	41a3b8 <wcrtomb@plt+0x15878>
  424f20:	b	425a50 <wcrtomb@plt+0x20f10>
  424f24:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424f28:	mov	w9, #0x1                   	// #1
  424f2c:	mov	w0, wzr
  424f30:	strb	w9, [x8, #3088]
  424f34:	b	425a54 <wcrtomb@plt+0x20f14>
  424f38:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  424f3c:	ldr	x5, [x8, #4016]
  424f40:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0x184b0>
  424f44:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  424f48:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x184b0>
  424f4c:	add	x20, x20, #0x290
  424f50:	add	x0, x0, #0x2ed
  424f54:	add	x2, x2, #0x298
  424f58:	mov	w4, #0x4                   	// #4
  424f5c:	mov	x1, x19
  424f60:	mov	x3, x20
  424f64:	bl	434698 <wcrtomb@plt+0x2fb58>
  424f68:	mov	x8, x0
  424f6c:	ldr	w8, [x20, x8, lsl #2]
  424f70:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424f74:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424f78:	mov	w11, #0x1                   	// #1
  424f7c:	mov	w0, wzr
  424f80:	str	w8, [x9, #3972]
  424f84:	strb	w11, [x10, #3968]
  424f88:	b	425a54 <wcrtomb@plt+0x20f14>
  424f8c:	ldr	x1, [x20]
  424f90:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  424f94:	add	x0, x0, #0x34b
  424f98:	bl	426684 <wcrtomb@plt+0x21b44>
  424f9c:	b	425a50 <wcrtomb@plt+0x20f10>
  424fa0:	mov	x0, x19
  424fa4:	bl	4268d4 <wcrtomb@plt+0x21d94>
  424fa8:	b	425a50 <wcrtomb@plt+0x20f10>
  424fac:	ldr	x1, [x20]
  424fb0:	mov	x0, x19
  424fb4:	bl	426684 <wcrtomb@plt+0x21b44>
  424fb8:	b	425a50 <wcrtomb@plt+0x20f10>
  424fbc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424fc0:	ldr	w9, [x8, #3916]
  424fc4:	orr	w9, w9, #0x2
  424fc8:	cmp	w9, #0x2
  424fcc:	b.eq	4254d0 <wcrtomb@plt+0x20990>  // b.none
  424fd0:	b	425f6c <wcrtomb@plt+0x2142c>
  424fd4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424fd8:	mov	w9, #0x1                   	// #1
  424fdc:	mov	w0, wzr
  424fe0:	strb	w9, [x8, #3681]
  424fe4:	b	425a54 <wcrtomb@plt+0x20f14>
  424fe8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424fec:	mov	w0, wzr
  424ff0:	str	x19, [x8, #3704]
  424ff4:	b	425a54 <wcrtomb@plt+0x20f14>
  424ff8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  424ffc:	ldr	w9, [x8, #3916]
  425000:	cbz	w9, 42500c <wcrtomb@plt+0x204cc>
  425004:	cmp	w9, #0x7
  425008:	b.ne	425f6c <wcrtomb@plt+0x2142c>  // b.any
  42500c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425010:	ldr	w10, [x9, #3700]
  425014:	mov	w11, #0x7                   	// #7
  425018:	str	w11, [x8, #3916]
  42501c:	mov	w0, wzr
  425020:	add	w8, w10, #0x1
  425024:	str	w8, [x9, #3700]
  425028:	b	425a54 <wcrtomb@plt+0x20f14>
  42502c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425030:	mov	w9, #0x1                   	// #1
  425034:	mov	w0, wzr
  425038:	str	w9, [x8, #3128]
  42503c:	b	425a54 <wcrtomb@plt+0x20f14>
  425040:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425044:	ldr	w9, [x8, #3916]
  425048:	orr	w9, w9, #0x8
  42504c:	cmp	w9, #0x8
  425050:	b.eq	4254d0 <wcrtomb@plt+0x20990>  // b.none
  425054:	b	425f6c <wcrtomb@plt+0x2142c>
  425058:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42505c:	mov	w9, #0x1                   	// #1
  425060:	mov	w0, wzr
  425064:	strb	w9, [x8, #2096]
  425068:	b	425a54 <wcrtomb@plt+0x20f14>
  42506c:	mov	x0, x19
  425070:	bl	41c904 <wcrtomb@plt+0x17dc4>
  425074:	b	425a50 <wcrtomb@plt+0x20f10>
  425078:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42507c:	mov	w9, #0x1                   	// #1
  425080:	mov	w0, wzr
  425084:	strb	w9, [x8, #3897]
  425088:	b	425a54 <wcrtomb@plt+0x20f14>
  42508c:	ldr	x21, [x20]
  425090:	ldr	x0, [x21, #8]
  425094:	cbz	x0, 425a74 <wcrtomb@plt+0x20f34>
  425098:	bl	403f40 <strlen@plt>
  42509c:	add	x0, x0, #0x21
  4250a0:	b	425a78 <wcrtomb@plt+0x20f38>
  4250a4:	ldr	x1, [x20]
  4250a8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  4250ac:	add	x0, x0, #0x9d6
  4250b0:	bl	426684 <wcrtomb@plt+0x21b44>
  4250b4:	b	425a50 <wcrtomb@plt+0x20f10>
  4250b8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4250bc:	mov	w9, #0x1                   	// #1
  4250c0:	mov	w0, wzr
  4250c4:	strb	w9, [x8, #3132]
  4250c8:	b	425a54 <wcrtomb@plt+0x20f14>
  4250cc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4250d0:	mov	w9, #0x1                   	// #1
  4250d4:	mov	w0, wzr
  4250d8:	strb	w9, [x8, #3968]
  4250dc:	b	425a54 <wcrtomb@plt+0x20f14>
  4250e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4250e4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4250e8:	mov	w10, #0x1                   	// #1
  4250ec:	mov	w0, wzr
  4250f0:	str	x19, [x8, #3824]
  4250f4:	strb	w10, [x9, #3132]
  4250f8:	b	425a54 <wcrtomb@plt+0x20f14>
  4250fc:	ldr	x20, [x20]
  425100:	ldr	x0, [x20, #8]
  425104:	cbz	x0, 425ad0 <wcrtomb@plt+0x20f90>
  425108:	bl	403f40 <strlen@plt>
  42510c:	add	x0, x0, #0x21
  425110:	b	425ad4 <wcrtomb@plt+0x20f94>
  425114:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  425118:	add	x4, x4, #0x66
  42511c:	add	x3, sp, #0x38
  425120:	mov	w2, #0xa                   	// #10
  425124:	mov	x0, x19
  425128:	mov	x1, xzr
  42512c:	bl	445d5c <argp_parse@@Base+0xe4b0>
  425130:	cbnz	w0, 425164 <wcrtomb@plt+0x20624>
  425134:	ldr	x8, [sp, #56]
  425138:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42513c:	cmp	x8, w8, sxtw
  425140:	str	w8, [x9, #3804]
  425144:	b.ne	425164 <wcrtomb@plt+0x20624>  // b.any
  425148:	cmp	w8, #0x1
  42514c:	b.lt	425164 <wcrtomb@plt+0x20624>  // b.tstop
  425150:	lsl	x9, x8, #9
  425154:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425158:	lsr	x8, x8, #55
  42515c:	str	x9, [x10, #3976]
  425160:	cbz	x8, 425a50 <wcrtomb@plt+0x20f10>
  425164:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425168:	ldr	x8, [x8, #4064]
  42516c:	cbz	x8, 425174 <wcrtomb@plt+0x20634>
  425170:	blr	x8
  425174:	mov	x0, x19
  425178:	bl	444778 <argp_parse@@Base+0xcecc>
  42517c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  425180:	mov	x19, x0
  425184:	add	x1, x1, #0x25b
  425188:	b	4260cc <wcrtomb@plt+0x2158c>
  42518c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425190:	mov	w0, wzr
  425194:	str	x19, [x8, #4016]
  425198:	b	425a54 <wcrtomb@plt+0x20f14>
  42519c:	mov	x0, x19
  4251a0:	bl	43d520 <argp_parse@@Base+0x5c74>
  4251a4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4251a8:	str	x0, [x8, #3656]
  4251ac:	cbz	x0, 426070 <wcrtomb@plt+0x21530>
  4251b0:	mov	w0, wzr
  4251b4:	bl	4049c0 <umask@plt>
  4251b8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4251bc:	str	w0, [x8, #3136]
  4251c0:	bl	4049c0 <umask@plt>
  4251c4:	b	425a50 <wcrtomb@plt+0x20f10>
  4251c8:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4251cc:	add	x4, x4, #0x273
  4251d0:	add	x1, sp, #0x8
  4251d4:	add	x3, sp, #0x38
  4251d8:	mov	w2, #0xa                   	// #10
  4251dc:	mov	x0, x19
  4251e0:	bl	445d5c <argp_parse@@Base+0xe4b0>
  4251e4:	cbnz	w0, 4260a8 <wcrtomb@plt+0x21568>
  4251e8:	ldr	x8, [sp, #8]
  4251ec:	cmp	x8, x19
  4251f0:	b.ls	42520c <wcrtomb@plt+0x206cc>  // b.plast
  4251f4:	ldurb	w1, [x8, #-1]
  4251f8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4251fc:	add	x0, x0, #0x273
  425200:	mov	w2, #0xe                   	// #14
  425204:	bl	404890 <memchr@plt>
  425208:	cbz	x0, 425e74 <wcrtomb@plt+0x21334>
  42520c:	ldr	d0, [sp, #56]
  425210:	ucvtf	d0, d0
  425214:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425218:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42521c:	mov	w10, #0x1                   	// #1
  425220:	mov	w0, wzr
  425224:	str	d0, [x8, #3688]
  425228:	strb	w10, [x9, #3132]
  42522c:	b	425a54 <wcrtomb@plt+0x20f14>
  425230:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425234:	ldr	w9, [x8, #3916]
  425238:	cbz	w9, 425244 <wcrtomb@plt+0x20704>
  42523c:	cmp	w9, #0x3
  425240:	b.ne	425f6c <wcrtomb@plt+0x2142c>  // b.any
  425244:	mov	w9, #0x3                   	// #3
  425248:	b	4254d0 <wcrtomb@plt+0x20990>
  42524c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425250:	mov	w9, #0x1                   	// #1
  425254:	mov	w0, wzr
  425258:	strb	w9, [x8, #4024]
  42525c:	b	425a54 <wcrtomb@plt+0x20f14>
  425260:	ldr	x21, [x20]
  425264:	ldr	x0, [x21, #8]
  425268:	cbz	x0, 425b5c <wcrtomb@plt+0x2101c>
  42526c:	bl	403f40 <strlen@plt>
  425270:	add	x0, x0, #0x21
  425274:	b	425b60 <wcrtomb@plt+0x21020>
  425278:	ldr	x1, [x20]
  42527c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  425280:	add	x0, x0, #0x946
  425284:	bl	426684 <wcrtomb@plt+0x21b44>
  425288:	b	425a50 <wcrtomb@plt+0x20f10>
  42528c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425290:	mov	w9, #0x1                   	// #1
  425294:	str	w9, [x8, #4028]
  425298:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42529c:	ldr	x8, [x8, #3104]
  4252a0:	tbz	x8, #63, 425fa8 <wcrtomb@plt+0x21468>
  4252a4:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4252a8:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4252ac:	add	x8, x8, #0x2e0
  4252b0:	add	x9, x9, #0x2d2
  4252b4:	cmp	w21, #0x119
  4252b8:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4252bc:	csel	x1, x9, x8, eq  // eq = none
  4252c0:	add	x3, x3, #0xc18
  4252c4:	mov	x0, x20
  4252c8:	mov	x2, x19
  4252cc:	bl	42676c <wcrtomb@plt+0x21c2c>
  4252d0:	ldr	x21, [x20]
  4252d4:	ldr	x0, [x21, #8]
  4252d8:	cbz	x0, 425674 <wcrtomb@plt+0x20b34>
  4252dc:	bl	403f40 <strlen@plt>
  4252e0:	add	x0, x0, #0x21
  4252e4:	b	425678 <wcrtomb@plt+0x20b38>
  4252e8:	ldr	x20, [x20]
  4252ec:	ldr	x0, [x20, #8]
  4252f0:	cbz	x0, 425bc8 <wcrtomb@plt+0x21088>
  4252f4:	bl	403f40 <strlen@plt>
  4252f8:	add	x0, x0, #0x21
  4252fc:	b	425bcc <wcrtomb@plt+0x2108c>
  425300:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425304:	mov	w9, #0x1                   	// #1
  425308:	mov	w0, wzr
  42530c:	strb	w9, [x8, #3632]
  425310:	b	425a54 <wcrtomb@plt+0x20f14>
  425314:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  425318:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42531c:	add	x1, x1, #0x910
  425320:	add	x3, x3, #0xf08
  425324:	mov	x0, x20
  425328:	mov	x2, x19
  42532c:	bl	42676c <wcrtomb@plt+0x21c2c>
  425330:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425334:	ldr	w9, [x8, #3112]
  425338:	cbnz	w9, 425a50 <wcrtomb@plt+0x20f10>
  42533c:	mov	w9, #0x1                   	// #1
  425340:	b	4253ec <wcrtomb@plt+0x208ac>
  425344:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425348:	mov	w9, #0x1                   	// #1
  42534c:	mov	w0, wzr
  425350:	strb	w9, [x8, #3813]
  425354:	str	x19, [x20, #24]
  425358:	b	425a54 <wcrtomb@plt+0x20f14>
  42535c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425360:	mov	w9, #0x1                   	// #1
  425364:	mov	w0, wzr
  425368:	strb	w9, [x8, #3680]
  42536c:	b	425a54 <wcrtomb@plt+0x20f14>
  425370:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425374:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425378:	ldr	x9, [x20, #3904]
  42537c:	ldr	x10, [x8, #2088]
  425380:	cmp	x9, x10
  425384:	b.ne	42571c <wcrtomb@plt+0x20bdc>  // b.any
  425388:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42538c:	ldr	x0, [x21, #3744]
  425390:	cbz	x0, 425e8c <wcrtomb@plt+0x2134c>
  425394:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  425398:	movk	x10, #0xaaa, lsl #48
  42539c:	cmp	x9, x10
  4253a0:	b.cs	425e98 <wcrtomb@plt+0x21358>  // b.hs, b.nlast
  4253a4:	add	x9, x9, x9, lsr #1
  4253a8:	add	x9, x9, #0x1
  4253ac:	b	425ea0 <wcrtomb@plt+0x21360>
  4253b0:	mov	w0, wzr
  4253b4:	str	wzr, [x20, #40]
  4253b8:	b	425a54 <wcrtomb@plt+0x20f14>
  4253bc:	ldr	x20, [x20]
  4253c0:	ldr	x0, [x20, #8]
  4253c4:	cbz	x0, 425c5c <wcrtomb@plt+0x2111c>
  4253c8:	bl	403f40 <strlen@plt>
  4253cc:	add	x0, x0, #0x21
  4253d0:	b	425c60 <wcrtomb@plt+0x21120>
  4253d4:	mov	w8, #0x1                   	// #1
  4253d8:	mov	w0, wzr
  4253dc:	strb	w8, [x20, #16]
  4253e0:	b	425a54 <wcrtomb@plt+0x20f14>
  4253e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4253e8:	mov	w9, #0x2                   	// #2
  4253ec:	mov	w0, wzr
  4253f0:	str	w9, [x8, #3112]
  4253f4:	b	425a54 <wcrtomb@plt+0x20f14>
  4253f8:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4253fc:	mov	w0, wzr
  425400:	str	x19, [x8, #3840]
  425404:	b	425a54 <wcrtomb@plt+0x20f14>
  425408:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42540c:	mov	w9, #0x1                   	// #1
  425410:	mov	w0, wzr
  425414:	strb	w9, [x8, #4009]
  425418:	b	425a54 <wcrtomb@plt+0x20f14>
  42541c:	mov	x0, x19
  425420:	bl	408834 <wcrtomb@plt+0x3cf4>
  425424:	b	425a50 <wcrtomb@plt+0x20f10>
  425428:	ldr	x21, [x20]
  42542c:	ldr	x0, [x21, #8]
  425430:	cbz	x0, 425ce8 <wcrtomb@plt+0x211a8>
  425434:	bl	403f40 <strlen@plt>
  425438:	add	x0, x0, #0x21
  42543c:	b	425cec <wcrtomb@plt+0x211ac>
  425440:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425444:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  425448:	ldr	w10, [x8, #3700]
  42544c:	ldr	w11, [x9, #3720]
  425450:	mov	w12, #0x3000                	// #12288
  425454:	movk	w12, #0x58, lsl #16
  425458:	add	w10, w10, #0x1
  42545c:	orr	w11, w11, w12
  425460:	mov	w0, wzr
  425464:	str	w10, [x8, #3700]
  425468:	str	w11, [x9, #3720]
  42546c:	b	425a54 <wcrtomb@plt+0x20f14>
  425470:	ldr	x20, [x20]
  425474:	ldr	x0, [x20, #8]
  425478:	cbz	x0, 425d44 <wcrtomb@plt+0x21204>
  42547c:	bl	403f40 <strlen@plt>
  425480:	add	x0, x0, #0x21
  425484:	b	425d48 <wcrtomb@plt+0x21208>
  425488:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  42548c:	add	x0, x0, #0x824
  425490:	bl	4268d4 <wcrtomb@plt+0x21d94>
  425494:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425498:	mov	w9, #0x1                   	// #1
  42549c:	mov	w0, wzr
  4254a0:	str	w9, [x8, #3952]
  4254a4:	b	425a54 <wcrtomb@plt+0x20f14>
  4254a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4254ac:	mov	w9, #0x1                   	// #1
  4254b0:	mov	w0, wzr
  4254b4:	strb	w9, [x8, #3754]
  4254b8:	b	425a54 <wcrtomb@plt+0x20f14>
  4254bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4254c0:	ldr	w9, [x8, #3916]
  4254c4:	orr	w9, w9, #0x4
  4254c8:	cmp	w9, #0x4
  4254cc:	b.ne	425f6c <wcrtomb@plt+0x2142c>  // b.any
  4254d0:	mov	w0, wzr
  4254d4:	str	w9, [x8, #3916]
  4254d8:	b	425a54 <wcrtomb@plt+0x20f14>
  4254dc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4254e0:	mov	w9, #0xffffffff            	// #-1
  4254e4:	b	425558 <wcrtomb@plt+0x20a18>
  4254e8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4254ec:	mov	w9, #0x1                   	// #1
  4254f0:	mov	w0, wzr
  4254f4:	strb	w9, [x8, #3800]
  4254f8:	b	425a54 <wcrtomb@plt+0x20f14>
  4254fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425500:	mov	w9, #0x1                   	// #1
  425504:	mov	w0, wzr
  425508:	strb	w9, [x8, #3648]
  42550c:	b	425a54 <wcrtomb@plt+0x20f14>
  425510:	ldr	x1, [x20]
  425514:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  425518:	add	x0, x0, #0x355
  42551c:	bl	426684 <wcrtomb@plt+0x21b44>
  425520:	b	425a50 <wcrtomb@plt+0x20f10>
  425524:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425528:	add	x1, x1, #0xe00
  42552c:	mov	x0, x19
  425530:	bl	426a04 <wcrtomb@plt+0x21ec4>
  425534:	cmn	x0, #0x1
  425538:	b.eq	425dd4 <wcrtomb@plt+0x21294>  // b.none
  42553c:	mov	x8, x0
  425540:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425544:	mov	w0, wzr
  425548:	str	w8, [x9, #3760]
  42554c:	b	425a54 <wcrtomb@plt+0x20f14>
  425550:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425554:	mov	w9, #0x1                   	// #1
  425558:	mov	w0, wzr
  42555c:	str	w9, [x8, #4036]
  425560:	b	425a54 <wcrtomb@plt+0x20f14>
  425564:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425568:	mov	w9, #0xffffffff            	// #-1
  42556c:	mov	w0, wzr
  425570:	str	w9, [x8, #4040]
  425574:	b	425a54 <wcrtomb@plt+0x20f14>
  425578:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  42557c:	add	x0, x0, #0x824
  425580:	bl	4268d4 <wcrtomb@plt+0x21d94>
  425584:	b	425a50 <wcrtomb@plt+0x20f10>
  425588:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42558c:	mov	w0, wzr
  425590:	strb	wzr, [x8, #4024]
  425594:	b	425a54 <wcrtomb@plt+0x20f14>
  425598:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42559c:	mov	w9, #0x1                   	// #1
  4255a0:	mov	w0, wzr
  4255a4:	strb	w9, [x8, #3832]
  4255a8:	b	425a54 <wcrtomb@plt+0x20f14>
  4255ac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4255b0:	mov	w9, #0xffffffff            	// #-1
  4255b4:	mov	w0, wzr
  4255b8:	str	w9, [x8, #3668]
  4255bc:	b	425a54 <wcrtomb@plt+0x20f14>
  4255c0:	ldr	x22, [x20]
  4255c4:	ldr	x0, [x22, #8]
  4255c8:	cbz	x0, 425dfc <wcrtomb@plt+0x212bc>
  4255cc:	bl	403f40 <strlen@plt>
  4255d0:	add	x0, x0, #0x21
  4255d4:	b	425e00 <wcrtomb@plt+0x212c0>
  4255d8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4255dc:	mov	w9, #0xffffffff            	// #-1
  4255e0:	mov	w0, wzr
  4255e4:	str	w9, [x8, #3712]
  4255e8:	b	425a54 <wcrtomb@plt+0x20f14>
  4255ec:	ldrb	w1, [x19]
  4255f0:	cbz	w1, 425a50 <wcrtomb@plt+0x20f10>
  4255f4:	add	x19, x19, #0x1
  4255f8:	mov	w2, #0x1                   	// #1
  4255fc:	mov	x0, xzr
  425600:	bl	4433c4 <argp_parse@@Base+0xbb18>
  425604:	ldrb	w1, [x19], #1
  425608:	mov	w0, wzr
  42560c:	cbnz	w1, 4255f8 <wcrtomb@plt+0x20ab8>
  425610:	b	425a54 <wcrtomb@plt+0x20f14>
  425614:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425618:	mov	w0, wzr
  42561c:	str	x19, [x8, #3864]
  425620:	b	425a54 <wcrtomb@plt+0x20f14>
  425624:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425628:	mov	w9, #0x1                   	// #1
  42562c:	mov	w0, wzr
  425630:	strb	w9, [x8, #3090]
  425634:	b	425a54 <wcrtomb@plt+0x20f14>
  425638:	cbz	x19, 425e60 <wcrtomb@plt+0x21320>
  42563c:	mov	x0, x19
  425640:	bl	422fb4 <wcrtomb@plt+0x1e474>
  425644:	adrp	x1, 426000 <wcrtomb@plt+0x214c0>
  425648:	add	x1, x1, #0xbcc
  42564c:	bl	4041b0 <signal@plt>
  425650:	b	425a50 <wcrtomb@plt+0x20f10>
  425654:	ldr	x1, [x20]
  425658:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  42565c:	add	x0, x0, #0x35c
  425660:	bl	426684 <wcrtomb@plt+0x21b44>
  425664:	b	425a50 <wcrtomb@plt+0x20f10>
  425668:	mov	x0, x19
  42566c:	bl	4288a4 <wcrtomb@plt+0x23d64>
  425670:	b	425a50 <wcrtomb@plt+0x20f10>
  425674:	mov	w0, #0x20                  	// #32
  425678:	bl	4459e8 <argp_parse@@Base+0xe13c>
  42567c:	ldr	x1, [x21, #8]
  425680:	mov	x19, x0
  425684:	cbz	x1, 425698 <wcrtomb@plt+0x20b58>
  425688:	add	x20, x19, #0x20
  42568c:	mov	x0, x20
  425690:	bl	404840 <strcpy@plt>
  425694:	b	42569c <wcrtomb@plt+0x20b5c>
  425698:	mov	x20, xzr
  42569c:	str	x20, [x19, #8]
  4256a0:	ldr	w8, [x21]
  4256a4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4256a8:	ldr	x10, [x9, #2128]
  4256ac:	mov	w0, wzr
  4256b0:	str	w8, [x19]
  4256b4:	ldr	x8, [x21, #16]
  4256b8:	str	x19, [x9, #2128]
  4256bc:	stp	x8, x10, [x19, #16]
  4256c0:	b	425a54 <wcrtomb@plt+0x20f14>
  4256c4:	mov	w8, #0x5                   	// #5
  4256c8:	movk	w8, #0x100, lsl #16
  4256cc:	cmp	w21, w8
  4256d0:	b.ne	425a54 <wcrtomb@plt+0x20f14>  // b.any
  4256d4:	ldr	x8, [x20]
  4256d8:	ldr	w8, [x8]
  4256dc:	cbz	w8, 425f38 <wcrtomb@plt+0x213f8>
  4256e0:	cmp	w8, #0x2
  4256e4:	b.ne	425f64 <wcrtomb@plt+0x21424>  // b.any
  4256e8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4256ec:	add	x1, x1, #0x430
  4256f0:	mov	w2, #0x5                   	// #5
  4256f4:	mov	x0, xzr
  4256f8:	bl	404900 <dcgettext@plt>
  4256fc:	ldr	x8, [x20]
  425700:	mov	x2, x0
  425704:	mov	w0, wzr
  425708:	mov	w1, wzr
  42570c:	ldp	x3, x4, [x8, #8]
  425710:	bl	403fa0 <error@plt>
  425714:	mov	w0, #0x40                  	// #64
  425718:	bl	403f70 <exit@plt>
  42571c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425720:	ldr	x8, [x8, #3744]
  425724:	b	425eb8 <wcrtomb@plt+0x21378>
  425728:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42572c:	ldr	x0, [x8, #3640]
  425730:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425734:	mov	w9, #0xffffffff            	// #-1
  425738:	str	w9, [x8, #3840]
  42573c:	cbz	x0, 425a54 <wcrtomb@plt+0x20f14>
  425740:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425744:	add	x1, x1, #0xf00
  425748:	bl	41c788 <wcrtomb@plt+0x17c48>
  42574c:	b	425a50 <wcrtomb@plt+0x20f10>
  425750:	mov	w8, #0x1                   	// #1
  425754:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425758:	mov	w0, wzr
  42575c:	str	w8, [x9, #3612]
  425760:	b	425a54 <wcrtomb@plt+0x20f14>
  425764:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425768:	mov	w9, #0xa                   	// #10
  42576c:	mov	w0, wzr
  425770:	str	w9, [x8, #3912]
  425774:	b	425a54 <wcrtomb@plt+0x20f14>
  425778:	mov	w0, #0x20                  	// #32
  42577c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  425780:	ldr	x1, [x20, #8]
  425784:	mov	x19, x0
  425788:	cbz	x1, 425798 <wcrtomb@plt+0x20c58>
  42578c:	add	x0, x19, #0x20
  425790:	bl	404840 <strcpy@plt>
  425794:	b	42579c <wcrtomb@plt+0x20c5c>
  425798:	mov	x0, xzr
  42579c:	str	x0, [x19, #8]
  4257a0:	ldr	w8, [x20]
  4257a4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4257a8:	str	w8, [x19]
  4257ac:	ldr	x10, [x20, #16]
  4257b0:	ldr	x8, [x9, #2176]
  4257b4:	str	x19, [x9, #2176]
  4257b8:	stp	x10, x8, [x19, #16]
  4257bc:	cbz	x8, 4257f8 <wcrtomb@plt+0x20cb8>
  4257c0:	ldr	w9, [x20]
  4257c4:	ldr	w10, [x8]
  4257c8:	cmp	w9, w10
  4257cc:	b.ne	4257f8 <wcrtomb@plt+0x20cb8>  // b.any
  4257d0:	cmp	w9, #0x1
  4257d4:	b.eq	4257e8 <wcrtomb@plt+0x20ca8>  // b.none
  4257d8:	ldr	x0, [x20, #8]
  4257dc:	ldr	x1, [x8, #8]
  4257e0:	bl	404660 <strcmp@plt>
  4257e4:	cbnz	w0, 4257f8 <wcrtomb@plt+0x20cb8>
  4257e8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4257ec:	ldr	w8, [x8, #3808]
  4257f0:	cmp	w8, #0x2
  4257f4:	b.ne	42613c <wcrtomb@plt+0x215fc>  // b.any
  4257f8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4257fc:	mov	w9, #0x2                   	// #2
  425800:	b	425c50 <wcrtomb@plt+0x21110>
  425804:	mov	w0, #0x20                  	// #32
  425808:	bl	4459e8 <argp_parse@@Base+0xe13c>
  42580c:	ldr	x1, [x20, #8]
  425810:	mov	x19, x0
  425814:	cbz	x1, 425824 <wcrtomb@plt+0x20ce4>
  425818:	add	x0, x19, #0x20
  42581c:	bl	404840 <strcpy@plt>
  425820:	b	425828 <wcrtomb@plt+0x20ce8>
  425824:	mov	x0, xzr
  425828:	str	x0, [x19, #8]
  42582c:	ldr	w8, [x20]
  425830:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425834:	str	w8, [x19]
  425838:	ldr	x10, [x20, #16]
  42583c:	ldr	x8, [x9, #2176]
  425840:	str	x19, [x9, #2176]
  425844:	stp	x10, x8, [x19, #16]
  425848:	cbz	x8, 425884 <wcrtomb@plt+0x20d44>
  42584c:	ldr	w9, [x20]
  425850:	ldr	w10, [x8]
  425854:	cmp	w9, w10
  425858:	b.ne	425884 <wcrtomb@plt+0x20d44>  // b.any
  42585c:	cmp	w9, #0x1
  425860:	b.eq	425874 <wcrtomb@plt+0x20d34>  // b.none
  425864:	ldr	x0, [x20, #8]
  425868:	ldr	x1, [x8, #8]
  42586c:	bl	404660 <strcmp@plt>
  425870:	cbnz	w0, 425884 <wcrtomb@plt+0x20d44>
  425874:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425878:	ldr	w8, [x8, #3808]
  42587c:	cmp	w8, #0x1
  425880:	b.ne	426154 <wcrtomb@plt+0x21614>  // b.any
  425884:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425888:	mov	w9, #0x1                   	// #1
  42588c:	b	425c50 <wcrtomb@plt+0x21110>
  425890:	mov	w0, #0x20                  	// #32
  425894:	bl	4459e8 <argp_parse@@Base+0xe13c>
  425898:	ldr	x1, [x21, #8]
  42589c:	mov	x19, x0
  4258a0:	cbz	x1, 4258b4 <wcrtomb@plt+0x20d74>
  4258a4:	add	x20, x19, #0x20
  4258a8:	mov	x0, x20
  4258ac:	bl	404840 <strcpy@plt>
  4258b0:	b	4258b8 <wcrtomb@plt+0x20d78>
  4258b4:	mov	x20, xzr
  4258b8:	str	x20, [x19, #8]
  4258bc:	ldr	w8, [x21]
  4258c0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4258c4:	ldr	x11, [x9, #2136]
  4258c8:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4258cc:	str	w8, [x19]
  4258d0:	ldr	x8, [x21, #16]
  4258d4:	mov	w12, #0x1                   	// #1
  4258d8:	mov	w0, wzr
  4258dc:	str	x19, [x9, #2136]
  4258e0:	stp	x8, x11, [x19, #16]
  4258e4:	strb	w12, [x10, #3898]
  4258e8:	b	425a54 <wcrtomb@plt+0x20f14>
  4258ec:	mov	w0, #0x20                  	// #32
  4258f0:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4258f4:	ldr	x1, [x21, #8]
  4258f8:	mov	x20, x0
  4258fc:	cbz	x1, 42590c <wcrtomb@plt+0x20dcc>
  425900:	add	x0, x20, #0x20
  425904:	bl	404840 <strcpy@plt>
  425908:	b	425910 <wcrtomb@plt+0x20dd0>
  42590c:	mov	x0, xzr
  425910:	str	x0, [x20, #8]
  425914:	ldr	w8, [x21]
  425918:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42591c:	ldr	x10, [x9, #2112]
  425920:	str	w8, [x20]
  425924:	ldr	x8, [x21, #16]
  425928:	str	x20, [x9, #2112]
  42592c:	stp	x8, x10, [x20, #16]
  425930:	cbz	x19, 425964 <wcrtomb@plt+0x20e24>
  425934:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  425938:	add	x4, x4, #0x66
  42593c:	add	x3, sp, #0x38
  425940:	mov	w2, #0xa                   	// #10
  425944:	mov	x0, x19
  425948:	mov	x1, xzr
  42594c:	bl	445d5c <argp_parse@@Base+0xe4b0>
  425950:	cbnz	w0, 4260fc <wcrtomb@plt+0x215bc>
  425954:	ldr	x8, [sp, #56]
  425958:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42595c:	str	x8, [x9, #3816]
  425960:	b	425a54 <wcrtomb@plt+0x20f14>
  425964:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425968:	mov	w9, #0x1                   	// #1
  42596c:	mov	w0, wzr
  425970:	str	x9, [x8, #3816]
  425974:	b	425a54 <wcrtomb@plt+0x20f14>
  425978:	mov	w0, #0x20                  	// #32
  42597c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  425980:	ldr	x1, [x20, #8]
  425984:	mov	x19, x0
  425988:	cbz	x1, 425998 <wcrtomb@plt+0x20e58>
  42598c:	add	x0, x19, #0x20
  425990:	bl	404840 <strcpy@plt>
  425994:	b	42599c <wcrtomb@plt+0x20e5c>
  425998:	mov	x0, xzr
  42599c:	str	x0, [x19, #8]
  4259a0:	ldr	w8, [x20]
  4259a4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4259a8:	str	w8, [x19]
  4259ac:	ldr	x10, [x20, #16]
  4259b0:	ldr	x8, [x9, #2176]
  4259b4:	str	x19, [x9, #2176]
  4259b8:	stp	x10, x8, [x19, #16]
  4259bc:	cbz	x8, 4259f8 <wcrtomb@plt+0x20eb8>
  4259c0:	ldr	w9, [x20]
  4259c4:	ldr	w10, [x8]
  4259c8:	cmp	w9, w10
  4259cc:	b.ne	4259f8 <wcrtomb@plt+0x20eb8>  // b.any
  4259d0:	cmp	w9, #0x1
  4259d4:	b.eq	4259e8 <wcrtomb@plt+0x20ea8>  // b.none
  4259d8:	ldr	x0, [x20, #8]
  4259dc:	ldr	x1, [x8, #8]
  4259e0:	bl	404660 <strcmp@plt>
  4259e4:	cbnz	w0, 4259f8 <wcrtomb@plt+0x20eb8>
  4259e8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4259ec:	ldr	w8, [x8, #3808]
  4259f0:	cmp	w8, #0x6
  4259f4:	b.ne	42616c <wcrtomb@plt+0x2162c>  // b.any
  4259f8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4259fc:	mov	w9, #0x6                   	// #6
  425a00:	b	425c50 <wcrtomb@plt+0x21110>
  425a04:	mov	w0, #0x20                  	// #32
  425a08:	bl	4459e8 <argp_parse@@Base+0xe13c>
  425a0c:	ldr	x1, [x21, #8]
  425a10:	mov	x20, x0
  425a14:	cbz	x1, 425a24 <wcrtomb@plt+0x20ee4>
  425a18:	add	x0, x20, #0x20
  425a1c:	bl	404840 <strcpy@plt>
  425a20:	b	425a28 <wcrtomb@plt+0x20ee8>
  425a24:	mov	x0, xzr
  425a28:	str	x0, [x20, #8]
  425a2c:	ldr	w8, [x21]
  425a30:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425a34:	ldr	x10, [x9, #2144]
  425a38:	mov	x0, x19
  425a3c:	str	w8, [x20]
  425a40:	ldr	x8, [x21, #16]
  425a44:	str	x20, [x9, #2144]
  425a48:	stp	x8, x10, [x20, #16]
  425a4c:	bl	41dc98 <wcrtomb@plt+0x19158>
  425a50:	mov	w0, wzr
  425a54:	ldp	x20, x19, [sp, #224]
  425a58:	ldp	x22, x21, [sp, #208]
  425a5c:	ldp	x24, x23, [sp, #192]
  425a60:	ldp	x26, x25, [sp, #176]
  425a64:	ldp	x28, x27, [sp, #160]
  425a68:	ldp	x29, x30, [sp, #144]
  425a6c:	add	sp, sp, #0xf0
  425a70:	ret
  425a74:	mov	w0, #0x20                  	// #32
  425a78:	bl	4459e8 <argp_parse@@Base+0xe13c>
  425a7c:	ldr	x1, [x21, #8]
  425a80:	mov	x19, x0
  425a84:	cbz	x1, 425a98 <wcrtomb@plt+0x20f58>
  425a88:	add	x20, x19, #0x20
  425a8c:	mov	x0, x20
  425a90:	bl	404840 <strcpy@plt>
  425a94:	b	425a9c <wcrtomb@plt+0x20f5c>
  425a98:	mov	x20, xzr
  425a9c:	str	x20, [x19, #8]
  425aa0:	ldr	w8, [x21]
  425aa4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425aa8:	ldr	x11, [x9, #2168]
  425aac:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425ab0:	str	w8, [x19]
  425ab4:	ldr	x8, [x21, #16]
  425ab8:	mov	w12, #0x1                   	// #1
  425abc:	mov	w0, wzr
  425ac0:	str	x19, [x9, #2168]
  425ac4:	stp	x8, x11, [x19, #16]
  425ac8:	strb	w12, [x10, #4008]
  425acc:	b	425a54 <wcrtomb@plt+0x20f14>
  425ad0:	mov	w0, #0x20                  	// #32
  425ad4:	bl	4459e8 <argp_parse@@Base+0xe13c>
  425ad8:	ldr	x1, [x20, #8]
  425adc:	mov	x19, x0
  425ae0:	cbz	x1, 425af0 <wcrtomb@plt+0x20fb0>
  425ae4:	add	x0, x19, #0x20
  425ae8:	bl	404840 <strcpy@plt>
  425aec:	b	425af4 <wcrtomb@plt+0x20fb4>
  425af0:	mov	x0, xzr
  425af4:	str	x0, [x19, #8]
  425af8:	ldr	w8, [x20]
  425afc:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425b00:	str	w8, [x19]
  425b04:	ldr	x10, [x20, #16]
  425b08:	ldr	x8, [x9, #2176]
  425b0c:	str	x19, [x9, #2176]
  425b10:	stp	x10, x8, [x19, #16]
  425b14:	cbz	x8, 425b50 <wcrtomb@plt+0x21010>
  425b18:	ldr	w9, [x20]
  425b1c:	ldr	w10, [x8]
  425b20:	cmp	w9, w10
  425b24:	b.ne	425b50 <wcrtomb@plt+0x21010>  // b.any
  425b28:	cmp	w9, #0x1
  425b2c:	b.eq	425b40 <wcrtomb@plt+0x21000>  // b.none
  425b30:	ldr	x0, [x20, #8]
  425b34:	ldr	x1, [x8, #8]
  425b38:	bl	404660 <strcmp@plt>
  425b3c:	cbnz	w0, 425b50 <wcrtomb@plt+0x21010>
  425b40:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425b44:	ldr	w8, [x8, #3808]
  425b48:	cmp	w8, #0x4
  425b4c:	b.ne	426184 <wcrtomb@plt+0x21644>  // b.any
  425b50:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425b54:	mov	w9, #0x4                   	// #4
  425b58:	b	425c50 <wcrtomb@plt+0x21110>
  425b5c:	mov	w0, #0x20                  	// #32
  425b60:	bl	4459e8 <argp_parse@@Base+0xe13c>
  425b64:	ldr	x1, [x21, #8]
  425b68:	mov	x20, x0
  425b6c:	cbz	x1, 425b7c <wcrtomb@plt+0x2103c>
  425b70:	add	x0, x20, #0x20
  425b74:	bl	404840 <strcpy@plt>
  425b78:	b	425b80 <wcrtomb@plt+0x21040>
  425b7c:	mov	x0, xzr
  425b80:	str	x0, [x20, #8]
  425b84:	ldr	w9, [x21]
  425b88:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425b8c:	ldr	x13, [x8, #2120]
  425b90:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425b94:	str	w9, [x20]
  425b98:	ldr	x9, [x21, #16]
  425b9c:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425ba0:	mov	w12, #0x1                   	// #1
  425ba4:	str	x20, [x8, #2120]
  425ba8:	str	x19, [x10, #3888]
  425bac:	stp	x9, x13, [x20, #16]
  425bb0:	str	w12, [x11, #4028]
  425bb4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425bb8:	mov	w9, #0x1                   	// #1
  425bbc:	mov	w0, wzr
  425bc0:	strb	w9, [x8, #3089]
  425bc4:	b	425a54 <wcrtomb@plt+0x20f14>
  425bc8:	mov	w0, #0x20                  	// #32
  425bcc:	bl	4459e8 <argp_parse@@Base+0xe13c>
  425bd0:	ldr	x1, [x20, #8]
  425bd4:	mov	x19, x0
  425bd8:	cbz	x1, 425be8 <wcrtomb@plt+0x210a8>
  425bdc:	add	x0, x19, #0x20
  425be0:	bl	404840 <strcpy@plt>
  425be4:	b	425bec <wcrtomb@plt+0x210ac>
  425be8:	mov	x0, xzr
  425bec:	str	x0, [x19, #8]
  425bf0:	ldr	w8, [x20]
  425bf4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425bf8:	str	w8, [x19]
  425bfc:	ldr	x10, [x20, #16]
  425c00:	ldr	x8, [x9, #2176]
  425c04:	str	x19, [x9, #2176]
  425c08:	stp	x10, x8, [x19, #16]
  425c0c:	cbz	x8, 425c48 <wcrtomb@plt+0x21108>
  425c10:	ldr	w9, [x20]
  425c14:	ldr	w10, [x8]
  425c18:	cmp	w9, w10
  425c1c:	b.ne	425c48 <wcrtomb@plt+0x21108>  // b.any
  425c20:	cmp	w9, #0x1
  425c24:	b.eq	425c38 <wcrtomb@plt+0x210f8>  // b.none
  425c28:	ldr	x0, [x20, #8]
  425c2c:	ldr	x1, [x8, #8]
  425c30:	bl	404660 <strcmp@plt>
  425c34:	cbnz	w0, 425c48 <wcrtomb@plt+0x21108>
  425c38:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425c3c:	ldr	w8, [x8, #3808]
  425c40:	cmp	w8, #0x3
  425c44:	b.ne	42619c <wcrtomb@plt+0x2165c>  // b.any
  425c48:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425c4c:	mov	w9, #0x3                   	// #3
  425c50:	mov	w0, wzr
  425c54:	str	w9, [x8, #3808]
  425c58:	b	425a54 <wcrtomb@plt+0x20f14>
  425c5c:	mov	w0, #0x20                  	// #32
  425c60:	bl	4459e8 <argp_parse@@Base+0xe13c>
  425c64:	ldr	x1, [x20, #8]
  425c68:	mov	x19, x0
  425c6c:	cbz	x1, 425c7c <wcrtomb@plt+0x2113c>
  425c70:	add	x0, x19, #0x20
  425c74:	bl	404840 <strcpy@plt>
  425c78:	b	425c80 <wcrtomb@plt+0x21140>
  425c7c:	mov	x0, xzr
  425c80:	str	x0, [x19, #8]
  425c84:	ldr	w8, [x20]
  425c88:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425c8c:	str	w8, [x19]
  425c90:	ldr	x10, [x20, #16]
  425c94:	ldr	x8, [x9, #2176]
  425c98:	str	x19, [x9, #2176]
  425c9c:	stp	x10, x8, [x19, #16]
  425ca0:	cbz	x8, 425cd8 <wcrtomb@plt+0x21198>
  425ca4:	ldr	w9, [x20]
  425ca8:	ldr	w10, [x8]
  425cac:	cmp	w9, w10
  425cb0:	b.ne	425cd8 <wcrtomb@plt+0x21198>  // b.any
  425cb4:	cmp	w9, #0x1
  425cb8:	b.eq	425ccc <wcrtomb@plt+0x2118c>  // b.none
  425cbc:	ldr	x0, [x20, #8]
  425cc0:	ldr	x1, [x8, #8]
  425cc4:	bl	404660 <strcmp@plt>
  425cc8:	cbnz	w0, 425cd8 <wcrtomb@plt+0x21198>
  425ccc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425cd0:	ldr	w8, [x8, #3808]
  425cd4:	cbnz	w8, 4261b4 <wcrtomb@plt+0x21674>
  425cd8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425cdc:	mov	w0, wzr
  425ce0:	str	wzr, [x8, #3808]
  425ce4:	b	425a54 <wcrtomb@plt+0x20f14>
  425ce8:	mov	w0, #0x20                  	// #32
  425cec:	bl	4459e8 <argp_parse@@Base+0xe13c>
  425cf0:	ldr	x1, [x21, #8]
  425cf4:	mov	x19, x0
  425cf8:	cbz	x1, 425d0c <wcrtomb@plt+0x211cc>
  425cfc:	add	x20, x19, #0x20
  425d00:	mov	x0, x20
  425d04:	bl	404840 <strcpy@plt>
  425d08:	b	425d10 <wcrtomb@plt+0x211d0>
  425d0c:	mov	x20, xzr
  425d10:	str	x20, [x19, #8]
  425d14:	ldr	w8, [x21]
  425d18:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425d1c:	ldr	x11, [x9, #2152]
  425d20:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425d24:	str	w8, [x19]
  425d28:	ldr	x8, [x21, #16]
  425d2c:	mov	w12, #0x1                   	// #1
  425d30:	mov	w0, wzr
  425d34:	str	x19, [x9, #2152]
  425d38:	stp	x8, x11, [x19, #16]
  425d3c:	strb	w12, [x10, #3696]
  425d40:	b	425a54 <wcrtomb@plt+0x20f14>
  425d44:	mov	w0, #0x20                  	// #32
  425d48:	bl	4459e8 <argp_parse@@Base+0xe13c>
  425d4c:	ldr	x1, [x20, #8]
  425d50:	mov	x19, x0
  425d54:	cbz	x1, 425d64 <wcrtomb@plt+0x21224>
  425d58:	add	x0, x19, #0x20
  425d5c:	bl	404840 <strcpy@plt>
  425d60:	b	425d68 <wcrtomb@plt+0x21228>
  425d64:	mov	x0, xzr
  425d68:	str	x0, [x19, #8]
  425d6c:	ldr	w8, [x20]
  425d70:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425d74:	str	w8, [x19]
  425d78:	ldr	x10, [x20, #16]
  425d7c:	ldr	x8, [x9, #2176]
  425d80:	str	x19, [x9, #2176]
  425d84:	stp	x10, x8, [x19, #16]
  425d88:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425d8c:	cbz	x8, 425dc4 <wcrtomb@plt+0x21284>
  425d90:	ldr	w9, [x20]
  425d94:	ldr	w10, [x8]
  425d98:	cmp	w9, w10
  425d9c:	b.ne	425dc4 <wcrtomb@plt+0x21284>  // b.any
  425da0:	cmp	w9, #0x1
  425da4:	b.eq	425db8 <wcrtomb@plt+0x21278>  // b.none
  425da8:	ldr	x0, [x20, #8]
  425dac:	ldr	x1, [x8, #8]
  425db0:	bl	404660 <strcmp@plt>
  425db4:	cbnz	w0, 425dc4 <wcrtomb@plt+0x21284>
  425db8:	ldr	w8, [x19, #3808]
  425dbc:	cmp	w8, #0x5
  425dc0:	b.ne	4261cc <wcrtomb@plt+0x2168c>  // b.any
  425dc4:	mov	w8, #0x5                   	// #5
  425dc8:	mov	w0, wzr
  425dcc:	str	w8, [x19, #3808]
  425dd0:	b	425a54 <wcrtomb@plt+0x20f14>
  425dd4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425dd8:	ldr	x0, [x8, #3584]
  425ddc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425de0:	mov	w9, #0xffffffff            	// #-1
  425de4:	str	w9, [x8, #3760]
  425de8:	cbz	x0, 425a54 <wcrtomb@plt+0x20f14>
  425dec:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425df0:	add	x1, x1, #0xeb0
  425df4:	bl	41c83c <wcrtomb@plt+0x17cfc>
  425df8:	b	425a50 <wcrtomb@plt+0x20f10>
  425dfc:	mov	w0, #0x20                  	// #32
  425e00:	bl	4459e8 <argp_parse@@Base+0xe13c>
  425e04:	ldr	x1, [x22, #8]
  425e08:	mov	x20, x0
  425e0c:	cbz	x1, 425e20 <wcrtomb@plt+0x212e0>
  425e10:	add	x21, x20, #0x20
  425e14:	mov	x0, x21
  425e18:	bl	404840 <strcpy@plt>
  425e1c:	b	425e24 <wcrtomb@plt+0x212e4>
  425e20:	mov	x21, xzr
  425e24:	str	x21, [x20, #8]
  425e28:	ldr	w9, [x22]
  425e2c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425e30:	ldr	x13, [x8, #2160]
  425e34:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425e38:	str	w9, [x20]
  425e3c:	ldr	x9, [x22, #16]
  425e40:	mov	w11, #0x1                   	// #1
  425e44:	adrp	x12, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425e48:	mov	w0, wzr
  425e4c:	str	x20, [x8, #2160]
  425e50:	strb	w11, [x10, #3899]
  425e54:	stp	x9, x13, [x20, #16]
  425e58:	str	x19, [x12, #3624]
  425e5c:	b	425a54 <wcrtomb@plt+0x20f14>
  425e60:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425e64:	mov	w9, #0x1                   	// #1
  425e68:	mov	w0, wzr
  425e6c:	strb	w9, [x8, #3753]
  425e70:	b	425a54 <wcrtomb@plt+0x20f14>
  425e74:	ldr	d0, [sp, #56]
  425e78:	mov	x8, #0x4090000000000000    	// #4652218415073722368
  425e7c:	fmov	d1, x8
  425e80:	ucvtf	d0, d0
  425e84:	fmul	d0, d0, d1
  425e88:	b	425214 <wcrtomb@plt+0x206d4>
  425e8c:	cbz	x9, 425e9c <wcrtomb@plt+0x2135c>
  425e90:	lsr	x10, x9, #60
  425e94:	cbz	x10, 425ea0 <wcrtomb@plt+0x21360>
  425e98:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  425e9c:	mov	w9, #0x10                  	// #16
  425ea0:	lsl	x1, x9, #3
  425ea4:	str	x9, [x8, #2088]
  425ea8:	bl	445a68 <argp_parse@@Base+0xe1bc>
  425eac:	ldr	x9, [x20, #3904]
  425eb0:	mov	x8, x0
  425eb4:	str	x0, [x21, #3744]
  425eb8:	add	x10, x9, #0x1
  425ebc:	mov	w0, wzr
  425ec0:	str	x10, [x20, #3904]
  425ec4:	str	x19, [x8, x9, lsl #3]
  425ec8:	b	425a54 <wcrtomb@plt+0x20f14>
  425ecc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  425ed0:	mov	x22, x2
  425ed4:	add	x1, x1, #0x3fe
  425ed8:	mov	w2, #0x5                   	// #5
  425edc:	mov	x0, xzr
  425ee0:	bl	404900 <dcgettext@plt>
  425ee4:	mov	x1, x0
  425ee8:	mov	x0, x22
  425eec:	bl	435cf0 <argp_error@@Base>
  425ef0:	mov	w0, #0x40                  	// #64
  425ef4:	bl	403f70 <exit@plt>
  425ef8:	bl	415c4c <wcrtomb@plt+0x1110c>
  425efc:	bl	439028 <argp_parse@@Base+0x177c>
  425f00:	mov	w0, wzr
  425f04:	bl	403f70 <exit@plt>
  425f08:	bl	426b40 <wcrtomb@plt+0x22000>
  425f0c:	mov	x19, x0
  425f10:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  425f14:	add	x1, x1, #0x50b
  425f18:	mov	w0, #0x1                   	// #1
  425f1c:	mov	x2, x19
  425f20:	bl	404350 <__printf_chk@plt>
  425f24:	bl	439028 <argp_parse@@Base+0x177c>
  425f28:	mov	x0, x19
  425f2c:	bl	404700 <free@plt>
  425f30:	mov	w0, wzr
  425f34:	bl	403f70 <exit@plt>
  425f38:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  425f3c:	add	x1, x1, #0x44e
  425f40:	mov	w2, #0x5                   	// #5
  425f44:	mov	x0, xzr
  425f48:	bl	404900 <dcgettext@plt>
  425f4c:	ldr	x8, [x20]
  425f50:	mov	x2, x0
  425f54:	mov	w0, wzr
  425f58:	mov	w1, wzr
  425f5c:	ldr	x3, [x8, #8]
  425f60:	bl	403fa0 <error@plt>
  425f64:	mov	w0, #0x40                  	// #64
  425f68:	bl	403f70 <exit@plt>
  425f6c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425f70:	ldr	x8, [x8, #4064]
  425f74:	cbz	x8, 425f7c <wcrtomb@plt+0x2143c>
  425f78:	blr	x8
  425f7c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  425f80:	add	x1, x1, #0x45f
  425f84:	mov	w2, #0x5                   	// #5
  425f88:	mov	x0, xzr
  425f8c:	bl	404900 <dcgettext@plt>
  425f90:	mov	x2, x0
  425f94:	mov	w0, wzr
  425f98:	mov	w1, wzr
  425f9c:	bl	403fa0 <error@plt>
  425fa0:	mov	w0, #0x2                   	// #2
  425fa4:	bl	422db4 <wcrtomb@plt+0x1e274>
  425fa8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425fac:	ldr	x8, [x8, #4064]
  425fb0:	cbz	x8, 425fb8 <wcrtomb@plt+0x21478>
  425fb4:	blr	x8
  425fb8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  425fbc:	add	x1, x1, #0x2b5
  425fc0:	b	425f84 <wcrtomb@plt+0x21444>
  425fc4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425fc8:	ldr	x8, [x8, #4064]
  425fcc:	cbz	x8, 425fd4 <wcrtomb@plt+0x21494>
  425fd0:	blr	x8
  425fd4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  425fd8:	add	x1, x1, #0x3d9
  425fdc:	b	425f84 <wcrtomb@plt+0x21444>
  425fe0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  425fe4:	ldr	x8, [x8, #4064]
  425fe8:	cbz	x8, 425ff0 <wcrtomb@plt+0x214b0>
  425fec:	blr	x8
  425ff0:	mov	x0, x19
  425ff4:	bl	444778 <argp_parse@@Base+0xcecc>
  425ff8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  425ffc:	mov	x19, x0
  426000:	add	x1, x1, #0x37d
  426004:	b	4260cc <wcrtomb@plt+0x2158c>
  426008:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42600c:	ldr	x8, [x8, #4064]
  426010:	cbz	x8, 426018 <wcrtomb@plt+0x214d8>
  426014:	blr	x8
  426018:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  42601c:	add	x1, x1, #0x391
  426020:	mov	w2, #0x5                   	// #5
  426024:	mov	x0, xzr
  426028:	bl	404900 <dcgettext@plt>
  42602c:	mov	x2, x0
  426030:	mov	w3, #0x200                 	// #512
  426034:	mov	w0, wzr
  426038:	mov	w1, wzr
  42603c:	bl	403fa0 <error@plt>
  426040:	mov	w0, #0x2                   	// #2
  426044:	bl	422db4 <wcrtomb@plt+0x1e274>
  426048:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42604c:	ldr	x8, [x8, #4064]
  426050:	cbz	x8, 426058 <wcrtomb@plt+0x21518>
  426054:	blr	x8
  426058:	mov	x0, x19
  42605c:	bl	444778 <argp_parse@@Base+0xcecc>
  426060:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426064:	mov	x19, x0
  426068:	add	x1, x1, #0x3b7
  42606c:	b	4260cc <wcrtomb@plt+0x2158c>
  426070:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  426074:	ldr	x8, [x8, #4064]
  426078:	cbz	x8, 426080 <wcrtomb@plt+0x21540>
  42607c:	blr	x8
  426080:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426084:	add	x1, x1, #0x351
  426088:	mov	w2, #0x5                   	// #5
  42608c:	mov	x0, xzr
  426090:	bl	404900 <dcgettext@plt>
  426094:	mov	x2, x0
  426098:	mov	w0, wzr
  42609c:	mov	w1, wzr
  4260a0:	bl	403fa0 <error@plt>
  4260a4:	bl	40e96c <wcrtomb@plt+0x9e2c>
  4260a8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4260ac:	ldr	x8, [x8, #4064]
  4260b0:	cbz	x8, 4260b8 <wcrtomb@plt+0x21578>
  4260b4:	blr	x8
  4260b8:	mov	x0, x19
  4260bc:	bl	444778 <argp_parse@@Base+0xcecc>
  4260c0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4260c4:	mov	x19, x0
  4260c8:	add	x1, x1, #0x281
  4260cc:	mov	w2, #0x5                   	// #5
  4260d0:	mov	x0, xzr
  4260d4:	bl	404900 <dcgettext@plt>
  4260d8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4260dc:	mov	x4, x0
  4260e0:	add	x2, x2, #0x5d8
  4260e4:	mov	w0, wzr
  4260e8:	mov	w1, wzr
  4260ec:	mov	x3, x19
  4260f0:	bl	403fa0 <error@plt>
  4260f4:	mov	w0, #0x2                   	// #2
  4260f8:	bl	422db4 <wcrtomb@plt+0x1e274>
  4260fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  426100:	ldr	x8, [x8, #4064]
  426104:	cbz	x8, 42610c <wcrtomb@plt+0x215cc>
  426108:	blr	x8
  42610c:	mov	x0, x19
  426110:	bl	444778 <argp_parse@@Base+0xcecc>
  426114:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426118:	mov	x19, x0
  42611c:	add	x1, x1, #0x36e
  426120:	mov	w2, #0x5                   	// #5
  426124:	mov	x0, xzr
  426128:	bl	404900 <dcgettext@plt>
  42612c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  426130:	mov	x4, x0
  426134:	add	x2, x2, #0x5d8
  426138:	b	4249d8 <wcrtomb@plt+0x1fe98>
  42613c:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0x184b0>
  426140:	add	x9, x9, #0x2f0
  426144:	ldr	x1, [x9, x8, lsl #3]
  426148:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  42614c:	add	x0, x0, #0x4f5
  426150:	bl	426b74 <wcrtomb@plt+0x22034>
  426154:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0x184b0>
  426158:	add	x9, x9, #0x2f0
  42615c:	ldr	x1, [x9, x8, lsl #3]
  426160:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426164:	add	x0, x0, #0x4e2
  426168:	bl	426b74 <wcrtomb@plt+0x22034>
  42616c:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0x184b0>
  426170:	add	x9, x9, #0x2f0
  426174:	ldr	x1, [x9, x8, lsl #3]
  426178:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  42617c:	add	x0, x0, #0x532
  426180:	bl	426b74 <wcrtomb@plt+0x22034>
  426184:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0x184b0>
  426188:	add	x9, x9, #0x2f0
  42618c:	ldr	x1, [x9, x8, lsl #3]
  426190:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426194:	add	x0, x0, #0x510
  426198:	bl	426b74 <wcrtomb@plt+0x22034>
  42619c:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0x184b0>
  4261a0:	add	x9, x9, #0x2f0
  4261a4:	ldr	x1, [x9, x8, lsl #3]
  4261a8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4261ac:	add	x0, x0, #0x501
  4261b0:	bl	426b74 <wcrtomb@plt+0x22034>
  4261b4:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0x184b0>
  4261b8:	add	x9, x9, #0x2f0
  4261bc:	ldr	x1, [x9, x8, lsl #3]
  4261c0:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4261c4:	add	x0, x0, #0x4d2
  4261c8:	bl	426b74 <wcrtomb@plt+0x22034>
  4261cc:	adrp	x9, 45f000 <_obstack_memory_used@@Base+0x184b0>
  4261d0:	add	x9, x9, #0x2f0
  4261d4:	ldr	x1, [x9, x8, lsl #3]
  4261d8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4261dc:	add	x0, x0, #0x521
  4261e0:	bl	426b74 <wcrtomb@plt+0x22034>
  4261e4:	sub	sp, sp, #0xb0
  4261e8:	stp	x20, x19, [sp, #160]
  4261ec:	cmp	w0, #0x113
  4261f0:	mov	x19, x1
  4261f4:	stp	x29, x30, [sp, #96]
  4261f8:	str	x25, [sp, #112]
  4261fc:	stp	x24, x23, [sp, #128]
  426200:	stp	x22, x21, [sp, #144]
  426204:	add	x29, sp, #0x60
  426208:	b.le	4263ac <wcrtomb@plt+0x2186c>
  42620c:	cmp	w0, #0x115
  426210:	b.le	426414 <wcrtomb@plt+0x218d4>
  426214:	cmp	w0, #0x116
  426218:	b.eq	426444 <wcrtomb@plt+0x21904>  // b.none
  42621c:	cmp	w0, #0x14f
  426220:	b.eq	426464 <wcrtomb@plt+0x21924>  // b.none
  426224:	mov	w8, #0x4                   	// #4
  426228:	movk	w8, #0x200, lsl #16
  42622c:	cmp	w0, w8
  426230:	b.ne	426664 <wcrtomb@plt+0x21b24>  // b.any
  426234:	adrp	x3, 445000 <argp_parse@@Base+0xd754>
  426238:	adrp	x4, 404000 <sigprocmask@plt>
  42623c:	add	x3, x3, #0x9e8
  426240:	add	x4, x4, #0x700
  426244:	add	x0, sp, #0x8
  426248:	mov	x1, xzr
  42624c:	mov	x2, xzr
  426250:	bl	4467e8 <_obstack_begin@@Base>
  426254:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426258:	add	x1, x1, #0x6ae
  42625c:	mov	w2, #0x5                   	// #5
  426260:	mov	x0, xzr
  426264:	bl	404900 <dcgettext@plt>
  426268:	mov	x20, x0
  42626c:	bl	403f40 <strlen@plt>
  426270:	mov	x19, x0
  426274:	ldp	x0, x8, [sp, #32]
  426278:	sub	x8, x8, x0
  42627c:	cmp	x8, x19
  426280:	b.cs	426294 <wcrtomb@plt+0x21754>  // b.hs, b.nlast
  426284:	add	x0, sp, #0x8
  426288:	mov	x1, x19
  42628c:	bl	44693c <_obstack_newchunk@@Base>
  426290:	ldr	x0, [sp, #32]
  426294:	mov	x1, x20
  426298:	mov	x2, x19
  42629c:	bl	403ec0 <memcpy@plt>
  4262a0:	ldp	x8, x9, [sp, #32]
  4262a4:	add	x8, x8, x19
  4262a8:	sub	x9, x9, x8
  4262ac:	cmp	x9, #0x1
  4262b0:	str	x8, [sp, #32]
  4262b4:	b.hi	4262c8 <wcrtomb@plt+0x21788>  // b.pmore
  4262b8:	add	x0, sp, #0x8
  4262bc:	mov	w1, #0x2                   	// #2
  4262c0:	bl	44693c <_obstack_newchunk@@Base>
  4262c4:	ldr	x8, [sp, #32]
  4262c8:	mov	w9, #0xa0a                 	// #2570
  4262cc:	strh	w9, [x8]
  4262d0:	ldr	x8, [sp, #32]
  4262d4:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4262d8:	ldr	x19, [x9, #608]
  4262dc:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4262e0:	add	x8, x8, #0x2
  4262e4:	add	x22, x22, #0x260
  4262e8:	str	x8, [sp, #32]
  4262ec:	cbz	x19, 426484 <wcrtomb@plt+0x21944>
  4262f0:	add	x23, x22, #0x8
  4262f4:	mov	w24, #0x2020                	// #8224
  4262f8:	mov	w25, #0xa                   	// #10
  4262fc:	ldr	x9, [sp, #40]
  426300:	sub	x9, x9, x8
  426304:	cmp	x9, #0x1
  426308:	b.hi	42631c <wcrtomb@plt+0x217dc>  // b.pmore
  42630c:	add	x0, sp, #0x8
  426310:	mov	w1, #0x2                   	// #2
  426314:	bl	44693c <_obstack_newchunk@@Base>
  426318:	ldr	x8, [sp, #32]
  42631c:	strh	w24, [x8]
  426320:	ldr	x8, [sp, #32]
  426324:	mov	x0, x19
  426328:	add	x21, x8, #0x2
  42632c:	str	x21, [sp, #32]
  426330:	bl	403f40 <strlen@plt>
  426334:	ldr	x8, [sp, #40]
  426338:	mov	x20, x0
  42633c:	sub	x8, x8, x21
  426340:	cmp	x8, x0
  426344:	b.cs	426358 <wcrtomb@plt+0x21818>  // b.hs, b.nlast
  426348:	add	x0, sp, #0x8
  42634c:	mov	x1, x20
  426350:	bl	44693c <_obstack_newchunk@@Base>
  426354:	ldr	x21, [sp, #32]
  426358:	mov	x0, x21
  42635c:	mov	x1, x19
  426360:	mov	x2, x20
  426364:	bl	403ec0 <memcpy@plt>
  426368:	ldp	x8, x9, [sp, #32]
  42636c:	add	x8, x8, x20
  426370:	cmp	x9, x8
  426374:	str	x8, [sp, #32]
  426378:	b.ne	42638c <wcrtomb@plt+0x2184c>  // b.any
  42637c:	add	x0, sp, #0x8
  426380:	mov	w1, #0x1                   	// #1
  426384:	bl	44693c <_obstack_newchunk@@Base>
  426388:	ldr	x8, [sp, #32]
  42638c:	add	x9, x8, #0x1
  426390:	str	x9, [sp, #32]
  426394:	strb	w25, [x8]
  426398:	ldr	x19, [x23]
  42639c:	cbz	x19, 426484 <wcrtomb@plt+0x21944>
  4263a0:	ldr	x8, [sp, #32]
  4263a4:	add	x23, x23, #0x8
  4263a8:	b	4262fc <wcrtomb@plt+0x217bc>
  4263ac:	cmp	w0, #0x69
  4263b0:	b.gt	4263e4 <wcrtomb@plt+0x218a4>
  4263b4:	cmp	w0, #0x4a
  4263b8:	b.eq	426600 <wcrtomb@plt+0x21ac0>  // b.none
  4263bc:	cmp	w0, #0x5a
  4263c0:	b.ne	426664 <wcrtomb@plt+0x21b24>  // b.any
  4263c4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4263c8:	add	x1, x1, #0x690
  4263cc:	mov	w2, #0x5                   	// #5
  4263d0:	mov	x0, xzr
  4263d4:	bl	404900 <dcgettext@plt>
  4263d8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x194b0>
  4263dc:	add	x1, x1, #0x946
  4263e0:	b	42665c <wcrtomb@plt+0x21b1c>
  4263e4:	cmp	w0, #0x6a
  4263e8:	b.eq	426620 <wcrtomb@plt+0x21ae0>  // b.none
  4263ec:	cmp	w0, #0x7a
  4263f0:	b.ne	426664 <wcrtomb@plt+0x21b24>  // b.any
  4263f4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4263f8:	add	x1, x1, #0x690
  4263fc:	mov	w2, #0x5                   	// #5
  426400:	mov	x0, xzr
  426404:	bl	404900 <dcgettext@plt>
  426408:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x194b0>
  42640c:	add	x1, x1, #0x9d6
  426410:	b	42665c <wcrtomb@plt+0x21b1c>
  426414:	cmp	w0, #0x114
  426418:	b.eq	426640 <wcrtomb@plt+0x21b00>  // b.none
  42641c:	cmp	w0, #0x115
  426420:	b.ne	426664 <wcrtomb@plt+0x21b24>  // b.any
  426424:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426428:	add	x1, x1, #0x690
  42642c:	mov	w2, #0x5                   	// #5
  426430:	mov	x0, xzr
  426434:	bl	404900 <dcgettext@plt>
  426438:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  42643c:	add	x1, x1, #0x34b
  426440:	b	42665c <wcrtomb@plt+0x21b1c>
  426444:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426448:	add	x1, x1, #0x690
  42644c:	mov	w2, #0x5                   	// #5
  426450:	mov	x0, xzr
  426454:	bl	404900 <dcgettext@plt>
  426458:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  42645c:	add	x1, x1, #0x355
  426460:	b	42665c <wcrtomb@plt+0x21b1c>
  426464:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426468:	add	x1, x1, #0x690
  42646c:	mov	w2, #0x5                   	// #5
  426470:	mov	x0, xzr
  426474:	bl	404900 <dcgettext@plt>
  426478:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  42647c:	add	x1, x1, #0x35c
  426480:	b	42665c <wcrtomb@plt+0x21b1c>
  426484:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426488:	add	x1, x1, #0x6e2
  42648c:	mov	w2, #0x5                   	// #5
  426490:	mov	x0, xzr
  426494:	bl	404900 <dcgettext@plt>
  426498:	mov	x20, x0
  42649c:	bl	403f40 <strlen@plt>
  4264a0:	mov	x19, x0
  4264a4:	ldp	x0, x8, [sp, #32]
  4264a8:	sub	x8, x8, x0
  4264ac:	cmp	x8, x19
  4264b0:	b.cs	4264c4 <wcrtomb@plt+0x21984>  // b.hs, b.nlast
  4264b4:	add	x0, sp, #0x8
  4264b8:	mov	x1, x19
  4264bc:	bl	44693c <_obstack_newchunk@@Base>
  4264c0:	ldr	x0, [sp, #32]
  4264c4:	mov	x1, x20
  4264c8:	mov	x2, x19
  4264cc:	bl	403ec0 <memcpy@plt>
  4264d0:	ldr	x8, [sp, #32]
  4264d4:	ldr	x4, [x22, #56]
  4264d8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4264dc:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x194b0>
  4264e0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4264e4:	adrp	x5, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4264e8:	add	x8, x8, x19
  4264ec:	add	x0, x0, #0x640
  4264f0:	add	x1, x1, #0x7ba
  4264f4:	add	x2, x2, #0x85
  4264f8:	add	x5, x5, #0x67a
  4264fc:	mov	w3, #0x14                  	// #20
  426500:	str	x8, [sp, #32]
  426504:	bl	4460fc <argp_parse@@Base+0xe850>
  426508:	mov	x20, x0
  42650c:	bl	403f40 <strlen@plt>
  426510:	mov	x19, x0
  426514:	ldp	x0, x8, [sp, #32]
  426518:	sub	x8, x8, x0
  42651c:	cmp	x8, x19
  426520:	b.cs	426534 <wcrtomb@plt+0x219f4>  // b.hs, b.nlast
  426524:	add	x0, sp, #0x8
  426528:	mov	x1, x19
  42652c:	bl	44693c <_obstack_newchunk@@Base>
  426530:	ldr	x0, [sp, #32]
  426534:	mov	x1, x20
  426538:	mov	x2, x19
  42653c:	bl	403ec0 <memcpy@plt>
  426540:	ldp	x8, x9, [sp, #32]
  426544:	add	x8, x8, x19
  426548:	cmp	x9, x8
  42654c:	str	x8, [sp, #32]
  426550:	b.ne	426564 <wcrtomb@plt+0x21a24>  // b.any
  426554:	add	x0, sp, #0x8
  426558:	mov	w1, #0x1                   	// #1
  42655c:	bl	44693c <_obstack_newchunk@@Base>
  426560:	ldr	x8, [sp, #32]
  426564:	add	x9, x8, #0x1
  426568:	mov	w10, #0xa                   	// #10
  42656c:	str	x9, [sp, #32]
  426570:	strb	w10, [x8]
  426574:	ldp	x8, x9, [sp, #32]
  426578:	cmp	x9, x8
  42657c:	b.ne	426590 <wcrtomb@plt+0x21a50>  // b.any
  426580:	add	x0, sp, #0x8
  426584:	mov	w1, #0x1                   	// #1
  426588:	bl	44693c <_obstack_newchunk@@Base>
  42658c:	ldr	x8, [sp, #32]
  426590:	add	x9, x8, #0x1
  426594:	str	x9, [sp, #32]
  426598:	strb	wzr, [x8]
  42659c:	ldp	x0, x8, [sp, #24]
  4265a0:	cmp	x8, x0
  4265a4:	b.ne	4265b4 <wcrtomb@plt+0x21a74>  // b.any
  4265a8:	ldrb	w9, [sp, #88]
  4265ac:	orr	w9, w9, #0x2
  4265b0:	strb	w9, [sp, #88]
  4265b4:	ldr	x10, [sp, #56]
  4265b8:	ldr	x11, [sp, #16]
  4265bc:	ldr	x9, [sp, #40]
  4265c0:	add	x8, x10, x8
  4265c4:	bic	x8, x8, x10
  4265c8:	sub	x10, x8, x11
  4265cc:	sub	x11, x9, x11
  4265d0:	cmp	x10, x11
  4265d4:	str	x8, [sp, #32]
  4265d8:	b.ls	4265e4 <wcrtomb@plt+0x21aa4>  // b.plast
  4265dc:	mov	x8, x9
  4265e0:	str	x9, [sp, #32]
  4265e4:	str	x8, [sp, #24]
  4265e8:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4265ec:	mov	x19, x0
  4265f0:	add	x0, sp, #0x8
  4265f4:	mov	x1, xzr
  4265f8:	bl	446ab4 <_obstack_free@@Base>
  4265fc:	b	426664 <wcrtomb@plt+0x21b24>
  426600:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426604:	add	x1, x1, #0x690
  426608:	mov	w2, #0x5                   	// #5
  42660c:	mov	x0, xzr
  426610:	bl	404900 <dcgettext@plt>
  426614:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x174b0>
  426618:	add	x1, x1, #0x854
  42661c:	b	42665c <wcrtomb@plt+0x21b1c>
  426620:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426624:	add	x1, x1, #0x690
  426628:	mov	w2, #0x5                   	// #5
  42662c:	mov	x0, xzr
  426630:	bl	404900 <dcgettext@plt>
  426634:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  426638:	add	x1, x1, #0x33c
  42663c:	b	42665c <wcrtomb@plt+0x21b1c>
  426640:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426644:	add	x1, x1, #0x690
  426648:	mov	w2, #0x5                   	// #5
  42664c:	mov	x0, xzr
  426650:	bl	404900 <dcgettext@plt>
  426654:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  426658:	add	x1, x1, #0x344
  42665c:	bl	4460fc <argp_parse@@Base+0xe850>
  426660:	mov	x19, x0
  426664:	mov	x0, x19
  426668:	ldp	x20, x19, [sp, #160]
  42666c:	ldp	x22, x21, [sp, #144]
  426670:	ldp	x24, x23, [sp, #128]
  426674:	ldr	x25, [sp, #112]
  426678:	ldp	x29, x30, [sp, #96]
  42667c:	add	sp, sp, #0xb0
  426680:	ret
  426684:	stp	x29, x30, [sp, #-48]!
  426688:	stp	x22, x21, [sp, #16]
  42668c:	stp	x20, x19, [sp, #32]
  426690:	ldr	x8, [x1, #8]
  426694:	mov	x20, x1
  426698:	mov	x19, x0
  42669c:	mov	x29, sp
  4266a0:	cbz	x8, 4266b4 <wcrtomb@plt+0x21b74>
  4266a4:	mov	x0, x8
  4266a8:	bl	403f40 <strlen@plt>
  4266ac:	add	x0, x0, #0x21
  4266b0:	b	4266b8 <wcrtomb@plt+0x21b78>
  4266b4:	mov	w0, #0x20                  	// #32
  4266b8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4266bc:	ldr	x1, [x20, #8]
  4266c0:	mov	x21, x0
  4266c4:	cbz	x1, 4266d4 <wcrtomb@plt+0x21b94>
  4266c8:	add	x0, x21, #0x20
  4266cc:	bl	404840 <strcpy@plt>
  4266d0:	b	4266d8 <wcrtomb@plt+0x21b98>
  4266d4:	mov	x0, xzr
  4266d8:	str	x0, [x21, #8]
  4266dc:	ldr	w8, [x20]
  4266e0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4266e4:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4266e8:	ldr	x0, [x22, #3960]
  4266ec:	str	w8, [x21]
  4266f0:	ldr	x8, [x20, #16]
  4266f4:	ldr	x20, [x9, #2104]
  4266f8:	str	x21, [x9, #2104]
  4266fc:	stp	x8, x20, [x21, #16]
  426700:	cbz	x0, 42671c <wcrtomb@plt+0x21bdc>
  426704:	mov	x1, x19
  426708:	bl	404660 <strcmp@plt>
  42670c:	cbz	w0, 42671c <wcrtomb@plt+0x21bdc>
  426710:	ldr	w8, [x20]
  426714:	cmp	w8, #0x1
  426718:	b.eq	426730 <wcrtomb@plt+0x21bf0>  // b.none
  42671c:	str	x19, [x22, #3960]
  426720:	ldp	x20, x19, [sp, #32]
  426724:	ldp	x22, x21, [sp, #16]
  426728:	ldp	x29, x30, [sp], #48
  42672c:	ret
  426730:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  426734:	ldr	x8, [x8, #4064]
  426738:	cbz	x8, 426740 <wcrtomb@plt+0x21c00>
  42673c:	blr	x8
  426740:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426744:	add	x1, x1, #0x4b2
  426748:	mov	w2, #0x5                   	// #5
  42674c:	mov	x0, xzr
  426750:	bl	404900 <dcgettext@plt>
  426754:	mov	x2, x0
  426758:	mov	w0, wzr
  42675c:	mov	w1, wzr
  426760:	bl	403fa0 <error@plt>
  426764:	mov	w0, #0x2                   	// #2
  426768:	bl	422db4 <wcrtomb@plt+0x1e274>
  42676c:	sub	sp, sp, #0xc0
  426770:	stp	x29, x30, [sp, #128]
  426774:	stp	x22, x21, [sp, #160]
  426778:	stp	x20, x19, [sp, #176]
  42677c:	ldrb	w8, [x2]
  426780:	mov	x19, x3
  426784:	mov	x20, x2
  426788:	str	x23, [sp, #144]
  42678c:	and	w8, w8, #0xfe
  426790:	cmp	w8, #0x2e
  426794:	add	x29, sp, #0x80
  426798:	b.ne	4267bc <wcrtomb@plt+0x21c7c>  // b.any
  42679c:	mov	x2, sp
  4267a0:	mov	w0, wzr
  4267a4:	mov	x1, x20
  4267a8:	bl	404a40 <__xstat@plt>
  4267ac:	cbnz	w0, 426890 <wcrtomb@plt+0x21d50>
  4267b0:	ldur	q0, [sp, #88]
  4267b4:	str	q0, [x19]
  4267b8:	b	426878 <wcrtomb@plt+0x21d38>
  4267bc:	mov	x22, x1
  4267c0:	mov	x21, x0
  4267c4:	mov	x0, x19
  4267c8:	mov	x1, x20
  4267cc:	mov	x2, xzr
  4267d0:	bl	440a28 <argp_parse@@Base+0x917c>
  4267d4:	tbz	w0, #0, 426814 <wcrtomb@plt+0x21cd4>
  4267d8:	mov	w0, #0x28                  	// #40
  4267dc:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4267e0:	ldr	q0, [x19]
  4267e4:	mov	x23, x0
  4267e8:	str	x22, [x0, #24]
  4267ec:	stur	q0, [x0, #8]
  4267f0:	mov	x0, x20
  4267f4:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4267f8:	mov	x8, x0
  4267fc:	str	x8, [x23, #32]
  426800:	ldr	x8, [x21, #8]
  426804:	mov	w0, wzr
  426808:	str	x8, [x23]
  42680c:	str	x23, [x21, #8]
  426810:	b	426878 <wcrtomb@plt+0x21d38>
  426814:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  426818:	ldr	x8, [x8, #4064]
  42681c:	cbz	x8, 426824 <wcrtomb@plt+0x21ce4>
  426820:	blr	x8
  426824:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426828:	add	x1, x1, #0x57e
  42682c:	mov	w2, #0x5                   	// #5
  426830:	mov	x0, xzr
  426834:	bl	404900 <dcgettext@plt>
  426838:	ldp	x8, x1, [x19]
  42683c:	mov	x21, x0
  426840:	mov	w2, wzr
  426844:	mov	x0, x8
  426848:	bl	41980c <wcrtomb@plt+0x14ccc>
  42684c:	mov	x22, x0
  426850:	mov	x0, x20
  426854:	bl	444a68 <argp_parse@@Base+0xd1bc>
  426858:	mov	x4, x0
  42685c:	mov	w0, wzr
  426860:	mov	w1, wzr
  426864:	mov	x2, x21
  426868:	mov	x3, x22
  42686c:	bl	403fa0 <error@plt>
  426870:	str	xzr, [x19, #8]
  426874:	mov	w0, #0x1                   	// #1
  426878:	ldp	x20, x19, [sp, #176]
  42687c:	ldp	x22, x21, [sp, #160]
  426880:	ldr	x23, [sp, #144]
  426884:	ldp	x29, x30, [sp, #128]
  426888:	add	sp, sp, #0xc0
  42688c:	ret
  426890:	mov	x0, x20
  426894:	bl	42b158 <wcrtomb@plt+0x26618>
  426898:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42689c:	ldr	x8, [x8, #4064]
  4268a0:	cbz	x8, 4268a8 <wcrtomb@plt+0x21d68>
  4268a4:	blr	x8
  4268a8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4268ac:	add	x1, x1, #0x563
  4268b0:	mov	w2, #0x5                   	// #5
  4268b4:	mov	x0, xzr
  4268b8:	bl	404900 <dcgettext@plt>
  4268bc:	mov	x2, x0
  4268c0:	mov	w0, wzr
  4268c4:	mov	w1, wzr
  4268c8:	bl	403fa0 <error@plt>
  4268cc:	mov	w0, #0x2                   	// #2
  4268d0:	bl	422db4 <wcrtomb@plt+0x1e274>
  4268d4:	stp	x29, x30, [sp, #-32]!
  4268d8:	stp	x20, x19, [sp, #16]
  4268dc:	mov	x19, x0
  4268e0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  4268e4:	add	x0, x0, #0x77c
  4268e8:	mov	x1, x19
  4268ec:	mov	x29, sp
  4268f0:	bl	404660 <strcmp@plt>
  4268f4:	cbz	w0, 426968 <wcrtomb@plt+0x21e28>
  4268f8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  4268fc:	add	x0, x0, #0x793
  426900:	mov	x1, x19
  426904:	bl	404660 <strcmp@plt>
  426908:	cbz	w0, 426974 <wcrtomb@plt+0x21e34>
  42690c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  426910:	add	x0, x0, #0x7d6
  426914:	mov	x1, x19
  426918:	bl	404660 <strcmp@plt>
  42691c:	cbz	w0, 426980 <wcrtomb@plt+0x21e40>
  426920:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  426924:	add	x0, x0, #0x824
  426928:	mov	x1, x19
  42692c:	bl	404660 <strcmp@plt>
  426930:	cbz	w0, 42698c <wcrtomb@plt+0x21e4c>
  426934:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  426938:	add	x0, x0, #0x7ba
  42693c:	mov	x1, x19
  426940:	bl	404660 <strcmp@plt>
  426944:	cbz	w0, 426998 <wcrtomb@plt+0x21e58>
  426948:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x194b0>
  42694c:	add	x0, x0, #0x7ff
  426950:	mov	x1, x19
  426954:	bl	404660 <strcmp@plt>
  426958:	cbnz	w0, 4269b8 <wcrtomb@plt+0x21e78>
  42695c:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  426960:	add	x8, x8, #0xf60
  426964:	b	4269a0 <wcrtomb@plt+0x21e60>
  426968:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42696c:	add	x8, x8, #0xf10
  426970:	b	4269a0 <wcrtomb@plt+0x21e60>
  426974:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  426978:	add	x8, x8, #0xf20
  42697c:	b	4269a0 <wcrtomb@plt+0x21e60>
  426980:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  426984:	add	x8, x8, #0xf30
  426988:	b	4269a0 <wcrtomb@plt+0x21e60>
  42698c:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  426990:	add	x8, x8, #0xf40
  426994:	b	4269a0 <wcrtomb@plt+0x21e60>
  426998:	adrp	x8, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42699c:	add	x8, x8, #0xf50
  4269a0:	ldr	w8, [x8, #8]
  4269a4:	ldp	x20, x19, [sp, #16]
  4269a8:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4269ac:	str	w8, [x9, #3872]
  4269b0:	ldp	x29, x30, [sp], #32
  4269b4:	ret
  4269b8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4269bc:	ldr	x8, [x8, #4064]
  4269c0:	cbz	x8, 4269c8 <wcrtomb@plt+0x21e88>
  4269c4:	blr	x8
  4269c8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4269cc:	add	x1, x1, #0x5b5
  4269d0:	mov	w2, #0x5                   	// #5
  4269d4:	mov	x0, xzr
  4269d8:	bl	404900 <dcgettext@plt>
  4269dc:	mov	x20, x0
  4269e0:	mov	x0, x19
  4269e4:	bl	444778 <argp_parse@@Base+0xcecc>
  4269e8:	mov	x3, x0
  4269ec:	mov	w0, wzr
  4269f0:	mov	w1, wzr
  4269f4:	mov	x2, x20
  4269f8:	bl	403fa0 <error@plt>
  4269fc:	mov	w0, #0x2                   	// #2
  426a00:	bl	422db4 <wcrtomb@plt+0x1e274>
  426a04:	sub	sp, sp, #0x40
  426a08:	stp	x29, x30, [sp, #16]
  426a0c:	stp	x20, x19, [sp, #48]
  426a10:	add	x29, sp, #0x10
  426a14:	mov	x19, x1
  426a18:	mov	x8, #0xffffffffffffffff    	// #-1
  426a1c:	mov	w1, #0x3a                  	// #58
  426a20:	str	x21, [sp, #32]
  426a24:	mov	x20, x0
  426a28:	str	x8, [x29, #24]
  426a2c:	bl	4047a0 <strchr@plt>
  426a30:	cbz	x0, 426a78 <wcrtomb@plt+0x21f38>
  426a34:	mov	x21, x0
  426a38:	strb	wzr, [x21], #1
  426a3c:	ldrb	w8, [x20]
  426a40:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  426a44:	add	x4, x4, #0x66
  426a48:	add	x1, sp, #0x8
  426a4c:	cmp	w8, #0x0
  426a50:	add	x3, x29, #0x18
  426a54:	mov	w2, #0xa                   	// #10
  426a58:	mov	x0, x21
  426a5c:	csel	x20, xzr, x20, eq  // eq = none
  426a60:	bl	445d5c <argp_parse@@Base+0xe4b0>
  426a64:	cbnz	w0, 426af0 <wcrtomb@plt+0x21fb0>
  426a68:	ldr	x8, [x29, #24]
  426a6c:	lsr	x8, x8, #32
  426a70:	cbz	x8, 426ab0 <wcrtomb@plt+0x21f70>
  426a74:	b	426af0 <wcrtomb@plt+0x21fb0>
  426a78:	ldrb	w8, [x20]
  426a7c:	sub	w8, w8, #0x30
  426a80:	cmp	w8, #0x9
  426a84:	b.hi	426ab0 <wcrtomb@plt+0x21f70>  // b.pmore
  426a88:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  426a8c:	add	x4, x4, #0x66
  426a90:	add	x1, sp, #0x8
  426a94:	mov	x3, sp
  426a98:	mov	w2, #0xa                   	// #10
  426a9c:	mov	x0, x20
  426aa0:	bl	445d5c <argp_parse@@Base+0xe4b0>
  426aa4:	cbz	w0, 426ad0 <wcrtomb@plt+0x21f90>
  426aa8:	cmp	w0, #0x1
  426aac:	b.eq	426aec <wcrtomb@plt+0x21fac>  // b.none
  426ab0:	cbz	x20, 426ab8 <wcrtomb@plt+0x21f78>
  426ab4:	str	x20, [x19]
  426ab8:	ldr	x0, [x29, #24]
  426abc:	ldp	x20, x19, [sp, #48]
  426ac0:	ldr	x21, [sp, #32]
  426ac4:	ldp	x29, x30, [sp, #16]
  426ac8:	add	sp, sp, #0x40
  426acc:	ret
  426ad0:	ldr	x8, [sp]
  426ad4:	lsr	x9, x8, #32
  426ad8:	cbnz	x9, 426aec <wcrtomb@plt+0x21fac>
  426adc:	mov	x20, xzr
  426ae0:	str	x8, [x29, #24]
  426ae4:	cbnz	x20, 426ab4 <wcrtomb@plt+0x21f74>
  426ae8:	b	426ab8 <wcrtomb@plt+0x21f78>
  426aec:	mov	x21, x20
  426af0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  426af4:	ldr	x8, [x8, #4064]
  426af8:	cbz	x8, 426b00 <wcrtomb@plt+0x21fc0>
  426afc:	blr	x8
  426b00:	mov	x0, x21
  426b04:	bl	444778 <argp_parse@@Base+0xcecc>
  426b08:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426b0c:	mov	x19, x0
  426b10:	add	x1, x1, #0x5d0
  426b14:	mov	w2, #0x5                   	// #5
  426b18:	mov	x0, xzr
  426b1c:	bl	404900 <dcgettext@plt>
  426b20:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  426b24:	mov	x4, x0
  426b28:	add	x2, x2, #0x5d8
  426b2c:	mov	w0, wzr
  426b30:	mov	w1, wzr
  426b34:	mov	x3, x19
  426b38:	bl	403fa0 <error@plt>
  426b3c:	bl	40e96c <wcrtomb@plt+0x9e2c>
  426b40:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  426b44:	add	x8, x8, #0x260
  426b48:	ldr	x4, [x8, #56]
  426b4c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426b50:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x194b0>
  426b54:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  426b58:	adrp	x5, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426b5c:	add	x0, x0, #0x640
  426b60:	add	x1, x1, #0x7ba
  426b64:	add	x2, x2, #0x85
  426b68:	add	x5, x5, #0x67a
  426b6c:	mov	w3, #0x14                  	// #20
  426b70:	b	4460fc <argp_parse@@Base+0xe850>
  426b74:	stp	x29, x30, [sp, #-32]!
  426b78:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  426b7c:	ldr	x8, [x8, #4064]
  426b80:	stp	x20, x19, [sp, #16]
  426b84:	mov	x19, x1
  426b88:	mov	x20, x0
  426b8c:	mov	x29, sp
  426b90:	cbz	x8, 426b98 <wcrtomb@plt+0x22058>
  426b94:	blr	x8
  426b98:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426b9c:	add	x1, x1, #0x545
  426ba0:	mov	w2, #0x5                   	// #5
  426ba4:	mov	x0, xzr
  426ba8:	bl	404900 <dcgettext@plt>
  426bac:	mov	x2, x0
  426bb0:	mov	w0, wzr
  426bb4:	mov	w1, wzr
  426bb8:	mov	x3, x20
  426bbc:	mov	x4, x19
  426bc0:	bl	403fa0 <error@plt>
  426bc4:	mov	w0, #0x2                   	// #2
  426bc8:	bl	422db4 <wcrtomb@plt+0x1e274>
  426bcc:	stp	x29, x30, [sp, #-32]!
  426bd0:	str	x19, [sp, #16]
  426bd4:	mov	x29, sp
  426bd8:	mov	w19, w0
  426bdc:	bl	404e48 <wcrtomb@plt+0x308>
  426be0:	bl	4052d4 <wcrtomb@plt+0x794>
  426be4:	mov	w0, w19
  426be8:	ldr	x19, [sp, #16]
  426bec:	adrp	x1, 426000 <wcrtomb@plt+0x214c0>
  426bf0:	add	x1, x1, #0xbcc
  426bf4:	ldp	x29, x30, [sp], #32
  426bf8:	b	4041b0 <signal@plt>
  426bfc:	stp	x29, x30, [sp, #-96]!
  426c00:	stp	x28, x27, [sp, #16]
  426c04:	stp	x26, x25, [sp, #32]
  426c08:	stp	x24, x23, [sp, #48]
  426c0c:	stp	x22, x21, [sp, #64]
  426c10:	stp	x20, x19, [sp, #80]
  426c14:	mov	x29, sp
  426c18:	sub	sp, sp, #0x230
  426c1c:	ldrb	w8, [x0]
  426c20:	cbz	w8, 4275fc <wcrtomb@plt+0x22abc>
  426c24:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  426c28:	adrp	x23, 479000 <_obstack_memory_used@@Base+0x324b0>
  426c2c:	mov	x19, x0
  426c30:	sub	x28, x29, #0x10
  426c34:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  426c38:	add	x21, x21, #0x8e0
  426c3c:	adrp	x26, 479000 <_obstack_memory_used@@Base+0x324b0>
  426c40:	add	x23, x23, #0xe70
  426c44:	b	426c54 <wcrtomb@plt+0x22114>
  426c48:	add	x19, x19, #0x1
  426c4c:	ldrb	w8, [x19]
  426c50:	cbz	w8, 4275fc <wcrtomb@plt+0x22abc>
  426c54:	mov	w0, #0x70                  	// #112
  426c58:	bl	445be0 <argp_parse@@Base+0xe334>
  426c5c:	ldr	x8, [x20, #2280]
  426c60:	cmp	x8, #0x0
  426c64:	csel	x8, x21, x8, eq  // eq = none
  426c68:	str	x0, [x8]
  426c6c:	str	x0, [x20, #2280]
  426c70:	ldrb	w8, [x19]
  426c74:	cmp	w8, #0x73
  426c78:	b.ne	426d44 <wcrtomb@plt+0x22204>  // b.any
  426c7c:	mov	x23, x19
  426c80:	ldrb	w8, [x23, #2]!
  426c84:	mov	x22, x0
  426c88:	mov	w20, #0x2                   	// #2
  426c8c:	ldurb	w10, [x23, #-1]
  426c90:	cmp	w8, w10
  426c94:	b.eq	426cd8 <wcrtomb@plt+0x22198>  // b.none
  426c98:	cbz	w8, 426cd8 <wcrtomb@plt+0x22198>
  426c9c:	mov	w20, #0x2                   	// #2
  426ca0:	and	w8, w8, #0xff
  426ca4:	cmp	w8, #0x5c
  426ca8:	b.ne	426cc0 <wcrtomb@plt+0x22180>  // b.any
  426cac:	sxtw	x8, w20
  426cb0:	add	x8, x8, #0x1
  426cb4:	ldrb	w9, [x19, x8]
  426cb8:	cmp	w9, #0x0
  426cbc:	csel	w20, w20, w8, eq  // eq = none
  426cc0:	sxtw	x8, w20
  426cc4:	add	x20, x8, #0x1
  426cc8:	ldrb	w8, [x19, x20]
  426ccc:	cmp	w8, w10
  426cd0:	b.eq	426cd8 <wcrtomb@plt+0x22198>  // b.none
  426cd4:	cbnz	w8, 426ca0 <wcrtomb@plt+0x22160>
  426cd8:	cmp	w8, w10
  426cdc:	b.ne	427694 <wcrtomb@plt+0x22b54>  // b.any
  426ce0:	sxtw	x8, w20
  426ce4:	add	x24, x8, #0x1
  426ce8:	add	x27, x19, x24
  426cec:	str	x8, [sp, #16]
  426cf0:	ldrb	w8, [x27]
  426cf4:	cmp	w8, w10
  426cf8:	b.eq	426d90 <wcrtomb@plt+0x22250>  // b.none
  426cfc:	cbz	w8, 426d90 <wcrtomb@plt+0x22250>
  426d00:	mov	w21, w24
  426d04:	and	w8, w8, #0xff
  426d08:	cmp	w8, #0x5c
  426d0c:	b.ne	426d24 <wcrtomb@plt+0x221e4>  // b.any
  426d10:	sxtw	x8, w21
  426d14:	add	x8, x8, #0x1
  426d18:	ldrb	w9, [x19, x8]
  426d1c:	cmp	w9, #0x0
  426d20:	csel	w21, w21, w8, eq  // eq = none
  426d24:	sxtw	x8, w21
  426d28:	add	x21, x8, #0x1
  426d2c:	ldrb	w8, [x19, x21]
  426d30:	cmp	w8, w10
  426d34:	b.eq	426d3c <wcrtomb@plt+0x221fc>  // b.none
  426d38:	cbnz	w8, 426d04 <wcrtomb@plt+0x221c4>
  426d3c:	add	x19, x19, x21
  426d40:	b	426d98 <wcrtomb@plt+0x22258>
  426d44:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  426d48:	mov	w2, #0x6                   	// #6
  426d4c:	mov	x0, x19
  426d50:	add	x1, x1, #0xc9a
  426d54:	bl	404300 <strncmp@plt>
  426d58:	cbnz	w0, 427694 <wcrtomb@plt+0x22b54>
  426d5c:	add	x19, x19, #0x6
  426d60:	str	wzr, [x26, #3696]
  426d64:	ldrb	w1, [x19]
  426d68:	cbz	w1, 426c4c <wcrtomb@plt+0x2210c>
  426d6c:	cmp	w1, #0x3b
  426d70:	b.eq	426c48 <wcrtomb@plt+0x22108>  // b.none
  426d74:	mov	x0, x23
  426d78:	bl	427cac <wcrtomb@plt+0x2316c>
  426d7c:	cbnz	w0, 42761c <wcrtomb@plt+0x22adc>
  426d80:	add	x19, x19, #0x1
  426d84:	ldrb	w1, [x19]
  426d88:	cbnz	w1, 426d6c <wcrtomb@plt+0x2222c>
  426d8c:	b	426c4c <wcrtomb@plt+0x2210c>
  426d90:	mov	w21, w24
  426d94:	mov	x19, x27
  426d98:	cmp	w8, w10
  426d9c:	b.ne	427694 <wcrtomb@plt+0x22b54>  // b.any
  426da0:	ldr	w8, [x26, #3696]
  426da4:	mov	x26, x22
  426da8:	mov	w25, wzr
  426dac:	str	wzr, [x22, #8]
  426db0:	str	w8, [x26, #12]!
  426db4:	str	w10, [sp, #4]
  426db8:	str	x24, [sp, #8]
  426dbc:	b	426e44 <wcrtomb@plt+0x22304>
  426dc0:	sub	x1, x29, #0x10
  426dc4:	mov	x0, x19
  426dc8:	mov	w2, wzr
  426dcc:	bl	403f30 <strtoul@plt>
  426dd0:	ldr	x8, [x28]
  426dd4:	str	w0, [x22, #16]
  426dd8:	sub	x8, x8, #0x1
  426ddc:	str	x8, [x28]
  426de0:	add	x19, x8, #0x1
  426de4:	str	x19, [x28]
  426de8:	ldrb	w1, [x8, #1]
  426dec:	sub	w9, w1, #0x30
  426df0:	cmp	w9, #0xa
  426df4:	b.cc	426dc0 <wcrtomb@plt+0x22280>  // b.lo, b.ul, b.last
  426df8:	cmp	w1, #0x66
  426dfc:	b.le	426e1c <wcrtomb@plt+0x222dc>
  426e00:	cmp	w1, #0x67
  426e04:	b.eq	426e3c <wcrtomb@plt+0x222fc>  // b.none
  426e08:	cmp	w1, #0x69
  426e0c:	b.eq	426e4c <wcrtomb@plt+0x2230c>  // b.none
  426e10:	cmp	w1, #0x78
  426e14:	b.ne	426e28 <wcrtomb@plt+0x222e8>  // b.any
  426e18:	b	426e58 <wcrtomb@plt+0x22318>
  426e1c:	cbz	w1, 426e64 <wcrtomb@plt+0x22324>
  426e20:	cmp	w1, #0x3b
  426e24:	b.eq	426e6c <wcrtomb@plt+0x2232c>  // b.none
  426e28:	mov	x0, x26
  426e2c:	bl	427cac <wcrtomb@plt+0x2316c>
  426e30:	mov	x8, x19
  426e34:	cbz	w0, 426de0 <wcrtomb@plt+0x222a0>
  426e38:	b	42765c <wcrtomb@plt+0x22b1c>
  426e3c:	mov	w8, #0x1                   	// #1
  426e40:	str	w8, [x22, #8]
  426e44:	mov	x8, x19
  426e48:	b	426de0 <wcrtomb@plt+0x222a0>
  426e4c:	mov	w8, #0x2                   	// #2
  426e50:	orr	w25, w25, w8
  426e54:	b	426e44 <wcrtomb@plt+0x22304>
  426e58:	mov	w8, #0x1                   	// #1
  426e5c:	orr	w25, w25, w8
  426e60:	b	426e44 <wcrtomb@plt+0x22304>
  426e64:	mov	x24, x27
  426e68:	b	426e78 <wcrtomb@plt+0x22338>
  426e6c:	add	x19, x8, #0x2
  426e70:	mov	x24, x27
  426e74:	str	x19, [x28]
  426e78:	sub	w8, w20, #0x1
  426e7c:	sxtw	x0, w8
  426e80:	bl	4459e8 <argp_parse@@Base+0xe13c>
  426e84:	ldr	x8, [sp, #16]
  426e88:	mov	x1, x23
  426e8c:	mov	x26, x0
  426e90:	sub	x27, x8, #0x2
  426e94:	mov	x2, x27
  426e98:	bl	403ec0 <memcpy@plt>
  426e9c:	add	x23, x22, #0x18
  426ea0:	mov	x0, x23
  426ea4:	mov	x1, x26
  426ea8:	mov	w2, w25
  426eac:	strb	wzr, [x26, x27]
  426eb0:	bl	448588 <_obstack_memory_used@@Base+0x1a38>
  426eb4:	cbnz	w0, 4276d0 <wcrtomb@plt+0x22b90>
  426eb8:	ldrb	w8, [x26]
  426ebc:	mov	x23, x24
  426ec0:	cmp	w8, #0x5e
  426ec4:	b.ne	426ed0 <wcrtomb@plt+0x22390>  // b.any
  426ec8:	str	wzr, [x22, #8]
  426ecc:	b	426eec <wcrtomb@plt+0x223ac>
  426ed0:	cmp	w20, #0x3
  426ed4:	b.lt	426eec <wcrtomb@plt+0x223ac>  // b.tstop
  426ed8:	ldr	x8, [sp, #16]
  426edc:	add	x8, x8, x26
  426ee0:	ldurb	w8, [x8, #-3]
  426ee4:	cmp	w8, #0x24
  426ee8:	b.eq	426ec8 <wcrtomb@plt+0x22388>  // b.none
  426eec:	mov	x0, x26
  426ef0:	bl	404700 <free@plt>
  426ef4:	ldr	x8, [sp, #8]
  426ef8:	sub	w20, w21, w8
  426efc:	add	w8, w20, #0x1
  426f00:	sxtw	x0, w8
  426f04:	bl	4459e8 <argp_parse@@Base+0xe13c>
  426f08:	sxtw	x25, w20
  426f0c:	mov	x1, x23
  426f10:	mov	x2, x25
  426f14:	mov	x24, x0
  426f18:	bl	403ec0 <memcpy@plt>
  426f1c:	add	x21, x22, #0x60
  426f20:	add	x20, x22, #0x58
  426f24:	add	x23, x22, #0x68
  426f28:	mov	x8, x24
  426f2c:	strb	wzr, [x24, x25]
  426f30:	str	x24, [sp, #32]
  426f34:	str	x24, [sp, #16]
  426f38:	b	426f84 <wcrtomb@plt+0x22444>
  426f3c:	mov	w0, #0x20                  	// #32
  426f40:	bl	4459e8 <argp_parse@@Base+0xe13c>
  426f44:	ldr	x8, [x21]
  426f48:	str	xzr, [x0]
  426f4c:	mov	w10, #0x1                   	// #1
  426f50:	cmp	x8, #0x0
  426f54:	csel	x8, x20, x8, eq  // eq = none
  426f58:	str	x0, [x8]
  426f5c:	str	x0, [x21]
  426f60:	ldr	x8, [x23]
  426f64:	ldr	x9, [sp, #32]
  426f68:	str	w10, [x0, #8]
  426f6c:	str	xzr, [x0, #16]
  426f70:	add	x10, x8, #0x1
  426f74:	add	x8, x9, #0x1
  426f78:	str	x10, [x23]
  426f7c:	str	x8, [sp, #32]
  426f80:	mov	x24, x8
  426f84:	ldrb	w9, [x8]
  426f88:	cmp	w9, #0x26
  426f8c:	b.eq	42709c <wcrtomb@plt+0x2255c>  // b.none
  426f90:	cmp	w9, #0x5c
  426f94:	b.eq	426fa8 <wcrtomb@plt+0x22468>  // b.none
  426f98:	cbz	w9, 427578 <wcrtomb@plt+0x22a38>
  426f9c:	add	x8, x8, #0x1
  426fa0:	str	x8, [sp, #32]
  426fa4:	b	426f84 <wcrtomb@plt+0x22444>
  426fa8:	subs	x25, x8, x24
  426fac:	b.eq	42700c <wcrtomb@plt+0x224cc>  // b.none
  426fb0:	mov	w0, #0x20                  	// #32
  426fb4:	bl	4459e8 <argp_parse@@Base+0xe13c>
  426fb8:	ldr	x8, [x21]
  426fbc:	str	xzr, [x0]
  426fc0:	mov	x26, x0
  426fc4:	cmp	x8, #0x0
  426fc8:	csel	x8, x20, x8, eq  // eq = none
  426fcc:	str	x0, [x8]
  426fd0:	str	x0, [x21]
  426fd4:	ldr	x8, [x23]
  426fd8:	str	wzr, [x0, #8]
  426fdc:	add	x0, x25, #0x1
  426fe0:	add	x8, x8, #0x1
  426fe4:	str	x8, [x23]
  426fe8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  426fec:	mov	x1, x24
  426ff0:	mov	x2, x25
  426ff4:	mov	x27, x0
  426ff8:	str	x0, [x26, #16]
  426ffc:	bl	403ec0 <memcpy@plt>
  427000:	ldr	x8, [sp, #32]
  427004:	strb	wzr, [x27, x25]
  427008:	str	x25, [x26, #24]
  42700c:	add	x0, x8, #0x1
  427010:	str	x0, [sp, #32]
  427014:	ldrb	w8, [x8, #1]
  427018:	sub	w9, w8, #0x26
  42701c:	cmp	w9, #0x50
  427020:	b.hi	4274b4 <wcrtomb@plt+0x22974>  // b.pmore
  427024:	adrp	x12, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  427028:	add	x12, x12, #0xbc8
  42702c:	adr	x10, 42703c <wcrtomb@plt+0x224fc>
  427030:	ldrh	w11, [x12, x9, lsl #1]
  427034:	add	x10, x10, x11, lsl #2
  427038:	br	x10
  42703c:	add	x1, sp, #0x20
  427040:	mov	w2, #0xa                   	// #10
  427044:	bl	403f30 <strtoul@plt>
  427048:	ldr	x8, [x22, #72]
  42704c:	cmp	x0, x8
  427050:	b.hi	427678 <wcrtomb@plt+0x22b38>  // b.pmore
  427054:	mov	x24, x0
  427058:	mov	w0, #0x20                  	// #32
  42705c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427060:	ldr	x8, [x21]
  427064:	str	xzr, [x0]
  427068:	mov	w10, #0x1                   	// #1
  42706c:	cmp	x8, #0x0
  427070:	csel	x8, x20, x8, eq  // eq = none
  427074:	str	x0, [x8]
  427078:	str	x0, [x21]
  42707c:	ldr	x9, [x23]
  427080:	ldr	x8, [sp, #32]
  427084:	str	w10, [x0, #8]
  427088:	str	x24, [x0, #16]
  42708c:	add	x9, x9, #0x1
  427090:	str	x9, [x23]
  427094:	mov	x24, x8
  427098:	b	426f84 <wcrtomb@plt+0x22444>
  42709c:	subs	x25, x8, x24
  4270a0:	b.eq	426f3c <wcrtomb@plt+0x223fc>  // b.none
  4270a4:	mov	w0, #0x20                  	// #32
  4270a8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4270ac:	ldr	x8, [x21]
  4270b0:	str	xzr, [x0]
  4270b4:	mov	x26, x0
  4270b8:	cmp	x8, #0x0
  4270bc:	csel	x8, x20, x8, eq  // eq = none
  4270c0:	str	x0, [x8]
  4270c4:	str	x0, [x21]
  4270c8:	ldr	x8, [x23]
  4270cc:	str	wzr, [x0, #8]
  4270d0:	add	x0, x25, #0x1
  4270d4:	add	x8, x8, #0x1
  4270d8:	str	x8, [x23]
  4270dc:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4270e0:	mov	x1, x24
  4270e4:	mov	x2, x25
  4270e8:	mov	x27, x0
  4270ec:	str	x0, [x26, #16]
  4270f0:	bl	403ec0 <memcpy@plt>
  4270f4:	strb	wzr, [x27, x25]
  4270f8:	str	x25, [x26, #24]
  4270fc:	b	426f3c <wcrtomb@plt+0x223fc>
  427100:	mov	w0, #0x20                  	// #32
  427104:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427108:	ldr	x8, [x21]
  42710c:	str	xzr, [x0]
  427110:	mov	x24, x0
  427114:	cmp	x8, #0x0
  427118:	csel	x8, x20, x8, eq  // eq = none
  42711c:	str	x0, [x8]
  427120:	str	x0, [x21]
  427124:	ldr	x8, [x23]
  427128:	str	wzr, [x0, #8]
  42712c:	mov	w0, #0x2                   	// #2
  427130:	add	x8, x8, #0x1
  427134:	str	x8, [x23]
  427138:	bl	4459e8 <argp_parse@@Base+0xe13c>
  42713c:	ldr	x8, [sp, #32]
  427140:	mov	w9, #0xd                   	// #13
  427144:	b	4274a0 <wcrtomb@plt+0x22960>
  427148:	mov	w0, #0x20                  	// #32
  42714c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427150:	ldr	x8, [x21]
  427154:	str	xzr, [x0]
  427158:	mov	x24, x0
  42715c:	cmp	x8, #0x0
  427160:	csel	x8, x20, x8, eq  // eq = none
  427164:	str	x0, [x8]
  427168:	str	x0, [x21]
  42716c:	ldr	x8, [x23]
  427170:	str	wzr, [x0, #8]
  427174:	mov	w0, #0x2                   	// #2
  427178:	add	x8, x8, #0x1
  42717c:	str	x8, [x23]
  427180:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427184:	ldr	x8, [sp, #32]
  427188:	mov	w9, #0x8                   	// #8
  42718c:	b	4274a0 <wcrtomb@plt+0x22960>
  427190:	mov	w0, #0x20                  	// #32
  427194:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427198:	ldr	x8, [x21]
  42719c:	str	xzr, [x0]
  4271a0:	mov	w10, #0x2                   	// #2
  4271a4:	cmp	x8, #0x0
  4271a8:	csel	x8, x20, x8, eq  // eq = none
  4271ac:	str	x0, [x8]
  4271b0:	str	x0, [x21]
  4271b4:	ldr	x8, [x23]
  4271b8:	ldr	x9, [sp, #32]
  4271bc:	str	w10, [x0, #8]
  4271c0:	b	427308 <wcrtomb@plt+0x227c8>
  4271c4:	mov	w0, #0x20                  	// #32
  4271c8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4271cc:	ldr	x8, [x21]
  4271d0:	str	xzr, [x0]
  4271d4:	mov	x24, x0
  4271d8:	cmp	x8, #0x0
  4271dc:	csel	x8, x20, x8, eq  // eq = none
  4271e0:	str	x0, [x8]
  4271e4:	str	x0, [x21]
  4271e8:	ldr	x8, [x23]
  4271ec:	str	wzr, [x0, #8]
  4271f0:	mov	w0, #0x2                   	// #2
  4271f4:	add	x8, x8, #0x1
  4271f8:	str	x8, [x23]
  4271fc:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427200:	ldr	x8, [sp, #32]
  427204:	mov	w9, #0x9                   	// #9
  427208:	b	4274a0 <wcrtomb@plt+0x22960>
  42720c:	mov	w0, #0x20                  	// #32
  427210:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427214:	ldr	x8, [x21]
  427218:	str	xzr, [x0]
  42721c:	mov	x24, x0
  427220:	cmp	x8, #0x0
  427224:	csel	x8, x20, x8, eq  // eq = none
  427228:	str	x0, [x8]
  42722c:	str	x0, [x21]
  427230:	ldr	x8, [x23]
  427234:	str	wzr, [x0, #8]
  427238:	mov	w0, #0x2                   	// #2
  42723c:	add	x8, x8, #0x1
  427240:	str	x8, [x23]
  427244:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427248:	ldr	x8, [sp, #32]
  42724c:	mov	w9, #0x26                  	// #38
  427250:	b	4274a0 <wcrtomb@plt+0x22960>
  427254:	mov	w0, #0x20                  	// #32
  427258:	bl	4459e8 <argp_parse@@Base+0xe13c>
  42725c:	ldr	x8, [x21]
  427260:	str	xzr, [x0]
  427264:	mov	x24, x0
  427268:	cmp	x8, #0x0
  42726c:	csel	x8, x20, x8, eq  // eq = none
  427270:	str	x0, [x8]
  427274:	str	x0, [x21]
  427278:	ldr	x8, [x23]
  42727c:	str	wzr, [x0, #8]
  427280:	mov	w0, #0x2                   	// #2
  427284:	add	x8, x8, #0x1
  427288:	str	x8, [x23]
  42728c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427290:	ldr	x8, [sp, #32]
  427294:	mov	w9, #0xb                   	// #11
  427298:	b	4274a0 <wcrtomb@plt+0x22960>
  42729c:	mov	w0, #0x20                  	// #32
  4272a0:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4272a4:	ldr	x8, [x21]
  4272a8:	str	xzr, [x0]
  4272ac:	mov	w10, #0x2                   	// #2
  4272b0:	cmp	x8, #0x0
  4272b4:	csel	x8, x20, x8, eq  // eq = none
  4272b8:	str	x0, [x8]
  4272bc:	str	x0, [x21]
  4272c0:	ldr	x8, [x23]
  4272c4:	ldr	x9, [sp, #32]
  4272c8:	str	w10, [x0, #8]
  4272cc:	mov	w10, #0x3                   	// #3
  4272d0:	b	427308 <wcrtomb@plt+0x227c8>
  4272d4:	mov	w0, #0x20                  	// #32
  4272d8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4272dc:	ldr	x8, [x21]
  4272e0:	str	xzr, [x0]
  4272e4:	mov	w10, #0x2                   	// #2
  4272e8:	cmp	x8, #0x0
  4272ec:	csel	x8, x20, x8, eq  // eq = none
  4272f0:	str	x0, [x8]
  4272f4:	str	x0, [x21]
  4272f8:	ldr	x8, [x23]
  4272fc:	ldr	x9, [sp, #32]
  427300:	str	w10, [x0, #8]
  427304:	mov	w10, #0x1                   	// #1
  427308:	str	w10, [x0, #16]
  42730c:	b	426f70 <wcrtomb@plt+0x22430>
  427310:	mov	w0, #0x20                  	// #32
  427314:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427318:	ldr	x8, [x21]
  42731c:	str	xzr, [x0]
  427320:	mov	x24, x0
  427324:	cmp	x8, #0x0
  427328:	csel	x8, x20, x8, eq  // eq = none
  42732c:	str	x0, [x8]
  427330:	str	x0, [x21]
  427334:	ldr	x8, [x23]
  427338:	str	wzr, [x0, #8]
  42733c:	mov	w0, #0x2                   	// #2
  427340:	add	x8, x8, #0x1
  427344:	str	x8, [x23]
  427348:	bl	4459e8 <argp_parse@@Base+0xe13c>
  42734c:	ldr	x8, [sp, #32]
  427350:	mov	w9, #0xa                   	// #10
  427354:	b	4274a0 <wcrtomb@plt+0x22960>
  427358:	mov	w0, #0x20                  	// #32
  42735c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427360:	ldr	x8, [x21]
  427364:	str	xzr, [x0]
  427368:	mov	w10, #0x2                   	// #2
  42736c:	cmp	x8, #0x0
  427370:	csel	x8, x20, x8, eq  // eq = none
  427374:	str	x0, [x8]
  427378:	str	x0, [x21]
  42737c:	ldr	x8, [x23]
  427380:	ldr	x9, [sp, #32]
  427384:	str	w10, [x0, #8]
  427388:	mov	w10, #0x4                   	// #4
  42738c:	str	w10, [x0, #16]
  427390:	b	426f70 <wcrtomb@plt+0x22430>
  427394:	mov	w0, #0x20                  	// #32
  427398:	bl	4459e8 <argp_parse@@Base+0xe13c>
  42739c:	ldr	x8, [x21]
  4273a0:	str	xzr, [x0]
  4273a4:	mov	w10, #0x2                   	// #2
  4273a8:	cmp	x8, #0x0
  4273ac:	csel	x8, x20, x8, eq  // eq = none
  4273b0:	str	x0, [x8]
  4273b4:	str	x0, [x21]
  4273b8:	ldr	x8, [x23]
  4273bc:	ldr	x9, [sp, #32]
  4273c0:	str	w10, [x0, #8]
  4273c4:	str	wzr, [x0, #16]
  4273c8:	b	426f70 <wcrtomb@plt+0x22430>
  4273cc:	mov	w0, #0x20                  	// #32
  4273d0:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4273d4:	ldr	x8, [x21]
  4273d8:	str	xzr, [x0]
  4273dc:	mov	x24, x0
  4273e0:	cmp	x8, #0x0
  4273e4:	csel	x8, x20, x8, eq  // eq = none
  4273e8:	str	x0, [x8]
  4273ec:	str	x0, [x21]
  4273f0:	ldr	x8, [x23]
  4273f4:	str	wzr, [x0, #8]
  4273f8:	mov	w0, #0x2                   	// #2
  4273fc:	add	x8, x8, #0x1
  427400:	str	x8, [x23]
  427404:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427408:	ldr	x8, [sp, #32]
  42740c:	mov	w9, #0x5c                  	// #92
  427410:	b	4274a0 <wcrtomb@plt+0x22960>
  427414:	mov	w0, #0x20                  	// #32
  427418:	bl	4459e8 <argp_parse@@Base+0xe13c>
  42741c:	ldr	x8, [x21]
  427420:	str	xzr, [x0]
  427424:	mov	x24, x0
  427428:	cmp	x8, #0x0
  42742c:	csel	x8, x20, x8, eq  // eq = none
  427430:	str	x0, [x8]
  427434:	str	x0, [x21]
  427438:	ldr	x8, [x23]
  42743c:	str	wzr, [x0, #8]
  427440:	mov	w0, #0x2                   	// #2
  427444:	add	x8, x8, #0x1
  427448:	str	x8, [x23]
  42744c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427450:	ldr	x8, [sp, #32]
  427454:	mov	w9, #0x7                   	// #7
  427458:	b	4274a0 <wcrtomb@plt+0x22960>
  42745c:	mov	w0, #0x20                  	// #32
  427460:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427464:	ldr	x8, [x21]
  427468:	str	xzr, [x0]
  42746c:	mov	x24, x0
  427470:	cmp	x8, #0x0
  427474:	csel	x8, x20, x8, eq  // eq = none
  427478:	str	x0, [x8]
  42747c:	str	x0, [x21]
  427480:	ldr	x8, [x23]
  427484:	str	wzr, [x0, #8]
  427488:	mov	w0, #0x2                   	// #2
  42748c:	add	x8, x8, #0x1
  427490:	str	x8, [x23]
  427494:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427498:	ldr	x8, [sp, #32]
  42749c:	mov	w9, #0xc                   	// #12
  4274a0:	strh	w9, [x0]
  4274a4:	mov	w9, #0x1                   	// #1
  4274a8:	stp	x0, x9, [x24, #16]
  4274ac:	add	x8, x8, #0x1
  4274b0:	b	426f7c <wcrtomb@plt+0x2243c>
  4274b4:	ldr	w25, [sp, #4]
  4274b8:	cmp	w8, w25
  4274bc:	b.ne	427510 <wcrtomb@plt+0x229d0>  // b.any
  4274c0:	mov	w0, #0x20                  	// #32
  4274c4:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4274c8:	ldr	x8, [x21]
  4274cc:	str	xzr, [x0]
  4274d0:	mov	x24, x0
  4274d4:	cmp	x8, #0x0
  4274d8:	csel	x8, x20, x8, eq  // eq = none
  4274dc:	str	x0, [x8]
  4274e0:	str	x0, [x21]
  4274e4:	ldr	x8, [x23]
  4274e8:	str	wzr, [x0, #8]
  4274ec:	mov	w0, #0x2                   	// #2
  4274f0:	add	x8, x8, #0x1
  4274f4:	str	x8, [x23]
  4274f8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4274fc:	strb	w25, [x0]
  427500:	strb	wzr, [x0, #1]
  427504:	str	x0, [x24, #16]
  427508:	mov	w8, #0x1                   	// #1
  42750c:	b	42756c <wcrtomb@plt+0x22a2c>
  427510:	mov	w9, #0x5c                  	// #92
  427514:	mov	w0, #0x20                  	// #32
  427518:	strb	w9, [sp, #28]
  42751c:	strb	w8, [sp, #29]
  427520:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427524:	ldr	x8, [x21]
  427528:	str	xzr, [x0]
  42752c:	mov	x24, x0
  427530:	cmp	x8, #0x0
  427534:	csel	x8, x20, x8, eq  // eq = none
  427538:	str	x0, [x8]
  42753c:	str	x0, [x21]
  427540:	ldr	x8, [x23]
  427544:	str	wzr, [x0, #8]
  427548:	mov	w0, #0x3                   	// #3
  42754c:	add	x8, x8, #0x1
  427550:	str	x8, [x23]
  427554:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427558:	ldrh	w8, [sp, #28]
  42755c:	strb	wzr, [x0, #2]
  427560:	str	x0, [x24, #16]
  427564:	strh	w8, [x0]
  427568:	mov	w8, #0x2                   	// #2
  42756c:	str	x8, [x24, #24]
  427570:	ldr	x8, [sp, #32]
  427574:	b	4274ac <wcrtomb@plt+0x2296c>
  427578:	subs	x22, x8, x24
  42757c:	b.eq	4275d8 <wcrtomb@plt+0x22a98>  // b.none
  427580:	mov	w0, #0x20                  	// #32
  427584:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427588:	ldr	x8, [x21]
  42758c:	str	xzr, [x0]
  427590:	mov	x25, x0
  427594:	cmp	x8, #0x0
  427598:	csel	x8, x20, x8, eq  // eq = none
  42759c:	str	x0, [x8]
  4275a0:	str	x0, [x21]
  4275a4:	ldr	x8, [x23]
  4275a8:	str	wzr, [x0, #8]
  4275ac:	add	x0, x22, #0x1
  4275b0:	add	x8, x8, #0x1
  4275b4:	str	x8, [x23]
  4275b8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4275bc:	mov	x1, x24
  4275c0:	mov	x2, x22
  4275c4:	mov	x26, x0
  4275c8:	str	x0, [x25, #16]
  4275cc:	bl	403ec0 <memcpy@plt>
  4275d0:	strb	wzr, [x26, x22]
  4275d4:	str	x22, [x25, #24]
  4275d8:	ldr	x0, [sp, #16]
  4275dc:	bl	404700 <free@plt>
  4275e0:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4275e4:	adrp	x23, 479000 <_obstack_memory_used@@Base+0x324b0>
  4275e8:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4275ec:	add	x21, x21, #0x8e0
  4275f0:	adrp	x26, 479000 <_obstack_memory_used@@Base+0x324b0>
  4275f4:	add	x23, x23, #0xe70
  4275f8:	b	426c4c <wcrtomb@plt+0x2210c>
  4275fc:	add	sp, sp, #0x230
  427600:	ldp	x20, x19, [sp, #80]
  427604:	ldp	x22, x21, [sp, #64]
  427608:	ldp	x24, x23, [sp, #48]
  42760c:	ldp	x26, x25, [sp, #32]
  427610:	ldp	x28, x27, [sp, #16]
  427614:	ldp	x29, x30, [sp], #96
  427618:	ret
  42761c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427620:	ldr	x8, [x8, #4064]
  427624:	cbz	x8, 42762c <wcrtomb@plt+0x22aec>
  427628:	blr	x8
  42762c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  427630:	add	x1, x1, #0xca1
  427634:	mov	w2, #0x5                   	// #5
  427638:	mov	x0, xzr
  42763c:	bl	404900 <dcgettext@plt>
  427640:	ldrb	w3, [x19]
  427644:	mov	x2, x0
  427648:	mov	w0, wzr
  42764c:	mov	w1, wzr
  427650:	bl	403fa0 <error@plt>
  427654:	mov	w0, #0x2                   	// #2
  427658:	bl	422db4 <wcrtomb@plt+0x1e274>
  42765c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427660:	ldr	x8, [x8, #4064]
  427664:	cbz	x8, 42766c <wcrtomb@plt+0x22b2c>
  427668:	blr	x8
  42766c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  427670:	add	x1, x1, #0xcd9
  427674:	b	427634 <wcrtomb@plt+0x22af4>
  427678:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42767c:	ldr	x8, [x8, #4064]
  427680:	cbz	x8, 427688 <wcrtomb@plt+0x22b48>
  427684:	blr	x8
  427688:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  42768c:	add	x1, x1, #0xd23
  427690:	b	4276ac <wcrtomb@plt+0x22b6c>
  427694:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427698:	ldr	x8, [x8, #4064]
  42769c:	cbz	x8, 4276a4 <wcrtomb@plt+0x22b64>
  4276a0:	blr	x8
  4276a4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4276a8:	add	x1, x1, #0xcbc
  4276ac:	mov	w2, #0x5                   	// #5
  4276b0:	mov	x0, xzr
  4276b4:	bl	404900 <dcgettext@plt>
  4276b8:	mov	x2, x0
  4276bc:	mov	w0, wzr
  4276c0:	mov	w1, wzr
  4276c4:	bl	403fa0 <error@plt>
  4276c8:	mov	w0, #0x2                   	// #2
  4276cc:	bl	422db4 <wcrtomb@plt+0x1e274>
  4276d0:	add	x2, sp, #0x20
  4276d4:	mov	w3, #0x200                 	// #512
  4276d8:	mov	x1, x23
  4276dc:	bl	448684 <_obstack_memory_used@@Base+0x1b34>
  4276e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4276e4:	ldr	x8, [x8, #4064]
  4276e8:	cbz	x8, 4276f0 <wcrtomb@plt+0x22bb0>
  4276ec:	blr	x8
  4276f0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4276f4:	add	x1, x1, #0xd02
  4276f8:	mov	w2, #0x5                   	// #5
  4276fc:	mov	x0, xzr
  427700:	bl	404900 <dcgettext@plt>
  427704:	mov	x2, x0
  427708:	add	x3, sp, #0x20
  42770c:	mov	w0, wzr
  427710:	mov	w1, wzr
  427714:	bl	403fa0 <error@plt>
  427718:	mov	w0, #0x2                   	// #2
  42771c:	bl	422db4 <wcrtomb@plt+0x1e274>
  427720:	sub	sp, sp, #0x90
  427724:	stp	x29, x30, [sp, #48]
  427728:	stp	x28, x27, [sp, #64]
  42772c:	stp	x26, x25, [sp, #80]
  427730:	stp	x24, x23, [sp, #96]
  427734:	stp	x22, x21, [sp, #112]
  427738:	stp	x20, x19, [sp, #128]
  42773c:	stp	x3, x0, [sp]
  427740:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427744:	ldrb	w8, [x19, #2288]
  427748:	ldr	x22, [x0]
  42774c:	add	x29, sp, #0x30
  427750:	str	x2, [sp, #16]
  427754:	stur	w1, [x29, #-20]
  427758:	tbnz	w8, #0, 427788 <wcrtomb@plt+0x22c48>
  42775c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427760:	adrp	x3, 445000 <argp_parse@@Base+0xd754>
  427764:	adrp	x4, 404000 <sigprocmask@plt>
  427768:	add	x0, x0, #0x888
  42776c:	add	x3, x3, #0x9e8
  427770:	add	x4, x4, #0x700
  427774:	mov	x1, xzr
  427778:	mov	x2, xzr
  42777c:	bl	4467e8 <_obstack_begin@@Base>
  427780:	mov	w8, #0x1                   	// #1
  427784:	strb	w8, [x19, #2288]
  427788:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42778c:	ldr	x23, [x8, #2272]
  427790:	cbz	x23, 427c20 <wcrtomb@plt+0x230e0>
  427794:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427798:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42779c:	mov	w8, wzr
  4277a0:	add	x19, x19, #0x8a0
  4277a4:	add	x20, x20, #0x890
  4277a8:	b	427810 <wcrtomb@plt+0x22cd0>
  4277ac:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4277b0:	add	x9, x8, #0x1
  4277b4:	add	x20, x20, #0x898
  4277b8:	mov	x0, x25
  4277bc:	str	x9, [x20, #8]
  4277c0:	strb	wzr, [x8]
  4277c4:	bl	404700 <free@plt>
  4277c8:	ldp	x22, x8, [x20]
  4277cc:	cmp	x8, x22
  4277d0:	b.eq	427b34 <wcrtomb@plt+0x22ff4>  // b.none
  4277d4:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4277d8:	add	x20, x20, #0x890
  4277dc:	ldr	x9, [x20, #40]
  4277e0:	ldr	x10, [x20]
  4277e4:	ldr	x11, [x20, #24]
  4277e8:	add	x8, x9, x8
  4277ec:	bic	x8, x8, x9
  4277f0:	sub	x12, x11, x10
  4277f4:	sub	x9, x8, x10
  4277f8:	cmp	x9, x12
  4277fc:	csel	x8, x11, x8, hi  // hi = pmore
  427800:	stp	x8, x8, [x20, #8]
  427804:	mov	w8, #0x1                   	// #1
  427808:	ldr	x23, [x23]
  42780c:	cbz	x23, 427bd0 <wcrtomb@plt+0x23090>
  427810:	ldr	w9, [x23, #12]
  427814:	ldur	w10, [x29, #-20]
  427818:	tst	w9, w10
  42781c:	b.eq	427808 <wcrtomb@plt+0x22cc8>  // b.none
  427820:	ldr	x8, [x23, #72]
  427824:	lsl	x8, x8, #4
  427828:	add	x0, x8, #0x10
  42782c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  427830:	ldrb	w8, [x22]
  427834:	mov	x25, x0
  427838:	cbz	w8, 427ba0 <wcrtomb@plt+0x23060>
  42783c:	mov	x24, xzr
  427840:	mov	w27, wzr
  427844:	mov	w26, wzr
  427848:	add	x8, x23, #0x18
  42784c:	stur	x8, [x29, #-8]
  427850:	b	42787c <wcrtomb@plt+0x22d3c>
  427854:	mov	x1, x22
  427858:	mov	x2, x28
  42785c:	bl	403ec0 <memcpy@plt>
  427860:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427864:	ldr	x8, [x9, #2208]
  427868:	add	x22, x22, x28
  42786c:	add	x8, x8, x28
  427870:	str	x8, [x9, #2208]
  427874:	ldrb	w8, [x22]
  427878:	cbz	w8, 427ba0 <wcrtomb@plt+0x23060>
  42787c:	ldr	x8, [x23, #72]
  427880:	ldur	x0, [x29, #-8]
  427884:	mov	x1, x22
  427888:	mov	x3, x25
  42788c:	add	x2, x8, #0x1
  427890:	mov	w4, wzr
  427894:	bl	448924 <_obstack_memory_used@@Base+0x1dd4>
  427898:	cbz	w0, 4278f8 <wcrtomb@plt+0x22db8>
  42789c:	mov	x0, x22
  4278a0:	bl	403f40 <strlen@plt>
  4278a4:	mov	x28, x0
  4278a8:	ldp	x0, x8, [x19]
  4278ac:	sub	x8, x8, x0
  4278b0:	cmp	x8, x28
  4278b4:	b.cs	4278d8 <wcrtomb@plt+0x22d98>  // b.hs, b.nlast
  4278b8:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4278bc:	add	x19, x19, #0x888
  4278c0:	mov	x0, x19
  4278c4:	mov	x1, x28
  4278c8:	bl	44693c <_obstack_newchunk@@Base>
  4278cc:	ldr	x0, [x19, #24]
  4278d0:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4278d4:	add	x19, x19, #0x8a0
  4278d8:	mov	x1, x22
  4278dc:	mov	x2, x28
  4278e0:	bl	403ec0 <memcpy@plt>
  4278e4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4278e8:	ldr	x8, [x9, #2208]
  4278ec:	add	x8, x8, x28
  4278f0:	str	x8, [x9, #2208]
  4278f4:	b	427994 <wcrtomb@plt+0x22e54>
  4278f8:	ldp	x20, x28, [x25]
  4278fc:	cbz	x20, 427944 <wcrtomb@plt+0x22e04>
  427900:	ldp	x0, x8, [x19]
  427904:	sub	x8, x8, x0
  427908:	cmp	x8, x20
  42790c:	b.cs	427928 <wcrtomb@plt+0x22de8>  // b.hs, b.nlast
  427910:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427914:	add	x21, x21, #0x888
  427918:	mov	x0, x21
  42791c:	mov	x1, x20
  427920:	bl	44693c <_obstack_newchunk@@Base>
  427924:	ldr	x0, [x21, #24]
  427928:	mov	x1, x22
  42792c:	mov	x2, x20
  427930:	bl	403ec0 <memcpy@plt>
  427934:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427938:	ldr	x8, [x9, #2208]
  42793c:	add	x8, x8, x20
  427940:	str	x8, [x9, #2208]
  427944:	ldr	w8, [x23, #16]
  427948:	add	x24, x24, #0x1
  42794c:	cbz	w8, 427984 <wcrtomb@plt+0x22e44>
  427950:	cmp	x24, x8
  427954:	b.cs	427984 <wcrtomb@plt+0x22e44>  // b.hs, b.nlast
  427958:	ldp	x0, x8, [x19]
  42795c:	sub	x8, x8, x0
  427960:	cmp	x8, x28
  427964:	b.cs	427854 <wcrtomb@plt+0x22d14>  // b.hs, b.nlast
  427968:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42796c:	add	x20, x20, #0x888
  427970:	mov	x0, x20
  427974:	mov	x1, x28
  427978:	bl	44693c <_obstack_newchunk@@Base>
  42797c:	ldr	x0, [x20, #24]
  427980:	b	427854 <wcrtomb@plt+0x22d14>
  427984:	stur	x24, [x29, #-16]
  427988:	ldr	x24, [x23, #88]
  42798c:	cbnz	x24, 4279b0 <wcrtomb@plt+0x22e70>
  427990:	ldur	x24, [x29, #-16]
  427994:	ldr	w8, [x23, #8]
  427998:	add	x22, x22, x28
  42799c:	cbnz	w8, 427874 <wcrtomb@plt+0x22d34>
  4279a0:	b	427b48 <wcrtomb@plt+0x23008>
  4279a4:	mov	w27, w8
  4279a8:	ldr	x24, [x24]
  4279ac:	cbz	x24, 427990 <wcrtomb@plt+0x22e50>
  4279b0:	ldr	w8, [x24, #8]
  4279b4:	cmp	w8, #0x2
  4279b8:	b.eq	427a48 <wcrtomb@plt+0x22f08>  // b.none
  4279bc:	cmp	w8, #0x1
  4279c0:	b.eq	427a8c <wcrtomb@plt+0x22f4c>  // b.none
  4279c4:	cbnz	w8, 4279a8 <wcrtomb@plt+0x22e68>
  4279c8:	ldr	x21, [x24, #16]
  4279cc:	cbz	w27, 4279f8 <wcrtomb@plt+0x22eb8>
  4279d0:	ldr	x2, [x24, #24]
  4279d4:	mov	w0, w27
  4279d8:	mov	x1, x21
  4279dc:	bl	427d28 <wcrtomb@plt+0x231e8>
  4279e0:	sub	w8, w27, #0x1
  4279e4:	cmp	w8, #0x2
  4279e8:	csel	w8, wzr, w26, cc  // cc = lo, ul, last
  4279ec:	mov	x21, x0
  4279f0:	csel	w27, w26, w27, cc  // cc = lo, ul, last
  4279f4:	mov	w26, w8
  4279f8:	ldp	x0, x8, [x19]
  4279fc:	ldr	x20, [x24, #24]
  427a00:	sub	x8, x8, x0
  427a04:	cmp	x8, x20
  427a08:	b.cs	427a2c <wcrtomb@plt+0x22eec>  // b.hs, b.nlast
  427a0c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427a10:	add	x19, x19, #0x888
  427a14:	mov	x0, x19
  427a18:	mov	x1, x20
  427a1c:	bl	44693c <_obstack_newchunk@@Base>
  427a20:	ldr	x0, [x19, #24]
  427a24:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427a28:	add	x19, x19, #0x8a0
  427a2c:	mov	x1, x21
  427a30:	mov	x2, x20
  427a34:	bl	403ec0 <memcpy@plt>
  427a38:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427a3c:	ldr	x8, [x9, #2208]
  427a40:	add	x8, x8, x20
  427a44:	b	427b2c <wcrtomb@plt+0x22fec>
  427a48:	ldr	w8, [x24, #16]
  427a4c:	cmp	w8, #0x4
  427a50:	b.hi	4279a8 <wcrtomb@plt+0x22e68>  // b.pmore
  427a54:	mov	w9, #0x1                   	// #1
  427a58:	lsl	w9, w9, w8
  427a5c:	mov	w10, #0x19                  	// #25
  427a60:	tst	w9, w10
  427a64:	b.ne	4279a4 <wcrtomb@plt+0x22e64>  // b.any
  427a68:	cmp	w26, #0x4
  427a6c:	b.hi	4279a4 <wcrtomb@plt+0x22e64>  // b.pmore
  427a70:	mov	w9, #0x1                   	// #1
  427a74:	lsl	w9, w9, w26
  427a78:	mov	w10, #0x19                  	// #25
  427a7c:	tst	w9, w10
  427a80:	b.eq	4279a4 <wcrtomb@plt+0x22e64>  // b.none
  427a84:	mov	w26, w27
  427a88:	b	4279a4 <wcrtomb@plt+0x22e64>
  427a8c:	ldr	x9, [x24, #16]
  427a90:	lsl	x8, x9, #4
  427a94:	ldr	x8, [x25, x8]
  427a98:	cmn	x8, #0x1
  427a9c:	b.eq	4279a8 <wcrtomb@plt+0x22e68>  // b.none
  427aa0:	add	x9, x25, x9, lsl #4
  427aa4:	ldr	x9, [x9, #8]
  427aa8:	cmn	x9, #0x1
  427aac:	b.eq	4279a8 <wcrtomb@plt+0x22e68>  // b.none
  427ab0:	sub	x21, x9, x8
  427ab4:	add	x20, x22, x8
  427ab8:	cbz	w27, 427ae4 <wcrtomb@plt+0x22fa4>
  427abc:	mov	w0, w27
  427ac0:	mov	x1, x20
  427ac4:	mov	x2, x21
  427ac8:	bl	427d28 <wcrtomb@plt+0x231e8>
  427acc:	sub	w8, w27, #0x1
  427ad0:	cmp	w8, #0x2
  427ad4:	csel	w8, wzr, w26, cc  // cc = lo, ul, last
  427ad8:	mov	x20, x0
  427adc:	csel	w27, w26, w27, cc  // cc = lo, ul, last
  427ae0:	mov	w26, w8
  427ae4:	ldp	x0, x8, [x19]
  427ae8:	sub	x8, x8, x0
  427aec:	cmp	x8, x21
  427af0:	b.cs	427b14 <wcrtomb@plt+0x22fd4>  // b.hs, b.nlast
  427af4:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427af8:	add	x19, x19, #0x888
  427afc:	mov	x0, x19
  427b00:	mov	x1, x21
  427b04:	bl	44693c <_obstack_newchunk@@Base>
  427b08:	ldr	x0, [x19, #24]
  427b0c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427b10:	add	x19, x19, #0x8a0
  427b14:	mov	x1, x20
  427b18:	mov	x2, x21
  427b1c:	bl	403ec0 <memcpy@plt>
  427b20:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427b24:	ldr	x8, [x9, #2208]
  427b28:	add	x8, x8, x21
  427b2c:	str	x8, [x9, #2208]
  427b30:	b	4279a8 <wcrtomb@plt+0x22e68>
  427b34:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427b38:	ldrb	w9, [x10, #2264]
  427b3c:	orr	w9, w9, #0x2
  427b40:	strb	w9, [x10, #2264]
  427b44:	b	4277d4 <wcrtomb@plt+0x22c94>
  427b48:	mov	x0, x22
  427b4c:	bl	403f40 <strlen@plt>
  427b50:	mov	x20, x0
  427b54:	ldp	x0, x8, [x19]
  427b58:	sub	x8, x8, x0
  427b5c:	cmp	x8, x20
  427b60:	b.cs	427b84 <wcrtomb@plt+0x23044>  // b.hs, b.nlast
  427b64:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427b68:	add	x19, x19, #0x888
  427b6c:	mov	x0, x19
  427b70:	mov	x1, x20
  427b74:	bl	44693c <_obstack_newchunk@@Base>
  427b78:	ldr	x0, [x19, #24]
  427b7c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427b80:	add	x19, x19, #0x8a0
  427b84:	mov	x1, x22
  427b88:	mov	x2, x20
  427b8c:	bl	403ec0 <memcpy@plt>
  427b90:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427b94:	ldr	x8, [x9, #2208]
  427b98:	add	x8, x8, x20
  427b9c:	str	x8, [x9, #2208]
  427ba0:	ldp	x8, x9, [x19]
  427ba4:	cmp	x9, x8
  427ba8:	b.ne	4277ac <wcrtomb@plt+0x22c6c>  // b.any
  427bac:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427bb0:	add	x19, x19, #0x888
  427bb4:	mov	w1, #0x1                   	// #1
  427bb8:	mov	x0, x19
  427bbc:	bl	44693c <_obstack_newchunk@@Base>
  427bc0:	ldr	x8, [x19, #24]
  427bc4:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427bc8:	add	x19, x19, #0x8a0
  427bcc:	b	4277ac <wcrtomb@plt+0x22c6c>
  427bd0:	tbz	w8, #0, 427c20 <wcrtomb@plt+0x230e0>
  427bd4:	ldr	x8, [sp, #16]
  427bd8:	mov	x1, x22
  427bdc:	cbz	x8, 427bf0 <wcrtomb@plt+0x230b0>
  427be0:	ldr	x1, [sp]
  427be4:	mov	x0, x22
  427be8:	blr	x8
  427bec:	mov	x1, x0
  427bf0:	ldr	x0, [sp, #8]
  427bf4:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  427bf8:	ldr	x8, [x20]
  427bfc:	cmp	x22, x8
  427c00:	b.ls	427c58 <wcrtomb@plt+0x23118>  // b.plast
  427c04:	ldr	x8, [x20, #24]
  427c08:	cmp	x22, x8
  427c0c:	b.cs	427c58 <wcrtomb@plt+0x23118>  // b.hs, b.nlast
  427c10:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427c14:	add	x8, x8, #0x898
  427c18:	stp	x22, x22, [x8]
  427c1c:	b	427c68 <wcrtomb@plt+0x23128>
  427c20:	ldr	x8, [sp, #16]
  427c24:	cbz	x8, 427c50 <wcrtomb@plt+0x23110>
  427c28:	ldp	x1, x19, [sp]
  427c2c:	mov	x0, x22
  427c30:	str	xzr, [x19]
  427c34:	blr	x8
  427c38:	mov	x1, x0
  427c3c:	mov	x0, x19
  427c40:	bl	41aa28 <wcrtomb@plt+0x15ee8>
  427c44:	mov	x0, x22
  427c48:	bl	404700 <free@plt>
  427c4c:	b	427c68 <wcrtomb@plt+0x23128>
  427c50:	mov	w0, wzr
  427c54:	b	427c6c <wcrtomb@plt+0x2312c>
  427c58:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427c5c:	add	x0, x0, #0x888
  427c60:	mov	x1, x22
  427c64:	bl	446ab4 <_obstack_free@@Base>
  427c68:	mov	w0, #0x1                   	// #1
  427c6c:	ldp	x20, x19, [sp, #128]
  427c70:	ldp	x22, x21, [sp, #112]
  427c74:	ldp	x24, x23, [sp, #96]
  427c78:	ldp	x26, x25, [sp, #80]
  427c7c:	ldp	x28, x27, [sp, #64]
  427c80:	ldp	x29, x30, [sp, #48]
  427c84:	add	sp, sp, #0x90
  427c88:	ret
  427c8c:	mov	x2, xzr
  427c90:	mov	x3, xzr
  427c94:	b	427720 <wcrtomb@plt+0x22be0>
  427c98:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427c9c:	ldr	x8, [x8, #2272]
  427ca0:	cmp	x8, #0x0
  427ca4:	cset	w0, ne  // ne = any
  427ca8:	ret
  427cac:	sub	w9, w1, #0x48
  427cb0:	cmp	w9, #0x2b
  427cb4:	mov	w8, #0x1                   	// #1
  427cb8:	b.hi	427d20 <wcrtomb@plt+0x231e0>  // b.pmore
  427cbc:	adrp	x10, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  427cc0:	add	x10, x10, #0xc6a
  427cc4:	adr	x11, 427cd4 <wcrtomb@plt+0x23194>
  427cc8:	ldrb	w12, [x10, x9]
  427ccc:	add	x11, x11, x12, lsl #2
  427cd0:	br	x11
  427cd4:	ldr	w8, [x0]
  427cd8:	and	w9, w8, #0xfffffffd
  427cdc:	b	427d18 <wcrtomb@plt+0x231d8>
  427ce0:	ldr	w8, [x0]
  427ce4:	and	w9, w8, #0xfffffffe
  427ce8:	b	427d18 <wcrtomb@plt+0x231d8>
  427cec:	ldr	w8, [x0]
  427cf0:	and	w9, w8, #0xfffffffb
  427cf4:	b	427d18 <wcrtomb@plt+0x231d8>
  427cf8:	ldr	w8, [x0]
  427cfc:	orr	w9, w8, #0x2
  427d00:	b	427d18 <wcrtomb@plt+0x231d8>
  427d04:	ldr	w8, [x0]
  427d08:	orr	w9, w8, #0x1
  427d0c:	b	427d18 <wcrtomb@plt+0x231d8>
  427d10:	ldr	w8, [x0]
  427d14:	orr	w9, w8, #0x4
  427d18:	mov	w8, wzr
  427d1c:	str	w9, [x0]
  427d20:	mov	w0, w8
  427d24:	ret
  427d28:	stp	x29, x30, [sp, #-48]!
  427d2c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427d30:	ldr	x9, [x8, #2304]
  427d34:	stp	x22, x21, [sp, #16]
  427d38:	stp	x20, x19, [sp, #32]
  427d3c:	mov	x20, x2
  427d40:	mov	x19, x1
  427d44:	cmp	x9, x2
  427d48:	mov	w21, w0
  427d4c:	mov	x29, sp
  427d50:	b.cs	427d70 <wcrtomb@plt+0x23230>  // b.hs, b.nlast
  427d54:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427d58:	ldr	x0, [x22, #2296]
  427d5c:	mov	x1, x20
  427d60:	str	x20, [x8, #2304]
  427d64:	bl	445a68 <argp_parse@@Base+0xe1bc>
  427d68:	str	x0, [x22, #2296]
  427d6c:	b	427d78 <wcrtomb@plt+0x23238>
  427d70:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427d74:	ldr	x0, [x8, #2296]
  427d78:	mov	x1, x19
  427d7c:	mov	x2, x20
  427d80:	bl	403ec0 <memcpy@plt>
  427d84:	sub	w8, w21, #0x1
  427d88:	cmp	w8, #0x3
  427d8c:	b.hi	427db0 <wcrtomb@plt+0x23270>  // b.pmore
  427d90:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  427d94:	add	x9, x9, #0xc96
  427d98:	adr	x10, 427da8 <wcrtomb@plt+0x23268>
  427d9c:	ldrb	w11, [x9, x8]
  427da0:	add	x10, x10, x11, lsl #2
  427da4:	br	x10
  427da8:	bl	4044a0 <__ctype_toupper_loc@plt>
  427dac:	b	427dc0 <wcrtomb@plt+0x23280>
  427db0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427db4:	ldr	x19, [x8, #2296]
  427db8:	b	427e48 <wcrtomb@plt+0x23308>
  427dbc:	bl	404140 <__ctype_tolower_loc@plt>
  427dc0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427dc4:	ldr	x19, [x8, #2296]
  427dc8:	ldr	x8, [x0]
  427dcc:	ldrb	w9, [x19]
  427dd0:	ldr	w8, [x8, x9, lsl #2]
  427dd4:	strb	w8, [x19]
  427dd8:	b	427e48 <wcrtomb@plt+0x23308>
  427ddc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427de0:	ldr	x19, [x8, #2296]
  427de4:	cmp	x20, #0x1
  427de8:	b.lt	427e48 <wcrtomb@plt+0x23308>  // b.tstop
  427dec:	add	x20, x19, x20
  427df0:	bl	4044a0 <__ctype_toupper_loc@plt>
  427df4:	mov	x8, x19
  427df8:	ldr	x9, [x0]
  427dfc:	ldrb	w10, [x8]
  427e00:	ldr	w9, [x9, x10, lsl #2]
  427e04:	strb	w9, [x8], #1
  427e08:	cmp	x8, x20
  427e0c:	b.cc	427df8 <wcrtomb@plt+0x232b8>  // b.lo, b.ul, b.last
  427e10:	b	427e48 <wcrtomb@plt+0x23308>
  427e14:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427e18:	ldr	x19, [x8, #2296]
  427e1c:	cmp	x20, #0x1
  427e20:	b.lt	427e48 <wcrtomb@plt+0x23308>  // b.tstop
  427e24:	add	x20, x19, x20
  427e28:	bl	404140 <__ctype_tolower_loc@plt>
  427e2c:	mov	x8, x19
  427e30:	ldr	x9, [x0]
  427e34:	ldrb	w10, [x8]
  427e38:	ldr	w9, [x9, x10, lsl #2]
  427e3c:	strb	w9, [x8], #1
  427e40:	cmp	x8, x20
  427e44:	b.cc	427e30 <wcrtomb@plt+0x232f0>  // b.lo, b.ul, b.last
  427e48:	mov	x0, x19
  427e4c:	ldp	x20, x19, [sp, #32]
  427e50:	ldp	x22, x21, [sp, #16]
  427e54:	ldp	x29, x30, [sp], #48
  427e58:	ret
  427e5c:	stp	x29, x30, [sp, #-32]!
  427e60:	mov	w0, #0x1                   	// #1
  427e64:	stp	x20, x19, [sp, #16]
  427e68:	mov	x29, sp
  427e6c:	bl	427e9c <wcrtomb@plt+0x2335c>
  427e70:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427e74:	ldr	x0, [x19, #2312]
  427e78:	cbz	x0, 427e90 <wcrtomb@plt+0x23350>
  427e7c:	ldr	x20, [x0]
  427e80:	bl	404700 <free@plt>
  427e84:	mov	x0, x20
  427e88:	str	x20, [x19, #2312]
  427e8c:	cbnz	x20, 427e7c <wcrtomb@plt+0x2333c>
  427e90:	ldp	x20, x19, [sp, #16]
  427e94:	ldp	x29, x30, [sp], #32
  427e98:	ret
  427e9c:	sub	sp, sp, #0x70
  427ea0:	stp	x29, x30, [sp, #16]
  427ea4:	stp	x28, x27, [sp, #32]
  427ea8:	stp	x26, x25, [sp, #48]
  427eac:	stp	x24, x23, [sp, #64]
  427eb0:	stp	x22, x21, [sp, #80]
  427eb4:	stp	x20, x19, [sp, #96]
  427eb8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427ebc:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427ec0:	ldr	x21, [x26, #2320]
  427ec4:	ldr	w27, [x8, #3056]
  427ec8:	add	x29, sp, #0x10
  427ecc:	cbz	x21, 4280b4 <wcrtomb@plt+0x23574>
  427ed0:	mov	w20, w0
  427ed4:	mov	x28, xzr
  427ed8:	adrp	x23, 477000 <_obstack_memory_used@@Base+0x304b0>
  427edc:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427ee0:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427ee4:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  427ee8:	stur	w27, [x29, #-4]
  427eec:	b	427ef8 <wcrtomb@plt+0x233b8>
  427ef0:	mov	x28, x27
  427ef4:	cbz	x21, 427fec <wcrtomb@plt+0x234ac>
  427ef8:	mov	x27, x21
  427efc:	ldr	x21, [x21]
  427f00:	tbnz	w20, #0, 427f14 <wcrtomb@plt+0x233d4>
  427f04:	ldr	x8, [x19, #2912]
  427f08:	ldr	x9, [x27, #32]
  427f0c:	cmp	x8, x9
  427f10:	b.ls	427ef0 <wcrtomb@plt+0x233b0>  // b.plast
  427f14:	ldr	w0, [x27, #8]
  427f18:	bl	41c19c <wcrtomb@plt+0x1765c>
  427f1c:	ldrb	w8, [x27, #24]
  427f20:	cbz	w8, 427f8c <wcrtomb@plt+0x2344c>
  427f24:	ldr	w8, [x27, #8]
  427f28:	ldr	x22, [x27, #16]
  427f2c:	cbz	w8, 427f4c <wcrtomb@plt+0x2340c>
  427f30:	ldrb	w8, [x22]
  427f34:	cbz	w8, 427ef0 <wcrtomb@plt+0x233b0>
  427f38:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  427f3c:	mov	x0, x22
  427f40:	add	x1, x1, #0x50a
  427f44:	bl	404660 <strcmp@plt>
  427f48:	cbz	w0, 427ef0 <wcrtomb@plt+0x233b0>
  427f4c:	ldr	w0, [x23, #1872]
  427f50:	mov	w2, #0x200                 	// #512
  427f54:	mov	x1, x22
  427f58:	bl	4040b0 <unlinkat@plt>
  427f5c:	cbz	w0, 427fb8 <wcrtomb@plt+0x23478>
  427f60:	bl	404a10 <__errno_location@plt>
  427f64:	ldr	w8, [x0]
  427f68:	cmp	w8, #0x2
  427f6c:	b.eq	427fb8 <wcrtomb@plt+0x23478>  // b.none
  427f70:	cmp	w8, #0x11
  427f74:	b.eq	427ef0 <wcrtomb@plt+0x233b0>  // b.none
  427f78:	cmp	w8, #0x27
  427f7c:	b.eq	427ef0 <wcrtomb@plt+0x233b0>  // b.none
  427f80:	mov	x0, x22
  427f84:	bl	42ad0c <wcrtomb@plt+0x261cc>
  427f88:	b	427fb8 <wcrtomb@plt+0x23478>
  427f8c:	ldr	w0, [x23, #1872]
  427f90:	ldr	x1, [x27, #16]
  427f94:	mov	w2, wzr
  427f98:	bl	4040b0 <unlinkat@plt>
  427f9c:	cbz	w0, 427fb8 <wcrtomb@plt+0x23478>
  427fa0:	bl	404a10 <__errno_location@plt>
  427fa4:	ldr	w8, [x0]
  427fa8:	cmp	w8, #0x2
  427fac:	b.eq	427fb8 <wcrtomb@plt+0x23478>  // b.none
  427fb0:	ldr	x0, [x27, #16]
  427fb4:	bl	42b348 <wcrtomb@plt+0x26808>
  427fb8:	ldr	x0, [x27, #16]
  427fbc:	bl	404700 <free@plt>
  427fc0:	ldr	x8, [x24, #2312]
  427fc4:	str	x8, [x27]
  427fc8:	ldr	x8, [x25, #2336]
  427fcc:	str	x27, [x24, #2312]
  427fd0:	sub	x8, x8, #0x1
  427fd4:	str	x8, [x25, #2336]
  427fd8:	cbz	x28, 427fe4 <wcrtomb@plt+0x234a4>
  427fdc:	str	x21, [x28]
  427fe0:	b	427ef4 <wcrtomb@plt+0x233b4>
  427fe4:	str	x21, [x26, #2320]
  427fe8:	b	427ef4 <wcrtomb@plt+0x233b4>
  427fec:	ldr	x19, [x26, #2320]
  427ff0:	cbz	x19, 4280b0 <wcrtomb@plt+0x23570>
  427ff4:	ldur	w27, [x29, #-4]
  427ff8:	tbz	w20, #0, 4280d4 <wcrtomb@plt+0x23594>
  427ffc:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0x184b0>
  428000:	add	x20, x20, #0x50a
  428004:	b	42802c <wcrtomb@plt+0x234ec>
  428008:	ldr	x0, [x22, #16]
  42800c:	bl	404700 <free@plt>
  428010:	ldr	x8, [x24, #2312]
  428014:	str	x8, [x22]
  428018:	ldr	x8, [x25, #2336]
  42801c:	str	x22, [x24, #2312]
  428020:	sub	x8, x8, #0x1
  428024:	str	x8, [x25, #2336]
  428028:	cbz	x19, 4280c0 <wcrtomb@plt+0x23580>
  42802c:	mov	x22, x19
  428030:	ldr	w0, [x22, #8]
  428034:	ldr	x19, [x19]
  428038:	bl	41c19c <wcrtomb@plt+0x1765c>
  42803c:	ldr	w8, [x22, #8]
  428040:	cbz	w8, 428064 <wcrtomb@plt+0x23524>
  428044:	ldrb	w8, [x22, #24]
  428048:	cbz	w8, 428064 <wcrtomb@plt+0x23524>
  42804c:	ldr	x0, [x22, #16]
  428050:	ldrb	w8, [x0]
  428054:	cbz	w8, 42806c <wcrtomb@plt+0x2352c>
  428058:	mov	x1, x20
  42805c:	bl	404660 <strcmp@plt>
  428060:	cbz	w0, 42806c <wcrtomb@plt+0x2352c>
  428064:	ldr	x21, [x22, #16]
  428068:	b	428080 <wcrtomb@plt+0x23540>
  42806c:	bl	41c338 <wcrtomb@plt+0x177f8>
  428070:	ldr	w8, [x22, #8]
  428074:	mov	x21, x0
  428078:	sub	w0, w8, #0x1
  42807c:	bl	41c19c <wcrtomb@plt+0x1765c>
  428080:	ldr	w0, [x23, #1872]
  428084:	mov	w2, #0x200                 	// #512
  428088:	mov	x1, x21
  42808c:	bl	4040b0 <unlinkat@plt>
  428090:	cbz	w0, 428008 <wcrtomb@plt+0x234c8>
  428094:	bl	404a10 <__errno_location@plt>
  428098:	ldr	w8, [x0]
  42809c:	cmp	w8, #0x2
  4280a0:	b.eq	428008 <wcrtomb@plt+0x234c8>  // b.none
  4280a4:	mov	x0, x21
  4280a8:	bl	42ad0c <wcrtomb@plt+0x261cc>
  4280ac:	b	428008 <wcrtomb@plt+0x234c8>
  4280b0:	ldur	w27, [x29, #-4]
  4280b4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4280b8:	add	x8, x8, #0x918
  4280bc:	b	4280d0 <wcrtomb@plt+0x23590>
  4280c0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4280c4:	str	xzr, [x8, #2328]
  4280c8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4280cc:	add	x8, x8, #0x910
  4280d0:	str	xzr, [x8]
  4280d4:	mov	w0, w27
  4280d8:	ldp	x20, x19, [sp, #96]
  4280dc:	ldp	x22, x21, [sp, #80]
  4280e0:	ldp	x24, x23, [sp, #64]
  4280e4:	ldp	x26, x25, [sp, #48]
  4280e8:	ldp	x28, x27, [sp, #32]
  4280ec:	ldp	x29, x30, [sp, #16]
  4280f0:	add	sp, sp, #0x70
  4280f4:	b	41c19c <wcrtomb@plt+0x1765c>
  4280f8:	stp	x29, x30, [sp, #-64]!
  4280fc:	stp	x22, x21, [sp, #32]
  428100:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428104:	ldr	x8, [x22, #2320]
  428108:	stp	x24, x23, [sp, #16]
  42810c:	stp	x20, x19, [sp, #48]
  428110:	mov	w20, w1
  428114:	mov	x21, x0
  428118:	and	w24, w1, #0x1
  42811c:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428120:	mov	x29, sp
  428124:	cbz	x8, 428140 <wcrtomb@plt+0x23600>
  428128:	ldr	x9, [x23, #2912]
  42812c:	ldr	x8, [x8, #32]
  428130:	cmp	x9, x8
  428134:	b.ls	428140 <wcrtomb@plt+0x23600>  // b.plast
  428138:	mov	w0, wzr
  42813c:	bl	427e9c <wcrtomb@plt+0x2335c>
  428140:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428144:	ldr	x19, [x8, #2312]
  428148:	cbz	x19, 42815c <wcrtomb@plt+0x2361c>
  42814c:	ldr	x9, [x19]
  428150:	str	x9, [x8, #2312]
  428154:	str	xzr, [x19]
  428158:	b	428168 <wcrtomb@plt+0x23628>
  42815c:	mov	w0, #0x28                  	// #40
  428160:	bl	4459e8 <argp_parse@@Base+0xe13c>
  428164:	mov	x19, x0
  428168:	str	xzr, [x19]
  42816c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428170:	ldr	w8, [x8, #3056]
  428174:	mov	x0, x21
  428178:	str	w8, [x19, #8]
  42817c:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  428180:	str	x0, [x19, #16]
  428184:	bl	41acec <wcrtomb@plt+0x161ac>
  428188:	strb	w24, [x19, #24]
  42818c:	ldr	x8, [x23, #2912]
  428190:	str	x8, [x19, #32]
  428194:	tbz	w20, #0, 4281b4 <wcrtomb@plt+0x23674>
  428198:	ldr	x0, [x19, #16]
  42819c:	ldrb	w8, [x0]
  4281a0:	cbz	w8, 428208 <wcrtomb@plt+0x236c8>
  4281a4:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  4281a8:	add	x1, x1, #0x50a
  4281ac:	bl	404660 <strcmp@plt>
  4281b0:	cbz	w0, 428208 <wcrtomb@plt+0x236c8>
  4281b4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4281b8:	ldr	x9, [x8, #2328]
  4281bc:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4281c0:	add	x10, x10, #0x910
  4281c4:	cmp	x9, #0x0
  4281c8:	csel	x9, x10, x9, eq  // eq = none
  4281cc:	ldr	x10, [x9]
  4281d0:	str	x10, [x19]
  4281d4:	str	x19, [x9]
  4281d8:	ldr	x9, [x19]
  4281dc:	cbnz	x9, 4281e4 <wcrtomb@plt+0x236a4>
  4281e0:	str	x19, [x8, #2328]
  4281e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4281e8:	ldr	x9, [x8, #2336]
  4281ec:	ldp	x20, x19, [sp, #48]
  4281f0:	ldp	x22, x21, [sp, #32]
  4281f4:	ldp	x24, x23, [sp, #16]
  4281f8:	add	x9, x9, #0x1
  4281fc:	str	x9, [x8, #2336]
  428200:	ldp	x29, x30, [sp], #64
  428204:	ret
  428208:	ldr	x21, [x22, #2320]
  42820c:	cbz	x21, 428268 <wcrtomb@plt+0x23728>
  428210:	adrp	x20, 45f000 <_obstack_memory_used@@Base+0x184b0>
  428214:	mov	x23, xzr
  428218:	add	x20, x20, #0x50a
  42821c:	mov	x8, x21
  428220:	b	42823c <wcrtomb@plt+0x236fc>
  428224:	ldr	w8, [x23, #8]
  428228:	ldr	w9, [x19, #8]
  42822c:	cmp	w8, w9
  428230:	b.lt	428290 <wcrtomb@plt+0x23750>  // b.tstop
  428234:	ldr	x8, [x23]
  428238:	cbz	x8, 428268 <wcrtomb@plt+0x23728>
  42823c:	mov	x22, x23
  428240:	mov	x23, x8
  428244:	ldrb	w8, [x8, #24]
  428248:	cbz	w8, 428234 <wcrtomb@plt+0x236f4>
  42824c:	ldr	x0, [x23, #16]
  428250:	ldrb	w8, [x0]
  428254:	cbz	w8, 428224 <wcrtomb@plt+0x236e4>
  428258:	mov	x1, x20
  42825c:	bl	404660 <strcmp@plt>
  428260:	cbnz	w0, 428234 <wcrtomb@plt+0x236f4>
  428264:	b	428224 <wcrtomb@plt+0x236e4>
  428268:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42826c:	ldr	x9, [x8, #2328]
  428270:	cbz	x9, 428280 <wcrtomb@plt+0x23740>
  428274:	ldr	x21, [x9]
  428278:	str	x21, [x19]
  42827c:	b	4281d4 <wcrtomb@plt+0x23694>
  428280:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428284:	add	x9, x9, #0x910
  428288:	str	x21, [x19]
  42828c:	b	4281d4 <wcrtomb@plt+0x23694>
  428290:	cbz	x22, 42829c <wcrtomb@plt+0x2375c>
  428294:	ldr	x21, [x22]
  428298:	b	4282a4 <wcrtomb@plt+0x23764>
  42829c:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4282a0:	add	x22, x22, #0x910
  4282a4:	str	x21, [x19]
  4282a8:	str	x19, [x22]
  4282ac:	ldr	x8, [x19]
  4282b0:	cbnz	x8, 4281e4 <wcrtomb@plt+0x236a4>
  4282b4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4282b8:	b	4281e0 <wcrtomb@plt+0x236a0>
  4282bc:	sub	sp, sp, #0x100
  4282c0:	stp	x29, x30, [sp, #160]
  4282c4:	stp	x28, x27, [sp, #176]
  4282c8:	stp	x26, x25, [sp, #192]
  4282cc:	stp	x24, x23, [sp, #208]
  4282d0:	stp	x22, x21, [sp, #224]
  4282d4:	stp	x20, x19, [sp, #240]
  4282d8:	add	x29, sp, #0xa0
  4282dc:	bl	41d81c <wcrtomb@plt+0x18cdc>
  4282e0:	mov	w0, #0x2                   	// #2
  4282e4:	mov	w28, #0x2                   	// #2
  4282e8:	bl	405d50 <wcrtomb@plt+0x1210>
  4282ec:	bl	4122c4 <wcrtomb@plt+0xd784>
  4282f0:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4282f4:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4282f8:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4282fc:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428300:	mov	w25, wzr
  428304:	add	x19, x19, #0xbd8
  428308:	add	x20, x20, #0xc50
  42830c:	add	x23, x23, #0xd5e
  428310:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428314:	add	x21, x21, #0xbc0
  428318:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42831c:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428320:	b	428350 <wcrtomb@plt+0x23810>
  428324:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428328:	add	x8, x8, #0xd38
  42832c:	ldp	x0, x1, [sp, #120]
  428330:	ldp	x2, x3, [x8]
  428334:	bl	424520 <wcrtomb@plt+0x1f9e0>
  428338:	cmp	w0, #0x0
  42833c:	b.le	428524 <wcrtomb@plt+0x239e4>
  428340:	bl	418e14 <wcrtomb@plt+0x142d4>
  428344:	mov	x0, x20
  428348:	bl	424420 <wcrtomb@plt+0x1f8e0>
  42834c:	mov	w25, w24
  428350:	mov	x0, x19
  428354:	mov	x1, x20
  428358:	mov	w2, wzr
  42835c:	bl	418578 <wcrtomb@plt+0x13a38>
  428360:	mov	w24, w0
  428364:	cmp	w0, #0x5
  428368:	mov	w8, w0
  42836c:	b.hi	428344 <wcrtomb@plt+0x23804>  // b.pmore
  428370:	adr	x9, 428380 <wcrtomb@plt+0x23840>
  428374:	ldrb	w10, [x23, x8]
  428378:	add	x9, x9, x10, lsl #2
  42837c:	br	x9
  428380:	ldr	x0, [x22, #3032]
  428384:	mov	x1, x20
  428388:	mov	x2, x21
  42838c:	mov	w3, wzr
  428390:	bl	4189fc <wcrtomb@plt+0x13ebc>
  428394:	ldr	x8, [x22, #3032]
  428398:	mov	x1, x20
  42839c:	ldrb	w0, [x8, #156]
  4283a0:	bl	417ebc <wcrtomb@plt+0x1337c>
  4283a4:	ldr	w8, [x26, #3916]
  4283a8:	ldr	w9, [x21]
  4283ac:	cmp	w8, #0x8
  4283b0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4283b4:	str	w9, [x8, #3872]
  4283b8:	b.ne	428340 <wcrtomb@plt+0x23800>  // b.any
  4283bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4283c0:	ldr	x0, [x8, #3160]
  4283c4:	bl	41eb34 <wcrtomb@plt+0x19ff4>
  4283c8:	cbz	x0, 428340 <wcrtomb@plt+0x23800>
  4283cc:	mov	x25, x0
  4283d0:	ldr	w0, [x0, #40]
  4283d4:	bl	41c19c <wcrtomb@plt+0x1765c>
  4283d8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4283dc:	ldr	x0, [x8, #3160]
  4283e0:	add	x1, sp, #0x20
  4283e4:	bl	41bbd4 <wcrtomb@plt+0x17094>
  4283e8:	cbnz	w0, 428340 <wcrtomb@plt+0x23800>
  4283ec:	ldr	w8, [sp, #48]
  4283f0:	and	w8, w8, #0xf000
  4283f4:	cmp	w8, #0x4, lsl #12
  4283f8:	b.ne	428324 <wcrtomb@plt+0x237e4>  // b.any
  4283fc:	ldr	x0, [x25, #16]
  428400:	mov	w1, #0x1                   	// #1
  428404:	bl	41b8c0 <wcrtomb@plt+0x16d80>
  428408:	cbz	x0, 428340 <wcrtomb@plt+0x23800>
  42840c:	mov	x27, x0
  428410:	ldr	x0, [x25, #16]
  428414:	bl	41c11c <wcrtomb@plt+0x175dc>
  428418:	ldrb	w8, [x27]
  42841c:	str	x27, [sp]
  428420:	mov	x27, x0
  428424:	cbz	w8, 42845c <wcrtomb@plt+0x2391c>
  428428:	ldr	x28, [sp]
  42842c:	mov	x0, x27
  428430:	mov	x1, x28
  428434:	bl	41c5d4 <wcrtomb@plt+0x17a94>
  428438:	ldr	w1, [x25, #40]
  42843c:	mov	w2, wzr
  428440:	mov	x3, xzr
  428444:	bl	41dbb8 <wcrtomb@plt+0x19078>
  428448:	mov	x0, x28
  42844c:	bl	403f40 <strlen@plt>
  428450:	add	x28, x0, x28
  428454:	ldrb	w8, [x28, #1]!
  428458:	cbnz	w8, 42842c <wcrtomb@plt+0x238ec>
  42845c:	mov	x0, x27
  428460:	bl	41c5ac <wcrtomb@plt+0x17a6c>
  428464:	ldr	x0, [sp]
  428468:	bl	404700 <free@plt>
  42846c:	mov	x0, x25
  428470:	bl	41ddc0 <wcrtomb@plt+0x19280>
  428474:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428478:	mov	w28, #0x2                   	// #2
  42847c:	b	428340 <wcrtomb@plt+0x23800>
  428480:	ldr	x0, [x22, #3032]
  428484:	bl	405670 <wcrtomb@plt+0xb30>
  428488:	cmp	w25, #0x4
  42848c:	b.hi	428344 <wcrtomb@plt+0x23804>  // b.pmore
  428490:	adrp	x11, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  428494:	mov	w8, w25
  428498:	add	x11, x11, #0xd64
  42849c:	adr	x9, 4284ac <wcrtomb@plt+0x2396c>
  4284a0:	ldrb	w10, [x11, x8]
  4284a4:	add	x9, x9, x10, lsl #2
  4284a8:	br	x9
  4284ac:	ldr	x8, [x27, #4064]
  4284b0:	cbz	x8, 4284b8 <wcrtomb@plt+0x23978>
  4284b4:	blr	x8
  4284b8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  4284bc:	mov	w2, #0x5                   	// #5
  4284c0:	mov	x0, xzr
  4284c4:	add	x1, x1, #0x164
  4284c8:	bl	404900 <dcgettext@plt>
  4284cc:	mov	x2, x0
  4284d0:	mov	w0, wzr
  4284d4:	mov	w1, wzr
  4284d8:	bl	403fa0 <error@plt>
  4284dc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4284e0:	str	w28, [x8, #2416]
  4284e4:	b	428344 <wcrtomb@plt+0x23804>
  4284e8:	ldr	x8, [x27, #4064]
  4284ec:	cbz	x8, 4284f4 <wcrtomb@plt+0x239b4>
  4284f0:	blr	x8
  4284f4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x144b0>
  4284f8:	mov	w2, #0x5                   	// #5
  4284fc:	mov	x0, xzr
  428500:	add	x1, x1, #0x467
  428504:	bl	404900 <dcgettext@plt>
  428508:	mov	x2, x0
  42850c:	mov	w0, wzr
  428510:	mov	w1, wzr
  428514:	bl	403fa0 <error@plt>
  428518:	ldr	x8, [x27, #4064]
  42851c:	cbnz	x8, 4284b4 <wcrtomb@plt+0x23974>
  428520:	b	4284b8 <wcrtomb@plt+0x23978>
  428524:	mov	x0, x25
  428528:	bl	41ddc0 <wcrtomb@plt+0x19280>
  42852c:	b	428340 <wcrtomb@plt+0x23800>
  428530:	ldr	x8, [x22, #3032]
  428534:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428538:	str	x8, [x9, #2968]
  42853c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428540:	add	x0, x0, #0xc50
  428544:	bl	424420 <wcrtomb@plt+0x1f8e0>
  428548:	bl	405314 <wcrtomb@plt+0x7d4>
  42854c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428550:	ldr	x9, [x9, #2968]
  428554:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428558:	mov	w10, #0x1                   	// #1
  42855c:	strb	w10, [x8, #4048]
  428560:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428564:	str	x9, [x8, #4056]
  428568:	bl	41ebc4 <wcrtomb@plt+0x1a084>
  42856c:	cbz	x0, 4286b0 <wcrtomb@plt+0x23b70>
  428570:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x144b0>
  428574:	adrp	x25, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428578:	adrp	x27, 477000 <_obstack_memory_used@@Base+0x304b0>
  42857c:	mov	w28, #0x200                 	// #512
  428580:	add	x20, x20, #0xfa2
  428584:	b	4285a0 <wcrtomb@plt+0x23a60>
  428588:	mov	x0, xzr
  42858c:	mov	x1, x19
  428590:	mov	x2, x19
  428594:	bl	40c18c <wcrtomb@plt+0x764c>
  428598:	bl	41ebc4 <wcrtomb@plt+0x1a084>
  42859c:	cbz	x0, 4286b0 <wcrtomb@plt+0x23b70>
  4285a0:	ldr	x19, [x0, #16]
  4285a4:	mov	x1, xzr
  4285a8:	mov	x0, x19
  4285ac:	bl	40eca0 <wcrtomb@plt+0xa160>
  4285b0:	tbnz	w0, #0, 428598 <wcrtomb@plt+0x23a58>
  4285b4:	ldrb	w8, [x25, #3648]
  4285b8:	cbz	w8, 4285cc <wcrtomb@plt+0x23a8c>
  4285bc:	mov	x0, x20
  4285c0:	mov	x1, x19
  4285c4:	bl	422df0 <wcrtomb@plt+0x1e2b0>
  4285c8:	cbz	w0, 428598 <wcrtomb@plt+0x23a58>
  4285cc:	ldr	w8, [x26, #3916]
  4285d0:	cmp	w8, #0x2
  4285d4:	b.ne	428588 <wcrtomb@plt+0x23a48>  // b.any
  4285d8:	ldr	w0, [x27, #1872]
  4285dc:	mov	x1, x19
  4285e0:	mov	w2, wzr
  4285e4:	bl	4049f0 <openat@plt>
  4285e8:	tbnz	w0, #31, 428610 <wcrtomb@plt+0x23ad0>
  4285ec:	mov	w22, w0
  4285f0:	add	x2, sp, #0x20
  4285f4:	mov	w0, wzr
  4285f8:	mov	w1, w22
  4285fc:	bl	4048e0 <__fxstat@plt>
  428600:	cbz	w0, 42861c <wcrtomb@plt+0x23adc>
  428604:	mov	x0, x19
  428608:	bl	42b158 <wcrtomb@plt+0x26618>
  42860c:	b	428698 <wcrtomb@plt+0x23b58>
  428610:	mov	x0, x19
  428614:	bl	42a86c <wcrtomb@plt+0x25d2c>
  428618:	b	428598 <wcrtomb@plt+0x23a58>
  42861c:	ldr	x21, [sp, #80]
  428620:	cmp	x21, #0x1
  428624:	b.lt	428698 <wcrtomb@plt+0x23b58>  // b.tstop
  428628:	bl	40535c <wcrtomb@plt+0x81c>
  42862c:	mov	x23, x0
  428630:	bl	4056b4 <wcrtomb@plt+0xb74>
  428634:	mov	x24, x0
  428638:	cmp	x21, x0
  42863c:	b.cs	428660 <wcrtomb@plt+0x23b20>  // b.hs, b.nlast
  428640:	ands	x8, x21, #0x1ff
  428644:	mov	x24, x21
  428648:	b.eq	428660 <wcrtomb@plt+0x23b20>  // b.none
  42864c:	add	x0, x23, x21
  428650:	sub	x2, x28, x8
  428654:	mov	w1, wzr
  428658:	bl	404360 <memset@plt>
  42865c:	mov	x24, x21
  428660:	mov	w0, w22
  428664:	mov	x1, x23
  428668:	mov	x2, x24
  42866c:	bl	444d88 <argp_parse@@Base+0xd4dc>
  428670:	cbz	x0, 4286e0 <wcrtomb@plt+0x23ba0>
  428674:	cmn	x0, #0x1
  428678:	b.eq	428748 <wcrtomb@plt+0x23c08>  // b.none
  42867c:	sub	x8, x0, #0x1
  428680:	and	x8, x8, #0xfffffffffffffe00
  428684:	sub	x21, x21, x0
  428688:	add	x0, x23, x8
  42868c:	bl	405670 <wcrtomb@plt+0xb30>
  428690:	cmp	x21, #0x0
  428694:	b.gt	428628 <wcrtomb@plt+0x23ae8>
  428698:	mov	w0, w22
  42869c:	bl	404520 <close@plt>
  4286a0:	cbz	w0, 428598 <wcrtomb@plt+0x23a58>
  4286a4:	mov	x0, x19
  4286a8:	bl	42a53c <wcrtomb@plt+0x259fc>
  4286ac:	b	428598 <wcrtomb@plt+0x23a58>
  4286b0:	bl	40ad2c <wcrtomb@plt+0x61ec>
  4286b4:	bl	4059a4 <wcrtomb@plt+0xe64>
  4286b8:	bl	427e5c <wcrtomb@plt+0x2331c>
  4286bc:	bl	41dfe0 <wcrtomb@plt+0x194a0>
  4286c0:	ldp	x20, x19, [sp, #240]
  4286c4:	ldp	x22, x21, [sp, #224]
  4286c8:	ldp	x24, x23, [sp, #208]
  4286cc:	ldp	x26, x25, [sp, #192]
  4286d0:	ldp	x28, x27, [sp, #176]
  4286d4:	ldp	x29, x30, [sp, #160]
  4286d8:	add	sp, sp, #0x100
  4286dc:	ret
  4286e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4286e4:	ldr	x8, [x8, #4064]
  4286e8:	cbz	x8, 4286f0 <wcrtomb@plt+0x23bb0>
  4286ec:	blr	x8
  4286f0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4286f4:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4286f8:	add	x1, x1, #0xd69
  4286fc:	add	x2, x2, #0xd84
  428700:	mov	w4, #0x5                   	// #5
  428704:	mov	x0, xzr
  428708:	mov	x3, x21
  42870c:	bl	404820 <dcngettext@plt>
  428710:	mov	x20, x0
  428714:	mov	x0, x19
  428718:	bl	444778 <argp_parse@@Base+0xcecc>
  42871c:	mov	x19, x0
  428720:	add	x1, sp, #0x8
  428724:	mov	x0, x21
  428728:	bl	43d080 <argp_parse@@Base+0x57d4>
  42872c:	mov	x4, x0
  428730:	mov	w0, wzr
  428734:	mov	w1, wzr
  428738:	mov	x2, x20
  42873c:	mov	x3, x19
  428740:	bl	403fa0 <error@plt>
  428744:	bl	40e96c <wcrtomb@plt+0x9e2c>
  428748:	ldr	x8, [sp, #80]
  42874c:	mov	x0, x19
  428750:	mov	x2, x24
  428754:	sub	x1, x8, x21
  428758:	bl	42ab7c <wcrtomb@plt+0x2603c>
  42875c:	bl	4045b0 <abort@plt>
  428760:	sub	sp, sp, #0x60
  428764:	stp	x24, x23, [sp, #48]
  428768:	stp	x22, x21, [sp, #64]
  42876c:	mov	w22, w0
  428770:	adrp	x24, 479000 <_obstack_memory_used@@Base+0x324b0>
  428774:	and	x23, x22, #0x1
  428778:	add	x24, x24, #0xe78
  42877c:	ldr	x21, [x24, x23, lsl #3]
  428780:	stp	x20, x19, [sp, #80]
  428784:	mov	x19, x2
  428788:	mov	x20, x1
  42878c:	cmn	x21, #0x1
  428790:	stp	x29, x30, [sp, #32]
  428794:	add	x29, sp, #0x20
  428798:	b.eq	4287b8 <wcrtomb@plt+0x23c78>  // b.none
  42879c:	cmn	x21, #0x1
  4287a0:	b.eq	428848 <wcrtomb@plt+0x23d08>  // b.none
  4287a4:	cbnz	x21, 4287d4 <wcrtomb@plt+0x23c94>
  4287a8:	mov	x0, x20
  4287ac:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4287b0:	str	x0, [x19]
  4287b4:	b	42885c <wcrtomb@plt+0x23d1c>
  4287b8:	bl	43d0b8 <argp_parse@@Base+0x580c>
  4287bc:	mov	x2, x0
  4287c0:	tbz	w22, #0, 428828 <wcrtomb@plt+0x23ce8>
  4287c4:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4287c8:	add	x0, x0, #0xda0
  4287cc:	mov	x1, x2
  4287d0:	b	428834 <wcrtomb@plt+0x23cf4>
  4287d4:	mov	x0, x20
  4287d8:	bl	403f40 <strlen@plt>
  4287dc:	add	x8, x0, #0x1
  4287e0:	mov	w0, #0x1                   	// #1
  4287e4:	bfi	x0, x8, #4, #60
  4287e8:	stp	x0, x8, [sp]
  4287ec:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4287f0:	mov	x22, x0
  4287f4:	str	x0, [sp, #16]
  4287f8:	sub	x1, x29, #0x8
  4287fc:	add	x2, sp, #0x8
  428800:	add	x3, sp, #0x10
  428804:	mov	x4, sp
  428808:	mov	x0, x21
  42880c:	stur	x20, [x29, #-8]
  428810:	bl	404680 <iconv@plt>
  428814:	cbz	x0, 428850 <wcrtomb@plt+0x23d10>
  428818:	mov	x0, x22
  42881c:	bl	404700 <free@plt>
  428820:	mov	w0, wzr
  428824:	b	428860 <wcrtomb@plt+0x23d20>
  428828:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  42882c:	add	x1, x1, #0xda0
  428830:	mov	x0, x2
  428834:	bl	404870 <iconv_open@plt>
  428838:	mov	x21, x0
  42883c:	str	x0, [x24, x23, lsl #3]
  428840:	cmn	x21, #0x1
  428844:	b.ne	4287a4 <wcrtomb@plt+0x23c64>  // b.any
  428848:	mov	w0, wzr
  42884c:	b	428860 <wcrtomb@plt+0x23d20>
  428850:	ldr	x8, [sp, #16]
  428854:	strb	wzr, [x8]
  428858:	str	x22, [x19]
  42885c:	mov	w0, #0x1                   	// #1
  428860:	ldp	x20, x19, [sp, #80]
  428864:	ldp	x22, x21, [sp, #64]
  428868:	ldp	x24, x23, [sp, #48]
  42886c:	ldp	x29, x30, [sp, #32]
  428870:	add	sp, sp, #0x60
  428874:	ret
  428878:	ldrb	w9, [x0]
  42887c:	cbz	w9, 428894 <wcrtomb@plt+0x23d54>
  428880:	add	x8, x0, #0x1
  428884:	sxtb	w9, w9
  428888:	tbnz	w9, #31, 42889c <wcrtomb@plt+0x23d5c>
  42888c:	ldrb	w9, [x8], #1
  428890:	cbnz	w9, 428884 <wcrtomb@plt+0x23d44>
  428894:	mov	w0, #0x1                   	// #1
  428898:	ret
  42889c:	mov	w0, wzr
  4288a0:	ret
  4288a4:	stp	x29, x30, [sp, #-48]!
  4288a8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4288ac:	add	x1, x1, #0x68b
  4288b0:	stp	x22, x21, [sp, #16]
  4288b4:	stp	x20, x19, [sp, #32]
  4288b8:	mov	x29, sp
  4288bc:	mov	x19, x0
  4288c0:	bl	404660 <strcmp@plt>
  4288c4:	adrp	x21, 479000 <_obstack_memory_used@@Base+0x324b0>
  4288c8:	cbz	w0, 42890c <wcrtomb@plt+0x23dcc>
  4288cc:	mov	x0, x19
  4288d0:	bl	403f40 <strlen@plt>
  4288d4:	cmp	x0, #0x3
  4288d8:	b.cc	428914 <wcrtomb@plt+0x23dd4>  // b.lo, b.ul, b.last
  4288dc:	ldrh	w8, [x19]
  4288e0:	ldrb	w10, [x19, #2]
  4288e4:	mov	w9, #0x6f6e                	// #28526
  4288e8:	mov	w11, #0x2d                  	// #45
  4288ec:	eor	w8, w8, w9
  4288f0:	eor	w9, w10, w11
  4288f4:	orr	w8, w8, w9
  4288f8:	add	x12, x19, #0x3
  4288fc:	tst	w8, #0xffff
  428900:	cset	w22, eq  // eq = none
  428904:	csel	x19, x12, x19, eq  // eq = none
  428908:	b	428918 <wcrtomb@plt+0x23dd8>
  42890c:	mov	w8, wzr
  428910:	b	428964 <wcrtomb@plt+0x23e24>
  428914:	mov	w22, wzr
  428918:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42891c:	ldr	x5, [x8, #4016]
  428920:	adrp	x20, 479000 <_obstack_memory_used@@Base+0x324b0>
  428924:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  428928:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  42892c:	add	x20, x20, #0xe8c
  428930:	add	x0, x0, #0xdaa
  428934:	add	x2, x2, #0xee0
  428938:	mov	w4, #0x4                   	// #4
  42893c:	mov	x1, x19
  428940:	mov	x3, x20
  428944:	bl	434698 <wcrtomb@plt+0x2fb58>
  428948:	ldr	w8, [x20, x0, lsl #2]
  42894c:	cbz	w22, 42895c <wcrtomb@plt+0x23e1c>
  428950:	ldr	w9, [x21, #3720]
  428954:	bic	w8, w9, w8
  428958:	b	428964 <wcrtomb@plt+0x23e24>
  42895c:	ldr	w9, [x21, #3720]
  428960:	orr	w8, w9, w8
  428964:	str	w8, [x21, #3720]
  428968:	ldp	x20, x19, [sp, #32]
  42896c:	ldp	x22, x21, [sp, #16]
  428970:	ldp	x29, x30, [sp], #48
  428974:	ret
  428978:	stp	x29, x30, [sp, #-96]!
  42897c:	stp	x28, x27, [sp, #16]
  428980:	stp	x26, x25, [sp, #32]
  428984:	stp	x24, x23, [sp, #48]
  428988:	stp	x22, x21, [sp, #64]
  42898c:	stp	x20, x19, [sp, #80]
  428990:	mov	x29, sp
  428994:	sub	sp, sp, #0xfd0
  428998:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42899c:	ldr	w8, [x8, #3952]
  4289a0:	cmp	w8, #0x1
  4289a4:	b.lt	428bb0 <wcrtomb@plt+0x24070>  // b.tstop
  4289a8:	mov	w22, w4
  4289ac:	mov	x19, x2
  4289b0:	mov	x20, x1
  4289b4:	mov	w21, w0
  4289b8:	cmn	w0, #0x64
  4289bc:	add	x24, x2, #0x58
  4289c0:	b.eq	4289d0 <wcrtomb@plt+0x23e90>  // b.none
  4289c4:	ldrb	w8, [x20]
  4289c8:	cmp	w8, #0x2f
  4289cc:	b.ne	428a90 <wcrtomb@plt+0x23f50>  // b.any
  4289d0:	mov	x0, x20
  4289d4:	mov	x1, x24
  4289d8:	bl	439fcc <argp_parse@@Base+0x2720>
  4289dc:	mov	w23, w0
  4289e0:	cbz	w23, 428bb0 <wcrtomb@plt+0x24070>
  4289e4:	cmn	w23, #0x1
  4289e8:	b.ne	428a00 <wcrtomb@plt+0x23ec0>  // b.any
  4289ec:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4289f0:	add	x0, x0, #0xfb0
  4289f4:	mov	x1, x20
  4289f8:	bl	42a2f4 <wcrtomb@plt+0x257b4>
  4289fc:	b	428bb0 <wcrtomb@plt+0x24070>
  428a00:	mov	w2, #0x8000                	// #32768
  428a04:	mov	w0, w21
  428a08:	mov	x1, x20
  428a0c:	bl	429f80 <wcrtomb@plt+0x25440>
  428a10:	cbz	x0, 428b54 <wcrtomb@plt+0x24014>
  428a14:	mov	x1, xzr
  428a18:	mov	x24, x0
  428a1c:	bl	404540 <acl_to_text@plt>
  428a20:	mov	x23, x0
  428a24:	mov	x0, x24
  428a28:	bl	404b10 <acl_free@plt>
  428a2c:	cbz	x23, 428b9c <wcrtomb@plt+0x2405c>
  428a30:	mov	x0, x23
  428a34:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  428a38:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  428a3c:	add	x1, x1, #0x64
  428a40:	mov	x24, x0
  428a44:	str	x0, [x19, #56]
  428a48:	bl	4049d0 <strcspn@plt>
  428a4c:	add	x8, x24, x0
  428a50:	mov	x9, x8
  428a54:	b	428a5c <wcrtomb@plt+0x23f1c>
  428a58:	add	x9, x9, #0x1
  428a5c:	ldrb	w10, [x9]
  428a60:	cmp	w10, #0x9
  428a64:	b.eq	428a58 <wcrtomb@plt+0x23f18>  // b.none
  428a68:	cmp	w10, #0x23
  428a6c:	b.ne	428a80 <wcrtomb@plt+0x23f40>  // b.any
  428a70:	ldrb	w10, [x9, #1]!
  428a74:	cmp	w10, #0xa
  428a78:	b.ne	428a70 <wcrtomb@plt+0x23f30>  // b.any
  428a7c:	b	428a5c <wcrtomb@plt+0x23f1c>
  428a80:	cbz	w10, 428b3c <wcrtomb@plt+0x23ffc>
  428a84:	add	x9, x9, #0x1
  428a88:	strb	w10, [x8], #1
  428a8c:	b	428a5c <wcrtomb@plt+0x23f1c>
  428a90:	add	x0, sp, #0x8
  428a94:	mov	w1, w21
  428a98:	mov	x2, x20
  428a9c:	add	x28, sp, #0x8
  428aa0:	bl	446bc4 <_obstack_memory_used@@Base+0x74>
  428aa4:	cbz	x0, 428b04 <wcrtomb@plt+0x23fc4>
  428aa8:	mov	x1, x24
  428aac:	mov	x26, x0
  428ab0:	bl	439fcc <argp_parse@@Base+0x2720>
  428ab4:	mov	w23, w0
  428ab8:	bl	404a10 <__errno_location@plt>
  428abc:	ldr	w27, [x0]
  428ac0:	mov	x25, x0
  428ac4:	cmp	x26, x28
  428ac8:	b.eq	428ad4 <wcrtomb@plt+0x23f94>  // b.none
  428acc:	mov	x0, x26
  428ad0:	bl	404700 <free@plt>
  428ad4:	cmn	w23, #0x1
  428ad8:	b.ne	4289e0 <wcrtomb@plt+0x23ea0>  // b.any
  428adc:	cmp	w27, #0x26
  428ae0:	b.hi	428cc0 <wcrtomb@plt+0x24180>  // b.pmore
  428ae4:	mov	w8, w27
  428ae8:	mov	w9, #0x1                   	// #1
  428aec:	lsl	x8, x9, x8
  428af0:	mov	x9, #0x2006                	// #8198
  428af4:	movk	x9, #0x10, lsl #16
  428af8:	movk	x9, #0x40, lsl #32
  428afc:	tst	x8, x9
  428b00:	b.eq	428cc0 <wcrtomb@plt+0x24180>  // b.none
  428b04:	add	x0, sp, #0x8
  428b08:	bl	444e80 <argp_parse@@Base+0xd5d4>
  428b0c:	cbnz	w0, 428cfc <wcrtomb@plt+0x241bc>
  428b10:	tbnz	w21, #31, 428b70 <wcrtomb@plt+0x24030>
  428b14:	ldr	w8, [sp, #8]
  428b18:	cmp	w8, w21
  428b1c:	b.ne	428b70 <wcrtomb@plt+0x24030>  // b.any
  428b20:	add	x0, sp, #0x8
  428b24:	bl	444ef0 <argp_parse@@Base+0xd644>
  428b28:	bl	404a10 <__errno_location@plt>
  428b2c:	mov	w8, #0x9                   	// #9
  428b30:	str	w8, [x0]
  428b34:	mov	w23, #0xffffffff            	// #-1
  428b38:	b	4289e0 <wcrtomb@plt+0x23ea0>
  428b3c:	sub	x9, x8, x24
  428b40:	mov	x0, x23
  428b44:	str	x9, [x19, #64]
  428b48:	strb	wzr, [x8]
  428b4c:	bl	404b10 <acl_free@plt>
  428b50:	b	428bac <wcrtomb@plt+0x2406c>
  428b54:	bl	404a10 <__errno_location@plt>
  428b58:	ldr	w8, [x0]
  428b5c:	cmp	w8, #0x5f
  428b60:	b.eq	428bac <wcrtomb@plt+0x2406c>  // b.none
  428b64:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  428b68:	add	x0, x0, #0x48
  428b6c:	b	428ba4 <wcrtomb@plt+0x24064>
  428b70:	mov	w0, w21
  428b74:	bl	403fb0 <fchdir@plt>
  428b78:	cbz	w0, 428c94 <wcrtomb@plt+0x24154>
  428b7c:	bl	404a10 <__errno_location@plt>
  428b80:	ldr	w24, [x0]
  428b84:	mov	x23, x0
  428b88:	add	x0, sp, #0x8
  428b8c:	bl	444ef0 <argp_parse@@Base+0xd644>
  428b90:	str	w24, [x23]
  428b94:	mov	w23, #0xffffffff            	// #-1
  428b98:	b	4289e0 <wcrtomb@plt+0x23ea0>
  428b9c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  428ba0:	add	x0, x0, #0x58
  428ba4:	mov	x1, x20
  428ba8:	bl	42a2f4 <wcrtomb@plt+0x257b4>
  428bac:	cbz	w22, 428bd0 <wcrtomb@plt+0x24090>
  428bb0:	add	sp, sp, #0xfd0
  428bb4:	ldp	x20, x19, [sp, #80]
  428bb8:	ldp	x22, x21, [sp, #64]
  428bbc:	ldp	x24, x23, [sp, #48]
  428bc0:	ldp	x26, x25, [sp, #32]
  428bc4:	ldp	x28, x27, [sp, #16]
  428bc8:	ldp	x29, x30, [sp], #96
  428bcc:	ret
  428bd0:	mov	w2, #0x4000                	// #16384
  428bd4:	mov	w0, w21
  428bd8:	mov	x1, x20
  428bdc:	bl	429f80 <wcrtomb@plt+0x25440>
  428be0:	cbz	x0, 428c78 <wcrtomb@plt+0x24138>
  428be4:	mov	x1, xzr
  428be8:	mov	x22, x0
  428bec:	bl	404540 <acl_to_text@plt>
  428bf0:	mov	x21, x0
  428bf4:	mov	x0, x22
  428bf8:	bl	404b10 <acl_free@plt>
  428bfc:	cbz	x21, 428cb4 <wcrtomb@plt+0x24174>
  428c00:	mov	x0, x21
  428c04:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  428c08:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  428c0c:	add	x1, x1, #0x64
  428c10:	mov	x20, x0
  428c14:	str	x0, [x19, #72]
  428c18:	bl	4049d0 <strcspn@plt>
  428c1c:	add	x8, x20, x0
  428c20:	mov	x9, x8
  428c24:	b	428c2c <wcrtomb@plt+0x240ec>
  428c28:	add	x9, x9, #0x1
  428c2c:	ldrb	w10, [x9]
  428c30:	cmp	w10, #0x9
  428c34:	b.eq	428c28 <wcrtomb@plt+0x240e8>  // b.none
  428c38:	cmp	w10, #0x23
  428c3c:	b.ne	428c50 <wcrtomb@plt+0x24110>  // b.any
  428c40:	ldrb	w10, [x9, #1]!
  428c44:	cmp	w10, #0xa
  428c48:	b.ne	428c40 <wcrtomb@plt+0x24100>  // b.any
  428c4c:	b	428c2c <wcrtomb@plt+0x240ec>
  428c50:	cbz	w10, 428c60 <wcrtomb@plt+0x24120>
  428c54:	add	x9, x9, #0x1
  428c58:	strb	w10, [x8], #1
  428c5c:	b	428c2c <wcrtomb@plt+0x240ec>
  428c60:	sub	x9, x8, x20
  428c64:	mov	x0, x21
  428c68:	str	x9, [x19, #80]
  428c6c:	strb	wzr, [x8]
  428c70:	bl	404b10 <acl_free@plt>
  428c74:	b	428bb0 <wcrtomb@plt+0x24070>
  428c78:	bl	404a10 <__errno_location@plt>
  428c7c:	ldr	w8, [x0]
  428c80:	cmp	w8, #0x5f
  428c84:	b.eq	428bb0 <wcrtomb@plt+0x24070>  // b.none
  428c88:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  428c8c:	add	x0, x0, #0x48
  428c90:	b	4289f4 <wcrtomb@plt+0x23eb4>
  428c94:	mov	x0, x20
  428c98:	mov	x1, x24
  428c9c:	bl	439fcc <argp_parse@@Base+0x2720>
  428ca0:	mov	w23, w0
  428ca4:	cmn	w0, #0x1
  428ca8:	b.eq	428cd0 <wcrtomb@plt+0x24190>  // b.none
  428cac:	mov	w24, wzr
  428cb0:	b	428cd8 <wcrtomb@plt+0x24198>
  428cb4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  428cb8:	add	x0, x0, #0x58
  428cbc:	b	4289f4 <wcrtomb@plt+0x23eb4>
  428cc0:	cmp	w27, #0x5f
  428cc4:	b.eq	428b04 <wcrtomb@plt+0x23fc4>  // b.none
  428cc8:	str	w27, [x25]
  428ccc:	b	4289e0 <wcrtomb@plt+0x23ea0>
  428cd0:	bl	404a10 <__errno_location@plt>
  428cd4:	ldr	w24, [x0]
  428cd8:	add	x0, sp, #0x8
  428cdc:	bl	444ed8 <argp_parse@@Base+0xd62c>
  428ce0:	cbnz	w0, 428d08 <wcrtomb@plt+0x241c8>
  428ce4:	add	x0, sp, #0x8
  428ce8:	bl	444ef0 <argp_parse@@Base+0xd644>
  428cec:	cbz	w24, 4289e0 <wcrtomb@plt+0x23ea0>
  428cf0:	bl	404a10 <__errno_location@plt>
  428cf4:	str	w24, [x0]
  428cf8:	b	4289e0 <wcrtomb@plt+0x23ea0>
  428cfc:	bl	404a10 <__errno_location@plt>
  428d00:	ldr	w0, [x0]
  428d04:	bl	43d9d0 <argp_parse@@Base+0x6124>
  428d08:	bl	404a10 <__errno_location@plt>
  428d0c:	ldr	w0, [x0]
  428d10:	bl	43da10 <argp_parse@@Base+0x6164>
  428d14:	stp	x29, x30, [sp, #-48]!
  428d18:	and	w8, w2, #0xff
  428d1c:	cmp	w8, #0x32
  428d20:	str	x21, [sp, #16]
  428d24:	stp	x20, x19, [sp, #32]
  428d28:	mov	x29, sp
  428d2c:	b.eq	428d94 <wcrtomb@plt+0x24254>  // b.none
  428d30:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428d34:	ldr	w8, [x8, #3952]
  428d38:	cmp	w8, #0x1
  428d3c:	b.lt	428d94 <wcrtomb@plt+0x24254>  // b.tstop
  428d40:	ldr	x3, [x0, #56]
  428d44:	mov	w21, w2
  428d48:	mov	w2, #0x8000                	// #32768
  428d4c:	mov	w4, wzr
  428d50:	mov	x19, x1
  428d54:	mov	x20, x0
  428d58:	bl	428da4 <wcrtomb@plt+0x24264>
  428d5c:	and	w8, w21, #0xff
  428d60:	cmp	w8, #0x44
  428d64:	b.eq	428d70 <wcrtomb@plt+0x24230>  // b.none
  428d68:	cmp	w8, #0x35
  428d6c:	b.ne	428d94 <wcrtomb@plt+0x24254>  // b.any
  428d70:	ldr	x3, [x20, #72]
  428d74:	mov	x0, x20
  428d78:	mov	x1, x19
  428d7c:	ldp	x20, x19, [sp, #32]
  428d80:	ldr	x21, [sp, #16]
  428d84:	mov	w2, #0x4000                	// #16384
  428d88:	mov	w4, #0x1                   	// #1
  428d8c:	ldp	x29, x30, [sp], #48
  428d90:	b	428da4 <wcrtomb@plt+0x24264>
  428d94:	ldp	x20, x19, [sp, #32]
  428d98:	ldr	x21, [sp, #16]
  428d9c:	ldp	x29, x30, [sp], #48
  428da0:	ret
  428da4:	stp	x29, x30, [sp, #-96]!
  428da8:	stp	x28, x27, [sp, #16]
  428dac:	stp	x26, x25, [sp, #32]
  428db0:	stp	x24, x23, [sp, #48]
  428db4:	stp	x22, x21, [sp, #64]
  428db8:	stp	x20, x19, [sp, #80]
  428dbc:	mov	x29, sp
  428dc0:	sub	sp, sp, #0xfc0
  428dc4:	mov	w20, w2
  428dc8:	mov	x19, x1
  428dcc:	cbz	x3, 428ec0 <wcrtomb@plt+0x24380>
  428dd0:	ldrb	w8, [x3]
  428dd4:	mov	x21, x3
  428dd8:	cbz	w8, 428eb8 <wcrtomb@plt+0x24378>
  428ddc:	adrp	x23, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  428de0:	adrp	x24, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  428de4:	add	x23, x23, #0xf2
  428de8:	add	x24, x24, #0xef
  428dec:	mov	x26, x21
  428df0:	mov	x22, x21
  428df4:	b	428e08 <wcrtomb@plt+0x242c8>
  428df8:	strb	w8, [x22], #1
  428dfc:	ldrb	w8, [x25, #1]!
  428e00:	mov	x26, x25
  428e04:	cbz	w8, 428eac <wcrtomb@plt+0x2436c>
  428e08:	mov	x0, x26
  428e0c:	mov	x1, x23
  428e10:	bl	4049d0 <strcspn@plt>
  428e14:	add	x25, x26, x0
  428e18:	ldrb	w8, [x25]
  428e1c:	cmp	w8, #0x3a
  428e20:	b.ne	428e58 <wcrtomb@plt+0x24318>  // b.any
  428e24:	add	x25, x25, #0x1
  428e28:	mov	x0, x25
  428e2c:	mov	x1, x23
  428e30:	bl	4049d0 <strcspn@plt>
  428e34:	add	x25, x25, x0
  428e38:	ldrb	w8, [x25]
  428e3c:	cmp	w8, #0x3a
  428e40:	b.ne	428e58 <wcrtomb@plt+0x24318>  // b.any
  428e44:	add	x25, x25, #0x1
  428e48:	mov	x0, x25
  428e4c:	mov	x1, x23
  428e50:	bl	4049d0 <strcspn@plt>
  428e54:	add	x25, x25, x0
  428e58:	cmp	x26, x22
  428e5c:	sub	x27, x25, x26
  428e60:	b.eq	428e74 <wcrtomb@plt+0x24334>  // b.none
  428e64:	mov	x0, x22
  428e68:	mov	x1, x26
  428e6c:	mov	x2, x27
  428e70:	bl	403ed0 <memmove@plt>
  428e74:	ldrb	w8, [x25]
  428e78:	add	x22, x22, x27
  428e7c:	cmp	w8, #0x3a
  428e80:	b.ne	428e98 <wcrtomb@plt+0x24358>  // b.any
  428e84:	mov	x0, x25
  428e88:	mov	x1, x24
  428e8c:	bl	4049d0 <strcspn@plt>
  428e90:	add	x25, x25, x0
  428e94:	ldrb	w8, [x25]
  428e98:	cmp	w8, #0x2c
  428e9c:	b.eq	428df8 <wcrtomb@plt+0x242b8>  // b.none
  428ea0:	cmp	w8, #0xa
  428ea4:	b.eq	428df8 <wcrtomb@plt+0x242b8>  // b.none
  428ea8:	b	428e00 <wcrtomb@plt+0x242c0>
  428eac:	cmp	x26, x22
  428eb0:	b.eq	428eb8 <wcrtomb@plt+0x24378>  // b.none
  428eb4:	strb	wzr, [x22]
  428eb8:	mov	x0, x21
  428ebc:	b	428f84 <wcrtomb@plt+0x24444>
  428ec0:	tbz	w4, #0, 428f40 <wcrtomb@plt+0x24400>
  428ec4:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  428ec8:	ldr	w21, [x8, #1872]
  428ecc:	cmn	w21, #0x64
  428ed0:	b.eq	428ee0 <wcrtomb@plt+0x243a0>  // b.none
  428ed4:	ldrb	w8, [x19]
  428ed8:	cmp	w8, #0x2f
  428edc:	b.ne	429190 <wcrtomb@plt+0x24650>  // b.any
  428ee0:	mov	x0, x19
  428ee4:	bl	4041c0 <acl_delete_def_file@plt>
  428ee8:	mov	w20, w0
  428eec:	cbz	w20, 429030 <wcrtomb@plt+0x244f0>
  428ef0:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  428ef4:	ldrb	w8, [x8, #3722]
  428ef8:	tbz	w8, #5, 429030 <wcrtomb@plt+0x244f0>
  428efc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428f00:	ldr	x8, [x8, #4064]
  428f04:	cbz	x8, 428f0c <wcrtomb@plt+0x243cc>
  428f08:	blr	x8
  428f0c:	bl	404a10 <__errno_location@plt>
  428f10:	ldr	w20, [x0]
  428f14:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  428f18:	add	x1, x1, #0x67
  428f1c:	mov	w2, #0x5                   	// #5
  428f20:	mov	x0, xzr
  428f24:	bl	404900 <dcgettext@plt>
  428f28:	mov	x2, x0
  428f2c:	mov	w0, wzr
  428f30:	mov	w1, w20
  428f34:	mov	x3, x19
  428f38:	bl	403fa0 <error@plt>
  428f3c:	b	429030 <wcrtomb@plt+0x244f0>
  428f40:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  428f44:	add	x9, x9, #0xf6
  428f48:	ldr	w8, [x0, #104]
  428f4c:	ldp	q0, q1, [x9]
  428f50:	stp	q0, q1, [sp]
  428f54:	tbnz	w8, #8, 429100 <wcrtomb@plt+0x245c0>
  428f58:	tbnz	w8, #7, 42910c <wcrtomb@plt+0x245cc>
  428f5c:	tbnz	w8, #6, 429118 <wcrtomb@plt+0x245d8>
  428f60:	tbnz	w8, #5, 429124 <wcrtomb@plt+0x245e4>
  428f64:	tbnz	w8, #4, 429130 <wcrtomb@plt+0x245f0>
  428f68:	tbnz	w8, #3, 42913c <wcrtomb@plt+0x245fc>
  428f6c:	tbnz	w8, #2, 429148 <wcrtomb@plt+0x24608>
  428f70:	tbnz	w8, #1, 429154 <wcrtomb@plt+0x24614>
  428f74:	tbz	w8, #0, 428f80 <wcrtomb@plt+0x24440>
  428f78:	mov	w8, #0x78                  	// #120
  428f7c:	strb	w8, [sp, #30]
  428f80:	mov	x0, sp
  428f84:	bl	404930 <acl_from_text@plt>
  428f88:	mov	x21, x0
  428f8c:	cbz	x0, 429020 <wcrtomb@plt+0x244e0>
  428f90:	adrp	x8, 477000 <_obstack_memory_used@@Base+0x304b0>
  428f94:	ldr	w23, [x8, #1872]
  428f98:	cmn	w23, #0x64
  428f9c:	b.eq	428fac <wcrtomb@plt+0x2446c>  // b.none
  428fa0:	ldrb	w8, [x19]
  428fa4:	cmp	w8, #0x2f
  428fa8:	b.ne	429050 <wcrtomb@plt+0x24510>  // b.any
  428fac:	mov	x0, x19
  428fb0:	mov	w1, w20
  428fb4:	mov	x2, x21
  428fb8:	bl	4044b0 <acl_set_file@plt>
  428fbc:	mov	w22, w0
  428fc0:	cmn	w22, #0x1
  428fc4:	b.ne	429014 <wcrtomb@plt+0x244d4>  // b.any
  428fc8:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  428fcc:	ldrb	w8, [x8, #3722]
  428fd0:	tbz	w8, #5, 429014 <wcrtomb@plt+0x244d4>
  428fd4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  428fd8:	ldr	x8, [x8, #4064]
  428fdc:	cbz	x8, 428fe4 <wcrtomb@plt+0x244a4>
  428fe0:	blr	x8
  428fe4:	bl	404a10 <__errno_location@plt>
  428fe8:	ldr	w20, [x0]
  428fec:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  428ff0:	add	x1, x1, #0xba
  428ff4:	mov	w2, #0x5                   	// #5
  428ff8:	mov	x0, xzr
  428ffc:	bl	404900 <dcgettext@plt>
  429000:	mov	x2, x0
  429004:	mov	w0, wzr
  429008:	mov	w1, w20
  42900c:	mov	x3, x19
  429010:	bl	403fa0 <error@plt>
  429014:	mov	x0, x21
  429018:	bl	404b10 <acl_free@plt>
  42901c:	b	429030 <wcrtomb@plt+0x244f0>
  429020:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  429024:	add	x0, x0, #0xac
  429028:	mov	x1, x19
  42902c:	bl	42a2f4 <wcrtomb@plt+0x257b4>
  429030:	add	sp, sp, #0xfc0
  429034:	ldp	x20, x19, [sp, #80]
  429038:	ldp	x22, x21, [sp, #64]
  42903c:	ldp	x24, x23, [sp, #48]
  429040:	ldp	x26, x25, [sp, #32]
  429044:	ldp	x28, x27, [sp, #16]
  429048:	ldp	x29, x30, [sp], #96
  42904c:	ret
  429050:	mov	x0, sp
  429054:	mov	w1, w23
  429058:	mov	x2, x19
  42905c:	mov	x27, sp
  429060:	bl	446bc4 <_obstack_memory_used@@Base+0x74>
  429064:	cbz	x0, 4290c8 <wcrtomb@plt+0x24588>
  429068:	mov	w1, w20
  42906c:	mov	x2, x21
  429070:	mov	x25, x0
  429074:	bl	4044b0 <acl_set_file@plt>
  429078:	mov	w22, w0
  42907c:	bl	404a10 <__errno_location@plt>
  429080:	ldr	w26, [x0]
  429084:	mov	x24, x0
  429088:	cmp	x25, x27
  42908c:	b.eq	429098 <wcrtomb@plt+0x24558>  // b.none
  429090:	mov	x0, x25
  429094:	bl	404700 <free@plt>
  429098:	cmn	w22, #0x1
  42909c:	b.ne	428fc0 <wcrtomb@plt+0x24480>  // b.any
  4290a0:	cmp	w26, #0x26
  4290a4:	b.hi	429288 <wcrtomb@plt+0x24748>  // b.pmore
  4290a8:	mov	w8, w26
  4290ac:	mov	w9, #0x1                   	// #1
  4290b0:	lsl	x8, x9, x8
  4290b4:	mov	x9, #0x2006                	// #8198
  4290b8:	movk	x9, #0x10, lsl #16
  4290bc:	movk	x9, #0x40, lsl #32
  4290c0:	tst	x8, x9
  4290c4:	b.eq	429288 <wcrtomb@plt+0x24748>  // b.none
  4290c8:	mov	x0, sp
  4290cc:	bl	444e80 <argp_parse@@Base+0xd5d4>
  4290d0:	cbnz	w0, 42931c <wcrtomb@plt+0x247dc>
  4290d4:	tbnz	w23, #31, 429164 <wcrtomb@plt+0x24624>
  4290d8:	ldr	w8, [sp]
  4290dc:	cmp	w8, w23
  4290e0:	b.ne	429164 <wcrtomb@plt+0x24624>  // b.any
  4290e4:	mov	x0, sp
  4290e8:	bl	444ef0 <argp_parse@@Base+0xd644>
  4290ec:	bl	404a10 <__errno_location@plt>
  4290f0:	mov	w8, #0x9                   	// #9
  4290f4:	str	w8, [x0]
  4290f8:	mov	w22, #0xffffffff            	// #-1
  4290fc:	b	428fc0 <wcrtomb@plt+0x24480>
  429100:	mov	w9, #0x72                  	// #114
  429104:	strb	w9, [sp, #6]
  429108:	tbz	w8, #7, 428f5c <wcrtomb@plt+0x2441c>
  42910c:	mov	w9, #0x77                  	// #119
  429110:	strb	w9, [sp, #7]
  429114:	tbz	w8, #6, 428f60 <wcrtomb@plt+0x24420>
  429118:	mov	w9, #0x78                  	// #120
  42911c:	strb	w9, [sp, #8]
  429120:	tbz	w8, #5, 428f64 <wcrtomb@plt+0x24424>
  429124:	mov	w9, #0x72                  	// #114
  429128:	strb	w9, [sp, #17]
  42912c:	tbz	w8, #4, 428f68 <wcrtomb@plt+0x24428>
  429130:	mov	w9, #0x77                  	// #119
  429134:	strb	w9, [sp, #18]
  429138:	tbz	w8, #3, 428f6c <wcrtomb@plt+0x2442c>
  42913c:	mov	w9, #0x78                  	// #120
  429140:	strb	w9, [sp, #19]
  429144:	tbz	w8, #2, 428f70 <wcrtomb@plt+0x24430>
  429148:	mov	w9, #0x72                  	// #114
  42914c:	strb	w9, [sp, #28]
  429150:	tbz	w8, #1, 428f74 <wcrtomb@plt+0x24434>
  429154:	mov	w9, #0x77                  	// #119
  429158:	strb	w9, [sp, #29]
  42915c:	tbnz	w8, #0, 428f78 <wcrtomb@plt+0x24438>
  429160:	b	428f80 <wcrtomb@plt+0x24440>
  429164:	mov	w0, w23
  429168:	bl	403fb0 <fchdir@plt>
  42916c:	cbz	w0, 429238 <wcrtomb@plt+0x246f8>
  429170:	bl	404a10 <__errno_location@plt>
  429174:	ldr	w22, [x0]
  429178:	mov	x20, x0
  42917c:	mov	x0, sp
  429180:	bl	444ef0 <argp_parse@@Base+0xd644>
  429184:	str	w22, [x20]
  429188:	mov	w22, #0xffffffff            	// #-1
  42918c:	b	428fc0 <wcrtomb@plt+0x24480>
  429190:	mov	x0, sp
  429194:	mov	w1, w21
  429198:	mov	x2, x19
  42919c:	mov	x25, sp
  4291a0:	bl	446bc4 <_obstack_memory_used@@Base+0x74>
  4291a4:	cbz	x0, 429200 <wcrtomb@plt+0x246c0>
  4291a8:	mov	x23, x0
  4291ac:	bl	4041c0 <acl_delete_def_file@plt>
  4291b0:	mov	w20, w0
  4291b4:	bl	404a10 <__errno_location@plt>
  4291b8:	ldr	w24, [x0]
  4291bc:	mov	x22, x0
  4291c0:	cmp	x23, x25
  4291c4:	b.eq	4291d0 <wcrtomb@plt+0x24690>  // b.none
  4291c8:	mov	x0, x23
  4291cc:	bl	404700 <free@plt>
  4291d0:	cmn	w20, #0x1
  4291d4:	b.ne	428eec <wcrtomb@plt+0x243ac>  // b.any
  4291d8:	cmp	w24, #0x26
  4291dc:	b.hi	4292e0 <wcrtomb@plt+0x247a0>  // b.pmore
  4291e0:	mov	w8, w24
  4291e4:	mov	w9, #0x1                   	// #1
  4291e8:	lsl	x8, x9, x8
  4291ec:	mov	x9, #0x2006                	// #8198
  4291f0:	movk	x9, #0x10, lsl #16
  4291f4:	movk	x9, #0x40, lsl #32
  4291f8:	tst	x8, x9
  4291fc:	b.eq	4292e0 <wcrtomb@plt+0x247a0>  // b.none
  429200:	mov	x0, sp
  429204:	bl	444e80 <argp_parse@@Base+0xd5d4>
  429208:	cbnz	w0, 42931c <wcrtomb@plt+0x247dc>
  42920c:	tbnz	w21, #31, 42925c <wcrtomb@plt+0x2471c>
  429210:	ldr	w8, [sp]
  429214:	cmp	w8, w21
  429218:	b.ne	42925c <wcrtomb@plt+0x2471c>  // b.any
  42921c:	mov	x0, sp
  429220:	bl	444ef0 <argp_parse@@Base+0xd644>
  429224:	bl	404a10 <__errno_location@plt>
  429228:	mov	w8, #0x9                   	// #9
  42922c:	str	w8, [x0]
  429230:	mov	w20, #0xffffffff            	// #-1
  429234:	b	428eec <wcrtomb@plt+0x243ac>
  429238:	mov	x0, x19
  42923c:	mov	w1, w20
  429240:	mov	x2, x21
  429244:	bl	4044b0 <acl_set_file@plt>
  429248:	mov	w22, w0
  42924c:	cmn	w0, #0x1
  429250:	b.eq	429298 <wcrtomb@plt+0x24758>  // b.none
  429254:	mov	w20, wzr
  429258:	b	4292a0 <wcrtomb@plt+0x24760>
  42925c:	mov	w0, w21
  429260:	bl	403fb0 <fchdir@plt>
  429264:	cbz	w0, 4292c4 <wcrtomb@plt+0x24784>
  429268:	bl	404a10 <__errno_location@plt>
  42926c:	ldr	w21, [x0]
  429270:	mov	x20, x0
  429274:	mov	x0, sp
  429278:	bl	444ef0 <argp_parse@@Base+0xd644>
  42927c:	str	w21, [x20]
  429280:	mov	w20, #0xffffffff            	// #-1
  429284:	b	428eec <wcrtomb@plt+0x243ac>
  429288:	cmp	w26, #0x5f
  42928c:	b.eq	4290c8 <wcrtomb@plt+0x24588>  // b.none
  429290:	str	w26, [x24]
  429294:	b	428fc0 <wcrtomb@plt+0x24480>
  429298:	bl	404a10 <__errno_location@plt>
  42929c:	ldr	w20, [x0]
  4292a0:	mov	x0, sp
  4292a4:	bl	444ed8 <argp_parse@@Base+0xd62c>
  4292a8:	cbnz	w0, 429328 <wcrtomb@plt+0x247e8>
  4292ac:	mov	x0, sp
  4292b0:	bl	444ef0 <argp_parse@@Base+0xd644>
  4292b4:	cbz	w20, 428fc0 <wcrtomb@plt+0x24480>
  4292b8:	bl	404a10 <__errno_location@plt>
  4292bc:	str	w20, [x0]
  4292c0:	b	428fc0 <wcrtomb@plt+0x24480>
  4292c4:	mov	x0, x19
  4292c8:	bl	4041c0 <acl_delete_def_file@plt>
  4292cc:	mov	w20, w0
  4292d0:	cmn	w0, #0x1
  4292d4:	b.eq	4292f0 <wcrtomb@plt+0x247b0>  // b.none
  4292d8:	mov	w21, wzr
  4292dc:	b	4292f8 <wcrtomb@plt+0x247b8>
  4292e0:	cmp	w24, #0x5f
  4292e4:	b.eq	429200 <wcrtomb@plt+0x246c0>  // b.none
  4292e8:	str	w24, [x22]
  4292ec:	b	428eec <wcrtomb@plt+0x243ac>
  4292f0:	bl	404a10 <__errno_location@plt>
  4292f4:	ldr	w21, [x0]
  4292f8:	mov	x0, sp
  4292fc:	bl	444ed8 <argp_parse@@Base+0xd62c>
  429300:	cbnz	w0, 429328 <wcrtomb@plt+0x247e8>
  429304:	mov	x0, sp
  429308:	bl	444ef0 <argp_parse@@Base+0xd644>
  42930c:	cbz	w21, 428eec <wcrtomb@plt+0x243ac>
  429310:	bl	404a10 <__errno_location@plt>
  429314:	str	w21, [x0]
  429318:	b	428eec <wcrtomb@plt+0x243ac>
  42931c:	bl	404a10 <__errno_location@plt>
  429320:	ldr	w0, [x0]
  429324:	bl	43d9d0 <argp_parse@@Base+0x6124>
  429328:	bl	404a10 <__errno_location@plt>
  42932c:	ldr	w0, [x0]
  429330:	bl	43da10 <argp_parse@@Base+0x6164>
  429334:	stp	x29, x30, [sp, #-32]!
  429338:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42933c:	add	x8, x8, #0x928
  429340:	tst	w1, #0x1
  429344:	add	x9, x8, #0x18
  429348:	stp	x20, x19, [sp, #16]
  42934c:	csel	x20, x8, x9, ne  // ne = any
  429350:	ldp	x9, x8, [x20, #8]
  429354:	mov	x19, x0
  429358:	mov	x29, sp
  42935c:	cmp	x8, x9
  429360:	b.ne	42938c <wcrtomb@plt+0x2484c>  // b.any
  429364:	cbz	x8, 429394 <wcrtomb@plt+0x24854>
  429368:	ldr	x0, [x20]
  42936c:	cbz	x0, 4293a4 <wcrtomb@plt+0x24864>
  429370:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  429374:	movk	x9, #0xaaa, lsl #48
  429378:	cmp	x8, x9
  42937c:	b.cs	4293d8 <wcrtomb@plt+0x24898>  // b.hs, b.nlast
  429380:	add	x8, x8, x8, lsr #1
  429384:	add	x8, x8, #0x1
  429388:	b	4293ac <wcrtomb@plt+0x2486c>
  42938c:	ldr	x0, [x20]
  429390:	b	4293c0 <wcrtomb@plt+0x24880>
  429394:	mov	w8, #0x4                   	// #4
  429398:	str	x8, [x20, #8]
  42939c:	ldr	x0, [x20]
  4293a0:	cbnz	x0, 429370 <wcrtomb@plt+0x24830>
  4293a4:	lsr	x9, x8, #60
  4293a8:	cbnz	x9, 4293d8 <wcrtomb@plt+0x24898>
  4293ac:	lsl	x1, x8, #3
  4293b0:	str	x8, [x20, #8]
  4293b4:	bl	445a68 <argp_parse@@Base+0xe1bc>
  4293b8:	ldr	x8, [x20, #16]
  4293bc:	str	x0, [x20]
  4293c0:	add	x9, x8, #0x1
  4293c4:	str	x9, [x20, #16]
  4293c8:	str	x19, [x0, x8, lsl #3]
  4293cc:	ldp	x20, x19, [sp, #16]
  4293d0:	ldp	x29, x30, [sp], #32
  4293d4:	ret
  4293d8:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  4293dc:	stp	x29, x30, [sp, #-16]!
  4293e0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4293e4:	ldr	x8, [x8, #2352]
  4293e8:	mov	x29, sp
  4293ec:	cbz	x8, 4293fc <wcrtomb@plt+0x248bc>
  4293f0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4293f4:	ldr	x0, [x8, #2344]
  4293f8:	bl	404700 <free@plt>
  4293fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429400:	ldr	x8, [x8, #2376]
  429404:	cbz	x8, 429418 <wcrtomb@plt+0x248d8>
  429408:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42940c:	ldr	x0, [x8, #2368]
  429410:	ldp	x29, x30, [sp], #16
  429414:	b	404700 <free@plt>
  429418:	ldp	x29, x30, [sp], #16
  42941c:	ret
  429420:	sub	sp, sp, #0x80
  429424:	stp	x29, x30, [sp, #32]
  429428:	stp	x28, x27, [sp, #48]
  42942c:	stp	x26, x25, [sp, #64]
  429430:	stp	x24, x23, [sp, #80]
  429434:	stp	x22, x21, [sp, #96]
  429438:	stp	x20, x19, [sp, #112]
  42943c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429440:	ldr	w8, [x8, #3712]
  429444:	add	x29, sp, #0x20
  429448:	str	x2, [sp, #16]
  42944c:	cmp	w8, #0x1
  429450:	b.lt	429774 <wcrtomb@plt+0x24c34>  // b.tstop
  429454:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429458:	ldr	x2, [x24, #2392]
  42945c:	mov	w20, w3
  429460:	mov	x19, x1
  429464:	mov	w22, w0
  429468:	adrp	x21, 479000 <_obstack_memory_used@@Base+0x324b0>
  42946c:	cbnz	x2, 429498 <wcrtomb@plt+0x24958>
  429470:	ldr	x1, [x21, #3824]
  429474:	cbz	x1, 429480 <wcrtomb@plt+0x24940>
  429478:	tbz	x1, #63, 429484 <wcrtomb@plt+0x24944>
  42947c:	b	429598 <wcrtomb@plt+0x24a58>
  429480:	mov	w1, #0x80                  	// #128
  429484:	mov	x0, xzr
  429488:	str	x1, [x21, #3824]
  42948c:	bl	445a68 <argp_parse@@Base+0xe1bc>
  429490:	mov	x2, x0
  429494:	str	x0, [x24, #2392]
  429498:	mov	x28, #0x5555555555555555    	// #6148914691236517205
  42949c:	movk	x28, #0x5554
  4294a0:	b	4294b8 <wcrtomb@plt+0x24978>
  4294a4:	mov	w1, #0x80                  	// #128
  4294a8:	str	x1, [x21, #3824]
  4294ac:	bl	445a68 <argp_parse@@Base+0xe1bc>
  4294b0:	mov	x2, x0
  4294b4:	str	x0, [x24, #2392]
  4294b8:	ldr	x3, [x21, #3824]
  4294bc:	cbz	w20, 4294dc <wcrtomb@plt+0x2499c>
  4294c0:	mov	w0, w20
  4294c4:	mov	x1, x2
  4294c8:	mov	x2, x3
  4294cc:	bl	4048c0 <flistxattr@plt>
  4294d0:	cmn	x0, #0x1
  4294d4:	b.eq	4294f0 <wcrtomb@plt+0x249b0>  // b.none
  4294d8:	b	42952c <wcrtomb@plt+0x249ec>
  4294dc:	mov	w0, w22
  4294e0:	mov	x1, x19
  4294e4:	bl	43410c <wcrtomb@plt+0x2f5cc>
  4294e8:	cmn	x0, #0x1
  4294ec:	b.ne	42952c <wcrtomb@plt+0x249ec>  // b.any
  4294f0:	bl	404a10 <__errno_location@plt>
  4294f4:	ldr	w8, [x0]
  4294f8:	cmp	w8, #0x22
  4294fc:	b.ne	42954c <wcrtomb@plt+0x24a0c>  // b.any
  429500:	ldr	x0, [x24, #2392]
  429504:	ldr	x1, [x21, #3824]
  429508:	cbz	x0, 429520 <wcrtomb@plt+0x249e0>
  42950c:	cmp	x1, x28
  429510:	b.cs	429598 <wcrtomb@plt+0x24a58>  // b.hs, b.nlast
  429514:	add	x8, x1, x1, lsr #1
  429518:	add	x1, x8, #0x1
  42951c:	b	4294a8 <wcrtomb@plt+0x24968>
  429520:	cbz	x1, 4294a4 <wcrtomb@plt+0x24964>
  429524:	tbz	x1, #63, 4294a8 <wcrtomb@plt+0x24968>
  429528:	b	429598 <wcrtomb@plt+0x24a58>
  42952c:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429530:	ldr	x27, [x21, #2400]
  429534:	ldr	x24, [x24, #2392]
  429538:	mov	x23, x0
  42953c:	cbz	x27, 429588 <wcrtomb@plt+0x24a48>
  429540:	cmp	x23, #0x1
  429544:	b.ge	4295bc <wcrtomb@plt+0x24a7c>  // b.tcont
  429548:	b	429774 <wcrtomb@plt+0x24c34>
  42954c:	cmp	w20, #0x0
  429550:	mov	x1, x19
  429554:	ldp	x20, x19, [sp, #112]
  429558:	ldp	x22, x21, [sp, #96]
  42955c:	ldp	x24, x23, [sp, #80]
  429560:	ldp	x26, x25, [sp, #64]
  429564:	ldp	x28, x27, [sp, #48]
  429568:	ldp	x29, x30, [sp, #32]
  42956c:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  429570:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  429574:	add	x8, x8, #0xfcd
  429578:	add	x9, x9, #0xfc0
  42957c:	csel	x0, x9, x8, eq  // eq = none
  429580:	add	sp, sp, #0x80
  429584:	b	42a2f4 <wcrtomb@plt+0x257b4>
  429588:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42958c:	ldr	x1, [x8, #3832]
  429590:	cbz	x1, 42959c <wcrtomb@plt+0x24a5c>
  429594:	tbz	x1, #63, 4295a0 <wcrtomb@plt+0x24a60>
  429598:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  42959c:	mov	w1, #0x80                  	// #128
  4295a0:	mov	x0, xzr
  4295a4:	str	x1, [x8, #3832]
  4295a8:	bl	445a68 <argp_parse@@Base+0xe1bc>
  4295ac:	mov	x27, x0
  4295b0:	str	x0, [x21, #2400]
  4295b4:	cmp	x23, #0x1
  4295b8:	b.lt	429774 <wcrtomb@plt+0x24c34>  // b.tstop
  4295bc:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4295c0:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4295c4:	add	x8, x8, #0xfe4
  4295c8:	add	x9, x9, #0xfd8
  4295cc:	cmp	w20, #0x0
  4295d0:	adrp	x25, 479000 <_obstack_memory_used@@Base+0x324b0>
  4295d4:	csel	x8, x9, x8, eq  // eq = none
  4295d8:	str	x8, [sp, #8]
  4295dc:	mov	x0, x24
  4295e0:	bl	403f40 <strlen@plt>
  4295e4:	stur	x0, [x29, #-8]
  4295e8:	b	429600 <wcrtomb@plt+0x24ac0>
  4295ec:	mov	w1, #0x80                  	// #128
  4295f0:	str	x1, [x25, #3832]
  4295f4:	bl	445a68 <argp_parse@@Base+0xe1bc>
  4295f8:	mov	x27, x0
  4295fc:	str	x0, [x21, #2400]
  429600:	ldr	x4, [x25, #3832]
  429604:	cbz	w20, 429628 <wcrtomb@plt+0x24ae8>
  429608:	mov	w0, w20
  42960c:	mov	x1, x24
  429610:	mov	x2, x27
  429614:	mov	x3, x4
  429618:	bl	404760 <fgetxattr@plt>
  42961c:	cmn	x0, #0x1
  429620:	b.eq	429644 <wcrtomb@plt+0x24b04>  // b.none
  429624:	b	429680 <wcrtomb@plt+0x24b40>
  429628:	mov	w0, w22
  42962c:	mov	x1, x19
  429630:	mov	x2, x24
  429634:	mov	x3, x27
  429638:	bl	433d34 <wcrtomb@plt+0x2f1f4>
  42963c:	cmn	x0, #0x1
  429640:	b.ne	429680 <wcrtomb@plt+0x24b40>  // b.any
  429644:	bl	404a10 <__errno_location@plt>
  429648:	ldr	w8, [x0]
  42964c:	cmp	w8, #0x22
  429650:	b.ne	4296d4 <wcrtomb@plt+0x24b94>  // b.any
  429654:	ldr	x0, [x21, #2400]
  429658:	ldr	x1, [x25, #3832]
  42965c:	cbz	x0, 429674 <wcrtomb@plt+0x24b34>
  429660:	cmp	x1, x28
  429664:	b.cs	429598 <wcrtomb@plt+0x24a58>  // b.hs, b.nlast
  429668:	add	x8, x1, x1, lsr #1
  42966c:	add	x1, x8, #0x1
  429670:	b	4295f0 <wcrtomb@plt+0x24ab0>
  429674:	cbz	x1, 4295ec <wcrtomb@plt+0x24aac>
  429678:	tbz	x1, #63, 4295f0 <wcrtomb@plt+0x24ab0>
  42967c:	b	429598 <wcrtomb@plt+0x24a58>
  429680:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429684:	ldr	x8, [x8, #2352]
  429688:	mov	x27, x0
  42968c:	cbz	x8, 4296ec <wcrtomb@plt+0x24bac>
  429690:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429694:	ldr	x8, [x8, #2360]
  429698:	cbz	x8, 429754 <wcrtomb@plt+0x24c14>
  42969c:	mov	x26, xzr
  4296a0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4296a4:	ldr	x8, [x8, #2344]
  4296a8:	mov	x1, x24
  4296ac:	mov	w2, wzr
  4296b0:	ldr	x0, [x8, x26, lsl #3]
  4296b4:	bl	4047f0 <fnmatch@plt>
  4296b8:	cbz	w0, 4296ec <wcrtomb@plt+0x24bac>
  4296bc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4296c0:	ldr	x8, [x8, #2360]
  4296c4:	add	x26, x26, #0x1
  4296c8:	cmp	x8, x26
  4296cc:	b.hi	4296a0 <wcrtomb@plt+0x24b60>  // b.pmore
  4296d0:	b	429754 <wcrtomb@plt+0x24c14>
  4296d4:	cmp	w8, #0x3d
  4296d8:	b.eq	429754 <wcrtomb@plt+0x24c14>  // b.none
  4296dc:	ldr	x0, [sp, #8]
  4296e0:	mov	x1, x19
  4296e4:	bl	42a2f4 <wcrtomb@plt+0x257b4>
  4296e8:	b	429754 <wcrtomb@plt+0x24c14>
  4296ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4296f0:	add	x8, x8, #0x948
  4296f4:	ldr	x8, [x8]
  4296f8:	cbz	x8, 429740 <wcrtomb@plt+0x24c00>
  4296fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429700:	add	x8, x8, #0x948
  429704:	ldr	x8, [x8, #8]
  429708:	cbz	x8, 429740 <wcrtomb@plt+0x24c00>
  42970c:	mov	x26, xzr
  429710:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429714:	ldr	x8, [x8, #2368]
  429718:	mov	x1, x24
  42971c:	mov	w2, wzr
  429720:	ldr	x0, [x8, x26, lsl #3]
  429724:	bl	4047f0 <fnmatch@plt>
  429728:	cbz	w0, 429754 <wcrtomb@plt+0x24c14>
  42972c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429730:	ldr	x8, [x8, #2384]
  429734:	add	x26, x26, #0x1
  429738:	cmp	x8, x26
  42973c:	b.hi	429710 <wcrtomb@plt+0x24bd0>  // b.pmore
  429740:	ldr	x2, [x21, #2400]
  429744:	ldr	x0, [sp, #16]
  429748:	mov	x1, x24
  42974c:	mov	x3, x27
  429750:	bl	41237c <wcrtomb@plt+0xd83c>
  429754:	ldur	x8, [x29, #-8]
  429758:	add	x8, x8, #0x1
  42975c:	sub	x23, x23, x8
  429760:	cmp	x23, #0x1
  429764:	b.lt	429774 <wcrtomb@plt+0x24c34>  // b.tstop
  429768:	ldr	x27, [x21, #2400]
  42976c:	add	x24, x24, x8
  429770:	b	4295dc <wcrtomb@plt+0x24a9c>
  429774:	ldp	x20, x19, [sp, #112]
  429778:	ldp	x22, x21, [sp, #96]
  42977c:	ldp	x24, x23, [sp, #80]
  429780:	ldp	x26, x25, [sp, #64]
  429784:	ldp	x28, x27, [sp, #48]
  429788:	ldp	x29, x30, [sp, #32]
  42978c:	add	sp, sp, #0x80
  429790:	ret
  429794:	stp	x29, x30, [sp, #-48]!
  429798:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42979c:	ldr	x8, [x8, #2352]
  4297a0:	stp	x20, x19, [sp, #32]
  4297a4:	mov	x19, x0
  4297a8:	stp	x22, x21, [sp, #16]
  4297ac:	mov	x29, sp
  4297b0:	cbz	x8, 4297f4 <wcrtomb@plt+0x24cb4>
  4297b4:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4297b8:	ldr	x8, [x20, #2360]
  4297bc:	cbz	x8, 429810 <wcrtomb@plt+0x24cd0>
  4297c0:	mov	x21, xzr
  4297c4:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4297c8:	ldr	x8, [x22, #2344]
  4297cc:	mov	x1, x19
  4297d0:	mov	w2, wzr
  4297d4:	ldr	x0, [x8, x21, lsl #3]
  4297d8:	bl	4047f0 <fnmatch@plt>
  4297dc:	cbz	w0, 429824 <wcrtomb@plt+0x24ce4>
  4297e0:	ldr	x8, [x20, #2360]
  4297e4:	add	x21, x21, #0x1
  4297e8:	cmp	x8, x21
  4297ec:	b.hi	4297c8 <wcrtomb@plt+0x24c88>  // b.pmore
  4297f0:	b	429810 <wcrtomb@plt+0x24cd0>
  4297f4:	tbnz	w1, #0, 429824 <wcrtomb@plt+0x24ce4>
  4297f8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4297fc:	add	x1, x1, #0x116
  429800:	mov	w2, #0x5                   	// #5
  429804:	mov	x0, x19
  429808:	bl	404300 <strncmp@plt>
  42980c:	cbz	w0, 429824 <wcrtomb@plt+0x24ce4>
  429810:	mov	w0, #0x1                   	// #1
  429814:	ldp	x20, x19, [sp, #32]
  429818:	ldp	x22, x21, [sp, #16]
  42981c:	ldp	x29, x30, [sp], #48
  429820:	ret
  429824:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429828:	add	x8, x8, #0x948
  42982c:	ldr	x9, [x8]
  429830:	mov	w0, wzr
  429834:	cbz	x9, 429814 <wcrtomb@plt+0x24cd4>
  429838:	ldr	x8, [x8, #8]
  42983c:	cbz	x8, 429814 <wcrtomb@plt+0x24cd4>
  429840:	mov	x20, xzr
  429844:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429848:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42984c:	ldr	x8, [x21, #2368]
  429850:	mov	x1, x19
  429854:	mov	w2, wzr
  429858:	ldr	x0, [x8, x20, lsl #3]
  42985c:	bl	4047f0 <fnmatch@plt>
  429860:	cbz	w0, 429810 <wcrtomb@plt+0x24cd0>
  429864:	ldr	x8, [x22, #2384]
  429868:	add	x20, x20, #0x1
  42986c:	cmp	x8, x20
  429870:	b.hi	42984c <wcrtomb@plt+0x24d0c>  // b.pmore
  429874:	mov	w0, wzr
  429878:	b	429814 <wcrtomb@plt+0x24cd4>
  42987c:	stp	x29, x30, [sp, #-32]!
  429880:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429884:	ldr	w8, [x8, #4040]
  429888:	str	x19, [sp, #16]
  42988c:	mov	x29, sp
  429890:	cmp	w8, #0x1
  429894:	b.lt	4298e0 <wcrtomb@plt+0x24da0>  // b.tstop
  429898:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42989c:	ldrb	w8, [x19, #2408]
  4298a0:	tbnz	w8, #0, 4298d8 <wcrtomb@plt+0x24d98>
  4298a4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4298a8:	ldr	x8, [x8, #4064]
  4298ac:	cbz	x8, 4298b4 <wcrtomb@plt+0x24d74>
  4298b0:	blr	x8
  4298b4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4298b8:	add	x1, x1, #0xfee
  4298bc:	mov	w2, #0x5                   	// #5
  4298c0:	mov	x0, xzr
  4298c4:	bl	404900 <dcgettext@plt>
  4298c8:	mov	x2, x0
  4298cc:	mov	w0, wzr
  4298d0:	mov	w1, wzr
  4298d4:	bl	403fa0 <error@plt>
  4298d8:	mov	w8, #0x1                   	// #1
  4298dc:	strb	w8, [x19, #2408]
  4298e0:	ldr	x19, [sp, #16]
  4298e4:	ldp	x29, x30, [sp], #32
  4298e8:	ret
  4298ec:	stp	x29, x30, [sp, #-32]!
  4298f0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4298f4:	ldr	w8, [x8, #4040]
  4298f8:	str	x19, [sp, #16]
  4298fc:	mov	x29, sp
  429900:	cmp	w8, #0x1
  429904:	b.lt	429950 <wcrtomb@plt+0x24e10>  // b.tstop
  429908:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42990c:	ldrb	w8, [x19, #2412]
  429910:	tbnz	w8, #0, 429948 <wcrtomb@plt+0x24e08>
  429914:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429918:	ldr	x8, [x8, #4064]
  42991c:	cbz	x8, 429924 <wcrtomb@plt+0x24de4>
  429920:	blr	x8
  429924:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  429928:	add	x1, x1, #0xfee
  42992c:	mov	w2, #0x5                   	// #5
  429930:	mov	x0, xzr
  429934:	bl	404900 <dcgettext@plt>
  429938:	mov	x2, x0
  42993c:	mov	w0, wzr
  429940:	mov	w1, wzr
  429944:	bl	403fa0 <error@plt>
  429948:	mov	w8, #0x1                   	// #1
  42994c:	strb	w8, [x19, #2412]
  429950:	ldr	x19, [sp, #16]
  429954:	ldp	x29, x30, [sp], #32
  429958:	ret
  42995c:	stp	x29, x30, [sp, #-96]!
  429960:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429964:	ldr	w8, [x8, #3712]
  429968:	stp	x28, x27, [sp, #16]
  42996c:	stp	x26, x25, [sp, #32]
  429970:	stp	x24, x23, [sp, #48]
  429974:	cmp	w8, #0x1
  429978:	stp	x22, x21, [sp, #64]
  42997c:	stp	x20, x19, [sp, #80]
  429980:	mov	x29, sp
  429984:	b.lt	429acc <wcrtomb@plt+0x24f8c>  // b.tstop
  429988:	ldr	x8, [x0, #328]
  42998c:	mov	x22, x0
  429990:	cbz	x8, 429acc <wcrtomb@plt+0x24f8c>
  429994:	adrp	x23, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  429998:	mov	w19, w3
  42999c:	mov	w20, w2
  4299a0:	mov	x21, x1
  4299a4:	mov	x28, xzr
  4299a8:	mov	x24, xzr
  4299ac:	add	x23, x23, #0xf
  4299b0:	adrp	x27, 477000 <_obstack_memory_used@@Base+0x304b0>
  4299b4:	b	429a08 <wcrtomb@plt+0x24ec8>
  4299b8:	bl	404a10 <__errno_location@plt>
  4299bc:	ldr	w27, [x0]
  4299c0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4299c4:	mov	w2, #0x5                   	// #5
  4299c8:	mov	x0, xzr
  4299cc:	add	x1, x1, #0x131
  4299d0:	bl	404900 <dcgettext@plt>
  4299d4:	mov	x2, x0
  4299d8:	mov	w0, wzr
  4299dc:	mov	w1, w27
  4299e0:	mov	x3, x26
  4299e4:	mov	x4, x25
  4299e8:	mov	x5, x21
  4299ec:	bl	403fa0 <error@plt>
  4299f0:	adrp	x27, 477000 <_obstack_memory_used@@Base+0x304b0>
  4299f4:	ldr	x8, [x22, #328]
  4299f8:	add	x24, x24, #0x1
  4299fc:	add	x28, x28, #0x18
  429a00:	cmp	x24, x8
  429a04:	b.cs	429acc <wcrtomb@plt+0x24f8c>  // b.hs, b.nlast
  429a08:	ldr	x8, [x22, #336]
  429a0c:	and	w9, w20, #0xff
  429a10:	cmp	w9, #0x30
  429a14:	ldr	x8, [x8, x28]
  429a18:	add	x25, x8, #0xd
  429a1c:	b.ne	429a3c <wcrtomb@plt+0x24efc>  // b.any
  429a20:	mov	x0, x25
  429a24:	mov	x1, x23
  429a28:	bl	404660 <strcmp@plt>
  429a2c:	cmp	w0, #0x0
  429a30:	cset	w8, ne  // ne = any
  429a34:	cmp	w8, w19
  429a38:	b.eq	4299f4 <wcrtomb@plt+0x24eb4>  // b.none
  429a3c:	mov	x0, x25
  429a40:	mov	w1, wzr
  429a44:	bl	429794 <wcrtomb@plt+0x24c54>
  429a48:	tbnz	w0, #0, 4299f4 <wcrtomb@plt+0x24eb4>
  429a4c:	ldr	x8, [x22, #336]
  429a50:	add	x8, x8, x28
  429a54:	ldr	x3, [x8, #8]
  429a58:	cbz	x3, 4299f4 <wcrtomb@plt+0x24eb4>
  429a5c:	ldr	x4, [x8, #16]
  429a60:	ldr	w0, [x27, #1872]
  429a64:	and	w8, w20, #0xff
  429a68:	mov	x1, x21
  429a6c:	mov	x2, x25
  429a70:	cmp	w8, #0x32
  429a74:	b.ne	429a94 <wcrtomb@plt+0x24f54>  // b.any
  429a78:	mov	w5, wzr
  429a7c:	bl	433934 <wcrtomb@plt+0x2edf4>
  429a80:	adrp	x26, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  429a84:	add	x26, x26, #0x127
  429a88:	cmn	w0, #0x1
  429a8c:	b.ne	4299f4 <wcrtomb@plt+0x24eb4>  // b.any
  429a90:	b	429aac <wcrtomb@plt+0x24f6c>
  429a94:	mov	w5, wzr
  429a98:	bl	433728 <wcrtomb@plt+0x2ebe8>
  429a9c:	adrp	x26, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  429aa0:	add	x26, x26, #0x11c
  429aa4:	cmn	w0, #0x1
  429aa8:	b.ne	4299f4 <wcrtomb@plt+0x24eb4>  // b.any
  429aac:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  429ab0:	ldrb	w8, [x8, #3722]
  429ab4:	tbz	w8, #5, 4299f4 <wcrtomb@plt+0x24eb4>
  429ab8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429abc:	ldr	x8, [x8, #4064]
  429ac0:	cbz	x8, 4299b8 <wcrtomb@plt+0x24e78>
  429ac4:	blr	x8
  429ac8:	b	4299b8 <wcrtomb@plt+0x24e78>
  429acc:	ldp	x20, x19, [sp, #80]
  429ad0:	ldp	x22, x21, [sp, #64]
  429ad4:	ldp	x24, x23, [sp, #48]
  429ad8:	ldp	x26, x25, [sp, #32]
  429adc:	ldp	x28, x27, [sp, #16]
  429ae0:	ldp	x29, x30, [sp], #96
  429ae4:	ret
  429ae8:	stp	x29, x30, [sp, #-64]!
  429aec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429af0:	ldr	w8, [x8, #3700]
  429af4:	stp	x20, x19, [sp, #48]
  429af8:	mov	x19, x1
  429afc:	stp	x24, x23, [sp, #16]
  429b00:	cmp	w8, #0x1
  429b04:	stp	x22, x21, [sp, #32]
  429b08:	mov	x29, sp
  429b0c:	b.gt	429b18 <wcrtomb@plt+0x24fd8>
  429b10:	strb	wzr, [x19]
  429b14:	b	429be8 <wcrtomb@plt+0x250a8>
  429b18:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429b1c:	ldr	w9, [x8, #3712]
  429b20:	mov	x20, x0
  429b24:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429b28:	adrp	x21, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429b2c:	cmp	w9, #0x1
  429b30:	b.ge	429b4c <wcrtomb@plt+0x2500c>  // b.tcont
  429b34:	ldr	w9, [x22, #4040]
  429b38:	cmp	w9, #0x0
  429b3c:	b.gt	429b4c <wcrtomb@plt+0x2500c>
  429b40:	ldr	w9, [x21, #3952]
  429b44:	cmp	w9, #0x1
  429b48:	b.lt	429ba8 <wcrtomb@plt+0x25068>  // b.tstop
  429b4c:	mov	w9, #0x20                  	// #32
  429b50:	strh	w9, [x19]
  429b54:	ldr	w8, [x8, #3712]
  429b58:	cmp	w8, #0x1
  429b5c:	b.lt	429ba8 <wcrtomb@plt+0x25068>  // b.tstop
  429b60:	ldr	x8, [x20, #328]
  429b64:	cbz	x8, 429ba8 <wcrtomb@plt+0x25068>
  429b68:	mov	x23, xzr
  429b6c:	mov	x24, xzr
  429b70:	ldr	x8, [x20, #336]
  429b74:	mov	w1, wzr
  429b78:	ldr	x8, [x8, x23]
  429b7c:	add	x0, x8, #0xd
  429b80:	bl	429794 <wcrtomb@plt+0x24c54>
  429b84:	tbz	w0, #0, 429ba0 <wcrtomb@plt+0x25060>
  429b88:	ldr	x8, [x20, #328]
  429b8c:	add	x24, x24, #0x1
  429b90:	add	x23, x23, #0x18
  429b94:	cmp	x8, x24
  429b98:	b.hi	429b70 <wcrtomb@plt+0x25030>  // b.pmore
  429b9c:	b	429ba8 <wcrtomb@plt+0x25068>
  429ba0:	mov	w8, #0x2a                  	// #42
  429ba4:	strb	w8, [x19]
  429ba8:	ldr	w8, [x22, #4040]
  429bac:	cmp	w8, #0x1
  429bb0:	b.lt	429bc4 <wcrtomb@plt+0x25084>  // b.tstop
  429bb4:	ldr	x8, [x20, #48]
  429bb8:	cbz	x8, 429bc4 <wcrtomb@plt+0x25084>
  429bbc:	mov	w8, #0x2e                  	// #46
  429bc0:	strb	w8, [x19]
  429bc4:	ldr	w8, [x21, #3952]
  429bc8:	cmp	w8, #0x1
  429bcc:	b.lt	429be8 <wcrtomb@plt+0x250a8>  // b.tstop
  429bd0:	ldr	x8, [x20, #64]
  429bd4:	cbnz	x8, 429be0 <wcrtomb@plt+0x250a0>
  429bd8:	ldr	x8, [x20, #80]
  429bdc:	cbz	x8, 429be8 <wcrtomb@plt+0x250a8>
  429be0:	mov	w8, #0x2b                  	// #43
  429be4:	strb	w8, [x19]
  429be8:	ldp	x20, x19, [sp, #48]
  429bec:	ldp	x22, x21, [sp, #32]
  429bf0:	ldp	x24, x23, [sp, #16]
  429bf4:	ldp	x29, x30, [sp], #64
  429bf8:	ret
  429bfc:	stp	x29, x30, [sp, #-64]!
  429c00:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429c04:	ldr	w8, [x8, #3700]
  429c08:	stp	x24, x23, [sp, #16]
  429c0c:	stp	x22, x21, [sp, #32]
  429c10:	stp	x20, x19, [sp, #48]
  429c14:	cmp	w8, #0x3
  429c18:	mov	x29, sp
  429c1c:	b.lt	429d68 <wcrtomb@plt+0x25228>  // b.tstop
  429c20:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429c24:	ldr	w8, [x8, #4040]
  429c28:	mov	x19, x0
  429c2c:	cmp	w8, #0x1
  429c30:	b.lt	429c54 <wcrtomb@plt+0x25114>  // b.tstop
  429c34:	ldr	x3, [x19, #48]
  429c38:	cbz	x3, 429c54 <wcrtomb@plt+0x25114>
  429c3c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429c40:	ldr	x0, [x8, #2888]
  429c44:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  429c48:	add	x2, x2, #0x23
  429c4c:	mov	w1, #0x1                   	// #1
  429c50:	bl	404650 <__fprintf_chk@plt>
  429c54:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429c58:	ldr	w8, [x8, #3952]
  429c5c:	cmp	w8, #0x1
  429c60:	b.lt	429ce4 <wcrtomb@plt+0x251a4>  // b.tstop
  429c64:	ldr	x8, [x19, #64]
  429c68:	cbnz	x8, 429c74 <wcrtomb@plt+0x25134>
  429c6c:	ldr	x8, [x19, #80]
  429c70:	cbz	x8, 429ce4 <wcrtomb@plt+0x251a4>
  429c74:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429c78:	ldr	x0, [x20, #2888]
  429c7c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  429c80:	add	x2, x2, #0x2c
  429c84:	mov	w1, #0x1                   	// #1
  429c88:	bl	404650 <__fprintf_chk@plt>
  429c8c:	ldp	x1, x2, [x19, #56]
  429c90:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  429c94:	add	x0, x0, #0x66
  429c98:	bl	429d7c <wcrtomb@plt+0x2523c>
  429c9c:	ldr	x8, [x19, #64]
  429ca0:	cbz	x8, 429cc0 <wcrtomb@plt+0x25180>
  429ca4:	ldr	x8, [x19, #80]
  429ca8:	cbz	x8, 429cc0 <wcrtomb@plt+0x25180>
  429cac:	ldr	x0, [x20, #2888]
  429cb0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  429cb4:	add	x2, x2, #0xf0
  429cb8:	mov	w1, #0x1                   	// #1
  429cbc:	bl	404650 <__fprintf_chk@plt>
  429cc0:	ldp	x1, x2, [x19, #72]
  429cc4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  429cc8:	add	x0, x0, #0x32
  429ccc:	bl	429d7c <wcrtomb@plt+0x2523c>
  429cd0:	ldr	x0, [x20, #2888]
  429cd4:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  429cd8:	add	x2, x2, #0x783
  429cdc:	mov	w1, #0x1                   	// #1
  429ce0:	bl	404650 <__fprintf_chk@plt>
  429ce4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429ce8:	ldr	w8, [x8, #3712]
  429cec:	cmp	w8, #0x1
  429cf0:	b.lt	429d68 <wcrtomb@plt+0x25228>  // b.tstop
  429cf4:	ldr	x8, [x19, #328]
  429cf8:	cbz	x8, 429d68 <wcrtomb@plt+0x25228>
  429cfc:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  429d00:	mov	x22, xzr
  429d04:	mov	x23, xzr
  429d08:	adrp	x24, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429d0c:	add	x20, x20, #0x3b
  429d10:	b	429d28 <wcrtomb@plt+0x251e8>
  429d14:	ldr	x8, [x19, #328]
  429d18:	add	x23, x23, #0x1
  429d1c:	add	x22, x22, #0x18
  429d20:	cmp	x8, x23
  429d24:	b.ls	429d68 <wcrtomb@plt+0x25228>  // b.plast
  429d28:	ldr	x8, [x19, #336]
  429d2c:	mov	w1, wzr
  429d30:	ldr	x8, [x8, x22]
  429d34:	add	x21, x8, #0xd
  429d38:	mov	x0, x21
  429d3c:	bl	429794 <wcrtomb@plt+0x24c54>
  429d40:	tbnz	w0, #0, 429d14 <wcrtomb@plt+0x251d4>
  429d44:	ldr	x8, [x19, #336]
  429d48:	ldr	x0, [x24, #2888]
  429d4c:	mov	w1, #0x1                   	// #1
  429d50:	mov	x2, x20
  429d54:	add	x8, x8, x22
  429d58:	ldr	x3, [x8, #16]
  429d5c:	mov	x4, x21
  429d60:	bl	404650 <__fprintf_chk@plt>
  429d64:	b	429d14 <wcrtomb@plt+0x251d4>
  429d68:	ldp	x20, x19, [sp, #48]
  429d6c:	ldp	x22, x21, [sp, #32]
  429d70:	ldp	x24, x23, [sp, #16]
  429d74:	ldp	x29, x30, [sp], #64
  429d78:	ret
  429d7c:	sub	sp, sp, #0xc0
  429d80:	stp	x29, x30, [sp, #96]
  429d84:	stp	x28, x27, [sp, #112]
  429d88:	stp	x26, x25, [sp, #128]
  429d8c:	stp	x24, x23, [sp, #144]
  429d90:	stp	x22, x21, [sp, #160]
  429d94:	stp	x20, x19, [sp, #176]
  429d98:	add	x29, sp, #0x60
  429d9c:	cbz	x1, 429f60 <wcrtomb@plt+0x25420>
  429da0:	mov	x19, x2
  429da4:	cbz	x2, 429f60 <wcrtomb@plt+0x25420>
  429da8:	mov	x20, x1
  429dac:	mov	x21, x0
  429db0:	bl	403f40 <strlen@plt>
  429db4:	adrp	x3, 445000 <argp_parse@@Base+0xd754>
  429db8:	adrp	x4, 404000 <sigprocmask@plt>
  429dbc:	mov	x22, x0
  429dc0:	add	x3, x3, #0x9e8
  429dc4:	add	x4, x4, #0x700
  429dc8:	add	x0, sp, #0x8
  429dcc:	mov	x1, xzr
  429dd0:	mov	x2, xzr
  429dd4:	bl	4467e8 <_obstack_begin@@Base>
  429dd8:	adrp	x23, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  429ddc:	mov	w27, wzr
  429de0:	sxtw	x22, w22
  429de4:	add	x23, x23, #0xb4c
  429de8:	mov	w28, #0x2c                  	// #44
  429dec:	mov	x24, x20
  429df0:	b	429e24 <wcrtomb@plt+0x252e4>
  429df4:	mov	x1, x24
  429df8:	mov	x2, x26
  429dfc:	bl	403ec0 <memcpy@plt>
  429e00:	ldr	x8, [sp, #32]
  429e04:	add	w9, w25, #0x1
  429e08:	add	w27, w9, w27
  429e0c:	sxtw	x10, w27
  429e10:	cmp	x10, x19
  429e14:	add	x8, x8, x26
  429e18:	add	x24, x24, w9, sxtw
  429e1c:	str	x8, [sp, #32]
  429e20:	b.hi	429ec8 <wcrtomb@plt+0x25388>  // b.pmore
  429e24:	mov	x0, x24
  429e28:	mov	x1, x23
  429e2c:	bl	4049d0 <strcspn@plt>
  429e30:	mov	x25, x0
  429e34:	cbz	w25, 429ec4 <wcrtomb@plt+0x25384>
  429e38:	cmp	x24, x20
  429e3c:	b.eq	429e68 <wcrtomb@plt+0x25328>  // b.none
  429e40:	ldp	x8, x9, [sp, #32]
  429e44:	cmp	x9, x8
  429e48:	b.ne	429e5c <wcrtomb@plt+0x2531c>  // b.any
  429e4c:	add	x0, sp, #0x8
  429e50:	mov	w1, #0x1                   	// #1
  429e54:	bl	44693c <_obstack_newchunk@@Base>
  429e58:	ldr	x8, [sp, #32]
  429e5c:	add	x9, x8, #0x1
  429e60:	str	x9, [sp, #32]
  429e64:	strb	w28, [x8]
  429e68:	ldp	x0, x8, [sp, #32]
  429e6c:	sub	x8, x8, x0
  429e70:	cmp	x8, x22
  429e74:	b.cs	429e88 <wcrtomb@plt+0x25348>  // b.hs, b.nlast
  429e78:	add	x0, sp, #0x8
  429e7c:	mov	x1, x22
  429e80:	bl	44693c <_obstack_newchunk@@Base>
  429e84:	ldr	x0, [sp, #32]
  429e88:	mov	x1, x21
  429e8c:	mov	x2, x22
  429e90:	bl	403ec0 <memcpy@plt>
  429e94:	ldp	x8, x9, [sp, #32]
  429e98:	sxtw	x26, w25
  429e9c:	add	x0, x8, x22
  429ea0:	sub	x8, x9, x0
  429ea4:	cmp	x8, x26
  429ea8:	str	x0, [sp, #32]
  429eac:	b.cs	429df4 <wcrtomb@plt+0x252b4>  // b.hs, b.nlast
  429eb0:	add	x0, sp, #0x8
  429eb4:	mov	x1, x26
  429eb8:	bl	44693c <_obstack_newchunk@@Base>
  429ebc:	ldr	x0, [sp, #32]
  429ec0:	b	429df4 <wcrtomb@plt+0x252b4>
  429ec4:	ldr	x8, [sp, #32]
  429ec8:	ldr	x9, [sp, #40]
  429ecc:	cmp	x9, x8
  429ed0:	b.ne	429ee4 <wcrtomb@plt+0x253a4>  // b.any
  429ed4:	add	x0, sp, #0x8
  429ed8:	mov	w1, #0x1                   	// #1
  429edc:	bl	44693c <_obstack_newchunk@@Base>
  429ee0:	ldr	x8, [sp, #32]
  429ee4:	add	x9, x8, #0x1
  429ee8:	str	x9, [sp, #32]
  429eec:	strb	wzr, [x8]
  429ef0:	ldp	x3, x8, [sp, #24]
  429ef4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  429ef8:	ldr	x0, [x9, #2888]
  429efc:	cmp	x8, x3
  429f00:	b.ne	429f10 <wcrtomb@plt+0x253d0>  // b.any
  429f04:	ldrb	w9, [sp, #88]
  429f08:	orr	w9, w9, #0x2
  429f0c:	strb	w9, [sp, #88]
  429f10:	ldr	x10, [sp, #56]
  429f14:	ldr	x11, [sp, #16]
  429f18:	ldr	x9, [sp, #40]
  429f1c:	add	x8, x10, x8
  429f20:	bic	x8, x8, x10
  429f24:	sub	x10, x8, x11
  429f28:	sub	x11, x9, x11
  429f2c:	cmp	x10, x11
  429f30:	str	x8, [sp, #32]
  429f34:	b.ls	429f40 <wcrtomb@plt+0x25400>  // b.plast
  429f38:	mov	x8, x9
  429f3c:	str	x9, [sp, #32]
  429f40:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  429f44:	add	x2, x2, #0x7a4
  429f48:	mov	w1, #0x1                   	// #1
  429f4c:	str	x8, [sp, #24]
  429f50:	bl	404650 <__fprintf_chk@plt>
  429f54:	add	x0, sp, #0x8
  429f58:	mov	x1, xzr
  429f5c:	bl	446ab4 <_obstack_free@@Base>
  429f60:	ldp	x20, x19, [sp, #176]
  429f64:	ldp	x22, x21, [sp, #160]
  429f68:	ldp	x24, x23, [sp, #144]
  429f6c:	ldp	x26, x25, [sp, #128]
  429f70:	ldp	x28, x27, [sp, #112]
  429f74:	ldp	x29, x30, [sp, #96]
  429f78:	add	sp, sp, #0xc0
  429f7c:	ret
  429f80:	stp	x29, x30, [sp, #-96]!
  429f84:	str	x28, [sp, #16]
  429f88:	stp	x26, x25, [sp, #32]
  429f8c:	stp	x24, x23, [sp, #48]
  429f90:	stp	x22, x21, [sp, #64]
  429f94:	stp	x20, x19, [sp, #80]
  429f98:	mov	x29, sp
  429f9c:	sub	sp, sp, #0xfc0
  429fa0:	mov	w20, w2
  429fa4:	cmn	w0, #0x64
  429fa8:	mov	x21, x1
  429fac:	b.eq	429fbc <wcrtomb@plt+0x2547c>  // b.none
  429fb0:	ldrb	w8, [x21]
  429fb4:	cmp	w8, #0x2f
  429fb8:	b.ne	429fe4 <wcrtomb@plt+0x254a4>  // b.any
  429fbc:	mov	x0, x21
  429fc0:	mov	w1, w20
  429fc4:	add	sp, sp, #0xfc0
  429fc8:	ldp	x20, x19, [sp, #80]
  429fcc:	ldp	x22, x21, [sp, #64]
  429fd0:	ldp	x24, x23, [sp, #48]
  429fd4:	ldp	x26, x25, [sp, #32]
  429fd8:	ldr	x28, [sp, #16]
  429fdc:	ldp	x29, x30, [sp], #96
  429fe0:	b	4046b0 <acl_get_file@plt>
  429fe4:	mov	w22, w0
  429fe8:	mov	x0, sp
  429fec:	mov	w1, w22
  429ff0:	mov	x2, x21
  429ff4:	mov	x26, sp
  429ff8:	bl	446bc4 <_obstack_memory_used@@Base+0x74>
  429ffc:	cbz	x0, 42a058 <wcrtomb@plt+0x25518>
  42a000:	mov	w1, w20
  42a004:	mov	x24, x0
  42a008:	bl	4046b0 <acl_get_file@plt>
  42a00c:	mov	x19, x0
  42a010:	bl	404a10 <__errno_location@plt>
  42a014:	ldr	w25, [x0]
  42a018:	mov	x23, x0
  42a01c:	cmp	x24, x26
  42a020:	b.eq	42a02c <wcrtomb@plt+0x254ec>  // b.none
  42a024:	mov	x0, x24
  42a028:	bl	404700 <free@plt>
  42a02c:	cbnz	x19, 42a110 <wcrtomb@plt+0x255d0>
  42a030:	cmp	w25, #0x26
  42a034:	b.hi	42a0d8 <wcrtomb@plt+0x25598>  // b.pmore
  42a038:	mov	w8, w25
  42a03c:	mov	w9, #0x1                   	// #1
  42a040:	lsl	x8, x9, x8
  42a044:	mov	x9, #0x2006                	// #8198
  42a048:	movk	x9, #0x10, lsl #16
  42a04c:	movk	x9, #0x40, lsl #32
  42a050:	tst	x8, x9
  42a054:	b.eq	42a0d8 <wcrtomb@plt+0x25598>  // b.none
  42a058:	mov	x0, sp
  42a05c:	bl	444e80 <argp_parse@@Base+0xd5d4>
  42a060:	cbnz	w0, 42a134 <wcrtomb@plt+0x255f4>
  42a064:	tbnz	w22, #31, 42a090 <wcrtomb@plt+0x25550>
  42a068:	ldr	w8, [sp]
  42a06c:	cmp	w8, w22
  42a070:	b.ne	42a090 <wcrtomb@plt+0x25550>  // b.any
  42a074:	mov	x0, sp
  42a078:	bl	444ef0 <argp_parse@@Base+0xd644>
  42a07c:	bl	404a10 <__errno_location@plt>
  42a080:	mov	w8, #0x9                   	// #9
  42a084:	mov	x19, xzr
  42a088:	str	w8, [x0]
  42a08c:	b	42a110 <wcrtomb@plt+0x255d0>
  42a090:	mov	w0, w22
  42a094:	bl	403fb0 <fchdir@plt>
  42a098:	cbz	w0, 42a0bc <wcrtomb@plt+0x2557c>
  42a09c:	bl	404a10 <__errno_location@plt>
  42a0a0:	ldr	w21, [x0]
  42a0a4:	mov	x20, x0
  42a0a8:	mov	x0, sp
  42a0ac:	bl	444ef0 <argp_parse@@Base+0xd644>
  42a0b0:	mov	x19, xzr
  42a0b4:	str	w21, [x20]
  42a0b8:	b	42a110 <wcrtomb@plt+0x255d0>
  42a0bc:	mov	x0, x21
  42a0c0:	mov	w1, w20
  42a0c4:	bl	4046b0 <acl_get_file@plt>
  42a0c8:	mov	x19, x0
  42a0cc:	cbz	x0, 42a0e8 <wcrtomb@plt+0x255a8>
  42a0d0:	mov	w20, wzr
  42a0d4:	b	42a0f0 <wcrtomb@plt+0x255b0>
  42a0d8:	cmp	w25, #0x5f
  42a0dc:	b.eq	42a058 <wcrtomb@plt+0x25518>  // b.none
  42a0e0:	str	w25, [x23]
  42a0e4:	b	42a110 <wcrtomb@plt+0x255d0>
  42a0e8:	bl	404a10 <__errno_location@plt>
  42a0ec:	ldr	w20, [x0]
  42a0f0:	mov	x0, sp
  42a0f4:	bl	444ed8 <argp_parse@@Base+0xd62c>
  42a0f8:	cbnz	w0, 42a140 <wcrtomb@plt+0x25600>
  42a0fc:	mov	x0, sp
  42a100:	bl	444ef0 <argp_parse@@Base+0xd644>
  42a104:	cbz	w20, 42a110 <wcrtomb@plt+0x255d0>
  42a108:	bl	404a10 <__errno_location@plt>
  42a10c:	str	w20, [x0]
  42a110:	mov	x0, x19
  42a114:	add	sp, sp, #0xfc0
  42a118:	ldp	x20, x19, [sp, #80]
  42a11c:	ldp	x22, x21, [sp, #64]
  42a120:	ldp	x24, x23, [sp, #48]
  42a124:	ldp	x26, x25, [sp, #32]
  42a128:	ldr	x28, [sp, #16]
  42a12c:	ldp	x29, x30, [sp], #96
  42a130:	ret
  42a134:	bl	404a10 <__errno_location@plt>
  42a138:	ldr	w0, [x0]
  42a13c:	bl	43d9d0 <argp_parse@@Base+0x6124>
  42a140:	bl	404a10 <__errno_location@plt>
  42a144:	ldr	w0, [x0]
  42a148:	bl	43da10 <argp_parse@@Base+0x6164>
  42a14c:	tst	w0, #0x100
  42a150:	mov	w8, #0x72                  	// #114
  42a154:	mov	w9, #0x2d                  	// #45
  42a158:	mov	w10, #0x77                  	// #119
  42a15c:	csel	w14, w9, w8, eq  // eq = none
  42a160:	tst	w0, #0x80
  42a164:	mov	w11, #0x53                  	// #83
  42a168:	mov	w12, #0x73                  	// #115
  42a16c:	mov	w13, #0x78                  	// #120
  42a170:	strb	w14, [x1]
  42a174:	csel	w14, w9, w10, eq  // eq = none
  42a178:	tst	w0, #0x40
  42a17c:	strb	w14, [x1, #1]
  42a180:	csel	w14, w12, w11, ne  // ne = any
  42a184:	csel	w15, w13, w9, ne  // ne = any
  42a188:	tst	w0, #0x800
  42a18c:	csel	w14, w15, w14, eq  // eq = none
  42a190:	tst	w0, #0x20
  42a194:	strb	w14, [x1, #2]
  42a198:	csel	w14, w9, w8, eq  // eq = none
  42a19c:	tst	w0, #0x10
  42a1a0:	strb	w14, [x1, #3]
  42a1a4:	csel	w14, w9, w10, eq  // eq = none
  42a1a8:	tst	w0, #0x8
  42a1ac:	csel	w11, w12, w11, ne  // ne = any
  42a1b0:	csel	w12, w13, w9, ne  // ne = any
  42a1b4:	tst	w0, #0x400
  42a1b8:	csel	w11, w12, w11, eq  // eq = none
  42a1bc:	tst	w0, #0x4
  42a1c0:	csel	w8, w9, w8, eq  // eq = none
  42a1c4:	tst	w0, #0x2
  42a1c8:	mov	w15, #0x54                  	// #84
  42a1cc:	strb	w14, [x1, #4]
  42a1d0:	mov	w14, #0x74                  	// #116
  42a1d4:	strb	w8, [x1, #6]
  42a1d8:	csel	w8, w9, w10, eq  // eq = none
  42a1dc:	tst	w0, #0x1
  42a1e0:	strb	w8, [x1, #7]
  42a1e4:	csel	w8, w14, w15, ne  // ne = any
  42a1e8:	csel	w9, w13, w9, ne  // ne = any
  42a1ec:	tst	w0, #0x200
  42a1f0:	csel	w8, w9, w8, eq  // eq = none
  42a1f4:	strb	w11, [x1, #5]
  42a1f8:	strb	w8, [x1, #8]
  42a1fc:	strb	wzr, [x1, #9]
  42a200:	ret
  42a204:	stp	x29, x30, [sp, #-48]!
  42a208:	stp	x22, x21, [sp, #16]
  42a20c:	stp	x20, x19, [sp, #32]
  42a210:	mov	x29, sp
  42a214:	mov	x20, x1
  42a218:	mov	x19, x0
  42a21c:	bl	404a10 <__errno_location@plt>
  42a220:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a224:	ldr	x8, [x8, #4064]
  42a228:	ldr	w21, [x0]
  42a22c:	cbz	x8, 42a234 <wcrtomb@plt+0x256f4>
  42a230:	blr	x8
  42a234:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a238:	add	x1, x1, #0x166
  42a23c:	mov	w2, #0x5                   	// #5
  42a240:	mov	x0, xzr
  42a244:	bl	404900 <dcgettext@plt>
  42a248:	mov	x22, x0
  42a24c:	mov	x0, x20
  42a250:	bl	444778 <argp_parse@@Base+0xcecc>
  42a254:	mov	x3, x0
  42a258:	mov	w0, wzr
  42a25c:	mov	w1, w21
  42a260:	mov	x2, x22
  42a264:	mov	x4, x19
  42a268:	bl	403fa0 <error@plt>
  42a26c:	ldp	x20, x19, [sp, #32]
  42a270:	ldp	x22, x21, [sp, #16]
  42a274:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a278:	mov	w9, #0x2                   	// #2
  42a27c:	str	w9, [x8, #2416]
  42a280:	ldp	x29, x30, [sp], #48
  42a284:	ret
  42a288:	stp	x29, x30, [sp, #-48]!
  42a28c:	stp	x22, x21, [sp, #16]
  42a290:	stp	x20, x19, [sp, #32]
  42a294:	mov	x29, sp
  42a298:	mov	x20, x1
  42a29c:	mov	x19, x0
  42a2a0:	bl	404a10 <__errno_location@plt>
  42a2a4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a2a8:	ldr	x8, [x8, #4064]
  42a2ac:	ldr	w21, [x0]
  42a2b0:	cbz	x8, 42a2b8 <wcrtomb@plt+0x25778>
  42a2b4:	blr	x8
  42a2b8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a2bc:	add	x1, x1, #0x166
  42a2c0:	mov	w2, #0x5                   	// #5
  42a2c4:	mov	x0, xzr
  42a2c8:	bl	404900 <dcgettext@plt>
  42a2cc:	mov	x22, x0
  42a2d0:	mov	x0, x20
  42a2d4:	bl	444778 <argp_parse@@Base+0xcecc>
  42a2d8:	mov	x3, x0
  42a2dc:	mov	w0, wzr
  42a2e0:	mov	w1, w21
  42a2e4:	mov	x2, x22
  42a2e8:	mov	x4, x19
  42a2ec:	bl	403fa0 <error@plt>
  42a2f0:	bl	40e96c <wcrtomb@plt+0x9e2c>
  42a2f4:	stp	x29, x30, [sp, #-48]!
  42a2f8:	stp	x22, x21, [sp, #16]
  42a2fc:	stp	x20, x19, [sp, #32]
  42a300:	mov	x29, sp
  42a304:	mov	x20, x1
  42a308:	mov	x19, x0
  42a30c:	bl	404a10 <__errno_location@plt>
  42a310:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a314:	ldr	x8, [x8, #4064]
  42a318:	ldr	w21, [x0]
  42a31c:	cbz	x8, 42a324 <wcrtomb@plt+0x257e4>
  42a320:	blr	x8
  42a324:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a328:	add	x1, x1, #0x174
  42a32c:	mov	w2, #0x5                   	// #5
  42a330:	mov	x0, xzr
  42a334:	bl	404900 <dcgettext@plt>
  42a338:	mov	x22, x0
  42a33c:	mov	x0, x20
  42a340:	bl	444778 <argp_parse@@Base+0xcecc>
  42a344:	mov	w1, w21
  42a348:	mov	x2, x22
  42a34c:	mov	x4, x19
  42a350:	ldp	x20, x19, [sp, #32]
  42a354:	ldp	x22, x21, [sp, #16]
  42a358:	mov	x3, x0
  42a35c:	mov	w0, wzr
  42a360:	ldp	x29, x30, [sp], #48
  42a364:	b	403fa0 <error@plt>
  42a368:	sub	sp, sp, #0x40
  42a36c:	stp	x29, x30, [sp, #16]
  42a370:	str	x21, [sp, #32]
  42a374:	stp	x20, x19, [sp, #48]
  42a378:	add	x29, sp, #0x10
  42a37c:	mov	w21, w1
  42a380:	mov	x20, x0
  42a384:	bl	404a10 <__errno_location@plt>
  42a388:	tst	w21, #0x100
  42a38c:	mov	w9, #0x72                  	// #114
  42a390:	mov	w10, #0x2d                  	// #45
  42a394:	mov	w11, #0x77                  	// #119
  42a398:	csel	w14, w10, w9, eq  // eq = none
  42a39c:	tst	w21, #0x80
  42a3a0:	ldr	w19, [x0]
  42a3a4:	mov	w8, #0x53                  	// #83
  42a3a8:	mov	w12, #0x73                  	// #115
  42a3ac:	mov	w13, #0x78                  	// #120
  42a3b0:	strb	w14, [sp, #4]
  42a3b4:	csel	w14, w10, w11, eq  // eq = none
  42a3b8:	tst	w21, #0x40
  42a3bc:	strb	w14, [sp, #5]
  42a3c0:	csel	w14, w12, w8, ne  // ne = any
  42a3c4:	csel	w15, w13, w10, ne  // ne = any
  42a3c8:	tst	w21, #0x800
  42a3cc:	csel	w14, w15, w14, eq  // eq = none
  42a3d0:	tst	w21, #0x20
  42a3d4:	strb	w14, [sp, #6]
  42a3d8:	csel	w14, w10, w9, eq  // eq = none
  42a3dc:	tst	w21, #0x10
  42a3e0:	strb	w14, [sp, #7]
  42a3e4:	csel	w14, w10, w11, eq  // eq = none
  42a3e8:	tst	w21, #0x8
  42a3ec:	csel	w8, w12, w8, ne  // ne = any
  42a3f0:	csel	w12, w13, w10, ne  // ne = any
  42a3f4:	tst	w21, #0x400
  42a3f8:	csel	w12, w12, w8, eq  // eq = none
  42a3fc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a400:	tst	w21, #0x4
  42a404:	ldr	x8, [x8, #4064]
  42a408:	csel	w9, w10, w9, eq  // eq = none
  42a40c:	tst	w21, #0x2
  42a410:	mov	w15, #0x54                  	// #84
  42a414:	strb	w14, [sp, #8]
  42a418:	mov	w14, #0x74                  	// #116
  42a41c:	strb	w9, [sp, #10]
  42a420:	csel	w9, w10, w11, eq  // eq = none
  42a424:	tst	w21, #0x1
  42a428:	strb	w9, [sp, #11]
  42a42c:	csel	w9, w14, w15, ne  // ne = any
  42a430:	csel	w10, w13, w10, ne  // ne = any
  42a434:	tst	w21, #0x200
  42a438:	csel	w9, w10, w9, eq  // eq = none
  42a43c:	strb	w12, [sp, #9]
  42a440:	strb	w9, [sp, #12]
  42a444:	strb	wzr, [sp, #13]
  42a448:	cbz	x8, 42a450 <wcrtomb@plt+0x25910>
  42a44c:	blr	x8
  42a450:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a454:	add	x1, x1, #0x18b
  42a458:	mov	w2, #0x5                   	// #5
  42a45c:	mov	x0, xzr
  42a460:	bl	404900 <dcgettext@plt>
  42a464:	mov	x21, x0
  42a468:	mov	x0, x20
  42a46c:	bl	444778 <argp_parse@@Base+0xcecc>
  42a470:	mov	x3, x0
  42a474:	add	x4, sp, #0x4
  42a478:	mov	w0, wzr
  42a47c:	mov	w1, w19
  42a480:	mov	x2, x21
  42a484:	bl	403fa0 <error@plt>
  42a488:	ldp	x20, x19, [sp, #48]
  42a48c:	ldr	x21, [sp, #32]
  42a490:	ldp	x29, x30, [sp, #16]
  42a494:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a498:	mov	w9, #0x2                   	// #2
  42a49c:	str	w9, [x8, #2416]
  42a4a0:	add	sp, sp, #0x40
  42a4a4:	ret
  42a4a8:	stp	x29, x30, [sp, #-64]!
  42a4ac:	str	x23, [sp, #16]
  42a4b0:	stp	x22, x21, [sp, #32]
  42a4b4:	stp	x20, x19, [sp, #48]
  42a4b8:	mov	x29, sp
  42a4bc:	mov	w19, w2
  42a4c0:	mov	w20, w1
  42a4c4:	mov	x22, x0
  42a4c8:	bl	404a10 <__errno_location@plt>
  42a4cc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a4d0:	ldr	x8, [x8, #4064]
  42a4d4:	ldr	w21, [x0]
  42a4d8:	cbz	x8, 42a4e0 <wcrtomb@plt+0x259a0>
  42a4dc:	blr	x8
  42a4e0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a4e4:	add	x1, x1, #0x1a8
  42a4e8:	mov	w2, #0x5                   	// #5
  42a4ec:	mov	x0, xzr
  42a4f0:	bl	404900 <dcgettext@plt>
  42a4f4:	mov	x23, x0
  42a4f8:	mov	x0, x22
  42a4fc:	bl	444778 <argp_parse@@Base+0xcecc>
  42a500:	mov	x3, x0
  42a504:	mov	w4, w20
  42a508:	mov	w5, w19
  42a50c:	mov	w0, wzr
  42a510:	mov	w1, w21
  42a514:	mov	x2, x23
  42a518:	bl	403fa0 <error@plt>
  42a51c:	ldp	x20, x19, [sp, #48]
  42a520:	ldp	x22, x21, [sp, #32]
  42a524:	ldr	x23, [sp, #16]
  42a528:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a52c:	mov	w9, #0x2                   	// #2
  42a530:	str	w9, [x8, #2416]
  42a534:	ldp	x29, x30, [sp], #64
  42a538:	ret
  42a53c:	stp	x29, x30, [sp, #-48]!
  42a540:	str	x21, [sp, #16]
  42a544:	stp	x20, x19, [sp, #32]
  42a548:	mov	x29, sp
  42a54c:	mov	x19, x0
  42a550:	bl	404a10 <__errno_location@plt>
  42a554:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a558:	ldr	x8, [x8, #4064]
  42a55c:	ldr	w20, [x0]
  42a560:	cbz	x8, 42a568 <wcrtomb@plt+0x25a28>
  42a564:	blr	x8
  42a568:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a56c:	add	x1, x1, #0x166
  42a570:	mov	w2, #0x5                   	// #5
  42a574:	mov	x0, xzr
  42a578:	bl	404900 <dcgettext@plt>
  42a57c:	mov	x21, x0
  42a580:	mov	x0, x19
  42a584:	bl	444778 <argp_parse@@Base+0xcecc>
  42a588:	adrp	x4, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42a58c:	mov	x3, x0
  42a590:	add	x4, x4, #0xb52
  42a594:	mov	w0, wzr
  42a598:	mov	w1, w20
  42a59c:	mov	x2, x21
  42a5a0:	bl	403fa0 <error@plt>
  42a5a4:	ldp	x20, x19, [sp, #32]
  42a5a8:	ldr	x21, [sp, #16]
  42a5ac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a5b0:	mov	w9, #0x2                   	// #2
  42a5b4:	str	w9, [x8, #2416]
  42a5b8:	ldp	x29, x30, [sp], #48
  42a5bc:	ret
  42a5c0:	stp	x29, x30, [sp, #-48]!
  42a5c4:	str	x21, [sp, #16]
  42a5c8:	stp	x20, x19, [sp, #32]
  42a5cc:	mov	x29, sp
  42a5d0:	mov	x19, x0
  42a5d4:	bl	404a10 <__errno_location@plt>
  42a5d8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a5dc:	ldr	x8, [x8, #4064]
  42a5e0:	ldr	w20, [x0]
  42a5e4:	cbz	x8, 42a5ec <wcrtomb@plt+0x25aac>
  42a5e8:	blr	x8
  42a5ec:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a5f0:	add	x1, x1, #0x174
  42a5f4:	mov	w2, #0x5                   	// #5
  42a5f8:	mov	x0, xzr
  42a5fc:	bl	404900 <dcgettext@plt>
  42a600:	mov	x21, x0
  42a604:	mov	x0, x19
  42a608:	bl	444778 <argp_parse@@Base+0xcecc>
  42a60c:	mov	w1, w20
  42a610:	mov	x2, x21
  42a614:	ldp	x20, x19, [sp, #32]
  42a618:	ldr	x21, [sp, #16]
  42a61c:	adrp	x4, 45e000 <_obstack_memory_used@@Base+0x174b0>
  42a620:	add	x4, x4, #0xb52
  42a624:	mov	x3, x0
  42a628:	mov	w0, wzr
  42a62c:	ldp	x29, x30, [sp], #48
  42a630:	b	403fa0 <error@plt>
  42a634:	stp	x29, x30, [sp, #-16]!
  42a638:	mov	x1, x0
  42a63c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a640:	add	x0, x0, #0x1d8
  42a644:	mov	x29, sp
  42a648:	bl	42a288 <wcrtomb@plt+0x25748>
  42a64c:	stp	x29, x30, [sp, #-48]!
  42a650:	stp	x22, x21, [sp, #16]
  42a654:	stp	x20, x19, [sp, #32]
  42a658:	mov	x29, sp
  42a65c:	mov	x21, x1
  42a660:	mov	x19, x0
  42a664:	bl	404a10 <__errno_location@plt>
  42a668:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a66c:	ldr	x8, [x8, #4064]
  42a670:	ldr	w20, [x0]
  42a674:	cbz	x8, 42a67c <wcrtomb@plt+0x25b3c>
  42a678:	blr	x8
  42a67c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a680:	add	x1, x1, #0x1dd
  42a684:	mov	w2, #0x5                   	// #5
  42a688:	mov	x0, xzr
  42a68c:	bl	404900 <dcgettext@plt>
  42a690:	mov	x22, x0
  42a694:	mov	x0, x21
  42a698:	bl	444778 <argp_parse@@Base+0xcecc>
  42a69c:	mov	x21, x0
  42a6a0:	mov	w0, #0x1                   	// #1
  42a6a4:	mov	x1, x19
  42a6a8:	bl	444a58 <argp_parse@@Base+0xd1ac>
  42a6ac:	mov	x4, x0
  42a6b0:	mov	w0, wzr
  42a6b4:	mov	w1, w20
  42a6b8:	mov	x2, x22
  42a6bc:	mov	x3, x21
  42a6c0:	bl	403fa0 <error@plt>
  42a6c4:	ldp	x20, x19, [sp, #32]
  42a6c8:	ldp	x22, x21, [sp, #16]
  42a6cc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a6d0:	mov	w9, #0x2                   	// #2
  42a6d4:	str	w9, [x8, #2416]
  42a6d8:	ldp	x29, x30, [sp], #48
  42a6dc:	ret
  42a6e0:	stp	x29, x30, [sp, #-48]!
  42a6e4:	str	x21, [sp, #16]
  42a6e8:	stp	x20, x19, [sp, #32]
  42a6ec:	mov	x29, sp
  42a6f0:	mov	x19, x0
  42a6f4:	bl	404a10 <__errno_location@plt>
  42a6f8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a6fc:	ldr	x8, [x8, #4064]
  42a700:	ldr	w20, [x0]
  42a704:	cbz	x8, 42a70c <wcrtomb@plt+0x25bcc>
  42a708:	blr	x8
  42a70c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a710:	add	x1, x1, #0x166
  42a714:	mov	w2, #0x5                   	// #5
  42a718:	mov	x0, xzr
  42a71c:	bl	404900 <dcgettext@plt>
  42a720:	mov	x21, x0
  42a724:	mov	x0, x19
  42a728:	bl	444778 <argp_parse@@Base+0xcecc>
  42a72c:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a730:	mov	x3, x0
  42a734:	add	x4, x4, #0x1f8
  42a738:	mov	w0, wzr
  42a73c:	mov	w1, w20
  42a740:	mov	x2, x21
  42a744:	bl	403fa0 <error@plt>
  42a748:	ldp	x20, x19, [sp, #32]
  42a74c:	ldr	x21, [sp, #16]
  42a750:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a754:	mov	w9, #0x2                   	// #2
  42a758:	str	w9, [x8, #2416]
  42a75c:	ldp	x29, x30, [sp], #48
  42a760:	ret
  42a764:	stp	x29, x30, [sp, #-48]!
  42a768:	str	x21, [sp, #16]
  42a76c:	stp	x20, x19, [sp, #32]
  42a770:	mov	x29, sp
  42a774:	mov	x19, x0
  42a778:	bl	404a10 <__errno_location@plt>
  42a77c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a780:	ldr	x8, [x8, #4064]
  42a784:	ldr	w20, [x0]
  42a788:	cbz	x8, 42a790 <wcrtomb@plt+0x25c50>
  42a78c:	blr	x8
  42a790:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a794:	add	x1, x1, #0x166
  42a798:	mov	w2, #0x5                   	// #5
  42a79c:	mov	x0, xzr
  42a7a0:	bl	404900 <dcgettext@plt>
  42a7a4:	mov	x21, x0
  42a7a8:	mov	x0, x19
  42a7ac:	bl	444778 <argp_parse@@Base+0xcecc>
  42a7b0:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a7b4:	mov	x3, x0
  42a7b8:	add	x4, x4, #0x1fe
  42a7bc:	mov	w0, wzr
  42a7c0:	mov	w1, w20
  42a7c4:	mov	x2, x21
  42a7c8:	bl	403fa0 <error@plt>
  42a7cc:	ldp	x20, x19, [sp, #32]
  42a7d0:	ldr	x21, [sp, #16]
  42a7d4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a7d8:	mov	w9, #0x2                   	// #2
  42a7dc:	str	w9, [x8, #2416]
  42a7e0:	ldp	x29, x30, [sp], #48
  42a7e4:	ret
  42a7e8:	stp	x29, x30, [sp, #-48]!
  42a7ec:	str	x21, [sp, #16]
  42a7f0:	stp	x20, x19, [sp, #32]
  42a7f4:	mov	x29, sp
  42a7f8:	mov	x19, x0
  42a7fc:	bl	404a10 <__errno_location@plt>
  42a800:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a804:	ldr	x8, [x8, #4064]
  42a808:	ldr	w20, [x0]
  42a80c:	cbz	x8, 42a814 <wcrtomb@plt+0x25cd4>
  42a810:	blr	x8
  42a814:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a818:	add	x1, x1, #0x166
  42a81c:	mov	w2, #0x5                   	// #5
  42a820:	mov	x0, xzr
  42a824:	bl	404900 <dcgettext@plt>
  42a828:	mov	x21, x0
  42a82c:	mov	x0, x19
  42a830:	bl	444778 <argp_parse@@Base+0xcecc>
  42a834:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a838:	mov	x3, x0
  42a83c:	add	x4, x4, #0x205
  42a840:	mov	w0, wzr
  42a844:	mov	w1, w20
  42a848:	mov	x2, x21
  42a84c:	bl	403fa0 <error@plt>
  42a850:	ldp	x20, x19, [sp, #32]
  42a854:	ldr	x21, [sp, #16]
  42a858:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a85c:	mov	w9, #0x2                   	// #2
  42a860:	str	w9, [x8, #2416]
  42a864:	ldp	x29, x30, [sp], #48
  42a868:	ret
  42a86c:	stp	x29, x30, [sp, #-48]!
  42a870:	str	x21, [sp, #16]
  42a874:	stp	x20, x19, [sp, #32]
  42a878:	mov	x29, sp
  42a87c:	mov	x19, x0
  42a880:	bl	404a10 <__errno_location@plt>
  42a884:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a888:	ldr	x8, [x8, #4064]
  42a88c:	ldr	w20, [x0]
  42a890:	cbz	x8, 42a898 <wcrtomb@plt+0x25d58>
  42a894:	blr	x8
  42a898:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a89c:	add	x1, x1, #0x166
  42a8a0:	mov	w2, #0x5                   	// #5
  42a8a4:	mov	x0, xzr
  42a8a8:	bl	404900 <dcgettext@plt>
  42a8ac:	mov	x21, x0
  42a8b0:	mov	x0, x19
  42a8b4:	bl	444778 <argp_parse@@Base+0xcecc>
  42a8b8:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a8bc:	mov	x3, x0
  42a8c0:	add	x4, x4, #0x20b
  42a8c4:	mov	w0, wzr
  42a8c8:	mov	w1, w20
  42a8cc:	mov	x2, x21
  42a8d0:	bl	403fa0 <error@plt>
  42a8d4:	ldp	x20, x19, [sp, #32]
  42a8d8:	ldr	x21, [sp, #16]
  42a8dc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a8e0:	mov	w9, #0x2                   	// #2
  42a8e4:	str	w9, [x8, #2416]
  42a8e8:	ldp	x29, x30, [sp], #48
  42a8ec:	ret
  42a8f0:	stp	x29, x30, [sp, #-16]!
  42a8f4:	mov	x1, x0
  42a8f8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a8fc:	add	x0, x0, #0x20b
  42a900:	mov	x29, sp
  42a904:	bl	42a288 <wcrtomb@plt+0x25748>
  42a908:	stp	x29, x30, [sp, #-48]!
  42a90c:	str	x21, [sp, #16]
  42a910:	stp	x20, x19, [sp, #32]
  42a914:	mov	x29, sp
  42a918:	mov	x19, x0
  42a91c:	bl	404a10 <__errno_location@plt>
  42a920:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a924:	ldr	x8, [x8, #4064]
  42a928:	ldr	w20, [x0]
  42a92c:	cbz	x8, 42a934 <wcrtomb@plt+0x25df4>
  42a930:	blr	x8
  42a934:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a938:	add	x1, x1, #0x174
  42a93c:	mov	w2, #0x5                   	// #5
  42a940:	mov	x0, xzr
  42a944:	bl	404900 <dcgettext@plt>
  42a948:	mov	x21, x0
  42a94c:	mov	x0, x19
  42a950:	bl	444778 <argp_parse@@Base+0xcecc>
  42a954:	mov	w1, w20
  42a958:	mov	x2, x21
  42a95c:	ldp	x20, x19, [sp, #32]
  42a960:	ldr	x21, [sp, #16]
  42a964:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a968:	add	x4, x4, #0x20b
  42a96c:	mov	x3, x0
  42a970:	mov	w0, wzr
  42a974:	ldp	x29, x30, [sp], #48
  42a978:	b	403fa0 <error@plt>
  42a97c:	stp	x29, x30, [sp, #-48]!
  42a980:	str	x21, [sp, #16]
  42a984:	stp	x20, x19, [sp, #32]
  42a988:	mov	x29, sp
  42a98c:	mov	x19, x0
  42a990:	bl	404a10 <__errno_location@plt>
  42a994:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a998:	ldr	x8, [x8, #4064]
  42a99c:	ldr	w20, [x0]
  42a9a0:	cbz	x8, 42a9a8 <wcrtomb@plt+0x25e68>
  42a9a4:	blr	x8
  42a9a8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42a9ac:	add	x1, x1, #0x166
  42a9b0:	mov	w2, #0x5                   	// #5
  42a9b4:	mov	x0, xzr
  42a9b8:	bl	404900 <dcgettext@plt>
  42a9bc:	mov	x21, x0
  42a9c0:	mov	x0, x19
  42a9c4:	bl	444778 <argp_parse@@Base+0xcecc>
  42a9c8:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x144b0>
  42a9cc:	mov	x3, x0
  42a9d0:	add	x4, x4, #0x37d
  42a9d4:	mov	w0, wzr
  42a9d8:	mov	w1, w20
  42a9dc:	mov	x2, x21
  42a9e0:	bl	403fa0 <error@plt>
  42a9e4:	ldp	x20, x19, [sp, #32]
  42a9e8:	ldr	x21, [sp, #16]
  42a9ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42a9f0:	mov	w9, #0x2                   	// #2
  42a9f4:	str	w9, [x8, #2416]
  42a9f8:	ldp	x29, x30, [sp], #48
  42a9fc:	ret
  42aa00:	sub	sp, sp, #0x60
  42aa04:	stp	x29, x30, [sp, #32]
  42aa08:	str	x23, [sp, #48]
  42aa0c:	stp	x22, x21, [sp, #64]
  42aa10:	stp	x20, x19, [sp, #80]
  42aa14:	add	x29, sp, #0x20
  42aa18:	mov	x19, x2
  42aa1c:	mov	x20, x1
  42aa20:	mov	x22, x0
  42aa24:	bl	404a10 <__errno_location@plt>
  42aa28:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42aa2c:	ldr	x8, [x8, #4064]
  42aa30:	ldr	w21, [x0]
  42aa34:	cbz	x8, 42aa3c <wcrtomb@plt+0x25efc>
  42aa38:	blr	x8
  42aa3c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42aa40:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42aa44:	add	x1, x1, #0x210
  42aa48:	add	x2, x2, #0x242
  42aa4c:	mov	w4, #0x5                   	// #5
  42aa50:	mov	x0, xzr
  42aa54:	mov	x3, x19
  42aa58:	bl	404820 <dcngettext@plt>
  42aa5c:	mov	x23, x0
  42aa60:	mov	x0, x22
  42aa64:	bl	444778 <argp_parse@@Base+0xcecc>
  42aa68:	mov	x22, x0
  42aa6c:	add	x1, sp, #0x8
  42aa70:	mov	x0, x20
  42aa74:	bl	43d080 <argp_parse@@Base+0x57d4>
  42aa78:	mov	x4, x0
  42aa7c:	mov	w0, wzr
  42aa80:	mov	w1, w21
  42aa84:	mov	x2, x23
  42aa88:	mov	x3, x22
  42aa8c:	mov	x5, x19
  42aa90:	bl	403fa0 <error@plt>
  42aa94:	ldp	x20, x19, [sp, #80]
  42aa98:	ldp	x22, x21, [sp, #64]
  42aa9c:	ldr	x23, [sp, #48]
  42aaa0:	ldp	x29, x30, [sp, #32]
  42aaa4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42aaa8:	mov	w9, #0x2                   	// #2
  42aaac:	str	w9, [x8, #2416]
  42aab0:	add	sp, sp, #0x60
  42aab4:	ret
  42aab8:	sub	sp, sp, #0x60
  42aabc:	stp	x29, x30, [sp, #32]
  42aac0:	str	x23, [sp, #48]
  42aac4:	stp	x22, x21, [sp, #64]
  42aac8:	stp	x20, x19, [sp, #80]
  42aacc:	add	x29, sp, #0x20
  42aad0:	mov	x19, x2
  42aad4:	mov	x20, x1
  42aad8:	mov	x22, x0
  42aadc:	bl	404a10 <__errno_location@plt>
  42aae0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42aae4:	ldr	x8, [x8, #4064]
  42aae8:	ldr	w21, [x0]
  42aaec:	cbz	x8, 42aaf4 <wcrtomb@plt+0x25fb4>
  42aaf0:	blr	x8
  42aaf4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42aaf8:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42aafc:	add	x1, x1, #0x275
  42ab00:	add	x2, x2, #0x2b0
  42ab04:	mov	w4, #0x5                   	// #5
  42ab08:	mov	x0, xzr
  42ab0c:	mov	x3, x19
  42ab10:	bl	404820 <dcngettext@plt>
  42ab14:	mov	x23, x0
  42ab18:	mov	x0, x22
  42ab1c:	bl	444778 <argp_parse@@Base+0xcecc>
  42ab20:	mov	x22, x0
  42ab24:	add	x1, sp, #0x8
  42ab28:	mov	x0, x20
  42ab2c:	bl	43d080 <argp_parse@@Base+0x57d4>
  42ab30:	mov	x4, x0
  42ab34:	mov	w0, wzr
  42ab38:	mov	w1, w21
  42ab3c:	mov	x2, x23
  42ab40:	mov	x3, x22
  42ab44:	mov	x5, x19
  42ab48:	bl	403fa0 <error@plt>
  42ab4c:	ldp	x20, x19, [sp, #80]
  42ab50:	ldp	x22, x21, [sp, #64]
  42ab54:	ldr	x23, [sp, #48]
  42ab58:	ldp	x29, x30, [sp, #32]
  42ab5c:	add	sp, sp, #0x60
  42ab60:	ret
  42ab64:	stp	x29, x30, [sp, #-16]!
  42ab68:	mov	x1, x0
  42ab6c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x144b0>
  42ab70:	add	x0, x0, #0x37d
  42ab74:	mov	x29, sp
  42ab78:	bl	42a288 <wcrtomb@plt+0x25748>
  42ab7c:	sub	sp, sp, #0x60
  42ab80:	stp	x29, x30, [sp, #32]
  42ab84:	str	x23, [sp, #48]
  42ab88:	stp	x22, x21, [sp, #64]
  42ab8c:	stp	x20, x19, [sp, #80]
  42ab90:	add	x29, sp, #0x20
  42ab94:	mov	x19, x2
  42ab98:	mov	x20, x1
  42ab9c:	mov	x22, x0
  42aba0:	bl	404a10 <__errno_location@plt>
  42aba4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42aba8:	ldr	x8, [x8, #4064]
  42abac:	ldr	w21, [x0]
  42abb0:	cbz	x8, 42abb8 <wcrtomb@plt+0x26078>
  42abb4:	blr	x8
  42abb8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42abbc:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42abc0:	add	x1, x1, #0x210
  42abc4:	add	x2, x2, #0x242
  42abc8:	mov	w4, #0x5                   	// #5
  42abcc:	mov	x0, xzr
  42abd0:	mov	x3, x19
  42abd4:	bl	404820 <dcngettext@plt>
  42abd8:	mov	x23, x0
  42abdc:	mov	x0, x22
  42abe0:	bl	444778 <argp_parse@@Base+0xcecc>
  42abe4:	mov	x22, x0
  42abe8:	add	x1, sp, #0x8
  42abec:	mov	x0, x20
  42abf0:	bl	43d080 <argp_parse@@Base+0x57d4>
  42abf4:	mov	x4, x0
  42abf8:	mov	w0, wzr
  42abfc:	mov	w1, w21
  42ac00:	mov	x2, x23
  42ac04:	mov	x3, x22
  42ac08:	mov	x5, x19
  42ac0c:	bl	403fa0 <error@plt>
  42ac10:	bl	40e96c <wcrtomb@plt+0x9e2c>
  42ac14:	stp	x29, x30, [sp, #-48]!
  42ac18:	str	x21, [sp, #16]
  42ac1c:	stp	x20, x19, [sp, #32]
  42ac20:	mov	x29, sp
  42ac24:	mov	x19, x0
  42ac28:	bl	404a10 <__errno_location@plt>
  42ac2c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42ac30:	ldr	x8, [x8, #4064]
  42ac34:	ldr	w20, [x0]
  42ac38:	cbz	x8, 42ac40 <wcrtomb@plt+0x26100>
  42ac3c:	blr	x8
  42ac40:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ac44:	add	x1, x1, #0x166
  42ac48:	mov	w2, #0x5                   	// #5
  42ac4c:	mov	x0, xzr
  42ac50:	bl	404900 <dcgettext@plt>
  42ac54:	mov	x21, x0
  42ac58:	mov	x0, x19
  42ac5c:	bl	444778 <argp_parse@@Base+0xcecc>
  42ac60:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ac64:	mov	x3, x0
  42ac68:	add	x4, x4, #0x2ec
  42ac6c:	mov	w0, wzr
  42ac70:	mov	w1, w20
  42ac74:	mov	x2, x21
  42ac78:	bl	403fa0 <error@plt>
  42ac7c:	ldp	x20, x19, [sp, #32]
  42ac80:	ldr	x21, [sp, #16]
  42ac84:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42ac88:	mov	w9, #0x2                   	// #2
  42ac8c:	str	w9, [x8, #2416]
  42ac90:	ldp	x29, x30, [sp], #48
  42ac94:	ret
  42ac98:	stp	x29, x30, [sp, #-48]!
  42ac9c:	str	x21, [sp, #16]
  42aca0:	stp	x20, x19, [sp, #32]
  42aca4:	mov	x29, sp
  42aca8:	mov	x19, x0
  42acac:	bl	404a10 <__errno_location@plt>
  42acb0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42acb4:	ldr	x8, [x8, #4064]
  42acb8:	ldr	w20, [x0]
  42acbc:	cbz	x8, 42acc4 <wcrtomb@plt+0x26184>
  42acc0:	blr	x8
  42acc4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42acc8:	add	x1, x1, #0x174
  42accc:	mov	w2, #0x5                   	// #5
  42acd0:	mov	x0, xzr
  42acd4:	bl	404900 <dcgettext@plt>
  42acd8:	mov	x21, x0
  42acdc:	mov	x0, x19
  42ace0:	bl	444778 <argp_parse@@Base+0xcecc>
  42ace4:	mov	w1, w20
  42ace8:	mov	x2, x21
  42acec:	ldp	x20, x19, [sp, #32]
  42acf0:	ldr	x21, [sp, #16]
  42acf4:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42acf8:	add	x4, x4, #0x2ec
  42acfc:	mov	x3, x0
  42ad00:	mov	w0, wzr
  42ad04:	ldp	x29, x30, [sp], #48
  42ad08:	b	403fa0 <error@plt>
  42ad0c:	stp	x29, x30, [sp, #-48]!
  42ad10:	str	x21, [sp, #16]
  42ad14:	stp	x20, x19, [sp, #32]
  42ad18:	mov	x29, sp
  42ad1c:	mov	x19, x0
  42ad20:	bl	404a10 <__errno_location@plt>
  42ad24:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42ad28:	ldr	x8, [x8, #4064]
  42ad2c:	ldr	w20, [x0]
  42ad30:	cbz	x8, 42ad38 <wcrtomb@plt+0x261f8>
  42ad34:	blr	x8
  42ad38:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ad3c:	add	x1, x1, #0x166
  42ad40:	mov	w2, #0x5                   	// #5
  42ad44:	mov	x0, xzr
  42ad48:	bl	404900 <dcgettext@plt>
  42ad4c:	mov	x21, x0
  42ad50:	mov	x0, x19
  42ad54:	bl	444778 <argp_parse@@Base+0xcecc>
  42ad58:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ad5c:	mov	x3, x0
  42ad60:	add	x4, x4, #0x2f5
  42ad64:	mov	w0, wzr
  42ad68:	mov	w1, w20
  42ad6c:	mov	x2, x21
  42ad70:	bl	403fa0 <error@plt>
  42ad74:	ldp	x20, x19, [sp, #32]
  42ad78:	ldr	x21, [sp, #16]
  42ad7c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42ad80:	mov	w9, #0x2                   	// #2
  42ad84:	str	w9, [x8, #2416]
  42ad88:	ldp	x29, x30, [sp], #48
  42ad8c:	ret
  42ad90:	stp	x29, x30, [sp, #-48]!
  42ad94:	str	x21, [sp, #16]
  42ad98:	stp	x20, x19, [sp, #32]
  42ad9c:	mov	x29, sp
  42ada0:	mov	x19, x0
  42ada4:	bl	404a10 <__errno_location@plt>
  42ada8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42adac:	ldr	x8, [x8, #4064]
  42adb0:	ldr	w20, [x0]
  42adb4:	cbz	x8, 42adbc <wcrtomb@plt+0x2627c>
  42adb8:	blr	x8
  42adbc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42adc0:	add	x1, x1, #0x166
  42adc4:	mov	w2, #0x5                   	// #5
  42adc8:	mov	x0, xzr
  42adcc:	bl	404900 <dcgettext@plt>
  42add0:	mov	x21, x0
  42add4:	mov	x0, x19
  42add8:	bl	444778 <argp_parse@@Base+0xcecc>
  42addc:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ade0:	mov	x3, x0
  42ade4:	add	x4, x4, #0x2fb
  42ade8:	mov	w0, wzr
  42adec:	mov	w1, w20
  42adf0:	mov	x2, x21
  42adf4:	bl	403fa0 <error@plt>
  42adf8:	ldp	x20, x19, [sp, #32]
  42adfc:	ldr	x21, [sp, #16]
  42ae00:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42ae04:	mov	w9, #0x2                   	// #2
  42ae08:	str	w9, [x8, #2416]
  42ae0c:	ldp	x29, x30, [sp], #48
  42ae10:	ret
  42ae14:	stp	x29, x30, [sp, #-48]!
  42ae18:	str	x21, [sp, #16]
  42ae1c:	stp	x20, x19, [sp, #32]
  42ae20:	mov	x29, sp
  42ae24:	mov	x19, x0
  42ae28:	bl	404a10 <__errno_location@plt>
  42ae2c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42ae30:	ldr	x8, [x8, #4064]
  42ae34:	ldr	w20, [x0]
  42ae38:	cbz	x8, 42ae40 <wcrtomb@plt+0x26300>
  42ae3c:	blr	x8
  42ae40:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ae44:	add	x1, x1, #0x174
  42ae48:	mov	w2, #0x5                   	// #5
  42ae4c:	mov	x0, xzr
  42ae50:	bl	404900 <dcgettext@plt>
  42ae54:	mov	x21, x0
  42ae58:	mov	x0, x19
  42ae5c:	bl	444778 <argp_parse@@Base+0xcecc>
  42ae60:	mov	w1, w20
  42ae64:	mov	x2, x21
  42ae68:	ldp	x20, x19, [sp, #32]
  42ae6c:	ldr	x21, [sp, #16]
  42ae70:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ae74:	add	x4, x4, #0x2fb
  42ae78:	mov	x3, x0
  42ae7c:	mov	w0, wzr
  42ae80:	ldp	x29, x30, [sp], #48
  42ae84:	b	403fa0 <error@plt>
  42ae88:	stp	x29, x30, [sp, #-48]!
  42ae8c:	str	x21, [sp, #16]
  42ae90:	stp	x20, x19, [sp, #32]
  42ae94:	mov	x29, sp
  42ae98:	mov	x19, x0
  42ae9c:	bl	404a10 <__errno_location@plt>
  42aea0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42aea4:	ldr	x8, [x8, #4064]
  42aea8:	ldr	w20, [x0]
  42aeac:	cbz	x8, 42aeb4 <wcrtomb@plt+0x26374>
  42aeb0:	blr	x8
  42aeb4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42aeb8:	add	x1, x1, #0x166
  42aebc:	mov	w2, #0x5                   	// #5
  42aec0:	mov	x0, xzr
  42aec4:	bl	404900 <dcgettext@plt>
  42aec8:	mov	x21, x0
  42aecc:	mov	x0, x19
  42aed0:	bl	444778 <argp_parse@@Base+0xcecc>
  42aed4:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0x184b0>
  42aed8:	mov	x3, x0
  42aedc:	add	x4, x4, #0x936
  42aee0:	mov	w0, wzr
  42aee4:	mov	w1, w20
  42aee8:	mov	x2, x21
  42aeec:	bl	403fa0 <error@plt>
  42aef0:	ldp	x20, x19, [sp, #32]
  42aef4:	ldr	x21, [sp, #16]
  42aef8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42aefc:	mov	w9, #0x2                   	// #2
  42af00:	str	w9, [x8, #2416]
  42af04:	ldp	x29, x30, [sp], #48
  42af08:	ret
  42af0c:	sub	sp, sp, #0x50
  42af10:	stp	x29, x30, [sp, #32]
  42af14:	stp	x22, x21, [sp, #48]
  42af18:	stp	x20, x19, [sp, #64]
  42af1c:	add	x29, sp, #0x20
  42af20:	mov	x19, x1
  42af24:	mov	x21, x0
  42af28:	bl	404a10 <__errno_location@plt>
  42af2c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42af30:	ldr	x8, [x8, #4064]
  42af34:	ldr	w20, [x0]
  42af38:	cbz	x8, 42af40 <wcrtomb@plt+0x26400>
  42af3c:	blr	x8
  42af40:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42af44:	add	x1, x1, #0x303
  42af48:	mov	w2, #0x5                   	// #5
  42af4c:	mov	x0, xzr
  42af50:	bl	404900 <dcgettext@plt>
  42af54:	mov	x22, x0
  42af58:	mov	x0, x21
  42af5c:	bl	444778 <argp_parse@@Base+0xcecc>
  42af60:	mov	x21, x0
  42af64:	add	x1, sp, #0x8
  42af68:	mov	x0, x19
  42af6c:	bl	43d080 <argp_parse@@Base+0x57d4>
  42af70:	mov	x4, x0
  42af74:	mov	w0, wzr
  42af78:	mov	w1, w20
  42af7c:	mov	x2, x22
  42af80:	mov	x3, x21
  42af84:	bl	403fa0 <error@plt>
  42af88:	ldp	x20, x19, [sp, #64]
  42af8c:	ldp	x22, x21, [sp, #48]
  42af90:	ldp	x29, x30, [sp, #32]
  42af94:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42af98:	mov	w9, #0x2                   	// #2
  42af9c:	str	w9, [x8, #2416]
  42afa0:	add	sp, sp, #0x50
  42afa4:	ret
  42afa8:	stp	x29, x30, [sp, #-48]!
  42afac:	str	x21, [sp, #16]
  42afb0:	stp	x20, x19, [sp, #32]
  42afb4:	mov	x29, sp
  42afb8:	mov	x19, x0
  42afbc:	bl	404a10 <__errno_location@plt>
  42afc0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42afc4:	ldr	x8, [x8, #4064]
  42afc8:	ldr	w20, [x0]
  42afcc:	cbz	x8, 42afd4 <wcrtomb@plt+0x26494>
  42afd0:	blr	x8
  42afd4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42afd8:	add	x1, x1, #0x174
  42afdc:	mov	w2, #0x5                   	// #5
  42afe0:	mov	x0, xzr
  42afe4:	bl	404900 <dcgettext@plt>
  42afe8:	mov	x21, x0
  42afec:	mov	x0, x19
  42aff0:	bl	444778 <argp_parse@@Base+0xcecc>
  42aff4:	mov	w1, w20
  42aff8:	mov	x2, x21
  42affc:	ldp	x20, x19, [sp, #32]
  42b000:	ldr	x21, [sp, #16]
  42b004:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0x184b0>
  42b008:	add	x4, x4, #0x936
  42b00c:	mov	x3, x0
  42b010:	mov	w0, wzr
  42b014:	ldp	x29, x30, [sp], #48
  42b018:	b	403fa0 <error@plt>
  42b01c:	sub	sp, sp, #0x50
  42b020:	stp	x29, x30, [sp, #32]
  42b024:	stp	x22, x21, [sp, #48]
  42b028:	stp	x20, x19, [sp, #64]
  42b02c:	add	x29, sp, #0x20
  42b030:	mov	x19, x1
  42b034:	mov	x21, x0
  42b038:	bl	404a10 <__errno_location@plt>
  42b03c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b040:	ldr	x8, [x8, #4064]
  42b044:	ldr	w20, [x0]
  42b048:	cbz	x8, 42b050 <wcrtomb@plt+0x26510>
  42b04c:	blr	x8
  42b050:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b054:	add	x1, x1, #0x319
  42b058:	mov	w2, #0x5                   	// #5
  42b05c:	mov	x0, xzr
  42b060:	bl	404900 <dcgettext@plt>
  42b064:	mov	x22, x0
  42b068:	mov	x0, x21
  42b06c:	bl	444778 <argp_parse@@Base+0xcecc>
  42b070:	mov	x21, x0
  42b074:	add	x1, sp, #0x8
  42b078:	mov	x0, x19
  42b07c:	bl	43d080 <argp_parse@@Base+0x57d4>
  42b080:	mov	x4, x0
  42b084:	mov	w0, wzr
  42b088:	mov	w1, w20
  42b08c:	mov	x2, x22
  42b090:	mov	x3, x21
  42b094:	bl	403fa0 <error@plt>
  42b098:	ldp	x20, x19, [sp, #64]
  42b09c:	ldp	x22, x21, [sp, #48]
  42b0a0:	ldp	x29, x30, [sp, #32]
  42b0a4:	add	sp, sp, #0x50
  42b0a8:	ret
  42b0ac:	stp	x29, x30, [sp, #-48]!
  42b0b0:	stp	x22, x21, [sp, #16]
  42b0b4:	stp	x20, x19, [sp, #32]
  42b0b8:	mov	x29, sp
  42b0bc:	mov	x21, x1
  42b0c0:	mov	x19, x0
  42b0c4:	bl	404a10 <__errno_location@plt>
  42b0c8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b0cc:	ldr	x8, [x8, #4064]
  42b0d0:	ldr	w20, [x0]
  42b0d4:	cbz	x8, 42b0dc <wcrtomb@plt+0x2659c>
  42b0d8:	blr	x8
  42b0dc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b0e0:	add	x1, x1, #0x338
  42b0e4:	mov	w2, #0x5                   	// #5
  42b0e8:	mov	x0, xzr
  42b0ec:	bl	404900 <dcgettext@plt>
  42b0f0:	mov	x22, x0
  42b0f4:	mov	x0, x21
  42b0f8:	bl	444778 <argp_parse@@Base+0xcecc>
  42b0fc:	mov	x21, x0
  42b100:	mov	w0, #0x1                   	// #1
  42b104:	mov	x1, x19
  42b108:	bl	444a58 <argp_parse@@Base+0xd1ac>
  42b10c:	mov	x4, x0
  42b110:	mov	w0, wzr
  42b114:	mov	w1, w20
  42b118:	mov	x2, x22
  42b11c:	mov	x3, x21
  42b120:	bl	403fa0 <error@plt>
  42b124:	ldp	x20, x19, [sp, #32]
  42b128:	ldp	x22, x21, [sp, #16]
  42b12c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b130:	mov	w9, #0x2                   	// #2
  42b134:	str	w9, [x8, #2416]
  42b138:	ldp	x29, x30, [sp], #48
  42b13c:	ret
  42b140:	stp	x29, x30, [sp, #-16]!
  42b144:	mov	x1, x0
  42b148:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x164b0>
  42b14c:	add	x0, x0, #0x1d
  42b150:	mov	x29, sp
  42b154:	bl	42a288 <wcrtomb@plt+0x25748>
  42b158:	stp	x29, x30, [sp, #-48]!
  42b15c:	str	x21, [sp, #16]
  42b160:	stp	x20, x19, [sp, #32]
  42b164:	mov	x29, sp
  42b168:	mov	x19, x0
  42b16c:	bl	404a10 <__errno_location@plt>
  42b170:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b174:	ldr	x8, [x8, #4064]
  42b178:	ldr	w20, [x0]
  42b17c:	cbz	x8, 42b184 <wcrtomb@plt+0x26644>
  42b180:	blr	x8
  42b184:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b188:	add	x1, x1, #0x166
  42b18c:	mov	w2, #0x5                   	// #5
  42b190:	mov	x0, xzr
  42b194:	bl	404900 <dcgettext@plt>
  42b198:	mov	x21, x0
  42b19c:	mov	x0, x19
  42b1a0:	bl	444778 <argp_parse@@Base+0xcecc>
  42b1a4:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0x164b0>
  42b1a8:	mov	x3, x0
  42b1ac:	add	x4, x4, #0x1d
  42b1b0:	mov	w0, wzr
  42b1b4:	mov	w1, w20
  42b1b8:	mov	x2, x21
  42b1bc:	bl	403fa0 <error@plt>
  42b1c0:	ldp	x20, x19, [sp, #32]
  42b1c4:	ldr	x21, [sp, #16]
  42b1c8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b1cc:	mov	w9, #0x2                   	// #2
  42b1d0:	str	w9, [x8, #2416]
  42b1d4:	ldp	x29, x30, [sp], #48
  42b1d8:	ret
  42b1dc:	stp	x29, x30, [sp, #-48]!
  42b1e0:	str	x21, [sp, #16]
  42b1e4:	stp	x20, x19, [sp, #32]
  42b1e8:	mov	x29, sp
  42b1ec:	mov	x19, x0
  42b1f0:	bl	404a10 <__errno_location@plt>
  42b1f4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b1f8:	ldr	x8, [x8, #4064]
  42b1fc:	ldr	w20, [x0]
  42b200:	cbz	x8, 42b208 <wcrtomb@plt+0x266c8>
  42b204:	blr	x8
  42b208:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b20c:	add	x1, x1, #0x174
  42b210:	mov	w2, #0x5                   	// #5
  42b214:	mov	x0, xzr
  42b218:	bl	404900 <dcgettext@plt>
  42b21c:	mov	x21, x0
  42b220:	mov	x0, x19
  42b224:	bl	444778 <argp_parse@@Base+0xcecc>
  42b228:	mov	w1, w20
  42b22c:	mov	x2, x21
  42b230:	ldp	x20, x19, [sp, #32]
  42b234:	ldr	x21, [sp, #16]
  42b238:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0x164b0>
  42b23c:	add	x4, x4, #0x1d
  42b240:	mov	x3, x0
  42b244:	mov	w0, wzr
  42b248:	ldp	x29, x30, [sp], #48
  42b24c:	b	403fa0 <error@plt>
  42b250:	stp	x29, x30, [sp, #-48]!
  42b254:	str	x21, [sp, #16]
  42b258:	stp	x20, x19, [sp, #32]
  42b25c:	mov	x29, sp
  42b260:	mov	x19, x0
  42b264:	bl	404a10 <__errno_location@plt>
  42b268:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b26c:	ldr	x8, [x8, #4064]
  42b270:	ldr	w20, [x0]
  42b274:	cbz	x8, 42b27c <wcrtomb@plt+0x2673c>
  42b278:	blr	x8
  42b27c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b280:	add	x1, x1, #0x166
  42b284:	mov	w2, #0x5                   	// #5
  42b288:	mov	x0, xzr
  42b28c:	bl	404900 <dcgettext@plt>
  42b290:	mov	x21, x0
  42b294:	mov	x0, x19
  42b298:	bl	444778 <argp_parse@@Base+0xcecc>
  42b29c:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b2a0:	mov	x3, x0
  42b2a4:	add	x4, x4, #0x358
  42b2a8:	mov	w0, wzr
  42b2ac:	mov	w1, w20
  42b2b0:	mov	x2, x21
  42b2b4:	bl	403fa0 <error@plt>
  42b2b8:	ldp	x20, x19, [sp, #32]
  42b2bc:	ldr	x21, [sp, #16]
  42b2c0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b2c4:	mov	w9, #0x2                   	// #2
  42b2c8:	str	w9, [x8, #2416]
  42b2cc:	ldp	x29, x30, [sp], #48
  42b2d0:	ret
  42b2d4:	stp	x29, x30, [sp, #-48]!
  42b2d8:	str	x21, [sp, #16]
  42b2dc:	stp	x20, x19, [sp, #32]
  42b2e0:	mov	x29, sp
  42b2e4:	mov	x19, x0
  42b2e8:	bl	404a10 <__errno_location@plt>
  42b2ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b2f0:	ldr	x8, [x8, #4064]
  42b2f4:	ldr	w20, [x0]
  42b2f8:	cbz	x8, 42b300 <wcrtomb@plt+0x267c0>
  42b2fc:	blr	x8
  42b300:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b304:	add	x1, x1, #0x174
  42b308:	mov	w2, #0x5                   	// #5
  42b30c:	mov	x0, xzr
  42b310:	bl	404900 <dcgettext@plt>
  42b314:	mov	x21, x0
  42b318:	mov	x0, x19
  42b31c:	bl	444778 <argp_parse@@Base+0xcecc>
  42b320:	mov	w1, w20
  42b324:	mov	x2, x21
  42b328:	ldp	x20, x19, [sp, #32]
  42b32c:	ldr	x21, [sp, #16]
  42b330:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b334:	add	x4, x4, #0x358
  42b338:	mov	x3, x0
  42b33c:	mov	w0, wzr
  42b340:	ldp	x29, x30, [sp], #48
  42b344:	b	403fa0 <error@plt>
  42b348:	stp	x29, x30, [sp, #-48]!
  42b34c:	str	x21, [sp, #16]
  42b350:	stp	x20, x19, [sp, #32]
  42b354:	mov	x29, sp
  42b358:	mov	x19, x0
  42b35c:	bl	404a10 <__errno_location@plt>
  42b360:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b364:	ldr	x8, [x8, #4064]
  42b368:	ldr	w20, [x0]
  42b36c:	cbz	x8, 42b374 <wcrtomb@plt+0x26834>
  42b370:	blr	x8
  42b374:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b378:	add	x1, x1, #0x166
  42b37c:	mov	w2, #0x5                   	// #5
  42b380:	mov	x0, xzr
  42b384:	bl	404900 <dcgettext@plt>
  42b388:	mov	x21, x0
  42b38c:	mov	x0, x19
  42b390:	bl	444778 <argp_parse@@Base+0xcecc>
  42b394:	adrp	x4, 45f000 <_obstack_memory_used@@Base+0x184b0>
  42b398:	mov	x3, x0
  42b39c:	add	x4, x4, #0xb90
  42b3a0:	mov	w0, wzr
  42b3a4:	mov	w1, w20
  42b3a8:	mov	x2, x21
  42b3ac:	bl	403fa0 <error@plt>
  42b3b0:	ldp	x20, x19, [sp, #32]
  42b3b4:	ldr	x21, [sp, #16]
  42b3b8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b3bc:	mov	w9, #0x2                   	// #2
  42b3c0:	str	w9, [x8, #2416]
  42b3c4:	ldp	x29, x30, [sp], #48
  42b3c8:	ret
  42b3cc:	stp	x29, x30, [sp, #-48]!
  42b3d0:	str	x21, [sp, #16]
  42b3d4:	stp	x20, x19, [sp, #32]
  42b3d8:	mov	x29, sp
  42b3dc:	mov	x19, x0
  42b3e0:	bl	404a10 <__errno_location@plt>
  42b3e4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b3e8:	ldr	x8, [x8, #4064]
  42b3ec:	ldr	w20, [x0]
  42b3f0:	cbz	x8, 42b3f8 <wcrtomb@plt+0x268b8>
  42b3f4:	blr	x8
  42b3f8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b3fc:	add	x1, x1, #0x166
  42b400:	mov	w2, #0x5                   	// #5
  42b404:	mov	x0, xzr
  42b408:	bl	404900 <dcgettext@plt>
  42b40c:	mov	x21, x0
  42b410:	mov	x0, x19
  42b414:	bl	444778 <argp_parse@@Base+0xcecc>
  42b418:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b41c:	mov	x3, x0
  42b420:	add	x4, x4, #0x361
  42b424:	mov	w0, wzr
  42b428:	mov	w1, w20
  42b42c:	mov	x2, x21
  42b430:	bl	403fa0 <error@plt>
  42b434:	ldp	x20, x19, [sp, #32]
  42b438:	ldr	x21, [sp, #16]
  42b43c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b440:	mov	w9, #0x2                   	// #2
  42b444:	str	w9, [x8, #2416]
  42b448:	ldp	x29, x30, [sp], #48
  42b44c:	ret
  42b450:	stp	x29, x30, [sp, #-48]!
  42b454:	str	x21, [sp, #16]
  42b458:	stp	x20, x19, [sp, #32]
  42b45c:	mov	x29, sp
  42b460:	mov	x19, x0
  42b464:	bl	404a10 <__errno_location@plt>
  42b468:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b46c:	ldr	x8, [x8, #4064]
  42b470:	ldr	w20, [x0]
  42b474:	cbz	x8, 42b47c <wcrtomb@plt+0x2693c>
  42b478:	blr	x8
  42b47c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b480:	add	x1, x1, #0x166
  42b484:	mov	w2, #0x5                   	// #5
  42b488:	mov	x0, xzr
  42b48c:	bl	404900 <dcgettext@plt>
  42b490:	mov	x21, x0
  42b494:	mov	x0, x19
  42b498:	bl	444778 <argp_parse@@Base+0xcecc>
  42b49c:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b4a0:	mov	x3, x0
  42b4a4:	add	x4, x4, #0x367
  42b4a8:	mov	w0, wzr
  42b4ac:	mov	w1, w20
  42b4b0:	mov	x2, x21
  42b4b4:	bl	403fa0 <error@plt>
  42b4b8:	ldp	x20, x19, [sp, #32]
  42b4bc:	ldr	x21, [sp, #16]
  42b4c0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b4c4:	mov	w9, #0x2                   	// #2
  42b4c8:	str	w9, [x8, #2416]
  42b4cc:	ldp	x29, x30, [sp], #48
  42b4d0:	ret
  42b4d4:	stp	x29, x30, [sp, #-48]!
  42b4d8:	str	x21, [sp, #16]
  42b4dc:	stp	x20, x19, [sp, #32]
  42b4e0:	mov	x29, sp
  42b4e4:	mov	x19, x0
  42b4e8:	bl	404a10 <__errno_location@plt>
  42b4ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b4f0:	ldr	x8, [x8, #4064]
  42b4f4:	ldr	w20, [x0]
  42b4f8:	cbz	x8, 42b500 <wcrtomb@plt+0x269c0>
  42b4fc:	blr	x8
  42b500:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b504:	add	x1, x1, #0x166
  42b508:	mov	w2, #0x5                   	// #5
  42b50c:	mov	x0, xzr
  42b510:	bl	404900 <dcgettext@plt>
  42b514:	mov	x21, x0
  42b518:	mov	x0, x19
  42b51c:	bl	444778 <argp_parse@@Base+0xcecc>
  42b520:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  42b524:	mov	x3, x0
  42b528:	add	x4, x4, #0xeda
  42b52c:	mov	w0, wzr
  42b530:	mov	w1, w20
  42b534:	mov	x2, x21
  42b538:	bl	403fa0 <error@plt>
  42b53c:	ldp	x20, x19, [sp, #32]
  42b540:	ldr	x21, [sp, #16]
  42b544:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b548:	mov	w9, #0x2                   	// #2
  42b54c:	str	w9, [x8, #2416]
  42b550:	ldp	x29, x30, [sp], #48
  42b554:	ret
  42b558:	stp	x29, x30, [sp, #-48]!
  42b55c:	stp	x20, x19, [sp, #32]
  42b560:	mov	x19, x0
  42b564:	str	x21, [sp, #16]
  42b568:	mov	x29, sp
  42b56c:	cbz	x1, 42b5c8 <wcrtomb@plt+0x26a88>
  42b570:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b574:	ldr	x8, [x8, #4064]
  42b578:	mov	x20, x2
  42b57c:	mov	x21, x1
  42b580:	cbz	x8, 42b588 <wcrtomb@plt+0x26a48>
  42b584:	blr	x8
  42b588:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b58c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b590:	add	x1, x1, #0x36f
  42b594:	add	x2, x2, #0x38e
  42b598:	mov	w4, #0x5                   	// #5
  42b59c:	mov	x0, xzr
  42b5a0:	mov	x3, x20
  42b5a4:	bl	404820 <dcngettext@plt>
  42b5a8:	mov	x2, x0
  42b5ac:	mov	w0, wzr
  42b5b0:	mov	w1, wzr
  42b5b4:	mov	x3, x19
  42b5b8:	mov	x4, x21
  42b5bc:	mov	x5, x20
  42b5c0:	bl	403fa0 <error@plt>
  42b5c4:	b	42b61c <wcrtomb@plt+0x26adc>
  42b5c8:	bl	404a10 <__errno_location@plt>
  42b5cc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b5d0:	ldr	x8, [x8, #4064]
  42b5d4:	ldr	w20, [x0]
  42b5d8:	cbz	x8, 42b5e0 <wcrtomb@plt+0x26aa0>
  42b5dc:	blr	x8
  42b5e0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b5e4:	add	x1, x1, #0x166
  42b5e8:	mov	w2, #0x5                   	// #5
  42b5ec:	mov	x0, xzr
  42b5f0:	bl	404900 <dcgettext@plt>
  42b5f4:	mov	x21, x0
  42b5f8:	mov	x0, x19
  42b5fc:	bl	444778 <argp_parse@@Base+0xcecc>
  42b600:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  42b604:	mov	x3, x0
  42b608:	add	x4, x4, #0xeda
  42b60c:	mov	w0, wzr
  42b610:	mov	w1, w20
  42b614:	mov	x2, x21
  42b618:	bl	403fa0 <error@plt>
  42b61c:	ldp	x20, x19, [sp, #32]
  42b620:	ldr	x21, [sp, #16]
  42b624:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b628:	mov	w9, #0x2                   	// #2
  42b62c:	str	w9, [x8, #2416]
  42b630:	ldp	x29, x30, [sp], #48
  42b634:	ret
  42b638:	stp	x29, x30, [sp, #-16]!
  42b63c:	mov	x1, x0
  42b640:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b644:	add	x0, x0, #0x3ae
  42b648:	mov	x29, sp
  42b64c:	bl	42a288 <wcrtomb@plt+0x25748>
  42b650:	stp	x29, x30, [sp, #-16]!
  42b654:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b658:	ldr	x0, [x8, #2424]
  42b65c:	mov	x29, sp
  42b660:	cbz	x0, 42b678 <wcrtomb@plt+0x26b38>
  42b664:	bl	43b570 <argp_parse@@Base+0x3cc4>
  42b668:	cbz	x0, 42b678 <wcrtomb@plt+0x26b38>
  42b66c:	mov	w0, #0x1                   	// #1
  42b670:	ldp	x29, x30, [sp], #16
  42b674:	ret
  42b678:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b67c:	ldr	x0, [x8, #2432]
  42b680:	cbz	x0, 42b690 <wcrtomb@plt+0x26b50>
  42b684:	bl	43b570 <argp_parse@@Base+0x3cc4>
  42b688:	cmp	x0, #0x0
  42b68c:	cset	w0, ne  // ne = any
  42b690:	ldp	x29, x30, [sp], #16
  42b694:	ret
  42b698:	stp	x29, x30, [sp, #-80]!
  42b69c:	stp	x22, x21, [sp, #48]
  42b6a0:	stp	x20, x19, [sp, #64]
  42b6a4:	mov	w19, w1
  42b6a8:	mov	x20, x0
  42b6ac:	mov	x21, x0
  42b6b0:	stp	x26, x25, [sp, #16]
  42b6b4:	stp	x24, x23, [sp, #32]
  42b6b8:	mov	x29, sp
  42b6bc:	tbnz	w2, #0, 42b7bc <wcrtomb@plt+0x26c7c>
  42b6c0:	mov	x8, xzr
  42b6c4:	mov	x9, x20
  42b6c8:	ldrb	w10, [x9]
  42b6cc:	cmp	w10, #0x2e
  42b6d0:	b.eq	42b6dc <wcrtomb@plt+0x26b9c>  // b.none
  42b6d4:	cbnz	w10, 42b700 <wcrtomb@plt+0x26bc0>
  42b6d8:	b	42b724 <wcrtomb@plt+0x26be4>
  42b6dc:	ldrb	w11, [x9, #1]
  42b6e0:	cmp	w11, #0x2e
  42b6e4:	b.ne	42b700 <wcrtomb@plt+0x26bc0>  // b.any
  42b6e8:	mov	x11, x9
  42b6ec:	ldrb	w12, [x11, #2]!
  42b6f0:	cmp	w12, #0x2f
  42b6f4:	b.eq	42b6fc <wcrtomb@plt+0x26bbc>  // b.none
  42b6f8:	cbnz	w12, 42b700 <wcrtomb@plt+0x26bc0>
  42b6fc:	sub	x8, x11, x20
  42b700:	add	x11, x9, #0x1
  42b704:	and	w9, w10, #0xff
  42b708:	cmp	w9, #0x2f
  42b70c:	mov	x9, x11
  42b710:	b.eq	42b6c8 <wcrtomb@plt+0x26b88>  // b.none
  42b714:	mov	x11, x9
  42b718:	ldrb	w10, [x11], #1
  42b71c:	cbnz	w10, 42b704 <wcrtomb@plt+0x26bc4>
  42b720:	b	42b6c8 <wcrtomb@plt+0x26b88>
  42b724:	add	x8, x20, x8
  42b728:	sub	x21, x8, #0x1
  42b72c:	ldrb	w8, [x21, #1]!
  42b730:	cmp	w8, #0x2f
  42b734:	b.eq	42b72c <wcrtomb@plt+0x26bec>  // b.none
  42b738:	subs	x24, x21, x20
  42b73c:	b.eq	42b7bc <wcrtomb@plt+0x26c7c>  // b.none
  42b740:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b744:	and	x25, x19, #0x1
  42b748:	add	x26, x26, #0x978
  42b74c:	ldr	x23, [x26, x25, lsl #3]
  42b750:	add	x0, x24, #0x1
  42b754:	bl	4459e8 <argp_parse@@Base+0xe13c>
  42b758:	mov	x1, x20
  42b75c:	mov	x2, x24
  42b760:	mov	x22, x0
  42b764:	bl	403ec0 <memcpy@plt>
  42b768:	strb	wzr, [x22, x24]
  42b76c:	cbnz	x23, 42b79c <wcrtomb@plt+0x26c5c>
  42b770:	adrp	x2, 42b000 <wcrtomb@plt+0x264c0>
  42b774:	adrp	x3, 42b000 <wcrtomb@plt+0x264c0>
  42b778:	add	x2, x2, #0x880
  42b77c:	add	x3, x3, #0x884
  42b780:	mov	x0, xzr
  42b784:	mov	x1, xzr
  42b788:	mov	x4, xzr
  42b78c:	bl	43b9f4 <argp_parse@@Base+0x4148>
  42b790:	mov	x23, x0
  42b794:	str	x0, [x26, x25, lsl #3]
  42b798:	cbz	x0, 42b87c <wcrtomb@plt+0x26d3c>
  42b79c:	mov	x0, x23
  42b7a0:	mov	x1, x22
  42b7a4:	bl	43c408 <argp_parse@@Base+0x4b5c>
  42b7a8:	cbz	x0, 42b87c <wcrtomb@plt+0x26d3c>
  42b7ac:	cmp	x0, x22
  42b7b0:	b.eq	42b834 <wcrtomb@plt+0x26cf4>  // b.none
  42b7b4:	mov	x0, x22
  42b7b8:	bl	404700 <free@plt>
  42b7bc:	ldrb	w8, [x21]
  42b7c0:	cbnz	w8, 42b818 <wcrtomb@plt+0x26cd8>
  42b7c4:	cmp	x21, x20
  42b7c8:	b.ne	42b810 <wcrtomb@plt+0x26cd0>  // b.any
  42b7cc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b7d0:	ldr	x8, [x8, #4064]
  42b7d4:	cbz	x8, 42b7dc <wcrtomb@plt+0x26c9c>
  42b7d8:	blr	x8
  42b7dc:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b7e0:	and	x8, x19, #0x1
  42b7e4:	add	x9, x9, #0x3c8
  42b7e8:	ldr	x1, [x9, x8, lsl #3]
  42b7ec:	mov	w2, #0x5                   	// #5
  42b7f0:	mov	x0, xzr
  42b7f4:	bl	404900 <dcgettext@plt>
  42b7f8:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b7fc:	mov	x3, x0
  42b800:	add	x2, x2, #0x7a4
  42b804:	mov	w0, wzr
  42b808:	mov	w1, wzr
  42b80c:	bl	403fa0 <error@plt>
  42b810:	adrp	x21, 45f000 <_obstack_memory_used@@Base+0x184b0>
  42b814:	add	x21, x21, #0x50a
  42b818:	mov	x0, x21
  42b81c:	ldp	x20, x19, [sp, #64]
  42b820:	ldp	x22, x21, [sp, #48]
  42b824:	ldp	x24, x23, [sp, #32]
  42b828:	ldp	x26, x25, [sp, #16]
  42b82c:	ldp	x29, x30, [sp], #80
  42b830:	ret
  42b834:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42b838:	ldr	x8, [x8, #4064]
  42b83c:	cbz	x8, 42b844 <wcrtomb@plt+0x26d04>
  42b840:	blr	x8
  42b844:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42b848:	add	x8, x8, #0x3b8
  42b84c:	ldr	x1, [x8, x25, lsl #3]
  42b850:	mov	w2, #0x5                   	// #5
  42b854:	mov	x0, xzr
  42b858:	bl	404900 <dcgettext@plt>
  42b85c:	mov	x2, x0
  42b860:	mov	w0, wzr
  42b864:	mov	w1, wzr
  42b868:	mov	x3, x22
  42b86c:	bl	403fa0 <error@plt>
  42b870:	ldrb	w8, [x21]
  42b874:	cbnz	w8, 42b818 <wcrtomb@plt+0x26cd8>
  42b878:	b	42b7c4 <wcrtomb@plt+0x26c84>
  42b87c:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  42b880:	b	43b99c <argp_parse@@Base+0x40f0>
  42b884:	stp	x29, x30, [sp, #-16]!
  42b888:	mov	x29, sp
  42b88c:	bl	404660 <strcmp@plt>
  42b890:	cmp	w0, #0x0
  42b894:	cset	w0, eq  // eq = none
  42b898:	ldp	x29, x30, [sp], #16
  42b89c:	ret
  42b8a0:	sub	sp, sp, #0xb0
  42b8a4:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42b8a8:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42b8ac:	ldr	w8, [x8, #3848]
  42b8b0:	ldr	w9, [x9, #3884]
  42b8b4:	stp	x26, x25, [sp, #112]
  42b8b8:	stp	x24, x23, [sp, #128]
  42b8bc:	stp	x22, x21, [sp, #144]
  42b8c0:	and	w8, w8, w9
  42b8c4:	mov	x25, x3
  42b8c8:	mov	w23, w2
  42b8cc:	mov	w22, w1
  42b8d0:	cmn	w8, #0x1
  42b8d4:	stp	x29, x30, [sp, #80]
  42b8d8:	stp	x28, x27, [sp, #96]
  42b8dc:	stp	x20, x19, [sp, #160]
  42b8e0:	add	x29, sp, #0x50
  42b8e4:	b.eq	42b948 <wcrtomb@plt+0x26e08>  // b.none
  42b8e8:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42b8ec:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42b8f0:	ldr	w8, [x8, #3856]
  42b8f4:	ldr	w9, [x9, #3892]
  42b8f8:	and	w8, w8, w9
  42b8fc:	cmn	w8, #0x1
  42b900:	b.eq	42b950 <wcrtomb@plt+0x26e10>  // b.none
  42b904:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42b908:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42b90c:	ldr	w8, [x8, #3864]
  42b910:	ldr	w9, [x9, #3900]
  42b914:	and	w8, w8, w9
  42b918:	cmn	w8, #0x1
  42b91c:	b.eq	42b958 <wcrtomb@plt+0x26e18>  // b.none
  42b920:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42b924:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42b928:	ldr	w8, [x8, #3872]
  42b92c:	ldr	w9, [x9, #3908]
  42b930:	and	w8, w8, w9
  42b934:	cmn	w8, #0x1
  42b938:	b.eq	42b960 <wcrtomb@plt+0x26e20>  // b.none
  42b93c:	bl	404a10 <__errno_location@plt>
  42b940:	mov	w8, #0x18                  	// #24
  42b944:	b	42bac0 <wcrtomb@plt+0x26f80>
  42b948:	mov	w21, wzr
  42b94c:	b	42b964 <wcrtomb@plt+0x26e24>
  42b950:	mov	w21, #0x1                   	// #1
  42b954:	b	42b964 <wcrtomb@plt+0x26e24>
  42b958:	mov	w21, #0x2                   	// #2
  42b95c:	b	42b964 <wcrtomb@plt+0x26e24>
  42b960:	mov	w21, #0x3                   	// #3
  42b964:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  42b968:	mov	x19, x0
  42b96c:	mov	x20, xzr
  42b970:	mov	x24, xzr
  42b974:	add	x8, x0, #0x1
  42b978:	mov	x26, x0
  42b97c:	b	42b984 <wcrtomb@plt+0x26e44>
  42b980:	add	x8, x8, #0x1
  42b984:	ldurb	w9, [x8, #-1]
  42b988:	cmp	w9, #0x3f
  42b98c:	b.gt	42b9a8 <wcrtomb@plt+0x26e68>
  42b990:	cmp	w9, #0x3a
  42b994:	b.ne	42b9c8 <wcrtomb@plt+0x26e88>  // b.any
  42b998:	cbnz	x24, 42b980 <wcrtomb@plt+0x26e40>
  42b99c:	mov	x24, x8
  42b9a0:	sturb	wzr, [x8, #-1]
  42b9a4:	b	42b980 <wcrtomb@plt+0x26e40>
  42b9a8:	cmp	w9, #0x40
  42b9ac:	b.ne	42b980 <wcrtomb@plt+0x26e40>  // b.any
  42b9b0:	cbnz	x20, 42b980 <wcrtomb@plt+0x26e40>
  42b9b4:	sturb	wzr, [x8, #-1]
  42b9b8:	mov	x20, x26
  42b9bc:	mov	x26, x8
  42b9c0:	add	x8, x8, #0x1
  42b9c4:	b	42b984 <wcrtomb@plt+0x26e44>
  42b9c8:	cbz	w9, 42b9e8 <wcrtomb@plt+0x26ea8>
  42b9cc:	cmp	w9, #0xa
  42b9d0:	b.ne	42b980 <wcrtomb@plt+0x26e40>  // b.any
  42b9d4:	mov	x0, x19
  42b9d8:	bl	404700 <free@plt>
  42b9dc:	bl	404a10 <__errno_location@plt>
  42b9e0:	mov	w8, #0x2                   	// #2
  42b9e4:	b	42bac0 <wcrtomb@plt+0x26f80>
  42b9e8:	mov	x0, x26
  42b9ec:	bl	404ae0 <gethostbyname@plt>
  42b9f0:	cbz	x0, 42ba80 <wcrtomb@plt+0x26f40>
  42b9f4:	cbz	x20, 42baa8 <wcrtomb@plt+0x26f68>
  42b9f8:	ldrb	w8, [x20]
  42b9fc:	cmp	w8, #0x0
  42ba00:	csel	x28, xzr, x20, eq  // eq = none
  42ba04:	cbz	x25, 42bab0 <wcrtomb@plt+0x26f70>
  42ba08:	mov	x0, x25
  42ba0c:	str	w23, [sp, #12]
  42ba10:	bl	43925c <argp_parse@@Base+0x19b0>
  42ba14:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42ba18:	add	x8, x8, #0xf28
  42ba1c:	add	x27, x8, w21, uxtw #3
  42ba20:	mov	x23, x0
  42ba24:	mov	x0, x27
  42ba28:	bl	404080 <pipe@plt>
  42ba2c:	cmn	w0, #0x1
  42ba30:	b.eq	42ba64 <wcrtomb@plt+0x26f24>  // b.none
  42ba34:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42ba38:	add	x8, x8, #0xf08
  42ba3c:	add	x20, x8, x21, lsl #3
  42ba40:	mov	x0, x20
  42ba44:	bl	404080 <pipe@plt>
  42ba48:	cmn	w0, #0x1
  42ba4c:	b.eq	42ba64 <wcrtomb@plt+0x26f24>  // b.none
  42ba50:	str	x20, [sp]
  42ba54:	bl	404110 <fork@plt>
  42ba58:	cbz	w0, 42bae8 <wcrtomb@plt+0x26fa8>
  42ba5c:	cmn	w0, #0x1
  42ba60:	b.ne	42bc14 <wcrtomb@plt+0x270d4>  // b.any
  42ba64:	bl	404a10 <__errno_location@plt>
  42ba68:	ldr	w21, [x0]
  42ba6c:	mov	x20, x0
  42ba70:	mov	x0, x19
  42ba74:	bl	404700 <free@plt>
  42ba78:	str	w21, [x20]
  42ba7c:	b	42bac4 <wcrtomb@plt+0x26f84>
  42ba80:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ba84:	add	x1, x1, #0x480
  42ba88:	mov	w2, #0x5                   	// #5
  42ba8c:	bl	404900 <dcgettext@plt>
  42ba90:	mov	x2, x0
  42ba94:	mov	w0, #0x80                  	// #128
  42ba98:	mov	w1, wzr
  42ba9c:	mov	x3, x26
  42baa0:	bl	403fa0 <error@plt>
  42baa4:	cbnz	x20, 42b9f8 <wcrtomb@plt+0x26eb8>
  42baa8:	mov	x28, xzr
  42baac:	cbnz	x25, 42ba08 <wcrtomb@plt+0x26ec8>
  42bab0:	mov	x0, x19
  42bab4:	bl	404700 <free@plt>
  42bab8:	bl	404a10 <__errno_location@plt>
  42babc:	mov	w8, #0x5                   	// #5
  42bac0:	str	w8, [x0]
  42bac4:	mov	w0, #0xffffffff            	// #-1
  42bac8:	ldp	x20, x19, [sp, #160]
  42bacc:	ldp	x22, x21, [sp, #144]
  42bad0:	ldp	x24, x23, [sp, #128]
  42bad4:	ldp	x26, x25, [sp, #112]
  42bad8:	ldp	x28, x27, [sp, #96]
  42badc:	ldp	x29, x30, [sp, #80]
  42bae0:	add	sp, sp, #0xb0
  42bae4:	ret
  42bae8:	ldr	w0, [x27]
  42baec:	mov	w1, wzr
  42baf0:	bl	404970 <dup2@plt>
  42baf4:	tbnz	w0, #31, 42bb5c <wcrtomb@plt+0x2701c>
  42baf8:	ldr	w0, [x27]
  42bafc:	cbz	w0, 42bb08 <wcrtomb@plt+0x26fc8>
  42bb00:	bl	404520 <close@plt>
  42bb04:	cbnz	w0, 42bb5c <wcrtomb@plt+0x2701c>
  42bb08:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42bb0c:	add	x8, x8, #0xf28
  42bb10:	add	x8, x8, x21, lsl #3
  42bb14:	ldr	w0, [x8, #4]
  42bb18:	cbz	w0, 42bb24 <wcrtomb@plt+0x26fe4>
  42bb1c:	bl	404520 <close@plt>
  42bb20:	cbnz	w0, 42bb5c <wcrtomb@plt+0x2701c>
  42bb24:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42bb28:	add	x8, x8, #0xf08
  42bb2c:	add	x20, x8, x21, lsl #3
  42bb30:	ldr	w0, [x20, #4]!
  42bb34:	mov	w1, #0x1                   	// #1
  42bb38:	bl	404970 <dup2@plt>
  42bb3c:	tbnz	w0, #31, 42bb5c <wcrtomb@plt+0x2701c>
  42bb40:	ldr	x8, [sp]
  42bb44:	ldr	w0, [x8]
  42bb48:	bl	404520 <close@plt>
  42bb4c:	cbnz	w0, 42bb5c <wcrtomb@plt+0x2701c>
  42bb50:	ldr	w0, [x20]
  42bb54:	bl	404520 <close@plt>
  42bb58:	cbz	w0, 42bb88 <wcrtomb@plt+0x27048>
  42bb5c:	bl	404a10 <__errno_location@plt>
  42bb60:	ldr	w20, [x0]
  42bb64:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42bb68:	add	x1, x1, #0x4a5
  42bb6c:	mov	w2, #0x5                   	// #5
  42bb70:	mov	x0, xzr
  42bb74:	bl	404900 <dcgettext@plt>
  42bb78:	mov	x2, x0
  42bb7c:	mov	w0, #0x80                  	// #128
  42bb80:	mov	w1, w20
  42bb84:	bl	403fa0 <error@plt>
  42bb88:	bl	404070 <getuid@plt>
  42bb8c:	bl	403f00 <setuid@plt>
  42bb90:	cbnz	w0, 42bf90 <wcrtomb@plt+0x27450>
  42bb94:	bl	404740 <getgid@plt>
  42bb98:	bl	4045c0 <setgid@plt>
  42bb9c:	cbnz	w0, 42bf90 <wcrtomb@plt+0x27450>
  42bba0:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42bba4:	ldr	x5, [x8, #3840]
  42bba8:	cbz	x28, 42bbd0 <wcrtomb@plt+0x27090>
  42bbac:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42bbb0:	add	x3, x3, #0x4cc
  42bbb4:	mov	x0, x25
  42bbb8:	mov	x1, x23
  42bbbc:	mov	x2, x26
  42bbc0:	mov	x4, x28
  42bbc4:	mov	x6, xzr
  42bbc8:	bl	403fd0 <execl@plt>
  42bbcc:	b	42bbe8 <wcrtomb@plt+0x270a8>
  42bbd0:	mov	x0, x25
  42bbd4:	mov	x1, x23
  42bbd8:	mov	x2, x26
  42bbdc:	mov	x3, x5
  42bbe0:	mov	x4, xzr
  42bbe4:	bl	403fd0 <execl@plt>
  42bbe8:	bl	404a10 <__errno_location@plt>
  42bbec:	ldr	w20, [x0]
  42bbf0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42bbf4:	add	x1, x1, #0x4cf
  42bbf8:	mov	w2, #0x5                   	// #5
  42bbfc:	mov	x0, xzr
  42bc00:	bl	404900 <dcgettext@plt>
  42bc04:	mov	x2, x0
  42bc08:	mov	w0, #0x80                  	// #128
  42bc0c:	mov	w1, w20
  42bc10:	bl	403fa0 <error@plt>
  42bc14:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42bc18:	add	x8, x8, #0xf08
  42bc1c:	add	x8, x8, x21, lsl #3
  42bc20:	ldr	w0, [x8, #4]
  42bc24:	bl	404520 <close@plt>
  42bc28:	ldr	w0, [x27]
  42bc2c:	bl	404520 <close@plt>
  42bc30:	mov	x0, x24
  42bc34:	bl	403f40 <strlen@plt>
  42bc38:	mov	x20, x0
  42bc3c:	add	x0, x0, #0x3e8
  42bc40:	bl	4459e8 <argp_parse@@Base+0xe13c>
  42bc44:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42bc48:	add	x3, x3, #0x4eb
  42bc4c:	mov	w1, #0x1                   	// #1
  42bc50:	mov	x2, #0xffffffffffffffff    	// #-1
  42bc54:	mov	x4, x24
  42bc58:	mov	x25, x0
  42bc5c:	bl	403f60 <__sprintf_chk@plt>
  42bc60:	add	x8, x25, x20
  42bc64:	add	x24, x8, #0x2
  42bc68:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42bc6c:	add	x3, x3, #0x50f
  42bc70:	mov	w1, #0x1                   	// #1
  42bc74:	mov	x2, #0xffffffffffffffff    	// #-1
  42bc78:	mov	x0, x24
  42bc7c:	mov	w4, w22
  42bc80:	bl	403f60 <__sprintf_chk@plt>
  42bc84:	and	w8, w22, #0x3
  42bc88:	cmp	w8, #0x2
  42bc8c:	b.eq	42bf0c <wcrtomb@plt+0x273cc>  // b.none
  42bc90:	cmp	w8, #0x1
  42bc94:	b.eq	42bcb0 <wcrtomb@plt+0x27170>  // b.none
  42bc98:	cbnz	w8, 42bf90 <wcrtomb@plt+0x27450>
  42bc9c:	mov	x0, x24
  42bca0:	bl	403f40 <strlen@plt>
  42bca4:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42bca8:	add	x8, x8, #0x513
  42bcac:	b	42bcc0 <wcrtomb@plt+0x27180>
  42bcb0:	mov	x0, x24
  42bcb4:	bl	403f40 <strlen@plt>
  42bcb8:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42bcbc:	add	x8, x8, #0x523
  42bcc0:	ldr	x8, [x8]
  42bcc4:	add	x9, x24, x0
  42bcc8:	strb	wzr, [x9, #8]
  42bccc:	str	x8, [x9]
  42bcd0:	tbz	w22, #10, 42bcf8 <wcrtomb@plt+0x271b8>
  42bcd4:	mov	x0, x24
  42bcd8:	bl	403f40 <strlen@plt>
  42bcdc:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42bce0:	add	x8, x8, #0x52c
  42bce4:	ldr	x8, [x8]
  42bce8:	add	x9, x24, x0
  42bcec:	mov	w10, #0x44                  	// #68
  42bcf0:	strh	w10, [x9, #8]
  42bcf4:	str	x8, [x9]
  42bcf8:	tbnz	w22, #6, 42be44 <wcrtomb@plt+0x27304>
  42bcfc:	tbnz	w22, #12, 42be68 <wcrtomb@plt+0x27328>
  42bd00:	tbnz	w22, #7, 42be8c <wcrtomb@plt+0x2734c>
  42bd04:	tbnz	w22, #8, 42beac <wcrtomb@plt+0x2736c>
  42bd08:	tbz	w22, #11, 42bd34 <wcrtomb@plt+0x271f4>
  42bd0c:	mov	x0, x24
  42bd10:	bl	403f40 <strlen@plt>
  42bd14:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42bd18:	add	x8, x8, #0x552
  42bd1c:	ldr	x8, [x8]
  42bd20:	mov	w10, #0x434f                	// #17231
  42bd24:	add	x9, x24, x0
  42bd28:	movk	w10, #0x4b, lsl #16
  42bd2c:	str	x8, [x9]
  42bd30:	str	w10, [x9, #8]
  42bd34:	mov	w8, #0x1000                	// #4096
  42bd38:	movk	w8, #0x10, lsl #16
  42bd3c:	tst	w22, w8
  42bd40:	b.eq	42bd80 <wcrtomb@plt+0x27240>  // b.none
  42bd44:	mov	x0, x24
  42bd48:	bl	403f40 <strlen@plt>
  42bd4c:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42bd50:	add	x8, x8, #0x55e
  42bd54:	ldr	x8, [x8]
  42bd58:	add	x9, x24, x0
  42bd5c:	mov	x0, x24
  42bd60:	strb	wzr, [x9, #8]
  42bd64:	str	x8, [x9]
  42bd68:	bl	403f40 <strlen@plt>
  42bd6c:	mov	x8, #0x4f7c                	// #20348
  42bd70:	movk	x8, #0x535f, lsl #16
  42bd74:	movk	x8, #0x4e59, lsl #32
  42bd78:	movk	x8, #0x43, lsl #48
  42bd7c:	str	x8, [x24, x0]
  42bd80:	tbz	w22, #9, 42bda4 <wcrtomb@plt+0x27264>
  42bd84:	mov	x0, x24
  42bd88:	bl	403f40 <strlen@plt>
  42bd8c:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42bd90:	add	x8, x8, #0x567
  42bd94:	ldr	x8, [x8]
  42bd98:	add	x9, x24, x0
  42bd9c:	strb	wzr, [x9, #8]
  42bda0:	str	x8, [x9]
  42bda4:	mov	x0, x25
  42bda8:	bl	403f40 <strlen@plt>
  42bdac:	mov	w8, #0xa                   	// #10
  42bdb0:	strh	w8, [x25, x0]
  42bdb4:	mov	x0, x25
  42bdb8:	bl	403f40 <strlen@plt>
  42bdbc:	mov	x20, x0
  42bdc0:	mov	w0, #0xd                   	// #13
  42bdc4:	mov	w1, #0x1                   	// #1
  42bdc8:	bl	4041b0 <signal@plt>
  42bdcc:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42bdd0:	add	x8, x8, #0xf28
  42bdd4:	add	x24, x8, x21, lsl #3
  42bdd8:	ldr	w8, [x24, #4]!
  42bddc:	mov	x22, x0
  42bde0:	mov	x1, x25
  42bde4:	mov	x2, x20
  42bde8:	mov	w0, w8
  42bdec:	bl	43b4b0 <argp_parse@@Base+0x3c04>
  42bdf0:	mov	x23, x0
  42bdf4:	mov	w0, #0xd                   	// #13
  42bdf8:	mov	x1, x22
  42bdfc:	bl	4041b0 <signal@plt>
  42be00:	cmp	x23, x20
  42be04:	b.ne	42bed8 <wcrtomb@plt+0x27398>  // b.any
  42be08:	add	x1, sp, #0x10
  42be0c:	mov	w0, w21
  42be10:	bl	42c8a8 <wcrtomb@plt+0x27d68>
  42be14:	cbz	x0, 42bf38 <wcrtomb@plt+0x273f8>
  42be18:	mov	w2, #0xa                   	// #10
  42be1c:	mov	x1, xzr
  42be20:	bl	4046c0 <strtol@plt>
  42be24:	tbnz	x0, #63, 42bf44 <wcrtomb@plt+0x27404>
  42be28:	mov	x0, x25
  42be2c:	bl	404700 <free@plt>
  42be30:	mov	x0, x19
  42be34:	bl	404700 <free@plt>
  42be38:	ldr	w8, [sp, #12]
  42be3c:	add	w0, w21, w8
  42be40:	b	42bac8 <wcrtomb@plt+0x26f88>
  42be44:	mov	x0, x24
  42be48:	bl	403f40 <strlen@plt>
  42be4c:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42be50:	add	x8, x8, #0x536
  42be54:	ldr	x8, [x8]
  42be58:	add	x9, x24, x0
  42be5c:	strb	wzr, [x9, #8]
  42be60:	str	x8, [x9]
  42be64:	tbz	w22, #12, 42bd00 <wcrtomb@plt+0x271c0>
  42be68:	mov	x0, x24
  42be6c:	bl	403f40 <strlen@plt>
  42be70:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42be74:	add	x8, x8, #0x53f
  42be78:	ldr	x8, [x8]
  42be7c:	add	x9, x24, x0
  42be80:	strb	wzr, [x9, #8]
  42be84:	str	x8, [x9]
  42be88:	tbz	w22, #7, 42bd04 <wcrtomb@plt+0x271c4>
  42be8c:	mov	x0, x24
  42be90:	bl	403f40 <strlen@plt>
  42be94:	mov	x8, #0x4f7c                	// #20348
  42be98:	movk	x8, #0x455f, lsl #16
  42be9c:	movk	x8, #0x4358, lsl #32
  42bea0:	movk	x8, #0x4c, lsl #48
  42bea4:	str	x8, [x24, x0]
  42bea8:	tbz	w22, #8, 42bd08 <wcrtomb@plt+0x271c8>
  42beac:	mov	x0, x24
  42beb0:	bl	403f40 <strlen@plt>
  42beb4:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42beb8:	add	x8, x8, #0x548
  42bebc:	ldr	x8, [x8]
  42bec0:	add	x9, x24, x0
  42bec4:	mov	w10, #0x59                  	// #89
  42bec8:	strh	w10, [x9, #8]
  42becc:	str	x8, [x9]
  42bed0:	tbnz	w22, #11, 42bd0c <wcrtomb@plt+0x271cc>
  42bed4:	b	42bd34 <wcrtomb@plt+0x271f4>
  42bed8:	ldr	x22, [sp]
  42bedc:	ldr	w0, [x22]
  42bee0:	bl	404520 <close@plt>
  42bee4:	ldr	w0, [x24]
  42bee8:	bl	404520 <close@plt>
  42beec:	mov	w8, #0xffffffff            	// #-1
  42bef0:	str	w8, [x22]
  42bef4:	str	w8, [x24]
  42bef8:	bl	404a10 <__errno_location@plt>
  42befc:	mov	w8, #0x5                   	// #5
  42bf00:	mov	x20, x0
  42bf04:	str	w8, [x0]
  42bf08:	b	42bf58 <wcrtomb@plt+0x27418>
  42bf0c:	mov	x0, x24
  42bf10:	bl	403f40 <strlen@plt>
  42bf14:	mov	w9, #0x5f4f                	// #24399
  42bf18:	mov	w10, #0x5744                	// #22340
  42bf1c:	add	x8, x24, x0
  42bf20:	movk	w9, #0x4452, lsl #16
  42bf24:	movk	w10, #0x52, lsl #16
  42bf28:	str	w9, [x8]
  42bf2c:	stur	w10, [x8, #3]
  42bf30:	tbnz	w22, #10, 42bcd4 <wcrtomb@plt+0x27194>
  42bf34:	b	42bcf8 <wcrtomb@plt+0x271b8>
  42bf38:	bl	404a10 <__errno_location@plt>
  42bf3c:	mov	x20, x0
  42bf40:	b	42bf54 <wcrtomb@plt+0x27414>
  42bf44:	bl	404a10 <__errno_location@plt>
  42bf48:	mov	x20, x0
  42bf4c:	mov	w8, #0x5                   	// #5
  42bf50:	str	w8, [x0]
  42bf54:	ldr	x22, [sp]
  42bf58:	ldr	w21, [x20]
  42bf5c:	mov	x0, x25
  42bf60:	bl	404700 <free@plt>
  42bf64:	mov	x0, x19
  42bf68:	bl	404700 <free@plt>
  42bf6c:	ldr	w0, [x22]
  42bf70:	bl	404520 <close@plt>
  42bf74:	ldr	w0, [x24]
  42bf78:	bl	404520 <close@plt>
  42bf7c:	mov	w0, #0xffffffff            	// #-1
  42bf80:	str	w0, [x22]
  42bf84:	str	w0, [x24]
  42bf88:	str	w21, [x20]
  42bf8c:	b	42bac8 <wcrtomb@plt+0x26f88>
  42bf90:	bl	4045b0 <abort@plt>
  42bf94:	sub	sp, sp, #0x80
  42bf98:	stp	x20, x19, [sp, #112]
  42bf9c:	mov	w19, w0
  42bfa0:	mov	w0, #0xd                   	// #13
  42bfa4:	mov	w1, #0x1                   	// #1
  42bfa8:	stp	x29, x30, [sp, #64]
  42bfac:	stp	x24, x23, [sp, #80]
  42bfb0:	stp	x22, x21, [sp, #96]
  42bfb4:	add	x29, sp, #0x40
  42bfb8:	bl	4041b0 <signal@plt>
  42bfbc:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42bfc0:	add	x8, x8, #0xf28
  42bfc4:	add	x22, x8, w19, sxtw #3
  42bfc8:	mov	x20, x0
  42bfcc:	ldr	w0, [x22, #4]!
  42bfd0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42bfd4:	add	x1, x1, #0x4f0
  42bfd8:	mov	w2, #0x2                   	// #2
  42bfdc:	sxtw	x23, w19
  42bfe0:	bl	43b4b0 <argp_parse@@Base+0x3c04>
  42bfe4:	mov	x21, x0
  42bfe8:	mov	w0, #0xd                   	// #13
  42bfec:	mov	x1, x20
  42bff0:	bl	4041b0 <signal@plt>
  42bff4:	cmp	x21, #0x2
  42bff8:	b.ne	42c06c <wcrtomb@plt+0x2752c>  // b.any
  42bffc:	mov	x1, sp
  42c000:	mov	w0, w19
  42c004:	bl	42c8a8 <wcrtomb@plt+0x27d68>
  42c008:	cbz	x0, 42c02c <wcrtomb@plt+0x274ec>
  42c00c:	mov	w2, #0xa                   	// #10
  42c010:	mov	x1, xzr
  42c014:	bl	4046c0 <strtol@plt>
  42c018:	mov	x19, x0
  42c01c:	tbz	x0, #63, 42c030 <wcrtomb@plt+0x274f0>
  42c020:	bl	404a10 <__errno_location@plt>
  42c024:	mov	w8, #0x5                   	// #5
  42c028:	str	w8, [x0]
  42c02c:	mov	x19, #0xffffffffffffffff    	// #-1
  42c030:	bl	404a10 <__errno_location@plt>
  42c034:	adrp	x24, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c038:	lsl	x23, x23, #3
  42c03c:	add	x24, x24, #0xf08
  42c040:	mov	x20, x0
  42c044:	ldr	w21, [x0]
  42c048:	ldr	w0, [x24, x23]
  42c04c:	bl	404520 <close@plt>
  42c050:	ldr	w0, [x22]
  42c054:	bl	404520 <close@plt>
  42c058:	mov	w8, #0xffffffff            	// #-1
  42c05c:	str	w8, [x24, x23]
  42c060:	str	w8, [x22]
  42c064:	str	w21, [x20]
  42c068:	b	42c0a0 <wcrtomb@plt+0x27560>
  42c06c:	adrp	x21, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c070:	lsl	x20, x23, #3
  42c074:	add	x21, x21, #0xf08
  42c078:	ldr	w0, [x21, x20]
  42c07c:	bl	404520 <close@plt>
  42c080:	ldr	w0, [x22]
  42c084:	bl	404520 <close@plt>
  42c088:	mov	w19, #0xffffffff            	// #-1
  42c08c:	str	w19, [x21, x20]
  42c090:	str	w19, [x22]
  42c094:	bl	404a10 <__errno_location@plt>
  42c098:	mov	w8, #0x5                   	// #5
  42c09c:	str	w8, [x0]
  42c0a0:	mov	w0, w19
  42c0a4:	ldp	x20, x19, [sp, #112]
  42c0a8:	ldp	x22, x21, [sp, #96]
  42c0ac:	ldp	x24, x23, [sp, #80]
  42c0b0:	ldp	x29, x30, [sp, #64]
  42c0b4:	add	sp, sp, #0x80
  42c0b8:	ret
  42c0bc:	sub	sp, sp, #0xd0
  42c0c0:	stp	x20, x19, [sp, #192]
  42c0c4:	mov	x20, x2
  42c0c8:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42c0cc:	stp	x22, x21, [sp, #176]
  42c0d0:	mov	x19, x1
  42c0d4:	mov	w21, w0
  42c0d8:	add	x3, x3, #0x4f3
  42c0dc:	mov	x0, sp
  42c0e0:	mov	w1, #0x1                   	// #1
  42c0e4:	mov	w2, #0x40                  	// #64
  42c0e8:	mov	x4, x20
  42c0ec:	stp	x29, x30, [sp, #128]
  42c0f0:	stp	x26, x25, [sp, #144]
  42c0f4:	stp	x24, x23, [sp, #160]
  42c0f8:	add	x29, sp, #0x80
  42c0fc:	bl	403f60 <__sprintf_chk@plt>
  42c100:	mov	x0, sp
  42c104:	bl	403f40 <strlen@plt>
  42c108:	mov	x22, x0
  42c10c:	mov	w0, #0xd                   	// #13
  42c110:	mov	w1, #0x1                   	// #1
  42c114:	bl	4041b0 <signal@plt>
  42c118:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c11c:	add	x8, x8, #0xf28
  42c120:	add	x25, x8, w21, sxtw #3
  42c124:	mov	x23, x0
  42c128:	ldr	w0, [x25, #4]!
  42c12c:	mov	x1, sp
  42c130:	mov	x2, x22
  42c134:	sxtw	x26, w21
  42c138:	bl	43b4b0 <argp_parse@@Base+0x3c04>
  42c13c:	mov	x24, x0
  42c140:	mov	w0, #0xd                   	// #13
  42c144:	mov	x1, x23
  42c148:	bl	4041b0 <signal@plt>
  42c14c:	cmp	x24, x22
  42c150:	b.ne	42c1c4 <wcrtomb@plt+0x27684>  // b.any
  42c154:	add	x1, sp, #0x40
  42c158:	mov	w0, w21
  42c15c:	bl	42c8a8 <wcrtomb@plt+0x27d68>
  42c160:	cbz	x0, 42c1f8 <wcrtomb@plt+0x276b8>
  42c164:	mov	w2, #0xa                   	// #10
  42c168:	mov	x1, xzr
  42c16c:	bl	4046c0 <strtol@plt>
  42c170:	tbnz	x0, #63, 42c1ec <wcrtomb@plt+0x276ac>
  42c174:	mov	x21, x0
  42c178:	cmp	x0, x20
  42c17c:	b.hi	42c1f8 <wcrtomb@plt+0x276b8>  // b.pmore
  42c180:	cbz	x21, 42c1fc <wcrtomb@plt+0x276bc>
  42c184:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c188:	add	x8, x8, #0xf08
  42c18c:	mov	x22, xzr
  42c190:	add	x20, x8, x26, lsl #3
  42c194:	ldr	w0, [x20]
  42c198:	sub	x2, x21, x22
  42c19c:	mov	x1, x19
  42c1a0:	bl	444d88 <argp_parse@@Base+0xd4dc>
  42c1a4:	add	x8, x0, #0x1
  42c1a8:	cmp	x8, #0x1
  42c1ac:	b.ls	42c21c <wcrtomb@plt+0x276dc>  // b.plast
  42c1b0:	add	x22, x0, x22
  42c1b4:	cmp	x21, x22
  42c1b8:	add	x19, x19, x0
  42c1bc:	b.hi	42c194 <wcrtomb@plt+0x27654>  // b.pmore
  42c1c0:	b	42c1fc <wcrtomb@plt+0x276bc>
  42c1c4:	adrp	x20, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c1c8:	lsl	x19, x26, #3
  42c1cc:	add	x20, x20, #0xf08
  42c1d0:	ldr	w0, [x20, x19]
  42c1d4:	bl	404520 <close@plt>
  42c1d8:	ldr	w0, [x25]
  42c1dc:	bl	404520 <close@plt>
  42c1e0:	mov	w8, #0xffffffff            	// #-1
  42c1e4:	str	w8, [x20, x19]
  42c1e8:	str	w8, [x25]
  42c1ec:	bl	404a10 <__errno_location@plt>
  42c1f0:	mov	w8, #0x5                   	// #5
  42c1f4:	str	w8, [x0]
  42c1f8:	mov	x21, #0xffffffffffffffff    	// #-1
  42c1fc:	mov	x0, x21
  42c200:	ldp	x20, x19, [sp, #192]
  42c204:	ldp	x22, x21, [sp, #176]
  42c208:	ldp	x24, x23, [sp, #160]
  42c20c:	ldp	x26, x25, [sp, #144]
  42c210:	ldp	x29, x30, [sp, #128]
  42c214:	add	sp, sp, #0xd0
  42c218:	ret
  42c21c:	ldr	w0, [x20]
  42c220:	bl	404520 <close@plt>
  42c224:	ldr	w0, [x25]
  42c228:	bl	404520 <close@plt>
  42c22c:	mov	w8, #0xffffffff            	// #-1
  42c230:	str	w8, [x20]
  42c234:	b	42c1e8 <wcrtomb@plt+0x276a8>
  42c238:	sub	sp, sp, #0xd0
  42c23c:	stp	x20, x19, [sp, #192]
  42c240:	mov	x20, x2
  42c244:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42c248:	stp	x22, x21, [sp, #176]
  42c24c:	mov	x21, x1
  42c250:	mov	w19, w0
  42c254:	add	x3, x3, #0x4f9
  42c258:	mov	x0, sp
  42c25c:	mov	w1, #0x1                   	// #1
  42c260:	mov	w2, #0x40                  	// #64
  42c264:	mov	x4, x20
  42c268:	stp	x29, x30, [sp, #128]
  42c26c:	str	x25, [sp, #144]
  42c270:	stp	x24, x23, [sp, #160]
  42c274:	add	x29, sp, #0x80
  42c278:	bl	403f60 <__sprintf_chk@plt>
  42c27c:	mov	x0, sp
  42c280:	bl	403f40 <strlen@plt>
  42c284:	mov	x22, x0
  42c288:	mov	w0, #0xd                   	// #13
  42c28c:	mov	w1, #0x1                   	// #1
  42c290:	bl	4041b0 <signal@plt>
  42c294:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c298:	add	x8, x8, #0xf28
  42c29c:	add	x25, x8, w19, sxtw #3
  42c2a0:	ldr	w8, [x25, #4]!
  42c2a4:	mov	x23, x0
  42c2a8:	mov	x1, sp
  42c2ac:	mov	x2, x22
  42c2b0:	mov	w0, w8
  42c2b4:	bl	43b4b0 <argp_parse@@Base+0x3c04>
  42c2b8:	mov	x24, x0
  42c2bc:	mov	w0, #0xd                   	// #13
  42c2c0:	mov	x1, x23
  42c2c4:	bl	4041b0 <signal@plt>
  42c2c8:	cmp	x24, x22
  42c2cc:	b.ne	42c358 <wcrtomb@plt+0x27818>  // b.any
  42c2d0:	mov	w0, #0xd                   	// #13
  42c2d4:	mov	w1, #0x1                   	// #1
  42c2d8:	bl	4041b0 <signal@plt>
  42c2dc:	ldr	w8, [x25]
  42c2e0:	mov	x22, x0
  42c2e4:	mov	x1, x21
  42c2e8:	mov	x2, x20
  42c2ec:	mov	w0, w8
  42c2f0:	bl	43b4b0 <argp_parse@@Base+0x3c04>
  42c2f4:	mov	x21, x0
  42c2f8:	mov	w0, #0xd                   	// #13
  42c2fc:	mov	x1, x22
  42c300:	bl	4041b0 <signal@plt>
  42c304:	cmp	x21, x20
  42c308:	b.ne	42c35c <wcrtomb@plt+0x2781c>  // b.any
  42c30c:	add	x1, sp, #0x40
  42c310:	mov	w0, w19
  42c314:	bl	42c8a8 <wcrtomb@plt+0x27d68>
  42c318:	cbz	x0, 42c33c <wcrtomb@plt+0x277fc>
  42c31c:	mov	w2, #0xa                   	// #10
  42c320:	mov	x1, xzr
  42c324:	bl	4046c0 <strtol@plt>
  42c328:	mov	x21, x0
  42c32c:	tbz	x0, #63, 42c340 <wcrtomb@plt+0x27800>
  42c330:	bl	404a10 <__errno_location@plt>
  42c334:	mov	w8, #0x5                   	// #5
  42c338:	str	w8, [x0]
  42c33c:	mov	x21, #0xffffffffffffffff    	// #-1
  42c340:	cmp	x21, #0x0
  42c344:	csel	x0, xzr, x20, lt  // lt = tstop
  42c348:	tbnz	x21, #63, 42c398 <wcrtomb@plt+0x27858>
  42c34c:	cmp	x21, x20
  42c350:	b.ne	42c35c <wcrtomb@plt+0x2781c>  // b.any
  42c354:	b	42c398 <wcrtomb@plt+0x27858>
  42c358:	mov	x21, xzr
  42c35c:	sxtw	x8, w19
  42c360:	adrp	x20, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c364:	lsl	x19, x8, #3
  42c368:	add	x20, x20, #0xf08
  42c36c:	ldr	w0, [x20, x19]
  42c370:	bl	404520 <close@plt>
  42c374:	ldr	w0, [x25]
  42c378:	bl	404520 <close@plt>
  42c37c:	mov	w8, #0xffffffff            	// #-1
  42c380:	str	w8, [x20, x19]
  42c384:	str	w8, [x25]
  42c388:	bl	404a10 <__errno_location@plt>
  42c38c:	mov	w8, #0x5                   	// #5
  42c390:	str	w8, [x0]
  42c394:	mov	x0, x21
  42c398:	ldp	x20, x19, [sp, #192]
  42c39c:	ldp	x22, x21, [sp, #176]
  42c3a0:	ldp	x24, x23, [sp, #160]
  42c3a4:	ldr	x25, [sp, #144]
  42c3a8:	ldp	x29, x30, [sp, #128]
  42c3ac:	add	sp, sp, #0xd0
  42c3b0:	ret
  42c3b4:	sub	sp, sp, #0xe0
  42c3b8:	cmp	x1, #0x0
  42c3bc:	add	x9, sp, #0x8
  42c3c0:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  42c3c4:	stp	x20, x19, [sp, #208]
  42c3c8:	mov	w5, w2
  42c3cc:	mov	w19, w0
  42c3d0:	movk	x8, #0xcccd
  42c3d4:	cneg	x10, x1, mi  // mi = first
  42c3d8:	add	x4, x9, #0x13
  42c3dc:	mov	w9, #0xa                   	// #10
  42c3e0:	stp	x29, x30, [sp, #160]
  42c3e4:	str	x23, [sp, #176]
  42c3e8:	stp	x22, x21, [sp, #192]
  42c3ec:	add	x29, sp, #0xa0
  42c3f0:	strb	wzr, [sp, #28]
  42c3f4:	umulh	x11, x10, x8
  42c3f8:	lsr	x11, x11, #3
  42c3fc:	msub	w12, w11, w9, w10
  42c400:	orr	w12, w12, #0x30
  42c404:	cmp	x10, #0x9
  42c408:	strb	w12, [x4], #-1
  42c40c:	mov	x10, x11
  42c410:	b.hi	42c3f4 <wcrtomb@plt+0x278b4>  // b.pmore
  42c414:	tbnz	x1, #63, 42c540 <wcrtomb@plt+0x27a00>
  42c418:	add	x4, x4, #0x1
  42c41c:	cmp	w5, #0x3
  42c420:	b.cs	42c550 <wcrtomb@plt+0x27a10>  // b.hs, b.nlast
  42c424:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42c428:	add	x3, x3, #0x4ff
  42c42c:	add	x0, sp, #0x20
  42c430:	mov	w1, #0x1                   	// #1
  42c434:	mov	w2, #0x40                  	// #64
  42c438:	bl	403f60 <__sprintf_chk@plt>
  42c43c:	add	x0, sp, #0x20
  42c440:	bl	403f40 <strlen@plt>
  42c444:	mov	x20, x0
  42c448:	mov	w0, #0xd                   	// #13
  42c44c:	mov	w1, #0x1                   	// #1
  42c450:	bl	4041b0 <signal@plt>
  42c454:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c458:	add	x8, x8, #0xf28
  42c45c:	add	x23, x8, w19, sxtw #3
  42c460:	ldr	w8, [x23, #4]!
  42c464:	mov	x21, x0
  42c468:	add	x1, sp, #0x20
  42c46c:	mov	x2, x20
  42c470:	mov	w0, w8
  42c474:	bl	43b4b0 <argp_parse@@Base+0x3c04>
  42c478:	mov	x22, x0
  42c47c:	mov	w0, #0xd                   	// #13
  42c480:	mov	x1, x21
  42c484:	bl	4041b0 <signal@plt>
  42c488:	cmp	x22, x20
  42c48c:	b.ne	42c4e8 <wcrtomb@plt+0x279a8>  // b.any
  42c490:	sub	x1, x29, #0x40
  42c494:	mov	w0, w19
  42c498:	bl	42c8a8 <wcrtomb@plt+0x27d68>
  42c49c:	cbnz	x0, 42c4a8 <wcrtomb@plt+0x27968>
  42c4a0:	b	42c520 <wcrtomb@plt+0x279e0>
  42c4a4:	add	x0, x0, #0x1
  42c4a8:	ldrb	w9, [x0]
  42c4ac:	cmp	w9, #0x20
  42c4b0:	b.eq	42c4a4 <wcrtomb@plt+0x27964>  // b.none
  42c4b4:	cmp	w9, #0x9
  42c4b8:	b.eq	42c4a4 <wcrtomb@plt+0x27964>  // b.none
  42c4bc:	cmp	w9, #0x2d
  42c4c0:	cset	w8, eq  // eq = none
  42c4c4:	cmp	w9, #0x2b
  42c4c8:	cset	w10, eq  // eq = none
  42c4cc:	orr	w10, w8, w10
  42c4d0:	ldrb	w8, [x0, x10]
  42c4d4:	sub	w11, w8, #0x30
  42c4d8:	cmp	w11, #0x9
  42c4dc:	b.ls	42c554 <wcrtomb@plt+0x27a14>  // b.plast
  42c4e0:	mov	x8, xzr
  42c4e4:	b	42c524 <wcrtomb@plt+0x279e4>
  42c4e8:	sxtw	x8, w19
  42c4ec:	adrp	x20, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c4f0:	lsl	x19, x8, #3
  42c4f4:	add	x20, x20, #0xf08
  42c4f8:	ldr	w0, [x20, x19]
  42c4fc:	bl	404520 <close@plt>
  42c500:	ldr	w0, [x23]
  42c504:	bl	404520 <close@plt>
  42c508:	mov	w8, #0xffffffff            	// #-1
  42c50c:	str	w8, [x20, x19]
  42c510:	str	w8, [x23]
  42c514:	bl	404a10 <__errno_location@plt>
  42c518:	mov	w8, #0x5                   	// #5
  42c51c:	str	w8, [x0]
  42c520:	mov	x8, #0xffffffffffffffff    	// #-1
  42c524:	ldp	x20, x19, [sp, #208]
  42c528:	ldp	x22, x21, [sp, #192]
  42c52c:	ldr	x23, [sp, #176]
  42c530:	ldp	x29, x30, [sp, #160]
  42c534:	mov	x0, x8
  42c538:	add	sp, sp, #0xe0
  42c53c:	ret
  42c540:	mov	w8, #0x2d                  	// #45
  42c544:	strb	w8, [x4]
  42c548:	cmp	w5, #0x3
  42c54c:	b.cc	42c424 <wcrtomb@plt+0x278e4>  // b.lo, b.ul, b.last
  42c550:	bl	4045b0 <abort@plt>
  42c554:	mov	x8, xzr
  42c558:	add	x10, x10, #0x1
  42c55c:	b	42c57c <wcrtomb@plt+0x27a3c>
  42c560:	cmp	x8, x11
  42c564:	b.lt	42c520 <wcrtomb@plt+0x279e0>  // b.tstop
  42c568:	ldrb	w11, [x0, x10]
  42c56c:	add	x10, x10, #0x1
  42c570:	sub	w11, w11, #0x30
  42c574:	cmp	w11, #0xa
  42c578:	b.cs	42c524 <wcrtomb@plt+0x279e4>  // b.hs, b.nlast
  42c57c:	add	x8, x8, x8, lsl #2
  42c580:	mov	w12, w11
  42c584:	cmp	w9, #0x2d
  42c588:	lsl	x11, x8, #1
  42c58c:	cneg	x8, x12, eq  // eq = none
  42c590:	add	x8, x11, x8
  42c594:	b.ne	42c560 <wcrtomb@plt+0x27a20>  // b.any
  42c598:	cmp	x11, x8
  42c59c:	b.ge	42c568 <wcrtomb@plt+0x27a28>  // b.tcont
  42c5a0:	b	42c520 <wcrtomb@plt+0x279e0>
  42c5a4:	sub	sp, sp, #0xe0
  42c5a8:	mov	w8, #0x6d02                	// #27906
  42c5ac:	movk	w8, #0x8030, lsl #16
  42c5b0:	stp	x20, x19, [sp, #208]
  42c5b4:	mov	x19, x2
  42c5b8:	cmp	w1, w8
  42c5bc:	mov	w20, w0
  42c5c0:	stp	x29, x30, [sp, #160]
  42c5c4:	stp	x24, x23, [sp, #176]
  42c5c8:	stp	x22, x21, [sp, #192]
  42c5cc:	add	x29, sp, #0xa0
  42c5d0:	b.eq	42c638 <wcrtomb@plt+0x27af8>  // b.none
  42c5d4:	mov	w8, #0x6d01                	// #27905
  42c5d8:	movk	w8, #0x4008, lsl #16
  42c5dc:	cmp	w1, w8
  42c5e0:	b.ne	42c6bc <wcrtomb@plt+0x27b7c>  // b.any
  42c5e4:	ldrsw	x9, [x19, #4]
  42c5e8:	add	x10, sp, #0x8
  42c5ec:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  42c5f0:	movk	x8, #0xcccd
  42c5f4:	cmp	x9, #0x0
  42c5f8:	add	x5, x10, #0x13
  42c5fc:	cneg	x10, x9, mi  // mi = first
  42c600:	mov	w9, #0xa                   	// #10
  42c604:	strb	wzr, [sp, #28]
  42c608:	umulh	x11, x10, x8
  42c60c:	lsr	x11, x11, #3
  42c610:	msub	w12, w11, w9, w10
  42c614:	orr	w12, w12, #0x30
  42c618:	cmp	x10, #0x9
  42c61c:	strb	w12, [x5], #-1
  42c620:	mov	x10, x11
  42c624:	b.hi	42c608 <wcrtomb@plt+0x27ac8>  // b.pmore
  42c628:	ldr	w8, [x19, #4]
  42c62c:	tbnz	w8, #31, 42c6d8 <wcrtomb@plt+0x27b98>
  42c630:	add	x5, x5, #0x1
  42c634:	b	42c6e0 <wcrtomb@plt+0x27ba0>
  42c638:	mov	w0, #0xd                   	// #13
  42c63c:	mov	w1, #0x1                   	// #1
  42c640:	bl	4041b0 <signal@plt>
  42c644:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c648:	add	x8, x8, #0xf28
  42c64c:	add	x23, x8, w20, sxtw #3
  42c650:	mov	x21, x0
  42c654:	ldr	w0, [x23, #4]!
  42c658:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  42c65c:	add	x1, x1, #0x160
  42c660:	mov	w2, #0x1                   	// #1
  42c664:	sxtw	x24, w20
  42c668:	bl	43b4b0 <argp_parse@@Base+0x3c04>
  42c66c:	mov	x22, x0
  42c670:	mov	w0, #0xd                   	// #13
  42c674:	mov	x1, x21
  42c678:	bl	4041b0 <signal@plt>
  42c67c:	cmp	x22, #0x1
  42c680:	b.ne	42c6d0 <wcrtomb@plt+0x27b90>  // b.any
  42c684:	sub	x1, x29, #0x40
  42c688:	mov	w0, w20
  42c68c:	bl	42c8a8 <wcrtomb@plt+0x27d68>
  42c690:	cbz	x0, 42c6c8 <wcrtomb@plt+0x27b88>
  42c694:	mov	w2, #0xa                   	// #10
  42c698:	mov	x1, xzr
  42c69c:	bl	4046c0 <strtol@plt>
  42c6a0:	tbnz	x0, #63, 42c7dc <wcrtomb@plt+0x27c9c>
  42c6a4:	mov	x21, x0
  42c6a8:	cmp	x0, #0x8
  42c6ac:	b.ls	42c7e8 <wcrtomb@plt+0x27ca8>  // b.plast
  42c6b0:	bl	404a10 <__errno_location@plt>
  42c6b4:	mov	w8, #0x4b                  	// #75
  42c6b8:	b	42c6c4 <wcrtomb@plt+0x27b84>
  42c6bc:	bl	404a10 <__errno_location@plt>
  42c6c0:	mov	w8, #0x5f                  	// #95
  42c6c4:	str	w8, [x0]
  42c6c8:	mov	w20, #0xffffffff            	// #-1
  42c6cc:	b	42c7c0 <wcrtomb@plt+0x27c80>
  42c6d0:	lsl	x19, x24, #3
  42c6d4:	b	42c790 <wcrtomb@plt+0x27c50>
  42c6d8:	mov	w8, #0x2d                  	// #45
  42c6dc:	strb	w8, [x5]
  42c6e0:	ldrsh	w4, [x19]
  42c6e4:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42c6e8:	add	x3, x3, #0x507
  42c6ec:	add	x0, sp, #0x20
  42c6f0:	mov	w1, #0x1                   	// #1
  42c6f4:	mov	w2, #0x40                  	// #64
  42c6f8:	bl	403f60 <__sprintf_chk@plt>
  42c6fc:	add	x0, sp, #0x20
  42c700:	bl	403f40 <strlen@plt>
  42c704:	mov	x19, x0
  42c708:	mov	w0, #0xd                   	// #13
  42c70c:	mov	w1, #0x1                   	// #1
  42c710:	bl	4041b0 <signal@plt>
  42c714:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c718:	add	x8, x8, #0xf28
  42c71c:	add	x23, x8, w20, sxtw #3
  42c720:	ldr	w8, [x23, #4]!
  42c724:	mov	x21, x0
  42c728:	add	x1, sp, #0x20
  42c72c:	mov	x2, x19
  42c730:	mov	w0, w8
  42c734:	bl	43b4b0 <argp_parse@@Base+0x3c04>
  42c738:	mov	x22, x0
  42c73c:	mov	w0, #0xd                   	// #13
  42c740:	mov	x1, x21
  42c744:	bl	4041b0 <signal@plt>
  42c748:	cmp	x22, x19
  42c74c:	b.ne	42c788 <wcrtomb@plt+0x27c48>  // b.any
  42c750:	sub	x1, x29, #0x40
  42c754:	mov	w0, w20
  42c758:	bl	42c8a8 <wcrtomb@plt+0x27d68>
  42c75c:	cbz	x0, 42c780 <wcrtomb@plt+0x27c40>
  42c760:	mov	w2, #0xa                   	// #10
  42c764:	mov	x1, xzr
  42c768:	bl	4046c0 <strtol@plt>
  42c76c:	mov	x20, x0
  42c770:	tbz	x0, #63, 42c7c0 <wcrtomb@plt+0x27c80>
  42c774:	bl	404a10 <__errno_location@plt>
  42c778:	mov	w8, #0x5                   	// #5
  42c77c:	str	w8, [x0]
  42c780:	mov	x20, #0xffffffffffffffff    	// #-1
  42c784:	b	42c7c0 <wcrtomb@plt+0x27c80>
  42c788:	sxtw	x8, w20
  42c78c:	lsl	x19, x8, #3
  42c790:	adrp	x21, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c794:	add	x21, x21, #0xf08
  42c798:	ldr	w0, [x21, x19]
  42c79c:	bl	404520 <close@plt>
  42c7a0:	ldr	w0, [x23]
  42c7a4:	bl	404520 <close@plt>
  42c7a8:	mov	w20, #0xffffffff            	// #-1
  42c7ac:	str	w20, [x21, x19]
  42c7b0:	str	w20, [x23]
  42c7b4:	bl	404a10 <__errno_location@plt>
  42c7b8:	mov	w8, #0x5                   	// #5
  42c7bc:	str	w8, [x0]
  42c7c0:	mov	w0, w20
  42c7c4:	ldp	x20, x19, [sp, #208]
  42c7c8:	ldp	x22, x21, [sp, #192]
  42c7cc:	ldp	x24, x23, [sp, #176]
  42c7d0:	ldp	x29, x30, [sp, #160]
  42c7d4:	add	sp, sp, #0xe0
  42c7d8:	ret
  42c7dc:	bl	404a10 <__errno_location@plt>
  42c7e0:	mov	w8, #0x5                   	// #5
  42c7e4:	b	42c6c4 <wcrtomb@plt+0x27b84>
  42c7e8:	cbz	x21, 42c884 <wcrtomb@plt+0x27d44>
  42c7ec:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c7f0:	add	x8, x8, #0xf08
  42c7f4:	add	x24, x8, x24, lsl #3
  42c7f8:	ldr	w0, [x24]
  42c7fc:	mov	x1, x19
  42c800:	mov	x2, x21
  42c804:	mov	x22, x19
  42c808:	bl	444d88 <argp_parse@@Base+0xd4dc>
  42c80c:	add	x8, x0, #0x1
  42c810:	cmp	x8, #0x1
  42c814:	b.ls	42c88c <wcrtomb@plt+0x27d4c>  // b.plast
  42c818:	sub	x21, x21, x0
  42c81c:	cmp	x21, #0x0
  42c820:	add	x19, x22, x0
  42c824:	b.gt	42c7f8 <wcrtomb@plt+0x27cb8>
  42c828:	ldr	x8, [x19]
  42c82c:	mov	w20, wzr
  42c830:	cmp	x8, #0x100
  42c834:	b.lt	42c7c0 <wcrtomb@plt+0x27c80>  // b.tstop
  42c838:	cbz	x21, 42c7c0 <wcrtomb@plt+0x27c80>
  42c83c:	ldrb	w9, [x19, #1]
  42c840:	cmp	x21, #0x3
  42c844:	strb	w8, [x19, #1]
  42c848:	strb	w9, [x19]
  42c84c:	b.cc	42c884 <wcrtomb@plt+0x27d44>  // b.lo, b.ul, b.last
  42c850:	mov	x9, xzr
  42c854:	add	x8, x22, x0
  42c858:	add	x10, x8, x9
  42c85c:	ldrb	w12, [x10, #3]
  42c860:	ldrb	w13, [x10, #2]
  42c864:	add	x11, x9, #0x4
  42c868:	mov	w20, wzr
  42c86c:	add	x9, x9, #0x2
  42c870:	cmp	x11, x21
  42c874:	strb	w12, [x10, #2]
  42c878:	strb	w13, [x10, #3]
  42c87c:	b.cc	42c858 <wcrtomb@plt+0x27d18>  // b.lo, b.ul, b.last
  42c880:	b	42c7c0 <wcrtomb@plt+0x27c80>
  42c884:	mov	w20, wzr
  42c888:	b	42c7c0 <wcrtomb@plt+0x27c80>
  42c88c:	ldr	w0, [x24]
  42c890:	bl	404520 <close@plt>
  42c894:	ldr	w0, [x23]
  42c898:	bl	404520 <close@plt>
  42c89c:	mov	w20, #0xffffffff            	// #-1
  42c8a0:	str	w20, [x24]
  42c8a4:	b	42c7b0 <wcrtomb@plt+0x27c70>
  42c8a8:	stp	x29, x30, [sp, #-64]!
  42c8ac:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c8b0:	add	x8, x8, #0xf08
  42c8b4:	str	x23, [sp, #16]
  42c8b8:	stp	x22, x21, [sp, #32]
  42c8bc:	stp	x20, x19, [sp, #48]
  42c8c0:	mov	x19, x1
  42c8c4:	mov	x21, xzr
  42c8c8:	sxtw	x23, w0
  42c8cc:	add	x22, x8, w0, sxtw #3
  42c8d0:	mov	x29, sp
  42c8d4:	ldr	w0, [x22]
  42c8d8:	add	x20, x19, x21
  42c8dc:	mov	w2, #0x1                   	// #1
  42c8e0:	mov	x1, x20
  42c8e4:	bl	444d88 <argp_parse@@Base+0xd4dc>
  42c8e8:	cmp	x0, #0x1
  42c8ec:	b.ne	42c918 <wcrtomb@plt+0x27dd8>  // b.any
  42c8f0:	ldrb	w8, [x20]
  42c8f4:	cmp	w8, #0xa
  42c8f8:	b.eq	42c90c <wcrtomb@plt+0x27dcc>  // b.none
  42c8fc:	add	x21, x21, #0x1
  42c900:	cmp	w21, #0x40
  42c904:	b.ne	42c8d4 <wcrtomb@plt+0x27d94>  // b.any
  42c908:	b	42c918 <wcrtomb@plt+0x27dd8>
  42c90c:	cmp	w21, #0x40
  42c910:	strb	wzr, [x19, x21]
  42c914:	b.ne	42c968 <wcrtomb@plt+0x27e28>  // b.any
  42c918:	ldr	w0, [x22]
  42c91c:	bl	404520 <close@plt>
  42c920:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c924:	add	x8, x8, #0xf28
  42c928:	add	x19, x8, x23, lsl #3
  42c92c:	ldr	w0, [x19, #4]
  42c930:	bl	404520 <close@plt>
  42c934:	mov	w8, #0xffffffff            	// #-1
  42c938:	str	w8, [x22]
  42c93c:	str	w8, [x19, #4]
  42c940:	bl	404a10 <__errno_location@plt>
  42c944:	mov	w8, #0x5                   	// #5
  42c948:	mov	x19, xzr
  42c94c:	str	w8, [x0]
  42c950:	mov	x0, x19
  42c954:	ldp	x20, x19, [sp, #48]
  42c958:	ldp	x22, x21, [sp, #32]
  42c95c:	ldr	x23, [sp, #16]
  42c960:	ldp	x29, x30, [sp], #64
  42c964:	ret
  42c968:	add	x19, x19, #0x1
  42c96c:	ldurb	w8, [x19, #-1]
  42c970:	cmp	w8, #0x20
  42c974:	b.eq	42c968 <wcrtomb@plt+0x27e28>  // b.none
  42c978:	sub	w9, w8, #0x45
  42c97c:	cmp	w9, #0x2
  42c980:	b.cs	42ca0c <wcrtomb@plt+0x27ecc>  // b.hs, b.nlast
  42c984:	ldr	w0, [x22]
  42c988:	add	x1, x29, #0x1c
  42c98c:	mov	w2, #0x1                   	// #1
  42c990:	bl	444d88 <argp_parse@@Base+0xd4dc>
  42c994:	cmp	x0, #0x1
  42c998:	b.ne	42c9a8 <wcrtomb@plt+0x27e68>  // b.any
  42c99c:	ldrb	w8, [x29, #28]
  42c9a0:	cmp	w8, #0xa
  42c9a4:	b.ne	42c984 <wcrtomb@plt+0x27e44>  // b.any
  42c9a8:	mov	w2, #0xa                   	// #10
  42c9ac:	mov	x0, x19
  42c9b0:	mov	x1, xzr
  42c9b4:	bl	4046c0 <strtol@plt>
  42c9b8:	mov	x20, x0
  42c9bc:	bl	404a10 <__errno_location@plt>
  42c9c0:	str	w20, [x0]
  42c9c4:	ldurb	w8, [x19, #-1]
  42c9c8:	mov	x19, xzr
  42c9cc:	cmp	w8, #0x46
  42c9d0:	b.ne	42c950 <wcrtomb@plt+0x27e10>  // b.any
  42c9d4:	mov	x21, x0
  42c9d8:	ldr	w0, [x22]
  42c9dc:	bl	404520 <close@plt>
  42c9e0:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42c9e4:	add	x8, x8, #0xf28
  42c9e8:	add	x23, x8, x23, lsl #3
  42c9ec:	ldr	w0, [x23, #4]
  42c9f0:	bl	404520 <close@plt>
  42c9f4:	mov	x19, xzr
  42c9f8:	mov	w8, #0xffffffff            	// #-1
  42c9fc:	str	w8, [x22]
  42ca00:	str	w8, [x23, #4]
  42ca04:	str	w20, [x21]
  42ca08:	b	42c950 <wcrtomb@plt+0x27e10>
  42ca0c:	cmp	w8, #0x41
  42ca10:	b.ne	42c918 <wcrtomb@plt+0x27dd8>  // b.any
  42ca14:	b	42c950 <wcrtomb@plt+0x27e10>
  42ca18:	stp	x29, x30, [sp, #-32]!
  42ca1c:	mov	w1, #0x1                   	// #1
  42ca20:	mov	w0, wzr
  42ca24:	str	x19, [sp, #16]
  42ca28:	mov	x29, sp
  42ca2c:	mov	w19, #0x1                   	// #1
  42ca30:	bl	446494 <argp_parse@@Base+0xebe8>
  42ca34:	tbz	w0, #31, 42ca84 <wcrtomb@plt+0x27f44>
  42ca38:	bl	404a10 <__errno_location@plt>
  42ca3c:	ldr	w8, [x0]
  42ca40:	cmp	w8, #0x9
  42ca44:	b.ne	42ca80 <wcrtomb@plt+0x27f40>  // b.any
  42ca48:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ca4c:	add	x0, x0, #0x570
  42ca50:	mov	w1, #0x1                   	// #1
  42ca54:	mov	w19, #0x1                   	// #1
  42ca58:	bl	404280 <open@plt>
  42ca5c:	cbz	w0, 42ca84 <wcrtomb@plt+0x27f44>
  42ca60:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ca64:	add	x0, x0, #0x57a
  42ca68:	mov	w1, #0x1                   	// #1
  42ca6c:	mov	w19, #0x1                   	// #1
  42ca70:	bl	404280 <open@plt>
  42ca74:	cbz	w0, 42ca84 <wcrtomb@plt+0x27f44>
  42ca78:	tbnz	w0, #31, 42ca80 <wcrtomb@plt+0x27f40>
  42ca7c:	bl	404520 <close@plt>
  42ca80:	mov	w19, wzr
  42ca84:	mov	w0, #0x1                   	// #1
  42ca88:	mov	w1, #0x1                   	// #1
  42ca8c:	bl	446494 <argp_parse@@Base+0xebe8>
  42ca90:	tbz	w0, #31, 42cac8 <wcrtomb@plt+0x27f88>
  42ca94:	bl	404a10 <__errno_location@plt>
  42ca98:	ldr	w8, [x0]
  42ca9c:	cmp	w8, #0x9
  42caa0:	b.ne	42cac4 <wcrtomb@plt+0x27f84>  // b.any
  42caa4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42caa8:	add	x0, x0, #0x57a
  42caac:	mov	w1, wzr
  42cab0:	bl	404280 <open@plt>
  42cab4:	cmp	w0, #0x1
  42cab8:	b.eq	42cac8 <wcrtomb@plt+0x27f88>  // b.none
  42cabc:	tbnz	w0, #31, 42cac4 <wcrtomb@plt+0x27f84>
  42cac0:	bl	404520 <close@plt>
  42cac4:	mov	w19, wzr
  42cac8:	mov	w0, #0x2                   	// #2
  42cacc:	mov	w1, #0x1                   	// #1
  42cad0:	bl	446494 <argp_parse@@Base+0xebe8>
  42cad4:	tbz	w0, #31, 42cb0c <wcrtomb@plt+0x27fcc>
  42cad8:	bl	404a10 <__errno_location@plt>
  42cadc:	ldr	w8, [x0]
  42cae0:	cmp	w8, #0x9
  42cae4:	b.ne	42cb08 <wcrtomb@plt+0x27fc8>  // b.any
  42cae8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42caec:	add	x0, x0, #0x57a
  42caf0:	mov	w1, wzr
  42caf4:	bl	404280 <open@plt>
  42caf8:	cmp	w0, #0x2
  42cafc:	b.eq	42cb0c <wcrtomb@plt+0x27fcc>  // b.none
  42cb00:	tbnz	w0, #31, 42cb08 <wcrtomb@plt+0x27fc8>
  42cb04:	bl	404520 <close@plt>
  42cb08:	mov	w19, wzr
  42cb0c:	mov	w0, w19
  42cb10:	ldr	x19, [sp, #16]
  42cb14:	ldp	x29, x30, [sp], #32
  42cb18:	ret
  42cb1c:	stp	x29, x30, [sp, #-80]!
  42cb20:	stp	x24, x23, [sp, #32]
  42cb24:	stp	x22, x21, [sp, #48]
  42cb28:	stp	x20, x19, [sp, #64]
  42cb2c:	ldr	x8, [x0]
  42cb30:	ldrb	w10, [x0, #32]
  42cb34:	mov	w21, w1
  42cb38:	sxtw	x23, w21
  42cb3c:	mov	x20, x2
  42cb40:	mov	x19, x0
  42cb44:	add	x9, x23, x8
  42cb48:	str	x25, [sp, #16]
  42cb4c:	mov	x29, sp
  42cb50:	tbnz	w10, #1, 42cb5c <wcrtomb@plt+0x2801c>
  42cb54:	mov	x10, xzr
  42cb58:	b	42cb60 <wcrtomb@plt+0x28020>
  42cb5c:	ldr	x10, [x19, #16]
  42cb60:	ldr	x0, [x19, #8]
  42cb64:	add	x9, x9, #0x1
  42cb68:	cbz	x0, 42cc0c <wcrtomb@plt+0x280cc>
  42cb6c:	ldr	x11, [x19, #24]
  42cb70:	add	x8, x10, x8
  42cb74:	add	x10, x8, x9
  42cb78:	cmp	x11, x10
  42cb7c:	b.cs	42cc34 <wcrtomb@plt+0x280f4>  // b.hs, b.nlast
  42cb80:	cmp	x9, #0x80
  42cb84:	mov	w10, #0x80                  	// #128
  42cb88:	csel	x9, x9, x10, hi  // hi = pmore
  42cb8c:	add	x22, x8, x9
  42cb90:	lsl	x1, x22, #3
  42cb94:	bl	404490 <realloc@plt>
  42cb98:	cbnz	x0, 42cc2c <wcrtomb@plt+0x280ec>
  42cb9c:	bl	404a10 <__errno_location@plt>
  42cba0:	mov	w8, #0xc                   	// #12
  42cba4:	str	w8, [x0]
  42cba8:	ldr	w8, [x19, #32]
  42cbac:	mov	w9, #0x2                   	// #2
  42cbb0:	str	w9, [x19, #192]
  42cbb4:	tbnz	w8, #7, 42cdb4 <wcrtomb@plt+0x28274>
  42cbb8:	tbnz	w8, #4, 42cdc8 <wcrtomb@plt+0x28288>
  42cbbc:	tbnz	w8, #3, 42cbc8 <wcrtomb@plt+0x28088>
  42cbc0:	mov	x0, x19
  42cbc4:	bl	42d484 <wcrtomb@plt+0x28944>
  42cbc8:	mov	x24, x19
  42cbcc:	ldr	x22, [x24, #208]!
  42cbd0:	cbnz	x22, 42cbf4 <wcrtomb@plt+0x280b4>
  42cbd4:	stp	xzr, xzr, [x24]
  42cbd8:	ldr	w0, [x19, #192]
  42cbdc:	cbnz	w0, 42cd18 <wcrtomb@plt+0x281d8>
  42cbe0:	b	42cc34 <wcrtomb@plt+0x280f4>
  42cbe4:	mov	x0, x22
  42cbe8:	bl	404700 <free@plt>
  42cbec:	mov	x22, x25
  42cbf0:	cbz	x25, 42cbd4 <wcrtomb@plt+0x28094>
  42cbf4:	ldrb	w8, [x22, #16]
  42cbf8:	ldr	x25, [x22, #8]
  42cbfc:	tbz	w8, #1, 42cbe4 <wcrtomb@plt+0x280a4>
  42cc00:	ldr	x0, [x22, #24]
  42cc04:	bl	404700 <free@plt>
  42cc08:	b	42cbe4 <wcrtomb@plt+0x280a4>
  42cc0c:	add	x8, x10, x9
  42cc10:	cmp	x8, #0x80
  42cc14:	mov	w8, #0x80                  	// #128
  42cc18:	csel	x22, x9, x8, hi  // hi = pmore
  42cc1c:	mov	w1, #0x8                   	// #8
  42cc20:	mov	x0, x22
  42cc24:	bl	404410 <calloc@plt>
  42cc28:	cbz	x0, 42cb9c <wcrtomb@plt+0x2805c>
  42cc2c:	str	x22, [x19, #24]
  42cc30:	str	x0, [x19, #8]
  42cc34:	cbz	w21, 42cc6c <wcrtomb@plt+0x2812c>
  42cc38:	mov	x21, xzr
  42cc3c:	ldr	x0, [x20, x21, lsl #3]
  42cc40:	bl	4044e0 <strdup@plt>
  42cc44:	cbz	x0, 42cc94 <wcrtomb@plt+0x28154>
  42cc48:	ldp	x10, x9, [x19, #8]
  42cc4c:	ldr	x8, [x19]
  42cc50:	add	x11, x9, x8
  42cc54:	add	x11, x21, x11
  42cc58:	add	x21, x21, #0x1
  42cc5c:	cmp	x21, x23
  42cc60:	str	x0, [x10, x11, lsl #3]
  42cc64:	b.cc	42cc3c <wcrtomb@plt+0x280fc>  // b.lo, b.ul, b.last
  42cc68:	b	42cc78 <wcrtomb@plt+0x28138>
  42cc6c:	ldr	x8, [x19]
  42cc70:	ldr	x9, [x19, #16]
  42cc74:	mov	x21, xzr
  42cc78:	ldr	x10, [x19, #8]
  42cc7c:	add	x8, x8, x21
  42cc80:	mov	w0, wzr
  42cc84:	str	x8, [x19]
  42cc88:	add	x8, x9, x8
  42cc8c:	str	xzr, [x10, x8, lsl #3]
  42cc90:	b	42cd18 <wcrtomb@plt+0x281d8>
  42cc94:	cbz	x21, 42ccd8 <wcrtomb@plt+0x28198>
  42cc98:	ldr	x8, [x19, #16]
  42cc9c:	ldr	x9, [x19]
  42cca0:	sub	x20, x21, #0x1
  42cca4:	ldr	x10, [x19, #8]
  42cca8:	add	x8, x8, x9
  42ccac:	add	x8, x20, x8
  42ccb0:	ldr	x0, [x10, x8, lsl #3]
  42ccb4:	bl	404700 <free@plt>
  42ccb8:	ldp	x10, x8, [x19, #8]
  42ccbc:	ldr	x9, [x19]
  42ccc0:	add	x11, x8, x9
  42ccc4:	add	x11, x20, x11
  42ccc8:	sub	x20, x20, #0x1
  42cccc:	cmn	x20, #0x1
  42ccd0:	str	xzr, [x10, x11, lsl #3]
  42ccd4:	b.ne	42cca4 <wcrtomb@plt+0x28164>  // b.any
  42ccd8:	bl	404a10 <__errno_location@plt>
  42ccdc:	mov	w8, #0xc                   	// #12
  42cce0:	str	w8, [x0]
  42cce4:	ldr	w8, [x19, #32]
  42cce8:	mov	w9, #0x2                   	// #2
  42ccec:	str	w9, [x19, #192]
  42ccf0:	tbnz	w8, #7, 42cd58 <wcrtomb@plt+0x28218>
  42ccf4:	tbnz	w8, #4, 42cd6c <wcrtomb@plt+0x2822c>
  42ccf8:	tbnz	w8, #3, 42cd04 <wcrtomb@plt+0x281c4>
  42ccfc:	mov	x0, x19
  42cd00:	bl	42d484 <wcrtomb@plt+0x28944>
  42cd04:	mov	x21, x19
  42cd08:	ldr	x20, [x21, #208]!
  42cd0c:	cbnz	x20, 42cd40 <wcrtomb@plt+0x28200>
  42cd10:	stp	xzr, xzr, [x21]
  42cd14:	ldr	w0, [x19, #192]
  42cd18:	ldp	x20, x19, [sp, #64]
  42cd1c:	ldp	x22, x21, [sp, #48]
  42cd20:	ldp	x24, x23, [sp, #32]
  42cd24:	ldr	x25, [sp, #16]
  42cd28:	ldp	x29, x30, [sp], #80
  42cd2c:	ret
  42cd30:	mov	x0, x20
  42cd34:	bl	404700 <free@plt>
  42cd38:	mov	x20, x22
  42cd3c:	cbz	x22, 42cd10 <wcrtomb@plt+0x281d0>
  42cd40:	ldrb	w8, [x20, #16]
  42cd44:	ldr	x22, [x20, #8]
  42cd48:	tbz	w8, #1, 42cd30 <wcrtomb@plt+0x281f0>
  42cd4c:	ldr	x0, [x20, #24]
  42cd50:	bl	404700 <free@plt>
  42cd54:	b	42cd30 <wcrtomb@plt+0x281f0>
  42cd58:	ldr	x8, [x19, #88]
  42cd5c:	mov	x0, x19
  42cd60:	blr	x8
  42cd64:	ldr	w8, [x19, #32]
  42cd68:	tbz	w8, #4, 42ccf8 <wcrtomb@plt+0x281b8>
  42cd6c:	ldr	w8, [x19, #192]
  42cd70:	ldr	x20, [x19, #96]
  42cd74:	cmp	w8, #0x9
  42cd78:	b.eq	42ce10 <wcrtomb@plt+0x282d0>  // b.none
  42cd7c:	cmp	w8, #0x1
  42cd80:	b.ne	42ce18 <wcrtomb@plt+0x282d8>  // b.any
  42cd84:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42cd88:	add	x1, x1, #0x751
  42cd8c:	mov	w2, #0x5                   	// #5
  42cd90:	mov	x0, xzr
  42cd94:	bl	404900 <dcgettext@plt>
  42cd98:	ldr	x8, [x19, #168]
  42cd9c:	ldr	x2, [x19, #184]
  42cda0:	ldrb	w1, [x8, x2]
  42cda4:	blr	x20
  42cda8:	ldr	w8, [x19, #32]
  42cdac:	tbz	w8, #3, 42ccfc <wcrtomb@plt+0x281bc>
  42cdb0:	b	42cd04 <wcrtomb@plt+0x281c4>
  42cdb4:	ldr	x8, [x19, #88]
  42cdb8:	mov	x0, x19
  42cdbc:	blr	x8
  42cdc0:	ldr	w8, [x19, #32]
  42cdc4:	tbz	w8, #4, 42cbbc <wcrtomb@plt+0x2807c>
  42cdc8:	ldr	w8, [x19, #192]
  42cdcc:	ldr	x22, [x19, #96]
  42cdd0:	cmp	w8, #0x9
  42cdd4:	b.eq	42ce40 <wcrtomb@plt+0x28300>  // b.none
  42cdd8:	cmp	w8, #0x1
  42cddc:	b.ne	42ce48 <wcrtomb@plt+0x28308>  // b.any
  42cde0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42cde4:	add	x1, x1, #0x751
  42cde8:	mov	w2, #0x5                   	// #5
  42cdec:	mov	x0, xzr
  42cdf0:	bl	404900 <dcgettext@plt>
  42cdf4:	ldr	x8, [x19, #168]
  42cdf8:	ldr	x2, [x19, #184]
  42cdfc:	ldrb	w1, [x8, x2]
  42ce00:	blr	x22
  42ce04:	ldr	w8, [x19, #32]
  42ce08:	tbz	w8, #3, 42cbc0 <wcrtomb@plt+0x28080>
  42ce0c:	b	42cbc8 <wcrtomb@plt+0x28088>
  42ce10:	add	x8, x19, #0xc8
  42ce14:	b	42ce38 <wcrtomb@plt+0x282f8>
  42ce18:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42ce1c:	ldr	w9, [x9, #4008]
  42ce20:	sxtw	x8, w8
  42ce24:	cmp	w8, w9
  42ce28:	b.ge	42ce70 <wcrtomb@plt+0x28330>  // b.tcont
  42ce2c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42ce30:	add	x9, x9, #0xf60
  42ce34:	add	x8, x9, x8, lsl #3
  42ce38:	ldr	x1, [x8]
  42ce3c:	b	42ce78 <wcrtomb@plt+0x28338>
  42ce40:	add	x8, x19, #0xc8
  42ce44:	b	42ce68 <wcrtomb@plt+0x28328>
  42ce48:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42ce4c:	ldr	w9, [x9, #4008]
  42ce50:	sxtw	x8, w8
  42ce54:	cmp	w8, w9
  42ce58:	b.ge	42ce90 <wcrtomb@plt+0x28350>  // b.tcont
  42ce5c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42ce60:	add	x9, x9, #0xf60
  42ce64:	add	x8, x9, x8, lsl #3
  42ce68:	ldr	x1, [x8]
  42ce6c:	b	42ce98 <wcrtomb@plt+0x28358>
  42ce70:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ce74:	add	x1, x1, #0x743
  42ce78:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ce7c:	add	x0, x0, #0x7a4
  42ce80:	blr	x20
  42ce84:	ldr	w8, [x19, #32]
  42ce88:	tbz	w8, #3, 42ccfc <wcrtomb@plt+0x281bc>
  42ce8c:	b	42cd04 <wcrtomb@plt+0x281c4>
  42ce90:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ce94:	add	x1, x1, #0x743
  42ce98:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ce9c:	add	x0, x0, #0x7a4
  42cea0:	blr	x22
  42cea4:	ldr	w8, [x19, #32]
  42cea8:	tbz	w8, #3, 42cbc0 <wcrtomb@plt+0x28080>
  42ceac:	b	42cbc8 <wcrtomb@plt+0x28088>
  42ceb0:	str	wzr, [x2]
  42ceb4:	ldrb	w15, [x0]
  42ceb8:	cbz	w15, 42cfbc <wcrtomb@plt+0x2847c>
  42cebc:	cmp	w1, #0x0
  42cec0:	mov	x10, #0x1                   	// #1
  42cec4:	adrp	x14, 479000 <_obstack_memory_used@@Base+0x324b0>
  42cec8:	mov	x8, xzr
  42cecc:	mov	w9, #0x1                   	// #1
  42ced0:	movk	x10, #0x5, lsl #32
  42ced4:	mov	w11, #0x3                   	// #3
  42ced8:	adrp	x12, 479000 <_obstack_memory_used@@Base+0x324b0>
  42cedc:	cset	w13, ne  // ne = any
  42cee0:	add	x14, x14, #0xf4a
  42cee4:	b	42cef8 <wcrtomb@plt+0x283b8>
  42cee8:	mov	w16, #0x4                   	// #4
  42ceec:	ldrb	w15, [x0, #1]!
  42cef0:	add	x8, x8, x16
  42cef4:	cbz	w15, 42cfb4 <wcrtomb@plt+0x28474>
  42cef8:	and	w16, w15, #0xff
  42cefc:	cmp	w16, #0x3f
  42cf00:	b.hi	42cf18 <wcrtomb@plt+0x283d8>  // b.pmore
  42cf04:	lsl	x16, x9, x15
  42cf08:	and	x16, x16, x10
  42cf0c:	cbz	x16, 42cf18 <wcrtomb@plt+0x283d8>
  42cf10:	str	w9, [x2]
  42cf14:	ldrb	w15, [x0]
  42cf18:	and	w16, w15, #0xff
  42cf1c:	cmp	w16, #0x21
  42cf20:	b.gt	42cf3c <wcrtomb@plt+0x283fc>
  42cf24:	cmp	w16, #0x9
  42cf28:	b.eq	42cf54 <wcrtomb@plt+0x28414>  // b.none
  42cf2c:	cmp	w16, #0x20
  42cf30:	b.ne	42cf60 <wcrtomb@plt+0x28420>  // b.any
  42cf34:	mov	w16, #0x1                   	// #1
  42cf38:	b	42ceec <wcrtomb@plt+0x283ac>
  42cf3c:	cmp	w16, #0x5c
  42cf40:	b.eq	42cf54 <wcrtomb@plt+0x28414>  // b.none
  42cf44:	cmp	w16, #0x22
  42cf48:	b.ne	42cf60 <wcrtomb@plt+0x28420>  // b.any
  42cf4c:	mov	w16, #0x2                   	// #2
  42cf50:	b	42ceec <wcrtomb@plt+0x283ac>
  42cf54:	cbz	w1, 42cf8c <wcrtomb@plt+0x2844c>
  42cf58:	mov	w16, #0x3                   	// #3
  42cf5c:	b	42ceec <wcrtomb@plt+0x283ac>
  42cf60:	and	w16, w15, #0xff
  42cf64:	sxtb	w17, w15
  42cf68:	cmp	w16, #0x1f
  42cf6c:	cset	w16, hi  // hi = pmore
  42cf70:	cmp	w17, #0x0
  42cf74:	cset	w17, ge  // ge = tcont
  42cf78:	and	w18, w16, w17
  42cf7c:	tst	w16, w17
  42cf80:	orr	w18, w18, w13
  42cf84:	csinc	x16, x11, xzr, eq  // eq = none
  42cf88:	tbnz	w18, #0, 42ceec <wcrtomb@plt+0x283ac>
  42cf8c:	ldrb	w16, [x12, #3912]
  42cf90:	cbz	w16, 42cee8 <wcrtomb@plt+0x283a8>
  42cf94:	mov	x16, x14
  42cf98:	ldurb	w17, [x16, #-1]
  42cf9c:	cbz	w17, 42cee8 <wcrtomb@plt+0x283a8>
  42cfa0:	cmp	w17, w15, uxtb
  42cfa4:	b.eq	42cf4c <wcrtomb@plt+0x2840c>  // b.none
  42cfa8:	ldrb	w17, [x16], #2
  42cfac:	cbnz	w17, 42cf98 <wcrtomb@plt+0x28458>
  42cfb0:	b	42cee8 <wcrtomb@plt+0x283a8>
  42cfb4:	mov	x0, x8
  42cfb8:	ret
  42cfbc:	mov	x0, xzr
  42cfc0:	ret
  42cfc4:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42cfc8:	ldrb	w8, [x8, #3912]
  42cfcc:	cbz	w8, 42cff0 <wcrtomb@plt+0x284b0>
  42cfd0:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42cfd4:	add	x9, x9, #0xf4a
  42cfd8:	ldurb	w10, [x9, #-1]
  42cfdc:	cbz	w10, 42cff0 <wcrtomb@plt+0x284b0>
  42cfe0:	cmp	w10, w0
  42cfe4:	b.eq	42cff8 <wcrtomb@plt+0x284b8>  // b.none
  42cfe8:	ldrb	w8, [x9], #2
  42cfec:	cbnz	w8, 42cfd8 <wcrtomb@plt+0x28498>
  42cff0:	mov	w0, wzr
  42cff4:	ret
  42cff8:	and	w0, w8, #0xff
  42cffc:	ret
  42d000:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d004:	ldrb	w10, [x8, #3912]
  42d008:	cbz	w10, 42d02c <wcrtomb@plt+0x284ec>
  42d00c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d010:	add	x9, x9, #0xf4a
  42d014:	ldurb	w8, [x9, #-1]
  42d018:	cbz	w8, 42d034 <wcrtomb@plt+0x284f4>
  42d01c:	cmp	w0, w10, uxtb
  42d020:	b.eq	42d034 <wcrtomb@plt+0x284f4>  // b.none
  42d024:	ldrb	w10, [x9], #2
  42d028:	cbnz	w10, 42d014 <wcrtomb@plt+0x284d4>
  42d02c:	mov	w0, wzr
  42d030:	ret
  42d034:	mov	w0, w8
  42d038:	ret
  42d03c:	sub	sp, sp, #0x60
  42d040:	stp	x26, x25, [sp, #32]
  42d044:	stp	x24, x23, [sp, #48]
  42d048:	stp	x22, x21, [sp, #64]
  42d04c:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42d050:	adrp	x26, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d054:	adrp	x23, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42d058:	stp	x20, x19, [sp, #80]
  42d05c:	mov	w19, w2
  42d060:	mov	x20, x1
  42d064:	mov	x21, x0
  42d068:	adrp	x24, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d06c:	mov	w25, #0x5c                  	// #92
  42d070:	add	x22, x22, #0x6a7
  42d074:	add	x26, x26, #0xf4a
  42d078:	add	x23, x23, #0x6a0
  42d07c:	stp	x29, x30, [sp, #16]
  42d080:	add	x29, sp, #0x10
  42d084:	b	42d0c4 <wcrtomb@plt+0x28584>
  42d088:	cmp	w5, #0x9
  42d08c:	b.ne	42d158 <wcrtomb@plt+0x28618>  // b.any
  42d090:	cbz	w19, 42d0fc <wcrtomb@plt+0x285bc>
  42d094:	sub	x0, x29, #0x4
  42d098:	mov	w1, #0x4                   	// #4
  42d09c:	mov	w2, #0x1                   	// #1
  42d0a0:	mov	w3, #0x4                   	// #4
  42d0a4:	mov	x4, x23
  42d0a8:	bl	4041d0 <__snprintf_chk@plt>
  42d0ac:	ldurh	w8, [x29, #-4]
  42d0b0:	ldurb	w9, [x29, #-2]
  42d0b4:	add	x20, x20, #0x1
  42d0b8:	strh	w8, [x21]
  42d0bc:	strb	w9, [x21, #2]
  42d0c0:	add	x21, x21, #0x3
  42d0c4:	ldrb	w5, [x20]
  42d0c8:	cmp	w5, #0x21
  42d0cc:	b.le	42d088 <wcrtomb@plt+0x28548>
  42d0d0:	cmp	w5, #0x5c
  42d0d4:	b.eq	42d090 <wcrtomb@plt+0x28550>  // b.none
  42d0d8:	cmp	w5, #0x22
  42d0dc:	b.ne	42d15c <wcrtomb@plt+0x2861c>  // b.any
  42d0e0:	strb	w25, [x21]
  42d0e4:	ldrb	w8, [x20]
  42d0e8:	add	x9, x21, #0x2
  42d0ec:	strb	w8, [x21, #1]
  42d0f0:	mov	x21, x9
  42d0f4:	add	x20, x20, #0x1
  42d0f8:	b	42d0c4 <wcrtomb@plt+0x28584>
  42d0fc:	ldrb	w8, [x24, #3912]
  42d100:	cbz	w8, 42d120 <wcrtomb@plt+0x285e0>
  42d104:	mov	x9, x26
  42d108:	ldurb	w10, [x9, #-1]
  42d10c:	cbz	w10, 42d120 <wcrtomb@plt+0x285e0>
  42d110:	cmp	w10, w5
  42d114:	b.eq	42d178 <wcrtomb@plt+0x28638>  // b.none
  42d118:	ldrb	w8, [x9], #2
  42d11c:	cbnz	w8, 42d108 <wcrtomb@plt+0x285c8>
  42d120:	strb	w25, [x21]
  42d124:	ldrb	w5, [x20], #1
  42d128:	sub	x0, x29, #0x4
  42d12c:	mov	w1, #0x4                   	// #4
  42d130:	mov	w2, #0x1                   	// #1
  42d134:	mov	w3, #0x4                   	// #4
  42d138:	mov	x4, x22
  42d13c:	bl	4041d0 <__snprintf_chk@plt>
  42d140:	ldurh	w8, [x29, #-4]
  42d144:	ldurb	w9, [x29, #-2]
  42d148:	sturh	w8, [x21, #1]
  42d14c:	strb	w9, [x21, #3]
  42d150:	add	x21, x21, #0x4
  42d154:	b	42d0c4 <wcrtomb@plt+0x28584>
  42d158:	cbz	w5, 42d180 <wcrtomb@plt+0x28640>
  42d15c:	cmp	w5, #0x20
  42d160:	b.cc	42d090 <wcrtomb@plt+0x28550>  // b.lo, b.ul, b.last
  42d164:	sxtb	w8, w5
  42d168:	tbnz	w8, #31, 42d090 <wcrtomb@plt+0x28550>
  42d16c:	strb	w5, [x21], #1
  42d170:	add	x20, x20, #0x1
  42d174:	b	42d0c4 <wcrtomb@plt+0x28584>
  42d178:	strb	w25, [x21]
  42d17c:	b	42d0e8 <wcrtomb@plt+0x285a8>
  42d180:	ldp	x20, x19, [sp, #80]
  42d184:	ldp	x22, x21, [sp, #64]
  42d188:	ldp	x24, x23, [sp, #48]
  42d18c:	ldp	x26, x25, [sp, #32]
  42d190:	ldp	x29, x30, [sp, #16]
  42d194:	add	sp, sp, #0x60
  42d198:	ret
  42d19c:	stp	x29, x30, [sp, #-48]!
  42d1a0:	stp	x20, x19, [sp, #32]
  42d1a4:	mov	x19, x2
  42d1a8:	stp	x22, x21, [sp, #16]
  42d1ac:	mov	x29, sp
  42d1b0:	cbz	x0, 42d1e8 <wcrtomb@plt+0x286a8>
  42d1b4:	mov	x2, x1
  42d1b8:	mov	x1, x0
  42d1bc:	mov	x0, x19
  42d1c0:	bl	42dc70 <wcrtomb@plt+0x29130>
  42d1c4:	cbnz	w0, 42d230 <wcrtomb@plt+0x286f0>
  42d1c8:	mov	x20, xzr
  42d1cc:	add	x22, x19, #0xe0
  42d1d0:	mov	x0, x19
  42d1d4:	mov	x1, x20
  42d1d8:	str	wzr, [x22]
  42d1dc:	bl	42df10 <wcrtomb@plt+0x293d0>
  42d1e0:	cbnz	w0, 42d230 <wcrtomb@plt+0x286f0>
  42d1e4:	b	42d248 <wcrtomb@plt+0x28708>
  42d1e8:	tbnz	w3, #29, 42d240 <wcrtomb@plt+0x28700>
  42d1ec:	ldrb	w8, [x19, #32]
  42d1f0:	mov	w0, #0x3                   	// #3
  42d1f4:	str	w0, [x19, #192]
  42d1f8:	tbz	w8, #4, 42d230 <wcrtomb@plt+0x286f0>
  42d1fc:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d200:	ldr	w8, [x8, #4008]
  42d204:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d208:	ldr	x9, [x9, #3960]
  42d20c:	ldr	x10, [x19, #96]
  42d210:	adrp	x11, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42d214:	add	x11, x11, #0x743
  42d218:	cmp	w8, #0x3
  42d21c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42d220:	csel	x1, x9, x11, gt
  42d224:	add	x0, x0, #0x7a4
  42d228:	blr	x10
  42d22c:	mov	w0, #0x3                   	// #3
  42d230:	ldp	x20, x19, [sp, #32]
  42d234:	ldp	x22, x21, [sp, #16]
  42d238:	ldp	x29, x30, [sp], #48
  42d23c:	ret
  42d240:	ldr	x8, [x19, #208]
  42d244:	cbz	x8, 42d25c <wcrtomb@plt+0x2871c>
  42d248:	mov	x0, x19
  42d24c:	ldp	x20, x19, [sp, #32]
  42d250:	ldp	x22, x21, [sp, #16]
  42d254:	ldp	x29, x30, [sp], #48
  42d258:	b	42d6cc <wcrtomb@plt+0x28b8c>
  42d25c:	ldp	x9, x20, [x19, #176]
  42d260:	ldr	w8, [x19, #32]
  42d264:	cmp	x20, x9
  42d268:	b.ne	42d2b0 <wcrtomb@plt+0x28770>  // b.any
  42d26c:	mov	w0, #0x6                   	// #6
  42d270:	str	w0, [x19, #192]
  42d274:	tbz	w8, #4, 42d230 <wcrtomb@plt+0x286f0>
  42d278:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d27c:	ldr	w8, [x8, #4008]
  42d280:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d284:	ldr	x9, [x9, #3984]
  42d288:	ldr	x10, [x19, #96]
  42d28c:	adrp	x11, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42d290:	add	x11, x11, #0x743
  42d294:	cmp	w8, #0x6
  42d298:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42d29c:	csel	x1, x9, x11, gt
  42d2a0:	add	x0, x0, #0x7a4
  42d2a4:	blr	x10
  42d2a8:	mov	w0, #0x6                   	// #6
  42d2ac:	b	42d230 <wcrtomb@plt+0x286f0>
  42d2b0:	mov	w9, #0xffffffff            	// #-1
  42d2b4:	eor	w9, w9, w8, lsr #12
  42d2b8:	orr	w10, w8, #0x8
  42d2bc:	and	x21, x9, #0x1
  42d2c0:	str	w10, [x19, #32]
  42d2c4:	tbnz	w8, #0, 42d314 <wcrtomb@plt+0x287d4>
  42d2c8:	ldr	x8, [x19]
  42d2cc:	cbz	x8, 42d310 <wcrtomb@plt+0x287d0>
  42d2d0:	ldr	x9, [x19, #16]
  42d2d4:	mov	x22, xzr
  42d2d8:	b	42d2e8 <wcrtomb@plt+0x287a8>
  42d2dc:	add	x22, x22, #0x1
  42d2e0:	cmp	x22, x8
  42d2e4:	b.cs	42d310 <wcrtomb@plt+0x287d0>  // b.hs, b.nlast
  42d2e8:	ldr	x10, [x19, #8]
  42d2ec:	add	x11, x9, x22
  42d2f0:	ldr	x0, [x10, x11, lsl #3]
  42d2f4:	cbz	x0, 42d2dc <wcrtomb@plt+0x2879c>
  42d2f8:	bl	404700 <free@plt>
  42d2fc:	ldp	x8, x9, [x19, #8]
  42d300:	add	x10, x22, x9
  42d304:	str	xzr, [x8, x10, lsl #3]
  42d308:	ldr	x8, [x19]
  42d30c:	b	42d2dc <wcrtomb@plt+0x2879c>
  42d310:	str	xzr, [x19]
  42d314:	mov	x22, x19
  42d318:	ldr	w8, [x22, #192]!
  42d31c:	add	x20, x20, x21
  42d320:	cmp	w8, #0x9
  42d324:	b.ne	42d330 <wcrtomb@plt+0x287f0>  // b.any
  42d328:	ldr	x0, [x19, #200]
  42d32c:	bl	404700 <free@plt>
  42d330:	str	xzr, [x19, #200]
  42d334:	b	42d1d0 <wcrtomb@plt+0x28690>
  42d338:	stp	x29, x30, [sp, #-48]!
  42d33c:	str	x21, [sp, #16]
  42d340:	stp	x20, x19, [sp, #32]
  42d344:	mov	w19, w2
  42d348:	mov	x20, x1
  42d34c:	mov	x21, x0
  42d350:	mov	x29, sp
  42d354:	cbz	x0, 42d368 <wcrtomb@plt+0x28828>
  42d358:	mov	x0, x21
  42d35c:	bl	403f40 <strlen@plt>
  42d360:	mov	x1, x0
  42d364:	b	42d36c <wcrtomb@plt+0x2882c>
  42d368:	mov	x1, xzr
  42d36c:	mov	x0, x21
  42d370:	mov	x2, x20
  42d374:	mov	w3, w19
  42d378:	ldp	x20, x19, [sp, #32]
  42d37c:	ldr	x21, [sp, #16]
  42d380:	ldp	x29, x30, [sp], #48
  42d384:	b	42d19c <wcrtomb@plt+0x2865c>
  42d388:	stp	x29, x30, [sp, #-32]!
  42d38c:	stp	x20, x19, [sp, #16]
  42d390:	ldr	x8, [x0]
  42d394:	mov	x19, x0
  42d398:	mov	x29, sp
  42d39c:	cbz	x8, 42d3e0 <wcrtomb@plt+0x288a0>
  42d3a0:	ldr	x9, [x19, #16]
  42d3a4:	mov	x20, xzr
  42d3a8:	b	42d3b8 <wcrtomb@plt+0x28878>
  42d3ac:	add	x20, x20, #0x1
  42d3b0:	cmp	x20, x8
  42d3b4:	b.cs	42d3e0 <wcrtomb@plt+0x288a0>  // b.hs, b.nlast
  42d3b8:	ldr	x10, [x19, #8]
  42d3bc:	add	x11, x9, x20
  42d3c0:	ldr	x0, [x10, x11, lsl #3]
  42d3c4:	cbz	x0, 42d3ac <wcrtomb@plt+0x2886c>
  42d3c8:	bl	404700 <free@plt>
  42d3cc:	ldp	x8, x9, [x19, #8]
  42d3d0:	add	x10, x20, x9
  42d3d4:	str	xzr, [x8, x10, lsl #3]
  42d3d8:	ldr	x8, [x19]
  42d3dc:	b	42d3ac <wcrtomb@plt+0x2886c>
  42d3e0:	str	xzr, [x19]
  42d3e4:	ldp	x20, x19, [sp, #16]
  42d3e8:	ldp	x29, x30, [sp], #32
  42d3ec:	ret
  42d3f0:	stp	x29, x30, [sp, #-32]!
  42d3f4:	stp	x20, x19, [sp, #16]
  42d3f8:	ldrb	w8, [x0, #32]
  42d3fc:	mov	x29, sp
  42d400:	tbnz	w8, #2, 42d440 <wcrtomb@plt+0x28900>
  42d404:	mov	x19, x0
  42d408:	ldr	x0, [x19, #120]!
  42d40c:	cbz	x0, 42d440 <wcrtomb@plt+0x28900>
  42d410:	ldr	x8, [x0]
  42d414:	cbz	x8, 42d434 <wcrtomb@plt+0x288f4>
  42d418:	mov	w20, #0x8                   	// #8
  42d41c:	mov	x0, x8
  42d420:	bl	404700 <free@plt>
  42d424:	ldr	x0, [x19]
  42d428:	ldr	x8, [x0, x20]
  42d42c:	add	x20, x20, #0x8
  42d430:	cbnz	x8, 42d41c <wcrtomb@plt+0x288dc>
  42d434:	bl	404700 <free@plt>
  42d438:	stp	xzr, xzr, [x19]
  42d43c:	str	xzr, [x19, #16]
  42d440:	ldp	x20, x19, [sp, #16]
  42d444:	ldp	x29, x30, [sp], #32
  42d448:	ret
  42d44c:	stp	x29, x30, [sp, #-32]!
  42d450:	ldr	w8, [x0, #192]
  42d454:	str	x19, [sp, #16]
  42d458:	mov	x19, x0
  42d45c:	mov	x29, sp
  42d460:	cmp	w8, #0x9
  42d464:	b.ne	42d470 <wcrtomb@plt+0x28930>  // b.any
  42d468:	ldr	x0, [x19, #200]
  42d46c:	bl	404700 <free@plt>
  42d470:	str	xzr, [x19, #200]
  42d474:	str	wzr, [x19, #192]
  42d478:	ldr	x19, [sp, #16]
  42d47c:	ldp	x29, x30, [sp], #32
  42d480:	ret
  42d484:	stp	x29, x30, [sp, #-48]!
  42d488:	stp	x22, x21, [sp, #16]
  42d48c:	stp	x20, x19, [sp, #32]
  42d490:	mov	x21, x0
  42d494:	ldr	x20, [x21, #208]!
  42d498:	mov	x19, x0
  42d49c:	mov	x29, sp
  42d4a0:	cbnz	x20, 42d4cc <wcrtomb@plt+0x2898c>
  42d4a4:	stp	xzr, xzr, [x21]
  42d4a8:	ldr	x8, [x19]
  42d4ac:	cbz	x8, 42d518 <wcrtomb@plt+0x289d8>
  42d4b0:	ldr	x9, [x19, #16]
  42d4b4:	mov	x20, xzr
  42d4b8:	b	42d4f0 <wcrtomb@plt+0x289b0>
  42d4bc:	mov	x0, x20
  42d4c0:	bl	404700 <free@plt>
  42d4c4:	mov	x20, x22
  42d4c8:	cbz	x22, 42d4a4 <wcrtomb@plt+0x28964>
  42d4cc:	ldrb	w8, [x20, #16]
  42d4d0:	ldr	x22, [x20, #8]
  42d4d4:	tbz	w8, #1, 42d4bc <wcrtomb@plt+0x2897c>
  42d4d8:	ldr	x0, [x20, #24]
  42d4dc:	bl	404700 <free@plt>
  42d4e0:	b	42d4bc <wcrtomb@plt+0x2897c>
  42d4e4:	add	x20, x20, #0x1
  42d4e8:	cmp	x20, x8
  42d4ec:	b.cs	42d518 <wcrtomb@plt+0x289d8>  // b.hs, b.nlast
  42d4f0:	ldr	x10, [x19, #8]
  42d4f4:	add	x11, x9, x20
  42d4f8:	ldr	x0, [x10, x11, lsl #3]
  42d4fc:	cbz	x0, 42d4e4 <wcrtomb@plt+0x289a4>
  42d500:	bl	404700 <free@plt>
  42d504:	ldp	x8, x9, [x19, #8]
  42d508:	add	x10, x20, x9
  42d50c:	str	xzr, [x8, x10, lsl #3]
  42d510:	ldr	x8, [x19]
  42d514:	b	42d4e4 <wcrtomb@plt+0x289a4>
  42d518:	ldr	x0, [x19, #8]
  42d51c:	str	xzr, [x19]
  42d520:	bl	404700 <free@plt>
  42d524:	ldrb	w8, [x19, #32]
  42d528:	str	xzr, [x19, #8]
  42d52c:	tbnz	w8, #2, 42d568 <wcrtomb@plt+0x28a28>
  42d530:	ldr	x0, [x19, #120]!
  42d534:	cbz	x0, 42d568 <wcrtomb@plt+0x28a28>
  42d538:	ldr	x8, [x0]
  42d53c:	cbz	x8, 42d55c <wcrtomb@plt+0x28a1c>
  42d540:	mov	w20, #0x8                   	// #8
  42d544:	mov	x0, x8
  42d548:	bl	404700 <free@plt>
  42d54c:	ldr	x0, [x19]
  42d550:	ldr	x8, [x0, x20]
  42d554:	add	x20, x20, #0x8
  42d558:	cbnz	x8, 42d544 <wcrtomb@plt+0x28a04>
  42d55c:	bl	404700 <free@plt>
  42d560:	stp	xzr, xzr, [x19]
  42d564:	str	xzr, [x19, #16]
  42d568:	ldp	x20, x19, [sp, #32]
  42d56c:	ldp	x22, x21, [sp, #16]
  42d570:	ldp	x29, x30, [sp], #48
  42d574:	ret
  42d578:	stp	x29, x30, [sp, #-48]!
  42d57c:	str	x21, [sp, #16]
  42d580:	stp	x20, x19, [sp, #32]
  42d584:	mov	x19, x0
  42d588:	ldp	x8, x0, [x0]
  42d58c:	mov	x20, x1
  42d590:	mov	x29, sp
  42d594:	mov	x21, x2
  42d598:	lsl	x8, x8, #3
  42d59c:	add	x1, x8, #0x8
  42d5a0:	bl	404490 <realloc@plt>
  42d5a4:	cbz	x0, 42d5c8 <wcrtomb@plt+0x28a88>
  42d5a8:	mov	x8, x0
  42d5ac:	str	x8, [x21]
  42d5b0:	ldr	x8, [x19]
  42d5b4:	mov	w0, wzr
  42d5b8:	str	x8, [x20]
  42d5bc:	str	xzr, [x19, #24]
  42d5c0:	stp	xzr, xzr, [x19]
  42d5c4:	b	42d5cc <wcrtomb@plt+0x28a8c>
  42d5c8:	mov	w0, #0xffffffff            	// #-1
  42d5cc:	ldp	x20, x19, [sp, #32]
  42d5d0:	ldr	x21, [sp, #16]
  42d5d4:	ldp	x29, x30, [sp], #48
  42d5d8:	ret
  42d5dc:	ldrsw	x8, [x0, #192]
  42d5e0:	cmp	w8, #0x9
  42d5e4:	b.ne	42d5f4 <wcrtomb@plt+0x28ab4>  // b.any
  42d5e8:	add	x8, x0, #0xc8
  42d5ec:	ldr	x0, [x8]
  42d5f0:	ret
  42d5f4:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d5f8:	ldr	w9, [x9, #4008]
  42d5fc:	cmp	w8, w9
  42d600:	b.ge	42d618 <wcrtomb@plt+0x28ad8>  // b.tcont
  42d604:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d608:	add	x9, x9, #0xf60
  42d60c:	add	x8, x9, x8, lsl #3
  42d610:	ldr	x0, [x8]
  42d614:	ret
  42d618:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42d61c:	add	x0, x0, #0x743
  42d620:	ret
  42d624:	stp	x29, x30, [sp, #-32]!
  42d628:	ldr	w8, [x0, #192]
  42d62c:	ldr	x2, [x0, #96]
  42d630:	str	x19, [sp, #16]
  42d634:	mov	x19, x0
  42d638:	cmp	w8, #0x9
  42d63c:	mov	x29, sp
  42d640:	b.eq	42d680 <wcrtomb@plt+0x28b40>  // b.none
  42d644:	cmp	w8, #0x1
  42d648:	b.ne	42d688 <wcrtomb@plt+0x28b48>  // b.any
  42d64c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42d650:	add	x1, x1, #0x751
  42d654:	str	x2, [x29, #24]
  42d658:	mov	w2, #0x5                   	// #5
  42d65c:	mov	x0, xzr
  42d660:	bl	404900 <dcgettext@plt>
  42d664:	ldr	x8, [x19, #168]
  42d668:	ldr	x2, [x19, #184]
  42d66c:	ldr	x3, [x29, #24]
  42d670:	ldr	x19, [sp, #16]
  42d674:	ldrb	w1, [x8, x2]
  42d678:	ldp	x29, x30, [sp], #32
  42d67c:	br	x3
  42d680:	add	x8, x19, #0xc8
  42d684:	b	42d6a8 <wcrtomb@plt+0x28b68>
  42d688:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d68c:	ldr	w9, [x9, #4008]
  42d690:	sxtw	x8, w8
  42d694:	cmp	w8, w9
  42d698:	b.ge	42d6b0 <wcrtomb@plt+0x28b70>  // b.tcont
  42d69c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d6a0:	add	x9, x9, #0xf60
  42d6a4:	add	x8, x9, x8, lsl #3
  42d6a8:	ldr	x1, [x8]
  42d6ac:	b	42d6b8 <wcrtomb@plt+0x28b78>
  42d6b0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42d6b4:	add	x1, x1, #0x743
  42d6b8:	ldr	x19, [sp, #16]
  42d6bc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42d6c0:	add	x0, x0, #0x7a4
  42d6c4:	ldp	x29, x30, [sp], #32
  42d6c8:	br	x2
  42d6cc:	stp	x29, x30, [sp, #-80]!
  42d6d0:	stp	x22, x21, [sp, #48]
  42d6d4:	stp	x20, x19, [sp, #64]
  42d6d8:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42d6dc:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42d6e0:	stp	x24, x23, [sp, #32]
  42d6e4:	mov	x19, x0
  42d6e8:	add	x23, x0, #0xd0
  42d6ec:	add	x24, x0, #0xd8
  42d6f0:	mov	w21, #0xffffffff            	// #-1
  42d6f4:	add	x20, x20, #0x776
  42d6f8:	add	x22, x22, #0x66
  42d6fc:	str	x25, [sp, #16]
  42d700:	mov	x29, sp
  42d704:	b	42d728 <wcrtomb@plt+0x28be8>
  42d708:	ldr	w8, [x19, #36]
  42d70c:	eor	w8, w21, w8, lsr #7
  42d710:	and	x8, x8, #0x1
  42d714:	ldr	x9, [x19, #184]
  42d718:	mov	x0, x19
  42d71c:	add	x1, x9, x8
  42d720:	bl	42df10 <wcrtomb@plt+0x293d0>
  42d724:	cbnz	w0, 42dc30 <wcrtomb@plt+0x290f0>
  42d728:	ldr	x8, [x23]
  42d72c:	cbz	x8, 42d86c <wcrtomb@plt+0x28d2c>
  42d730:	mov	x25, xzr
  42d734:	mov	w9, wzr
  42d738:	b	42d750 <wcrtomb@plt+0x28c10>
  42d73c:	mov	w9, wzr
  42d740:	ldrb	w10, [x19, #35]
  42d744:	add	x25, x25, #0x1
  42d748:	tbnz	w10, #5, 42d868 <wcrtomb@plt+0x28d28>
  42d74c:	cbz	x8, 42d868 <wcrtomb@plt+0x28d28>
  42d750:	mov	x1, x8
  42d754:	ldr	w10, [x8, #16]
  42d758:	ldr	x8, [x8, #8]
  42d75c:	tbnz	w10, #6, 42d788 <wcrtomb@plt+0x28c48>
  42d760:	ldrb	w11, [x19, #36]
  42d764:	cmp	w9, #0x0
  42d768:	cinc	x25, x25, ne  // ne = any
  42d76c:	tbz	w11, #7, 42d73c <wcrtomb@plt+0x28bfc>
  42d770:	ldp	x12, x11, [x19, #40]
  42d774:	add	x9, x25, #0x1
  42d778:	add	x11, x9, x11
  42d77c:	cmp	x11, x12
  42d780:	b.ne	42d73c <wcrtomb@plt+0x28bfc>  // b.any
  42d784:	b	42d828 <wcrtomb@plt+0x28ce8>
  42d788:	ldr	w11, [x19, #32]
  42d78c:	tbnz	w11, #12, 42d79c <wcrtomb@plt+0x28c5c>
  42d790:	ldrb	w10, [x19, #36]
  42d794:	tbz	w10, #7, 42d740 <wcrtomb@plt+0x28c00>
  42d798:	b	42d7c8 <wcrtomb@plt+0x28c88>
  42d79c:	tbz	w11, #11, 42d740 <wcrtomb@plt+0x28c00>
  42d7a0:	mov	x11, x22
  42d7a4:	tbnz	w10, #0, 42d7b8 <wcrtomb@plt+0x28c78>
  42d7a8:	tbnz	w10, #1, 42d814 <wcrtomb@plt+0x28cd4>
  42d7ac:	ldr	x10, [x19, #168]
  42d7b0:	ldr	x11, [x1, #24]
  42d7b4:	add	x11, x10, x11
  42d7b8:	ldrb	w10, [x11]
  42d7bc:	cbz	w9, 42d820 <wcrtomb@plt+0x28ce0>
  42d7c0:	cmp	w9, w10
  42d7c4:	b.ne	42d808 <wcrtomb@plt+0x28cc8>  // b.any
  42d7c8:	ldr	x10, [x1]
  42d7cc:	cbz	x10, 42d7ec <wcrtomb@plt+0x28cac>
  42d7d0:	str	x8, [x10, #8]
  42d7d4:	ldr	x11, [x1, #8]
  42d7d8:	cbnz	x11, 42d7fc <wcrtomb@plt+0x28cbc>
  42d7dc:	ldr	w11, [x10, #16]
  42d7e0:	and	w11, w11, #0xffffffef
  42d7e4:	str	w11, [x10, #16]
  42d7e8:	b	42d7f8 <wcrtomb@plt+0x28cb8>
  42d7ec:	mov	x11, x8
  42d7f0:	str	x8, [x23]
  42d7f4:	cbnz	x8, 42d7fc <wcrtomb@plt+0x28cbc>
  42d7f8:	mov	x11, x24
  42d7fc:	str	x10, [x11]
  42d800:	stp	xzr, xzr, [x1]
  42d804:	b	42d74c <wcrtomb@plt+0x28c0c>
  42d808:	mov	w9, wzr
  42d80c:	add	x25, x25, #0x1
  42d810:	b	42d740 <wcrtomb@plt+0x28c00>
  42d814:	ldr	x11, [x1, #24]
  42d818:	ldrb	w10, [x11]
  42d81c:	cbnz	w9, 42d7c0 <wcrtomb@plt+0x28c80>
  42d820:	mov	w9, w10
  42d824:	b	42d74c <wcrtomb@plt+0x28c0c>
  42d828:	mov	x25, x9
  42d82c:	cbz	x8, 42d868 <wcrtomb@plt+0x28d28>
  42d830:	orr	w9, w10, #0x10
  42d834:	str	w9, [x1, #16]
  42d838:	ldr	x9, [x8, #8]
  42d83c:	cbz	x9, 42d85c <wcrtomb@plt+0x28d1c>
  42d840:	ldr	w10, [x8, #16]
  42d844:	mov	x11, x9
  42d848:	orr	w9, w10, #0x10
  42d84c:	str	w9, [x8, #16]
  42d850:	ldr	x9, [x11, #8]
  42d854:	mov	x8, x11
  42d858:	cbnz	x9, 42d840 <wcrtomb@plt+0x28d00>
  42d85c:	mov	x0, x19
  42d860:	bl	42e178 <wcrtomb@plt+0x29638>
  42d864:	cbnz	w0, 42dc2c <wcrtomb@plt+0x290ec>
  42d868:	cbnz	x25, 42d8c8 <wcrtomb@plt+0x28d88>
  42d86c:	ldr	w8, [x19, #32]
  42d870:	tbz	w8, #29, 42d8ac <wcrtomb@plt+0x28d6c>
  42d874:	ldp	x10, x9, [x19, #176]
  42d878:	cmp	x9, x10
  42d87c:	b.cs	42d8bc <wcrtomb@plt+0x28d7c>  // b.hs, b.nlast
  42d880:	tbz	w8, #21, 42d8a0 <wcrtomb@plt+0x28d60>
  42d884:	ldr	x25, [x19, #104]
  42d888:	mov	w2, #0x5                   	// #5
  42d88c:	mov	x0, xzr
  42d890:	mov	x1, x20
  42d894:	bl	404900 <dcgettext@plt>
  42d898:	blr	x25
  42d89c:	ldr	w8, [x19, #32]
  42d8a0:	tbz	w8, #12, 42d708 <wcrtomb@plt+0x28bc8>
  42d8a4:	mov	x8, xzr
  42d8a8:	b	42d714 <wcrtomb@plt+0x28bd4>
  42d8ac:	mov	x25, xzr
  42d8b0:	tbnz	w8, #1, 42d8d0 <wcrtomb@plt+0x28d90>
  42d8b4:	mov	x9, xzr
  42d8b8:	b	42d8d4 <wcrtomb@plt+0x28d94>
  42d8bc:	mov	w0, wzr
  42d8c0:	str	xzr, [x19, #96]
  42d8c4:	b	42dc30 <wcrtomb@plt+0x290f0>
  42d8c8:	ldr	w8, [x19, #32]
  42d8cc:	tbz	w8, #1, 42d8b4 <wcrtomb@plt+0x28d74>
  42d8d0:	ldr	x9, [x19, #16]
  42d8d4:	ldr	x0, [x19, #8]
  42d8d8:	add	x8, x25, #0x1
  42d8dc:	cbz	x0, 42d94c <wcrtomb@plt+0x28e0c>
  42d8e0:	ldr	x10, [x19]
  42d8e4:	ldr	x11, [x19, #24]
  42d8e8:	add	x9, x10, x9
  42d8ec:	add	x10, x9, x8
  42d8f0:	cmp	x11, x10
  42d8f4:	b.cs	42da84 <wcrtomb@plt+0x28f44>  // b.hs, b.nlast
  42d8f8:	cmp	x8, #0x80
  42d8fc:	mov	w10, #0x80                  	// #128
  42d900:	csel	x8, x8, x10, hi  // hi = pmore
  42d904:	add	x20, x9, x8
  42d908:	lsl	x1, x20, #3
  42d90c:	bl	404490 <realloc@plt>
  42d910:	cbnz	x0, 42d96c <wcrtomb@plt+0x28e2c>
  42d914:	bl	404a10 <__errno_location@plt>
  42d918:	mov	w8, #0xc                   	// #12
  42d91c:	str	w8, [x0]
  42d920:	ldr	w8, [x19, #32]
  42d924:	mov	w9, #0x2                   	// #2
  42d928:	str	w9, [x19, #192]
  42d92c:	tbnz	w8, #7, 42d978 <wcrtomb@plt+0x28e38>
  42d930:	tbnz	w8, #4, 42d98c <wcrtomb@plt+0x28e4c>
  42d934:	tbnz	w8, #3, 42da18 <wcrtomb@plt+0x28ed8>
  42d938:	mov	x0, x19
  42d93c:	bl	42d484 <wcrtomb@plt+0x28944>
  42d940:	ldr	x20, [x23]
  42d944:	cbnz	x20, 42da40 <wcrtomb@plt+0x28f00>
  42d948:	b	42da20 <wcrtomb@plt+0x28ee0>
  42d94c:	add	x9, x9, x8
  42d950:	cmp	x9, #0x80
  42d954:	mov	w9, #0x80                  	// #128
  42d958:	csel	x20, x8, x9, hi  // hi = pmore
  42d95c:	mov	w1, #0x8                   	// #8
  42d960:	mov	x0, x20
  42d964:	bl	404410 <calloc@plt>
  42d968:	cbz	x0, 42d914 <wcrtomb@plt+0x28dd4>
  42d96c:	str	x20, [x19, #24]
  42d970:	str	x0, [x19, #8]
  42d974:	b	42da84 <wcrtomb@plt+0x28f44>
  42d978:	ldr	x8, [x19, #88]
  42d97c:	mov	x0, x19
  42d980:	blr	x8
  42d984:	ldr	w8, [x19, #32]
  42d988:	tbz	w8, #4, 42d934 <wcrtomb@plt+0x28df4>
  42d98c:	ldr	w8, [x19, #192]
  42d990:	ldr	x20, [x19, #96]
  42d994:	cmp	w8, #0x9
  42d998:	b.eq	42d9cc <wcrtomb@plt+0x28e8c>  // b.none
  42d99c:	cmp	w8, #0x1
  42d9a0:	b.ne	42d9d4 <wcrtomb@plt+0x28e94>  // b.any
  42d9a4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42d9a8:	add	x1, x1, #0x751
  42d9ac:	mov	w2, #0x5                   	// #5
  42d9b0:	mov	x0, xzr
  42d9b4:	bl	404900 <dcgettext@plt>
  42d9b8:	ldr	x8, [x19, #168]
  42d9bc:	ldr	x2, [x19, #184]
  42d9c0:	ldrb	w1, [x8, x2]
  42d9c4:	blr	x20
  42d9c8:	b	42da10 <wcrtomb@plt+0x28ed0>
  42d9cc:	add	x8, x19, #0xc8
  42d9d0:	b	42d9f4 <wcrtomb@plt+0x28eb4>
  42d9d4:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d9d8:	ldr	w9, [x9, #4008]
  42d9dc:	sxtw	x8, w8
  42d9e0:	cmp	w8, w9
  42d9e4:	b.ge	42d9fc <wcrtomb@plt+0x28ebc>  // b.tcont
  42d9e8:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42d9ec:	add	x9, x9, #0xf60
  42d9f0:	add	x8, x9, x8, lsl #3
  42d9f4:	ldr	x1, [x8]
  42d9f8:	b	42da04 <wcrtomb@plt+0x28ec4>
  42d9fc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42da00:	add	x1, x1, #0x743
  42da04:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42da08:	add	x0, x0, #0x7a4
  42da0c:	blr	x20
  42da10:	ldr	w8, [x19, #32]
  42da14:	tbz	w8, #3, 42d938 <wcrtomb@plt+0x28df8>
  42da18:	ldr	x20, [x23]
  42da1c:	cbnz	x20, 42da40 <wcrtomb@plt+0x28f00>
  42da20:	stp	xzr, xzr, [x23]
  42da24:	ldr	w0, [x19, #192]
  42da28:	cbnz	w0, 42dc30 <wcrtomb@plt+0x290f0>
  42da2c:	b	42da84 <wcrtomb@plt+0x28f44>
  42da30:	mov	x0, x20
  42da34:	bl	404700 <free@plt>
  42da38:	mov	x20, x21
  42da3c:	cbz	x21, 42da20 <wcrtomb@plt+0x28ee0>
  42da40:	ldrb	w8, [x20, #16]
  42da44:	ldr	x21, [x20, #8]
  42da48:	tbz	w8, #1, 42da30 <wcrtomb@plt+0x28ef0>
  42da4c:	ldr	x0, [x20, #24]
  42da50:	bl	404700 <free@plt>
  42da54:	b	42da30 <wcrtomb@plt+0x28ef0>
  42da58:	mov	x10, x24
  42da5c:	str	x9, [x10]
  42da60:	stp	xzr, xzr, [x8]
  42da64:	ldr	x8, [x19]
  42da68:	ldr	x9, [x19, #48]
  42da6c:	ldrb	w10, [x19, #35]
  42da70:	add	x8, x8, #0x1
  42da74:	add	x9, x9, #0x1
  42da78:	str	x8, [x19]
  42da7c:	str	x9, [x19, #48]
  42da80:	tbnz	w10, #5, 42db34 <wcrtomb@plt+0x28ff4>
  42da84:	ldr	x8, [x23]
  42da88:	cbz	x8, 42db30 <wcrtomb@plt+0x28ff0>
  42da8c:	ldr	w9, [x8, #16]
  42da90:	tbnz	w9, #0, 42daac <wcrtomb@plt+0x28f6c>
  42da94:	tbnz	w9, #1, 42dabc <wcrtomb@plt+0x28f7c>
  42da98:	ldr	x9, [x19, #168]
  42da9c:	ldp	x10, x8, [x8, #24]
  42daa0:	add	x21, x9, x10
  42daa4:	sub	x20, x8, x10
  42daa8:	b	42dacc <wcrtomb@plt+0x28f8c>
  42daac:	adrp	x21, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42dab0:	mov	x20, xzr
  42dab4:	add	x21, x21, #0x66
  42dab8:	b	42dacc <wcrtomb@plt+0x28f8c>
  42dabc:	ldr	x21, [x8, #24]
  42dac0:	mov	x0, x21
  42dac4:	bl	403f40 <strlen@plt>
  42dac8:	mov	x20, x0
  42dacc:	add	x0, x20, #0x1
  42dad0:	bl	404250 <malloc@plt>
  42dad4:	ldp	x10, x8, [x19, #8]
  42dad8:	ldr	x9, [x19]
  42dadc:	add	x8, x9, x8
  42dae0:	str	x0, [x10, x8, lsl #3]
  42dae4:	cbz	x0, 42db48 <wcrtomb@plt+0x29008>
  42dae8:	mov	x1, x21
  42daec:	mov	x2, x20
  42daf0:	mov	x22, x0
  42daf4:	bl	403ec0 <memcpy@plt>
  42daf8:	strb	wzr, [x22, x20]
  42dafc:	ldr	x8, [x23]
  42db00:	ldp	x9, x10, [x8]
  42db04:	cbz	x9, 42db24 <wcrtomb@plt+0x28fe4>
  42db08:	str	x10, [x9, #8]
  42db0c:	ldr	x10, [x8, #8]
  42db10:	cbnz	x10, 42da5c <wcrtomb@plt+0x28f1c>
  42db14:	ldr	w10, [x9, #16]
  42db18:	and	w10, w10, #0xffffffef
  42db1c:	str	w10, [x9, #16]
  42db20:	b	42da58 <wcrtomb@plt+0x28f18>
  42db24:	str	x10, [x23]
  42db28:	cbnz	x10, 42da5c <wcrtomb@plt+0x28f1c>
  42db2c:	b	42da58 <wcrtomb@plt+0x28f18>
  42db30:	ldr	x8, [x19]
  42db34:	ldp	x10, x9, [x19, #8]
  42db38:	mov	w0, wzr
  42db3c:	add	x8, x8, x9
  42db40:	str	xzr, [x10, x8, lsl #3]
  42db44:	b	42dc30 <wcrtomb@plt+0x290f0>
  42db48:	bl	404a10 <__errno_location@plt>
  42db4c:	mov	w8, #0xc                   	// #12
  42db50:	str	w8, [x0]
  42db54:	ldr	w8, [x19, #32]
  42db58:	mov	w9, #0x2                   	// #2
  42db5c:	str	w9, [x19, #192]
  42db60:	tbnz	w8, #7, 42db80 <wcrtomb@plt+0x29040>
  42db64:	tbnz	w8, #4, 42db94 <wcrtomb@plt+0x29054>
  42db68:	tbnz	w8, #3, 42dc20 <wcrtomb@plt+0x290e0>
  42db6c:	mov	x0, x19
  42db70:	bl	42d484 <wcrtomb@plt+0x28944>
  42db74:	ldr	x20, [x23]
  42db78:	cbnz	x20, 42dc58 <wcrtomb@plt+0x29118>
  42db7c:	b	42dc28 <wcrtomb@plt+0x290e8>
  42db80:	ldr	x8, [x19, #88]
  42db84:	mov	x0, x19
  42db88:	blr	x8
  42db8c:	ldr	w8, [x19, #32]
  42db90:	tbz	w8, #4, 42db68 <wcrtomb@plt+0x29028>
  42db94:	ldr	w8, [x19, #192]
  42db98:	ldr	x20, [x19, #96]
  42db9c:	cmp	w8, #0x9
  42dba0:	b.eq	42dbd4 <wcrtomb@plt+0x29094>  // b.none
  42dba4:	cmp	w8, #0x1
  42dba8:	b.ne	42dbdc <wcrtomb@plt+0x2909c>  // b.any
  42dbac:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42dbb0:	add	x1, x1, #0x751
  42dbb4:	mov	w2, #0x5                   	// #5
  42dbb8:	mov	x0, xzr
  42dbbc:	bl	404900 <dcgettext@plt>
  42dbc0:	ldr	x8, [x19, #168]
  42dbc4:	ldr	x2, [x19, #184]
  42dbc8:	ldrb	w1, [x8, x2]
  42dbcc:	blr	x20
  42dbd0:	b	42dc18 <wcrtomb@plt+0x290d8>
  42dbd4:	add	x8, x19, #0xc8
  42dbd8:	b	42dbfc <wcrtomb@plt+0x290bc>
  42dbdc:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42dbe0:	ldr	w9, [x9, #4008]
  42dbe4:	sxtw	x8, w8
  42dbe8:	cmp	w8, w9
  42dbec:	b.ge	42dc04 <wcrtomb@plt+0x290c4>  // b.tcont
  42dbf0:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42dbf4:	add	x9, x9, #0xf60
  42dbf8:	add	x8, x9, x8, lsl #3
  42dbfc:	ldr	x1, [x8]
  42dc00:	b	42dc0c <wcrtomb@plt+0x290cc>
  42dc04:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42dc08:	add	x1, x1, #0x743
  42dc0c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42dc10:	add	x0, x0, #0x7a4
  42dc14:	blr	x20
  42dc18:	ldr	w8, [x19, #32]
  42dc1c:	tbz	w8, #3, 42db6c <wcrtomb@plt+0x2902c>
  42dc20:	ldr	x20, [x23]
  42dc24:	cbnz	x20, 42dc58 <wcrtomb@plt+0x29118>
  42dc28:	stp	xzr, xzr, [x23]
  42dc2c:	ldr	w0, [x19, #192]
  42dc30:	ldp	x20, x19, [sp, #64]
  42dc34:	ldp	x22, x21, [sp, #48]
  42dc38:	ldp	x24, x23, [sp, #32]
  42dc3c:	ldr	x25, [sp, #16]
  42dc40:	ldp	x29, x30, [sp], #80
  42dc44:	ret
  42dc48:	mov	x0, x20
  42dc4c:	bl	404700 <free@plt>
  42dc50:	mov	x20, x21
  42dc54:	cbz	x21, 42dc28 <wcrtomb@plt+0x290e8>
  42dc58:	ldrb	w8, [x20, #16]
  42dc5c:	ldr	x21, [x20, #8]
  42dc60:	tbz	w8, #1, 42dc48 <wcrtomb@plt+0x29108>
  42dc64:	ldr	x0, [x20, #24]
  42dc68:	bl	404700 <free@plt>
  42dc6c:	b	42dc48 <wcrtomb@plt+0x29108>
  42dc70:	stp	x29, x30, [sp, #-48]!
  42dc74:	stp	x20, x19, [sp, #32]
  42dc78:	mov	x19, x0
  42dc7c:	stp	x22, x21, [sp, #16]
  42dc80:	mov	x29, sp
  42dc84:	str	w3, [x0, #32]
  42dc88:	tbnz	w3, #16, 42dcb0 <wcrtomb@plt+0x29170>
  42dc8c:	adrp	x8, 42e000 <wcrtomb@plt+0x294c0>
  42dc90:	add	x8, x8, #0x4a0
  42dc94:	str	x8, [x19, #88]
  42dc98:	tbz	w3, #17, 42dcb4 <wcrtomb@plt+0x29174>
  42dc9c:	tbnz	w3, #6, 42dcc4 <wcrtomb@plt+0x29184>
  42dca0:	stp	xzr, xzr, [x19, #120]
  42dca4:	str	xzr, [x19, #136]
  42dca8:	tbnz	w3, #2, 42dcd0 <wcrtomb@plt+0x29190>
  42dcac:	b	42dcc8 <wcrtomb@plt+0x29188>
  42dcb0:	tbnz	w3, #17, 42dc9c <wcrtomb@plt+0x2915c>
  42dcb4:	adrp	x8, 42e000 <wcrtomb@plt+0x294c0>
  42dcb8:	add	x8, x8, #0x4d8
  42dcbc:	str	x8, [x19, #96]
  42dcc0:	tbz	w3, #6, 42dca0 <wcrtomb@plt+0x29160>
  42dcc4:	tbnz	w3, #2, 42dcd0 <wcrtomb@plt+0x29190>
  42dcc8:	ldr	x8, [x19, #160]
  42dccc:	cbz	x8, 42dd84 <wcrtomb@plt+0x29244>
  42dcd0:	mov	w8, #0x240000              	// #2359296
  42dcd4:	and	w8, w3, w8
  42dcd8:	cmp	w8, #0x200, lsl #12
  42dcdc:	b.ne	42dcfc <wcrtomb@plt+0x291bc>  // b.any
  42dce0:	tbnz	w3, #17, 42dd5c <wcrtomb@plt+0x2921c>
  42dce4:	tbnz	w3, #4, 42ded8 <wcrtomb@plt+0x29398>
  42dce8:	and	w3, w3, #0xffdfffff
  42dcec:	str	w3, [x19, #32]
  42dcf0:	stp	x1, x2, [x19, #168]
  42dcf4:	tbnz	w3, #1, 42deec <wcrtomb@plt+0x293ac>
  42dcf8:	b	42dd04 <wcrtomb@plt+0x291c4>
  42dcfc:	stp	x1, x2, [x19, #168]
  42dd00:	tbnz	w3, #1, 42deec <wcrtomb@plt+0x293ac>
  42dd04:	str	xzr, [x19, #16]
  42dd08:	tbz	w3, #14, 42def0 <wcrtomb@plt+0x293b0>
  42dd0c:	tbnz	w3, #15, 42df00 <wcrtomb@plt+0x293c0>
  42dd10:	str	xzr, [x19, #64]
  42dd14:	tbz	w3, #26, 42df04 <wcrtomb@plt+0x293c4>
  42dd18:	tbnz	w3, #31, 42dd20 <wcrtomb@plt+0x291e0>
  42dd1c:	str	wzr, [x19, #36]
  42dd20:	tbnz	w3, #28, 42dd48 <wcrtomb@plt+0x29208>
  42dd24:	tbnz	w3, #25, 42dd64 <wcrtomb@plt+0x29224>
  42dd28:	ldr	w9, [x19, #36]
  42dd2c:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42dd30:	adrp	x10, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42dd34:	add	x8, x8, #0x66
  42dd38:	add	x10, x10, #0x785
  42dd3c:	stp	x8, x10, [x19, #72]
  42dd40:	orr	w8, w9, #0x100
  42dd44:	b	42dd7c <wcrtomb@plt+0x2923c>
  42dd48:	ldr	x8, [x19, #72]
  42dd4c:	cbz	x8, 42ddd4 <wcrtomb@plt+0x29294>
  42dd50:	ldr	x8, [x19, #80]
  42dd54:	cbnz	x8, 42ddf4 <wcrtomb@plt+0x292b4>
  42dd58:	b	42dde8 <wcrtomb@plt+0x292a8>
  42dd5c:	ldr	x8, [x19, #96]
  42dd60:	b	42dee0 <wcrtomb@plt+0x293a0>
  42dd64:	ldr	w9, [x19, #36]
  42dd68:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42dd6c:	add	x8, x8, #0xf48
  42dd70:	stp	x8, x8, [x19, #72]
  42dd74:	mov	w8, #0x660                 	// #1632
  42dd78:	orr	w8, w9, w8
  42dd7c:	str	w8, [x19, #36]
  42dd80:	b	42ddf4 <wcrtomb@plt+0x292b4>
  42dd84:	mov	w8, #0x3                   	// #3
  42dd88:	str	w8, [x19, #192]
  42dd8c:	tbz	w3, #4, 42ddc0 <wcrtomb@plt+0x29280>
  42dd90:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  42dd94:	ldr	w8, [x8, #4008]
  42dd98:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42dd9c:	ldr	x9, [x9, #3960]
  42dda0:	ldr	x10, [x19, #96]
  42dda4:	adrp	x11, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42dda8:	add	x11, x11, #0x743
  42ddac:	cmp	w8, #0x3
  42ddb0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ddb4:	csel	x1, x9, x11, gt
  42ddb8:	add	x0, x0, #0x7a4
  42ddbc:	blr	x10
  42ddc0:	bl	404a10 <__errno_location@plt>
  42ddc4:	mov	w8, #0x16                  	// #22
  42ddc8:	str	w8, [x0]
  42ddcc:	ldr	w0, [x19, #192]
  42ddd0:	b	42dec8 <wcrtomb@plt+0x29388>
  42ddd4:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ddd8:	add	x8, x8, #0x66
  42dddc:	str	x8, [x19, #72]
  42dde0:	ldr	x8, [x19, #80]
  42dde4:	cbnz	x8, 42ddf4 <wcrtomb@plt+0x292b4>
  42dde8:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ddec:	add	x8, x8, #0x66
  42ddf0:	str	x8, [x19, #80]
  42ddf4:	str	xzr, [x19, #184]
  42ddf8:	str	xzr, [x19, #48]
  42ddfc:	tbz	w3, #3, 42de40 <wcrtomb@plt+0x29300>
  42de00:	mov	x21, x19
  42de04:	ldr	x20, [x21, #208]!
  42de08:	cbnz	x20, 42de20 <wcrtomb@plt+0x292e0>
  42de0c:	b	42de3c <wcrtomb@plt+0x292fc>
  42de10:	mov	x0, x20
  42de14:	bl	404700 <free@plt>
  42de18:	mov	x20, x22
  42de1c:	cbz	x22, 42de38 <wcrtomb@plt+0x292f8>
  42de20:	ldrb	w8, [x20, #16]
  42de24:	ldr	x22, [x20, #8]
  42de28:	tbz	w8, #1, 42de10 <wcrtomb@plt+0x292d0>
  42de2c:	ldr	x0, [x20, #24]
  42de30:	bl	404700 <free@plt>
  42de34:	b	42de10 <wcrtomb@plt+0x292d0>
  42de38:	ldr	w3, [x19, #32]
  42de3c:	stp	xzr, xzr, [x21]
  42de40:	stp	xzr, xzr, [x19, #208]
  42de44:	tbnz	w3, #3, 42de54 <wcrtomb@plt+0x29314>
  42de48:	str	xzr, [x19, #24]
  42de4c:	stp	xzr, xzr, [x19]
  42de50:	b	42dec0 <wcrtomb@plt+0x29380>
  42de54:	tbnz	w3, #0, 42dea4 <wcrtomb@plt+0x29364>
  42de58:	ldr	x8, [x19]
  42de5c:	cbz	x8, 42dea0 <wcrtomb@plt+0x29360>
  42de60:	ldr	x9, [x19, #16]
  42de64:	mov	x20, xzr
  42de68:	b	42de78 <wcrtomb@plt+0x29338>
  42de6c:	add	x20, x20, #0x1
  42de70:	cmp	x20, x8
  42de74:	b.cs	42dea0 <wcrtomb@plt+0x29360>  // b.hs, b.nlast
  42de78:	ldr	x10, [x19, #8]
  42de7c:	add	x11, x9, x20
  42de80:	ldr	x0, [x10, x11, lsl #3]
  42de84:	cbz	x0, 42de6c <wcrtomb@plt+0x2932c>
  42de88:	bl	404700 <free@plt>
  42de8c:	ldp	x8, x9, [x19, #8]
  42de90:	add	x10, x20, x9
  42de94:	str	xzr, [x8, x10, lsl #3]
  42de98:	ldr	x8, [x19]
  42de9c:	b	42de6c <wcrtomb@plt+0x2932c>
  42dea0:	str	xzr, [x19]
  42dea4:	ldr	w8, [x19, #192]
  42dea8:	cmp	w8, #0x9
  42deac:	b.ne	42deb8 <wcrtomb@plt+0x29378>  // b.any
  42deb0:	ldr	x0, [x19, #200]
  42deb4:	bl	404700 <free@plt>
  42deb8:	str	xzr, [x19, #200]
  42debc:	str	wzr, [x19, #192]
  42dec0:	mov	w0, wzr
  42dec4:	str	wzr, [x19, #192]
  42dec8:	ldp	x20, x19, [sp, #32]
  42decc:	ldp	x22, x21, [sp, #16]
  42ded0:	ldp	x29, x30, [sp], #48
  42ded4:	ret
  42ded8:	adrp	x8, 42e000 <wcrtomb@plt+0x294c0>
  42dedc:	add	x8, x8, #0x4d8
  42dee0:	str	x8, [x19, #104]
  42dee4:	stp	x1, x2, [x19, #168]
  42dee8:	tbz	w3, #1, 42dd04 <wcrtomb@plt+0x291c4>
  42deec:	tbnz	w3, #14, 42dd0c <wcrtomb@plt+0x291cc>
  42def0:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42def4:	add	x8, x8, #0x781
  42def8:	str	x8, [x19, #56]
  42defc:	tbz	w3, #15, 42dd10 <wcrtomb@plt+0x291d0>
  42df00:	tbnz	w3, #26, 42dd18 <wcrtomb@plt+0x291d8>
  42df04:	str	xzr, [x19, #152]
  42df08:	tbz	w3, #31, 42dd1c <wcrtomb@plt+0x291dc>
  42df0c:	b	42dd20 <wcrtomb@plt+0x291e0>
  42df10:	stp	x29, x30, [sp, #-64]!
  42df14:	stp	x24, x23, [sp, #16]
  42df18:	stp	x22, x21, [sp, #32]
  42df1c:	stp	x20, x19, [sp, #48]
  42df20:	ldr	w8, [x0, #32]
  42df24:	mov	x19, x0
  42df28:	mov	x20, x1
  42df2c:	mov	x29, sp
  42df30:	tbnz	w8, #21, 42df3c <wcrtomb@plt+0x293fc>
  42df34:	tbz	w8, #22, 42df6c <wcrtomb@plt+0x2942c>
  42df38:	b	42df84 <wcrtomb@plt+0x29444>
  42df3c:	ldr	x21, [x19, #104]
  42df40:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42df44:	add	x1, x1, #0x78a
  42df48:	mov	w2, #0x5                   	// #5
  42df4c:	mov	x0, xzr
  42df50:	bl	404900 <dcgettext@plt>
  42df54:	ldr	w1, [x19, #224]
  42df58:	ldr	w2, [x19, #176]
  42df5c:	ldr	x3, [x19, #168]
  42df60:	blr	x21
  42df64:	ldr	w8, [x19, #32]
  42df68:	tbnz	w8, #22, 42df84 <wcrtomb@plt+0x29444>
  42df6c:	ldrb	w8, [x19, #36]
  42df70:	tbz	w8, #7, 42df98 <wcrtomb@plt+0x29458>
  42df74:	ldp	x9, x8, [x19, #40]
  42df78:	add	x8, x8, #0x1
  42df7c:	cmp	x8, x9
  42df80:	b.ne	42df98 <wcrtomb@plt+0x29458>  // b.any
  42df84:	mov	w2, #0x1                   	// #1
  42df88:	mov	x0, x19
  42df8c:	mov	x1, x20
  42df90:	bl	42e56c <wcrtomb@plt+0x29a2c>
  42df94:	b	42e004 <wcrtomb@plt+0x294c4>
  42df98:	mov	x0, x19
  42df9c:	mov	x1, x20
  42dfa0:	mov	w2, wzr
  42dfa4:	bl	42e56c <wcrtomb@plt+0x29a2c>
  42dfa8:	cmp	w0, #0x1
  42dfac:	b.ne	42dff0 <wcrtomb@plt+0x294b0>  // b.any
  42dfb0:	mov	w20, #0xffffffff            	// #-1
  42dfb4:	b	42dfe0 <wcrtomb@plt+0x294a0>
  42dfb8:	ldr	w8, [x19, #36]
  42dfbc:	eor	w8, w20, w8, lsr #7
  42dfc0:	and	x8, x8, #0x1
  42dfc4:	ldr	x9, [x19, #184]
  42dfc8:	mov	x0, x19
  42dfcc:	mov	w2, wzr
  42dfd0:	add	x1, x9, x8
  42dfd4:	bl	42e56c <wcrtomb@plt+0x29a2c>
  42dfd8:	cmp	w0, #0x1
  42dfdc:	b.ne	42dff0 <wcrtomb@plt+0x294b0>  // b.any
  42dfe0:	ldrb	w8, [x19, #33]
  42dfe4:	tbz	w8, #4, 42dfb8 <wcrtomb@plt+0x29478>
  42dfe8:	mov	x8, xzr
  42dfec:	b	42dfc4 <wcrtomb@plt+0x29484>
  42dff0:	ldr	x8, [x19, #216]
  42dff4:	cbz	x8, 42e004 <wcrtomb@plt+0x294c4>
  42dff8:	ldr	w9, [x8, #16]
  42dffc:	and	w9, w9, #0xffffffef
  42e000:	str	w9, [x8, #16]
  42e004:	cmp	w0, #0x2
  42e008:	b.ne	42e024 <wcrtomb@plt+0x294e4>  // b.any
  42e00c:	ldr	w0, [x19, #192]
  42e010:	ldp	x20, x19, [sp, #48]
  42e014:	ldp	x22, x21, [sp, #32]
  42e018:	ldp	x24, x23, [sp, #16]
  42e01c:	ldp	x29, x30, [sp], #64
  42e020:	ret
  42e024:	ldrb	w8, [x19, #34]
  42e028:	tbz	w8, #5, 42e064 <wcrtomb@plt+0x29524>
  42e02c:	ldr	x21, [x19, #104]
  42e030:	ldr	w20, [x19, #224]
  42e034:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e038:	add	x1, x1, #0x7a7
  42e03c:	mov	w2, #0x5                   	// #5
  42e040:	mov	x0, xzr
  42e044:	bl	404900 <dcgettext@plt>
  42e048:	mov	x2, x0
  42e04c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e050:	add	x0, x0, #0x79d
  42e054:	mov	w1, w20
  42e058:	blr	x21
  42e05c:	mov	x0, x19
  42e060:	bl	42f09c <wcrtomb@plt+0x2a55c>
  42e064:	adrp	x23, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e068:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e06c:	adrp	x21, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e070:	add	x23, x23, #0x5b0
  42e074:	add	x20, x20, #0x79d
  42e078:	add	x21, x21, #0x7b5
  42e07c:	b	42e088 <wcrtomb@plt+0x29548>
  42e080:	ldr	x8, [x23, #24]!
  42e084:	cbz	x8, 42e00c <wcrtomb@plt+0x294cc>
  42e088:	ldr	w8, [x19, #32]
  42e08c:	ldp	w10, w9, [x23, #8]
  42e090:	and	w11, w10, w8
  42e094:	cmp	w11, w10
  42e098:	cset	w10, eq  // eq = none
  42e09c:	tst	w9, #0x2
  42e0a0:	csel	w10, w11, w10, eq  // eq = none
  42e0a4:	cmp	w10, #0x0
  42e0a8:	cset	w11, eq  // eq = none
  42e0ac:	tst	w9, #0x1
  42e0b0:	csel	w10, w10, w11, eq  // eq = none
  42e0b4:	cbz	w10, 42e080 <wcrtomb@plt+0x29540>
  42e0b8:	tbz	w9, #2, 42e0f8 <wcrtomb@plt+0x295b8>
  42e0bc:	ldr	x22, [x19, #208]
  42e0c0:	cbnz	x22, 42e150 <wcrtomb@plt+0x29610>
  42e0c4:	tbz	w8, #21, 42e0f8 <wcrtomb@plt+0x295b8>
  42e0c8:	ldr	x24, [x19, #104]
  42e0cc:	ldr	w22, [x19, #224]
  42e0d0:	mov	w2, #0x5                   	// #5
  42e0d4:	mov	x0, xzr
  42e0d8:	mov	x1, x21
  42e0dc:	bl	404900 <dcgettext@plt>
  42e0e0:	mov	x2, x0
  42e0e4:	mov	x0, x20
  42e0e8:	mov	w1, w22
  42e0ec:	blr	x24
  42e0f0:	mov	x0, x19
  42e0f4:	bl	42f09c <wcrtomb@plt+0x2a55c>
  42e0f8:	ldr	x8, [x23, #16]
  42e0fc:	cbz	x8, 42e080 <wcrtomb@plt+0x29540>
  42e100:	mov	x0, x19
  42e104:	blr	x8
  42e108:	cbnz	w0, 42e00c <wcrtomb@plt+0x294cc>
  42e10c:	ldrb	w8, [x19, #34]
  42e110:	tbz	w8, #5, 42e080 <wcrtomb@plt+0x29540>
  42e114:	ldr	x1, [x23]
  42e118:	ldr	x24, [x19, #104]
  42e11c:	ldr	w22, [x19, #224]
  42e120:	mov	w2, #0x5                   	// #5
  42e124:	mov	x0, xzr
  42e128:	bl	404900 <dcgettext@plt>
  42e12c:	mov	x2, x0
  42e130:	mov	x0, x20
  42e134:	mov	w1, w22
  42e138:	blr	x24
  42e13c:	mov	x0, x19
  42e140:	bl	42f09c <wcrtomb@plt+0x2a55c>
  42e144:	b	42e080 <wcrtomb@plt+0x29540>
  42e148:	ldr	x22, [x22, #8]
  42e14c:	cbz	x22, 42e16c <wcrtomb@plt+0x2962c>
  42e150:	ldrb	w8, [x22, #16]
  42e154:	tbz	w8, #4, 42e148 <wcrtomb@plt+0x29608>
  42e158:	mov	x0, x19
  42e15c:	mov	x1, x22
  42e160:	bl	42e178 <wcrtomb@plt+0x29638>
  42e164:	cbz	w0, 42e148 <wcrtomb@plt+0x29608>
  42e168:	b	42e00c <wcrtomb@plt+0x294cc>
  42e16c:	ldr	w8, [x19, #32]
  42e170:	tbnz	w8, #21, 42e0c8 <wcrtomb@plt+0x29588>
  42e174:	b	42e0f8 <wcrtomb@plt+0x295b8>
  42e178:	sub	sp, sp, #0x70
  42e17c:	stp	x29, x30, [sp, #16]
  42e180:	stp	x28, x27, [sp, #32]
  42e184:	stp	x26, x25, [sp, #48]
  42e188:	stp	x24, x23, [sp, #64]
  42e18c:	stp	x22, x21, [sp, #80]
  42e190:	stp	x20, x19, [sp, #96]
  42e194:	ldr	w24, [x1, #16]
  42e198:	add	x29, sp, #0x10
  42e19c:	tbnz	w24, #4, 42e1a8 <wcrtomb@plt+0x29668>
  42e1a0:	mov	w0, wzr
  42e1a4:	b	42e3d4 <wcrtomb@plt+0x29894>
  42e1a8:	tst	w24, #0x1
  42e1ac:	mov	x20, x1
  42e1b0:	mov	x19, x0
  42e1b4:	cset	w8, eq  // eq = none
  42e1b8:	mov	x21, xzr
  42e1bc:	tbnz	w24, #4, 42e1cc <wcrtomb@plt+0x2968c>
  42e1c0:	mov	w9, w24
  42e1c4:	mov	x26, x20
  42e1c8:	b	42e214 <wcrtomb@plt+0x296d4>
  42e1cc:	mov	x26, x20
  42e1d0:	mov	w9, w24
  42e1d4:	tbz	w8, #0, 42e1e8 <wcrtomb@plt+0x296a8>
  42e1d8:	tbnz	w9, #1, 42e1f0 <wcrtomb@plt+0x296b0>
  42e1dc:	ldp	x9, x8, [x26, #24]
  42e1e0:	sub	x0, x8, x9
  42e1e4:	b	42e1f8 <wcrtomb@plt+0x296b8>
  42e1e8:	mov	x0, xzr
  42e1ec:	b	42e1f8 <wcrtomb@plt+0x296b8>
  42e1f0:	ldr	x0, [x26, #24]
  42e1f4:	bl	403f40 <strlen@plt>
  42e1f8:	ldr	x26, [x26, #8]
  42e1fc:	add	x21, x0, x21
  42e200:	cbz	x26, 42e23c <wcrtomb@plt+0x296fc>
  42e204:	ldr	w9, [x26, #16]
  42e208:	tst	w9, #0x1
  42e20c:	cset	w8, eq  // eq = none
  42e210:	tbnz	w9, #4, 42e1d4 <wcrtomb@plt+0x29694>
  42e214:	cbz	w8, 42e228 <wcrtomb@plt+0x296e8>
  42e218:	tbnz	w9, #1, 42e230 <wcrtomb@plt+0x296f0>
  42e21c:	ldp	x9, x8, [x26, #24]
  42e220:	sub	x0, x8, x9
  42e224:	b	42e238 <wcrtomb@plt+0x296f8>
  42e228:	mov	x0, xzr
  42e22c:	b	42e238 <wcrtomb@plt+0x296f8>
  42e230:	ldr	x0, [x26, #24]
  42e234:	bl	403f40 <strlen@plt>
  42e238:	add	x21, x0, x21
  42e23c:	add	x0, x21, #0x1
  42e240:	bl	404250 <malloc@plt>
  42e244:	cbz	x0, 42e354 <wcrtomb@plt+0x29814>
  42e248:	adrp	x28, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e24c:	add	x27, x19, #0xd8
  42e250:	add	x28, x28, #0x66
  42e254:	mov	x23, x20
  42e258:	mov	x22, x0
  42e25c:	str	x0, [sp, #8]
  42e260:	b	42e27c <wcrtomb@plt+0x2973c>
  42e264:	mov	x0, x23
  42e268:	bl	404700 <free@plt>
  42e26c:	cmp	x23, x26
  42e270:	b.eq	42e334 <wcrtomb@plt+0x297f4>  // b.none
  42e274:	ldr	w24, [x21, #16]
  42e278:	mov	x23, x21
  42e27c:	ldr	x21, [x23, #8]
  42e280:	tbnz	w24, #0, 42e29c <wcrtomb@plt+0x2975c>
  42e284:	tbnz	w24, #1, 42e2a8 <wcrtomb@plt+0x29768>
  42e288:	ldr	x8, [x19, #168]
  42e28c:	ldp	x9, x10, [x23, #24]
  42e290:	add	x25, x8, x9
  42e294:	sub	x24, x10, x9
  42e298:	b	42e2b8 <wcrtomb@plt+0x29778>
  42e29c:	mov	x24, xzr
  42e2a0:	mov	x25, x28
  42e2a4:	b	42e2b8 <wcrtomb@plt+0x29778>
  42e2a8:	ldr	x25, [x23, #24]
  42e2ac:	mov	x0, x25
  42e2b0:	bl	403f40 <strlen@plt>
  42e2b4:	mov	x24, x0
  42e2b8:	mov	x0, x22
  42e2bc:	mov	x1, x25
  42e2c0:	mov	x2, x24
  42e2c4:	bl	403ec0 <memcpy@plt>
  42e2c8:	cmp	x23, x20
  42e2cc:	add	x22, x22, x24
  42e2d0:	b.eq	42e274 <wcrtomb@plt+0x29734>  // b.none
  42e2d4:	ldr	w8, [x23, #16]
  42e2d8:	ldr	w9, [x20, #16]
  42e2dc:	and	w8, w8, #0x4
  42e2e0:	orr	w8, w9, w8
  42e2e4:	str	w8, [x20, #16]
  42e2e8:	ldp	x8, x9, [x23]
  42e2ec:	cbz	x8, 42e30c <wcrtomb@plt+0x297cc>
  42e2f0:	str	x9, [x8, #8]
  42e2f4:	ldr	x9, [x23, #8]
  42e2f8:	cbnz	x9, 42e318 <wcrtomb@plt+0x297d8>
  42e2fc:	ldr	w9, [x8, #16]
  42e300:	and	w9, w9, #0xffffffef
  42e304:	str	w9, [x8, #16]
  42e308:	b	42e314 <wcrtomb@plt+0x297d4>
  42e30c:	str	x9, [x19, #208]
  42e310:	cbnz	x9, 42e318 <wcrtomb@plt+0x297d8>
  42e314:	mov	x9, x27
  42e318:	str	x8, [x9]
  42e31c:	ldrb	w8, [x23, #16]
  42e320:	stp	xzr, xzr, [x23]
  42e324:	tbz	w8, #1, 42e264 <wcrtomb@plt+0x29724>
  42e328:	ldr	x0, [x23, #24]
  42e32c:	bl	404700 <free@plt>
  42e330:	b	42e264 <wcrtomb@plt+0x29724>
  42e334:	strb	wzr, [x22]
  42e338:	ldr	w9, [x20, #16]
  42e33c:	and	w8, w9, #0xffffffef
  42e340:	str	w8, [x20, #16]
  42e344:	tbnz	w9, #1, 42e3c0 <wcrtomb@plt+0x29880>
  42e348:	orr	w8, w8, #0x2
  42e34c:	str	w8, [x20, #16]
  42e350:	b	42e3c8 <wcrtomb@plt+0x29888>
  42e354:	bl	404a10 <__errno_location@plt>
  42e358:	mov	w8, #0xc                   	// #12
  42e35c:	str	w8, [x0]
  42e360:	ldr	w8, [x19, #32]
  42e364:	mov	w9, #0x2                   	// #2
  42e368:	str	w9, [x19, #192]
  42e36c:	tbnz	w8, #7, 42e3f4 <wcrtomb@plt+0x298b4>
  42e370:	tbnz	w8, #4, 42e408 <wcrtomb@plt+0x298c8>
  42e374:	tbnz	w8, #3, 42e380 <wcrtomb@plt+0x29840>
  42e378:	mov	x0, x19
  42e37c:	bl	42d484 <wcrtomb@plt+0x28944>
  42e380:	mov	x21, x19
  42e384:	ldr	x20, [x21, #208]!
  42e388:	cbnz	x20, 42e3a8 <wcrtomb@plt+0x29868>
  42e38c:	stp	xzr, xzr, [x21]
  42e390:	ldr	w0, [x19, #192]
  42e394:	b	42e3d4 <wcrtomb@plt+0x29894>
  42e398:	mov	x0, x20
  42e39c:	bl	404700 <free@plt>
  42e3a0:	mov	x20, x22
  42e3a4:	cbz	x22, 42e38c <wcrtomb@plt+0x2984c>
  42e3a8:	ldrb	w8, [x20, #16]
  42e3ac:	ldr	x22, [x20, #8]
  42e3b0:	tbz	w8, #1, 42e398 <wcrtomb@plt+0x29858>
  42e3b4:	ldr	x0, [x20, #24]
  42e3b8:	bl	404700 <free@plt>
  42e3bc:	b	42e398 <wcrtomb@plt+0x29858>
  42e3c0:	ldr	x0, [x20, #24]
  42e3c4:	bl	404700 <free@plt>
  42e3c8:	ldr	x8, [sp, #8]
  42e3cc:	mov	w0, wzr
  42e3d0:	str	x8, [x20, #24]
  42e3d4:	ldp	x20, x19, [sp, #96]
  42e3d8:	ldp	x22, x21, [sp, #80]
  42e3dc:	ldp	x24, x23, [sp, #64]
  42e3e0:	ldp	x26, x25, [sp, #48]
  42e3e4:	ldp	x28, x27, [sp, #32]
  42e3e8:	ldp	x29, x30, [sp, #16]
  42e3ec:	add	sp, sp, #0x70
  42e3f0:	ret
  42e3f4:	ldr	x8, [x19, #88]
  42e3f8:	mov	x0, x19
  42e3fc:	blr	x8
  42e400:	ldr	w8, [x19, #32]
  42e404:	tbz	w8, #4, 42e374 <wcrtomb@plt+0x29834>
  42e408:	ldr	w8, [x19, #192]
  42e40c:	ldr	x20, [x19, #96]
  42e410:	cmp	w8, #0x9
  42e414:	b.eq	42e450 <wcrtomb@plt+0x29910>  // b.none
  42e418:	cmp	w8, #0x1
  42e41c:	b.ne	42e458 <wcrtomb@plt+0x29918>  // b.any
  42e420:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e424:	add	x1, x1, #0x751
  42e428:	mov	w2, #0x5                   	// #5
  42e42c:	mov	x0, xzr
  42e430:	bl	404900 <dcgettext@plt>
  42e434:	ldr	x8, [x19, #168]
  42e438:	ldr	x2, [x19, #184]
  42e43c:	ldrb	w1, [x8, x2]
  42e440:	blr	x20
  42e444:	ldr	w8, [x19, #32]
  42e448:	tbz	w8, #3, 42e378 <wcrtomb@plt+0x29838>
  42e44c:	b	42e380 <wcrtomb@plt+0x29840>
  42e450:	add	x8, x19, #0xc8
  42e454:	b	42e478 <wcrtomb@plt+0x29938>
  42e458:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42e45c:	ldr	w9, [x9, #4008]
  42e460:	sxtw	x8, w8
  42e464:	cmp	w8, w9
  42e468:	b.ge	42e480 <wcrtomb@plt+0x29940>  // b.tcont
  42e46c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42e470:	add	x9, x9, #0xf60
  42e474:	add	x8, x9, x8, lsl #3
  42e478:	ldr	x1, [x8]
  42e47c:	b	42e488 <wcrtomb@plt+0x29948>
  42e480:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e484:	add	x1, x1, #0x743
  42e488:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e48c:	add	x0, x0, #0x7a4
  42e490:	blr	x20
  42e494:	ldr	w8, [x19, #32]
  42e498:	tbz	w8, #3, 42e378 <wcrtomb@plt+0x29838>
  42e49c:	b	42e380 <wcrtomb@plt+0x29840>
  42e4a0:	stp	x29, x30, [sp, #-32]!
  42e4a4:	str	x19, [sp, #16]
  42e4a8:	ldr	x19, [x0, #96]
  42e4ac:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  42e4b0:	add	x1, x1, #0x1c3
  42e4b4:	mov	w2, #0x5                   	// #5
  42e4b8:	mov	x0, xzr
  42e4bc:	mov	x29, sp
  42e4c0:	bl	404900 <dcgettext@plt>
  42e4c4:	mov	x1, x0
  42e4c8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e4cc:	add	x0, x0, #0x7a4
  42e4d0:	blr	x19
  42e4d4:	bl	4045b0 <abort@plt>
  42e4d8:	sub	sp, sp, #0x120
  42e4dc:	stp	x29, x30, [sp, #256]
  42e4e0:	add	x29, sp, #0x100
  42e4e4:	mov	x9, #0xffffffffffffffc8    	// #-56
  42e4e8:	mov	x10, sp
  42e4ec:	sub	x11, x29, #0x78
  42e4f0:	movk	x9, #0xff80, lsl #32
  42e4f4:	add	x12, x29, #0x20
  42e4f8:	add	x10, x10, #0x80
  42e4fc:	add	x11, x11, #0x38
  42e500:	stp	x28, x19, [sp, #272]
  42e504:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42e508:	stp	x10, x9, [x29, #-48]
  42e50c:	stp	x12, x11, [x29, #-64]
  42e510:	mov	x8, x0
  42e514:	stp	x1, x2, [x29, #-120]
  42e518:	stp	x3, x4, [x29, #-104]
  42e51c:	stp	x5, x6, [x29, #-88]
  42e520:	stur	x7, [x29, #-72]
  42e524:	stp	q0, q1, [sp]
  42e528:	ldr	x0, [x19, #96]
  42e52c:	ldp	q0, q1, [x29, #-64]
  42e530:	sub	x3, x29, #0x20
  42e534:	mov	w1, #0x1                   	// #1
  42e538:	mov	x2, x8
  42e53c:	stp	q2, q3, [sp, #32]
  42e540:	stp	q4, q5, [sp, #64]
  42e544:	stp	q6, q7, [sp, #96]
  42e548:	stp	q0, q1, [x29, #-32]
  42e54c:	bl	4043f0 <__vfprintf_chk@plt>
  42e550:	ldr	x1, [x19, #96]
  42e554:	mov	w0, #0xa                   	// #10
  42e558:	bl	4040c0 <fputc@plt>
  42e55c:	ldp	x28, x19, [sp, #272]
  42e560:	ldp	x29, x30, [sp, #256]
  42e564:	add	sp, sp, #0x120
  42e568:	ret
  42e56c:	sub	sp, sp, #0x80
  42e570:	stp	x29, x30, [sp, #32]
  42e574:	stp	x28, x27, [sp, #48]
  42e578:	stp	x26, x25, [sp, #64]
  42e57c:	stp	x24, x23, [sp, #80]
  42e580:	stp	x22, x21, [sp, #96]
  42e584:	stp	x20, x19, [sp, #112]
  42e588:	ldr	x28, [x0, #176]
  42e58c:	mov	x19, x0
  42e590:	add	x29, sp, #0x20
  42e594:	cmp	x28, x1
  42e598:	b.ls	42e6e0 <wcrtomb@plt+0x29ba0>  // b.plast
  42e59c:	ldr	x24, [x19, #168]
  42e5a0:	ldr	x22, [x19, #64]
  42e5a4:	ldr	w20, [x19, #32]
  42e5a8:	ldr	x27, [x19, #216]
  42e5ac:	mov	x26, x1
  42e5b0:	mov	w21, w2
  42e5b4:	stur	w2, [x29, #-4]
  42e5b8:	tbz	w20, #13, 42e6ec <wcrtomb@plt+0x29bac>
  42e5bc:	add	x8, x26, #0x3
  42e5c0:	cmp	x8, x28
  42e5c4:	b.cs	42e6ec <wcrtomb@plt+0x29bac>  // b.hs, b.nlast
  42e5c8:	ldrb	w8, [x24, x26]
  42e5cc:	cmp	w8, #0x73
  42e5d0:	b.ne	42e6ec <wcrtomb@plt+0x29bac>  // b.any
  42e5d4:	add	x8, x26, x24
  42e5d8:	ldrb	w1, [x8, #1]
  42e5dc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e5e0:	add	x0, x0, #0x7c5
  42e5e4:	mov	w2, #0x21                  	// #33
  42e5e8:	bl	404890 <memchr@plt>
  42e5ec:	cbz	x0, 42e6ec <wcrtomb@plt+0x29bac>
  42e5f0:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e5f4:	mov	x8, xzr
  42e5f8:	add	x22, x22, #0x7c5
  42e5fc:	mov	x20, x26
  42e600:	add	x20, x20, x8
  42e604:	ldrb	w8, [x24, x20]
  42e608:	cmp	w8, #0x73
  42e60c:	b.ne	42e6d0 <wcrtomb@plt+0x29b90>  // b.any
  42e610:	add	x8, x20, #0x3
  42e614:	cmp	x8, x28
  42e618:	b.cs	42e6d0 <wcrtomb@plt+0x29b90>  // b.hs, b.nlast
  42e61c:	add	x8, x20, x24
  42e620:	ldrb	w23, [x8, #1]
  42e624:	mov	w2, #0x21                  	// #33
  42e628:	mov	x0, x22
  42e62c:	mov	w1, w23
  42e630:	bl	404890 <memchr@plt>
  42e634:	cbz	x0, 42e6d0 <wcrtomb@plt+0x29b90>
  42e638:	add	x20, x20, #0x2
  42e63c:	cmp	x20, x28
  42e640:	b.cs	42e6d0 <wcrtomb@plt+0x29b90>  // b.hs, b.nlast
  42e644:	mov	w8, #0x1                   	// #1
  42e648:	b	42e660 <wcrtomb@plt+0x29b20>
  42e64c:	cmp	w9, w23
  42e650:	cinc	w8, w8, eq  // eq = none
  42e654:	add	x20, x20, #0x1
  42e658:	cmp	x20, x28
  42e65c:	b.cs	42e6b0 <wcrtomb@plt+0x29b70>  // b.hs, b.nlast
  42e660:	ldrb	w9, [x24, x20]
  42e664:	cmp	w8, #0x3
  42e668:	b.ne	42e69c <wcrtomb@plt+0x29b5c>  // b.any
  42e66c:	cmp	w9, w23
  42e670:	b.eq	42e6ac <wcrtomb@plt+0x29b6c>  // b.none
  42e674:	sub	w8, w9, #0x30
  42e678:	cmp	w8, #0xa
  42e67c:	mov	w8, #0x3                   	// #3
  42e680:	b.cc	42e654 <wcrtomb@plt+0x29b14>  // b.lo, b.ul, b.last
  42e684:	and	w9, w9, #0xffffffdf
  42e688:	sub	w9, w9, #0x41
  42e68c:	and	w9, w9, #0xff
  42e690:	cmp	w9, #0x1a
  42e694:	b.cc	42e654 <wcrtomb@plt+0x29b14>  // b.lo, b.ul, b.last
  42e698:	b	42e6b0 <wcrtomb@plt+0x29b70>
  42e69c:	cmp	w9, #0x5c
  42e6a0:	b.ne	42e64c <wcrtomb@plt+0x29b0c>  // b.any
  42e6a4:	add	x20, x20, #0x1
  42e6a8:	b	42e654 <wcrtomb@plt+0x29b14>
  42e6ac:	mov	w8, #0x3                   	// #3
  42e6b0:	cmp	x20, x28
  42e6b4:	b.cs	42e6d0 <wcrtomb@plt+0x29b90>  // b.hs, b.nlast
  42e6b8:	cmp	w8, #0x3
  42e6bc:	b.ne	42e6d0 <wcrtomb@plt+0x29b90>  // b.any
  42e6c0:	ldrb	w8, [x24, x20]
  42e6c4:	cmp	w8, #0x3b
  42e6c8:	mov	w8, #0x1                   	// #1
  42e6cc:	b.eq	42e600 <wcrtomb@plt+0x29ac0>  // b.none
  42e6d0:	sxtw	x21, w20
  42e6d4:	mov	w20, #0x20                  	// #32
  42e6d8:	mov	x25, x27
  42e6dc:	b	42ecf4 <wcrtomb@plt+0x2a1b4>
  42e6e0:	mov	w0, wzr
  42e6e4:	str	wzr, [x19, #192]
  42e6e8:	b	42ef7c <wcrtomb@plt+0x2a43c>
  42e6ec:	cbz	w21, 42ec90 <wcrtomb@plt+0x2a150>
  42e6f0:	add	x8, x19, #0xc8
  42e6f4:	add	x23, x19, #0xd0
  42e6f8:	mov	x25, x27
  42e6fc:	mov	x21, x26
  42e700:	stur	wzr, [x29, #-8]
  42e704:	stp	x8, x27, [sp]
  42e708:	add	x20, x21, #0x1
  42e70c:	cbz	x22, 42e724 <wcrtomb@plt+0x29be4>
  42e710:	add	x8, x24, x20
  42e714:	ldurb	w1, [x8, #-1]
  42e718:	mov	x0, x22
  42e71c:	bl	4047a0 <strchr@plt>
  42e720:	cbnz	x0, 42ee04 <wcrtomb@plt+0x2a2c4>
  42e724:	ldr	w8, [x19, #32]
  42e728:	tst	w8, #0x600
  42e72c:	b.eq	42e760 <wcrtomb@plt+0x29c20>  // b.none
  42e730:	add	x9, x24, x20
  42e734:	ldurb	w9, [x9, #-1]
  42e738:	cmp	w9, #0x5c
  42e73c:	b.ne	42e76c <wcrtomb@plt+0x29c2c>  // b.any
  42e740:	cmp	x28, x20
  42e744:	b.eq	42ecc0 <wcrtomb@plt+0x2a180>  // b.none
  42e748:	add	x8, x20, #0x2
  42e74c:	add	x9, x20, #0x1
  42e750:	cmp	x9, x28
  42e754:	mov	x20, x8
  42e758:	b.cc	42e70c <wcrtomb@plt+0x29bcc>  // b.lo, b.ul, b.last
  42e75c:	b	42ecc8 <wcrtomb@plt+0x2a188>
  42e760:	str	x23, [sp, #16]
  42e764:	sub	x23, x20, #0x1
  42e768:	b	42ea04 <wcrtomb@plt+0x29ec4>
  42e76c:	sub	x21, x20, #0x1
  42e770:	str	x23, [sp, #16]
  42e774:	tbz	w8, #9, 42e780 <wcrtomb@plt+0x29c40>
  42e778:	cmp	w9, #0x27
  42e77c:	b.eq	42e78c <wcrtomb@plt+0x29c4c>  // b.none
  42e780:	tbz	w8, #10, 42e7f8 <wcrtomb@plt+0x29cb8>
  42e784:	cmp	w9, #0x22
  42e788:	b.ne	42e7f8 <wcrtomb@plt+0x29cb8>  // b.any
  42e78c:	ldur	w9, [x29, #-8]
  42e790:	sub	x8, x20, x26
  42e794:	cbz	w9, 42e7a8 <wcrtomb@plt+0x29c68>
  42e798:	cbz	x25, 42e7a8 <wcrtomb@plt+0x29c68>
  42e79c:	ldr	w9, [x25, #16]
  42e7a0:	orr	w9, w9, #0x10
  42e7a4:	str	w9, [x25, #16]
  42e7a8:	cmp	x8, #0x1
  42e7ac:	b.eq	42e8e4 <wcrtomb@plt+0x29da4>  // b.none
  42e7b0:	mov	w0, #0x1                   	// #1
  42e7b4:	mov	w1, #0x28                  	// #40
  42e7b8:	bl	404410 <calloc@plt>
  42e7bc:	cbnz	x0, 42e8bc <wcrtomb@plt+0x29d7c>
  42e7c0:	bl	404a10 <__errno_location@plt>
  42e7c4:	mov	w8, #0xc                   	// #12
  42e7c8:	str	w8, [x0]
  42e7cc:	ldr	w8, [x19, #32]
  42e7d0:	mov	w9, #0x2                   	// #2
  42e7d4:	str	w9, [x19, #192]
  42e7d8:	tbnz	w8, #7, 42e800 <wcrtomb@plt+0x29cc0>
  42e7dc:	tbnz	w8, #4, 42e814 <wcrtomb@plt+0x29cd4>
  42e7e0:	tbnz	w8, #3, 42e8a0 <wcrtomb@plt+0x29d60>
  42e7e4:	mov	x0, x19
  42e7e8:	bl	42d484 <wcrtomb@plt+0x28944>
  42e7ec:	ldr	x25, [x23]
  42e7f0:	cbnz	x25, 42e948 <wcrtomb@plt+0x29e08>
  42e7f4:	b	42e8a8 <wcrtomb@plt+0x29d68>
  42e7f8:	mov	x23, x21
  42e7fc:	b	42ea04 <wcrtomb@plt+0x29ec4>
  42e800:	ldr	x8, [x19, #88]
  42e804:	mov	x0, x19
  42e808:	blr	x8
  42e80c:	ldr	w8, [x19, #32]
  42e810:	tbz	w8, #4, 42e7e0 <wcrtomb@plt+0x29ca0>
  42e814:	ldr	w8, [x19, #192]
  42e818:	mov	x25, x23
  42e81c:	ldr	x23, [x19, #96]
  42e820:	ldr	x9, [sp]
  42e824:	cmp	w8, #0x9
  42e828:	b.eq	42e884 <wcrtomb@plt+0x29d44>  // b.none
  42e82c:	cmp	w8, #0x1
  42e830:	b.ne	42e85c <wcrtomb@plt+0x29d1c>  // b.any
  42e834:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e838:	mov	w2, #0x5                   	// #5
  42e83c:	mov	x0, xzr
  42e840:	add	x1, x1, #0x751
  42e844:	bl	404900 <dcgettext@plt>
  42e848:	ldr	x8, [x19, #168]
  42e84c:	ldr	x2, [x19, #184]
  42e850:	ldrb	w1, [x8, x2]
  42e854:	blr	x23
  42e858:	b	42e894 <wcrtomb@plt+0x29d54>
  42e85c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42e860:	ldr	w9, [x9, #4008]
  42e864:	sxtw	x8, w8
  42e868:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e86c:	add	x1, x1, #0x743
  42e870:	cmp	w8, w9
  42e874:	b.ge	42e888 <wcrtomb@plt+0x29d48>  // b.tcont
  42e878:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42e87c:	add	x9, x9, #0xf60
  42e880:	add	x9, x9, x8, lsl #3
  42e884:	ldr	x1, [x9]
  42e888:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42e88c:	add	x0, x0, #0x7a4
  42e890:	blr	x23
  42e894:	ldr	w8, [x19, #32]
  42e898:	mov	x23, x25
  42e89c:	tbz	w8, #3, 42e7e4 <wcrtomb@plt+0x29ca4>
  42e8a0:	ldr	x25, [x23]
  42e8a4:	cbnz	x25, 42e948 <wcrtomb@plt+0x29e08>
  42e8a8:	ldr	x23, [sp, #16]
  42e8ac:	mov	x25, xzr
  42e8b0:	stp	xzr, xzr, [x23]
  42e8b4:	ldr	w8, [x19, #192]
  42e8b8:	cbnz	w8, 42ef78 <wcrtomb@plt+0x2a438>
  42e8bc:	mov	w8, #0x10                  	// #16
  42e8c0:	str	w8, [x0, #16]
  42e8c4:	add	x8, x25, #0x8
  42e8c8:	cmp	x25, #0x0
  42e8cc:	csel	x8, x23, x8, eq  // eq = none
  42e8d0:	stp	x26, x21, [x0, #24]
  42e8d4:	stp	x25, xzr, [x0]
  42e8d8:	str	x0, [x8]
  42e8dc:	str	x0, [sp, #8]
  42e8e0:	str	x0, [x19, #216]
  42e8e4:	ldr	x8, [x19, #176]
  42e8e8:	mov	w13, #0xc                   	// #12
  42e8ec:	cmp	x20, x8
  42e8f0:	b.cs	42eec0 <wcrtomb@plt+0x2a380>  // b.hs, b.nlast
  42e8f4:	ldr	x9, [x19, #168]
  42e8f8:	mov	x23, x20
  42e8fc:	add	x10, x9, x20
  42e900:	ldurb	w10, [x10, #-1]
  42e904:	ldrb	w11, [x9, x23]
  42e908:	cmp	w11, w10
  42e90c:	b.eq	42e960 <wcrtomb@plt+0x29e20>  // b.none
  42e910:	cmp	w10, #0x22
  42e914:	cset	w12, eq  // eq = none
  42e918:	cmp	w11, #0x5c
  42e91c:	cset	w11, eq  // eq = none
  42e920:	and	w11, w12, w11
  42e924:	add	x11, x23, x11
  42e928:	add	x23, x11, #0x1
  42e92c:	cmp	x23, x8
  42e930:	b.cc	42e904 <wcrtomb@plt+0x29dc4>  // b.lo, b.ul, b.last
  42e934:	b	42eec0 <wcrtomb@plt+0x2a380>
  42e938:	mov	x0, x25
  42e93c:	bl	404700 <free@plt>
  42e940:	mov	x25, x23
  42e944:	cbz	x23, 42e8a8 <wcrtomb@plt+0x29d68>
  42e948:	ldrb	w8, [x25, #16]
  42e94c:	ldr	x23, [x25, #8]
  42e950:	tbz	w8, #1, 42e938 <wcrtomb@plt+0x29df8>
  42e954:	ldr	x0, [x25, #24]
  42e958:	bl	404700 <free@plt>
  42e95c:	b	42e938 <wcrtomb@plt+0x29df8>
  42e960:	cmp	w10, #0x27
  42e964:	mov	w8, #0x4                   	// #4
  42e968:	mov	w0, #0x1                   	// #1
  42e96c:	mov	w1, #0x28                  	// #40
  42e970:	csel	w26, w13, w8, eq  // eq = none
  42e974:	bl	404410 <calloc@plt>
  42e978:	mov	w21, #0xc                   	// #12
  42e97c:	cbz	x0, 42e98c <wcrtomb@plt+0x29e4c>
  42e980:	ldp	x10, x9, [sp, #8]
  42e984:	mov	x25, x0
  42e988:	b	42e9d4 <wcrtomb@plt+0x29e94>
  42e98c:	bl	404a10 <__errno_location@plt>
  42e990:	str	w21, [x0]
  42e994:	ldr	w8, [x19, #32]
  42e998:	mov	w9, #0x2                   	// #2
  42e99c:	str	w9, [x19, #192]
  42e9a0:	tbnz	w8, #7, 42ebf4 <wcrtomb@plt+0x2a0b4>
  42e9a4:	tbnz	w8, #4, 42ec08 <wcrtomb@plt+0x2a0c8>
  42e9a8:	tbnz	w8, #3, 42e9b4 <wcrtomb@plt+0x29e74>
  42e9ac:	mov	x0, x19
  42e9b0:	bl	42d484 <wcrtomb@plt+0x28944>
  42e9b4:	ldr	x8, [sp, #16]
  42e9b8:	ldr	x21, [x8]
  42e9bc:	cbnz	x21, 42ea50 <wcrtomb@plt+0x29f10>
  42e9c0:	ldr	x9, [sp, #16]
  42e9c4:	mov	x10, xzr
  42e9c8:	stp	xzr, xzr, [x9]
  42e9cc:	ldr	w8, [x19, #192]
  42e9d0:	cbnz	w8, 42ef78 <wcrtomb@plt+0x2a438>
  42e9d4:	add	x8, x10, #0x8
  42e9d8:	cmp	x10, #0x0
  42e9dc:	csel	x8, x9, x8, eq  // eq = none
  42e9e0:	str	w26, [x25, #16]
  42e9e4:	stp	x20, x23, [x25, #24]
  42e9e8:	stp	x10, xzr, [x25]
  42e9ec:	str	x25, [x8]
  42e9f0:	mov	w8, #0x1                   	// #1
  42e9f4:	add	x26, x23, #0x1
  42e9f8:	str	x25, [x19, #216]
  42e9fc:	stur	w8, [x29, #-8]
  42ea00:	str	x25, [sp, #8]
  42ea04:	ldrb	w1, [x24, x23]
  42ea08:	cmp	w1, #0x24
  42ea0c:	b.ne	42ebcc <wcrtomb@plt+0x2a08c>  // b.any
  42ea10:	ldr	w8, [x19, #32]
  42ea14:	tbnz	w8, #6, 42eb04 <wcrtomb@plt+0x29fc4>
  42ea18:	add	x9, x23, x24
  42ea1c:	ldrb	w9, [x9, #1]
  42ea20:	cmp	w9, #0x7b
  42ea24:	b.ne	42eb04 <wcrtomb@plt+0x29fc4>  // b.any
  42ea28:	add	x21, x23, #0x2
  42ea2c:	cmp	x21, x28
  42ea30:	b.cs	42eb04 <wcrtomb@plt+0x29fc4>  // b.hs, b.nlast
  42ea34:	mov	w10, wzr
  42ea38:	mov	w9, #0x1                   	// #1
  42ea3c:	b	42ea80 <wcrtomb@plt+0x29f40>
  42ea40:	mov	x0, x21
  42ea44:	bl	404700 <free@plt>
  42ea48:	mov	x21, x25
  42ea4c:	cbz	x25, 42e9c0 <wcrtomb@plt+0x29e80>
  42ea50:	ldrb	w8, [x21, #16]
  42ea54:	ldr	x25, [x21, #8]
  42ea58:	tbz	w8, #1, 42ea40 <wcrtomb@plt+0x29f00>
  42ea5c:	ldr	x0, [x21, #24]
  42ea60:	bl	404700 <free@plt>
  42ea64:	b	42ea40 <wcrtomb@plt+0x29f00>
  42ea68:	ldrb	w10, [x24, x21]
  42ea6c:	cmp	w10, #0x27
  42ea70:	cset	w10, ne  // ne = any
  42ea74:	add	x21, x21, #0x1
  42ea78:	cmp	x21, x28
  42ea7c:	b.cs	42eb04 <wcrtomb@plt+0x29fc4>  // b.hs, b.nlast
  42ea80:	cmp	w10, #0x2
  42ea84:	b.eq	42eab8 <wcrtomb@plt+0x29f78>  // b.none
  42ea88:	cmp	w10, #0x1
  42ea8c:	b.eq	42ea68 <wcrtomb@plt+0x29f28>  // b.none
  42ea90:	cbnz	w10, 42ea74 <wcrtomb@plt+0x29f34>
  42ea94:	ldrb	w10, [x24, x21]
  42ea98:	cmp	w10, #0x7a
  42ea9c:	b.gt	42ead8 <wcrtomb@plt+0x29f98>
  42eaa0:	cmp	w10, #0x22
  42eaa4:	b.eq	42ead0 <wcrtomb@plt+0x29f90>  // b.none
  42eaa8:	cmp	w10, #0x27
  42eaac:	b.ne	42eafc <wcrtomb@plt+0x29fbc>  // b.any
  42eab0:	mov	w10, #0x1                   	// #1
  42eab4:	b	42ea74 <wcrtomb@plt+0x29f34>
  42eab8:	ldrb	w10, [x24, x21]
  42eabc:	cmp	w10, #0x22
  42eac0:	b.eq	42eafc <wcrtomb@plt+0x29fbc>  // b.none
  42eac4:	cmp	w10, #0x5c
  42eac8:	b.ne	42ead0 <wcrtomb@plt+0x29f90>  // b.any
  42eacc:	add	x21, x21, #0x1
  42ead0:	mov	w10, #0x2                   	// #2
  42ead4:	b	42ea74 <wcrtomb@plt+0x29f34>
  42ead8:	cmp	w10, #0x7d
  42eadc:	b.eq	42eaf4 <wcrtomb@plt+0x29fb4>  // b.none
  42eae0:	cmp	w10, #0x7b
  42eae4:	b.ne	42eafc <wcrtomb@plt+0x29fbc>  // b.any
  42eae8:	mov	w10, wzr
  42eaec:	add	x9, x9, #0x1
  42eaf0:	b	42ea74 <wcrtomb@plt+0x29f34>
  42eaf4:	subs	x9, x9, #0x1
  42eaf8:	b.eq	42ebe4 <wcrtomb@plt+0x2a0a4>  // b.none
  42eafc:	mov	w10, wzr
  42eb00:	b	42ea74 <wcrtomb@plt+0x29f34>
  42eb04:	tbnz	w8, #2, 42ebcc <wcrtomb@plt+0x2a08c>
  42eb08:	add	x8, x23, x24
  42eb0c:	ldrb	w8, [x8, #1]
  42eb10:	cmp	w8, #0x28
  42eb14:	b.ne	42ebcc <wcrtomb@plt+0x2a08c>  // b.any
  42eb18:	add	x21, x23, #0x2
  42eb1c:	cmp	x21, x28
  42eb20:	b.cs	42ebcc <wcrtomb@plt+0x2a08c>  // b.hs, b.nlast
  42eb24:	mov	w9, wzr
  42eb28:	mov	w8, #0x1                   	// #1
  42eb2c:	b	42eb48 <wcrtomb@plt+0x2a008>
  42eb30:	ldrb	w9, [x24, x21]
  42eb34:	cmp	w9, #0x27
  42eb38:	cset	w9, ne  // ne = any
  42eb3c:	add	x21, x21, #0x1
  42eb40:	cmp	x21, x28
  42eb44:	b.cs	42ebcc <wcrtomb@plt+0x2a08c>  // b.hs, b.nlast
  42eb48:	cmp	w9, #0x2
  42eb4c:	b.eq	42eb90 <wcrtomb@plt+0x2a050>  // b.none
  42eb50:	cmp	w9, #0x1
  42eb54:	b.eq	42eb30 <wcrtomb@plt+0x29ff0>  // b.none
  42eb58:	cbnz	w9, 42eb3c <wcrtomb@plt+0x29ffc>
  42eb5c:	ldrb	w9, [x24, x21]
  42eb60:	sub	w9, w9, #0x22
  42eb64:	cmp	w9, #0x7
  42eb68:	b.hi	42ebc4 <wcrtomb@plt+0x2a084>  // b.pmore
  42eb6c:	adrp	x12, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42eb70:	add	x12, x12, #0x588
  42eb74:	adr	x10, 42eb3c <wcrtomb@plt+0x29ffc>
  42eb78:	ldrb	w11, [x12, x9]
  42eb7c:	add	x10, x10, x11, lsl #2
  42eb80:	mov	w9, #0x2                   	// #2
  42eb84:	br	x10
  42eb88:	mov	w9, #0x1                   	// #1
  42eb8c:	b	42eb3c <wcrtomb@plt+0x29ffc>
  42eb90:	ldrb	w9, [x24, x21]
  42eb94:	cmp	w9, #0x22
  42eb98:	b.eq	42ebc4 <wcrtomb@plt+0x2a084>  // b.none
  42eb9c:	cmp	w9, #0x5c
  42eba0:	b.ne	42eba8 <wcrtomb@plt+0x2a068>  // b.any
  42eba4:	add	x21, x21, #0x1
  42eba8:	mov	w9, #0x2                   	// #2
  42ebac:	b	42eb3c <wcrtomb@plt+0x29ffc>
  42ebb0:	mov	w9, wzr
  42ebb4:	add	x8, x8, #0x1
  42ebb8:	b	42eb3c <wcrtomb@plt+0x29ffc>
  42ebbc:	subs	x8, x8, #0x1
  42ebc0:	b.eq	42ebe4 <wcrtomb@plt+0x2a0a4>  // b.none
  42ebc4:	mov	w9, wzr
  42ebc8:	b	42eb3c <wcrtomb@plt+0x29ffc>
  42ebcc:	ldur	w8, [x29, #-4]
  42ebd0:	cbnz	w8, 42ebe0 <wcrtomb@plt+0x2a0a0>
  42ebd4:	ldr	x0, [x19, #56]
  42ebd8:	bl	4047a0 <strchr@plt>
  42ebdc:	cbnz	x0, 42f074 <wcrtomb@plt+0x2a534>
  42ebe0:	add	x21, x23, #0x1
  42ebe4:	ldr	x23, [sp, #16]
  42ebe8:	cmp	x21, x28
  42ebec:	b.cc	42e708 <wcrtomb@plt+0x29bc8>  // b.lo, b.ul, b.last
  42ebf0:	b	42eccc <wcrtomb@plt+0x2a18c>
  42ebf4:	ldr	x8, [x19, #88]
  42ebf8:	mov	x0, x19
  42ebfc:	blr	x8
  42ec00:	ldr	w8, [x19, #32]
  42ec04:	tbz	w8, #4, 42e9a8 <wcrtomb@plt+0x29e68>
  42ec08:	ldr	w8, [x19, #192]
  42ec0c:	ldr	x21, [x19, #96]
  42ec10:	ldr	x9, [sp]
  42ec14:	cmp	w8, #0x9
  42ec18:	b.eq	42ec74 <wcrtomb@plt+0x2a134>  // b.none
  42ec1c:	cmp	w8, #0x1
  42ec20:	b.ne	42ec4c <wcrtomb@plt+0x2a10c>  // b.any
  42ec24:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ec28:	mov	w2, #0x5                   	// #5
  42ec2c:	mov	x0, xzr
  42ec30:	add	x1, x1, #0x751
  42ec34:	bl	404900 <dcgettext@plt>
  42ec38:	ldr	x8, [x19, #168]
  42ec3c:	ldr	x2, [x19, #184]
  42ec40:	ldrb	w1, [x8, x2]
  42ec44:	blr	x21
  42ec48:	b	42ec84 <wcrtomb@plt+0x2a144>
  42ec4c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42ec50:	ldr	w9, [x9, #4008]
  42ec54:	sxtw	x8, w8
  42ec58:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ec5c:	add	x1, x1, #0x743
  42ec60:	cmp	w8, w9
  42ec64:	b.ge	42ec78 <wcrtomb@plt+0x2a138>  // b.tcont
  42ec68:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42ec6c:	add	x9, x9, #0xf60
  42ec70:	add	x9, x9, x8, lsl #3
  42ec74:	ldr	x1, [x9]
  42ec78:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ec7c:	add	x0, x0, #0x7a4
  42ec80:	blr	x21
  42ec84:	ldr	w8, [x19, #32]
  42ec88:	tbz	w8, #3, 42e9ac <wcrtomb@plt+0x29e6c>
  42ec8c:	b	42e9b4 <wcrtomb@plt+0x29e74>
  42ec90:	ldr	x0, [x19, #56]
  42ec94:	ldrb	w1, [x24, x26]
  42ec98:	bl	4047a0 <strchr@plt>
  42ec9c:	cbz	x0, 42e6f0 <wcrtomb@plt+0x29bb0>
  42eca0:	tbnz	w20, #12, 42ed04 <wcrtomb@plt+0x2a1c4>
  42eca4:	ldrb	w8, [x19, #36]
  42eca8:	tbnz	w8, #7, 42ed04 <wcrtomb@plt+0x2a1c4>
  42ecac:	mov	w8, #0x100                 	// #256
  42ecb0:	bic	w20, w8, w20, lsr #3
  42ecb4:	mov	x25, x27
  42ecb8:	mov	x21, x26
  42ecbc:	b	42ecf4 <wcrtomb@plt+0x2a1b4>
  42ecc0:	mov	x21, x28
  42ecc4:	b	42eccc <wcrtomb@plt+0x2a18c>
  42ecc8:	sub	x21, x8, #0x1
  42eccc:	ldur	w8, [x29, #-8]
  42ecd0:	mov	w20, wzr
  42ecd4:	cbz	w8, 42ecf4 <wcrtomb@plt+0x2a1b4>
  42ecd8:	cmp	x21, x26
  42ecdc:	b.ls	42ecf4 <wcrtomb@plt+0x2a1b4>  // b.plast
  42ece0:	cbz	x25, 42ecf4 <wcrtomb@plt+0x2a1b4>
  42ece4:	ldr	w8, [x25, #16]
  42ece8:	mov	w20, wzr
  42ecec:	orr	w8, w8, #0x10
  42ecf0:	str	w8, [x25, #16]
  42ecf4:	tbnz	w20, #8, 42ed10 <wcrtomb@plt+0x2a1d0>
  42ecf8:	cmp	x21, x26
  42ecfc:	b.eq	42ed50 <wcrtomb@plt+0x2a210>  // b.none
  42ed00:	b	42ed10 <wcrtomb@plt+0x2a1d0>
  42ed04:	add	x21, x26, #0x1
  42ed08:	mov	w20, #0x40                  	// #64
  42ed0c:	mov	x25, x27
  42ed10:	mov	w0, #0x1                   	// #1
  42ed14:	mov	w1, #0x28                  	// #40
  42ed18:	bl	404410 <calloc@plt>
  42ed1c:	cbz	x0, 42ed90 <wcrtomb@plt+0x2a250>
  42ed20:	mov	w8, #0xfd                  	// #253
  42ed24:	add	x9, x19, #0xd0
  42ed28:	add	x10, x25, #0x8
  42ed2c:	cmp	x25, #0x0
  42ed30:	stp	x26, x21, [x0, #24]
  42ed34:	and	w8, w20, w8
  42ed38:	csel	x9, x9, x10, eq  // eq = none
  42ed3c:	mov	x26, x21
  42ed40:	stp	x25, xzr, [x0]
  42ed44:	str	w8, [x0, #16]
  42ed48:	str	x0, [x9]
  42ed4c:	str	x0, [x19, #216]
  42ed50:	ldrb	w8, [x19, #35]
  42ed54:	str	x26, [x19, #184]
  42ed58:	tbnz	w8, #5, 42ed88 <wcrtomb@plt+0x2a248>
  42ed5c:	ldur	w8, [x29, #-4]
  42ed60:	cbz	w8, 42ee64 <wcrtomb@plt+0x2a324>
  42ed64:	cbnz	x27, 42ed70 <wcrtomb@plt+0x2a230>
  42ed68:	ldr	x27, [x19, #208]
  42ed6c:	cbz	x27, 42ee64 <wcrtomb@plt+0x2a324>
  42ed70:	ldr	w8, [x27, #16]
  42ed74:	orr	w8, w8, #0x4
  42ed78:	str	w8, [x27, #16]
  42ed7c:	ldr	x27, [x27, #8]
  42ed80:	cbnz	x27, 42ed70 <wcrtomb@plt+0x2a230>
  42ed84:	b	42ee64 <wcrtomb@plt+0x2a324>
  42ed88:	mov	w0, wzr
  42ed8c:	b	42ef7c <wcrtomb@plt+0x2a43c>
  42ed90:	bl	404a10 <__errno_location@plt>
  42ed94:	mov	w8, #0xc                   	// #12
  42ed98:	str	w8, [x0]
  42ed9c:	ldr	w8, [x19, #32]
  42eda0:	mov	w9, #0x2                   	// #2
  42eda4:	str	w9, [x19, #192]
  42eda8:	tbnz	w8, #7, 42ee6c <wcrtomb@plt+0x2a32c>
  42edac:	tbnz	w8, #4, 42ee80 <wcrtomb@plt+0x2a340>
  42edb0:	tbnz	w8, #3, 42edbc <wcrtomb@plt+0x2a27c>
  42edb4:	mov	x0, x19
  42edb8:	bl	42d484 <wcrtomb@plt+0x28944>
  42edbc:	mov	x23, x19
  42edc0:	ldr	x22, [x23, #208]!
  42edc4:	cbnz	x22, 42edec <wcrtomb@plt+0x2a2ac>
  42edc8:	stp	xzr, xzr, [x23]
  42edcc:	ldr	w8, [x19, #192]
  42edd0:	cbnz	w8, 42ef78 <wcrtomb@plt+0x2a438>
  42edd4:	mov	x25, xzr
  42edd8:	b	42ed20 <wcrtomb@plt+0x2a1e0>
  42eddc:	mov	x0, x22
  42ede0:	bl	404700 <free@plt>
  42ede4:	mov	x22, x24
  42ede8:	cbz	x24, 42edc8 <wcrtomb@plt+0x2a288>
  42edec:	ldrb	w8, [x22, #16]
  42edf0:	ldr	x24, [x22, #8]
  42edf4:	tbz	w8, #1, 42eddc <wcrtomb@plt+0x2a29c>
  42edf8:	ldr	x0, [x22, #24]
  42edfc:	bl	404700 <free@plt>
  42ee00:	b	42eddc <wcrtomb@plt+0x2a29c>
  42ee04:	sub	x22, x20, #0x1
  42ee08:	sub	x8, x20, x26
  42ee0c:	mov	x21, x20
  42ee10:	cmp	x20, x28
  42ee14:	b.cs	42ee28 <wcrtomb@plt+0x2a2e8>  // b.hs, b.nlast
  42ee18:	ldrb	w9, [x24, x21]
  42ee1c:	add	x20, x21, #0x1
  42ee20:	cmp	w9, #0xa
  42ee24:	b.ne	42ee0c <wcrtomb@plt+0x2a2cc>  // b.any
  42ee28:	cmp	x8, #0x1
  42ee2c:	b.eq	42ee60 <wcrtomb@plt+0x2a320>  // b.none
  42ee30:	mov	w0, #0x1                   	// #1
  42ee34:	mov	w1, #0x28                  	// #40
  42ee38:	bl	404410 <calloc@plt>
  42ee3c:	cbz	x0, 42ef34 <wcrtomb@plt+0x2a3f4>
  42ee40:	add	x8, x25, #0x8
  42ee44:	cmp	x25, #0x0
  42ee48:	csel	x8, x23, x8, eq  // eq = none
  42ee4c:	str	wzr, [x0, #16]
  42ee50:	stp	x26, x22, [x0, #24]
  42ee54:	stp	x25, xzr, [x0]
  42ee58:	str	x0, [x8]
  42ee5c:	str	x0, [x19, #216]
  42ee60:	str	x21, [x19, #184]
  42ee64:	mov	w0, #0x1                   	// #1
  42ee68:	b	42ef7c <wcrtomb@plt+0x2a43c>
  42ee6c:	ldr	x8, [x19, #88]
  42ee70:	mov	x0, x19
  42ee74:	blr	x8
  42ee78:	ldr	w8, [x19, #32]
  42ee7c:	tbz	w8, #4, 42edb0 <wcrtomb@plt+0x2a270>
  42ee80:	ldr	w8, [x19, #192]
  42ee84:	ldr	x22, [x19, #96]
  42ee88:	cmp	w8, #0x9
  42ee8c:	b.eq	42ef04 <wcrtomb@plt+0x2a3c4>  // b.none
  42ee90:	cmp	w8, #0x1
  42ee94:	b.ne	42ef0c <wcrtomb@plt+0x2a3cc>  // b.any
  42ee98:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ee9c:	add	x1, x1, #0x751
  42eea0:	mov	w2, #0x5                   	// #5
  42eea4:	mov	x0, xzr
  42eea8:	bl	404900 <dcgettext@plt>
  42eeac:	ldr	x8, [x19, #168]
  42eeb0:	ldr	x2, [x19, #184]
  42eeb4:	ldrb	w1, [x8, x2]
  42eeb8:	blr	x22
  42eebc:	b	42efd8 <wcrtomb@plt+0x2a498>
  42eec0:	ldrb	w8, [x19, #32]
  42eec4:	mov	w9, #0x1                   	// #1
  42eec8:	str	x21, [x19, #184]
  42eecc:	str	w9, [x19, #192]
  42eed0:	tbz	w8, #4, 42ef78 <wcrtomb@plt+0x2a438>
  42eed4:	ldr	x20, [x19, #96]
  42eed8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42eedc:	add	x1, x1, #0x751
  42eee0:	mov	w2, #0x5                   	// #5
  42eee4:	mov	x0, xzr
  42eee8:	bl	404900 <dcgettext@plt>
  42eeec:	ldr	x8, [x19, #168]
  42eef0:	ldr	x2, [x19, #184]
  42eef4:	ldrb	w1, [x8, x2]
  42eef8:	blr	x20
  42eefc:	mov	w0, #0x2                   	// #2
  42ef00:	b	42ef7c <wcrtomb@plt+0x2a43c>
  42ef04:	add	x8, x19, #0xc8
  42ef08:	b	42ef2c <wcrtomb@plt+0x2a3ec>
  42ef0c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42ef10:	ldr	w9, [x9, #4008]
  42ef14:	sxtw	x8, w8
  42ef18:	cmp	w8, w9
  42ef1c:	b.ge	42efc4 <wcrtomb@plt+0x2a484>  // b.tcont
  42ef20:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42ef24:	add	x9, x9, #0xf60
  42ef28:	add	x8, x9, x8, lsl #3
  42ef2c:	ldr	x1, [x8]
  42ef30:	b	42efcc <wcrtomb@plt+0x2a48c>
  42ef34:	bl	404a10 <__errno_location@plt>
  42ef38:	mov	w8, #0xc                   	// #12
  42ef3c:	str	w8, [x0]
  42ef40:	ldr	w8, [x19, #32]
  42ef44:	mov	w9, #0x2                   	// #2
  42ef48:	str	w9, [x19, #192]
  42ef4c:	tbnz	w8, #7, 42efe4 <wcrtomb@plt+0x2a4a4>
  42ef50:	tbnz	w8, #4, 42eff8 <wcrtomb@plt+0x2a4b8>
  42ef54:	tbnz	w8, #3, 42ef60 <wcrtomb@plt+0x2a420>
  42ef58:	mov	x0, x19
  42ef5c:	bl	42d484 <wcrtomb@plt+0x28944>
  42ef60:	ldr	x20, [x23]
  42ef64:	mov	x24, x23
  42ef68:	cbnz	x20, 42efac <wcrtomb@plt+0x2a46c>
  42ef6c:	stp	xzr, xzr, [x24]
  42ef70:	ldr	w8, [x19, #192]
  42ef74:	cbz	w8, 42f038 <wcrtomb@plt+0x2a4f8>
  42ef78:	mov	w0, #0x2                   	// #2
  42ef7c:	ldp	x20, x19, [sp, #112]
  42ef80:	ldp	x22, x21, [sp, #96]
  42ef84:	ldp	x24, x23, [sp, #80]
  42ef88:	ldp	x26, x25, [sp, #64]
  42ef8c:	ldp	x28, x27, [sp, #48]
  42ef90:	ldp	x29, x30, [sp, #32]
  42ef94:	add	sp, sp, #0x80
  42ef98:	ret
  42ef9c:	mov	x0, x20
  42efa0:	bl	404700 <free@plt>
  42efa4:	mov	x20, x23
  42efa8:	cbz	x23, 42ef6c <wcrtomb@plt+0x2a42c>
  42efac:	ldrb	w8, [x20, #16]
  42efb0:	ldr	x23, [x20, #8]
  42efb4:	tbz	w8, #1, 42ef9c <wcrtomb@plt+0x2a45c>
  42efb8:	ldr	x0, [x20, #24]
  42efbc:	bl	404700 <free@plt>
  42efc0:	b	42ef9c <wcrtomb@plt+0x2a45c>
  42efc4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42efc8:	add	x1, x1, #0x743
  42efcc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42efd0:	add	x0, x0, #0x7a4
  42efd4:	blr	x22
  42efd8:	ldr	w8, [x19, #32]
  42efdc:	tbz	w8, #3, 42edb4 <wcrtomb@plt+0x2a274>
  42efe0:	b	42edbc <wcrtomb@plt+0x2a27c>
  42efe4:	ldr	x8, [x19, #88]
  42efe8:	mov	x0, x19
  42efec:	blr	x8
  42eff0:	ldr	w8, [x19, #32]
  42eff4:	tbz	w8, #4, 42ef54 <wcrtomb@plt+0x2a414>
  42eff8:	ldr	w8, [x19, #192]
  42effc:	ldr	x20, [x19, #96]
  42f000:	cmp	w8, #0x9
  42f004:	b.eq	42f068 <wcrtomb@plt+0x2a528>  // b.none
  42f008:	cmp	w8, #0x1
  42f00c:	b.ne	42f044 <wcrtomb@plt+0x2a504>  // b.any
  42f010:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42f014:	add	x1, x1, #0x751
  42f018:	mov	w2, #0x5                   	// #5
  42f01c:	mov	x0, xzr
  42f020:	bl	404900 <dcgettext@plt>
  42f024:	ldr	x8, [x19, #168]
  42f028:	ldr	x2, [x19, #184]
  42f02c:	ldrb	w1, [x8, x2]
  42f030:	blr	x20
  42f034:	b	42f090 <wcrtomb@plt+0x2a550>
  42f038:	mov	x23, x24
  42f03c:	mov	x25, xzr
  42f040:	b	42ee40 <wcrtomb@plt+0x2a300>
  42f044:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42f048:	ldr	w9, [x9, #4008]
  42f04c:	sxtw	x8, w8
  42f050:	cmp	w8, w9
  42f054:	b.ge	42f07c <wcrtomb@plt+0x2a53c>  // b.tcont
  42f058:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42f05c:	add	x9, x9, #0xf60
  42f060:	add	x8, x9, x8, lsl #3
  42f064:	str	x8, [sp]
  42f068:	ldr	x8, [sp]
  42f06c:	ldr	x1, [x8]
  42f070:	b	42f084 <wcrtomb@plt+0x2a544>
  42f074:	mov	x21, x23
  42f078:	b	42eccc <wcrtomb@plt+0x2a18c>
  42f07c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42f080:	add	x1, x1, #0x743
  42f084:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42f088:	add	x0, x0, #0x7a4
  42f08c:	blr	x20
  42f090:	ldr	w8, [x19, #32]
  42f094:	tbz	w8, #3, 42ef58 <wcrtomb@plt+0x2a418>
  42f098:	b	42ef60 <wcrtomb@plt+0x2a420>
  42f09c:	stp	x29, x30, [sp, #-96]!
  42f0a0:	stp	x28, x27, [sp, #16]
  42f0a4:	stp	x26, x25, [sp, #32]
  42f0a8:	stp	x24, x23, [sp, #48]
  42f0ac:	stp	x22, x21, [sp, #64]
  42f0b0:	stp	x20, x19, [sp, #80]
  42f0b4:	ldr	x20, [x0, #208]
  42f0b8:	mov	x29, sp
  42f0bc:	cbz	x20, 42f1b0 <wcrtomb@plt+0x2a670>
  42f0c0:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  42f0c4:	mov	x19, x0
  42f0c8:	mov	w21, wzr
  42f0cc:	mov	w26, #0x2d                  	// #45
  42f0d0:	add	x22, x22, #0x988
  42f0d4:	mov	w28, #0x71                  	// #113
  42f0d8:	mov	w23, #0x45                  	// #69
  42f0dc:	mov	w24, #0x6a                  	// #106
  42f0e0:	mov	w25, #0x73                  	// #115
  42f0e4:	mov	w27, #0x64                  	// #100
  42f0e8:	b	42f124 <wcrtomb@plt+0x2a5e4>
  42f0ec:	ldr	w9, [x20, #32]
  42f0f0:	ldr	x10, [x20, #24]
  42f0f4:	ldr	x11, [x19, #168]
  42f0f8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42f0fc:	add	x0, x0, #0x805
  42f100:	sub	w6, w9, w10
  42f104:	add	x7, x11, x10
  42f108:	mov	w2, w21
  42f10c:	mov	x3, x20
  42f110:	mov	x5, x22
  42f114:	blr	x8
  42f118:	ldr	x20, [x20, #8]
  42f11c:	add	w21, w21, #0x1
  42f120:	cbz	x20, 42f1b0 <wcrtomb@plt+0x2a670>
  42f124:	ldr	w4, [x20, #16]
  42f128:	mov	w9, #0x6e                  	// #110
  42f12c:	mov	w10, #0x77                  	// #119
  42f130:	ldr	x8, [x19, #104]
  42f134:	tst	w4, #0x1
  42f138:	csel	w9, w26, w9, eq  // eq = none
  42f13c:	tst	w4, #0x2
  42f140:	csel	w9, w9, w10, eq  // eq = none
  42f144:	tst	w4, #0x4
  42f148:	ldr	w1, [x19, #224]
  42f14c:	strb	w9, [x22]
  42f150:	csel	w9, w26, w28, eq  // eq = none
  42f154:	tst	w4, #0x8
  42f158:	strb	w9, [x22, #1]
  42f15c:	csel	w9, w26, w23, eq  // eq = none
  42f160:	tst	w4, #0x10
  42f164:	strb	w9, [x22, #2]
  42f168:	csel	w9, w26, w24, eq  // eq = none
  42f16c:	tst	w4, #0x20
  42f170:	strb	w9, [x22, #3]
  42f174:	csel	w9, w26, w25, eq  // eq = none
  42f178:	tst	w4, #0x40
  42f17c:	strb	w9, [x22, #4]
  42f180:	csel	w9, w26, w27, eq  // eq = none
  42f184:	strb	w9, [x22, #5]
  42f188:	strb	wzr, [x22, #6]
  42f18c:	tbz	w4, #1, 42f0ec <wcrtomb@plt+0x2a5ac>
  42f190:	ldr	x6, [x20, #24]
  42f194:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42f198:	add	x0, x0, #0x7e6
  42f19c:	mov	w2, w21
  42f1a0:	mov	x3, x20
  42f1a4:	mov	x5, x22
  42f1a8:	blr	x8
  42f1ac:	b	42f118 <wcrtomb@plt+0x2a5d8>
  42f1b0:	ldp	x20, x19, [sp, #80]
  42f1b4:	ldp	x22, x21, [sp, #64]
  42f1b8:	ldp	x24, x23, [sp, #48]
  42f1bc:	ldp	x26, x25, [sp, #32]
  42f1c0:	ldp	x28, x27, [sp, #16]
  42f1c4:	ldp	x29, x30, [sp], #96
  42f1c8:	ret
  42f1cc:	stp	x29, x30, [sp, #-48]!
  42f1d0:	stp	x22, x21, [sp, #16]
  42f1d4:	stp	x20, x19, [sp, #32]
  42f1d8:	ldr	x8, [x0, #208]
  42f1dc:	mov	x29, sp
  42f1e0:	cbz	x8, 42f33c <wcrtomb@plt+0x2a7fc>
  42f1e4:	mov	x10, #0x600                 	// #1536
  42f1e8:	mov	x19, x0
  42f1ec:	mov	w9, #0x1                   	// #1
  42f1f0:	movk	x10, #0x1, lsl #32
  42f1f4:	b	42f1fc <wcrtomb@plt+0x2a6bc>
  42f1f8:	cbz	x8, 42f2a4 <wcrtomb@plt+0x2a764>
  42f1fc:	ldrb	w11, [x8, #16]
  42f200:	tbnz	w11, #2, 42f23c <wcrtomb@plt+0x2a6fc>
  42f204:	ldp	x11, x12, [x8, #24]
  42f208:	cmp	x11, x12
  42f20c:	b.cs	42f238 <wcrtomb@plt+0x2a6f8>  // b.hs, b.nlast
  42f210:	ldr	x13, [x19, #168]
  42f214:	ldrb	w14, [x13, x11]
  42f218:	cmp	w14, #0x20
  42f21c:	b.hi	42f238 <wcrtomb@plt+0x2a6f8>  // b.pmore
  42f220:	lsl	x14, x9, x14
  42f224:	tst	x14, x10
  42f228:	b.eq	42f238 <wcrtomb@plt+0x2a6f8>  // b.none
  42f22c:	add	x11, x11, #0x1
  42f230:	cmp	x11, x12
  42f234:	b.cc	42f214 <wcrtomb@plt+0x2a6d4>  // b.lo, b.ul, b.last
  42f238:	str	x11, [x8, #24]
  42f23c:	mov	x11, x8
  42f240:	ldr	x8, [x8, #8]
  42f244:	ldr	w12, [x11, #16]
  42f248:	cbz	x8, 42f250 <wcrtomb@plt+0x2a710>
  42f24c:	tbnz	w12, #4, 42f23c <wcrtomb@plt+0x2a6fc>
  42f250:	tbnz	w12, #2, 42f1f8 <wcrtomb@plt+0x2a6b8>
  42f254:	ldp	x14, x13, [x11, #24]
  42f258:	cmp	x13, x14
  42f25c:	b.ls	42f28c <wcrtomb@plt+0x2a74c>  // b.plast
  42f260:	ldr	x15, [x19, #168]
  42f264:	sub	x15, x15, #0x1
  42f268:	ldrb	w16, [x15, x13]
  42f26c:	cmp	w16, #0x20
  42f270:	b.hi	42f28c <wcrtomb@plt+0x2a74c>  // b.pmore
  42f274:	lsl	x16, x9, x16
  42f278:	tst	x16, x10
  42f27c:	b.eq	42f28c <wcrtomb@plt+0x2a74c>  // b.none
  42f280:	sub	x13, x13, #0x1
  42f284:	cmp	x13, x14
  42f288:	b.hi	42f268 <wcrtomb@plt+0x2a728>  // b.pmore
  42f28c:	cmp	x14, x13
  42f290:	str	x13, [x11, #32]
  42f294:	b.ne	42f1f8 <wcrtomb@plt+0x2a6b8>  // b.any
  42f298:	orr	w12, w12, #0x1
  42f29c:	str	w12, [x11, #16]
  42f2a0:	b	42f1f8 <wcrtomb@plt+0x2a6b8>
  42f2a4:	ldr	x20, [x19, #208]
  42f2a8:	cbz	x20, 42f33c <wcrtomb@plt+0x2a7fc>
  42f2ac:	add	x21, x19, #0xd8
  42f2b0:	b	42f2c4 <wcrtomb@plt+0x2a784>
  42f2b4:	mov	x0, x20
  42f2b8:	bl	404700 <free@plt>
  42f2bc:	mov	x20, x22
  42f2c0:	cbz	x22, 42f33c <wcrtomb@plt+0x2a7fc>
  42f2c4:	ldr	w8, [x20, #16]
  42f2c8:	ldr	x22, [x20, #8]
  42f2cc:	tbz	w8, #6, 42f2e8 <wcrtomb@plt+0x2a7a8>
  42f2d0:	ldr	x9, [x20]
  42f2d4:	cbz	x9, 42f2e8 <wcrtomb@plt+0x2a7a8>
  42f2d8:	ldr	w8, [x9, #16]
  42f2dc:	and	w8, w8, #0xffffffef
  42f2e0:	str	w8, [x9, #16]
  42f2e4:	ldr	w8, [x20, #16]
  42f2e8:	tbz	w8, #0, 42f2bc <wcrtomb@plt+0x2a77c>
  42f2ec:	ldr	x9, [x20]
  42f2f0:	cbz	x9, 42f314 <wcrtomb@plt+0x2a7d4>
  42f2f4:	str	x22, [x9, #8]
  42f2f8:	ldr	x10, [x20, #8]
  42f2fc:	cbnz	x10, 42f324 <wcrtomb@plt+0x2a7e4>
  42f300:	ldr	w8, [x9, #16]
  42f304:	and	w8, w8, #0xffffffef
  42f308:	str	w8, [x9, #16]
  42f30c:	ldr	w8, [x20, #16]
  42f310:	b	42f320 <wcrtomb@plt+0x2a7e0>
  42f314:	mov	x10, x22
  42f318:	str	x22, [x19, #208]
  42f31c:	cbnz	x22, 42f324 <wcrtomb@plt+0x2a7e4>
  42f320:	mov	x10, x21
  42f324:	str	x9, [x10]
  42f328:	stp	xzr, xzr, [x20]
  42f32c:	tbz	w8, #1, 42f2b4 <wcrtomb@plt+0x2a774>
  42f330:	ldr	x0, [x20, #24]
  42f334:	bl	404700 <free@plt>
  42f338:	b	42f2b4 <wcrtomb@plt+0x2a774>
  42f33c:	ldp	x20, x19, [sp, #32]
  42f340:	ldp	x22, x21, [sp, #16]
  42f344:	mov	w0, wzr
  42f348:	ldp	x29, x30, [sp], #48
  42f34c:	ret
  42f350:	stp	x29, x30, [sp, #-48]!
  42f354:	stp	x22, x21, [sp, #16]
  42f358:	stp	x20, x19, [sp, #32]
  42f35c:	ldr	x1, [x0, #208]
  42f360:	mov	x29, sp
  42f364:	cbz	x1, 42f448 <wcrtomb@plt+0x2a908>
  42f368:	adrp	x20, 430000 <wcrtomb@plt+0x2b4c0>
  42f36c:	adrp	x21, 430000 <wcrtomb@plt+0x2b4c0>
  42f370:	mov	x19, x0
  42f374:	add	x20, x20, #0xa7c
  42f378:	add	x21, x21, #0xa88
  42f37c:	b	42f388 <wcrtomb@plt+0x2a848>
  42f380:	mov	x1, x22
  42f384:	cbz	x22, 42f3b0 <wcrtomb@plt+0x2a870>
  42f388:	ldrb	w8, [x1, #16]
  42f38c:	ldr	x22, [x1, #8]
  42f390:	tbnz	w8, #3, 42f380 <wcrtomb@plt+0x2a840>
  42f394:	mov	x0, x19
  42f398:	mov	x2, x20
  42f39c:	mov	x3, x21
  42f3a0:	bl	430860 <wcrtomb@plt+0x2bd20>
  42f3a4:	cbz	w0, 42f380 <wcrtomb@plt+0x2a840>
  42f3a8:	mov	w0, #0x1                   	// #1
  42f3ac:	b	42f44c <wcrtomb@plt+0x2a90c>
  42f3b0:	ldr	x20, [x19, #208]
  42f3b4:	cbz	x20, 42f448 <wcrtomb@plt+0x2a908>
  42f3b8:	add	x21, x19, #0xd8
  42f3bc:	b	42f3d0 <wcrtomb@plt+0x2a890>
  42f3c0:	mov	x0, x20
  42f3c4:	bl	404700 <free@plt>
  42f3c8:	mov	x20, x22
  42f3cc:	cbz	x22, 42f448 <wcrtomb@plt+0x2a908>
  42f3d0:	ldr	w8, [x20, #16]
  42f3d4:	ldr	x22, [x20, #8]
  42f3d8:	tbz	w8, #6, 42f3f4 <wcrtomb@plt+0x2a8b4>
  42f3dc:	ldr	x9, [x20]
  42f3e0:	cbz	x9, 42f3f4 <wcrtomb@plt+0x2a8b4>
  42f3e4:	ldr	w8, [x9, #16]
  42f3e8:	and	w8, w8, #0xffffffef
  42f3ec:	str	w8, [x9, #16]
  42f3f0:	ldr	w8, [x20, #16]
  42f3f4:	tbz	w8, #0, 42f3c8 <wcrtomb@plt+0x2a888>
  42f3f8:	ldr	x9, [x20]
  42f3fc:	cbz	x9, 42f420 <wcrtomb@plt+0x2a8e0>
  42f400:	str	x22, [x9, #8]
  42f404:	ldr	x10, [x20, #8]
  42f408:	cbnz	x10, 42f430 <wcrtomb@plt+0x2a8f0>
  42f40c:	ldr	w8, [x9, #16]
  42f410:	and	w8, w8, #0xffffffef
  42f414:	str	w8, [x9, #16]
  42f418:	ldr	w8, [x20, #16]
  42f41c:	b	42f42c <wcrtomb@plt+0x2a8ec>
  42f420:	mov	x10, x22
  42f424:	str	x22, [x19, #208]
  42f428:	cbnz	x22, 42f430 <wcrtomb@plt+0x2a8f0>
  42f42c:	mov	x10, x21
  42f430:	str	x9, [x10]
  42f434:	stp	xzr, xzr, [x20]
  42f438:	tbz	w8, #1, 42f3c0 <wcrtomb@plt+0x2a880>
  42f43c:	ldr	x0, [x20, #24]
  42f440:	bl	404700 <free@plt>
  42f444:	b	42f3c0 <wcrtomb@plt+0x2a880>
  42f448:	mov	w0, wzr
  42f44c:	ldp	x20, x19, [sp, #32]
  42f450:	ldp	x22, x21, [sp, #16]
  42f454:	ldp	x29, x30, [sp], #48
  42f458:	ret
  42f45c:	sub	sp, sp, #0x80
  42f460:	stp	x29, x30, [sp, #32]
  42f464:	add	x29, sp, #0x20
  42f468:	stp	x28, x27, [sp, #48]
  42f46c:	stp	x26, x25, [sp, #64]
  42f470:	stp	x24, x23, [sp, #80]
  42f474:	stp	x22, x21, [sp, #96]
  42f478:	stp	x20, x19, [sp, #112]
  42f47c:	stur	x0, [x29, #-8]
  42f480:	ldr	x27, [x0, #208]!
  42f484:	cbz	x27, 42f618 <wcrtomb@plt+0x2aad8>
  42f488:	adrp	x26, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42f48c:	mov	x20, xzr
  42f490:	add	x26, x26, #0x66
  42f494:	stp	x0, xzr, [sp, #8]
  42f498:	b	42f4b0 <wcrtomb@plt+0x2a970>
  42f49c:	orr	w8, w8, #0x2
  42f4a0:	str	x21, [x27, #24]
  42f4a4:	str	w8, [x27, #16]
  42f4a8:	ldr	x27, [x27, #8]
  42f4ac:	cbz	x27, 42f61c <wcrtomb@plt+0x2aadc>
  42f4b0:	ldr	w8, [x27, #16]
  42f4b4:	tbnz	w8, #2, 42f4a8 <wcrtomb@plt+0x2a968>
  42f4b8:	mov	x28, x26
  42f4bc:	tbnz	w8, #0, 42f4dc <wcrtomb@plt+0x2a99c>
  42f4c0:	tbnz	w8, #1, 42f4d8 <wcrtomb@plt+0x2a998>
  42f4c4:	ldur	x9, [x29, #-8]
  42f4c8:	ldr	x10, [x27, #24]
  42f4cc:	ldr	x9, [x9, #168]
  42f4d0:	add	x28, x9, x10
  42f4d4:	b	42f4dc <wcrtomb@plt+0x2a99c>
  42f4d8:	ldr	x28, [x27, #24]
  42f4dc:	ldrb	w9, [x28]
  42f4e0:	cmp	w9, #0x7e
  42f4e4:	b.ne	42f4a8 <wcrtomb@plt+0x2a968>  // b.any
  42f4e8:	tbnz	w8, #0, 42f4fc <wcrtomb@plt+0x2a9bc>
  42f4ec:	tbnz	w8, #1, 42f578 <wcrtomb@plt+0x2aa38>
  42f4f0:	ldp	x9, x8, [x27, #24]
  42f4f4:	sub	x21, x8, x9
  42f4f8:	b	42f584 <wcrtomb@plt+0x2aa44>
  42f4fc:	mov	x21, xzr
  42f500:	bl	404070 <getuid@plt>
  42f504:	bl	404670 <getpwuid@plt>
  42f508:	mov	x23, x0
  42f50c:	mov	w22, #0x1                   	// #1
  42f510:	cbz	x23, 42f4a8 <wcrtomb@plt+0x2a968>
  42f514:	ldr	x0, [x23, #32]
  42f518:	bl	403f40 <strlen@plt>
  42f51c:	sub	x19, x21, x22
  42f520:	add	x25, x0, x19
  42f524:	mov	x24, x0
  42f528:	mov	x0, x25
  42f52c:	bl	404250 <malloc@plt>
  42f530:	cbz	x0, 42f648 <wcrtomb@plt+0x2ab08>
  42f534:	ldr	x1, [x23, #32]
  42f538:	mov	x2, x24
  42f53c:	mov	x21, x0
  42f540:	add	x23, x25, x0
  42f544:	bl	403ec0 <memcpy@plt>
  42f548:	add	x8, x28, x22
  42f54c:	add	x0, x21, x24
  42f550:	add	x1, x8, #0x1
  42f554:	sub	x2, x19, #0x1
  42f558:	bl	403ec0 <memcpy@plt>
  42f55c:	sturb	wzr, [x23, #-1]
  42f560:	ldr	w8, [x27, #16]
  42f564:	tbz	w8, #1, 42f49c <wcrtomb@plt+0x2a95c>
  42f568:	ldr	x0, [x27, #24]
  42f56c:	bl	404700 <free@plt>
  42f570:	ldr	w8, [x27, #16]
  42f574:	b	42f49c <wcrtomb@plt+0x2a95c>
  42f578:	ldr	x0, [x27, #24]
  42f57c:	bl	403f40 <strlen@plt>
  42f580:	mov	x21, x0
  42f584:	mov	w22, #0x1                   	// #1
  42f588:	cmp	x21, #0x2
  42f58c:	b.cc	42f5ac <wcrtomb@plt+0x2aa6c>  // b.lo, b.ul, b.last
  42f590:	ldrb	w8, [x28, x22]
  42f594:	cmp	w8, #0x2f
  42f598:	b.eq	42f5ac <wcrtomb@plt+0x2aa6c>  // b.none
  42f59c:	add	x22, x22, #0x1
  42f5a0:	cmp	x21, x22
  42f5a4:	b.ne	42f590 <wcrtomb@plt+0x2aa50>  // b.any
  42f5a8:	b	42f4a8 <wcrtomb@plt+0x2a968>
  42f5ac:	cmp	x22, x21
  42f5b0:	b.eq	42f4a8 <wcrtomb@plt+0x2a968>  // b.none
  42f5b4:	cmp	x22, #0x2
  42f5b8:	b.cc	42f500 <wcrtomb@plt+0x2a9c0>  // b.lo, b.ul, b.last
  42f5bc:	ldr	x8, [sp, #16]
  42f5c0:	cmp	x22, x8
  42f5c4:	b.ls	42f5e4 <wcrtomb@plt+0x2aaa4>  // b.plast
  42f5c8:	mov	x0, x20
  42f5cc:	mov	x1, x22
  42f5d0:	bl	404490 <realloc@plt>
  42f5d4:	mov	x24, x0
  42f5d8:	str	x22, [sp, #16]
  42f5dc:	cbnz	x0, 42f5e8 <wcrtomb@plt+0x2aaa8>
  42f5e0:	b	42f720 <wcrtomb@plt+0x2abe0>
  42f5e4:	mov	x24, x20
  42f5e8:	sub	x22, x22, #0x1
  42f5ec:	add	x1, x28, #0x1
  42f5f0:	mov	x0, x24
  42f5f4:	mov	x2, x22
  42f5f8:	bl	403ec0 <memcpy@plt>
  42f5fc:	mov	x0, x24
  42f600:	strb	wzr, [x24, x22]
  42f604:	bl	404390 <getpwnam@plt>
  42f608:	mov	x23, x0
  42f60c:	mov	x20, x24
  42f610:	cbnz	x23, 42f514 <wcrtomb@plt+0x2a9d4>
  42f614:	b	42f4a8 <wcrtomb@plt+0x2a968>
  42f618:	mov	x20, xzr
  42f61c:	mov	x0, x20
  42f620:	bl	404700 <free@plt>
  42f624:	mov	w0, wzr
  42f628:	ldp	x20, x19, [sp, #112]
  42f62c:	ldp	x22, x21, [sp, #96]
  42f630:	ldp	x24, x23, [sp, #80]
  42f634:	ldp	x26, x25, [sp, #64]
  42f638:	ldp	x28, x27, [sp, #48]
  42f63c:	ldp	x29, x30, [sp, #32]
  42f640:	add	sp, sp, #0x80
  42f644:	ret
  42f648:	mov	x0, x20
  42f64c:	bl	404700 <free@plt>
  42f650:	bl	404a10 <__errno_location@plt>
  42f654:	ldur	x10, [x29, #-8]
  42f658:	mov	w8, #0xc                   	// #12
  42f65c:	str	w8, [x0]
  42f660:	mov	w9, #0x2                   	// #2
  42f664:	ldr	w8, [x10, #32]
  42f668:	str	w9, [x10, #192]
  42f66c:	tbnz	w8, #7, 42f688 <wcrtomb@plt+0x2ab48>
  42f670:	ldr	x21, [sp, #8]
  42f674:	tbnz	w8, #4, 42f6a4 <wcrtomb@plt+0x2ab64>
  42f678:	tbz	w8, #3, 42f780 <wcrtomb@plt+0x2ac40>
  42f67c:	ldr	x20, [x21]
  42f680:	cbnz	x20, 42f7b0 <wcrtomb@plt+0x2ac70>
  42f684:	b	42f790 <wcrtomb@plt+0x2ac50>
  42f688:	ldur	x19, [x29, #-8]
  42f68c:	ldr	x8, [x19, #88]
  42f690:	mov	x0, x19
  42f694:	blr	x8
  42f698:	ldr	w8, [x19, #32]
  42f69c:	ldr	x21, [sp, #8]
  42f6a0:	tbz	w8, #4, 42f678 <wcrtomb@plt+0x2ab38>
  42f6a4:	ldur	x9, [x29, #-8]
  42f6a8:	ldr	w8, [x9, #192]
  42f6ac:	ldr	x20, [x9, #96]
  42f6b0:	cmp	w8, #0x9
  42f6b4:	b.eq	42f6ec <wcrtomb@plt+0x2abac>  // b.none
  42f6b8:	cmp	w8, #0x1
  42f6bc:	b.ne	42f6f8 <wcrtomb@plt+0x2abb8>  // b.any
  42f6c0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42f6c4:	add	x1, x1, #0x751
  42f6c8:	mov	w2, #0x5                   	// #5
  42f6cc:	mov	x0, xzr
  42f6d0:	bl	404900 <dcgettext@plt>
  42f6d4:	ldur	x9, [x29, #-8]
  42f6d8:	ldr	x8, [x9, #168]
  42f6dc:	ldr	x2, [x9, #184]
  42f6e0:	ldrb	w1, [x8, x2]
  42f6e4:	blr	x20
  42f6e8:	b	42f774 <wcrtomb@plt+0x2ac34>
  42f6ec:	ldur	x8, [x29, #-8]
  42f6f0:	add	x8, x8, #0xc8
  42f6f4:	b	42f718 <wcrtomb@plt+0x2abd8>
  42f6f8:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42f6fc:	ldr	w9, [x9, #4008]
  42f700:	sxtw	x8, w8
  42f704:	cmp	w8, w9
  42f708:	b.ge	42f760 <wcrtomb@plt+0x2ac20>  // b.tcont
  42f70c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42f710:	add	x9, x9, #0xf60
  42f714:	add	x8, x9, x8, lsl #3
  42f718:	ldr	x1, [x8]
  42f71c:	b	42f768 <wcrtomb@plt+0x2ac28>
  42f720:	mov	x0, x20
  42f724:	bl	404700 <free@plt>
  42f728:	bl	404a10 <__errno_location@plt>
  42f72c:	ldur	x10, [x29, #-8]
  42f730:	mov	w8, #0xc                   	// #12
  42f734:	str	w8, [x0]
  42f738:	mov	w9, #0x2                   	// #2
  42f73c:	ldr	w8, [x10, #32]
  42f740:	str	w9, [x10, #192]
  42f744:	tbnz	w8, #7, 42f7c8 <wcrtomb@plt+0x2ac88>
  42f748:	ldr	x21, [sp, #8]
  42f74c:	tbnz	w8, #4, 42f7e4 <wcrtomb@plt+0x2aca4>
  42f750:	tbz	w8, #3, 42f880 <wcrtomb@plt+0x2ad40>
  42f754:	ldr	x20, [x21]
  42f758:	cbnz	x20, 42f8a4 <wcrtomb@plt+0x2ad64>
  42f75c:	b	42f790 <wcrtomb@plt+0x2ac50>
  42f760:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42f764:	add	x1, x1, #0x743
  42f768:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42f76c:	add	x0, x0, #0x7a4
  42f770:	blr	x20
  42f774:	ldur	x8, [x29, #-8]
  42f778:	ldr	w8, [x8, #32]
  42f77c:	tbnz	w8, #3, 42f67c <wcrtomb@plt+0x2ab3c>
  42f780:	ldur	x0, [x29, #-8]
  42f784:	bl	42d484 <wcrtomb@plt+0x28944>
  42f788:	ldr	x20, [x21]
  42f78c:	cbnz	x20, 42f7b0 <wcrtomb@plt+0x2ac70>
  42f790:	stp	xzr, xzr, [x21]
  42f794:	ldur	x8, [x29, #-8]
  42f798:	ldr	w0, [x8, #192]
  42f79c:	b	42f628 <wcrtomb@plt+0x2aae8>
  42f7a0:	mov	x0, x20
  42f7a4:	bl	404700 <free@plt>
  42f7a8:	mov	x20, x19
  42f7ac:	cbz	x19, 42f790 <wcrtomb@plt+0x2ac50>
  42f7b0:	ldrb	w8, [x20, #16]
  42f7b4:	ldr	x19, [x20, #8]
  42f7b8:	tbz	w8, #1, 42f7a0 <wcrtomb@plt+0x2ac60>
  42f7bc:	ldr	x0, [x20, #24]
  42f7c0:	bl	404700 <free@plt>
  42f7c4:	b	42f7a0 <wcrtomb@plt+0x2ac60>
  42f7c8:	ldur	x19, [x29, #-8]
  42f7cc:	ldr	x8, [x19, #88]
  42f7d0:	mov	x0, x19
  42f7d4:	blr	x8
  42f7d8:	ldr	w8, [x19, #32]
  42f7dc:	ldr	x21, [sp, #8]
  42f7e0:	tbz	w8, #4, 42f750 <wcrtomb@plt+0x2ac10>
  42f7e4:	ldur	x9, [x29, #-8]
  42f7e8:	ldr	w8, [x9, #192]
  42f7ec:	ldr	x20, [x9, #96]
  42f7f0:	cmp	w8, #0x9
  42f7f4:	b.eq	42f82c <wcrtomb@plt+0x2acec>  // b.none
  42f7f8:	cmp	w8, #0x1
  42f7fc:	b.ne	42f838 <wcrtomb@plt+0x2acf8>  // b.any
  42f800:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42f804:	add	x1, x1, #0x751
  42f808:	mov	w2, #0x5                   	// #5
  42f80c:	mov	x0, xzr
  42f810:	bl	404900 <dcgettext@plt>
  42f814:	ldur	x9, [x29, #-8]
  42f818:	ldr	x8, [x9, #168]
  42f81c:	ldr	x2, [x9, #184]
  42f820:	ldrb	w1, [x8, x2]
  42f824:	blr	x20
  42f828:	b	42f874 <wcrtomb@plt+0x2ad34>
  42f82c:	ldur	x8, [x29, #-8]
  42f830:	add	x8, x8, #0xc8
  42f834:	b	42f858 <wcrtomb@plt+0x2ad18>
  42f838:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42f83c:	ldr	w9, [x9, #4008]
  42f840:	sxtw	x8, w8
  42f844:	cmp	w8, w9
  42f848:	b.ge	42f860 <wcrtomb@plt+0x2ad20>  // b.tcont
  42f84c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42f850:	add	x9, x9, #0xf60
  42f854:	add	x8, x9, x8, lsl #3
  42f858:	ldr	x1, [x8]
  42f85c:	b	42f868 <wcrtomb@plt+0x2ad28>
  42f860:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42f864:	add	x1, x1, #0x743
  42f868:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42f86c:	add	x0, x0, #0x7a4
  42f870:	blr	x20
  42f874:	ldur	x8, [x29, #-8]
  42f878:	ldr	w8, [x8, #32]
  42f87c:	tbnz	w8, #3, 42f754 <wcrtomb@plt+0x2ac14>
  42f880:	ldur	x0, [x29, #-8]
  42f884:	bl	42d484 <wcrtomb@plt+0x28944>
  42f888:	ldr	x20, [x21]
  42f88c:	cbnz	x20, 42f8a4 <wcrtomb@plt+0x2ad64>
  42f890:	b	42f790 <wcrtomb@plt+0x2ac50>
  42f894:	mov	x0, x20
  42f898:	bl	404700 <free@plt>
  42f89c:	mov	x20, x19
  42f8a0:	cbz	x19, 42f790 <wcrtomb@plt+0x2ac50>
  42f8a4:	ldrb	w8, [x20, #16]
  42f8a8:	ldr	x19, [x20, #8]
  42f8ac:	tbz	w8, #1, 42f894 <wcrtomb@plt+0x2ad54>
  42f8b0:	ldr	x0, [x20, #24]
  42f8b4:	bl	404700 <free@plt>
  42f8b8:	b	42f894 <wcrtomb@plt+0x2ad54>
  42f8bc:	stp	x29, x30, [sp, #-64]!
  42f8c0:	stp	x22, x21, [sp, #32]
  42f8c4:	stp	x20, x19, [sp, #48]
  42f8c8:	ldr	x1, [x0, #208]
  42f8cc:	str	x23, [sp, #16]
  42f8d0:	mov	x29, sp
  42f8d4:	cbz	x1, 42f9c0 <wcrtomb@plt+0x2ae80>
  42f8d8:	adrp	x20, 431000 <wcrtomb@plt+0x2c4c0>
  42f8dc:	adrp	x21, 431000 <wcrtomb@plt+0x2c4c0>
  42f8e0:	mov	x19, x0
  42f8e4:	mov	w22, #0x48                  	// #72
  42f8e8:	add	x20, x20, #0x878
  42f8ec:	add	x21, x21, #0x8a4
  42f8f0:	b	42f8fc <wcrtomb@plt+0x2adbc>
  42f8f4:	mov	x1, x23
  42f8f8:	cbz	x23, 42f928 <wcrtomb@plt+0x2ade8>
  42f8fc:	ldrb	w8, [x1, #16]
  42f900:	ldr	x23, [x1, #8]
  42f904:	tst	w8, w22
  42f908:	b.ne	42f8f4 <wcrtomb@plt+0x2adb4>  // b.any
  42f90c:	mov	x0, x19
  42f910:	mov	x2, x20
  42f914:	mov	x3, x21
  42f918:	bl	430860 <wcrtomb@plt+0x2bd20>
  42f91c:	cbz	w0, 42f8f4 <wcrtomb@plt+0x2adb4>
  42f920:	mov	w0, #0x1                   	// #1
  42f924:	b	42f9c4 <wcrtomb@plt+0x2ae84>
  42f928:	ldr	x20, [x19, #208]
  42f92c:	cbz	x20, 42f9c0 <wcrtomb@plt+0x2ae80>
  42f930:	add	x21, x19, #0xd8
  42f934:	b	42f948 <wcrtomb@plt+0x2ae08>
  42f938:	mov	x0, x20
  42f93c:	bl	404700 <free@plt>
  42f940:	mov	x20, x22
  42f944:	cbz	x22, 42f9c0 <wcrtomb@plt+0x2ae80>
  42f948:	ldr	w8, [x20, #16]
  42f94c:	ldr	x22, [x20, #8]
  42f950:	tbz	w8, #6, 42f96c <wcrtomb@plt+0x2ae2c>
  42f954:	ldr	x9, [x20]
  42f958:	cbz	x9, 42f96c <wcrtomb@plt+0x2ae2c>
  42f95c:	ldr	w8, [x9, #16]
  42f960:	and	w8, w8, #0xffffffef
  42f964:	str	w8, [x9, #16]
  42f968:	ldr	w8, [x20, #16]
  42f96c:	tbz	w8, #0, 42f940 <wcrtomb@plt+0x2ae00>
  42f970:	ldr	x9, [x20]
  42f974:	cbz	x9, 42f998 <wcrtomb@plt+0x2ae58>
  42f978:	str	x22, [x9, #8]
  42f97c:	ldr	x10, [x20, #8]
  42f980:	cbnz	x10, 42f9a8 <wcrtomb@plt+0x2ae68>
  42f984:	ldr	w8, [x9, #16]
  42f988:	and	w8, w8, #0xffffffef
  42f98c:	str	w8, [x9, #16]
  42f990:	ldr	w8, [x20, #16]
  42f994:	b	42f9a4 <wcrtomb@plt+0x2ae64>
  42f998:	mov	x10, x22
  42f99c:	str	x22, [x19, #208]
  42f9a0:	cbnz	x22, 42f9a8 <wcrtomb@plt+0x2ae68>
  42f9a4:	mov	x10, x21
  42f9a8:	str	x9, [x10]
  42f9ac:	stp	xzr, xzr, [x20]
  42f9b0:	tbz	w8, #1, 42f938 <wcrtomb@plt+0x2adf8>
  42f9b4:	ldr	x0, [x20, #24]
  42f9b8:	bl	404700 <free@plt>
  42f9bc:	b	42f938 <wcrtomb@plt+0x2adf8>
  42f9c0:	mov	w0, wzr
  42f9c4:	ldp	x20, x19, [sp, #48]
  42f9c8:	ldp	x22, x21, [sp, #32]
  42f9cc:	ldr	x23, [sp, #16]
  42f9d0:	ldp	x29, x30, [sp], #64
  42f9d4:	ret
  42f9d8:	sub	sp, sp, #0x90
  42f9dc:	stp	x29, x30, [sp, #48]
  42f9e0:	stp	x28, x27, [sp, #64]
  42f9e4:	stp	x26, x25, [sp, #80]
  42f9e8:	stp	x24, x23, [sp, #96]
  42f9ec:	stp	x22, x21, [sp, #112]
  42f9f0:	stp	x20, x19, [sp, #128]
  42f9f4:	mov	x8, x0
  42f9f8:	ldr	x26, [x8, #208]!
  42f9fc:	add	x29, sp, #0x30
  42fa00:	str	x8, [sp, #8]
  42fa04:	cbz	x26, 42fde4 <wcrtomb@plt+0x2b2a4>
  42fa08:	mov	x13, x0
  42fa0c:	mov	w14, #0x5c                  	// #92
  42fa10:	stur	x0, [x29, #-16]
  42fa14:	b	42fa24 <wcrtomb@plt+0x2aee4>
  42fa18:	strb	wzr, [x23]
  42fa1c:	ldr	x26, [x26, #8]
  42fa20:	cbz	x26, 42fde4 <wcrtomb@plt+0x2b2a4>
  42fa24:	ldr	w19, [x26, #16]
  42fa28:	tbnz	w19, #0, 42fa48 <wcrtomb@plt+0x2af08>
  42fa2c:	tbnz	w19, #1, 42fa5c <wcrtomb@plt+0x2af1c>
  42fa30:	ldr	x8, [x13, #168]
  42fa34:	ldp	x9, x10, [x26, #24]
  42fa38:	add	x21, x8, x9
  42fa3c:	sub	x22, x10, x9
  42fa40:	tbz	w19, #3, 42fa78 <wcrtomb@plt+0x2af38>
  42fa44:	b	42fa1c <wcrtomb@plt+0x2aedc>
  42fa48:	adrp	x21, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42fa4c:	mov	x22, xzr
  42fa50:	add	x21, x21, #0x66
  42fa54:	tbz	w19, #3, 42fa78 <wcrtomb@plt+0x2af38>
  42fa58:	b	42fa1c <wcrtomb@plt+0x2aedc>
  42fa5c:	ldr	x21, [x26, #24]
  42fa60:	mov	x0, x21
  42fa64:	bl	403f40 <strlen@plt>
  42fa68:	ldur	x13, [x29, #-16]
  42fa6c:	mov	w14, #0x5c                  	// #92
  42fa70:	mov	x22, x0
  42fa74:	tbnz	w19, #3, 42fa1c <wcrtomb@plt+0x2aedc>
  42fa78:	ldr	w8, [x13, #32]
  42fa7c:	and	w8, w8, #0x600
  42fa80:	cbz	w8, 42fa1c <wcrtomb@plt+0x2aedc>
  42fa84:	tbnz	w19, #1, 42fac8 <wcrtomb@plt+0x2af88>
  42fa88:	add	x0, x22, #0x1
  42fa8c:	bl	404250 <malloc@plt>
  42fa90:	cbz	x0, 42fe08 <wcrtomb@plt+0x2b2c8>
  42fa94:	mov	x1, x21
  42fa98:	mov	x2, x22
  42fa9c:	mov	x23, x0
  42faa0:	bl	403ec0 <memcpy@plt>
  42faa4:	strb	wzr, [x23, x22]
  42faa8:	ldr	w8, [x26, #16]
  42faac:	ldur	x13, [x29, #-16]
  42fab0:	mov	w14, #0x5c                  	// #92
  42fab4:	str	x23, [x26, #24]
  42fab8:	orr	w19, w8, #0x2
  42fabc:	str	w19, [x26, #16]
  42fac0:	cbnz	x22, 42fad0 <wcrtomb@plt+0x2af90>
  42fac4:	b	42fa18 <wcrtomb@plt+0x2aed8>
  42fac8:	ldr	x23, [x26, #24]
  42facc:	cbz	x22, 42fa18 <wcrtomb@plt+0x2aed8>
  42fad0:	and	w9, w19, #0x4
  42fad4:	mov	w10, #0x40                  	// #64
  42fad8:	lsl	w28, w10, w9
  42fadc:	mov	w10, #0x20                  	// #32
  42fae0:	lsl	w15, w10, w9
  42fae4:	lsr	w10, w9, #2
  42fae8:	add	x10, x13, w10, uxtw #3
  42faec:	add	x16, x10, #0x48
  42faf0:	mov	w10, #0x10                  	// #16
  42faf4:	mov	x8, xzr
  42faf8:	mov	w20, wzr
  42fafc:	lsl	w9, w10, w9
  42fb00:	stur	w9, [x29, #-4]
  42fb04:	stur	w15, [x29, #-20]
  42fb08:	str	x16, [sp, #16]
  42fb0c:	b	42fb28 <wcrtomb@plt+0x2afe8>
  42fb10:	add	w25, w20, #0x2
  42fb14:	strb	w8, [x23], #1
  42fb18:	sxtw	x8, w25
  42fb1c:	cmp	x22, x8
  42fb20:	mov	w20, w25
  42fb24:	b.ls	42fa18 <wcrtomb@plt+0x2aed8>  // b.plast
  42fb28:	ldrb	w8, [x21, x8]
  42fb2c:	sxtw	x9, w20
  42fb30:	add	x25, x9, #0x1
  42fb34:	cmp	w8, #0x5c
  42fb38:	b.ne	42fb14 <wcrtomb@plt+0x2afd4>  // b.any
  42fb3c:	ldr	w9, [x13, #36]
  42fb40:	add	x27, x21, x25
  42fb44:	ldrb	w8, [x27]
  42fb48:	tst	w9, w28
  42fb4c:	b.eq	42fc34 <wcrtomb@plt+0x2b0f4>  // b.none
  42fb50:	orr	w10, w8, #0x20
  42fb54:	cmp	w10, #0x78
  42fb58:	b.ne	42fc34 <wcrtomb@plt+0x2b0f4>  // b.any
  42fb5c:	sub	x8, x22, x25
  42fb60:	cmp	x8, #0x2
  42fb64:	b.cc	42fd1c <wcrtomb@plt+0x2b1dc>  // b.lo, b.ul, b.last
  42fb68:	ldrsb	w8, [x27, #1]
  42fb6c:	tbnz	w8, #31, 42fd1c <wcrtomb@plt+0x2b1dc>
  42fb70:	and	w24, w8, #0xff
  42fb74:	sub	w19, w24, #0x30
  42fb78:	cmp	w19, #0x9
  42fb7c:	b.ls	42fbc8 <wcrtomb@plt+0x2b088>  // b.plast
  42fb80:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42fb84:	mov	w2, #0xd                   	// #13
  42fb88:	add	x0, x0, #0x8eb
  42fb8c:	mov	w1, w24
  42fb90:	bl	404890 <memchr@plt>
  42fb94:	ldr	x16, [sp, #16]
  42fb98:	ldur	w15, [x29, #-20]
  42fb9c:	ldur	x13, [x29, #-16]
  42fba0:	mov	w14, #0x5c                  	// #92
  42fba4:	cbz	x0, 42fd1c <wcrtomb@plt+0x2b1dc>
  42fba8:	bl	4044a0 <__ctype_toupper_loc@plt>
  42fbac:	ldr	x8, [x0]
  42fbb0:	ldr	x16, [sp, #16]
  42fbb4:	ldur	w15, [x29, #-20]
  42fbb8:	ldur	x13, [x29, #-16]
  42fbbc:	ldr	w8, [x8, w24, uxtw #2]
  42fbc0:	mov	w14, #0x5c                  	// #92
  42fbc4:	sub	w19, w8, #0x37
  42fbc8:	cmp	w19, #0xf
  42fbcc:	b.gt	42fd1c <wcrtomb@plt+0x2b1dc>
  42fbd0:	ldrsb	w8, [x27, #2]
  42fbd4:	tbnz	w8, #31, 42fd88 <wcrtomb@plt+0x2b248>
  42fbd8:	and	w24, w8, #0xff
  42fbdc:	sub	w8, w24, #0x30
  42fbe0:	cmp	w8, #0xa
  42fbe4:	b.cc	42fc20 <wcrtomb@plt+0x2b0e0>  // b.lo, b.ul, b.last
  42fbe8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42fbec:	mov	w2, #0xd                   	// #13
  42fbf0:	add	x0, x0, #0x8eb
  42fbf4:	mov	w1, w24
  42fbf8:	bl	404890 <memchr@plt>
  42fbfc:	cbz	x0, 42fdac <wcrtomb@plt+0x2b26c>
  42fc00:	bl	4044a0 <__ctype_toupper_loc@plt>
  42fc04:	ldr	x8, [x0]
  42fc08:	ldur	x13, [x29, #-16]
  42fc0c:	ldur	w15, [x29, #-20]
  42fc10:	ldr	x16, [sp, #16]
  42fc14:	ldr	w8, [x8, w24, uxtw #2]
  42fc18:	mov	w14, #0x5c                  	// #92
  42fc1c:	sub	w8, w8, #0x37
  42fc20:	cmp	w8, #0xf
  42fc24:	b.gt	42fd88 <wcrtomb@plt+0x2b248>
  42fc28:	add	w19, w8, w19, lsl #4
  42fc2c:	mov	w8, #0x2                   	// #2
  42fc30:	b	42fd8c <wcrtomb@plt+0x2b24c>
  42fc34:	and	w10, w9, w15
  42fc38:	cbz	w10, 42fd34 <wcrtomb@plt+0x2b1f4>
  42fc3c:	sub	w19, w8, #0x30
  42fc40:	and	w10, w19, #0xff
  42fc44:	cmp	w10, #0x9
  42fc48:	b.hi	42fd34 <wcrtomb@plt+0x2b1f4>  // b.pmore
  42fc4c:	cmp	x22, x25
  42fc50:	b.eq	42fd1c <wcrtomb@plt+0x2b1dc>  // b.none
  42fc54:	cmp	w8, #0x37
  42fc58:	b.hi	42fd1c <wcrtomb@plt+0x2b1dc>  // b.pmore
  42fc5c:	ldrsb	w8, [x27, #1]
  42fc60:	tbnz	w8, #31, 42fd80 <wcrtomb@plt+0x2b240>
  42fc64:	and	w24, w8, #0xff
  42fc68:	sub	w8, w24, #0x30
  42fc6c:	cmp	w8, #0xa
  42fc70:	b.cc	42fcac <wcrtomb@plt+0x2b16c>  // b.lo, b.ul, b.last
  42fc74:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42fc78:	mov	w2, #0xd                   	// #13
  42fc7c:	add	x0, x0, #0x8eb
  42fc80:	mov	w1, w24
  42fc84:	bl	404890 <memchr@plt>
  42fc88:	cbz	x0, 42fda4 <wcrtomb@plt+0x2b264>
  42fc8c:	bl	4044a0 <__ctype_toupper_loc@plt>
  42fc90:	ldr	x8, [x0]
  42fc94:	ldur	x13, [x29, #-16]
  42fc98:	ldur	w15, [x29, #-20]
  42fc9c:	ldr	x16, [sp, #16]
  42fca0:	ldr	w8, [x8, w24, uxtw #2]
  42fca4:	mov	w14, #0x5c                  	// #92
  42fca8:	sub	w8, w8, #0x37
  42fcac:	cmp	w8, #0x7
  42fcb0:	b.gt	42fd80 <wcrtomb@plt+0x2b240>
  42fcb4:	ldrsb	w9, [x27, #2]
  42fcb8:	add	w19, w8, w19, lsl #3
  42fcbc:	tbnz	w9, #31, 42fd9c <wcrtomb@plt+0x2b25c>
  42fcc0:	and	w24, w9, #0xff
  42fcc4:	sub	w8, w24, #0x30
  42fcc8:	cmp	w8, #0xa
  42fccc:	b.cc	42fd08 <wcrtomb@plt+0x2b1c8>  // b.lo, b.ul, b.last
  42fcd0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42fcd4:	mov	w2, #0xd                   	// #13
  42fcd8:	add	x0, x0, #0x8eb
  42fcdc:	mov	w1, w24
  42fce0:	bl	404890 <memchr@plt>
  42fce4:	cbz	x0, 42fdc4 <wcrtomb@plt+0x2b284>
  42fce8:	bl	4044a0 <__ctype_toupper_loc@plt>
  42fcec:	ldr	x8, [x0]
  42fcf0:	ldur	x13, [x29, #-16]
  42fcf4:	ldur	w15, [x29, #-20]
  42fcf8:	ldr	x16, [sp, #16]
  42fcfc:	ldr	w8, [x8, w24, uxtw #2]
  42fd00:	mov	w14, #0x5c                  	// #92
  42fd04:	sub	w8, w8, #0x37
  42fd08:	cmp	w8, #0x7
  42fd0c:	b.gt	42fd9c <wcrtomb@plt+0x2b25c>
  42fd10:	add	w19, w8, w19, lsl #3
  42fd14:	mov	w8, #0x3                   	// #3
  42fd18:	b	42fdd8 <wcrtomb@plt+0x2b298>
  42fd1c:	strb	w14, [x23]
  42fd20:	ldrb	w8, [x27]
  42fd24:	add	w25, w20, #0x2
  42fd28:	strb	w8, [x23, #1]
  42fd2c:	add	x23, x23, #0x2
  42fd30:	b	42fb18 <wcrtomb@plt+0x2afd8>
  42fd34:	ldr	x10, [x16]
  42fd38:	ldrb	w11, [x10]
  42fd3c:	cbz	w11, 42fd5c <wcrtomb@plt+0x2b21c>
  42fd40:	add	x10, x10, #0x2
  42fd44:	ldurb	w12, [x10, #-1]
  42fd48:	cbz	w12, 42fd5c <wcrtomb@plt+0x2b21c>
  42fd4c:	cmp	w8, w11, uxtb
  42fd50:	b.eq	42fd74 <wcrtomb@plt+0x2b234>  // b.none
  42fd54:	ldrb	w11, [x10], #2
  42fd58:	cbnz	w11, 42fd44 <wcrtomb@plt+0x2b204>
  42fd5c:	ldur	w10, [x29, #-4]
  42fd60:	tst	w9, w10
  42fd64:	b.eq	42fb10 <wcrtomb@plt+0x2afd0>  // b.none
  42fd68:	strb	w14, [x23], #1
  42fd6c:	ldrb	w8, [x27]
  42fd70:	b	42fb10 <wcrtomb@plt+0x2afd0>
  42fd74:	strb	w12, [x23], #1
  42fd78:	add	w25, w20, #0x2
  42fd7c:	b	42fb18 <wcrtomb@plt+0x2afd8>
  42fd80:	mov	w8, #0x1                   	// #1
  42fd84:	b	42fdd8 <wcrtomb@plt+0x2b298>
  42fd88:	mov	w8, #0x1                   	// #1
  42fd8c:	add	w8, w20, w8
  42fd90:	strb	w19, [x23], #1
  42fd94:	add	w25, w8, #0x2
  42fd98:	b	42fb18 <wcrtomb@plt+0x2afd8>
  42fd9c:	mov	w8, #0x2                   	// #2
  42fda0:	b	42fdd8 <wcrtomb@plt+0x2b298>
  42fda4:	mov	w8, #0x1                   	// #1
  42fda8:	b	42fdc8 <wcrtomb@plt+0x2b288>
  42fdac:	ldur	x13, [x29, #-16]
  42fdb0:	ldur	w15, [x29, #-20]
  42fdb4:	ldr	x16, [sp, #16]
  42fdb8:	mov	w8, #0x1                   	// #1
  42fdbc:	mov	w14, #0x5c                  	// #92
  42fdc0:	b	42fd8c <wcrtomb@plt+0x2b24c>
  42fdc4:	mov	w8, #0x2                   	// #2
  42fdc8:	ldur	x13, [x29, #-16]
  42fdcc:	ldur	w15, [x29, #-20]
  42fdd0:	ldr	x16, [sp, #16]
  42fdd4:	mov	w14, #0x5c                  	// #92
  42fdd8:	strb	w19, [x23], #1
  42fddc:	add	w25, w8, w25
  42fde0:	b	42fb18 <wcrtomb@plt+0x2afd8>
  42fde4:	mov	w0, wzr
  42fde8:	ldp	x20, x19, [sp, #128]
  42fdec:	ldp	x22, x21, [sp, #112]
  42fdf0:	ldp	x24, x23, [sp, #96]
  42fdf4:	ldp	x26, x25, [sp, #80]
  42fdf8:	ldp	x28, x27, [sp, #64]
  42fdfc:	ldp	x29, x30, [sp, #48]
  42fe00:	add	sp, sp, #0x90
  42fe04:	ret
  42fe08:	bl	404a10 <__errno_location@plt>
  42fe0c:	ldur	x10, [x29, #-16]
  42fe10:	mov	w8, #0xc                   	// #12
  42fe14:	str	w8, [x0]
  42fe18:	mov	w9, #0x2                   	// #2
  42fe1c:	ldr	w8, [x10, #32]
  42fe20:	str	w9, [x10, #192]
  42fe24:	tbnz	w8, #7, 42fe48 <wcrtomb@plt+0x2b308>
  42fe28:	ldr	x21, [sp, #8]
  42fe2c:	tbnz	w8, #4, 42fe64 <wcrtomb@plt+0x2b324>
  42fe30:	tbnz	w8, #3, 42fef8 <wcrtomb@plt+0x2b3b8>
  42fe34:	ldur	x0, [x29, #-16]
  42fe38:	bl	42d484 <wcrtomb@plt+0x28944>
  42fe3c:	ldr	x20, [x21]
  42fe40:	cbnz	x20, 42ff20 <wcrtomb@plt+0x2b3e0>
  42fe44:	b	42ff00 <wcrtomb@plt+0x2b3c0>
  42fe48:	ldr	x8, [x10, #88]
  42fe4c:	mov	x0, x10
  42fe50:	blr	x8
  42fe54:	ldur	x10, [x29, #-16]
  42fe58:	ldr	w8, [x10, #32]
  42fe5c:	ldr	x21, [sp, #8]
  42fe60:	tbz	w8, #4, 42fe30 <wcrtomb@plt+0x2b2f0>
  42fe64:	ldr	w8, [x10, #192]
  42fe68:	ldr	x19, [x10, #96]
  42fe6c:	cmp	w8, #0x9
  42fe70:	b.eq	42fea8 <wcrtomb@plt+0x2b368>  // b.none
  42fe74:	cmp	w8, #0x1
  42fe78:	b.ne	42feb0 <wcrtomb@plt+0x2b370>  // b.any
  42fe7c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42fe80:	add	x1, x1, #0x751
  42fe84:	mov	w2, #0x5                   	// #5
  42fe88:	mov	x0, xzr
  42fe8c:	mov	x20, x10
  42fe90:	bl	404900 <dcgettext@plt>
  42fe94:	ldr	x8, [x20, #168]
  42fe98:	ldr	x2, [x20, #184]
  42fe9c:	ldrb	w1, [x8, x2]
  42fea0:	blr	x19
  42fea4:	b	42feec <wcrtomb@plt+0x2b3ac>
  42fea8:	add	x8, x10, #0xc8
  42feac:	b	42fed0 <wcrtomb@plt+0x2b390>
  42feb0:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42feb4:	ldr	w9, [x9, #4008]
  42feb8:	sxtw	x8, w8
  42febc:	cmp	w8, w9
  42fec0:	b.ge	42fed8 <wcrtomb@plt+0x2b398>  // b.tcont
  42fec4:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  42fec8:	add	x9, x9, #0xf60
  42fecc:	add	x8, x9, x8, lsl #3
  42fed0:	ldr	x1, [x8]
  42fed4:	b	42fee0 <wcrtomb@plt+0x2b3a0>
  42fed8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42fedc:	add	x1, x1, #0x743
  42fee0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42fee4:	add	x0, x0, #0x7a4
  42fee8:	blr	x19
  42feec:	ldur	x8, [x29, #-16]
  42fef0:	ldr	w8, [x8, #32]
  42fef4:	tbz	w8, #3, 42fe34 <wcrtomb@plt+0x2b2f4>
  42fef8:	ldr	x20, [x21]
  42fefc:	cbnz	x20, 42ff20 <wcrtomb@plt+0x2b3e0>
  42ff00:	stp	xzr, xzr, [x21]
  42ff04:	ldur	x8, [x29, #-16]
  42ff08:	ldr	w0, [x8, #192]
  42ff0c:	b	42fde8 <wcrtomb@plt+0x2b2a8>
  42ff10:	mov	x0, x20
  42ff14:	bl	404700 <free@plt>
  42ff18:	mov	x20, x19
  42ff1c:	cbz	x19, 42ff00 <wcrtomb@plt+0x2b3c0>
  42ff20:	ldrb	w8, [x20, #16]
  42ff24:	ldr	x19, [x20, #8]
  42ff28:	tbz	w8, #1, 42ff10 <wcrtomb@plt+0x2b3d0>
  42ff2c:	ldr	x0, [x20, #24]
  42ff30:	bl	404700 <free@plt>
  42ff34:	b	42ff10 <wcrtomb@plt+0x2b3d0>
  42ff38:	sub	sp, sp, #0x150
  42ff3c:	stp	x29, x30, [sp, #240]
  42ff40:	stp	x28, x27, [sp, #256]
  42ff44:	stp	x26, x25, [sp, #272]
  42ff48:	stp	x24, x23, [sp, #288]
  42ff4c:	stp	x22, x21, [sp, #304]
  42ff50:	stp	x20, x19, [sp, #320]
  42ff54:	mov	x10, x0
  42ff58:	ldr	x22, [x10, #208]!
  42ff5c:	add	x29, sp, #0xf0
  42ff60:	cbz	x22, 4302dc <wcrtomb@plt+0x2b79c>
  42ff64:	ldur	w8, [x10, #-172]
  42ff68:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ff6c:	mov	x19, x0
  42ff70:	add	x23, x0, #0xd8
  42ff74:	lsl	w8, w8, #5
  42ff78:	add	x9, x0, #0xc8
  42ff7c:	add	x20, x20, #0x912
  42ff80:	and	w8, w8, #0x80
  42ff84:	str	x9, [sp, #8]
  42ff88:	str	w8, [sp, #20]
  42ff8c:	str	x10, [sp, #24]
  42ff90:	b	42ffa0 <wcrtomb@plt+0x2b460>
  42ff94:	mov	x0, x25
  42ff98:	bl	404700 <free@plt>
  42ff9c:	cbz	x22, 4302dc <wcrtomb@plt+0x2b79c>
  42ffa0:	mov	x25, x22
  42ffa4:	ldr	w8, [x22, #16]
  42ffa8:	ldr	x22, [x22, #8]
  42ffac:	tbnz	w8, #2, 42ff9c <wcrtomb@plt+0x2b45c>
  42ffb0:	tbnz	w8, #0, 42ffcc <wcrtomb@plt+0x2b48c>
  42ffb4:	tbnz	w8, #1, 42ffdc <wcrtomb@plt+0x2b49c>
  42ffb8:	ldr	x8, [x19, #168]
  42ffbc:	ldp	x9, x10, [x25, #24]
  42ffc0:	add	x28, x8, x9
  42ffc4:	sub	x27, x10, x9
  42ffc8:	b	42ffec <wcrtomb@plt+0x2b4ac>
  42ffcc:	adrp	x28, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  42ffd0:	mov	x27, xzr
  42ffd4:	add	x28, x28, #0x66
  42ffd8:	b	42ffec <wcrtomb@plt+0x2b4ac>
  42ffdc:	ldr	x28, [x25, #24]
  42ffe0:	mov	x0, x28
  42ffe4:	bl	403f40 <strlen@plt>
  42ffe8:	mov	x27, x0
  42ffec:	mov	x26, xzr
  42fff0:	cmp	w27, w26
  42fff4:	b.eq	42ff9c <wcrtomb@plt+0x2b45c>  // b.none
  42fff8:	ldrb	w1, [x28, x26]
  42fffc:	mov	w2, #0x4                   	// #4
  430000:	mov	x0, x20
  430004:	bl	404890 <memchr@plt>
  430008:	add	x26, x26, #0x1
  43000c:	cbz	x0, 42fff0 <wcrtomb@plt+0x2b4b0>
  430010:	add	x0, x27, #0x1
  430014:	bl	404250 <malloc@plt>
  430018:	cbz	x0, 430390 <wcrtomb@plt+0x2b850>
  43001c:	mov	x1, x28
  430020:	mov	x2, x27
  430024:	mov	x26, x0
  430028:	bl	403ec0 <memcpy@plt>
  43002c:	ldr	w1, [sp, #20]
  430030:	sub	x3, x29, #0x50
  430034:	mov	x0, x26
  430038:	mov	x2, xzr
  43003c:	strb	wzr, [x26, x27]
  430040:	bl	404940 <glob@plt>
  430044:	cbz	w0, 430060 <wcrtomb@plt+0x2b520>
  430048:	cmp	w0, #0x3
  43004c:	b.ne	4303cc <wcrtomb@plt+0x2b88c>  // b.any
  430050:	ldr	w8, [x19, #36]
  430054:	tbnz	w8, #0, 430228 <wcrtomb@plt+0x2b6e8>
  430058:	tbz	w8, #1, 4302d4 <wcrtomb@plt+0x2b794>
  43005c:	b	43059c <wcrtomb@plt+0x2ba5c>
  430060:	mov	x0, x26
  430064:	bl	404700 <free@plt>
  430068:	ldur	x8, [x29, #-80]
  43006c:	cbz	x8, 43024c <wcrtomb@plt+0x2b70c>
  430070:	ldr	x26, [sp, #24]
  430074:	mov	x27, xzr
  430078:	mov	x28, x25
  43007c:	b	4300a4 <wcrtomb@plt+0x2b564>
  430080:	stp	xzr, xzr, [x21]
  430084:	str	x21, [x23]
  430088:	mov	x9, x26
  43008c:	str	x21, [x9]
  430090:	ldur	x8, [x29, #-80]
  430094:	add	x27, x27, #0x1
  430098:	mov	x28, x21
  43009c:	cmp	x8, x27
  4300a0:	b.ls	430250 <wcrtomb@plt+0x2b710>  // b.plast
  4300a4:	mov	w0, #0x1                   	// #1
  4300a8:	mov	w1, #0x28                  	// #40
  4300ac:	bl	404410 <calloc@plt>
  4300b0:	cbz	x0, 4300bc <wcrtomb@plt+0x2b57c>
  4300b4:	mov	x21, x0
  4300b8:	b	4301a8 <wcrtomb@plt+0x2b668>
  4300bc:	bl	404a10 <__errno_location@plt>
  4300c0:	mov	w8, #0xc                   	// #12
  4300c4:	str	w8, [x0]
  4300c8:	ldr	w8, [x19, #32]
  4300cc:	mov	w9, #0x2                   	// #2
  4300d0:	str	w9, [x19, #192]
  4300d4:	tbnz	w8, #7, 4300f4 <wcrtomb@plt+0x2b5b4>
  4300d8:	tbnz	w8, #4, 430108 <wcrtomb@plt+0x2b5c8>
  4300dc:	tbnz	w8, #3, 430190 <wcrtomb@plt+0x2b650>
  4300e0:	mov	x0, x19
  4300e4:	bl	42d484 <wcrtomb@plt+0x28944>
  4300e8:	ldr	x26, [x26]
  4300ec:	cbnz	x26, 430210 <wcrtomb@plt+0x2b6d0>
  4300f0:	b	430198 <wcrtomb@plt+0x2b658>
  4300f4:	ldr	x8, [x19, #88]
  4300f8:	mov	x0, x19
  4300fc:	blr	x8
  430100:	ldr	w8, [x19, #32]
  430104:	tbz	w8, #4, 4300dc <wcrtomb@plt+0x2b59c>
  430108:	ldr	w8, [x19, #192]
  43010c:	ldr	x26, [x19, #96]
  430110:	ldr	x9, [sp, #8]
  430114:	cmp	w8, #0x9
  430118:	b.eq	430174 <wcrtomb@plt+0x2b634>  // b.none
  43011c:	cmp	w8, #0x1
  430120:	b.ne	43014c <wcrtomb@plt+0x2b60c>  // b.any
  430124:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430128:	mov	w2, #0x5                   	// #5
  43012c:	mov	x0, xzr
  430130:	add	x1, x1, #0x751
  430134:	bl	404900 <dcgettext@plt>
  430138:	ldr	x8, [x19, #168]
  43013c:	ldr	x2, [x19, #184]
  430140:	ldrb	w1, [x8, x2]
  430144:	blr	x26
  430148:	b	430184 <wcrtomb@plt+0x2b644>
  43014c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  430150:	ldr	w9, [x9, #4008]
  430154:	sxtw	x8, w8
  430158:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43015c:	add	x1, x1, #0x743
  430160:	cmp	w8, w9
  430164:	b.ge	430178 <wcrtomb@plt+0x2b638>  // b.tcont
  430168:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  43016c:	add	x9, x9, #0xf60
  430170:	add	x9, x9, x8, lsl #3
  430174:	ldr	x1, [x9]
  430178:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43017c:	add	x0, x0, #0x7a4
  430180:	blr	x26
  430184:	ldr	w8, [x19, #32]
  430188:	ldr	x26, [sp, #24]
  43018c:	tbz	w8, #3, 4300e0 <wcrtomb@plt+0x2b5a0>
  430190:	ldr	x26, [x26]
  430194:	cbnz	x26, 430210 <wcrtomb@plt+0x2b6d0>
  430198:	ldr	x26, [sp, #24]
  43019c:	stp	xzr, xzr, [x26]
  4301a0:	ldr	w8, [x19, #192]
  4301a4:	cbnz	w8, 430388 <wcrtomb@plt+0x2b848>
  4301a8:	ldur	x8, [x29, #-72]
  4301ac:	ldr	x0, [x8, x27, lsl #3]
  4301b0:	bl	4044e0 <strdup@plt>
  4301b4:	cbz	x0, 4302e4 <wcrtomb@plt+0x2b7a4>
  4301b8:	ldr	w8, [x21, #16]
  4301bc:	str	x0, [x21, #24]
  4301c0:	mov	x9, x21
  4301c4:	orr	w8, w8, #0x6
  4301c8:	str	w8, [x21, #16]
  4301cc:	ldr	x8, [x26]
  4301d0:	cbz	x8, 430080 <wcrtomb@plt+0x2b540>
  4301d4:	mov	x8, x9
  4301d8:	ldr	x9, [x9, #8]
  4301dc:	cbnz	x9, 4301d4 <wcrtomb@plt+0x2b694>
  4301e0:	mov	x9, x28
  4301e4:	ldr	x10, [x9, #8]!
  4301e8:	cmp	x10, #0x0
  4301ec:	csel	x11, x23, x10, eq  // eq = none
  4301f0:	str	x8, [x11]
  4301f4:	str	x10, [x8, #8]
  4301f8:	str	x28, [x21]
  4301fc:	b	43008c <wcrtomb@plt+0x2b54c>
  430200:	mov	x0, x26
  430204:	bl	404700 <free@plt>
  430208:	mov	x26, x24
  43020c:	cbz	x24, 430198 <wcrtomb@plt+0x2b658>
  430210:	ldrb	w8, [x26, #16]
  430214:	ldr	x24, [x26, #8]
  430218:	tbz	w8, #1, 430200 <wcrtomb@plt+0x2b6c0>
  43021c:	ldr	x0, [x26, #24]
  430220:	bl	404700 <free@plt>
  430224:	b	430200 <wcrtomb@plt+0x2b6c0>
  430228:	ldp	x8, x9, [x25]
  43022c:	cbz	x8, 4302a4 <wcrtomb@plt+0x2b764>
  430230:	str	x9, [x8, #8]
  430234:	ldr	x9, [x25, #8]
  430238:	cbnz	x9, 4302b4 <wcrtomb@plt+0x2b774>
  43023c:	ldr	w9, [x8, #16]
  430240:	and	w9, w9, #0xffffffef
  430244:	str	w9, [x8, #16]
  430248:	b	4302b0 <wcrtomb@plt+0x2b770>
  43024c:	ldr	x26, [sp, #24]
  430250:	sub	x0, x29, #0x50
  430254:	bl	4047b0 <globfree@plt>
  430258:	ldp	x8, x9, [x25]
  43025c:	cbz	x8, 43027c <wcrtomb@plt+0x2b73c>
  430260:	str	x9, [x8, #8]
  430264:	ldr	x9, [x25, #8]
  430268:	cbnz	x9, 430288 <wcrtomb@plt+0x2b748>
  43026c:	ldr	w9, [x8, #16]
  430270:	and	w9, w9, #0xffffffef
  430274:	str	w9, [x8, #16]
  430278:	b	430284 <wcrtomb@plt+0x2b744>
  43027c:	str	x9, [x26]
  430280:	cbnz	x9, 430288 <wcrtomb@plt+0x2b748>
  430284:	mov	x9, x23
  430288:	str	x8, [x9]
  43028c:	ldrb	w8, [x25, #16]
  430290:	stp	xzr, xzr, [x25]
  430294:	tbz	w8, #1, 42ff94 <wcrtomb@plt+0x2b454>
  430298:	ldr	x0, [x25, #24]
  43029c:	bl	404700 <free@plt>
  4302a0:	b	42ff94 <wcrtomb@plt+0x2b454>
  4302a4:	ldr	x10, [sp, #24]
  4302a8:	str	x9, [x10]
  4302ac:	cbnz	x9, 4302b4 <wcrtomb@plt+0x2b774>
  4302b0:	mov	x9, x23
  4302b4:	str	x8, [x9]
  4302b8:	ldrb	w8, [x25, #16]
  4302bc:	stp	xzr, xzr, [x25]
  4302c0:	tbz	w8, #1, 4302cc <wcrtomb@plt+0x2b78c>
  4302c4:	ldr	x0, [x25, #24]
  4302c8:	bl	404700 <free@plt>
  4302cc:	mov	x0, x25
  4302d0:	bl	404700 <free@plt>
  4302d4:	mov	x0, x26
  4302d8:	b	42ff98 <wcrtomb@plt+0x2b458>
  4302dc:	mov	w0, wzr
  4302e0:	b	430798 <wcrtomb@plt+0x2bc58>
  4302e4:	ldrb	w8, [x21, #16]
  4302e8:	tbz	w8, #1, 4302f4 <wcrtomb@plt+0x2b7b4>
  4302ec:	ldr	x0, [x21, #24]
  4302f0:	bl	404700 <free@plt>
  4302f4:	mov	x0, x21
  4302f8:	bl	404700 <free@plt>
  4302fc:	bl	404a10 <__errno_location@plt>
  430300:	mov	w8, #0xc                   	// #12
  430304:	str	w8, [x0]
  430308:	ldr	w8, [x19, #32]
  43030c:	mov	w9, #0x2                   	// #2
  430310:	str	w9, [x19, #192]
  430314:	tbnz	w8, #7, 430334 <wcrtomb@plt+0x2b7f4>
  430318:	tbnz	w8, #4, 430348 <wcrtomb@plt+0x2b808>
  43031c:	tbnz	w8, #3, 43050c <wcrtomb@plt+0x2b9cc>
  430320:	mov	x0, x19
  430324:	bl	42d484 <wcrtomb@plt+0x28944>
  430328:	ldr	x20, [x26]
  43032c:	cbnz	x20, 43052c <wcrtomb@plt+0x2b9ec>
  430330:	b	430514 <wcrtomb@plt+0x2b9d4>
  430334:	ldr	x8, [x19, #88]
  430338:	mov	x0, x19
  43033c:	blr	x8
  430340:	ldr	w8, [x19, #32]
  430344:	tbz	w8, #4, 43031c <wcrtomb@plt+0x2b7dc>
  430348:	ldr	w8, [x19, #192]
  43034c:	ldr	x20, [x19, #96]
  430350:	cmp	w8, #0x9
  430354:	b.eq	43043c <wcrtomb@plt+0x2b8fc>  // b.none
  430358:	cmp	w8, #0x1
  43035c:	b.ne	430418 <wcrtomb@plt+0x2b8d8>  // b.any
  430360:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430364:	add	x1, x1, #0x751
  430368:	mov	w2, #0x5                   	// #5
  43036c:	mov	x0, xzr
  430370:	bl	404900 <dcgettext@plt>
  430374:	ldr	x8, [x19, #168]
  430378:	ldr	x2, [x19, #184]
  43037c:	ldrb	w1, [x8, x2]
  430380:	blr	x20
  430384:	b	430504 <wcrtomb@plt+0x2b9c4>
  430388:	mov	w0, #0x1                   	// #1
  43038c:	b	430798 <wcrtomb@plt+0x2bc58>
  430390:	bl	404a10 <__errno_location@plt>
  430394:	mov	w8, #0xc                   	// #12
  430398:	str	w8, [x0]
  43039c:	ldr	w8, [x19, #32]
  4303a0:	mov	w9, #0x2                   	// #2
  4303a4:	str	w9, [x19, #192]
  4303a8:	tbnz	w8, #7, 430448 <wcrtomb@plt+0x2b908>
  4303ac:	ldr	x22, [sp, #24]
  4303b0:	tbnz	w8, #4, 430460 <wcrtomb@plt+0x2b920>
  4303b4:	tbnz	w8, #3, 4306b0 <wcrtomb@plt+0x2bb70>
  4303b8:	mov	x0, x19
  4303bc:	bl	42d484 <wcrtomb@plt+0x28944>
  4303c0:	ldr	x20, [x22]
  4303c4:	cbnz	x20, 4306cc <wcrtomb@plt+0x2bb8c>
  4303c8:	b	430790 <wcrtomb@plt+0x2bc50>
  4303cc:	cmp	w0, #0x1
  4303d0:	b.ne	4304a0 <wcrtomb@plt+0x2b960>  // b.any
  4303d4:	mov	x0, x26
  4303d8:	bl	404700 <free@plt>
  4303dc:	bl	404a10 <__errno_location@plt>
  4303e0:	mov	w8, #0xc                   	// #12
  4303e4:	str	w8, [x0]
  4303e8:	ldr	w8, [x19, #32]
  4303ec:	mov	w9, #0x2                   	// #2
  4303f0:	str	w9, [x19, #192]
  4303f4:	tbnz	w8, #7, 430544 <wcrtomb@plt+0x2ba04>
  4303f8:	ldr	x22, [sp, #24]
  4303fc:	tbnz	w8, #4, 43055c <wcrtomb@plt+0x2ba1c>
  430400:	tbnz	w8, #3, 430788 <wcrtomb@plt+0x2bc48>
  430404:	mov	x0, x19
  430408:	bl	42d484 <wcrtomb@plt+0x28944>
  43040c:	ldr	x20, [x22]
  430410:	cbnz	x20, 4307c8 <wcrtomb@plt+0x2bc88>
  430414:	b	430790 <wcrtomb@plt+0x2bc50>
  430418:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  43041c:	ldr	w9, [x9, #4008]
  430420:	sxtw	x8, w8
  430424:	cmp	w8, w9
  430428:	b.ge	4304f0 <wcrtomb@plt+0x2b9b0>  // b.tcont
  43042c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  430430:	add	x9, x9, #0xf60
  430434:	add	x8, x9, x8, lsl #3
  430438:	str	x8, [sp, #8]
  43043c:	ldr	x8, [sp, #8]
  430440:	ldr	x1, [x8]
  430444:	b	4304f8 <wcrtomb@plt+0x2b9b8>
  430448:	ldr	x8, [x19, #88]
  43044c:	mov	x0, x19
  430450:	blr	x8
  430454:	ldr	w8, [x19, #32]
  430458:	ldr	x22, [sp, #24]
  43045c:	tbz	w8, #4, 4303b4 <wcrtomb@plt+0x2b874>
  430460:	ldr	w8, [x19, #192]
  430464:	ldr	x20, [x19, #96]
  430468:	cmp	w8, #0x9
  43046c:	b.eq	43064c <wcrtomb@plt+0x2bb0c>  // b.none
  430470:	cmp	w8, #0x1
  430474:	b.ne	430628 <wcrtomb@plt+0x2bae8>  // b.any
  430478:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43047c:	add	x1, x1, #0x751
  430480:	mov	w2, #0x5                   	// #5
  430484:	mov	x0, xzr
  430488:	bl	404900 <dcgettext@plt>
  43048c:	ldr	x8, [x19, #168]
  430490:	ldr	x2, [x19, #184]
  430494:	ldrb	w1, [x8, x2]
  430498:	blr	x20
  43049c:	b	4306a8 <wcrtomb@plt+0x2bb68>
  4304a0:	mov	x0, x26
  4304a4:	bl	404700 <free@plt>
  4304a8:	ldrb	w8, [x19, #32]
  4304ac:	mov	w0, #0x8                   	// #8
  4304b0:	str	w0, [x19, #192]
  4304b4:	tbz	w8, #4, 430798 <wcrtomb@plt+0x2bc58>
  4304b8:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4304bc:	ldr	w8, [x8, #4008]
  4304c0:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  4304c4:	ldr	x9, [x9, #4000]
  4304c8:	ldr	x10, [x19, #96]
  4304cc:	cmp	w8, #0x8
  4304d0:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4304d4:	add	x8, x8, #0x743
  4304d8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4304dc:	csel	x1, x9, x8, gt
  4304e0:	add	x0, x0, #0x7a4
  4304e4:	blr	x10
  4304e8:	mov	w0, #0x8                   	// #8
  4304ec:	b	430798 <wcrtomb@plt+0x2bc58>
  4304f0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4304f4:	add	x1, x1, #0x743
  4304f8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4304fc:	add	x0, x0, #0x7a4
  430500:	blr	x20
  430504:	ldr	w8, [x19, #32]
  430508:	tbz	w8, #3, 430320 <wcrtomb@plt+0x2b7e0>
  43050c:	ldr	x20, [x26]
  430510:	cbnz	x20, 43052c <wcrtomb@plt+0x2b9ec>
  430514:	stp	xzr, xzr, [x26]
  430518:	b	430794 <wcrtomb@plt+0x2bc54>
  43051c:	mov	x0, x20
  430520:	bl	404700 <free@plt>
  430524:	mov	x20, x21
  430528:	cbz	x21, 430514 <wcrtomb@plt+0x2b9d4>
  43052c:	ldrb	w8, [x20, #16]
  430530:	ldr	x21, [x20, #8]
  430534:	tbz	w8, #1, 43051c <wcrtomb@plt+0x2b9dc>
  430538:	ldr	x0, [x20, #24]
  43053c:	bl	404700 <free@plt>
  430540:	b	43051c <wcrtomb@plt+0x2b9dc>
  430544:	ldr	x8, [x19, #88]
  430548:	mov	x0, x19
  43054c:	blr	x8
  430550:	ldr	w8, [x19, #32]
  430554:	ldr	x22, [sp, #24]
  430558:	tbz	w8, #4, 430400 <wcrtomb@plt+0x2b8c0>
  43055c:	ldr	w8, [x19, #192]
  430560:	ldr	x20, [x19, #96]
  430564:	cmp	w8, #0x9
  430568:	b.eq	430708 <wcrtomb@plt+0x2bbc8>  // b.none
  43056c:	cmp	w8, #0x1
  430570:	b.ne	4306e4 <wcrtomb@plt+0x2bba4>  // b.any
  430574:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430578:	add	x1, x1, #0x751
  43057c:	mov	w2, #0x5                   	// #5
  430580:	mov	x0, xzr
  430584:	bl	404900 <dcgettext@plt>
  430588:	ldr	x8, [x19, #168]
  43058c:	ldr	x2, [x19, #184]
  430590:	ldrb	w1, [x8, x2]
  430594:	blr	x20
  430598:	b	430780 <wcrtomb@plt+0x2bc40>
  43059c:	ldr	w8, [x19, #192]
  4305a0:	ldr	x20, [sp, #8]
  4305a4:	cmp	w8, #0x9
  4305a8:	b.ne	4305b4 <wcrtomb@plt+0x2ba74>  // b.any
  4305ac:	ldr	x0, [x20]
  4305b0:	bl	404700 <free@plt>
  4305b4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4305b8:	add	x1, x1, #0x8f8
  4305bc:	mov	w2, #0x5                   	// #5
  4305c0:	mov	x0, xzr
  4305c4:	bl	404900 <dcgettext@plt>
  4305c8:	mov	x4, x0
  4305cc:	add	x0, sp, #0x20
  4305d0:	mov	w1, #0x80                  	// #128
  4305d4:	mov	w2, #0x1                   	// #1
  4305d8:	mov	w3, #0x80                  	// #128
  4305dc:	mov	x5, x26
  4305e0:	bl	4041d0 <__snprintf_chk@plt>
  4305e4:	mov	x0, x26
  4305e8:	bl	404700 <free@plt>
  4305ec:	add	x0, sp, #0x20
  4305f0:	bl	4044e0 <strdup@plt>
  4305f4:	str	x0, [x20]
  4305f8:	cbz	x0, 430658 <wcrtomb@plt+0x2bb18>
  4305fc:	ldrb	w8, [x19, #32]
  430600:	mov	x1, x0
  430604:	mov	w0, #0x9                   	// #9
  430608:	str	w0, [x19, #192]
  43060c:	tbz	w8, #4, 430798 <wcrtomb@plt+0x2bc58>
  430610:	ldr	x8, [x19, #96]
  430614:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430618:	add	x0, x0, #0x7a4
  43061c:	blr	x8
  430620:	mov	w0, #0x9                   	// #9
  430624:	b	430798 <wcrtomb@plt+0x2bc58>
  430628:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  43062c:	ldr	w9, [x9, #4008]
  430630:	sxtw	x8, w8
  430634:	cmp	w8, w9
  430638:	b.ge	430694 <wcrtomb@plt+0x2bb54>  // b.tcont
  43063c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  430640:	add	x9, x9, #0xf60
  430644:	add	x8, x9, x8, lsl #3
  430648:	str	x8, [sp, #8]
  43064c:	ldr	x8, [sp, #8]
  430650:	ldr	x1, [x8]
  430654:	b	43069c <wcrtomb@plt+0x2bb5c>
  430658:	bl	404a10 <__errno_location@plt>
  43065c:	mov	w8, #0xc                   	// #12
  430660:	str	w8, [x0]
  430664:	ldr	w8, [x19, #32]
  430668:	mov	w9, #0x2                   	// #2
  43066c:	str	w9, [x19, #192]
  430670:	tbnz	w8, #7, 430714 <wcrtomb@plt+0x2bbd4>
  430674:	ldr	x22, [sp, #24]
  430678:	tbnz	w8, #4, 43072c <wcrtomb@plt+0x2bbec>
  43067c:	tbnz	w8, #3, 43082c <wcrtomb@plt+0x2bcec>
  430680:	mov	x0, x19
  430684:	bl	42d484 <wcrtomb@plt+0x28944>
  430688:	ldr	x20, [x22]
  43068c:	cbnz	x20, 430848 <wcrtomb@plt+0x2bd08>
  430690:	b	430790 <wcrtomb@plt+0x2bc50>
  430694:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430698:	add	x1, x1, #0x743
  43069c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4306a0:	add	x0, x0, #0x7a4
  4306a4:	blr	x20
  4306a8:	ldr	w8, [x19, #32]
  4306ac:	tbz	w8, #3, 4303b8 <wcrtomb@plt+0x2b878>
  4306b0:	ldr	x20, [x22]
  4306b4:	cbnz	x20, 4306cc <wcrtomb@plt+0x2bb8c>
  4306b8:	b	430790 <wcrtomb@plt+0x2bc50>
  4306bc:	mov	x0, x20
  4306c0:	bl	404700 <free@plt>
  4306c4:	mov	x20, x21
  4306c8:	cbz	x21, 430790 <wcrtomb@plt+0x2bc50>
  4306cc:	ldrb	w8, [x20, #16]
  4306d0:	ldr	x21, [x20, #8]
  4306d4:	tbz	w8, #1, 4306bc <wcrtomb@plt+0x2bb7c>
  4306d8:	ldr	x0, [x20, #24]
  4306dc:	bl	404700 <free@plt>
  4306e0:	b	4306bc <wcrtomb@plt+0x2bb7c>
  4306e4:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  4306e8:	ldr	w9, [x9, #4008]
  4306ec:	sxtw	x8, w8
  4306f0:	cmp	w8, w9
  4306f4:	b.ge	43076c <wcrtomb@plt+0x2bc2c>  // b.tcont
  4306f8:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  4306fc:	add	x9, x9, #0xf60
  430700:	add	x8, x9, x8, lsl #3
  430704:	str	x8, [sp, #8]
  430708:	ldr	x8, [sp, #8]
  43070c:	ldr	x1, [x8]
  430710:	b	430774 <wcrtomb@plt+0x2bc34>
  430714:	ldr	x8, [x19, #88]
  430718:	mov	x0, x19
  43071c:	blr	x8
  430720:	ldr	w8, [x19, #32]
  430724:	ldr	x22, [sp, #24]
  430728:	tbz	w8, #4, 43067c <wcrtomb@plt+0x2bb3c>
  43072c:	ldr	w8, [x19, #192]
  430730:	ldr	x20, [x19, #96]
  430734:	cmp	w8, #0x9
  430738:	b.eq	430804 <wcrtomb@plt+0x2bcc4>  // b.none
  43073c:	cmp	w8, #0x1
  430740:	b.ne	4307e0 <wcrtomb@plt+0x2bca0>  // b.any
  430744:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430748:	add	x1, x1, #0x751
  43074c:	mov	w2, #0x5                   	// #5
  430750:	mov	x0, xzr
  430754:	bl	404900 <dcgettext@plt>
  430758:	ldr	x8, [x19, #168]
  43075c:	ldr	x2, [x19, #184]
  430760:	ldrb	w1, [x8, x2]
  430764:	blr	x20
  430768:	b	430824 <wcrtomb@plt+0x2bce4>
  43076c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430770:	add	x1, x1, #0x743
  430774:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430778:	add	x0, x0, #0x7a4
  43077c:	blr	x20
  430780:	ldr	w8, [x19, #32]
  430784:	tbz	w8, #3, 430404 <wcrtomb@plt+0x2b8c4>
  430788:	ldr	x20, [x22]
  43078c:	cbnz	x20, 4307c8 <wcrtomb@plt+0x2bc88>
  430790:	stp	xzr, xzr, [x22]
  430794:	ldr	w0, [x19, #192]
  430798:	ldp	x20, x19, [sp, #320]
  43079c:	ldp	x22, x21, [sp, #304]
  4307a0:	ldp	x24, x23, [sp, #288]
  4307a4:	ldp	x26, x25, [sp, #272]
  4307a8:	ldp	x28, x27, [sp, #256]
  4307ac:	ldp	x29, x30, [sp, #240]
  4307b0:	add	sp, sp, #0x150
  4307b4:	ret
  4307b8:	mov	x0, x20
  4307bc:	bl	404700 <free@plt>
  4307c0:	mov	x20, x21
  4307c4:	cbz	x21, 430790 <wcrtomb@plt+0x2bc50>
  4307c8:	ldrb	w8, [x20, #16]
  4307cc:	ldr	x21, [x20, #8]
  4307d0:	tbz	w8, #1, 4307b8 <wcrtomb@plt+0x2bc78>
  4307d4:	ldr	x0, [x20, #24]
  4307d8:	bl	404700 <free@plt>
  4307dc:	b	4307b8 <wcrtomb@plt+0x2bc78>
  4307e0:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  4307e4:	ldr	w9, [x9, #4008]
  4307e8:	sxtw	x8, w8
  4307ec:	cmp	w8, w9
  4307f0:	b.ge	430810 <wcrtomb@plt+0x2bcd0>  // b.tcont
  4307f4:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  4307f8:	add	x9, x9, #0xf60
  4307fc:	add	x8, x9, x8, lsl #3
  430800:	str	x8, [sp, #8]
  430804:	ldr	x8, [sp, #8]
  430808:	ldr	x1, [x8]
  43080c:	b	430818 <wcrtomb@plt+0x2bcd8>
  430810:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430814:	add	x1, x1, #0x743
  430818:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43081c:	add	x0, x0, #0x7a4
  430820:	blr	x20
  430824:	ldr	w8, [x19, #32]
  430828:	tbz	w8, #3, 430680 <wcrtomb@plt+0x2bb40>
  43082c:	ldr	x20, [x22]
  430830:	cbnz	x20, 430848 <wcrtomb@plt+0x2bd08>
  430834:	b	430790 <wcrtomb@plt+0x2bc50>
  430838:	mov	x0, x20
  43083c:	bl	404700 <free@plt>
  430840:	mov	x20, x21
  430844:	cbz	x21, 430790 <wcrtomb@plt+0x2bc50>
  430848:	ldrb	w8, [x20, #16]
  43084c:	ldr	x21, [x20, #8]
  430850:	tbz	w8, #1, 430838 <wcrtomb@plt+0x2bcf8>
  430854:	ldr	x0, [x20, #24]
  430858:	bl	404700 <free@plt>
  43085c:	b	430838 <wcrtomb@plt+0x2bcf8>
  430860:	sub	sp, sp, #0x70
  430864:	stp	x29, x30, [sp, #16]
  430868:	stp	x28, x27, [sp, #32]
  43086c:	stp	x26, x25, [sp, #48]
  430870:	stp	x24, x23, [sp, #64]
  430874:	stp	x22, x21, [sp, #80]
  430878:	stp	x20, x19, [sp, #96]
  43087c:	ldr	w8, [x1, #16]
  430880:	mov	x21, x3
  430884:	mov	x22, x2
  430888:	mov	x19, x1
  43088c:	mov	x20, x0
  430890:	add	x29, sp, #0x10
  430894:	tbnz	w8, #0, 4308b0 <wcrtomb@plt+0x2bd70>
  430898:	tbnz	w8, #1, 4308c0 <wcrtomb@plt+0x2bd80>
  43089c:	ldr	x8, [x20, #168]
  4308a0:	ldp	x9, x10, [x19, #24]
  4308a4:	add	x23, x8, x9
  4308a8:	sub	x24, x10, x9
  4308ac:	b	4308d0 <wcrtomb@plt+0x2bd90>
  4308b0:	adrp	x23, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4308b4:	mov	x24, xzr
  4308b8:	add	x23, x23, #0x66
  4308bc:	b	4308d0 <wcrtomb@plt+0x2bd90>
  4308c0:	ldr	x23, [x19, #24]
  4308c4:	mov	x0, x23
  4308c8:	bl	403f40 <strlen@plt>
  4308cc:	mov	x24, x0
  4308d0:	cmp	x24, #0x1
  4308d4:	stp	x19, x23, [sp]
  4308d8:	b.lt	4309fc <wcrtomb@plt+0x2bebc>  // b.tstop
  4308dc:	mov	x25, xzr
  4308e0:	add	x27, x23, x24
  4308e4:	mov	w28, #0x14                  	// #20
  4308e8:	mov	x8, x23
  4308ec:	b	430904 <wcrtomb@plt+0x2bdc4>
  4308f0:	ldr	x8, [sp, #8]
  4308f4:	add	x8, x8, #0x1
  4308f8:	cmp	x8, x27
  4308fc:	str	x8, [sp, #8]
  430900:	b.cs	4309b0 <wcrtomb@plt+0x2be70>  // b.hs, b.nlast
  430904:	ldrb	w9, [x8]
  430908:	cmp	w9, #0x24
  43090c:	b.eq	430924 <wcrtomb@plt+0x2bde4>  // b.none
  430910:	cmp	w9, #0x5c
  430914:	b.ne	4308f4 <wcrtomb@plt+0x2bdb4>  // b.any
  430918:	add	x8, x8, #0x1
  43091c:	str	x8, [sp, #8]
  430920:	b	4308f4 <wcrtomb@plt+0x2bdb4>
  430924:	ldrb	w0, [x8, #1]
  430928:	blr	x22
  43092c:	cbz	w0, 4308f0 <wcrtomb@plt+0x2bdb0>
  430930:	ldp	x8, x9, [sp]
  430934:	cmp	x8, x19
  430938:	sub	x26, x9, x23
  43093c:	b.eq	43094c <wcrtomb@plt+0x2be0c>  // b.none
  430940:	ldr	w9, [x8, #16]
  430944:	orr	w9, w9, #0x10
  430948:	str	w9, [x8, #16]
  43094c:	mov	x1, sp
  430950:	mov	w5, #0x10                  	// #16
  430954:	mov	x0, x20
  430958:	mov	x2, x19
  43095c:	mov	x3, x25
  430960:	mov	x4, x26
  430964:	bl	431388 <wcrtomb@plt+0x2c848>
  430968:	cbnz	w0, 4309f4 <wcrtomb@plt+0x2beb4>
  43096c:	ldr	x8, [sp, #8]
  430970:	sub	x2, x24, x26
  430974:	mov	x3, sp
  430978:	add	x4, sp, #0x8
  43097c:	add	x1, x8, #0x1
  430980:	str	x1, [sp, #8]
  430984:	ldr	w8, [x19, #16]
  430988:	mov	x0, x20
  43098c:	and	w5, w8, w28
  430990:	blr	x21
  430994:	cbnz	w0, 4309f4 <wcrtomb@plt+0x2beb4>
  430998:	ldr	x8, [sp, #8]
  43099c:	sub	x9, x25, x23
  4309a0:	add	x9, x9, x8
  4309a4:	add	x25, x9, #0x1
  4309a8:	add	x23, x8, #0x1
  4309ac:	b	4308f4 <wcrtomb@plt+0x2bdb4>
  4309b0:	subs	x4, x8, x23
  4309b4:	b.ls	4309fc <wcrtomb@plt+0x2bebc>  // b.plast
  4309b8:	ldr	x8, [sp]
  4309bc:	cmp	x8, x19
  4309c0:	b.eq	4309d0 <wcrtomb@plt+0x2be90>  // b.none
  4309c4:	ldr	w9, [x8, #16]
  4309c8:	orr	w9, w9, #0x10
  4309cc:	str	w9, [x8, #16]
  4309d0:	ldr	w8, [x19, #16]
  4309d4:	mov	w9, #0x14                  	// #20
  4309d8:	mov	x1, sp
  4309dc:	mov	x0, x20
  4309e0:	and	w5, w8, w9
  4309e4:	mov	x2, x19
  4309e8:	mov	x3, x25
  4309ec:	bl	431388 <wcrtomb@plt+0x2c848>
  4309f0:	cbz	w0, 4309fc <wcrtomb@plt+0x2bebc>
  4309f4:	mov	w0, #0x1                   	// #1
  4309f8:	b	430a5c <wcrtomb@plt+0x2bf1c>
  4309fc:	ldr	x8, [sp]
  430a00:	cmp	x8, x19
  430a04:	b.eq	430a58 <wcrtomb@plt+0x2bf18>  // b.none
  430a08:	ldp	x8, x9, [x19]
  430a0c:	cbz	x8, 430a2c <wcrtomb@plt+0x2beec>
  430a10:	str	x9, [x8, #8]
  430a14:	ldr	x9, [x19, #8]
  430a18:	cbnz	x9, 430a38 <wcrtomb@plt+0x2bef8>
  430a1c:	ldr	w9, [x8, #16]
  430a20:	and	w9, w9, #0xffffffef
  430a24:	str	w9, [x8, #16]
  430a28:	b	430a34 <wcrtomb@plt+0x2bef4>
  430a2c:	str	x9, [x20, #208]
  430a30:	cbnz	x9, 430a38 <wcrtomb@plt+0x2bef8>
  430a34:	add	x9, x20, #0xd8
  430a38:	str	x8, [x9]
  430a3c:	ldrb	w8, [x19, #16]
  430a40:	stp	xzr, xzr, [x19]
  430a44:	tbz	w8, #1, 430a50 <wcrtomb@plt+0x2bf10>
  430a48:	ldr	x0, [x19, #24]
  430a4c:	bl	404700 <free@plt>
  430a50:	mov	x0, x19
  430a54:	bl	404700 <free@plt>
  430a58:	mov	w0, wzr
  430a5c:	ldp	x20, x19, [sp, #96]
  430a60:	ldp	x22, x21, [sp, #80]
  430a64:	ldp	x24, x23, [sp, #64]
  430a68:	ldp	x26, x25, [sp, #48]
  430a6c:	ldp	x28, x27, [sp, #32]
  430a70:	ldp	x29, x30, [sp, #16]
  430a74:	add	sp, sp, #0x70
  430a78:	ret
  430a7c:	cmp	w0, #0x28
  430a80:	cset	w0, eq  // eq = none
  430a84:	ret
  430a88:	sub	sp, sp, #0x140
  430a8c:	stp	x20, x19, [sp, #304]
  430a90:	subs	x8, x2, #0x1
  430a94:	mov	x19, x0
  430a98:	stp	x29, x30, [sp, #240]
  430a9c:	str	x28, [sp, #256]
  430aa0:	stp	x24, x23, [sp, #272]
  430aa4:	stp	x22, x21, [sp, #288]
  430aa8:	add	x29, sp, #0xf0
  430aac:	b.eq	430b68 <wcrtomb@plt+0x2c028>  // b.none
  430ab0:	adrp	x10, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430ab4:	mov	w21, w5
  430ab8:	mov	x20, x3
  430abc:	mov	w11, wzr
  430ac0:	mov	x22, xzr
  430ac4:	add	x23, x1, #0x1
  430ac8:	mov	w9, #0x1                   	// #1
  430acc:	add	x10, x10, #0x590
  430ad0:	b	430aec <wcrtomb@plt+0x2bfac>
  430ad4:	ldrb	w11, [x23, x22]
  430ad8:	cmp	w11, #0x27
  430adc:	cset	w11, ne  // ne = any
  430ae0:	add	x22, x22, #0x1
  430ae4:	cmp	x22, x8
  430ae8:	b.cs	430b68 <wcrtomb@plt+0x2c028>  // b.hs, b.nlast
  430aec:	cmp	w11, #0x2
  430af0:	b.eq	430b2c <wcrtomb@plt+0x2bfec>  // b.none
  430af4:	cmp	w11, #0x1
  430af8:	b.eq	430ad4 <wcrtomb@plt+0x2bf94>  // b.none
  430afc:	cbnz	w11, 430ae0 <wcrtomb@plt+0x2bfa0>
  430b00:	ldrb	w11, [x23, x22]
  430b04:	sub	w11, w11, #0x22
  430b08:	cmp	w11, #0x7
  430b0c:	b.hi	430b60 <wcrtomb@plt+0x2c020>  // b.pmore
  430b10:	adr	x12, 430ae0 <wcrtomb@plt+0x2bfa0>
  430b14:	ldrb	w13, [x10, x11]
  430b18:	add	x12, x12, x13, lsl #2
  430b1c:	mov	w11, #0x2                   	// #2
  430b20:	br	x12
  430b24:	mov	w11, #0x1                   	// #1
  430b28:	b	430ae0 <wcrtomb@plt+0x2bfa0>
  430b2c:	ldrb	w11, [x23, x22]
  430b30:	cmp	w11, #0x22
  430b34:	b.eq	430b60 <wcrtomb@plt+0x2c020>  // b.none
  430b38:	cmp	w11, #0x5c
  430b3c:	b.ne	430b44 <wcrtomb@plt+0x2c004>  // b.any
  430b40:	add	x22, x22, #0x1
  430b44:	mov	w11, #0x2                   	// #2
  430b48:	b	430ae0 <wcrtomb@plt+0x2bfa0>
  430b4c:	mov	w11, wzr
  430b50:	add	x9, x9, #0x1
  430b54:	b	430ae0 <wcrtomb@plt+0x2bfa0>
  430b58:	subs	x9, x9, #0x1
  430b5c:	b.eq	430bc8 <wcrtomb@plt+0x2c088>  // b.none
  430b60:	mov	w11, wzr
  430b64:	b	430ae0 <wcrtomb@plt+0x2bfa0>
  430b68:	ldrb	w8, [x19, #32]
  430b6c:	mov	w9, #0x7                   	// #7
  430b70:	str	w9, [x19, #192]
  430b74:	tbz	w8, #4, 430ba8 <wcrtomb@plt+0x2c068>
  430b78:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  430b7c:	ldr	w8, [x8, #4008]
  430b80:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  430b84:	ldr	x9, [x9, #3992]
  430b88:	ldr	x10, [x19, #96]
  430b8c:	adrp	x11, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430b90:	add	x11, x11, #0x743
  430b94:	cmp	w8, #0x7
  430b98:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430b9c:	csel	x1, x9, x11, gt
  430ba0:	add	x0, x0, #0x7a4
  430ba4:	blr	x10
  430ba8:	mov	w0, #0x1                   	// #1
  430bac:	ldp	x20, x19, [sp, #304]
  430bb0:	ldp	x22, x21, [sp, #288]
  430bb4:	ldp	x24, x23, [sp, #272]
  430bb8:	ldr	x28, [sp, #256]
  430bbc:	ldp	x29, x30, [sp, #240]
  430bc0:	add	sp, sp, #0x140
  430bc4:	ret
  430bc8:	add	x8, x23, x22
  430bcc:	str	x8, [x4]
  430bd0:	ldrb	w8, [x19, #36]
  430bd4:	tbnz	w8, #3, 430bf8 <wcrtomb@plt+0x2c0b8>
  430bd8:	ldp	x4, x8, [x19, #152]
  430bdc:	add	x0, x29, #0x18
  430be0:	mov	x1, x23
  430be4:	mov	x2, x22
  430be8:	mov	x3, xzr
  430bec:	blr	x8
  430bf0:	mov	w22, w0
  430bf4:	b	430c7c <wcrtomb@plt+0x2c13c>
  430bf8:	add	x1, sp, #0x8
  430bfc:	mov	w4, #0x700                 	// #1792
  430c00:	mov	w5, #0x1                   	// #1
  430c04:	mov	x0, x19
  430c08:	mov	x2, x23
  430c0c:	mov	w3, w22
  430c10:	bl	4316f4 <wcrtomb@plt+0x2cbb4>
  430c14:	cbz	w0, 430c58 <wcrtomb@plt+0x2c118>
  430c18:	ldr	w8, [x19, #192]
  430c1c:	cmp	w8, #0x9
  430c20:	b.ne	430c2c <wcrtomb@plt+0x2c0ec>  // b.any
  430c24:	ldr	x0, [x19, #200]
  430c28:	bl	404700 <free@plt>
  430c2c:	ldr	w8, [sp, #200]
  430c30:	cmp	w8, #0x9
  430c34:	str	w8, [x19, #192]
  430c38:	b.ne	430c4c <wcrtomb@plt+0x2c10c>  // b.any
  430c3c:	ldr	x8, [sp, #208]
  430c40:	str	x8, [x19, #200]
  430c44:	str	wzr, [sp, #200]
  430c48:	str	xzr, [sp, #208]
  430c4c:	add	x0, sp, #0x8
  430c50:	bl	42d484 <wcrtomb@plt+0x28944>
  430c54:	b	430ba8 <wcrtomb@plt+0x2c068>
  430c58:	ldr	x3, [sp, #16]
  430c5c:	ldp	x4, x8, [x19, #152]
  430c60:	add	x0, x29, #0x18
  430c64:	mov	x1, x23
  430c68:	mov	x2, x22
  430c6c:	blr	x8
  430c70:	mov	w22, w0
  430c74:	add	x0, sp, #0x8
  430c78:	bl	42d484 <wcrtomb@plt+0x28944>
  430c7c:	cbz	w22, 430cfc <wcrtomb@plt+0x2c1bc>
  430c80:	cmp	w22, #0x9
  430c84:	b.eq	430d38 <wcrtomb@plt+0x2c1f8>  // b.none
  430c88:	cmp	w22, #0x2
  430c8c:	b.ne	430d54 <wcrtomb@plt+0x2c214>  // b.any
  430c90:	bl	404a10 <__errno_location@plt>
  430c94:	mov	w8, #0xc                   	// #12
  430c98:	str	w8, [x0]
  430c9c:	ldr	w8, [x19, #32]
  430ca0:	mov	w9, #0x2                   	// #2
  430ca4:	str	w9, [x19, #192]
  430ca8:	tbnz	w8, #7, 430d9c <wcrtomb@plt+0x2c25c>
  430cac:	tbnz	w8, #4, 430db0 <wcrtomb@plt+0x2c270>
  430cb0:	tbnz	w8, #3, 430cbc <wcrtomb@plt+0x2c17c>
  430cb4:	mov	x0, x19
  430cb8:	bl	42d484 <wcrtomb@plt+0x28944>
  430cbc:	mov	x21, x19
  430cc0:	ldr	x20, [x21, #208]!
  430cc4:	cbnz	x20, 430ce4 <wcrtomb@plt+0x2c1a4>
  430cc8:	stp	xzr, xzr, [x21]
  430ccc:	ldr	w0, [x19, #192]
  430cd0:	b	430bac <wcrtomb@plt+0x2c06c>
  430cd4:	mov	x0, x20
  430cd8:	bl	404700 <free@plt>
  430cdc:	mov	x20, x22
  430ce0:	cbz	x22, 430cc8 <wcrtomb@plt+0x2c188>
  430ce4:	ldrb	w8, [x20, #16]
  430ce8:	ldr	x22, [x20, #8]
  430cec:	tbz	w8, #1, 430cd4 <wcrtomb@plt+0x2c194>
  430cf0:	ldr	x0, [x20, #24]
  430cf4:	bl	404700 <free@plt>
  430cf8:	b	430cd4 <wcrtomb@plt+0x2c194>
  430cfc:	ldr	x22, [x29, #24]
  430d00:	cbz	x22, 430df0 <wcrtomb@plt+0x2c2b0>
  430d04:	tbnz	w21, #2, 430e54 <wcrtomb@plt+0x2c314>
  430d08:	ldrb	w8, [x22]
  430d0c:	cbz	w8, 430f58 <wcrtomb@plt+0x2c418>
  430d10:	mov	x0, x22
  430d14:	bl	403f40 <strlen@plt>
  430d18:	ldrb	w8, [x19, #33]
  430d1c:	mov	x3, x0
  430d20:	tbnz	w8, #4, 43104c <wcrtomb@plt+0x2c50c>
  430d24:	ldr	w8, [x19, #36]
  430d28:	mov	w4, #0x744                 	// #1860
  430d2c:	lsr	w8, w8, #7
  430d30:	bfi	w4, w8, #12, #1
  430d34:	b	431050 <wcrtomb@plt+0x2c510>
  430d38:	ldr	w8, [x19, #192]
  430d3c:	cmp	w8, #0x9
  430d40:	b.ne	430d4c <wcrtomb@plt+0x2c20c>  // b.any
  430d44:	ldr	x0, [x19, #200]
  430d48:	bl	404700 <free@plt>
  430d4c:	ldr	x8, [x29, #24]
  430d50:	str	x8, [x19, #200]
  430d54:	ldrb	w8, [x19, #32]
  430d58:	str	w22, [x19, #192]
  430d5c:	tbz	w8, #4, 430ba8 <wcrtomb@plt+0x2c068>
  430d60:	ldr	x20, [x19, #96]
  430d64:	cmp	w22, #0x9
  430d68:	b.eq	430e28 <wcrtomb@plt+0x2c2e8>  // b.none
  430d6c:	cmp	w22, #0x1
  430d70:	b.ne	430e30 <wcrtomb@plt+0x2c2f0>  // b.any
  430d74:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430d78:	add	x1, x1, #0x751
  430d7c:	mov	w2, #0x5                   	// #5
  430d80:	mov	x0, xzr
  430d84:	bl	404900 <dcgettext@plt>
  430d88:	ldr	x8, [x19, #168]
  430d8c:	ldr	x2, [x19, #184]
  430d90:	ldrb	w1, [x8, x2]
  430d94:	blr	x20
  430d98:	b	430ba8 <wcrtomb@plt+0x2c068>
  430d9c:	ldr	x8, [x19, #88]
  430da0:	mov	x0, x19
  430da4:	blr	x8
  430da8:	ldr	w8, [x19, #32]
  430dac:	tbz	w8, #4, 430cb0 <wcrtomb@plt+0x2c170>
  430db0:	ldr	w8, [x19, #192]
  430db4:	ldr	x20, [x19, #96]
  430db8:	cmp	w8, #0x9
  430dbc:	b.eq	430eac <wcrtomb@plt+0x2c36c>  // b.none
  430dc0:	cmp	w8, #0x1
  430dc4:	b.ne	430eb4 <wcrtomb@plt+0x2c374>  // b.any
  430dc8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430dcc:	add	x1, x1, #0x751
  430dd0:	mov	w2, #0x5                   	// #5
  430dd4:	mov	x0, xzr
  430dd8:	bl	404900 <dcgettext@plt>
  430ddc:	ldr	x8, [x19, #168]
  430de0:	ldr	x2, [x19, #184]
  430de4:	ldrb	w1, [x8, x2]
  430de8:	blr	x20
  430dec:	b	4310e0 <wcrtomb@plt+0x2c5a0>
  430df0:	mov	w0, #0x1                   	// #1
  430df4:	mov	w1, #0x28                  	// #40
  430df8:	bl	404410 <calloc@plt>
  430dfc:	cbz	x0, 430ef4 <wcrtomb@plt+0x2c3b4>
  430e00:	ldr	x9, [x19, #208]
  430e04:	mov	x8, x0
  430e08:	cbz	x9, 4311d8 <wcrtomb@plt+0x2c698>
  430e0c:	ldr	x9, [x20]
  430e10:	mov	x11, x8
  430e14:	mov	x10, x11
  430e18:	cbz	x11, 430f94 <wcrtomb@plt+0x2c454>
  430e1c:	ldr	x11, [x10, #8]
  430e20:	cbnz	x11, 430e14 <wcrtomb@plt+0x2c2d4>
  430e24:	b	430f94 <wcrtomb@plt+0x2c454>
  430e28:	add	x8, x19, #0xc8
  430e2c:	b	430e4c <wcrtomb@plt+0x2c30c>
  430e30:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  430e34:	ldr	w8, [x8, #4008]
  430e38:	cmp	w8, w22
  430e3c:	b.le	430edc <wcrtomb@plt+0x2c39c>
  430e40:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  430e44:	add	x8, x8, #0xf60
  430e48:	add	x8, x8, w22, sxtw #3
  430e4c:	ldr	x1, [x8]
  430e50:	b	430ee4 <wcrtomb@plt+0x2c3a4>
  430e54:	mov	w0, #0x1                   	// #1
  430e58:	mov	w1, #0x28                  	// #40
  430e5c:	bl	404410 <calloc@plt>
  430e60:	cbz	x0, 430fb8 <wcrtomb@plt+0x2c478>
  430e64:	ldr	x9, [x19, #208]
  430e68:	mov	x8, x0
  430e6c:	cbz	x9, 430ffc <wcrtomb@plt+0x2c4bc>
  430e70:	ldr	x9, [x20]
  430e74:	mov	x11, x8
  430e78:	mov	x10, x11
  430e7c:	cbz	x11, 430e88 <wcrtomb@plt+0x2c348>
  430e80:	ldr	x11, [x10, #8]
  430e84:	cbnz	x11, 430e78 <wcrtomb@plt+0x2c338>
  430e88:	ldr	x11, [x9, #8]
  430e8c:	add	x12, x19, #0xd8
  430e90:	cmp	x11, #0x0
  430e94:	csel	x12, x12, x11, eq  // eq = none
  430e98:	str	x10, [x12]
  430e9c:	str	x11, [x10, #8]
  430ea0:	str	x9, [x8]
  430ea4:	str	x8, [x9, #8]
  430ea8:	b	431004 <wcrtomb@plt+0x2c4c4>
  430eac:	add	x8, x19, #0xc8
  430eb0:	b	430ed4 <wcrtomb@plt+0x2c394>
  430eb4:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  430eb8:	ldr	w9, [x9, #4008]
  430ebc:	sxtw	x8, w8
  430ec0:	cmp	w8, w9
  430ec4:	b.ge	4310cc <wcrtomb@plt+0x2c58c>  // b.tcont
  430ec8:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  430ecc:	add	x9, x9, #0xf60
  430ed0:	add	x8, x9, x8, lsl #3
  430ed4:	ldr	x1, [x8]
  430ed8:	b	4310d4 <wcrtomb@plt+0x2c594>
  430edc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430ee0:	add	x1, x1, #0x743
  430ee4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  430ee8:	add	x0, x0, #0x7a4
  430eec:	blr	x20
  430ef0:	b	430ba8 <wcrtomb@plt+0x2c068>
  430ef4:	bl	404a10 <__errno_location@plt>
  430ef8:	mov	w8, #0xc                   	// #12
  430efc:	str	w8, [x0]
  430f00:	ldr	w8, [x19, #32]
  430f04:	mov	w9, #0x2                   	// #2
  430f08:	str	w9, [x19, #192]
  430f0c:	tbnz	w8, #7, 4310ec <wcrtomb@plt+0x2c5ac>
  430f10:	tbnz	w8, #4, 431100 <wcrtomb@plt+0x2c5c0>
  430f14:	tbnz	w8, #3, 430f20 <wcrtomb@plt+0x2c3e0>
  430f18:	mov	x0, x19
  430f1c:	bl	42d484 <wcrtomb@plt+0x28944>
  430f20:	mov	x22, x19
  430f24:	ldr	x21, [x22, #208]!
  430f28:	cbnz	x21, 430f40 <wcrtomb@plt+0x2c400>
  430f2c:	b	4311cc <wcrtomb@plt+0x2c68c>
  430f30:	mov	x0, x21
  430f34:	bl	404700 <free@plt>
  430f38:	mov	x21, x23
  430f3c:	cbz	x23, 4311cc <wcrtomb@plt+0x2c68c>
  430f40:	ldrb	w8, [x21, #16]
  430f44:	ldr	x23, [x21, #8]
  430f48:	tbz	w8, #1, 430f30 <wcrtomb@plt+0x2c3f0>
  430f4c:	ldr	x0, [x21, #24]
  430f50:	bl	404700 <free@plt>
  430f54:	b	430f30 <wcrtomb@plt+0x2c3f0>
  430f58:	mov	x0, x22
  430f5c:	bl	404700 <free@plt>
  430f60:	mov	w0, #0x1                   	// #1
  430f64:	mov	w1, #0x28                  	// #40
  430f68:	bl	404410 <calloc@plt>
  430f6c:	cbz	x0, 431194 <wcrtomb@plt+0x2c654>
  430f70:	ldr	x9, [x19, #208]
  430f74:	mov	x8, x0
  430f78:	cbz	x9, 4311d8 <wcrtomb@plt+0x2c698>
  430f7c:	ldr	x9, [x20]
  430f80:	mov	x11, x8
  430f84:	mov	x10, x11
  430f88:	cbz	x11, 430f94 <wcrtomb@plt+0x2c454>
  430f8c:	ldr	x11, [x10, #8]
  430f90:	cbnz	x11, 430f84 <wcrtomb@plt+0x2c444>
  430f94:	ldr	x11, [x9, #8]
  430f98:	add	x12, x19, #0xd8
  430f9c:	cmp	x11, #0x0
  430fa0:	csel	x12, x12, x11, eq  // eq = none
  430fa4:	str	x10, [x12]
  430fa8:	str	x11, [x10, #8]
  430fac:	str	x9, [x8]
  430fb0:	str	x8, [x9, #8]
  430fb4:	b	4311e0 <wcrtomb@plt+0x2c6a0>
  430fb8:	bl	404a10 <__errno_location@plt>
  430fbc:	mov	w8, #0xc                   	// #12
  430fc0:	str	w8, [x0]
  430fc4:	ldr	w8, [x19, #32]
  430fc8:	mov	w9, #0x2                   	// #2
  430fcc:	str	w9, [x19, #192]
  430fd0:	tbnz	w8, #7, 431140 <wcrtomb@plt+0x2c600>
  430fd4:	tbnz	w8, #4, 431154 <wcrtomb@plt+0x2c614>
  430fd8:	tbnz	w8, #3, 430fe4 <wcrtomb@plt+0x2c4a4>
  430fdc:	mov	x0, x19
  430fe0:	bl	42d484 <wcrtomb@plt+0x28944>
  430fe4:	mov	x23, x19
  430fe8:	ldr	x22, [x23, #208]!
  430fec:	cbnz	x22, 431034 <wcrtomb@plt+0x2c4f4>
  430ff0:	stp	xzr, xzr, [x23]
  430ff4:	ldr	w8, [x19, #192]
  430ff8:	cbnz	w8, 430ba8 <wcrtomb@plt+0x2c068>
  430ffc:	stp	xzr, xzr, [x8]
  431000:	stp	x8, x8, [x19, #208]
  431004:	mov	w9, #0xa                   	// #10
  431008:	orr	w9, w21, w9
  43100c:	str	x8, [x20]
  431010:	str	w9, [x8, #16]
  431014:	ldr	x9, [x29, #24]
  431018:	mov	w0, wzr
  43101c:	str	x9, [x8, #24]
  431020:	b	430bac <wcrtomb@plt+0x2c06c>
  431024:	mov	x0, x22
  431028:	bl	404700 <free@plt>
  43102c:	mov	x22, x24
  431030:	cbz	x24, 430ff0 <wcrtomb@plt+0x2c4b0>
  431034:	ldrb	w8, [x22, #16]
  431038:	ldr	x24, [x22, #8]
  43103c:	tbz	w8, #1, 431024 <wcrtomb@plt+0x2c4e4>
  431040:	ldr	x0, [x22, #24]
  431044:	bl	404700 <free@plt>
  431048:	b	431024 <wcrtomb@plt+0x2c4e4>
  43104c:	mov	w4, #0x1744                	// #5956
  431050:	add	x1, sp, #0x8
  431054:	mov	x0, x19
  431058:	mov	x2, x22
  43105c:	mov	w5, wzr
  431060:	add	x23, sp, #0x8
  431064:	bl	4316f4 <wcrtomb@plt+0x2cbb4>
  431068:	ldr	x8, [x29, #24]
  43106c:	mov	w21, w0
  431070:	mov	x0, x8
  431074:	bl	404700 <free@plt>
  431078:	cbnz	w21, 430c18 <wcrtomb@plt+0x2c0d8>
  43107c:	mov	x11, x19
  431080:	ldr	x9, [sp, #216]
  431084:	ldr	x10, [x20]
  431088:	ldr	x12, [x11, #208]!
  43108c:	add	x8, x23, #0xd0
  431090:	cbz	x12, 43121c <wcrtomb@plt+0x2c6dc>
  431094:	mov	x11, x9
  431098:	mov	x12, x11
  43109c:	cbz	x11, 4310a8 <wcrtomb@plt+0x2c568>
  4310a0:	ldr	x11, [x12, #8]
  4310a4:	cbnz	x11, 431098 <wcrtomb@plt+0x2c558>
  4310a8:	mov	x11, x10
  4310ac:	ldr	x13, [x11, #8]!
  4310b0:	add	x14, x19, #0xd8
  4310b4:	cmp	x13, #0x0
  4310b8:	csel	x14, x14, x13, eq  // eq = none
  4310bc:	str	x12, [x14]
  4310c0:	str	x13, [x12, #8]
  4310c4:	str	x10, [x9]
  4310c8:	b	431224 <wcrtomb@plt+0x2c6e4>
  4310cc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4310d0:	add	x1, x1, #0x743
  4310d4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4310d8:	add	x0, x0, #0x7a4
  4310dc:	blr	x20
  4310e0:	ldr	w8, [x19, #32]
  4310e4:	tbz	w8, #3, 430cb4 <wcrtomb@plt+0x2c174>
  4310e8:	b	430cbc <wcrtomb@plt+0x2c17c>
  4310ec:	ldr	x8, [x19, #88]
  4310f0:	mov	x0, x19
  4310f4:	blr	x8
  4310f8:	ldr	w8, [x19, #32]
  4310fc:	tbz	w8, #4, 430f14 <wcrtomb@plt+0x2c3d4>
  431100:	ldr	w8, [x19, #192]
  431104:	ldr	x21, [x19, #96]
  431108:	cmp	w8, #0x9
  43110c:	b.eq	431244 <wcrtomb@plt+0x2c704>  // b.none
  431110:	cmp	w8, #0x1
  431114:	b.ne	43124c <wcrtomb@plt+0x2c70c>  // b.any
  431118:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43111c:	add	x1, x1, #0x751
  431120:	mov	w2, #0x5                   	// #5
  431124:	mov	x0, xzr
  431128:	bl	404900 <dcgettext@plt>
  43112c:	ldr	x8, [x19, #168]
  431130:	ldr	x2, [x19, #184]
  431134:	ldrb	w1, [x8, x2]
  431138:	blr	x21
  43113c:	b	43130c <wcrtomb@plt+0x2c7cc>
  431140:	ldr	x8, [x19, #88]
  431144:	mov	x0, x19
  431148:	blr	x8
  43114c:	ldr	w8, [x19, #32]
  431150:	tbz	w8, #4, 430fd8 <wcrtomb@plt+0x2c498>
  431154:	ldr	w8, [x19, #192]
  431158:	ldr	x22, [x19, #96]
  43115c:	cmp	w8, #0x9
  431160:	b.eq	4312c8 <wcrtomb@plt+0x2c788>  // b.none
  431164:	cmp	w8, #0x1
  431168:	b.ne	4312d0 <wcrtomb@plt+0x2c790>  // b.any
  43116c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431170:	add	x1, x1, #0x751
  431174:	mov	w2, #0x5                   	// #5
  431178:	mov	x0, xzr
  43117c:	bl	404900 <dcgettext@plt>
  431180:	ldr	x8, [x19, #168]
  431184:	ldr	x2, [x19, #184]
  431188:	ldrb	w1, [x8, x2]
  43118c:	blr	x22
  431190:	b	43132c <wcrtomb@plt+0x2c7ec>
  431194:	bl	404a10 <__errno_location@plt>
  431198:	mov	w8, #0xc                   	// #12
  43119c:	str	w8, [x0]
  4311a0:	ldr	w8, [x19, #32]
  4311a4:	mov	w9, #0x2                   	// #2
  4311a8:	str	w9, [x19, #192]
  4311ac:	tbnz	w8, #7, 431274 <wcrtomb@plt+0x2c734>
  4311b0:	tbnz	w8, #4, 431288 <wcrtomb@plt+0x2c748>
  4311b4:	tbnz	w8, #3, 4311c0 <wcrtomb@plt+0x2c680>
  4311b8:	mov	x0, x19
  4311bc:	bl	42d484 <wcrtomb@plt+0x28944>
  4311c0:	mov	x22, x19
  4311c4:	ldr	x21, [x22, #208]!
  4311c8:	cbnz	x21, 431204 <wcrtomb@plt+0x2c6c4>
  4311cc:	stp	xzr, xzr, [x22]
  4311d0:	ldr	w8, [x19, #192]
  4311d4:	cbnz	w8, 430ba8 <wcrtomb@plt+0x2c068>
  4311d8:	stp	xzr, xzr, [x8]
  4311dc:	stp	x8, x8, [x19, #208]
  4311e0:	mov	w0, wzr
  4311e4:	mov	w9, #0x1                   	// #1
  4311e8:	str	x8, [x20]
  4311ec:	str	w9, [x8, #16]
  4311f0:	b	430bac <wcrtomb@plt+0x2c06c>
  4311f4:	mov	x0, x21
  4311f8:	bl	404700 <free@plt>
  4311fc:	mov	x21, x23
  431200:	cbz	x23, 4311cc <wcrtomb@plt+0x2c68c>
  431204:	ldrb	w8, [x21, #16]
  431208:	ldr	x23, [x21, #8]
  43120c:	tbz	w8, #1, 4311f4 <wcrtomb@plt+0x2c6b4>
  431210:	ldr	x0, [x21, #24]
  431214:	bl	404700 <free@plt>
  431218:	b	4311f4 <wcrtomb@plt+0x2c6b4>
  43121c:	stp	xzr, xzr, [x9]
  431220:	str	x9, [x19, #216]
  431224:	str	x9, [x11]
  431228:	ldr	x9, [sp, #224]
  43122c:	add	x0, sp, #0x8
  431230:	str	x9, [x20]
  431234:	stp	xzr, xzr, [x8]
  431238:	bl	42d484 <wcrtomb@plt+0x28944>
  43123c:	mov	w0, wzr
  431240:	b	430bac <wcrtomb@plt+0x2c06c>
  431244:	add	x8, x19, #0xc8
  431248:	b	43126c <wcrtomb@plt+0x2c72c>
  43124c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  431250:	ldr	w9, [x9, #4008]
  431254:	sxtw	x8, w8
  431258:	cmp	w8, w9
  43125c:	b.ge	4312f8 <wcrtomb@plt+0x2c7b8>  // b.tcont
  431260:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  431264:	add	x9, x9, #0xf60
  431268:	add	x8, x9, x8, lsl #3
  43126c:	ldr	x1, [x8]
  431270:	b	431300 <wcrtomb@plt+0x2c7c0>
  431274:	ldr	x8, [x19, #88]
  431278:	mov	x0, x19
  43127c:	blr	x8
  431280:	ldr	w8, [x19, #32]
  431284:	tbz	w8, #4, 4311b4 <wcrtomb@plt+0x2c674>
  431288:	ldr	w8, [x19, #192]
  43128c:	ldr	x21, [x19, #96]
  431290:	cmp	w8, #0x9
  431294:	b.eq	431338 <wcrtomb@plt+0x2c7f8>  // b.none
  431298:	cmp	w8, #0x1
  43129c:	b.ne	431340 <wcrtomb@plt+0x2c800>  // b.any
  4312a0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4312a4:	add	x1, x1, #0x751
  4312a8:	mov	w2, #0x5                   	// #5
  4312ac:	mov	x0, xzr
  4312b0:	bl	404900 <dcgettext@plt>
  4312b4:	ldr	x8, [x19, #168]
  4312b8:	ldr	x2, [x19, #184]
  4312bc:	ldrb	w1, [x8, x2]
  4312c0:	blr	x21
  4312c4:	b	43137c <wcrtomb@plt+0x2c83c>
  4312c8:	add	x8, x19, #0xc8
  4312cc:	b	4312f0 <wcrtomb@plt+0x2c7b0>
  4312d0:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  4312d4:	ldr	w9, [x9, #4008]
  4312d8:	sxtw	x8, w8
  4312dc:	cmp	w8, w9
  4312e0:	b.ge	431318 <wcrtomb@plt+0x2c7d8>  // b.tcont
  4312e4:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  4312e8:	add	x9, x9, #0xf60
  4312ec:	add	x8, x9, x8, lsl #3
  4312f0:	ldr	x1, [x8]
  4312f4:	b	431320 <wcrtomb@plt+0x2c7e0>
  4312f8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4312fc:	add	x1, x1, #0x743
  431300:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431304:	add	x0, x0, #0x7a4
  431308:	blr	x21
  43130c:	ldr	w8, [x19, #32]
  431310:	tbz	w8, #3, 430f18 <wcrtomb@plt+0x2c3d8>
  431314:	b	430f20 <wcrtomb@plt+0x2c3e0>
  431318:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43131c:	add	x1, x1, #0x743
  431320:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431324:	add	x0, x0, #0x7a4
  431328:	blr	x22
  43132c:	ldr	w8, [x19, #32]
  431330:	tbz	w8, #3, 430fdc <wcrtomb@plt+0x2c49c>
  431334:	b	430fe4 <wcrtomb@plt+0x2c4a4>
  431338:	add	x8, x19, #0xc8
  43133c:	b	431360 <wcrtomb@plt+0x2c820>
  431340:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  431344:	ldr	w9, [x9, #4008]
  431348:	sxtw	x8, w8
  43134c:	cmp	w8, w9
  431350:	b.ge	431368 <wcrtomb@plt+0x2c828>  // b.tcont
  431354:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  431358:	add	x9, x9, #0xf60
  43135c:	add	x8, x9, x8, lsl #3
  431360:	ldr	x1, [x8]
  431364:	b	431370 <wcrtomb@plt+0x2c830>
  431368:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43136c:	add	x1, x1, #0x743
  431370:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431374:	add	x0, x0, #0x7a4
  431378:	blr	x21
  43137c:	ldr	w8, [x19, #32]
  431380:	tbz	w8, #3, 4311b8 <wcrtomb@plt+0x2c678>
  431384:	b	4311c0 <wcrtomb@plt+0x2c680>
  431388:	stp	x29, x30, [sp, #-96]!
  43138c:	str	x27, [sp, #16]
  431390:	stp	x26, x25, [sp, #32]
  431394:	stp	x24, x23, [sp, #48]
  431398:	stp	x22, x21, [sp, #64]
  43139c:	stp	x20, x19, [sp, #80]
  4313a0:	mov	x29, sp
  4313a4:	cbz	x4, 431438 <wcrtomb@plt+0x2c8f8>
  4313a8:	mov	x21, x1
  4313ac:	mov	x19, x0
  4313b0:	mov	w0, #0x1                   	// #1
  4313b4:	mov	w1, #0x28                  	// #40
  4313b8:	mov	w20, w5
  4313bc:	mov	x22, x4
  4313c0:	mov	x23, x3
  4313c4:	mov	x24, x2
  4313c8:	bl	404410 <calloc@plt>
  4313cc:	cbz	x0, 431440 <wcrtomb@plt+0x2c900>
  4313d0:	mov	x26, x19
  4313d4:	ldr	x8, [x26, #208]!
  4313d8:	mov	x25, x0
  4313dc:	cbz	x8, 431514 <wcrtomb@plt+0x2c9d4>
  4313e0:	ldr	x8, [x21]
  4313e4:	mov	x10, x25
  4313e8:	mov	x9, x10
  4313ec:	cbz	x10, 4313f8 <wcrtomb@plt+0x2c8b8>
  4313f0:	ldr	x10, [x9, #8]
  4313f4:	cbnz	x10, 4313e8 <wcrtomb@plt+0x2c8a8>
  4313f8:	ldr	x10, [x8, #8]
  4313fc:	add	x11, x19, #0xd8
  431400:	cmp	x10, #0x0
  431404:	csel	x11, x11, x10, eq  // eq = none
  431408:	str	x9, [x11]
  43140c:	str	x10, [x9, #8]
  431410:	str	x8, [x25]
  431414:	str	x25, [x8, #8]
  431418:	ldr	w8, [x24, #16]
  43141c:	tbnz	w8, #1, 431524 <wcrtomb@plt+0x2c9e4>
  431420:	ldr	x9, [x24, #24]
  431424:	ldr	w8, [x25, #16]
  431428:	add	x9, x9, x23
  43142c:	add	x10, x9, x22
  431430:	stp	x9, x10, [x25, #24]
  431434:	b	431564 <wcrtomb@plt+0x2ca24>
  431438:	mov	w0, wzr
  43143c:	b	431574 <wcrtomb@plt+0x2ca34>
  431440:	bl	404a10 <__errno_location@plt>
  431444:	mov	w8, #0xc                   	// #12
  431448:	str	w8, [x0]
  43144c:	ldr	w8, [x19, #32]
  431450:	mov	w9, #0x2                   	// #2
  431454:	str	w9, [x19, #192]
  431458:	tbnz	w8, #7, 4314b4 <wcrtomb@plt+0x2c974>
  43145c:	tbnz	w8, #4, 4314c8 <wcrtomb@plt+0x2c988>
  431460:	tbnz	w8, #3, 43146c <wcrtomb@plt+0x2c92c>
  431464:	mov	x0, x19
  431468:	bl	42d484 <wcrtomb@plt+0x28944>
  43146c:	mov	x26, x19
  431470:	ldr	x25, [x26, #208]!
  431474:	cbnz	x25, 43149c <wcrtomb@plt+0x2c95c>
  431478:	stp	xzr, xzr, [x26]
  43147c:	ldr	w8, [x19, #192]
  431480:	cbz	w8, 431510 <wcrtomb@plt+0x2c9d0>
  431484:	mov	w0, #0x1                   	// #1
  431488:	b	431574 <wcrtomb@plt+0x2ca34>
  43148c:	mov	x0, x25
  431490:	bl	404700 <free@plt>
  431494:	mov	x25, x27
  431498:	cbz	x27, 431478 <wcrtomb@plt+0x2c938>
  43149c:	ldrb	w8, [x25, #16]
  4314a0:	ldr	x27, [x25, #8]
  4314a4:	tbz	w8, #1, 43148c <wcrtomb@plt+0x2c94c>
  4314a8:	ldr	x0, [x25, #24]
  4314ac:	bl	404700 <free@plt>
  4314b0:	b	43148c <wcrtomb@plt+0x2c94c>
  4314b4:	ldr	x8, [x19, #88]
  4314b8:	mov	x0, x19
  4314bc:	blr	x8
  4314c0:	ldr	w8, [x19, #32]
  4314c4:	tbz	w8, #4, 431460 <wcrtomb@plt+0x2c920>
  4314c8:	ldr	w8, [x19, #192]
  4314cc:	ldr	x25, [x19, #96]
  4314d0:	cmp	w8, #0x9
  4314d4:	b.eq	431614 <wcrtomb@plt+0x2cad4>  // b.none
  4314d8:	cmp	w8, #0x1
  4314dc:	b.ne	43161c <wcrtomb@plt+0x2cadc>  // b.any
  4314e0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4314e4:	add	x1, x1, #0x751
  4314e8:	mov	w2, #0x5                   	// #5
  4314ec:	mov	x0, xzr
  4314f0:	bl	404900 <dcgettext@plt>
  4314f4:	ldr	x8, [x19, #168]
  4314f8:	ldr	x2, [x19, #184]
  4314fc:	ldrb	w1, [x8, x2]
  431500:	blr	x25
  431504:	ldr	w8, [x19, #32]
  431508:	tbz	w8, #3, 431464 <wcrtomb@plt+0x2c924>
  43150c:	b	43146c <wcrtomb@plt+0x2c92c>
  431510:	add	x26, x19, #0xd0
  431514:	stp	xzr, xzr, [x25]
  431518:	stp	x25, x25, [x19, #208]
  43151c:	ldr	w8, [x24, #16]
  431520:	tbz	w8, #1, 431420 <wcrtomb@plt+0x2c8e0>
  431524:	tbnz	w8, #0, 431530 <wcrtomb@plt+0x2c9f0>
  431528:	ldr	x27, [x24, #24]
  43152c:	b	431538 <wcrtomb@plt+0x2c9f8>
  431530:	adrp	x27, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431534:	add	x27, x27, #0x66
  431538:	add	x0, x22, #0x1
  43153c:	bl	404250 <malloc@plt>
  431540:	cbz	x0, 431590 <wcrtomb@plt+0x2ca50>
  431544:	add	x1, x27, x23
  431548:	mov	x2, x22
  43154c:	mov	x24, x0
  431550:	bl	403ec0 <memcpy@plt>
  431554:	mov	w8, #0x2                   	// #2
  431558:	strb	wzr, [x24, x22]
  43155c:	str	w8, [x25, #16]
  431560:	str	x24, [x25, #24]
  431564:	mov	w0, wzr
  431568:	orr	w8, w8, w20
  43156c:	str	w8, [x25, #16]
  431570:	str	x25, [x21]
  431574:	ldp	x20, x19, [sp, #80]
  431578:	ldp	x22, x21, [sp, #64]
  43157c:	ldp	x24, x23, [sp, #48]
  431580:	ldp	x26, x25, [sp, #32]
  431584:	ldr	x27, [sp, #16]
  431588:	ldp	x29, x30, [sp], #96
  43158c:	ret
  431590:	bl	404a10 <__errno_location@plt>
  431594:	mov	w8, #0xc                   	// #12
  431598:	str	w8, [x0]
  43159c:	ldr	w8, [x19, #32]
  4315a0:	mov	w9, #0x2                   	// #2
  4315a4:	str	w9, [x19, #192]
  4315a8:	tbnz	w8, #7, 4315c0 <wcrtomb@plt+0x2ca80>
  4315ac:	tbnz	w8, #4, 4315d4 <wcrtomb@plt+0x2ca94>
  4315b0:	tbz	w8, #3, 4316b0 <wcrtomb@plt+0x2cb70>
  4315b4:	ldr	x20, [x26]
  4315b8:	cbnz	x20, 4316dc <wcrtomb@plt+0x2cb9c>
  4315bc:	b	4316c0 <wcrtomb@plt+0x2cb80>
  4315c0:	ldr	x8, [x19, #88]
  4315c4:	mov	x0, x19
  4315c8:	blr	x8
  4315cc:	ldr	w8, [x19, #32]
  4315d0:	tbz	w8, #4, 4315b0 <wcrtomb@plt+0x2ca70>
  4315d4:	ldr	w8, [x19, #192]
  4315d8:	ldr	x20, [x19, #96]
  4315dc:	cmp	w8, #0x9
  4315e0:	b.eq	431664 <wcrtomb@plt+0x2cb24>  // b.none
  4315e4:	cmp	w8, #0x1
  4315e8:	b.ne	43166c <wcrtomb@plt+0x2cb2c>  // b.any
  4315ec:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4315f0:	add	x1, x1, #0x751
  4315f4:	mov	w2, #0x5                   	// #5
  4315f8:	mov	x0, xzr
  4315fc:	bl	404900 <dcgettext@plt>
  431600:	ldr	x8, [x19, #168]
  431604:	ldr	x2, [x19, #184]
  431608:	ldrb	w1, [x8, x2]
  43160c:	blr	x20
  431610:	b	4316a8 <wcrtomb@plt+0x2cb68>
  431614:	add	x8, x19, #0xc8
  431618:	b	43163c <wcrtomb@plt+0x2cafc>
  43161c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  431620:	ldr	w9, [x9, #4008]
  431624:	sxtw	x8, w8
  431628:	cmp	w8, w9
  43162c:	b.ge	431644 <wcrtomb@plt+0x2cb04>  // b.tcont
  431630:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  431634:	add	x9, x9, #0xf60
  431638:	add	x8, x9, x8, lsl #3
  43163c:	ldr	x1, [x8]
  431640:	b	43164c <wcrtomb@plt+0x2cb0c>
  431644:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431648:	add	x1, x1, #0x743
  43164c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431650:	add	x0, x0, #0x7a4
  431654:	blr	x25
  431658:	ldr	w8, [x19, #32]
  43165c:	tbz	w8, #3, 431464 <wcrtomb@plt+0x2c924>
  431660:	b	43146c <wcrtomb@plt+0x2c92c>
  431664:	add	x8, x19, #0xc8
  431668:	b	43168c <wcrtomb@plt+0x2cb4c>
  43166c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  431670:	ldr	w9, [x9, #4008]
  431674:	sxtw	x8, w8
  431678:	cmp	w8, w9
  43167c:	b.ge	431694 <wcrtomb@plt+0x2cb54>  // b.tcont
  431680:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  431684:	add	x9, x9, #0xf60
  431688:	add	x8, x9, x8, lsl #3
  43168c:	ldr	x1, [x8]
  431690:	b	43169c <wcrtomb@plt+0x2cb5c>
  431694:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431698:	add	x1, x1, #0x743
  43169c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4316a0:	add	x0, x0, #0x7a4
  4316a4:	blr	x20
  4316a8:	ldr	w8, [x19, #32]
  4316ac:	tbnz	w8, #3, 4315b4 <wcrtomb@plt+0x2ca74>
  4316b0:	mov	x0, x19
  4316b4:	bl	42d484 <wcrtomb@plt+0x28944>
  4316b8:	ldr	x20, [x26]
  4316bc:	cbnz	x20, 4316dc <wcrtomb@plt+0x2cb9c>
  4316c0:	stp	xzr, xzr, [x26]
  4316c4:	ldr	w0, [x19, #192]
  4316c8:	b	431574 <wcrtomb@plt+0x2ca34>
  4316cc:	mov	x0, x20
  4316d0:	bl	404700 <free@plt>
  4316d4:	mov	x20, x21
  4316d8:	cbz	x21, 4316c0 <wcrtomb@plt+0x2cb80>
  4316dc:	ldrb	w8, [x20, #16]
  4316e0:	ldr	x21, [x20, #8]
  4316e4:	tbz	w8, #1, 4316cc <wcrtomb@plt+0x2cb8c>
  4316e8:	ldr	x0, [x20, #24]
  4316ec:	bl	404700 <free@plt>
  4316f0:	b	4316cc <wcrtomb@plt+0x2cb8c>
  4316f4:	stp	x29, x30, [sp, #-48]!
  4316f8:	stp	x22, x21, [sp, #16]
  4316fc:	stp	x20, x19, [sp, #32]
  431700:	ldr	x8, [x0, #56]
  431704:	mov	w20, w5
  431708:	mov	x9, x2
  43170c:	mov	x22, x0
  431710:	str	x8, [x1, #56]
  431714:	ldr	x8, [x0, #104]
  431718:	mov	x19, x1
  43171c:	mov	x29, sp
  431720:	str	x8, [x1, #104]
  431724:	ldur	q0, [x0, #88]
  431728:	stur	q0, [x1, #88]
  43172c:	tbnz	w4, #6, 431750 <wcrtomb@plt+0x2cc10>
  431730:	ldr	x8, [x22, #112]
  431734:	mov	w10, #0x8180000             	// #135790592
  431738:	str	x8, [x19, #112]
  43173c:	ldr	x8, [x22, #144]
  431740:	str	x8, [x19, #144]
  431744:	ldr	w8, [x22, #32]
  431748:	and	w8, w8, w10
  43174c:	orr	w4, w8, w4
  431750:	tbnz	w4, #2, 43175c <wcrtomb@plt+0x2cc1c>
  431754:	ldr	x8, [x22, #160]
  431758:	str	x8, [x19, #160]
  43175c:	mov	w8, #0x44                  	// #68
  431760:	bics	wzr, w8, w4
  431764:	b.ne	431770 <wcrtomb@plt+0x2cc30>  // b.any
  431768:	ldr	w8, [x22, #32]
  43176c:	b	431784 <wcrtomb@plt+0x2cc44>
  431770:	ldr	x8, [x22, #152]
  431774:	str	x8, [x19, #152]
  431778:	ldr	w8, [x22, #32]
  43177c:	and	w10, w8, #0x4000000
  431780:	orr	w4, w10, w4
  431784:	mov	w11, #0x10                  	// #16
  431788:	movk	w11, #0x8020, lsl #16
  43178c:	ldr	w10, [x22, #36]
  431790:	mov	w12, #0x4000                	// #16384
  431794:	and	w8, w8, w11
  431798:	movk	w12, #0x7, lsl #16
  43179c:	orr	w8, w4, w8
  4317a0:	orr	w8, w8, w12
  4317a4:	sxtw	x2, w3
  4317a8:	mov	x0, x19
  4317ac:	mov	x1, x9
  4317b0:	mov	w3, w8
  4317b4:	str	w10, [x19, #36]
  4317b8:	bl	42dc70 <wcrtomb@plt+0x29130>
  4317bc:	mov	w21, w0
  4317c0:	cbnz	w0, 431834 <wcrtomb@plt+0x2ccf4>
  4317c4:	ldr	w8, [x22, #224]
  4317c8:	mov	x0, x19
  4317cc:	mov	x1, xzr
  4317d0:	add	w8, w8, #0x1
  4317d4:	str	w8, [x19, #224]
  4317d8:	bl	42df10 <wcrtomb@plt+0x293d0>
  4317dc:	cbz	w0, 431818 <wcrtomb@plt+0x2ccd8>
  4317e0:	ldr	x20, [x19, #208]!
  4317e4:	mov	w21, w0
  4317e8:	cbnz	x20, 431800 <wcrtomb@plt+0x2ccc0>
  4317ec:	b	431830 <wcrtomb@plt+0x2ccf0>
  4317f0:	mov	x0, x20
  4317f4:	bl	404700 <free@plt>
  4317f8:	mov	x20, x22
  4317fc:	cbz	x22, 431830 <wcrtomb@plt+0x2ccf0>
  431800:	ldrb	w8, [x20, #16]
  431804:	ldr	x22, [x20, #8]
  431808:	tbz	w8, #1, 4317f0 <wcrtomb@plt+0x2ccb0>
  43180c:	ldr	x0, [x20, #24]
  431810:	bl	404700 <free@plt>
  431814:	b	4317f0 <wcrtomb@plt+0x2ccb0>
  431818:	cbz	w20, 431870 <wcrtomb@plt+0x2cd30>
  43181c:	mov	x0, x19
  431820:	bl	42d6cc <wcrtomb@plt+0x28b8c>
  431824:	ldr	x20, [x19, #208]!
  431828:	mov	w21, w0
  43182c:	cbnz	x20, 431858 <wcrtomb@plt+0x2cd18>
  431830:	stp	xzr, xzr, [x19]
  431834:	mov	w0, w21
  431838:	ldp	x20, x19, [sp, #32]
  43183c:	ldp	x22, x21, [sp, #16]
  431840:	ldp	x29, x30, [sp], #48
  431844:	ret
  431848:	mov	x0, x20
  43184c:	bl	404700 <free@plt>
  431850:	mov	x20, x22
  431854:	cbz	x22, 431830 <wcrtomb@plt+0x2ccf0>
  431858:	ldrb	w8, [x20, #16]
  43185c:	ldr	x22, [x20, #8]
  431860:	tbz	w8, #1, 431848 <wcrtomb@plt+0x2cd08>
  431864:	ldr	x0, [x20, #24]
  431868:	bl	404700 <free@plt>
  43186c:	b	431848 <wcrtomb@plt+0x2cd08>
  431870:	mov	w21, wzr
  431874:	b	431834 <wcrtomb@plt+0x2ccf4>
  431878:	and	w8, w0, #0xffffffdf
  43187c:	cmp	w0, #0x7b
  431880:	sub	w8, w8, #0x41
  431884:	cset	w9, eq  // eq = none
  431888:	cmp	w8, #0x1a
  43188c:	cset	w8, cc  // cc = lo, ul, last
  431890:	cmp	w0, #0x5f
  431894:	orr	w8, w9, w8
  431898:	cset	w9, eq  // eq = none
  43189c:	orr	w0, w9, w8
  4318a0:	ret
  4318a4:	stp	x29, x30, [sp, #-96]!
  4318a8:	stp	x28, x27, [sp, #16]
  4318ac:	stp	x26, x25, [sp, #32]
  4318b0:	stp	x24, x23, [sp, #48]
  4318b4:	stp	x22, x21, [sp, #64]
  4318b8:	stp	x20, x19, [sp, #80]
  4318bc:	mov	x29, sp
  4318c0:	sub	sp, sp, #0x200
  4318c4:	mov	x23, x1
  4318c8:	ldrb	w8, [x23], #-1
  4318cc:	mov	w26, w5
  4318d0:	mov	x22, x4
  4318d4:	mov	x28, x3
  4318d8:	and	w9, w8, #0xffffffdf
  4318dc:	sub	w9, w9, #0x41
  4318e0:	and	w9, w9, #0xff
  4318e4:	mov	x25, x1
  4318e8:	cmp	w9, #0x1a
  4318ec:	mov	x19, x0
  4318f0:	b.cc	431904 <wcrtomb@plt+0x2cdc4>  // b.lo, b.ul, b.last
  4318f4:	cmp	w8, #0x7b
  4318f8:	b.eq	431b48 <wcrtomb@plt+0x2d008>  // b.none
  4318fc:	cmp	w8, #0x5f
  431900:	b.ne	431c6c <wcrtomb@plt+0x2d12c>  // b.any
  431904:	cmp	x2, #0x2
  431908:	mov	w24, #0x1                   	// #1
  43190c:	str	x28, [sp, #16]
  431910:	str	w26, [sp, #28]
  431914:	b.cs	431928 <wcrtomb@plt+0x2cde8>  // b.hs, b.nlast
  431918:	b	431960 <wcrtomb@plt+0x2ce20>
  43191c:	add	x24, x24, #0x1
  431920:	cmp	x2, x24
  431924:	b.eq	43195c <wcrtomb@plt+0x2ce1c>  // b.none
  431928:	ldrb	w8, [x25, x24]
  43192c:	and	w9, w8, #0xffffffdf
  431930:	sub	w9, w9, #0x41
  431934:	and	w9, w9, #0xff
  431938:	cmp	w9, #0x1a
  43193c:	b.cc	43191c <wcrtomb@plt+0x2cddc>  // b.lo, b.ul, b.last
  431940:	cmp	w8, #0x5f
  431944:	b.eq	43191c <wcrtomb@plt+0x2cddc>  // b.none
  431948:	sub	w8, w8, #0x30
  43194c:	and	w8, w8, #0xff
  431950:	cmp	w8, #0x9
  431954:	b.ls	43191c <wcrtomb@plt+0x2cddc>  // b.plast
  431958:	b	431960 <wcrtomb@plt+0x2ce20>
  43195c:	mov	x24, x2
  431960:	add	x8, x25, x24
  431964:	sub	x8, x8, #0x1
  431968:	mov	w28, wzr
  43196c:	mov	x27, xzr
  431970:	str	x8, [x22]
  431974:	ldr	w20, [x19, #32]
  431978:	tbnz	w20, #19, 431a44 <wcrtomb@plt+0x2cf04>
  43197c:	tbnz	w20, #20, 431ab0 <wcrtomb@plt+0x2cf70>
  431980:	cbz	x27, 431cc8 <wcrtomb@plt+0x2d188>
  431984:	ldrb	w8, [x27]
  431988:	cmp	w8, #0x2d
  43198c:	b.eq	4319a0 <wcrtomb@plt+0x2ce60>  // b.none
  431990:	cmp	w8, #0x3f
  431994:	b.eq	431e1c <wcrtomb@plt+0x2d2dc>  // b.none
  431998:	cmp	w8, #0x3d
  43199c:	b.ne	432270 <wcrtomb@plt+0x2d730>  // b.any
  4319a0:	ldr	w8, [x22]
  4319a4:	ldr	w9, [x19, #32]
  4319a8:	add	x2, x27, #0x1
  4319ac:	mov	w10, #0x44                  	// #68
  4319b0:	sub	w3, w8, w2
  4319b4:	and	w8, w9, w10
  4319b8:	mov	w9, #0x700                 	// #1792
  4319bc:	movk	w9, #0x40, lsl #16
  4319c0:	orr	w4, w8, w9
  4319c4:	sub	x1, x29, #0xf8
  4319c8:	mov	w5, #0x1                   	// #1
  4319cc:	mov	x0, x19
  4319d0:	bl	4316f4 <wcrtomb@plt+0x2cbb4>
  4319d4:	cbnz	w0, 433450 <wcrtomb@plt+0x2e910>
  4319d8:	ldur	x8, [x29, #-240]
  4319dc:	sub	x0, x29, #0xf8
  4319e0:	ldr	x9, [x8]
  4319e4:	stur	x9, [x29, #-16]
  4319e8:	str	xzr, [x8]
  4319ec:	bl	42d484 <wcrtomb@plt+0x28944>
  4319f0:	ldrb	w8, [x27]
  4319f4:	cmp	w8, #0x3d
  4319f8:	b.ne	433104 <wcrtomb@plt+0x2e5c4>  // b.any
  4319fc:	ldr	w20, [x19, #32]
  431a00:	ldp	x10, x9, [x19, #128]
  431a04:	ldur	x26, [x29, #-16]
  431a08:	mov	w8, #0x1                   	// #1
  431a0c:	tst	w20, #0x8000000
  431a10:	cinc	x8, x8, ne  // ne = any
  431a14:	add	x10, x8, x10
  431a18:	cmp	x10, x9
  431a1c:	b.cc	432c40 <wcrtomb@plt+0x2e100>  // b.lo, b.ul, b.last
  431a20:	ldr	x0, [x19, #120]
  431a24:	cbz	x0, 4328b8 <wcrtomb@plt+0x2dd78>
  431a28:	lsl	x8, x9, #1
  431a2c:	lsl	x1, x9, #4
  431a30:	str	x8, [x19, #136]
  431a34:	bl	404490 <realloc@plt>
  431a38:	cbz	x0, 432980 <wcrtomb@plt+0x2de40>
  431a3c:	stp	x0, x0, [x19, #112]
  431a40:	b	432c40 <wcrtomb@plt+0x2e100>
  431a44:	ldr	x8, [x19, #112]
  431a48:	tbnz	w20, #27, 431b00 <wcrtomb@plt+0x2cfc0>
  431a4c:	cbz	x8, 43197c <wcrtomb@plt+0x2ce3c>
  431a50:	ldr	x9, [x8]
  431a54:	cbz	x9, 43197c <wcrtomb@plt+0x2ce3c>
  431a58:	mov	x10, xzr
  431a5c:	b	431a78 <wcrtomb@plt+0x2cf38>
  431a60:	ldrb	w11, [x9, x24]
  431a64:	cmp	w11, #0x3d
  431a68:	b.eq	432030 <wcrtomb@plt+0x2d4f0>  // b.none
  431a6c:	add	x10, x10, #0x1
  431a70:	ldr	x9, [x8, x10, lsl #3]
  431a74:	cbz	x9, 43197c <wcrtomb@plt+0x2ce3c>
  431a78:	mov	x11, x25
  431a7c:	mov	x13, x9
  431a80:	mov	x12, x24
  431a84:	ldrb	w14, [x11]
  431a88:	ldrb	w15, [x13]
  431a8c:	cmp	w14, w15
  431a90:	b.ne	431aa8 <wcrtomb@plt+0x2cf68>  // b.any
  431a94:	subs	x12, x12, #0x1
  431a98:	add	x13, x13, #0x1
  431a9c:	add	x11, x11, #0x1
  431aa0:	b.ne	431a84 <wcrtomb@plt+0x2cf44>  // b.any
  431aa4:	b	431a60 <wcrtomb@plt+0x2cf20>
  431aa8:	cbnz	x12, 431a6c <wcrtomb@plt+0x2cf2c>
  431aac:	b	431a60 <wcrtomb@plt+0x2cf20>
  431ab0:	ldp	x8, x3, [x19, #144]
  431ab4:	sub	x0, x29, #0x10
  431ab8:	mov	x1, x25
  431abc:	mov	x2, x24
  431ac0:	blr	x8
  431ac4:	mov	w26, w0
  431ac8:	cmp	w0, #0x9
  431acc:	b.hi	431ea0 <wcrtomb@plt+0x2d360>  // b.pmore
  431ad0:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431ad4:	mov	w8, w26
  431ad8:	add	x9, x9, #0x598
  431adc:	adr	x10, 431980 <wcrtomb@plt+0x2ce40>
  431ae0:	ldrh	w11, [x9, x8, lsl #1]
  431ae4:	add	x10, x10, x11, lsl #2
  431ae8:	br	x10
  431aec:	ldur	x0, [x29, #-16]
  431af0:	cbnz	x0, 4320cc <wcrtomb@plt+0x2d58c>
  431af4:	cbz	w28, 432274 <wcrtomb@plt+0x2d734>
  431af8:	mov	x0, xzr
  431afc:	b	4320dc <wcrtomb@plt+0x2d59c>
  431b00:	ldr	x26, [x8]
  431b04:	cbz	x26, 43197c <wcrtomb@plt+0x2ce3c>
  431b08:	add	x21, x8, #0x8
  431b0c:	mov	x0, x26
  431b10:	bl	403f40 <strlen@plt>
  431b14:	cmp	x0, x24
  431b18:	b.ne	431b30 <wcrtomb@plt+0x2cff0>  // b.any
  431b1c:	mov	x0, x26
  431b20:	mov	x1, x25
  431b24:	mov	x2, x24
  431b28:	bl	404440 <bcmp@plt>
  431b2c:	cbz	w0, 4320b8 <wcrtomb@plt+0x2d578>
  431b30:	ldr	x8, [x21]
  431b34:	cbz	x8, 43197c <wcrtomb@plt+0x2ce3c>
  431b38:	ldr	x26, [x21, #8]
  431b3c:	add	x21, x21, #0x10
  431b40:	cbnz	x26, 431b0c <wcrtomb@plt+0x2cfcc>
  431b44:	b	43197c <wcrtomb@plt+0x2ce3c>
  431b48:	sub	x8, x2, #0x1
  431b4c:	str	w26, [sp, #28]
  431b50:	cmp	x8, #0x2
  431b54:	add	x26, x25, #0x1
  431b58:	b.cc	431d80 <wcrtomb@plt+0x2d240>  // b.lo, b.ul, b.last
  431b5c:	mov	x9, #0x1                   	// #1
  431b60:	movk	x9, #0x2800, lsl #32
  431b64:	mov	w11, #0x2                   	// #2
  431b68:	movk	x9, #0xa000, lsl #48
  431b6c:	mov	w10, #0x1                   	// #1
  431b70:	sub	x11, x11, x2
  431b74:	mov	w24, #0x1                   	// #1
  431b78:	b	431b8c <wcrtomb@plt+0x2d04c>
  431b7c:	add	x24, x24, #0x1
  431b80:	add	x12, x11, x24
  431b84:	cmp	x12, #0x1
  431b88:	b.eq	431d90 <wcrtomb@plt+0x2d250>  // b.none
  431b8c:	add	x12, x25, x24
  431b90:	ldrb	w12, [x12, #1]
  431b94:	cmp	w12, #0x7d
  431b98:	b.eq	4325d0 <wcrtomb@plt+0x2da90>  // b.none
  431b9c:	cmp	w12, #0x3a
  431ba0:	b.eq	43262c <wcrtomb@plt+0x2daec>  // b.none
  431ba4:	cmp	w12, #0x3f
  431ba8:	b.hi	431b7c <wcrtomb@plt+0x2d03c>  // b.pmore
  431bac:	lsl	x12, x10, x12
  431bb0:	and	x12, x12, x9
  431bb4:	cbz	x12, 431b7c <wcrtomb@plt+0x2d03c>
  431bb8:	add	x9, x25, x24
  431bbc:	mov	w11, wzr
  431bc0:	add	x27, x9, #0x1
  431bc4:	mov	w10, #0x1                   	// #1
  431bc8:	mov	x9, x24
  431bcc:	b	431be8 <wcrtomb@plt+0x2d0a8>
  431bd0:	ldrb	w11, [x26, x9]
  431bd4:	cmp	w11, #0x27
  431bd8:	cset	w11, ne  // ne = any
  431bdc:	add	x9, x9, #0x1
  431be0:	cmp	x9, x8
  431be4:	b.cs	431d90 <wcrtomb@plt+0x2d250>  // b.hs, b.nlast
  431be8:	cmp	w11, #0x2
  431bec:	b.eq	431c20 <wcrtomb@plt+0x2d0e0>  // b.none
  431bf0:	cmp	w11, #0x1
  431bf4:	b.eq	431bd0 <wcrtomb@plt+0x2d090>  // b.none
  431bf8:	cbnz	w11, 431bdc <wcrtomb@plt+0x2d09c>
  431bfc:	ldrb	w11, [x26, x9]
  431c00:	cmp	w11, #0x7a
  431c04:	b.gt	431c40 <wcrtomb@plt+0x2d100>
  431c08:	cmp	w11, #0x22
  431c0c:	b.eq	431c38 <wcrtomb@plt+0x2d0f8>  // b.none
  431c10:	cmp	w11, #0x27
  431c14:	b.ne	431c64 <wcrtomb@plt+0x2d124>  // b.any
  431c18:	mov	w11, #0x1                   	// #1
  431c1c:	b	431bdc <wcrtomb@plt+0x2d09c>
  431c20:	ldrb	w11, [x26, x9]
  431c24:	cmp	w11, #0x22
  431c28:	b.eq	431c64 <wcrtomb@plt+0x2d124>  // b.none
  431c2c:	cmp	w11, #0x5c
  431c30:	b.ne	431c38 <wcrtomb@plt+0x2d0f8>  // b.any
  431c34:	add	x9, x9, #0x1
  431c38:	mov	w11, #0x2                   	// #2
  431c3c:	b	431bdc <wcrtomb@plt+0x2d09c>
  431c40:	cmp	w11, #0x7d
  431c44:	b.eq	431c5c <wcrtomb@plt+0x2d11c>  // b.none
  431c48:	cmp	w11, #0x7b
  431c4c:	b.ne	431c64 <wcrtomb@plt+0x2d124>  // b.any
  431c50:	mov	w11, wzr
  431c54:	add	x10, x10, #0x1
  431c58:	b	431bdc <wcrtomb@plt+0x2d09c>
  431c5c:	subs	x10, x10, #0x1
  431c60:	b.eq	4325d8 <wcrtomb@plt+0x2da98>  // b.none
  431c64:	mov	w11, wzr
  431c68:	b	431bdc <wcrtomb@plt+0x2d09c>
  431c6c:	mov	w0, #0x1                   	// #1
  431c70:	mov	w1, #0x28                  	// #40
  431c74:	bl	404410 <calloc@plt>
  431c78:	cbz	x0, 431eec <wcrtomb@plt+0x2d3ac>
  431c7c:	mov	x24, x19
  431c80:	ldr	x8, [x24, #208]!
  431c84:	mov	x23, x0
  431c88:	cbz	x8, 431f34 <wcrtomb@plt+0x2d3f4>
  431c8c:	ldr	x8, [x28]
  431c90:	mov	x10, x23
  431c94:	mov	x9, x10
  431c98:	cbz	x10, 431ca4 <wcrtomb@plt+0x2d164>
  431c9c:	ldr	x10, [x9, #8]
  431ca0:	cbnz	x10, 431c94 <wcrtomb@plt+0x2d154>
  431ca4:	ldr	x10, [x8, #8]
  431ca8:	add	x11, x19, #0xd8
  431cac:	cmp	x10, #0x0
  431cb0:	csel	x11, x11, x10, eq  // eq = none
  431cb4:	str	x9, [x11]
  431cb8:	str	x10, [x9, #8]
  431cbc:	str	x8, [x23]
  431cc0:	str	x23, [x8, #8]
  431cc4:	b	431f3c <wcrtomb@plt+0x2d3fc>
  431cc8:	mov	x26, x25
  431ccc:	ldr	w8, [x19, #32]
  431cd0:	tbnz	w8, #5, 431dd8 <wcrtomb@plt+0x2d298>
  431cd4:	tbz	w8, #24, 431d00 <wcrtomb@plt+0x2d1c0>
  431cd8:	ldr	x20, [x19, #96]
  431cdc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431ce0:	add	x1, x1, #0x8c8
  431ce4:	mov	w2, #0x5                   	// #5
  431ce8:	mov	x0, xzr
  431cec:	bl	404900 <dcgettext@plt>
  431cf0:	mov	w1, w24
  431cf4:	mov	x2, x26
  431cf8:	blr	x20
  431cfc:	ldr	w8, [x19, #32]
  431d00:	tbnz	w8, #23, 432270 <wcrtomb@plt+0x2d730>
  431d04:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431d08:	add	x0, x0, #0x66
  431d0c:	bl	4044e0 <strdup@plt>
  431d10:	mov	x24, x0
  431d14:	stur	x0, [x29, #-16]
  431d18:	cbnz	x0, 43310c <wcrtomb@plt+0x2e5cc>
  431d1c:	bl	404a10 <__errno_location@plt>
  431d20:	mov	w8, #0xc                   	// #12
  431d24:	str	w8, [x0]
  431d28:	ldr	w8, [x19, #32]
  431d2c:	mov	w9, #0x2                   	// #2
  431d30:	str	w9, [x19, #192]
  431d34:	tbnz	w8, #7, 432794 <wcrtomb@plt+0x2dc54>
  431d38:	tbnz	w8, #4, 4327a8 <wcrtomb@plt+0x2dc68>
  431d3c:	tbnz	w8, #3, 431d48 <wcrtomb@plt+0x2d208>
  431d40:	mov	x0, x19
  431d44:	bl	42d484 <wcrtomb@plt+0x28944>
  431d48:	mov	x21, x19
  431d4c:	ldr	x20, [x21, #208]!
  431d50:	cbnz	x20, 431d68 <wcrtomb@plt+0x2d228>
  431d54:	b	432128 <wcrtomb@plt+0x2d5e8>
  431d58:	mov	x0, x20
  431d5c:	bl	404700 <free@plt>
  431d60:	mov	x20, x22
  431d64:	cbz	x22, 432128 <wcrtomb@plt+0x2d5e8>
  431d68:	ldrb	w8, [x20, #16]
  431d6c:	ldr	x22, [x20, #8]
  431d70:	tbz	w8, #1, 431d58 <wcrtomb@plt+0x2d218>
  431d74:	ldr	x0, [x20, #24]
  431d78:	bl	404700 <free@plt>
  431d7c:	b	431d58 <wcrtomb@plt+0x2d218>
  431d80:	mov	x27, xzr
  431d84:	mov	w24, #0x1                   	// #1
  431d88:	cmp	x24, x8
  431d8c:	b.ne	4325e8 <wcrtomb@plt+0x2daa8>  // b.any
  431d90:	ldrb	w8, [x19, #32]
  431d94:	mov	w0, #0x4                   	// #4
  431d98:	str	w0, [x19, #192]
  431d9c:	tbz	w8, #4, 433450 <wcrtomb@plt+0x2e910>
  431da0:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  431da4:	ldr	w8, [x8, #4008]
  431da8:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  431dac:	ldr	x9, [x9, #3968]
  431db0:	ldr	x10, [x19, #96]
  431db4:	adrp	x11, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431db8:	add	x11, x11, #0x743
  431dbc:	cmp	w8, #0x4
  431dc0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431dc4:	csel	x1, x9, x11, gt
  431dc8:	add	x0, x0, #0x7a4
  431dcc:	blr	x10
  431dd0:	mov	w0, #0x4                   	// #4
  431dd4:	b	433450 <wcrtomb@plt+0x2e910>
  431dd8:	mov	w9, #0x5                   	// #5
  431ddc:	str	w9, [x19, #192]
  431de0:	tbz	w8, #4, 432410 <wcrtomb@plt+0x2d8d0>
  431de4:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  431de8:	ldr	w8, [x8, #4008]
  431dec:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  431df0:	ldr	x9, [x9, #3976]
  431df4:	ldr	x10, [x19, #96]
  431df8:	adrp	x11, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431dfc:	add	x11, x11, #0x743
  431e00:	cmp	w8, #0x5
  431e04:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431e08:	csel	x1, x9, x11, gt
  431e0c:	add	x0, x0, #0x7a4
  431e10:	blr	x10
  431e14:	mov	w0, #0x1                   	// #1
  431e18:	b	433450 <wcrtomb@plt+0x2e910>
  431e1c:	ldr	x8, [x22]
  431e20:	add	x26, x27, #0x1
  431e24:	subs	x27, x8, x26
  431e28:	b.eq	43203c <wcrtomb@plt+0x2d4fc>  // b.none
  431e2c:	ldr	w8, [x19, #32]
  431e30:	mov	w9, #0x44                  	// #68
  431e34:	sub	x1, x29, #0xf8
  431e38:	mov	w5, #0x1                   	// #1
  431e3c:	and	w8, w8, w9
  431e40:	mov	w9, #0x700                 	// #1792
  431e44:	movk	w9, #0x40, lsl #16
  431e48:	orr	w4, w8, w9
  431e4c:	mov	x0, x19
  431e50:	mov	x2, x26
  431e54:	mov	w3, w27
  431e58:	bl	4316f4 <wcrtomb@plt+0x2cbb4>
  431e5c:	ldr	x8, [x19, #96]
  431e60:	cbz	w0, 43224c <wcrtomb@plt+0x2d70c>
  431e64:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431e68:	add	x0, x0, #0x8bd
  431e6c:	mov	w1, w24
  431e70:	mov	x2, x25
  431e74:	mov	w3, w27
  431e78:	mov	x4, x26
  431e7c:	blr	x8
  431e80:	b	432268 <wcrtomb@plt+0x2d728>
  431e84:	ldr	w8, [x19, #192]
  431e88:	cmp	w8, #0x9
  431e8c:	b.ne	431e98 <wcrtomb@plt+0x2d358>  // b.any
  431e90:	ldr	x0, [x19, #200]
  431e94:	bl	404700 <free@plt>
  431e98:	ldur	x8, [x29, #-16]
  431e9c:	str	x8, [x19, #200]
  431ea0:	ldrb	w8, [x19, #32]
  431ea4:	str	w26, [x19, #192]
  431ea8:	tbz	w8, #4, 432410 <wcrtomb@plt+0x2d8d0>
  431eac:	ldr	x20, [x19, #96]
  431eb0:	cmp	w26, #0x9
  431eb4:	b.eq	432220 <wcrtomb@plt+0x2d6e0>  // b.none
  431eb8:	cmp	w26, #0x1
  431ebc:	b.ne	432228 <wcrtomb@plt+0x2d6e8>  // b.any
  431ec0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  431ec4:	add	x1, x1, #0x751
  431ec8:	mov	w2, #0x5                   	// #5
  431ecc:	mov	x0, xzr
  431ed0:	bl	404900 <dcgettext@plt>
  431ed4:	ldr	x8, [x19, #168]
  431ed8:	ldr	x2, [x19, #184]
  431edc:	ldrb	w1, [x8, x2]
  431ee0:	blr	x20
  431ee4:	mov	w0, #0x1                   	// #1
  431ee8:	b	433450 <wcrtomb@plt+0x2e910>
  431eec:	bl	404a10 <__errno_location@plt>
  431ef0:	mov	w8, #0xc                   	// #12
  431ef4:	str	w8, [x0]
  431ef8:	ldr	w8, [x19, #32]
  431efc:	mov	w9, #0x2                   	// #2
  431f00:	str	w9, [x19, #192]
  431f04:	tbnz	w8, #7, 431fdc <wcrtomb@plt+0x2d49c>
  431f08:	tbnz	w8, #4, 431ff0 <wcrtomb@plt+0x2d4b0>
  431f0c:	tbnz	w8, #3, 431f18 <wcrtomb@plt+0x2d3d8>
  431f10:	mov	x0, x19
  431f14:	bl	42d484 <wcrtomb@plt+0x28944>
  431f18:	mov	x20, x19
  431f1c:	ldr	x23, [x20, #208]!
  431f20:	cbnz	x23, 431f8c <wcrtomb@plt+0x2d44c>
  431f24:	stp	xzr, xzr, [x20]
  431f28:	ldr	w8, [x19, #192]
  431f2c:	cbnz	w8, 432410 <wcrtomb@plt+0x2d8d0>
  431f30:	add	x24, x19, #0xd0
  431f34:	stp	xzr, xzr, [x23]
  431f38:	stp	x23, x23, [x19, #208]
  431f3c:	orr	w8, w26, #0x2
  431f40:	mov	w0, #0x3                   	// #3
  431f44:	str	x23, [x28]
  431f48:	str	w8, [x23, #16]
  431f4c:	bl	404250 <malloc@plt>
  431f50:	str	x0, [x23, #24]
  431f54:	cbz	x0, 431fa4 <wcrtomb@plt+0x2d464>
  431f58:	mov	x8, x0
  431f5c:	mov	w9, #0x24                  	// #36
  431f60:	strb	w9, [x8]
  431f64:	ldrb	w9, [x25]
  431f68:	mov	w0, wzr
  431f6c:	strb	wzr, [x8, #2]
  431f70:	strb	w9, [x8, #1]
  431f74:	str	x25, [x22]
  431f78:	b	433450 <wcrtomb@plt+0x2e910>
  431f7c:	mov	x0, x23
  431f80:	bl	404700 <free@plt>
  431f84:	mov	x23, x21
  431f88:	cbz	x21, 431f24 <wcrtomb@plt+0x2d3e4>
  431f8c:	ldrb	w8, [x23, #16]
  431f90:	ldr	x21, [x23, #8]
  431f94:	tbz	w8, #1, 431f7c <wcrtomb@plt+0x2d43c>
  431f98:	ldr	x0, [x23, #24]
  431f9c:	bl	404700 <free@plt>
  431fa0:	b	431f7c <wcrtomb@plt+0x2d43c>
  431fa4:	bl	404a10 <__errno_location@plt>
  431fa8:	mov	w8, #0xc                   	// #12
  431fac:	str	w8, [x0]
  431fb0:	ldr	w8, [x19, #32]
  431fb4:	mov	w9, #0x2                   	// #2
  431fb8:	str	w9, [x19, #192]
  431fbc:	tbnz	w8, #7, 432064 <wcrtomb@plt+0x2d524>
  431fc0:	tbnz	w8, #4, 432078 <wcrtomb@plt+0x2d538>
  431fc4:	tbnz	w8, #3, 432904 <wcrtomb@plt+0x2ddc4>
  431fc8:	mov	x0, x19
  431fcc:	bl	42d484 <wcrtomb@plt+0x28944>
  431fd0:	ldr	x20, [x24]
  431fd4:	cbnz	x20, 432928 <wcrtomb@plt+0x2dde8>
  431fd8:	b	43290c <wcrtomb@plt+0x2ddcc>
  431fdc:	ldr	x8, [x19, #88]
  431fe0:	mov	x0, x19
  431fe4:	blr	x8
  431fe8:	ldr	w8, [x19, #32]
  431fec:	tbz	w8, #4, 431f0c <wcrtomb@plt+0x2d3cc>
  431ff0:	ldr	w8, [x19, #192]
  431ff4:	ldr	x20, [x19, #96]
  431ff8:	cmp	w8, #0x9
  431ffc:	b.eq	432734 <wcrtomb@plt+0x2dbf4>  // b.none
  432000:	cmp	w8, #0x1
  432004:	b.ne	43273c <wcrtomb@plt+0x2dbfc>  // b.any
  432008:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43200c:	add	x1, x1, #0x751
  432010:	mov	w2, #0x5                   	// #5
  432014:	mov	x0, xzr
  432018:	bl	404900 <dcgettext@plt>
  43201c:	ldr	x8, [x19, #168]
  432020:	ldr	x2, [x19, #184]
  432024:	ldrb	w1, [x8, x2]
  432028:	blr	x20
  43202c:	b	4328ac <wcrtomb@plt+0x2dd6c>
  432030:	add	x8, x9, x24
  432034:	add	x0, x8, #0x1
  432038:	b	4320c0 <wcrtomb@plt+0x2d580>
  43203c:	ldr	x20, [x19, #96]
  432040:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432044:	add	x1, x1, #0x895
  432048:	mov	w2, #0x5                   	// #5
  43204c:	mov	x0, xzr
  432050:	bl	404900 <dcgettext@plt>
  432054:	mov	w1, w24
  432058:	mov	x2, x25
  43205c:	blr	x20
  432060:	b	432270 <wcrtomb@plt+0x2d730>
  432064:	ldr	x8, [x19, #88]
  432068:	mov	x0, x19
  43206c:	blr	x8
  432070:	ldr	w8, [x19, #32]
  432074:	tbz	w8, #4, 431fc4 <wcrtomb@plt+0x2d484>
  432078:	ldr	w8, [x19, #192]
  43207c:	ldr	x20, [x19, #96]
  432080:	cmp	w8, #0x9
  432084:	b.eq	432764 <wcrtomb@plt+0x2dc24>  // b.none
  432088:	cmp	w8, #0x1
  43208c:	b.ne	43276c <wcrtomb@plt+0x2dc2c>  // b.any
  432090:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432094:	add	x1, x1, #0x751
  432098:	mov	w2, #0x5                   	// #5
  43209c:	mov	x0, xzr
  4320a0:	bl	404900 <dcgettext@plt>
  4320a4:	ldr	x8, [x19, #168]
  4320a8:	ldr	x2, [x19, #184]
  4320ac:	ldrb	w1, [x8, x2]
  4320b0:	blr	x20
  4320b4:	b	4328fc <wcrtomb@plt+0x2ddbc>
  4320b8:	ldr	x0, [x21]
  4320bc:	cbz	x0, 431980 <wcrtomb@plt+0x2ce40>
  4320c0:	bl	4044e0 <strdup@plt>
  4320c4:	stur	x0, [x29, #-16]
  4320c8:	cbz	x0, 4320f0 <wcrtomb@plt+0x2d5b0>
  4320cc:	ldrb	w8, [x0]
  4320d0:	cbnz	w8, 4321b0 <wcrtomb@plt+0x2d670>
  4320d4:	eor	w9, w28, #0x1
  4320d8:	tbnz	w9, #0, 4321b0 <wcrtomb@plt+0x2d670>
  4320dc:	ldurb	w8, [x27, #-1]
  4320e0:	cmp	w8, #0x3a
  4320e4:	b.ne	4321b8 <wcrtomb@plt+0x2d678>  // b.any
  4320e8:	bl	404700 <free@plt>
  4320ec:	b	431984 <wcrtomb@plt+0x2ce44>
  4320f0:	bl	404a10 <__errno_location@plt>
  4320f4:	mov	w8, #0xc                   	// #12
  4320f8:	str	w8, [x0]
  4320fc:	ldr	w8, [x19, #32]
  432100:	mov	w9, #0x2                   	// #2
  432104:	str	w9, [x19, #192]
  432108:	tbnz	w8, #7, 43215c <wcrtomb@plt+0x2d61c>
  43210c:	tbnz	w8, #4, 432170 <wcrtomb@plt+0x2d630>
  432110:	tbnz	w8, #3, 43211c <wcrtomb@plt+0x2d5dc>
  432114:	mov	x0, x19
  432118:	bl	42d484 <wcrtomb@plt+0x28944>
  43211c:	mov	x21, x19
  432120:	ldr	x20, [x21, #208]!
  432124:	cbnz	x20, 432144 <wcrtomb@plt+0x2d604>
  432128:	stp	xzr, xzr, [x21]
  43212c:	ldr	w0, [x19, #192]
  432130:	b	433450 <wcrtomb@plt+0x2e910>
  432134:	mov	x0, x20
  432138:	bl	404700 <free@plt>
  43213c:	mov	x20, x22
  432140:	cbz	x22, 432128 <wcrtomb@plt+0x2d5e8>
  432144:	ldrb	w8, [x20, #16]
  432148:	ldr	x22, [x20, #8]
  43214c:	tbz	w8, #1, 432134 <wcrtomb@plt+0x2d5f4>
  432150:	ldr	x0, [x20, #24]
  432154:	bl	404700 <free@plt>
  432158:	b	432134 <wcrtomb@plt+0x2d5f4>
  43215c:	ldr	x8, [x19, #88]
  432160:	mov	x0, x19
  432164:	blr	x8
  432168:	ldr	w8, [x19, #32]
  43216c:	tbz	w8, #4, 432110 <wcrtomb@plt+0x2d5d0>
  432170:	ldr	w8, [x19, #192]
  432174:	ldr	x20, [x19, #96]
  432178:	cmp	w8, #0x9
  43217c:	b.eq	4326e8 <wcrtomb@plt+0x2dba8>  // b.none
  432180:	cmp	w8, #0x1
  432184:	b.ne	4326f0 <wcrtomb@plt+0x2dbb0>  // b.any
  432188:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43218c:	add	x1, x1, #0x751
  432190:	mov	w2, #0x5                   	// #5
  432194:	mov	x0, xzr
  432198:	bl	404900 <dcgettext@plt>
  43219c:	ldr	x8, [x19, #168]
  4321a0:	ldr	x2, [x19, #184]
  4321a4:	ldrb	w1, [x8, x2]
  4321a8:	blr	x20
  4321ac:	b	43285c <wcrtomb@plt+0x2dd1c>
  4321b0:	cbz	x27, 433104 <wcrtomb@plt+0x2e5c4>
  4321b4:	cbz	w8, 433104 <wcrtomb@plt+0x2e5c4>
  4321b8:	ldrb	w8, [x27]
  4321bc:	cmp	w8, #0x2b
  4321c0:	b.ne	433104 <wcrtomb@plt+0x2e5c4>  // b.any
  4321c4:	ldr	w8, [x22]
  4321c8:	ldr	w9, [x19, #32]
  4321cc:	add	x2, x27, #0x1
  4321d0:	mov	w10, #0x44                  	// #68
  4321d4:	sub	w3, w8, w2
  4321d8:	and	w8, w9, w10
  4321dc:	mov	w9, #0x700                 	// #1792
  4321e0:	movk	w9, #0x40, lsl #16
  4321e4:	orr	w4, w8, w9
  4321e8:	sub	x1, x29, #0xf8
  4321ec:	mov	w5, #0x1                   	// #1
  4321f0:	mov	x0, x19
  4321f4:	bl	4316f4 <wcrtomb@plt+0x2cbb4>
  4321f8:	cbnz	w0, 433450 <wcrtomb@plt+0x2e910>
  4321fc:	ldur	x0, [x29, #-16]
  432200:	bl	404700 <free@plt>
  432204:	ldur	x8, [x29, #-240]
  432208:	sub	x0, x29, #0xf8
  43220c:	ldr	x9, [x8]
  432210:	stur	x9, [x29, #-16]
  432214:	str	xzr, [x8]
  432218:	bl	42d484 <wcrtomb@plt+0x28944>
  43221c:	b	433104 <wcrtomb@plt+0x2e5c4>
  432220:	add	x8, x19, #0xc8
  432224:	b	432244 <wcrtomb@plt+0x2d704>
  432228:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  43222c:	ldr	w8, [x8, #4008]
  432230:	cmp	w8, w26
  432234:	b.le	432718 <wcrtomb@plt+0x2dbd8>
  432238:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  43223c:	add	x8, x8, #0xf60
  432240:	add	x8, x8, w26, sxtw #3
  432244:	ldr	x1, [x8]
  432248:	b	432720 <wcrtomb@plt+0x2dbe0>
  43224c:	ldur	x9, [x29, #-240]
  432250:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432254:	add	x0, x0, #0x8b4
  432258:	mov	w1, w24
  43225c:	ldr	x3, [x9]
  432260:	mov	x2, x25
  432264:	blr	x8
  432268:	sub	x0, x29, #0xf8
  43226c:	bl	42d484 <wcrtomb@plt+0x28944>
  432270:	stur	xzr, [x29, #-16]
  432274:	ldrb	w8, [x19, #34]
  432278:	tbnz	w8, #7, 4322d8 <wcrtomb@plt+0x2d798>
  43227c:	mov	w0, #0x1                   	// #1
  432280:	mov	w1, #0x28                  	// #40
  432284:	bl	404410 <calloc@plt>
  432288:	ldr	x23, [sp, #16]
  43228c:	cbz	x0, 432340 <wcrtomb@plt+0x2d800>
  432290:	ldr	x9, [x19, #208]
  432294:	mov	x8, x0
  432298:	cbz	x9, 432384 <wcrtomb@plt+0x2d844>
  43229c:	ldr	x9, [x23]
  4322a0:	mov	x11, x8
  4322a4:	mov	x10, x11
  4322a8:	cbz	x11, 4322b4 <wcrtomb@plt+0x2d774>
  4322ac:	ldr	x11, [x10, #8]
  4322b0:	cbnz	x11, 4322a4 <wcrtomb@plt+0x2d764>
  4322b4:	ldr	x11, [x9, #8]
  4322b8:	add	x12, x19, #0xd8
  4322bc:	cmp	x11, #0x0
  4322c0:	csel	x12, x12, x11, eq  // eq = none
  4322c4:	str	x10, [x12]
  4322c8:	str	x11, [x10, #8]
  4322cc:	str	x9, [x8]
  4322d0:	str	x8, [x9, #8]
  4322d4:	b	43238c <wcrtomb@plt+0x2d84c>
  4322d8:	ldr	x24, [x22]
  4322dc:	mov	w0, #0x1                   	// #1
  4322e0:	mov	w1, #0x28                  	// #40
  4322e4:	bl	404410 <calloc@plt>
  4322e8:	ldr	x26, [sp, #16]
  4322ec:	cbz	x0, 4323c8 <wcrtomb@plt+0x2d888>
  4322f0:	mov	x25, x19
  4322f4:	ldr	x8, [x25, #208]!
  4322f8:	mov	x22, x0
  4322fc:	cbz	x8, 432440 <wcrtomb@plt+0x2d900>
  432300:	ldr	x8, [x26]
  432304:	ldr	w27, [sp, #28]
  432308:	mov	x10, x22
  43230c:	mov	x9, x10
  432310:	cbz	x10, 43231c <wcrtomb@plt+0x2d7dc>
  432314:	ldr	x10, [x9, #8]
  432318:	cbnz	x10, 43230c <wcrtomb@plt+0x2d7cc>
  43231c:	ldr	x10, [x8, #8]
  432320:	add	x11, x19, #0xd8
  432324:	cmp	x10, #0x0
  432328:	csel	x11, x11, x10, eq  // eq = none
  43232c:	str	x9, [x11]
  432330:	str	x10, [x9, #8]
  432334:	str	x8, [x22]
  432338:	str	x22, [x8, #8]
  43233c:	b	432500 <wcrtomb@plt+0x2d9c0>
  432340:	bl	404a10 <__errno_location@plt>
  432344:	mov	w8, #0xc                   	// #12
  432348:	str	w8, [x0]
  43234c:	ldr	w8, [x19, #32]
  432350:	mov	w9, #0x2                   	// #2
  432354:	str	w9, [x19, #192]
  432358:	tbnz	w8, #7, 432448 <wcrtomb@plt+0x2d908>
  43235c:	tbnz	w8, #4, 43245c <wcrtomb@plt+0x2d91c>
  432360:	tbnz	w8, #3, 43236c <wcrtomb@plt+0x2d82c>
  432364:	mov	x0, x19
  432368:	bl	42d484 <wcrtomb@plt+0x28944>
  43236c:	mov	x20, x19
  432370:	ldr	x21, [x20, #208]!
  432374:	cbnz	x21, 4323b0 <wcrtomb@plt+0x2d870>
  432378:	stp	xzr, xzr, [x20]
  43237c:	ldr	w8, [x19, #192]
  432380:	cbnz	w8, 432410 <wcrtomb@plt+0x2d8d0>
  432384:	stp	xzr, xzr, [x8]
  432388:	stp	x8, x8, [x19, #208]
  43238c:	mov	w0, wzr
  432390:	mov	w9, #0x1                   	// #1
  432394:	str	x8, [x23]
  432398:	str	w9, [x8, #16]
  43239c:	b	433450 <wcrtomb@plt+0x2e910>
  4323a0:	mov	x0, x21
  4323a4:	bl	404700 <free@plt>
  4323a8:	mov	x21, x22
  4323ac:	cbz	x22, 432378 <wcrtomb@plt+0x2d838>
  4323b0:	ldrb	w8, [x21, #16]
  4323b4:	ldr	x22, [x21, #8]
  4323b8:	tbz	w8, #1, 4323a0 <wcrtomb@plt+0x2d860>
  4323bc:	ldr	x0, [x21, #24]
  4323c0:	bl	404700 <free@plt>
  4323c4:	b	4323a0 <wcrtomb@plt+0x2d860>
  4323c8:	bl	404a10 <__errno_location@plt>
  4323cc:	mov	w8, #0xc                   	// #12
  4323d0:	str	w8, [x0]
  4323d4:	ldr	w8, [x19, #32]
  4323d8:	mov	w9, #0x2                   	// #2
  4323dc:	str	w9, [x19, #192]
  4323e0:	tbnz	w8, #7, 43249c <wcrtomb@plt+0x2d95c>
  4323e4:	ldr	w27, [sp, #28]
  4323e8:	tbnz	w8, #4, 4324b4 <wcrtomb@plt+0x2d974>
  4323ec:	tbnz	w8, #3, 4323f8 <wcrtomb@plt+0x2d8b8>
  4323f0:	mov	x0, x19
  4323f4:	bl	42d484 <wcrtomb@plt+0x28944>
  4323f8:	mov	x20, x19
  4323fc:	ldr	x22, [x20, #208]!
  432400:	cbnz	x22, 432428 <wcrtomb@plt+0x2d8e8>
  432404:	stp	xzr, xzr, [x20]
  432408:	ldr	w8, [x19, #192]
  43240c:	cbz	w8, 4324f4 <wcrtomb@plt+0x2d9b4>
  432410:	mov	w0, #0x1                   	// #1
  432414:	b	433450 <wcrtomb@plt+0x2e910>
  432418:	mov	x0, x22
  43241c:	bl	404700 <free@plt>
  432420:	mov	x22, x21
  432424:	cbz	x21, 432404 <wcrtomb@plt+0x2d8c4>
  432428:	ldrb	w8, [x22, #16]
  43242c:	ldr	x21, [x22, #8]
  432430:	tbz	w8, #1, 432418 <wcrtomb@plt+0x2d8d8>
  432434:	ldr	x0, [x22, #24]
  432438:	bl	404700 <free@plt>
  43243c:	b	432418 <wcrtomb@plt+0x2d8d8>
  432440:	ldr	w27, [sp, #28]
  432444:	b	4324f8 <wcrtomb@plt+0x2d9b8>
  432448:	ldr	x8, [x19, #88]
  43244c:	mov	x0, x19
  432450:	blr	x8
  432454:	ldr	w8, [x19, #32]
  432458:	tbz	w8, #4, 432360 <wcrtomb@plt+0x2d820>
  43245c:	ldr	w8, [x19, #192]
  432460:	ldr	x20, [x19, #96]
  432464:	cmp	w8, #0x9
  432468:	b.eq	4327e8 <wcrtomb@plt+0x2dca8>  // b.none
  43246c:	cmp	w8, #0x1
  432470:	b.ne	4327f0 <wcrtomb@plt+0x2dcb0>  // b.any
  432474:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432478:	add	x1, x1, #0x751
  43247c:	mov	w2, #0x5                   	// #5
  432480:	mov	x0, xzr
  432484:	bl	404900 <dcgettext@plt>
  432488:	ldr	x8, [x19, #168]
  43248c:	ldr	x2, [x19, #184]
  432490:	ldrb	w1, [x8, x2]
  432494:	blr	x20
  432498:	b	432954 <wcrtomb@plt+0x2de14>
  43249c:	ldr	x8, [x19, #88]
  4324a0:	mov	x0, x19
  4324a4:	blr	x8
  4324a8:	ldr	w8, [x19, #32]
  4324ac:	ldr	w27, [sp, #28]
  4324b0:	tbz	w8, #4, 4323ec <wcrtomb@plt+0x2d8ac>
  4324b4:	ldr	w8, [x19, #192]
  4324b8:	ldr	x20, [x19, #96]
  4324bc:	cmp	w8, #0x9
  4324c0:	b.eq	432818 <wcrtomb@plt+0x2dcd8>  // b.none
  4324c4:	cmp	w8, #0x1
  4324c8:	b.ne	432820 <wcrtomb@plt+0x2dce0>  // b.any
  4324cc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4324d0:	add	x1, x1, #0x751
  4324d4:	mov	w2, #0x5                   	// #5
  4324d8:	mov	x0, xzr
  4324dc:	bl	404900 <dcgettext@plt>
  4324e0:	ldr	x8, [x19, #168]
  4324e4:	ldr	x2, [x19, #184]
  4324e8:	ldrb	w1, [x8, x2]
  4324ec:	blr	x20
  4324f0:	b	432974 <wcrtomb@plt+0x2de34>
  4324f4:	add	x25, x19, #0xd0
  4324f8:	stp	xzr, xzr, [x22]
  4324fc:	stp	x22, x22, [x19, #208]
  432500:	sub	x20, x24, x23
  432504:	mov	w8, #0xa                   	// #10
  432508:	orr	w8, w27, w8
  43250c:	add	x0, x20, #0x2
  432510:	str	x22, [x26]
  432514:	str	w8, [x22, #16]
  432518:	bl	404250 <malloc@plt>
  43251c:	str	x0, [x22, #24]
  432520:	cbz	x0, 432544 <wcrtomb@plt+0x2da04>
  432524:	add	x19, x20, #0x1
  432528:	mov	x1, x23
  43252c:	mov	x2, x19
  432530:	bl	403ec0 <memcpy@plt>
  432534:	ldr	x8, [x22, #24]
  432538:	mov	w0, wzr
  43253c:	strb	wzr, [x8, x19]
  432540:	b	433450 <wcrtomb@plt+0x2e910>
  432544:	bl	404a10 <__errno_location@plt>
  432548:	mov	w8, #0xc                   	// #12
  43254c:	str	w8, [x0]
  432550:	ldr	w8, [x19, #32]
  432554:	mov	w9, #0x2                   	// #2
  432558:	str	w9, [x19, #192]
  43255c:	tbnz	w8, #7, 43257c <wcrtomb@plt+0x2da3c>
  432560:	tbnz	w8, #4, 432590 <wcrtomb@plt+0x2da50>
  432564:	tbnz	w8, #3, 432a00 <wcrtomb@plt+0x2dec0>
  432568:	mov	x0, x19
  43256c:	bl	42d484 <wcrtomb@plt+0x28944>
  432570:	ldr	x20, [x25]
  432574:	cbnz	x20, 432a24 <wcrtomb@plt+0x2dee4>
  432578:	b	432a08 <wcrtomb@plt+0x2dec8>
  43257c:	ldr	x8, [x19, #88]
  432580:	mov	x0, x19
  432584:	blr	x8
  432588:	ldr	w8, [x19, #32]
  43258c:	tbz	w8, #4, 432564 <wcrtomb@plt+0x2da24>
  432590:	ldr	w8, [x19, #192]
  432594:	ldr	x20, [x19, #96]
  432598:	cmp	w8, #0x9
  43259c:	b.eq	432868 <wcrtomb@plt+0x2dd28>  // b.none
  4325a0:	cmp	w8, #0x1
  4325a4:	b.ne	432870 <wcrtomb@plt+0x2dd30>  // b.any
  4325a8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4325ac:	add	x1, x1, #0x751
  4325b0:	mov	w2, #0x5                   	// #5
  4325b4:	mov	x0, xzr
  4325b8:	bl	404900 <dcgettext@plt>
  4325bc:	ldr	x8, [x19, #168]
  4325c0:	ldr	x2, [x19, #184]
  4325c4:	ldrb	w1, [x8, x2]
  4325c8:	blr	x20
  4325cc:	b	4329f8 <wcrtomb@plt+0x2deb8>
  4325d0:	mov	x27, xzr
  4325d4:	mov	x9, x24
  4325d8:	add	x9, x26, x9
  4325dc:	str	x9, [x22]
  4325e0:	cmp	x24, x8
  4325e4:	b.eq	431d90 <wcrtomb@plt+0x2d250>  // b.none
  4325e8:	str	x28, [sp, #16]
  4325ec:	cbz	x27, 432620 <wcrtomb@plt+0x2dae0>
  4325f0:	ldrb	w8, [x27]
  4325f4:	cmp	x8, #0x3f
  4325f8:	b.hi	431ccc <wcrtomb@plt+0x2d18c>  // b.pmore
  4325fc:	mov	x9, #0x1                   	// #1
  432600:	mov	w28, #0x1                   	// #1
  432604:	movk	x9, #0x2800, lsl #32
  432608:	lsl	x8, x28, x8
  43260c:	movk	x9, #0xa000, lsl #48
  432610:	and	x8, x8, x9
  432614:	mov	x25, x26
  432618:	cbnz	x8, 431974 <wcrtomb@plt+0x2ce34>
  43261c:	b	431ccc <wcrtomb@plt+0x2d18c>
  432620:	mov	w28, wzr
  432624:	mov	x25, x26
  432628:	b	431974 <wcrtomb@plt+0x2ce34>
  43262c:	add	x9, x24, #0x1
  432630:	cmp	x9, x8
  432634:	b.cs	431d90 <wcrtomb@plt+0x2d250>  // b.hs, b.nlast
  432638:	add	x10, x25, x24
  43263c:	mov	w11, wzr
  432640:	add	x27, x10, #0x2
  432644:	mov	w10, #0x1                   	// #1
  432648:	b	432664 <wcrtomb@plt+0x2db24>
  43264c:	ldrb	w11, [x26, x9]
  432650:	cmp	w11, #0x27
  432654:	cset	w11, ne  // ne = any
  432658:	add	x9, x9, #0x1
  43265c:	cmp	x9, x8
  432660:	b.cs	431d90 <wcrtomb@plt+0x2d250>  // b.hs, b.nlast
  432664:	cmp	w11, #0x2
  432668:	b.eq	43269c <wcrtomb@plt+0x2db5c>  // b.none
  43266c:	cmp	w11, #0x1
  432670:	b.eq	43264c <wcrtomb@plt+0x2db0c>  // b.none
  432674:	cbnz	w11, 432658 <wcrtomb@plt+0x2db18>
  432678:	ldrb	w11, [x26, x9]
  43267c:	cmp	w11, #0x7a
  432680:	b.gt	4326bc <wcrtomb@plt+0x2db7c>
  432684:	cmp	w11, #0x22
  432688:	b.eq	4326b4 <wcrtomb@plt+0x2db74>  // b.none
  43268c:	cmp	w11, #0x27
  432690:	b.ne	4326e0 <wcrtomb@plt+0x2dba0>  // b.any
  432694:	mov	w11, #0x1                   	// #1
  432698:	b	432658 <wcrtomb@plt+0x2db18>
  43269c:	ldrb	w11, [x26, x9]
  4326a0:	cmp	w11, #0x22
  4326a4:	b.eq	4326e0 <wcrtomb@plt+0x2dba0>  // b.none
  4326a8:	cmp	w11, #0x5c
  4326ac:	b.ne	4326b4 <wcrtomb@plt+0x2db74>  // b.any
  4326b0:	add	x9, x9, #0x1
  4326b4:	mov	w11, #0x2                   	// #2
  4326b8:	b	432658 <wcrtomb@plt+0x2db18>
  4326bc:	cmp	w11, #0x7d
  4326c0:	b.eq	4326d8 <wcrtomb@plt+0x2db98>  // b.none
  4326c4:	cmp	w11, #0x7b
  4326c8:	b.ne	4326e0 <wcrtomb@plt+0x2dba0>  // b.any
  4326cc:	mov	w11, wzr
  4326d0:	add	x10, x10, #0x1
  4326d4:	b	432658 <wcrtomb@plt+0x2db18>
  4326d8:	subs	x10, x10, #0x1
  4326dc:	b.eq	4325d8 <wcrtomb@plt+0x2da98>  // b.none
  4326e0:	mov	w11, wzr
  4326e4:	b	432658 <wcrtomb@plt+0x2db18>
  4326e8:	add	x8, x19, #0xc8
  4326ec:	b	432710 <wcrtomb@plt+0x2dbd0>
  4326f0:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  4326f4:	ldr	w9, [x9, #4008]
  4326f8:	sxtw	x8, w8
  4326fc:	cmp	w8, w9
  432700:	b.ge	432848 <wcrtomb@plt+0x2dd08>  // b.tcont
  432704:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432708:	add	x9, x9, #0xf60
  43270c:	add	x8, x9, x8, lsl #3
  432710:	ldr	x1, [x8]
  432714:	b	432850 <wcrtomb@plt+0x2dd10>
  432718:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43271c:	add	x1, x1, #0x743
  432720:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432724:	add	x0, x0, #0x7a4
  432728:	blr	x20
  43272c:	mov	w0, #0x1                   	// #1
  432730:	b	433450 <wcrtomb@plt+0x2e910>
  432734:	add	x8, x19, #0xc8
  432738:	b	43275c <wcrtomb@plt+0x2dc1c>
  43273c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432740:	ldr	w9, [x9, #4008]
  432744:	sxtw	x8, w8
  432748:	cmp	w8, w9
  43274c:	b.ge	432898 <wcrtomb@plt+0x2dd58>  // b.tcont
  432750:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432754:	add	x9, x9, #0xf60
  432758:	add	x8, x9, x8, lsl #3
  43275c:	ldr	x1, [x8]
  432760:	b	4328a0 <wcrtomb@plt+0x2dd60>
  432764:	add	x8, x19, #0xc8
  432768:	b	43278c <wcrtomb@plt+0x2dc4c>
  43276c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432770:	ldr	w9, [x9, #4008]
  432774:	sxtw	x8, w8
  432778:	cmp	w8, w9
  43277c:	b.ge	4328e8 <wcrtomb@plt+0x2dda8>  // b.tcont
  432780:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432784:	add	x9, x9, #0xf60
  432788:	add	x8, x9, x8, lsl #3
  43278c:	ldr	x1, [x8]
  432790:	b	4328f0 <wcrtomb@plt+0x2ddb0>
  432794:	ldr	x8, [x19, #88]
  432798:	mov	x0, x19
  43279c:	blr	x8
  4327a0:	ldr	w8, [x19, #32]
  4327a4:	tbz	w8, #4, 431d3c <wcrtomb@plt+0x2d1fc>
  4327a8:	ldr	w8, [x19, #192]
  4327ac:	ldr	x20, [x19, #96]
  4327b0:	cmp	w8, #0x9
  4327b4:	b.eq	432a3c <wcrtomb@plt+0x2defc>  // b.none
  4327b8:	cmp	w8, #0x1
  4327bc:	b.ne	432a44 <wcrtomb@plt+0x2df04>  // b.any
  4327c0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4327c4:	add	x1, x1, #0x751
  4327c8:	mov	w2, #0x5                   	// #5
  4327cc:	mov	x0, xzr
  4327d0:	bl	404900 <dcgettext@plt>
  4327d4:	ldr	x8, [x19, #168]
  4327d8:	ldr	x2, [x19, #184]
  4327dc:	ldrb	w1, [x8, x2]
  4327e0:	blr	x20
  4327e4:	b	432af4 <wcrtomb@plt+0x2dfb4>
  4327e8:	add	x8, x19, #0xc8
  4327ec:	b	432810 <wcrtomb@plt+0x2dcd0>
  4327f0:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  4327f4:	ldr	w9, [x9, #4008]
  4327f8:	sxtw	x8, w8
  4327fc:	cmp	w8, w9
  432800:	b.ge	432940 <wcrtomb@plt+0x2de00>  // b.tcont
  432804:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432808:	add	x9, x9, #0xf60
  43280c:	add	x8, x9, x8, lsl #3
  432810:	ldr	x1, [x8]
  432814:	b	432948 <wcrtomb@plt+0x2de08>
  432818:	add	x8, x19, #0xc8
  43281c:	b	432840 <wcrtomb@plt+0x2dd00>
  432820:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432824:	ldr	w9, [x9, #4008]
  432828:	sxtw	x8, w8
  43282c:	cmp	w8, w9
  432830:	b.ge	432960 <wcrtomb@plt+0x2de20>  // b.tcont
  432834:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432838:	add	x9, x9, #0xf60
  43283c:	add	x8, x9, x8, lsl #3
  432840:	ldr	x1, [x8]
  432844:	b	432968 <wcrtomb@plt+0x2de28>
  432848:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43284c:	add	x1, x1, #0x743
  432850:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432854:	add	x0, x0, #0x7a4
  432858:	blr	x20
  43285c:	ldr	w8, [x19, #32]
  432860:	tbz	w8, #3, 432114 <wcrtomb@plt+0x2d5d4>
  432864:	b	43211c <wcrtomb@plt+0x2d5dc>
  432868:	add	x8, x19, #0xc8
  43286c:	b	432890 <wcrtomb@plt+0x2dd50>
  432870:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432874:	ldr	w9, [x9, #4008]
  432878:	sxtw	x8, w8
  43287c:	cmp	w8, w9
  432880:	b.ge	4329e4 <wcrtomb@plt+0x2dea4>  // b.tcont
  432884:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432888:	add	x9, x9, #0xf60
  43288c:	add	x8, x9, x8, lsl #3
  432890:	ldr	x1, [x8]
  432894:	b	4329ec <wcrtomb@plt+0x2deac>
  432898:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43289c:	add	x1, x1, #0x743
  4328a0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4328a4:	add	x0, x0, #0x7a4
  4328a8:	blr	x20
  4328ac:	ldr	w8, [x19, #32]
  4328b0:	tbz	w8, #3, 431f10 <wcrtomb@plt+0x2d3d0>
  4328b4:	b	431f18 <wcrtomb@plt+0x2d3d8>
  4328b8:	tbnz	w20, #19, 432a6c <wcrtomb@plt+0x2df2c>
  4328bc:	mov	w0, #0x10                  	// #16
  4328c0:	mov	w1, #0x8                   	// #8
  4328c4:	bl	404410 <calloc@plt>
  4328c8:	cbz	x0, 432b00 <wcrtomb@plt+0x2dfc0>
  4328cc:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4328d0:	ldr	q0, [x8, #1680]
  4328d4:	orr	w8, w20, #0x80000
  4328d8:	stp	x0, x0, [x19, #112]
  4328dc:	str	w8, [x19, #32]
  4328e0:	str	q0, [x19, #128]
  4328e4:	b	432c40 <wcrtomb@plt+0x2e100>
  4328e8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4328ec:	add	x1, x1, #0x743
  4328f0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4328f4:	add	x0, x0, #0x7a4
  4328f8:	blr	x20
  4328fc:	ldr	w8, [x19, #32]
  432900:	tbz	w8, #3, 431fc8 <wcrtomb@plt+0x2d488>
  432904:	ldr	x20, [x24]
  432908:	cbnz	x20, 432928 <wcrtomb@plt+0x2dde8>
  43290c:	stp	xzr, xzr, [x24]
  432910:	ldr	w0, [x19, #192]
  432914:	b	433450 <wcrtomb@plt+0x2e910>
  432918:	mov	x0, x20
  43291c:	bl	404700 <free@plt>
  432920:	mov	x20, x21
  432924:	cbz	x21, 43290c <wcrtomb@plt+0x2ddcc>
  432928:	ldrb	w8, [x20, #16]
  43292c:	ldr	x21, [x20, #8]
  432930:	tbz	w8, #1, 432918 <wcrtomb@plt+0x2ddd8>
  432934:	ldr	x0, [x20, #24]
  432938:	bl	404700 <free@plt>
  43293c:	b	432918 <wcrtomb@plt+0x2ddd8>
  432940:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432944:	add	x1, x1, #0x743
  432948:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43294c:	add	x0, x0, #0x7a4
  432950:	blr	x20
  432954:	ldr	w8, [x19, #32]
  432958:	tbz	w8, #3, 432364 <wcrtomb@plt+0x2d824>
  43295c:	b	43236c <wcrtomb@plt+0x2d82c>
  432960:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432964:	add	x1, x1, #0x743
  432968:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43296c:	add	x0, x0, #0x7a4
  432970:	blr	x20
  432974:	ldr	w8, [x19, #32]
  432978:	tbz	w8, #3, 4323f0 <wcrtomb@plt+0x2d8b0>
  43297c:	b	4323f8 <wcrtomb@plt+0x2d8b8>
  432980:	bl	404a10 <__errno_location@plt>
  432984:	mov	w8, #0xc                   	// #12
  432988:	str	w8, [x0]
  43298c:	ldr	w8, [x19, #32]
  432990:	mov	w9, #0x2                   	// #2
  432994:	str	w9, [x19, #192]
  432998:	tbnz	w8, #7, 432a8c <wcrtomb@plt+0x2df4c>
  43299c:	tbnz	w8, #4, 432aa0 <wcrtomb@plt+0x2df60>
  4329a0:	tbnz	w8, #3, 4329ac <wcrtomb@plt+0x2de6c>
  4329a4:	mov	x0, x19
  4329a8:	bl	42d484 <wcrtomb@plt+0x28944>
  4329ac:	mov	x20, x19
  4329b0:	ldr	x24, [x20, #208]!
  4329b4:	cbnz	x24, 4329cc <wcrtomb@plt+0x2de8c>
  4329b8:	b	433100 <wcrtomb@plt+0x2e5c0>
  4329bc:	mov	x0, x24
  4329c0:	bl	404700 <free@plt>
  4329c4:	mov	x24, x21
  4329c8:	cbz	x21, 433100 <wcrtomb@plt+0x2e5c0>
  4329cc:	ldrb	w8, [x24, #16]
  4329d0:	ldr	x21, [x24, #8]
  4329d4:	tbz	w8, #1, 4329bc <wcrtomb@plt+0x2de7c>
  4329d8:	ldr	x0, [x24, #24]
  4329dc:	bl	404700 <free@plt>
  4329e0:	b	4329bc <wcrtomb@plt+0x2de7c>
  4329e4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4329e8:	add	x1, x1, #0x743
  4329ec:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4329f0:	add	x0, x0, #0x7a4
  4329f4:	blr	x20
  4329f8:	ldr	w8, [x19, #32]
  4329fc:	tbz	w8, #3, 432568 <wcrtomb@plt+0x2da28>
  432a00:	ldr	x20, [x25]
  432a04:	cbnz	x20, 432a24 <wcrtomb@plt+0x2dee4>
  432a08:	stp	xzr, xzr, [x25]
  432a0c:	ldr	w0, [x19, #192]
  432a10:	b	433450 <wcrtomb@plt+0x2e910>
  432a14:	mov	x0, x20
  432a18:	bl	404700 <free@plt>
  432a1c:	mov	x20, x21
  432a20:	cbz	x21, 432a08 <wcrtomb@plt+0x2dec8>
  432a24:	ldrb	w8, [x20, #16]
  432a28:	ldr	x21, [x20, #8]
  432a2c:	tbz	w8, #1, 432a14 <wcrtomb@plt+0x2ded4>
  432a30:	ldr	x0, [x20, #24]
  432a34:	bl	404700 <free@plt>
  432a38:	b	432a14 <wcrtomb@plt+0x2ded4>
  432a3c:	add	x8, x19, #0xc8
  432a40:	b	432a64 <wcrtomb@plt+0x2df24>
  432a44:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432a48:	ldr	w9, [x9, #4008]
  432a4c:	sxtw	x8, w8
  432a50:	cmp	w8, w9
  432a54:	b.ge	432ae0 <wcrtomb@plt+0x2dfa0>  // b.tcont
  432a58:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432a5c:	add	x9, x9, #0xf60
  432a60:	add	x8, x9, x8, lsl #3
  432a64:	ldr	x1, [x8]
  432a68:	b	432ae8 <wcrtomb@plt+0x2dfa8>
  432a6c:	ldr	x28, [x19, #112]
  432a70:	cbz	x28, 432b64 <wcrtomb@plt+0x2e024>
  432a74:	mov	x9, xzr
  432a78:	ldr	x10, [x28, x9, lsl #3]
  432a7c:	add	x9, x9, #0x1
  432a80:	cbnz	x10, 432a78 <wcrtomb@plt+0x2df38>
  432a84:	sub	x20, x9, #0x1
  432a88:	b	432b68 <wcrtomb@plt+0x2e028>
  432a8c:	ldr	x8, [x19, #88]
  432a90:	mov	x0, x19
  432a94:	blr	x8
  432a98:	ldr	w8, [x19, #32]
  432a9c:	tbz	w8, #4, 4329a0 <wcrtomb@plt+0x2de60>
  432aa0:	ldr	w8, [x19, #192]
  432aa4:	ldr	x20, [x19, #96]
  432aa8:	cmp	w8, #0x9
  432aac:	b.eq	432f98 <wcrtomb@plt+0x2e458>  // b.none
  432ab0:	cmp	w8, #0x1
  432ab4:	b.ne	432fa0 <wcrtomb@plt+0x2e460>  // b.any
  432ab8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432abc:	add	x1, x1, #0x751
  432ac0:	mov	w2, #0x5                   	// #5
  432ac4:	mov	x0, xzr
  432ac8:	bl	404900 <dcgettext@plt>
  432acc:	ldr	x8, [x19, #168]
  432ad0:	ldr	x2, [x19, #184]
  432ad4:	ldrb	w1, [x8, x2]
  432ad8:	blr	x20
  432adc:	b	43360c <wcrtomb@plt+0x2eacc>
  432ae0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432ae4:	add	x1, x1, #0x743
  432ae8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432aec:	add	x0, x0, #0x7a4
  432af0:	blr	x20
  432af4:	ldr	w8, [x19, #32]
  432af8:	tbz	w8, #3, 431d40 <wcrtomb@plt+0x2d200>
  432afc:	b	431d48 <wcrtomb@plt+0x2d208>
  432b00:	bl	404a10 <__errno_location@plt>
  432b04:	mov	w8, #0xc                   	// #12
  432b08:	str	w8, [x0]
  432b0c:	ldr	w8, [x19, #32]
  432b10:	mov	w9, #0x2                   	// #2
  432b14:	str	w9, [x19, #192]
  432b18:	tbnz	w8, #7, 432fc8 <wcrtomb@plt+0x2e488>
  432b1c:	tbnz	w8, #4, 432fdc <wcrtomb@plt+0x2e49c>
  432b20:	tbnz	w8, #3, 432b2c <wcrtomb@plt+0x2dfec>
  432b24:	mov	x0, x19
  432b28:	bl	42d484 <wcrtomb@plt+0x28944>
  432b2c:	mov	x20, x19
  432b30:	ldr	x24, [x20, #208]!
  432b34:	cbnz	x24, 432b4c <wcrtomb@plt+0x2e00c>
  432b38:	b	433100 <wcrtomb@plt+0x2e5c0>
  432b3c:	mov	x0, x24
  432b40:	bl	404700 <free@plt>
  432b44:	mov	x24, x21
  432b48:	cbz	x21, 433100 <wcrtomb@plt+0x2e5c0>
  432b4c:	ldrb	w8, [x24, #16]
  432b50:	ldr	x21, [x24, #8]
  432b54:	tbz	w8, #1, 432b3c <wcrtomb@plt+0x2dffc>
  432b58:	ldr	x0, [x24, #24]
  432b5c:	bl	404700 <free@plt>
  432b60:	b	432b3c <wcrtomb@plt+0x2dffc>
  432b64:	mov	x20, xzr
  432b68:	add	x8, x8, x20
  432b6c:	add	x21, x8, #0x1
  432b70:	mov	w1, #0x8                   	// #8
  432b74:	mov	x0, x21
  432b78:	bl	404410 <calloc@plt>
  432b7c:	cbz	x0, 432bcc <wcrtomb@plt+0x2e08c>
  432b80:	mov	x27, x0
  432b84:	str	x21, [sp, #8]
  432b88:	cbz	x20, 432c30 <wcrtomb@plt+0x2e0f0>
  432b8c:	ldr	x0, [x28]
  432b90:	bl	4044e0 <strdup@plt>
  432b94:	str	x0, [x27]
  432b98:	cbz	x0, 4330a0 <wcrtomb@plt+0x2e560>
  432b9c:	mov	w21, #0x1                   	// #1
  432ba0:	cmp	x20, x21
  432ba4:	b.eq	432c30 <wcrtomb@plt+0x2e0f0>  // b.none
  432ba8:	ldr	x8, [x19, #112]
  432bac:	lsl	x28, x21, #3
  432bb0:	ldr	x0, [x8, x28]
  432bb4:	bl	4044e0 <strdup@plt>
  432bb8:	add	x21, x21, #0x1
  432bbc:	str	x0, [x27, x28]
  432bc0:	cbnz	x0, 432ba0 <wcrtomb@plt+0x2e060>
  432bc4:	sub	x8, x21, #0x1
  432bc8:	b	4330a4 <wcrtomb@plt+0x2e564>
  432bcc:	bl	404a10 <__errno_location@plt>
  432bd0:	mov	w8, #0xc                   	// #12
  432bd4:	str	w8, [x0]
  432bd8:	ldr	w8, [x19, #32]
  432bdc:	mov	w9, #0x2                   	// #2
  432be0:	str	w9, [x19, #192]
  432be4:	tbnz	w8, #7, 43301c <wcrtomb@plt+0x2e4dc>
  432be8:	tbnz	w8, #4, 433030 <wcrtomb@plt+0x2e4f0>
  432bec:	tbnz	w8, #3, 432bf8 <wcrtomb@plt+0x2e0b8>
  432bf0:	mov	x0, x19
  432bf4:	bl	42d484 <wcrtomb@plt+0x28944>
  432bf8:	mov	x20, x19
  432bfc:	ldr	x24, [x20, #208]!
  432c00:	cbnz	x24, 432c18 <wcrtomb@plt+0x2e0d8>
  432c04:	b	433100 <wcrtomb@plt+0x2e5c0>
  432c08:	mov	x0, x24
  432c0c:	bl	404700 <free@plt>
  432c10:	mov	x24, x21
  432c14:	cbz	x21, 433100 <wcrtomb@plt+0x2e5c0>
  432c18:	ldrb	w8, [x24, #16]
  432c1c:	ldr	x21, [x24, #8]
  432c20:	tbz	w8, #1, 432c08 <wcrtomb@plt+0x2e0c8>
  432c24:	ldr	x0, [x24, #24]
  432c28:	bl	404700 <free@plt>
  432c2c:	b	432c08 <wcrtomb@plt+0x2e0c8>
  432c30:	ldr	x8, [sp, #8]
  432c34:	str	xzr, [x27, x20, lsl #3]
  432c38:	stp	x27, x27, [x19, #112]
  432c3c:	stp	x20, x8, [x19, #128]
  432c40:	ldrb	w8, [x19, #35]
  432c44:	tbnz	w8, #3, 432c9c <wcrtomb@plt+0x2e15c>
  432c48:	mov	x0, x26
  432c4c:	bl	403f40 <strlen@plt>
  432c50:	add	x8, x24, x0
  432c54:	add	x0, x8, #0x2
  432c58:	bl	404250 <malloc@plt>
  432c5c:	cbz	x0, 432d08 <wcrtomb@plt+0x2e1c8>
  432c60:	mov	x1, x25
  432c64:	mov	x2, x24
  432c68:	mov	x27, x0
  432c6c:	bl	403ec0 <memcpy@plt>
  432c70:	add	x0, x27, x24
  432c74:	mov	w8, #0x3d                  	// #61
  432c78:	strb	w8, [x0], #1
  432c7c:	mov	x1, x26
  432c80:	bl	404840 <strcpy@plt>
  432c84:	ldr	x9, [x19, #128]
  432c88:	ldr	x10, [x19, #112]
  432c8c:	add	x8, x9, #0x1
  432c90:	add	x9, x10, x9, lsl #3
  432c94:	str	x8, [x19, #128]
  432c98:	b	432cf0 <wcrtomb@plt+0x2e1b0>
  432c9c:	add	x0, x24, #0x1
  432ca0:	bl	404250 <malloc@plt>
  432ca4:	cbz	x0, 432d6c <wcrtomb@plt+0x2e22c>
  432ca8:	mov	x1, x25
  432cac:	mov	x2, x24
  432cb0:	mov	x28, x0
  432cb4:	bl	403ec0 <memcpy@plt>
  432cb8:	mov	x0, x26
  432cbc:	strb	wzr, [x28, x24]
  432cc0:	bl	4044e0 <strdup@plt>
  432cc4:	cbz	x0, 432dd0 <wcrtomb@plt+0x2e290>
  432cc8:	ldr	x8, [x19, #128]
  432ccc:	ldr	x9, [x19, #112]
  432cd0:	mov	x27, x0
  432cd4:	lsl	x10, x8, #3
  432cd8:	str	x28, [x9, x10]
  432cdc:	ldr	x9, [x19, #112]
  432ce0:	add	x8, x8, #0x2
  432ce4:	str	x8, [x19, #128]
  432ce8:	add	x9, x10, x9
  432cec:	add	x9, x9, #0x8
  432cf0:	str	x27, [x9]
  432cf4:	ldr	x9, [x19, #112]
  432cf8:	add	x10, x8, #0x1
  432cfc:	str	x10, [x19, #128]
  432d00:	str	xzr, [x9, x8, lsl #3]
  432d04:	b	433104 <wcrtomb@plt+0x2e5c4>
  432d08:	bl	404a10 <__errno_location@plt>
  432d0c:	mov	w8, #0xc                   	// #12
  432d10:	str	w8, [x0]
  432d14:	ldr	w8, [x19, #32]
  432d18:	mov	w9, #0x2                   	// #2
  432d1c:	str	w9, [x19, #192]
  432d20:	tbnz	w8, #7, 432e3c <wcrtomb@plt+0x2e2fc>
  432d24:	tbnz	w8, #4, 432e50 <wcrtomb@plt+0x2e310>
  432d28:	tbnz	w8, #3, 432d34 <wcrtomb@plt+0x2e1f4>
  432d2c:	mov	x0, x19
  432d30:	bl	42d484 <wcrtomb@plt+0x28944>
  432d34:	mov	x20, x19
  432d38:	ldr	x24, [x20, #208]!
  432d3c:	cbnz	x24, 432d54 <wcrtomb@plt+0x2e214>
  432d40:	b	433100 <wcrtomb@plt+0x2e5c0>
  432d44:	mov	x0, x24
  432d48:	bl	404700 <free@plt>
  432d4c:	mov	x24, x21
  432d50:	cbz	x21, 433100 <wcrtomb@plt+0x2e5c0>
  432d54:	ldrb	w8, [x24, #16]
  432d58:	ldr	x21, [x24, #8]
  432d5c:	tbz	w8, #1, 432d44 <wcrtomb@plt+0x2e204>
  432d60:	ldr	x0, [x24, #24]
  432d64:	bl	404700 <free@plt>
  432d68:	b	432d44 <wcrtomb@plt+0x2e204>
  432d6c:	bl	404a10 <__errno_location@plt>
  432d70:	mov	w8, #0xc                   	// #12
  432d74:	str	w8, [x0]
  432d78:	ldr	w8, [x19, #32]
  432d7c:	mov	w9, #0x2                   	// #2
  432d80:	str	w9, [x19, #192]
  432d84:	tbnz	w8, #7, 432e90 <wcrtomb@plt+0x2e350>
  432d88:	tbnz	w8, #4, 432ea4 <wcrtomb@plt+0x2e364>
  432d8c:	tbnz	w8, #3, 432d98 <wcrtomb@plt+0x2e258>
  432d90:	mov	x0, x19
  432d94:	bl	42d484 <wcrtomb@plt+0x28944>
  432d98:	mov	x20, x19
  432d9c:	ldr	x24, [x20, #208]!
  432da0:	cbnz	x24, 432db8 <wcrtomb@plt+0x2e278>
  432da4:	b	433100 <wcrtomb@plt+0x2e5c0>
  432da8:	mov	x0, x24
  432dac:	bl	404700 <free@plt>
  432db0:	mov	x24, x21
  432db4:	cbz	x21, 433100 <wcrtomb@plt+0x2e5c0>
  432db8:	ldrb	w8, [x24, #16]
  432dbc:	ldr	x21, [x24, #8]
  432dc0:	tbz	w8, #1, 432da8 <wcrtomb@plt+0x2e268>
  432dc4:	ldr	x0, [x24, #24]
  432dc8:	bl	404700 <free@plt>
  432dcc:	b	432da8 <wcrtomb@plt+0x2e268>
  432dd0:	mov	x0, x28
  432dd4:	bl	404700 <free@plt>
  432dd8:	bl	404a10 <__errno_location@plt>
  432ddc:	mov	w8, #0xc                   	// #12
  432de0:	str	w8, [x0]
  432de4:	ldr	w8, [x19, #32]
  432de8:	mov	w9, #0x2                   	// #2
  432dec:	str	w9, [x19, #192]
  432df0:	tbnz	w8, #7, 432ee4 <wcrtomb@plt+0x2e3a4>
  432df4:	tbnz	w8, #4, 432ef8 <wcrtomb@plt+0x2e3b8>
  432df8:	tbnz	w8, #3, 432e04 <wcrtomb@plt+0x2e2c4>
  432dfc:	mov	x0, x19
  432e00:	bl	42d484 <wcrtomb@plt+0x28944>
  432e04:	mov	x20, x19
  432e08:	ldr	x24, [x20, #208]!
  432e0c:	cbnz	x24, 432e24 <wcrtomb@plt+0x2e2e4>
  432e10:	b	433100 <wcrtomb@plt+0x2e5c0>
  432e14:	mov	x0, x24
  432e18:	bl	404700 <free@plt>
  432e1c:	mov	x24, x21
  432e20:	cbz	x21, 433100 <wcrtomb@plt+0x2e5c0>
  432e24:	ldrb	w8, [x24, #16]
  432e28:	ldr	x21, [x24, #8]
  432e2c:	tbz	w8, #1, 432e14 <wcrtomb@plt+0x2e2d4>
  432e30:	ldr	x0, [x24, #24]
  432e34:	bl	404700 <free@plt>
  432e38:	b	432e14 <wcrtomb@plt+0x2e2d4>
  432e3c:	ldr	x8, [x19, #88]
  432e40:	mov	x0, x19
  432e44:	blr	x8
  432e48:	ldr	w8, [x19, #32]
  432e4c:	tbz	w8, #4, 432d28 <wcrtomb@plt+0x2e1e8>
  432e50:	ldr	w8, [x19, #192]
  432e54:	ldr	x20, [x19, #96]
  432e58:	cmp	w8, #0x9
  432e5c:	b.eq	432f38 <wcrtomb@plt+0x2e3f8>  // b.none
  432e60:	cmp	w8, #0x1
  432e64:	b.ne	432f40 <wcrtomb@plt+0x2e400>  // b.any
  432e68:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432e6c:	add	x1, x1, #0x751
  432e70:	mov	w2, #0x5                   	// #5
  432e74:	mov	x0, xzr
  432e78:	bl	404900 <dcgettext@plt>
  432e7c:	ldr	x8, [x19, #168]
  432e80:	ldr	x2, [x19, #184]
  432e84:	ldrb	w1, [x8, x2]
  432e88:	blr	x20
  432e8c:	b	4335cc <wcrtomb@plt+0x2ea8c>
  432e90:	ldr	x8, [x19, #88]
  432e94:	mov	x0, x19
  432e98:	blr	x8
  432e9c:	ldr	w8, [x19, #32]
  432ea0:	tbz	w8, #4, 432d8c <wcrtomb@plt+0x2e24c>
  432ea4:	ldr	w8, [x19, #192]
  432ea8:	ldr	x20, [x19, #96]
  432eac:	cmp	w8, #0x9
  432eb0:	b.eq	432f68 <wcrtomb@plt+0x2e428>  // b.none
  432eb4:	cmp	w8, #0x1
  432eb8:	b.ne	432f70 <wcrtomb@plt+0x2e430>  // b.any
  432ebc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432ec0:	add	x1, x1, #0x751
  432ec4:	mov	w2, #0x5                   	// #5
  432ec8:	mov	x0, xzr
  432ecc:	bl	404900 <dcgettext@plt>
  432ed0:	ldr	x8, [x19, #168]
  432ed4:	ldr	x2, [x19, #184]
  432ed8:	ldrb	w1, [x8, x2]
  432edc:	blr	x20
  432ee0:	b	4335ec <wcrtomb@plt+0x2eaac>
  432ee4:	ldr	x8, [x19, #88]
  432ee8:	mov	x0, x19
  432eec:	blr	x8
  432ef0:	ldr	w8, [x19, #32]
  432ef4:	tbz	w8, #4, 432df8 <wcrtomb@plt+0x2e2b8>
  432ef8:	ldr	w8, [x19, #192]
  432efc:	ldr	x20, [x19, #96]
  432f00:	cmp	w8, #0x9
  432f04:	b.eq	433070 <wcrtomb@plt+0x2e530>  // b.none
  432f08:	cmp	w8, #0x1
  432f0c:	b.ne	433078 <wcrtomb@plt+0x2e538>  // b.any
  432f10:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432f14:	add	x1, x1, #0x751
  432f18:	mov	w2, #0x5                   	// #5
  432f1c:	mov	x0, xzr
  432f20:	bl	404900 <dcgettext@plt>
  432f24:	ldr	x8, [x19, #168]
  432f28:	ldr	x2, [x19, #184]
  432f2c:	ldrb	w1, [x8, x2]
  432f30:	blr	x20
  432f34:	b	43362c <wcrtomb@plt+0x2eaec>
  432f38:	add	x8, x19, #0xc8
  432f3c:	b	432f60 <wcrtomb@plt+0x2e420>
  432f40:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432f44:	ldr	w9, [x9, #4008]
  432f48:	sxtw	x8, w8
  432f4c:	cmp	w8, w9
  432f50:	b.ge	4335b8 <wcrtomb@plt+0x2ea78>  // b.tcont
  432f54:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432f58:	add	x9, x9, #0xf60
  432f5c:	add	x8, x9, x8, lsl #3
  432f60:	ldr	x1, [x8]
  432f64:	b	4335c0 <wcrtomb@plt+0x2ea80>
  432f68:	add	x8, x19, #0xc8
  432f6c:	b	432f90 <wcrtomb@plt+0x2e450>
  432f70:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432f74:	ldr	w9, [x9, #4008]
  432f78:	sxtw	x8, w8
  432f7c:	cmp	w8, w9
  432f80:	b.ge	4335d8 <wcrtomb@plt+0x2ea98>  // b.tcont
  432f84:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432f88:	add	x9, x9, #0xf60
  432f8c:	add	x8, x9, x8, lsl #3
  432f90:	ldr	x1, [x8]
  432f94:	b	4335e0 <wcrtomb@plt+0x2eaa0>
  432f98:	add	x8, x19, #0xc8
  432f9c:	b	432fc0 <wcrtomb@plt+0x2e480>
  432fa0:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432fa4:	ldr	w9, [x9, #4008]
  432fa8:	sxtw	x8, w8
  432fac:	cmp	w8, w9
  432fb0:	b.ge	4335f8 <wcrtomb@plt+0x2eab8>  // b.tcont
  432fb4:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  432fb8:	add	x9, x9, #0xf60
  432fbc:	add	x8, x9, x8, lsl #3
  432fc0:	ldr	x1, [x8]
  432fc4:	b	433600 <wcrtomb@plt+0x2eac0>
  432fc8:	ldr	x8, [x19, #88]
  432fcc:	mov	x0, x19
  432fd0:	blr	x8
  432fd4:	ldr	w8, [x19, #32]
  432fd8:	tbz	w8, #4, 432b20 <wcrtomb@plt+0x2dfe0>
  432fdc:	ldr	w8, [x19, #192]
  432fe0:	ldr	x20, [x19, #96]
  432fe4:	cmp	w8, #0x9
  432fe8:	b.eq	433638 <wcrtomb@plt+0x2eaf8>  // b.none
  432fec:	cmp	w8, #0x1
  432ff0:	b.ne	433640 <wcrtomb@plt+0x2eb00>  // b.any
  432ff4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  432ff8:	add	x1, x1, #0x751
  432ffc:	mov	w2, #0x5                   	// #5
  433000:	mov	x0, xzr
  433004:	bl	404900 <dcgettext@plt>
  433008:	ldr	x8, [x19, #168]
  43300c:	ldr	x2, [x19, #184]
  433010:	ldrb	w1, [x8, x2]
  433014:	blr	x20
  433018:	b	4336dc <wcrtomb@plt+0x2eb9c>
  43301c:	ldr	x8, [x19, #88]
  433020:	mov	x0, x19
  433024:	blr	x8
  433028:	ldr	w8, [x19, #32]
  43302c:	tbz	w8, #4, 432bec <wcrtomb@plt+0x2e0ac>
  433030:	ldr	w8, [x19, #192]
  433034:	ldr	x20, [x19, #96]
  433038:	cmp	w8, #0x9
  43303c:	b.eq	433668 <wcrtomb@plt+0x2eb28>  // b.none
  433040:	cmp	w8, #0x1
  433044:	b.ne	433670 <wcrtomb@plt+0x2eb30>  // b.any
  433048:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43304c:	add	x1, x1, #0x751
  433050:	mov	w2, #0x5                   	// #5
  433054:	mov	x0, xzr
  433058:	bl	404900 <dcgettext@plt>
  43305c:	ldr	x8, [x19, #168]
  433060:	ldr	x2, [x19, #184]
  433064:	ldrb	w1, [x8, x2]
  433068:	blr	x20
  43306c:	b	4336fc <wcrtomb@plt+0x2ebbc>
  433070:	add	x8, x19, #0xc8
  433074:	b	433098 <wcrtomb@plt+0x2e558>
  433078:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  43307c:	ldr	w9, [x9, #4008]
  433080:	sxtw	x8, w8
  433084:	cmp	w8, w9
  433088:	b.ge	433618 <wcrtomb@plt+0x2ead8>  // b.tcont
  43308c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  433090:	add	x9, x9, #0xf60
  433094:	add	x8, x9, x8, lsl #3
  433098:	ldr	x1, [x8]
  43309c:	b	433620 <wcrtomb@plt+0x2eae0>
  4330a0:	mov	x8, xzr
  4330a4:	sub	x20, x8, #0x1
  4330a8:	ldr	x0, [x27, x20, lsl #3]
  4330ac:	bl	404700 <free@plt>
  4330b0:	add	x8, x20, #0x1
  4330b4:	sub	x20, x20, #0x1
  4330b8:	cmp	x8, #0x1
  4330bc:	b.hi	4330a8 <wcrtomb@plt+0x2e568>  // b.pmore
  4330c0:	mov	x0, x27
  4330c4:	bl	404700 <free@plt>
  4330c8:	bl	404a10 <__errno_location@plt>
  4330cc:	mov	w8, #0xc                   	// #12
  4330d0:	str	w8, [x0]
  4330d4:	ldr	w8, [x19, #32]
  4330d8:	mov	w9, #0x2                   	// #2
  4330dc:	str	w9, [x19, #192]
  4330e0:	tbnz	w8, #7, 433564 <wcrtomb@plt+0x2ea24>
  4330e4:	tbnz	w8, #4, 433578 <wcrtomb@plt+0x2ea38>
  4330e8:	tbnz	w8, #3, 4330f4 <wcrtomb@plt+0x2e5b4>
  4330ec:	mov	x0, x19
  4330f0:	bl	42d484 <wcrtomb@plt+0x28944>
  4330f4:	mov	x20, x19
  4330f8:	ldr	x24, [x20, #208]!
  4330fc:	cbnz	x24, 4332e4 <wcrtomb@plt+0x2e7a4>
  433100:	stp	xzr, xzr, [x20]
  433104:	ldur	x24, [x29, #-16]
  433108:	cbz	x24, 432274 <wcrtomb@plt+0x2d734>
  43310c:	ldr	w25, [sp, #28]
  433110:	tbnz	w25, #2, 433148 <wcrtomb@plt+0x2e608>
  433114:	ldrb	w8, [x24]
  433118:	ldr	x23, [sp, #16]
  43311c:	cbz	w8, 4331a4 <wcrtomb@plt+0x2e664>
  433120:	mov	x0, x24
  433124:	bl	403f40 <strlen@plt>
  433128:	ldrb	w8, [x19, #33]
  43312c:	mov	x3, x0
  433130:	tbnz	w8, #4, 433260 <wcrtomb@plt+0x2e720>
  433134:	ldr	w8, [x19, #36]
  433138:	mov	w4, #0x644                 	// #1604
  43313c:	lsr	w8, w8, #7
  433140:	bfi	w4, w8, #12, #1
  433144:	b	433264 <wcrtomb@plt+0x2e724>
  433148:	mov	w0, #0x1                   	// #1
  43314c:	mov	w1, #0x28                  	// #40
  433150:	bl	404410 <calloc@plt>
  433154:	ldr	x23, [sp, #16]
  433158:	cbz	x0, 4331e4 <wcrtomb@plt+0x2e6a4>
  43315c:	ldr	x9, [x19, #208]
  433160:	mov	x8, x0
  433164:	cbz	x9, 433404 <wcrtomb@plt+0x2e8c4>
  433168:	ldr	x9, [x23]
  43316c:	mov	x11, x8
  433170:	mov	x10, x11
  433174:	cbz	x11, 433180 <wcrtomb@plt+0x2e640>
  433178:	ldr	x11, [x10, #8]
  43317c:	cbnz	x11, 433170 <wcrtomb@plt+0x2e630>
  433180:	ldr	x11, [x9, #8]
  433184:	add	x12, x19, #0xd8
  433188:	cmp	x11, #0x0
  43318c:	csel	x12, x12, x11, eq  // eq = none
  433190:	str	x10, [x12]
  433194:	str	x11, [x10, #8]
  433198:	str	x9, [x8]
  43319c:	str	x8, [x9, #8]
  4331a0:	b	43340c <wcrtomb@plt+0x2e8cc>
  4331a4:	mov	x0, x24
  4331a8:	bl	404700 <free@plt>
  4331ac:	mov	w0, #0x1                   	// #1
  4331b0:	mov	w1, #0x28                  	// #40
  4331b4:	bl	404410 <calloc@plt>
  4331b8:	cbz	x0, 4333a0 <wcrtomb@plt+0x2e860>
  4331bc:	ldr	x9, [x19, #208]
  4331c0:	mov	x8, x0
  4331c4:	cbz	x9, 432384 <wcrtomb@plt+0x2d844>
  4331c8:	ldr	x9, [x23]
  4331cc:	mov	x11, x8
  4331d0:	mov	x10, x11
  4331d4:	cbz	x11, 4322b4 <wcrtomb@plt+0x2d774>
  4331d8:	ldr	x11, [x10, #8]
  4331dc:	cbnz	x11, 4331d0 <wcrtomb@plt+0x2e690>
  4331e0:	b	4322b4 <wcrtomb@plt+0x2d774>
  4331e4:	bl	404a10 <__errno_location@plt>
  4331e8:	mov	w8, #0xc                   	// #12
  4331ec:	str	w8, [x0]
  4331f0:	ldr	w8, [x19, #32]
  4331f4:	mov	w9, #0x2                   	// #2
  4331f8:	str	w9, [x19, #192]
  4331fc:	tbnz	w8, #7, 43334c <wcrtomb@plt+0x2e80c>
  433200:	tbnz	w8, #4, 433360 <wcrtomb@plt+0x2e820>
  433204:	tbnz	w8, #3, 433210 <wcrtomb@plt+0x2e6d0>
  433208:	mov	x0, x19
  43320c:	bl	42d484 <wcrtomb@plt+0x28944>
  433210:	mov	x20, x19
  433214:	ldr	x22, [x20, #208]!
  433218:	cbnz	x22, 433248 <wcrtomb@plt+0x2e708>
  43321c:	stp	xzr, xzr, [x20]
  433220:	ldr	w8, [x19, #192]
  433224:	cbz	w8, 433404 <wcrtomb@plt+0x2e8c4>
  433228:	ldur	x0, [x29, #-16]
  43322c:	bl	404700 <free@plt>
  433230:	mov	w0, #0x1                   	// #1
  433234:	b	433450 <wcrtomb@plt+0x2e910>
  433238:	mov	x0, x22
  43323c:	bl	404700 <free@plt>
  433240:	mov	x22, x21
  433244:	cbz	x21, 43321c <wcrtomb@plt+0x2e6dc>
  433248:	ldrb	w8, [x22, #16]
  43324c:	ldr	x21, [x22, #8]
  433250:	tbz	w8, #1, 433238 <wcrtomb@plt+0x2e6f8>
  433254:	ldr	x0, [x22, #24]
  433258:	bl	404700 <free@plt>
  43325c:	b	433238 <wcrtomb@plt+0x2e6f8>
  433260:	mov	w4, #0x1644                	// #5700
  433264:	add	x1, sp, #0x20
  433268:	mov	x0, x19
  43326c:	mov	x2, x24
  433270:	mov	w5, wzr
  433274:	add	x20, sp, #0x20
  433278:	bl	4316f4 <wcrtomb@plt+0x2cbb4>
  43327c:	ldur	x8, [x29, #-16]
  433280:	mov	w21, w0
  433284:	mov	x0, x8
  433288:	bl	404700 <free@plt>
  43328c:	cbz	w21, 4332fc <wcrtomb@plt+0x2e7bc>
  433290:	ldr	w8, [x19, #192]
  433294:	cmp	w8, #0x9
  433298:	b.ne	4332a4 <wcrtomb@plt+0x2e764>  // b.any
  43329c:	ldr	x0, [x19, #200]
  4332a0:	bl	404700 <free@plt>
  4332a4:	ldr	w8, [sp, #224]
  4332a8:	cmp	w8, #0x9
  4332ac:	str	w8, [x19, #192]
  4332b0:	b.ne	4332c4 <wcrtomb@plt+0x2e784>  // b.any
  4332b4:	ldr	x8, [sp, #232]
  4332b8:	str	x8, [x19, #200]
  4332bc:	str	wzr, [sp, #224]
  4332c0:	str	xzr, [sp, #232]
  4332c4:	add	x0, sp, #0x20
  4332c8:	bl	42d484 <wcrtomb@plt+0x28944>
  4332cc:	mov	w0, #0x1                   	// #1
  4332d0:	b	433450 <wcrtomb@plt+0x2e910>
  4332d4:	mov	x0, x24
  4332d8:	bl	404700 <free@plt>
  4332dc:	mov	x24, x21
  4332e0:	cbz	x21, 433100 <wcrtomb@plt+0x2e5c0>
  4332e4:	ldrb	w8, [x24, #16]
  4332e8:	ldr	x21, [x24, #8]
  4332ec:	tbz	w8, #1, 4332d4 <wcrtomb@plt+0x2e794>
  4332f0:	ldr	x0, [x24, #24]
  4332f4:	bl	404700 <free@plt>
  4332f8:	b	4332d4 <wcrtomb@plt+0x2e794>
  4332fc:	mov	x11, x19
  433300:	ldr	x9, [sp, #240]
  433304:	ldr	x10, [x23]
  433308:	ldr	x12, [x11, #208]!
  43330c:	add	x8, x20, #0xd0
  433310:	cbz	x12, 43342c <wcrtomb@plt+0x2e8ec>
  433314:	mov	x11, x9
  433318:	mov	x12, x11
  43331c:	cbz	x11, 433328 <wcrtomb@plt+0x2e7e8>
  433320:	ldr	x11, [x12, #8]
  433324:	cbnz	x11, 433318 <wcrtomb@plt+0x2e7d8>
  433328:	mov	x11, x10
  43332c:	ldr	x13, [x11, #8]!
  433330:	add	x14, x19, #0xd8
  433334:	cmp	x13, #0x0
  433338:	csel	x14, x14, x13, eq  // eq = none
  43333c:	str	x12, [x14]
  433340:	str	x13, [x12, #8]
  433344:	str	x10, [x9]
  433348:	b	433434 <wcrtomb@plt+0x2e8f4>
  43334c:	ldr	x8, [x19, #88]
  433350:	mov	x0, x19
  433354:	blr	x8
  433358:	ldr	w8, [x19, #32]
  43335c:	tbz	w8, #4, 433204 <wcrtomb@plt+0x2e6c4>
  433360:	ldr	w8, [x19, #192]
  433364:	ldr	x20, [x19, #96]
  433368:	cmp	w8, #0x9
  43336c:	b.eq	4334c4 <wcrtomb@plt+0x2e984>  // b.none
  433370:	cmp	w8, #0x1
  433374:	b.ne	4334cc <wcrtomb@plt+0x2e98c>  // b.any
  433378:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43337c:	add	x1, x1, #0x751
  433380:	mov	w2, #0x5                   	// #5
  433384:	mov	x0, xzr
  433388:	bl	404900 <dcgettext@plt>
  43338c:	ldr	x8, [x19, #168]
  433390:	ldr	x2, [x19, #184]
  433394:	ldrb	w1, [x8, x2]
  433398:	blr	x20
  43339c:	b	433508 <wcrtomb@plt+0x2e9c8>
  4333a0:	bl	404a10 <__errno_location@plt>
  4333a4:	mov	w8, #0xc                   	// #12
  4333a8:	str	w8, [x0]
  4333ac:	ldr	w8, [x19, #32]
  4333b0:	mov	w9, #0x2                   	// #2
  4333b4:	str	w9, [x19, #192]
  4333b8:	tbnz	w8, #7, 433470 <wcrtomb@plt+0x2e930>
  4333bc:	tbnz	w8, #4, 433484 <wcrtomb@plt+0x2e944>
  4333c0:	tbnz	w8, #3, 4333cc <wcrtomb@plt+0x2e88c>
  4333c4:	mov	x0, x19
  4333c8:	bl	42d484 <wcrtomb@plt+0x28944>
  4333cc:	mov	x20, x19
  4333d0:	ldr	x21, [x20, #208]!
  4333d4:	cbnz	x21, 4333ec <wcrtomb@plt+0x2e8ac>
  4333d8:	b	432378 <wcrtomb@plt+0x2d838>
  4333dc:	mov	x0, x21
  4333e0:	bl	404700 <free@plt>
  4333e4:	mov	x21, x22
  4333e8:	cbz	x22, 432378 <wcrtomb@plt+0x2d838>
  4333ec:	ldrb	w8, [x21, #16]
  4333f0:	ldr	x22, [x21, #8]
  4333f4:	tbz	w8, #1, 4333dc <wcrtomb@plt+0x2e89c>
  4333f8:	ldr	x0, [x21, #24]
  4333fc:	bl	404700 <free@plt>
  433400:	b	4333dc <wcrtomb@plt+0x2e89c>
  433404:	stp	xzr, xzr, [x8]
  433408:	stp	x8, x8, [x19, #208]
  43340c:	mov	w9, #0xa                   	// #10
  433410:	orr	w9, w25, w9
  433414:	str	x8, [x23]
  433418:	str	w9, [x8, #16]
  43341c:	ldur	x9, [x29, #-16]
  433420:	mov	w0, wzr
  433424:	str	x9, [x8, #24]
  433428:	b	433450 <wcrtomb@plt+0x2e910>
  43342c:	stp	xzr, xzr, [x9]
  433430:	str	x9, [x19, #216]
  433434:	str	x9, [x11]
  433438:	ldr	x9, [sp, #248]
  43343c:	add	x0, sp, #0x20
  433440:	str	x9, [x23]
  433444:	stp	xzr, xzr, [x8]
  433448:	bl	42d484 <wcrtomb@plt+0x28944>
  43344c:	mov	w0, wzr
  433450:	add	sp, sp, #0x200
  433454:	ldp	x20, x19, [sp, #80]
  433458:	ldp	x22, x21, [sp, #64]
  43345c:	ldp	x24, x23, [sp, #48]
  433460:	ldp	x26, x25, [sp, #32]
  433464:	ldp	x28, x27, [sp, #16]
  433468:	ldp	x29, x30, [sp], #96
  43346c:	ret
  433470:	ldr	x8, [x19, #88]
  433474:	mov	x0, x19
  433478:	blr	x8
  43347c:	ldr	w8, [x19, #32]
  433480:	tbz	w8, #4, 4333c0 <wcrtomb@plt+0x2e880>
  433484:	ldr	w8, [x19, #192]
  433488:	ldr	x20, [x19, #96]
  43348c:	cmp	w8, #0x9
  433490:	b.eq	433514 <wcrtomb@plt+0x2e9d4>  // b.none
  433494:	cmp	w8, #0x1
  433498:	b.ne	43351c <wcrtomb@plt+0x2e9dc>  // b.any
  43349c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4334a0:	add	x1, x1, #0x751
  4334a4:	mov	w2, #0x5                   	// #5
  4334a8:	mov	x0, xzr
  4334ac:	bl	404900 <dcgettext@plt>
  4334b0:	ldr	x8, [x19, #168]
  4334b4:	ldr	x2, [x19, #184]
  4334b8:	ldrb	w1, [x8, x2]
  4334bc:	blr	x20
  4334c0:	b	433558 <wcrtomb@plt+0x2ea18>
  4334c4:	add	x8, x19, #0xc8
  4334c8:	b	4334ec <wcrtomb@plt+0x2e9ac>
  4334cc:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  4334d0:	ldr	w9, [x9, #4008]
  4334d4:	sxtw	x8, w8
  4334d8:	cmp	w8, w9
  4334dc:	b.ge	4334f4 <wcrtomb@plt+0x2e9b4>  // b.tcont
  4334e0:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  4334e4:	add	x9, x9, #0xf60
  4334e8:	add	x8, x9, x8, lsl #3
  4334ec:	ldr	x1, [x8]
  4334f0:	b	4334fc <wcrtomb@plt+0x2e9bc>
  4334f4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4334f8:	add	x1, x1, #0x743
  4334fc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  433500:	add	x0, x0, #0x7a4
  433504:	blr	x20
  433508:	ldr	w8, [x19, #32]
  43350c:	tbz	w8, #3, 433208 <wcrtomb@plt+0x2e6c8>
  433510:	b	433210 <wcrtomb@plt+0x2e6d0>
  433514:	add	x8, x19, #0xc8
  433518:	b	43353c <wcrtomb@plt+0x2e9fc>
  43351c:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  433520:	ldr	w9, [x9, #4008]
  433524:	sxtw	x8, w8
  433528:	cmp	w8, w9
  43352c:	b.ge	433544 <wcrtomb@plt+0x2ea04>  // b.tcont
  433530:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  433534:	add	x9, x9, #0xf60
  433538:	add	x8, x9, x8, lsl #3
  43353c:	ldr	x1, [x8]
  433540:	b	43354c <wcrtomb@plt+0x2ea0c>
  433544:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  433548:	add	x1, x1, #0x743
  43354c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  433550:	add	x0, x0, #0x7a4
  433554:	blr	x20
  433558:	ldr	w8, [x19, #32]
  43355c:	tbz	w8, #3, 4333c4 <wcrtomb@plt+0x2e884>
  433560:	b	4333cc <wcrtomb@plt+0x2e88c>
  433564:	ldr	x8, [x19, #88]
  433568:	mov	x0, x19
  43356c:	blr	x8
  433570:	ldr	w8, [x19, #32]
  433574:	tbz	w8, #4, 4330e8 <wcrtomb@plt+0x2e5a8>
  433578:	ldr	w8, [x19, #192]
  43357c:	ldr	x20, [x19, #96]
  433580:	cmp	w8, #0x9
  433584:	b.eq	433698 <wcrtomb@plt+0x2eb58>  // b.none
  433588:	cmp	w8, #0x1
  43358c:	b.ne	4336a0 <wcrtomb@plt+0x2eb60>  // b.any
  433590:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  433594:	add	x1, x1, #0x751
  433598:	mov	w2, #0x5                   	// #5
  43359c:	mov	x0, xzr
  4335a0:	bl	404900 <dcgettext@plt>
  4335a4:	ldr	x8, [x19, #168]
  4335a8:	ldr	x2, [x19, #184]
  4335ac:	ldrb	w1, [x8, x2]
  4335b0:	blr	x20
  4335b4:	b	43371c <wcrtomb@plt+0x2ebdc>
  4335b8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4335bc:	add	x1, x1, #0x743
  4335c0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4335c4:	add	x0, x0, #0x7a4
  4335c8:	blr	x20
  4335cc:	ldr	w8, [x19, #32]
  4335d0:	tbz	w8, #3, 432d2c <wcrtomb@plt+0x2e1ec>
  4335d4:	b	432d34 <wcrtomb@plt+0x2e1f4>
  4335d8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4335dc:	add	x1, x1, #0x743
  4335e0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4335e4:	add	x0, x0, #0x7a4
  4335e8:	blr	x20
  4335ec:	ldr	w8, [x19, #32]
  4335f0:	tbz	w8, #3, 432d90 <wcrtomb@plt+0x2e250>
  4335f4:	b	432d98 <wcrtomb@plt+0x2e258>
  4335f8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4335fc:	add	x1, x1, #0x743
  433600:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  433604:	add	x0, x0, #0x7a4
  433608:	blr	x20
  43360c:	ldr	w8, [x19, #32]
  433610:	tbz	w8, #3, 4329a4 <wcrtomb@plt+0x2de64>
  433614:	b	4329ac <wcrtomb@plt+0x2de6c>
  433618:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43361c:	add	x1, x1, #0x743
  433620:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  433624:	add	x0, x0, #0x7a4
  433628:	blr	x20
  43362c:	ldr	w8, [x19, #32]
  433630:	tbz	w8, #3, 432dfc <wcrtomb@plt+0x2e2bc>
  433634:	b	432e04 <wcrtomb@plt+0x2e2c4>
  433638:	add	x8, x19, #0xc8
  43363c:	b	433660 <wcrtomb@plt+0x2eb20>
  433640:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  433644:	ldr	w9, [x9, #4008]
  433648:	sxtw	x8, w8
  43364c:	cmp	w8, w9
  433650:	b.ge	4336c8 <wcrtomb@plt+0x2eb88>  // b.tcont
  433654:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  433658:	add	x9, x9, #0xf60
  43365c:	add	x8, x9, x8, lsl #3
  433660:	ldr	x1, [x8]
  433664:	b	4336d0 <wcrtomb@plt+0x2eb90>
  433668:	add	x8, x19, #0xc8
  43366c:	b	433690 <wcrtomb@plt+0x2eb50>
  433670:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  433674:	ldr	w9, [x9, #4008]
  433678:	sxtw	x8, w8
  43367c:	cmp	w8, w9
  433680:	b.ge	4336e8 <wcrtomb@plt+0x2eba8>  // b.tcont
  433684:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  433688:	add	x9, x9, #0xf60
  43368c:	add	x8, x9, x8, lsl #3
  433690:	ldr	x1, [x8]
  433694:	b	4336f0 <wcrtomb@plt+0x2ebb0>
  433698:	add	x8, x19, #0xc8
  43369c:	b	4336c0 <wcrtomb@plt+0x2eb80>
  4336a0:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  4336a4:	ldr	w9, [x9, #4008]
  4336a8:	sxtw	x8, w8
  4336ac:	cmp	w8, w9
  4336b0:	b.ge	433708 <wcrtomb@plt+0x2ebc8>  // b.tcont
  4336b4:	adrp	x9, 479000 <_obstack_memory_used@@Base+0x324b0>
  4336b8:	add	x9, x9, #0xf60
  4336bc:	add	x8, x9, x8, lsl #3
  4336c0:	ldr	x1, [x8]
  4336c4:	b	433710 <wcrtomb@plt+0x2ebd0>
  4336c8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4336cc:	add	x1, x1, #0x743
  4336d0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4336d4:	add	x0, x0, #0x7a4
  4336d8:	blr	x20
  4336dc:	ldr	w8, [x19, #32]
  4336e0:	tbz	w8, #3, 432b24 <wcrtomb@plt+0x2dfe4>
  4336e4:	b	432b2c <wcrtomb@plt+0x2dfec>
  4336e8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4336ec:	add	x1, x1, #0x743
  4336f0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4336f4:	add	x0, x0, #0x7a4
  4336f8:	blr	x20
  4336fc:	ldr	w8, [x19, #32]
  433700:	tbz	w8, #3, 432bf0 <wcrtomb@plt+0x2e0b0>
  433704:	b	432bf8 <wcrtomb@plt+0x2e0b8>
  433708:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43370c:	add	x1, x1, #0x743
  433710:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  433714:	add	x0, x0, #0x7a4
  433718:	blr	x20
  43371c:	ldr	w8, [x19, #32]
  433720:	tbz	w8, #3, 4330ec <wcrtomb@plt+0x2e5ac>
  433724:	b	4330f4 <wcrtomb@plt+0x2e5b4>
  433728:	stp	x29, x30, [sp, #-96]!
  43372c:	stp	x28, x27, [sp, #16]
  433730:	stp	x26, x25, [sp, #32]
  433734:	stp	x24, x23, [sp, #48]
  433738:	stp	x22, x21, [sp, #64]
  43373c:	stp	x20, x19, [sp, #80]
  433740:	mov	x29, sp
  433744:	sub	sp, sp, #0xfd0
  433748:	mov	w19, w5
  43374c:	mov	x20, x4
  433750:	mov	x21, x3
  433754:	mov	x22, x2
  433758:	cmn	w0, #0x64
  43375c:	mov	x24, x1
  433760:	b.eq	433770 <wcrtomb@plt+0x2ec30>  // b.none
  433764:	ldrb	w8, [x24]
  433768:	cmp	w8, #0x2f
  43376c:	b.ne	4337a4 <wcrtomb@plt+0x2ec64>  // b.any
  433770:	mov	x0, x24
  433774:	mov	x1, x22
  433778:	mov	x2, x21
  43377c:	mov	x3, x20
  433780:	mov	w4, w19
  433784:	add	sp, sp, #0xfd0
  433788:	ldp	x20, x19, [sp, #80]
  43378c:	ldp	x22, x21, [sp, #64]
  433790:	ldp	x24, x23, [sp, #48]
  433794:	ldp	x26, x25, [sp, #32]
  433798:	ldp	x28, x27, [sp, #16]
  43379c:	ldp	x29, x30, [sp], #96
  4337a0:	b	404330 <setxattr@plt>
  4337a4:	mov	w25, w0
  4337a8:	add	x0, sp, #0x8
  4337ac:	mov	w1, w25
  4337b0:	mov	x2, x24
  4337b4:	bl	446bc4 <_obstack_memory_used@@Base+0x74>
  4337b8:	cbz	x0, 433830 <wcrtomb@plt+0x2ecf0>
  4337bc:	mov	x1, x22
  4337c0:	mov	x2, x21
  4337c4:	mov	x3, x20
  4337c8:	mov	w4, w19
  4337cc:	mov	x27, x0
  4337d0:	bl	404330 <setxattr@plt>
  4337d4:	add	x28, sp, #0x8
  4337d8:	mov	w23, w0
  4337dc:	bl	404a10 <__errno_location@plt>
  4337e0:	ldr	w10, [x0]
  4337e4:	mov	x26, x0
  4337e8:	cmp	x27, x28
  4337ec:	b.eq	433800 <wcrtomb@plt+0x2ecc0>  // b.none
  4337f0:	mov	x0, x27
  4337f4:	mov	w27, w10
  4337f8:	bl	404700 <free@plt>
  4337fc:	mov	w10, w27
  433800:	cmn	w23, #0x1
  433804:	b.ne	4338f8 <wcrtomb@plt+0x2edb8>  // b.any
  433808:	cmp	w10, #0x26
  43380c:	b.hi	4338c0 <wcrtomb@plt+0x2ed80>  // b.pmore
  433810:	mov	w8, w10
  433814:	mov	w9, #0x1                   	// #1
  433818:	lsl	x8, x9, x8
  43381c:	mov	x9, #0x2006                	// #8198
  433820:	movk	x9, #0x10, lsl #16
  433824:	movk	x9, #0x40, lsl #32
  433828:	tst	x8, x9
  43382c:	b.eq	4338c0 <wcrtomb@plt+0x2ed80>  // b.none
  433830:	add	x0, sp, #0x8
  433834:	bl	444e80 <argp_parse@@Base+0xd5d4>
  433838:	cbnz	w0, 43391c <wcrtomb@plt+0x2eddc>
  43383c:	tbnz	w25, #31, 433868 <wcrtomb@plt+0x2ed28>
  433840:	ldr	w8, [sp, #8]
  433844:	cmp	w8, w25
  433848:	b.ne	433868 <wcrtomb@plt+0x2ed28>  // b.any
  43384c:	add	x0, sp, #0x8
  433850:	bl	444ef0 <argp_parse@@Base+0xd644>
  433854:	bl	404a10 <__errno_location@plt>
  433858:	mov	w8, #0x9                   	// #9
  43385c:	str	w8, [x0]
  433860:	mov	w23, #0xffffffff            	// #-1
  433864:	b	4338f8 <wcrtomb@plt+0x2edb8>
  433868:	mov	w0, w25
  43386c:	bl	403fb0 <fchdir@plt>
  433870:	cbz	w0, 433894 <wcrtomb@plt+0x2ed54>
  433874:	bl	404a10 <__errno_location@plt>
  433878:	ldr	w20, [x0]
  43387c:	mov	x19, x0
  433880:	add	x0, sp, #0x8
  433884:	bl	444ef0 <argp_parse@@Base+0xd644>
  433888:	str	w20, [x19]
  43388c:	mov	w23, #0xffffffff            	// #-1
  433890:	b	4338f8 <wcrtomb@plt+0x2edb8>
  433894:	mov	x0, x24
  433898:	mov	x1, x22
  43389c:	mov	x2, x21
  4338a0:	mov	x3, x20
  4338a4:	mov	w4, w19
  4338a8:	bl	404330 <setxattr@plt>
  4338ac:	mov	w23, w0
  4338b0:	cmn	w0, #0x1
  4338b4:	b.eq	4338d0 <wcrtomb@plt+0x2ed90>  // b.none
  4338b8:	mov	w19, wzr
  4338bc:	b	4338d8 <wcrtomb@plt+0x2ed98>
  4338c0:	cmp	w10, #0x5f
  4338c4:	b.eq	433830 <wcrtomb@plt+0x2ecf0>  // b.none
  4338c8:	str	w10, [x26]
  4338cc:	b	4338f8 <wcrtomb@plt+0x2edb8>
  4338d0:	bl	404a10 <__errno_location@plt>
  4338d4:	ldr	w19, [x0]
  4338d8:	add	x0, sp, #0x8
  4338dc:	bl	444ed8 <argp_parse@@Base+0xd62c>
  4338e0:	cbnz	w0, 433928 <wcrtomb@plt+0x2ede8>
  4338e4:	add	x0, sp, #0x8
  4338e8:	bl	444ef0 <argp_parse@@Base+0xd644>
  4338ec:	cbz	w19, 4338f8 <wcrtomb@plt+0x2edb8>
  4338f0:	bl	404a10 <__errno_location@plt>
  4338f4:	str	w19, [x0]
  4338f8:	mov	w0, w23
  4338fc:	add	sp, sp, #0xfd0
  433900:	ldp	x20, x19, [sp, #80]
  433904:	ldp	x22, x21, [sp, #64]
  433908:	ldp	x24, x23, [sp, #48]
  43390c:	ldp	x26, x25, [sp, #32]
  433910:	ldp	x28, x27, [sp, #16]
  433914:	ldp	x29, x30, [sp], #96
  433918:	ret
  43391c:	bl	404a10 <__errno_location@plt>
  433920:	ldr	w0, [x0]
  433924:	bl	43d9d0 <argp_parse@@Base+0x6124>
  433928:	bl	404a10 <__errno_location@plt>
  43392c:	ldr	w0, [x0]
  433930:	bl	43da10 <argp_parse@@Base+0x6164>
  433934:	stp	x29, x30, [sp, #-96]!
  433938:	stp	x28, x27, [sp, #16]
  43393c:	stp	x26, x25, [sp, #32]
  433940:	stp	x24, x23, [sp, #48]
  433944:	stp	x22, x21, [sp, #64]
  433948:	stp	x20, x19, [sp, #80]
  43394c:	mov	x29, sp
  433950:	sub	sp, sp, #0xfd0
  433954:	mov	w19, w5
  433958:	mov	x20, x4
  43395c:	mov	x21, x3
  433960:	mov	x22, x2
  433964:	cmn	w0, #0x64
  433968:	mov	x24, x1
  43396c:	b.eq	43397c <wcrtomb@plt+0x2ee3c>  // b.none
  433970:	ldrb	w8, [x24]
  433974:	cmp	w8, #0x2f
  433978:	b.ne	4339b0 <wcrtomb@plt+0x2ee70>  // b.any
  43397c:	mov	x0, x24
  433980:	mov	x1, x22
  433984:	mov	x2, x21
  433988:	mov	x3, x20
  43398c:	mov	w4, w19
  433990:	add	sp, sp, #0xfd0
  433994:	ldp	x20, x19, [sp, #80]
  433998:	ldp	x22, x21, [sp, #64]
  43399c:	ldp	x24, x23, [sp, #48]
  4339a0:	ldp	x26, x25, [sp, #32]
  4339a4:	ldp	x28, x27, [sp, #16]
  4339a8:	ldp	x29, x30, [sp], #96
  4339ac:	b	404420 <lsetxattr@plt>
  4339b0:	mov	w25, w0
  4339b4:	add	x0, sp, #0x8
  4339b8:	mov	w1, w25
  4339bc:	mov	x2, x24
  4339c0:	bl	446bc4 <_obstack_memory_used@@Base+0x74>
  4339c4:	cbz	x0, 433a3c <wcrtomb@plt+0x2eefc>
  4339c8:	mov	x1, x22
  4339cc:	mov	x2, x21
  4339d0:	mov	x3, x20
  4339d4:	mov	w4, w19
  4339d8:	mov	x27, x0
  4339dc:	bl	404420 <lsetxattr@plt>
  4339e0:	add	x28, sp, #0x8
  4339e4:	mov	w23, w0
  4339e8:	bl	404a10 <__errno_location@plt>
  4339ec:	ldr	w10, [x0]
  4339f0:	mov	x26, x0
  4339f4:	cmp	x27, x28
  4339f8:	b.eq	433a0c <wcrtomb@plt+0x2eecc>  // b.none
  4339fc:	mov	x0, x27
  433a00:	mov	w27, w10
  433a04:	bl	404700 <free@plt>
  433a08:	mov	w10, w27
  433a0c:	cmn	w23, #0x1
  433a10:	b.ne	433b04 <wcrtomb@plt+0x2efc4>  // b.any
  433a14:	cmp	w10, #0x26
  433a18:	b.hi	433acc <wcrtomb@plt+0x2ef8c>  // b.pmore
  433a1c:	mov	w8, w10
  433a20:	mov	w9, #0x1                   	// #1
  433a24:	lsl	x8, x9, x8
  433a28:	mov	x9, #0x2006                	// #8198
  433a2c:	movk	x9, #0x10, lsl #16
  433a30:	movk	x9, #0x40, lsl #32
  433a34:	tst	x8, x9
  433a38:	b.eq	433acc <wcrtomb@plt+0x2ef8c>  // b.none
  433a3c:	add	x0, sp, #0x8
  433a40:	bl	444e80 <argp_parse@@Base+0xd5d4>
  433a44:	cbnz	w0, 433b28 <wcrtomb@plt+0x2efe8>
  433a48:	tbnz	w25, #31, 433a74 <wcrtomb@plt+0x2ef34>
  433a4c:	ldr	w8, [sp, #8]
  433a50:	cmp	w8, w25
  433a54:	b.ne	433a74 <wcrtomb@plt+0x2ef34>  // b.any
  433a58:	add	x0, sp, #0x8
  433a5c:	bl	444ef0 <argp_parse@@Base+0xd644>
  433a60:	bl	404a10 <__errno_location@plt>
  433a64:	mov	w8, #0x9                   	// #9
  433a68:	str	w8, [x0]
  433a6c:	mov	w23, #0xffffffff            	// #-1
  433a70:	b	433b04 <wcrtomb@plt+0x2efc4>
  433a74:	mov	w0, w25
  433a78:	bl	403fb0 <fchdir@plt>
  433a7c:	cbz	w0, 433aa0 <wcrtomb@plt+0x2ef60>
  433a80:	bl	404a10 <__errno_location@plt>
  433a84:	ldr	w20, [x0]
  433a88:	mov	x19, x0
  433a8c:	add	x0, sp, #0x8
  433a90:	bl	444ef0 <argp_parse@@Base+0xd644>
  433a94:	str	w20, [x19]
  433a98:	mov	w23, #0xffffffff            	// #-1
  433a9c:	b	433b04 <wcrtomb@plt+0x2efc4>
  433aa0:	mov	x0, x24
  433aa4:	mov	x1, x22
  433aa8:	mov	x2, x21
  433aac:	mov	x3, x20
  433ab0:	mov	w4, w19
  433ab4:	bl	404420 <lsetxattr@plt>
  433ab8:	mov	w23, w0
  433abc:	cmn	w0, #0x1
  433ac0:	b.eq	433adc <wcrtomb@plt+0x2ef9c>  // b.none
  433ac4:	mov	w19, wzr
  433ac8:	b	433ae4 <wcrtomb@plt+0x2efa4>
  433acc:	cmp	w10, #0x5f
  433ad0:	b.eq	433a3c <wcrtomb@plt+0x2eefc>  // b.none
  433ad4:	str	w10, [x26]
  433ad8:	b	433b04 <wcrtomb@plt+0x2efc4>
  433adc:	bl	404a10 <__errno_location@plt>
  433ae0:	ldr	w19, [x0]
  433ae4:	add	x0, sp, #0x8
  433ae8:	bl	444ed8 <argp_parse@@Base+0xd62c>
  433aec:	cbnz	w0, 433b34 <wcrtomb@plt+0x2eff4>
  433af0:	add	x0, sp, #0x8
  433af4:	bl	444ef0 <argp_parse@@Base+0xd644>
  433af8:	cbz	w19, 433b04 <wcrtomb@plt+0x2efc4>
  433afc:	bl	404a10 <__errno_location@plt>
  433b00:	str	w19, [x0]
  433b04:	mov	w0, w23
  433b08:	add	sp, sp, #0xfd0
  433b0c:	ldp	x20, x19, [sp, #80]
  433b10:	ldp	x22, x21, [sp, #64]
  433b14:	ldp	x24, x23, [sp, #48]
  433b18:	ldp	x26, x25, [sp, #32]
  433b1c:	ldp	x28, x27, [sp, #16]
  433b20:	ldp	x29, x30, [sp], #96
  433b24:	ret
  433b28:	bl	404a10 <__errno_location@plt>
  433b2c:	ldr	w0, [x0]
  433b30:	bl	43d9d0 <argp_parse@@Base+0x6124>
  433b34:	bl	404a10 <__errno_location@plt>
  433b38:	ldr	w0, [x0]
  433b3c:	bl	43da10 <argp_parse@@Base+0x6164>
  433b40:	stp	x29, x30, [sp, #-96]!
  433b44:	stp	x28, x27, [sp, #16]
  433b48:	stp	x26, x25, [sp, #32]
  433b4c:	stp	x24, x23, [sp, #48]
  433b50:	stp	x22, x21, [sp, #64]
  433b54:	stp	x20, x19, [sp, #80]
  433b58:	mov	x29, sp
  433b5c:	sub	sp, sp, #0xfd0
  433b60:	mov	x19, x4
  433b64:	mov	x20, x3
  433b68:	mov	x22, x2
  433b6c:	cmn	w0, #0x64
  433b70:	mov	x23, x1
  433b74:	b.eq	433b84 <wcrtomb@plt+0x2f044>  // b.none
  433b78:	ldrb	w8, [x23]
  433b7c:	cmp	w8, #0x2f
  433b80:	b.ne	433bb4 <wcrtomb@plt+0x2f074>  // b.any
  433b84:	mov	x0, x23
  433b88:	mov	x1, x22
  433b8c:	mov	x2, x20
  433b90:	mov	x3, x19
  433b94:	add	sp, sp, #0xfd0
  433b98:	ldp	x20, x19, [sp, #80]
  433b9c:	ldp	x22, x21, [sp, #64]
  433ba0:	ldp	x24, x23, [sp, #48]
  433ba4:	ldp	x26, x25, [sp, #32]
  433ba8:	ldp	x28, x27, [sp, #16]
  433bac:	ldp	x29, x30, [sp], #96
  433bb0:	b	404610 <getxattr@plt>
  433bb4:	mov	w24, w0
  433bb8:	add	x0, sp, #0x8
  433bbc:	mov	w1, w24
  433bc0:	mov	x2, x23
  433bc4:	add	x28, sp, #0x8
  433bc8:	bl	446bc4 <_obstack_memory_used@@Base+0x74>
  433bcc:	cbz	x0, 433c34 <wcrtomb@plt+0x2f0f4>
  433bd0:	mov	x1, x22
  433bd4:	mov	x2, x20
  433bd8:	mov	x3, x19
  433bdc:	mov	x26, x0
  433be0:	bl	404610 <getxattr@plt>
  433be4:	mov	x21, x0
  433be8:	bl	404a10 <__errno_location@plt>
  433bec:	ldr	w27, [x0]
  433bf0:	mov	x25, x0
  433bf4:	cmp	x26, x28
  433bf8:	b.eq	433c04 <wcrtomb@plt+0x2f0c4>  // b.none
  433bfc:	mov	x0, x26
  433c00:	bl	404700 <free@plt>
  433c04:	cmn	x21, #0x1
  433c08:	b.ne	433cf8 <wcrtomb@plt+0x2f1b8>  // b.any
  433c0c:	cmp	w27, #0x26
  433c10:	b.hi	433cc0 <wcrtomb@plt+0x2f180>  // b.pmore
  433c14:	mov	w8, w27
  433c18:	mov	w9, #0x1                   	// #1
  433c1c:	lsl	x8, x9, x8
  433c20:	mov	x9, #0x2006                	// #8198
  433c24:	movk	x9, #0x10, lsl #16
  433c28:	movk	x9, #0x40, lsl #32
  433c2c:	tst	x8, x9
  433c30:	b.eq	433cc0 <wcrtomb@plt+0x2f180>  // b.none
  433c34:	add	x0, sp, #0x8
  433c38:	bl	444e80 <argp_parse@@Base+0xd5d4>
  433c3c:	cbnz	w0, 433d1c <wcrtomb@plt+0x2f1dc>
  433c40:	tbnz	w24, #31, 433c6c <wcrtomb@plt+0x2f12c>
  433c44:	ldr	w8, [sp, #8]
  433c48:	cmp	w8, w24
  433c4c:	b.ne	433c6c <wcrtomb@plt+0x2f12c>  // b.any
  433c50:	add	x0, sp, #0x8
  433c54:	bl	444ef0 <argp_parse@@Base+0xd644>
  433c58:	bl	404a10 <__errno_location@plt>
  433c5c:	mov	w8, #0x9                   	// #9
  433c60:	str	w8, [x0]
  433c64:	mov	x21, #0xffffffffffffffff    	// #-1
  433c68:	b	433cf8 <wcrtomb@plt+0x2f1b8>
  433c6c:	mov	w0, w24
  433c70:	bl	403fb0 <fchdir@plt>
  433c74:	cbz	w0, 433c98 <wcrtomb@plt+0x2f158>
  433c78:	bl	404a10 <__errno_location@plt>
  433c7c:	ldr	w20, [x0]
  433c80:	mov	x19, x0
  433c84:	add	x0, sp, #0x8
  433c88:	bl	444ef0 <argp_parse@@Base+0xd644>
  433c8c:	str	w20, [x19]
  433c90:	mov	x21, #0xffffffffffffffff    	// #-1
  433c94:	b	433cf8 <wcrtomb@plt+0x2f1b8>
  433c98:	mov	x0, x23
  433c9c:	mov	x1, x22
  433ca0:	mov	x2, x20
  433ca4:	mov	x3, x19
  433ca8:	bl	404610 <getxattr@plt>
  433cac:	mov	x21, x0
  433cb0:	cmn	x0, #0x1
  433cb4:	b.eq	433cd0 <wcrtomb@plt+0x2f190>  // b.none
  433cb8:	mov	w19, wzr
  433cbc:	b	433cd8 <wcrtomb@plt+0x2f198>
  433cc0:	cmp	w27, #0x5f
  433cc4:	b.eq	433c34 <wcrtomb@plt+0x2f0f4>  // b.none
  433cc8:	str	w27, [x25]
  433ccc:	b	433cf8 <wcrtomb@plt+0x2f1b8>
  433cd0:	bl	404a10 <__errno_location@plt>
  433cd4:	ldr	w19, [x0]
  433cd8:	add	x0, sp, #0x8
  433cdc:	bl	444ed8 <argp_parse@@Base+0xd62c>
  433ce0:	cbnz	w0, 433d28 <wcrtomb@plt+0x2f1e8>
  433ce4:	add	x0, sp, #0x8
  433ce8:	bl	444ef0 <argp_parse@@Base+0xd644>
  433cec:	cbz	w19, 433cf8 <wcrtomb@plt+0x2f1b8>
  433cf0:	bl	404a10 <__errno_location@plt>
  433cf4:	str	w19, [x0]
  433cf8:	mov	x0, x21
  433cfc:	add	sp, sp, #0xfd0
  433d00:	ldp	x20, x19, [sp, #80]
  433d04:	ldp	x22, x21, [sp, #64]
  433d08:	ldp	x24, x23, [sp, #48]
  433d0c:	ldp	x26, x25, [sp, #32]
  433d10:	ldp	x28, x27, [sp, #16]
  433d14:	ldp	x29, x30, [sp], #96
  433d18:	ret
  433d1c:	bl	404a10 <__errno_location@plt>
  433d20:	ldr	w0, [x0]
  433d24:	bl	43d9d0 <argp_parse@@Base+0x6124>
  433d28:	bl	404a10 <__errno_location@plt>
  433d2c:	ldr	w0, [x0]
  433d30:	bl	43da10 <argp_parse@@Base+0x6164>
  433d34:	stp	x29, x30, [sp, #-96]!
  433d38:	stp	x28, x27, [sp, #16]
  433d3c:	stp	x26, x25, [sp, #32]
  433d40:	stp	x24, x23, [sp, #48]
  433d44:	stp	x22, x21, [sp, #64]
  433d48:	stp	x20, x19, [sp, #80]
  433d4c:	mov	x29, sp
  433d50:	sub	sp, sp, #0xfd0
  433d54:	mov	x19, x4
  433d58:	mov	x20, x3
  433d5c:	mov	x22, x2
  433d60:	cmn	w0, #0x64
  433d64:	mov	x23, x1
  433d68:	b.eq	433d78 <wcrtomb@plt+0x2f238>  // b.none
  433d6c:	ldrb	w8, [x23]
  433d70:	cmp	w8, #0x2f
  433d74:	b.ne	433da8 <wcrtomb@plt+0x2f268>  // b.any
  433d78:	mov	x0, x23
  433d7c:	mov	x1, x22
  433d80:	mov	x2, x20
  433d84:	mov	x3, x19
  433d88:	add	sp, sp, #0xfd0
  433d8c:	ldp	x20, x19, [sp, #80]
  433d90:	ldp	x22, x21, [sp, #64]
  433d94:	ldp	x24, x23, [sp, #48]
  433d98:	ldp	x26, x25, [sp, #32]
  433d9c:	ldp	x28, x27, [sp, #16]
  433da0:	ldp	x29, x30, [sp], #96
  433da4:	b	4044d0 <lgetxattr@plt>
  433da8:	mov	w24, w0
  433dac:	add	x0, sp, #0x8
  433db0:	mov	w1, w24
  433db4:	mov	x2, x23
  433db8:	add	x28, sp, #0x8
  433dbc:	bl	446bc4 <_obstack_memory_used@@Base+0x74>
  433dc0:	cbz	x0, 433e28 <wcrtomb@plt+0x2f2e8>
  433dc4:	mov	x1, x22
  433dc8:	mov	x2, x20
  433dcc:	mov	x3, x19
  433dd0:	mov	x26, x0
  433dd4:	bl	4044d0 <lgetxattr@plt>
  433dd8:	mov	x21, x0
  433ddc:	bl	404a10 <__errno_location@plt>
  433de0:	ldr	w27, [x0]
  433de4:	mov	x25, x0
  433de8:	cmp	x26, x28
  433dec:	b.eq	433df8 <wcrtomb@plt+0x2f2b8>  // b.none
  433df0:	mov	x0, x26
  433df4:	bl	404700 <free@plt>
  433df8:	cmn	x21, #0x1
  433dfc:	b.ne	433eec <wcrtomb@plt+0x2f3ac>  // b.any
  433e00:	cmp	w27, #0x26
  433e04:	b.hi	433eb4 <wcrtomb@plt+0x2f374>  // b.pmore
  433e08:	mov	w8, w27
  433e0c:	mov	w9, #0x1                   	// #1
  433e10:	lsl	x8, x9, x8
  433e14:	mov	x9, #0x2006                	// #8198
  433e18:	movk	x9, #0x10, lsl #16
  433e1c:	movk	x9, #0x40, lsl #32
  433e20:	tst	x8, x9
  433e24:	b.eq	433eb4 <wcrtomb@plt+0x2f374>  // b.none
  433e28:	add	x0, sp, #0x8
  433e2c:	bl	444e80 <argp_parse@@Base+0xd5d4>
  433e30:	cbnz	w0, 433f10 <wcrtomb@plt+0x2f3d0>
  433e34:	tbnz	w24, #31, 433e60 <wcrtomb@plt+0x2f320>
  433e38:	ldr	w8, [sp, #8]
  433e3c:	cmp	w8, w24
  433e40:	b.ne	433e60 <wcrtomb@plt+0x2f320>  // b.any
  433e44:	add	x0, sp, #0x8
  433e48:	bl	444ef0 <argp_parse@@Base+0xd644>
  433e4c:	bl	404a10 <__errno_location@plt>
  433e50:	mov	w8, #0x9                   	// #9
  433e54:	str	w8, [x0]
  433e58:	mov	x21, #0xffffffffffffffff    	// #-1
  433e5c:	b	433eec <wcrtomb@plt+0x2f3ac>
  433e60:	mov	w0, w24
  433e64:	bl	403fb0 <fchdir@plt>
  433e68:	cbz	w0, 433e8c <wcrtomb@plt+0x2f34c>
  433e6c:	bl	404a10 <__errno_location@plt>
  433e70:	ldr	w20, [x0]
  433e74:	mov	x19, x0
  433e78:	add	x0, sp, #0x8
  433e7c:	bl	444ef0 <argp_parse@@Base+0xd644>
  433e80:	str	w20, [x19]
  433e84:	mov	x21, #0xffffffffffffffff    	// #-1
  433e88:	b	433eec <wcrtomb@plt+0x2f3ac>
  433e8c:	mov	x0, x23
  433e90:	mov	x1, x22
  433e94:	mov	x2, x20
  433e98:	mov	x3, x19
  433e9c:	bl	4044d0 <lgetxattr@plt>
  433ea0:	mov	x21, x0
  433ea4:	cmn	x0, #0x1
  433ea8:	b.eq	433ec4 <wcrtomb@plt+0x2f384>  // b.none
  433eac:	mov	w19, wzr
  433eb0:	b	433ecc <wcrtomb@plt+0x2f38c>
  433eb4:	cmp	w27, #0x5f
  433eb8:	b.eq	433e28 <wcrtomb@plt+0x2f2e8>  // b.none
  433ebc:	str	w27, [x25]
  433ec0:	b	433eec <wcrtomb@plt+0x2f3ac>
  433ec4:	bl	404a10 <__errno_location@plt>
  433ec8:	ldr	w19, [x0]
  433ecc:	add	x0, sp, #0x8
  433ed0:	bl	444ed8 <argp_parse@@Base+0xd62c>
  433ed4:	cbnz	w0, 433f1c <wcrtomb@plt+0x2f3dc>
  433ed8:	add	x0, sp, #0x8
  433edc:	bl	444ef0 <argp_parse@@Base+0xd644>
  433ee0:	cbz	w19, 433eec <wcrtomb@plt+0x2f3ac>
  433ee4:	bl	404a10 <__errno_location@plt>
  433ee8:	str	w19, [x0]
  433eec:	mov	x0, x21
  433ef0:	add	sp, sp, #0xfd0
  433ef4:	ldp	x20, x19, [sp, #80]
  433ef8:	ldp	x22, x21, [sp, #64]
  433efc:	ldp	x24, x23, [sp, #48]
  433f00:	ldp	x26, x25, [sp, #32]
  433f04:	ldp	x28, x27, [sp, #16]
  433f08:	ldp	x29, x30, [sp], #96
  433f0c:	ret
  433f10:	bl	404a10 <__errno_location@plt>
  433f14:	ldr	w0, [x0]
  433f18:	bl	43d9d0 <argp_parse@@Base+0x6124>
  433f1c:	bl	404a10 <__errno_location@plt>
  433f20:	ldr	w0, [x0]
  433f24:	bl	43da10 <argp_parse@@Base+0x6164>
  433f28:	stp	x29, x30, [sp, #-96]!
  433f2c:	stp	x28, x27, [sp, #16]
  433f30:	stp	x26, x25, [sp, #32]
  433f34:	stp	x24, x23, [sp, #48]
  433f38:	stp	x22, x21, [sp, #64]
  433f3c:	stp	x20, x19, [sp, #80]
  433f40:	mov	x29, sp
  433f44:	sub	sp, sp, #0xfc0
  433f48:	mov	x19, x3
  433f4c:	mov	x21, x2
  433f50:	cmn	w0, #0x64
  433f54:	mov	x22, x1
  433f58:	b.eq	433f68 <wcrtomb@plt+0x2f428>  // b.none
  433f5c:	ldrb	w8, [x22]
  433f60:	cmp	w8, #0x2f
  433f64:	b.ne	433f94 <wcrtomb@plt+0x2f454>  // b.any
  433f68:	mov	x0, x22
  433f6c:	mov	x1, x21
  433f70:	mov	x2, x19
  433f74:	add	sp, sp, #0xfc0
  433f78:	ldp	x20, x19, [sp, #80]
  433f7c:	ldp	x22, x21, [sp, #64]
  433f80:	ldp	x24, x23, [sp, #48]
  433f84:	ldp	x26, x25, [sp, #32]
  433f88:	ldp	x28, x27, [sp, #16]
  433f8c:	ldp	x29, x30, [sp], #96
  433f90:	b	404430 <listxattr@plt>
  433f94:	mov	w23, w0
  433f98:	mov	x0, sp
  433f9c:	mov	w1, w23
  433fa0:	mov	x2, x22
  433fa4:	mov	x27, sp
  433fa8:	bl	446bc4 <_obstack_memory_used@@Base+0x74>
  433fac:	cbz	x0, 434010 <wcrtomb@plt+0x2f4d0>
  433fb0:	mov	x1, x21
  433fb4:	mov	x2, x19
  433fb8:	mov	x25, x0
  433fbc:	bl	404430 <listxattr@plt>
  433fc0:	mov	x20, x0
  433fc4:	bl	404a10 <__errno_location@plt>
  433fc8:	ldr	w26, [x0]
  433fcc:	mov	x24, x0
  433fd0:	cmp	x25, x27
  433fd4:	b.eq	433fe0 <wcrtomb@plt+0x2f4a0>  // b.none
  433fd8:	mov	x0, x25
  433fdc:	bl	404700 <free@plt>
  433fe0:	cmn	x20, #0x1
  433fe4:	b.ne	4340d0 <wcrtomb@plt+0x2f590>  // b.any
  433fe8:	cmp	w26, #0x26
  433fec:	b.hi	434098 <wcrtomb@plt+0x2f558>  // b.pmore
  433ff0:	mov	w8, w26
  433ff4:	mov	w9, #0x1                   	// #1
  433ff8:	lsl	x8, x9, x8
  433ffc:	mov	x9, #0x2006                	// #8198
  434000:	movk	x9, #0x10, lsl #16
  434004:	movk	x9, #0x40, lsl #32
  434008:	tst	x8, x9
  43400c:	b.eq	434098 <wcrtomb@plt+0x2f558>  // b.none
  434010:	mov	x0, sp
  434014:	bl	444e80 <argp_parse@@Base+0xd5d4>
  434018:	cbnz	w0, 4340f4 <wcrtomb@plt+0x2f5b4>
  43401c:	tbnz	w23, #31, 434048 <wcrtomb@plt+0x2f508>
  434020:	ldr	w8, [sp]
  434024:	cmp	w8, w23
  434028:	b.ne	434048 <wcrtomb@plt+0x2f508>  // b.any
  43402c:	mov	x0, sp
  434030:	bl	444ef0 <argp_parse@@Base+0xd644>
  434034:	bl	404a10 <__errno_location@plt>
  434038:	mov	w8, #0x9                   	// #9
  43403c:	str	w8, [x0]
  434040:	mov	x20, #0xffffffffffffffff    	// #-1
  434044:	b	4340d0 <wcrtomb@plt+0x2f590>
  434048:	mov	w0, w23
  43404c:	bl	403fb0 <fchdir@plt>
  434050:	cbz	w0, 434074 <wcrtomb@plt+0x2f534>
  434054:	bl	404a10 <__errno_location@plt>
  434058:	ldr	w20, [x0]
  43405c:	mov	x19, x0
  434060:	mov	x0, sp
  434064:	bl	444ef0 <argp_parse@@Base+0xd644>
  434068:	str	w20, [x19]
  43406c:	mov	x20, #0xffffffffffffffff    	// #-1
  434070:	b	4340d0 <wcrtomb@plt+0x2f590>
  434074:	mov	x0, x22
  434078:	mov	x1, x21
  43407c:	mov	x2, x19
  434080:	bl	404430 <listxattr@plt>
  434084:	mov	x20, x0
  434088:	cmn	x0, #0x1
  43408c:	b.eq	4340a8 <wcrtomb@plt+0x2f568>  // b.none
  434090:	mov	w19, wzr
  434094:	b	4340b0 <wcrtomb@plt+0x2f570>
  434098:	cmp	w26, #0x5f
  43409c:	b.eq	434010 <wcrtomb@plt+0x2f4d0>  // b.none
  4340a0:	str	w26, [x24]
  4340a4:	b	4340d0 <wcrtomb@plt+0x2f590>
  4340a8:	bl	404a10 <__errno_location@plt>
  4340ac:	ldr	w19, [x0]
  4340b0:	mov	x0, sp
  4340b4:	bl	444ed8 <argp_parse@@Base+0xd62c>
  4340b8:	cbnz	w0, 434100 <wcrtomb@plt+0x2f5c0>
  4340bc:	mov	x0, sp
  4340c0:	bl	444ef0 <argp_parse@@Base+0xd644>
  4340c4:	cbz	w19, 4340d0 <wcrtomb@plt+0x2f590>
  4340c8:	bl	404a10 <__errno_location@plt>
  4340cc:	str	w19, [x0]
  4340d0:	mov	x0, x20
  4340d4:	add	sp, sp, #0xfc0
  4340d8:	ldp	x20, x19, [sp, #80]
  4340dc:	ldp	x22, x21, [sp, #64]
  4340e0:	ldp	x24, x23, [sp, #48]
  4340e4:	ldp	x26, x25, [sp, #32]
  4340e8:	ldp	x28, x27, [sp, #16]
  4340ec:	ldp	x29, x30, [sp], #96
  4340f0:	ret
  4340f4:	bl	404a10 <__errno_location@plt>
  4340f8:	ldr	w0, [x0]
  4340fc:	bl	43d9d0 <argp_parse@@Base+0x6124>
  434100:	bl	404a10 <__errno_location@plt>
  434104:	ldr	w0, [x0]
  434108:	bl	43da10 <argp_parse@@Base+0x6164>
  43410c:	stp	x29, x30, [sp, #-96]!
  434110:	stp	x28, x27, [sp, #16]
  434114:	stp	x26, x25, [sp, #32]
  434118:	stp	x24, x23, [sp, #48]
  43411c:	stp	x22, x21, [sp, #64]
  434120:	stp	x20, x19, [sp, #80]
  434124:	mov	x29, sp
  434128:	sub	sp, sp, #0xfc0
  43412c:	mov	x19, x3
  434130:	mov	x21, x2
  434134:	cmn	w0, #0x64
  434138:	mov	x22, x1
  43413c:	b.eq	43414c <wcrtomb@plt+0x2f60c>  // b.none
  434140:	ldrb	w8, [x22]
  434144:	cmp	w8, #0x2f
  434148:	b.ne	434178 <wcrtomb@plt+0x2f638>  // b.any
  43414c:	mov	x0, x22
  434150:	mov	x1, x21
  434154:	mov	x2, x19
  434158:	add	sp, sp, #0xfc0
  43415c:	ldp	x20, x19, [sp, #80]
  434160:	ldp	x22, x21, [sp, #64]
  434164:	ldp	x24, x23, [sp, #48]
  434168:	ldp	x26, x25, [sp, #32]
  43416c:	ldp	x28, x27, [sp, #16]
  434170:	ldp	x29, x30, [sp], #96
  434174:	b	404960 <llistxattr@plt>
  434178:	mov	w23, w0
  43417c:	mov	x0, sp
  434180:	mov	w1, w23
  434184:	mov	x2, x22
  434188:	mov	x27, sp
  43418c:	bl	446bc4 <_obstack_memory_used@@Base+0x74>
  434190:	cbz	x0, 4341f4 <wcrtomb@plt+0x2f6b4>
  434194:	mov	x1, x21
  434198:	mov	x2, x19
  43419c:	mov	x25, x0
  4341a0:	bl	404960 <llistxattr@plt>
  4341a4:	mov	x20, x0
  4341a8:	bl	404a10 <__errno_location@plt>
  4341ac:	ldr	w26, [x0]
  4341b0:	mov	x24, x0
  4341b4:	cmp	x25, x27
  4341b8:	b.eq	4341c4 <wcrtomb@plt+0x2f684>  // b.none
  4341bc:	mov	x0, x25
  4341c0:	bl	404700 <free@plt>
  4341c4:	cmn	x20, #0x1
  4341c8:	b.ne	4342b4 <wcrtomb@plt+0x2f774>  // b.any
  4341cc:	cmp	w26, #0x26
  4341d0:	b.hi	43427c <wcrtomb@plt+0x2f73c>  // b.pmore
  4341d4:	mov	w8, w26
  4341d8:	mov	w9, #0x1                   	// #1
  4341dc:	lsl	x8, x9, x8
  4341e0:	mov	x9, #0x2006                	// #8198
  4341e4:	movk	x9, #0x10, lsl #16
  4341e8:	movk	x9, #0x40, lsl #32
  4341ec:	tst	x8, x9
  4341f0:	b.eq	43427c <wcrtomb@plt+0x2f73c>  // b.none
  4341f4:	mov	x0, sp
  4341f8:	bl	444e80 <argp_parse@@Base+0xd5d4>
  4341fc:	cbnz	w0, 4342d8 <wcrtomb@plt+0x2f798>
  434200:	tbnz	w23, #31, 43422c <wcrtomb@plt+0x2f6ec>
  434204:	ldr	w8, [sp]
  434208:	cmp	w8, w23
  43420c:	b.ne	43422c <wcrtomb@plt+0x2f6ec>  // b.any
  434210:	mov	x0, sp
  434214:	bl	444ef0 <argp_parse@@Base+0xd644>
  434218:	bl	404a10 <__errno_location@plt>
  43421c:	mov	w8, #0x9                   	// #9
  434220:	str	w8, [x0]
  434224:	mov	x20, #0xffffffffffffffff    	// #-1
  434228:	b	4342b4 <wcrtomb@plt+0x2f774>
  43422c:	mov	w0, w23
  434230:	bl	403fb0 <fchdir@plt>
  434234:	cbz	w0, 434258 <wcrtomb@plt+0x2f718>
  434238:	bl	404a10 <__errno_location@plt>
  43423c:	ldr	w20, [x0]
  434240:	mov	x19, x0
  434244:	mov	x0, sp
  434248:	bl	444ef0 <argp_parse@@Base+0xd644>
  43424c:	str	w20, [x19]
  434250:	mov	x20, #0xffffffffffffffff    	// #-1
  434254:	b	4342b4 <wcrtomb@plt+0x2f774>
  434258:	mov	x0, x22
  43425c:	mov	x1, x21
  434260:	mov	x2, x19
  434264:	bl	404960 <llistxattr@plt>
  434268:	mov	x20, x0
  43426c:	cmn	x0, #0x1
  434270:	b.eq	43428c <wcrtomb@plt+0x2f74c>  // b.none
  434274:	mov	w19, wzr
  434278:	b	434294 <wcrtomb@plt+0x2f754>
  43427c:	cmp	w26, #0x5f
  434280:	b.eq	4341f4 <wcrtomb@plt+0x2f6b4>  // b.none
  434284:	str	w26, [x24]
  434288:	b	4342b4 <wcrtomb@plt+0x2f774>
  43428c:	bl	404a10 <__errno_location@plt>
  434290:	ldr	w19, [x0]
  434294:	mov	x0, sp
  434298:	bl	444ed8 <argp_parse@@Base+0xd62c>
  43429c:	cbnz	w0, 4342e4 <wcrtomb@plt+0x2f7a4>
  4342a0:	mov	x0, sp
  4342a4:	bl	444ef0 <argp_parse@@Base+0xd644>
  4342a8:	cbz	w19, 4342b4 <wcrtomb@plt+0x2f774>
  4342ac:	bl	404a10 <__errno_location@plt>
  4342b0:	str	w19, [x0]
  4342b4:	mov	x0, x20
  4342b8:	add	sp, sp, #0xfc0
  4342bc:	ldp	x20, x19, [sp, #80]
  4342c0:	ldp	x22, x21, [sp, #64]
  4342c4:	ldp	x24, x23, [sp, #48]
  4342c8:	ldp	x26, x25, [sp, #32]
  4342cc:	ldp	x28, x27, [sp, #16]
  4342d0:	ldp	x29, x30, [sp], #96
  4342d4:	ret
  4342d8:	bl	404a10 <__errno_location@plt>
  4342dc:	ldr	w0, [x0]
  4342e0:	bl	43d9d0 <argp_parse@@Base+0x6124>
  4342e4:	bl	404a10 <__errno_location@plt>
  4342e8:	ldr	w0, [x0]
  4342ec:	bl	43da10 <argp_parse@@Base+0x6164>
  4342f0:	stp	x29, x30, [sp, #-80]!
  4342f4:	cmp	x2, #0x401
  4342f8:	mov	w8, #0x401                 	// #1025
  4342fc:	stp	x22, x21, [sp, #48]
  434300:	stp	x20, x19, [sp, #64]
  434304:	mov	x19, x1
  434308:	mov	w20, w0
  43430c:	csinc	x21, x8, x2, cs  // cs = hs, nlast
  434310:	str	x25, [sp, #16]
  434314:	stp	x24, x23, [sp, #32]
  434318:	mov	x29, sp
  43431c:	b	434324 <wcrtomb@plt+0x2f7e4>
  434320:	lsl	x21, x21, #1
  434324:	mov	x0, x21
  434328:	bl	404250 <malloc@plt>
  43432c:	mov	x22, x0
  434330:	cbz	x0, 4343b8 <wcrtomb@plt+0x2f878>
  434334:	mov	w0, w20
  434338:	mov	x1, x19
  43433c:	mov	x2, x22
  434340:	mov	x3, x21
  434344:	bl	404b30 <readlinkat@plt>
  434348:	mov	x23, x0
  43434c:	tbz	x0, #63, 434360 <wcrtomb@plt+0x2f820>
  434350:	bl	404a10 <__errno_location@plt>
  434354:	ldr	w25, [x0]
  434358:	cmp	w25, #0x22
  43435c:	b.ne	4343a4 <wcrtomb@plt+0x2f864>  // b.any
  434360:	cmp	x23, x21
  434364:	b.cc	43439c <wcrtomb@plt+0x2f85c>  // b.lo, b.ul, b.last
  434368:	mov	x0, x22
  43436c:	bl	404700 <free@plt>
  434370:	lsr	x8, x21, #62
  434374:	cbz	x8, 434320 <wcrtomb@plt+0x2f7e0>
  434378:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  43437c:	cmp	x21, x8
  434380:	mov	x21, #0x7fffffffffffffff    	// #9223372036854775807
  434384:	b.cc	434324 <wcrtomb@plt+0x2f7e4>  // b.lo, b.ul, b.last
  434388:	bl	404a10 <__errno_location@plt>
  43438c:	mov	x22, xzr
  434390:	mov	w8, #0xc                   	// #12
  434394:	str	w8, [x0]
  434398:	b	4343b8 <wcrtomb@plt+0x2f878>
  43439c:	strb	wzr, [x22, x23]
  4343a0:	b	4343b8 <wcrtomb@plt+0x2f878>
  4343a4:	mov	x24, x0
  4343a8:	mov	x0, x22
  4343ac:	bl	404700 <free@plt>
  4343b0:	mov	x22, xzr
  4343b4:	str	w25, [x24]
  4343b8:	mov	x0, x22
  4343bc:	ldp	x20, x19, [sp, #64]
  4343c0:	ldp	x22, x21, [sp, #48]
  4343c4:	ldp	x24, x23, [sp, #32]
  4343c8:	ldr	x25, [sp, #16]
  4343cc:	ldp	x29, x30, [sp], #80
  4343d0:	ret
  4343d4:	stp	x29, x30, [sp, #-16]!
  4343d8:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4343dc:	ldr	w0, [x8, #4064]
  4343e0:	mov	x29, sp
  4343e4:	bl	403f70 <exit@plt>
  4343e8:	stp	x29, x30, [sp, #-96]!
  4343ec:	stp	x28, x27, [sp, #16]
  4343f0:	stp	x26, x25, [sp, #32]
  4343f4:	stp	x24, x23, [sp, #48]
  4343f8:	stp	x22, x21, [sp, #64]
  4343fc:	stp	x20, x19, [sp, #80]
  434400:	mov	x29, sp
  434404:	mov	x19, x3
  434408:	mov	x20, x2
  43440c:	mov	x24, x1
  434410:	mov	x21, x0
  434414:	bl	403f40 <strlen@plt>
  434418:	ldr	x25, [x24]
  43441c:	cbz	x25, 4344ac <wcrtomb@plt+0x2f96c>
  434420:	mov	x22, x0
  434424:	mov	w26, wzr
  434428:	mov	x23, xzr
  43442c:	add	x27, x24, #0x8
  434430:	mov	x28, #0xffffffffffffffff    	// #-1
  434434:	mov	x24, x20
  434438:	b	434450 <wcrtomb@plt+0x2f910>
  43443c:	mov	x28, x23
  434440:	ldr	x25, [x27, x23, lsl #3]
  434444:	add	x23, x23, #0x1
  434448:	add	x24, x24, x19
  43444c:	cbz	x25, 43449c <wcrtomb@plt+0x2f95c>
  434450:	mov	x0, x25
  434454:	mov	x1, x21
  434458:	mov	x2, x22
  43445c:	bl	404300 <strncmp@plt>
  434460:	cbnz	w0, 434440 <wcrtomb@plt+0x2f900>
  434464:	mov	x0, x25
  434468:	bl	403f40 <strlen@plt>
  43446c:	cmp	x0, x22
  434470:	b.eq	4344b0 <wcrtomb@plt+0x2f970>  // b.none
  434474:	cmn	x28, #0x1
  434478:	b.eq	43443c <wcrtomb@plt+0x2f8fc>  // b.none
  43447c:	cbz	x20, 434494 <wcrtomb@plt+0x2f954>
  434480:	madd	x0, x28, x19, x20
  434484:	mov	x1, x24
  434488:	mov	x2, x19
  43448c:	bl	404440 <bcmp@plt>
  434490:	cbz	w0, 434440 <wcrtomb@plt+0x2f900>
  434494:	mov	w26, #0x1                   	// #1
  434498:	b	434440 <wcrtomb@plt+0x2f900>
  43449c:	tst	w26, #0x1
  4344a0:	mov	x8, #0xfffffffffffffffe    	// #-2
  4344a4:	csel	x0, x8, x28, ne  // ne = any
  4344a8:	b	4344b4 <wcrtomb@plt+0x2f974>
  4344ac:	mov	x23, #0xffffffffffffffff    	// #-1
  4344b0:	mov	x0, x23
  4344b4:	ldp	x20, x19, [sp, #80]
  4344b8:	ldp	x22, x21, [sp, #64]
  4344bc:	ldp	x24, x23, [sp, #48]
  4344c0:	ldp	x26, x25, [sp, #32]
  4344c4:	ldp	x28, x27, [sp, #16]
  4344c8:	ldp	x29, x30, [sp], #96
  4344cc:	ret
  4344d0:	stp	x29, x30, [sp, #-48]!
  4344d4:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4344d8:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4344dc:	add	x8, x8, #0x931
  4344e0:	add	x9, x9, #0x916
  4344e4:	cmn	x2, #0x1
  4344e8:	stp	x20, x19, [sp, #32]
  4344ec:	mov	x19, x1
  4344f0:	mov	x20, x0
  4344f4:	csel	x1, x9, x8, eq  // eq = none
  4344f8:	mov	w2, #0x5                   	// #5
  4344fc:	mov	x0, xzr
  434500:	str	x21, [sp, #16]
  434504:	mov	x29, sp
  434508:	bl	404900 <dcgettext@plt>
  43450c:	mov	x21, x0
  434510:	mov	w1, #0x8                   	// #8
  434514:	mov	w0, wzr
  434518:	mov	x2, x19
  43451c:	bl	444564 <argp_parse@@Base+0xccb8>
  434520:	mov	x19, x0
  434524:	mov	w0, #0x1                   	// #1
  434528:	mov	x1, x20
  43452c:	bl	444a58 <argp_parse@@Base+0xd1ac>
  434530:	mov	x2, x21
  434534:	mov	x3, x19
  434538:	ldp	x20, x19, [sp, #32]
  43453c:	ldr	x21, [sp, #16]
  434540:	mov	x4, x0
  434544:	mov	w0, wzr
  434548:	mov	w1, wzr
  43454c:	ldp	x29, x30, [sp], #48
  434550:	b	403fa0 <error@plt>
  434554:	stp	x29, x30, [sp, #-96]!
  434558:	stp	x20, x19, [sp, #80]
  43455c:	mov	x20, x1
  434560:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434564:	stp	x22, x21, [sp, #64]
  434568:	mov	x19, x2
  43456c:	mov	x21, x0
  434570:	add	x1, x1, #0x94e
  434574:	mov	w2, #0x5                   	// #5
  434578:	mov	x0, xzr
  43457c:	stp	x28, x27, [sp, #16]
  434580:	stp	x26, x25, [sp, #32]
  434584:	stp	x24, x23, [sp, #48]
  434588:	mov	x29, sp
  43458c:	bl	404900 <dcgettext@plt>
  434590:	adrp	x26, 47a000 <_obstack_memory_used@@Base+0x334b0>
  434594:	ldr	x1, [x26, #96]
  434598:	bl	404920 <fputs_unlocked@plt>
  43459c:	ldr	x24, [x21]
  4345a0:	cbz	x24, 43463c <wcrtomb@plt+0x2fafc>
  4345a4:	add	x28, x21, #0x8
  4345a8:	adrp	x21, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4345ac:	mov	x27, xzr
  4345b0:	mov	x23, xzr
  4345b4:	mov	x22, xzr
  4345b8:	add	x21, x21, #0x963
  4345bc:	b	4345f8 <wcrtomb@plt+0x2fab8>
  4345c0:	mov	x25, xzr
  4345c4:	ldr	x23, [x26, #96]
  4345c8:	mov	x0, x24
  4345cc:	bl	444a68 <argp_parse@@Base+0xd1bc>
  4345d0:	mov	x3, x0
  4345d4:	mov	w1, #0x1                   	// #1
  4345d8:	mov	x0, x23
  4345dc:	mov	x2, x21
  4345e0:	bl	404650 <__fprintf_chk@plt>
  4345e4:	add	x23, x20, x25
  4345e8:	ldr	x24, [x28, x22, lsl #3]
  4345ec:	add	x22, x22, #0x1
  4345f0:	add	x27, x27, x19
  4345f4:	cbz	x24, 43463c <wcrtomb@plt+0x2fafc>
  4345f8:	cbz	x22, 4345c0 <wcrtomb@plt+0x2fa80>
  4345fc:	add	x1, x20, x27
  434600:	mov	x0, x23
  434604:	mov	x2, x19
  434608:	bl	404440 <bcmp@plt>
  43460c:	mov	x25, x27
  434610:	cbnz	w0, 4345c4 <wcrtomb@plt+0x2fa84>
  434614:	ldr	x25, [x26, #96]
  434618:	mov	x0, x24
  43461c:	bl	444a68 <argp_parse@@Base+0xd1bc>
  434620:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434624:	mov	x3, x0
  434628:	mov	w1, #0x1                   	// #1
  43462c:	mov	x0, x25
  434630:	add	x2, x2, #0x96b
  434634:	bl	404650 <__fprintf_chk@plt>
  434638:	b	4345e8 <wcrtomb@plt+0x2faa8>
  43463c:	ldr	x0, [x26, #96]
  434640:	ldp	x8, x9, [x0, #40]
  434644:	cmp	x8, x9
  434648:	b.cs	434678 <wcrtomb@plt+0x2fb38>  // b.hs, b.nlast
  43464c:	add	x9, x8, #0x1
  434650:	mov	w10, #0xa                   	// #10
  434654:	str	x9, [x0, #40]
  434658:	strb	w10, [x8]
  43465c:	ldp	x20, x19, [sp, #80]
  434660:	ldp	x22, x21, [sp, #64]
  434664:	ldp	x24, x23, [sp, #48]
  434668:	ldp	x26, x25, [sp, #32]
  43466c:	ldp	x28, x27, [sp, #16]
  434670:	ldp	x29, x30, [sp], #96
  434674:	ret
  434678:	ldp	x20, x19, [sp, #80]
  43467c:	ldp	x22, x21, [sp, #64]
  434680:	ldp	x24, x23, [sp, #48]
  434684:	ldp	x26, x25, [sp, #32]
  434688:	ldp	x28, x27, [sp, #16]
  43468c:	mov	w1, #0xa                   	// #10
  434690:	ldp	x29, x30, [sp], #96
  434694:	b	4045e0 <__overflow@plt>
  434698:	sub	sp, sp, #0x80
  43469c:	stp	x24, x23, [sp, #80]
  4346a0:	mov	x23, x0
  4346a4:	mov	x0, x1
  4346a8:	stp	x29, x30, [sp, #32]
  4346ac:	stp	x28, x27, [sp, #48]
  4346b0:	stp	x26, x25, [sp, #64]
  4346b4:	stp	x22, x21, [sp, #96]
  4346b8:	stp	x20, x19, [sp, #112]
  4346bc:	add	x29, sp, #0x20
  4346c0:	mov	x19, x5
  4346c4:	mov	x20, x4
  4346c8:	mov	x21, x3
  4346cc:	mov	x22, x2
  4346d0:	mov	x24, x1
  4346d4:	bl	403f40 <strlen@plt>
  4346d8:	ldr	x28, [x22]
  4346dc:	cbz	x28, 434774 <wcrtomb@plt+0x2fc34>
  4346e0:	mov	x26, x0
  4346e4:	stur	x23, [x29, #-8]
  4346e8:	stp	x22, x19, [sp, #8]
  4346ec:	mov	w19, wzr
  4346f0:	mov	x25, xzr
  4346f4:	add	x23, x22, #0x8
  4346f8:	mov	x22, #0xffffffffffffffff    	// #-1
  4346fc:	mov	x27, x21
  434700:	b	434718 <wcrtomb@plt+0x2fbd8>
  434704:	mov	x22, x25
  434708:	ldr	x28, [x23, x25, lsl #3]
  43470c:	add	x25, x25, #0x1
  434710:	add	x27, x27, x20
  434714:	cbz	x28, 434764 <wcrtomb@plt+0x2fc24>
  434718:	mov	x0, x28
  43471c:	mov	x1, x24
  434720:	mov	x2, x26
  434724:	bl	404300 <strncmp@plt>
  434728:	cbnz	w0, 434708 <wcrtomb@plt+0x2fbc8>
  43472c:	mov	x0, x28
  434730:	bl	403f40 <strlen@plt>
  434734:	cmp	x0, x26
  434738:	b.eq	434780 <wcrtomb@plt+0x2fc40>  // b.none
  43473c:	cmn	x22, #0x1
  434740:	b.eq	434704 <wcrtomb@plt+0x2fbc4>  // b.none
  434744:	cbz	x21, 43475c <wcrtomb@plt+0x2fc1c>
  434748:	madd	x0, x22, x20, x21
  43474c:	mov	x1, x27
  434750:	mov	x2, x20
  434754:	bl	404440 <bcmp@plt>
  434758:	cbz	w0, 434708 <wcrtomb@plt+0x2fbc8>
  43475c:	mov	w19, #0x1                   	// #1
  434760:	b	434708 <wcrtomb@plt+0x2fbc8>
  434764:	ldur	x23, [x29, #-8]
  434768:	tbnz	w19, #0, 434794 <wcrtomb@plt+0x2fc54>
  43476c:	tbz	x22, #63, 434800 <wcrtomb@plt+0x2fcc0>
  434770:	b	43478c <wcrtomb@plt+0x2fc4c>
  434774:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434778:	add	x1, x1, #0x916
  43477c:	b	4347a0 <wcrtomb@plt+0x2fc60>
  434780:	ldur	x23, [x29, #-8]
  434784:	mov	x22, x25
  434788:	tbz	x22, #63, 434800 <wcrtomb@plt+0x2fcc0>
  43478c:	cmn	x22, #0x1
  434790:	b.eq	434824 <wcrtomb@plt+0x2fce4>  // b.none
  434794:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434798:	add	x1, x1, #0x931
  43479c:	ldp	x22, x19, [sp, #8]
  4347a0:	mov	w2, #0x5                   	// #5
  4347a4:	mov	x0, xzr
  4347a8:	bl	404900 <dcgettext@plt>
  4347ac:	mov	x25, x0
  4347b0:	mov	w1, #0x8                   	// #8
  4347b4:	mov	w0, wzr
  4347b8:	mov	x2, x24
  4347bc:	bl	444564 <argp_parse@@Base+0xccb8>
  4347c0:	mov	x24, x0
  4347c4:	mov	w0, #0x1                   	// #1
  4347c8:	mov	x1, x23
  4347cc:	bl	444a58 <argp_parse@@Base+0xd1ac>
  4347d0:	mov	x4, x0
  4347d4:	mov	w0, wzr
  4347d8:	mov	w1, wzr
  4347dc:	mov	x2, x25
  4347e0:	mov	x3, x24
  4347e4:	bl	403fa0 <error@plt>
  4347e8:	mov	x0, x22
  4347ec:	mov	x1, x21
  4347f0:	mov	x2, x20
  4347f4:	bl	434554 <wcrtomb@plt+0x2fa14>
  4347f8:	blr	x19
  4347fc:	mov	x22, #0xffffffffffffffff    	// #-1
  434800:	mov	x0, x22
  434804:	ldp	x20, x19, [sp, #112]
  434808:	ldp	x22, x21, [sp, #96]
  43480c:	ldp	x24, x23, [sp, #80]
  434810:	ldp	x26, x25, [sp, #64]
  434814:	ldp	x28, x27, [sp, #48]
  434818:	ldp	x29, x30, [sp, #32]
  43481c:	add	sp, sp, #0x80
  434820:	ret
  434824:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434828:	add	x1, x1, #0x916
  43482c:	b	43479c <wcrtomb@plt+0x2fc5c>
  434830:	stp	x29, x30, [sp, #-64]!
  434834:	stp	x22, x21, [sp, #32]
  434838:	stp	x20, x19, [sp, #48]
  43483c:	ldr	x20, [x1]
  434840:	str	x23, [sp, #16]
  434844:	mov	x29, sp
  434848:	cbz	x20, 434898 <wcrtomb@plt+0x2fd58>
  43484c:	mov	x22, x2
  434850:	mov	x23, x1
  434854:	mov	x1, x2
  434858:	mov	x2, x3
  43485c:	mov	x19, x3
  434860:	mov	x21, x0
  434864:	bl	404440 <bcmp@plt>
  434868:	cbz	w0, 434898 <wcrtomb@plt+0x2fd58>
  43486c:	add	x22, x22, x19
  434870:	add	x23, x23, #0x8
  434874:	ldr	x20, [x23]
  434878:	cbz	x20, 434898 <wcrtomb@plt+0x2fd58>
  43487c:	mov	x0, x21
  434880:	mov	x1, x22
  434884:	mov	x2, x19
  434888:	bl	404440 <bcmp@plt>
  43488c:	add	x22, x22, x19
  434890:	add	x23, x23, #0x8
  434894:	cbnz	w0, 434874 <wcrtomb@plt+0x2fd34>
  434898:	mov	x0, x20
  43489c:	ldp	x20, x19, [sp, #48]
  4348a0:	ldp	x22, x21, [sp, #32]
  4348a4:	ldr	x23, [sp, #16]
  4348a8:	ldp	x29, x30, [sp], #64
  4348ac:	ret

00000000004348b0 <argp_help@@Base>:
  4348b0:	mov	x4, x3
  4348b4:	mov	w3, w2
  4348b8:	mov	x2, x1
  4348bc:	mov	x1, xzr
  4348c0:	b	4348c4 <argp_help@@Base+0x14>
  4348c4:	stp	x29, x30, [sp, #-96]!
  4348c8:	stp	x28, x27, [sp, #16]
  4348cc:	stp	x26, x25, [sp, #32]
  4348d0:	stp	x24, x23, [sp, #48]
  4348d4:	stp	x22, x21, [sp, #64]
  4348d8:	stp	x20, x19, [sp, #80]
  4348dc:	mov	x29, sp
  4348e0:	sub	sp, sp, #0x80
  4348e4:	stur	x4, [x29, #-88]
  4348e8:	stur	x0, [x29, #-72]
  4348ec:	cbz	x2, 435c38 <argp_help@@Base+0x1388>
  4348f0:	mov	x0, x2
  4348f4:	mov	w28, w3
  4348f8:	mov	x25, x2
  4348fc:	mov	x22, x1
  434900:	bl	403fe0 <flockfile@plt>
  434904:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  434908:	ldr	w8, [x8, #4060]
  43490c:	stur	w28, [x29, #-76]
  434910:	cbnz	w8, 434de4 <argp_help@@Base+0x534>
  434914:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434918:	add	x0, x0, #0x9f0
  43491c:	bl	404a30 <getenv@plt>
  434920:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  434924:	add	x8, x8, #0xfb8
  434928:	ldp	q0, q1, [x8]
  43492c:	ldr	x8, [x8, #32]
  434930:	stp	q0, q1, [x29, #-48]
  434934:	stur	x8, [x29, #-16]
  434938:	cbz	x0, 434de4 <argp_help@@Base+0x534>
  43493c:	ldrb	w20, [x0]
  434940:	mov	x23, x0
  434944:	cbz	w20, 434cfc <argp_help@@Base+0x44c>
  434948:	bl	404690 <__ctype_b_loc@plt>
  43494c:	adrp	x26, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434950:	mov	x24, x0
  434954:	add	x26, x26, #0xc37
  434958:	b	434984 <argp_help@@Base+0xd4>
  43495c:	ldrb	w8, [x20, #15]
  434960:	sub	x9, x29, #0x30
  434964:	str	w28, [x9, x8]
  434968:	ldur	w28, [x29, #-76]
  43496c:	mov	x8, x19
  434970:	ldrb	w9, [x8], #1
  434974:	cmp	w9, #0x2c
  434978:	csel	x23, x8, x19, eq  // eq = none
  43497c:	ldrb	w20, [x23]
  434980:	cbz	w20, 434cfc <argp_help@@Base+0x44c>
  434984:	ldr	x8, [x24]
  434988:	and	x9, x20, #0xff
  43498c:	ldrh	w9, [x8, x9, lsl #1]
  434990:	tbz	w9, #13, 4349a0 <argp_help@@Base+0xf0>
  434994:	ldrb	w20, [x23, #1]!
  434998:	ldrh	w9, [x8, x20, lsl #1]
  43499c:	tbnz	w9, #13, 434994 <argp_help@@Base+0xe4>
  4349a0:	tbz	w9, #10, 434cb8 <argp_help@@Base+0x408>
  4349a4:	mov	w11, w20
  4349a8:	mov	x10, x23
  4349ac:	b	4349b4 <argp_help@@Base+0x104>
  4349b0:	ldrb	w11, [x10, #1]!
  4349b4:	and	x9, x11, #0xff
  4349b8:	ldrh	w9, [x8, x9, lsl #1]
  4349bc:	tbnz	w9, #3, 4349b0 <argp_help@@Base+0x100>
  4349c0:	and	w12, w11, #0xff
  4349c4:	cmp	w12, #0x5f
  4349c8:	b.eq	4349b0 <argp_help@@Base+0x100>  // b.none
  4349cc:	cmp	w12, #0x2d
  4349d0:	b.eq	4349b0 <argp_help@@Base+0x100>  // b.none
  4349d4:	mov	x19, x10
  4349d8:	tbz	w9, #13, 4349ec <argp_help@@Base+0x13c>
  4349dc:	mov	x19, x10
  4349e0:	ldrb	w11, [x19, #1]!
  4349e4:	ldrh	w9, [x8, x11, lsl #1]
  4349e8:	tbnz	w9, #13, 4349e0 <argp_help@@Base+0x130>
  4349ec:	ands	w11, w11, #0xff
  4349f0:	sub	x27, x10, x23
  4349f4:	b.eq	434a2c <argp_help@@Base+0x17c>  // b.none
  4349f8:	cmp	w11, #0x2c
  4349fc:	b.eq	434a2c <argp_help@@Base+0x17c>  // b.none
  434a00:	cmp	w11, #0x3d
  434a04:	b.ne	434a14 <argp_help@@Base+0x164>  // b.any
  434a08:	ldrb	w9, [x19, #1]!
  434a0c:	ldrh	w9, [x8, x9, lsl #1]
  434a10:	tbnz	w9, #13, 434a08 <argp_help@@Base+0x158>
  434a14:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434a18:	add	x20, x20, #0xc47
  434a1c:	tbnz	w9, #11, 434a80 <argp_help@@Base+0x1d0>
  434a20:	mov	w21, wzr
  434a24:	mov	w28, wzr
  434a28:	b	434abc <argp_help@@Base+0x20c>
  434a2c:	and	w8, w20, #0xff
  434a30:	cmp	w8, #0x6e
  434a34:	b.ne	434a6c <argp_help@@Base+0x1bc>  // b.any
  434a38:	ldrb	w8, [x23, #1]
  434a3c:	cmp	w8, #0x6f
  434a40:	b.ne	434a6c <argp_help@@Base+0x1bc>  // b.any
  434a44:	ldrb	w8, [x23, #2]
  434a48:	cmp	w8, #0x2d
  434a4c:	b.ne	434a6c <argp_help@@Base+0x1bc>  // b.any
  434a50:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434a54:	mov	w28, wzr
  434a58:	add	x23, x23, #0x3
  434a5c:	sub	x27, x27, #0x3
  434a60:	mov	w21, #0x1                   	// #1
  434a64:	add	x20, x20, #0xc47
  434a68:	b	434abc <argp_help@@Base+0x20c>
  434a6c:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434a70:	mov	w21, #0x1                   	// #1
  434a74:	mov	w28, #0x1                   	// #1
  434a78:	add	x20, x20, #0xc47
  434a7c:	b	434abc <argp_help@@Base+0x20c>
  434a80:	mov	w2, #0xa                   	// #10
  434a84:	mov	x0, x19
  434a88:	mov	x1, xzr
  434a8c:	bl	4046c0 <strtol@plt>
  434a90:	ldr	x8, [x24]
  434a94:	mov	x28, x0
  434a98:	sub	x19, x19, #0x1
  434a9c:	ldrb	w9, [x19, #1]!
  434aa0:	ldrh	w9, [x8, x9, lsl #1]
  434aa4:	tbnz	w9, #11, 434a9c <argp_help@@Base+0x1ec>
  434aa8:	tbz	w9, #13, 434ab8 <argp_help@@Base+0x208>
  434aac:	ldrb	w9, [x19, #1]!
  434ab0:	ldrh	w9, [x8, x9, lsl #1]
  434ab4:	tbnz	w9, #13, 434aac <argp_help@@Base+0x1fc>
  434ab8:	mov	w21, wzr
  434abc:	mov	x0, x26
  434ac0:	bl	403f40 <strlen@plt>
  434ac4:	cmp	x0, x27
  434ac8:	b.ne	434ae0 <argp_help@@Base+0x230>  // b.any
  434acc:	mov	x0, x23
  434ad0:	mov	x1, x26
  434ad4:	mov	x2, x27
  434ad8:	bl	404300 <strncmp@plt>
  434adc:	cbz	w0, 434c48 <argp_help@@Base+0x398>
  434ae0:	mov	x0, x20
  434ae4:	bl	403f40 <strlen@plt>
  434ae8:	cmp	x0, x27
  434aec:	b.ne	434b04 <argp_help@@Base+0x254>  // b.any
  434af0:	mov	x0, x23
  434af4:	mov	x1, x20
  434af8:	mov	x2, x27
  434afc:	bl	404300 <strncmp@plt>
  434b00:	cbz	w0, 434c4c <argp_help@@Base+0x39c>
  434b04:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434b08:	add	x20, x20, #0xc57
  434b0c:	mov	x0, x20
  434b10:	bl	403f40 <strlen@plt>
  434b14:	cmp	x0, x27
  434b18:	b.ne	434b30 <argp_help@@Base+0x280>  // b.any
  434b1c:	mov	x0, x23
  434b20:	mov	x1, x20
  434b24:	mov	x2, x27
  434b28:	bl	404300 <strncmp@plt>
  434b2c:	cbz	w0, 434c4c <argp_help@@Base+0x39c>
  434b30:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434b34:	add	x20, x20, #0xc67
  434b38:	mov	x0, x20
  434b3c:	bl	403f40 <strlen@plt>
  434b40:	cmp	x0, x27
  434b44:	b.ne	434b5c <argp_help@@Base+0x2ac>  // b.any
  434b48:	mov	x0, x23
  434b4c:	mov	x1, x20
  434b50:	mov	x2, x27
  434b54:	bl	404300 <strncmp@plt>
  434b58:	cbz	w0, 434c4c <argp_help@@Base+0x39c>
  434b5c:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434b60:	add	x20, x20, #0xc77
  434b64:	mov	x0, x20
  434b68:	bl	403f40 <strlen@plt>
  434b6c:	cmp	x0, x27
  434b70:	b.ne	434b88 <argp_help@@Base+0x2d8>  // b.any
  434b74:	mov	x0, x23
  434b78:	mov	x1, x20
  434b7c:	mov	x2, x27
  434b80:	bl	404300 <strncmp@plt>
  434b84:	cbz	w0, 434c4c <argp_help@@Base+0x39c>
  434b88:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434b8c:	add	x20, x20, #0xc87
  434b90:	mov	x0, x20
  434b94:	bl	403f40 <strlen@plt>
  434b98:	cmp	x0, x27
  434b9c:	b.ne	434bb4 <argp_help@@Base+0x304>  // b.any
  434ba0:	mov	x0, x23
  434ba4:	mov	x1, x20
  434ba8:	mov	x2, x27
  434bac:	bl	404300 <strncmp@plt>
  434bb0:	cbz	w0, 434c4c <argp_help@@Base+0x39c>
  434bb4:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434bb8:	add	x20, x20, #0xc97
  434bbc:	mov	x0, x20
  434bc0:	bl	403f40 <strlen@plt>
  434bc4:	cmp	x0, x27
  434bc8:	b.ne	434be0 <argp_help@@Base+0x330>  // b.any
  434bcc:	mov	x0, x23
  434bd0:	mov	x1, x20
  434bd4:	mov	x2, x27
  434bd8:	bl	404300 <strncmp@plt>
  434bdc:	cbz	w0, 434c4c <argp_help@@Base+0x39c>
  434be0:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434be4:	add	x20, x20, #0xca7
  434be8:	mov	x0, x20
  434bec:	bl	403f40 <strlen@plt>
  434bf0:	cmp	x0, x27
  434bf4:	b.ne	434c0c <argp_help@@Base+0x35c>  // b.any
  434bf8:	mov	x0, x23
  434bfc:	mov	x1, x20
  434c00:	mov	x2, x27
  434c04:	bl	404300 <strncmp@plt>
  434c08:	cbz	w0, 434c4c <argp_help@@Base+0x39c>
  434c0c:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434c10:	add	x20, x20, #0xcb7
  434c14:	mov	x0, x20
  434c18:	bl	403f40 <strlen@plt>
  434c1c:	cmp	x0, x27
  434c20:	b.ne	434c38 <argp_help@@Base+0x388>  // b.any
  434c24:	mov	x0, x23
  434c28:	mov	x1, x20
  434c2c:	mov	x2, x27
  434c30:	bl	404300 <strncmp@plt>
  434c34:	cbz	w0, 434c4c <argp_help@@Base+0x39c>
  434c38:	cbz	x22, 434c80 <argp_help@@Base+0x3d0>
  434c3c:	ldr	x8, [x22]
  434c40:	ldr	x0, [x8, #48]
  434c44:	b	434c84 <argp_help@@Base+0x3d4>
  434c48:	mov	x20, x26
  434c4c:	cbz	w21, 43495c <argp_help@@Base+0xac>
  434c50:	ldrb	w9, [x20, #14]
  434c54:	cbnz	w9, 43495c <argp_help@@Base+0xac>
  434c58:	cbz	x22, 434c68 <argp_help@@Base+0x3b8>
  434c5c:	ldr	x8, [x22]
  434c60:	ldr	x0, [x8, #48]
  434c64:	b	434c6c <argp_help@@Base+0x3bc>
  434c68:	mov	x0, xzr
  434c6c:	ldur	w28, [x29, #-76]
  434c70:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434c74:	mov	w2, #0x5                   	// #5
  434c78:	add	x1, x1, #0x9fe
  434c7c:	b	434c94 <argp_help@@Base+0x3e4>
  434c80:	mov	x0, xzr
  434c84:	ldur	w28, [x29, #-76]
  434c88:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434c8c:	mov	w2, #0x5                   	// #5
  434c90:	add	x1, x1, #0xa2d
  434c94:	bl	404900 <dcgettext@plt>
  434c98:	mov	x3, x0
  434c9c:	mov	x0, x22
  434ca0:	mov	w1, wzr
  434ca4:	mov	w2, wzr
  434ca8:	mov	w4, w27
  434cac:	mov	x5, x23
  434cb0:	bl	435e70 <argp_failure@@Base>
  434cb4:	b	43496c <argp_help@@Base+0xbc>
  434cb8:	tst	w20, #0xff
  434cbc:	b.eq	434cfc <argp_help@@Base+0x44c>  // b.none
  434cc0:	cbz	x22, 434cd0 <argp_help@@Base+0x420>
  434cc4:	ldr	x8, [x22]
  434cc8:	ldr	x0, [x8, #48]
  434ccc:	b	434cd4 <argp_help@@Base+0x424>
  434cd0:	mov	x0, xzr
  434cd4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434cd8:	add	x1, x1, #0xa53
  434cdc:	mov	w2, #0x5                   	// #5
  434ce0:	bl	404900 <dcgettext@plt>
  434ce4:	mov	x3, x0
  434ce8:	mov	x0, x22
  434cec:	mov	w1, wzr
  434cf0:	mov	w2, wzr
  434cf4:	mov	x4, x23
  434cf8:	bl	435e70 <argp_failure@@Base>
  434cfc:	ldur	w9, [x29, #-40]
  434d00:	ldur	w8, [x29, #-16]
  434d04:	cmp	w9, w8
  434d08:	b.ge	434d68 <argp_help@@Base+0x4b8>  // b.tcont
  434d0c:	ldur	w9, [x29, #-36]
  434d10:	cmp	w9, w8
  434d14:	b.ge	434d74 <argp_help@@Base+0x4c4>  // b.tcont
  434d18:	ldur	w9, [x29, #-32]
  434d1c:	cmp	w9, w8
  434d20:	b.ge	434d80 <argp_help@@Base+0x4d0>  // b.tcont
  434d24:	ldur	w9, [x29, #-28]
  434d28:	cmp	w9, w8
  434d2c:	b.ge	434d8c <argp_help@@Base+0x4dc>  // b.tcont
  434d30:	ldur	w9, [x29, #-24]
  434d34:	cmp	w9, w8
  434d38:	b.ge	434d98 <argp_help@@Base+0x4e8>  // b.tcont
  434d3c:	ldur	w9, [x29, #-20]
  434d40:	cmp	w9, w8
  434d44:	b.ge	434da4 <argp_help@@Base+0x4f4>  // b.tcont
  434d48:	ldp	q0, q1, [x29, #-48]
  434d4c:	ldur	w8, [x29, #-16]
  434d50:	adrp	x10, 479000 <_obstack_memory_used@@Base+0x324b0>
  434d54:	mov	w9, #0x1                   	// #1
  434d58:	add	x10, x10, #0xfb8
  434d5c:	stp	q0, q1, [x10]
  434d60:	stp	w8, w9, [x10, #32]
  434d64:	b	434de4 <argp_help@@Base+0x534>
  434d68:	adrp	x19, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434d6c:	add	x19, x19, #0xc57
  434d70:	b	434dac <argp_help@@Base+0x4fc>
  434d74:	adrp	x19, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434d78:	add	x19, x19, #0xc67
  434d7c:	b	434dac <argp_help@@Base+0x4fc>
  434d80:	adrp	x19, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434d84:	add	x19, x19, #0xc77
  434d88:	b	434dac <argp_help@@Base+0x4fc>
  434d8c:	adrp	x19, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434d90:	add	x19, x19, #0xc87
  434d94:	b	434dac <argp_help@@Base+0x4fc>
  434d98:	adrp	x19, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434d9c:	add	x19, x19, #0xc97
  434da0:	b	434dac <argp_help@@Base+0x4fc>
  434da4:	adrp	x19, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434da8:	add	x19, x19, #0xca7
  434dac:	ldr	x8, [x22]
  434db0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434db4:	add	x1, x1, #0xa70
  434db8:	mov	w2, #0x5                   	// #5
  434dbc:	ldr	x0, [x8, #48]
  434dc0:	bl	404900 <dcgettext@plt>
  434dc4:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434dc8:	mov	x3, x0
  434dcc:	add	x4, x4, #0xaa4
  434dd0:	mov	x0, x22
  434dd4:	mov	w1, wzr
  434dd8:	mov	w2, wzr
  434ddc:	mov	x5, x19
  434de0:	bl	435e70 <argp_failure@@Base>
  434de4:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  434de8:	ldrsw	x2, [x8, #4056]
  434dec:	mov	x0, x25
  434df0:	mov	x1, xzr
  434df4:	mov	x3, xzr
  434df8:	bl	4569f8 <_obstack_memory_used@@Base+0xfea8>
  434dfc:	cbz	x0, 434f44 <argp_help@@Base+0x694>
  434e00:	mov	w8, #0xb                   	// #11
  434e04:	mov	x23, x0
  434e08:	tst	w28, w8
  434e0c:	stur	x25, [x29, #-128]
  434e10:	b.eq	434f68 <argp_help@@Base+0x6b8>  // b.none
  434e14:	ldur	x0, [x29, #-72]
  434e18:	mov	x1, xzr
  434e1c:	bl	4360a0 <argp_failure@@Base+0x230>
  434e20:	ldr	w19, [x0, #8]
  434e24:	stur	x0, [x29, #-96]
  434e28:	cbz	w19, 434f6c <argp_help@@Base+0x6bc>
  434e2c:	ldr	x26, [x0]
  434e30:	adrp	x27, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434e34:	mov	w20, w19
  434e38:	add	x27, x27, #0x985
  434e3c:	mov	w24, w19
  434e40:	mov	x21, x26
  434e44:	b	434e54 <argp_help@@Base+0x5a4>
  434e48:	sub	w24, w24, #0x1
  434e4c:	add	x21, x21, #0x38
  434e50:	cbz	w24, 434e98 <argp_help@@Base+0x5e8>
  434e54:	ldr	w25, [x21, #8]
  434e58:	cbz	w25, 434e48 <argp_help@@Base+0x598>
  434e5c:	ldr	x28, [x21]
  434e60:	b	434e70 <argp_help@@Base+0x5c0>
  434e64:	sub	w25, w25, #0x1
  434e68:	add	x28, x28, #0x30
  434e6c:	cbz	w25, 434e48 <argp_help@@Base+0x598>
  434e70:	ldr	x0, [x28]
  434e74:	cbz	x0, 434e64 <argp_help@@Base+0x5b4>
  434e78:	ldrb	w8, [x28, #24]
  434e7c:	tbnz	w8, #1, 434e64 <argp_help@@Base+0x5b4>
  434e80:	mov	x1, x27
  434e84:	bl	404660 <strcmp@plt>
  434e88:	cbnz	w0, 434e64 <argp_help@@Base+0x5b4>
  434e8c:	cbz	x21, 434e98 <argp_help@@Base+0x5e8>
  434e90:	mov	w8, #0xffffffff            	// #-1
  434e94:	str	w8, [x21, #24]
  434e98:	ldur	w28, [x29, #-76]
  434e9c:	adrp	x27, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434ea0:	add	x27, x27, #0xf55
  434ea4:	mov	x21, x26
  434ea8:	b	434eb8 <argp_help@@Base+0x608>
  434eac:	sub	w20, w20, #0x1
  434eb0:	add	x21, x21, #0x38
  434eb4:	cbz	w20, 434efc <argp_help@@Base+0x64c>
  434eb8:	ldr	w24, [x21, #8]
  434ebc:	cbz	w24, 434eac <argp_help@@Base+0x5fc>
  434ec0:	ldr	x25, [x21]
  434ec4:	b	434ed4 <argp_help@@Base+0x624>
  434ec8:	sub	w24, w24, #0x1
  434ecc:	add	x25, x25, #0x30
  434ed0:	cbz	w24, 434eac <argp_help@@Base+0x5fc>
  434ed4:	ldr	x0, [x25]
  434ed8:	cbz	x0, 434ec8 <argp_help@@Base+0x618>
  434edc:	ldrb	w8, [x25, #24]
  434ee0:	tbnz	w8, #1, 434ec8 <argp_help@@Base+0x618>
  434ee4:	mov	x1, x27
  434ee8:	bl	404660 <strcmp@plt>
  434eec:	cbnz	w0, 434ec8 <argp_help@@Base+0x618>
  434ef0:	cbz	x21, 434efc <argp_help@@Base+0x64c>
  434ef4:	mov	w8, #0xffffffff            	// #-1
  434ef8:	str	w8, [x21, #24]
  434efc:	subs	w8, w19, #0x1
  434f00:	b.eq	435234 <argp_help@@Base+0x984>  // b.none
  434f04:	add	x11, x8, #0x1
  434f08:	mov	w9, #0x38                  	// #56
  434f0c:	and	x8, x11, #0x1fffffffe
  434f10:	mov	x10, xzr
  434f14:	madd	x9, x8, x9, x26
  434f18:	add	x12, x26, #0x68
  434f1c:	add	w13, w10, #0x1
  434f20:	stur	w10, [x12, #-56]
  434f24:	add	x10, x10, #0x2
  434f28:	str	w13, [x12], #112
  434f2c:	cmp	x8, x10
  434f30:	b.ne	434f1c <argp_help@@Base+0x66c>  // b.any
  434f34:	ldur	x25, [x29, #-128]
  434f38:	cmp	x11, x8
  434f3c:	b.ne	43523c <argp_help@@Base+0x98c>  // b.any
  434f40:	b	435250 <argp_help@@Base+0x9a0>
  434f44:	mov	x0, x25
  434f48:	mov	sp, x29
  434f4c:	ldp	x20, x19, [sp, #80]
  434f50:	ldp	x22, x21, [sp, #64]
  434f54:	ldp	x24, x23, [sp, #48]
  434f58:	ldp	x26, x25, [sp, #32]
  434f5c:	ldp	x28, x27, [sp, #16]
  434f60:	ldp	x29, x30, [sp], #96
  434f64:	b	404270 <funlockfile@plt>
  434f68:	stur	xzr, [x29, #-96]
  434f6c:	tst	w28, #0x3
  434f70:	b.eq	435270 <argp_help@@Base+0x9c0>  // b.none
  434f74:	ldur	x0, [x29, #-72]
  434f78:	bl	4365d4 <argp_failure@@Base+0x764>
  434f7c:	add	x9, x0, #0xf
  434f80:	mov	x8, sp
  434f84:	and	x9, x9, #0xfffffffffffffff0
  434f88:	sub	x19, x8, x9
  434f8c:	mov	x2, x0
  434f90:	mov	sp, x19
  434f94:	mov	x0, x19
  434f98:	mov	w1, wzr
  434f9c:	bl	404360 <memset@plt>
  434fa0:	adrp	x24, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434fa4:	adrp	x26, 45c000 <_obstack_memory_used@@Base+0x154b0>
  434fa8:	adrp	x25, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  434fac:	add	x24, x24, #0x98a
  434fb0:	adrp	x21, 479000 <_obstack_memory_used@@Base+0x324b0>
  434fb4:	add	x26, x26, #0xfa0
  434fb8:	add	x25, x25, #0x991
  434fbc:	b	434fd8 <argp_help@@Base+0x728>
  434fc0:	add	x9, x8, #0x1
  434fc4:	str	x9, [x23, #56]
  434fc8:	mov	w9, #0xa                   	// #10
  434fcc:	strb	w9, [x8]
  434fd0:	mov	x24, x25
  434fd4:	cbz	w28, 435170 <argp_help@@Base+0x8c0>
  434fd8:	ldp	x9, x8, [x23, #48]
  434fdc:	ldr	x10, [x23, #32]
  434fe0:	ldrsw	x27, [x21, #4052]
  434fe4:	sub	x8, x8, x9
  434fe8:	cmp	x8, x10
  434fec:	b.ls	434ff8 <argp_help@@Base+0x748>  // b.plast
  434ff0:	mov	x0, x23
  434ff4:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  434ff8:	ldur	x8, [x29, #-72]
  434ffc:	ldr	x20, [x23, #24]
  435000:	str	x27, [x23, #24]
  435004:	stur	x19, [x29, #-48]
  435008:	ldr	x0, [x8, #48]
  43500c:	mov	w2, #0x5                   	// #5
  435010:	mov	x1, x24
  435014:	bl	404900 <dcgettext@plt>
  435018:	ldur	x3, [x29, #-88]
  43501c:	mov	x2, x0
  435020:	mov	x0, x23
  435024:	mov	x1, x26
  435028:	bl	457030 <_obstack_memory_used@@Base+0x104e0>
  43502c:	ldp	x9, x8, [x23, #48]
  435030:	ldr	x10, [x23, #32]
  435034:	ldrsw	x24, [x21, #4052]
  435038:	ldur	w28, [x29, #-76]
  43503c:	sub	x8, x8, x9
  435040:	cmp	x8, x10
  435044:	b.ls	435050 <argp_help@@Base+0x7a0>  // b.plast
  435048:	mov	x0, x23
  43504c:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  435050:	ldr	x27, [x23, #8]
  435054:	str	x24, [x23, #8]
  435058:	tbnz	w28, #1, 435074 <argp_help@@Base+0x7c4>
  43505c:	ldur	x0, [x29, #-96]
  435060:	mov	x1, x23
  435064:	bl	436640 <argp_failure@@Base+0x7d0>
  435068:	orr	w28, w28, #0x2
  43506c:	stur	w28, [x29, #-76]
  435070:	b	4350e4 <argp_help@@Base+0x834>
  435074:	ldur	x8, [x29, #-96]
  435078:	ldr	w8, [x8, #8]
  43507c:	cbz	w8, 4350e4 <argp_help@@Base+0x834>
  435080:	ldur	x8, [x29, #-72]
  435084:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  435088:	mov	w2, #0x5                   	// #5
  43508c:	add	x1, x1, #0x998
  435090:	ldr	x0, [x8, #48]
  435094:	bl	404900 <dcgettext@plt>
  435098:	mov	x24, x0
  43509c:	bl	403f40 <strlen@plt>
  4350a0:	cbz	x0, 4350e4 <argp_help@@Base+0x834>
  4350a4:	mov	x28, x0
  4350a8:	ldp	x0, x8, [x23, #56]
  4350ac:	add	x9, x0, x28
  4350b0:	cmp	x9, x8
  4350b4:	b.ls	4350cc <argp_help@@Base+0x81c>  // b.plast
  4350b8:	mov	x0, x23
  4350bc:	mov	x1, x28
  4350c0:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  4350c4:	cbz	w0, 4350e4 <argp_help@@Base+0x834>
  4350c8:	ldr	x0, [x23, #56]
  4350cc:	mov	x1, x24
  4350d0:	mov	x2, x28
  4350d4:	bl	403ec0 <memcpy@plt>
  4350d8:	ldr	x8, [x23, #56]
  4350dc:	add	x8, x8, x28
  4350e0:	str	x8, [x23, #56]
  4350e4:	ldur	x0, [x29, #-72]
  4350e8:	sub	x2, x29, #0x30
  4350ec:	mov	w3, #0x1                   	// #1
  4350f0:	mov	x1, x22
  4350f4:	mov	x4, x23
  4350f8:	bl	4369d4 <argp_failure@@Base+0xb64>
  4350fc:	ldp	x10, x8, [x23, #48]
  435100:	ldr	x9, [x23, #32]
  435104:	mov	w28, w0
  435108:	sxtw	x20, w20
  43510c:	sub	x10, x8, x10
  435110:	cmp	x10, x9
  435114:	b.ls	43512c <argp_help@@Base+0x87c>  // b.plast
  435118:	mov	x0, x23
  43511c:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  435120:	ldp	x10, x8, [x23, #48]
  435124:	ldr	x9, [x23, #32]
  435128:	sub	x10, x8, x10
  43512c:	str	x20, [x23, #24]
  435130:	cmp	x10, x9
  435134:	sxtw	x20, w27
  435138:	b.ls	435148 <argp_help@@Base+0x898>  // b.plast
  43513c:	mov	x0, x23
  435140:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  435144:	ldr	x8, [x23, #56]
  435148:	ldr	x9, [x23, #64]
  43514c:	str	x20, [x23, #8]
  435150:	cmp	x8, x9
  435154:	b.cc	434fc0 <argp_help@@Base+0x710>  // b.lo, b.ul, b.last
  435158:	mov	w1, #0x1                   	// #1
  43515c:	mov	x0, x23
  435160:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  435164:	cbz	w0, 434fd0 <argp_help@@Base+0x720>
  435168:	ldr	x8, [x23, #56]
  43516c:	b	434fc0 <argp_help@@Base+0x710>
  435170:	ldur	x25, [x29, #-128]
  435174:	ldur	w28, [x29, #-76]
  435178:	mov	w19, #0x1                   	// #1
  43517c:	tbz	w28, #4, 4351a0 <argp_help@@Base+0x8f0>
  435180:	ldur	x0, [x29, #-72]
  435184:	mov	w4, #0x1                   	// #1
  435188:	mov	x1, x22
  43518c:	mov	w2, wzr
  435190:	mov	w3, wzr
  435194:	mov	x5, x23
  435198:	bl	436c6c <argp_failure@@Base+0xdfc>
  43519c:	orr	w19, w0, w19
  4351a0:	tbnz	w28, #2, 4351ac <argp_help@@Base+0x8fc>
  4351a4:	tbnz	w28, #3, 4351e0 <argp_help@@Base+0x930>
  4351a8:	b	435b58 <argp_help@@Base+0x12a8>
  4351ac:	ldur	x8, [x29, #-72]
  4351b0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4351b4:	add	x1, x1, #0x9a5
  4351b8:	mov	w2, #0x5                   	// #5
  4351bc:	ldr	x0, [x8, #48]
  4351c0:	bl	404900 <dcgettext@plt>
  4351c4:	ldur	x2, [x29, #-88]
  4351c8:	mov	x1, x0
  4351cc:	mov	x0, x23
  4351d0:	mov	x3, x2
  4351d4:	bl	457030 <_obstack_memory_used@@Base+0x104e0>
  4351d8:	mov	w19, #0x1                   	// #1
  4351dc:	tbz	w28, #3, 435b58 <argp_help@@Base+0x12a8>
  4351e0:	ldur	x8, [x29, #-96]
  4351e4:	ldr	w20, [x8, #8]
  4351e8:	cbz	w20, 435b58 <argp_help@@Base+0x12a8>
  4351ec:	cbz	w19, 43527c <argp_help@@Base+0x9cc>
  4351f0:	ldp	x8, x9, [x23, #56]
  4351f4:	cmp	x8, x9
  4351f8:	b.cc	435210 <argp_help@@Base+0x960>  // b.lo, b.ul, b.last
  4351fc:	mov	w1, #0x1                   	// #1
  435200:	mov	x0, x23
  435204:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  435208:	cbz	w0, 435220 <argp_help@@Base+0x970>
  43520c:	ldr	x8, [x23, #56]
  435210:	add	x9, x8, #0x1
  435214:	mov	w10, #0xa                   	// #10
  435218:	str	x9, [x23, #56]
  43521c:	strb	w10, [x8]
  435220:	ldur	x8, [x29, #-96]
  435224:	ldr	w20, [x8, #8]
  435228:	stp	xzr, xzr, [x29, #-64]
  43522c:	cbnz	w20, 435280 <argp_help@@Base+0x9d0>
  435230:	b	435b50 <argp_help@@Base+0x12a0>
  435234:	ldur	x25, [x29, #-128]
  435238:	mov	x9, x26
  43523c:	add	x9, x9, #0x30
  435240:	str	w8, [x9], #56
  435244:	add	w8, w8, #0x1
  435248:	cmp	w19, w8
  43524c:	b.ne	435240 <argp_help@@Base+0x990>  // b.any
  435250:	adrp	x3, 437000 <argp_failure@@Base+0x1190>
  435254:	add	x3, x3, #0x48
  435258:	mov	w2, #0x38                  	// #56
  43525c:	mov	x0, x26
  435260:	mov	x1, x19
  435264:	bl	4040f0 <qsort@plt>
  435268:	tst	w28, #0x3
  43526c:	b.ne	434f74 <argp_help@@Base+0x6c4>  // b.any
  435270:	mov	w19, wzr
  435274:	tbnz	w28, #4, 435180 <argp_help@@Base+0x8d0>
  435278:	b	4351a0 <argp_help@@Base+0x8f0>
  43527c:	stp	xzr, xzr, [x29, #-64]
  435280:	ldur	x8, [x29, #-96]
  435284:	add	x26, x23, #0x38
  435288:	stur	x22, [x29, #-120]
  43528c:	stur	w28, [x29, #-76]
  435290:	ldr	x25, [x8]
  435294:	b	4352a8 <argp_help@@Base+0x9f8>
  435298:	subs	w20, w20, #0x1
  43529c:	add	x25, x25, #0x38
  4352a0:	str	x19, [x23, #24]
  4352a4:	b.eq	4359f8 <argp_help@@Base+0x1148>  // b.none
  4352a8:	stur	w20, [x29, #-100]
  4352ac:	ldp	x9, x8, [x23, #48]
  4352b0:	ldr	x10, [x23, #32]
  4352b4:	ldr	x21, [x25]
  4352b8:	ldr	x19, [x25, #16]
  4352bc:	sub	x8, x8, x9
  4352c0:	cmp	x8, x10
  4352c4:	b.ls	4352d0 <argp_help@@Base+0xa20>  // b.plast
  4352c8:	mov	x0, x23
  4352cc:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  4352d0:	sub	x8, x29, #0x40
  4352d4:	ldr	x9, [x23, #8]
  4352d8:	str	xzr, [x23, #8]
  4352dc:	ldr	x11, [x23, #24]
  4352e0:	stur	x8, [x29, #-32]
  4352e4:	mov	w8, #0x1                   	// #1
  4352e8:	stp	x25, x23, [x29, #-48]
  4352ec:	stur	w8, [x29, #-24]
  4352f0:	stur	x22, [x29, #-16]
  4352f4:	ldrb	w8, [x21, #24]
  4352f8:	stur	x11, [x29, #-112]
  4352fc:	stur	x9, [x29, #-88]
  435300:	tbnz	w8, #3, 435338 <argp_help@@Base+0xa88>
  435304:	ldr	w8, [x25, #8]
  435308:	cbz	w8, 435338 <argp_help@@Base+0xa88>
  43530c:	mov	x9, x21
  435310:	b	435320 <argp_help@@Base+0xa70>
  435314:	subs	w8, w8, #0x1
  435318:	add	x9, x9, #0x30
  43531c:	b.eq	435338 <argp_help@@Base+0xa88>  // b.none
  435320:	ldr	x10, [x9]
  435324:	cbz	x10, 435314 <argp_help@@Base+0xa64>
  435328:	ldrb	w10, [x9, #24]
  43532c:	tbnz	w10, #1, 435314 <argp_help@@Base+0xa64>
  435330:	mov	w24, #0x1                   	// #1
  435334:	b	43533c <argp_help@@Base+0xa8c>
  435338:	mov	w24, wzr
  43533c:	ldp	x9, x8, [x23, #48]
  435340:	ldr	x10, [x23, #32]
  435344:	adrp	x11, 479000 <_obstack_memory_used@@Base+0x324b0>
  435348:	ldrsw	x20, [x11, #4032]
  43534c:	sub	x8, x8, x9
  435350:	mov	x22, x26
  435354:	cmp	x8, x10
  435358:	b.ls	435364 <argp_help@@Base+0xab4>  // b.plast
  43535c:	mov	x0, x23
  435360:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  435364:	str	x20, [x23, #24]
  435368:	ldr	w28, [x25, #8]
  43536c:	cbz	w28, 4354b0 <argp_help@@Base+0xc00>
  435370:	add	x20, x21, #0x18
  435374:	b	435394 <argp_help@@Base+0xae4>
  435378:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43537c:	add	x1, x1, #0xc23
  435380:	bl	457030 <_obstack_memory_used@@Base+0x104e0>
  435384:	add	x19, x19, #0x1
  435388:	subs	w28, w28, #0x1
  43538c:	add	x20, x20, #0x30
  435390:	b.eq	4354b0 <argp_help@@Base+0xc00>  // b.none
  435394:	ldr	w26, [x20]
  435398:	tbnz	w26, #3, 435388 <argp_help@@Base+0xad8>
  43539c:	ldur	w27, [x20, #-16]
  4353a0:	sub	w8, w27, #0x1
  4353a4:	cmp	w8, #0xfe
  4353a8:	b.hi	435388 <argp_help@@Base+0xad8>  // b.pmore
  4353ac:	bl	404690 <__ctype_b_loc@plt>
  4353b0:	ldr	x8, [x0]
  4353b4:	ldrh	w8, [x8, x27, lsl #1]
  4353b8:	tbz	w8, #14, 435388 <argp_help@@Base+0xad8>
  4353bc:	ldrb	w8, [x19]
  4353c0:	cmp	w27, w8
  4353c4:	b.ne	435388 <argp_help@@Base+0xad8>  // b.any
  4353c8:	tbnz	w26, #1, 435384 <argp_help@@Base+0xad4>
  4353cc:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4353d0:	ldr	w0, [x8, #4032]
  4353d4:	sub	x1, x29, #0x30
  4353d8:	bl	437430 <argp_failure@@Base+0x15c0>
  4353dc:	ldp	x8, x9, [x23, #56]
  4353e0:	mov	x26, x22
  4353e4:	cmp	x8, x9
  4353e8:	b.cc	435400 <argp_help@@Base+0xb50>  // b.lo, b.ul, b.last
  4353ec:	mov	w1, #0x1                   	// #1
  4353f0:	mov	x0, x23
  4353f4:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  4353f8:	cbz	w0, 435410 <argp_help@@Base+0xb60>
  4353fc:	ldr	x8, [x26]
  435400:	add	x9, x8, #0x1
  435404:	str	x9, [x26]
  435408:	mov	w9, #0x2d                  	// #45
  43540c:	strb	w9, [x8]
  435410:	ldp	x8, x9, [x23, #56]
  435414:	ldrb	w26, [x19]
  435418:	cmp	x8, x9
  43541c:	b.cc	435434 <argp_help@@Base+0xb84>  // b.lo, b.ul, b.last
  435420:	mov	w1, #0x1                   	// #1
  435424:	mov	x0, x23
  435428:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  43542c:	cbz	w0, 435440 <argp_help@@Base+0xb90>
  435430:	ldr	x8, [x22]
  435434:	add	x9, x8, #0x1
  435438:	str	x9, [x22]
  43543c:	strb	w26, [x8]
  435440:	cbz	w24, 435464 <argp_help@@Base+0xbb4>
  435444:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  435448:	ldr	w8, [x8, #4024]
  43544c:	cbnz	w8, 435464 <argp_help@@Base+0xbb4>
  435450:	ldr	x8, [x21, #16]
  435454:	cbz	x8, 435384 <argp_help@@Base+0xad4>
  435458:	mov	w8, #0x1                   	// #1
  43545c:	stur	w8, [x29, #-52]
  435460:	b	435384 <argp_help@@Base+0xad4>
  435464:	ldur	x8, [x29, #-120]
  435468:	cbz	x8, 435480 <argp_help@@Base+0xbd0>
  43546c:	ldr	x8, [x8]
  435470:	ldr	x0, [x8, #48]
  435474:	ldr	x1, [x21, #16]
  435478:	cbnz	x1, 43548c <argp_help@@Base+0xbdc>
  43547c:	b	435384 <argp_help@@Base+0xad4>
  435480:	mov	x0, xzr
  435484:	ldr	x1, [x21, #16]
  435488:	cbz	x1, 435384 <argp_help@@Base+0xad4>
  43548c:	ldr	w26, [x21, #24]
  435490:	mov	w2, #0x5                   	// #5
  435494:	bl	404900 <dcgettext@plt>
  435498:	mov	x2, x0
  43549c:	mov	x0, x23
  4354a0:	tbnz	w26, #0, 435378 <argp_help@@Base+0xac8>
  4354a4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4354a8:	add	x1, x1, #0x7a3
  4354ac:	b	435380 <argp_help@@Base+0xad0>
  4354b0:	ldrb	w8, [x21, #24]
  4354b4:	tbnz	w8, #3, 43558c <argp_help@@Base+0xcdc>
  4354b8:	ldp	x9, x8, [x23, #48]
  4354bc:	ldr	x10, [x23, #32]
  4354c0:	adrp	x11, 479000 <_obstack_memory_used@@Base+0x324b0>
  4354c4:	ldrsw	x19, [x11, #4036]
  4354c8:	sub	x8, x8, x9
  4354cc:	cmp	x8, x10
  4354d0:	b.ls	4354dc <argp_help@@Base+0xc2c>  // b.plast
  4354d4:	mov	x0, x23
  4354d8:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  4354dc:	str	x19, [x23, #24]
  4354e0:	ldr	w19, [x25, #8]
  4354e4:	mov	x26, x22
  4354e8:	ldur	x22, [x29, #-120]
  4354ec:	cbz	w19, 435668 <argp_help@@Base+0xdb8>
  4354f0:	mov	x20, x21
  4354f4:	b	435510 <argp_help@@Base+0xc60>
  4354f8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4354fc:	add	x1, x1, #0x165
  435500:	bl	457030 <_obstack_memory_used@@Base+0x104e0>
  435504:	subs	w19, w19, #0x1
  435508:	add	x20, x20, #0x30
  43550c:	b.eq	435668 <argp_help@@Base+0xdb8>  // b.none
  435510:	ldr	x8, [x20]
  435514:	cbz	x8, 435504 <argp_help@@Base+0xc54>
  435518:	ldrb	w8, [x20, #24]
  43551c:	tbnz	w8, #1, 435504 <argp_help@@Base+0xc54>
  435520:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  435524:	ldr	w0, [x8, #4036]
  435528:	sub	x1, x29, #0x30
  43552c:	bl	437430 <argp_failure@@Base+0x15c0>
  435530:	ldr	x2, [x20]
  435534:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  435538:	mov	x0, x23
  43553c:	add	x1, x1, #0xc28
  435540:	bl	457030 <_obstack_memory_used@@Base+0x104e0>
  435544:	cbz	x22, 43555c <argp_help@@Base+0xcac>
  435548:	ldr	x8, [x22]
  43554c:	ldr	x0, [x8, #48]
  435550:	ldr	x1, [x21, #16]
  435554:	cbnz	x1, 435568 <argp_help@@Base+0xcb8>
  435558:	b	435504 <argp_help@@Base+0xc54>
  43555c:	mov	x0, xzr
  435560:	ldr	x1, [x21, #16]
  435564:	cbz	x1, 435504 <argp_help@@Base+0xc54>
  435568:	ldr	w24, [x21, #24]
  43556c:	mov	w2, #0x5                   	// #5
  435570:	bl	404900 <dcgettext@plt>
  435574:	mov	x2, x0
  435578:	mov	x0, x23
  43557c:	tbz	w24, #0, 4354f8 <argp_help@@Base+0xc48>
  435580:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  435584:	add	x1, x1, #0xc2d
  435588:	b	435500 <argp_help@@Base+0xc50>
  43558c:	ldp	x9, x8, [x23, #48]
  435590:	ldr	x10, [x23, #32]
  435594:	adrp	x11, 479000 <_obstack_memory_used@@Base+0x324b0>
  435598:	ldrsw	x19, [x11, #4040]
  43559c:	sub	x8, x8, x9
  4355a0:	cmp	x8, x10
  4355a4:	b.ls	4355b0 <argp_help@@Base+0xd00>  // b.plast
  4355a8:	mov	x0, x23
  4355ac:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  4355b0:	str	x19, [x23, #24]
  4355b4:	ldr	w20, [x25, #8]
  4355b8:	mov	x26, x22
  4355bc:	ldur	x22, [x29, #-120]
  4355c0:	cbz	w20, 435668 <argp_help@@Base+0xdb8>
  4355c4:	mov	x28, x21
  4355c8:	b	4355f0 <argp_help@@Base+0xd40>
  4355cc:	mov	x1, x19
  4355d0:	mov	x2, x24
  4355d4:	bl	403ec0 <memcpy@plt>
  4355d8:	ldr	x8, [x26]
  4355dc:	add	x8, x8, x24
  4355e0:	str	x8, [x26]
  4355e4:	subs	w20, w20, #0x1
  4355e8:	add	x28, x28, #0x30
  4355ec:	b.eq	435668 <argp_help@@Base+0xdb8>  // b.none
  4355f0:	ldr	x8, [x28]
  4355f4:	cbz	x8, 4355e4 <argp_help@@Base+0xd34>
  4355f8:	ldrb	w8, [x28, #24]
  4355fc:	tbnz	w8, #1, 4355e4 <argp_help@@Base+0xd34>
  435600:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  435604:	ldr	w0, [x8, #4040]
  435608:	sub	x1, x29, #0x30
  43560c:	bl	437430 <argp_failure@@Base+0x15c0>
  435610:	cbz	x22, 435620 <argp_help@@Base+0xd70>
  435614:	ldr	x8, [x22]
  435618:	ldr	x0, [x8, #48]
  43561c:	b	435624 <argp_help@@Base+0xd74>
  435620:	mov	x0, xzr
  435624:	ldr	x1, [x28]
  435628:	mov	w2, #0x5                   	// #5
  43562c:	bl	404900 <dcgettext@plt>
  435630:	mov	x19, x0
  435634:	bl	403f40 <strlen@plt>
  435638:	cbz	x0, 4355e4 <argp_help@@Base+0xd34>
  43563c:	mov	x24, x0
  435640:	ldp	x0, x8, [x23, #56]
  435644:	add	x9, x0, x24
  435648:	cmp	x9, x8
  43564c:	b.ls	4355cc <argp_help@@Base+0xd1c>  // b.plast
  435650:	mov	x0, x23
  435654:	mov	x1, x24
  435658:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  43565c:	cbz	w0, 4355e4 <argp_help@@Base+0xd34>
  435660:	ldr	x0, [x26]
  435664:	b	4355cc <argp_help@@Base+0xd1c>
  435668:	ldp	x9, x8, [x23, #48]
  43566c:	ldr	x10, [x23, #32]
  435670:	sub	x8, x8, x9
  435674:	cmp	x8, x10
  435678:	b.ls	435684 <argp_help@@Base+0xdd4>  // b.plast
  43567c:	mov	x0, x23
  435680:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  435684:	str	xzr, [x23, #8]
  435688:	ldur	w8, [x29, #-24]
  43568c:	ldur	w28, [x29, #-76]
  435690:	cbz	w8, 4356d8 <argp_help@@Base+0xe28>
  435694:	ldrb	w8, [x21, #24]
  435698:	tbnz	w8, #3, 4356bc <argp_help@@Base+0xe0c>
  43569c:	ldr	w19, [x21, #8]
  4356a0:	sub	w8, w19, #0x1
  4356a4:	cmp	w8, #0xfe
  4356a8:	b.hi	4356bc <argp_help@@Base+0xe0c>  // b.pmore
  4356ac:	bl	404690 <__ctype_b_loc@plt>
  4356b0:	ldr	x8, [x0]
  4356b4:	ldrh	w8, [x8, x19, lsl #1]
  4356b8:	tbnz	w8, #14, 4359a4 <argp_help@@Base+0x10f4>
  4356bc:	ldr	x8, [x21]
  4356c0:	cbnz	x8, 4359a4 <argp_help@@Base+0x10f4>
  4356c4:	ldr	x0, [x21, #32]
  4356c8:	ldr	x1, [x25, #40]
  4356cc:	sub	x2, x29, #0x30
  4356d0:	bl	437604 <argp_failure@@Base+0x1794>
  4356d4:	b	4359a0 <argp_help@@Base+0x10f0>
  4356d8:	ldr	x1, [x21, #32]
  4356dc:	cbz	x1, 4356f0 <argp_help@@Base+0xe40>
  4356e0:	cbz	x22, 4356f8 <argp_help@@Base+0xe48>
  4356e4:	ldr	x8, [x22]
  4356e8:	ldr	x0, [x8, #48]
  4356ec:	b	4356fc <argp_help@@Base+0xe4c>
  4356f0:	mov	x27, xzr
  4356f4:	b	435708 <argp_help@@Base+0xe58>
  4356f8:	mov	x0, xzr
  4356fc:	mov	w2, #0x5                   	// #5
  435700:	bl	404900 <dcgettext@plt>
  435704:	mov	x27, x0
  435708:	ldr	x24, [x25, #40]
  43570c:	mov	x19, x27
  435710:	cbz	x24, 435748 <argp_help@@Base+0xe98>
  435714:	ldr	x8, [x24, #40]
  435718:	mov	x19, x27
  43571c:	cbz	x8, 435748 <argp_help@@Base+0xe98>
  435720:	ldr	w19, [x21, #8]
  435724:	mov	x0, x24
  435728:	mov	x1, x22
  43572c:	bl	4383a0 <argp_parse@@Base+0xaf4>
  435730:	ldr	x8, [x24, #40]
  435734:	mov	x2, x0
  435738:	mov	w0, w19
  43573c:	mov	x1, x27
  435740:	blr	x8
  435744:	mov	x19, x0
  435748:	cbz	x19, 43594c <argp_help@@Base+0x109c>
  43574c:	ldrb	w8, [x19]
  435750:	cbz	w8, 43593c <argp_help@@Base+0x108c>
  435754:	ldp	x10, x9, [x23, #48]
  435758:	ldr	x8, [x23, #32]
  43575c:	sub	x9, x9, x10
  435760:	cmp	x9, x8
  435764:	b.ls	43577c <argp_help@@Base+0xecc>  // b.plast
  435768:	mov	x0, x23
  43576c:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  435770:	ldp	x10, x9, [x23, #48]
  435774:	ldr	x8, [x23, #32]
  435778:	sub	x9, x9, x10
  43577c:	adrp	x11, 479000 <_obstack_memory_used@@Base+0x324b0>
  435780:	ldr	x10, [x23, #40]
  435784:	ldr	w20, [x11, #4044]
  435788:	cmp	x10, #0x0
  43578c:	sxtw	x24, w20
  435790:	csel	w21, w10, wzr, gt
  435794:	cmp	x9, x8
  435798:	mov	x28, x24
  43579c:	b.ls	4357c0 <argp_help@@Base+0xf10>  // b.plast
  4357a0:	mov	x0, x23
  4357a4:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  4357a8:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4357ac:	ldr	w20, [x8, #4044]
  4357b0:	ldp	x10, x9, [x23, #48]
  4357b4:	ldr	x8, [x23, #32]
  4357b8:	sxtw	x28, w20
  4357bc:	sub	x9, x9, x10
  4357c0:	cmp	x9, x8
  4357c4:	str	x24, [x23, #8]
  4357c8:	b.ls	4357dc <argp_help@@Base+0xf2c>  // b.plast
  4357cc:	mov	x0, x23
  4357d0:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  4357d4:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4357d8:	ldr	w20, [x8, #4044]
  4357dc:	add	w8, w20, #0x3
  4357e0:	cmp	w8, w21
  4357e4:	str	x28, [x23, #24]
  4357e8:	b.cs	435824 <argp_help@@Base+0xf74>  // b.hs, b.nlast
  4357ec:	ldp	x8, x9, [x23, #56]
  4357f0:	ldur	w28, [x29, #-76]
  4357f4:	cmp	x8, x9
  4357f8:	b.cc	435810 <argp_help@@Base+0xf60>  // b.lo, b.ul, b.last
  4357fc:	mov	w1, #0x1                   	// #1
  435800:	mov	x0, x23
  435804:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  435808:	cbz	w0, 4358f0 <argp_help@@Base+0x1040>
  43580c:	ldr	x8, [x26]
  435810:	add	x9, x8, #0x1
  435814:	str	x9, [x26]
  435818:	mov	w9, #0xa                   	// #10
  43581c:	strb	w9, [x8]
  435820:	b	4358f0 <argp_help@@Base+0x1040>
  435824:	cmp	w20, w21
  435828:	b.ls	4358ac <argp_help@@Base+0xffc>  // b.plast
  43582c:	ldp	x9, x8, [x23, #48]
  435830:	ldr	x10, [x23, #32]
  435834:	sub	x8, x8, x9
  435838:	cmp	x8, x10
  43583c:	b.ls	435848 <argp_help@@Base+0xf98>  // b.plast
  435840:	mov	x0, x23
  435844:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  435848:	ldr	x8, [x23, #40]
  43584c:	ldur	w28, [x29, #-76]
  435850:	cmp	x8, #0x0
  435854:	csel	w8, w8, wzr, gt
  435858:	sub	w8, w20, w8
  43585c:	cmp	w8, #0x1
  435860:	b.lt	4358f0 <argp_help@@Base+0x1040>  // b.tstop
  435864:	add	w20, w8, #0x1
  435868:	b	435888 <argp_help@@Base+0xfd8>
  43586c:	add	x9, x8, #0x1
  435870:	str	x9, [x26]
  435874:	mov	w9, #0x20                  	// #32
  435878:	strb	w9, [x8]
  43587c:	sub	w20, w20, #0x1
  435880:	cmp	w20, #0x1
  435884:	b.le	4358f0 <argp_help@@Base+0x1040>
  435888:	ldp	x8, x9, [x23, #56]
  43588c:	cmp	x8, x9
  435890:	b.cc	43586c <argp_help@@Base+0xfbc>  // b.lo, b.ul, b.last
  435894:	mov	w1, #0x1                   	// #1
  435898:	mov	x0, x23
  43589c:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  4358a0:	cbz	w0, 43587c <argp_help@@Base+0xfcc>
  4358a4:	ldr	x8, [x26]
  4358a8:	b	43586c <argp_help@@Base+0xfbc>
  4358ac:	ldp	x8, x9, [x23, #56]
  4358b0:	ldur	w28, [x29, #-76]
  4358b4:	add	x10, x8, #0x3
  4358b8:	cmp	x10, x9
  4358bc:	b.ls	4358d4 <argp_help@@Base+0x1024>  // b.plast
  4358c0:	mov	w1, #0x3                   	// #3
  4358c4:	mov	x0, x23
  4358c8:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  4358cc:	cbz	w0, 4358f0 <argp_help@@Base+0x1040>
  4358d0:	ldr	x8, [x26]
  4358d4:	mov	w9, #0x20                  	// #32
  4358d8:	strb	w9, [x8, #2]
  4358dc:	mov	w9, #0x2020                	// #8224
  4358e0:	strh	w9, [x8]
  4358e4:	ldr	x8, [x26]
  4358e8:	add	x8, x8, #0x3
  4358ec:	str	x8, [x26]
  4358f0:	mov	x0, x19
  4358f4:	bl	403f40 <strlen@plt>
  4358f8:	cbz	x0, 43593c <argp_help@@Base+0x108c>
  4358fc:	mov	x24, x0
  435900:	ldp	x0, x8, [x23, #56]
  435904:	add	x9, x0, x24
  435908:	cmp	x9, x8
  43590c:	b.ls	435924 <argp_help@@Base+0x1074>  // b.plast
  435910:	mov	x0, x23
  435914:	mov	x1, x24
  435918:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  43591c:	cbz	w0, 43593c <argp_help@@Base+0x108c>
  435920:	ldr	x0, [x26]
  435924:	mov	x1, x19
  435928:	mov	x2, x24
  43592c:	bl	403ec0 <memcpy@plt>
  435930:	ldr	x8, [x26]
  435934:	add	x8, x8, x24
  435938:	str	x8, [x26]
  43593c:	cmp	x19, x27
  435940:	b.eq	43594c <argp_help@@Base+0x109c>  // b.none
  435944:	mov	x0, x19
  435948:	bl	404700 <free@plt>
  43594c:	ldp	x9, x8, [x23, #48]
  435950:	ldr	x10, [x23, #32]
  435954:	sub	x9, x8, x9
  435958:	cmp	x9, x10
  43595c:	b.ls	43596c <argp_help@@Base+0x10bc>  // b.plast
  435960:	mov	x0, x23
  435964:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  435968:	ldr	x8, [x23, #56]
  43596c:	ldr	x9, [x23, #64]
  435970:	str	xzr, [x23, #8]
  435974:	cmp	x8, x9
  435978:	b.cc	435990 <argp_help@@Base+0x10e0>  // b.lo, b.ul, b.last
  43597c:	mov	w1, #0x1                   	// #1
  435980:	mov	x0, x23
  435984:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  435988:	cbz	w0, 4359a0 <argp_help@@Base+0x10f0>
  43598c:	ldr	x8, [x26]
  435990:	add	x9, x8, #0x1
  435994:	str	x9, [x26]
  435998:	mov	w9, #0xa                   	// #10
  43599c:	strb	w9, [x8]
  4359a0:	stur	x25, [x29, #-64]
  4359a4:	ldp	x10, x9, [x23, #48]
  4359a8:	ldr	x8, [x23, #32]
  4359ac:	sub	x9, x9, x10
  4359b0:	ldur	x10, [x29, #-88]
  4359b4:	cmp	x9, x8
  4359b8:	sxtw	x19, w10
  4359bc:	b.ls	4359d4 <argp_help@@Base+0x1124>  // b.plast
  4359c0:	mov	x0, x23
  4359c4:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  4359c8:	ldp	x10, x9, [x23, #48]
  4359cc:	ldr	x8, [x23, #32]
  4359d0:	sub	x9, x9, x10
  4359d4:	ldur	x10, [x29, #-112]
  4359d8:	ldur	w20, [x29, #-100]
  4359dc:	str	x19, [x23, #8]
  4359e0:	cmp	x9, x8
  4359e4:	sxtw	x19, w10
  4359e8:	b.ls	435298 <argp_help@@Base+0x9e8>  // b.plast
  4359ec:	mov	x0, x23
  4359f0:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  4359f4:	b	435298 <argp_help@@Base+0x9e8>
  4359f8:	ldur	w8, [x29, #-52]
  4359fc:	cbz	w8, 435b50 <argp_help@@Base+0x12a0>
  435a00:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  435a04:	ldr	w8, [x8, #4028]
  435a08:	cbz	w8, 435b50 <argp_help@@Base+0x12a0>
  435a0c:	cbz	x22, 435a64 <argp_help@@Base+0x11b4>
  435a10:	ldr	x8, [x22]
  435a14:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  435a18:	add	x1, x1, #0xbaf
  435a1c:	mov	w2, #0x5                   	// #5
  435a20:	ldr	x0, [x8, #48]
  435a24:	bl	404900 <dcgettext@plt>
  435a28:	ldr	x24, [x22]
  435a2c:	mov	x19, x0
  435a30:	cbz	x24, 435a84 <argp_help@@Base+0x11d4>
  435a34:	ldr	x8, [x24, #40]
  435a38:	cbz	x8, 435a84 <argp_help@@Base+0x11d4>
  435a3c:	mov	x0, x24
  435a40:	mov	x1, x22
  435a44:	bl	4383a0 <argp_parse@@Base+0xaf4>
  435a48:	ldr	x8, [x24, #40]
  435a4c:	mov	x2, x0
  435a50:	mov	w0, #0x5                   	// #5
  435a54:	movk	w0, #0x200, lsl #16
  435a58:	mov	x1, x19
  435a5c:	blr	x8
  435a60:	b	435a7c <argp_help@@Base+0x11cc>
  435a64:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  435a68:	add	x1, x1, #0xbaf
  435a6c:	mov	w2, #0x5                   	// #5
  435a70:	mov	x0, xzr
  435a74:	bl	404900 <dcgettext@plt>
  435a78:	mov	x19, x0
  435a7c:	mov	x25, x0
  435a80:	b	435a88 <argp_help@@Base+0x11d8>
  435a84:	mov	x25, x19
  435a88:	cbz	x25, 435b50 <argp_help@@Base+0x12a0>
  435a8c:	ldrb	w8, [x25]
  435a90:	cbz	w8, 435b40 <argp_help@@Base+0x1290>
  435a94:	ldp	x8, x9, [x23, #56]
  435a98:	cmp	x8, x9
  435a9c:	b.cc	435ab4 <argp_help@@Base+0x1204>  // b.lo, b.ul, b.last
  435aa0:	mov	w1, #0x1                   	// #1
  435aa4:	mov	x0, x23
  435aa8:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  435aac:	cbz	w0, 435ac4 <argp_help@@Base+0x1214>
  435ab0:	ldr	x8, [x26]
  435ab4:	add	x9, x8, #0x1
  435ab8:	mov	w10, #0xa                   	// #10
  435abc:	str	x9, [x26]
  435ac0:	strb	w10, [x8]
  435ac4:	mov	x0, x25
  435ac8:	bl	403f40 <strlen@plt>
  435acc:	cbz	x0, 435b10 <argp_help@@Base+0x1260>
  435ad0:	mov	x24, x0
  435ad4:	ldp	x0, x8, [x23, #56]
  435ad8:	add	x9, x0, x24
  435adc:	cmp	x9, x8
  435ae0:	b.ls	435af8 <argp_help@@Base+0x1248>  // b.plast
  435ae4:	mov	x0, x23
  435ae8:	mov	x1, x24
  435aec:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  435af0:	cbz	w0, 435b10 <argp_help@@Base+0x1260>
  435af4:	ldr	x0, [x26]
  435af8:	mov	x1, x25
  435afc:	mov	x2, x24
  435b00:	bl	403ec0 <memcpy@plt>
  435b04:	ldr	x8, [x26]
  435b08:	add	x8, x8, x24
  435b0c:	str	x8, [x26]
  435b10:	ldp	x8, x9, [x23, #56]
  435b14:	cmp	x8, x9
  435b18:	b.cc	435b30 <argp_help@@Base+0x1280>  // b.lo, b.ul, b.last
  435b1c:	mov	w1, #0x1                   	// #1
  435b20:	mov	x0, x23
  435b24:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  435b28:	cbz	w0, 435b40 <argp_help@@Base+0x1290>
  435b2c:	ldr	x8, [x26]
  435b30:	add	x9, x8, #0x1
  435b34:	mov	w10, #0xa                   	// #10
  435b38:	str	x9, [x26]
  435b3c:	strb	w10, [x8]
  435b40:	cmp	x25, x19
  435b44:	b.eq	435b50 <argp_help@@Base+0x12a0>  // b.none
  435b48:	mov	x0, x25
  435b4c:	bl	404700 <free@plt>
  435b50:	ldur	x25, [x29, #-128]
  435b54:	mov	w19, #0x1                   	// #1
  435b58:	tbz	w28, #5, 435b7c <argp_help@@Base+0x12cc>
  435b5c:	ldur	x0, [x29, #-72]
  435b60:	mov	w2, #0x1                   	// #1
  435b64:	mov	x1, x22
  435b68:	mov	w3, w19
  435b6c:	mov	w4, wzr
  435b70:	mov	x5, x23
  435b74:	bl	436c6c <argp_failure@@Base+0xdfc>
  435b78:	orr	w19, w0, w19
  435b7c:	ldur	x21, [x29, #-96]
  435b80:	tbz	w28, #6, 435bec <argp_help@@Base+0x133c>
  435b84:	adrp	x20, 47b000 <argp_program_version@@Base+0x8>
  435b88:	ldr	x8, [x20, #8]
  435b8c:	cbz	x8, 435bec <argp_help@@Base+0x133c>
  435b90:	cbz	w19, 435bc4 <argp_help@@Base+0x1314>
  435b94:	ldp	x8, x9, [x23, #56]
  435b98:	cmp	x8, x9
  435b9c:	b.cc	435bb4 <argp_help@@Base+0x1304>  // b.lo, b.ul, b.last
  435ba0:	mov	w1, #0x1                   	// #1
  435ba4:	mov	x0, x23
  435ba8:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  435bac:	cbz	w0, 435bc4 <argp_help@@Base+0x1314>
  435bb0:	ldr	x8, [x23, #56]
  435bb4:	add	x9, x8, #0x1
  435bb8:	mov	w10, #0xa                   	// #10
  435bbc:	str	x9, [x23, #56]
  435bc0:	strb	w10, [x8]
  435bc4:	ldur	x8, [x29, #-72]
  435bc8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  435bcc:	add	x1, x1, #0x9dc
  435bd0:	mov	w2, #0x5                   	// #5
  435bd4:	ldr	x0, [x8, #48]
  435bd8:	bl	404900 <dcgettext@plt>
  435bdc:	ldr	x2, [x20, #8]
  435be0:	mov	x1, x0
  435be4:	mov	x0, x23
  435be8:	bl	457030 <_obstack_memory_used@@Base+0x104e0>
  435bec:	mov	x0, x25
  435bf0:	bl	404270 <funlockfile@plt>
  435bf4:	cbz	x21, 435c30 <argp_help@@Base+0x1380>
  435bf8:	ldr	x0, [x21, #24]
  435bfc:	cbz	x0, 435c10 <argp_help@@Base+0x1360>
  435c00:	ldr	x19, [x0, #40]
  435c04:	bl	404700 <free@plt>
  435c08:	mov	x0, x19
  435c0c:	cbnz	x19, 435c00 <argp_help@@Base+0x1350>
  435c10:	ldr	w8, [x21, #8]
  435c14:	cbz	w8, 435c28 <argp_help@@Base+0x1378>
  435c18:	ldr	x0, [x21]
  435c1c:	bl	404700 <free@plt>
  435c20:	ldr	x0, [x21, #16]
  435c24:	bl	404700 <free@plt>
  435c28:	mov	x0, x21
  435c2c:	bl	404700 <free@plt>
  435c30:	mov	x0, x23
  435c34:	bl	456a78 <_obstack_memory_used@@Base+0xff28>
  435c38:	mov	sp, x29
  435c3c:	ldp	x20, x19, [sp, #80]
  435c40:	ldp	x22, x21, [sp, #64]
  435c44:	ldp	x24, x23, [sp, #48]
  435c48:	ldp	x26, x25, [sp, #32]
  435c4c:	ldp	x28, x27, [sp, #16]
  435c50:	ldp	x29, x30, [sp], #96
  435c54:	ret

0000000000435c58 <argp_state_help@@Base>:
  435c58:	stp	x29, x30, [sp, #-32]!
  435c5c:	stp	x20, x19, [sp, #16]
  435c60:	mov	w19, w2
  435c64:	mov	x2, x1
  435c68:	mov	x29, sp
  435c6c:	cbz	x0, 435cac <argp_state_help@@Base+0x54>
  435c70:	cbz	x2, 435cd0 <argp_state_help@@Base+0x78>
  435c74:	ldr	w8, [x0, #28]
  435c78:	mov	x20, x0
  435c7c:	tbnz	w8, #1, 435cd0 <argp_state_help@@Base+0x78>
  435c80:	ldr	x0, [x20]
  435c84:	ldr	x4, [x20, #64]
  435c88:	lsl	w8, w8, #1
  435c8c:	and	w8, w8, #0x80
  435c90:	orr	w19, w8, w19
  435c94:	mov	x1, x20
  435c98:	mov	w3, w19
  435c9c:	bl	4348c4 <argp_help@@Base+0x14>
  435ca0:	ldrb	w8, [x20, #28]
  435ca4:	tbz	w8, #5, 435cc8 <argp_state_help@@Base+0x70>
  435ca8:	b	435cd0 <argp_state_help@@Base+0x78>
  435cac:	cbz	x2, 435cd0 <argp_state_help@@Base+0x78>
  435cb0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  435cb4:	ldr	x4, [x8, #128]
  435cb8:	mov	x0, xzr
  435cbc:	mov	x1, xzr
  435cc0:	mov	w3, w19
  435cc4:	bl	4348c4 <argp_help@@Base+0x14>
  435cc8:	tbnz	w19, #8, 435cdc <argp_state_help@@Base+0x84>
  435ccc:	tbnz	w19, #9, 435ce8 <argp_state_help@@Base+0x90>
  435cd0:	ldp	x20, x19, [sp, #16]
  435cd4:	ldp	x29, x30, [sp], #32
  435cd8:	ret
  435cdc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  435ce0:	ldr	w0, [x8, #72]
  435ce4:	bl	403f70 <exit@plt>
  435ce8:	mov	w0, wzr
  435cec:	bl	403f70 <exit@plt>

0000000000435cf0 <argp_error@@Base>:
  435cf0:	sub	sp, sp, #0x120
  435cf4:	stp	x29, x30, [sp, #240]
  435cf8:	stp	x20, x19, [sp, #272]
  435cfc:	add	x29, sp, #0xf0
  435d00:	mov	x20, x1
  435d04:	mov	x19, x0
  435d08:	stp	x28, x21, [sp, #256]
  435d0c:	stp	x2, x3, [x29, #-112]
  435d10:	stp	x4, x5, [x29, #-96]
  435d14:	stp	x6, x7, [x29, #-80]
  435d18:	stp	q1, q2, [sp, #16]
  435d1c:	stp	q3, q4, [sp, #48]
  435d20:	str	q0, [sp]
  435d24:	stp	q5, q6, [sp, #80]
  435d28:	str	q7, [sp, #112]
  435d2c:	cbz	x0, 435d48 <argp_error@@Base+0x58>
  435d30:	ldrb	w8, [x19, #28]
  435d34:	tbnz	w8, #1, 435e2c <argp_error@@Base+0x13c>
  435d38:	add	x8, x19, #0x48
  435d3c:	ldr	x21, [x8]
  435d40:	cbnz	x21, 435d58 <argp_error@@Base+0x68>
  435d44:	b	435e2c <argp_error@@Base+0x13c>
  435d48:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  435d4c:	add	x8, x8, #0x60
  435d50:	ldr	x21, [x8]
  435d54:	cbz	x21, 435e2c <argp_error@@Base+0x13c>
  435d58:	mov	x0, x21
  435d5c:	bl	403fe0 <flockfile@plt>
  435d60:	mov	x8, #0xffffffffffffffd0    	// #-48
  435d64:	mov	x9, sp
  435d68:	sub	x10, x29, #0x70
  435d6c:	adrp	x13, 47a000 <_obstack_memory_used@@Base+0x334b0>
  435d70:	movk	x8, #0xff80, lsl #32
  435d74:	add	x11, x29, #0x30
  435d78:	add	x12, x19, #0x40
  435d7c:	add	x13, x13, #0x80
  435d80:	cmp	x19, #0x0
  435d84:	add	x9, x9, #0x80
  435d88:	add	x10, x10, #0x30
  435d8c:	stp	x9, x8, [x29, #-48]
  435d90:	stp	x11, x10, [x29, #-64]
  435d94:	csel	x8, x12, x13, ne  // ne = any
  435d98:	ldr	x0, [x8]
  435d9c:	mov	x1, x21
  435da0:	bl	404920 <fputs_unlocked@plt>
  435da4:	ldp	x8, x9, [x21, #40]
  435da8:	cmp	x8, x9
  435dac:	b.cs	435e40 <argp_error@@Base+0x150>  // b.hs, b.nlast
  435db0:	add	x9, x8, #0x1
  435db4:	mov	w10, #0x3a                  	// #58
  435db8:	str	x9, [x21, #40]
  435dbc:	strb	w10, [x8]
  435dc0:	ldp	x8, x9, [x21, #40]
  435dc4:	cmp	x8, x9
  435dc8:	b.cs	435e50 <argp_error@@Base+0x160>  // b.hs, b.nlast
  435dcc:	add	x9, x8, #0x1
  435dd0:	mov	w10, #0x20                  	// #32
  435dd4:	str	x9, [x21, #40]
  435dd8:	strb	w10, [x8]
  435ddc:	ldp	q0, q1, [x29, #-64]
  435de0:	sub	x3, x29, #0x20
  435de4:	mov	w1, #0x1                   	// #1
  435de8:	mov	x0, x21
  435dec:	mov	x2, x20
  435df0:	stp	q0, q1, [x29, #-32]
  435df4:	bl	4043f0 <__vfprintf_chk@plt>
  435df8:	ldp	x8, x9, [x21, #40]
  435dfc:	cmp	x8, x9
  435e00:	b.cs	435e60 <argp_error@@Base+0x170>  // b.hs, b.nlast
  435e04:	add	x9, x8, #0x1
  435e08:	mov	w10, #0xa                   	// #10
  435e0c:	str	x9, [x21, #40]
  435e10:	strb	w10, [x8]
  435e14:	mov	w2, #0x104                 	// #260
  435e18:	mov	x0, x19
  435e1c:	mov	x1, x21
  435e20:	bl	435c58 <argp_state_help@@Base>
  435e24:	mov	x0, x21
  435e28:	bl	404270 <funlockfile@plt>
  435e2c:	ldp	x20, x19, [sp, #272]
  435e30:	ldp	x28, x21, [sp, #256]
  435e34:	ldp	x29, x30, [sp, #240]
  435e38:	add	sp, sp, #0x120
  435e3c:	ret
  435e40:	mov	w1, #0x3a                  	// #58
  435e44:	mov	x0, x21
  435e48:	bl	4045e0 <__overflow@plt>
  435e4c:	b	435dc0 <argp_error@@Base+0xd0>
  435e50:	mov	w1, #0x20                  	// #32
  435e54:	mov	x0, x21
  435e58:	bl	4045e0 <__overflow@plt>
  435e5c:	b	435ddc <argp_error@@Base+0xec>
  435e60:	mov	w1, #0xa                   	// #10
  435e64:	mov	x0, x21
  435e68:	bl	4045e0 <__overflow@plt>
  435e6c:	b	435e14 <argp_error@@Base+0x124>

0000000000435e70 <argp_failure@@Base>:
  435e70:	sub	sp, sp, #0x1d0
  435e74:	stp	x28, x23, [sp, #416]
  435e78:	stp	x22, x21, [sp, #432]
  435e7c:	stp	x20, x19, [sp, #448]
  435e80:	mov	x23, x3
  435e84:	mov	w22, w2
  435e88:	mov	w19, w1
  435e8c:	mov	x20, x0
  435e90:	stp	x29, x30, [sp, #400]
  435e94:	add	x29, sp, #0x190
  435e98:	stp	x4, x5, [sp, #128]
  435e9c:	stp	x6, x7, [sp, #144]
  435ea0:	stp	q0, q1, [sp]
  435ea4:	stp	q2, q3, [sp, #32]
  435ea8:	stp	q4, q5, [sp, #64]
  435eac:	stp	q6, q7, [sp, #96]
  435eb0:	cbz	x0, 435ecc <argp_failure@@Base+0x5c>
  435eb4:	ldrb	w8, [x20, #28]
  435eb8:	tbnz	w8, #1, 436030 <argp_failure@@Base+0x1c0>
  435ebc:	add	x8, x20, #0x48
  435ec0:	ldr	x21, [x8]
  435ec4:	cbnz	x21, 435edc <argp_failure@@Base+0x6c>
  435ec8:	b	436030 <argp_failure@@Base+0x1c0>
  435ecc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  435ed0:	add	x8, x8, #0x60
  435ed4:	ldr	x21, [x8]
  435ed8:	cbz	x21, 436030 <argp_failure@@Base+0x1c0>
  435edc:	mov	x0, x21
  435ee0:	bl	403fe0 <flockfile@plt>
  435ee4:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  435ee8:	add	x8, x20, #0x40
  435eec:	add	x9, x9, #0x80
  435ef0:	cmp	x20, #0x0
  435ef4:	csel	x8, x8, x9, ne  // ne = any
  435ef8:	ldr	x0, [x8]
  435efc:	mov	x1, x21
  435f00:	bl	404920 <fputs_unlocked@plt>
  435f04:	cbz	x23, 435f80 <argp_failure@@Base+0x110>
  435f08:	mov	x8, #0xffffffffffffffe0    	// #-32
  435f0c:	mov	x10, sp
  435f10:	add	x11, sp, #0x80
  435f14:	movk	x8, #0xff80, lsl #32
  435f18:	add	x9, x29, #0x40
  435f1c:	add	x10, x10, #0x80
  435f20:	add	x11, x11, #0x20
  435f24:	stp	x10, x8, [x29, #-16]
  435f28:	stp	x9, x11, [x29, #-32]
  435f2c:	ldp	x8, x9, [x21, #40]
  435f30:	cmp	x8, x9
  435f34:	b.cs	436058 <argp_failure@@Base+0x1e8>  // b.hs, b.nlast
  435f38:	add	x9, x8, #0x1
  435f3c:	mov	w10, #0x3a                  	// #58
  435f40:	str	x9, [x21, #40]
  435f44:	strb	w10, [x8]
  435f48:	ldp	x8, x9, [x21, #40]
  435f4c:	cmp	x8, x9
  435f50:	b.cs	436068 <argp_failure@@Base+0x1f8>  // b.hs, b.nlast
  435f54:	add	x9, x8, #0x1
  435f58:	mov	w10, #0x20                  	// #32
  435f5c:	str	x9, [x21, #40]
  435f60:	strb	w10, [x8]
  435f64:	ldp	q0, q1, [x29, #-32]
  435f68:	add	x3, sp, #0xa0
  435f6c:	mov	w1, #0x1                   	// #1
  435f70:	mov	x0, x21
  435f74:	mov	x2, x23
  435f78:	stp	q0, q1, [sp, #160]
  435f7c:	bl	4043f0 <__vfprintf_chk@plt>
  435f80:	cbz	w22, 435ffc <argp_failure@@Base+0x18c>
  435f84:	ldp	x8, x9, [x21, #40]
  435f88:	cmp	x8, x9
  435f8c:	b.cs	436078 <argp_failure@@Base+0x208>  // b.hs, b.nlast
  435f90:	add	x9, x8, #0x1
  435f94:	mov	w10, #0x3a                  	// #58
  435f98:	str	x9, [x21, #40]
  435f9c:	strb	w10, [x8]
  435fa0:	ldp	x8, x9, [x21, #40]
  435fa4:	cmp	x8, x9
  435fa8:	b.cs	436088 <argp_failure@@Base+0x218>  // b.hs, b.nlast
  435fac:	add	x9, x8, #0x1
  435fb0:	mov	w10, #0x20                  	// #32
  435fb4:	str	x9, [x21, #40]
  435fb8:	strb	w10, [x8]
  435fbc:	add	x1, sp, #0xa0
  435fc0:	mov	w2, #0xc8                  	// #200
  435fc4:	mov	w0, w22
  435fc8:	bl	4043e0 <strerror_r@plt>
  435fcc:	cbnz	x0, 435ff4 <argp_failure@@Base+0x184>
  435fd0:	mov	w0, w22
  435fd4:	bl	404510 <strerror@plt>
  435fd8:	cbnz	x0, 435ff4 <argp_failure@@Base+0x184>
  435fdc:	ldr	x8, [x20]
  435fe0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  435fe4:	add	x1, x1, #0x970
  435fe8:	mov	w2, #0x5                   	// #5
  435fec:	ldr	x0, [x8, #48]
  435ff0:	bl	404900 <dcgettext@plt>
  435ff4:	mov	x1, x21
  435ff8:	bl	404920 <fputs_unlocked@plt>
  435ffc:	ldp	x8, x9, [x21, #40]
  436000:	cmp	x8, x9
  436004:	b.cs	436048 <argp_failure@@Base+0x1d8>  // b.hs, b.nlast
  436008:	add	x9, x8, #0x1
  43600c:	mov	w10, #0xa                   	// #10
  436010:	str	x9, [x21, #40]
  436014:	strb	w10, [x8]
  436018:	mov	x0, x21
  43601c:	bl	404270 <funlockfile@plt>
  436020:	cbz	w19, 436030 <argp_failure@@Base+0x1c0>
  436024:	cbz	x20, 436098 <argp_failure@@Base+0x228>
  436028:	ldrb	w8, [x20, #28]
  43602c:	tbz	w8, #5, 436098 <argp_failure@@Base+0x228>
  436030:	ldp	x20, x19, [sp, #448]
  436034:	ldp	x22, x21, [sp, #432]
  436038:	ldp	x28, x23, [sp, #416]
  43603c:	ldp	x29, x30, [sp, #400]
  436040:	add	sp, sp, #0x1d0
  436044:	ret
  436048:	mov	w1, #0xa                   	// #10
  43604c:	mov	x0, x21
  436050:	bl	4045e0 <__overflow@plt>
  436054:	b	436018 <argp_failure@@Base+0x1a8>
  436058:	mov	w1, #0x3a                  	// #58
  43605c:	mov	x0, x21
  436060:	bl	4045e0 <__overflow@plt>
  436064:	b	435f48 <argp_failure@@Base+0xd8>
  436068:	mov	w1, #0x20                  	// #32
  43606c:	mov	x0, x21
  436070:	bl	4045e0 <__overflow@plt>
  436074:	b	435f64 <argp_failure@@Base+0xf4>
  436078:	mov	w1, #0x3a                  	// #58
  43607c:	mov	x0, x21
  436080:	bl	4045e0 <__overflow@plt>
  436084:	b	435fa0 <argp_failure@@Base+0x130>
  436088:	mov	w1, #0x20                  	// #32
  43608c:	mov	x0, x21
  436090:	bl	4045e0 <__overflow@plt>
  436094:	b	435fbc <argp_failure@@Base+0x14c>
  436098:	mov	w0, w19
  43609c:	bl	403f70 <exit@plt>
  4360a0:	sub	sp, sp, #0xa0
  4360a4:	stp	x29, x30, [sp, #64]
  4360a8:	stp	x28, x27, [sp, #80]
  4360ac:	stp	x26, x25, [sp, #96]
  4360b0:	stp	x24, x23, [sp, #112]
  4360b4:	stp	x22, x21, [sp, #128]
  4360b8:	stp	x20, x19, [sp, #144]
  4360bc:	ldr	x27, [x0, #32]
  4360c0:	ldr	x24, [x0]
  4360c4:	mov	x26, x0
  4360c8:	mov	w0, #0x20                  	// #32
  4360cc:	add	x29, sp, #0x40
  4360d0:	mov	x28, x1
  4360d4:	bl	404250 <malloc@plt>
  4360d8:	cbz	x0, 436594 <argp_failure@@Base+0x724>
  4360dc:	mov	x22, x0
  4360e0:	mov	x20, x0
  4360e4:	str	xzr, [x22, #24]!
  4360e8:	stur	wzr, [x22, #-16]
  4360ec:	str	x22, [sp, #16]
  4360f0:	cbz	x24, 436294 <argp_failure@@Base+0x424>
  4360f4:	ldrb	w8, [x24, #24]
  4360f8:	tbnz	w8, #2, 4365b4 <argp_failure@@Base+0x744>
  4360fc:	mov	w22, wzr
  436100:	mov	w19, wzr
  436104:	add	x23, x24, #0x28
  436108:	b	436110 <argp_failure@@Base+0x2a0>
  43610c:	add	x23, x23, #0x30
  436110:	ldur	w25, [x23, #-32]
  436114:	cbnz	w25, 436130 <argp_failure@@Base+0x2c0>
  436118:	ldur	x8, [x23, #-40]
  43611c:	cbnz	x8, 436130 <argp_failure@@Base+0x2c0>
  436120:	ldur	x8, [x23, #-8]
  436124:	cbnz	x8, 436130 <argp_failure@@Base+0x2c0>
  436128:	ldr	w8, [x23]
  43612c:	cbz	w8, 436168 <argp_failure@@Base+0x2f8>
  436130:	ldur	w8, [x23, #-16]
  436134:	tbnz	w8, #2, 436140 <argp_failure@@Base+0x2d0>
  436138:	add	w22, w22, #0x1
  43613c:	str	w22, [x20, #8]
  436140:	sub	w9, w25, #0x1
  436144:	cmp	w9, #0xfe
  436148:	b.hi	43610c <argp_failure@@Base+0x29c>  // b.pmore
  43614c:	tbnz	w8, #3, 43610c <argp_failure@@Base+0x29c>
  436150:	bl	404690 <__ctype_b_loc@plt>
  436154:	ldr	x8, [x0]
  436158:	ldrh	w8, [x8, x25, lsl #1]
  43615c:	tbz	w8, #14, 43610c <argp_failure@@Base+0x29c>
  436160:	add	w19, w19, #0x1
  436164:	b	43610c <argp_failure@@Base+0x29c>
  436168:	mov	w8, #0x38                  	// #56
  43616c:	umull	x0, w22, w8
  436170:	bl	404250 <malloc@plt>
  436174:	mov	x22, x0
  436178:	str	x0, [x20]
  43617c:	add	w0, w19, #0x1
  436180:	bl	404250 <malloc@plt>
  436184:	str	x0, [x20, #16]
  436188:	cbz	x22, 436574 <argp_failure@@Base+0x704>
  43618c:	mov	x23, x0
  436190:	cbz	x0, 436574 <argp_failure@@Base+0x704>
  436194:	mov	w8, wzr
  436198:	b	4361a8 <argp_failure@@Base+0x338>
  43619c:	add	x22, x22, #0x38
  4361a0:	mov	x24, x8
  4361a4:	mov	w8, w25
  4361a8:	ldr	w9, [x24, #8]
  4361ac:	cbnz	w9, 4361c8 <argp_failure@@Base+0x358>
  4361b0:	ldr	x10, [x24]
  4361b4:	cbnz	x10, 4361c8 <argp_failure@@Base+0x358>
  4361b8:	ldr	x10, [x24, #32]
  4361bc:	cbnz	x10, 4361c8 <argp_failure@@Base+0x358>
  4361c0:	ldr	w10, [x24, #40]
  4361c4:	cbz	w10, 43628c <argp_failure@@Base+0x41c>
  4361c8:	str	x24, [x22]
  4361cc:	str	wzr, [x22, #8]
  4361d0:	str	x23, [x22, #16]
  4361d4:	ldr	w25, [x24, #40]
  4361d8:	cbnz	w25, 4361f4 <argp_failure@@Base+0x384>
  4361dc:	ldr	x10, [x24]
  4361e0:	cbz	x10, 4361ec <argp_failure@@Base+0x37c>
  4361e4:	mov	w25, w8
  4361e8:	b	4361f4 <argp_failure@@Base+0x384>
  4361ec:	cmp	w9, #0x0
  4361f0:	cinc	w25, w8, eq  // eq = none
  4361f4:	mov	w9, wzr
  4361f8:	str	w25, [x22, #24]
  4361fc:	stp	x28, x26, [x22, #32]
  436200:	add	w8, w9, #0x1
  436204:	str	w8, [x22, #8]
  436208:	ldrb	w8, [x24, #24]
  43620c:	tbnz	w8, #3, 436254 <argp_failure@@Base+0x3e4>
  436210:	ldr	w19, [x24, #8]
  436214:	sub	w8, w19, #0x1
  436218:	cmp	w8, #0xfe
  43621c:	b.hi	436254 <argp_failure@@Base+0x3e4>  // b.pmore
  436220:	bl	404690 <__ctype_b_loc@plt>
  436224:	ldr	x8, [x0]
  436228:	ldrh	w8, [x8, x19, lsl #1]
  43622c:	tbz	w8, #14, 436254 <argp_failure@@Base+0x3e4>
  436230:	ldr	x8, [x20, #16]
  436234:	cmp	x8, x23
  436238:	b.cs	436250 <argp_failure@@Base+0x3e0>  // b.hs, b.nlast
  43623c:	ldrb	w9, [x8], #1
  436240:	cmp	w9, w19, uxtb
  436244:	b.eq	436254 <argp_failure@@Base+0x3e4>  // b.none
  436248:	cmp	x23, x8
  43624c:	b.ne	43623c <argp_failure@@Base+0x3cc>  // b.any
  436250:	strb	w19, [x23], #1
  436254:	ldr	w9, [x24, #56]
  436258:	add	x8, x24, #0x30
  43625c:	cbnz	w9, 436278 <argp_failure@@Base+0x408>
  436260:	ldr	x9, [x8]
  436264:	cbnz	x9, 436278 <argp_failure@@Base+0x408>
  436268:	ldr	x9, [x24, #80]
  43626c:	cbnz	x9, 436278 <argp_failure@@Base+0x408>
  436270:	ldr	w9, [x24, #88]
  436274:	cbz	w9, 43619c <argp_failure@@Base+0x32c>
  436278:	ldrb	w9, [x24, #72]
  43627c:	tbz	w9, #2, 43619c <argp_failure@@Base+0x32c>
  436280:	ldr	w9, [x22, #8]
  436284:	mov	x24, x8
  436288:	b	436200 <argp_failure@@Base+0x390>
  43628c:	ldr	x22, [sp, #16]
  436290:	strb	wzr, [x23]
  436294:	cbz	x27, 436530 <argp_failure@@Base+0x6c0>
  436298:	ldr	x8, [x27]
  43629c:	cbz	x8, 436530 <argp_failure@@Base+0x6c0>
  4362a0:	stp	x28, x26, [sp]
  4362a4:	stur	x20, [x29, #-8]
  4362a8:	b	4362d0 <argp_failure@@Base+0x460>
  4362ac:	ldr	x8, [x21]
  4362b0:	ldr	x9, [x21, #16]
  4362b4:	str	w23, [x20, #8]
  4362b8:	str	x8, [x20]
  4362bc:	str	x9, [x20, #16]
  4362c0:	mov	x0, x21
  4362c4:	bl	404700 <free@plt>
  4362c8:	ldr	x8, [x27, #32]!
  4362cc:	cbz	x8, 436530 <argp_failure@@Base+0x6c0>
  4362d0:	ldr	w19, [x27, #24]
  4362d4:	cbz	w19, 4362e0 <argp_failure@@Base+0x470>
  4362d8:	ldr	x20, [x27, #16]
  4362dc:	b	4362ec <argp_failure@@Base+0x47c>
  4362e0:	ldr	x20, [x27, #16]
  4362e4:	mov	x1, x28
  4362e8:	cbz	x20, 436338 <argp_failure@@Base+0x4c8>
  4362ec:	ldr	x21, [x26, #32]
  4362f0:	mov	w0, #0x30                  	// #48
  4362f4:	bl	404250 <malloc@plt>
  4362f8:	mov	x1, x0
  4362fc:	cbz	x0, 436338 <argp_failure@@Base+0x4c8>
  436300:	sub	x8, x27, x21
  436304:	lsr	x8, x8, #5
  436308:	str	x20, [x1]
  43630c:	stp	w8, w19, [x1, #8]
  436310:	stp	x28, x26, [x1, #16]
  436314:	cbz	x28, 436324 <argp_failure@@Base+0x4b4>
  436318:	ldr	w8, [x28, #32]
  43631c:	add	w8, w8, #0x1
  436320:	b	436328 <argp_failure@@Base+0x4b8>
  436324:	mov	w8, wzr
  436328:	ldr	x9, [x22]
  43632c:	str	w8, [x1, #32]
  436330:	str	x1, [x22]
  436334:	str	x9, [x1, #40]
  436338:	ldr	x0, [x27]
  43633c:	bl	4360a0 <argp_failure@@Base+0x230>
  436340:	ldur	x20, [x29, #-8]
  436344:	mov	x21, x0
  436348:	mov	x9, x22
  43634c:	ldr	x10, [x9]
  436350:	mov	x8, x9
  436354:	add	x9, x10, #0x28
  436358:	cbnz	x10, 43634c <argp_failure@@Base+0x4dc>
  43635c:	ldr	x9, [x21, #24]
  436360:	str	x9, [x8]
  436364:	ldr	w23, [x21, #8]
  436368:	str	xzr, [x21, #24]
  43636c:	cbz	w23, 4362c0 <argp_failure@@Base+0x450>
  436370:	ldr	w19, [x20, #8]
  436374:	cbz	w19, 4362ac <argp_failure@@Base+0x43c>
  436378:	add	w22, w19, w23
  43637c:	mov	w8, #0x38                  	// #56
  436380:	umull	x0, w22, w8
  436384:	stur	x27, [x29, #-24]
  436388:	bl	404250 <malloc@plt>
  43638c:	ldr	x27, [x20, #16]
  436390:	mov	x28, x0
  436394:	mov	x0, x27
  436398:	bl	403f40 <strlen@plt>
  43639c:	ldr	x25, [x21, #16]
  4363a0:	and	x26, x0, #0xffffffff
  4363a4:	stur	x21, [x29, #-16]
  4363a8:	mov	x0, x25
  4363ac:	bl	403f40 <strlen@plt>
  4363b0:	add	x8, x26, x0
  4363b4:	add	x0, x8, #0x1
  4363b8:	bl	404250 <malloc@plt>
  4363bc:	cbz	x28, 436554 <argp_failure@@Base+0x6e4>
  4363c0:	mov	x24, x0
  4363c4:	cbz	x0, 436554 <argp_failure@@Base+0x6e4>
  4363c8:	ldr	x1, [x20]
  4363cc:	mov	w21, #0x38                  	// #56
  4363d0:	mul	x2, x19, x21
  4363d4:	mov	x3, #0xffffffffffffffff    	// #-1
  4363d8:	mov	x0, x28
  4363dc:	stur	w22, [x29, #-28]
  4363e0:	bl	4048b0 <__mempcpy_chk@plt>
  4363e4:	ldur	x8, [x29, #-16]
  4363e8:	mul	x2, x23, x21
  4363ec:	mov	x3, #0xffffffffffffffff    	// #-1
  4363f0:	ldr	x1, [x8]
  4363f4:	bl	4048b0 <__mempcpy_chk@plt>
  4363f8:	mov	x3, #0xffffffffffffffff    	// #-1
  4363fc:	mov	x0, x24
  436400:	mov	x1, x27
  436404:	mov	x2, x26
  436408:	bl	4048b0 <__mempcpy_chk@plt>
  43640c:	str	x28, [sp, #24]
  436410:	ldr	x8, [x28, #16]
  436414:	subs	w19, w19, #0x1
  436418:	sub	x8, x8, x27
  43641c:	add	x8, x24, x8
  436420:	str	x8, [x28, #16]
  436424:	add	x28, x28, #0x38
  436428:	b.ne	436410 <argp_failure@@Base+0x5a0>  // b.any
  43642c:	add	x27, x24, x26
  436430:	b	436440 <argp_failure@@Base+0x5d0>
  436434:	subs	w23, w23, #0x1
  436438:	add	x28, x28, #0x38
  43643c:	b.eq	4364c4 <argp_failure@@Base+0x654>  // b.none
  436440:	ldr	w22, [x28, #8]
  436444:	str	x27, [x28, #16]
  436448:	cbz	w22, 436434 <argp_failure@@Base+0x5c4>
  43644c:	ldr	x19, [x28]
  436450:	b	43646c <argp_failure@@Base+0x5fc>
  436454:	strb	w20, [x27], #1
  436458:	add	x25, x25, #0x1
  43645c:	ldur	x20, [x29, #-8]
  436460:	subs	w22, w22, #0x1
  436464:	add	x19, x19, #0x30
  436468:	b.eq	436434 <argp_failure@@Base+0x5c4>  // b.none
  43646c:	ldrb	w8, [x19, #24]
  436470:	tbnz	w8, #3, 436460 <argp_failure@@Base+0x5f0>
  436474:	ldr	w21, [x19, #8]
  436478:	sub	w8, w21, #0x1
  43647c:	cmp	w8, #0xfe
  436480:	b.hi	436460 <argp_failure@@Base+0x5f0>  // b.pmore
  436484:	ldrb	w20, [x25]
  436488:	bl	404690 <__ctype_b_loc@plt>
  43648c:	cmp	w21, w20
  436490:	b.ne	43645c <argp_failure@@Base+0x5ec>  // b.any
  436494:	ldr	x8, [x0]
  436498:	ldrh	w8, [x8, x21, lsl #1]
  43649c:	tbz	w8, #14, 43645c <argp_failure@@Base+0x5ec>
  4364a0:	mov	x8, x26
  4364a4:	mov	x9, x24
  4364a8:	cbz	x26, 436454 <argp_failure@@Base+0x5e4>
  4364ac:	ldrb	w10, [x9], #1
  4364b0:	cmp	w10, w20
  4364b4:	b.eq	436458 <argp_failure@@Base+0x5e8>  // b.none
  4364b8:	subs	x8, x8, #0x1
  4364bc:	b.ne	4364ac <argp_failure@@Base+0x63c>  // b.any
  4364c0:	b	436454 <argp_failure@@Base+0x5e4>
  4364c4:	ldr	x0, [x20]
  4364c8:	strb	wzr, [x27]
  4364cc:	bl	404700 <free@plt>
  4364d0:	ldr	x0, [x20, #16]
  4364d4:	bl	404700 <free@plt>
  4364d8:	ldur	x21, [x29, #-16]
  4364dc:	ldr	x8, [sp, #24]
  4364e0:	str	x24, [x20, #16]
  4364e4:	ldr	x0, [x21, #24]
  4364e8:	str	x8, [x20]
  4364ec:	ldur	w8, [x29, #-28]
  4364f0:	str	w8, [x20, #8]
  4364f4:	cbz	x0, 436508 <argp_failure@@Base+0x698>
  4364f8:	ldr	x19, [x0, #40]
  4364fc:	bl	404700 <free@plt>
  436500:	mov	x0, x19
  436504:	cbnz	x19, 4364f8 <argp_failure@@Base+0x688>
  436508:	ldr	w8, [x21, #8]
  43650c:	ldp	x28, x26, [sp]
  436510:	ldur	x27, [x29, #-24]
  436514:	ldr	x22, [sp, #16]
  436518:	cbz	w8, 4362c0 <argp_failure@@Base+0x450>
  43651c:	ldr	x0, [x21]
  436520:	bl	404700 <free@plt>
  436524:	ldr	x0, [x21, #16]
  436528:	bl	404700 <free@plt>
  43652c:	b	4362c0 <argp_failure@@Base+0x450>
  436530:	mov	x0, x20
  436534:	ldp	x20, x19, [sp, #144]
  436538:	ldp	x22, x21, [sp, #128]
  43653c:	ldp	x24, x23, [sp, #112]
  436540:	ldp	x26, x25, [sp, #96]
  436544:	ldp	x28, x27, [sp, #80]
  436548:	ldp	x29, x30, [sp, #64]
  43654c:	add	sp, sp, #0xa0
  436550:	ret
  436554:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  436558:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43655c:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  436560:	add	x0, x0, #0xb2f
  436564:	add	x1, x1, #0xab0
  436568:	add	x3, x3, #0xb48
  43656c:	mov	w2, #0x366                 	// #870
  436570:	bl	404a00 <__assert_fail@plt>
  436574:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  436578:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43657c:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  436580:	add	x0, x0, #0xb0c
  436584:	add	x1, x1, #0xab0
  436588:	add	x3, x3, #0xabc
  43658c:	mov	w2, #0x1d1                 	// #465
  436590:	bl	404a00 <__assert_fail@plt>
  436594:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  436598:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43659c:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4365a0:	add	x0, x0, #0xaac
  4365a4:	add	x1, x1, #0xab0
  4365a8:	add	x3, x3, #0xabc
  4365ac:	mov	w2, #0x1b9                 	// #441
  4365b0:	bl	404a00 <__assert_fail@plt>
  4365b4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4365b8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4365bc:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4365c0:	add	x0, x0, #0xafc
  4365c4:	add	x1, x1, #0xab0
  4365c8:	add	x3, x3, #0xabc
  4365cc:	mov	w2, #0x1c3                 	// #451
  4365d0:	bl	404a00 <__assert_fail@plt>
  4365d4:	stp	x29, x30, [sp, #-32]!
  4365d8:	stp	x20, x19, [sp, #16]
  4365dc:	mov	x8, x0
  4365e0:	ldr	x0, [x0, #16]
  4365e4:	ldr	x20, [x8, #32]
  4365e8:	mov	x29, sp
  4365ec:	cbz	x0, 436608 <argp_failure@@Base+0x798>
  4365f0:	mov	w1, #0xa                   	// #10
  4365f4:	bl	4047a0 <strchr@plt>
  4365f8:	cmp	x0, #0x0
  4365fc:	cset	w19, ne  // ne = any
  436600:	cbnz	x20, 436610 <argp_failure@@Base+0x7a0>
  436604:	b	436630 <argp_failure@@Base+0x7c0>
  436608:	mov	x19, xzr
  43660c:	cbz	x20, 436630 <argp_failure@@Base+0x7c0>
  436610:	ldr	x8, [x20]
  436614:	cbz	x8, 436630 <argp_failure@@Base+0x7c0>
  436618:	add	x20, x20, #0x20
  43661c:	mov	x0, x8
  436620:	bl	4365d4 <argp_failure@@Base+0x764>
  436624:	ldr	x8, [x20], #32
  436628:	add	x19, x0, x19
  43662c:	cbnz	x8, 43661c <argp_failure@@Base+0x7ac>
  436630:	mov	x0, x19
  436634:	ldp	x20, x19, [sp, #16]
  436638:	ldp	x29, x30, [sp], #32
  43663c:	ret
  436640:	stp	x29, x30, [sp, #-96]!
  436644:	stp	x28, x27, [sp, #16]
  436648:	stp	x26, x25, [sp, #32]
  43664c:	stp	x24, x23, [sp, #48]
  436650:	stp	x22, x21, [sp, #64]
  436654:	stp	x20, x19, [sp, #80]
  436658:	mov	x29, sp
  43665c:	sub	sp, sp, #0x10
  436660:	ldr	w22, [x0, #8]
  436664:	cbz	w22, 4369b4 <argp_failure@@Base+0xb44>
  436668:	mov	x20, x0
  43666c:	ldr	x0, [x0, #16]
  436670:	mov	x19, x1
  436674:	bl	403f40 <strlen@plt>
  436678:	add	x9, x0, #0x10
  43667c:	mov	x8, sp
  436680:	and	x9, x9, #0xfffffffffffffff0
  436684:	sub	x23, x8, x9
  436688:	mov	sp, x23
  43668c:	stp	x23, x20, [x29, #-16]
  436690:	ldr	x24, [x20]
  436694:	b	4366a4 <argp_failure@@Base+0x834>
  436698:	subs	w22, w22, #0x1
  43669c:	add	x24, x24, #0x38
  4366a0:	b.eq	436730 <argp_failure@@Base+0x8c0>  // b.none
  4366a4:	ldr	w25, [x24, #8]
  4366a8:	cbz	w25, 436698 <argp_failure@@Base+0x828>
  4366ac:	ldr	x26, [x24]
  4366b0:	ldr	x27, [x24, #16]
  4366b4:	mov	x28, x26
  4366b8:	b	4366cc <argp_failure@@Base+0x85c>
  4366bc:	add	x27, x27, #0x1
  4366c0:	subs	w25, w25, #0x1
  4366c4:	add	x28, x28, #0x30
  4366c8:	b.eq	436698 <argp_failure@@Base+0x828>  // b.none
  4366cc:	ldr	w21, [x28, #24]
  4366d0:	tbnz	w21, #3, 4366c0 <argp_failure@@Base+0x850>
  4366d4:	ldr	w20, [x28, #8]
  4366d8:	sub	w8, w20, #0x1
  4366dc:	cmp	w8, #0xfe
  4366e0:	b.hi	4366c0 <argp_failure@@Base+0x850>  // b.pmore
  4366e4:	bl	404690 <__ctype_b_loc@plt>
  4366e8:	ldr	x8, [x0]
  4366ec:	ldrh	w8, [x8, x20, lsl #1]
  4366f0:	tbz	w8, #14, 4366c0 <argp_failure@@Base+0x850>
  4366f4:	ldrb	w8, [x27]
  4366f8:	cmp	w20, w8
  4366fc:	b.ne	4366c0 <argp_failure@@Base+0x850>  // b.any
  436700:	tst	w21, #0x4
  436704:	csel	x26, x28, x26, eq  // eq = none
  436708:	tbnz	w21, #1, 4366bc <argp_failure@@Base+0x84c>
  43670c:	ldr	x8, [x28, #16]
  436710:	cbnz	x8, 4366bc <argp_failure@@Base+0x84c>
  436714:	ldr	x8, [x26, #16]
  436718:	cbnz	x8, 4366bc <argp_failure@@Base+0x84c>
  43671c:	ldr	w8, [x26, #24]
  436720:	orr	w8, w8, w21
  436724:	tbnz	w8, #4, 4366bc <argp_failure@@Base+0x84c>
  436728:	strb	w20, [x23], #1
  43672c:	b	4366bc <argp_failure@@Base+0x84c>
  436730:	ldur	x2, [x29, #-16]
  436734:	cmp	x23, x2
  436738:	b.ls	436750 <argp_failure@@Base+0x8e0>  // b.plast
  43673c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  436740:	add	x1, x1, #0xb74
  436744:	mov	x0, x19
  436748:	strb	wzr, [x23]
  43674c:	bl	457030 <_obstack_memory_used@@Base+0x104e0>
  436750:	ldur	x8, [x29, #-8]
  436754:	ldr	w25, [x8, #8]
  436758:	cbz	w25, 4369b4 <argp_failure@@Base+0xb44>
  43675c:	ldr	x26, [x8]
  436760:	b	436770 <argp_failure@@Base+0x900>
  436764:	subs	w25, w25, #0x1
  436768:	add	x26, x26, #0x38
  43676c:	b.eq	4368dc <argp_failure@@Base+0xa6c>  // b.none
  436770:	ldr	w27, [x26, #8]
  436774:	cbz	w27, 436764 <argp_failure@@Base+0x8f4>
  436778:	ldr	x8, [x26, #40]
  43677c:	ldr	x22, [x26]
  436780:	ldr	x21, [x26, #16]
  436784:	ldr	x23, [x8, #48]
  436788:	mov	x28, x22
  43678c:	b	4367b8 <argp_failure@@Base+0x948>
  436790:	ldr	w2, [x28, #8]
  436794:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  436798:	mov	x0, x19
  43679c:	add	x1, x1, #0xb7b
  4367a0:	mov	x3, x24
  4367a4:	bl	457030 <_obstack_memory_used@@Base+0x104e0>
  4367a8:	add	x21, x21, #0x1
  4367ac:	subs	w27, w27, #0x1
  4367b0:	add	x28, x28, #0x30
  4367b4:	b.eq	436764 <argp_failure@@Base+0x8f4>  // b.none
  4367b8:	ldr	w20, [x28, #24]
  4367bc:	tbnz	w20, #3, 4367ac <argp_failure@@Base+0x93c>
  4367c0:	ldr	w24, [x28, #8]
  4367c4:	sub	w8, w24, #0x1
  4367c8:	cmp	w8, #0xfe
  4367cc:	b.hi	4367ac <argp_failure@@Base+0x93c>  // b.pmore
  4367d0:	bl	404690 <__ctype_b_loc@plt>
  4367d4:	ldr	x8, [x0]
  4367d8:	ldrh	w8, [x8, x24, lsl #1]
  4367dc:	tbz	w8, #14, 4367ac <argp_failure@@Base+0x93c>
  4367e0:	ldrb	w8, [x21]
  4367e4:	cmp	w24, w8
  4367e8:	b.ne	4367ac <argp_failure@@Base+0x93c>  // b.any
  4367ec:	tst	w20, #0x4
  4367f0:	csel	x22, x28, x22, eq  // eq = none
  4367f4:	tbnz	w20, #1, 4367a8 <argp_failure@@Base+0x938>
  4367f8:	ldr	w8, [x22, #24]
  4367fc:	ldr	x1, [x28, #16]
  436800:	orr	w20, w8, w20
  436804:	cbnz	x1, 43680c <argp_failure@@Base+0x99c>
  436808:	ldr	x1, [x22, #16]
  43680c:	tbnz	w20, #4, 4367a8 <argp_failure@@Base+0x938>
  436810:	cbz	x1, 4367a8 <argp_failure@@Base+0x938>
  436814:	mov	w2, #0x5                   	// #5
  436818:	mov	x0, x23
  43681c:	bl	404900 <dcgettext@plt>
  436820:	mov	x24, x0
  436824:	tbnz	w20, #0, 436790 <argp_failure@@Base+0x920>
  436828:	mov	x0, x24
  43682c:	bl	403f40 <strlen@plt>
  436830:	ldp	x9, x8, [x19, #48]
  436834:	ldr	x10, [x19, #32]
  436838:	add	x20, x0, #0x6
  43683c:	sub	x9, x8, x9
  436840:	cmp	x9, x10
  436844:	b.ls	436854 <argp_failure@@Base+0x9e4>  // b.plast
  436848:	mov	x0, x19
  43684c:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  436850:	ldr	x8, [x19, #56]
  436854:	ldr	x9, [x19, #40]
  436858:	ldr	x10, [x19, #16]
  43685c:	bic	x11, x9, x9, asr #63
  436860:	ldr	x9, [x19, #64]
  436864:	add	x11, x20, x11
  436868:	cmp	x11, x10
  43686c:	b.cs	43689c <argp_failure@@Base+0xa2c>  // b.hs, b.nlast
  436870:	cmp	x8, x9
  436874:	b.cc	43688c <argp_failure@@Base+0xa1c>  // b.lo, b.ul, b.last
  436878:	mov	w1, #0x1                   	// #1
  43687c:	mov	x0, x19
  436880:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  436884:	cbz	w0, 4368c8 <argp_failure@@Base+0xa58>
  436888:	ldr	x8, [x19, #56]
  43688c:	add	x9, x8, #0x1
  436890:	str	x9, [x19, #56]
  436894:	mov	w9, #0x20                  	// #32
  436898:	b	4368c4 <argp_failure@@Base+0xa54>
  43689c:	cmp	x8, x9
  4368a0:	b.cc	4368b8 <argp_failure@@Base+0xa48>  // b.lo, b.ul, b.last
  4368a4:	mov	w1, #0x1                   	// #1
  4368a8:	mov	x0, x19
  4368ac:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  4368b0:	cbz	w0, 4368c8 <argp_failure@@Base+0xa58>
  4368b4:	ldr	x8, [x19, #56]
  4368b8:	add	x9, x8, #0x1
  4368bc:	str	x9, [x19, #56]
  4368c0:	mov	w9, #0xa                   	// #10
  4368c4:	strb	w9, [x8]
  4368c8:	ldr	w2, [x28, #8]
  4368cc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4368d0:	mov	x0, x19
  4368d4:	add	x1, x1, #0xb86
  4368d8:	b	4367a0 <argp_failure@@Base+0x930>
  4368dc:	ldur	x8, [x29, #-8]
  4368e0:	ldr	w24, [x8, #8]
  4368e4:	cbz	w24, 4369b4 <argp_failure@@Base+0xb44>
  4368e8:	ldr	x25, [x8]
  4368ec:	adrp	x20, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4368f0:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4368f4:	add	x20, x20, #0xba7
  4368f8:	add	x22, x22, #0xb8f
  4368fc:	b	43690c <argp_failure@@Base+0xa9c>
  436900:	subs	w24, w24, #0x1
  436904:	add	x25, x25, #0x38
  436908:	b.eq	4369b4 <argp_failure@@Base+0xb44>  // b.none
  43690c:	ldr	w26, [x25, #8]
  436910:	cbz	w26, 436900 <argp_failure@@Base+0xa90>
  436914:	ldr	x8, [x25, #40]
  436918:	ldr	x27, [x25]
  43691c:	ldr	x23, [x8, #48]
  436920:	mov	x28, x27
  436924:	b	436940 <argp_failure@@Base+0xad0>
  436928:	mov	x0, x19
  43692c:	mov	x1, x20
  436930:	bl	457030 <_obstack_memory_used@@Base+0x104e0>
  436934:	subs	w26, w26, #0x1
  436938:	add	x28, x28, #0x30
  43693c:	b.eq	436900 <argp_failure@@Base+0xa90>  // b.none
  436940:	ldr	x2, [x28]
  436944:	cbz	x2, 436934 <argp_failure@@Base+0xac4>
  436948:	ldr	w8, [x28, #24]
  43694c:	tst	w8, #0x4
  436950:	csel	x27, x28, x27, eq  // eq = none
  436954:	tbnz	w8, #1, 436934 <argp_failure@@Base+0xac4>
  436958:	ldr	w9, [x27, #24]
  43695c:	ldr	x1, [x28, #16]
  436960:	orr	w21, w9, w8
  436964:	cbz	x1, 436970 <argp_failure@@Base+0xb00>
  436968:	tbnz	w21, #4, 436934 <argp_failure@@Base+0xac4>
  43696c:	b	436978 <argp_failure@@Base+0xb08>
  436970:	ldr	x1, [x27, #16]
  436974:	tbnz	w21, #4, 436934 <argp_failure@@Base+0xac4>
  436978:	cbz	x1, 436928 <argp_failure@@Base+0xab8>
  43697c:	mov	w2, #0x5                   	// #5
  436980:	mov	x0, x23
  436984:	bl	404900 <dcgettext@plt>
  436988:	ldr	x2, [x28]
  43698c:	mov	x3, x0
  436990:	mov	x0, x19
  436994:	tbnz	w21, #0, 4369a8 <argp_failure@@Base+0xb38>
  436998:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43699c:	add	x1, x1, #0xb9c
  4369a0:	bl	457030 <_obstack_memory_used@@Base+0x104e0>
  4369a4:	b	436934 <argp_failure@@Base+0xac4>
  4369a8:	mov	x1, x22
  4369ac:	bl	457030 <_obstack_memory_used@@Base+0x104e0>
  4369b0:	b	436934 <argp_failure@@Base+0xac4>
  4369b4:	mov	sp, x29
  4369b8:	ldp	x20, x19, [sp, #80]
  4369bc:	ldp	x22, x21, [sp, #64]
  4369c0:	ldp	x24, x23, [sp, #48]
  4369c4:	ldp	x26, x25, [sp, #32]
  4369c8:	ldp	x28, x27, [sp, #16]
  4369cc:	ldp	x29, x30, [sp], #96
  4369d0:	ret
  4369d4:	sub	sp, sp, #0x80
  4369d8:	stp	x29, x30, [sp, #32]
  4369dc:	stp	x28, x27, [sp, #48]
  4369e0:	stp	x26, x25, [sp, #64]
  4369e4:	stp	x24, x23, [sp, #80]
  4369e8:	stp	x22, x21, [sp, #96]
  4369ec:	stp	x20, x19, [sp, #112]
  4369f0:	mov	x23, x0
  4369f4:	ldr	x8, [x23, #16]
  4369f8:	ldr	x28, [x0, #32]
  4369fc:	ldr	x0, [x0, #48]
  436a00:	ldr	x26, [x2]
  436a04:	mov	x21, x2
  436a08:	mov	x22, x1
  436a0c:	mov	w2, #0x5                   	// #5
  436a10:	mov	x1, x8
  436a14:	add	x29, sp, #0x20
  436a18:	mov	x20, x4
  436a1c:	mov	w19, w3
  436a20:	bl	404900 <dcgettext@plt>
  436a24:	mov	x24, x0
  436a28:	cbz	x23, 436a6c <argp_failure@@Base+0xbfc>
  436a2c:	ldr	x8, [x23, #40]
  436a30:	cbz	x8, 436a6c <argp_failure@@Base+0xbfc>
  436a34:	mov	x0, x23
  436a38:	mov	x1, x22
  436a3c:	bl	4383a0 <argp_parse@@Base+0xaf4>
  436a40:	ldr	x8, [x23, #40]
  436a44:	mov	x2, x0
  436a48:	mov	w0, #0x6                   	// #6
  436a4c:	movk	w0, #0x200, lsl #16
  436a50:	mov	x1, x24
  436a54:	blr	x8
  436a58:	mov	x25, x0
  436a5c:	cbnz	x25, 436a74 <argp_failure@@Base+0xc04>
  436a60:	mov	x23, xzr
  436a64:	cbnz	x28, 436be0 <argp_failure@@Base+0xd70>
  436a68:	b	436c14 <argp_failure@@Base+0xda4>
  436a6c:	mov	x25, x24
  436a70:	cbz	x25, 436a60 <argp_failure@@Base+0xbf0>
  436a74:	mov	w1, #0xa                   	// #10
  436a78:	mov	x0, x25
  436a7c:	bl	4048f0 <strchrnul@plt>
  436a80:	ldrb	w8, [x0]
  436a84:	mov	x23, x0
  436a88:	stur	x26, [x29, #-8]
  436a8c:	str	x28, [sp, #16]
  436a90:	cbz	w8, 436ac4 <argp_failure@@Base+0xc54>
  436a94:	ldrb	w27, [x26]
  436a98:	cbz	w27, 436ad0 <argp_failure@@Base+0xc60>
  436a9c:	mov	w28, wzr
  436aa0:	add	x26, x23, #0x1
  436aa4:	mov	w1, #0xa                   	// #10
  436aa8:	mov	x0, x26
  436aac:	bl	4048f0 <strchrnul@plt>
  436ab0:	add	w28, w28, #0x1
  436ab4:	cmp	w28, w27
  436ab8:	mov	x23, x0
  436abc:	b.cc	436aa0 <argp_failure@@Base+0xc30>  // b.lo, b.ul, b.last
  436ac0:	b	436ad4 <argp_failure@@Base+0xc64>
  436ac4:	str	wzr, [sp, #12]
  436ac8:	mov	x26, x25
  436acc:	b	436ae8 <argp_failure@@Base+0xc78>
  436ad0:	mov	x26, x25
  436ad4:	ldr	x8, [x21]
  436ad8:	add	x8, x8, #0x1
  436adc:	str	x8, [x21]
  436ae0:	mov	w8, #0x1                   	// #1
  436ae4:	str	w8, [sp, #12]
  436ae8:	ldp	x9, x8, [x20, #48]
  436aec:	ldr	x10, [x20, #32]
  436af0:	sub	x27, x23, x26
  436af4:	add	x28, x27, #0x1
  436af8:	sub	x9, x8, x9
  436afc:	cmp	x9, x10
  436b00:	b.ls	436b10 <argp_failure@@Base+0xca0>  // b.plast
  436b04:	mov	x0, x20
  436b08:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  436b0c:	ldr	x8, [x20, #56]
  436b10:	ldr	x9, [x20, #40]
  436b14:	ldr	x10, [x20, #16]
  436b18:	bic	x11, x9, x9, asr #63
  436b1c:	ldr	x9, [x20, #64]
  436b20:	add	x11, x28, x11
  436b24:	cmp	x11, x10
  436b28:	b.cs	436b58 <argp_failure@@Base+0xce8>  // b.hs, b.nlast
  436b2c:	ldr	x28, [sp, #16]
  436b30:	cmp	x8, x9
  436b34:	b.cc	436b4c <argp_failure@@Base+0xcdc>  // b.lo, b.ul, b.last
  436b38:	mov	w1, #0x1                   	// #1
  436b3c:	mov	x0, x20
  436b40:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  436b44:	cbz	w0, 436b88 <argp_failure@@Base+0xd18>
  436b48:	ldr	x8, [x20, #56]
  436b4c:	add	x9, x8, #0x1
  436b50:	mov	w10, #0x20                  	// #32
  436b54:	b	436b80 <argp_failure@@Base+0xd10>
  436b58:	ldr	x28, [sp, #16]
  436b5c:	cmp	x8, x9
  436b60:	b.cc	436b78 <argp_failure@@Base+0xd08>  // b.lo, b.ul, b.last
  436b64:	mov	w1, #0x1                   	// #1
  436b68:	mov	x0, x20
  436b6c:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  436b70:	cbz	w0, 436b88 <argp_failure@@Base+0xd18>
  436b74:	ldr	x8, [x20, #56]
  436b78:	add	x9, x8, #0x1
  436b7c:	mov	w10, #0xa                   	// #10
  436b80:	str	x9, [x20, #56]
  436b84:	strb	w10, [x8]
  436b88:	ldp	x0, x8, [x20, #56]
  436b8c:	add	x9, x0, x27
  436b90:	cmp	x9, x8
  436b94:	b.ls	436bac <argp_failure@@Base+0xd3c>  // b.plast
  436b98:	mov	x0, x20
  436b9c:	mov	x1, x27
  436ba0:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  436ba4:	cbz	w0, 436bc4 <argp_failure@@Base+0xd54>
  436ba8:	ldr	x0, [x20, #56]
  436bac:	mov	x1, x26
  436bb0:	mov	x2, x27
  436bb4:	bl	403ec0 <memcpy@plt>
  436bb8:	ldr	x8, [x20, #56]
  436bbc:	add	x8, x8, x27
  436bc0:	str	x8, [x20, #56]
  436bc4:	cmp	x25, x24
  436bc8:	b.eq	436bd4 <argp_failure@@Base+0xd64>  // b.none
  436bcc:	mov	x0, x25
  436bd0:	bl	404700 <free@plt>
  436bd4:	ldur	x26, [x29, #-8]
  436bd8:	ldr	w25, [sp, #12]
  436bdc:	cbz	x28, 436c14 <argp_failure@@Base+0xda4>
  436be0:	ldr	x8, [x28]
  436be4:	cbz	x8, 436c14 <argp_failure@@Base+0xda4>
  436be8:	add	x24, x28, #0x20
  436bec:	mov	x0, x8
  436bf0:	mov	x1, x22
  436bf4:	mov	x2, x21
  436bf8:	mov	w3, w19
  436bfc:	mov	x4, x20
  436c00:	bl	4369d4 <argp_failure@@Base+0xb64>
  436c04:	ldr	x8, [x24], #32
  436c08:	cmp	w0, #0x0
  436c0c:	cset	w19, eq  // eq = none
  436c10:	cbnz	x8, 436bec <argp_failure@@Base+0xd7c>
  436c14:	cbz	w25, 436c44 <argp_failure@@Base+0xdd4>
  436c18:	cbz	w19, 436c44 <argp_failure@@Base+0xdd4>
  436c1c:	ldrb	w9, [x23]
  436c20:	ldrb	w8, [x26]
  436c24:	cbz	w9, 436c38 <argp_failure@@Base+0xdc8>
  436c28:	add	w8, w8, #0x1
  436c2c:	mov	w19, wzr
  436c30:	strb	w8, [x26]
  436c34:	b	436c44 <argp_failure@@Base+0xdd4>
  436c38:	cbz	w8, 436c40 <argp_failure@@Base+0xdd0>
  436c3c:	strb	wzr, [x26]
  436c40:	mov	w19, #0x1                   	// #1
  436c44:	cmp	w19, #0x0
  436c48:	ldp	x20, x19, [sp, #112]
  436c4c:	ldp	x22, x21, [sp, #96]
  436c50:	ldp	x24, x23, [sp, #80]
  436c54:	ldp	x26, x25, [sp, #64]
  436c58:	ldp	x28, x27, [sp, #48]
  436c5c:	ldp	x29, x30, [sp, #32]
  436c60:	cset	w0, eq  // eq = none
  436c64:	add	sp, sp, #0x80
  436c68:	ret
  436c6c:	sub	sp, sp, #0x70
  436c70:	stp	x29, x30, [sp, #16]
  436c74:	stp	x28, x27, [sp, #32]
  436c78:	stp	x26, x25, [sp, #48]
  436c7c:	stp	x24, x23, [sp, #64]
  436c80:	stp	x22, x21, [sp, #80]
  436c84:	stp	x20, x19, [sp, #96]
  436c88:	mov	x24, x0
  436c8c:	ldr	x8, [x24, #24]
  436c90:	ldr	x0, [x0, #48]
  436c94:	mov	w22, w2
  436c98:	mov	x23, x1
  436c9c:	mov	w2, #0x5                   	// #5
  436ca0:	mov	x1, x8
  436ca4:	add	x29, sp, #0x10
  436ca8:	mov	x19, x5
  436cac:	mov	w20, w4
  436cb0:	mov	w21, w3
  436cb4:	bl	404900 <dcgettext@plt>
  436cb8:	ldr	x27, [x24, #32]
  436cbc:	mov	x25, x0
  436cc0:	cbz	x0, 436cf4 <argp_failure@@Base+0xe84>
  436cc4:	mov	w1, #0xb                   	// #11
  436cc8:	mov	x0, x25
  436ccc:	bl	4047a0 <strchr@plt>
  436cd0:	cmp	x0, #0x0
  436cd4:	csinc	x9, xzr, x0, eq  // eq = none
  436cd8:	cmp	x0, #0x0
  436cdc:	sub	x8, x0, x25
  436ce0:	ccmp	w22, #0x0, #0x0, ne  // ne = any
  436ce4:	csel	x26, x8, xzr, eq  // eq = none
  436ce8:	cmp	w22, #0x0
  436cec:	csel	x25, x25, x9, eq  // eq = none
  436cf0:	b	436cf8 <argp_failure@@Base+0xe88>
  436cf4:	mov	x26, xzr
  436cf8:	ldr	x8, [x24, #40]
  436cfc:	mov	w28, #0x1                   	// #1
  436d00:	movk	w28, #0x200, lsl #16
  436d04:	cbz	x8, 436d50 <argp_failure@@Base+0xee0>
  436d08:	cbz	x26, 436d1c <argp_failure@@Base+0xeac>
  436d0c:	mov	x0, x25
  436d10:	mov	x1, x26
  436d14:	bl	404780 <strndup@plt>
  436d18:	mov	x25, x0
  436d1c:	mov	x0, x24
  436d20:	mov	x1, x23
  436d24:	bl	4383a0 <argp_parse@@Base+0xaf4>
  436d28:	ldr	x8, [x24, #40]
  436d2c:	cmp	w22, #0x0
  436d30:	mov	x2, x0
  436d34:	cinc	w0, w28, ne  // ne = any
  436d38:	mov	x1, x25
  436d3c:	str	x2, [sp, #8]
  436d40:	blr	x8
  436d44:	mov	x28, x0
  436d48:	cbnz	x28, 436d5c <argp_failure@@Base+0xeec>
  436d4c:	b	436ea0 <argp_failure@@Base+0x1030>
  436d50:	str	xzr, [sp, #8]
  436d54:	mov	x28, x25
  436d58:	cbz	x28, 436ea0 <argp_failure@@Base+0x1030>
  436d5c:	cbz	w21, 436d90 <argp_failure@@Base+0xf20>
  436d60:	ldp	x8, x9, [x19, #56]
  436d64:	cmp	x8, x9
  436d68:	b.cc	436d80 <argp_failure@@Base+0xf10>  // b.lo, b.ul, b.last
  436d6c:	mov	w1, #0x1                   	// #1
  436d70:	mov	x0, x19
  436d74:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  436d78:	cbz	w0, 436d90 <argp_failure@@Base+0xf20>
  436d7c:	ldr	x8, [x19, #56]
  436d80:	add	x9, x8, #0x1
  436d84:	mov	w10, #0xa                   	// #10
  436d88:	str	x9, [x19, #56]
  436d8c:	strb	w10, [x8]
  436d90:	str	x27, [sp]
  436d94:	cbz	x26, 436ddc <argp_failure@@Base+0xf6c>
  436d98:	cmp	x28, x25
  436d9c:	b.ne	436ddc <argp_failure@@Base+0xf6c>  // b.any
  436da0:	ldp	x0, x8, [x19, #56]
  436da4:	add	x9, x0, x26
  436da8:	cmp	x9, x8
  436dac:	b.ls	436dc4 <argp_failure@@Base+0xf54>  // b.plast
  436db0:	mov	x0, x19
  436db4:	mov	x1, x26
  436db8:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  436dbc:	cbz	w0, 436e28 <argp_failure@@Base+0xfb8>
  436dc0:	ldr	x0, [x19, #56]
  436dc4:	mov	x1, x25
  436dc8:	mov	x2, x26
  436dcc:	bl	403ec0 <memcpy@plt>
  436dd0:	ldr	x8, [x19, #56]
  436dd4:	add	x8, x8, x26
  436dd8:	b	436e24 <argp_failure@@Base+0xfb4>
  436ddc:	mov	x0, x28
  436de0:	bl	403f40 <strlen@plt>
  436de4:	cbz	x0, 436e28 <argp_failure@@Base+0xfb8>
  436de8:	mov	x27, x0
  436dec:	ldp	x0, x8, [x19, #56]
  436df0:	add	x9, x0, x27
  436df4:	cmp	x9, x8
  436df8:	b.ls	436e10 <argp_failure@@Base+0xfa0>  // b.plast
  436dfc:	mov	x0, x19
  436e00:	mov	x1, x27
  436e04:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  436e08:	cbz	w0, 436e28 <argp_failure@@Base+0xfb8>
  436e0c:	ldr	x0, [x19, #56]
  436e10:	mov	x1, x28
  436e14:	mov	x2, x27
  436e18:	bl	403ec0 <memcpy@plt>
  436e1c:	ldr	x8, [x19, #56]
  436e20:	add	x8, x8, x27
  436e24:	str	x8, [x19, #56]
  436e28:	ldp	x9, x8, [x19, #48]
  436e2c:	ldr	x10, [x19, #32]
  436e30:	ldr	x27, [sp]
  436e34:	sub	x8, x8, x9
  436e38:	cmp	x8, x10
  436e3c:	b.ls	436e48 <argp_failure@@Base+0xfd8>  // b.plast
  436e40:	mov	x0, x19
  436e44:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  436e48:	ldr	x8, [x19, #40]
  436e4c:	ldr	x9, [x19, #8]
  436e50:	bic	x8, x8, x8, asr #63
  436e54:	cmp	x8, x9
  436e58:	b.ls	436e8c <argp_failure@@Base+0x101c>  // b.plast
  436e5c:	ldp	x8, x9, [x19, #56]
  436e60:	cmp	x8, x9
  436e64:	b.cc	436e7c <argp_failure@@Base+0x100c>  // b.lo, b.ul, b.last
  436e68:	mov	w1, #0x1                   	// #1
  436e6c:	mov	x0, x19
  436e70:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  436e74:	cbz	w0, 436e8c <argp_failure@@Base+0x101c>
  436e78:	ldr	x8, [x19, #56]
  436e7c:	add	x9, x8, #0x1
  436e80:	mov	w10, #0xa                   	// #10
  436e84:	str	x9, [x19, #56]
  436e88:	strb	w10, [x8]
  436e8c:	cmp	x28, x25
  436e90:	b.eq	436e9c <argp_failure@@Base+0x102c>  // b.none
  436e94:	mov	x0, x28
  436e98:	bl	404700 <free@plt>
  436e9c:	mov	w28, #0x1                   	// #1
  436ea0:	cbz	x26, 436eb8 <argp_failure@@Base+0x1048>
  436ea4:	cbz	x25, 436eb8 <argp_failure@@Base+0x1048>
  436ea8:	ldr	x8, [x24, #40]
  436eac:	cbz	x8, 436eb8 <argp_failure@@Base+0x1048>
  436eb0:	mov	x0, x25
  436eb4:	bl	404700 <free@plt>
  436eb8:	cbz	w22, 436fd8 <argp_failure@@Base+0x1168>
  436ebc:	ldr	x8, [x24, #40]
  436ec0:	cbz	x8, 436fd8 <argp_failure@@Base+0x1168>
  436ec4:	ldr	x2, [sp, #8]
  436ec8:	mov	w9, #0x1                   	// #1
  436ecc:	movk	w9, #0x200, lsl #16
  436ed0:	add	w0, w9, #0x3
  436ed4:	mov	x1, xzr
  436ed8:	blr	x8
  436edc:	cbz	x0, 436fd8 <argp_failure@@Base+0x1168>
  436ee0:	mov	x24, x0
  436ee4:	orr	w8, w28, w21
  436ee8:	cbz	w8, 436f1c <argp_failure@@Base+0x10ac>
  436eec:	ldp	x8, x9, [x19, #56]
  436ef0:	cmp	x8, x9
  436ef4:	b.cc	436f0c <argp_failure@@Base+0x109c>  // b.lo, b.ul, b.last
  436ef8:	mov	w1, #0x1                   	// #1
  436efc:	mov	x0, x19
  436f00:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  436f04:	cbz	w0, 436f1c <argp_failure@@Base+0x10ac>
  436f08:	ldr	x8, [x19, #56]
  436f0c:	add	x9, x8, #0x1
  436f10:	mov	w10, #0xa                   	// #10
  436f14:	str	x9, [x19, #56]
  436f18:	strb	w10, [x8]
  436f1c:	mov	x0, x24
  436f20:	bl	403f40 <strlen@plt>
  436f24:	cbz	x0, 436f68 <argp_failure@@Base+0x10f8>
  436f28:	mov	x25, x0
  436f2c:	ldp	x0, x8, [x19, #56]
  436f30:	add	x9, x0, x25
  436f34:	cmp	x9, x8
  436f38:	b.ls	436f50 <argp_failure@@Base+0x10e0>  // b.plast
  436f3c:	mov	x0, x19
  436f40:	mov	x1, x25
  436f44:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  436f48:	cbz	w0, 436f68 <argp_failure@@Base+0x10f8>
  436f4c:	ldr	x0, [x19, #56]
  436f50:	mov	x1, x24
  436f54:	mov	x2, x25
  436f58:	bl	403ec0 <memcpy@plt>
  436f5c:	ldr	x8, [x19, #56]
  436f60:	add	x8, x8, x25
  436f64:	str	x8, [x19, #56]
  436f68:	mov	x0, x24
  436f6c:	bl	404700 <free@plt>
  436f70:	ldp	x9, x8, [x19, #48]
  436f74:	ldr	x10, [x19, #32]
  436f78:	sub	x8, x8, x9
  436f7c:	cmp	x8, x10
  436f80:	b.ls	436f8c <argp_failure@@Base+0x111c>  // b.plast
  436f84:	mov	x0, x19
  436f88:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  436f8c:	ldr	x8, [x19, #40]
  436f90:	ldr	x9, [x19, #8]
  436f94:	bic	x8, x8, x8, asr #63
  436f98:	cmp	x8, x9
  436f9c:	b.ls	436fd4 <argp_failure@@Base+0x1164>  // b.plast
  436fa0:	ldp	x8, x9, [x19, #56]
  436fa4:	cmp	x8, x9
  436fa8:	b.cc	436fc4 <argp_failure@@Base+0x1154>  // b.lo, b.ul, b.last
  436fac:	mov	w1, #0x1                   	// #1
  436fb0:	mov	x0, x19
  436fb4:	mov	w28, #0x1                   	// #1
  436fb8:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  436fbc:	cbz	w0, 436fd8 <argp_failure@@Base+0x1168>
  436fc0:	ldr	x8, [x19, #56]
  436fc4:	add	x9, x8, #0x1
  436fc8:	mov	w10, #0xa                   	// #10
  436fcc:	str	x9, [x19, #56]
  436fd0:	strb	w10, [x8]
  436fd4:	mov	w28, #0x1                   	// #1
  436fd8:	cbz	x27, 437024 <argp_failure@@Base+0x11b4>
  436fdc:	ldr	x8, [x27]
  436fe0:	cbz	x8, 437024 <argp_failure@@Base+0x11b4>
  436fe4:	add	x24, x27, #0x20
  436fe8:	b	43701c <argp_failure@@Base+0x11ac>
  436fec:	orr	w9, w28, w21
  436ff0:	cmp	w9, #0x0
  436ff4:	cset	w3, ne  // ne = any
  436ff8:	mov	x0, x8
  436ffc:	mov	x1, x23
  437000:	mov	w2, w22
  437004:	mov	w4, w20
  437008:	mov	x5, x19
  43700c:	bl	436c6c <argp_failure@@Base+0xdfc>
  437010:	ldr	x8, [x24], #32
  437014:	orr	w28, w0, w28
  437018:	cbz	x8, 437024 <argp_failure@@Base+0x11b4>
  43701c:	cbz	w20, 436fec <argp_failure@@Base+0x117c>
  437020:	cbz	w28, 436fec <argp_failure@@Base+0x117c>
  437024:	mov	w0, w28
  437028:	ldp	x20, x19, [sp, #96]
  43702c:	ldp	x22, x21, [sp, #80]
  437030:	ldp	x24, x23, [sp, #64]
  437034:	ldp	x26, x25, [sp, #48]
  437038:	ldp	x28, x27, [sp, #32]
  43703c:	ldp	x29, x30, [sp, #16]
  437040:	add	sp, sp, #0x70
  437044:	ret
  437048:	stp	x29, x30, [sp, #-96]!
  43704c:	stp	x28, x27, [sp, #16]
  437050:	stp	x26, x25, [sp, #32]
  437054:	stp	x24, x23, [sp, #48]
  437058:	stp	x22, x21, [sp, #64]
  43705c:	stp	x20, x19, [sp, #80]
  437060:	ldr	x8, [x0, #32]
  437064:	ldr	x9, [x1, #32]
  437068:	ldr	w11, [x0, #24]
  43706c:	ldr	w10, [x1, #24]
  437070:	mov	x29, sp
  437074:	cmp	x8, x9
  437078:	b.eq	437130 <argp_failure@@Base+0x12c0>  // b.none
  43707c:	cbz	x8, 4370a8 <argp_failure@@Base+0x1238>
  437080:	cbz	x9, 4370c8 <argp_failure@@Base+0x1258>
  437084:	ldr	w10, [x8, #32]
  437088:	ldr	w11, [x9, #32]
  43708c:	cmp	w10, w11
  437090:	b.le	4370f0 <argp_failure@@Base+0x1280>
  437094:	ldr	x8, [x8, #16]
  437098:	ldr	w10, [x8, #32]
  43709c:	cmp	w10, w11
  4370a0:	b.gt	437094 <argp_failure@@Base+0x1224>
  4370a4:	b	4370f0 <argp_failure@@Base+0x1280>
  4370a8:	mov	x8, x9
  4370ac:	ldr	x9, [x9, #16]
  4370b0:	cbnz	x9, 4370a8 <argp_failure@@Base+0x1238>
  4370b4:	ldr	w8, [x8, #12]
  4370b8:	subs	w0, w11, w8
  4370bc:	b.ne	4371e4 <argp_failure@@Base+0x1374>  // b.any
  4370c0:	mov	w0, #0xffffffff            	// #-1
  4370c4:	b	437414 <argp_failure@@Base+0x15a4>
  4370c8:	mov	x9, x8
  4370cc:	ldr	x8, [x8, #16]
  4370d0:	cbnz	x8, 4370c8 <argp_failure@@Base+0x1258>
  4370d4:	ldr	w8, [x9, #12]
  4370d8:	subs	w0, w8, w10
  4370dc:	b.ne	4371fc <argp_failure@@Base+0x138c>  // b.any
  4370e0:	mov	w0, #0x1                   	// #1
  4370e4:	b	437414 <argp_failure@@Base+0x15a4>
  4370e8:	ldr	x9, [x9, #16]
  4370ec:	ldr	w11, [x9, #32]
  4370f0:	cmp	w11, w10
  4370f4:	b.gt	4370e8 <argp_failure@@Base+0x1278>
  4370f8:	mov	x11, x9
  4370fc:	mov	x10, x8
  437100:	ldr	x8, [x8, #16]
  437104:	ldr	x9, [x9, #16]
  437108:	cmp	x8, x9
  43710c:	b.ne	4370f8 <argp_failure@@Base+0x1288>  // b.any
  437110:	ldr	w8, [x10, #12]
  437114:	ldr	w9, [x11, #12]
  437118:	subs	w0, w8, w9
  43711c:	b.ne	4371cc <argp_failure@@Base+0x135c>  // b.any
  437120:	ldr	w8, [x11, #8]
  437124:	ldr	w9, [x10, #8]
  437128:	sub	w0, w8, w9
  43712c:	b	437414 <argp_failure@@Base+0x15a4>
  437130:	mov	x19, x0
  437134:	subs	w0, w11, w10
  437138:	b.ne	4371b4 <argp_failure@@Base+0x1344>  // b.any
  43713c:	ldr	w23, [x19, #8]
  437140:	mov	x20, x1
  437144:	cbz	w23, 437214 <argp_failure@@Base+0x13a4>
  437148:	ldr	x8, [x19]
  43714c:	ldr	x22, [x19, #16]
  437150:	sub	w25, w23, #0x1
  437154:	add	x24, x8, #0x18
  437158:	ldr	w21, [x24]
  43715c:	tbnz	w21, #3, 43719c <argp_failure@@Base+0x132c>
  437160:	ldur	w26, [x24, #-16]
  437164:	sub	w8, w26, #0x1
  437168:	cmp	w8, #0xfe
  43716c:	b.hi	43719c <argp_failure@@Base+0x132c>  // b.pmore
  437170:	bl	404690 <__ctype_b_loc@plt>
  437174:	ldr	x8, [x0]
  437178:	ldrh	w8, [x8, x26, lsl #1]
  43717c:	tbz	w8, #14, 43719c <argp_failure@@Base+0x132c>
  437180:	ldrb	w8, [x22]
  437184:	cmp	w26, w8
  437188:	b.ne	43719c <argp_failure@@Base+0x132c>  // b.any
  43718c:	tst	w21, #0x2
  437190:	csel	w21, w26, wzr, eq  // eq = none
  437194:	add	x22, x22, #0x1
  437198:	b	4371a0 <argp_failure@@Base+0x1330>
  43719c:	mov	w21, wzr
  4371a0:	subs	w25, w25, #0x1
  4371a4:	b.cc	437218 <argp_failure@@Base+0x13a8>  // b.lo, b.ul, b.last
  4371a8:	add	x24, x24, #0x30
  4371ac:	cbz	w21, 437158 <argp_failure@@Base+0x12e8>
  4371b0:	b	437218 <argp_failure@@Base+0x13a8>
  4371b4:	tst	w10, w11
  4371b8:	b.lt	437414 <argp_failure@@Base+0x15a4>  // b.tstop
  4371bc:	orr	w8, w10, w11
  4371c0:	tbz	w8, #31, 437414 <argp_failure@@Base+0x15a4>
  4371c4:	sub	w0, w10, w11
  4371c8:	b	437414 <argp_failure@@Base+0x15a4>
  4371cc:	tst	w9, w8
  4371d0:	b.lt	437414 <argp_failure@@Base+0x15a4>  // b.tstop
  4371d4:	orr	w10, w9, w8
  4371d8:	tbz	w10, #31, 437414 <argp_failure@@Base+0x15a4>
  4371dc:	sub	w0, w9, w8
  4371e0:	b	437414 <argp_failure@@Base+0x15a4>
  4371e4:	tst	w8, w11
  4371e8:	b.lt	437414 <argp_failure@@Base+0x15a4>  // b.tstop
  4371ec:	orr	w9, w8, w11
  4371f0:	tbz	w9, #31, 437414 <argp_failure@@Base+0x15a4>
  4371f4:	sub	w0, w8, w11
  4371f8:	b	437414 <argp_failure@@Base+0x15a4>
  4371fc:	tst	w8, w10
  437200:	b.lt	437414 <argp_failure@@Base+0x15a4>  // b.tstop
  437204:	orr	w9, w8, w10
  437208:	tbz	w9, #31, 437414 <argp_failure@@Base+0x15a4>
  43720c:	sub	w0, w10, w8
  437210:	b	437414 <argp_failure@@Base+0x15a4>
  437214:	mov	w21, wzr
  437218:	ldr	w24, [x20, #8]
  43721c:	ldr	x25, [x20]
  437220:	cbz	w24, 43728c <argp_failure@@Base+0x141c>
  437224:	ldr	x20, [x20, #16]
  437228:	add	x26, x25, #0x18
  43722c:	sub	w27, w24, #0x1
  437230:	ldr	w22, [x26]
  437234:	tbnz	w22, #3, 437274 <argp_failure@@Base+0x1404>
  437238:	ldur	w28, [x26, #-16]
  43723c:	sub	w8, w28, #0x1
  437240:	cmp	w8, #0xfe
  437244:	b.hi	437274 <argp_failure@@Base+0x1404>  // b.pmore
  437248:	bl	404690 <__ctype_b_loc@plt>
  43724c:	ldr	x8, [x0]
  437250:	ldrh	w8, [x8, x28, lsl #1]
  437254:	tbz	w8, #14, 437274 <argp_failure@@Base+0x1404>
  437258:	ldrb	w8, [x20]
  43725c:	cmp	w28, w8
  437260:	b.ne	437274 <argp_failure@@Base+0x1404>  // b.any
  437264:	tst	w22, #0x2
  437268:	csel	w22, w28, wzr, eq  // eq = none
  43726c:	add	x20, x20, #0x1
  437270:	b	437278 <argp_failure@@Base+0x1408>
  437274:	mov	w22, wzr
  437278:	subs	w27, w27, #0x1
  43727c:	b.cc	437290 <argp_failure@@Base+0x1420>  // b.lo, b.ul, b.last
  437280:	add	x26, x26, #0x30
  437284:	cbz	w22, 437230 <argp_failure@@Base+0x13c0>
  437288:	b	437290 <argp_failure@@Base+0x1420>
  43728c:	mov	w22, wzr
  437290:	ldr	x9, [x19]
  437294:	ldr	w26, [x25, #24]
  437298:	ldr	w8, [x9, #24]
  43729c:	cbnz	w23, 4372b4 <argp_failure@@Base+0x1444>
  4372a0:	mov	x19, xzr
  4372a4:	b	4372c4 <argp_failure@@Base+0x1454>
  4372a8:	subs	w23, w23, #0x1
  4372ac:	add	x9, x9, #0x30
  4372b0:	b.eq	4372a0 <argp_failure@@Base+0x1430>  // b.none
  4372b4:	ldr	x19, [x9]
  4372b8:	cbz	x19, 4372a8 <argp_failure@@Base+0x1438>
  4372bc:	ldrb	w10, [x9, #24]
  4372c0:	tbnz	w10, #1, 4372a8 <argp_failure@@Base+0x1438>
  4372c4:	cbnz	w24, 4372dc <argp_failure@@Base+0x146c>
  4372c8:	mov	x20, xzr
  4372cc:	b	4372ec <argp_failure@@Base+0x147c>
  4372d0:	subs	w24, w24, #0x1
  4372d4:	add	x25, x25, #0x30
  4372d8:	b.eq	4372c8 <argp_failure@@Base+0x1458>  // b.none
  4372dc:	ldr	x20, [x25]
  4372e0:	cbz	x20, 4372d0 <argp_failure@@Base+0x1460>
  4372e4:	ldrb	w9, [x25, #24]
  4372e8:	tbnz	w9, #1, 4372d0 <argp_failure@@Base+0x1460>
  4372ec:	mov	w23, wzr
  4372f0:	tbz	w8, #3, 437338 <argp_failure@@Base+0x14c8>
  4372f4:	cbz	x19, 437338 <argp_failure@@Base+0x14c8>
  4372f8:	bl	404690 <__ctype_b_loc@plt>
  4372fc:	ldr	x8, [x0]
  437300:	ldrb	w9, [x19]
  437304:	ldrh	w10, [x8, x9, lsl #1]
  437308:	tbz	w10, #13, 437318 <argp_failure@@Base+0x14a8>
  43730c:	ldrb	w9, [x19, #1]!
  437310:	ldrh	w10, [x8, x9, lsl #1]
  437314:	tbnz	w10, #13, 43730c <argp_failure@@Base+0x149c>
  437318:	cmp	w9, #0x2d
  43731c:	cset	w23, ne  // ne = any
  437320:	cbz	w9, 437338 <argp_failure@@Base+0x14c8>
  437324:	and	x9, x9, #0xff
  437328:	ldrh	w9, [x8, x9, lsl #1]
  43732c:	tbnz	w9, #3, 437338 <argp_failure@@Base+0x14c8>
  437330:	ldrb	w9, [x19, #1]!
  437334:	cbnz	w9, 437324 <argp_failure@@Base+0x14b4>
  437338:	mov	w9, wzr
  43733c:	tbz	w26, #3, 437384 <argp_failure@@Base+0x1514>
  437340:	cbz	x20, 437384 <argp_failure@@Base+0x1514>
  437344:	bl	404690 <__ctype_b_loc@plt>
  437348:	ldr	x8, [x0]
  43734c:	ldrb	w10, [x20]
  437350:	ldrh	w9, [x8, x10, lsl #1]
  437354:	tbz	w9, #13, 437364 <argp_failure@@Base+0x14f4>
  437358:	ldrb	w10, [x20, #1]!
  43735c:	ldrh	w9, [x8, x10, lsl #1]
  437360:	tbnz	w9, #13, 437358 <argp_failure@@Base+0x14e8>
  437364:	cmp	w10, #0x2d
  437368:	cset	w9, ne  // ne = any
  43736c:	cbz	w10, 437384 <argp_failure@@Base+0x1514>
  437370:	and	x10, x10, #0xff
  437374:	ldrh	w10, [x8, x10, lsl #1]
  437378:	tbnz	w10, #3, 437384 <argp_failure@@Base+0x1514>
  43737c:	ldrb	w10, [x20, #1]!
  437380:	cbnz	w10, 437370 <argp_failure@@Base+0x1500>
  437384:	subs	w0, w23, w9
  437388:	b.ne	437414 <argp_failure@@Base+0x15a4>  // b.any
  43738c:	orr	w8, w22, w21
  437390:	tst	w8, #0xff
  437394:	b.ne	4373c4 <argp_failure@@Base+0x1554>  // b.any
  437398:	cbz	x19, 4373c4 <argp_failure@@Base+0x1554>
  43739c:	cbz	x20, 4373c4 <argp_failure@@Base+0x1554>
  4373a0:	mov	x0, x19
  4373a4:	mov	x1, x20
  4373a8:	ldp	x20, x19, [sp, #80]
  4373ac:	ldp	x22, x21, [sp, #64]
  4373b0:	ldp	x24, x23, [sp, #48]
  4373b4:	ldp	x26, x25, [sp, #32]
  4373b8:	ldp	x28, x27, [sp, #16]
  4373bc:	ldp	x29, x30, [sp], #96
  4373c0:	b	404460 <strcasecmp@plt>
  4373c4:	tst	w21, #0xff
  4373c8:	b.ne	4373d4 <argp_failure@@Base+0x1564>  // b.any
  4373cc:	cbz	x19, 4373d4 <argp_failure@@Base+0x1564>
  4373d0:	ldrb	w21, [x19]
  4373d4:	tst	w22, #0xff
  4373d8:	b.ne	4373ec <argp_failure@@Base+0x157c>  // b.any
  4373dc:	cbz	x20, 4373e8 <argp_failure@@Base+0x1578>
  4373e0:	ldrb	w22, [x20]
  4373e4:	b	4373ec <argp_failure@@Base+0x157c>
  4373e8:	mov	w22, wzr
  4373ec:	bl	404140 <__ctype_tolower_loc@plt>
  4373f0:	ldr	x8, [x0]
  4373f4:	and	x9, x21, #0xff
  4373f8:	and	x10, x22, #0xff
  4373fc:	ldr	w9, [x8, x9, lsl #2]
  437400:	ldr	w8, [x8, x10, lsl #2]
  437404:	and	w10, w22, #0xff
  437408:	subs	w8, w9, w8
  43740c:	sub	w9, w10, w21, uxtb
  437410:	csel	w0, w9, w8, eq  // eq = none
  437414:	ldp	x20, x19, [sp, #80]
  437418:	ldp	x22, x21, [sp, #64]
  43741c:	ldp	x24, x23, [sp, #48]
  437420:	ldp	x26, x25, [sp, #32]
  437424:	ldp	x28, x27, [sp, #16]
  437428:	ldp	x29, x30, [sp], #96
  43742c:	ret
  437430:	stp	x29, x30, [sp, #-64]!
  437434:	stp	x22, x21, [sp, #32]
  437438:	stp	x20, x19, [sp, #48]
  43743c:	ldr	w8, [x1, #24]
  437440:	mov	x20, x1
  437444:	mov	w19, w0
  437448:	str	x23, [sp, #16]
  43744c:	mov	x29, sp
  437450:	cbz	w8, 437534 <argp_failure@@Base+0x16c4>
  437454:	ldr	x9, [x20, #16]
  437458:	ldr	x8, [x20]
  43745c:	ldr	x23, [x9]
  437460:	ldr	x22, [x8, #32]
  437464:	cbz	x23, 4374b4 <argp_failure@@Base+0x1644>
  437468:	ldr	w9, [x9, #8]
  43746c:	cbz	w9, 4374b4 <argp_failure@@Base+0x1644>
  437470:	ldr	w8, [x8, #24]
  437474:	ldr	w9, [x23, #24]
  437478:	cmp	w8, w9
  43747c:	b.eq	4374b4 <argp_failure@@Base+0x1644>  // b.none
  437480:	ldr	x21, [x20, #8]
  437484:	ldp	x8, x9, [x21, #56]
  437488:	cmp	x8, x9
  43748c:	b.cc	4374a4 <argp_failure@@Base+0x1634>  // b.lo, b.ul, b.last
  437490:	mov	w1, #0x1                   	// #1
  437494:	mov	x0, x21
  437498:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  43749c:	cbz	w0, 4374b4 <argp_failure@@Base+0x1644>
  4374a0:	ldr	x8, [x21, #56]
  4374a4:	add	x9, x8, #0x1
  4374a8:	mov	w10, #0xa                   	// #10
  4374ac:	str	x9, [x21, #56]
  4374b0:	strb	w10, [x8]
  4374b4:	cbz	x22, 43752c <argp_failure@@Base+0x16bc>
  4374b8:	ldr	x0, [x22]
  4374bc:	cbz	x0, 43752c <argp_failure@@Base+0x16bc>
  4374c0:	ldrb	w8, [x0]
  4374c4:	cbz	w8, 43752c <argp_failure@@Base+0x16bc>
  4374c8:	cbz	x23, 4374f4 <argp_failure@@Base+0x1684>
  4374cc:	ldr	x8, [x23, #32]
  4374d0:	cmp	x8, x22
  4374d4:	b.eq	43752c <argp_failure@@Base+0x16bc>  // b.none
  4374d8:	cbz	x8, 4374ec <argp_failure@@Base+0x167c>
  4374dc:	ldr	x8, [x8, #16]
  4374e0:	cmp	x8, x22
  4374e4:	b.eq	4374ec <argp_failure@@Base+0x167c>  // b.none
  4374e8:	cbnz	x8, 4374dc <argp_failure@@Base+0x166c>
  4374ec:	cmp	x8, x22
  4374f0:	b.eq	43752c <argp_failure@@Base+0x16bc>  // b.none
  4374f4:	ldr	x8, [x20, #8]
  4374f8:	ldr	x1, [x22, #24]
  4374fc:	mov	x2, x20
  437500:	ldrsw	x23, [x8, #24]
  437504:	bl	437604 <argp_failure@@Base+0x1794>
  437508:	ldr	x21, [x20, #8]
  43750c:	ldp	x9, x8, [x21, #48]
  437510:	ldr	x10, [x21, #32]
  437514:	sub	x8, x8, x9
  437518:	cmp	x8, x10
  43751c:	b.ls	437528 <argp_failure@@Base+0x16b8>  // b.plast
  437520:	mov	x0, x21
  437524:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  437528:	str	x23, [x21, #24]
  43752c:	str	wzr, [x20, #24]
  437530:	b	437570 <argp_failure@@Base+0x1700>
  437534:	ldr	x21, [x20, #8]
  437538:	ldp	x8, x9, [x21, #56]
  43753c:	add	x10, x8, #0x2
  437540:	cmp	x10, x9
  437544:	b.ls	43755c <argp_failure@@Base+0x16ec>  // b.plast
  437548:	mov	w1, #0x2                   	// #2
  43754c:	mov	x0, x21
  437550:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  437554:	cbz	w0, 437570 <argp_failure@@Base+0x1700>
  437558:	ldr	x8, [x21, #56]
  43755c:	mov	w9, #0x202c                	// #8236
  437560:	strh	w9, [x8]
  437564:	ldr	x8, [x21, #56]
  437568:	add	x8, x8, #0x2
  43756c:	str	x8, [x21, #56]
  437570:	ldr	x20, [x20, #8]
  437574:	ldp	x9, x8, [x20, #48]
  437578:	ldr	x10, [x20, #32]
  43757c:	sub	x8, x8, x9
  437580:	cmp	x8, x10
  437584:	b.ls	437590 <argp_failure@@Base+0x1720>  // b.plast
  437588:	mov	x0, x20
  43758c:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  437590:	ldr	x8, [x20, #40]
  437594:	cmp	x8, #0x0
  437598:	csel	w8, w8, wzr, gt
  43759c:	sub	w8, w19, w8
  4375a0:	cmp	w8, #0x1
  4375a4:	b.lt	4375f0 <argp_failure@@Base+0x1780>  // b.tstop
  4375a8:	add	w19, w8, #0x1
  4375ac:	mov	w21, #0x20                  	// #32
  4375b0:	b	4375cc <argp_failure@@Base+0x175c>
  4375b4:	add	x9, x8, #0x1
  4375b8:	str	x9, [x20, #56]
  4375bc:	strb	w21, [x8]
  4375c0:	sub	w19, w19, #0x1
  4375c4:	cmp	w19, #0x1
  4375c8:	b.le	4375f0 <argp_failure@@Base+0x1780>
  4375cc:	ldp	x8, x9, [x20, #56]
  4375d0:	cmp	x8, x9
  4375d4:	b.cc	4375b4 <argp_failure@@Base+0x1744>  // b.lo, b.ul, b.last
  4375d8:	mov	w1, #0x1                   	// #1
  4375dc:	mov	x0, x20
  4375e0:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  4375e4:	cbz	w0, 4375c0 <argp_failure@@Base+0x1750>
  4375e8:	ldr	x8, [x20, #56]
  4375ec:	b	4375b4 <argp_failure@@Base+0x1744>
  4375f0:	ldp	x20, x19, [sp, #48]
  4375f4:	ldp	x22, x21, [sp, #32]
  4375f8:	ldr	x23, [sp, #16]
  4375fc:	ldp	x29, x30, [sp], #64
  437600:	ret
  437604:	stp	x29, x30, [sp, #-80]!
  437608:	stp	x24, x23, [sp, #32]
  43760c:	stp	x22, x21, [sp, #48]
  437610:	stp	x20, x19, [sp, #64]
  437614:	ldr	x8, [x1, #48]
  437618:	mov	x19, x2
  43761c:	mov	x21, x1
  437620:	mov	x1, x0
  437624:	mov	w2, #0x5                   	// #5
  437628:	mov	x0, x8
  43762c:	str	x25, [sp, #16]
  437630:	mov	x29, sp
  437634:	bl	404900 <dcgettext@plt>
  437638:	mov	x20, x0
  43763c:	cbz	x21, 437698 <argp_failure@@Base+0x1828>
  437640:	ldr	x8, [x21, #40]
  437644:	cbz	x8, 437698 <argp_failure@@Base+0x1828>
  437648:	ldr	x1, [x19, #32]
  43764c:	mov	x0, x21
  437650:	bl	4383a0 <argp_parse@@Base+0xaf4>
  437654:	ldr	x8, [x21, #40]
  437658:	mov	x2, x0
  43765c:	mov	w0, #0x3                   	// #3
  437660:	movk	w0, #0x200, lsl #16
  437664:	mov	x1, x20
  437668:	blr	x8
  43766c:	mov	x21, x0
  437670:	cbnz	x21, 4376a0 <argp_failure@@Base+0x1830>
  437674:	cmp	x21, x20
  437678:	b.eq	437894 <argp_failure@@Base+0x1a24>  // b.none
  43767c:	mov	x0, x21
  437680:	ldp	x20, x19, [sp, #64]
  437684:	ldp	x22, x21, [sp, #48]
  437688:	ldp	x24, x23, [sp, #32]
  43768c:	ldr	x25, [sp, #16]
  437690:	ldp	x29, x30, [sp], #80
  437694:	b	404700 <free@plt>
  437698:	mov	x21, x20
  43769c:	cbz	x21, 437674 <argp_failure@@Base+0x1804>
  4376a0:	ldrb	w8, [x21]
  4376a4:	cbz	w8, 437880 <argp_failure@@Base+0x1a10>
  4376a8:	ldr	x8, [x19, #16]
  4376ac:	ldr	x8, [x8]
  4376b0:	cbz	x8, 4376e8 <argp_failure@@Base+0x1878>
  4376b4:	ldr	x22, [x19, #8]
  4376b8:	ldp	x8, x9, [x22, #56]
  4376bc:	cmp	x8, x9
  4376c0:	b.cc	4376d8 <argp_failure@@Base+0x1868>  // b.lo, b.ul, b.last
  4376c4:	mov	w1, #0x1                   	// #1
  4376c8:	mov	x0, x22
  4376cc:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  4376d0:	cbz	w0, 4376e8 <argp_failure@@Base+0x1878>
  4376d4:	ldr	x8, [x22, #56]
  4376d8:	add	x9, x8, #0x1
  4376dc:	mov	w10, #0xa                   	// #10
  4376e0:	str	x9, [x22, #56]
  4376e4:	strb	w10, [x8]
  4376e8:	ldr	x22, [x19, #8]
  4376ec:	adrp	x24, 479000 <_obstack_memory_used@@Base+0x324b0>
  4376f0:	ldr	w23, [x24, #4048]
  4376f4:	ldp	x9, x8, [x22, #48]
  4376f8:	ldr	x10, [x22, #32]
  4376fc:	sub	x8, x8, x9
  437700:	cmp	x8, x10
  437704:	b.ls	437710 <argp_failure@@Base+0x18a0>  // b.plast
  437708:	mov	x0, x22
  43770c:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  437710:	ldr	x8, [x22, #40]
  437714:	cmp	x8, #0x0
  437718:	csel	w8, w8, wzr, gt
  43771c:	sub	w8, w23, w8
  437720:	cmp	w8, #0x1
  437724:	b.lt	437770 <argp_failure@@Base+0x1900>  // b.tstop
  437728:	add	w23, w8, #0x1
  43772c:	mov	w25, #0x20                  	// #32
  437730:	b	43774c <argp_failure@@Base+0x18dc>
  437734:	add	x9, x8, #0x1
  437738:	str	x9, [x22, #56]
  43773c:	strb	w25, [x8]
  437740:	sub	w23, w23, #0x1
  437744:	cmp	w23, #0x1
  437748:	b.le	437770 <argp_failure@@Base+0x1900>
  43774c:	ldp	x8, x9, [x22, #56]
  437750:	cmp	x8, x9
  437754:	b.cc	437734 <argp_failure@@Base+0x18c4>  // b.lo, b.ul, b.last
  437758:	mov	w1, #0x1                   	// #1
  43775c:	mov	x0, x22
  437760:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  437764:	cbz	w0, 437740 <argp_failure@@Base+0x18d0>
  437768:	ldr	x8, [x22, #56]
  43776c:	b	437734 <argp_failure@@Base+0x18c4>
  437770:	ldr	x22, [x19, #8]
  437774:	ldrsw	x25, [x24, #4048]
  437778:	ldp	x10, x9, [x22, #48]
  43777c:	ldr	x8, [x22, #32]
  437780:	sub	x9, x9, x10
  437784:	cmp	x9, x8
  437788:	b.ls	4377ac <argp_failure@@Base+0x193c>  // b.plast
  43778c:	mov	x0, x22
  437790:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  437794:	ldr	x23, [x19, #8]
  437798:	ldrsw	x24, [x24, #4048]
  43779c:	ldp	x10, x9, [x23, #48]
  4377a0:	ldr	x8, [x23, #32]
  4377a4:	sub	x9, x9, x10
  4377a8:	b	4377b4 <argp_failure@@Base+0x1944>
  4377ac:	mov	x24, x25
  4377b0:	mov	x23, x22
  4377b4:	cmp	x9, x8
  4377b8:	str	x25, [x22, #8]
  4377bc:	mov	x22, x23
  4377c0:	b.ls	4377d0 <argp_failure@@Base+0x1960>  // b.plast
  4377c4:	mov	x0, x23
  4377c8:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  4377cc:	ldr	x22, [x19, #8]
  4377d0:	mov	x0, x21
  4377d4:	str	x24, [x23, #24]
  4377d8:	bl	403f40 <strlen@plt>
  4377dc:	cbz	x0, 437820 <argp_failure@@Base+0x19b0>
  4377e0:	mov	x23, x0
  4377e4:	ldp	x0, x8, [x22, #56]
  4377e8:	add	x9, x0, x23
  4377ec:	cmp	x9, x8
  4377f0:	b.ls	437808 <argp_failure@@Base+0x1998>  // b.plast
  4377f4:	mov	x0, x22
  4377f8:	mov	x1, x23
  4377fc:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  437800:	cbz	w0, 437820 <argp_failure@@Base+0x19b0>
  437804:	ldr	x0, [x22, #56]
  437808:	mov	x1, x21
  43780c:	mov	x2, x23
  437810:	bl	403ec0 <memcpy@plt>
  437814:	ldr	x8, [x22, #56]
  437818:	add	x8, x8, x23
  43781c:	str	x8, [x22, #56]
  437820:	ldr	x23, [x19, #8]
  437824:	ldp	x9, x8, [x23, #48]
  437828:	ldr	x10, [x23, #32]
  43782c:	mov	x22, x23
  437830:	sub	x9, x8, x9
  437834:	cmp	x9, x10
  437838:	b.ls	43784c <argp_failure@@Base+0x19dc>  // b.plast
  43783c:	mov	x0, x23
  437840:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  437844:	ldr	x22, [x19, #8]
  437848:	ldr	x8, [x22, #56]
  43784c:	str	xzr, [x23, #8]
  437850:	ldr	x9, [x22, #64]
  437854:	cmp	x8, x9
  437858:	b.cc	437870 <argp_failure@@Base+0x1a00>  // b.lo, b.ul, b.last
  43785c:	mov	w1, #0x1                   	// #1
  437860:	mov	x0, x22
  437864:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  437868:	cbz	w0, 437880 <argp_failure@@Base+0x1a10>
  43786c:	ldr	x8, [x22, #56]
  437870:	add	x9, x8, #0x1
  437874:	mov	w10, #0xa                   	// #10
  437878:	str	x9, [x22, #56]
  43787c:	strb	w10, [x8]
  437880:	ldr	x8, [x19, #16]
  437884:	mov	w9, #0x1                   	// #1
  437888:	str	w9, [x8, #8]
  43788c:	cmp	x21, x20
  437890:	b.ne	43767c <argp_failure@@Base+0x180c>  // b.any
  437894:	ldp	x20, x19, [sp, #64]
  437898:	ldp	x22, x21, [sp, #48]
  43789c:	ldp	x24, x23, [sp, #32]
  4378a0:	ldr	x25, [sp, #16]
  4378a4:	ldp	x29, x30, [sp], #80
  4378a8:	ret

00000000004378ac <argp_parse@@Base>:
  4378ac:	stp	x29, x30, [sp, #-96]!
  4378b0:	stp	x28, x27, [sp, #16]
  4378b4:	stp	x26, x25, [sp, #32]
  4378b8:	stp	x24, x23, [sp, #48]
  4378bc:	stp	x22, x21, [sp, #64]
  4378c0:	stp	x20, x19, [sp, #80]
  4378c4:	mov	x29, sp
  4378c8:	sub	sp, sp, #0x170
  4378cc:	mov	x19, sp
  4378d0:	mov	w24, w3
  4378d4:	mov	x22, x2
  4378d8:	mov	w21, w1
  4378dc:	mov	x25, x0
  4378e0:	stp	x4, x5, [x19, #8]
  4378e4:	tbnz	w3, #0, 437908 <argp_parse@@Base+0x5c>
  4378e8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4378ec:	ldr	x9, [x8, #88]
  4378f0:	cbnz	x9, 4378fc <argp_parse@@Base+0x50>
  4378f4:	ldr	x9, [x22]
  4378f8:	str	x9, [x8, #88]
  4378fc:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  437900:	ldr	x8, [x20, #128]
  437904:	cbz	x8, 437bf8 <argp_parse@@Base+0x34c>
  437908:	add	x27, x19, #0x18
  43790c:	tbnz	w24, #4, 43799c <argp_parse@@Base+0xf0>
  437910:	mov	x10, sp
  437914:	sub	x8, x10, #0x80
  437918:	mov	sp, x8
  43791c:	mov	x11, sp
  437920:	sub	x9, x11, #0x40
  437924:	mov	sp, x9
  437928:	movi	v0.2d, #0x0
  43792c:	stur	xzr, [x11, #-16]
  437930:	stp	q0, q0, [x11, #-48]
  437934:	stur	q0, [x11, #-64]
  437938:	stur	x8, [x11, #-32]
  43793c:	stp	q0, q0, [x10, #-32]
  437940:	stp	q0, q0, [x10, #-64]
  437944:	stp	q0, q0, [x10, #-96]
  437948:	stp	q0, q0, [x10, #-128]
  43794c:	cbz	x25, 437954 <argp_parse@@Base+0xa8>
  437950:	str	x25, [x8], #32
  437954:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  437958:	ldr	x10, [x10, #4088]
  43795c:	adrp	x11, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  437960:	add	x11, x11, #0xcc8
  437964:	str	x11, [x8]
  437968:	cbnz	x10, 437980 <argp_parse@@Base+0xd4>
  43796c:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  437970:	ldr	x10, [x10, #2456]
  437974:	cbnz	x10, 437980 <argp_parse@@Base+0xd4>
  437978:	mov	w10, #0x1                   	// #1
  43797c:	b	437990 <argp_parse@@Base+0xe4>
  437980:	adrp	x10, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  437984:	add	x10, x10, #0xd00
  437988:	str	x10, [x8, #32]
  43798c:	mov	w10, #0x2                   	// #2
  437990:	lsl	x10, x10, #5
  437994:	mov	x25, x9
  437998:	str	xzr, [x8, x10]
  43799c:	mov	w8, #0x1                   	// #1
  4379a0:	movi	v0.2d, #0x0
  4379a4:	bic	w8, w8, w24, lsr #2
  4379a8:	stur	q0, [x27, #248]
  4379ac:	stur	q0, [x27, #232]
  4379b0:	stur	q0, [x27, #216]
  4379b4:	stp	x8, xzr, [x29, #-80]
  4379b8:	stp	xzr, xzr, [x29, #-64]
  4379bc:	cbz	x25, 4379f0 <argp_parse@@Base+0x144>
  4379c0:	sub	x1, x29, #0x50
  4379c4:	mov	x0, x25
  4379c8:	bl	438598 <argp_parse@@Base+0xcec>
  4379cc:	ldp	x9, x10, [x29, #-64]
  4379d0:	ldp	x8, x11, [x29, #-80]
  4379d4:	mov	w12, #0x48                  	// #72
  4379d8:	mul	x9, x9, x12
  4379dc:	lsl	x26, x10, #3
  4379e0:	lsl	x10, x11, #5
  4379e4:	add	x20, x9, #0x48
  4379e8:	add	x9, x10, #0x20
  4379ec:	b	4379fc <argp_parse@@Base+0x150>
  4379f0:	mov	x26, xzr
  4379f4:	mov	w20, #0x48                  	// #72
  4379f8:	mov	w9, #0x20                  	// #32
  4379fc:	add	x23, x20, x26
  437a00:	add	x28, x23, x9
  437a04:	add	x8, x8, x28
  437a08:	add	x0, x8, #0x1
  437a0c:	bl	404250 <malloc@plt>
  437a10:	str	x0, [x19, #232]
  437a14:	cbz	x0, 437a88 <argp_parse@@Base+0x1dc>
  437a18:	ldur	q1, [x27, #216]
  437a1c:	ldur	q2, [x27, #232]
  437a20:	ldur	q3, [x27, #248]
  437a24:	add	x8, x0, x20
  437a28:	add	x9, x0, x23
  437a2c:	add	x10, x0, x28
  437a30:	movi	v0.2s, #0x1
  437a34:	str	x0, [x19, #104]
  437a38:	mov	x0, x8
  437a3c:	mov	w1, wzr
  437a40:	mov	x2, x26
  437a44:	str	x8, [x19, #120]
  437a48:	stp	x10, x9, [x19, #32]
  437a4c:	str	d0, [x19, #48]
  437a50:	stur	q1, [x19, #56]
  437a54:	stur	q2, [x19, #72]
  437a58:	stur	q3, [x19, #88]
  437a5c:	bl	404360 <memset@plt>
  437a60:	ldur	q0, [x19, #32]
  437a64:	ldr	x8, [x19, #120]
  437a68:	add	x9, x19, #0x18
  437a6c:	stur	x9, [x29, #-48]
  437a70:	stur	q0, [x29, #-40]
  437a74:	stur	x8, [x29, #-24]
  437a78:	tbnz	w24, #3, 437a90 <argp_parse@@Base+0x1e4>
  437a7c:	tbz	w24, #2, 437aa4 <argp_parse@@Base+0x1f8>
  437a80:	mov	w8, #0x2b                  	// #43
  437a84:	b	437a94 <argp_parse@@Base+0x1e8>
  437a88:	mov	w24, #0xc                   	// #12
  437a8c:	b	4382f8 <argp_parse@@Base+0xa4c>
  437a90:	mov	w8, #0x2d                  	// #45
  437a94:	fmov	x9, d0
  437a98:	add	x10, x9, #0x1
  437a9c:	stur	x10, [x29, #-40]
  437aa0:	strb	w8, [x9]
  437aa4:	ldur	x8, [x29, #-40]
  437aa8:	strb	wzr, [x8]
  437aac:	ldur	x8, [x29, #-32]
  437ab0:	str	xzr, [x8]
  437ab4:	str	x25, [x19, #24]
  437ab8:	cbz	x25, 437ae0 <argp_parse@@Base+0x234>
  437abc:	ldr	x3, [x19, #104]
  437ac0:	sub	x4, x29, #0x30
  437ac4:	mov	x0, x25
  437ac8:	mov	x1, xzr
  437acc:	mov	w2, wzr
  437ad0:	bl	438664 <argp_parse@@Base+0xdb8>
  437ad4:	ldr	x25, [x19, #24]
  437ad8:	ldr	x28, [x19, #104]
  437adc:	b	437ae8 <argp_parse@@Base+0x23c>
  437ae0:	ldr	x0, [x19, #104]
  437ae4:	mov	x28, x0
  437ae8:	str	x0, [x19, #112]
  437aec:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  437af0:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  437af4:	ldr	x9, [x9, #96]
  437af8:	ldr	x10, [x10, #104]
  437afc:	mov	w26, #0x6                   	// #6
  437b00:	add	x8, x19, #0x18
  437b04:	movi	v0.2d, #0x0
  437b08:	movk	w26, #0x100, lsl #16
  437b0c:	cmp	x28, x0
  437b10:	stur	q0, [x19, #136]
  437b14:	mov	w11, #0x1                   	// #1
  437b18:	str	w21, [x19, #144]
  437b1c:	add	x21, x8, #0x70
  437b20:	stur	q0, [x19, #152]
  437b24:	str	x25, [x19, #136]
  437b28:	stur	q0, [x19, #168]
  437b2c:	stur	q0, [x19, #184]
  437b30:	str	x22, [x19, #152]
  437b34:	stp	wzr, w24, [x19, #160]
  437b38:	stp	xzr, x9, [x19, #200]
  437b3c:	stp	x10, x8, [x19, #216]
  437b40:	str	w11, [x19, #128]
  437b44:	b.cs	437c1c <argp_parse@@Base+0x370>  // b.hs, b.nlast
  437b48:	ldr	x8, [x19, #16]
  437b4c:	mov	w24, wzr
  437b50:	sub	w23, w26, #0x3
  437b54:	str	x8, [x28, #48]
  437b58:	b	437ba0 <argp_parse@@Base+0x2f4>
  437b5c:	ldr	x9, [x28, #64]
  437b60:	mov	w0, w23
  437b64:	mov	x1, xzr
  437b68:	mov	x2, x21
  437b6c:	str	x9, [x19, #192]
  437b70:	ldr	q0, [x28, #48]
  437b74:	stur	q0, [x27, #152]
  437b78:	ldr	w9, [x28, #24]
  437b7c:	str	w9, [x19, #168]
  437b80:	blr	x8
  437b84:	ldr	x8, [x19, #192]
  437b88:	mov	w24, w0
  437b8c:	str	x8, [x28, #64]
  437b90:	ldr	x8, [x19, #112]
  437b94:	add	x28, x28, #0x48
  437b98:	cmp	x28, x8
  437b9c:	b.cs	437c10 <argp_parse@@Base+0x364>  // b.hs, b.nlast
  437ba0:	cmp	w24, #0x7
  437ba4:	b.eq	437bac <argp_parse@@Base+0x300>  // b.none
  437ba8:	cbnz	w24, 4382f8 <argp_parse@@Base+0xa4c>
  437bac:	ldr	x8, [x28, #32]
  437bb0:	cbz	x8, 437bc4 <argp_parse@@Base+0x318>
  437bb4:	ldr	x8, [x8, #56]
  437bb8:	ldr	w9, [x28, #40]
  437bbc:	ldr	x8, [x8, x9, lsl #3]
  437bc0:	str	x8, [x28, #48]
  437bc4:	ldr	x8, [x28]
  437bc8:	cbnz	x8, 437b5c <argp_parse@@Base+0x2b0>
  437bcc:	ldr	x8, [x28, #8]
  437bd0:	ldr	x8, [x8, #32]
  437bd4:	cbz	x8, 437bf0 <argp_parse@@Base+0x344>
  437bd8:	ldr	x8, [x8]
  437bdc:	cbz	x8, 437bf0 <argp_parse@@Base+0x344>
  437be0:	ldp	x8, x9, [x28, #48]
  437be4:	str	x8, [x9]
  437be8:	ldr	x8, [x28]
  437bec:	cbnz	x8, 437b5c <argp_parse@@Base+0x2b0>
  437bf0:	mov	w24, #0x7                   	// #7
  437bf4:	b	437b90 <argp_parse@@Base+0x2e4>
  437bf8:	ldr	x0, [x22]
  437bfc:	bl	43925c <argp_parse@@Base+0x19b0>
  437c00:	str	x0, [x20, #128]
  437c04:	add	x27, x19, #0x18
  437c08:	tbz	w24, #4, 437910 <argp_parse@@Base+0x64>
  437c0c:	b	43799c <argp_parse@@Base+0xf0>
  437c10:	cmp	w24, #0x7
  437c14:	b.eq	437c1c <argp_parse@@Base+0x370>  // b.none
  437c18:	cbnz	w24, 4382f8 <argp_parse@@Base+0xa4c>
  437c1c:	ldr	w8, [x19, #164]
  437c20:	tbnz	w8, #1, 437c30 <argp_parse@@Base+0x384>
  437c24:	mov	w8, #0x1                   	// #1
  437c28:	str	w8, [x19, #52]
  437c2c:	b	437c50 <argp_parse@@Base+0x3a4>
  437c30:	str	wzr, [x19, #52]
  437c34:	tbz	w8, #0, 437c50 <argp_parse@@Base+0x3a4>
  437c38:	ldr	x8, [x19, #152]
  437c3c:	ldr	w9, [x19, #144]
  437c40:	sub	x8, x8, #0x8
  437c44:	add	w9, w9, #0x1
  437c48:	str	x8, [x19, #152]
  437c4c:	str	w9, [x19, #144]
  437c50:	ldr	x8, [x19, #152]
  437c54:	cmp	x8, x22
  437c58:	b.eq	437c6c <argp_parse@@Base+0x3c0>  // b.none
  437c5c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  437c60:	ldr	x8, [x8, #128]
  437c64:	str	x8, [x19, #200]
  437c68:	b	437c7c <argp_parse@@Base+0x3d0>
  437c6c:	ldr	x0, [x22]
  437c70:	cbz	x0, 437c5c <argp_parse@@Base+0x3b0>
  437c74:	bl	43925c <argp_parse@@Base+0x19b0>
  437c78:	str	x0, [x19, #200]
  437c7c:	add	x8, x19, #0x18
  437c80:	mov	w28, #0xffffffff            	// #-1
  437c84:	add	x23, x8, #0x18
  437c88:	b	437ca4 <argp_parse@@Base+0x3f8>
  437c8c:	mov	w8, #0x6                   	// #6
  437c90:	movk	w8, #0x100, lsl #16
  437c94:	cbz	w24, 437e60 <argp_parse@@Base+0x5b4>
  437c98:	cmp	w24, #0x7
  437c9c:	b.eq	437fec <argp_parse@@Base+0x740>  // b.none
  437ca0:	cbnz	w24, 4380d4 <argp_parse@@Base+0x828>
  437ca4:	ldr	w8, [x19, #172]
  437ca8:	cbz	w8, 437cbc <argp_parse@@Base+0x410>
  437cac:	ldr	w22, [x19, #160]
  437cb0:	cmp	w22, w8
  437cb4:	b.ge	437d50 <argp_parse@@Base+0x4a4>  // b.tcont
  437cb8:	str	wzr, [x19, #172]
  437cbc:	ldr	w8, [x19, #128]
  437cc0:	ldr	w22, [x19, #160]
  437cc4:	cbz	w8, 437d50 <argp_parse@@Base+0x4a4>
  437cc8:	ldr	w0, [x19, #144]
  437ccc:	ldr	x1, [x19, #152]
  437cd0:	ldrb	w8, [x19, #164]
  437cd4:	ldp	x2, x3, [x19, #32]
  437cd8:	mov	x4, xzr
  437cdc:	mov	x5, x23
  437ce0:	str	w22, [x19, #48]
  437ce4:	str	w28, [x19, #56]
  437ce8:	tbnz	w8, #6, 437cf4 <argp_parse@@Base+0x448>
  437cec:	bl	44674c <argp_parse@@Base+0xeea0>
  437cf0:	b	437cf8 <argp_parse@@Base+0x44c>
  437cf4:	bl	446768 <argp_parse@@Base+0xeebc>
  437cf8:	ldr	w22, [x19, #48]
  437cfc:	mov	w25, w0
  437d00:	cmn	w0, #0x1
  437d04:	str	w22, [x19, #160]
  437d08:	b.eq	437d24 <argp_parse@@Base+0x478>  // b.none
  437d0c:	cmp	w25, #0x3f
  437d10:	b.eq	437ea8 <argp_parse@@Base+0x5fc>  // b.none
  437d14:	cmp	w25, #0x1
  437d18:	b.ne	437eb8 <argp_parse@@Base+0x60c>  // b.any
  437d1c:	ldr	x25, [x19, #64]
  437d20:	b	437d7c <argp_parse@@Base+0x4d0>
  437d24:	cmp	w22, #0x2
  437d28:	str	wzr, [x19, #128]
  437d2c:	b.lt	437d50 <argp_parse@@Base+0x4a4>  // b.tstop
  437d30:	ldr	x8, [x19, #152]
  437d34:	sub	w9, w22, #0x1
  437d38:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  437d3c:	add	x1, x1, #0x84
  437d40:	ldr	x0, [x8, w9, sxtw #3]
  437d44:	bl	404660 <strcmp@plt>
  437d48:	cbnz	w0, 437d50 <argp_parse@@Base+0x4a4>
  437d4c:	str	w22, [x19, #172]
  437d50:	ldr	w8, [x19, #144]
  437d54:	cmp	w22, w8
  437d58:	b.ge	438000 <argp_parse@@Base+0x754>  // b.tcont
  437d5c:	ldrb	w8, [x19, #164]
  437d60:	tbnz	w8, #2, 438000 <argp_parse@@Base+0x754>
  437d64:	ldr	x8, [x19, #152]
  437d68:	add	w9, w22, #0x1
  437d6c:	str	w9, [x19, #160]
  437d70:	ldr	x25, [x8, w22, sxtw #3]
  437d74:	mov	w22, w9
  437d78:	str	x25, [x19, #64]
  437d7c:	ldp	x9, x10, [x19, #104]
  437d80:	sub	w8, w22, #0x1
  437d84:	str	w8, [x19, #160]
  437d88:	cmp	x9, x10
  437d8c:	b.cs	437fec <argp_parse@@Base+0x740>  // b.hs, b.nlast
  437d90:	add	x20, x9, #0x48
  437d94:	add	w9, w8, #0x1
  437d98:	str	w9, [x19, #160]
  437d9c:	ldur	x9, [x20, #-72]
  437da0:	cbz	x9, 437e2c <argp_parse@@Base+0x580>
  437da4:	ldur	x8, [x20, #-8]
  437da8:	mov	w0, wzr
  437dac:	mov	x1, x25
  437db0:	mov	x2, x21
  437db4:	str	x8, [x19, #192]
  437db8:	ldur	q0, [x20, #-24]
  437dbc:	stur	q0, [x27, #152]
  437dc0:	ldur	w8, [x20, #-48]
  437dc4:	str	w8, [x19, #168]
  437dc8:	blr	x9
  437dcc:	ldr	x8, [x19, #192]
  437dd0:	cmp	w0, #0x7
  437dd4:	stur	x8, [x20, #-8]
  437dd8:	b.ne	437e54 <argp_parse@@Base+0x5a8>  // b.any
  437ddc:	ldr	w9, [x19, #160]
  437de0:	ldur	x8, [x20, #-72]
  437de4:	sub	w9, w9, #0x1
  437de8:	str	w9, [x19, #160]
  437dec:	cbz	x8, 437e30 <argp_parse@@Base+0x584>
  437df0:	ldur	q0, [x20, #-24]
  437df4:	mov	w0, #0x6                   	// #6
  437df8:	movk	w0, #0x100, lsl #16
  437dfc:	mov	x1, xzr
  437e00:	stur	q0, [x27, #152]
  437e04:	ldur	w9, [x20, #-48]
  437e08:	mov	x2, x21
  437e0c:	str	w9, [x19, #168]
  437e10:	blr	x8
  437e14:	ldr	x8, [x19, #192]
  437e18:	mov	w24, w0
  437e1c:	stur	x8, [x20, #-8]
  437e20:	cmp	w24, #0x7
  437e24:	b.eq	437e3c <argp_parse@@Base+0x590>  // b.none
  437e28:	b	437c8c <argp_parse@@Base+0x3e0>
  437e2c:	str	w8, [x19, #160]
  437e30:	mov	w24, #0x7                   	// #7
  437e34:	cmp	w24, #0x7
  437e38:	b.ne	437c8c <argp_parse@@Base+0x3e0>  // b.any
  437e3c:	ldr	x8, [x19, #112]
  437e40:	cmp	x20, x8
  437e44:	b.cs	437c8c <argp_parse@@Base+0x3e0>  // b.hs, b.nlast
  437e48:	ldr	w8, [x19, #160]
  437e4c:	add	x20, x20, #0x48
  437e50:	b	437d94 <argp_parse@@Base+0x4e8>
  437e54:	mov	w24, w0
  437e58:	mov	w8, wzr
  437e5c:	cbnz	w24, 437c98 <argp_parse@@Base+0x3ec>
  437e60:	cmp	w8, w26
  437e64:	b.ne	437e74 <argp_parse@@Base+0x5c8>  // b.any
  437e68:	ldr	w8, [x19, #144]
  437e6c:	str	w8, [x19, #160]
  437e70:	b	437e78 <argp_parse@@Base+0x5cc>
  437e74:	ldr	w8, [x19, #160]
  437e78:	mov	w24, wzr
  437e7c:	subs	w8, w8, w22
  437e80:	b.ge	437e90 <argp_parse@@Base+0x5e4>  // b.tcont
  437e84:	mov	w8, #0x1                   	// #1
  437e88:	str	w8, [x19, #128]
  437e8c:	b	437ca0 <argp_parse@@Base+0x3f4>
  437e90:	ldur	w9, [x20, #-48]
  437e94:	add	w8, w8, w9
  437e98:	add	w8, w8, #0x1
  437e9c:	stur	w8, [x20, #-48]
  437ea0:	cbz	w24, 437ca4 <argp_parse@@Base+0x3f8>
  437ea4:	b	4380d4 <argp_parse@@Base+0x828>
  437ea8:	ldr	w8, [x19, #56]
  437eac:	cmn	w8, #0x1
  437eb0:	b.eq	437f1c <argp_parse@@Base+0x670>  // b.none
  437eb4:	b	438214 <argp_parse@@Base+0x968>
  437eb8:	asr	w8, w25, #24
  437ebc:	cbz	w8, 437f1c <argp_parse@@Base+0x670>
  437ec0:	ldr	x9, [x19, #104]
  437ec4:	sxtw	x8, w8
  437ec8:	sub	x10, x8, #0x1
  437ecc:	mov	w8, #0x48                  	// #72
  437ed0:	mul	x8, x10, x8
  437ed4:	ldr	x8, [x9, x8]
  437ed8:	cbz	x8, 438328 <argp_parse@@Base+0xa7c>
  437edc:	mov	w11, #0x48                  	// #72
  437ee0:	madd	x20, x10, x11, x9
  437ee4:	ldr	x1, [x19, #64]
  437ee8:	ldr	x9, [x20, #64]!
  437eec:	sbfx	w0, w25, #23, #1
  437ef0:	bfxil	w0, w25, #0, #24
  437ef4:	mov	x2, x21
  437ef8:	str	x9, [x19, #192]
  437efc:	ldur	q0, [x20, #-16]
  437f00:	stur	q0, [x27, #152]
  437f04:	ldur	w9, [x20, #-40]
  437f08:	str	w9, [x19, #168]
  437f0c:	blr	x8
  437f10:	mov	w24, w0
  437f14:	mov	w8, wzr
  437f18:	b	437f98 <argp_parse@@Base+0x6ec>
  437f1c:	ldr	x0, [x19, #32]
  437f20:	mov	w1, w25
  437f24:	bl	4047a0 <strchr@plt>
  437f28:	cbz	x0, 437fac <argp_parse@@Base+0x700>
  437f2c:	ldp	x8, x9, [x19, #104]
  437f30:	cmp	x8, x9
  437f34:	b.cs	437fac <argp_parse@@Base+0x700>  // b.hs, b.nlast
  437f38:	add	x8, x8, #0x30
  437f3c:	ldur	x10, [x8, #-32]
  437f40:	cmp	x10, x0
  437f44:	b.hi	437f5c <argp_parse@@Base+0x6b0>  // b.pmore
  437f48:	add	x10, x8, #0x18
  437f4c:	add	x8, x8, #0x48
  437f50:	cmp	x10, x9
  437f54:	b.cc	437f3c <argp_parse@@Base+0x690>  // b.lo, b.ul, b.last
  437f58:	b	437fac <argp_parse@@Base+0x700>
  437f5c:	ldur	x9, [x8, #-48]
  437f60:	cbz	x9, 437fac <argp_parse@@Base+0x700>
  437f64:	mov	x20, x8
  437f68:	ldr	x1, [x19, #64]
  437f6c:	ldr	x10, [x20, #16]!
  437f70:	mov	w0, w25
  437f74:	mov	x2, x21
  437f78:	str	x10, [x19, #192]
  437f7c:	ldr	q0, [x8]
  437f80:	stur	q0, [x27, #152]
  437f84:	ldur	w8, [x8, #-24]
  437f88:	str	w8, [x19, #168]
  437f8c:	blr	x9
  437f90:	mov	w24, w0
  437f94:	mov	w8, #0x1                   	// #1
  437f98:	ldr	x9, [x19, #192]
  437f9c:	cmp	w24, #0x7
  437fa0:	str	x9, [x20]
  437fa4:	b.ne	437ca0 <argp_parse@@Base+0x3f4>  // b.any
  437fa8:	cbz	w8, 438328 <argp_parse@@Base+0xa7c>
  437fac:	ldr	x8, [x19, #24]
  437fb0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  437fb4:	add	x1, x1, #0xe88
  437fb8:	mov	w2, #0x5                   	// #5
  437fbc:	ldr	x0, [x8, #48]
  437fc0:	bl	404900 <dcgettext@plt>
  437fc4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  437fc8:	mov	x3, x0
  437fcc:	add	x1, x1, #0xf80
  437fd0:	mov	x0, x21
  437fd4:	mov	w2, w25
  437fd8:	bl	435cf0 <argp_error@@Base>
  437fdc:	mov	w8, wzr
  437fe0:	cmn	w25, #0x1
  437fe4:	b.ne	437ffc <argp_parse@@Base+0x750>  // b.any
  437fe8:	b	438000 <argp_parse@@Base+0x754>
  437fec:	mov	w25, #0x1                   	// #1
  437ff0:	mov	w8, #0x1                   	// #1
  437ff4:	cmn	w25, #0x1
  437ff8:	b.eq	438000 <argp_parse@@Base+0x754>  // b.none
  437ffc:	tbz	w8, #0, 438214 <argp_parse@@Base+0x968>
  438000:	ldr	w8, [x19, #160]
  438004:	ldr	w9, [x19, #144]
  438008:	cmp	w8, w9
  43800c:	b.ne	438094 <argp_parse@@Base+0x7e8>  // b.any
  438010:	ldp	x23, x8, [x19, #104]
  438014:	cmp	x23, x8
  438018:	b.cs	4380a4 <argp_parse@@Base+0x7f8>  // b.hs, b.nlast
  43801c:	mov	w24, wzr
  438020:	sub	w22, w26, #0x4
  438024:	b	43803c <argp_parse@@Base+0x790>
  438028:	ldr	w9, [x23, #24]
  43802c:	cbz	w9, 43804c <argp_parse@@Base+0x7a0>
  438030:	add	x23, x23, #0x48
  438034:	cmp	x23, x8
  438038:	b.cs	4380ac <argp_parse@@Base+0x800>  // b.hs, b.nlast
  43803c:	cmp	w24, #0x7
  438040:	b.eq	438028 <argp_parse@@Base+0x77c>  // b.none
  438044:	cbz	w24, 438028 <argp_parse@@Base+0x77c>
  438048:	b	4380ac <argp_parse@@Base+0x800>
  43804c:	ldr	x9, [x23]
  438050:	cbz	x9, 43808c <argp_parse@@Base+0x7e0>
  438054:	ldr	x8, [x23, #64]
  438058:	mov	w0, w22
  43805c:	mov	x1, xzr
  438060:	mov	x2, x21
  438064:	str	x8, [x19, #192]
  438068:	ldr	q0, [x23, #48]
  43806c:	stur	q0, [x27, #152]
  438070:	str	wzr, [x19, #168]
  438074:	blr	x9
  438078:	ldr	x8, [x19, #192]
  43807c:	mov	w24, w0
  438080:	str	x8, [x23, #64]
  438084:	ldr	x8, [x19, #112]
  438088:	b	438030 <argp_parse@@Base+0x784>
  43808c:	mov	w24, #0x7                   	// #7
  438090:	b	438030 <argp_parse@@Base+0x784>
  438094:	ldr	x9, [x19, #8]
  438098:	cbz	x9, 4381d8 <argp_parse@@Base+0x92c>
  43809c:	str	w8, [x9]
  4380a0:	b	4380e4 <argp_parse@@Base+0x838>
  4380a4:	mov	w24, wzr
  4380a8:	b	4380b0 <argp_parse@@Base+0x804>
  4380ac:	ldr	x23, [x19, #104]
  4380b0:	sub	x20, x8, #0x48
  4380b4:	cmp	x20, x23
  4380b8:	b.cs	43816c <argp_parse@@Base+0x8c0>  // b.hs, b.nlast
  4380bc:	cmp	w24, #0x7
  4380c0:	csel	w24, wzr, w24, eq  // eq = none
  4380c4:	ldr	x9, [x19, #8]
  4380c8:	cbz	x9, 4380d4 <argp_parse@@Base+0x828>
  4380cc:	ldr	w8, [x19, #160]
  4380d0:	str	w8, [x9]
  4380d4:	cbz	w24, 4380e4 <argp_parse@@Base+0x838>
  4380d8:	cmp	w24, #0x7
  4380dc:	b.eq	438214 <argp_parse@@Base+0x968>  // b.none
  4380e0:	b	438228 <argp_parse@@Base+0x97c>
  4380e4:	ldp	x22, x8, [x19, #104]
  4380e8:	sub	x23, x8, #0x48
  4380ec:	cmp	x23, x22
  4380f0:	b.cs	4380fc <argp_parse@@Base+0x850>  // b.hs, b.nlast
  4380f4:	mov	w24, wzr
  4380f8:	b	43828c <argp_parse@@Base+0x9e0>
  4380fc:	mov	w24, wzr
  438100:	sub	w20, w26, #0x2
  438104:	b	438154 <argp_parse@@Base+0x8a8>
  438108:	ldr	x8, [x23]
  43810c:	cbz	x8, 438164 <argp_parse@@Base+0x8b8>
  438110:	ldr	x9, [x23, #64]
  438114:	mov	w0, w20
  438118:	mov	x1, xzr
  43811c:	mov	x2, x21
  438120:	str	x9, [x19, #192]
  438124:	ldr	q0, [x23, #48]
  438128:	stur	q0, [x27, #152]
  43812c:	ldr	w9, [x23, #24]
  438130:	str	w9, [x19, #168]
  438134:	blr	x8
  438138:	ldr	x8, [x19, #192]
  43813c:	mov	w24, w0
  438140:	str	x8, [x23, #64]
  438144:	ldr	x22, [x19, #104]
  438148:	sub	x23, x23, #0x48
  43814c:	cmp	x23, x22
  438150:	b.cc	43831c <argp_parse@@Base+0xa70>  // b.lo, b.ul, b.last
  438154:	cmp	w24, #0x7
  438158:	b.eq	438108 <argp_parse@@Base+0x85c>  // b.none
  43815c:	cbz	w24, 438108 <argp_parse@@Base+0x85c>
  438160:	b	43828c <argp_parse@@Base+0x9e0>
  438164:	mov	w24, #0x7                   	// #7
  438168:	b	438148 <argp_parse@@Base+0x89c>
  43816c:	sub	w22, w26, #0x5
  438170:	b	4381c0 <argp_parse@@Base+0x914>
  438174:	ldr	x8, [x20]
  438178:	cbz	x8, 4381d0 <argp_parse@@Base+0x924>
  43817c:	ldr	x9, [x20, #64]
  438180:	mov	w0, w22
  438184:	mov	x1, xzr
  438188:	mov	x2, x21
  43818c:	str	x9, [x19, #192]
  438190:	ldr	q0, [x20, #48]
  438194:	stur	q0, [x27, #152]
  438198:	ldr	w9, [x20, #24]
  43819c:	str	w9, [x19, #168]
  4381a0:	blr	x8
  4381a4:	ldr	x8, [x19, #192]
  4381a8:	mov	w24, w0
  4381ac:	str	x8, [x20, #64]
  4381b0:	ldr	x23, [x19, #104]
  4381b4:	sub	x20, x20, #0x48
  4381b8:	cmp	x20, x23
  4381bc:	b.cc	4380bc <argp_parse@@Base+0x810>  // b.lo, b.ul, b.last
  4381c0:	cmp	w24, #0x7
  4381c4:	b.eq	438174 <argp_parse@@Base+0x8c8>  // b.none
  4381c8:	cbz	w24, 438174 <argp_parse@@Base+0x8c8>
  4381cc:	b	4380c4 <argp_parse@@Base+0x818>
  4381d0:	mov	w24, #0x7                   	// #7
  4381d4:	b	4381b4 <argp_parse@@Base+0x908>
  4381d8:	ldrb	w8, [x19, #164]
  4381dc:	tbnz	w8, #1, 438214 <argp_parse@@Base+0x968>
  4381e0:	ldr	x20, [x19, #208]
  4381e4:	cbz	x20, 438214 <argp_parse@@Base+0x968>
  4381e8:	ldr	x8, [x19, #24]
  4381ec:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4381f0:	add	x1, x1, #0xf95
  4381f4:	mov	w2, #0x5                   	// #5
  4381f8:	ldr	x0, [x8, #48]
  4381fc:	bl	404900 <dcgettext@plt>
  438200:	ldr	x3, [x19, #200]
  438204:	mov	x2, x0
  438208:	mov	w1, #0x1                   	// #1
  43820c:	mov	x0, x20
  438210:	bl	404650 <__fprintf_chk@plt>
  438214:	ldr	x1, [x19, #208]
  438218:	mov	w2, #0x104                 	// #260
  43821c:	mov	x0, x21
  438220:	bl	435c58 <argp_state_help@@Base>
  438224:	mov	w24, #0x7                   	// #7
  438228:	ldp	x22, x8, [x19, #104]
  43822c:	cmp	x22, x8
  438230:	b.cs	43828c <argp_parse@@Base+0x9e0>  // b.hs, b.nlast
  438234:	sub	w20, w26, #0x1
  438238:	b	438248 <argp_parse@@Base+0x99c>
  43823c:	add	x22, x22, #0x48
  438240:	cmp	x22, x8
  438244:	b.cs	438288 <argp_parse@@Base+0x9dc>  // b.hs, b.nlast
  438248:	ldr	x9, [x22]
  43824c:	cbz	x9, 43823c <argp_parse@@Base+0x990>
  438250:	ldr	x8, [x22, #64]
  438254:	mov	w0, w20
  438258:	mov	x1, xzr
  43825c:	mov	x2, x21
  438260:	str	x8, [x19, #192]
  438264:	ldr	q0, [x22, #48]
  438268:	stur	q0, [x27, #152]
  43826c:	ldr	w8, [x22, #24]
  438270:	str	w8, [x19, #168]
  438274:	blr	x9
  438278:	ldr	x8, [x19, #192]
  43827c:	str	x8, [x22, #64]
  438280:	ldr	x8, [x19, #112]
  438284:	b	43823c <argp_parse@@Base+0x990>
  438288:	ldr	x22, [x19, #104]
  43828c:	ldr	x8, [x19, #112]
  438290:	sub	x20, x8, #0x48
  438294:	b	43829c <argp_parse@@Base+0x9f0>
  438298:	sub	x20, x20, #0x48
  43829c:	cmp	x20, x22
  4382a0:	b.cc	4382e4 <argp_parse@@Base+0xa38>  // b.lo, b.ul, b.last
  4382a4:	ldr	x8, [x20]
  4382a8:	cbz	x8, 438298 <argp_parse@@Base+0x9ec>
  4382ac:	ldr	x9, [x20, #64]
  4382b0:	add	w0, w26, #0x1
  4382b4:	mov	x1, xzr
  4382b8:	mov	x2, x21
  4382bc:	str	x9, [x19, #192]
  4382c0:	ldr	q0, [x20, #48]
  4382c4:	stur	q0, [x27, #152]
  4382c8:	ldr	w9, [x20, #24]
  4382cc:	str	w9, [x19, #168]
  4382d0:	blr	x8
  4382d4:	ldr	x8, [x19, #192]
  4382d8:	str	x8, [x20, #64]
  4382dc:	ldr	x22, [x19, #104]
  4382e0:	b	438298 <argp_parse@@Base+0x9ec>
  4382e4:	ldr	x0, [x19, #232]
  4382e8:	cmp	w24, #0x7
  4382ec:	mov	w8, #0x16                  	// #22
  4382f0:	csel	w24, w8, w24, eq  // eq = none
  4382f4:	bl	404700 <free@plt>
  4382f8:	mov	w0, w24
  4382fc:	mov	sp, x29
  438300:	ldp	x20, x19, [sp, #80]
  438304:	ldp	x22, x21, [sp, #64]
  438308:	ldp	x24, x23, [sp, #48]
  43830c:	ldp	x26, x25, [sp, #32]
  438310:	ldp	x28, x27, [sp, #16]
  438314:	ldp	x29, x30, [sp], #96
  438318:	ret
  43831c:	cmp	w24, #0x7
  438320:	csel	w24, wzr, w24, eq  // eq = none
  438324:	b	43828c <argp_parse@@Base+0x9e0>
  438328:	ldr	x8, [x19, #40]
  43832c:	ldr	w9, [x8, #24]
  438330:	cmp	w9, w25
  438334:	b.eq	438358 <argp_parse@@Base+0xaac>  // b.none
  438338:	ldr	x9, [x8]
  43833c:	cbz	x9, 438358 <argp_parse@@Base+0xaac>
  438340:	ldr	w10, [x8, #56]
  438344:	add	x9, x8, #0x20
  438348:	mov	x8, x9
  43834c:	cmp	w10, w25
  438350:	b.ne	438338 <argp_parse@@Base+0xa8c>  // b.any
  438354:	mov	x8, x9
  438358:	ldr	x9, [x19, #24]
  43835c:	ldr	x8, [x8]
  438360:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  438364:	add	x1, x1, #0xe88
  438368:	ldr	x0, [x9, #48]
  43836c:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  438370:	add	x9, x9, #0xf91
  438374:	cmp	x8, #0x0
  438378:	mov	w2, #0x5                   	// #5
  43837c:	csel	x22, x9, x8, eq  // eq = none
  438380:	bl	404900 <dcgettext@plt>
  438384:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  438388:	mov	x3, x0
  43838c:	add	x1, x1, #0xf88
  438390:	mov	x0, x21
  438394:	mov	x2, x22
  438398:	bl	435cf0 <argp_error@@Base>
  43839c:	b	437fdc <argp_parse@@Base+0x730>
  4383a0:	cbz	x1, 4383cc <argp_parse@@Base+0xb20>
  4383a4:	ldr	x9, [x1, #88]
  4383a8:	ldp	x8, x9, [x9, #80]
  4383ac:	cmp	x8, x9
  4383b0:	b.cs	4383cc <argp_parse@@Base+0xb20>  // b.hs, b.nlast
  4383b4:	ldr	x10, [x8, #8]
  4383b8:	cmp	x10, x0
  4383bc:	b.eq	4383d4 <argp_parse@@Base+0xb28>  // b.none
  4383c0:	add	x8, x8, #0x48
  4383c4:	cmp	x8, x9
  4383c8:	b.cc	4383b4 <argp_parse@@Base+0xb08>  // b.lo, b.ul, b.last
  4383cc:	mov	x0, xzr
  4383d0:	ret
  4383d4:	ldr	x0, [x8, #48]
  4383d8:	ret
  4383dc:	stp	x29, x30, [sp, #-32]!
  4383e0:	stp	x20, x19, [sp, #16]
  4383e4:	mov	x19, x2
  4383e8:	mov	x20, x1
  4383ec:	mov	w8, w0
  4383f0:	cmn	w0, #0x3
  4383f4:	mov	w0, #0x7                   	// #7
  4383f8:	mov	x29, sp
  4383fc:	b.gt	43841c <argp_parse@@Base+0xb70>
  438400:	cmn	w8, #0x4
  438404:	b.eq	438440 <argp_parse@@Base+0xb94>  // b.none
  438408:	cmn	w8, #0x3
  43840c:	b.ne	4384d4 <argp_parse@@Base+0xc28>  // b.any
  438410:	ldr	x1, [x19, #80]
  438414:	mov	w2, #0x201                 	// #513
  438418:	b	438434 <argp_parse@@Base+0xb88>
  43841c:	cmn	w8, #0x2
  438420:	b.eq	438494 <argp_parse@@Base+0xbe8>  // b.none
  438424:	cmp	w8, #0x3f
  438428:	b.ne	4384d4 <argp_parse@@Base+0xc28>  // b.any
  43842c:	ldr	x1, [x19, #80]
  438430:	mov	w2, #0x27a                 	// #634
  438434:	mov	x0, x19
  438438:	bl	435c58 <argp_state_help@@Base>
  43843c:	b	4384d0 <argp_parse@@Base+0xc24>
  438440:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  438444:	add	x8, x8, #0xf42
  438448:	cmp	x20, #0x0
  43844c:	csel	x0, x8, x20, eq  // eq = none
  438450:	mov	w2, #0xa                   	// #10
  438454:	mov	x1, xzr
  438458:	bl	4046c0 <strtol@plt>
  43845c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  438460:	str	w0, [x19, #2448]
  438464:	ldr	w8, [x19, #2448]
  438468:	subs	w8, w8, #0x1
  43846c:	str	w8, [x19, #2448]
  438470:	b.lt	4384d0 <argp_parse@@Base+0xc24>  // b.tstop
  438474:	mov	w0, #0x1                   	// #1
  438478:	bl	4043b0 <sleep@plt>
  43847c:	ldr	w8, [x19, #2448]
  438480:	sub	w9, w8, #0x1
  438484:	cmp	w8, #0x0
  438488:	str	w9, [x19, #2448]
  43848c:	b.gt	438474 <argp_parse@@Base+0xbc8>
  438490:	b	4384d0 <argp_parse@@Base+0xc24>
  438494:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  438498:	mov	x0, x20
  43849c:	str	x20, [x8, #88]
  4384a0:	bl	43925c <argp_parse@@Base+0x19b0>
  4384a4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4384a8:	str	x0, [x19, #64]
  4384ac:	str	x0, [x8, #128]
  4384b0:	ldr	w8, [x19, #28]
  4384b4:	and	w8, w8, #0x3
  4384b8:	cmp	w8, #0x1
  4384bc:	b.ne	4384d0 <argp_parse@@Base+0xc24>  // b.any
  4384c0:	ldr	x8, [x19, #16]
  4384c4:	mov	w0, wzr
  4384c8:	str	x20, [x8]
  4384cc:	b	4384d4 <argp_parse@@Base+0xc28>
  4384d0:	mov	w0, wzr
  4384d4:	ldp	x20, x19, [sp, #16]
  4384d8:	ldp	x29, x30, [sp], #32
  4384dc:	ret
  4384e0:	stp	x29, x30, [sp, #-32]!
  4384e4:	cmp	w0, #0x56
  4384e8:	str	x19, [sp, #16]
  4384ec:	mov	x29, sp
  4384f0:	b.ne	43851c <argp_parse@@Base+0xc70>  // b.any
  4384f4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4384f8:	ldr	x8, [x8, #2456]
  4384fc:	mov	x19, x2
  438500:	cbz	x8, 438524 <argp_parse@@Base+0xc78>
  438504:	ldr	x0, [x19, #80]
  438508:	mov	x1, x19
  43850c:	blr	x8
  438510:	ldrb	w8, [x19, #28]
  438514:	tbnz	w8, #5, 43854c <argp_parse@@Base+0xca0>
  438518:	b	438590 <argp_parse@@Base+0xce4>
  43851c:	mov	w0, #0x7                   	// #7
  438520:	b	438550 <argp_parse@@Base+0xca4>
  438524:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  438528:	ldr	x3, [x8, #4088]
  43852c:	cbz	x3, 43855c <argp_parse@@Base+0xcb0>
  438530:	ldr	x0, [x19, #80]
  438534:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  438538:	add	x2, x2, #0x50b
  43853c:	mov	w1, #0x1                   	// #1
  438540:	bl	404650 <__fprintf_chk@plt>
  438544:	ldrb	w8, [x19, #28]
  438548:	tbz	w8, #5, 438590 <argp_parse@@Base+0xce4>
  43854c:	mov	w0, wzr
  438550:	ldr	x19, [sp, #16]
  438554:	ldp	x29, x30, [sp], #32
  438558:	ret
  43855c:	ldr	x8, [x19]
  438560:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  438564:	add	x1, x1, #0xf5d
  438568:	mov	w2, #0x5                   	// #5
  43856c:	ldr	x0, [x8, #48]
  438570:	bl	404900 <dcgettext@plt>
  438574:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  438578:	mov	x2, x0
  43857c:	add	x1, x1, #0x7a4
  438580:	mov	x0, x19
  438584:	bl	435cf0 <argp_error@@Base>
  438588:	ldrb	w8, [x19, #28]
  43858c:	tbnz	w8, #5, 43854c <argp_parse@@Base+0xca0>
  438590:	mov	w0, wzr
  438594:	bl	403f70 <exit@plt>
  438598:	stp	x29, x30, [sp, #-32]!
  43859c:	stp	x20, x19, [sp, #16]
  4385a0:	ldr	x11, [x0]
  4385a4:	ldr	x8, [x0, #32]
  4385a8:	mov	x19, x1
  4385ac:	mov	x29, sp
  4385b0:	cbz	x11, 438610 <argp_parse@@Base+0xd64>
  4385b4:	ldr	x12, [x19, #16]
  4385b8:	mov	w10, wzr
  4385bc:	mov	x9, xzr
  4385c0:	add	x11, x11, #0x28
  4385c4:	add	x12, x12, #0x1
  4385c8:	str	x12, [x19, #16]
  4385cc:	b	4385dc <argp_parse@@Base+0xd30>
  4385d0:	add	x11, x11, #0x30
  4385d4:	add	x9, x9, #0x1
  4385d8:	add	w10, w10, #0x3
  4385dc:	ldur	w12, [x11, #-32]
  4385e0:	cbnz	w12, 4385d0 <argp_parse@@Base+0xd24>
  4385e4:	ldur	x12, [x11, #-40]
  4385e8:	cbnz	x12, 4385d0 <argp_parse@@Base+0xd24>
  4385ec:	ldur	x12, [x11, #-8]
  4385f0:	cbnz	x12, 4385d0 <argp_parse@@Base+0xd24>
  4385f4:	ldr	w12, [x11]
  4385f8:	cbnz	w12, 4385d0 <argp_parse@@Base+0xd24>
  4385fc:	ldr	x11, [x19]
  438600:	add	x11, x11, w10, uxtw
  438604:	mov	x10, x19
  438608:	str	x11, [x10], #8
  43860c:	b	438620 <argp_parse@@Base+0xd74>
  438610:	ldr	x9, [x0, #8]
  438614:	cbz	x9, 43862c <argp_parse@@Base+0xd80>
  438618:	add	x10, x19, #0x10
  43861c:	mov	w9, #0x1                   	// #1
  438620:	ldr	x11, [x10]
  438624:	add	x9, x11, x9
  438628:	str	x9, [x10]
  43862c:	cbz	x8, 438658 <argp_parse@@Base+0xdac>
  438630:	ldr	x0, [x8]
  438634:	cbz	x0, 438658 <argp_parse@@Base+0xdac>
  438638:	add	x20, x8, #0x20
  43863c:	mov	x1, x19
  438640:	bl	438598 <argp_parse@@Base+0xcec>
  438644:	ldr	x8, [x19, #24]
  438648:	add	x8, x8, #0x1
  43864c:	str	x8, [x19, #24]
  438650:	ldr	x0, [x20], #32
  438654:	cbnz	x0, 43863c <argp_parse@@Base+0xd90>
  438658:	ldp	x20, x19, [sp, #16]
  43865c:	ldp	x29, x30, [sp], #32
  438660:	ret
  438664:	sub	sp, sp, #0x80
  438668:	stp	x29, x30, [sp, #32]
  43866c:	stp	x28, x27, [sp, #48]
  438670:	stp	x26, x25, [sp, #64]
  438674:	stp	x24, x23, [sp, #80]
  438678:	stp	x22, x21, [sp, #96]
  43867c:	stp	x20, x19, [sp, #112]
  438680:	ldr	x23, [x0]
  438684:	ldr	x10, [x0, #32]
  438688:	mov	x19, x4
  43868c:	mov	x20, x3
  438690:	add	x29, sp, #0x20
  438694:	cbz	x23, 43880c <argp_parse@@Base+0xf60>
  438698:	mov	w28, #0x39000000            	// #956301312
  43869c:	mov	w21, #0x1000000             	// #16777216
  4386a0:	mov	x26, x23
  4386a4:	stp	x0, x1, [sp]
  4386a8:	stur	w2, [x29, #-12]
  4386ac:	stur	x10, [x29, #-8]
  4386b0:	b	4386e0 <argp_parse@@Base+0xe34>
  4386b4:	ldr	w10, [x25, #80]
  4386b8:	add	x11, x8, #0x20
  4386bc:	sub	w10, w20, w10
  4386c0:	lsr	w10, w10, #3
  4386c4:	mul	w10, w10, w28
  4386c8:	bfxil	w10, w9, #0, #24
  4386cc:	add	w9, w10, w21
  4386d0:	str	w9, [x8, #24]
  4386d4:	str	x11, [x19, #16]
  4386d8:	str	xzr, [x8, #32]
  4386dc:	add	x26, x26, #0x30
  4386e0:	ldr	w24, [x26, #8]
  4386e4:	cbnz	w24, 438700 <argp_parse@@Base+0xe54>
  4386e8:	ldr	x8, [x26]
  4386ec:	cbnz	x8, 438700 <argp_parse@@Base+0xe54>
  4386f0:	ldr	x8, [x26, #32]
  4386f4:	cbnz	x8, 438700 <argp_parse@@Base+0xe54>
  4386f8:	ldr	w8, [x26, #40]
  4386fc:	cbz	w8, 4387f8 <argp_parse@@Base+0xf4c>
  438700:	ldr	w8, [x26, #24]
  438704:	tst	w8, #0x4
  438708:	csel	x23, x26, x23, eq  // eq = none
  43870c:	ldrb	w9, [x23, #24]
  438710:	tbnz	w9, #3, 4386dc <argp_parse@@Base+0xe30>
  438714:	sub	w9, w24, #0x1
  438718:	cmp	w9, #0xfe
  43871c:	b.hi	438784 <argp_parse@@Base+0xed8>  // b.pmore
  438720:	tbnz	w8, #3, 438784 <argp_parse@@Base+0xed8>
  438724:	bl	404690 <__ctype_b_loc@plt>
  438728:	ldr	x8, [x0]
  43872c:	ldrh	w8, [x8, x24, lsl #1]
  438730:	tbz	w8, #14, 438784 <argp_parse@@Base+0xed8>
  438734:	ldr	x8, [x19, #8]
  438738:	add	x9, x8, #0x1
  43873c:	str	x9, [x19, #8]
  438740:	strb	w24, [x8]
  438744:	ldr	x8, [x23, #16]
  438748:	cbz	x8, 43877c <argp_parse@@Base+0xed0>
  43874c:	ldr	x8, [x19, #8]
  438750:	add	x9, x8, #0x1
  438754:	str	x9, [x19, #8]
  438758:	mov	w9, #0x3a                  	// #58
  43875c:	strb	w9, [x8]
  438760:	ldrb	w8, [x23, #24]
  438764:	tbz	w8, #0, 43877c <argp_parse@@Base+0xed0>
  438768:	ldr	x8, [x19, #8]
  43876c:	add	x9, x8, #0x1
  438770:	str	x9, [x19, #8]
  438774:	mov	w9, #0x3a                  	// #58
  438778:	strb	w9, [x8]
  43877c:	ldr	x8, [x19, #8]
  438780:	strb	wzr, [x8]
  438784:	ldr	x24, [x26]
  438788:	cbz	x24, 4386dc <argp_parse@@Base+0xe30>
  43878c:	ldr	x25, [x19]
  438790:	ldr	x22, [x25, #16]
  438794:	ldr	x0, [x22]
  438798:	cbz	x0, 4387c0 <argp_parse@@Base+0xf14>
  43879c:	mov	x27, x22
  4387a0:	mov	x1, x24
  4387a4:	bl	404660 <strcmp@plt>
  4387a8:	cbz	w0, 4387b8 <argp_parse@@Base+0xf0c>
  4387ac:	ldr	x0, [x27, #32]!
  4387b0:	cbnz	x0, 4387a0 <argp_parse@@Base+0xef4>
  4387b4:	b	4387c0 <argp_parse@@Base+0xf14>
  4387b8:	sub	x8, x27, x22
  4387bc:	tbz	x8, #36, 4386dc <argp_parse@@Base+0xe30>
  4387c0:	ldr	x8, [x19, #16]
  4387c4:	str	x24, [x8]
  4387c8:	ldr	x9, [x23, #16]
  4387cc:	cbz	x9, 4387e0 <argp_parse@@Base+0xf34>
  4387d0:	ldrb	w9, [x23, #24]
  4387d4:	tst	w9, #0x1
  4387d8:	mov	w9, #0x1                   	// #1
  4387dc:	cinc	w9, w9, ne  // ne = any
  4387e0:	str	w9, [x8, #8]
  4387e4:	str	xzr, [x8, #16]
  4387e8:	ldr	w9, [x26, #8]
  4387ec:	cbnz	w9, 4386b4 <argp_parse@@Base+0xe08>
  4387f0:	ldr	w9, [x23, #8]
  4387f4:	b	4386b4 <argp_parse@@Base+0xe08>
  4387f8:	ldp	x0, x1, [sp]
  4387fc:	ldur	x10, [x29, #-8]
  438800:	ldur	w2, [x29, #-12]
  438804:	ldr	x8, [x0, #8]
  438808:	b	438814 <argp_parse@@Base+0xf68>
  43880c:	ldr	x8, [x0, #8]
  438810:	cbz	x8, 4388b8 <argp_parse@@Base+0x100c>
  438814:	stp	x8, x0, [x20]
  438818:	ldr	x8, [x19, #8]
  43881c:	str	wzr, [x20, #24]
  438820:	str	x1, [x20, #32]
  438824:	str	w2, [x20, #40]
  438828:	stp	xzr, xzr, [x20, #56]
  43882c:	str	x8, [x20, #16]
  438830:	str	xzr, [x20, #48]
  438834:	cbz	x10, 43885c <argp_parse@@Base+0xfb0>
  438838:	mov	w8, #0xffffffff            	// #-1
  43883c:	add	w8, w8, #0x1
  438840:	lsl	x9, x8, #5
  438844:	ldr	x9, [x10, x9]
  438848:	cbnz	x9, 43883c <argp_parse@@Base+0xf90>
  43884c:	ldr	x9, [x19, #24]
  438850:	add	x8, x9, w8, uxtw #3
  438854:	str	x9, [x20, #56]
  438858:	str	x8, [x19, #24]
  43885c:	add	x3, x20, #0x48
  438860:	cbz	x10, 438894 <argp_parse@@Base+0xfe8>
  438864:	ldr	x0, [x10]
  438868:	cbz	x0, 438894 <argp_parse@@Base+0xfe8>
  43886c:	mov	w2, wzr
  438870:	add	x21, x10, #0x20
  438874:	mov	x1, x20
  438878:	mov	x4, x19
  43887c:	add	w22, w2, #0x1
  438880:	bl	438664 <argp_parse@@Base+0xdb8>
  438884:	mov	x3, x0
  438888:	ldr	x0, [x21], #32
  43888c:	mov	w2, w22
  438890:	cbnz	x0, 438874 <argp_parse@@Base+0xfc8>
  438894:	ldp	x20, x19, [sp, #112]
  438898:	ldp	x22, x21, [sp, #96]
  43889c:	ldp	x24, x23, [sp, #80]
  4388a0:	ldp	x26, x25, [sp, #64]
  4388a4:	ldp	x28, x27, [sp, #48]
  4388a8:	ldp	x29, x30, [sp, #32]
  4388ac:	mov	x0, x3
  4388b0:	add	sp, sp, #0x80
  4388b4:	ret
  4388b8:	mov	x3, x20
  4388bc:	mov	x20, xzr
  4388c0:	cbnz	x10, 438864 <argp_parse@@Base+0xfb8>
  4388c4:	b	438894 <argp_parse@@Base+0xfe8>
  4388c8:	adrp	x9, 438000 <argp_parse@@Base+0x754>
  4388cc:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4388d0:	add	x9, x9, #0x8ec
  4388d4:	adrp	x10, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4388d8:	adrp	x11, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4388dc:	str	x9, [x8, #2456]
  4388e0:	str	x0, [x10, #2464]
  4388e4:	str	x1, [x11, #2472]
  4388e8:	ret
  4388ec:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4388f0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4388f4:	ldr	x1, [x8, #2464]
  4388f8:	ldr	x4, [x9, #2472]
  4388fc:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  438900:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x154b0>
  438904:	add	x2, x2, #0xd3a
  438908:	add	x3, x3, #0xd94
  43890c:	b	4455bc <argp_parse@@Base+0xdd10>
  438910:	stp	x29, x30, [sp, #-32]!
  438914:	stp	x20, x19, [sp, #16]
  438918:	mov	x19, x0
  43891c:	mov	x29, sp
  438920:	cbnz	x0, 438938 <argp_parse@@Base+0x108c>
  438924:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  438928:	add	x0, x0, #0x6fc
  43892c:	bl	404a30 <getenv@plt>
  438930:	mov	x19, x0
  438934:	cbz	x0, 43895c <argp_parse@@Base+0x10b0>
  438938:	ldrb	w8, [x19]
  43893c:	adrp	x20, 45e000 <_obstack_memory_used@@Base+0x174b0>
  438940:	add	x20, x20, #0x25c
  438944:	cbz	w8, 438964 <argp_parse@@Base+0x10b8>
  438948:	mov	x0, x19
  43894c:	bl	43925c <argp_parse@@Base+0x19b0>
  438950:	cmp	x19, x0
  438954:	csel	x20, x19, x20, eq  // eq = none
  438958:	b	438964 <argp_parse@@Base+0x10b8>
  43895c:	adrp	x20, 45e000 <_obstack_memory_used@@Base+0x174b0>
  438960:	add	x20, x20, #0x25c
  438964:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  438968:	str	x20, [x8, #2480]
  43896c:	ldp	x20, x19, [sp, #16]
  438970:	ldp	x29, x30, [sp], #32
  438974:	ret
  438978:	sub	sp, sp, #0xe0
  43897c:	str	w0, [sp, #28]
  438980:	mov	x0, x1
  438984:	stp	x29, x30, [sp, #128]
  438988:	stp	x28, x27, [sp, #144]
  43898c:	stp	x26, x25, [sp, #160]
  438990:	stp	x24, x23, [sp, #176]
  438994:	stp	x22, x21, [sp, #192]
  438998:	stp	x20, x19, [sp, #208]
  43899c:	add	x29, sp, #0x80
  4389a0:	mov	w22, w3
  4389a4:	mov	w21, w2
  4389a8:	mov	x26, x1
  4389ac:	bl	43925c <argp_parse@@Base+0x19b0>
  4389b0:	sub	x25, x0, x26
  4389b4:	bl	403f40 <strlen@plt>
  4389b8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4389bc:	ldr	x19, [x8, #2480]
  4389c0:	add	x28, x25, x0
  4389c4:	cbnz	x19, 438a18 <argp_parse@@Base+0x116c>
  4389c8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4389cc:	add	x0, x0, #0x6fc
  4389d0:	mov	w20, w21
  4389d4:	bl	404a30 <getenv@plt>
  4389d8:	cbz	x0, 438a04 <argp_parse@@Base+0x1158>
  4389dc:	ldrb	w8, [x0]
  4389e0:	adrp	x19, 45e000 <_obstack_memory_used@@Base+0x174b0>
  4389e4:	mov	x21, x0
  4389e8:	add	x19, x19, #0x25c
  4389ec:	cbz	w8, 438a0c <argp_parse@@Base+0x1160>
  4389f0:	mov	x0, x21
  4389f4:	bl	43925c <argp_parse@@Base+0x19b0>
  4389f8:	cmp	x21, x0
  4389fc:	csel	x19, x21, x19, eq  // eq = none
  438a00:	b	438a0c <argp_parse@@Base+0x1160>
  438a04:	adrp	x19, 45e000 <_obstack_memory_used@@Base+0x174b0>
  438a08:	add	x19, x19, #0x25c
  438a0c:	mov	w21, w20
  438a10:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  438a14:	str	x19, [x8, #2480]
  438a18:	mov	x0, x19
  438a1c:	bl	403f40 <strlen@plt>
  438a20:	add	x9, x0, #0x1
  438a24:	mov	w8, #0x9                   	// #9
  438a28:	cmp	x9, #0x9
  438a2c:	stur	x9, [x29, #-48]
  438a30:	csinc	x8, x8, x0, ls  // ls = plast
  438a34:	add	x9, x28, #0x1
  438a38:	add	x0, x9, x8
  438a3c:	stur	x9, [x29, #-24]
  438a40:	str	x0, [sp, #56]
  438a44:	bl	404250 <malloc@plt>
  438a48:	mov	x23, x0
  438a4c:	cbz	x0, 438ef0 <argp_parse@@Base+0x1644>
  438a50:	mov	x27, xzr
  438a54:	mov	w8, #0xffffffff            	// #-1
  438a58:	add	x9, x28, #0x4
  438a5c:	stp	x9, xzr, [sp, #8]
  438a60:	stur	w8, [x29, #-12]
  438a64:	str	w22, [sp, #52]
  438a68:	str	x26, [sp, #32]
  438a6c:	stur	x28, [x29, #-40]
  438a70:	ldur	x2, [x29, #-24]
  438a74:	mov	x0, x23
  438a78:	mov	x1, x26
  438a7c:	bl	403ec0 <memcpy@plt>
  438a80:	cmp	w21, #0x1
  438a84:	b.ne	438aa0 <argp_parse@@Base+0x11f4>  // b.any
  438a88:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  438a8c:	ldr	x1, [x8, #2480]
  438a90:	ldur	x2, [x29, #-48]
  438a94:	add	x0, x23, x28
  438a98:	bl	403ec0 <memcpy@plt>
  438a9c:	b	438df8 <argp_parse@@Base+0x154c>
  438aa0:	add	x19, x23, x25
  438aa4:	mov	x0, x19
  438aa8:	bl	4392a8 <argp_parse@@Base+0x19fc>
  438aac:	mov	x28, x0
  438ab0:	cbz	x27, 438ac8 <argp_parse@@Base+0x121c>
  438ab4:	mov	x0, x27
  438ab8:	bl	4046a0 <rewinddir@plt>
  438abc:	mov	w8, #0x2                   	// #2
  438ac0:	stur	w8, [x29, #-28]
  438ac4:	b	438b34 <argp_parse@@Base+0x1288>
  438ac8:	ldrh	w8, [x19]
  438acc:	ldr	w0, [sp, #28]
  438ad0:	mov	w9, #0x2e                  	// #46
  438ad4:	sub	x3, x29, #0xc
  438ad8:	mov	x1, x23
  438adc:	mov	w2, wzr
  438ae0:	strh	w9, [x19]
  438ae4:	sturh	w8, [x29, #-8]
  438ae8:	bl	43da50 <argp_parse@@Base+0x61a4>
  438aec:	mov	x27, x0
  438af0:	cbz	x0, 438afc <argp_parse@@Base+0x1250>
  438af4:	mov	w10, #0x2                   	// #2
  438af8:	b	438b10 <argp_parse@@Base+0x1264>
  438afc:	bl	404a10 <__errno_location@plt>
  438b00:	ldr	w8, [x0]
  438b04:	cmp	w8, #0xc
  438b08:	mov	w8, #0x2                   	// #2
  438b0c:	cinc	w10, w8, eq  // eq = none
  438b10:	ldurh	w8, [x29, #-8]
  438b14:	add	x9, x19, x28
  438b18:	strh	w8, [x19]
  438b1c:	mov	w8, #0x7e2e                	// #32302
  438b20:	movk	w8, #0x7e31, lsl #16
  438b24:	strb	wzr, [x9, #4]
  438b28:	str	w8, [x9]
  438b2c:	cbz	x27, 438d54 <argp_parse@@Base+0x14a8>
  438b30:	stur	w10, [x29, #-28]
  438b34:	mov	x0, x27
  438b38:	bl	404480 <readdir@plt>
  438b3c:	cbz	x0, 438b64 <argp_parse@@Base+0x12b8>
  438b40:	ldr	x8, [sp, #56]
  438b44:	mov	x24, x0
  438b48:	stur	w21, [x29, #-60]
  438b4c:	add	x26, x28, #0x4
  438b50:	add	x21, x28, #0x2
  438b54:	str	x8, [sp, #40]
  438b58:	mov	w8, #0x1                   	// #1
  438b5c:	stur	x8, [x29, #-56]
  438b60:	b	438b8c <argp_parse@@Base+0x12e0>
  438b64:	ldur	x28, [x29, #-40]
  438b68:	b	438d10 <argp_parse@@Base+0x1464>
  438b6c:	add	w9, w9, #0x1
  438b70:	strb	w9, [x8]
  438b74:	mov	w8, w22
  438b78:	stur	w22, [x29, #-28]
  438b7c:	mov	x0, x27
  438b80:	bl	404480 <readdir@plt>
  438b84:	mov	x24, x0
  438b88:	cbz	x0, 438d00 <argp_parse@@Base+0x1454>
  438b8c:	add	x19, x24, #0x13
  438b90:	mov	x0, x19
  438b94:	bl	403f40 <strlen@plt>
  438b98:	cmp	x0, x26
  438b9c:	b.cc	438b7c <argp_parse@@Base+0x12d0>  // b.lo, b.ul, b.last
  438ba0:	add	x0, x23, x25
  438ba4:	mov	x1, x19
  438ba8:	mov	x2, x21
  438bac:	bl	404440 <bcmp@plt>
  438bb0:	cbnz	w0, 438b7c <argp_parse@@Base+0x12d0>
  438bb4:	add	x19, x24, x28
  438bb8:	ldrb	w9, [x19, #21]!
  438bbc:	sub	w8, w9, #0x31
  438bc0:	cmp	w8, #0x8
  438bc4:	b.hi	438b7c <argp_parse@@Base+0x12d0>  // b.pmore
  438bc8:	sub	x8, x19, #0x2
  438bcc:	ldrb	w8, [x8, #3]
  438bd0:	cmp	w9, #0x39
  438bd4:	cset	w22, eq  // eq = none
  438bd8:	sub	w9, w8, #0x30
  438bdc:	cmp	w9, #0x9
  438be0:	b.hi	438c20 <argp_parse@@Base+0x1374>  // b.pmore
  438be4:	add	x9, x24, x28
  438be8:	mov	w10, #0x17                  	// #23
  438bec:	and	w11, w8, #0xff
  438bf0:	ldrb	w8, [x9, x10]
  438bf4:	cmp	w11, #0x39
  438bf8:	cset	w11, eq  // eq = none
  438bfc:	and	w22, w11, w22
  438c00:	sub	w11, w8, #0x30
  438c04:	cmp	w11, #0xa
  438c08:	add	x10, x10, #0x1
  438c0c:	b.cc	438bec <argp_parse@@Base+0x1340>  // b.lo, b.ul, b.last
  438c10:	sub	x20, x10, #0x16
  438c14:	cmp	w8, #0x7e
  438c18:	b.ne	438b7c <argp_parse@@Base+0x12d0>  // b.any
  438c1c:	b	438c2c <argp_parse@@Base+0x1380>
  438c20:	mov	w20, #0x1                   	// #1
  438c24:	cmp	w8, #0x7e
  438c28:	b.ne	438b7c <argp_parse@@Base+0x12d0>  // b.any
  438c2c:	add	x8, x20, x19
  438c30:	ldrb	w8, [x8, #1]
  438c34:	cbnz	w8, 438b7c <argp_parse@@Base+0x12d0>
  438c38:	ldur	x8, [x29, #-56]
  438c3c:	cmp	x8, x20
  438c40:	b.cs	438cd8 <argp_parse@@Base+0x142c>  // b.hs, b.nlast
  438c44:	ldr	x8, [sp, #8]
  438c48:	add	x9, x20, x22
  438c4c:	stur	x9, [x29, #-56]
  438c50:	add	x8, x8, x9
  438c54:	ldr	x9, [sp, #40]
  438c58:	cmp	x9, x8
  438c5c:	b.cs	438c84 <argp_parse@@Base+0x13d8>  // b.hs, b.nlast
  438c60:	lsr	x9, x8, #62
  438c64:	cmp	x9, #0x0
  438c68:	cset	w9, eq  // eq = none
  438c6c:	lsl	x1, x8, x9
  438c70:	mov	x0, x23
  438c74:	str	x1, [sp, #40]
  438c78:	bl	404490 <realloc@plt>
  438c7c:	cbz	x0, 438ed8 <argp_parse@@Base+0x162c>
  438c80:	mov	x23, x0
  438c84:	ldur	x9, [x29, #-40]
  438c88:	mov	w10, #0x7e2e                	// #32302
  438c8c:	add	x2, x20, #0x2
  438c90:	mov	x1, x19
  438c94:	add	x8, x23, x9
  438c98:	strh	w10, [x23, x9]
  438c9c:	mov	w9, #0x30                  	// #48
  438ca0:	strb	w9, [x8, #2]!
  438ca4:	add	x24, x8, x22
  438ca8:	mov	x0, x24
  438cac:	bl	403ec0 <memcpy@plt>
  438cb0:	add	x8, x24, x20
  438cb4:	ldrb	w9, [x8, #-1]!
  438cb8:	cmp	w9, #0x39
  438cbc:	b.ne	438b6c <argp_parse@@Base+0x12c0>  // b.any
  438cc0:	mov	w10, #0x30                  	// #48
  438cc4:	strb	w10, [x8]
  438cc8:	ldrb	w9, [x8, #-1]!
  438ccc:	cmp	w9, #0x39
  438cd0:	b.eq	438cc4 <argp_parse@@Base+0x1418>  // b.none
  438cd4:	b	438b6c <argp_parse@@Base+0x12c0>
  438cd8:	b.ne	438b7c <argp_parse@@Base+0x12d0>  // b.any
  438cdc:	ldur	x8, [x29, #-40]
  438ce0:	ldur	x2, [x29, #-56]
  438ce4:	mov	x1, x19
  438ce8:	add	x8, x23, x8
  438cec:	add	x0, x8, #0x2
  438cf0:	bl	404620 <memcmp@plt>
  438cf4:	cmp	w0, #0x0
  438cf8:	b.gt	438b7c <argp_parse@@Base+0x12d0>
  438cfc:	b	438c44 <argp_parse@@Base+0x1398>
  438d00:	ldr	w22, [sp, #52]
  438d04:	ldr	x26, [sp, #32]
  438d08:	ldur	x28, [x29, #-40]
  438d0c:	ldur	w21, [x29, #-60]
  438d10:	ldur	w10, [x29, #-28]
  438d14:	cmp	w10, #0x1
  438d18:	b.eq	438d60 <argp_parse@@Base+0x14b4>  // b.none
  438d1c:	cmp	w10, #0x2
  438d20:	b.eq	438d30 <argp_parse@@Base+0x1484>  // b.none
  438d24:	cmp	w10, #0x3
  438d28:	b.ne	438df8 <argp_parse@@Base+0x154c>  // b.any
  438d2c:	b	438ed8 <argp_parse@@Base+0x162c>
  438d30:	cmp	w21, #0x2
  438d34:	b.ne	438d60 <argp_parse@@Base+0x14b4>  // b.any
  438d38:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  438d3c:	ldr	x1, [x8, #2480]
  438d40:	ldur	x2, [x29, #-48]
  438d44:	add	x0, x23, x28
  438d48:	bl	403ec0 <memcpy@plt>
  438d4c:	mov	w21, #0x1                   	// #1
  438d50:	b	438d60 <argp_parse@@Base+0x14b4>
  438d54:	ldur	x28, [x29, #-40]
  438d58:	cmp	w10, #0x1
  438d5c:	b.ne	438d1c <argp_parse@@Base+0x1470>  // b.any
  438d60:	ldur	w24, [x29, #-12]
  438d64:	mov	x0, x23
  438d68:	mov	w20, w21
  438d6c:	bl	43925c <argp_parse@@Base+0x19b0>
  438d70:	mov	x19, x0
  438d74:	bl	4392a8 <argp_parse@@Base+0x19fc>
  438d78:	mov	x21, x0
  438d7c:	cmp	x0, #0xf
  438d80:	b.cc	438dcc <argp_parse@@Base+0x1520>  // b.lo, b.ul, b.last
  438d84:	ldr	x9, [sp, #16]
  438d88:	mov	x8, x9
  438d8c:	cbnz	x9, 438dd0 <argp_parse@@Base+0x1524>
  438d90:	tbnz	w24, #31, 438e40 <argp_parse@@Base+0x1594>
  438d94:	bl	404a10 <__errno_location@plt>
  438d98:	mov	x22, x26
  438d9c:	mov	x26, x0
  438da0:	str	wzr, [x0]
  438da4:	mov	w1, #0x3                   	// #3
  438da8:	mov	w0, w24
  438dac:	bl	404600 <fpathconf@plt>
  438db0:	ldr	w8, [x26]
  438db4:	mov	x26, x22
  438db8:	ldr	w22, [sp, #52]
  438dbc:	cmp	w8, #0x0
  438dc0:	cset	w8, eq  // eq = none
  438dc4:	sub	x8, x0, x8
  438dc8:	b	438e80 <argp_parse@@Base+0x15d4>
  438dcc:	mov	w8, #0xff                  	// #255
  438dd0:	cmp	x8, x21
  438dd4:	b.cs	438df4 <argp_parse@@Base+0x1548>  // b.hs, b.nlast
  438dd8:	add	x9, x23, x28
  438ddc:	sub	x9, x9, x19
  438de0:	sub	x10, x8, #0x1
  438de4:	cmp	x8, x9
  438de8:	csel	x8, x9, x10, hi  // hi = pmore
  438dec:	mov	w9, #0x7e                  	// #126
  438df0:	strh	w9, [x19, x8]
  438df4:	mov	w21, w20
  438df8:	tbz	w22, #0, 438ea4 <argp_parse@@Base+0x15f8>
  438dfc:	ldur	w2, [x29, #-12]
  438e00:	tbz	w2, #31, 438e10 <argp_parse@@Base+0x1564>
  438e04:	mov	x25, xzr
  438e08:	mov	w2, #0xffffff9c            	// #-100
  438e0c:	stur	w2, [x29, #-12]
  438e10:	cmp	w21, #0x1
  438e14:	cset	w4, ne  // ne = any
  438e18:	add	x3, x23, x25
  438e1c:	mov	w0, #0xffffff9c            	// #-100
  438e20:	mov	x1, x26
  438e24:	bl	444bb8 <argp_parse@@Base+0xd30c>
  438e28:	cbz	w0, 438ea4 <argp_parse@@Base+0x15f8>
  438e2c:	bl	404a10 <__errno_location@plt>
  438e30:	ldr	w20, [x0]
  438e34:	cmp	w20, #0x11
  438e38:	b.eq	438a70 <argp_parse@@Base+0x11c4>  // b.none
  438e3c:	b	438eb4 <argp_parse@@Base+0x1608>
  438e40:	ldrh	w8, [x19]
  438e44:	sturh	w8, [x29, #-4]
  438e48:	mov	w8, #0x2e                  	// #46
  438e4c:	strh	w8, [x19]
  438e50:	bl	404a10 <__errno_location@plt>
  438e54:	mov	x24, x0
  438e58:	str	wzr, [x0]
  438e5c:	mov	w1, #0x3                   	// #3
  438e60:	mov	x0, x23
  438e64:	bl	404100 <pathconf@plt>
  438e68:	ldr	w8, [x24]
  438e6c:	ldurh	w9, [x29, #-4]
  438e70:	cmp	w8, #0x0
  438e74:	cset	w8, eq  // eq = none
  438e78:	sub	x8, x0, x8
  438e7c:	strh	w9, [x19]
  438e80:	cmn	x8, #0x1
  438e84:	mov	w9, #0xe                   	// #14
  438e88:	csinv	x9, x9, xzr, ne  // ne = any
  438e8c:	cmp	x8, #0x0
  438e90:	csel	x8, x8, x9, ge  // ge = tcont
  438e94:	str	x8, [sp, #16]
  438e98:	cmp	x8, x21
  438e9c:	b.cc	438dd8 <argp_parse@@Base+0x152c>  // b.lo, b.ul, b.last
  438ea0:	b	438df4 <argp_parse@@Base+0x1548>
  438ea4:	cbz	x27, 438ef0 <argp_parse@@Base+0x1644>
  438ea8:	mov	x0, x27
  438eac:	bl	4044f0 <closedir@plt>
  438eb0:	b	438ef0 <argp_parse@@Base+0x1644>
  438eb4:	mov	x19, x0
  438eb8:	cbz	x27, 438ec4 <argp_parse@@Base+0x1618>
  438ebc:	mov	x0, x27
  438ec0:	bl	4044f0 <closedir@plt>
  438ec4:	mov	x0, x23
  438ec8:	bl	404700 <free@plt>
  438ecc:	mov	x23, xzr
  438ed0:	str	w20, [x19]
  438ed4:	b	438ef0 <argp_parse@@Base+0x1644>
  438ed8:	mov	x0, x23
  438edc:	bl	404700 <free@plt>
  438ee0:	bl	404a10 <__errno_location@plt>
  438ee4:	mov	w8, #0xc                   	// #12
  438ee8:	mov	x23, xzr
  438eec:	str	w8, [x0]
  438ef0:	mov	x0, x23
  438ef4:	ldp	x20, x19, [sp, #208]
  438ef8:	ldp	x22, x21, [sp, #192]
  438efc:	ldp	x24, x23, [sp, #176]
  438f00:	ldp	x26, x25, [sp, #160]
  438f04:	ldp	x28, x27, [sp, #144]
  438f08:	ldp	x29, x30, [sp, #128]
  438f0c:	add	sp, sp, #0xe0
  438f10:	ret
  438f14:	stp	x29, x30, [sp, #-16]!
  438f18:	mov	w3, wzr
  438f1c:	mov	x29, sp
  438f20:	bl	438978 <argp_parse@@Base+0x10cc>
  438f24:	cbz	x0, 438f30 <argp_parse@@Base+0x1684>
  438f28:	ldp	x29, x30, [sp], #16
  438f2c:	ret
  438f30:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  438f34:	stp	x29, x30, [sp, #-32]!
  438f38:	str	x19, [sp, #16]
  438f3c:	mov	x29, sp
  438f40:	cbz	x1, 438f78 <argp_parse@@Base+0x16cc>
  438f44:	ldrb	w8, [x1]
  438f48:	cbz	w8, 438f78 <argp_parse@@Base+0x16cc>
  438f4c:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  438f50:	ldr	x5, [x8, #4016]
  438f54:	adrp	x19, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  438f58:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  438f5c:	add	x19, x19, #0xfb8
  438f60:	add	x2, x2, #0xfd8
  438f64:	mov	w4, #0x4                   	// #4
  438f68:	mov	x3, x19
  438f6c:	bl	434698 <wcrtomb@plt+0x2fb58>
  438f70:	ldr	w0, [x19, x0, lsl #2]
  438f74:	b	438f7c <argp_parse@@Base+0x16d0>
  438f78:	mov	w0, #0x2                   	// #2
  438f7c:	ldr	x19, [sp, #16]
  438f80:	ldp	x29, x30, [sp], #32
  438f84:	ret
  438f88:	stp	x29, x30, [sp, #-32]!
  438f8c:	str	x19, [sp, #16]
  438f90:	mov	x29, sp
  438f94:	cbz	x1, 438fac <argp_parse@@Base+0x1700>
  438f98:	ldrb	w8, [x1]
  438f9c:	cbz	w8, 438fac <argp_parse@@Base+0x1700>
  438fa0:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  438fa4:	ldr	x5, [x8, #4016]
  438fa8:	b	438fd8 <argp_parse@@Base+0x172c>
  438fac:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  438fb0:	add	x0, x0, #0x21
  438fb4:	bl	404a30 <getenv@plt>
  438fb8:	cbz	x0, 438ffc <argp_parse@@Base+0x1750>
  438fbc:	ldrb	w8, [x0]
  438fc0:	mov	x1, x0
  438fc4:	cbz	w8, 438ffc <argp_parse@@Base+0x1750>
  438fc8:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  438fcc:	ldr	x5, [x8, #4016]
  438fd0:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  438fd4:	add	x0, x0, #0x20
  438fd8:	adrp	x19, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  438fdc:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  438fe0:	add	x19, x19, #0xfb8
  438fe4:	add	x2, x2, #0xfd8
  438fe8:	mov	w4, #0x4                   	// #4
  438fec:	mov	x3, x19
  438ff0:	bl	434698 <wcrtomb@plt+0x2fb58>
  438ff4:	ldr	w0, [x19, x0, lsl #2]
  438ff8:	b	439000 <argp_parse@@Base+0x1754>
  438ffc:	mov	w0, #0x2                   	// #2
  439000:	ldr	x19, [sp, #16]
  439004:	ldp	x29, x30, [sp], #32
  439008:	ret
  43900c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  439010:	str	x0, [x8, #2488]
  439014:	ret
  439018:	and	w8, w0, #0x1
  43901c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  439020:	strb	w8, [x9, #2496]
  439024:	ret
  439028:	stp	x29, x30, [sp, #-48]!
  43902c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  439030:	ldr	x0, [x8, #104]
  439034:	str	x21, [sp, #16]
  439038:	stp	x20, x19, [sp, #32]
  43903c:	mov	x29, sp
  439040:	bl	457118 <_obstack_memory_used@@Base+0x105c8>
  439044:	cbz	w0, 439064 <argp_parse@@Base+0x17b8>
  439048:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  43904c:	ldrb	w8, [x8, #2496]
  439050:	cbz	w8, 439084 <argp_parse@@Base+0x17d8>
  439054:	bl	404a10 <__errno_location@plt>
  439058:	ldr	w8, [x0]
  43905c:	cmp	w8, #0x20
  439060:	b.ne	439084 <argp_parse@@Base+0x17d8>  // b.any
  439064:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  439068:	ldr	x0, [x8, #96]
  43906c:	bl	457118 <_obstack_memory_used@@Base+0x105c8>
  439070:	cbnz	w0, 4390f0 <argp_parse@@Base+0x1844>
  439074:	ldp	x20, x19, [sp, #32]
  439078:	ldr	x21, [sp, #16]
  43907c:	ldp	x29, x30, [sp], #48
  439080:	ret
  439084:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  439088:	add	x1, x1, #0x58
  43908c:	mov	w2, #0x5                   	// #5
  439090:	mov	x0, xzr
  439094:	bl	404900 <dcgettext@plt>
  439098:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  43909c:	ldr	x21, [x8, #2488]
  4390a0:	mov	x19, x0
  4390a4:	bl	404a10 <__errno_location@plt>
  4390a8:	ldr	w20, [x0]
  4390ac:	cbnz	x21, 4390cc <argp_parse@@Base+0x1820>
  4390b0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4390b4:	add	x2, x2, #0x7a4
  4390b8:	mov	w0, wzr
  4390bc:	mov	w1, w20
  4390c0:	mov	x3, x19
  4390c4:	bl	403fa0 <error@plt>
  4390c8:	b	4390f0 <argp_parse@@Base+0x1844>
  4390cc:	mov	x0, x21
  4390d0:	bl	444778 <argp_parse@@Base+0xcecc>
  4390d4:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4390d8:	mov	x3, x0
  4390dc:	add	x2, x2, #0x5d8
  4390e0:	mov	w0, wzr
  4390e4:	mov	w1, w20
  4390e8:	mov	x4, x19
  4390ec:	bl	403fa0 <error@plt>
  4390f0:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  4390f4:	ldr	w0, [x8, #4064]
  4390f8:	bl	403ee0 <_exit@plt>
  4390fc:	stp	x29, x30, [sp, #-16]!
  439100:	mov	x29, sp
  439104:	bl	4391c4 <argp_parse@@Base+0x1918>
  439108:	cbz	x0, 439114 <argp_parse@@Base+0x1868>
  43910c:	ldp	x29, x30, [sp], #16
  439110:	ret
  439114:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  439118:	stp	x29, x30, [sp, #-32]!
  43911c:	stp	x20, x19, [sp, #16]
  439120:	mov	x29, sp
  439124:	mov	x19, x0
  439128:	bl	43925c <argp_parse@@Base+0x19b0>
  43912c:	ldrb	w8, [x0]
  439130:	cbz	w8, 439150 <argp_parse@@Base+0x18a4>
  439134:	mov	x20, x0
  439138:	bl	4392a8 <argp_parse@@Base+0x19fc>
  43913c:	ldrb	w8, [x20, x0]
  439140:	cmp	w8, #0x2f
  439144:	cinc	x1, x0, eq  // eq = none
  439148:	mov	x0, x20
  43914c:	b	439160 <argp_parse@@Base+0x18b4>
  439150:	mov	x0, x19
  439154:	bl	4392a8 <argp_parse@@Base+0x19fc>
  439158:	mov	x1, x0
  43915c:	mov	x0, x19
  439160:	ldp	x20, x19, [sp, #16]
  439164:	ldp	x29, x30, [sp], #32
  439168:	b	445d40 <argp_parse@@Base+0xe494>
  43916c:	stp	x29, x30, [sp, #-48]!
  439170:	str	x21, [sp, #16]
  439174:	stp	x20, x19, [sp, #32]
  439178:	mov	x20, x0
  43917c:	ldrb	w8, [x20], #-1
  439180:	mov	x29, sp
  439184:	mov	x19, x0
  439188:	cmp	w8, #0x2f
  43918c:	cset	w21, eq  // eq = none
  439190:	bl	43925c <argp_parse@@Base+0x19b0>
  439194:	sub	x8, x0, x19
  439198:	mov	x0, x8
  43919c:	cmp	x8, x21
  4391a0:	b.ls	4391b4 <argp_parse@@Base+0x1908>  // b.plast
  4391a4:	ldrb	w8, [x20, x0]
  4391a8:	cmp	w8, #0x2f
  4391ac:	sub	x8, x0, #0x1
  4391b0:	b.eq	439198 <argp_parse@@Base+0x18ec>  // b.none
  4391b4:	ldp	x20, x19, [sp, #32]
  4391b8:	ldr	x21, [sp, #16]
  4391bc:	ldp	x29, x30, [sp], #48
  4391c0:	ret
  4391c4:	stp	x29, x30, [sp, #-48]!
  4391c8:	stp	x22, x21, [sp, #16]
  4391cc:	stp	x20, x19, [sp, #32]
  4391d0:	mov	x21, x0
  4391d4:	ldrb	w8, [x21], #-1
  4391d8:	mov	x29, sp
  4391dc:	mov	x19, x0
  4391e0:	cmp	w8, #0x2f
  4391e4:	cset	w22, eq  // eq = none
  4391e8:	bl	43925c <argp_parse@@Base+0x19b0>
  4391ec:	sub	x8, x0, x19
  4391f0:	mov	x20, x8
  4391f4:	cmp	x8, x22
  4391f8:	b.ls	43920c <argp_parse@@Base+0x1960>  // b.plast
  4391fc:	ldrb	w8, [x21, x20]
  439200:	cmp	w8, #0x2f
  439204:	sub	x8, x20, #0x1
  439208:	b.eq	4391f0 <argp_parse@@Base+0x1944>  // b.none
  43920c:	cmp	x20, #0x0
  439210:	cinc	x8, x20, eq  // eq = none
  439214:	add	x0, x8, #0x1
  439218:	bl	404250 <malloc@plt>
  43921c:	mov	x21, x0
  439220:	cbz	x0, 439248 <argp_parse@@Base+0x199c>
  439224:	mov	x0, x21
  439228:	mov	x1, x19
  43922c:	mov	x2, x20
  439230:	bl	403ec0 <memcpy@plt>
  439234:	cbnz	x20, 439244 <argp_parse@@Base+0x1998>
  439238:	mov	w8, #0x2e                  	// #46
  43923c:	mov	w20, #0x1                   	// #1
  439240:	strb	w8, [x21]
  439244:	strb	wzr, [x21, x20]
  439248:	mov	x0, x21
  43924c:	ldp	x20, x19, [sp, #32]
  439250:	ldp	x22, x21, [sp, #16]
  439254:	ldp	x29, x30, [sp], #48
  439258:	ret
  43925c:	sub	x0, x0, #0x1
  439260:	ldrb	w10, [x0, #1]!
  439264:	cmp	w10, #0x2f
  439268:	b.eq	439260 <argp_parse@@Base+0x19b4>  // b.none
  43926c:	mov	w8, wzr
  439270:	mov	x9, x0
  439274:	b	439280 <argp_parse@@Base+0x19d4>
  439278:	ldrb	w10, [x9, #1]!
  43927c:	mov	w8, #0x1                   	// #1
  439280:	and	w10, w10, #0xff
  439284:	cmp	w10, #0x2f
  439288:	b.eq	439278 <argp_parse@@Base+0x19cc>  // b.none
  43928c:	cbz	w10, 4392a4 <argp_parse@@Base+0x19f8>
  439290:	tst	w8, #0x1
  439294:	csel	x0, x9, x0, ne  // ne = any
  439298:	ldrb	w10, [x9, #1]!
  43929c:	mov	w8, wzr
  4392a0:	b	439280 <argp_parse@@Base+0x19d4>
  4392a4:	ret
  4392a8:	stp	x29, x30, [sp, #-32]!
  4392ac:	str	x19, [sp, #16]
  4392b0:	mov	x29, sp
  4392b4:	mov	x19, x0
  4392b8:	bl	403f40 <strlen@plt>
  4392bc:	mov	x8, x0
  4392c0:	sub	x9, x19, #0x1
  4392c4:	mov	x0, x8
  4392c8:	cmp	x8, #0x2
  4392cc:	b.cc	4392e0 <argp_parse@@Base+0x1a34>  // b.lo, b.ul, b.last
  4392d0:	ldrb	w8, [x9, x0]
  4392d4:	cmp	w8, #0x2f
  4392d8:	sub	x8, x0, #0x1
  4392dc:	b.eq	4392c4 <argp_parse@@Base+0x1a18>  // b.none
  4392e0:	ldr	x19, [sp, #16]
  4392e4:	ldp	x29, x30, [sp], #32
  4392e8:	ret
  4392ec:	stp	x29, x30, [sp, #-32]!
  4392f0:	str	x19, [sp, #16]
  4392f4:	mov	x29, sp
  4392f8:	mov	x19, x0
  4392fc:	bl	43925c <argp_parse@@Base+0x19b0>
  439300:	ldrb	w8, [x0]
  439304:	cmp	w8, #0x0
  439308:	csel	x19, x19, x0, eq  // eq = none
  43930c:	mov	x0, x19
  439310:	bl	4392a8 <argp_parse@@Base+0x19fc>
  439314:	ldrb	w8, [x19, x0]
  439318:	strb	wzr, [x19, x0]
  43931c:	ldr	x19, [sp, #16]
  439320:	cmp	w8, #0x0
  439324:	cset	w0, ne  // ne = any
  439328:	ldp	x29, x30, [sp], #32
  43932c:	ret
  439330:	stp	x29, x30, [sp, #-32]!
  439334:	stp	x20, x19, [sp, #16]
  439338:	mov	x20, x0
  43933c:	mov	w0, #0x10                  	// #16
  439340:	mov	x29, sp
  439344:	mov	x19, x1
  439348:	bl	4459e8 <argp_parse@@Base+0xe13c>
  43934c:	ldr	x8, [x20, #8]
  439350:	stp	x8, x19, [x0]
  439354:	str	x0, [x20, #8]
  439358:	ldp	x20, x19, [sp, #16]
  43935c:	ldp	x29, x30, [sp], #32
  439360:	ret
  439364:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  439368:	add	x9, x9, #0x64
  43936c:	b	439374 <argp_parse@@Base+0x1ac8>
  439370:	tbnz	w1, #27, 4393d0 <argp_parse@@Base+0x1b24>
  439374:	ldrb	w10, [x0], #1
  439378:	mov	w8, #0x1                   	// #1
  43937c:	cmp	w10, #0x7d
  439380:	b.hi	439374 <argp_parse@@Base+0x1ac8>  // b.pmore
  439384:	adr	x11, 439370 <argp_parse@@Base+0x1ac4>
  439388:	ldrb	w12, [x9, x10]
  43938c:	add	x11, x11, x12, lsl #2
  439390:	br	x11
  439394:	tbz	w1, #5, 439374 <argp_parse@@Base+0x1ac8>
  439398:	ldrb	w8, [x0]
  43939c:	cmp	w8, #0x28
  4393a0:	b.ne	439374 <argp_parse@@Base+0x1ac8>  // b.any
  4393a4:	b	4393d0 <argp_parse@@Base+0x1b24>
  4393a8:	tbnz	w1, #27, 439374 <argp_parse@@Base+0x1ac8>
  4393ac:	tbnz	w1, #1, 4393c4 <argp_parse@@Base+0x1b18>
  4393b0:	ldrb	w8, [x0]
  4393b4:	cmp	w8, #0x0
  4393b8:	cset	w8, ne  // ne = any
  4393bc:	add	x0, x0, x8
  4393c0:	b	439374 <argp_parse@@Base+0x1ac8>
  4393c4:	mov	w8, wzr
  4393c8:	add	x0, x0, x8
  4393cc:	b	439374 <argp_parse@@Base+0x1ac8>
  4393d0:	mov	w0, #0x1                   	// #1
  4393d4:	ret
  4393d8:	mov	w8, wzr
  4393dc:	mov	w0, w8
  4393e0:	ret
  4393e4:	mov	w0, #0x10                  	// #16
  4393e8:	b	445be0 <argp_parse@@Base+0xe334>
  4393ec:	stp	x29, x30, [sp, #-64]!
  4393f0:	stp	x22, x21, [sp, #32]
  4393f4:	stp	x20, x19, [sp, #48]
  4393f8:	ldr	x21, [x0]
  4393fc:	mov	x19, x0
  439400:	str	x23, [sp, #16]
  439404:	mov	x29, sp
  439408:	cbnz	x21, 439458 <argp_parse@@Base+0x1bac>
  43940c:	ldr	x20, [x19, #8]
  439410:	cbz	x20, 43942c <argp_parse@@Base+0x1b80>
  439414:	ldp	x21, x0, [x20]
  439418:	bl	404700 <free@plt>
  43941c:	mov	x0, x20
  439420:	bl	404700 <free@plt>
  439424:	mov	x20, x21
  439428:	cbnz	x21, 439414 <argp_parse@@Base+0x1b68>
  43942c:	mov	x0, x19
  439430:	ldp	x20, x19, [sp, #48]
  439434:	ldp	x22, x21, [sp, #32]
  439438:	ldr	x23, [sp, #16]
  43943c:	ldp	x29, x30, [sp], #64
  439440:	b	404700 <free@plt>
  439444:	ldr	x0, [x20, #16]
  439448:	bl	43bca0 <argp_parse@@Base+0x43f4>
  43944c:	mov	x0, x20
  439450:	bl	404700 <free@plt>
  439454:	cbz	x21, 43940c <argp_parse@@Base+0x1b60>
  439458:	mov	x20, x21
  43945c:	ldr	w8, [x21, #8]
  439460:	ldr	x21, [x21]
  439464:	cbz	w8, 439444 <argp_parse@@Base+0x1b98>
  439468:	cmp	w8, #0x1
  43946c:	b.ne	43944c <argp_parse@@Base+0x1ba0>  // b.any
  439470:	ldr	x8, [x20, #32]
  439474:	ldr	x0, [x20, #16]
  439478:	cbz	x8, 4394b8 <argp_parse@@Base+0x1c0c>
  43947c:	mov	x22, xzr
  439480:	mov	x23, xzr
  439484:	b	439498 <argp_parse@@Base+0x1bec>
  439488:	add	x23, x23, #0x1
  43948c:	cmp	x23, x8
  439490:	add	x22, x22, #0x48
  439494:	b.cs	4394b8 <argp_parse@@Base+0x1c0c>  // b.hs, b.nlast
  439498:	add	x9, x0, x22
  43949c:	ldrb	w10, [x9, #3]
  4394a0:	tbz	w10, #3, 439488 <argp_parse@@Base+0x1bdc>
  4394a4:	add	x0, x9, #0x8
  4394a8:	bl	448714 <_obstack_memory_used@@Base+0x1bc4>
  4394ac:	ldr	x8, [x20, #32]
  4394b0:	ldr	x0, [x20, #16]
  4394b4:	b	439488 <argp_parse@@Base+0x1bdc>
  4394b8:	bl	404700 <free@plt>
  4394bc:	b	43944c <argp_parse@@Base+0x1ba0>
  4394c0:	stp	x29, x30, [sp, #-48]!
  4394c4:	adrp	x8, 404000 <sigprocmask@plt>
  4394c8:	adrp	x9, 439000 <argp_parse@@Base+0x1754>
  4394cc:	add	x8, x8, #0x7f0
  4394d0:	add	x9, x9, #0x564
  4394d4:	tst	w2, #0x10000000
  4394d8:	stp	x22, x21, [sp, #16]
  4394dc:	csel	x22, x9, x8, eq  // eq = none
  4394e0:	stp	x20, x19, [sp, #32]
  4394e4:	mov	x29, sp
  4394e8:	mov	w19, w2
  4394ec:	mov	x21, x1
  4394f0:	mov	x20, x0
  4394f4:	blr	x22
  4394f8:	cmp	w0, #0x0
  4394fc:	cset	w8, eq  // eq = none
  439500:	tbnz	w19, #30, 439550 <argp_parse@@Base+0x1ca4>
  439504:	ldrb	w9, [x21]
  439508:	cbz	w9, 439550 <argp_parse@@Base+0x1ca4>
  43950c:	cbz	w0, 439550 <argp_parse@@Base+0x1ca4>
  439510:	add	x21, x21, #0x1
  439514:	and	w9, w9, #0xff
  439518:	cmp	w9, #0x2f
  43951c:	b.ne	439544 <argp_parse@@Base+0x1c98>  // b.any
  439520:	ldrb	w9, [x21]
  439524:	cmp	w9, #0x2f
  439528:	b.eq	439544 <argp_parse@@Base+0x1c98>  // b.none
  43952c:	mov	x0, x20
  439530:	mov	x1, x21
  439534:	mov	w2, w19
  439538:	blr	x22
  43953c:	cmp	w0, #0x0
  439540:	cset	w8, eq  // eq = none
  439544:	ldrb	w9, [x21], #1
  439548:	cbz	w9, 439550 <argp_parse@@Base+0x1ca4>
  43954c:	tbz	w8, #0, 439514 <argp_parse@@Base+0x1c68>
  439550:	ldp	x20, x19, [sp, #32]
  439554:	ldp	x22, x21, [sp, #16]
  439558:	and	w0, w8, #0x1
  43955c:	ldp	x29, x30, [sp], #48
  439560:	ret
  439564:	stp	x29, x30, [sp, #-64]!
  439568:	stp	x20, x19, [sp, #48]
  43956c:	mov	x20, x1
  439570:	mov	x19, x0
  439574:	str	x23, [sp, #16]
  439578:	stp	x22, x21, [sp, #32]
  43957c:	mov	x29, sp
  439580:	tbnz	w2, #3, 4395a4 <argp_parse@@Base+0x1cf8>
  439584:	mov	x0, x19
  439588:	mov	x1, x20
  43958c:	tbz	w2, #4, 439614 <argp_parse@@Base+0x1d68>
  439590:	ldp	x20, x19, [sp, #48]
  439594:	ldp	x22, x21, [sp, #32]
  439598:	ldr	x23, [sp, #16]
  43959c:	ldp	x29, x30, [sp], #64
  4395a0:	b	43d0f4 <argp_parse@@Base+0x5848>
  4395a4:	tbz	w2, #4, 439628 <argp_parse@@Base+0x1d7c>
  4395a8:	mov	x0, x20
  4395ac:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4395b0:	mov	w1, #0x2f                  	// #47
  4395b4:	mov	x20, x0
  4395b8:	mov	w23, #0x2f                  	// #47
  4395bc:	bl	4047a0 <strchr@plt>
  4395c0:	cbz	x0, 4395f8 <argp_parse@@Base+0x1d4c>
  4395c4:	mov	x22, x0
  4395c8:	mov	x0, x19
  4395cc:	mov	x1, x20
  4395d0:	strb	wzr, [x22]
  4395d4:	bl	43d0f4 <argp_parse@@Base+0x5848>
  4395d8:	cmp	w0, #0x1
  4395dc:	b.lt	439604 <argp_parse@@Base+0x1d58>  // b.tstop
  4395e0:	strb	w23, [x22], #1
  4395e4:	mov	w1, #0x2f                  	// #47
  4395e8:	mov	x0, x22
  4395ec:	bl	4047a0 <strchr@plt>
  4395f0:	mov	x22, x0
  4395f4:	cbnz	x0, 4395c8 <argp_parse@@Base+0x1d1c>
  4395f8:	mov	x0, x19
  4395fc:	mov	x1, x20
  439600:	bl	43d0f4 <argp_parse@@Base+0x5848>
  439604:	mov	w21, w0
  439608:	mov	x0, x20
  43960c:	bl	404700 <free@plt>
  439610:	b	439658 <argp_parse@@Base+0x1dac>
  439614:	ldp	x20, x19, [sp, #48]
  439618:	ldp	x22, x21, [sp, #32]
  43961c:	ldr	x23, [sp, #16]
  439620:	ldp	x29, x30, [sp], #64
  439624:	b	404660 <strcmp@plt>
  439628:	mov	x0, x19
  43962c:	bl	403f40 <strlen@plt>
  439630:	mov	x22, x0
  439634:	mov	x0, x19
  439638:	mov	x1, x20
  43963c:	mov	x2, x22
  439640:	bl	404300 <strncmp@plt>
  439644:	mov	w21, w0
  439648:	cbnz	w0, 439658 <argp_parse@@Base+0x1dac>
  43964c:	ldrb	w8, [x20, x22]
  439650:	cmp	w8, #0x2f
  439654:	csel	w21, wzr, w8, eq  // eq = none
  439658:	mov	w0, w21
  43965c:	ldp	x20, x19, [sp, #48]
  439660:	ldp	x22, x21, [sp, #32]
  439664:	ldr	x23, [sp, #16]
  439668:	ldp	x29, x30, [sp], #64
  43966c:	ret
  439670:	sub	sp, sp, #0x70
  439674:	stp	x29, x30, [sp, #16]
  439678:	stp	x28, x27, [sp, #32]
  43967c:	stp	x26, x25, [sp, #48]
  439680:	stp	x24, x23, [sp, #64]
  439684:	stp	x22, x21, [sp, #80]
  439688:	stp	x20, x19, [sp, #96]
  43968c:	ldr	x8, [x0]
  439690:	add	x29, sp, #0x10
  439694:	cbz	x8, 439848 <argp_parse@@Base+0x1f9c>
  439698:	mov	x20, x1
  43969c:	mov	x19, xzr
  4396a0:	add	x9, x1, #0x1
  4396a4:	mov	w26, #0x48                  	// #72
  4396a8:	str	x9, [sp, #8]
  4396ac:	mov	x24, x8
  4396b0:	ldr	w8, [x8, #8]
  4396b4:	cbz	w8, 43978c <argp_parse@@Base+0x1ee0>
  4396b8:	ldr	x25, [x24, #32]
  4396bc:	cbz	x25, 439814 <argp_parse@@Base+0x1f68>
  4396c0:	ldr	x27, [x24, #16]
  4396c4:	mov	x28, xzr
  4396c8:	b	4396f0 <argp_parse@@Base+0x1e44>
  4396cc:	mov	x1, x20
  4396d0:	mov	x2, xzr
  4396d4:	mov	x3, xzr
  4396d8:	mov	w4, wzr
  4396dc:	bl	448924 <_obstack_memory_used@@Base+0x1dd4>
  4396e0:	cbz	w0, 439824 <argp_parse@@Base+0x1f78>
  4396e4:	add	x28, x28, #0x1
  4396e8:	cmp	x28, x25
  4396ec:	b.eq	439814 <argp_parse@@Base+0x1f68>  // b.none
  4396f0:	madd	x0, x28, x26, x27
  4396f4:	ldr	w21, [x0], #8
  4396f8:	tbnz	w21, #27, 4396cc <argp_parse@@Base+0x1e20>
  4396fc:	ldr	x22, [x0]
  439700:	adrp	x8, 404000 <sigprocmask@plt>
  439704:	adrp	x9, 439000 <argp_parse@@Base+0x1754>
  439708:	tst	w21, #0x10000000
  43970c:	add	x8, x8, #0x7f0
  439710:	add	x9, x9, #0x564
  439714:	csel	x26, x9, x8, eq  // eq = none
  439718:	mov	x0, x22
  43971c:	mov	x1, x20
  439720:	mov	w2, w21
  439724:	blr	x26
  439728:	cmp	w0, #0x0
  43972c:	cset	w8, eq  // eq = none
  439730:	tbnz	w21, #30, 439780 <argp_parse@@Base+0x1ed4>
  439734:	ldrb	w9, [x20]
  439738:	cbz	w9, 439780 <argp_parse@@Base+0x1ed4>
  43973c:	cbz	w0, 439780 <argp_parse@@Base+0x1ed4>
  439740:	ldr	x23, [sp, #8]
  439744:	and	w9, w9, #0xff
  439748:	cmp	w9, #0x2f
  43974c:	b.ne	439774 <argp_parse@@Base+0x1ec8>  // b.any
  439750:	ldrb	w9, [x23]
  439754:	cmp	w9, #0x2f
  439758:	b.eq	439774 <argp_parse@@Base+0x1ec8>  // b.none
  43975c:	mov	x0, x22
  439760:	mov	x1, x23
  439764:	mov	w2, w21
  439768:	blr	x26
  43976c:	cmp	w0, #0x0
  439770:	cset	w8, eq  // eq = none
  439774:	ldrb	w9, [x23], #1
  439778:	cbz	w9, 439780 <argp_parse@@Base+0x1ed4>
  43977c:	tbz	w8, #0, 439744 <argp_parse@@Base+0x1e98>
  439780:	mov	w26, #0x48                  	// #72
  439784:	tbz	w8, #0, 4396e4 <argp_parse@@Base+0x1e38>
  439788:	b	439824 <argp_parse@@Base+0x1f78>
  43978c:	cbnz	x19, 4397a4 <argp_parse@@Base+0x1ef8>
  439790:	mov	x0, x20
  439794:	bl	403f40 <strlen@plt>
  439798:	add	x0, x0, #0x1
  43979c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4397a0:	mov	x19, x0
  4397a4:	ldr	w23, [x24, #12]
  4397a8:	ldr	x21, [x24, #16]
  4397ac:	mov	x22, x20
  4397b0:	mov	x0, x19
  4397b4:	mov	x1, x22
  4397b8:	bl	404840 <strcpy@plt>
  4397bc:	mov	x0, x21
  4397c0:	mov	x1, x19
  4397c4:	bl	43b71c <argp_parse@@Base+0x3e70>
  4397c8:	cbnz	x0, 439824 <argp_parse@@Base+0x1f78>
  4397cc:	tbnz	w23, #3, 4397ec <argp_parse@@Base+0x1f40>
  4397d0:	tbnz	w23, #30, 439814 <argp_parse@@Base+0x1f68>
  4397d4:	mov	w1, #0x2f                  	// #47
  4397d8:	mov	x0, x22
  4397dc:	bl	4047a0 <strchr@plt>
  4397e0:	add	x22, x0, #0x1
  4397e4:	cbnz	x0, 4397b0 <argp_parse@@Base+0x1f04>
  4397e8:	b	439814 <argp_parse@@Base+0x1f68>
  4397ec:	mov	w1, #0x2f                  	// #47
  4397f0:	mov	x0, x19
  4397f4:	bl	404530 <strrchr@plt>
  4397f8:	cbz	x0, 4397d0 <argp_parse@@Base+0x1f24>
  4397fc:	strb	wzr, [x0]
  439800:	mov	x0, x21
  439804:	mov	x1, x19
  439808:	bl	43b71c <argp_parse@@Base+0x3e70>
  43980c:	cbz	x0, 4397ec <argp_parse@@Base+0x1f40>
  439810:	b	439824 <argp_parse@@Base+0x1f78>
  439814:	ldr	x8, [x24]
  439818:	cbnz	x8, 4396ac <argp_parse@@Base+0x1e00>
  43981c:	mov	w20, #0x1                   	// #1
  439820:	b	439828 <argp_parse@@Base+0x1f7c>
  439824:	mov	w20, wzr
  439828:	mov	x0, x19
  43982c:	bl	404700 <free@plt>
  439830:	ldr	w8, [x24, #12]
  439834:	mov	w9, #0x1                   	// #1
  439838:	bic	w8, w9, w8, lsr #29
  43983c:	cmp	w20, w8
  439840:	cset	w0, ne  // ne = any
  439844:	b	43984c <argp_parse@@Base+0x1fa0>
  439848:	mov	w0, wzr
  43984c:	ldp	x20, x19, [sp, #96]
  439850:	ldp	x22, x21, [sp, #80]
  439854:	ldp	x24, x23, [sp, #64]
  439858:	ldp	x26, x25, [sp, #48]
  43985c:	ldp	x28, x27, [sp, #32]
  439860:	ldp	x29, x30, [sp, #16]
  439864:	add	sp, sp, #0x70
  439868:	ret
  43986c:	stp	x29, x30, [sp, #-80]!
  439870:	stp	x22, x21, [sp, #48]
  439874:	stp	x20, x19, [sp, #64]
  439878:	mov	w21, w2
  43987c:	mov	x19, x1
  439880:	tst	w2, #0x18000000
  439884:	mov	x22, x0
  439888:	stp	x26, x25, [sp, #16]
  43988c:	stp	x24, x23, [sp, #32]
  439890:	mov	x29, sp
  439894:	b.eq	439920 <argp_parse@@Base+0x2074>  // b.none
  439898:	mov	x0, x19
  43989c:	mov	w1, w21
  4398a0:	bl	439364 <argp_parse@@Base+0x1ab8>
  4398a4:	tbz	w0, #0, 439920 <argp_parse@@Base+0x2074>
  4398a8:	ldr	x20, [x22]
  4398ac:	cbz	x20, 4398c8 <argp_parse@@Base+0x201c>
  4398b0:	ldr	w8, [x20, #8]
  4398b4:	cmp	w8, #0x1
  4398b8:	b.ne	4398c8 <argp_parse@@Base+0x201c>  // b.any
  4398bc:	ldr	w8, [x20, #12]
  4398c0:	eor	w8, w8, w21
  4398c4:	tbz	w8, #29, 4398e8 <argp_parse@@Base+0x203c>
  4398c8:	mov	w0, #0x28                  	// #40
  4398cc:	bl	445be0 <argp_parse@@Base+0xe334>
  4398d0:	mov	w8, #0x1                   	// #1
  4398d4:	stp	w8, w21, [x0, #8]
  4398d8:	ldr	x8, [x22]
  4398dc:	mov	x20, x0
  4398e0:	str	x8, [x0]
  4398e4:	str	x0, [x22]
  4398e8:	ldp	x8, x24, [x20, #24]
  4398ec:	cmp	x24, x8
  4398f0:	b.ne	439a44 <argp_parse@@Base+0x2198>  // b.any
  4398f4:	ldr	x0, [x20, #16]
  4398f8:	cbz	x0, 439a4c <argp_parse@@Base+0x21a0>
  4398fc:	mov	x8, #0xf684                	// #63108
  439900:	movk	x8, #0xda12, lsl #16
  439904:	movk	x8, #0x684b, lsl #32
  439908:	movk	x8, #0x12f, lsl #48
  43990c:	cmp	x24, x8
  439910:	b.cs	439a68 <argp_parse@@Base+0x21bc>  // b.hs, b.nlast
  439914:	add	x8, x24, x24, lsr #1
  439918:	add	x24, x8, #0x1
  43991c:	b	439a70 <argp_parse@@Base+0x21c4>
  439920:	ldr	x20, [x22]
  439924:	cbz	x20, 439948 <argp_parse@@Base+0x209c>
  439928:	ldr	w8, [x20, #8]
  43992c:	cbnz	w8, 439948 <argp_parse@@Base+0x209c>
  439930:	ldr	w8, [x20, #12]
  439934:	mov	w9, #0x18                  	// #24
  439938:	movk	w9, #0x6000, lsl #16
  43993c:	eor	w8, w8, w21
  439940:	tst	w8, w9
  439944:	b.eq	4399a8 <argp_parse@@Base+0x20fc>  // b.none
  439948:	mov	w0, #0x28                  	// #40
  43994c:	bl	445be0 <argp_parse@@Base+0xe334>
  439950:	adrp	x8, 439000 <argp_parse@@Base+0x1754>
  439954:	adrp	x9, 439000 <argp_parse@@Base+0x1754>
  439958:	adrp	x10, 439000 <argp_parse@@Base+0x1754>
  43995c:	adrp	x11, 439000 <argp_parse@@Base+0x1754>
  439960:	add	x8, x8, #0xee8
  439964:	add	x9, x9, #0xe38
  439968:	tst	w21, #0x10
  43996c:	add	x10, x10, #0xf08
  439970:	add	x11, x11, #0xeec
  439974:	adrp	x4, 439000 <argp_parse@@Base+0x1754>
  439978:	mov	x20, x0
  43997c:	stp	wzr, w21, [x0, #8]
  439980:	csel	x2, x9, x8, ne  // ne = any
  439984:	csel	x3, x11, x10, ne  // ne = any
  439988:	add	x4, x4, #0xf24
  43998c:	mov	x0, xzr
  439990:	mov	x1, xzr
  439994:	bl	43b9f4 <argp_parse@@Base+0x4148>
  439998:	str	x0, [x20, #16]
  43999c:	ldr	x8, [x22]
  4399a0:	str	x8, [x20]
  4399a4:	str	x20, [x22]
  4399a8:	mov	x0, x19
  4399ac:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4399b0:	mov	w8, #0x2                   	// #2
  4399b4:	movk	w8, #0x1000, lsl #16
  4399b8:	and	w8, w21, w8
  4399bc:	mov	w9, #0x10000000            	// #268435456
  4399c0:	cmp	w8, w9
  4399c4:	mov	x19, x0
  4399c8:	b.ne	439a14 <argp_parse@@Base+0x2168>  // b.any
  4399cc:	mov	x8, x19
  4399d0:	mov	x9, x19
  4399d4:	b	439a00 <argp_parse@@Base+0x2154>
  4399d8:	mov	x10, x9
  4399dc:	ldrb	w11, [x10, #1]!
  4399e0:	cmp	w11, #0x0
  4399e4:	csel	x10, x9, x10, eq  // eq = none
  4399e8:	ldrb	w10, [x10]
  4399ec:	cset	w11, ne  // ne = any
  4399f0:	add	x9, x9, x11
  4399f4:	add	x9, x9, #0x1
  4399f8:	strb	w10, [x8], #1
  4399fc:	cbz	w10, 439a14 <argp_parse@@Base+0x2168>
  439a00:	ldrb	w10, [x9]
  439a04:	cmp	w10, #0x5c
  439a08:	b.eq	4399d8 <argp_parse@@Base+0x212c>  // b.none
  439a0c:	mov	w11, wzr
  439a10:	b	4399f0 <argp_parse@@Base+0x2144>
  439a14:	ldr	x0, [x20, #16]
  439a18:	mov	x1, x19
  439a1c:	bl	43c408 <argp_parse@@Base+0x4b5c>
  439a20:	cmp	x0, x19
  439a24:	b.eq	439b9c <argp_parse@@Base+0x22f0>  // b.none
  439a28:	mov	x0, x19
  439a2c:	ldp	x20, x19, [sp, #64]
  439a30:	ldp	x22, x21, [sp, #48]
  439a34:	ldp	x24, x23, [sp, #32]
  439a38:	ldp	x26, x25, [sp, #16]
  439a3c:	ldp	x29, x30, [sp], #80
  439a40:	b	404700 <free@plt>
  439a44:	ldr	x23, [x20, #16]
  439a48:	b	439a8c <argp_parse@@Base+0x21e0>
  439a4c:	cbz	x24, 439a6c <argp_parse@@Base+0x21c0>
  439a50:	mov	x8, #0x71c8                	// #29128
  439a54:	movk	x8, #0xc71c, lsl #16
  439a58:	movk	x8, #0x1c71, lsl #32
  439a5c:	movk	x8, #0x1c7, lsl #48
  439a60:	cmp	x24, x8
  439a64:	b.cc	439a70 <argp_parse@@Base+0x21c4>  // b.lo, b.ul, b.last
  439a68:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  439a6c:	mov	w24, #0x1                   	// #1
  439a70:	add	x8, x24, x24, lsl #3
  439a74:	lsl	x1, x8, #3
  439a78:	str	x24, [x20, #24]
  439a7c:	bl	445a68 <argp_parse@@Base+0xe1bc>
  439a80:	ldr	x24, [x20, #32]
  439a84:	mov	x23, x0
  439a88:	str	x0, [x20, #16]
  439a8c:	mov	w8, #0x48                  	// #72
  439a90:	add	x25, x24, #0x1
  439a94:	mul	x8, x24, x8
  439a98:	str	x25, [x20, #32]
  439a9c:	str	w21, [x23, x8]
  439aa0:	tbnz	w21, #27, 439ad8 <argp_parse@@Base+0x222c>
  439aa4:	tbz	w21, #26, 439ac8 <argp_parse@@Base+0x221c>
  439aa8:	mov	x0, x19
  439aac:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  439ab0:	mov	x19, x0
  439ab4:	mov	w0, #0x10                  	// #16
  439ab8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  439abc:	ldr	x8, [x22, #8]
  439ac0:	stp	x8, x19, [x0]
  439ac4:	str	x0, [x22, #8]
  439ac8:	mov	w8, #0x48                  	// #72
  439acc:	madd	x8, x24, x8, x23
  439ad0:	str	x19, [x8, #8]
  439ad4:	b	439b9c <argp_parse@@Base+0x22f0>
  439ad8:	lsr	w8, w21, #3
  439adc:	and	w8, w8, #0x2
  439ae0:	mov	w9, #0x9                   	// #9
  439ae4:	orr	w22, w8, w9
  439ae8:	tbnz	w21, #3, 439b10 <argp_parse@@Base+0x2264>
  439aec:	mov	w8, #0x48                  	// #72
  439af0:	madd	x8, x24, x8, x23
  439af4:	add	x0, x8, #0x8
  439af8:	mov	x1, x19
  439afc:	mov	w2, w22
  439b00:	bl	448588 <_obstack_memory_used@@Base+0x1a38>
  439b04:	mov	w19, w0
  439b08:	cbnz	w19, 439b90 <argp_parse@@Base+0x22e4>
  439b0c:	b	439b9c <argp_parse@@Base+0x22f0>
  439b10:	mov	x0, x19
  439b14:	bl	403f40 <strlen@plt>
  439b18:	sub	x8, x19, #0x1
  439b1c:	cbz	x0, 439b94 <argp_parse@@Base+0x22e8>
  439b20:	ldrb	w9, [x8, x0]
  439b24:	sub	x26, x0, #0x1
  439b28:	mov	x0, x26
  439b2c:	cmp	w9, #0x2f
  439b30:	b.eq	439b1c <argp_parse@@Base+0x2270>  // b.none
  439b34:	add	x0, x26, #0x8
  439b38:	bl	4459e8 <argp_parse@@Base+0xe13c>
  439b3c:	add	x2, x26, #0x1
  439b40:	mov	x1, x19
  439b44:	mov	x21, x0
  439b48:	bl	403ec0 <memcpy@plt>
  439b4c:	mov	w9, #0x2f28                	// #12072
  439b50:	mov	w10, #0x292a                	// #10538
  439b54:	add	x8, x21, x26
  439b58:	movk	w9, #0x2a2e, lsl #16
  439b5c:	movk	w10, #0x3f, lsl #16
  439b60:	mov	w11, #0x48                  	// #72
  439b64:	stur	w9, [x8, #1]
  439b68:	str	w10, [x8, #4]
  439b6c:	madd	x8, x24, x11, x23
  439b70:	add	x0, x8, #0x8
  439b74:	mov	x1, x21
  439b78:	mov	w2, w22
  439b7c:	bl	448588 <_obstack_memory_used@@Base+0x1a38>
  439b80:	mov	w19, w0
  439b84:	mov	x0, x21
  439b88:	bl	404700 <free@plt>
  439b8c:	cbz	w19, 439b9c <argp_parse@@Base+0x22f0>
  439b90:	ldr	x25, [x20, #32]
  439b94:	sub	x8, x25, #0x1
  439b98:	str	x8, [x20, #32]
  439b9c:	ldp	x20, x19, [sp, #64]
  439ba0:	ldp	x22, x21, [sp, #48]
  439ba4:	ldp	x24, x23, [sp, #32]
  439ba8:	ldp	x26, x25, [sp, #16]
  439bac:	ldp	x29, x30, [sp], #80
  439bb0:	ret
  439bb4:	sub	sp, sp, #0x70
  439bb8:	stp	x28, x27, [sp, #32]
  439bbc:	stp	x26, x25, [sp, #48]
  439bc0:	stp	x24, x23, [sp, #64]
  439bc4:	stp	x22, x21, [sp, #80]
  439bc8:	stp	x20, x19, [sp, #96]
  439bcc:	mov	x19, x5
  439bd0:	mov	w20, w4
  439bd4:	mov	w21, w3
  439bd8:	mov	x25, x2
  439bdc:	mov	x22, x1
  439be0:	mov	x23, x0
  439be4:	mov	x27, xzr
  439be8:	mov	x24, xzr
  439bec:	stp	x29, x30, [sp, #16]
  439bf0:	add	x29, sp, #0x10
  439bf4:	str	xzr, [sp, #8]
  439bf8:	b	439c08 <argp_parse@@Base+0x235c>
  439bfc:	add	x8, x27, #0x1
  439c00:	strb	w26, [x24, x27]
  439c04:	mov	x27, x8
  439c08:	ldp	x8, x9, [x25, #8]
  439c0c:	cmp	x8, x9
  439c10:	b.cs	439c40 <argp_parse@@Base+0x2394>  // b.hs, b.nlast
  439c14:	add	x9, x8, #0x1
  439c18:	str	x9, [x25, #8]
  439c1c:	ldrb	w26, [x8]
  439c20:	ldr	x8, [sp, #8]
  439c24:	cmp	x27, x8
  439c28:	b.ne	439bfc <argp_parse@@Base+0x2350>  // b.any
  439c2c:	add	x1, sp, #0x8
  439c30:	mov	x0, x24
  439c34:	bl	445b6c <argp_parse@@Base+0xe2c0>
  439c38:	mov	x24, x0
  439c3c:	b	439bfc <argp_parse@@Base+0x2350>
  439c40:	mov	x0, x25
  439c44:	bl	404ac0 <__uflow@plt>
  439c48:	mov	w26, w0
  439c4c:	cmn	w0, #0x1
  439c50:	b.ne	439c20 <argp_parse@@Base+0x2374>  // b.any
  439c54:	ldrb	w8, [x25]
  439c58:	tbnz	w8, #5, 439c64 <argp_parse@@Base+0x23b8>
  439c5c:	mov	w26, wzr
  439c60:	b	439c6c <argp_parse@@Base+0x23c0>
  439c64:	bl	404a10 <__errno_location@plt>
  439c68:	ldr	w26, [x0]
  439c6c:	add	x1, x27, #0x1
  439c70:	mov	x0, x24
  439c74:	bl	445a68 <argp_parse@@Base+0xe1bc>
  439c78:	mov	x24, x0
  439c7c:	strb	w20, [x0, x27]
  439c80:	cbz	x27, 439c98 <argp_parse@@Base+0x23ec>
  439c84:	add	x8, x24, x27
  439c88:	ldurb	w8, [x8, #-1]
  439c8c:	cmp	w8, w20, uxtb
  439c90:	cset	w8, ne  // ne = any
  439c94:	b	439c9c <argp_parse@@Base+0x23f0>
  439c98:	mov	x8, xzr
  439c9c:	add	x8, x24, x8
  439ca0:	mov	w0, #0x10                  	// #16
  439ca4:	add	x27, x8, x27
  439ca8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  439cac:	ldr	x8, [x22, #8]
  439cb0:	cmp	x24, x27
  439cb4:	stp	x8, x24, [x0]
  439cb8:	str	x0, [x22, #8]
  439cbc:	b.cs	439d34 <argp_parse@@Base+0x2488>  // b.hs, b.nlast
  439cc0:	and	x28, x20, #0xff
  439cc4:	mov	x25, x24
  439cc8:	b	439cf4 <argp_parse@@Base+0x2448>
  439ccc:	mov	x0, x22
  439cd0:	mov	x1, x25
  439cd4:	mov	w2, w21
  439cd8:	mov	x3, x19
  439cdc:	strb	wzr, [x9]
  439ce0:	blr	x23
  439ce4:	add	x25, x24, #0x1
  439ce8:	add	x24, x24, #0x1
  439cec:	cmp	x27, x24
  439cf0:	b.eq	439d34 <argp_parse@@Base+0x2488>  // b.none
  439cf4:	ldrb	w8, [x24]
  439cf8:	cmp	w8, w20, uxtb
  439cfc:	b.ne	439ce8 <argp_parse@@Base+0x243c>  // b.any
  439d00:	bl	404690 <__ctype_b_loc@plt>
  439d04:	ldr	x8, [x0]
  439d08:	mov	x9, x24
  439d0c:	ldrh	w10, [x8, x28, lsl #1]
  439d10:	tbz	w10, #13, 439ccc <argp_parse@@Base+0x2420>
  439d14:	mov	x9, x24
  439d18:	cmp	x25, x9
  439d1c:	b.eq	439ce4 <argp_parse@@Base+0x2438>  // b.none
  439d20:	ldrb	w10, [x9, #-1]!
  439d24:	ldrh	w10, [x8, x10, lsl #1]
  439d28:	tbnz	w10, #13, 439d18 <argp_parse@@Base+0x246c>
  439d2c:	add	x9, x9, #0x1
  439d30:	b	439ccc <argp_parse@@Base+0x2420>
  439d34:	bl	404a10 <__errno_location@plt>
  439d38:	str	w26, [x0]
  439d3c:	cmp	w26, #0x0
  439d40:	ldp	x20, x19, [sp, #96]
  439d44:	ldp	x22, x21, [sp, #80]
  439d48:	ldp	x24, x23, [sp, #64]
  439d4c:	ldp	x26, x25, [sp, #48]
  439d50:	ldp	x28, x27, [sp, #32]
  439d54:	ldp	x29, x30, [sp, #16]
  439d58:	csetm	w8, ne  // ne = any
  439d5c:	mov	w0, w8
  439d60:	add	sp, sp, #0x70
  439d64:	ret
  439d68:	sub	sp, sp, #0x40
  439d6c:	stp	x29, x30, [sp, #16]
  439d70:	stp	x22, x21, [sp, #32]
  439d74:	stp	x20, x19, [sp, #48]
  439d78:	str	x0, [sp, #8]
  439d7c:	ldrb	w8, [x2]
  439d80:	mov	w19, w4
  439d84:	mov	w20, w3
  439d88:	mov	x21, x1
  439d8c:	cmp	w8, #0x2d
  439d90:	add	x29, sp, #0x10
  439d94:	b.ne	439da0 <argp_parse@@Base+0x24f4>  // b.any
  439d98:	ldrb	w8, [x2, #1]
  439d9c:	cbz	w8, 439df8 <argp_parse@@Base+0x254c>
  439da0:	adrp	x1, 45f000 <_obstack_memory_used@@Base+0x184b0>
  439da4:	add	x1, x1, #0x40b
  439da8:	mov	x0, x2
  439dac:	bl	404220 <fopen@plt>
  439db0:	cbz	x0, 439df0 <argp_parse@@Base+0x2544>
  439db4:	mov	x22, x0
  439db8:	adrp	x0, 439000 <argp_parse@@Base+0x1754>
  439dbc:	add	x0, x0, #0xe30
  439dc0:	add	x5, sp, #0x8
  439dc4:	mov	x1, x21
  439dc8:	mov	x2, x22
  439dcc:	mov	w3, w20
  439dd0:	mov	w4, w19
  439dd4:	bl	439bb4 <argp_parse@@Base+0x2308>
  439dd8:	mov	w19, w0
  439ddc:	mov	x0, x22
  439de0:	bl	4041e0 <fclose@plt>
  439de4:	cmp	w0, #0x0
  439de8:	csinv	w0, w19, wzr, eq  // eq = none
  439dec:	b	439e1c <argp_parse@@Base+0x2570>
  439df0:	mov	w0, #0xffffffff            	// #-1
  439df4:	b	439e1c <argp_parse@@Base+0x2570>
  439df8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  439dfc:	ldr	x2, [x8, #112]
  439e00:	adrp	x0, 439000 <argp_parse@@Base+0x1754>
  439e04:	add	x0, x0, #0xe30
  439e08:	add	x5, sp, #0x8
  439e0c:	mov	x1, x21
  439e10:	mov	w3, w20
  439e14:	mov	w4, w19
  439e18:	bl	439bb4 <argp_parse@@Base+0x2308>
  439e1c:	ldp	x20, x19, [sp, #48]
  439e20:	ldp	x22, x21, [sp, #32]
  439e24:	ldp	x29, x30, [sp, #16]
  439e28:	add	sp, sp, #0x40
  439e2c:	ret
  439e30:	ldr	x3, [x3]
  439e34:	br	x3
  439e38:	sub	sp, sp, #0x60
  439e3c:	str	x0, [sp, #16]
  439e40:	mov	x0, sp
  439e44:	stp	x29, x30, [sp, #64]
  439e48:	stp	x20, x19, [sp, #80]
  439e4c:	add	x29, sp, #0x40
  439e50:	mov	x19, x1
  439e54:	strb	wzr, [sp]
  439e58:	stur	xzr, [sp, #4]
  439e5c:	strb	wzr, [sp, #12]
  439e60:	bl	43d2f8 <argp_parse@@Base+0x5a4c>
  439e64:	ldrb	w8, [sp, #32]
  439e68:	ldr	w0, [sp, #36]
  439e6c:	cbz	w8, 439e78 <argp_parse@@Base+0x25cc>
  439e70:	mov	x20, xzr
  439e74:	cbz	w0, 439ed4 <argp_parse@@Base+0x2628>
  439e78:	mov	x20, xzr
  439e7c:	tst	w8, #0xff
  439e80:	b.eq	439e90 <argp_parse@@Base+0x25e4>  // b.none
  439e84:	bl	404ab0 <towlower@plt>
  439e88:	ldr	x8, [sp, #16]
  439e8c:	b	439e98 <argp_parse@@Base+0x25ec>
  439e90:	ldr	x8, [sp, #16]
  439e94:	ldrb	w0, [x8]
  439e98:	ldr	x10, [sp, #24]
  439e9c:	lsl	x9, x20, #5
  439ea0:	sub	x9, x9, x20
  439ea4:	add	x9, x9, w0, uxtw
  439ea8:	udiv	x11, x9, x19
  439eac:	add	x8, x8, x10
  439eb0:	mov	x0, sp
  439eb4:	msub	x20, x11, x19, x9
  439eb8:	str	x8, [sp, #16]
  439ebc:	strb	wzr, [sp, #12]
  439ec0:	bl	43d2f8 <argp_parse@@Base+0x5a4c>
  439ec4:	ldrb	w8, [sp, #32]
  439ec8:	ldr	w0, [sp, #36]
  439ecc:	cbz	w8, 439e7c <argp_parse@@Base+0x25d0>
  439ed0:	cbnz	w0, 439e7c <argp_parse@@Base+0x25d0>
  439ed4:	mov	x0, x20
  439ed8:	ldp	x20, x19, [sp, #80]
  439edc:	ldp	x29, x30, [sp, #64]
  439ee0:	add	sp, sp, #0x60
  439ee4:	ret
  439ee8:	b	43b99c <argp_parse@@Base+0x40f0>
  439eec:	stp	x29, x30, [sp, #-16]!
  439ef0:	mov	x29, sp
  439ef4:	bl	43d0f4 <argp_parse@@Base+0x5848>
  439ef8:	cmp	w0, #0x0
  439efc:	cset	w0, eq  // eq = none
  439f00:	ldp	x29, x30, [sp], #16
  439f04:	ret
  439f08:	stp	x29, x30, [sp, #-16]!
  439f0c:	mov	x29, sp
  439f10:	bl	404660 <strcmp@plt>
  439f14:	cmp	w0, #0x0
  439f18:	cset	w0, eq  // eq = none
  439f1c:	ldp	x29, x30, [sp], #16
  439f20:	ret
  439f24:	b	404700 <free@plt>
  439f28:	stp	x29, x30, [sp, #-64]!
  439f2c:	str	x23, [sp, #16]
  439f30:	stp	x22, x21, [sp, #32]
  439f34:	stp	x20, x19, [sp, #48]
  439f38:	mov	w19, w4
  439f3c:	mov	x20, x3
  439f40:	mov	x21, x2
  439f44:	mov	w22, w1
  439f48:	mov	w23, w0
  439f4c:	mov	x29, sp
  439f50:	tbnz	w0, #31, 439f68 <argp_parse@@Base+0x26bc>
  439f54:	mov	w0, w23
  439f58:	mov	x1, x20
  439f5c:	bl	4042f0 <futimens@plt>
  439f60:	cbnz	x21, 439f70 <argp_parse@@Base+0x26c4>
  439f64:	b	439fa0 <argp_parse@@Base+0x26f4>
  439f68:	mov	w0, #0x1                   	// #1
  439f6c:	cbz	x21, 439fa0 <argp_parse@@Base+0x26f4>
  439f70:	tbnz	w23, #31, 439f8c <argp_parse@@Base+0x26e0>
  439f74:	cmn	w0, #0x1
  439f78:	b.ne	439fa0 <argp_parse@@Base+0x26f4>  // b.any
  439f7c:	bl	404a10 <__errno_location@plt>
  439f80:	ldr	w8, [x0]
  439f84:	cmp	w8, #0x26
  439f88:	b.ne	439fb4 <argp_parse@@Base+0x2708>  // b.any
  439f8c:	mov	w0, w22
  439f90:	mov	x1, x21
  439f94:	mov	x2, x20
  439f98:	mov	w3, w19
  439f9c:	bl	4047d0 <utimensat@plt>
  439fa0:	cmp	w0, #0x1
  439fa4:	b.ne	439fb8 <argp_parse@@Base+0x270c>  // b.any
  439fa8:	bl	404a10 <__errno_location@plt>
  439fac:	mov	w8, #0x9                   	// #9
  439fb0:	str	w8, [x0]
  439fb4:	mov	w0, #0xffffffff            	// #-1
  439fb8:	ldp	x20, x19, [sp, #48]
  439fbc:	ldp	x22, x21, [sp, #32]
  439fc0:	ldr	x23, [sp, #16]
  439fc4:	ldp	x29, x30, [sp], #64
  439fc8:	ret
  439fcc:	stp	x29, x30, [sp, #-32]!
  439fd0:	stp	x20, x19, [sp, #16]
  439fd4:	ldr	w8, [x1, #16]
  439fd8:	mov	x29, sp
  439fdc:	and	w8, w8, #0xf000
  439fe0:	cmp	w8, #0xa, lsl #12
  439fe4:	b.ne	439ff0 <argp_parse@@Base+0x2744>  // b.any
  439fe8:	mov	w0, wzr
  439fec:	b	43a07c <argp_parse@@Base+0x27d0>
  439ff0:	mov	x20, x1
  439ff4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  439ff8:	add	x1, x1, #0xe9
  439ffc:	mov	x2, xzr
  43a000:	mov	x3, xzr
  43a004:	mov	x19, x0
  43a008:	bl	404610 <getxattr@plt>
  43a00c:	tbnz	x0, #63, 43a01c <argp_parse@@Base+0x2770>
  43a010:	cbz	x0, 43a02c <argp_parse@@Base+0x2780>
  43a014:	mov	w0, #0x1                   	// #1
  43a018:	b	43a07c <argp_parse@@Base+0x27d0>
  43a01c:	bl	404a10 <__errno_location@plt>
  43a020:	ldr	w8, [x0]
  43a024:	cmp	w8, #0x3d
  43a028:	b.ne	43a070 <argp_parse@@Base+0x27c4>  // b.any
  43a02c:	ldr	w8, [x20, #16]
  43a030:	and	w8, w8, #0xf000
  43a034:	cmp	w8, #0x4, lsl #12
  43a038:	b.ne	439fe8 <argp_parse@@Base+0x273c>  // b.any
  43a03c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43a040:	add	x1, x1, #0x101
  43a044:	mov	x0, x19
  43a048:	mov	x2, xzr
  43a04c:	mov	x3, xzr
  43a050:	bl	404610 <getxattr@plt>
  43a054:	tbnz	x0, #63, 43a060 <argp_parse@@Base+0x27b4>
  43a058:	cbnz	x0, 43a014 <argp_parse@@Base+0x2768>
  43a05c:	b	439fe8 <argp_parse@@Base+0x273c>
  43a060:	bl	404a10 <__errno_location@plt>
  43a064:	ldr	w8, [x0]
  43a068:	cmp	w8, #0x3d
  43a06c:	b.eq	439fe8 <argp_parse@@Base+0x273c>  // b.none
  43a070:	ldr	w0, [x0]
  43a074:	bl	4569b8 <_obstack_memory_used@@Base+0xfe68>
  43a078:	sbfx	w0, w0, #0, #1
  43a07c:	ldp	x20, x19, [sp, #16]
  43a080:	ldp	x29, x30, [sp], #32
  43a084:	ret
  43a088:	mov	w5, w4
  43a08c:	mov	x4, x3
  43a090:	mov	w3, wzr
  43a094:	b	43a098 <argp_parse@@Base+0x27ec>
  43a098:	stp	x29, x30, [sp, #-96]!
  43a09c:	stp	x28, x27, [sp, #16]
  43a0a0:	stp	x26, x25, [sp, #32]
  43a0a4:	stp	x24, x23, [sp, #48]
  43a0a8:	stp	x22, x21, [sp, #64]
  43a0ac:	stp	x20, x19, [sp, #80]
  43a0b0:	mov	x29, sp
  43a0b4:	sub	sp, sp, #0x490
  43a0b8:	ldr	x8, [x2, #48]
  43a0bc:	ldr	w9, [x2, #8]
  43a0c0:	adrp	x10, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43a0c4:	add	x10, x10, #0x66
  43a0c8:	cmp	x8, #0x0
  43a0cc:	csel	x12, x10, x8, eq  // eq = none
  43a0d0:	ldrb	w8, [x1]
  43a0d4:	mov	w11, #0xc                   	// #12
  43a0d8:	cmp	w9, #0x0
  43a0dc:	csel	w10, w11, w9, eq  // eq = none
  43a0e0:	subs	w9, w9, #0xc
  43a0e4:	csel	w9, w9, w10, gt
  43a0e8:	str	w5, [sp, #44]
  43a0ec:	str	x4, [sp, #48]
  43a0f0:	str	w3, [sp, #92]
  43a0f4:	cbz	w8, 43b488 <argp_parse@@Base+0x3bdc>
  43a0f8:	str	w9, [sp, #20]
  43a0fc:	sub	x9, x29, #0x20
  43a100:	sub	x10, x29, #0x28
  43a104:	add	x13, x9, #0x17
  43a108:	str	x12, [sp, #24]
  43a10c:	add	x11, sp, #0x60
  43a110:	mov	x12, #0xffffffffffffffe9    	// #-23
  43a114:	stp	x13, x2, [sp, #72]
  43a118:	orr	x13, x10, #0x2
  43a11c:	orr	x10, x10, #0x3
  43a120:	mov	x23, x1
  43a124:	mov	x24, x0
  43a128:	mov	x1, xzr
  43a12c:	stp	x10, x13, [sp, #56]
  43a130:	orr	x10, x11, #0x1
  43a134:	sub	x9, x12, x9
  43a138:	str	x10, [sp, #32]
  43a13c:	str	x9, [sp, #8]
  43a140:	b	43a168 <argp_parse@@Base+0x28bc>
  43a144:	mov	w2, #0x1                   	// #1
  43a148:	mov	x0, x28
  43a14c:	mov	x1, x27
  43a150:	mov	x3, x24
  43a154:	bl	4047e0 <fwrite@plt>
  43a158:	mov	x1, x19
  43a15c:	add	x1, x19, x20
  43a160:	ldrb	w8, [x23, #1]!
  43a164:	cbz	w8, 43b48c <argp_parse@@Base+0x3be0>
  43a168:	and	w9, w8, #0xff
  43a16c:	cmp	w9, #0x25
  43a170:	b.ne	43a1e8 <argp_parse@@Base+0x293c>  // b.any
  43a174:	ldr	w26, [sp, #92]
  43a178:	mov	w10, #0xcccc                	// #52428
  43a17c:	mov	w28, wzr
  43a180:	mov	w21, wzr
  43a184:	movk	w10, #0xccc, lsl #16
  43a188:	mov	w11, #0xa                   	// #10
  43a18c:	add	x23, x23, #0x1
  43a190:	b	43a1a4 <argp_parse@@Base+0x28f8>
  43a194:	cmp	w8, #0x2d
  43a198:	b.ne	43a1d4 <argp_parse@@Base+0x2928>  // b.any
  43a19c:	add	x23, x23, #0x1
  43a1a0:	mov	w21, w8
  43a1a4:	ldrb	w8, [x23]
  43a1a8:	cmp	w8, #0x2f
  43a1ac:	b.le	43a194 <argp_parse@@Base+0x28e8>
  43a1b0:	cmp	w8, #0x30
  43a1b4:	b.eq	43a19c <argp_parse@@Base+0x28f0>  // b.none
  43a1b8:	cmp	w8, #0x5f
  43a1bc:	b.eq	43a19c <argp_parse@@Base+0x28f0>  // b.none
  43a1c0:	cmp	w8, #0x5e
  43a1c4:	b.ne	43a210 <argp_parse@@Base+0x2964>  // b.any
  43a1c8:	mov	w26, #0x1                   	// #1
  43a1cc:	add	x23, x23, #0x1
  43a1d0:	b	43a1a4 <argp_parse@@Base+0x28f8>
  43a1d4:	cmp	w8, #0x23
  43a1d8:	b.ne	43a210 <argp_parse@@Base+0x2964>  // b.any
  43a1dc:	mov	w28, #0x1                   	// #1
  43a1e0:	add	x23, x23, #0x1
  43a1e4:	b	43a1a4 <argp_parse@@Base+0x28f8>
  43a1e8:	cmn	x1, #0x3
  43a1ec:	b.hi	43b488 <argp_parse@@Base+0x3bdc>  // b.pmore
  43a1f0:	cbz	x24, 43a208 <argp_parse@@Base+0x295c>
  43a1f4:	and	w0, w8, #0xff
  43a1f8:	mov	x19, x1
  43a1fc:	mov	x1, x24
  43a200:	bl	4040c0 <fputc@plt>
  43a204:	mov	x1, x19
  43a208:	add	x1, x1, #0x1
  43a20c:	b	43a160 <argp_parse@@Base+0x28b4>
  43a210:	sub	w9, w8, #0x30
  43a214:	cmp	w9, #0x9
  43a218:	b.hi	43a260 <argp_parse@@Base+0x29b4>  // b.pmore
  43a21c:	mov	w22, wzr
  43a220:	b	43a238 <argp_parse@@Base+0x298c>
  43a224:	mov	w22, #0x7fffffff            	// #2147483647
  43a228:	ldrb	w8, [x23, #1]!
  43a22c:	sub	w9, w8, #0x30
  43a230:	cmp	w9, #0xa
  43a234:	b.cs	43a264 <argp_parse@@Base+0x29b8>  // b.hs, b.nlast
  43a238:	cmp	w22, w10
  43a23c:	b.gt	43a224 <argp_parse@@Base+0x2978>
  43a240:	b.ne	43a250 <argp_parse@@Base+0x29a4>  // b.any
  43a244:	and	w9, w8, #0xff
  43a248:	cmp	w9, #0x37
  43a24c:	b.hi	43a224 <argp_parse@@Base+0x2978>  // b.pmore
  43a250:	mul	w9, w22, w11
  43a254:	add	w8, w9, w8, uxtb
  43a258:	sub	w22, w8, #0x30
  43a25c:	b	43a228 <argp_parse@@Base+0x297c>
  43a260:	mov	w22, #0xffffffff            	// #-1
  43a264:	cmp	w8, #0x4f
  43a268:	b.eq	43a274 <argp_parse@@Base+0x29c8>  // b.none
  43a26c:	cmp	w8, #0x45
  43a270:	b.ne	43a28c <argp_parse@@Base+0x29e0>  // b.any
  43a274:	ldrb	w10, [x23, #1]!
  43a278:	mov	w9, w8
  43a27c:	mov	w8, w10
  43a280:	cmp	w8, #0x7a
  43a284:	b.ls	43a298 <argp_parse@@Base+0x29ec>  // b.plast
  43a288:	b	43b07c <argp_parse@@Base+0x37d0>
  43a28c:	mov	w9, wzr
  43a290:	cmp	w8, #0x7a
  43a294:	b.hi	43b07c <argp_parse@@Base+0x37d0>  // b.pmore
  43a298:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43a29c:	add	x14, x14, #0x11a
  43a2a0:	adr	x12, 43a2c8 <argp_parse@@Base+0x2a1c>
  43a2a4:	ldrh	w13, [x14, x8, lsl #1]
  43a2a8:	add	x12, x12, x13, lsl #2
  43a2ac:	adrp	x27, 45d000 <_obstack_memory_used@@Base+0x164b0>
  43a2b0:	mov	w25, wzr
  43a2b4:	mov	w20, wzr
  43a2b8:	mov	w11, wzr
  43a2bc:	mov	x10, xzr
  43a2c0:	add	x27, x27, #0x323
  43a2c4:	br	x12
  43a2c8:	cmp	w9, #0x45
  43a2cc:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a2d0:	ldr	x10, [sp, #80]
  43a2d4:	mov	w13, #0xffffff9c            	// #-100
  43a2d8:	mov	w14, #0x12c                 	// #300
  43a2dc:	ldr	w11, [x10, #20]
  43a2e0:	ldp	w10, w12, [x10, #24]
  43a2e4:	cmp	w11, #0x0
  43a2e8:	sub	w15, w12, w10
  43a2ec:	csel	w14, w14, w13, lt  // lt = tstop
  43a2f0:	add	w13, w15, #0x17e
  43a2f4:	mov	w15, #0x2493                	// #9363
  43a2f8:	movk	w15, #0x9249, lsl #16
  43a2fc:	smull	x15, w13, w15
  43a300:	lsr	x15, x15, #32
  43a304:	add	w15, w15, w13
  43a308:	asr	w16, w15, #2
  43a30c:	add	w15, w16, w15, lsr #31
  43a310:	lsl	w16, w15, #3
  43a314:	sub	w15, w16, w15
  43a318:	sub	w13, w15, w13
  43a31c:	add	w13, w12, w13
  43a320:	adds	w13, w13, #0x3
  43a324:	add	w15, w14, w11
  43a328:	b.mi	43aaf8 <argp_parse@@Base+0x324c>  // b.first
  43a32c:	tst	w15, #0x3
  43a330:	mov	w14, #0x16d                 	// #365
  43a334:	b.ne	43a370 <argp_parse@@Base+0x2ac4>  // b.any
  43a338:	mov	w16, #0x5c29                	// #23593
  43a33c:	mov	w17, #0xb850                	// #47184
  43a340:	movk	w16, #0xc28f, lsl #16
  43a344:	movk	w17, #0x51e, lsl #16
  43a348:	mov	w18, #0xd70b                	// #55051
  43a34c:	madd	w15, w15, w16, w17
  43a350:	movk	w18, #0xa3, lsl #16
  43a354:	ror	w16, w15, #2
  43a358:	ror	w15, w15, #4
  43a35c:	cmp	w15, w18
  43a360:	mov	w15, #0x5c28                	// #23592
  43a364:	movk	w15, #0x28f, lsl #16
  43a368:	ccmp	w16, w15, #0x2, cs  // cs = hs, nlast
  43a36c:	cinc	w14, w14, hi  // hi = pmore
  43a370:	add	w14, w10, w14
  43a374:	sub	w12, w12, w14
  43a378:	mov	w14, #0x2493                	// #9363
  43a37c:	movk	w14, #0x9249, lsl #16
  43a380:	add	w12, w12, #0x17e
  43a384:	smull	x14, w12, w14
  43a388:	lsr	x14, x14, #32
  43a38c:	add	w12, w14, w12
  43a390:	asr	w14, w12, #2
  43a394:	add	w12, w14, w12, lsr #31
  43a398:	lsl	w14, w12, #3
  43a39c:	sub	w12, w14, w12
  43a3a0:	add	w10, w10, w12
  43a3a4:	sub	w10, w10, #0x17b
  43a3a8:	mvn	w12, w10
  43a3ac:	cmp	w10, #0x0
  43a3b0:	lsr	w14, w12, #31
  43a3b4:	csel	w10, w10, w13, ge  // ge = tcont
  43a3b8:	cmp	w8, #0x47
  43a3bc:	b.eq	43ab88 <argp_parse@@Base+0x32dc>  // b.none
  43a3c0:	cmp	w8, #0x67
  43a3c4:	b.ne	43abb0 <argp_parse@@Base+0x3304>  // b.any
  43a3c8:	mov	w10, #0x851f                	// #34079
  43a3cc:	movk	w10, #0x51eb, lsl #16
  43a3d0:	smull	x13, w11, w10
  43a3d4:	lsr	x15, x13, #63
  43a3d8:	asr	x13, x13, #37
  43a3dc:	mov	w12, #0x64                  	// #100
  43a3e0:	add	w13, w13, w15
  43a3e4:	msub	w13, w13, w12, w11
  43a3e8:	add	w13, w14, w13
  43a3ec:	smull	x10, w13, w10
  43a3f0:	lsr	x15, x10, #63
  43a3f4:	asr	x10, x10, #37
  43a3f8:	add	w10, w10, w15
  43a3fc:	msub	w10, w10, w12, w13
  43a400:	tbz	w10, #31, 43ac68 <argp_parse@@Base+0x33bc>
  43a404:	mov	w12, #0xfffff894            	// #-1900
  43a408:	sub	w12, w12, w14
  43a40c:	add	w13, w10, #0x64
  43a410:	cmp	w11, w12
  43a414:	csneg	w10, w13, w10, ge  // ge = tcont
  43a418:	b	43ac68 <argp_parse@@Base+0x33bc>
  43a41c:	cmp	w9, #0x45
  43a420:	orr	w26, w28, w26
  43a424:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a428:	mov	w25, wzr
  43a42c:	mov	w20, wzr
  43a430:	b	43ac88 <argp_parse@@Base+0x33dc>
  43a434:	sub	x23, x23, #0x1
  43a438:	b	43b07c <argp_parse@@Base+0x37d0>
  43a43c:	cbnz	w9, 43b07c <argp_parse@@Base+0x37d0>
  43a440:	bic	w8, w22, w22, asr #31
  43a444:	cmp	w8, #0x1
  43a448:	csinc	w20, w8, wzr, hi  // hi = pmore
  43a44c:	mvn	x9, x1
  43a450:	cmp	x20, x9
  43a454:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43a458:	cbz	x24, 43b470 <argp_parse@@Base+0x3bc4>
  43a45c:	mov	x19, x1
  43a460:	cmp	w8, #0x2
  43a464:	b.cc	43b460 <argp_parse@@Base+0x3bb4>  // b.lo, b.ul, b.last
  43a468:	sxtw	x8, w22
  43a46c:	cmp	w21, #0x30
  43a470:	sub	x21, x8, #0x1
  43a474:	b.ne	43b448 <argp_parse@@Base+0x3b9c>  // b.any
  43a478:	cbz	x21, 43b460 <argp_parse@@Base+0x3bb4>
  43a47c:	mov	w0, #0x30                  	// #48
  43a480:	mov	x1, x24
  43a484:	bl	4040c0 <fputc@plt>
  43a488:	subs	x21, x21, #0x1
  43a48c:	b.ne	43a47c <argp_parse@@Base+0x2bd0>  // b.any
  43a490:	b	43b460 <argp_parse@@Base+0x3bb4>
  43a494:	mov	w10, #0x1                   	// #1
  43a498:	ldrb	w11, [x23, x10]
  43a49c:	cmp	w11, #0x3a
  43a4a0:	b.ne	43aa40 <argp_parse@@Base+0x3194>  // b.any
  43a4a4:	add	x10, x10, #0x1
  43a4a8:	b	43a498 <argp_parse@@Base+0x2bec>
  43a4ac:	cbnz	w9, 43b07c <argp_parse@@Base+0x37d0>
  43a4b0:	mov	w25, wzr
  43a4b4:	mov	w20, wzr
  43a4b8:	orr	w26, w28, w26
  43a4bc:	mov	w8, #0x41                  	// #65
  43a4c0:	b	43ac88 <argp_parse@@Base+0x33dc>
  43a4c4:	cmp	w9, #0x45
  43a4c8:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a4cc:	mov	w25, wzr
  43a4d0:	mov	w20, wzr
  43a4d4:	orr	w26, w28, w26
  43a4d8:	mov	w8, #0x42                  	// #66
  43a4dc:	b	43ac88 <argp_parse@@Base+0x33dc>
  43a4e0:	cmp	w9, #0x45
  43a4e4:	b.ne	43abd4 <argp_parse@@Base+0x3328>  // b.any
  43a4e8:	mov	w25, wzr
  43a4ec:	mov	w20, wzr
  43a4f0:	mov	w8, #0x43                  	// #67
  43a4f4:	b	43ac88 <argp_parse@@Base+0x33dc>
  43a4f8:	cbnz	w9, 43b07c <argp_parse@@Base+0x37d0>
  43a4fc:	adrp	x27, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43a500:	add	x27, x27, #0x218
  43a504:	b	43a5d4 <argp_parse@@Base+0x2d28>
  43a508:	cbnz	w9, 43b07c <argp_parse@@Base+0x37d0>
  43a50c:	adrp	x27, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43a510:	add	x27, x27, #0x221
  43a514:	b	43a5d4 <argp_parse@@Base+0x2d28>
  43a518:	cmp	w9, #0x45
  43a51c:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a520:	ldr	x10, [sp, #80]
  43a524:	ldr	w10, [x10, #8]
  43a528:	b	43ac68 <argp_parse@@Base+0x33bc>
  43a52c:	cmp	w9, #0x45
  43a530:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a534:	ldr	w10, [sp, #20]
  43a538:	b	43ac68 <argp_parse@@Base+0x33bc>
  43a53c:	cmp	w9, #0x45
  43a540:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a544:	ldr	x10, [sp, #80]
  43a548:	ldr	w10, [x10, #4]
  43a54c:	b	43ac68 <argp_parse@@Base+0x33bc>
  43a550:	cmp	w9, #0x45
  43a554:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a558:	cmn	w22, #0x1
  43a55c:	b.eq	43b180 <argp_parse@@Base+0x38d4>  // b.none
  43a560:	cmp	w22, #0x8
  43a564:	b.gt	43b1b4 <argp_parse@@Base+0x3908>
  43a568:	ldr	w10, [sp, #44]
  43a56c:	sub	w11, w22, #0x1
  43a570:	mov	w12, #0x6667                	// #26215
  43a574:	movk	w12, #0x6666, lsl #16
  43a578:	smull	x10, w10, w12
  43a57c:	add	w11, w11, #0x1
  43a580:	lsr	x12, x10, #63
  43a584:	asr	x10, x10, #34
  43a588:	cmp	w11, #0x8
  43a58c:	add	w10, w10, w12
  43a590:	b.lt	43a570 <argp_parse@@Base+0x2cc4>  // b.tstop
  43a594:	mov	w20, w22
  43a598:	b	43ac6c <argp_parse@@Base+0x33c0>
  43a59c:	mov	w11, #0x1                   	// #1
  43a5a0:	eor	w8, w28, #0x1
  43a5a4:	mov	w20, wzr
  43a5a8:	orr	w25, w28, w11
  43a5ac:	and	w26, w26, w8
  43a5b0:	mov	w8, #0x70                  	// #112
  43a5b4:	b	43ac88 <argp_parse@@Base+0x33dc>
  43a5b8:	cmp	w9, #0x45
  43a5bc:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a5c0:	ldr	x10, [sp, #80]
  43a5c4:	ldr	w10, [x10]
  43a5c8:	b	43ac68 <argp_parse@@Base+0x33bc>
  43a5cc:	adrp	x27, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  43a5d0:	add	x27, x27, #0x159
  43a5d4:	ldr	x2, [sp, #80]
  43a5d8:	ldr	x4, [sp, #48]
  43a5dc:	ldr	w5, [sp, #44]
  43a5e0:	and	w3, w26, #0x1
  43a5e4:	mov	x0, xzr
  43a5e8:	mov	x19, x1
  43a5ec:	mov	x1, x27
  43a5f0:	mov	w25, w26
  43a5f4:	bl	43a098 <argp_parse@@Base+0x27ec>
  43a5f8:	bic	w8, w22, w22, asr #31
  43a5fc:	cmp	x0, x8
  43a600:	csel	x20, x8, x0, cc  // cc = lo, ul, last
  43a604:	mvn	x9, x19
  43a608:	cmp	x20, x9
  43a60c:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43a610:	mov	x1, x19
  43a614:	cbz	x24, 43b068 <argp_parse@@Base+0x37bc>
  43a618:	cmp	x0, x8
  43a61c:	b.cs	43b048 <argp_parse@@Base+0x379c>  // b.hs, b.nlast
  43a620:	sxtw	x8, w22
  43a624:	cmp	w21, #0x30
  43a628:	sub	x21, x8, x0
  43a62c:	b.ne	43b030 <argp_parse@@Base+0x3784>  // b.any
  43a630:	cbz	x21, 43b048 <argp_parse@@Base+0x379c>
  43a634:	mov	w0, #0x30                  	// #48
  43a638:	mov	x1, x24
  43a63c:	bl	4040c0 <fputc@plt>
  43a640:	subs	x21, x21, #0x1
  43a644:	b.ne	43a634 <argp_parse@@Base+0x2d88>  // b.any
  43a648:	b	43b048 <argp_parse@@Base+0x379c>
  43a64c:	cmp	w9, #0x45
  43a650:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a654:	ldr	x11, [sp, #80]
  43a658:	mov	w12, #0x2493                	// #9363
  43a65c:	movk	w12, #0x9249, lsl #16
  43a660:	ldp	w11, w10, [x11, #24]
  43a664:	sub	w10, w10, w11
  43a668:	b	43a6ac <argp_parse@@Base+0x2e00>
  43a66c:	cmp	w9, #0x45
  43a670:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a674:	ldr	x11, [sp, #80]
  43a678:	mov	w12, #0x2493                	// #9363
  43a67c:	movk	w12, #0x9249, lsl #16
  43a680:	ldp	w10, w11, [x11, #24]
  43a684:	add	w10, w10, #0x6
  43a688:	smull	x13, w10, w12
  43a68c:	lsr	x13, x13, #32
  43a690:	add	w13, w13, w10
  43a694:	asr	w14, w13, #2
  43a698:	add	w13, w14, w13, lsr #31
  43a69c:	lsl	w14, w13, #3
  43a6a0:	sub	w13, w14, w13
  43a6a4:	sub	w10, w13, w10
  43a6a8:	add	w10, w11, w10
  43a6ac:	add	w10, w10, #0x7
  43a6b0:	smull	x11, w10, w12
  43a6b4:	lsr	x11, x11, #32
  43a6b8:	add	w10, w11, w10
  43a6bc:	asr	w11, w10, #2
  43a6c0:	add	w10, w11, w10, lsr #31
  43a6c4:	b	43ac68 <argp_parse@@Base+0x33bc>
  43a6c8:	cmp	w9, #0x4f
  43a6cc:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a6d0:	mov	w25, wzr
  43a6d4:	mov	w20, wzr
  43a6d8:	mov	w8, #0x58                  	// #88
  43a6dc:	b	43ac88 <argp_parse@@Base+0x33dc>
  43a6e0:	cmp	w9, #0x45
  43a6e4:	b.eq	43b154 <argp_parse@@Base+0x38a8>  // b.none
  43a6e8:	cmp	w9, #0x4f
  43a6ec:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a6f0:	ldr	x8, [sp, #80]
  43a6f4:	mov	w12, wzr
  43a6f8:	mov	w13, wzr
  43a6fc:	mov	w20, #0x4                   	// #4
  43a700:	ldr	w8, [x8, #20]
  43a704:	cmn	w8, #0x76c
  43a708:	add	w10, w8, #0x76c
  43a70c:	cset	w11, lt  // lt = tstop
  43a710:	b	43ad24 <argp_parse@@Base+0x3478>
  43a714:	ldr	x0, [sp, #24]
  43a718:	mov	x19, x1
  43a71c:	bl	403f40 <strlen@plt>
  43a720:	bic	w8, w22, w22, asr #31
  43a724:	mov	x9, x19
  43a728:	cmp	x0, x8
  43a72c:	csel	x20, x8, x0, cc  // cc = lo, ul, last
  43a730:	mvn	x9, x19
  43a734:	cmp	x20, x9
  43a738:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43a73c:	cbz	x24, 43b29c <argp_parse@@Base+0x39f0>
  43a740:	mov	x27, x0
  43a744:	cmp	x0, x8
  43a748:	mov	w25, w26
  43a74c:	b.cs	43b1d8 <argp_parse@@Base+0x392c>  // b.hs, b.nlast
  43a750:	sxtw	x8, w22
  43a754:	cmp	w21, #0x30
  43a758:	sub	x21, x8, x27
  43a75c:	b.ne	43b1c0 <argp_parse@@Base+0x3914>  // b.any
  43a760:	cbz	x21, 43b1d8 <argp_parse@@Base+0x392c>
  43a764:	mov	w0, #0x30                  	// #48
  43a768:	mov	x1, x24
  43a76c:	bl	4040c0 <fputc@plt>
  43a770:	subs	x21, x21, #0x1
  43a774:	b.ne	43a764 <argp_parse@@Base+0x2eb8>  // b.any
  43a778:	b	43b1d8 <argp_parse@@Base+0x392c>
  43a77c:	cbnz	w9, 43b07c <argp_parse@@Base+0x37d0>
  43a780:	mov	w25, wzr
  43a784:	mov	w20, wzr
  43a788:	orr	w26, w28, w26
  43a78c:	mov	w8, #0x61                  	// #97
  43a790:	b	43ac88 <argp_parse@@Base+0x33dc>
  43a794:	cmp	w9, #0x4f
  43a798:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a79c:	mov	w25, wzr
  43a7a0:	mov	w20, wzr
  43a7a4:	mov	w8, #0x63                  	// #99
  43a7a8:	b	43ac88 <argp_parse@@Base+0x33dc>
  43a7ac:	cmp	w9, #0x45
  43a7b0:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a7b4:	ldr	x10, [sp, #80]
  43a7b8:	ldr	w10, [x10, #12]
  43a7bc:	b	43ac68 <argp_parse@@Base+0x33bc>
  43a7c0:	cmp	w9, #0x45
  43a7c4:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a7c8:	ldr	x10, [sp, #80]
  43a7cc:	ldr	w10, [x10, #12]
  43a7d0:	b	43a814 <argp_parse@@Base+0x2f68>
  43a7d4:	cmp	w9, #0x45
  43a7d8:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a7dc:	ldr	x10, [sp, #80]
  43a7e0:	mov	w13, wzr
  43a7e4:	mov	w12, wzr
  43a7e8:	mov	w20, #0x3                   	// #3
  43a7ec:	ldr	w10, [x10, #28]
  43a7f0:	b	43a850 <argp_parse@@Base+0x2fa4>
  43a7f4:	cmp	w9, #0x45
  43a7f8:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a7fc:	ldr	x10, [sp, #80]
  43a800:	ldr	w10, [x10, #8]
  43a804:	b	43a814 <argp_parse@@Base+0x2f68>
  43a808:	ldr	w10, [sp, #20]
  43a80c:	cmp	w9, #0x45
  43a810:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a814:	and	w11, w21, #0xff
  43a818:	cmp	w11, #0x2d
  43a81c:	mov	w20, #0x2                   	// #2
  43a820:	b.eq	43ac6c <argp_parse@@Base+0x33c0>  // b.none
  43a824:	cmp	w11, #0x30
  43a828:	b.eq	43ac6c <argp_parse@@Base+0x33c0>  // b.none
  43a82c:	mov	w21, #0x5f                  	// #95
  43a830:	b	43ac68 <argp_parse@@Base+0x33bc>
  43a834:	cmp	w9, #0x45
  43a838:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43a83c:	ldr	x10, [sp, #80]
  43a840:	mov	w13, wzr
  43a844:	mov	w12, wzr
  43a848:	mov	w20, #0x2                   	// #2
  43a84c:	ldr	w10, [x10, #16]
  43a850:	cmn	w10, #0x1
  43a854:	add	w10, w10, #0x1
  43a858:	cset	w11, lt  // lt = tstop
  43a85c:	b	43ac78 <argp_parse@@Base+0x33cc>
  43a860:	bic	w8, w22, w22, asr #31
  43a864:	cmp	w8, #0x1
  43a868:	csinc	w20, w8, wzr, hi  // hi = pmore
  43a86c:	mvn	x9, x1
  43a870:	cmp	x20, x9
  43a874:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43a878:	cbz	x24, 43b470 <argp_parse@@Base+0x3bc4>
  43a87c:	mov	x19, x1
  43a880:	cmp	w8, #0x2
  43a884:	b.cc	43b260 <argp_parse@@Base+0x39b4>  // b.lo, b.ul, b.last
  43a888:	sxtw	x8, w22
  43a88c:	cmp	w21, #0x30
  43a890:	sub	x21, x8, #0x1
  43a894:	b.ne	43b248 <argp_parse@@Base+0x399c>  // b.any
  43a898:	cbz	x21, 43b260 <argp_parse@@Base+0x39b4>
  43a89c:	mov	w0, #0x30                  	// #48
  43a8a0:	mov	x1, x24
  43a8a4:	bl	4040c0 <fputc@plt>
  43a8a8:	subs	x21, x21, #0x1
  43a8ac:	b.ne	43a89c <argp_parse@@Base+0x2ff0>  // b.any
  43a8b0:	b	43b260 <argp_parse@@Base+0x39b4>
  43a8b4:	ldr	x10, [sp, #80]
  43a8b8:	mov	w14, #0xb                   	// #11
  43a8bc:	mov	w13, wzr
  43a8c0:	mov	w12, wzr
  43a8c4:	ldr	w10, [x10, #16]
  43a8c8:	mov	w11, wzr
  43a8cc:	mov	w20, #0x1                   	// #1
  43a8d0:	mul	w10, w10, w14
  43a8d4:	asr	w10, w10, #5
  43a8d8:	add	w10, w10, #0x1
  43a8dc:	b	43ac78 <argp_parse@@Base+0x33cc>
  43a8e0:	ldr	x9, [sp, #80]
  43a8e4:	ldr	x0, [sp, #48]
  43a8e8:	mov	x19, x1
  43a8ec:	add	x1, sp, #0x60
  43a8f0:	ldr	x8, [x9, #48]
  43a8f4:	ldp	q1, q0, [x9, #16]
  43a8f8:	ldr	q2, [x9]
  43a8fc:	str	x8, [sp, #144]
  43a900:	stp	q1, q0, [sp, #112]
  43a904:	str	q2, [sp, #96]
  43a908:	bl	456818 <_obstack_memory_used@@Base+0xfcc8>
  43a90c:	ldr	x28, [sp, #72]
  43a910:	lsr	x11, x0, #63
  43a914:	mov	x8, x0
  43a918:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  43a91c:	movk	x9, #0x6667
  43a920:	smulh	x9, x8, x9
  43a924:	asr	x13, x9, #2
  43a928:	mov	w10, #0xa                   	// #10
  43a92c:	add	x9, x13, x9, lsr #63
  43a930:	cmp	x0, #0x0
  43a934:	add	x12, x8, #0x9
  43a938:	msub	w8, w9, w10, w8
  43a93c:	cneg	w8, w8, lt  // lt = tstop
  43a940:	add	w8, w8, #0x30
  43a944:	cmp	x12, #0x12
  43a948:	strb	w8, [x28, #-1]!
  43a94c:	mov	x8, x9
  43a950:	b.hi	43a918 <argp_parse@@Base+0x306c>  // b.pmore
  43a954:	cmp	w22, #0x1
  43a958:	mov	w8, wzr
  43a95c:	csinc	w20, w22, wzr, gt
  43a960:	mov	x1, x19
  43a964:	b	43ad88 <argp_parse@@Base+0x34dc>
  43a968:	bic	w8, w22, w22, asr #31
  43a96c:	cmp	w8, #0x1
  43a970:	csinc	w20, w8, wzr, hi  // hi = pmore
  43a974:	mvn	x9, x1
  43a978:	cmp	x20, x9
  43a97c:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43a980:	cbz	x24, 43b470 <argp_parse@@Base+0x3bc4>
  43a984:	mov	x19, x1
  43a988:	cmp	w8, #0x2
  43a98c:	b.cc	43b280 <argp_parse@@Base+0x39d4>  // b.lo, b.ul, b.last
  43a990:	sxtw	x8, w22
  43a994:	cmp	w21, #0x30
  43a998:	sub	x21, x8, #0x1
  43a99c:	b.ne	43b268 <argp_parse@@Base+0x39bc>  // b.any
  43a9a0:	cbz	x21, 43b280 <argp_parse@@Base+0x39d4>
  43a9a4:	mov	w0, #0x30                  	// #48
  43a9a8:	mov	x1, x24
  43a9ac:	bl	4040c0 <fputc@plt>
  43a9b0:	subs	x21, x21, #0x1
  43a9b4:	b.ne	43a9a4 <argp_parse@@Base+0x30f8>  // b.any
  43a9b8:	b	43b280 <argp_parse@@Base+0x39d4>
  43a9bc:	ldr	x10, [sp, #80]
  43a9c0:	mov	w11, #0x2493                	// #9363
  43a9c4:	movk	w11, #0x9249, lsl #16
  43a9c8:	mov	w20, #0x1                   	// #1
  43a9cc:	ldr	w10, [x10, #24]
  43a9d0:	add	w10, w10, #0x6
  43a9d4:	smull	x11, w10, w11
  43a9d8:	lsr	x11, x11, #32
  43a9dc:	add	w11, w11, w10
  43a9e0:	asr	w12, w11, #2
  43a9e4:	add	w11, w12, w11, lsr #31
  43a9e8:	sub	w11, w11, w11, lsl #3
  43a9ec:	add	w10, w10, w11
  43a9f0:	add	w10, w10, #0x1
  43a9f4:	b	43ac6c <argp_parse@@Base+0x33c0>
  43a9f8:	cmp	w9, #0x45
  43a9fc:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43aa00:	ldr	x10, [sp, #80]
  43aa04:	mov	w20, #0x1                   	// #1
  43aa08:	ldr	w10, [x10, #24]
  43aa0c:	b	43ac6c <argp_parse@@Base+0x33c0>
  43aa10:	cmp	w9, #0x4f
  43aa14:	b.eq	43b07c <argp_parse@@Base+0x37d0>  // b.none
  43aa18:	mov	w25, wzr
  43aa1c:	mov	w20, wzr
  43aa20:	mov	w8, #0x78                  	// #120
  43aa24:	b	43ac88 <argp_parse@@Base+0x33dc>
  43aa28:	cmp	w9, #0x45
  43aa2c:	b.ne	43ac2c <argp_parse@@Base+0x3380>  // b.any
  43aa30:	mov	w25, wzr
  43aa34:	mov	w20, wzr
  43aa38:	mov	w8, #0x79                  	// #121
  43aa3c:	b	43ac88 <argp_parse@@Base+0x33dc>
  43aa40:	cmp	w11, #0x7a
  43aa44:	b.ne	43b07c <argp_parse@@Base+0x37d0>  // b.any
  43aa48:	add	x23, x23, x10
  43aa4c:	ldr	x12, [sp, #80]
  43aa50:	ldr	w11, [x12, #32]
  43aa54:	tbnz	w11, #31, 43a160 <argp_parse@@Base+0x28b4>
  43aa58:	ldr	w12, [x12, #40]
  43aa5c:	tbnz	w12, #31, 43b070 <argp_parse@@Base+0x37c4>
  43aa60:	cbz	w12, 43b164 <argp_parse@@Base+0x38b8>
  43aa64:	mov	w11, wzr
  43aa68:	cmp	x10, #0x3
  43aa6c:	b.hi	43b07c <argp_parse@@Base+0x37d0>  // b.pmore
  43aa70:	mov	w13, #0x8889                	// #34953
  43aa74:	movk	w13, #0x8888, lsl #16
  43aa78:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43aa7c:	add	x15, x15, #0x210
  43aa80:	smull	x16, w12, w13
  43aa84:	adr	x17, 43aae0 <argp_parse@@Base+0x3234>
  43aa88:	ldrh	w18, [x15, x10, lsl #1]
  43aa8c:	add	x17, x17, x18, lsl #2
  43aa90:	lsr	x10, x16, #32
  43aa94:	mov	w14, #0xb3c5                	// #46021
  43aa98:	add	w10, w10, w12
  43aa9c:	movk	w14, #0x91a2, lsl #16
  43aaa0:	asr	w15, w10, #5
  43aaa4:	smull	x14, w12, w14
  43aaa8:	add	w15, w15, w10, lsr #31
  43aaac:	lsr	x14, x14, #32
  43aab0:	smull	x13, w15, w13
  43aab4:	add	w14, w14, w12
  43aab8:	lsr	x13, x13, #32
  43aabc:	asr	w10, w14, #11
  43aac0:	add	w13, w13, w15
  43aac4:	add	w10, w10, w14, lsr #31
  43aac8:	asr	w14, w13, #5
  43aacc:	add	w13, w14, w13, lsr #31
  43aad0:	mov	w16, #0x3c                  	// #60
  43aad4:	msub	w14, w13, w16, w15
  43aad8:	msub	w13, w15, w16, w12
  43aadc:	br	x17
  43aae0:	mov	w12, #0x64                  	// #100
  43aae4:	mov	w13, wzr
  43aae8:	mov	w20, #0x5                   	// #5
  43aaec:	madd	w10, w10, w12, w14
  43aaf0:	mov	w12, #0x1                   	// #1
  43aaf4:	b	43ac78 <argp_parse@@Base+0x33cc>
  43aaf8:	sub	w14, w15, #0x1
  43aafc:	tst	w14, #0x3
  43ab00:	mov	w13, #0x16d                 	// #365
  43ab04:	b.ne	43ab40 <argp_parse@@Base+0x3294>  // b.any
  43ab08:	mov	w15, #0x5c29                	// #23593
  43ab0c:	mov	w16, #0xb850                	// #47184
  43ab10:	movk	w15, #0xc28f, lsl #16
  43ab14:	movk	w16, #0x51e, lsl #16
  43ab18:	mov	w17, #0xd70b                	// #55051
  43ab1c:	madd	w14, w14, w15, w16
  43ab20:	movk	w17, #0xa3, lsl #16
  43ab24:	ror	w15, w14, #2
  43ab28:	ror	w14, w14, #4
  43ab2c:	cmp	w14, w17
  43ab30:	mov	w14, #0x5c28                	// #23592
  43ab34:	movk	w14, #0x28f, lsl #16
  43ab38:	ccmp	w15, w14, #0x2, cs  // cs = hs, nlast
  43ab3c:	cinc	w13, w13, hi  // hi = pmore
  43ab40:	add	w12, w13, w12
  43ab44:	mov	w13, #0x17e                 	// #382
  43ab48:	mov	w14, #0x2493                	// #9363
  43ab4c:	sub	w10, w13, w10
  43ab50:	movk	w14, #0x9249, lsl #16
  43ab54:	add	w12, w10, w12
  43ab58:	smull	x13, w12, w14
  43ab5c:	lsr	x13, x13, #32
  43ab60:	add	w12, w13, w12
  43ab64:	asr	w13, w12, #2
  43ab68:	add	w12, w13, w12, lsr #31
  43ab6c:	lsl	w13, w12, #3
  43ab70:	sub	w12, w13, w12
  43ab74:	sub	w10, w12, w10
  43ab78:	add	w10, w10, #0x3
  43ab7c:	mov	w14, #0xffffffff            	// #-1
  43ab80:	cmp	w8, #0x47
  43ab84:	b.ne	43a3c0 <argp_parse@@Base+0x2b14>  // b.any
  43ab88:	mov	w10, #0xfffff894            	// #-1900
  43ab8c:	add	w15, w11, w14
  43ab90:	sub	w14, w10, w14
  43ab94:	cmp	w11, w14
  43ab98:	mov	w13, wzr
  43ab9c:	mov	w12, wzr
  43aba0:	add	w10, w15, #0x76c
  43aba4:	cset	w11, lt  // lt = tstop
  43aba8:	mov	w20, #0x4                   	// #4
  43abac:	b	43ac78 <argp_parse@@Base+0x33cc>
  43abb0:	mov	w11, #0x2493                	// #9363
  43abb4:	movk	w11, #0x9249, lsl #16
  43abb8:	smull	x11, w10, w11
  43abbc:	lsr	x11, x11, #32
  43abc0:	add	w10, w11, w10
  43abc4:	asr	w11, w10, #2
  43abc8:	add	w10, w11, w10, lsr #31
  43abcc:	add	w10, w10, #0x1
  43abd0:	b	43ac68 <argp_parse@@Base+0x33bc>
  43abd4:	ldr	x10, [sp, #80]
  43abd8:	mov	w11, #0x851f                	// #34079
  43abdc:	movk	w11, #0x51eb, lsl #16
  43abe0:	mov	w14, #0x64                  	// #100
  43abe4:	ldrsw	x10, [x10, #20]
  43abe8:	mov	w13, wzr
  43abec:	mov	w12, wzr
  43abf0:	mov	w20, #0x2                   	// #2
  43abf4:	mul	x11, x10, x11
  43abf8:	lsr	x15, x11, #63
  43abfc:	asr	x11, x11, #37
  43ac00:	add	w15, w11, w15
  43ac04:	cmn	x10, #0x76c
  43ac08:	msub	w10, w15, w14, w10
  43ac0c:	cset	w11, lt  // lt = tstop
  43ac10:	cset	w14, gt
  43ac14:	cmp	w10, #0x0
  43ac18:	cset	w10, lt  // lt = tstop
  43ac1c:	and	w10, w14, w10
  43ac20:	sub	w10, w15, w10
  43ac24:	add	w10, w10, #0x13
  43ac28:	b	43ac78 <argp_parse@@Base+0x33cc>
  43ac2c:	ldr	x10, [sp, #80]
  43ac30:	mov	w11, #0x851f                	// #34079
  43ac34:	movk	w11, #0x51eb, lsl #16
  43ac38:	mov	w12, #0x64                  	// #100
  43ac3c:	ldrsw	x10, [x10, #20]
  43ac40:	mul	x11, x10, x11
  43ac44:	lsr	x13, x11, #63
  43ac48:	asr	x11, x11, #37
  43ac4c:	add	w11, w11, w13
  43ac50:	cmn	w10, #0x76c
  43ac54:	msub	w10, w11, w12, w10
  43ac58:	add	w11, w10, #0x64
  43ac5c:	csneg	w11, w11, w10, ge  // ge = tcont
  43ac60:	cmp	w10, #0x0
  43ac64:	csel	w10, w11, w10, lt  // lt = tstop
  43ac68:	mov	w20, #0x2                   	// #2
  43ac6c:	mov	w13, wzr
  43ac70:	mov	w12, wzr
  43ac74:	lsr	w11, w10, #31
  43ac78:	cmp	w9, #0x4f
  43ac7c:	b.ne	43ad24 <argp_parse@@Base+0x3478>  // b.any
  43ac80:	cbnz	w11, 43ad24 <argp_parse@@Base+0x3478>
  43ac84:	mov	w25, wzr
  43ac88:	mov	w10, #0x2520                	// #9504
  43ac8c:	sturh	w10, [x29, #-40]
  43ac90:	ldr	x10, [sp, #64]
  43ac94:	mov	x19, x1
  43ac98:	cbz	w9, 43aca4 <argp_parse@@Base+0x33f8>
  43ac9c:	ldr	x10, [sp, #56]
  43aca0:	sturb	w9, [x29, #-38]
  43aca4:	ldr	x3, [sp, #80]
  43aca8:	add	x0, sp, #0x60
  43acac:	sub	x2, x29, #0x28
  43acb0:	mov	w1, #0x400                 	// #1024
  43acb4:	strb	w8, [x10]
  43acb8:	strb	wzr, [x10, #1]
  43acbc:	bl	4040a0 <strftime@plt>
  43acc0:	cbz	x0, 43adf4 <argp_parse@@Base+0x3548>
  43acc4:	sub	x27, x0, #0x1
  43acc8:	bic	w8, w22, w22, asr #31
  43accc:	cmp	x27, x8
  43acd0:	mov	x9, x19
  43acd4:	mov	w28, w26
  43acd8:	csel	x26, x8, x27, cc  // cc = lo, ul, last
  43acdc:	mvn	x9, x19
  43ace0:	cmp	x26, x9
  43ace4:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43ace8:	cbz	x24, 43afb8 <argp_parse@@Base+0x370c>
  43acec:	cbnz	w20, 43af3c <argp_parse@@Base+0x3690>
  43acf0:	cmp	x27, x8
  43acf4:	b.cs	43af3c <argp_parse@@Base+0x3690>  // b.hs, b.nlast
  43acf8:	sxtw	x8, w22
  43acfc:	cmp	w21, #0x30
  43ad00:	sub	x20, x8, x27
  43ad04:	b.ne	43af24 <argp_parse@@Base+0x3678>  // b.any
  43ad08:	cbz	x20, 43af3c <argp_parse@@Base+0x3690>
  43ad0c:	mov	w0, #0x30                  	// #48
  43ad10:	mov	x1, x24
  43ad14:	bl	4040c0 <fputc@plt>
  43ad18:	subs	x20, x20, #0x1
  43ad1c:	b.ne	43ad0c <argp_parse@@Base+0x3460>  // b.any
  43ad20:	b	43af3c <argp_parse@@Base+0x3690>
  43ad24:	ldr	x28, [sp, #72]
  43ad28:	cmp	w11, #0x0
  43ad2c:	cneg	w8, w10, ne  // ne = any
  43ad30:	tbz	w13, #0, 43ad3c <argp_parse@@Base+0x3490>
  43ad34:	mov	w9, #0x3a                  	// #58
  43ad38:	strb	w9, [x28, #-1]!
  43ad3c:	mov	w9, #0xcccd                	// #52429
  43ad40:	movk	w9, #0xcccc, lsl #16
  43ad44:	umull	x9, w8, w9
  43ad48:	mov	w10, #0xa                   	// #10
  43ad4c:	lsr	x9, x9, #35
  43ad50:	msub	w10, w9, w10, w8
  43ad54:	orr	w10, w10, #0x30
  43ad58:	asr	w13, w13, #1
  43ad5c:	cmp	w8, #0x9
  43ad60:	strb	w10, [x28, #-1]!
  43ad64:	mov	w8, w9
  43ad68:	b.hi	43ad30 <argp_parse@@Base+0x3484>  // b.pmore
  43ad6c:	mov	w8, w9
  43ad70:	cbnz	w13, 43ad30 <argp_parse@@Base+0x3484>
  43ad74:	cmp	w20, w22
  43ad78:	csel	w20, w22, w20, lt  // lt = tstop
  43ad7c:	cmp	w12, #0x0
  43ad80:	mov	w8, #0x2b                  	// #43
  43ad84:	csel	w8, w8, wzr, ne  // ne = any
  43ad88:	cmp	w11, #0x0
  43ad8c:	mov	w9, #0x2d                  	// #45
  43ad90:	csel	w27, w9, w8, ne  // ne = any
  43ad94:	cmp	w21, #0x2d
  43ad98:	str	w26, [sp, #40]
  43ad9c:	b.ne	43adfc <argp_parse@@Base+0x3550>  // b.any
  43ada0:	cbz	w27, 43b2d4 <argp_parse@@Base+0x3a28>
  43ada4:	bic	w8, w22, w22, asr #31
  43ada8:	cmp	w8, #0x1
  43adac:	csinc	w25, w8, wzr, hi  // hi = pmore
  43adb0:	mvn	x9, x1
  43adb4:	cmp	x25, x9
  43adb8:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43adbc:	cbz	x24, 43b2d0 <argp_parse@@Base+0x3a24>
  43adc0:	mov	x19, x1
  43adc4:	cbnz	w20, 43b2c0 <argp_parse@@Base+0x3a14>
  43adc8:	cmp	w8, #0x2
  43adcc:	b.cc	43b2c0 <argp_parse@@Base+0x3a14>  // b.lo, b.ul, b.last
  43add0:	sxtw	x8, w22
  43add4:	subs	x26, x8, #0x1
  43add8:	b.eq	43b2c0 <argp_parse@@Base+0x3a14>  // b.none
  43addc:	mov	w0, #0x20                  	// #32
  43ade0:	mov	x1, x24
  43ade4:	bl	4040c0 <fputc@plt>
  43ade8:	subs	x26, x26, #0x1
  43adec:	b.ne	43addc <argp_parse@@Base+0x3530>  // b.any
  43adf0:	b	43b2c0 <argp_parse@@Base+0x3a14>
  43adf4:	mov	x1, x19
  43adf8:	b	43a160 <argp_parse@@Base+0x28b4>
  43adfc:	ldr	x10, [sp, #72]
  43ae00:	sxtw	x8, w20
  43ae04:	cmp	w27, #0x0
  43ae08:	cset	w9, ne  // ne = any
  43ae0c:	sub	x10, x8, x10
  43ae10:	add	x10, x10, x28
  43ae14:	sub	x25, x10, x9
  43ae18:	cmp	w25, #0x1
  43ae1c:	b.lt	43aec8 <argp_parse@@Base+0x361c>  // b.tstop
  43ae20:	cmp	w21, #0x5f
  43ae24:	b.ne	43afc4 <argp_parse@@Base+0x3718>  // b.any
  43ae28:	sxtw	x26, w25
  43ae2c:	mvn	x8, x1
  43ae30:	cmp	x26, x8
  43ae34:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43ae38:	mov	x19, x1
  43ae3c:	str	x20, [sp]
  43ae40:	cbz	x24, 43ae64 <argp_parse@@Base+0x35b8>
  43ae44:	lsl	x8, x25, #32
  43ae48:	cbz	x8, 43ae64 <argp_parse@@Base+0x35b8>
  43ae4c:	sxtw	x20, w25
  43ae50:	mov	w0, #0x20                  	// #32
  43ae54:	mov	x1, x24
  43ae58:	bl	4040c0 <fputc@plt>
  43ae5c:	subs	x20, x20, #0x1
  43ae60:	b.ne	43ae50 <argp_parse@@Base+0x35a4>  // b.any
  43ae64:	mov	x1, x19
  43ae68:	subs	w8, w22, w25
  43ae6c:	add	x1, x26, x19
  43ae70:	csel	w22, w8, wzr, gt
  43ae74:	cbz	w27, 43b028 <argp_parse@@Base+0x377c>
  43ae78:	ldr	x20, [sp]
  43ae7c:	cmp	w22, #0x1
  43ae80:	csinc	w25, w22, wzr, hi  // hi = pmore
  43ae84:	mvn	x8, x1
  43ae88:	cmp	x25, x8
  43ae8c:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43ae90:	cbz	x24, 43b2d0 <argp_parse@@Base+0x3a24>
  43ae94:	mov	x19, x1
  43ae98:	cbnz	w20, 43b2c0 <argp_parse@@Base+0x3a14>
  43ae9c:	cmp	w22, #0x2
  43aea0:	b.cc	43b2c0 <argp_parse@@Base+0x3a14>  // b.lo, b.ul, b.last
  43aea4:	mov	w8, w22
  43aea8:	subs	x26, x8, #0x1
  43aeac:	b.eq	43b2c0 <argp_parse@@Base+0x3a14>  // b.none
  43aeb0:	mov	w0, #0x20                  	// #32
  43aeb4:	mov	x1, x24
  43aeb8:	bl	4040c0 <fputc@plt>
  43aebc:	subs	x26, x26, #0x1
  43aec0:	b.ne	43aeb0 <argp_parse@@Base+0x3604>  // b.any
  43aec4:	b	43b2c0 <argp_parse@@Base+0x3a14>
  43aec8:	cbz	w27, 43b2d4 <argp_parse@@Base+0x3a28>
  43aecc:	bic	w8, w22, w22, asr #31
  43aed0:	cmp	w8, #0x1
  43aed4:	csinc	w25, w8, wzr, hi  // hi = pmore
  43aed8:	mvn	x9, x1
  43aedc:	cmp	x25, x9
  43aee0:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43aee4:	cbz	x24, 43b2d0 <argp_parse@@Base+0x3a24>
  43aee8:	mov	x19, x1
  43aeec:	cbnz	w20, 43b2c0 <argp_parse@@Base+0x3a14>
  43aef0:	cmp	w8, #0x2
  43aef4:	b.cc	43b2c0 <argp_parse@@Base+0x3a14>  // b.lo, b.ul, b.last
  43aef8:	sxtw	x8, w22
  43aefc:	cmp	w21, #0x30
  43af00:	sub	x26, x8, #0x1
  43af04:	b.ne	43b2a8 <argp_parse@@Base+0x39fc>  // b.any
  43af08:	cbz	x26, 43b2c0 <argp_parse@@Base+0x3a14>
  43af0c:	mov	w0, #0x30                  	// #48
  43af10:	mov	x1, x24
  43af14:	bl	4040c0 <fputc@plt>
  43af18:	subs	x26, x26, #0x1
  43af1c:	b.ne	43af0c <argp_parse@@Base+0x3660>  // b.any
  43af20:	b	43b2c0 <argp_parse@@Base+0x3a14>
  43af24:	cbz	x20, 43af3c <argp_parse@@Base+0x3690>
  43af28:	mov	w0, #0x20                  	// #32
  43af2c:	mov	x1, x24
  43af30:	bl	4040c0 <fputc@plt>
  43af34:	subs	x20, x20, #0x1
  43af38:	b.ne	43af28 <argp_parse@@Base+0x367c>  // b.any
  43af3c:	tbz	w25, #0, 43af70 <argp_parse@@Base+0x36c4>
  43af40:	cbz	x27, 43afb8 <argp_parse@@Base+0x370c>
  43af44:	bl	404140 <__ctype_tolower_loc@plt>
  43af48:	ldr	x20, [sp, #32]
  43af4c:	mov	x28, x0
  43af50:	ldr	x8, [x28]
  43af54:	ldrb	w9, [x20], #1
  43af58:	mov	x1, x24
  43af5c:	sub	x27, x27, #0x1
  43af60:	ldr	w0, [x8, x9, lsl #2]
  43af64:	bl	4040c0 <fputc@plt>
  43af68:	cbnz	x27, 43af50 <argp_parse@@Base+0x36a4>
  43af6c:	b	43afb8 <argp_parse@@Base+0x370c>
  43af70:	tbz	w28, #0, 43afa4 <argp_parse@@Base+0x36f8>
  43af74:	cbz	x27, 43afb8 <argp_parse@@Base+0x370c>
  43af78:	bl	4044a0 <__ctype_toupper_loc@plt>
  43af7c:	ldr	x20, [sp, #32]
  43af80:	mov	x28, x0
  43af84:	ldr	x8, [x28]
  43af88:	ldrb	w9, [x20], #1
  43af8c:	mov	x1, x24
  43af90:	sub	x27, x27, #0x1
  43af94:	ldr	w0, [x8, x9, lsl #2]
  43af98:	bl	4040c0 <fputc@plt>
  43af9c:	cbnz	x27, 43af84 <argp_parse@@Base+0x36d8>
  43afa0:	b	43afb8 <argp_parse@@Base+0x370c>
  43afa4:	ldr	x0, [sp, #32]
  43afa8:	mov	w2, #0x1                   	// #1
  43afac:	mov	x1, x27
  43afb0:	mov	x3, x24
  43afb4:	bl	4047e0 <fwrite@plt>
  43afb8:	mov	x1, x19
  43afbc:	add	x1, x26, x19
  43afc0:	b	43a160 <argp_parse@@Base+0x28b4>
  43afc4:	mvn	x9, x1
  43afc8:	cmp	x8, x9
  43afcc:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43afd0:	cbz	w27, 43b3d8 <argp_parse@@Base+0x3b2c>
  43afd4:	bic	w8, w22, w22, asr #31
  43afd8:	cmp	w8, #0x1
  43afdc:	csinc	w26, w8, wzr, hi  // hi = pmore
  43afe0:	cmp	x26, x9
  43afe4:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43afe8:	cbz	x24, 43b3d4 <argp_parse@@Base+0x3b28>
  43afec:	mov	x19, x1
  43aff0:	cbnz	w20, 43b3c4 <argp_parse@@Base+0x3b18>
  43aff4:	cmp	w8, #0x2
  43aff8:	b.cc	43b3c4 <argp_parse@@Base+0x3b18>  // b.lo, b.ul, b.last
  43affc:	sxtw	x8, w22
  43b000:	cmp	w21, #0x30
  43b004:	sub	x22, x8, #0x1
  43b008:	b.ne	43b3ac <argp_parse@@Base+0x3b00>  // b.any
  43b00c:	cbz	x22, 43b3c4 <argp_parse@@Base+0x3b18>
  43b010:	mov	w0, #0x30                  	// #48
  43b014:	mov	x1, x24
  43b018:	bl	4040c0 <fputc@plt>
  43b01c:	subs	x22, x22, #0x1
  43b020:	b.ne	43b010 <argp_parse@@Base+0x3764>  // b.any
  43b024:	b	43b3c4 <argp_parse@@Base+0x3b18>
  43b028:	ldr	x20, [sp]
  43b02c:	b	43b2d4 <argp_parse@@Base+0x3a28>
  43b030:	cbz	x21, 43b048 <argp_parse@@Base+0x379c>
  43b034:	mov	w0, #0x20                  	// #32
  43b038:	mov	x1, x24
  43b03c:	bl	4040c0 <fputc@plt>
  43b040:	subs	x21, x21, #0x1
  43b044:	b.ne	43b034 <argp_parse@@Base+0x3788>  // b.any
  43b048:	ldr	x2, [sp, #80]
  43b04c:	ldr	x4, [sp, #48]
  43b050:	ldr	w5, [sp, #44]
  43b054:	and	w3, w25, #0x1
  43b058:	mov	x0, x24
  43b05c:	mov	x1, x27
  43b060:	bl	43a098 <argp_parse@@Base+0x27ec>
  43b064:	mov	x1, x19
  43b068:	add	x1, x20, x1
  43b06c:	b	43a160 <argp_parse@@Base+0x28b4>
  43b070:	mov	w11, #0x1                   	// #1
  43b074:	cmp	x10, #0x3
  43b078:	b.ls	43aa70 <argp_parse@@Base+0x31c4>  // b.plast
  43b07c:	mov	x9, xzr
  43b080:	mov	x8, x9
  43b084:	ldrb	w9, [x23, x9]
  43b088:	cmp	w9, #0x25
  43b08c:	sub	x9, x8, #0x1
  43b090:	b.ne	43b080 <argp_parse@@Base+0x37d4>  // b.any
  43b094:	neg	x10, x9
  43b098:	bic	w11, w22, w22, asr #31
  43b09c:	cmp	w11, w10
  43b0a0:	csel	w20, w10, w11, cc  // cc = lo, ul, last
  43b0a4:	mvn	x12, x1
  43b0a8:	cmp	x20, x12
  43b0ac:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43b0b0:	mov	x19, x1
  43b0b4:	cbz	x24, 43a158 <argp_parse@@Base+0x28ac>
  43b0b8:	add	x25, x23, x9
  43b0bc:	cmp	w11, w10
  43b0c0:	and	x27, x10, #0xffffffff
  43b0c4:	b.ls	43b124 <argp_parse@@Base+0x3878>  // b.plast
  43b0c8:	sxtw	x9, w22
  43b0cc:	cmp	w21, #0x30
  43b0d0:	sub	x10, x9, x27
  43b0d4:	b.ne	43b100 <argp_parse@@Base+0x3854>  // b.any
  43b0d8:	cbz	x10, 43b124 <argp_parse@@Base+0x3878>
  43b0dc:	mov	w10, #0x1                   	// #1
  43b0e0:	sub	w8, w10, w8
  43b0e4:	sub	x21, x9, x8
  43b0e8:	mov	w0, #0x30                  	// #48
  43b0ec:	mov	x1, x24
  43b0f0:	bl	4040c0 <fputc@plt>
  43b0f4:	subs	x21, x21, #0x1
  43b0f8:	b.ne	43b0e8 <argp_parse@@Base+0x383c>  // b.any
  43b0fc:	b	43b124 <argp_parse@@Base+0x3878>
  43b100:	cbz	x10, 43b124 <argp_parse@@Base+0x3878>
  43b104:	mov	w10, #0x1                   	// #1
  43b108:	sub	w8, w10, w8
  43b10c:	sub	x21, x9, x8
  43b110:	mov	w0, #0x20                  	// #32
  43b114:	mov	x1, x24
  43b118:	bl	4040c0 <fputc@plt>
  43b11c:	subs	x21, x21, #0x1
  43b120:	b.ne	43b110 <argp_parse@@Base+0x3864>  // b.any
  43b124:	add	x28, x25, #0x1
  43b128:	tbz	w26, #0, 43a144 <argp_parse@@Base+0x2898>
  43b12c:	bl	4044a0 <__ctype_toupper_loc@plt>
  43b130:	mov	x25, x0
  43b134:	ldr	x8, [x25]
  43b138:	ldrb	w9, [x28], #1
  43b13c:	mov	x1, x24
  43b140:	sub	x27, x27, #0x1
  43b144:	ldr	w0, [x8, x9, lsl #2]
  43b148:	bl	4040c0 <fputc@plt>
  43b14c:	cbnz	x27, 43b134 <argp_parse@@Base+0x3888>
  43b150:	b	43a158 <argp_parse@@Base+0x28ac>
  43b154:	mov	w25, wzr
  43b158:	mov	w20, wzr
  43b15c:	mov	w8, #0x59                  	// #89
  43b160:	b	43ac88 <argp_parse@@Base+0x33dc>
  43b164:	ldr	x11, [sp, #24]
  43b168:	ldrb	w11, [x11]
  43b16c:	cmp	w11, #0x2d
  43b170:	cset	w11, eq  // eq = none
  43b174:	cmp	x10, #0x3
  43b178:	b.ls	43aa70 <argp_parse@@Base+0x31c4>  // b.plast
  43b17c:	b	43b07c <argp_parse@@Base+0x37d0>
  43b180:	ldr	w10, [sp, #44]
  43b184:	mov	w22, #0x9                   	// #9
  43b188:	mov	w20, #0x9                   	// #9
  43b18c:	b	43ac6c <argp_parse@@Base+0x33c0>
  43b190:	cbz	w13, 43b42c <argp_parse@@Base+0x3b80>
  43b194:	mov	w15, #0x2710                	// #10000
  43b198:	mov	w16, #0x64                  	// #100
  43b19c:	madd	w10, w10, w15, w13
  43b1a0:	mov	w20, #0x9                   	// #9
  43b1a4:	mov	w12, #0x1                   	// #1
  43b1a8:	madd	w10, w14, w16, w10
  43b1ac:	mov	w13, #0x14                  	// #20
  43b1b0:	b	43ac78 <argp_parse@@Base+0x33cc>
  43b1b4:	ldr	w10, [sp, #44]
  43b1b8:	mov	w20, w22
  43b1bc:	b	43ac6c <argp_parse@@Base+0x33c0>
  43b1c0:	cbz	x21, 43b1d8 <argp_parse@@Base+0x392c>
  43b1c4:	mov	w0, #0x20                  	// #32
  43b1c8:	mov	x1, x24
  43b1cc:	bl	4040c0 <fputc@plt>
  43b1d0:	subs	x21, x21, #0x1
  43b1d4:	b.ne	43b1c4 <argp_parse@@Base+0x3918>  // b.any
  43b1d8:	tbz	w28, #0, 43b20c <argp_parse@@Base+0x3960>
  43b1dc:	cbz	x27, 43b29c <argp_parse@@Base+0x39f0>
  43b1e0:	bl	404140 <__ctype_tolower_loc@plt>
  43b1e4:	ldr	x21, [sp, #24]
  43b1e8:	mov	x28, x0
  43b1ec:	ldr	x8, [x28]
  43b1f0:	ldrb	w9, [x21], #1
  43b1f4:	mov	x1, x24
  43b1f8:	sub	x27, x27, #0x1
  43b1fc:	ldr	w0, [x8, x9, lsl #2]
  43b200:	bl	4040c0 <fputc@plt>
  43b204:	cbnz	x27, 43b1ec <argp_parse@@Base+0x3940>
  43b208:	b	43b29c <argp_parse@@Base+0x39f0>
  43b20c:	eor	w8, w28, #0x1
  43b210:	and	w8, w25, w8
  43b214:	tbz	w8, #0, 43b288 <argp_parse@@Base+0x39dc>
  43b218:	cbz	x27, 43b29c <argp_parse@@Base+0x39f0>
  43b21c:	bl	4044a0 <__ctype_toupper_loc@plt>
  43b220:	ldr	x21, [sp, #24]
  43b224:	mov	x28, x0
  43b228:	ldr	x8, [x28]
  43b22c:	ldrb	w9, [x21], #1
  43b230:	mov	x1, x24
  43b234:	sub	x27, x27, #0x1
  43b238:	ldr	w0, [x8, x9, lsl #2]
  43b23c:	bl	4040c0 <fputc@plt>
  43b240:	cbnz	x27, 43b228 <argp_parse@@Base+0x397c>
  43b244:	b	43b29c <argp_parse@@Base+0x39f0>
  43b248:	cbz	x21, 43b260 <argp_parse@@Base+0x39b4>
  43b24c:	mov	w0, #0x20                  	// #32
  43b250:	mov	x1, x24
  43b254:	bl	4040c0 <fputc@plt>
  43b258:	subs	x21, x21, #0x1
  43b25c:	b.ne	43b24c <argp_parse@@Base+0x39a0>  // b.any
  43b260:	mov	w0, #0xa                   	// #10
  43b264:	b	43b464 <argp_parse@@Base+0x3bb8>
  43b268:	cbz	x21, 43b280 <argp_parse@@Base+0x39d4>
  43b26c:	mov	w0, #0x20                  	// #32
  43b270:	mov	x1, x24
  43b274:	bl	4040c0 <fputc@plt>
  43b278:	subs	x21, x21, #0x1
  43b27c:	b.ne	43b26c <argp_parse@@Base+0x39c0>  // b.any
  43b280:	mov	w0, #0x9                   	// #9
  43b284:	b	43b464 <argp_parse@@Base+0x3bb8>
  43b288:	ldr	x0, [sp, #24]
  43b28c:	mov	w2, #0x1                   	// #1
  43b290:	mov	x1, x27
  43b294:	mov	x3, x24
  43b298:	bl	4047e0 <fwrite@plt>
  43b29c:	mov	x1, x19
  43b2a0:	add	x1, x20, x19
  43b2a4:	b	43a160 <argp_parse@@Base+0x28b4>
  43b2a8:	cbz	x26, 43b2c0 <argp_parse@@Base+0x3a14>
  43b2ac:	mov	w0, #0x20                  	// #32
  43b2b0:	mov	x1, x24
  43b2b4:	bl	4040c0 <fputc@plt>
  43b2b8:	subs	x26, x26, #0x1
  43b2bc:	b.ne	43b2ac <argp_parse@@Base+0x3a00>  // b.any
  43b2c0:	mov	w0, w27
  43b2c4:	mov	x1, x24
  43b2c8:	bl	4040c0 <fputc@plt>
  43b2cc:	mov	x1, x19
  43b2d0:	add	x1, x1, x25
  43b2d4:	bic	w8, w22, w22, asr #31
  43b2d8:	ldr	x9, [sp, #72]
  43b2dc:	mov	w8, w8
  43b2e0:	sub	x27, x9, x28
  43b2e4:	cmp	x27, x8
  43b2e8:	csel	x25, x8, x27, cc  // cc = lo, ul, last
  43b2ec:	mvn	x9, x1
  43b2f0:	cmp	x25, x9
  43b2f4:	b.cs	43b488 <argp_parse@@Base+0x3bdc>  // b.hs, b.nlast
  43b2f8:	mov	x19, x1
  43b2fc:	cbz	x24, 43b3a0 <argp_parse@@Base+0x3af4>
  43b300:	ldr	w26, [sp, #40]
  43b304:	cbnz	w20, 43b354 <argp_parse@@Base+0x3aa8>
  43b308:	cmp	x27, x8
  43b30c:	b.cs	43b354 <argp_parse@@Base+0x3aa8>  // b.hs, b.nlast
  43b310:	sxtw	x8, w22
  43b314:	cmp	w21, #0x30
  43b318:	sub	x20, x8, x27
  43b31c:	b.ne	43b33c <argp_parse@@Base+0x3a90>  // b.any
  43b320:	cbz	x20, 43b354 <argp_parse@@Base+0x3aa8>
  43b324:	mov	w0, #0x30                  	// #48
  43b328:	mov	x1, x24
  43b32c:	bl	4040c0 <fputc@plt>
  43b330:	subs	x20, x20, #0x1
  43b334:	b.ne	43b324 <argp_parse@@Base+0x3a78>  // b.any
  43b338:	b	43b354 <argp_parse@@Base+0x3aa8>
  43b33c:	cbz	x20, 43b354 <argp_parse@@Base+0x3aa8>
  43b340:	mov	w0, #0x20                  	// #32
  43b344:	mov	x1, x24
  43b348:	bl	4040c0 <fputc@plt>
  43b34c:	subs	x20, x20, #0x1
  43b350:	b.ne	43b340 <argp_parse@@Base+0x3a94>  // b.any
  43b354:	tbz	w26, #0, 43b38c <argp_parse@@Base+0x3ae0>
  43b358:	cbz	x27, 43b3a0 <argp_parse@@Base+0x3af4>
  43b35c:	bl	4044a0 <__ctype_toupper_loc@plt>
  43b360:	ldr	x8, [sp, #8]
  43b364:	mov	x27, x0
  43b368:	add	x20, x8, x28
  43b36c:	ldr	x8, [x27]
  43b370:	ldrb	w9, [x28], #1
  43b374:	mov	x1, x24
  43b378:	ldr	w0, [x8, x9, lsl #2]
  43b37c:	bl	4040c0 <fputc@plt>
  43b380:	adds	x20, x20, #0x1
  43b384:	b.cc	43b36c <argp_parse@@Base+0x3ac0>  // b.lo, b.ul, b.last
  43b388:	b	43b3a0 <argp_parse@@Base+0x3af4>
  43b38c:	mov	w2, #0x1                   	// #1
  43b390:	mov	x0, x28
  43b394:	mov	x1, x27
  43b398:	mov	x3, x24
  43b39c:	bl	4047e0 <fwrite@plt>
  43b3a0:	mov	x1, x19
  43b3a4:	add	x1, x25, x19
  43b3a8:	b	43a160 <argp_parse@@Base+0x28b4>
  43b3ac:	cbz	x22, 43b3c4 <argp_parse@@Base+0x3b18>
  43b3b0:	mov	w0, #0x20                  	// #32
  43b3b4:	mov	x1, x24
  43b3b8:	bl	4040c0 <fputc@plt>
  43b3bc:	subs	x22, x22, #0x1
  43b3c0:	b.ne	43b3b0 <argp_parse@@Base+0x3b04>  // b.any
  43b3c4:	mov	w0, w27
  43b3c8:	mov	x1, x24
  43b3cc:	bl	4040c0 <fputc@plt>
  43b3d0:	mov	x1, x19
  43b3d4:	add	x1, x1, x26
  43b3d8:	sxtw	x26, w25
  43b3dc:	cbz	x24, 43b41c <argp_parse@@Base+0x3b70>
  43b3e0:	lsl	x8, x25, #32
  43b3e4:	cbz	x8, 43b418 <argp_parse@@Base+0x3b6c>
  43b3e8:	mov	x22, x20
  43b3ec:	mov	x19, x1
  43b3f0:	mov	x20, xzr
  43b3f4:	mov	w0, #0x30                  	// #48
  43b3f8:	mov	x1, x24
  43b3fc:	bl	4040c0 <fputc@plt>
  43b400:	add	x20, x20, #0x1
  43b404:	cmp	x20, x26
  43b408:	b.cc	43b3f4 <argp_parse@@Base+0x3b48>  // b.lo, b.ul, b.last
  43b40c:	mov	x1, x19
  43b410:	mov	x20, x22
  43b414:	b	43b41c <argp_parse@@Base+0x3b70>
  43b418:	mov	x26, xzr
  43b41c:	mov	w22, wzr
  43b420:	mov	w8, wzr
  43b424:	add	x1, x1, x26
  43b428:	b	43b2d8 <argp_parse@@Base+0x3a2c>
  43b42c:	cbz	w14, 43b478 <argp_parse@@Base+0x3bcc>
  43b430:	mov	w13, #0x64                  	// #100
  43b434:	mov	w20, #0x6                   	// #6
  43b438:	mov	w12, #0x1                   	// #1
  43b43c:	madd	w10, w10, w13, w14
  43b440:	mov	w13, #0x4                   	// #4
  43b444:	b	43ac78 <argp_parse@@Base+0x33cc>
  43b448:	cbz	x21, 43b460 <argp_parse@@Base+0x3bb4>
  43b44c:	mov	w0, #0x20                  	// #32
  43b450:	mov	x1, x24
  43b454:	bl	4040c0 <fputc@plt>
  43b458:	subs	x21, x21, #0x1
  43b45c:	b.ne	43b44c <argp_parse@@Base+0x3ba0>  // b.any
  43b460:	ldrb	w0, [x23]
  43b464:	mov	x1, x24
  43b468:	bl	4040c0 <fputc@plt>
  43b46c:	mov	x1, x19
  43b470:	add	x1, x1, x20
  43b474:	b	43a160 <argp_parse@@Base+0x28b4>
  43b478:	mov	w13, wzr
  43b47c:	mov	w20, #0x3                   	// #3
  43b480:	mov	w12, #0x1                   	// #1
  43b484:	b	43ac78 <argp_parse@@Base+0x33cc>
  43b488:	mov	x1, xzr
  43b48c:	mov	x0, x1
  43b490:	add	sp, sp, #0x490
  43b494:	ldp	x20, x19, [sp, #80]
  43b498:	ldp	x22, x21, [sp, #64]
  43b49c:	ldp	x24, x23, [sp, #48]
  43b4a0:	ldp	x26, x25, [sp, #32]
  43b4a4:	ldp	x28, x27, [sp, #16]
  43b4a8:	ldp	x29, x30, [sp], #96
  43b4ac:	ret
  43b4b0:	stp	x29, x30, [sp, #-48]!
  43b4b4:	stp	x22, x21, [sp, #16]
  43b4b8:	stp	x20, x19, [sp, #32]
  43b4bc:	mov	x29, sp
  43b4c0:	cbz	x2, 43b504 <argp_parse@@Base+0x3c58>
  43b4c4:	mov	x20, x2
  43b4c8:	mov	x21, x1
  43b4cc:	mov	w22, w0
  43b4d0:	mov	x19, xzr
  43b4d4:	mov	w0, w22
  43b4d8:	mov	x1, x21
  43b4dc:	mov	x2, x20
  43b4e0:	bl	444e04 <argp_parse@@Base+0xd558>
  43b4e4:	cmn	x0, #0x1
  43b4e8:	b.eq	43b518 <argp_parse@@Base+0x3c6c>  // b.none
  43b4ec:	cbz	x0, 43b50c <argp_parse@@Base+0x3c60>
  43b4f0:	add	x19, x0, x19
  43b4f4:	subs	x20, x20, x0
  43b4f8:	add	x21, x21, x0
  43b4fc:	b.ne	43b4d4 <argp_parse@@Base+0x3c28>  // b.any
  43b500:	b	43b518 <argp_parse@@Base+0x3c6c>
  43b504:	mov	x19, xzr
  43b508:	b	43b518 <argp_parse@@Base+0x3c6c>
  43b50c:	bl	404a10 <__errno_location@plt>
  43b510:	mov	w8, #0x1c                  	// #28
  43b514:	str	w8, [x0]
  43b518:	mov	x0, x19
  43b51c:	ldp	x20, x19, [sp, #32]
  43b520:	ldp	x22, x21, [sp, #16]
  43b524:	ldp	x29, x30, [sp], #48
  43b528:	ret
  43b52c:	mov	x1, x0
  43b530:	mov	w0, wzr
  43b534:	b	4040e0 <clock_gettime@plt>
  43b538:	sub	sp, sp, #0x20
  43b53c:	mov	x1, sp
  43b540:	mov	w0, wzr
  43b544:	stp	x29, x30, [sp, #16]
  43b548:	add	x29, sp, #0x10
  43b54c:	bl	4040e0 <clock_gettime@plt>
  43b550:	ldp	x0, x1, [sp]
  43b554:	ldp	x29, x30, [sp, #16]
  43b558:	add	sp, sp, #0x20
  43b55c:	ret
  43b560:	ldr	x0, [x0, #16]
  43b564:	ret
  43b568:	ldr	x0, [x0, #24]
  43b56c:	ret
  43b570:	ldr	x0, [x0, #32]
  43b574:	ret
  43b578:	ldp	x8, x9, [x0]
  43b57c:	cmp	x8, x9
  43b580:	b.cs	43b5c0 <argp_parse@@Base+0x3d14>  // b.hs, b.nlast
  43b584:	mov	x0, xzr
  43b588:	b	43b598 <argp_parse@@Base+0x3cec>
  43b58c:	add	x8, x8, #0x10
  43b590:	cmp	x8, x9
  43b594:	b.cs	43b5c4 <argp_parse@@Base+0x3d18>  // b.hs, b.nlast
  43b598:	ldr	x10, [x8]
  43b59c:	cbz	x10, 43b58c <argp_parse@@Base+0x3ce0>
  43b5a0:	mov	x10, xzr
  43b5a4:	mov	x11, x8
  43b5a8:	ldr	x11, [x11, #8]
  43b5ac:	add	x10, x10, #0x1
  43b5b0:	cbnz	x11, 43b5a8 <argp_parse@@Base+0x3cfc>
  43b5b4:	cmp	x10, x0
  43b5b8:	csel	x0, x10, x0, hi  // hi = pmore
  43b5bc:	b	43b58c <argp_parse@@Base+0x3ce0>
  43b5c0:	mov	x0, xzr
  43b5c4:	ret
  43b5c8:	ldp	x9, x10, [x0]
  43b5cc:	cmp	x9, x10
  43b5d0:	b.cs	43b60c <argp_parse@@Base+0x3d60>  // b.hs, b.nlast
  43b5d4:	mov	x8, xzr
  43b5d8:	mov	x11, xzr
  43b5dc:	b	43b5ec <argp_parse@@Base+0x3d40>
  43b5e0:	add	x9, x9, #0x10
  43b5e4:	cmp	x9, x10
  43b5e8:	b.cs	43b614 <argp_parse@@Base+0x3d68>  // b.hs, b.nlast
  43b5ec:	ldr	x12, [x9]
  43b5f0:	cbz	x12, 43b5e0 <argp_parse@@Base+0x3d34>
  43b5f4:	mov	x12, x9
  43b5f8:	ldr	x12, [x12, #8]
  43b5fc:	add	x8, x8, #0x1
  43b600:	cbnz	x12, 43b5f8 <argp_parse@@Base+0x3d4c>
  43b604:	add	x11, x11, #0x1
  43b608:	b	43b5e0 <argp_parse@@Base+0x3d34>
  43b60c:	mov	x11, xzr
  43b610:	mov	x8, xzr
  43b614:	ldr	x9, [x0, #24]
  43b618:	cmp	x11, x9
  43b61c:	b.ne	43b634 <argp_parse@@Base+0x3d88>  // b.any
  43b620:	ldr	x9, [x0, #32]
  43b624:	cmp	x8, x9
  43b628:	b.ne	43b634 <argp_parse@@Base+0x3d88>  // b.any
  43b62c:	mov	w0, #0x1                   	// #1
  43b630:	ret
  43b634:	mov	w0, wzr
  43b638:	ret
  43b63c:	stp	x29, x30, [sp, #-48]!
  43b640:	stp	x22, x21, [sp, #16]
  43b644:	stp	x20, x19, [sp, #32]
  43b648:	ldp	x8, x9, [x0]
  43b64c:	ldp	x20, x3, [x0, #24]
  43b650:	ldr	x22, [x0, #16]
  43b654:	mov	x19, x1
  43b658:	cmp	x8, x9
  43b65c:	mov	x21, xzr
  43b660:	mov	x29, sp
  43b664:	b.cc	43b6f4 <argp_parse@@Base+0x3e48>  // b.lo, b.ul, b.last
  43b668:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43b66c:	add	x2, x2, #0x22a
  43b670:	mov	w1, #0x1                   	// #1
  43b674:	mov	x0, x19
  43b678:	bl	404650 <__fprintf_chk@plt>
  43b67c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43b680:	add	x2, x2, #0x242
  43b684:	mov	w1, #0x1                   	// #1
  43b688:	mov	x0, x19
  43b68c:	mov	x3, x22
  43b690:	bl	404650 <__fprintf_chk@plt>
  43b694:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  43b698:	ucvtf	d0, x20
  43b69c:	fmov	d1, x8
  43b6a0:	fmul	d0, d0, d1
  43b6a4:	ucvtf	d1, x22
  43b6a8:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43b6ac:	fdiv	d0, d0, d1
  43b6b0:	add	x2, x2, #0x25a
  43b6b4:	mov	w1, #0x1                   	// #1
  43b6b8:	mov	x0, x19
  43b6bc:	mov	x3, x20
  43b6c0:	bl	404650 <__fprintf_chk@plt>
  43b6c4:	mov	x0, x19
  43b6c8:	mov	x3, x21
  43b6cc:	ldp	x20, x19, [sp, #32]
  43b6d0:	ldp	x22, x21, [sp, #16]
  43b6d4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43b6d8:	add	x2, x2, #0x27b
  43b6dc:	mov	w1, #0x1                   	// #1
  43b6e0:	ldp	x29, x30, [sp], #48
  43b6e4:	b	404650 <__fprintf_chk@plt>
  43b6e8:	add	x8, x8, #0x10
  43b6ec:	cmp	x8, x9
  43b6f0:	b.cs	43b668 <argp_parse@@Base+0x3dbc>  // b.hs, b.nlast
  43b6f4:	ldr	x10, [x8]
  43b6f8:	cbz	x10, 43b6e8 <argp_parse@@Base+0x3e3c>
  43b6fc:	mov	x10, xzr
  43b700:	mov	x11, x8
  43b704:	ldr	x11, [x11, #8]
  43b708:	add	x10, x10, #0x1
  43b70c:	cbnz	x11, 43b704 <argp_parse@@Base+0x3e58>
  43b710:	cmp	x10, x21
  43b714:	csel	x21, x10, x21, hi  // hi = pmore
  43b718:	b	43b6e8 <argp_parse@@Base+0x3e3c>
  43b71c:	stp	x29, x30, [sp, #-48]!
  43b720:	stp	x20, x19, [sp, #32]
  43b724:	ldr	x8, [x0, #16]
  43b728:	ldr	x9, [x0, #48]
  43b72c:	mov	x19, x0
  43b730:	mov	x20, x1
  43b734:	mov	x0, x1
  43b738:	mov	x1, x8
  43b73c:	str	x21, [sp, #16]
  43b740:	mov	x29, sp
  43b744:	blr	x9
  43b748:	ldr	x8, [x19, #16]
  43b74c:	cmp	x0, x8
  43b750:	b.cs	43b7bc <argp_parse@@Base+0x3f10>  // b.hs, b.nlast
  43b754:	ldr	x8, [x19]
  43b758:	add	x21, x8, x0, lsl #4
  43b75c:	ldr	x1, [x21]
  43b760:	mov	x0, xzr
  43b764:	cbz	x1, 43b7ac <argp_parse@@Base+0x3f00>
  43b768:	cbz	x8, 43b7ac <argp_parse@@Base+0x3f00>
  43b76c:	cmp	x1, x20
  43b770:	b.eq	43b798 <argp_parse@@Base+0x3eec>  // b.none
  43b774:	ldr	x8, [x19, #56]
  43b778:	mov	x0, x20
  43b77c:	blr	x8
  43b780:	tbnz	w0, #0, 43b7a0 <argp_parse@@Base+0x3ef4>
  43b784:	ldr	x21, [x21, #8]
  43b788:	cbz	x21, 43b7a8 <argp_parse@@Base+0x3efc>
  43b78c:	ldr	x1, [x21]
  43b790:	cmp	x1, x20
  43b794:	b.ne	43b774 <argp_parse@@Base+0x3ec8>  // b.any
  43b798:	mov	x0, x20
  43b79c:	b	43b7ac <argp_parse@@Base+0x3f00>
  43b7a0:	ldr	x0, [x21]
  43b7a4:	b	43b7ac <argp_parse@@Base+0x3f00>
  43b7a8:	mov	x0, xzr
  43b7ac:	ldp	x20, x19, [sp, #32]
  43b7b0:	ldr	x21, [sp, #16]
  43b7b4:	ldp	x29, x30, [sp], #48
  43b7b8:	ret
  43b7bc:	bl	4045b0 <abort@plt>
  43b7c0:	stp	x29, x30, [sp, #-16]!
  43b7c4:	ldr	x8, [x0, #32]
  43b7c8:	mov	x29, sp
  43b7cc:	cbz	x8, 43b7ec <argp_parse@@Base+0x3f40>
  43b7d0:	ldp	x8, x9, [x0]
  43b7d4:	cmp	x8, x9
  43b7d8:	b.cs	43b7f8 <argp_parse@@Base+0x3f4c>  // b.hs, b.nlast
  43b7dc:	ldr	x0, [x8], #16
  43b7e0:	cbz	x0, 43b7d4 <argp_parse@@Base+0x3f28>
  43b7e4:	ldp	x29, x30, [sp], #16
  43b7e8:	ret
  43b7ec:	mov	x0, xzr
  43b7f0:	ldp	x29, x30, [sp], #16
  43b7f4:	ret
  43b7f8:	bl	4045b0 <abort@plt>
  43b7fc:	stp	x29, x30, [sp, #-32]!
  43b800:	stp	x20, x19, [sp, #16]
  43b804:	ldr	x8, [x0, #16]
  43b808:	ldr	x9, [x0, #48]
  43b80c:	mov	x19, x0
  43b810:	mov	x20, x1
  43b814:	mov	x0, x1
  43b818:	mov	x1, x8
  43b81c:	mov	x29, sp
  43b820:	blr	x9
  43b824:	ldr	x8, [x19, #16]
  43b828:	cmp	x0, x8
  43b82c:	b.cs	43b888 <argp_parse@@Base+0x3fdc>  // b.hs, b.nlast
  43b830:	ldr	x8, [x19]
  43b834:	add	x9, x8, x0, lsl #4
  43b838:	ldp	x10, x9, [x9]
  43b83c:	cmp	x10, x20
  43b840:	b.eq	43b84c <argp_parse@@Base+0x3fa0>  // b.none
  43b844:	cbnz	x9, 43b838 <argp_parse@@Base+0x3f8c>
  43b848:	b	43b858 <argp_parse@@Base+0x3fac>
  43b84c:	cbz	x9, 43b858 <argp_parse@@Base+0x3fac>
  43b850:	ldr	x0, [x9]
  43b854:	b	43b87c <argp_parse@@Base+0x3fd0>
  43b858:	ldr	x9, [x19, #8]
  43b85c:	add	x8, x8, x0, lsl #4
  43b860:	add	x8, x8, #0x10
  43b864:	cmp	x8, x9
  43b868:	b.cs	43b878 <argp_parse@@Base+0x3fcc>  // b.hs, b.nlast
  43b86c:	ldr	x0, [x8], #16
  43b870:	cbz	x0, 43b864 <argp_parse@@Base+0x3fb8>
  43b874:	b	43b87c <argp_parse@@Base+0x3fd0>
  43b878:	mov	x0, xzr
  43b87c:	ldp	x20, x19, [sp, #16]
  43b880:	ldp	x29, x30, [sp], #32
  43b884:	ret
  43b888:	bl	4045b0 <abort@plt>
  43b88c:	ldp	x9, x10, [x0]
  43b890:	cmp	x9, x10
  43b894:	b.cs	43b8f0 <argp_parse@@Base+0x4044>  // b.hs, b.nlast
  43b898:	mov	x11, xzr
  43b89c:	ldr	x8, [x9]
  43b8a0:	cbz	x8, 43b8d4 <argp_parse@@Base+0x4028>
  43b8a4:	cbz	x9, 43b8d4 <argp_parse@@Base+0x4028>
  43b8a8:	mov	x10, x9
  43b8ac:	cmp	x11, x2
  43b8b0:	b.cs	43b8f8 <argp_parse@@Base+0x404c>  // b.hs, b.nlast
  43b8b4:	ldr	x8, [x10]
  43b8b8:	str	x8, [x1, x11, lsl #3]
  43b8bc:	ldr	x10, [x10, #8]
  43b8c0:	add	x8, x11, #0x1
  43b8c4:	mov	x11, x8
  43b8c8:	cbnz	x10, 43b8ac <argp_parse@@Base+0x4000>
  43b8cc:	ldr	x10, [x0, #8]
  43b8d0:	b	43b8d8 <argp_parse@@Base+0x402c>
  43b8d4:	mov	x8, x11
  43b8d8:	add	x9, x9, #0x10
  43b8dc:	cmp	x9, x10
  43b8e0:	mov	x11, x8
  43b8e4:	b.cc	43b89c <argp_parse@@Base+0x3ff0>  // b.lo, b.ul, b.last
  43b8e8:	mov	x0, x8
  43b8ec:	ret
  43b8f0:	mov	x0, xzr
  43b8f4:	ret
  43b8f8:	mov	x0, x11
  43b8fc:	ret
  43b900:	stp	x29, x30, [sp, #-64]!
  43b904:	stp	x24, x23, [sp, #16]
  43b908:	stp	x22, x21, [sp, #32]
  43b90c:	stp	x20, x19, [sp, #48]
  43b910:	ldp	x23, x8, [x0]
  43b914:	mov	x29, sp
  43b918:	cmp	x23, x8
  43b91c:	b.cs	43b934 <argp_parse@@Base+0x4088>  // b.hs, b.nlast
  43b920:	mov	x19, x2
  43b924:	mov	x20, x0
  43b928:	mov	x21, x1
  43b92c:	mov	x22, xzr
  43b930:	b	43b94c <argp_parse@@Base+0x40a0>
  43b934:	mov	x22, xzr
  43b938:	b	43b984 <argp_parse@@Base+0x40d8>
  43b93c:	ldr	x8, [x20, #8]
  43b940:	add	x23, x23, #0x10
  43b944:	cmp	x23, x8
  43b948:	b.cs	43b984 <argp_parse@@Base+0x40d8>  // b.hs, b.nlast
  43b94c:	ldr	x0, [x23]
  43b950:	cbz	x0, 43b940 <argp_parse@@Base+0x4094>
  43b954:	cbz	x23, 43b940 <argp_parse@@Base+0x4094>
  43b958:	mov	x1, x19
  43b95c:	blr	x21
  43b960:	tbz	w0, #0, 43b984 <argp_parse@@Base+0x40d8>
  43b964:	mov	x24, x23
  43b968:	ldr	x24, [x24, #8]
  43b96c:	add	x22, x22, #0x1
  43b970:	cbz	x24, 43b93c <argp_parse@@Base+0x4090>
  43b974:	ldr	x0, [x24]
  43b978:	mov	x1, x19
  43b97c:	blr	x21
  43b980:	tbnz	w0, #0, 43b968 <argp_parse@@Base+0x40bc>
  43b984:	mov	x0, x22
  43b988:	ldp	x20, x19, [sp, #48]
  43b98c:	ldp	x22, x21, [sp, #32]
  43b990:	ldp	x24, x23, [sp, #16]
  43b994:	ldp	x29, x30, [sp], #64
  43b998:	ret
  43b99c:	ldrb	w9, [x0]
  43b9a0:	cbz	w9, 43b9d0 <argp_parse@@Base+0x4124>
  43b9a4:	mov	x8, x0
  43b9a8:	mov	x0, xzr
  43b9ac:	add	x8, x8, #0x1
  43b9b0:	lsl	x10, x0, #5
  43b9b4:	sub	x10, x10, x0
  43b9b8:	add	x10, x10, w9, uxtb
  43b9bc:	ldrb	w9, [x8], #1
  43b9c0:	udiv	x11, x10, x1
  43b9c4:	msub	x0, x11, x1, x10
  43b9c8:	cbnz	w9, 43b9b0 <argp_parse@@Base+0x4104>
  43b9cc:	ret
  43b9d0:	mov	x0, xzr
  43b9d4:	ret
  43b9d8:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43b9dc:	add	x8, x8, #0x294
  43b9e0:	ldr	w9, [x8, #16]
  43b9e4:	ldr	q0, [x8]
  43b9e8:	str	w9, [x0, #16]
  43b9ec:	str	q0, [x0]
  43b9f0:	ret
  43b9f4:	stp	x29, x30, [sp, #-64]!
  43b9f8:	adrp	x8, 43b000 <argp_parse@@Base+0x3754>
  43b9fc:	add	x8, x8, #0xbdc
  43ba00:	cmp	x2, #0x0
  43ba04:	adrp	x9, 43b000 <argp_parse@@Base+0x3754>
  43ba08:	stp	x24, x23, [sp, #16]
  43ba0c:	stp	x22, x21, [sp, #32]
  43ba10:	mov	x21, x0
  43ba14:	add	x9, x9, #0xbec
  43ba18:	csel	x23, x8, x2, eq  // eq = none
  43ba1c:	cmp	x3, #0x0
  43ba20:	mov	w0, #0x50                  	// #80
  43ba24:	stp	x20, x19, [sp, #48]
  43ba28:	mov	x29, sp
  43ba2c:	mov	x19, x4
  43ba30:	mov	x22, x1
  43ba34:	csel	x24, x9, x3, eq  // eq = none
  43ba38:	bl	404250 <malloc@plt>
  43ba3c:	mov	x20, x0
  43ba40:	cbz	x0, 43bbc4 <argp_parse@@Base+0x4318>
  43ba44:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ba48:	add	x9, x9, #0x294
  43ba4c:	cmp	x22, #0x0
  43ba50:	csel	x8, x9, x22, eq  // eq = none
  43ba54:	cmp	x8, x9
  43ba58:	str	x8, [x20, #40]
  43ba5c:	b.eq	43bae0 <argp_parse@@Base+0x4234>  // b.none
  43ba60:	ldr	s0, [x8, #8]
  43ba64:	mov	w9, #0xcccd                	// #52429
  43ba68:	movk	w9, #0x3dcc, lsl #16
  43ba6c:	fmov	s1, w9
  43ba70:	fcmp	s0, s1
  43ba74:	b.le	43bbb8 <argp_parse@@Base+0x430c>
  43ba78:	mov	w9, #0x6666                	// #26214
  43ba7c:	movk	w9, #0x3f66, lsl #16
  43ba80:	fmov	s1, w9
  43ba84:	fcmp	s0, s1
  43ba88:	b.pl	43bbb8 <argp_parse@@Base+0x430c>  // b.nfrst
  43ba8c:	ldr	s1, [x8, #12]
  43ba90:	mov	w9, #0xcccd                	// #52429
  43ba94:	movk	w9, #0x3f8c, lsl #16
  43ba98:	fmov	s2, w9
  43ba9c:	fcmp	s1, s2
  43baa0:	b.le	43bbb8 <argp_parse@@Base+0x430c>
  43baa4:	ldr	s1, [x8]
  43baa8:	fcmp	s1, #0.0
  43baac:	b.lt	43bbb8 <argp_parse@@Base+0x430c>  // b.tstop
  43bab0:	mov	w9, #0xcccd                	// #52429
  43bab4:	movk	w9, #0x3dcc, lsl #16
  43bab8:	fmov	s2, w9
  43babc:	fadd	s1, s1, s2
  43bac0:	fcmp	s1, s0
  43bac4:	b.pl	43bbb8 <argp_parse@@Base+0x430c>  // b.nfrst
  43bac8:	ldr	s0, [x8, #4]
  43bacc:	fmov	s2, #1.000000000000000000e+00
  43bad0:	fcmp	s0, s2
  43bad4:	b.hi	43bbb8 <argp_parse@@Base+0x430c>  // b.pmore
  43bad8:	fcmp	s1, s0
  43badc:	b.pl	43bbb8 <argp_parse@@Base+0x430c>  // b.nfrst
  43bae0:	ldrb	w9, [x8, #16]
  43bae4:	cbnz	w9, 43bb08 <argp_parse@@Base+0x425c>
  43bae8:	ldr	s0, [x8, #8]
  43baec:	ucvtf	s1, x21
  43baf0:	mov	w8, #0x5f800000            	// #1602224128
  43baf4:	fdiv	s0, s1, s0
  43baf8:	fmov	s1, w8
  43bafc:	fcmp	s0, s1
  43bb00:	b.ge	43bbb8 <argp_parse@@Base+0x430c>  // b.tcont
  43bb04:	fcvtzu	x21, s0
  43bb08:	cmp	x21, #0xa
  43bb0c:	mov	w8, #0xa                   	// #10
  43bb10:	csel	x8, x21, x8, hi  // hi = pmore
  43bb14:	orr	x21, x8, #0x1
  43bb18:	cmn	x21, #0x1
  43bb1c:	b.eq	43bbb8 <argp_parse@@Base+0x430c>  // b.none
  43bb20:	cmp	x21, #0xa
  43bb24:	b.cc	43bb5c <argp_parse@@Base+0x42b0>  // b.lo, b.ul, b.last
  43bb28:	mov	w9, #0xc                   	// #12
  43bb2c:	mov	w10, #0x9                   	// #9
  43bb30:	mov	w8, #0x3                   	// #3
  43bb34:	udiv	x11, x21, x8
  43bb38:	msub	x11, x11, x8, x21
  43bb3c:	cbz	x11, 43bb60 <argp_parse@@Base+0x42b4>
  43bb40:	add	x10, x10, x9
  43bb44:	add	x10, x10, #0x4
  43bb48:	add	x8, x8, #0x2
  43bb4c:	cmp	x10, x21
  43bb50:	add	x9, x9, #0x8
  43bb54:	b.cc	43bb34 <argp_parse@@Base+0x4288>  // b.lo, b.ul, b.last
  43bb58:	b	43bb60 <argp_parse@@Base+0x42b4>
  43bb5c:	mov	w8, #0x3                   	// #3
  43bb60:	udiv	x9, x21, x8
  43bb64:	msub	x8, x9, x8, x21
  43bb68:	cbnz	x8, 43bb7c <argp_parse@@Base+0x42d0>
  43bb6c:	add	x21, x21, #0x2
  43bb70:	cmn	x21, #0x1
  43bb74:	b.ne	43bb20 <argp_parse@@Base+0x4274>  // b.any
  43bb78:	b	43bbb8 <argp_parse@@Base+0x430c>
  43bb7c:	lsr	x8, x21, #60
  43bb80:	cbnz	x8, 43bbb8 <argp_parse@@Base+0x430c>
  43bb84:	str	x21, [x20, #16]
  43bb88:	cbz	x21, 43bbb8 <argp_parse@@Base+0x430c>
  43bb8c:	mov	w1, #0x10                  	// #16
  43bb90:	mov	x0, x21
  43bb94:	bl	404410 <calloc@plt>
  43bb98:	str	x0, [x20]
  43bb9c:	cbz	x0, 43bbb8 <argp_parse@@Base+0x430c>
  43bba0:	add	x8, x0, x21, lsl #4
  43bba4:	stp	xzr, xzr, [x20, #24]
  43bba8:	stp	x23, x24, [x20, #48]
  43bbac:	str	x8, [x20, #8]
  43bbb0:	stp	x19, xzr, [x20, #64]
  43bbb4:	b	43bbc4 <argp_parse@@Base+0x4318>
  43bbb8:	mov	x0, x20
  43bbbc:	bl	404700 <free@plt>
  43bbc0:	mov	x20, xzr
  43bbc4:	mov	x0, x20
  43bbc8:	ldp	x20, x19, [sp, #48]
  43bbcc:	ldp	x22, x21, [sp, #32]
  43bbd0:	ldp	x24, x23, [sp, #16]
  43bbd4:	ldp	x29, x30, [sp], #64
  43bbd8:	ret
  43bbdc:	ror	x8, x0, #3
  43bbe0:	udiv	x9, x8, x1
  43bbe4:	msub	x0, x9, x1, x8
  43bbe8:	ret
  43bbec:	cmp	x0, x1
  43bbf0:	cset	w0, eq  // eq = none
  43bbf4:	ret
  43bbf8:	stp	x29, x30, [sp, #-48]!
  43bbfc:	str	x21, [sp, #16]
  43bc00:	stp	x20, x19, [sp, #32]
  43bc04:	ldp	x20, x8, [x0]
  43bc08:	mov	x19, x0
  43bc0c:	mov	x29, sp
  43bc10:	b	43bc20 <argp_parse@@Base+0x4374>
  43bc14:	stp	xzr, xzr, [x20]
  43bc18:	ldr	x8, [x19, #8]
  43bc1c:	add	x20, x20, #0x10
  43bc20:	cmp	x20, x8
  43bc24:	b.cs	43bc8c <argp_parse@@Base+0x43e0>  // b.hs, b.nlast
  43bc28:	ldr	x9, [x20]
  43bc2c:	cbz	x9, 43bc1c <argp_parse@@Base+0x4370>
  43bc30:	ldr	x8, [x19, #64]
  43bc34:	ldr	x21, [x20, #8]
  43bc38:	cmp	x8, #0x0
  43bc3c:	cset	w9, ne  // ne = any
  43bc40:	cbnz	x21, 43bc78 <argp_parse@@Base+0x43cc>
  43bc44:	cbz	w9, 43bc14 <argp_parse@@Base+0x4368>
  43bc48:	ldr	x0, [x20]
  43bc4c:	blr	x8
  43bc50:	b	43bc14 <argp_parse@@Base+0x4368>
  43bc54:	str	xzr, [x21]
  43bc58:	ldr	x9, [x19, #72]
  43bc5c:	ldr	x10, [x21, #8]
  43bc60:	cmp	x8, #0x0
  43bc64:	str	x9, [x21, #8]
  43bc68:	str	x21, [x19, #72]
  43bc6c:	cset	w9, ne  // ne = any
  43bc70:	mov	x21, x10
  43bc74:	cbz	x10, 43bc44 <argp_parse@@Base+0x4398>
  43bc78:	tbz	w9, #0, 43bc54 <argp_parse@@Base+0x43a8>
  43bc7c:	ldr	x0, [x21]
  43bc80:	blr	x8
  43bc84:	ldr	x8, [x19, #64]
  43bc88:	b	43bc54 <argp_parse@@Base+0x43a8>
  43bc8c:	stp	xzr, xzr, [x19, #24]
  43bc90:	ldp	x20, x19, [sp, #32]
  43bc94:	ldr	x21, [sp, #16]
  43bc98:	ldp	x29, x30, [sp], #48
  43bc9c:	ret
  43bca0:	stp	x29, x30, [sp, #-48]!
  43bca4:	stp	x20, x19, [sp, #32]
  43bca8:	ldr	x8, [x0, #64]
  43bcac:	mov	x19, x0
  43bcb0:	str	x21, [sp, #16]
  43bcb4:	mov	x29, sp
  43bcb8:	cbz	x8, 43bd10 <argp_parse@@Base+0x4464>
  43bcbc:	ldr	x8, [x19, #32]
  43bcc0:	cbz	x8, 43bd10 <argp_parse@@Base+0x4464>
  43bcc4:	ldp	x20, x8, [x19]
  43bcc8:	b	43bcd4 <argp_parse@@Base+0x4428>
  43bccc:	ldr	x8, [x19, #8]
  43bcd0:	add	x20, x20, #0x10
  43bcd4:	cmp	x20, x8
  43bcd8:	b.cs	43bd10 <argp_parse@@Base+0x4464>  // b.hs, b.nlast
  43bcdc:	ldr	x0, [x20]
  43bce0:	cbz	x0, 43bcd0 <argp_parse@@Base+0x4424>
  43bce4:	cbz	x20, 43bcd0 <argp_parse@@Base+0x4424>
  43bce8:	ldr	x8, [x19, #64]
  43bcec:	blr	x8
  43bcf0:	ldr	x21, [x20, #8]
  43bcf4:	cbz	x21, 43bccc <argp_parse@@Base+0x4420>
  43bcf8:	ldr	x0, [x21]
  43bcfc:	ldr	x8, [x19, #64]
  43bd00:	blr	x8
  43bd04:	ldr	x21, [x21, #8]
  43bd08:	cbnz	x21, 43bcf8 <argp_parse@@Base+0x444c>
  43bd0c:	b	43bccc <argp_parse@@Base+0x4420>
  43bd10:	ldp	x20, x8, [x19]
  43bd14:	b	43bd1c <argp_parse@@Base+0x4470>
  43bd18:	add	x20, x20, #0x10
  43bd1c:	cmp	x20, x8
  43bd20:	b.cs	43bd44 <argp_parse@@Base+0x4498>  // b.hs, b.nlast
  43bd24:	ldr	x0, [x20, #8]
  43bd28:	cbz	x0, 43bd18 <argp_parse@@Base+0x446c>
  43bd2c:	ldr	x21, [x0, #8]
  43bd30:	bl	404700 <free@plt>
  43bd34:	mov	x0, x21
  43bd38:	cbnz	x21, 43bd2c <argp_parse@@Base+0x4480>
  43bd3c:	ldr	x8, [x19, #8]
  43bd40:	b	43bd18 <argp_parse@@Base+0x446c>
  43bd44:	ldr	x0, [x19, #72]
  43bd48:	cbz	x0, 43bd5c <argp_parse@@Base+0x44b0>
  43bd4c:	ldr	x20, [x0, #8]
  43bd50:	bl	404700 <free@plt>
  43bd54:	mov	x0, x20
  43bd58:	cbnz	x20, 43bd4c <argp_parse@@Base+0x44a0>
  43bd5c:	ldr	x0, [x19]
  43bd60:	bl	404700 <free@plt>
  43bd64:	mov	x0, x19
  43bd68:	ldp	x20, x19, [sp, #32]
  43bd6c:	ldr	x21, [sp, #16]
  43bd70:	ldp	x29, x30, [sp], #48
  43bd74:	b	404700 <free@plt>
  43bd78:	sub	sp, sp, #0x90
  43bd7c:	stp	x29, x30, [sp, #80]
  43bd80:	stp	x24, x23, [sp, #96]
  43bd84:	stp	x22, x21, [sp, #112]
  43bd88:	stp	x20, x19, [sp, #128]
  43bd8c:	ldr	x21, [x0, #40]
  43bd90:	mov	x19, x0
  43bd94:	add	x29, sp, #0x50
  43bd98:	ldrb	w8, [x21, #16]
  43bd9c:	cbnz	w8, 43bdc0 <argp_parse@@Base+0x4514>
  43bda0:	ldr	s0, [x21, #8]
  43bda4:	ucvtf	s1, x1
  43bda8:	mov	w8, #0x5f800000            	// #1602224128
  43bdac:	fdiv	s0, s1, s0
  43bdb0:	fmov	s1, w8
  43bdb4:	fcmp	s0, s1
  43bdb8:	b.ge	43be44 <argp_parse@@Base+0x4598>  // b.tcont
  43bdbc:	fcvtzu	x1, s0
  43bdc0:	cmp	x1, #0xa
  43bdc4:	mov	w8, #0xa                   	// #10
  43bdc8:	csel	x8, x1, x8, hi  // hi = pmore
  43bdcc:	orr	x20, x8, #0x1
  43bdd0:	cmn	x20, #0x1
  43bdd4:	b.eq	43be44 <argp_parse@@Base+0x4598>  // b.none
  43bdd8:	cmp	x20, #0xa
  43bddc:	b.cc	43be14 <argp_parse@@Base+0x4568>  // b.lo, b.ul, b.last
  43bde0:	mov	w9, #0xc                   	// #12
  43bde4:	mov	w10, #0x9                   	// #9
  43bde8:	mov	w8, #0x3                   	// #3
  43bdec:	udiv	x11, x20, x8
  43bdf0:	msub	x11, x11, x8, x20
  43bdf4:	cbz	x11, 43be18 <argp_parse@@Base+0x456c>
  43bdf8:	add	x10, x10, x9
  43bdfc:	add	x10, x10, #0x4
  43be00:	add	x8, x8, #0x2
  43be04:	cmp	x10, x20
  43be08:	add	x9, x9, #0x8
  43be0c:	b.cc	43bdec <argp_parse@@Base+0x4540>  // b.lo, b.ul, b.last
  43be10:	b	43be18 <argp_parse@@Base+0x456c>
  43be14:	mov	w8, #0x3                   	// #3
  43be18:	udiv	x9, x20, x8
  43be1c:	msub	x8, x9, x8, x20
  43be20:	cbnz	x8, 43be34 <argp_parse@@Base+0x4588>
  43be24:	add	x20, x20, #0x2
  43be28:	cmn	x20, #0x1
  43be2c:	b.ne	43bdd8 <argp_parse@@Base+0x452c>  // b.any
  43be30:	b	43be44 <argp_parse@@Base+0x4598>
  43be34:	sub	x8, x20, #0x1
  43be38:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  43be3c:	cmp	x8, x9
  43be40:	b.ls	43be60 <argp_parse@@Base+0x45b4>  // b.plast
  43be44:	mov	w0, wzr
  43be48:	ldp	x20, x19, [sp, #128]
  43be4c:	ldp	x22, x21, [sp, #112]
  43be50:	ldp	x24, x23, [sp, #96]
  43be54:	ldp	x29, x30, [sp, #80]
  43be58:	add	sp, sp, #0x90
  43be5c:	ret
  43be60:	ldr	x8, [x19, #16]
  43be64:	cmp	x20, x8
  43be68:	b.ne	43be74 <argp_parse@@Base+0x45c8>  // b.any
  43be6c:	mov	w0, #0x1                   	// #1
  43be70:	b	43be48 <argp_parse@@Base+0x459c>
  43be74:	mov	w1, #0x10                  	// #16
  43be78:	mov	x0, x20
  43be7c:	bl	404410 <calloc@plt>
  43be80:	str	x0, [sp]
  43be84:	cbz	x0, 43be48 <argp_parse@@Base+0x459c>
  43be88:	add	x8, x0, x20, lsl #4
  43be8c:	stp	xzr, xzr, [sp, #24]
  43be90:	stp	x8, x20, [sp, #8]
  43be94:	str	x21, [sp, #40]
  43be98:	ldr	q0, [x19, #48]
  43be9c:	mov	x0, sp
  43bea0:	mov	x1, x19
  43bea4:	mov	w2, wzr
  43bea8:	str	q0, [sp, #48]
  43beac:	ldr	q0, [x19, #64]
  43beb0:	str	q0, [sp, #64]
  43beb4:	bl	43bfa8 <argp_parse@@Base+0x46fc>
  43beb8:	tbz	w0, #0, 43bee4 <argp_parse@@Base+0x4638>
  43bebc:	ldr	x0, [x19]
  43bec0:	bl	404700 <free@plt>
  43bec4:	ldr	q0, [sp]
  43bec8:	mov	w0, #0x1                   	// #1
  43becc:	str	q0, [x19]
  43bed0:	ldr	q0, [sp, #16]
  43bed4:	str	q0, [x19, #16]
  43bed8:	ldr	x8, [sp, #72]
  43bedc:	str	x8, [x19, #72]
  43bee0:	b	43be48 <argp_parse@@Base+0x459c>
  43bee4:	ldr	x8, [sp, #72]
  43bee8:	add	x21, x19, #0x48
  43beec:	str	x8, [x21]
  43bef0:	ldp	x22, x23, [sp]
  43bef4:	b	43bf00 <argp_parse@@Base+0x4654>
  43bef8:	str	xzr, [x22, #8]
  43befc:	add	x22, x22, #0x10
  43bf00:	cmp	x22, x23
  43bf04:	b.cs	43bf84 <argp_parse@@Base+0x46d8>  // b.hs, b.nlast
  43bf08:	ldr	x8, [x22]
  43bf0c:	cbz	x8, 43befc <argp_parse@@Base+0x4650>
  43bf10:	ldr	x24, [x22, #8]
  43bf14:	cbz	x24, 43bef8 <argp_parse@@Base+0x464c>
  43bf18:	ldr	x1, [x19, #16]
  43bf1c:	b	43bf4c <argp_parse@@Base+0x46a0>
  43bf20:	str	x20, [x9]
  43bf24:	ldr	x9, [x19, #24]
  43bf28:	add	x9, x9, #0x1
  43bf2c:	str	x9, [x19, #24]
  43bf30:	mov	x9, x21
  43bf34:	str	xzr, [x24]
  43bf38:	ldr	x10, [x9]
  43bf3c:	str	x10, [x24, #8]
  43bf40:	str	x24, [x9]
  43bf44:	mov	x24, x8
  43bf48:	cbz	x8, 43bef8 <argp_parse@@Base+0x464c>
  43bf4c:	ldr	x20, [x24]
  43bf50:	ldr	x8, [x19, #48]
  43bf54:	mov	x0, x20
  43bf58:	blr	x8
  43bf5c:	ldr	x1, [x19, #16]
  43bf60:	cmp	x0, x1
  43bf64:	b.cs	43bfa4 <argp_parse@@Base+0x46f8>  // b.hs, b.nlast
  43bf68:	ldr	x8, [x19]
  43bf6c:	add	x9, x8, x0, lsl #4
  43bf70:	ldr	x10, [x9]
  43bf74:	ldr	x8, [x24, #8]
  43bf78:	cbz	x10, 43bf20 <argp_parse@@Base+0x4674>
  43bf7c:	add	x9, x9, #0x8
  43bf80:	b	43bf38 <argp_parse@@Base+0x468c>
  43bf84:	mov	x1, sp
  43bf88:	mov	x0, x19
  43bf8c:	mov	w2, wzr
  43bf90:	bl	43bfa8 <argp_parse@@Base+0x46fc>
  43bf94:	tbz	w0, #0, 43bfa4 <argp_parse@@Base+0x46f8>
  43bf98:	ldr	x0, [sp]
  43bf9c:	bl	404700 <free@plt>
  43bfa0:	b	43be44 <argp_parse@@Base+0x4598>
  43bfa4:	bl	4045b0 <abort@plt>
  43bfa8:	stp	x29, x30, [sp, #-80]!
  43bfac:	stp	x26, x25, [sp, #16]
  43bfb0:	stp	x24, x23, [sp, #32]
  43bfb4:	stp	x22, x21, [sp, #48]
  43bfb8:	stp	x20, x19, [sp, #64]
  43bfbc:	ldp	x24, x8, [x1]
  43bfc0:	mov	x29, sp
  43bfc4:	cmp	x24, x8
  43bfc8:	b.cs	43c100 <argp_parse@@Base+0x4854>  // b.hs, b.nlast
  43bfcc:	mov	w19, w2
  43bfd0:	mov	x20, x1
  43bfd4:	mov	x21, x0
  43bfd8:	add	x25, x0, #0x48
  43bfdc:	b	43c010 <argp_parse@@Base+0x4764>
  43bfe0:	str	x22, [x8]
  43bfe4:	ldr	x8, [x21, #24]
  43bfe8:	add	x8, x8, #0x1
  43bfec:	str	x8, [x21, #24]
  43bff0:	str	xzr, [x24]
  43bff4:	ldr	x8, [x20, #24]
  43bff8:	sub	x8, x8, #0x1
  43bffc:	str	x8, [x20, #24]
  43c000:	ldr	x8, [x20, #8]
  43c004:	add	x24, x24, #0x10
  43c008:	cmp	x24, x8
  43c00c:	b.cs	43c100 <argp_parse@@Base+0x4854>  // b.hs, b.nlast
  43c010:	ldr	x22, [x24]
  43c014:	cbz	x22, 43c000 <argp_parse@@Base+0x4754>
  43c018:	ldr	x23, [x24, #8]
  43c01c:	cbz	x23, 43c090 <argp_parse@@Base+0x47e4>
  43c020:	ldr	x1, [x21, #16]
  43c024:	b	43c054 <argp_parse@@Base+0x47a8>
  43c028:	str	x22, [x9]
  43c02c:	ldr	x9, [x21, #24]
  43c030:	add	x9, x9, #0x1
  43c034:	str	x9, [x21, #24]
  43c038:	mov	x9, x25
  43c03c:	str	xzr, [x23]
  43c040:	ldr	x10, [x9]
  43c044:	str	x10, [x23, #8]
  43c048:	str	x23, [x9]
  43c04c:	mov	x23, x8
  43c050:	cbz	x8, 43c08c <argp_parse@@Base+0x47e0>
  43c054:	ldr	x22, [x23]
  43c058:	ldr	x8, [x21, #48]
  43c05c:	mov	x0, x22
  43c060:	blr	x8
  43c064:	ldr	x1, [x21, #16]
  43c068:	cmp	x0, x1
  43c06c:	b.cs	43c11c <argp_parse@@Base+0x4870>  // b.hs, b.nlast
  43c070:	ldr	x8, [x21]
  43c074:	add	x9, x8, x0, lsl #4
  43c078:	ldr	x10, [x9]
  43c07c:	ldr	x8, [x23, #8]
  43c080:	cbz	x10, 43c028 <argp_parse@@Base+0x477c>
  43c084:	add	x9, x9, #0x8
  43c088:	b	43c040 <argp_parse@@Base+0x4794>
  43c08c:	ldr	x22, [x24]
  43c090:	str	xzr, [x24, #8]
  43c094:	tbnz	w19, #0, 43c000 <argp_parse@@Base+0x4754>
  43c098:	ldr	x8, [x21, #48]
  43c09c:	ldr	x1, [x21, #16]
  43c0a0:	mov	x0, x22
  43c0a4:	blr	x8
  43c0a8:	ldr	x8, [x21, #16]
  43c0ac:	cmp	x0, x8
  43c0b0:	b.cs	43c11c <argp_parse@@Base+0x4870>  // b.hs, b.nlast
  43c0b4:	ldr	x26, [x21]
  43c0b8:	mov	x23, x0
  43c0bc:	add	x8, x26, x0, lsl #4
  43c0c0:	ldr	x9, [x8]
  43c0c4:	cbz	x9, 43bfe0 <argp_parse@@Base+0x4734>
  43c0c8:	ldr	x0, [x25]
  43c0cc:	cbz	x0, 43c0dc <argp_parse@@Base+0x4830>
  43c0d0:	ldr	x8, [x0, #8]
  43c0d4:	str	x8, [x25]
  43c0d8:	b	43c0e8 <argp_parse@@Base+0x483c>
  43c0dc:	mov	w0, #0x10                  	// #16
  43c0e0:	bl	404250 <malloc@plt>
  43c0e4:	cbz	x0, 43c104 <argp_parse@@Base+0x4858>
  43c0e8:	str	x22, [x0]
  43c0ec:	add	x8, x26, x23, lsl #4
  43c0f0:	ldr	x9, [x8, #8]
  43c0f4:	str	x9, [x0, #8]
  43c0f8:	str	x0, [x8, #8]
  43c0fc:	b	43bff0 <argp_parse@@Base+0x4744>
  43c100:	mov	w0, #0x1                   	// #1
  43c104:	ldp	x20, x19, [sp, #64]
  43c108:	ldp	x22, x21, [sp, #48]
  43c10c:	ldp	x24, x23, [sp, #32]
  43c110:	ldp	x26, x25, [sp, #16]
  43c114:	ldp	x29, x30, [sp], #80
  43c118:	ret
  43c11c:	bl	4045b0 <abort@plt>
  43c120:	stp	x29, x30, [sp, #-80]!
  43c124:	str	x25, [sp, #16]
  43c128:	stp	x24, x23, [sp, #32]
  43c12c:	stp	x22, x21, [sp, #48]
  43c130:	stp	x20, x19, [sp, #64]
  43c134:	mov	x29, sp
  43c138:	cbz	x1, 43c404 <argp_parse@@Base+0x4b58>
  43c13c:	mov	x20, x1
  43c140:	ldr	x8, [x0, #48]
  43c144:	ldr	x1, [x0, #16]
  43c148:	mov	x19, x0
  43c14c:	mov	x0, x20
  43c150:	mov	x21, x2
  43c154:	blr	x8
  43c158:	ldr	x8, [x19, #16]
  43c15c:	cmp	x0, x8
  43c160:	b.cs	43c404 <argp_parse@@Base+0x4b58>  // b.hs, b.nlast
  43c164:	ldr	x25, [x19]
  43c168:	mov	x22, x0
  43c16c:	add	x23, x25, x0, lsl #4
  43c170:	ldr	x1, [x23]
  43c174:	cbz	x1, 43c19c <argp_parse@@Base+0x48f0>
  43c178:	cmp	x1, x20
  43c17c:	b.eq	43c310 <argp_parse@@Base+0x4a64>  // b.none
  43c180:	ldr	x8, [x19, #56]
  43c184:	mov	x0, x20
  43c188:	blr	x8
  43c18c:	mov	x24, x23
  43c190:	tbz	w0, #0, 43c324 <argp_parse@@Base+0x4a78>
  43c194:	ldr	x8, [x24]
  43c198:	cbnz	x8, 43c314 <argp_parse@@Base+0x4a68>
  43c19c:	ldr	x8, [x19, #40]
  43c1a0:	ldp	x10, x9, [x19, #16]
  43c1a4:	ldr	s1, [x8, #8]
  43c1a8:	ucvtf	s0, x10
  43c1ac:	ucvtf	s2, x9
  43c1b0:	fmul	s3, s1, s0
  43c1b4:	fcmp	s3, s2
  43c1b8:	b.pl	43c2f4 <argp_parse@@Base+0x4a48>  // b.nfrst
  43c1bc:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43c1c0:	add	x9, x9, #0x294
  43c1c4:	cmp	x8, x9
  43c1c8:	b.eq	43c258 <argp_parse@@Base+0x49ac>  // b.none
  43c1cc:	mov	w10, #0xcccd                	// #52429
  43c1d0:	movk	w10, #0x3dcc, lsl #16
  43c1d4:	fmov	s3, w10
  43c1d8:	fcmp	s1, s3
  43c1dc:	b.le	43c248 <argp_parse@@Base+0x499c>
  43c1e0:	mov	w10, #0x6666                	// #26214
  43c1e4:	movk	w10, #0x3f66, lsl #16
  43c1e8:	fmov	s3, w10
  43c1ec:	fcmp	s1, s3
  43c1f0:	b.pl	43c248 <argp_parse@@Base+0x499c>  // b.nfrst
  43c1f4:	ldr	s3, [x8, #12]
  43c1f8:	mov	w10, #0xcccd                	// #52429
  43c1fc:	movk	w10, #0x3f8c, lsl #16
  43c200:	fmov	s4, w10
  43c204:	fcmp	s3, s4
  43c208:	b.le	43c248 <argp_parse@@Base+0x499c>
  43c20c:	ldr	s3, [x8]
  43c210:	fcmp	s3, #0.0
  43c214:	b.lt	43c248 <argp_parse@@Base+0x499c>  // b.tstop
  43c218:	mov	w10, #0xcccd                	// #52429
  43c21c:	movk	w10, #0x3dcc, lsl #16
  43c220:	fmov	s4, w10
  43c224:	fadd	s3, s3, s4
  43c228:	fcmp	s3, s1
  43c22c:	b.pl	43c248 <argp_parse@@Base+0x499c>  // b.nfrst
  43c230:	ldr	s4, [x8, #4]
  43c234:	fmov	s5, #1.000000000000000000e+00
  43c238:	fcmp	s4, s5
  43c23c:	b.hi	43c248 <argp_parse@@Base+0x499c>  // b.pmore
  43c240:	fcmp	s3, s4
  43c244:	b.mi	43c25c <argp_parse@@Base+0x49b0>  // b.first
  43c248:	mov	w8, #0xcccd                	// #52429
  43c24c:	movk	w8, #0x3f4c, lsl #16
  43c250:	fmov	s1, w8
  43c254:	str	x9, [x19, #40]
  43c258:	mov	x8, x9
  43c25c:	fmul	s3, s1, s0
  43c260:	fcmp	s3, s2
  43c264:	b.pl	43c2f4 <argp_parse@@Base+0x4a48>  // b.nfrst
  43c268:	ldr	s2, [x8, #12]
  43c26c:	ldrb	w8, [x8, #16]
  43c270:	fmul	s0, s2, s0
  43c274:	cmp	w8, #0x0
  43c278:	fmul	s1, s1, s0
  43c27c:	mov	w8, #0x5f800000            	// #1602224128
  43c280:	fcsel	s0, s1, s0, eq  // eq = none
  43c284:	fmov	s1, w8
  43c288:	fcmp	s0, s1
  43c28c:	b.ge	43c3a0 <argp_parse@@Base+0x4af4>  // b.tcont
  43c290:	fcvtzu	x1, s0
  43c294:	mov	x0, x19
  43c298:	bl	43bd78 <argp_parse@@Base+0x44cc>
  43c29c:	tbz	w0, #0, 43c3a0 <argp_parse@@Base+0x4af4>
  43c2a0:	ldr	x8, [x19, #48]
  43c2a4:	ldr	x1, [x19, #16]
  43c2a8:	mov	x0, x20
  43c2ac:	blr	x8
  43c2b0:	ldr	x8, [x19, #16]
  43c2b4:	cmp	x0, x8
  43c2b8:	b.cs	43c404 <argp_parse@@Base+0x4b58>  // b.hs, b.nlast
  43c2bc:	ldr	x22, [x19]
  43c2c0:	mov	x21, x0
  43c2c4:	add	x23, x22, x0, lsl #4
  43c2c8:	ldr	x1, [x23]
  43c2cc:	cbz	x1, 43c2f4 <argp_parse@@Base+0x4a48>
  43c2d0:	cmp	x1, x20
  43c2d4:	mov	x8, x20
  43c2d8:	b.eq	43c2f0 <argp_parse@@Base+0x4a44>  // b.none
  43c2dc:	ldr	x8, [x19, #56]
  43c2e0:	mov	x0, x20
  43c2e4:	blr	x8
  43c2e8:	tbz	w0, #0, 43c3c8 <argp_parse@@Base+0x4b1c>
  43c2ec:	ldr	x8, [x23]
  43c2f0:	cbnz	x8, 43c404 <argp_parse@@Base+0x4b58>
  43c2f4:	ldr	x8, [x23]
  43c2f8:	cbz	x8, 43c354 <argp_parse@@Base+0x4aa8>
  43c2fc:	ldr	x0, [x19, #72]
  43c300:	cbz	x0, 43c370 <argp_parse@@Base+0x4ac4>
  43c304:	ldr	x8, [x0, #8]
  43c308:	str	x8, [x19, #72]
  43c30c:	b	43c37c <argp_parse@@Base+0x4ad0>
  43c310:	mov	x8, x20
  43c314:	mov	w0, wzr
  43c318:	cbz	x21, 43c3a4 <argp_parse@@Base+0x4af8>
  43c31c:	str	x8, [x21]
  43c320:	b	43c3a4 <argp_parse@@Base+0x4af8>
  43c324:	add	x24, x25, x22, lsl #4
  43c328:	ldr	x8, [x24, #8]!
  43c32c:	cbz	x8, 43c19c <argp_parse@@Base+0x48f0>
  43c330:	ldr	x1, [x8]
  43c334:	cmp	x1, x20
  43c338:	b.eq	43c3bc <argp_parse@@Base+0x4b10>  // b.none
  43c33c:	ldr	x8, [x19, #56]
  43c340:	mov	x0, x20
  43c344:	blr	x8
  43c348:	ldr	x24, [x24]
  43c34c:	tbz	w0, #0, 43c328 <argp_parse@@Base+0x4a7c>
  43c350:	b	43c194 <argp_parse@@Base+0x48e8>
  43c354:	str	x20, [x23]
  43c358:	ldur	q0, [x19, #24]
  43c35c:	mov	w0, #0x1                   	// #1
  43c360:	dup	v1.2d, x0
  43c364:	add	v0.2d, v0.2d, v1.2d
  43c368:	stur	q0, [x19, #24]
  43c36c:	b	43c3a4 <argp_parse@@Base+0x4af8>
  43c370:	mov	w0, #0x10                  	// #16
  43c374:	bl	404250 <malloc@plt>
  43c378:	cbz	x0, 43c3a0 <argp_parse@@Base+0x4af4>
  43c37c:	str	x20, [x0]
  43c380:	ldr	x8, [x23, #8]
  43c384:	str	x8, [x0, #8]
  43c388:	str	x0, [x23, #8]
  43c38c:	ldr	x8, [x19, #32]
  43c390:	mov	w0, #0x1                   	// #1
  43c394:	add	x8, x8, #0x1
  43c398:	str	x8, [x19, #32]
  43c39c:	b	43c3a4 <argp_parse@@Base+0x4af8>
  43c3a0:	mov	w0, #0xffffffff            	// #-1
  43c3a4:	ldp	x20, x19, [sp, #64]
  43c3a8:	ldp	x22, x21, [sp, #48]
  43c3ac:	ldp	x24, x23, [sp, #32]
  43c3b0:	ldr	x25, [sp, #16]
  43c3b4:	ldp	x29, x30, [sp], #80
  43c3b8:	ret
  43c3bc:	mov	x8, x20
  43c3c0:	cbnz	x8, 43c314 <argp_parse@@Base+0x4a68>
  43c3c4:	b	43c19c <argp_parse@@Base+0x48f0>
  43c3c8:	add	x21, x22, x21, lsl #4
  43c3cc:	ldr	x8, [x21, #8]!
  43c3d0:	cbz	x8, 43c2f4 <argp_parse@@Base+0x4a48>
  43c3d4:	ldr	x1, [x8]
  43c3d8:	cmp	x1, x20
  43c3dc:	b.eq	43c3fc <argp_parse@@Base+0x4b50>  // b.none
  43c3e0:	ldr	x8, [x19, #56]
  43c3e4:	mov	x0, x20
  43c3e8:	blr	x8
  43c3ec:	ldr	x21, [x21]
  43c3f0:	tbz	w0, #0, 43c3cc <argp_parse@@Base+0x4b20>
  43c3f4:	ldr	x8, [x21]
  43c3f8:	b	43c2f0 <argp_parse@@Base+0x4a44>
  43c3fc:	mov	x8, x20
  43c400:	b	43c2f0 <argp_parse@@Base+0x4a44>
  43c404:	bl	4045b0 <abort@plt>
  43c408:	stp	x29, x30, [sp, #-32]!
  43c40c:	mov	x29, sp
  43c410:	add	x2, x29, #0x18
  43c414:	str	x19, [sp, #16]
  43c418:	mov	x19, x1
  43c41c:	bl	43c120 <argp_parse@@Base+0x4874>
  43c420:	ldr	x8, [x29, #24]
  43c424:	cmp	w0, #0x0
  43c428:	csel	x8, x8, x19, eq  // eq = none
  43c42c:	ldr	x19, [sp, #16]
  43c430:	cmn	w0, #0x1
  43c434:	csel	x0, xzr, x8, eq  // eq = none
  43c438:	ldp	x29, x30, [sp], #32
  43c43c:	ret
  43c440:	stp	x29, x30, [sp, #-64]!
  43c444:	stp	x22, x21, [sp, #32]
  43c448:	stp	x20, x19, [sp, #48]
  43c44c:	ldr	x8, [x0, #16]
  43c450:	ldr	x9, [x0, #48]
  43c454:	mov	x20, x0
  43c458:	mov	x19, x1
  43c45c:	mov	x0, x1
  43c460:	mov	x1, x8
  43c464:	str	x23, [sp, #16]
  43c468:	mov	x29, sp
  43c46c:	blr	x9
  43c470:	ldr	x8, [x20, #16]
  43c474:	cmp	x0, x8
  43c478:	b.cs	43c674 <argp_parse@@Base+0x4dc8>  // b.hs, b.nlast
  43c47c:	ldr	x23, [x20]
  43c480:	mov	x21, x0
  43c484:	add	x22, x23, x0, lsl #4
  43c488:	ldr	x1, [x22]
  43c48c:	cbz	x1, 43c4fc <argp_parse@@Base+0x4c50>
  43c490:	cmp	x1, x19
  43c494:	b.eq	43c4ac <argp_parse@@Base+0x4c00>  // b.none
  43c498:	ldr	x8, [x20, #56]
  43c49c:	mov	x0, x19
  43c4a0:	blr	x8
  43c4a4:	tbz	w0, #0, 43c4c4 <argp_parse@@Base+0x4c18>
  43c4a8:	ldr	x19, [x22]
  43c4ac:	add	x8, x23, x21, lsl #4
  43c4b0:	ldr	x8, [x8, #8]
  43c4b4:	cbz	x8, 43c504 <argp_parse@@Base+0x4c58>
  43c4b8:	ldr	q0, [x8]
  43c4bc:	str	q0, [x22]
  43c4c0:	b	43c524 <argp_parse@@Base+0x4c78>
  43c4c4:	add	x21, x23, x21, lsl #4
  43c4c8:	ldr	x9, [x21, #8]!
  43c4cc:	cbz	x9, 43c4fc <argp_parse@@Base+0x4c50>
  43c4d0:	ldr	x1, [x9]
  43c4d4:	cmp	x1, x19
  43c4d8:	b.eq	43c510 <argp_parse@@Base+0x4c64>  // b.none
  43c4dc:	ldr	x8, [x20, #56]
  43c4e0:	mov	x0, x19
  43c4e4:	blr	x8
  43c4e8:	ldr	x8, [x21]
  43c4ec:	tbnz	w0, #0, 43c518 <argp_parse@@Base+0x4c6c>
  43c4f0:	ldr	x9, [x8, #8]!
  43c4f4:	mov	x21, x8
  43c4f8:	cbnz	x9, 43c4d0 <argp_parse@@Base+0x4c24>
  43c4fc:	mov	x19, xzr
  43c500:	b	43c65c <argp_parse@@Base+0x4db0>
  43c504:	str	xzr, [x22]
  43c508:	cbnz	x19, 43c538 <argp_parse@@Base+0x4c8c>
  43c50c:	b	43c65c <argp_parse@@Base+0x4db0>
  43c510:	mov	x8, x9
  43c514:	b	43c51c <argp_parse@@Base+0x4c70>
  43c518:	ldr	x19, [x8]
  43c51c:	ldr	x9, [x8, #8]
  43c520:	str	x9, [x21]
  43c524:	str	xzr, [x8]
  43c528:	ldr	x9, [x20, #72]
  43c52c:	str	x9, [x8, #8]
  43c530:	str	x8, [x20, #72]
  43c534:	cbz	x19, 43c65c <argp_parse@@Base+0x4db0>
  43c538:	ldr	x8, [x20, #32]
  43c53c:	sub	x8, x8, #0x1
  43c540:	str	x8, [x20, #32]
  43c544:	ldr	x8, [x22]
  43c548:	cbnz	x8, 43c65c <argp_parse@@Base+0x4db0>
  43c54c:	ldp	x10, x9, [x20, #16]
  43c550:	ldr	x8, [x20, #40]
  43c554:	sub	x9, x9, #0x1
  43c558:	str	x9, [x20, #24]
  43c55c:	ldr	s2, [x8]
  43c560:	ucvtf	s0, x10
  43c564:	ucvtf	s1, x9
  43c568:	fmul	s3, s2, s0
  43c56c:	fcmp	s3, s1
  43c570:	b.le	43c65c <argp_parse@@Base+0x4db0>
  43c574:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43c578:	add	x9, x9, #0x294
  43c57c:	cmp	x8, x9
  43c580:	b.eq	43c608 <argp_parse@@Base+0x4d5c>  // b.none
  43c584:	ldr	s3, [x8, #8]
  43c588:	mov	w10, #0xcccd                	// #52429
  43c58c:	movk	w10, #0x3dcc, lsl #16
  43c590:	fmov	s4, w10
  43c594:	fcmp	s3, s4
  43c598:	b.le	43c600 <argp_parse@@Base+0x4d54>
  43c59c:	mov	w10, #0x6666                	// #26214
  43c5a0:	movk	w10, #0x3f66, lsl #16
  43c5a4:	fmov	s4, w10
  43c5a8:	fcmp	s3, s4
  43c5ac:	b.pl	43c600 <argp_parse@@Base+0x4d54>  // b.nfrst
  43c5b0:	fcmp	s2, #0.0
  43c5b4:	b.lt	43c600 <argp_parse@@Base+0x4d54>  // b.tstop
  43c5b8:	ldr	s4, [x8, #12]
  43c5bc:	mov	w10, #0xcccd                	// #52429
  43c5c0:	movk	w10, #0x3f8c, lsl #16
  43c5c4:	fmov	s5, w10
  43c5c8:	fcmp	s4, s5
  43c5cc:	b.le	43c600 <argp_parse@@Base+0x4d54>
  43c5d0:	mov	w10, #0xcccd                	// #52429
  43c5d4:	movk	w10, #0x3dcc, lsl #16
  43c5d8:	fmov	s4, w10
  43c5dc:	fadd	s4, s2, s4
  43c5e0:	fcmp	s4, s3
  43c5e4:	b.pl	43c600 <argp_parse@@Base+0x4d54>  // b.nfrst
  43c5e8:	ldr	s3, [x8, #4]
  43c5ec:	fmov	s5, #1.000000000000000000e+00
  43c5f0:	fcmp	s3, s5
  43c5f4:	b.hi	43c600 <argp_parse@@Base+0x4d54>  // b.pmore
  43c5f8:	fcmp	s4, s3
  43c5fc:	b.mi	43c60c <argp_parse@@Base+0x4d60>  // b.first
  43c600:	fmov	s2, wzr
  43c604:	str	x9, [x20, #40]
  43c608:	mov	x8, x9
  43c60c:	fmul	s2, s2, s0
  43c610:	fcmp	s2, s1
  43c614:	b.le	43c65c <argp_parse@@Base+0x4db0>
  43c618:	ldr	s1, [x8, #4]
  43c61c:	ldrb	w9, [x8, #16]
  43c620:	fmul	s0, s1, s0
  43c624:	cbnz	w9, 43c630 <argp_parse@@Base+0x4d84>
  43c628:	ldr	s1, [x8, #8]
  43c62c:	fmul	s0, s0, s1
  43c630:	fcvtzu	x1, s0
  43c634:	mov	x0, x20
  43c638:	bl	43bd78 <argp_parse@@Base+0x44cc>
  43c63c:	tbnz	w0, #0, 43c65c <argp_parse@@Base+0x4db0>
  43c640:	ldr	x0, [x20, #72]
  43c644:	cbz	x0, 43c658 <argp_parse@@Base+0x4dac>
  43c648:	ldr	x21, [x0, #8]
  43c64c:	bl	404700 <free@plt>
  43c650:	mov	x0, x21
  43c654:	cbnz	x21, 43c648 <argp_parse@@Base+0x4d9c>
  43c658:	str	xzr, [x20, #72]
  43c65c:	mov	x0, x19
  43c660:	ldp	x20, x19, [sp, #48]
  43c664:	ldp	x22, x21, [sp, #32]
  43c668:	ldr	x23, [sp, #16]
  43c66c:	ldp	x29, x30, [sp], #64
  43c670:	ret
  43c674:	bl	4045b0 <abort@plt>
  43c678:	sub	sp, sp, #0xe0
  43c67c:	tst	w2, #0x20
  43c680:	mov	w8, #0x3e8                 	// #1000
  43c684:	mov	w9, #0x400                 	// #1024
  43c688:	stp	x29, x30, [sp, #128]
  43c68c:	stp	x28, x27, [sp, #144]
  43c690:	stp	x26, x25, [sp, #160]
  43c694:	stp	x24, x23, [sp, #176]
  43c698:	stp	x22, x21, [sp, #192]
  43c69c:	stp	x20, x19, [sp, #208]
  43c6a0:	add	x29, sp, #0x80
  43c6a4:	mov	x21, x4
  43c6a8:	mov	x27, x3
  43c6ac:	mov	x19, x1
  43c6b0:	mov	x26, x0
  43c6b4:	and	w28, w2, #0x3
  43c6b8:	str	w2, [sp, #20]
  43c6bc:	csel	w22, w9, w8, ne  // ne = any
  43c6c0:	bl	404150 <localeconv@plt>
  43c6c4:	ldr	x25, [x0]
  43c6c8:	mov	x23, x0
  43c6cc:	mov	x0, x25
  43c6d0:	bl	403f40 <strlen@plt>
  43c6d4:	ldp	x23, x20, [x23, #8]
  43c6d8:	sub	x8, x0, #0x1
  43c6dc:	cmp	x8, #0x10
  43c6e0:	adrp	x8, 45f000 <_obstack_memory_used@@Base+0x184b0>
  43c6e4:	csinc	x24, x0, xzr, cc  // cc = lo, ul, last
  43c6e8:	add	x8, x8, #0x50a
  43c6ec:	mov	x0, x23
  43c6f0:	csel	x25, x25, x8, cc  // cc = lo, ul, last
  43c6f4:	bl	403f40 <strlen@plt>
  43c6f8:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43c6fc:	mov	x11, x21
  43c700:	add	x8, x8, #0x66
  43c704:	cmp	x0, #0x11
  43c708:	csel	x21, x23, x8, cc  // cc = lo, ul, last
  43c70c:	cmp	x11, x27
  43c710:	str	x19, [sp, #24]
  43c714:	add	x19, x19, #0x287
  43c718:	stp	x21, x11, [sp]
  43c71c:	b.ls	43c780 <argp_parse@@Base+0x4ed4>  // b.plast
  43c720:	cbz	x27, 43c798 <argp_parse@@Base+0x4eec>
  43c724:	udiv	x9, x11, x27
  43c728:	msub	x8, x9, x27, x11
  43c72c:	cbnz	x8, 43c798 <argp_parse@@Base+0x4eec>
  43c730:	udiv	x27, x26, x9
  43c734:	msub	x8, x27, x9, x26
  43c738:	add	x8, x8, x8, lsl #2
  43c73c:	lsl	x11, x8, #1
  43c740:	udiv	x8, x11, x9
  43c744:	msub	x11, x8, x9, x11
  43c748:	lsl	x11, x11, #1
  43c74c:	cmp	x11, #0x0
  43c750:	mov	w10, #0x2                   	// #2
  43c754:	cset	w12, ne  // ne = any
  43c758:	cmp	x9, x11
  43c75c:	cinc	w10, w10, cc  // cc = lo, ul, last
  43c760:	cmp	x11, x9
  43c764:	csel	w9, w12, w10, cc  // cc = lo, ul, last
  43c768:	ldr	w23, [sp, #20]
  43c76c:	tbz	w23, #4, 43ca18 <argp_parse@@Base+0x516c>
  43c770:	cmp	x27, x22
  43c774:	b.cs	43ca6c <argp_parse@@Base+0x51c0>  // b.hs, b.nlast
  43c778:	mov	w21, wzr
  43c77c:	b	43cb64 <argp_parse@@Base+0x52b8>
  43c780:	udiv	x10, x27, x11
  43c784:	msub	x8, x10, x11, x27
  43c788:	cbnz	x8, 43c798 <argp_parse@@Base+0x4eec>
  43c78c:	umulh	x8, x10, x26
  43c790:	cmp	xzr, x8
  43c794:	b.eq	43ca04 <argp_parse@@Base+0x5158>  // b.none
  43c798:	mov	x0, x11
  43c79c:	bl	45ae68 <_obstack_memory_used@@Base+0x14318>
  43c7a0:	mov	x0, x26
  43c7a4:	str	q0, [sp, #48]
  43c7a8:	bl	45ae68 <_obstack_memory_used@@Base+0x14318>
  43c7ac:	mov	x0, x27
  43c7b0:	str	q0, [sp, #64]
  43c7b4:	bl	45ae68 <_obstack_memory_used@@Base+0x14318>
  43c7b8:	ldr	q1, [sp, #48]
  43c7bc:	bl	459990 <_obstack_memory_used@@Base+0x12e40>
  43c7c0:	ldr	q1, [sp, #64]
  43c7c4:	bl	45a4f8 <_obstack_memory_used@@Base+0x139a8>
  43c7c8:	ldr	w23, [sp, #20]
  43c7cc:	tbnz	w23, #4, 43c834 <argp_parse@@Base+0x4f88>
  43c7d0:	cmp	w28, #0x1
  43c7d4:	b.eq	43c9c4 <argp_parse@@Base+0x5118>  // b.none
  43c7d8:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43c7dc:	ldr	q1, [x8, #704]
  43c7e0:	str	q0, [sp, #32]
  43c7e4:	bl	45a3b8 <_obstack_memory_used@@Base+0x13868>
  43c7e8:	ldr	x25, [sp, #24]
  43c7ec:	cmp	w0, #0x0
  43c7f0:	mov	x27, x19
  43c7f4:	b.ge	43c9d0 <argp_parse@@Base+0x5124>  // b.tcont
  43c7f8:	ldr	q0, [sp, #32]
  43c7fc:	bl	45ad48 <_obstack_memory_used@@Base+0x141f8>
  43c800:	cmp	w28, #0x0
  43c804:	mov	x24, x0
  43c808:	cset	w19, eq  // eq = none
  43c80c:	bl	45ae68 <_obstack_memory_used@@Base+0x14318>
  43c810:	mov	v1.16b, v0.16b
  43c814:	ldr	q0, [sp, #32]
  43c818:	bl	45a2b0 <_obstack_memory_used@@Base+0x13760>
  43c81c:	cmp	w0, #0x0
  43c820:	cset	w8, ne  // ne = any
  43c824:	and	w8, w19, w8
  43c828:	add	x0, x8, x24
  43c82c:	bl	45ae68 <_obstack_memory_used@@Base+0x14318>
  43c830:	b	43c9d4 <argp_parse@@Base+0x5128>
  43c834:	mov	w0, w22
  43c838:	str	q0, [sp, #32]
  43c83c:	mov	x27, x19
  43c840:	bl	45ace0 <_obstack_memory_used@@Base+0x14190>
  43c844:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43c848:	str	q0, [sp, #48]
  43c84c:	ldr	q0, [x8, #688]
  43c850:	mov	w21, wzr
  43c854:	str	q0, [sp, #64]
  43c858:	ldp	q1, q0, [sp, #48]
  43c85c:	mov	w19, w21
  43c860:	bl	45a4f8 <_obstack_memory_used@@Base+0x139a8>
  43c864:	ldr	q1, [sp, #48]
  43c868:	add	w21, w21, #0x1
  43c86c:	str	q0, [sp, #64]
  43c870:	bl	45a4f8 <_obstack_memory_used@@Base+0x139a8>
  43c874:	cmp	w19, #0x6
  43c878:	b.hi	43c88c <argp_parse@@Base+0x4fe0>  // b.pmore
  43c87c:	ldr	q1, [sp, #32]
  43c880:	bl	45a3b8 <_obstack_memory_used@@Base+0x13868>
  43c884:	cmp	w0, #0x0
  43c888:	b.le	43c858 <argp_parse@@Base+0x4fac>
  43c88c:	ldr	q0, [sp, #32]
  43c890:	ldr	q1, [sp, #64]
  43c894:	bl	459990 <_obstack_memory_used@@Base+0x12e40>
  43c898:	ldr	x25, [sp, #24]
  43c89c:	cmp	w28, #0x1
  43c8a0:	adrp	x26, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43c8a4:	str	q0, [sp, #64]
  43c8a8:	b.eq	43c900 <argp_parse@@Base+0x5054>  // b.none
  43c8ac:	ldr	q1, [x26, #704]
  43c8b0:	bl	45a3b8 <_obstack_memory_used@@Base+0x13868>
  43c8b4:	ldr	q1, [sp, #64]
  43c8b8:	cmp	w0, #0x0
  43c8bc:	mov	v0.16b, v1.16b
  43c8c0:	b.ge	43c900 <argp_parse@@Base+0x5054>  // b.tcont
  43c8c4:	mov	v0.16b, v1.16b
  43c8c8:	bl	45ad48 <_obstack_memory_used@@Base+0x141f8>
  43c8cc:	cmp	w28, #0x0
  43c8d0:	mov	x25, x0
  43c8d4:	cset	w19, eq  // eq = none
  43c8d8:	bl	45ae68 <_obstack_memory_used@@Base+0x14318>
  43c8dc:	mov	v1.16b, v0.16b
  43c8e0:	ldr	q0, [sp, #64]
  43c8e4:	bl	45a2b0 <_obstack_memory_used@@Base+0x13760>
  43c8e8:	cmp	w0, #0x0
  43c8ec:	cset	w8, ne  // ne = any
  43c8f0:	and	w8, w19, w8
  43c8f4:	add	x0, x8, x25
  43c8f8:	ldr	x25, [sp, #24]
  43c8fc:	bl	45ae68 <_obstack_memory_used@@Base+0x14318>
  43c900:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43c904:	add	x3, x3, #0x2e6
  43c908:	mov	w1, #0x1                   	// #1
  43c90c:	mov	x2, #0xffffffffffffffff    	// #-1
  43c910:	mov	x0, x25
  43c914:	bl	403f60 <__sprintf_chk@plt>
  43c918:	mov	x0, x25
  43c91c:	bl	403f40 <strlen@plt>
  43c920:	ldr	q0, [sp, #64]
  43c924:	tst	w23, #0x20
  43c928:	mov	w8, #0x2                   	// #2
  43c92c:	cinc	x8, x8, eq  // eq = none
  43c930:	add	x8, x8, x24
  43c934:	cmp	x8, x0
  43c938:	b.cc	43c958 <argp_parse@@Base+0x50ac>  // b.lo, b.ul, b.last
  43c93c:	mov	x2, x0
  43c940:	add	x19, x24, #0x1
  43c944:	tbz	w23, #3, 43ca50 <argp_parse@@Base+0x51a4>
  43c948:	add	x8, x2, x25
  43c94c:	ldurb	w8, [x8, #-1]
  43c950:	cmp	w8, #0x30
  43c954:	b.ne	43ca50 <argp_parse@@Base+0x51a4>  // b.any
  43c958:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43c95c:	ldr	q1, [x8, #720]
  43c960:	str	q1, [sp, #64]
  43c964:	bl	45a4f8 <_obstack_memory_used@@Base+0x139a8>
  43c968:	cmp	w28, #0x1
  43c96c:	b.eq	43c9bc <argp_parse@@Base+0x5110>  // b.none
  43c970:	ldr	q1, [x26, #704]
  43c974:	str	q0, [sp, #48]
  43c978:	bl	45a3b8 <_obstack_memory_used@@Base+0x13868>
  43c97c:	cmp	w0, #0x0
  43c980:	b.ge	43ca20 <argp_parse@@Base+0x5174>  // b.tcont
  43c984:	ldr	q0, [sp, #48]
  43c988:	bl	45ad48 <_obstack_memory_used@@Base+0x141f8>
  43c98c:	cmp	w28, #0x0
  43c990:	mov	x24, x0
  43c994:	cset	w19, eq  // eq = none
  43c998:	bl	45ae68 <_obstack_memory_used@@Base+0x14318>
  43c99c:	mov	v1.16b, v0.16b
  43c9a0:	ldr	q0, [sp, #48]
  43c9a4:	bl	45a2b0 <_obstack_memory_used@@Base+0x13760>
  43c9a8:	cmp	w0, #0x0
  43c9ac:	cset	w8, ne  // ne = any
  43c9b0:	and	w8, w19, w8
  43c9b4:	add	x0, x8, x24
  43c9b8:	bl	45ae68 <_obstack_memory_used@@Base+0x14318>
  43c9bc:	ldr	q1, [sp, #64]
  43c9c0:	b	43ca24 <argp_parse@@Base+0x5178>
  43c9c4:	ldr	x25, [sp, #24]
  43c9c8:	mov	x27, x19
  43c9cc:	b	43c9d4 <argp_parse@@Base+0x5128>
  43c9d0:	ldr	q0, [sp, #32]
  43c9d4:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43c9d8:	add	x3, x3, #0x2e0
  43c9dc:	mov	w1, #0x1                   	// #1
  43c9e0:	mov	x2, #0xffffffffffffffff    	// #-1
  43c9e4:	mov	x0, x25
  43c9e8:	bl	403f60 <__sprintf_chk@plt>
  43c9ec:	mov	x0, x25
  43c9f0:	bl	403f40 <strlen@plt>
  43c9f4:	mov	x2, x0
  43c9f8:	mov	x19, xzr
  43c9fc:	mov	w21, #0xffffffff            	// #-1
  43ca00:	b	43ca50 <argp_parse@@Base+0x51a4>
  43ca04:	mov	w9, wzr
  43ca08:	mov	w8, wzr
  43ca0c:	mul	x27, x10, x26
  43ca10:	ldr	w23, [sp, #20]
  43ca14:	tbnz	w23, #4, 43c770 <argp_parse@@Base+0x4ec4>
  43ca18:	mov	w21, #0xffffffff            	// #-1
  43ca1c:	b	43cb64 <argp_parse@@Base+0x52b8>
  43ca20:	ldp	q0, q1, [sp, #48]
  43ca24:	bl	459990 <_obstack_memory_used@@Base+0x12e40>
  43ca28:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ca2c:	add	x3, x3, #0x2e0
  43ca30:	mov	w1, #0x1                   	// #1
  43ca34:	mov	x2, #0xffffffffffffffff    	// #-1
  43ca38:	mov	x0, x25
  43ca3c:	bl	403f60 <__sprintf_chk@plt>
  43ca40:	mov	x0, x25
  43ca44:	bl	403f40 <strlen@plt>
  43ca48:	mov	x2, x0
  43ca4c:	mov	x19, xzr
  43ca50:	sub	x24, x27, x2
  43ca54:	mov	x0, x24
  43ca58:	mov	x1, x25
  43ca5c:	bl	403ed0 <memmove@plt>
  43ca60:	sub	x26, x27, x19
  43ca64:	mov	x19, x27
  43ca68:	b	43cc0c <argp_parse@@Base+0x5360>
  43ca6c:	mov	w12, wzr
  43ca70:	mov	w10, #0xa                   	// #10
  43ca74:	mov	w11, #0x2                   	// #2
  43ca78:	mov	x13, x27
  43ca7c:	udiv	x27, x27, x22
  43ca80:	msub	w13, w27, w22, w13
  43ca84:	madd	w13, w13, w10, w8
  43ca88:	udiv	w8, w13, w22
  43ca8c:	msub	w13, w8, w22, w13
  43ca90:	lsl	w13, w13, #1
  43ca94:	add	w13, w13, w9, lsr #1
  43ca98:	cmp	w13, w22
  43ca9c:	b.cs	43caac <argp_parse@@Base+0x5200>  // b.hs, b.nlast
  43caa0:	cmn	w13, w9
  43caa4:	cset	w9, ne  // ne = any
  43caa8:	b	43cab8 <argp_parse@@Base+0x520c>
  43caac:	add	w9, w13, w9
  43cab0:	cmp	w22, w9
  43cab4:	cinc	w9, w11, cc  // cc = lo, ul, last
  43cab8:	cmp	w12, #0x6
  43cabc:	add	w21, w12, #0x1
  43cac0:	b.hi	43cad0 <argp_parse@@Base+0x5224>  // b.pmore
  43cac4:	cmp	x27, x22
  43cac8:	mov	w12, w21
  43cacc:	b.cs	43ca78 <argp_parse@@Base+0x51cc>  // b.hs, b.nlast
  43cad0:	cmp	x27, #0x9
  43cad4:	b.hi	43cb64 <argp_parse@@Base+0x52b8>  // b.pmore
  43cad8:	cmp	w28, #0x1
  43cadc:	b.ne	43caf4 <argp_parse@@Base+0x5248>  // b.any
  43cae0:	and	w10, w8, #0x1
  43cae4:	add	w10, w9, w10
  43cae8:	cmp	w10, #0x2
  43caec:	b.hi	43cafc <argp_parse@@Base+0x5250>  // b.pmore
  43caf0:	b	43cb24 <argp_parse@@Base+0x5278>
  43caf4:	cbnz	w28, 43cb24 <argp_parse@@Base+0x5278>
  43caf8:	cbz	w9, 43cb24 <argp_parse@@Base+0x5278>
  43cafc:	add	w8, w8, #0x1
  43cb00:	cmp	w8, #0xa
  43cb04:	b.ne	43cb20 <argp_parse@@Base+0x5274>  // b.any
  43cb08:	cmp	x27, #0x8
  43cb0c:	mov	w8, wzr
  43cb10:	b.hi	43cb5c <argp_parse@@Base+0x52b0>  // b.pmore
  43cb14:	add	x27, x27, #0x1
  43cb18:	mov	w9, w8
  43cb1c:	b	43cb24 <argp_parse@@Base+0x5278>
  43cb20:	mov	w9, wzr
  43cb24:	tbz	w23, #3, 43cb2c <argp_parse@@Base+0x5280>
  43cb28:	cbz	w8, 43cb64 <argp_parse@@Base+0x52b8>
  43cb2c:	ldr	x10, [sp, #24]
  43cb30:	add	w8, w8, #0x30
  43cb34:	mov	x1, x25
  43cb38:	mov	x2, x24
  43cb3c:	add	x9, x10, #0x286
  43cb40:	sub	x26, x9, x24
  43cb44:	mov	x0, x26
  43cb48:	strb	w8, [x10, #646]
  43cb4c:	bl	403ec0 <memcpy@plt>
  43cb50:	mov	w9, wzr
  43cb54:	mov	w8, wzr
  43cb58:	b	43cb68 <argp_parse@@Base+0x52bc>
  43cb5c:	mov	w27, #0xa                   	// #10
  43cb60:	mov	w9, w8
  43cb64:	mov	x26, x19
  43cb68:	cbz	w28, 43cb8c <argp_parse@@Base+0x52e0>
  43cb6c:	cmp	w28, #0x1
  43cb70:	b.ne	43cbd8 <argp_parse@@Base+0x532c>  // b.any
  43cb74:	and	x10, x27, #0x1
  43cb78:	cmn	x10, w9, uxtw
  43cb7c:	cinc	w8, w8, ne  // ne = any
  43cb80:	cmp	w8, #0x5
  43cb84:	b.gt	43cb98 <argp_parse@@Base+0x52ec>
  43cb88:	b	43cbd8 <argp_parse@@Base+0x532c>
  43cb8c:	add	w8, w8, w9
  43cb90:	cmp	w8, #0x1
  43cb94:	b.lt	43cbd8 <argp_parse@@Base+0x532c>  // b.tstop
  43cb98:	cmp	w21, #0x7
  43cb9c:	add	x27, x27, #0x1
  43cba0:	b.gt	43cbd8 <argp_parse@@Base+0x532c>
  43cba4:	tbz	w23, #4, 43cbd8 <argp_parse@@Base+0x532c>
  43cba8:	cmp	x27, x22
  43cbac:	b.ne	43cbd8 <argp_parse@@Base+0x532c>  // b.any
  43cbb0:	add	w21, w21, #0x1
  43cbb4:	tbnz	w23, #3, 43cbd4 <argp_parse@@Base+0x5328>
  43cbb8:	mov	w8, #0x30                  	// #48
  43cbbc:	strb	w8, [x26, #-1]!
  43cbc0:	sub	x26, x26, x24
  43cbc4:	mov	x0, x26
  43cbc8:	mov	x1, x25
  43cbcc:	mov	x2, x24
  43cbd0:	bl	403ec0 <memcpy@plt>
  43cbd4:	mov	w27, #0x1                   	// #1
  43cbd8:	ldr	x25, [sp, #24]
  43cbdc:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  43cbe0:	movk	x8, #0xcccd
  43cbe4:	mov	w9, #0xa                   	// #10
  43cbe8:	mov	x24, x26
  43cbec:	umulh	x10, x27, x8
  43cbf0:	lsr	x10, x10, #3
  43cbf4:	msub	w11, w10, w9, w27
  43cbf8:	orr	w11, w11, #0x30
  43cbfc:	cmp	x27, #0x9
  43cc00:	strb	w11, [x24, #-1]!
  43cc04:	mov	x27, x10
  43cc08:	b.hi	43cbec <argp_parse@@Base+0x5340>  // b.pmore
  43cc0c:	tbnz	w23, #2, 43cc1c <argp_parse@@Base+0x5370>
  43cc10:	ldr	x9, [sp, #8]
  43cc14:	tbnz	w23, #7, 43cd08 <argp_parse@@Base+0x545c>
  43cc18:	b	43cd9c <argp_parse@@Base+0x54f0>
  43cc1c:	ldr	x0, [sp]
  43cc20:	str	x22, [sp, #48]
  43cc24:	str	x19, [sp, #64]
  43cc28:	sub	x28, x26, x24
  43cc2c:	bl	403f40 <strlen@plt>
  43cc30:	mov	x25, x0
  43cc34:	sub	x0, x29, #0x2c
  43cc38:	mov	w3, #0x29                  	// #41
  43cc3c:	mov	x1, x24
  43cc40:	mov	x2, x28
  43cc44:	sub	x19, x29, #0x2c
  43cc48:	bl	404190 <__memcpy_chk@plt>
  43cc4c:	ldrb	w8, [x20]
  43cc50:	cmp	x8, #0x0
  43cc54:	cset	w23, eq  // eq = none
  43cc58:	cmp	w8, #0xff
  43cc5c:	csel	x9, x28, x8, eq  // eq = none
  43cc60:	cmp	w8, #0x0
  43cc64:	csinv	x8, x9, xzr, ne  // ne = any
  43cc68:	cmp	x8, x28
  43cc6c:	csel	x27, x28, x8, hi  // hi = pmore
  43cc70:	sub	x24, x26, x27
  43cc74:	sub	x26, x28, x27
  43cc78:	add	x1, x19, x26
  43cc7c:	mov	x0, x24
  43cc80:	mov	x2, x27
  43cc84:	bl	403ec0 <memcpy@plt>
  43cc88:	cbz	x26, 43ccf0 <argp_parse@@Base+0x5444>
  43cc8c:	ldr	x22, [sp]
  43cc90:	neg	x28, x25
  43cc94:	add	x24, x24, x28
  43cc98:	tst	w23, #0x1
  43cc9c:	mov	x0, x24
  43cca0:	mov	x1, x22
  43cca4:	mov	x2, x25
  43cca8:	cinc	x20, x20, eq  // eq = none
  43ccac:	bl	403ec0 <memcpy@plt>
  43ccb0:	ldrb	w8, [x20]
  43ccb4:	cmp	x8, #0x0
  43ccb8:	cset	w23, eq  // eq = none
  43ccbc:	cmp	w8, #0xff
  43ccc0:	csel	x9, x26, x8, eq  // eq = none
  43ccc4:	cmp	w8, #0x0
  43ccc8:	csel	x8, x27, x9, eq  // eq = none
  43cccc:	cmp	x26, x8
  43ccd0:	csel	x27, x26, x8, cc  // cc = lo, ul, last
  43ccd4:	sub	x24, x24, x27
  43ccd8:	sub	x26, x26, x27
  43ccdc:	add	x1, x19, x26
  43cce0:	mov	x0, x24
  43cce4:	mov	x2, x27
  43cce8:	bl	403ec0 <memcpy@plt>
  43ccec:	cbnz	x26, 43cc94 <argp_parse@@Base+0x53e8>
  43ccf0:	ldr	w23, [sp, #20]
  43ccf4:	ldr	x19, [sp, #64]
  43ccf8:	ldr	x25, [sp, #24]
  43ccfc:	ldr	x9, [sp, #8]
  43cd00:	ldr	x22, [sp, #48]
  43cd04:	tbz	w23, #7, 43cd9c <argp_parse@@Base+0x54f0>
  43cd08:	tbz	w21, #31, 43cd3c <argp_parse@@Base+0x5490>
  43cd0c:	cmp	x9, #0x2
  43cd10:	b.cc	43cd38 <argp_parse@@Base+0x548c>  // b.lo, b.ul, b.last
  43cd14:	mov	w21, wzr
  43cd18:	mov	w8, #0x1                   	// #1
  43cd1c:	cmp	w21, #0x7
  43cd20:	b.eq	43cdc4 <argp_parse@@Base+0x5518>  // b.none
  43cd24:	mul	x8, x8, x22
  43cd28:	cmp	x8, x9
  43cd2c:	add	w21, w21, #0x1
  43cd30:	b.cc	43cd1c <argp_parse@@Base+0x5470>  // b.lo, b.ul, b.last
  43cd34:	b	43cd3c <argp_parse@@Base+0x5490>
  43cd38:	mov	w21, wzr
  43cd3c:	and	w8, w23, #0x100
  43cd40:	tbz	w23, #6, 43cd58 <argp_parse@@Base+0x54ac>
  43cd44:	orr	w9, w21, w8
  43cd48:	cbz	w9, 43cd58 <argp_parse@@Base+0x54ac>
  43cd4c:	add	x19, x25, #0x288
  43cd50:	mov	w9, #0x20                  	// #32
  43cd54:	strb	w9, [x25, #647]
  43cd58:	cbz	w21, 43cd80 <argp_parse@@Base+0x54d4>
  43cd5c:	tbnz	w23, #5, 43cd70 <argp_parse@@Base+0x54c4>
  43cd60:	cmp	w21, #0x1
  43cd64:	b.ne	43cd70 <argp_parse@@Base+0x54c4>  // b.any
  43cd68:	mov	w9, #0x6b                  	// #107
  43cd6c:	b	43cd7c <argp_parse@@Base+0x54d0>
  43cd70:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43cd74:	add	x9, x9, #0x338
  43cd78:	ldrb	w9, [x9, w21, sxtw]
  43cd7c:	strb	w9, [x19], #1
  43cd80:	cbz	w8, 43cd9c <argp_parse@@Base+0x54f0>
  43cd84:	tbz	w23, #5, 43cd94 <argp_parse@@Base+0x54e8>
  43cd88:	cbz	w21, 43cd94 <argp_parse@@Base+0x54e8>
  43cd8c:	mov	w8, #0x69                  	// #105
  43cd90:	strb	w8, [x19], #1
  43cd94:	mov	w8, #0x42                  	// #66
  43cd98:	strb	w8, [x19], #1
  43cd9c:	strb	wzr, [x19]
  43cda0:	mov	x0, x24
  43cda4:	ldp	x20, x19, [sp, #208]
  43cda8:	ldp	x22, x21, [sp, #192]
  43cdac:	ldp	x24, x23, [sp, #176]
  43cdb0:	ldp	x26, x25, [sp, #160]
  43cdb4:	ldp	x28, x27, [sp, #144]
  43cdb8:	ldp	x29, x30, [sp, #128]
  43cdbc:	add	sp, sp, #0xe0
  43cdc0:	ret
  43cdc4:	mov	w21, #0x8                   	// #8
  43cdc8:	and	w8, w23, #0x100
  43cdcc:	tbnz	w23, #6, 43cd44 <argp_parse@@Base+0x5498>
  43cdd0:	b	43cd58 <argp_parse@@Base+0x54ac>
  43cdd4:	stp	x29, x30, [sp, #-64]!
  43cdd8:	stp	x20, x19, [sp, #48]
  43cddc:	mov	x19, x2
  43cde0:	mov	x20, x1
  43cde4:	str	x23, [sp, #16]
  43cde8:	stp	x22, x21, [sp, #32]
  43cdec:	mov	x29, sp
  43cdf0:	cbnz	x0, 43ce14 <argp_parse@@Base+0x5568>
  43cdf4:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43cdf8:	add	x0, x0, #0x2ec
  43cdfc:	bl	404a30 <getenv@plt>
  43ce00:	cbnz	x0, 43ce14 <argp_parse@@Base+0x5568>
  43ce04:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ce08:	add	x0, x0, #0x2f7
  43ce0c:	bl	404a30 <getenv@plt>
  43ce10:	cbz	x0, 43cf0c <argp_parse@@Base+0x5660>
  43ce14:	mov	x8, x0
  43ce18:	ldrb	w9, [x8], #1
  43ce1c:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ce20:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ce24:	add	x22, x22, #0x360
  43ce28:	cmp	w9, #0x27
  43ce2c:	csel	x21, x8, x0, eq  // eq = none
  43ce30:	cset	w9, eq  // eq = none
  43ce34:	add	x1, x1, #0x348
  43ce38:	mov	w3, #0x4                   	// #4
  43ce3c:	mov	x0, x21
  43ce40:	mov	x2, x22
  43ce44:	lsl	w23, w9, #2
  43ce48:	bl	4343e8 <wcrtomb@plt+0x2f8a8>
  43ce4c:	tbnz	w0, #31, 43ceac <argp_parse@@Base+0x5600>
  43ce50:	sbfiz	x8, x0, #2, #32
  43ce54:	ldr	w8, [x22, x8]
  43ce58:	mov	w9, #0x1                   	// #1
  43ce5c:	str	x9, [x19]
  43ce60:	orr	w23, w8, w23
  43ce64:	mov	w0, wzr
  43ce68:	str	w23, [x20]
  43ce6c:	ldr	x8, [x19]
  43ce70:	cbnz	x8, 43ce98 <argp_parse@@Base+0x55ec>
  43ce74:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ce78:	add	x0, x0, #0x325
  43ce7c:	bl	404a30 <getenv@plt>
  43ce80:	cmp	x0, #0x0
  43ce84:	mov	w8, #0x200                 	// #512
  43ce88:	mov	w9, #0x400                 	// #1024
  43ce8c:	csel	x8, x9, x8, eq  // eq = none
  43ce90:	mov	w0, #0x4                   	// #4
  43ce94:	str	x8, [x19]
  43ce98:	ldp	x20, x19, [sp, #48]
  43ce9c:	ldp	x22, x21, [sp, #32]
  43cea0:	ldr	x23, [sp, #16]
  43cea4:	ldp	x29, x30, [sp], #64
  43cea8:	ret
  43ceac:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ceb0:	add	x4, x4, #0x301
  43ceb4:	add	x1, x29, #0x18
  43ceb8:	mov	x0, x21
  43cebc:	mov	w2, wzr
  43cec0:	mov	x3, x19
  43cec4:	bl	445d5c <argp_parse@@Base+0xe4b0>
  43cec8:	cbz	w0, 43cedc <argp_parse@@Base+0x5630>
  43cecc:	str	wzr, [x20]
  43ced0:	ldr	x8, [x19]
  43ced4:	cbnz	x8, 43ce98 <argp_parse@@Base+0x55ec>
  43ced8:	b	43ce74 <argp_parse@@Base+0x55c8>
  43cedc:	ldrb	w8, [x21]
  43cee0:	sub	w8, w8, #0x30
  43cee4:	cmp	w8, #0xa
  43cee8:	b.cc	43ce64 <argp_parse@@Base+0x55b8>  // b.lo, b.ul, b.last
  43ceec:	ldr	x8, [x29, #24]
  43cef0:	cmp	x8, x21
  43cef4:	b.eq	43cf34 <argp_parse@@Base+0x5688>  // b.none
  43cef8:	ldrb	w9, [x21, #1]!
  43cefc:	sub	w9, w9, #0x30
  43cf00:	cmp	w9, #0xa
  43cf04:	b.cs	43cef0 <argp_parse@@Base+0x5644>  // b.hs, b.nlast
  43cf08:	b	43ce64 <argp_parse@@Base+0x55b8>
  43cf0c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43cf10:	add	x0, x0, #0x325
  43cf14:	bl	404a30 <getenv@plt>
  43cf18:	cmp	x0, #0x0
  43cf1c:	mov	w8, #0x200                 	// #512
  43cf20:	mov	w9, #0x400                 	// #1024
  43cf24:	csel	x8, x9, x8, eq  // eq = none
  43cf28:	mov	w23, wzr
  43cf2c:	str	x8, [x19]
  43cf30:	b	43ce64 <argp_parse@@Base+0x55b8>
  43cf34:	ldurb	w9, [x8, #-1]
  43cf38:	orr	w10, w23, #0x80
  43cf3c:	orr	w23, w23, #0x180
  43cf40:	cmp	w9, #0x42
  43cf44:	csel	w9, w23, w10, eq  // eq = none
  43cf48:	b.ne	43cf58 <argp_parse@@Base+0x56ac>  // b.any
  43cf4c:	ldurb	w8, [x8, #-2]
  43cf50:	cmp	w8, #0x69
  43cf54:	b.ne	43ce64 <argp_parse@@Base+0x55b8>  // b.any
  43cf58:	orr	w23, w9, #0x20
  43cf5c:	b	43ce64 <argp_parse@@Base+0x55b8>
  43cf60:	mov	x8, x0
  43cf64:	mov	x0, x1
  43cf68:	strb	wzr, [x0, #20]!
  43cf6c:	tbnz	x8, #63, 43cfa8 <argp_parse@@Base+0x56fc>
  43cf70:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  43cf74:	movk	x9, #0x6667
  43cf78:	mov	w10, #0xa                   	// #10
  43cf7c:	smulh	x11, x8, x9
  43cf80:	asr	x13, x11, #2
  43cf84:	add	x11, x13, x11, lsr #63
  43cf88:	add	x12, x8, #0x9
  43cf8c:	msub	w8, w11, w10, w8
  43cf90:	add	w8, w8, #0x30
  43cf94:	cmp	x12, #0x12
  43cf98:	strb	w8, [x0, #-1]!
  43cf9c:	mov	x8, x11
  43cfa0:	b.hi	43cf7c <argp_parse@@Base+0x56d0>  // b.pmore
  43cfa4:	ret
  43cfa8:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  43cfac:	add	x0, x1, #0x13
  43cfb0:	movk	x9, #0x6667
  43cfb4:	mov	w10, #0xa                   	// #10
  43cfb8:	smulh	x11, x8, x9
  43cfbc:	asr	x13, x11, #2
  43cfc0:	neg	w12, w8
  43cfc4:	add	x11, x13, x11, lsr #63
  43cfc8:	madd	w12, w11, w10, w12
  43cfcc:	add	x8, x8, #0x9
  43cfd0:	add	w12, w12, #0x30
  43cfd4:	cmp	x8, #0x12
  43cfd8:	strb	w12, [x0], #-1
  43cfdc:	mov	x8, x11
  43cfe0:	b.hi	43cfb8 <argp_parse@@Base+0x570c>  // b.pmore
  43cfe4:	mov	w8, #0x2d                  	// #45
  43cfe8:	strb	w8, [x0]
  43cfec:	ret
  43cff0:	mov	x8, x0
  43cff4:	mov	x0, x1
  43cff8:	strb	wzr, [x0, #20]!
  43cffc:	tbnz	x8, #63, 43d038 <argp_parse@@Base+0x578c>
  43d000:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  43d004:	movk	x9, #0x6667
  43d008:	mov	w10, #0xa                   	// #10
  43d00c:	smulh	x11, x8, x9
  43d010:	asr	x13, x11, #2
  43d014:	add	x11, x13, x11, lsr #63
  43d018:	add	x12, x8, #0x9
  43d01c:	msub	w8, w11, w10, w8
  43d020:	add	w8, w8, #0x30
  43d024:	cmp	x12, #0x12
  43d028:	strb	w8, [x0, #-1]!
  43d02c:	mov	x8, x11
  43d030:	b.hi	43d00c <argp_parse@@Base+0x5760>  // b.pmore
  43d034:	ret
  43d038:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  43d03c:	add	x0, x1, #0x13
  43d040:	movk	x9, #0x6667
  43d044:	mov	w10, #0xa                   	// #10
  43d048:	smulh	x11, x8, x9
  43d04c:	asr	x13, x11, #2
  43d050:	neg	w12, w8
  43d054:	add	x11, x13, x11, lsr #63
  43d058:	madd	w12, w11, w10, w12
  43d05c:	add	x8, x8, #0x9
  43d060:	add	w12, w12, #0x30
  43d064:	cmp	x8, #0x12
  43d068:	strb	w12, [x0], #-1
  43d06c:	mov	x8, x11
  43d070:	b.hi	43d048 <argp_parse@@Base+0x579c>  // b.pmore
  43d074:	mov	w8, #0x2d                  	// #45
  43d078:	strb	w8, [x0]
  43d07c:	ret
  43d080:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  43d084:	movk	x8, #0xcccd
  43d088:	strb	wzr, [x1, #20]!
  43d08c:	mov	w9, #0xa                   	// #10
  43d090:	umulh	x10, x0, x8
  43d094:	lsr	x10, x10, #3
  43d098:	msub	w11, w10, w9, w0
  43d09c:	orr	w11, w11, #0x30
  43d0a0:	cmp	x0, #0x9
  43d0a4:	strb	w11, [x1, #-1]!
  43d0a8:	mov	x0, x10
  43d0ac:	b.hi	43d090 <argp_parse@@Base+0x57e4>  // b.pmore
  43d0b0:	mov	x0, x1
  43d0b4:	ret
  43d0b8:	stp	x29, x30, [sp, #-16]!
  43d0bc:	mov	w0, #0xe                   	// #14
  43d0c0:	mov	x29, sp
  43d0c4:	bl	404210 <nl_langinfo@plt>
  43d0c8:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  43d0cc:	add	x8, x8, #0x66
  43d0d0:	cmp	x0, #0x0
  43d0d4:	csel	x8, x8, x0, eq  // eq = none
  43d0d8:	ldrb	w9, [x8]
  43d0dc:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d0e0:	add	x10, x10, #0x368
  43d0e4:	cmp	w9, #0x0
  43d0e8:	csel	x0, x10, x8, eq  // eq = none
  43d0ec:	ldp	x29, x30, [sp], #16
  43d0f0:	ret
  43d0f4:	sub	sp, sp, #0xc0
  43d0f8:	cmp	x0, x1
  43d0fc:	stp	x29, x30, [sp, #128]
  43d100:	str	x23, [sp, #144]
  43d104:	stp	x22, x21, [sp, #160]
  43d108:	stp	x20, x19, [sp, #176]
  43d10c:	add	x29, sp, #0x80
  43d110:	b.eq	43d1ec <argp_parse@@Base+0x5940>  // b.none
  43d114:	mov	x19, x1
  43d118:	mov	x20, x0
  43d11c:	bl	404730 <__ctype_get_mb_cur_max@plt>
  43d120:	cmp	x0, #0x1
  43d124:	b.ls	43d1f4 <argp_parse@@Base+0x5948>  // b.plast
  43d128:	str	x20, [sp, #80]
  43d12c:	strb	wzr, [sp, #64]
  43d130:	stur	xzr, [sp, #68]
  43d134:	strb	wzr, [sp, #76]
  43d138:	str	x19, [sp, #16]
  43d13c:	strb	wzr, [sp]
  43d140:	stur	xzr, [sp, #4]
  43d144:	add	x0, sp, #0x40
  43d148:	strb	wzr, [sp, #12]
  43d14c:	bl	43d2f8 <argp_parse@@Base+0x5a4c>
  43d150:	ldrb	w8, [sp, #96]
  43d154:	cbz	w8, 43d160 <argp_parse@@Base+0x58b4>
  43d158:	ldr	w8, [sp, #100]
  43d15c:	cbz	w8, 43d250 <argp_parse@@Base+0x59a4>
  43d160:	mov	x0, sp
  43d164:	bl	43d2f8 <argp_parse@@Base+0x5a4c>
  43d168:	ldrb	w8, [sp, #32]
  43d16c:	cbz	w8, 43d178 <argp_parse@@Base+0x58cc>
  43d170:	ldr	w9, [sp, #36]
  43d174:	cbz	w9, 43d250 <argp_parse@@Base+0x59a4>
  43d178:	ldrb	w9, [sp, #96]
  43d17c:	cbz	w9, 43d1a8 <argp_parse@@Base+0x58fc>
  43d180:	cbz	w8, 43d2ac <argp_parse@@Base+0x5a00>
  43d184:	ldr	w0, [sp, #100]
  43d188:	bl	404ab0 <towlower@plt>
  43d18c:	ldr	w8, [sp, #36]
  43d190:	mov	w19, w0
  43d194:	mov	w0, w8
  43d198:	bl	404ab0 <towlower@plt>
  43d19c:	sub	w0, w19, w0
  43d1a0:	cbz	w0, 43d1cc <argp_parse@@Base+0x5920>
  43d1a4:	b	43d294 <argp_parse@@Base+0x59e8>
  43d1a8:	cbnz	w8, 43d2b4 <argp_parse@@Base+0x5a08>
  43d1ac:	ldr	x2, [sp, #88]
  43d1b0:	ldr	x8, [sp, #24]
  43d1b4:	cmp	x2, x8
  43d1b8:	b.ne	43d2bc <argp_parse@@Base+0x5a10>  // b.any
  43d1bc:	ldr	x0, [sp, #80]
  43d1c0:	ldr	x1, [sp, #16]
  43d1c4:	bl	404620 <memcmp@plt>
  43d1c8:	cbnz	w0, 43d294 <argp_parse@@Base+0x59e8>
  43d1cc:	ldp	x9, x8, [sp, #80]
  43d1d0:	ldp	x11, x10, [sp, #16]
  43d1d4:	strb	wzr, [sp, #76]
  43d1d8:	add	x8, x9, x8
  43d1dc:	add	x9, x11, x10
  43d1e0:	str	x8, [sp, #80]
  43d1e4:	str	x9, [sp, #16]
  43d1e8:	b	43d144 <argp_parse@@Base+0x5898>
  43d1ec:	mov	w0, wzr
  43d1f0:	b	43d294 <argp_parse@@Base+0x59e8>
  43d1f4:	bl	404690 <__ctype_b_loc@plt>
  43d1f8:	ldr	x22, [x0]
  43d1fc:	ldrb	w21, [x20]
  43d200:	ldrh	w8, [x22, x21, lsl #1]
  43d204:	tbz	w8, #8, 43d218 <argp_parse@@Base+0x596c>
  43d208:	bl	404140 <__ctype_tolower_loc@plt>
  43d20c:	ldr	x8, [x0]
  43d210:	lsl	x9, x21, #2
  43d214:	ldrb	w21, [x8, x9]
  43d218:	ldrb	w23, [x19]
  43d21c:	ldrh	w8, [x22, x23, lsl #1]
  43d220:	tbz	w8, #8, 43d234 <argp_parse@@Base+0x5988>
  43d224:	bl	404140 <__ctype_tolower_loc@plt>
  43d228:	ldr	x8, [x0]
  43d22c:	lsl	x9, x23, #2
  43d230:	ldrb	w23, [x8, x9]
  43d234:	cbz	w21, 43d248 <argp_parse@@Base+0x599c>
  43d238:	add	x20, x20, #0x1
  43d23c:	cmp	w21, w23
  43d240:	add	x19, x19, #0x1
  43d244:	b.eq	43d1fc <argp_parse@@Base+0x5950>  // b.none
  43d248:	sub	w0, w21, w23
  43d24c:	b	43d294 <argp_parse@@Base+0x59e8>
  43d250:	add	x0, sp, #0x40
  43d254:	bl	43d2f8 <argp_parse@@Base+0x5a4c>
  43d258:	ldrb	w8, [sp, #96]
  43d25c:	mov	w0, #0x1                   	// #1
  43d260:	cbz	w8, 43d294 <argp_parse@@Base+0x59e8>
  43d264:	ldr	w8, [sp, #100]
  43d268:	cbnz	w8, 43d294 <argp_parse@@Base+0x59e8>
  43d26c:	mov	x0, sp
  43d270:	bl	43d2f8 <argp_parse@@Base+0x5a4c>
  43d274:	ldrb	w8, [sp, #32]
  43d278:	ldr	w9, [sp, #36]
  43d27c:	cmp	w8, #0x0
  43d280:	cset	w8, eq  // eq = none
  43d284:	cmp	w9, #0x0
  43d288:	cset	w9, ne  // ne = any
  43d28c:	orr	w8, w8, w9
  43d290:	sbfx	w0, w8, #0, #1
  43d294:	ldp	x20, x19, [sp, #176]
  43d298:	ldp	x22, x21, [sp, #160]
  43d29c:	ldr	x23, [sp, #144]
  43d2a0:	ldp	x29, x30, [sp, #128]
  43d2a4:	add	sp, sp, #0xc0
  43d2a8:	ret
  43d2ac:	mov	w0, #0xffffffff            	// #-1
  43d2b0:	b	43d294 <argp_parse@@Base+0x59e8>
  43d2b4:	mov	w0, #0x1                   	// #1
  43d2b8:	b	43d294 <argp_parse@@Base+0x59e8>
  43d2bc:	ldr	x0, [sp, #80]
  43d2c0:	ldr	x1, [sp, #16]
  43d2c4:	cmp	x2, x8
  43d2c8:	b.cs	43d2e0 <argp_parse@@Base+0x5a34>  // b.hs, b.nlast
  43d2cc:	bl	404620 <memcmp@plt>
  43d2d0:	cmp	w0, #0x1
  43d2d4:	mov	w8, #0xffffffff            	// #-1
  43d2d8:	cneg	w0, w8, ge  // ge = tcont
  43d2dc:	b	43d294 <argp_parse@@Base+0x59e8>
  43d2e0:	mov	x2, x8
  43d2e4:	bl	404620 <memcmp@plt>
  43d2e8:	cmp	w0, #0x0
  43d2ec:	mov	w8, #0x1                   	// #1
  43d2f0:	cneg	w0, w8, lt  // lt = tstop
  43d2f4:	b	43d294 <argp_parse@@Base+0x59e8>
  43d2f8:	stp	x29, x30, [sp, #-48]!
  43d2fc:	stp	x22, x21, [sp, #16]
  43d300:	stp	x20, x19, [sp, #32]
  43d304:	ldrb	w8, [x0, #12]
  43d308:	mov	x29, sp
  43d30c:	cbnz	w8, 43d3f8 <argp_parse@@Base+0x5b4c>
  43d310:	ldrb	w8, [x0]
  43d314:	ldr	x20, [x0, #16]
  43d318:	mov	x19, x0
  43d31c:	cbz	w8, 43d370 <argp_parse@@Base+0x5ac4>
  43d320:	add	x22, x19, #0x24
  43d324:	bl	404730 <__ctype_get_mb_cur_max@plt>
  43d328:	mov	x1, x0
  43d32c:	mov	x0, x20
  43d330:	bl	445298 <argp_parse@@Base+0xd9ec>
  43d334:	add	x21, x19, #0x4
  43d338:	mov	x2, x0
  43d33c:	mov	x0, x22
  43d340:	mov	x1, x20
  43d344:	mov	x3, x21
  43d348:	bl	446778 <argp_parse@@Base+0xeecc>
  43d34c:	cmn	x0, #0x2
  43d350:	str	x0, [x19, #24]
  43d354:	b.eq	43d3e0 <argp_parse@@Base+0x5b34>  // b.none
  43d358:	cbz	x0, 43d3a8 <argp_parse@@Base+0x5afc>
  43d35c:	cmn	x0, #0x1
  43d360:	b.ne	43d3c4 <argp_parse@@Base+0x5b18>  // b.any
  43d364:	mov	w8, #0x1                   	// #1
  43d368:	str	x8, [x19, #24]
  43d36c:	b	43d3ec <argp_parse@@Base+0x5b40>
  43d370:	ldrb	w8, [x20]
  43d374:	adrp	x10, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  43d378:	add	x10, x10, #0xed0
  43d37c:	lsr	w9, w8, #3
  43d380:	and	x9, x9, #0x1c
  43d384:	ldr	w9, [x10, x9]
  43d388:	lsr	w8, w9, w8
  43d38c:	tbz	w8, #0, 43d408 <argp_parse@@Base+0x5b5c>
  43d390:	mov	w8, #0x1                   	// #1
  43d394:	str	x8, [x19, #24]
  43d398:	ldrb	w9, [x20]
  43d39c:	strb	w8, [x19, #32]
  43d3a0:	str	w9, [x19, #36]
  43d3a4:	b	43d3f0 <argp_parse@@Base+0x5b44>
  43d3a8:	ldr	x8, [x19, #16]
  43d3ac:	mov	w9, #0x1                   	// #1
  43d3b0:	str	x9, [x19, #24]
  43d3b4:	ldrb	w8, [x8]
  43d3b8:	cbnz	w8, 43d420 <argp_parse@@Base+0x5b74>
  43d3bc:	ldr	w8, [x22]
  43d3c0:	cbnz	w8, 43d440 <argp_parse@@Base+0x5b94>
  43d3c4:	mov	w8, #0x1                   	// #1
  43d3c8:	mov	x0, x21
  43d3cc:	strb	w8, [x19, #32]
  43d3d0:	bl	4045d0 <mbsinit@plt>
  43d3d4:	cbz	w0, 43d3f0 <argp_parse@@Base+0x5b44>
  43d3d8:	strb	wzr, [x19]
  43d3dc:	b	43d3f0 <argp_parse@@Base+0x5b44>
  43d3e0:	ldr	x0, [x19, #16]
  43d3e4:	bl	403f40 <strlen@plt>
  43d3e8:	str	x0, [x19, #24]
  43d3ec:	strb	wzr, [x19, #32]
  43d3f0:	mov	w8, #0x1                   	// #1
  43d3f4:	strb	w8, [x19, #12]
  43d3f8:	ldp	x20, x19, [sp, #32]
  43d3fc:	ldp	x22, x21, [sp, #16]
  43d400:	ldp	x29, x30, [sp], #48
  43d404:	ret
  43d408:	add	x0, x19, #0x4
  43d40c:	bl	4045d0 <mbsinit@plt>
  43d410:	cbz	w0, 43d460 <argp_parse@@Base+0x5bb4>
  43d414:	mov	w8, #0x1                   	// #1
  43d418:	strb	w8, [x19]
  43d41c:	b	43d320 <argp_parse@@Base+0x5a74>
  43d420:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d424:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d428:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d42c:	add	x0, x0, #0x3c1
  43d430:	add	x1, x1, #0x385
  43d434:	add	x3, x3, #0x391
  43d438:	mov	w2, #0xb2                  	// #178
  43d43c:	bl	404a00 <__assert_fail@plt>
  43d440:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d444:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d448:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d44c:	add	x0, x0, #0x3d8
  43d450:	add	x1, x1, #0x385
  43d454:	add	x3, x3, #0x391
  43d458:	mov	w2, #0xb3                  	// #179
  43d45c:	bl	404a00 <__assert_fail@plt>
  43d460:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d464:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d468:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d46c:	add	x0, x0, #0x36e
  43d470:	add	x1, x1, #0x385
  43d474:	add	x3, x3, #0x391
  43d478:	mov	w2, #0x96                  	// #150
  43d47c:	bl	404a00 <__assert_fail@plt>
  43d480:	ldr	x8, [x0, #16]
  43d484:	add	x8, x8, x1
  43d488:	str	x8, [x0, #16]
  43d48c:	ret
  43d490:	stp	x29, x30, [sp, #-48]!
  43d494:	stp	x20, x19, [sp, #32]
  43d498:	ldrb	w8, [x1]
  43d49c:	mov	x19, x1
  43d4a0:	mov	x20, x0
  43d4a4:	str	x21, [sp, #16]
  43d4a8:	mov	x29, sp
  43d4ac:	strb	w8, [x0]
  43d4b0:	cbz	w8, 43d4c0 <argp_parse@@Base+0x5c14>
  43d4b4:	ldur	x8, [x19, #4]
  43d4b8:	stur	x8, [x20, #4]
  43d4bc:	b	43d4c4 <argp_parse@@Base+0x5c18>
  43d4c0:	stur	xzr, [x20, #4]
  43d4c4:	ldrb	w8, [x19, #12]
  43d4c8:	strb	w8, [x20, #12]
  43d4cc:	ldr	x1, [x19, #16]
  43d4d0:	add	x8, x19, #0x28
  43d4d4:	cmp	x1, x8
  43d4d8:	b.ne	43d4f0 <argp_parse@@Base+0x5c44>  // b.any
  43d4dc:	ldr	x2, [x19, #24]
  43d4e0:	add	x21, x20, #0x28
  43d4e4:	mov	x0, x21
  43d4e8:	bl	403ec0 <memcpy@plt>
  43d4ec:	mov	x1, x21
  43d4f0:	str	x1, [x20, #16]
  43d4f4:	ldr	x8, [x19, #24]
  43d4f8:	str	x8, [x20, #24]
  43d4fc:	ldrb	w8, [x19, #32]
  43d500:	strb	w8, [x20, #32]
  43d504:	cbz	w8, 43d510 <argp_parse@@Base+0x5c64>
  43d508:	ldr	w8, [x19, #36]
  43d50c:	str	w8, [x20, #36]
  43d510:	ldp	x20, x19, [sp, #32]
  43d514:	ldr	x21, [sp, #16]
  43d518:	ldp	x29, x30, [sp], #48
  43d51c:	ret
  43d520:	stp	x29, x30, [sp, #-48]!
  43d524:	stp	x20, x19, [sp, #32]
  43d528:	ldrb	w10, [x0]
  43d52c:	mov	x19, x0
  43d530:	str	x21, [sp, #16]
  43d534:	mov	x29, sp
  43d538:	and	w8, w10, #0xf8
  43d53c:	cmp	w8, #0x30
  43d540:	b.ne	43d5b4 <argp_parse@@Base+0x5d08>  // b.any
  43d544:	mov	w20, wzr
  43d548:	mov	x8, x19
  43d54c:	lsl	w9, w20, #3
  43d550:	add	w9, w9, w10, uxtb
  43d554:	sub	w20, w9, #0x30
  43d558:	cmp	w20, #0xfff
  43d55c:	b.hi	43d844 <argp_parse@@Base+0x5f98>  // b.pmore
  43d560:	ldrb	w10, [x8, #1]
  43d564:	add	x9, x8, #0x1
  43d568:	and	w8, w10, #0xf8
  43d56c:	cmp	w8, #0x30
  43d570:	mov	x8, x9
  43d574:	b.eq	43d54c <argp_parse@@Base+0x5ca0>  // b.none
  43d578:	cbnz	w10, 43d844 <argp_parse@@Base+0x5f98>
  43d57c:	sub	x8, x9, x19
  43d580:	and	w9, w20, #0xc00
  43d584:	orr	w9, w9, #0x3ff
  43d588:	cmp	x8, #0x5
  43d58c:	mov	w19, #0xfff                 	// #4095
  43d590:	mov	w0, #0x20                  	// #32
  43d594:	csel	w21, w9, w19, lt  // lt = tstop
  43d598:	bl	4459e8 <argp_parse@@Base+0xe13c>
  43d59c:	mov	w8, #0x13d                 	// #317
  43d5a0:	stp	w19, w20, [x0, #4]
  43d5a4:	str	w21, [x0, #12]
  43d5a8:	strh	w8, [x0]
  43d5ac:	strb	wzr, [x0, #17]
  43d5b0:	b	43d848 <argp_parse@@Base+0x5f9c>
  43d5b4:	mov	w9, #0x1                   	// #1
  43d5b8:	mov	w8, #0x1                   	// #1
  43d5bc:	b	43d5d0 <argp_parse@@Base+0x5d24>
  43d5c0:	mov	w11, #0x1                   	// #1
  43d5c4:	ldrb	w10, [x19, x9]
  43d5c8:	add	x8, x11, x8
  43d5cc:	add	x9, x9, #0x1
  43d5d0:	and	w10, w10, #0xff
  43d5d4:	cmp	w10, #0x2c
  43d5d8:	b.le	43d5f4 <argp_parse@@Base+0x5d48>
  43d5dc:	cmp	w10, #0x2d
  43d5e0:	b.eq	43d5c0 <argp_parse@@Base+0x5d14>  // b.none
  43d5e4:	cmp	w10, #0x3d
  43d5e8:	mov	w11, #0x1                   	// #1
  43d5ec:	b.eq	43d5c4 <argp_parse@@Base+0x5d18>  // b.none
  43d5f0:	b	43d604 <argp_parse@@Base+0x5d58>
  43d5f4:	cmp	w10, #0x2b
  43d5f8:	mov	w11, #0x1                   	// #1
  43d5fc:	b.eq	43d5c4 <argp_parse@@Base+0x5d18>  // b.none
  43d600:	cbz	w10, 43d60c <argp_parse@@Base+0x5d60>
  43d604:	mov	x11, xzr
  43d608:	b	43d5c4 <argp_parse@@Base+0x5d18>
  43d60c:	lsr	x9, x8, #59
  43d610:	cbnz	x9, 43d858 <argp_parse@@Base+0x5fac>
  43d614:	lsl	x0, x8, #4
  43d618:	bl	4459e8 <argp_parse@@Base+0xe13c>
  43d61c:	mov	x9, #0x280000000000        	// #43980465111040
  43d620:	adrp	x10, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d624:	adrp	x11, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d628:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d62c:	mov	x16, xzr
  43d630:	mov	w8, #0x1                   	// #1
  43d634:	movk	x9, #0x2000, lsl #48
  43d638:	add	x10, x10, #0x420
  43d63c:	add	x11, x11, #0x3ff
  43d640:	mov	w12, #0x124                 	// #292
  43d644:	mov	w13, #0x92                  	// #146
  43d648:	mov	w14, #0x49                  	// #73
  43d64c:	add	x15, x15, #0x3ea
  43d650:	mov	w17, wzr
  43d654:	b	43d664 <argp_parse@@Base+0x5db8>
  43d658:	mov	w18, #0xfff                 	// #4095
  43d65c:	orr	w17, w17, w18
  43d660:	add	x19, x19, #0x1
  43d664:	ldrb	w18, [x19]
  43d668:	sub	w1, w18, #0x61
  43d66c:	cmp	w1, #0x14
  43d670:	b.hi	43d698 <argp_parse@@Base+0x5dec>  // b.pmore
  43d674:	adr	x2, 43d658 <argp_parse@@Base+0x5dac>
  43d678:	ldrb	w18, [x15, x1]
  43d67c:	add	x2, x2, x18, lsl #2
  43d680:	mov	w18, #0x9c0                 	// #2496
  43d684:	br	x2
  43d688:	mov	w18, #0x438                 	// #1080
  43d68c:	b	43d65c <argp_parse@@Base+0x5db0>
  43d690:	mov	w18, #0x207                 	// #519
  43d694:	b	43d65c <argp_parse@@Base+0x5db0>
  43d698:	cmp	w18, #0x3d
  43d69c:	b.hi	43d840 <argp_parse@@Base+0x5f94>  // b.pmore
  43d6a0:	lsl	x1, x8, x18
  43d6a4:	tst	x1, x9
  43d6a8:	b.eq	43d840 <argp_parse@@Base+0x5f94>  // b.none
  43d6ac:	mov	x4, x19
  43d6b0:	ldrb	w3, [x4, #1]!
  43d6b4:	sub	w1, w3, #0x30
  43d6b8:	cmp	w1, #0x8
  43d6bc:	b.cs	43d710 <argp_parse@@Base+0x5e64>  // b.hs, b.nlast
  43d6c0:	mov	w1, wzr
  43d6c4:	lsl	w1, w1, #3
  43d6c8:	add	w1, w1, w3, uxtb
  43d6cc:	sub	w1, w1, #0x30
  43d6d0:	cmp	w1, #0xfff
  43d6d4:	b.hi	43d840 <argp_parse@@Base+0x5f94>  // b.pmore
  43d6d8:	ldrb	w3, [x4, #1]
  43d6dc:	add	x19, x4, #0x1
  43d6e0:	mov	x4, x19
  43d6e4:	and	w2, w3, #0xf8
  43d6e8:	cmp	w2, #0x30
  43d6ec:	b.eq	43d6c4 <argp_parse@@Base+0x5e18>  // b.none
  43d6f0:	cbnz	w17, 43d840 <argp_parse@@Base+0x5f94>
  43d6f4:	mov	w2, #0x1                   	// #1
  43d6f8:	mov	w17, #0xfff                 	// #4095
  43d6fc:	cbz	w3, 43d73c <argp_parse@@Base+0x5e90>
  43d700:	cmp	w3, #0x2c
  43d704:	mov	w3, #0xfff                 	// #4095
  43d708:	b.eq	43d7d4 <argp_parse@@Base+0x5f28>  // b.none
  43d70c:	b	43d840 <argp_parse@@Base+0x5f94>
  43d710:	cmp	w3, #0x67
  43d714:	b.eq	43d744 <argp_parse@@Base+0x5e98>  // b.none
  43d718:	cmp	w3, #0x6f
  43d71c:	b.eq	43d758 <argp_parse@@Base+0x5eac>  // b.none
  43d720:	cmp	w3, #0x75
  43d724:	b.ne	43d76c <argp_parse@@Base+0x5ec0>  // b.any
  43d728:	mov	w3, wzr
  43d72c:	add	x19, x19, #0x2
  43d730:	mov	w2, #0x3                   	// #3
  43d734:	mov	w1, #0x1c0                 	// #448
  43d738:	b	43d7d4 <argp_parse@@Base+0x5f28>
  43d73c:	mov	w3, #0xfff                 	// #4095
  43d740:	b	43d7d4 <argp_parse@@Base+0x5f28>
  43d744:	mov	w3, wzr
  43d748:	add	x19, x19, #0x2
  43d74c:	mov	w2, #0x3                   	// #3
  43d750:	mov	w1, #0x38                  	// #56
  43d754:	b	43d7d4 <argp_parse@@Base+0x5f28>
  43d758:	mov	w3, wzr
  43d75c:	add	x19, x19, #0x2
  43d760:	mov	w2, #0x3                   	// #3
  43d764:	mov	w1, #0x7                   	// #7
  43d768:	b	43d7d4 <argp_parse@@Base+0x5f28>
  43d76c:	mov	w1, wzr
  43d770:	mov	w2, #0x1                   	// #1
  43d774:	mov	x19, x4
  43d778:	b	43d78c <argp_parse@@Base+0x5ee0>
  43d77c:	orr	w1, w1, w14
  43d780:	mov	w4, w2
  43d784:	ldrb	w3, [x19, #1]!
  43d788:	mov	w2, w4
  43d78c:	and	w3, w3, #0xff
  43d790:	sub	w3, w3, #0x58
  43d794:	cmp	w3, #0x20
  43d798:	b.hi	43d7d0 <argp_parse@@Base+0x5f24>  // b.pmore
  43d79c:	adr	x5, 43d77c <argp_parse@@Base+0x5ed0>
  43d7a0:	ldrb	w4, [x11, x3]
  43d7a4:	add	x5, x5, x4, lsl #2
  43d7a8:	mov	w4, #0x2                   	// #2
  43d7ac:	br	x5
  43d7b0:	orr	w1, w1, w12
  43d7b4:	b	43d780 <argp_parse@@Base+0x5ed4>
  43d7b8:	orr	w1, w1, #0x200
  43d7bc:	b	43d780 <argp_parse@@Base+0x5ed4>
  43d7c0:	orr	w1, w1, #0xc00
  43d7c4:	b	43d780 <argp_parse@@Base+0x5ed4>
  43d7c8:	orr	w1, w1, w13
  43d7cc:	b	43d780 <argp_parse@@Base+0x5ed4>
  43d7d0:	mov	w3, wzr
  43d7d4:	add	x4, x0, x16, lsl #4
  43d7d8:	cmp	w17, #0x0
  43d7dc:	strb	w18, [x4]
  43d7e0:	csinv	w18, w17, wzr, ne  // ne = any
  43d7e4:	and	w18, w18, w1
  43d7e8:	cmp	w3, #0x0
  43d7ec:	csel	w18, w18, w3, eq  // eq = none
  43d7f0:	strb	w2, [x4, #1]
  43d7f4:	stp	w17, w1, [x4, #4]
  43d7f8:	str	w18, [x4, #12]
  43d7fc:	ldrb	w18, [x19]
  43d800:	add	x1, x16, #0x1
  43d804:	sub	w2, w18, #0x2b
  43d808:	cmp	w2, #0x12
  43d80c:	b.hi	43d830 <argp_parse@@Base+0x5f84>  // b.pmore
  43d810:	adr	x3, 43d6ac <argp_parse@@Base+0x5e00>
  43d814:	ldrb	w16, [x10, x2]
  43d818:	add	x3, x3, x16, lsl #2
  43d81c:	mov	x16, x1
  43d820:	br	x3
  43d824:	add	x19, x19, #0x1
  43d828:	mov	x16, x1
  43d82c:	b	43d650 <argp_parse@@Base+0x5da4>
  43d830:	cbnz	w18, 43d840 <argp_parse@@Base+0x5f94>
  43d834:	add	x8, x0, x1, lsl #4
  43d838:	strb	wzr, [x8, #1]
  43d83c:	b	43d848 <argp_parse@@Base+0x5f9c>
  43d840:	bl	404700 <free@plt>
  43d844:	mov	x0, xzr
  43d848:	ldp	x20, x19, [sp, #32]
  43d84c:	ldr	x21, [sp, #16]
  43d850:	ldp	x29, x30, [sp], #48
  43d854:	ret
  43d858:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  43d85c:	sub	sp, sp, #0xa0
  43d860:	mov	x1, x0
  43d864:	mov	x2, sp
  43d868:	mov	w0, wzr
  43d86c:	stp	x29, x30, [sp, #128]
  43d870:	str	x19, [sp, #144]
  43d874:	add	x29, sp, #0x80
  43d878:	bl	404a40 <__xstat@plt>
  43d87c:	cbz	w0, 43d888 <argp_parse@@Base+0x5fdc>
  43d880:	mov	x0, xzr
  43d884:	b	43d8ac <argp_parse@@Base+0x6000>
  43d888:	ldr	w19, [sp, #16]
  43d88c:	mov	w0, #0x20                  	// #32
  43d890:	bl	4459e8 <argp_parse@@Base+0xe13c>
  43d894:	mov	w8, #0x13d                 	// #317
  43d898:	mov	w9, #0xfff                 	// #4095
  43d89c:	strh	w8, [x0]
  43d8a0:	stp	w9, w19, [x0, #4]
  43d8a4:	str	w9, [x0, #12]
  43d8a8:	strb	wzr, [x0, #17]
  43d8ac:	ldr	x19, [sp, #144]
  43d8b0:	ldp	x29, x30, [sp, #128]
  43d8b4:	add	sp, sp, #0xa0
  43d8b8:	ret
  43d8bc:	ldrb	w17, [x3, #1]
  43d8c0:	and	w0, w0, #0xfff
  43d8c4:	mov	w8, wzr
  43d8c8:	cbz	w17, 43d9c4 <argp_parse@@Base+0x6118>
  43d8cc:	tst	w1, #0x1
  43d8d0:	mov	w14, #0xc00                 	// #3072
  43d8d4:	and	w9, w1, #0x1
  43d8d8:	mvn	w10, w2
  43d8dc:	add	x11, x3, #0x8
  43d8e0:	mov	w12, #0x49                  	// #73
  43d8e4:	mov	w13, #0x124                 	// #292
  43d8e8:	csel	w14, w14, wzr, ne  // ne = any
  43d8ec:	mov	w15, #0x92                  	// #146
  43d8f0:	b	43d908 <argp_parse@@Base+0x605c>
  43d8f4:	orr	w8, w18, w8
  43d8f8:	bic	w0, w0, w18
  43d8fc:	ldrb	w17, [x11, #9]
  43d900:	add	x11, x11, #0x10
  43d904:	cbz	w17, 43d9c4 <argp_parse@@Base+0x6118>
  43d908:	ldr	w2, [x11, #4]
  43d90c:	ldp	w16, w18, [x11, #-4]
  43d910:	and	w1, w17, #0xff
  43d914:	cmp	w1, #0x2
  43d918:	bic	w17, w14, w2
  43d91c:	b.eq	43d954 <argp_parse@@Base+0x60a8>  // b.none
  43d920:	cmp	w1, #0x3
  43d924:	b.ne	43d968 <argp_parse@@Base+0x60bc>  // b.any
  43d928:	and	w18, w18, w0
  43d92c:	tst	w18, w13
  43d930:	csel	w1, wzr, w13, eq  // eq = none
  43d934:	tst	w18, w15
  43d938:	csel	w2, wzr, w15, eq  // eq = none
  43d93c:	tst	w18, w12
  43d940:	orr	w18, w2, w18
  43d944:	csel	w3, wzr, w12, eq  // eq = none
  43d948:	orr	w18, w18, w1
  43d94c:	orr	w18, w18, w3
  43d950:	b	43d968 <argp_parse@@Base+0x60bc>
  43d954:	and	w1, w0, w12
  43d958:	orr	w1, w1, w9
  43d95c:	orr	w2, w18, w12
  43d960:	cmp	w1, #0x0
  43d964:	csel	w18, w18, w2, eq  // eq = none
  43d968:	ldurb	w1, [x11, #-8]
  43d96c:	cmp	w16, #0x0
  43d970:	csel	w2, w16, w10, ne  // ne = any
  43d974:	bic	w2, w2, w17
  43d978:	cmp	w1, #0x2b
  43d97c:	and	w18, w2, w18
  43d980:	b.eq	43d9b8 <argp_parse@@Base+0x610c>  // b.none
  43d984:	cmp	w1, #0x2d
  43d988:	b.eq	43d8f4 <argp_parse@@Base+0x6048>  // b.none
  43d98c:	cmp	w1, #0x3d
  43d990:	b.ne	43d8fc <argp_parse@@Base+0x6050>  // b.any
  43d994:	cmp	w16, #0x0
  43d998:	csinv	w16, wzr, w16, eq  // eq = none
  43d99c:	orr	w16, w16, w17
  43d9a0:	mvn	w17, w16
  43d9a4:	and	w16, w16, w0
  43d9a8:	and	w17, w17, #0xfff
  43d9ac:	orr	w8, w17, w8
  43d9b0:	orr	w0, w18, w16
  43d9b4:	b	43d8fc <argp_parse@@Base+0x6050>
  43d9b8:	orr	w8, w18, w8
  43d9bc:	orr	w0, w18, w0
  43d9c0:	b	43d8fc <argp_parse@@Base+0x6050>
  43d9c4:	cbz	x4, 43d9cc <argp_parse@@Base+0x6120>
  43d9c8:	str	w8, [x4]
  43d9cc:	ret
  43d9d0:	stp	x29, x30, [sp, #-32]!
  43d9d4:	stp	x20, x19, [sp, #16]
  43d9d8:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  43d9dc:	ldr	w19, [x8, #4064]
  43d9e0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43d9e4:	mov	w20, w0
  43d9e8:	add	x1, x1, #0x433
  43d9ec:	mov	w2, #0x5                   	// #5
  43d9f0:	mov	x0, xzr
  43d9f4:	mov	x29, sp
  43d9f8:	bl	404900 <dcgettext@plt>
  43d9fc:	mov	x2, x0
  43da00:	mov	w0, w19
  43da04:	mov	w1, w20
  43da08:	bl	403fa0 <error@plt>
  43da0c:	bl	4045b0 <abort@plt>
  43da10:	stp	x29, x30, [sp, #-32]!
  43da14:	stp	x20, x19, [sp, #16]
  43da18:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  43da1c:	ldr	w19, [x8, #4064]
  43da20:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43da24:	mov	w20, w0
  43da28:	add	x1, x1, #0x45e
  43da2c:	mov	w2, #0x5                   	// #5
  43da30:	mov	x0, xzr
  43da34:	mov	x29, sp
  43da38:	bl	404900 <dcgettext@plt>
  43da3c:	mov	x2, x0
  43da40:	mov	w0, w19
  43da44:	mov	w1, w20
  43da48:	bl	403fa0 <error@plt>
  43da4c:	bl	4045b0 <abort@plt>
  43da50:	stp	x29, x30, [sp, #-48]!
  43da54:	mov	w8, #0x4900                	// #18688
  43da58:	movk	w8, #0x8, lsl #16
  43da5c:	orr	w2, w2, w8
  43da60:	str	x21, [sp, #16]
  43da64:	stp	x20, x19, [sp, #32]
  43da68:	mov	x29, sp
  43da6c:	mov	x19, x3
  43da70:	bl	458818 <_obstack_memory_used@@Base+0x11cc8>
  43da74:	tbnz	w0, #31, 43da8c <argp_parse@@Base+0x61e0>
  43da78:	mov	w20, w0
  43da7c:	bl	404570 <fdopendir@plt>
  43da80:	cbz	x0, 43da94 <argp_parse@@Base+0x61e8>
  43da84:	str	w20, [x19]
  43da88:	b	43dab0 <argp_parse@@Base+0x6204>
  43da8c:	mov	x0, xzr
  43da90:	b	43dab0 <argp_parse@@Base+0x6204>
  43da94:	bl	404a10 <__errno_location@plt>
  43da98:	ldr	w21, [x0]
  43da9c:	mov	x19, x0
  43daa0:	mov	w0, w20
  43daa4:	bl	404520 <close@plt>
  43daa8:	mov	x0, xzr
  43daac:	str	w21, [x19]
  43dab0:	ldp	x20, x19, [sp, #32]
  43dab4:	ldr	x21, [sp, #16]
  43dab8:	ldp	x29, x30, [sp], #48
  43dabc:	ret
  43dac0:	stp	x29, x30, [sp, #-96]!
  43dac4:	stp	x28, x27, [sp, #16]
  43dac8:	stp	x26, x25, [sp, #32]
  43dacc:	stp	x24, x23, [sp, #48]
  43dad0:	stp	x22, x21, [sp, #64]
  43dad4:	stp	x20, x19, [sp, #80]
  43dad8:	mov	x29, sp
  43dadc:	sub	sp, sp, #0x570
  43dae0:	add	x9, x0, #0x50
  43dae4:	str	x9, [sp, #32]
  43dae8:	add	x9, x0, #0x58
  43daec:	str	x9, [sp, #48]
  43daf0:	add	x9, x0, #0x20
  43daf4:	str	x9, [sp, #40]
  43daf8:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43dafc:	add	x10, sp, #0xa0
  43db00:	ldr	q0, [x9, #1168]
  43db04:	add	x9, x10, #0x13
  43db08:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43db0c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43db10:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43db14:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43db18:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43db1c:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43db20:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43db24:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43db28:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43db2c:	str	x9, [sp, #128]
  43db30:	orr	x9, x10, #0x1
  43db34:	mov	x19, x0
  43db38:	mov	w8, wzr
  43db3c:	mov	x24, xzr
  43db40:	add	x23, sp, #0xe0
  43db44:	mov	w12, #0xfffffffe            	// #-2
  43db48:	add	x1, x1, #0x6e8
  43db4c:	add	x2, x2, #0x952
  43db50:	add	x3, x3, #0x9c4
  43db54:	mov	w4, #0x1                   	// #1
  43db58:	mov	w5, #0x38                  	// #56
  43db5c:	add	x6, x6, #0xa20
  43db60:	add	x7, x7, #0xa7c
  43db64:	sub	x30, x29, #0x30
  43db68:	add	x14, x14, #0x870
  43db6c:	add	x15, x15, #0xa96
  43db70:	add	x16, x16, #0x5fc
  43db74:	mov	w17, #0x30                  	// #48
  43db78:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43db7c:	add	x13, x13, #0x4a0
  43db80:	str	x9, [sp, #24]
  43db84:	orr	x9, x10, #0x2
  43db88:	stp	xzr, xzr, [sp, #96]
  43db8c:	str	xzr, [sp, #88]
  43db90:	str	xzr, [sp, #120]
  43db94:	sturh	wzr, [x29, #-48]
  43db98:	str	q0, [sp, #64]
  43db9c:	str	x9, [sp, #16]
  43dba0:	b	43dbb8 <argp_parse@@Base+0x630c>
  43dba4:	ldrsb	w8, [x15, x8]
  43dba8:	cmp	x24, #0x11
  43dbac:	add	x24, x24, #0x1
  43dbb0:	strh	w8, [x30, x24, lsl #1]
  43dbb4:	b.gt	43ff34 <argp_parse@@Base+0x8688>
  43dbb8:	cmp	w8, #0xc
  43dbbc:	b.eq	43ff2c <argp_parse@@Base+0x8680>  // b.none
  43dbc0:	sxtw	x20, w8
  43dbc4:	ldrsb	w25, [x1, x20]
  43dbc8:	cmn	w25, #0x5d
  43dbcc:	b.eq	43ea48 <argp_parse@@Base+0x719c>  // b.none
  43dbd0:	cmn	w12, #0x2
  43dbd4:	b.ne	43e9d8 <argp_parse@@Base+0x712c>  // b.any
  43dbd8:	ldr	x9, [x19]
  43dbdc:	b	43dbe8 <argp_parse@@Base+0x633c>
  43dbe0:	add	x9, x9, #0x1
  43dbe4:	str	x9, [x19]
  43dbe8:	ldrb	w11, [x9]
  43dbec:	sub	w8, w11, #0x9
  43dbf0:	cmp	w8, #0x5
  43dbf4:	b.cc	43dbe0 <argp_parse@@Base+0x6334>  // b.lo, b.ul, b.last
  43dbf8:	cmp	w11, #0x20
  43dbfc:	b.eq	43dbe0 <argp_parse@@Base+0x6334>  // b.none
  43dc00:	sub	w8, w11, #0x30
  43dc04:	cmp	w8, #0xa
  43dc08:	b.cs	43dc20 <argp_parse@@Base+0x6374>  // b.hs, b.nlast
  43dc0c:	cmp	w11, #0x2d
  43dc10:	b.eq	43dc3c <argp_parse@@Base+0x6390>  // b.none
  43dc14:	cmp	w11, #0x2b
  43dc18:	b.eq	43dc3c <argp_parse@@Base+0x6390>  // b.none
  43dc1c:	b	43dcc8 <argp_parse@@Base+0x641c>
  43dc20:	sub	w8, w11, #0x28
  43dc24:	cmp	w8, #0x52
  43dc28:	b.hi	43fac0 <argp_parse@@Base+0x8214>  // b.pmore
  43dc2c:	adr	x10, 43dc3c <argp_parse@@Base+0x6390>
  43dc30:	ldrh	w12, [x13, x8, lsl #1]
  43dc34:	add	x10, x10, x12, lsl #2
  43dc38:	br	x10
  43dc3c:	add	x9, x9, #0x1
  43dc40:	str	x9, [x19]
  43dc44:	ldrb	w8, [x9]
  43dc48:	sub	w10, w8, #0x9
  43dc4c:	cmp	w10, #0x5
  43dc50:	b.cc	43dc3c <argp_parse@@Base+0x6390>  // b.lo, b.ul, b.last
  43dc54:	cmp	w8, #0x20
  43dc58:	b.eq	43dc3c <argp_parse@@Base+0x6390>  // b.none
  43dc5c:	sub	w10, w8, #0x30
  43dc60:	cmp	w10, #0x9
  43dc64:	b.hi	43dbe8 <argp_parse@@Base+0x633c>  // b.pmore
  43dc68:	b	43dcb4 <argp_parse@@Base+0x6408>
  43dc6c:	mov	x8, xzr
  43dc70:	b	43dc7c <argp_parse@@Base+0x63d0>
  43dc74:	sub	x8, x8, #0x1
  43dc78:	cbz	x8, 43dbe8 <argp_parse@@Base+0x633c>
  43dc7c:	mov	x10, x9
  43dc80:	add	x9, x9, #0x1
  43dc84:	str	x9, [x19]
  43dc88:	ldrb	w10, [x10]
  43dc8c:	cmp	w10, #0x28
  43dc90:	b.eq	43dca8 <argp_parse@@Base+0x63fc>  // b.none
  43dc94:	cmp	w10, #0x29
  43dc98:	b.eq	43dc74 <argp_parse@@Base+0x63c8>  // b.none
  43dc9c:	cbz	w10, 43ea00 <argp_parse@@Base+0x7154>
  43dca0:	cbnz	x8, 43dc7c <argp_parse@@Base+0x63d0>
  43dca4:	b	43dbe8 <argp_parse@@Base+0x633c>
  43dca8:	add	x8, x8, #0x1
  43dcac:	cbnz	x8, 43dc7c <argp_parse@@Base+0x63d0>
  43dcb0:	b	43dbe8 <argp_parse@@Base+0x633c>
  43dcb4:	cmp	w11, #0x2d
  43dcb8:	mov	w10, #0xffffffff            	// #-1
  43dcbc:	cneg	w10, w10, ne  // ne = any
  43dcc0:	mov	w11, w8
  43dcc4:	b	43dccc <argp_parse@@Base+0x6420>
  43dcc8:	mov	w10, wzr
  43dccc:	mov	x8, xzr
  43dcd0:	add	x12, x9, #0x3
  43dcd4:	b	43dd00 <argp_parse@@Base+0x6454>
  43dcd8:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  43dcdc:	sub	x11, x11, x13
  43dce0:	cmp	x8, x11
  43dce4:	b.lt	43dd5c <argp_parse@@Base+0x64b0>  // b.tstop
  43dce8:	ldurb	w11, [x12, #-2]
  43dcec:	add	x8, x8, x13
  43dcf0:	add	x12, x12, #0x1
  43dcf4:	sub	w13, w11, #0x30
  43dcf8:	cmp	w13, #0xa
  43dcfc:	b.cs	43de88 <argp_parse@@Base+0x65dc>  // b.hs, b.nlast
  43dd00:	tbnz	x8, #63, 43dd18 <argp_parse@@Base+0x646c>
  43dd04:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
  43dd08:	movk	x13, #0xccc, lsl #48
  43dd0c:	cmp	x8, x13
  43dd10:	b.le	43dd2c <argp_parse@@Base+0x6480>
  43dd14:	b	43dd5c <argp_parse@@Base+0x64b0>
  43dd18:	mov	x13, #0x3333333333333333    	// #3689348814741910323
  43dd1c:	movk	x13, #0x3334
  43dd20:	movk	x13, #0xf333, lsl #48
  43dd24:	cmp	x8, x13
  43dd28:	b.lt	43dd5c <argp_parse@@Base+0x64b0>  // b.tstop
  43dd2c:	and	w11, w11, #0xff
  43dd30:	sub	w13, w17, w11
  43dd34:	sub	w11, w11, #0x30
  43dd38:	cmp	w10, #0x0
  43dd3c:	add	x8, x8, x8, lsl #2
  43dd40:	csel	w11, w13, w11, lt  // lt = tstop
  43dd44:	lsl	x8, x8, #1
  43dd48:	sxtw	x13, w11
  43dd4c:	tbnz	w11, #31, 43dcd8 <argp_parse@@Base+0x642c>
  43dd50:	sub	x11, x18, x13
  43dd54:	cmp	x11, x8
  43dd58:	b.ge	43dce8 <argp_parse@@Base+0x643c>  // b.tcont
  43dd5c:	ldr	x8, [sp, #120]
  43dd60:	mov	w12, #0x3f                  	// #63
  43dd64:	b	43dfdc <argp_parse@@Base+0x6730>
  43dd68:	add	x8, sp, #0xa0
  43dd6c:	ldr	x10, [sp, #128]
  43dd70:	cmp	x8, x10
  43dd74:	b.cs	43dd80 <argp_parse@@Base+0x64d4>  // b.hs, b.nlast
  43dd78:	strb	w11, [x8], #1
  43dd7c:	ldr	x9, [x19]
  43dd80:	mov	x10, x9
  43dd84:	add	x9, x9, #0x1
  43dd88:	str	x9, [x19]
  43dd8c:	ldrb	w11, [x10, #1]
  43dd90:	mov	x12, #0x3ffffff03ffffff     	// #288230371923853311
  43dd94:	sub	w10, w11, #0x41
  43dd98:	cmp	w10, #0x3a
  43dd9c:	lsr	x10, x12, x10
  43dda0:	cset	w12, cc  // cc = lo, ul, last
  43dda4:	cmp	w11, #0x2e
  43dda8:	and	w10, w10, w12
  43ddac:	b.eq	43dd6c <argp_parse@@Base+0x64c0>  // b.none
  43ddb0:	tbnz	w10, #0, 43dd6c <argp_parse@@Base+0x64c0>
  43ddb4:	strb	wzr, [x8]
  43ddb8:	ldrb	w8, [sp, #160]
  43ddbc:	cbz	w8, 43dde8 <argp_parse@@Base+0x653c>
  43ddc0:	ldr	x9, [sp, #24]
  43ddc4:	and	w10, w8, #0xff
  43ddc8:	sub	w10, w10, #0x61
  43ddcc:	sub	w11, w8, #0x20
  43ddd0:	cmp	w10, #0x1a
  43ddd4:	csel	w10, w11, w8, cc  // cc = lo, ul, last
  43ddd8:	ldrb	w8, [x9]
  43dddc:	sturb	w10, [x9, #-1]
  43dde0:	add	x9, x9, #0x1
  43dde4:	cbnz	w8, 43ddc4 <argp_parse@@Base+0x6518>
  43dde8:	ldrh	w8, [sp, #160]
  43ddec:	ldrb	w9, [sp, #162]
  43ddf0:	mov	w10, #0x4d41                	// #19777
  43ddf4:	eor	w8, w8, w10
  43ddf8:	orr	w8, w8, w9
  43ddfc:	tst	w8, #0xffff
  43de00:	b.eq	43dfe8 <argp_parse@@Base+0x673c>  // b.none
  43de04:	ldr	w8, [sp, #160]
  43de08:	ldrb	w9, [sp, #164]
  43de0c:	mov	w10, #0x2e41                	// #11841
  43de10:	movk	w10, #0x2e4d, lsl #16
  43de14:	eor	w8, w8, w10
  43de18:	orr	w8, w8, w9
  43de1c:	cbz	w8, 43dff4 <argp_parse@@Base+0x6748>
  43de20:	ldrh	w8, [sp, #160]
  43de24:	ldrb	w9, [sp, #162]
  43de28:	mov	w10, #0x4d50                	// #19792
  43de2c:	eor	w8, w8, w10
  43de30:	orr	w8, w8, w9
  43de34:	tst	w8, #0xffff
  43de38:	b.eq	43e000 <argp_parse@@Base+0x6754>  // b.none
  43de3c:	ldr	w8, [sp, #160]
  43de40:	ldrb	w9, [sp, #164]
  43de44:	mov	w10, #0x2e41                	// #11841
  43de48:	movk	w10, #0x2e4d, lsl #16
  43de4c:	add	w10, w10, #0xf
  43de50:	eor	w8, w8, w10
  43de54:	orr	w8, w8, w9
  43de58:	cbz	w8, 43e06c <argp_parse@@Base+0x67c0>
  43de5c:	add	x0, sp, #0xa0
  43de60:	bl	403f40 <strlen@plt>
  43de64:	mov	x21, x0
  43de68:	cmp	x0, #0x3
  43de6c:	b.eq	43e078 <argp_parse@@Base+0x67cc>  // b.none
  43de70:	cmp	x21, #0x4
  43de74:	b.ne	43e080 <argp_parse@@Base+0x67d4>  // b.any
  43de78:	ldrb	w8, [sp, #163]
  43de7c:	cmp	w8, #0x2e
  43de80:	cset	w26, eq  // eq = none
  43de84:	b	43e084 <argp_parse@@Base+0x67d8>
  43de88:	orr	w11, w11, #0x2
  43de8c:	cmp	w11, #0x2e
  43de90:	b.ne	43dfb8 <argp_parse@@Base+0x670c>  // b.any
  43de94:	ldurb	w11, [x12, #-2]
  43de98:	sub	w11, w11, #0x30
  43de9c:	cmp	w11, #0x9
  43dea0:	b.hi	43dfb8 <argp_parse@@Base+0x670c>  // b.pmore
  43dea4:	mov	x9, x12
  43dea8:	ldrb	w13, [x9, #-1]!
  43deac:	mov	w0, #0xa                   	// #10
  43deb0:	sub	w13, w13, #0x30
  43deb4:	cmp	w13, #0xa
  43deb8:	csel	x9, x12, x9, cc  // cc = lo, ul, last
  43debc:	mov	x12, x9
  43dec0:	ldrb	w14, [x12], #1
  43dec4:	csel	w13, w13, wzr, cc  // cc = lo, ul, last
  43dec8:	madd	w11, w11, w0, w13
  43decc:	sub	w14, w14, #0x30
  43ded0:	cmp	w14, #0xa
  43ded4:	csel	x9, x12, x9, cc  // cc = lo, ul, last
  43ded8:	mov	x12, x9
  43dedc:	ldrb	w15, [x12], #1
  43dee0:	csel	w14, w14, wzr, cc  // cc = lo, ul, last
  43dee4:	madd	w11, w11, w0, w14
  43dee8:	sub	w15, w15, #0x30
  43deec:	cmp	w15, #0xa
  43def0:	csel	x9, x12, x9, cc  // cc = lo, ul, last
  43def4:	mov	x12, x9
  43def8:	ldrb	w16, [x12], #1
  43defc:	csel	w15, w15, wzr, cc  // cc = lo, ul, last
  43df00:	madd	w11, w11, w0, w15
  43df04:	sub	w16, w16, #0x30
  43df08:	cmp	w16, #0xa
  43df0c:	csel	x9, x12, x9, cc  // cc = lo, ul, last
  43df10:	mov	x12, x9
  43df14:	ldrb	w17, [x12], #1
  43df18:	csel	w16, w16, wzr, cc  // cc = lo, ul, last
  43df1c:	madd	w11, w11, w0, w16
  43df20:	sub	w17, w17, #0x30
  43df24:	cmp	w17, #0xa
  43df28:	csel	x9, x12, x9, cc  // cc = lo, ul, last
  43df2c:	mov	x12, x9
  43df30:	ldrb	w18, [x12], #1
  43df34:	csel	w13, w17, wzr, cc  // cc = lo, ul, last
  43df38:	madd	w11, w11, w0, w13
  43df3c:	sub	w17, w18, #0x30
  43df40:	cmp	w17, #0xa
  43df44:	csel	x9, x12, x9, cc  // cc = lo, ul, last
  43df48:	mov	x12, x9
  43df4c:	ldrb	w14, [x12], #1
  43df50:	csel	w15, w17, wzr, cc  // cc = lo, ul, last
  43df54:	madd	w11, w11, w0, w15
  43df58:	sub	w14, w14, #0x30
  43df5c:	cmp	w14, #0xa
  43df60:	csel	x9, x12, x9, cc  // cc = lo, ul, last
  43df64:	mov	x12, x9
  43df68:	ldrb	w13, [x12], #1
  43df6c:	csel	w14, w14, wzr, cc  // cc = lo, ul, last
  43df70:	madd	w14, w11, w0, w14
  43df74:	sub	w13, w13, #0x30
  43df78:	cmp	w13, #0xa
  43df7c:	csel	x11, x12, x9, cc  // cc = lo, ul, last
  43df80:	csel	w9, w13, wzr, cc  // cc = lo, ul, last
  43df84:	madd	w9, w14, w0, w9
  43df88:	tbnz	w10, #31, 43e00c <argp_parse@@Base+0x6760>
  43df8c:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43df90:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43df94:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43df98:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43df9c:	add	x14, x14, #0x870
  43dfa0:	add	x15, x15, #0xa96
  43dfa4:	add	x16, x16, #0x5fc
  43dfa8:	mov	w17, #0x30                  	// #48
  43dfac:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43dfb0:	add	x13, x13, #0x4a0
  43dfb4:	b	43fa58 <argp_parse@@Base+0x81ac>
  43dfb8:	sub	x11, x12, #0x3
  43dfbc:	sub	x9, x11, x9
  43dfc0:	lsr	w12, w10, #31
  43dfc4:	cmp	w10, #0x0
  43dfc8:	str	x9, [sp, #88]
  43dfcc:	mov	w9, #0x112                 	// #274
  43dfd0:	str	x12, [sp, #104]
  43dfd4:	cinc	w12, w9, eq  // eq = none
  43dfd8:	str	x11, [x19]
  43dfdc:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43dfe0:	add	x13, x13, #0x4a0
  43dfe4:	b	43e9ec <argp_parse@@Base+0x7140>
  43dfe8:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43dfec:	add	x22, x22, #0xab0
  43dff0:	b	43e9c8 <argp_parse@@Base+0x711c>
  43dff4:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43dff8:	add	x22, x22, #0xac0
  43dffc:	b	43e9c8 <argp_parse@@Base+0x711c>
  43e000:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e004:	add	x22, x22, #0xad0
  43e008:	b	43e9c8 <argp_parse@@Base+0x711c>
  43e00c:	ldrb	w12, [x11]
  43e010:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e014:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e018:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e01c:	sub	w13, w12, #0x30
  43e020:	cmp	w13, #0x9
  43e024:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e028:	add	x14, x14, #0x870
  43e02c:	add	x15, x15, #0xa96
  43e030:	add	x16, x16, #0x5fc
  43e034:	mov	w17, #0x30                  	// #48
  43e038:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43e03c:	add	x13, x13, #0x4a0
  43e040:	b.hi	43fa58 <argp_parse@@Base+0x81ac>  // b.pmore
  43e044:	and	w12, w12, #0xff
  43e048:	cmp	w12, #0x30
  43e04c:	b.ne	43fa54 <argp_parse@@Base+0x81a8>  // b.any
  43e050:	ldrb	w12, [x11, #1]!
  43e054:	sub	w13, w12, #0x30
  43e058:	cmp	w13, #0xa
  43e05c:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e060:	add	x13, x13, #0x4a0
  43e064:	b.cc	43e044 <argp_parse@@Base+0x6798>  // b.lo, b.ul, b.last
  43e068:	b	43fa58 <argp_parse@@Base+0x81ac>
  43e06c:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e070:	add	x22, x22, #0xae0
  43e074:	b	43e9c8 <argp_parse@@Base+0x711c>
  43e078:	mov	w26, #0x1                   	// #1
  43e07c:	b	43e084 <argp_parse@@Base+0x67d8>
  43e080:	mov	w26, wzr
  43e084:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43e088:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e08c:	add	x1, x1, #0xd68
  43e090:	add	x22, x22, #0xb00
  43e094:	add	x0, sp, #0xa0
  43e098:	cbz	w26, 43e0a8 <argp_parse@@Base+0x67fc>
  43e09c:	mov	w2, #0x3                   	// #3
  43e0a0:	bl	404300 <strncmp@plt>
  43e0a4:	b	43e0ac <argp_parse@@Base+0x6800>
  43e0a8:	bl	404660 <strcmp@plt>
  43e0ac:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e0b0:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e0b4:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e0b8:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e0bc:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e0c0:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e0c4:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e0c8:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e0cc:	add	x2, x2, #0x952
  43e0d0:	add	x3, x3, #0x9c4
  43e0d4:	mov	w4, #0x1                   	// #1
  43e0d8:	mov	w5, #0x38                  	// #56
  43e0dc:	add	x6, x6, #0xa20
  43e0e0:	add	x7, x7, #0xa7c
  43e0e4:	sub	x30, x29, #0x30
  43e0e8:	add	x14, x14, #0x870
  43e0ec:	add	x15, x15, #0xa96
  43e0f0:	add	x16, x16, #0x5fc
  43e0f4:	mov	w17, #0x30                  	// #48
  43e0f8:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43e0fc:	add	x13, x13, #0x4a0
  43e100:	cbz	w0, 43e9c0 <argp_parse@@Base+0x7114>
  43e104:	ldr	x1, [x22, #16]!
  43e108:	cbnz	x1, 43e094 <argp_parse@@Base+0x67e8>
  43e10c:	add	x1, sp, #0xa0
  43e110:	mov	x0, x19
  43e114:	bl	4431d4 <argp_parse@@Base+0xb928>
  43e118:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e11c:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e120:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e124:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e128:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e12c:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e130:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e134:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e138:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e13c:	add	x13, x13, #0x4a0
  43e140:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43e144:	mov	w17, #0x30                  	// #48
  43e148:	add	x16, x16, #0x5fc
  43e14c:	add	x15, x15, #0xa96
  43e150:	add	x14, x14, #0x870
  43e154:	sub	x30, x29, #0x30
  43e158:	add	x7, x7, #0xa7c
  43e15c:	add	x6, x6, #0xa20
  43e160:	mov	w5, #0x38                  	// #56
  43e164:	mov	w4, #0x1                   	// #1
  43e168:	add	x3, x3, #0x9c4
  43e16c:	add	x2, x2, #0x952
  43e170:	mov	x22, x0
  43e174:	add	x1, x1, #0x6e8
  43e178:	cbnz	x0, 43e9c8 <argp_parse@@Base+0x711c>
  43e17c:	ldr	w8, [sp, #160]
  43e180:	mov	w9, #0x5344                	// #21316
  43e184:	movk	w9, #0x54, lsl #16
  43e188:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e18c:	cmp	w8, w9
  43e190:	add	x22, x22, #0xc90
  43e194:	b.eq	43e9c8 <argp_parse@@Base+0x711c>  // b.none
  43e198:	ldr	w9, [sp, #160]
  43e19c:	ldrb	w10, [sp, #164]
  43e1a0:	mov	w11, #0x4559                	// #17753
  43e1a4:	movk	w11, #0x5241, lsl #16
  43e1a8:	eor	w9, w9, w11
  43e1ac:	orr	w9, w9, w10
  43e1b0:	cbz	w9, 43faf4 <argp_parse@@Base+0x8248>
  43e1b4:	ldr	w9, [sp, #160]
  43e1b8:	ldrh	w10, [sp, #164]
  43e1bc:	mov	w11, #0x4f4d                	// #20301
  43e1c0:	movk	w11, #0x544e, lsl #16
  43e1c4:	eor	w9, w9, w11
  43e1c8:	mov	w11, #0x48                  	// #72
  43e1cc:	eor	w10, w10, w11
  43e1d0:	orr	w9, w9, w10
  43e1d4:	cbz	w9, 43fb00 <argp_parse@@Base+0x8254>
  43e1d8:	ldr	x9, [sp, #160]
  43e1dc:	mov	x11, #0x4f46                	// #20294
  43e1e0:	ldrh	w10, [sp, #168]
  43e1e4:	movk	x11, #0x5452, lsl #16
  43e1e8:	movk	x11, #0x494e, lsl #32
  43e1ec:	movk	x11, #0x4847, lsl #48
  43e1f0:	eor	x9, x9, x11
  43e1f4:	mov	w11, #0x54                  	// #84
  43e1f8:	eor	x10, x10, x11
  43e1fc:	orr	x9, x9, x10
  43e200:	cbz	x9, 43fb0c <argp_parse@@Base+0x8260>
  43e204:	ldr	w9, [sp, #160]
  43e208:	ldrb	w10, [sp, #164]
  43e20c:	mov	w11, #0x4557                	// #17751
  43e210:	movk	w11, #0x4b45, lsl #16
  43e214:	eor	w9, w9, w11
  43e218:	orr	w9, w9, w10
  43e21c:	cbz	w9, 43fb18 <argp_parse@@Base+0x826c>
  43e220:	mov	w9, #0x4144                	// #16708
  43e224:	movk	w9, #0x59, lsl #16
  43e228:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e22c:	cmp	w8, w9
  43e230:	add	x22, x22, #0xce0
  43e234:	b.eq	43e9c8 <argp_parse@@Base+0x711c>  // b.none
  43e238:	ldr	w9, [sp, #160]
  43e23c:	ldrb	w10, [sp, #164]
  43e240:	mov	w11, #0x4f48                	// #20296
  43e244:	movk	w11, #0x5255, lsl #16
  43e248:	eor	w9, w9, w11
  43e24c:	orr	w9, w9, w10
  43e250:	cbz	w9, 43fb24 <argp_parse@@Base+0x8278>
  43e254:	ldr	w9, [sp, #160]
  43e258:	ldur	w10, [sp, #163]
  43e25c:	mov	w11, #0x494d                	// #18765
  43e260:	movk	w11, #0x554e, lsl #16
  43e264:	eor	w9, w9, w11
  43e268:	mov	w11, #0x5455                	// #21589
  43e26c:	movk	w11, #0x45, lsl #16
  43e270:	eor	w10, w10, w11
  43e274:	orr	w9, w9, w10
  43e278:	cbz	w9, 43fb30 <argp_parse@@Base+0x8284>
  43e27c:	mov	w9, #0x494d                	// #18765
  43e280:	movk	w9, #0x4e, lsl #16
  43e284:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e288:	cmp	w8, w9
  43e28c:	add	x22, x22, #0xd10
  43e290:	b.eq	43e9c8 <argp_parse@@Base+0x711c>  // b.none
  43e294:	ldr	w9, [sp, #160]
  43e298:	ldur	w10, [sp, #163]
  43e29c:	mov	w11, #0x4553                	// #17747
  43e2a0:	movk	w11, #0x4f43, lsl #16
  43e2a4:	eor	w9, w9, w11
  43e2a8:	mov	w11, #0x4e4f                	// #20047
  43e2ac:	movk	w11, #0x44, lsl #16
  43e2b0:	eor	w10, w10, w11
  43e2b4:	orr	w9, w9, w10
  43e2b8:	cbz	w9, 43fb3c <argp_parse@@Base+0x8290>
  43e2bc:	mov	w9, #0x4553                	// #17747
  43e2c0:	movk	w9, #0x43, lsl #16
  43e2c4:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e2c8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e2cc:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e2d0:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e2d4:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e2d8:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e2dc:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e2e0:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e2e4:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e2e8:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e2ec:	cmp	w8, w9
  43e2f0:	add	x22, x22, #0xd30
  43e2f4:	add	x1, x1, #0x6e8
  43e2f8:	add	x2, x2, #0x952
  43e2fc:	add	x3, x3, #0x9c4
  43e300:	mov	w4, #0x1                   	// #1
  43e304:	mov	w5, #0x38                  	// #56
  43e308:	add	x6, x6, #0xa20
  43e30c:	add	x7, x7, #0xa7c
  43e310:	sub	x30, x29, #0x30
  43e314:	add	x14, x14, #0x870
  43e318:	add	x15, x15, #0xa96
  43e31c:	add	x16, x16, #0x5fc
  43e320:	mov	w17, #0x30                  	// #48
  43e324:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43e328:	add	x13, x13, #0x4a0
  43e32c:	b.eq	43e9c8 <argp_parse@@Base+0x711c>  // b.none
  43e330:	sub	x8, x21, #0x1
  43e334:	add	x9, sp, #0xa0
  43e338:	ldrb	w9, [x9, x8]
  43e33c:	cmp	w9, #0x53
  43e340:	b.ne	43e5ac <argp_parse@@Base+0x6d00>  // b.any
  43e344:	add	x9, sp, #0xa0
  43e348:	strb	wzr, [x9, x8]
  43e34c:	ldr	w9, [sp, #160]
  43e350:	ldrb	w10, [sp, #164]
  43e354:	mov	w11, #0x4559                	// #17753
  43e358:	movk	w11, #0x5241, lsl #16
  43e35c:	eor	w9, w9, w11
  43e360:	orr	w9, w9, w10
  43e364:	cbz	w9, 43fbb0 <argp_parse@@Base+0x8304>
  43e368:	ldr	w9, [sp, #160]
  43e36c:	ldrh	w10, [sp, #164]
  43e370:	mov	w11, #0x4f4d                	// #20301
  43e374:	movk	w11, #0x544e, lsl #16
  43e378:	eor	w9, w9, w11
  43e37c:	mov	w11, #0x48                  	// #72
  43e380:	eor	w10, w10, w11
  43e384:	orr	w9, w9, w10
  43e388:	cbz	w9, 43fbc8 <argp_parse@@Base+0x831c>
  43e38c:	ldr	x9, [sp, #160]
  43e390:	mov	x11, #0x4f46                	// #20294
  43e394:	ldrh	w10, [sp, #168]
  43e398:	movk	x11, #0x5452, lsl #16
  43e39c:	movk	x11, #0x494e, lsl #32
  43e3a0:	movk	x11, #0x4847, lsl #48
  43e3a4:	eor	x9, x9, x11
  43e3a8:	mov	w11, #0x54                  	// #84
  43e3ac:	eor	x10, x10, x11
  43e3b0:	orr	x9, x9, x10
  43e3b4:	cbz	x9, 43fbe0 <argp_parse@@Base+0x8334>
  43e3b8:	ldr	w9, [sp, #160]
  43e3bc:	ldrb	w10, [sp, #164]
  43e3c0:	mov	w11, #0x4557                	// #17751
  43e3c4:	movk	w11, #0x4b45, lsl #16
  43e3c8:	eor	w9, w9, w11
  43e3cc:	orr	w9, w9, w10
  43e3d0:	cbz	w9, 43fbec <argp_parse@@Base+0x8340>
  43e3d4:	ldr	w9, [sp, #160]
  43e3d8:	mov	w10, #0x4144                	// #16708
  43e3dc:	movk	w10, #0x59, lsl #16
  43e3e0:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e3e4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e3e8:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e3ec:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e3f0:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e3f4:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e3f8:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e3fc:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e400:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e404:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e408:	cmp	w9, w10
  43e40c:	add	x22, x22, #0xce0
  43e410:	add	x1, x1, #0x6e8
  43e414:	add	x2, x2, #0x952
  43e418:	add	x3, x3, #0x9c4
  43e41c:	mov	w4, #0x1                   	// #1
  43e420:	mov	w5, #0x38                  	// #56
  43e424:	add	x6, x6, #0xa20
  43e428:	add	x7, x7, #0xa7c
  43e42c:	sub	x30, x29, #0x30
  43e430:	add	x14, x14, #0x870
  43e434:	add	x15, x15, #0xa96
  43e438:	add	x16, x16, #0x5fc
  43e43c:	mov	w17, #0x30                  	// #48
  43e440:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43e444:	add	x13, x13, #0x4a0
  43e448:	b.eq	43e9c8 <argp_parse@@Base+0x711c>  // b.none
  43e44c:	ldr	w10, [sp, #160]
  43e450:	ldrb	w11, [sp, #164]
  43e454:	mov	w12, #0x4f48                	// #20296
  43e458:	movk	w12, #0x5255, lsl #16
  43e45c:	eor	w10, w10, w12
  43e460:	orr	w10, w10, w11
  43e464:	cbz	w10, 43fc10 <argp_parse@@Base+0x8364>
  43e468:	ldr	w10, [sp, #160]
  43e46c:	ldur	w11, [sp, #163]
  43e470:	mov	w12, #0x494d                	// #18765
  43e474:	movk	w12, #0x554e, lsl #16
  43e478:	eor	w10, w10, w12
  43e47c:	mov	w12, #0x5455                	// #21589
  43e480:	movk	w12, #0x45, lsl #16
  43e484:	eor	w11, w11, w12
  43e488:	orr	w10, w10, w11
  43e48c:	cbz	w10, 43fc28 <argp_parse@@Base+0x837c>
  43e490:	mov	w10, #0x494d                	// #18765
  43e494:	movk	w10, #0x4e, lsl #16
  43e498:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e49c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e4a0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e4a4:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e4a8:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e4ac:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e4b0:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e4b4:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e4b8:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e4bc:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e4c0:	cmp	w9, w10
  43e4c4:	add	x22, x22, #0xd10
  43e4c8:	add	x1, x1, #0x6e8
  43e4cc:	add	x2, x2, #0x952
  43e4d0:	add	x3, x3, #0x9c4
  43e4d4:	mov	w4, #0x1                   	// #1
  43e4d8:	mov	w5, #0x38                  	// #56
  43e4dc:	add	x6, x6, #0xa20
  43e4e0:	add	x7, x7, #0xa7c
  43e4e4:	sub	x30, x29, #0x30
  43e4e8:	add	x14, x14, #0x870
  43e4ec:	add	x15, x15, #0xa96
  43e4f0:	add	x16, x16, #0x5fc
  43e4f4:	mov	w17, #0x30                  	// #48
  43e4f8:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43e4fc:	add	x13, x13, #0x4a0
  43e500:	b.eq	43e9c8 <argp_parse@@Base+0x711c>  // b.none
  43e504:	ldr	w10, [sp, #160]
  43e508:	ldur	w11, [sp, #163]
  43e50c:	mov	w12, #0x4553                	// #17747
  43e510:	movk	w12, #0x4f43, lsl #16
  43e514:	eor	w10, w10, w12
  43e518:	mov	w12, #0x4e4f                	// #20047
  43e51c:	movk	w12, #0x44, lsl #16
  43e520:	eor	w11, w11, w12
  43e524:	orr	w10, w10, w11
  43e528:	cbz	w10, 43fb3c <argp_parse@@Base+0x8290>
  43e52c:	mov	w10, #0x4553                	// #17747
  43e530:	movk	w10, #0x43, lsl #16
  43e534:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e538:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e53c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e540:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e544:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e548:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e54c:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e550:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e554:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e558:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e55c:	cmp	w9, w10
  43e560:	add	x22, x22, #0xd30
  43e564:	add	x1, x1, #0x6e8
  43e568:	add	x2, x2, #0x952
  43e56c:	add	x3, x3, #0x9c4
  43e570:	mov	w4, #0x1                   	// #1
  43e574:	mov	w5, #0x38                  	// #56
  43e578:	add	x6, x6, #0xa20
  43e57c:	add	x7, x7, #0xa7c
  43e580:	sub	x30, x29, #0x30
  43e584:	add	x14, x14, #0x870
  43e588:	add	x15, x15, #0xa96
  43e58c:	add	x16, x16, #0x5fc
  43e590:	mov	w17, #0x30                  	// #48
  43e594:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43e598:	add	x13, x13, #0x4a0
  43e59c:	b.eq	43e9c8 <argp_parse@@Base+0x711c>  // b.none
  43e5a0:	add	x9, sp, #0xa0
  43e5a4:	mov	w10, #0x53                  	// #83
  43e5a8:	strb	w10, [x9, x8]
  43e5ac:	ldr	x8, [sp, #160]
  43e5b0:	mov	x10, #0x4f54                	// #20308
  43e5b4:	ldrb	w9, [sp, #168]
  43e5b8:	movk	x10, #0x4f4d, lsl #16
  43e5bc:	movk	x10, #0x5252, lsl #32
  43e5c0:	movk	x10, #0x574f, lsl #48
  43e5c4:	eor	x8, x8, x10
  43e5c8:	orr	x8, x8, x9
  43e5cc:	cbz	x8, 43fba4 <argp_parse@@Base+0x82f8>
  43e5d0:	ldr	x8, [sp, #160]
  43e5d4:	mov	x10, #0x4559                	// #17753
  43e5d8:	ldrh	w9, [sp, #168]
  43e5dc:	movk	x10, #0x5453, lsl #16
  43e5e0:	movk	x10, #0x5245, lsl #32
  43e5e4:	movk	x10, #0x4144, lsl #48
  43e5e8:	eor	x8, x8, x10
  43e5ec:	mov	w10, #0x59                  	// #89
  43e5f0:	eor	x9, x9, x10
  43e5f4:	orr	x8, x8, x9
  43e5f8:	cbz	x8, 43fbbc <argp_parse@@Base+0x8310>
  43e5fc:	ldr	w8, [sp, #160]
  43e600:	ldrh	w9, [sp, #164]
  43e604:	mov	w10, #0x4f54                	// #20308
  43e608:	movk	w10, #0x4144, lsl #16
  43e60c:	eor	w8, w8, w10
  43e610:	mov	w10, #0x59                  	// #89
  43e614:	eor	w9, w9, w10
  43e618:	orr	w8, w8, w9
  43e61c:	cbz	w8, 43fbd4 <argp_parse@@Base+0x8328>
  43e620:	ldr	w8, [sp, #160]
  43e624:	mov	w9, #0x4f4e                	// #20302
  43e628:	movk	w9, #0x57, lsl #16
  43e62c:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e630:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e634:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e638:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e63c:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e640:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e644:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e648:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e64c:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e650:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e654:	cmp	w8, w9
  43e658:	add	x22, x22, #0xd80
  43e65c:	add	x1, x1, #0x6e8
  43e660:	add	x2, x2, #0x952
  43e664:	add	x3, x3, #0x9c4
  43e668:	mov	w4, #0x1                   	// #1
  43e66c:	mov	w5, #0x38                  	// #56
  43e670:	add	x6, x6, #0xa20
  43e674:	add	x7, x7, #0xa7c
  43e678:	sub	x30, x29, #0x30
  43e67c:	add	x14, x14, #0x870
  43e680:	add	x15, x15, #0xa96
  43e684:	add	x16, x16, #0x5fc
  43e688:	mov	w17, #0x30                  	// #48
  43e68c:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43e690:	add	x13, x13, #0x4a0
  43e694:	b.eq	43e9c8 <argp_parse@@Base+0x711c>  // b.none
  43e698:	ldr	w9, [sp, #160]
  43e69c:	ldrb	w10, [sp, #164]
  43e6a0:	mov	w11, #0x414c                	// #16716
  43e6a4:	movk	w11, #0x5453, lsl #16
  43e6a8:	eor	w9, w9, w11
  43e6ac:	orr	w9, w9, w10
  43e6b0:	cbz	w9, 43fbf8 <argp_parse@@Base+0x834c>
  43e6b4:	ldr	w9, [sp, #160]
  43e6b8:	ldrb	w10, [sp, #164]
  43e6bc:	mov	w11, #0x4854                	// #18516
  43e6c0:	movk	w11, #0x5349, lsl #16
  43e6c4:	eor	w9, w9, w11
  43e6c8:	orr	w9, w9, w10
  43e6cc:	cbz	w9, 43fc04 <argp_parse@@Base+0x8358>
  43e6d0:	ldr	w9, [sp, #160]
  43e6d4:	ldrb	w10, [sp, #164]
  43e6d8:	mov	w11, #0x454e                	// #17742
  43e6dc:	movk	w11, #0x5458, lsl #16
  43e6e0:	eor	w9, w9, w11
  43e6e4:	orr	w9, w9, w10
  43e6e8:	cbz	w9, 43fc1c <argp_parse@@Base+0x8370>
  43e6ec:	ldr	w9, [sp, #160]
  43e6f0:	ldrh	w10, [sp, #164]
  43e6f4:	mov	w11, #0x4946                	// #18758
  43e6f8:	movk	w11, #0x5352, lsl #16
  43e6fc:	eor	w9, w9, w11
  43e700:	mov	w11, #0x54                  	// #84
  43e704:	eor	w10, w10, w11
  43e708:	orr	w9, w9, w10
  43e70c:	cbz	w9, 43fc34 <argp_parse@@Base+0x8388>
  43e710:	ldr	w9, [sp, #160]
  43e714:	ldrh	w10, [sp, #164]
  43e718:	mov	w11, #0x4854                	// #18516
  43e71c:	movk	w11, #0x5249, lsl #16
  43e720:	eor	w9, w9, w11
  43e724:	mov	w11, #0x44                  	// #68
  43e728:	eor	w10, w10, w11
  43e72c:	orr	w9, w9, w10
  43e730:	cbz	w9, 43fc40 <argp_parse@@Base+0x8394>
  43e734:	ldr	w9, [sp, #160]
  43e738:	ldur	w10, [sp, #163]
  43e73c:	mov	w11, #0x4f48                	// #20296
  43e740:	mov	w12, #0x5448                	// #21576
  43e744:	movk	w11, #0x5255, lsl #16
  43e748:	movk	w12, #0x48, lsl #16
  43e74c:	sub	w11, w11, #0x2
  43e750:	add	w12, w12, #0xa
  43e754:	eor	w9, w9, w11
  43e758:	eor	w10, w10, w12
  43e75c:	orr	w9, w9, w10
  43e760:	cbz	w9, 43fc4c <argp_parse@@Base+0x83a0>
  43e764:	ldr	w9, [sp, #160]
  43e768:	ldrh	w10, [sp, #164]
  43e76c:	mov	w11, #0x4946                	// #18758
  43e770:	movk	w11, #0x5352, lsl #16
  43e774:	add	w11, w11, #0xf40, lsl #12
  43e778:	eor	w9, w9, w11
  43e77c:	mov	w11, #0x48                  	// #72
  43e780:	eor	w10, w10, w11
  43e784:	orr	w9, w9, w10
  43e788:	cbz	w9, 43fc58 <argp_parse@@Base+0x83ac>
  43e78c:	ldr	w9, [sp, #160]
  43e790:	ldrh	w10, [sp, #164]
  43e794:	mov	w11, #0x454e                	// #17742
  43e798:	movk	w11, #0x5458, lsl #16
  43e79c:	add	w11, w11, #0x405
  43e7a0:	eor	w9, w9, w11
  43e7a4:	mov	w11, #0x48                  	// #72
  43e7a8:	eor	w10, w10, w11
  43e7ac:	orr	w9, w9, w10
  43e7b0:	cbz	w9, 43fc64 <argp_parse@@Base+0x83b8>
  43e7b4:	ldr	x9, [sp, #160]
  43e7b8:	mov	x10, #0x4553                	// #17747
  43e7bc:	movk	x10, #0x4556, lsl #16
  43e7c0:	movk	x10, #0x544e, lsl #32
  43e7c4:	movk	x10, #0x48, lsl #48
  43e7c8:	cmp	x9, x10
  43e7cc:	b.eq	43fc70 <argp_parse@@Base+0x83c4>  // b.none
  43e7d0:	ldr	w9, [sp, #160]
  43e7d4:	ldur	w10, [sp, #163]
  43e7d8:	mov	w11, #0x4945                	// #18757
  43e7dc:	movk	w11, #0x4847, lsl #16
  43e7e0:	eor	w9, w9, w11
  43e7e4:	mov	w11, #0x5448                	// #21576
  43e7e8:	movk	w11, #0x48, lsl #16
  43e7ec:	eor	w10, w10, w11
  43e7f0:	orr	w9, w9, w10
  43e7f4:	cbz	w9, 43fc7c <argp_parse@@Base+0x83d0>
  43e7f8:	ldr	w9, [sp, #160]
  43e7fc:	ldrh	w10, [sp, #164]
  43e800:	mov	w11, #0x4f4d                	// #20301
  43e804:	movk	w11, #0x544e, lsl #16
  43e808:	sub	w11, w11, #0x5ff
  43e80c:	eor	w9, w9, w11
  43e810:	mov	w11, #0x48                  	// #72
  43e814:	eor	w10, w10, w11
  43e818:	orr	w9, w9, w10
  43e81c:	cbz	w9, 43fc88 <argp_parse@@Base+0x83dc>
  43e820:	ldr	w9, [sp, #160]
  43e824:	ldrh	w10, [sp, #164]
  43e828:	mov	w11, #0x4f4d                	// #20301
  43e82c:	movk	w11, #0x544e, lsl #16
  43e830:	sub	w11, w11, #0x9f9
  43e834:	eor	w9, w9, w11
  43e838:	mov	w11, #0x48                  	// #72
  43e83c:	eor	w10, w10, w11
  43e840:	orr	w9, w9, w10
  43e844:	cbz	w9, 43fc94 <argp_parse@@Base+0x83e8>
  43e848:	ldr	x9, [sp, #160]
  43e84c:	mov	x11, #0x4c45                	// #19525
  43e850:	ldrb	w10, [sp, #168]
  43e854:	movk	x11, #0x5645, lsl #16
  43e858:	movk	x11, #0x4e45, lsl #32
  43e85c:	movk	x11, #0x4854, lsl #48
  43e860:	eor	x9, x9, x11
  43e864:	orr	x9, x9, x10
  43e868:	cbz	x9, 43fca0 <argp_parse@@Base+0x83f4>
  43e86c:	ldr	x9, [sp, #160]
  43e870:	mov	x10, #0x5754                	// #22356
  43e874:	movk	x10, #0x4c45, lsl #16
  43e878:	movk	x10, #0x5446, lsl #32
  43e87c:	movk	x10, #0x48, lsl #48
  43e880:	cmp	x9, x10
  43e884:	b.eq	43fcac <argp_parse@@Base+0x8400>  // b.none
  43e888:	mov	w9, #0x4741                	// #18241
  43e88c:	movk	w9, #0x4f, lsl #16
  43e890:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e894:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e898:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e89c:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e8a0:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e8a4:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e8a8:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e8ac:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e8b0:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e8b4:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e8b8:	cmp	w8, w9
  43e8bc:	add	x22, x22, #0xe70
  43e8c0:	add	x1, x1, #0x6e8
  43e8c4:	add	x2, x2, #0x952
  43e8c8:	add	x3, x3, #0x9c4
  43e8cc:	mov	w4, #0x1                   	// #1
  43e8d0:	mov	w5, #0x38                  	// #56
  43e8d4:	add	x6, x6, #0xa20
  43e8d8:	add	x7, x7, #0xa7c
  43e8dc:	sub	x30, x29, #0x30
  43e8e0:	add	x14, x14, #0x870
  43e8e4:	add	x15, x15, #0xa96
  43e8e8:	add	x16, x16, #0x5fc
  43e8ec:	mov	w17, #0x30                  	// #48
  43e8f0:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43e8f4:	add	x13, x13, #0x4a0
  43e8f8:	b.eq	43e9c8 <argp_parse@@Base+0x711c>  // b.none
  43e8fc:	ldr	w9, [sp, #160]
  43e900:	ldrh	w10, [sp, #164]
  43e904:	mov	w11, #0x4548                	// #17736
  43e908:	movk	w11, #0x434e, lsl #16
  43e90c:	eor	w9, w9, w11
  43e910:	mov	w11, #0x45                  	// #69
  43e914:	eor	w10, w10, w11
  43e918:	orr	w9, w9, w10
  43e91c:	cbz	w9, 43fcb8 <argp_parse@@Base+0x840c>
  43e920:	cmp	x21, #0x1
  43e924:	b.ne	43fcc4 <argp_parse@@Base+0x8418>  // b.any
  43e928:	and	w9, w8, #0xff
  43e92c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e930:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e934:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e938:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e93c:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e940:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e944:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e948:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e94c:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e950:	cmp	w9, #0x5a
  43e954:	add	x1, x1, #0x6e8
  43e958:	add	x2, x2, #0x952
  43e95c:	add	x3, x3, #0x9c4
  43e960:	mov	w4, #0x1                   	// #1
  43e964:	mov	w5, #0x38                  	// #56
  43e968:	add	x6, x6, #0xa20
  43e96c:	add	x7, x7, #0xa7c
  43e970:	sub	x30, x29, #0x30
  43e974:	add	x14, x14, #0x870
  43e978:	add	x15, x15, #0xa96
  43e97c:	add	x16, x16, #0x5fc
  43e980:	mov	w17, #0x30                  	// #48
  43e984:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43e988:	add	x13, x13, #0x4a0
  43e98c:	b.hi	43fccc <argp_parse@@Base+0x8420>  // b.pmore
  43e990:	adrp	x12, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e994:	and	x9, x8, #0xff
  43e998:	add	x12, x12, #0x546
  43e99c:	adr	x10, 43e9b4 <argp_parse@@Base+0x7108>
  43e9a0:	ldrh	w11, [x12, x9, lsl #1]
  43e9a4:	add	x10, x10, x11, lsl #2
  43e9a8:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e9ac:	add	x22, x22, #0xea0
  43e9b0:	br	x10
  43e9b4:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e9b8:	add	x22, x22, #0xeb0
  43e9bc:	b	43e9c8 <argp_parse@@Base+0x711c>
  43e9c0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e9c4:	add	x1, x1, #0x6e8
  43e9c8:	ldp	w12, w8, [x22, #8]
  43e9cc:	str	x8, [sp, #104]
  43e9d0:	sbfx	x8, x8, #8, #24
  43e9d4:	str	x8, [sp, #96]
  43e9d8:	cmp	w12, #0x1
  43e9dc:	b.lt	43ea00 <argp_parse@@Base+0x7154>  // b.tstop
  43e9e0:	cmp	w12, #0x115
  43e9e4:	b.hi	43ea0c <argp_parse@@Base+0x7160>  // b.pmore
  43e9e8:	ldr	x8, [sp, #120]
  43e9ec:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43e9f0:	add	x9, x9, #0x75a
  43e9f4:	ldrb	w9, [x9, w12, uxtw]
  43e9f8:	str	x8, [sp, #120]
  43e9fc:	b	43ea10 <argp_parse@@Base+0x7164>
  43ea00:	mov	w9, wzr
  43ea04:	mov	w12, wzr
  43ea08:	b	43ea10 <argp_parse@@Base+0x7164>
  43ea0c:	mov	w9, #0x2                   	// #2
  43ea10:	add	w10, w9, w25
  43ea14:	cmp	w10, #0x70
  43ea18:	b.hi	43ea48 <argp_parse@@Base+0x719c>  // b.pmore
  43ea1c:	ldrsb	w8, [x14, x10]
  43ea20:	cmp	w9, w8
  43ea24:	b.ne	43ea48 <argp_parse@@Base+0x719c>  // b.any
  43ea28:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ea2c:	add	x8, x8, #0x8e1
  43ea30:	ldrb	w8, [x8, x10]
  43ea34:	orr	x9, x10, #0x4
  43ea38:	cmp	x9, #0x6f
  43ea3c:	b.ne	43eb3c <argp_parse@@Base+0x7290>  // b.any
  43ea40:	neg	w8, w8
  43ea44:	b	43ea50 <argp_parse@@Base+0x71a4>
  43ea48:	ldrb	w8, [x2, x20]
  43ea4c:	cbz	w8, 43ff44 <argp_parse@@Base+0x8698>
  43ea50:	sxtw	x27, w8
  43ea54:	ldrb	w20, [x3, x27]
  43ea58:	sub	w8, w8, #0x4
  43ea5c:	cmp	w8, #0x57
  43ea60:	sub	x9, x4, x20
  43ea64:	madd	x9, x9, x5, x23
  43ea68:	ldp	x28, x10, [x9]
  43ea6c:	ldr	x25, [x9, #40]
  43ea70:	ldp	w22, w11, [x9, #48]
  43ea74:	str	x10, [sp, #152]
  43ea78:	ldr	x10, [x9, #16]
  43ea7c:	str	x10, [sp, #144]
  43ea80:	ldp	x10, x26, [x9, #24]
  43ea84:	str	x10, [sp, #136]
  43ea88:	b.hi	43f9a4 <argp_parse@@Base+0x80f8>  // b.pmore
  43ea8c:	adr	x9, 43ea9c <argp_parse@@Base+0x71f0>
  43ea90:	ldrh	w10, [x16, x8, lsl #1]
  43ea94:	add	x9, x9, x10, lsl #2
  43ea98:	br	x9
  43ea9c:	ldr	x8, [x23, #48]
  43eaa0:	ldp	q1, q0, [x23, #16]
  43eaa4:	ldr	q2, [x23]
  43eaa8:	add	x1, sp, #0xa0
  43eaac:	mov	w2, #0x1                   	// #1
  43eab0:	mov	x0, x19
  43eab4:	str	x8, [sp, #208]
  43eab8:	stp	q1, q0, [sp, #176]
  43eabc:	str	q2, [sp, #160]
  43eac0:	mov	w21, #0x1                   	// #1
  43eac4:	str	w12, [sp, #60]
  43eac8:	str	w11, [sp, #116]
  43eacc:	bl	44058c <argp_parse@@Base+0x8ce0>
  43ead0:	ldr	w11, [sp, #116]
  43ead4:	ldr	w12, [sp, #60]
  43ead8:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43eadc:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43eae0:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43eae4:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43eae8:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43eaec:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43eaf0:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43eaf4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43eaf8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43eafc:	add	x13, x13, #0x4a0
  43eb00:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43eb04:	mov	w17, #0x30                  	// #48
  43eb08:	add	x16, x16, #0x5fc
  43eb0c:	add	x15, x15, #0xa96
  43eb10:	add	x14, x14, #0x870
  43eb14:	sub	x30, x29, #0x30
  43eb18:	add	x7, x7, #0xa7c
  43eb1c:	add	x6, x6, #0xa20
  43eb20:	mov	w5, #0x38                  	// #56
  43eb24:	mov	w4, #0x1                   	// #1
  43eb28:	add	x3, x3, #0x9c4
  43eb2c:	add	x2, x2, #0x952
  43eb30:	add	x1, x1, #0x6e8
  43eb34:	tbnz	w0, #0, 43f9a4 <argp_parse@@Base+0x80f8>
  43eb38:	b	43ff48 <argp_parse@@Base+0x869c>
  43eb3c:	ldp	x10, x9, [sp, #96]
  43eb40:	ldr	q0, [sp, #64]
  43eb44:	mov	w12, #0xfffffffe            	// #-2
  43eb48:	bfi	x9, x10, #8, #56
  43eb4c:	str	x9, [x23, #56]!
  43eb50:	ldr	x9, [sp, #120]
  43eb54:	stur	q0, [x23, #24]
  43eb58:	stur	q0, [x23, #40]
  43eb5c:	str	x9, [x23, #8]
  43eb60:	ldr	x9, [sp, #88]
  43eb64:	str	x9, [x23, #16]
  43eb68:	b	43dba8 <argp_parse@@Base+0x62fc>
  43eb6c:	ldur	x26, [x23, #-48]
  43eb70:	b	43f498 <argp_parse@@Base+0x7bec>
  43eb74:	ldr	x28, [x23, #8]
  43eb78:	str	xzr, [sp, #152]
  43eb7c:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43eb80:	ldur	x28, [x23, #-48]
  43eb84:	b	43f3ac <argp_parse@@Base+0x7b00>
  43eb88:	ldur	x25, [x23, #-48]
  43eb8c:	b	43f3cc <argp_parse@@Base+0x7b20>
  43eb90:	ldur	x8, [x23, #-48]
  43eb94:	mov	x28, xzr
  43eb98:	stp	xzr, xzr, [sp, #136]
  43eb9c:	mov	x26, xzr
  43eba0:	mov	x25, xzr
  43eba4:	b	43f254 <argp_parse@@Base+0x79a8>
  43eba8:	ldur	x25, [x23, #-56]
  43ebac:	ldur	w22, [x23, #-48]
  43ebb0:	mov	x28, xzr
  43ebb4:	stp	xzr, xzr, [sp, #144]
  43ebb8:	str	xzr, [sp, #136]
  43ebbc:	mov	x26, xzr
  43ebc0:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43ebc4:	ldr	x8, [x23]
  43ebc8:	mov	x28, xzr
  43ebcc:	str	xzr, [sp, #152]
  43ebd0:	str	xzr, [sp, #136]
  43ebd4:	mov	x26, xzr
  43ebd8:	mov	x25, xzr
  43ebdc:	str	x8, [sp, #144]
  43ebe0:	mov	w22, wzr
  43ebe4:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43ebe8:	ldur	x8, [x23, #-48]
  43ebec:	mov	x28, xzr
  43ebf0:	stp	xzr, xzr, [sp, #144]
  43ebf4:	mov	x26, xzr
  43ebf8:	mov	x25, xzr
  43ebfc:	b	43f29c <argp_parse@@Base+0x79f0>
  43ec00:	ldr	x8, [x23]
  43ec04:	tbnz	x8, #63, 43f564 <argp_parse@@Base+0x7cb8>
  43ec08:	ldur	x9, [x23, #-48]
  43ec0c:	cbnz	x8, 43ecc0 <argp_parse@@Base+0x7414>
  43ec10:	b	43f694 <argp_parse@@Base+0x7de8>
  43ec14:	ldr	x10, [x19, #168]
  43ec18:	ldp	x8, x9, [x23, #-48]
  43ec1c:	str	w11, [sp, #116]
  43ec20:	str	w12, [sp, #60]
  43ec24:	cbz	x10, 43ec38 <argp_parse@@Base+0x738c>
  43ec28:	ldr	x11, [x19, #48]
  43ec2c:	cbnz	x11, 43ec38 <argp_parse@@Base+0x738c>
  43ec30:	ldrb	w11, [x19, #161]
  43ec34:	cbz	w11, 43fa0c <argp_parse@@Base+0x8160>
  43ec38:	cmp	x9, #0x5
  43ec3c:	b.lt	43f63c <argp_parse@@Base+0x7d90>  // b.tstop
  43ec40:	mov	x11, #0xd70b                	// #55051
  43ec44:	mov	x12, #0x594b                	// #22859
  43ec48:	movk	x11, #0x70a3, lsl #16
  43ec4c:	movk	x12, #0x3886, lsl #16
  43ec50:	movk	x11, #0xa3d, lsl #32
  43ec54:	movk	x12, #0xc5d6, lsl #32
  43ec58:	add	x10, x10, #0x1
  43ec5c:	movk	x11, #0xa3d7, lsl #48
  43ec60:	movk	x12, #0x346d, lsl #48
  43ec64:	str	x10, [x19, #168]
  43ec68:	smulh	x10, x8, x11
  43ec6c:	smulh	x12, x8, x12
  43ec70:	add	x10, x10, x8
  43ec74:	asr	x13, x12, #11
  43ec78:	add	x12, x13, x12, lsr #63
  43ec7c:	asr	x13, x10, #6
  43ec80:	add	x10, x13, x10, lsr #63
  43ec84:	smulh	x11, x10, x11
  43ec88:	add	x11, x11, x10
  43ec8c:	asr	x13, x11, #6
  43ec90:	add	x11, x13, x11, lsr #63
  43ec94:	mov	w13, #0x64                  	// #100
  43ec98:	sub	x9, x9, #0x4
  43ec9c:	msub	x8, x10, x13, x8
  43eca0:	msub	x10, x11, x13, x10
  43eca4:	stp	x10, x8, [x19, #56]
  43eca8:	stp	x12, x9, [x19, #40]
  43ecac:	b	43f8c8 <argp_parse@@Base+0x801c>
  43ecb0:	ldr	x8, [x23]
  43ecb4:	tbnz	x8, #63, 43f67c <argp_parse@@Base+0x7dd0>
  43ecb8:	ldur	x9, [x23, #-56]
  43ecbc:	cbz	x8, 43f694 <argp_parse@@Base+0x7de8>
  43ecc0:	tbnz	x9, #63, 43f674 <argp_parse@@Base+0x7dc8>
  43ecc4:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  43ecc8:	udiv	x10, x10, x8
  43eccc:	b	43f57c <argp_parse@@Base+0x7cd0>
  43ecd0:	mov	w8, #0x1                   	// #1
  43ecd4:	mov	x28, xzr
  43ecd8:	stp	xzr, xzr, [sp, #136]
  43ecdc:	mov	x26, xzr
  43ece0:	mov	x25, xzr
  43ece4:	mov	w22, wzr
  43ece8:	str	x8, [sp, #152]
  43ecec:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43ecf0:	ldr	w2, [x23]
  43ecf4:	ldur	x8, [x23, #-8]
  43ecf8:	ldur	q0, [x23, #-24]
  43ecfc:	ldur	q1, [x23, #-40]
  43ed00:	ldur	q2, [x23, #-56]
  43ed04:	add	x1, sp, #0xa0
  43ed08:	mov	x0, x19
  43ed0c:	str	x8, [sp, #208]
  43ed10:	stp	q1, q0, [sp, #176]
  43ed14:	str	q2, [sp, #160]
  43ed18:	str	w12, [sp, #60]
  43ed1c:	mov	w21, w11
  43ed20:	bl	44058c <argp_parse@@Base+0x8ce0>
  43ed24:	ldr	w12, [sp, #60]
  43ed28:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ed2c:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ed30:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ed34:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ed38:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ed3c:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ed40:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ed44:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ed48:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ed4c:	mov	w11, w21
  43ed50:	add	x13, x13, #0x4a0
  43ed54:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43ed58:	mov	w17, #0x30                  	// #48
  43ed5c:	add	x16, x16, #0x5fc
  43ed60:	add	x15, x15, #0xa96
  43ed64:	add	x14, x14, #0x870
  43ed68:	sub	x30, x29, #0x30
  43ed6c:	add	x7, x7, #0xa7c
  43ed70:	add	x6, x6, #0xa20
  43ed74:	mov	w5, #0x38                  	// #56
  43ed78:	mov	w4, #0x1                   	// #1
  43ed7c:	add	x3, x3, #0x9c4
  43ed80:	add	x2, x2, #0x952
  43ed84:	add	x1, x1, #0x6e8
  43ed88:	tbnz	w0, #0, 43f9a4 <argp_parse@@Base+0x80f8>
  43ed8c:	b	43ff44 <argp_parse@@Base+0x8698>
  43ed90:	ldur	x8, [x23, #-96]
  43ed94:	ldur	q0, [x23, #-112]
  43ed98:	ldr	x9, [sp, #40]
  43ed9c:	str	x8, [x9, #16]
  43eda0:	str	q0, [x9]
  43eda4:	ldur	x9, [x23, #-48]
  43eda8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  43edac:	neg	x10, x9
  43edb0:	cmp	x9, x8
  43edb4:	str	x10, [x19, #56]
  43edb8:	b.eq	43ff44 <argp_parse@@Base+0x8698>  // b.none
  43edbc:	ldr	x9, [x23, #8]
  43edc0:	neg	x10, x9
  43edc4:	cmp	x9, x8
  43edc8:	str	x10, [x19, #64]
  43edcc:	b.ne	43f9a4 <argp_parse@@Base+0x80f8>  // b.any
  43edd0:	b	43ff44 <argp_parse@@Base+0x8698>
  43edd4:	ldur	x8, [x23, #-48]
  43edd8:	str	x8, [x19, #64]
  43eddc:	ldr	x8, [x23]
  43ede0:	str	x8, [x19, #56]
  43ede4:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43ede8:	mov	x28, #0xffffffffffffffff    	// #-1
  43edec:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43edf0:	ldr	x8, [x19, #192]
  43edf4:	mov	w9, #0x1                   	// #1
  43edf8:	str	w9, [x19, #20]
  43edfc:	add	x8, x8, #0x1
  43ee00:	str	x8, [x19, #192]
  43ee04:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43ee08:	ldur	x8, [x23, #-56]
  43ee0c:	str	w11, [sp, #116]
  43ee10:	str	w12, [sp, #60]
  43ee14:	str	w8, [x19, #24]
  43ee18:	b	43eeec <argp_parse@@Base+0x7640>
  43ee1c:	ldur	x8, [x23, #-48]
  43ee20:	mov	w9, #0x2                   	// #2
  43ee24:	str	x8, [x19, #72]
  43ee28:	ldr	x8, [sp, #32]
  43ee2c:	stp	xzr, xzr, [x8]
  43ee30:	str	xzr, [x8, #16]
  43ee34:	str	w9, [x19, #28]
  43ee38:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43ee3c:	ldur	w8, [x23, #-56]
  43ee40:	b	43f10c <argp_parse@@Base+0x7860>
  43ee44:	ldp	x10, x9, [x23, #-48]
  43ee48:	ldr	x8, [x23]
  43ee4c:	str	w11, [sp, #116]
  43ee50:	mov	w11, #0x64                  	// #100
  43ee54:	cmp	x9, #0x3
  43ee58:	ccmp	x8, #0x0, #0x0, lt  // lt = tstop
  43ee5c:	mul	x9, x10, x11
  43ee60:	csel	x9, x9, x10, lt  // lt = tstop
  43ee64:	tbnz	x8, #63, 43f6b4 <argp_parse@@Base+0x7e08>
  43ee68:	ldurb	w11, [x23, #-56]
  43ee6c:	tbnz	x9, #63, 43f72c <argp_parse@@Base+0x7e80>
  43ee70:	mov	x10, #0x2222222222222222    	// #2459565876494606882
  43ee74:	movk	x10, #0x222, lsl #48
  43ee78:	cmp	x9, x10
  43ee7c:	b.le	43f740 <argp_parse@@Base+0x7e94>
  43ee80:	mov	w0, w12
  43ee84:	mov	w10, #0x1                   	// #1
  43ee88:	b	43f748 <argp_parse@@Base+0x7e9c>
  43ee8c:	ldur	x8, [x23, #-48]
  43ee90:	str	x8, [x19, #72]
  43ee94:	ldr	x8, [sp, #32]
  43ee98:	stp	xzr, xzr, [x8]
  43ee9c:	str	xzr, [x8, #16]
  43eea0:	b	43f0fc <argp_parse@@Base+0x7850>
  43eea4:	ldur	x8, [x23, #-112]
  43eea8:	str	x8, [x19, #56]
  43eeac:	ldur	x9, [x23, #-48]
  43eeb0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  43eeb4:	neg	x10, x9
  43eeb8:	cmp	x9, x8
  43eebc:	str	x10, [x19, #64]
  43eec0:	b.eq	43ff44 <argp_parse@@Base+0x8698>  // b.none
  43eec4:	ldr	x9, [x23, #8]
  43eec8:	neg	x10, x9
  43eecc:	cmp	x9, x8
  43eed0:	b	43f518 <argp_parse@@Base+0x7c6c>
  43eed4:	ldur	x8, [x23, #-56]
  43eed8:	b	43eff0 <argp_parse@@Base+0x7744>
  43eedc:	mov	w8, #0x6270                	// #25200
  43eee0:	str	w11, [sp, #116]
  43eee4:	str	w12, [sp, #60]
  43eee8:	str	w8, [x19, #24]
  43eeec:	ldr	x8, [x23, #48]
  43eef0:	ldp	q1, q0, [x23, #16]
  43eef4:	ldr	q2, [x23]
  43eef8:	add	x1, sp, #0xa0
  43eefc:	mov	w2, #0x1                   	// #1
  43ef00:	mov	x0, x19
  43ef04:	str	x8, [sp, #208]
  43ef08:	stp	q1, q0, [sp, #176]
  43ef0c:	str	q2, [sp, #160]
  43ef10:	mov	w21, #0x1                   	// #1
  43ef14:	bl	44058c <argp_parse@@Base+0x8ce0>
  43ef18:	tbz	w0, #0, 43ff48 <argp_parse@@Base+0x869c>
  43ef1c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43ef20:	add	x1, x1, #0x460
  43ef24:	mov	w2, #0x5                   	// #5
  43ef28:	mov	x0, xzr
  43ef2c:	bl	404900 <dcgettext@plt>
  43ef30:	mov	x1, x19
  43ef34:	bl	440344 <argp_parse@@Base+0x8a98>
  43ef38:	ldr	w12, [sp, #60]
  43ef3c:	ldr	w11, [sp, #116]
  43ef40:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ef44:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ef48:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ef4c:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ef50:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ef54:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ef58:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ef5c:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ef60:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ef64:	add	x1, x1, #0x6e8
  43ef68:	add	x2, x2, #0x952
  43ef6c:	add	x3, x3, #0x9c4
  43ef70:	mov	w4, #0x1                   	// #1
  43ef74:	mov	w5, #0x38                  	// #56
  43ef78:	add	x6, x6, #0xa20
  43ef7c:	add	x7, x7, #0xa7c
  43ef80:	sub	x30, x29, #0x30
  43ef84:	add	x14, x14, #0x870
  43ef88:	add	x15, x15, #0xa96
  43ef8c:	add	x16, x16, #0x5fc
  43ef90:	mov	w17, #0x30                  	// #48
  43ef94:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43ef98:	add	x13, x13, #0x4a0
  43ef9c:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43efa0:	sub	x8, x23, #0x110
  43efa4:	ldr	x8, [x8]
  43efa8:	ldur	x9, [x23, #-160]
  43efac:	ldur	x10, [x23, #-56]
  43efb0:	mov	w0, w11
  43efb4:	ldursw	x11, [x23, #-48]
  43efb8:	stp	x8, x9, [x19, #72]
  43efbc:	stp	x10, x11, [x19, #88]
  43efc0:	mov	w11, w0
  43efc4:	b	43f0fc <argp_parse@@Base+0x7850>
  43efc8:	ldr	x8, [x23]
  43efcc:	str	w8, [x19, #24]
  43efd0:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43efd4:	ldr	x8, [x19, #200]
  43efd8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x194b0>
  43efdc:	add	x1, x1, #0x7
  43efe0:	add	x8, x8, #0x1
  43efe4:	str	x8, [x19, #200]
  43efe8:	b	43f2b0 <argp_parse@@Base+0x7a04>
  43efec:	ldur	x8, [x23, #-48]
  43eff0:	str	x8, [x19, #8]
  43eff4:	ldr	x8, [x23]
  43eff8:	mov	w9, #0x1                   	// #1
  43effc:	strb	w9, [x19, #224]
  43f000:	str	w8, [x19, #16]
  43f004:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f008:	ldur	x21, [x23, #-208]
  43f00c:	ldrb	w8, [x19, #217]
  43f010:	cmp	x21, #0x4
  43f014:	b.lt	43f588 <argp_parse@@Base+0x7cdc>  // b.tstop
  43f018:	sub	x9, x23, #0xe0
  43f01c:	cbz	w8, 43f0b4 <argp_parse@@Base+0x7808>
  43f020:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43f024:	add	x1, x1, #0x470
  43f028:	mov	w2, #0x5                   	// #5
  43f02c:	mov	x0, xzr
  43f030:	str	w12, [sp, #60]
  43f034:	str	w11, [sp, #116]
  43f038:	str	x9, [sp, #8]
  43f03c:	bl	404900 <dcgettext@plt>
  43f040:	ldur	x1, [x23, #-216]
  43f044:	mov	x2, x21
  43f048:	bl	440980 <argp_parse@@Base+0x90d4>
  43f04c:	ldr	x9, [sp, #8]
  43f050:	ldr	w11, [sp, #116]
  43f054:	ldr	w12, [sp, #60]
  43f058:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f05c:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f060:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f064:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f068:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f06c:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f070:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f074:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f078:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f07c:	add	x13, x13, #0x4a0
  43f080:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43f084:	mov	w17, #0x30                  	// #48
  43f088:	add	x16, x16, #0x5fc
  43f08c:	add	x15, x15, #0xa96
  43f090:	add	x14, x14, #0x870
  43f094:	sub	x30, x29, #0x30
  43f098:	add	x7, x7, #0xa7c
  43f09c:	add	x6, x6, #0xa20
  43f0a0:	mov	w5, #0x38                  	// #56
  43f0a4:	mov	w4, #0x1                   	// #1
  43f0a8:	add	x3, x3, #0x9c4
  43f0ac:	add	x2, x2, #0x952
  43f0b0:	add	x1, x1, #0x6e8
  43f0b4:	ldr	x8, [x9, #16]
  43f0b8:	ldr	q0, [x9]
  43f0bc:	ldr	x9, [sp, #40]
  43f0c0:	str	x8, [x9, #16]
  43f0c4:	str	q0, [x9]
  43f0c8:	ldur	x8, [x23, #-104]
  43f0cc:	b	43f344 <argp_parse@@Base+0x7a98>
  43f0d0:	ldr	x8, [x19, #168]
  43f0d4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  43f0d8:	add	x1, x1, #0x2cd
  43f0dc:	add	x8, x8, #0x1
  43f0e0:	str	x8, [x19, #168]
  43f0e4:	b	43f2b0 <argp_parse@@Base+0x7a04>
  43f0e8:	ldur	x8, [x23, #-160]
  43f0ec:	ldur	x9, [x23, #-48]
  43f0f0:	stp	x8, x9, [x19, #72]
  43f0f4:	ldr	x8, [sp, #48]
  43f0f8:	stp	xzr, xzr, [x8]
  43f0fc:	ldr	x8, [x23]
  43f100:	str	w8, [x19, #28]
  43f104:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f108:	ldr	w8, [x23]
  43f10c:	add	w8, w8, #0xe10
  43f110:	str	w8, [x19, #24]
  43f114:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f118:	ldr	q0, [x23]
  43f11c:	ldr	x9, [sp, #48]
  43f120:	mov	w8, #0x1                   	// #1
  43f124:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43f128:	add	x1, x1, #0x436
  43f12c:	str	q0, [x9]
  43f130:	strb	w8, [x19, #160]
  43f134:	b	43f2b0 <argp_parse@@Base+0x7a04>
  43f138:	ldr	x8, [x19, #200]
  43f13c:	ldr	x9, [x19, #168]
  43f140:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43f144:	add	x1, x1, #0x448
  43f148:	add	x8, x8, #0x1
  43f14c:	add	x9, x9, #0x1
  43f150:	str	x8, [x19, #200]
  43f154:	str	x9, [x19, #168]
  43f158:	b	43f2b0 <argp_parse@@Base+0x7a04>
  43f15c:	ldr	x8, [x19, #176]
  43f160:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43f164:	add	x1, x1, #0x45c
  43f168:	add	x8, x8, #0x1
  43f16c:	str	x8, [x19, #176]
  43f170:	b	43f2b0 <argp_parse@@Base+0x7a04>
  43f174:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43f178:	add	x1, x1, #0x460
  43f17c:	b	43f268 <argp_parse@@Base+0x79bc>
  43f180:	ldur	x8, [x23, #-160]
  43f184:	ldur	x9, [x23, #-48]
  43f188:	mov	w10, #0x2                   	// #2
  43f18c:	stp	x8, x9, [x19, #72]
  43f190:	ldr	x8, [sp, #48]
  43f194:	stp	xzr, xzr, [x8]
  43f198:	str	w10, [x19, #28]
  43f19c:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f1a0:	stp	xzr, xzr, [sp, #144]
  43f1a4:	str	xzr, [sp, #136]
  43f1a8:	mov	x26, xzr
  43f1ac:	mov	x25, xzr
  43f1b0:	mov	w22, wzr
  43f1b4:	mov	w28, #0x1                   	// #1
  43f1b8:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f1bc:	sub	x8, x23, #0x110
  43f1c0:	ldur	x9, [x23, #-160]
  43f1c4:	ldur	x10, [x23, #-56]
  43f1c8:	mov	w21, w11
  43f1cc:	ldursw	x11, [x23, #-48]
  43f1d0:	ldr	x8, [x8]
  43f1d4:	mov	w0, w12
  43f1d8:	mov	w12, #0x2                   	// #2
  43f1dc:	stp	x10, x11, [x19, #88]
  43f1e0:	mov	w11, w21
  43f1e4:	stp	x8, x9, [x19, #72]
  43f1e8:	str	w12, [x19, #28]
  43f1ec:	mov	w12, w0
  43f1f0:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f1f4:	ldr	x8, [x19, #184]
  43f1f8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43f1fc:	add	x1, x1, #0x451
  43f200:	add	x8, x8, #0x1
  43f204:	str	x8, [x19, #184]
  43f208:	b	43f2b0 <argp_parse@@Base+0x7a04>
  43f20c:	ldr	x8, [x19, #208]
  43f210:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43f214:	add	x1, x1, #0x457
  43f218:	add	x8, x8, #0x1
  43f21c:	str	x8, [x19, #208]
  43f220:	b	43f2b0 <argp_parse@@Base+0x7a04>
  43f224:	ldr	x28, [x23, #8]
  43f228:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f22c:	ldur	x8, [x23, #-104]
  43f230:	str	x8, [x19, #64]
  43f234:	ldur	x8, [x23, #-56]
  43f238:	str	x8, [x19, #56]
  43f23c:	b	43f624 <argp_parse@@Base+0x7d78>
  43f240:	ldur	x8, [x23, #-56]
  43f244:	mov	x28, xzr
  43f248:	mov	x26, xzr
  43f24c:	mov	x25, xzr
  43f250:	stp	xzr, xzr, [sp, #136]
  43f254:	str	x8, [sp, #152]
  43f258:	mov	w22, wzr
  43f25c:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f260:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43f264:	add	x1, x1, #0x469
  43f268:	mov	w2, #0x5                   	// #5
  43f26c:	mov	x0, xzr
  43f270:	mov	w21, w12
  43f274:	str	w11, [sp, #116]
  43f278:	bl	404900 <dcgettext@plt>
  43f27c:	mov	x1, x19
  43f280:	bl	440344 <argp_parse@@Base+0x8a98>
  43f284:	b	43f2cc <argp_parse@@Base+0x7a20>
  43f288:	ldur	x8, [x23, #-56]
  43f28c:	mov	x28, xzr
  43f290:	mov	x26, xzr
  43f294:	mov	x25, xzr
  43f298:	stp	xzr, xzr, [sp, #144]
  43f29c:	str	x8, [sp, #136]
  43f2a0:	mov	w22, wzr
  43f2a4:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f2a8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  43f2ac:	add	x1, x1, #0x376
  43f2b0:	mov	w2, #0x5                   	// #5
  43f2b4:	mov	x0, xzr
  43f2b8:	mov	w21, w12
  43f2bc:	str	w11, [sp, #116]
  43f2c0:	bl	404900 <dcgettext@plt>
  43f2c4:	mov	x1, x19
  43f2c8:	bl	43ff6c <argp_parse@@Base+0x86c0>
  43f2cc:	ldr	w11, [sp, #116]
  43f2d0:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f2d4:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f2d8:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f2dc:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f2e0:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f2e4:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f2e8:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f2ec:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f2f0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f2f4:	mov	w12, w21
  43f2f8:	add	x13, x13, #0x4a0
  43f2fc:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43f300:	mov	w17, #0x30                  	// #48
  43f304:	add	x16, x16, #0x5fc
  43f308:	add	x15, x15, #0xa96
  43f30c:	add	x14, x14, #0x870
  43f310:	sub	x30, x29, #0x30
  43f314:	add	x7, x7, #0xa7c
  43f318:	add	x6, x6, #0xa20
  43f31c:	mov	w5, #0x38                  	// #56
  43f320:	mov	w4, #0x1                   	// #1
  43f324:	add	x3, x3, #0x9c4
  43f328:	add	x2, x2, #0x952
  43f32c:	add	x1, x1, #0x6e8
  43f330:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f334:	ldr	x8, [x23]
  43f338:	str	w8, [x19, #20]
  43f33c:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f340:	ldur	x8, [x23, #-56]
  43f344:	str	x8, [x19, #56]
  43f348:	ldr	x8, [x23, #8]
  43f34c:	str	x8, [x19, #64]
  43f350:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f354:	ldr	x8, [x19, #208]
  43f358:	mov	w21, w11
  43f35c:	mov	w11, #0x64                  	// #100
  43f360:	add	x8, x8, #0x1
  43f364:	str	x8, [x19, #208]
  43f368:	ldp	x10, x9, [x23, #-48]
  43f36c:	ldr	x8, [x23]
  43f370:	cmp	x9, #0x3
  43f374:	ccmp	x8, #0x0, #0x0, lt  // lt = tstop
  43f378:	mul	x9, x10, x11
  43f37c:	csel	x9, x9, x10, lt  // lt = tstop
  43f380:	tbnz	x8, #63, 43f6f0 <argp_parse@@Base+0x7e44>
  43f384:	ldurb	w11, [x23, #-56]
  43f388:	tbnz	x9, #63, 43f804 <argp_parse@@Base+0x7f58>
  43f38c:	mov	x10, #0x2222222222222222    	// #2459565876494606882
  43f390:	movk	x10, #0x222, lsl #48
  43f394:	cmp	x9, x10
  43f398:	b.le	43f818 <argp_parse@@Base+0x7f6c>
  43f39c:	mov	w0, w12
  43f3a0:	mov	w10, #0x1                   	// #1
  43f3a4:	b	43f820 <argp_parse@@Base+0x7f74>
  43f3a8:	ldur	x28, [x23, #-56]
  43f3ac:	stp	xzr, xzr, [sp, #144]
  43f3b0:	str	xzr, [sp, #136]
  43f3b4:	mov	x26, xzr
  43f3b8:	b	43f4a4 <argp_parse@@Base+0x7bf8>
  43f3bc:	mov	w8, #0x6270                	// #25200
  43f3c0:	str	w8, [x19, #24]
  43f3c4:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f3c8:	ldur	x25, [x23, #-56]
  43f3cc:	mov	x28, xzr
  43f3d0:	stp	xzr, xzr, [sp, #144]
  43f3d4:	str	xzr, [sp, #136]
  43f3d8:	mov	x26, xzr
  43f3dc:	mov	w22, wzr
  43f3e0:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f3e4:	ldr	x10, [x19, #168]
  43f3e8:	ldp	x8, x9, [x23, #8]
  43f3ec:	mov	w21, w11
  43f3f0:	cbz	x10, 43f404 <argp_parse@@Base+0x7b58>
  43f3f4:	ldr	x11, [x19, #48]
  43f3f8:	cbnz	x11, 43f404 <argp_parse@@Base+0x7b58>
  43f3fc:	ldrb	w11, [x19, #161]
  43f400:	cbz	w11, 43fa30 <argp_parse@@Base+0x8184>
  43f404:	cmp	x9, #0x5
  43f408:	b.lt	43f658 <argp_parse@@Base+0x7dac>  // b.tstop
  43f40c:	mov	x11, #0xd70b                	// #55051
  43f410:	mov	w0, w12
  43f414:	mov	x12, #0x594b                	// #22859
  43f418:	movk	x11, #0x70a3, lsl #16
  43f41c:	movk	x12, #0x3886, lsl #16
  43f420:	movk	x11, #0xa3d, lsl #32
  43f424:	movk	x12, #0xc5d6, lsl #32
  43f428:	add	x10, x10, #0x1
  43f42c:	movk	x11, #0xa3d7, lsl #48
  43f430:	movk	x12, #0x346d, lsl #48
  43f434:	str	x10, [x19, #168]
  43f438:	smulh	x10, x8, x11
  43f43c:	smulh	x12, x8, x12
  43f440:	add	x10, x10, x8
  43f444:	asr	x13, x12, #11
  43f448:	add	x12, x13, x12, lsr #63
  43f44c:	asr	x13, x10, #6
  43f450:	add	x10, x13, x10, lsr #63
  43f454:	smulh	x11, x10, x11
  43f458:	add	x11, x11, x10
  43f45c:	asr	x13, x11, #6
  43f460:	add	x11, x13, x11, lsr #63
  43f464:	mov	w13, #0x64                  	// #100
  43f468:	msub	x8, x10, x13, x8
  43f46c:	msub	x10, x11, x13, x10
  43f470:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f474:	sub	x9, x9, #0x4
  43f478:	add	x13, x13, #0x4a0
  43f47c:	stp	x10, x8, [x19, #56]
  43f480:	str	x12, [x19, #40]
  43f484:	mov	w12, w0
  43f488:	str	x9, [x19, #48]
  43f48c:	mov	w11, w21
  43f490:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f494:	ldur	x26, [x23, #-56]
  43f498:	mov	x28, xzr
  43f49c:	stp	xzr, xzr, [sp, #144]
  43f4a0:	str	xzr, [sp, #136]
  43f4a4:	mov	x25, xzr
  43f4a8:	mov	w22, wzr
  43f4ac:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f4b0:	mov	w8, #0x1                   	// #1
  43f4b4:	mov	x28, xzr
  43f4b8:	stp	xzr, xzr, [sp, #144]
  43f4bc:	mov	x26, xzr
  43f4c0:	mov	x25, xzr
  43f4c4:	mov	w22, wzr
  43f4c8:	str	x8, [sp, #136]
  43f4cc:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f4d0:	str	xzr, [x19, #8]
  43f4d4:	ldur	x8, [x23, #-56]
  43f4d8:	str	w8, [x19, #16]
  43f4dc:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f4e0:	str	xzr, [x19, #8]
  43f4e4:	ldr	x8, [x23]
  43f4e8:	str	w8, [x19, #16]
  43f4ec:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f4f0:	ldur	x8, [x23, #-168]
  43f4f4:	b	43f618 <argp_parse@@Base+0x7d6c>
  43f4f8:	ldur	x8, [x23, #-104]
  43f4fc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  43f500:	str	x8, [x19, #64]
  43f504:	ldur	x8, [x23, #-56]
  43f508:	str	x8, [x19, #56]
  43f50c:	ldr	x8, [x23, #8]
  43f510:	neg	x10, x8
  43f514:	cmp	x8, x9
  43f518:	str	x10, [x19, #40]
  43f51c:	b.eq	43ff44 <argp_parse@@Base+0x8698>  // b.none
  43f520:	ldr	x8, [x23, #16]
  43f524:	str	x8, [x19, #48]
  43f528:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f52c:	mov	x28, xzr
  43f530:	stp	xzr, xzr, [sp, #144]
  43f534:	str	xzr, [sp, #136]
  43f538:	mov	x26, xzr
  43f53c:	mov	w22, wzr
  43f540:	mov	w25, #0x1                   	// #1
  43f544:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f548:	mov	x28, xzr
  43f54c:	stp	xzr, xzr, [sp, #144]
  43f550:	str	xzr, [sp, #136]
  43f554:	mov	x25, xzr
  43f558:	mov	w22, wzr
  43f55c:	mov	w26, #0x1                   	// #1
  43f560:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f564:	ldur	x9, [x23, #-48]
  43f568:	tbnz	x9, #63, 43f684 <argp_parse@@Base+0x7dd8>
  43f56c:	cmn	x8, #0x1
  43f570:	b.eq	43f694 <argp_parse@@Base+0x7de8>  // b.none
  43f574:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  43f578:	sdiv	x10, x10, x8
  43f57c:	cmp	x10, x9
  43f580:	b.ge	43f694 <argp_parse@@Base+0x7de8>  // b.tcont
  43f584:	b	43ff44 <argp_parse@@Base+0x8698>
  43f588:	cbz	w8, 43f614 <argp_parse@@Base+0x7d68>
  43f58c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43f590:	add	x1, x1, #0x4a8
  43f594:	mov	w2, #0x5                   	// #5
  43f598:	mov	x0, xzr
  43f59c:	mov	w21, w12
  43f5a0:	str	w11, [sp, #116]
  43f5a4:	bl	404900 <dcgettext@plt>
  43f5a8:	ldur	x1, [x23, #-216]
  43f5ac:	bl	440980 <argp_parse@@Base+0x90d4>
  43f5b0:	ldr	w11, [sp, #116]
  43f5b4:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f5b8:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f5bc:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f5c0:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f5c4:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f5c8:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f5cc:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f5d0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f5d4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f5d8:	mov	w12, w21
  43f5dc:	add	x13, x13, #0x4a0
  43f5e0:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43f5e4:	mov	w17, #0x30                  	// #48
  43f5e8:	add	x16, x16, #0x5fc
  43f5ec:	add	x15, x15, #0xa96
  43f5f0:	add	x14, x14, #0x870
  43f5f4:	sub	x30, x29, #0x30
  43f5f8:	add	x7, x7, #0xa7c
  43f5fc:	add	x6, x6, #0xa20
  43f600:	mov	w5, #0x38                  	// #56
  43f604:	mov	w4, #0x1                   	// #1
  43f608:	add	x3, x3, #0x9c4
  43f60c:	add	x2, x2, #0x952
  43f610:	add	x1, x1, #0x6e8
  43f614:	ldur	x8, [x23, #-216]
  43f618:	str	x8, [x19, #56]
  43f61c:	ldur	x8, [x23, #-104]
  43f620:	str	x8, [x19, #64]
  43f624:	ldr	x8, [x23, #16]
  43f628:	ldr	q0, [x23]
  43f62c:	ldr	x9, [sp, #40]
  43f630:	str	x8, [x9, #16]
  43f634:	str	q0, [x9]
  43f638:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f63c:	ldr	x10, [x19, #200]
  43f640:	cmp	x9, #0x3
  43f644:	add	x10, x10, #0x1
  43f648:	str	x10, [x19, #200]
  43f64c:	b.ge	43f888 <argp_parse@@Base+0x7fdc>  // b.tcont
  43f650:	mov	x9, xzr
  43f654:	b	43f8b4 <argp_parse@@Base+0x8008>
  43f658:	ldr	x10, [x19, #200]
  43f65c:	cmp	x9, #0x3
  43f660:	add	x10, x10, #0x1
  43f664:	str	x10, [x19, #200]
  43f668:	b.ge	43f960 <argp_parse@@Base+0x80b4>  // b.tcont
  43f66c:	mov	x9, xzr
  43f670:	b	43f98c <argp_parse@@Base+0x80e0>
  43f674:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  43f678:	b	43f688 <argp_parse@@Base+0x7ddc>
  43f67c:	ldur	x9, [x23, #-56]
  43f680:	tbz	x9, #63, 43f56c <argp_parse@@Base+0x7cc0>
  43f684:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  43f688:	sdiv	x10, x10, x8
  43f68c:	cmp	x9, x10
  43f690:	b.lt	43ff44 <argp_parse@@Base+0x8698>  // b.tstop
  43f694:	mul	x8, x9, x8
  43f698:	mov	x28, xzr
  43f69c:	str	xzr, [sp, #136]
  43f6a0:	mov	x26, xzr
  43f6a4:	mov	x25, xzr
  43f6a8:	mov	w22, wzr
  43f6ac:	stp	x8, xzr, [sp, #144]
  43f6b0:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f6b4:	mov	x8, #0xd70b                	// #55051
  43f6b8:	movk	x8, #0x70a3, lsl #16
  43f6bc:	movk	x8, #0xa3d, lsl #32
  43f6c0:	movk	x8, #0xa3d7, lsl #48
  43f6c4:	smulh	x8, x9, x8
  43f6c8:	add	x8, x8, x9
  43f6cc:	mov	w0, w12
  43f6d0:	asr	x12, x8, #6
  43f6d4:	mov	w11, #0x64                  	// #100
  43f6d8:	add	x8, x12, x8, lsr #63
  43f6dc:	mov	w10, #0x3c                  	// #60
  43f6e0:	msub	x9, x8, x11, x9
  43f6e4:	madd	x8, x8, x10, x9
  43f6e8:	mov	w9, #0x1                   	// #1
  43f6ec:	b	43f784 <argp_parse@@Base+0x7ed8>
  43f6f0:	mov	x8, #0xd70b                	// #55051
  43f6f4:	movk	x8, #0x70a3, lsl #16
  43f6f8:	movk	x8, #0xa3d, lsl #32
  43f6fc:	movk	x8, #0xa3d7, lsl #48
  43f700:	smulh	x8, x9, x8
  43f704:	add	x8, x8, x9
  43f708:	mov	w0, w12
  43f70c:	asr	x12, x8, #6
  43f710:	mov	w11, #0x64                  	// #100
  43f714:	add	x8, x12, x8, lsr #63
  43f718:	mov	w10, #0x3c                  	// #60
  43f71c:	msub	x9, x8, x11, x9
  43f720:	madd	x8, x8, x10, x9
  43f724:	mov	w9, #0x1                   	// #1
  43f728:	b	43f85c <argp_parse@@Base+0x7fb0>
  43f72c:	mov	x10, #0xdddddddddddddddd    	// #-2459565876494606883
  43f730:	movk	x10, #0xddde
  43f734:	movk	x10, #0xfddd, lsl #48
  43f738:	cmp	x9, x10
  43f73c:	b.lt	43ee80 <argp_parse@@Base+0x75d4>  // b.tstop
  43f740:	mov	w0, w12
  43f744:	mov	w10, wzr
  43f748:	mov	w12, #0x3c                  	// #60
  43f74c:	mul	x12, x9, x12
  43f750:	cbz	w11, 43f768 <argp_parse@@Base+0x7ebc>
  43f754:	orr	x9, x8, #0x8000000000000000
  43f758:	cmp	x12, x9
  43f75c:	cset	w9, lt  // lt = tstop
  43f760:	sub	x8, x12, x8
  43f764:	b	43f77c <argp_parse@@Base+0x7ed0>
  43f768:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  43f76c:	sub	x9, x9, x8
  43f770:	cmp	x9, x12
  43f774:	cset	w9, lt  // lt = tstop
  43f778:	add	x8, x12, x8
  43f77c:	orr	w9, w10, w9
  43f780:	eor	w9, w9, #0x1
  43f784:	mov	w21, #0x1                   	// #1
  43f788:	cbz	w9, 43ff48 <argp_parse@@Base+0x869c>
  43f78c:	add	x9, x8, #0x5a0
  43f790:	cmp	x9, #0xb40
  43f794:	b.hi	43ff48 <argp_parse@@Base+0x869c>  // b.pmore
  43f798:	mov	w9, #0x3c                  	// #60
  43f79c:	mul	w8, w8, w9
  43f7a0:	str	w8, [x19, #24]
  43f7a4:	ldur	x9, [x23, #-112]
  43f7a8:	tbnz	x9, #63, 43f7c8 <argp_parse@@Base+0x7f1c>
  43f7ac:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  43f7b0:	sub	x11, x10, x9
  43f7b4:	sxtw	x10, w8
  43f7b8:	cmp	x11, x10
  43f7bc:	mov	w12, w0
  43f7c0:	b.ge	43f7e0 <argp_parse@@Base+0x7f34>  // b.tcont
  43f7c4:	b	43ff3c <argp_parse@@Base+0x8690>
  43f7c8:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  43f7cc:	sxtw	x10, w8
  43f7d0:	sub	x11, x11, x9
  43f7d4:	cmp	x11, x10
  43f7d8:	mov	w12, w0
  43f7dc:	b.gt	43ff3c <argp_parse@@Base+0x8690>
  43f7e0:	add	x10, x9, x10
  43f7e4:	mov	w11, #0x80000000            	// #-2147483648
  43f7e8:	add	x10, x10, x11
  43f7ec:	lsr	x10, x10, #32
  43f7f0:	cbnz	x10, 43ff3c <argp_parse@@Base+0x8690>
  43f7f4:	ldr	w11, [sp, #116]
  43f7f8:	add	w8, w8, w9
  43f7fc:	str	w8, [x19, #24]
  43f800:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f804:	mov	x10, #0xdddddddddddddddd    	// #-2459565876494606883
  43f808:	movk	x10, #0xddde
  43f80c:	movk	x10, #0xfddd, lsl #48
  43f810:	cmp	x9, x10
  43f814:	b.lt	43f39c <argp_parse@@Base+0x7af0>  // b.tstop
  43f818:	mov	w0, w12
  43f81c:	mov	w10, wzr
  43f820:	mov	w12, #0x3c                  	// #60
  43f824:	mul	x12, x9, x12
  43f828:	cbz	w11, 43f840 <argp_parse@@Base+0x7f94>
  43f82c:	orr	x9, x8, #0x8000000000000000
  43f830:	cmp	x12, x9
  43f834:	cset	w9, lt  // lt = tstop
  43f838:	sub	x8, x12, x8
  43f83c:	b	43f854 <argp_parse@@Base+0x7fa8>
  43f840:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  43f844:	sub	x9, x9, x8
  43f848:	cmp	x9, x12
  43f84c:	cset	w9, lt  // lt = tstop
  43f850:	add	x8, x12, x8
  43f854:	orr	w9, w10, w9
  43f858:	eor	w9, w9, #0x1
  43f85c:	mov	w11, w21
  43f860:	mov	w21, #0x1                   	// #1
  43f864:	cbz	w9, 43ff48 <argp_parse@@Base+0x869c>
  43f868:	add	x9, x8, #0x5a0
  43f86c:	cmp	x9, #0xb40
  43f870:	b.hi	43ff48 <argp_parse@@Base+0x869c>  // b.pmore
  43f874:	mov	w9, #0x3c                  	// #60
  43f878:	mul	w8, w8, w9
  43f87c:	str	w8, [x19, #24]
  43f880:	mov	w12, w0
  43f884:	b	43f9a4 <argp_parse@@Base+0x80f8>
  43f888:	mov	x9, #0xd70b                	// #55051
  43f88c:	movk	x9, #0x70a3, lsl #16
  43f890:	movk	x9, #0xa3d, lsl #32
  43f894:	movk	x9, #0xa3d7, lsl #48
  43f898:	smulh	x9, x8, x9
  43f89c:	add	x9, x9, x8
  43f8a0:	asr	x10, x9, #6
  43f8a4:	add	x10, x10, x9, lsr #63
  43f8a8:	mov	w9, #0x64                  	// #100
  43f8ac:	msub	x9, x10, x9, x8
  43f8b0:	mov	x8, x10
  43f8b4:	stp	x8, x9, [x19, #72]
  43f8b8:	ldr	x8, [sp, #48]
  43f8bc:	stp	xzr, xzr, [x8]
  43f8c0:	mov	w8, #0x2                   	// #2
  43f8c4:	str	w8, [x19, #28]
  43f8c8:	ldr	x8, [x23, #48]
  43f8cc:	ldp	q1, q0, [x23, #16]
  43f8d0:	ldr	q2, [x23]
  43f8d4:	add	x1, sp, #0xa0
  43f8d8:	mov	w2, #0x1                   	// #1
  43f8dc:	mov	x0, x19
  43f8e0:	str	x8, [sp, #208]
  43f8e4:	stp	q1, q0, [sp, #176]
  43f8e8:	str	q2, [sp, #160]
  43f8ec:	mov	w21, #0x1                   	// #1
  43f8f0:	bl	44058c <argp_parse@@Base+0x8ce0>
  43f8f4:	ldr	w12, [sp, #60]
  43f8f8:	ldr	w11, [sp, #116]
  43f8fc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f900:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f904:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f908:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f90c:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f910:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f914:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f918:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f91c:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43f920:	add	x1, x1, #0x6e8
  43f924:	add	x2, x2, #0x952
  43f928:	add	x3, x3, #0x9c4
  43f92c:	mov	w4, #0x1                   	// #1
  43f930:	mov	w5, #0x38                  	// #56
  43f934:	add	x6, x6, #0xa20
  43f938:	add	x7, x7, #0xa7c
  43f93c:	sub	x30, x29, #0x30
  43f940:	add	x14, x14, #0x870
  43f944:	add	x15, x15, #0xa96
  43f948:	add	x16, x16, #0x5fc
  43f94c:	mov	w17, #0x30                  	// #48
  43f950:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43f954:	add	x13, x13, #0x4a0
  43f958:	tbnz	w0, #0, 43f9a4 <argp_parse@@Base+0x80f8>
  43f95c:	b	43ff48 <argp_parse@@Base+0x869c>
  43f960:	mov	x9, #0xd70b                	// #55051
  43f964:	movk	x9, #0x70a3, lsl #16
  43f968:	movk	x9, #0xa3d, lsl #32
  43f96c:	movk	x9, #0xa3d7, lsl #48
  43f970:	smulh	x9, x8, x9
  43f974:	add	x9, x9, x8
  43f978:	asr	x10, x9, #6
  43f97c:	add	x10, x10, x9, lsr #63
  43f980:	mov	w9, #0x64                  	// #100
  43f984:	msub	x9, x10, x9, x8
  43f988:	mov	x8, x10
  43f98c:	stp	x8, x9, [x19, #72]
  43f990:	ldr	x8, [sp, #48]
  43f994:	mov	w11, w21
  43f998:	stp	xzr, xzr, [x8]
  43f99c:	mov	w8, #0x2                   	// #2
  43f9a0:	str	w8, [x19, #28]
  43f9a4:	mneg	x8, x20, x5
  43f9a8:	add	x23, x23, x8
  43f9ac:	ldr	x8, [sp, #152]
  43f9b0:	str	x28, [x23, #56]!
  43f9b4:	ldrb	w9, [x6, x27]
  43f9b8:	sub	x24, x24, x20
  43f9bc:	str	x8, [x23, #8]
  43f9c0:	ldp	x0, x8, [sp, #136]
  43f9c4:	ldrsh	w10, [x30, x24, lsl #1]
  43f9c8:	str	x25, [x23, #40]
  43f9cc:	stp	w22, w11, [x23, #48]
  43f9d0:	str	x8, [x23, #16]
  43f9d4:	sub	x8, x9, #0x1c
  43f9d8:	ldrsb	w9, [x7, x8]
  43f9dc:	stp	x0, x26, [x23, #24]
  43f9e0:	add	w9, w10, w9
  43f9e4:	cmp	w9, #0x70
  43f9e8:	b.hi	43dba4 <argp_parse@@Base+0x62f8>  // b.pmore
  43f9ec:	ldrsb	w11, [x14, x9]
  43f9f0:	and	w10, w10, #0xffff
  43f9f4:	cmp	w10, w11, uxth
  43f9f8:	b.ne	43dba4 <argp_parse@@Base+0x62f8>  // b.any
  43f9fc:	adrp	x8, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fa00:	add	x8, x8, #0x8e1
  43fa04:	ldrb	w8, [x8, x9]
  43fa08:	b	43dba8 <argp_parse@@Base+0x62fc>
  43fa0c:	ldur	x10, [x23, #-56]
  43fa10:	cmp	x9, #0x2
  43fa14:	b.gt	43fad0 <argp_parse@@Base+0x8224>
  43fa18:	ldr	x11, [x19, #200]
  43fa1c:	cbnz	x11, 43fad0 <argp_parse@@Base+0x8224>
  43fa20:	mov	w10, #0x1                   	// #1
  43fa24:	mov	x9, xzr
  43fa28:	str	x10, [x19, #200]
  43fa2c:	b	43f8b4 <argp_parse@@Base+0x8008>
  43fa30:	ldr	x10, [x23]
  43fa34:	cmp	x9, #0x2
  43fa38:	b.gt	43fae4 <argp_parse@@Base+0x8238>
  43fa3c:	ldr	x11, [x19, #200]
  43fa40:	cbnz	x11, 43fae4 <argp_parse@@Base+0x8238>
  43fa44:	mov	w10, #0x1                   	// #1
  43fa48:	mov	x9, xzr
  43fa4c:	str	x10, [x19, #200]
  43fa50:	b	43f98c <argp_parse@@Base+0x80e0>
  43fa54:	add	w9, w9, #0x1
  43fa58:	sub	x11, x11, #0x1
  43fa5c:	ldrb	w12, [x11, #1]!
  43fa60:	sub	w12, w12, #0x30
  43fa64:	cmp	w12, #0xa
  43fa68:	b.cc	43fa5c <argp_parse@@Base+0x81b0>  // b.lo, b.ul, b.last
  43fa6c:	tbz	w10, #31, 43fa9c <argp_parse@@Base+0x81f0>
  43fa70:	cbz	w9, 43fa9c <argp_parse@@Base+0x81f0>
  43fa74:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  43fa78:	cmp	x8, x12
  43fa7c:	b.ne	43fa8c <argp_parse@@Base+0x81e0>  // b.any
  43fa80:	ldr	x8, [sp, #120]
  43fa84:	mov	w12, #0x3f                  	// #63
  43fa88:	b	43e9ec <argp_parse@@Base+0x7140>
  43fa8c:	mov	w12, #0xca00                	// #51712
  43fa90:	movk	w12, #0x3b9a, lsl #16
  43fa94:	sub	x8, x8, #0x1
  43fa98:	sub	w9, w12, w9
  43fa9c:	mov	w12, w8
  43faa0:	lsr	x8, x8, #8
  43faa4:	stp	x8, x12, [sp, #96]
  43faa8:	sxtw	x8, w9
  43faac:	cmp	w10, #0x0
  43fab0:	mov	w9, #0x114                 	// #276
  43fab4:	str	x11, [x19]
  43fab8:	cinc	w12, w9, eq  // eq = none
  43fabc:	b	43e9ec <argp_parse@@Base+0x7140>
  43fac0:	add	x8, x9, #0x1
  43fac4:	str	x8, [x19]
  43fac8:	ldrb	w12, [x9]
  43facc:	b	43e9d8 <argp_parse@@Base+0x712c>
  43fad0:	mov	w11, #0x1                   	// #1
  43fad4:	stp	x10, x8, [x19, #32]
  43fad8:	strb	w11, [x19, #216]
  43fadc:	str	x9, [x19, #48]
  43fae0:	b	43f8c8 <argp_parse@@Base+0x801c>
  43fae4:	mov	w11, #0x1                   	// #1
  43fae8:	stp	x10, x8, [x19, #32]
  43faec:	strb	w11, [x19, #216]
  43faf0:	b	43f488 <argp_parse@@Base+0x7bdc>
  43faf4:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43faf8:	add	x22, x22, #0xca0
  43fafc:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fb00:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb04:	add	x22, x22, #0xcb0
  43fb08:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fb0c:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb10:	add	x22, x22, #0xcc0
  43fb14:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fb18:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb1c:	add	x22, x22, #0xcd0
  43fb20:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fb24:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb28:	add	x22, x22, #0xcf0
  43fb2c:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fb30:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb34:	add	x22, x22, #0xd00
  43fb38:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fb3c:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb40:	add	x22, x22, #0xd20
  43fb44:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb48:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb4c:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb50:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb54:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb58:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb5c:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb60:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb64:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fb68:	add	x1, x1, #0x6e8
  43fb6c:	add	x2, x2, #0x952
  43fb70:	add	x3, x3, #0x9c4
  43fb74:	mov	w4, #0x1                   	// #1
  43fb78:	mov	w5, #0x38                  	// #56
  43fb7c:	add	x6, x6, #0xa20
  43fb80:	add	x7, x7, #0xa7c
  43fb84:	sub	x30, x29, #0x30
  43fb88:	add	x14, x14, #0x870
  43fb8c:	add	x15, x15, #0xa96
  43fb90:	add	x16, x16, #0x5fc
  43fb94:	mov	w17, #0x30                  	// #48
  43fb98:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43fb9c:	add	x13, x13, #0x4a0
  43fba0:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fba4:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fba8:	add	x22, x22, #0xd50
  43fbac:	b	43fb44 <argp_parse@@Base+0x8298>
  43fbb0:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fbb4:	add	x22, x22, #0xca0
  43fbb8:	b	43fb44 <argp_parse@@Base+0x8298>
  43fbbc:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fbc0:	add	x22, x22, #0xd60
  43fbc4:	b	43fb44 <argp_parse@@Base+0x8298>
  43fbc8:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fbcc:	add	x22, x22, #0xcb0
  43fbd0:	b	43fb44 <argp_parse@@Base+0x8298>
  43fbd4:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fbd8:	add	x22, x22, #0xd70
  43fbdc:	b	43fb44 <argp_parse@@Base+0x8298>
  43fbe0:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fbe4:	add	x22, x22, #0xcc0
  43fbe8:	b	43fb44 <argp_parse@@Base+0x8298>
  43fbec:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fbf0:	add	x22, x22, #0xcd0
  43fbf4:	b	43fb44 <argp_parse@@Base+0x8298>
  43fbf8:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fbfc:	add	x22, x22, #0xd90
  43fc00:	b	43fb44 <argp_parse@@Base+0x8298>
  43fc04:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fc08:	add	x22, x22, #0xda0
  43fc0c:	b	43fb44 <argp_parse@@Base+0x8298>
  43fc10:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fc14:	add	x22, x22, #0xcf0
  43fc18:	b	43fb44 <argp_parse@@Base+0x8298>
  43fc1c:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fc20:	add	x22, x22, #0xdb0
  43fc24:	b	43fb44 <argp_parse@@Base+0x8298>
  43fc28:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fc2c:	add	x22, x22, #0xd00
  43fc30:	b	43fb44 <argp_parse@@Base+0x8298>
  43fc34:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fc38:	add	x22, x22, #0xdc0
  43fc3c:	b	43fb44 <argp_parse@@Base+0x8298>
  43fc40:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fc44:	add	x22, x22, #0xdd0
  43fc48:	b	43fb44 <argp_parse@@Base+0x8298>
  43fc4c:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fc50:	add	x22, x22, #0xde0
  43fc54:	b	43fb44 <argp_parse@@Base+0x8298>
  43fc58:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fc5c:	add	x22, x22, #0xdf0
  43fc60:	b	43fb44 <argp_parse@@Base+0x8298>
  43fc64:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fc68:	add	x22, x22, #0xe00
  43fc6c:	b	43fb44 <argp_parse@@Base+0x8298>
  43fc70:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fc74:	add	x22, x22, #0xe10
  43fc78:	b	43fb44 <argp_parse@@Base+0x8298>
  43fc7c:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fc80:	add	x22, x22, #0xe20
  43fc84:	b	43fb44 <argp_parse@@Base+0x8298>
  43fc88:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fc8c:	add	x22, x22, #0xe30
  43fc90:	b	43fb44 <argp_parse@@Base+0x8298>
  43fc94:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fc98:	add	x22, x22, #0xe40
  43fc9c:	b	43fb44 <argp_parse@@Base+0x8298>
  43fca0:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fca4:	add	x22, x22, #0xe50
  43fca8:	b	43fb44 <argp_parse@@Base+0x8298>
  43fcac:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fcb0:	add	x22, x22, #0xe60
  43fcb4:	b	43fb44 <argp_parse@@Base+0x8298>
  43fcb8:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fcbc:	add	x22, x22, #0xe80
  43fcc0:	b	43fb44 <argp_parse@@Base+0x8298>
  43fcc4:	tst	w8, #0xff
  43fcc8:	b.eq	43fd90 <argp_parse@@Base+0x84e4>  // b.none
  43fccc:	ldr	x9, [sp, #24]
  43fcd0:	and	w8, w8, #0xff
  43fcd4:	ldrb	w10, [sp, #161]
  43fcd8:	cmp	w8, #0x2e
  43fcdc:	cset	w11, ne  // ne = any
  43fce0:	add	x12, sp, #0xa0
  43fce4:	cset	w8, eq  // eq = none
  43fce8:	csel	x9, x12, x9, eq  // eq = none
  43fcec:	orr	x11, x12, x11
  43fcf0:	strb	w10, [x11]
  43fcf4:	cbz	w10, 43fd1c <argp_parse@@Base+0x8470>
  43fcf8:	ldr	x10, [sp, #16]
  43fcfc:	ldurb	w11, [x10, #-1]
  43fd00:	ldrb	w12, [x10], #1
  43fd04:	cmp	w11, #0x2e
  43fd08:	cset	w11, eq  // eq = none
  43fd0c:	cinc	x9, x9, ne  // ne = any
  43fd10:	orr	w8, w8, w11
  43fd14:	strb	w12, [x9]
  43fd18:	cbnz	w12, 43fcfc <argp_parse@@Base+0x8450>
  43fd1c:	tbz	w8, #0, 43fd90 <argp_parse@@Base+0x84e4>
  43fd20:	add	x1, sp, #0xa0
  43fd24:	mov	x0, x19
  43fd28:	bl	4431d4 <argp_parse@@Base+0xb928>
  43fd2c:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fd30:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fd34:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fd38:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fd3c:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fd40:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fd44:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fd48:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fd4c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fd50:	add	x13, x13, #0x4a0
  43fd54:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43fd58:	mov	w17, #0x30                  	// #48
  43fd5c:	add	x16, x16, #0x5fc
  43fd60:	add	x15, x15, #0xa96
  43fd64:	add	x14, x14, #0x870
  43fd68:	sub	x30, x29, #0x30
  43fd6c:	add	x7, x7, #0xa7c
  43fd70:	add	x6, x6, #0xa20
  43fd74:	mov	w5, #0x38                  	// #56
  43fd78:	mov	w4, #0x1                   	// #1
  43fd7c:	add	x3, x3, #0x9c4
  43fd80:	add	x2, x2, #0x952
  43fd84:	add	x1, x1, #0x6e8
  43fd88:	mov	x22, x0
  43fd8c:	cbnz	x0, 43e9c8 <argp_parse@@Base+0x711c>
  43fd90:	ldrb	w8, [x19, #217]
  43fd94:	cbz	w8, 43fdb4 <argp_parse@@Base+0x8508>
  43fd98:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43fd9c:	mov	w2, #0x5                   	// #5
  43fda0:	mov	x0, xzr
  43fda4:	add	x1, x1, #0xd3e
  43fda8:	bl	404900 <dcgettext@plt>
  43fdac:	add	x1, sp, #0xa0
  43fdb0:	bl	440980 <argp_parse@@Base+0x90d4>
  43fdb4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fdb8:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fdbc:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fdc0:	adrp	x6, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fdc4:	adrp	x7, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fdc8:	adrp	x14, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fdcc:	adrp	x15, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fdd0:	adrp	x16, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fdd4:	adrp	x13, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fdd8:	mov	w12, #0x3f                  	// #63
  43fddc:	add	x1, x1, #0x6e8
  43fde0:	add	x2, x2, #0x952
  43fde4:	add	x3, x3, #0x9c4
  43fde8:	mov	w4, #0x1                   	// #1
  43fdec:	mov	w5, #0x38                  	// #56
  43fdf0:	add	x6, x6, #0xa20
  43fdf4:	add	x7, x7, #0xa7c
  43fdf8:	sub	x30, x29, #0x30
  43fdfc:	add	x14, x14, #0x870
  43fe00:	add	x15, x15, #0xa96
  43fe04:	add	x16, x16, #0x5fc
  43fe08:	mov	w17, #0x30                  	// #48
  43fe0c:	mov	x18, #0x7fffffffffffffff    	// #9223372036854775807
  43fe10:	add	x13, x13, #0x4a0
  43fe14:	b	43e9d8 <argp_parse@@Base+0x712c>
  43fe18:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fe1c:	add	x22, x22, #0xec0
  43fe20:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fe24:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fe28:	add	x22, x22, #0xed0
  43fe2c:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fe30:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fe34:	add	x22, x22, #0xee0
  43fe38:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fe3c:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fe40:	add	x22, x22, #0xef0
  43fe44:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fe48:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fe4c:	add	x22, x22, #0xf00
  43fe50:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fe54:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fe58:	add	x22, x22, #0xf10
  43fe5c:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fe60:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fe64:	add	x22, x22, #0xf20
  43fe68:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fe6c:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fe70:	add	x22, x22, #0xf30
  43fe74:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fe78:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fe7c:	add	x22, x22, #0xf40
  43fe80:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fe84:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fe88:	add	x22, x22, #0xf50
  43fe8c:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fe90:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fe94:	add	x22, x22, #0xf60
  43fe98:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fe9c:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fea0:	add	x22, x22, #0xf70
  43fea4:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fea8:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43feac:	add	x22, x22, #0xf80
  43feb0:	b	43e9c8 <argp_parse@@Base+0x711c>
  43feb4:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43feb8:	add	x22, x22, #0xf90
  43febc:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fec0:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fec4:	add	x22, x22, #0xfa0
  43fec8:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fecc:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fed0:	add	x22, x22, #0xfb0
  43fed4:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fed8:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fedc:	add	x22, x22, #0xfc0
  43fee0:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fee4:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fee8:	add	x22, x22, #0xfd0
  43feec:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fef0:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43fef4:	add	x22, x22, #0xfe0
  43fef8:	b	43e9c8 <argp_parse@@Base+0x711c>
  43fefc:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  43ff00:	add	x22, x22, #0xff0
  43ff04:	b	43e9c8 <argp_parse@@Base+0x711c>
  43ff08:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43ff0c:	add	x22, x22, #0x0
  43ff10:	b	43e9c8 <argp_parse@@Base+0x711c>
  43ff14:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43ff18:	add	x22, x22, #0x10
  43ff1c:	b	43e9c8 <argp_parse@@Base+0x711c>
  43ff20:	adrp	x22, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43ff24:	add	x22, x22, #0x20
  43ff28:	b	43e9c8 <argp_parse@@Base+0x711c>
  43ff2c:	mov	w21, wzr
  43ff30:	b	43ff48 <argp_parse@@Base+0x869c>
  43ff34:	mov	w21, #0x2                   	// #2
  43ff38:	b	43ff48 <argp_parse@@Base+0x869c>
  43ff3c:	add	w8, w8, w9
  43ff40:	str	w8, [x19, #24]
  43ff44:	mov	w21, #0x1                   	// #1
  43ff48:	mov	w0, w21
  43ff4c:	add	sp, sp, #0x570
  43ff50:	ldp	x20, x19, [sp, #80]
  43ff54:	ldp	x22, x21, [sp, #64]
  43ff58:	ldp	x24, x23, [sp, #48]
  43ff5c:	ldp	x26, x25, [sp, #32]
  43ff60:	ldp	x28, x27, [sp, #16]
  43ff64:	ldp	x29, x30, [sp], #96
  43ff68:	ret
  43ff6c:	sub	sp, sp, #0xc0
  43ff70:	stp	x29, x30, [sp, #112]
  43ff74:	stp	x26, x25, [sp, #128]
  43ff78:	stp	x24, x23, [sp, #144]
  43ff7c:	stp	x22, x21, [sp, #160]
  43ff80:	stp	x20, x19, [sp, #176]
  43ff84:	ldrb	w8, [x1, #217]
  43ff88:	add	x29, sp, #0x70
  43ff8c:	cbnz	w8, 43ffac <argp_parse@@Base+0x8700>
  43ff90:	ldp	x20, x19, [sp, #176]
  43ff94:	ldp	x22, x21, [sp, #160]
  43ff98:	ldp	x24, x23, [sp, #144]
  43ff9c:	ldp	x26, x25, [sp, #128]
  43ffa0:	ldp	x29, x30, [sp, #112]
  43ffa4:	add	sp, sp, #0xc0
  43ffa8:	ret
  43ffac:	mov	x19, x1
  43ffb0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43ffb4:	mov	x20, x0
  43ffb8:	add	x1, x1, #0xc4c
  43ffbc:	mov	w2, #0x5                   	// #5
  43ffc0:	mov	x0, xzr
  43ffc4:	bl	404900 <dcgettext@plt>
  43ffc8:	mov	x1, x20
  43ffcc:	bl	440980 <argp_parse@@Base+0x90d4>
  43ffd0:	ldr	x8, [x19, #168]
  43ffd4:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  43ffd8:	cbz	x8, 44000c <argp_parse@@Base+0x8760>
  43ffdc:	ldrb	w8, [x19, #218]
  43ffe0:	cbnz	w8, 44000c <argp_parse@@Base+0x8760>
  43ffe4:	ldr	x0, [x22, #96]
  43ffe8:	ldr	x3, [x19, #40]
  43ffec:	ldp	x4, x5, [x19, #56]
  43fff0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  43fff4:	add	x2, x2, #0xc5d
  43fff8:	mov	w1, #0x1                   	// #1
  43fffc:	mov	w23, #0x1                   	// #1
  440000:	bl	404650 <__fprintf_chk@plt>
  440004:	strb	w23, [x19, #218]
  440008:	b	440010 <argp_parse@@Base+0x8764>
  44000c:	mov	w23, wzr
  440010:	ldrb	w8, [x19, #216]
  440014:	ldrb	w9, [x19, #223]
  440018:	cmp	w8, w9
  44001c:	b.eq	440068 <argp_parse@@Base+0x87bc>  // b.none
  440020:	cbz	w23, 440030 <argp_parse@@Base+0x8784>
  440024:	ldr	x1, [x22, #96]
  440028:	mov	w0, #0x20                  	// #32
  44002c:	bl	4040c0 <fputc@plt>
  440030:	ldr	x20, [x22, #96]
  440034:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440038:	add	x1, x1, #0xc77
  44003c:	mov	w2, #0x5                   	// #5
  440040:	mov	x0, xzr
  440044:	bl	404900 <dcgettext@plt>
  440048:	ldr	x3, [x19, #40]
  44004c:	mov	x2, x0
  440050:	mov	w1, #0x1                   	// #1
  440054:	mov	x0, x20
  440058:	mov	w23, #0x1                   	// #1
  44005c:	bl	404650 <__fprintf_chk@plt>
  440060:	ldrb	w8, [x19, #216]
  440064:	strb	w8, [x19, #223]
  440068:	ldr	x8, [x19, #200]
  44006c:	cbz	x8, 4400e4 <argp_parse@@Base+0x8838>
  440070:	ldrb	w8, [x19, #221]
  440074:	cbnz	w8, 4400e4 <argp_parse@@Base+0x8838>
  440078:	ldp	x4, x5, [x19, #80]
  44007c:	ldr	x0, [x22, #96]
  440080:	ldr	x3, [x19, #72]
  440084:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440088:	eor	w8, w23, #0x1
  44008c:	add	x9, x9, #0xc83
  440090:	add	x2, x9, x8
  440094:	mov	w1, #0x1                   	// #1
  440098:	bl	404650 <__fprintf_chk@plt>
  44009c:	ldr	x3, [x19, #96]
  4400a0:	cbz	x3, 4400b8 <argp_parse@@Base+0x880c>
  4400a4:	ldr	x0, [x22, #96]
  4400a8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4400ac:	add	x2, x2, #0xc96
  4400b0:	mov	w1, #0x1                   	// #1
  4400b4:	bl	404650 <__fprintf_chk@plt>
  4400b8:	ldr	w8, [x19, #28]
  4400bc:	cmp	w8, #0x1
  4400c0:	b.ne	4400dc <argp_parse@@Base+0x8830>  // b.any
  4400c4:	ldr	x3, [x22, #96]
  4400c8:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4400cc:	add	x0, x0, #0x6c0
  4400d0:	mov	w1, #0x2                   	// #2
  4400d4:	mov	w2, #0x1                   	// #1
  4400d8:	bl	4047e0 <fwrite@plt>
  4400dc:	mov	w23, #0x1                   	// #1
  4400e0:	strb	w23, [x19, #221]
  4400e4:	ldr	x8, [x19, #176]
  4400e8:	cbz	x8, 440150 <argp_parse@@Base+0x88a4>
  4400ec:	ldrb	w8, [x19, #219]
  4400f0:	cbnz	w8, 440150 <argp_parse@@Base+0x88a4>
  4400f4:	cbz	w23, 440104 <argp_parse@@Base+0x8858>
  4400f8:	ldr	x1, [x22, #96]
  4400fc:	mov	w0, #0x20                  	// #32
  440100:	bl	4040c0 <fputc@plt>
  440104:	ldr	x20, [x22, #96]
  440108:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  44010c:	add	x1, x1, #0xc9c
  440110:	mov	w2, #0x5                   	// #5
  440114:	mov	x0, xzr
  440118:	bl	404900 <dcgettext@plt>
  44011c:	mov	x21, x0
  440120:	add	x1, sp, #0xc
  440124:	mov	x0, x19
  440128:	bl	4430f8 <argp_parse@@Base+0xb84c>
  44012c:	ldr	x4, [x19, #8]
  440130:	ldr	w5, [x19, #16]
  440134:	mov	x3, x0
  440138:	mov	w1, #0x1                   	// #1
  44013c:	mov	x0, x20
  440140:	mov	x2, x21
  440144:	mov	w23, #0x1                   	// #1
  440148:	bl	404650 <__fprintf_chk@plt>
  44014c:	strb	w23, [x19, #219]
  440150:	ldr	x8, [x19, #184]
  440154:	cbz	x8, 4401a4 <argp_parse@@Base+0x88f8>
  440158:	ldrb	w8, [x19, #220]
  44015c:	cbnz	w8, 4401a4 <argp_parse@@Base+0x88f8>
  440160:	ldr	x10, [x19, #192]
  440164:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440168:	ldr	x0, [x22, #96]
  44016c:	eor	w8, w23, #0x1
  440170:	add	x9, x9, #0xcbb
  440174:	ldr	w3, [x19, #20]
  440178:	add	x2, x9, x8
  44017c:	adrp	x8, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440180:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  440184:	add	x8, x8, #0xcc7
  440188:	add	x9, x9, #0x66
  44018c:	cmp	x10, #0x0
  440190:	csel	x4, x9, x8, eq  // eq = none
  440194:	mov	w1, #0x1                   	// #1
  440198:	mov	w23, #0x1                   	// #1
  44019c:	bl	404650 <__fprintf_chk@plt>
  4401a0:	strb	w23, [x19, #220]
  4401a4:	ldr	x8, [x19, #208]
  4401a8:	cbz	x8, 4402ec <argp_parse@@Base+0x8a40>
  4401ac:	ldrb	w8, [x19, #222]
  4401b0:	cbnz	w8, 4402ec <argp_parse@@Base+0x8a40>
  4401b4:	ldrsw	x25, [x19, #24]
  4401b8:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4401bc:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  4401c0:	eor	w8, w23, #0x1
  4401c4:	add	x9, x9, #0xccc
  4401c8:	movk	x10, #0x91a2, lsl #16
  4401cc:	add	x21, x9, x8
  4401d0:	mul	x8, x25, x10
  4401d4:	lsr	x8, x8, #32
  4401d8:	add	w8, w8, w25
  4401dc:	asr	w9, w8, #11
  4401e0:	add	w26, w9, w8, lsr #31
  4401e4:	ldr	x20, [x22, #96]
  4401e8:	cmp	w26, #0x0
  4401ec:	mov	w11, #0x2b                  	// #43
  4401f0:	cneg	w5, w26, mi  // mi = first
  4401f4:	cmp	w25, #0x0
  4401f8:	mov	w8, #0x2d                  	// #45
  4401fc:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440200:	csel	w4, w8, w11, lt  // lt = tstop
  440204:	add	x3, x3, #0xf8e
  440208:	add	x0, sp, #0xc
  44020c:	mov	w1, #0x1                   	// #1
  440210:	mov	w2, #0x1b                  	// #27
  440214:	add	x24, sp, #0xc
  440218:	mov	w23, #0x1                   	// #1
  44021c:	bl	403f60 <__sprintf_chk@plt>
  440220:	mov	w8, #0xe10                 	// #3600
  440224:	msub	w9, w26, w8, w25
  440228:	cbz	w9, 4402d4 <argp_parse@@Base+0x8a28>
  44022c:	cmp	w9, #0x0
  440230:	mov	w11, #0x8889                	// #34953
  440234:	cneg	w9, w9, mi  // mi = first
  440238:	movk	w11, #0x8888, lsl #16
  44023c:	mov	w13, #0x81b5                	// #33205
  440240:	and	w14, w9, #0xffff
  440244:	movk	w13, #0x1b4e, lsl #16
  440248:	umull	x11, w14, w11
  44024c:	mov	w12, #0x3c                  	// #60
  440250:	umull	x13, w14, w13
  440254:	lsr	x14, x11, #37
  440258:	msub	w9, w14, w12, w9
  44025c:	mov	w12, #0xcccd                	// #52429
  440260:	movk	w12, #0xcccc, lsl #16
  440264:	lsr	x13, x13, #38
  440268:	ubfx	x11, x11, #37, #8
  44026c:	add	x8, x24, w0, sxtw
  440270:	add	w13, w13, #0x30
  440274:	umull	x11, w11, w12
  440278:	strb	w13, [x8, #1]
  44027c:	lsr	x13, x11, #35
  440280:	mov	w11, #0xa                   	// #10
  440284:	msub	w13, w13, w11, w14
  440288:	mov	w10, #0x3a                  	// #58
  44028c:	tst	w9, #0xffff
  440290:	orr	w13, w13, #0x30
  440294:	strb	w10, [x8]
  440298:	strb	w13, [x8, #2]
  44029c:	b.ne	4402a8 <argp_parse@@Base+0x89fc>  // b.any
  4402a0:	add	x9, x8, #0x3
  4402a4:	b	4402d0 <argp_parse@@Base+0x8a24>
  4402a8:	strb	w10, [x8, #3]
  4402ac:	and	w10, w9, #0xff
  4402b0:	umull	x10, w10, w12
  4402b4:	lsr	x10, x10, #35
  4402b8:	msub	w9, w10, w11, w9
  4402bc:	orr	w12, w10, #0x30
  4402c0:	orr	w10, w9, #0x30
  4402c4:	add	x9, x8, #0x6
  4402c8:	strb	w12, [x8, #4]
  4402cc:	strb	w10, [x8, #5]
  4402d0:	strb	wzr, [x9]
  4402d4:	add	x3, sp, #0xc
  4402d8:	mov	w1, #0x1                   	// #1
  4402dc:	mov	x0, x20
  4402e0:	mov	x2, x21
  4402e4:	bl	404650 <__fprintf_chk@plt>
  4402e8:	strb	w23, [x19, #222]
  4402ec:	ldrb	w8, [x19, #160]
  4402f0:	cbz	w8, 440334 <argp_parse@@Base+0x8a88>
  4402f4:	ldr	x19, [x19, #88]
  4402f8:	cbz	w23, 440308 <argp_parse@@Base+0x8a5c>
  4402fc:	ldr	x1, [x22, #96]
  440300:	mov	w0, #0x20                  	// #32
  440304:	bl	4040c0 <fputc@plt>
  440308:	ldr	x20, [x22, #96]
  44030c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440310:	add	x1, x1, #0xcd3
  440314:	mov	w2, #0x5                   	// #5
  440318:	mov	x0, xzr
  44031c:	bl	404900 <dcgettext@plt>
  440320:	mov	x2, x0
  440324:	mov	w1, #0x1                   	// #1
  440328:	mov	x0, x20
  44032c:	mov	x3, x19
  440330:	bl	404650 <__fprintf_chk@plt>
  440334:	ldr	x1, [x22, #96]
  440338:	mov	w0, #0xa                   	// #10
  44033c:	bl	4040c0 <fputc@plt>
  440340:	b	43ff90 <argp_parse@@Base+0x86e4>
  440344:	stp	x29, x30, [sp, #-48]!
  440348:	stp	x20, x19, [sp, #32]
  44034c:	ldrb	w8, [x1, #217]
  440350:	str	x21, [sp, #16]
  440354:	mov	x29, sp
  440358:	cbnz	w8, 44036c <argp_parse@@Base+0x8ac0>
  44035c:	ldp	x20, x19, [sp, #32]
  440360:	ldr	x21, [sp, #16]
  440364:	ldp	x29, x30, [sp], #48
  440368:	ret
  44036c:	mov	x19, x1
  440370:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440374:	mov	x20, x0
  440378:	add	x1, x1, #0xc4c
  44037c:	mov	w2, #0x5                   	// #5
  440380:	mov	x0, xzr
  440384:	bl	404900 <dcgettext@plt>
  440388:	mov	x1, x20
  44038c:	bl	440980 <argp_parse@@Base+0x90d4>
  440390:	ldr	x3, [x19, #104]
  440394:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  440398:	cbnz	x3, 4403f4 <argp_parse@@Base+0x8b48>
  44039c:	ldr	x3, [x19, #112]
  4403a0:	cbnz	x3, 440480 <argp_parse@@Base+0x8bd4>
  4403a4:	ldr	x8, [x19, #120]
  4403a8:	cbnz	x8, 44057c <argp_parse@@Base+0x8cd0>
  4403ac:	ldr	x8, [x19, #128]
  4403b0:	cbnz	x8, 44057c <argp_parse@@Base+0x8cd0>
  4403b4:	ldr	x8, [x19, #136]
  4403b8:	cbnz	x8, 44057c <argp_parse@@Base+0x8cd0>
  4403bc:	ldr	x8, [x19, #144]
  4403c0:	cbnz	x8, 44057c <argp_parse@@Base+0x8cd0>
  4403c4:	ldr	w8, [x19, #152]
  4403c8:	cbnz	w8, 44057c <argp_parse@@Base+0x8cd0>
  4403cc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4403d0:	add	x1, x1, #0xcea
  4403d4:	mov	w2, #0x5                   	// #5
  4403d8:	mov	x0, xzr
  4403dc:	bl	404900 <dcgettext@plt>
  4403e0:	ldr	x1, [x20, #96]
  4403e4:	ldp	x20, x19, [sp, #32]
  4403e8:	ldr	x21, [sp, #16]
  4403ec:	ldp	x29, x30, [sp], #48
  4403f0:	b	403f50 <fputs@plt>
  4403f4:	ldr	x0, [x20, #96]
  4403f8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4403fc:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440400:	add	x2, x2, #0xd2f
  440404:	add	x4, x4, #0xcfa
  440408:	mov	w1, #0x1                   	// #1
  44040c:	mov	w21, #0x1                   	// #1
  440410:	bl	404650 <__fprintf_chk@plt>
  440414:	ldr	x3, [x19, #112]
  440418:	cbnz	x3, 440488 <argp_parse@@Base+0x8bdc>
  44041c:	ldr	x3, [x19, #120]
  440420:	cbnz	x3, 4404b8 <argp_parse@@Base+0x8c0c>
  440424:	ldr	x3, [x19, #128]
  440428:	cbnz	x3, 4404e8 <argp_parse@@Base+0x8c3c>
  44042c:	ldr	x3, [x19, #136]
  440430:	cbnz	x3, 440518 <argp_parse@@Base+0x8c6c>
  440434:	ldr	x3, [x19, #144]
  440438:	cbnz	x3, 440548 <argp_parse@@Base+0x8c9c>
  44043c:	ldrsw	x3, [x19, #152]
  440440:	cbz	w3, 440468 <argp_parse@@Base+0x8bbc>
  440444:	ldr	x0, [x20, #96]
  440448:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  44044c:	eor	w8, w21, #0x1
  440450:	add	x9, x9, #0xd2e
  440454:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440458:	add	x2, x9, x8
  44045c:	add	x4, x4, #0xd22
  440460:	mov	w1, #0x1                   	// #1
  440464:	bl	404650 <__fprintf_chk@plt>
  440468:	ldr	x1, [x20, #96]
  44046c:	ldp	x20, x19, [sp, #32]
  440470:	ldr	x21, [sp, #16]
  440474:	mov	w0, #0xa                   	// #10
  440478:	ldp	x29, x30, [sp], #48
  44047c:	b	4040c0 <fputc@plt>
  440480:	mov	w8, #0x1                   	// #1
  440484:	b	44048c <argp_parse@@Base+0x8be0>
  440488:	mov	x8, xzr
  44048c:	ldr	x0, [x20, #96]
  440490:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440494:	add	x9, x9, #0xd2e
  440498:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  44049c:	add	x2, x9, x8
  4404a0:	add	x4, x4, #0xd02
  4404a4:	mov	w1, #0x1                   	// #1
  4404a8:	mov	w21, #0x1                   	// #1
  4404ac:	bl	404650 <__fprintf_chk@plt>
  4404b0:	ldr	x3, [x19, #120]
  4404b4:	cbz	x3, 440424 <argp_parse@@Base+0x8b78>
  4404b8:	ldr	x0, [x20, #96]
  4404bc:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4404c0:	eor	w8, w21, #0x1
  4404c4:	add	x9, x9, #0xd2e
  4404c8:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4404cc:	add	x2, x9, x8
  4404d0:	add	x4, x4, #0xd0b
  4404d4:	mov	w1, #0x1                   	// #1
  4404d8:	mov	w21, #0x1                   	// #1
  4404dc:	bl	404650 <__fprintf_chk@plt>
  4404e0:	ldr	x3, [x19, #128]
  4404e4:	cbz	x3, 44042c <argp_parse@@Base+0x8b80>
  4404e8:	ldr	x0, [x20, #96]
  4404ec:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4404f0:	eor	w8, w21, #0x1
  4404f4:	add	x9, x9, #0xd2e
  4404f8:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4404fc:	add	x2, x9, x8
  440500:	add	x4, x4, #0xd12
  440504:	mov	w1, #0x1                   	// #1
  440508:	mov	w21, #0x1                   	// #1
  44050c:	bl	404650 <__fprintf_chk@plt>
  440510:	ldr	x3, [x19, #136]
  440514:	cbz	x3, 440434 <argp_parse@@Base+0x8b88>
  440518:	ldr	x0, [x20, #96]
  44051c:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440520:	eor	w8, w21, #0x1
  440524:	add	x9, x9, #0xd2e
  440528:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  44052c:	add	x2, x9, x8
  440530:	add	x4, x4, #0xd1a
  440534:	mov	w1, #0x1                   	// #1
  440538:	mov	w21, #0x1                   	// #1
  44053c:	bl	404650 <__fprintf_chk@plt>
  440540:	ldr	x3, [x19, #144]
  440544:	cbz	x3, 44043c <argp_parse@@Base+0x8b90>
  440548:	ldr	x0, [x20, #96]
  44054c:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440550:	eor	w8, w21, #0x1
  440554:	add	x9, x9, #0xd2e
  440558:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  44055c:	add	x2, x9, x8
  440560:	add	x4, x4, #0x440
  440564:	mov	w1, #0x1                   	// #1
  440568:	mov	w21, #0x1                   	// #1
  44056c:	bl	404650 <__fprintf_chk@plt>
  440570:	ldrsw	x3, [x19, #152]
  440574:	cbnz	w3, 440444 <argp_parse@@Base+0x8b98>
  440578:	b	440468 <argp_parse@@Base+0x8bbc>
  44057c:	mov	w21, wzr
  440580:	ldr	x3, [x19, #120]
  440584:	cbz	x3, 440424 <argp_parse@@Base+0x8b78>
  440588:	b	4404b8 <argp_parse@@Base+0x8c0c>
  44058c:	ldr	w8, [x1, #48]
  440590:	tbnz	w2, #31, 4405b4 <argp_parse@@Base+0x8d08>
  440594:	tbnz	w8, #31, 4405d0 <argp_parse@@Base+0x8d24>
  440598:	ldr	w10, [x0, #152]
  44059c:	mov	w9, #0x7fffffff            	// #2147483647
  4405a0:	sub	w9, w9, w8
  4405a4:	cmp	w9, w10
  4405a8:	b.ge	4405e4 <argp_parse@@Base+0x8d38>  // b.tcont
  4405ac:	mov	w9, #0x1                   	// #1
  4405b0:	b	4405e8 <argp_parse@@Base+0x8d3c>
  4405b4:	tbnz	w8, #31, 4407ac <argp_parse@@Base+0x8f00>
  4405b8:	ldr	w10, [x0, #152]
  4405bc:	orr	w9, w8, #0x80000000
  4405c0:	cmp	w10, w9
  4405c4:	b.ge	4407c0 <argp_parse@@Base+0x8f14>  // b.tcont
  4405c8:	mov	w9, #0x1                   	// #1
  4405cc:	b	4407c4 <argp_parse@@Base+0x8f18>
  4405d0:	ldr	w10, [x0, #152]
  4405d4:	mov	w9, #0x80000000            	// #-2147483648
  4405d8:	sub	w9, w9, w8
  4405dc:	cmp	w10, w9
  4405e0:	b.lt	4405ac <argp_parse@@Base+0x8d00>  // b.tstop
  4405e4:	mov	w9, wzr
  4405e8:	add	w8, w10, w8
  4405ec:	str	w8, [x0, #152]
  4405f0:	ldr	x8, [x1, #40]
  4405f4:	tbnz	x8, #63, 440614 <argp_parse@@Base+0x8d68>
  4405f8:	ldr	x10, [x0, #144]
  4405fc:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  440600:	sub	x11, x11, x8
  440604:	cmp	x11, x10
  440608:	b.ge	440628 <argp_parse@@Base+0x8d7c>  // b.tcont
  44060c:	mov	w11, #0x1                   	// #1
  440610:	b	44062c <argp_parse@@Base+0x8d80>
  440614:	ldr	x10, [x0, #144]
  440618:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  44061c:	sub	x11, x11, x8
  440620:	cmp	x10, x11
  440624:	b.lt	44060c <argp_parse@@Base+0x8d60>  // b.tstop
  440628:	mov	w11, wzr
  44062c:	add	x8, x10, x8
  440630:	str	x8, [x0, #144]
  440634:	ldr	x10, [x1, #32]
  440638:	orr	w8, w11, w9
  44063c:	tbnz	x10, #63, 44065c <argp_parse@@Base+0x8db0>
  440640:	ldr	x9, [x0, #136]
  440644:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  440648:	sub	x11, x11, x10
  44064c:	cmp	x11, x9
  440650:	b.ge	440670 <argp_parse@@Base+0x8dc4>  // b.tcont
  440654:	mov	w11, #0x1                   	// #1
  440658:	b	440674 <argp_parse@@Base+0x8dc8>
  44065c:	ldr	x9, [x0, #136]
  440660:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  440664:	sub	x11, x11, x10
  440668:	cmp	x9, x11
  44066c:	b.lt	440654 <argp_parse@@Base+0x8da8>  // b.tstop
  440670:	mov	w11, wzr
  440674:	add	x9, x9, x10
  440678:	str	x9, [x0, #136]
  44067c:	ldr	x9, [x1, #24]
  440680:	orr	w8, w8, w11
  440684:	tbnz	x9, #63, 4406a4 <argp_parse@@Base+0x8df8>
  440688:	ldr	x10, [x0, #128]
  44068c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  440690:	sub	x11, x11, x9
  440694:	cmp	x11, x10
  440698:	b.ge	4406b8 <argp_parse@@Base+0x8e0c>  // b.tcont
  44069c:	mov	w11, #0x1                   	// #1
  4406a0:	b	4406bc <argp_parse@@Base+0x8e10>
  4406a4:	ldr	x10, [x0, #128]
  4406a8:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  4406ac:	sub	x11, x11, x9
  4406b0:	cmp	x10, x11
  4406b4:	b.lt	44069c <argp_parse@@Base+0x8df0>  // b.tstop
  4406b8:	mov	w11, wzr
  4406bc:	add	x9, x10, x9
  4406c0:	str	x9, [x0, #128]
  4406c4:	ldr	x9, [x1, #16]
  4406c8:	orr	w8, w8, w11
  4406cc:	tbnz	x9, #63, 4406ec <argp_parse@@Base+0x8e40>
  4406d0:	ldr	x10, [x0, #120]
  4406d4:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4406d8:	sub	x11, x11, x9
  4406dc:	cmp	x11, x10
  4406e0:	b.ge	440700 <argp_parse@@Base+0x8e54>  // b.tcont
  4406e4:	mov	w11, #0x1                   	// #1
  4406e8:	b	440704 <argp_parse@@Base+0x8e58>
  4406ec:	ldr	x10, [x0, #120]
  4406f0:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  4406f4:	sub	x11, x11, x9
  4406f8:	cmp	x10, x11
  4406fc:	b.lt	4406e4 <argp_parse@@Base+0x8e38>  // b.tstop
  440700:	mov	w11, wzr
  440704:	add	x9, x10, x9
  440708:	str	x9, [x0, #120]
  44070c:	ldr	x9, [x1, #8]
  440710:	orr	w8, w8, w11
  440714:	tbnz	x9, #63, 440734 <argp_parse@@Base+0x8e88>
  440718:	ldr	x10, [x0, #112]
  44071c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  440720:	sub	x11, x11, x9
  440724:	cmp	x11, x10
  440728:	b.ge	440748 <argp_parse@@Base+0x8e9c>  // b.tcont
  44072c:	mov	w11, #0x1                   	// #1
  440730:	b	44074c <argp_parse@@Base+0x8ea0>
  440734:	ldr	x10, [x0, #112]
  440738:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  44073c:	sub	x11, x11, x9
  440740:	cmp	x10, x11
  440744:	b.lt	44072c <argp_parse@@Base+0x8e80>  // b.tstop
  440748:	mov	w11, wzr
  44074c:	add	x9, x10, x9
  440750:	str	x9, [x0, #112]
  440754:	ldr	x9, [x1]
  440758:	orr	w8, w8, w11
  44075c:	tbnz	x9, #63, 44077c <argp_parse@@Base+0x8ed0>
  440760:	ldr	x10, [x0, #104]
  440764:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  440768:	sub	x11, x11, x9
  44076c:	cmp	x11, x10
  440770:	b.ge	440790 <argp_parse@@Base+0x8ee4>  // b.tcont
  440774:	mov	w11, #0x1                   	// #1
  440778:	b	440794 <argp_parse@@Base+0x8ee8>
  44077c:	ldr	x10, [x0, #104]
  440780:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  440784:	sub	x11, x11, x9
  440788:	cmp	x10, x11
  44078c:	b.lt	440774 <argp_parse@@Base+0x8ec8>  // b.tstop
  440790:	mov	w11, wzr
  440794:	add	x9, x10, x9
  440798:	orr	w8, w8, w11
  44079c:	str	x9, [x0, #104]
  4407a0:	cbz	w8, 440970 <argp_parse@@Base+0x90c4>
  4407a4:	mov	w0, wzr
  4407a8:	ret
  4407ac:	ldr	w10, [x0, #152]
  4407b0:	mov	w9, #0x7fffffff            	// #2147483647
  4407b4:	add	w9, w8, w9
  4407b8:	cmp	w9, w10
  4407bc:	b.lt	4405c8 <argp_parse@@Base+0x8d1c>  // b.tstop
  4407c0:	mov	w9, wzr
  4407c4:	sub	w8, w10, w8
  4407c8:	str	w8, [x0, #152]
  4407cc:	ldr	x8, [x1, #40]
  4407d0:	tbnz	x8, #63, 4407ec <argp_parse@@Base+0x8f40>
  4407d4:	ldr	x10, [x0, #144]
  4407d8:	orr	x11, x8, #0x8000000000000000
  4407dc:	cmp	x10, x11
  4407e0:	b.ge	440800 <argp_parse@@Base+0x8f54>  // b.tcont
  4407e4:	mov	w11, #0x1                   	// #1
  4407e8:	b	440804 <argp_parse@@Base+0x8f58>
  4407ec:	ldr	x10, [x0, #144]
  4407f0:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4407f4:	add	x11, x8, x11
  4407f8:	cmp	x11, x10
  4407fc:	b.lt	4407e4 <argp_parse@@Base+0x8f38>  // b.tstop
  440800:	mov	w11, wzr
  440804:	sub	x8, x10, x8
  440808:	str	x8, [x0, #144]
  44080c:	ldr	x10, [x1, #32]
  440810:	orr	w8, w11, w9
  440814:	tbnz	x10, #63, 440830 <argp_parse@@Base+0x8f84>
  440818:	ldr	x9, [x0, #136]
  44081c:	orr	x11, x10, #0x8000000000000000
  440820:	cmp	x9, x11
  440824:	b.ge	440844 <argp_parse@@Base+0x8f98>  // b.tcont
  440828:	mov	w11, #0x1                   	// #1
  44082c:	b	440848 <argp_parse@@Base+0x8f9c>
  440830:	ldr	x9, [x0, #136]
  440834:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  440838:	add	x11, x10, x11
  44083c:	cmp	x11, x9
  440840:	b.lt	440828 <argp_parse@@Base+0x8f7c>  // b.tstop
  440844:	mov	w11, wzr
  440848:	sub	x9, x9, x10
  44084c:	str	x9, [x0, #136]
  440850:	ldr	x9, [x1, #24]
  440854:	orr	w8, w8, w11
  440858:	tbnz	x9, #63, 440874 <argp_parse@@Base+0x8fc8>
  44085c:	ldr	x10, [x0, #128]
  440860:	orr	x11, x9, #0x8000000000000000
  440864:	cmp	x10, x11
  440868:	b.ge	440888 <argp_parse@@Base+0x8fdc>  // b.tcont
  44086c:	mov	w11, #0x1                   	// #1
  440870:	b	44088c <argp_parse@@Base+0x8fe0>
  440874:	ldr	x10, [x0, #128]
  440878:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  44087c:	add	x11, x9, x11
  440880:	cmp	x11, x10
  440884:	b.lt	44086c <argp_parse@@Base+0x8fc0>  // b.tstop
  440888:	mov	w11, wzr
  44088c:	sub	x9, x10, x9
  440890:	str	x9, [x0, #128]
  440894:	ldr	x9, [x1, #16]
  440898:	orr	w8, w8, w11
  44089c:	tbnz	x9, #63, 4408b8 <argp_parse@@Base+0x900c>
  4408a0:	ldr	x10, [x0, #120]
  4408a4:	orr	x11, x9, #0x8000000000000000
  4408a8:	cmp	x10, x11
  4408ac:	b.ge	4408cc <argp_parse@@Base+0x9020>  // b.tcont
  4408b0:	mov	w11, #0x1                   	// #1
  4408b4:	b	4408d0 <argp_parse@@Base+0x9024>
  4408b8:	ldr	x10, [x0, #120]
  4408bc:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4408c0:	add	x11, x9, x11
  4408c4:	cmp	x11, x10
  4408c8:	b.lt	4408b0 <argp_parse@@Base+0x9004>  // b.tstop
  4408cc:	mov	w11, wzr
  4408d0:	sub	x9, x10, x9
  4408d4:	str	x9, [x0, #120]
  4408d8:	ldr	x9, [x1, #8]
  4408dc:	orr	w8, w8, w11
  4408e0:	tbnz	x9, #63, 4408fc <argp_parse@@Base+0x9050>
  4408e4:	ldr	x10, [x0, #112]
  4408e8:	orr	x11, x9, #0x8000000000000000
  4408ec:	cmp	x10, x11
  4408f0:	b.ge	440910 <argp_parse@@Base+0x9064>  // b.tcont
  4408f4:	mov	w11, #0x1                   	// #1
  4408f8:	b	440914 <argp_parse@@Base+0x9068>
  4408fc:	ldr	x10, [x0, #112]
  440900:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  440904:	add	x11, x9, x11
  440908:	cmp	x11, x10
  44090c:	b.lt	4408f4 <argp_parse@@Base+0x9048>  // b.tstop
  440910:	mov	w11, wzr
  440914:	sub	x9, x10, x9
  440918:	str	x9, [x0, #112]
  44091c:	ldr	x9, [x1]
  440920:	orr	w8, w8, w11
  440924:	tbnz	x9, #63, 440940 <argp_parse@@Base+0x9094>
  440928:	ldr	x10, [x0, #104]
  44092c:	orr	x11, x9, #0x8000000000000000
  440930:	cmp	x10, x11
  440934:	b.ge	440954 <argp_parse@@Base+0x90a8>  // b.tcont
  440938:	mov	w11, #0x1                   	// #1
  44093c:	b	440958 <argp_parse@@Base+0x90ac>
  440940:	ldr	x10, [x0, #104]
  440944:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  440948:	add	x11, x9, x11
  44094c:	cmp	x11, x10
  440950:	b.lt	440938 <argp_parse@@Base+0x908c>  // b.tstop
  440954:	mov	w11, wzr
  440958:	sub	x9, x10, x9
  44095c:	orr	w8, w8, w11
  440960:	str	x9, [x0, #104]
  440964:	cbz	w8, 440970 <argp_parse@@Base+0x90c4>
  440968:	mov	w0, wzr
  44096c:	ret
  440970:	mov	w8, #0x1                   	// #1
  440974:	strb	w8, [x0, #161]
  440978:	mov	w0, w8
  44097c:	ret
  440980:	sub	sp, sp, #0x130
  440984:	stp	x29, x30, [sp, #256]
  440988:	stp	x20, x19, [sp, #288]
  44098c:	add	x29, sp, #0x100
  440990:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  440994:	stp	x3, x4, [x29, #-104]
  440998:	ldr	x3, [x20, #96]
  44099c:	mov	x19, x0
  4409a0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4409a4:	stp	x1, x2, [x29, #-120]
  4409a8:	add	x0, x0, #0xd37
  4409ac:	mov	w1, #0x6                   	// #6
  4409b0:	mov	w2, #0x1                   	// #1
  4409b4:	str	x28, [sp, #272]
  4409b8:	stp	x5, x6, [x29, #-88]
  4409bc:	stur	x7, [x29, #-72]
  4409c0:	stp	q0, q1, [sp]
  4409c4:	stp	q2, q3, [sp, #32]
  4409c8:	stp	q4, q5, [sp, #64]
  4409cc:	stp	q6, q7, [sp, #96]
  4409d0:	bl	4047e0 <fwrite@plt>
  4409d4:	sub	x9, x29, #0x78
  4409d8:	mov	x10, sp
  4409dc:	mov	x11, #0xffffffffffffffc8    	// #-56
  4409e0:	add	x8, x29, #0x30
  4409e4:	movk	x11, #0xff80, lsl #32
  4409e8:	add	x9, x9, #0x38
  4409ec:	add	x10, x10, #0x80
  4409f0:	stp	x8, x9, [x29, #-64]
  4409f4:	stp	x10, x11, [x29, #-48]
  4409f8:	ldp	q0, q1, [x29, #-64]
  4409fc:	ldr	x0, [x20, #96]
  440a00:	sub	x3, x29, #0x20
  440a04:	mov	w1, #0x1                   	// #1
  440a08:	mov	x2, x19
  440a0c:	stp	q0, q1, [x29, #-32]
  440a10:	bl	4043f0 <__vfprintf_chk@plt>
  440a14:	ldp	x20, x19, [sp, #288]
  440a18:	ldr	x28, [sp, #272]
  440a1c:	ldp	x29, x30, [sp, #256]
  440a20:	add	sp, sp, #0x130
  440a24:	ret
  440a28:	stp	x29, x30, [sp, #-64]!
  440a2c:	stp	x22, x21, [sp, #32]
  440a30:	mov	x21, x0
  440a34:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440a38:	add	x0, x0, #0x4ea
  440a3c:	str	x23, [sp, #16]
  440a40:	stp	x20, x19, [sp, #48]
  440a44:	mov	x29, sp
  440a48:	mov	x19, x2
  440a4c:	mov	x20, x1
  440a50:	bl	404a30 <getenv@plt>
  440a54:	mov	x22, x0
  440a58:	bl	45637c <_obstack_memory_used@@Base+0xf82c>
  440a5c:	cbz	x0, 440a90 <argp_parse@@Base+0x91e4>
  440a60:	mov	x23, x0
  440a64:	mov	x0, x21
  440a68:	mov	x1, x20
  440a6c:	mov	x2, x19
  440a70:	mov	w3, wzr
  440a74:	mov	x4, x23
  440a78:	mov	x5, x22
  440a7c:	bl	440aa4 <argp_parse@@Base+0x91f8>
  440a80:	mov	w19, w0
  440a84:	mov	x0, x23
  440a88:	bl	45640c <_obstack_memory_used@@Base+0xf8bc>
  440a8c:	and	w0, w19, #0x1
  440a90:	ldp	x20, x19, [sp, #48]
  440a94:	ldp	x22, x21, [sp, #32]
  440a98:	ldr	x23, [sp, #16]
  440a9c:	ldp	x29, x30, [sp], #64
  440aa0:	ret
  440aa4:	stp	x29, x30, [sp, #-96]!
  440aa8:	stp	x28, x27, [sp, #16]
  440aac:	stp	x26, x25, [sp, #32]
  440ab0:	stp	x24, x23, [sp, #48]
  440ab4:	stp	x22, x21, [sp, #64]
  440ab8:	stp	x20, x19, [sp, #80]
  440abc:	mov	x29, sp
  440ac0:	sub	sp, sp, #0x420
  440ac4:	stp	x0, x5, [sp, #96]
  440ac8:	mov	x0, x1
  440acc:	mov	x19, x4
  440ad0:	mov	w24, w3
  440ad4:	mov	x25, x2
  440ad8:	mov	x20, x1
  440adc:	bl	403f40 <strlen@plt>
  440ae0:	mov	x21, x0
  440ae4:	cbnz	x25, 440af4 <argp_parse@@Base+0x9248>
  440ae8:	add	x0, sp, #0x238
  440aec:	add	x25, sp, #0x238
  440af0:	bl	43b52c <argp_parse@@Base+0x3c80>
  440af4:	ldp	x22, x23, [x25]
  440af8:	add	x27, sp, #0xb0
  440afc:	add	x28, x20, x21
  440b00:	add	x20, x20, #0x4
  440b04:	b	440b0c <argp_parse@@Base+0x9260>
  440b08:	add	x20, x20, #0x1
  440b0c:	ldurb	w8, [x20, #-4]
  440b10:	sub	w9, w8, #0x9
  440b14:	cmp	w9, #0x5
  440b18:	b.cc	440b08 <argp_parse@@Base+0x925c>  // b.lo, b.ul, b.last
  440b1c:	cmp	w8, #0x20
  440b20:	b.eq	440b08 <argp_parse@@Base+0x925c>  // b.none
  440b24:	sub	x26, x20, #0x4
  440b28:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440b2c:	movi	v0.2d, #0x0
  440b30:	add	x1, x1, #0x4ed
  440b34:	mov	w2, #0x4                   	// #4
  440b38:	mov	x0, x26
  440b3c:	str	xzr, [sp, #560]
  440b40:	stp	q0, q0, [x27, #352]
  440b44:	str	q0, [x27, #336]
  440b48:	bl	404300 <strncmp@plt>
  440b4c:	cbz	w0, 440ddc <argp_parse@@Base+0x9530>
  440b50:	mov	x8, xzr
  440b54:	str	xzr, [sp, #112]
  440b58:	mov	x21, x19
  440b5c:	add	x2, sp, #0x1c8
  440b60:	mov	x0, x21
  440b64:	mov	x1, x25
  440b68:	bl	45643c <_obstack_memory_used@@Base+0xf8ec>
  440b6c:	cbz	x0, 440d9c <argp_parse@@Base+0x94f0>
  440b70:	ldrsw	x11, [sp, #472]
  440b74:	ldrb	w8, [x26]
  440b78:	and	w10, w24, #0x1
  440b7c:	ldp	d1, d0, [sp, #456]
  440b80:	strb	w10, [sp, #393]
  440b84:	ldrsw	x10, [sp, #476]
  440b88:	add	x11, x11, #0x1
  440b8c:	adrp	x9, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  440b90:	stp	xzr, x11, [sp, #224]
  440b94:	ldr	x11, [sp, #560]
  440b98:	add	x9, x9, #0x3e8
  440b9c:	cmp	w8, #0x0
  440ba0:	rev64	v0.2s, v0.2s
  440ba4:	rev64	v1.2s, v1.2s
  440ba8:	csel	x9, x9, x26, eq  // eq = none
  440bac:	sxtl	v0.2d, v0.2s
  440bb0:	add	x10, x10, #0x76c
  440bb4:	sxtl	v1.2d, v1.2s
  440bb8:	str	q0, [sp, #240]
  440bbc:	str	x9, [sp, #176]
  440bc0:	str	x10, [sp, #216]
  440bc4:	str	q1, [x27, #80]
  440bc8:	ldr	q1, [x27, #368]
  440bcc:	ldr	w8, [sp, #488]
  440bd0:	ldp	q0, q2, [x27, #336]
  440bd4:	str	x11, [sp, #328]
  440bd8:	ldr	x9, [sp, #504]
  440bdc:	mov	x11, #0xffffffffffff58ff    	// #-42753
  440be0:	movk	x11, #0xff89, lsl #16
  440be4:	sxtw	x12, w23
  440be8:	mov	w13, #0x2                   	// #2
  440bec:	movk	x11, #0x7fff, lsl #48
  440bf0:	str	w13, [sp, #204]
  440bf4:	str	x12, [sp, #272]
  440bf8:	stur	q1, [x27, #136]
  440bfc:	movi	v1.2d, #0x0
  440c00:	mov	w10, #0x10d                 	// #269
  440c04:	cmp	x22, x11
  440c08:	stur	w8, [x29, #-144]
  440c0c:	stur	q2, [x27, #120]
  440c10:	stur	q0, [x27, #104]
  440c14:	strh	wzr, [sp, #336]
  440c18:	stur	q1, [x27, #168]
  440c1c:	stur	q1, [x27, #184]
  440c20:	stur	q1, [x27, #200]
  440c24:	strb	wzr, [sp, #392]
  440c28:	stur	wzr, [x27, #218]
  440c2c:	stur	wzr, [x27, #221]
  440c30:	str	x9, [sp, #408]
  440c34:	str	w10, [sp, #416]
  440c38:	str	w8, [sp, #420]
  440c3c:	str	xzr, [sp, #424]
  440c40:	b.gt	440d34 <argp_parse@@Base+0x9488>
  440c44:	mov	w8, #0xa700                	// #42752
  440c48:	movk	w8, #0x76, lsl #16
  440c4c:	add	x8, x22, x8
  440c50:	add	x1, sp, #0x2b0
  440c54:	sub	x2, x29, #0x78
  440c58:	mov	x0, x21
  440c5c:	str	x8, [sp, #688]
  440c60:	bl	45643c <_obstack_memory_used@@Base+0xf8ec>
  440c64:	cbz	x0, 440c80 <argp_parse@@Base+0x93d4>
  440c68:	ldur	x8, [x29, #-72]
  440c6c:	cbz	x8, 440c80 <argp_parse@@Base+0x93d4>
  440c70:	ldur	w9, [x29, #-88]
  440c74:	ldr	w10, [sp, #420]
  440c78:	cmp	w9, w10
  440c7c:	b.ne	440d20 <argp_parse@@Base+0x9474>  // b.any
  440c80:	mov	x8, #0xffffffffffffb200    	// #-19968
  440c84:	movk	x8, #0xff12, lsl #16
  440c88:	movk	x8, #0x7fff, lsl #48
  440c8c:	cmp	x22, x8
  440c90:	b.ge	440d34 <argp_parse@@Base+0x9488>  // b.tcont
  440c94:	mov	w8, #0x4e00                	// #19968
  440c98:	movk	w8, #0xed, lsl #16
  440c9c:	add	x8, x22, x8
  440ca0:	add	x1, sp, #0x2b0
  440ca4:	sub	x2, x29, #0x78
  440ca8:	mov	x0, x21
  440cac:	str	x8, [sp, #688]
  440cb0:	bl	45643c <_obstack_memory_used@@Base+0xf8ec>
  440cb4:	cbz	x0, 440cd0 <argp_parse@@Base+0x9424>
  440cb8:	ldur	x8, [x29, #-72]
  440cbc:	cbz	x8, 440cd0 <argp_parse@@Base+0x9424>
  440cc0:	ldur	w9, [x29, #-88]
  440cc4:	ldr	w10, [sp, #420]
  440cc8:	cmp	w9, w10
  440ccc:	b.ne	440d20 <argp_parse@@Base+0x9474>  // b.any
  440cd0:	mov	x8, #0xffffffffffff0aff    	// #-62721
  440cd4:	movk	x8, #0xfe9c, lsl #16
  440cd8:	movk	x8, #0x7fff, lsl #48
  440cdc:	cmp	x22, x8
  440ce0:	b.gt	440d34 <argp_parse@@Base+0x9488>
  440ce4:	mov	w8, #0xf500                	// #62720
  440ce8:	movk	w8, #0x163, lsl #16
  440cec:	add	x8, x22, x8
  440cf0:	add	x1, sp, #0x2b0
  440cf4:	sub	x2, x29, #0x78
  440cf8:	mov	x0, x21
  440cfc:	str	x8, [sp, #688]
  440d00:	bl	45643c <_obstack_memory_used@@Base+0xf8ec>
  440d04:	cbz	x0, 440d34 <argp_parse@@Base+0x9488>
  440d08:	ldur	x8, [x29, #-72]
  440d0c:	cbz	x8, 440d34 <argp_parse@@Base+0x9488>
  440d10:	ldur	w9, [x29, #-88]
  440d14:	ldr	w10, [sp, #420]
  440d18:	cmp	w9, w10
  440d1c:	b.eq	440d34 <argp_parse@@Base+0x9488>  // b.none
  440d20:	str	x8, [sp, #424]
  440d24:	mov	w8, #0x10d                 	// #269
  440d28:	str	w9, [sp, #436]
  440d2c:	str	w8, [sp, #432]
  440d30:	str	xzr, [sp, #440]
  440d34:	ldr	x0, [sp, #408]
  440d38:	cbz	x0, 440d58 <argp_parse@@Base+0x94ac>
  440d3c:	ldr	x1, [sp, #424]
  440d40:	cbz	x1, 440d58 <argp_parse@@Base+0x94ac>
  440d44:	bl	404660 <strcmp@plt>
  440d48:	cbnz	w0, 440d58 <argp_parse@@Base+0x94ac>
  440d4c:	mov	w8, #0xffffffff            	// #-1
  440d50:	str	w8, [sp, #420]
  440d54:	str	xzr, [sp, #424]
  440d58:	add	x0, sp, #0xb0
  440d5c:	bl	43dac0 <argp_parse@@Base+0x6214>
  440d60:	ldrb	w8, [sp, #393]
  440d64:	cbz	w0, 440e24 <argp_parse@@Base+0x9578>
  440d68:	cbz	w8, 440d9c <argp_parse@@Base+0x94f0>
  440d6c:	ldr	x8, [sp, #176]
  440d70:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440d74:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440d78:	add	x9, x9, #0x4f2
  440d7c:	add	x10, x10, #0x509
  440d80:	cmp	x28, x8
  440d84:	csel	x1, x10, x9, hi  // hi = pmore
  440d88:	mov	w2, #0x5                   	// #5
  440d8c:	mov	x0, xzr
  440d90:	bl	404900 <dcgettext@plt>
  440d94:	ldr	x1, [sp, #176]
  440d98:	bl	440980 <argp_parse@@Base+0x90d4>
  440d9c:	mov	w22, wzr
  440da0:	cmp	x21, x19
  440da4:	b.eq	440db0 <argp_parse@@Base+0x9504>  // b.none
  440da8:	mov	x0, x21
  440dac:	bl	45640c <_obstack_memory_used@@Base+0xf8bc>
  440db0:	ldr	x0, [sp, #112]
  440db4:	bl	404700 <free@plt>
  440db8:	mov	w0, w22
  440dbc:	add	sp, sp, #0x420
  440dc0:	ldp	x20, x19, [sp, #80]
  440dc4:	ldp	x22, x21, [sp, #64]
  440dc8:	ldp	x24, x23, [sp, #48]
  440dcc:	ldp	x26, x25, [sp, #32]
  440dd0:	ldp	x28, x27, [sp, #16]
  440dd4:	ldp	x29, x30, [sp], #96
  440dd8:	ret
  440ddc:	mov	w0, #0x1                   	// #1
  440de0:	mov	x8, x20
  440de4:	b	440df0 <argp_parse@@Base+0x9544>
  440de8:	add	x8, x8, #0x1
  440dec:	add	x0, x0, #0x1
  440df0:	ldrb	w9, [x8]
  440df4:	cmp	w9, #0x5c
  440df8:	b.eq	440e0c <argp_parse@@Base+0x9560>  // b.none
  440dfc:	cbz	w9, 440b54 <argp_parse@@Base+0x92a8>
  440e00:	cmp	w9, #0x22
  440e04:	b.ne	440de8 <argp_parse@@Base+0x953c>  // b.any
  440e08:	b	440e84 <argp_parse@@Base+0x95d8>
  440e0c:	ldrb	w9, [x8, #1]!
  440e10:	cmp	w9, #0x22
  440e14:	b.eq	440de8 <argp_parse@@Base+0x953c>  // b.none
  440e18:	cmp	w9, #0x5c
  440e1c:	b.eq	440de8 <argp_parse@@Base+0x953c>  // b.none
  440e20:	b	440b54 <argp_parse@@Base+0x92a8>
  440e24:	cbnz	w8, 44110c <argp_parse@@Base+0x9860>
  440e28:	ldrb	w8, [sp, #336]
  440e2c:	cbz	w8, 44134c <argp_parse@@Base+0x9aa0>
  440e30:	add	x8, sp, #0xb0
  440e34:	ldr	q0, [x8, #88]!
  440e38:	ldr	x20, [sp, #96]
  440e3c:	str	q0, [x20]
  440e40:	ldr	x22, [sp, #104]
  440e44:	ldrb	w8, [sp, #393]
  440e48:	cbz	w8, 441168 <argp_parse@@Base+0x98bc>
  440e4c:	cbz	x22, 440f20 <argp_parse@@Base+0x9674>
  440e50:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440e54:	add	x1, x1, #0x58a
  440e58:	mov	x0, x22
  440e5c:	bl	404660 <strcmp@plt>
  440e60:	cbz	w0, 440f2c <argp_parse@@Base+0x9680>
  440e64:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440e68:	add	x1, x1, #0xbe2
  440e6c:	mov	w2, #0x5                   	// #5
  440e70:	mov	x0, xzr
  440e74:	bl	404900 <dcgettext@plt>
  440e78:	mov	x1, x22
  440e7c:	bl	440980 <argp_parse@@Base+0x90d4>
  440e80:	b	440f44 <argp_parse@@Base+0x9698>
  440e84:	cmp	x0, #0x65
  440e88:	b.cc	440ea0 <argp_parse@@Base+0x95f4>  // b.lo, b.ul, b.last
  440e8c:	bl	404250 <malloc@plt>
  440e90:	mov	x8, x0
  440e94:	cbnz	x0, 440ea8 <argp_parse@@Base+0x95fc>
  440e98:	mov	w22, wzr
  440e9c:	b	440db4 <argp_parse@@Base+0x9508>
  440ea0:	mov	x8, xzr
  440ea4:	add	x0, sp, #0x24c
  440ea8:	ldrb	w9, [x20]
  440eac:	str	x8, [sp, #112]
  440eb0:	mov	x8, x0
  440eb4:	cmp	w9, #0x22
  440eb8:	b.eq	440edc <argp_parse@@Base+0x9630>  // b.none
  440ebc:	and	w9, w9, #0xff
  440ec0:	cmp	w9, #0x5c
  440ec4:	cinc	x20, x20, eq  // eq = none
  440ec8:	ldrb	w9, [x20]
  440ecc:	strb	w9, [x8], #1
  440ed0:	ldrb	w9, [x20, #1]!
  440ed4:	cmp	w9, #0x22
  440ed8:	b.ne	440ebc <argp_parse@@Base+0x9610>  // b.any
  440edc:	strb	wzr, [x8]
  440ee0:	str	x0, [sp, #104]
  440ee4:	bl	45637c <_obstack_memory_used@@Base+0xf82c>
  440ee8:	cbz	x0, 440f18 <argp_parse@@Base+0x966c>
  440eec:	mov	x21, x0
  440ef0:	add	x26, x20, #0x1
  440ef4:	b	440efc <argp_parse@@Base+0x9650>
  440ef8:	add	x26, x26, #0x1
  440efc:	ldrb	w8, [x26]
  440f00:	sub	w9, w8, #0x9
  440f04:	cmp	w9, #0x5
  440f08:	b.cc	440ef8 <argp_parse@@Base+0x964c>  // b.lo, b.ul, b.last
  440f0c:	cmp	w8, #0x20
  440f10:	b.eq	440ef8 <argp_parse@@Base+0x964c>  // b.none
  440f14:	b	440b5c <argp_parse@@Base+0x92b0>
  440f18:	mov	w22, wzr
  440f1c:	b	440db0 <argp_parse@@Base+0x9504>
  440f20:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440f24:	add	x1, x1, #0xbae
  440f28:	b	440f34 <argp_parse@@Base+0x9688>
  440f2c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440f30:	add	x1, x1, #0xbc8
  440f34:	mov	w2, #0x5                   	// #5
  440f38:	mov	x0, xzr
  440f3c:	bl	404900 <dcgettext@plt>
  440f40:	bl	440980 <argp_parse@@Base+0x90d4>
  440f44:	ldr	x23, [x20]
  440f48:	ldr	w24, [x20, #8]
  440f4c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440f50:	add	x1, x1, #0xc07
  440f54:	mov	w2, #0x5                   	// #5
  440f58:	mov	x0, xzr
  440f5c:	bl	404900 <dcgettext@plt>
  440f60:	mov	x1, x23
  440f64:	mov	w2, w24
  440f68:	bl	440980 <argp_parse@@Base+0x90d4>
  440f6c:	sub	x1, x29, #0x78
  440f70:	mov	x0, x20
  440f74:	bl	4043a0 <gmtime_r@plt>
  440f78:	cbz	x0, 440fc0 <argp_parse@@Base+0x9714>
  440f7c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440f80:	add	x1, x1, #0xc28
  440f84:	mov	w2, #0x5                   	// #5
  440f88:	mov	x0, xzr
  440f8c:	bl	404900 <dcgettext@plt>
  440f90:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  440f94:	mov	x23, x0
  440f98:	add	x2, x2, #0x148
  440f9c:	add	x0, sp, #0x2b0
  440fa0:	sub	x3, x29, #0x78
  440fa4:	mov	w1, #0x64                  	// #100
  440fa8:	mov	x4, xzr
  440fac:	mov	w5, wzr
  440fb0:	bl	4573e8 <_obstack_memory_used@@Base+0x10898>
  440fb4:	add	x1, sp, #0x2b0
  440fb8:	mov	x0, x23
  440fbc:	bl	440980 <argp_parse@@Base+0x90d4>
  440fc0:	add	x2, sp, #0x78
  440fc4:	mov	x0, x21
  440fc8:	mov	x1, x20
  440fcc:	bl	45643c <_obstack_memory_used@@Base+0xf8ec>
  440fd0:	cbz	x0, 441168 <argp_parse@@Base+0x98bc>
  440fd4:	ldrsw	x23, [sp, #160]
  440fd8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  440fdc:	add	x1, x1, #0xc39
  440fe0:	mov	w2, #0x5                   	// #5
  440fe4:	mov	x0, xzr
  440fe8:	bl	404900 <dcgettext@plt>
  440fec:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  440ff0:	mov	x22, x0
  440ff4:	add	x2, x2, #0x148
  440ff8:	add	x0, sp, #0x2b0
  440ffc:	add	x3, sp, #0x78
  441000:	mov	w1, #0x64                  	// #100
  441004:	mov	x4, xzr
  441008:	mov	w5, wzr
  44100c:	bl	4573e8 <_obstack_memory_used@@Base+0x10898>
  441010:	mov	x8, #0xffffffffffffb3c5    	// #-19515
  441014:	movk	x8, #0x91a2, lsl #16
  441018:	mul	x8, x23, x8
  44101c:	lsr	x8, x8, #32
  441020:	add	w8, w8, w23
  441024:	asr	w10, w8, #11
  441028:	add	w24, w10, w8, lsr #31
  44102c:	cmp	w24, #0x0
  441030:	mov	w9, #0x2b                  	// #43
  441034:	cneg	w5, w24, mi  // mi = first
  441038:	cmp	w23, #0x0
  44103c:	mov	w8, #0x2d                  	// #45
  441040:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441044:	csel	w4, w8, w9, lt  // lt = tstop
  441048:	add	x3, x3, #0xf8e
  44104c:	add	x0, sp, #0x314
  441050:	mov	w1, #0x1                   	// #1
  441054:	mov	w2, #0x1b                  	// #27
  441058:	add	x20, sp, #0x314
  44105c:	bl	403f60 <__sprintf_chk@plt>
  441060:	mov	w8, #0xe10                 	// #3600
  441064:	msub	w9, w24, w8, w23
  441068:	cbz	w9, 441158 <argp_parse@@Base+0x98ac>
  44106c:	cmp	w9, #0x0
  441070:	mov	w11, #0x8889                	// #34953
  441074:	cneg	w9, w9, mi  // mi = first
  441078:	movk	w11, #0x8888, lsl #16
  44107c:	mov	w13, #0x81b5                	// #33205
  441080:	and	w14, w9, #0xffff
  441084:	movk	w13, #0x1b4e, lsl #16
  441088:	umull	x11, w14, w11
  44108c:	mov	w12, #0x3c                  	// #60
  441090:	umull	x13, w14, w13
  441094:	lsr	x14, x11, #37
  441098:	msub	w9, w14, w12, w9
  44109c:	mov	w12, #0xcccd                	// #52429
  4410a0:	movk	w12, #0xcccc, lsl #16
  4410a4:	lsr	x13, x13, #38
  4410a8:	ubfx	x11, x11, #37, #8
  4410ac:	add	x8, x20, w0, sxtw
  4410b0:	add	w13, w13, #0x30
  4410b4:	umull	x11, w11, w12
  4410b8:	strb	w13, [x8, #1]
  4410bc:	lsr	x13, x11, #35
  4410c0:	mov	w11, #0xa                   	// #10
  4410c4:	msub	w13, w13, w11, w14
  4410c8:	mov	w10, #0x3a                  	// #58
  4410cc:	tst	w9, #0xffff
  4410d0:	orr	w13, w13, #0x30
  4410d4:	strb	w10, [x8]
  4410d8:	strb	w13, [x8, #2]
  4410dc:	b.eq	441150 <argp_parse@@Base+0x98a4>  // b.none
  4410e0:	strb	w10, [x8, #3]
  4410e4:	and	w10, w9, #0xff
  4410e8:	umull	x10, w10, w12
  4410ec:	lsr	x10, x10, #35
  4410f0:	msub	w9, w10, w11, w9
  4410f4:	orr	w12, w10, #0x30
  4410f8:	orr	w10, w9, #0x30
  4410fc:	add	x9, x8, #0x6
  441100:	strb	w12, [x8, #4]
  441104:	strb	w10, [x8, #5]
  441108:	b	441154 <argp_parse@@Base+0x98a8>
  44110c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441110:	add	x1, x1, #0x531
  441114:	mov	w2, #0x5                   	// #5
  441118:	mov	x0, xzr
  44111c:	bl	404900 <dcgettext@plt>
  441120:	bl	440980 <argp_parse@@Base+0x90d4>
  441124:	ldrb	w8, [sp, #336]
  441128:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  44112c:	cbnz	w8, 441178 <argp_parse@@Base+0x98cc>
  441130:	ldr	x8, [sp, #384]
  441134:	cbnz	x8, 441188 <argp_parse@@Base+0x98dc>
  441138:	ldr	x20, [sp, #104]
  44113c:	cbnz	x20, 4412c8 <argp_parse@@Base+0x9a1c>
  441140:	ldr	x24, [x22, #96]
  441144:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441148:	add	x1, x1, #0x5cb
  44114c:	b	441194 <argp_parse@@Base+0x98e8>
  441150:	add	x9, x8, #0x3
  441154:	strb	wzr, [x9]
  441158:	add	x1, sp, #0x2b0
  44115c:	add	x2, sp, #0x314
  441160:	mov	x0, x22
  441164:	bl	440980 <argp_parse@@Base+0x90d4>
  441168:	mov	w22, #0x1                   	// #1
  44116c:	cmp	x21, x19
  441170:	b.ne	440da8 <argp_parse@@Base+0x94fc>  // b.any
  441174:	b	440db0 <argp_parse@@Base+0x9504>
  441178:	ldr	x24, [x22, #96]
  44117c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441180:	add	x1, x1, #0x542
  441184:	b	441194 <argp_parse@@Base+0x98e8>
  441188:	ldr	x24, [x22, #96]
  44118c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441190:	add	x1, x1, #0x55b
  441194:	mov	w2, #0x5                   	// #5
  441198:	mov	x0, xzr
  44119c:	bl	404900 <dcgettext@plt>
  4411a0:	mov	x2, x0
  4411a4:	mov	w1, #0x1                   	// #1
  4411a8:	mov	x0, x24
  4411ac:	bl	404650 <__fprintf_chk@plt>
  4411b0:	ldr	x9, [sp, #360]
  4411b4:	ldr	x8, [sp, #384]
  4411b8:	cbz	x9, 4411e4 <argp_parse@@Base+0x9938>
  4411bc:	cbnz	x8, 4411e4 <argp_parse@@Base+0x9938>
  4411c0:	ldr	w8, [sp, #196]
  4411c4:	cmp	w8, #0x1
  4411c8:	b.lt	441338 <argp_parse@@Base+0x9a8c>  // b.tstop
  4411cc:	ldr	x0, [x22, #96]
  4411d0:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4411d4:	add	x2, x2, #0x5da
  4411d8:	mov	w1, #0x1                   	// #1
  4411dc:	bl	404650 <__fprintf_chk@plt>
  4411e0:	ldr	x8, [sp, #384]
  4411e4:	cbz	x8, 441338 <argp_parse@@Base+0x9a8c>
  4411e8:	ldrsw	x23, [sp, #200]
  4411ec:	mov	x8, #0xffffffffffffb3c5    	// #-19515
  4411f0:	movk	x8, #0x91a2, lsl #16
  4411f4:	ldr	x24, [x22, #96]
  4411f8:	mul	x8, x23, x8
  4411fc:	lsr	x8, x8, #32
  441200:	add	w8, w8, w23
  441204:	asr	w10, w8, #11
  441208:	add	w25, w10, w8, lsr #31
  44120c:	cmp	w25, #0x0
  441210:	mov	w9, #0x2b                  	// #43
  441214:	cneg	w5, w25, mi  // mi = first
  441218:	cmp	w23, #0x0
  44121c:	mov	w8, #0x2d                  	// #45
  441220:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441224:	csel	w4, w8, w9, lt  // lt = tstop
  441228:	add	x3, x3, #0xf8e
  44122c:	add	x0, sp, #0x314
  441230:	mov	w1, #0x1                   	// #1
  441234:	mov	w2, #0x1b                  	// #27
  441238:	add	x20, sp, #0x314
  44123c:	bl	403f60 <__sprintf_chk@plt>
  441240:	mov	w8, #0xe10                 	// #3600
  441244:	msub	w9, w25, w8, w23
  441248:	cbz	w9, 441320 <argp_parse@@Base+0x9a74>
  44124c:	cmp	w9, #0x0
  441250:	mov	w11, #0x8889                	// #34953
  441254:	cneg	w9, w9, mi  // mi = first
  441258:	movk	w11, #0x8888, lsl #16
  44125c:	mov	w13, #0x81b5                	// #33205
  441260:	and	w14, w9, #0xffff
  441264:	movk	w13, #0x1b4e, lsl #16
  441268:	umull	x11, w14, w11
  44126c:	mov	w12, #0x3c                  	// #60
  441270:	umull	x13, w14, w13
  441274:	lsr	x14, x11, #37
  441278:	msub	w9, w14, w12, w9
  44127c:	mov	w12, #0xcccd                	// #52429
  441280:	movk	w12, #0xcccc, lsl #16
  441284:	lsr	x13, x13, #38
  441288:	ubfx	x11, x11, #37, #8
  44128c:	add	x8, x20, w0, sxtw
  441290:	add	w13, w13, #0x30
  441294:	umull	x11, w11, w12
  441298:	strb	w13, [x8, #1]
  44129c:	lsr	x13, x11, #35
  4412a0:	mov	w11, #0xa                   	// #10
  4412a4:	msub	w13, w13, w11, w14
  4412a8:	mov	w10, #0x3a                  	// #58
  4412ac:	tst	w9, #0xffff
  4412b0:	orr	w13, w13, #0x30
  4412b4:	strb	w10, [x8]
  4412b8:	strb	w13, [x8, #2]
  4412bc:	b.ne	4412f4 <argp_parse@@Base+0x9a48>  // b.any
  4412c0:	add	x9, x8, #0x3
  4412c4:	b	44131c <argp_parse@@Base+0x9a70>
  4412c8:	cmp	x21, x19
  4412cc:	b.ne	441938 <argp_parse@@Base+0xa08c>  // b.any
  4412d0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4412d4:	add	x1, x1, #0x58a
  4412d8:	mov	x0, x20
  4412dc:	bl	404660 <strcmp@plt>
  4412e0:	ldr	x24, [x22, #96]
  4412e4:	cbnz	w0, 441970 <argp_parse@@Base+0xa0c4>
  4412e8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4412ec:	add	x1, x1, #0x58f
  4412f0:	b	441194 <argp_parse@@Base+0x98e8>
  4412f4:	strb	w10, [x8, #3]
  4412f8:	and	w10, w9, #0xff
  4412fc:	umull	x10, w10, w12
  441300:	lsr	x10, x10, #35
  441304:	msub	w9, w10, w11, w9
  441308:	orr	w12, w10, #0x30
  44130c:	orr	w10, w9, #0x30
  441310:	add	x9, x8, #0x6
  441314:	strb	w12, [x8, #4]
  441318:	strb	w10, [x8, #5]
  44131c:	strb	wzr, [x9]
  441320:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441324:	add	x2, x2, #0x5e0
  441328:	add	x3, sp, #0x314
  44132c:	mov	w1, #0x1                   	// #1
  441330:	mov	x0, x24
  441334:	bl	404650 <__fprintf_chk@plt>
  441338:	ldr	x1, [x22, #96]
  44133c:	mov	w0, #0xa                   	// #10
  441340:	bl	4040c0 <fputc@plt>
  441344:	ldrb	w8, [sp, #336]
  441348:	cbnz	w8, 440e30 <argp_parse@@Base+0x9584>
  44134c:	ldp	x8, x12, [sp, #344]
  441350:	ldp	x9, x11, [sp, #376]
  441354:	ldp	x10, x13, [sp, #360]
  441358:	ldrb	w20, [sp, #393]
  44135c:	orr	x14, x8, x9
  441360:	add	x10, x11, x10
  441364:	orr	x11, x14, x12
  441368:	orr	x11, x11, x13
  44136c:	orr	x10, x11, x10
  441370:	cmp	x10, #0x2
  441374:	b.lt	4413f8 <argp_parse@@Base+0x9b4c>  // b.tstop
  441378:	cbz	w20, 440d9c <argp_parse@@Base+0x94f0>
  44137c:	cmp	x9, #0x2
  441380:	b.lt	441394 <argp_parse@@Base+0x9ae8>  // b.tstop
  441384:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441388:	add	x0, x0, #0x5e6
  44138c:	bl	440980 <argp_parse@@Base+0x90d4>
  441390:	ldr	x8, [sp, #344]
  441394:	cmp	x8, #0x2
  441398:	b.lt	4413a8 <argp_parse@@Base+0x9afc>  // b.tstop
  44139c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4413a0:	add	x0, x0, #0x607
  4413a4:	bl	440980 <argp_parse@@Base+0x90d4>
  4413a8:	ldr	x8, [sp, #352]
  4413ac:	cmp	x8, #0x2
  4413b0:	b.lt	4413c0 <argp_parse@@Base+0x9b14>  // b.tstop
  4413b4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4413b8:	add	x0, x0, #0x628
  4413bc:	bl	440980 <argp_parse@@Base+0x90d4>
  4413c0:	ldr	x8, [sp, #368]
  4413c4:	cmp	x8, #0x2
  4413c8:	b.lt	4413d8 <argp_parse@@Base+0x9b2c>  // b.tstop
  4413cc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4413d0:	add	x0, x0, #0x649
  4413d4:	bl	440980 <argp_parse@@Base+0x90d4>
  4413d8:	ldr	x8, [sp, #360]
  4413dc:	ldr	x9, [sp, #384]
  4413e0:	add	x8, x9, x8
  4413e4:	cmp	x8, #0x2
  4413e8:	b.lt	440d9c <argp_parse@@Base+0x94f0>  // b.tstop
  4413ec:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4413f0:	add	x0, x0, #0x675
  4413f4:	b	441534 <argp_parse@@Base+0x9c88>
  4413f8:	ldr	x24, [sp, #216]
  4413fc:	tbnz	x24, #63, 441448 <argp_parse@@Base+0x9b9c>
  441400:	ldr	x8, [sp, #224]
  441404:	cmp	x8, #0x2
  441408:	b.ne	4414d8 <argp_parse@@Base+0x9c2c>  // b.any
  44140c:	cmp	x24, #0x45
  441410:	mov	w8, #0x76c                 	// #1900
  441414:	mov	w9, #0x7d0                 	// #2000
  441418:	csel	x8, x9, x8, lt  // lt = tstop
  44141c:	add	x25, x8, x24
  441420:	cbz	w20, 4414dc <argp_parse@@Base+0x9c30>
  441424:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441428:	add	x1, x1, #0xf95
  44142c:	mov	w2, #0x5                   	// #5
  441430:	mov	x0, xzr
  441434:	bl	404900 <dcgettext@plt>
  441438:	mov	x1, x24
  44143c:	mov	x2, x25
  441440:	bl	440980 <argp_parse@@Base+0x90d4>
  441444:	b	4414dc <argp_parse@@Base+0x9c30>
  441448:	mov	x9, #0xfffffffffffff895    	// #-1899
  44144c:	mov	w8, #0xfffff894            	// #-1900
  441450:	movk	x9, #0x7fff, lsl #16
  441454:	cmp	x24, x9
  441458:	sub	w8, w8, w24
  44145c:	b.lt	4414f4 <argp_parse@@Base+0x9c48>  // b.tstop
  441460:	ldr	x9, [sp, #232]
  441464:	mov	w10, #0x7fffffff            	// #2147483647
  441468:	add	x10, x9, x10
  44146c:	sub	w9, w9, #0x1
  441470:	lsr	x10, x10, #32
  441474:	stp	w9, w8, [x29, #-160]
  441478:	cbnz	x10, 441518 <argp_parse@@Base+0x9c6c>
  44147c:	ldr	x8, [sp, #240]
  441480:	cmp	x8, w8, sxtw
  441484:	stur	w8, [x29, #-164]
  441488:	b.ne	441518 <argp_parse@@Base+0x9c6c>  // b.any
  44148c:	ldr	x8, [sp, #376]
  441490:	cbnz	x8, 4414a8 <argp_parse@@Base+0x9bfc>
  441494:	ldrb	w9, [sp, #337]
  441498:	cbz	w9, 441624 <argp_parse@@Base+0x9d78>
  44149c:	ldp	x9, x10, [sp, #344]
  4414a0:	orr	x9, x10, x9
  4414a4:	cbnz	x9, 441624 <argp_parse@@Base+0x9d78>
  4414a8:	ldr	w9, [sp, #204]
  4414ac:	ldr	x10, [sp, #248]
  4414b0:	cbz	w9, 44153c <argp_parse@@Base+0x9c90>
  4414b4:	cmp	w9, #0x1
  4414b8:	b.ne	441554 <argp_parse@@Base+0x9ca8>  // b.any
  4414bc:	sub	x11, x10, #0x1
  4414c0:	cmp	x10, #0xc
  4414c4:	add	x12, x10, #0xc
  4414c8:	csinv	x10, x10, xzr, eq  // eq = none
  4414cc:	cmp	x11, #0xb
  4414d0:	csel	x10, x12, x10, cc  // cc = lo, ul, last
  4414d4:	b	44155c <argp_parse@@Base+0x9cb0>
  4414d8:	mov	x25, x24
  4414dc:	mov	w8, #0x76c                 	// #1900
  4414e0:	movk	w8, #0x8000, lsl #16
  4414e4:	cmp	x25, x8
  4414e8:	sub	w8, w25, #0x76c
  4414ec:	mov	x24, x25
  4414f0:	b.lt	441460 <argp_parse@@Base+0x9bb4>  // b.tstop
  4414f4:	stur	w8, [x29, #-156]
  4414f8:	cbz	w20, 441518 <argp_parse@@Base+0x9c6c>
  4414fc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441500:	add	x1, x1, #0xfbf
  441504:	mov	w2, #0x5                   	// #5
  441508:	mov	x0, xzr
  44150c:	bl	404900 <dcgettext@plt>
  441510:	mov	x1, x24
  441514:	bl	440980 <argp_parse@@Base+0x90d4>
  441518:	ldrb	w8, [sp, #393]
  44151c:	cbz	w8, 440d9c <argp_parse@@Base+0x94f0>
  441520:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441524:	add	x1, x1, #0x69b
  441528:	mov	w2, #0x5                   	// #5
  44152c:	mov	x0, xzr
  441530:	bl	404900 <dcgettext@plt>
  441534:	bl	440980 <argp_parse@@Base+0x90d4>
  441538:	b	440d9c <argp_parse@@Base+0x94f0>
  44153c:	sub	x11, x10, #0x1
  441540:	cmp	x10, #0xc
  441544:	csetm	x12, ne  // ne = any
  441548:	cmp	x11, #0xb
  44154c:	csel	x10, x10, x12, cc  // cc = lo, ul, last
  441550:	b	44155c <argp_parse@@Base+0x9cb0>
  441554:	cmp	x10, #0x18
  441558:	csinv	x10, x10, xzr, cc  // cc = lo, ul, last
  44155c:	stur	w10, [x29, #-168]
  441560:	tbnz	w10, #31, 4415d0 <argp_parse@@Base+0x9d24>
  441564:	ldp	x9, x10, [sp, #256]
  441568:	ldrb	w11, [sp, #393]
  44156c:	stp	w10, w9, [x29, #-176]
  441570:	cbz	w11, 441644 <argp_parse@@Base+0x9d98>
  441574:	adrp	x9, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441578:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  44157c:	add	x9, x9, #0x6de
  441580:	add	x10, x10, #0x70c
  441584:	cmp	x8, #0x0
  441588:	csel	x1, x10, x9, eq  // eq = none
  44158c:	mov	w2, #0x5                   	// #5
  441590:	mov	x0, xzr
  441594:	bl	404900 <dcgettext@plt>
  441598:	ldp	w6, w5, [x29, #-172]
  44159c:	ldur	w7, [x29, #-176]
  4415a0:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4415a4:	mov	x24, x0
  4415a8:	add	x4, x4, #0xfdd
  4415ac:	add	x0, sp, #0x2b0
  4415b0:	mov	w1, #0x64                  	// #100
  4415b4:	mov	w2, #0x1                   	// #1
  4415b8:	mov	w3, #0x64                  	// #100
  4415bc:	bl	4041d0 <__snprintf_chk@plt>
  4415c0:	add	x1, sp, #0x2b0
  4415c4:	mov	x0, x24
  4415c8:	bl	440980 <argp_parse@@Base+0x90d4>
  4415cc:	b	441644 <argp_parse@@Base+0x9d98>
  4415d0:	ldrb	w8, [sp, #393]
  4415d4:	cbz	w8, 440d9c <argp_parse@@Base+0x94f0>
  4415d8:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4415dc:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4415e0:	add	x8, x8, #0x66
  4415e4:	add	x10, x10, #0x6c0
  4415e8:	cmp	w9, #0x1
  4415ec:	adrp	x11, 460000 <_obstack_memory_used@@Base+0x194b0>
  4415f0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4415f4:	add	x11, x11, #0x98b
  4415f8:	csel	x8, x10, x8, eq  // eq = none
  4415fc:	cmp	w9, #0x0
  441600:	add	x1, x1, #0x6c3
  441604:	mov	w2, #0x5                   	// #5
  441608:	mov	x0, xzr
  44160c:	csel	x22, x11, x8, eq  // eq = none
  441610:	bl	404900 <dcgettext@plt>
  441614:	ldr	x1, [sp, #248]
  441618:	mov	x2, x22
  44161c:	bl	440980 <argp_parse@@Base+0x90d4>
  441620:	b	440d9c <argp_parse@@Base+0x94f0>
  441624:	ldrb	w8, [sp, #393]
  441628:	stur	xzr, [x29, #-176]
  44162c:	stur	wzr, [x29, #-168]
  441630:	str	xzr, [sp, #272]
  441634:	cbz	w8, 441644 <argp_parse@@Base+0x9d98>
  441638:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  44163c:	add	x0, x0, #0x738
  441640:	bl	440980 <argp_parse@@Base+0x90d4>
  441644:	ldp	x8, x9, [sp, #344]
  441648:	ldr	x10, [sp, #376]
  44164c:	orr	x8, x9, x8
  441650:	orr	x8, x8, x10
  441654:	cbz	x8, 441660 <argp_parse@@Base+0x9db4>
  441658:	mov	w8, #0xffffffff            	// #-1
  44165c:	stur	w8, [x29, #-144]
  441660:	ldr	x8, [sp, #360]
  441664:	cbz	x8, 441674 <argp_parse@@Base+0x9dc8>
  441668:	ldr	w8, [sp, #196]
  44166c:	stur	w8, [x29, #-144]
  441670:	b	441678 <argp_parse@@Base+0x9dcc>
  441674:	ldur	w8, [x29, #-144]
  441678:	ldp	w28, w23, [x29, #-176]
  44167c:	ldp	w20, w26, [x29, #-168]
  441680:	ldp	w25, w22, [x29, #-160]
  441684:	mov	w9, #0xffffffff            	// #-1
  441688:	sub	x1, x29, #0xb0
  44168c:	mov	x0, x21
  441690:	stp	w28, w23, [x29, #-240]
  441694:	stp	w20, w26, [x29, #-232]
  441698:	stp	w25, w22, [x29, #-224]
  44169c:	stur	w8, [x29, #-208]
  4416a0:	stur	w9, [x29, #-152]
  4416a4:	bl	456818 <_obstack_memory_used@@Base+0xfcc8>
  4416a8:	ldur	w8, [x29, #-152]
  4416ac:	tbnz	w8, #31, 4416ec <argp_parse@@Base+0x9e40>
  4416b0:	ldp	w8, w9, [x29, #-176]
  4416b4:	ldp	w10, w11, [x29, #-168]
  4416b8:	ldp	w12, w13, [x29, #-160]
  4416bc:	eor	w8, w8, w28
  4416c0:	eor	w9, w9, w23
  4416c4:	eor	w10, w10, w20
  4416c8:	orr	w8, w9, w8
  4416cc:	eor	w11, w11, w26
  4416d0:	orr	w8, w8, w10
  4416d4:	eor	w12, w12, w25
  4416d8:	orr	w8, w8, w11
  4416dc:	orr	w8, w8, w12
  4416e0:	eor	w9, w13, w22
  4416e4:	orr	w8, w8, w9
  4416e8:	cbz	w8, 44189c <argp_parse@@Base+0x9ff0>
  4416ec:	ldr	x23, [sp, #384]
  4416f0:	cbz	x23, 4419a4 <argp_parse@@Base+0xa0f8>
  4416f4:	ldrsw	x20, [sp, #200]
  4416f8:	mov	x11, #0xffffffffffffb3c5    	// #-19515
  4416fc:	mov	w8, #0x58                  	// #88
  441700:	movk	x11, #0x91a2, lsl #16
  441704:	sturb	w8, [x29, #-118]
  441708:	mul	x8, x20, x11
  44170c:	lsr	x8, x8, #32
  441710:	mov	w9, #0x5858                	// #22616
  441714:	add	w8, w8, w20
  441718:	sturh	w9, [x29, #-120]
  44171c:	asr	w9, w8, #11
  441720:	add	w22, w9, w8, lsr #31
  441724:	sub	x10, x29, #0x78
  441728:	cmp	w22, #0x0
  44172c:	mov	w12, #0x2b                  	// #43
  441730:	orr	x24, x10, #0x3
  441734:	cneg	w5, w22, mi  // mi = first
  441738:	cmp	w20, #0x0
  44173c:	mov	w8, #0x2d                  	// #45
  441740:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441744:	csel	w4, w8, w12, lt  // lt = tstop
  441748:	add	x3, x3, #0xf8e
  44174c:	mov	w1, #0x1                   	// #1
  441750:	mov	w2, #0x1b                  	// #27
  441754:	mov	x0, x24
  441758:	bl	403f60 <__sprintf_chk@plt>
  44175c:	mov	w8, #0xe10                 	// #3600
  441760:	msub	w8, w22, w8, w20
  441764:	cbz	w8, 441810 <argp_parse@@Base+0x9f64>
  441768:	cmp	w8, #0x0
  44176c:	mov	w10, #0x8889                	// #34953
  441770:	cneg	w8, w8, mi  // mi = first
  441774:	movk	w10, #0x8888, lsl #16
  441778:	mov	w12, #0x81b5                	// #33205
  44177c:	and	w14, w8, #0xffff
  441780:	movk	w12, #0x1b4e, lsl #16
  441784:	umull	x10, w14, w10
  441788:	mov	w11, #0x3c                  	// #60
  44178c:	umull	x14, w14, w12
  441790:	lsr	x15, x10, #37
  441794:	mov	w12, #0xcccd                	// #52429
  441798:	msub	w8, w15, w11, w8
  44179c:	movk	w12, #0xcccc, lsl #16
  4417a0:	lsr	x11, x14, #38
  4417a4:	ubfx	x10, x10, #37, #8
  4417a8:	add	x13, x24, w0, sxtw
  4417ac:	add	w11, w11, #0x30
  4417b0:	umull	x10, w10, w12
  4417b4:	strb	w11, [x13, #1]
  4417b8:	mov	w11, #0xa                   	// #10
  4417bc:	lsr	x10, x10, #35
  4417c0:	msub	w10, w10, w11, w15
  4417c4:	mov	w9, #0x3a                  	// #58
  4417c8:	tst	w8, #0xffff
  4417cc:	orr	w14, w10, #0x30
  4417d0:	add	x10, x13, #0x3
  4417d4:	strb	w9, [x13]
  4417d8:	strb	w14, [x13, #2]
  4417dc:	b.eq	44180c <argp_parse@@Base+0x9f60>  // b.none
  4417e0:	strb	w9, [x10]
  4417e4:	and	w9, w8, #0xff
  4417e8:	umull	x9, w9, w12
  4417ec:	lsr	x9, x9, #35
  4417f0:	msub	w8, w9, w11, w8
  4417f4:	orr	w12, w9, #0x30
  4417f8:	orr	w8, w8, #0x30
  4417fc:	add	x9, x10, #0x3
  441800:	strb	w12, [x10, #1]
  441804:	strb	w8, [x10, #2]
  441808:	mov	x10, x9
  44180c:	strb	wzr, [x10]
  441810:	sub	x0, x29, #0x78
  441814:	bl	45637c <_obstack_memory_used@@Base+0xf82c>
  441818:	cbz	x0, 441948 <argp_parse@@Base+0xa09c>
  44181c:	ldr	q0, [x27, #640]
  441820:	ldur	x8, [x29, #-224]
  441824:	ldur	w9, [x29, #-208]
  441828:	mov	w10, #0xffffffff            	// #-1
  44182c:	sub	x1, x29, #0xb0
  441830:	mov	x25, x0
  441834:	str	q0, [x27, #704]
  441838:	stur	x8, [x29, #-160]
  44183c:	stur	w9, [x29, #-144]
  441840:	stur	w10, [x29, #-152]
  441844:	bl	456818 <_obstack_memory_used@@Base+0xfcc8>
  441848:	ldur	w8, [x29, #-152]
  44184c:	tbnz	w8, #31, 44199c <argp_parse@@Base+0xa0f0>
  441850:	ldr	q0, [x27, #640]
  441854:	ldr	q1, [x27, #704]
  441858:	ldp	w8, w11, [x29, #-160]
  44185c:	ldp	w9, w10, [x29, #-224]
  441860:	mov	x24, x0
  441864:	eor	v0.16b, v1.16b, v0.16b
  441868:	ext	v1.16b, v0.16b, v0.16b, #8
  44186c:	orr	v0.16b, v0.16b, v1.16b
  441870:	dup	v1.4s, v0.s[1]
  441874:	orr	v0.16b, v0.16b, v1.16b
  441878:	eor	w8, w8, w9
  44187c:	eor	w9, w11, w10
  441880:	fmov	w10, s0
  441884:	orr	w8, w10, w8
  441888:	mov	x0, x25
  44188c:	orr	w20, w8, w9
  441890:	bl	45640c <_obstack_memory_used@@Base+0xf8bc>
  441894:	cbnz	w20, 4419a4 <argp_parse@@Base+0xa0f8>
  441898:	b	4418a0 <argp_parse@@Base+0x9ff4>
  44189c:	mov	x24, x0
  4418a0:	ldr	x8, [sp, #352]
  4418a4:	cbz	x8, 442348 <argp_parse@@Base+0xaa9c>
  4418a8:	ldr	x8, [sp, #344]
  4418ac:	cbnz	x8, 442348 <argp_parse@@Base+0xaa9c>
  4418b0:	ldr	x8, [sp, #184]
  4418b4:	ldur	w9, [x29, #-152]
  4418b8:	ldr	w10, [sp, #192]
  4418bc:	cmp	x8, #0x0
  4418c0:	cset	w11, gt
  4418c4:	subs	w9, w10, w9
  4418c8:	cset	w10, ne  // ne = any
  4418cc:	and	w10, w11, w10
  4418d0:	subs	x8, x8, x10
  4418d4:	b.mi	441b9c <argp_parse@@Base+0xa2f0>  // b.first
  4418d8:	mov	x10, #0x9249                	// #37449
  4418dc:	movk	x10, #0x4924, lsl #16
  4418e0:	movk	x10, #0x2492, lsl #32
  4418e4:	movk	x10, #0x1249, lsl #48
  4418e8:	cmp	x8, x10
  4418ec:	b.gt	441fa8 <argp_parse@@Base+0xa6fc>
  4418f0:	mov	w12, #0x2493                	// #9363
  4418f4:	lsl	x10, x8, #3
  4418f8:	add	w9, w9, #0x7
  4418fc:	movk	w12, #0x9249, lsl #16
  441900:	sub	x8, x10, x8
  441904:	smull	x10, w9, w12
  441908:	lsr	x10, x10, #32
  44190c:	add	w10, w10, w9
  441910:	asr	w12, w10, #2
  441914:	add	w10, w12, w10, lsr #31
  441918:	sub	w10, w10, w10, lsl #3
  44191c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  441920:	add	w9, w9, w10
  441924:	sub	x11, x11, x8
  441928:	sxtw	x10, w9
  44192c:	cmp	x11, x10
  441930:	b.ge	441bf8 <argp_parse@@Base+0xa34c>  // b.tcont
  441934:	b	441fa8 <argp_parse@@Base+0xa6fc>
  441938:	ldr	x24, [x22, #96]
  44193c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441940:	add	x1, x1, #0x573
  441944:	b	441978 <argp_parse@@Base+0xa0cc>
  441948:	ldrb	w8, [sp, #393]
  44194c:	cbz	w8, 440d9c <argp_parse@@Base+0x94f0>
  441950:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441954:	add	x1, x1, #0x76c
  441958:	mov	w2, #0x5                   	// #5
  44195c:	mov	x0, xzr
  441960:	bl	404900 <dcgettext@plt>
  441964:	sub	x1, x29, #0x78
  441968:	bl	440980 <argp_parse@@Base+0x90d4>
  44196c:	b	440d9c <argp_parse@@Base+0x94f0>
  441970:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441974:	add	x1, x1, #0x5b1
  441978:	mov	w2, #0x5                   	// #5
  44197c:	mov	x0, xzr
  441980:	bl	404900 <dcgettext@plt>
  441984:	mov	x2, x0
  441988:	mov	w1, #0x1                   	// #1
  44198c:	mov	x0, x24
  441990:	mov	x3, x20
  441994:	bl	404650 <__fprintf_chk@plt>
  441998:	b	4411b0 <argp_parse@@Base+0x9904>
  44199c:	mov	x0, x25
  4419a0:	bl	45640c <_obstack_memory_used@@Base+0xf8bc>
  4419a4:	ldp	w15, w17, [x29, #-240]
  4419a8:	ldp	w16, w18, [x29, #-176]
  4419ac:	ldp	w0, w24, [x29, #-232]
  4419b0:	ldp	w1, w13, [x29, #-168]
  4419b4:	ldp	w12, w25, [x29, #-224]
  4419b8:	ldp	w14, w27, [x29, #-160]
  4419bc:	cmp	w15, w16
  4419c0:	cset	w8, eq  // eq = none
  4419c4:	cmp	w17, w18
  4419c8:	cset	w9, eq  // eq = none
  4419cc:	cmp	w0, w1
  4419d0:	ldrb	w11, [sp, #393]
  4419d4:	cset	w10, ne  // ne = any
  4419d8:	cmp	w24, w13
  4419dc:	cset	w28, eq  // eq = none
  4419e0:	cmp	w12, w14
  4419e4:	cset	w26, eq  // eq = none
  4419e8:	cmp	w25, w27
  4419ec:	str	x23, [sp, #104]
  4419f0:	cset	w23, eq  // eq = none
  4419f4:	str	w13, [sp, #96]
  4419f8:	str	w14, [sp, #88]
  4419fc:	cbz	w11, 440d9c <argp_parse@@Base+0x94f0>
  441a00:	stp	w1, w0, [sp, #56]
  441a04:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441a08:	and	w8, w8, w9
  441a0c:	add	x1, x1, #0xfec
  441a10:	mov	w2, #0x5                   	// #5
  441a14:	mov	x0, xzr
  441a18:	stp	w18, w17, [sp, #64]
  441a1c:	stp	w16, w15, [sp, #72]
  441a20:	str	w12, [sp, #80]
  441a24:	and	w20, w8, w10
  441a28:	bl	404900 <dcgettext@plt>
  441a2c:	bl	440980 <argp_parse@@Base+0x90d4>
  441a30:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441a34:	add	x1, x1, #0xd
  441a38:	mov	w2, #0x5                   	// #5
  441a3c:	mov	x0, xzr
  441a40:	bl	404900 <dcgettext@plt>
  441a44:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441a48:	mov	x22, x0
  441a4c:	add	x2, x2, #0x148
  441a50:	sub	x0, x29, #0x78
  441a54:	sub	x3, x29, #0xf0
  441a58:	mov	w1, #0x64                  	// #100
  441a5c:	mov	x4, xzr
  441a60:	mov	w5, wzr
  441a64:	bl	4573e8 <_obstack_memory_used@@Base+0x10898>
  441a68:	cmp	w0, #0x63
  441a6c:	str	w24, [sp, #52]
  441a70:	b.gt	441c44 <argp_parse@@Base+0xa398>
  441a74:	ldr	x8, [sp, #384]
  441a78:	cbz	x8, 441c44 <argp_parse@@Base+0xa398>
  441a7c:	str	w20, [sp, #40]
  441a80:	ldrsw	x20, [sp, #200]
  441a84:	sub	x8, x29, #0x78
  441a88:	mov	x9, #0x6400000000          	// #429496729600
  441a8c:	add	x8, x8, w0, sxtw
  441a90:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  441a94:	str	x8, [sp, #32]
  441a98:	sub	x8, x9, x0, lsl #32
  441a9c:	movk	x10, #0x91a2, lsl #16
  441aa0:	asr	x8, x8, #32
  441aa4:	str	x8, [sp, #24]
  441aa8:	mul	x8, x20, x10
  441aac:	lsr	x8, x8, #32
  441ab0:	add	w8, w8, w20
  441ab4:	asr	w9, w8, #11
  441ab8:	add	w24, w9, w8, lsr #31
  441abc:	cmp	w24, #0x0
  441ac0:	mov	w11, #0x2b                  	// #43
  441ac4:	cneg	w5, w24, mi  // mi = first
  441ac8:	cmp	w20, #0x0
  441acc:	mov	w8, #0x2d                  	// #45
  441ad0:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441ad4:	csel	w4, w8, w11, lt  // lt = tstop
  441ad8:	add	x3, x3, #0xf8e
  441adc:	add	x0, sp, #0x78
  441ae0:	mov	w1, #0x1                   	// #1
  441ae4:	mov	w2, #0x1b                  	// #27
  441ae8:	bl	403f60 <__sprintf_chk@plt>
  441aec:	mov	w8, #0xe10                 	// #3600
  441af0:	msub	w9, w24, w8, w20
  441af4:	cbz	w9, 441c20 <argp_parse@@Base+0xa374>
  441af8:	cmp	w9, #0x0
  441afc:	mov	w11, #0x8889                	// #34953
  441b00:	cneg	w9, w9, mi  // mi = first
  441b04:	movk	w11, #0x8888, lsl #16
  441b08:	mov	w13, #0x81b5                	// #33205
  441b0c:	and	w14, w9, #0xffff
  441b10:	movk	w13, #0x1b4e, lsl #16
  441b14:	umull	x11, w14, w11
  441b18:	mov	w12, #0x3c                  	// #60
  441b1c:	umull	x13, w14, w13
  441b20:	lsr	x14, x11, #37
  441b24:	msub	w9, w14, w12, w9
  441b28:	mov	w12, #0xcccd                	// #52429
  441b2c:	add	x8, sp, #0x78
  441b30:	movk	w12, #0xcccc, lsl #16
  441b34:	lsr	x13, x13, #38
  441b38:	ubfx	x11, x11, #37, #8
  441b3c:	add	x8, x8, w0, sxtw
  441b40:	add	w13, w13, #0x30
  441b44:	umull	x11, w11, w12
  441b48:	strb	w13, [x8, #1]
  441b4c:	lsr	x13, x11, #35
  441b50:	mov	w11, #0xa                   	// #10
  441b54:	msub	w13, w13, w11, w14
  441b58:	mov	w10, #0x3a                  	// #58
  441b5c:	tst	w9, #0xffff
  441b60:	orr	w13, w13, #0x30
  441b64:	strb	w10, [x8]
  441b68:	strb	w13, [x8, #2]
  441b6c:	b.eq	441c18 <argp_parse@@Base+0xa36c>  // b.none
  441b70:	strb	w10, [x8, #3]
  441b74:	and	w10, w9, #0xff
  441b78:	umull	x10, w10, w12
  441b7c:	lsr	x10, x10, #35
  441b80:	msub	w9, w10, w11, w9
  441b84:	orr	w12, w10, #0x30
  441b88:	orr	w10, w9, #0x30
  441b8c:	add	x9, x8, #0x6
  441b90:	strb	w12, [x8, #4]
  441b94:	strb	w10, [x8, #5]
  441b98:	b	441c1c <argp_parse@@Base+0xa370>
  441b9c:	mov	x10, #0x6db7                	// #28087
  441ba0:	movk	x10, #0xb6db, lsl #16
  441ba4:	movk	x10, #0xdb6d, lsl #32
  441ba8:	movk	x10, #0xedb6, lsl #48
  441bac:	cmp	x8, x10
  441bb0:	b.lt	441fa8 <argp_parse@@Base+0xa6fc>  // b.tstop
  441bb4:	mov	w11, #0x2493                	// #9363
  441bb8:	lsl	x10, x8, #3
  441bbc:	add	w9, w9, #0x7
  441bc0:	movk	w11, #0x9249, lsl #16
  441bc4:	sub	x8, x10, x8
  441bc8:	smull	x10, w9, w11
  441bcc:	lsr	x10, x10, #32
  441bd0:	add	w10, w10, w9
  441bd4:	asr	w11, w10, #2
  441bd8:	add	w10, w11, w10, lsr #31
  441bdc:	sub	w10, w10, w10, lsl #3
  441be0:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  441be4:	add	w9, w9, w10
  441be8:	sxtw	x10, w9
  441bec:	sub	x9, x12, x8
  441bf0:	cmp	x9, x10
  441bf4:	b.gt	441fa8 <argp_parse@@Base+0xa6fc>
  441bf8:	ldursw	x9, [x29, #-164]
  441bfc:	add	x8, x8, x10
  441c00:	tbnz	w9, #31, 441f7c <argp_parse@@Base+0xa6d0>
  441c04:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  441c08:	sub	x10, x10, x9
  441c0c:	cmp	x10, x8
  441c10:	b.ge	441f8c <argp_parse@@Base+0xa6e0>  // b.tcont
  441c14:	b	441fa0 <argp_parse@@Base+0xa6f4>
  441c18:	add	x9, x8, #0x3
  441c1c:	strb	wzr, [x9]
  441c20:	ldp	x1, x0, [sp, #24]
  441c24:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441c28:	add	x4, x4, #0x162
  441c2c:	add	x5, sp, #0x78
  441c30:	mov	w2, #0x1                   	// #1
  441c34:	mov	x3, #0xffffffffffffffff    	// #-1
  441c38:	bl	4041d0 <__snprintf_chk@plt>
  441c3c:	ldr	w24, [sp, #52]
  441c40:	ldr	w20, [sp, #40]
  441c44:	sub	x1, x29, #0x78
  441c48:	mov	x0, x22
  441c4c:	and	w23, w26, w23
  441c50:	and	w26, w20, w28
  441c54:	bl	440980 <argp_parse@@Base+0x90d4>
  441c58:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441c5c:	add	x1, x1, #0x2b
  441c60:	mov	w2, #0x5                   	// #5
  441c64:	mov	x0, xzr
  441c68:	bl	404900 <dcgettext@plt>
  441c6c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441c70:	mov	x22, x0
  441c74:	add	x2, x2, #0x148
  441c78:	sub	x0, x29, #0x78
  441c7c:	sub	x3, x29, #0xb0
  441c80:	mov	w1, #0x64                  	// #100
  441c84:	mov	x4, xzr
  441c88:	mov	w5, wzr
  441c8c:	bl	4573e8 <_obstack_memory_used@@Base+0x10898>
  441c90:	cmp	w0, #0x63
  441c94:	b.gt	441de4 <argp_parse@@Base+0xa538>
  441c98:	ldr	x8, [sp, #384]
  441c9c:	cbz	x8, 441de4 <argp_parse@@Base+0xa538>
  441ca0:	ldrsw	x24, [sp, #200]
  441ca4:	sub	x8, x29, #0x78
  441ca8:	mov	x9, #0x6400000000          	// #429496729600
  441cac:	add	x8, x8, w0, sxtw
  441cb0:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  441cb4:	str	x8, [sp, #40]
  441cb8:	sub	x8, x9, x0, lsl #32
  441cbc:	movk	x10, #0x91a2, lsl #16
  441cc0:	asr	x8, x8, #32
  441cc4:	str	x8, [sp, #32]
  441cc8:	mul	x8, x24, x10
  441ccc:	lsr	x8, x8, #32
  441cd0:	add	w8, w8, w24
  441cd4:	asr	w9, w8, #11
  441cd8:	add	w28, w9, w8, lsr #31
  441cdc:	cmp	w28, #0x0
  441ce0:	mov	w11, #0x2b                  	// #43
  441ce4:	cneg	w5, w28, mi  // mi = first
  441ce8:	cmp	w24, #0x0
  441cec:	mov	w8, #0x2d                  	// #45
  441cf0:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441cf4:	csel	w4, w8, w11, lt  // lt = tstop
  441cf8:	add	x3, x3, #0xf8e
  441cfc:	add	x0, sp, #0x78
  441d00:	mov	w1, #0x1                   	// #1
  441d04:	mov	w2, #0x1b                  	// #27
  441d08:	add	x20, sp, #0x78
  441d0c:	bl	403f60 <__sprintf_chk@plt>
  441d10:	mov	w8, #0xe10                 	// #3600
  441d14:	msub	w9, w28, w8, w24
  441d18:	cbz	w9, 441dc4 <argp_parse@@Base+0xa518>
  441d1c:	cmp	w9, #0x0
  441d20:	mov	w11, #0x8889                	// #34953
  441d24:	cneg	w9, w9, mi  // mi = first
  441d28:	movk	w11, #0x8888, lsl #16
  441d2c:	mov	w13, #0x81b5                	// #33205
  441d30:	and	w14, w9, #0xffff
  441d34:	movk	w13, #0x1b4e, lsl #16
  441d38:	umull	x11, w14, w11
  441d3c:	mov	w12, #0x3c                  	// #60
  441d40:	umull	x13, w14, w13
  441d44:	lsr	x14, x11, #37
  441d48:	msub	w9, w14, w12, w9
  441d4c:	mov	w12, #0xcccd                	// #52429
  441d50:	movk	w12, #0xcccc, lsl #16
  441d54:	lsr	x13, x13, #38
  441d58:	ubfx	x11, x11, #37, #8
  441d5c:	add	x8, x20, w0, sxtw
  441d60:	add	w13, w13, #0x30
  441d64:	umull	x11, w11, w12
  441d68:	strb	w13, [x8, #1]
  441d6c:	lsr	x13, x11, #35
  441d70:	mov	w11, #0xa                   	// #10
  441d74:	msub	w13, w13, w11, w14
  441d78:	mov	w10, #0x3a                  	// #58
  441d7c:	tst	w9, #0xffff
  441d80:	orr	w13, w13, #0x30
  441d84:	strb	w10, [x8]
  441d88:	strb	w13, [x8, #2]
  441d8c:	b.eq	441dbc <argp_parse@@Base+0xa510>  // b.none
  441d90:	strb	w10, [x8, #3]
  441d94:	and	w10, w9, #0xff
  441d98:	umull	x10, w10, w12
  441d9c:	lsr	x10, x10, #35
  441da0:	msub	w9, w10, w11, w9
  441da4:	orr	w12, w10, #0x30
  441da8:	orr	w10, w9, #0x30
  441dac:	add	x9, x8, #0x6
  441db0:	strb	w12, [x8, #4]
  441db4:	strb	w10, [x8, #5]
  441db8:	b	441dc0 <argp_parse@@Base+0xa514>
  441dbc:	add	x9, x8, #0x3
  441dc0:	strb	wzr, [x9]
  441dc4:	ldp	x1, x0, [sp, #32]
  441dc8:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441dcc:	add	x4, x4, #0x162
  441dd0:	add	x5, sp, #0x78
  441dd4:	mov	w2, #0x1                   	// #1
  441dd8:	mov	x3, #0xffffffffffffffff    	// #-1
  441ddc:	bl	4041d0 <__snprintf_chk@plt>
  441de0:	ldr	w24, [sp, #52]
  441de4:	sub	x1, x29, #0x78
  441de8:	mov	x0, x22
  441dec:	and	w20, w26, w23
  441df0:	sub	x23, x29, #0x78
  441df4:	bl	440980 <argp_parse@@Base+0x90d4>
  441df8:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441dfc:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  441e00:	ldr	w22, [sp, #80]
  441e04:	ldr	w26, [sp, #88]
  441e08:	add	x8, x8, #0x82
  441e0c:	add	x9, x9, #0x66
  441e10:	cmp	w25, w27
  441e14:	ldr	w25, [sp, #96]
  441e18:	csel	x5, x9, x8, eq  // eq = none
  441e1c:	ldp	w11, w8, [sp, #56]
  441e20:	adrp	x10, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441e24:	add	x10, x10, #0x84
  441e28:	cmp	w22, w26
  441e2c:	csel	x6, x9, x10, eq  // eq = none
  441e30:	cmp	w24, w25
  441e34:	csel	x7, x9, x10, eq  // eq = none
  441e38:	cmp	w8, w11
  441e3c:	ldp	w12, w11, [sp, #64]
  441e40:	csel	x8, x9, x10, eq  // eq = none
  441e44:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441e48:	add	x4, x4, #0x49
  441e4c:	cmp	w11, w12
  441e50:	ldp	w13, w12, [sp, #72]
  441e54:	csel	x11, x9, x10, eq  // eq = none
  441e58:	sub	x0, x29, #0x78
  441e5c:	mov	w1, #0x64                  	// #100
  441e60:	cmp	w12, w13
  441e64:	csel	x9, x9, x10, eq  // eq = none
  441e68:	mov	w2, #0x1                   	// #1
  441e6c:	mov	w3, #0x64                  	// #100
  441e70:	stp	x11, x9, [sp, #8]
  441e74:	str	x8, [sp]
  441e78:	bl	4041d0 <__snprintf_chk@plt>
  441e7c:	tbnz	w0, #31, 441ebc <argp_parse@@Base+0xa610>
  441e80:	cmp	w0, #0x63
  441e84:	mov	w8, #0x63                  	// #99
  441e88:	csel	w9, w0, w8, cc  // cc = lo, ul, last
  441e8c:	sub	x8, x23, #0x1
  441e90:	subs	x10, x9, #0x1
  441e94:	b.lt	441eb0 <argp_parse@@Base+0xa604>  // b.tstop
  441e98:	ldrb	w9, [x8, x9]
  441e9c:	cmp	w9, #0x20
  441ea0:	mov	x9, x10
  441ea4:	b.eq	441e90 <argp_parse@@Base+0xa5e4>  // b.none
  441ea8:	add	x8, x10, #0x1
  441eac:	b	441eb4 <argp_parse@@Base+0xa608>
  441eb0:	mov	x8, xzr
  441eb4:	sub	x9, x29, #0x78
  441eb8:	strb	wzr, [x9, w8, sxtw]
  441ebc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  441ec0:	add	x0, x0, #0x50b
  441ec4:	sub	x1, x29, #0x78
  441ec8:	bl	440980 <argp_parse@@Base+0x90d4>
  441ecc:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441ed0:	add	x1, x1, #0x87
  441ed4:	mov	w2, #0x5                   	// #5
  441ed8:	mov	x0, xzr
  441edc:	bl	404900 <dcgettext@plt>
  441ee0:	bl	440980 <argp_parse@@Base+0x90d4>
  441ee4:	cbz	w20, 441f00 <argp_parse@@Base+0xa654>
  441ee8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441eec:	add	x1, x1, #0x9f
  441ef0:	mov	w2, #0x5                   	// #5
  441ef4:	mov	x0, xzr
  441ef8:	bl	404900 <dcgettext@plt>
  441efc:	bl	440980 <argp_parse@@Base+0x90d4>
  441f00:	ldr	x20, [sp, #104]
  441f04:	cmp	w24, w25
  441f08:	b.eq	441f2c <argp_parse@@Base+0xa680>  // b.none
  441f0c:	cmp	w22, w26
  441f10:	b.eq	441f2c <argp_parse@@Base+0xa680>  // b.none
  441f14:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441f18:	add	x1, x1, #0xd1
  441f1c:	mov	w2, #0x5                   	// #5
  441f20:	mov	x0, xzr
  441f24:	bl	404900 <dcgettext@plt>
  441f28:	bl	440980 <argp_parse@@Base+0x90d4>
  441f2c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441f30:	add	x1, x1, #0xf8
  441f34:	mov	w2, #0x5                   	// #5
  441f38:	mov	x0, xzr
  441f3c:	bl	404900 <dcgettext@plt>
  441f40:	bl	440980 <argp_parse@@Base+0x90d4>
  441f44:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441f48:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441f4c:	add	x8, x8, #0x137
  441f50:	add	x9, x9, #0x124
  441f54:	cmp	x20, #0x0
  441f58:	csel	x1, x9, x8, ne  // ne = any
  441f5c:	mov	w2, #0x5                   	// #5
  441f60:	mov	x0, xzr
  441f64:	bl	404900 <dcgettext@plt>
  441f68:	mov	x1, x0
  441f6c:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441f70:	add	x0, x0, #0x119
  441f74:	bl	440980 <argp_parse@@Base+0x90d4>
  441f78:	b	440d9c <argp_parse@@Base+0x94f0>
  441f7c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  441f80:	sub	x10, x10, x9
  441f84:	cmp	x8, x10
  441f88:	b.lt	441fa0 <argp_parse@@Base+0xa6f4>  // b.tstop
  441f8c:	add	x10, x8, x9
  441f90:	mov	w11, #0x80000000            	// #-2147483648
  441f94:	add	x10, x10, x11
  441f98:	lsr	x10, x10, #32
  441f9c:	cbz	x10, 44216c <argp_parse@@Base+0xa8c0>
  441fa0:	add	w8, w9, w8
  441fa4:	stur	w8, [x29, #-164]
  441fa8:	ldrb	w8, [sp, #393]
  441fac:	cbz	w8, 440d9c <argp_parse@@Base+0x94f0>
  441fb0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  441fb4:	add	x1, x1, #0x78a
  441fb8:	mov	w2, #0x5                   	// #5
  441fbc:	mov	x0, xzr
  441fc0:	bl	404900 <dcgettext@plt>
  441fc4:	mov	x22, x0
  441fc8:	add	x0, sp, #0xb0
  441fcc:	sub	x1, x29, #0x78
  441fd0:	bl	4430f8 <argp_parse@@Base+0xb84c>
  441fd4:	ldr	x23, [sp, #184]
  441fd8:	ldr	w24, [sp, #192]
  441fdc:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  441fe0:	mov	x25, x0
  441fe4:	add	x2, x2, #0x148
  441fe8:	add	x0, sp, #0x2b0
  441fec:	sub	x3, x29, #0xb0
  441ff0:	mov	w1, #0x64                  	// #100
  441ff4:	mov	x4, xzr
  441ff8:	mov	w5, wzr
  441ffc:	bl	4573e8 <_obstack_memory_used@@Base+0x10898>
  442000:	cmp	w0, #0x63
  442004:	b.gt	442150 <argp_parse@@Base+0xa8a4>
  442008:	ldr	x8, [sp, #384]
  44200c:	cbz	x8, 442150 <argp_parse@@Base+0xa8a4>
  442010:	ldrsw	x28, [sp, #200]
  442014:	add	x8, sp, #0x2b0
  442018:	mov	x9, #0x6400000000          	// #429496729600
  44201c:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  442020:	add	x8, x8, w0, sxtw
  442024:	movk	x10, #0x91a2, lsl #16
  442028:	str	x8, [sp, #104]
  44202c:	sub	x8, x9, x0, lsl #32
  442030:	asr	x27, x8, #32
  442034:	mul	x8, x28, x10
  442038:	lsr	x8, x8, #32
  44203c:	add	w8, w8, w28
  442040:	asr	w9, w8, #11
  442044:	add	w26, w9, w8, lsr #31
  442048:	cmp	w26, #0x0
  44204c:	mov	w11, #0x2b                  	// #43
  442050:	cneg	w5, w26, mi  // mi = first
  442054:	cmp	w28, #0x0
  442058:	mov	w8, #0x2d                  	// #45
  44205c:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442060:	csel	w4, w8, w11, lt  // lt = tstop
  442064:	add	x3, x3, #0xf8e
  442068:	add	x0, sp, #0x78
  44206c:	mov	w1, #0x1                   	// #1
  442070:	mov	w2, #0x1b                  	// #27
  442074:	add	x20, sp, #0x78
  442078:	bl	403f60 <__sprintf_chk@plt>
  44207c:	mov	w8, #0xe10                 	// #3600
  442080:	msub	w9, w26, w8, w28
  442084:	cbz	w9, 442130 <argp_parse@@Base+0xa884>
  442088:	cmp	w9, #0x0
  44208c:	mov	w11, #0x8889                	// #34953
  442090:	cneg	w9, w9, mi  // mi = first
  442094:	movk	w11, #0x8888, lsl #16
  442098:	mov	w13, #0x81b5                	// #33205
  44209c:	and	w14, w9, #0xffff
  4420a0:	movk	w13, #0x1b4e, lsl #16
  4420a4:	umull	x11, w14, w11
  4420a8:	mov	w12, #0x3c                  	// #60
  4420ac:	umull	x13, w14, w13
  4420b0:	lsr	x14, x11, #37
  4420b4:	msub	w9, w14, w12, w9
  4420b8:	mov	w12, #0xcccd                	// #52429
  4420bc:	movk	w12, #0xcccc, lsl #16
  4420c0:	lsr	x13, x13, #38
  4420c4:	ubfx	x11, x11, #37, #8
  4420c8:	add	x8, x20, w0, sxtw
  4420cc:	add	w13, w13, #0x30
  4420d0:	umull	x11, w11, w12
  4420d4:	strb	w13, [x8, #1]
  4420d8:	lsr	x13, x11, #35
  4420dc:	mov	w11, #0xa                   	// #10
  4420e0:	msub	w13, w13, w11, w14
  4420e4:	mov	w10, #0x3a                  	// #58
  4420e8:	tst	w9, #0xffff
  4420ec:	orr	w13, w13, #0x30
  4420f0:	strb	w10, [x8]
  4420f4:	strb	w13, [x8, #2]
  4420f8:	b.eq	442128 <argp_parse@@Base+0xa87c>  // b.none
  4420fc:	strb	w10, [x8, #3]
  442100:	and	w10, w9, #0xff
  442104:	umull	x10, w10, w12
  442108:	lsr	x10, x10, #35
  44210c:	msub	w9, w10, w11, w9
  442110:	orr	w12, w10, #0x30
  442114:	orr	w10, w9, #0x30
  442118:	add	x9, x8, #0x6
  44211c:	strb	w12, [x8, #4]
  442120:	strb	w10, [x8, #5]
  442124:	b	44212c <argp_parse@@Base+0xa880>
  442128:	add	x9, x8, #0x3
  44212c:	strb	wzr, [x9]
  442130:	ldr	x0, [sp, #104]
  442134:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  442138:	add	x4, x4, #0x162
  44213c:	add	x5, sp, #0x78
  442140:	mov	w2, #0x1                   	// #1
  442144:	mov	x3, #0xffffffffffffffff    	// #-1
  442148:	mov	x1, x27
  44214c:	bl	4041d0 <__snprintf_chk@plt>
  442150:	add	x4, sp, #0x2b0
  442154:	mov	x0, x22
  442158:	mov	x1, x25
  44215c:	mov	x2, x23
  442160:	mov	w3, w24
  442164:	bl	440980 <argp_parse@@Base+0x90d4>
  442168:	b	440d9c <argp_parse@@Base+0x94f0>
  44216c:	add	w8, w9, w8
  442170:	mov	w9, #0xffffffff            	// #-1
  442174:	sub	x1, x29, #0xb0
  442178:	mov	x0, x21
  44217c:	stur	w8, [x29, #-164]
  442180:	stur	w9, [x29, #-144]
  442184:	bl	456818 <_obstack_memory_used@@Base+0xfcc8>
  442188:	ldrb	w8, [sp, #393]
  44218c:	cmn	x0, #0x1
  442190:	b.eq	442308 <argp_parse@@Base+0xaa5c>  // b.none
  442194:	mov	x24, x0
  442198:	cbz	w8, 4425d4 <argp_parse@@Base+0xad28>
  44219c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4421a0:	add	x1, x1, #0x7d9
  4421a4:	mov	w2, #0x5                   	// #5
  4421a8:	mov	x0, xzr
  4421ac:	bl	404900 <dcgettext@plt>
  4421b0:	mov	x25, x0
  4421b4:	add	x0, sp, #0xb0
  4421b8:	sub	x1, x29, #0x78
  4421bc:	bl	4430f8 <argp_parse@@Base+0xb84c>
  4421c0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4421c4:	mov	x26, x0
  4421c8:	add	x2, x2, #0x148
  4421cc:	add	x0, sp, #0x2b0
  4421d0:	sub	x3, x29, #0xb0
  4421d4:	mov	w1, #0x64                  	// #100
  4421d8:	mov	x4, xzr
  4421dc:	mov	w5, wzr
  4421e0:	bl	4573e8 <_obstack_memory_used@@Base+0x10898>
  4421e4:	cmp	w0, #0x63
  4421e8:	b.gt	442338 <argp_parse@@Base+0xaa8c>
  4421ec:	ldr	x8, [sp, #384]
  4421f0:	cbz	x8, 442338 <argp_parse@@Base+0xaa8c>
  4421f4:	ldrsw	x22, [sp, #200]
  4421f8:	add	x8, sp, #0x2b0
  4421fc:	mov	x9, #0x6400000000          	// #429496729600
  442200:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  442204:	movk	x10, #0x91a2, lsl #16
  442208:	add	x27, x8, w0, sxtw
  44220c:	sub	x8, x9, x0, lsl #32
  442210:	asr	x28, x8, #32
  442214:	mul	x8, x22, x10
  442218:	lsr	x8, x8, #32
  44221c:	add	w8, w8, w22
  442220:	asr	w9, w8, #11
  442224:	add	w23, w9, w8, lsr #31
  442228:	cmp	w23, #0x0
  44222c:	mov	w11, #0x2b                  	// #43
  442230:	cneg	w5, w23, mi  // mi = first
  442234:	cmp	w22, #0x0
  442238:	mov	w8, #0x2d                  	// #45
  44223c:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442240:	csel	w4, w8, w11, lt  // lt = tstop
  442244:	add	x3, x3, #0xf8e
  442248:	add	x0, sp, #0x78
  44224c:	mov	w1, #0x1                   	// #1
  442250:	mov	w2, #0x1b                  	// #27
  442254:	add	x20, sp, #0x78
  442258:	bl	403f60 <__sprintf_chk@plt>
  44225c:	mov	w8, #0xe10                 	// #3600
  442260:	msub	w9, w23, w8, w22
  442264:	cbz	w9, 442318 <argp_parse@@Base+0xaa6c>
  442268:	cmp	w9, #0x0
  44226c:	mov	w11, #0x8889                	// #34953
  442270:	cneg	w9, w9, mi  // mi = first
  442274:	movk	w11, #0x8888, lsl #16
  442278:	mov	w13, #0x81b5                	// #33205
  44227c:	and	w14, w9, #0xffff
  442280:	movk	w13, #0x1b4e, lsl #16
  442284:	umull	x11, w14, w11
  442288:	mov	w12, #0x3c                  	// #60
  44228c:	umull	x13, w14, w13
  442290:	lsr	x14, x11, #37
  442294:	msub	w9, w14, w12, w9
  442298:	mov	w12, #0xcccd                	// #52429
  44229c:	movk	w12, #0xcccc, lsl #16
  4422a0:	lsr	x13, x13, #38
  4422a4:	ubfx	x11, x11, #37, #8
  4422a8:	add	x8, x20, w0, sxtw
  4422ac:	add	w13, w13, #0x30
  4422b0:	umull	x11, w11, w12
  4422b4:	strb	w13, [x8, #1]
  4422b8:	lsr	x13, x11, #35
  4422bc:	mov	w11, #0xa                   	// #10
  4422c0:	msub	w13, w13, w11, w14
  4422c4:	mov	w10, #0x3a                  	// #58
  4422c8:	tst	w9, #0xffff
  4422cc:	orr	w13, w13, #0x30
  4422d0:	strb	w10, [x8]
  4422d4:	strb	w13, [x8, #2]
  4422d8:	b.eq	442310 <argp_parse@@Base+0xaa64>  // b.none
  4422dc:	strb	w10, [x8, #3]
  4422e0:	and	w10, w9, #0xff
  4422e4:	umull	x10, w10, w12
  4422e8:	lsr	x10, x10, #35
  4422ec:	msub	w9, w10, w11, w9
  4422f0:	orr	w12, w10, #0x30
  4422f4:	orr	w10, w9, #0x30
  4422f8:	add	x9, x8, #0x6
  4422fc:	strb	w12, [x8, #4]
  442300:	strb	w10, [x8, #5]
  442304:	b	442314 <argp_parse@@Base+0xaa68>
  442308:	cbnz	w8, 441fb0 <argp_parse@@Base+0xa704>
  44230c:	b	440d9c <argp_parse@@Base+0x94f0>
  442310:	add	x9, x8, #0x3
  442314:	strb	wzr, [x9]
  442318:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44231c:	add	x4, x4, #0x162
  442320:	add	x5, sp, #0x78
  442324:	mov	w2, #0x1                   	// #1
  442328:	mov	x3, #0xffffffffffffffff    	// #-1
  44232c:	mov	x0, x27
  442330:	mov	x1, x28
  442334:	bl	4041d0 <__snprintf_chk@plt>
  442338:	add	x2, sp, #0x2b0
  44233c:	mov	x0, x25
  442340:	mov	x1, x26
  442344:	bl	440980 <argp_parse@@Base+0x90d4>
  442348:	ldrb	w8, [sp, #393]
  44234c:	cbz	w8, 4425d4 <argp_parse@@Base+0xad28>
  442350:	ldp	x8, x9, [sp, #344]
  442354:	orr	x10, x9, x8
  442358:	cbnz	x10, 44240c <argp_parse@@Base+0xab60>
  44235c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442360:	add	x1, x1, #0x7f7
  442364:	mov	w2, #0x5                   	// #5
  442368:	mov	x0, xzr
  44236c:	bl	404900 <dcgettext@plt>
  442370:	ldursw	x8, [x29, #-156]
  442374:	mov	w10, #0x851f                	// #34079
  442378:	movk	w10, #0x51eb, lsl #16
  44237c:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  442380:	mul	x10, x8, x10
  442384:	lsr	x12, x10, #63
  442388:	asr	x10, x10, #37
  44238c:	add	x9, x9, #0x17e
  442390:	mov	w11, #0xffffffed            	// #-19
  442394:	add	w10, w10, w12
  442398:	mov	w12, #0x64                  	// #100
  44239c:	cmn	x8, #0x76d
  4423a0:	cinc	x3, x9, gt
  4423a4:	cmn	w8, #0x7cf
  4423a8:	msub	w8, w10, w12, w8
  4423ac:	add	w9, w10, #0x13
  4423b0:	sub	w10, w11, w10
  4423b4:	csel	w4, w10, w9, lt  // lt = tstop
  4423b8:	cmp	w8, #0x0
  4423bc:	mov	x25, x0
  4423c0:	cneg	w5, w8, mi  // mi = first
  4423c4:	add	x0, sp, #0x78
  4423c8:	mov	w1, #0x1                   	// #1
  4423cc:	mov	w2, #0xd                   	// #13
  4423d0:	bl	403f60 <__sprintf_chk@plt>
  4423d4:	ldp	w7, w8, [x29, #-164]
  4423d8:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4423dc:	add	x4, x4, #0x169
  4423e0:	add	x0, sp, #0x2b0
  4423e4:	add	w6, w8, #0x1
  4423e8:	add	x5, sp, #0x78
  4423ec:	mov	w1, #0x64                  	// #100
  4423f0:	mov	w2, #0x1                   	// #1
  4423f4:	mov	w3, #0x64                  	// #100
  4423f8:	bl	4041d0 <__snprintf_chk@plt>
  4423fc:	add	x1, sp, #0x2b0
  442400:	mov	x0, x25
  442404:	bl	440980 <argp_parse@@Base+0x90d4>
  442408:	ldp	x8, x9, [sp, #344]
  44240c:	cbz	x9, 442444 <argp_parse@@Base+0xab98>
  442410:	cbz	x8, 442444 <argp_parse@@Base+0xab98>
  442414:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442418:	add	x1, x1, #0x823
  44241c:	mov	w2, #0x5                   	// #5
  442420:	mov	x0, xzr
  442424:	bl	404900 <dcgettext@plt>
  442428:	mov	x25, x0
  44242c:	add	x0, sp, #0xb0
  442430:	sub	x1, x29, #0x78
  442434:	bl	4430f8 <argp_parse@@Base+0xb84c>
  442438:	mov	x1, x0
  44243c:	mov	x0, x25
  442440:	bl	440980 <argp_parse@@Base+0x90d4>
  442444:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442448:	add	x1, x1, #0x85c
  44244c:	mov	w2, #0x5                   	// #5
  442450:	mov	x0, xzr
  442454:	bl	404900 <dcgettext@plt>
  442458:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44245c:	mov	x25, x0
  442460:	add	x2, x2, #0x148
  442464:	add	x0, sp, #0x2b0
  442468:	sub	x3, x29, #0xb0
  44246c:	mov	w1, #0x64                  	// #100
  442470:	mov	x4, xzr
  442474:	mov	w5, wzr
  442478:	bl	4573e8 <_obstack_memory_used@@Base+0x10898>
  44247c:	cmp	w0, #0x63
  442480:	b.gt	4425c8 <argp_parse@@Base+0xad1c>
  442484:	ldr	x8, [sp, #384]
  442488:	cbz	x8, 4425c8 <argp_parse@@Base+0xad1c>
  44248c:	ldrsw	x22, [sp, #200]
  442490:	add	x8, sp, #0x2b0
  442494:	mov	x9, #0x6400000000          	// #429496729600
  442498:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  44249c:	movk	x10, #0x91a2, lsl #16
  4424a0:	add	x26, x8, w0, sxtw
  4424a4:	sub	x8, x9, x0, lsl #32
  4424a8:	asr	x27, x8, #32
  4424ac:	mul	x8, x22, x10
  4424b0:	lsr	x8, x8, #32
  4424b4:	add	w8, w8, w22
  4424b8:	asr	w9, w8, #11
  4424bc:	add	w23, w9, w8, lsr #31
  4424c0:	cmp	w23, #0x0
  4424c4:	mov	w11, #0x2b                  	// #43
  4424c8:	cneg	w5, w23, mi  // mi = first
  4424cc:	cmp	w22, #0x0
  4424d0:	mov	w8, #0x2d                  	// #45
  4424d4:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4424d8:	csel	w4, w8, w11, lt  // lt = tstop
  4424dc:	add	x3, x3, #0xf8e
  4424e0:	add	x0, sp, #0x78
  4424e4:	mov	w1, #0x1                   	// #1
  4424e8:	mov	w2, #0x1b                  	// #27
  4424ec:	add	x20, sp, #0x78
  4424f0:	bl	403f60 <__sprintf_chk@plt>
  4424f4:	mov	w8, #0xe10                 	// #3600
  4424f8:	msub	w9, w23, w8, w22
  4424fc:	cbz	w9, 4425a8 <argp_parse@@Base+0xacfc>
  442500:	cmp	w9, #0x0
  442504:	mov	w11, #0x8889                	// #34953
  442508:	cneg	w9, w9, mi  // mi = first
  44250c:	movk	w11, #0x8888, lsl #16
  442510:	mov	w13, #0x81b5                	// #33205
  442514:	and	w14, w9, #0xffff
  442518:	movk	w13, #0x1b4e, lsl #16
  44251c:	umull	x11, w14, w11
  442520:	mov	w12, #0x3c                  	// #60
  442524:	umull	x13, w14, w13
  442528:	lsr	x14, x11, #37
  44252c:	msub	w9, w14, w12, w9
  442530:	mov	w12, #0xcccd                	// #52429
  442534:	movk	w12, #0xcccc, lsl #16
  442538:	lsr	x13, x13, #38
  44253c:	ubfx	x11, x11, #37, #8
  442540:	add	x8, x20, w0, sxtw
  442544:	add	w13, w13, #0x30
  442548:	umull	x11, w11, w12
  44254c:	strb	w13, [x8, #1]
  442550:	lsr	x13, x11, #35
  442554:	mov	w11, #0xa                   	// #10
  442558:	msub	w13, w13, w11, w14
  44255c:	mov	w10, #0x3a                  	// #58
  442560:	tst	w9, #0xffff
  442564:	orr	w13, w13, #0x30
  442568:	strb	w10, [x8]
  44256c:	strb	w13, [x8, #2]
  442570:	b.eq	4425a0 <argp_parse@@Base+0xacf4>  // b.none
  442574:	strb	w10, [x8, #3]
  442578:	and	w10, w9, #0xff
  44257c:	umull	x10, w10, w12
  442580:	lsr	x10, x10, #35
  442584:	msub	w9, w10, w11, w9
  442588:	orr	w12, w10, #0x30
  44258c:	orr	w10, w9, #0x30
  442590:	add	x9, x8, #0x6
  442594:	strb	w12, [x8, #4]
  442598:	strb	w10, [x8, #5]
  44259c:	b	4425a4 <argp_parse@@Base+0xacf8>
  4425a0:	add	x9, x8, #0x3
  4425a4:	strb	wzr, [x9]
  4425a8:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4425ac:	add	x4, x4, #0x162
  4425b0:	add	x5, sp, #0x78
  4425b4:	mov	w2, #0x1                   	// #1
  4425b8:	mov	x3, #0xffffffffffffffff    	// #-1
  4425bc:	mov	x0, x26
  4425c0:	mov	x1, x27
  4425c4:	bl	4041d0 <__snprintf_chk@plt>
  4425c8:	add	x1, sp, #0x2b0
  4425cc:	mov	x0, x25
  4425d0:	bl	440980 <argp_parse@@Base+0x90d4>
  4425d4:	ldp	x9, x10, [sp, #280]
  4425d8:	ldr	x8, [sp, #296]
  4425dc:	orr	x9, x10, x9
  4425e0:	orr	x10, x9, x8
  4425e4:	cbz	x10, 442c38 <argp_parse@@Base+0xb38c>
  4425e8:	ldrb	w10, [sp, #393]
  4425ec:	cbz	w10, 442644 <argp_parse@@Base+0xad98>
  4425f0:	cbz	x9, 44261c <argp_parse@@Base+0xad70>
  4425f4:	ldur	w9, [x29, #-164]
  4425f8:	cmp	w9, #0xf
  4425fc:	b.eq	44261c <argp_parse@@Base+0xad70>  // b.none
  442600:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442604:	add	x1, x1, #0x876
  442608:	mov	w2, #0x5                   	// #5
  44260c:	mov	x0, xzr
  442610:	bl	404900 <dcgettext@plt>
  442614:	bl	440980 <argp_parse@@Base+0x90d4>
  442618:	ldr	x8, [sp, #296]
  44261c:	cbz	x8, 442644 <argp_parse@@Base+0xad98>
  442620:	ldur	w8, [x29, #-168]
  442624:	cmp	w8, #0xc
  442628:	b.eq	442644 <argp_parse@@Base+0xad98>  // b.none
  44262c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442630:	add	x1, x1, #0x8d7
  442634:	mov	w2, #0x5                   	// #5
  442638:	mov	x0, xzr
  44263c:	bl	404900 <dcgettext@plt>
  442640:	bl	440980 <argp_parse@@Base+0x90d4>
  442644:	ldr	x8, [sp, #280]
  442648:	tbnz	x8, #63, 442668 <argp_parse@@Base+0xadbc>
  44264c:	ldur	w9, [x29, #-156]
  442650:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  442654:	sub	x11, x10, x8
  442658:	sxtw	x10, w9
  44265c:	cmp	x11, x10
  442660:	b.ge	442680 <argp_parse@@Base+0xadd4>  // b.tcont
  442664:	b	442734 <argp_parse@@Base+0xae88>
  442668:	ldur	w9, [x29, #-156]
  44266c:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  442670:	sub	x11, x11, x8
  442674:	sxtw	x10, w9
  442678:	cmp	x11, x10
  44267c:	b.gt	442734 <argp_parse@@Base+0xae88>
  442680:	add	x10, x8, x10
  442684:	mov	w11, #0x80000000            	// #-2147483648
  442688:	add	x10, x10, x11
  44268c:	lsr	x10, x10, #32
  442690:	cbnz	x10, 442734 <argp_parse@@Base+0xae88>
  442694:	ldr	x10, [sp, #288]
  442698:	tbnz	x10, #63, 4426b8 <argp_parse@@Base+0xae0c>
  44269c:	ldur	w11, [x29, #-160]
  4426a0:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  4426a4:	sub	x13, x12, x10
  4426a8:	sxtw	x12, w11
  4426ac:	cmp	x13, x12
  4426b0:	b.ge	4426d0 <argp_parse@@Base+0xae24>  // b.tcont
  4426b4:	b	442734 <argp_parse@@Base+0xae88>
  4426b8:	ldur	w11, [x29, #-160]
  4426bc:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
  4426c0:	sub	x13, x13, x10
  4426c4:	sxtw	x12, w11
  4426c8:	cmp	x13, x12
  4426cc:	b.gt	442734 <argp_parse@@Base+0xae88>
  4426d0:	add	x12, x10, x12
  4426d4:	mov	w13, #0x80000000            	// #-2147483648
  4426d8:	add	x12, x12, x13
  4426dc:	lsr	x12, x12, #32
  4426e0:	cbnz	x12, 442734 <argp_parse@@Base+0xae88>
  4426e4:	ldr	x12, [sp, #296]
  4426e8:	tbnz	x12, #63, 442708 <argp_parse@@Base+0xae5c>
  4426ec:	ldur	w13, [x29, #-164]
  4426f0:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  4426f4:	sub	x15, x14, x12
  4426f8:	sxtw	x14, w13
  4426fc:	cmp	x15, x14
  442700:	b.ge	442720 <argp_parse@@Base+0xae74>  // b.tcont
  442704:	b	442734 <argp_parse@@Base+0xae88>
  442708:	ldur	w13, [x29, #-164]
  44270c:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
  442710:	sub	x15, x15, x12
  442714:	sxtw	x14, w13
  442718:	cmp	x15, x14
  44271c:	b.gt	442734 <argp_parse@@Base+0xae88>
  442720:	add	x14, x12, x14
  442724:	mov	w15, #0x80000000            	// #-2147483648
  442728:	add	x14, x14, x15
  44272c:	lsr	x14, x14, #32
  442730:	cbz	x14, 442764 <argp_parse@@Base+0xaeb8>
  442734:	ldrb	w8, [sp, #393]
  442738:	cbz	w8, 440d9c <argp_parse@@Base+0x94f0>
  44273c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442740:	add	x1, x1, #0x91e
  442744:	mov	w2, #0x5                   	// #5
  442748:	mov	x0, xzr
  44274c:	bl	404900 <dcgettext@plt>
  442750:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442754:	add	x1, x1, #0x92c
  442758:	mov	w2, #0x877                 	// #2167
  44275c:	bl	440980 <argp_parse@@Base+0x90d4>
  442760:	b	440d9c <argp_parse@@Base+0x94f0>
  442764:	add	w27, w9, w8
  442768:	add	w22, w11, w10
  44276c:	ldur	x8, [x29, #-240]
  442770:	ldur	w9, [x29, #-232]
  442774:	ldur	w10, [x29, #-208]
  442778:	add	w25, w13, w12
  44277c:	sub	x1, x29, #0xb0
  442780:	mov	x0, x21
  442784:	stp	w25, w22, [x29, #-164]
  442788:	stur	w9, [x29, #-168]
  44278c:	stur	x8, [x29, #-176]
  442790:	stur	w27, [x29, #-156]
  442794:	stur	w10, [x29, #-144]
  442798:	bl	456818 <_obstack_memory_used@@Base+0xfcc8>
  44279c:	ldrb	w8, [sp, #393]
  4427a0:	cmn	x0, #0x1
  4427a4:	b.eq	442934 <argp_parse@@Base+0xb088>  // b.none
  4427a8:	mov	x24, x0
  4427ac:	cbz	w8, 442c38 <argp_parse@@Base+0xb38c>
  4427b0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4427b4:	add	x1, x1, #0x97c
  4427b8:	mov	w2, #0x5                   	// #5
  4427bc:	mov	x0, xzr
  4427c0:	bl	404900 <dcgettext@plt>
  4427c4:	ldp	x1, x2, [sp, #280]
  4427c8:	ldr	x3, [sp, #296]
  4427cc:	bl	440980 <argp_parse@@Base+0x90d4>
  4427d0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4427d4:	add	x1, x1, #0x9b9
  4427d8:	mov	w2, #0x5                   	// #5
  4427dc:	mov	x0, xzr
  4427e0:	bl	404900 <dcgettext@plt>
  4427e4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4427e8:	mov	x26, x0
  4427ec:	add	x2, x2, #0x148
  4427f0:	add	x0, sp, #0x2b0
  4427f4:	sub	x3, x29, #0xb0
  4427f8:	mov	w1, #0x64                  	// #100
  4427fc:	mov	x4, xzr
  442800:	mov	w5, wzr
  442804:	bl	4573e8 <_obstack_memory_used@@Base+0x10898>
  442808:	cmp	w0, #0x63
  44280c:	b.gt	442ab8 <argp_parse@@Base+0xb20c>
  442810:	ldr	x8, [sp, #384]
  442814:	cbz	x8, 442ab8 <argp_parse@@Base+0xb20c>
  442818:	ldrsw	x23, [sp, #200]
  44281c:	add	x8, sp, #0x2b0
  442820:	mov	x9, #0x6400000000          	// #429496729600
  442824:	add	x8, x8, w0, sxtw
  442828:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  44282c:	str	x8, [sp, #88]
  442830:	sub	x8, x9, x0, lsl #32
  442834:	movk	x10, #0x91a2, lsl #16
  442838:	asr	x8, x8, #32
  44283c:	str	x8, [sp, #80]
  442840:	mul	x8, x23, x10
  442844:	lsr	x8, x8, #32
  442848:	add	w8, w8, w23
  44284c:	asr	w9, w8, #11
  442850:	add	w28, w9, w8, lsr #31
  442854:	cmp	w28, #0x0
  442858:	mov	w11, #0x2b                  	// #43
  44285c:	cneg	w5, w28, mi  // mi = first
  442860:	cmp	w23, #0x0
  442864:	mov	w8, #0x2d                  	// #45
  442868:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  44286c:	csel	w4, w8, w11, lt  // lt = tstop
  442870:	add	x3, x3, #0xf8e
  442874:	add	x0, sp, #0x78
  442878:	mov	w1, #0x1                   	// #1
  44287c:	mov	w2, #0x1b                  	// #27
  442880:	add	x20, sp, #0x78
  442884:	bl	403f60 <__sprintf_chk@plt>
  442888:	mov	w8, #0xe10                 	// #3600
  44288c:	msub	w9, w28, w8, w23
  442890:	cbz	w9, 442a9c <argp_parse@@Base+0xb1f0>
  442894:	cmp	w9, #0x0
  442898:	mov	w11, #0x8889                	// #34953
  44289c:	cneg	w9, w9, mi  // mi = first
  4428a0:	movk	w11, #0x8888, lsl #16
  4428a4:	mov	w13, #0x81b5                	// #33205
  4428a8:	and	w14, w9, #0xffff
  4428ac:	movk	w13, #0x1b4e, lsl #16
  4428b0:	umull	x11, w14, w11
  4428b4:	mov	w12, #0x3c                  	// #60
  4428b8:	umull	x13, w14, w13
  4428bc:	lsr	x14, x11, #37
  4428c0:	msub	w9, w14, w12, w9
  4428c4:	mov	w12, #0xcccd                	// #52429
  4428c8:	movk	w12, #0xcccc, lsl #16
  4428cc:	lsr	x13, x13, #38
  4428d0:	ubfx	x11, x11, #37, #8
  4428d4:	add	x8, x20, w0, sxtw
  4428d8:	add	w13, w13, #0x30
  4428dc:	umull	x11, w11, w12
  4428e0:	strb	w13, [x8, #1]
  4428e4:	lsr	x13, x11, #35
  4428e8:	mov	w11, #0xa                   	// #10
  4428ec:	msub	w13, w13, w11, w14
  4428f0:	mov	w10, #0x3a                  	// #58
  4428f4:	tst	w9, #0xffff
  4428f8:	orr	w13, w13, #0x30
  4428fc:	strb	w10, [x8]
  442900:	strb	w13, [x8, #2]
  442904:	b.eq	442a94 <argp_parse@@Base+0xb1e8>  // b.none
  442908:	strb	w10, [x8, #3]
  44290c:	and	w10, w9, #0xff
  442910:	umull	x10, w10, w12
  442914:	lsr	x10, x10, #35
  442918:	msub	w9, w10, w11, w9
  44291c:	orr	w12, w10, #0x30
  442920:	orr	w10, w9, #0x30
  442924:	add	x9, x8, #0x6
  442928:	strb	w12, [x8, #4]
  44292c:	strb	w10, [x8, #5]
  442930:	b	442a98 <argp_parse@@Base+0xb1ec>
  442934:	cbz	w8, 440d9c <argp_parse@@Base+0x94f0>
  442938:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  44293c:	add	x1, x1, #0x93d
  442940:	mov	w2, #0x5                   	// #5
  442944:	mov	x0, xzr
  442948:	bl	404900 <dcgettext@plt>
  44294c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  442950:	mov	x22, x0
  442954:	add	x2, x2, #0x148
  442958:	add	x0, sp, #0x2b0
  44295c:	sub	x3, x29, #0xb0
  442960:	mov	w1, #0x64                  	// #100
  442964:	mov	x4, xzr
  442968:	mov	w5, wzr
  44296c:	bl	4573e8 <_obstack_memory_used@@Base+0x10898>
  442970:	cmp	w0, #0x63
  442974:	b.gt	4430e8 <argp_parse@@Base+0xb83c>
  442978:	ldr	x8, [sp, #384]
  44297c:	cbz	x8, 4430e8 <argp_parse@@Base+0xb83c>
  442980:	ldrsw	x25, [sp, #200]
  442984:	add	x8, sp, #0x2b0
  442988:	mov	x9, #0x6400000000          	// #429496729600
  44298c:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  442990:	movk	x10, #0x91a2, lsl #16
  442994:	add	x23, x8, w0, sxtw
  442998:	sub	x8, x9, x0, lsl #32
  44299c:	asr	x24, x8, #32
  4429a0:	mul	x8, x25, x10
  4429a4:	lsr	x8, x8, #32
  4429a8:	add	w8, w8, w25
  4429ac:	asr	w9, w8, #11
  4429b0:	add	w26, w9, w8, lsr #31
  4429b4:	cmp	w26, #0x0
  4429b8:	mov	w11, #0x2b                  	// #43
  4429bc:	cneg	w5, w26, mi  // mi = first
  4429c0:	cmp	w25, #0x0
  4429c4:	mov	w8, #0x2d                  	// #45
  4429c8:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4429cc:	csel	w4, w8, w11, lt  // lt = tstop
  4429d0:	add	x3, x3, #0xf8e
  4429d4:	add	x0, sp, #0x78
  4429d8:	mov	w1, #0x1                   	// #1
  4429dc:	mov	w2, #0x1b                  	// #27
  4429e0:	add	x20, sp, #0x78
  4429e4:	bl	403f60 <__sprintf_chk@plt>
  4429e8:	mov	w8, #0xe10                 	// #3600
  4429ec:	msub	w9, w26, w8, w25
  4429f0:	cbz	w9, 4430c8 <argp_parse@@Base+0xb81c>
  4429f4:	cmp	w9, #0x0
  4429f8:	mov	w11, #0x8889                	// #34953
  4429fc:	cneg	w9, w9, mi  // mi = first
  442a00:	movk	w11, #0x8888, lsl #16
  442a04:	mov	w13, #0x81b5                	// #33205
  442a08:	and	w14, w9, #0xffff
  442a0c:	movk	w13, #0x1b4e, lsl #16
  442a10:	umull	x11, w14, w11
  442a14:	mov	w12, #0x3c                  	// #60
  442a18:	umull	x13, w14, w13
  442a1c:	lsr	x14, x11, #37
  442a20:	msub	w9, w14, w12, w9
  442a24:	mov	w12, #0xcccd                	// #52429
  442a28:	movk	w12, #0xcccc, lsl #16
  442a2c:	lsr	x13, x13, #38
  442a30:	ubfx	x11, x11, #37, #8
  442a34:	add	x8, x20, w0, sxtw
  442a38:	add	w13, w13, #0x30
  442a3c:	umull	x11, w11, w12
  442a40:	strb	w13, [x8, #1]
  442a44:	lsr	x13, x11, #35
  442a48:	mov	w11, #0xa                   	// #10
  442a4c:	msub	w13, w13, w11, w14
  442a50:	mov	w10, #0x3a                  	// #58
  442a54:	tst	w9, #0xffff
  442a58:	orr	w13, w13, #0x30
  442a5c:	strb	w10, [x8]
  442a60:	strb	w13, [x8, #2]
  442a64:	b.eq	4430c0 <argp_parse@@Base+0xb814>  // b.none
  442a68:	strb	w10, [x8, #3]
  442a6c:	and	w10, w9, #0xff
  442a70:	umull	x10, w10, w12
  442a74:	lsr	x10, x10, #35
  442a78:	msub	w9, w10, w11, w9
  442a7c:	orr	w12, w10, #0x30
  442a80:	orr	w10, w9, #0x30
  442a84:	add	x9, x8, #0x6
  442a88:	strb	w12, [x8, #4]
  442a8c:	strb	w10, [x8, #5]
  442a90:	b	4430c4 <argp_parse@@Base+0xb818>
  442a94:	add	x9, x8, #0x3
  442a98:	strb	wzr, [x9]
  442a9c:	ldp	x1, x0, [sp, #80]
  442aa0:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  442aa4:	add	x4, x4, #0x162
  442aa8:	add	x5, sp, #0x78
  442aac:	mov	w2, #0x1                   	// #1
  442ab0:	mov	x3, #0xffffffffffffffff    	// #-1
  442ab4:	bl	4041d0 <__snprintf_chk@plt>
  442ab8:	add	x1, sp, #0x2b0
  442abc:	mov	x0, x26
  442ac0:	bl	440980 <argp_parse@@Base+0x90d4>
  442ac4:	ldur	w8, [x29, #-208]
  442ac8:	cmn	w8, #0x1
  442acc:	b.eq	442af4 <argp_parse@@Base+0xb248>  // b.none
  442ad0:	ldur	w9, [x29, #-144]
  442ad4:	cmp	w9, w8
  442ad8:	b.eq	442af4 <argp_parse@@Base+0xb248>  // b.none
  442adc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442ae0:	add	x1, x1, #0x9d3
  442ae4:	mov	w2, #0x5                   	// #5
  442ae8:	mov	x0, xzr
  442aec:	bl	404900 <dcgettext@plt>
  442af0:	bl	440980 <argp_parse@@Base+0x90d4>
  442af4:	ldr	x8, [sp, #296]
  442af8:	cbnz	x8, 442c38 <argp_parse@@Base+0xb38c>
  442afc:	ldur	w8, [x29, #-164]
  442b00:	cmp	w8, w25
  442b04:	b.ne	442b1c <argp_parse@@Base+0xb270>  // b.any
  442b08:	ldr	x8, [sp, #288]
  442b0c:	cbnz	x8, 442c38 <argp_parse@@Base+0xb38c>
  442b10:	ldur	w8, [x29, #-160]
  442b14:	cmp	w8, w22
  442b18:	b.eq	442c38 <argp_parse@@Base+0xb38c>  // b.none
  442b1c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442b20:	add	x1, x1, #0xa10
  442b24:	mov	w2, #0x5                   	// #5
  442b28:	mov	x0, xzr
  442b2c:	bl	404900 <dcgettext@plt>
  442b30:	bl	440980 <argp_parse@@Base+0x90d4>
  442b34:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442b38:	add	x1, x1, #0xa4b
  442b3c:	mov	w2, #0x5                   	// #5
  442b40:	mov	x0, xzr
  442b44:	bl	404900 <dcgettext@plt>
  442b48:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  442b4c:	mov	w23, #0x851f                	// #34079
  442b50:	cmn	w27, #0x76d
  442b54:	add	x8, x8, #0x17e
  442b58:	movk	w23, #0x51eb, lsl #16
  442b5c:	cinc	x3, x8, gt
  442b60:	smull	x8, w27, w23
  442b64:	lsr	x9, x8, #63
  442b68:	asr	x8, x8, #37
  442b6c:	mov	w28, #0xffffffed            	// #-19
  442b70:	mov	w20, #0x64                  	// #100
  442b74:	add	w8, w8, w9
  442b78:	cmn	w27, #0x7cf
  442b7c:	add	w9, w8, #0x13
  442b80:	msub	w10, w8, w20, w27
  442b84:	sub	w8, w28, w8
  442b88:	csel	w4, w8, w9, lt  // lt = tstop
  442b8c:	cmp	w10, #0x0
  442b90:	mov	x26, x0
  442b94:	cneg	w5, w10, mi  // mi = first
  442b98:	add	x0, sp, #0x78
  442b9c:	mov	w1, #0x1                   	// #1
  442ba0:	mov	w2, #0xd                   	// #13
  442ba4:	bl	403f60 <__sprintf_chk@plt>
  442ba8:	add	w2, w22, #0x1
  442bac:	add	x1, sp, #0x78
  442bb0:	mov	x0, x26
  442bb4:	mov	w3, w25
  442bb8:	bl	440980 <argp_parse@@Base+0x90d4>
  442bbc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442bc0:	add	x1, x1, #0xa6e
  442bc4:	mov	w2, #0x5                   	// #5
  442bc8:	mov	x0, xzr
  442bcc:	bl	404900 <dcgettext@plt>
  442bd0:	ldursw	x8, [x29, #-156]
  442bd4:	adrp	x10, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  442bd8:	add	x10, x10, #0x17e
  442bdc:	mov	x25, x0
  442be0:	cmn	x8, #0x76d
  442be4:	mul	x9, x8, x23
  442be8:	cinc	x3, x10, gt
  442bec:	lsr	x10, x9, #63
  442bf0:	asr	x9, x9, #37
  442bf4:	add	w9, w9, w10
  442bf8:	cmn	w8, #0x7cf
  442bfc:	add	w10, w9, #0x13
  442c00:	sub	w11, w28, w9
  442c04:	msub	w8, w9, w20, w8
  442c08:	csel	w4, w11, w10, lt  // lt = tstop
  442c0c:	cmp	w8, #0x0
  442c10:	cneg	w5, w8, mi  // mi = first
  442c14:	add	x0, sp, #0x78
  442c18:	mov	w1, #0x1                   	// #1
  442c1c:	mov	w2, #0xd                   	// #13
  442c20:	bl	403f60 <__sprintf_chk@plt>
  442c24:	ldp	w3, w8, [x29, #-164]
  442c28:	add	x1, sp, #0x78
  442c2c:	mov	x0, x25
  442c30:	add	w2, w8, #0x1
  442c34:	bl	440980 <argp_parse@@Base+0x90d4>
  442c38:	ldr	x8, [sp, #384]
  442c3c:	cbz	x8, 442cd8 <argp_parse@@Base+0xb42c>
  442c40:	ldur	x9, [x29, #-136]
  442c44:	ldrsw	x10, [sp, #200]
  442c48:	tbnz	x9, #63, 442c60 <argp_parse@@Base+0xb3b4>
  442c4c:	orr	x8, x9, #0x8000000000000000
  442c50:	cmp	x8, x10
  442c54:	b.le	442c70 <argp_parse@@Base+0xb3c4>
  442c58:	mov	w8, #0x1                   	// #1
  442c5c:	b	442c74 <argp_parse@@Base+0xb3c8>
  442c60:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  442c64:	add	x8, x9, x8
  442c68:	cmp	x8, x10
  442c6c:	b.lt	442c58 <argp_parse@@Base+0xb3ac>  // b.tstop
  442c70:	mov	w8, wzr
  442c74:	subs	x9, x10, x9
  442c78:	b.mi	442c90 <argp_parse@@Base+0xb3e4>  // b.first
  442c7c:	orr	x10, x9, #0x8000000000000000
  442c80:	cmp	x24, x10
  442c84:	b.ge	442ca0 <argp_parse@@Base+0xb3f4>  // b.tcont
  442c88:	mov	w10, #0x1                   	// #1
  442c8c:	b	442ca4 <argp_parse@@Base+0xb3f8>
  442c90:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  442c94:	add	x10, x9, x10
  442c98:	cmp	x10, x24
  442c9c:	b.lt	442c88 <argp_parse@@Base+0xb3dc>  // b.tstop
  442ca0:	mov	w10, wzr
  442ca4:	orr	w8, w10, w8
  442ca8:	cbz	w8, 442cd4 <argp_parse@@Base+0xb428>
  442cac:	ldrb	w8, [sp, #393]
  442cb0:	cbz	w8, 440d9c <argp_parse@@Base+0x94f0>
  442cb4:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442cb8:	add	x1, x1, #0xa91
  442cbc:	mov	w2, #0x5                   	// #5
  442cc0:	mov	x0, xzr
  442cc4:	bl	404900 <dcgettext@plt>
  442cc8:	ldr	w1, [sp, #200]
  442ccc:	bl	440980 <argp_parse@@Base+0x90d4>
  442cd0:	b	440d9c <argp_parse@@Base+0x94f0>
  442cd4:	sub	x24, x24, x9
  442cd8:	ldrb	w8, [sp, #393]
  442cdc:	cbz	w8, 442e74 <argp_parse@@Base+0xb5c8>
  442ce0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442ce4:	add	x1, x1, #0xabc
  442ce8:	mov	w2, #0x5                   	// #5
  442cec:	mov	x0, xzr
  442cf0:	bl	404900 <dcgettext@plt>
  442cf4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  442cf8:	mov	x25, x0
  442cfc:	add	x2, x2, #0x148
  442d00:	add	x0, sp, #0x2b0
  442d04:	sub	x3, x29, #0xb0
  442d08:	mov	w1, #0x64                  	// #100
  442d0c:	mov	x4, xzr
  442d10:	mov	w5, wzr
  442d14:	bl	4573e8 <_obstack_memory_used@@Base+0x10898>
  442d18:	cmp	w0, #0x63
  442d1c:	b.gt	442e64 <argp_parse@@Base+0xb5b8>
  442d20:	ldr	x8, [sp, #384]
  442d24:	cbz	x8, 442e64 <argp_parse@@Base+0xb5b8>
  442d28:	ldrsw	x22, [sp, #200]
  442d2c:	add	x8, sp, #0x2b0
  442d30:	mov	x9, #0x6400000000          	// #429496729600
  442d34:	mov	x10, #0xffffffffffffb3c5    	// #-19515
  442d38:	movk	x10, #0x91a2, lsl #16
  442d3c:	add	x26, x8, w0, sxtw
  442d40:	sub	x8, x9, x0, lsl #32
  442d44:	asr	x27, x8, #32
  442d48:	mul	x8, x22, x10
  442d4c:	lsr	x8, x8, #32
  442d50:	add	w8, w8, w22
  442d54:	asr	w9, w8, #11
  442d58:	add	w23, w9, w8, lsr #31
  442d5c:	cmp	w23, #0x0
  442d60:	mov	w11, #0x2b                  	// #43
  442d64:	cneg	w5, w23, mi  // mi = first
  442d68:	cmp	w22, #0x0
  442d6c:	mov	w8, #0x2d                  	// #45
  442d70:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442d74:	csel	w4, w8, w11, lt  // lt = tstop
  442d78:	add	x3, x3, #0xf8e
  442d7c:	add	x0, sp, #0x78
  442d80:	mov	w1, #0x1                   	// #1
  442d84:	mov	w2, #0x1b                  	// #27
  442d88:	add	x20, sp, #0x78
  442d8c:	bl	403f60 <__sprintf_chk@plt>
  442d90:	mov	w8, #0xe10                 	// #3600
  442d94:	msub	w9, w23, w8, w22
  442d98:	cbz	w9, 442e44 <argp_parse@@Base+0xb598>
  442d9c:	cmp	w9, #0x0
  442da0:	mov	w11, #0x8889                	// #34953
  442da4:	cneg	w9, w9, mi  // mi = first
  442da8:	movk	w11, #0x8888, lsl #16
  442dac:	mov	w13, #0x81b5                	// #33205
  442db0:	and	w14, w9, #0xffff
  442db4:	movk	w13, #0x1b4e, lsl #16
  442db8:	umull	x11, w14, w11
  442dbc:	mov	w12, #0x3c                  	// #60
  442dc0:	umull	x13, w14, w13
  442dc4:	lsr	x14, x11, #37
  442dc8:	msub	w9, w14, w12, w9
  442dcc:	mov	w12, #0xcccd                	// #52429
  442dd0:	movk	w12, #0xcccc, lsl #16
  442dd4:	lsr	x13, x13, #38
  442dd8:	ubfx	x11, x11, #37, #8
  442ddc:	add	x8, x20, w0, sxtw
  442de0:	add	w13, w13, #0x30
  442de4:	umull	x11, w11, w12
  442de8:	strb	w13, [x8, #1]
  442dec:	lsr	x13, x11, #35
  442df0:	mov	w11, #0xa                   	// #10
  442df4:	msub	w13, w13, w11, w14
  442df8:	mov	w10, #0x3a                  	// #58
  442dfc:	tst	w9, #0xffff
  442e00:	orr	w13, w13, #0x30
  442e04:	strb	w10, [x8]
  442e08:	strb	w13, [x8, #2]
  442e0c:	b.eq	442e3c <argp_parse@@Base+0xb590>  // b.none
  442e10:	strb	w10, [x8, #3]
  442e14:	and	w10, w9, #0xff
  442e18:	umull	x10, w10, w12
  442e1c:	lsr	x10, x10, #35
  442e20:	msub	w9, w10, w11, w9
  442e24:	orr	w12, w10, #0x30
  442e28:	orr	w10, w9, #0x30
  442e2c:	add	x9, x8, #0x6
  442e30:	strb	w12, [x8, #4]
  442e34:	strb	w10, [x8, #5]
  442e38:	b	442e40 <argp_parse@@Base+0xb594>
  442e3c:	add	x9, x8, #0x3
  442e40:	strb	wzr, [x9]
  442e44:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  442e48:	add	x4, x4, #0x162
  442e4c:	add	x5, sp, #0x78
  442e50:	mov	w2, #0x1                   	// #1
  442e54:	mov	x3, #0xffffffffffffffff    	// #-1
  442e58:	mov	x0, x26
  442e5c:	mov	x1, x27
  442e60:	bl	4041d0 <__snprintf_chk@plt>
  442e64:	add	x1, sp, #0x2b0
  442e68:	mov	x0, x25
  442e6c:	mov	x2, x24
  442e70:	bl	440980 <argp_parse@@Base+0x90d4>
  442e74:	ldr	x11, [sp, #272]
  442e78:	ldr	x8, [sp, #304]
  442e7c:	ldrsw	x9, [sp, #328]
  442e80:	tbnz	x8, #63, 442eb8 <argp_parse@@Base+0xb60c>
  442e84:	mov	x10, #0x5e6f                	// #24175
  442e88:	movk	x10, #0x3c4d, lsl #16
  442e8c:	movk	x10, #0x1a2b, lsl #32
  442e90:	movk	x10, #0x9, lsl #48
  442e94:	cmp	x8, x10
  442e98:	b.gt	442fe8 <argp_parse@@Base+0xb73c>
  442e9c:	mov	w10, #0xe10                 	// #3600
  442ea0:	mul	x12, x8, x10
  442ea4:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  442ea8:	sub	x10, x10, x12
  442eac:	cmp	x10, x24
  442eb0:	b.ge	442ee8 <argp_parse@@Base+0xb63c>  // b.tcont
  442eb4:	b	442fe8 <argp_parse@@Base+0xb73c>
  442eb8:	mov	x10, #0xa191                	// #41361
  442ebc:	movk	x10, #0xc3b2, lsl #16
  442ec0:	movk	x10, #0xe5d4, lsl #32
  442ec4:	movk	x10, #0xfff6, lsl #48
  442ec8:	cmp	x8, x10
  442ecc:	b.lt	442fe8 <argp_parse@@Base+0xb73c>  // b.tstop
  442ed0:	mov	w10, #0xe10                 	// #3600
  442ed4:	mul	x12, x8, x10
  442ed8:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  442edc:	sub	x10, x10, x12
  442ee0:	cmp	x24, x10
  442ee4:	b.lt	442fe8 <argp_parse@@Base+0xb73c>  // b.tstop
  442ee8:	ldr	x10, [sp, #312]
  442eec:	add	x13, x12, x24
  442ef0:	tbnz	x10, #63, 442f20 <argp_parse@@Base+0xb674>
  442ef4:	mov	x12, #0x2222222222222222    	// #2459565876494606882
  442ef8:	movk	x12, #0x222, lsl #48
  442efc:	cmp	x10, x12
  442f00:	b.gt	442fe8 <argp_parse@@Base+0xb73c>
  442f04:	mov	w12, #0x3c                  	// #60
  442f08:	mul	x14, x10, x12
  442f0c:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  442f10:	sub	x12, x12, x14
  442f14:	cmp	x12, x13
  442f18:	b.ge	442f4c <argp_parse@@Base+0xb6a0>  // b.tcont
  442f1c:	b	442fe8 <argp_parse@@Base+0xb73c>
  442f20:	mov	x12, #0xdddddddddddddddd    	// #-2459565876494606883
  442f24:	movk	x12, #0xddde
  442f28:	movk	x12, #0xfddd, lsl #48
  442f2c:	cmp	x10, x12
  442f30:	b.lt	442fe8 <argp_parse@@Base+0xb73c>  // b.tstop
  442f34:	mov	w12, #0x3c                  	// #60
  442f38:	mul	x14, x10, x12
  442f3c:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  442f40:	sub	x12, x12, x14
  442f44:	cmp	x13, x12
  442f48:	b.lt	442fe8 <argp_parse@@Base+0xb73c>  // b.tstop
  442f4c:	ldr	x12, [sp, #320]
  442f50:	add	x13, x14, x13
  442f54:	tbnz	x12, #63, 442f6c <argp_parse@@Base+0xb6c0>
  442f58:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  442f5c:	sub	x14, x14, x12
  442f60:	cmp	x14, x13
  442f64:	b.ge	442f7c <argp_parse@@Base+0xb6d0>  // b.tcont
  442f68:	b	442fe8 <argp_parse@@Base+0xb73c>
  442f6c:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
  442f70:	sub	x14, x14, x12
  442f74:	cmp	x13, x14
  442f78:	b.lt	442fe8 <argp_parse@@Base+0xb73c>  // b.tstop
  442f7c:	mov	x15, #0x94b3                	// #38067
  442f80:	movk	x15, #0x26d6, lsl #16
  442f84:	movk	x15, #0xbe8, lsl #32
  442f88:	add	x14, x11, x9
  442f8c:	movk	x15, #0x112e, lsl #48
  442f90:	smulh	x16, x14, x15
  442f94:	mov	w11, #0xca00                	// #51712
  442f98:	asr	x17, x16, #26
  442f9c:	movk	w11, #0x3b9a, lsl #16
  442fa0:	add	x16, x17, x16, lsr #63
  442fa4:	msub	x16, x16, x11, x14
  442fa8:	add	x16, x16, x11
  442fac:	smulh	x17, x16, x15
  442fb0:	asr	x18, x17, #26
  442fb4:	add	x17, x18, x17, lsr #63
  442fb8:	msub	x11, x17, x11, x16
  442fbc:	sub	x14, x14, x11
  442fc0:	smulh	x14, x14, x15
  442fc4:	asr	x15, x14, #26
  442fc8:	add	x15, x15, x14, lsr #63
  442fcc:	add	x13, x12, x13
  442fd0:	sxtw	x14, w15
  442fd4:	tbnz	w15, #31, 442ffc <argp_parse@@Base+0xb750>
  442fd8:	mov	x15, #0x7fffffffffffffff    	// #9223372036854775807
  442fdc:	sub	x15, x15, x14
  442fe0:	cmp	x15, x13
  442fe4:	b.ge	44300c <argp_parse@@Base+0xb760>  // b.tcont
  442fe8:	ldrb	w8, [sp, #393]
  442fec:	cbz	w8, 440d9c <argp_parse@@Base+0x94f0>
  442ff0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  442ff4:	add	x1, x1, #0xad6
  442ff8:	b	441528 <argp_parse@@Base+0x9c7c>
  442ffc:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
  443000:	sub	x15, x15, x14
  443004:	cmp	x13, x15
  443008:	b.lt	442fe8 <argp_parse@@Base+0xb73c>  // b.tstop
  44300c:	add	x24, x13, x14
  443010:	ldr	x13, [sp, #96]
  443014:	stp	x24, x11, [x13]
  443018:	ldrb	w11, [sp, #393]
  44301c:	cbz	w11, 4430b8 <argp_parse@@Base+0xb80c>
  443020:	orr	x8, x8, x9
  443024:	orr	x8, x8, x10
  443028:	orr	x8, x8, x12
  44302c:	cbz	x8, 4430b8 <argp_parse@@Base+0xb80c>
  443030:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  443034:	add	x1, x1, #0xb06
  443038:	mov	w2, #0x5                   	// #5
  44303c:	mov	x0, xzr
  443040:	bl	404900 <dcgettext@plt>
  443044:	ldp	x1, x2, [sp, #304]
  443048:	ldr	x3, [sp, #320]
  44304c:	ldr	w4, [sp, #328]
  443050:	bl	440980 <argp_parse@@Base+0x90d4>
  443054:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  443058:	add	x1, x1, #0xb4f
  44305c:	mov	w2, #0x5                   	// #5
  443060:	mov	x0, xzr
  443064:	bl	404900 <dcgettext@plt>
  443068:	mov	x1, x24
  44306c:	bl	440980 <argp_parse@@Base+0x90d4>
  443070:	ldur	w8, [x29, #-144]
  443074:	cmn	w8, #0x1
  443078:	b.eq	4430b8 <argp_parse@@Base+0xb80c>  // b.none
  44307c:	ldr	x1, [sp, #96]
  443080:	add	x2, sp, #0x78
  443084:	mov	x0, x21
  443088:	bl	45643c <_obstack_memory_used@@Base+0xf8ec>
  44308c:	cbz	x0, 4430b8 <argp_parse@@Base+0xb80c>
  443090:	ldur	w8, [x29, #-144]
  443094:	ldr	w9, [sp, #152]
  443098:	cmp	w8, w9
  44309c:	b.eq	4430b8 <argp_parse@@Base+0xb80c>  // b.none
  4430a0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4430a4:	add	x1, x1, #0xb71
  4430a8:	mov	w2, #0x5                   	// #5
  4430ac:	mov	x0, xzr
  4430b0:	bl	404900 <dcgettext@plt>
  4430b4:	bl	440980 <argp_parse@@Base+0x90d4>
  4430b8:	ldr	x20, [sp, #96]
  4430bc:	b	440e40 <argp_parse@@Base+0x9594>
  4430c0:	add	x9, x8, #0x3
  4430c4:	strb	wzr, [x9]
  4430c8:	adrp	x4, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4430cc:	add	x4, x4, #0x162
  4430d0:	add	x5, sp, #0x78
  4430d4:	mov	w2, #0x1                   	// #1
  4430d8:	mov	x3, #0xffffffffffffffff    	// #-1
  4430dc:	mov	x0, x23
  4430e0:	mov	x1, x24
  4430e4:	bl	4041d0 <__snprintf_chk@plt>
  4430e8:	add	x1, sp, #0x2b0
  4430ec:	mov	x0, x22
  4430f0:	bl	440980 <argp_parse@@Base+0x90d4>
  4430f4:	b	440d9c <argp_parse@@Base+0x94f0>
  4430f8:	stp	x29, x30, [sp, #-32]!
  4430fc:	stp	x20, x19, [sp, #16]
  443100:	ldrb	w8, [x0, #224]
  443104:	mov	x20, x0
  443108:	mov	x19, x1
  44310c:	mov	x29, sp
  443110:	cbz	w8, 443140 <argp_parse@@Base+0xb894>
  443114:	ldr	x5, [x20, #8]
  443118:	add	x8, x5, #0x1
  44311c:	cmp	x8, #0xd
  443120:	b.hi	443154 <argp_parse@@Base+0xb8a8>  // b.pmore
  443124:	adrp	x10, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  443128:	mov	w9, #0xb                   	// #11
  44312c:	add	x10, x10, #0x380
  443130:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  443134:	madd	x5, x8, x9, x10
  443138:	add	x4, x4, #0x7a4
  44313c:	b	44315c <argp_parse@@Base+0xb8b0>
  443140:	mov	w0, wzr
  443144:	strb	wzr, [x19]
  443148:	ldr	w9, [x20, #16]
  44314c:	tbz	w9, #31, 443178 <argp_parse@@Base+0xb8cc>
  443150:	b	4431c4 <argp_parse@@Base+0xb918>
  443154:	adrp	x4, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  443158:	add	x4, x4, #0xce6
  44315c:	mov	w1, #0x64                  	// #100
  443160:	mov	w2, #0x1                   	// #1
  443164:	mov	x3, #0xffffffffffffffff    	// #-1
  443168:	mov	x0, x19
  44316c:	bl	4041d0 <__snprintf_chk@plt>
  443170:	ldr	w9, [x20, #16]
  443174:	tbnz	w9, #31, 4431c4 <argp_parse@@Base+0xb918>
  443178:	cmp	w0, #0x63
  44317c:	b.hi	4431c4 <argp_parse@@Base+0xb918>  // b.pmore
  443180:	cmp	w9, #0x6
  443184:	b.gt	4431c4 <argp_parse@@Base+0xb918>
  443188:	mov	w10, #0x64                  	// #100
  44318c:	adrp	x11, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  443190:	adrp	x12, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  443194:	add	x8, x19, w0, uxtw
  443198:	cmp	w0, #0x0
  44319c:	add	x11, x11, #0x7a3
  4431a0:	add	x12, x12, #0x41a
  4431a4:	sub	w10, w10, w0
  4431a8:	cinc	x4, x11, eq  // eq = none
  4431ac:	sxtw	x1, w10
  4431b0:	add	x5, x12, x9, lsl #2
  4431b4:	mov	w2, #0x1                   	// #1
  4431b8:	mov	x3, #0xffffffffffffffff    	// #-1
  4431bc:	mov	x0, x8
  4431c0:	bl	4041d0 <__snprintf_chk@plt>
  4431c4:	mov	x0, x19
  4431c8:	ldp	x20, x19, [sp, #16]
  4431cc:	ldp	x29, x30, [sp], #32
  4431d0:	ret
  4431d4:	stp	x29, x30, [sp, #-32]!
  4431d8:	stp	x20, x19, [sp, #16]
  4431dc:	mov	x20, x1
  4431e0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4431e4:	mov	x19, x0
  4431e8:	add	x1, x1, #0xe13
  4431ec:	mov	x0, x20
  4431f0:	mov	x29, sp
  4431f4:	bl	404660 <strcmp@plt>
  4431f8:	cbz	w0, 44326c <argp_parse@@Base+0xb9c0>
  4431fc:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  443200:	add	x1, x1, #0xe17
  443204:	mov	x0, x20
  443208:	bl	404660 <strcmp@plt>
  44320c:	cbz	w0, 443278 <argp_parse@@Base+0xb9cc>
  443210:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x194b0>
  443214:	add	x1, x1, #0xefc
  443218:	mov	x0, x20
  44321c:	bl	404660 <strcmp@plt>
  443220:	cbz	w0, 443284 <argp_parse@@Base+0xb9d8>
  443224:	ldr	x1, [x19, #232]!
  443228:	cbz	x1, 443240 <argp_parse@@Base+0xb994>
  44322c:	mov	x0, x20
  443230:	bl	404660 <strcmp@plt>
  443234:	cbz	w0, 44328c <argp_parse@@Base+0xb9e0>
  443238:	ldr	x1, [x19, #16]!
  44323c:	cbnz	x1, 44322c <argp_parse@@Base+0xb980>
  443240:	adrp	x19, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  443244:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  443248:	add	x19, x19, #0x80
  44324c:	add	x1, x1, #0xe1a
  443250:	mov	x0, x20
  443254:	bl	404660 <strcmp@plt>
  443258:	cbz	w0, 44328c <argp_parse@@Base+0xb9e0>
  44325c:	ldr	x1, [x19, #16]!
  443260:	cbnz	x1, 443250 <argp_parse@@Base+0xb9a4>
  443264:	mov	x19, xzr
  443268:	b	44328c <argp_parse@@Base+0xb9e0>
  44326c:	adrp	x19, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  443270:	add	x19, x19, #0x40
  443274:	b	44328c <argp_parse@@Base+0xb9e0>
  443278:	adrp	x19, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  44327c:	add	x19, x19, #0x50
  443280:	b	44328c <argp_parse@@Base+0xb9e0>
  443284:	adrp	x19, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  443288:	add	x19, x19, #0x60
  44328c:	mov	x0, x19
  443290:	ldp	x20, x19, [sp, #16]
  443294:	ldp	x29, x30, [sp], #32
  443298:	ret
  44329c:	stp	x29, x30, [sp, #-32]!
  4432a0:	stp	x20, x19, [sp, #16]
  4432a4:	mov	x29, sp
  4432a8:	cbz	x0, 443328 <argp_parse@@Base+0xba7c>
  4432ac:	mov	w1, #0x2f                  	// #47
  4432b0:	mov	x19, x0
  4432b4:	bl	404530 <strrchr@plt>
  4432b8:	cmp	x0, #0x0
  4432bc:	csinc	x20, x19, x0, eq  // eq = none
  4432c0:	sub	x8, x20, x19
  4432c4:	cmp	x8, #0x7
  4432c8:	b.lt	44330c <argp_parse@@Base+0xba60>  // b.tstop
  4432cc:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4432d0:	sub	x0, x20, #0x7
  4432d4:	add	x1, x1, #0x1c0
  4432d8:	mov	w2, #0x7                   	// #7
  4432dc:	bl	404300 <strncmp@plt>
  4432e0:	cbnz	w0, 44330c <argp_parse@@Base+0xba60>
  4432e4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4432e8:	add	x1, x1, #0x1c8
  4432ec:	mov	w2, #0x3                   	// #3
  4432f0:	mov	x0, x20
  4432f4:	bl	404300 <strncmp@plt>
  4432f8:	mov	x19, x20
  4432fc:	cbnz	w0, 44330c <argp_parse@@Base+0xba60>
  443300:	add	x19, x20, #0x3
  443304:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  443308:	str	x19, [x8, #128]
  44330c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  443310:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  443314:	str	x19, [x8, #2504]
  443318:	str	x19, [x9, #88]
  44331c:	ldp	x20, x19, [sp, #16]
  443320:	ldp	x29, x30, [sp], #32
  443324:	ret
  443328:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  44332c:	ldr	x3, [x8, #96]
  443330:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  443334:	add	x0, x0, #0x188
  443338:	mov	w1, #0x37                  	// #55
  44333c:	mov	w2, #0x1                   	// #1
  443340:	bl	4047e0 <fwrite@plt>
  443344:	bl	4045b0 <abort@plt>
  443348:	stp	x29, x30, [sp, #-48]!
  44334c:	str	x21, [sp, #16]
  443350:	stp	x20, x19, [sp, #32]
  443354:	mov	x29, sp
  443358:	mov	x19, x0
  44335c:	bl	404a10 <__errno_location@plt>
  443360:	ldr	w21, [x0]
  443364:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  443368:	add	x8, x8, #0x9d0
  44336c:	cmp	x19, #0x0
  443370:	mov	x20, x0
  443374:	csel	x0, x8, x19, eq  // eq = none
  443378:	mov	w1, #0x38                  	// #56
  44337c:	bl	445c50 <argp_parse@@Base+0xe3a4>
  443380:	str	w21, [x20]
  443384:	ldp	x20, x19, [sp, #32]
  443388:	ldr	x21, [sp, #16]
  44338c:	ldp	x29, x30, [sp], #48
  443390:	ret
  443394:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  443398:	add	x8, x8, #0x9d0
  44339c:	cmp	x0, #0x0
  4433a0:	csel	x8, x8, x0, eq  // eq = none
  4433a4:	ldr	w0, [x8]
  4433a8:	ret
  4433ac:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4433b0:	add	x8, x8, #0x9d0
  4433b4:	cmp	x0, #0x0
  4433b8:	csel	x8, x8, x0, eq  // eq = none
  4433bc:	str	w1, [x8]
  4433c0:	ret
  4433c4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4433c8:	add	x8, x8, #0x9d0
  4433cc:	cmp	x0, #0x0
  4433d0:	ubfx	w9, w1, #5, #3
  4433d4:	csel	x8, x8, x0, eq  // eq = none
  4433d8:	add	x8, x8, w9, uxtw #2
  4433dc:	ldr	w9, [x8, #8]
  4433e0:	lsr	w10, w9, w1
  4433e4:	and	w0, w10, #0x1
  4433e8:	and	w10, w2, #0x1
  4433ec:	eor	w10, w0, w10
  4433f0:	lsl	w10, w10, w1
  4433f4:	eor	w9, w10, w9
  4433f8:	str	w9, [x8, #8]
  4433fc:	ret
  443400:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  443404:	add	x8, x8, #0x9d0
  443408:	cmp	x0, #0x0
  44340c:	csel	x8, x8, x0, eq  // eq = none
  443410:	ldr	w0, [x8, #4]
  443414:	str	w1, [x8, #4]
  443418:	ret
  44341c:	stp	x29, x30, [sp, #-16]!
  443420:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  443424:	add	x8, x8, #0x9d0
  443428:	cmp	x0, #0x0
  44342c:	csel	x8, x8, x0, eq  // eq = none
  443430:	mov	w9, #0xa                   	// #10
  443434:	mov	x29, sp
  443438:	str	w9, [x8]
  44343c:	cbz	x1, 443450 <argp_parse@@Base+0xbba4>
  443440:	cbz	x2, 443450 <argp_parse@@Base+0xbba4>
  443444:	stp	x1, x2, [x8, #40]
  443448:	ldp	x29, x30, [sp], #16
  44344c:	ret
  443450:	bl	4045b0 <abort@plt>
  443454:	sub	sp, sp, #0x60
  443458:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  44345c:	add	x8, x8, #0x9d0
  443460:	cmp	x4, #0x0
  443464:	stp	x29, x30, [sp, #16]
  443468:	str	x25, [sp, #32]
  44346c:	stp	x24, x23, [sp, #48]
  443470:	stp	x22, x21, [sp, #64]
  443474:	stp	x20, x19, [sp, #80]
  443478:	add	x29, sp, #0x10
  44347c:	mov	x19, x3
  443480:	mov	x20, x2
  443484:	mov	x21, x1
  443488:	mov	x22, x0
  44348c:	csel	x24, x8, x4, eq  // eq = none
  443490:	bl	404a10 <__errno_location@plt>
  443494:	ldp	w4, w5, [x24]
  443498:	ldp	x7, x8, [x24, #40]
  44349c:	ldr	w25, [x0]
  4434a0:	mov	x23, x0
  4434a4:	add	x6, x24, #0x8
  4434a8:	mov	x0, x22
  4434ac:	mov	x1, x21
  4434b0:	mov	x2, x20
  4434b4:	mov	x3, x19
  4434b8:	str	x8, [sp]
  4434bc:	bl	4434e0 <argp_parse@@Base+0xbc34>
  4434c0:	str	w25, [x23]
  4434c4:	ldp	x20, x19, [sp, #80]
  4434c8:	ldp	x22, x21, [sp, #64]
  4434cc:	ldp	x24, x23, [sp, #48]
  4434d0:	ldr	x25, [sp, #32]
  4434d4:	ldp	x29, x30, [sp, #16]
  4434d8:	add	sp, sp, #0x60
  4434dc:	ret
  4434e0:	sub	sp, sp, #0x120
  4434e4:	stp	x29, x30, [sp, #192]
  4434e8:	add	x29, sp, #0xc0
  4434ec:	ldr	x8, [x29, #96]
  4434f0:	stp	x28, x27, [sp, #208]
  4434f4:	stp	x26, x25, [sp, #224]
  4434f8:	stp	x24, x23, [sp, #240]
  4434fc:	stp	x22, x21, [sp, #256]
  443500:	stp	x20, x19, [sp, #272]
  443504:	str	x7, [sp, #88]
  443508:	stur	x6, [x29, #-40]
  44350c:	mov	w19, w5
  443510:	mov	w22, w4
  443514:	mov	x28, x3
  443518:	mov	x20, x2
  44351c:	mov	x24, x1
  443520:	stur	x8, [x29, #-88]
  443524:	mov	x21, x0
  443528:	bl	404730 <__ctype_get_mb_cur_max@plt>
  44352c:	mov	w4, w22
  443530:	mov	w8, wzr
  443534:	mov	w14, wzr
  443538:	str	w19, [sp, #80]
  44353c:	ubfx	w19, w19, #1, #1
  443540:	add	x9, x20, #0x1
  443544:	mov	w25, #0x1                   	// #1
  443548:	str	x0, [sp, #48]
  44354c:	str	xzr, [sp, #64]
  443550:	stur	xzr, [x29, #-64]
  443554:	stur	xzr, [x29, #-32]
  443558:	str	wzr, [sp, #72]
  44355c:	stur	x20, [x29, #-80]
  443560:	str	x9, [sp, #96]
  443564:	cmp	w4, #0xa
  443568:	b.hi	444134 <argp_parse@@Base+0xc888>  // b.pmore
  44356c:	adrp	x12, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  443570:	mov	w9, w4
  443574:	add	x12, x12, #0x1d0
  443578:	mov	x22, x24
  44357c:	adr	x10, 44359c <argp_parse@@Base+0xbcf0>
  443580:	ldrb	w11, [x12, x9]
  443584:	add	x10, x10, x11, lsl #2
  443588:	ldur	x24, [x29, #-80]
  44358c:	mov	x20, xzr
  443590:	mov	w16, wzr
  443594:	mov	w9, #0x1                   	// #1
  443598:	br	x10
  44359c:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4435a0:	add	x0, x0, #0x326
  4435a4:	mov	w1, w4
  4435a8:	mov	w20, w4
  4435ac:	mov	w23, w14
  4435b0:	bl	444a80 <argp_parse@@Base+0xd1d4>
  4435b4:	str	x0, [sp, #88]
  4435b8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4435bc:	add	x0, x0, #0xafc
  4435c0:	mov	w1, w20
  4435c4:	bl	444a80 <argp_parse@@Base+0xd1d4>
  4435c8:	mov	w14, w23
  4435cc:	mov	w4, w20
  4435d0:	stur	x0, [x29, #-88]
  4435d4:	tbnz	w19, #0, 443618 <argp_parse@@Base+0xbd6c>
  4435d8:	ldr	x8, [sp, #88]
  4435dc:	ldrb	w9, [x8]
  4435e0:	cbz	w9, 443618 <argp_parse@@Base+0xbd6c>
  4435e4:	mov	w27, w14
  4435e8:	mov	w26, w4
  4435ec:	mov	x10, xzr
  4435f0:	add	x8, x8, #0x1
  4435f4:	b	443608 <argp_parse@@Base+0xbd5c>
  4435f8:	ldrb	w9, [x8, x10]
  4435fc:	add	x20, x10, #0x1
  443600:	mov	x10, x20
  443604:	cbz	w9, 443624 <argp_parse@@Base+0xbd78>
  443608:	cmp	x10, x22
  44360c:	b.cs	4435f8 <argp_parse@@Base+0xbd4c>  // b.hs, b.nlast
  443610:	strb	w9, [x21, x10]
  443614:	b	4435f8 <argp_parse@@Base+0xbd4c>
  443618:	mov	w27, w14
  44361c:	mov	w26, w4
  443620:	mov	x20, xzr
  443624:	ldur	x23, [x29, #-88]
  443628:	mov	x0, x23
  44362c:	bl	403f40 <strlen@plt>
  443630:	stur	x0, [x29, #-32]
  443634:	stur	x23, [x29, #-64]
  443638:	mov	w9, #0x1                   	// #1
  44363c:	mov	w16, w19
  443640:	mov	w4, w26
  443644:	mov	w14, w27
  443648:	b	4436f0 <argp_parse@@Base+0xbe44>
  44364c:	mov	w8, #0x1                   	// #1
  443650:	b	4436cc <argp_parse@@Base+0xbe20>
  443654:	mov	w4, wzr
  443658:	mov	x20, xzr
  44365c:	mov	w16, wzr
  443660:	mov	w9, w8
  443664:	b	4436f0 <argp_parse@@Base+0xbe44>
  443668:	tbnz	w19, #0, 4436cc <argp_parse@@Base+0xbe20>
  44366c:	mov	w9, w8
  443670:	mov	w16, wzr
  443674:	cbz	x22, 443680 <argp_parse@@Base+0xbdd4>
  443678:	mov	w8, #0x27                  	// #39
  44367c:	strb	w8, [x21]
  443680:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  443684:	add	x8, x8, #0xafc
  443688:	stur	x8, [x29, #-64]
  44368c:	mov	w8, #0x1                   	// #1
  443690:	mov	w4, #0x2                   	// #2
  443694:	mov	w20, #0x1                   	// #1
  443698:	stur	x8, [x29, #-32]
  44369c:	b	4436f0 <argp_parse@@Base+0xbe44>
  4436a0:	tbz	w19, #0, 443fcc <argp_parse@@Base+0xc720>
  4436a4:	mov	w8, #0x1                   	// #1
  4436a8:	stur	x8, [x29, #-32]
  4436ac:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  4436b0:	add	x8, x8, #0x788
  4436b4:	mov	x20, xzr
  4436b8:	mov	w4, #0x5                   	// #5
  4436bc:	stur	x8, [x29, #-64]
  4436c0:	mov	w9, #0x1                   	// #1
  4436c4:	b	4436ec <argp_parse@@Base+0xbe40>
  4436c8:	tbz	w19, #0, 444000 <argp_parse@@Base+0xc754>
  4436cc:	mov	w9, #0x1                   	// #1
  4436d0:	stur	x9, [x29, #-32]
  4436d4:	adrp	x9, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  4436d8:	add	x9, x9, #0xafc
  4436dc:	mov	x20, xzr
  4436e0:	mov	w4, #0x2                   	// #2
  4436e4:	stur	x9, [x29, #-64]
  4436e8:	mov	w9, w8
  4436ec:	mov	w16, #0x1                   	// #1
  4436f0:	mov	w15, w9
  4436f4:	ldp	x8, x9, [x29, #-40]
  4436f8:	eor	w17, w16, #0x1
  4436fc:	stur	w17, [x29, #-68]
  443700:	mov	x23, xzr
  443704:	cmp	x8, #0x0
  443708:	cset	w8, eq  // eq = none
  44370c:	cmp	x9, #0x0
  443710:	cset	w9, ne  // ne = any
  443714:	cmp	w4, #0x2
  443718:	cset	w10, ne  // ne = any
  44371c:	and	w13, w10, w15
  443720:	and	w12, w9, w16
  443724:	orr	w10, w10, w17
  443728:	and	w17, w9, w13
  44372c:	orr	w9, w13, w16
  443730:	eor	w9, w9, #0x1
  443734:	cset	w11, eq  // eq = none
  443738:	orr	w8, w8, w9
  44373c:	and	w12, w15, w12
  443740:	str	w10, [sp, #84]
  443744:	and	w10, w11, w16
  443748:	stur	w8, [x29, #-24]
  44374c:	eor	w8, w15, #0x1
  443750:	str	w12, [sp, #56]
  443754:	str	w10, [sp, #76]
  443758:	stur	w15, [x29, #-72]
  44375c:	str	w8, [sp, #60]
  443760:	stp	w16, w4, [x29, #-48]
  443764:	stur	w17, [x29, #-52]
  443768:	cmn	x28, #0x1
  44376c:	b.eq	44377c <argp_parse@@Base+0xbed0>  // b.none
  443770:	cmp	x23, x28
  443774:	b.ne	443784 <argp_parse@@Base+0xbed8>  // b.any
  443778:	b	443f5c <argp_parse@@Base+0xc6b0>
  44377c:	ldrb	w8, [x24, x23]
  443780:	cbz	w8, 443f64 <argp_parse@@Base+0xc6b8>
  443784:	cbz	w17, 4437c4 <argp_parse@@Base+0xbf18>
  443788:	ldur	x8, [x29, #-32]
  44378c:	cmp	x8, #0x2
  443790:	add	x19, x23, x8
  443794:	b.cc	4437bc <argp_parse@@Base+0xbf10>  // b.lo, b.ul, b.last
  443798:	cmn	x28, #0x1
  44379c:	b.ne	4437bc <argp_parse@@Base+0xbf10>  // b.any
  4437a0:	mov	x0, x24
  4437a4:	mov	w26, w14
  4437a8:	bl	403f40 <strlen@plt>
  4437ac:	ldp	w17, w16, [x29, #-52]
  4437b0:	ldur	w4, [x29, #-44]
  4437b4:	mov	w14, w26
  4437b8:	mov	x28, x0
  4437bc:	cmp	x19, x28
  4437c0:	b.ls	4437cc <argp_parse@@Base+0xbf20>  // b.plast
  4437c4:	mov	w27, wzr
  4437c8:	b	443804 <argp_parse@@Base+0xbf58>
  4437cc:	ldur	x1, [x29, #-64]
  4437d0:	ldur	x2, [x29, #-32]
  4437d4:	add	x0, x24, x23
  4437d8:	mov	w19, w14
  4437dc:	bl	404440 <bcmp@plt>
  4437e0:	ldur	w9, [x29, #-68]
  4437e4:	cmp	w0, #0x0
  4437e8:	cset	w8, ne  // ne = any
  4437ec:	cset	w27, eq  // eq = none
  4437f0:	orr	w8, w8, w9
  4437f4:	tbz	w8, #0, 444038 <argp_parse@@Base+0xc78c>
  4437f8:	ldp	w16, w4, [x29, #-48]
  4437fc:	ldur	w17, [x29, #-52]
  443800:	mov	w14, w19
  443804:	ldrb	w19, [x24, x23]
  443808:	cmp	w19, #0x7e
  44380c:	b.hi	443a4c <argp_parse@@Base+0xc1a0>  // b.pmore
  443810:	adrp	x13, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  443814:	add	x13, x13, #0x1db
  443818:	adr	x12, 44383c <argp_parse@@Base+0xbf90>
  44381c:	ldrb	w9, [x13, x19]
  443820:	add	x12, x12, x9, lsl #2
  443824:	mov	w10, wzr
  443828:	mov	w8, wzr
  44382c:	mov	w26, #0x1                   	// #1
  443830:	mov	w11, #0x6e                  	// #110
  443834:	mov	w9, #0x61                  	// #97
  443838:	br	x12
  44383c:	ldur	w9, [x29, #-24]
  443840:	tbnz	w9, #0, 443860 <argp_parse@@Base+0xbfb4>
  443844:	ldur	x10, [x29, #-40]
  443848:	lsr	w9, w19, #5
  44384c:	ldr	w9, [x10, w9, uxtw #2]
  443850:	lsr	w9, w9, w19
  443854:	tbz	w9, #0, 443860 <argp_parse@@Base+0xbfb4>
  443858:	mov	w9, w19
  44385c:	b	443868 <argp_parse@@Base+0xbfbc>
  443860:	mov	w9, w19
  443864:	cbz	w27, 443ab0 <argp_parse@@Base+0xc204>
  443868:	tbnz	w16, #0, 444010 <argp_parse@@Base+0xc764>
  44386c:	cmp	w4, #0x2
  443870:	cset	w8, ne  // ne = any
  443874:	orr	w8, w8, w14
  443878:	tbnz	w8, #0, 4438bc <argp_parse@@Base+0xc010>
  44387c:	cmp	x20, x22
  443880:	b.cs	44388c <argp_parse@@Base+0xbfe0>  // b.hs, b.nlast
  443884:	mov	w8, #0x27                  	// #39
  443888:	strb	w8, [x21, x20]
  44388c:	add	x8, x20, #0x1
  443890:	cmp	x8, x22
  443894:	b.cs	4438a0 <argp_parse@@Base+0xbff4>  // b.hs, b.nlast
  443898:	mov	w10, #0x24                  	// #36
  44389c:	strb	w10, [x21, x8]
  4438a0:	add	x8, x20, #0x2
  4438a4:	cmp	x8, x22
  4438a8:	b.cs	4438b4 <argp_parse@@Base+0xc008>  // b.hs, b.nlast
  4438ac:	mov	w10, #0x27                  	// #39
  4438b0:	strb	w10, [x21, x8]
  4438b4:	add	x20, x20, #0x3
  4438b8:	mov	w14, #0x1                   	// #1
  4438bc:	cmp	x20, x22
  4438c0:	b.cs	4438cc <argp_parse@@Base+0xc020>  // b.hs, b.nlast
  4438c4:	mov	w8, #0x5c                  	// #92
  4438c8:	strb	w8, [x21, x20]
  4438cc:	add	x20, x20, #0x1
  4438d0:	cmp	x20, x22
  4438d4:	b.cs	4438dc <argp_parse@@Base+0xc030>  // b.hs, b.nlast
  4438d8:	strb	w9, [x21, x20]
  4438dc:	add	x20, x20, #0x1
  4438e0:	and	w25, w25, w26
  4438e4:	add	x23, x23, #0x1
  4438e8:	cmn	x28, #0x1
  4438ec:	b.ne	443770 <argp_parse@@Base+0xbec4>  // b.any
  4438f0:	b	44377c <argp_parse@@Base+0xbed0>
  4438f4:	cmp	x28, #0x1
  4438f8:	b.eq	44391c <argp_parse@@Base+0xc070>  // b.none
  4438fc:	cmn	x28, #0x1
  443900:	b.ne	443920 <argp_parse@@Base+0xc074>  // b.any
  443904:	ldrb	w8, [x24, #1]
  443908:	cbz	w8, 44391c <argp_parse@@Base+0xc070>
  44390c:	mov	w8, wzr
  443910:	mov	w26, wzr
  443914:	mov	x28, #0xffffffffffffffff    	// #-1
  443918:	b	44383c <argp_parse@@Base+0xbf90>
  44391c:	cbz	x23, 44392c <argp_parse@@Base+0xc080>
  443920:	mov	w8, wzr
  443924:	mov	w26, wzr
  443928:	b	44383c <argp_parse@@Base+0xbf90>
  44392c:	mov	w10, #0x1                   	// #1
  443930:	cmp	w4, #0x2
  443934:	b.ne	44393c <argp_parse@@Base+0xc090>  // b.any
  443938:	tbnz	w16, #0, 444010 <argp_parse@@Base+0xc764>
  44393c:	mov	w8, wzr
  443940:	mov	w26, w10
  443944:	b	44383c <argp_parse@@Base+0xbf90>
  443948:	cmp	w4, #0x2
  44394c:	b.ne	443a98 <argp_parse@@Base+0xc1ec>  // b.any
  443950:	tbz	w16, #0, 443aa4 <argp_parse@@Base+0xc1f8>
  443954:	b	444010 <argp_parse@@Base+0xc764>
  443958:	mov	w9, #0x66                  	// #102
  44395c:	b	443af4 <argp_parse@@Base+0xc248>
  443960:	mov	w11, #0x74                  	// #116
  443964:	b	443974 <argp_parse@@Base+0xc0c8>
  443968:	mov	w9, #0x62                  	// #98
  44396c:	b	443af4 <argp_parse@@Base+0xc248>
  443970:	mov	w11, #0x72                  	// #114
  443974:	ldr	w8, [sp, #84]
  443978:	mov	w9, w11
  44397c:	tbnz	w8, #0, 443af4 <argp_parse@@Base+0xc248>
  443980:	b	444010 <argp_parse@@Base+0xc764>
  443984:	ldur	w8, [x29, #-72]
  443988:	tbz	w8, #0, 443b08 <argp_parse@@Base+0xc25c>
  44398c:	cmp	w4, #0x2
  443990:	tbnz	w16, #0, 444128 <argp_parse@@Base+0xc87c>
  443994:	cset	w8, ne  // ne = any
  443998:	orr	w8, w8, w14
  44399c:	tbz	w8, #0, 443e38 <argp_parse@@Base+0xc58c>
  4439a0:	mov	x8, x20
  4439a4:	cmp	x8, x22
  4439a8:	b.cc	443e80 <argp_parse@@Base+0xc5d4>  // b.lo, b.ul, b.last
  4439ac:	b	443e88 <argp_parse@@Base+0xc5dc>
  4439b0:	cmp	w4, #0x5
  4439b4:	b.eq	443c34 <argp_parse@@Base+0xc388>  // b.none
  4439b8:	cmp	w4, #0x2
  4439bc:	b.ne	443ce4 <argp_parse@@Base+0xc438>  // b.any
  4439c0:	tbz	w16, #0, 443ce4 <argp_parse@@Base+0xc438>
  4439c4:	b	444010 <argp_parse@@Base+0xc764>
  4439c8:	mov	w9, #0x76                  	// #118
  4439cc:	b	443af4 <argp_parse@@Base+0xc248>
  4439d0:	cmp	w4, #0x2
  4439d4:	b.ne	443b18 <argp_parse@@Base+0xc26c>  // b.any
  4439d8:	tbnz	w16, #0, 444010 <argp_parse@@Base+0xc764>
  4439dc:	ldr	x10, [sp, #64]
  4439e0:	cmp	x22, #0x0
  4439e4:	cset	w8, eq  // eq = none
  4439e8:	cmp	x10, #0x0
  4439ec:	cset	w9, ne  // ne = any
  4439f0:	orr	w8, w9, w8
  4439f4:	cmp	w8, #0x0
  4439f8:	csel	x10, x10, x22, ne  // ne = any
  4439fc:	csel	x22, x22, xzr, ne  // ne = any
  443a00:	cmp	x20, x22
  443a04:	str	x10, [sp, #64]
  443a08:	b.cs	443a14 <argp_parse@@Base+0xc168>  // b.hs, b.nlast
  443a0c:	mov	w8, #0x27                  	// #39
  443a10:	strb	w8, [x21, x20]
  443a14:	add	x8, x20, #0x1
  443a18:	cmp	x8, x22
  443a1c:	b.cs	443a28 <argp_parse@@Base+0xc17c>  // b.hs, b.nlast
  443a20:	mov	w9, #0x5c                  	// #92
  443a24:	strb	w9, [x21, x8]
  443a28:	add	x8, x20, #0x2
  443a2c:	cmp	x8, x22
  443a30:	b.cs	443a3c <argp_parse@@Base+0xc190>  // b.hs, b.nlast
  443a34:	mov	w9, #0x27                  	// #39
  443a38:	strb	w9, [x21, x8]
  443a3c:	mov	w14, wzr
  443a40:	mov	w8, wzr
  443a44:	add	x20, x20, #0x3
  443a48:	b	443b1c <argp_parse@@Base+0xc270>
  443a4c:	ldr	x8, [sp, #48]
  443a50:	str	w14, [sp, #28]
  443a54:	cmp	x8, #0x1
  443a58:	b.ne	443b30 <argp_parse@@Base+0xc284>  // b.any
  443a5c:	bl	404690 <__ctype_b_loc@plt>
  443a60:	ldr	x8, [x0]
  443a64:	mov	w11, #0x1                   	// #1
  443a68:	ldrh	w8, [x8, x19, lsl #1]
  443a6c:	ubfx	w26, w8, #14, #1
  443a70:	ldr	w8, [sp, #60]
  443a74:	ldp	w16, w4, [x29, #-48]
  443a78:	ldr	w14, [sp, #28]
  443a7c:	ldur	w17, [x29, #-52]
  443a80:	cmp	x11, #0x1
  443a84:	orr	w8, w26, w8
  443a88:	b.hi	443cf4 <argp_parse@@Base+0xc448>  // b.pmore
  443a8c:	tbz	w8, #0, 443cf4 <argp_parse@@Base+0xc448>
  443a90:	mov	w8, wzr
  443a94:	b	44383c <argp_parse@@Base+0xbf90>
  443a98:	ldr	w8, [sp, #56]
  443a9c:	mov	w9, #0x5c                  	// #92
  443aa0:	tbz	w8, #0, 443af4 <argp_parse@@Base+0xc248>
  443aa4:	mov	w8, wzr
  443aa8:	mov	w26, wzr
  443aac:	mov	w19, #0x5c                  	// #92
  443ab0:	tbnz	w8, #0, 443ae4 <argp_parse@@Base+0xc238>
  443ab4:	tbz	w14, #0, 443ae4 <argp_parse@@Base+0xc238>
  443ab8:	cmp	x20, x22
  443abc:	b.cs	443ac8 <argp_parse@@Base+0xc21c>  // b.hs, b.nlast
  443ac0:	mov	w8, #0x27                  	// #39
  443ac4:	strb	w8, [x21, x20]
  443ac8:	add	x8, x20, #0x1
  443acc:	cmp	x8, x22
  443ad0:	b.cs	443adc <argp_parse@@Base+0xc230>  // b.hs, b.nlast
  443ad4:	mov	w9, #0x27                  	// #39
  443ad8:	strb	w9, [x21, x8]
  443adc:	mov	w14, wzr
  443ae0:	add	x20, x20, #0x2
  443ae4:	mov	w9, w19
  443ae8:	cmp	x20, x22
  443aec:	b.cc	4438d8 <argp_parse@@Base+0xc02c>  // b.lo, b.ul, b.last
  443af0:	b	4438dc <argp_parse@@Base+0xc030>
  443af4:	ldur	w10, [x29, #-72]
  443af8:	mov	w8, wzr
  443afc:	mov	w26, wzr
  443b00:	tbz	w10, #0, 44383c <argp_parse@@Base+0xbf90>
  443b04:	b	443868 <argp_parse@@Base+0xbfbc>
  443b08:	ldr	w8, [sp, #80]
  443b0c:	tbnz	w8, #0, 4438e4 <argp_parse@@Base+0xc038>
  443b10:	mov	w19, wzr
  443b14:	b	443920 <argp_parse@@Base+0xc074>
  443b18:	mov	w8, wzr
  443b1c:	mov	w9, #0x1                   	// #1
  443b20:	mov	w19, #0x27                  	// #39
  443b24:	str	w9, [sp, #72]
  443b28:	mov	w26, #0x1                   	// #1
  443b2c:	b	44383c <argp_parse@@Base+0xbf90>
  443b30:	cmn	x28, #0x1
  443b34:	stur	xzr, [x29, #-16]
  443b38:	b.ne	443b48 <argp_parse@@Base+0xc29c>  // b.any
  443b3c:	mov	x0, x24
  443b40:	bl	403f40 <strlen@plt>
  443b44:	mov	x28, x0
  443b48:	ldr	x8, [sp, #96]
  443b4c:	mov	x11, xzr
  443b50:	mov	w26, #0x1                   	// #1
  443b54:	str	x21, [sp, #32]
  443b58:	add	x8, x8, x23
  443b5c:	str	x8, [sp, #16]
  443b60:	b	443b98 <argp_parse@@Base+0xc2ec>
  443b64:	ldur	w0, [x29, #-20]
  443b68:	bl	4049b0 <iswprint@plt>
  443b6c:	ldr	x21, [sp, #40]
  443b70:	cmp	w0, #0x0
  443b74:	cset	w8, ne  // ne = any
  443b78:	sub	x0, x29, #0x10
  443b7c:	and	w26, w26, w8
  443b80:	add	x21, x24, x21
  443b84:	bl	4045d0 <mbsinit@plt>
  443b88:	mov	x11, x21
  443b8c:	ldr	x21, [sp, #32]
  443b90:	ldur	x24, [x29, #-80]
  443b94:	cbnz	w0, 443a70 <argp_parse@@Base+0xc1c4>
  443b98:	add	x21, x11, x23
  443b9c:	add	x1, x24, x21
  443ba0:	sub	x2, x28, x21
  443ba4:	sub	x0, x29, #0x14
  443ba8:	sub	x3, x29, #0x10
  443bac:	str	x11, [sp, #40]
  443bb0:	bl	446778 <argp_parse@@Base+0xeecc>
  443bb4:	cbz	x0, 443f3c <argp_parse@@Base+0xc690>
  443bb8:	mov	x24, x0
  443bbc:	cmn	x0, #0x1
  443bc0:	b.eq	443f38 <argp_parse@@Base+0xc68c>  // b.none
  443bc4:	cmn	x24, #0x2
  443bc8:	b.eq	443efc <argp_parse@@Base+0xc650>  // b.none
  443bcc:	ldr	w9, [sp, #76]
  443bd0:	ldr	x21, [sp, #32]
  443bd4:	cmp	x24, #0x2
  443bd8:	cset	w8, cc  // cc = lo, ul, last
  443bdc:	eor	w9, w9, #0x1
  443be0:	mov	x12, #0x2b                  	// #43
  443be4:	orr	w8, w9, w8
  443be8:	mov	w11, #0x1                   	// #1
  443bec:	movk	x12, #0x2, lsl #32
  443bf0:	tbnz	w8, #0, 443b64 <argp_parse@@Base+0xc2b8>
  443bf4:	ldr	x9, [sp, #40]
  443bf8:	ldr	x10, [sp, #16]
  443bfc:	sub	x8, x24, #0x1
  443c00:	add	x9, x10, x9
  443c04:	b	443c14 <argp_parse@@Base+0xc368>
  443c08:	subs	x8, x8, #0x1
  443c0c:	add	x9, x9, #0x1
  443c10:	b.eq	443b64 <argp_parse@@Base+0xc2b8>  // b.none
  443c14:	ldrb	w10, [x9]
  443c18:	sub	w10, w10, #0x5b
  443c1c:	cmp	w10, #0x21
  443c20:	b.hi	443c08 <argp_parse@@Base+0xc35c>  // b.pmore
  443c24:	lsl	x10, x11, x10
  443c28:	tst	x10, x12
  443c2c:	b.eq	443c08 <argp_parse@@Base+0xc35c>  // b.none
  443c30:	b	444044 <argp_parse@@Base+0xc798>
  443c34:	ldr	w8, [sp, #80]
  443c38:	tbz	w8, #2, 443ce4 <argp_parse@@Base+0xc438>
  443c3c:	add	x9, x23, #0x2
  443c40:	cmp	x9, x28
  443c44:	b.cs	443ce4 <argp_parse@@Base+0xc438>  // b.hs, b.nlast
  443c48:	add	x8, x23, x24
  443c4c:	ldrb	w8, [x8, #1]
  443c50:	cmp	w8, #0x3f
  443c54:	b.ne	443ce4 <argp_parse@@Base+0xc438>  // b.any
  443c58:	ldrb	w19, [x24, x9]
  443c5c:	mov	w8, wzr
  443c60:	cmp	w19, #0x3e
  443c64:	b.hi	443f50 <argp_parse@@Base+0xc6a4>  // b.pmore
  443c68:	mov	w10, #0x1                   	// #1
  443c6c:	mov	x11, #0xa38200000000        	// #179778741075968
  443c70:	lsl	x10, x10, x19
  443c74:	movk	x11, #0x7000, lsl #48
  443c78:	tst	x10, x11
  443c7c:	b.eq	443f50 <argp_parse@@Base+0xc6a4>  // b.none
  443c80:	tbnz	w16, #0, 444010 <argp_parse@@Base+0xc764>
  443c84:	cmp	x20, x22
  443c88:	b.cs	443c94 <argp_parse@@Base+0xc3e8>  // b.hs, b.nlast
  443c8c:	mov	w8, #0x3f                  	// #63
  443c90:	strb	w8, [x21, x20]
  443c94:	add	x8, x20, #0x1
  443c98:	cmp	x8, x22
  443c9c:	b.cs	443ca8 <argp_parse@@Base+0xc3fc>  // b.hs, b.nlast
  443ca0:	mov	w10, #0x22                  	// #34
  443ca4:	strb	w10, [x21, x8]
  443ca8:	add	x8, x20, #0x2
  443cac:	cmp	x8, x22
  443cb0:	b.cs	443cbc <argp_parse@@Base+0xc410>  // b.hs, b.nlast
  443cb4:	mov	w10, #0x22                  	// #34
  443cb8:	strb	w10, [x21, x8]
  443cbc:	add	x8, x20, #0x3
  443cc0:	cmp	x8, x22
  443cc4:	b.cs	443cd0 <argp_parse@@Base+0xc424>  // b.hs, b.nlast
  443cc8:	mov	w10, #0x3f                  	// #63
  443ccc:	strb	w10, [x21, x8]
  443cd0:	mov	w8, wzr
  443cd4:	mov	w26, wzr
  443cd8:	add	x20, x20, #0x4
  443cdc:	mov	x23, x9
  443ce0:	b	44383c <argp_parse@@Base+0xbf90>
  443ce4:	mov	w8, wzr
  443ce8:	mov	w26, wzr
  443cec:	mov	w19, #0x3f                  	// #63
  443cf0:	b	44383c <argp_parse@@Base+0xbf90>
  443cf4:	mov	w10, wzr
  443cf8:	add	x9, x11, x23
  443cfc:	b	443d10 <argp_parse@@Base+0xc464>
  443d00:	ldr	x12, [sp, #96]
  443d04:	add	x20, x20, #0x1
  443d08:	ldrb	w19, [x12, x23]
  443d0c:	mov	x23, x11
  443d10:	tbz	w8, #0, 443d34 <argp_parse@@Base+0xc488>
  443d14:	tbz	w27, #0, 443de0 <argp_parse@@Base+0xc534>
  443d18:	cmp	x20, x22
  443d1c:	b.cs	443d28 <argp_parse@@Base+0xc47c>  // b.hs, b.nlast
  443d20:	mov	w11, #0x5c                  	// #92
  443d24:	strb	w11, [x21, x20]
  443d28:	mov	w27, wzr
  443d2c:	add	x20, x20, #0x1
  443d30:	b	443de4 <argp_parse@@Base+0xc538>
  443d34:	tbnz	w16, #0, 444010 <argp_parse@@Base+0xc764>
  443d38:	cmp	w4, #0x2
  443d3c:	cset	w10, ne  // ne = any
  443d40:	orr	w10, w10, w14
  443d44:	tbnz	w10, #0, 443d88 <argp_parse@@Base+0xc4dc>
  443d48:	cmp	x20, x22
  443d4c:	b.cs	443d58 <argp_parse@@Base+0xc4ac>  // b.hs, b.nlast
  443d50:	mov	w10, #0x27                  	// #39
  443d54:	strb	w10, [x21, x20]
  443d58:	add	x10, x20, #0x1
  443d5c:	cmp	x10, x22
  443d60:	b.cs	443d6c <argp_parse@@Base+0xc4c0>  // b.hs, b.nlast
  443d64:	mov	w11, #0x24                  	// #36
  443d68:	strb	w11, [x21, x10]
  443d6c:	add	x10, x20, #0x2
  443d70:	cmp	x10, x22
  443d74:	b.cs	443d80 <argp_parse@@Base+0xc4d4>  // b.hs, b.nlast
  443d78:	mov	w11, #0x27                  	// #39
  443d7c:	strb	w11, [x21, x10]
  443d80:	add	x20, x20, #0x3
  443d84:	mov	w14, #0x1                   	// #1
  443d88:	cmp	x20, x22
  443d8c:	b.cs	443d98 <argp_parse@@Base+0xc4ec>  // b.hs, b.nlast
  443d90:	mov	w10, #0x5c                  	// #92
  443d94:	strb	w10, [x21, x20]
  443d98:	add	x10, x20, #0x1
  443d9c:	cmp	x10, x22
  443da0:	b.cs	443db0 <argp_parse@@Base+0xc504>  // b.hs, b.nlast
  443da4:	mov	w11, #0x30                  	// #48
  443da8:	bfxil	w11, w19, #6, #2
  443dac:	strb	w11, [x21, x10]
  443db0:	add	x10, x20, #0x2
  443db4:	cmp	x10, x22
  443db8:	b.cs	443dc8 <argp_parse@@Base+0xc51c>  // b.hs, b.nlast
  443dbc:	mov	w11, #0x30                  	// #48
  443dc0:	bfxil	w11, w19, #3, #3
  443dc4:	strb	w11, [x21, x10]
  443dc8:	mov	w11, #0x30                  	// #48
  443dcc:	bfxil	w11, w19, #0, #3
  443dd0:	add	x20, x20, #0x3
  443dd4:	mov	w10, #0x1                   	// #1
  443dd8:	mov	w19, w11
  443ddc:	b	443de4 <argp_parse@@Base+0xc538>
  443de0:	mov	w27, wzr
  443de4:	add	x11, x23, #0x1
  443de8:	cmp	x9, x11
  443dec:	b.ls	443ef0 <argp_parse@@Base+0xc644>  // b.plast
  443df0:	and	w12, w10, #0x1
  443df4:	orn	w12, w12, w14
  443df8:	tbnz	w12, #0, 443e28 <argp_parse@@Base+0xc57c>
  443dfc:	cmp	x20, x22
  443e00:	b.cs	443e0c <argp_parse@@Base+0xc560>  // b.hs, b.nlast
  443e04:	mov	w12, #0x27                  	// #39
  443e08:	strb	w12, [x21, x20]
  443e0c:	add	x12, x20, #0x1
  443e10:	cmp	x12, x22
  443e14:	b.cs	443e20 <argp_parse@@Base+0xc574>  // b.hs, b.nlast
  443e18:	mov	w13, #0x27                  	// #39
  443e1c:	strb	w13, [x21, x12]
  443e20:	mov	w14, wzr
  443e24:	add	x20, x20, #0x2
  443e28:	cmp	x20, x22
  443e2c:	b.cs	443d00 <argp_parse@@Base+0xc454>  // b.hs, b.nlast
  443e30:	strb	w19, [x21, x20]
  443e34:	b	443d00 <argp_parse@@Base+0xc454>
  443e38:	cmp	x20, x22
  443e3c:	b.cs	443e48 <argp_parse@@Base+0xc59c>  // b.hs, b.nlast
  443e40:	mov	w8, #0x27                  	// #39
  443e44:	strb	w8, [x21, x20]
  443e48:	add	x8, x20, #0x1
  443e4c:	cmp	x8, x22
  443e50:	b.cs	443e5c <argp_parse@@Base+0xc5b0>  // b.hs, b.nlast
  443e54:	mov	w9, #0x24                  	// #36
  443e58:	strb	w9, [x21, x8]
  443e5c:	add	x8, x20, #0x2
  443e60:	cmp	x8, x22
  443e64:	b.cs	443e70 <argp_parse@@Base+0xc5c4>  // b.hs, b.nlast
  443e68:	mov	w9, #0x27                  	// #39
  443e6c:	strb	w9, [x21, x8]
  443e70:	add	x8, x20, #0x3
  443e74:	mov	w14, #0x1                   	// #1
  443e78:	cmp	x8, x22
  443e7c:	b.cs	443e88 <argp_parse@@Base+0xc5dc>  // b.hs, b.nlast
  443e80:	mov	w9, #0x5c                  	// #92
  443e84:	strb	w9, [x21, x8]
  443e88:	cmp	w4, #0x2
  443e8c:	add	x20, x8, #0x1
  443e90:	b.eq	443ee0 <argp_parse@@Base+0xc634>  // b.none
  443e94:	add	x9, x23, #0x1
  443e98:	cmp	x9, x28
  443e9c:	b.cs	443ee0 <argp_parse@@Base+0xc634>  // b.hs, b.nlast
  443ea0:	ldrb	w9, [x24, x9]
  443ea4:	sub	w9, w9, #0x30
  443ea8:	cmp	w9, #0x9
  443eac:	b.hi	443ee0 <argp_parse@@Base+0xc634>  // b.pmore
  443eb0:	cmp	x20, x22
  443eb4:	b.cs	443ec0 <argp_parse@@Base+0xc614>  // b.hs, b.nlast
  443eb8:	mov	w9, #0x30                  	// #48
  443ebc:	strb	w9, [x21, x20]
  443ec0:	add	x9, x8, #0x2
  443ec4:	cmp	x9, x22
  443ec8:	b.cs	443ed4 <argp_parse@@Base+0xc628>  // b.hs, b.nlast
  443ecc:	mov	w10, #0x30                  	// #48
  443ed0:	strb	w10, [x21, x9]
  443ed4:	mov	w26, wzr
  443ed8:	add	x20, x8, #0x3
  443edc:	b	443ee4 <argp_parse@@Base+0xc638>
  443ee0:	mov	w26, wzr
  443ee4:	mov	w8, #0x1                   	// #1
  443ee8:	mov	w19, #0x30                  	// #48
  443eec:	b	44383c <argp_parse@@Base+0xbf90>
  443ef0:	and	w8, w10, #0x1
  443ef4:	tbz	w8, #0, 443ab4 <argp_parse@@Base+0xc208>
  443ef8:	b	443ae4 <argp_parse@@Base+0xc238>
  443efc:	cmp	x28, x21
  443f00:	b.ls	443f38 <argp_parse@@Base+0xc68c>  // b.plast
  443f04:	ldur	x24, [x29, #-80]
  443f08:	ldp	x21, x11, [sp, #32]
  443f0c:	sub	x8, x28, x23
  443f10:	add	x9, x24, x23
  443f14:	ldrb	w10, [x9, x11]
  443f18:	cbz	w10, 443f48 <argp_parse@@Base+0xc69c>
  443f1c:	add	x11, x11, #0x1
  443f20:	add	x10, x23, x11
  443f24:	cmp	x10, x28
  443f28:	b.cc	443f14 <argp_parse@@Base+0xc668>  // b.lo, b.ul, b.last
  443f2c:	mov	w26, wzr
  443f30:	mov	x11, x8
  443f34:	b	443a70 <argp_parse@@Base+0xc1c4>
  443f38:	mov	w26, wzr
  443f3c:	ldp	x21, x11, [sp, #32]
  443f40:	ldur	x24, [x29, #-80]
  443f44:	b	443a70 <argp_parse@@Base+0xc1c4>
  443f48:	mov	w26, wzr
  443f4c:	b	443a70 <argp_parse@@Base+0xc1c4>
  443f50:	mov	w19, #0x3f                  	// #63
  443f54:	mov	w26, w8
  443f58:	b	44383c <argp_parse@@Base+0xbf90>
  443f5c:	mov	x28, x23
  443f60:	b	443f68 <argp_parse@@Base+0xc6bc>
  443f64:	mov	x28, #0xffffffffffffffff    	// #-1
  443f68:	cmp	w4, #0x2
  443f6c:	ldur	w10, [x29, #-72]
  443f70:	cset	w8, eq  // eq = none
  443f74:	cmp	x20, #0x0
  443f78:	cset	w9, eq  // eq = none
  443f7c:	and	w8, w8, w9
  443f80:	and	w8, w16, w8
  443f84:	tbnz	w8, #0, 444014 <argp_parse@@Base+0xc768>
  443f88:	cmp	w4, #0x2
  443f8c:	cset	w8, ne  // ne = any
  443f90:	orr	w8, w16, w8
  443f94:	tbnz	w8, #0, 4440e0 <argp_parse@@Base+0xc834>
  443f98:	ldr	w8, [sp, #72]
  443f9c:	eor	w8, w8, #0x1
  443fa0:	tbnz	w8, #0, 4440e0 <argp_parse@@Base+0xc834>
  443fa4:	tbnz	w25, #0, 4440b0 <argp_parse@@Base+0xc804>
  443fa8:	ldr	x24, [sp, #64]
  443fac:	mov	w19, wzr
  443fb0:	cbz	x24, 4440dc <argp_parse@@Base+0xc830>
  443fb4:	mov	w4, #0x2                   	// #2
  443fb8:	mov	w8, w10
  443fbc:	mov	w25, w19
  443fc0:	mov	w16, w19
  443fc4:	cbz	x22, 443564 <argp_parse@@Base+0xbcb8>
  443fc8:	b	4440e0 <argp_parse@@Base+0xc834>
  443fcc:	mov	w16, wzr
  443fd0:	cbz	x22, 443fdc <argp_parse@@Base+0xc730>
  443fd4:	mov	w8, #0x22                  	// #34
  443fd8:	strb	w8, [x21]
  443fdc:	adrp	x8, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  443fe0:	add	x8, x8, #0x788
  443fe4:	stur	x8, [x29, #-64]
  443fe8:	mov	w8, #0x1                   	// #1
  443fec:	mov	w20, #0x1                   	// #1
  443ff0:	mov	w4, #0x5                   	// #5
  443ff4:	stur	x8, [x29, #-32]
  443ff8:	mov	w9, #0x1                   	// #1
  443ffc:	b	4436f0 <argp_parse@@Base+0xbe44>
  444000:	mov	w9, #0x1                   	// #1
  444004:	mov	w16, wzr
  444008:	cbnz	x22, 443678 <argp_parse@@Base+0xbdcc>
  44400c:	b	443680 <argp_parse@@Base+0xbdd4>
  444010:	ldur	w10, [x29, #-72]
  444014:	tst	w10, #0x1
  444018:	mov	w8, #0x2                   	// #2
  44401c:	mov	w9, #0x4                   	// #4
  444020:	csel	w8, w9, w8, ne  // ne = any
  444024:	cmp	w4, #0x2
  444028:	b.ne	444030 <argp_parse@@Base+0xc784>  // b.any
  44402c:	mov	w4, w8
  444030:	ldr	x7, [sp, #88]
  444034:	b	444060 <argp_parse@@Base+0xc7b4>
  444038:	ldr	x7, [sp, #88]
  44403c:	ldur	w4, [x29, #-44]
  444040:	b	444060 <argp_parse@@Base+0xc7b4>
  444044:	ldur	w8, [x29, #-72]
  444048:	ldr	x7, [sp, #88]
  44404c:	ldur	x24, [x29, #-80]
  444050:	mov	w9, #0x4                   	// #4
  444054:	tst	w8, #0x1
  444058:	mov	w8, #0x2                   	// #2
  44405c:	csel	w4, w9, w8, ne  // ne = any
  444060:	ldr	w8, [sp, #80]
  444064:	mov	x0, x21
  444068:	mov	x1, x22
  44406c:	mov	x2, x24
  444070:	and	w5, w8, #0xfffffffd
  444074:	ldur	x8, [x29, #-88]
  444078:	mov	x3, x28
  44407c:	mov	x6, xzr
  444080:	str	x8, [sp]
  444084:	bl	4434e0 <argp_parse@@Base+0xbc34>
  444088:	mov	x20, x0
  44408c:	mov	x0, x20
  444090:	ldp	x20, x19, [sp, #272]
  444094:	ldp	x22, x21, [sp, #256]
  444098:	ldp	x24, x23, [sp, #240]
  44409c:	ldp	x26, x25, [sp, #224]
  4440a0:	ldp	x28, x27, [sp, #208]
  4440a4:	ldp	x29, x30, [sp, #192]
  4440a8:	add	sp, sp, #0x120
  4440ac:	ret
  4440b0:	ldur	x8, [x29, #-88]
  4440b4:	ldr	x1, [sp, #64]
  4440b8:	ldur	x2, [x29, #-80]
  4440bc:	ldr	w5, [sp, #80]
  4440c0:	ldur	x6, [x29, #-40]
  4440c4:	ldr	x7, [sp, #88]
  4440c8:	mov	w4, #0x5                   	// #5
  4440cc:	str	x8, [sp]
  4440d0:	mov	x0, x21
  4440d4:	mov	x3, x28
  4440d8:	b	444084 <argp_parse@@Base+0xc7d8>
  4440dc:	mov	w16, w19
  4440e0:	ldur	x8, [x29, #-64]
  4440e4:	cbz	x8, 444118 <argp_parse@@Base+0xc86c>
  4440e8:	tbnz	w16, #0, 444118 <argp_parse@@Base+0xc86c>
  4440ec:	ldrb	w9, [x8]
  4440f0:	cbz	w9, 444118 <argp_parse@@Base+0xc86c>
  4440f4:	add	x8, x8, #0x1
  4440f8:	b	444108 <argp_parse@@Base+0xc85c>
  4440fc:	ldrb	w9, [x8], #1
  444100:	add	x20, x20, #0x1
  444104:	cbz	w9, 444118 <argp_parse@@Base+0xc86c>
  444108:	cmp	x20, x22
  44410c:	b.cs	4440fc <argp_parse@@Base+0xc850>  // b.hs, b.nlast
  444110:	strb	w9, [x21, x20]
  444114:	b	4440fc <argp_parse@@Base+0xc850>
  444118:	cmp	x20, x22
  44411c:	b.cs	44408c <argp_parse@@Base+0xc7e0>  // b.hs, b.nlast
  444120:	strb	wzr, [x21, x20]
  444124:	b	44408c <argp_parse@@Base+0xc7e0>
  444128:	b.ne	444030 <argp_parse@@Base+0xc784>  // b.any
  44412c:	mov	w4, #0x4                   	// #4
  444130:	b	444030 <argp_parse@@Base+0xc784>
  444134:	bl	4045b0 <abort@plt>
  444138:	sub	sp, sp, #0x60
  44413c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  444140:	add	x8, x8, #0x9d0
  444144:	cmp	x2, #0x0
  444148:	stp	x29, x30, [sp, #16]
  44414c:	stp	x26, x25, [sp, #32]
  444150:	stp	x24, x23, [sp, #48]
  444154:	stp	x22, x21, [sp, #64]
  444158:	stp	x20, x19, [sp, #80]
  44415c:	add	x29, sp, #0x10
  444160:	mov	x19, x1
  444164:	mov	x20, x0
  444168:	csel	x25, x8, x2, eq  // eq = none
  44416c:	bl	404a10 <__errno_location@plt>
  444170:	ldp	w4, w8, [x25]
  444174:	ldp	x7, x9, [x25, #40]
  444178:	ldr	w26, [x0]
  44417c:	add	x23, x25, #0x8
  444180:	orr	w22, w8, #0x1
  444184:	mov	x21, x0
  444188:	mov	x0, xzr
  44418c:	mov	x1, xzr
  444190:	mov	x2, x20
  444194:	mov	x3, x19
  444198:	mov	w5, w22
  44419c:	mov	x6, x23
  4441a0:	str	x9, [sp]
  4441a4:	bl	4434e0 <argp_parse@@Base+0xbc34>
  4441a8:	add	x24, x0, #0x1
  4441ac:	mov	x0, x24
  4441b0:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4441b4:	ldr	w4, [x25]
  4441b8:	ldp	x7, x8, [x25, #40]
  4441bc:	mov	x1, x24
  4441c0:	mov	x2, x20
  4441c4:	mov	x3, x19
  4441c8:	mov	w5, w22
  4441cc:	mov	x6, x23
  4441d0:	mov	x25, x0
  4441d4:	str	x8, [sp]
  4441d8:	bl	4434e0 <argp_parse@@Base+0xbc34>
  4441dc:	str	w26, [x21]
  4441e0:	mov	x0, x25
  4441e4:	ldp	x20, x19, [sp, #80]
  4441e8:	ldp	x22, x21, [sp, #64]
  4441ec:	ldp	x24, x23, [sp, #48]
  4441f0:	ldp	x26, x25, [sp, #32]
  4441f4:	ldp	x29, x30, [sp, #16]
  4441f8:	add	sp, sp, #0x60
  4441fc:	ret
  444200:	sub	sp, sp, #0x70
  444204:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  444208:	add	x8, x8, #0x9d0
  44420c:	cmp	x3, #0x0
  444210:	stp	x29, x30, [sp, #16]
  444214:	stp	x28, x27, [sp, #32]
  444218:	stp	x26, x25, [sp, #48]
  44421c:	stp	x24, x23, [sp, #64]
  444220:	stp	x22, x21, [sp, #80]
  444224:	stp	x20, x19, [sp, #96]
  444228:	add	x29, sp, #0x10
  44422c:	mov	x19, x2
  444230:	mov	x22, x1
  444234:	mov	x23, x0
  444238:	csel	x21, x8, x3, eq  // eq = none
  44423c:	bl	404a10 <__errno_location@plt>
  444240:	ldp	w4, w8, [x21]
  444244:	cmp	x19, #0x0
  444248:	ldp	x7, x9, [x21, #40]
  44424c:	ldr	w28, [x0]
  444250:	cset	w10, eq  // eq = none
  444254:	orr	w25, w8, w10
  444258:	add	x26, x21, #0x8
  44425c:	mov	x24, x0
  444260:	mov	x0, xzr
  444264:	mov	x1, xzr
  444268:	mov	x2, x23
  44426c:	mov	x3, x22
  444270:	mov	w5, w25
  444274:	mov	x6, x26
  444278:	str	x9, [sp]
  44427c:	bl	4434e0 <argp_parse@@Base+0xbc34>
  444280:	add	x27, x0, #0x1
  444284:	mov	x20, x0
  444288:	mov	x0, x27
  44428c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  444290:	ldr	w4, [x21]
  444294:	ldp	x7, x8, [x21, #40]
  444298:	mov	x1, x27
  44429c:	mov	x2, x23
  4442a0:	mov	x3, x22
  4442a4:	mov	w5, w25
  4442a8:	mov	x6, x26
  4442ac:	mov	x21, x0
  4442b0:	str	x8, [sp]
  4442b4:	bl	4434e0 <argp_parse@@Base+0xbc34>
  4442b8:	str	w28, [x24]
  4442bc:	cbz	x19, 4442c4 <argp_parse@@Base+0xca18>
  4442c0:	str	x20, [x19]
  4442c4:	mov	x0, x21
  4442c8:	ldp	x20, x19, [sp, #96]
  4442cc:	ldp	x22, x21, [sp, #80]
  4442d0:	ldp	x24, x23, [sp, #64]
  4442d4:	ldp	x26, x25, [sp, #48]
  4442d8:	ldp	x28, x27, [sp, #32]
  4442dc:	ldp	x29, x30, [sp, #16]
  4442e0:	add	sp, sp, #0x70
  4442e4:	ret
  4442e8:	stp	x29, x30, [sp, #-64]!
  4442ec:	stp	x20, x19, [sp, #48]
  4442f0:	adrp	x20, 479000 <_obstack_memory_used@@Base+0x324b0>
  4442f4:	stp	x22, x21, [sp, #32]
  4442f8:	ldr	w8, [x20, #4080]
  4442fc:	adrp	x21, 479000 <_obstack_memory_used@@Base+0x324b0>
  444300:	ldr	x19, [x21, #4072]
  444304:	str	x23, [sp, #16]
  444308:	cmp	w8, #0x2
  44430c:	mov	x29, sp
  444310:	b.lt	444334 <argp_parse@@Base+0xca88>  // b.tstop
  444314:	add	x22, x19, #0x18
  444318:	mov	w23, #0x1                   	// #1
  44431c:	ldr	x0, [x22], #16
  444320:	bl	404700 <free@plt>
  444324:	ldrsw	x8, [x20, #4080]
  444328:	add	x23, x23, #0x1
  44432c:	cmp	x23, x8
  444330:	b.lt	44431c <argp_parse@@Base+0xca70>  // b.tstop
  444334:	ldr	x0, [x19, #8]
  444338:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  44433c:	add	x23, x23, #0xa08
  444340:	adrp	x22, 479000 <_obstack_memory_used@@Base+0x324b0>
  444344:	cmp	x0, x23
  444348:	add	x22, x22, #0xff8
  44434c:	b.eq	44435c <argp_parse@@Base+0xcab0>  // b.none
  444350:	bl	404700 <free@plt>
  444354:	mov	w8, #0x100                 	// #256
  444358:	stp	x8, x23, [x22]
  44435c:	cmp	x19, x22
  444360:	b.eq	444370 <argp_parse@@Base+0xcac4>  // b.none
  444364:	mov	x0, x19
  444368:	bl	404700 <free@plt>
  44436c:	str	x22, [x21, #4072]
  444370:	mov	w8, #0x1                   	// #1
  444374:	str	w8, [x20, #4080]
  444378:	ldp	x20, x19, [sp, #48]
  44437c:	ldp	x22, x21, [sp, #32]
  444380:	ldr	x23, [sp, #16]
  444384:	ldp	x29, x30, [sp], #64
  444388:	ret
  44438c:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x334b0>
  444390:	add	x3, x3, #0x9d0
  444394:	mov	x2, #0xffffffffffffffff    	// #-1
  444398:	b	44439c <argp_parse@@Base+0xcaf0>
  44439c:	sub	sp, sp, #0x80
  4443a0:	stp	x29, x30, [sp, #32]
  4443a4:	add	x29, sp, #0x20
  4443a8:	stp	x28, x27, [sp, #48]
  4443ac:	stp	x26, x25, [sp, #64]
  4443b0:	stp	x24, x23, [sp, #80]
  4443b4:	stp	x22, x21, [sp, #96]
  4443b8:	stp	x20, x19, [sp, #112]
  4443bc:	mov	x22, x3
  4443c0:	stur	x2, [x29, #-8]
  4443c4:	mov	x21, x1
  4443c8:	mov	w23, w0
  4443cc:	bl	404a10 <__errno_location@plt>
  4443d0:	tbnz	w23, #31, 444520 <argp_parse@@Base+0xcc74>
  4443d4:	adrp	x25, 479000 <_obstack_memory_used@@Base+0x324b0>
  4443d8:	ldr	w8, [x25, #4080]
  4443dc:	adrp	x28, 479000 <_obstack_memory_used@@Base+0x324b0>
  4443e0:	ldr	w20, [x0]
  4443e4:	ldr	x27, [x28, #4072]
  4443e8:	mov	x19, x0
  4443ec:	cmp	w8, w23
  4443f0:	b.gt	44445c <argp_parse@@Base+0xcbb0>
  4443f4:	mov	w8, #0x7fffffff            	// #2147483647
  4443f8:	cmp	w23, w8
  4443fc:	stur	w20, [x29, #-12]
  444400:	b.eq	444524 <argp_parse@@Base+0xcc78>  // b.none
  444404:	adrp	x20, 479000 <_obstack_memory_used@@Base+0x324b0>
  444408:	add	x20, x20, #0xff8
  44440c:	add	w26, w23, #0x1
  444410:	cmp	x27, x20
  444414:	csel	x0, xzr, x27, eq  // eq = none
  444418:	sbfiz	x1, x26, #4, #32
  44441c:	bl	445a68 <argp_parse@@Base+0xe1bc>
  444420:	mov	x24, x0
  444424:	cmp	x27, x20
  444428:	str	x0, [x28, #4072]
  44442c:	b.ne	444438 <argp_parse@@Base+0xcb8c>  // b.any
  444430:	ldr	q0, [x20]
  444434:	str	q0, [x24]
  444438:	ldrsw	x8, [x25, #4080]
  44443c:	mov	w1, wzr
  444440:	add	x0, x24, x8, lsl #4
  444444:	sub	w8, w26, w8
  444448:	sbfiz	x2, x8, #4, #32
  44444c:	bl	404360 <memset@plt>
  444450:	ldur	w20, [x29, #-12]
  444454:	mov	x27, x24
  444458:	str	w26, [x25, #4080]
  44445c:	add	x28, x27, w23, uxtw #4
  444460:	mov	x27, x28
  444464:	ldr	x26, [x28]
  444468:	ldr	x23, [x27, #8]!
  44446c:	ldp	w4, w8, [x22]
  444470:	ldp	x7, x9, [x22, #40]
  444474:	ldur	x3, [x29, #-8]
  444478:	add	x24, x22, #0x8
  44447c:	orr	w25, w8, #0x1
  444480:	mov	x0, x23
  444484:	mov	x1, x26
  444488:	mov	x2, x21
  44448c:	mov	w5, w25
  444490:	mov	x6, x24
  444494:	str	x9, [sp]
  444498:	bl	4434e0 <argp_parse@@Base+0xbc34>
  44449c:	cmp	x26, x0
  4444a0:	b.hi	4444f8 <argp_parse@@Base+0xcc4c>  // b.pmore
  4444a4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4444a8:	add	x8, x8, #0xa08
  4444ac:	add	x26, x0, #0x1
  4444b0:	cmp	x23, x8
  4444b4:	str	x26, [x28]
  4444b8:	b.eq	4444c4 <argp_parse@@Base+0xcc18>  // b.none
  4444bc:	mov	x0, x23
  4444c0:	bl	404700 <free@plt>
  4444c4:	mov	x0, x26
  4444c8:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4444cc:	str	x0, [x27]
  4444d0:	ldr	w4, [x22]
  4444d4:	ldp	x7, x8, [x22, #40]
  4444d8:	ldur	x3, [x29, #-8]
  4444dc:	mov	x1, x26
  4444e0:	mov	x2, x21
  4444e4:	mov	w5, w25
  4444e8:	mov	x6, x24
  4444ec:	mov	x23, x0
  4444f0:	str	x8, [sp]
  4444f4:	bl	4434e0 <argp_parse@@Base+0xbc34>
  4444f8:	str	w20, [x19]
  4444fc:	mov	x0, x23
  444500:	ldp	x20, x19, [sp, #112]
  444504:	ldp	x22, x21, [sp, #96]
  444508:	ldp	x24, x23, [sp, #80]
  44450c:	ldp	x26, x25, [sp, #64]
  444510:	ldp	x28, x27, [sp, #48]
  444514:	ldp	x29, x30, [sp, #32]
  444518:	add	sp, sp, #0x80
  44451c:	ret
  444520:	bl	4045b0 <abort@plt>
  444524:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  444528:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x334b0>
  44452c:	add	x3, x3, #0x9d0
  444530:	b	44439c <argp_parse@@Base+0xcaf0>
  444534:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x334b0>
  444538:	add	x3, x3, #0x9d0
  44453c:	mov	x2, #0xffffffffffffffff    	// #-1
  444540:	mov	x1, x0
  444544:	mov	w0, wzr
  444548:	b	44439c <argp_parse@@Base+0xcaf0>
  44454c:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x334b0>
  444550:	mov	x2, x1
  444554:	add	x3, x3, #0x9d0
  444558:	mov	x1, x0
  44455c:	mov	w0, wzr
  444560:	b	44439c <argp_parse@@Base+0xcaf0>
  444564:	sub	sp, sp, #0x50
  444568:	movi	v0.2d, #0x0
  44456c:	cmp	w1, #0xa
  444570:	stp	x29, x30, [sp, #64]
  444574:	add	x29, sp, #0x40
  444578:	str	xzr, [sp, #48]
  44457c:	stp	q0, q0, [sp, #16]
  444580:	str	q0, [sp]
  444584:	b.eq	4445ac <argp_parse@@Base+0xcd00>  // b.none
  444588:	mov	x8, x2
  44458c:	str	w1, [sp]
  444590:	mov	x3, sp
  444594:	mov	x2, #0xffffffffffffffff    	// #-1
  444598:	mov	x1, x8
  44459c:	bl	44439c <argp_parse@@Base+0xcaf0>
  4445a0:	ldp	x29, x30, [sp, #64]
  4445a4:	add	sp, sp, #0x50
  4445a8:	ret
  4445ac:	bl	4045b0 <abort@plt>
  4445b0:	sub	sp, sp, #0x50
  4445b4:	movi	v0.2d, #0x0
  4445b8:	cmp	w1, #0xa
  4445bc:	stp	x29, x30, [sp, #64]
  4445c0:	add	x29, sp, #0x40
  4445c4:	str	xzr, [sp, #48]
  4445c8:	stp	q0, q0, [sp, #16]
  4445cc:	str	q0, [sp]
  4445d0:	b.eq	4445f8 <argp_parse@@Base+0xcd4c>  // b.none
  4445d4:	mov	x8, x3
  4445d8:	str	w1, [sp]
  4445dc:	mov	x3, sp
  4445e0:	mov	x1, x2
  4445e4:	mov	x2, x8
  4445e8:	bl	44439c <argp_parse@@Base+0xcaf0>
  4445ec:	ldp	x29, x30, [sp, #64]
  4445f0:	add	sp, sp, #0x50
  4445f4:	ret
  4445f8:	bl	4045b0 <abort@plt>
  4445fc:	sub	sp, sp, #0x50
  444600:	movi	v0.2d, #0x0
  444604:	cmp	w0, #0xa
  444608:	stp	x29, x30, [sp, #64]
  44460c:	add	x29, sp, #0x40
  444610:	str	xzr, [sp, #48]
  444614:	stp	q0, q0, [sp, #16]
  444618:	str	q0, [sp]
  44461c:	b.eq	444640 <argp_parse@@Base+0xcd94>  // b.none
  444620:	str	w0, [sp]
  444624:	mov	x3, sp
  444628:	mov	x2, #0xffffffffffffffff    	// #-1
  44462c:	mov	w0, wzr
  444630:	bl	44439c <argp_parse@@Base+0xcaf0>
  444634:	ldp	x29, x30, [sp, #64]
  444638:	add	sp, sp, #0x50
  44463c:	ret
  444640:	bl	4045b0 <abort@plt>
  444644:	sub	sp, sp, #0x50
  444648:	movi	v0.2d, #0x0
  44464c:	cmp	w0, #0xa
  444650:	stp	x29, x30, [sp, #64]
  444654:	add	x29, sp, #0x40
  444658:	str	xzr, [sp, #48]
  44465c:	stp	q0, q0, [sp, #16]
  444660:	str	q0, [sp]
  444664:	b.eq	444684 <argp_parse@@Base+0xcdd8>  // b.none
  444668:	str	w0, [sp]
  44466c:	mov	x3, sp
  444670:	mov	w0, wzr
  444674:	bl	44439c <argp_parse@@Base+0xcaf0>
  444678:	ldp	x29, x30, [sp, #64]
  44467c:	add	sp, sp, #0x50
  444680:	ret
  444684:	bl	4045b0 <abort@plt>
  444688:	sub	sp, sp, #0x50
  44468c:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  444690:	add	x9, x9, #0x9d0
  444694:	ldp	q0, q1, [x9]
  444698:	ubfx	w10, w2, #5, #3
  44469c:	mov	x11, sp
  4446a0:	mov	x8, x1
  4446a4:	stp	q0, q1, [sp]
  4446a8:	ldr	q0, [x9, #32]
  4446ac:	ldr	x9, [x9, #48]
  4446b0:	mov	x1, x0
  4446b4:	mov	x3, sp
  4446b8:	str	q0, [sp, #32]
  4446bc:	str	x9, [sp, #48]
  4446c0:	add	x9, x11, w10, uxtw #2
  4446c4:	ldr	w10, [x9, #8]
  4446c8:	mov	w0, wzr
  4446cc:	stp	x29, x30, [sp, #64]
  4446d0:	add	x29, sp, #0x40
  4446d4:	lsr	w11, w10, w2
  4446d8:	mvn	w11, w11
  4446dc:	and	w11, w11, #0x1
  4446e0:	lsl	w11, w11, w2
  4446e4:	eor	w10, w11, w10
  4446e8:	mov	x2, x8
  4446ec:	str	w10, [x9, #8]
  4446f0:	bl	44439c <argp_parse@@Base+0xcaf0>
  4446f4:	ldp	x29, x30, [sp, #64]
  4446f8:	add	sp, sp, #0x50
  4446fc:	ret
  444700:	sub	sp, sp, #0x50
  444704:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  444708:	add	x9, x9, #0x9d0
  44470c:	ldp	q0, q1, [x9]
  444710:	ubfx	w10, w1, #5, #3
  444714:	mov	x11, sp
  444718:	mov	x8, x0
  44471c:	stp	q0, q1, [sp]
  444720:	ldr	q0, [x9, #32]
  444724:	ldr	x9, [x9, #48]
  444728:	mov	x3, sp
  44472c:	mov	x2, #0xffffffffffffffff    	// #-1
  444730:	str	q0, [sp, #32]
  444734:	str	x9, [sp, #48]
  444738:	add	x9, x11, w10, uxtw #2
  44473c:	ldr	w10, [x9, #8]
  444740:	mov	w0, wzr
  444744:	stp	x29, x30, [sp, #64]
  444748:	add	x29, sp, #0x40
  44474c:	lsr	w11, w10, w1
  444750:	mvn	w11, w11
  444754:	and	w11, w11, #0x1
  444758:	lsl	w11, w11, w1
  44475c:	eor	w10, w11, w10
  444760:	mov	x1, x8
  444764:	str	w10, [x9, #8]
  444768:	bl	44439c <argp_parse@@Base+0xcaf0>
  44476c:	ldp	x29, x30, [sp, #64]
  444770:	add	sp, sp, #0x50
  444774:	ret
  444778:	sub	sp, sp, #0x50
  44477c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  444780:	add	x8, x8, #0x9d0
  444784:	ldp	q0, q1, [x8]
  444788:	ldr	q2, [x8, #32]
  44478c:	ldr	x8, [x8, #48]
  444790:	mov	x1, x0
  444794:	stp	q0, q1, [sp]
  444798:	ldr	w9, [sp, #12]
  44479c:	str	x8, [sp, #48]
  4447a0:	mov	x3, sp
  4447a4:	mov	x2, #0xffffffffffffffff    	// #-1
  4447a8:	orr	w8, w9, #0x4000000
  4447ac:	mov	w0, wzr
  4447b0:	stp	x29, x30, [sp, #64]
  4447b4:	add	x29, sp, #0x40
  4447b8:	str	q2, [sp, #32]
  4447bc:	str	w8, [sp, #12]
  4447c0:	bl	44439c <argp_parse@@Base+0xcaf0>
  4447c4:	ldp	x29, x30, [sp, #64]
  4447c8:	add	sp, sp, #0x50
  4447cc:	ret
  4447d0:	sub	sp, sp, #0x50
  4447d4:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4447d8:	add	x8, x8, #0x9d0
  4447dc:	ldp	q0, q1, [x8]
  4447e0:	ldr	q2, [x8, #32]
  4447e4:	ldr	x8, [x8, #48]
  4447e8:	mov	x2, x1
  4447ec:	stp	q0, q1, [sp]
  4447f0:	ldr	w9, [sp, #12]
  4447f4:	mov	x1, x0
  4447f8:	str	x8, [sp, #48]
  4447fc:	mov	x3, sp
  444800:	orr	w8, w9, #0x4000000
  444804:	mov	w0, wzr
  444808:	stp	x29, x30, [sp, #64]
  44480c:	add	x29, sp, #0x40
  444810:	str	q2, [sp, #32]
  444814:	str	w8, [sp, #12]
  444818:	bl	44439c <argp_parse@@Base+0xcaf0>
  44481c:	ldp	x29, x30, [sp, #64]
  444820:	add	sp, sp, #0x50
  444824:	ret
  444828:	sub	sp, sp, #0x80
  44482c:	movi	v0.2d, #0x0
  444830:	cmp	w1, #0xa
  444834:	stp	x29, x30, [sp, #112]
  444838:	add	x29, sp, #0x70
  44483c:	str	wzr, [sp, #48]
  444840:	stp	q0, q0, [sp, #16]
  444844:	str	q0, [sp]
  444848:	b.eq	444898 <argp_parse@@Base+0xcfec>  // b.none
  44484c:	ldp	q0, q1, [sp]
  444850:	ldr	w9, [sp, #48]
  444854:	ldr	q2, [sp, #32]
  444858:	mov	x8, x2
  44485c:	stur	q0, [sp, #60]
  444860:	ldr	w10, [sp, #68]
  444864:	str	w1, [sp, #56]
  444868:	str	w9, [sp, #108]
  44486c:	add	x3, sp, #0x38
  444870:	orr	w9, w10, #0x4000000
  444874:	mov	x2, #0xffffffffffffffff    	// #-1
  444878:	mov	x1, x8
  44487c:	stur	q1, [sp, #76]
  444880:	stur	q2, [sp, #92]
  444884:	str	w9, [sp, #68]
  444888:	bl	44439c <argp_parse@@Base+0xcaf0>
  44488c:	ldp	x29, x30, [sp, #112]
  444890:	add	sp, sp, #0x80
  444894:	ret
  444898:	bl	4045b0 <abort@plt>
  44489c:	sub	sp, sp, #0x50
  4448a0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4448a4:	add	x9, x9, #0x9d0
  4448a8:	ldp	q0, q1, [x9]
  4448ac:	ldr	q2, [x9, #32]
  4448b0:	ldr	x9, [x9, #48]
  4448b4:	mov	w10, #0xa                   	// #10
  4448b8:	stp	x29, x30, [sp, #64]
  4448bc:	add	x29, sp, #0x40
  4448c0:	stp	q0, q1, [sp]
  4448c4:	str	q2, [sp, #32]
  4448c8:	str	x9, [sp, #48]
  4448cc:	str	w10, [sp]
  4448d0:	cbz	x1, 4448fc <argp_parse@@Base+0xd050>
  4448d4:	cbz	x2, 4448fc <argp_parse@@Base+0xd050>
  4448d8:	mov	x8, x3
  4448dc:	stp	x1, x2, [sp, #40]
  4448e0:	mov	x3, sp
  4448e4:	mov	x2, #0xffffffffffffffff    	// #-1
  4448e8:	mov	x1, x8
  4448ec:	bl	44439c <argp_parse@@Base+0xcaf0>
  4448f0:	ldp	x29, x30, [sp, #64]
  4448f4:	add	sp, sp, #0x50
  4448f8:	ret
  4448fc:	bl	4045b0 <abort@plt>
  444900:	sub	sp, sp, #0x50
  444904:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  444908:	add	x9, x9, #0x9d0
  44490c:	ldp	q0, q1, [x9]
  444910:	ldr	x10, [x9, #48]
  444914:	stp	x29, x30, [sp, #64]
  444918:	add	x29, sp, #0x40
  44491c:	stp	q0, q1, [sp]
  444920:	ldr	q0, [x9, #32]
  444924:	mov	w9, #0xa                   	// #10
  444928:	str	x10, [sp, #48]
  44492c:	str	w9, [sp]
  444930:	str	q0, [sp, #32]
  444934:	cbz	x1, 444960 <argp_parse@@Base+0xd0b4>
  444938:	cbz	x2, 444960 <argp_parse@@Base+0xd0b4>
  44493c:	mov	x8, x3
  444940:	stp	x1, x2, [sp, #40]
  444944:	mov	x3, sp
  444948:	mov	x1, x8
  44494c:	mov	x2, x4
  444950:	bl	44439c <argp_parse@@Base+0xcaf0>
  444954:	ldp	x29, x30, [sp, #64]
  444958:	add	sp, sp, #0x50
  44495c:	ret
  444960:	bl	4045b0 <abort@plt>
  444964:	sub	sp, sp, #0x50
  444968:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  44496c:	add	x9, x9, #0x9d0
  444970:	ldp	q0, q1, [x9]
  444974:	ldr	q2, [x9, #32]
  444978:	ldr	x9, [x9, #48]
  44497c:	mov	w10, #0xa                   	// #10
  444980:	stp	x29, x30, [sp, #64]
  444984:	add	x29, sp, #0x40
  444988:	stp	q0, q1, [sp]
  44498c:	str	q2, [sp, #32]
  444990:	str	x9, [sp, #48]
  444994:	str	w10, [sp]
  444998:	cbz	x0, 4449c8 <argp_parse@@Base+0xd11c>
  44499c:	cbz	x1, 4449c8 <argp_parse@@Base+0xd11c>
  4449a0:	mov	x8, x2
  4449a4:	stp	x0, x1, [sp, #40]
  4449a8:	mov	x3, sp
  4449ac:	mov	x2, #0xffffffffffffffff    	// #-1
  4449b0:	mov	w0, wzr
  4449b4:	mov	x1, x8
  4449b8:	bl	44439c <argp_parse@@Base+0xcaf0>
  4449bc:	ldp	x29, x30, [sp, #64]
  4449c0:	add	sp, sp, #0x50
  4449c4:	ret
  4449c8:	bl	4045b0 <abort@plt>
  4449cc:	sub	sp, sp, #0x50
  4449d0:	adrp	x9, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4449d4:	add	x9, x9, #0x9d0
  4449d8:	ldp	q0, q1, [x9]
  4449dc:	ldr	q2, [x9, #32]
  4449e0:	ldr	x9, [x9, #48]
  4449e4:	mov	w10, #0xa                   	// #10
  4449e8:	stp	x29, x30, [sp, #64]
  4449ec:	add	x29, sp, #0x40
  4449f0:	stp	q0, q1, [sp]
  4449f4:	str	q2, [sp, #32]
  4449f8:	str	x9, [sp, #48]
  4449fc:	str	w10, [sp]
  444a00:	cbz	x0, 444a30 <argp_parse@@Base+0xd184>
  444a04:	cbz	x1, 444a30 <argp_parse@@Base+0xd184>
  444a08:	mov	x8, x3
  444a0c:	stp	x0, x1, [sp, #40]
  444a10:	mov	x3, sp
  444a14:	mov	w0, wzr
  444a18:	mov	x1, x2
  444a1c:	mov	x2, x8
  444a20:	bl	44439c <argp_parse@@Base+0xcaf0>
  444a24:	ldp	x29, x30, [sp, #64]
  444a28:	add	sp, sp, #0x50
  444a2c:	ret
  444a30:	bl	4045b0 <abort@plt>
  444a34:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x334b0>
  444a38:	add	x3, x3, #0x8
  444a3c:	b	44439c <argp_parse@@Base+0xcaf0>
  444a40:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x334b0>
  444a44:	mov	x2, x1
  444a48:	add	x3, x3, #0x8
  444a4c:	mov	x1, x0
  444a50:	mov	w0, wzr
  444a54:	b	44439c <argp_parse@@Base+0xcaf0>
  444a58:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x334b0>
  444a5c:	add	x3, x3, #0x8
  444a60:	mov	x2, #0xffffffffffffffff    	// #-1
  444a64:	b	44439c <argp_parse@@Base+0xcaf0>
  444a68:	adrp	x3, 47a000 <_obstack_memory_used@@Base+0x334b0>
  444a6c:	add	x3, x3, #0x8
  444a70:	mov	x2, #0xffffffffffffffff    	// #-1
  444a74:	mov	x1, x0
  444a78:	mov	w0, wzr
  444a7c:	b	44439c <argp_parse@@Base+0xcaf0>
  444a80:	stp	x29, x30, [sp, #-32]!
  444a84:	stp	x20, x19, [sp, #16]
  444a88:	mov	x20, x0
  444a8c:	mov	w19, w1
  444a90:	mov	w2, #0x5                   	// #5
  444a94:	mov	x0, xzr
  444a98:	mov	x1, x20
  444a9c:	mov	x29, sp
  444aa0:	bl	404900 <dcgettext@plt>
  444aa4:	cmp	x0, x20
  444aa8:	b.ne	444b8c <argp_parse@@Base+0xd2e0>  // b.any
  444aac:	bl	43d0b8 <argp_parse@@Base+0x580c>
  444ab0:	ldrb	w8, [x0]
  444ab4:	and	w8, w8, #0xffffffdf
  444ab8:	cmp	w8, #0x47
  444abc:	b.eq	444b20 <argp_parse@@Base+0xd274>  // b.none
  444ac0:	cmp	w8, #0x55
  444ac4:	b.ne	444b74 <argp_parse@@Base+0xd2c8>  // b.any
  444ac8:	ldrb	w8, [x0, #1]
  444acc:	and	w8, w8, #0xffffffdf
  444ad0:	cmp	w8, #0x54
  444ad4:	b.ne	444b74 <argp_parse@@Base+0xd2c8>  // b.any
  444ad8:	ldrb	w8, [x0, #2]
  444adc:	and	w8, w8, #0xffffffdf
  444ae0:	cmp	w8, #0x46
  444ae4:	b.ne	444b74 <argp_parse@@Base+0xd2c8>  // b.any
  444ae8:	ldrb	w8, [x0, #3]
  444aec:	cmp	w8, #0x2d
  444af0:	b.ne	444b74 <argp_parse@@Base+0xd2c8>  // b.any
  444af4:	ldrb	w8, [x0, #4]
  444af8:	cmp	w8, #0x38
  444afc:	b.ne	444b74 <argp_parse@@Base+0xd2c8>  // b.any
  444b00:	ldrb	w8, [x0, #5]
  444b04:	cbnz	w8, 444b74 <argp_parse@@Base+0xd2c8>
  444b08:	ldrb	w8, [x20]
  444b0c:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  444b10:	adrp	x10, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  444b14:	add	x9, x9, #0x32c
  444b18:	add	x10, x10, #0x328
  444b1c:	b	444bac <argp_parse@@Base+0xd300>
  444b20:	ldrb	w8, [x0, #1]
  444b24:	and	w8, w8, #0xffffffdf
  444b28:	cmp	w8, #0x42
  444b2c:	b.ne	444b74 <argp_parse@@Base+0xd2c8>  // b.any
  444b30:	ldrb	w8, [x0, #2]
  444b34:	cmp	w8, #0x31
  444b38:	b.ne	444b74 <argp_parse@@Base+0xd2c8>  // b.any
  444b3c:	ldrb	w8, [x0, #3]
  444b40:	cmp	w8, #0x38
  444b44:	b.ne	444b74 <argp_parse@@Base+0xd2c8>  // b.any
  444b48:	ldrb	w8, [x0, #4]
  444b4c:	cmp	w8, #0x30
  444b50:	b.ne	444b74 <argp_parse@@Base+0xd2c8>  // b.any
  444b54:	ldrb	w8, [x0, #5]
  444b58:	cmp	w8, #0x33
  444b5c:	b.ne	444b74 <argp_parse@@Base+0xd2c8>  // b.any
  444b60:	ldrb	w8, [x0, #6]
  444b64:	cmp	w8, #0x30
  444b68:	b.ne	444b74 <argp_parse@@Base+0xd2c8>  // b.any
  444b6c:	ldrb	w8, [x0, #7]
  444b70:	cbz	w8, 444b98 <argp_parse@@Base+0xd2ec>
  444b74:	adrp	x8, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  444b78:	adrp	x9, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  444b7c:	add	x8, x8, #0xafc
  444b80:	add	x9, x9, #0x788
  444b84:	cmp	w19, #0x9
  444b88:	csel	x0, x9, x8, eq  // eq = none
  444b8c:	ldp	x20, x19, [sp, #16]
  444b90:	ldp	x29, x30, [sp], #32
  444b94:	ret
  444b98:	ldrb	w8, [x20]
  444b9c:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  444ba0:	adrp	x10, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  444ba4:	add	x9, x9, #0x334
  444ba8:	add	x10, x10, #0x330
  444bac:	cmp	w8, #0x60
  444bb0:	csel	x0, x10, x9, eq  // eq = none
  444bb4:	b	444b8c <argp_parse@@Base+0xd2e0>
  444bb8:	sub	sp, sp, #0x150
  444bbc:	stp	x29, x30, [sp, #256]
  444bc0:	stp	x28, x25, [sp, #272]
  444bc4:	stp	x24, x23, [sp, #288]
  444bc8:	stp	x22, x21, [sp, #304]
  444bcc:	stp	x20, x19, [sp, #320]
  444bd0:	add	x29, sp, #0x100
  444bd4:	mov	w25, w4
  444bd8:	mov	x19, x3
  444bdc:	mov	w20, w2
  444be0:	mov	x21, x1
  444be4:	mov	w22, w0
  444be8:	bl	404720 <renameat2@plt>
  444bec:	mov	w24, w0
  444bf0:	bl	404a10 <__errno_location@plt>
  444bf4:	tbz	w24, #31, 444d58 <argp_parse@@Base+0xd4ac>
  444bf8:	ldr	w8, [x0]
  444bfc:	mov	x23, x0
  444c00:	cmp	w8, #0x16
  444c04:	b.eq	444c18 <argp_parse@@Base+0xd36c>  // b.none
  444c08:	cmp	w8, #0x5f
  444c0c:	b.eq	444c18 <argp_parse@@Base+0xd36c>  // b.none
  444c10:	cmp	w8, #0x26
  444c14:	b.ne	444d58 <argp_parse@@Base+0xd4ac>  // b.any
  444c18:	cbz	w25, 444c70 <argp_parse@@Base+0xd3c4>
  444c1c:	cmp	w25, #0x1
  444c20:	b.ne	444c5c <argp_parse@@Base+0xd3b0>  // b.any
  444c24:	mov	x3, sp
  444c28:	mov	w4, #0x100                 	// #256
  444c2c:	mov	w0, wzr
  444c30:	mov	w1, w20
  444c34:	mov	x2, x19
  444c38:	bl	404b20 <__fxstatat@plt>
  444c3c:	cbz	w0, 444c54 <argp_parse@@Base+0xd3a8>
  444c40:	ldr	w8, [x23]
  444c44:	cmp	w8, #0x2
  444c48:	b.eq	444c6c <argp_parse@@Base+0xd3c0>  // b.none
  444c4c:	cmp	w8, #0x4b
  444c50:	b.ne	444c64 <argp_parse@@Base+0xd3b8>  // b.any
  444c54:	mov	w8, #0x11                  	// #17
  444c58:	b	444c60 <argp_parse@@Base+0xd3b4>
  444c5c:	mov	w8, #0x5f                  	// #95
  444c60:	str	w8, [x23]
  444c64:	mov	w24, #0xffffffff            	// #-1
  444c68:	b	444d58 <argp_parse@@Base+0xd4ac>
  444c6c:	mov	w25, #0x1                   	// #1
  444c70:	mov	x0, x21
  444c74:	bl	403f40 <strlen@plt>
  444c78:	mov	x24, x0
  444c7c:	mov	x0, x19
  444c80:	bl	403f40 <strlen@plt>
  444c84:	cbz	x24, 444d40 <argp_parse@@Base+0xd494>
  444c88:	cbz	x0, 444d40 <argp_parse@@Base+0xd494>
  444c8c:	add	x8, x24, x21
  444c90:	ldurb	w8, [x8, #-1]
  444c94:	cmp	w8, #0x2f
  444c98:	b.eq	444cac <argp_parse@@Base+0xd400>  // b.none
  444c9c:	add	x8, x0, x19
  444ca0:	ldurb	w8, [x8, #-1]
  444ca4:	cmp	w8, #0x2f
  444ca8:	b.ne	444d40 <argp_parse@@Base+0xd494>  // b.any
  444cac:	add	x3, sp, #0x80
  444cb0:	mov	w4, #0x100                 	// #256
  444cb4:	mov	w0, wzr
  444cb8:	mov	w1, w22
  444cbc:	mov	x2, x21
  444cc0:	bl	404b20 <__fxstatat@plt>
  444cc4:	cbnz	w0, 444c64 <argp_parse@@Base+0xd3b8>
  444cc8:	cbz	w25, 444ce4 <argp_parse@@Base+0xd438>
  444ccc:	ldr	w8, [sp, #144]
  444cd0:	and	w8, w8, #0xf000
  444cd4:	cmp	w8, #0x4, lsl #12
  444cd8:	b.eq	444d40 <argp_parse@@Base+0xd494>  // b.none
  444cdc:	mov	w8, #0x2                   	// #2
  444ce0:	b	444c60 <argp_parse@@Base+0xd3b4>
  444ce4:	mov	x3, sp
  444ce8:	mov	w4, #0x100                 	// #256
  444cec:	mov	w0, wzr
  444cf0:	mov	w1, w20
  444cf4:	mov	x2, x19
  444cf8:	bl	404b20 <__fxstatat@plt>
  444cfc:	cbz	w0, 444d20 <argp_parse@@Base+0xd474>
  444d00:	ldr	w8, [x23]
  444d04:	cmp	w8, #0x2
  444d08:	b.ne	444c64 <argp_parse@@Base+0xd3b8>  // b.any
  444d0c:	ldr	w8, [sp, #144]
  444d10:	and	w8, w8, #0xf000
  444d14:	cmp	w8, #0x4, lsl #12
  444d18:	b.ne	444c64 <argp_parse@@Base+0xd3b8>  // b.any
  444d1c:	b	444d40 <argp_parse@@Base+0xd494>
  444d20:	ldr	w8, [sp, #16]
  444d24:	and	w8, w8, #0xf000
  444d28:	cmp	w8, #0x4, lsl #12
  444d2c:	b.ne	444d78 <argp_parse@@Base+0xd4cc>  // b.any
  444d30:	ldr	w8, [sp, #144]
  444d34:	and	w8, w8, #0xf000
  444d38:	cmp	w8, #0x4, lsl #12
  444d3c:	b.ne	444d80 <argp_parse@@Base+0xd4d4>  // b.any
  444d40:	mov	w0, w22
  444d44:	mov	x1, x21
  444d48:	mov	w2, w20
  444d4c:	mov	x3, x19
  444d50:	bl	404750 <renameat@plt>
  444d54:	mov	w24, w0
  444d58:	mov	w0, w24
  444d5c:	ldp	x20, x19, [sp, #320]
  444d60:	ldp	x22, x21, [sp, #304]
  444d64:	ldp	x24, x23, [sp, #288]
  444d68:	ldp	x28, x25, [sp, #272]
  444d6c:	ldp	x29, x30, [sp, #256]
  444d70:	add	sp, sp, #0x150
  444d74:	ret
  444d78:	mov	w8, #0x14                  	// #20
  444d7c:	b	444c60 <argp_parse@@Base+0xd3b4>
  444d80:	mov	w8, #0x15                  	// #21
  444d84:	b	444c60 <argp_parse@@Base+0xd3b4>
  444d88:	stp	x29, x30, [sp, #-64]!
  444d8c:	str	x23, [sp, #16]
  444d90:	mov	w23, #0x1                   	// #1
  444d94:	stp	x22, x21, [sp, #32]
  444d98:	stp	x20, x19, [sp, #48]
  444d9c:	mov	x21, x2
  444da0:	mov	x19, x1
  444da4:	mov	w20, w0
  444da8:	movk	w23, #0x7ff0, lsl #16
  444dac:	mov	x29, sp
  444db0:	mov	w0, w20
  444db4:	mov	x1, x19
  444db8:	mov	x2, x21
  444dbc:	bl	404880 <read@plt>
  444dc0:	mov	x22, x0
  444dc4:	tbz	x0, #63, 444dec <argp_parse@@Base+0xd540>
  444dc8:	bl	404a10 <__errno_location@plt>
  444dcc:	ldr	w8, [x0]
  444dd0:	cmp	w8, #0x4
  444dd4:	b.eq	444db0 <argp_parse@@Base+0xd504>  // b.none
  444dd8:	cmp	x21, x23
  444ddc:	b.cc	444dec <argp_parse@@Base+0xd540>  // b.lo, b.ul, b.last
  444de0:	cmp	w8, #0x16
  444de4:	mov	w21, #0x7ff00000            	// #2146435072
  444de8:	b.eq	444db0 <argp_parse@@Base+0xd504>  // b.none
  444dec:	mov	x0, x22
  444df0:	ldp	x20, x19, [sp, #48]
  444df4:	ldp	x22, x21, [sp, #32]
  444df8:	ldr	x23, [sp, #16]
  444dfc:	ldp	x29, x30, [sp], #64
  444e00:	ret
  444e04:	stp	x29, x30, [sp, #-64]!
  444e08:	str	x23, [sp, #16]
  444e0c:	mov	w23, #0x1                   	// #1
  444e10:	stp	x22, x21, [sp, #32]
  444e14:	stp	x20, x19, [sp, #48]
  444e18:	mov	x21, x2
  444e1c:	mov	x19, x1
  444e20:	mov	w20, w0
  444e24:	movk	w23, #0x7ff0, lsl #16
  444e28:	mov	x29, sp
  444e2c:	mov	w0, w20
  444e30:	mov	x1, x19
  444e34:	mov	x2, x21
  444e38:	bl	404580 <write@plt>
  444e3c:	mov	x22, x0
  444e40:	tbz	x0, #63, 444e68 <argp_parse@@Base+0xd5bc>
  444e44:	bl	404a10 <__errno_location@plt>
  444e48:	ldr	w8, [x0]
  444e4c:	cmp	w8, #0x4
  444e50:	b.eq	444e2c <argp_parse@@Base+0xd580>  // b.none
  444e54:	cmp	x21, x23
  444e58:	b.cc	444e68 <argp_parse@@Base+0xd5bc>  // b.lo, b.ul, b.last
  444e5c:	cmp	w8, #0x16
  444e60:	mov	w21, #0x7ff00000            	// #2146435072
  444e64:	b.eq	444e2c <argp_parse@@Base+0xd580>  // b.none
  444e68:	mov	x0, x22
  444e6c:	ldp	x20, x19, [sp, #48]
  444e70:	ldp	x22, x21, [sp, #32]
  444e74:	ldr	x23, [sp, #16]
  444e78:	ldp	x29, x30, [sp], #64
  444e7c:	ret
  444e80:	stp	x29, x30, [sp, #-32]!
  444e84:	str	x19, [sp, #16]
  444e88:	mov	x19, x0
  444e8c:	str	xzr, [x0, #8]
  444e90:	adrp	x0, 45f000 <_obstack_memory_used@@Base+0x184b0>
  444e94:	add	x0, x0, #0x50a
  444e98:	mov	w1, #0x80000               	// #524288
  444e9c:	mov	x29, sp
  444ea0:	bl	45722c <_obstack_memory_used@@Base+0x106dc>
  444ea4:	str	w0, [x19]
  444ea8:	tbnz	w0, #31, 444eb4 <argp_parse@@Base+0xd608>
  444eac:	mov	w0, wzr
  444eb0:	b	444ecc <argp_parse@@Base+0xd620>
  444eb4:	mov	x0, xzr
  444eb8:	mov	x1, xzr
  444ebc:	bl	403ef0 <getcwd@plt>
  444ec0:	cmp	x0, #0x0
  444ec4:	str	x0, [x19, #8]
  444ec8:	csetm	w0, eq  // eq = none
  444ecc:	ldr	x19, [sp, #16]
  444ed0:	ldp	x29, x30, [sp], #32
  444ed4:	ret
  444ed8:	mov	x8, x0
  444edc:	ldr	w0, [x0]
  444ee0:	tbnz	w0, #31, 444ee8 <argp_parse@@Base+0xd63c>
  444ee4:	b	403fb0 <fchdir@plt>
  444ee8:	ldr	x0, [x8, #8]
  444eec:	b	446170 <argp_parse@@Base+0xe8c4>
  444ef0:	stp	x29, x30, [sp, #-32]!
  444ef4:	str	x19, [sp, #16]
  444ef8:	mov	x19, x0
  444efc:	ldr	w0, [x0]
  444f00:	mov	x29, sp
  444f04:	tbnz	w0, #31, 444f0c <argp_parse@@Base+0xd660>
  444f08:	bl	404520 <close@plt>
  444f0c:	ldr	x0, [x19, #8]
  444f10:	ldr	x19, [sp, #16]
  444f14:	ldp	x29, x30, [sp], #32
  444f18:	b	404700 <free@plt>
  444f1c:	sub	sp, sp, #0x90
  444f20:	stp	x29, x30, [sp, #48]
  444f24:	stp	x28, x27, [sp, #64]
  444f28:	stp	x26, x25, [sp, #80]
  444f2c:	stp	x24, x23, [sp, #96]
  444f30:	stp	x22, x21, [sp, #112]
  444f34:	stp	x20, x19, [sp, #128]
  444f38:	add	x29, sp, #0x30
  444f3c:	cbz	x0, 4450e0 <argp_parse@@Base+0xd834>
  444f40:	mov	x24, x0
  444f44:	str	w1, [sp, #12]
  444f48:	mov	w22, w1
  444f4c:	bl	404a10 <__errno_location@plt>
  444f50:	mov	x23, x0
  444f54:	str	wzr, [x0]
  444f58:	mov	x0, x24
  444f5c:	bl	404480 <readdir@plt>
  444f60:	str	x22, [sp, #16]
  444f64:	cbz	x0, 4450e8 <argp_parse@@Base+0xd83c>
  444f68:	mov	x28, x0
  444f6c:	mov	x19, xzr
  444f70:	mov	x25, xzr
  444f74:	mov	x21, xzr
  444f78:	mov	x20, xzr
  444f7c:	sub	x22, x22, #0x1
  444f80:	stp	xzr, xzr, [x29, #-16]
  444f84:	str	x22, [sp, #24]
  444f88:	b	444fcc <argp_parse@@Base+0xd720>
  444f8c:	cbz	x25, 4450d8 <argp_parse@@Base+0xd82c>
  444f90:	tbnz	x25, #63, 445200 <argp_parse@@Base+0xd954>
  444f94:	mov	x0, x19
  444f98:	mov	x1, x25
  444f9c:	bl	445a68 <argp_parse@@Base+0xe1bc>
  444fa0:	mov	x19, x0
  444fa4:	add	x0, x19, x20
  444fa8:	mov	x1, x27
  444fac:	mov	x2, x26
  444fb0:	bl	403ec0 <memcpy@plt>
  444fb4:	add	x20, x26, x20
  444fb8:	mov	x0, x24
  444fbc:	str	wzr, [x23]
  444fc0:	bl	404480 <readdir@plt>
  444fc4:	mov	x28, x0
  444fc8:	cbz	x0, 4450fc <argp_parse@@Base+0xd850>
  444fcc:	mov	x27, x28
  444fd0:	ldrb	w8, [x27, #19]!
  444fd4:	cmp	w8, #0x2e
  444fd8:	b.ne	444ff4 <argp_parse@@Base+0xd748>  // b.any
  444fdc:	ldrb	w8, [x28, #20]
  444fe0:	cmp	w8, #0x2e
  444fe4:	mov	w8, #0x1                   	// #1
  444fe8:	cinc	x8, x8, eq  // eq = none
  444fec:	add	x8, x28, x8
  444ff0:	ldrb	w8, [x8, #19]
  444ff4:	cbz	w8, 444fb8 <argp_parse@@Base+0xd70c>
  444ff8:	mov	x0, x27
  444ffc:	bl	403f40 <strlen@plt>
  445000:	cmp	x22, #0x1
  445004:	add	x26, x0, #0x1
  445008:	b.hi	445040 <argp_parse@@Base+0xd794>  // b.pmore
  44500c:	ldur	x9, [x29, #-16]
  445010:	cmp	x9, x21
  445014:	b.ne	445074 <argp_parse@@Base+0xd7c8>  // b.any
  445018:	ldur	x8, [x29, #-8]
  44501c:	cbz	x8, 445080 <argp_parse@@Base+0xd7d4>
  445020:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  445024:	movk	x8, #0x555, lsl #48
  445028:	cmp	x9, x8
  44502c:	b.cs	445200 <argp_parse@@Base+0xd954>  // b.hs, b.nlast
  445030:	add	x8, x9, x9, lsr #1
  445034:	mov	x22, x19
  445038:	add	x9, x8, #0x1
  44503c:	b	445098 <argp_parse@@Base+0xd7ec>
  445040:	sub	x8, x25, x20
  445044:	cmp	x8, x26
  445048:	b.hi	444fa4 <argp_parse@@Base+0xd6f8>  // b.pmore
  44504c:	adds	x25, x26, x20
  445050:	b.cs	445200 <argp_parse@@Base+0xd954>  // b.hs, b.nlast
  445054:	cbz	x19, 444f8c <argp_parse@@Base+0xd6e0>
  445058:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  44505c:	movk	x8, #0x5554
  445060:	cmp	x25, x8
  445064:	b.cs	445200 <argp_parse@@Base+0xd954>  // b.hs, b.nlast
  445068:	add	x8, x25, x25, lsr #1
  44506c:	add	x25, x8, #0x1
  445070:	b	444f94 <argp_parse@@Base+0xd6e8>
  445074:	mov	x22, x19
  445078:	ldur	x19, [x29, #-8]
  44507c:	b	4450ac <argp_parse@@Base+0xd800>
  445080:	mov	x22, x19
  445084:	cbz	x9, 445094 <argp_parse@@Base+0xd7e8>
  445088:	lsr	x8, x9, #59
  44508c:	cbz	x8, 445098 <argp_parse@@Base+0xd7ec>
  445090:	b	445200 <argp_parse@@Base+0xd954>
  445094:	mov	w9, #0x8                   	// #8
  445098:	ldur	x0, [x29, #-8]
  44509c:	lsl	x1, x9, #4
  4450a0:	stur	x9, [x29, #-16]
  4450a4:	bl	445a68 <argp_parse@@Base+0xe1bc>
  4450a8:	mov	x19, x0
  4450ac:	mov	x0, x27
  4450b0:	bl	445ca4 <argp_parse@@Base+0xe3f8>
  4450b4:	add	x8, x19, x21, lsl #4
  4450b8:	str	x0, [x8]
  4450bc:	ldr	x9, [x28]
  4450c0:	stur	x19, [x29, #-8]
  4450c4:	mov	x19, x22
  4450c8:	ldr	x22, [sp, #24]
  4450cc:	str	x9, [x8, #8]
  4450d0:	add	x21, x21, #0x1
  4450d4:	b	444fb4 <argp_parse@@Base+0xd708>
  4450d8:	mov	w25, #0x80                  	// #128
  4450dc:	b	444f94 <argp_parse@@Base+0xd6e8>
  4450e0:	mov	x19, xzr
  4450e4:	b	4451dc <argp_parse@@Base+0xd930>
  4450e8:	mov	x20, xzr
  4450ec:	mov	x21, xzr
  4450f0:	stur	xzr, [x29, #-8]
  4450f4:	mov	x25, xzr
  4450f8:	mov	x19, xzr
  4450fc:	ldr	w22, [x23]
  445100:	cbz	w22, 445120 <argp_parse@@Base+0xd874>
  445104:	ldur	x0, [x29, #-8]
  445108:	bl	404700 <free@plt>
  44510c:	mov	x0, x19
  445110:	bl	404700 <free@plt>
  445114:	mov	x19, xzr
  445118:	str	w22, [x23]
  44511c:	b	4451dc <argp_parse@@Base+0xd930>
  445120:	ldr	x8, [sp, #16]
  445124:	sub	x8, x8, #0x1
  445128:	cmp	x8, #0x1
  44512c:	b.hi	4451a0 <argp_parse@@Base+0xd8f4>  // b.pmore
  445130:	cbz	x21, 4451bc <argp_parse@@Base+0xd910>
  445134:	ldr	w9, [sp, #12]
  445138:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44513c:	add	x8, x8, #0x338
  445140:	ldur	x24, [x29, #-8]
  445144:	ldr	x3, [x8, w9, uxtw #3]
  445148:	mov	w2, #0x10                  	// #16
  44514c:	mov	x1, x21
  445150:	mov	x0, x24
  445154:	bl	4040f0 <qsort@plt>
  445158:	add	x0, x20, #0x1
  44515c:	bl	4459e8 <argp_parse@@Base+0xe13c>
  445160:	mov	x19, x0
  445164:	mov	x20, xzr
  445168:	mov	x23, x24
  44516c:	ldr	x1, [x23]
  445170:	add	x22, x19, x20
  445174:	mov	x0, x22
  445178:	bl	404160 <stpcpy@plt>
  44517c:	ldr	x8, [x23], #16
  445180:	sub	x9, x20, x22
  445184:	add	x9, x9, x0
  445188:	add	x20, x9, #0x1
  44518c:	mov	x0, x8
  445190:	bl	404700 <free@plt>
  445194:	subs	x21, x21, #0x1
  445198:	b.ne	44516c <argp_parse@@Base+0xd8c0>  // b.any
  44519c:	b	4451d0 <argp_parse@@Base+0xd924>
  4451a0:	cmp	x25, x20
  4451a4:	b.ne	4451d8 <argp_parse@@Base+0xd92c>  // b.any
  4451a8:	add	x1, x20, #0x1
  4451ac:	mov	x0, x19
  4451b0:	bl	445a68 <argp_parse@@Base+0xe1bc>
  4451b4:	mov	x19, x0
  4451b8:	b	4451d8 <argp_parse@@Base+0xd92c>
  4451bc:	add	x0, x20, #0x1
  4451c0:	bl	4459e8 <argp_parse@@Base+0xe13c>
  4451c4:	ldur	x24, [x29, #-8]
  4451c8:	mov	x19, x0
  4451cc:	mov	x20, xzr
  4451d0:	mov	x0, x24
  4451d4:	bl	404700 <free@plt>
  4451d8:	strb	wzr, [x19, x20]
  4451dc:	mov	x0, x19
  4451e0:	ldp	x20, x19, [sp, #128]
  4451e4:	ldp	x22, x21, [sp, #112]
  4451e8:	ldp	x24, x23, [sp, #96]
  4451ec:	ldp	x26, x25, [sp, #80]
  4451f0:	ldp	x28, x27, [sp, #64]
  4451f4:	ldp	x29, x30, [sp, #48]
  4451f8:	add	sp, sp, #0x90
  4451fc:	ret
  445200:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  445204:	stp	x29, x30, [sp, #-48]!
  445208:	str	x21, [sp, #16]
  44520c:	stp	x20, x19, [sp, #32]
  445210:	mov	x29, sp
  445214:	mov	w19, w1
  445218:	bl	45718c <_obstack_memory_used@@Base+0x1063c>
  44521c:	cbz	x0, 44525c <argp_parse@@Base+0xd9b0>
  445220:	mov	w1, w19
  445224:	mov	x20, x0
  445228:	bl	444f1c <argp_parse@@Base+0xd670>
  44522c:	mov	x19, x0
  445230:	mov	x0, x20
  445234:	bl	4044f0 <closedir@plt>
  445238:	cbz	w0, 445260 <argp_parse@@Base+0xd9b4>
  44523c:	bl	404a10 <__errno_location@plt>
  445240:	ldr	w21, [x0]
  445244:	mov	x20, x0
  445248:	mov	x0, x19
  44524c:	bl	404700 <free@plt>
  445250:	mov	x19, xzr
  445254:	str	w21, [x20]
  445258:	b	445260 <argp_parse@@Base+0xd9b4>
  44525c:	mov	x19, xzr
  445260:	mov	x0, x19
  445264:	ldp	x20, x19, [sp, #32]
  445268:	ldr	x21, [sp, #16]
  44526c:	ldp	x29, x30, [sp], #48
  445270:	ret
  445274:	ldr	x0, [x0]
  445278:	ldr	x1, [x1]
  44527c:	b	404660 <strcmp@plt>
  445280:	ldr	x8, [x0, #8]
  445284:	ldr	x9, [x1, #8]
  445288:	cmp	x8, x9
  44528c:	cset	w8, hi  // hi = pmore
  445290:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  445294:	ret
  445298:	stp	x29, x30, [sp, #-32]!
  44529c:	stp	x20, x19, [sp, #16]
  4452a0:	mov	x19, x1
  4452a4:	mov	w1, wzr
  4452a8:	mov	x2, x19
  4452ac:	mov	x29, sp
  4452b0:	mov	x20, x0
  4452b4:	bl	404890 <memchr@plt>
  4452b8:	sub	x8, x0, x20
  4452bc:	cmp	x0, #0x0
  4452c0:	csinc	x0, x19, x8, eq  // eq = none
  4452c4:	ldp	x20, x19, [sp, #16]
  4452c8:	ldp	x29, x30, [sp], #32
  4452cc:	ret
  4452d0:	sub	sp, sp, #0x50
  4452d4:	str	x21, [sp, #48]
  4452d8:	stp	x20, x19, [sp, #64]
  4452dc:	mov	x21, x5
  4452e0:	mov	x20, x4
  4452e4:	mov	x5, x3
  4452e8:	mov	x4, x2
  4452ec:	mov	x19, x0
  4452f0:	stp	x29, x30, [sp, #32]
  4452f4:	add	x29, sp, #0x20
  4452f8:	cbz	x1, 445318 <argp_parse@@Base+0xda6c>
  4452fc:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  445300:	mov	x3, x1
  445304:	add	x2, x2, #0x35a
  445308:	mov	w1, #0x1                   	// #1
  44530c:	mov	x0, x19
  445310:	bl	404650 <__fprintf_chk@plt>
  445314:	b	445334 <argp_parse@@Base+0xda88>
  445318:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44531c:	add	x2, x2, #0x366
  445320:	mov	w1, #0x1                   	// #1
  445324:	mov	x0, x19
  445328:	mov	x3, x4
  44532c:	mov	x4, x5
  445330:	bl	404650 <__fprintf_chk@plt>
  445334:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  445338:	add	x1, x1, #0x36d
  44533c:	mov	w2, #0x5                   	// #5
  445340:	mov	x0, xzr
  445344:	bl	404900 <dcgettext@plt>
  445348:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44534c:	mov	x3, x0
  445350:	add	x2, x2, #0x653
  445354:	mov	w1, #0x1                   	// #1
  445358:	mov	w4, #0x7e3                 	// #2019
  44535c:	mov	x0, x19
  445360:	bl	404650 <__fprintf_chk@plt>
  445364:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  445368:	add	x1, x1, #0x371
  44536c:	mov	w2, #0x5                   	// #5
  445370:	mov	x0, xzr
  445374:	bl	404900 <dcgettext@plt>
  445378:	mov	x1, x19
  44537c:	bl	404920 <fputs_unlocked@plt>
  445380:	cmp	x21, #0x9
  445384:	b.hi	4453d8 <argp_parse@@Base+0xdb2c>  // b.pmore
  445388:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44538c:	add	x8, x8, #0x350
  445390:	adr	x9, 4453a0 <argp_parse@@Base+0xdaf4>
  445394:	ldrb	w10, [x8, x21]
  445398:	add	x9, x9, x10, lsl #2
  44539c:	br	x9
  4453a0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4453a4:	add	x1, x1, #0x43d
  4453a8:	mov	w2, #0x5                   	// #5
  4453ac:	mov	x0, xzr
  4453b0:	bl	404900 <dcgettext@plt>
  4453b4:	ldr	x3, [x20]
  4453b8:	mov	x2, x0
  4453bc:	mov	x0, x19
  4453c0:	ldp	x20, x19, [sp, #64]
  4453c4:	ldr	x21, [sp, #48]
  4453c8:	ldp	x29, x30, [sp, #32]
  4453cc:	mov	w1, #0x1                   	// #1
  4453d0:	add	sp, sp, #0x50
  4453d4:	b	404650 <__fprintf_chk@plt>
  4453d8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4453dc:	add	x1, x1, #0x57c
  4453e0:	b	44553c <argp_parse@@Base+0xdc90>
  4453e4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4453e8:	add	x1, x1, #0x44d
  4453ec:	mov	w2, #0x5                   	// #5
  4453f0:	mov	x0, xzr
  4453f4:	bl	404900 <dcgettext@plt>
  4453f8:	ldp	x3, x4, [x20]
  4453fc:	mov	x2, x0
  445400:	mov	x0, x19
  445404:	ldp	x20, x19, [sp, #64]
  445408:	ldr	x21, [sp, #48]
  44540c:	ldp	x29, x30, [sp, #32]
  445410:	mov	w1, #0x1                   	// #1
  445414:	add	sp, sp, #0x50
  445418:	b	404650 <__fprintf_chk@plt>
  44541c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  445420:	add	x1, x1, #0x464
  445424:	mov	w2, #0x5                   	// #5
  445428:	mov	x0, xzr
  44542c:	bl	404900 <dcgettext@plt>
  445430:	ldp	x3, x4, [x20]
  445434:	ldr	x5, [x20, #16]
  445438:	mov	x2, x0
  44543c:	mov	x0, x19
  445440:	ldp	x20, x19, [sp, #64]
  445444:	ldr	x21, [sp, #48]
  445448:	ldp	x29, x30, [sp, #32]
  44544c:	mov	w1, #0x1                   	// #1
  445450:	add	sp, sp, #0x50
  445454:	b	404650 <__fprintf_chk@plt>
  445458:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44545c:	add	x1, x1, #0x480
  445460:	mov	w2, #0x5                   	// #5
  445464:	mov	x0, xzr
  445468:	bl	404900 <dcgettext@plt>
  44546c:	ldp	x3, x4, [x20]
  445470:	ldp	x5, x6, [x20, #16]
  445474:	mov	x2, x0
  445478:	mov	x0, x19
  44547c:	ldp	x20, x19, [sp, #64]
  445480:	ldr	x21, [sp, #48]
  445484:	ldp	x29, x30, [sp, #32]
  445488:	mov	w1, #0x1                   	// #1
  44548c:	add	sp, sp, #0x50
  445490:	b	404650 <__fprintf_chk@plt>
  445494:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  445498:	add	x1, x1, #0x4a0
  44549c:	mov	w2, #0x5                   	// #5
  4454a0:	mov	x0, xzr
  4454a4:	bl	404900 <dcgettext@plt>
  4454a8:	ldp	x3, x4, [x20]
  4454ac:	ldp	x5, x6, [x20, #16]
  4454b0:	ldr	x7, [x20, #32]
  4454b4:	mov	x2, x0
  4454b8:	mov	x0, x19
  4454bc:	ldp	x20, x19, [sp, #64]
  4454c0:	ldr	x21, [sp, #48]
  4454c4:	ldp	x29, x30, [sp, #32]
  4454c8:	mov	w1, #0x1                   	// #1
  4454cc:	add	sp, sp, #0x50
  4454d0:	b	404650 <__fprintf_chk@plt>
  4454d4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4454d8:	add	x1, x1, #0x4c4
  4454dc:	mov	w2, #0x5                   	// #5
  4454e0:	mov	x0, xzr
  4454e4:	bl	404900 <dcgettext@plt>
  4454e8:	ldp	x3, x4, [x20]
  4454ec:	ldp	x5, x6, [x20, #16]
  4454f0:	ldp	x7, x8, [x20, #32]
  4454f4:	mov	x2, x0
  4454f8:	b	445528 <argp_parse@@Base+0xdc7c>
  4454fc:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  445500:	add	x1, x1, #0x4ec
  445504:	mov	w2, #0x5                   	// #5
  445508:	mov	x0, xzr
  44550c:	bl	404900 <dcgettext@plt>
  445510:	ldr	x9, [x20, #48]
  445514:	ldp	x3, x4, [x20]
  445518:	ldp	x5, x6, [x20, #16]
  44551c:	ldp	x7, x8, [x20, #32]
  445520:	mov	x2, x0
  445524:	str	x9, [sp, #8]
  445528:	mov	w1, #0x1                   	// #1
  44552c:	str	x8, [sp]
  445530:	b	4455a0 <argp_parse@@Base+0xdcf4>
  445534:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  445538:	add	x1, x1, #0x548
  44553c:	mov	w2, #0x5                   	// #5
  445540:	mov	x0, xzr
  445544:	bl	404900 <dcgettext@plt>
  445548:	ldp	x8, x9, [x20, #56]
  44554c:	ldp	x3, x4, [x20]
  445550:	ldp	x5, x6, [x20, #16]
  445554:	ldr	x7, [x20, #32]
  445558:	ldur	q0, [x20, #40]
  44555c:	mov	x2, x0
  445560:	str	x9, [sp, #24]
  445564:	b	445594 <argp_parse@@Base+0xdce8>
  445568:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44556c:	add	x1, x1, #0x518
  445570:	mov	w2, #0x5                   	// #5
  445574:	mov	x0, xzr
  445578:	bl	404900 <dcgettext@plt>
  44557c:	ldp	x3, x4, [x20]
  445580:	ldp	x5, x6, [x20, #16]
  445584:	ldr	x7, [x20, #32]
  445588:	ldur	q0, [x20, #40]
  44558c:	ldr	x8, [x20, #56]
  445590:	mov	x2, x0
  445594:	str	x8, [sp, #16]
  445598:	mov	w1, #0x1                   	// #1
  44559c:	str	q0, [sp]
  4455a0:	mov	x0, x19
  4455a4:	bl	404650 <__fprintf_chk@plt>
  4455a8:	ldp	x20, x19, [sp, #64]
  4455ac:	ldr	x21, [sp, #48]
  4455b0:	ldp	x29, x30, [sp, #32]
  4455b4:	add	sp, sp, #0x50
  4455b8:	ret
  4455bc:	mov	x8, xzr
  4455c0:	ldr	x9, [x4, x8, lsl #3]
  4455c4:	add	x8, x8, #0x1
  4455c8:	cbnz	x9, 4455c0 <argp_parse@@Base+0xdd14>
  4455cc:	sub	x5, x8, #0x1
  4455d0:	b	4452d0 <argp_parse@@Base+0xda24>
  4455d4:	sub	sp, sp, #0x60
  4455d8:	stp	x29, x30, [sp, #80]
  4455dc:	ldr	w9, [x4, #24]
  4455e0:	add	x29, sp, #0x50
  4455e4:	mov	w8, w9
  4455e8:	tbz	w9, #31, 44560c <argp_parse@@Base+0xdd60>
  4455ec:	add	w8, w9, #0x8
  4455f0:	cmn	w9, #0x8
  4455f4:	str	w8, [x4, #24]
  4455f8:	b.gt	44560c <argp_parse@@Base+0xdd60>
  4455fc:	ldr	x10, [x4, #8]
  445600:	sxtw	x9, w9
  445604:	add	x9, x10, x9
  445608:	b	445618 <argp_parse@@Base+0xdd6c>
  44560c:	ldr	x9, [x4]
  445610:	add	x10, x9, #0x8
  445614:	str	x10, [x4]
  445618:	ldr	x9, [x9]
  44561c:	str	x9, [sp]
  445620:	cbz	x9, 445630 <argp_parse@@Base+0xdd84>
  445624:	tbnz	w8, #31, 445638 <argp_parse@@Base+0xdd8c>
  445628:	mov	w9, w8
  44562c:	b	445654 <argp_parse@@Base+0xdda8>
  445630:	mov	x5, xzr
  445634:	b	4458ac <argp_parse@@Base+0xe000>
  445638:	add	w9, w8, #0x8
  44563c:	cmn	w8, #0x8
  445640:	str	w9, [x4, #24]
  445644:	b.gt	445654 <argp_parse@@Base+0xdda8>
  445648:	ldr	x10, [x4, #8]
  44564c:	add	x8, x10, w8, sxtw
  445650:	b	445660 <argp_parse@@Base+0xddb4>
  445654:	ldr	x8, [x4]
  445658:	add	x10, x8, #0x8
  44565c:	str	x10, [x4]
  445660:	ldr	x8, [x8]
  445664:	str	x8, [sp, #8]
  445668:	cbz	x8, 445678 <argp_parse@@Base+0xddcc>
  44566c:	tbnz	w9, #31, 445680 <argp_parse@@Base+0xddd4>
  445670:	mov	w8, w9
  445674:	b	44569c <argp_parse@@Base+0xddf0>
  445678:	mov	w5, #0x1                   	// #1
  44567c:	b	4458ac <argp_parse@@Base+0xe000>
  445680:	add	w8, w9, #0x8
  445684:	cmn	w9, #0x8
  445688:	str	w8, [x4, #24]
  44568c:	b.gt	44569c <argp_parse@@Base+0xddf0>
  445690:	ldr	x10, [x4, #8]
  445694:	add	x9, x10, w9, sxtw
  445698:	b	4456a8 <argp_parse@@Base+0xddfc>
  44569c:	ldr	x9, [x4]
  4456a0:	add	x10, x9, #0x8
  4456a4:	str	x10, [x4]
  4456a8:	ldr	x9, [x9]
  4456ac:	str	x9, [sp, #16]
  4456b0:	cbz	x9, 4456c0 <argp_parse@@Base+0xde14>
  4456b4:	tbnz	w8, #31, 4456c8 <argp_parse@@Base+0xde1c>
  4456b8:	mov	w9, w8
  4456bc:	b	4456e4 <argp_parse@@Base+0xde38>
  4456c0:	mov	w5, #0x2                   	// #2
  4456c4:	b	4458ac <argp_parse@@Base+0xe000>
  4456c8:	add	w9, w8, #0x8
  4456cc:	cmn	w8, #0x8
  4456d0:	str	w9, [x4, #24]
  4456d4:	b.gt	4456e4 <argp_parse@@Base+0xde38>
  4456d8:	ldr	x10, [x4, #8]
  4456dc:	add	x8, x10, w8, sxtw
  4456e0:	b	4456f0 <argp_parse@@Base+0xde44>
  4456e4:	ldr	x8, [x4]
  4456e8:	add	x10, x8, #0x8
  4456ec:	str	x10, [x4]
  4456f0:	ldr	x8, [x8]
  4456f4:	str	x8, [sp, #24]
  4456f8:	cbz	x8, 445708 <argp_parse@@Base+0xde5c>
  4456fc:	tbnz	w9, #31, 445710 <argp_parse@@Base+0xde64>
  445700:	mov	w8, w9
  445704:	b	44572c <argp_parse@@Base+0xde80>
  445708:	mov	w5, #0x3                   	// #3
  44570c:	b	4458ac <argp_parse@@Base+0xe000>
  445710:	add	w8, w9, #0x8
  445714:	cmn	w9, #0x8
  445718:	str	w8, [x4, #24]
  44571c:	b.gt	44572c <argp_parse@@Base+0xde80>
  445720:	ldr	x10, [x4, #8]
  445724:	add	x9, x10, w9, sxtw
  445728:	b	445738 <argp_parse@@Base+0xde8c>
  44572c:	ldr	x9, [x4]
  445730:	add	x10, x9, #0x8
  445734:	str	x10, [x4]
  445738:	ldr	x9, [x9]
  44573c:	str	x9, [sp, #32]
  445740:	cbz	x9, 445750 <argp_parse@@Base+0xdea4>
  445744:	tbnz	w8, #31, 445758 <argp_parse@@Base+0xdeac>
  445748:	mov	w9, w8
  44574c:	b	445774 <argp_parse@@Base+0xdec8>
  445750:	mov	w5, #0x4                   	// #4
  445754:	b	4458ac <argp_parse@@Base+0xe000>
  445758:	add	w9, w8, #0x8
  44575c:	cmn	w8, #0x8
  445760:	str	w9, [x4, #24]
  445764:	b.gt	445774 <argp_parse@@Base+0xdec8>
  445768:	ldr	x10, [x4, #8]
  44576c:	add	x8, x10, w8, sxtw
  445770:	b	445780 <argp_parse@@Base+0xded4>
  445774:	ldr	x8, [x4]
  445778:	add	x10, x8, #0x8
  44577c:	str	x10, [x4]
  445780:	ldr	x8, [x8]
  445784:	str	x8, [sp, #40]
  445788:	cbz	x8, 445798 <argp_parse@@Base+0xdeec>
  44578c:	tbnz	w9, #31, 4457a0 <argp_parse@@Base+0xdef4>
  445790:	mov	w8, w9
  445794:	b	4457bc <argp_parse@@Base+0xdf10>
  445798:	mov	w5, #0x5                   	// #5
  44579c:	b	4458ac <argp_parse@@Base+0xe000>
  4457a0:	add	w8, w9, #0x8
  4457a4:	cmn	w9, #0x8
  4457a8:	str	w8, [x4, #24]
  4457ac:	b.gt	4457bc <argp_parse@@Base+0xdf10>
  4457b0:	ldr	x10, [x4, #8]
  4457b4:	add	x9, x10, w9, sxtw
  4457b8:	b	4457c8 <argp_parse@@Base+0xdf1c>
  4457bc:	ldr	x9, [x4]
  4457c0:	add	x10, x9, #0x8
  4457c4:	str	x10, [x4]
  4457c8:	ldr	x9, [x9]
  4457cc:	str	x9, [sp, #48]
  4457d0:	cbz	x9, 4457e0 <argp_parse@@Base+0xdf34>
  4457d4:	tbnz	w8, #31, 4457e8 <argp_parse@@Base+0xdf3c>
  4457d8:	mov	w9, w8
  4457dc:	b	445804 <argp_parse@@Base+0xdf58>
  4457e0:	mov	w5, #0x6                   	// #6
  4457e4:	b	4458ac <argp_parse@@Base+0xe000>
  4457e8:	add	w9, w8, #0x8
  4457ec:	cmn	w8, #0x8
  4457f0:	str	w9, [x4, #24]
  4457f4:	b.gt	445804 <argp_parse@@Base+0xdf58>
  4457f8:	ldr	x10, [x4, #8]
  4457fc:	add	x8, x10, w8, sxtw
  445800:	b	445810 <argp_parse@@Base+0xdf64>
  445804:	ldr	x8, [x4]
  445808:	add	x10, x8, #0x8
  44580c:	str	x10, [x4]
  445810:	ldr	x8, [x8]
  445814:	str	x8, [sp, #56]
  445818:	cbz	x8, 445828 <argp_parse@@Base+0xdf7c>
  44581c:	tbnz	w9, #31, 445830 <argp_parse@@Base+0xdf84>
  445820:	mov	w8, w9
  445824:	b	44584c <argp_parse@@Base+0xdfa0>
  445828:	mov	w5, #0x7                   	// #7
  44582c:	b	4458ac <argp_parse@@Base+0xe000>
  445830:	add	w8, w9, #0x8
  445834:	cmn	w9, #0x8
  445838:	str	w8, [x4, #24]
  44583c:	b.gt	44584c <argp_parse@@Base+0xdfa0>
  445840:	ldr	x10, [x4, #8]
  445844:	add	x9, x10, w9, sxtw
  445848:	b	445858 <argp_parse@@Base+0xdfac>
  44584c:	ldr	x9, [x4]
  445850:	add	x10, x9, #0x8
  445854:	str	x10, [x4]
  445858:	ldr	x9, [x9]
  44585c:	str	x9, [sp, #64]
  445860:	cbz	x9, 4458a8 <argp_parse@@Base+0xdffc>
  445864:	tbz	w8, #31, 445884 <argp_parse@@Base+0xdfd8>
  445868:	add	w9, w8, #0x8
  44586c:	cmn	w8, #0x8
  445870:	str	w9, [x4, #24]
  445874:	b.gt	445884 <argp_parse@@Base+0xdfd8>
  445878:	ldr	x9, [x4, #8]
  44587c:	add	x8, x9, w8, sxtw
  445880:	b	445890 <argp_parse@@Base+0xdfe4>
  445884:	ldr	x8, [x4]
  445888:	add	x9, x8, #0x8
  44588c:	str	x9, [x4]
  445890:	ldr	x8, [x8]
  445894:	str	x8, [sp, #72]
  445898:	cmp	x8, #0x0
  44589c:	mov	w8, #0x9                   	// #9
  4458a0:	cinc	x5, x8, ne  // ne = any
  4458a4:	b	4458ac <argp_parse@@Base+0xe000>
  4458a8:	mov	w5, #0x8                   	// #8
  4458ac:	mov	x4, sp
  4458b0:	bl	4452d0 <argp_parse@@Base+0xda24>
  4458b4:	ldp	x29, x30, [sp, #80]
  4458b8:	add	sp, sp, #0x60
  4458bc:	ret
  4458c0:	sub	sp, sp, #0xf0
  4458c4:	stp	x29, x30, [sp, #224]
  4458c8:	add	x29, sp, #0xe0
  4458cc:	mov	x8, #0xffffffffffffffe0    	// #-32
  4458d0:	mov	x9, sp
  4458d4:	sub	x10, x29, #0x60
  4458d8:	movk	x8, #0xff80, lsl #32
  4458dc:	add	x11, x29, #0x10
  4458e0:	add	x9, x9, #0x80
  4458e4:	add	x10, x10, #0x20
  4458e8:	stp	x9, x8, [x29, #-16]
  4458ec:	stp	x11, x10, [x29, #-32]
  4458f0:	stp	x4, x5, [x29, #-96]
  4458f4:	stp	x6, x7, [x29, #-80]
  4458f8:	stp	q0, q1, [sp]
  4458fc:	ldp	q0, q1, [x29, #-32]
  445900:	sub	x4, x29, #0x40
  445904:	stp	q2, q3, [sp, #32]
  445908:	stp	q4, q5, [sp, #64]
  44590c:	stp	q6, q7, [sp, #96]
  445910:	stp	q0, q1, [x29, #-64]
  445914:	bl	4455d4 <argp_parse@@Base+0xdd28>
  445918:	ldp	x29, x30, [sp, #224]
  44591c:	add	sp, sp, #0xf0
  445920:	ret
  445924:	stp	x29, x30, [sp, #-16]!
  445928:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44592c:	add	x1, x1, #0x5b8
  445930:	mov	w2, #0x5                   	// #5
  445934:	mov	x0, xzr
  445938:	mov	x29, sp
  44593c:	bl	404900 <dcgettext@plt>
  445940:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  445944:	mov	x1, x0
  445948:	add	x2, x2, #0x5cd
  44594c:	mov	w0, #0x1                   	// #1
  445950:	bl	404350 <__printf_chk@plt>
  445954:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  445958:	add	x1, x1, #0x5dd
  44595c:	mov	w2, #0x5                   	// #5
  445960:	mov	x0, xzr
  445964:	bl	404900 <dcgettext@plt>
  445968:	adrp	x2, 45c000 <_obstack_memory_used@@Base+0x154b0>
  44596c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  445970:	mov	x1, x0
  445974:	add	x2, x2, #0xd3a
  445978:	add	x3, x3, #0x5f1
  44597c:	mov	w0, #0x1                   	// #1
  445980:	bl	404350 <__printf_chk@plt>
  445984:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  445988:	add	x1, x1, #0x612
  44598c:	mov	w2, #0x5                   	// #5
  445990:	mov	x0, xzr
  445994:	bl	404900 <dcgettext@plt>
  445998:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  44599c:	ldr	x1, [x8, #104]
  4459a0:	ldp	x29, x30, [sp], #16
  4459a4:	b	404920 <fputs_unlocked@plt>
  4459a8:	stp	x29, x30, [sp, #-32]!
  4459ac:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4459b0:	udiv	x8, x8, x1
  4459b4:	cmp	x8, x0
  4459b8:	str	x19, [sp, #16]
  4459bc:	mov	x29, sp
  4459c0:	b.cc	4459e4 <argp_parse@@Base+0xe138>  // b.lo, b.ul, b.last
  4459c4:	mul	x19, x1, x0
  4459c8:	mov	x0, x19
  4459cc:	bl	404250 <malloc@plt>
  4459d0:	cbz	x19, 4459d8 <argp_parse@@Base+0xe12c>
  4459d4:	cbz	x0, 4459e4 <argp_parse@@Base+0xe138>
  4459d8:	ldr	x19, [sp, #16]
  4459dc:	ldp	x29, x30, [sp], #32
  4459e0:	ret
  4459e4:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  4459e8:	stp	x29, x30, [sp, #-32]!
  4459ec:	str	x19, [sp, #16]
  4459f0:	mov	x29, sp
  4459f4:	mov	x19, x0
  4459f8:	bl	404250 <malloc@plt>
  4459fc:	cbz	x19, 445a04 <argp_parse@@Base+0xe158>
  445a00:	cbz	x0, 445a10 <argp_parse@@Base+0xe164>
  445a04:	ldr	x19, [sp, #16]
  445a08:	ldp	x29, x30, [sp], #32
  445a0c:	ret
  445a10:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  445a14:	stp	x29, x30, [sp, #-32]!
  445a18:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  445a1c:	udiv	x8, x8, x2
  445a20:	cmp	x8, x1
  445a24:	str	x19, [sp, #16]
  445a28:	mov	x29, sp
  445a2c:	b.cc	445a64 <argp_parse@@Base+0xe1b8>  // b.lo, b.ul, b.last
  445a30:	mul	x19, x2, x1
  445a34:	cbz	x0, 445a48 <argp_parse@@Base+0xe19c>
  445a38:	cbnz	x19, 445a48 <argp_parse@@Base+0xe19c>
  445a3c:	bl	404700 <free@plt>
  445a40:	mov	x0, xzr
  445a44:	b	445a58 <argp_parse@@Base+0xe1ac>
  445a48:	mov	x1, x19
  445a4c:	bl	404490 <realloc@plt>
  445a50:	cbz	x19, 445a58 <argp_parse@@Base+0xe1ac>
  445a54:	cbz	x0, 445a64 <argp_parse@@Base+0xe1b8>
  445a58:	ldr	x19, [sp, #16]
  445a5c:	ldp	x29, x30, [sp], #32
  445a60:	ret
  445a64:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  445a68:	stp	x29, x30, [sp, #-32]!
  445a6c:	str	x19, [sp, #16]
  445a70:	mov	x19, x1
  445a74:	mov	x29, sp
  445a78:	cbz	x0, 445a8c <argp_parse@@Base+0xe1e0>
  445a7c:	cbnz	x19, 445a8c <argp_parse@@Base+0xe1e0>
  445a80:	bl	404700 <free@plt>
  445a84:	mov	x0, xzr
  445a88:	b	445a9c <argp_parse@@Base+0xe1f0>
  445a8c:	mov	x1, x19
  445a90:	bl	404490 <realloc@plt>
  445a94:	cbz	x19, 445a9c <argp_parse@@Base+0xe1f0>
  445a98:	cbz	x0, 445aa8 <argp_parse@@Base+0xe1fc>
  445a9c:	ldr	x19, [sp, #16]
  445aa0:	ldp	x29, x30, [sp], #32
  445aa4:	ret
  445aa8:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  445aac:	stp	x29, x30, [sp, #-32]!
  445ab0:	ldr	x8, [x1]
  445ab4:	str	x19, [sp, #16]
  445ab8:	mov	x29, sp
  445abc:	cbz	x0, 445af4 <argp_parse@@Base+0xe248>
  445ac0:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  445ac4:	movk	x9, #0x5554
  445ac8:	udiv	x9, x9, x2
  445acc:	cmp	x9, x8
  445ad0:	b.ls	445b3c <argp_parse@@Base+0xe290>  // b.plast
  445ad4:	add	x8, x8, x8, lsr #1
  445ad8:	add	x8, x8, #0x1
  445adc:	mul	x19, x8, x2
  445ae0:	str	x8, [x1]
  445ae4:	cbnz	x19, 445b20 <argp_parse@@Base+0xe274>
  445ae8:	bl	404700 <free@plt>
  445aec:	mov	x0, xzr
  445af0:	b	445b30 <argp_parse@@Base+0xe284>
  445af4:	cbnz	x8, 445b08 <argp_parse@@Base+0xe25c>
  445af8:	mov	w8, #0x80                  	// #128
  445afc:	udiv	x8, x8, x2
  445b00:	cmp	x2, #0x80
  445b04:	cinc	x8, x8, hi  // hi = pmore
  445b08:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  445b0c:	udiv	x9, x9, x2
  445b10:	cmp	x9, x8
  445b14:	b.cc	445b3c <argp_parse@@Base+0xe290>  // b.lo, b.ul, b.last
  445b18:	mul	x19, x8, x2
  445b1c:	str	x8, [x1]
  445b20:	mov	x1, x19
  445b24:	bl	404490 <realloc@plt>
  445b28:	cbz	x19, 445b30 <argp_parse@@Base+0xe284>
  445b2c:	cbz	x0, 445b3c <argp_parse@@Base+0xe290>
  445b30:	ldr	x19, [sp, #16]
  445b34:	ldp	x29, x30, [sp], #32
  445b38:	ret
  445b3c:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  445b40:	stp	x29, x30, [sp, #-32]!
  445b44:	str	x19, [sp, #16]
  445b48:	mov	x29, sp
  445b4c:	mov	x19, x0
  445b50:	bl	404250 <malloc@plt>
  445b54:	cbz	x19, 445b5c <argp_parse@@Base+0xe2b0>
  445b58:	cbz	x0, 445b68 <argp_parse@@Base+0xe2bc>
  445b5c:	ldr	x19, [sp, #16]
  445b60:	ldp	x29, x30, [sp], #32
  445b64:	ret
  445b68:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  445b6c:	stp	x29, x30, [sp, #-32]!
  445b70:	str	x19, [sp, #16]
  445b74:	ldr	x19, [x1]
  445b78:	mov	x29, sp
  445b7c:	cbz	x0, 445bac <argp_parse@@Base+0xe300>
  445b80:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  445b84:	movk	x8, #0x5554
  445b88:	cmp	x19, x8
  445b8c:	b.cs	445bdc <argp_parse@@Base+0xe330>  // b.hs, b.nlast
  445b90:	add	x8, x19, x19, lsr #1
  445b94:	adds	x19, x8, #0x1
  445b98:	str	x19, [x1]
  445b9c:	b.ne	445bc0 <argp_parse@@Base+0xe314>  // b.any
  445ba0:	bl	404700 <free@plt>
  445ba4:	mov	x0, xzr
  445ba8:	b	445bd0 <argp_parse@@Base+0xe324>
  445bac:	cbz	x19, 445bb8 <argp_parse@@Base+0xe30c>
  445bb0:	tbz	x19, #63, 445bbc <argp_parse@@Base+0xe310>
  445bb4:	b	445bdc <argp_parse@@Base+0xe330>
  445bb8:	mov	w19, #0x80                  	// #128
  445bbc:	str	x19, [x1]
  445bc0:	mov	x1, x19
  445bc4:	bl	404490 <realloc@plt>
  445bc8:	cbz	x19, 445bd0 <argp_parse@@Base+0xe324>
  445bcc:	cbz	x0, 445bdc <argp_parse@@Base+0xe330>
  445bd0:	ldr	x19, [sp, #16]
  445bd4:	ldp	x29, x30, [sp], #32
  445bd8:	ret
  445bdc:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  445be0:	stp	x29, x30, [sp, #-32]!
  445be4:	stp	x20, x19, [sp, #16]
  445be8:	mov	x29, sp
  445bec:	mov	x19, x0
  445bf0:	bl	404250 <malloc@plt>
  445bf4:	mov	x20, x0
  445bf8:	cbz	x19, 445c00 <argp_parse@@Base+0xe354>
  445bfc:	cbz	x20, 445c20 <argp_parse@@Base+0xe374>
  445c00:	mov	x0, x20
  445c04:	mov	w1, wzr
  445c08:	mov	x2, x19
  445c0c:	bl	404360 <memset@plt>
  445c10:	mov	x0, x20
  445c14:	ldp	x20, x19, [sp, #16]
  445c18:	ldp	x29, x30, [sp], #32
  445c1c:	ret
  445c20:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  445c24:	stp	x29, x30, [sp, #-16]!
  445c28:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  445c2c:	udiv	x8, x8, x1
  445c30:	cmp	x8, x0
  445c34:	mov	x29, sp
  445c38:	b.cc	445c4c <argp_parse@@Base+0xe3a0>  // b.lo, b.ul, b.last
  445c3c:	bl	404410 <calloc@plt>
  445c40:	cbz	x0, 445c4c <argp_parse@@Base+0xe3a0>
  445c44:	ldp	x29, x30, [sp], #16
  445c48:	ret
  445c4c:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  445c50:	stp	x29, x30, [sp, #-48]!
  445c54:	stp	x20, x19, [sp, #32]
  445c58:	mov	x20, x0
  445c5c:	mov	x0, x1
  445c60:	str	x21, [sp, #16]
  445c64:	mov	x29, sp
  445c68:	mov	x19, x1
  445c6c:	bl	404250 <malloc@plt>
  445c70:	mov	x21, x0
  445c74:	cbz	x19, 445c7c <argp_parse@@Base+0xe3d0>
  445c78:	cbz	x21, 445ca0 <argp_parse@@Base+0xe3f4>
  445c7c:	mov	x0, x21
  445c80:	mov	x1, x20
  445c84:	mov	x2, x19
  445c88:	bl	403ec0 <memcpy@plt>
  445c8c:	mov	x0, x21
  445c90:	ldp	x20, x19, [sp, #32]
  445c94:	ldr	x21, [sp, #16]
  445c98:	ldp	x29, x30, [sp], #48
  445c9c:	ret
  445ca0:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  445ca4:	stp	x29, x30, [sp, #-48]!
  445ca8:	str	x21, [sp, #16]
  445cac:	stp	x20, x19, [sp, #32]
  445cb0:	mov	x29, sp
  445cb4:	mov	x19, x0
  445cb8:	bl	403f40 <strlen@plt>
  445cbc:	add	x20, x0, #0x1
  445cc0:	mov	x0, x20
  445cc4:	bl	404250 <malloc@plt>
  445cc8:	mov	x21, x0
  445ccc:	cbz	x20, 445cd4 <argp_parse@@Base+0xe428>
  445cd0:	cbz	x21, 445cf8 <argp_parse@@Base+0xe44c>
  445cd4:	mov	x0, x21
  445cd8:	mov	x1, x19
  445cdc:	mov	x2, x20
  445ce0:	bl	403ec0 <memcpy@plt>
  445ce4:	mov	x0, x21
  445ce8:	ldp	x20, x19, [sp, #32]
  445cec:	ldr	x21, [sp, #16]
  445cf0:	ldp	x29, x30, [sp], #48
  445cf4:	ret
  445cf8:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  445cfc:	stp	x29, x30, [sp, #-32]!
  445d00:	mov	x0, xzr
  445d04:	mov	x1, xzr
  445d08:	str	x19, [sp, #16]
  445d0c:	mov	x29, sp
  445d10:	bl	403ef0 <getcwd@plt>
  445d14:	mov	x19, x0
  445d18:	cbnz	x0, 445d2c <argp_parse@@Base+0xe480>
  445d1c:	bl	404a10 <__errno_location@plt>
  445d20:	ldr	w8, [x0]
  445d24:	cmp	w8, #0xc
  445d28:	b.eq	445d3c <argp_parse@@Base+0xe490>  // b.none
  445d2c:	mov	x0, x19
  445d30:	ldr	x19, [sp, #16]
  445d34:	ldp	x29, x30, [sp], #32
  445d38:	ret
  445d3c:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  445d40:	stp	x29, x30, [sp, #-16]!
  445d44:	mov	x29, sp
  445d48:	bl	404780 <strndup@plt>
  445d4c:	cbz	x0, 445d58 <argp_parse@@Base+0xe4ac>
  445d50:	ldp	x29, x30, [sp], #16
  445d54:	ret
  445d58:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  445d5c:	stp	x29, x30, [sp, #-80]!
  445d60:	cmp	w2, #0x25
  445d64:	str	x25, [sp, #16]
  445d68:	stp	x24, x23, [sp, #32]
  445d6c:	stp	x22, x21, [sp, #48]
  445d70:	stp	x20, x19, [sp, #64]
  445d74:	mov	x29, sp
  445d78:	b.cs	4460dc <argp_parse@@Base+0xe830>  // b.hs, b.nlast
  445d7c:	mov	x23, x4
  445d80:	mov	x19, x3
  445d84:	mov	w22, w2
  445d88:	mov	x21, x1
  445d8c:	mov	x20, x0
  445d90:	bl	404a10 <__errno_location@plt>
  445d94:	mov	x24, x0
  445d98:	str	wzr, [x0]
  445d9c:	bl	404690 <__ctype_b_loc@plt>
  445da0:	ldr	x8, [x0]
  445da4:	mov	x10, x20
  445da8:	ldrb	w9, [x10], #1
  445dac:	ldrh	w11, [x8, x9, lsl #1]
  445db0:	tbnz	w11, #13, 445da8 <argp_parse@@Base+0xe4fc>
  445db4:	cmp	x21, #0x0
  445db8:	add	x8, x29, #0x18
  445dbc:	csel	x21, x8, x21, eq  // eq = none
  445dc0:	cmp	w9, #0x2d
  445dc4:	b.ne	445dd0 <argp_parse@@Base+0xe524>  // b.any
  445dc8:	mov	w20, #0x4                   	// #4
  445dcc:	b	4460ac <argp_parse@@Base+0xe800>
  445dd0:	mov	x0, x20
  445dd4:	mov	x1, x21
  445dd8:	mov	w2, w22
  445ddc:	mov	w3, wzr
  445de0:	bl	404400 <__strtoul_internal@plt>
  445de4:	ldr	x25, [x21]
  445de8:	cmp	x25, x20
  445dec:	b.eq	445e18 <argp_parse@@Base+0xe56c>  // b.none
  445df0:	ldr	w20, [x24]
  445df4:	mov	x22, x0
  445df8:	cbz	w20, 445e08 <argp_parse@@Base+0xe55c>
  445dfc:	cmp	w20, #0x22
  445e00:	b.ne	445dc8 <argp_parse@@Base+0xe51c>  // b.any
  445e04:	mov	w20, #0x1                   	// #1
  445e08:	cbz	x23, 4460a8 <argp_parse@@Base+0xe7fc>
  445e0c:	ldrb	w24, [x25]
  445e10:	cbnz	w24, 445e40 <argp_parse@@Base+0xe594>
  445e14:	b	4460a8 <argp_parse@@Base+0xe7fc>
  445e18:	cbz	x23, 445dc8 <argp_parse@@Base+0xe51c>
  445e1c:	ldrb	w1, [x20]
  445e20:	cbz	w1, 445dc8 <argp_parse@@Base+0xe51c>
  445e24:	mov	x0, x23
  445e28:	bl	4047a0 <strchr@plt>
  445e2c:	cbz	x0, 445dc8 <argp_parse@@Base+0xe51c>
  445e30:	mov	w20, wzr
  445e34:	mov	w22, #0x1                   	// #1
  445e38:	ldrb	w24, [x25]
  445e3c:	cbz	w24, 4460a8 <argp_parse@@Base+0xe7fc>
  445e40:	mov	x0, x23
  445e44:	mov	w1, w24
  445e48:	bl	4047a0 <strchr@plt>
  445e4c:	cbz	x0, 445f18 <argp_parse@@Base+0xe66c>
  445e50:	sub	w10, w24, #0x45
  445e54:	mov	w8, #0x1                   	// #1
  445e58:	cmp	w10, #0x2f
  445e5c:	mov	w9, #0x400                 	// #1024
  445e60:	b.hi	445ed8 <argp_parse@@Base+0xe62c>  // b.pmore
  445e64:	mov	w11, #0x1                   	// #1
  445e68:	lsl	x10, x11, x10
  445e6c:	mov	x11, #0x8945                	// #35141
  445e70:	movk	x11, #0x30, lsl #16
  445e74:	movk	x11, #0x8144, lsl #32
  445e78:	tst	x10, x11
  445e7c:	b.eq	445ed8 <argp_parse@@Base+0xe62c>  // b.none
  445e80:	mov	w1, #0x30                  	// #48
  445e84:	mov	x0, x23
  445e88:	bl	4047a0 <strchr@plt>
  445e8c:	cbz	x0, 445ec4 <argp_parse@@Base+0xe618>
  445e90:	ldrb	w8, [x25, #1]
  445e94:	cmp	w8, #0x42
  445e98:	b.eq	445ed0 <argp_parse@@Base+0xe624>  // b.none
  445e9c:	cmp	w8, #0x44
  445ea0:	b.eq	445ed0 <argp_parse@@Base+0xe624>  // b.none
  445ea4:	cmp	w8, #0x69
  445ea8:	b.ne	445ec4 <argp_parse@@Base+0xe618>  // b.any
  445eac:	ldrb	w8, [x25, #2]
  445eb0:	mov	w9, #0x3                   	// #3
  445eb4:	cmp	w8, #0x42
  445eb8:	csinc	x8, x9, xzr, eq  // eq = none
  445ebc:	mov	w9, #0x400                 	// #1024
  445ec0:	b	445ed8 <argp_parse@@Base+0xe62c>
  445ec4:	mov	w8, #0x1                   	// #1
  445ec8:	mov	w9, #0x400                 	// #1024
  445ecc:	b	445ed8 <argp_parse@@Base+0xe62c>
  445ed0:	mov	w8, #0x2                   	// #2
  445ed4:	mov	w9, #0x3e8                 	// #1000
  445ed8:	sub	w10, w24, #0x42
  445edc:	cmp	w10, #0x35
  445ee0:	b.hi	445f18 <argp_parse@@Base+0xe66c>  // b.pmore
  445ee4:	adrp	x11, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  445ee8:	add	x11, x11, #0x682
  445eec:	adr	x12, 445f00 <argp_parse@@Base+0xe654>
  445ef0:	ldrb	w13, [x11, x10]
  445ef4:	add	x12, x12, x13, lsl #2
  445ef8:	mov	w10, wzr
  445efc:	br	x12
  445f00:	umulh	x10, x9, x22
  445f04:	mul	x11, x22, x9
  445f08:	cmp	xzr, x10
  445f0c:	cset	w10, ne  // ne = any
  445f10:	csinv	x11, x11, xzr, eq  // eq = none
  445f14:	b	446044 <argp_parse@@Base+0xe798>
  445f18:	str	x22, [x19]
  445f1c:	orr	w20, w20, #0x2
  445f20:	b	4460ac <argp_parse@@Base+0xe800>
  445f24:	umulh	x10, x9, x22
  445f28:	mul	x9, x22, x9
  445f2c:	cmp	xzr, x10
  445f30:	b	446080 <argp_parse@@Base+0xe7d4>
  445f34:	umulh	x10, x9, x22
  445f38:	mul	x11, x22, x9
  445f3c:	cmp	xzr, x10
  445f40:	cset	w10, ne  // ne = any
  445f44:	csinv	x11, x11, xzr, eq  // eq = none
  445f48:	b	44605c <argp_parse@@Base+0xe7b0>
  445f4c:	umulh	x10, x9, x22
  445f50:	mul	x11, x22, x9
  445f54:	cmp	xzr, x10
  445f58:	cset	w10, ne  // ne = any
  445f5c:	csinv	x11, x11, xzr, eq  // eq = none
  445f60:	b	44602c <argp_parse@@Base+0xe780>
  445f64:	umulh	x10, x9, x22
  445f68:	mul	x11, x22, x9
  445f6c:	cmp	xzr, x10
  445f70:	cset	w10, ne  // ne = any
  445f74:	csinv	x11, x11, xzr, eq  // eq = none
  445f78:	b	445fe4 <argp_parse@@Base+0xe738>
  445f7c:	cmp	xzr, x22, lsr #54
  445f80:	lsl	x9, x22, #10
  445f84:	b	446080 <argp_parse@@Base+0xe7d4>
  445f88:	umulh	x10, x9, x22
  445f8c:	mul	x11, x22, x9
  445f90:	cmp	xzr, x10
  445f94:	cset	w10, ne  // ne = any
  445f98:	csinv	x11, x11, xzr, eq  // eq = none
  445f9c:	b	445ffc <argp_parse@@Base+0xe750>
  445fa0:	umulh	x10, x9, x22
  445fa4:	mul	x11, x22, x9
  445fa8:	cmp	xzr, x10
  445fac:	cset	w10, ne  // ne = any
  445fb0:	csinv	x11, x11, xzr, eq  // eq = none
  445fb4:	b	446014 <argp_parse@@Base+0xe768>
  445fb8:	umulh	x10, x9, x22
  445fbc:	mul	x11, x22, x9
  445fc0:	cmp	xzr, x10
  445fc4:	csinv	x11, x11, xzr, eq  // eq = none
  445fc8:	umulh	x12, x9, x11
  445fcc:	cset	w10, ne  // ne = any
  445fd0:	cmp	xzr, x12
  445fd4:	mul	x11, x11, x9
  445fd8:	cset	w12, ne  // ne = any
  445fdc:	csinv	x11, x11, xzr, eq  // eq = none
  445fe0:	orr	w10, w10, w12
  445fe4:	umulh	x12, x9, x11
  445fe8:	cmp	xzr, x12
  445fec:	mul	x11, x11, x9
  445ff0:	cset	w12, ne  // ne = any
  445ff4:	csinv	x11, x11, xzr, eq  // eq = none
  445ff8:	orr	w10, w10, w12
  445ffc:	umulh	x12, x9, x11
  446000:	cmp	xzr, x12
  446004:	mul	x11, x11, x9
  446008:	cset	w12, ne  // ne = any
  44600c:	csinv	x11, x11, xzr, eq  // eq = none
  446010:	orr	w10, w10, w12
  446014:	umulh	x12, x9, x11
  446018:	cmp	xzr, x12
  44601c:	mul	x11, x11, x9
  446020:	cset	w12, ne  // ne = any
  446024:	csinv	x11, x11, xzr, eq  // eq = none
  446028:	orr	w10, w10, w12
  44602c:	umulh	x12, x9, x11
  446030:	cmp	xzr, x12
  446034:	mul	x11, x11, x9
  446038:	cset	w12, ne  // ne = any
  44603c:	csinv	x11, x11, xzr, eq  // eq = none
  446040:	orr	w10, w10, w12
  446044:	umulh	x12, x9, x11
  446048:	cmp	xzr, x12
  44604c:	mul	x11, x11, x9
  446050:	cset	w12, ne  // ne = any
  446054:	csinv	x11, x11, xzr, eq  // eq = none
  446058:	orr	w10, w10, w12
  44605c:	umulh	x12, x9, x11
  446060:	cmp	xzr, x12
  446064:	mul	x9, x11, x9
  446068:	cset	w11, ne  // ne = any
  44606c:	csinv	x22, x9, xzr, eq  // eq = none
  446070:	orr	w10, w10, w11
  446074:	b	446088 <argp_parse@@Base+0xe7dc>
  446078:	cmp	xzr, x22, lsr #55
  44607c:	lsl	x9, x22, #9
  446080:	cset	w10, ne  // ne = any
  446084:	csinv	x22, x9, xzr, eq  // eq = none
  446088:	add	x9, x25, x8
  44608c:	str	x9, [x21]
  446090:	ldrb	w8, [x25, x8]
  446094:	and	w9, w10, #0x1
  446098:	orr	w9, w20, w9
  44609c:	orr	w10, w9, #0x2
  4460a0:	cmp	w8, #0x0
  4460a4:	csel	w20, w9, w10, eq  // eq = none
  4460a8:	str	x22, [x19]
  4460ac:	mov	w0, w20
  4460b0:	ldp	x20, x19, [sp, #64]
  4460b4:	ldp	x22, x21, [sp, #48]
  4460b8:	ldp	x24, x23, [sp, #32]
  4460bc:	ldr	x25, [sp, #16]
  4460c0:	ldp	x29, x30, [sp], #80
  4460c4:	ret
  4460c8:	cmn	x22, x22
  4460cc:	lsl	x9, x22, #1
  4460d0:	cset	w10, cs  // cs = hs, nlast
  4460d4:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  4460d8:	b	446088 <argp_parse@@Base+0xe7dc>
  4460dc:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4460e0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4460e4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4460e8:	add	x0, x0, #0x6b8
  4460ec:	add	x1, x1, #0x6de
  4460f0:	add	x3, x3, #0x6ea
  4460f4:	mov	w2, #0x54                  	// #84
  4460f8:	bl	404a00 <__assert_fail@plt>
  4460fc:	sub	sp, sp, #0x120
  446100:	stp	x29, x30, [sp, #256]
  446104:	add	x29, sp, #0x100
  446108:	mov	x8, #0xffffffffffffffc8    	// #-56
  44610c:	mov	x9, sp
  446110:	sub	x10, x29, #0x78
  446114:	movk	x8, #0xff80, lsl #32
  446118:	add	x11, x29, #0x20
  44611c:	add	x9, x9, #0x80
  446120:	add	x10, x10, #0x38
  446124:	stp	x9, x8, [x29, #-16]
  446128:	stp	x11, x10, [x29, #-32]
  44612c:	stp	x1, x2, [x29, #-120]
  446130:	stp	x3, x4, [x29, #-104]
  446134:	stp	x5, x6, [x29, #-88]
  446138:	stur	x7, [x29, #-72]
  44613c:	stp	q0, q1, [sp]
  446140:	ldp	q0, q1, [x29, #-32]
  446144:	sub	x1, x29, #0x40
  446148:	str	x28, [sp, #272]
  44614c:	stp	q2, q3, [sp, #32]
  446150:	stp	q4, q5, [sp, #64]
  446154:	stp	q6, q7, [sp, #96]
  446158:	stp	q0, q1, [x29, #-64]
  44615c:	bl	458918 <_obstack_memory_used@@Base+0x11dc8>
  446160:	ldr	x28, [sp, #272]
  446164:	ldp	x29, x30, [sp, #256]
  446168:	add	sp, sp, #0x120
  44616c:	ret
  446170:	stp	x29, x30, [sp, #-80]!
  446174:	stp	x26, x25, [sp, #16]
  446178:	stp	x24, x23, [sp, #32]
  44617c:	stp	x22, x21, [sp, #48]
  446180:	stp	x20, x19, [sp, #64]
  446184:	mov	x29, sp
  446188:	mov	x21, x0
  44618c:	bl	4046f0 <chdir@plt>
  446190:	mov	w20, w0
  446194:	cbz	w0, 4463c8 <argp_parse@@Base+0xeb1c>
  446198:	bl	404a10 <__errno_location@plt>
  44619c:	ldr	w8, [x0]
  4461a0:	cmp	w8, #0x24
  4461a4:	b.ne	4463c8 <argp_parse@@Base+0xeb1c>  // b.any
  4461a8:	mov	x19, x0
  4461ac:	mov	x0, x21
  4461b0:	bl	403f40 <strlen@plt>
  4461b4:	cbz	x0, 446414 <argp_parse@@Base+0xeb68>
  4461b8:	mov	x22, x0
  4461bc:	cmp	x0, #0xfff
  4461c0:	b.ls	446434 <argp_parse@@Base+0xeb88>  // b.plast
  4461c4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4461c8:	add	x1, x1, #0x806
  4461cc:	mov	x0, x21
  4461d0:	bl	404790 <strspn@plt>
  4461d4:	cbz	x0, 44623c <argp_parse@@Base+0xe990>
  4461d8:	mov	x23, x0
  4461dc:	cmp	x0, #0x2
  4461e0:	b.ne	446248 <argp_parse@@Base+0xe99c>  // b.any
  4461e4:	add	x0, x21, #0x3
  4461e8:	sub	x2, x22, #0x3
  4461ec:	mov	w1, #0x2f                  	// #47
  4461f0:	mov	w24, #0x2f                  	// #47
  4461f4:	bl	404890 <memchr@plt>
  4461f8:	cbz	x0, 446368 <argp_parse@@Base+0xeabc>
  4461fc:	mov	x23, x0
  446200:	strb	wzr, [x0]
  446204:	mov	w0, #0xffffff9c            	// #-100
  446208:	mov	w2, #0x4900                	// #18688
  44620c:	mov	x1, x21
  446210:	bl	4049f0 <openat@plt>
  446214:	strb	w24, [x23]
  446218:	tbnz	w0, #31, 44639c <argp_parse@@Base+0xeaf0>
  44621c:	add	x23, x23, #0x1
  446220:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446224:	mov	w20, w0
  446228:	add	x1, x1, #0x806
  44622c:	mov	x0, x23
  446230:	bl	404790 <strspn@plt>
  446234:	add	x23, x23, x0
  446238:	b	446268 <argp_parse@@Base+0xe9bc>
  44623c:	mov	w20, #0xffffff9c            	// #-100
  446240:	mov	x23, x21
  446244:	b	446268 <argp_parse@@Base+0xe9bc>
  446248:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44624c:	add	x1, x1, #0x806
  446250:	mov	w0, #0xffffff9c            	// #-100
  446254:	mov	w2, #0x4900                	// #18688
  446258:	bl	4049f0 <openat@plt>
  44625c:	tbnz	w0, #31, 44639c <argp_parse@@Base+0xeaf0>
  446260:	mov	w20, w0
  446264:	add	x23, x21, x23
  446268:	ldrb	w8, [x23]
  44626c:	cmp	w8, #0x2f
  446270:	b.eq	446454 <argp_parse@@Base+0xeba8>  // b.none
  446274:	add	x25, x21, x22
  446278:	cmp	x23, x25
  44627c:	b.hi	446474 <argp_parse@@Base+0xebc8>  // b.pmore
  446280:	sub	x8, x25, x23
  446284:	cmp	x8, #0x1, lsl #12
  446288:	b.lt	446330 <argp_parse@@Base+0xea84>  // b.tstop
  44628c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446290:	mov	w26, #0x2f                  	// #47
  446294:	add	x21, x21, #0x806
  446298:	b	4462c0 <argp_parse@@Base+0xea14>
  44629c:	strb	w26, [x24], #1
  4462a0:	mov	x0, x24
  4462a4:	mov	x1, x21
  4462a8:	bl	404790 <strspn@plt>
  4462ac:	add	x23, x24, x0
  4462b0:	sub	x8, x25, x23
  4462b4:	cmp	x8, #0xfff
  4462b8:	mov	w20, w22
  4462bc:	b.le	446334 <argp_parse@@Base+0xea88>
  4462c0:	mov	w1, #0x2f                  	// #47
  4462c4:	mov	w2, #0x1000                	// #4096
  4462c8:	mov	x0, x23
  4462cc:	bl	4047c0 <memrchr@plt>
  4462d0:	cbz	x0, 446368 <argp_parse@@Base+0xeabc>
  4462d4:	sub	x8, x0, x23
  4462d8:	mov	x24, x0
  4462dc:	cmp	x8, #0x1, lsl #12
  4462e0:	strb	wzr, [x0]
  4462e4:	b.ge	4463f4 <argp_parse@@Base+0xeb48>  // b.tcont
  4462e8:	mov	w2, #0x4900                	// #18688
  4462ec:	mov	w0, w20
  4462f0:	mov	x1, x23
  4462f4:	bl	4049f0 <openat@plt>
  4462f8:	tbnz	w0, #31, 4463a4 <argp_parse@@Base+0xeaf8>
  4462fc:	mov	w22, w0
  446300:	tbnz	w20, #31, 44629c <argp_parse@@Base+0xe9f0>
  446304:	mov	w0, w20
  446308:	bl	404520 <close@plt>
  44630c:	cbz	w0, 44629c <argp_parse@@Base+0xe9f0>
  446310:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446314:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446318:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44631c:	add	x0, x0, #0x79f
  446320:	add	x1, x1, #0x741
  446324:	add	x3, x3, #0x7ac
  446328:	mov	w2, #0x40                  	// #64
  44632c:	bl	404a00 <__assert_fail@plt>
  446330:	mov	w22, w20
  446334:	cmp	x23, x25
  446338:	b.cs	446374 <argp_parse@@Base+0xeac8>  // b.hs, b.nlast
  44633c:	mov	w2, #0x4900                	// #18688
  446340:	mov	w0, w22
  446344:	mov	x1, x23
  446348:	bl	4049f0 <openat@plt>
  44634c:	tbnz	w0, #31, 4463e4 <argp_parse@@Base+0xeb38>
  446350:	mov	w20, w0
  446354:	tbnz	w22, #31, 446378 <argp_parse@@Base+0xeacc>
  446358:	mov	w0, w22
  44635c:	bl	404520 <close@plt>
  446360:	cbz	w0, 446378 <argp_parse@@Base+0xeacc>
  446364:	b	446310 <argp_parse@@Base+0xea64>
  446368:	mov	w8, #0x24                  	// #36
  44636c:	str	w8, [x19]
  446370:	b	4463c4 <argp_parse@@Base+0xeb18>
  446374:	mov	w20, w22
  446378:	mov	w0, w20
  44637c:	bl	403fb0 <fchdir@plt>
  446380:	cbnz	w0, 4463ac <argp_parse@@Base+0xeb00>
  446384:	tbnz	w20, #31, 446394 <argp_parse@@Base+0xeae8>
  446388:	mov	w0, w20
  44638c:	bl	404520 <close@plt>
  446390:	cbnz	w0, 446310 <argp_parse@@Base+0xea64>
  446394:	mov	w20, wzr
  446398:	b	4463c8 <argp_parse@@Base+0xeb1c>
  44639c:	ldr	w21, [x19]
  4463a0:	b	4463c0 <argp_parse@@Base+0xeb14>
  4463a4:	mov	w8, #0x2f                  	// #47
  4463a8:	strb	w8, [x24]
  4463ac:	ldr	w21, [x19]
  4463b0:	tbnz	w20, #31, 4463c0 <argp_parse@@Base+0xeb14>
  4463b4:	mov	w0, w20
  4463b8:	bl	404520 <close@plt>
  4463bc:	cbnz	w0, 446310 <argp_parse@@Base+0xea64>
  4463c0:	str	w21, [x19]
  4463c4:	mov	w20, #0xffffffff            	// #-1
  4463c8:	mov	w0, w20
  4463cc:	ldp	x20, x19, [sp, #64]
  4463d0:	ldp	x22, x21, [sp, #48]
  4463d4:	ldp	x24, x23, [sp, #32]
  4463d8:	ldp	x26, x25, [sp, #16]
  4463dc:	ldp	x29, x30, [sp], #80
  4463e0:	ret
  4463e4:	mov	w20, w22
  4463e8:	ldr	w21, [x19]
  4463ec:	tbz	w20, #31, 4463b4 <argp_parse@@Base+0xeb08>
  4463f0:	b	4463c0 <argp_parse@@Base+0xeb14>
  4463f4:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4463f8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4463fc:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446400:	add	x0, x0, #0x78c
  446404:	add	x1, x1, #0x741
  446408:	add	x3, x3, #0x74e
  44640c:	mov	w2, #0xb3                  	// #179
  446410:	bl	404a00 <__assert_fail@plt>
  446414:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446418:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44641c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446420:	add	x0, x0, #0x739
  446424:	add	x1, x1, #0x741
  446428:	add	x3, x3, #0x74e
  44642c:	mov	w2, #0x7e                  	// #126
  446430:	bl	404a00 <__assert_fail@plt>
  446434:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446438:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44643c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446440:	add	x0, x0, #0x765
  446444:	add	x1, x1, #0x741
  446448:	add	x3, x3, #0x74e
  44644c:	mov	w2, #0x7f                  	// #127
  446450:	bl	404a00 <__assert_fail@plt>
  446454:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446458:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44645c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446460:	add	x0, x0, #0x771
  446464:	add	x1, x1, #0x741
  446468:	add	x3, x3, #0x74e
  44646c:	mov	w2, #0xa2                  	// #162
  446470:	bl	404a00 <__assert_fail@plt>
  446474:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446478:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44647c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446480:	add	x0, x0, #0x77d
  446484:	add	x1, x1, #0x741
  446488:	add	x3, x3, #0x74e
  44648c:	mov	w2, #0xa3                  	// #163
  446490:	bl	404a00 <__assert_fail@plt>
  446494:	sub	sp, sp, #0x100
  446498:	stp	x29, x30, [sp, #208]
  44649c:	add	x29, sp, #0xd0
  4464a0:	mov	x8, #0xffffffffffffffd0    	// #-48
  4464a4:	mov	x9, sp
  4464a8:	sub	x10, x29, #0x50
  4464ac:	stp	x20, x19, [sp, #240]
  4464b0:	mov	w19, w0
  4464b4:	movk	x8, #0xff80, lsl #32
  4464b8:	add	x11, x29, #0x30
  4464bc:	cmp	w1, #0xb
  4464c0:	add	x9, x9, #0x80
  4464c4:	add	x10, x10, #0x30
  4464c8:	stp	x22, x21, [sp, #224]
  4464cc:	stp	x2, x3, [x29, #-80]
  4464d0:	stp	x4, x5, [x29, #-64]
  4464d4:	stp	x6, x7, [x29, #-48]
  4464d8:	stp	q1, q2, [sp, #16]
  4464dc:	stp	q3, q4, [sp, #48]
  4464e0:	str	q0, [sp]
  4464e4:	stp	q5, q6, [sp, #80]
  4464e8:	str	q7, [sp, #112]
  4464ec:	stp	x9, x8, [x29, #-16]
  4464f0:	stp	x11, x10, [x29, #-32]
  4464f4:	b.hi	446540 <argp_parse@@Base+0xec94>  // b.pmore
  4464f8:	mov	w8, #0x1                   	// #1
  4464fc:	lsl	w8, w8, w1
  446500:	mov	w9, #0x514                 	// #1300
  446504:	tst	w8, w9
  446508:	b.ne	446578 <argp_parse@@Base+0xeccc>  // b.any
  44650c:	mov	w9, #0xa0a                 	// #2570
  446510:	tst	w8, w9
  446514:	b.ne	44656c <argp_parse@@Base+0xecc0>  // b.any
  446518:	cbnz	w1, 446540 <argp_parse@@Base+0xec94>
  44651c:	ldursw	x8, [x29, #-8]
  446520:	tbz	w8, #31, 446620 <argp_parse@@Base+0xed74>
  446524:	add	w9, w8, #0x8
  446528:	cmn	w8, #0x8
  44652c:	stur	w9, [x29, #-8]
  446530:	b.gt	446620 <argp_parse@@Base+0xed74>
  446534:	ldur	x9, [x29, #-24]
  446538:	add	x8, x9, x8
  44653c:	b	44662c <argp_parse@@Base+0xed80>
  446540:	sub	w8, w1, #0x400
  446544:	cmp	w8, #0xa
  446548:	b.hi	4465fc <argp_parse@@Base+0xed50>  // b.pmore
  44654c:	mov	w9, #0x1                   	// #1
  446550:	lsl	w9, w9, w8
  446554:	mov	w10, #0x285                 	// #645
  446558:	tst	w9, w10
  44655c:	b.ne	446578 <argp_parse@@Base+0xeccc>  // b.any
  446560:	mov	w10, #0x502                 	// #1282
  446564:	tst	w9, w10
  446568:	b.eq	4465d0 <argp_parse@@Base+0xed24>  // b.none
  44656c:	mov	w0, w19
  446570:	bl	404810 <fcntl@plt>
  446574:	b	4465b4 <argp_parse@@Base+0xed08>
  446578:	ldursw	x8, [x29, #-8]
  44657c:	tbz	w8, #31, 44659c <argp_parse@@Base+0xecf0>
  446580:	add	w9, w8, #0x8
  446584:	cmn	w8, #0x8
  446588:	stur	w9, [x29, #-8]
  44658c:	b.gt	44659c <argp_parse@@Base+0xecf0>
  446590:	ldur	x9, [x29, #-24]
  446594:	add	x8, x9, x8
  446598:	b	4465a8 <argp_parse@@Base+0xecfc>
  44659c:	ldur	x8, [x29, #-32]
  4465a0:	add	x9, x8, #0x8
  4465a4:	stur	x9, [x29, #-32]
  4465a8:	ldr	w2, [x8]
  4465ac:	mov	w0, w19
  4465b0:	bl	404810 <fcntl@plt>
  4465b4:	mov	w20, w0
  4465b8:	mov	w0, w20
  4465bc:	ldp	x20, x19, [sp, #240]
  4465c0:	ldp	x22, x21, [sp, #224]
  4465c4:	ldp	x29, x30, [sp, #208]
  4465c8:	add	sp, sp, #0x100
  4465cc:	ret
  4465d0:	cmp	w8, #0x6
  4465d4:	b.ne	4465fc <argp_parse@@Base+0xed50>  // b.any
  4465d8:	ldursw	x8, [x29, #-8]
  4465dc:	tbz	w8, #31, 44663c <argp_parse@@Base+0xed90>
  4465e0:	add	w9, w8, #0x8
  4465e4:	cmn	w8, #0x8
  4465e8:	stur	w9, [x29, #-8]
  4465ec:	b.gt	44663c <argp_parse@@Base+0xed90>
  4465f0:	ldur	x9, [x29, #-24]
  4465f4:	add	x8, x9, x8
  4465f8:	b	446648 <argp_parse@@Base+0xed9c>
  4465fc:	ldursw	x8, [x29, #-8]
  446600:	tbz	w8, #31, 4466a8 <argp_parse@@Base+0xedfc>
  446604:	add	w9, w8, #0x8
  446608:	cmn	w8, #0x8
  44660c:	stur	w9, [x29, #-8]
  446610:	b.gt	4466a8 <argp_parse@@Base+0xedfc>
  446614:	ldur	x9, [x29, #-24]
  446618:	add	x8, x9, x8
  44661c:	b	4466b4 <argp_parse@@Base+0xee08>
  446620:	ldur	x8, [x29, #-32]
  446624:	add	x9, x8, #0x8
  446628:	stur	x9, [x29, #-32]
  44662c:	ldr	w2, [x8]
  446630:	mov	w0, w19
  446634:	mov	w1, wzr
  446638:	b	4465b0 <argp_parse@@Base+0xed04>
  44663c:	ldur	x8, [x29, #-32]
  446640:	add	x9, x8, #0x8
  446644:	stur	x9, [x29, #-32]
  446648:	adrp	x22, 47a000 <_obstack_memory_used@@Base+0x334b0>
  44664c:	ldr	w9, [x22, #2824]
  446650:	ldr	w21, [x8]
  446654:	tbnz	w9, #31, 4466d0 <argp_parse@@Base+0xee24>
  446658:	mov	w1, #0x406                 	// #1030
  44665c:	mov	w0, w19
  446660:	mov	w2, w21
  446664:	bl	404810 <fcntl@plt>
  446668:	mov	w20, w0
  44666c:	tbz	w0, #31, 4466c4 <argp_parse@@Base+0xee18>
  446670:	bl	404a10 <__errno_location@plt>
  446674:	ldr	w8, [x0]
  446678:	cmp	w8, #0x16
  44667c:	b.ne	4466c4 <argp_parse@@Base+0xee18>  // b.any
  446680:	mov	w0, w19
  446684:	mov	w1, wzr
  446688:	mov	w2, w21
  44668c:	bl	404810 <fcntl@plt>
  446690:	mov	w20, w0
  446694:	tbnz	w0, #31, 4465b8 <argp_parse@@Base+0xed0c>
  446698:	mov	w8, #0xffffffff            	// #-1
  44669c:	str	w8, [x22, #2824]
  4466a0:	mov	w8, #0x1                   	// #1
  4466a4:	b	4466f0 <argp_parse@@Base+0xee44>
  4466a8:	ldur	x8, [x29, #-32]
  4466ac:	add	x9, x8, #0x8
  4466b0:	stur	x9, [x29, #-32]
  4466b4:	ldr	x2, [x8]
  4466b8:	mov	w0, w19
  4466bc:	bl	404810 <fcntl@plt>
  4466c0:	b	4465b4 <argp_parse@@Base+0xed08>
  4466c4:	mov	w8, #0x1                   	// #1
  4466c8:	str	w8, [x22, #2824]
  4466cc:	b	4465b8 <argp_parse@@Base+0xed0c>
  4466d0:	mov	w0, w19
  4466d4:	mov	w1, wzr
  4466d8:	mov	w2, w21
  4466dc:	bl	404810 <fcntl@plt>
  4466e0:	ldr	w8, [x22, #2824]
  4466e4:	mov	w20, w0
  4466e8:	cmn	w8, #0x1
  4466ec:	cset	w8, eq  // eq = none
  4466f0:	cbz	w8, 4465b8 <argp_parse@@Base+0xed0c>
  4466f4:	tbnz	w20, #31, 4465b8 <argp_parse@@Base+0xed0c>
  4466f8:	mov	w1, #0x1                   	// #1
  4466fc:	mov	w0, w20
  446700:	bl	404810 <fcntl@plt>
  446704:	tbnz	w0, #31, 446720 <argp_parse@@Base+0xee74>
  446708:	orr	w2, w0, #0x1
  44670c:	mov	w1, #0x2                   	// #2
  446710:	mov	w0, w20
  446714:	bl	404810 <fcntl@plt>
  446718:	cmn	w0, #0x1
  44671c:	b.ne	4465b8 <argp_parse@@Base+0xed0c>  // b.any
  446720:	bl	404a10 <__errno_location@plt>
  446724:	ldr	w21, [x0]
  446728:	mov	x19, x0
  44672c:	mov	w0, w20
  446730:	bl	404520 <close@plt>
  446734:	str	w21, [x19]
  446738:	mov	w20, #0xffffffff            	// #-1
  44673c:	b	4465b8 <argp_parse@@Base+0xed0c>
  446740:	mov	w5, wzr
  446744:	mov	w6, wzr
  446748:	b	4598b4 <_obstack_memory_used@@Base+0x12d64>
  44674c:	mov	x6, x5
  446750:	mov	w5, wzr
  446754:	mov	w7, wzr
  446758:	b	458ad8 <_obstack_memory_used@@Base+0x11f88>
  44675c:	mov	w5, #0x1                   	// #1
  446760:	mov	w6, wzr
  446764:	b	4598b4 <_obstack_memory_used@@Base+0x12d64>
  446768:	mov	x6, x5
  44676c:	mov	w5, #0x1                   	// #1
  446770:	mov	w7, wzr
  446774:	b	458ad8 <_obstack_memory_used@@Base+0x11f88>
  446778:	sub	sp, sp, #0x40
  44677c:	stp	x29, x30, [sp, #16]
  446780:	add	x29, sp, #0x10
  446784:	cmp	x0, #0x0
  446788:	sub	x8, x29, #0x4
  44678c:	stp	x20, x19, [sp, #48]
  446790:	csel	x20, x8, x0, eq  // eq = none
  446794:	mov	x0, x20
  446798:	stp	x22, x21, [sp, #32]
  44679c:	mov	x22, x2
  4467a0:	mov	x19, x1
  4467a4:	bl	403eb0 <mbrtowc@plt>
  4467a8:	mov	x21, x0
  4467ac:	cbz	x22, 4467d0 <argp_parse@@Base+0xef24>
  4467b0:	cmn	x21, #0x2
  4467b4:	b.cc	4467d0 <argp_parse@@Base+0xef24>  // b.lo, b.ul, b.last
  4467b8:	mov	w0, wzr
  4467bc:	bl	4572d0 <_obstack_memory_used@@Base+0x10780>
  4467c0:	tbnz	w0, #0, 4467d0 <argp_parse@@Base+0xef24>
  4467c4:	ldrb	w8, [x19]
  4467c8:	mov	w21, #0x1                   	// #1
  4467cc:	str	w8, [x20]
  4467d0:	mov	x0, x21
  4467d4:	ldp	x20, x19, [sp, #48]
  4467d8:	ldp	x22, x21, [sp, #32]
  4467dc:	ldp	x29, x30, [sp, #16]
  4467e0:	add	sp, sp, #0x40
  4467e4:	ret

00000000004467e8 <_obstack_begin@@Base>:
  4467e8:	stp	x29, x30, [sp, #-48]!
  4467ec:	stp	x20, x19, [sp, #32]
  4467f0:	ldrb	w8, [x0, #80]
  4467f4:	cmp	x2, #0x0
  4467f8:	mov	w9, #0x10                  	// #16
  4467fc:	csel	x20, x9, x2, eq  // eq = none
  446800:	mov	w9, #0xfe0                 	// #4064
  446804:	cmp	x1, #0x0
  446808:	str	x21, [sp, #16]
  44680c:	mov	x19, x0
  446810:	str	x4, [x0, #64]
  446814:	csel	x0, x9, x1, eq  // eq = none
  446818:	and	w8, w8, #0xfe
  44681c:	sub	x21, x20, #0x1
  446820:	mov	x29, sp
  446824:	strb	w8, [x19, #80]
  446828:	str	x0, [x19]
  44682c:	stp	x21, x3, [x19, #48]
  446830:	blr	x3
  446834:	str	x0, [x19, #8]
  446838:	cbz	x0, 446884 <_obstack_begin@@Base+0x9c>
  44683c:	ldr	x10, [x19]
  446840:	add	x8, x0, x21
  446844:	neg	x9, x20
  446848:	add	x8, x8, #0x10
  44684c:	and	x8, x8, x9
  446850:	stp	x8, x8, [x19, #16]
  446854:	add	x8, x0, x10
  446858:	str	x8, [x0]
  44685c:	str	x8, [x19, #32]
  446860:	str	xzr, [x0, #8]
  446864:	ldrb	w8, [x19, #80]
  446868:	ldr	x21, [sp, #16]
  44686c:	mov	w0, #0x1                   	// #1
  446870:	and	w8, w8, #0xfffffff9
  446874:	strb	w8, [x19, #80]
  446878:	ldp	x20, x19, [sp, #32]
  44687c:	ldp	x29, x30, [sp], #48
  446880:	ret
  446884:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  446888:	ldr	x8, [x8, #64]
  44688c:	blr	x8

0000000000446890 <_obstack_begin_1@@Base>:
  446890:	stp	x29, x30, [sp, #-48]!
  446894:	stp	x20, x19, [sp, #32]
  446898:	ldrb	w8, [x0, #80]
  44689c:	cmp	x2, #0x0
  4468a0:	mov	w9, #0x10                  	// #16
  4468a4:	csel	x20, x9, x2, eq  // eq = none
  4468a8:	mov	w9, #0xfe0                 	// #4064
  4468ac:	cmp	x1, #0x0
  4468b0:	str	x21, [sp, #16]
  4468b4:	csel	x1, x9, x1, eq  // eq = none
  4468b8:	orr	w8, w8, #0x1
  4468bc:	sub	x21, x20, #0x1
  4468c0:	mov	x19, x0
  4468c4:	stp	x4, x5, [x0, #64]
  4468c8:	strb	w8, [x0, #80]
  4468cc:	str	x1, [x0]
  4468d0:	stp	x21, x3, [x0, #48]
  4468d4:	mov	x0, x5
  4468d8:	mov	x29, sp
  4468dc:	blr	x3
  4468e0:	str	x0, [x19, #8]
  4468e4:	cbz	x0, 446930 <_obstack_begin_1@@Base+0xa0>
  4468e8:	ldr	x10, [x19]
  4468ec:	add	x8, x0, x21
  4468f0:	neg	x9, x20
  4468f4:	add	x8, x8, #0x10
  4468f8:	and	x8, x8, x9
  4468fc:	stp	x8, x8, [x19, #16]
  446900:	add	x8, x0, x10
  446904:	str	x8, [x0]
  446908:	str	x8, [x19, #32]
  44690c:	str	xzr, [x0, #8]
  446910:	ldrb	w8, [x19, #80]
  446914:	ldr	x21, [sp, #16]
  446918:	mov	w0, #0x1                   	// #1
  44691c:	and	w8, w8, #0xfffffff9
  446920:	strb	w8, [x19, #80]
  446924:	ldp	x20, x19, [sp, #32]
  446928:	ldp	x29, x30, [sp], #48
  44692c:	ret
  446930:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  446934:	ldr	x8, [x8, #64]
  446938:	blr	x8

000000000044693c <_obstack_newchunk@@Base>:
  44693c:	stp	x29, x30, [sp, #-64]!
  446940:	str	x23, [sp, #16]
  446944:	stp	x22, x21, [sp, #32]
  446948:	stp	x20, x19, [sp, #48]
  44694c:	ldp	x9, x8, [x0, #16]
  446950:	ldr	x10, [x0, #48]
  446954:	ldr	x11, [x0]
  446958:	mov	x29, sp
  44695c:	sub	x20, x8, x9
  446960:	adds	x8, x20, x1
  446964:	lsr	x9, x20, #3
  446968:	cset	w12, cs  // cs = hs, nlast
  44696c:	adds	x10, x8, x10
  446970:	add	x9, x9, #0x64
  446974:	cset	w8, cs  // cs = hs, nlast
  446978:	adds	x9, x9, x10
  44697c:	csel	x9, x10, x9, cs  // cs = hs, nlast
  446980:	cmp	x9, x11
  446984:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  446988:	tbnz	w12, #0, 446a74 <_obstack_newchunk@@Base+0x138>
  44698c:	tbnz	w8, #0, 446a74 <_obstack_newchunk@@Base+0x138>
  446990:	ldrb	w8, [x0, #80]
  446994:	ldr	x21, [x0, #8]
  446998:	mov	x19, x0
  44699c:	tbnz	w8, #0, 4469b0 <_obstack_newchunk@@Base+0x74>
  4469a0:	ldr	x8, [x19, #56]
  4469a4:	mov	x0, x23
  4469a8:	blr	x8
  4469ac:	b	4469c0 <_obstack_newchunk@@Base+0x84>
  4469b0:	ldr	x8, [x19, #56]
  4469b4:	ldr	x0, [x19, #72]
  4469b8:	mov	x1, x23
  4469bc:	blr	x8
  4469c0:	mov	x22, x0
  4469c4:	cbz	x0, 446a74 <_obstack_newchunk@@Base+0x138>
  4469c8:	add	x8, x22, x23
  4469cc:	str	x22, [x19, #8]
  4469d0:	str	x21, [x22, #8]
  4469d4:	str	x8, [x19, #32]
  4469d8:	str	x8, [x22]
  4469dc:	ldr	x8, [x19, #48]
  4469e0:	ldr	x1, [x19, #16]
  4469e4:	mov	x2, x20
  4469e8:	add	x9, x22, x8
  4469ec:	add	x9, x9, #0x10
  4469f0:	bic	x23, x9, x8
  4469f4:	mov	x0, x23
  4469f8:	bl	403ec0 <memcpy@plt>
  4469fc:	ldrb	w8, [x19, #80]
  446a00:	tbnz	w8, #1, 446a4c <_obstack_newchunk@@Base+0x110>
  446a04:	ldr	x8, [x19, #48]
  446a08:	ldr	x9, [x19, #16]
  446a0c:	add	x10, x21, x8
  446a10:	add	x10, x10, #0x10
  446a14:	bic	x8, x10, x8
  446a18:	cmp	x9, x8
  446a1c:	b.ne	446a4c <_obstack_newchunk@@Base+0x110>  // b.any
  446a20:	ldr	x8, [x21, #8]
  446a24:	str	x8, [x22, #8]
  446a28:	ldrb	w8, [x19, #80]
  446a2c:	tbnz	w8, #0, 446a40 <_obstack_newchunk@@Base+0x104>
  446a30:	ldr	x8, [x19, #64]
  446a34:	mov	x0, x21
  446a38:	blr	x8
  446a3c:	b	446a4c <_obstack_newchunk@@Base+0x110>
  446a40:	ldp	x8, x0, [x19, #64]
  446a44:	mov	x1, x21
  446a48:	blr	x8
  446a4c:	ldrb	w8, [x19, #80]
  446a50:	add	x9, x23, x20
  446a54:	stp	x23, x9, [x19, #16]
  446a58:	ldr	x23, [sp, #16]
  446a5c:	and	w8, w8, #0xfffffffd
  446a60:	strb	w8, [x19, #80]
  446a64:	ldp	x20, x19, [sp, #48]
  446a68:	ldp	x22, x21, [sp, #32]
  446a6c:	ldp	x29, x30, [sp], #64
  446a70:	ret
  446a74:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  446a78:	ldr	x8, [x8, #64]
  446a7c:	blr	x8

0000000000446a80 <_obstack_allocated_p@@Base>:
  446a80:	ldr	x8, [x0, #8]
  446a84:	cbnz	x8, 446a98 <_obstack_allocated_p@@Base+0x18>
  446a88:	mov	w0, wzr
  446a8c:	ret
  446a90:	ldr	x8, [x8, #8]
  446a94:	cbz	x8, 446a88 <_obstack_allocated_p@@Base+0x8>
  446a98:	cmp	x8, x1
  446a9c:	b.cs	446a90 <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  446aa0:	ldr	x9, [x8]
  446aa4:	cmp	x9, x1
  446aa8:	b.cc	446a90 <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  446aac:	mov	w0, #0x1                   	// #1
  446ab0:	ret

0000000000446ab4 <_obstack_free@@Base>:
  446ab4:	stp	x29, x30, [sp, #-48]!
  446ab8:	stp	x20, x19, [sp, #32]
  446abc:	ldr	x8, [x0, #8]
  446ac0:	mov	x20, x1
  446ac4:	str	x21, [sp, #16]
  446ac8:	mov	x29, sp
  446acc:	cbz	x8, 446b28 <_obstack_free@@Base+0x74>
  446ad0:	mov	x19, x0
  446ad4:	b	446af8 <_obstack_free@@Base+0x44>
  446ad8:	ldr	x9, [x19, #64]
  446adc:	mov	x0, x8
  446ae0:	blr	x9
  446ae4:	ldrb	w8, [x19, #80]
  446ae8:	orr	w8, w8, #0x2
  446aec:	strb	w8, [x19, #80]
  446af0:	mov	x8, x21
  446af4:	cbz	x21, 446b28 <_obstack_free@@Base+0x74>
  446af8:	cmp	x8, x20
  446afc:	b.cs	446b0c <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  446b00:	ldr	x9, [x8]
  446b04:	cmp	x9, x20
  446b08:	b.cs	446b30 <_obstack_free@@Base+0x7c>  // b.hs, b.nlast
  446b0c:	ldrb	w9, [x19, #80]
  446b10:	ldr	x21, [x8, #8]
  446b14:	tbz	w9, #0, 446ad8 <_obstack_free@@Base+0x24>
  446b18:	ldp	x9, x0, [x19, #64]
  446b1c:	mov	x1, x8
  446b20:	blr	x9
  446b24:	b	446ae4 <_obstack_free@@Base+0x30>
  446b28:	cbz	x20, 446b40 <_obstack_free@@Base+0x8c>
  446b2c:	bl	4045b0 <abort@plt>
  446b30:	stp	x20, x20, [x19, #16]
  446b34:	ldr	x9, [x8]
  446b38:	str	x8, [x19, #8]
  446b3c:	str	x9, [x19, #32]
  446b40:	ldp	x20, x19, [sp, #32]
  446b44:	ldr	x21, [sp, #16]
  446b48:	ldp	x29, x30, [sp], #48
  446b4c:	ret

0000000000446b50 <_obstack_memory_used@@Base>:
  446b50:	ldr	x8, [x0, #8]
  446b54:	cbz	x8, 446b70 <_obstack_memory_used@@Base+0x20>
  446b58:	mov	x0, xzr
  446b5c:	sub	x10, x0, x8
  446b60:	ldp	x9, x8, [x8]
  446b64:	add	x0, x10, x9
  446b68:	cbnz	x8, 446b5c <_obstack_memory_used@@Base+0xc>
  446b6c:	ret
  446b70:	mov	x0, xzr
  446b74:	ret
  446b78:	stp	x29, x30, [sp, #-32]!
  446b7c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  446b80:	str	x19, [sp, #16]
  446b84:	ldr	x19, [x8, #96]
  446b88:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x154b0>
  446b8c:	add	x1, x1, #0x1c3
  446b90:	mov	w2, #0x5                   	// #5
  446b94:	mov	x0, xzr
  446b98:	mov	x29, sp
  446b9c:	bl	404900 <dcgettext@plt>
  446ba0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  446ba4:	mov	x3, x0
  446ba8:	add	x2, x2, #0x50b
  446bac:	mov	w1, #0x1                   	// #1
  446bb0:	mov	x0, x19
  446bb4:	bl	404650 <__fprintf_chk@plt>
  446bb8:	adrp	x8, 479000 <_obstack_memory_used@@Base+0x324b0>
  446bbc:	ldr	w0, [x8, #4064]
  446bc0:	bl	403f70 <exit@plt>
  446bc4:	sub	sp, sp, #0x60
  446bc8:	stp	x29, x30, [sp, #32]
  446bcc:	stp	x24, x23, [sp, #48]
  446bd0:	stp	x22, x21, [sp, #64]
  446bd4:	stp	x20, x19, [sp, #80]
  446bd8:	ldrb	w8, [x2]
  446bdc:	mov	x19, x0
  446be0:	add	x29, sp, #0x20
  446be4:	cbz	w8, 446c4c <_obstack_memory_used@@Base+0xfc>
  446be8:	adrp	x23, 47a000 <_obstack_memory_used@@Base+0x334b0>
  446bec:	ldr	w8, [x23, #2828]
  446bf0:	mov	x20, x2
  446bf4:	mov	w21, w1
  446bf8:	cbz	w8, 446c54 <_obstack_memory_used@@Base+0x104>
  446bfc:	tbnz	w8, #31, 446cb4 <_obstack_memory_used@@Base+0x164>
  446c00:	mov	x0, x20
  446c04:	bl	403f40 <strlen@plt>
  446c08:	add	x0, x0, #0x1b
  446c0c:	cmp	x0, #0xfc1
  446c10:	b.cc	446c20 <_obstack_memory_used@@Base+0xd0>  // b.lo, b.ul, b.last
  446c14:	bl	404250 <malloc@plt>
  446c18:	mov	x19, x0
  446c1c:	cbz	x0, 446cc8 <_obstack_memory_used@@Base+0x178>
  446c20:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446c24:	add	x3, x3, #0x7f6
  446c28:	mov	w1, #0x1                   	// #1
  446c2c:	mov	x2, #0xffffffffffffffff    	// #-1
  446c30:	mov	x0, x19
  446c34:	mov	w4, w21
  446c38:	bl	403f60 <__sprintf_chk@plt>
  446c3c:	add	x0, x19, w0, sxtw
  446c40:	mov	x1, x20
  446c44:	bl	404840 <strcpy@plt>
  446c48:	b	446cc8 <_obstack_memory_used@@Base+0x178>
  446c4c:	strb	wzr, [x19]
  446c50:	b	446cc8 <_obstack_memory_used@@Base+0x178>
  446c54:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446c58:	add	x0, x0, #0x7d1
  446c5c:	mov	w1, #0x4900                	// #18688
  446c60:	bl	404280 <open@plt>
  446c64:	tbnz	w0, #31, 446cbc <_obstack_memory_used@@Base+0x16c>
  446c68:	mov	w22, w0
  446c6c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446c70:	add	x3, x3, #0x7df
  446c74:	mov	x0, sp
  446c78:	mov	w1, #0x1                   	// #1
  446c7c:	mov	w2, #0x20                  	// #32
  446c80:	mov	w4, w22
  446c84:	mov	w24, #0x1                   	// #1
  446c88:	bl	403f60 <__sprintf_chk@plt>
  446c8c:	mov	x0, sp
  446c90:	mov	w1, wzr
  446c94:	bl	4045f0 <access@plt>
  446c98:	cmp	w0, #0x0
  446c9c:	cneg	w8, w24, ne  // ne = any
  446ca0:	mov	w0, w22
  446ca4:	str	w8, [x23, #2828]
  446ca8:	bl	404520 <close@plt>
  446cac:	ldr	w8, [x23, #2828]
  446cb0:	tbz	w8, #31, 446c00 <_obstack_memory_used@@Base+0xb0>
  446cb4:	mov	x19, xzr
  446cb8:	b	446cc8 <_obstack_memory_used@@Base+0x178>
  446cbc:	mov	w8, #0xffffffff            	// #-1
  446cc0:	mov	x19, xzr
  446cc4:	str	w8, [x23, #2828]
  446cc8:	mov	x0, x19
  446ccc:	ldp	x20, x19, [sp, #80]
  446cd0:	ldp	x22, x21, [sp, #64]
  446cd4:	ldp	x24, x23, [sp, #48]
  446cd8:	ldp	x29, x30, [sp, #32]
  446cdc:	add	sp, sp, #0x60
  446ce0:	ret
  446ce4:	stp	x29, x30, [sp, #-16]!
  446ce8:	adrp	x9, 47b000 <argp_program_version@@Base+0x8>
  446cec:	ldr	x3, [x9]
  446cf0:	ldrb	w9, [x2, #56]
  446cf4:	mov	x8, x1
  446cf8:	mov	x1, x0
  446cfc:	ubfx	x10, x3, #21, #11
  446d00:	and	w10, w10, #0x10
  446d04:	and	w9, w9, #0xffffffef
  446d08:	orr	w9, w9, w10
  446d0c:	orr	w9, w9, #0x80
  446d10:	strb	w9, [x2, #56]
  446d14:	mov	x0, x2
  446d18:	mov	x2, x8
  446d1c:	mov	x29, sp
  446d20:	bl	446d5c <_obstack_memory_used@@Base+0x20c>
  446d24:	cbz	w0, 446d50 <_obstack_memory_used@@Base+0x200>
  446d28:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446d2c:	add	x8, x8, #0xb10
  446d30:	ldr	x8, [x8, w0, sxtw #3]
  446d34:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446d38:	add	x9, x9, #0x98f
  446d3c:	mov	w2, #0x5                   	// #5
  446d40:	add	x1, x9, x8
  446d44:	mov	x0, xzr
  446d48:	ldp	x29, x30, [sp], #16
  446d4c:	b	404900 <dcgettext@plt>
  446d50:	mov	x0, xzr
  446d54:	ldp	x29, x30, [sp], #16
  446d58:	ret
  446d5c:	sub	sp, sp, #0x130
  446d60:	stp	x29, x30, [sp, #208]
  446d64:	add	x29, sp, #0xd0
  446d68:	stp	x28, x27, [sp, #224]
  446d6c:	stp	x26, x25, [sp, #240]
  446d70:	stp	x24, x23, [sp, #256]
  446d74:	stp	x22, x21, [sp, #272]
  446d78:	stp	x20, x19, [sp, #288]
  446d7c:	stur	wzr, [x29, #-44]
  446d80:	ldrb	w8, [x0, #56]
  446d84:	ldp	x20, x9, [x0]
  446d88:	mov	w10, #0x90                  	// #144
  446d8c:	mov	x21, x3
  446d90:	mov	x22, x2
  446d94:	mov	x23, x1
  446d98:	mov	x19, x0
  446d9c:	and	w8, w8, w10
  446da0:	cmp	x9, #0xe7
  446da4:	stp	xzr, x3, [x0, #16]
  446da8:	str	xzr, [x0, #48]
  446dac:	strb	w8, [x0, #56]
  446db0:	b.ls	4474bc <_obstack_memory_used@@Base+0x96c>  // b.plast
  446db4:	mov	w8, #0xe8                  	// #232
  446db8:	str	x8, [x19, #16]
  446dbc:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  446dc0:	movk	x8, #0x5554
  446dc4:	movk	x8, #0x555, lsl #48
  446dc8:	movi	v0.2d, #0x0
  446dcc:	cmp	x22, x8
  446dd0:	mov	w8, #0xf                   	// #15
  446dd4:	str	xzr, [x20, #224]
  446dd8:	stp	q0, q0, [x20, #192]
  446ddc:	stp	q0, q0, [x20, #160]
  446de0:	stp	q0, q0, [x20, #128]
  446de4:	stp	q0, q0, [x20, #96]
  446de8:	stp	q0, q0, [x20, #64]
  446dec:	stp	q0, q0, [x20, #32]
  446df0:	stp	q0, q0, [x20]
  446df4:	str	w8, [x20, #128]
  446df8:	b.hi	446ff4 <_obstack_memory_used@@Base+0x4a4>  // b.pmore
  446dfc:	add	x24, x22, #0x1
  446e00:	lsl	x0, x24, #4
  446e04:	str	x24, [x20, #8]
  446e08:	bl	404250 <malloc@plt>
  446e0c:	mov	w8, #0x1                   	// #1
  446e10:	str	x0, [x20]
  446e14:	mov	x25, x8
  446e18:	cmp	x8, x22
  446e1c:	lsl	x8, x8, #1
  446e20:	b.ls	446e14 <_obstack_memory_used@@Base+0x2c4>  // b.plast
  446e24:	mov	w0, #0x18                  	// #24
  446e28:	mov	x1, x25
  446e2c:	bl	404410 <calloc@plt>
  446e30:	sub	x8, x25, #0x1
  446e34:	str	x0, [x20, #64]
  446e38:	str	x8, [x20, #136]
  446e3c:	bl	404730 <__ctype_get_mb_cur_max@plt>
  446e40:	str	w0, [x20, #180]
  446e44:	mov	w0, #0xe                   	// #14
  446e48:	bl	404210 <nl_langinfo@plt>
  446e4c:	ldrb	w8, [x0]
  446e50:	orr	w8, w8, #0x20
  446e54:	cmp	w8, #0x75
  446e58:	b.ne	446ea4 <_obstack_memory_used@@Base+0x354>  // b.any
  446e5c:	ldrb	w8, [x0, #1]
  446e60:	orr	w8, w8, #0x20
  446e64:	cmp	w8, #0x74
  446e68:	b.ne	446ea4 <_obstack_memory_used@@Base+0x354>  // b.any
  446e6c:	ldrb	w8, [x0, #2]
  446e70:	orr	w8, w8, #0x20
  446e74:	cmp	w8, #0x66
  446e78:	b.ne	446ea4 <_obstack_memory_used@@Base+0x354>  // b.any
  446e7c:	ldrb	w8, [x0, #3]!
  446e80:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a4b0>
  446e84:	add	x1, x1, #0xda4
  446e88:	cmp	w8, #0x2d
  446e8c:	cinc	x0, x0, eq  // eq = none
  446e90:	bl	404660 <strcmp@plt>
  446e94:	cbnz	w0, 446ea4 <_obstack_memory_used@@Base+0x354>
  446e98:	ldrb	w8, [x20, #176]
  446e9c:	orr	w8, w8, #0x4
  446ea0:	strb	w8, [x20, #176]
  446ea4:	ldrb	w8, [x20, #176]
  446ea8:	ldr	w9, [x20, #180]
  446eac:	and	w10, w8, #0xfffffff7
  446eb0:	cmp	w9, #0x2
  446eb4:	strb	w10, [x20, #176]
  446eb8:	b.lt	446f34 <_obstack_memory_used@@Base+0x3e4>  // b.tstop
  446ebc:	tbnz	w8, #2, 446f28 <_obstack_memory_used@@Base+0x3d8>
  446ec0:	mov	w0, #0x20                  	// #32
  446ec4:	mov	w1, #0x1                   	// #1
  446ec8:	bl	404410 <calloc@plt>
  446ecc:	str	x0, [x20, #120]
  446ed0:	cbz	x0, 446ff4 <_obstack_memory_used@@Base+0x4a4>
  446ed4:	mov	x25, xzr
  446ed8:	mov	w26, #0x1                   	// #1
  446edc:	b	446eec <_obstack_memory_used@@Base+0x39c>
  446ee0:	add	x25, x25, #0x1
  446ee4:	cmp	x25, #0x40
  446ee8:	b.eq	44700c <_obstack_memory_used@@Base+0x4bc>  // b.none
  446eec:	mov	w0, w25
  446ef0:	bl	404590 <btowc@plt>
  446ef4:	cmn	w0, #0x1
  446ef8:	b.eq	446f10 <_obstack_memory_used@@Base+0x3c0>  // b.none
  446efc:	ldr	x8, [x20, #120]
  446f00:	lsl	x10, x26, x25
  446f04:	ldr	x9, [x8]
  446f08:	orr	x9, x9, x10
  446f0c:	str	x9, [x8]
  446f10:	cmp	w25, w0
  446f14:	b.eq	446ee0 <_obstack_memory_used@@Base+0x390>  // b.none
  446f18:	ldrb	w8, [x20, #176]
  446f1c:	orr	w8, w8, #0x8
  446f20:	strb	w8, [x20, #176]
  446f24:	b	446ee0 <_obstack_memory_used@@Base+0x390>
  446f28:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  446f2c:	add	x8, x8, #0xb98
  446f30:	str	x8, [x20, #120]
  446f34:	ldr	x8, [x20]
  446f38:	cbz	x8, 446ff4 <_obstack_memory_used@@Base+0x4a4>
  446f3c:	ldr	x8, [x20, #64]
  446f40:	cbz	x8, 446ff4 <_obstack_memory_used@@Base+0x4a4>
  446f44:	stur	wzr, [x29, #-44]
  446f48:	ldr	x26, [x19, #40]
  446f4c:	and	x25, x21, #0x400000
  446f50:	movi	v0.2d, #0x0
  446f54:	ubfx	x8, x21, #22, #1
  446f58:	stp	q0, q0, [sp, #128]
  446f5c:	strb	w8, [sp, #144]
  446f60:	orr	x8, x25, x26
  446f64:	cmp	x8, #0x0
  446f68:	cset	w27, ne  // ne = any
  446f6c:	stp	q0, q0, [sp, #80]
  446f70:	stur	q0, [sp, #112]
  446f74:	stp	q0, q0, [sp, #48]
  446f78:	stp	q0, q0, [sp, #16]
  446f7c:	str	x23, [sp, #8]
  446f80:	stp	x22, x22, [sp, #88]
  446f84:	str	x26, [sp, #128]
  446f88:	strb	w27, [sp, #147]
  446f8c:	ldr	w8, [x20, #180]
  446f90:	cmp	x22, #0x1
  446f94:	str	w8, [sp, #152]
  446f98:	ldrb	w9, [x20, #176]
  446f9c:	stp	x22, x22, [sp, #104]
  446fa0:	ubfx	w10, w9, #2, #1
  446fa4:	ubfx	w9, w9, #3, #1
  446fa8:	strb	w10, [sp, #145]
  446fac:	strb	w9, [sp, #146]
  446fb0:	b.lt	447124 <_obstack_memory_used@@Base+0x5d4>  // b.tstop
  446fb4:	cmp	w8, #0x2
  446fb8:	b.lt	446fd8 <_obstack_memory_used@@Base+0x488>  // b.tstop
  446fbc:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  446fc0:	cmp	x22, x8
  446fc4:	b.hi	4475b0 <_obstack_memory_used@@Base+0xa60>  // b.pmore
  446fc8:	lsl	x0, x24, #2
  446fcc:	bl	404250 <malloc@plt>
  446fd0:	cbz	x0, 4475b0 <_obstack_memory_used@@Base+0xa60>
  446fd4:	str	x0, [sp, #24]
  446fd8:	cbz	w27, 447130 <_obstack_memory_used@@Base+0x5e0>
  446fdc:	mov	x0, x24
  446fe0:	bl	404250 <malloc@plt>
  446fe4:	cbz	x0, 4475b0 <_obstack_memory_used@@Base+0xa60>
  446fe8:	mov	w27, #0x1                   	// #1
  446fec:	str	x0, [sp, #16]
  446ff0:	b	447134 <_obstack_memory_used@@Base+0x5e4>
  446ff4:	mov	w21, #0xc                   	// #12
  446ff8:	mov	x0, x20
  446ffc:	stur	w21, [x29, #-44]
  447000:	bl	448758 <_obstack_memory_used@@Base+0x1c08>
  447004:	stp	xzr, xzr, [x19]
  447008:	b	447f48 <_obstack_memory_used@@Base+0x13f8>
  44700c:	mov	x26, xzr
  447010:	mov	w27, #0x1                   	// #1
  447014:	b	447024 <_obstack_memory_used@@Base+0x4d4>
  447018:	add	x26, x26, #0x1
  44701c:	cmp	x26, #0x40
  447020:	b.eq	447064 <_obstack_memory_used@@Base+0x514>  // b.none
  447024:	add	x25, x26, #0x40
  447028:	mov	w0, w25
  44702c:	bl	404590 <btowc@plt>
  447030:	cmn	w0, #0x1
  447034:	b.eq	44704c <_obstack_memory_used@@Base+0x4fc>  // b.none
  447038:	ldr	x8, [x20, #120]
  44703c:	lsl	x10, x27, x26
  447040:	ldr	x9, [x8, #8]
  447044:	orr	x9, x9, x10
  447048:	str	x9, [x8, #8]
  44704c:	cmp	w25, w0
  447050:	b.eq	447018 <_obstack_memory_used@@Base+0x4c8>  // b.none
  447054:	ldrb	w8, [x20, #176]
  447058:	orr	w8, w8, #0x8
  44705c:	strb	w8, [x20, #176]
  447060:	b	447018 <_obstack_memory_used@@Base+0x4c8>
  447064:	mov	x26, xzr
  447068:	mov	w27, #0x1                   	// #1
  44706c:	b	44707c <_obstack_memory_used@@Base+0x52c>
  447070:	add	x26, x26, #0x1
  447074:	cmp	x26, #0x40
  447078:	b.eq	4470c4 <_obstack_memory_used@@Base+0x574>  // b.none
  44707c:	add	x25, x26, #0x80
  447080:	mov	w0, w25
  447084:	bl	404590 <btowc@plt>
  447088:	cmn	w0, #0x1
  44708c:	b.eq	4470a4 <_obstack_memory_used@@Base+0x554>  // b.none
  447090:	ldr	x8, [x20, #120]
  447094:	lsl	x10, x27, x26
  447098:	ldr	x9, [x8, #16]
  44709c:	orr	x9, x9, x10
  4470a0:	str	x9, [x8, #16]
  4470a4:	cmp	w25, #0x7f
  4470a8:	b.hi	447070 <_obstack_memory_used@@Base+0x520>  // b.pmore
  4470ac:	cmp	w25, w0
  4470b0:	b.eq	447070 <_obstack_memory_used@@Base+0x520>  // b.none
  4470b4:	ldrb	w8, [x20, #176]
  4470b8:	orr	w8, w8, #0x8
  4470bc:	strb	w8, [x20, #176]
  4470c0:	b	447070 <_obstack_memory_used@@Base+0x520>
  4470c4:	mov	x26, xzr
  4470c8:	mov	w27, #0x1                   	// #1
  4470cc:	b	4470dc <_obstack_memory_used@@Base+0x58c>
  4470d0:	add	x26, x26, #0x1
  4470d4:	cmp	x26, #0x40
  4470d8:	b.eq	446f34 <_obstack_memory_used@@Base+0x3e4>  // b.none
  4470dc:	add	x25, x26, #0xc0
  4470e0:	mov	w0, w25
  4470e4:	bl	404590 <btowc@plt>
  4470e8:	cmn	w0, #0x1
  4470ec:	b.eq	447104 <_obstack_memory_used@@Base+0x5b4>  // b.none
  4470f0:	ldr	x8, [x20, #120]
  4470f4:	lsl	x10, x27, x26
  4470f8:	ldr	x9, [x8, #24]
  4470fc:	orr	x9, x9, x10
  447100:	str	x9, [x8, #24]
  447104:	cmp	w25, #0x7f
  447108:	b.hi	4470d0 <_obstack_memory_used@@Base+0x580>  // b.pmore
  44710c:	cmp	w25, w0
  447110:	b.eq	4470d0 <_obstack_memory_used@@Base+0x580>  // b.none
  447114:	ldrb	w8, [x20, #176]
  447118:	orr	w8, w8, #0x8
  44711c:	strb	w8, [x20, #176]
  447120:	b	4470d0 <_obstack_memory_used@@Base+0x580>
  447124:	mov	x24, xzr
  447128:	mov	x0, xzr
  44712c:	b	44713c <_obstack_memory_used@@Base+0x5ec>
  447130:	mov	x0, xzr
  447134:	str	x24, [sp, #72]
  447138:	ldr	w8, [x20, #180]
  44713c:	cmp	w27, #0x0
  447140:	csel	x9, x23, x0, eq  // eq = none
  447144:	cmp	w8, #0x2
  447148:	str	x9, [sp, #16]
  44714c:	cbz	x25, 44724c <_obstack_memory_used@@Base+0x6fc>
  447150:	b.ge	4471b8 <_obstack_memory_used@@Base+0x668>  // b.tcont
  447154:	cmp	x24, x22
  447158:	csel	x22, x22, x24, gt
  44715c:	cmp	x22, #0x1
  447160:	b.lt	44728c <_obstack_memory_used@@Base+0x73c>  // b.tstop
  447164:	bl	4044a0 <__ctype_toupper_loc@plt>
  447168:	mov	x9, xzr
  44716c:	mov	x8, xzr
  447170:	add	x9, x23, x9
  447174:	ldrb	w9, [x9, x8]
  447178:	cbnz	x26, 4471a8 <_obstack_memory_used@@Base+0x658>
  44717c:	ldr	x10, [x0]
  447180:	ldr	x11, [sp, #16]
  447184:	ldr	w9, [x10, w9, uxtw #2]
  447188:	strb	w9, [x11, x8]
  44718c:	add	x8, x8, #0x1
  447190:	cmp	x8, x22
  447194:	b.ge	447290 <_obstack_memory_used@@Base+0x740>  // b.tcont
  447198:	ldr	x23, [sp, #8]
  44719c:	ldr	x9, [sp, #48]
  4471a0:	ldr	x26, [sp, #128]
  4471a4:	b	447170 <_obstack_memory_used@@Base+0x620>
  4471a8:	ldrb	w9, [x26, x9]
  4471ac:	b	44717c <_obstack_memory_used@@Base+0x62c>
  4471b0:	str	x0, [sp, #16]
  4471b4:	str	x23, [sp, #72]
  4471b8:	add	x0, sp, #0x8
  4471bc:	bl	44b7a4 <_obstack_memory_used@@Base+0x4c54>
  4471c0:	cbnz	w0, 4475b4 <_obstack_memory_used@@Base+0xa64>
  4471c4:	ldr	x8, [sp, #64]
  4471c8:	cmp	x8, x22
  4471cc:	b.ge	4472f0 <_obstack_memory_used@@Base+0x7a0>  // b.tcont
  4471d0:	ldr	x8, [sp, #56]
  4471d4:	ldrsw	x9, [x20, #180]
  4471d8:	ldr	x24, [sp, #72]
  4471dc:	add	x8, x8, x9
  4471e0:	cmp	x24, x8
  4471e4:	b.gt	4472f0 <_obstack_memory_used@@Base+0x7a0>
  4471e8:	ldr	w8, [sp, #152]
  4471ec:	lsl	x23, x24, #1
  4471f0:	cmp	w8, #0x2
  4471f4:	b.lt	447230 <_obstack_memory_used@@Base+0x6e0>  // b.tstop
  4471f8:	lsr	x8, x23, #61
  4471fc:	cbnz	x8, 4475b0 <_obstack_memory_used@@Base+0xa60>
  447200:	ldr	x0, [sp, #24]
  447204:	lsl	x1, x24, #3
  447208:	bl	404490 <realloc@plt>
  44720c:	cbz	x0, 4475b0 <_obstack_memory_used@@Base+0xa60>
  447210:	mov	x8, x0
  447214:	ldr	x0, [sp, #32]
  447218:	str	x8, [sp, #24]
  44721c:	cbz	x0, 447230 <_obstack_memory_used@@Base+0x6e0>
  447220:	lsl	x1, x24, #4
  447224:	bl	404490 <realloc@plt>
  447228:	cbz	x0, 4475b0 <_obstack_memory_used@@Base+0xa60>
  44722c:	str	x0, [sp, #32]
  447230:	ldrb	w8, [sp, #147]
  447234:	cbz	w8, 4471b4 <_obstack_memory_used@@Base+0x664>
  447238:	ldr	x0, [sp, #16]
  44723c:	mov	x1, x23
  447240:	bl	404490 <realloc@plt>
  447244:	cbnz	x0, 4471b0 <_obstack_memory_used@@Base+0x660>
  447248:	b	4475b0 <_obstack_memory_used@@Base+0xa60>
  44724c:	b.lt	44725c <_obstack_memory_used@@Base+0x70c>  // b.tstop
  447250:	add	x0, sp, #0x8
  447254:	bl	44be60 <_obstack_memory_used@@Base+0x5310>
  447258:	b	4472f0 <_obstack_memory_used@@Base+0x7a0>
  44725c:	cbz	x26, 447298 <_obstack_memory_used@@Base+0x748>
  447260:	cmp	x24, x22
  447264:	csel	x8, x22, x24, gt
  447268:	cmp	x8, #0x1
  44726c:	b.lt	4472a0 <_obstack_memory_used@@Base+0x750>  // b.tstop
  447270:	ldrb	w10, [x23]
  447274:	cmp	x8, #0x1
  447278:	ldrb	w10, [x26, x10]
  44727c:	strb	w10, [x9]
  447280:	b.ne	4472a8 <_obstack_memory_used@@Base+0x758>  // b.any
  447284:	mov	w9, #0x1                   	// #1
  447288:	b	4472ec <_obstack_memory_used@@Base+0x79c>
  44728c:	mov	x8, xzr
  447290:	stp	x8, x8, [sp, #56]
  447294:	b	4472f0 <_obstack_memory_used@@Base+0x7a0>
  447298:	stp	x24, x24, [sp, #56]
  44729c:	b	4472f0 <_obstack_memory_used@@Base+0x7a0>
  4472a0:	mov	x9, xzr
  4472a4:	b	4472ec <_obstack_memory_used@@Base+0x79c>
  4472a8:	ldrb	w10, [x23, #1]
  4472ac:	cmp	x8, #0x3
  4472b0:	ldrb	w10, [x26, x10]
  4472b4:	strb	w10, [x9, #1]
  4472b8:	mov	w9, #0x2                   	// #2
  4472bc:	b.lt	4472ec <_obstack_memory_used@@Base+0x79c>  // b.tstop
  4472c0:	ldr	x10, [sp, #8]
  4472c4:	ldr	x11, [sp, #48]
  4472c8:	ldr	x12, [sp, #128]
  4472cc:	add	x10, x10, x11
  4472d0:	ldrb	w10, [x10, x9]
  4472d4:	ldr	x11, [sp, #16]
  4472d8:	ldrb	w10, [x12, x10]
  4472dc:	strb	w10, [x11, x9]
  4472e0:	add	x9, x9, #0x1
  4472e4:	cmp	x9, x8
  4472e8:	b.lt	4472c0 <_obstack_memory_used@@Base+0x770>  // b.tstop
  4472ec:	stp	x9, x9, [sp, #56]
  4472f0:	stur	wzr, [x29, #-44]
  4472f4:	ldr	x22, [x19]
  4472f8:	orr	x2, x21, #0x800000
  4472fc:	sub	x0, x29, #0x28
  447300:	add	x1, sp, #0x8
  447304:	str	xzr, [x19, #48]
  447308:	str	x21, [x22, #216]
  44730c:	bl	44c2b0 <_obstack_memory_used@@Base+0x5760>
  447310:	ldr	x8, [sp, #80]
  447314:	sub	x2, x29, #0x28
  447318:	sub	x5, x29, #0x2c
  44731c:	mov	x1, x19
  447320:	add	x8, x8, w0, sxtw
  447324:	add	x0, sp, #0x8
  447328:	mov	x3, x21
  44732c:	mov	x4, xzr
  447330:	str	x8, [sp, #80]
  447334:	bl	44c068 <_obstack_memory_used@@Base+0x5518>
  447338:	mov	x21, x0
  44733c:	cbnz	x0, 447348 <_obstack_memory_used@@Base+0x7f8>
  447340:	ldur	w8, [x29, #-44]
  447344:	cbnz	w8, 44752c <_obstack_memory_used@@Base+0x9dc>
  447348:	ldr	w8, [x22, #128]
  44734c:	cmp	w8, #0xf
  447350:	b.eq	4474dc <_obstack_memory_used@@Base+0x98c>  // b.none
  447354:	ldr	x0, [x22, #112]
  447358:	add	w9, w8, #0x1
  44735c:	sxtw	x8, w8
  447360:	add	x23, x0, x8, lsl #6
  447364:	mov	w10, #0x2                   	// #2
  447368:	mov	x11, #0xffffffffffffffff    	// #-1
  44736c:	str	w9, [x22, #128]
  447370:	str	xzr, [x23, #8]!
  447374:	stp	xzr, xzr, [x23, #16]
  447378:	str	xzr, [x23, #8]
  44737c:	str	w10, [x23, #48]
  447380:	str	xzr, [x23, #32]
  447384:	str	x11, [x23, #56]
  447388:	mov	x8, x23
  44738c:	cbz	x21, 4473d8 <_obstack_memory_used@@Base+0x888>
  447390:	ldr	w8, [x22, #128]
  447394:	cmp	w8, #0xf
  447398:	b.eq	447500 <_obstack_memory_used@@Base+0x9b0>  // b.none
  44739c:	ldr	x0, [x22, #112]
  4473a0:	add	w9, w8, #0x1
  4473a4:	sxtw	x8, w8
  4473a8:	add	x8, x0, x8, lsl #6
  4473ac:	mov	w10, #0x10                  	// #16
  4473b0:	mov	x11, #0xffffffffffffffff    	// #-1
  4473b4:	str	w9, [x22, #128]
  4473b8:	str	xzr, [x8, #8]!
  4473bc:	stp	x21, x23, [x8, #8]
  4473c0:	str	w10, [x8, #48]
  4473c4:	stp	xzr, xzr, [x8, #24]
  4473c8:	str	x11, [x8, #56]
  4473cc:	str	x8, [x21]
  4473d0:	cbz	x23, 447524 <_obstack_memory_used@@Base+0x9d4>
  4473d4:	str	x8, [x23]
  4473d8:	cbz	x23, 447524 <_obstack_memory_used@@Base+0x9d4>
  4473dc:	cbz	x8, 447524 <_obstack_memory_used@@Base+0x9d4>
  4473e0:	str	x8, [x20, #104]
  4473e4:	ldr	x21, [x19]
  4473e8:	ldr	x8, [x21, #8]
  4473ec:	lsl	x0, x8, #3
  4473f0:	bl	404250 <malloc@plt>
  4473f4:	ldr	x8, [x21, #8]
  4473f8:	str	x0, [x21, #24]
  4473fc:	lsl	x0, x8, #3
  447400:	bl	404250 <malloc@plt>
  447404:	ldr	x8, [x21, #8]
  447408:	str	x0, [x21, #32]
  44740c:	add	x8, x8, x8, lsl #1
  447410:	lsl	x0, x8, #3
  447414:	bl	404250 <malloc@plt>
  447418:	ldr	x8, [x21, #8]
  44741c:	str	x0, [x21, #40]
  447420:	add	x8, x8, x8, lsl #1
  447424:	lsl	x0, x8, #3
  447428:	bl	404250 <malloc@plt>
  44742c:	ldr	x9, [x21, #24]
  447430:	str	x0, [x21, #48]
  447434:	cbz	x9, 4475b0 <_obstack_memory_used@@Base+0xa60>
  447438:	ldr	x9, [x21, #32]
  44743c:	cbz	x9, 4475b0 <_obstack_memory_used@@Base+0xa60>
  447440:	mov	x8, x0
  447444:	mov	w0, #0xc                   	// #12
  447448:	cbz	x8, 4475b4 <_obstack_memory_used@@Base+0xa64>
  44744c:	ldr	x8, [x21, #40]
  447450:	cbz	x8, 4475b4 <_obstack_memory_used@@Base+0xa64>
  447454:	ldr	x22, [x19, #48]
  447458:	lsl	x0, x22, #3
  44745c:	bl	404250 <malloc@plt>
  447460:	str	x0, [x21, #224]
  447464:	cbz	x0, 447784 <_obstack_memory_used@@Base+0xc34>
  447468:	cbz	x22, 4475cc <_obstack_memory_used@@Base+0xa7c>
  44746c:	cmp	x22, #0x4
  447470:	b.cs	44747c <_obstack_memory_used@@Base+0x92c>  // b.hs, b.nlast
  447474:	mov	x8, xzr
  447478:	b	4475bc <_obstack_memory_used@@Base+0xa6c>
  44747c:	adrp	x10, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  447480:	ldr	q0, [x10, #2064]
  447484:	mov	w10, #0x2                   	// #2
  447488:	and	x8, x22, #0xfffffffffffffffc
  44748c:	dup	v1.2d, x10
  447490:	mov	w10, #0x4                   	// #4
  447494:	add	x9, x0, #0x10
  447498:	dup	v2.2d, x10
  44749c:	mov	x10, x8
  4474a0:	add	v3.2d, v0.2d, v1.2d
  4474a4:	stp	q0, q3, [x9, #-16]
  4474a8:	add	v0.2d, v0.2d, v2.2d
  4474ac:	subs	x10, x10, #0x4
  4474b0:	add	x9, x9, #0x20
  4474b4:	b.ne	4474a0 <_obstack_memory_used@@Base+0x950>  // b.any
  4474b8:	b	4475c4 <_obstack_memory_used@@Base+0xa74>
  4474bc:	mov	w1, #0xe8                  	// #232
  4474c0:	mov	x0, x20
  4474c4:	bl	404490 <realloc@plt>
  4474c8:	cbz	x0, 447598 <_obstack_memory_used@@Base+0xa48>
  4474cc:	mov	x20, x0
  4474d0:	mov	w8, #0xe8                  	// #232
  4474d4:	stp	x0, x8, [x19]
  4474d8:	b	446db4 <_obstack_memory_used@@Base+0x264>
  4474dc:	mov	w0, #0x3c8                 	// #968
  4474e0:	bl	404250 <malloc@plt>
  4474e4:	cbz	x0, 4475a0 <_obstack_memory_used@@Base+0xa50>
  4474e8:	ldr	x9, [x22, #112]
  4474ec:	mov	w8, wzr
  4474f0:	str	x9, [x0]
  4474f4:	str	x0, [x22, #112]
  4474f8:	str	wzr, [x22, #128]
  4474fc:	b	447358 <_obstack_memory_used@@Base+0x808>
  447500:	mov	w0, #0x3c8                 	// #968
  447504:	bl	404250 <malloc@plt>
  447508:	cbz	x0, 447524 <_obstack_memory_used@@Base+0x9d4>
  44750c:	ldr	x9, [x22, #112]
  447510:	mov	w8, wzr
  447514:	str	x9, [x0]
  447518:	str	x0, [x22, #112]
  44751c:	str	wzr, [x22, #128]
  447520:	b	4473a0 <_obstack_memory_used@@Base+0x850>
  447524:	mov	w8, #0xc                   	// #12
  447528:	stur	w8, [x29, #-44]
  44752c:	str	xzr, [x20, #104]
  447530:	ldr	x21, [x19]
  447534:	ldr	x0, [x21, #112]
  447538:	cbz	x0, 44754c <_obstack_memory_used@@Base+0x9fc>
  44753c:	ldr	x22, [x0]
  447540:	bl	404700 <free@plt>
  447544:	mov	x0, x22
  447548:	cbnz	x22, 44753c <_obstack_memory_used@@Base+0x9ec>
  44754c:	ldr	x0, [x21, #32]
  447550:	mov	w8, #0xf                   	// #15
  447554:	str	w8, [x21, #128]
  447558:	stp	xzr, xzr, [x21, #104]
  44755c:	bl	404700 <free@plt>
  447560:	str	xzr, [x21, #32]
  447564:	ldr	x0, [sp, #24]
  447568:	bl	404700 <free@plt>
  44756c:	ldr	x0, [sp, #32]
  447570:	bl	404700 <free@plt>
  447574:	ldrb	w8, [sp, #147]
  447578:	cbz	w8, 447584 <_obstack_memory_used@@Base+0xa34>
  44757c:	ldr	x0, [sp, #16]
  447580:	bl	404700 <free@plt>
  447584:	mov	x0, x20
  447588:	bl	448758 <_obstack_memory_used@@Base+0x1c08>
  44758c:	stp	xzr, xzr, [x19]
  447590:	ldur	w21, [x29, #-44]
  447594:	b	447f48 <_obstack_memory_used@@Base+0x13f8>
  447598:	mov	w21, #0xc                   	// #12
  44759c:	b	447f48 <_obstack_memory_used@@Base+0x13f8>
  4475a0:	mov	x23, xzr
  4475a4:	mov	x8, x23
  4475a8:	cbnz	x21, 447390 <_obstack_memory_used@@Base+0x840>
  4475ac:	b	4473d8 <_obstack_memory_used@@Base+0x888>
  4475b0:	mov	w0, #0xc                   	// #12
  4475b4:	stur	w0, [x29, #-44]
  4475b8:	b	447530 <_obstack_memory_used@@Base+0x9e0>
  4475bc:	str	x8, [x0, x8, lsl #3]
  4475c0:	add	x8, x8, #0x1
  4475c4:	cmp	x22, x8
  4475c8:	b.ne	4475bc <_obstack_memory_used@@Base+0xa6c>  // b.any
  4475cc:	ldr	x9, [x21, #104]
  4475d0:	ldrb	w8, [x9, #48]
  4475d4:	cmp	w8, #0x11
  4475d8:	b.eq	447610 <_obstack_memory_used@@Base+0xac0>  // b.none
  4475dc:	cmp	w8, #0x4
  4475e0:	b.ne	447660 <_obstack_memory_used@@Base+0xb10>  // b.any
  4475e4:	ldr	x8, [x9, #40]
  4475e8:	mov	w11, #0x1                   	// #1
  4475ec:	sbfiz	x8, x8, #3, #32
  4475f0:	ldr	x8, [x0, x8]
  4475f4:	str	x8, [x9, #40]
  4475f8:	ldr	x10, [x21, #160]
  4475fc:	lsl	w8, w11, w8
  447600:	sxtw	x8, w8
  447604:	orr	x8, x10, x8
  447608:	str	x8, [x21, #160]
  44760c:	b	447660 <_obstack_memory_used@@Base+0xb10>
  447610:	ldr	x8, [x9, #8]
  447614:	cbz	x8, 447660 <_obstack_memory_used@@Base+0xb10>
  447618:	ldrb	w10, [x8, #48]
  44761c:	cmp	w10, #0x11
  447620:	b.ne	447660 <_obstack_memory_used@@Base+0xb10>  // b.any
  447624:	ldr	x10, [x8, #8]
  447628:	ldr	x8, [x8, #40]
  44762c:	str	x10, [x9, #8]
  447630:	cbz	x10, 447638 <_obstack_memory_used@@Base+0xae8>
  447634:	str	x9, [x10]
  447638:	ldr	x10, [x9, #40]
  44763c:	cmp	x8, #0x3f
  447640:	ldr	x10, [x0, x10, lsl #3]
  447644:	str	x10, [x0, x8, lsl #3]
  447648:	b.gt	447660 <_obstack_memory_used@@Base+0xb10>
  44764c:	ldr	x10, [x21, #160]
  447650:	mov	w11, #0x1                   	// #1
  447654:	lsl	x8, x11, x8
  447658:	bic	x8, x10, x8
  44765c:	b	447608 <_obstack_memory_used@@Base+0xab8>
  447660:	mov	w8, #0x1                   	// #1
  447664:	ldr	x10, [x9, #8]
  447668:	cbnz	x10, 447694 <_obstack_memory_used@@Base+0xb44>
  44766c:	mov	x11, xzr
  447670:	b	44767c <_obstack_memory_used@@Base+0xb2c>
  447674:	ldr	x9, [x11]
  447678:	cbz	x9, 447740 <_obstack_memory_used@@Base+0xbf0>
  44767c:	ldr	x10, [x9, #16]
  447680:	mov	x12, x11
  447684:	mov	x11, x9
  447688:	cmp	x10, x12
  44768c:	b.eq	447674 <_obstack_memory_used@@Base+0xb24>  // b.none
  447690:	cbz	x10, 447674 <_obstack_memory_used@@Base+0xb24>
  447694:	ldrb	w9, [x10, #48]
  447698:	cmp	w9, #0x11
  44769c:	b.eq	4476e4 <_obstack_memory_used@@Base+0xb94>  // b.none
  4476a0:	cmp	w9, #0x4
  4476a4:	mov	x9, x10
  4476a8:	b.ne	447664 <_obstack_memory_used@@Base+0xb14>  // b.any
  4476ac:	ldr	x11, [x21, #224]
  4476b0:	mov	x9, x10
  4476b4:	cbz	x11, 447664 <_obstack_memory_used@@Base+0xb14>
  4476b8:	ldr	x9, [x10, #40]
  4476bc:	sbfiz	x9, x9, #3, #32
  4476c0:	ldr	x9, [x11, x9]
  4476c4:	str	x9, [x10, #40]
  4476c8:	ldr	x11, [x21, #160]
  4476cc:	lsl	w9, w8, w9
  4476d0:	sxtw	x9, w9
  4476d4:	orr	x9, x11, x9
  4476d8:	str	x9, [x21, #160]
  4476dc:	mov	x9, x10
  4476e0:	b	447664 <_obstack_memory_used@@Base+0xb14>
  4476e4:	ldr	x11, [x10, #8]
  4476e8:	mov	x9, x10
  4476ec:	cbz	x11, 447664 <_obstack_memory_used@@Base+0xb14>
  4476f0:	ldrb	w9, [x11, #48]
  4476f4:	cmp	w9, #0x11
  4476f8:	mov	x9, x10
  4476fc:	b.ne	447664 <_obstack_memory_used@@Base+0xb14>  // b.any
  447700:	ldr	x9, [x11, #8]
  447704:	ldr	x11, [x11, #40]
  447708:	str	x9, [x10, #8]
  44770c:	cbz	x9, 447714 <_obstack_memory_used@@Base+0xbc4>
  447710:	str	x10, [x9]
  447714:	ldr	x9, [x21, #224]
  447718:	ldr	x12, [x10, #40]
  44771c:	cmp	x11, #0x3f
  447720:	ldr	x12, [x9, x12, lsl #3]
  447724:	str	x12, [x9, x11, lsl #3]
  447728:	mov	x9, x10
  44772c:	b.gt	447664 <_obstack_memory_used@@Base+0xb14>
  447730:	ldr	x9, [x21, #160]
  447734:	lsl	x11, x8, x11
  447738:	bic	x9, x9, x11
  44773c:	b	4476d8 <_obstack_memory_used@@Base+0xb88>
  447740:	ldr	x8, [x19, #48]
  447744:	cbz	x8, 44776c <_obstack_memory_used@@Base+0xc1c>
  447748:	ldr	x0, [x21, #224]
  44774c:	mov	x9, xzr
  447750:	ldr	x10, [x0, x9, lsl #3]
  447754:	cmp	x9, x10
  447758:	b.ne	447774 <_obstack_memory_used@@Base+0xc24>  // b.any
  44775c:	add	x9, x9, #0x1
  447760:	cmp	x8, x9
  447764:	b.ne	447750 <_obstack_memory_used@@Base+0xc00>  // b.any
  447768:	b	44777c <_obstack_memory_used@@Base+0xc2c>
  44776c:	ldr	x0, [x21, #224]
  447770:	b	44777c <_obstack_memory_used@@Base+0xc2c>
  447774:	cmp	x8, x9
  447778:	b.ne	447784 <_obstack_memory_used@@Base+0xc34>  // b.any
  44777c:	bl	404700 <free@plt>
  447780:	str	xzr, [x21, #224]
  447784:	ldr	x8, [x21, #104]
  447788:	mov	x22, x8
  44778c:	ldr	x8, [x8, #8]
  447790:	cbnz	x8, 447788 <_obstack_memory_used@@Base+0xc38>
  447794:	ldr	x8, [x22, #16]
  447798:	cbnz	x8, 447788 <_obstack_memory_used@@Base+0xc38>
  44779c:	mov	x2, xzr
  4477a0:	b	4477ac <_obstack_memory_used@@Base+0xc5c>
  4477a4:	ldr	x2, [x9, #8]
  4477a8:	mov	x22, x9
  4477ac:	stur	wzr, [x29, #-40]
  4477b0:	cbz	x2, 4477d8 <_obstack_memory_used@@Base+0xc88>
  4477b4:	ldrb	w8, [x2, #48]
  4477b8:	cmp	w8, #0x11
  4477bc:	b.ne	4477d8 <_obstack_memory_used@@Base+0xc88>  // b.any
  4477c0:	sub	x0, x29, #0x28
  4477c4:	mov	x1, x19
  4477c8:	bl	44fd2c <_obstack_memory_used@@Base+0x91dc>
  4477cc:	str	x0, [x22, #8]
  4477d0:	cbz	x0, 4477d8 <_obstack_memory_used@@Base+0xc88>
  4477d4:	str	x22, [x0]
  4477d8:	ldr	x2, [x22, #16]
  4477dc:	cbz	x2, 447804 <_obstack_memory_used@@Base+0xcb4>
  4477e0:	ldrb	w8, [x2, #48]
  4477e4:	cmp	w8, #0x11
  4477e8:	b.ne	447804 <_obstack_memory_used@@Base+0xcb4>  // b.any
  4477ec:	sub	x0, x29, #0x28
  4477f0:	mov	x1, x19
  4477f4:	bl	44fd2c <_obstack_memory_used@@Base+0x91dc>
  4477f8:	str	x0, [x22, #16]
  4477fc:	cbz	x0, 447804 <_obstack_memory_used@@Base+0xcb4>
  447800:	str	x22, [x0]
  447804:	ldur	w0, [x29, #-40]
  447808:	cbnz	w0, 4475b4 <_obstack_memory_used@@Base+0xa64>
  44780c:	ldr	x9, [x22]
  447810:	cbz	x9, 447828 <_obstack_memory_used@@Base+0xcd8>
  447814:	ldr	x8, [x9, #16]
  447818:	cmp	x8, x22
  44781c:	b.eq	4477a4 <_obstack_memory_used@@Base+0xc54>  // b.none
  447820:	cbz	x8, 4477a4 <_obstack_memory_used@@Base+0xc54>
  447824:	b	447788 <_obstack_memory_used@@Base+0xc38>
  447828:	ldr	x8, [x21, #104]
  44782c:	mov	x22, x8
  447830:	ldr	x8, [x8, #8]
  447834:	cbnz	x8, 44782c <_obstack_memory_used@@Base+0xcdc>
  447838:	ldr	x8, [x22, #16]
  44783c:	cbnz	x8, 44782c <_obstack_memory_used@@Base+0xcdc>
  447840:	ldrb	w8, [x22, #48]
  447844:	cmp	w8, #0x10
  447848:	b.ne	447864 <_obstack_memory_used@@Base+0xd14>  // b.any
  44784c:	ldr	x8, [x22, #8]
  447850:	ldr	x9, [x8, #24]
  447854:	str	x9, [x22, #24]
  447858:	ldr	x8, [x8, #56]
  44785c:	str	x8, [x22, #56]
  447860:	b	4478a4 <_obstack_memory_used@@Base+0xd54>
  447864:	ldp	x1, x2, [x22, #40]
  447868:	mov	x0, x21
  44786c:	str	x22, [x22, #24]
  447870:	bl	44ffbc <_obstack_memory_used@@Base+0x946c>
  447874:	cmn	x0, #0x1
  447878:	str	x0, [x22, #56]
  44787c:	b.eq	4475b0 <_obstack_memory_used@@Base+0xa60>  // b.none
  447880:	ldrb	w8, [x22, #48]
  447884:	cmp	w8, #0xc
  447888:	b.ne	4478a4 <_obstack_memory_used@@Base+0xd54>  // b.any
  44788c:	ldr	x8, [x21]
  447890:	ldr	w9, [x22, #40]
  447894:	add	x8, x8, x0, lsl #4
  447898:	ldr	w10, [x8, #8]
  44789c:	bfi	w10, w9, #8, #10
  4478a0:	str	w10, [x8, #8]
  4478a4:	ldr	x9, [x22]
  4478a8:	cbz	x9, 4478c8 <_obstack_memory_used@@Base+0xd78>
  4478ac:	ldr	x8, [x9, #16]
  4478b0:	cmp	x8, x22
  4478b4:	mov	x22, x9
  4478b8:	b.eq	447840 <_obstack_memory_used@@Base+0xcf0>  // b.none
  4478bc:	mov	x22, x9
  4478c0:	cbz	x8, 447840 <_obstack_memory_used@@Base+0xcf0>
  4478c4:	b	44782c <_obstack_memory_used@@Base+0xcdc>
  4478c8:	ldr	x22, [x21, #104]
  4478cc:	ldrb	w8, [x22, #48]
  4478d0:	cmp	w8, #0x10
  4478d4:	b.eq	4478ec <_obstack_memory_used@@Base+0xd9c>  // b.none
  4478d8:	cmp	w8, #0xb
  4478dc:	b.ne	4478fc <_obstack_memory_used@@Base+0xdac>  // b.any
  4478e0:	ldr	x8, [x22, #8]
  4478e4:	str	x22, [x8, #32]
  4478e8:	b	44791c <_obstack_memory_used@@Base+0xdcc>
  4478ec:	ldp	x8, x9, [x22, #8]
  4478f0:	ldr	x10, [x9, #24]
  4478f4:	str	x10, [x8, #32]
  4478f8:	b	447914 <_obstack_memory_used@@Base+0xdc4>
  4478fc:	ldr	x8, [x22, #8]
  447900:	cbz	x8, 44790c <_obstack_memory_used@@Base+0xdbc>
  447904:	ldr	x9, [x22, #32]
  447908:	str	x9, [x8, #32]
  44790c:	ldr	x9, [x22, #16]
  447910:	cbz	x9, 44791c <_obstack_memory_used@@Base+0xdcc>
  447914:	ldr	x10, [x22, #32]
  447918:	str	x10, [x9, #32]
  44791c:	mov	x10, x22
  447920:	b	44793c <_obstack_memory_used@@Base+0xdec>
  447924:	ldp	x8, x10, [x9, #8]
  447928:	ldr	x11, [x10, #24]
  44792c:	str	x11, [x8, #32]
  447930:	ldr	x11, [x9, #32]
  447934:	str	x11, [x10, #32]
  447938:	mov	x10, x9
  44793c:	mov	x9, x8
  447940:	cbnz	x8, 447968 <_obstack_memory_used@@Base+0xe18>
  447944:	b	447950 <_obstack_memory_used@@Base+0xe00>
  447948:	ldr	x10, [x8]
  44794c:	cbz	x10, 4479b8 <_obstack_memory_used@@Base+0xe68>
  447950:	ldr	x9, [x10, #16]
  447954:	mov	x11, x8
  447958:	mov	x8, x10
  44795c:	cmp	x9, x11
  447960:	b.eq	447948 <_obstack_memory_used@@Base+0xdf8>  // b.none
  447964:	cbz	x9, 447948 <_obstack_memory_used@@Base+0xdf8>
  447968:	ldrb	w8, [x9, #48]
  44796c:	cmp	w8, #0x10
  447970:	b.eq	447924 <_obstack_memory_used@@Base+0xdd4>  // b.none
  447974:	cmp	w8, #0xb
  447978:	b.ne	44798c <_obstack_memory_used@@Base+0xe3c>  // b.any
  44797c:	ldr	x8, [x9, #8]
  447980:	mov	x10, x9
  447984:	str	x9, [x8, #32]
  447988:	b	44793c <_obstack_memory_used@@Base+0xdec>
  44798c:	ldr	x8, [x9, #8]
  447990:	cbz	x8, 44799c <_obstack_memory_used@@Base+0xe4c>
  447994:	ldr	x10, [x9, #32]
  447998:	str	x10, [x8, #32]
  44799c:	ldr	x11, [x9, #16]
  4479a0:	mov	x10, x9
  4479a4:	cbz	x11, 44793c <_obstack_memory_used@@Base+0xdec>
  4479a8:	ldr	x10, [x9, #32]
  4479ac:	str	x10, [x11, #32]
  4479b0:	mov	x10, x9
  4479b4:	b	44793c <_obstack_memory_used@@Base+0xdec>
  4479b8:	mov	x0, x21
  4479bc:	mov	x1, x22
  4479c0:	bl	44faec <_obstack_memory_used@@Base+0x8f9c>
  4479c4:	cbz	w0, 4479e0 <_obstack_memory_used@@Base+0xe90>
  4479c8:	b	4475b4 <_obstack_memory_used@@Base+0xa64>
  4479cc:	mov	x0, x21
  4479d0:	mov	x1, x23
  4479d4:	bl	44faec <_obstack_memory_used@@Base+0x8f9c>
  4479d8:	mov	x22, x23
  4479dc:	cbnz	w0, 4475b4 <_obstack_memory_used@@Base+0xa64>
  4479e0:	ldr	x23, [x22, #8]
  4479e4:	cbnz	x23, 4479cc <_obstack_memory_used@@Base+0xe7c>
  4479e8:	mov	x8, xzr
  4479ec:	b	4479f8 <_obstack_memory_used@@Base+0xea8>
  4479f0:	ldr	x22, [x8]
  4479f4:	cbz	x22, 447a14 <_obstack_memory_used@@Base+0xec4>
  4479f8:	ldr	x23, [x22, #16]
  4479fc:	mov	x9, x8
  447a00:	mov	x8, x22
  447a04:	cmp	x23, x9
  447a08:	b.eq	4479f0 <_obstack_memory_used@@Base+0xea0>  // b.none
  447a0c:	cbz	x23, 4479f0 <_obstack_memory_used@@Base+0xea0>
  447a10:	b	4479cc <_obstack_memory_used@@Base+0xe7c>
  447a14:	ldr	x8, [x21, #16]
  447a18:	cbz	x8, 447aa8 <_obstack_memory_used@@Base+0xf58>
  447a1c:	mov	w24, wzr
  447a20:	mov	x22, xzr
  447a24:	mov	w23, #0x18                  	// #24
  447a28:	ldr	x8, [x21, #48]
  447a2c:	madd	x8, x22, x23, x8
  447a30:	ldr	x8, [x8, #8]
  447a34:	cbnz	x8, 447a6c <_obstack_memory_used@@Base+0xf1c>
  447a38:	sub	x0, x29, #0x28
  447a3c:	mov	w3, #0x1                   	// #1
  447a40:	mov	x1, x21
  447a44:	mov	x2, x22
  447a48:	bl	450188 <_obstack_memory_used@@Base+0x9638>
  447a4c:	cbnz	w0, 4475b4 <_obstack_memory_used@@Base+0xa64>
  447a50:	ldr	x8, [x21, #48]
  447a54:	madd	x8, x22, x23, x8
  447a58:	ldr	x8, [x8, #8]
  447a5c:	cbnz	x8, 447a6c <_obstack_memory_used@@Base+0xf1c>
  447a60:	ldur	x0, [x29, #-24]
  447a64:	bl	404700 <free@plt>
  447a68:	mov	w24, #0x1                   	// #1
  447a6c:	ldr	x9, [x21, #16]
  447a70:	add	x8, x22, #0x1
  447a74:	mov	w10, w24
  447a78:	cmp	x8, x9
  447a7c:	cset	w11, ne  // ne = any
  447a80:	csinc	x22, xzr, x22, eq  // eq = none
  447a84:	and	w24, w24, w11
  447a88:	tbnz	w10, #0, 447a28 <_obstack_memory_used@@Base+0xed8>
  447a8c:	cmp	x8, x9
  447a90:	b.ne	447a28 <_obstack_memory_used@@Base+0xed8>  // b.any
  447a94:	add	x8, x8, x8, lsl #1
  447a98:	lsl	x0, x8, #3
  447a9c:	ldrb	w8, [x19, #56]
  447aa0:	tbz	w8, #4, 447ab4 <_obstack_memory_used@@Base+0xf64>
  447aa4:	b	447ac4 <_obstack_memory_used@@Base+0xf74>
  447aa8:	mov	x0, xzr
  447aac:	ldrb	w8, [x19, #56]
  447ab0:	tbnz	w8, #4, 447ac4 <_obstack_memory_used@@Base+0xf74>
  447ab4:	ldr	x8, [x19, #48]
  447ab8:	cbz	x8, 447ac4 <_obstack_memory_used@@Base+0xf74>
  447abc:	ldrb	w8, [x21, #176]
  447ac0:	tbnz	w8, #0, 447acc <_obstack_memory_used@@Base+0xf7c>
  447ac4:	ldr	x8, [x21, #152]
  447ac8:	cbz	x8, 447bd8 <_obstack_memory_used@@Base+0x1088>
  447acc:	bl	404250 <malloc@plt>
  447ad0:	str	x0, [x21, #56]
  447ad4:	cbz	x0, 4475b0 <_obstack_memory_used@@Base+0xa60>
  447ad8:	ldr	x8, [x21, #16]
  447adc:	cbz	x8, 447bd8 <_obstack_memory_used@@Base+0x1088>
  447ae0:	stp	xzr, xzr, [x0]
  447ae4:	str	xzr, [x0, #16]
  447ae8:	ldr	x9, [x21, #16]
  447aec:	cmp	x9, #0x2
  447af0:	b.cc	447b20 <_obstack_memory_used@@Base+0xfd0>  // b.lo, b.ul, b.last
  447af4:	mov	w8, #0x1                   	// #1
  447af8:	mov	w10, #0x18                  	// #24
  447afc:	ldr	x9, [x21, #56]
  447b00:	add	x8, x8, #0x1
  447b04:	add	x9, x9, x10
  447b08:	stp	xzr, xzr, [x9]
  447b0c:	str	xzr, [x9, #16]
  447b10:	ldr	x9, [x21, #16]
  447b14:	add	x10, x10, #0x18
  447b18:	cmp	x8, x9
  447b1c:	b.cc	447afc <_obstack_memory_used@@Base+0xfac>  // b.lo, b.ul, b.last
  447b20:	cbz	x9, 447bd8 <_obstack_memory_used@@Base+0x1088>
  447b24:	ldr	x8, [x21, #48]
  447b28:	mov	x22, xzr
  447b2c:	mov	w23, #0x18                  	// #24
  447b30:	b	447b44 <_obstack_memory_used@@Base+0xff4>
  447b34:	ldr	x9, [x21, #16]
  447b38:	add	x22, x22, #0x1
  447b3c:	cmp	x22, x9
  447b40:	b.cs	447bd8 <_obstack_memory_used@@Base+0x1088>  // b.hs, b.nlast
  447b44:	madd	x10, x22, x23, x8
  447b48:	ldr	x11, [x10, #8]
  447b4c:	cmp	x11, #0x1
  447b50:	b.lt	447b38 <_obstack_memory_used@@Base+0xfe8>  // b.tstop
  447b54:	ldr	x24, [x10, #16]
  447b58:	mov	x26, xzr
  447b5c:	b	447b88 <_obstack_memory_used@@Base+0x1038>
  447b60:	madd	x10, x11, x23, x10
  447b64:	ldr	x0, [x10, #16]
  447b68:	add	x10, x9, #0x1
  447b6c:	str	x10, [x27]
  447b70:	str	x22, [x0, x9, lsl #3]
  447b74:	madd	x9, x22, x23, x8
  447b78:	ldr	x9, [x9, #8]
  447b7c:	add	x26, x26, #0x1
  447b80:	cmp	x26, x9
  447b84:	b.ge	447b34 <_obstack_memory_used@@Base+0xfe4>  // b.tcont
  447b88:	ldr	x10, [x21, #56]
  447b8c:	ldr	x11, [x24, x26, lsl #3]
  447b90:	madd	x12, x11, x23, x10
  447b94:	mov	x27, x12
  447b98:	ldr	x13, [x12]
  447b9c:	ldr	x9, [x27, #8]!
  447ba0:	cmp	x13, x9
  447ba4:	b.ne	447b60 <_obstack_memory_used@@Base+0x1010>  // b.any
  447ba8:	lsl	x8, x13, #1
  447bac:	add	x8, x8, #0x2
  447bb0:	str	x8, [x12]
  447bb4:	madd	x28, x11, x23, x10
  447bb8:	ldr	x0, [x28, #16]!
  447bbc:	lsl	x1, x8, #3
  447bc0:	bl	404490 <realloc@plt>
  447bc4:	cbz	x0, 4475b0 <_obstack_memory_used@@Base+0xa60>
  447bc8:	str	x0, [x28]
  447bcc:	ldr	x9, [x27]
  447bd0:	ldr	x8, [x21, #48]
  447bd4:	b	447b68 <_obstack_memory_used@@Base+0x1018>
  447bd8:	stur	wzr, [x29, #-44]
  447bdc:	cbnz	x25, 447cd0 <_obstack_memory_used@@Base+0x1180>
  447be0:	ldrb	w9, [x20, #176]
  447be4:	tbz	w9, #2, 447cd0 <_obstack_memory_used@@Base+0x1180>
  447be8:	ldr	x8, [x19, #40]
  447bec:	cbnz	x8, 447cd0 <_obstack_memory_used@@Base+0x1180>
  447bf0:	ldr	x11, [x20, #16]
  447bf4:	cbz	x11, 447c9c <_obstack_memory_used@@Base+0x114c>
  447bf8:	ldr	x10, [x20]
  447bfc:	adrp	x13, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  447c00:	mov	w8, wzr
  447c04:	mov	w12, wzr
  447c08:	add	x13, x13, #0x840
  447c0c:	mov	w14, #0x1                   	// #1
  447c10:	mov	w15, #0x8b                  	// #139
  447c14:	mov	x16, x10
  447c18:	b	447c38 <_obstack_memory_used@@Base+0x10e8>
  447c1c:	ldrsb	w17, [x16]
  447c20:	cmp	w17, #0x0
  447c24:	cset	w17, lt  // lt = tstop
  447c28:	orr	w12, w12, w17
  447c2c:	subs	x11, x11, #0x1
  447c30:	add	x16, x16, #0x10
  447c34:	b.eq	447f6c <_obstack_memory_used@@Base+0x141c>  // b.none
  447c38:	ldrb	w17, [x16, #8]
  447c3c:	sub	w17, w17, #0x1
  447c40:	cmp	w17, #0xb
  447c44:	b.hi	447ff0 <_obstack_memory_used@@Base+0x14a0>  // b.pmore
  447c48:	adr	x18, 447c1c <_obstack_memory_used@@Base+0x10cc>
  447c4c:	ldrb	w0, [x13, x17]
  447c50:	add	x18, x18, x0, lsl #2
  447c54:	br	x18
  447c58:	ldr	x17, [x16]
  447c5c:	ldr	x18, [x17, #16]
  447c60:	cbnz	x18, 447cd0 <_obstack_memory_used@@Base+0x1180>
  447c64:	ldr	x17, [x17, #24]
  447c68:	cbz	x17, 447c2c <_obstack_memory_used@@Base+0x10dc>
  447c6c:	b	447cd0 <_obstack_memory_used@@Base+0x1180>
  447c70:	ldr	w17, [x16]
  447c74:	sub	w17, w17, #0x10
  447c78:	ror	w17, w17, #4
  447c7c:	cmp	w17, #0x7
  447c80:	b.hi	447cd0 <_obstack_memory_used@@Base+0x1180>  // b.pmore
  447c84:	lsl	w17, w14, w17
  447c88:	tst	w17, w15
  447c8c:	b.ne	447c2c <_obstack_memory_used@@Base+0x10dc>  // b.any
  447c90:	b	447cd0 <_obstack_memory_used@@Base+0x1180>
  447c94:	mov	w8, #0x1                   	// #1
  447c98:	b	447c2c <_obstack_memory_used@@Base+0x10dc>
  447c9c:	mov	w8, wzr
  447ca0:	ldr	x10, [x20, #152]
  447ca4:	mov	w12, #0x2                   	// #2
  447ca8:	and	w9, w9, #0xfffffff9
  447cac:	mov	w11, #0x1                   	// #1
  447cb0:	cmp	x10, #0x0
  447cb4:	cset	w10, gt
  447cb8:	orr	w8, w8, w10
  447cbc:	tst	w8, #0x1
  447cc0:	csel	w8, w12, wzr, ne  // ne = any
  447cc4:	orr	w8, w8, w9
  447cc8:	str	w11, [x20, #180]
  447ccc:	strb	w8, [x20, #176]
  447cd0:	ldr	x8, [x20, #104]
  447cd4:	ldr	x24, [x20, #48]
  447cd8:	ldr	x8, [x8, #24]
  447cdc:	ldr	x23, [x8, #56]
  447ce0:	mov	w8, #0x18                  	// #24
  447ce4:	str	x23, [x20, #144]
  447ce8:	madd	x8, x23, x8, x24
  447cec:	ldr	x22, [x8, #8]
  447cf0:	stur	x22, [x29, #-32]
  447cf4:	ldr	x25, [x8, #8]
  447cf8:	cmp	x25, #0x1
  447cfc:	b.lt	447e40 <_obstack_memory_used@@Base+0x12f0>  // b.tstop
  447d00:	lsl	x0, x22, #3
  447d04:	stur	x22, [x29, #-40]
  447d08:	bl	404250 <malloc@plt>
  447d0c:	stur	x0, [x29, #-24]
  447d10:	cbz	x0, 447fe0 <_obstack_memory_used@@Base+0x1490>
  447d14:	mov	w8, #0x18                  	// #24
  447d18:	madd	x8, x23, x8, x24
  447d1c:	ldr	x1, [x8, #16]
  447d20:	lsl	x2, x25, #3
  447d24:	mov	x21, x0
  447d28:	bl	403ec0 <memcpy@plt>
  447d2c:	cmp	x22, #0x1
  447d30:	stur	wzr, [x29, #-12]
  447d34:	b.lt	447e4c <_obstack_memory_used@@Base+0x12fc>  // b.tstop
  447d38:	ldr	x8, [x20, #152]
  447d3c:	cmp	x8, #0x1
  447d40:	b.lt	447e4c <_obstack_memory_used@@Base+0x12fc>  // b.tstop
  447d44:	mov	x8, xzr
  447d48:	mov	w23, #0x18                  	// #24
  447d4c:	ldr	x9, [x21, x8, lsl #3]
  447d50:	ldr	x10, [x20]
  447d54:	add	x11, x10, x9, lsl #4
  447d58:	ldrb	w11, [x11, #8]
  447d5c:	cmp	w11, #0x4
  447d60:	b.ne	447e2c <_obstack_memory_used@@Base+0x12dc>  // b.any
  447d64:	cmp	x22, #0x1
  447d68:	b.lt	447db8 <_obstack_memory_used@@Base+0x1268>  // b.tstop
  447d6c:	mov	x11, xzr
  447d70:	add	x12, x10, x9, lsl #4
  447d74:	b	447d84 <_obstack_memory_used@@Base+0x1234>
  447d78:	add	x11, x11, #0x1
  447d7c:	cmp	x22, x11
  447d80:	b.eq	447e2c <_obstack_memory_used@@Base+0x12dc>  // b.none
  447d84:	ldr	x13, [x21, x11, lsl #3]
  447d88:	add	x14, x10, x13, lsl #4
  447d8c:	ldrb	w14, [x14, #8]
  447d90:	cmp	w14, #0x9
  447d94:	b.ne	447d78 <_obstack_memory_used@@Base+0x1228>  // b.any
  447d98:	lsl	x13, x13, #4
  447d9c:	ldr	x13, [x10, x13]
  447da0:	ldr	x14, [x12]
  447da4:	cmp	x13, x14
  447da8:	b.ne	447d78 <_obstack_memory_used@@Base+0x1228>  // b.any
  447dac:	cmp	x11, x22
  447db0:	b.ne	447dc4 <_obstack_memory_used@@Base+0x1274>  // b.any
  447db4:	b	447e2c <_obstack_memory_used@@Base+0x12dc>
  447db8:	mov	x11, xzr
  447dbc:	cmp	x11, x22
  447dc0:	b.eq	447e2c <_obstack_memory_used@@Base+0x12dc>  // b.none
  447dc4:	ldr	x10, [x20, #40]
  447dc8:	madd	x9, x9, x23, x10
  447dcc:	ldr	x9, [x9, #16]
  447dd0:	subs	x10, x22, #0x1
  447dd4:	ldr	x9, [x9]
  447dd8:	b.lt	447e10 <_obstack_memory_used@@Base+0x12c0>  // b.tstop
  447ddc:	mov	x11, xzr
  447de0:	b.eq	447e04 <_obstack_memory_used@@Base+0x12b4>  // b.none
  447de4:	add	x12, x11, x10
  447de8:	lsr	x12, x12, #1
  447dec:	ldr	x13, [x21, x12, lsl #3]
  447df0:	cmp	x13, x9
  447df4:	csinc	x11, x11, x12, ge  // ge = tcont
  447df8:	csel	x10, x10, x12, lt  // lt = tstop
  447dfc:	cmp	x11, x10
  447e00:	b.cc	447de4 <_obstack_memory_used@@Base+0x1294>  // b.lo, b.ul, b.last
  447e04:	ldr	x10, [x21, x11, lsl #3]
  447e08:	cmp	x10, x9
  447e0c:	b.eq	447e2c <_obstack_memory_used@@Base+0x12dc>  // b.none
  447e10:	ldr	x8, [x20, #48]
  447e14:	sub	x0, x29, #0x28
  447e18:	madd	x1, x9, x23, x8
  447e1c:	bl	450858 <_obstack_memory_used@@Base+0x9d08>
  447e20:	cbnz	w0, 447ee4 <_obstack_memory_used@@Base+0x1394>
  447e24:	ldur	x22, [x29, #-32]
  447e28:	mov	x8, xzr
  447e2c:	add	x8, x8, #0x1
  447e30:	cmp	x8, x22
  447e34:	b.ge	447e4c <_obstack_memory_used@@Base+0x12fc>  // b.tcont
  447e38:	ldur	x21, [x29, #-24]
  447e3c:	b	447d4c <_obstack_memory_used@@Base+0x11fc>
  447e40:	stp	xzr, xzr, [x29, #-40]
  447e44:	stur	xzr, [x29, #-24]
  447e48:	stur	wzr, [x29, #-12]
  447e4c:	sub	x0, x29, #0xc
  447e50:	sub	x2, x29, #0x28
  447e54:	mov	x1, x20
  447e58:	mov	w3, wzr
  447e5c:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  447e60:	str	x0, [x20, #72]
  447e64:	cbz	x0, 447fd8 <_obstack_memory_used@@Base+0x1488>
  447e68:	ldrsb	w8, [x0, #104]
  447e6c:	tbnz	w8, #31, 447e7c <_obstack_memory_used@@Base+0x132c>
  447e70:	stp	x0, x0, [x20, #88]
  447e74:	str	x0, [x20, #80]
  447e78:	b	447ed8 <_obstack_memory_used@@Base+0x1388>
  447e7c:	sub	x0, x29, #0xc
  447e80:	sub	x2, x29, #0x28
  447e84:	mov	w3, #0x1                   	// #1
  447e88:	mov	x1, x20
  447e8c:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  447e90:	str	x0, [x20, #80]
  447e94:	sub	x0, x29, #0xc
  447e98:	sub	x2, x29, #0x28
  447e9c:	mov	w3, #0x2                   	// #2
  447ea0:	mov	x1, x20
  447ea4:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  447ea8:	str	x0, [x20, #88]
  447eac:	sub	x0, x29, #0xc
  447eb0:	sub	x2, x29, #0x28
  447eb4:	mov	w3, #0x6                   	// #6
  447eb8:	mov	x1, x20
  447ebc:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  447ec0:	ldr	x8, [x20, #80]
  447ec4:	str	x0, [x20, #96]
  447ec8:	cbz	x8, 447fd8 <_obstack_memory_used@@Base+0x1488>
  447ecc:	cbz	x0, 447fd8 <_obstack_memory_used@@Base+0x1488>
  447ed0:	ldr	x8, [x20, #88]
  447ed4:	cbz	x8, 447fd8 <_obstack_memory_used@@Base+0x1488>
  447ed8:	ldur	x0, [x29, #-24]
  447edc:	bl	404700 <free@plt>
  447ee0:	mov	w0, wzr
  447ee4:	stur	w0, [x29, #-44]
  447ee8:	ldr	x21, [x19]
  447eec:	ldr	x0, [x21, #112]
  447ef0:	cbz	x0, 447f04 <_obstack_memory_used@@Base+0x13b4>
  447ef4:	ldr	x22, [x0]
  447ef8:	bl	404700 <free@plt>
  447efc:	mov	x0, x22
  447f00:	cbnz	x22, 447ef4 <_obstack_memory_used@@Base+0x13a4>
  447f04:	ldr	x0, [x21, #32]
  447f08:	mov	w8, #0xf                   	// #15
  447f0c:	str	w8, [x21, #128]
  447f10:	stp	xzr, xzr, [x21, #104]
  447f14:	bl	404700 <free@plt>
  447f18:	str	xzr, [x21, #32]
  447f1c:	ldr	x0, [sp, #24]
  447f20:	bl	404700 <free@plt>
  447f24:	ldr	x0, [sp, #32]
  447f28:	bl	404700 <free@plt>
  447f2c:	ldrb	w8, [sp, #147]
  447f30:	cbz	w8, 447f3c <_obstack_memory_used@@Base+0x13ec>
  447f34:	ldr	x0, [sp, #16]
  447f38:	bl	404700 <free@plt>
  447f3c:	ldur	w8, [x29, #-44]
  447f40:	cbnz	w8, 447584 <_obstack_memory_used@@Base+0xa34>
  447f44:	mov	w21, wzr
  447f48:	mov	w0, w21
  447f4c:	ldp	x20, x19, [sp, #288]
  447f50:	ldp	x22, x21, [sp, #272]
  447f54:	ldp	x24, x23, [sp, #256]
  447f58:	ldp	x26, x25, [sp, #240]
  447f5c:	ldp	x28, x27, [sp, #224]
  447f60:	ldp	x29, x30, [sp, #208]
  447f64:	add	sp, sp, #0x130
  447f68:	ret
  447f6c:	orr	w11, w12, w8
  447f70:	tbz	w11, #0, 447ca0 <_obstack_memory_used@@Base+0x1150>
  447f74:	mov	x9, xzr
  447f78:	mov	w11, #0x1                   	// #1
  447f7c:	add	x12, x10, x9
  447f80:	ldr	w13, [x12, #8]
  447f84:	and	w14, w13, #0xff
  447f88:	cmp	w14, #0x5
  447f8c:	b.eq	447fa8 <_obstack_memory_used@@Base+0x1458>  // b.none
  447f90:	cmp	w14, #0x1
  447f94:	b.ne	447fb4 <_obstack_memory_used@@Base+0x1464>  // b.any
  447f98:	ldrsb	w10, [x10, x9]
  447f9c:	tbz	w10, #31, 447fb4 <_obstack_memory_used@@Base+0x1464>
  447fa0:	and	w10, w13, #0xffdfffff
  447fa4:	b	447fb0 <_obstack_memory_used@@Base+0x1460>
  447fa8:	and	w10, w13, #0xffffff00
  447fac:	orr	w10, w10, #0x7
  447fb0:	str	w10, [x12, #8]
  447fb4:	ldr	x10, [x20, #16]
  447fb8:	cmp	x11, x10
  447fbc:	b.cs	447fd0 <_obstack_memory_used@@Base+0x1480>  // b.hs, b.nlast
  447fc0:	ldr	x10, [x20]
  447fc4:	add	x9, x9, #0x10
  447fc8:	add	x11, x11, #0x1
  447fcc:	b	447f7c <_obstack_memory_used@@Base+0x142c>
  447fd0:	ldrb	w9, [x20, #176]
  447fd4:	b	447ca0 <_obstack_memory_used@@Base+0x1150>
  447fd8:	ldur	w0, [x29, #-12]
  447fdc:	b	447ee4 <_obstack_memory_used@@Base+0x1394>
  447fe0:	mov	w0, #0xc                   	// #12
  447fe4:	stp	xzr, xzr, [x29, #-40]
  447fe8:	stur	w0, [x29, #-12]
  447fec:	b	447ee4 <_obstack_memory_used@@Base+0x1394>
  447ff0:	bl	4045b0 <abort@plt>
  447ff4:	adrp	x9, 47b000 <argp_program_version@@Base+0x8>
  447ff8:	ldr	x8, [x9]
  447ffc:	str	x0, [x9]
  448000:	mov	x0, x8
  448004:	ret
  448008:	stp	x29, x30, [sp, #-48]!
  44800c:	stp	x20, x19, [sp, #32]
  448010:	ldr	x20, [x0, #32]
  448014:	str	x21, [sp, #16]
  448018:	ldr	x21, [x0]
  44801c:	movi	v0.2d, #0x0
  448020:	stp	q0, q0, [x20, #224]
  448024:	stp	q0, q0, [x20, #192]
  448028:	stp	q0, q0, [x20, #160]
  44802c:	stp	q0, q0, [x20, #128]
  448030:	stp	q0, q0, [x20, #96]
  448034:	stp	q0, q0, [x20, #64]
  448038:	stp	q0, q0, [x20, #32]
  44803c:	stp	q0, q0, [x20]
  448040:	ldr	x1, [x21, #72]
  448044:	mov	x2, x20
  448048:	mov	x29, sp
  44804c:	mov	x19, x0
  448050:	bl	4480c4 <_obstack_memory_used@@Base+0x1574>
  448054:	ldp	x8, x1, [x21, #72]
  448058:	cmp	x8, x1
  44805c:	b.eq	448070 <_obstack_memory_used@@Base+0x1520>  // b.none
  448060:	mov	x0, x19
  448064:	mov	x2, x20
  448068:	bl	4480c4 <_obstack_memory_used@@Base+0x1574>
  44806c:	ldr	x8, [x21, #72]
  448070:	ldr	x1, [x21, #88]
  448074:	cmp	x8, x1
  448078:	b.eq	44808c <_obstack_memory_used@@Base+0x153c>  // b.none
  44807c:	mov	x0, x19
  448080:	mov	x2, x20
  448084:	bl	4480c4 <_obstack_memory_used@@Base+0x1574>
  448088:	ldr	x8, [x21, #72]
  44808c:	ldr	x1, [x21, #96]
  448090:	cmp	x8, x1
  448094:	b.eq	4480a4 <_obstack_memory_used@@Base+0x1554>  // b.none
  448098:	mov	x0, x19
  44809c:	mov	x2, x20
  4480a0:	bl	4480c4 <_obstack_memory_used@@Base+0x1574>
  4480a4:	ldrb	w8, [x19, #56]
  4480a8:	ldr	x21, [sp, #16]
  4480ac:	mov	w0, wzr
  4480b0:	orr	w8, w8, #0x8
  4480b4:	strb	w8, [x19, #56]
  4480b8:	ldp	x20, x19, [sp, #32]
  4480bc:	ldp	x29, x30, [sp], #48
  4480c0:	ret
  4480c4:	sub	sp, sp, #0x1b0
  4480c8:	stp	x29, x30, [sp, #336]
  4480cc:	stp	x28, x27, [sp, #352]
  4480d0:	stp	x26, x25, [sp, #368]
  4480d4:	stp	x24, x23, [sp, #384]
  4480d8:	stp	x22, x21, [sp, #400]
  4480dc:	stp	x20, x19, [sp, #416]
  4480e0:	ldr	x28, [x0]
  4480e4:	mov	x20, x2
  4480e8:	mov	x25, x0
  4480ec:	add	x29, sp, #0x150
  4480f0:	ldr	w8, [x28, #180]
  4480f4:	cmp	w8, #0x1
  4480f8:	b.ne	448108 <_obstack_memory_used@@Base+0x15b8>  // b.any
  4480fc:	ldrb	w8, [x25, #26]
  448100:	ubfx	w24, w8, #6, #1
  448104:	b	44810c <_obstack_memory_used@@Base+0x15bc>
  448108:	mov	w24, wzr
  44810c:	ldr	x8, [x1, #16]
  448110:	cmp	x8, #0x1
  448114:	b.lt	448568 <_obstack_memory_used@@Base+0x1a18>  // b.tstop
  448118:	add	x8, sp, #0x38
  44811c:	mov	x9, xzr
  448120:	add	x10, x20, #0x3
  448124:	mov	w26, #0x1                   	// #1
  448128:	orr	x8, x8, #0x1
  44812c:	stp	x8, x10, [sp]
  448130:	stp	x25, x28, [sp, #16]
  448134:	str	x1, [sp, #40]
  448138:	b	448150 <_obstack_memory_used@@Base+0x1600>
  44813c:	ldp	x1, x9, [sp, #40]
  448140:	ldr	x8, [x1, #16]
  448144:	add	x9, x9, #0x1
  448148:	cmp	x9, x8
  44814c:	b.ge	448568 <_obstack_memory_used@@Base+0x1a18>  // b.tcont
  448150:	ldr	x8, [x1, #24]
  448154:	ldr	x10, [x28]
  448158:	str	x9, [sp, #48]
  44815c:	ldr	x19, [x8, x9, lsl #3]
  448160:	add	x9, x10, x19, lsl #4
  448164:	ldrb	w8, [x9, #8]
  448168:	sub	w11, w8, #0x1
  44816c:	cmp	w11, #0x6
  448170:	b.hi	44813c <_obstack_memory_used@@Base+0x15ec>  // b.pmore
  448174:	adrp	x14, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  448178:	add	x14, x14, #0x84c
  44817c:	adr	x12, 44813c <_obstack_memory_used@@Base+0x15ec>
  448180:	ldrb	w13, [x14, x11]
  448184:	add	x12, x12, x13, lsl #2
  448188:	br	x12
  44818c:	ldrb	w21, [x9]
  448190:	strb	w26, [x20, x21]
  448194:	cbz	w24, 4481a8 <_obstack_memory_used@@Base+0x1658>
  448198:	bl	404140 <__ctype_tolower_loc@plt>
  44819c:	ldr	x8, [x0]
  4481a0:	ldrsw	x8, [x8, x21, lsl #2]
  4481a4:	strb	w26, [x20, x8]
  4481a8:	ldrb	w8, [x25, #26]
  4481ac:	tbz	w8, #6, 44813c <_obstack_memory_used@@Base+0x15ec>
  4481b0:	ldr	w8, [x28, #180]
  4481b4:	cmp	w8, #0x2
  4481b8:	b.lt	44813c <_obstack_memory_used@@Base+0x15ec>  // b.tstop
  4481bc:	ldr	x9, [x28]
  4481c0:	lsl	x8, x19, #4
  4481c4:	add	x10, x19, #0x1
  4481c8:	mov	w14, #0x1                   	// #1
  4481cc:	ldrb	w9, [x9, x8]
  4481d0:	movk	w14, #0x20, lsl #16
  4481d4:	strb	w9, [sp, #56]
  4481d8:	ldr	x9, [x28, #16]
  4481dc:	cmp	x10, x9
  4481e0:	ldr	x9, [sp]
  4481e4:	b.cs	448224 <_obstack_memory_used@@Base+0x16d4>  // b.hs, b.nlast
  4481e8:	ldr	x9, [sp]
  4481ec:	ldr	x11, [x28]
  4481f0:	add	w13, w14, #0xfe
  4481f4:	add	x11, x11, x8
  4481f8:	ldr	w12, [x11, #24]
  4481fc:	and	w12, w12, w13
  448200:	cmp	w12, w14
  448204:	b.ne	448224 <_obstack_memory_used@@Base+0x16d4>  // b.any
  448208:	ldrb	w11, [x11, #16]
  44820c:	add	x10, x10, #0x1
  448210:	add	x8, x8, #0x10
  448214:	strb	w11, [x9], #1
  448218:	ldr	x11, [x28, #16]
  44821c:	cmp	x10, x11
  448220:	b.cc	4481ec <_obstack_memory_used@@Base+0x169c>  // b.lo, b.ul, b.last
  448224:	add	x8, sp, #0x38
  448228:	sub	x22, x9, x8
  44822c:	sub	x0, x29, #0xc
  448230:	add	x1, sp, #0x38
  448234:	sub	x3, x29, #0x18
  448238:	mov	x2, x22
  44823c:	stur	xzr, [x29, #-24]
  448240:	bl	446778 <argp_parse@@Base+0xeecc>
  448244:	cmp	x0, x22
  448248:	b.ne	44813c <_obstack_memory_used@@Base+0x15ec>  // b.any
  44824c:	ldur	w0, [x29, #-12]
  448250:	bl	404ab0 <towlower@plt>
  448254:	mov	w1, w0
  448258:	add	x0, sp, #0x38
  44825c:	sub	x2, x29, #0x18
  448260:	bl	404b40 <wcrtomb@plt>
  448264:	cmn	x0, #0x1
  448268:	b.eq	44813c <_obstack_memory_used@@Base+0x15ec>  // b.none
  44826c:	ldrb	w8, [sp, #56]
  448270:	strb	w26, [x20, x8]
  448274:	b	44813c <_obstack_memory_used@@Base+0x15ec>
  448278:	lsl	x8, x19, #4
  44827c:	str	x8, [sp, #32]
  448280:	ldr	x8, [x10, x8]
  448284:	ldr	x9, [sp, #8]
  448288:	mov	x22, xzr
  44828c:	ldr	x19, [x8]
  448290:	mov	w8, #0x83                  	// #131
  448294:	b	4482bc <_obstack_memory_used@@Base+0x176c>
  448298:	bl	404140 <__ctype_tolower_loc@plt>
  44829c:	ldr	x8, [x0]
  4482a0:	ldr	w8, [x8, x22, lsl #2]
  4482a4:	strb	w26, [x20, w8, sxtw]
  4482a8:	add	x22, x22, #0x1
  4482ac:	add	w8, w21, #0x1
  4482b0:	cmp	x22, #0x40
  4482b4:	add	x9, x27, #0x1
  4482b8:	b.eq	448350 <_obstack_memory_used@@Base+0x1800>  // b.none
  4482bc:	lsr	x10, x19, x22
  4482c0:	mov	w21, w8
  4482c4:	mov	x27, x9
  4482c8:	tbz	w10, #0, 4482a8 <_obstack_memory_used@@Base+0x1758>
  4482cc:	strb	w26, [x20, x22]
  4482d0:	cbz	w24, 4482a8 <_obstack_memory_used@@Base+0x1758>
  4482d4:	add	w8, w22, #0x80
  4482d8:	cmp	w8, #0x180
  4482dc:	b.cc	448298 <_obstack_memory_used@@Base+0x1748>  // b.lo, b.ul, b.last
  4482e0:	mov	w8, w22
  4482e4:	b	4482a4 <_obstack_memory_used@@Base+0x1754>
  4482e8:	ldr	w8, [x28, #180]
  4482ec:	ldr	x21, [x9]
  4482f0:	cmp	w8, #0x2
  4482f4:	b.lt	44848c <_obstack_memory_used@@Base+0x193c>  // b.tstop
  4482f8:	ldr	x8, [x21, #72]
  4482fc:	cbnz	x8, 448310 <_obstack_memory_used@@Base+0x17c0>
  448300:	ldrb	w8, [x21, #32]
  448304:	tbnz	w8, #0, 448310 <_obstack_memory_used@@Base+0x17c0>
  448308:	ldr	x8, [x21, #64]
  44830c:	cbz	x8, 44848c <_obstack_memory_used@@Base+0x193c>
  448310:	sturb	wzr, [x29, #-24]
  448314:	b	448324 <_obstack_memory_used@@Base+0x17d4>
  448318:	add	w8, w8, #0x1
  44831c:	sturb	w8, [x29, #-24]
  448320:	tbnz	w8, #8, 44813c <_obstack_memory_used@@Base+0x15ec>
  448324:	sub	x1, x29, #0x18
  448328:	add	x3, sp, #0x38
  44832c:	mov	w2, #0x1                   	// #1
  448330:	mov	x0, xzr
  448334:	str	xzr, [sp, #56]
  448338:	bl	446778 <argp_parse@@Base+0xeecc>
  44833c:	ldurb	w8, [x29, #-24]
  448340:	cmn	x0, #0x2
  448344:	b.ne	448318 <_obstack_memory_used@@Base+0x17c8>  // b.any
  448348:	strb	w26, [x20, x8]
  44834c:	b	448318 <_obstack_memory_used@@Base+0x17c8>
  448350:	ldr	x8, [x28]
  448354:	ldr	x9, [sp, #32]
  448358:	mov	x25, xzr
  44835c:	ldr	x8, [x8, x9]
  448360:	ldr	x23, [x8, #8]
  448364:	b	448390 <_obstack_memory_used@@Base+0x1840>
  448368:	bl	404140 <__ctype_tolower_loc@plt>
  44836c:	ldr	x8, [x0]
  448370:	ldr	w8, [x8, x22, lsl #2]
  448374:	strb	w26, [x20, w8, sxtw]
  448378:	add	x25, x25, #0x1
  44837c:	add	x22, x22, #0x1
  448380:	add	w21, w19, #0x1
  448384:	cmp	x25, #0x40
  448388:	add	x27, x28, #0x1
  44838c:	b.eq	4483bc <_obstack_memory_used@@Base+0x186c>  // b.none
  448390:	lsr	x8, x23, x25
  448394:	mov	w19, w21
  448398:	mov	x28, x27
  44839c:	tbz	w8, #0, 448378 <_obstack_memory_used@@Base+0x1828>
  4483a0:	strb	w26, [x20, x22]
  4483a4:	cbz	w24, 448378 <_obstack_memory_used@@Base+0x1828>
  4483a8:	add	w8, w22, #0x80
  4483ac:	cmp	w8, #0x180
  4483b0:	b.cc	448368 <_obstack_memory_used@@Base+0x1818>  // b.lo, b.ul, b.last
  4483b4:	mov	w8, w22
  4483b8:	b	448374 <_obstack_memory_used@@Base+0x1824>
  4483bc:	ldp	x8, x9, [sp, #24]
  4483c0:	mov	x25, xzr
  4483c4:	ldr	x8, [x8]
  4483c8:	ldr	x8, [x8, x9]
  4483cc:	ldr	x23, [x8, #16]
  4483d0:	b	4483fc <_obstack_memory_used@@Base+0x18ac>
  4483d4:	bl	404140 <__ctype_tolower_loc@plt>
  4483d8:	ldr	x8, [x0]
  4483dc:	ldr	w8, [x8, x22, lsl #2]
  4483e0:	strb	w26, [x20, w8, sxtw]
  4483e4:	add	x25, x25, #0x1
  4483e8:	add	x22, x22, #0x1
  4483ec:	add	w19, w27, #0x1
  4483f0:	cmp	x25, #0x40
  4483f4:	add	x28, x21, #0x1
  4483f8:	b.eq	448428 <_obstack_memory_used@@Base+0x18d8>  // b.none
  4483fc:	lsr	x8, x23, x25
  448400:	mov	w27, w19
  448404:	mov	x21, x28
  448408:	tbz	w8, #0, 4483e4 <_obstack_memory_used@@Base+0x1894>
  44840c:	strb	w26, [x20, x22]
  448410:	cbz	w24, 4483e4 <_obstack_memory_used@@Base+0x1894>
  448414:	add	w8, w22, #0x80
  448418:	cmp	w8, #0x180
  44841c:	b.cc	4483d4 <_obstack_memory_used@@Base+0x1884>  // b.lo, b.ul, b.last
  448420:	mov	w8, w22
  448424:	b	4483e0 <_obstack_memory_used@@Base+0x1890>
  448428:	ldp	x28, x9, [sp, #24]
  44842c:	ldr	x25, [sp, #16]
  448430:	mov	x23, xzr
  448434:	ldr	x8, [x28]
  448438:	ldr	x8, [x8, x9]
  44843c:	ldr	x19, [x8, #24]
  448440:	b	44846c <_obstack_memory_used@@Base+0x191c>
  448444:	bl	404140 <__ctype_tolower_loc@plt>
  448448:	ldr	x8, [x0]
  44844c:	ldr	w8, [x8, x22, lsl #2]
  448450:	strb	w26, [x20, w8, sxtw]
  448454:	add	x23, x23, #0x1
  448458:	add	x22, x22, #0x1
  44845c:	add	w27, w27, #0x1
  448460:	cmp	x23, #0x40
  448464:	add	x21, x21, #0x1
  448468:	b.eq	44813c <_obstack_memory_used@@Base+0x15ec>  // b.none
  44846c:	lsr	x8, x19, x23
  448470:	tbz	w8, #0, 448454 <_obstack_memory_used@@Base+0x1904>
  448474:	strb	w26, [x21]
  448478:	cbz	w24, 448454 <_obstack_memory_used@@Base+0x1904>
  44847c:	cmp	w27, #0x180
  448480:	b.cc	448444 <_obstack_memory_used@@Base+0x18f4>  // b.lo, b.ul, b.last
  448484:	mov	w8, w22
  448488:	b	448450 <_obstack_memory_used@@Base+0x1900>
  44848c:	ldr	x8, [x21, #40]
  448490:	cmp	x8, #0x1
  448494:	b.lt	44813c <_obstack_memory_used@@Base+0x15ec>  // b.tstop
  448498:	mov	x19, xzr
  44849c:	b	4484b0 <_obstack_memory_used@@Base+0x1960>
  4484a0:	ldr	x8, [x21, #40]
  4484a4:	add	x19, x19, #0x1
  4484a8:	cmp	x19, x8
  4484ac:	b.ge	44813c <_obstack_memory_used@@Base+0x15ec>  // b.tcont
  4484b0:	stur	xzr, [x29, #-24]
  4484b4:	ldr	x8, [x21]
  4484b8:	add	x0, sp, #0x38
  4484bc:	sub	x2, x29, #0x18
  4484c0:	ldr	w1, [x8, x19, lsl #2]
  4484c4:	bl	404b40 <wcrtomb@plt>
  4484c8:	cmn	x0, #0x1
  4484cc:	b.eq	4484ec <_obstack_memory_used@@Base+0x199c>  // b.none
  4484d0:	ldrb	w22, [sp, #56]
  4484d4:	strb	w26, [x20, x22]
  4484d8:	cbz	w24, 4484ec <_obstack_memory_used@@Base+0x199c>
  4484dc:	bl	404140 <__ctype_tolower_loc@plt>
  4484e0:	ldr	x8, [x0]
  4484e4:	ldrsw	x8, [x8, x22, lsl #2]
  4484e8:	strb	w26, [x20, x8]
  4484ec:	ldrb	w8, [x25, #26]
  4484f0:	tbz	w8, #6, 4484a0 <_obstack_memory_used@@Base+0x1950>
  4484f4:	ldr	w8, [x28, #180]
  4484f8:	cmp	w8, #0x2
  4484fc:	b.lt	4484a0 <_obstack_memory_used@@Base+0x1950>  // b.tstop
  448500:	ldr	x8, [x21]
  448504:	ldr	w0, [x8, x19, lsl #2]
  448508:	bl	404ab0 <towlower@plt>
  44850c:	mov	w1, w0
  448510:	add	x0, sp, #0x38
  448514:	sub	x2, x29, #0x18
  448518:	bl	404b40 <wcrtomb@plt>
  44851c:	cmn	x0, #0x1
  448520:	b.eq	4484a0 <_obstack_memory_used@@Base+0x1950>  // b.none
  448524:	ldrb	w8, [sp, #56]
  448528:	strb	w26, [x20, x8]
  44852c:	b	4484a0 <_obstack_memory_used@@Base+0x1950>
  448530:	movi	v0.16b, #0x1
  448534:	cmp	w8, #0x2
  448538:	stp	q0, q0, [x20, #224]
  44853c:	stp	q0, q0, [x20, #192]
  448540:	stp	q0, q0, [x20, #160]
  448544:	stp	q0, q0, [x20, #128]
  448548:	stp	q0, q0, [x20, #96]
  44854c:	stp	q0, q0, [x20, #64]
  448550:	stp	q0, q0, [x20, #32]
  448554:	stp	q0, q0, [x20]
  448558:	b.ne	448568 <_obstack_memory_used@@Base+0x1a18>  // b.any
  44855c:	ldrb	w8, [x25, #56]
  448560:	orr	w8, w8, #0x1
  448564:	strb	w8, [x25, #56]
  448568:	ldp	x20, x19, [sp, #416]
  44856c:	ldp	x22, x21, [sp, #400]
  448570:	ldp	x24, x23, [sp, #384]
  448574:	ldp	x26, x25, [sp, #368]
  448578:	ldp	x28, x27, [sp, #352]
  44857c:	ldp	x29, x30, [sp, #336]
  448580:	add	sp, sp, #0x1b0
  448584:	ret
  448588:	stp	x29, x30, [sp, #-48]!
  44858c:	stp	x20, x19, [sp, #32]
  448590:	mov	x19, x0
  448594:	stp	xzr, xzr, [x0]
  448598:	str	xzr, [x0, #16]
  44859c:	mov	w0, #0x100                 	// #256
  4485a0:	stp	x22, x21, [sp, #16]
  4485a4:	mov	x29, sp
  4485a8:	mov	w21, w2
  4485ac:	mov	x20, x1
  4485b0:	bl	404250 <malloc@plt>
  4485b4:	str	x0, [x19, #32]
  4485b8:	cbz	x0, 44866c <_obstack_memory_used@@Base+0x1b1c>
  4485bc:	mov	w8, #0xb2fc                	// #45820
  4485c0:	mov	w9, #0x2c6                 	// #710
  4485c4:	tst	w21, #0x1
  4485c8:	movk	w8, #0x3, lsl #16
  4485cc:	movk	w9, #0x101, lsl #16
  4485d0:	lsl	w10, w21, #21
  4485d4:	csel	x8, x9, x8, eq  // eq = none
  4485d8:	and	w9, w10, #0x400000
  4485dc:	orr	x22, x8, x9
  4485e0:	tbnz	w21, #2, 4485f0 <_obstack_memory_used@@Base+0x1aa0>
  4485e4:	ldrb	w8, [x19, #56]
  4485e8:	and	w8, w8, #0x7f
  4485ec:	b	448608 <_obstack_memory_used@@Base+0x1ab8>
  4485f0:	ldrb	w8, [x19, #56]
  4485f4:	mov	w9, #0xb2be                	// #45758
  4485f8:	movk	w9, #0x143, lsl #16
  4485fc:	and	x9, x22, x9
  448600:	orr	x22, x9, #0x100
  448604:	orr	w8, w8, #0xffffff80
  448608:	lsl	w9, w21, #1
  44860c:	strb	w8, [x19, #56]
  448610:	and	w8, w8, #0xffffffef
  448614:	and	w9, w9, #0x10
  448618:	orr	w8, w8, w9
  44861c:	mov	x0, x20
  448620:	strb	w8, [x19, #56]
  448624:	str	xzr, [x19, #40]
  448628:	bl	403f40 <strlen@plt>
  44862c:	mov	x2, x0
  448630:	mov	x0, x19
  448634:	mov	x1, x20
  448638:	mov	x3, x22
  44863c:	bl	446d5c <_obstack_memory_used@@Base+0x20c>
  448640:	cmp	w0, #0x10
  448644:	mov	w8, #0x8                   	// #8
  448648:	csel	w20, w8, w0, eq  // eq = none
  44864c:	cbnz	w20, 448674 <_obstack_memory_used@@Base+0x1b24>
  448650:	mov	x0, x19
  448654:	bl	448008 <_obstack_memory_used@@Base+0x14b8>
  448658:	mov	w0, w20
  44865c:	ldp	x20, x19, [sp, #32]
  448660:	ldp	x22, x21, [sp, #16]
  448664:	ldp	x29, x30, [sp], #48
  448668:	ret
  44866c:	mov	w20, #0xc                   	// #12
  448670:	b	448658 <_obstack_memory_used@@Base+0x1b08>
  448674:	ldr	x0, [x19, #32]
  448678:	bl	404700 <free@plt>
  44867c:	str	xzr, [x19, #32]
  448680:	b	448658 <_obstack_memory_used@@Base+0x1b08>
  448684:	stp	x29, x30, [sp, #-48]!
  448688:	cmp	w0, #0x11
  44868c:	stp	x22, x21, [sp, #16]
  448690:	stp	x20, x19, [sp, #32]
  448694:	mov	x29, sp
  448698:	b.cs	448710 <_obstack_memory_used@@Base+0x1bc0>  // b.hs, b.nlast
  44869c:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4486a0:	add	x8, x8, #0xb10
  4486a4:	ldr	x8, [x8, w0, uxtw #3]
  4486a8:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4486ac:	add	x9, x9, #0x98f
  4486b0:	mov	x19, x2
  4486b4:	add	x1, x9, x8
  4486b8:	mov	w2, #0x5                   	// #5
  4486bc:	mov	x0, xzr
  4486c0:	mov	x20, x3
  4486c4:	bl	404900 <dcgettext@plt>
  4486c8:	mov	x21, x0
  4486cc:	bl	403f40 <strlen@plt>
  4486d0:	add	x22, x0, #0x1
  4486d4:	cbz	x20, 4486f0 <_obstack_memory_used@@Base+0x1ba0>
  4486d8:	cmp	x22, x20
  4486dc:	mov	x2, x22
  4486e0:	b.hi	448704 <_obstack_memory_used@@Base+0x1bb4>  // b.pmore
  4486e4:	mov	x0, x19
  4486e8:	mov	x1, x21
  4486ec:	bl	403ec0 <memcpy@plt>
  4486f0:	mov	x0, x22
  4486f4:	ldp	x20, x19, [sp, #32]
  4486f8:	ldp	x22, x21, [sp, #16]
  4486fc:	ldp	x29, x30, [sp], #48
  448700:	ret
  448704:	sub	x2, x20, #0x1
  448708:	strb	wzr, [x19, x2]
  44870c:	b	4486e4 <_obstack_memory_used@@Base+0x1b94>
  448710:	bl	4045b0 <abort@plt>
  448714:	stp	x29, x30, [sp, #-32]!
  448718:	str	x19, [sp, #16]
  44871c:	mov	x19, x0
  448720:	ldr	x0, [x0]
  448724:	mov	x29, sp
  448728:	cbz	x0, 448730 <_obstack_memory_used@@Base+0x1be0>
  44872c:	bl	448758 <_obstack_memory_used@@Base+0x1c08>
  448730:	ldr	x0, [x19, #32]
  448734:	stp	xzr, xzr, [x19]
  448738:	bl	404700 <free@plt>
  44873c:	ldr	x0, [x19, #40]
  448740:	str	xzr, [x19, #32]
  448744:	bl	404700 <free@plt>
  448748:	str	xzr, [x19, #40]
  44874c:	ldr	x19, [sp, #16]
  448750:	ldp	x29, x30, [sp], #32
  448754:	ret
  448758:	stp	x29, x30, [sp, #-64]!
  44875c:	stp	x24, x23, [sp, #16]
  448760:	stp	x22, x21, [sp, #32]
  448764:	stp	x20, x19, [sp, #48]
  448768:	ldr	x8, [x0]
  44876c:	mov	x19, x0
  448770:	mov	x29, sp
  448774:	cbz	x8, 4487fc <_obstack_memory_used@@Base+0x1cac>
  448778:	ldr	x9, [x19, #16]
  44877c:	cbz	x9, 4487fc <_obstack_memory_used@@Base+0x1cac>
  448780:	mov	w23, #0xff                  	// #255
  448784:	mov	x21, xzr
  448788:	mov	w22, #0x1                   	// #1
  44878c:	movk	w23, #0x4, lsl #16
  448790:	add	x9, x8, x21
  448794:	ldr	w9, [x9, #8]
  448798:	and	w9, w9, w23
  44879c:	cmp	w9, #0x3
  4487a0:	b.eq	4487d4 <_obstack_memory_used@@Base+0x1c84>  // b.none
  4487a4:	cmp	w9, #0x6
  4487a8:	b.ne	4487e0 <_obstack_memory_used@@Base+0x1c90>  // b.any
  4487ac:	ldr	x20, [x8, x21]
  4487b0:	ldr	x0, [x20]
  4487b4:	bl	404700 <free@plt>
  4487b8:	ldr	x0, [x20, #8]
  4487bc:	bl	404700 <free@plt>
  4487c0:	ldr	x0, [x20, #16]
  4487c4:	bl	404700 <free@plt>
  4487c8:	ldr	x0, [x20, #24]
  4487cc:	bl	404700 <free@plt>
  4487d0:	b	4487d8 <_obstack_memory_used@@Base+0x1c88>
  4487d4:	ldr	x20, [x8, x21]
  4487d8:	mov	x0, x20
  4487dc:	bl	404700 <free@plt>
  4487e0:	ldr	x8, [x19, #16]
  4487e4:	cmp	x22, x8
  4487e8:	b.cs	4487fc <_obstack_memory_used@@Base+0x1cac>  // b.hs, b.nlast
  4487ec:	ldr	x8, [x19]
  4487f0:	add	x22, x22, #0x1
  4487f4:	add	x21, x21, #0x10
  4487f8:	b	448790 <_obstack_memory_used@@Base+0x1c40>
  4487fc:	ldr	x0, [x19, #24]
  448800:	bl	404700 <free@plt>
  448804:	ldr	x8, [x19, #16]
  448808:	cbz	x8, 448860 <_obstack_memory_used@@Base+0x1d10>
  44880c:	mov	x20, xzr
  448810:	mov	w21, #0x10                  	// #16
  448814:	b	44882c <_obstack_memory_used@@Base+0x1cdc>
  448818:	ldr	x8, [x19, #16]
  44881c:	add	x20, x20, #0x1
  448820:	add	x21, x21, #0x18
  448824:	cmp	x20, x8
  448828:	b.cs	448860 <_obstack_memory_used@@Base+0x1d10>  // b.hs, b.nlast
  44882c:	ldr	x8, [x19, #48]
  448830:	cbz	x8, 44883c <_obstack_memory_used@@Base+0x1cec>
  448834:	ldr	x0, [x8, x21]
  448838:	bl	404700 <free@plt>
  44883c:	ldr	x8, [x19, #56]
  448840:	cbz	x8, 44884c <_obstack_memory_used@@Base+0x1cfc>
  448844:	ldr	x0, [x8, x21]
  448848:	bl	404700 <free@plt>
  44884c:	ldr	x8, [x19, #40]
  448850:	cbz	x8, 448818 <_obstack_memory_used@@Base+0x1cc8>
  448854:	ldr	x0, [x8, x21]
  448858:	bl	404700 <free@plt>
  44885c:	b	448818 <_obstack_memory_used@@Base+0x1cc8>
  448860:	ldr	x0, [x19, #40]
  448864:	bl	404700 <free@plt>
  448868:	ldr	x0, [x19, #48]
  44886c:	bl	404700 <free@plt>
  448870:	ldr	x0, [x19, #56]
  448874:	bl	404700 <free@plt>
  448878:	ldr	x0, [x19]
  44887c:	bl	404700 <free@plt>
  448880:	ldr	x0, [x19, #64]
  448884:	cbz	x0, 4488e8 <_obstack_memory_used@@Base+0x1d98>
  448888:	mov	x20, xzr
  44888c:	mov	w21, #0x18                  	// #24
  448890:	madd	x23, x20, x21, x0
  448894:	mov	x22, x23
  448898:	ldr	x8, [x22], #16
  44889c:	cmp	x8, #0x1
  4488a0:	b.lt	4488c4 <_obstack_memory_used@@Base+0x1d74>  // b.tstop
  4488a4:	mov	x24, xzr
  4488a8:	ldr	x8, [x22]
  4488ac:	ldr	x0, [x8, x24, lsl #3]
  4488b0:	bl	44b73c <_obstack_memory_used@@Base+0x4bec>
  4488b4:	ldr	x8, [x23]
  4488b8:	add	x24, x24, #0x1
  4488bc:	cmp	x24, x8
  4488c0:	b.lt	4488a8 <_obstack_memory_used@@Base+0x1d58>  // b.tstop
  4488c4:	ldr	x0, [x22]
  4488c8:	bl	404700 <free@plt>
  4488cc:	ldr	x8, [x19, #136]
  4488d0:	cmp	x20, x8
  4488d4:	b.cs	4488e4 <_obstack_memory_used@@Base+0x1d94>  // b.hs, b.nlast
  4488d8:	ldr	x0, [x19, #64]
  4488dc:	add	x20, x20, #0x1
  4488e0:	b	448890 <_obstack_memory_used@@Base+0x1d40>
  4488e4:	ldr	x0, [x19, #64]
  4488e8:	bl	404700 <free@plt>
  4488ec:	ldr	x0, [x19, #120]
  4488f0:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4488f4:	add	x8, x8, #0xb98
  4488f8:	cmp	x0, x8
  4488fc:	b.eq	448904 <_obstack_memory_used@@Base+0x1db4>  // b.none
  448900:	bl	404700 <free@plt>
  448904:	ldr	x0, [x19, #224]
  448908:	bl	404700 <free@plt>
  44890c:	mov	x0, x19
  448910:	ldp	x20, x19, [sp, #48]
  448914:	ldp	x22, x21, [sp, #32]
  448918:	ldp	x24, x23, [sp, #16]
  44891c:	ldp	x29, x30, [sp], #64
  448920:	b	404700 <free@plt>
  448924:	cmp	w4, #0x7
  448928:	b.ls	448934 <_obstack_memory_used@@Base+0x1de4>  // b.plast
  44892c:	mov	w0, #0x2                   	// #2
  448930:	ret
  448934:	sub	sp, sp, #0x50
  448938:	str	x23, [sp, #32]
  44893c:	stp	x22, x21, [sp, #48]
  448940:	stp	x20, x19, [sp, #64]
  448944:	mov	w22, w4
  448948:	mov	x19, x3
  44894c:	mov	x21, x2
  448950:	mov	x20, x1
  448954:	mov	x23, x0
  448958:	stp	x29, x30, [sp, #16]
  44895c:	add	x29, sp, #0x10
  448960:	tbnz	w4, #2, 44899c <_obstack_memory_used@@Base+0x1e4c>
  448964:	mov	x0, x20
  448968:	bl	403f40 <strlen@plt>
  44896c:	mov	x2, x0
  448970:	mov	x3, xzr
  448974:	ldrb	w8, [x23, #56]
  448978:	tbz	w8, #4, 4489a8 <_obstack_memory_used@@Base+0x1e58>
  44897c:	str	w22, [sp]
  448980:	mov	x0, x23
  448984:	mov	x1, x20
  448988:	mov	x4, x2
  44898c:	mov	x5, x2
  448990:	mov	x6, xzr
  448994:	mov	x7, xzr
  448998:	b	4489c4 <_obstack_memory_used@@Base+0x1e74>
  44899c:	ldp	x3, x2, [x19]
  4489a0:	ldrb	w8, [x23, #56]
  4489a4:	tbnz	w8, #4, 44897c <_obstack_memory_used@@Base+0x1e2c>
  4489a8:	mov	x0, x23
  4489ac:	mov	x1, x20
  4489b0:	mov	x4, x2
  4489b4:	mov	x5, x2
  4489b8:	mov	x6, x21
  4489bc:	mov	x7, x19
  4489c0:	str	w22, [sp]
  4489c4:	bl	4489e8 <_obstack_memory_used@@Base+0x1e98>
  4489c8:	ldp	x20, x19, [sp, #64]
  4489cc:	ldp	x22, x21, [sp, #48]
  4489d0:	ldr	x23, [sp, #32]
  4489d4:	ldp	x29, x30, [sp, #16]
  4489d8:	cmp	w0, #0x0
  4489dc:	cset	w0, ne  // ne = any
  4489e0:	add	sp, sp, #0x50
  4489e4:	ret
  4489e8:	stp	x29, x30, [sp, #-96]!
  4489ec:	stp	x28, x27, [sp, #16]
  4489f0:	stp	x26, x25, [sp, #32]
  4489f4:	stp	x24, x23, [sp, #48]
  4489f8:	stp	x22, x21, [sp, #64]
  4489fc:	stp	x20, x19, [sp, #80]
  448a00:	mov	x29, sp
  448a04:	sub	sp, sp, #0x2e0
  448a08:	ldr	x22, [x0]
  448a0c:	movi	v0.2d, #0x0
  448a10:	stp	q0, q0, [sp, #528]
  448a14:	stp	q0, q0, [sp, #496]
  448a18:	stp	q0, q0, [sp, #464]
  448a1c:	stp	q0, q0, [sp, #432]
  448a20:	stp	q0, q0, [sp, #400]
  448a24:	stp	q0, q0, [sp, #368]
  448a28:	stp	q0, q0, [sp, #336]
  448a2c:	stp	q0, q0, [sp, #304]
  448a30:	str	x22, [sp, #456]
  448a34:	ldr	x8, [x0, #32]
  448a38:	mov	x19, x5
  448a3c:	mov	x26, x3
  448a40:	mov	x28, x2
  448a44:	mov	x23, x0
  448a48:	str	x7, [sp, #160]
  448a4c:	cbz	x8, 448a6c <_obstack_memory_used@@Base+0x1f1c>
  448a50:	ldrb	w9, [x23, #56]
  448a54:	mov	w10, #0x9                   	// #9
  448a58:	and	w9, w9, w10
  448a5c:	cmp	w9, #0x8
  448a60:	ccmp	x26, x4, #0x4, eq  // eq = none
  448a64:	csel	x25, x8, xzr, ne  // ne = any
  448a68:	b	448a70 <_obstack_memory_used@@Base+0x1f20>
  448a6c:	mov	x25, xzr
  448a70:	ldr	x8, [x23, #48]
  448a74:	ldr	x9, [x23, #16]
  448a78:	mvn	x10, x8
  448a7c:	add	x10, x10, x6
  448a80:	cmp	x8, x6
  448a84:	csel	x12, x10, xzr, cc  // cc = lo, ul, last
  448a88:	cbz	x9, 44af50 <_obstack_memory_used@@Base+0x4400>
  448a8c:	ldr	x10, [x22, #72]
  448a90:	cbz	x10, 44af50 <_obstack_memory_used@@Base+0x4400>
  448a94:	ldr	x9, [x22, #80]
  448a98:	cbz	x9, 44af50 <_obstack_memory_used@@Base+0x4400>
  448a9c:	ldr	x8, [x22, #88]
  448aa0:	cbz	x8, 44af50 <_obstack_memory_used@@Base+0x4400>
  448aa4:	ldr	x11, [x22, #96]
  448aa8:	cbz	x11, 44af50 <_obstack_memory_used@@Base+0x4400>
  448aac:	ldr	x10, [x10, #16]
  448ab0:	ldr	x13, [x23, #40]
  448ab4:	cbnz	x10, 448ac0 <_obstack_memory_used@@Base+0x1f70>
  448ab8:	ldr	x9, [x9, #16]
  448abc:	cbz	x9, 44af30 <_obstack_memory_used@@Base+0x43e0>
  448ac0:	mov	x21, x4
  448ac4:	sub	x24, x6, x12
  448ac8:	stp	x12, x6, [sp, #144]
  448acc:	cbz	x24, 448ad8 <_obstack_memory_used@@Base+0x1f88>
  448ad0:	mov	w8, #0x1                   	// #1
  448ad4:	b	448ae4 <_obstack_memory_used@@Base+0x1f94>
  448ad8:	ldr	x8, [x22, #152]
  448adc:	cmp	x8, #0x0
  448ae0:	cset	w8, ne  // ne = any
  448ae4:	str	w8, [sp, #196]
  448ae8:	ldr	x8, [x22, #16]
  448aec:	ldrsw	x10, [x22, #180]
  448af0:	ldr	x9, [x23, #24]
  448af4:	add	x11, x28, #0x1
  448af8:	add	x12, x8, #0x1
  448afc:	cmp	x12, x10
  448b00:	and	x12, x9, #0x400000
  448b04:	ubfx	x9, x9, #22, #1
  448b08:	csinc	x8, x10, x8, lt  // lt = tstop
  448b0c:	strb	w9, [sp, #440]
  448b10:	orr	x9, x13, x12
  448b14:	cmp	x11, x8
  448b18:	csinc	x27, x8, x28, ge  // ge = tcont
  448b1c:	cmp	x9, #0x0
  448b20:	cset	w20, ne  // ne = any
  448b24:	str	x1, [sp, #304]
  448b28:	stp	x28, x28, [sp, #384]
  448b2c:	str	x13, [sp, #424]
  448b30:	str	w10, [sp, #448]
  448b34:	strb	w20, [sp, #443]
  448b38:	ldrb	w8, [x22, #176]
  448b3c:	cmp	w10, #0x2
  448b40:	stp	x28, x28, [sp, #400]
  448b44:	str	x1, [sp, #248]
  448b48:	ubfx	w9, w8, #2, #1
  448b4c:	ubfx	w8, w8, #3, #1
  448b50:	strb	w9, [sp, #441]
  448b54:	strb	w8, [sp, #442]
  448b58:	str	x13, [sp, #224]
  448b5c:	b.lt	448b7c <_obstack_memory_used@@Base+0x202c>  // b.tstop
  448b60:	lsr	x8, x27, #61
  448b64:	cbnz	x8, 44b030 <_obstack_memory_used@@Base+0x44e0>
  448b68:	lsl	x0, x27, #2
  448b6c:	bl	404250 <malloc@plt>
  448b70:	cbz	x0, 44b030 <_obstack_memory_used@@Base+0x44e0>
  448b74:	ldr	x1, [sp, #248]
  448b78:	str	x0, [sp, #320]
  448b7c:	cbz	w20, 448b9c <_obstack_memory_used@@Base+0x204c>
  448b80:	mov	x0, x27
  448b84:	bl	404250 <malloc@plt>
  448b88:	cbz	x0, 44b030 <_obstack_memory_used@@Base+0x44e0>
  448b8c:	ldr	x1, [sp, #248]
  448b90:	mov	w8, wzr
  448b94:	str	x0, [sp, #312]
  448b98:	b	448ba0 <_obstack_memory_used@@Base+0x2050>
  448b9c:	mov	w8, #0x1                   	// #1
  448ba0:	add	x9, x22, #0xb8
  448ba4:	str	x27, [sp, #368]
  448ba8:	str	x9, [sp, #432]
  448bac:	ldrb	w9, [x22, #176]
  448bb0:	ldr	w10, [x29, #96]
  448bb4:	ubfx	w9, w9, #4, #1
  448bb8:	str	w10, [sp, #284]
  448bbc:	strb	w9, [sp, #446]
  448bc0:	cbz	w8, 448bd8 <_obstack_memory_used@@Base+0x2088>
  448bc4:	str	x1, [sp, #312]
  448bc8:	ldr	w8, [x22, #180]
  448bcc:	cmp	w8, #0x1
  448bd0:	csel	x8, xzr, x28, gt
  448bd4:	b	448bdc <_obstack_memory_used@@Base+0x208c>
  448bd8:	mov	x8, xzr
  448bdc:	stp	x8, x8, [sp, #352]
  448be0:	stp	x19, x19, [sp, #400]
  448be4:	ldrb	w8, [x23, #56]
  448be8:	ldr	w9, [sp, #284]
  448bec:	str	x28, [sp, #272]
  448bf0:	lsr	w8, w8, #7
  448bf4:	strb	w8, [sp, #445]
  448bf8:	ldr	x19, [x22, #152]
  448bfc:	mov	x8, #0xffffffffffffffff    	// #-1
  448c00:	str	w9, [sp, #464]
  448c04:	str	x8, [sp, #472]
  448c08:	lsl	x20, x19, #1
  448c0c:	cmp	x19, #0x1
  448c10:	b.lt	448c54 <_obstack_memory_used@@Base+0x2104>  // b.tstop
  448c14:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  448c18:	movk	x8, #0x666, lsl #48
  448c1c:	cmp	x20, x8
  448c20:	b.hi	44b030 <_obstack_memory_used@@Base+0x44e0>  // b.pmore
  448c24:	add	x8, x19, x19, lsl #2
  448c28:	lsl	x0, x8, #4
  448c2c:	bl	404250 <malloc@plt>
  448c30:	mov	x28, x0
  448c34:	str	x0, [sp, #520]
  448c38:	lsl	x0, x19, #4
  448c3c:	bl	404250 <malloc@plt>
  448c40:	mov	w19, #0xc                   	// #12
  448c44:	str	x0, [sp, #552]
  448c48:	cbz	x28, 44aec4 <_obstack_memory_used@@Base+0x4374>
  448c4c:	ldr	x28, [sp, #272]
  448c50:	cbz	x0, 44aec4 <_obstack_memory_used@@Base+0x4374>
  448c54:	mov	w8, #0x1                   	// #1
  448c58:	cmp	x24, #0x1
  448c5c:	str	x20, [sp, #512]
  448c60:	str	w8, [sp, #528]
  448c64:	str	x20, [sp, #544]
  448c68:	b.hi	448c7c <_obstack_memory_used@@Base+0x212c>  // b.pmore
  448c6c:	ldrb	w8, [x22, #176]
  448c70:	tbnz	w8, #1, 448c7c <_obstack_memory_used@@Base+0x212c>
  448c74:	str	xzr, [sp, #488]
  448c78:	b	448c9c <_obstack_memory_used@@Base+0x214c>
  448c7c:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  448c80:	cmp	x27, x8
  448c84:	b.hi	44b030 <_obstack_memory_used@@Base+0x44e0>  // b.pmore
  448c88:	lsl	x8, x27, #3
  448c8c:	add	x0, x8, #0x8
  448c90:	bl	404250 <malloc@plt>
  448c94:	str	x0, [sp, #488]
  448c98:	cbz	x0, 44b030 <_obstack_memory_used@@Base+0x44e0>
  448c9c:	ldr	w9, [sp, #284]
  448ca0:	mov	w10, #0x6                   	// #6
  448ca4:	stur	x26, [x29, #-176]
  448ca8:	add	x8, sp, #0x130
  448cac:	tst	w9, #0x1
  448cb0:	mov	w9, #0x4                   	// #4
  448cb4:	csel	w9, w10, w9, eq  // eq = none
  448cb8:	str	w9, [sp, #416]
  448cbc:	ldr	w10, [x22, #180]
  448cc0:	cmp	x21, x26
  448cc4:	csel	x9, x21, x26, lt  // lt = tstop
  448cc8:	csel	x20, x26, x21, lt  // lt = tstop
  448ccc:	str	x9, [sp, #288]
  448cd0:	str	w10, [sp, #236]
  448cd4:	cbz	x25, 448cec <_obstack_memory_used@@Base+0x219c>
  448cd8:	cmp	w10, #0x1
  448cdc:	b.ne	448cf4 <_obstack_memory_used@@Base+0x21a4>  // b.any
  448ce0:	ldr	x11, [sp, #224]
  448ce4:	mov	w9, #0x4                   	// #4
  448ce8:	b	448d10 <_obstack_memory_used@@Base+0x21c0>
  448cec:	mov	w9, #0x8                   	// #8
  448cf0:	b	448d28 <_obstack_memory_used@@Base+0x21d8>
  448cf4:	ldr	x9, [x23, #24]
  448cf8:	ldr	x11, [sp, #224]
  448cfc:	and	x9, x9, #0x400000
  448d00:	orr	x9, x11, x9
  448d04:	cmp	x9, #0x0
  448d08:	cset	w9, eq  // eq = none
  448d0c:	lsl	w9, w9, #2
  448d10:	cmp	x21, x26
  448d14:	cset	w10, ge  // ge = tcont
  448d18:	cmp	x11, #0x0
  448d1c:	cset	w11, ne  // ne = any
  448d20:	bfi	w11, w10, #1, #1
  448d24:	orr	w9, w11, w9
  448d28:	add	x8, x8, #0x38
  448d2c:	str	x8, [sp, #136]
  448d30:	add	x8, sp, #0x130
  448d34:	cmp	x21, x26
  448d38:	sub	x10, x29, #0xb0
  448d3c:	add	x8, x8, #0xc0
  448d40:	ldr	x21, [sp, #288]
  448d44:	mov	x11, #0xffffffffffffffff    	// #-1
  448d48:	sub	w9, w9, #0x4
  448d4c:	str	x8, [sp, #216]
  448d50:	csel	x8, xzr, x10, lt  // lt = tstop
  448d54:	sub	x12, x29, #0x40
  448d58:	str	x9, [sp, #256]
  448d5c:	cneg	x9, x11, ge  // ge = tcont
  448d60:	cmp	x8, #0x0
  448d64:	str	x9, [sp, #296]
  448d68:	add	x9, x12, #0x20
  448d6c:	str	x8, [sp, #200]
  448d70:	cset	w8, ne  // ne = any
  448d74:	stp	x9, x23, [sp, #176]
  448d78:	str	w8, [sp, #212]
  448d7c:	ldr	x10, [sp, #256]
  448d80:	cmp	w10, #0x4
  448d84:	b.hi	448f00 <_obstack_memory_used@@Base+0x23b0>  // b.pmore
  448d88:	adrp	x11, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  448d8c:	add	x11, x11, #0x853
  448d90:	adr	x8, 448da0 <_obstack_memory_used@@Base+0x2250>
  448d94:	ldrb	w9, [x11, x10]
  448d98:	add	x8, x8, x9, lsl #2
  448d9c:	br	x8
  448da0:	cmp	x26, x21
  448da4:	b.lt	44aec0 <_obstack_memory_used@@Base+0x4370>  // b.tstop
  448da8:	ldr	x9, [sp, #248]
  448dac:	ldr	x10, [sp, #224]
  448db0:	cmp	x26, x28
  448db4:	b.ge	448dc4 <_obstack_memory_used@@Base+0x2274>  // b.tcont
  448db8:	ldrb	w8, [x9, x26]
  448dbc:	cbnz	x10, 448dcc <_obstack_memory_used@@Base+0x227c>
  448dc0:	b	448dd0 <_obstack_memory_used@@Base+0x2280>
  448dc4:	mov	w8, wzr
  448dc8:	cbz	x10, 448dd0 <_obstack_memory_used@@Base+0x2280>
  448dcc:	ldrb	w8, [x10, w8, uxtw]
  448dd0:	ldrb	w8, [x25, w8, uxtw]
  448dd4:	cbnz	w8, 448e50 <_obstack_memory_used@@Base+0x2300>
  448dd8:	cmp	x26, x21
  448ddc:	sub	x26, x26, #0x1
  448de0:	stur	x26, [x29, #-176]
  448de4:	b.gt	448db0 <_obstack_memory_used@@Base+0x2260>
  448de8:	b	44aec0 <_obstack_memory_used@@Base+0x4370>
  448dec:	cmp	x26, x20
  448df0:	b.ge	448e48 <_obstack_memory_used@@Base+0x22f8>  // b.tcont
  448df4:	ldr	x9, [sp, #248]
  448df8:	ldr	x10, [sp, #224]
  448dfc:	ldrb	w8, [x9, x26]
  448e00:	ldrb	w8, [x10, x8]
  448e04:	ldrb	w8, [x25, x8]
  448e08:	cbnz	w8, 448e48 <_obstack_memory_used@@Base+0x22f8>
  448e0c:	add	x26, x26, #0x1
  448e10:	cmp	x26, x20
  448e14:	stur	x26, [x29, #-176]
  448e18:	b.lt	448dfc <_obstack_memory_used@@Base+0x22ac>  // b.tstop
  448e1c:	b	448e48 <_obstack_memory_used@@Base+0x22f8>
  448e20:	ldr	x9, [sp, #248]
  448e24:	cmp	x26, x20
  448e28:	b.ge	448e48 <_obstack_memory_used@@Base+0x22f8>  // b.tcont
  448e2c:	ldrb	w8, [x9, x26]
  448e30:	ldrb	w8, [x25, x8]
  448e34:	cbnz	w8, 448e48 <_obstack_memory_used@@Base+0x22f8>
  448e38:	add	x26, x26, #0x1
  448e3c:	cmp	x26, x20
  448e40:	stur	x26, [x29, #-176]
  448e44:	b.lt	448e2c <_obstack_memory_used@@Base+0x22dc>  // b.tstop
  448e48:	cmp	x26, x20
  448e4c:	b.eq	449024 <_obstack_memory_used@@Base+0x24d4>  // b.none
  448e50:	ldr	w2, [sp, #284]
  448e54:	add	x0, sp, #0x130
  448e58:	mov	x1, x26
  448e5c:	bl	45100c <_obstack_memory_used@@Base+0xa4bc>
  448e60:	cbnz	w0, 44b01c <_obstack_memory_used@@Base+0x44cc>
  448e64:	ldr	w8, [sp, #236]
  448e68:	cmp	w8, #0x1
  448e6c:	b.eq	448e88 <_obstack_memory_used@@Base+0x2338>  // b.none
  448e70:	ldr	x8, [sp, #352]
  448e74:	cbz	x8, 448e88 <_obstack_memory_used@@Base+0x2338>
  448e78:	ldr	x8, [sp, #320]
  448e7c:	ldr	w8, [x8]
  448e80:	cmn	w8, #0x1
  448e84:	b.eq	44aa38 <_obstack_memory_used@@Base+0x3ee8>  // b.none
  448e88:	ldr	x8, [sp, #216]
  448e8c:	str	wzr, [sp, #528]
  448e90:	stur	wzr, [x29, #-164]
  448e94:	stp	xzr, xzr, [x8]
  448e98:	ldr	x19, [sp, #456]
  448e9c:	ldr	x15, [sp, #376]
  448ea0:	ldr	x26, [x19, #72]
  448ea4:	ldrsb	w8, [x26, #104]
  448ea8:	tbz	w8, #31, 449050 <_obstack_memory_used@@Base+0x2500>
  448eac:	cmp	x15, #0x0
  448eb0:	b.le	448ef4 <_obstack_memory_used@@Base+0x23a4>
  448eb4:	ldr	x9, [sp, #392]
  448eb8:	sub	x8, x15, #0x1
  448ebc:	cmp	x9, x8
  448ec0:	b.eq	449038 <_obstack_memory_used@@Base+0x24e8>  // b.none
  448ec4:	ldr	w9, [sp, #448]
  448ec8:	cmp	w9, #0x2
  448ecc:	b.lt	448f88 <_obstack_memory_used@@Base+0x2438>  // b.tstop
  448ed0:	ldr	x8, [sp, #320]
  448ed4:	mov	x9, x15
  448ed8:	sub	x8, x8, #0x4
  448edc:	ldr	w27, [x8, x9, lsl #2]
  448ee0:	cmn	w27, #0x1
  448ee4:	b.ne	448fb4 <_obstack_memory_used@@Base+0x2464>  // b.any
  448ee8:	sub	x9, x9, #0x1
  448eec:	cmp	x9, #0x0
  448ef0:	b.gt	448edc <_obstack_memory_used@@Base+0x238c>
  448ef4:	ldr	w3, [sp, #416]
  448ef8:	tbnz	w3, #0, 44904c <_obstack_memory_used@@Base+0x24fc>
  448efc:	b	448fd8 <_obstack_memory_used@@Base+0x2488>
  448f00:	ldr	x8, [sp, #344]
  448f04:	ldr	x10, [sp, #360]
  448f08:	sub	x9, x26, x8
  448f0c:	cmp	x9, x10
  448f10:	b.cs	448f30 <_obstack_memory_used@@Base+0x23e0>  // b.hs, b.nlast
  448f14:	cmp	x26, x28
  448f18:	b.ge	448f58 <_obstack_memory_used@@Base+0x2408>  // b.tcont
  448f1c:	ldr	x10, [sp, #312]
  448f20:	ldrb	w9, [x10, x9]
  448f24:	ldrb	w9, [x25, x9]
  448f28:	cbz	w9, 448f64 <_obstack_memory_used@@Base+0x2414>
  448f2c:	b	448e50 <_obstack_memory_used@@Base+0x2300>
  448f30:	ldr	w2, [sp, #284]
  448f34:	add	x0, sp, #0x130
  448f38:	mov	x1, x26
  448f3c:	bl	45100c <_obstack_memory_used@@Base+0xa4bc>
  448f40:	cbnz	w0, 44b01c <_obstack_memory_used@@Base+0x44cc>
  448f44:	ldur	x26, [x29, #-176]
  448f48:	ldr	x8, [sp, #344]
  448f4c:	sub	x9, x26, x8
  448f50:	cmp	x26, x28
  448f54:	b.lt	448f1c <_obstack_memory_used@@Base+0x23cc>  // b.tstop
  448f58:	mov	x9, xzr
  448f5c:	ldrb	w9, [x25, x9]
  448f60:	cbnz	w9, 448e50 <_obstack_memory_used@@Base+0x2300>
  448f64:	ldr	x9, [sp, #296]
  448f68:	mov	w19, #0x1                   	// #1
  448f6c:	add	x26, x26, x9
  448f70:	cmp	x26, x21
  448f74:	stur	x26, [x29, #-176]
  448f78:	b.lt	44aec4 <_obstack_memory_used@@Base+0x4374>  // b.tstop
  448f7c:	cmp	x26, x20
  448f80:	b.le	448f04 <_obstack_memory_used@@Base+0x23b4>
  448f84:	b	44aec4 <_obstack_memory_used@@Base+0x4374>
  448f88:	ldr	x9, [sp, #312]
  448f8c:	ldr	x10, [sp, #432]
  448f90:	ldrb	w8, [x9, x8]
  448f94:	lsr	x9, x8, #3
  448f98:	and	x9, x9, #0x18
  448f9c:	ldr	x9, [x10, x9]
  448fa0:	lsr	x9, x9, x8
  448fa4:	tbnz	w9, #0, 44904c <_obstack_memory_used@@Base+0x24fc>
  448fa8:	cmp	w8, #0xa
  448fac:	b.eq	448fc4 <_obstack_memory_used@@Base+0x2474>  // b.none
  448fb0:	b	449050 <_obstack_memory_used@@Base+0x2500>
  448fb4:	ldrb	w8, [sp, #446]
  448fb8:	cbnz	w8, 44ad74 <_obstack_memory_used@@Base+0x4224>
  448fbc:	cmp	w27, #0xa
  448fc0:	b.ne	449050 <_obstack_memory_used@@Base+0x2500>  // b.any
  448fc4:	ldrb	w8, [sp, #445]
  448fc8:	cmp	w8, #0x0
  448fcc:	cset	w8, ne  // ne = any
  448fd0:	lsl	w3, w8, #1
  448fd4:	tbnz	w3, #0, 44904c <_obstack_memory_used@@Base+0x24fc>
  448fd8:	ldr	w27, [sp, #212]
  448fdc:	cbz	w3, 449054 <_obstack_memory_used@@Base+0x2504>
  448fe0:	tbz	w3, #1, 448ff0 <_obstack_memory_used@@Base+0x24a0>
  448fe4:	tbz	w3, #2, 448ff0 <_obstack_memory_used@@Base+0x24a0>
  448fe8:	ldr	x26, [x19, #96]
  448fec:	b	449054 <_obstack_memory_used@@Base+0x2504>
  448ff0:	tbnz	w3, #1, 44901c <_obstack_memory_used@@Base+0x24cc>
  448ff4:	ldr	x26, [x19, #72]
  448ff8:	tbz	w3, #2, 449054 <_obstack_memory_used@@Base+0x2504>
  448ffc:	ldr	x2, [x26, #80]
  449000:	sub	x0, x29, #0xa4
  449004:	mov	x1, x19
  449008:	mov	x26, x15
  44900c:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  449010:	mov	x15, x26
  449014:	mov	x26, x0
  449018:	b	449054 <_obstack_memory_used@@Base+0x2504>
  44901c:	ldr	x26, [x19, #88]
  449020:	b	449054 <_obstack_memory_used@@Base+0x2504>
  449024:	cmp	x20, x28
  449028:	b.ge	44acd4 <_obstack_memory_used@@Base+0x4184>  // b.tcont
  44902c:	ldr	x8, [sp, #248]
  449030:	ldrb	w8, [x8, x20]
  449034:	b	44acd8 <_obstack_memory_used@@Base+0x4188>
  449038:	ldr	w8, [sp, #464]
  44903c:	mov	w9, #0xa                   	// #10
  449040:	and	w8, w8, #0x2
  449044:	eor	w3, w8, w9
  449048:	tbz	w3, #0, 448fd8 <_obstack_memory_used@@Base+0x2488>
  44904c:	ldr	x26, [x19, #80]
  449050:	ldr	w27, [sp, #212]
  449054:	cbz	x26, 44b024 <_obstack_memory_used@@Base+0x44d4>
  449058:	ldr	x8, [sp, #488]
  44905c:	mov	w28, w27
  449060:	cbz	x8, 449074 <_obstack_memory_used@@Base+0x2524>
  449064:	str	x26, [x8, x15, lsl #3]
  449068:	ldr	x8, [x19, #152]
  44906c:	mov	w28, w27
  449070:	cbnz	x8, 44ab4c <_obstack_memory_used@@Base+0x3ffc>
  449074:	ldrsb	w8, [x26, #104]
  449078:	tbnz	w8, #4, 44ab30 <_obstack_memory_used@@Base+0x3fe0>
  44907c:	str	xzr, [sp, #240]
  449080:	mov	x27, #0xffffffffffffffff    	// #-1
  449084:	ldr	x9, [sp, #408]
  449088:	ldr	x8, [sp, #376]
  44908c:	cmp	x9, x8
  449090:	b.le	44a624 <_obstack_memory_used@@Base+0x3ad4>
  449094:	ldr	x9, [sp, #200]
  449098:	str	x9, [sp, #264]
  44909c:	b	4490b8 <_obstack_memory_used@@Base+0x2568>
  4490a0:	ldr	x9, [sp, #408]
  4490a4:	ldr	x8, [sp, #376]
  4490a8:	and	w28, w28, w21
  4490ac:	ldr	x21, [sp, #288]
  4490b0:	cmp	x9, x8
  4490b4:	b.le	44a63c <_obstack_memory_used@@Base+0x3aec>
  4490b8:	ldr	x10, [sp, #368]
  4490bc:	ldr	x9, [sp, #392]
  4490c0:	add	x11, x8, #0x1
  4490c4:	mov	x12, x26
  4490c8:	cmp	x11, x10
  4490cc:	b.lt	4490d8 <_obstack_memory_used@@Base+0x2588>  // b.tstop
  4490d0:	cmp	x10, x9
  4490d4:	b.lt	44a3f0 <_obstack_memory_used@@Base+0x38a0>  // b.tstop
  4490d8:	ldr	x10, [sp, #352]
  4490dc:	cmp	x11, x10
  4490e0:	b.lt	4490ec <_obstack_memory_used@@Base+0x259c>  // b.tstop
  4490e4:	cmp	x10, x9
  4490e8:	b.lt	44a3f0 <_obstack_memory_used@@Base+0x38a0>  // b.tstop
  4490ec:	ldrb	w8, [x12, #104]
  4490f0:	tbnz	w8, #5, 449338 <_obstack_memory_used@@Base+0x27e8>
  4490f4:	ldr	x8, [sp, #376]
  4490f8:	ldr	x9, [sp, #312]
  4490fc:	mov	x19, x12
  449100:	add	x10, x8, #0x1
  449104:	str	x10, [sp, #376]
  449108:	ldrb	w26, [x9, x8]
  44910c:	ldr	x0, [x19, #88]!
  449110:	cbz	x0, 449710 <_obstack_memory_used@@Base+0x2bc0>
  449114:	ldr	x26, [x0, x26, lsl #3]
  449118:	ldr	x8, [sp, #488]
  44911c:	cbz	x8, 44914c <_obstack_memory_used@@Base+0x25fc>
  449120:	sub	x0, x29, #0xa4
  449124:	add	x1, sp, #0x130
  449128:	mov	x2, x26
  44912c:	mov	x21, x11
  449130:	mov	x19, x15
  449134:	mov	x26, x12
  449138:	bl	453008 <_obstack_memory_used@@Base+0xc4b8>
  44913c:	mov	x12, x26
  449140:	mov	x11, x21
  449144:	mov	x15, x19
  449148:	mov	x26, x0
  44914c:	cbz	x26, 449188 <_obstack_memory_used@@Base+0x2638>
  449150:	ldrsb	w8, [x26, #104]
  449154:	cmp	x12, x26
  449158:	cset	w21, eq  // eq = none
  44915c:	tst	w28, w21
  449160:	csel	x15, x11, x15, ne  // ne = any
  449164:	tbz	w8, #4, 4490a0 <_obstack_memory_used@@Base+0x2550>
  449168:	tbnz	w8, #31, 449214 <_obstack_memory_used@@Base+0x26c4>
  44916c:	ldr	x27, [sp, #376]
  449170:	ldr	w8, [sp, #196]
  449174:	cbz	w8, 44ab0c <_obstack_memory_used@@Base+0x3fbc>
  449178:	mov	w8, #0x1                   	// #1
  44917c:	str	xzr, [sp, #264]
  449180:	str	x8, [sp, #240]
  449184:	b	4490a0 <_obstack_memory_used@@Base+0x2550>
  449188:	ldur	w8, [x29, #-164]
  44918c:	cbnz	w8, 44b030 <_obstack_memory_used@@Base+0x44e0>
  449190:	ldr	x8, [sp, #240]
  449194:	ldr	w9, [sp, #196]
  449198:	cmp	x8, #0x0
  44919c:	cset	w8, ne  // ne = any
  4491a0:	bic	w8, w8, w9
  4491a4:	tbnz	w8, #0, 44ab20 <_obstack_memory_used@@Base+0x3fd0>
  4491a8:	ldr	x10, [sp, #488]
  4491ac:	ldr	x21, [sp, #288]
  4491b0:	cbz	x10, 44a63c <_obstack_memory_used@@Base+0x3aec>
  4491b4:	str	w28, [sp, #120]
  4491b8:	mov	x28, x11
  4491bc:	mov	x19, x15
  4491c0:	str	x12, [sp, #128]
  4491c4:	ldr	x8, [sp, #496]
  4491c8:	ldr	x9, [sp, #376]
  4491cc:	add	x10, x10, #0x8
  4491d0:	cmp	x9, x8
  4491d4:	b.ge	44a638 <_obstack_memory_used@@Base+0x3ae8>  // b.tcont
  4491d8:	add	x11, x9, #0x1
  4491dc:	str	x11, [sp, #376]
  4491e0:	ldr	x12, [x10, x9, lsl #3]
  4491e4:	mov	x9, x11
  4491e8:	cbz	x12, 4491d0 <_obstack_memory_used@@Base+0x2680>
  4491ec:	sub	x0, x29, #0xa4
  4491f0:	add	x1, sp, #0x130
  4491f4:	mov	x2, xzr
  4491f8:	bl	453008 <_obstack_memory_used@@Base+0xc4b8>
  4491fc:	mov	x26, x0
  449200:	cbnz	x0, 449320 <_obstack_memory_used@@Base+0x27d0>
  449204:	ldur	w8, [x29, #-164]
  449208:	cbnz	w8, 449320 <_obstack_memory_used@@Base+0x27d0>
  44920c:	ldr	x10, [sp, #488]
  449210:	b	4491c4 <_obstack_memory_used@@Base+0x2674>
  449214:	ldr	x8, [sp, #376]
  449218:	tbnz	x8, #63, 449250 <_obstack_memory_used@@Base+0x2700>
  44921c:	ldr	x9, [sp, #392]
  449220:	cmp	x9, x8
  449224:	b.eq	44a4e0 <_obstack_memory_used@@Base+0x3990>  // b.none
  449228:	ldr	w9, [sp, #448]
  44922c:	cmp	w9, #0x2
  449230:	b.lt	449258 <_obstack_memory_used@@Base+0x2708>  // b.tstop
  449234:	ldr	x9, [sp, #320]
  449238:	ldr	w19, [x9, x8, lsl #2]
  44923c:	cmn	w19, #0x1
  449240:	b.ne	449280 <_obstack_memory_used@@Base+0x2730>  // b.any
  449244:	cmp	x8, #0x0
  449248:	sub	x8, x8, #0x1
  44924c:	b.gt	449238 <_obstack_memory_used@@Base+0x26e8>
  449250:	ldr	w8, [sp, #416]
  449254:	b	4492b0 <_obstack_memory_used@@Base+0x2760>
  449258:	ldr	x9, [sp, #312]
  44925c:	ldr	x10, [sp, #432]
  449260:	ldrb	w8, [x9, x8]
  449264:	lsr	x9, x8, #3
  449268:	and	x9, x9, #0x18
  44926c:	ldr	x9, [x10, x9]
  449270:	lsr	x9, x9, x8
  449274:	tbz	w9, #0, 4492a4 <_obstack_memory_used@@Base+0x2754>
  449278:	mov	w8, #0x1                   	// #1
  44927c:	b	4492b0 <_obstack_memory_used@@Base+0x2760>
  449280:	ldrb	w8, [sp, #446]
  449284:	cbnz	w8, 44a514 <_obstack_memory_used@@Base+0x39c4>
  449288:	cmp	w19, #0xa
  44928c:	b.ne	4492ac <_obstack_memory_used@@Base+0x275c>  // b.any
  449290:	ldrb	w8, [sp, #445]
  449294:	cmp	w8, #0x0
  449298:	cset	w8, ne  // ne = any
  44929c:	lsl	w8, w8, #1
  4492a0:	b	4492b0 <_obstack_memory_used@@Base+0x2760>
  4492a4:	cmp	w8, #0xa
  4492a8:	b.eq	449290 <_obstack_memory_used@@Base+0x2740>  // b.none
  4492ac:	mov	w8, wzr
  4492b0:	ldr	x9, [x26, #16]
  4492b4:	cmp	x9, #0x1
  4492b8:	b.lt	4490a0 <_obstack_memory_used@@Base+0x2550>  // b.tstop
  4492bc:	ldr	x11, [sp, #456]
  4492c0:	ldr	x10, [x26, #24]
  4492c4:	ldr	x11, [x11]
  4492c8:	b	4492d8 <_obstack_memory_used@@Base+0x2788>
  4492cc:	subs	x9, x9, #0x1
  4492d0:	add	x10, x10, #0x8
  4492d4:	b.eq	4490a0 <_obstack_memory_used@@Base+0x2550>  // b.none
  4492d8:	ldr	x12, [x10]
  4492dc:	add	x13, x11, x12, lsl #4
  4492e0:	ldr	w13, [x13, #8]
  4492e4:	and	w14, w13, #0xff
  4492e8:	cmp	w14, #0x2
  4492ec:	b.ne	4492cc <_obstack_memory_used@@Base+0x277c>  // b.any
  4492f0:	tst	w13, #0x3ff00
  4492f4:	b.eq	449318 <_obstack_memory_used@@Base+0x27c8>  // b.none
  4492f8:	tbnz	w8, #0, 449300 <_obstack_memory_used@@Base+0x27b0>
  4492fc:	tbnz	w13, #10, 4492cc <_obstack_memory_used@@Base+0x277c>
  449300:	tbz	w8, #0, 449308 <_obstack_memory_used@@Base+0x27b8>
  449304:	tbnz	w13, #11, 4492cc <_obstack_memory_used@@Base+0x277c>
  449308:	tbnz	w8, #1, 449310 <_obstack_memory_used@@Base+0x27c0>
  44930c:	tbnz	w13, #13, 4492cc <_obstack_memory_used@@Base+0x277c>
  449310:	tbnz	w8, #3, 449318 <_obstack_memory_used@@Base+0x27c8>
  449314:	tbnz	w13, #15, 4492cc <_obstack_memory_used@@Base+0x277c>
  449318:	cbnz	x12, 44916c <_obstack_memory_used@@Base+0x261c>
  44931c:	b	4490a0 <_obstack_memory_used@@Base+0x2550>
  449320:	mov	x11, x28
  449324:	ldr	w28, [sp, #120]
  449328:	ldr	x12, [sp, #128]
  44932c:	mov	x15, x19
  449330:	cbnz	x26, 449150 <_obstack_memory_used@@Base+0x2600>
  449334:	b	44ab20 <_obstack_memory_used@@Base+0x3fd0>
  449338:	ldr	x8, [x12, #16]
  44933c:	cmp	x8, #0x1
  449340:	b.lt	44a470 <_obstack_memory_used@@Base+0x3920>  // b.tstop
  449344:	ldr	x13, [sp, #456]
  449348:	mov	x19, xzr
  44934c:	str	x24, [sp, #168]
  449350:	stp	x11, x15, [sp, #96]
  449354:	stp	x22, x13, [sp, #112]
  449358:	str	x12, [sp, #128]
  44935c:	b	449370 <_obstack_memory_used@@Base+0x2820>
  449360:	ldr	x8, [x12, #16]
  449364:	add	x19, x19, #0x1
  449368:	cmp	x19, x8
  44936c:	b.ge	44a470 <_obstack_memory_used@@Base+0x3920>  // b.tcont
  449370:	ldr	x8, [x12, #24]
  449374:	ldr	x1, [x8, x19, lsl #3]
  449378:	ldr	x8, [x13]
  44937c:	add	x8, x8, x1, lsl #4
  449380:	ldr	w21, [x8, #8]
  449384:	tbz	w21, #20, 449360 <_obstack_memory_used@@Base+0x2810>
  449388:	tst	w21, #0x3ff00
  44938c:	b.eq	449464 <_obstack_memory_used@@Base+0x2914>  // b.none
  449390:	ldr	x8, [sp, #376]
  449394:	tbnz	x8, #63, 4493cc <_obstack_memory_used@@Base+0x287c>
  449398:	ldr	x9, [sp, #392]
  44939c:	cmp	x9, x8
  4493a0:	b.eq	449668 <_obstack_memory_used@@Base+0x2b18>  // b.none
  4493a4:	ldr	w9, [sp, #448]
  4493a8:	cmp	w9, #0x2
  4493ac:	b.lt	4493d4 <_obstack_memory_used@@Base+0x2884>  // b.tstop
  4493b0:	ldr	x9, [sp, #320]
  4493b4:	ldr	w26, [x9, x8, lsl #2]
  4493b8:	cmn	w26, #0x1
  4493bc:	b.ne	449400 <_obstack_memory_used@@Base+0x28b0>  // b.any
  4493c0:	cmp	x8, #0x0
  4493c4:	sub	x8, x8, #0x1
  4493c8:	b.gt	4493b4 <_obstack_memory_used@@Base+0x2864>
  4493cc:	ldr	w8, [sp, #416]
  4493d0:	b	449430 <_obstack_memory_used@@Base+0x28e0>
  4493d4:	ldr	x9, [sp, #312]
  4493d8:	ldr	x10, [sp, #432]
  4493dc:	ldrb	w8, [x9, x8]
  4493e0:	lsr	x9, x8, #3
  4493e4:	and	x9, x9, #0x18
  4493e8:	ldr	x9, [x10, x9]
  4493ec:	lsr	x9, x9, x8
  4493f0:	tbz	w9, #0, 449424 <_obstack_memory_used@@Base+0x28d4>
  4493f4:	mov	w9, wzr
  4493f8:	mov	w8, #0x1                   	// #1
  4493fc:	b	449440 <_obstack_memory_used@@Base+0x28f0>
  449400:	ldrb	w8, [sp, #446]
  449404:	cbnz	w8, 4496a4 <_obstack_memory_used@@Base+0x2b54>
  449408:	cmp	w26, #0xa
  44940c:	b.ne	44942c <_obstack_memory_used@@Base+0x28dc>  // b.any
  449410:	ldrb	w8, [sp, #445]
  449414:	cmp	w8, #0x0
  449418:	cset	w8, ne  // ne = any
  44941c:	lsl	w8, w8, #1
  449420:	b	449430 <_obstack_memory_used@@Base+0x28e0>
  449424:	cmp	w8, #0xa
  449428:	b.eq	449410 <_obstack_memory_used@@Base+0x28c0>  // b.none
  44942c:	mov	w8, wzr
  449430:	tst	w8, #0x1
  449434:	cset	w9, eq  // eq = none
  449438:	tbz	w21, #10, 449440 <_obstack_memory_used@@Base+0x28f0>
  44943c:	tbz	w8, #0, 449360 <_obstack_memory_used@@Base+0x2810>
  449440:	ldr	x10, [x13]
  449444:	add	x10, x10, x1, lsl #4
  449448:	ldr	w10, [x10, #8]
  44944c:	tbnz	w9, #0, 449454 <_obstack_memory_used@@Base+0x2904>
  449450:	tbnz	w10, #11, 449360 <_obstack_memory_used@@Base+0x2810>
  449454:	tbnz	w8, #1, 44945c <_obstack_memory_used@@Base+0x290c>
  449458:	tbnz	w10, #13, 449360 <_obstack_memory_used@@Base+0x2810>
  44945c:	tbnz	w8, #3, 449464 <_obstack_memory_used@@Base+0x2914>
  449460:	tbnz	w10, #15, 449360 <_obstack_memory_used@@Base+0x2810>
  449464:	ldr	x3, [sp, #376]
  449468:	add	x2, sp, #0x130
  44946c:	mov	x0, x13
  449470:	mov	x26, x1
  449474:	bl	454830 <_obstack_memory_used@@Base+0xdce0>
  449478:	ldp	x13, x12, [sp, #120]
  44947c:	ldp	x11, x15, [sp, #96]
  449480:	cbz	w0, 449360 <_obstack_memory_used@@Base+0x2810>
  449484:	ldr	w10, [sp, #528]
  449488:	ldp	x9, x24, [sp, #368]
  44948c:	ldr	x22, [sp, #496]
  449490:	ldr	x8, [sp, #392]
  449494:	sxtw	x11, w0
  449498:	add	x21, x24, x11
  44949c:	cmp	w10, w0
  4494a0:	mov	x14, x26
  4494a4:	csel	w10, w0, w10, lt  // lt = tstop
  4494a8:	cmp	x9, x21
  4494ac:	str	x11, [sp, #88]
  4494b0:	str	w10, [sp, #528]
  4494b4:	b.gt	4494c0 <_obstack_memory_used@@Base+0x2970>
  4494b8:	cmp	x9, x8
  4494bc:	b.lt	4494d4 <_obstack_memory_used@@Base+0x2984>  // b.tstop
  4494c0:	ldr	x9, [sp, #352]
  4494c4:	cmp	x9, x21
  4494c8:	b.gt	4494ec <_obstack_memory_used@@Base+0x299c>
  4494cc:	cmp	x9, x8
  4494d0:	b.ge	4494ec <_obstack_memory_used@@Base+0x299c>  // b.tcont
  4494d4:	add	w1, w21, #0x1
  4494d8:	add	x0, sp, #0x130
  4494dc:	bl	452e28 <_obstack_memory_used@@Base+0xc2d8>
  4494e0:	ldr	x13, [sp, #120]
  4494e4:	mov	x14, x26
  4494e8:	cbnz	w0, 44a4f4 <_obstack_memory_used@@Base+0x39a4>
  4494ec:	subs	x8, x21, x22
  4494f0:	b.le	449518 <_obstack_memory_used@@Base+0x29c8>
  4494f4:	ldr	x9, [sp, #488]
  4494f8:	lsl	x2, x8, #3
  4494fc:	mov	w1, wzr
  449500:	add	x9, x9, x22, lsl #3
  449504:	add	x0, x9, #0x8
  449508:	bl	404360 <memset@plt>
  44950c:	ldr	x13, [sp, #120]
  449510:	mov	x14, x26
  449514:	str	x21, [sp, #496]
  449518:	stur	wzr, [x29, #-96]
  44951c:	ldr	x8, [x13, #24]
  449520:	ldr	x9, [sp, #488]
  449524:	ldr	x10, [x13, #48]
  449528:	ldr	x8, [x8, x14, lsl #3]
  44952c:	ldr	x23, [x9, x21, lsl #3]
  449530:	mov	w9, #0x18                  	// #24
  449534:	madd	x2, x8, x9, x10
  449538:	cbz	x23, 449558 <_obstack_memory_used@@Base+0x2a08>
  44953c:	ldr	x1, [x23, #80]
  449540:	sub	x0, x29, #0x40
  449544:	bl	453210 <_obstack_memory_used@@Base+0xc6c0>
  449548:	ldr	x22, [sp, #112]
  44954c:	stur	w0, [x29, #-96]
  449550:	cbz	w0, 44956c <_obstack_memory_used@@Base+0x2a1c>
  449554:	b	44a540 <_obstack_memory_used@@Base+0x39f0>
  449558:	ldr	x8, [x2, #16]
  44955c:	ldr	q0, [x2]
  449560:	ldr	x22, [sp, #112]
  449564:	stur	x8, [x29, #-48]
  449568:	stur	q0, [x29, #-64]
  44956c:	cmp	x21, #0x0
  449570:	b.le	44967c <_obstack_memory_used@@Base+0x2b2c>
  449574:	ldr	x9, [sp, #392]
  449578:	ldr	x1, [sp, #120]
  44957c:	sub	x8, x21, #0x1
  449580:	cmp	x9, x8
  449584:	b.eq	44968c <_obstack_memory_used@@Base+0x2b3c>  // b.none
  449588:	ldr	w9, [sp, #448]
  44958c:	cmp	w9, #0x2
  449590:	b.lt	4495c8 <_obstack_memory_used@@Base+0x2a78>  // b.tstop
  449594:	ldr	x8, [sp, #88]
  449598:	ldr	x9, [sp, #320]
  44959c:	add	x8, x24, x8
  4495a0:	ldr	x24, [sp, #168]
  4495a4:	sub	x9, x9, #0x4
  4495a8:	ldr	w26, [x9, x8, lsl #2]
  4495ac:	cmn	w26, #0x1
  4495b0:	b.ne	4495f4 <_obstack_memory_used@@Base+0x2aa4>  // b.any
  4495b4:	sub	x8, x8, #0x1
  4495b8:	cmp	x8, #0x0
  4495bc:	b.gt	4495a8 <_obstack_memory_used@@Base+0x2a58>
  4495c0:	ldr	w3, [sp, #416]
  4495c4:	b	449624 <_obstack_memory_used@@Base+0x2ad4>
  4495c8:	ldr	x9, [sp, #312]
  4495cc:	ldr	x10, [sp, #432]
  4495d0:	ldr	x24, [sp, #168]
  4495d4:	ldrb	w8, [x9, x8]
  4495d8:	lsr	x9, x8, #3
  4495dc:	and	x9, x9, #0x18
  4495e0:	ldr	x9, [x10, x9]
  4495e4:	lsr	x9, x9, x8
  4495e8:	tbz	w9, #0, 449618 <_obstack_memory_used@@Base+0x2ac8>
  4495ec:	mov	w3, #0x1                   	// #1
  4495f0:	b	449624 <_obstack_memory_used@@Base+0x2ad4>
  4495f4:	ldrb	w8, [sp, #446]
  4495f8:	cbnz	w8, 4496d4 <_obstack_memory_used@@Base+0x2b84>
  4495fc:	cmp	w26, #0xa
  449600:	b.ne	449620 <_obstack_memory_used@@Base+0x2ad0>  // b.any
  449604:	ldrb	w8, [sp, #445]
  449608:	cmp	w8, #0x0
  44960c:	cset	w8, ne  // ne = any
  449610:	lsl	w3, w8, #1
  449614:	b	449624 <_obstack_memory_used@@Base+0x2ad4>
  449618:	cmp	w8, #0xa
  44961c:	b.eq	449604 <_obstack_memory_used@@Base+0x2ab4>  // b.none
  449620:	mov	w3, wzr
  449624:	sub	x0, x29, #0x60
  449628:	sub	x2, x29, #0x40
  44962c:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  449630:	ldr	x8, [sp, #488]
  449634:	str	x0, [x8, x21, lsl #3]
  449638:	cbz	x23, 449644 <_obstack_memory_used@@Base+0x2af4>
  44963c:	ldur	x0, [x29, #-48]
  449640:	bl	404700 <free@plt>
  449644:	ldr	x8, [sp, #488]
  449648:	ldr	x23, [sp, #184]
  44964c:	ldp	x11, x15, [sp, #96]
  449650:	ldp	x13, x12, [sp, #120]
  449654:	ldr	x8, [x8, x21, lsl #3]
  449658:	cbnz	x8, 449360 <_obstack_memory_used@@Base+0x2810>
  44965c:	ldur	w0, [x29, #-96]
  449660:	cbz	w0, 449360 <_obstack_memory_used@@Base+0x2810>
  449664:	b	44a508 <_obstack_memory_used@@Base+0x39b8>
  449668:	ldr	w8, [sp, #464]
  44966c:	mov	w9, #0xa                   	// #10
  449670:	and	w8, w8, #0x2
  449674:	eor	w8, w8, w9
  449678:	b	449430 <_obstack_memory_used@@Base+0x28e0>
  44967c:	ldr	w3, [sp, #416]
  449680:	ldr	x24, [sp, #168]
  449684:	ldr	x1, [sp, #120]
  449688:	b	449624 <_obstack_memory_used@@Base+0x2ad4>
  44968c:	ldr	w8, [sp, #464]
  449690:	ldr	x24, [sp, #168]
  449694:	mov	w9, #0xa                   	// #10
  449698:	and	w8, w8, #0x2
  44969c:	eor	w3, w8, w9
  4496a0:	b	449624 <_obstack_memory_used@@Base+0x2ad4>
  4496a4:	mov	w0, w26
  4496a8:	str	x1, [sp, #88]
  4496ac:	bl	4048d0 <iswalnum@plt>
  4496b0:	mov	w9, wzr
  4496b4:	cmp	w26, #0x5f
  4496b8:	mov	w8, #0x1                   	// #1
  4496bc:	b.eq	4496f8 <_obstack_memory_used@@Base+0x2ba8>  // b.none
  4496c0:	ldp	x11, x15, [sp, #96]
  4496c4:	ldp	x13, x12, [sp, #120]
  4496c8:	ldr	x1, [sp, #88]
  4496cc:	cbz	w0, 449408 <_obstack_memory_used@@Base+0x28b8>
  4496d0:	b	449440 <_obstack_memory_used@@Base+0x28f0>
  4496d4:	mov	w0, w26
  4496d8:	bl	4048d0 <iswalnum@plt>
  4496dc:	cmp	w26, #0x5f
  4496e0:	mov	w3, #0x1                   	// #1
  4496e4:	b.eq	449708 <_obstack_memory_used@@Base+0x2bb8>  // b.none
  4496e8:	ldp	x22, x1, [sp, #112]
  4496ec:	ldr	x24, [sp, #168]
  4496f0:	cbz	w0, 4495fc <_obstack_memory_used@@Base+0x2aac>
  4496f4:	b	449624 <_obstack_memory_used@@Base+0x2ad4>
  4496f8:	ldp	x11, x15, [sp, #96]
  4496fc:	ldp	x13, x12, [sp, #120]
  449700:	ldr	x1, [sp, #88]
  449704:	b	449440 <_obstack_memory_used@@Base+0x28f0>
  449708:	ldr	x22, [sp, #112]
  44970c:	b	449680 <_obstack_memory_used@@Base+0x2b30>
  449710:	ldr	x21, [x12, #96]
  449714:	cbnz	x21, 44a420 <_obstack_memory_used@@Base+0x38d0>
  449718:	ldr	x8, [sp, #456]
  44971c:	mov	w0, #0x3800                	// #14336
  449720:	str	x12, [sp, #128]
  449724:	str	x20, [sp]
  449728:	str	w28, [sp, #120]
  44972c:	stp	x11, x15, [sp, #96]
  449730:	str	x24, [sp, #168]
  449734:	str	x22, [sp, #112]
  449738:	str	x8, [sp, #56]
  44973c:	bl	404250 <malloc@plt>
  449740:	str	x0, [sp, #32]
  449744:	cbz	x0, 44a5d8 <_obstack_memory_used@@Base+0x3a88>
  449748:	stp	xzr, xzr, [x19]
  44974c:	ldr	x8, [sp, #128]
  449750:	movi	v0.2d, #0x0
  449754:	stp	q0, q0, [x29, #-64]
  449758:	ldr	x8, [x8, #16]
  44975c:	cmp	x8, #0x1
  449760:	b.lt	44a0d0 <_obstack_memory_used@@Base+0x3580>  // b.tstop
  449764:	ldr	x9, [sp, #32]
  449768:	mov	w8, #0x1800                	// #6144
  44976c:	str	xzr, [sp, #40]
  449770:	str	xzr, [sp, #88]
  449774:	add	x8, x9, x8
  449778:	str	x8, [sp, #16]
  44977c:	b	4497b0 <_obstack_memory_used@@Base+0x2c60>
  449780:	add	x8, x21, #0x1
  449784:	str	x23, [x0]
  449788:	str	x8, [sp, #88]
  44978c:	movi	v0.2d, #0x0
  449790:	stp	q0, q0, [x29, #-64]
  449794:	ldr	x8, [sp, #128]
  449798:	ldr	x9, [sp, #40]
  44979c:	ldr	x8, [x8, #16]
  4497a0:	add	x9, x9, #0x1
  4497a4:	str	x9, [sp, #40]
  4497a8:	cmp	x9, x8
  4497ac:	b.ge	449ca8 <_obstack_memory_used@@Base+0x3158>  // b.tcont
  4497b0:	ldr	x8, [sp, #128]
  4497b4:	ldr	x9, [sp, #56]
  4497b8:	ldr	x10, [sp, #40]
  4497bc:	ldr	x8, [x8, #24]
  4497c0:	ldr	x9, [x9]
  4497c4:	ldr	x8, [x8, x10, lsl #3]
  4497c8:	add	x8, x9, x8, lsl #4
  4497cc:	str	x8, [sp, #24]
  4497d0:	ldr	w9, [x8, #8]!
  4497d4:	and	w10, w9, #0xff
  4497d8:	cmp	w10, #0x1
  4497dc:	str	w10, [sp, #48]
  4497e0:	b.ne	449898 <_obstack_memory_used@@Base+0x2d48>  // b.any
  4497e4:	ldr	x10, [sp, #24]
  4497e8:	sub	x13, x29, #0x40
  4497ec:	mov	w14, #0x1                   	// #1
  4497f0:	ldrb	w10, [x10]
  4497f4:	lsr	x11, x10, #3
  4497f8:	and	x11, x11, #0x18
  4497fc:	ldr	x12, [x13, x11]
  449800:	lsl	x10, x14, x10
  449804:	orr	x10, x10, x12
  449808:	str	x10, [x13, x11]
  44980c:	and	w10, w9, #0x3ff00
  449810:	cbz	w10, 449a74 <_obstack_memory_used@@Base+0x2f24>
  449814:	tbz	w9, #13, 449830 <_obstack_memory_used@@Base+0x2ce0>
  449818:	ldur	x10, [x29, #-64]
  44981c:	movi	v0.2d, #0x0
  449820:	stp	q0, q0, [x29, #-64]
  449824:	tbz	w10, #10, 449794 <_obstack_memory_used@@Base+0x2c44>
  449828:	mov	w10, #0x400                 	// #1024
  44982c:	stur	x10, [x29, #-64]
  449830:	tbnz	w9, #15, 44978c <_obstack_memory_used@@Base+0x2c3c>
  449834:	tbz	w9, #10, 4499d0 <_obstack_memory_used@@Base+0x2e80>
  449838:	ldr	w10, [sp, #48]
  44983c:	cmp	w10, #0x1
  449840:	b.ne	44984c <_obstack_memory_used@@Base+0x2cfc>  // b.any
  449844:	ldrb	w10, [x8, #2]
  449848:	tbz	w10, #6, 44978c <_obstack_memory_used@@Base+0x2c3c>
  44984c:	ldr	x10, [sp, #56]
  449850:	ldr	w10, [x10, #180]
  449854:	cmp	w10, #0x1
  449858:	b.le	449990 <_obstack_memory_used@@Base+0x2e40>
  44985c:	ldr	x11, [sp, #56]
  449860:	ldp	q2, q3, [x29, #-64]
  449864:	ldr	x10, [x11, #120]
  449868:	ldur	q0, [x11, #184]
  44986c:	ldr	q1, [x10]
  449870:	orn	v0.16b, v0.16b, v1.16b
  449874:	and	v0.16b, v2.16b, v0.16b
  449878:	stur	q0, [x29, #-64]
  44987c:	ldur	q1, [x11, #200]
  449880:	ldr	q2, [x10, #16]
  449884:	mov	x10, v0.d[1]
  449888:	fmov	x11, d0
  44988c:	orn	v0.16b, v1.16b, v2.16b
  449890:	and	v0.16b, v3.16b, v0.16b
  449894:	b	4499b4 <_obstack_memory_used@@Base+0x2e64>
  449898:	ldr	w10, [sp, #48]
  44989c:	cmp	w10, #0x7
  4498a0:	b.eq	44991c <_obstack_memory_used@@Base+0x2dcc>  // b.none
  4498a4:	ldr	w10, [sp, #48]
  4498a8:	cmp	w10, #0x5
  4498ac:	b.eq	4498e4 <_obstack_memory_used@@Base+0x2d94>  // b.none
  4498b0:	ldr	w10, [sp, #48]
  4498b4:	cmp	w10, #0x3
  4498b8:	b.ne	449794 <_obstack_memory_used@@Base+0x2c44>  // b.any
  4498bc:	ldr	x10, [sp, #24]
  4498c0:	ldp	q1, q2, [x29, #-64]
  4498c4:	ldr	x10, [x10]
  4498c8:	ldr	q0, [x10]
  4498cc:	orr	v0.16b, v1.16b, v0.16b
  4498d0:	stur	q0, [x29, #-64]
  4498d4:	ldr	q0, [x10, #16]
  4498d8:	orr	v0.16b, v2.16b, v0.16b
  4498dc:	stur	q0, [x29, #-48]
  4498e0:	b	44980c <_obstack_memory_used@@Base+0x2cbc>
  4498e4:	ldr	x10, [sp, #56]
  4498e8:	ldr	w10, [x10, #180]
  4498ec:	cmp	w10, #0x2
  4498f0:	b.lt	449954 <_obstack_memory_used@@Base+0x2e04>  // b.tstop
  4498f4:	ldr	x10, [sp, #56]
  4498f8:	ldp	q1, q2, [x29, #-64]
  4498fc:	ldr	x10, [x10, #120]
  449900:	ldr	q0, [x10]
  449904:	orr	v0.16b, v1.16b, v0.16b
  449908:	ldr	q1, [x10, #16]
  44990c:	fmov	x11, d0
  449910:	orr	v1.16b, v2.16b, v1.16b
  449914:	stp	q0, q1, [x29, #-64]
  449918:	b	449960 <_obstack_memory_used@@Base+0x2e10>
  44991c:	mov	x10, #0xffffffffffffffff    	// #-1
  449920:	stp	x10, x10, [x29, #-64]
  449924:	ldr	x10, [sp, #56]
  449928:	ldr	x10, [x10, #216]
  44992c:	tbz	w10, #6, 449934 <_obstack_memory_used@@Base+0x2de4>
  449930:	tbz	w10, #7, 44980c <_obstack_memory_used@@Base+0x2cbc>
  449934:	tst	x10, #0x40
  449938:	mov	x11, #0xfffffffffffffffe    	// #-2
  44993c:	mov	x12, #0xfffffffffffffbfe    	// #-1026
  449940:	csel	x11, x12, x11, eq  // eq = none
  449944:	tst	x10, #0x80
  449948:	mov	x10, #0xfffffffffffffbff    	// #-1025
  44994c:	csel	x10, x10, x11, eq  // eq = none
  449950:	b	449988 <_obstack_memory_used@@Base+0x2e38>
  449954:	movi	v0.2d, #0xffffffffffffffff
  449958:	mov	x11, #0xffffffffffffffff    	// #-1
  44995c:	stp	q0, q0, [x29, #-64]
  449960:	ldr	x10, [sp, #56]
  449964:	and	x12, x11, #0xfffffffffffffbff
  449968:	ldr	x10, [x10, #216]
  44996c:	tst	x10, #0x40
  449970:	csel	x11, x12, x11, eq  // eq = none
  449974:	tbz	w10, #6, 44997c <_obstack_memory_used@@Base+0x2e2c>
  449978:	tbz	w10, #7, 44980c <_obstack_memory_used@@Base+0x2cbc>
  44997c:	and	x12, x11, #0xfffffffffffffffe
  449980:	tst	x10, #0x80
  449984:	csel	x10, x11, x12, eq  // eq = none
  449988:	stur	x10, [x29, #-64]
  44998c:	b	44980c <_obstack_memory_used@@Base+0x2cbc>
  449990:	ldr	x10, [sp, #56]
  449994:	ldp	q1, q2, [x29, #-64]
  449998:	ldur	q0, [x10, #184]
  44999c:	and	v0.16b, v1.16b, v0.16b
  4499a0:	stur	q0, [x29, #-64]
  4499a4:	ldur	q1, [x10, #200]
  4499a8:	mov	x10, v0.d[1]
  4499ac:	fmov	x11, d0
  4499b0:	and	v0.16b, v2.16b, v1.16b
  4499b4:	orr	x10, x10, x11
  4499b8:	fmov	x11, d0
  4499bc:	orr	x10, x10, x11
  4499c0:	mov	x11, v0.d[1]
  4499c4:	orr	x10, x10, x11
  4499c8:	stur	q0, [x29, #-48]
  4499cc:	cbz	x10, 449794 <_obstack_memory_used@@Base+0x2c44>
  4499d0:	tbz	w9, #11, 449a74 <_obstack_memory_used@@Base+0x2f24>
  4499d4:	ldr	w9, [sp, #48]
  4499d8:	cmp	w9, #0x1
  4499dc:	b.ne	4499e8 <_obstack_memory_used@@Base+0x2e98>  // b.any
  4499e0:	ldrb	w8, [x8, #2]
  4499e4:	tbnz	w8, #6, 44978c <_obstack_memory_used@@Base+0x2c3c>
  4499e8:	ldr	x8, [sp, #56]
  4499ec:	ldr	w8, [x8, #180]
  4499f0:	cmp	w8, #0x1
  4499f4:	b.le	449a34 <_obstack_memory_used@@Base+0x2ee4>
  4499f8:	ldr	x9, [sp, #56]
  4499fc:	ldp	q2, q3, [x29, #-64]
  449a00:	ldr	x8, [x9, #120]
  449a04:	ldur	q0, [x9, #184]
  449a08:	ldr	q1, [x8]
  449a0c:	and	v0.16b, v1.16b, v0.16b
  449a10:	bic	v0.16b, v2.16b, v0.16b
  449a14:	stur	q0, [x29, #-64]
  449a18:	ldur	q1, [x9, #200]
  449a1c:	ldr	q2, [x8, #16]
  449a20:	mov	x8, v0.d[1]
  449a24:	fmov	x9, d0
  449a28:	and	v0.16b, v2.16b, v1.16b
  449a2c:	bic	v0.16b, v3.16b, v0.16b
  449a30:	b	449a58 <_obstack_memory_used@@Base+0x2f08>
  449a34:	ldr	x8, [sp, #56]
  449a38:	ldp	q1, q2, [x29, #-64]
  449a3c:	ldur	q0, [x8, #184]
  449a40:	bic	v0.16b, v1.16b, v0.16b
  449a44:	stur	q0, [x29, #-64]
  449a48:	ldur	q1, [x8, #200]
  449a4c:	mov	x8, v0.d[1]
  449a50:	fmov	x9, d0
  449a54:	bic	v0.16b, v2.16b, v1.16b
  449a58:	orr	x8, x8, x9
  449a5c:	fmov	x9, d0
  449a60:	orr	x8, x8, x9
  449a64:	mov	x9, v0.d[1]
  449a68:	orr	x8, x8, x9
  449a6c:	stur	q0, [x29, #-48]
  449a70:	cbz	x8, 449794 <_obstack_memory_used@@Base+0x2c44>
  449a74:	ldr	x8, [sp, #88]
  449a78:	cmp	x8, #0x1
  449a7c:	b.lt	449c48 <_obstack_memory_used@@Base+0x30f8>  // b.tstop
  449a80:	ldur	x8, [x29, #-64]
  449a84:	ldr	x20, [sp, #32]
  449a88:	ldr	x23, [sp, #16]
  449a8c:	mov	x21, xzr
  449a90:	str	x8, [sp, #72]
  449a94:	ldp	x8, x28, [x29, #-56]
  449a98:	str	x8, [sp, #80]
  449a9c:	ldur	x8, [x29, #-40]
  449aa0:	str	x8, [sp, #64]
  449aa4:	b	449ac0 <_obstack_memory_used@@Base+0x2f70>
  449aa8:	ldr	x8, [sp, #88]
  449aac:	add	x21, x21, #0x1
  449ab0:	add	x23, x23, #0x20
  449ab4:	add	x20, x20, #0x18
  449ab8:	cmp	x21, x8
  449abc:	b.ge	449c2c <_obstack_memory_used@@Base+0x30dc>  // b.tcont
  449ac0:	ldr	w8, [sp, #48]
  449ac4:	cmp	w8, #0x1
  449ac8:	b.ne	449ae8 <_obstack_memory_used@@Base+0x2f98>  // b.any
  449acc:	ldr	x8, [sp, #24]
  449ad0:	ldrb	w8, [x8]
  449ad4:	lsr	x9, x8, #3
  449ad8:	and	x9, x9, #0x18
  449adc:	ldr	x9, [x23, x9]
  449ae0:	lsr	x8, x9, x8
  449ae4:	tbz	w8, #0, 449aa8 <_obstack_memory_used@@Base+0x2f58>
  449ae8:	ldp	x11, x10, [x23]
  449aec:	ldp	x12, x13, [sp, #72]
  449af0:	ldp	x9, x8, [x23, #16]
  449af4:	ldr	x15, [sp, #64]
  449af8:	and	x12, x11, x12
  449afc:	and	x13, x10, x13
  449b00:	and	x14, x9, x28
  449b04:	stp	x12, x13, [x29, #-96]
  449b08:	orr	x12, x13, x12
  449b0c:	and	x15, x8, x15
  449b10:	orr	x12, x12, x14
  449b14:	orr	x12, x12, x15
  449b18:	stp	x14, x15, [x29, #-80]
  449b1c:	cbz	x12, 449aa8 <_obstack_memory_used@@Base+0x2f58>
  449b20:	ldr	x13, [sp, #72]
  449b24:	bic	x12, x11, x13
  449b28:	bic	x13, x13, x11
  449b2c:	str	x13, [sp, #72]
  449b30:	ldr	x13, [sp, #80]
  449b34:	bic	x11, x10, x13
  449b38:	bic	x13, x13, x10
  449b3c:	str	x13, [sp, #80]
  449b40:	ldr	x13, [sp, #64]
  449b44:	bic	x10, x9, x28
  449b48:	stp	x12, x11, [x29, #-128]
  449b4c:	orr	x11, x11, x12
  449b50:	bic	x28, x28, x9
  449b54:	bic	x9, x8, x13
  449b58:	orr	x11, x11, x10
  449b5c:	stp	x10, x9, [x29, #-112]
  449b60:	orr	x9, x11, x9
  449b64:	bic	x13, x13, x8
  449b68:	str	x13, [sp, #64]
  449b6c:	cbz	x9, 449bf8 <_obstack_memory_used@@Base+0x30a8>
  449b70:	ldr	x10, [sp, #88]
  449b74:	ldr	x8, [sp, #16]
  449b78:	ldp	q0, q1, [x29, #-128]
  449b7c:	ldp	q2, q3, [x29, #-96]
  449b80:	ldr	x11, [sp, #32]
  449b84:	add	x8, x8, x10, lsl #5
  449b88:	stp	q0, q1, [x8]
  449b8c:	stp	q2, q3, [x23]
  449b90:	ldr	x8, [x20, #8]
  449b94:	mov	w9, #0x18                  	// #24
  449b98:	madd	x22, x10, x9, x11
  449b9c:	mov	x12, x20
  449ba0:	str	x8, [x22, #8]
  449ba4:	ldr	x24, [x20, #8]
  449ba8:	cmp	x24, #0x1
  449bac:	b.lt	449be4 <_obstack_memory_used@@Base+0x3094>  // b.tstop
  449bb0:	lsl	x0, x8, #3
  449bb4:	str	x8, [x22]
  449bb8:	bl	404250 <malloc@plt>
  449bbc:	ldr	x9, [sp, #32]
  449bc0:	ldr	x10, [sp, #88]
  449bc4:	mov	w8, #0x18                  	// #24
  449bc8:	madd	x8, x10, x8, x9
  449bcc:	str	x0, [x8, #16]
  449bd0:	cbz	x0, 44a104 <_obstack_memory_used@@Base+0x35b4>
  449bd4:	ldr	x1, [x20, #16]
  449bd8:	lsl	x2, x24, #3
  449bdc:	bl	403ec0 <memcpy@plt>
  449be0:	b	449bec <_obstack_memory_used@@Base+0x309c>
  449be4:	stp	xzr, xzr, [x22]
  449be8:	str	xzr, [x22, #16]
  449bec:	ldr	x8, [sp, #88]
  449bf0:	add	x8, x8, #0x1
  449bf4:	str	x8, [sp, #88]
  449bf8:	ldr	x8, [sp, #128]
  449bfc:	ldr	x9, [sp, #40]
  449c00:	mov	x0, x20
  449c04:	ldr	x8, [x8, #24]
  449c08:	ldr	x1, [x8, x9, lsl #3]
  449c0c:	bl	4509e4 <_obstack_memory_used@@Base+0x9e94>
  449c10:	tbz	w0, #0, 44a0fc <_obstack_memory_used@@Base+0x35ac>
  449c14:	ldp	x9, x8, [sp, #72]
  449c18:	orr	x8, x8, x9
  449c1c:	ldr	x9, [sp, #64]
  449c20:	orr	x8, x8, x28
  449c24:	orr	x8, x8, x9
  449c28:	cbnz	x8, 449aa8 <_obstack_memory_used@@Base+0x2f58>
  449c2c:	ldr	x8, [sp, #72]
  449c30:	stur	x8, [x29, #-64]
  449c34:	ldr	x8, [sp, #80]
  449c38:	stp	x8, x28, [x29, #-56]
  449c3c:	ldr	x8, [sp, #64]
  449c40:	stur	x8, [x29, #-40]
  449c44:	b	449c4c <_obstack_memory_used@@Base+0x30fc>
  449c48:	mov	x21, xzr
  449c4c:	ldr	x8, [sp, #88]
  449c50:	cmp	x21, x8
  449c54:	b.ne	449794 <_obstack_memory_used@@Base+0x2c44>  // b.any
  449c58:	ldr	x8, [sp, #16]
  449c5c:	ldp	q1, q0, [x29, #-64]
  449c60:	ldr	x9, [sp, #40]
  449c64:	mov	w0, #0x8                   	// #8
  449c68:	add	x8, x8, x21, lsl #5
  449c6c:	stp	q1, q0, [x8]
  449c70:	ldr	x8, [sp, #128]
  449c74:	ldr	x8, [x8, #24]
  449c78:	ldr	x23, [x8, x9, lsl #3]
  449c7c:	ldr	x9, [sp, #32]
  449c80:	mov	w8, #0x18                  	// #24
  449c84:	madd	x22, x21, x8, x9
  449c88:	mov	w8, #0x1                   	// #1
  449c8c:	dup	v0.2d, x8
  449c90:	str	q0, [x22]
  449c94:	bl	404250 <malloc@plt>
  449c98:	str	x0, [x22, #16]
  449c9c:	cbnz	x0, 449780 <_obstack_memory_used@@Base+0x2c30>
  449ca0:	stp	xzr, xzr, [x22]
  449ca4:	b	44a124 <_obstack_memory_used@@Base+0x35d4>
  449ca8:	ldr	x8, [sp, #88]
  449cac:	cmp	x8, #0x0
  449cb0:	b.le	44a0d4 <_obstack_memory_used@@Base+0x3584>
  449cb4:	ldr	x21, [sp, #88]
  449cb8:	add	x8, x21, #0x1
  449cbc:	lsl	x0, x8, #3
  449cc0:	stp	x8, xzr, [x29, #-160]
  449cc4:	bl	404250 <malloc@plt>
  449cc8:	cmp	x0, #0x0
  449ccc:	mov	w8, #0xc                   	// #12
  449cd0:	csel	w24, w8, wzr, eq  // eq = none
  449cd4:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  449cd8:	movk	x8, #0xa855
  449cdc:	movk	x8, #0xaaa, lsl #48
  449ce0:	mov	x20, x0
  449ce4:	cmp	x21, x8
  449ce8:	stur	x0, [x29, #-144]
  449cec:	stur	w24, [x29, #-132]
  449cf0:	b.hi	44a618 <_obstack_memory_used@@Base+0x3ac8>  // b.pmore
  449cf4:	cbz	x20, 44a618 <_obstack_memory_used@@Base+0x3ac8>
  449cf8:	ldr	x8, [sp, #88]
  449cfc:	add	x8, x8, x8, lsl #1
  449d00:	lsl	x0, x8, #3
  449d04:	bl	404250 <malloc@plt>
  449d08:	str	x0, [sp, #64]
  449d0c:	cbz	x0, 44a618 <_obstack_memory_used@@Base+0x3ac8>
  449d10:	ldr	x8, [sp, #88]
  449d14:	ldr	x9, [sp, #64]
  449d18:	mov	x20, xzr
  449d1c:	mov	x28, xzr
  449d20:	lsl	x8, x8, #3
  449d24:	add	x9, x9, x8
  449d28:	add	x8, x9, x8
  449d2c:	stp	xzr, xzr, [sp, #72]
  449d30:	str	wzr, [sp, #12]
  449d34:	stp	x9, xzr, [sp, #40]
  449d38:	str	x8, [sp, #24]
  449d3c:	b	449dac <_obstack_memory_used@@Base+0x325c>
  449d40:	ldr	x9, [sp, #40]
  449d44:	lsl	x8, x28, #3
  449d48:	ldr	x10, [sp, #24]
  449d4c:	str	x0, [x9, x8]
  449d50:	ldr	x9, [sp, #64]
  449d54:	ldr	x9, [x9, x8]
  449d58:	str	x9, [x10, x8]
  449d5c:	ldr	x8, [sp, #16]
  449d60:	ldr	x12, [sp, #88]
  449d64:	mov	x13, x28
  449d68:	add	x13, x28, #0x1
  449d6c:	add	x8, x8, x28, lsl #5
  449d70:	ldp	x9, x10, [x8]
  449d74:	cmp	x13, x12
  449d78:	ldr	x12, [sp, #48]
  449d7c:	ldp	x11, x8, [x8, #16]
  449d80:	mov	x28, x13
  449d84:	orr	x20, x10, x20
  449d88:	orr	x12, x9, x12
  449d8c:	ldr	x9, [sp, #72]
  449d90:	str	x12, [sp, #48]
  449d94:	orr	x9, x11, x9
  449d98:	str	x9, [sp, #72]
  449d9c:	ldr	x9, [sp, #80]
  449da0:	orr	x9, x8, x9
  449da4:	str	x9, [sp, #80]
  449da8:	b.eq	449ee0 <_obstack_memory_used@@Base+0x3390>  // b.none
  449dac:	ldr	x9, [sp, #32]
  449db0:	mov	w8, #0x18                  	// #24
  449db4:	stur	xzr, [x29, #-152]
  449db8:	madd	x22, x28, x8, x9
  449dbc:	ldr	x8, [x22, #8]!
  449dc0:	cmp	x8, #0x1
  449dc4:	b.lt	449e30 <_obstack_memory_used@@Base+0x32e0>  // b.tstop
  449dc8:	ldr	x10, [sp, #32]
  449dcc:	mov	w9, #0x18                  	// #24
  449dd0:	ldr	x11, [sp, #56]
  449dd4:	mov	x21, xzr
  449dd8:	madd	x9, x28, x9, x10
  449ddc:	ldr	x23, [x9, #16]
  449de0:	b	449df0 <_obstack_memory_used@@Base+0x32a0>
  449de4:	add	x21, x21, #0x1
  449de8:	cmp	x21, x8
  449dec:	b.ge	449e2c <_obstack_memory_used@@Base+0x32dc>  // b.tcont
  449df0:	ldr	x9, [x11, #24]
  449df4:	ldr	x10, [x23, x21, lsl #3]
  449df8:	ldr	x9, [x9, x10, lsl #3]
  449dfc:	cmn	x9, #0x1
  449e00:	b.eq	449de4 <_obstack_memory_used@@Base+0x3294>  // b.none
  449e04:	ldr	x8, [x11, #48]
  449e08:	mov	w10, #0x18                  	// #24
  449e0c:	sub	x0, x29, #0xa0
  449e10:	madd	x1, x9, x10, x8
  449e14:	bl	450858 <_obstack_memory_used@@Base+0x9d08>
  449e18:	cbnz	w0, 44a590 <_obstack_memory_used@@Base+0x3a40>
  449e1c:	ldr	x8, [x22]
  449e20:	ldr	x11, [sp, #56]
  449e24:	mov	w24, wzr
  449e28:	b	449de4 <_obstack_memory_used@@Base+0x3294>
  449e2c:	stur	w24, [x29, #-132]
  449e30:	ldr	x1, [sp, #56]
  449e34:	sub	x0, x29, #0x84
  449e38:	sub	x2, x29, #0xa0
  449e3c:	mov	w3, wzr
  449e40:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  449e44:	ldur	w24, [x29, #-132]
  449e48:	ldr	x8, [sp, #64]
  449e4c:	str	x0, [x8, x28, lsl #3]
  449e50:	cbnz	x0, 449e58 <_obstack_memory_used@@Base+0x3308>
  449e54:	cbnz	w24, 44a594 <_obstack_memory_used@@Base+0x3a44>
  449e58:	ldrsb	w8, [x0, #104]
  449e5c:	tbz	w8, #31, 449d40 <_obstack_memory_used@@Base+0x31f0>
  449e60:	ldr	x1, [sp, #56]
  449e64:	sub	x0, x29, #0x84
  449e68:	sub	x2, x29, #0xa0
  449e6c:	mov	w3, #0x1                   	// #1
  449e70:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  449e74:	ldr	x8, [sp, #40]
  449e78:	str	x0, [x8, x28, lsl #3]
  449e7c:	cbnz	x0, 449e88 <_obstack_memory_used@@Base+0x3338>
  449e80:	ldur	w8, [x29, #-132]
  449e84:	cbnz	w8, 44a594 <_obstack_memory_used@@Base+0x3a44>
  449e88:	ldr	x8, [sp, #64]
  449e8c:	ldr	x8, [x8, x28, lsl #3]
  449e90:	cmp	x8, x0
  449e94:	b.eq	449eb4 <_obstack_memory_used@@Base+0x3364>  // b.none
  449e98:	ldr	x8, [sp, #56]
  449e9c:	ldr	w9, [sp, #12]
  449ea0:	ldr	w8, [x8, #180]
  449ea4:	cmp	w8, #0x1
  449ea8:	cset	w8, gt
  449eac:	orr	w9, w9, w8
  449eb0:	str	w9, [sp, #12]
  449eb4:	ldr	x1, [sp, #56]
  449eb8:	sub	x0, x29, #0x84
  449ebc:	sub	x2, x29, #0xa0
  449ec0:	mov	w3, #0x2                   	// #2
  449ec4:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  449ec8:	ldur	w24, [x29, #-132]
  449ecc:	ldr	x8, [sp, #24]
  449ed0:	str	x0, [x8, x28, lsl #3]
  449ed4:	cbnz	x0, 449d5c <_obstack_memory_used@@Base+0x320c>
  449ed8:	cbz	w24, 449d5c <_obstack_memory_used@@Base+0x320c>
  449edc:	b	44a594 <_obstack_memory_used@@Base+0x3a44>
  449ee0:	ldr	w8, [sp, #12]
  449ee4:	tbnz	w8, #0, 44a150 <_obstack_memory_used@@Base+0x3600>
  449ee8:	mov	w0, #0x8                   	// #8
  449eec:	mov	w1, #0x100                 	// #256
  449ef0:	bl	404410 <calloc@plt>
  449ef4:	str	x0, [x19]
  449ef8:	cbz	x0, 44a594 <_obstack_memory_used@@Base+0x3a44>
  449efc:	ldr	x8, [sp, #48]
  449f00:	cbz	x8, 449f64 <_obstack_memory_used@@Base+0x3414>
  449f04:	ldr	x9, [sp, #48]
  449f08:	mov	x8, xzr
  449f0c:	mov	w10, #0x1                   	// #1
  449f10:	tbnz	w9, #0, 449f28 <_obstack_memory_used@@Base+0x33d8>
  449f14:	lsl	x10, x10, #1
  449f18:	lsr	x9, x9, #1
  449f1c:	add	x8, x8, #0x1
  449f20:	cbnz	x9, 449f10 <_obstack_memory_used@@Base+0x33c0>
  449f24:	b	449f64 <_obstack_memory_used@@Base+0x3414>
  449f28:	ldr	x12, [sp, #16]
  449f2c:	mov	x11, #0xfffffffffffffff8    	// #-8
  449f30:	ldr	x13, [x12], #32
  449f34:	add	x11, x11, #0x8
  449f38:	tst	x13, x10
  449f3c:	b.eq	449f30 <_obstack_memory_used@@Base+0x33e0>  // b.none
  449f40:	ldr	x12, [sp, #56]
  449f44:	ldr	x13, [sp, #40]
  449f48:	ldr	x12, [x12, #184]
  449f4c:	tst	x12, x10
  449f50:	ldr	x12, [sp, #64]
  449f54:	csel	x12, x12, x13, eq  // eq = none
  449f58:	ldr	x11, [x12, x11]
  449f5c:	str	x11, [x0, x8, lsl #3]
  449f60:	b	449f14 <_obstack_memory_used@@Base+0x33c4>
  449f64:	cbz	x20, 449fd8 <_obstack_memory_used@@Base+0x3488>
  449f68:	ldr	x9, [sp, #32]
  449f6c:	mov	w8, #0x1808                	// #6152
  449f70:	mov	w10, #0x1                   	// #1
  449f74:	add	x8, x9, x8
  449f78:	mov	w9, #0x40                  	// #64
  449f7c:	tbnz	w20, #0, 449f9c <_obstack_memory_used@@Base+0x344c>
  449f80:	mov	x11, x20
  449f84:	lsr	x11, x20, #1
  449f88:	lsl	x10, x10, #1
  449f8c:	add	x9, x9, #0x1
  449f90:	mov	x20, x11
  449f94:	cbnz	x11, 449f7c <_obstack_memory_used@@Base+0x342c>
  449f98:	b	449fd8 <_obstack_memory_used@@Base+0x3488>
  449f9c:	mov	x11, #0xfffffffffffffff8    	// #-8
  449fa0:	mov	x12, x8
  449fa4:	ldr	x13, [x12], #32
  449fa8:	add	x11, x11, #0x8
  449fac:	tst	x13, x10
  449fb0:	b.eq	449fa4 <_obstack_memory_used@@Base+0x3454>  // b.none
  449fb4:	ldr	x12, [sp, #56]
  449fb8:	ldr	x13, [sp, #40]
  449fbc:	ldr	x12, [x12, #192]
  449fc0:	tst	x12, x10
  449fc4:	ldr	x12, [sp, #64]
  449fc8:	csel	x12, x12, x13, eq  // eq = none
  449fcc:	ldr	x11, [x12, x11]
  449fd0:	str	x11, [x0, x9, lsl #3]
  449fd4:	b	449f80 <_obstack_memory_used@@Base+0x3430>
  449fd8:	ldr	x8, [sp, #72]
  449fdc:	cbz	x8, 44a054 <_obstack_memory_used@@Base+0x3504>
  449fe0:	ldr	x9, [sp, #32]
  449fe4:	mov	w8, #0x1810                	// #6160
  449fe8:	mov	w10, #0x1                   	// #1
  449fec:	add	x8, x9, x8
  449ff0:	mov	w9, #0x80                  	// #128
  449ff4:	ldr	x11, [sp, #72]
  449ff8:	tbnz	w11, #0, 44a018 <_obstack_memory_used@@Base+0x34c8>
  449ffc:	ldr	x11, [sp, #72]
  44a000:	lsl	x10, x10, #1
  44a004:	add	x9, x9, #0x1
  44a008:	lsr	x11, x11, #1
  44a00c:	str	x11, [sp, #72]
  44a010:	cbnz	x11, 449ff4 <_obstack_memory_used@@Base+0x34a4>
  44a014:	b	44a054 <_obstack_memory_used@@Base+0x3504>
  44a018:	mov	x11, #0xfffffffffffffff8    	// #-8
  44a01c:	mov	x12, x8
  44a020:	ldr	x13, [x12], #32
  44a024:	add	x11, x11, #0x8
  44a028:	tst	x13, x10
  44a02c:	b.eq	44a020 <_obstack_memory_used@@Base+0x34d0>  // b.none
  44a030:	ldr	x12, [sp, #56]
  44a034:	ldr	x13, [sp, #40]
  44a038:	ldr	x12, [x12, #200]
  44a03c:	tst	x12, x10
  44a040:	ldr	x12, [sp, #64]
  44a044:	csel	x12, x12, x13, eq  // eq = none
  44a048:	ldr	x11, [x12, x11]
  44a04c:	str	x11, [x0, x9, lsl #3]
  44a050:	b	449ffc <_obstack_memory_used@@Base+0x34ac>
  44a054:	ldr	x8, [sp, #80]
  44a058:	cbz	x8, 44a33c <_obstack_memory_used@@Base+0x37ec>
  44a05c:	ldr	x9, [sp, #32]
  44a060:	mov	w8, #0x1818                	// #6168
  44a064:	mov	w10, #0x1                   	// #1
  44a068:	add	x8, x9, x8
  44a06c:	mov	w9, #0xc0                  	// #192
  44a070:	ldr	x11, [sp, #80]
  44a074:	tbnz	w11, #0, 44a094 <_obstack_memory_used@@Base+0x3544>
  44a078:	ldr	x11, [sp, #80]
  44a07c:	lsl	x10, x10, #1
  44a080:	add	x9, x9, #0x1
  44a084:	lsr	x11, x11, #1
  44a088:	str	x11, [sp, #80]
  44a08c:	cbnz	x11, 44a070 <_obstack_memory_used@@Base+0x3520>
  44a090:	b	44a33c <_obstack_memory_used@@Base+0x37ec>
  44a094:	mov	x11, #0xfffffffffffffff8    	// #-8
  44a098:	mov	x12, x8
  44a09c:	ldr	x13, [x12], #32
  44a0a0:	add	x11, x11, #0x8
  44a0a4:	tst	x13, x10
  44a0a8:	b.eq	44a09c <_obstack_memory_used@@Base+0x354c>  // b.none
  44a0ac:	ldr	x12, [sp, #56]
  44a0b0:	ldr	x13, [sp, #40]
  44a0b4:	ldr	x12, [x12, #208]
  44a0b8:	tst	x12, x10
  44a0bc:	ldr	x12, [sp, #64]
  44a0c0:	csel	x12, x12, x13, eq  // eq = none
  44a0c4:	ldr	x11, [x12, x11]
  44a0c8:	str	x11, [x0, x9, lsl #3]
  44a0cc:	b	44a078 <_obstack_memory_used@@Base+0x3528>
  44a0d0:	str	xzr, [sp, #88]
  44a0d4:	ldr	x0, [sp, #32]
  44a0d8:	bl	404700 <free@plt>
  44a0dc:	ldr	x8, [sp, #88]
  44a0e0:	cbnz	x8, 44a5d8 <_obstack_memory_used@@Base+0x3a88>
  44a0e4:	mov	w0, #0x8                   	// #8
  44a0e8:	mov	w1, #0x100                 	// #256
  44a0ec:	bl	404410 <calloc@plt>
  44a0f0:	str	x0, [x19]
  44a0f4:	cbnz	x0, 44a3cc <_obstack_memory_used@@Base+0x387c>
  44a0f8:	b	44a5d8 <_obstack_memory_used@@Base+0x3a88>
  44a0fc:	ldr	x8, [sp, #72]
  44a100:	b	44a10c <_obstack_memory_used@@Base+0x35bc>
  44a104:	ldr	x8, [sp, #72]
  44a108:	stp	xzr, xzr, [x22]
  44a10c:	stur	x8, [x29, #-64]
  44a110:	ldr	x8, [sp, #80]
  44a114:	stp	x8, x28, [x29, #-56]
  44a118:	ldr	x8, [sp, #64]
  44a11c:	stur	x8, [x29, #-40]
  44a120:	ldr	x21, [sp, #88]
  44a124:	cmp	x21, #0x1
  44a128:	b.lt	44a144 <_obstack_memory_used@@Base+0x35f4>  // b.tstop
  44a12c:	ldr	x8, [sp, #32]
  44a130:	add	x22, x8, #0x10
  44a134:	ldr	x0, [x22], #24
  44a138:	bl	404700 <free@plt>
  44a13c:	subs	x21, x21, #0x1
  44a140:	b.ne	44a134 <_obstack_memory_used@@Base+0x35e4>  // b.any
  44a144:	mov	x8, #0xffffffffffffffff    	// #-1
  44a148:	str	x8, [sp, #88]
  44a14c:	b	44a0d4 <_obstack_memory_used@@Base+0x3584>
  44a150:	mov	w0, #0x8                   	// #8
  44a154:	mov	w1, #0x200                 	// #512
  44a158:	bl	404410 <calloc@plt>
  44a15c:	ldr	x8, [sp, #128]
  44a160:	str	x0, [x8, #96]
  44a164:	cbz	x0, 44a594 <_obstack_memory_used@@Base+0x3a44>
  44a168:	ldr	x8, [sp, #48]
  44a16c:	cbz	x8, 44a1d0 <_obstack_memory_used@@Base+0x3680>
  44a170:	ldr	x9, [sp, #64]
  44a174:	ldr	x10, [sp, #48]
  44a178:	mov	x8, xzr
  44a17c:	mov	w11, #0x1                   	// #1
  44a180:	sub	x9, x9, #0x8
  44a184:	tbnz	w10, #0, 44a19c <_obstack_memory_used@@Base+0x364c>
  44a188:	lsl	x11, x11, #1
  44a18c:	lsr	x10, x10, #1
  44a190:	add	x8, x8, #0x1
  44a194:	cbnz	x10, 44a184 <_obstack_memory_used@@Base+0x3634>
  44a198:	b	44a1d0 <_obstack_memory_used@@Base+0x3680>
  44a19c:	ldr	x13, [sp, #16]
  44a1a0:	mov	x12, x9
  44a1a4:	ldr	x14, [x13], #32
  44a1a8:	add	x12, x12, #0x8
  44a1ac:	tst	x14, x11
  44a1b0:	b.eq	44a1a4 <_obstack_memory_used@@Base+0x3654>  // b.none
  44a1b4:	ldr	x14, [sp, #88]
  44a1b8:	ldr	x13, [x12]
  44a1bc:	ldr	x12, [x12, x14, lsl #3]
  44a1c0:	add	x14, x0, x8, lsl #3
  44a1c4:	str	x13, [x14]
  44a1c8:	str	x12, [x14, #2048]
  44a1cc:	b	44a188 <_obstack_memory_used@@Base+0x3638>
  44a1d0:	cbz	x20, 44a244 <_obstack_memory_used@@Base+0x36f4>
  44a1d4:	ldr	x8, [sp, #64]
  44a1d8:	ldr	x10, [sp, #32]
  44a1dc:	mov	w9, #0x1808                	// #6152
  44a1e0:	mov	w11, #0x1                   	// #1
  44a1e4:	sub	x8, x8, #0x8
  44a1e8:	add	x9, x10, x9
  44a1ec:	mov	w10, #0x40                  	// #64
  44a1f0:	tbnz	w20, #0, 44a210 <_obstack_memory_used@@Base+0x36c0>
  44a1f4:	mov	x12, x20
  44a1f8:	lsr	x12, x20, #1
  44a1fc:	lsl	x11, x11, #1
  44a200:	add	x10, x10, #0x1
  44a204:	mov	x20, x12
  44a208:	cbnz	x12, 44a1f0 <_obstack_memory_used@@Base+0x36a0>
  44a20c:	b	44a244 <_obstack_memory_used@@Base+0x36f4>
  44a210:	mov	x13, x9
  44a214:	mov	x12, x8
  44a218:	ldr	x14, [x13], #32
  44a21c:	add	x12, x12, #0x8
  44a220:	tst	x14, x11
  44a224:	b.eq	44a218 <_obstack_memory_used@@Base+0x36c8>  // b.none
  44a228:	ldr	x14, [sp, #88]
  44a22c:	ldr	x13, [x12]
  44a230:	ldr	x12, [x12, x14, lsl #3]
  44a234:	add	x14, x0, x10, lsl #3
  44a238:	str	x13, [x14]
  44a23c:	str	x12, [x14, #2048]
  44a240:	b	44a1f4 <_obstack_memory_used@@Base+0x36a4>
  44a244:	ldr	x8, [sp, #72]
  44a248:	cbz	x8, 44a2c0 <_obstack_memory_used@@Base+0x3770>
  44a24c:	ldr	x8, [sp, #64]
  44a250:	ldr	x10, [sp, #32]
  44a254:	mov	w9, #0x1810                	// #6160
  44a258:	mov	w11, #0x1                   	// #1
  44a25c:	sub	x8, x8, #0x8
  44a260:	add	x9, x10, x9
  44a264:	mov	w10, #0x80                  	// #128
  44a268:	ldr	x12, [sp, #72]
  44a26c:	tbnz	w12, #0, 44a28c <_obstack_memory_used@@Base+0x373c>
  44a270:	ldr	x12, [sp, #72]
  44a274:	lsl	x11, x11, #1
  44a278:	add	x10, x10, #0x1
  44a27c:	lsr	x12, x12, #1
  44a280:	str	x12, [sp, #72]
  44a284:	cbnz	x12, 44a268 <_obstack_memory_used@@Base+0x3718>
  44a288:	b	44a2c0 <_obstack_memory_used@@Base+0x3770>
  44a28c:	mov	x13, x9
  44a290:	mov	x12, x8
  44a294:	ldr	x14, [x13], #32
  44a298:	add	x12, x12, #0x8
  44a29c:	tst	x14, x11
  44a2a0:	b.eq	44a294 <_obstack_memory_used@@Base+0x3744>  // b.none
  44a2a4:	ldr	x14, [sp, #88]
  44a2a8:	ldr	x13, [x12]
  44a2ac:	ldr	x12, [x12, x14, lsl #3]
  44a2b0:	add	x14, x0, x10, lsl #3
  44a2b4:	str	x13, [x14]
  44a2b8:	str	x12, [x14, #2048]
  44a2bc:	b	44a270 <_obstack_memory_used@@Base+0x3720>
  44a2c0:	ldr	x8, [sp, #80]
  44a2c4:	cbz	x8, 44a33c <_obstack_memory_used@@Base+0x37ec>
  44a2c8:	ldr	x8, [sp, #64]
  44a2cc:	ldr	x10, [sp, #32]
  44a2d0:	mov	w9, #0x1818                	// #6168
  44a2d4:	mov	w11, #0x1                   	// #1
  44a2d8:	sub	x8, x8, #0x8
  44a2dc:	add	x9, x10, x9
  44a2e0:	mov	w10, #0xc0                  	// #192
  44a2e4:	ldr	x12, [sp, #80]
  44a2e8:	tbnz	w12, #0, 44a308 <_obstack_memory_used@@Base+0x37b8>
  44a2ec:	ldr	x12, [sp, #80]
  44a2f0:	lsl	x11, x11, #1
  44a2f4:	add	x10, x10, #0x1
  44a2f8:	lsr	x12, x12, #1
  44a2fc:	str	x12, [sp, #80]
  44a300:	cbnz	x12, 44a2e4 <_obstack_memory_used@@Base+0x3794>
  44a304:	b	44a33c <_obstack_memory_used@@Base+0x37ec>
  44a308:	mov	x13, x9
  44a30c:	mov	x12, x8
  44a310:	ldr	x14, [x13], #32
  44a314:	add	x12, x12, #0x8
  44a318:	tst	x14, x11
  44a31c:	b.eq	44a310 <_obstack_memory_used@@Base+0x37c0>  // b.none
  44a320:	ldr	x14, [sp, #88]
  44a324:	ldr	x13, [x12]
  44a328:	ldr	x12, [x12, x14, lsl #3]
  44a32c:	add	x14, x0, x10, lsl #3
  44a330:	str	x13, [x14]
  44a334:	str	x12, [x14, #2048]
  44a338:	b	44a2ec <_obstack_memory_used@@Base+0x379c>
  44a33c:	ldr	x8, [sp, #48]
  44a340:	tbz	w8, #10, 44a38c <_obstack_memory_used@@Base+0x383c>
  44a344:	ldr	x9, [sp, #88]
  44a348:	ldr	x8, [sp, #64]
  44a34c:	add	x8, x8, x9, lsl #4
  44a350:	ldr	x10, [sp, #16]
  44a354:	ldrb	w10, [x10, #1]
  44a358:	tbnz	w10, #2, 44a378 <_obstack_memory_used@@Base+0x3828>
  44a35c:	ldr	x10, [sp, #16]
  44a360:	add	x8, x8, #0x8
  44a364:	subs	x9, x9, #0x1
  44a368:	add	x10, x10, #0x20
  44a36c:	str	x10, [sp, #16]
  44a370:	b.ne	44a350 <_obstack_memory_used@@Base+0x3800>  // b.any
  44a374:	b	44a38c <_obstack_memory_used@@Base+0x383c>
  44a378:	ldr	x8, [x8]
  44a37c:	ldr	w9, [sp, #12]
  44a380:	str	x8, [x0, #80]
  44a384:	tbz	w9, #0, 44a38c <_obstack_memory_used@@Base+0x383c>
  44a388:	str	x8, [x0, #2128]
  44a38c:	ldr	x0, [sp, #64]
  44a390:	bl	404700 <free@plt>
  44a394:	ldur	x0, [x29, #-144]
  44a398:	bl	404700 <free@plt>
  44a39c:	mov	w21, #0x10                  	// #16
  44a3a0:	ldr	x8, [sp, #32]
  44a3a4:	ldr	x0, [x8, x21]
  44a3a8:	bl	404700 <free@plt>
  44a3ac:	ldr	x8, [sp, #88]
  44a3b0:	add	x21, x21, #0x18
  44a3b4:	subs	x8, x8, #0x1
  44a3b8:	str	x8, [sp, #88]
  44a3bc:	b.ne	44a3a0 <_obstack_memory_used@@Base+0x3850>  // b.any
  44a3c0:	ldr	x0, [sp, #32]
  44a3c4:	bl	404700 <free@plt>
  44a3c8:	ldr	x0, [x19]
  44a3cc:	ldp	x15, x22, [sp, #104]
  44a3d0:	ldr	x23, [sp, #184]
  44a3d4:	ldr	x24, [sp, #168]
  44a3d8:	ldr	x11, [sp, #96]
  44a3dc:	ldr	w28, [sp, #120]
  44a3e0:	ldr	x20, [sp]
  44a3e4:	ldr	x12, [sp, #128]
  44a3e8:	cbnz	x0, 449114 <_obstack_memory_used@@Base+0x25c4>
  44a3ec:	b	449710 <_obstack_memory_used@@Base+0x2bc0>
  44a3f0:	add	w1, w8, #0x2
  44a3f4:	add	x0, sp, #0x130
  44a3f8:	mov	x21, x11
  44a3fc:	mov	x19, x15
  44a400:	mov	x26, x12
  44a404:	bl	452e28 <_obstack_memory_used@@Base+0xc2d8>
  44a408:	mov	x12, x26
  44a40c:	mov	x11, x21
  44a410:	mov	x15, x19
  44a414:	stur	w0, [x29, #-164]
  44a418:	cbz	w0, 4490ec <_obstack_memory_used@@Base+0x259c>
  44a41c:	b	44b134 <_obstack_memory_used@@Base+0x45e4>
  44a420:	ldr	x8, [sp, #376]
  44a424:	cmp	x8, #0x0
  44a428:	b.le	44a468 <_obstack_memory_used@@Base+0x3918>
  44a42c:	ldr	x10, [sp, #392]
  44a430:	sub	x9, x8, #0x1
  44a434:	cmp	x10, x9
  44a438:	b.eq	44a548 <_obstack_memory_used@@Base+0x39f8>  // b.none
  44a43c:	ldr	w10, [sp, #448]
  44a440:	cmp	w10, #0x2
  44a444:	b.lt	44a478 <_obstack_memory_used@@Base+0x3928>  // b.tstop
  44a448:	ldr	x9, [sp, #320]
  44a44c:	sub	x9, x9, #0x4
  44a450:	ldr	w19, [x9, x8, lsl #2]
  44a454:	cmn	w19, #0x1
  44a458:	b.ne	44a4a0 <_obstack_memory_used@@Base+0x3950>  // b.any
  44a45c:	sub	x8, x8, #0x1
  44a460:	cmp	x8, #0x0
  44a464:	b.gt	44a450 <_obstack_memory_used@@Base+0x3900>
  44a468:	ldr	w8, [sp, #416]
  44a46c:	b	44a4d0 <_obstack_memory_used@@Base+0x3980>
  44a470:	stur	wzr, [x29, #-164]
  44a474:	b	4490f4 <_obstack_memory_used@@Base+0x25a4>
  44a478:	ldr	x8, [sp, #312]
  44a47c:	ldr	x10, [sp, #432]
  44a480:	ldrb	w8, [x8, x9]
  44a484:	lsr	x9, x8, #3
  44a488:	and	x9, x9, #0x18
  44a48c:	ldr	x9, [x10, x9]
  44a490:	lsr	x9, x9, x8
  44a494:	tbz	w9, #0, 44a4c4 <_obstack_memory_used@@Base+0x3974>
  44a498:	mov	w8, #0x1                   	// #1
  44a49c:	b	44a4d0 <_obstack_memory_used@@Base+0x3980>
  44a4a0:	ldrb	w8, [sp, #446]
  44a4a4:	cbnz	w8, 44a550 <_obstack_memory_used@@Base+0x3a00>
  44a4a8:	cmp	w19, #0xa
  44a4ac:	b.ne	44a4cc <_obstack_memory_used@@Base+0x397c>  // b.any
  44a4b0:	ldrb	w8, [sp, #445]
  44a4b4:	cmp	w8, #0x0
  44a4b8:	cset	w8, ne  // ne = any
  44a4bc:	lsl	w8, w8, #1
  44a4c0:	b	44a4d0 <_obstack_memory_used@@Base+0x3980>
  44a4c4:	cmp	w8, #0xa
  44a4c8:	b.eq	44a4b0 <_obstack_memory_used@@Base+0x3960>  // b.none
  44a4cc:	mov	w8, wzr
  44a4d0:	ubfiz	w8, w8, #8, #1
  44a4d4:	orr	x8, x8, x26
  44a4d8:	ldr	x26, [x21, x8, lsl #3]
  44a4dc:	b	449118 <_obstack_memory_used@@Base+0x25c8>
  44a4e0:	ldr	w8, [sp, #464]
  44a4e4:	mov	w9, #0xa                   	// #10
  44a4e8:	and	w8, w8, #0x2
  44a4ec:	eor	w8, w8, w9
  44a4f0:	b	4492b0 <_obstack_memory_used@@Base+0x2760>
  44a4f4:	ldr	x22, [sp, #112]
  44a4f8:	stur	w0, [x29, #-96]
  44a4fc:	ldr	x24, [sp, #168]
  44a500:	ldp	x11, x15, [sp, #96]
  44a504:	ldr	x12, [sp, #128]
  44a508:	mov	x26, xzr
  44a50c:	stur	w0, [x29, #-164]
  44a510:	b	449118 <_obstack_memory_used@@Base+0x25c8>
  44a514:	mov	w0, w19
  44a518:	str	x15, [sp, #104]
  44a51c:	bl	4048d0 <iswalnum@plt>
  44a520:	cmp	w19, #0x5f
  44a524:	mov	w8, #0x1                   	// #1
  44a528:	b.eq	44a538 <_obstack_memory_used@@Base+0x39e8>  // b.none
  44a52c:	ldr	x15, [sp, #104]
  44a530:	cbz	w0, 449288 <_obstack_memory_used@@Base+0x2738>
  44a534:	b	4492b0 <_obstack_memory_used@@Base+0x2760>
  44a538:	ldr	x15, [sp, #104]
  44a53c:	b	4492b0 <_obstack_memory_used@@Base+0x2760>
  44a540:	ldr	x23, [sp, #184]
  44a544:	b	44a4fc <_obstack_memory_used@@Base+0x39ac>
  44a548:	mov	w8, #0xa                   	// #10
  44a54c:	b	44a4d0 <_obstack_memory_used@@Base+0x3980>
  44a550:	mov	w0, w19
  44a554:	str	x12, [sp, #128]
  44a558:	str	x20, [sp]
  44a55c:	mov	x20, x11
  44a560:	str	x15, [sp, #104]
  44a564:	bl	4048d0 <iswalnum@plt>
  44a568:	cmp	w19, #0x5f
  44a56c:	mov	w8, #0x1                   	// #1
  44a570:	b.eq	44a604 <_obstack_memory_used@@Base+0x3ab4>  // b.none
  44a574:	ldr	x15, [sp, #104]
  44a578:	mov	x11, x20
  44a57c:	ldr	x20, [sp]
  44a580:	ldr	x12, [sp, #128]
  44a584:	mov	w10, w19
  44a588:	cbz	w0, 44a4a8 <_obstack_memory_used@@Base+0x3958>
  44a58c:	b	44a4d0 <_obstack_memory_used@@Base+0x3980>
  44a590:	stur	w0, [x29, #-132]
  44a594:	ldr	x0, [sp, #64]
  44a598:	bl	404700 <free@plt>
  44a59c:	ldur	x0, [x29, #-144]
  44a5a0:	bl	404700 <free@plt>
  44a5a4:	ldr	x8, [sp, #88]
  44a5a8:	cmp	x8, #0x1
  44a5ac:	b.lt	44a5d0 <_obstack_memory_used@@Base+0x3a80>  // b.tstop
  44a5b0:	ldr	x8, [sp, #32]
  44a5b4:	add	x19, x8, #0x10
  44a5b8:	ldr	x0, [x19], #24
  44a5bc:	bl	404700 <free@plt>
  44a5c0:	ldr	x8, [sp, #88]
  44a5c4:	subs	x8, x8, #0x1
  44a5c8:	str	x8, [sp, #88]
  44a5cc:	b.ne	44a5b8 <_obstack_memory_used@@Base+0x3a68>  // b.any
  44a5d0:	ldr	x0, [sp, #32]
  44a5d4:	bl	404700 <free@plt>
  44a5d8:	ldp	x15, x22, [sp, #104]
  44a5dc:	ldr	x23, [sp, #184]
  44a5e0:	ldr	x24, [sp, #168]
  44a5e4:	ldr	x11, [sp, #96]
  44a5e8:	ldr	w28, [sp, #120]
  44a5ec:	ldr	x20, [sp]
  44a5f0:	ldr	x12, [sp, #128]
  44a5f4:	mov	w8, #0xc                   	// #12
  44a5f8:	mov	x26, xzr
  44a5fc:	stur	w8, [x29, #-164]
  44a600:	b	449118 <_obstack_memory_used@@Base+0x25c8>
  44a604:	ldr	x15, [sp, #104]
  44a608:	mov	x11, x20
  44a60c:	ldr	x20, [sp]
  44a610:	ldr	x12, [sp, #128]
  44a614:	b	44a4d0 <_obstack_memory_used@@Base+0x3980>
  44a618:	mov	x0, x20
  44a61c:	bl	404700 <free@plt>
  44a620:	b	44a5b0 <_obstack_memory_used@@Base+0x3a60>
  44a624:	ldr	x8, [sp, #200]
  44a628:	str	x8, [sp, #264]
  44a62c:	ldr	x9, [sp, #264]
  44a630:	cbnz	x9, 44a644 <_obstack_memory_used@@Base+0x3af4>
  44a634:	b	44a650 <_obstack_memory_used@@Base+0x3b00>
  44a638:	mov	x15, x19
  44a63c:	ldr	x9, [sp, #264]
  44a640:	cbz	x9, 44a650 <_obstack_memory_used@@Base+0x3b00>
  44a644:	ldr	x8, [x9]
  44a648:	add	x8, x8, x15
  44a64c:	str	x8, [x9]
  44a650:	ldr	x28, [sp, #272]
  44a654:	cmn	x27, #0x1
  44a658:	b.eq	44aa30 <_obstack_memory_used@@Base+0x3ee0>  // b.none
  44a65c:	cmn	x27, #0x2
  44a660:	b.eq	44b030 <_obstack_memory_used@@Base+0x44e0>  // b.none
  44a664:	str	x27, [sp, #472]
  44a668:	ldrb	w8, [x23, #56]
  44a66c:	cmp	x24, #0x2
  44a670:	b.cc	44a678 <_obstack_memory_used@@Base+0x3b28>  // b.lo, b.ul, b.last
  44a674:	tbz	w8, #4, 44a680 <_obstack_memory_used@@Base+0x3b30>
  44a678:	ldr	x9, [x22, #152]
  44a67c:	cbz	x9, 44a798 <_obstack_memory_used@@Base+0x3c48>
  44a680:	ldr	x8, [sp, #488]
  44a684:	ldr	x21, [x8, x27, lsl #3]
  44a688:	tbnz	x27, #63, 44a6c0 <_obstack_memory_used@@Base+0x3b70>
  44a68c:	ldr	x8, [sp, #392]
  44a690:	cmp	x8, x27
  44a694:	b.eq	44ac7c <_obstack_memory_used@@Base+0x412c>  // b.none
  44a698:	ldr	w8, [sp, #448]
  44a69c:	cmp	w8, #0x2
  44a6a0:	b.lt	44a6c8 <_obstack_memory_used@@Base+0x3b78>  // b.tstop
  44a6a4:	ldr	x8, [sp, #320]
  44a6a8:	ldr	w19, [x8, x27, lsl #2]
  44a6ac:	cmn	w19, #0x1
  44a6b0:	b.ne	44a6f0 <_obstack_memory_used@@Base+0x3ba0>  // b.any
  44a6b4:	cmp	x27, #0x0
  44a6b8:	sub	x27, x27, #0x1
  44a6bc:	b.gt	44a6a8 <_obstack_memory_used@@Base+0x3b58>
  44a6c0:	ldr	w8, [sp, #416]
  44a6c4:	b	44a720 <_obstack_memory_used@@Base+0x3bd0>
  44a6c8:	ldr	x8, [sp, #312]
  44a6cc:	ldr	x9, [sp, #432]
  44a6d0:	ldrb	w8, [x8, x27]
  44a6d4:	lsr	x10, x8, #3
  44a6d8:	and	x10, x10, #0x18
  44a6dc:	ldr	x9, [x9, x10]
  44a6e0:	lsr	x9, x9, x8
  44a6e4:	tbz	w9, #0, 44a714 <_obstack_memory_used@@Base+0x3bc4>
  44a6e8:	mov	w8, #0x1                   	// #1
  44a6ec:	b	44a720 <_obstack_memory_used@@Base+0x3bd0>
  44a6f0:	ldrb	w8, [sp, #446]
  44a6f4:	cbnz	w8, 44ad58 <_obstack_memory_used@@Base+0x4208>
  44a6f8:	cmp	w19, #0xa
  44a6fc:	b.ne	44a71c <_obstack_memory_used@@Base+0x3bcc>  // b.any
  44a700:	ldrb	w8, [sp, #445]
  44a704:	cmp	w8, #0x0
  44a708:	cset	w8, ne  // ne = any
  44a70c:	lsl	w8, w8, #1
  44a710:	b	44a720 <_obstack_memory_used@@Base+0x3bd0>
  44a714:	cmp	w8, #0xa
  44a718:	b.eq	44a700 <_obstack_memory_used@@Base+0x3bb0>  // b.none
  44a71c:	mov	w8, wzr
  44a720:	ldr	x9, [x21, #16]
  44a724:	cmp	x9, #0x1
  44a728:	b.lt	44a78c <_obstack_memory_used@@Base+0x3c3c>  // b.tstop
  44a72c:	ldr	x11, [sp, #456]
  44a730:	ldr	x10, [x21, #24]
  44a734:	ldr	x11, [x11]
  44a738:	b	44a748 <_obstack_memory_used@@Base+0x3bf8>
  44a73c:	subs	x9, x9, #0x1
  44a740:	add	x10, x10, #0x8
  44a744:	b.eq	44a78c <_obstack_memory_used@@Base+0x3c3c>  // b.none
  44a748:	ldr	x12, [x10]
  44a74c:	add	x13, x11, x12, lsl #4
  44a750:	ldr	w13, [x13, #8]
  44a754:	and	w14, w13, #0xff
  44a758:	cmp	w14, #0x2
  44a75c:	b.ne	44a73c <_obstack_memory_used@@Base+0x3bec>  // b.any
  44a760:	tst	w13, #0x3ff00
  44a764:	b.eq	44a790 <_obstack_memory_used@@Base+0x3c40>  // b.none
  44a768:	tbnz	w8, #0, 44a770 <_obstack_memory_used@@Base+0x3c20>
  44a76c:	tbnz	w13, #10, 44a73c <_obstack_memory_used@@Base+0x3bec>
  44a770:	tbz	w8, #0, 44a778 <_obstack_memory_used@@Base+0x3c28>
  44a774:	tbnz	w13, #11, 44a73c <_obstack_memory_used@@Base+0x3bec>
  44a778:	tbnz	w8, #1, 44a780 <_obstack_memory_used@@Base+0x3c30>
  44a77c:	tbnz	w13, #13, 44a73c <_obstack_memory_used@@Base+0x3bec>
  44a780:	tbnz	w8, #3, 44a790 <_obstack_memory_used@@Base+0x3c40>
  44a784:	tbnz	w13, #15, 44a73c <_obstack_memory_used@@Base+0x3bec>
  44a788:	b	44a790 <_obstack_memory_used@@Base+0x3c40>
  44a78c:	mov	x12, xzr
  44a790:	str	x12, [sp, #480]
  44a794:	ldrb	w8, [x23, #56]
  44a798:	cmp	x24, #0x2
  44a79c:	b.cc	44a7ac <_obstack_memory_used@@Base+0x3c5c>  // b.lo, b.ul, b.last
  44a7a0:	tbnz	w8, #4, 44a7ac <_obstack_memory_used@@Base+0x3c5c>
  44a7a4:	ldrb	w8, [x22, #176]
  44a7a8:	tbnz	w8, #0, 44a7b4 <_obstack_memory_used@@Base+0x3c64>
  44a7ac:	ldr	x8, [x22, #152]
  44a7b0:	cbz	x8, 44af6c <_obstack_memory_used@@Base+0x441c>
  44a7b4:	ldr	x21, [sp, #472]
  44a7b8:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
  44a7bc:	cmp	x21, x8
  44a7c0:	b.cs	44b030 <_obstack_memory_used@@Base+0x44e0>  // b.hs, b.nlast
  44a7c4:	ldr	x26, [sp, #456]
  44a7c8:	ldr	x23, [sp, #480]
  44a7cc:	lsl	x8, x21, #3
  44a7d0:	add	x19, x8, #0x8
  44a7d4:	mov	x0, x19
  44a7d8:	bl	404250 <malloc@plt>
  44a7dc:	mov	x28, x0
  44a7e0:	cbz	x0, 44b038 <_obstack_memory_used@@Base+0x44e8>
  44a7e4:	ldr	x8, [x26, #152]
  44a7e8:	cbz	x8, 44a9e4 <_obstack_memory_used@@Base+0x3e94>
  44a7ec:	mov	x0, x19
  44a7f0:	bl	404250 <malloc@plt>
  44a7f4:	cbz	x0, 44b038 <_obstack_memory_used@@Base+0x44e8>
  44a7f8:	mov	x27, x0
  44a7fc:	str	x24, [sp, #168]
  44a800:	lsl	x8, x21, #3
  44a804:	add	x2, x8, #0x8
  44a808:	mov	x0, x27
  44a80c:	mov	w1, wzr
  44a810:	bl	404360 <memset@plt>
  44a814:	ldr	x8, [sp, #176]
  44a818:	add	x0, sp, #0x130
  44a81c:	sub	x1, x29, #0x40
  44a820:	stp	x28, x27, [x29, #-64]
  44a824:	stp	x23, x21, [x29, #-48]
  44a828:	stp	xzr, xzr, [x8, #8]
  44a82c:	str	xzr, [x8]
  44a830:	bl	454d40 <_obstack_memory_used@@Base+0xe1f0>
  44a834:	cbnz	w0, 44ac70 <_obstack_memory_used@@Base+0x4120>
  44a838:	ldr	x8, [x28]
  44a83c:	ldr	x24, [sp, #168]
  44a840:	cbnz	x8, 44aa60 <_obstack_memory_used@@Base+0x3f10>
  44a844:	ldr	x9, [x27]
  44a848:	cbnz	x9, 44aa60 <_obstack_memory_used@@Base+0x3f10>
  44a84c:	cmp	x21, #0x1
  44a850:	b.lt	44aa14 <_obstack_memory_used@@Base+0x3ec4>  // b.tstop
  44a854:	ldr	x8, [sp, #488]
  44a858:	ldr	x23, [sp, #184]
  44a85c:	sub	x9, x8, #0x8
  44a860:	mov	x8, x21
  44a864:	b	44a878 <_obstack_memory_used@@Base+0x3d28>
  44a868:	add	x8, x21, #0x1
  44a86c:	cmp	x8, #0x2
  44a870:	mov	x8, x21
  44a874:	b.lt	44a9dc <_obstack_memory_used@@Base+0x3e8c>  // b.tstop
  44a878:	ldr	x24, [x9, x8, lsl #3]
  44a87c:	sub	x21, x8, #0x1
  44a880:	cbz	x24, 44a868 <_obstack_memory_used@@Base+0x3d18>
  44a884:	ldrb	w10, [x24, #104]
  44a888:	tbz	w10, #4, 44a868 <_obstack_memory_used@@Base+0x3d18>
  44a88c:	cmp	x8, #0x0
  44a890:	b.le	44a8d0 <_obstack_memory_used@@Base+0x3d80>
  44a894:	ldr	x9, [sp, #392]
  44a898:	add	x9, x9, #0x1
  44a89c:	cmp	x9, x8
  44a8a0:	b.eq	44a9ac <_obstack_memory_used@@Base+0x3e5c>  // b.none
  44a8a4:	ldr	w9, [sp, #448]
  44a8a8:	cmp	w9, #0x2
  44a8ac:	b.lt	44a8d8 <_obstack_memory_used@@Base+0x3d88>  // b.tstop
  44a8b0:	ldr	x9, [sp, #320]
  44a8b4:	sub	x9, x9, #0x4
  44a8b8:	ldr	w19, [x9, x8, lsl #2]
  44a8bc:	cmn	w19, #0x1
  44a8c0:	b.ne	44a904 <_obstack_memory_used@@Base+0x3db4>  // b.any
  44a8c4:	sub	x8, x8, #0x1
  44a8c8:	cmp	x8, #0x0
  44a8cc:	b.gt	44a8b8 <_obstack_memory_used@@Base+0x3d68>
  44a8d0:	ldr	w8, [sp, #416]
  44a8d4:	b	44a934 <_obstack_memory_used@@Base+0x3de4>
  44a8d8:	ldr	x9, [sp, #312]
  44a8dc:	ldr	x10, [sp, #432]
  44a8e0:	add	x8, x9, x8
  44a8e4:	ldurb	w8, [x8, #-1]
  44a8e8:	lsr	x9, x8, #3
  44a8ec:	and	x9, x9, #0x18
  44a8f0:	ldr	x9, [x10, x9]
  44a8f4:	lsr	x9, x9, x8
  44a8f8:	tbz	w9, #0, 44a928 <_obstack_memory_used@@Base+0x3dd8>
  44a8fc:	mov	w8, #0x1                   	// #1
  44a900:	b	44a934 <_obstack_memory_used@@Base+0x3de4>
  44a904:	ldrb	w8, [sp, #446]
  44a908:	cbnz	w8, 44a9c0 <_obstack_memory_used@@Base+0x3e70>
  44a90c:	cmp	w19, #0xa
  44a910:	b.ne	44a930 <_obstack_memory_used@@Base+0x3de0>  // b.any
  44a914:	ldrb	w8, [sp, #445]
  44a918:	cmp	w8, #0x0
  44a91c:	cset	w8, ne  // ne = any
  44a920:	lsl	w8, w8, #1
  44a924:	b	44a934 <_obstack_memory_used@@Base+0x3de4>
  44a928:	cmp	w8, #0xa
  44a92c:	b.eq	44a914 <_obstack_memory_used@@Base+0x3dc4>  // b.none
  44a930:	mov	w8, wzr
  44a934:	ldr	x9, [x24, #16]
  44a938:	mov	x23, xzr
  44a93c:	cmp	x9, #0x1
  44a940:	b.lt	44a800 <_obstack_memory_used@@Base+0x3cb0>  // b.tstop
  44a944:	ldr	x11, [sp, #456]
  44a948:	ldr	x10, [x24, #24]
  44a94c:	ldr	x11, [x11]
  44a950:	b	44a960 <_obstack_memory_used@@Base+0x3e10>
  44a954:	subs	x9, x9, #0x1
  44a958:	add	x10, x10, #0x8
  44a95c:	b.eq	44a9a4 <_obstack_memory_used@@Base+0x3e54>  // b.none
  44a960:	ldr	x23, [x10]
  44a964:	add	x12, x11, x23, lsl #4
  44a968:	ldr	w12, [x12, #8]
  44a96c:	and	w13, w12, #0xff
  44a970:	cmp	w13, #0x2
  44a974:	b.ne	44a954 <_obstack_memory_used@@Base+0x3e04>  // b.any
  44a978:	tst	w12, #0x3ff00
  44a97c:	b.eq	44a800 <_obstack_memory_used@@Base+0x3cb0>  // b.none
  44a980:	tbnz	w8, #0, 44a988 <_obstack_memory_used@@Base+0x3e38>
  44a984:	tbnz	w12, #10, 44a954 <_obstack_memory_used@@Base+0x3e04>
  44a988:	tbz	w8, #0, 44a990 <_obstack_memory_used@@Base+0x3e40>
  44a98c:	tbnz	w12, #11, 44a954 <_obstack_memory_used@@Base+0x3e04>
  44a990:	tbnz	w8, #1, 44a998 <_obstack_memory_used@@Base+0x3e48>
  44a994:	tbnz	w12, #13, 44a954 <_obstack_memory_used@@Base+0x3e04>
  44a998:	tbnz	w8, #3, 44a800 <_obstack_memory_used@@Base+0x3cb0>
  44a99c:	tbnz	w12, #15, 44a954 <_obstack_memory_used@@Base+0x3e04>
  44a9a0:	b	44a800 <_obstack_memory_used@@Base+0x3cb0>
  44a9a4:	mov	x23, xzr
  44a9a8:	b	44a800 <_obstack_memory_used@@Base+0x3cb0>
  44a9ac:	ldr	w8, [sp, #464]
  44a9b0:	mov	w9, #0xa                   	// #10
  44a9b4:	and	w8, w8, #0x2
  44a9b8:	eor	w8, w8, w9
  44a9bc:	b	44a934 <_obstack_memory_used@@Base+0x3de4>
  44a9c0:	mov	w0, w19
  44a9c4:	bl	4048d0 <iswalnum@plt>
  44a9c8:	cmp	w19, #0x5f
  44a9cc:	mov	w8, #0x1                   	// #1
  44a9d0:	b.eq	44a934 <_obstack_memory_used@@Base+0x3de4>  // b.none
  44a9d4:	cbz	w0, 44a90c <_obstack_memory_used@@Base+0x3dbc>
  44a9d8:	b	44a934 <_obstack_memory_used@@Base+0x3de4>
  44a9dc:	ldr	x24, [sp, #168]
  44a9e0:	b	44aa18 <_obstack_memory_used@@Base+0x3ec8>
  44a9e4:	ldr	x8, [sp, #176]
  44a9e8:	add	x0, sp, #0x130
  44a9ec:	sub	x1, x29, #0x40
  44a9f0:	stp	x28, xzr, [x29, #-64]
  44a9f4:	stp	x23, x21, [x29, #-48]
  44a9f8:	stp	xzr, xzr, [x8]
  44a9fc:	str	xzr, [x8, #16]
  44aa00:	bl	454d40 <_obstack_memory_used@@Base+0xe1f0>
  44aa04:	cbnz	w0, 44ad1c <_obstack_memory_used@@Base+0x41cc>
  44aa08:	ldr	x8, [x28]
  44aa0c:	cbnz	x8, 44af58 <_obstack_memory_used@@Base+0x4408>
  44aa10:	mov	x27, xzr
  44aa14:	ldr	x23, [sp, #184]
  44aa18:	mov	x0, x28
  44aa1c:	bl	404700 <free@plt>
  44aa20:	mov	x0, x27
  44aa24:	bl	404700 <free@plt>
  44aa28:	ldr	x28, [sp, #272]
  44aa2c:	ldr	x21, [sp, #288]
  44aa30:	add	x0, sp, #0x130
  44aa34:	bl	45194c <_obstack_memory_used@@Base+0xadfc>
  44aa38:	ldur	x8, [x29, #-176]
  44aa3c:	ldr	x9, [sp, #296]
  44aa40:	mov	w19, #0x1                   	// #1
  44aa44:	add	x26, x8, x9
  44aa48:	cmp	x26, x21
  44aa4c:	stur	x26, [x29, #-176]
  44aa50:	b.lt	44aec4 <_obstack_memory_used@@Base+0x4374>  // b.tstop
  44aa54:	cmp	x20, x26
  44aa58:	b.ge	448d7c <_obstack_memory_used@@Base+0x222c>  // b.tcont
  44aa5c:	b	44aec4 <_obstack_memory_used@@Base+0x4374>
  44aa60:	tbnz	x21, #63, 44aaf8 <_obstack_memory_used@@Base+0x3fa8>
  44aa64:	str	x26, [sp, #264]
  44aa68:	str	x22, [sp, #112]
  44aa6c:	mov	x24, x27
  44aa70:	mov	x26, x28
  44aa74:	mov	x22, x21
  44aa78:	ldr	x9, [x24]
  44aa7c:	cbnz	x8, 44aa98 <_obstack_memory_used@@Base+0x3f48>
  44aa80:	b	44aae0 <_obstack_memory_used@@Base+0x3f90>
  44aa84:	ldr	x8, [x26, #8]!
  44aa88:	sub	x22, x22, #0x1
  44aa8c:	add	x24, x24, #0x8
  44aa90:	ldr	x9, [x24]
  44aa94:	cbz	x8, 44aae0 <_obstack_memory_used@@Base+0x3f90>
  44aa98:	cbz	x9, 44aae4 <_obstack_memory_used@@Base+0x3f94>
  44aa9c:	add	x1, x8, #0x8
  44aaa0:	add	x2, x9, #0x8
  44aaa4:	sub	x0, x29, #0x60
  44aaa8:	bl	453210 <_obstack_memory_used@@Base+0xc6c0>
  44aaac:	stur	w0, [x29, #-128]
  44aab0:	cbnz	w0, 44ad50 <_obstack_memory_used@@Base+0x4200>
  44aab4:	ldr	x1, [sp, #264]
  44aab8:	sub	x0, x29, #0x80
  44aabc:	sub	x2, x29, #0x60
  44aac0:	bl	4545a8 <_obstack_memory_used@@Base+0xda58>
  44aac4:	ldur	x8, [x29, #-80]
  44aac8:	str	x0, [x26]
  44aacc:	mov	x0, x8
  44aad0:	bl	404700 <free@plt>
  44aad4:	ldur	w19, [x29, #-128]
  44aad8:	cbz	w19, 44aae4 <_obstack_memory_used@@Base+0x3f94>
  44aadc:	b	44aaec <_obstack_memory_used@@Base+0x3f9c>
  44aae0:	str	x9, [x26]
  44aae4:	cbnz	x22, 44aa84 <_obstack_memory_used@@Base+0x3f34>
  44aae8:	mov	w19, wzr
  44aaec:	ldr	x22, [sp, #112]
  44aaf0:	ldr	x24, [sp, #168]
  44aaf4:	b	44aafc <_obstack_memory_used@@Base+0x3fac>
  44aaf8:	mov	w19, wzr
  44aafc:	mov	x0, x27
  44ab00:	bl	404700 <free@plt>
  44ab04:	cbz	w19, 44af58 <_obstack_memory_used@@Base+0x4408>
  44ab08:	b	44ad20 <_obstack_memory_used@@Base+0x41d0>
  44ab0c:	ldr	x28, [sp, #272]
  44ab10:	ldr	x21, [sp, #288]
  44ab14:	cmn	x27, #0x1
  44ab18:	b.ne	44a65c <_obstack_memory_used@@Base+0x3b0c>  // b.any
  44ab1c:	b	44aa30 <_obstack_memory_used@@Base+0x3ee0>
  44ab20:	ldr	x21, [sp, #288]
  44ab24:	ldr	x9, [sp, #264]
  44ab28:	cbnz	x9, 44a644 <_obstack_memory_used@@Base+0x3af4>
  44ab2c:	b	44a650 <_obstack_memory_used@@Base+0x3b00>
  44ab30:	tbnz	w8, #31, 44ac90 <_obstack_memory_used@@Base+0x4140>
  44ab34:	ldr	w8, [sp, #196]
  44ab38:	cbz	w8, 44ae54 <_obstack_memory_used@@Base+0x4304>
  44ab3c:	mov	x27, x15
  44ab40:	mov	w8, #0x1                   	// #1
  44ab44:	str	x8, [sp, #240]
  44ab48:	b	449084 <_obstack_memory_used@@Base+0x2534>
  44ab4c:	ldr	x8, [x26, #16]
  44ab50:	str	x24, [sp, #168]
  44ab54:	cmp	x8, #0x1
  44ab58:	b.lt	44ac30 <_obstack_memory_used@@Base+0x40e0>  // b.tstop
  44ab5c:	ldr	x21, [sp, #456]
  44ab60:	mov	x23, xzr
  44ab64:	b	44ab90 <_obstack_memory_used@@Base+0x4040>
  44ab68:	add	x9, x22, #0x1
  44ab6c:	str	x24, [x8, #8]
  44ab70:	str	x9, [sp, #536]
  44ab74:	str	xzr, [x8]
  44ab78:	ldr	x8, [x26, #16]
  44ab7c:	mov	x22, x28
  44ab80:	mov	x15, x27
  44ab84:	add	x23, x23, #0x1
  44ab88:	cmp	x23, x8
  44ab8c:	b.ge	44ac30 <_obstack_memory_used@@Base+0x40e0>  // b.tcont
  44ab90:	ldr	x9, [x26, #24]
  44ab94:	ldr	x24, [x9, x23, lsl #3]
  44ab98:	ldr	x9, [x21]
  44ab9c:	add	x10, x9, x24, lsl #4
  44aba0:	ldrb	w10, [x10, #8]
  44aba4:	cmp	w10, #0x8
  44aba8:	b.ne	44ab84 <_obstack_memory_used@@Base+0x4034>  // b.any
  44abac:	lsl	x10, x24, #4
  44abb0:	ldr	x9, [x9, x10]
  44abb4:	cmp	x9, #0x3f
  44abb8:	b.gt	44ab84 <_obstack_memory_used@@Base+0x4034>
  44abbc:	ldr	x10, [x21, #160]
  44abc0:	lsr	x9, x10, x9
  44abc4:	tbz	w9, #0, 44ab84 <_obstack_memory_used@@Base+0x4034>
  44abc8:	mov	x28, x22
  44abcc:	ldr	x22, [sp, #536]
  44abd0:	ldr	x8, [sp, #544]
  44abd4:	mov	x27, x15
  44abd8:	cmp	x22, x8
  44abdc:	b.eq	44ac08 <_obstack_memory_used@@Base+0x40b8>  // b.none
  44abe0:	ldr	x19, [sp, #552]
  44abe4:	mov	w0, #0x1                   	// #1
  44abe8:	mov	w1, #0x30                  	// #48
  44abec:	bl	404410 <calloc@plt>
  44abf0:	lsl	x8, x22, #3
  44abf4:	str	x0, [x19, x8]
  44abf8:	ldr	x9, [sp, #552]
  44abfc:	ldr	x8, [x9, x8]
  44ac00:	cbnz	x8, 44ab68 <_obstack_memory_used@@Base+0x4018>
  44ac04:	b	44ae5c <_obstack_memory_used@@Base+0x430c>
  44ac08:	ldr	x0, [sp, #552]
  44ac0c:	lsl	x1, x22, #4
  44ac10:	bl	404490 <realloc@plt>
  44ac14:	cbz	x0, 44ae5c <_obstack_memory_used@@Base+0x430c>
  44ac18:	lsl	x8, x22, #1
  44ac1c:	ldr	x22, [sp, #536]
  44ac20:	mov	x19, x0
  44ac24:	str	x0, [sp, #552]
  44ac28:	str	x8, [sp, #544]
  44ac2c:	b	44abe4 <_obstack_memory_used@@Base+0x4094>
  44ac30:	stur	wzr, [x29, #-164]
  44ac34:	ldrb	w8, [x26, #104]
  44ac38:	ldr	x23, [sp, #184]
  44ac3c:	ldr	x24, [sp, #168]
  44ac40:	ldr	x21, [sp, #288]
  44ac44:	mov	w28, wzr
  44ac48:	tbz	w8, #6, 449074 <_obstack_memory_used@@Base+0x2524>
  44ac4c:	add	x1, x26, #0x8
  44ac50:	add	x0, sp, #0x130
  44ac54:	mov	x19, x15
  44ac58:	bl	452590 <_obstack_memory_used@@Base+0xba40>
  44ac5c:	stur	w0, [x29, #-164]
  44ac60:	cbnz	w0, 44ae84 <_obstack_memory_used@@Base+0x4334>
  44ac64:	mov	w28, wzr
  44ac68:	mov	x15, x19
  44ac6c:	b	449074 <_obstack_memory_used@@Base+0x2524>
  44ac70:	ldr	x24, [sp, #168]
  44ac74:	mov	w19, w0
  44ac78:	b	44ad24 <_obstack_memory_used@@Base+0x41d4>
  44ac7c:	ldr	w8, [sp, #464]
  44ac80:	mov	w9, #0xa                   	// #10
  44ac84:	and	w8, w8, #0x2
  44ac88:	eor	w8, w8, w9
  44ac8c:	b	44a720 <_obstack_memory_used@@Base+0x3bd0>
  44ac90:	tbnz	x15, #63, 44accc <_obstack_memory_used@@Base+0x417c>
  44ac94:	ldr	x8, [sp, #392]
  44ac98:	cmp	x8, x15
  44ac9c:	b.eq	44ae70 <_obstack_memory_used@@Base+0x4320>  // b.none
  44aca0:	ldr	w8, [sp, #448]
  44aca4:	cmp	w8, #0x2
  44aca8:	b.lt	44acf4 <_obstack_memory_used@@Base+0x41a4>  // b.tstop
  44acac:	ldr	x8, [sp, #320]
  44acb0:	mov	x9, x15
  44acb4:	ldr	w19, [x8, x9, lsl #2]
  44acb8:	cmn	w19, #0x1
  44acbc:	b.ne	44ad94 <_obstack_memory_used@@Base+0x4244>  // b.any
  44acc0:	cmp	x9, #0x0
  44acc4:	sub	x9, x9, #0x1
  44acc8:	b.gt	44acb4 <_obstack_memory_used@@Base+0x4164>
  44accc:	ldr	w8, [sp, #416]
  44acd0:	b	44adc4 <_obstack_memory_used@@Base+0x4274>
  44acd4:	mov	w8, wzr
  44acd8:	ldr	x9, [sp, #224]
  44acdc:	cbz	x9, 44ace4 <_obstack_memory_used@@Base+0x4194>
  44ace0:	ldrb	w8, [x9, w8, uxtw]
  44ace4:	ldrb	w8, [x25, w8, uxtw]
  44ace8:	mov	x26, x20
  44acec:	cbnz	w8, 448e50 <_obstack_memory_used@@Base+0x2300>
  44acf0:	b	44aec0 <_obstack_memory_used@@Base+0x4370>
  44acf4:	ldr	x8, [sp, #312]
  44acf8:	ldr	x9, [sp, #432]
  44acfc:	ldrb	w8, [x8, x15]
  44ad00:	lsr	x10, x8, #3
  44ad04:	and	x10, x10, #0x18
  44ad08:	ldr	x9, [x9, x10]
  44ad0c:	lsr	x9, x9, x8
  44ad10:	tbz	w9, #0, 44adb8 <_obstack_memory_used@@Base+0x4268>
  44ad14:	mov	w8, #0x1                   	// #1
  44ad18:	b	44adc4 <_obstack_memory_used@@Base+0x4274>
  44ad1c:	mov	w19, w0
  44ad20:	mov	x27, xzr
  44ad24:	mov	x0, x28
  44ad28:	bl	404700 <free@plt>
  44ad2c:	mov	x0, x27
  44ad30:	bl	404700 <free@plt>
  44ad34:	ldr	x23, [sp, #184]
  44ad38:	ldr	x28, [sp, #272]
  44ad3c:	cbz	w19, 44af6c <_obstack_memory_used@@Base+0x441c>
  44ad40:	ldr	x21, [sp, #288]
  44ad44:	cmp	w19, #0x1
  44ad48:	b.eq	44aa30 <_obstack_memory_used@@Base+0x3ee0>  // b.none
  44ad4c:	b	44aec4 <_obstack_memory_used@@Base+0x4374>
  44ad50:	mov	w19, w0
  44ad54:	b	44aaec <_obstack_memory_used@@Base+0x3f9c>
  44ad58:	mov	w0, w19
  44ad5c:	bl	4048d0 <iswalnum@plt>
  44ad60:	cmp	w19, #0x5f
  44ad64:	mov	w8, #0x1                   	// #1
  44ad68:	b.eq	44a720 <_obstack_memory_used@@Base+0x3bd0>  // b.none
  44ad6c:	cbz	w0, 44a6f8 <_obstack_memory_used@@Base+0x3ba8>
  44ad70:	b	44a720 <_obstack_memory_used@@Base+0x3bd0>
  44ad74:	mov	w0, w27
  44ad78:	mov	x28, x15
  44ad7c:	bl	4048d0 <iswalnum@plt>
  44ad80:	mov	x15, x28
  44ad84:	cmp	w27, #0x5f
  44ad88:	b.eq	44904c <_obstack_memory_used@@Base+0x24fc>  // b.none
  44ad8c:	cbz	w0, 448fbc <_obstack_memory_used@@Base+0x246c>
  44ad90:	b	44904c <_obstack_memory_used@@Base+0x24fc>
  44ad94:	ldrb	w8, [sp, #446]
  44ad98:	cbnz	w8, 44ae8c <_obstack_memory_used@@Base+0x433c>
  44ad9c:	cmp	w19, #0xa
  44ada0:	b.ne	44adc0 <_obstack_memory_used@@Base+0x4270>  // b.any
  44ada4:	ldrb	w8, [sp, #445]
  44ada8:	cmp	w8, #0x0
  44adac:	cset	w8, ne  // ne = any
  44adb0:	lsl	w8, w8, #1
  44adb4:	b	44adc4 <_obstack_memory_used@@Base+0x4274>
  44adb8:	cmp	w8, #0xa
  44adbc:	b.eq	44ada4 <_obstack_memory_used@@Base+0x4254>  // b.none
  44adc0:	mov	w8, wzr
  44adc4:	ldr	x9, [x26, #16]
  44adc8:	cmp	x9, #0x1
  44adcc:	b.lt	44907c <_obstack_memory_used@@Base+0x252c>  // b.tstop
  44add0:	ldr	x11, [sp, #456]
  44add4:	ldr	x10, [x26, #24]
  44add8:	ldr	x11, [x11]
  44addc:	b	44adf4 <_obstack_memory_used@@Base+0x42a4>
  44ade0:	subs	x9, x9, #0x1
  44ade4:	add	x10, x10, #0x8
  44ade8:	mov	x27, #0xffffffffffffffff    	// #-1
  44adec:	str	xzr, [sp, #240]
  44adf0:	b.eq	449084 <_obstack_memory_used@@Base+0x2534>  // b.none
  44adf4:	ldr	x12, [x10]
  44adf8:	add	x13, x11, x12, lsl #4
  44adfc:	ldr	w13, [x13, #8]
  44ae00:	and	w14, w13, #0xff
  44ae04:	cmp	w14, #0x2
  44ae08:	b.ne	44ade0 <_obstack_memory_used@@Base+0x4290>  // b.any
  44ae0c:	tst	w13, #0x3ff00
  44ae10:	b.eq	44ae34 <_obstack_memory_used@@Base+0x42e4>  // b.none
  44ae14:	tbnz	w8, #0, 44ae1c <_obstack_memory_used@@Base+0x42cc>
  44ae18:	tbnz	w13, #10, 44ade0 <_obstack_memory_used@@Base+0x4290>
  44ae1c:	tbz	w8, #0, 44ae24 <_obstack_memory_used@@Base+0x42d4>
  44ae20:	tbnz	w13, #11, 44ade0 <_obstack_memory_used@@Base+0x4290>
  44ae24:	tbnz	w8, #1, 44ae2c <_obstack_memory_used@@Base+0x42dc>
  44ae28:	tbnz	w13, #13, 44ade0 <_obstack_memory_used@@Base+0x4290>
  44ae2c:	tbnz	w8, #3, 44ae34 <_obstack_memory_used@@Base+0x42e4>
  44ae30:	tbnz	w13, #15, 44ade0 <_obstack_memory_used@@Base+0x4290>
  44ae34:	ldr	w9, [sp, #196]
  44ae38:	cmp	x12, #0x0
  44ae3c:	cset	w8, ne  // ne = any
  44ae40:	str	x8, [sp, #240]
  44ae44:	cset	w8, eq  // eq = none
  44ae48:	orr	w8, w9, w8
  44ae4c:	csinv	x27, x15, xzr, ne  // ne = any
  44ae50:	tbnz	w8, #0, 449084 <_obstack_memory_used@@Base+0x2534>
  44ae54:	mov	x27, x15
  44ae58:	b	44a650 <_obstack_memory_used@@Base+0x3b00>
  44ae5c:	ldr	x23, [sp, #184]
  44ae60:	ldr	x24, [sp, #168]
  44ae64:	mov	w27, #0xc                   	// #12
  44ae68:	mov	x22, x28
  44ae6c:	b	44a664 <_obstack_memory_used@@Base+0x3b14>
  44ae70:	ldr	w8, [sp, #464]
  44ae74:	mov	w9, #0xa                   	// #10
  44ae78:	and	w8, w8, #0x2
  44ae7c:	eor	w8, w8, w9
  44ae80:	b	44adc4 <_obstack_memory_used@@Base+0x4274>
  44ae84:	sxtw	x27, w0
  44ae88:	b	44a650 <_obstack_memory_used@@Base+0x3b00>
  44ae8c:	mov	w0, w19
  44ae90:	mov	x27, x15
  44ae94:	bl	4048d0 <iswalnum@plt>
  44ae98:	cmp	w19, #0x5f
  44ae9c:	mov	w8, #0x1                   	// #1
  44aea0:	b.eq	44aeb4 <_obstack_memory_used@@Base+0x4364>  // b.none
  44aea4:	ldr	x21, [sp, #288]
  44aea8:	mov	x15, x27
  44aeac:	cbz	w0, 44ad9c <_obstack_memory_used@@Base+0x424c>
  44aeb0:	b	44adc4 <_obstack_memory_used@@Base+0x4274>
  44aeb4:	ldr	x21, [sp, #288]
  44aeb8:	mov	x15, x27
  44aebc:	b	44adc4 <_obstack_memory_used@@Base+0x4274>
  44aec0:	mov	w19, #0x1                   	// #1
  44aec4:	ldr	x0, [sp, #488]
  44aec8:	bl	404700 <free@plt>
  44aecc:	ldr	x8, [x22, #152]
  44aed0:	cbz	x8, 44aeec <_obstack_memory_used@@Base+0x439c>
  44aed4:	add	x0, sp, #0x130
  44aed8:	bl	45194c <_obstack_memory_used@@Base+0xadfc>
  44aedc:	ldr	x0, [sp, #552]
  44aee0:	bl	404700 <free@plt>
  44aee4:	ldr	x0, [sp, #520]
  44aee8:	bl	404700 <free@plt>
  44aeec:	ldr	x0, [sp, #320]
  44aef0:	bl	404700 <free@plt>
  44aef4:	ldr	x0, [sp, #328]
  44aef8:	bl	404700 <free@plt>
  44aefc:	ldrb	w8, [sp, #443]
  44af00:	cbz	w8, 44af0c <_obstack_memory_used@@Base+0x43bc>
  44af04:	ldr	x0, [sp, #312]
  44af08:	bl	404700 <free@plt>
  44af0c:	mov	w0, w19
  44af10:	add	sp, sp, #0x2e0
  44af14:	ldp	x20, x19, [sp, #80]
  44af18:	ldp	x22, x21, [sp, #64]
  44af1c:	ldp	x24, x23, [sp, #48]
  44af20:	ldp	x26, x25, [sp, #32]
  44af24:	ldp	x28, x27, [sp, #16]
  44af28:	ldp	x29, x30, [sp], #96
  44af2c:	ret
  44af30:	ldr	x8, [x8, #16]
  44af34:	cbz	x8, 44af40 <_obstack_memory_used@@Base+0x43f0>
  44af38:	ldrsb	w8, [x23, #56]
  44af3c:	tbnz	w8, #31, 448ac0 <_obstack_memory_used@@Base+0x1f70>
  44af40:	mov	x21, xzr
  44af44:	cbz	x26, 44afcc <_obstack_memory_used@@Base+0x447c>
  44af48:	mov	x26, x21
  44af4c:	cbz	x4, 448ac4 <_obstack_memory_used@@Base+0x1f74>
  44af50:	mov	w19, #0x1                   	// #1
  44af54:	b	44af0c <_obstack_memory_used@@Base+0x43bc>
  44af58:	ldr	x0, [sp, #488]
  44af5c:	bl	404700 <free@plt>
  44af60:	stp	x23, x28, [sp, #480]
  44af64:	ldr	x23, [sp, #184]
  44af68:	str	x21, [sp, #472]
  44af6c:	cbz	x24, 44afc4 <_obstack_memory_used@@Base+0x4474>
  44af70:	ldp	x21, x20, [sp, #144]
  44af74:	cmp	x24, #0x1
  44af78:	b.eq	44af98 <_obstack_memory_used@@Base+0x4448>  // b.none
  44af7c:	ldr	x8, [sp, #160]
  44af80:	mov	w1, #0xff                  	// #255
  44af84:	add	x0, x8, #0x10
  44af88:	mvn	x8, x21
  44af8c:	add	x8, x8, x20
  44af90:	lsl	x2, x8, #4
  44af94:	bl	404360 <memset@plt>
  44af98:	ldr	x9, [sp, #160]
  44af9c:	ldr	x8, [sp, #472]
  44afa0:	cmp	x24, #0x2
  44afa4:	stp	xzr, x8, [x9]
  44afa8:	b.cc	44aff8 <_obstack_memory_used@@Base+0x44a8>  // b.lo, b.ul, b.last
  44afac:	ldrb	w8, [x23, #56]
  44afb0:	tbnz	w8, #4, 44aff8 <_obstack_memory_used@@Base+0x44a8>
  44afb4:	ldrb	w8, [x22, #176]
  44afb8:	tbnz	w8, #0, 44afd4 <_obstack_memory_used@@Base+0x4484>
  44afbc:	mov	w4, wzr
  44afc0:	b	44afe0 <_obstack_memory_used@@Base+0x4490>
  44afc4:	mov	w19, wzr
  44afc8:	b	44aec4 <_obstack_memory_used@@Base+0x4374>
  44afcc:	mov	x26, x21
  44afd0:	b	448ac4 <_obstack_memory_used@@Base+0x1f74>
  44afd4:	ldr	x8, [x22, #152]
  44afd8:	cmp	x8, #0x0
  44afdc:	cset	w4, gt
  44afe0:	ldr	x3, [sp, #160]
  44afe4:	add	x1, sp, #0x130
  44afe8:	mov	x0, x23
  44afec:	mov	x2, x24
  44aff0:	bl	451a10 <_obstack_memory_used@@Base+0xaec0>
  44aff4:	cbnz	w0, 44b01c <_obstack_memory_used@@Base+0x44cc>
  44aff8:	ldr	x13, [sp, #160]
  44affc:	ldrb	w9, [sp, #444]
  44b000:	ldr	x10, [sp, #352]
  44b004:	ldr	x11, [sp, #328]
  44b008:	ldur	x12, [x29, #-176]
  44b00c:	ldr	x17, [sp, #136]
  44b010:	mov	x8, xzr
  44b014:	add	x13, x13, #0x8
  44b018:	b	44b090 <_obstack_memory_used@@Base+0x4540>
  44b01c:	mov	w19, w0
  44b020:	b	44aec4 <_obstack_memory_used@@Base+0x4374>
  44b024:	ldur	w8, [x29, #-164]
  44b028:	cmp	w8, #0xc
  44b02c:	b.ne	44b15c <_obstack_memory_used@@Base+0x460c>  // b.any
  44b030:	mov	w19, #0xc                   	// #12
  44b034:	b	44aec4 <_obstack_memory_used@@Base+0x4374>
  44b038:	mov	x0, x28
  44b03c:	bl	404700 <free@plt>
  44b040:	mov	w19, #0xc                   	// #12
  44b044:	b	44aec4 <_obstack_memory_used@@Base+0x4374>
  44b048:	add	x15, x11, x14, lsl #3
  44b04c:	cmp	x14, x10
  44b050:	ldr	x16, [x13]
  44b054:	csel	x14, x17, x15, eq  // eq = none
  44b058:	ldr	x14, [x14]
  44b05c:	add	x15, x11, x16, lsl #3
  44b060:	cmp	x16, x10
  44b064:	stur	x14, [x13, #-8]
  44b068:	csel	x15, x17, x15, eq  // eq = none
  44b06c:	ldr	x15, [x15]
  44b070:	str	x15, [x13]
  44b074:	add	x14, x14, x12
  44b078:	add	x15, x15, x12
  44b07c:	stp	x14, x15, [x13, #-8]
  44b080:	add	x8, x8, #0x1
  44b084:	cmp	x8, x24
  44b088:	add	x13, x13, #0x10
  44b08c:	b.cs	44b0a8 <_obstack_memory_used@@Base+0x4558>  // b.hs, b.nlast
  44b090:	ldur	x14, [x13, #-8]
  44b094:	cmn	x14, #0x1
  44b098:	b.eq	44b080 <_obstack_memory_used@@Base+0x4530>  // b.none
  44b09c:	cbnz	w9, 44b048 <_obstack_memory_used@@Base+0x44f8>
  44b0a0:	ldr	x15, [x13]
  44b0a4:	b	44b074 <_obstack_memory_used@@Base+0x4524>
  44b0a8:	cmp	x21, #0x1
  44b0ac:	b.lt	44b0c4 <_obstack_memory_used@@Base+0x4574>  // b.tstop
  44b0b0:	ldr	x8, [sp, #160]
  44b0b4:	lsl	x2, x21, #4
  44b0b8:	mov	w1, #0xff                  	// #255
  44b0bc:	add	x0, x8, x24, lsl #4
  44b0c0:	bl	404360 <memset@plt>
  44b0c4:	ldr	x8, [x22, #224]
  44b0c8:	mov	w19, wzr
  44b0cc:	cbz	x8, 44aec4 <_obstack_memory_used@@Base+0x4374>
  44b0d0:	cmp	x24, #0x2
  44b0d4:	b.cc	44aec4 <_obstack_memory_used@@Base+0x4374>  // b.lo, b.ul, b.last
  44b0d8:	ldr	x11, [sp, #160]
  44b0dc:	ldr	x13, [sp, #160]
  44b0e0:	mvn	x10, x21
  44b0e4:	mov	x9, xzr
  44b0e8:	add	x10, x10, x20
  44b0ec:	add	x11, x11, #0x18
  44b0f0:	b	44b108 <_obstack_memory_used@@Base+0x45b8>
  44b0f4:	add	x9, x9, #0x1
  44b0f8:	mov	w19, wzr
  44b0fc:	cmp	x10, x9
  44b100:	add	x11, x11, #0x10
  44b104:	b.eq	44aec4 <_obstack_memory_used@@Base+0x4374>  // b.none
  44b108:	ldr	x12, [x8, x9, lsl #3]
  44b10c:	cmp	x9, x12
  44b110:	b.eq	44b0f4 <_obstack_memory_used@@Base+0x45a4>  // b.none
  44b114:	add	x12, x13, x12, lsl #4
  44b118:	ldr	x12, [x12, #16]
  44b11c:	stur	x12, [x11, #-8]
  44b120:	ldr	x12, [x8, x9, lsl #3]
  44b124:	add	x12, x13, x12, lsl #4
  44b128:	ldr	x12, [x12, #24]
  44b12c:	str	x12, [x11]
  44b130:	b	44b0f4 <_obstack_memory_used@@Base+0x45a4>
  44b134:	cmp	w0, #0xc
  44b138:	b.eq	44b030 <_obstack_memory_used@@Base+0x44e0>  // b.none
  44b13c:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b140:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b144:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b148:	add	x0, x0, #0xe22
  44b14c:	add	x1, x1, #0xd1f
  44b150:	add	x3, x3, #0xe34
  44b154:	mov	w2, #0x46c                 	// #1132
  44b158:	bl	404a00 <__assert_fail@plt>
  44b15c:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b160:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b164:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b168:	add	x0, x0, #0xe22
  44b16c:	add	x1, x1, #0xd1f
  44b170:	add	x3, x3, #0xe34
  44b174:	mov	w2, #0x435                 	// #1077
  44b178:	bl	404a00 <__assert_fail@plt>
  44b17c:	mov	x6, x4
  44b180:	mov	w7, #0x1                   	// #1
  44b184:	mov	x4, xzr
  44b188:	mov	x5, x2
  44b18c:	b	44b190 <_obstack_memory_used@@Base+0x4640>
  44b190:	sub	sp, sp, #0x70
  44b194:	cmp	x3, x2
  44b198:	cset	w8, gt
  44b19c:	orr	x8, x8, x3, lsr #63
  44b1a0:	stp	x29, x30, [sp, #16]
  44b1a4:	stp	x28, x27, [sp, #32]
  44b1a8:	stp	x26, x25, [sp, #48]
  44b1ac:	stp	x24, x23, [sp, #64]
  44b1b0:	stp	x22, x21, [sp, #80]
  44b1b4:	stp	x20, x19, [sp, #96]
  44b1b8:	add	x29, sp, #0x10
  44b1bc:	cbnz	x8, 44b4d0 <_obstack_memory_used@@Base+0x4980>
  44b1c0:	add	x8, x4, x3
  44b1c4:	ldrb	w20, [x0, #56]
  44b1c8:	bic	x9, x8, x8, asr #63
  44b1cc:	cmp	x8, x2
  44b1d0:	csel	x27, x2, x9, gt
  44b1d4:	mov	x22, x6
  44b1d8:	mov	x24, x5
  44b1dc:	mov	x19, x3
  44b1e0:	mov	x25, x2
  44b1e4:	mov	x26, x1
  44b1e8:	mov	x21, x0
  44b1ec:	cmp	x27, x3
  44b1f0:	stur	w7, [x29, #-4]
  44b1f4:	b.le	44b218 <_obstack_memory_used@@Base+0x46c8>
  44b1f8:	tbnz	w20, #3, 44b218 <_obstack_memory_used@@Base+0x46c8>
  44b1fc:	ldr	x9, [x21, #32]
  44b200:	mov	w8, w20
  44b204:	cbz	x9, 44b21c <_obstack_memory_used@@Base+0x46cc>
  44b208:	mov	x0, x21
  44b20c:	bl	448008 <_obstack_memory_used@@Base+0x14b8>
  44b210:	ldrb	w8, [x21, #56]
  44b214:	b	44b21c <_obstack_memory_used@@Base+0x46cc>
  44b218:	mov	w8, w20
  44b21c:	mov	x28, xzr
  44b220:	mov	w23, #0x1                   	// #1
  44b224:	cbz	x22, 44b264 <_obstack_memory_used@@Base+0x4714>
  44b228:	tbnz	w8, #4, 44b264 <_obstack_memory_used@@Base+0x4714>
  44b22c:	and	w8, w8, #0x6
  44b230:	cmp	w8, #0x4
  44b234:	b.ne	44b258 <_obstack_memory_used@@Base+0x4708>  // b.any
  44b238:	ldr	x8, [x22]
  44b23c:	ldr	x9, [x21, #48]
  44b240:	cmp	x8, x9
  44b244:	b.hi	44b25c <_obstack_memory_used@@Base+0x470c>  // b.pmore
  44b248:	cmp	x8, #0x1
  44b24c:	csel	x28, xzr, x22, lt  // lt = tstop
  44b250:	csinc	x23, x8, xzr, ge  // ge = tcont
  44b254:	b	44b264 <_obstack_memory_used@@Base+0x4714>
  44b258:	ldr	x9, [x21, #48]
  44b25c:	add	x23, x9, #0x1
  44b260:	mov	x28, x22
  44b264:	lsl	x0, x23, #4
  44b268:	bl	404250 <malloc@plt>
  44b26c:	cbz	x0, 44b4d8 <_obstack_memory_used@@Base+0x4988>
  44b270:	mov	x22, x0
  44b274:	ubfx	w8, w20, #5, #2
  44b278:	mov	x0, x21
  44b27c:	mov	x1, x26
  44b280:	mov	x2, x25
  44b284:	mov	x3, x19
  44b288:	mov	x4, x27
  44b28c:	mov	x5, x24
  44b290:	mov	x6, x23
  44b294:	mov	x7, x22
  44b298:	str	w8, [sp]
  44b29c:	bl	4489e8 <_obstack_memory_used@@Base+0x1e98>
  44b2a0:	cbz	w0, 44b2dc <_obstack_memory_used@@Base+0x478c>
  44b2a4:	cmp	w0, #0x1
  44b2a8:	mov	x8, #0xfffffffffffffffe    	// #-2
  44b2ac:	cinc	x21, x8, eq  // eq = none
  44b2b0:	mov	x0, x22
  44b2b4:	bl	404700 <free@plt>
  44b2b8:	mov	x0, x21
  44b2bc:	ldp	x20, x19, [sp, #96]
  44b2c0:	ldp	x22, x21, [sp, #80]
  44b2c4:	ldp	x24, x23, [sp, #64]
  44b2c8:	ldp	x26, x25, [sp, #48]
  44b2cc:	ldp	x28, x27, [sp, #32]
  44b2d0:	ldp	x29, x30, [sp, #16]
  44b2d4:	add	sp, sp, #0x70
  44b2d8:	ret
  44b2dc:	cbz	x28, 44b404 <_obstack_memory_used@@Base+0x48b4>
  44b2e0:	ldrb	w8, [x21, #56]
  44b2e4:	ubfx	w8, w8, #1, #2
  44b2e8:	cmp	w8, #0x2
  44b2ec:	b.eq	44b368 <_obstack_memory_used@@Base+0x4818>  // b.none
  44b2f0:	cmp	w8, #0x1
  44b2f4:	add	x26, x23, #0x1
  44b2f8:	b.eq	44b33c <_obstack_memory_used@@Base+0x47ec>  // b.none
  44b2fc:	cbnz	w8, 44b520 <_obstack_memory_used@@Base+0x49d0>
  44b300:	lsl	x25, x26, #3
  44b304:	mov	x0, x25
  44b308:	bl	404250 <malloc@plt>
  44b30c:	str	x0, [x28, #8]
  44b310:	cbz	x0, 44b518 <_obstack_memory_used@@Base+0x49c8>
  44b314:	mov	x24, x0
  44b318:	mov	x0, x25
  44b31c:	bl	404250 <malloc@plt>
  44b320:	str	x0, [x28, #16]
  44b324:	cbz	x0, 44b510 <_obstack_memory_used@@Base+0x49c0>
  44b328:	str	x26, [x28]
  44b32c:	mov	w8, #0x1                   	// #1
  44b330:	cmp	x23, #0x1
  44b334:	b.ge	44b380 <_obstack_memory_used@@Base+0x4830>  // b.tcont
  44b338:	b	44b358 <_obstack_memory_used@@Base+0x4808>
  44b33c:	ldr	x9, [x28]
  44b340:	cmp	x26, x9
  44b344:	b.hi	44b4e0 <_obstack_memory_used@@Base+0x4990>  // b.pmore
  44b348:	mov	w8, #0x1                   	// #1
  44b34c:	mov	x26, x9
  44b350:	cmp	x23, #0x1
  44b354:	b.ge	44b380 <_obstack_memory_used@@Base+0x4830>  // b.tcont
  44b358:	mov	x23, xzr
  44b35c:	cmp	x23, x26
  44b360:	b.cc	44b3cc <_obstack_memory_used@@Base+0x487c>  // b.lo, b.ul, b.last
  44b364:	b	44b3f0 <_obstack_memory_used@@Base+0x48a0>
  44b368:	ldr	x26, [x28]
  44b36c:	cmp	x26, x23
  44b370:	b.cc	44b560 <_obstack_memory_used@@Base+0x4a10>  // b.lo, b.ul, b.last
  44b374:	mov	w8, #0x2                   	// #2
  44b378:	cmp	x23, #0x1
  44b37c:	b.lt	44b358 <_obstack_memory_used@@Base+0x4808>  // b.tstop
  44b380:	ldp	x9, x10, [x28, #8]
  44b384:	cmp	x23, #0x3
  44b388:	b.hi	44b42c <_obstack_memory_used@@Base+0x48dc>  // b.pmore
  44b38c:	mov	x11, xzr
  44b390:	sub	x12, x23, x11
  44b394:	lsl	x13, x11, #3
  44b398:	add	x11, x22, x11, lsl #4
  44b39c:	add	x10, x10, x13
  44b3a0:	add	x11, x11, #0x8
  44b3a4:	add	x9, x9, x13
  44b3a8:	ldur	x13, [x11, #-8]
  44b3ac:	subs	x12, x12, #0x1
  44b3b0:	str	x13, [x9], #8
  44b3b4:	ldr	x13, [x11], #16
  44b3b8:	str	x13, [x10], #8
  44b3bc:	b.ne	44b3a8 <_obstack_memory_used@@Base+0x4858>  // b.any
  44b3c0:	ldr	x26, [x28]
  44b3c4:	cmp	x23, x26
  44b3c8:	b.cs	44b3f0 <_obstack_memory_used@@Base+0x48a0>  // b.hs, b.nlast
  44b3cc:	ldp	x10, x9, [x28, #8]
  44b3d0:	mov	x11, #0xffffffffffffffff    	// #-1
  44b3d4:	lsl	x12, x23, #3
  44b3d8:	str	x11, [x9, x12]
  44b3dc:	str	x11, [x10, x12]
  44b3e0:	ldr	x12, [x28]
  44b3e4:	add	x23, x23, #0x1
  44b3e8:	cmp	x23, x12
  44b3ec:	b.cc	44b3d4 <_obstack_memory_used@@Base+0x4884>  // b.lo, b.ul, b.last
  44b3f0:	ldrb	w9, [x21, #56]
  44b3f4:	and	w9, w9, #0xfffffff9
  44b3f8:	orr	w9, w9, w8, lsl #1
  44b3fc:	strb	w9, [x21, #56]
  44b400:	cbz	w8, 44b424 <_obstack_memory_used@@Base+0x48d4>
  44b404:	ldr	x21, [x22]
  44b408:	ldur	w8, [x29, #-4]
  44b40c:	tbz	w8, #0, 44b2b0 <_obstack_memory_used@@Base+0x4760>
  44b410:	cmp	x21, x19
  44b414:	b.ne	44b540 <_obstack_memory_used@@Base+0x49f0>  // b.any
  44b418:	ldr	x8, [x22, #8]
  44b41c:	sub	x21, x8, x19
  44b420:	b	44b2b0 <_obstack_memory_used@@Base+0x4760>
  44b424:	mov	x21, #0xfffffffffffffffe    	// #-2
  44b428:	b	44b2b0 <_obstack_memory_used@@Base+0x4760>
  44b42c:	lsl	x12, x23, #3
  44b430:	add	x15, x10, x12
  44b434:	add	x14, x9, x12
  44b438:	cmp	x9, x15
  44b43c:	add	x13, x22, x23, lsl #4
  44b440:	cset	w12, cc  // cc = lo, ul, last
  44b444:	cmp	x10, x14
  44b448:	cset	w16, cc  // cc = lo, ul, last
  44b44c:	cmp	x13, x9
  44b450:	and	w16, w12, w16
  44b454:	cset	w12, hi  // hi = pmore
  44b458:	cmp	x22, x14
  44b45c:	cset	w14, cc  // cc = lo, ul, last
  44b460:	cmp	x13, x10
  44b464:	cset	w13, hi  // hi = pmore
  44b468:	cmp	x22, x15
  44b46c:	mov	x11, xzr
  44b470:	cset	w15, cc  // cc = lo, ul, last
  44b474:	tbnz	w16, #0, 44b390 <_obstack_memory_used@@Base+0x4840>
  44b478:	and	w12, w12, w14
  44b47c:	tbnz	w12, #0, 44b390 <_obstack_memory_used@@Base+0x4840>
  44b480:	and	w12, w13, w15
  44b484:	tbnz	w12, #0, 44b390 <_obstack_memory_used@@Base+0x4840>
  44b488:	and	x11, x23, #0xfffffffffffffffc
  44b48c:	add	x12, x22, #0x20
  44b490:	add	x13, x9, #0x10
  44b494:	add	x14, x10, #0x10
  44b498:	mov	x15, x11
  44b49c:	sub	x16, x12, #0x20
  44b4a0:	ld2	{v0.2d, v1.2d}, [x12]
  44b4a4:	ld2	{v2.2d, v3.2d}, [x16]
  44b4a8:	add	x12, x12, #0x40
  44b4ac:	subs	x15, x15, #0x4
  44b4b0:	stp	q2, q0, [x13, #-16]
  44b4b4:	stp	q3, q1, [x14, #-16]
  44b4b8:	add	x13, x13, #0x20
  44b4bc:	add	x14, x14, #0x20
  44b4c0:	b.ne	44b49c <_obstack_memory_used@@Base+0x494c>  // b.any
  44b4c4:	cmp	x23, x11
  44b4c8:	b.ne	44b390 <_obstack_memory_used@@Base+0x4840>  // b.any
  44b4cc:	b	44b3c0 <_obstack_memory_used@@Base+0x4870>
  44b4d0:	mov	x21, #0xffffffffffffffff    	// #-1
  44b4d4:	b	44b2b8 <_obstack_memory_used@@Base+0x4768>
  44b4d8:	mov	x21, #0xfffffffffffffffe    	// #-2
  44b4dc:	b	44b2b8 <_obstack_memory_used@@Base+0x4768>
  44b4e0:	ldr	x0, [x28, #8]
  44b4e4:	lsl	x25, x26, #3
  44b4e8:	mov	x1, x25
  44b4ec:	bl	404490 <realloc@plt>
  44b4f0:	cbz	x0, 44b518 <_obstack_memory_used@@Base+0x49c8>
  44b4f4:	mov	x24, x0
  44b4f8:	ldr	x0, [x28, #16]
  44b4fc:	mov	x1, x25
  44b500:	bl	404490 <realloc@plt>
  44b504:	cbz	x0, 44b510 <_obstack_memory_used@@Base+0x49c0>
  44b508:	stp	x24, x0, [x28, #8]
  44b50c:	b	44b328 <_obstack_memory_used@@Base+0x47d8>
  44b510:	mov	x0, x24
  44b514:	bl	404700 <free@plt>
  44b518:	mov	w8, wzr
  44b51c:	b	44b3f0 <_obstack_memory_used@@Base+0x48a0>
  44b520:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b524:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b528:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b52c:	add	x0, x0, #0xda4
  44b530:	add	x1, x1, #0xd1f
  44b534:	add	x3, x3, #0xdc1
  44b538:	mov	w2, #0x1f9                 	// #505
  44b53c:	bl	404a00 <__assert_fail@plt>
  44b540:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b544:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b548:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b54c:	add	x0, x0, #0xd06
  44b550:	add	x1, x1, #0xd1f
  44b554:	add	x3, x3, #0xd2b
  44b558:	mov	w2, #0x1be                 	// #446
  44b55c:	bl	404a00 <__assert_fail@plt>
  44b560:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b564:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b568:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44b56c:	add	x0, x0, #0xe0a
  44b570:	add	x1, x1, #0xd1f
  44b574:	add	x3, x3, #0xdc1
  44b578:	mov	w2, #0x1fb                 	// #507
  44b57c:	bl	404a00 <__assert_fail@plt>
  44b580:	mov	x6, x5
  44b584:	mov	x5, x2
  44b588:	mov	w7, wzr
  44b58c:	b	44b190 <_obstack_memory_used@@Base+0x4640>
  44b590:	sub	sp, sp, #0x20
  44b594:	mov	x8, x6
  44b598:	mov	w9, #0x1                   	// #1
  44b59c:	str	x7, [sp]
  44b5a0:	mov	x6, xzr
  44b5a4:	mov	x7, x8
  44b5a8:	stp	x29, x30, [sp, #16]
  44b5ac:	add	x29, sp, #0x10
  44b5b0:	strb	w9, [sp, #8]
  44b5b4:	bl	44b5c4 <_obstack_memory_used@@Base+0x4a74>
  44b5b8:	ldp	x29, x30, [sp, #16]
  44b5bc:	add	sp, sp, #0x20
  44b5c0:	ret
  44b5c4:	sub	sp, sp, #0x70
  44b5c8:	stp	x29, x30, [sp, #16]
  44b5cc:	add	x29, sp, #0x10
  44b5d0:	stp	x22, x21, [sp, #80]
  44b5d4:	ldr	x22, [x29, #96]
  44b5d8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  44b5dc:	sub	x9, x9, x4
  44b5e0:	orr	x8, x4, x2
  44b5e4:	cmp	x9, x2
  44b5e8:	orr	x8, x8, x22
  44b5ec:	cset	w9, lt  // lt = tstop
  44b5f0:	orr	x8, x9, x8, lsr #63
  44b5f4:	stp	x28, x27, [sp, #32]
  44b5f8:	stp	x26, x25, [sp, #48]
  44b5fc:	stp	x24, x23, [sp, #64]
  44b600:	stp	x20, x19, [sp, #96]
  44b604:	cbnz	x8, 44b6e0 <_obstack_memory_used@@Base+0x4b90>
  44b608:	mov	x10, x7
  44b60c:	mov	x20, x6
  44b610:	mov	x21, x5
  44b614:	mov	x28, x4
  44b618:	mov	x19, x2
  44b61c:	mov	x24, x1
  44b620:	mov	x23, x0
  44b624:	cmp	x4, #0x1
  44b628:	add	x25, x4, x2
  44b62c:	b.lt	44b678 <_obstack_memory_used@@Base+0x4b28>  // b.tstop
  44b630:	mov	x27, x3
  44b634:	cmp	x19, #0x1
  44b638:	b.lt	44b680 <_obstack_memory_used@@Base+0x4b30>  // b.tstop
  44b63c:	mov	x0, x25
  44b640:	str	x10, [sp, #8]
  44b644:	bl	404250 <malloc@plt>
  44b648:	cbz	x0, 44b6e0 <_obstack_memory_used@@Base+0x4b90>
  44b64c:	mov	x1, x24
  44b650:	mov	x2, x19
  44b654:	mov	x26, x0
  44b658:	bl	403ec0 <memcpy@plt>
  44b65c:	add	x0, x26, x19
  44b660:	mov	x1, x27
  44b664:	mov	x2, x28
  44b668:	bl	403ec0 <memcpy@plt>
  44b66c:	ldr	x10, [sp, #8]
  44b670:	mov	x24, x26
  44b674:	b	44b688 <_obstack_memory_used@@Base+0x4b38>
  44b678:	mov	x26, xzr
  44b67c:	b	44b688 <_obstack_memory_used@@Base+0x4b38>
  44b680:	mov	x26, xzr
  44b684:	mov	x24, x27
  44b688:	ldrb	w8, [x29, #104]
  44b68c:	mov	x0, x23
  44b690:	mov	x1, x24
  44b694:	mov	x2, x25
  44b698:	and	w7, w8, #0x1
  44b69c:	mov	x3, x21
  44b6a0:	mov	x4, x20
  44b6a4:	mov	x5, x22
  44b6a8:	mov	x6, x10
  44b6ac:	bl	44b190 <_obstack_memory_used@@Base+0x4640>
  44b6b0:	mov	x19, x0
  44b6b4:	mov	x0, x26
  44b6b8:	bl	404700 <free@plt>
  44b6bc:	mov	x0, x19
  44b6c0:	ldp	x20, x19, [sp, #96]
  44b6c4:	ldp	x22, x21, [sp, #80]
  44b6c8:	ldp	x24, x23, [sp, #64]
  44b6cc:	ldp	x26, x25, [sp, #48]
  44b6d0:	ldp	x28, x27, [sp, #32]
  44b6d4:	ldp	x29, x30, [sp, #16]
  44b6d8:	add	sp, sp, #0x70
  44b6dc:	ret
  44b6e0:	mov	x0, #0xfffffffffffffffe    	// #-2
  44b6e4:	b	44b6c0 <_obstack_memory_used@@Base+0x4b70>
  44b6e8:	sub	sp, sp, #0x20
  44b6ec:	stp	x29, x30, [sp, #16]
  44b6f0:	add	x29, sp, #0x10
  44b6f4:	ldr	x8, [x29, #16]
  44b6f8:	strb	wzr, [sp, #8]
  44b6fc:	str	x8, [sp]
  44b700:	bl	44b5c4 <_obstack_memory_used@@Base+0x4a74>
  44b704:	ldp	x29, x30, [sp, #16]
  44b708:	add	sp, sp, #0x20
  44b70c:	ret
  44b710:	ldrb	w8, [x0, #56]
  44b714:	cmp	x2, #0x0
  44b718:	csel	x9, xzr, x4, eq  // eq = none
  44b71c:	csel	x10, xzr, x3, eq  // eq = none
  44b720:	and	w8, w8, #0xfffffff9
  44b724:	orr	w11, w8, #0x2
  44b728:	csel	w8, w8, w11, eq  // eq = none
  44b72c:	strb	w8, [x0, #56]
  44b730:	stp	x10, x9, [x1, #8]
  44b734:	str	x2, [x1]
  44b738:	ret
  44b73c:	stp	x29, x30, [sp, #-32]!
  44b740:	str	x19, [sp, #16]
  44b744:	mov	x19, x0
  44b748:	ldr	x0, [x0, #48]
  44b74c:	mov	x29, sp
  44b750:	bl	404700 <free@plt>
  44b754:	ldr	x0, [x19, #72]
  44b758:	bl	404700 <free@plt>
  44b75c:	ldr	x8, [x19, #80]
  44b760:	add	x9, x19, #0x8
  44b764:	cmp	x8, x9
  44b768:	b.eq	44b77c <_obstack_memory_used@@Base+0x4c2c>  // b.none
  44b76c:	ldr	x0, [x8, #16]
  44b770:	bl	404700 <free@plt>
  44b774:	ldr	x0, [x19, #80]
  44b778:	bl	404700 <free@plt>
  44b77c:	ldr	x0, [x19, #24]
  44b780:	bl	404700 <free@plt>
  44b784:	ldr	x0, [x19, #96]
  44b788:	bl	404700 <free@plt>
  44b78c:	ldr	x0, [x19, #88]
  44b790:	bl	404700 <free@plt>
  44b794:	mov	x0, x19
  44b798:	ldr	x19, [sp, #16]
  44b79c:	ldp	x29, x30, [sp], #32
  44b7a0:	b	404700 <free@plt>
  44b7a4:	sub	sp, sp, #0xb0
  44b7a8:	stp	x29, x30, [sp, #80]
  44b7ac:	stp	x28, x27, [sp, #96]
  44b7b0:	stp	x26, x25, [sp, #112]
  44b7b4:	stp	x24, x23, [sp, #128]
  44b7b8:	stp	x22, x21, [sp, #144]
  44b7bc:	stp	x20, x19, [sp, #160]
  44b7c0:	ldr	x8, [x0, #64]
  44b7c4:	ldr	x9, [x0, #88]
  44b7c8:	ldrb	w10, [x0, #138]
  44b7cc:	ldr	x26, [x0, #48]
  44b7d0:	mov	x19, x0
  44b7d4:	cmp	x8, x9
  44b7d8:	csel	x25, x9, x8, gt
  44b7dc:	add	x29, sp, #0x50
  44b7e0:	cbnz	w10, 44b7f4 <_obstack_memory_used@@Base+0x4ca4>
  44b7e4:	ldr	x8, [x19, #120]
  44b7e8:	cbnz	x8, 44b7f4 <_obstack_memory_used@@Base+0x4ca4>
  44b7ec:	ldrb	w8, [x19, #140]
  44b7f0:	cbz	w8, 44b7fc <_obstack_memory_used@@Base+0x4cac>
  44b7f4:	ldr	x22, [x19, #56]
  44b7f8:	b	44b9c8 <_obstack_memory_used@@Base+0x4e78>
  44b7fc:	cmp	x25, x26
  44b800:	b.le	44b9a8 <_obstack_memory_used@@Base+0x4e58>
  44b804:	add	x20, x19, #0x20
  44b808:	b	44b840 <_obstack_memory_used@@Base+0x4cf0>
  44b80c:	and	x21, x23, #0xff
  44b810:	bl	4044a0 <__ctype_toupper_loc@plt>
  44b814:	ldr	x8, [x0]
  44b818:	ldr	x9, [x19, #8]
  44b81c:	add	x28, x26, #0x1
  44b820:	ldr	w8, [x8, x21, lsl #2]
  44b824:	strb	w8, [x9, x26]
  44b828:	ldp	x8, x9, [x19, #8]
  44b82c:	ldrb	w8, [x8, x26]
  44b830:	str	w8, [x9, x26, lsl #2]
  44b834:	cmp	x25, x28
  44b838:	mov	x26, x28
  44b83c:	b.le	44bcd8 <_obstack_memory_used@@Base+0x5188>
  44b840:	ldr	x21, [x19, #40]
  44b844:	ldr	x22, [x19]
  44b848:	add	x8, x21, x26
  44b84c:	ldrsb	w23, [x22, x8]
  44b850:	tbnz	w23, #31, 44b860 <_obstack_memory_used@@Base+0x4d10>
  44b854:	mov	x0, x20
  44b858:	bl	4045d0 <mbsinit@plt>
  44b85c:	cbnz	w0, 44b80c <_obstack_memory_used@@Base+0x4cbc>
  44b860:	ldr	x8, [x20]
  44b864:	add	x9, x22, x21
  44b868:	sub	x2, x25, x26
  44b86c:	add	x1, x9, x26
  44b870:	add	x0, sp, #0x4
  44b874:	mov	x3, x20
  44b878:	stur	x8, [x29, #-8]
  44b87c:	bl	446778 <argp_parse@@Base+0xeecc>
  44b880:	sub	x24, x0, #0x1
  44b884:	mov	x21, x0
  44b888:	cmn	x24, #0x4
  44b88c:	b.hi	44b958 <_obstack_memory_used@@Base+0x4e08>  // b.pmore
  44b890:	ldr	w0, [sp, #4]
  44b894:	bl	4049a0 <towupper@plt>
  44b898:	ldr	w8, [sp, #4]
  44b89c:	mov	w22, w0
  44b8a0:	cmp	w0, w8
  44b8a4:	b.ne	44b8bc <_obstack_memory_used@@Base+0x4d6c>  // b.any
  44b8a8:	ldr	x8, [x19]
  44b8ac:	ldr	x9, [x19, #40]
  44b8b0:	add	x8, x8, x9
  44b8b4:	add	x23, x8, x26
  44b8b8:	b	44b8d8 <_obstack_memory_used@@Base+0x4d88>
  44b8bc:	add	x0, sp, #0x8
  44b8c0:	sub	x2, x29, #0x8
  44b8c4:	mov	w1, w22
  44b8c8:	add	x23, sp, #0x8
  44b8cc:	bl	404b40 <wcrtomb@plt>
  44b8d0:	cmp	x21, x0
  44b8d4:	b.ne	44b9b0 <_obstack_memory_used@@Base+0x4e60>  // b.any
  44b8d8:	ldr	x8, [x19, #8]
  44b8dc:	mov	x1, x23
  44b8e0:	mov	x2, x21
  44b8e4:	add	x0, x8, x26
  44b8e8:	bl	403ec0 <memcpy@plt>
  44b8ec:	ldr	x8, [x19, #16]
  44b8f0:	add	x23, x21, x26
  44b8f4:	add	x28, x26, #0x1
  44b8f8:	cmp	x28, x23
  44b8fc:	str	w22, [x8, x26, lsl #2]
  44b900:	b.ge	44b834 <_obstack_memory_used@@Base+0x4ce4>  // b.tcont
  44b904:	add	x8, x8, x26, lsl #2
  44b908:	lsl	x9, x21, #2
  44b90c:	add	x0, x8, #0x4
  44b910:	sub	x2, x9, #0x4
  44b914:	mov	w1, #0xff                  	// #255
  44b918:	bl	404360 <memset@plt>
  44b91c:	cmp	x24, #0x2
  44b920:	b.cc	44b940 <_obstack_memory_used@@Base+0x4df0>  // b.lo, b.ul, b.last
  44b924:	and	x8, x24, #0xfffffffffffffffe
  44b928:	add	x28, x28, x8
  44b92c:	mov	x9, x8
  44b930:	subs	x9, x9, #0x2
  44b934:	b.ne	44b930 <_obstack_memory_used@@Base+0x4de0>  // b.any
  44b938:	cmp	x24, x8
  44b93c:	b.eq	44b950 <_obstack_memory_used@@Base+0x4e00>  // b.none
  44b940:	add	x8, x21, x26
  44b944:	sub	x8, x8, x28
  44b948:	subs	x8, x8, #0x1
  44b94c:	b.ne	44b948 <_obstack_memory_used@@Base+0x4df8>  // b.any
  44b950:	mov	x28, x23
  44b954:	b	44b834 <_obstack_memory_used@@Base+0x4ce4>
  44b958:	add	x8, x21, #0x1
  44b95c:	cmp	x8, #0x2
  44b960:	b.cc	44b974 <_obstack_memory_used@@Base+0x4e24>  // b.lo, b.ul, b.last
  44b964:	ldr	x8, [x19, #64]
  44b968:	ldr	x9, [x19, #88]
  44b96c:	cmp	x8, x9
  44b970:	b.lt	44b9b8 <_obstack_memory_used@@Base+0x4e68>  // b.tstop
  44b974:	ldr	x8, [x19, #40]
  44b978:	ldp	x9, x10, [x19]
  44b97c:	add	x28, x26, #0x1
  44b980:	cmn	x21, #0x1
  44b984:	add	x8, x8, x26
  44b988:	ldrb	w8, [x9, x8]
  44b98c:	strb	w8, [x10, x26]
  44b990:	ldr	x9, [x19, #16]
  44b994:	str	w8, [x9, x26, lsl #2]
  44b998:	b.ne	44b834 <_obstack_memory_used@@Base+0x4ce4>  // b.any
  44b99c:	ldur	x8, [x29, #-8]
  44b9a0:	str	x8, [x20]
  44b9a4:	b	44b834 <_obstack_memory_used@@Base+0x4ce4>
  44b9a8:	mov	x28, x26
  44b9ac:	b	44bcd8 <_obstack_memory_used@@Base+0x5188>
  44b9b0:	mov	x28, x26
  44b9b4:	b	44b9d8 <_obstack_memory_used@@Base+0x4e88>
  44b9b8:	ldur	x8, [x29, #-8]
  44b9bc:	mov	x28, x26
  44b9c0:	str	x8, [x20]
  44b9c4:	b	44bcd8 <_obstack_memory_used@@Base+0x5188>
  44b9c8:	cmp	x26, x25
  44b9cc:	mov	x28, x26
  44b9d0:	mov	x26, x22
  44b9d4:	b.ge	44bcd8 <_obstack_memory_used@@Base+0x5188>  // b.tcont
  44b9d8:	mov	x23, x19
  44b9dc:	ldr	x8, [x23, #32]!
  44b9e0:	sub	x2, x25, x28
  44b9e4:	stur	x8, [x29, #-8]
  44b9e8:	ldr	x8, [x23, #88]
  44b9ec:	cbnz	x8, 44baec <_obstack_memory_used@@Base+0x4f9c>
  44b9f0:	ldr	x8, [x19]
  44b9f4:	ldr	x9, [x19, #40]
  44b9f8:	add	x8, x8, x9
  44b9fc:	add	x24, x8, x26
  44ba00:	mov	x0, sp
  44ba04:	mov	x1, x24
  44ba08:	mov	x3, x23
  44ba0c:	bl	446778 <argp_parse@@Base+0xeecc>
  44ba10:	sub	x27, x0, #0x1
  44ba14:	mov	x20, x0
  44ba18:	cmn	x27, #0x4
  44ba1c:	b.hi	44bb40 <_obstack_memory_used@@Base+0x4ff0>  // b.pmore
  44ba20:	ldr	w0, [sp]
  44ba24:	mov	x22, x25
  44ba28:	bl	4049a0 <towupper@plt>
  44ba2c:	ldr	w8, [sp]
  44ba30:	mov	w21, w0
  44ba34:	cmp	w0, w8
  44ba38:	b.ne	44ba44 <_obstack_memory_used@@Base+0x4ef4>  // b.any
  44ba3c:	mov	x25, x24
  44ba40:	b	44ba60 <_obstack_memory_used@@Base+0x4f10>
  44ba44:	add	x0, sp, #0x8
  44ba48:	sub	x2, x29, #0x8
  44ba4c:	mov	w1, w21
  44ba50:	add	x25, sp, #0x8
  44ba54:	bl	404b40 <wcrtomb@plt>
  44ba58:	subs	x9, x0, x20
  44ba5c:	b.ne	44bba8 <_obstack_memory_used@@Base+0x5058>  // b.any
  44ba60:	ldr	x8, [x19, #8]
  44ba64:	mov	x1, x25
  44ba68:	mov	x2, x20
  44ba6c:	add	x0, x8, x28
  44ba70:	bl	403ec0 <memcpy@plt>
  44ba74:	ldrb	w8, [x19, #140]
  44ba78:	mov	x25, x22
  44ba7c:	cbnz	w8, 44bc08 <_obstack_memory_used@@Base+0x50b8>
  44ba80:	ldr	x8, [x19, #16]
  44ba84:	add	x22, x20, x26
  44ba88:	add	x23, x20, x28
  44ba8c:	add	x26, x28, #0x1
  44ba90:	cmp	x26, x23
  44ba94:	str	w21, [x8, x28, lsl #2]
  44ba98:	b.ge	44b9c8 <_obstack_memory_used@@Base+0x4e78>  // b.tcont
  44ba9c:	add	x0, x8, x26, lsl #2
  44baa0:	lsl	x8, x20, #2
  44baa4:	sub	x2, x8, #0x4
  44baa8:	mov	w1, #0xff                  	// #255
  44baac:	bl	404360 <memset@plt>
  44bab0:	cmp	x27, #0x2
  44bab4:	b.cc	44bad4 <_obstack_memory_used@@Base+0x4f84>  // b.lo, b.ul, b.last
  44bab8:	and	x8, x27, #0xfffffffffffffffe
  44babc:	add	x26, x26, x8
  44bac0:	mov	x9, x8
  44bac4:	subs	x9, x9, #0x2
  44bac8:	b.ne	44bac4 <_obstack_memory_used@@Base+0x4f74>  // b.any
  44bacc:	cmp	x27, x8
  44bad0:	b.eq	44bae4 <_obstack_memory_used@@Base+0x4f94>  // b.none
  44bad4:	add	x8, x20, x28
  44bad8:	sub	x8, x8, x26
  44badc:	subs	x8, x8, #0x1
  44bae0:	b.ne	44badc <_obstack_memory_used@@Base+0x4f8c>  // b.any
  44bae4:	mov	x26, x23
  44bae8:	b	44b9c8 <_obstack_memory_used@@Base+0x4e78>
  44baec:	ldr	w9, [x19, #144]
  44baf0:	add	x24, sp, #0x8
  44baf4:	cmp	w9, #0x1
  44baf8:	b.lt	44ba00 <_obstack_memory_used@@Base+0x4eb0>  // b.tstop
  44bafc:	cmp	x2, #0x1
  44bb00:	b.lt	44ba00 <_obstack_memory_used@@Base+0x4eb0>  // b.tstop
  44bb04:	ldr	x11, [x19, #40]
  44bb08:	ldr	x12, [x19]
  44bb0c:	mov	x10, xzr
  44bb10:	add	x11, x26, x11
  44bb14:	add	x11, x12, x11
  44bb18:	ldrb	w12, [x11, x10]
  44bb1c:	add	x24, sp, #0x8
  44bb20:	ldrb	w12, [x8, x12]
  44bb24:	strb	w12, [x24, x10]
  44bb28:	add	x10, x10, #0x1
  44bb2c:	cmp	x10, x9
  44bb30:	b.cs	44ba00 <_obstack_memory_used@@Base+0x4eb0>  // b.hs, b.nlast
  44bb34:	cmp	x2, x10
  44bb38:	b.gt	44bb18 <_obstack_memory_used@@Base+0x4fc8>
  44bb3c:	b	44ba00 <_obstack_memory_used@@Base+0x4eb0>
  44bb40:	add	x8, x20, #0x1
  44bb44:	cmp	x8, #0x2
  44bb48:	b.cc	44bb5c <_obstack_memory_used@@Base+0x500c>  // b.lo, b.ul, b.last
  44bb4c:	ldr	x8, [x19, #64]
  44bb50:	ldr	x9, [x19, #88]
  44bb54:	cmp	x8, x9
  44bb58:	b.lt	44bcd0 <_obstack_memory_used@@Base+0x5180>  // b.tstop
  44bb5c:	ldr	x8, [x19, #40]
  44bb60:	ldr	x10, [x19]
  44bb64:	ldr	x9, [x19, #120]
  44bb68:	add	x8, x8, x26
  44bb6c:	ldrb	w8, [x10, x8]
  44bb70:	cbnz	x9, 44bd08 <_obstack_memory_used@@Base+0x51b8>
  44bb74:	ldr	x9, [x19, #8]
  44bb78:	strb	w8, [x9, x28]
  44bb7c:	ldrb	w9, [x19, #140]
  44bb80:	cbnz	w9, 44bd10 <_obstack_memory_used@@Base+0x51c0>
  44bb84:	ldr	x9, [x19, #16]
  44bb88:	add	x22, x26, #0x1
  44bb8c:	add	x26, x28, #0x1
  44bb90:	cmn	x20, #0x1
  44bb94:	str	w8, [x9, x28, lsl #2]
  44bb98:	b.ne	44b9c8 <_obstack_memory_used@@Base+0x4e78>  // b.any
  44bb9c:	ldur	x8, [x29, #-8]
  44bba0:	str	x8, [x23]
  44bba4:	b	44b9c8 <_obstack_memory_used@@Base+0x4e78>
  44bba8:	mov	x11, x0
  44bbac:	cmn	x0, #0x1
  44bbb0:	mov	x25, x24
  44bbb4:	b.eq	44ba60 <_obstack_memory_used@@Base+0x4f10>  // b.none
  44bbb8:	ldr	x8, [x19, #64]
  44bbbc:	add	x24, x11, x28
  44bbc0:	cmp	x24, x8
  44bbc4:	b.hi	44bcd0 <_obstack_memory_used@@Base+0x5180>  // b.pmore
  44bbc8:	ldr	x0, [x19, #24]
  44bbcc:	mov	x22, x9
  44bbd0:	cbnz	x0, 44bbec <_obstack_memory_used@@Base+0x509c>
  44bbd4:	lsl	x0, x8, #3
  44bbd8:	mov	x23, x11
  44bbdc:	bl	404250 <malloc@plt>
  44bbe0:	mov	x11, x23
  44bbe4:	str	x0, [x19, #24]
  44bbe8:	cbz	x0, 44bd00 <_obstack_memory_used@@Base+0x51b0>
  44bbec:	ldrb	w8, [x19, #140]
  44bbf0:	cbnz	w8, 44bd34 <_obstack_memory_used@@Base+0x51e4>
  44bbf4:	cbz	x28, 44bd2c <_obstack_memory_used@@Base+0x51dc>
  44bbf8:	cmp	x28, #0x4
  44bbfc:	b.cs	44bc90 <_obstack_memory_used@@Base+0x5140>  // b.hs, b.nlast
  44bc00:	mov	x8, xzr
  44bc04:	b	44bd1c <_obstack_memory_used@@Base+0x51cc>
  44bc08:	ldr	x8, [x19, #24]
  44bc0c:	cmp	x20, #0x4
  44bc10:	b.cs	44bc1c <_obstack_memory_used@@Base+0x50cc>  // b.hs, b.nlast
  44bc14:	mov	x9, xzr
  44bc18:	b	44bc6c <_obstack_memory_used@@Base+0x511c>
  44bc1c:	adrp	x11, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44bc20:	ldr	q1, [x11, #2064]
  44bc24:	mov	w11, #0x2                   	// #2
  44bc28:	and	x9, x20, #0xfffffffffffffffc
  44bc2c:	add	x10, x8, x28, lsl #3
  44bc30:	dup	v2.2d, x11
  44bc34:	mov	w11, #0x4                   	// #4
  44bc38:	dup	v0.2d, x26
  44bc3c:	add	x10, x10, #0x10
  44bc40:	dup	v3.2d, x11
  44bc44:	mov	x11, x9
  44bc48:	add	v4.2d, v1.2d, v0.2d
  44bc4c:	add	v5.2d, v4.2d, v2.2d
  44bc50:	add	v1.2d, v1.2d, v3.2d
  44bc54:	subs	x11, x11, #0x4
  44bc58:	stp	q4, q5, [x10, #-16]
  44bc5c:	add	x10, x10, #0x20
  44bc60:	b.ne	44bc48 <_obstack_memory_used@@Base+0x50f8>  // b.any
  44bc64:	cmp	x20, x9
  44bc68:	b.eq	44ba80 <_obstack_memory_used@@Base+0x4f30>  // b.none
  44bc6c:	sub	x10, x20, x9
  44bc70:	add	x11, x26, x9
  44bc74:	add	x9, x28, x9
  44bc78:	add	x8, x8, x9, lsl #3
  44bc7c:	str	x11, [x8], #8
  44bc80:	subs	x10, x10, #0x1
  44bc84:	add	x11, x11, #0x1
  44bc88:	b.ne	44bc7c <_obstack_memory_used@@Base+0x512c>  // b.any
  44bc8c:	b	44ba80 <_obstack_memory_used@@Base+0x4f30>
  44bc90:	adrp	x10, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44bc94:	ldr	q0, [x10, #2064]
  44bc98:	mov	w10, #0x2                   	// #2
  44bc9c:	and	x8, x28, #0xfffffffffffffffc
  44bca0:	dup	v1.2d, x10
  44bca4:	mov	w10, #0x4                   	// #4
  44bca8:	add	x9, x0, #0x10
  44bcac:	dup	v2.2d, x10
  44bcb0:	mov	x10, x8
  44bcb4:	add	v3.2d, v0.2d, v1.2d
  44bcb8:	stp	q0, q3, [x9, #-16]
  44bcbc:	add	v0.2d, v0.2d, v2.2d
  44bcc0:	subs	x10, x10, #0x4
  44bcc4:	add	x9, x9, #0x20
  44bcc8:	b.ne	44bcb4 <_obstack_memory_used@@Base+0x5164>  // b.any
  44bccc:	b	44bd24 <_obstack_memory_used@@Base+0x51d4>
  44bcd0:	ldur	x8, [x29, #-8]
  44bcd4:	str	x8, [x23]
  44bcd8:	mov	w0, wzr
  44bcdc:	stp	x28, x26, [x19, #48]
  44bce0:	ldp	x20, x19, [sp, #160]
  44bce4:	ldp	x22, x21, [sp, #144]
  44bce8:	ldp	x24, x23, [sp, #128]
  44bcec:	ldp	x26, x25, [sp, #112]
  44bcf0:	ldp	x28, x27, [sp, #96]
  44bcf4:	ldp	x29, x30, [sp, #80]
  44bcf8:	add	sp, sp, #0xb0
  44bcfc:	ret
  44bd00:	mov	w0, #0xc                   	// #12
  44bd04:	b	44bce0 <_obstack_memory_used@@Base+0x5190>
  44bd08:	ldrb	w8, [x9, x8]
  44bd0c:	b	44bb74 <_obstack_memory_used@@Base+0x5024>
  44bd10:	ldr	x9, [x19, #24]
  44bd14:	str	x26, [x9, x28, lsl #3]
  44bd18:	b	44bb84 <_obstack_memory_used@@Base+0x5034>
  44bd1c:	str	x8, [x0, x8, lsl #3]
  44bd20:	add	x8, x8, #0x1
  44bd24:	cmp	x28, x8
  44bd28:	b.ne	44bd1c <_obstack_memory_used@@Base+0x51cc>  // b.any
  44bd2c:	mov	w8, #0x1                   	// #1
  44bd30:	strb	w8, [x19, #140]
  44bd34:	ldr	x8, [x19, #8]
  44bd38:	add	x1, sp, #0x8
  44bd3c:	mov	x2, x11
  44bd40:	mov	x23, x11
  44bd44:	add	x0, x8, x28
  44bd48:	bl	403ec0 <memcpy@plt>
  44bd4c:	ldr	x8, [x19, #16]
  44bd50:	cmp	x23, #0x2
  44bd54:	mov	x16, x22
  44bd58:	str	w21, [x8, x28, lsl #2]
  44bd5c:	ldr	x9, [x19, #24]
  44bd60:	str	x26, [x9, x28, lsl #3]
  44bd64:	b.cc	44be28 <_obstack_memory_used@@Base+0x52d8>  // b.lo, b.ul, b.last
  44bd68:	sub	x11, x23, #0x1
  44bd6c:	cmp	x11, #0x4
  44bd70:	b.cs	44bd7c <_obstack_memory_used@@Base+0x522c>  // b.hs, b.nlast
  44bd74:	mov	w10, #0x1                   	// #1
  44bd78:	b	44bdfc <_obstack_memory_used@@Base+0x52ac>
  44bd7c:	adrp	x13, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44bd80:	ldr	q3, [x13, #2080]
  44bd84:	mov	w15, #0x2                   	// #2
  44bd88:	and	x12, x11, #0xfffffffffffffffc
  44bd8c:	add	x14, x28, #0x3
  44bd90:	dup	v4.2d, x15
  44bd94:	mov	w15, #0x4                   	// #4
  44bd98:	dup	v0.2d, x20
  44bd9c:	dup	v1.2d, x27
  44bda0:	dup	v2.2d, x26
  44bda4:	orr	x10, x12, #0x1
  44bda8:	add	x13, x8, x14, lsl #2
  44bdac:	add	x14, x9, x14, lsl #3
  44bdb0:	movi	v5.2d, #0xffffffffffffffff
  44bdb4:	dup	v6.2d, x15
  44bdb8:	mov	x15, x12
  44bdbc:	add	v7.2d, v3.2d, v4.2d
  44bdc0:	cmhi	v16.2d, v0.2d, v3.2d
  44bdc4:	cmhi	v17.2d, v0.2d, v7.2d
  44bdc8:	bsl	v16.16b, v3.16b, v1.16b
  44bdcc:	bsl	v17.16b, v7.16b, v1.16b
  44bdd0:	add	v7.2d, v16.2d, v2.2d
  44bdd4:	add	v16.2d, v17.2d, v2.2d
  44bdd8:	subs	x15, x15, #0x4
  44bddc:	add	v3.2d, v3.2d, v6.2d
  44bde0:	stp	q7, q16, [x14, #-16]
  44bde4:	stp	d5, d5, [x13, #-8]
  44bde8:	add	x13, x13, #0x10
  44bdec:	add	x14, x14, #0x20
  44bdf0:	b.ne	44bdbc <_obstack_memory_used@@Base+0x526c>  // b.any
  44bdf4:	cmp	x11, x12
  44bdf8:	b.eq	44be28 <_obstack_memory_used@@Base+0x52d8>  // b.none
  44bdfc:	add	x8, x8, x28, lsl #2
  44be00:	add	x9, x9, x28, lsl #3
  44be04:	mov	w11, #0xffffffff            	// #-1
  44be08:	cmp	x10, x20
  44be0c:	csel	x12, x10, x27, cc  // cc = lo, ul, last
  44be10:	add	x12, x12, x26
  44be14:	str	x12, [x9, x10, lsl #3]
  44be18:	str	w11, [x8, x10, lsl #2]
  44be1c:	add	x10, x10, #0x1
  44be20:	cmp	x23, x10
  44be24:	b.ne	44be08 <_obstack_memory_used@@Base+0x52b8>  // b.any
  44be28:	ldp	x8, x9, [x19, #88]
  44be2c:	add	x8, x8, x16
  44be30:	cmp	x9, x26
  44be34:	str	x8, [x19, #88]
  44be38:	b.le	44be48 <_obstack_memory_used@@Base+0x52f8>
  44be3c:	ldr	x9, [x19, #104]
  44be40:	add	x9, x9, x16
  44be44:	str	x9, [x19, #104]
  44be48:	ldr	x9, [x19, #64]
  44be4c:	add	x22, x20, x26
  44be50:	mov	x26, x24
  44be54:	cmp	x9, x8
  44be58:	csel	x25, x8, x9, gt
  44be5c:	b	44b9c8 <_obstack_memory_used@@Base+0x4e78>
  44be60:	sub	sp, sp, #0x90
  44be64:	stp	x29, x30, [sp, #64]
  44be68:	stp	x24, x23, [sp, #96]
  44be6c:	stp	x22, x21, [sp, #112]
  44be70:	stp	x20, x19, [sp, #128]
  44be74:	ldr	x8, [x0, #64]
  44be78:	ldr	x9, [x0, #88]
  44be7c:	ldr	x23, [x0, #48]
  44be80:	mov	x19, x0
  44be84:	str	x25, [sp, #80]
  44be88:	cmp	x8, x9
  44be8c:	csel	x22, x9, x8, gt
  44be90:	cmp	x22, x23
  44be94:	add	x29, sp, #0x40
  44be98:	b.le	44c044 <_obstack_memory_used@@Base+0x54f4>
  44be9c:	add	x20, x19, #0x20
  44bea0:	ldr	x8, [x19, #120]
  44bea4:	ldr	x24, [x19, #32]
  44bea8:	sub	x2, x22, x23
  44beac:	cbnz	x8, 44bf9c <_obstack_memory_used@@Base+0x544c>
  44beb0:	ldr	x8, [x19]
  44beb4:	ldr	x9, [x19, #40]
  44beb8:	add	x8, x8, x9
  44bebc:	add	x1, x8, x23
  44bec0:	add	x0, x29, #0x1c
  44bec4:	mov	x3, x20
  44bec8:	bl	446778 <argp_parse@@Base+0xeecc>
  44becc:	add	x8, x0, #0x1
  44bed0:	cmp	x8, #0x2
  44bed4:	b.cc	44bef4 <_obstack_memory_used@@Base+0x53a4>  // b.lo, b.ul, b.last
  44bed8:	mov	x21, x0
  44bedc:	cmn	x0, #0x2
  44bee0:	b.ne	44bf1c <_obstack_memory_used@@Base+0x53cc>  // b.any
  44bee4:	ldr	x8, [x19, #64]
  44bee8:	ldr	x9, [x19, #88]
  44beec:	cmp	x8, x9
  44bef0:	b.lt	44c040 <_obstack_memory_used@@Base+0x54f0>  // b.tstop
  44bef4:	ldr	x8, [x19, #40]
  44bef8:	ldr	x9, [x19]
  44befc:	add	x8, x8, x23
  44bf00:	ldrb	w8, [x9, x8]
  44bf04:	str	w8, [x29, #28]
  44bf08:	ldr	x9, [x19, #120]
  44bf0c:	cbnz	x9, 44c034 <_obstack_memory_used@@Base+0x54e4>
  44bf10:	mov	w21, #0x1                   	// #1
  44bf14:	str	x24, [x20]
  44bf18:	b	44bf20 <_obstack_memory_used@@Base+0x53d0>
  44bf1c:	ldr	w8, [x29, #28]
  44bf20:	ldr	x9, [x19, #16]
  44bf24:	add	x25, x21, x23
  44bf28:	add	x24, x23, #0x1
  44bf2c:	cmp	x24, x25
  44bf30:	str	w8, [x9, x23, lsl #2]
  44bf34:	b.ge	44bf8c <_obstack_memory_used@@Base+0x543c>  // b.tcont
  44bf38:	add	x8, x9, x23, lsl #2
  44bf3c:	lsl	x9, x21, #2
  44bf40:	add	x0, x8, #0x4
  44bf44:	sub	x2, x9, #0x4
  44bf48:	mov	w1, #0xff                  	// #255
  44bf4c:	bl	404360 <memset@plt>
  44bf50:	sub	x8, x21, #0x1
  44bf54:	cmp	x8, #0x2
  44bf58:	b.cc	44bf78 <_obstack_memory_used@@Base+0x5428>  // b.lo, b.ul, b.last
  44bf5c:	and	x9, x8, #0xfffffffffffffffe
  44bf60:	add	x24, x24, x9
  44bf64:	mov	x10, x9
  44bf68:	subs	x10, x10, #0x2
  44bf6c:	b.ne	44bf68 <_obstack_memory_used@@Base+0x5418>  // b.any
  44bf70:	cmp	x8, x9
  44bf74:	b.eq	44bf88 <_obstack_memory_used@@Base+0x5438>  // b.none
  44bf78:	add	x8, x23, x21
  44bf7c:	sub	x8, x8, x24
  44bf80:	subs	x8, x8, #0x1
  44bf84:	b.ne	44bf80 <_obstack_memory_used@@Base+0x5430>  // b.any
  44bf88:	mov	x24, x25
  44bf8c:	cmp	x22, x24
  44bf90:	mov	x23, x24
  44bf94:	b.gt	44bea0 <_obstack_memory_used@@Base+0x5350>
  44bf98:	b	44c048 <_obstack_memory_used@@Base+0x54f8>
  44bf9c:	ldr	w9, [x19, #144]
  44bfa0:	mov	x1, sp
  44bfa4:	cmp	w9, #0x1
  44bfa8:	b.lt	44bec0 <_obstack_memory_used@@Base+0x5370>  // b.tstop
  44bfac:	cmp	x2, #0x1
  44bfb0:	b.lt	44bec0 <_obstack_memory_used@@Base+0x5370>  // b.tstop
  44bfb4:	ldr	x9, [x19, #40]
  44bfb8:	ldp	x10, x11, [x19]
  44bfbc:	mov	x1, sp
  44bfc0:	add	x9, x23, x9
  44bfc4:	ldrb	w9, [x10, x9]
  44bfc8:	ldrb	w8, [x8, x9]
  44bfcc:	strb	w8, [x11, x23]
  44bfd0:	strb	w8, [sp]
  44bfd4:	ldr	w8, [x19, #144]
  44bfd8:	cmp	w8, #0x2
  44bfdc:	b.lt	44bec0 <_obstack_memory_used@@Base+0x5370>  // b.tstop
  44bfe0:	cmp	x2, #0x2
  44bfe4:	b.lt	44bec0 <_obstack_memory_used@@Base+0x5370>  // b.tstop
  44bfe8:	mov	w8, #0x1                   	// #1
  44bfec:	ldr	x9, [x19, #40]
  44bff0:	ldp	x10, x12, [x19]
  44bff4:	ldr	x11, [x19, #120]
  44bff8:	mov	x1, sp
  44bffc:	add	x9, x10, x9
  44c000:	add	x9, x9, x23
  44c004:	ldrb	w9, [x9, x8]
  44c008:	add	x10, x12, x23
  44c00c:	ldrb	w9, [x11, x9]
  44c010:	strb	w9, [x10, x8]
  44c014:	strb	w9, [x1, x8]
  44c018:	ldr	w9, [x19, #144]
  44c01c:	add	x8, x8, #0x1
  44c020:	cmp	w9, w8
  44c024:	b.le	44bec0 <_obstack_memory_used@@Base+0x5370>
  44c028:	cmp	x2, x8
  44c02c:	b.gt	44bfec <_obstack_memory_used@@Base+0x549c>
  44c030:	b	44bec0 <_obstack_memory_used@@Base+0x5370>
  44c034:	ldrb	w8, [x9, w8, uxtw]
  44c038:	str	w8, [x29, #28]
  44c03c:	b	44bf10 <_obstack_memory_used@@Base+0x53c0>
  44c040:	str	x24, [x20]
  44c044:	mov	x24, x23
  44c048:	stp	x24, x24, [x19, #48]
  44c04c:	ldp	x20, x19, [sp, #128]
  44c050:	ldp	x22, x21, [sp, #112]
  44c054:	ldp	x24, x23, [sp, #96]
  44c058:	ldr	x25, [sp, #80]
  44c05c:	ldp	x29, x30, [sp, #64]
  44c060:	add	sp, sp, #0x90
  44c064:	ret
  44c068:	sub	sp, sp, #0x80
  44c06c:	stp	x29, x30, [sp, #32]
  44c070:	stp	x28, x27, [sp, #48]
  44c074:	stp	x26, x25, [sp, #64]
  44c078:	stp	x24, x23, [sp, #80]
  44c07c:	stp	x22, x21, [sp, #96]
  44c080:	stp	x20, x19, [sp, #112]
  44c084:	ldr	x28, [x1]
  44c088:	add	x29, sp, #0x20
  44c08c:	mov	x19, x5
  44c090:	mov	x21, x4
  44c094:	ldr	x8, [x28, #168]
  44c098:	mov	x23, x2
  44c09c:	mov	x25, x0
  44c0a0:	stur	x3, [x29, #-8]
  44c0a4:	stp	x8, x1, [sp, #8]
  44c0a8:	bl	44c834 <_obstack_memory_used@@Base+0x5ce4>
  44c0ac:	mov	x20, x0
  44c0b0:	cbnz	x0, 44c0bc <_obstack_memory_used@@Base+0x556c>
  44c0b4:	ldr	w8, [x19]
  44c0b8:	cbnz	w8, 44c298 <_obstack_memory_used@@Base+0x5748>
  44c0bc:	ldrb	w8, [x23, #8]
  44c0c0:	cmp	w8, #0xa
  44c0c4:	b.ne	44c1e4 <_obstack_memory_used@@Base+0x5694>  // b.any
  44c0c8:	str	x19, [sp]
  44c0cc:	ldur	x8, [x29, #-8]
  44c0d0:	ldr	x22, [sp]
  44c0d4:	mov	w19, #0xa                   	// #10
  44c0d8:	mov	x24, #0xffffffffffffffff    	// #-1
  44c0dc:	orr	x26, x8, #0x800000
  44c0e0:	b	44c0f4 <_obstack_memory_used@@Base+0x55a4>
  44c0e4:	ldrb	w8, [x23, #8]
  44c0e8:	mov	x20, x0
  44c0ec:	cmp	w8, #0xa
  44c0f0:	b.ne	44c1e8 <_obstack_memory_used@@Base+0x5698>  // b.any
  44c0f4:	mov	x0, x23
  44c0f8:	mov	x1, x25
  44c0fc:	mov	x2, x26
  44c100:	bl	44c2b0 <_obstack_memory_used@@Base+0x5760>
  44c104:	ldr	x8, [x25, #72]
  44c108:	add	x8, x8, w0, sxtw
  44c10c:	str	x8, [x25, #72]
  44c110:	ldrb	w8, [x23, #8]
  44c114:	orr	w9, w8, #0x8
  44c118:	cmp	w9, #0xa
  44c11c:	b.ne	44c16c <_obstack_memory_used@@Base+0x561c>  // b.any
  44c120:	mov	x27, xzr
  44c124:	ldr	w8, [x28, #128]
  44c128:	cmp	w8, #0xf
  44c12c:	b.eq	44c1c0 <_obstack_memory_used@@Base+0x5670>  // b.none
  44c130:	ldr	x0, [x28, #112]
  44c134:	add	w9, w8, #0x1
  44c138:	sxtw	x8, w8
  44c13c:	add	x0, x0, x8, lsl #6
  44c140:	str	w9, [x28, #128]
  44c144:	str	xzr, [x0, #8]!
  44c148:	stp	x20, x27, [x0, #8]
  44c14c:	str	w19, [x0, #48]
  44c150:	stp	xzr, xzr, [x0, #24]
  44c154:	str	x24, [x0, #56]
  44c158:	cbz	x20, 44c160 <_obstack_memory_used@@Base+0x5610>
  44c15c:	str	x0, [x20]
  44c160:	cbz	x27, 44c0e4 <_obstack_memory_used@@Base+0x5594>
  44c164:	str	x0, [x27]
  44c168:	b	44c0e4 <_obstack_memory_used@@Base+0x5594>
  44c16c:	cbz	x21, 44c178 <_obstack_memory_used@@Base+0x5628>
  44c170:	cmp	w8, #0x9
  44c174:	b.eq	44c120 <_obstack_memory_used@@Base+0x55d0>  // b.none
  44c178:	ldp	x8, x1, [sp, #8]
  44c17c:	ldur	x3, [x29, #-8]
  44c180:	ldr	x19, [x28, #168]
  44c184:	mov	x0, x25
  44c188:	mov	x2, x23
  44c18c:	mov	x4, x21
  44c190:	mov	x5, x22
  44c194:	str	x8, [x28, #168]
  44c198:	bl	44c834 <_obstack_memory_used@@Base+0x5ce4>
  44c19c:	mov	x27, x0
  44c1a0:	cbnz	x0, 44c1ac <_obstack_memory_used@@Base+0x565c>
  44c1a4:	ldr	w8, [x22]
  44c1a8:	cbnz	w8, 44c208 <_obstack_memory_used@@Base+0x56b8>
  44c1ac:	ldr	x8, [x28, #168]
  44c1b0:	orr	x8, x8, x19
  44c1b4:	mov	w19, #0xa                   	// #10
  44c1b8:	str	x8, [x28, #168]
  44c1bc:	b	44c124 <_obstack_memory_used@@Base+0x55d4>
  44c1c0:	mov	w0, #0x3c8                 	// #968
  44c1c4:	bl	404250 <malloc@plt>
  44c1c8:	cbz	x0, 44c2a0 <_obstack_memory_used@@Base+0x5750>
  44c1cc:	ldr	x9, [x28, #112]
  44c1d0:	mov	w8, wzr
  44c1d4:	str	x9, [x0]
  44c1d8:	str	x0, [x28, #112]
  44c1dc:	str	wzr, [x28, #128]
  44c1e0:	b	44c134 <_obstack_memory_used@@Base+0x55e4>
  44c1e4:	mov	x0, x20
  44c1e8:	ldp	x20, x19, [sp, #112]
  44c1ec:	ldp	x22, x21, [sp, #96]
  44c1f0:	ldp	x24, x23, [sp, #80]
  44c1f4:	ldp	x26, x25, [sp, #64]
  44c1f8:	ldp	x28, x27, [sp, #48]
  44c1fc:	ldp	x29, x30, [sp, #32]
  44c200:	add	sp, sp, #0x80
  44c204:	ret
  44c208:	cbz	x20, 44c298 <_obstack_memory_used@@Base+0x5748>
  44c20c:	mov	w21, #0xff                  	// #255
  44c210:	movk	w21, #0x4, lsl #16
  44c214:	mov	x22, x20
  44c218:	ldr	x20, [x20, #8]
  44c21c:	cbnz	x20, 44c214 <_obstack_memory_used@@Base+0x56c4>
  44c220:	ldr	x20, [x22, #16]
  44c224:	cbnz	x20, 44c214 <_obstack_memory_used@@Base+0x56c4>
  44c228:	ldr	w8, [x22, #48]
  44c22c:	and	w8, w8, w21
  44c230:	cmp	w8, #0x3
  44c234:	b.eq	44c268 <_obstack_memory_used@@Base+0x5718>  // b.none
  44c238:	cmp	w8, #0x6
  44c23c:	b.ne	44c274 <_obstack_memory_used@@Base+0x5724>  // b.any
  44c240:	ldr	x19, [x22, #40]
  44c244:	ldr	x0, [x19]
  44c248:	bl	404700 <free@plt>
  44c24c:	ldr	x0, [x19, #8]
  44c250:	bl	404700 <free@plt>
  44c254:	ldr	x0, [x19, #16]
  44c258:	bl	404700 <free@plt>
  44c25c:	ldr	x0, [x19, #24]
  44c260:	bl	404700 <free@plt>
  44c264:	b	44c26c <_obstack_memory_used@@Base+0x571c>
  44c268:	ldr	x19, [x22, #40]
  44c26c:	mov	x0, x19
  44c270:	bl	404700 <free@plt>
  44c274:	ldr	x8, [x22]
  44c278:	cbz	x8, 44c298 <_obstack_memory_used@@Base+0x5748>
  44c27c:	ldr	x20, [x8, #16]
  44c280:	cmp	x20, x22
  44c284:	mov	x22, x8
  44c288:	b.eq	44c228 <_obstack_memory_used@@Base+0x56d8>  // b.none
  44c28c:	mov	x22, x8
  44c290:	cbz	x20, 44c228 <_obstack_memory_used@@Base+0x56d8>
  44c294:	b	44c214 <_obstack_memory_used@@Base+0x56c4>
  44c298:	mov	x0, xzr
  44c29c:	b	44c1e8 <_obstack_memory_used@@Base+0x5698>
  44c2a0:	ldr	x9, [sp]
  44c2a4:	mov	w8, #0xc                   	// #12
  44c2a8:	str	w8, [x9]
  44c2ac:	b	44c1e8 <_obstack_memory_used@@Base+0x5698>
  44c2b0:	sub	sp, sp, #0x50
  44c2b4:	stp	x29, x30, [sp, #16]
  44c2b8:	stp	x24, x23, [sp, #32]
  44c2bc:	stp	x22, x21, [sp, #48]
  44c2c0:	stp	x20, x19, [sp, #64]
  44c2c4:	ldr	x9, [x1, #104]
  44c2c8:	ldr	x8, [x1, #72]
  44c2cc:	mov	x19, x0
  44c2d0:	add	x29, sp, #0x10
  44c2d4:	cmp	x9, x8
  44c2d8:	b.le	44c3bc <_obstack_memory_used@@Base+0x586c>
  44c2dc:	ldr	x9, [x1, #8]
  44c2e0:	mov	x23, x19
  44c2e4:	mov	x20, x2
  44c2e8:	mov	x21, x1
  44c2ec:	ldrb	w24, [x9, x8]
  44c2f0:	strb	w24, [x23], #8
  44c2f4:	ldr	w8, [x23]
  44c2f8:	and	w9, w8, #0xff9fffff
  44c2fc:	str	w9, [x23]
  44c300:	ldr	w11, [x1, #144]
  44c304:	cmp	w11, #0x2
  44c308:	b.lt	44c32c <_obstack_memory_used@@Base+0x57dc>  // b.tstop
  44c30c:	ldr	x9, [x21, #72]
  44c310:	ldr	x10, [x21, #48]
  44c314:	cmp	x9, x10
  44c318:	b.eq	44c32c <_obstack_memory_used@@Base+0x57dc>  // b.none
  44c31c:	ldr	x10, [x21, #16]
  44c320:	ldr	w9, [x10, x9, lsl #2]
  44c324:	cmn	w9, #0x1
  44c328:	b.eq	44c4fc <_obstack_memory_used@@Base+0x59ac>  // b.none
  44c32c:	mov	w9, #0xff00                	// #65280
  44c330:	cmp	w24, #0x5c
  44c334:	movk	w9, #0xff9f, lsl #16
  44c338:	b.ne	44c3cc <_obstack_memory_used@@Base+0x587c>  // b.any
  44c33c:	ldr	x12, [x21, #72]
  44c340:	ldr	x13, [x21, #88]
  44c344:	add	x10, x12, #0x1
  44c348:	cmp	x10, x13
  44c34c:	b.ge	44c41c <_obstack_memory_used@@Base+0x58cc>  // b.tcont
  44c350:	ldrb	w13, [x21, #139]
  44c354:	cbnz	w13, 44c7d0 <_obstack_memory_used@@Base+0x5c80>
  44c358:	ldr	x11, [x21, #8]
  44c35c:	ldrb	w22, [x11, x10]
  44c360:	and	w8, w8, w9
  44c364:	orr	w24, w8, #0x1
  44c368:	strb	w22, [x19]
  44c36c:	str	w24, [x19, #8]
  44c370:	ldr	w8, [x21, #144]
  44c374:	cmp	w8, #0x2
  44c378:	b.lt	44c48c <_obstack_memory_used@@Base+0x593c>  // b.tstop
  44c37c:	ldr	x8, [x21, #72]
  44c380:	ldr	x9, [x21, #16]
  44c384:	add	x8, x9, x8, lsl #2
  44c388:	ldr	w21, [x8, #4]
  44c38c:	mov	w0, w21
  44c390:	bl	4048d0 <iswalnum@plt>
  44c394:	ldr	w9, [x23]
  44c398:	cmp	w0, #0x0
  44c39c:	mov	w8, #0x5f                  	// #95
  44c3a0:	mov	w10, #0x400000              	// #4194304
  44c3a4:	ccmp	w21, w8, #0x4, eq  // eq = none
  44c3a8:	csel	w8, w10, wzr, eq  // eq = none
  44c3ac:	and	w9, w9, #0xffbfffff
  44c3b0:	orr	w8, w8, w9
  44c3b4:	and	x9, x22, #0xff
  44c3b8:	b	44c4b4 <_obstack_memory_used@@Base+0x5964>
  44c3bc:	mov	w8, #0x2                   	// #2
  44c3c0:	mov	w0, wzr
  44c3c4:	strb	w8, [x19, #8]
  44c3c8:	b	44c62c <_obstack_memory_used@@Base+0x5adc>
  44c3cc:	and	w8, w8, w9
  44c3d0:	orr	w22, w8, #0x1
  44c3d4:	str	w22, [x23]
  44c3d8:	ldr	w8, [x21, #144]
  44c3dc:	cmp	w8, #0x2
  44c3e0:	b.lt	44c42c <_obstack_memory_used@@Base+0x58dc>  // b.tstop
  44c3e4:	ldr	x8, [x21, #72]
  44c3e8:	ldr	x9, [x21, #16]
  44c3ec:	ldr	w22, [x9, x8, lsl #2]
  44c3f0:	mov	w0, w22
  44c3f4:	bl	4048d0 <iswalnum@plt>
  44c3f8:	ldr	w9, [x23]
  44c3fc:	cmp	w0, #0x0
  44c400:	mov	w8, #0x5f                  	// #95
  44c404:	ccmp	w22, w8, #0x4, eq  // eq = none
  44c408:	mov	w8, #0x400000              	// #4194304
  44c40c:	csel	w8, w8, wzr, eq  // eq = none
  44c410:	and	w9, w9, #0xffbfffff
  44c414:	orr	w8, w8, w9
  44c418:	b	44c458 <_obstack_memory_used@@Base+0x5908>
  44c41c:	and	w8, w8, w9
  44c420:	mov	w9, #0x24                  	// #36
  44c424:	orr	w8, w8, w9
  44c428:	b	44c624 <_obstack_memory_used@@Base+0x5ad4>
  44c42c:	bl	404690 <__ctype_b_loc@plt>
  44c430:	ldr	x8, [x0]
  44c434:	cmp	w24, #0x5f
  44c438:	cset	w9, eq  // eq = none
  44c43c:	ldrh	w8, [x8, x24, lsl #1]
  44c440:	and	w8, w8, #0x8
  44c444:	orr	w8, w9, w8, lsr #3
  44c448:	cmp	w8, #0x0
  44c44c:	mov	w8, #0x400000              	// #4194304
  44c450:	csel	w8, w8, wzr, ne  // ne = any
  44c454:	orr	w8, w8, w22
  44c458:	sub	w9, w24, #0xa
  44c45c:	cmp	w9, #0x73
  44c460:	mov	w0, #0x1                   	// #1
  44c464:	str	w8, [x23]
  44c468:	b.hi	44c62c <_obstack_memory_used@@Base+0x5adc>  // b.pmore
  44c46c:	adrp	x10, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44c470:	add	x10, x10, #0x858
  44c474:	adr	x11, 44c484 <_obstack_memory_used@@Base+0x5934>
  44c478:	ldrb	w12, [x10, x9]
  44c47c:	add	x11, x11, x12, lsl #2
  44c480:	br	x11
  44c484:	tbnz	w20, #11, 44c61c <_obstack_memory_used@@Base+0x5acc>
  44c488:	b	44c628 <_obstack_memory_used@@Base+0x5ad8>
  44c48c:	bl	404690 <__ctype_b_loc@plt>
  44c490:	ldr	x8, [x0]
  44c494:	and	x9, x22, #0xff
  44c498:	and	w10, w22, #0xff
  44c49c:	cmp	w10, #0x5f
  44c4a0:	ldrh	w8, [x8, x9, lsl #1]
  44c4a4:	cset	w10, eq  // eq = none
  44c4a8:	ubfx	w8, w8, #3, #1
  44c4ac:	orr	w8, w8, w10
  44c4b0:	orr	w8, w24, w8, lsl #22
  44c4b4:	and	w10, w22, #0xff
  44c4b8:	sub	w10, w10, #0x27
  44c4bc:	cmp	w10, #0x56
  44c4c0:	mov	w0, #0x2                   	// #2
  44c4c4:	str	w8, [x23]
  44c4c8:	b.hi	44c62c <_obstack_memory_used@@Base+0x5adc>  // b.pmore
  44c4cc:	adrp	x11, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44c4d0:	add	x11, x11, #0x8cc
  44c4d4:	adr	x12, 44c4e4 <_obstack_memory_used@@Base+0x5994>
  44c4d8:	ldrb	w13, [x11, x10]
  44c4dc:	add	x12, x12, x13, lsl #2
  44c4e0:	br	x12
  44c4e4:	tbnz	w20, #14, 44c7c8 <_obstack_memory_used@@Base+0x5c78>
  44c4e8:	and	w8, w8, #0xffffff00
  44c4ec:	sub	x9, x9, #0x31
  44c4f0:	orr	w8, w8, #0x4
  44c4f4:	str	x9, [x19]
  44c4f8:	b	44c74c <_obstack_memory_used@@Base+0x5bfc>
  44c4fc:	mov	w9, #0xff00                	// #65280
  44c500:	movk	w9, #0xff9f, lsl #16
  44c504:	mov	w10, #0x1                   	// #1
  44c508:	movk	w10, #0x20, lsl #16
  44c50c:	and	w8, w8, w9
  44c510:	orr	w8, w8, w10
  44c514:	b	44c624 <_obstack_memory_used@@Base+0x5ad4>
  44c518:	tbnz	w20, #3, 44c564 <_obstack_memory_used@@Base+0x5a14>
  44c51c:	ldr	x9, [x21, #72]
  44c520:	ldr	x10, [x21, #88]
  44c524:	add	x9, x9, #0x1
  44c528:	cmp	x9, x10
  44c52c:	b.eq	44c564 <_obstack_memory_used@@Base+0x5a14>  // b.none
  44c530:	mov	x0, sp
  44c534:	mov	x1, x21
  44c538:	mov	x2, x20
  44c53c:	str	x9, [x21, #72]
  44c540:	bl	44c2b0 <_obstack_memory_used@@Base+0x5760>
  44c544:	ldr	x8, [x21, #72]
  44c548:	sub	x8, x8, #0x1
  44c54c:	str	x8, [x21, #72]
  44c550:	ldrb	w8, [sp, #8]
  44c554:	sub	w8, w8, #0x9
  44c558:	cmp	w8, #0x1
  44c55c:	b.hi	44c628 <_obstack_memory_used@@Base+0x5ad8>  // b.pmore
  44c560:	ldr	w8, [x23]
  44c564:	and	w8, w8, #0xffffff00
  44c568:	mov	w9, #0x20                  	// #32
  44c56c:	b	44c5e4 <_obstack_memory_used@@Base+0x5a94>
  44c570:	tbz	w20, #13, 44c628 <_obstack_memory_used@@Base+0x5ad8>
  44c574:	and	w8, w8, #0xffffff00
  44c578:	orr	w8, w8, #0x8
  44c57c:	b	44c624 <_obstack_memory_used@@Base+0x5ad4>
  44c580:	tbz	w20, #13, 44c628 <_obstack_memory_used@@Base+0x5ad8>
  44c584:	mov	w9, #0x9                   	// #9
  44c588:	b	44c620 <_obstack_memory_used@@Base+0x5ad0>
  44c58c:	mov	w9, #0xb                   	// #11
  44c590:	b	44c620 <_obstack_memory_used@@Base+0x5ad0>
  44c594:	mov	w9, #0x402                 	// #1026
  44c598:	tst	x20, x9
  44c59c:	b.ne	44c628 <_obstack_memory_used@@Base+0x5ad8>  // b.any
  44c5a0:	mov	w9, #0x12                  	// #18
  44c5a4:	b	44c620 <_obstack_memory_used@@Base+0x5ad0>
  44c5a8:	mov	w9, #0x5                   	// #5
  44c5ac:	b	44c620 <_obstack_memory_used@@Base+0x5ad0>
  44c5b0:	mov	w9, #0x402                 	// #1026
  44c5b4:	tst	x20, x9
  44c5b8:	b.ne	44c628 <_obstack_memory_used@@Base+0x5ad8>  // b.any
  44c5bc:	mov	w9, #0x13                  	// #19
  44c5c0:	b	44c620 <_obstack_memory_used@@Base+0x5ad0>
  44c5c4:	mov	w9, #0x14                  	// #20
  44c5c8:	b	44c620 <_obstack_memory_used@@Base+0x5ad0>
  44c5cc:	mov	w9, #0x8                   	// #8
  44c5d0:	movk	w9, #0x80, lsl #16
  44c5d4:	tst	x20, x9
  44c5d8:	b.eq	44c660 <_obstack_memory_used@@Base+0x5b10>  // b.none
  44c5dc:	and	w8, w8, #0xffffff00
  44c5e0:	mov	w9, #0x10                  	// #16
  44c5e4:	orr	w8, w8, #0xc
  44c5e8:	str	w9, [x19]
  44c5ec:	str	w8, [x19, #8]
  44c5f0:	b	44c628 <_obstack_memory_used@@Base+0x5ad8>
  44c5f4:	mvn	w9, w20
  44c5f8:	mov	w10, #0x1200                	// #4608
  44c5fc:	tst	x9, x10
  44c600:	b.ne	44c628 <_obstack_memory_used@@Base+0x5ad8>  // b.any
  44c604:	mov	w9, #0x17                  	// #23
  44c608:	b	44c620 <_obstack_memory_used@@Base+0x5ad0>
  44c60c:	mov	w9, #0x8400                	// #33792
  44c610:	and	x9, x20, x9
  44c614:	cmp	x9, #0x8, lsl #12
  44c618:	b.ne	44c628 <_obstack_memory_used@@Base+0x5ad8>  // b.any
  44c61c:	mov	w9, #0xa                   	// #10
  44c620:	bfxil	w8, w9, #0, #8
  44c624:	str	w8, [x23]
  44c628:	mov	w0, #0x1                   	// #1
  44c62c:	ldp	x20, x19, [sp, #64]
  44c630:	ldp	x22, x21, [sp, #48]
  44c634:	ldp	x24, x23, [sp, #32]
  44c638:	ldp	x29, x30, [sp, #16]
  44c63c:	add	sp, sp, #0x50
  44c640:	ret
  44c644:	mvn	w9, w20
  44c648:	mov	w10, #0x1200                	// #4608
  44c64c:	tst	x9, x10
  44c650:	b.ne	44c628 <_obstack_memory_used@@Base+0x5ad8>  // b.any
  44c654:	and	w8, w8, #0xffffff00
  44c658:	orr	w8, w8, #0x18
  44c65c:	b	44c624 <_obstack_memory_used@@Base+0x5ad4>
  44c660:	ldr	x9, [x21, #72]
  44c664:	cbz	x9, 44c5dc <_obstack_memory_used@@Base+0x5a8c>
  44c668:	tbz	w20, #11, 44c628 <_obstack_memory_used@@Base+0x5ad8>
  44c66c:	ldr	x10, [x21, #8]
  44c670:	add	x9, x9, x10
  44c674:	ldurb	w9, [x9, #-1]
  44c678:	cmp	w9, #0xa
  44c67c:	b.eq	44c5dc <_obstack_memory_used@@Base+0x5a8c>  // b.none
  44c680:	b	44c628 <_obstack_memory_used@@Base+0x5ad8>
  44c684:	tbnz	w20, #19, 44c7c8 <_obstack_memory_used@@Base+0x5c78>
  44c688:	and	w8, w8, #0xffffff00
  44c68c:	mov	w9, #0x80                  	// #128
  44c690:	b	44c744 <_obstack_memory_used@@Base+0x5bf4>
  44c694:	tbnz	w20, #13, 44c7c8 <_obstack_memory_used@@Base+0x5c78>
  44c698:	and	w8, w8, #0xffffff00
  44c69c:	orr	w8, w8, #0x8
  44c6a0:	b	44c7a0 <_obstack_memory_used@@Base+0x5c50>
  44c6a4:	tbnz	w20, #13, 44c7c8 <_obstack_memory_used@@Base+0x5c78>
  44c6a8:	mov	w9, #0x9                   	// #9
  44c6ac:	b	44c79c <_obstack_memory_used@@Base+0x5c4c>
  44c6b0:	mov	w9, #0x402                 	// #1026
  44c6b4:	and	x9, x20, x9
  44c6b8:	cmp	x9, #0x2
  44c6bc:	b.ne	44c7c8 <_obstack_memory_used@@Base+0x5c78>  // b.any
  44c6c0:	mov	w9, #0x12                  	// #18
  44c6c4:	b	44c79c <_obstack_memory_used@@Base+0x5c4c>
  44c6c8:	tbnz	w20, #19, 44c7c8 <_obstack_memory_used@@Base+0x5c78>
  44c6cc:	and	w8, w8, #0xffffff00
  44c6d0:	mov	w9, #0x6                   	// #6
  44c6d4:	b	44c744 <_obstack_memory_used@@Base+0x5bf4>
  44c6d8:	tbnz	w20, #19, 44c7c8 <_obstack_memory_used@@Base+0x5c78>
  44c6dc:	and	w8, w8, #0xffffff00
  44c6e0:	mov	w9, #0x9                   	// #9
  44c6e4:	b	44c744 <_obstack_memory_used@@Base+0x5bf4>
  44c6e8:	mov	w9, #0x402                 	// #1026
  44c6ec:	and	x9, x20, x9
  44c6f0:	cmp	x9, #0x2
  44c6f4:	b.ne	44c7c8 <_obstack_memory_used@@Base+0x5c78>  // b.any
  44c6f8:	mov	w9, #0x13                  	// #19
  44c6fc:	b	44c79c <_obstack_memory_used@@Base+0x5c4c>
  44c700:	tbnz	w20, #19, 44c7c8 <_obstack_memory_used@@Base+0x5c78>
  44c704:	and	w8, w8, #0xffffff00
  44c708:	mov	w9, #0x200                 	// #512
  44c70c:	b	44c744 <_obstack_memory_used@@Base+0x5bf4>
  44c710:	tbnz	w20, #19, 44c7c8 <_obstack_memory_used@@Base+0x5c78>
  44c714:	mov	w9, #0x23                  	// #35
  44c718:	b	44c79c <_obstack_memory_used@@Base+0x5c4c>
  44c71c:	tbnz	w20, #19, 44c7c8 <_obstack_memory_used@@Base+0x5c78>
  44c720:	mov	w9, #0x21                  	// #33
  44c724:	b	44c79c <_obstack_memory_used@@Base+0x5c4c>
  44c728:	tbnz	w20, #19, 44c7c8 <_obstack_memory_used@@Base+0x5c78>
  44c72c:	and	w8, w8, #0xffffff00
  44c730:	mov	w9, #0x40                  	// #64
  44c734:	b	44c744 <_obstack_memory_used@@Base+0x5bf4>
  44c738:	tbnz	w20, #19, 44c7c8 <_obstack_memory_used@@Base+0x5c78>
  44c73c:	and	w8, w8, #0xffffff00
  44c740:	mov	w9, #0x100                 	// #256
  44c744:	orr	w8, w8, #0xc
  44c748:	str	w9, [x19]
  44c74c:	str	w8, [x19, #8]
  44c750:	mov	w0, #0x2                   	// #2
  44c754:	b	44c62c <_obstack_memory_used@@Base+0x5adc>
  44c758:	tbnz	w20, #19, 44c7c8 <_obstack_memory_used@@Base+0x5c78>
  44c75c:	mov	w9, #0x22                  	// #34
  44c760:	b	44c79c <_obstack_memory_used@@Base+0x5c4c>
  44c764:	tbnz	w20, #19, 44c7c8 <_obstack_memory_used@@Base+0x5c78>
  44c768:	and	w8, w8, #0xffffff00
  44c76c:	orr	w8, w8, #0x20
  44c770:	b	44c7a0 <_obstack_memory_used@@Base+0x5c50>
  44c774:	mov	w9, #0x1200                	// #4608
  44c778:	and	x9, x20, x9
  44c77c:	cmp	x9, #0x200
  44c780:	b.ne	44c7c8 <_obstack_memory_used@@Base+0x5c78>  // b.any
  44c784:	mov	w9, #0x17                  	// #23
  44c788:	b	44c79c <_obstack_memory_used@@Base+0x5c4c>
  44c78c:	mov	w9, #0x8400                	// #33792
  44c790:	tst	x20, x9
  44c794:	b.ne	44c7c8 <_obstack_memory_used@@Base+0x5c78>  // b.any
  44c798:	mov	w9, #0xa                   	// #10
  44c79c:	bfxil	w8, w9, #0, #8
  44c7a0:	str	w8, [x23]
  44c7a4:	mov	w0, #0x2                   	// #2
  44c7a8:	b	44c62c <_obstack_memory_used@@Base+0x5adc>
  44c7ac:	mov	w9, #0x1200                	// #4608
  44c7b0:	and	x9, x20, x9
  44c7b4:	cmp	x9, #0x200
  44c7b8:	b.ne	44c7c8 <_obstack_memory_used@@Base+0x5c78>  // b.any
  44c7bc:	and	w8, w8, #0xffffff00
  44c7c0:	orr	w8, w8, #0x18
  44c7c4:	b	44c7a0 <_obstack_memory_used@@Base+0x5c50>
  44c7c8:	mov	w0, #0x2                   	// #2
  44c7cc:	b	44c62c <_obstack_memory_used@@Base+0x5adc>
  44c7d0:	cmp	w11, #0x2
  44c7d4:	b.lt	44c804 <_obstack_memory_used@@Base+0x5cb4>  // b.tstop
  44c7d8:	ldr	x11, [x21, #16]
  44c7dc:	ldr	w13, [x11, x10, lsl #2]
  44c7e0:	cmn	w13, #0x1
  44c7e4:	b.eq	44c358 <_obstack_memory_used@@Base+0x5808>  // b.none
  44c7e8:	ldr	x13, [x21, #48]
  44c7ec:	add	x12, x12, #0x2
  44c7f0:	cmp	x13, x12
  44c7f4:	b.eq	44c804 <_obstack_memory_used@@Base+0x5cb4>  // b.none
  44c7f8:	ldr	w11, [x11, x12, lsl #2]
  44c7fc:	cmn	w11, #0x1
  44c800:	b.eq	44c358 <_obstack_memory_used@@Base+0x5808>  // b.none
  44c804:	ldrb	w11, [x21, #140]
  44c808:	mov	x12, x10
  44c80c:	cbz	w11, 44c818 <_obstack_memory_used@@Base+0x5cc8>
  44c810:	ldr	x12, [x21, #24]
  44c814:	ldr	x12, [x12, x10, lsl #3]
  44c818:	ldr	x13, [x21, #40]
  44c81c:	ldr	x14, [x21]
  44c820:	add	x12, x13, x12
  44c824:	ldrsb	w22, [x14, x12]
  44c828:	cbz	w11, 44c360 <_obstack_memory_used@@Base+0x5810>
  44c82c:	tbnz	w22, #31, 44c358 <_obstack_memory_used@@Base+0x5808>
  44c830:	b	44c360 <_obstack_memory_used@@Base+0x5810>
  44c834:	stp	x29, x30, [sp, #-96]!
  44c838:	stp	x28, x27, [sp, #16]
  44c83c:	stp	x26, x25, [sp, #32]
  44c840:	stp	x24, x23, [sp, #48]
  44c844:	stp	x22, x21, [sp, #64]
  44c848:	stp	x20, x19, [sp, #80]
  44c84c:	ldr	x27, [x1]
  44c850:	mov	x29, sp
  44c854:	mov	x19, x5
  44c858:	mov	x21, x4
  44c85c:	mov	x22, x3
  44c860:	mov	x23, x2
  44c864:	mov	x24, x1
  44c868:	mov	x25, x0
  44c86c:	bl	44cb20 <_obstack_memory_used@@Base+0x5fd0>
  44c870:	mov	x20, x0
  44c874:	cbnz	x0, 44c880 <_obstack_memory_used@@Base+0x5d30>
  44c878:	ldr	w8, [x19]
  44c87c:	cbnz	w8, 44c9dc <_obstack_memory_used@@Base+0x5e8c>
  44c880:	mov	x28, #0xffffffffffffffff    	// #-1
  44c884:	b	44c890 <_obstack_memory_used@@Base+0x5d40>
  44c888:	cmp	x20, #0x0
  44c88c:	csel	x20, x26, x20, eq  // eq = none
  44c890:	ldrb	w8, [x23, #8]
  44c894:	orr	w9, w8, #0x8
  44c898:	cmp	w9, #0xa
  44c89c:	b.eq	44c9e0 <_obstack_memory_used@@Base+0x5e90>  // b.none
  44c8a0:	cbz	x21, 44c8ac <_obstack_memory_used@@Base+0x5d5c>
  44c8a4:	cmp	w8, #0x9
  44c8a8:	b.eq	44c9e0 <_obstack_memory_used@@Base+0x5e90>  // b.none
  44c8ac:	mov	x0, x25
  44c8b0:	mov	x1, x24
  44c8b4:	mov	x2, x23
  44c8b8:	mov	x3, x22
  44c8bc:	mov	x4, x21
  44c8c0:	mov	x5, x19
  44c8c4:	bl	44cb20 <_obstack_memory_used@@Base+0x5fd0>
  44c8c8:	mov	x26, x0
  44c8cc:	cbnz	x0, 44c8d8 <_obstack_memory_used@@Base+0x5d88>
  44c8d0:	ldr	w8, [x19]
  44c8d4:	cbnz	w8, 44c94c <_obstack_memory_used@@Base+0x5dfc>
  44c8d8:	cbz	x20, 44c888 <_obstack_memory_used@@Base+0x5d38>
  44c8dc:	cbz	x26, 44c888 <_obstack_memory_used@@Base+0x5d38>
  44c8e0:	ldr	w8, [x27, #128]
  44c8e4:	cmp	w8, #0xf
  44c8e8:	b.eq	44c928 <_obstack_memory_used@@Base+0x5dd8>  // b.none
  44c8ec:	ldr	x0, [x27, #112]
  44c8f0:	add	w9, w8, #0x1
  44c8f4:	sxtw	x8, w8
  44c8f8:	add	x8, x0, x8, lsl #6
  44c8fc:	str	w9, [x27, #128]
  44c900:	str	xzr, [x8, #8]!
  44c904:	mov	w9, #0x10                  	// #16
  44c908:	stp	x20, x26, [x8, #8]
  44c90c:	str	w9, [x8, #48]
  44c910:	stp	xzr, xzr, [x8, #24]
  44c914:	str	x28, [x8, #56]
  44c918:	str	x8, [x20]
  44c91c:	str	x8, [x26]
  44c920:	mov	x20, x8
  44c924:	b	44c890 <_obstack_memory_used@@Base+0x5d40>
  44c928:	mov	w0, #0x3c8                 	// #968
  44c92c:	bl	404250 <malloc@plt>
  44c930:	cbz	x0, 44ca00 <_obstack_memory_used@@Base+0x5eb0>
  44c934:	ldr	x9, [x27, #112]
  44c938:	mov	w8, wzr
  44c93c:	str	x9, [x0]
  44c940:	str	x0, [x27, #112]
  44c944:	str	wzr, [x27, #128]
  44c948:	b	44c8f0 <_obstack_memory_used@@Base+0x5da0>
  44c94c:	cbz	x20, 44c9e0 <_obstack_memory_used@@Base+0x5e90>
  44c950:	mov	w21, #0xff                  	// #255
  44c954:	movk	w21, #0x4, lsl #16
  44c958:	mov	x22, x20
  44c95c:	ldr	x20, [x20, #8]
  44c960:	cbnz	x20, 44c958 <_obstack_memory_used@@Base+0x5e08>
  44c964:	ldr	x20, [x22, #16]
  44c968:	cbnz	x20, 44c958 <_obstack_memory_used@@Base+0x5e08>
  44c96c:	ldr	w8, [x22, #48]
  44c970:	and	w8, w8, w21
  44c974:	cmp	w8, #0x3
  44c978:	b.eq	44c9ac <_obstack_memory_used@@Base+0x5e5c>  // b.none
  44c97c:	cmp	w8, #0x6
  44c980:	b.ne	44c9b8 <_obstack_memory_used@@Base+0x5e68>  // b.any
  44c984:	ldr	x19, [x22, #40]
  44c988:	ldr	x0, [x19]
  44c98c:	bl	404700 <free@plt>
  44c990:	ldr	x0, [x19, #8]
  44c994:	bl	404700 <free@plt>
  44c998:	ldr	x0, [x19, #16]
  44c99c:	bl	404700 <free@plt>
  44c9a0:	ldr	x0, [x19, #24]
  44c9a4:	bl	404700 <free@plt>
  44c9a8:	b	44c9b0 <_obstack_memory_used@@Base+0x5e60>
  44c9ac:	ldr	x19, [x22, #40]
  44c9b0:	mov	x0, x19
  44c9b4:	bl	404700 <free@plt>
  44c9b8:	ldr	x8, [x22]
  44c9bc:	cbz	x8, 44c9dc <_obstack_memory_used@@Base+0x5e8c>
  44c9c0:	ldr	x20, [x8, #16]
  44c9c4:	cmp	x20, x22
  44c9c8:	mov	x22, x8
  44c9cc:	b.eq	44c96c <_obstack_memory_used@@Base+0x5e1c>  // b.none
  44c9d0:	mov	x22, x8
  44c9d4:	cbz	x20, 44c96c <_obstack_memory_used@@Base+0x5e1c>
  44c9d8:	b	44c958 <_obstack_memory_used@@Base+0x5e08>
  44c9dc:	mov	x20, xzr
  44c9e0:	mov	x0, x20
  44c9e4:	ldp	x20, x19, [sp, #80]
  44c9e8:	ldp	x22, x21, [sp, #64]
  44c9ec:	ldp	x24, x23, [sp, #48]
  44c9f0:	ldp	x26, x25, [sp, #32]
  44c9f4:	ldp	x28, x27, [sp, #16]
  44c9f8:	ldp	x29, x30, [sp], #96
  44c9fc:	ret
  44ca00:	mov	w22, #0xff                  	// #255
  44ca04:	movk	w22, #0x4, lsl #16
  44ca08:	mov	x23, x26
  44ca0c:	ldr	x26, [x26, #8]
  44ca10:	cbnz	x26, 44ca08 <_obstack_memory_used@@Base+0x5eb8>
  44ca14:	ldr	x26, [x23, #16]
  44ca18:	cbnz	x26, 44ca08 <_obstack_memory_used@@Base+0x5eb8>
  44ca1c:	ldr	w8, [x23, #48]
  44ca20:	and	w8, w8, w22
  44ca24:	cmp	w8, #0x3
  44ca28:	b.eq	44ca5c <_obstack_memory_used@@Base+0x5f0c>  // b.none
  44ca2c:	cmp	w8, #0x6
  44ca30:	b.ne	44ca68 <_obstack_memory_used@@Base+0x5f18>  // b.any
  44ca34:	ldr	x21, [x23, #40]
  44ca38:	ldr	x0, [x21]
  44ca3c:	bl	404700 <free@plt>
  44ca40:	ldr	x0, [x21, #8]
  44ca44:	bl	404700 <free@plt>
  44ca48:	ldr	x0, [x21, #16]
  44ca4c:	bl	404700 <free@plt>
  44ca50:	ldr	x0, [x21, #24]
  44ca54:	bl	404700 <free@plt>
  44ca58:	b	44ca60 <_obstack_memory_used@@Base+0x5f10>
  44ca5c:	ldr	x21, [x23, #40]
  44ca60:	mov	x0, x21
  44ca64:	bl	404700 <free@plt>
  44ca68:	ldr	x8, [x23]
  44ca6c:	cbz	x8, 44ca8c <_obstack_memory_used@@Base+0x5f3c>
  44ca70:	ldr	x26, [x8, #16]
  44ca74:	cmp	x26, x23
  44ca78:	mov	x23, x8
  44ca7c:	b.eq	44ca1c <_obstack_memory_used@@Base+0x5ecc>  // b.none
  44ca80:	mov	x23, x8
  44ca84:	cbz	x26, 44ca1c <_obstack_memory_used@@Base+0x5ecc>
  44ca88:	b	44ca08 <_obstack_memory_used@@Base+0x5eb8>
  44ca8c:	mov	x21, x20
  44ca90:	ldr	x20, [x20, #8]
  44ca94:	cbnz	x20, 44ca8c <_obstack_memory_used@@Base+0x5f3c>
  44ca98:	ldr	x20, [x21, #16]
  44ca9c:	cbnz	x20, 44ca8c <_obstack_memory_used@@Base+0x5f3c>
  44caa0:	ldr	w8, [x21, #48]
  44caa4:	and	w8, w8, w22
  44caa8:	cmp	w8, #0x3
  44caac:	b.eq	44cae0 <_obstack_memory_used@@Base+0x5f90>  // b.none
  44cab0:	cmp	w8, #0x6
  44cab4:	b.ne	44caec <_obstack_memory_used@@Base+0x5f9c>  // b.any
  44cab8:	ldr	x20, [x21, #40]
  44cabc:	ldr	x0, [x20]
  44cac0:	bl	404700 <free@plt>
  44cac4:	ldr	x0, [x20, #8]
  44cac8:	bl	404700 <free@plt>
  44cacc:	ldr	x0, [x20, #16]
  44cad0:	bl	404700 <free@plt>
  44cad4:	ldr	x0, [x20, #24]
  44cad8:	bl	404700 <free@plt>
  44cadc:	b	44cae4 <_obstack_memory_used@@Base+0x5f94>
  44cae0:	ldr	x20, [x21, #40]
  44cae4:	mov	x0, x20
  44cae8:	bl	404700 <free@plt>
  44caec:	ldr	x8, [x21]
  44caf0:	cbz	x8, 44cb10 <_obstack_memory_used@@Base+0x5fc0>
  44caf4:	ldr	x20, [x8, #16]
  44caf8:	cmp	x20, x21
  44cafc:	mov	x21, x8
  44cb00:	b.eq	44caa0 <_obstack_memory_used@@Base+0x5f50>  // b.none
  44cb04:	mov	x21, x8
  44cb08:	cbz	x20, 44caa0 <_obstack_memory_used@@Base+0x5f50>
  44cb0c:	b	44ca8c <_obstack_memory_used@@Base+0x5f3c>
  44cb10:	mov	x20, xzr
  44cb14:	mov	w8, #0xc                   	// #12
  44cb18:	str	w8, [x19]
  44cb1c:	b	44c9e0 <_obstack_memory_used@@Base+0x5e90>
  44cb20:	sub	sp, sp, #0x120
  44cb24:	stp	x29, x30, [sp, #192]
  44cb28:	stp	x28, x27, [sp, #208]
  44cb2c:	stp	x26, x25, [sp, #224]
  44cb30:	stp	x24, x23, [sp, #240]
  44cb34:	stp	x22, x21, [sp, #256]
  44cb38:	stp	x20, x19, [sp, #272]
  44cb3c:	ldr	w8, [x2, #8]
  44cb40:	add	x29, sp, #0xc0
  44cb44:	str	xzr, [sp, #48]
  44cb48:	and	w9, w8, #0xff
  44cb4c:	sub	w9, w9, #0x1
  44cb50:	cmp	w9, #0x23
  44cb54:	b.hi	44e9f0 <_obstack_memory_used@@Base+0x7ea0>  // b.pmore
  44cb58:	stp	x0, x3, [sp, #32]
  44cb5c:	ldr	x23, [x1]
  44cb60:	adrp	x10, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44cb64:	add	x10, x10, #0x924
  44cb68:	adr	x11, 44cb8c <_obstack_memory_used@@Base+0x603c>
  44cb6c:	ldrh	w12, [x10, x9, lsl #1]
  44cb70:	add	x11, x11, x12, lsl #2
  44cb74:	mov	x28, x5
  44cb78:	mov	x25, x4
  44cb7c:	mov	x14, x2
  44cb80:	mov	x26, x1
  44cb84:	str	x2, [sp, #56]
  44cb88:	br	x11
  44cb8c:	ldr	x9, [sp, #40]
  44cb90:	tbnz	w9, #5, 44cc90 <_obstack_memory_used@@Base+0x6140>
  44cb94:	tbnz	w9, #4, 44d114 <_obstack_memory_used@@Base+0x65c4>
  44cb98:	ldr	x9, [sp, #40]
  44cb9c:	tbnz	w9, #17, 44cc2c <_obstack_memory_used@@Base+0x60dc>
  44cba0:	and	w9, w8, #0xff
  44cba4:	cmp	w9, #0x9
  44cba8:	b.ne	44cc2c <_obstack_memory_used@@Base+0x60dc>  // b.any
  44cbac:	mov	w8, #0x10                  	// #16
  44cbb0:	b	44e9e8 <_obstack_memory_used@@Base+0x7e98>
  44cbb4:	ldr	x9, [sp, #32]
  44cbb8:	and	w8, w8, #0xff
  44cbbc:	cmp	w8, #0x23
  44cbc0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44cbc4:	ldr	x1, [x9, #120]
  44cbc8:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  44cbcc:	cset	w4, eq  // eq = none
  44cbd0:	add	x2, x2, #0xbd8
  44cbd4:	add	x3, x3, #0x66
  44cbd8:	b	44cc00 <_obstack_memory_used@@Base+0x60b0>
  44cbdc:	ldr	x9, [sp, #32]
  44cbe0:	and	w8, w8, #0xff
  44cbe4:	cmp	w8, #0x21
  44cbe8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44cbec:	ldr	x1, [x9, #120]
  44cbf0:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44cbf4:	cset	w4, eq  // eq = none
  44cbf8:	add	x2, x2, #0xbd0
  44cbfc:	add	x3, x3, #0xbd6
  44cc00:	mov	x0, x23
  44cc04:	mov	x5, x28
  44cc08:	bl	44ebd0 <_obstack_memory_used@@Base+0x8080>
  44cc0c:	str	x0, [sp, #48]
  44cc10:	cbnz	x0, 44cc24 <_obstack_memory_used@@Base+0x60d4>
  44cc14:	ldr	w8, [x28]
  44cc18:	ldr	x14, [sp, #56]
  44cc1c:	cbz	w8, 44d7ec <_obstack_memory_used@@Base+0x6c9c>
  44cc20:	b	44d198 <_obstack_memory_used@@Base+0x6648>
  44cc24:	ldr	x14, [sp, #56]
  44cc28:	b	44d7ec <_obstack_memory_used@@Base+0x6c9c>
  44cc2c:	and	w8, w8, #0xffffff00
  44cc30:	orr	w8, w8, #0x1
  44cc34:	str	w8, [x14, #8]
  44cc38:	ldr	w8, [x23, #128]
  44cc3c:	cmp	w8, #0xf
  44cc40:	b.eq	44e750 <_obstack_memory_used@@Base+0x7c00>  // b.none
  44cc44:	ldr	x0, [x23, #112]
  44cc48:	add	w9, w8, #0x1
  44cc4c:	sxtw	x8, w8
  44cc50:	add	x10, x0, x8, lsl #6
  44cc54:	str	w9, [x23, #128]
  44cc58:	str	xzr, [x10, #8]!
  44cc5c:	stp	xzr, xzr, [x10, #8]
  44cc60:	ldr	q0, [x14]
  44cc64:	mov	x9, #0xffffffffffffffff    	// #-1
  44cc68:	stp	xzr, xzr, [x10, #24]
  44cc6c:	str	x10, [sp, #48]
  44cc70:	stur	q0, [x10, #40]
  44cc74:	ldr	w8, [x10, #48]
  44cc78:	str	x9, [x10, #56]
  44cc7c:	and	w8, w8, #0xfff3ffff
  44cc80:	str	w8, [x10, #48]
  44cc84:	b	44d7ec <_obstack_memory_used@@Base+0x6c9c>
  44cc88:	ldr	x9, [sp, #40]
  44cc8c:	tbz	w9, #24, 44cb8c <_obstack_memory_used@@Base+0x603c>
  44cc90:	mov	w8, #0xd                   	// #13
  44cc94:	b	44e9e8 <_obstack_memory_used@@Base+0x7e98>
  44cc98:	ldr	w8, [x14]
  44cc9c:	ldr	x10, [x23, #168]
  44cca0:	mov	w9, #0x1                   	// #1
  44cca4:	lsl	w8, w9, w8
  44cca8:	sxtw	x9, w8
  44ccac:	tst	x10, x9
  44ccb0:	b.eq	44e780 <_obstack_memory_used@@Base+0x7c30>  // b.none
  44ccb4:	ldr	x10, [x23, #160]
  44ccb8:	ldr	w8, [x23, #128]
  44ccbc:	orr	x9, x10, x9
  44ccc0:	cmp	w8, #0xf
  44ccc4:	str	x9, [x23, #160]
  44ccc8:	b.eq	44e7f0 <_obstack_memory_used@@Base+0x7ca0>  // b.none
  44cccc:	ldr	x0, [x23, #112]
  44ccd0:	add	w9, w8, #0x1
  44ccd4:	sxtw	x8, w8
  44ccd8:	add	x10, x0, x8, lsl #6
  44ccdc:	str	w9, [x23, #128]
  44cce0:	str	xzr, [x10, #8]!
  44cce4:	stp	xzr, xzr, [x10, #8]
  44cce8:	ldr	q0, [x14]
  44ccec:	mov	x8, #0xffffffffffffffff    	// #-1
  44ccf0:	str	x8, [x10, #56]
  44ccf4:	stp	xzr, xzr, [x10, #24]
  44ccf8:	stur	q0, [x10, #40]
  44ccfc:	ldr	w9, [x10, #48]
  44cd00:	str	x10, [sp, #48]
  44cd04:	and	w8, w9, #0xfff3ffff
  44cd08:	str	w8, [x10, #48]
  44cd0c:	ldr	x8, [x23, #152]
  44cd10:	ldrb	w9, [x23, #176]
  44cd14:	add	x8, x8, #0x1
  44cd18:	orr	w9, w9, #0x2
  44cd1c:	str	x8, [x23, #152]
  44cd20:	strb	w9, [x23, #176]
  44cd24:	b	44d7ec <_obstack_memory_used@@Base+0x6c9c>
  44cd28:	ldr	x19, [x26, #48]
  44cd2c:	mov	x0, x14
  44cd30:	add	x8, x19, #0x1
  44cd34:	str	x8, [x26, #48]
  44cd38:	ldp	x20, x21, [sp, #32]
  44cd3c:	orr	x2, x21, #0x800000
  44cd40:	mov	x1, x20
  44cd44:	bl	44c2b0 <_obstack_memory_used@@Base+0x5760>
  44cd48:	ldr	x8, [x20, #72]
  44cd4c:	ldr	x14, [sp, #56]
  44cd50:	add	x8, x8, w0, sxtw
  44cd54:	str	x8, [x20, #72]
  44cd58:	ldrb	w8, [x14, #8]
  44cd5c:	cmp	w8, #0x9
  44cd60:	b.ne	44d170 <_obstack_memory_used@@Base+0x6620>  // b.any
  44cd64:	mov	x25, xzr
  44cd68:	cmp	x19, #0x8
  44cd6c:	b.hi	44cd88 <_obstack_memory_used@@Base+0x6238>  // b.pmore
  44cd70:	ldr	x8, [x23, #168]
  44cd74:	mov	w9, #0x1                   	// #1
  44cd78:	lsl	w9, w9, w19
  44cd7c:	sxtw	x9, w9
  44cd80:	orr	x8, x8, x9
  44cd84:	str	x8, [x23, #168]
  44cd88:	ldr	w8, [x23, #128]
  44cd8c:	cmp	w8, #0xf
  44cd90:	b.eq	44e8e4 <_obstack_memory_used@@Base+0x7d94>  // b.none
  44cd94:	ldr	x0, [x23, #112]
  44cd98:	add	w9, w8, #0x1
  44cd9c:	sxtw	x8, w8
  44cda0:	add	x8, x0, x8, lsl #6
  44cda4:	str	w9, [x23, #128]
  44cda8:	mov	x9, x8
  44cdac:	mov	w10, #0x11                  	// #17
  44cdb0:	mov	x11, #0xffffffffffffffff    	// #-1
  44cdb4:	str	xzr, [x9, #8]!
  44cdb8:	stp	x25, xzr, [x9, #8]
  44cdbc:	str	w10, [x9, #48]
  44cdc0:	stp	xzr, xzr, [x9, #24]
  44cdc4:	str	x11, [x9, #56]
  44cdc8:	cbz	x25, 44cdd0 <_obstack_memory_used@@Base+0x6280>
  44cdcc:	str	x9, [x25]
  44cdd0:	str	x9, [sp, #48]
  44cdd4:	str	x19, [x8, #48]
  44cdd8:	b	44d7ec <_obstack_memory_used@@Base+0x6c9c>
  44cddc:	ldr	w8, [x23, #128]
  44cde0:	cmp	w8, #0xf
  44cde4:	b.eq	44e788 <_obstack_memory_used@@Base+0x7c38>  // b.none
  44cde8:	ldr	x0, [x23, #112]
  44cdec:	ldr	x10, [sp, #32]
  44cdf0:	add	w9, w8, #0x1
  44cdf4:	sxtw	x8, w8
  44cdf8:	add	x19, x0, x8, lsl #6
  44cdfc:	str	w9, [x23, #128]
  44ce00:	str	xzr, [x19, #8]!
  44ce04:	stp	xzr, xzr, [x19, #8]
  44ce08:	ldr	q0, [x14]
  44ce0c:	mov	x9, #0xffffffffffffffff    	// #-1
  44ce10:	stp	xzr, xzr, [x19, #24]
  44ce14:	str	x9, [x19, #56]
  44ce18:	stur	q0, [x19, #40]
  44ce1c:	ldr	w8, [x19, #48]
  44ce20:	and	w8, w8, #0xfff3ffff
  44ce24:	str	w8, [x19, #48]
  44ce28:	ldr	w8, [x23, #180]
  44ce2c:	cmp	w8, #0x2
  44ce30:	b.lt	44d10c <_obstack_memory_used@@Base+0x65bc>  // b.tstop
  44ce34:	ldr	x9, [x10, #104]
  44ce38:	ldr	x8, [x10, #72]
  44ce3c:	cmp	x9, x8
  44ce40:	b.le	44d10c <_obstack_memory_used@@Base+0x65bc>
  44ce44:	mov	w20, #0x10                  	// #16
  44ce48:	mov	x21, #0xffffffffffffffff    	// #-1
  44ce4c:	ldr	x22, [sp, #32]
  44ce50:	ldr	x9, [x22, #48]
  44ce54:	cmp	x8, x9
  44ce58:	b.eq	44d10c <_obstack_memory_used@@Base+0x65bc>  // b.none
  44ce5c:	ldr	x9, [x22, #16]
  44ce60:	ldr	w8, [x9, x8, lsl #2]
  44ce64:	cmn	w8, #0x1
  44ce68:	b.ne	44d10c <_obstack_memory_used@@Base+0x65bc>  // b.any
  44ce6c:	ldr	x2, [sp, #40]
  44ce70:	mov	x0, x14
  44ce74:	mov	x1, x22
  44ce78:	bl	44c2b0 <_obstack_memory_used@@Base+0x5760>
  44ce7c:	ldr	x8, [x22, #72]
  44ce80:	add	x8, x8, w0, sxtw
  44ce84:	str	x8, [x22, #72]
  44ce88:	ldr	w8, [x23, #128]
  44ce8c:	cmp	w8, #0xf
  44ce90:	b.eq	44cf30 <_obstack_memory_used@@Base+0x63e0>  // b.none
  44ce94:	ldr	x0, [x23, #112]
  44ce98:	add	w9, w8, #0x1
  44ce9c:	sxtw	x8, w8
  44cea0:	add	x22, x0, x8, lsl #6
  44cea4:	str	w9, [x23, #128]
  44cea8:	str	xzr, [x22, #8]!
  44ceac:	stp	xzr, xzr, [x22, #8]
  44ceb0:	ldr	x14, [sp, #56]
  44ceb4:	ldr	q0, [x14]
  44ceb8:	stp	xzr, xzr, [x22, #24]
  44cebc:	str	x21, [x22, #56]
  44cec0:	stur	q0, [x22, #40]
  44cec4:	ldr	w8, [x22, #48]
  44cec8:	and	w8, w8, #0xfff3ffff
  44cecc:	str	w8, [x22, #48]
  44ced0:	ldr	w8, [x23, #128]
  44ced4:	cmp	w8, #0xf
  44ced8:	b.eq	44cf54 <_obstack_memory_used@@Base+0x6404>  // b.none
  44cedc:	ldr	x0, [x23, #112]
  44cee0:	add	w9, w8, #0x1
  44cee4:	sxtw	x8, w8
  44cee8:	str	w9, [x23, #128]
  44ceec:	add	x9, x0, x8, lsl #6
  44cef0:	str	xzr, [x9, #8]!
  44cef4:	stp	x19, x22, [x9, #8]
  44cef8:	str	w20, [x9, #48]
  44cefc:	stp	xzr, xzr, [x9, #24]
  44cf00:	str	x21, [x9, #56]
  44cf04:	str	x9, [x19]
  44cf08:	cbz	x22, 44e9e4 <_obstack_memory_used@@Base+0x7e94>
  44cf0c:	ldr	x8, [sp, #32]
  44cf10:	str	x9, [x22]
  44cf14:	mov	x19, x9
  44cf18:	str	x19, [sp, #48]
  44cf1c:	ldr	x9, [x8, #104]
  44cf20:	ldr	x8, [x8, #72]
  44cf24:	cmp	x9, x8
  44cf28:	b.gt	44ce4c <_obstack_memory_used@@Base+0x62fc>
  44cf2c:	b	44d7ec <_obstack_memory_used@@Base+0x6c9c>
  44cf30:	mov	w0, #0x3c8                 	// #968
  44cf34:	bl	404250 <malloc@plt>
  44cf38:	cbz	x0, 44cf7c <_obstack_memory_used@@Base+0x642c>
  44cf3c:	ldr	x9, [x23, #112]
  44cf40:	mov	w8, wzr
  44cf44:	str	x9, [x0]
  44cf48:	str	x0, [x23, #112]
  44cf4c:	str	wzr, [x23, #128]
  44cf50:	b	44ce98 <_obstack_memory_used@@Base+0x6348>
  44cf54:	mov	w0, #0x3c8                 	// #968
  44cf58:	bl	404250 <malloc@plt>
  44cf5c:	ldr	x14, [sp, #56]
  44cf60:	cbz	x0, 44e9e4 <_obstack_memory_used@@Base+0x7e94>
  44cf64:	ldr	x9, [x23, #112]
  44cf68:	mov	w8, wzr
  44cf6c:	str	x9, [x0]
  44cf70:	str	x0, [x23, #112]
  44cf74:	str	wzr, [x23, #128]
  44cf78:	b	44cee0 <_obstack_memory_used@@Base+0x6390>
  44cf7c:	ldr	x14, [sp, #56]
  44cf80:	mov	x22, xzr
  44cf84:	b	44ced0 <_obstack_memory_used@@Base+0x6380>
  44cf88:	ldr	w8, [x23, #128]
  44cf8c:	cmp	w8, #0xf
  44cf90:	b.eq	44e7b4 <_obstack_memory_used@@Base+0x7c64>  // b.none
  44cf94:	ldr	x0, [x23, #112]
  44cf98:	add	w9, w8, #0x1
  44cf9c:	sxtw	x8, w8
  44cfa0:	add	x10, x0, x8, lsl #6
  44cfa4:	str	w9, [x23, #128]
  44cfa8:	str	xzr, [x10, #8]!
  44cfac:	stp	xzr, xzr, [x10, #8]
  44cfb0:	ldr	q0, [x14]
  44cfb4:	mov	x9, #0xffffffffffffffff    	// #-1
  44cfb8:	stp	xzr, xzr, [x10, #24]
  44cfbc:	str	x9, [x10, #56]
  44cfc0:	stur	q0, [x10, #40]
  44cfc4:	ldr	w8, [x10, #48]
  44cfc8:	str	x10, [sp, #48]
  44cfcc:	and	w8, w8, #0xfff3ffff
  44cfd0:	str	w8, [x10, #48]
  44cfd4:	ldr	w8, [x23, #180]
  44cfd8:	cmp	w8, #0x2
  44cfdc:	b.lt	44d7ec <_obstack_memory_used@@Base+0x6c9c>  // b.tstop
  44cfe0:	ldrb	w8, [x23, #176]
  44cfe4:	orr	w8, w8, #0x2
  44cfe8:	strb	w8, [x23, #176]
  44cfec:	b	44d7ec <_obstack_memory_used@@Base+0x6c9c>
  44cff0:	ldr	w8, [x14]
  44cff4:	mov	w9, #0x30f                 	// #783
  44cff8:	tst	w8, w9
  44cffc:	b.eq	44d02c <_obstack_memory_used@@Base+0x64dc>  // b.none
  44d000:	ldrb	w8, [x23, #176]
  44d004:	tbnz	w8, #4, 44d028 <_obstack_memory_used@@Base+0x64d8>
  44d008:	orr	w9, w8, #0x10
  44d00c:	strb	w9, [x23, #176]
  44d010:	tbnz	w8, #3, 44ea14 <_obstack_memory_used@@Base+0x7ec4>
  44d014:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44d018:	ldr	q0, [x9, #2096]
  44d01c:	stur	q0, [x23, #184]
  44d020:	tbz	w8, #2, 44ea20 <_obstack_memory_used@@Base+0x7ed0>
  44d024:	stp	xzr, xzr, [x23, #200]
  44d028:	ldr	w8, [x14]
  44d02c:	cmp	w8, #0x200
  44d030:	b.eq	44e47c <_obstack_memory_used@@Base+0x792c>  // b.none
  44d034:	ldr	x21, [sp, #40]
  44d038:	cmp	w8, #0x100
  44d03c:	b.ne	44e574 <_obstack_memory_used@@Base+0x7a24>  // b.any
  44d040:	mov	w8, #0x6                   	// #6
  44d044:	str	w8, [x14]
  44d048:	ldr	w8, [x23, #128]
  44d04c:	cmp	w8, #0xf
  44d050:	b.eq	44e960 <_obstack_memory_used@@Base+0x7e10>  // b.none
  44d054:	ldr	x0, [x23, #112]
  44d058:	add	w9, w8, #0x1
  44d05c:	sxtw	x8, w8
  44d060:	add	x19, x0, x8, lsl #6
  44d064:	str	w9, [x23, #128]
  44d068:	str	xzr, [x19, #8]!
  44d06c:	stp	xzr, xzr, [x19, #8]
  44d070:	ldr	q0, [x14]
  44d074:	mov	x8, #0xffffffffffffffff    	// #-1
  44d078:	str	x8, [x19, #56]
  44d07c:	stp	xzr, xzr, [x19, #24]
  44d080:	stur	q0, [x19, #40]
  44d084:	ldr	w9, [x19, #48]
  44d088:	and	w8, w9, #0xfff3ffff
  44d08c:	str	w8, [x19, #48]
  44d090:	mov	w8, #0x9                   	// #9
  44d094:	b	44e4d4 <_obstack_memory_used@@Base+0x7984>
  44d098:	mov	w8, #0x5                   	// #5
  44d09c:	b	44e9e8 <_obstack_memory_used@@Base+0x7e98>
  44d0a0:	mov	w0, #0x20                  	// #32
  44d0a4:	mov	w1, #0x1                   	// #1
  44d0a8:	stur	xzr, [x29, #-16]
  44d0ac:	bl	404410 <calloc@plt>
  44d0b0:	mov	x25, x0
  44d0b4:	mov	w0, #0x50                  	// #80
  44d0b8:	mov	w1, #0x1                   	// #1
  44d0bc:	bl	404410 <calloc@plt>
  44d0c0:	mov	x24, x0
  44d0c4:	cbz	x25, 44e7dc <_obstack_memory_used@@Base+0x7c8c>
  44d0c8:	cbz	x24, 44e7dc <_obstack_memory_used@@Base+0x7c8c>
  44d0cc:	ldr	x21, [sp, #56]
  44d0d0:	ldp	x19, x20, [sp, #32]
  44d0d4:	mov	x0, x21
  44d0d8:	mov	x1, x19
  44d0dc:	mov	x2, x20
  44d0e0:	bl	44ef0c <_obstack_memory_used@@Base+0x83bc>
  44d0e4:	ldr	w8, [x21, #8]
  44d0e8:	mov	x2, x21
  44d0ec:	mov	w3, w0
  44d0f0:	and	w9, w8, #0xff
  44d0f4:	cmp	w9, #0x19
  44d0f8:	b.eq	44d1a0 <_obstack_memory_used@@Base+0x6650>  // b.none
  44d0fc:	cmp	w9, #0x2
  44d100:	b.eq	44e778 <_obstack_memory_used@@Base+0x7c28>  // b.none
  44d104:	str	wzr, [sp, #48]
  44d108:	b	44d1f8 <_obstack_memory_used@@Base+0x66a8>
  44d10c:	str	x19, [sp, #48]
  44d110:	b	44d7ec <_obstack_memory_used@@Base+0x6c9c>
  44d114:	ldp	x19, x20, [sp, #32]
  44d118:	mov	x0, x14
  44d11c:	mov	x21, x14
  44d120:	mov	x1, x19
  44d124:	mov	x2, x20
  44d128:	bl	44c2b0 <_obstack_memory_used@@Base+0x5760>
  44d12c:	ldr	x8, [x19, #72]
  44d130:	mov	x1, x26
  44d134:	mov	x2, x21
  44d138:	mov	x3, x20
  44d13c:	add	x8, x8, w0, sxtw
  44d140:	str	x8, [x19, #72]
  44d144:	mov	x0, x19
  44d148:	mov	x4, x25
  44d14c:	mov	x5, x28
  44d150:	ldp	x20, x19, [sp, #272]
  44d154:	ldp	x22, x21, [sp, #256]
  44d158:	ldp	x24, x23, [sp, #240]
  44d15c:	ldp	x26, x25, [sp, #224]
  44d160:	ldp	x28, x27, [sp, #208]
  44d164:	ldp	x29, x30, [sp, #192]
  44d168:	add	sp, sp, #0x120
  44d16c:	b	44cb20 <_obstack_memory_used@@Base+0x5fd0>
  44d170:	add	x4, x25, #0x1
  44d174:	mov	x0, x20
  44d178:	mov	x1, x26
  44d17c:	mov	x2, x14
  44d180:	mov	x3, x21
  44d184:	mov	x5, x28
  44d188:	mov	x20, x14
  44d18c:	bl	44c068 <_obstack_memory_used@@Base+0x5518>
  44d190:	ldr	w8, [x28]
  44d194:	cbz	w8, 44e5e8 <_obstack_memory_used@@Base+0x7a98>
  44d198:	str	xzr, [sp, #48]
  44d19c:	b	44e9f0 <_obstack_memory_used@@Base+0x7ea0>
  44d1a0:	ldrb	w8, [x24, #32]
  44d1a4:	orr	w8, w8, #0x1
  44d1a8:	strb	w8, [x24, #32]
  44d1ac:	tbz	w20, #8, 44d1bc <_obstack_memory_used@@Base+0x666c>
  44d1b0:	ldr	x8, [x25]
  44d1b4:	orr	x8, x8, #0x400
  44d1b8:	str	x8, [x25]
  44d1bc:	ldr	x8, [x19, #72]
  44d1c0:	mov	x0, x2
  44d1c4:	mov	x1, x19
  44d1c8:	mov	x2, x20
  44d1cc:	add	x8, x8, w3, sxtw
  44d1d0:	str	x8, [x19, #72]
  44d1d4:	bl	44ef0c <_obstack_memory_used@@Base+0x83bc>
  44d1d8:	ldr	x2, [sp, #56]
  44d1dc:	ldr	w8, [x2, #8]
  44d1e0:	and	w9, w8, #0xff
  44d1e4:	cmp	w9, #0x2
  44d1e8:	b.eq	44e778 <_obstack_memory_used@@Base+0x7c28>  // b.none
  44d1ec:	mov	w3, w0
  44d1f0:	mov	w9, #0x1                   	// #1
  44d1f4:	str	w9, [sp, #48]
  44d1f8:	and	w9, w8, #0xff
  44d1fc:	cmp	w9, #0x15
  44d200:	b.ne	44d210 <_obstack_memory_used@@Base+0x66c0>  // b.any
  44d204:	and	w8, w8, #0xffffff00
  44d208:	orr	w8, w8, #0x1
  44d20c:	str	w8, [x2, #8]
  44d210:	ldr	x4, [sp, #40]
  44d214:	sub	x8, x29, #0x50
  44d218:	mov	w27, #0x3                   	// #3
  44d21c:	sub	x0, x29, #0x20
  44d220:	mov	w5, #0x1                   	// #1
  44d224:	mov	x1, x19
  44d228:	stur	x8, [x29, #-24]
  44d22c:	stur	w27, [x29, #-32]
  44d230:	mov	w21, #0x1                   	// #1
  44d234:	bl	44f06c <_obstack_memory_used@@Base+0x851c>
  44d238:	cbnz	w0, 44e748 <_obstack_memory_used@@Base+0x7bf8>
  44d23c:	ldr	x20, [sp, #40]
  44d240:	ldr	x22, [sp, #56]
  44d244:	stp	xzr, xzr, [sp, #8]
  44d248:	mov	x0, x22
  44d24c:	mov	x1, x19
  44d250:	mov	x2, x20
  44d254:	bl	44ef0c <_obstack_memory_used@@Base+0x83bc>
  44d258:	ldur	w22, [x29, #-32]
  44d25c:	mov	w26, w0
  44d260:	cmp	w22, #0x2
  44d264:	b.eq	44d3e0 <_obstack_memory_used@@Base+0x6890>  // b.none
  44d268:	cmp	w22, #0x4
  44d26c:	b.ne	44d29c <_obstack_memory_used@@Base+0x674c>  // b.any
  44d270:	ldr	x0, [x19, #120]
  44d274:	ldur	x4, [x29, #-24]
  44d278:	ldr	x5, [sp, #40]
  44d27c:	sub	x3, x29, #0x10
  44d280:	mov	x1, x25
  44d284:	mov	x2, x24
  44d288:	bl	44f310 <_obstack_memory_used@@Base+0x87c0>
  44d28c:	ldr	x14, [sp, #56]
  44d290:	str	w0, [x28]
  44d294:	cbz	w0, 44d41c <_obstack_memory_used@@Base+0x68cc>
  44d298:	b	44e8a0 <_obstack_memory_used@@Base+0x7d50>
  44d29c:	ldr	x8, [sp, #56]
  44d2a0:	ldrb	w8, [x8, #8]
  44d2a4:	cmp	w8, #0x16
  44d2a8:	b.eq	44d2b8 <_obstack_memory_used@@Base+0x6768>  // b.none
  44d2ac:	cmp	w8, #0x2
  44d2b0:	b.ne	44d3bc <_obstack_memory_used@@Base+0x686c>  // b.any
  44d2b4:	b	44e73c <_obstack_memory_used@@Base+0x7bec>
  44d2b8:	ldr	x8, [x19, #72]
  44d2bc:	ldr	x2, [sp, #40]
  44d2c0:	add	x0, sp, #0x40
  44d2c4:	mov	x1, x19
  44d2c8:	add	x8, x8, w26, sxtw
  44d2cc:	str	x8, [x19, #72]
  44d2d0:	bl	44ef0c <_obstack_memory_used@@Base+0x83bc>
  44d2d4:	ldrb	w8, [sp, #72]
  44d2d8:	cmp	w8, #0x15
  44d2dc:	b.eq	44d3a4 <_obstack_memory_used@@Base+0x6854>  // b.none
  44d2e0:	cmp	w8, #0x2
  44d2e4:	str	x28, [sp, #24]
  44d2e8:	b.eq	44e740 <_obstack_memory_used@@Base+0x7bf0>  // b.none
  44d2ec:	ldr	x20, [sp, #40]
  44d2f0:	mov	w3, w0
  44d2f4:	add	x8, sp, #0x50
  44d2f8:	sub	x0, x29, #0x30
  44d2fc:	add	x2, sp, #0x40
  44d300:	mov	w5, #0x1                   	// #1
  44d304:	mov	x1, x19
  44d308:	mov	x4, x20
  44d30c:	stur	x8, [x29, #-40]
  44d310:	stur	w27, [x29, #-48]
  44d314:	bl	44f06c <_obstack_memory_used@@Base+0x851c>
  44d318:	cbnz	w0, 44e898 <_obstack_memory_used@@Base+0x7d48>
  44d31c:	ldr	x0, [sp, #56]
  44d320:	mov	x1, x19
  44d324:	mov	x2, x20
  44d328:	bl	44ef0c <_obstack_memory_used@@Base+0x83bc>
  44d32c:	ldr	w8, [x23, #180]
  44d330:	ldur	w19, [x29, #-48]
  44d334:	mov	w26, w0
  44d338:	mov	w0, #0xb                   	// #11
  44d33c:	cmp	w8, #0x1
  44d340:	csel	x20, x24, xzr, gt
  44d344:	cmp	w19, #0x2
  44d348:	b.eq	44e898 <_obstack_memory_used@@Base+0x7d48>  // b.none
  44d34c:	ldr	x14, [sp, #56]
  44d350:	cmp	w19, #0x4
  44d354:	b.eq	44e898 <_obstack_memory_used@@Base+0x7d48>  // b.none
  44d358:	cmp	w22, #0x3
  44d35c:	b.ne	44d374 <_obstack_memory_used@@Base+0x6824>  // b.any
  44d360:	ldur	x0, [x29, #-24]
  44d364:	bl	403f40 <strlen@plt>
  44d368:	ldr	x14, [sp, #56]
  44d36c:	cmp	x0, #0x1
  44d370:	b.hi	44e894 <_obstack_memory_used@@Base+0x7d44>  // b.pmore
  44d374:	cmp	w19, #0x3
  44d378:	b.ne	44d390 <_obstack_memory_used@@Base+0x6840>  // b.any
  44d37c:	ldur	x0, [x29, #-40]
  44d380:	bl	403f40 <strlen@plt>
  44d384:	ldr	x14, [sp, #56]
  44d388:	cmp	x0, #0x1
  44d38c:	b.hi	44e894 <_obstack_memory_used@@Base+0x7d44>  // b.pmore
  44d390:	cmp	w22, #0x3
  44d394:	b.eq	44d4b8 <_obstack_memory_used@@Base+0x6968>  // b.none
  44d398:	cbnz	w22, 44d4c4 <_obstack_memory_used@@Base+0x6974>
  44d39c:	ldurb	w27, [x29, #-24]
  44d3a0:	b	44d4c8 <_obstack_memory_used@@Base+0x6978>
  44d3a4:	ldr	x8, [x19, #72]
  44d3a8:	neg	w9, w26
  44d3ac:	add	x8, x8, w9, sxtw
  44d3b0:	str	x8, [x19, #72]
  44d3b4:	ldr	x8, [sp, #56]
  44d3b8:	strb	w21, [x8, #8]
  44d3bc:	cmp	w22, #0x3
  44d3c0:	b.hi	44ebb0 <_obstack_memory_used@@Base+0x8060>  // b.pmore
  44d3c4:	adrp	x11, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44d3c8:	mov	w8, w22
  44d3cc:	add	x11, x11, #0x96c
  44d3d0:	adr	x9, 44d3e0 <_obstack_memory_used@@Base+0x6890>
  44d3d4:	ldrb	w10, [x11, x8]
  44d3d8:	add	x9, x9, x10, lsl #2
  44d3dc:	br	x9
  44d3e0:	ldur	x27, [x29, #-24]
  44d3e4:	mov	x0, x27
  44d3e8:	bl	403f40 <strlen@plt>
  44d3ec:	cmp	x0, #0x1
  44d3f0:	b.ne	44e890 <_obstack_memory_used@@Base+0x7d40>  // b.any
  44d3f4:	ldrb	w8, [x27]
  44d3f8:	mov	w27, #0x3                   	// #3
  44d3fc:	lsr	x9, x8, #3
  44d400:	and	x9, x9, #0x18
  44d404:	ldr	x10, [x25, x9]
  44d408:	lsl	x8, x21, x8
  44d40c:	orr	x8, x8, x10
  44d410:	str	x8, [x25, x9]
  44d414:	ldr	x14, [sp, #56]
  44d418:	str	wzr, [x28]
  44d41c:	ldrb	w8, [x14, #8]
  44d420:	cmp	w8, #0x15
  44d424:	b.eq	44d66c <_obstack_memory_used@@Base+0x6b1c>  // b.none
  44d428:	cmp	w8, #0x2
  44d42c:	b.eq	44e73c <_obstack_memory_used@@Base+0x7bec>  // b.none
  44d430:	ldr	x20, [sp, #40]
  44d434:	sub	x8, x29, #0x50
  44d438:	sub	x0, x29, #0x20
  44d43c:	mov	x1, x19
  44d440:	mov	x2, x14
  44d444:	mov	w3, w26
  44d448:	mov	x4, x20
  44d44c:	mov	w5, wzr
  44d450:	stur	x8, [x29, #-24]
  44d454:	stur	w27, [x29, #-32]
  44d458:	mov	x22, x14
  44d45c:	bl	44f06c <_obstack_memory_used@@Base+0x851c>
  44d460:	cbz	w0, 44d248 <_obstack_memory_used@@Base+0x66f8>
  44d464:	b	44e748 <_obstack_memory_used@@Base+0x7bf8>
  44d468:	ldurb	w8, [x29, #-24]
  44d46c:	ldr	x14, [sp, #56]
  44d470:	lsr	x9, x8, #3
  44d474:	and	x9, x9, #0x18
  44d478:	ldr	x10, [x25, x9]
  44d47c:	lsl	x8, x21, x8
  44d480:	orr	x8, x8, x10
  44d484:	str	x8, [x25, x9]
  44d488:	b	44d41c <_obstack_memory_used@@Base+0x68cc>
  44d48c:	ldr	x8, [x24, #40]
  44d490:	ldr	x9, [sp, #16]
  44d494:	cmp	x9, x8
  44d498:	b.eq	44d5dc <_obstack_memory_used@@Base+0x6a8c>  // b.none
  44d49c:	ldr	x0, [x24]
  44d4a0:	ldr	x14, [sp, #56]
  44d4a4:	ldur	w9, [x29, #-24]
  44d4a8:	add	x10, x8, #0x1
  44d4ac:	str	x10, [x24, #40]
  44d4b0:	str	w9, [x0, x8, lsl #2]
  44d4b4:	b	44d41c <_obstack_memory_used@@Base+0x68cc>
  44d4b8:	ldur	x8, [x29, #-24]
  44d4bc:	ldrb	w27, [x8]
  44d4c0:	b	44d4c8 <_obstack_memory_used@@Base+0x6978>
  44d4c4:	mov	w27, wzr
  44d4c8:	cmp	w19, #0x3
  44d4cc:	b.eq	44d4dc <_obstack_memory_used@@Base+0x698c>  // b.none
  44d4d0:	cbnz	w19, 44d4e8 <_obstack_memory_used@@Base+0x6998>
  44d4d4:	ldurb	w28, [x29, #-40]
  44d4d8:	b	44d4ec <_obstack_memory_used@@Base+0x699c>
  44d4dc:	ldur	x8, [x29, #-40]
  44d4e0:	ldrb	w28, [x8]
  44d4e4:	b	44d4ec <_obstack_memory_used@@Base+0x699c>
  44d4e8:	mov	w28, wzr
  44d4ec:	cmp	w22, #0x3
  44d4f0:	b.eq	44d4f8 <_obstack_memory_used@@Base+0x69a8>  // b.none
  44d4f4:	cbnz	w22, 44d510 <_obstack_memory_used@@Base+0x69c0>
  44d4f8:	cbz	x20, 44d514 <_obstack_memory_used@@Base+0x69c4>
  44d4fc:	mov	w0, w27
  44d500:	bl	404590 <btowc@plt>
  44d504:	ldr	x14, [sp, #56]
  44d508:	mov	w27, w0
  44d50c:	b	44d514 <_obstack_memory_used@@Base+0x69c4>
  44d510:	ldur	w27, [x29, #-24]
  44d514:	cmp	w19, #0x3
  44d518:	b.eq	44d520 <_obstack_memory_used@@Base+0x69d0>  // b.none
  44d51c:	cbnz	w19, 44d538 <_obstack_memory_used@@Base+0x69e8>
  44d520:	cbz	x20, 44d53c <_obstack_memory_used@@Base+0x69ec>
  44d524:	mov	w0, w28
  44d528:	bl	404590 <btowc@plt>
  44d52c:	ldr	x14, [sp, #56]
  44d530:	mov	w28, w0
  44d534:	b	44d53c <_obstack_memory_used@@Base+0x69ec>
  44d538:	ldur	w28, [x29, #-40]
  44d53c:	cmn	w27, #0x1
  44d540:	mov	w0, #0x3                   	// #3
  44d544:	b.eq	44e898 <_obstack_memory_used@@Base+0x7d48>  // b.none
  44d548:	cmn	w28, #0x1
  44d54c:	b.eq	44e898 <_obstack_memory_used@@Base+0x7d48>  // b.none
  44d550:	ldr	x8, [sp, #40]
  44d554:	tbz	w8, #16, 44d560 <_obstack_memory_used@@Base+0x6a10>
  44d558:	cmp	w27, w28
  44d55c:	b.hi	44eb40 <_obstack_memory_used@@Base+0x7ff0>  // b.pmore
  44d560:	cbz	x20, 44d58c <_obstack_memory_used@@Base+0x6a3c>
  44d564:	ldr	x8, [x20, #64]
  44d568:	ldr	x9, [sp, #8]
  44d56c:	cmp	x9, x8
  44d570:	b.eq	44d614 <_obstack_memory_used@@Base+0x6ac4>  // b.none
  44d574:	ldp	x22, x10, [x20, #8]
  44d578:	lsl	x9, x8, #2
  44d57c:	add	x8, x8, #0x1
  44d580:	str	w27, [x22, x9]
  44d584:	str	x8, [x20, #64]
  44d588:	str	w28, [x10, x9]
  44d58c:	mov	w9, w28
  44d590:	ldp	x28, x19, [sp, #24]
  44d594:	mov	x8, xzr
  44d598:	mov	w10, w27
  44d59c:	mov	w27, #0x3                   	// #3
  44d5a0:	b	44d5b0 <_obstack_memory_used@@Base+0x6a60>
  44d5a4:	add	x8, x8, #0x1
  44d5a8:	cmp	x8, #0x100
  44d5ac:	b.eq	44d418 <_obstack_memory_used@@Base+0x68c8>  // b.none
  44d5b0:	cmp	x8, x10
  44d5b4:	b.cc	44d5a4 <_obstack_memory_used@@Base+0x6a54>  // b.lo, b.ul, b.last
  44d5b8:	cmp	x8, x9
  44d5bc:	b.hi	44d5a4 <_obstack_memory_used@@Base+0x6a54>  // b.pmore
  44d5c0:	lsr	x11, x8, #3
  44d5c4:	and	x11, x11, #0x1ffffffffffffff8
  44d5c8:	ldr	x12, [x25, x11]
  44d5cc:	lsl	x13, x21, x8
  44d5d0:	orr	x12, x12, x13
  44d5d4:	str	x12, [x25, x11]
  44d5d8:	b	44d5a4 <_obstack_memory_used@@Base+0x6a54>
  44d5dc:	ldr	x8, [sp, #16]
  44d5e0:	ldr	x0, [x24]
  44d5e4:	mov	w19, #0x1                   	// #1
  44d5e8:	bfi	x19, x8, #1, #63
  44d5ec:	lsl	x1, x19, #2
  44d5f0:	bl	404490 <realloc@plt>
  44d5f4:	cbz	x0, 44eb8c <_obstack_memory_used@@Base+0x803c>
  44d5f8:	ldr	x8, [x24, #40]
  44d5fc:	str	x19, [sp, #16]
  44d600:	ldr	x19, [sp, #32]
  44d604:	ldr	x14, [sp, #56]
  44d608:	mov	w27, #0x3                   	// #3
  44d60c:	str	x0, [x24]
  44d610:	b	44d4a4 <_obstack_memory_used@@Base+0x6954>
  44d614:	ldr	x8, [sp, #8]
  44d618:	ldr	x0, [x20, #8]
  44d61c:	mov	w19, #0x1                   	// #1
  44d620:	bfi	x19, x8, #1, #63
  44d624:	lsl	x1, x19, #2
  44d628:	str	x1, [sp, #8]
  44d62c:	bl	404490 <realloc@plt>
  44d630:	ldr	x8, [x20, #16]
  44d634:	ldr	x1, [sp, #8]
  44d638:	mov	x22, x0
  44d63c:	mov	x0, x8
  44d640:	bl	404490 <realloc@plt>
  44d644:	str	x0, [sp]
  44d648:	cbz	x22, 44eb98 <_obstack_memory_used@@Base+0x8048>
  44d64c:	ldr	x8, [sp]
  44d650:	cbz	x8, 44eb98 <_obstack_memory_used@@Base+0x8048>
  44d654:	ldr	x10, [sp]
  44d658:	ldr	x8, [x20, #64]
  44d65c:	stp	x22, x10, [x20, #8]
  44d660:	ldr	x14, [sp, #56]
  44d664:	str	x19, [sp, #8]
  44d668:	b	44d578 <_obstack_memory_used@@Base+0x6a28>
  44d66c:	ldr	x8, [x19, #72]
  44d670:	add	x8, x8, w26, sxtw
  44d674:	str	x8, [x19, #72]
  44d678:	ldr	w8, [sp, #48]
  44d67c:	cbz	w8, 44d690 <_obstack_memory_used@@Base+0x6b40>
  44d680:	ldp	q0, q1, [x25]
  44d684:	mvn	v0.16b, v0.16b
  44d688:	mvn	v1.16b, v1.16b
  44d68c:	stp	q0, q1, [x25]
  44d690:	ldr	w8, [x23, #180]
  44d694:	cmp	w8, #0x2
  44d698:	b.lt	44d6d8 <_obstack_memory_used@@Base+0x6b88>  // b.tstop
  44d69c:	ldr	x9, [x23, #120]
  44d6a0:	ldp	x11, x12, [x25]
  44d6a4:	ldr	x10, [x9]
  44d6a8:	and	x10, x11, x10
  44d6ac:	str	x10, [x25]
  44d6b0:	ldr	x10, [x9, #8]
  44d6b4:	and	x10, x12, x10
  44d6b8:	str	x10, [x25, #8]
  44d6bc:	ldr	x10, [x9, #16]
  44d6c0:	ldp	x11, x12, [x25, #16]
  44d6c4:	and	x10, x11, x10
  44d6c8:	str	x10, [x25, #16]
  44d6cc:	ldr	x9, [x9, #24]
  44d6d0:	and	x9, x12, x9
  44d6d4:	str	x9, [x25, #24]
  44d6d8:	ldr	x9, [x24, #40]
  44d6dc:	cbnz	x9, 44d6f8 <_obstack_memory_used@@Base+0x6ba8>
  44d6e0:	ldr	x9, [x24, #48]
  44d6e4:	cbnz	x9, 44d6f8 <_obstack_memory_used@@Base+0x6ba8>
  44d6e8:	ldr	x9, [x24, #56]
  44d6ec:	cbnz	x9, 44d6f8 <_obstack_memory_used@@Base+0x6ba8>
  44d6f0:	ldr	x9, [x24, #64]
  44d6f4:	cbz	x9, 44e69c <_obstack_memory_used@@Base+0x7b4c>
  44d6f8:	ldrb	w9, [x23, #176]
  44d6fc:	ldr	w8, [x23, #128]
  44d700:	orr	w9, w9, #0x2
  44d704:	cmp	w8, #0xf
  44d708:	strb	w9, [x23, #176]
  44d70c:	b.eq	44e818 <_obstack_memory_used@@Base+0x7cc8>  // b.none
  44d710:	ldr	x0, [x23, #112]
  44d714:	add	w9, w8, #0x1
  44d718:	sxtw	x8, w8
  44d71c:	add	x19, x0, x8, lsl #6
  44d720:	mov	w10, #0x6                   	// #6
  44d724:	mov	x11, #0xffffffffffffffff    	// #-1
  44d728:	str	w9, [x23, #128]
  44d72c:	str	xzr, [x19, #8]!
  44d730:	stp	xzr, xzr, [x19, #16]
  44d734:	str	xzr, [x19, #8]
  44d738:	str	w10, [x19, #48]
  44d73c:	stp	xzr, x24, [x19, #32]
  44d740:	str	x11, [x19, #56]
  44d744:	ldr	x8, [x25]
  44d748:	cbnz	x8, 44d764 <_obstack_memory_used@@Base+0x6c14>
  44d74c:	ldr	x8, [x25, #8]
  44d750:	cbnz	x8, 44d764 <_obstack_memory_used@@Base+0x6c14>
  44d754:	ldr	x8, [x25, #16]
  44d758:	cbnz	x8, 44d764 <_obstack_memory_used@@Base+0x6c14>
  44d75c:	ldr	x8, [x25, #24]
  44d760:	cbz	x8, 44e728 <_obstack_memory_used@@Base+0x7bd8>
  44d764:	ldr	w8, [x23, #128]
  44d768:	cmp	w8, #0xf
  44d76c:	b.eq	44e840 <_obstack_memory_used@@Base+0x7cf0>  // b.none
  44d770:	ldr	x0, [x23, #112]
  44d774:	add	w9, w8, #0x1
  44d778:	sxtw	x8, w8
  44d77c:	add	x20, x0, x8, lsl #6
  44d780:	str	w9, [x23, #128]
  44d784:	mov	w9, #0x3                   	// #3
  44d788:	mov	x8, #0xffffffffffffffff    	// #-1
  44d78c:	str	xzr, [x20, #8]!
  44d790:	stp	xzr, xzr, [x20, #16]
  44d794:	str	xzr, [x20, #8]
  44d798:	str	w9, [x20, #48]
  44d79c:	stp	xzr, x25, [x20, #32]
  44d7a0:	str	x8, [x20, #56]
  44d7a4:	ldr	w8, [x23, #128]
  44d7a8:	cmp	w8, #0xf
  44d7ac:	b.eq	44e868 <_obstack_memory_used@@Base+0x7d18>  // b.none
  44d7b0:	ldr	x0, [x23, #112]
  44d7b4:	add	w9, w8, #0x1
  44d7b8:	sxtw	x8, w8
  44d7bc:	add	x8, x0, x8, lsl #6
  44d7c0:	mov	w10, #0xa                   	// #10
  44d7c4:	mov	x11, #0xffffffffffffffff    	// #-1
  44d7c8:	str	w9, [x23, #128]
  44d7cc:	str	xzr, [x8, #8]!
  44d7d0:	stp	x20, x19, [x8, #8]
  44d7d4:	str	w10, [x8, #48]
  44d7d8:	stp	xzr, xzr, [x8, #24]
  44d7dc:	str	x11, [x8, #56]
  44d7e0:	str	x8, [x20]
  44d7e4:	str	x8, [sp, #48]
  44d7e8:	str	x8, [x19]
  44d7ec:	ldp	x20, x21, [sp, #32]
  44d7f0:	mov	x0, x14
  44d7f4:	str	x28, [sp, #24]
  44d7f8:	mov	x1, x20
  44d7fc:	mov	x2, x21
  44d800:	bl	44c2b0 <_obstack_memory_used@@Base+0x5760>
  44d804:	ldr	x8, [x20, #72]
  44d808:	ldp	x9, x12, [sp, #48]
  44d80c:	add	x25, x23, #0x80
  44d810:	add	x26, x23, #0x70
  44d814:	mov	w23, #0x1                   	// #1
  44d818:	mov	x28, #0xffffffffffffffff    	// #-1
  44d81c:	add	x8, x8, w0, sxtw
  44d820:	str	x8, [x20, #72]
  44d824:	ldrb	w8, [x12, #8]
  44d828:	str	x9, [sp, #48]
  44d82c:	cmp	w8, #0x17
  44d830:	b.hi	44e9f0 <_obstack_memory_used@@Base+0x7ea0>  // b.pmore
  44d834:	mov	w10, #0x800                 	// #2048
  44d838:	lsl	w9, w23, w8
  44d83c:	movk	w10, #0x8c, lsl #16
  44d840:	tst	w9, w10
  44d844:	b.eq	44e9f0 <_obstack_memory_used@@Base+0x7ea0>  // b.none
  44d848:	ldr	q0, [x12]
  44d84c:	ldr	x19, [x20, #72]
  44d850:	mov	w24, #0xa                   	// #10
  44d854:	cmp	w8, #0x17
  44d858:	stur	q0, [x29, #-80]
  44d85c:	b.ne	44d8fc <_obstack_memory_used@@Base+0x6dac>  // b.any
  44d860:	mov	x10, #0xffffffffffffffff    	// #-1
  44d864:	mov	x0, x12
  44d868:	mov	x1, x20
  44d86c:	mov	x2, x21
  44d870:	mov	x22, x10
  44d874:	bl	44c2b0 <_obstack_memory_used@@Base+0x5760>
  44d878:	ldr	x8, [x20, #72]
  44d87c:	ldr	x12, [sp, #56]
  44d880:	add	x8, x8, w0, sxtw
  44d884:	str	x8, [x20, #72]
  44d888:	ldrb	w8, [x12, #8]
  44d88c:	ldrb	w9, [x12]
  44d890:	cmp	w8, #0x18
  44d894:	b.eq	44d914 <_obstack_memory_used@@Base+0x6dc4>  // b.none
  44d898:	cmp	w8, #0x2
  44d89c:	b.eq	44df40 <_obstack_memory_used@@Base+0x73f0>  // b.none
  44d8a0:	cmp	w9, #0x2c
  44d8a4:	b.eq	44d914 <_obstack_memory_used@@Base+0x6dc4>  // b.none
  44d8a8:	cmp	w9, #0x30
  44d8ac:	mov	x10, #0xfffffffffffffffe    	// #-2
  44d8b0:	b.cc	44d864 <_obstack_memory_used@@Base+0x6d14>  // b.lo, b.ul, b.last
  44d8b4:	cmp	w8, #0x1
  44d8b8:	b.ne	44d864 <_obstack_memory_used@@Base+0x6d14>  // b.any
  44d8bc:	cmn	x22, #0x2
  44d8c0:	mov	x10, #0xfffffffffffffffe    	// #-2
  44d8c4:	b.eq	44d864 <_obstack_memory_used@@Base+0x6d14>  // b.none
  44d8c8:	cmp	w9, #0x39
  44d8cc:	b.hi	44d864 <_obstack_memory_used@@Base+0x6d14>  // b.pmore
  44d8d0:	cmn	x22, #0x1
  44d8d4:	b.eq	44d8f4 <_obstack_memory_used@@Base+0x6da4>  // b.none
  44d8d8:	madd	x8, x22, x24, x9
  44d8dc:	mov	w10, #0x8030                	// #32816
  44d8e0:	sub	x9, x8, #0x30
  44d8e4:	cmp	x8, x10
  44d8e8:	mov	w8, #0x8000                	// #32768
  44d8ec:	csel	x10, x8, x9, gt
  44d8f0:	b	44d864 <_obstack_memory_used@@Base+0x6d14>
  44d8f4:	sub	x10, x9, #0x30
  44d8f8:	b	44d864 <_obstack_memory_used@@Base+0x6d14>
  44d8fc:	cmp	w8, #0x12
  44d900:	cset	w22, eq  // eq = none
  44d904:	cmp	w8, #0x13
  44d908:	mov	w8, #0x1                   	// #1
  44d90c:	cneg	x23, x8, ne  // ne = any
  44d910:	b	44da48 <_obstack_memory_used@@Base+0x6ef8>
  44d914:	cmn	x22, #0x1
  44d918:	b.ne	44d934 <_obstack_memory_used@@Base+0x6de4>  // b.any
  44d91c:	cmp	w9, #0x2c
  44d920:	b.ne	44d9f4 <_obstack_memory_used@@Base+0x6ea4>  // b.any
  44d924:	cmp	w8, #0x1
  44d928:	b.ne	44d9f4 <_obstack_memory_used@@Base+0x6ea4>  // b.any
  44d92c:	mov	x22, xzr
  44d930:	b	44d954 <_obstack_memory_used@@Base+0x6e04>
  44d934:	cmn	x22, #0x2
  44d938:	b.eq	44df40 <_obstack_memory_used@@Base+0x73f0>  // b.none
  44d93c:	cmp	w8, #0x18
  44d940:	b.eq	44da08 <_obstack_memory_used@@Base+0x6eb8>  // b.none
  44d944:	cmp	w8, #0x1
  44d948:	b.ne	44df40 <_obstack_memory_used@@Base+0x73f0>  // b.any
  44d94c:	cmp	w9, #0x2c
  44d950:	b.ne	44df40 <_obstack_memory_used@@Base+0x73f0>  // b.any
  44d954:	mov	x10, #0xffffffffffffffff    	// #-1
  44d958:	mov	x0, x12
  44d95c:	mov	x1, x20
  44d960:	mov	x2, x21
  44d964:	mov	x23, x10
  44d968:	bl	44c2b0 <_obstack_memory_used@@Base+0x5760>
  44d96c:	ldr	x8, [x20, #72]
  44d970:	ldr	x12, [sp, #56]
  44d974:	add	x8, x8, w0, sxtw
  44d978:	str	x8, [x20, #72]
  44d97c:	ldrb	w8, [x12, #8]
  44d980:	cmp	w8, #0x18
  44d984:	b.eq	44da0c <_obstack_memory_used@@Base+0x6ebc>  // b.none
  44d988:	cmp	w8, #0x2
  44d98c:	b.eq	44df3c <_obstack_memory_used@@Base+0x73ec>  // b.none
  44d990:	ldrb	w9, [x12]
  44d994:	mov	w11, #0xa                   	// #10
  44d998:	cmp	w9, #0x2c
  44d99c:	b.eq	44da10 <_obstack_memory_used@@Base+0x6ec0>  // b.none
  44d9a0:	cmp	w9, #0x30
  44d9a4:	mov	x10, #0xfffffffffffffffe    	// #-2
  44d9a8:	b.cc	44d958 <_obstack_memory_used@@Base+0x6e08>  // b.lo, b.ul, b.last
  44d9ac:	cmp	w8, #0x1
  44d9b0:	b.ne	44d958 <_obstack_memory_used@@Base+0x6e08>  // b.any
  44d9b4:	cmn	x23, #0x2
  44d9b8:	mov	x10, #0xfffffffffffffffe    	// #-2
  44d9bc:	b.eq	44d958 <_obstack_memory_used@@Base+0x6e08>  // b.none
  44d9c0:	cmp	w9, #0x39
  44d9c4:	b.hi	44d958 <_obstack_memory_used@@Base+0x6e08>  // b.pmore
  44d9c8:	cmn	x23, #0x1
  44d9cc:	b.eq	44d9ec <_obstack_memory_used@@Base+0x6e9c>  // b.none
  44d9d0:	madd	x8, x23, x11, x9
  44d9d4:	mov	w10, #0x8030                	// #32816
  44d9d8:	sub	x9, x8, #0x30
  44d9dc:	cmp	x8, x10
  44d9e0:	mov	w8, #0x8000                	// #32768
  44d9e4:	csel	x10, x8, x9, gt
  44d9e8:	b	44d958 <_obstack_memory_used@@Base+0x6e08>
  44d9ec:	sub	x10, x9, #0x30
  44d9f0:	b	44d958 <_obstack_memory_used@@Base+0x6e08>
  44d9f4:	ldr	x8, [sp, #24]
  44d9f8:	mov	x14, xzr
  44d9fc:	mov	w9, #0xa                   	// #10
  44da00:	str	w9, [x8]
  44da04:	b	44e3a0 <_obstack_memory_used@@Base+0x7850>
  44da08:	mov	x23, x22
  44da0c:	mov	w11, #0xa                   	// #10
  44da10:	cmn	x23, #0x2
  44da14:	b.eq	44df3c <_obstack_memory_used@@Base+0x73ec>  // b.none
  44da18:	cmn	x23, #0x1
  44da1c:	cset	w9, eq  // eq = none
  44da20:	cmp	x22, x23
  44da24:	cset	w10, le
  44da28:	cmp	w8, #0x18
  44da2c:	b.ne	44e17c <_obstack_memory_used@@Base+0x762c>  // b.any
  44da30:	orr	w8, w10, w9
  44da34:	tbz	w8, #0, 44e17c <_obstack_memory_used@@Base+0x762c>
  44da38:	cmn	x23, #0x1
  44da3c:	csel	x8, x22, x23, eq  // eq = none
  44da40:	cmp	x8, #0x8, lsl #12
  44da44:	b.ge	44e2fc <_obstack_memory_used@@Base+0x77ac>  // b.tcont
  44da48:	mov	x0, x12
  44da4c:	mov	x1, x20
  44da50:	mov	x2, x21
  44da54:	bl	44c2b0 <_obstack_memory_used@@Base+0x5760>
  44da58:	ldr	x8, [x20, #72]
  44da5c:	ldr	x19, [sp, #48]
  44da60:	add	x8, x8, w0, sxtw
  44da64:	str	x8, [x20, #72]
  44da68:	cbz	x19, 44de2c <_obstack_memory_used@@Base+0x72dc>
  44da6c:	ldr	x12, [sp, #56]
  44da70:	orr	x8, x23, x22
  44da74:	mov	w13, #0xa                   	// #10
  44da78:	cbz	x8, 44de38 <_obstack_memory_used@@Base+0x72e8>
  44da7c:	cmp	x22, #0x1
  44da80:	b.ge	44dedc <_obstack_memory_used@@Base+0x738c>  // b.tcont
  44da84:	mov	x14, xzr
  44da88:	mov	x21, x19
  44da8c:	ldrb	w8, [x21, #48]
  44da90:	cmp	w8, #0x11
  44da94:	b.ne	44dafc <_obstack_memory_used@@Base+0x6fac>  // b.any
  44da98:	ldr	x8, [x21, #40]
  44da9c:	mov	x10, x21
  44daa0:	mov	x9, x10
  44daa4:	ldr	x10, [x10, #8]
  44daa8:	cbnz	x10, 44daa0 <_obstack_memory_used@@Base+0x6f50>
  44daac:	ldr	x10, [x9, #16]
  44dab0:	cbnz	x10, 44daa0 <_obstack_memory_used@@Base+0x6f50>
  44dab4:	ldr	w10, [x9, #48]
  44dab8:	and	w11, w10, #0xff
  44dabc:	cmp	w11, #0x11
  44dac0:	b.ne	44dad8 <_obstack_memory_used@@Base+0x6f88>  // b.any
  44dac4:	ldr	x11, [x9, #40]
  44dac8:	cmp	x11, x8
  44dacc:	b.ne	44dad8 <_obstack_memory_used@@Base+0x6f88>  // b.any
  44dad0:	orr	w10, w10, #0x80000
  44dad4:	str	w10, [x9, #48]
  44dad8:	ldr	x11, [x9]
  44dadc:	cbz	x11, 44dafc <_obstack_memory_used@@Base+0x6fac>
  44dae0:	ldr	x10, [x11, #16]
  44dae4:	cmp	x10, x9
  44dae8:	mov	x9, x11
  44daec:	b.eq	44dab4 <_obstack_memory_used@@Base+0x6f64>  // b.none
  44daf0:	mov	x9, x11
  44daf4:	cbz	x10, 44dab4 <_obstack_memory_used@@Base+0x6f64>
  44daf8:	b	44daa0 <_obstack_memory_used@@Base+0x6f50>
  44dafc:	ldr	w8, [x25]
  44db00:	cmn	x23, #0x1
  44db04:	cinc	w19, w13, eq  // eq = none
  44db08:	cmp	w8, #0xf
  44db0c:	b.eq	44df04 <_obstack_memory_used@@Base+0x73b4>  // b.none
  44db10:	ldr	x0, [x26]
  44db14:	mov	w11, #0x10                  	// #16
  44db18:	add	w9, w8, #0x1
  44db1c:	sxtw	x8, w8
  44db20:	add	x22, x22, #0x2
  44db24:	add	x27, x0, x8, lsl #6
  44db28:	str	w9, [x25]
  44db2c:	cmp	x22, x23
  44db30:	str	xzr, [x27, #8]!
  44db34:	stp	x21, xzr, [x27, #8]
  44db38:	str	w19, [x27, #48]
  44db3c:	stp	xzr, xzr, [x27, #24]
  44db40:	str	x28, [x27, #56]
  44db44:	str	x27, [x21]
  44db48:	b.gt	44ddd0 <_obstack_memory_used@@Base+0x7280>
  44db4c:	mov	x20, x27
  44db50:	ldr	w8, [x25]
  44db54:	cmp	w8, #0xf
  44db58:	b.eq	44dd10 <_obstack_memory_used@@Base+0x71c0>  // b.none
  44db5c:	ldr	x0, [x26]
  44db60:	add	w10, w8, #0x1
  44db64:	sxtw	x8, w8
  44db68:	add	x19, x0, x8, lsl #6
  44db6c:	str	w10, [x25]
  44db70:	str	xzr, [x19, #8]!
  44db74:	add	x9, x21, #0x28
  44db78:	stp	xzr, xzr, [x19, #8]
  44db7c:	ldr	q0, [x9]
  44db80:	add	x24, sp, #0x50
  44db84:	stp	xzr, xzr, [x19, #24]
  44db88:	str	x28, [x19, #56]
  44db8c:	stur	q0, [x19, #40]
  44db90:	ldr	w8, [x19, #48]
  44db94:	and	w8, w8, #0xfff3ffff
  44db98:	str	w8, [x19, #48]
  44db9c:	mov	x8, x19
  44dba0:	str	x19, [sp, #80]
  44dba4:	str	x27, [x8]
  44dba8:	ldr	x8, [x24]
  44dbac:	ldr	w9, [x8, #48]
  44dbb0:	orr	w9, w9, #0x40000
  44dbb4:	str	w9, [x8, #48]
  44dbb8:	ldr	x8, [x21, #8]
  44dbbc:	ldr	x27, [x24]
  44dbc0:	cbz	x8, 44dbdc <_obstack_memory_used@@Base+0x708c>
  44dbc4:	add	x24, x27, #0x8
  44dbc8:	mov	x21, x8
  44dbcc:	b	44dbf8 <_obstack_memory_used@@Base+0x70a8>
  44dbd0:	ldr	x21, [x8]
  44dbd4:	ldr	x27, [x27]
  44dbd8:	cbz	x21, 44dc80 <_obstack_memory_used@@Base+0x7130>
  44dbdc:	mov	x9, x8
  44dbe0:	mov	x8, x21
  44dbe4:	ldr	x21, [x21, #16]
  44dbe8:	cmp	x21, x9
  44dbec:	b.eq	44dbd0 <_obstack_memory_used@@Base+0x7080>  // b.none
  44dbf0:	cbz	x21, 44dbd0 <_obstack_memory_used@@Base+0x7080>
  44dbf4:	add	x24, x27, #0x10
  44dbf8:	ldr	w8, [x25]
  44dbfc:	cmp	w8, #0xf
  44dc00:	b.eq	44dc48 <_obstack_memory_used@@Base+0x70f8>  // b.none
  44dc04:	ldr	x0, [x26]
  44dc08:	add	w10, w8, #0x1
  44dc0c:	sxtw	x8, w8
  44dc10:	add	x8, x0, x8, lsl #6
  44dc14:	str	w10, [x25]
  44dc18:	str	xzr, [x8, #8]!
  44dc1c:	add	x9, x21, #0x28
  44dc20:	stp	xzr, xzr, [x8, #8]
  44dc24:	ldr	q0, [x9]
  44dc28:	stp	xzr, xzr, [x8, #24]
  44dc2c:	str	x28, [x8, #56]
  44dc30:	stur	q0, [x8, #40]
  44dc34:	ldr	w9, [x8, #48]
  44dc38:	and	w9, w9, #0xfff3ffff
  44dc3c:	str	w9, [x8, #48]
  44dc40:	str	x8, [x24]
  44dc44:	b	44dba4 <_obstack_memory_used@@Base+0x7054>
  44dc48:	mov	w0, #0x3c8                 	// #968
  44dc4c:	str	x14, [sp, #16]
  44dc50:	bl	404250 <malloc@plt>
  44dc54:	cbz	x0, 44dd90 <_obstack_memory_used@@Base+0x7240>
  44dc58:	ldr	x9, [x26]
  44dc5c:	ldr	x12, [sp, #56]
  44dc60:	ldr	x14, [sp, #16]
  44dc64:	mov	w8, wzr
  44dc68:	mov	w13, #0xa                   	// #10
  44dc6c:	mov	w11, #0x10                  	// #16
  44dc70:	str	x9, [x0]
  44dc74:	str	x0, [x26]
  44dc78:	str	wzr, [x25]
  44dc7c:	b	44dc08 <_obstack_memory_used@@Base+0x70b8>
  44dc80:	ldr	w8, [x25]
  44dc84:	cmp	w8, #0xf
  44dc88:	b.eq	44dd48 <_obstack_memory_used@@Base+0x71f8>  // b.none
  44dc8c:	ldr	x0, [x26]
  44dc90:	add	w9, w8, #0x1
  44dc94:	sxtw	x8, w8
  44dc98:	add	x21, x0, x8, lsl #6
  44dc9c:	str	w9, [x25]
  44dca0:	str	xzr, [x21, #8]!
  44dca4:	stp	x20, x19, [x21, #8]
  44dca8:	str	w11, [x21, #48]
  44dcac:	stp	xzr, xzr, [x21, #24]
  44dcb0:	str	x28, [x21, #56]
  44dcb4:	str	x21, [x20]
  44dcb8:	cbz	x19, 44e388 <_obstack_memory_used@@Base+0x7838>
  44dcbc:	str	x21, [x19]
  44dcc0:	ldr	w8, [x25]
  44dcc4:	cmp	w8, #0xf
  44dcc8:	b.eq	44dd50 <_obstack_memory_used@@Base+0x7200>  // b.none
  44dccc:	ldr	x0, [x26]
  44dcd0:	add	w9, w8, #0x1
  44dcd4:	sxtw	x8, w8
  44dcd8:	add	x20, x0, x8, lsl #6
  44dcdc:	cmp	x22, x23
  44dce0:	str	w9, [x25]
  44dce4:	str	xzr, [x20, #8]!
  44dce8:	stp	x21, xzr, [x20, #8]
  44dcec:	str	w13, [x20, #48]
  44dcf0:	stp	xzr, xzr, [x20, #24]
  44dcf4:	str	x28, [x20, #56]
  44dcf8:	str	x20, [x21]
  44dcfc:	b.ge	44ddcc <_obstack_memory_used@@Base+0x727c>  // b.tcont
  44dd00:	ldr	x27, [x19]
  44dd04:	add	x22, x22, #0x1
  44dd08:	mov	x21, x19
  44dd0c:	b	44db50 <_obstack_memory_used@@Base+0x7000>
  44dd10:	mov	w0, #0x3c8                 	// #968
  44dd14:	str	x14, [sp, #16]
  44dd18:	bl	404250 <malloc@plt>
  44dd1c:	cbz	x0, 44dd88 <_obstack_memory_used@@Base+0x7238>
  44dd20:	ldr	x9, [x26]
  44dd24:	ldr	x12, [sp, #56]
  44dd28:	ldr	x14, [sp, #16]
  44dd2c:	mov	w8, wzr
  44dd30:	mov	w13, #0xa                   	// #10
  44dd34:	mov	w11, #0x10                  	// #16
  44dd38:	str	x9, [x0]
  44dd3c:	str	x0, [x26]
  44dd40:	str	wzr, [x25]
  44dd44:	b	44db60 <_obstack_memory_used@@Base+0x7010>
  44dd48:	str	x14, [sp, #16]
  44dd4c:	b	44dd98 <_obstack_memory_used@@Base+0x7248>
  44dd50:	mov	w0, #0x3c8                 	// #968
  44dd54:	mov	x20, x14
  44dd58:	bl	404250 <malloc@plt>
  44dd5c:	ldr	x12, [sp, #56]
  44dd60:	mov	w11, #0x10                  	// #16
  44dd64:	mov	w13, #0xa                   	// #10
  44dd68:	cbz	x0, 44e388 <_obstack_memory_used@@Base+0x7838>
  44dd6c:	ldr	x9, [x26]
  44dd70:	mov	x14, x20
  44dd74:	mov	w8, wzr
  44dd78:	str	x9, [x0]
  44dd7c:	str	x0, [x26]
  44dd80:	str	wzr, [x25]
  44dd84:	b	44dcd0 <_obstack_memory_used@@Base+0x7180>
  44dd88:	str	xzr, [sp, #80]
  44dd8c:	b	44dd94 <_obstack_memory_used@@Base+0x7244>
  44dd90:	str	xzr, [x24]
  44dd94:	mov	x19, xzr
  44dd98:	mov	w0, #0x3c8                 	// #968
  44dd9c:	bl	404250 <malloc@plt>
  44dda0:	ldr	x12, [sp, #56]
  44dda4:	ldr	x14, [sp, #16]
  44dda8:	mov	w13, #0xa                   	// #10
  44ddac:	mov	w11, #0x10                  	// #16
  44ddb0:	cbz	x0, 44e388 <_obstack_memory_used@@Base+0x7838>
  44ddb4:	ldr	x9, [x26]
  44ddb8:	mov	w8, wzr
  44ddbc:	str	x9, [x0]
  44ddc0:	str	x0, [x26]
  44ddc4:	str	wzr, [x25]
  44ddc8:	b	44dc90 <_obstack_memory_used@@Base+0x7140>
  44ddcc:	mov	x27, x20
  44ddd0:	ldp	x20, x21, [sp, #32]
  44ddd4:	mov	w23, #0x1                   	// #1
  44ddd8:	cbz	x14, 44de20 <_obstack_memory_used@@Base+0x72d0>
  44dddc:	ldr	w8, [x25]
  44dde0:	cmp	w8, #0xf
  44dde4:	b.eq	44e190 <_obstack_memory_used@@Base+0x7640>  // b.none
  44dde8:	ldr	x0, [x26]
  44ddec:	add	w9, w8, #0x1
  44ddf0:	sxtw	x8, w8
  44ddf4:	add	x8, x0, x8, lsl #6
  44ddf8:	str	w9, [x25]
  44ddfc:	str	xzr, [x8, #8]!
  44de00:	stp	x14, x27, [x8, #8]
  44de04:	str	w11, [x8, #48]
  44de08:	stp	xzr, xzr, [x8, #24]
  44de0c:	str	x28, [x8, #56]
  44de10:	str	x8, [x14]
  44de14:	mov	x14, x8
  44de18:	str	x8, [x27]
  44de1c:	b	44de24 <_obstack_memory_used@@Base+0x72d4>
  44de20:	mov	x14, x27
  44de24:	mov	w8, wzr
  44de28:	b	44e3b8 <_obstack_memory_used@@Base+0x7868>
  44de2c:	ldr	x12, [sp, #56]
  44de30:	mov	x14, xzr
  44de34:	b	44e39c <_obstack_memory_used@@Base+0x784c>
  44de38:	mov	x8, x19
  44de3c:	mov	w23, #0x1                   	// #1
  44de40:	mov	x19, x8
  44de44:	ldr	x8, [x8, #8]
  44de48:	cbnz	x8, 44de40 <_obstack_memory_used@@Base+0x72f0>
  44de4c:	ldr	x8, [x19, #16]
  44de50:	cbnz	x8, 44de40 <_obstack_memory_used@@Base+0x72f0>
  44de54:	ldr	w8, [x19, #48]
  44de58:	mov	w9, #0xff                  	// #255
  44de5c:	movk	w9, #0x4, lsl #16
  44de60:	and	w8, w8, w9
  44de64:	cmp	w8, #0x3
  44de68:	b.eq	44de9c <_obstack_memory_used@@Base+0x734c>  // b.none
  44de6c:	cmp	w8, #0x6
  44de70:	b.ne	44deb0 <_obstack_memory_used@@Base+0x7360>  // b.any
  44de74:	ldr	x23, [x19, #40]
  44de78:	ldr	x0, [x23]
  44de7c:	bl	404700 <free@plt>
  44de80:	ldr	x0, [x23, #8]
  44de84:	bl	404700 <free@plt>
  44de88:	ldr	x0, [x23, #16]
  44de8c:	bl	404700 <free@plt>
  44de90:	ldr	x0, [x23, #24]
  44de94:	bl	404700 <free@plt>
  44de98:	b	44dea0 <_obstack_memory_used@@Base+0x7350>
  44de9c:	ldr	x23, [x19, #40]
  44dea0:	mov	x0, x23
  44dea4:	bl	404700 <free@plt>
  44dea8:	ldr	x12, [sp, #56]
  44deac:	mov	w23, #0x1                   	// #1
  44deb0:	ldr	x9, [x19]
  44deb4:	cbz	x9, 44ded4 <_obstack_memory_used@@Base+0x7384>
  44deb8:	ldr	x8, [x9, #16]
  44debc:	cmp	x8, x19
  44dec0:	mov	x19, x9
  44dec4:	b.eq	44de54 <_obstack_memory_used@@Base+0x7304>  // b.none
  44dec8:	mov	x19, x9
  44decc:	cbz	x8, 44de54 <_obstack_memory_used@@Base+0x7304>
  44ded0:	b	44de40 <_obstack_memory_used@@Base+0x72f0>
  44ded4:	mov	x14, xzr
  44ded8:	b	44e3a0 <_obstack_memory_used@@Base+0x7850>
  44dedc:	mov	x14, x19
  44dee0:	mov	x15, x19
  44dee4:	mov	w11, #0x10                  	// #16
  44dee8:	b.ne	44df5c <_obstack_memory_used@@Base+0x740c>  // b.any
  44deec:	ldr	x21, [sp, #40]
  44def0:	cmp	x22, x23
  44def4:	b.ne	44e1c4 <_obstack_memory_used@@Base+0x7674>  // b.any
  44def8:	ldr	x20, [sp, #32]
  44defc:	mov	w23, #0x1                   	// #1
  44df00:	b	44de24 <_obstack_memory_used@@Base+0x72d4>
  44df04:	mov	w0, #0x3c8                 	// #968
  44df08:	mov	x20, x14
  44df0c:	bl	404250 <malloc@plt>
  44df10:	ldr	x12, [sp, #56]
  44df14:	mov	w13, #0xa                   	// #10
  44df18:	mov	w11, #0x10                  	// #16
  44df1c:	cbz	x0, 44e388 <_obstack_memory_used@@Base+0x7838>
  44df20:	ldr	x9, [x26]
  44df24:	mov	x14, x20
  44df28:	mov	w8, wzr
  44df2c:	str	x9, [x0]
  44df30:	str	x0, [x26]
  44df34:	str	wzr, [x25]
  44df38:	b	44db18 <_obstack_memory_used@@Base+0x6fc8>
  44df3c:	mov	w23, #0x1                   	// #1
  44df40:	tbz	w21, #21, 44e320 <_obstack_memory_used@@Base+0x77d0>
  44df44:	str	x19, [x20, #72]
  44df48:	ldur	q0, [x29, #-80]
  44df4c:	ldr	x14, [sp, #48]
  44df50:	str	q0, [x12]
  44df54:	strb	w23, [x12, #8]
  44df58:	b	44e3a0 <_obstack_memory_used@@Base+0x7850>
  44df5c:	ldr	x14, [x19]
  44df60:	mov	x15, x19
  44df64:	mov	w21, #0x2                   	// #2
  44df68:	ldr	w8, [x25]
  44df6c:	cmp	w8, #0xf
  44df70:	b.eq	44e0f8 <_obstack_memory_used@@Base+0x75a8>  // b.none
  44df74:	ldr	x0, [x26]
  44df78:	add	w10, w8, #0x1
  44df7c:	sxtw	x8, w8
  44df80:	add	x20, x0, x8, lsl #6
  44df84:	str	w10, [x25]
  44df88:	str	xzr, [x20, #8]!
  44df8c:	add	x9, x15, #0x28
  44df90:	stp	xzr, xzr, [x20, #8]
  44df94:	ldr	q0, [x9]
  44df98:	add	x27, sp, #0x50
  44df9c:	stp	xzr, xzr, [x20, #24]
  44dfa0:	str	x28, [x20, #56]
  44dfa4:	stur	q0, [x20, #40]
  44dfa8:	ldr	w8, [x20, #48]
  44dfac:	and	w8, w8, #0xfff3ffff
  44dfb0:	str	w8, [x20, #48]
  44dfb4:	mov	x8, x20
  44dfb8:	str	x20, [sp, #80]
  44dfbc:	str	x14, [x8]
  44dfc0:	ldr	x8, [x27]
  44dfc4:	ldr	w9, [x8, #48]
  44dfc8:	orr	w9, w9, #0x40000
  44dfcc:	str	w9, [x8, #48]
  44dfd0:	ldr	x8, [x15, #8]
  44dfd4:	ldr	x14, [x27]
  44dfd8:	cbz	x8, 44dff4 <_obstack_memory_used@@Base+0x74a4>
  44dfdc:	add	x27, x14, #0x8
  44dfe0:	mov	x15, x8
  44dfe4:	b	44e010 <_obstack_memory_used@@Base+0x74c0>
  44dfe8:	ldr	x15, [x8]
  44dfec:	ldr	x14, [x14]
  44dff0:	cbz	x15, 44e0a0 <_obstack_memory_used@@Base+0x7550>
  44dff4:	mov	x9, x8
  44dff8:	mov	x8, x15
  44dffc:	ldr	x15, [x15, #16]
  44e000:	cmp	x15, x9
  44e004:	b.eq	44dfe8 <_obstack_memory_used@@Base+0x7498>  // b.none
  44e008:	cbz	x15, 44dfe8 <_obstack_memory_used@@Base+0x7498>
  44e00c:	add	x27, x14, #0x10
  44e010:	ldr	w8, [x25]
  44e014:	cmp	w8, #0xf
  44e018:	b.eq	44e060 <_obstack_memory_used@@Base+0x7510>  // b.none
  44e01c:	ldr	x0, [x26]
  44e020:	add	w10, w8, #0x1
  44e024:	sxtw	x8, w8
  44e028:	add	x8, x0, x8, lsl #6
  44e02c:	str	w10, [x25]
  44e030:	str	xzr, [x8, #8]!
  44e034:	add	x9, x15, #0x28
  44e038:	stp	xzr, xzr, [x8, #8]
  44e03c:	ldr	q0, [x9]
  44e040:	stp	xzr, xzr, [x8, #24]
  44e044:	str	x28, [x8, #56]
  44e048:	stur	q0, [x8, #40]
  44e04c:	ldr	w9, [x8, #48]
  44e050:	and	w9, w9, #0xfff3ffff
  44e054:	str	w9, [x8, #48]
  44e058:	str	x8, [x27]
  44e05c:	b	44dfbc <_obstack_memory_used@@Base+0x746c>
  44e060:	mov	w0, #0x3c8                 	// #968
  44e064:	str	x15, [sp, #16]
  44e068:	mov	x24, x14
  44e06c:	bl	404250 <malloc@plt>
  44e070:	cbz	x0, 44e140 <_obstack_memory_used@@Base+0x75f0>
  44e074:	ldr	x9, [x26]
  44e078:	ldr	x12, [sp, #56]
  44e07c:	ldr	x15, [sp, #16]
  44e080:	mov	w8, wzr
  44e084:	mov	w13, #0xa                   	// #10
  44e088:	mov	w11, #0x10                  	// #16
  44e08c:	mov	x14, x24
  44e090:	str	x9, [x0]
  44e094:	str	x0, [x26]
  44e098:	str	wzr, [x25]
  44e09c:	b	44e020 <_obstack_memory_used@@Base+0x74d0>
  44e0a0:	ldr	w8, [x25]
  44e0a4:	cmp	w8, #0xf
  44e0a8:	b.eq	44e148 <_obstack_memory_used@@Base+0x75f8>  // b.none
  44e0ac:	ldr	x0, [x26]
  44e0b0:	mov	x15, x20
  44e0b4:	add	w9, w8, #0x1
  44e0b8:	sxtw	x8, w8
  44e0bc:	add	x14, x0, x8, lsl #6
  44e0c0:	str	w9, [x25]
  44e0c4:	str	xzr, [x14, #8]!
  44e0c8:	stp	x19, x15, [x14, #8]
  44e0cc:	str	w11, [x14, #48]
  44e0d0:	stp	xzr, xzr, [x14, #24]
  44e0d4:	str	x28, [x14, #56]
  44e0d8:	str	x14, [x19]
  44e0dc:	cbz	x15, 44e388 <_obstack_memory_used@@Base+0x7838>
  44e0e0:	cmp	x21, x22
  44e0e4:	add	x21, x21, #0x1
  44e0e8:	mov	x19, x14
  44e0ec:	str	x14, [x15]
  44e0f0:	b.ne	44df68 <_obstack_memory_used@@Base+0x7418>  // b.any
  44e0f4:	b	44deec <_obstack_memory_used@@Base+0x739c>
  44e0f8:	mov	w0, #0x3c8                 	// #968
  44e0fc:	mov	x24, x15
  44e100:	mov	x20, x14
  44e104:	bl	404250 <malloc@plt>
  44e108:	cbz	x0, 44e138 <_obstack_memory_used@@Base+0x75e8>
  44e10c:	ldr	x9, [x26]
  44e110:	ldr	x12, [sp, #56]
  44e114:	mov	w8, wzr
  44e118:	mov	w13, #0xa                   	// #10
  44e11c:	mov	w11, #0x10                  	// #16
  44e120:	mov	x14, x20
  44e124:	mov	x15, x24
  44e128:	str	x9, [x0]
  44e12c:	str	x0, [x26]
  44e130:	str	wzr, [x25]
  44e134:	b	44df78 <_obstack_memory_used@@Base+0x7428>
  44e138:	str	xzr, [sp, #80]
  44e13c:	b	44e144 <_obstack_memory_used@@Base+0x75f4>
  44e140:	str	xzr, [x27]
  44e144:	mov	x20, xzr
  44e148:	mov	w0, #0x3c8                 	// #968
  44e14c:	bl	404250 <malloc@plt>
  44e150:	ldr	x12, [sp, #56]
  44e154:	mov	w13, #0xa                   	// #10
  44e158:	mov	w11, #0x10                  	// #16
  44e15c:	cbz	x0, 44e388 <_obstack_memory_used@@Base+0x7838>
  44e160:	ldr	x9, [x26]
  44e164:	mov	x15, x20
  44e168:	mov	w8, wzr
  44e16c:	str	x9, [x0]
  44e170:	str	x0, [x26]
  44e174:	str	wzr, [x25]
  44e178:	b	44e0b4 <_obstack_memory_used@@Base+0x7564>
  44e17c:	ldr	x8, [sp, #24]
  44e180:	mov	x14, xzr
  44e184:	mov	w23, #0x1                   	// #1
  44e188:	str	w11, [x8]
  44e18c:	b	44e3a0 <_obstack_memory_used@@Base+0x7850>
  44e190:	mov	w0, #0x3c8                 	// #968
  44e194:	mov	x19, x14
  44e198:	bl	404250 <malloc@plt>
  44e19c:	cbz	x0, 44e314 <_obstack_memory_used@@Base+0x77c4>
  44e1a0:	ldr	x9, [x26]
  44e1a4:	ldr	x12, [sp, #56]
  44e1a8:	mov	w8, wzr
  44e1ac:	mov	w11, #0x10                  	// #16
  44e1b0:	mov	x14, x19
  44e1b4:	str	x9, [x0]
  44e1b8:	str	x0, [x26]
  44e1bc:	str	wzr, [x25]
  44e1c0:	b	44ddec <_obstack_memory_used@@Base+0x729c>
  44e1c4:	mov	x20, x15
  44e1c8:	ldr	x19, [x20], #40
  44e1cc:	ldr	w8, [x25]
  44e1d0:	cmp	w8, #0xf
  44e1d4:	b.eq	44e33c <_obstack_memory_used@@Base+0x77ec>  // b.none
  44e1d8:	ldr	x0, [x26]
  44e1dc:	add	w9, w8, #0x1
  44e1e0:	sxtw	x8, w8
  44e1e4:	add	x21, x0, x8, lsl #6
  44e1e8:	str	w9, [x25]
  44e1ec:	str	xzr, [x21, #8]!
  44e1f0:	stp	xzr, xzr, [x21, #8]
  44e1f4:	ldr	q0, [x20]
  44e1f8:	add	x20, sp, #0x50
  44e1fc:	stp	xzr, xzr, [x21, #24]
  44e200:	str	x28, [x21, #56]
  44e204:	stur	q0, [x21, #40]
  44e208:	ldr	w8, [x21, #48]
  44e20c:	and	w8, w8, #0xfff3ffff
  44e210:	str	w8, [x21, #48]
  44e214:	mov	x8, x21
  44e218:	str	x21, [sp, #80]
  44e21c:	str	x19, [x8]
  44e220:	ldr	x8, [x20]
  44e224:	ldr	w9, [x8, #48]
  44e228:	orr	w9, w9, #0x40000
  44e22c:	str	w9, [x8, #48]
  44e230:	ldr	x8, [x15, #8]
  44e234:	ldr	x19, [x20]
  44e238:	cbz	x8, 44e254 <_obstack_memory_used@@Base+0x7704>
  44e23c:	add	x20, x19, #0x8
  44e240:	mov	x15, x8
  44e244:	b	44e270 <_obstack_memory_used@@Base+0x7720>
  44e248:	ldr	x15, [x8]
  44e24c:	ldr	x19, [x19]
  44e250:	cbz	x15, 44da8c <_obstack_memory_used@@Base+0x6f3c>
  44e254:	mov	x9, x8
  44e258:	mov	x8, x15
  44e25c:	ldr	x15, [x15, #16]
  44e260:	cmp	x15, x9
  44e264:	b.eq	44e248 <_obstack_memory_used@@Base+0x76f8>  // b.none
  44e268:	cbz	x15, 44e248 <_obstack_memory_used@@Base+0x76f8>
  44e26c:	add	x20, x19, #0x10
  44e270:	ldr	w8, [x25]
  44e274:	cmp	w8, #0xf
  44e278:	b.eq	44e2c0 <_obstack_memory_used@@Base+0x7770>  // b.none
  44e27c:	ldr	x0, [x26]
  44e280:	add	w10, w8, #0x1
  44e284:	sxtw	x8, w8
  44e288:	add	x8, x0, x8, lsl #6
  44e28c:	str	w10, [x25]
  44e290:	str	xzr, [x8, #8]!
  44e294:	add	x9, x15, #0x28
  44e298:	stp	xzr, xzr, [x8, #8]
  44e29c:	ldr	q0, [x9]
  44e2a0:	stp	xzr, xzr, [x8, #24]
  44e2a4:	str	x28, [x8, #56]
  44e2a8:	stur	q0, [x8, #40]
  44e2ac:	ldr	w9, [x8, #48]
  44e2b0:	and	w9, w9, #0xfff3ffff
  44e2b4:	str	w9, [x8, #48]
  44e2b8:	str	x8, [x20]
  44e2bc:	b	44e21c <_obstack_memory_used@@Base+0x76cc>
  44e2c0:	mov	w0, #0x3c8                 	// #968
  44e2c4:	mov	x27, x15
  44e2c8:	mov	x24, x14
  44e2cc:	bl	404250 <malloc@plt>
  44e2d0:	cbz	x0, 44e380 <_obstack_memory_used@@Base+0x7830>
  44e2d4:	ldr	x9, [x26]
  44e2d8:	ldr	x12, [sp, #56]
  44e2dc:	mov	w8, wzr
  44e2e0:	mov	w13, #0xa                   	// #10
  44e2e4:	mov	x14, x24
  44e2e8:	mov	x15, x27
  44e2ec:	str	x9, [x0]
  44e2f0:	str	x0, [x26]
  44e2f4:	str	wzr, [x25]
  44e2f8:	b	44e280 <_obstack_memory_used@@Base+0x7730>
  44e2fc:	ldr	x8, [sp, #24]
  44e300:	mov	w9, #0xf                   	// #15
  44e304:	mov	x14, xzr
  44e308:	mov	w23, #0x1                   	// #1
  44e30c:	str	w9, [x8]
  44e310:	b	44e3a0 <_obstack_memory_used@@Base+0x7850>
  44e314:	ldr	x12, [sp, #56]
  44e318:	mov	x14, xzr
  44e31c:	b	44e3a0 <_obstack_memory_used@@Base+0x7850>
  44e320:	ldr	x9, [sp, #24]
  44e324:	cmp	w8, #0x2
  44e328:	mov	w8, #0x9                   	// #9
  44e32c:	cinc	w8, w8, ne  // ne = any
  44e330:	mov	x14, xzr
  44e334:	str	w8, [x9]
  44e338:	b	44e3a0 <_obstack_memory_used@@Base+0x7850>
  44e33c:	mov	w0, #0x3c8                 	// #968
  44e340:	mov	x24, x15
  44e344:	mov	x21, x14
  44e348:	bl	404250 <malloc@plt>
  44e34c:	cbz	x0, 44e378 <_obstack_memory_used@@Base+0x7828>
  44e350:	ldr	x9, [x26]
  44e354:	ldr	x12, [sp, #56]
  44e358:	mov	w8, wzr
  44e35c:	mov	w13, #0xa                   	// #10
  44e360:	mov	x14, x21
  44e364:	mov	x15, x24
  44e368:	str	x9, [x0]
  44e36c:	str	x0, [x26]
  44e370:	str	wzr, [x25]
  44e374:	b	44e1dc <_obstack_memory_used@@Base+0x768c>
  44e378:	str	xzr, [sp, #80]
  44e37c:	b	44e384 <_obstack_memory_used@@Base+0x7834>
  44e380:	str	xzr, [x20]
  44e384:	ldr	x12, [sp, #56]
  44e388:	ldp	x8, x20, [sp, #24]
  44e38c:	ldr	x21, [sp, #40]
  44e390:	mov	w9, #0xc                   	// #12
  44e394:	mov	x14, xzr
  44e398:	str	w9, [x8]
  44e39c:	mov	w23, #0x1                   	// #1
  44e3a0:	cmp	x14, #0x0
  44e3a4:	cset	w8, eq  // eq = none
  44e3a8:	cbnz	x14, 44e3b8 <_obstack_memory_used@@Base+0x7868>
  44e3ac:	ldr	x9, [sp, #24]
  44e3b0:	ldr	w9, [x9]
  44e3b4:	cbnz	w9, 44e608 <_obstack_memory_used@@Base+0x7ab8>
  44e3b8:	mov	x9, x14
  44e3bc:	tbz	w21, #24, 44d824 <_obstack_memory_used@@Base+0x6cd4>
  44e3c0:	ldrb	w9, [x12, #8]
  44e3c4:	cmp	w9, #0x17
  44e3c8:	b.eq	44e3d8 <_obstack_memory_used@@Base+0x7888>  // b.none
  44e3cc:	cmp	w9, #0xb
  44e3d0:	mov	x9, x14
  44e3d4:	b.ne	44d824 <_obstack_memory_used@@Base+0x6cd4>  // b.any
  44e3d8:	ldr	x22, [sp, #24]
  44e3dc:	tbz	w8, #0, 44e3f0 <_obstack_memory_used@@Base+0x78a0>
  44e3e0:	mov	w8, #0xd                   	// #13
  44e3e4:	str	xzr, [sp, #48]
  44e3e8:	str	w8, [x22]
  44e3ec:	b	44e9f0 <_obstack_memory_used@@Base+0x7ea0>
  44e3f0:	mov	w19, #0xff                  	// #255
  44e3f4:	movk	w19, #0x4, lsl #16
  44e3f8:	mov	x21, x14
  44e3fc:	ldr	x14, [x14, #8]
  44e400:	cbnz	x14, 44e3f8 <_obstack_memory_used@@Base+0x78a8>
  44e404:	ldr	x14, [x21, #16]
  44e408:	cbnz	x14, 44e3f8 <_obstack_memory_used@@Base+0x78a8>
  44e40c:	ldr	w8, [x21, #48]
  44e410:	and	w8, w8, w19
  44e414:	cmp	w8, #0x3
  44e418:	b.eq	44e44c <_obstack_memory_used@@Base+0x78fc>  // b.none
  44e41c:	cmp	w8, #0x6
  44e420:	b.ne	44e458 <_obstack_memory_used@@Base+0x7908>  // b.any
  44e424:	ldr	x20, [x21, #40]
  44e428:	ldr	x0, [x20]
  44e42c:	bl	404700 <free@plt>
  44e430:	ldr	x0, [x20, #8]
  44e434:	bl	404700 <free@plt>
  44e438:	ldr	x0, [x20, #16]
  44e43c:	bl	404700 <free@plt>
  44e440:	ldr	x0, [x20, #24]
  44e444:	bl	404700 <free@plt>
  44e448:	b	44e450 <_obstack_memory_used@@Base+0x7900>
  44e44c:	ldr	x20, [x21, #40]
  44e450:	mov	x0, x20
  44e454:	bl	404700 <free@plt>
  44e458:	ldr	x8, [x21]
  44e45c:	cbz	x8, 44e3e0 <_obstack_memory_used@@Base+0x7890>
  44e460:	ldr	x14, [x8, #16]
  44e464:	cmp	x14, x21
  44e468:	mov	x21, x8
  44e46c:	b.eq	44e40c <_obstack_memory_used@@Base+0x78bc>  // b.none
  44e470:	mov	x21, x8
  44e474:	cbz	x14, 44e40c <_obstack_memory_used@@Base+0x78bc>
  44e478:	b	44e3f8 <_obstack_memory_used@@Base+0x78a8>
  44e47c:	mov	w8, #0x5                   	// #5
  44e480:	str	w8, [x14]
  44e484:	ldr	w8, [x23, #128]
  44e488:	ldr	x21, [sp, #40]
  44e48c:	cmp	w8, #0xf
  44e490:	b.eq	44e98c <_obstack_memory_used@@Base+0x7e3c>  // b.none
  44e494:	ldr	x0, [x23, #112]
  44e498:	add	w9, w8, #0x1
  44e49c:	sxtw	x8, w8
  44e4a0:	add	x19, x0, x8, lsl #6
  44e4a4:	str	w9, [x23, #128]
  44e4a8:	str	xzr, [x19, #8]!
  44e4ac:	stp	xzr, xzr, [x19, #8]
  44e4b0:	ldr	q0, [x14]
  44e4b4:	mov	x8, #0xffffffffffffffff    	// #-1
  44e4b8:	str	x8, [x19, #56]
  44e4bc:	stp	xzr, xzr, [x19, #24]
  44e4c0:	stur	q0, [x19, #40]
  44e4c4:	ldr	w9, [x19, #48]
  44e4c8:	and	w8, w9, #0xfff3ffff
  44e4cc:	str	w8, [x19, #48]
  44e4d0:	mov	w8, #0xa                   	// #10
  44e4d4:	str	w8, [x14]
  44e4d8:	ldr	w8, [x23, #128]
  44e4dc:	cmp	w8, #0xf
  44e4e0:	b.eq	44e90c <_obstack_memory_used@@Base+0x7dbc>  // b.none
  44e4e4:	ldr	x0, [x23, #112]
  44e4e8:	add	w9, w8, #0x1
  44e4ec:	sxtw	x8, w8
  44e4f0:	add	x20, x0, x8, lsl #6
  44e4f4:	str	w9, [x23, #128]
  44e4f8:	str	xzr, [x20, #8]!
  44e4fc:	stp	xzr, xzr, [x20, #8]
  44e500:	ldr	q0, [x14]
  44e504:	mov	x9, #0xffffffffffffffff    	// #-1
  44e508:	stp	xzr, xzr, [x20, #24]
  44e50c:	str	x9, [x20, #56]
  44e510:	stur	q0, [x20, #40]
  44e514:	ldr	w8, [x20, #48]
  44e518:	and	w8, w8, #0xfff3ffff
  44e51c:	str	w8, [x20, #48]
  44e520:	ldr	w8, [x23, #128]
  44e524:	cmp	w8, #0xf
  44e528:	b.eq	44e938 <_obstack_memory_used@@Base+0x7de8>  // b.none
  44e52c:	ldr	x0, [x23, #112]
  44e530:	add	w9, w8, #0x1
  44e534:	sxtw	x8, w8
  44e538:	add	x8, x0, x8, lsl #6
  44e53c:	mov	w10, #0xa                   	// #10
  44e540:	mov	x11, #0xffffffffffffffff    	// #-1
  44e544:	str	w9, [x23, #128]
  44e548:	str	xzr, [x8, #8]!
  44e54c:	stp	x19, x20, [x8, #8]
  44e550:	str	w10, [x8, #48]
  44e554:	stp	xzr, xzr, [x8, #24]
  44e558:	str	x11, [x8, #56]
  44e55c:	cbz	x19, 44e564 <_obstack_memory_used@@Base+0x7a14>
  44e560:	str	x8, [x19]
  44e564:	cbz	x20, 44e9e4 <_obstack_memory_used@@Base+0x7e94>
  44e568:	str	x8, [x20]
  44e56c:	cbnz	x19, 44e5c0 <_obstack_memory_used@@Base+0x7a70>
  44e570:	b	44e9e4 <_obstack_memory_used@@Base+0x7e94>
  44e574:	ldr	w8, [x23, #128]
  44e578:	cmp	w8, #0xf
  44e57c:	b.eq	44e9b8 <_obstack_memory_used@@Base+0x7e68>  // b.none
  44e580:	ldr	x0, [x23, #112]
  44e584:	add	w9, w8, #0x1
  44e588:	sxtw	x8, w8
  44e58c:	add	x10, x0, x8, lsl #6
  44e590:	str	w9, [x23, #128]
  44e594:	str	xzr, [x10, #8]!
  44e598:	stp	xzr, xzr, [x10, #8]
  44e59c:	ldr	q0, [x14]
  44e5a0:	mov	x9, #0xffffffffffffffff    	// #-1
  44e5a4:	stp	xzr, xzr, [x10, #24]
  44e5a8:	str	x9, [x10, #56]
  44e5ac:	stur	q0, [x10, #40]
  44e5b0:	ldr	w8, [x10, #48]
  44e5b4:	and	w8, w8, #0xfff3ffff
  44e5b8:	str	w8, [x10, #48]
  44e5bc:	mov	x8, x10
  44e5c0:	ldr	x19, [sp, #32]
  44e5c4:	mov	x0, x14
  44e5c8:	mov	x2, x21
  44e5cc:	str	x8, [sp, #48]
  44e5d0:	mov	x1, x19
  44e5d4:	bl	44c2b0 <_obstack_memory_used@@Base+0x5760>
  44e5d8:	ldr	x8, [x19, #72]
  44e5dc:	add	x8, x8, w0, sxtw
  44e5e0:	str	x8, [x19, #72]
  44e5e4:	b	44e9f0 <_obstack_memory_used@@Base+0x7ea0>
  44e5e8:	ldrb	w8, [x20, #8]
  44e5ec:	mov	x25, x0
  44e5f0:	cmp	w8, #0x9
  44e5f4:	b.ne	44eaa8 <_obstack_memory_used@@Base+0x7f58>  // b.any
  44e5f8:	mov	x14, x20
  44e5fc:	cmp	x19, #0x8
  44e600:	b.ls	44cd70 <_obstack_memory_used@@Base+0x6220>  // b.plast
  44e604:	b	44cd88 <_obstack_memory_used@@Base+0x6238>
  44e608:	ldr	x9, [sp, #48]
  44e60c:	cbz	x9, 44d198 <_obstack_memory_used@@Base+0x6648>
  44e610:	mov	w20, #0xff                  	// #255
  44e614:	movk	w20, #0x4, lsl #16
  44e618:	mov	x21, x9
  44e61c:	ldr	x9, [x9, #8]
  44e620:	cbnz	x9, 44e618 <_obstack_memory_used@@Base+0x7ac8>
  44e624:	ldr	x9, [x21, #16]
  44e628:	cbnz	x9, 44e618 <_obstack_memory_used@@Base+0x7ac8>
  44e62c:	ldr	w8, [x21, #48]
  44e630:	and	w8, w8, w20
  44e634:	cmp	w8, #0x3
  44e638:	b.eq	44e66c <_obstack_memory_used@@Base+0x7b1c>  // b.none
  44e63c:	cmp	w8, #0x6
  44e640:	b.ne	44e678 <_obstack_memory_used@@Base+0x7b28>  // b.any
  44e644:	ldr	x19, [x21, #40]
  44e648:	ldr	x0, [x19]
  44e64c:	bl	404700 <free@plt>
  44e650:	ldr	x0, [x19, #8]
  44e654:	bl	404700 <free@plt>
  44e658:	ldr	x0, [x19, #16]
  44e65c:	bl	404700 <free@plt>
  44e660:	ldr	x0, [x19, #24]
  44e664:	bl	404700 <free@plt>
  44e668:	b	44e670 <_obstack_memory_used@@Base+0x7b20>
  44e66c:	ldr	x19, [x21, #40]
  44e670:	mov	x0, x19
  44e674:	bl	404700 <free@plt>
  44e678:	ldr	x8, [x21]
  44e67c:	cbz	x8, 44d198 <_obstack_memory_used@@Base+0x6648>
  44e680:	ldr	x9, [x8, #16]
  44e684:	cmp	x9, x21
  44e688:	mov	x21, x8
  44e68c:	b.eq	44e62c <_obstack_memory_used@@Base+0x7adc>  // b.none
  44e690:	mov	x21, x8
  44e694:	cbz	x9, 44e62c <_obstack_memory_used@@Base+0x7adc>
  44e698:	b	44e618 <_obstack_memory_used@@Base+0x7ac8>
  44e69c:	cmp	w8, #0x2
  44e6a0:	b.lt	44e6b4 <_obstack_memory_used@@Base+0x7b64>  // b.tstop
  44e6a4:	ldr	x8, [x24, #72]
  44e6a8:	cbnz	x8, 44d6f8 <_obstack_memory_used@@Base+0x6ba8>
  44e6ac:	ldrb	w8, [x24, #32]
  44e6b0:	tbnz	w8, #0, 44d6f8 <_obstack_memory_used@@Base+0x6ba8>
  44e6b4:	ldr	x0, [x24]
  44e6b8:	bl	404700 <free@plt>
  44e6bc:	ldr	x0, [x24, #8]
  44e6c0:	bl	404700 <free@plt>
  44e6c4:	ldr	x0, [x24, #16]
  44e6c8:	bl	404700 <free@plt>
  44e6cc:	ldr	x0, [x24, #24]
  44e6d0:	bl	404700 <free@plt>
  44e6d4:	mov	x0, x24
  44e6d8:	bl	404700 <free@plt>
  44e6dc:	ldr	w8, [x23, #128]
  44e6e0:	cmp	w8, #0xf
  44e6e4:	b.eq	44eb68 <_obstack_memory_used@@Base+0x8018>  // b.none
  44e6e8:	ldr	x0, [x23, #112]
  44e6ec:	ldr	x14, [sp, #56]
  44e6f0:	add	w9, w8, #0x1
  44e6f4:	sxtw	x8, w8
  44e6f8:	add	x8, x0, x8, lsl #6
  44e6fc:	mov	w10, #0x3                   	// #3
  44e700:	mov	x11, #0xffffffffffffffff    	// #-1
  44e704:	str	w9, [x23, #128]
  44e708:	str	xzr, [x8, #8]!
  44e70c:	stp	xzr, xzr, [x8, #16]
  44e710:	str	xzr, [x8, #8]
  44e714:	str	w10, [x8, #48]
  44e718:	stp	xzr, x25, [x8, #32]
  44e71c:	str	x8, [sp, #48]
  44e720:	str	x11, [x8, #56]
  44e724:	b	44d7ec <_obstack_memory_used@@Base+0x6c9c>
  44e728:	mov	x0, x25
  44e72c:	bl	404700 <free@plt>
  44e730:	ldr	x14, [sp, #56]
  44e734:	str	x19, [sp, #48]
  44e738:	b	44d7ec <_obstack_memory_used@@Base+0x6c9c>
  44e73c:	str	x28, [sp, #24]
  44e740:	mov	w0, #0x7                   	// #7
  44e744:	b	44e898 <_obstack_memory_used@@Base+0x7d48>
  44e748:	str	x28, [sp, #24]
  44e74c:	b	44e898 <_obstack_memory_used@@Base+0x7d48>
  44e750:	mov	w0, #0x3c8                 	// #968
  44e754:	bl	404250 <malloc@plt>
  44e758:	cbz	x0, 44e9e4 <_obstack_memory_used@@Base+0x7e94>
  44e75c:	ldr	x9, [x23, #112]
  44e760:	ldr	x14, [sp, #56]
  44e764:	mov	w8, wzr
  44e768:	str	x9, [x0]
  44e76c:	str	x0, [x23, #112]
  44e770:	str	wzr, [x23, #128]
  44e774:	b	44cc48 <_obstack_memory_used@@Base+0x60f8>
  44e778:	mov	w8, #0x2                   	// #2
  44e77c:	b	44eb90 <_obstack_memory_used@@Base+0x8040>
  44e780:	mov	w8, #0x6                   	// #6
  44e784:	b	44e9e8 <_obstack_memory_used@@Base+0x7e98>
  44e788:	mov	w0, #0x3c8                 	// #968
  44e78c:	bl	404250 <malloc@plt>
  44e790:	cbz	x0, 44e9e4 <_obstack_memory_used@@Base+0x7e94>
  44e794:	ldr	x9, [x23, #112]
  44e798:	ldr	x10, [sp, #32]
  44e79c:	ldr	x14, [sp, #56]
  44e7a0:	mov	w8, wzr
  44e7a4:	str	x9, [x0]
  44e7a8:	str	x0, [x23, #112]
  44e7ac:	str	wzr, [x23, #128]
  44e7b0:	b	44cdf0 <_obstack_memory_used@@Base+0x62a0>
  44e7b4:	mov	w0, #0x3c8                 	// #968
  44e7b8:	bl	404250 <malloc@plt>
  44e7bc:	cbz	x0, 44e9e4 <_obstack_memory_used@@Base+0x7e94>
  44e7c0:	ldr	x9, [x23, #112]
  44e7c4:	ldr	x14, [sp, #56]
  44e7c8:	mov	w8, wzr
  44e7cc:	str	x9, [x0]
  44e7d0:	str	x0, [x23, #112]
  44e7d4:	str	wzr, [x23, #128]
  44e7d8:	b	44cf98 <_obstack_memory_used@@Base+0x6448>
  44e7dc:	mov	x0, x25
  44e7e0:	bl	404700 <free@plt>
  44e7e4:	mov	x0, x24
  44e7e8:	bl	404700 <free@plt>
  44e7ec:	b	44e9e4 <_obstack_memory_used@@Base+0x7e94>
  44e7f0:	mov	w0, #0x3c8                 	// #968
  44e7f4:	bl	404250 <malloc@plt>
  44e7f8:	cbz	x0, 44e9e4 <_obstack_memory_used@@Base+0x7e94>
  44e7fc:	ldr	x9, [x23, #112]
  44e800:	ldr	x14, [sp, #56]
  44e804:	mov	w8, wzr
  44e808:	str	x9, [x0]
  44e80c:	str	x0, [x23, #112]
  44e810:	str	wzr, [x23, #128]
  44e814:	b	44ccd0 <_obstack_memory_used@@Base+0x6180>
  44e818:	mov	w0, #0x3c8                 	// #968
  44e81c:	bl	404250 <malloc@plt>
  44e820:	cbz	x0, 44eb8c <_obstack_memory_used@@Base+0x803c>
  44e824:	ldr	x9, [x23, #112]
  44e828:	ldr	x14, [sp, #56]
  44e82c:	mov	w8, wzr
  44e830:	str	x9, [x0]
  44e834:	str	x0, [x23, #112]
  44e838:	str	wzr, [x23, #128]
  44e83c:	b	44d714 <_obstack_memory_used@@Base+0x6bc4>
  44e840:	mov	w0, #0x3c8                 	// #968
  44e844:	bl	404250 <malloc@plt>
  44e848:	cbz	x0, 44eb8c <_obstack_memory_used@@Base+0x803c>
  44e84c:	ldr	x9, [x23, #112]
  44e850:	ldr	x14, [sp, #56]
  44e854:	mov	w8, wzr
  44e858:	str	x9, [x0]
  44e85c:	str	x0, [x23, #112]
  44e860:	str	wzr, [x23, #128]
  44e864:	b	44d774 <_obstack_memory_used@@Base+0x6c24>
  44e868:	mov	w0, #0x3c8                 	// #968
  44e86c:	bl	404250 <malloc@plt>
  44e870:	cbz	x0, 44eb8c <_obstack_memory_used@@Base+0x803c>
  44e874:	ldr	x9, [x23, #112]
  44e878:	ldr	x14, [sp, #56]
  44e87c:	mov	w8, wzr
  44e880:	str	x9, [x0]
  44e884:	str	x0, [x23, #112]
  44e888:	str	wzr, [x23, #128]
  44e88c:	b	44d7b4 <_obstack_memory_used@@Base+0x6c64>
  44e890:	str	x28, [sp, #24]
  44e894:	mov	w0, #0x3                   	// #3
  44e898:	ldr	x28, [sp, #24]
  44e89c:	str	w0, [x28]
  44e8a0:	mov	x0, x25
  44e8a4:	bl	404700 <free@plt>
  44e8a8:	ldr	x0, [x24]
  44e8ac:	bl	404700 <free@plt>
  44e8b0:	ldr	x0, [x24, #8]
  44e8b4:	bl	404700 <free@plt>
  44e8b8:	ldr	x0, [x24, #16]
  44e8bc:	bl	404700 <free@plt>
  44e8c0:	ldr	x0, [x24, #24]
  44e8c4:	bl	404700 <free@plt>
  44e8c8:	mov	x0, x24
  44e8cc:	bl	404700 <free@plt>
  44e8d0:	ldr	w8, [x28]
  44e8d4:	ldr	x14, [sp, #56]
  44e8d8:	str	xzr, [sp, #48]
  44e8dc:	cbz	w8, 44d7ec <_obstack_memory_used@@Base+0x6c9c>
  44e8e0:	b	44e9f0 <_obstack_memory_used@@Base+0x7ea0>
  44e8e4:	mov	w0, #0x3c8                 	// #968
  44e8e8:	bl	404250 <malloc@plt>
  44e8ec:	cbz	x0, 44e9e4 <_obstack_memory_used@@Base+0x7e94>
  44e8f0:	ldr	x9, [x23, #112]
  44e8f4:	ldr	x14, [sp, #56]
  44e8f8:	mov	w8, wzr
  44e8fc:	str	x9, [x0]
  44e900:	str	x0, [x23, #112]
  44e904:	str	wzr, [x23, #128]
  44e908:	b	44cd98 <_obstack_memory_used@@Base+0x6248>
  44e90c:	mov	w0, #0x3c8                 	// #968
  44e910:	bl	404250 <malloc@plt>
  44e914:	cbz	x0, 44ea98 <_obstack_memory_used@@Base+0x7f48>
  44e918:	ldr	x9, [x23, #112]
  44e91c:	ldr	x21, [sp, #40]
  44e920:	ldr	x14, [sp, #56]
  44e924:	mov	w8, wzr
  44e928:	str	x9, [x0]
  44e92c:	str	x0, [x23, #112]
  44e930:	str	wzr, [x23, #128]
  44e934:	b	44e4e8 <_obstack_memory_used@@Base+0x7998>
  44e938:	mov	w0, #0x3c8                 	// #968
  44e93c:	bl	404250 <malloc@plt>
  44e940:	ldr	x14, [sp, #56]
  44e944:	cbz	x0, 44e9e4 <_obstack_memory_used@@Base+0x7e94>
  44e948:	ldr	x9, [x23, #112]
  44e94c:	mov	w8, wzr
  44e950:	str	x9, [x0]
  44e954:	str	x0, [x23, #112]
  44e958:	str	wzr, [x23, #128]
  44e95c:	b	44e530 <_obstack_memory_used@@Base+0x79e0>
  44e960:	mov	w0, #0x3c8                 	// #968
  44e964:	bl	404250 <malloc@plt>
  44e968:	cbz	x0, 44eb48 <_obstack_memory_used@@Base+0x7ff8>
  44e96c:	ldr	x9, [x23, #112]
  44e970:	ldr	x21, [sp, #40]
  44e974:	ldr	x14, [sp, #56]
  44e978:	mov	w8, wzr
  44e97c:	str	x9, [x0]
  44e980:	str	x0, [x23, #112]
  44e984:	str	wzr, [x23, #128]
  44e988:	b	44d058 <_obstack_memory_used@@Base+0x6508>
  44e98c:	mov	w0, #0x3c8                 	// #968
  44e990:	bl	404250 <malloc@plt>
  44e994:	cbz	x0, 44eb54 <_obstack_memory_used@@Base+0x8004>
  44e998:	ldr	x9, [x23, #112]
  44e99c:	ldr	x21, [sp, #40]
  44e9a0:	ldr	x14, [sp, #56]
  44e9a4:	mov	w8, wzr
  44e9a8:	str	x9, [x0]
  44e9ac:	str	x0, [x23, #112]
  44e9b0:	str	wzr, [x23, #128]
  44e9b4:	b	44e498 <_obstack_memory_used@@Base+0x7948>
  44e9b8:	mov	w0, #0x3c8                 	// #968
  44e9bc:	bl	404250 <malloc@plt>
  44e9c0:	cbz	x0, 44e9e4 <_obstack_memory_used@@Base+0x7e94>
  44e9c4:	ldr	x9, [x23, #112]
  44e9c8:	ldr	x21, [sp, #40]
  44e9cc:	ldr	x14, [sp, #56]
  44e9d0:	mov	w8, wzr
  44e9d4:	str	x9, [x0]
  44e9d8:	str	x0, [x23, #112]
  44e9dc:	str	wzr, [x23, #128]
  44e9e0:	b	44e584 <_obstack_memory_used@@Base+0x7a34>
  44e9e4:	mov	w8, #0xc                   	// #12
  44e9e8:	str	xzr, [sp, #48]
  44e9ec:	str	w8, [x28]
  44e9f0:	ldr	x0, [sp, #48]
  44e9f4:	ldp	x20, x19, [sp, #272]
  44e9f8:	ldp	x22, x21, [sp, #256]
  44e9fc:	ldp	x24, x23, [sp, #240]
  44ea00:	ldp	x26, x25, [sp, #224]
  44ea04:	ldp	x28, x27, [sp, #208]
  44ea08:	ldp	x29, x30, [sp, #192]
  44ea0c:	add	sp, sp, #0x120
  44ea10:	ret
  44ea14:	mov	x20, xzr
  44ea18:	mov	x19, xzr
  44ea1c:	b	44ea28 <_obstack_memory_used@@Base+0x7ed8>
  44ea20:	mov	w19, #0x2                   	// #2
  44ea24:	mov	w20, #0x80                  	// #128
  44ea28:	bl	404690 <__ctype_b_loc@plt>
  44ea2c:	ldr	x8, [x0]
  44ea30:	ldr	x14, [sp, #56]
  44ea34:	mov	w9, #0x1                   	// #1
  44ea38:	add	x8, x8, x20, lsl #1
  44ea3c:	b	44ea54 <_obstack_memory_used@@Base+0x7f04>
  44ea40:	add	x19, x19, #0x1
  44ea44:	add	x20, x20, #0x40
  44ea48:	cmp	x19, #0x4
  44ea4c:	add	x8, x8, #0x80
  44ea50:	b.eq	44d028 <_obstack_memory_used@@Base+0x64d8>  // b.none
  44ea54:	add	x11, x23, x19, lsl #3
  44ea58:	mov	x10, xzr
  44ea5c:	add	x11, x11, #0xb8
  44ea60:	b	44ea80 <_obstack_memory_used@@Base+0x7f30>
  44ea64:	ldr	x12, [x11]
  44ea68:	lsl	x13, x9, x10
  44ea6c:	orr	x12, x12, x13
  44ea70:	str	x12, [x11]
  44ea74:	add	x10, x10, #0x1
  44ea78:	cmp	x10, #0x40
  44ea7c:	b.eq	44ea40 <_obstack_memory_used@@Base+0x7ef0>  // b.none
  44ea80:	add	x12, x20, x10
  44ea84:	cmp	x12, #0x5f
  44ea88:	b.eq	44ea64 <_obstack_memory_used@@Base+0x7f14>  // b.none
  44ea8c:	ldrh	w12, [x8, x10, lsl #1]
  44ea90:	tbz	w12, #3, 44ea74 <_obstack_memory_used@@Base+0x7f24>
  44ea94:	b	44ea64 <_obstack_memory_used@@Base+0x7f14>
  44ea98:	ldr	x21, [sp, #40]
  44ea9c:	ldr	x14, [sp, #56]
  44eaa0:	mov	x20, xzr
  44eaa4:	b	44e520 <_obstack_memory_used@@Base+0x79d0>
  44eaa8:	cbz	x25, 44eb38 <_obstack_memory_used@@Base+0x7fe8>
  44eaac:	mov	w19, #0xff                  	// #255
  44eab0:	movk	w19, #0x4, lsl #16
  44eab4:	mov	x21, x25
  44eab8:	ldr	x25, [x25, #8]
  44eabc:	cbnz	x25, 44eab4 <_obstack_memory_used@@Base+0x7f64>
  44eac0:	ldr	x25, [x21, #16]
  44eac4:	cbnz	x25, 44eab4 <_obstack_memory_used@@Base+0x7f64>
  44eac8:	ldr	w8, [x21, #48]
  44eacc:	and	w8, w8, w19
  44ead0:	cmp	w8, #0x3
  44ead4:	b.eq	44eb08 <_obstack_memory_used@@Base+0x7fb8>  // b.none
  44ead8:	cmp	w8, #0x6
  44eadc:	b.ne	44eb14 <_obstack_memory_used@@Base+0x7fc4>  // b.any
  44eae0:	ldr	x20, [x21, #40]
  44eae4:	ldr	x0, [x20]
  44eae8:	bl	404700 <free@plt>
  44eaec:	ldr	x0, [x20, #8]
  44eaf0:	bl	404700 <free@plt>
  44eaf4:	ldr	x0, [x20, #16]
  44eaf8:	bl	404700 <free@plt>
  44eafc:	ldr	x0, [x20, #24]
  44eb00:	bl	404700 <free@plt>
  44eb04:	b	44eb0c <_obstack_memory_used@@Base+0x7fbc>
  44eb08:	ldr	x20, [x21, #40]
  44eb0c:	mov	x0, x20
  44eb10:	bl	404700 <free@plt>
  44eb14:	ldr	x8, [x21]
  44eb18:	cbz	x8, 44eb38 <_obstack_memory_used@@Base+0x7fe8>
  44eb1c:	ldr	x25, [x8, #16]
  44eb20:	cmp	x25, x21
  44eb24:	mov	x21, x8
  44eb28:	b.eq	44eac8 <_obstack_memory_used@@Base+0x7f78>  // b.none
  44eb2c:	mov	x21, x8
  44eb30:	cbz	x25, 44eac8 <_obstack_memory_used@@Base+0x7f78>
  44eb34:	b	44eab4 <_obstack_memory_used@@Base+0x7f64>
  44eb38:	mov	w8, #0x8                   	// #8
  44eb3c:	b	44e9e8 <_obstack_memory_used@@Base+0x7e98>
  44eb40:	mov	w0, #0xb                   	// #11
  44eb44:	b	44e898 <_obstack_memory_used@@Base+0x7d48>
  44eb48:	mov	x19, xzr
  44eb4c:	mov	w8, #0x9                   	// #9
  44eb50:	b	44eb5c <_obstack_memory_used@@Base+0x800c>
  44eb54:	mov	x19, xzr
  44eb58:	mov	w8, #0xa                   	// #10
  44eb5c:	ldr	x21, [sp, #40]
  44eb60:	ldr	x14, [sp, #56]
  44eb64:	b	44e4d4 <_obstack_memory_used@@Base+0x7984>
  44eb68:	mov	w0, #0x3c8                 	// #968
  44eb6c:	bl	404250 <malloc@plt>
  44eb70:	cbz	x0, 44eb8c <_obstack_memory_used@@Base+0x803c>
  44eb74:	ldr	x9, [x23, #112]
  44eb78:	mov	w8, wzr
  44eb7c:	str	x9, [x0]
  44eb80:	str	x0, [x23, #112]
  44eb84:	str	wzr, [x23, #128]
  44eb88:	b	44e6ec <_obstack_memory_used@@Base+0x7b9c>
  44eb8c:	mov	w8, #0xc                   	// #12
  44eb90:	str	w8, [x28]
  44eb94:	b	44e8a0 <_obstack_memory_used@@Base+0x7d50>
  44eb98:	mov	x0, x22
  44eb9c:	bl	404700 <free@plt>
  44eba0:	ldr	x0, [sp]
  44eba4:	bl	404700 <free@plt>
  44eba8:	mov	w0, #0xc                   	// #12
  44ebac:	b	44e898 <_obstack_memory_used@@Base+0x7d48>
  44ebb0:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  44ebb4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44ebb8:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44ebbc:	add	x0, x0, #0x3e8
  44ebc0:	add	x1, x1, #0xbde
  44ebc4:	add	x3, x3, #0xbea
  44ebc8:	mov	w2, #0xced                 	// #3309
  44ebcc:	bl	404a00 <__assert_fail@plt>
  44ebd0:	sub	sp, sp, #0x60
  44ebd4:	stp	x26, x25, [sp, #32]
  44ebd8:	stp	x20, x19, [sp, #80]
  44ebdc:	mov	x26, x1
  44ebe0:	mov	x20, x0
  44ebe4:	mov	w0, #0x20                  	// #32
  44ebe8:	mov	w1, #0x1                   	// #1
  44ebec:	stp	x29, x30, [sp, #16]
  44ebf0:	stp	x24, x23, [sp, #48]
  44ebf4:	stp	x22, x21, [sp, #64]
  44ebf8:	add	x29, sp, #0x10
  44ebfc:	mov	x21, x5
  44ec00:	mov	w23, w4
  44ec04:	mov	x24, x3
  44ec08:	mov	x25, x2
  44ec0c:	str	xzr, [sp, #8]
  44ec10:	bl	404410 <calloc@plt>
  44ec14:	cbz	x0, 44eed0 <_obstack_memory_used@@Base+0x8380>
  44ec18:	mov	x22, x0
  44ec1c:	mov	w0, #0x50                  	// #80
  44ec20:	mov	w1, #0x1                   	// #1
  44ec24:	bl	404410 <calloc@plt>
  44ec28:	cbz	x0, 44ee10 <_obstack_memory_used@@Base+0x82c0>
  44ec2c:	mov	x19, x0
  44ec30:	and	w8, w23, #0x1
  44ec34:	strb	w8, [x0, #32]
  44ec38:	add	x3, sp, #0x8
  44ec3c:	mov	x0, x26
  44ec40:	mov	x1, x22
  44ec44:	mov	x2, x19
  44ec48:	mov	x4, x25
  44ec4c:	mov	x5, xzr
  44ec50:	bl	44f310 <_obstack_memory_used@@Base+0x87c0>
  44ec54:	cbnz	w0, 44ee18 <_obstack_memory_used@@Base+0x82c8>
  44ec58:	ldrb	w8, [x24]
  44ec5c:	cbz	w8, 44ec88 <_obstack_memory_used@@Base+0x8138>
  44ec60:	add	x9, x24, #0x1
  44ec64:	mov	w10, #0x1                   	// #1
  44ec68:	lsr	w11, w8, #3
  44ec6c:	and	x11, x11, #0x18
  44ec70:	ldr	x12, [x22, x11]
  44ec74:	lsl	x8, x10, x8
  44ec78:	orr	x8, x12, x8
  44ec7c:	str	x8, [x22, x11]
  44ec80:	ldrb	w8, [x9], #1
  44ec84:	cbnz	w8, 44ec68 <_obstack_memory_used@@Base+0x8118>
  44ec88:	tbz	w23, #0, 44ec9c <_obstack_memory_used@@Base+0x814c>
  44ec8c:	ldp	q0, q1, [x22]
  44ec90:	mvn	v0.16b, v0.16b
  44ec94:	mvn	v1.16b, v1.16b
  44ec98:	stp	q0, q1, [x22]
  44ec9c:	ldr	w8, [x20, #180]
  44eca0:	cmp	w8, #0x2
  44eca4:	b.lt	44ece4 <_obstack_memory_used@@Base+0x8194>  // b.tstop
  44eca8:	ldr	x8, [x20, #120]
  44ecac:	ldp	x10, x11, [x22]
  44ecb0:	ldr	x9, [x8]
  44ecb4:	and	x9, x10, x9
  44ecb8:	str	x9, [x22]
  44ecbc:	ldr	x9, [x8, #8]
  44ecc0:	and	x9, x11, x9
  44ecc4:	str	x9, [x22, #8]
  44ecc8:	ldr	x9, [x8, #16]
  44eccc:	ldp	x10, x11, [x22, #16]
  44ecd0:	and	x9, x10, x9
  44ecd4:	str	x9, [x22, #16]
  44ecd8:	ldr	x8, [x8, #24]
  44ecdc:	and	x8, x11, x8
  44ece0:	str	x8, [x22, #24]
  44ece4:	ldr	w8, [x20, #128]
  44ece8:	cmp	w8, #0xf
  44ecec:	b.eq	44ee58 <_obstack_memory_used@@Base+0x8308>  // b.none
  44ecf0:	ldr	x0, [x20, #112]
  44ecf4:	add	w9, w8, #0x1
  44ecf8:	sxtw	x8, w8
  44ecfc:	add	x23, x0, x8, lsl #6
  44ed00:	str	w9, [x20, #128]
  44ed04:	mov	w9, #0x3                   	// #3
  44ed08:	mov	x8, #0xffffffffffffffff    	// #-1
  44ed0c:	str	xzr, [x23, #8]!
  44ed10:	stp	xzr, xzr, [x23, #16]
  44ed14:	str	xzr, [x23, #8]
  44ed18:	str	w9, [x23, #48]
  44ed1c:	stp	xzr, x22, [x23, #32]
  44ed20:	str	x8, [x23, #56]
  44ed24:	ldr	w8, [x20, #180]
  44ed28:	cmp	w8, #0x2
  44ed2c:	b.lt	44edc8 <_obstack_memory_used@@Base+0x8278>  // b.tstop
  44ed30:	ldrb	w9, [x20, #176]
  44ed34:	ldr	w8, [x20, #128]
  44ed38:	orr	w9, w9, #0x2
  44ed3c:	cmp	w8, #0xf
  44ed40:	strb	w9, [x20, #176]
  44ed44:	b.eq	44ee7c <_obstack_memory_used@@Base+0x832c>  // b.none
  44ed48:	ldr	x0, [x20, #112]
  44ed4c:	add	w9, w8, #0x1
  44ed50:	sxtw	x8, w8
  44ed54:	add	x21, x0, x8, lsl #6
  44ed58:	str	w9, [x20, #128]
  44ed5c:	mov	w9, #0x6                   	// #6
  44ed60:	mov	x8, #0xffffffffffffffff    	// #-1
  44ed64:	str	xzr, [x21, #8]!
  44ed68:	stp	xzr, xzr, [x21, #16]
  44ed6c:	str	xzr, [x21, #8]
  44ed70:	str	w9, [x21, #48]
  44ed74:	stp	xzr, x19, [x21, #32]
  44ed78:	str	x8, [x21, #56]
  44ed7c:	ldr	w8, [x20, #128]
  44ed80:	cmp	w8, #0xf
  44ed84:	b.eq	44eee0 <_obstack_memory_used@@Base+0x8390>  // b.none
  44ed88:	ldr	x0, [x20, #112]
  44ed8c:	add	w9, w8, #0x1
  44ed90:	sxtw	x8, w8
  44ed94:	add	x8, x0, x8, lsl #6
  44ed98:	str	w9, [x20, #128]
  44ed9c:	mov	w9, #0xa                   	// #10
  44eda0:	mov	x10, #0xffffffffffffffff    	// #-1
  44eda4:	str	xzr, [x8, #8]!
  44eda8:	stp	x23, x21, [x8, #8]
  44edac:	str	w9, [x8, #48]
  44edb0:	stp	xzr, xzr, [x8, #24]
  44edb4:	str	x10, [x8, #56]
  44edb8:	str	x8, [x23]
  44edbc:	str	x8, [x21]
  44edc0:	mov	x23, x8
  44edc4:	b	44edf0 <_obstack_memory_used@@Base+0x82a0>
  44edc8:	ldr	x0, [x19]
  44edcc:	bl	404700 <free@plt>
  44edd0:	ldr	x0, [x19, #8]
  44edd4:	bl	404700 <free@plt>
  44edd8:	ldr	x0, [x19, #16]
  44eddc:	bl	404700 <free@plt>
  44ede0:	ldr	x0, [x19, #24]
  44ede4:	bl	404700 <free@plt>
  44ede8:	mov	x0, x19
  44edec:	bl	404700 <free@plt>
  44edf0:	mov	x0, x23
  44edf4:	ldp	x20, x19, [sp, #80]
  44edf8:	ldp	x22, x21, [sp, #64]
  44edfc:	ldp	x24, x23, [sp, #48]
  44ee00:	ldp	x26, x25, [sp, #32]
  44ee04:	ldp	x29, x30, [sp, #16]
  44ee08:	add	sp, sp, #0x60
  44ee0c:	ret
  44ee10:	mov	x0, x22
  44ee14:	b	44eecc <_obstack_memory_used@@Base+0x837c>
  44ee18:	mov	w25, w0
  44ee1c:	mov	x0, x22
  44ee20:	bl	404700 <free@plt>
  44ee24:	ldr	x0, [x19]
  44ee28:	bl	404700 <free@plt>
  44ee2c:	ldr	x0, [x19, #8]
  44ee30:	bl	404700 <free@plt>
  44ee34:	ldr	x0, [x19, #16]
  44ee38:	bl	404700 <free@plt>
  44ee3c:	ldr	x0, [x19, #24]
  44ee40:	bl	404700 <free@plt>
  44ee44:	mov	x0, x19
  44ee48:	bl	404700 <free@plt>
  44ee4c:	mov	x23, xzr
  44ee50:	str	w25, [x21]
  44ee54:	b	44edf0 <_obstack_memory_used@@Base+0x82a0>
  44ee58:	mov	w0, #0x3c8                 	// #968
  44ee5c:	bl	404250 <malloc@plt>
  44ee60:	cbz	x0, 44eea0 <_obstack_memory_used@@Base+0x8350>
  44ee64:	ldr	x9, [x20, #112]
  44ee68:	mov	w8, wzr
  44ee6c:	str	x9, [x0]
  44ee70:	str	x0, [x20, #112]
  44ee74:	str	wzr, [x20, #128]
  44ee78:	b	44ecf4 <_obstack_memory_used@@Base+0x81a4>
  44ee7c:	mov	w0, #0x3c8                 	// #968
  44ee80:	bl	404250 <malloc@plt>
  44ee84:	cbz	x0, 44eea0 <_obstack_memory_used@@Base+0x8350>
  44ee88:	ldr	x9, [x20, #112]
  44ee8c:	mov	w8, wzr
  44ee90:	str	x9, [x0]
  44ee94:	str	x0, [x20, #112]
  44ee98:	str	wzr, [x20, #128]
  44ee9c:	b	44ed4c <_obstack_memory_used@@Base+0x81fc>
  44eea0:	mov	x0, x22
  44eea4:	bl	404700 <free@plt>
  44eea8:	ldr	x0, [x19]
  44eeac:	bl	404700 <free@plt>
  44eeb0:	ldr	x0, [x19, #8]
  44eeb4:	bl	404700 <free@plt>
  44eeb8:	ldr	x0, [x19, #16]
  44eebc:	bl	404700 <free@plt>
  44eec0:	ldr	x0, [x19, #24]
  44eec4:	bl	404700 <free@plt>
  44eec8:	mov	x0, x19
  44eecc:	bl	404700 <free@plt>
  44eed0:	mov	x23, xzr
  44eed4:	mov	w8, #0xc                   	// #12
  44eed8:	str	w8, [x21]
  44eedc:	b	44edf0 <_obstack_memory_used@@Base+0x82a0>
  44eee0:	mov	w0, #0x3c8                 	// #968
  44eee4:	bl	404250 <malloc@plt>
  44eee8:	cbz	x0, 44ef04 <_obstack_memory_used@@Base+0x83b4>
  44eeec:	ldr	x9, [x20, #112]
  44eef0:	mov	w8, wzr
  44eef4:	str	x9, [x0]
  44eef8:	str	x0, [x20, #112]
  44eefc:	str	wzr, [x20, #128]
  44ef00:	b	44ed8c <_obstack_memory_used@@Base+0x823c>
  44ef04:	mov	x23, xzr
  44ef08:	b	44edf0 <_obstack_memory_used@@Base+0x82a0>
  44ef0c:	ldr	x9, [x1, #104]
  44ef10:	ldr	x8, [x1, #72]
  44ef14:	cmp	x9, x8
  44ef18:	b.le	44ef8c <_obstack_memory_used@@Base+0x843c>
  44ef1c:	ldr	x9, [x1, #8]
  44ef20:	ldrb	w8, [x9, x8]
  44ef24:	strb	w8, [x0]
  44ef28:	ldr	w9, [x1, #144]
  44ef2c:	cmp	w9, #0x2
  44ef30:	b.lt	44ef54 <_obstack_memory_used@@Base+0x8404>  // b.tstop
  44ef34:	ldr	x9, [x1, #72]
  44ef38:	ldr	x10, [x1, #48]
  44ef3c:	cmp	x9, x10
  44ef40:	b.eq	44ef54 <_obstack_memory_used@@Base+0x8404>  // b.none
  44ef44:	ldr	x10, [x1, #16]
  44ef48:	ldr	w9, [x10, x9, lsl #2]
  44ef4c:	cmn	w9, #0x1
  44ef50:	b.eq	44f00c <_obstack_memory_used@@Base+0x84bc>  // b.none
  44ef54:	tbz	w2, #0, 44ef9c <_obstack_memory_used@@Base+0x844c>
  44ef58:	cmp	w8, #0x5c
  44ef5c:	b.ne	44ef9c <_obstack_memory_used@@Base+0x844c>  // b.any
  44ef60:	ldr	x8, [x1, #72]
  44ef64:	ldr	x9, [x1, #88]
  44ef68:	add	x8, x8, #0x1
  44ef6c:	cmp	x8, x9
  44ef70:	b.ge	44f00c <_obstack_memory_used@@Base+0x84bc>  // b.tcont
  44ef74:	ldr	x9, [x1, #8]
  44ef78:	str	x8, [x1, #72]
  44ef7c:	ldrb	w9, [x9, x8]
  44ef80:	mov	w8, #0x1                   	// #1
  44ef84:	strb	w9, [x0]
  44ef88:	b	44f010 <_obstack_memory_used@@Base+0x84c0>
  44ef8c:	mov	w9, #0x2                   	// #2
  44ef90:	strb	w9, [x0, #8]
  44ef94:	mov	w0, wzr
  44ef98:	ret
  44ef9c:	cmp	w8, #0x5c
  44efa0:	b.gt	44eff4 <_obstack_memory_used@@Base+0x84a4>
  44efa4:	cmp	w8, #0x2d
  44efa8:	b.eq	44f01c <_obstack_memory_used@@Base+0x84cc>  // b.none
  44efac:	cmp	w8, #0x5b
  44efb0:	b.ne	44f00c <_obstack_memory_used@@Base+0x84bc>  // b.any
  44efb4:	ldr	x8, [x1, #72]
  44efb8:	ldr	x9, [x1, #88]
  44efbc:	add	x8, x8, #0x1
  44efc0:	cmp	x8, x9
  44efc4:	b.ge	44f034 <_obstack_memory_used@@Base+0x84e4>  // b.tcont
  44efc8:	ldr	x9, [x1, #8]
  44efcc:	ldrb	w8, [x9, x8]
  44efd0:	cmp	w8, #0x3d
  44efd4:	strb	w8, [x0]
  44efd8:	b.eq	44f050 <_obstack_memory_used@@Base+0x8500>  // b.none
  44efdc:	cmp	w8, #0x3a
  44efe0:	b.eq	44f058 <_obstack_memory_used@@Base+0x8508>  // b.none
  44efe4:	cmp	w8, #0x2e
  44efe8:	b.ne	44f038 <_obstack_memory_used@@Base+0x84e8>  // b.any
  44efec:	mov	w8, #0x1a                  	// #26
  44eff0:	b	44f060 <_obstack_memory_used@@Base+0x8510>
  44eff4:	cmp	w8, #0x5d
  44eff8:	b.eq	44f024 <_obstack_memory_used@@Base+0x84d4>  // b.none
  44effc:	cmp	w8, #0x5e
  44f000:	b.ne	44f00c <_obstack_memory_used@@Base+0x84bc>  // b.any
  44f004:	mov	w8, #0x19                  	// #25
  44f008:	b	44f028 <_obstack_memory_used@@Base+0x84d8>
  44f00c:	mov	w8, #0x1                   	// #1
  44f010:	strb	w8, [x0, #8]
  44f014:	mov	w0, w8
  44f018:	ret
  44f01c:	mov	w8, #0x16                  	// #22
  44f020:	b	44f028 <_obstack_memory_used@@Base+0x84d8>
  44f024:	mov	w8, #0x15                  	// #21
  44f028:	strb	w8, [x0, #8]
  44f02c:	mov	w0, #0x1                   	// #1
  44f030:	ret
  44f034:	strb	wzr, [x0]
  44f038:	mov	w8, #0x1                   	// #1
  44f03c:	mov	w9, #0x5b                  	// #91
  44f040:	strb	w8, [x0, #8]
  44f044:	strb	w9, [x0]
  44f048:	mov	w0, w8
  44f04c:	ret
  44f050:	mov	w8, #0x1c                  	// #28
  44f054:	b	44f060 <_obstack_memory_used@@Base+0x8510>
  44f058:	tbz	w2, #2, 44f038 <_obstack_memory_used@@Base+0x84e8>
  44f05c:	mov	w8, #0x1e                  	// #30
  44f060:	strb	w8, [x0, #8]
  44f064:	mov	w0, #0x2                   	// #2
  44f068:	ret
  44f06c:	sub	sp, sp, #0x30
  44f070:	stp	x29, x30, [sp, #32]
  44f074:	ldr	w8, [x1, #144]
  44f078:	ldr	x9, [x1, #72]
  44f07c:	add	x29, sp, #0x20
  44f080:	cmp	w8, #0x1
  44f084:	b.eq	44f0f4 <_obstack_memory_used@@Base+0x85a4>  // b.none
  44f088:	ldr	x8, [x1, #48]
  44f08c:	add	x10, x9, #0x1
  44f090:	cmp	x10, x8
  44f094:	b.ge	44f0f4 <_obstack_memory_used@@Base+0x85a4>  // b.tcont
  44f098:	ldr	x10, [x1, #16]
  44f09c:	sub	x8, x8, x9
  44f0a0:	mov	w11, #0x1                   	// #1
  44f0a4:	add	x12, x10, x9, lsl #2
  44f0a8:	ldr	w13, [x12, x11, lsl #2]
  44f0ac:	cmn	w13, #0x1
  44f0b0:	b.ne	44f0c8 <_obstack_memory_used@@Base+0x8578>  // b.any
  44f0b4:	add	x11, x11, #0x1
  44f0b8:	cmp	x8, x11
  44f0bc:	b.ne	44f0a8 <_obstack_memory_used@@Base+0x8558>  // b.any
  44f0c0:	mov	x11, x8
  44f0c4:	b	44f0d0 <_obstack_memory_used@@Base+0x8580>
  44f0c8:	cmp	w11, #0x2
  44f0cc:	b.lt	44f0f4 <_obstack_memory_used@@Base+0x85a4>  // b.tstop
  44f0d0:	mov	w12, #0x1                   	// #1
  44f0d4:	str	w12, [x0]
  44f0d8:	ldr	w9, [x10, x9, lsl #2]
  44f0dc:	mov	w8, wzr
  44f0e0:	str	w9, [x0, #8]
  44f0e4:	ldr	x9, [x1, #72]
  44f0e8:	add	x9, x9, w11, sxtw
  44f0ec:	str	x9, [x1, #72]
  44f0f0:	b	44f2f8 <_obstack_memory_used@@Base+0x87a8>
  44f0f4:	add	x8, x9, w3, sxtw
  44f0f8:	str	x8, [x1, #72]
  44f0fc:	ldrb	w10, [x2, #8]
  44f100:	sub	w9, w10, #0x16
  44f104:	cmp	w9, #0x8
  44f108:	b.hi	44f2e8 <_obstack_memory_used@@Base+0x8798>  // b.pmore
  44f10c:	adrp	x11, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f110:	add	x11, x11, #0x970
  44f114:	adr	x12, 44f124 <_obstack_memory_used@@Base+0x85d4>
  44f118:	ldrb	w13, [x11, x9]
  44f11c:	add	x12, x12, x13, lsl #2
  44f120:	br	x12
  44f124:	ldr	x9, [x1, #104]
  44f128:	cmp	x9, x8
  44f12c:	b.le	44f26c <_obstack_memory_used@@Base+0x871c>
  44f130:	ldrb	w9, [x2]
  44f134:	mov	x8, xzr
  44f138:	and	w10, w10, #0xff
  44f13c:	cmp	w10, #0x1e
  44f140:	b.ne	44f14c <_obstack_memory_used@@Base+0x85fc>  // b.any
  44f144:	ldrb	w10, [x1, #139]
  44f148:	cbnz	w10, 44f1a0 <_obstack_memory_used@@Base+0x8650>
  44f14c:	ldr	x10, [x1, #72]
  44f150:	ldr	x11, [x1, #8]
  44f154:	add	x12, x10, #0x1
  44f158:	str	x12, [x1, #72]
  44f15c:	ldrb	w10, [x11, x10]
  44f160:	ldr	x11, [x1, #104]
  44f164:	cmp	x11, x12
  44f168:	b.le	44f26c <_obstack_memory_used@@Base+0x871c>
  44f16c:	cmp	w9, w10, uxtb
  44f170:	b.ne	44f184 <_obstack_memory_used@@Base+0x8634>  // b.any
  44f174:	ldr	x11, [x1, #8]
  44f178:	ldrb	w11, [x11, x12]
  44f17c:	cmp	w11, #0x5d
  44f180:	b.eq	44f274 <_obstack_memory_used@@Base+0x8724>  // b.none
  44f184:	ldr	x11, [x0, #8]
  44f188:	strb	w10, [x11, x8]
  44f18c:	add	x8, x8, #0x1
  44f190:	cmp	x8, #0x20
  44f194:	b.eq	44f26c <_obstack_memory_used@@Base+0x871c>  // b.none
  44f198:	ldrb	w10, [x2, #8]
  44f19c:	b	44f138 <_obstack_memory_used@@Base+0x85e8>
  44f1a0:	ldrb	w10, [x1, #140]
  44f1a4:	cbz	w10, 44f228 <_obstack_memory_used@@Base+0x86d8>
  44f1a8:	ldr	x11, [x1, #72]
  44f1ac:	ldr	x13, [x1, #48]
  44f1b0:	subs	x12, x13, x11
  44f1b4:	b.eq	44f1c8 <_obstack_memory_used@@Base+0x8678>  // b.none
  44f1b8:	ldr	x10, [x1, #16]
  44f1bc:	ldr	w10, [x10, x11, lsl #2]
  44f1c0:	cmn	w10, #0x1
  44f1c4:	b.eq	44f248 <_obstack_memory_used@@Base+0x86f8>  // b.none
  44f1c8:	ldr	x10, [x1, #24]
  44f1cc:	ldr	x14, [x1, #40]
  44f1d0:	ldr	x15, [x1]
  44f1d4:	ldr	x10, [x10, x11, lsl #3]
  44f1d8:	add	x10, x14, x10
  44f1dc:	ldrsb	w10, [x15, x10]
  44f1e0:	tbnz	w10, #31, 44f248 <_obstack_memory_used@@Base+0x86f8>
  44f1e4:	ldr	w14, [x1, #144]
  44f1e8:	cmp	w14, #0x1
  44f1ec:	b.eq	44f25c <_obstack_memory_used@@Base+0x870c>  // b.none
  44f1f0:	add	x14, x11, #0x1
  44f1f4:	cmp	x14, x13
  44f1f8:	b.ge	44f25c <_obstack_memory_used@@Base+0x870c>  // b.tcont
  44f1fc:	ldr	x13, [x1, #16]
  44f200:	add	x14, x13, x11, lsl #2
  44f204:	mov	w13, #0x1                   	// #1
  44f208:	ldr	w15, [x14, x13, lsl #2]
  44f20c:	cmn	w15, #0x1
  44f210:	b.ne	44f260 <_obstack_memory_used@@Base+0x8710>  // b.any
  44f214:	add	x13, x13, #0x1
  44f218:	cmp	x12, x13
  44f21c:	b.ne	44f208 <_obstack_memory_used@@Base+0x86b8>  // b.any
  44f220:	mov	x13, x12
  44f224:	b	44f260 <_obstack_memory_used@@Base+0x8710>
  44f228:	ldr	x10, [x1, #72]
  44f22c:	ldr	x11, [x1, #40]
  44f230:	ldr	x13, [x1]
  44f234:	add	x12, x10, #0x1
  44f238:	str	x12, [x1, #72]
  44f23c:	add	x10, x10, x11
  44f240:	ldrb	w10, [x13, x10]
  44f244:	b	44f160 <_obstack_memory_used@@Base+0x8610>
  44f248:	ldr	x10, [x1, #8]
  44f24c:	add	x12, x11, #0x1
  44f250:	str	x12, [x1, #72]
  44f254:	ldrb	w10, [x10, x11]
  44f258:	b	44f160 <_obstack_memory_used@@Base+0x8610>
  44f25c:	mov	w13, #0x1                   	// #1
  44f260:	add	x12, x11, w13, sxtw
  44f264:	str	x12, [x1, #72]
  44f268:	b	44f160 <_obstack_memory_used@@Base+0x8610>
  44f26c:	mov	w8, #0x7                   	// #7
  44f270:	b	44f2f8 <_obstack_memory_used@@Base+0x87a8>
  44f274:	add	x9, x12, #0x1
  44f278:	str	x9, [x1, #72]
  44f27c:	ldr	x9, [x0, #8]
  44f280:	strb	wzr, [x9, w8, uxtw]
  44f284:	ldrb	w8, [x2, #8]
  44f288:	cmp	w8, #0x1e
  44f28c:	b.eq	44f2ac <_obstack_memory_used@@Base+0x875c>  // b.none
  44f290:	cmp	w8, #0x1c
  44f294:	b.eq	44f2b4 <_obstack_memory_used@@Base+0x8764>  // b.none
  44f298:	cmp	w8, #0x1a
  44f29c:	mov	w8, wzr
  44f2a0:	b.ne	44f2f8 <_obstack_memory_used@@Base+0x87a8>  // b.any
  44f2a4:	mov	w9, #0x3                   	// #3
  44f2a8:	b	44f2b8 <_obstack_memory_used@@Base+0x8768>
  44f2ac:	mov	w9, #0x4                   	// #4
  44f2b0:	b	44f2b8 <_obstack_memory_used@@Base+0x8768>
  44f2b4:	mov	w9, #0x2                   	// #2
  44f2b8:	mov	w8, wzr
  44f2bc:	str	w9, [x0]
  44f2c0:	b	44f2f8 <_obstack_memory_used@@Base+0x87a8>
  44f2c4:	tbnz	w5, #0, 44f2e8 <_obstack_memory_used@@Base+0x8798>
  44f2c8:	stp	x2, x0, [sp]
  44f2cc:	add	x0, sp, #0x10
  44f2d0:	mov	x2, x4
  44f2d4:	bl	44ef0c <_obstack_memory_used@@Base+0x83bc>
  44f2d8:	ldrb	w8, [sp, #24]
  44f2dc:	ldp	x2, x0, [sp]
  44f2e0:	cmp	w8, #0x15
  44f2e4:	b.ne	44f308 <_obstack_memory_used@@Base+0x87b8>  // b.any
  44f2e8:	str	wzr, [x0]
  44f2ec:	ldrb	w9, [x2]
  44f2f0:	mov	w8, wzr
  44f2f4:	strb	w9, [x0, #8]
  44f2f8:	ldp	x29, x30, [sp, #32]
  44f2fc:	mov	w0, w8
  44f300:	add	sp, sp, #0x30
  44f304:	ret
  44f308:	mov	w8, #0xb                   	// #11
  44f30c:	b	44f2f8 <_obstack_memory_used@@Base+0x87a8>
  44f310:	stp	x29, x30, [sp, #-64]!
  44f314:	stp	x24, x23, [sp, #16]
  44f318:	stp	x22, x21, [sp, #32]
  44f31c:	stp	x20, x19, [sp, #48]
  44f320:	mov	x21, x4
  44f324:	mov	x23, x3
  44f328:	mov	x22, x2
  44f32c:	mov	x19, x1
  44f330:	mov	x20, x0
  44f334:	mov	x29, sp
  44f338:	tbz	w5, #22, 44f36c <_obstack_memory_used@@Base+0x881c>
  44f33c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f340:	add	x1, x1, #0xc50
  44f344:	mov	x0, x21
  44f348:	bl	404660 <strcmp@plt>
  44f34c:	cbz	w0, 44f364 <_obstack_memory_used@@Base+0x8814>
  44f350:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f354:	add	x1, x1, #0xc56
  44f358:	mov	x0, x21
  44f35c:	bl	404660 <strcmp@plt>
  44f360:	cbnz	w0, 44f36c <_obstack_memory_used@@Base+0x881c>
  44f364:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f368:	add	x21, x21, #0xc5c
  44f36c:	ldr	x8, [x23]
  44f370:	ldr	x9, [x22, #72]
  44f374:	cmp	x8, x9
  44f378:	b.eq	44f970 <_obstack_memory_used@@Base+0x8e20>  // b.none
  44f37c:	mov	x0, x21
  44f380:	bl	403ff0 <wctype@plt>
  44f384:	ldr	x8, [x22, #72]
  44f388:	ldr	x9, [x22, #24]
  44f38c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f390:	add	x1, x1, #0xbd0
  44f394:	add	x10, x8, #0x1
  44f398:	str	x10, [x22, #72]
  44f39c:	str	x0, [x9, x8, lsl #3]
  44f3a0:	mov	x0, x21
  44f3a4:	bl	404660 <strcmp@plt>
  44f3a8:	cbz	w0, 44f490 <_obstack_memory_used@@Base+0x8940>
  44f3ac:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f3b0:	add	x1, x1, #0xc62
  44f3b4:	mov	x0, x21
  44f3b8:	bl	404660 <strcmp@plt>
  44f3bc:	cbz	w0, 44f4d8 <_obstack_memory_used@@Base+0x8988>
  44f3c0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f3c4:	add	x1, x1, #0xc56
  44f3c8:	mov	x0, x21
  44f3cc:	bl	404660 <strcmp@plt>
  44f3d0:	cbz	w0, 44f520 <_obstack_memory_used@@Base+0x89d0>
  44f3d4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f3d8:	add	x1, x1, #0xbd8
  44f3dc:	mov	x0, x21
  44f3e0:	bl	404660 <strcmp@plt>
  44f3e4:	cbz	w0, 44f568 <_obstack_memory_used@@Base+0x8a18>
  44f3e8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f3ec:	add	x1, x1, #0xc5c
  44f3f0:	mov	x0, x21
  44f3f4:	bl	404660 <strcmp@plt>
  44f3f8:	cbz	w0, 44f5b0 <_obstack_memory_used@@Base+0x8a60>
  44f3fc:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f400:	add	x1, x1, #0xc81
  44f404:	mov	x0, x21
  44f408:	bl	404660 <strcmp@plt>
  44f40c:	cbz	w0, 44f5f8 <_obstack_memory_used@@Base+0x8aa8>
  44f410:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f414:	add	x1, x1, #0xc68
  44f418:	mov	x0, x21
  44f41c:	bl	404660 <strcmp@plt>
  44f420:	cbz	w0, 44f658 <_obstack_memory_used@@Base+0x8b08>
  44f424:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f428:	add	x1, x1, #0xc50
  44f42c:	mov	x0, x21
  44f430:	bl	404660 <strcmp@plt>
  44f434:	cbz	w0, 44f6a4 <_obstack_memory_used@@Base+0x8b54>
  44f438:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f43c:	add	x1, x1, #0xc6e
  44f440:	mov	x0, x21
  44f444:	bl	404660 <strcmp@plt>
  44f448:	cbz	w0, 44f6f0 <_obstack_memory_used@@Base+0x8ba0>
  44f44c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f450:	add	x1, x1, #0xc74
  44f454:	mov	x0, x21
  44f458:	bl	404660 <strcmp@plt>
  44f45c:	cbz	w0, 44f774 <_obstack_memory_used@@Base+0x8c24>
  44f460:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f464:	add	x1, x1, #0xc7a
  44f468:	mov	x0, x21
  44f46c:	bl	404660 <strcmp@plt>
  44f470:	cbz	w0, 44f7f8 <_obstack_memory_used@@Base+0x8ca8>
  44f474:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44f478:	add	x1, x1, #0xc80
  44f47c:	mov	x0, x21
  44f480:	bl	404660 <strcmp@plt>
  44f484:	cbz	w0, 44f87c <_obstack_memory_used@@Base+0x8d2c>
  44f488:	mov	w0, #0x4                   	// #4
  44f48c:	b	44f644 <_obstack_memory_used@@Base+0x8af4>
  44f490:	bl	404690 <__ctype_b_loc@plt>
  44f494:	ldr	x8, [x0]
  44f498:	mov	x9, xzr
  44f49c:	mov	w10, #0x1                   	// #1
  44f4a0:	cbz	x20, 44f4b4 <_obstack_memory_used@@Base+0x8964>
  44f4a4:	b	44f74c <_obstack_memory_used@@Base+0x8bfc>
  44f4a8:	add	x9, x9, #0x1
  44f4ac:	cmp	x9, #0x100
  44f4b0:	b.eq	44f640 <_obstack_memory_used@@Base+0x8af0>  // b.none
  44f4b4:	ldrh	w11, [x8, x9, lsl #1]
  44f4b8:	tbz	w11, #3, 44f4a8 <_obstack_memory_used@@Base+0x8958>
  44f4bc:	ubfx	x11, x9, #6, #2
  44f4c0:	lsl	x11, x11, #3
  44f4c4:	ldr	x12, [x19, x11]
  44f4c8:	lsl	x13, x10, x9
  44f4cc:	orr	x12, x12, x13
  44f4d0:	str	x12, [x19, x11]
  44f4d4:	b	44f4a8 <_obstack_memory_used@@Base+0x8958>
  44f4d8:	bl	404690 <__ctype_b_loc@plt>
  44f4dc:	ldr	x8, [x0]
  44f4e0:	mov	x9, xzr
  44f4e4:	mov	w10, #0x1                   	// #1
  44f4e8:	cbz	x20, 44f4fc <_obstack_memory_used@@Base+0x89ac>
  44f4ec:	b	44f7d0 <_obstack_memory_used@@Base+0x8c80>
  44f4f0:	add	x9, x9, #0x1
  44f4f4:	cmp	x9, #0x100
  44f4f8:	b.eq	44f640 <_obstack_memory_used@@Base+0x8af0>  // b.none
  44f4fc:	ldrh	w11, [x8, x9, lsl #1]
  44f500:	tbz	w11, #1, 44f4f0 <_obstack_memory_used@@Base+0x89a0>
  44f504:	ubfx	x11, x9, #6, #2
  44f508:	lsl	x11, x11, #3
  44f50c:	ldr	x12, [x19, x11]
  44f510:	lsl	x13, x10, x9
  44f514:	orr	x12, x12, x13
  44f518:	str	x12, [x19, x11]
  44f51c:	b	44f4f0 <_obstack_memory_used@@Base+0x89a0>
  44f520:	bl	404690 <__ctype_b_loc@plt>
  44f524:	ldr	x8, [x0]
  44f528:	mov	x9, xzr
  44f52c:	mov	w10, #0x1                   	// #1
  44f530:	cbz	x20, 44f544 <_obstack_memory_used@@Base+0x89f4>
  44f534:	b	44f854 <_obstack_memory_used@@Base+0x8d04>
  44f538:	add	x9, x9, #0x1
  44f53c:	cmp	x9, #0x100
  44f540:	b.eq	44f640 <_obstack_memory_used@@Base+0x8af0>  // b.none
  44f544:	ldrh	w11, [x8, x9, lsl #1]
  44f548:	tbz	w11, #9, 44f538 <_obstack_memory_used@@Base+0x89e8>
  44f54c:	ubfx	x11, x9, #6, #2
  44f550:	lsl	x11, x11, #3
  44f554:	ldr	x12, [x19, x11]
  44f558:	lsl	x13, x10, x9
  44f55c:	orr	x12, x12, x13
  44f560:	str	x12, [x19, x11]
  44f564:	b	44f538 <_obstack_memory_used@@Base+0x89e8>
  44f568:	bl	404690 <__ctype_b_loc@plt>
  44f56c:	ldr	x8, [x0]
  44f570:	mov	x9, xzr
  44f574:	mov	w10, #0x1                   	// #1
  44f578:	cbz	x20, 44f58c <_obstack_memory_used@@Base+0x8a3c>
  44f57c:	b	44f8d8 <_obstack_memory_used@@Base+0x8d88>
  44f580:	add	x9, x9, #0x1
  44f584:	cmp	x9, #0x100
  44f588:	b.eq	44f640 <_obstack_memory_used@@Base+0x8af0>  // b.none
  44f58c:	ldrh	w11, [x8, x9, lsl #1]
  44f590:	tbz	w11, #13, 44f580 <_obstack_memory_used@@Base+0x8a30>
  44f594:	ubfx	x11, x9, #6, #2
  44f598:	lsl	x11, x11, #3
  44f59c:	ldr	x12, [x19, x11]
  44f5a0:	lsl	x13, x10, x9
  44f5a4:	orr	x12, x12, x13
  44f5a8:	str	x12, [x19, x11]
  44f5ac:	b	44f580 <_obstack_memory_used@@Base+0x8a30>
  44f5b0:	bl	404690 <__ctype_b_loc@plt>
  44f5b4:	ldr	x8, [x0]
  44f5b8:	mov	x9, xzr
  44f5bc:	mov	w10, #0x1                   	// #1
  44f5c0:	cbz	x20, 44f5d4 <_obstack_memory_used@@Base+0x8a84>
  44f5c4:	b	44f910 <_obstack_memory_used@@Base+0x8dc0>
  44f5c8:	add	x9, x9, #0x1
  44f5cc:	cmp	x9, #0x100
  44f5d0:	b.eq	44f640 <_obstack_memory_used@@Base+0x8af0>  // b.none
  44f5d4:	ldrh	w11, [x8, x9, lsl #1]
  44f5d8:	tbz	w11, #10, 44f5c8 <_obstack_memory_used@@Base+0x8a78>
  44f5dc:	ubfx	x11, x9, #6, #2
  44f5e0:	lsl	x11, x11, #3
  44f5e4:	ldr	x12, [x19, x11]
  44f5e8:	lsl	x13, x10, x9
  44f5ec:	orr	x12, x12, x13
  44f5f0:	str	x12, [x19, x11]
  44f5f4:	b	44f5c8 <_obstack_memory_used@@Base+0x8a78>
  44f5f8:	bl	404690 <__ctype_b_loc@plt>
  44f5fc:	ldr	x8, [x0]
  44f600:	mov	x9, xzr
  44f604:	mov	w10, #0x1                   	// #1
  44f608:	cbz	x20, 44f61c <_obstack_memory_used@@Base+0x8acc>
  44f60c:	b	44f948 <_obstack_memory_used@@Base+0x8df8>
  44f610:	add	x9, x9, #0x1
  44f614:	cmp	x9, #0x100
  44f618:	b.eq	44f640 <_obstack_memory_used@@Base+0x8af0>  // b.none
  44f61c:	ldrh	w11, [x8, x9, lsl #1]
  44f620:	tbz	w11, #11, 44f610 <_obstack_memory_used@@Base+0x8ac0>
  44f624:	ubfx	x11, x9, #6, #2
  44f628:	lsl	x11, x11, #3
  44f62c:	ldr	x12, [x19, x11]
  44f630:	lsl	x13, x10, x9
  44f634:	orr	x12, x12, x13
  44f638:	str	x12, [x19, x11]
  44f63c:	b	44f610 <_obstack_memory_used@@Base+0x8ac0>
  44f640:	mov	w0, wzr
  44f644:	ldp	x20, x19, [sp, #48]
  44f648:	ldp	x22, x21, [sp, #32]
  44f64c:	ldp	x24, x23, [sp, #16]
  44f650:	ldp	x29, x30, [sp], #64
  44f654:	ret
  44f658:	bl	404690 <__ctype_b_loc@plt>
  44f65c:	ldr	x8, [x0]
  44f660:	mov	x9, xzr
  44f664:	mov	w10, #0x1                   	// #1
  44f668:	cbz	x20, 44f680 <_obstack_memory_used@@Base+0x8b30>
  44f66c:	b	44f9a4 <_obstack_memory_used@@Base+0x8e54>
  44f670:	add	x9, x9, #0x1
  44f674:	cmp	x9, #0x100
  44f678:	mov	w0, wzr
  44f67c:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f680:	ldrh	w11, [x8, x9, lsl #1]
  44f684:	tbz	w11, #14, 44f670 <_obstack_memory_used@@Base+0x8b20>
  44f688:	ubfx	x11, x9, #6, #2
  44f68c:	lsl	x11, x11, #3
  44f690:	ldr	x12, [x19, x11]
  44f694:	lsl	x13, x10, x9
  44f698:	orr	x12, x12, x13
  44f69c:	str	x12, [x19, x11]
  44f6a0:	b	44f670 <_obstack_memory_used@@Base+0x8b20>
  44f6a4:	bl	404690 <__ctype_b_loc@plt>
  44f6a8:	ldr	x8, [x0]
  44f6ac:	mov	x9, xzr
  44f6b0:	mov	w10, #0x1                   	// #1
  44f6b4:	cbz	x20, 44f6cc <_obstack_memory_used@@Base+0x8b7c>
  44f6b8:	b	44f9dc <_obstack_memory_used@@Base+0x8e8c>
  44f6bc:	add	x9, x9, #0x1
  44f6c0:	cmp	x9, #0x100
  44f6c4:	mov	w0, wzr
  44f6c8:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f6cc:	ldrh	w11, [x8, x9, lsl #1]
  44f6d0:	tbz	w11, #8, 44f6bc <_obstack_memory_used@@Base+0x8b6c>
  44f6d4:	ubfx	x11, x9, #6, #2
  44f6d8:	lsl	x11, x11, #3
  44f6dc:	ldr	x12, [x19, x11]
  44f6e0:	lsl	x13, x10, x9
  44f6e4:	orr	x12, x12, x13
  44f6e8:	str	x12, [x19, x11]
  44f6ec:	b	44f6bc <_obstack_memory_used@@Base+0x8b6c>
  44f6f0:	bl	404690 <__ctype_b_loc@plt>
  44f6f4:	ldr	x8, [x0]
  44f6f8:	mov	x9, xzr
  44f6fc:	mov	w10, #0x1                   	// #1
  44f700:	cbz	x20, 44f718 <_obstack_memory_used@@Base+0x8bc8>
  44f704:	b	44fa14 <_obstack_memory_used@@Base+0x8ec4>
  44f708:	add	x9, x9, #0x1
  44f70c:	cmp	x9, #0x100
  44f710:	mov	w0, wzr
  44f714:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f718:	ldrh	w11, [x8, x9, lsl #1]
  44f71c:	tbz	w11, #0, 44f708 <_obstack_memory_used@@Base+0x8bb8>
  44f720:	ubfx	x11, x9, #6, #2
  44f724:	lsl	x11, x11, #3
  44f728:	ldr	x12, [x19, x11]
  44f72c:	lsl	x13, x10, x9
  44f730:	orr	x12, x12, x13
  44f734:	str	x12, [x19, x11]
  44f738:	b	44f708 <_obstack_memory_used@@Base+0x8bb8>
  44f73c:	add	x9, x9, #0x1
  44f740:	cmp	x9, #0x100
  44f744:	mov	w0, wzr
  44f748:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f74c:	ldrh	w11, [x8, x9, lsl #1]
  44f750:	tbz	w11, #3, 44f73c <_obstack_memory_used@@Base+0x8bec>
  44f754:	ldrb	w11, [x20, x9]
  44f758:	lsr	x12, x11, #3
  44f75c:	and	x12, x12, #0x18
  44f760:	ldr	x13, [x19, x12]
  44f764:	lsl	x11, x10, x11
  44f768:	orr	x11, x11, x13
  44f76c:	str	x11, [x19, x12]
  44f770:	b	44f73c <_obstack_memory_used@@Base+0x8bec>
  44f774:	bl	404690 <__ctype_b_loc@plt>
  44f778:	ldr	x8, [x0]
  44f77c:	mov	x9, xzr
  44f780:	mov	w10, #0x1                   	// #1
  44f784:	cbz	x20, 44f79c <_obstack_memory_used@@Base+0x8c4c>
  44f788:	b	44fa4c <_obstack_memory_used@@Base+0x8efc>
  44f78c:	add	x9, x9, #0x1
  44f790:	cmp	x9, #0x100
  44f794:	mov	w0, wzr
  44f798:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f79c:	ldrsh	w11, [x8, x9, lsl #1]
  44f7a0:	tbz	w11, #31, 44f78c <_obstack_memory_used@@Base+0x8c3c>
  44f7a4:	ubfx	x11, x9, #6, #2
  44f7a8:	lsl	x11, x11, #3
  44f7ac:	ldr	x12, [x19, x11]
  44f7b0:	lsl	x13, x10, x9
  44f7b4:	orr	x12, x12, x13
  44f7b8:	str	x12, [x19, x11]
  44f7bc:	b	44f78c <_obstack_memory_used@@Base+0x8c3c>
  44f7c0:	add	x9, x9, #0x1
  44f7c4:	cmp	x9, #0x100
  44f7c8:	mov	w0, wzr
  44f7cc:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f7d0:	ldrh	w11, [x8, x9, lsl #1]
  44f7d4:	tbz	w11, #1, 44f7c0 <_obstack_memory_used@@Base+0x8c70>
  44f7d8:	ldrb	w11, [x20, x9]
  44f7dc:	lsr	x12, x11, #3
  44f7e0:	and	x12, x12, #0x18
  44f7e4:	ldr	x13, [x19, x12]
  44f7e8:	lsl	x11, x10, x11
  44f7ec:	orr	x11, x11, x13
  44f7f0:	str	x11, [x19, x12]
  44f7f4:	b	44f7c0 <_obstack_memory_used@@Base+0x8c70>
  44f7f8:	bl	404690 <__ctype_b_loc@plt>
  44f7fc:	ldr	x8, [x0]
  44f800:	mov	x9, xzr
  44f804:	mov	w10, #0x1                   	// #1
  44f808:	cbz	x20, 44f820 <_obstack_memory_used@@Base+0x8cd0>
  44f80c:	b	44fa84 <_obstack_memory_used@@Base+0x8f34>
  44f810:	add	x9, x9, #0x1
  44f814:	cmp	x9, #0x100
  44f818:	mov	w0, wzr
  44f81c:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f820:	ldrh	w11, [x8, x9, lsl #1]
  44f824:	tbz	w11, #2, 44f810 <_obstack_memory_used@@Base+0x8cc0>
  44f828:	ubfx	x11, x9, #6, #2
  44f82c:	lsl	x11, x11, #3
  44f830:	ldr	x12, [x19, x11]
  44f834:	lsl	x13, x10, x9
  44f838:	orr	x12, x12, x13
  44f83c:	str	x12, [x19, x11]
  44f840:	b	44f810 <_obstack_memory_used@@Base+0x8cc0>
  44f844:	add	x9, x9, #0x1
  44f848:	cmp	x9, #0x100
  44f84c:	mov	w0, wzr
  44f850:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f854:	ldrh	w11, [x8, x9, lsl #1]
  44f858:	tbz	w11, #9, 44f844 <_obstack_memory_used@@Base+0x8cf4>
  44f85c:	ldrb	w11, [x20, x9]
  44f860:	lsr	x12, x11, #3
  44f864:	and	x12, x12, #0x18
  44f868:	ldr	x13, [x19, x12]
  44f86c:	lsl	x11, x10, x11
  44f870:	orr	x11, x11, x13
  44f874:	str	x11, [x19, x12]
  44f878:	b	44f844 <_obstack_memory_used@@Base+0x8cf4>
  44f87c:	bl	404690 <__ctype_b_loc@plt>
  44f880:	ldr	x8, [x0]
  44f884:	mov	x9, xzr
  44f888:	mov	w10, #0x1                   	// #1
  44f88c:	cbz	x20, 44f8a4 <_obstack_memory_used@@Base+0x8d54>
  44f890:	b	44fabc <_obstack_memory_used@@Base+0x8f6c>
  44f894:	add	x9, x9, #0x1
  44f898:	cmp	x9, #0x100
  44f89c:	mov	w0, wzr
  44f8a0:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f8a4:	ldrh	w11, [x8, x9, lsl #1]
  44f8a8:	tbz	w11, #12, 44f894 <_obstack_memory_used@@Base+0x8d44>
  44f8ac:	ubfx	x11, x9, #6, #2
  44f8b0:	lsl	x11, x11, #3
  44f8b4:	ldr	x12, [x19, x11]
  44f8b8:	lsl	x13, x10, x9
  44f8bc:	orr	x12, x12, x13
  44f8c0:	str	x12, [x19, x11]
  44f8c4:	b	44f894 <_obstack_memory_used@@Base+0x8d44>
  44f8c8:	add	x9, x9, #0x1
  44f8cc:	cmp	x9, #0x100
  44f8d0:	mov	w0, wzr
  44f8d4:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f8d8:	ldrh	w11, [x8, x9, lsl #1]
  44f8dc:	tbz	w11, #13, 44f8c8 <_obstack_memory_used@@Base+0x8d78>
  44f8e0:	ldrb	w11, [x20, x9]
  44f8e4:	lsr	x12, x11, #3
  44f8e8:	and	x12, x12, #0x18
  44f8ec:	ldr	x13, [x19, x12]
  44f8f0:	lsl	x11, x10, x11
  44f8f4:	orr	x11, x11, x13
  44f8f8:	str	x11, [x19, x12]
  44f8fc:	b	44f8c8 <_obstack_memory_used@@Base+0x8d78>
  44f900:	add	x9, x9, #0x1
  44f904:	cmp	x9, #0x100
  44f908:	mov	w0, wzr
  44f90c:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f910:	ldrh	w11, [x8, x9, lsl #1]
  44f914:	tbz	w11, #10, 44f900 <_obstack_memory_used@@Base+0x8db0>
  44f918:	ldrb	w11, [x20, x9]
  44f91c:	lsr	x12, x11, #3
  44f920:	and	x12, x12, #0x18
  44f924:	ldr	x13, [x19, x12]
  44f928:	lsl	x11, x10, x11
  44f92c:	orr	x11, x11, x13
  44f930:	str	x11, [x19, x12]
  44f934:	b	44f900 <_obstack_memory_used@@Base+0x8db0>
  44f938:	add	x9, x9, #0x1
  44f93c:	cmp	x9, #0x100
  44f940:	mov	w0, wzr
  44f944:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f948:	ldrh	w11, [x8, x9, lsl #1]
  44f94c:	tbz	w11, #11, 44f938 <_obstack_memory_used@@Base+0x8de8>
  44f950:	ldrb	w11, [x20, x9]
  44f954:	lsr	x12, x11, #3
  44f958:	and	x12, x12, #0x18
  44f95c:	ldr	x13, [x19, x12]
  44f960:	lsl	x11, x10, x11
  44f964:	orr	x11, x11, x13
  44f968:	str	x11, [x19, x12]
  44f96c:	b	44f938 <_obstack_memory_used@@Base+0x8de8>
  44f970:	ldr	x0, [x22, #24]
  44f974:	mov	w24, #0x1                   	// #1
  44f978:	bfi	x24, x8, #1, #63
  44f97c:	lsl	x1, x24, #3
  44f980:	bl	404490 <realloc@plt>
  44f984:	cbz	x0, 44fae4 <_obstack_memory_used@@Base+0x8f94>
  44f988:	str	x0, [x22, #24]
  44f98c:	str	x24, [x23]
  44f990:	b	44f37c <_obstack_memory_used@@Base+0x882c>
  44f994:	add	x9, x9, #0x1
  44f998:	cmp	x9, #0x100
  44f99c:	mov	w0, wzr
  44f9a0:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f9a4:	ldrh	w11, [x8, x9, lsl #1]
  44f9a8:	tbz	w11, #14, 44f994 <_obstack_memory_used@@Base+0x8e44>
  44f9ac:	ldrb	w11, [x20, x9]
  44f9b0:	lsr	x12, x11, #3
  44f9b4:	and	x12, x12, #0x18
  44f9b8:	ldr	x13, [x19, x12]
  44f9bc:	lsl	x11, x10, x11
  44f9c0:	orr	x11, x11, x13
  44f9c4:	str	x11, [x19, x12]
  44f9c8:	b	44f994 <_obstack_memory_used@@Base+0x8e44>
  44f9cc:	add	x9, x9, #0x1
  44f9d0:	cmp	x9, #0x100
  44f9d4:	mov	w0, wzr
  44f9d8:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44f9dc:	ldrh	w11, [x8, x9, lsl #1]
  44f9e0:	tbz	w11, #8, 44f9cc <_obstack_memory_used@@Base+0x8e7c>
  44f9e4:	ldrb	w11, [x20, x9]
  44f9e8:	lsr	x12, x11, #3
  44f9ec:	and	x12, x12, #0x18
  44f9f0:	ldr	x13, [x19, x12]
  44f9f4:	lsl	x11, x10, x11
  44f9f8:	orr	x11, x11, x13
  44f9fc:	str	x11, [x19, x12]
  44fa00:	b	44f9cc <_obstack_memory_used@@Base+0x8e7c>
  44fa04:	add	x9, x9, #0x1
  44fa08:	cmp	x9, #0x100
  44fa0c:	mov	w0, wzr
  44fa10:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44fa14:	ldrh	w11, [x8, x9, lsl #1]
  44fa18:	tbz	w11, #0, 44fa04 <_obstack_memory_used@@Base+0x8eb4>
  44fa1c:	ldrb	w11, [x20, x9]
  44fa20:	lsr	x12, x11, #3
  44fa24:	and	x12, x12, #0x18
  44fa28:	ldr	x13, [x19, x12]
  44fa2c:	lsl	x11, x10, x11
  44fa30:	orr	x11, x11, x13
  44fa34:	str	x11, [x19, x12]
  44fa38:	b	44fa04 <_obstack_memory_used@@Base+0x8eb4>
  44fa3c:	add	x9, x9, #0x1
  44fa40:	cmp	x9, #0x100
  44fa44:	mov	w0, wzr
  44fa48:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44fa4c:	ldrsh	w11, [x8, x9, lsl #1]
  44fa50:	tbz	w11, #31, 44fa3c <_obstack_memory_used@@Base+0x8eec>
  44fa54:	ldrb	w11, [x20, x9]
  44fa58:	lsr	x12, x11, #3
  44fa5c:	and	x12, x12, #0x18
  44fa60:	ldr	x13, [x19, x12]
  44fa64:	lsl	x11, x10, x11
  44fa68:	orr	x11, x11, x13
  44fa6c:	str	x11, [x19, x12]
  44fa70:	b	44fa3c <_obstack_memory_used@@Base+0x8eec>
  44fa74:	add	x9, x9, #0x1
  44fa78:	cmp	x9, #0x100
  44fa7c:	mov	w0, wzr
  44fa80:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44fa84:	ldrh	w11, [x8, x9, lsl #1]
  44fa88:	tbz	w11, #2, 44fa74 <_obstack_memory_used@@Base+0x8f24>
  44fa8c:	ldrb	w11, [x20, x9]
  44fa90:	lsr	x12, x11, #3
  44fa94:	and	x12, x12, #0x18
  44fa98:	ldr	x13, [x19, x12]
  44fa9c:	lsl	x11, x10, x11
  44faa0:	orr	x11, x11, x13
  44faa4:	str	x11, [x19, x12]
  44faa8:	b	44fa74 <_obstack_memory_used@@Base+0x8f24>
  44faac:	add	x9, x9, #0x1
  44fab0:	cmp	x9, #0x100
  44fab4:	mov	w0, wzr
  44fab8:	b.eq	44f644 <_obstack_memory_used@@Base+0x8af4>  // b.none
  44fabc:	ldrh	w11, [x8, x9, lsl #1]
  44fac0:	tbz	w11, #12, 44faac <_obstack_memory_used@@Base+0x8f5c>
  44fac4:	ldrb	w11, [x20, x9]
  44fac8:	lsr	x12, x11, #3
  44facc:	and	x12, x12, #0x18
  44fad0:	ldr	x13, [x19, x12]
  44fad4:	lsl	x11, x10, x11
  44fad8:	orr	x11, x11, x13
  44fadc:	str	x11, [x19, x12]
  44fae0:	b	44faac <_obstack_memory_used@@Base+0x8f5c>
  44fae4:	mov	w0, #0xc                   	// #12
  44fae8:	b	44f644 <_obstack_memory_used@@Base+0x8af4>
  44faec:	stp	x29, x30, [sp, #-64]!
  44faf0:	stp	x22, x21, [sp, #32]
  44faf4:	stp	x20, x19, [sp, #48]
  44faf8:	ldr	w9, [x1, #48]
  44fafc:	ldr	x19, [x1, #56]
  44fb00:	str	x23, [sp, #16]
  44fb04:	mov	x29, sp
  44fb08:	and	w8, w9, #0xff
  44fb0c:	sub	w10, w8, #0x2
  44fb10:	cmp	w10, #0xe
  44fb14:	mov	x8, x0
  44fb18:	b.hi	44fc50 <_obstack_memory_used@@Base+0x9100>  // b.pmore
  44fb1c:	adrp	x11, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44fb20:	add	x11, x11, #0x979
  44fb24:	adr	x12, 44fb38 <_obstack_memory_used@@Base+0x8fe8>
  44fb28:	ldrb	w13, [x11, x10]
  44fb2c:	add	x12, x12, x13, lsl #2
  44fb30:	mov	w0, wzr
  44fb34:	br	x12
  44fb38:	ldr	x9, [x1, #32]
  44fb3c:	ldr	x8, [x8, #40]
  44fb40:	mov	w10, #0x18                  	// #24
  44fb44:	ldr	x20, [x9, #56]
  44fb48:	madd	x19, x19, x10, x8
  44fb4c:	mov	w8, #0x1                   	// #1
  44fb50:	dup	v0.2d, x8
  44fb54:	mov	w0, #0x8                   	// #8
  44fb58:	str	q0, [x19]
  44fb5c:	bl	404250 <malloc@plt>
  44fb60:	str	x0, [x19, #16]
  44fb64:	cbz	x0, 44fca0 <_obstack_memory_used@@Base+0x9150>
  44fb68:	mov	x8, x0
  44fb6c:	mov	w0, wzr
  44fb70:	str	x20, [x8]
  44fb74:	b	44fc8c <_obstack_memory_used@@Base+0x913c>
  44fb78:	ldrb	w9, [x8, #176]
  44fb7c:	add	x10, x1, #0x20
  44fb80:	orr	w9, w9, #0x1
  44fb84:	strb	w9, [x8, #176]
  44fb88:	ldp	x9, x11, [x1, #8]
  44fb8c:	add	x12, x9, #0x18
  44fb90:	cmp	x9, #0x0
  44fb94:	csel	x9, x10, x12, eq  // eq = none
  44fb98:	ldr	x9, [x9]
  44fb9c:	cmp	x11, #0x0
  44fba0:	ldr	x20, [x9, #56]
  44fba4:	add	x9, x11, #0x18
  44fba8:	csel	x9, x10, x9, eq  // eq = none
  44fbac:	tbnz	x20, #63, 44fcac <_obstack_memory_used@@Base+0x915c>
  44fbb0:	ldr	x9, [x9]
  44fbb4:	ldr	x21, [x9, #56]
  44fbb8:	tbnz	x21, #63, 44fccc <_obstack_memory_used@@Base+0x917c>
  44fbbc:	ldr	x22, [x8, #40]
  44fbc0:	mov	w8, #0x18                  	// #24
  44fbc4:	mov	w0, #0x10                  	// #16
  44fbc8:	madd	x23, x19, x8, x22
  44fbcc:	mov	w8, #0x2                   	// #2
  44fbd0:	str	x8, [x23]
  44fbd4:	bl	404250 <malloc@plt>
  44fbd8:	str	x0, [x23, #16]
  44fbdc:	cbz	x0, 44fca4 <_obstack_memory_used@@Base+0x9154>
  44fbe0:	mov	w9, #0x18                  	// #24
  44fbe4:	madd	x9, x19, x9, x22
  44fbe8:	mov	x8, x0
  44fbec:	cmp	x20, x21
  44fbf0:	add	x9, x9, #0x8
  44fbf4:	b.ne	44fc6c <_obstack_memory_used@@Base+0x911c>  // b.any
  44fbf8:	mov	w10, #0x1                   	// #1
  44fbfc:	mov	w0, wzr
  44fc00:	str	x10, [x9]
  44fc04:	str	x20, [x8]
  44fc08:	b	44fc8c <_obstack_memory_used@@Base+0x913c>
  44fc0c:	ldr	x9, [x1, #32]
  44fc10:	ldr	x20, [x9, #56]
  44fc14:	ldr	x9, [x8, #24]
  44fc18:	str	x20, [x9, x19, lsl #3]
  44fc1c:	ldrb	w9, [x1, #48]
  44fc20:	cmp	w9, #0x4
  44fc24:	b.ne	44fc48 <_obstack_memory_used@@Base+0x90f8>  // b.any
  44fc28:	ldr	x8, [x8, #40]
  44fc2c:	mov	w9, #0x18                  	// #24
  44fc30:	mov	w10, #0x1                   	// #1
  44fc34:	dup	v0.2d, x10
  44fc38:	madd	x19, x19, x9, x8
  44fc3c:	b	44fb54 <_obstack_memory_used@@Base+0x9004>
  44fc40:	ldr	x8, [x1, #32]
  44fc44:	cbnz	x8, 44fcec <_obstack_memory_used@@Base+0x919c>
  44fc48:	mov	w0, wzr
  44fc4c:	b	44fc8c <_obstack_memory_used@@Base+0x913c>
  44fc50:	tbnz	w9, #3, 44fd0c <_obstack_memory_used@@Base+0x91bc>
  44fc54:	ldr	x9, [x1, #32]
  44fc58:	ldr	x8, [x8, #24]
  44fc5c:	mov	w0, wzr
  44fc60:	ldr	x9, [x9, #56]
  44fc64:	str	x9, [x8, x19, lsl #3]
  44fc68:	b	44fc8c <_obstack_memory_used@@Base+0x913c>
  44fc6c:	mov	w10, #0x2                   	// #2
  44fc70:	cmp	x20, x21
  44fc74:	mov	w0, wzr
  44fc78:	str	x10, [x9]
  44fc7c:	b.ge	44fc88 <_obstack_memory_used@@Base+0x9138>  // b.tcont
  44fc80:	stp	x20, x21, [x8]
  44fc84:	b	44fc8c <_obstack_memory_used@@Base+0x913c>
  44fc88:	stp	x21, x20, [x8]
  44fc8c:	ldp	x20, x19, [sp, #48]
  44fc90:	ldp	x22, x21, [sp, #32]
  44fc94:	ldr	x23, [sp, #16]
  44fc98:	ldp	x29, x30, [sp], #64
  44fc9c:	ret
  44fca0:	stp	xzr, xzr, [x19]
  44fca4:	mov	w0, #0xc                   	// #12
  44fca8:	b	44fc8c <_obstack_memory_used@@Base+0x913c>
  44fcac:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44fcb0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44fcb4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44fcb8:	add	x0, x0, #0xccd
  44fcbc:	add	x1, x1, #0xbde
  44fcc0:	add	x3, x3, #0xc9a
  44fcc4:	mov	w2, #0x5af                 	// #1455
  44fcc8:	bl	404a00 <__assert_fail@plt>
  44fccc:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44fcd0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44fcd4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44fcd8:	add	x0, x0, #0xcd7
  44fcdc:	add	x1, x1, #0xbde
  44fce0:	add	x3, x3, #0xc9a
  44fce4:	mov	w2, #0x5b0                 	// #1456
  44fce8:	bl	404a00 <__assert_fail@plt>
  44fcec:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44fcf0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44fcf4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44fcf8:	add	x0, x0, #0xc87
  44fcfc:	add	x1, x1, #0xbde
  44fd00:	add	x3, x3, #0xc9a
  44fd04:	mov	w2, #0x59f                 	// #1439
  44fd08:	bl	404a00 <__assert_fail@plt>
  44fd0c:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44fd10:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44fd14:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  44fd18:	add	x0, x0, #0xce2
  44fd1c:	add	x1, x1, #0xbde
  44fd20:	add	x3, x3, #0xc9a
  44fd24:	mov	w2, #0x5c2                 	// #1474
  44fd28:	bl	404a00 <__assert_fail@plt>
  44fd2c:	stp	x29, x30, [sp, #-80]!
  44fd30:	stp	x24, x23, [sp, #32]
  44fd34:	stp	x22, x21, [sp, #48]
  44fd38:	stp	x20, x19, [sp, #64]
  44fd3c:	ldr	x21, [x2, #8]
  44fd40:	ldr	x22, [x1]
  44fd44:	mov	x19, x2
  44fd48:	mov	x20, x0
  44fd4c:	str	x25, [sp, #16]
  44fd50:	mov	x29, sp
  44fd54:	cbz	x21, 44fd78 <_obstack_memory_used@@Base+0x9228>
  44fd58:	ldrb	w8, [x1, #56]
  44fd5c:	tbz	w8, #4, 44fd78 <_obstack_memory_used@@Base+0x9228>
  44fd60:	ldr	x8, [x19, #40]
  44fd64:	cmp	x8, #0x3f
  44fd68:	b.gt	44fed8 <_obstack_memory_used@@Base+0x9388>
  44fd6c:	ldr	x9, [x22, #160]
  44fd70:	lsr	x8, x9, x8
  44fd74:	tbz	w8, #0, 44fed8 <_obstack_memory_used@@Base+0x9388>
  44fd78:	ldr	w8, [x22, #128]
  44fd7c:	cmp	w8, #0xf
  44fd80:	b.eq	44fef4 <_obstack_memory_used@@Base+0x93a4>  // b.none
  44fd84:	ldr	x0, [x22, #112]
  44fd88:	add	w9, w8, #0x1
  44fd8c:	sxtw	x8, w8
  44fd90:	add	x23, x0, x8, lsl #6
  44fd94:	mov	w10, #0x8                   	// #8
  44fd98:	mov	x11, #0xffffffffffffffff    	// #-1
  44fd9c:	str	w9, [x22, #128]
  44fda0:	str	xzr, [x23, #8]!
  44fda4:	stp	xzr, xzr, [x23, #16]
  44fda8:	str	xzr, [x23, #8]
  44fdac:	str	w10, [x23, #48]
  44fdb0:	str	xzr, [x23, #32]
  44fdb4:	str	x11, [x23, #56]
  44fdb8:	ldr	w8, [x22, #128]
  44fdbc:	cmp	w8, #0xf
  44fdc0:	b.eq	44ff18 <_obstack_memory_used@@Base+0x93c8>  // b.none
  44fdc4:	ldr	x0, [x22, #112]
  44fdc8:	add	w9, w8, #0x1
  44fdcc:	sxtw	x8, w8
  44fdd0:	add	x24, x0, x8, lsl #6
  44fdd4:	mov	w10, #0x9                   	// #9
  44fdd8:	mov	x11, #0xffffffffffffffff    	// #-1
  44fddc:	str	w9, [x22, #128]
  44fde0:	str	xzr, [x24, #8]!
  44fde4:	stp	xzr, xzr, [x24, #16]
  44fde8:	str	xzr, [x24, #8]
  44fdec:	str	w10, [x24, #48]
  44fdf0:	str	xzr, [x24, #32]
  44fdf4:	str	x11, [x24, #56]
  44fdf8:	mov	x25, x24
  44fdfc:	cbz	x21, 44fe48 <_obstack_memory_used@@Base+0x92f8>
  44fe00:	ldr	w8, [x22, #128]
  44fe04:	cmp	w8, #0xf
  44fe08:	b.eq	44ff60 <_obstack_memory_used@@Base+0x9410>  // b.none
  44fe0c:	ldr	x0, [x22, #112]
  44fe10:	add	w9, w8, #0x1
  44fe14:	sxtw	x8, w8
  44fe18:	add	x25, x0, x8, lsl #6
  44fe1c:	mov	w10, #0x10                  	// #16
  44fe20:	mov	x11, #0xffffffffffffffff    	// #-1
  44fe24:	str	w9, [x22, #128]
  44fe28:	str	xzr, [x25, #8]!
  44fe2c:	stp	x21, x24, [x25, #8]
  44fe30:	str	w10, [x25, #48]
  44fe34:	stp	xzr, xzr, [x25, #24]
  44fe38:	str	x11, [x25, #56]
  44fe3c:	str	x25, [x21]
  44fe40:	cbz	x24, 44fe48 <_obstack_memory_used@@Base+0x92f8>
  44fe44:	str	x25, [x24]
  44fe48:	ldr	w8, [x22, #128]
  44fe4c:	cmp	w8, #0xf
  44fe50:	b.eq	44ff3c <_obstack_memory_used@@Base+0x93ec>  // b.none
  44fe54:	ldr	x0, [x22, #112]
  44fe58:	add	w9, w8, #0x1
  44fe5c:	sxtw	x8, w8
  44fe60:	add	x21, x0, x8, lsl #6
  44fe64:	mov	w10, #0x10                  	// #16
  44fe68:	mov	x11, #0xffffffffffffffff    	// #-1
  44fe6c:	str	w9, [x22, #128]
  44fe70:	str	xzr, [x21, #8]!
  44fe74:	stp	x23, x25, [x21, #8]
  44fe78:	str	w10, [x21, #48]
  44fe7c:	stp	xzr, xzr, [x21, #24]
  44fe80:	str	x11, [x21, #56]
  44fe84:	cbz	x23, 44fe8c <_obstack_memory_used@@Base+0x933c>
  44fe88:	str	x21, [x23]
  44fe8c:	cbz	x25, 44fe94 <_obstack_memory_used@@Base+0x9344>
  44fe90:	str	x21, [x25]
  44fe94:	cbz	x24, 44ffa4 <_obstack_memory_used@@Base+0x9454>
  44fe98:	cbz	x23, 44ffa4 <_obstack_memory_used@@Base+0x9454>
  44fe9c:	cbz	x25, 44ffa4 <_obstack_memory_used@@Base+0x9454>
  44fea0:	cbz	x21, 44ffa4 <_obstack_memory_used@@Base+0x9454>
  44fea4:	ldr	x8, [x19, #40]
  44fea8:	str	x8, [x24, #40]
  44feac:	str	x8, [x23, #40]
  44feb0:	ldr	w8, [x19, #48]
  44feb4:	ldr	w9, [x24, #48]
  44feb8:	and	w8, w8, #0x80000
  44febc:	and	w9, w9, #0xfff7ffff
  44fec0:	orr	w9, w9, w8
  44fec4:	str	w9, [x24, #48]
  44fec8:	ldr	w9, [x23, #48]
  44fecc:	and	w9, w9, #0xfff7ffff
  44fed0:	orr	w8, w9, w8
  44fed4:	str	w8, [x23, #48]
  44fed8:	mov	x0, x21
  44fedc:	ldp	x20, x19, [sp, #64]
  44fee0:	ldp	x22, x21, [sp, #48]
  44fee4:	ldp	x24, x23, [sp, #32]
  44fee8:	ldr	x25, [sp, #16]
  44feec:	ldp	x29, x30, [sp], #80
  44fef0:	ret
  44fef4:	mov	w0, #0x3c8                 	// #968
  44fef8:	bl	404250 <malloc@plt>
  44fefc:	cbz	x0, 44ff84 <_obstack_memory_used@@Base+0x9434>
  44ff00:	ldr	x9, [x22, #112]
  44ff04:	mov	w8, wzr
  44ff08:	str	x9, [x0]
  44ff0c:	str	x0, [x22, #112]
  44ff10:	str	wzr, [x22, #128]
  44ff14:	b	44fd88 <_obstack_memory_used@@Base+0x9238>
  44ff18:	mov	w0, #0x3c8                 	// #968
  44ff1c:	bl	404250 <malloc@plt>
  44ff20:	cbz	x0, 44ff8c <_obstack_memory_used@@Base+0x943c>
  44ff24:	ldr	x9, [x22, #112]
  44ff28:	mov	w8, wzr
  44ff2c:	str	x9, [x0]
  44ff30:	str	x0, [x22, #112]
  44ff34:	str	wzr, [x22, #128]
  44ff38:	b	44fdc8 <_obstack_memory_used@@Base+0x9278>
  44ff3c:	mov	w0, #0x3c8                 	// #968
  44ff40:	bl	404250 <malloc@plt>
  44ff44:	cbz	x0, 44ff9c <_obstack_memory_used@@Base+0x944c>
  44ff48:	ldr	x9, [x22, #112]
  44ff4c:	mov	w8, wzr
  44ff50:	str	x9, [x0]
  44ff54:	str	x0, [x22, #112]
  44ff58:	str	wzr, [x22, #128]
  44ff5c:	b	44fe58 <_obstack_memory_used@@Base+0x9308>
  44ff60:	mov	w0, #0x3c8                 	// #968
  44ff64:	bl	404250 <malloc@plt>
  44ff68:	cbz	x0, 44ffb4 <_obstack_memory_used@@Base+0x9464>
  44ff6c:	ldr	x9, [x22, #112]
  44ff70:	mov	w8, wzr
  44ff74:	str	x9, [x0]
  44ff78:	str	x0, [x22, #112]
  44ff7c:	str	wzr, [x22, #128]
  44ff80:	b	44fe10 <_obstack_memory_used@@Base+0x92c0>
  44ff84:	mov	x23, xzr
  44ff88:	b	44fdb8 <_obstack_memory_used@@Base+0x9268>
  44ff8c:	mov	x24, xzr
  44ff90:	mov	x25, x24
  44ff94:	cbnz	x21, 44fe00 <_obstack_memory_used@@Base+0x92b0>
  44ff98:	b	44fe48 <_obstack_memory_used@@Base+0x92f8>
  44ff9c:	mov	x21, xzr
  44ffa0:	cbnz	x24, 44fe98 <_obstack_memory_used@@Base+0x9348>
  44ffa4:	mov	w8, #0xc                   	// #12
  44ffa8:	mov	x21, xzr
  44ffac:	str	w8, [x20]
  44ffb0:	b	44fed8 <_obstack_memory_used@@Base+0x9388>
  44ffb4:	mov	x25, xzr
  44ffb8:	b	44fe48 <_obstack_memory_used@@Base+0x92f8>
  44ffbc:	stp	x29, x30, [sp, #-80]!
  44ffc0:	stp	x26, x25, [sp, #16]
  44ffc4:	stp	x24, x23, [sp, #32]
  44ffc8:	stp	x22, x21, [sp, #48]
  44ffcc:	stp	x20, x19, [sp, #64]
  44ffd0:	ldp	x24, x8, [x0, #8]
  44ffd4:	mov	x20, x2
  44ffd8:	mov	x19, x0
  44ffdc:	mov	x21, x1
  44ffe0:	cmp	x8, x24
  44ffe4:	mov	x29, sp
  44ffe8:	b.cs	4500b4 <_obstack_memory_used@@Base+0x9564>  // b.hs, b.nlast
  44ffec:	ldr	x9, [x19]
  44fff0:	add	x8, x9, x8, lsl #4
  44fff4:	stp	x21, x20, [x8]
  44fff8:	ldr	x8, [x19]
  44fffc:	ldr	x9, [x19, #16]
  450000:	add	x9, x8, x9, lsl #4
  450004:	ldr	w10, [x9, #8]
  450008:	and	w8, w20, #0xff
  45000c:	cmp	w8, #0x5
  450010:	and	w10, w10, #0xfffc00ff
  450014:	str	w10, [x9, #8]
  450018:	b.ne	450030 <_obstack_memory_used@@Base+0x94e0>  // b.any
  45001c:	ldr	w9, [x19, #180]
  450020:	cmp	w9, #0x1
  450024:	b.le	450030 <_obstack_memory_used@@Base+0x94e0>
  450028:	mov	w8, #0x100000              	// #1048576
  45002c:	b	45003c <_obstack_memory_used@@Base+0x94ec>
  450030:	cmp	w8, #0x6
  450034:	cset	w8, eq  // eq = none
  450038:	lsl	w8, w8, #20
  45003c:	ldr	x9, [x19]
  450040:	ldr	x10, [x19, #16]
  450044:	add	x9, x9, x10, lsl #4
  450048:	ldr	w10, [x9, #8]
  45004c:	and	w10, w10, #0xffefffff
  450050:	orr	w8, w10, w8
  450054:	str	w8, [x9, #8]
  450058:	ldp	x9, x8, [x19, #16]
  45005c:	mov	x10, #0xffffffffffffffff    	// #-1
  450060:	str	x10, [x8, x9, lsl #3]
  450064:	ldr	x8, [x19, #40]
  450068:	ldr	x9, [x19, #16]
  45006c:	mov	w10, #0x18                  	// #24
  450070:	madd	x8, x9, x10, x8
  450074:	stp	xzr, xzr, [x8]
  450078:	str	xzr, [x8, #16]
  45007c:	ldr	x8, [x19, #48]
  450080:	ldr	x9, [x19, #16]
  450084:	madd	x8, x9, x10, x8
  450088:	stp	xzr, xzr, [x8]
  45008c:	str	xzr, [x8, #16]
  450090:	ldr	x0, [x19, #16]
  450094:	add	x8, x0, #0x1
  450098:	str	x8, [x19, #16]
  45009c:	ldp	x20, x19, [sp, #64]
  4500a0:	ldp	x22, x21, [sp, #48]
  4500a4:	ldp	x24, x23, [sp, #32]
  4500a8:	ldp	x26, x25, [sp, #16]
  4500ac:	ldp	x29, x30, [sp], #80
  4500b0:	ret
  4500b4:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4500b8:	lsl	x26, x24, #1
  4500bc:	movk	x8, #0xaaa, lsl #48
  4500c0:	cmp	x26, x8
  4500c4:	b.hi	450154 <_obstack_memory_used@@Base+0x9604>  // b.pmore
  4500c8:	ldr	x0, [x19]
  4500cc:	lsl	x1, x24, #5
  4500d0:	bl	404490 <realloc@plt>
  4500d4:	cbz	x0, 450154 <_obstack_memory_used@@Base+0x9604>
  4500d8:	ldr	x8, [x19, #24]
  4500dc:	lsl	x23, x24, #4
  4500e0:	str	x0, [x19]
  4500e4:	mov	x1, x23
  4500e8:	mov	x0, x8
  4500ec:	bl	404490 <realloc@plt>
  4500f0:	ldr	x8, [x19, #32]
  4500f4:	mov	x22, x0
  4500f8:	mov	x1, x23
  4500fc:	mov	x0, x8
  450100:	bl	404490 <realloc@plt>
  450104:	mov	x23, x0
  450108:	ldr	x0, [x19, #40]
  45010c:	add	x8, x24, x24, lsl #1
  450110:	lsl	x25, x8, #4
  450114:	mov	x1, x25
  450118:	bl	404490 <realloc@plt>
  45011c:	ldr	x8, [x19, #48]
  450120:	mov	x24, x0
  450124:	mov	x1, x25
  450128:	mov	x0, x8
  45012c:	bl	404490 <realloc@plt>
  450130:	cbz	x22, 45015c <_obstack_memory_used@@Base+0x960c>
  450134:	cbz	x23, 45015c <_obstack_memory_used@@Base+0x960c>
  450138:	cbz	x24, 45015c <_obstack_memory_used@@Base+0x960c>
  45013c:	cbz	x0, 45015c <_obstack_memory_used@@Base+0x960c>
  450140:	ldr	x8, [x19, #16]
  450144:	stp	x22, x23, [x19, #24]
  450148:	stp	x24, x0, [x19, #40]
  45014c:	str	x26, [x19, #8]
  450150:	b	44ffec <_obstack_memory_used@@Base+0x949c>
  450154:	mov	x0, #0xffffffffffffffff    	// #-1
  450158:	b	45009c <_obstack_memory_used@@Base+0x954c>
  45015c:	mov	x19, x0
  450160:	mov	x0, x22
  450164:	bl	404700 <free@plt>
  450168:	mov	x0, x23
  45016c:	bl	404700 <free@plt>
  450170:	mov	x0, x24
  450174:	bl	404700 <free@plt>
  450178:	mov	x0, x19
  45017c:	bl	404700 <free@plt>
  450180:	mov	x0, #0xffffffffffffffff    	// #-1
  450184:	b	45009c <_obstack_memory_used@@Base+0x954c>
  450188:	sub	sp, sp, #0x90
  45018c:	stp	x29, x30, [sp, #64]
  450190:	stp	x26, x25, [sp, #80]
  450194:	stp	x24, x23, [sp, #96]
  450198:	stp	x22, x21, [sp, #112]
  45019c:	stp	x20, x19, [sp, #128]
  4501a0:	ldr	x23, [x1, #40]
  4501a4:	mov	w8, #0x18                  	// #24
  4501a8:	mov	x19, x0
  4501ac:	add	x29, sp, #0x40
  4501b0:	madd	x25, x2, x8, x23
  4501b4:	ldr	x8, [x25, #8]!
  4501b8:	mov	w21, w3
  4501bc:	mov	x20, x2
  4501c0:	mov	x22, x1
  4501c4:	add	x24, x8, #0x1
  4501c8:	lsl	x0, x24, #3
  4501cc:	stp	x24, xzr, [sp, #32]
  4501d0:	bl	404250 <malloc@plt>
  4501d4:	str	x0, [sp, #48]
  4501d8:	cbz	x0, 4503f4 <_obstack_memory_used@@Base+0x98a4>
  4501dc:	ldr	x8, [x22, #48]
  4501e0:	mov	w9, #0x18                  	// #24
  4501e4:	madd	x8, x20, x9, x8
  4501e8:	mov	x9, #0xffffffffffffffff    	// #-1
  4501ec:	str	x9, [x8, #8]
  4501f0:	ldr	x9, [x22]
  4501f4:	add	x8, x9, x20, lsl #4
  4501f8:	ldr	w8, [x8, #8]
  4501fc:	ubfx	w4, w8, #8, #10
  450200:	cbz	w4, 45024c <_obstack_memory_used@@Base+0x96fc>
  450204:	ldr	x10, [x25]
  450208:	cbz	x10, 45024c <_obstack_memory_used@@Base+0x96fc>
  45020c:	mov	w10, #0x18                  	// #24
  450210:	madd	x10, x20, x10, x23
  450214:	ldr	x10, [x10, #16]
  450218:	ldr	x10, [x10]
  45021c:	add	x9, x9, x10, lsl #4
  450220:	ldrb	w9, [x9, #10]
  450224:	tbnz	w9, #2, 45024c <_obstack_memory_used@@Base+0x96fc>
  450228:	mov	x0, x22
  45022c:	mov	x1, x20
  450230:	mov	x2, x20
  450234:	mov	x3, x20
  450238:	bl	450484 <_obstack_memory_used@@Base+0x9934>
  45023c:	cbnz	w0, 4503b0 <_obstack_memory_used@@Base+0x9860>
  450240:	ldr	x8, [x22]
  450244:	add	x8, x8, x20, lsl #4
  450248:	ldr	w8, [x8, #8]
  45024c:	tbz	w8, #3, 450314 <_obstack_memory_used@@Base+0x97c4>
  450250:	ldr	x8, [x22, #40]
  450254:	mov	w9, #0x18                  	// #24
  450258:	madd	x9, x20, x9, x8
  45025c:	ldr	x9, [x9, #8]
  450260:	cmp	x9, #0x1
  450264:	b.lt	450314 <_obstack_memory_used@@Base+0x97c4>  // b.tstop
  450268:	mov	w25, wzr
  45026c:	mov	x24, xzr
  450270:	mov	w26, #0x18                  	// #24
  450274:	b	450294 <_obstack_memory_used@@Base+0x9744>
  450278:	mov	w25, #0x1                   	// #1
  45027c:	ldr	x8, [x22, #40]
  450280:	add	x24, x24, #0x1
  450284:	madd	x9, x20, x26, x8
  450288:	ldr	x9, [x9, #8]
  45028c:	cmp	x24, x9
  450290:	b.ge	450338 <_obstack_memory_used@@Base+0x97e8>  // b.tcont
  450294:	madd	x8, x20, x26, x8
  450298:	ldr	x8, [x8, #16]
  45029c:	ldr	x23, [x8, x24, lsl #3]
  4502a0:	ldr	x8, [x22, #48]
  4502a4:	madd	x9, x23, x26, x8
  4502a8:	ldr	x9, [x9, #8]
  4502ac:	cmn	x9, #0x1
  4502b0:	b.eq	450278 <_obstack_memory_used@@Base+0x9728>  // b.none
  4502b4:	cbnz	x9, 4502d4 <_obstack_memory_used@@Base+0x9784>
  4502b8:	mov	x0, sp
  4502bc:	mov	x1, x22
  4502c0:	mov	x2, x23
  4502c4:	mov	w3, wzr
  4502c8:	bl	450188 <_obstack_memory_used@@Base+0x9638>
  4502cc:	cbz	w0, 4502e8 <_obstack_memory_used@@Base+0x9798>
  4502d0:	b	4503b0 <_obstack_memory_used@@Base+0x9860>
  4502d4:	madd	x8, x23, x26, x8
  4502d8:	ldr	x9, [x8, #16]
  4502dc:	ldr	q0, [x8]
  4502e0:	str	x9, [sp, #16]
  4502e4:	str	q0, [sp]
  4502e8:	add	x0, sp, #0x20
  4502ec:	mov	x1, sp
  4502f0:	bl	450858 <_obstack_memory_used@@Base+0x9d08>
  4502f4:	cbnz	w0, 4503b0 <_obstack_memory_used@@Base+0x9860>
  4502f8:	ldr	x8, [x22, #48]
  4502fc:	madd	x8, x23, x26, x8
  450300:	ldr	x8, [x8, #8]
  450304:	cbnz	x8, 45027c <_obstack_memory_used@@Base+0x972c>
  450308:	ldr	x0, [sp, #16]
  45030c:	bl	404700 <free@plt>
  450310:	b	450278 <_obstack_memory_used@@Base+0x9728>
  450314:	mov	w23, #0x1                   	// #1
  450318:	cbz	x24, 450348 <_obstack_memory_used@@Base+0x97f8>
  45031c:	ldr	x25, [sp, #40]
  450320:	cbnz	x25, 4503cc <_obstack_memory_used@@Base+0x987c>
  450324:	ldr	x8, [sp, #48]
  450328:	mov	w9, #0x1                   	// #1
  45032c:	str	x20, [x8]
  450330:	str	x9, [sp, #40]
  450334:	b	450368 <_obstack_memory_used@@Base+0x9818>
  450338:	ldr	x24, [sp, #32]
  45033c:	tst	w25, #0x1
  450340:	cset	w23, eq  // eq = none
  450344:	cbnz	x24, 45031c <_obstack_memory_used@@Base+0x97cc>
  450348:	mov	w8, #0x1                   	// #1
  45034c:	dup	v0.2d, x8
  450350:	mov	w0, #0x8                   	// #8
  450354:	str	q0, [sp, #32]
  450358:	bl	404250 <malloc@plt>
  45035c:	str	x0, [sp, #48]
  450360:	cbz	x0, 4503fc <_obstack_memory_used@@Base+0x98ac>
  450364:	str	x20, [x0]
  450368:	ldr	x8, [x22, #48]
  45036c:	orr	w9, w23, w21
  450370:	tbz	w9, #0, 450390 <_obstack_memory_used@@Base+0x9840>
  450374:	ldr	x9, [sp, #48]
  450378:	ldr	q0, [sp, #32]
  45037c:	mov	w10, #0x18                  	// #24
  450380:	madd	x8, x20, x10, x8
  450384:	str	x9, [x8, #16]
  450388:	str	q0, [x8]
  45038c:	b	45039c <_obstack_memory_used@@Base+0x984c>
  450390:	mov	w9, #0x18                  	// #24
  450394:	madd	x8, x20, x9, x8
  450398:	str	xzr, [x8, #8]
  45039c:	ldr	x8, [sp, #48]
  4503a0:	ldr	q0, [sp, #32]
  4503a4:	mov	w0, wzr
  4503a8:	str	x8, [x19, #16]
  4503ac:	str	q0, [x19]
  4503b0:	ldp	x20, x19, [sp, #128]
  4503b4:	ldp	x22, x21, [sp, #112]
  4503b8:	ldp	x24, x23, [sp, #96]
  4503bc:	ldp	x26, x25, [sp, #80]
  4503c0:	ldp	x29, x30, [sp, #64]
  4503c4:	add	sp, sp, #0x90
  4503c8:	ret
  4503cc:	cmp	x24, x25
  4503d0:	b.ne	450408 <_obstack_memory_used@@Base+0x98b8>  // b.any
  4503d4:	ldr	x0, [sp, #48]
  4503d8:	lsl	x8, x24, #1
  4503dc:	lsl	x1, x24, #4
  4503e0:	str	x8, [sp, #32]
  4503e4:	bl	404490 <realloc@plt>
  4503e8:	cbz	x0, 4503f4 <_obstack_memory_used@@Base+0x98a4>
  4503ec:	str	x0, [sp, #48]
  4503f0:	b	45040c <_obstack_memory_used@@Base+0x98bc>
  4503f4:	mov	w0, #0xc                   	// #12
  4503f8:	b	4503b0 <_obstack_memory_used@@Base+0x9860>
  4503fc:	stp	xzr, xzr, [sp, #32]
  450400:	mov	w0, #0xc                   	// #12
  450404:	b	4503b0 <_obstack_memory_used@@Base+0x9860>
  450408:	ldr	x0, [sp, #48]
  45040c:	ldr	x8, [x0]
  450410:	cmp	x8, x20
  450414:	b.le	450440 <_obstack_memory_used@@Base+0x98f0>
  450418:	cmp	x25, #0x1
  45041c:	b.lt	450470 <_obstack_memory_used@@Base+0x9920>  // b.tstop
  450420:	mov	x9, x25
  450424:	add	x10, x0, x9, lsl #3
  450428:	ldur	x11, [x10, #-8]
  45042c:	subs	x8, x9, #0x1
  450430:	mov	x9, x8
  450434:	str	x11, [x10]
  450438:	b.gt	450424 <_obstack_memory_used@@Base+0x98d4>
  45043c:	b	450474 <_obstack_memory_used@@Base+0x9924>
  450440:	add	x8, x0, x25, lsl #3
  450444:	ldur	x9, [x8, #-8]
  450448:	mov	x8, x25
  45044c:	cmp	x9, x20
  450450:	b.le	450474 <_obstack_memory_used@@Base+0x9924>
  450454:	add	x10, x0, x8, lsl #3
  450458:	str	x9, [x10]
  45045c:	ldur	x9, [x10, #-16]
  450460:	sub	x8, x8, #0x1
  450464:	cmp	x9, x20
  450468:	b.gt	450454 <_obstack_memory_used@@Base+0x9904>
  45046c:	b	450474 <_obstack_memory_used@@Base+0x9924>
  450470:	mov	x8, x25
  450474:	str	x20, [x0, x8, lsl #3]
  450478:	add	x8, x25, #0x1
  45047c:	str	x8, [sp, #40]
  450480:	b	450368 <_obstack_memory_used@@Base+0x9818>
  450484:	stp	x29, x30, [sp, #-96]!
  450488:	stp	x26, x25, [sp, #32]
  45048c:	stp	x24, x23, [sp, #48]
  450490:	stp	x22, x21, [sp, #64]
  450494:	stp	x20, x19, [sp, #80]
  450498:	mov	w19, w4
  45049c:	mov	x20, x3
  4504a0:	mov	x22, x2
  4504a4:	mov	x23, x1
  4504a8:	mov	x21, x0
  4504ac:	mov	w25, #0x18                  	// #24
  4504b0:	str	x27, [sp, #16]
  4504b4:	mov	x29, sp
  4504b8:	ubfiz	w26, w19, #8, #10
  4504bc:	mov	x27, x23
  4504c0:	b	450574 <_obstack_memory_used@@Base+0x9a24>
  4504c4:	ldr	x9, [x21, #24]
  4504c8:	ldr	x10, [x21, #40]
  4504cc:	mov	x0, x21
  4504d0:	ldr	x24, [x9, x27, lsl #3]
  4504d4:	madd	x9, x22, x25, x10
  4504d8:	str	xzr, [x9, #8]
  4504dc:	add	x8, x8, x24, lsl #4
  4504e0:	ldp	x1, x2, [x8]
  4504e4:	bl	44ffbc <_obstack_memory_used@@Base+0x946c>
  4504e8:	cmn	x0, #0x1
  4504ec:	b.eq	450850 <_obstack_memory_used@@Base+0x9d00>  // b.none
  4504f0:	ldr	x8, [x21]
  4504f4:	lsl	x9, x0, #4
  4504f8:	mov	x23, x0
  4504fc:	mov	x1, x23
  450500:	add	x8, x8, x9
  450504:	ldr	w10, [x8, #8]
  450508:	and	w10, w10, #0xfffc00ff
  45050c:	orr	w10, w10, w26
  450510:	str	w10, [x8, #8]
  450514:	ldr	x8, [x21]
  450518:	add	x10, x8, x24, lsl #4
  45051c:	ldr	w10, [x10, #8]
  450520:	add	x8, x8, x9
  450524:	ldr	w11, [x8, #8]
  450528:	and	w10, w10, #0x3ff00
  45052c:	orr	w10, w10, w11
  450530:	str	w10, [x8, #8]
  450534:	ldr	x8, [x21]
  450538:	add	x8, x8, x9
  45053c:	ldr	w9, [x8, #8]
  450540:	orr	w9, w9, #0x40000
  450544:	str	w9, [x8, #8]
  450548:	ldr	x8, [x21, #32]
  45054c:	str	x24, [x8, x0, lsl #3]
  450550:	ldr	x8, [x21, #24]
  450554:	ldr	x9, [x8, x27, lsl #3]
  450558:	str	x9, [x8, x22, lsl #3]
  45055c:	ldr	x8, [x21, #40]
  450560:	madd	x0, x22, x25, x8
  450564:	bl	4509e4 <_obstack_memory_used@@Base+0x9e94>
  450568:	mov	x27, x24
  45056c:	mov	x22, x23
  450570:	tbz	w0, #0, 450850 <_obstack_memory_used@@Base+0x9d00>
  450574:	ldr	x8, [x21]
  450578:	add	x10, x8, x27, lsl #4
  45057c:	ldrb	w9, [x10, #8]!
  450580:	cmp	w9, #0x4
  450584:	b.eq	4504c4 <_obstack_memory_used@@Base+0x9974>  // b.none
  450588:	ldr	x9, [x21, #40]
  45058c:	madd	x11, x27, x25, x9
  450590:	ldr	x11, [x11, #8]
  450594:	cbz	x11, 450808 <_obstack_memory_used@@Base+0x9cb8>
  450598:	madd	x12, x27, x25, x9
  45059c:	ldr	x12, [x12, #16]
  4505a0:	cmp	x11, #0x1
  4505a4:	ldr	x23, [x12]
  4505a8:	madd	x12, x22, x25, x9
  4505ac:	str	xzr, [x12, #8]
  4505b0:	b.eq	450760 <_obstack_memory_used@@Base+0x9c10>  // b.none
  4505b4:	ldr	x12, [x21, #16]
  4505b8:	sub	x1, x12, #0x1
  4505bc:	cmp	x1, #0x1
  4505c0:	b.lt	450608 <_obstack_memory_used@@Base+0x9ab8>  // b.tstop
  4505c4:	add	x10, x8, x1, lsl #4
  4505c8:	ldr	w11, [x10, #8]
  4505cc:	tbz	w11, #18, 450608 <_obstack_memory_used@@Base+0x9ab8>
  4505d0:	ldr	x10, [x21, #32]
  4505d4:	add	x12, x8, x12, lsl #4
  4505d8:	sub	x12, x12, #0x18
  4505dc:	ldr	x13, [x10, x1, lsl #3]
  4505e0:	cmp	x13, x23
  4505e4:	b.ne	4505f4 <_obstack_memory_used@@Base+0x9aa4>  // b.any
  4505e8:	ubfx	w11, w11, #8, #10
  4505ec:	cmp	w11, w19
  4505f0:	b.eq	450750 <_obstack_memory_used@@Base+0x9c00>  // b.none
  4505f4:	ldr	w11, [x12], #-16
  4505f8:	sub	x1, x1, #0x1
  4505fc:	cmp	x1, #0x1
  450600:	b.lt	450608 <_obstack_memory_used@@Base+0x9ab8>  // b.tstop
  450604:	tbnz	w11, #18, 4505dc <_obstack_memory_used@@Base+0x9a8c>
  450608:	add	x8, x8, x23, lsl #4
  45060c:	ldp	x1, x2, [x8]
  450610:	mov	x0, x21
  450614:	bl	44ffbc <_obstack_memory_used@@Base+0x946c>
  450618:	cmn	x0, #0x1
  45061c:	b.eq	450850 <_obstack_memory_used@@Base+0x9d00>  // b.none
  450620:	ldr	x8, [x21]
  450624:	lsl	x9, x0, #4
  450628:	mov	x24, x0
  45062c:	mov	x1, x24
  450630:	add	x8, x8, x9
  450634:	ldr	w10, [x8, #8]
  450638:	and	w10, w10, #0xfffc00ff
  45063c:	orr	w10, w10, w26
  450640:	str	w10, [x8, #8]
  450644:	ldr	x8, [x21]
  450648:	add	x10, x8, x23, lsl #4
  45064c:	ldr	w10, [x10, #8]
  450650:	add	x8, x8, x9
  450654:	ldr	w11, [x8, #8]
  450658:	and	w10, w10, #0x3ff00
  45065c:	orr	w10, w10, w11
  450660:	str	w10, [x8, #8]
  450664:	ldr	x8, [x21]
  450668:	add	x8, x8, x9
  45066c:	ldr	w9, [x8, #8]
  450670:	orr	w9, w9, #0x40000
  450674:	str	w9, [x8, #8]
  450678:	ldr	x8, [x21, #32]
  45067c:	str	x23, [x8, x0, lsl #3]
  450680:	ldr	x8, [x21, #40]
  450684:	madd	x0, x22, x25, x8
  450688:	bl	4509e4 <_obstack_memory_used@@Base+0x9e94>
  45068c:	tbz	w0, #0, 450850 <_obstack_memory_used@@Base+0x9d00>
  450690:	mov	x0, x21
  450694:	mov	x1, x23
  450698:	mov	x2, x24
  45069c:	mov	x3, x20
  4506a0:	mov	w4, w19
  4506a4:	bl	450484 <_obstack_memory_used@@Base+0x9934>
  4506a8:	cbnz	w0, 450818 <_obstack_memory_used@@Base+0x9cc8>
  4506ac:	ldr	x8, [x21, #40]
  4506b0:	ldr	x9, [x21]
  4506b4:	mov	x0, x21
  4506b8:	madd	x8, x27, x25, x8
  4506bc:	ldr	x8, [x8, #16]
  4506c0:	ldr	x27, [x8, #8]
  4506c4:	add	x8, x9, x27, lsl #4
  4506c8:	ldp	x1, x2, [x8]
  4506cc:	bl	44ffbc <_obstack_memory_used@@Base+0x946c>
  4506d0:	cmn	x0, #0x1
  4506d4:	b.eq	450850 <_obstack_memory_used@@Base+0x9d00>  // b.none
  4506d8:	ldr	x8, [x21]
  4506dc:	lsl	x9, x0, #4
  4506e0:	mov	x23, x0
  4506e4:	mov	x1, x23
  4506e8:	add	x8, x8, x9
  4506ec:	ldr	w10, [x8, #8]
  4506f0:	and	w10, w10, #0xfffc00ff
  4506f4:	orr	w10, w10, w26
  4506f8:	str	w10, [x8, #8]
  4506fc:	ldr	x8, [x21]
  450700:	add	x10, x8, x27, lsl #4
  450704:	ldr	w10, [x10, #8]
  450708:	add	x8, x8, x9
  45070c:	ldr	w11, [x8, #8]
  450710:	and	w10, w10, #0x3ff00
  450714:	orr	w10, w10, w11
  450718:	str	w10, [x8, #8]
  45071c:	ldr	x8, [x21]
  450720:	add	x8, x8, x9
  450724:	ldr	w9, [x8, #8]
  450728:	orr	w9, w9, #0x40000
  45072c:	str	w9, [x8, #8]
  450730:	ldr	x8, [x21, #32]
  450734:	str	x27, [x8, x0, lsl #3]
  450738:	ldr	x8, [x21, #40]
  45073c:	madd	x0, x22, x25, x8
  450740:	bl	4509e4 <_obstack_memory_used@@Base+0x9e94>
  450744:	mov	x22, x23
  450748:	tbnz	w0, #0, 450574 <_obstack_memory_used@@Base+0x9a24>
  45074c:	b	450850 <_obstack_memory_used@@Base+0x9d00>
  450750:	madd	x0, x22, x25, x9
  450754:	bl	4509e4 <_obstack_memory_used@@Base+0x9e94>
  450758:	tbnz	w0, #0, 4506ac <_obstack_memory_used@@Base+0x9b5c>
  45075c:	b	450850 <_obstack_memory_used@@Base+0x9d00>
  450760:	cmp	x27, x20
  450764:	b.ne	450770 <_obstack_memory_used@@Base+0x9c20>  // b.any
  450768:	cmp	x22, x27
  45076c:	b.ne	450834 <_obstack_memory_used@@Base+0x9ce4>  // b.any
  450770:	add	x8, x8, x23, lsl #4
  450774:	ldp	x1, x2, [x8]
  450778:	ldr	w26, [x10]
  45077c:	mov	x0, x21
  450780:	bl	44ffbc <_obstack_memory_used@@Base+0x946c>
  450784:	cmn	x0, #0x1
  450788:	b.eq	450850 <_obstack_memory_used@@Base+0x9d00>  // b.none
  45078c:	ldr	x8, [x21]
  450790:	lsl	x9, x0, #4
  450794:	ubfx	w11, w26, #8, #10
  450798:	orr	w19, w11, w19
  45079c:	add	x8, x8, x9
  4507a0:	ldr	w10, [x8, #8]
  4507a4:	mov	x24, x0
  4507a8:	mov	x1, x24
  4507ac:	bfi	w10, w19, #8, #10
  4507b0:	str	w10, [x8, #8]
  4507b4:	ldr	x8, [x21]
  4507b8:	add	x10, x8, x23, lsl #4
  4507bc:	ldr	w10, [x10, #8]
  4507c0:	add	x8, x8, x9
  4507c4:	ldr	w11, [x8, #8]
  4507c8:	and	w10, w10, #0x3ff00
  4507cc:	orr	w10, w10, w11
  4507d0:	str	w10, [x8, #8]
  4507d4:	ldr	x8, [x21]
  4507d8:	add	x8, x8, x9
  4507dc:	ldr	w9, [x8, #8]
  4507e0:	orr	w9, w9, #0x40000
  4507e4:	str	w9, [x8, #8]
  4507e8:	ldr	x8, [x21, #32]
  4507ec:	str	x23, [x8, x0, lsl #3]
  4507f0:	ldr	x8, [x21, #40]
  4507f4:	madd	x0, x22, x25, x8
  4507f8:	bl	4509e4 <_obstack_memory_used@@Base+0x9e94>
  4507fc:	mov	x22, x24
  450800:	tbnz	w0, #0, 4504b8 <_obstack_memory_used@@Base+0x9968>
  450804:	b	450850 <_obstack_memory_used@@Base+0x9d00>
  450808:	ldr	x8, [x21, #24]
  45080c:	mov	w0, wzr
  450810:	ldr	x9, [x8, x27, lsl #3]
  450814:	str	x9, [x8, x22, lsl #3]
  450818:	ldp	x20, x19, [sp, #80]
  45081c:	ldp	x22, x21, [sp, #64]
  450820:	ldp	x24, x23, [sp, #48]
  450824:	ldp	x26, x25, [sp, #32]
  450828:	ldr	x27, [sp, #16]
  45082c:	ldp	x29, x30, [sp], #96
  450830:	ret
  450834:	mov	w8, #0x18                  	// #24
  450838:	madd	x0, x22, x8, x9
  45083c:	mov	x1, x23
  450840:	bl	4509e4 <_obstack_memory_used@@Base+0x9e94>
  450844:	tbz	w0, #0, 450850 <_obstack_memory_used@@Base+0x9d00>
  450848:	mov	w0, wzr
  45084c:	b	450818 <_obstack_memory_used@@Base+0x9cc8>
  450850:	mov	w0, #0xc                   	// #12
  450854:	b	450818 <_obstack_memory_used@@Base+0x9cc8>
  450858:	stp	x29, x30, [sp, #-48]!
  45085c:	str	x21, [sp, #16]
  450860:	stp	x20, x19, [sp, #32]
  450864:	mov	x29, sp
  450868:	cbz	x1, 450950 <_obstack_memory_used@@Base+0x9e00>
  45086c:	ldr	x10, [x1, #8]
  450870:	mov	x20, x1
  450874:	cbz	x10, 450950 <_obstack_memory_used@@Base+0x9e00>
  450878:	ldp	x8, x11, [x0]
  45087c:	mov	x19, x0
  450880:	add	x9, x11, x10, lsl #1
  450884:	cmp	x8, x9
  450888:	b.ge	4508b4 <_obstack_memory_used@@Base+0x9d64>  // b.tcont
  45088c:	ldr	x0, [x19, #16]
  450890:	add	x21, x8, x10
  450894:	lsl	x1, x21, #4
  450898:	bl	404490 <realloc@plt>
  45089c:	cbz	x0, 4509dc <_obstack_memory_used@@Base+0x9e8c>
  4508a0:	lsl	x8, x21, #1
  4508a4:	str	x0, [x19, #16]
  4508a8:	str	x8, [x19]
  4508ac:	ldr	x11, [x19, #8]
  4508b0:	ldr	x10, [x20, #8]
  4508b4:	cbz	x11, 4509c8 <_obstack_memory_used@@Base+0x9e78>
  4508b8:	sub	x8, x10, #0x1
  4508bc:	sub	x9, x11, #0x1
  4508c0:	orr	x12, x8, x9
  4508c4:	add	x21, x11, x10, lsl #1
  4508c8:	tbnz	x12, #63, 450914 <_obstack_memory_used@@Base+0x9dc4>
  4508cc:	ldr	x10, [x19, #16]
  4508d0:	ldr	x11, [x20, #16]
  4508d4:	b	4508ec <_obstack_memory_used@@Base+0x9d9c>
  4508d8:	sub	x8, x8, #0x1
  4508dc:	sub	x21, x21, #0x1
  4508e0:	str	x12, [x10, x21, lsl #3]
  4508e4:	orr	x12, x8, x9
  4508e8:	tbnz	x12, #63, 450914 <_obstack_memory_used@@Base+0x9dc4>
  4508ec:	ldr	x13, [x10, x9, lsl #3]
  4508f0:	ldr	x12, [x11, x8, lsl #3]
  4508f4:	cmp	x13, x12
  4508f8:	b.ne	450904 <_obstack_memory_used@@Base+0x9db4>  // b.any
  4508fc:	sub	x8, x8, #0x1
  450900:	b	450908 <_obstack_memory_used@@Base+0x9db8>
  450904:	b.lt	4508d8 <_obstack_memory_used@@Base+0x9d88>  // b.tstop
  450908:	sub	x9, x9, #0x1
  45090c:	orr	x12, x8, x9
  450910:	tbz	x12, #63, 4508ec <_obstack_memory_used@@Base+0x9d9c>
  450914:	tbnz	x8, #63, 450934 <_obstack_memory_used@@Base+0x9de4>
  450918:	ldr	x9, [x19, #16]
  45091c:	ldr	x1, [x20, #16]
  450920:	add	x8, x8, #0x1
  450924:	sub	x21, x21, x8
  450928:	add	x0, x9, x21, lsl #3
  45092c:	lsl	x2, x8, #3
  450930:	bl	403ec0 <memcpy@plt>
  450934:	ldr	x10, [x19, #8]
  450938:	ldr	x8, [x20, #8]
  45093c:	sub	x9, x10, #0x1
  450940:	add	x8, x9, x8, lsl #1
  450944:	sub	x11, x8, x21
  450948:	adds	x11, x11, #0x1
  45094c:	b.cc	450964 <_obstack_memory_used@@Base+0x9e14>  // b.lo, b.ul, b.last
  450950:	mov	w0, wzr
  450954:	ldp	x20, x19, [sp, #32]
  450958:	ldr	x21, [sp, #16]
  45095c:	ldp	x29, x30, [sp], #48
  450960:	ret
  450964:	ldr	x0, [x19, #16]
  450968:	add	x10, x11, x10
  45096c:	str	x10, [x19, #8]
  450970:	add	x10, x0, x9, lsl #3
  450974:	lsl	x2, x11, #3
  450978:	neg	x11, x11
  45097c:	ldr	x12, [x0, x8, lsl #3]
  450980:	ldr	x13, [x0, x9, lsl #3]
  450984:	cmp	x12, x13
  450988:	b.le	4509a4 <_obstack_memory_used@@Base+0x9e54>
  45098c:	sub	x8, x8, #0x1
  450990:	str	x12, [x10, x2]
  450994:	adds	x11, x11, #0x1
  450998:	sub	x2, x2, #0x8
  45099c:	b.cc	45097c <_obstack_memory_used@@Base+0x9e2c>  // b.lo, b.ul, b.last
  4509a0:	b	450950 <_obstack_memory_used@@Base+0x9e00>
  4509a4:	str	x13, [x10, x2]
  4509a8:	cmp	x9, #0x0
  4509ac:	sub	x9, x9, #0x1
  4509b0:	neg	x11, x11
  4509b4:	sub	x10, x10, #0x8
  4509b8:	b.gt	450974 <_obstack_memory_used@@Base+0x9e24>
  4509bc:	add	x1, x0, x21, lsl #3
  4509c0:	bl	403ec0 <memcpy@plt>
  4509c4:	b	450950 <_obstack_memory_used@@Base+0x9e00>
  4509c8:	str	x10, [x19, #8]
  4509cc:	ldp	x8, x1, [x20, #8]
  4509d0:	ldr	x0, [x19, #16]
  4509d4:	lsl	x2, x8, #3
  4509d8:	b	4509c0 <_obstack_memory_used@@Base+0x9e70>
  4509dc:	mov	w0, #0xc                   	// #12
  4509e0:	b	450954 <_obstack_memory_used@@Base+0x9e04>
  4509e4:	stp	x29, x30, [sp, #-32]!
  4509e8:	stp	x20, x19, [sp, #16]
  4509ec:	ldr	x9, [x0]
  4509f0:	mov	x19, x0
  4509f4:	mov	x20, x1
  4509f8:	mov	x29, sp
  4509fc:	cbz	x9, 450a20 <_obstack_memory_used@@Base+0x9ed0>
  450a00:	ldr	x8, [x19, #8]
  450a04:	cbnz	x8, 450a50 <_obstack_memory_used@@Base+0x9f00>
  450a08:	ldr	x8, [x19, #16]
  450a0c:	str	x20, [x8]
  450a10:	ldr	x8, [x19, #8]
  450a14:	add	x8, x8, #0x1
  450a18:	str	x8, [x19, #8]
  450a1c:	b	450a40 <_obstack_memory_used@@Base+0x9ef0>
  450a20:	mov	w8, #0x1                   	// #1
  450a24:	dup	v0.2d, x8
  450a28:	mov	w0, #0x8                   	// #8
  450a2c:	str	q0, [x19]
  450a30:	bl	404250 <malloc@plt>
  450a34:	str	x0, [x19, #16]
  450a38:	cbz	x0, 450a7c <_obstack_memory_used@@Base+0x9f2c>
  450a3c:	str	x20, [x0]
  450a40:	mov	w0, #0x1                   	// #1
  450a44:	ldp	x20, x19, [sp, #16]
  450a48:	ldp	x29, x30, [sp], #32
  450a4c:	ret
  450a50:	cmp	x9, x8
  450a54:	b.ne	450a84 <_obstack_memory_used@@Base+0x9f34>  // b.any
  450a58:	ldr	x0, [x19, #16]
  450a5c:	lsl	x8, x9, #1
  450a60:	lsl	x1, x9, #4
  450a64:	str	x8, [x19]
  450a68:	bl	404490 <realloc@plt>
  450a6c:	cbz	x0, 450a44 <_obstack_memory_used@@Base+0x9ef4>
  450a70:	ldr	x8, [x19, #8]
  450a74:	str	x0, [x19, #16]
  450a78:	b	450a88 <_obstack_memory_used@@Base+0x9f38>
  450a7c:	stp	xzr, xzr, [x19]
  450a80:	b	450a44 <_obstack_memory_used@@Base+0x9ef4>
  450a84:	ldr	x0, [x19, #16]
  450a88:	ldr	x9, [x0]
  450a8c:	cmp	x9, x20
  450a90:	b.le	450abc <_obstack_memory_used@@Base+0x9f6c>
  450a94:	cmp	x8, #0x1
  450a98:	b.lt	450ae4 <_obstack_memory_used@@Base+0x9f94>  // b.tstop
  450a9c:	mov	x9, x8
  450aa0:	add	x10, x0, x9, lsl #3
  450aa4:	ldur	x11, [x10, #-8]
  450aa8:	subs	x8, x9, #0x1
  450aac:	mov	x9, x8
  450ab0:	str	x11, [x10]
  450ab4:	b.gt	450aa0 <_obstack_memory_used@@Base+0x9f50>
  450ab8:	b	450ae4 <_obstack_memory_used@@Base+0x9f94>
  450abc:	add	x9, x0, x8, lsl #3
  450ac0:	ldur	x9, [x9, #-8]
  450ac4:	cmp	x9, x20
  450ac8:	b.le	450ae4 <_obstack_memory_used@@Base+0x9f94>
  450acc:	add	x10, x0, x8, lsl #3
  450ad0:	str	x9, [x10]
  450ad4:	ldur	x9, [x10, #-16]
  450ad8:	sub	x8, x8, #0x1
  450adc:	cmp	x9, x20
  450ae0:	b.gt	450acc <_obstack_memory_used@@Base+0x9f7c>
  450ae4:	str	x20, [x0, x8, lsl #3]
  450ae8:	b	450a10 <_obstack_memory_used@@Base+0x9ec0>
  450aec:	sub	sp, sp, #0x80
  450af0:	stp	x29, x30, [sp, #32]
  450af4:	stp	x28, x27, [sp, #48]
  450af8:	stp	x26, x25, [sp, #64]
  450afc:	stp	x24, x23, [sp, #80]
  450b00:	stp	x22, x21, [sp, #96]
  450b04:	stp	x20, x19, [sp, #112]
  450b08:	ldr	x27, [x2, #8]
  450b0c:	mov	x19, x0
  450b10:	add	x29, sp, #0x20
  450b14:	cbz	x27, 450b44 <_obstack_memory_used@@Base+0x9ff4>
  450b18:	mov	w26, w3
  450b1c:	mov	x22, x2
  450b20:	mov	x20, x1
  450b24:	subs	x8, x27, #0x1
  450b28:	add	x23, x27, w3, uxtw
  450b2c:	b.lt	450bac <_obstack_memory_used@@Base+0xa05c>  // b.tstop
  450b30:	ldr	x9, [x22, #16]
  450b34:	cmp	x27, #0x4
  450b38:	b.cs	450b50 <_obstack_memory_used@@Base+0xa000>  // b.hs, b.nlast
  450b3c:	mov	x10, xzr
  450b40:	b	450b94 <_obstack_memory_used@@Base+0xa044>
  450b44:	mov	x24, xzr
  450b48:	str	wzr, [x19]
  450b4c:	b	450e74 <_obstack_memory_used@@Base+0xa324>
  450b50:	and	x10, x27, #0xfffffffffffffffc
  450b54:	movi	v1.2d, #0x0
  450b58:	movi	v0.2d, #0x0
  450b5c:	mov	v1.d[0], x23
  450b60:	add	x11, x9, #0x10
  450b64:	mov	x12, x10
  450b68:	ldp	q2, q3, [x11, #-16]
  450b6c:	subs	x12, x12, #0x4
  450b70:	add	x11, x11, #0x20
  450b74:	add	v1.2d, v2.2d, v1.2d
  450b78:	add	v0.2d, v3.2d, v0.2d
  450b7c:	b.ne	450b68 <_obstack_memory_used@@Base+0xa018>  // b.any
  450b80:	add	v0.2d, v0.2d, v1.2d
  450b84:	addp	d0, v0.2d
  450b88:	cmp	x27, x10
  450b8c:	fmov	x23, d0
  450b90:	b.eq	450bac <_obstack_memory_used@@Base+0xa05c>  // b.none
  450b94:	sub	x11, x27, x10
  450b98:	add	x9, x9, x10, lsl #3
  450b9c:	ldr	x10, [x9], #8
  450ba0:	subs	x11, x11, #0x1
  450ba4:	add	x23, x10, x23
  450ba8:	b.ne	450b9c <_obstack_memory_used@@Base+0xa04c>  // b.any
  450bac:	ldr	x9, [x20, #136]
  450bb0:	ldr	x10, [x20, #64]
  450bb4:	and	x11, x9, x23
  450bb8:	mov	w9, #0x18                  	// #24
  450bbc:	mul	x9, x11, x9
  450bc0:	ldr	x9, [x10, x9]
  450bc4:	cmp	x9, #0x1
  450bc8:	b.lt	450c58 <_obstack_memory_used@@Base+0xa108>  // b.tstop
  450bcc:	mov	w12, #0x18                  	// #24
  450bd0:	madd	x10, x11, x12, x10
  450bd4:	ldr	x10, [x10, #16]
  450bd8:	mov	x11, xzr
  450bdc:	b	450bec <_obstack_memory_used@@Base+0xa09c>
  450be0:	add	x11, x11, #0x1
  450be4:	cmp	x11, x9
  450be8:	b.ge	450c58 <_obstack_memory_used@@Base+0xa108>  // b.tcont
  450bec:	ldr	x24, [x10, x11, lsl #3]
  450bf0:	ldr	x12, [x24]
  450bf4:	cmp	x12, x23
  450bf8:	b.ne	450be0 <_obstack_memory_used@@Base+0xa090>  // b.any
  450bfc:	ldrb	w12, [x24, #104]
  450c00:	and	w12, w12, #0xf
  450c04:	cmp	w12, w26
  450c08:	b.ne	450be0 <_obstack_memory_used@@Base+0xa090>  // b.any
  450c0c:	cbz	x22, 450be0 <_obstack_memory_used@@Base+0xa090>
  450c10:	ldr	x12, [x24, #80]
  450c14:	cbz	x12, 450be0 <_obstack_memory_used@@Base+0xa090>
  450c18:	ldr	x13, [x12, #8]
  450c1c:	cmp	x13, x27
  450c20:	b.ne	450be0 <_obstack_memory_used@@Base+0xa090>  // b.any
  450c24:	mov	x13, x8
  450c28:	add	x14, x13, #0x1
  450c2c:	cmp	x14, #0x1
  450c30:	b.lt	450e74 <_obstack_memory_used@@Base+0xa324>  // b.tstop
  450c34:	ldr	x14, [x12, #16]
  450c38:	ldr	x15, [x22, #16]
  450c3c:	lsl	x16, x13, #3
  450c40:	sub	x13, x13, #0x1
  450c44:	ldr	x14, [x14, x16]
  450c48:	ldr	x15, [x15, x16]
  450c4c:	cmp	x14, x15
  450c50:	b.eq	450c28 <_obstack_memory_used@@Base+0xa0d8>  // b.none
  450c54:	b	450be0 <_obstack_memory_used@@Base+0xa090>
  450c58:	mov	w0, #0x70                  	// #112
  450c5c:	mov	w1, #0x1                   	// #1
  450c60:	bl	404410 <calloc@plt>
  450c64:	cbz	x0, 450eac <_obstack_memory_used@@Base+0xa35c>
  450c68:	mov	x24, x0
  450c6c:	add	x13, x0, #0x8
  450c70:	cmp	x27, #0x1
  450c74:	str	x27, [x0, #16]
  450c78:	stur	x13, [x29, #-8]
  450c7c:	stp	x19, x20, [sp]
  450c80:	b.lt	450cbc <_obstack_memory_used@@Base+0xa16c>  // b.tstop
  450c84:	lsl	x25, x27, #3
  450c88:	mov	x0, x25
  450c8c:	str	x27, [x24, #8]
  450c90:	bl	404250 <malloc@plt>
  450c94:	str	x0, [x24, #24]
  450c98:	cbz	x0, 450ebc <_obstack_memory_used@@Base+0xa36c>
  450c9c:	ldr	x1, [x22, #16]
  450ca0:	mov	x2, x25
  450ca4:	bl	403ec0 <memcpy@plt>
  450ca8:	ldrb	w8, [x24, #104]
  450cac:	ldr	x27, [x22, #8]
  450cb0:	ldur	x13, [x29, #-8]
  450cb4:	and	w8, w8, #0xfffffff0
  450cb8:	b	450cc8 <_obstack_memory_used@@Base+0xa178>
  450cbc:	mov	w8, wzr
  450cc0:	stp	xzr, xzr, [x13]
  450cc4:	str	xzr, [x13, #16]
  450cc8:	and	w9, w26, #0xf
  450ccc:	cmp	x27, #0x1
  450cd0:	orr	w8, w8, w9
  450cd4:	strb	w8, [x24, #104]
  450cd8:	str	x13, [x24, #80]
  450cdc:	b.lt	450e60 <_obstack_memory_used@@Base+0xa310>  // b.tstop
  450ce0:	ldr	x8, [sp, #8]
  450ce4:	ldr	x25, [x22, #16]
  450ce8:	mov	x19, xzr
  450cec:	str	x22, [sp, #16]
  450cf0:	ldr	x14, [x8]
  450cf4:	mov	x8, xzr
  450cf8:	b	450d10 <_obstack_memory_used@@Base+0xa1c0>
  450cfc:	add	x8, x8, #0x1
  450d00:	ldr	x27, [x22, #8]
  450d04:	add	x19, x19, #0x1
  450d08:	cmp	x19, x27
  450d0c:	b.ge	450e60 <_obstack_memory_used@@Base+0xa310>  // b.tcont
  450d10:	ldr	x9, [x25, x19, lsl #3]
  450d14:	add	x9, x14, x9, lsl #4
  450d18:	ldr	w28, [x9, #8]
  450d1c:	and	w9, w28, #0x3ffff
  450d20:	cmp	w9, #0x1
  450d24:	b.eq	450d00 <_obstack_memory_used@@Base+0xa1b0>  // b.none
  450d28:	ldrb	w11, [x24, #104]
  450d2c:	lsr	w12, w28, #15
  450d30:	and	w10, w28, #0xff
  450d34:	and	w12, w12, #0x20
  450d38:	and	w9, w28, #0x3ff00
  450d3c:	orr	w21, w11, w12
  450d40:	cmp	w10, #0x2
  450d44:	strb	w21, [x24, #104]
  450d48:	b.eq	450d5c <_obstack_memory_used@@Base+0xa20c>  // b.none
  450d4c:	cmp	w10, #0x4
  450d50:	b.ne	450d68 <_obstack_memory_used@@Base+0xa218>  // b.any
  450d54:	mov	w10, #0x40                  	// #64
  450d58:	b	450d60 <_obstack_memory_used@@Base+0xa210>
  450d5c:	mov	w10, #0x10                  	// #16
  450d60:	orr	w21, w21, w10
  450d64:	strb	w21, [x24, #104]
  450d68:	cbz	w9, 450d00 <_obstack_memory_used@@Base+0xa1b0>
  450d6c:	ldr	x9, [x24, #80]
  450d70:	cmp	x9, x13
  450d74:	b.eq	450d80 <_obstack_memory_used@@Base+0xa230>  // b.none
  450d78:	tbz	w26, #0, 450dfc <_obstack_memory_used@@Base+0xa2ac>
  450d7c:	b	450e00 <_obstack_memory_used@@Base+0xa2b0>
  450d80:	mov	w0, #0x18                  	// #24
  450d84:	mov	x22, x14
  450d88:	mov	w20, w26
  450d8c:	bl	404250 <malloc@plt>
  450d90:	str	x0, [x24, #80]
  450d94:	cbz	x0, 450e98 <_obstack_memory_used@@Base+0xa348>
  450d98:	mov	x26, x0
  450d9c:	cmp	x27, #0x1
  450da0:	str	x27, [x0, #8]
  450da4:	b.lt	450dd4 <_obstack_memory_used@@Base+0xa284>  // b.tstop
  450da8:	str	x27, [x26]
  450dac:	lsl	x27, x27, #3
  450db0:	mov	x0, x27
  450db4:	bl	404250 <malloc@plt>
  450db8:	str	x0, [x26, #16]
  450dbc:	cbz	x0, 450ea4 <_obstack_memory_used@@Base+0xa354>
  450dc0:	mov	x1, x25
  450dc4:	mov	x2, x27
  450dc8:	bl	403ec0 <memcpy@plt>
  450dcc:	ldrb	w21, [x24, #104]
  450dd0:	b	450ddc <_obstack_memory_used@@Base+0xa28c>
  450dd4:	stp	xzr, xzr, [x26]
  450dd8:	str	xzr, [x26, #16]
  450ddc:	ldur	x13, [x29, #-8]
  450de0:	mov	x14, x22
  450de4:	ldr	x22, [sp, #16]
  450de8:	mov	x8, xzr
  450dec:	orr	w9, w21, #0x80
  450df0:	mov	w26, w20
  450df4:	strb	w9, [x24, #104]
  450df8:	tbnz	w26, #0, 450e00 <_obstack_memory_used@@Base+0xa2b0>
  450dfc:	tbnz	w28, #8, 450e18 <_obstack_memory_used@@Base+0xa2c8>
  450e00:	tbz	w26, #0, 450e08 <_obstack_memory_used@@Base+0xa2b8>
  450e04:	tbnz	w28, #9, 450e18 <_obstack_memory_used@@Base+0xa2c8>
  450e08:	tbnz	w26, #1, 450e10 <_obstack_memory_used@@Base+0xa2c0>
  450e0c:	tbnz	w28, #12, 450e18 <_obstack_memory_used@@Base+0xa2c8>
  450e10:	tbnz	w26, #2, 450d00 <_obstack_memory_used@@Base+0xa1b0>
  450e14:	tbz	w28, #14, 450d00 <_obstack_memory_used@@Base+0xa1b0>
  450e18:	subs	x9, x19, x8
  450e1c:	b.mi	450cfc <_obstack_memory_used@@Base+0xa1ac>  // b.first
  450e20:	ldr	x10, [x24, #16]
  450e24:	cmp	x10, x9
  450e28:	b.le	450cfc <_obstack_memory_used@@Base+0xa1ac>
  450e2c:	sub	x10, x10, #0x1
  450e30:	cmp	x10, x9
  450e34:	str	x10, [x24, #16]
  450e38:	b.le	450cfc <_obstack_memory_used@@Base+0xa1ac>
  450e3c:	ldr	x10, [x24, #24]
  450e40:	add	x11, x10, x9, lsl #3
  450e44:	ldr	x12, [x11, #8]
  450e48:	add	x9, x9, #0x1
  450e4c:	str	x12, [x11]
  450e50:	ldr	x11, [x24, #16]
  450e54:	cmp	x9, x11
  450e58:	b.lt	450e40 <_obstack_memory_used@@Base+0xa2f0>  // b.tstop
  450e5c:	b	450cfc <_obstack_memory_used@@Base+0xa1ac>
  450e60:	ldr	x0, [sp, #8]
  450e64:	mov	x1, x24
  450e68:	mov	x2, x23
  450e6c:	bl	450ec8 <_obstack_memory_used@@Base+0xa378>
  450e70:	cbnz	w0, 450e98 <_obstack_memory_used@@Base+0xa348>
  450e74:	mov	x0, x24
  450e78:	ldp	x20, x19, [sp, #112]
  450e7c:	ldp	x22, x21, [sp, #96]
  450e80:	ldp	x24, x23, [sp, #80]
  450e84:	ldp	x26, x25, [sp, #64]
  450e88:	ldp	x28, x27, [sp, #48]
  450e8c:	ldp	x29, x30, [sp, #32]
  450e90:	add	sp, sp, #0x80
  450e94:	ret
  450e98:	mov	x0, x24
  450e9c:	bl	44b73c <_obstack_memory_used@@Base+0x4bec>
  450ea0:	b	450ea8 <_obstack_memory_used@@Base+0xa358>
  450ea4:	stp	xzr, xzr, [x26]
  450ea8:	ldr	x19, [sp]
  450eac:	mov	x24, xzr
  450eb0:	mov	w8, #0xc                   	// #12
  450eb4:	str	w8, [x19]
  450eb8:	b	450e74 <_obstack_memory_used@@Base+0xa324>
  450ebc:	mov	x0, x24
  450ec0:	bl	404700 <free@plt>
  450ec4:	b	450eac <_obstack_memory_used@@Base+0xa35c>
  450ec8:	stp	x29, x30, [sp, #-64]!
  450ecc:	stp	x24, x23, [sp, #16]
  450ed0:	stp	x22, x21, [sp, #32]
  450ed4:	stp	x20, x19, [sp, #48]
  450ed8:	ldr	x22, [x1, #16]
  450edc:	mov	x21, x0
  450ee0:	mov	x29, sp
  450ee4:	mov	x20, x2
  450ee8:	lsl	x0, x22, #3
  450eec:	mov	x19, x1
  450ef0:	str	x2, [x1]
  450ef4:	stp	x22, xzr, [x1, #32]
  450ef8:	bl	404250 <malloc@plt>
  450efc:	str	x0, [x19, #48]
  450f00:	cbz	x0, 451004 <_obstack_memory_used@@Base+0xa4b4>
  450f04:	cmp	x22, #0x1
  450f08:	b.lt	450f78 <_obstack_memory_used@@Base+0xa428>  // b.tstop
  450f0c:	mov	x23, xzr
  450f10:	b	450f2c <_obstack_memory_used@@Base+0xa3dc>
  450f14:	add	x9, x8, #0x1
  450f18:	str	x9, [x19, #40]
  450f1c:	str	x24, [x0, x8, lsl #3]
  450f20:	add	x23, x23, #0x1
  450f24:	cmp	x23, x22
  450f28:	b.ge	450f78 <_obstack_memory_used@@Base+0xa428>  // b.tcont
  450f2c:	ldr	x8, [x19, #24]
  450f30:	ldr	x24, [x8, x23, lsl #3]
  450f34:	ldr	x8, [x21]
  450f38:	add	x8, x8, x24, lsl #4
  450f3c:	ldrb	w8, [x8, #8]
  450f40:	tbnz	w8, #3, 450f20 <_obstack_memory_used@@Base+0xa3d0>
  450f44:	ldp	x9, x8, [x19, #32]
  450f48:	cmp	x9, x8
  450f4c:	b.ne	450f14 <_obstack_memory_used@@Base+0xa3c4>  // b.any
  450f50:	lsl	x8, x9, #1
  450f54:	add	x8, x8, #0x2
  450f58:	lsl	x1, x8, #3
  450f5c:	str	x8, [x19, #32]
  450f60:	bl	404490 <realloc@plt>
  450f64:	cbz	x0, 451004 <_obstack_memory_used@@Base+0xa4b4>
  450f68:	ldr	x8, [x19, #40]
  450f6c:	ldr	x22, [x19, #16]
  450f70:	str	x0, [x19, #48]
  450f74:	b	450f14 <_obstack_memory_used@@Base+0xa3c4>
  450f78:	ldr	x9, [x21, #136]
  450f7c:	ldr	x8, [x21, #64]
  450f80:	mov	w11, #0x18                  	// #24
  450f84:	and	x10, x9, x20
  450f88:	madd	x20, x10, x11, x8
  450f8c:	mov	x21, x20
  450f90:	ldr	x11, [x21, #8]!
  450f94:	ldr	x9, [x20]
  450f98:	cmp	x11, x9
  450f9c:	b.le	450fd0 <_obstack_memory_used@@Base+0xa480>
  450fa0:	mov	w11, #0x18                  	// #24
  450fa4:	madd	x8, x10, x11, x8
  450fa8:	ldr	x8, [x8, #16]
  450fac:	mov	w0, wzr
  450fb0:	add	x10, x9, #0x1
  450fb4:	str	x10, [x20]
  450fb8:	str	x19, [x8, x9, lsl #3]
  450fbc:	ldp	x20, x19, [sp, #48]
  450fc0:	ldp	x22, x21, [sp, #32]
  450fc4:	ldp	x24, x23, [sp, #16]
  450fc8:	ldp	x29, x30, [sp], #64
  450fcc:	ret
  450fd0:	mov	w11, #0x18                  	// #24
  450fd4:	madd	x22, x10, x11, x8
  450fd8:	ldr	x0, [x22, #16]!
  450fdc:	lsl	x8, x9, #1
  450fe0:	add	x23, x8, #0x2
  450fe4:	lsl	x1, x23, #3
  450fe8:	bl	404490 <realloc@plt>
  450fec:	cbz	x0, 451004 <_obstack_memory_used@@Base+0xa4b4>
  450ff0:	str	x0, [x22]
  450ff4:	str	x23, [x21]
  450ff8:	ldr	x9, [x20]
  450ffc:	mov	x8, x0
  451000:	b	450fac <_obstack_memory_used@@Base+0xa45c>
  451004:	mov	w0, #0xc                   	// #12
  451008:	b	450fbc <_obstack_memory_used@@Base+0xa46c>
  45100c:	sub	sp, sp, #0x80
  451010:	stp	x29, x30, [sp, #32]
  451014:	stp	x28, x27, [sp, #48]
  451018:	stp	x26, x25, [sp, #64]
  45101c:	stp	x24, x23, [sp, #80]
  451020:	stp	x22, x21, [sp, #96]
  451024:	stp	x20, x19, [sp, #112]
  451028:	mov	x24, x0
  45102c:	ldr	x8, [x24, #40]!
  451030:	mov	x19, x0
  451034:	mov	x20, x1
  451038:	mov	w21, w2
  45103c:	cmp	x8, x1
  451040:	add	x29, sp, #0x20
  451044:	b.le	45123c <_obstack_memory_used@@Base+0xa6ec>
  451048:	ldr	w8, [x19, #144]
  45104c:	cmp	w8, #0x2
  451050:	b.lt	451058 <_obstack_memory_used@@Base+0xa508>  // b.tstop
  451054:	str	xzr, [x19, #32]
  451058:	ldr	x9, [x19, #80]
  45105c:	ldr	x10, [x19, #96]
  451060:	strb	wzr, [x19, #140]
  451064:	tst	w21, #0x1
  451068:	str	x9, [x19, #88]
  45106c:	str	x10, [x19, #104]
  451070:	stp	xzr, xzr, [x24]
  451074:	str	xzr, [x24, #16]
  451078:	ldrb	w9, [x19, #139]
  45107c:	mov	w10, #0x4                   	// #4
  451080:	mov	w11, #0x6                   	// #6
  451084:	mov	x8, xzr
  451088:	csel	w10, w11, w10, eq  // eq = none
  45108c:	mov	x25, x20
  451090:	str	w10, [x19, #112]
  451094:	cbnz	w9, 4510a8 <_obstack_memory_used@@Base+0xa558>
  451098:	ldr	x9, [x19]
  45109c:	mov	x8, xzr
  4510a0:	mov	x25, x20
  4510a4:	str	x9, [x19, #8]
  4510a8:	cbz	x25, 4511bc <_obstack_memory_used@@Base+0xa66c>
  4510ac:	ldr	x9, [x19, #56]
  4510b0:	cmp	x25, x9
  4510b4:	b.ge	451248 <_obstack_memory_used@@Base+0xa6f8>  // b.tcont
  4510b8:	ldrb	w8, [x19, #140]
  4510bc:	cbnz	w8, 451384 <_obstack_memory_used@@Base+0xa834>
  4510c0:	cmp	x25, #0x0
  4510c4:	b.le	451108 <_obstack_memory_used@@Base+0xa5b8>
  4510c8:	ldr	x9, [x19, #88]
  4510cc:	sub	x8, x25, #0x1
  4510d0:	cmp	x9, x8
  4510d4:	b.eq	451444 <_obstack_memory_used@@Base+0xa8f4>  // b.none
  4510d8:	ldr	w9, [x19, #144]
  4510dc:	cmp	w9, #0x2
  4510e0:	b.lt	451110 <_obstack_memory_used@@Base+0xa5c0>  // b.tstop
  4510e4:	ldr	x8, [x19, #16]
  4510e8:	mov	x9, x25
  4510ec:	sub	x8, x8, #0x4
  4510f0:	ldr	w21, [x8, x9, lsl #2]
  4510f4:	cmn	w21, #0x1
  4510f8:	b.ne	451138 <_obstack_memory_used@@Base+0xa5e8>  // b.any
  4510fc:	sub	x9, x9, #0x1
  451100:	cmp	x9, #0x0
  451104:	b.gt	4510f0 <_obstack_memory_used@@Base+0xa5a0>
  451108:	ldr	w8, [x19, #112]
  45110c:	b	451168 <_obstack_memory_used@@Base+0xa618>
  451110:	ldr	x9, [x19, #8]
  451114:	ldrb	w8, [x9, x8]
  451118:	ldr	x9, [x19, #128]
  45111c:	lsr	x10, x8, #3
  451120:	and	x10, x10, #0x18
  451124:	ldr	x9, [x9, x10]
  451128:	lsr	x9, x9, x8
  45112c:	tbz	w9, #0, 45115c <_obstack_memory_used@@Base+0xa60c>
  451130:	mov	w8, #0x1                   	// #1
  451134:	b	451168 <_obstack_memory_used@@Base+0xa618>
  451138:	ldrb	w8, [x19, #142]
  45113c:	cbnz	w8, 45154c <_obstack_memory_used@@Base+0xa9fc>
  451140:	cmp	w21, #0xa
  451144:	b.ne	451164 <_obstack_memory_used@@Base+0xa614>  // b.any
  451148:	ldrb	w8, [x19, #141]
  45114c:	cmp	w8, #0x0
  451150:	cset	w8, ne  // ne = any
  451154:	lsl	w8, w8, #1
  451158:	b	451168 <_obstack_memory_used@@Base+0xa618>
  45115c:	cmp	w8, #0xa
  451160:	b.eq	451148 <_obstack_memory_used@@Base+0xa5f8>  // b.none
  451164:	mov	w8, wzr
  451168:	ldr	w9, [x19, #144]
  45116c:	str	w8, [x19, #112]
  451170:	cmp	w9, #0x2
  451174:	b.lt	451190 <_obstack_memory_used@@Base+0xa640>  // b.tstop
  451178:	ldr	x8, [x19, #48]
  45117c:	ldr	x0, [x19, #16]
  451180:	sub	x8, x8, x25
  451184:	add	x1, x0, x25, lsl #2
  451188:	lsl	x2, x8, #2
  45118c:	bl	403ed0 <memmove@plt>
  451190:	ldrb	w8, [x19, #139]
  451194:	cbnz	w8, 45142c <_obstack_memory_used@@Base+0xa8dc>
  451198:	ldr	q0, [x19, #48]
  45119c:	dup	v1.2d, x25
  4511a0:	sub	v0.2d, v0.2d, v1.2d
  4511a4:	str	q0, [x19, #48]
  4511a8:	ldrb	w8, [x19, #139]
  4511ac:	cbnz	w8, 4511bc <_obstack_memory_used@@Base+0xa66c>
  4511b0:	ldr	x8, [x19, #8]
  4511b4:	add	x8, x8, x25
  4511b8:	str	x8, [x19, #8]
  4511bc:	ldr	x8, [x19, #88]
  4511c0:	ldr	x10, [x19, #104]
  4511c4:	ldr	w11, [x19, #144]
  4511c8:	str	x20, [x19, #40]
  4511cc:	sub	x9, x8, x25
  4511d0:	sub	x8, x10, x25
  4511d4:	cmp	w11, #0x2
  4511d8:	str	x9, [x19, #88]
  4511dc:	str	x8, [x19, #104]
  4511e0:	b.lt	4511fc <_obstack_memory_used@@Base+0xa6ac>  // b.tstop
  4511e4:	ldrb	w8, [x19, #136]
  4511e8:	cbz	w8, 45120c <_obstack_memory_used@@Base+0xa6bc>
  4511ec:	mov	x0, x19
  4511f0:	bl	44b7a4 <_obstack_memory_used@@Base+0x4c54>
  4511f4:	cbnz	w0, 45121c <_obstack_memory_used@@Base+0xa6cc>
  4511f8:	b	451214 <_obstack_memory_used@@Base+0xa6c4>
  4511fc:	ldrb	w8, [x19, #139]
  451200:	cbnz	w8, 451454 <_obstack_memory_used@@Base+0xa904>
  451204:	str	x9, [x19, #48]
  451208:	b	451214 <_obstack_memory_used@@Base+0xa6c4>
  45120c:	mov	x0, x19
  451210:	bl	44be60 <_obstack_memory_used@@Base+0x5310>
  451214:	mov	w0, wzr
  451218:	str	xzr, [x19, #72]
  45121c:	ldp	x20, x19, [sp, #112]
  451220:	ldp	x22, x21, [sp, #96]
  451224:	ldp	x24, x23, [sp, #80]
  451228:	ldp	x26, x25, [sp, #64]
  45122c:	ldp	x28, x27, [sp, #48]
  451230:	ldp	x29, x30, [sp, #32]
  451234:	add	sp, sp, #0x80
  451238:	ret
  45123c:	sub	x25, x20, x8
  451240:	cbnz	x25, 4510ac <_obstack_memory_used@@Base+0xa55c>
  451244:	b	4511bc <_obstack_memory_used@@Base+0xa66c>
  451248:	ldrb	w10, [x19, #140]
  45124c:	ldr	x26, [x19, #48]
  451250:	cbnz	w10, 451844 <_obstack_memory_used@@Base+0xacf4>
  451254:	ldr	w10, [x19, #144]
  451258:	str	xzr, [x19, #48]
  45125c:	cmp	w10, #0x2
  451260:	b.lt	4514b8 <_obstack_memory_used@@Base+0xa968>  // b.tstop
  451264:	ldrb	w11, [x19, #137]
  451268:	cbz	w11, 451310 <_obstack_memory_used@@Base+0xa7c0>
  45126c:	ldr	x13, [x19]
  451270:	sub	x10, x25, x10
  451274:	add	x11, x13, x8
  451278:	add	x10, x11, x10
  45127c:	cmp	x10, x13
  451280:	add	x22, x11, x25
  451284:	csel	x12, x13, x10, cc  // cc = lo, ul, last
  451288:	add	x10, x13, x25
  45128c:	add	x13, x10, x8
  451290:	sub	x13, x13, #0x1
  451294:	cmp	x13, x12
  451298:	b.cc	451310 <_obstack_memory_used@@Base+0xa7c0>  // b.lo, b.ul, b.last
  45129c:	ldrb	w13, [x13]
  4512a0:	sub	x10, x10, #0x1
  4512a4:	and	w13, w13, #0xc0
  4512a8:	cmp	w13, #0x80
  4512ac:	b.eq	45128c <_obstack_memory_used@@Base+0xa73c>  // b.none
  4512b0:	ldr	x12, [x19, #88]
  4512b4:	ldr	x9, [x19, #120]
  4512b8:	add	x23, x10, x8
  4512bc:	mov	x1, x23
  4512c0:	add	x11, x11, x12
  4512c4:	sub	x2, x11, x23
  4512c8:	cbnz	x9, 4518ec <_obstack_memory_used@@Base+0xad9c>
  4512cc:	sub	x0, x29, #0xc
  4512d0:	sub	x3, x29, #0x8
  4512d4:	stur	xzr, [x29, #-8]
  4512d8:	bl	446778 <argp_parse@@Base+0xeecc>
  4512dc:	sub	x8, x22, x23
  4512e0:	subs	x8, x0, x8
  4512e4:	mov	w9, #0xffffffff            	// #-1
  4512e8:	b.cc	451300 <_obstack_memory_used@@Base+0xa7b0>  // b.lo, b.ul, b.last
  4512ec:	cmn	x0, #0x3
  4512f0:	b.hi	451300 <_obstack_memory_used@@Base+0xa7b0>  // b.pmore
  4512f4:	str	xzr, [x19, #32]
  4512f8:	str	x8, [x19, #48]
  4512fc:	ldur	w9, [x29, #-12]
  451300:	cmn	w9, #0x1
  451304:	b.ne	45157c <_obstack_memory_used@@Base+0xaa2c>  // b.any
  451308:	ldr	x8, [x19, #40]
  45130c:	ldr	x9, [x19, #56]
  451310:	add	x27, x9, x8
  451314:	subs	x8, x27, x20
  451318:	b.ge	451568 <_obstack_memory_used@@Base+0xaa18>  // b.tcont
  45131c:	add	x22, x19, #0x20
  451320:	ldr	x8, [x19, #80]
  451324:	ldr	x9, [x19]
  451328:	ldr	x28, [x19, #32]
  45132c:	sub	x0, x29, #0x8
  451330:	sub	x23, x8, x27
  451334:	add	x1, x9, x27
  451338:	mov	x2, x23
  45133c:	mov	x3, x22
  451340:	bl	446778 <argp_parse@@Base+0xeecc>
  451344:	sub	x8, x0, #0x1
  451348:	cmn	x8, #0x3
  45134c:	b.cs	451364 <_obstack_memory_used@@Base+0xa814>  // b.hs, b.nlast
  451350:	ldur	w9, [x29, #-8]
  451354:	add	x27, x0, x27
  451358:	subs	x8, x27, x20
  45135c:	b.lt	451320 <_obstack_memory_used@@Base+0xa7d0>  // b.tstop
  451360:	b	451570 <_obstack_memory_used@@Base+0xaa20>
  451364:	mov	w9, wzr
  451368:	cbz	x23, 451378 <_obstack_memory_used@@Base+0xa828>
  45136c:	cbz	x0, 451378 <_obstack_memory_used@@Base+0xa828>
  451370:	ldr	x8, [x19]
  451374:	ldrb	w9, [x8, x27]
  451378:	str	x28, [x22]
  45137c:	mov	w0, #0x1                   	// #1
  451380:	b	451354 <_obstack_memory_used@@Base+0xa804>
  451384:	ldr	x10, [x19, #48]
  451388:	ldr	x9, [x19, #24]
  45138c:	mov	x11, xzr
  451390:	b	4513a0 <_obstack_memory_used@@Base+0xa850>
  451394:	cmp	x11, x13
  451398:	mov	x10, x13
  45139c:	b.ge	4513d0 <_obstack_memory_used@@Base+0xa880>  // b.tcont
  4513a0:	add	x8, x11, x10
  4513a4:	cmp	x8, #0x0
  4513a8:	cinc	x8, x8, lt  // lt = tstop
  4513ac:	asr	x8, x8, #1
  4513b0:	ldr	x12, [x9, x8, lsl #3]
  4513b4:	mov	x13, x8
  4513b8:	cmp	x12, x25
  4513bc:	b.gt	451394 <_obstack_memory_used@@Base+0xa844>
  4513c0:	b.ge	4513d0 <_obstack_memory_used@@Base+0xa880>  // b.tcont
  4513c4:	add	x11, x8, #0x1
  4513c8:	mov	x13, x10
  4513cc:	b	451394 <_obstack_memory_used@@Base+0xa844>
  4513d0:	cmp	x12, x25
  4513d4:	cinc	x22, x8, lt  // lt = tstop
  4513d8:	cset	w9, lt  // lt = tstop
  4513dc:	cmp	x22, #0x0
  4513e0:	b.le	451424 <_obstack_memory_used@@Base+0xa8d4>
  4513e4:	ldr	x11, [x19, #88]
  4513e8:	sub	x10, x22, #0x1
  4513ec:	cmp	x11, x10
  4513f0:	b.eq	451868 <_obstack_memory_used@@Base+0xad18>  // b.none
  4513f4:	ldr	w11, [x19, #144]
  4513f8:	cmp	w11, #0x2
  4513fc:	b.lt	4514f8 <_obstack_memory_used@@Base+0xa9a8>  // b.tstop
  451400:	ldr	x10, [x19, #16]
  451404:	add	x8, x9, x8
  451408:	sub	x9, x10, #0x4
  45140c:	ldr	w21, [x9, x8, lsl #2]
  451410:	cmn	w21, #0x1
  451414:	b.ne	451528 <_obstack_memory_used@@Base+0xa9d8>  // b.any
  451418:	sub	x8, x8, #0x1
  45141c:	cmp	x8, #0x0
  451420:	b.gt	45140c <_obstack_memory_used@@Base+0xa8bc>
  451424:	ldr	w9, [x19, #112]
  451428:	b	451670 <_obstack_memory_used@@Base+0xab20>
  45142c:	ldr	x0, [x19, #8]
  451430:	ldr	x8, [x19, #48]
  451434:	add	x1, x0, x25
  451438:	sub	x2, x8, x25
  45143c:	bl	403ed0 <memmove@plt>
  451440:	b	451198 <_obstack_memory_used@@Base+0xa648>
  451444:	and	w8, w21, #0x2
  451448:	mov	w9, #0xa                   	// #10
  45144c:	eor	w8, w8, w9
  451450:	b	451168 <_obstack_memory_used@@Base+0xa618>
  451454:	ldrb	w8, [x19, #136]
  451458:	cbz	w8, 4515ec <_obstack_memory_used@@Base+0xaa9c>
  45145c:	ldr	x8, [x19, #64]
  451460:	ldr	x21, [x19, #48]
  451464:	cmp	x8, x9
  451468:	csel	x22, x9, x8, gt
  45146c:	cmp	x21, x22
  451470:	b.ge	451520 <_obstack_memory_used@@Base+0xa9d0>  // b.tcont
  451474:	bl	4044a0 <__ctype_toupper_loc@plt>
  451478:	ldr	x8, [x19]
  45147c:	ldr	x9, [x19, #120]
  451480:	add	x8, x8, x20
  451484:	ldrb	w8, [x8, x21]
  451488:	cbnz	x9, 4514b0 <_obstack_memory_used@@Base+0xa960>
  45148c:	ldr	x9, [x0]
  451490:	ldr	x10, [x19, #8]
  451494:	ldr	w8, [x9, w8, uxtw #2]
  451498:	strb	w8, [x10, x21]
  45149c:	add	x21, x21, #0x1
  4514a0:	cmp	x21, x22
  4514a4:	b.ge	451520 <_obstack_memory_used@@Base+0xa9d0>  // b.tcont
  4514a8:	ldr	x20, [x24]
  4514ac:	b	451478 <_obstack_memory_used@@Base+0xa928>
  4514b0:	ldrb	w8, [x9, x8]
  4514b4:	b	45148c <_obstack_memory_used@@Base+0xa93c>
  4514b8:	ldr	x9, [x19]
  4514bc:	add	x8, x25, x8
  4514c0:	add	x8, x8, x9
  4514c4:	ldr	x9, [x19, #120]
  4514c8:	ldurb	w8, [x8, #-1]
  4514cc:	str	xzr, [x19, #56]
  4514d0:	cbz	x9, 4514d8 <_obstack_memory_used@@Base+0xa988>
  4514d4:	ldrb	w8, [x9, x8]
  4514d8:	ldr	x9, [x19, #128]
  4514dc:	lsr	x10, x8, #3
  4514e0:	and	x10, x10, #0x18
  4514e4:	ldr	x9, [x9, x10]
  4514e8:	lsr	x9, x9, x8
  4514ec:	tbz	w9, #0, 451648 <_obstack_memory_used@@Base+0xaaf8>
  4514f0:	mov	w8, #0x1                   	// #1
  4514f4:	b	451804 <_obstack_memory_used@@Base+0xacb4>
  4514f8:	ldr	x8, [x19, #8]
  4514fc:	ldr	x9, [x19, #128]
  451500:	ldrb	w8, [x8, x10]
  451504:	lsr	x10, x8, #3
  451508:	and	x10, x10, #0x18
  45150c:	ldr	x9, [x9, x10]
  451510:	lsr	x9, x9, x8
  451514:	tbz	w9, #0, 451664 <_obstack_memory_used@@Base+0xab14>
  451518:	mov	w9, #0x1                   	// #1
  45151c:	b	451670 <_obstack_memory_used@@Base+0xab20>
  451520:	stp	x21, x21, [x19, #48]
  451524:	b	451214 <_obstack_memory_used@@Base+0xa6c4>
  451528:	ldrb	w8, [x19, #142]
  45152c:	cbnz	w8, 4518ac <_obstack_memory_used@@Base+0xad5c>
  451530:	cmp	w21, #0xa
  451534:	b.ne	45166c <_obstack_memory_used@@Base+0xab1c>  // b.any
  451538:	ldrb	w8, [x19, #141]
  45153c:	cmp	w8, #0x0
  451540:	cset	w8, ne  // ne = any
  451544:	lsl	w9, w8, #1
  451548:	b	451670 <_obstack_memory_used@@Base+0xab20>
  45154c:	mov	w0, w21
  451550:	bl	4048d0 <iswalnum@plt>
  451554:	cmp	w21, #0x5f
  451558:	mov	w8, #0x1                   	// #1
  45155c:	b.eq	451168 <_obstack_memory_used@@Base+0xa618>  // b.none
  451560:	cbz	w0, 451140 <_obstack_memory_used@@Base+0xa5f0>
  451564:	b	451168 <_obstack_memory_used@@Base+0xa618>
  451568:	str	x8, [x19, #48]
  45156c:	b	4515a0 <_obstack_memory_used@@Base+0xaa50>
  451570:	cmn	w9, #0x1
  451574:	str	x8, [x19, #48]
  451578:	b.eq	4515a0 <_obstack_memory_used@@Base+0xaa50>  // b.none
  45157c:	ldrb	w8, [x19, #142]
  451580:	cbnz	w8, 4518c8 <_obstack_memory_used@@Base+0xad78>
  451584:	cmp	w9, #0xa
  451588:	b.ne	45181c <_obstack_memory_used@@Base+0xaccc>  // b.any
  45158c:	ldrb	w8, [x19, #141]
  451590:	cmp	w8, #0x0
  451594:	cset	w8, ne  // ne = any
  451598:	lsl	w8, w8, #1
  45159c:	b	451820 <_obstack_memory_used@@Base+0xacd0>
  4515a0:	cmp	x26, #0x0
  4515a4:	b.le	4515e4 <_obstack_memory_used@@Base+0xaa94>
  4515a8:	ldr	x9, [x19, #88]
  4515ac:	sub	x8, x26, #0x1
  4515b0:	cmp	x9, x8
  4515b4:	b.eq	45189c <_obstack_memory_used@@Base+0xad4c>  // b.none
  4515b8:	ldr	w9, [x19, #144]
  4515bc:	cmp	w9, #0x2
  4515c0:	b.lt	4517c4 <_obstack_memory_used@@Base+0xac74>  // b.tstop
  4515c4:	ldr	x8, [x19, #16]
  4515c8:	sub	x8, x8, #0x4
  4515cc:	ldr	w21, [x8, x26, lsl #2]
  4515d0:	cmn	w21, #0x1
  4515d4:	b.ne	45180c <_obstack_memory_used@@Base+0xacbc>  // b.any
  4515d8:	sub	x26, x26, #0x1
  4515dc:	cmp	x26, #0x0
  4515e0:	b.gt	4515cc <_obstack_memory_used@@Base+0xaa7c>
  4515e4:	ldr	w8, [x19, #112]
  4515e8:	b	451820 <_obstack_memory_used@@Base+0xacd0>
  4515ec:	ldr	x10, [x19, #120]
  4515f0:	cbz	x10, 451214 <_obstack_memory_used@@Base+0xa6c4>
  4515f4:	ldr	x11, [x19, #64]
  4515f8:	ldr	x8, [x19, #48]
  4515fc:	cmp	x11, x9
  451600:	csel	x9, x9, x11, gt
  451604:	cmp	x8, x9
  451608:	b.ge	4517ec <_obstack_memory_used@@Base+0xac9c>  // b.tcont
  45160c:	ldp	x11, x13, [x19]
  451610:	add	x12, x8, x20
  451614:	ldrb	w11, [x11, x12]
  451618:	ldrb	w10, [x10, x11]
  45161c:	strb	w10, [x13, x8]
  451620:	add	x8, x8, #0x1
  451624:	cmp	x8, x9
  451628:	b.ge	4517ec <_obstack_memory_used@@Base+0xac9c>  // b.tcont
  45162c:	ldr	x10, [x19, #40]
  451630:	ldp	x11, x13, [x19]
  451634:	ldr	x12, [x19, #120]
  451638:	add	x10, x11, x10
  45163c:	ldrb	w10, [x10, x8]
  451640:	ldrb	w10, [x12, x10]
  451644:	b	45161c <_obstack_memory_used@@Base+0xaacc>
  451648:	cmp	w8, #0xa
  45164c:	b.ne	451800 <_obstack_memory_used@@Base+0xacb0>  // b.any
  451650:	ldrb	w8, [x19, #141]
  451654:	cmp	w8, #0x0
  451658:	cset	w8, ne  // ne = any
  45165c:	lsl	w8, w8, #1
  451660:	b	451804 <_obstack_memory_used@@Base+0xacb4>
  451664:	cmp	w8, #0xa
  451668:	b.eq	451538 <_obstack_memory_used@@Base+0xa9e8>  // b.none
  45166c:	mov	w9, wzr
  451670:	ldr	x8, [x19, #48]
  451674:	cmp	x22, x25
  451678:	str	w9, [x19, #112]
  45167c:	b.ne	451708 <_obstack_memory_used@@Base+0xabb8>  // b.any
  451680:	subs	x9, x8, x25
  451684:	b.le	451708 <_obstack_memory_used@@Base+0xabb8>
  451688:	ldr	x10, [x19, #24]
  45168c:	ldr	x10, [x10, x25, lsl #3]
  451690:	cmp	x10, x25
  451694:	b.ne	451708 <_obstack_memory_used@@Base+0xabb8>  // b.any
  451698:	ldr	x0, [x19, #16]
  45169c:	lsl	x2, x9, #2
  4516a0:	add	x1, x0, x25, lsl #2
  4516a4:	bl	403ed0 <memmove@plt>
  4516a8:	ldr	x0, [x19, #8]
  4516ac:	ldr	x8, [x19, #48]
  4516b0:	add	x1, x0, x25
  4516b4:	sub	x2, x8, x25
  4516b8:	bl	403ed0 <memmove@plt>
  4516bc:	ldr	q0, [x19, #48]
  4516c0:	dup	v1.2d, x25
  4516c4:	sub	v0.2d, v0.2d, v1.2d
  4516c8:	fmov	x8, d0
  4516cc:	cmp	x8, #0x1
  4516d0:	str	q0, [x19, #48]
  4516d4:	b.lt	4511a8 <_obstack_memory_used@@Base+0xa658>  // b.tstop
  4516d8:	ldr	x9, [x19, #24]
  4516dc:	mov	x8, xzr
  4516e0:	add	x10, x9, x25, lsl #3
  4516e4:	lsl	x11, x8, #3
  4516e8:	ldr	x12, [x10, x11]
  4516ec:	add	x8, x8, #0x1
  4516f0:	sub	x12, x12, x25
  4516f4:	str	x12, [x9, x11]
  4516f8:	ldr	x11, [x19, #48]
  4516fc:	cmp	x8, x11
  451700:	b.lt	4516e4 <_obstack_memory_used@@Base+0xab94>  // b.tstop
  451704:	b	4511a8 <_obstack_memory_used@@Base+0xa658>
  451708:	ldr	x9, [x19, #80]
  45170c:	ldr	x10, [x19, #96]
  451710:	sub	x11, x25, x20
  451714:	strb	wzr, [x19, #140]
  451718:	add	x9, x11, x9
  45171c:	add	x10, x11, x10
  451720:	str	x9, [x19, #88]
  451724:	str	x10, [x19, #104]
  451728:	mov	x9, x22
  45172c:	subs	x22, x22, #0x1
  451730:	b.lt	451748 <_obstack_memory_used@@Base+0xabf8>  // b.tstop
  451734:	ldr	x10, [x19, #24]
  451738:	add	x10, x10, x9, lsl #3
  45173c:	ldur	x10, [x10, #-8]
  451740:	cmp	x10, x25
  451744:	b.eq	451728 <_obstack_memory_used@@Base+0xabd8>  // b.none
  451748:	cmp	x9, x8
  45174c:	b.ge	451770 <_obstack_memory_used@@Base+0xac20>  // b.tcont
  451750:	ldr	x10, [x19, #16]
  451754:	ldr	w11, [x10, x9, lsl #2]
  451758:	cmn	w11, #0x1
  45175c:	b.ne	451770 <_obstack_memory_used@@Base+0xac20>  // b.any
  451760:	add	x9, x9, #0x1
  451764:	cmp	x8, x9
  451768:	b.ne	451754 <_obstack_memory_used@@Base+0xac04>  // b.any
  45176c:	b	451778 <_obstack_memory_used@@Base+0xac28>
  451770:	cmp	x9, x8
  451774:	b.ne	451784 <_obstack_memory_used@@Base+0xac34>  // b.any
  451778:	mov	x8, xzr
  45177c:	stp	xzr, xzr, [x19, #48]
  451780:	b	4511a8 <_obstack_memory_used@@Base+0xa658>
  451784:	ldr	x8, [x19, #24]
  451788:	ldr	x8, [x8, x9, lsl #3]
  45178c:	subs	x21, x8, x25
  451790:	str	x21, [x19, #48]
  451794:	b.eq	4517f4 <_obstack_memory_used@@Base+0xaca4>  // b.none
  451798:	cmp	x21, #0x1
  45179c:	b.lt	4517b0 <_obstack_memory_used@@Base+0xac60>  // b.tstop
  4517a0:	ldr	x0, [x19, #16]
  4517a4:	lsl	x2, x21, #2
  4517a8:	mov	w1, #0xff                  	// #255
  4517ac:	bl	404360 <memset@plt>
  4517b0:	ldr	x0, [x19, #8]
  4517b4:	mov	w1, #0xff                  	// #255
  4517b8:	mov	x2, x21
  4517bc:	bl	404360 <memset@plt>
  4517c0:	b	45182c <_obstack_memory_used@@Base+0xacdc>
  4517c4:	ldr	x9, [x19, #8]
  4517c8:	ldrb	w8, [x9, x8]
  4517cc:	ldr	x9, [x19, #128]
  4517d0:	lsr	x10, x8, #3
  4517d4:	and	x10, x10, #0x18
  4517d8:	ldr	x9, [x9, x10]
  4517dc:	lsr	x9, x9, x8
  4517e0:	tbz	w9, #0, 451838 <_obstack_memory_used@@Base+0xace8>
  4517e4:	mov	w8, #0x1                   	// #1
  4517e8:	b	451820 <_obstack_memory_used@@Base+0xacd0>
  4517ec:	stp	x8, x8, [x19, #48]
  4517f0:	b	451214 <_obstack_memory_used@@Base+0xa6c4>
  4517f4:	mov	x8, xzr
  4517f8:	str	xzr, [x19, #56]
  4517fc:	b	4511a8 <_obstack_memory_used@@Base+0xa658>
  451800:	mov	w8, wzr
  451804:	str	w8, [x19, #112]
  451808:	b	4511a8 <_obstack_memory_used@@Base+0xa658>
  45180c:	ldrb	w8, [x19, #142]
  451810:	cbnz	w8, 451930 <_obstack_memory_used@@Base+0xade0>
  451814:	cmp	w21, #0xa
  451818:	b.eq	45158c <_obstack_memory_used@@Base+0xaa3c>  // b.none
  45181c:	mov	w8, wzr
  451820:	ldr	x21, [x19, #48]
  451824:	str	w8, [x19, #112]
  451828:	cbnz	x21, 451878 <_obstack_memory_used@@Base+0xad28>
  45182c:	ldr	x8, [x19, #48]
  451830:	str	x8, [x19, #56]
  451834:	b	4511a8 <_obstack_memory_used@@Base+0xa658>
  451838:	cmp	w8, #0xa
  45183c:	b.ne	45181c <_obstack_memory_used@@Base+0xaccc>  // b.any
  451840:	b	45158c <_obstack_memory_used@@Base+0xaa3c>
  451844:	ldr	x10, [x19, #80]
  451848:	ldr	x11, [x19, #96]
  45184c:	sub	x12, x25, x20
  451850:	strb	wzr, [x19, #140]
  451854:	add	x10, x12, x10
  451858:	add	x11, x12, x11
  45185c:	str	x10, [x19, #88]
  451860:	str	x11, [x19, #104]
  451864:	b	451254 <_obstack_memory_used@@Base+0xa704>
  451868:	and	w8, w21, #0x2
  45186c:	mov	w9, #0xa                   	// #10
  451870:	eor	w9, w8, w9
  451874:	b	451670 <_obstack_memory_used@@Base+0xab20>
  451878:	cmp	x21, #0x1
  45187c:	b.lt	451890 <_obstack_memory_used@@Base+0xad40>  // b.tstop
  451880:	ldr	x0, [x19, #16]
  451884:	lsl	x2, x21, #2
  451888:	mov	w1, #0xff                  	// #255
  45188c:	bl	404360 <memset@plt>
  451890:	ldrb	w8, [x19, #139]
  451894:	cbnz	w8, 4517b0 <_obstack_memory_used@@Base+0xac60>
  451898:	b	45182c <_obstack_memory_used@@Base+0xacdc>
  45189c:	and	w8, w21, #0x2
  4518a0:	mov	w9, #0xa                   	// #10
  4518a4:	eor	w8, w8, w9
  4518a8:	b	451820 <_obstack_memory_used@@Base+0xacd0>
  4518ac:	mov	w0, w21
  4518b0:	bl	4048d0 <iswalnum@plt>
  4518b4:	cmp	w21, #0x5f
  4518b8:	mov	w9, #0x1                   	// #1
  4518bc:	b.eq	451670 <_obstack_memory_used@@Base+0xab20>  // b.none
  4518c0:	cbz	w0, 451530 <_obstack_memory_used@@Base+0xa9e0>
  4518c4:	b	451670 <_obstack_memory_used@@Base+0xab20>
  4518c8:	mov	w0, w9
  4518cc:	mov	w21, w9
  4518d0:	bl	4048d0 <iswalnum@plt>
  4518d4:	cmp	w21, #0x5f
  4518d8:	mov	w8, #0x1                   	// #1
  4518dc:	b.eq	451820 <_obstack_memory_used@@Base+0xacd0>  // b.none
  4518e0:	mov	w9, w21
  4518e4:	cbz	w0, 451584 <_obstack_memory_used@@Base+0xaa34>
  4518e8:	b	451820 <_obstack_memory_used@@Base+0xacd0>
  4518ec:	cmp	x2, #0x6
  4518f0:	mov	w11, #0x6                   	// #6
  4518f4:	csel	x11, x2, x11, lt  // lt = tstop
  4518f8:	cmp	w11, #0x1
  4518fc:	add	x1, sp, #0xc
  451900:	b.lt	4512cc <_obstack_memory_used@@Base+0xa77c>  // b.tstop
  451904:	sxtw	x11, w11
  451908:	sub	x12, x1, #0x1
  45190c:	add	x13, x8, x11
  451910:	add	x13, x10, x13
  451914:	ldurb	w13, [x13, #-1]
  451918:	add	x1, sp, #0xc
  45191c:	ldrb	w13, [x9, x13]
  451920:	strb	w13, [x12, x11]
  451924:	subs	x11, x11, #0x1
  451928:	b.gt	45190c <_obstack_memory_used@@Base+0xadbc>
  45192c:	b	4512cc <_obstack_memory_used@@Base+0xa77c>
  451930:	mov	w0, w21
  451934:	bl	4048d0 <iswalnum@plt>
  451938:	cmp	w21, #0x5f
  45193c:	mov	w8, #0x1                   	// #1
  451940:	b.eq	451820 <_obstack_memory_used@@Base+0xacd0>  // b.none
  451944:	cbz	w0, 451814 <_obstack_memory_used@@Base+0xacc4>
  451948:	b	451820 <_obstack_memory_used@@Base+0xacd0>
  45194c:	stp	x29, x30, [sp, #-64]!
  451950:	stp	x22, x21, [sp, #32]
  451954:	stp	x20, x19, [sp, #48]
  451958:	ldr	x8, [x0, #232]
  45195c:	mov	x19, x0
  451960:	str	x23, [sp, #16]
  451964:	mov	x29, sp
  451968:	cmp	x8, #0x1
  45196c:	b.lt	4519f4 <_obstack_memory_used@@Base+0xaea4>  // b.tstop
  451970:	mov	x22, xzr
  451974:	b	451990 <_obstack_memory_used@@Base+0xae40>
  451978:	mov	x0, x20
  45197c:	bl	404700 <free@plt>
  451980:	ldr	x8, [x19, #232]
  451984:	add	x22, x22, #0x1
  451988:	cmp	x22, x8
  45198c:	b.ge	4519f4 <_obstack_memory_used@@Base+0xaea4>  // b.tcont
  451990:	ldr	x8, [x19, #248]
  451994:	ldr	x20, [x8, x22, lsl #3]
  451998:	ldr	x8, [x20, #32]
  45199c:	cmp	x8, #0x1
  4519a0:	b.lt	4519d0 <_obstack_memory_used@@Base+0xae80>  // b.tstop
  4519a4:	mov	x23, xzr
  4519a8:	ldr	x8, [x20, #40]
  4519ac:	ldr	x21, [x8, x23, lsl #3]
  4519b0:	ldr	x0, [x21, #32]
  4519b4:	bl	404700 <free@plt>
  4519b8:	mov	x0, x21
  4519bc:	bl	404700 <free@plt>
  4519c0:	ldr	x8, [x20, #32]
  4519c4:	add	x23, x23, #0x1
  4519c8:	cmp	x23, x8
  4519cc:	b.lt	4519a8 <_obstack_memory_used@@Base+0xae58>  // b.tstop
  4519d0:	ldr	x0, [x20, #40]
  4519d4:	bl	404700 <free@plt>
  4519d8:	ldr	x8, [x20, #16]
  4519dc:	cbz	x8, 451978 <_obstack_memory_used@@Base+0xae28>
  4519e0:	ldr	x0, [x8, #16]
  4519e4:	bl	404700 <free@plt>
  4519e8:	ldr	x0, [x20, #16]
  4519ec:	bl	404700 <free@plt>
  4519f0:	b	451978 <_obstack_memory_used@@Base+0xae28>
  4519f4:	str	xzr, [x19, #232]
  4519f8:	str	xzr, [x19, #200]
  4519fc:	ldp	x20, x19, [sp, #48]
  451a00:	ldp	x22, x21, [sp, #32]
  451a04:	ldr	x23, [sp, #16]
  451a08:	ldp	x29, x30, [sp], #64
  451a0c:	ret
  451a10:	stp	x29, x30, [sp, #-96]!
  451a14:	stp	x28, x27, [sp, #16]
  451a18:	stp	x26, x25, [sp, #32]
  451a1c:	stp	x24, x23, [sp, #48]
  451a20:	stp	x22, x21, [sp, #64]
  451a24:	stp	x20, x19, [sp, #80]
  451a28:	mov	x29, sp
  451a2c:	sub	sp, sp, #0x90
  451a30:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  451a34:	add	x8, x8, #0xbb8
  451a38:	ldr	q0, [x8]
  451a3c:	ldr	x8, [x8, #16]
  451a40:	ldr	x23, [x0]
  451a44:	mov	x20, x3
  451a48:	mov	x21, x2
  451a4c:	mov	x22, x1
  451a50:	stur	q0, [x29, #-64]
  451a54:	stur	x8, [x29, #-48]
  451a58:	tbz	w4, #0, 451a74 <_obstack_memory_used@@Base+0xaf24>
  451a5c:	mov	w0, #0x60                  	// #96
  451a60:	bl	404250 <malloc@plt>
  451a64:	stur	x0, [x29, #-48]
  451a68:	cbz	x0, 452430 <_obstack_memory_used@@Base+0xb8e0>
  451a6c:	sub	x28, x29, #0x40
  451a70:	b	451a78 <_obstack_memory_used@@Base+0xaf28>
  451a74:	mov	x28, xzr
  451a78:	ldr	x19, [x23, #144]
  451a7c:	lsl	x24, x21, #4
  451a80:	cmp	x24, #0xfbf
  451a84:	stp	xzr, xzr, [x29, #-32]
  451a88:	stur	xzr, [x29, #-16]
  451a8c:	b.hi	451aac <_obstack_memory_used@@Base+0xaf5c>  // b.pmore
  451a90:	add	x9, x24, #0xf
  451a94:	mov	x8, sp
  451a98:	and	x9, x9, #0xfffffffffffffff0
  451a9c:	sub	x0, x8, x9
  451aa0:	mov	sp, x0
  451aa4:	stur	wzr, [x29, #-92]
  451aa8:	b	451ac0 <_obstack_memory_used@@Base+0xaf70>
  451aac:	mov	x0, x24
  451ab0:	bl	404250 <malloc@plt>
  451ab4:	cbz	x0, 451b68 <_obstack_memory_used@@Base+0xb018>
  451ab8:	mov	w8, #0x1                   	// #1
  451abc:	stur	w8, [x29, #-92]
  451ac0:	mov	x1, x20
  451ac4:	mov	x2, x24
  451ac8:	stur	x0, [x29, #-88]
  451acc:	stur	x24, [x29, #-72]
  451ad0:	bl	403ec0 <memcpy@plt>
  451ad4:	ldp	x24, x8, [x20]
  451ad8:	cmp	x24, x8
  451adc:	b.le	451b4c <_obstack_memory_used@@Base+0xaffc>
  451ae0:	mov	x0, xzr
  451ae4:	bl	404700 <free@plt>
  451ae8:	ldur	w8, [x29, #-92]
  451aec:	cbz	w8, 451af8 <_obstack_memory_used@@Base+0xafa8>
  451af0:	ldur	x0, [x29, #-88]
  451af4:	bl	404700 <free@plt>
  451af8:	cbz	x28, 452368 <_obstack_memory_used@@Base+0xb818>
  451afc:	ldr	x8, [x28]
  451b00:	ldr	x0, [x28, #16]
  451b04:	cmp	x8, #0x1
  451b08:	b.lt	452364 <_obstack_memory_used@@Base+0xb814>  // b.tstop
  451b0c:	mov	x19, xzr
  451b10:	mov	x20, xzr
  451b14:	add	x8, x0, x19
  451b18:	ldr	x0, [x8, #40]
  451b1c:	bl	404700 <free@plt>
  451b20:	ldr	x8, [x28, #16]
  451b24:	add	x8, x8, x19
  451b28:	ldr	x0, [x8, #16]
  451b2c:	bl	404700 <free@plt>
  451b30:	ldr	x8, [x28]
  451b34:	ldr	x0, [x28, #16]
  451b38:	add	x20, x20, #0x1
  451b3c:	add	x19, x19, #0x30
  451b40:	cmp	x20, x8
  451b44:	b.lt	451b14 <_obstack_memory_used@@Base+0xafc4>  // b.tstop
  451b48:	b	452364 <_obstack_memory_used@@Base+0xb814>
  451b4c:	add	x8, x20, #0x8
  451b50:	stur	x8, [x29, #-104]
  451b54:	mov	w8, #0x1                   	// #1
  451b58:	dup	v0.2d, x8
  451b5c:	stur	q0, [x29, #-128]
  451b60:	stur	x23, [x29, #-80]
  451b64:	b	451bf0 <_obstack_memory_used@@Base+0xb0a0>
  451b68:	cbz	x28, 452430 <_obstack_memory_used@@Base+0xb8e0>
  451b6c:	ldr	x8, [x28]
  451b70:	ldr	x0, [x28, #16]
  451b74:	cmp	x8, #0x1
  451b78:	b.lt	451bb8 <_obstack_memory_used@@Base+0xb068>  // b.tstop
  451b7c:	mov	x19, xzr
  451b80:	mov	x20, xzr
  451b84:	add	x8, x0, x19
  451b88:	ldr	x0, [x8, #40]
  451b8c:	bl	404700 <free@plt>
  451b90:	ldr	x8, [x28, #16]
  451b94:	add	x8, x8, x19
  451b98:	ldr	x0, [x8, #16]
  451b9c:	bl	404700 <free@plt>
  451ba0:	ldr	x8, [x28]
  451ba4:	ldr	x0, [x28, #16]
  451ba8:	add	x20, x20, #0x1
  451bac:	add	x19, x19, #0x30
  451bb0:	cmp	x20, x8
  451bb4:	b.lt	451b84 <_obstack_memory_used@@Base+0xb034>  // b.tstop
  451bb8:	bl	404700 <free@plt>
  451bbc:	mov	w0, #0xc                   	// #12
  451bc0:	b	452434 <_obstack_memory_used@@Base+0xb8e4>
  451bc4:	cbz	x27, 451fb4 <_obstack_memory_used@@Base+0xb464>
  451bc8:	ldr	x8, [x26, #24]
  451bcc:	add	x24, x27, x24
  451bd0:	ldr	x25, [x8, x19, lsl #3]
  451bd4:	stur	xzr, [x29, #-24]
  451bd8:	tbnz	x25, #63, 452128 <_obstack_memory_used@@Base+0xb5d8>
  451bdc:	ldr	x8, [x20, #8]
  451be0:	ldur	x23, [x29, #-80]
  451be4:	mov	x19, x25
  451be8:	cmp	x24, x8
  451bec:	b.gt	452370 <_obstack_memory_used@@Base+0xb820>
  451bf0:	ldr	x8, [x23]
  451bf4:	add	x8, x8, x19, lsl #4
  451bf8:	ldr	w9, [x8, #8]
  451bfc:	and	w10, w9, #0xff
  451c00:	cmp	w10, #0x9
  451c04:	b.eq	451c30 <_obstack_memory_used@@Base+0xb0e0>  // b.none
  451c08:	cmp	w10, #0x8
  451c0c:	b.ne	451c94 <_obstack_memory_used@@Base+0xb144>  // b.any
  451c10:	ldr	x8, [x8]
  451c14:	add	x8, x8, #0x1
  451c18:	cmp	x8, x21
  451c1c:	b.ge	451c94 <_obstack_memory_used@@Base+0xb144>  // b.tcont
  451c20:	add	x8, x20, x8, lsl #4
  451c24:	mov	x9, #0xffffffffffffffff    	// #-1
  451c28:	stp	x24, x9, [x8]
  451c2c:	b	451c94 <_obstack_memory_used@@Base+0xb144>
  451c30:	ldr	x8, [x8]
  451c34:	add	x8, x8, #0x1
  451c38:	cmp	x8, x21
  451c3c:	b.ge	451c94 <_obstack_memory_used@@Base+0xb144>  // b.tcont
  451c40:	lsl	x10, x8, #4
  451c44:	ldr	x11, [x20, x10]
  451c48:	cmp	x11, x24
  451c4c:	b.ge	451c64 <_obstack_memory_used@@Base+0xb114>  // b.tcont
  451c50:	ldur	x0, [x29, #-88]
  451c54:	add	x8, x20, x8, lsl #4
  451c58:	str	x24, [x8, #8]
  451c5c:	mov	x1, x20
  451c60:	b	451c80 <_obstack_memory_used@@Base+0xb130>
  451c64:	tbz	w9, #19, 451c8c <_obstack_memory_used@@Base+0xb13c>
  451c68:	ldur	x9, [x29, #-88]
  451c6c:	ldr	x9, [x9, x10]
  451c70:	cmn	x9, #0x1
  451c74:	b.eq	451c8c <_obstack_memory_used@@Base+0xb13c>  // b.none
  451c78:	ldur	x1, [x29, #-88]
  451c7c:	mov	x0, x20
  451c80:	ldur	x2, [x29, #-72]
  451c84:	bl	403ec0 <memcpy@plt>
  451c88:	b	451c94 <_obstack_memory_used@@Base+0xb144>
  451c8c:	add	x8, x20, x8, lsl #4
  451c90:	str	x24, [x8, #8]
  451c94:	ldr	x8, [x20, #8]
  451c98:	cmp	x24, x8
  451c9c:	b.ne	451d58 <_obstack_memory_used@@Base+0xb208>  // b.any
  451ca0:	ldr	x8, [x22, #176]
  451ca4:	cmp	x19, x8
  451ca8:	b.ne	451d58 <_obstack_memory_used@@Base+0xb208>  // b.any
  451cac:	cbz	x28, 452398 <_obstack_memory_used@@Base+0xb848>
  451cb0:	mov	x8, xzr
  451cb4:	cbz	x21, 451ce4 <_obstack_memory_used@@Base+0xb194>
  451cb8:	ldur	x9, [x29, #-104]
  451cbc:	b	451cd0 <_obstack_memory_used@@Base+0xb180>
  451cc0:	add	x8, x8, #0x1
  451cc4:	cmp	x21, x8
  451cc8:	add	x9, x9, #0x10
  451ccc:	b.eq	452300 <_obstack_memory_used@@Base+0xb7b0>  // b.none
  451cd0:	ldur	x10, [x9, #-8]
  451cd4:	tbnz	x10, #63, 451cc0 <_obstack_memory_used@@Base+0xb170>
  451cd8:	ldr	x10, [x9]
  451cdc:	cmn	x10, #0x1
  451ce0:	b.ne	451cc0 <_obstack_memory_used@@Base+0xb170>  // b.any
  451ce4:	cmp	x8, x21
  451ce8:	b.eq	452300 <_obstack_memory_used@@Base+0xb7b0>  // b.none
  451cec:	ldr	x9, [x28]
  451cf0:	sub	x8, x9, #0x1
  451cf4:	cmp	x9, #0x0
  451cf8:	str	x8, [x28]
  451cfc:	b.le	452464 <_obstack_memory_used@@Base+0xb914>
  451d00:	ldr	x9, [x28, #16]
  451d04:	add	x8, x8, x8, lsl #1
  451d08:	lsl	x19, x8, #4
  451d0c:	ldur	x2, [x29, #-72]
  451d10:	add	x8, x9, x19
  451d14:	ldr	x1, [x8, #16]
  451d18:	ldr	x24, [x8]
  451d1c:	mov	x0, x20
  451d20:	bl	403ec0 <memcpy@plt>
  451d24:	ldur	x0, [x29, #-16]
  451d28:	bl	404700 <free@plt>
  451d2c:	ldr	x8, [x28, #16]
  451d30:	add	x8, x8, x19
  451d34:	ldr	x0, [x8, #16]
  451d38:	bl	404700 <free@plt>
  451d3c:	ldr	x8, [x28, #16]
  451d40:	add	x8, x8, x19
  451d44:	ldr	x9, [x8, #40]
  451d48:	ldur	q0, [x8, #24]
  451d4c:	stur	x9, [x29, #-16]
  451d50:	stur	q0, [x29, #-32]
  451d54:	ldr	x19, [x8, #8]
  451d58:	ldr	x26, [x22, #152]
  451d5c:	ldr	x8, [x26]
  451d60:	add	x9, x8, x19, lsl #4
  451d64:	ldr	w9, [x9, #8]
  451d68:	tbnz	w9, #3, 451dd0 <_obstack_memory_used@@Base+0xb280>
  451d6c:	tbnz	w9, #20, 451e04 <_obstack_memory_used@@Base+0xb2b4>
  451d70:	and	w9, w9, #0xff
  451d74:	cmp	w9, #0x4
  451d78:	b.ne	451e20 <_obstack_memory_used@@Base+0xb2d0>  // b.any
  451d7c:	lsl	x9, x19, #4
  451d80:	ldr	x8, [x8, x9]
  451d84:	add	x8, x20, x8, lsl #4
  451d88:	ldp	x8, x9, [x8, #16]
  451d8c:	sub	x27, x9, x8
  451d90:	cbz	x28, 451bc4 <_obstack_memory_used@@Base+0xb074>
  451d94:	cmn	x9, #0x1
  451d98:	b.eq	452134 <_obstack_memory_used@@Base+0xb5e4>  // b.none
  451d9c:	cmn	x8, #0x1
  451da0:	b.eq	452134 <_obstack_memory_used@@Base+0xb5e4>  // b.none
  451da4:	cbz	x27, 451fb4 <_obstack_memory_used@@Base+0xb464>
  451da8:	ldr	x9, [x22, #8]
  451dac:	mov	x2, x27
  451db0:	add	x0, x9, x8
  451db4:	add	x1, x9, x24
  451db8:	bl	404440 <bcmp@plt>
  451dbc:	cbnz	w0, 452134 <_obstack_memory_used@@Base+0xb5e4>
  451dc0:	ldr	x8, [x26, #24]
  451dc4:	add	x24, x27, x24
  451dc8:	ldr	x25, [x8, x19, lsl #3]
  451dcc:	b	451e4c <_obstack_memory_used@@Base+0xb2fc>
  451dd0:	ldr	x9, [x22, #184]
  451dd4:	ldur	x8, [x29, #-32]
  451dd8:	ldr	x25, [x26, #40]
  451ddc:	ldr	x27, [x9, x24, lsl #3]
  451de0:	cbz	x8, 451eac <_obstack_memory_used@@Base+0xb35c>
  451de4:	ldur	x23, [x29, #-24]
  451de8:	cbnz	x23, 4521a4 <_obstack_memory_used@@Base+0xb654>
  451dec:	ldur	x26, [x29, #-16]
  451df0:	mov	w8, #0x1                   	// #1
  451df4:	mov	w18, #0x1                   	// #1
  451df8:	str	x19, [x26]
  451dfc:	stur	x8, [x29, #-24]
  451e00:	b	451ed4 <_obstack_memory_used@@Base+0xb384>
  451e04:	mov	x0, x26
  451e08:	mov	x1, x19
  451e0c:	mov	x2, x22
  451e10:	mov	x3, x24
  451e14:	bl	454830 <_obstack_memory_used@@Base+0xdce0>
  451e18:	sxtw	x27, w0
  451e1c:	cbnz	x27, 451e3c <_obstack_memory_used@@Base+0xb2ec>
  451e20:	ldr	x8, [x26]
  451e24:	mov	x0, x22
  451e28:	mov	x2, x24
  451e2c:	add	x1, x8, x19, lsl #4
  451e30:	bl	454b48 <_obstack_memory_used@@Base+0xdff8>
  451e34:	tbz	w0, #0, 452130 <_obstack_memory_used@@Base+0xb5e0>
  451e38:	mov	w27, #0x1                   	// #1
  451e3c:	ldr	x8, [x26, #24]
  451e40:	add	x24, x27, x24
  451e44:	ldr	x25, [x8, x19, lsl #3]
  451e48:	cbz	x28, 451bd4 <_obstack_memory_used@@Base+0xb084>
  451e4c:	ldr	x8, [x22, #168]
  451e50:	cmp	x24, x8
  451e54:	b.gt	452134 <_obstack_memory_used@@Base+0xb5e4>
  451e58:	ldr	x8, [x22, #184]
  451e5c:	ldr	x8, [x8, x24, lsl #3]
  451e60:	cbz	x8, 452134 <_obstack_memory_used@@Base+0xb5e4>
  451e64:	ldr	x9, [x8, #16]
  451e68:	subs	x9, x9, #0x1
  451e6c:	b.lt	452134 <_obstack_memory_used@@Base+0xb5e4>  // b.tstop
  451e70:	ldr	x8, [x8, #24]
  451e74:	mov	x10, xzr
  451e78:	b.eq	451e9c <_obstack_memory_used@@Base+0xb34c>  // b.none
  451e7c:	add	x11, x10, x9
  451e80:	lsr	x11, x11, #1
  451e84:	ldr	x12, [x8, x11, lsl #3]
  451e88:	cmp	x12, x25
  451e8c:	csinc	x10, x10, x11, ge  // ge = tcont
  451e90:	csel	x9, x9, x11, lt  // lt = tstop
  451e94:	cmp	x10, x9
  451e98:	b.cc	451e7c <_obstack_memory_used@@Base+0xb32c>  // b.lo, b.ul, b.last
  451e9c:	ldr	x8, [x8, x10, lsl #3]
  451ea0:	cmp	x8, x25
  451ea4:	b.eq	451bd4 <_obstack_memory_used@@Base+0xb084>  // b.none
  451ea8:	b	452130 <_obstack_memory_used@@Base+0xb5e0>
  451eac:	mov	w8, #0x1                   	// #1
  451eb0:	dup	v0.2d, x8
  451eb4:	mov	w0, #0x8                   	// #8
  451eb8:	stur	q0, [x29, #-32]
  451ebc:	bl	404250 <malloc@plt>
  451ec0:	mov	x26, x0
  451ec4:	stur	x0, [x29, #-16]
  451ec8:	cbz	x0, 4523c0 <_obstack_memory_used@@Base+0xb870>
  451ecc:	str	x19, [x26]
  451ed0:	mov	w18, #0x1                   	// #1
  451ed4:	mov	w8, #0x18                  	// #24
  451ed8:	madd	x8, x19, x8, x25
  451edc:	ldr	x8, [x8, #8]
  451ee0:	cmp	x8, #0x1
  451ee4:	b.lt	452130 <_obstack_memory_used@@Base+0xb5e0>  // b.tstop
  451ee8:	mov	w11, #0x18                  	// #24
  451eec:	ldr	x10, [x27, #16]
  451ef0:	madd	x11, x19, x11, x25
  451ef4:	ldr	x11, [x11, #16]
  451ef8:	mov	x9, xzr
  451efc:	sub	x12, x10, #0x1
  451f00:	mov	x25, #0xffffffffffffffff    	// #-1
  451f04:	b	451f18 <_obstack_memory_used@@Base+0xb3c8>
  451f08:	mov	x25, x19
  451f0c:	add	x9, x9, #0x1
  451f10:	cmp	x9, x8
  451f14:	b.eq	451bd8 <_obstack_memory_used@@Base+0xb088>  // b.none
  451f18:	cmp	x10, #0x1
  451f1c:	b.lt	451f0c <_obstack_memory_used@@Base+0xb3bc>  // b.tstop
  451f20:	ldr	x19, [x11, x9, lsl #3]
  451f24:	ldr	x13, [x27, #24]
  451f28:	mov	x14, xzr
  451f2c:	cbz	x12, 451f54 <_obstack_memory_used@@Base+0xb404>
  451f30:	mov	x15, x12
  451f34:	add	x16, x14, x15
  451f38:	lsr	x16, x16, #1
  451f3c:	ldr	x17, [x13, x16, lsl #3]
  451f40:	cmp	x17, x19
  451f44:	csinc	x14, x14, x16, ge  // ge = tcont
  451f48:	csel	x15, x15, x16, lt  // lt = tstop
  451f4c:	cmp	x14, x15
  451f50:	b.cc	451f34 <_obstack_memory_used@@Base+0xb3e4>  // b.lo, b.ul, b.last
  451f54:	ldr	x13, [x13, x14, lsl #3]
  451f58:	cmp	x13, x19
  451f5c:	b.ne	451f0c <_obstack_memory_used@@Base+0xb3bc>  // b.any
  451f60:	cmn	x25, #0x1
  451f64:	b.eq	451f08 <_obstack_memory_used@@Base+0xb3b8>  // b.none
  451f68:	subs	x8, x18, #0x1
  451f6c:	b.lt	451fd8 <_obstack_memory_used@@Base+0xb488>  // b.tstop
  451f70:	mov	x9, xzr
  451f74:	b.eq	451f98 <_obstack_memory_used@@Base+0xb448>  // b.none
  451f78:	add	x10, x9, x8
  451f7c:	lsr	x10, x10, #1
  451f80:	ldr	x11, [x26, x10, lsl #3]
  451f84:	cmp	x11, x25
  451f88:	csinc	x9, x9, x10, ge  // ge = tcont
  451f8c:	csel	x8, x8, x10, lt  // lt = tstop
  451f90:	cmp	x9, x8
  451f94:	b.cc	451f78 <_obstack_memory_used@@Base+0xb428>  // b.lo, b.ul, b.last
  451f98:	ldr	x8, [x26, x9, lsl #3]
  451f9c:	cmp	x8, x25
  451fa0:	csel	x8, x19, x25, eq  // eq = none
  451fa4:	b.eq	451fac <_obstack_memory_used@@Base+0xb45c>  // b.none
  451fa8:	cbnz	x28, 451fdc <_obstack_memory_used@@Base+0xb48c>
  451fac:	mov	x25, x8
  451fb0:	b	451bd8 <_obstack_memory_used@@Base+0xb088>
  451fb4:	ldur	x8, [x29, #-32]
  451fb8:	cbz	x8, 4520a8 <_obstack_memory_used@@Base+0xb558>
  451fbc:	ldur	x23, [x29, #-24]
  451fc0:	cbnz	x23, 452250 <_obstack_memory_used@@Base+0xb700>
  451fc4:	ldur	x8, [x29, #-16]
  451fc8:	str	x19, [x8]
  451fcc:	mov	w8, #0x1                   	// #1
  451fd0:	stur	x8, [x29, #-24]
  451fd4:	b	4520c4 <_obstack_memory_used@@Base+0xb574>
  451fd8:	cbz	x28, 451bd8 <_obstack_memory_used@@Base+0xb088>
  451fdc:	stur	x18, [x29, #-136]
  451fe0:	ldp	x23, x9, [x28]
  451fe4:	add	x8, x23, #0x1
  451fe8:	cmp	x8, x9
  451fec:	str	x8, [x28]
  451ff0:	b.ne	452018 <_obstack_memory_used@@Base+0xb4c8>  // b.any
  451ff4:	ldr	x0, [x28, #16]
  451ff8:	add	x8, x8, x8, lsl #1
  451ffc:	lsl	x1, x8, #5
  452000:	bl	404490 <realloc@plt>
  452004:	cbz	x0, 4523c4 <_obstack_memory_used@@Base+0xb874>
  452008:	ldr	x8, [x28, #8]
  45200c:	lsl	x8, x8, #1
  452010:	stp	x8, x0, [x28, #8]
  452014:	b	45201c <_obstack_memory_used@@Base+0xb4cc>
  452018:	ldr	x0, [x28, #16]
  45201c:	mov	w8, #0x30                  	// #48
  452020:	madd	x27, x23, x8, x0
  452024:	stp	x24, x19, [x27]
  452028:	ldur	x19, [x29, #-72]
  45202c:	mov	x0, x19
  452030:	bl	404250 <malloc@plt>
  452034:	str	x0, [x27, #16]
  452038:	cbz	x0, 4523c4 <_obstack_memory_used@@Base+0xb874>
  45203c:	mov	x1, x20
  452040:	mov	x2, x19
  452044:	bl	403ec0 <memcpy@plt>
  452048:	ldr	x27, [x28, #16]
  45204c:	ldur	x9, [x29, #-136]
  452050:	mov	w8, #0x30                  	// #48
  452054:	madd	x8, x23, x8, x27
  452058:	cmp	x9, #0x1
  45205c:	add	x10, x8, #0x18
  452060:	str	x9, [x8, #32]
  452064:	b.lt	45209c <_obstack_memory_used@@Base+0xb54c>  // b.tstop
  452068:	lsl	x19, x9, #3
  45206c:	mov	x0, x19
  452070:	stur	x10, [x29, #-144]
  452074:	str	x9, [x10]
  452078:	bl	404250 <malloc@plt>
  45207c:	mov	w8, #0x30                  	// #48
  452080:	madd	x8, x23, x8, x27
  452084:	str	x0, [x8, #40]
  452088:	cbz	x0, 4523b0 <_obstack_memory_used@@Base+0xb860>
  45208c:	mov	x1, x26
  452090:	mov	x2, x19
  452094:	bl	403ec0 <memcpy@plt>
  452098:	b	451bd8 <_obstack_memory_used@@Base+0xb088>
  45209c:	stp	xzr, xzr, [x10]
  4520a0:	str	xzr, [x10, #16]
  4520a4:	b	451bd8 <_obstack_memory_used@@Base+0xb088>
  4520a8:	ldur	q0, [x29, #-128]
  4520ac:	mov	w0, #0x8                   	// #8
  4520b0:	stur	q0, [x29, #-32]
  4520b4:	bl	404250 <malloc@plt>
  4520b8:	stur	x0, [x29, #-16]
  4520bc:	cbz	x0, 4523bc <_obstack_memory_used@@Base+0xb86c>
  4520c0:	str	x19, [x0]
  4520c4:	ldr	x8, [x22, #184]
  4520c8:	ldr	x9, [x8, x24, lsl #3]
  4520cc:	ldr	x8, [x9, #16]
  4520d0:	subs	x8, x8, #0x1
  4520d4:	b.lt	451e20 <_obstack_memory_used@@Base+0xb2d0>  // b.tstop
  4520d8:	ldr	x10, [x26, #40]
  4520dc:	mov	w11, #0x18                  	// #24
  4520e0:	ldr	x9, [x9, #24]
  4520e4:	madd	x10, x19, x11, x10
  4520e8:	ldr	x10, [x10, #16]
  4520ec:	ldr	x25, [x10]
  4520f0:	mov	x10, xzr
  4520f4:	b.eq	452118 <_obstack_memory_used@@Base+0xb5c8>  // b.none
  4520f8:	add	x11, x10, x8
  4520fc:	lsr	x11, x11, #1
  452100:	ldr	x12, [x9, x11, lsl #3]
  452104:	cmp	x12, x25
  452108:	csinc	x10, x10, x11, ge  // ge = tcont
  45210c:	csel	x8, x8, x11, lt  // lt = tstop
  452110:	cmp	x10, x8
  452114:	b.cc	4520f8 <_obstack_memory_used@@Base+0xb5a8>  // b.lo, b.ul, b.last
  452118:	ldr	x8, [x9, x10, lsl #3]
  45211c:	cmp	x8, x25
  452120:	b.eq	451bd8 <_obstack_memory_used@@Base+0xb088>  // b.none
  452124:	b	451e1c <_obstack_memory_used@@Base+0xb2cc>
  452128:	cmn	x25, #0x2
  45212c:	b.eq	452454 <_obstack_memory_used@@Base+0xb904>  // b.none
  452130:	cbz	x28, 452378 <_obstack_memory_used@@Base+0xb828>
  452134:	ldr	x9, [x28]
  452138:	sub	x8, x9, #0x1
  45213c:	cmp	x9, #0x0
  452140:	str	x8, [x28]
  452144:	b.le	452464 <_obstack_memory_used@@Base+0xb914>
  452148:	ldr	x9, [x28, #16]
  45214c:	add	x8, x8, x8, lsl #1
  452150:	lsl	x19, x8, #4
  452154:	ldur	x2, [x29, #-72]
  452158:	add	x8, x9, x19
  45215c:	ldr	x1, [x8, #16]
  452160:	ldr	x24, [x8]
  452164:	mov	x0, x20
  452168:	bl	403ec0 <memcpy@plt>
  45216c:	ldur	x0, [x29, #-16]
  452170:	bl	404700 <free@plt>
  452174:	ldr	x8, [x28, #16]
  452178:	add	x8, x8, x19
  45217c:	ldr	x0, [x8, #16]
  452180:	bl	404700 <free@plt>
  452184:	ldr	x8, [x28, #16]
  452188:	add	x8, x8, x19
  45218c:	ldr	x9, [x8, #40]
  452190:	ldur	q0, [x8, #24]
  452194:	stur	x9, [x29, #-16]
  452198:	stur	q0, [x29, #-32]
  45219c:	ldr	x25, [x8, #8]
  4521a0:	b	451bdc <_obstack_memory_used@@Base+0xb08c>
  4521a4:	cmp	x8, x23
  4521a8:	b.ne	4521d4 <_obstack_memory_used@@Base+0xb684>  // b.any
  4521ac:	ldur	x0, [x29, #-16]
  4521b0:	lsl	x9, x8, #1
  4521b4:	lsl	x1, x8, #4
  4521b8:	stur	x9, [x29, #-32]
  4521bc:	stur	x0, [x29, #-136]
  4521c0:	bl	404490 <realloc@plt>
  4521c4:	cbz	x0, 45245c <_obstack_memory_used@@Base+0xb90c>
  4521c8:	mov	x26, x0
  4521cc:	stur	x0, [x29, #-16]
  4521d0:	b	4521d8 <_obstack_memory_used@@Base+0xb688>
  4521d4:	ldur	x26, [x29, #-16]
  4521d8:	ldr	x8, [x26]
  4521dc:	cmp	x8, x19
  4521e0:	b.le	45220c <_obstack_memory_used@@Base+0xb6bc>
  4521e4:	cmp	x23, #0x1
  4521e8:	b.lt	45223c <_obstack_memory_used@@Base+0xb6ec>  // b.tstop
  4521ec:	mov	x9, x23
  4521f0:	add	x10, x26, x9, lsl #3
  4521f4:	ldur	x11, [x10, #-8]
  4521f8:	subs	x8, x9, #0x1
  4521fc:	mov	x9, x8
  452200:	str	x11, [x10]
  452204:	b.gt	4521f0 <_obstack_memory_used@@Base+0xb6a0>
  452208:	b	452240 <_obstack_memory_used@@Base+0xb6f0>
  45220c:	add	x8, x26, x23, lsl #3
  452210:	ldur	x9, [x8, #-8]
  452214:	mov	x8, x23
  452218:	cmp	x9, x19
  45221c:	b.le	452240 <_obstack_memory_used@@Base+0xb6f0>
  452220:	add	x10, x26, x8, lsl #3
  452224:	str	x9, [x10]
  452228:	ldur	x9, [x10, #-16]
  45222c:	sub	x8, x8, #0x1
  452230:	cmp	x9, x19
  452234:	b.gt	452220 <_obstack_memory_used@@Base+0xb6d0>
  452238:	b	452240 <_obstack_memory_used@@Base+0xb6f0>
  45223c:	mov	x8, x23
  452240:	add	x18, x23, #0x1
  452244:	str	x19, [x26, x8, lsl #3]
  452248:	stur	x18, [x29, #-24]
  45224c:	b	451ed4 <_obstack_memory_used@@Base+0xb384>
  452250:	mov	x25, x26
  452254:	cmp	x8, x23
  452258:	b.ne	452280 <_obstack_memory_used@@Base+0xb730>  // b.any
  45225c:	ldur	x26, [x29, #-16]
  452260:	lsl	x9, x8, #1
  452264:	lsl	x1, x8, #4
  452268:	stur	x9, [x29, #-32]
  45226c:	mov	x0, x26
  452270:	bl	404490 <realloc@plt>
  452274:	cbz	x0, 4523c4 <_obstack_memory_used@@Base+0xb874>
  452278:	stur	x0, [x29, #-16]
  45227c:	b	452284 <_obstack_memory_used@@Base+0xb734>
  452280:	ldur	x0, [x29, #-16]
  452284:	ldr	x8, [x0]
  452288:	cmp	x8, x19
  45228c:	b.le	4522b8 <_obstack_memory_used@@Base+0xb768>
  452290:	cmp	x23, #0x1
  452294:	b.lt	4522e8 <_obstack_memory_used@@Base+0xb798>  // b.tstop
  452298:	mov	x9, x23
  45229c:	add	x10, x0, x9, lsl #3
  4522a0:	ldur	x11, [x10, #-8]
  4522a4:	subs	x8, x9, #0x1
  4522a8:	mov	x9, x8
  4522ac:	str	x11, [x10]
  4522b0:	b.gt	45229c <_obstack_memory_used@@Base+0xb74c>
  4522b4:	b	4522ec <_obstack_memory_used@@Base+0xb79c>
  4522b8:	add	x8, x0, x23, lsl #3
  4522bc:	ldur	x9, [x8, #-8]
  4522c0:	mov	x8, x23
  4522c4:	cmp	x9, x19
  4522c8:	b.le	4522ec <_obstack_memory_used@@Base+0xb79c>
  4522cc:	add	x10, x0, x8, lsl #3
  4522d0:	str	x9, [x10]
  4522d4:	ldur	x9, [x10, #-16]
  4522d8:	sub	x8, x8, #0x1
  4522dc:	cmp	x9, x19
  4522e0:	b.gt	4522cc <_obstack_memory_used@@Base+0xb77c>
  4522e4:	b	4522ec <_obstack_memory_used@@Base+0xb79c>
  4522e8:	mov	x8, x23
  4522ec:	str	x19, [x0, x8, lsl #3]
  4522f0:	add	x8, x23, #0x1
  4522f4:	mov	x26, x25
  4522f8:	stur	x8, [x29, #-24]
  4522fc:	b	4520c4 <_obstack_memory_used@@Base+0xb574>
  452300:	ldur	x0, [x29, #-16]
  452304:	bl	404700 <free@plt>
  452308:	ldur	w8, [x29, #-92]
  45230c:	cbz	w8, 452318 <_obstack_memory_used@@Base+0xb7c8>
  452310:	ldur	x0, [x29, #-88]
  452314:	bl	404700 <free@plt>
  452318:	ldr	x8, [x28]
  45231c:	ldr	x0, [x28, #16]
  452320:	cmp	x8, #0x1
  452324:	b.lt	452364 <_obstack_memory_used@@Base+0xb814>  // b.tstop
  452328:	mov	x19, xzr
  45232c:	mov	x20, xzr
  452330:	add	x8, x0, x19
  452334:	ldr	x0, [x8, #40]
  452338:	bl	404700 <free@plt>
  45233c:	ldr	x8, [x28, #16]
  452340:	add	x8, x8, x19
  452344:	ldr	x0, [x8, #16]
  452348:	bl	404700 <free@plt>
  45234c:	ldr	x8, [x28]
  452350:	ldr	x0, [x28, #16]
  452354:	add	x20, x20, #0x1
  452358:	add	x19, x19, #0x30
  45235c:	cmp	x20, x8
  452360:	b.lt	452330 <_obstack_memory_used@@Base+0xb7e0>  // b.tstop
  452364:	bl	404700 <free@plt>
  452368:	mov	w0, wzr
  45236c:	b	452434 <_obstack_memory_used@@Base+0xb8e4>
  452370:	ldur	x0, [x29, #-16]
  452374:	b	451ae4 <_obstack_memory_used@@Base+0xaf94>
  452378:	ldur	x0, [x29, #-16]
  45237c:	bl	404700 <free@plt>
  452380:	ldur	w8, [x29, #-92]
  452384:	cbz	w8, 452390 <_obstack_memory_used@@Base+0xb840>
  452388:	ldur	x0, [x29, #-88]
  45238c:	bl	404700 <free@plt>
  452390:	mov	w0, #0x1                   	// #1
  452394:	b	452434 <_obstack_memory_used@@Base+0xb8e4>
  452398:	ldur	x0, [x29, #-16]
  45239c:	bl	404700 <free@plt>
  4523a0:	ldur	w8, [x29, #-92]
  4523a4:	cbz	w8, 452368 <_obstack_memory_used@@Base+0xb818>
  4523a8:	ldur	x0, [x29, #-88]
  4523ac:	b	452364 <_obstack_memory_used@@Base+0xb814>
  4523b0:	ldur	x8, [x29, #-144]
  4523b4:	stp	xzr, xzr, [x8]
  4523b8:	b	4523c4 <_obstack_memory_used@@Base+0xb874>
  4523bc:	mov	x26, xzr
  4523c0:	stp	xzr, xzr, [x29, #-32]
  4523c4:	mov	x0, x26
  4523c8:	bl	404700 <free@plt>
  4523cc:	ldur	w8, [x29, #-92]
  4523d0:	cbz	w8, 4523dc <_obstack_memory_used@@Base+0xb88c>
  4523d4:	ldur	x0, [x29, #-88]
  4523d8:	bl	404700 <free@plt>
  4523dc:	cbz	x28, 452430 <_obstack_memory_used@@Base+0xb8e0>
  4523e0:	ldr	x8, [x28]
  4523e4:	ldr	x0, [x28, #16]
  4523e8:	cmp	x8, #0x1
  4523ec:	b.lt	451bb8 <_obstack_memory_used@@Base+0xb068>  // b.tstop
  4523f0:	mov	x19, xzr
  4523f4:	mov	x20, xzr
  4523f8:	add	x8, x0, x19
  4523fc:	ldr	x0, [x8, #40]
  452400:	bl	404700 <free@plt>
  452404:	ldr	x8, [x28, #16]
  452408:	add	x8, x8, x19
  45240c:	ldr	x0, [x8, #16]
  452410:	bl	404700 <free@plt>
  452414:	ldr	x8, [x28]
  452418:	ldr	x0, [x28, #16]
  45241c:	add	x20, x20, #0x1
  452420:	add	x19, x19, #0x30
  452424:	cmp	x20, x8
  452428:	b.lt	4523f8 <_obstack_memory_used@@Base+0xb8a8>  // b.tstop
  45242c:	b	451bb8 <_obstack_memory_used@@Base+0xb068>
  452430:	mov	w0, #0xc                   	// #12
  452434:	mov	sp, x29
  452438:	ldp	x20, x19, [sp, #80]
  45243c:	ldp	x22, x21, [sp, #64]
  452440:	ldp	x24, x23, [sp, #48]
  452444:	ldp	x26, x25, [sp, #32]
  452448:	ldp	x28, x27, [sp, #16]
  45244c:	ldp	x29, x30, [sp], #96
  452450:	ret
  452454:	ldur	x26, [x29, #-16]
  452458:	b	4523c4 <_obstack_memory_used@@Base+0xb874>
  45245c:	ldur	x26, [x29, #-136]
  452460:	b	4523c4 <_obstack_memory_used@@Base+0xb874>
  452464:	adrp	x0, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  452468:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  45246c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  452470:	add	x0, x0, #0xe6b
  452474:	add	x1, x1, #0xd1f
  452478:	add	x3, x3, #0xe74
  45247c:	mov	w2, #0x553                 	// #1363
  452480:	bl	404a00 <__assert_fail@plt>
  452484:	stp	x29, x30, [sp, #-80]!
  452488:	stp	x24, x23, [sp, #32]
  45248c:	stp	x22, x21, [sp, #48]
  452490:	stp	x20, x19, [sp, #64]
  452494:	ldr	x8, [x1, #8]
  452498:	str	x25, [sp, #16]
  45249c:	mov	x29, sp
  4524a0:	cmp	x8, #0x1
  4524a4:	b.lt	45256c <_obstack_memory_used@@Base+0xba1c>  // b.tstop
  4524a8:	ldr	x22, [x0, #152]
  4524ac:	mov	x19, x2
  4524b0:	mov	x20, x1
  4524b4:	mov	x21, x0
  4524b8:	mov	x23, xzr
  4524bc:	b	4524e0 <_obstack_memory_used@@Base+0xb990>
  4524c0:	add	x8, x8, #0x1
  4524c4:	str	x24, [x9, #8]
  4524c8:	str	x8, [x21, #232]
  4524cc:	str	x19, [x9]
  4524d0:	ldr	x8, [x20, #8]
  4524d4:	add	x23, x23, #0x1
  4524d8:	cmp	x23, x8
  4524dc:	b.ge	45256c <_obstack_memory_used@@Base+0xba1c>  // b.tcont
  4524e0:	ldr	x9, [x20, #16]
  4524e4:	ldr	x24, [x9, x23, lsl #3]
  4524e8:	ldr	x9, [x22]
  4524ec:	add	x10, x9, x24, lsl #4
  4524f0:	ldrb	w10, [x10, #8]
  4524f4:	cmp	w10, #0x8
  4524f8:	b.ne	4524d4 <_obstack_memory_used@@Base+0xb984>  // b.any
  4524fc:	lsl	x10, x24, #4
  452500:	ldr	x9, [x9, x10]
  452504:	cmp	x9, #0x3f
  452508:	b.gt	4524d4 <_obstack_memory_used@@Base+0xb984>
  45250c:	ldr	x10, [x22, #160]
  452510:	lsr	x9, x10, x9
  452514:	tbz	w9, #0, 4524d4 <_obstack_memory_used@@Base+0xb984>
  452518:	ldp	x25, x8, [x21, #232]
  45251c:	cmp	x25, x8
  452520:	b.eq	452550 <_obstack_memory_used@@Base+0xba00>  // b.none
  452524:	mov	w0, #0x1                   	// #1
  452528:	mov	w1, #0x30                  	// #48
  45252c:	bl	404410 <calloc@plt>
  452530:	ldr	x8, [x21, #232]
  452534:	ldr	x9, [x21, #248]
  452538:	lsl	x10, x8, #3
  45253c:	str	x0, [x9, x10]
  452540:	ldr	x9, [x21, #248]
  452544:	ldr	x9, [x9, x10]
  452548:	cbnz	x9, 4524c0 <_obstack_memory_used@@Base+0xb970>
  45254c:	b	452588 <_obstack_memory_used@@Base+0xba38>
  452550:	ldr	x0, [x21, #248]
  452554:	lsl	x1, x25, #4
  452558:	bl	404490 <realloc@plt>
  45255c:	cbz	x0, 452588 <_obstack_memory_used@@Base+0xba38>
  452560:	lsl	x8, x25, #1
  452564:	stp	x8, x0, [x21, #240]
  452568:	b	452524 <_obstack_memory_used@@Base+0xb9d4>
  45256c:	mov	w0, wzr
  452570:	ldp	x20, x19, [sp, #64]
  452574:	ldp	x22, x21, [sp, #48]
  452578:	ldp	x24, x23, [sp, #32]
  45257c:	ldr	x25, [sp, #16]
  452580:	ldp	x29, x30, [sp], #80
  452584:	ret
  452588:	mov	w0, #0xc                   	// #12
  45258c:	b	452570 <_obstack_memory_used@@Base+0xba20>
  452590:	sub	sp, sp, #0xd0
  452594:	stp	x29, x30, [sp, #112]
  452598:	stp	x28, x27, [sp, #128]
  45259c:	stp	x26, x25, [sp, #144]
  4525a0:	stp	x24, x23, [sp, #160]
  4525a4:	stp	x22, x21, [sp, #176]
  4525a8:	stp	x20, x19, [sp, #192]
  4525ac:	ldr	x8, [x1, #8]
  4525b0:	add	x29, sp, #0x70
  4525b4:	cmp	x8, #0x1
  4525b8:	b.lt	452dcc <_obstack_memory_used@@Base+0xc27c>  // b.tstop
  4525bc:	ldr	x10, [x0, #152]
  4525c0:	ldr	x8, [x0, #72]
  4525c4:	mov	x28, x0
  4525c8:	mov	x9, xzr
  4525cc:	mov	w23, #0x28                  	// #40
  4525d0:	stur	x8, [x29, #-48]
  4525d4:	str	x1, [sp]
  4525d8:	str	x10, [sp, #16]
  4525dc:	b	452600 <_obstack_memory_used@@Base+0xbab0>
  4525e0:	stur	wzr, [x29, #-4]
  4525e4:	ldr	x1, [sp]
  4525e8:	ldr	x9, [sp, #40]
  4525ec:	ldr	x10, [sp, #16]
  4525f0:	ldr	x8, [x1, #8]
  4525f4:	add	x9, x9, #0x1
  4525f8:	cmp	x9, x8
  4525fc:	b.ge	452dcc <_obstack_memory_used@@Base+0xc27c>  // b.tcont
  452600:	ldr	x8, [x1, #16]
  452604:	str	x9, [sp, #40]
  452608:	ldr	x9, [x8, x9, lsl #3]
  45260c:	ldr	x8, [x10]
  452610:	stur	x9, [x29, #-40]
  452614:	add	x19, x8, x9, lsl #4
  452618:	ldr	w21, [x19, #8]!
  45261c:	and	w8, w21, #0xff
  452620:	cmp	w8, #0x4
  452624:	b.ne	4525e4 <_obstack_memory_used@@Base+0xba94>  // b.any
  452628:	tst	w21, #0x3ff00
  45262c:	b.eq	4526fc <_obstack_memory_used@@Base+0xbbac>  // b.none
  452630:	ldur	x9, [x29, #-48]
  452634:	tbnz	x9, #63, 45266c <_obstack_memory_used@@Base+0xbb1c>
  452638:	ldr	x8, [x28, #88]
  45263c:	cmp	x8, x9
  452640:	b.eq	452d98 <_obstack_memory_used@@Base+0xc248>  // b.none
  452644:	ldr	w8, [x28, #144]
  452648:	cmp	w8, #0x2
  45264c:	b.lt	452674 <_obstack_memory_used@@Base+0xbb24>  // b.tstop
  452650:	ldr	x8, [x28, #16]
  452654:	ldr	w24, [x8, x9, lsl #2]
  452658:	cmn	w24, #0x1
  45265c:	b.ne	4526a0 <_obstack_memory_used@@Base+0xbb50>  // b.any
  452660:	cmp	x9, #0x0
  452664:	sub	x9, x9, #0x1
  452668:	b.gt	452654 <_obstack_memory_used@@Base+0xbb04>
  45266c:	ldr	w8, [x28, #112]
  452670:	b	4526d0 <_obstack_memory_used@@Base+0xbb80>
  452674:	ldr	x8, [x28, #8]
  452678:	ldrb	w8, [x8, x9]
  45267c:	ldr	x9, [x28, #128]
  452680:	lsr	x10, x8, #3
  452684:	and	x10, x10, #0x18
  452688:	ldr	x9, [x9, x10]
  45268c:	lsr	x9, x9, x8
  452690:	tbz	w9, #0, 4526c4 <_obstack_memory_used@@Base+0xbb74>
  452694:	mov	w9, wzr
  452698:	mov	w8, #0x1                   	// #1
  45269c:	b	4526e0 <_obstack_memory_used@@Base+0xbb90>
  4526a0:	ldrb	w8, [x28, #142]
  4526a4:	cbnz	w8, 452dac <_obstack_memory_used@@Base+0xc25c>
  4526a8:	cmp	w24, #0xa
  4526ac:	b.ne	4526cc <_obstack_memory_used@@Base+0xbb7c>  // b.any
  4526b0:	ldrb	w8, [x28, #141]
  4526b4:	cmp	w8, #0x0
  4526b8:	cset	w8, ne  // ne = any
  4526bc:	lsl	w8, w8, #1
  4526c0:	b	4526d0 <_obstack_memory_used@@Base+0xbb80>
  4526c4:	cmp	w8, #0xa
  4526c8:	b.eq	4526b0 <_obstack_memory_used@@Base+0xbb60>  // b.none
  4526cc:	mov	w8, wzr
  4526d0:	tst	w8, #0x1
  4526d4:	cset	w9, eq  // eq = none
  4526d8:	tbz	w21, #10, 4526e0 <_obstack_memory_used@@Base+0xbb90>
  4526dc:	tbz	w8, #0, 4525e4 <_obstack_memory_used@@Base+0xba94>
  4526e0:	ldr	w10, [x19]
  4526e4:	tbnz	w9, #0, 4526ec <_obstack_memory_used@@Base+0xbb9c>
  4526e8:	tbnz	w10, #11, 4525e4 <_obstack_memory_used@@Base+0xba94>
  4526ec:	tbnz	w8, #1, 4526f4 <_obstack_memory_used@@Base+0xbba4>
  4526f0:	tbnz	w10, #13, 4525e4 <_obstack_memory_used@@Base+0xba94>
  4526f4:	tbnz	w8, #3, 4526fc <_obstack_memory_used@@Base+0xbbac>
  4526f8:	tbnz	w10, #15, 4525e4 <_obstack_memory_used@@Base+0xba94>
  4526fc:	ldr	x10, [x28, #200]
  452700:	ldr	x20, [x28, #152]
  452704:	ldr	x19, [x28, #8]
  452708:	mov	x8, xzr
  45270c:	cmp	x10, #0x1
  452710:	str	x10, [sp, #8]
  452714:	b.lt	452750 <_obstack_memory_used@@Base+0xbc00>  // b.tstop
  452718:	ldr	x9, [x28, #216]
  45271c:	ldur	x24, [x29, #-48]
  452720:	add	x11, x10, x8
  452724:	cmp	x11, #0x0
  452728:	cinc	x11, x11, lt  // lt = tstop
  45272c:	asr	x11, x11, #1
  452730:	madd	x12, x11, x23, x9
  452734:	ldr	x12, [x12, #8]
  452738:	cmp	x12, x24
  45273c:	csel	x10, x10, x11, lt  // lt = tstop
  452740:	csinc	x8, x8, x11, ge  // ge = tcont
  452744:	cmp	x8, x10
  452748:	b.lt	452720 <_obstack_memory_used@@Base+0xbbd0>  // b.tstop
  45274c:	b	452754 <_obstack_memory_used@@Base+0xbc04>
  452750:	ldur	x24, [x29, #-48]
  452754:	ldr	x9, [sp, #8]
  452758:	cmp	x8, x9
  45275c:	b.ge	45279c <_obstack_memory_used@@Base+0xbc4c>  // b.tcont
  452760:	cmn	x8, #0x1
  452764:	b.eq	45279c <_obstack_memory_used@@Base+0xbc4c>  // b.none
  452768:	ldr	x9, [x28, #216]
  45276c:	madd	x10, x8, x23, x9
  452770:	ldr	x10, [x10, #8]
  452774:	cmp	x10, x24
  452778:	b.ne	45279c <_obstack_memory_used@@Base+0xbc4c>  // b.any
  45277c:	madd	x8, x8, x23, x9
  452780:	ldr	x9, [x8]
  452784:	ldur	x10, [x29, #-40]
  452788:	cmp	x9, x10
  45278c:	b.eq	4525e0 <_obstack_memory_used@@Base+0xba90>  // b.none
  452790:	ldrb	w9, [x8, #32]
  452794:	add	x8, x8, #0x28
  452798:	cbnz	w9, 452780 <_obstack_memory_used@@Base+0xbc30>
  45279c:	ldr	x8, [x28, #232]
  4527a0:	cmp	x8, #0x1
  4527a4:	b.lt	4525e0 <_obstack_memory_used@@Base+0xba90>  // b.tstop
  4527a8:	ldur	x9, [x29, #-40]
  4527ac:	ldr	x8, [x20]
  4527b0:	mov	x12, xzr
  4527b4:	lsl	x9, x9, #4
  4527b8:	ldr	x21, [x8, x9]
  4527bc:	stp	x21, x20, [sp, #24]
  4527c0:	ldr	x9, [x28, #248]
  4527c4:	ldr	x27, [x9, x12, lsl #3]
  4527c8:	ldr	x9, [x27, #8]
  4527cc:	lsl	x9, x9, #4
  4527d0:	ldr	x8, [x8, x9]
  4527d4:	cmp	x8, x21
  4527d8:	b.ne	452958 <_obstack_memory_used@@Base+0xbe08>  // b.any
  4527dc:	stp	x12, x27, [sp, #48]
  4527e0:	ldr	x8, [x27, #32]
  4527e4:	ldr	x20, [x27]
  4527e8:	mov	x23, xzr
  4527ec:	mov	x22, x24
  4527f0:	cmp	x8, #0x1
  4527f4:	b.lt	45290c <_obstack_memory_used@@Base+0xbdbc>  // b.tstop
  4527f8:	mov	x21, x20
  4527fc:	ldr	x9, [x27, #40]
  452800:	ldr	x26, [x9, x23, lsl #3]
  452804:	ldr	x20, [x26, #8]
  452808:	sub	x25, x20, x21
  45280c:	cmp	x25, #0x1
  452810:	b.lt	452844 <_obstack_memory_used@@Base+0xbcf4>  // b.tstop
  452814:	ldr	x9, [x28, #48]
  452818:	mov	x24, x28
  45281c:	add	x28, x25, x22
  452820:	cmp	x28, x9
  452824:	b.gt	452888 <_obstack_memory_used@@Base+0xbd38>
  452828:	mov	x28, x24
  45282c:	add	x0, x19, x22
  452830:	add	x1, x19, x21
  452834:	mov	x2, x25
  452838:	bl	404440 <bcmp@plt>
  45283c:	ldur	x24, [x29, #-48]
  452840:	cbnz	w0, 452904 <_obstack_memory_used@@Base+0xbdb4>
  452844:	ldur	x3, [x29, #-40]
  452848:	mov	x0, x28
  45284c:	mov	x1, x27
  452850:	mov	x2, x26
  452854:	mov	x4, x24
  452858:	bl	453404 <_obstack_memory_used@@Base+0xc8b4>
  45285c:	cmp	w0, #0x1
  452860:	b.hi	452e04 <_obstack_memory_used@@Base+0xc2b4>  // b.pmore
  452864:	ldr	x8, [x27, #32]
  452868:	ldr	x19, [x28, #8]
  45286c:	add	x23, x23, #0x1
  452870:	add	x22, x25, x22
  452874:	cmp	x23, x8
  452878:	mov	x21, x20
  45287c:	mov	x9, x27
  452880:	b.lt	4527fc <_obstack_memory_used@@Base+0xbcac>  // b.tstop
  452884:	b	45290c <_obstack_memory_used@@Base+0xbdbc>
  452888:	ldr	x10, [x24, #88]
  45288c:	mov	x11, x24
  452890:	cmp	x28, x10
  452894:	b.gt	452924 <_obstack_memory_used@@Base+0xbdd4>
  452898:	ldr	x8, [x11, #64]
  45289c:	ldr	x19, [x11, #192]
  4528a0:	cmp	x8, x28
  4528a4:	b.gt	4528b0 <_obstack_memory_used@@Base+0xbd60>
  4528a8:	cmp	x8, x10
  4528ac:	b.lt	4528c0 <_obstack_memory_used@@Base+0xbd70>  // b.tstop
  4528b0:	cmp	x9, x28
  4528b4:	b.gt	4528d0 <_obstack_memory_used@@Base+0xbd80>
  4528b8:	cmp	x9, x10
  4528bc:	b.ge	4528d0 <_obstack_memory_used@@Base+0xbd80>  // b.tcont
  4528c0:	add	w1, w28, #0x1
  4528c4:	mov	x0, x24
  4528c8:	bl	452e28 <_obstack_memory_used@@Base+0xc2d8>
  4528cc:	cbnz	w0, 452e04 <_obstack_memory_used@@Base+0xc2b4>
  4528d0:	subs	x8, x28, x19
  4528d4:	b.le	4528f8 <_obstack_memory_used@@Base+0xbda8>
  4528d8:	ldr	x9, [x24, #184]
  4528dc:	lsl	x2, x8, #3
  4528e0:	mov	w1, wzr
  4528e4:	mov	x27, x24
  4528e8:	add	x9, x9, x19, lsl #3
  4528ec:	add	x0, x9, #0x8
  4528f0:	bl	404360 <memset@plt>
  4528f4:	str	x28, [x24, #192]
  4528f8:	ldr	x19, [x24, #8]
  4528fc:	ldr	x27, [sp, #56]
  452900:	b	452828 <_obstack_memory_used@@Base+0xbcd8>
  452904:	ldr	x8, [x27, #32]
  452908:	mov	x20, x21
  45290c:	cmp	x23, x8
  452910:	b.ge	452938 <_obstack_memory_used@@Base+0xbde8>  // b.tcont
  452914:	ldp	x21, x20, [sp, #24]
  452918:	ldr	x12, [sp, #48]
  45291c:	mov	w23, #0x28                  	// #40
  452920:	b	452958 <_obstack_memory_used@@Base+0xbe08>
  452924:	ldur	x24, [x29, #-48]
  452928:	mov	x20, x21
  45292c:	mov	x28, x11
  452930:	cmp	x23, x8
  452934:	b.lt	452914 <_obstack_memory_used@@Base+0xbdc4>  // b.tstop
  452938:	ldr	x21, [sp, #24]
  45293c:	ldr	x12, [sp, #48]
  452940:	cmp	x23, #0x0
  452944:	cinc	x25, x20, ne  // ne = any
  452948:	cmp	x25, x24
  45294c:	mov	w23, #0x28                  	// #40
  452950:	b.le	452970 <_obstack_memory_used@@Base+0xbe20>
  452954:	ldr	x20, [sp, #32]
  452958:	ldr	x8, [x28, #232]
  45295c:	add	x12, x12, #0x1
  452960:	cmp	x12, x8
  452964:	b.ge	452b14 <_obstack_memory_used@@Base+0xbfc4>  // b.tcont
  452968:	ldr	x8, [x20]
  45296c:	b	4527c0 <_obstack_memory_used@@Base+0xbc70>
  452970:	ldr	x20, [sp, #32]
  452974:	b	452988 <_obstack_memory_used@@Base+0xbe38>
  452978:	ldr	x27, [sp, #56]
  45297c:	cmp	x25, x24
  452980:	add	x25, x25, #0x1
  452984:	b.ge	452958 <_obstack_memory_used@@Base+0xbe08>  // b.tcont
  452988:	ldr	x8, [x27]
  45298c:	cmp	x25, x8
  452990:	b.le	4529b8 <_obstack_memory_used@@Base+0xbe68>
  452994:	ldr	x8, [x28, #48]
  452998:	cmp	x22, x8
  45299c:	b.ge	452ac8 <_obstack_memory_used@@Base+0xbf78>  // b.tcont
  4529a0:	add	x9, x25, x19
  4529a4:	ldrb	w8, [x19, x22]
  4529a8:	ldurb	w9, [x9, #-1]
  4529ac:	cmp	w8, w9
  4529b0:	b.ne	452958 <_obstack_memory_used@@Base+0xbe08>  // b.any
  4529b4:	add	x22, x22, #0x1
  4529b8:	ldr	x8, [x28, #184]
  4529bc:	ldr	x9, [x8, x25, lsl #3]
  4529c0:	cbz	x9, 452978 <_obstack_memory_used@@Base+0xbe28>
  4529c4:	ldr	x8, [x9, #16]
  4529c8:	cmp	x8, #0x1
  4529cc:	b.lt	452978 <_obstack_memory_used@@Base+0xbe28>  // b.tstop
  4529d0:	ldr	x9, [x9, #24]
  4529d4:	ldr	x10, [x20]
  4529d8:	b	4529e8 <_obstack_memory_used@@Base+0xbe98>
  4529dc:	subs	x8, x8, #0x1
  4529e0:	add	x9, x9, #0x8
  4529e4:	b.eq	452978 <_obstack_memory_used@@Base+0xbe28>  // b.none
  4529e8:	ldr	x26, [x9]
  4529ec:	add	x11, x10, x26, lsl #4
  4529f0:	ldrb	w11, [x11, #8]
  4529f4:	cmp	w11, #0x9
  4529f8:	b.ne	4529dc <_obstack_memory_used@@Base+0xbe8c>  // b.any
  4529fc:	lsl	x11, x26, #4
  452a00:	ldr	x11, [x10, x11]
  452a04:	cmp	x11, x21
  452a08:	b.ne	4529dc <_obstack_memory_used@@Base+0xbe8c>  // b.any
  452a0c:	cmn	x26, #0x1
  452a10:	b.eq	452978 <_obstack_memory_used@@Base+0xbe28>  // b.none
  452a14:	ldr	x1, [x27, #16]
  452a18:	cbnz	x1, 452a3c <_obstack_memory_used@@Base+0xbeec>
  452a1c:	ldr	x8, [x27]
  452a20:	mov	w0, #0x18                  	// #24
  452a24:	sub	x8, x25, x8
  452a28:	add	x1, x8, #0x1
  452a2c:	bl	404410 <calloc@plt>
  452a30:	mov	x1, x0
  452a34:	str	x0, [x27, #16]
  452a38:	cbz	x0, 452df8 <_obstack_memory_used@@Base+0xc2a8>
  452a3c:	ldp	x3, x2, [x27]
  452a40:	mov	w6, #0x9                   	// #9
  452a44:	mov	x0, x28
  452a48:	mov	x4, x26
  452a4c:	mov	x5, x25
  452a50:	bl	4535bc <_obstack_memory_used@@Base+0xca6c>
  452a54:	ldr	x12, [sp, #48]
  452a58:	cmp	w0, #0x1
  452a5c:	b.eq	452978 <_obstack_memory_used@@Base+0xbe28>  // b.none
  452a60:	mov	w27, w0
  452a64:	cbnz	w0, 452e08 <_obstack_memory_used@@Base+0xc2b8>
  452a68:	ldr	x27, [sp, #56]
  452a6c:	ldp	x9, x8, [x27, #24]
  452a70:	cmp	x8, x9
  452a74:	b.eq	452af0 <_obstack_memory_used@@Base+0xbfa0>  // b.none
  452a78:	mov	w0, #0x1                   	// #1
  452a7c:	mov	w1, #0x28                  	// #40
  452a80:	bl	404410 <calloc@plt>
  452a84:	cbz	x0, 452df8 <_obstack_memory_used@@Base+0xc2a8>
  452a88:	ldp	x9, x8, [x27, #32]
  452a8c:	ldur	x3, [x29, #-40]
  452a90:	mov	x2, x0
  452a94:	mov	x1, x27
  452a98:	str	x0, [x8, x9, lsl #3]
  452a9c:	stp	x26, x25, [x0]
  452aa0:	add	x8, x9, #0x1
  452aa4:	mov	x0, x28
  452aa8:	mov	x4, x24
  452aac:	str	x8, [x27, #32]
  452ab0:	bl	453404 <_obstack_memory_used@@Base+0xc8b4>
  452ab4:	cmp	w0, #0x1
  452ab8:	b.hi	452e04 <_obstack_memory_used@@Base+0xc2b4>  // b.pmore
  452abc:	ldr	x19, [x28, #8]
  452ac0:	ldr	x12, [sp, #48]
  452ac4:	b	452978 <_obstack_memory_used@@Base+0xbe28>
  452ac8:	ldr	x8, [x28, #88]
  452acc:	cmp	x22, x8
  452ad0:	b.ge	452958 <_obstack_memory_used@@Base+0xbe08>  // b.tcont
  452ad4:	add	w1, w22, #0x1
  452ad8:	mov	x0, x28
  452adc:	bl	452e28 <_obstack_memory_used@@Base+0xc2d8>
  452ae0:	cbnz	w0, 452e04 <_obstack_memory_used@@Base+0xc2b4>
  452ae4:	ldr	x19, [x28, #8]
  452ae8:	ldp	x12, x27, [sp, #48]
  452aec:	b	4529a0 <_obstack_memory_used@@Base+0xbe50>
  452af0:	ldr	x0, [x27, #40]
  452af4:	mov	w19, #0x1                   	// #1
  452af8:	bfi	x19, x8, #1, #63
  452afc:	lsl	x1, x19, #3
  452b00:	bl	404490 <realloc@plt>
  452b04:	cbz	x0, 452df8 <_obstack_memory_used@@Base+0xc2a8>
  452b08:	str	x0, [x27, #40]
  452b0c:	str	x19, [x27, #24]
  452b10:	b	452a78 <_obstack_memory_used@@Base+0xbf28>
  452b14:	ldr	x8, [x28, #200]
  452b18:	ldr	x19, [sp, #8]
  452b1c:	stur	wzr, [x29, #-4]
  452b20:	cmp	x19, x8
  452b24:	b.lt	452b3c <_obstack_memory_used@@Base+0xbfec>  // b.tstop
  452b28:	b	4525e4 <_obstack_memory_used@@Base+0xba94>
  452b2c:	ldr	x8, [x28, #200]
  452b30:	add	x19, x19, #0x1
  452b34:	cmp	x19, x8
  452b38:	b.ge	4525e4 <_obstack_memory_used@@Base+0xba94>  // b.tcont
  452b3c:	ldr	x8, [x28, #216]
  452b40:	mul	x9, x19, x23
  452b44:	ldur	x10, [x29, #-40]
  452b48:	ldr	x9, [x8, x9]
  452b4c:	cmp	x9, x10
  452b50:	b.ne	452b2c <_obstack_memory_used@@Base+0xbfdc>  // b.any
  452b54:	madd	x9, x19, x23, x8
  452b58:	ldr	x9, [x9, #8]
  452b5c:	ldur	x10, [x29, #-48]
  452b60:	cmp	x9, x10
  452b64:	b.ne	452b2c <_obstack_memory_used@@Base+0xbfdc>  // b.any
  452b68:	str	x19, [sp, #8]
  452b6c:	madd	x8, x19, x23, x8
  452b70:	ldp	x21, x19, [x8, #16]
  452b74:	ldr	x8, [sp, #16]
  452b78:	cmp	x19, x21
  452b7c:	ldr	x23, [x8, #48]
  452b80:	b.ne	452b9c <_obstack_memory_used@@Base+0xc04c>  // b.any
  452b84:	ldr	x8, [x8, #40]
  452b88:	ldur	x10, [x29, #-40]
  452b8c:	mov	w9, #0x18                  	// #24
  452b90:	madd	x8, x10, x9, x8
  452b94:	ldr	x8, [x8, #16]
  452b98:	b	452ba8 <_obstack_memory_used@@Base+0xc058>
  452b9c:	ldr	x8, [x8, #24]
  452ba0:	ldur	x9, [x29, #-40]
  452ba4:	add	x8, x8, x9, lsl #3
  452ba8:	ldur	x9, [x29, #-48]
  452bac:	ldr	x26, [x8]
  452bb0:	add	x8, x19, x9
  452bb4:	sub	x22, x8, x21
  452bb8:	cmp	x22, #0x0
  452bbc:	b.le	452c00 <_obstack_memory_used@@Base+0xc0b0>
  452bc0:	ldr	x9, [x28, #88]
  452bc4:	sub	x8, x22, #0x1
  452bc8:	cmp	x9, x8
  452bcc:	b.eq	452d68 <_obstack_memory_used@@Base+0xc218>  // b.none
  452bd0:	ldr	w9, [x28, #144]
  452bd4:	cmp	w9, #0x2
  452bd8:	b.lt	452c08 <_obstack_memory_used@@Base+0xc0b8>  // b.tstop
  452bdc:	ldr	x8, [x28, #16]
  452be0:	mov	x9, x22
  452be4:	sub	x8, x8, #0x4
  452be8:	ldr	w24, [x8, x9, lsl #2]
  452bec:	cmn	w24, #0x1
  452bf0:	b.ne	452c30 <_obstack_memory_used@@Base+0xc0e0>  // b.any
  452bf4:	sub	x9, x9, #0x1
  452bf8:	cmp	x9, #0x0
  452bfc:	b.gt	452be8 <_obstack_memory_used@@Base+0xc098>
  452c00:	ldr	w25, [x28, #112]
  452c04:	b	452c60 <_obstack_memory_used@@Base+0xc110>
  452c08:	ldr	x9, [x28, #8]
  452c0c:	ldrb	w8, [x9, x8]
  452c10:	ldr	x9, [x28, #128]
  452c14:	lsr	x10, x8, #3
  452c18:	and	x10, x10, #0x18
  452c1c:	ldr	x9, [x9, x10]
  452c20:	lsr	x9, x9, x8
  452c24:	tbz	w9, #0, 452c54 <_obstack_memory_used@@Base+0xc104>
  452c28:	mov	w25, #0x1                   	// #1
  452c2c:	b	452c60 <_obstack_memory_used@@Base+0xc110>
  452c30:	ldrb	w8, [x28, #142]
  452c34:	cbnz	w8, 452d7c <_obstack_memory_used@@Base+0xc22c>
  452c38:	cmp	w24, #0xa
  452c3c:	b.ne	452c5c <_obstack_memory_used@@Base+0xc10c>  // b.any
  452c40:	ldrb	w8, [x28, #141]
  452c44:	cmp	w8, #0x0
  452c48:	cset	w8, ne  // ne = any
  452c4c:	lsl	w25, w8, #1
  452c50:	b	452c60 <_obstack_memory_used@@Base+0xc110>
  452c54:	cmp	w8, #0xa
  452c58:	b.eq	452c40 <_obstack_memory_used@@Base+0xc0f0>  // b.none
  452c5c:	mov	w25, wzr
  452c60:	ldr	x8, [x28, #184]
  452c64:	ldur	x9, [x29, #-48]
  452c68:	mov	w10, #0x18                  	// #24
  452c6c:	madd	x24, x26, x10, x23
  452c70:	ldr	x9, [x8, x9, lsl #3]
  452c74:	ldr	x8, [x8, x22, lsl #3]
  452c78:	cbz	x9, 452cd8 <_obstack_memory_used@@Base+0xc188>
  452c7c:	ldr	x20, [x9, #16]
  452c80:	mov	w23, #0x28                  	// #40
  452c84:	cbz	x8, 452ce4 <_obstack_memory_used@@Base+0xc194>
  452c88:	ldr	x1, [x8, #80]
  452c8c:	sub	x0, x29, #0x20
  452c90:	mov	x2, x24
  452c94:	bl	453210 <_obstack_memory_used@@Base+0xc6c0>
  452c98:	stur	w0, [x29, #-4]
  452c9c:	cbnz	w0, 452e10 <_obstack_memory_used@@Base+0xc2c0>
  452ca0:	ldr	x1, [sp, #16]
  452ca4:	sub	x0, x29, #0x4
  452ca8:	sub	x2, x29, #0x20
  452cac:	mov	w3, w25
  452cb0:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  452cb4:	ldr	x8, [x28, #184]
  452cb8:	lsl	x22, x22, #3
  452cbc:	str	x0, [x8, x22]
  452cc0:	ldur	x0, [x29, #-16]
  452cc4:	bl	404700 <free@plt>
  452cc8:	ldr	x8, [x28, #184]
  452ccc:	ldr	x9, [x8, x22]
  452cd0:	cbz	x9, 452d10 <_obstack_memory_used@@Base+0xc1c0>
  452cd4:	b	452d18 <_obstack_memory_used@@Base+0xc1c8>
  452cd8:	mov	x20, xzr
  452cdc:	mov	w23, #0x28                  	// #40
  452ce0:	cbnz	x8, 452c88 <_obstack_memory_used@@Base+0xc138>
  452ce4:	ldr	x1, [sp, #16]
  452ce8:	sub	x0, x29, #0x4
  452cec:	mov	x2, x24
  452cf0:	mov	w3, w25
  452cf4:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  452cf8:	ldr	x8, [x28, #184]
  452cfc:	lsl	x9, x22, #3
  452d00:	str	x0, [x8, x9]
  452d04:	ldr	x8, [x28, #184]
  452d08:	ldr	x9, [x8, x9]
  452d0c:	cbnz	x9, 452d18 <_obstack_memory_used@@Base+0xc1c8>
  452d10:	ldur	w27, [x29, #-4]
  452d14:	cbnz	w27, 452dd4 <_obstack_memory_used@@Base+0xc284>
  452d18:	cmp	x19, x21
  452d1c:	ldr	x19, [sp, #8]
  452d20:	b.ne	452b2c <_obstack_memory_used@@Base+0xbfdc>  // b.any
  452d24:	ldur	x9, [x29, #-48]
  452d28:	ldr	x8, [x8, x9, lsl #3]
  452d2c:	ldr	x8, [x8, #16]
  452d30:	cmp	x8, x20
  452d34:	b.le	452b2c <_obstack_memory_used@@Base+0xbfdc>
  452d38:	ldur	x2, [x29, #-48]
  452d3c:	mov	x0, x28
  452d40:	mov	x1, x24
  452d44:	bl	452484 <_obstack_memory_used@@Base+0xb934>
  452d48:	stur	w0, [x29, #-4]
  452d4c:	cbnz	w0, 452e20 <_obstack_memory_used@@Base+0xc2d0>
  452d50:	mov	x0, x28
  452d54:	mov	x1, x24
  452d58:	bl	452590 <_obstack_memory_used@@Base+0xba40>
  452d5c:	stur	w0, [x29, #-4]
  452d60:	cbz	w0, 452b2c <_obstack_memory_used@@Base+0xbfdc>
  452d64:	b	452e20 <_obstack_memory_used@@Base+0xc2d0>
  452d68:	ldr	w8, [x28, #160]
  452d6c:	mov	w9, #0xa                   	// #10
  452d70:	and	w8, w8, #0x2
  452d74:	eor	w25, w8, w9
  452d78:	b	452c60 <_obstack_memory_used@@Base+0xc110>
  452d7c:	mov	w0, w24
  452d80:	bl	4048d0 <iswalnum@plt>
  452d84:	cmp	w24, #0x5f
  452d88:	mov	w25, #0x1                   	// #1
  452d8c:	b.eq	452c60 <_obstack_memory_used@@Base+0xc110>  // b.none
  452d90:	cbz	w0, 452c38 <_obstack_memory_used@@Base+0xc0e8>
  452d94:	b	452c60 <_obstack_memory_used@@Base+0xc110>
  452d98:	ldr	w8, [x28, #160]
  452d9c:	mov	w9, #0xa                   	// #10
  452da0:	and	w8, w8, #0x2
  452da4:	eor	w8, w8, w9
  452da8:	b	4526d0 <_obstack_memory_used@@Base+0xbb80>
  452dac:	mov	w0, w24
  452db0:	bl	4048d0 <iswalnum@plt>
  452db4:	mov	w9, wzr
  452db8:	cmp	w24, #0x5f
  452dbc:	mov	w8, #0x1                   	// #1
  452dc0:	b.eq	4526e0 <_obstack_memory_used@@Base+0xbb90>  // b.none
  452dc4:	cbz	w0, 4526a8 <_obstack_memory_used@@Base+0xbb58>
  452dc8:	b	4526e0 <_obstack_memory_used@@Base+0xbb90>
  452dcc:	mov	w27, wzr
  452dd0:	stur	wzr, [x29, #-4]
  452dd4:	mov	w0, w27
  452dd8:	ldp	x20, x19, [sp, #192]
  452ddc:	ldp	x22, x21, [sp, #176]
  452de0:	ldp	x24, x23, [sp, #160]
  452de4:	ldp	x26, x25, [sp, #144]
  452de8:	ldp	x28, x27, [sp, #128]
  452dec:	ldp	x29, x30, [sp, #112]
  452df0:	add	sp, sp, #0xd0
  452df4:	ret
  452df8:	mov	w27, #0xc                   	// #12
  452dfc:	stur	w27, [x29, #-4]
  452e00:	b	452dd4 <_obstack_memory_used@@Base+0xc284>
  452e04:	mov	w27, w0
  452e08:	stur	w27, [x29, #-4]
  452e0c:	b	452dd4 <_obstack_memory_used@@Base+0xc284>
  452e10:	mov	w27, w0
  452e14:	ldur	x0, [x29, #-16]
  452e18:	bl	404700 <free@plt>
  452e1c:	b	452dd4 <_obstack_memory_used@@Base+0xc284>
  452e20:	mov	w27, w0
  452e24:	b	452dd4 <_obstack_memory_used@@Base+0xc284>
  452e28:	stp	x29, x30, [sp, #-48]!
  452e2c:	stp	x20, x19, [sp, #32]
  452e30:	ldr	x8, [x0, #64]
  452e34:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  452e38:	str	x21, [sp, #16]
  452e3c:	mov	x29, sp
  452e40:	cmp	x8, x9
  452e44:	b.hi	453000 <_obstack_memory_used@@Base+0xc4b0>  // b.pmore
  452e48:	ldr	x9, [x0, #88]
  452e4c:	lsl	x8, x8, #1
  452e50:	ldr	w11, [x0, #144]
  452e54:	sxtw	x10, w1
  452e58:	cmp	x9, x8
  452e5c:	csel	x8, x9, x8, lt  // lt = tstop
  452e60:	cmp	x8, x10
  452e64:	mov	x19, x0
  452e68:	csel	x20, x8, x10, gt
  452e6c:	cmp	w11, #0x2
  452e70:	b.lt	452eac <_obstack_memory_used@@Base+0xc35c>  // b.tstop
  452e74:	lsr	x8, x20, #61
  452e78:	cbnz	x8, 453000 <_obstack_memory_used@@Base+0xc4b0>
  452e7c:	ldr	x0, [x19, #16]
  452e80:	lsl	x1, x20, #2
  452e84:	bl	404490 <realloc@plt>
  452e88:	cbz	x0, 453000 <_obstack_memory_used@@Base+0xc4b0>
  452e8c:	mov	x8, x0
  452e90:	ldr	x0, [x19, #24]
  452e94:	str	x8, [x19, #16]
  452e98:	cbz	x0, 452eac <_obstack_memory_used@@Base+0xc35c>
  452e9c:	lsl	x1, x20, #3
  452ea0:	bl	404490 <realloc@plt>
  452ea4:	cbz	x0, 453000 <_obstack_memory_used@@Base+0xc4b0>
  452ea8:	str	x0, [x19, #24]
  452eac:	ldrb	w8, [x19, #139]
  452eb0:	cbz	w8, 452ec8 <_obstack_memory_used@@Base+0xc378>
  452eb4:	ldr	x0, [x19, #8]
  452eb8:	mov	x1, x20
  452ebc:	bl	404490 <realloc@plt>
  452ec0:	cbz	x0, 453000 <_obstack_memory_used@@Base+0xc4b0>
  452ec4:	str	x0, [x19, #8]
  452ec8:	ldr	x0, [x19, #184]
  452ecc:	str	x20, [x19, #64]
  452ed0:	cbz	x0, 452ee8 <_obstack_memory_used@@Base+0xc398>
  452ed4:	lsl	x8, x20, #3
  452ed8:	add	x1, x8, #0x8
  452edc:	bl	404490 <realloc@plt>
  452ee0:	cbz	x0, 453000 <_obstack_memory_used@@Base+0xc4b0>
  452ee4:	str	x0, [x19, #184]
  452ee8:	ldr	w8, [x19, #144]
  452eec:	ldrb	w9, [x19, #136]
  452ef0:	cmp	w8, #0x2
  452ef4:	cbz	w9, 452f0c <_obstack_memory_used@@Base+0xc3bc>
  452ef8:	b.lt	452f1c <_obstack_memory_used@@Base+0xc3cc>  // b.tstop
  452efc:	mov	x0, x19
  452f00:	bl	44b7a4 <_obstack_memory_used@@Base+0x4c54>
  452f04:	cbz	w0, 452fec <_obstack_memory_used@@Base+0xc49c>
  452f08:	b	452ff0 <_obstack_memory_used@@Base+0xc4a0>
  452f0c:	b.lt	452f84 <_obstack_memory_used@@Base+0xc434>  // b.tstop
  452f10:	mov	x0, x19
  452f14:	bl	44be60 <_obstack_memory_used@@Base+0x5310>
  452f18:	b	452fec <_obstack_memory_used@@Base+0xc49c>
  452f1c:	ldr	x8, [x19, #64]
  452f20:	ldr	x9, [x19, #88]
  452f24:	ldr	x20, [x19, #48]
  452f28:	cmp	x8, x9
  452f2c:	csel	x21, x9, x8, gt
  452f30:	cmp	x20, x21
  452f34:	b.ge	452f7c <_obstack_memory_used@@Base+0xc42c>  // b.tcont
  452f38:	bl	4044a0 <__ctype_toupper_loc@plt>
  452f3c:	ldr	x8, [x19]
  452f40:	ldr	x9, [x19, #40]
  452f44:	add	x8, x8, x9
  452f48:	ldr	x9, [x19, #120]
  452f4c:	ldrb	w8, [x8, x20]
  452f50:	cbnz	x9, 452f74 <_obstack_memory_used@@Base+0xc424>
  452f54:	ldr	x9, [x0]
  452f58:	ldr	x10, [x19, #8]
  452f5c:	ldr	w8, [x9, w8, uxtw #2]
  452f60:	strb	w8, [x10, x20]
  452f64:	add	x20, x20, #0x1
  452f68:	cmp	x20, x21
  452f6c:	b.lt	452f3c <_obstack_memory_used@@Base+0xc3ec>  // b.tstop
  452f70:	b	452f7c <_obstack_memory_used@@Base+0xc42c>
  452f74:	ldrb	w8, [x9, x8]
  452f78:	b	452f54 <_obstack_memory_used@@Base+0xc404>
  452f7c:	stp	x20, x20, [x19, #48]
  452f80:	b	452fec <_obstack_memory_used@@Base+0xc49c>
  452f84:	ldr	x10, [x19, #120]
  452f88:	cbz	x10, 452fec <_obstack_memory_used@@Base+0xc49c>
  452f8c:	ldr	x9, [x19, #64]
  452f90:	ldr	x11, [x19, #88]
  452f94:	ldr	x8, [x19, #48]
  452f98:	cmp	x9, x11
  452f9c:	csel	x9, x11, x9, gt
  452fa0:	cmp	x8, x9
  452fa4:	b.ge	452fe8 <_obstack_memory_used@@Base+0xc498>  // b.tcont
  452fa8:	ldr	x11, [x19, #40]
  452fac:	ldp	x12, x13, [x19]
  452fb0:	add	x11, x11, x8
  452fb4:	ldrb	w11, [x12, x11]
  452fb8:	ldrb	w10, [x10, x11]
  452fbc:	strb	w10, [x13, x8]
  452fc0:	add	x8, x8, #0x1
  452fc4:	cmp	x8, x9
  452fc8:	b.ge	452fe8 <_obstack_memory_used@@Base+0xc498>  // b.tcont
  452fcc:	ldr	x10, [x19, #40]
  452fd0:	ldp	x11, x13, [x19]
  452fd4:	ldr	x12, [x19, #120]
  452fd8:	add	x10, x11, x10
  452fdc:	ldrb	w10, [x10, x8]
  452fe0:	ldrb	w10, [x12, x10]
  452fe4:	b	452fbc <_obstack_memory_used@@Base+0xc46c>
  452fe8:	stp	x8, x8, [x19, #48]
  452fec:	mov	w0, wzr
  452ff0:	ldp	x20, x19, [sp, #32]
  452ff4:	ldr	x21, [sp, #16]
  452ff8:	ldp	x29, x30, [sp], #48
  452ffc:	ret
  453000:	mov	w0, #0xc                   	// #12
  453004:	b	452ff0 <_obstack_memory_used@@Base+0xc4a0>
  453008:	sub	sp, sp, #0x60
  45300c:	stp	x29, x30, [sp, #32]
  453010:	stp	x24, x23, [sp, #48]
  453014:	stp	x22, x21, [sp, #64]
  453018:	stp	x20, x19, [sp, #80]
  45301c:	ldr	x20, [x1, #72]
  453020:	ldp	x8, x9, [x1, #184]
  453024:	ldr	x22, [x1, #152]
  453028:	mov	x24, x2
  45302c:	mov	x19, x1
  453030:	cmp	x20, x9
  453034:	mov	x21, x0
  453038:	add	x29, sp, #0x20
  45303c:	b.le	45304c <_obstack_memory_used@@Base+0xc4fc>
  453040:	str	x24, [x8, x20, lsl #3]
  453044:	str	x20, [x19, #192]
  453048:	b	453170 <_obstack_memory_used@@Base+0xc620>
  45304c:	ldr	x9, [x8, x20, lsl #3]
  453050:	cbz	x9, 453084 <_obstack_memory_used@@Base+0xc534>
  453054:	ldr	x2, [x9, #80]
  453058:	cbz	x24, 45308c <_obstack_memory_used@@Base+0xc53c>
  45305c:	ldr	x23, [x24, #80]
  453060:	mov	x0, sp
  453064:	mov	x1, x23
  453068:	bl	453210 <_obstack_memory_used@@Base+0xc6c0>
  45306c:	str	w0, [x21]
  453070:	cbnz	w0, 4531d8 <_obstack_memory_used@@Base+0xc688>
  453074:	ldr	x8, [x19, #72]
  453078:	cmp	x8, #0x0
  45307c:	b.gt	4530ac <_obstack_memory_used@@Base+0xc55c>
  453080:	b	4530e8 <_obstack_memory_used@@Base+0xc598>
  453084:	str	x24, [x8, x20, lsl #3]
  453088:	b	453170 <_obstack_memory_used@@Base+0xc620>
  45308c:	ldr	x8, [x2, #16]
  453090:	ldr	q0, [x2]
  453094:	mov	x23, xzr
  453098:	str	x8, [sp, #16]
  45309c:	mov	x8, x20
  4530a0:	str	q0, [sp]
  4530a4:	cmp	x8, #0x0
  4530a8:	b.le	4530e8 <_obstack_memory_used@@Base+0xc598>
  4530ac:	ldr	x10, [x19, #88]
  4530b0:	sub	x9, x8, #0x1
  4530b4:	cmp	x10, x9
  4530b8:	b.eq	4531e0 <_obstack_memory_used@@Base+0xc690>  // b.none
  4530bc:	ldr	w10, [x19, #144]
  4530c0:	cmp	w10, #0x2
  4530c4:	b.lt	4530f0 <_obstack_memory_used@@Base+0xc5a0>  // b.tstop
  4530c8:	ldr	x9, [x19, #16]
  4530cc:	sub	x9, x9, #0x4
  4530d0:	ldr	w24, [x9, x8, lsl #2]
  4530d4:	cmn	w24, #0x1
  4530d8:	b.ne	453118 <_obstack_memory_used@@Base+0xc5c8>  // b.any
  4530dc:	sub	x8, x8, #0x1
  4530e0:	cmp	x8, #0x0
  4530e4:	b.gt	4530d0 <_obstack_memory_used@@Base+0xc580>
  4530e8:	ldr	w3, [x19, #112]
  4530ec:	b	453148 <_obstack_memory_used@@Base+0xc5f8>
  4530f0:	ldr	x8, [x19, #8]
  4530f4:	ldrb	w8, [x8, x9]
  4530f8:	ldr	x9, [x19, #128]
  4530fc:	lsr	x10, x8, #3
  453100:	and	x10, x10, #0x18
  453104:	ldr	x9, [x9, x10]
  453108:	lsr	x9, x9, x8
  45310c:	tbz	w9, #0, 45313c <_obstack_memory_used@@Base+0xc5ec>
  453110:	mov	w3, #0x1                   	// #1
  453114:	b	453148 <_obstack_memory_used@@Base+0xc5f8>
  453118:	ldrb	w8, [x19, #142]
  45311c:	cbnz	w8, 4531f4 <_obstack_memory_used@@Base+0xc6a4>
  453120:	cmp	w24, #0xa
  453124:	b.ne	453144 <_obstack_memory_used@@Base+0xc5f4>  // b.any
  453128:	ldrb	w8, [x19, #141]
  45312c:	cmp	w8, #0x0
  453130:	cset	w8, ne  // ne = any
  453134:	lsl	w3, w8, #1
  453138:	b	453148 <_obstack_memory_used@@Base+0xc5f8>
  45313c:	cmp	w8, #0xa
  453140:	b.eq	453128 <_obstack_memory_used@@Base+0xc5d8>  // b.none
  453144:	mov	w3, wzr
  453148:	mov	x2, sp
  45314c:	mov	x0, x21
  453150:	mov	x1, x22
  453154:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  453158:	ldr	x8, [x19, #184]
  45315c:	mov	x24, x0
  453160:	str	x0, [x8, x20, lsl #3]
  453164:	cbz	x23, 453170 <_obstack_memory_used@@Base+0xc620>
  453168:	ldr	x0, [sp, #16]
  45316c:	bl	404700 <free@plt>
  453170:	cbz	x24, 4531bc <_obstack_memory_used@@Base+0xc66c>
  453174:	ldr	x8, [x22, #152]
  453178:	cbz	x8, 4531bc <_obstack_memory_used@@Base+0xc66c>
  45317c:	add	x22, x24, #0x8
  453180:	mov	x0, x19
  453184:	mov	x1, x22
  453188:	mov	x2, x20
  45318c:	bl	452484 <_obstack_memory_used@@Base+0xb934>
  453190:	str	w0, [x21]
  453194:	cbnz	w0, 4531d8 <_obstack_memory_used@@Base+0xc688>
  453198:	ldrb	w8, [x24, #104]
  45319c:	tbz	w8, #6, 4531bc <_obstack_memory_used@@Base+0xc66c>
  4531a0:	mov	x0, x19
  4531a4:	mov	x1, x22
  4531a8:	bl	452590 <_obstack_memory_used@@Base+0xba40>
  4531ac:	str	w0, [x21]
  4531b0:	cbnz	w0, 4531d8 <_obstack_memory_used@@Base+0xc688>
  4531b4:	ldr	x8, [x19, #184]
  4531b8:	ldr	x24, [x8, x20, lsl #3]
  4531bc:	mov	x0, x24
  4531c0:	ldp	x20, x19, [sp, #80]
  4531c4:	ldp	x22, x21, [sp, #64]
  4531c8:	ldp	x24, x23, [sp, #48]
  4531cc:	ldp	x29, x30, [sp, #32]
  4531d0:	add	sp, sp, #0x60
  4531d4:	ret
  4531d8:	mov	x24, xzr
  4531dc:	b	4531bc <_obstack_memory_used@@Base+0xc66c>
  4531e0:	ldr	w8, [x19, #160]
  4531e4:	mov	w9, #0xa                   	// #10
  4531e8:	and	w8, w8, #0x2
  4531ec:	eor	w3, w8, w9
  4531f0:	b	453148 <_obstack_memory_used@@Base+0xc5f8>
  4531f4:	mov	w0, w24
  4531f8:	bl	4048d0 <iswalnum@plt>
  4531fc:	cmp	w24, #0x5f
  453200:	mov	w3, #0x1                   	// #1
  453204:	b.eq	453148 <_obstack_memory_used@@Base+0xc5f8>  // b.none
  453208:	cbz	w0, 453120 <_obstack_memory_used@@Base+0xc5d0>
  45320c:	b	453148 <_obstack_memory_used@@Base+0xc5f8>
  453210:	stp	x29, x30, [sp, #-80]!
  453214:	stp	x20, x19, [sp, #64]
  453218:	mov	x20, x2
  45321c:	mov	x19, x0
  453220:	stp	x26, x25, [sp, #16]
  453224:	stp	x24, x23, [sp, #32]
  453228:	stp	x22, x21, [sp, #48]
  45322c:	mov	x29, sp
  453230:	cbz	x1, 45335c <_obstack_memory_used@@Base+0xc80c>
  453234:	ldr	x24, [x1, #8]
  453238:	mov	x21, x1
  45323c:	cbz	x20, 453324 <_obstack_memory_used@@Base+0xc7d4>
  453240:	cmp	x24, #0x1
  453244:	b.lt	453324 <_obstack_memory_used@@Base+0xc7d4>  // b.tstop
  453248:	ldr	x23, [x20, #8]
  45324c:	cmp	x23, #0x1
  453250:	b.lt	453324 <_obstack_memory_used@@Base+0xc7d4>  // b.tstop
  453254:	add	x8, x23, x24
  453258:	lsl	x0, x8, #3
  45325c:	str	x8, [x19]
  453260:	bl	404250 <malloc@plt>
  453264:	str	x0, [x19, #16]
  453268:	cbz	x0, 4533fc <_obstack_memory_used@@Base+0xc8ac>
  45326c:	mov	x25, xzr
  453270:	mov	x22, xzr
  453274:	mov	x11, xzr
  453278:	mov	x9, xzr
  45327c:	mov	w10, #0x1                   	// #1
  453280:	add	x8, x0, x22, lsl #3
  453284:	mov	x26, x11
  453288:	tbz	w10, #0, 4533b4 <_obstack_memory_used@@Base+0xc864>
  45328c:	ldr	x10, [x21, #16]
  453290:	ldr	x11, [x20, #16]
  453294:	ldr	x13, [x10, x9, lsl #3]
  453298:	ldr	x12, [x11, x26, lsl #3]
  45329c:	cmp	x13, x12
  4532a0:	b.le	4532c4 <_obstack_memory_used@@Base+0xc774>
  4532a4:	add	x26, x26, #0x1
  4532a8:	cmp	x23, x26
  4532ac:	add	x22, x22, #0x1
  4532b0:	cset	w10, gt
  4532b4:	cmp	x24, x9
  4532b8:	str	x12, [x8], #8
  4532bc:	b.gt	453288 <_obstack_memory_used@@Base+0xc738>
  4532c0:	b	4532f8 <_obstack_memory_used@@Base+0xc7a8>
  4532c4:	str	x13, [x8]
  4532c8:	ldr	x23, [x20, #8]
  4532cc:	ldr	x24, [x21, #8]
  4532d0:	cinc	x11, x26, eq  // eq = none
  4532d4:	add	x9, x9, #0x1
  4532d8:	cmp	x23, x11
  4532dc:	add	x22, x22, #0x1
  4532e0:	cset	w10, gt
  4532e4:	cmp	x24, x9
  4532e8:	sub	x25, x25, #0x1
  4532ec:	b.gt	453280 <_obstack_memory_used@@Base+0xc730>
  4532f0:	cmp	x13, x12
  4532f4:	cinc	x26, x26, eq  // eq = none
  4532f8:	cbz	w10, 4533d8 <_obstack_memory_used@@Base+0xc888>
  4532fc:	ldr	x8, [x20, #16]
  453300:	sub	x9, x23, x26
  453304:	add	x0, x0, x22, lsl #3
  453308:	lsl	x2, x9, #3
  45330c:	add	x1, x8, x26, lsl #3
  453310:	bl	403ec0 <memcpy@plt>
  453314:	ldr	x8, [x20, #8]
  453318:	sub	x9, x22, x26
  45331c:	add	x22, x9, x8
  453320:	b	4533d8 <_obstack_memory_used@@Base+0xc888>
  453324:	cmp	x24, #0x1
  453328:	b.lt	45335c <_obstack_memory_used@@Base+0xc80c>  // b.tstop
  45332c:	str	x24, [x19, #8]
  453330:	ldr	x20, [x21, #8]
  453334:	cmp	x20, #0x1
  453338:	b.lt	4533a4 <_obstack_memory_used@@Base+0xc854>  // b.tstop
  45333c:	lsl	x0, x24, #3
  453340:	str	x24, [x19]
  453344:	bl	404250 <malloc@plt>
  453348:	str	x0, [x19, #16]
  45334c:	cbz	x0, 4533f8 <_obstack_memory_used@@Base+0xc8a8>
  453350:	ldr	x1, [x21, #16]
  453354:	lsl	x2, x20, #3
  453358:	b	453398 <_obstack_memory_used@@Base+0xc848>
  45335c:	cbz	x20, 4533a4 <_obstack_memory_used@@Base+0xc854>
  453360:	ldr	x8, [x20, #8]
  453364:	cmp	x8, #0x1
  453368:	b.lt	4533a4 <_obstack_memory_used@@Base+0xc854>  // b.tstop
  45336c:	str	x8, [x19, #8]
  453370:	ldr	x21, [x20, #8]
  453374:	cmp	x21, #0x1
  453378:	b.lt	4533a4 <_obstack_memory_used@@Base+0xc854>  // b.tstop
  45337c:	lsl	x0, x8, #3
  453380:	str	x8, [x19]
  453384:	bl	404250 <malloc@plt>
  453388:	str	x0, [x19, #16]
  45338c:	cbz	x0, 4533f8 <_obstack_memory_used@@Base+0xc8a8>
  453390:	ldr	x1, [x20, #16]
  453394:	lsl	x2, x21, #3
  453398:	bl	403ec0 <memcpy@plt>
  45339c:	mov	w0, wzr
  4533a0:	b	4533e0 <_obstack_memory_used@@Base+0xc890>
  4533a4:	mov	w0, wzr
  4533a8:	stp	xzr, xzr, [x19]
  4533ac:	str	xzr, [x19, #16]
  4533b0:	b	4533e0 <_obstack_memory_used@@Base+0xc890>
  4533b4:	ldr	x10, [x21, #16]
  4533b8:	sub	x11, x24, x9
  4533bc:	lsl	x2, x11, #3
  4533c0:	mov	x0, x8
  4533c4:	add	x1, x10, x9, lsl #3
  4533c8:	bl	403ec0 <memcpy@plt>
  4533cc:	ldr	x8, [x21, #8]
  4533d0:	add	x8, x8, x25
  4533d4:	add	x22, x8, x22
  4533d8:	mov	w0, wzr
  4533dc:	str	x22, [x19, #8]
  4533e0:	ldp	x20, x19, [sp, #64]
  4533e4:	ldp	x22, x21, [sp, #48]
  4533e8:	ldp	x24, x23, [sp, #32]
  4533ec:	ldp	x26, x25, [sp, #16]
  4533f0:	ldp	x29, x30, [sp], #80
  4533f4:	ret
  4533f8:	stp	xzr, xzr, [x19]
  4533fc:	mov	w0, #0xc                   	// #12
  453400:	b	4533e0 <_obstack_memory_used@@Base+0xc890>
  453404:	stp	x29, x30, [sp, #-80]!
  453408:	stp	x26, x25, [sp, #16]
  45340c:	stp	x24, x23, [sp, #32]
  453410:	stp	x22, x21, [sp, #48]
  453414:	stp	x20, x19, [sp, #64]
  453418:	mov	x22, x2
  45341c:	mov	x23, x3
  453420:	ldr	x2, [x2]
  453424:	ldr	x3, [x22, #8]
  453428:	mov	x20, x4
  45342c:	mov	x21, x1
  453430:	add	x1, x22, #0x10
  453434:	mov	w6, #0x8                   	// #8
  453438:	mov	x4, x23
  45343c:	mov	x5, x20
  453440:	mov	x29, sp
  453444:	mov	x19, x0
  453448:	bl	4535bc <_obstack_memory_used@@Base+0xca6c>
  45344c:	cbz	w0, 453468 <_obstack_memory_used@@Base+0xc918>
  453450:	ldp	x20, x19, [sp, #64]
  453454:	ldp	x22, x21, [sp, #48]
  453458:	ldp	x24, x23, [sp, #32]
  45345c:	ldp	x26, x25, [sp, #16]
  453460:	ldp	x29, x30, [sp], #80
  453464:	ret
  453468:	ldp	x8, x9, [x19, #200]
  45346c:	ldr	x25, [x21]
  453470:	ldr	x24, [x22, #8]
  453474:	cmp	x8, x9
  453478:	b.lt	4534bc <_obstack_memory_used@@Base+0xc96c>  // b.tstop
  45347c:	ldr	x0, [x19, #216]
  453480:	add	x8, x9, x9, lsl #2
  453484:	lsl	x1, x8, #4
  453488:	bl	404490 <realloc@plt>
  45348c:	cbz	x0, 4535ac <_obstack_memory_used@@Base+0xca5c>
  453490:	ldp	x8, x26, [x19, #200]
  453494:	mov	w9, #0x28                  	// #40
  453498:	str	x0, [x19, #216]
  45349c:	mov	w1, wzr
  4534a0:	madd	x0, x8, x9, x0
  4534a4:	add	x8, x26, x26, lsl #2
  4534a8:	lsl	x2, x8, #3
  4534ac:	bl	404360 <memset@plt>
  4534b0:	ldr	x8, [x19, #200]
  4534b4:	lsl	x9, x26, #1
  4534b8:	str	x9, [x19, #208]
  4534bc:	ldr	x9, [x19, #216]
  4534c0:	subs	x10, x8, #0x1
  4534c4:	b.lt	4534ec <_obstack_memory_used@@Base+0xc99c>  // b.tstop
  4534c8:	mov	w11, #0x28                  	// #40
  4534cc:	madd	x11, x10, x11, x9
  4534d0:	ldr	x11, [x11, #8]
  4534d4:	cmp	x11, x20
  4534d8:	b.ne	4534ec <_obstack_memory_used@@Base+0xc99c>  // b.any
  4534dc:	mov	w11, #0x28                  	// #40
  4534e0:	madd	x10, x10, x11, x9
  4534e4:	mov	w11, #0x1                   	// #1
  4534e8:	strb	w11, [x10, #32]
  4534ec:	mov	w11, #0x28                  	// #40
  4534f0:	subs	x10, x24, x25
  4534f4:	add	x12, x8, #0x1
  4534f8:	madd	x8, x8, x11, x9
  4534fc:	csetm	w9, eq  // eq = none
  453500:	stp	x23, x20, [x8]
  453504:	stp	x25, x24, [x8, #16]
  453508:	strh	w9, [x8, #34]
  45350c:	str	x12, [x19, #200]
  453510:	strb	wzr, [x8, #32]
  453514:	ldrsw	x8, [x19, #224]
  453518:	cmp	x10, x8
  45351c:	b.le	453524 <_obstack_memory_used@@Base+0xc9d4>
  453520:	str	w10, [x19, #224]
  453524:	ldr	x9, [x22, #8]
  453528:	ldr	x10, [x21]
  45352c:	ldr	x8, [x19, #64]
  453530:	ldr	x21, [x19, #192]
  453534:	add	x9, x9, x20
  453538:	sub	x20, x9, x10
  45353c:	cmp	x8, x20
  453540:	b.gt	453550 <_obstack_memory_used@@Base+0xca00>
  453544:	ldr	x9, [x19, #88]
  453548:	cmp	x8, x9
  45354c:	b.lt	453568 <_obstack_memory_used@@Base+0xca18>  // b.tstop
  453550:	ldr	x8, [x19, #48]
  453554:	cmp	x8, x20
  453558:	b.gt	453578 <_obstack_memory_used@@Base+0xca28>
  45355c:	ldr	x9, [x19, #88]
  453560:	cmp	x8, x9
  453564:	b.ge	453578 <_obstack_memory_used@@Base+0xca28>  // b.tcont
  453568:	add	w1, w20, #0x1
  45356c:	mov	x0, x19
  453570:	bl	452e28 <_obstack_memory_used@@Base+0xc2d8>
  453574:	cbnz	w0, 453450 <_obstack_memory_used@@Base+0xc900>
  453578:	subs	x8, x20, x21
  45357c:	b.le	4535a4 <_obstack_memory_used@@Base+0xca54>
  453580:	ldr	x9, [x19, #184]
  453584:	lsl	x2, x8, #3
  453588:	mov	w1, wzr
  45358c:	add	x9, x9, x21, lsl #3
  453590:	add	x0, x9, #0x8
  453594:	bl	404360 <memset@plt>
  453598:	mov	w0, wzr
  45359c:	str	x20, [x19, #192]
  4535a0:	b	453450 <_obstack_memory_used@@Base+0xc900>
  4535a4:	mov	w0, wzr
  4535a8:	b	453450 <_obstack_memory_used@@Base+0xc900>
  4535ac:	ldr	x0, [x19, #216]
  4535b0:	bl	404700 <free@plt>
  4535b4:	mov	w0, #0xc                   	// #12
  4535b8:	b	453450 <_obstack_memory_used@@Base+0xc900>
  4535bc:	sub	sp, sp, #0x100
  4535c0:	stp	x29, x30, [sp, #160]
  4535c4:	stp	x28, x27, [sp, #176]
  4535c8:	stp	x26, x25, [sp, #192]
  4535cc:	stp	x24, x23, [sp, #208]
  4535d0:	stp	x22, x21, [sp, #224]
  4535d4:	stp	x20, x19, [sp, #240]
  4535d8:	ldr	x8, [x0, #152]
  4535dc:	add	x29, sp, #0xa0
  4535e0:	stur	wzr, [x29, #-36]
  4535e4:	lsl	x10, x2, #4
  4535e8:	str	x8, [sp, #48]
  4535ec:	ldr	x8, [x8]
  4535f0:	ldrsw	x9, [x0, #224]
  4535f4:	ldr	x21, [x1, #8]
  4535f8:	mov	x24, x5
  4535fc:	ldr	x8, [x8, x10]
  453600:	mov	x25, x4
  453604:	mov	x19, x2
  453608:	mov	x28, x1
  45360c:	str	x8, [sp, #56]
  453610:	add	x8, x9, x5
  453614:	mov	x20, x0
  453618:	cmp	x21, x8
  45361c:	mov	x22, x3
  453620:	str	w6, [sp, #44]
  453624:	str	x5, [sp, #32]
  453628:	b.le	453db4 <_obstack_memory_used@@Base+0xd264>
  45362c:	ldr	x8, [x28]
  453630:	ldr	x11, [x20, #184]
  453634:	ldr	x9, [x28, #16]
  453638:	ldr	x10, [x20, #72]
  45363c:	cmp	x8, #0x0
  453640:	csel	x26, x22, x8, eq  // eq = none
  453644:	cmp	x26, #0x0
  453648:	str	x9, [x20, #184]
  45364c:	str	x26, [x20, #72]
  453650:	str	x10, [sp, #16]
  453654:	stp	x25, x11, [sp]
  453658:	b.le	45369c <_obstack_memory_used@@Base+0xcb4c>
  45365c:	ldr	x9, [x20, #88]
  453660:	sub	x8, x26, #0x1
  453664:	cmp	x9, x8
  453668:	b.eq	453e00 <_obstack_memory_used@@Base+0xd2b0>  // b.none
  45366c:	ldr	w9, [x20, #144]
  453670:	cmp	w9, #0x2
  453674:	b.lt	4536a4 <_obstack_memory_used@@Base+0xcb54>  // b.tstop
  453678:	ldr	x8, [x20, #16]
  45367c:	mov	x9, x26
  453680:	sub	x8, x8, #0x4
  453684:	ldr	w23, [x8, x9, lsl #2]
  453688:	cmn	w23, #0x1
  45368c:	b.ne	4536cc <_obstack_memory_used@@Base+0xcb7c>  // b.any
  453690:	sub	x9, x9, #0x1
  453694:	cmp	x9, #0x0
  453698:	b.gt	453684 <_obstack_memory_used@@Base+0xcb34>
  45369c:	ldr	w27, [x20, #112]
  4536a0:	b	4536fc <_obstack_memory_used@@Base+0xcbac>
  4536a4:	ldr	x9, [x20, #8]
  4536a8:	ldrb	w8, [x9, x8]
  4536ac:	ldr	x9, [x20, #128]
  4536b0:	lsr	x10, x8, #3
  4536b4:	and	x10, x10, #0x18
  4536b8:	ldr	x9, [x9, x10]
  4536bc:	lsr	x9, x9, x8
  4536c0:	tbz	w9, #0, 4536f0 <_obstack_memory_used@@Base+0xcba0>
  4536c4:	mov	w27, #0x1                   	// #1
  4536c8:	b	4536fc <_obstack_memory_used@@Base+0xcbac>
  4536cc:	ldrb	w8, [x20, #142]
  4536d0:	cbnz	w8, 453e34 <_obstack_memory_used@@Base+0xd2e4>
  4536d4:	cmp	w23, #0xa
  4536d8:	b.ne	4536f8 <_obstack_memory_used@@Base+0xcba8>  // b.any
  4536dc:	ldrb	w8, [x20, #141]
  4536e0:	cmp	w8, #0x0
  4536e4:	cset	w8, ne  // ne = any
  4536e8:	lsl	w27, w8, #1
  4536ec:	b	4536fc <_obstack_memory_used@@Base+0xcbac>
  4536f0:	cmp	w8, #0xa
  4536f4:	b.eq	4536dc <_obstack_memory_used@@Base+0xcb8c>  // b.none
  4536f8:	mov	w27, wzr
  4536fc:	cmp	x26, x22
  453700:	str	x28, [sp, #24]
  453704:	b.ne	4537b0 <_obstack_memory_used@@Base+0xcc60>  // b.any
  453708:	mov	w8, #0x1                   	// #1
  45370c:	dup	v0.2d, x8
  453710:	mov	w0, #0x8                   	// #8
  453714:	stur	q0, [x29, #-64]
  453718:	bl	404250 <malloc@plt>
  45371c:	ldr	w23, [sp, #44]
  453720:	ldr	x22, [sp, #48]
  453724:	stur	x0, [x29, #-48]
  453728:	cbz	x0, 453e24 <_obstack_memory_used@@Base+0xd2d4>
  45372c:	ldr	x2, [sp, #56]
  453730:	str	x19, [x0]
  453734:	sub	x1, x29, #0x40
  453738:	mov	x0, x22
  45373c:	mov	w3, w23
  453740:	stur	wzr, [x29, #-36]
  453744:	bl	453e58 <_obstack_memory_used@@Base+0xd308>
  453748:	stur	w0, [x29, #-36]
  45374c:	cbnz	w0, 453e14 <_obstack_memory_used@@Base+0xd2c4>
  453750:	ldur	x21, [x29, #-56]
  453754:	cbz	x21, 453778 <_obstack_memory_used@@Base+0xcc28>
  453758:	ldr	x3, [sp, #56]
  45375c:	sub	x1, x29, #0x40
  453760:	mov	x0, x20
  453764:	mov	x2, x26
  453768:	mov	w4, w23
  45376c:	bl	453f9c <_obstack_memory_used@@Base+0xd44c>
  453770:	stur	w0, [x29, #-36]
  453774:	cbnz	w0, 453e14 <_obstack_memory_used@@Base+0xd2c4>
  453778:	sub	x0, x29, #0x24
  45377c:	sub	x2, x29, #0x40
  453780:	mov	x1, x22
  453784:	mov	w3, w27
  453788:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  45378c:	mov	x28, x0
  453790:	cbnz	x0, 45379c <_obstack_memory_used@@Base+0xcc4c>
  453794:	ldur	w8, [x29, #-36]
  453798:	cbnz	w8, 453d80 <_obstack_memory_used@@Base+0xd230>
  45379c:	ldr	x8, [x20, #184]
  4537a0:	str	x28, [x8, x26, lsl #3]
  4537a4:	cmp	x26, x24
  4537a8:	b.lt	453850 <_obstack_memory_used@@Base+0xcd00>  // b.tstop
  4537ac:	b	453cbc <_obstack_memory_used@@Base+0xd16c>
  4537b0:	ldr	x8, [x20, #184]
  4537b4:	ldr	w23, [sp, #44]
  4537b8:	ldr	x22, [sp, #48]
  4537bc:	ldr	x28, [x8, x26, lsl #3]
  4537c0:	cbz	x28, 4537e4 <_obstack_memory_used@@Base+0xcc94>
  4537c4:	ldrb	w8, [x28, #104]
  4537c8:	tbnz	w8, #6, 4537f8 <_obstack_memory_used@@Base+0xcca8>
  4537cc:	mov	x21, xzr
  4537d0:	stp	xzr, xzr, [x29, #-64]
  4537d4:	stur	xzr, [x29, #-48]
  4537d8:	ldrb	w8, [x28, #104]
  4537dc:	tbnz	w8, #6, 453754 <_obstack_memory_used@@Base+0xcc04>
  4537e0:	b	453848 <_obstack_memory_used@@Base+0xccf8>
  4537e4:	stp	xzr, xzr, [x29, #-64]
  4537e8:	stur	xzr, [x29, #-48]
  4537ec:	cmp	x26, x24
  4537f0:	b.lt	453850 <_obstack_memory_used@@Base+0xcd00>  // b.tstop
  4537f4:	b	453cbc <_obstack_memory_used@@Base+0xd16c>
  4537f8:	ldr	x21, [x28, #16]
  4537fc:	cmp	x21, #0x1
  453800:	stur	x21, [x29, #-56]
  453804:	b.lt	453830 <_obstack_memory_used@@Base+0xcce0>  // b.tstop
  453808:	lsl	x19, x21, #3
  45380c:	mov	x0, x19
  453810:	stur	x21, [x29, #-64]
  453814:	bl	404250 <malloc@plt>
  453818:	stur	x0, [x29, #-48]
  45381c:	cbz	x0, 453e24 <_obstack_memory_used@@Base+0xd2d4>
  453820:	ldr	x1, [x28, #24]
  453824:	mov	x2, x19
  453828:	bl	403ec0 <memcpy@plt>
  45382c:	b	45383c <_obstack_memory_used@@Base+0xccec>
  453830:	mov	x21, xzr
  453834:	stp	xzr, xzr, [x29, #-64]
  453838:	stur	xzr, [x29, #-48]
  45383c:	stur	wzr, [x29, #-36]
  453840:	ldrb	w8, [x28, #104]
  453844:	tbnz	w8, #6, 453754 <_obstack_memory_used@@Base+0xcc04>
  453848:	cmp	x26, x24
  45384c:	b.ge	453cbc <_obstack_memory_used@@Base+0xd16c>  // b.tcont
  453850:	mov	w8, #0x1                   	// #1
  453854:	mov	x9, xzr
  453858:	dup	v0.2d, x8
  45385c:	str	q0, [sp, #80]
  453860:	b	453880 <_obstack_memory_used@@Base+0xcd30>
  453864:	ldp	x9, x26, [sp, #64]
  453868:	ldr	x8, [x20, #184]
  45386c:	cmp	x28, #0x0
  453870:	csinc	x9, xzr, x9, ne  // ne = any
  453874:	cmp	x26, x24
  453878:	str	x28, [x8, x26, lsl #3]
  45387c:	b.eq	453cb8 <_obstack_memory_used@@Base+0xd168>  // b.none
  453880:	ldrsw	x8, [x20, #224]
  453884:	cmp	x9, x8
  453888:	b.gt	453cbc <_obstack_memory_used@@Base+0xd16c>
  45388c:	stur	xzr, [x29, #-56]
  453890:	ldr	x8, [x20, #184]
  453894:	str	x9, [sp, #64]
  453898:	add	x9, x26, #0x1
  45389c:	str	x9, [sp, #72]
  4538a0:	ldr	x8, [x8, x9, lsl #3]
  4538a4:	cbz	x8, 4538bc <_obstack_memory_used@@Base+0xcd6c>
  4538a8:	add	x1, x8, #0x8
  4538ac:	sub	x0, x29, #0x40
  4538b0:	bl	450858 <_obstack_memory_used@@Base+0x9d08>
  4538b4:	stur	w0, [x29, #-36]
  4538b8:	cbnz	w0, 453d80 <_obstack_memory_used@@Base+0xd230>
  4538bc:	cbz	x28, 453b84 <_obstack_memory_used@@Base+0xd034>
  4538c0:	ldr	x22, [x20, #152]
  4538c4:	stur	wzr, [x29, #-4]
  4538c8:	stp	xzr, xzr, [x29, #-32]
  4538cc:	stur	xzr, [x29, #-16]
  4538d0:	ldr	x8, [x28, #40]
  4538d4:	cmp	x8, #0x1
  4538d8:	b.lt	453b74 <_obstack_memory_used@@Base+0xd024>  // b.tstop
  4538dc:	mov	x24, xzr
  4538e0:	b	453910 <_obstack_memory_used@@Base+0xcdc0>
  4538e4:	ldur	x8, [x29, #-56]
  4538e8:	cbnz	x8, 453a3c <_obstack_memory_used@@Base+0xceec>
  4538ec:	ldur	x8, [x29, #-48]
  4538f0:	str	x19, [x8]
  4538f4:	ldur	x8, [x29, #-56]
  4538f8:	add	x8, x8, #0x1
  4538fc:	stur	x8, [x29, #-56]
  453900:	ldr	x8, [x28, #40]
  453904:	add	x24, x24, #0x1
  453908:	cmp	x24, x8
  45390c:	b.ge	453b64 <_obstack_memory_used@@Base+0xd014>  // b.tcont
  453910:	ldr	x8, [x28, #48]
  453914:	ldr	x19, [x8, x24, lsl #3]
  453918:	ldr	x8, [x22]
  45391c:	add	x9, x8, x19, lsl #4
  453920:	ldrb	w9, [x9, #10]
  453924:	tbz	w9, #4, 4539f8 <_obstack_memory_used@@Base+0xcea8>
  453928:	mov	x0, x22
  45392c:	mov	x1, x19
  453930:	mov	x2, x20
  453934:	mov	x3, x26
  453938:	bl	454830 <_obstack_memory_used@@Base+0xdce0>
  45393c:	mov	w23, w0
  453940:	cmp	w0, #0x2
  453944:	b.lt	4539f0 <_obstack_memory_used@@Base+0xcea0>  // b.tstop
  453948:	ldr	x8, [x20, #184]
  45394c:	ldr	x9, [x22, #24]
  453950:	add	x27, x26, w23, uxtw
  453954:	ldr	x8, [x8, x27, lsl #3]
  453958:	ldr	x21, [x9, x19, lsl #3]
  45395c:	stur	xzr, [x29, #-24]
  453960:	cbz	x8, 453978 <_obstack_memory_used@@Base+0xce28>
  453964:	add	x1, x8, #0x8
  453968:	sub	x0, x29, #0x20
  45396c:	bl	450858 <_obstack_memory_used@@Base+0x9d08>
  453970:	stur	w0, [x29, #-4]
  453974:	cbnz	w0, 453d88 <_obstack_memory_used@@Base+0xd238>
  453978:	ldur	x9, [x29, #-32]
  45397c:	cbz	x9, 4539a0 <_obstack_memory_used@@Base+0xce50>
  453980:	ldur	x8, [x29, #-24]
  453984:	cbnz	x8, 453ad0 <_obstack_memory_used@@Base+0xcf80>
  453988:	ldur	x8, [x29, #-16]
  45398c:	str	x21, [x8]
  453990:	ldur	x8, [x29, #-24]
  453994:	add	x8, x8, #0x1
  453998:	stur	x8, [x29, #-24]
  45399c:	b	4539c0 <_obstack_memory_used@@Base+0xce70>
  4539a0:	mov	w8, #0x1                   	// #1
  4539a4:	dup	v0.2d, x8
  4539a8:	mov	w0, #0x8                   	// #8
  4539ac:	stur	q0, [x29, #-32]
  4539b0:	bl	404250 <malloc@plt>
  4539b4:	stur	x0, [x29, #-16]
  4539b8:	cbz	x0, 453da8 <_obstack_memory_used@@Base+0xd258>
  4539bc:	str	x21, [x0]
  4539c0:	sub	x0, x29, #0x4
  4539c4:	sub	x2, x29, #0x20
  4539c8:	mov	x1, x22
  4539cc:	bl	4545a8 <_obstack_memory_used@@Base+0xda58>
  4539d0:	ldr	x8, [x20, #184]
  4539d4:	lsl	x9, x27, #3
  4539d8:	str	x0, [x8, x9]
  4539dc:	ldr	x8, [x20, #184]
  4539e0:	ldr	x8, [x8, x9]
  4539e4:	cbnz	x8, 4539f0 <_obstack_memory_used@@Base+0xcea0>
  4539e8:	ldur	w25, [x29, #-4]
  4539ec:	cbnz	w25, 453d8c <_obstack_memory_used@@Base+0xd23c>
  4539f0:	cbnz	w23, 453a0c <_obstack_memory_used@@Base+0xcebc>
  4539f4:	ldr	x8, [x22]
  4539f8:	add	x1, x8, x19, lsl #4
  4539fc:	mov	x0, x20
  453a00:	mov	x2, x26
  453a04:	bl	454b48 <_obstack_memory_used@@Base+0xdff8>
  453a08:	tbz	w0, #0, 453900 <_obstack_memory_used@@Base+0xcdb0>
  453a0c:	ldr	x8, [x22, #24]
  453a10:	ldur	x9, [x29, #-64]
  453a14:	ldr	x19, [x8, x19, lsl #3]
  453a18:	cbnz	x9, 4538e4 <_obstack_memory_used@@Base+0xcd94>
  453a1c:	ldr	q0, [sp, #80]
  453a20:	mov	w0, #0x8                   	// #8
  453a24:	stur	q0, [x29, #-64]
  453a28:	bl	404250 <malloc@plt>
  453a2c:	stur	x0, [x29, #-48]
  453a30:	cbz	x0, 453d70 <_obstack_memory_used@@Base+0xd220>
  453a34:	str	x19, [x0]
  453a38:	b	453900 <_obstack_memory_used@@Base+0xcdb0>
  453a3c:	cmp	x9, x8
  453a40:	b.ne	453a68 <_obstack_memory_used@@Base+0xcf18>  // b.any
  453a44:	ldur	x0, [x29, #-48]
  453a48:	lsl	x8, x9, #1
  453a4c:	lsl	x1, x9, #4
  453a50:	stur	x8, [x29, #-64]
  453a54:	bl	404490 <realloc@plt>
  453a58:	cbz	x0, 453d74 <_obstack_memory_used@@Base+0xd224>
  453a5c:	ldur	x8, [x29, #-56]
  453a60:	stur	x0, [x29, #-48]
  453a64:	b	453a6c <_obstack_memory_used@@Base+0xcf1c>
  453a68:	ldur	x0, [x29, #-48]
  453a6c:	ldr	x9, [x0]
  453a70:	cmp	x9, x19
  453a74:	b.le	453aa0 <_obstack_memory_used@@Base+0xcf50>
  453a78:	cmp	x8, #0x1
  453a7c:	b.lt	453ac8 <_obstack_memory_used@@Base+0xcf78>  // b.tstop
  453a80:	mov	x9, x8
  453a84:	add	x10, x0, x9, lsl #3
  453a88:	ldur	x11, [x10, #-8]
  453a8c:	subs	x8, x9, #0x1
  453a90:	mov	x9, x8
  453a94:	str	x11, [x10]
  453a98:	b.gt	453a84 <_obstack_memory_used@@Base+0xcf34>
  453a9c:	b	453ac8 <_obstack_memory_used@@Base+0xcf78>
  453aa0:	add	x9, x0, x8, lsl #3
  453aa4:	ldur	x9, [x9, #-8]
  453aa8:	cmp	x9, x19
  453aac:	b.le	453ac8 <_obstack_memory_used@@Base+0xcf78>
  453ab0:	add	x10, x0, x8, lsl #3
  453ab4:	str	x9, [x10]
  453ab8:	ldur	x9, [x10, #-16]
  453abc:	sub	x8, x8, #0x1
  453ac0:	cmp	x9, x19
  453ac4:	b.gt	453ab0 <_obstack_memory_used@@Base+0xcf60>
  453ac8:	str	x19, [x0, x8, lsl #3]
  453acc:	b	4538f4 <_obstack_memory_used@@Base+0xcda4>
  453ad0:	cmp	x9, x8
  453ad4:	b.ne	453afc <_obstack_memory_used@@Base+0xcfac>  // b.any
  453ad8:	ldur	x0, [x29, #-16]
  453adc:	lsl	x8, x9, #1
  453ae0:	lsl	x1, x9, #4
  453ae4:	stur	x8, [x29, #-32]
  453ae8:	bl	404490 <realloc@plt>
  453aec:	cbz	x0, 453d74 <_obstack_memory_used@@Base+0xd224>
  453af0:	ldur	x8, [x29, #-24]
  453af4:	stur	x0, [x29, #-16]
  453af8:	b	453b00 <_obstack_memory_used@@Base+0xcfb0>
  453afc:	ldur	x0, [x29, #-16]
  453b00:	ldr	x9, [x0]
  453b04:	cmp	x9, x21
  453b08:	b.le	453b34 <_obstack_memory_used@@Base+0xcfe4>
  453b0c:	cmp	x8, #0x1
  453b10:	b.lt	453b5c <_obstack_memory_used@@Base+0xd00c>  // b.tstop
  453b14:	mov	x9, x8
  453b18:	add	x10, x0, x9, lsl #3
  453b1c:	ldur	x11, [x10, #-8]
  453b20:	subs	x8, x9, #0x1
  453b24:	mov	x9, x8
  453b28:	str	x11, [x10]
  453b2c:	b.gt	453b18 <_obstack_memory_used@@Base+0xcfc8>
  453b30:	b	453b5c <_obstack_memory_used@@Base+0xd00c>
  453b34:	add	x9, x0, x8, lsl #3
  453b38:	ldur	x9, [x9, #-8]
  453b3c:	cmp	x9, x21
  453b40:	b.le	453b5c <_obstack_memory_used@@Base+0xd00c>
  453b44:	add	x10, x0, x8, lsl #3
  453b48:	str	x9, [x10]
  453b4c:	ldur	x9, [x10, #-16]
  453b50:	sub	x8, x8, #0x1
  453b54:	cmp	x9, x21
  453b58:	b.gt	453b44 <_obstack_memory_used@@Base+0xcff4>
  453b5c:	str	x21, [x0, x8, lsl #3]
  453b60:	b	453990 <_obstack_memory_used@@Base+0xce40>
  453b64:	ldur	x0, [x29, #-16]
  453b68:	ldr	x24, [sp, #32]
  453b6c:	ldr	w23, [sp, #44]
  453b70:	b	453b78 <_obstack_memory_used@@Base+0xd028>
  453b74:	mov	x0, xzr
  453b78:	bl	404700 <free@plt>
  453b7c:	ldr	x22, [sp, #48]
  453b80:	stur	wzr, [x29, #-36]
  453b84:	ldur	x8, [x29, #-56]
  453b88:	ldr	x19, [sp, #56]
  453b8c:	cbz	x8, 453bcc <_obstack_memory_used@@Base+0xd07c>
  453b90:	sub	x1, x29, #0x40
  453b94:	mov	x0, x22
  453b98:	mov	x2, x19
  453b9c:	mov	w3, w23
  453ba0:	bl	453e58 <_obstack_memory_used@@Base+0xd308>
  453ba4:	stur	w0, [x29, #-36]
  453ba8:	cbnz	w0, 453d80 <_obstack_memory_used@@Base+0xd230>
  453bac:	ldr	x2, [sp, #72]
  453bb0:	sub	x1, x29, #0x40
  453bb4:	mov	x0, x20
  453bb8:	mov	x3, x19
  453bbc:	mov	w4, w23
  453bc0:	bl	453f9c <_obstack_memory_used@@Base+0xd44c>
  453bc4:	stur	w0, [x29, #-36]
  453bc8:	cbnz	w0, 453d80 <_obstack_memory_used@@Base+0xd230>
  453bcc:	tbnz	x26, #63, 453c04 <_obstack_memory_used@@Base+0xd0b4>
  453bd0:	ldr	x8, [x20, #88]
  453bd4:	cmp	x8, x26
  453bd8:	b.eq	453c88 <_obstack_memory_used@@Base+0xd138>  // b.none
  453bdc:	ldr	w8, [x20, #144]
  453be0:	cmp	w8, #0x2
  453be4:	b.lt	453c0c <_obstack_memory_used@@Base+0xd0bc>  // b.tstop
  453be8:	ldr	x8, [x20, #16]
  453bec:	ldr	w19, [x8, x26, lsl #2]
  453bf0:	cmn	w19, #0x1
  453bf4:	b.ne	453c34 <_obstack_memory_used@@Base+0xd0e4>  // b.any
  453bf8:	cmp	x26, #0x0
  453bfc:	sub	x26, x26, #0x1
  453c00:	b.gt	453bec <_obstack_memory_used@@Base+0xd09c>
  453c04:	ldr	w3, [x20, #112]
  453c08:	b	453c64 <_obstack_memory_used@@Base+0xd114>
  453c0c:	ldr	x8, [x20, #8]
  453c10:	ldr	x9, [x20, #128]
  453c14:	ldrb	w8, [x8, x26]
  453c18:	lsr	x10, x8, #3
  453c1c:	and	x10, x10, #0x18
  453c20:	ldr	x9, [x9, x10]
  453c24:	lsr	x9, x9, x8
  453c28:	tbz	w9, #0, 453c58 <_obstack_memory_used@@Base+0xd108>
  453c2c:	mov	w3, #0x1                   	// #1
  453c30:	b	453c64 <_obstack_memory_used@@Base+0xd114>
  453c34:	ldrb	w8, [x20, #142]
  453c38:	cbnz	w8, 453c9c <_obstack_memory_used@@Base+0xd14c>
  453c3c:	cmp	w19, #0xa
  453c40:	b.ne	453c60 <_obstack_memory_used@@Base+0xd110>  // b.any
  453c44:	ldrb	w8, [x20, #141]
  453c48:	cmp	w8, #0x0
  453c4c:	cset	w8, ne  // ne = any
  453c50:	lsl	w3, w8, #1
  453c54:	b	453c64 <_obstack_memory_used@@Base+0xd114>
  453c58:	cmp	w8, #0xa
  453c5c:	b.eq	453c44 <_obstack_memory_used@@Base+0xd0f4>  // b.none
  453c60:	mov	w3, wzr
  453c64:	sub	x0, x29, #0x24
  453c68:	sub	x2, x29, #0x40
  453c6c:	mov	x1, x22
  453c70:	bl	450aec <_obstack_memory_used@@Base+0x9f9c>
  453c74:	mov	x28, x0
  453c78:	cbnz	x0, 453864 <_obstack_memory_used@@Base+0xcd14>
  453c7c:	ldur	w8, [x29, #-36]
  453c80:	cbz	w8, 453864 <_obstack_memory_used@@Base+0xcd14>
  453c84:	b	453d80 <_obstack_memory_used@@Base+0xd230>
  453c88:	ldr	w8, [x20, #160]
  453c8c:	mov	w9, #0xa                   	// #10
  453c90:	and	w8, w8, #0x2
  453c94:	eor	w3, w8, w9
  453c98:	b	453c64 <_obstack_memory_used@@Base+0xd114>
  453c9c:	mov	w0, w19
  453ca0:	bl	4048d0 <iswalnum@plt>
  453ca4:	cmp	w19, #0x5f
  453ca8:	mov	w3, #0x1                   	// #1
  453cac:	b.eq	453c64 <_obstack_memory_used@@Base+0xd114>  // b.none
  453cb0:	cbz	w0, 453c3c <_obstack_memory_used@@Base+0xd0ec>
  453cb4:	b	453c64 <_obstack_memory_used@@Base+0xd114>
  453cb8:	mov	x26, x24
  453cbc:	ldur	x0, [x29, #-48]
  453cc0:	bl	404700 <free@plt>
  453cc4:	ldr	x8, [x20, #184]
  453cc8:	ldr	x9, [x8, x24, lsl #3]
  453ccc:	ldp	x10, x8, [sp, #16]
  453cd0:	cmp	x9, #0x0
  453cd4:	str	x26, [x8]
  453cd8:	ldr	x8, [sp, #8]
  453cdc:	str	x10, [x20, #72]
  453ce0:	str	x8, [x20, #184]
  453ce4:	add	x8, x9, #0x8
  453ce8:	csel	x8, xzr, x8, eq  // eq = none
  453cec:	cbz	x9, 453d48 <_obstack_memory_used@@Base+0xd1f8>
  453cf0:	ldr	x9, [x8, #8]
  453cf4:	subs	x9, x9, #0x1
  453cf8:	b.lt	453d48 <_obstack_memory_used@@Base+0xd1f8>  // b.tstop
  453cfc:	ldr	x8, [x8, #16]
  453d00:	mov	x10, xzr
  453d04:	b.eq	453d30 <_obstack_memory_used@@Base+0xd1e0>  // b.none
  453d08:	ldr	x13, [sp]
  453d0c:	add	x11, x10, x9
  453d10:	lsr	x11, x11, #1
  453d14:	ldr	x12, [x8, x11, lsl #3]
  453d18:	cmp	x12, x13
  453d1c:	csinc	x10, x10, x11, ge  // ge = tcont
  453d20:	csel	x9, x9, x11, lt  // lt = tstop
  453d24:	cmp	x10, x9
  453d28:	b.cc	453d0c <_obstack_memory_used@@Base+0xd1bc>  // b.lo, b.ul, b.last
  453d2c:	b	453d34 <_obstack_memory_used@@Base+0xd1e4>
  453d30:	ldr	x13, [sp]
  453d34:	ldr	x8, [x8, x10, lsl #3]
  453d38:	cmp	x8, x13
  453d3c:	b.ne	453d48 <_obstack_memory_used@@Base+0xd1f8>  // b.any
  453d40:	mov	w19, wzr
  453d44:	b	453d4c <_obstack_memory_used@@Base+0xd1fc>
  453d48:	mov	w19, #0x1                   	// #1
  453d4c:	mov	w0, w19
  453d50:	ldp	x20, x19, [sp, #240]
  453d54:	ldp	x22, x21, [sp, #224]
  453d58:	ldp	x24, x23, [sp, #208]
  453d5c:	ldp	x26, x25, [sp, #192]
  453d60:	ldp	x28, x27, [sp, #176]
  453d64:	ldp	x29, x30, [sp, #160]
  453d68:	add	sp, sp, #0x100
  453d6c:	ret
  453d70:	stp	xzr, xzr, [x29, #-64]
  453d74:	ldur	x0, [x29, #-16]
  453d78:	mov	w25, #0xc                   	// #12
  453d7c:	b	453d90 <_obstack_memory_used@@Base+0xd240>
  453d80:	ldur	x0, [x29, #-48]
  453d84:	b	453d9c <_obstack_memory_used@@Base+0xd24c>
  453d88:	mov	w25, w0
  453d8c:	ldur	x0, [x29, #-16]
  453d90:	bl	404700 <free@plt>
  453d94:	ldur	x0, [x29, #-48]
  453d98:	stur	w25, [x29, #-36]
  453d9c:	bl	404700 <free@plt>
  453da0:	ldur	w19, [x29, #-36]
  453da4:	b	453d4c <_obstack_memory_used@@Base+0xd1fc>
  453da8:	stp	xzr, xzr, [x29, #-32]
  453dac:	mov	w25, #0xc                   	// #12
  453db0:	b	453d90 <_obstack_memory_used@@Base+0xd240>
  453db4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  453db8:	sub	x9, x9, x21
  453dbc:	cmp	x9, x8
  453dc0:	b.le	453e50 <_obstack_memory_used@@Base+0xd300>
  453dc4:	add	x23, x8, #0x1
  453dc8:	add	x24, x23, x21
  453dcc:	lsr	x8, x24, #61
  453dd0:	cbnz	x8, 453e50 <_obstack_memory_used@@Base+0xd300>
  453dd4:	ldr	x0, [x28, #16]
  453dd8:	lsl	x1, x24, #3
  453ddc:	bl	404490 <realloc@plt>
  453de0:	cbz	x0, 453e50 <_obstack_memory_used@@Base+0xd300>
  453de4:	stp	x24, x0, [x28, #8]
  453de8:	add	x0, x0, x21, lsl #3
  453dec:	lsl	x2, x23, #3
  453df0:	mov	w1, wzr
  453df4:	bl	404360 <memset@plt>
  453df8:	ldr	x24, [sp, #32]
  453dfc:	b	45362c <_obstack_memory_used@@Base+0xcadc>
  453e00:	ldr	w8, [x20, #160]
  453e04:	mov	w9, #0xa                   	// #10
  453e08:	and	w8, w8, #0x2
  453e0c:	eor	w27, w8, w9
  453e10:	b	4536fc <_obstack_memory_used@@Base+0xcbac>
  453e14:	mov	w19, w0
  453e18:	ldur	x0, [x29, #-48]
  453e1c:	bl	404700 <free@plt>
  453e20:	b	453d4c <_obstack_memory_used@@Base+0xd1fc>
  453e24:	mov	w19, #0xc                   	// #12
  453e28:	stp	xzr, xzr, [x29, #-64]
  453e2c:	stur	w19, [x29, #-36]
  453e30:	b	453d4c <_obstack_memory_used@@Base+0xd1fc>
  453e34:	mov	w0, w23
  453e38:	bl	4048d0 <iswalnum@plt>
  453e3c:	cmp	w23, #0x5f
  453e40:	mov	w27, #0x1                   	// #1
  453e44:	b.eq	4536fc <_obstack_memory_used@@Base+0xcbac>  // b.none
  453e48:	cbz	w0, 4536d4 <_obstack_memory_used@@Base+0xcb84>
  453e4c:	b	4536fc <_obstack_memory_used@@Base+0xcbac>
  453e50:	mov	w19, #0xc                   	// #12
  453e54:	b	453d4c <_obstack_memory_used@@Base+0xd1fc>
  453e58:	sub	sp, sp, #0x70
  453e5c:	stp	x29, x30, [sp, #32]
  453e60:	stp	x24, x23, [sp, #64]
  453e64:	stp	x22, x21, [sp, #80]
  453e68:	stp	x20, x19, [sp, #96]
  453e6c:	ldr	x23, [x1, #8]
  453e70:	mov	x22, x0
  453e74:	str	x25, [sp, #48]
  453e78:	add	x29, sp, #0x20
  453e7c:	lsl	x0, x23, #3
  453e80:	mov	w20, w3
  453e84:	mov	x21, x2
  453e88:	mov	x19, x1
  453e8c:	stp	x23, xzr, [sp, #8]
  453e90:	bl	404250 <malloc@plt>
  453e94:	str	x0, [sp, #24]
  453e98:	cbz	x0, 453f94 <_obstack_memory_used@@Base+0xd444>
  453e9c:	cmp	x23, #0x1
  453ea0:	b.lt	453f58 <_obstack_memory_used@@Base+0xd408>  // b.tstop
  453ea4:	mov	x24, xzr
  453ea8:	mov	w25, #0x18                  	// #24
  453eac:	b	453ecc <_obstack_memory_used@@Base+0xd37c>
  453eb0:	add	x0, sp, #0x8
  453eb4:	bl	450858 <_obstack_memory_used@@Base+0x9d08>
  453eb8:	cbnz	w0, 453f48 <_obstack_memory_used@@Base+0xd3f8>
  453ebc:	ldr	x8, [x19, #8]
  453ec0:	add	x24, x24, #0x1
  453ec4:	cmp	x24, x8
  453ec8:	b.ge	453f58 <_obstack_memory_used@@Base+0xd408>  // b.tcont
  453ecc:	ldr	x8, [x19, #16]
  453ed0:	ldr	x9, [x22, #48]
  453ed4:	ldr	x2, [x8, x24, lsl #3]
  453ed8:	madd	x1, x2, x25, x9
  453edc:	ldr	x8, [x1, #8]
  453ee0:	cmp	x8, #0x1
  453ee4:	b.lt	453eb0 <_obstack_memory_used@@Base+0xd360>  // b.tstop
  453ee8:	madd	x9, x2, x25, x9
  453eec:	ldr	x9, [x9, #16]
  453ef0:	ldr	x10, [x22]
  453ef4:	b	453f04 <_obstack_memory_used@@Base+0xd3b4>
  453ef8:	subs	x8, x8, #0x1
  453efc:	add	x9, x9, #0x8
  453f00:	b.eq	453eb0 <_obstack_memory_used@@Base+0xd360>  // b.none
  453f04:	ldr	x11, [x9]
  453f08:	add	x12, x10, x11, lsl #4
  453f0c:	ldrb	w12, [x12, #8]
  453f10:	cmp	w12, w20
  453f14:	b.ne	453ef8 <_obstack_memory_used@@Base+0xd3a8>  // b.any
  453f18:	lsl	x12, x11, #4
  453f1c:	ldr	x12, [x10, x12]
  453f20:	cmp	x12, x21
  453f24:	b.ne	453ef8 <_obstack_memory_used@@Base+0xd3a8>  // b.any
  453f28:	cmn	x11, #0x1
  453f2c:	b.eq	453eb0 <_obstack_memory_used@@Base+0xd360>  // b.none
  453f30:	add	x1, sp, #0x8
  453f34:	mov	x0, x22
  453f38:	mov	x3, x21
  453f3c:	mov	w4, w20
  453f40:	bl	454478 <_obstack_memory_used@@Base+0xd928>
  453f44:	cbz	w0, 453ebc <_obstack_memory_used@@Base+0xd36c>
  453f48:	mov	w23, w0
  453f4c:	ldr	x0, [sp, #24]
  453f50:	bl	404700 <free@plt>
  453f54:	b	453f74 <_obstack_memory_used@@Base+0xd424>
  453f58:	ldr	x0, [x19, #16]
  453f5c:	bl	404700 <free@plt>
  453f60:	ldr	x8, [sp, #24]
  453f64:	ldur	q0, [sp, #8]
  453f68:	mov	w23, wzr
  453f6c:	str	x8, [x19, #16]
  453f70:	str	q0, [x19]
  453f74:	mov	w0, w23
  453f78:	ldp	x20, x19, [sp, #96]
  453f7c:	ldp	x22, x21, [sp, #80]
  453f80:	ldp	x24, x23, [sp, #64]
  453f84:	ldr	x25, [sp, #48]
  453f88:	ldp	x29, x30, [sp, #32]
  453f8c:	add	sp, sp, #0x70
  453f90:	ret
  453f94:	mov	w23, #0xc                   	// #12
  453f98:	b	453f74 <_obstack_memory_used@@Base+0xd424>
  453f9c:	sub	sp, sp, #0xc0
  453fa0:	stp	x29, x30, [sp, #96]
  453fa4:	stp	x28, x27, [sp, #112]
  453fa8:	stp	x26, x25, [sp, #128]
  453fac:	stp	x24, x23, [sp, #144]
  453fb0:	stp	x22, x21, [sp, #160]
  453fb4:	stp	x20, x19, [sp, #176]
  453fb8:	ldr	x8, [x0, #200]
  453fbc:	ldr	x23, [x0, #152]
  453fc0:	mov	x21, x2
  453fc4:	mov	x22, x0
  453fc8:	cmp	x8, #0x1
  453fcc:	mov	x24, x1
  453fd0:	mov	x28, xzr
  453fd4:	add	x29, sp, #0x60
  453fd8:	b.lt	454014 <_obstack_memory_used@@Base+0xd4c4>  // b.tstop
  453fdc:	ldr	x9, [x22, #216]
  453fe0:	mov	w10, #0x28                  	// #40
  453fe4:	mov	x11, x8
  453fe8:	add	x12, x11, x28
  453fec:	cmp	x12, #0x0
  453ff0:	cinc	x12, x12, lt  // lt = tstop
  453ff4:	asr	x12, x12, #1
  453ff8:	madd	x13, x12, x10, x9
  453ffc:	ldr	x13, [x13, #8]
  454000:	cmp	x13, x21
  454004:	csel	x11, x11, x12, lt  // lt = tstop
  454008:	csinc	x28, x28, x12, ge  // ge = tcont
  45400c:	cmp	x28, x11
  454010:	b.lt	453fe8 <_obstack_memory_used@@Base+0xd498>  // b.tstop
  454014:	cmp	x28, x8
  454018:	b.ge	454450 <_obstack_memory_used@@Base+0xd900>  // b.tcont
  45401c:	cmn	x28, #0x1
  454020:	mov	w26, wzr
  454024:	b.eq	454454 <_obstack_memory_used@@Base+0xd904>  // b.none
  454028:	ldr	x8, [x22, #216]
  45402c:	mov	w9, #0x28                  	// #40
  454030:	madd	x9, x28, x9, x8
  454034:	ldr	x9, [x9, #8]
  454038:	cmp	x9, x21
  45403c:	b.ne	454454 <_obstack_memory_used@@Base+0xd904>  // b.any
  454040:	mov	w9, #0x1                   	// #1
  454044:	dup	v0.2d, x9
  454048:	str	x3, [sp, #40]
  45404c:	stur	w4, [x29, #-44]
  454050:	str	q0, [sp, #16]
  454054:	stur	x23, [x29, #-40]
  454058:	mov	w9, #0x28                  	// #40
  45405c:	madd	x19, x28, x9, x8
  454060:	b	454070 <_obstack_memory_used@@Base+0xd520>
  454064:	ldrb	w8, [x19, #32]
  454068:	add	x19, x19, #0x28
  45406c:	cbz	w8, 454450 <_obstack_memory_used@@Base+0xd900>
  454070:	ldr	x8, [x24, #8]
  454074:	subs	x9, x8, #0x1
  454078:	b.lt	454064 <_obstack_memory_used@@Base+0xd514>  // b.tstop
  45407c:	ldr	x10, [x19]
  454080:	ldr	x8, [x24, #16]
  454084:	mov	x11, xzr
  454088:	b.eq	4540b0 <_obstack_memory_used@@Base+0xd560>  // b.none
  45408c:	mov	x12, x9
  454090:	add	x13, x11, x12
  454094:	lsr	x13, x13, #1
  454098:	ldr	x14, [x8, x13, lsl #3]
  45409c:	cmp	x14, x10
  4540a0:	csinc	x11, x11, x13, ge  // ge = tcont
  4540a4:	csel	x12, x12, x13, lt  // lt = tstop
  4540a8:	cmp	x11, x12
  4540ac:	b.cc	454090 <_obstack_memory_used@@Base+0xd540>  // b.lo, b.ul, b.last
  4540b0:	ldr	x11, [x8, x11, lsl #3]
  4540b4:	cmp	x11, x10
  4540b8:	b.ne	454064 <_obstack_memory_used@@Base+0xd514>  // b.any
  4540bc:	ldp	x12, x11, [x19, #16]
  4540c0:	add	x11, x11, x21
  4540c4:	sub	x27, x11, x12
  4540c8:	cmp	x27, x21
  4540cc:	b.ne	454190 <_obstack_memory_used@@Base+0xd640>  // b.any
  4540d0:	ldr	x11, [x23, #40]
  4540d4:	mov	w12, #0x18                  	// #24
  4540d8:	madd	x10, x10, x12, x11
  4540dc:	ldr	x10, [x10, #16]
  4540e0:	ldr	x20, [x10]
  4540e4:	mov	x10, xzr
  4540e8:	cbz	x9, 45410c <_obstack_memory_used@@Base+0xd5bc>
  4540ec:	add	x11, x10, x9
  4540f0:	lsr	x11, x11, #1
  4540f4:	ldr	x12, [x8, x11, lsl #3]
  4540f8:	cmp	x12, x20
  4540fc:	csinc	x10, x10, x11, ge  // ge = tcont
  454100:	csel	x9, x9, x11, lt  // lt = tstop
  454104:	cmp	x10, x9
  454108:	b.cc	4540ec <_obstack_memory_used@@Base+0xd59c>  // b.lo, b.ul, b.last
  45410c:	ldr	x8, [x8, x10, lsl #3]
  454110:	cmp	x8, x20
  454114:	b.eq	4541ec <_obstack_memory_used@@Base+0xd69c>  // b.none
  454118:	ldr	q0, [sp, #16]
  45411c:	mov	w0, #0x8                   	// #8
  454120:	stur	q0, [x29, #-32]
  454124:	bl	404250 <malloc@plt>
  454128:	mov	w23, w26
  45412c:	stur	x0, [x29, #-16]
  454130:	cbz	x0, 454324 <_obstack_memory_used@@Base+0xd7d4>
  454134:	mov	w25, wzr
  454138:	str	x20, [x0]
  45413c:	ldur	x0, [x29, #-40]
  454140:	ldr	x2, [sp, #40]
  454144:	ldur	w3, [x29, #-44]
  454148:	sub	x1, x29, #0x20
  45414c:	stur	w25, [x29, #-4]
  454150:	bl	453e58 <_obstack_memory_used@@Base+0xd308>
  454154:	mov	w26, w0
  454158:	sub	x1, x29, #0x20
  45415c:	mov	x0, x24
  454160:	bl	450858 <_obstack_memory_used@@Base+0x9d08>
  454164:	ldur	x8, [x29, #-16]
  454168:	mov	w27, w0
  45416c:	mov	x0, x8
  454170:	bl	404700 <free@plt>
  454174:	orr	w8, w26, w25
  454178:	orr	w8, w8, w27
  45417c:	cbnz	w8, 454330 <_obstack_memory_used@@Base+0xd7e0>
  454180:	mov	w26, w23
  454184:	ldur	x23, [x29, #-40]
  454188:	mov	w8, #0x2                   	// #2
  45418c:	b	454308 <_obstack_memory_used@@Base+0xd7b8>
  454190:	ldr	x8, [x22, #184]
  454194:	ldr	x9, [x23, #24]
  454198:	ldr	x25, [x8, x27, lsl #3]
  45419c:	ldr	x20, [x9, x10, lsl #3]
  4541a0:	cbz	x25, 4541f4 <_obstack_memory_used@@Base+0xd6a4>
  4541a4:	ldr	x8, [x25, #16]
  4541a8:	cmp	x8, #0x0
  4541ac:	b.le	45421c <_obstack_memory_used@@Base+0xd6cc>
  4541b0:	ldr	x9, [x25, #24]
  4541b4:	mov	x11, xzr
  4541b8:	subs	x10, x8, #0x1
  4541bc:	b.eq	4541e0 <_obstack_memory_used@@Base+0xd690>  // b.none
  4541c0:	add	x12, x11, x10
  4541c4:	lsr	x12, x12, #1
  4541c8:	ldr	x13, [x9, x12, lsl #3]
  4541cc:	cmp	x13, x20
  4541d0:	csinc	x11, x11, x12, ge  // ge = tcont
  4541d4:	csel	x10, x10, x12, lt  // lt = tstop
  4541d8:	cmp	x11, x10
  4541dc:	b.cc	4541c0 <_obstack_memory_used@@Base+0xd670>  // b.lo, b.ul, b.last
  4541e0:	ldr	x9, [x9, x11, lsl #3]
  4541e4:	cmp	x9, x20
  4541e8:	b.ne	454224 <_obstack_memory_used@@Base+0xd6d4>  // b.any
  4541ec:	mov	w8, #0x4                   	// #4
  4541f0:	b	454308 <_obstack_memory_used@@Base+0xd7b8>
  4541f4:	mov	w8, #0x1                   	// #1
  4541f8:	dup	v0.2d, x8
  4541fc:	mov	w0, #0x8                   	// #8
  454200:	stur	q0, [x29, #-32]
  454204:	bl	404250 <malloc@plt>
  454208:	stur	x0, [x29, #-16]
  45420c:	cbz	x0, 454348 <_obstack_memory_used@@Base+0xd7f8>
  454210:	str	x20, [x0]
  454214:	stur	wzr, [x29, #-4]
  454218:	b	4542bc <_obstack_memory_used@@Base+0xd76c>
  45421c:	stur	x8, [x29, #-24]
  454220:	b	454288 <_obstack_memory_used@@Base+0xd738>
  454224:	cmp	x8, #0x1
  454228:	stur	x8, [x29, #-24]
  45422c:	b.lt	454288 <_obstack_memory_used@@Base+0xd738>  // b.tstop
  454230:	str	w26, [sp, #12]
  454234:	lsl	x26, x8, #3
  454238:	mov	x0, x26
  45423c:	stur	x8, [x29, #-32]
  454240:	bl	404250 <malloc@plt>
  454244:	stur	x0, [x29, #-16]
  454248:	cbz	x0, 454380 <_obstack_memory_used@@Base+0xd830>
  45424c:	ldr	x1, [x25, #24]
  454250:	mov	x2, x26
  454254:	bl	403ec0 <memcpy@plt>
  454258:	ldur	x9, [x29, #-32]
  45425c:	stur	wzr, [x29, #-4]
  454260:	cbz	x9, 454318 <_obstack_memory_used@@Base+0xd7c8>
  454264:	ldur	x8, [x29, #-24]
  454268:	ldr	w26, [sp, #12]
  45426c:	cbnz	x8, 454390 <_obstack_memory_used@@Base+0xd840>
  454270:	ldur	x8, [x29, #-16]
  454274:	str	x20, [x8]
  454278:	ldur	x8, [x29, #-24]
  45427c:	add	x8, x8, #0x1
  454280:	stur	x8, [x29, #-24]
  454284:	b	4542bc <_obstack_memory_used@@Base+0xd76c>
  454288:	mov	w25, wzr
  45428c:	stp	xzr, xzr, [x29, #-32]
  454290:	stur	xzr, [x29, #-16]
  454294:	stur	wzr, [x29, #-4]
  454298:	mov	w8, #0x1                   	// #1
  45429c:	dup	v0.2d, x8
  4542a0:	mov	w0, #0x8                   	// #8
  4542a4:	stur	q0, [x29, #-32]
  4542a8:	bl	404250 <malloc@plt>
  4542ac:	stur	x0, [x29, #-16]
  4542b0:	cbz	x0, 45435c <_obstack_memory_used@@Base+0xd80c>
  4542b4:	str	x20, [x0]
  4542b8:	cbnz	w25, 45436c <_obstack_memory_used@@Base+0xd81c>
  4542bc:	sub	x0, x29, #0x4
  4542c0:	sub	x2, x29, #0x20
  4542c4:	mov	x1, x23
  4542c8:	bl	4545a8 <_obstack_memory_used@@Base+0xda58>
  4542cc:	ldr	x8, [x22, #184]
  4542d0:	lsl	x20, x27, #3
  4542d4:	str	x0, [x8, x20]
  4542d8:	ldur	x0, [x29, #-16]
  4542dc:	bl	404700 <free@plt>
  4542e0:	ldr	x8, [x22, #184]
  4542e4:	ldur	w9, [x29, #-4]
  4542e8:	ldr	x8, [x8, x20]
  4542ec:	cmp	x8, #0x0
  4542f0:	cset	w10, eq  // eq = none
  4542f4:	cmp	w9, #0x0
  4542f8:	cset	w11, ne  // ne = any
  4542fc:	tst	w10, w11
  454300:	and	w8, w10, w11
  454304:	csel	w26, w9, w26, ne  // ne = any
  454308:	cbz	w8, 454064 <_obstack_memory_used@@Base+0xd514>
  45430c:	cmp	w8, #0x4
  454310:	b.eq	454064 <_obstack_memory_used@@Base+0xd514>  // b.none
  454314:	b	454440 <_obstack_memory_used@@Base+0xd8f0>
  454318:	mov	w25, wzr
  45431c:	ldr	w26, [sp, #12]
  454320:	b	454298 <_obstack_memory_used@@Base+0xd748>
  454324:	stp	xzr, xzr, [x29, #-32]
  454328:	mov	w25, #0xc                   	// #12
  45432c:	b	45413c <_obstack_memory_used@@Base+0xd5ec>
  454330:	cmp	w26, #0x0
  454334:	ldur	x23, [x29, #-40]
  454338:	csel	w8, w27, w26, eq  // eq = none
  45433c:	cmp	w25, #0x0
  454340:	csel	w26, w8, w25, eq  // eq = none
  454344:	b	454350 <_obstack_memory_used@@Base+0xd800>
  454348:	mov	w26, #0xc                   	// #12
  45434c:	stp	xzr, xzr, [x29, #-32]
  454350:	stur	w26, [x29, #-4]
  454354:	mov	w8, #0x1                   	// #1
  454358:	b	454308 <_obstack_memory_used@@Base+0xd7b8>
  45435c:	stp	xzr, xzr, [x29, #-32]
  454360:	cbnz	w25, 454370 <_obstack_memory_used@@Base+0xd820>
  454364:	mov	w25, #0xc                   	// #12
  454368:	b	454370 <_obstack_memory_used@@Base+0xd820>
  45436c:	bl	404700 <free@plt>
  454370:	stur	w25, [x29, #-4]
  454374:	mov	w8, #0x1                   	// #1
  454378:	mov	w26, w25
  45437c:	b	454308 <_obstack_memory_used@@Base+0xd7b8>
  454380:	mov	w25, #0xc                   	// #12
  454384:	stp	xzr, xzr, [x29, #-32]
  454388:	stur	w25, [x29, #-4]
  45438c:	b	45431c <_obstack_memory_used@@Base+0xd7cc>
  454390:	cmp	x9, x8
  454394:	b.ne	4543bc <_obstack_memory_used@@Base+0xd86c>  // b.any
  454398:	ldur	x0, [x29, #-16]
  45439c:	lsl	x8, x9, #1
  4543a0:	lsl	x1, x9, #4
  4543a4:	stur	x8, [x29, #-32]
  4543a8:	bl	404490 <realloc@plt>
  4543ac:	cbz	x0, 454430 <_obstack_memory_used@@Base+0xd8e0>
  4543b0:	ldur	x8, [x29, #-24]
  4543b4:	stur	x0, [x29, #-16]
  4543b8:	b	4543c0 <_obstack_memory_used@@Base+0xd870>
  4543bc:	ldur	x0, [x29, #-16]
  4543c0:	ldr	x9, [x0]
  4543c4:	cmp	x9, x20
  4543c8:	b.le	4543f4 <_obstack_memory_used@@Base+0xd8a4>
  4543cc:	cmp	x8, #0x1
  4543d0:	b.lt	45441c <_obstack_memory_used@@Base+0xd8cc>  // b.tstop
  4543d4:	mov	x9, x8
  4543d8:	add	x10, x0, x9, lsl #3
  4543dc:	ldur	x11, [x10, #-8]
  4543e0:	subs	x8, x9, #0x1
  4543e4:	mov	x9, x8
  4543e8:	str	x11, [x10]
  4543ec:	b.gt	4543d8 <_obstack_memory_used@@Base+0xd888>
  4543f0:	b	45441c <_obstack_memory_used@@Base+0xd8cc>
  4543f4:	add	x9, x0, x8, lsl #3
  4543f8:	ldur	x9, [x9, #-8]
  4543fc:	cmp	x9, x20
  454400:	b.le	45441c <_obstack_memory_used@@Base+0xd8cc>
  454404:	add	x10, x0, x8, lsl #3
  454408:	str	x9, [x10]
  45440c:	ldur	x9, [x10, #-16]
  454410:	sub	x8, x8, #0x1
  454414:	cmp	x9, x20
  454418:	b.gt	454404 <_obstack_memory_used@@Base+0xd8b4>
  45441c:	str	x20, [x0, x8, lsl #3]
  454420:	ldur	x8, [x29, #-24]
  454424:	ldr	w26, [sp, #12]
  454428:	ldur	x23, [x29, #-40]
  45442c:	b	45427c <_obstack_memory_used@@Base+0xd72c>
  454430:	ldur	x0, [x29, #-16]
  454434:	bl	404700 <free@plt>
  454438:	ldur	x23, [x29, #-40]
  45443c:	b	454364 <_obstack_memory_used@@Base+0xd814>
  454440:	cmp	w8, #0x2
  454444:	b.ne	454454 <_obstack_memory_used@@Base+0xd904>  // b.any
  454448:	ldr	x8, [x22, #216]
  45444c:	b	454058 <_obstack_memory_used@@Base+0xd508>
  454450:	mov	w26, wzr
  454454:	mov	w0, w26
  454458:	ldp	x20, x19, [sp, #176]
  45445c:	ldp	x22, x21, [sp, #160]
  454460:	ldp	x24, x23, [sp, #144]
  454464:	ldp	x26, x25, [sp, #128]
  454468:	ldp	x28, x27, [sp, #112]
  45446c:	ldp	x29, x30, [sp, #96]
  454470:	add	sp, sp, #0xc0
  454474:	ret
  454478:	stp	x29, x30, [sp, #-64]!
  45447c:	stp	x24, x23, [sp, #16]
  454480:	stp	x22, x21, [sp, #32]
  454484:	stp	x20, x19, [sp, #48]
  454488:	mov	w21, w4
  45448c:	mov	x22, x3
  454490:	mov	x19, x2
  454494:	mov	x20, x1
  454498:	mov	x23, x0
  45449c:	mov	w24, #0x18                  	// #24
  4544a0:	mov	x29, sp
  4544a4:	b	4544b8 <_obstack_memory_used@@Base+0xd968>
  4544a8:	cbz	x9, 454588 <_obstack_memory_used@@Base+0xda38>
  4544ac:	madd	x8, x19, x24, x8
  4544b0:	ldr	x8, [x8, #16]
  4544b4:	ldr	x19, [x8]
  4544b8:	ldr	x8, [x20, #8]
  4544bc:	subs	x9, x8, #0x1
  4544c0:	b.lt	4544fc <_obstack_memory_used@@Base+0xd9ac>  // b.tstop
  4544c4:	ldr	x8, [x20, #16]
  4544c8:	mov	x10, xzr
  4544cc:	b.eq	4544f0 <_obstack_memory_used@@Base+0xd9a0>  // b.none
  4544d0:	add	x11, x10, x9
  4544d4:	lsr	x11, x11, #1
  4544d8:	ldr	x12, [x8, x11, lsl #3]
  4544dc:	cmp	x12, x19
  4544e0:	csinc	x10, x10, x11, ge  // ge = tcont
  4544e4:	csel	x9, x9, x11, lt  // lt = tstop
  4544e8:	cmp	x10, x9
  4544ec:	b.cc	4544d0 <_obstack_memory_used@@Base+0xd980>  // b.lo, b.ul, b.last
  4544f0:	ldr	x8, [x8, x10, lsl #3]
  4544f4:	cmp	x8, x19
  4544f8:	b.eq	454588 <_obstack_memory_used@@Base+0xda38>  // b.none
  4544fc:	ldr	x8, [x23]
  454500:	add	x9, x8, x19, lsl #4
  454504:	ldrb	w9, [x9, #8]
  454508:	cmp	w9, w21
  45450c:	b.ne	454520 <_obstack_memory_used@@Base+0xd9d0>  // b.any
  454510:	lsl	x9, x19, #4
  454514:	ldr	x8, [x8, x9]
  454518:	cmp	x8, x22
  45451c:	b.eq	454570 <_obstack_memory_used@@Base+0xda20>  // b.none
  454520:	mov	x0, x20
  454524:	mov	x1, x19
  454528:	bl	4509e4 <_obstack_memory_used@@Base+0x9e94>
  45452c:	tbz	w0, #0, 4545a0 <_obstack_memory_used@@Base+0xda50>
  454530:	ldr	x8, [x23, #40]
  454534:	madd	x9, x19, x24, x8
  454538:	ldr	x9, [x9, #8]
  45453c:	cmp	x9, #0x2
  454540:	b.ne	4544a8 <_obstack_memory_used@@Base+0xd958>  // b.any
  454544:	madd	x8, x19, x24, x8
  454548:	ldr	x8, [x8, #16]
  45454c:	mov	x0, x23
  454550:	mov	x1, x20
  454554:	mov	x3, x22
  454558:	ldr	x2, [x8, #8]
  45455c:	mov	w4, w21
  454560:	bl	454478 <_obstack_memory_used@@Base+0xd928>
  454564:	cbnz	w0, 45458c <_obstack_memory_used@@Base+0xda3c>
  454568:	ldr	x8, [x23, #40]
  45456c:	b	4544ac <_obstack_memory_used@@Base+0xd95c>
  454570:	cmp	w21, #0x9
  454574:	b.ne	454588 <_obstack_memory_used@@Base+0xda38>  // b.any
  454578:	mov	x0, x20
  45457c:	mov	x1, x19
  454580:	bl	4509e4 <_obstack_memory_used@@Base+0x9e94>
  454584:	tbz	w0, #0, 4545a0 <_obstack_memory_used@@Base+0xda50>
  454588:	mov	w0, wzr
  45458c:	ldp	x20, x19, [sp, #48]
  454590:	ldp	x22, x21, [sp, #32]
  454594:	ldp	x24, x23, [sp, #16]
  454598:	ldp	x29, x30, [sp], #64
  45459c:	ret
  4545a0:	mov	w0, #0xc                   	// #12
  4545a4:	b	45458c <_obstack_memory_used@@Base+0xda3c>
  4545a8:	stp	x29, x30, [sp, #-80]!
  4545ac:	stp	x24, x23, [sp, #32]
  4545b0:	stp	x22, x21, [sp, #48]
  4545b4:	stp	x20, x19, [sp, #64]
  4545b8:	ldr	x24, [x2, #8]
  4545bc:	mov	x19, x0
  4545c0:	str	x25, [sp, #16]
  4545c4:	mov	x29, sp
  4545c8:	cbz	x24, 454800 <_obstack_memory_used@@Base+0xdcb0>
  4545cc:	mov	x22, x2
  4545d0:	mov	x20, x1
  4545d4:	subs	x8, x24, #0x1
  4545d8:	mov	x21, x24
  4545dc:	b.lt	454654 <_obstack_memory_used@@Base+0xdb04>  // b.tstop
  4545e0:	ldr	x9, [x22, #16]
  4545e4:	cmp	x24, #0x4
  4545e8:	b.cs	4545f8 <_obstack_memory_used@@Base+0xdaa8>  // b.hs, b.nlast
  4545ec:	mov	x10, xzr
  4545f0:	mov	x21, x24
  4545f4:	b	45463c <_obstack_memory_used@@Base+0xdaec>
  4545f8:	and	x10, x24, #0xfffffffffffffffc
  4545fc:	movi	v1.2d, #0x0
  454600:	movi	v0.2d, #0x0
  454604:	mov	v1.d[0], x24
  454608:	add	x11, x9, #0x10
  45460c:	mov	x12, x10
  454610:	ldp	q2, q3, [x11, #-16]
  454614:	subs	x12, x12, #0x4
  454618:	add	x11, x11, #0x20
  45461c:	add	v1.2d, v2.2d, v1.2d
  454620:	add	v0.2d, v3.2d, v0.2d
  454624:	b.ne	454610 <_obstack_memory_used@@Base+0xdac0>  // b.any
  454628:	add	v0.2d, v0.2d, v1.2d
  45462c:	addp	d0, v0.2d
  454630:	cmp	x24, x10
  454634:	fmov	x21, d0
  454638:	b.eq	454654 <_obstack_memory_used@@Base+0xdb04>  // b.none
  45463c:	sub	x11, x24, x10
  454640:	add	x9, x9, x10, lsl #3
  454644:	ldr	x10, [x9], #8
  454648:	subs	x11, x11, #0x1
  45464c:	add	x21, x10, x21
  454650:	b.ne	454644 <_obstack_memory_used@@Base+0xdaf4>  // b.any
  454654:	ldr	x9, [x20, #136]
  454658:	ldr	x10, [x20, #64]
  45465c:	and	x11, x9, x21
  454660:	mov	w9, #0x18                  	// #24
  454664:	mul	x9, x11, x9
  454668:	ldr	x9, [x10, x9]
  45466c:	cmp	x9, #0x1
  454670:	b.lt	4546e8 <_obstack_memory_used@@Base+0xdb98>  // b.tstop
  454674:	mov	w12, #0x18                  	// #24
  454678:	madd	x10, x11, x12, x10
  45467c:	ldr	x10, [x10, #16]
  454680:	mov	x11, xzr
  454684:	b	454694 <_obstack_memory_used@@Base+0xdb44>
  454688:	add	x11, x11, #0x1
  45468c:	cmp	x11, x9
  454690:	b.ge	4546e8 <_obstack_memory_used@@Base+0xdb98>  // b.tcont
  454694:	cbz	x22, 454688 <_obstack_memory_used@@Base+0xdb38>
  454698:	ldr	x23, [x10, x11, lsl #3]
  45469c:	ldr	x12, [x23]
  4546a0:	cmp	x21, x12
  4546a4:	b.ne	454688 <_obstack_memory_used@@Base+0xdb38>  // b.any
  4546a8:	ldr	x12, [x23, #16]
  4546ac:	cmp	x12, x24
  4546b0:	b.ne	454688 <_obstack_memory_used@@Base+0xdb38>  // b.any
  4546b4:	mov	x12, x8
  4546b8:	add	x13, x12, #0x1
  4546bc:	cmp	x13, #0x1
  4546c0:	b.lt	4547e4 <_obstack_memory_used@@Base+0xdc94>  // b.tstop
  4546c4:	ldr	x13, [x23, #24]
  4546c8:	ldr	x14, [x22, #16]
  4546cc:	lsl	x15, x12, #3
  4546d0:	sub	x12, x12, #0x1
  4546d4:	ldr	x13, [x13, x15]
  4546d8:	ldr	x14, [x14, x15]
  4546dc:	cmp	x13, x14
  4546e0:	b.eq	4546b8 <_obstack_memory_used@@Base+0xdb68>  // b.none
  4546e4:	b	454688 <_obstack_memory_used@@Base+0xdb38>
  4546e8:	mov	w0, #0x70                  	// #112
  4546ec:	mov	w1, #0x1                   	// #1
  4546f0:	bl	404410 <calloc@plt>
  4546f4:	cbz	x0, 454820 <_obstack_memory_used@@Base+0xdcd0>
  4546f8:	mov	x23, x0
  4546fc:	add	x25, x0, #0x8
  454700:	cmp	x24, #0x1
  454704:	str	x24, [x0, #16]
  454708:	b.lt	4547c4 <_obstack_memory_used@@Base+0xdc74>  // b.tstop
  45470c:	str	x24, [x23, #8]
  454710:	lsl	x24, x24, #3
  454714:	mov	x0, x24
  454718:	bl	404250 <malloc@plt>
  45471c:	str	x0, [x23, #24]
  454720:	cbz	x0, 454818 <_obstack_memory_used@@Base+0xdcc8>
  454724:	ldr	x1, [x22, #16]
  454728:	mov	x2, x24
  45472c:	bl	403ec0 <memcpy@plt>
  454730:	ldr	x8, [x22, #8]
  454734:	str	x25, [x23, #80]
  454738:	cmp	x8, #0x1
  45473c:	b.lt	4547d0 <_obstack_memory_used@@Base+0xdc80>  // b.tstop
  454740:	ldr	x9, [x20]
  454744:	ldr	x10, [x22, #16]
  454748:	b	45476c <_obstack_memory_used@@Base+0xdc1c>
  45474c:	ldr	w11, [x11]
  454750:	tst	w11, #0x3ff00
  454754:	b.eq	454760 <_obstack_memory_used@@Base+0xdc10>  // b.none
  454758:	orr	w11, w12, #0x80
  45475c:	strb	w11, [x23, #104]
  454760:	subs	x8, x8, #0x1
  454764:	add	x10, x10, #0x8
  454768:	b.eq	4547d0 <_obstack_memory_used@@Base+0xdc80>  // b.none
  45476c:	ldr	x11, [x10]
  454770:	add	x11, x9, x11, lsl #4
  454774:	ldr	w12, [x11, #8]!
  454778:	and	w13, w12, #0x3ffff
  45477c:	cmp	w13, #0x1
  454780:	b.eq	454760 <_obstack_memory_used@@Base+0xdc10>  // b.none
  454784:	ldrb	w14, [x23, #104]
  454788:	lsr	w15, w12, #15
  45478c:	and	w13, w12, #0xff
  454790:	and	w12, w15, #0x20
  454794:	orr	w12, w14, w12
  454798:	cmp	w13, #0xc
  45479c:	strb	w12, [x23, #104]
  4547a0:	b.eq	454758 <_obstack_memory_used@@Base+0xdc08>  // b.none
  4547a4:	cmp	w13, #0x4
  4547a8:	b.eq	4547bc <_obstack_memory_used@@Base+0xdc6c>  // b.none
  4547ac:	cmp	w13, #0x2
  4547b0:	b.ne	45474c <_obstack_memory_used@@Base+0xdbfc>  // b.any
  4547b4:	orr	w11, w12, #0x10
  4547b8:	b	45475c <_obstack_memory_used@@Base+0xdc0c>
  4547bc:	orr	w11, w12, #0x40
  4547c0:	b	45475c <_obstack_memory_used@@Base+0xdc0c>
  4547c4:	stp	xzr, xzr, [x25]
  4547c8:	str	xzr, [x25, #16]
  4547cc:	str	x25, [x23, #80]
  4547d0:	mov	x0, x20
  4547d4:	mov	x1, x23
  4547d8:	mov	x2, x21
  4547dc:	bl	450ec8 <_obstack_memory_used@@Base+0xa378>
  4547e0:	cbnz	w0, 45480c <_obstack_memory_used@@Base+0xdcbc>
  4547e4:	mov	x0, x23
  4547e8:	ldp	x20, x19, [sp, #64]
  4547ec:	ldp	x22, x21, [sp, #48]
  4547f0:	ldp	x24, x23, [sp, #32]
  4547f4:	ldr	x25, [sp, #16]
  4547f8:	ldp	x29, x30, [sp], #80
  4547fc:	ret
  454800:	mov	x23, xzr
  454804:	str	wzr, [x19]
  454808:	b	4547e4 <_obstack_memory_used@@Base+0xdc94>
  45480c:	mov	x0, x23
  454810:	bl	44b73c <_obstack_memory_used@@Base+0x4bec>
  454814:	b	454820 <_obstack_memory_used@@Base+0xdcd0>
  454818:	mov	x0, x23
  45481c:	bl	404700 <free@plt>
  454820:	mov	x23, xzr
  454824:	mov	w8, #0xc                   	// #12
  454828:	str	w8, [x19]
  45482c:	b	4547e4 <_obstack_memory_used@@Base+0xdc94>
  454830:	stp	x29, x30, [sp, #-48]!
  454834:	stp	x22, x21, [sp, #16]
  454838:	stp	x20, x19, [sp, #32]
  45483c:	ldr	x8, [x0]
  454840:	mov	x29, sp
  454844:	add	x9, x8, x1, lsl #4
  454848:	ldrb	w10, [x9, #8]
  45484c:	cmp	w10, #0x7
  454850:	b.eq	454a3c <_obstack_memory_used@@Base+0xdeec>  // b.none
  454854:	ldr	w9, [x2, #144]
  454858:	cmp	w9, #0x1
  45485c:	b.ne	4548b4 <_obstack_memory_used@@Base+0xdd64>  // b.any
  454860:	mov	w20, #0x1                   	// #1
  454864:	cmp	w10, #0x5
  454868:	b.eq	454900 <_obstack_memory_used@@Base+0xddb0>  // b.none
  45486c:	cmp	w10, #0x6
  454870:	mov	w0, wzr
  454874:	b.ne	454a18 <_obstack_memory_used@@Base+0xdec8>  // b.any
  454878:	cmp	w20, #0x2
  45487c:	b.lt	454a18 <_obstack_memory_used@@Base+0xdec8>  // b.tstop
  454880:	lsl	x10, x1, #4
  454884:	ldr	x21, [x8, x10]
  454888:	ldr	x8, [x21, #64]
  45488c:	cbnz	x8, 4548a0 <_obstack_memory_used@@Base+0xdd50>
  454890:	ldr	x10, [x21, #72]
  454894:	cbnz	x10, 4548a0 <_obstack_memory_used@@Base+0xdd50>
  454898:	ldr	x10, [x21, #40]
  45489c:	cbz	x10, 454a34 <_obstack_memory_used@@Base+0xdee4>
  4548a0:	cmp	w9, #0x1
  4548a4:	b.ne	454948 <_obstack_memory_used@@Base+0xddf8>  // b.any
  4548a8:	ldr	x9, [x2, #8]
  4548ac:	ldrb	w19, [x9, x3]
  4548b0:	b	454950 <_obstack_memory_used@@Base+0xde00>
  4548b4:	ldr	x11, [x2, #48]
  4548b8:	add	x12, x3, #0x1
  4548bc:	cmp	x12, x11
  4548c0:	b.ge	4548f4 <_obstack_memory_used@@Base+0xdda4>  // b.tcont
  4548c4:	ldr	x13, [x2, #16]
  4548c8:	sub	w20, w11, w3
  4548cc:	sub	x12, x11, x3
  4548d0:	mov	w11, #0x1                   	// #1
  4548d4:	add	x13, x13, x3, lsl #2
  4548d8:	ldr	w14, [x13, x11, lsl #2]
  4548dc:	cmn	w14, #0x1
  4548e0:	b.ne	454938 <_obstack_memory_used@@Base+0xdde8>  // b.any
  4548e4:	add	x11, x11, #0x1
  4548e8:	cmp	x12, x11
  4548ec:	b.ne	4548d8 <_obstack_memory_used@@Base+0xdd88>  // b.any
  4548f0:	b	4548f8 <_obstack_memory_used@@Base+0xdda8>
  4548f4:	mov	w20, #0x1                   	// #1
  4548f8:	cmp	w10, #0x5
  4548fc:	b.ne	45486c <_obstack_memory_used@@Base+0xdd1c>  // b.any
  454900:	cmp	w20, #0x2
  454904:	b.lt	454a14 <_obstack_memory_used@@Base+0xdec4>  // b.tstop
  454908:	ldr	x8, [x0, #216]
  45490c:	tbnz	w8, #6, 454920 <_obstack_memory_used@@Base+0xddd0>
  454910:	ldr	x9, [x2, #8]
  454914:	ldrb	w9, [x9, x3]
  454918:	cmp	w9, #0xa
  45491c:	b.eq	454a14 <_obstack_memory_used@@Base+0xdec4>  // b.none
  454920:	tbz	w8, #7, 454930 <_obstack_memory_used@@Base+0xdde0>
  454924:	ldr	x8, [x2, #8]
  454928:	ldrb	w8, [x8, x3]
  45492c:	cbz	w8, 454a14 <_obstack_memory_used@@Base+0xdec4>
  454930:	mov	w0, w20
  454934:	b	454a18 <_obstack_memory_used@@Base+0xdec8>
  454938:	mov	w20, w11
  45493c:	cmp	w10, #0x5
  454940:	b.eq	454900 <_obstack_memory_used@@Base+0xddb0>  // b.none
  454944:	b	45486c <_obstack_memory_used@@Base+0xdd1c>
  454948:	ldr	x9, [x2, #16]
  45494c:	ldr	w19, [x9, x3, lsl #2]
  454950:	ldr	x9, [x21, #40]
  454954:	cmp	x9, #0x1
  454958:	b.lt	45497c <_obstack_memory_used@@Base+0xde2c>  // b.tstop
  45495c:	ldr	x10, [x21]
  454960:	mov	x11, xzr
  454964:	ldr	w12, [x10, x11, lsl #2]
  454968:	cmp	w19, w12
  45496c:	b.eq	4549f0 <_obstack_memory_used@@Base+0xdea0>  // b.none
  454970:	add	x11, x11, #0x1
  454974:	cmp	x11, x9
  454978:	b.lt	454964 <_obstack_memory_used@@Base+0xde14>  // b.tstop
  45497c:	ldr	x9, [x21, #72]
  454980:	cmp	x9, #0x1
  454984:	b.lt	4549b4 <_obstack_memory_used@@Base+0xde64>  // b.tstop
  454988:	mov	x22, xzr
  45498c:	ldr	x8, [x21, #24]
  454990:	mov	w0, w19
  454994:	ldr	x1, [x8, x22, lsl #3]
  454998:	bl	404240 <iswctype@plt>
  45499c:	cbnz	w0, 4549f0 <_obstack_memory_used@@Base+0xdea0>
  4549a0:	ldr	x8, [x21, #72]
  4549a4:	add	x22, x22, #0x1
  4549a8:	cmp	x22, x8
  4549ac:	b.lt	45498c <_obstack_memory_used@@Base+0xde3c>  // b.tstop
  4549b0:	ldr	x8, [x21, #64]
  4549b4:	cmp	x8, #0x1
  4549b8:	b.lt	454a00 <_obstack_memory_used@@Base+0xdeb0>  // b.tstop
  4549bc:	ldr	x9, [x21, #8]
  4549c0:	mov	x10, xzr
  4549c4:	b	4549d4 <_obstack_memory_used@@Base+0xde84>
  4549c8:	add	x10, x10, #0x1
  4549cc:	cmp	x10, x8
  4549d0:	b.ge	454a00 <_obstack_memory_used@@Base+0xdeb0>  // b.tcont
  4549d4:	ldr	w11, [x9, x10, lsl #2]
  4549d8:	cmp	w11, w19
  4549dc:	b.hi	4549c8 <_obstack_memory_used@@Base+0xde78>  // b.pmore
  4549e0:	ldr	x11, [x21, #16]
  4549e4:	ldr	w11, [x11, x10, lsl #2]
  4549e8:	cmp	w19, w11
  4549ec:	b.hi	4549c8 <_obstack_memory_used@@Base+0xde78>  // b.pmore
  4549f0:	mov	w0, w20
  4549f4:	ldrb	w8, [x21, #32]
  4549f8:	tbnz	w8, #0, 454a0c <_obstack_memory_used@@Base+0xdebc>
  4549fc:	b	454a18 <_obstack_memory_used@@Base+0xdec8>
  454a00:	mov	w0, wzr
  454a04:	ldrb	w8, [x21, #32]
  454a08:	tbz	w8, #0, 454a18 <_obstack_memory_used@@Base+0xdec8>
  454a0c:	cmp	w0, #0x0
  454a10:	b.le	454a28 <_obstack_memory_used@@Base+0xded8>
  454a14:	mov	w0, wzr
  454a18:	ldp	x20, x19, [sp, #32]
  454a1c:	ldp	x22, x21, [sp, #16]
  454a20:	ldp	x29, x30, [sp], #48
  454a24:	ret
  454a28:	cmp	w20, #0x1
  454a2c:	csinc	w0, w20, wzr, gt
  454a30:	b	454a18 <_obstack_memory_used@@Base+0xdec8>
  454a34:	mov	w19, wzr
  454a38:	b	454950 <_obstack_memory_used@@Base+0xde00>
  454a3c:	ldr	x8, [x2, #8]
  454a40:	ldrb	w10, [x8, x3]
  454a44:	cmp	w10, #0xc2
  454a48:	b.cc	454a14 <_obstack_memory_used@@Base+0xdec4>  // b.lo, b.ul, b.last
  454a4c:	ldr	x9, [x2, #88]
  454a50:	add	x11, x3, #0x2
  454a54:	cmp	x11, x9
  454a58:	b.gt	454a14 <_obstack_memory_used@@Base+0xdec4>
  454a5c:	add	x11, x3, x8
  454a60:	ldrb	w11, [x11, #1]
  454a64:	cmp	w10, #0xdf
  454a68:	b.hi	454a88 <_obstack_memory_used@@Base+0xdf38>  // b.pmore
  454a6c:	sxtb	w8, w11
  454a70:	cmp	w11, #0xbf
  454a74:	mov	w9, #0xffffffff            	// #-1
  454a78:	ccmp	w8, w9, #0x0, ls  // ls = plast
  454a7c:	mov	w8, #0x2                   	// #2
  454a80:	csel	w0, wzr, w8, gt
  454a84:	b	454a18 <_obstack_memory_used@@Base+0xdec8>
  454a88:	cmp	w10, #0xef
  454a8c:	b.hi	454aa8 <_obstack_memory_used@@Base+0xdf58>  // b.pmore
  454a90:	cmp	w10, #0xe0
  454a94:	mov	w10, #0x3                   	// #3
  454a98:	b.ne	454b04 <_obstack_memory_used@@Base+0xdfb4>  // b.any
  454a9c:	cmp	w11, #0xa0
  454aa0:	b.cc	454a14 <_obstack_memory_used@@Base+0xdec4>  // b.lo, b.ul, b.last
  454aa4:	b	454b04 <_obstack_memory_used@@Base+0xdfb4>
  454aa8:	cmp	w10, #0xf7
  454aac:	b.hi	454ac8 <_obstack_memory_used@@Base+0xdf78>  // b.pmore
  454ab0:	cmp	w10, #0xf0
  454ab4:	mov	w10, #0x4                   	// #4
  454ab8:	b.ne	454b04 <_obstack_memory_used@@Base+0xdfb4>  // b.any
  454abc:	cmp	w11, #0x90
  454ac0:	b.cc	454a14 <_obstack_memory_used@@Base+0xdec4>  // b.lo, b.ul, b.last
  454ac4:	b	454b04 <_obstack_memory_used@@Base+0xdfb4>
  454ac8:	cmp	w10, #0xfb
  454acc:	b.hi	454ae8 <_obstack_memory_used@@Base+0xdf98>  // b.pmore
  454ad0:	cmp	w10, #0xf8
  454ad4:	mov	w10, #0x5                   	// #5
  454ad8:	b.ne	454b04 <_obstack_memory_used@@Base+0xdfb4>  // b.any
  454adc:	cmp	w11, #0x88
  454ae0:	b.cc	454a14 <_obstack_memory_used@@Base+0xdec4>  // b.lo, b.ul, b.last
  454ae4:	b	454b04 <_obstack_memory_used@@Base+0xdfb4>
  454ae8:	cmp	w10, #0xfd
  454aec:	b.hi	454a14 <_obstack_memory_used@@Base+0xdec4>  // b.pmore
  454af0:	cmp	w10, #0xfc
  454af4:	mov	w10, #0x6                   	// #6
  454af8:	b.ne	454b04 <_obstack_memory_used@@Base+0xdfb4>  // b.any
  454afc:	cmp	w11, #0x84
  454b00:	b.cc	454a14 <_obstack_memory_used@@Base+0xdec4>  // b.lo, b.ul, b.last
  454b04:	add	x11, x10, x3
  454b08:	cmp	x11, x9
  454b0c:	b.gt	454a14 <_obstack_memory_used@@Base+0xdec4>
  454b10:	add	x8, x3, x8
  454b14:	sub	x9, x10, #0x1
  454b18:	add	x8, x8, #0x1
  454b1c:	ldrb	w11, [x8]
  454b20:	mov	w0, wzr
  454b24:	sxtb	w12, w11
  454b28:	tbz	w12, #31, 454a18 <_obstack_memory_used@@Base+0xdec8>
  454b2c:	cmp	w11, #0xbf
  454b30:	b.hi	454a18 <_obstack_memory_used@@Base+0xdec8>  // b.pmore
  454b34:	subs	x9, x9, #0x1
  454b38:	add	x8, x8, #0x1
  454b3c:	b.ne	454b1c <_obstack_memory_used@@Base+0xdfcc>  // b.any
  454b40:	mov	w0, w10
  454b44:	b	454a18 <_obstack_memory_used@@Base+0xdec8>
  454b48:	sub	sp, sp, #0x30
  454b4c:	stp	x29, x30, [sp, #16]
  454b50:	ldr	w10, [x1, #8]
  454b54:	str	x19, [sp, #32]
  454b58:	add	x29, sp, #0x10
  454b5c:	and	w8, w10, #0xff
  454b60:	sub	w11, w8, #0x1
  454b64:	cmp	w11, #0x6
  454b68:	mov	w8, wzr
  454b6c:	b.hi	454cb8 <_obstack_memory_used@@Base+0xe168>  // b.pmore
  454b70:	ldr	x9, [x0, #8]
  454b74:	adrp	x12, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  454b78:	add	x12, x12, #0x988
  454b7c:	ldrb	w9, [x9, x2]
  454b80:	adr	x13, 454b90 <_obstack_memory_used@@Base+0xe040>
  454b84:	ldrb	w14, [x12, x11]
  454b88:	add	x13, x13, x14, lsl #2
  454b8c:	br	x13
  454b90:	ldrb	w8, [x1]
  454b94:	cmp	w8, w9
  454b98:	b.eq	454bec <_obstack_memory_used@@Base+0xe09c>  // b.none
  454b9c:	b	454cb4 <_obstack_memory_used@@Base+0xe164>
  454ba0:	ldr	x8, [x1]
  454ba4:	lsr	x11, x9, #3
  454ba8:	and	x11, x11, #0x18
  454bac:	ldr	x8, [x8, x11]
  454bb0:	lsr	x8, x8, x9
  454bb4:	tbnz	w8, #0, 454bec <_obstack_memory_used@@Base+0xe09c>
  454bb8:	b	454cb4 <_obstack_memory_used@@Base+0xe164>
  454bbc:	sxtb	w8, w9
  454bc0:	tbnz	w8, #31, 454cb4 <_obstack_memory_used@@Base+0xe164>
  454bc4:	cbz	w9, 454be0 <_obstack_memory_used@@Base+0xe090>
  454bc8:	cmp	w9, #0xa
  454bcc:	b.ne	454bec <_obstack_memory_used@@Base+0xe09c>  // b.any
  454bd0:	ldr	x8, [x0, #152]
  454bd4:	ldrb	w8, [x8, #216]
  454bd8:	tbnz	w8, #6, 454bec <_obstack_memory_used@@Base+0xe09c>
  454bdc:	b	454cb4 <_obstack_memory_used@@Base+0xe164>
  454be0:	ldr	x8, [x0, #152]
  454be4:	ldrb	w8, [x8, #216]
  454be8:	tbnz	w8, #7, 454cb4 <_obstack_memory_used@@Base+0xe164>
  454bec:	tst	w10, #0x3ff00
  454bf0:	b.eq	454c34 <_obstack_memory_used@@Base+0xe0e4>  // b.none
  454bf4:	tbnz	x2, #63, 454c2c <_obstack_memory_used@@Base+0xe0dc>
  454bf8:	ldr	x8, [x0, #88]
  454bfc:	cmp	x8, x2
  454c00:	b.eq	454ce0 <_obstack_memory_used@@Base+0xe190>  // b.none
  454c04:	ldr	w8, [x0, #144]
  454c08:	cmp	w8, #0x2
  454c0c:	b.lt	454c3c <_obstack_memory_used@@Base+0xe0ec>  // b.tstop
  454c10:	ldr	x9, [x0, #16]
  454c14:	ldr	w8, [x9, x2, lsl #2]
  454c18:	cmn	w8, #0x1
  454c1c:	b.ne	454c60 <_obstack_memory_used@@Base+0xe110>  // b.any
  454c20:	cmp	x2, #0x0
  454c24:	sub	x2, x2, #0x1
  454c28:	b.gt	454c14 <_obstack_memory_used@@Base+0xe0c4>
  454c2c:	ldr	w11, [x0, #112]
  454c30:	b	454c90 <_obstack_memory_used@@Base+0xe140>
  454c34:	mov	w8, #0x1                   	// #1
  454c38:	b	454cb8 <_obstack_memory_used@@Base+0xe168>
  454c3c:	ldr	x8, [x0, #128]
  454c40:	lsr	x11, x9, #3
  454c44:	and	x11, x11, #0x18
  454c48:	ldr	x8, [x8, x11]
  454c4c:	lsr	x8, x8, x9
  454c50:	tbz	w8, #0, 454c84 <_obstack_memory_used@@Base+0xe134>
  454c54:	mov	w12, wzr
  454c58:	mov	w11, #0x1                   	// #1
  454c5c:	b	454ca0 <_obstack_memory_used@@Base+0xe150>
  454c60:	ldrb	w9, [x0, #142]
  454c64:	cbnz	w9, 454cf4 <_obstack_memory_used@@Base+0xe1a4>
  454c68:	cmp	w8, #0xa
  454c6c:	b.ne	454c8c <_obstack_memory_used@@Base+0xe13c>  // b.any
  454c70:	ldrb	w8, [x0, #141]
  454c74:	cmp	w8, #0x0
  454c78:	cset	w8, ne  // ne = any
  454c7c:	lsl	w11, w8, #1
  454c80:	b	454c90 <_obstack_memory_used@@Base+0xe140>
  454c84:	cmp	w9, #0xa
  454c88:	b.eq	454c70 <_obstack_memory_used@@Base+0xe120>  // b.none
  454c8c:	mov	w11, wzr
  454c90:	tst	w11, #0x1
  454c94:	cset	w12, eq  // eq = none
  454c98:	tbz	w10, #10, 454ca0 <_obstack_memory_used@@Base+0xe150>
  454c9c:	tbz	w11, #0, 454cb4 <_obstack_memory_used@@Base+0xe164>
  454ca0:	ldr	w8, [x1, #8]
  454ca4:	tbnz	w12, #0, 454cac <_obstack_memory_used@@Base+0xe15c>
  454ca8:	tbnz	w8, #11, 454cb4 <_obstack_memory_used@@Base+0xe164>
  454cac:	tbnz	w11, #1, 454ccc <_obstack_memory_used@@Base+0xe17c>
  454cb0:	tbz	w8, #13, 454ccc <_obstack_memory_used@@Base+0xe17c>
  454cb4:	mov	w8, wzr
  454cb8:	mov	w0, w8
  454cbc:	ldr	x19, [sp, #32]
  454cc0:	ldp	x29, x30, [sp, #16]
  454cc4:	add	sp, sp, #0x30
  454cc8:	ret
  454ccc:	tst	w8, #0x8000
  454cd0:	cset	w8, eq  // eq = none
  454cd4:	and	w9, w11, #0x8
  454cd8:	orr	w0, w8, w9, lsr #3
  454cdc:	b	454cbc <_obstack_memory_used@@Base+0xe16c>
  454ce0:	ldr	w8, [x0, #160]
  454ce4:	mov	w9, #0xa                   	// #10
  454ce8:	and	w8, w8, #0x2
  454cec:	eor	w11, w8, w9
  454cf0:	b	454c90 <_obstack_memory_used@@Base+0xe140>
  454cf4:	str	x0, [sp]
  454cf8:	mov	w0, w8
  454cfc:	stur	w10, [x29, #-4]
  454d00:	str	x1, [x29, #24]
  454d04:	mov	w19, w8
  454d08:	bl	4048d0 <iswalnum@plt>
  454d0c:	mov	w12, wzr
  454d10:	cmp	w19, #0x5f
  454d14:	mov	w11, #0x1                   	// #1
  454d18:	b.eq	454d38 <_obstack_memory_used@@Base+0xe1e8>  // b.none
  454d1c:	mov	w9, w0
  454d20:	ldr	x1, [x29, #24]
  454d24:	ldr	x0, [sp]
  454d28:	ldur	w10, [x29, #-4]
  454d2c:	mov	w8, w19
  454d30:	cbz	w9, 454c68 <_obstack_memory_used@@Base+0xe118>
  454d34:	b	454ca0 <_obstack_memory_used@@Base+0xe150>
  454d38:	ldr	x1, [x29, #24]
  454d3c:	b	454ca0 <_obstack_memory_used@@Base+0xe150>
  454d40:	sub	sp, sp, #0xa0
  454d44:	stp	x29, x30, [sp, #64]
  454d48:	stp	x28, x27, [sp, #80]
  454d4c:	stp	x26, x25, [sp, #96]
  454d50:	stp	x24, x23, [sp, #112]
  454d54:	stp	x22, x21, [sp, #128]
  454d58:	stp	x20, x19, [sp, #144]
  454d5c:	ldp	x22, x21, [x1, #16]
  454d60:	mov	w8, #0x1                   	// #1
  454d64:	mov	x20, x0
  454d68:	dup	v0.2d, x8
  454d6c:	mov	w0, #0x8                   	// #8
  454d70:	add	x29, sp, #0x40
  454d74:	mov	x19, x1
  454d78:	str	q0, [sp, #32]
  454d7c:	bl	404250 <malloc@plt>
  454d80:	str	x0, [sp, #48]
  454d84:	cbz	x0, 4550cc <_obstack_memory_used@@Base+0xe57c>
  454d88:	str	x22, [x0]
  454d8c:	add	x3, sp, #0x20
  454d90:	mov	x0, x20
  454d94:	mov	x1, x19
  454d98:	mov	x2, x21
  454d9c:	bl	4550e0 <_obstack_memory_used@@Base+0xe590>
  454da0:	cbnz	w0, 4550c4 <_obstack_memory_used@@Base+0xe574>
  454da4:	add	x8, x19, #0x20
  454da8:	str	x8, [sp, #24]
  454dac:	mov	w8, #0x1                   	// #1
  454db0:	mov	w10, wzr
  454db4:	dup	v0.2d, x8
  454db8:	str	q0, [sp]
  454dbc:	b	454ddc <_obstack_memory_used@@Base+0xe28c>
  454dc0:	add	x3, sp, #0x20
  454dc4:	mov	x0, x20
  454dc8:	mov	x1, x19
  454dcc:	mov	x2, x21
  454dd0:	bl	4550e0 <_obstack_memory_used@@Base+0xe590>
  454dd4:	ldr	w10, [sp, #20]
  454dd8:	cbnz	w0, 4550c4 <_obstack_memory_used@@Base+0xe574>
  454ddc:	mov	x26, x21
  454de0:	subs	x21, x21, #0x1
  454de4:	b.lt	45506c <_obstack_memory_used@@Base+0xe51c>  // b.tstop
  454de8:	ldr	x0, [x19]
  454dec:	ldr	w9, [x20, #224]
  454df0:	ldr	x8, [x0, x26, lsl #3]
  454df4:	cmp	x8, #0x0
  454df8:	csinc	w10, wzr, w10, ne  // ne = any
  454dfc:	cmp	w10, w9
  454e00:	b.gt	45507c <_obstack_memory_used@@Base+0xe52c>
  454e04:	str	xzr, [sp, #40]
  454e08:	ldr	x8, [x20, #184]
  454e0c:	str	w10, [sp, #20]
  454e10:	ldr	x27, [x8, x21, lsl #3]
  454e14:	cbz	x27, 454dc0 <_obstack_memory_used@@Base+0xe270>
  454e18:	ldr	x8, [x27, #40]
  454e1c:	cmp	x8, #0x1
  454e20:	b.lt	454dc0 <_obstack_memory_used@@Base+0xe270>  // b.tstop
  454e24:	ldr	x28, [x20, #152]
  454e28:	mov	x22, xzr
  454e2c:	b	454e64 <_obstack_memory_used@@Base+0xe314>
  454e30:	ldr	x9, [sp, #32]
  454e34:	cbz	x9, 454fb8 <_obstack_memory_used@@Base+0xe468>
  454e38:	ldr	x8, [sp, #40]
  454e3c:	cbnz	x8, 454fd8 <_obstack_memory_used@@Base+0xe488>
  454e40:	ldr	x8, [sp, #48]
  454e44:	str	x23, [x8]
  454e48:	ldr	x8, [sp, #40]
  454e4c:	add	x8, x8, #0x1
  454e50:	str	x8, [sp, #40]
  454e54:	ldr	x8, [x27, #40]
  454e58:	add	x22, x22, #0x1
  454e5c:	cmp	x22, x8
  454e60:	b.ge	454dc0 <_obstack_memory_used@@Base+0xe270>  // b.tcont
  454e64:	ldr	x8, [x27, #48]
  454e68:	ldr	x23, [x8, x22, lsl #3]
  454e6c:	ldr	x8, [x28]
  454e70:	add	x8, x8, x23, lsl #4
  454e74:	ldrb	w8, [x8, #10]
  454e78:	tbnz	w8, #4, 454ef4 <_obstack_memory_used@@Base+0xe3a4>
  454e7c:	ldr	x8, [x28]
  454e80:	mov	x0, x20
  454e84:	mov	x2, x21
  454e88:	add	x1, x8, x23, lsl #4
  454e8c:	bl	454b48 <_obstack_memory_used@@Base+0xdff8>
  454e90:	tbz	w0, #0, 454e54 <_obstack_memory_used@@Base+0xe304>
  454e94:	ldr	x8, [x19]
  454e98:	ldr	x9, [x8, x26, lsl #3]
  454e9c:	cbz	x9, 454e54 <_obstack_memory_used@@Base+0xe304>
  454ea0:	ldr	x8, [x9, #16]
  454ea4:	subs	x10, x8, #0x1
  454ea8:	b.lt	454e54 <_obstack_memory_used@@Base+0xe304>  // b.tstop
  454eac:	ldr	x8, [x28, #24]
  454eb0:	ldr	x9, [x9, #24]
  454eb4:	mov	x11, xzr
  454eb8:	ldr	x8, [x8, x23, lsl #3]
  454ebc:	b.eq	454ee0 <_obstack_memory_used@@Base+0xe390>  // b.none
  454ec0:	add	x12, x11, x10
  454ec4:	lsr	x12, x12, #1
  454ec8:	ldr	x13, [x9, x12, lsl #3]
  454ecc:	cmp	x13, x8
  454ed0:	csinc	x11, x11, x12, ge  // ge = tcont
  454ed4:	csel	x10, x10, x12, lt  // lt = tstop
  454ed8:	cmp	x11, x10
  454edc:	b.cc	454ec0 <_obstack_memory_used@@Base+0xe370>  // b.lo, b.ul, b.last
  454ee0:	ldr	x9, [x9, x11, lsl #3]
  454ee4:	cmp	x9, x8
  454ee8:	b.ne	454e54 <_obstack_memory_used@@Base+0xe304>  // b.any
  454eec:	mov	w0, #0x1                   	// #1
  454ef0:	b	454f88 <_obstack_memory_used@@Base+0xe438>
  454ef4:	ldr	x24, [x20, #152]
  454ef8:	ldr	x25, [x19, #24]
  454efc:	mov	x1, x23
  454f00:	mov	x2, x20
  454f04:	mov	x0, x24
  454f08:	mov	x3, x21
  454f0c:	bl	454830 <_obstack_memory_used@@Base+0xdce0>
  454f10:	cmp	w0, #0x1
  454f14:	b.lt	454f84 <_obstack_memory_used@@Base+0xe434>  // b.tstop
  454f18:	add	x8, x21, w0, uxtw
  454f1c:	cmp	x8, x25
  454f20:	b.gt	454f88 <_obstack_memory_used@@Base+0xe438>
  454f24:	ldr	x9, [x19]
  454f28:	ldr	x9, [x9, x8, lsl #3]
  454f2c:	cbz	x9, 454e7c <_obstack_memory_used@@Base+0xe32c>
  454f30:	ldr	x8, [x9, #16]
  454f34:	subs	x10, x8, #0x1
  454f38:	b.lt	454e7c <_obstack_memory_used@@Base+0xe32c>  // b.tstop
  454f3c:	ldr	x8, [x24, #24]
  454f40:	ldr	x9, [x9, #24]
  454f44:	mov	x11, xzr
  454f48:	ldr	x8, [x8, x23, lsl #3]
  454f4c:	b.eq	454f70 <_obstack_memory_used@@Base+0xe420>  // b.none
  454f50:	add	x12, x11, x10
  454f54:	lsr	x12, x12, #1
  454f58:	ldr	x13, [x9, x12, lsl #3]
  454f5c:	cmp	x13, x8
  454f60:	csinc	x11, x11, x12, ge  // ge = tcont
  454f64:	csel	x10, x10, x12, lt  // lt = tstop
  454f68:	cmp	x11, x10
  454f6c:	b.cc	454f50 <_obstack_memory_used@@Base+0xe400>  // b.lo, b.ul, b.last
  454f70:	cbz	w0, 454e7c <_obstack_memory_used@@Base+0xe32c>
  454f74:	ldr	x9, [x9, x11, lsl #3]
  454f78:	cmp	x9, x8
  454f7c:	b.eq	454f88 <_obstack_memory_used@@Base+0xe438>  // b.none
  454f80:	b	454e7c <_obstack_memory_used@@Base+0xe32c>
  454f84:	cbz	w0, 454e7c <_obstack_memory_used@@Base+0xe32c>
  454f88:	ldr	x8, [x19, #40]
  454f8c:	cbz	x8, 454e30 <_obstack_memory_used@@Base+0xe2e0>
  454f90:	ldr	x8, [x28, #24]
  454f94:	ldr	x1, [sp, #24]
  454f98:	add	x3, x21, w0, sxtw
  454f9c:	mov	x0, x20
  454fa0:	ldr	x2, [x8, x23, lsl #3]
  454fa4:	mov	x4, x23
  454fa8:	mov	x5, x21
  454fac:	bl	455ef4 <_obstack_memory_used@@Base+0xf3a4>
  454fb0:	tbz	w0, #0, 454e30 <_obstack_memory_used@@Base+0xe2e0>
  454fb4:	b	454e54 <_obstack_memory_used@@Base+0xe304>
  454fb8:	ldr	q0, [sp]
  454fbc:	mov	w0, #0x8                   	// #8
  454fc0:	str	q0, [sp, #32]
  454fc4:	bl	404250 <malloc@plt>
  454fc8:	str	x0, [sp, #48]
  454fcc:	cbz	x0, 4550b8 <_obstack_memory_used@@Base+0xe568>
  454fd0:	str	x23, [x0]
  454fd4:	b	454e54 <_obstack_memory_used@@Base+0xe304>
  454fd8:	cmp	x9, x8
  454fdc:	b.ne	455004 <_obstack_memory_used@@Base+0xe4b4>  // b.any
  454fe0:	ldr	x0, [sp, #48]
  454fe4:	lsl	x8, x9, #1
  454fe8:	lsl	x1, x9, #4
  454fec:	str	x8, [sp, #32]
  454ff0:	bl	404490 <realloc@plt>
  454ff4:	cbz	x0, 4550d8 <_obstack_memory_used@@Base+0xe588>
  454ff8:	ldr	x8, [sp, #40]
  454ffc:	str	x0, [sp, #48]
  455000:	b	455008 <_obstack_memory_used@@Base+0xe4b8>
  455004:	ldr	x0, [sp, #48]
  455008:	ldr	x9, [x0]
  45500c:	cmp	x9, x23
  455010:	b.le	45503c <_obstack_memory_used@@Base+0xe4ec>
  455014:	cmp	x8, #0x1
  455018:	b.lt	455064 <_obstack_memory_used@@Base+0xe514>  // b.tstop
  45501c:	mov	x9, x8
  455020:	add	x10, x0, x9, lsl #3
  455024:	ldur	x11, [x10, #-8]
  455028:	subs	x8, x9, #0x1
  45502c:	mov	x9, x8
  455030:	str	x11, [x10]
  455034:	b.gt	455020 <_obstack_memory_used@@Base+0xe4d0>
  455038:	b	455064 <_obstack_memory_used@@Base+0xe514>
  45503c:	add	x9, x0, x8, lsl #3
  455040:	ldur	x9, [x9, #-8]
  455044:	cmp	x9, x23
  455048:	b.le	455064 <_obstack_memory_used@@Base+0xe514>
  45504c:	add	x10, x0, x8, lsl #3
  455050:	str	x9, [x10]
  455054:	ldur	x9, [x10, #-16]
  455058:	sub	x8, x8, #0x1
  45505c:	cmp	x9, x23
  455060:	b.gt	45504c <_obstack_memory_used@@Base+0xe4fc>
  455064:	str	x23, [x0, x8, lsl #3]
  455068:	b	454e48 <_obstack_memory_used@@Base+0xe2f8>
  45506c:	mov	w23, wzr
  455070:	ldr	x0, [sp, #48]
  455074:	bl	404700 <free@plt>
  455078:	b	455094 <_obstack_memory_used@@Base+0xe544>
  45507c:	lsl	x2, x26, #3
  455080:	mov	w1, wzr
  455084:	bl	404360 <memset@plt>
  455088:	ldr	x0, [sp, #48]
  45508c:	bl	404700 <free@plt>
  455090:	mov	w23, wzr
  455094:	mov	w0, w23
  455098:	ldp	x20, x19, [sp, #144]
  45509c:	ldp	x22, x21, [sp, #128]
  4550a0:	ldp	x24, x23, [sp, #112]
  4550a4:	ldp	x26, x25, [sp, #96]
  4550a8:	ldp	x28, x27, [sp, #80]
  4550ac:	ldp	x29, x30, [sp, #64]
  4550b0:	add	sp, sp, #0xa0
  4550b4:	ret
  4550b8:	stp	xzr, xzr, [sp, #32]
  4550bc:	mov	w23, #0xc                   	// #12
  4550c0:	b	455070 <_obstack_memory_used@@Base+0xe520>
  4550c4:	mov	w23, w0
  4550c8:	b	455070 <_obstack_memory_used@@Base+0xe520>
  4550cc:	stp	xzr, xzr, [sp, #32]
  4550d0:	mov	w23, #0xc                   	// #12
  4550d4:	b	455094 <_obstack_memory_used@@Base+0xe544>
  4550d8:	mov	w23, #0xc                   	// #12
  4550dc:	b	455070 <_obstack_memory_used@@Base+0xe520>
  4550e0:	sub	sp, sp, #0x140
  4550e4:	stp	x29, x30, [sp, #224]
  4550e8:	stp	x28, x27, [sp, #240]
  4550ec:	stp	x26, x25, [sp, #256]
  4550f0:	stp	x24, x23, [sp, #272]
  4550f4:	stp	x22, x21, [sp, #288]
  4550f8:	stp	x20, x19, [sp, #304]
  4550fc:	add	x29, sp, #0xe0
  455100:	ldr	x24, [x0, #152]
  455104:	stur	wzr, [x29, #-100]
  455108:	ldr	x8, [x0, #184]
  45510c:	mov	x19, x2
  455110:	mov	x20, x1
  455114:	mov	x25, x0
  455118:	ldr	x21, [x8, x2, lsl #3]
  45511c:	ldr	x8, [x3, #8]
  455120:	add	x9, x21, #0x8
  455124:	cmp	x21, #0x0
  455128:	csel	x28, xzr, x9, eq  // eq = none
  45512c:	cbz	x8, 455464 <_obstack_memory_used@@Base+0xe914>
  455130:	mov	x23, x3
  455134:	cbz	x21, 455478 <_obstack_memory_used@@Base+0xe928>
  455138:	sub	x0, x29, #0x60
  45513c:	mov	x1, x24
  455140:	mov	x2, x23
  455144:	stur	wzr, [x29, #-96]
  455148:	bl	4545a8 <_obstack_memory_used@@Base+0xda58>
  45514c:	ldur	w27, [x29, #-96]
  455150:	cbnz	w27, 4559e4 <_obstack_memory_used@@Base+0xee94>
  455154:	str	x25, [sp, #112]
  455158:	mov	x25, x0
  45515c:	ldr	x8, [x25, #56]!
  455160:	mov	x26, x0
  455164:	cbnz	x8, 4551dc <_obstack_memory_used@@Base+0xe68c>
  455168:	ldr	x8, [x23, #8]
  45516c:	lsl	x0, x8, #3
  455170:	stp	x8, xzr, [x26, #56]
  455174:	bl	404250 <malloc@plt>
  455178:	cmp	x0, #0x0
  45517c:	mov	w27, #0xc                   	// #12
  455180:	csel	w8, w27, wzr, eq  // eq = none
  455184:	str	x0, [x26, #72]
  455188:	stur	w8, [x29, #-96]
  45518c:	cbz	x0, 4559e4 <_obstack_memory_used@@Base+0xee94>
  455190:	ldr	x8, [x23, #8]
  455194:	cmp	x8, #0x1
  455198:	b.lt	4551dc <_obstack_memory_used@@Base+0xe68c>  // b.tstop
  45519c:	mov	x26, x21
  4551a0:	mov	x21, xzr
  4551a4:	mov	w22, #0x18                  	// #24
  4551a8:	ldr	x8, [x23, #16]
  4551ac:	ldr	x9, [x24, #56]
  4551b0:	mov	x0, x25
  4551b4:	ldr	x8, [x8, x21, lsl #3]
  4551b8:	madd	x1, x8, x22, x9
  4551bc:	bl	450858 <_obstack_memory_used@@Base+0x9d08>
  4551c0:	cbnz	w0, 4559dc <_obstack_memory_used@@Base+0xee8c>
  4551c4:	ldr	x8, [x23, #8]
  4551c8:	add	x21, x21, #0x1
  4551cc:	cmp	x21, x8
  4551d0:	b.lt	4551a8 <_obstack_memory_used@@Base+0xe658>  // b.tstop
  4551d4:	mov	x21, x26
  4551d8:	stur	wzr, [x29, #-96]
  4551dc:	mov	x0, x23
  4551e0:	mov	x1, x28
  4551e4:	mov	x2, x25
  4551e8:	bl	455a14 <_obstack_memory_used@@Base+0xeec4>
  4551ec:	stur	w0, [x29, #-100]
  4551f0:	cbnz	w0, 4559f4 <_obstack_memory_used@@Base+0xeea4>
  4551f4:	ldr	x8, [x20, #40]
  4551f8:	ldr	x25, [sp, #112]
  4551fc:	cbz	x8, 455478 <_obstack_memory_used@@Base+0xe928>
  455200:	cmp	x8, #0x1
  455204:	str	x21, [sp, #104]
  455208:	b.lt	455470 <_obstack_memory_used@@Base+0xe920>  // b.tstop
  45520c:	ldr	x8, [sp, #112]
  455210:	mov	x22, xzr
  455214:	mov	w14, #0x18                  	// #24
  455218:	ldr	x25, [x8, #216]
  45521c:	b	455230 <_obstack_memory_used@@Base+0xe6e0>
  455220:	ldr	x8, [x20, #40]
  455224:	add	x22, x22, #0x1
  455228:	cmp	x22, x8
  45522c:	b.ge	455470 <_obstack_memory_used@@Base+0xe920>  // b.tcont
  455230:	ldr	x8, [x20, #48]
  455234:	mov	w9, #0x28                  	// #40
  455238:	ldr	x8, [x8, x22, lsl #3]
  45523c:	madd	x9, x8, x9, x25
  455240:	ldr	x9, [x9, #16]
  455244:	cmp	x9, x19
  455248:	b.ge	455220 <_obstack_memory_used@@Base+0xe6d0>  // b.tcont
  45524c:	mov	w9, #0x28                  	// #40
  455250:	madd	x9, x8, x9, x25
  455254:	ldr	x9, [x9, #8]
  455258:	cmp	x9, x19
  45525c:	b.lt	455220 <_obstack_memory_used@@Base+0xe6d0>  // b.tstop
  455260:	mov	w9, #0x28                  	// #40
  455264:	madd	x8, x8, x9, x25
  455268:	ldr	x10, [x8]
  45526c:	ldr	x9, [x24]
  455270:	ldr	x11, [x8, #24]
  455274:	lsl	x8, x10, #4
  455278:	ldr	x21, [x9, x8]
  45527c:	ldr	x8, [x23, #8]
  455280:	cmp	x11, x19
  455284:	b.ne	4552ec <_obstack_memory_used@@Base+0xe79c>  // b.any
  455288:	cmp	x8, #0x1
  45528c:	b.lt	455220 <_obstack_memory_used@@Base+0xe6d0>  // b.tstop
  455290:	ldr	x10, [x23, #16]
  455294:	mov	x26, #0xffffffffffffffff    	// #-1
  455298:	mov	x1, #0xffffffffffffffff    	// #-1
  45529c:	b	4552bc <_obstack_memory_used@@Base+0xe76c>
  4552a0:	lsl	x12, x11, #4
  4552a4:	ldr	x12, [x9, x12]
  4552a8:	cmp	x21, x12
  4552ac:	csel	x26, x11, x26, eq  // eq = none
  4552b0:	subs	x8, x8, #0x1
  4552b4:	add	x10, x10, #0x8
  4552b8:	b.eq	455358 <_obstack_memory_used@@Base+0xe808>  // b.none
  4552bc:	ldr	x11, [x10]
  4552c0:	add	x12, x9, x11, lsl #4
  4552c4:	ldrb	w12, [x12, #8]
  4552c8:	cmp	w12, #0x9
  4552cc:	b.eq	4552a0 <_obstack_memory_used@@Base+0xe750>  // b.none
  4552d0:	cmp	w12, #0x8
  4552d4:	b.ne	4552b0 <_obstack_memory_used@@Base+0xe760>  // b.any
  4552d8:	lsl	x12, x11, #4
  4552dc:	ldr	x12, [x9, x12]
  4552e0:	cmp	x21, x12
  4552e4:	csel	x1, x11, x1, eq  // eq = none
  4552e8:	b	4552b0 <_obstack_memory_used@@Base+0xe760>
  4552ec:	cmp	x8, #0x1
  4552f0:	b.lt	455220 <_obstack_memory_used@@Base+0xe6d0>  // b.tstop
  4552f4:	mov	x26, xzr
  4552f8:	ldr	x10, [x23, #16]
  4552fc:	ldr	x1, [x10, x26, lsl #3]
  455300:	add	x10, x9, x1, lsl #4
  455304:	ldr	w10, [x10, #8]
  455308:	and	w10, w10, #0xfe
  45530c:	orr	w10, w10, #0x1
  455310:	cmp	w10, #0x9
  455314:	b.ne	455344 <_obstack_memory_used@@Base+0xe7f4>  // b.any
  455318:	lsl	x10, x1, #4
  45531c:	ldr	x9, [x9, x10]
  455320:	cmp	x21, x9
  455324:	b.ne	455344 <_obstack_memory_used@@Base+0xe7f4>  // b.any
  455328:	mov	x0, x24
  45532c:	mov	x2, x23
  455330:	mov	x3, x28
  455334:	bl	455bdc <_obstack_memory_used@@Base+0xf08c>
  455338:	cbnz	w0, 4559b0 <_obstack_memory_used@@Base+0xee60>
  45533c:	ldr	x8, [x23, #8]
  455340:	mov	w14, #0x18                  	// #24
  455344:	add	x26, x26, #0x1
  455348:	cmp	x26, x8
  45534c:	b.ge	455220 <_obstack_memory_used@@Base+0xe6d0>  // b.tcont
  455350:	ldr	x9, [x24]
  455354:	b	4552f8 <_obstack_memory_used@@Base+0xe7a8>
  455358:	tbnz	x1, #63, 455374 <_obstack_memory_used@@Base+0xe824>
  45535c:	mov	x0, x24
  455360:	mov	x2, x23
  455364:	mov	x3, x28
  455368:	bl	455bdc <_obstack_memory_used@@Base+0xf08c>
  45536c:	mov	w14, #0x18                  	// #24
  455370:	cbnz	w0, 4559b0 <_obstack_memory_used@@Base+0xee60>
  455374:	tbnz	x26, #63, 455220 <_obstack_memory_used@@Base+0xe6d0>
  455378:	ldr	x8, [x23, #8]
  45537c:	cmp	x8, #0x1
  455380:	b.lt	455220 <_obstack_memory_used@@Base+0xe6d0>  // b.tstop
  455384:	mov	x21, xzr
  455388:	b	4553b8 <_obstack_memory_used@@Base+0xe868>
  45538c:	mov	x0, x24
  455390:	mov	x2, x23
  455394:	mov	x3, x28
  455398:	bl	455bdc <_obstack_memory_used@@Base+0xf08c>
  45539c:	cbnz	w0, 4559b0 <_obstack_memory_used@@Base+0xee60>
  4553a0:	ldr	x8, [x23, #8]
  4553a4:	sub	x21, x21, #0x1
  4553a8:	mov	w14, #0x18                  	// #24
  4553ac:	add	x21, x21, #0x1
  4553b0:	cmp	x21, x8
  4553b4:	b.ge	455220 <_obstack_memory_used@@Base+0xe6d0>  // b.tcont
  4553b8:	ldr	x9, [x23, #16]
  4553bc:	ldr	x1, [x9, x21, lsl #3]
  4553c0:	ldr	x9, [x24, #56]
  4553c4:	madd	x10, x1, x14, x9
  4553c8:	ldr	x10, [x10, #8]
  4553cc:	subs	x10, x10, #0x1
  4553d0:	b.lt	455410 <_obstack_memory_used@@Base+0xe8c0>  // b.tstop
  4553d4:	madd	x9, x1, x14, x9
  4553d8:	ldr	x9, [x9, #16]
  4553dc:	mov	x11, xzr
  4553e0:	b.eq	455404 <_obstack_memory_used@@Base+0xe8b4>  // b.none
  4553e4:	add	x12, x11, x10
  4553e8:	lsr	x12, x12, #1
  4553ec:	ldr	x13, [x9, x12, lsl #3]
  4553f0:	cmp	x13, x26
  4553f4:	csinc	x11, x11, x12, ge  // ge = tcont
  4553f8:	csel	x10, x10, x12, lt  // lt = tstop
  4553fc:	cmp	x11, x10
  455400:	b.cc	4553e4 <_obstack_memory_used@@Base+0xe894>  // b.lo, b.ul, b.last
  455404:	ldr	x9, [x9, x11, lsl #3]
  455408:	cmp	x9, x26
  45540c:	b.eq	4553ac <_obstack_memory_used@@Base+0xe85c>  // b.none
  455410:	ldr	x9, [x24, #48]
  455414:	madd	x10, x1, x14, x9
  455418:	ldr	x10, [x10, #8]
  45541c:	subs	x10, x10, #0x1
  455420:	b.lt	45538c <_obstack_memory_used@@Base+0xe83c>  // b.tstop
  455424:	madd	x9, x1, x14, x9
  455428:	ldr	x9, [x9, #16]
  45542c:	mov	x11, xzr
  455430:	b.eq	455454 <_obstack_memory_used@@Base+0xe904>  // b.none
  455434:	add	x12, x11, x10
  455438:	lsr	x12, x12, #1
  45543c:	ldr	x13, [x9, x12, lsl #3]
  455440:	cmp	x13, x26
  455444:	csinc	x11, x11, x12, ge  // ge = tcont
  455448:	csel	x10, x10, x12, lt  // lt = tstop
  45544c:	cmp	x11, x10
  455450:	b.cc	455434 <_obstack_memory_used@@Base+0xe8e4>  // b.lo, b.ul, b.last
  455454:	ldr	x9, [x9, x11, lsl #3]
  455458:	cmp	x9, x26
  45545c:	b.ne	45538c <_obstack_memory_used@@Base+0xe83c>  // b.any
  455460:	b	4553ac <_obstack_memory_used@@Base+0xe85c>
  455464:	ldr	x8, [x20]
  455468:	str	xzr, [x8, x19, lsl #3]
  45546c:	b	455498 <_obstack_memory_used@@Base+0xe948>
  455470:	ldp	x21, x25, [sp, #104]
  455474:	stur	wzr, [x29, #-100]
  455478:	sub	x0, x29, #0x64
  45547c:	mov	x1, x24
  455480:	mov	x2, x23
  455484:	bl	4545a8 <_obstack_memory_used@@Base+0xda58>
  455488:	ldr	x8, [x20]
  45548c:	str	x0, [x8, x19, lsl #3]
  455490:	ldur	w27, [x29, #-100]
  455494:	cbnz	w27, 45598c <_obstack_memory_used@@Base+0xee3c>
  455498:	cbz	x21, 455988 <_obstack_memory_used@@Base+0xee38>
  45549c:	ldr	x8, [x25, #184]
  4554a0:	ldr	x8, [x8, x19, lsl #3]
  4554a4:	ldrb	w8, [x8, #104]
  4554a8:	tbz	w8, #6, 455988 <_obstack_memory_used@@Base+0xee38>
  4554ac:	ldr	x8, [x25, #200]
  4554b0:	ldr	x24, [x25, #152]
  4554b4:	cmp	x8, #0x1
  4554b8:	b.lt	455504 <_obstack_memory_used@@Base+0xe9b4>  // b.tstop
  4554bc:	ldr	x9, [x25, #216]
  4554c0:	mov	x21, xzr
  4554c4:	mov	w10, #0x28                  	// #40
  4554c8:	mov	x11, x8
  4554cc:	add	x12, x11, x21
  4554d0:	cmp	x12, #0x0
  4554d4:	cinc	x12, x12, lt  // lt = tstop
  4554d8:	asr	x12, x12, #1
  4554dc:	madd	x13, x12, x10, x9
  4554e0:	ldr	x13, [x13, #8]
  4554e4:	cmp	x13, x19
  4554e8:	csel	x11, x11, x12, lt  // lt = tstop
  4554ec:	csinc	x21, x21, x12, ge  // ge = tcont
  4554f0:	cmp	x21, x11
  4554f4:	b.lt	4554cc <_obstack_memory_used@@Base+0xe97c>  // b.tstop
  4554f8:	cmp	x21, x8
  4554fc:	b.lt	455510 <_obstack_memory_used@@Base+0xe9c0>  // b.tstop
  455500:	b	455984 <_obstack_memory_used@@Base+0xee34>
  455504:	mov	x21, xzr
  455508:	cmp	x21, x8
  45550c:	b.ge	455984 <_obstack_memory_used@@Base+0xee34>  // b.tcont
  455510:	cmn	x21, #0x1
  455514:	b.eq	455984 <_obstack_memory_used@@Base+0xee34>  // b.none
  455518:	ldr	x8, [x25, #216]
  45551c:	mov	w9, #0x28                  	// #40
  455520:	madd	x8, x21, x9, x8
  455524:	ldr	x8, [x8, #8]
  455528:	cmp	x8, x19
  45552c:	b.ne	455984 <_obstack_memory_used@@Base+0xee34>  // b.any
  455530:	stur	xzr, [x29, #-96]
  455534:	ldr	x8, [x28, #8]
  455538:	cmp	x8, #0x0
  45553c:	b.le	455984 <_obstack_memory_used@@Base+0xee34>
  455540:	add	x8, x20, #0x20
  455544:	stp	x8, x28, [sp, #88]
  455548:	sub	x8, x29, #0x60
  45554c:	add	x9, x19, #0x1
  455550:	str	x9, [sp, #40]
  455554:	mov	w9, #0x1                   	// #1
  455558:	add	x8, x8, #0x20
  45555c:	mov	x23, xzr
  455560:	str	x8, [sp, #8]
  455564:	dup	v0.2d, x9
  455568:	stp	xzr, x25, [sp, #104]
  45556c:	str	q0, [sp, #16]
  455570:	b	455588 <_obstack_memory_used@@Base+0xea38>
  455574:	ldr	x28, [sp, #96]
  455578:	add	x23, x23, #0x1
  45557c:	ldr	x8, [x28, #8]
  455580:	cmp	x23, x8
  455584:	b.ge	4559bc <_obstack_memory_used@@Base+0xee6c>  // b.tcont
  455588:	ldr	x8, [x28, #16]
  45558c:	ldr	x9, [x20, #16]
  455590:	ldr	x26, [x8, x23, lsl #3]
  455594:	ldr	x8, [x24]
  455598:	cmp	x26, x9
  45559c:	add	x8, x8, x26, lsl #4
  4555a0:	ldrb	w8, [x8, #8]
  4555a4:	b.ne	4555c0 <_obstack_memory_used@@Base+0xea70>  // b.any
  4555a8:	cmp	w8, #0x4
  4555ac:	b.ne	455574 <_obstack_memory_used@@Base+0xea24>  // b.any
  4555b0:	ldr	x8, [x20, #24]
  4555b4:	cmp	x8, x19
  4555b8:	b.ne	4555c8 <_obstack_memory_used@@Base+0xea78>  // b.any
  4555bc:	b	455574 <_obstack_memory_used@@Base+0xea24>
  4555c0:	cmp	w8, #0x4
  4555c4:	b.ne	455574 <_obstack_memory_used@@Base+0xea24>  // b.any
  4555c8:	ldr	x8, [x25, #216]
  4555cc:	mov	w9, #0x28                  	// #40
  4555d0:	mov	x28, x21
  4555d4:	madd	x27, x21, x9, x8
  4555d8:	b	4555fc <_obstack_memory_used@@Base+0xeaac>
  4555dc:	mov	x22, x12
  4555e0:	ldr	x8, [x25, #216]
  4555e4:	mov	w9, #0x28                  	// #40
  4555e8:	madd	x27, x28, x9, x8
  4555ec:	ldrb	w8, [x27, #32]
  4555f0:	add	x27, x27, #0x28
  4555f4:	add	x28, x28, #0x1
  4555f8:	cbz	w8, 455574 <_obstack_memory_used@@Base+0xea24>
  4555fc:	ldr	x8, [x27]
  455600:	cmp	x8, x26
  455604:	b.ne	4555ec <_obstack_memory_used@@Base+0xea9c>  // b.any
  455608:	ldp	x9, x8, [x27, #16]
  45560c:	subs	x8, x8, x9
  455610:	add	x5, x8, x19
  455614:	b.eq	455624 <_obstack_memory_used@@Base+0xead4>  // b.none
  455618:	ldr	x8, [x24, #24]
  45561c:	add	x8, x8, x26, lsl #3
  455620:	b	455634 <_obstack_memory_used@@Base+0xeae4>
  455624:	ldr	x8, [x24, #40]
  455628:	mov	w9, #0x18                  	// #24
  45562c:	madd	x8, x26, x9, x8
  455630:	ldr	x8, [x8, #16]
  455634:	ldr	x9, [x20, #24]
  455638:	cmp	x5, x9
  45563c:	b.gt	4555ec <_obstack_memory_used@@Base+0xea9c>
  455640:	ldr	x9, [x20]
  455644:	ldr	x10, [x9, x5, lsl #3]
  455648:	cbz	x10, 4555ec <_obstack_memory_used@@Base+0xea9c>
  45564c:	ldr	x9, [x10, #16]
  455650:	subs	x9, x9, #0x1
  455654:	b.lt	4555ec <_obstack_memory_used@@Base+0xea9c>  // b.tstop
  455658:	ldr	x4, [x8]
  45565c:	ldr	x8, [x10, #24]
  455660:	mov	x10, xzr
  455664:	b.eq	455688 <_obstack_memory_used@@Base+0xeb38>  // b.none
  455668:	add	x11, x10, x9
  45566c:	lsr	x11, x11, #1
  455670:	ldr	x12, [x8, x11, lsl #3]
  455674:	cmp	x12, x4
  455678:	csinc	x10, x10, x11, ge  // ge = tcont
  45567c:	csel	x9, x9, x11, lt  // lt = tstop
  455680:	cmp	x10, x9
  455684:	b.cc	455668 <_obstack_memory_used@@Base+0xeb18>  // b.lo, b.ul, b.last
  455688:	ldr	x8, [x8, x10, lsl #3]
  45568c:	cmp	x8, x4
  455690:	b.ne	4555ec <_obstack_memory_used@@Base+0xea9c>  // b.any
  455694:	ldr	x1, [sp, #88]
  455698:	mov	x0, x25
  45569c:	mov	x2, x26
  4556a0:	mov	x3, x19
  4556a4:	bl	455ef4 <_obstack_memory_used@@Base+0xf3a4>
  4556a8:	tbnz	w0, #0, 4555ec <_obstack_memory_used@@Base+0xea9c>
  4556ac:	ldr	x8, [sp, #104]
  4556b0:	cbz	x8, 4556d0 <_obstack_memory_used@@Base+0xeb80>
  4556b4:	ldr	x8, [sp, #56]
  4556b8:	stp	x26, x19, [x29, #-80]
  4556bc:	cbz	x8, 455784 <_obstack_memory_used@@Base+0xec34>
  4556c0:	cbnz	x22, 455974 <_obstack_memory_used@@Base+0xee24>
  4556c4:	ldr	x8, [sp, #64]
  4556c8:	str	x28, [x8]
  4556cc:	b	4557e4 <_obstack_memory_used@@Base+0xec94>
  4556d0:	ldp	x22, x8, [x20, #40]
  4556d4:	ldp	q1, q0, [x20, #16]
  4556d8:	ldr	q2, [x20]
  4556dc:	cmp	x22, #0x1
  4556e0:	stp	q1, q0, [x29, #-80]
  4556e4:	stur	q2, [x29, #-96]
  4556e8:	stp	x22, x8, [x29, #-56]
  4556ec:	b.lt	455774 <_obstack_memory_used@@Base+0xec24>  // b.tstop
  4556f0:	lsl	x0, x22, #3
  4556f4:	stur	x22, [x29, #-64]
  4556f8:	str	x0, [sp, #104]
  4556fc:	bl	404250 <malloc@plt>
  455700:	stur	x0, [x29, #-48]
  455704:	cbz	x0, 4559fc <_obstack_memory_used@@Base+0xeeac>
  455708:	ldr	x1, [x20, #48]
  45570c:	ldr	x2, [sp, #104]
  455710:	mov	x27, x0
  455714:	bl	403ec0 <memcpy@plt>
  455718:	stp	x26, x19, [x29, #-80]
  45571c:	mov	x0, x27
  455720:	lsl	x8, x22, #1
  455724:	lsl	x1, x22, #4
  455728:	str	x8, [sp, #56]
  45572c:	stur	x8, [x29, #-64]
  455730:	bl	404490 <realloc@plt>
  455734:	cbz	x0, 455a0c <_obstack_memory_used@@Base+0xeebc>
  455738:	ldur	x22, [x29, #-56]
  45573c:	stur	x0, [x29, #-48]
  455740:	ldr	x8, [x0]
  455744:	cmp	x8, x28
  455748:	b.le	4557b4 <_obstack_memory_used@@Base+0xec64>
  45574c:	cmp	x22, #0x1
  455750:	b.lt	4557dc <_obstack_memory_used@@Base+0xec8c>  // b.tstop
  455754:	mov	x8, x22
  455758:	add	x9, x0, x8, lsl #3
  45575c:	ldur	x10, [x9, #-8]
  455760:	subs	x22, x8, #0x1
  455764:	mov	x8, x22
  455768:	str	x10, [x9]
  45576c:	b.gt	455758 <_obstack_memory_used@@Base+0xec08>
  455770:	b	4557dc <_obstack_memory_used@@Base+0xec8c>
  455774:	ldr	x8, [sp, #8]
  455778:	stp	xzr, xzr, [x8]
  45577c:	str	xzr, [x8, #16]
  455780:	stp	x26, x19, [x29, #-80]
  455784:	ldr	q0, [sp, #16]
  455788:	mov	w0, #0x8                   	// #8
  45578c:	stur	q0, [x29, #-64]
  455790:	bl	404250 <malloc@plt>
  455794:	stur	x0, [x29, #-48]
  455798:	cbz	x0, 4559fc <_obstack_memory_used@@Base+0xeeac>
  45579c:	mov	w8, #0x1                   	// #1
  4557a0:	stp	x0, x8, [sp, #64]
  4557a4:	mov	w8, #0x1                   	// #1
  4557a8:	str	x28, [x0]
  4557ac:	str	x8, [sp, #56]
  4557b0:	b	4557f4 <_obstack_memory_used@@Base+0xeca4>
  4557b4:	add	x8, x0, x22, lsl #3
  4557b8:	ldur	x8, [x8, #-8]
  4557bc:	cmp	x8, x28
  4557c0:	b.le	4557dc <_obstack_memory_used@@Base+0xec8c>
  4557c4:	add	x9, x0, x22, lsl #3
  4557c8:	str	x8, [x9]
  4557cc:	ldur	x8, [x9, #-16]
  4557d0:	sub	x22, x22, #0x1
  4557d4:	cmp	x8, x28
  4557d8:	b.gt	4557c4 <_obstack_memory_used@@Base+0xec74>
  4557dc:	str	x0, [sp, #64]
  4557e0:	str	x28, [x0, x22, lsl #3]
  4557e4:	ldur	x8, [x29, #-56]
  4557e8:	add	x8, x8, #0x1
  4557ec:	str	x8, [sp, #72]
  4557f0:	stur	x8, [x29, #-56]
  4557f4:	ldur	x8, [x29, #-96]
  4557f8:	sub	x1, x29, #0x60
  4557fc:	mov	x0, x25
  455800:	str	x8, [sp, #104]
  455804:	ldr	x8, [x8, x19, lsl #3]
  455808:	str	x8, [sp, #80]
  45580c:	bl	454d40 <_obstack_memory_used@@Base+0xe1f0>
  455810:	cbnz	w0, 4559ec <_obstack_memory_used@@Base+0xee9c>
  455814:	ldr	x22, [x20, #8]
  455818:	cbz	x22, 45589c <_obstack_memory_used@@Base+0xed4c>
  45581c:	str	x23, [sp, #48]
  455820:	tbnz	x19, #63, 455894 <_obstack_memory_used@@Base+0xed44>
  455824:	ldr	x23, [sp, #104]
  455828:	ldr	x25, [sp, #40]
  45582c:	b	455844 <_obstack_memory_used@@Base+0xecf4>
  455830:	str	x8, [x22]
  455834:	subs	x25, x25, #0x1
  455838:	add	x23, x23, #0x8
  45583c:	add	x22, x22, #0x8
  455840:	b.eq	455894 <_obstack_memory_used@@Base+0xed44>  // b.none
  455844:	ldr	x9, [x22]
  455848:	ldr	x8, [x23]
  45584c:	cbz	x9, 455830 <_obstack_memory_used@@Base+0xece0>
  455850:	cbz	x8, 455834 <_obstack_memory_used@@Base+0xece4>
  455854:	add	x1, x9, #0x8
  455858:	add	x2, x8, #0x8
  45585c:	sub	x0, x29, #0x28
  455860:	bl	453210 <_obstack_memory_used@@Base+0xc6c0>
  455864:	stur	w0, [x29, #-12]
  455868:	cbnz	w0, 4559ec <_obstack_memory_used@@Base+0xee9c>
  45586c:	sub	x0, x29, #0xc
  455870:	sub	x2, x29, #0x28
  455874:	mov	x1, x24
  455878:	bl	4545a8 <_obstack_memory_used@@Base+0xda58>
  45587c:	str	x0, [x22]
  455880:	ldur	x0, [x29, #-24]
  455884:	bl	404700 <free@plt>
  455888:	ldur	w27, [x29, #-12]
  45588c:	cbz	w27, 455834 <_obstack_memory_used@@Base+0xece4>
  455890:	b	4559c0 <_obstack_memory_used@@Base+0xee70>
  455894:	ldr	x25, [sp, #112]
  455898:	ldr	x23, [sp, #48]
  45589c:	ldp	x12, x9, [sp, #72]
  4558a0:	ldr	x8, [sp, #104]
  4558a4:	subs	x22, x12, #0x1
  4558a8:	str	x9, [x8, x19, lsl #3]
  4558ac:	b.lt	4555dc <_obstack_memory_used@@Base+0xea8c>  // b.tstop
  4558b0:	mov	x8, xzr
  4558b4:	b.eq	4558e4 <_obstack_memory_used@@Base+0xed94>  // b.none
  4558b8:	ldr	x13, [sp, #64]
  4558bc:	mov	x9, x22
  4558c0:	add	x10, x8, x9
  4558c4:	lsr	x10, x10, #1
  4558c8:	ldr	x11, [x13, x10, lsl #3]
  4558cc:	cmp	x11, x28
  4558d0:	csinc	x8, x8, x10, ge  // ge = tcont
  4558d4:	csel	x9, x9, x10, lt  // lt = tstop
  4558d8:	cmp	x8, x9
  4558dc:	b.cc	4558c0 <_obstack_memory_used@@Base+0xed70>  // b.lo, b.ul, b.last
  4558e0:	b	4558e8 <_obstack_memory_used@@Base+0xed98>
  4558e4:	ldr	x13, [sp, #64]
  4558e8:	ldr	x9, [x13, x8, lsl #3]
  4558ec:	cmp	x9, x28
  4558f0:	csinv	x9, x8, xzr, eq  // eq = none
  4558f4:	tbnz	x9, #63, 4555dc <_obstack_memory_used@@Base+0xea8c>
  4558f8:	cmp	x12, x9
  4558fc:	b.le	4555dc <_obstack_memory_used@@Base+0xea8c>
  455900:	cmp	x22, x9
  455904:	stur	x22, [x29, #-56]
  455908:	b.le	4555e0 <_obstack_memory_used@@Base+0xea90>
  45590c:	add	x9, x8, #0x1
  455910:	cmp	x22, x9
  455914:	csinc	x9, x22, x8, gt
  455918:	sub	x9, x9, x8
  45591c:	cmp	x9, #0x4
  455920:	b.cc	455958 <_obstack_memory_used@@Base+0xee08>  // b.lo, b.ul, b.last
  455924:	and	x10, x9, #0xfffffffffffffffc
  455928:	add	x11, x13, x8, lsl #3
  45592c:	add	x8, x8, x10
  455930:	add	x11, x11, #0x10
  455934:	mov	x12, x10
  455938:	ldur	q0, [x11, #-8]
  45593c:	ldur	q1, [x11, #8]
  455940:	subs	x12, x12, #0x4
  455944:	stp	q0, q1, [x11, #-16]
  455948:	add	x11, x11, #0x20
  45594c:	b.ne	455938 <_obstack_memory_used@@Base+0xede8>  // b.any
  455950:	cmp	x9, x10
  455954:	b.eq	4555e0 <_obstack_memory_used@@Base+0xea90>  // b.none
  455958:	add	x9, x13, x8, lsl #3
  45595c:	ldr	x10, [x9, #8]
  455960:	add	x8, x8, #0x1
  455964:	cmp	x8, x22
  455968:	str	x10, [x9]
  45596c:	b.lt	455958 <_obstack_memory_used@@Base+0xee08>  // b.tstop
  455970:	b	4555e0 <_obstack_memory_used@@Base+0xea90>
  455974:	ldp	x8, x0, [sp, #56]
  455978:	cmp	x8, x22
  45597c:	b.eq	455720 <_obstack_memory_used@@Base+0xebd0>  // b.none
  455980:	b	455740 <_obstack_memory_used@@Base+0xebf0>
  455984:	stur	wzr, [x29, #-100]
  455988:	mov	w27, wzr
  45598c:	mov	w0, w27
  455990:	ldp	x20, x19, [sp, #304]
  455994:	ldp	x22, x21, [sp, #288]
  455998:	ldp	x24, x23, [sp, #272]
  45599c:	ldp	x26, x25, [sp, #256]
  4559a0:	ldp	x28, x27, [sp, #240]
  4559a4:	ldp	x29, x30, [sp, #224]
  4559a8:	add	sp, sp, #0x140
  4559ac:	ret
  4559b0:	mov	w27, w0
  4559b4:	stur	w0, [x29, #-100]
  4559b8:	b	45598c <_obstack_memory_used@@Base+0xee3c>
  4559bc:	mov	w27, wzr
  4559c0:	ldur	x8, [x29, #-96]
  4559c4:	cbz	x8, 4559d0 <_obstack_memory_used@@Base+0xee80>
  4559c8:	ldur	x0, [x29, #-48]
  4559cc:	bl	404700 <free@plt>
  4559d0:	stur	w27, [x29, #-100]
  4559d4:	cbz	w27, 455988 <_obstack_memory_used@@Base+0xee38>
  4559d8:	b	45598c <_obstack_memory_used@@Base+0xee3c>
  4559dc:	mov	w27, #0xc                   	// #12
  4559e0:	stur	w0, [x29, #-96]
  4559e4:	stur	w27, [x29, #-100]
  4559e8:	b	45598c <_obstack_memory_used@@Base+0xee3c>
  4559ec:	mov	w27, w0
  4559f0:	b	4559c0 <_obstack_memory_used@@Base+0xee70>
  4559f4:	mov	w27, w0
  4559f8:	b	45598c <_obstack_memory_used@@Base+0xee3c>
  4559fc:	ldr	x8, [sp, #8]
  455a00:	mov	w27, #0xc                   	// #12
  455a04:	stp	xzr, xzr, [x8]
  455a08:	b	4559c0 <_obstack_memory_used@@Base+0xee70>
  455a0c:	mov	w27, #0xc                   	// #12
  455a10:	b	4559c0 <_obstack_memory_used@@Base+0xee70>
  455a14:	stp	x29, x30, [sp, #-48]!
  455a18:	stp	x22, x21, [sp, #16]
  455a1c:	stp	x20, x19, [sp, #32]
  455a20:	ldr	x9, [x1, #8]
  455a24:	mov	x29, sp
  455a28:	cbz	x9, 455bc0 <_obstack_memory_used@@Base+0xf070>
  455a2c:	ldr	x10, [x2, #8]
  455a30:	mov	x20, x2
  455a34:	cbz	x10, 455bc0 <_obstack_memory_used@@Base+0xf070>
  455a38:	ldp	x8, x13, [x0]
  455a3c:	add	x11, x10, x9
  455a40:	mov	x21, x1
  455a44:	mov	x19, x0
  455a48:	add	x12, x13, x11
  455a4c:	cmp	x12, x8
  455a50:	b.le	455a7c <_obstack_memory_used@@Base+0xef2c>
  455a54:	ldr	x0, [x19, #16]
  455a58:	add	x22, x8, x11
  455a5c:	lsl	x1, x22, #3
  455a60:	bl	404490 <realloc@plt>
  455a64:	cbz	x0, 455bd4 <_obstack_memory_used@@Base+0xf084>
  455a68:	str	x0, [x19, #16]
  455a6c:	str	x22, [x19]
  455a70:	ldr	x13, [x19, #8]
  455a74:	ldr	x9, [x21, #8]
  455a78:	ldr	x10, [x20, #8]
  455a7c:	ldr	x11, [x21, #16]
  455a80:	ldr	x12, [x20, #16]
  455a84:	add	x8, x9, x13
  455a88:	add	x8, x8, x10
  455a8c:	sub	x13, x13, #0x1
  455a90:	sub	x9, x9, #0x1
  455a94:	mov	x14, x10
  455a98:	sub	x10, x14, #0x1
  455a9c:	ldr	x16, [x12, x10, lsl #3]
  455aa0:	ldr	x15, [x11, x9, lsl #3]
  455aa4:	cmp	x15, x16
  455aa8:	b.eq	455ad0 <_obstack_memory_used@@Base+0xef80>  // b.none
  455aac:	b.lt	455ac0 <_obstack_memory_used@@Base+0xef70>  // b.tstop
  455ab0:	cmp	x9, #0x0
  455ab4:	sub	x9, x9, #0x1
  455ab8:	b.gt	455aa0 <_obstack_memory_used@@Base+0xef50>
  455abc:	b	455b28 <_obstack_memory_used@@Base+0xefd8>
  455ac0:	cmp	x14, #0x2
  455ac4:	mov	x14, x10
  455ac8:	b.ge	455a98 <_obstack_memory_used@@Base+0xef48>  // b.tcont
  455acc:	b	455b28 <_obstack_memory_used@@Base+0xefd8>
  455ad0:	tbnz	x13, #63, 455af8 <_obstack_memory_used@@Base+0xefa8>
  455ad4:	ldr	x17, [x19, #16]
  455ad8:	ldr	x16, [x17, x13, lsl #3]
  455adc:	cmp	x16, x15
  455ae0:	b.le	455b00 <_obstack_memory_used@@Base+0xefb0>
  455ae4:	sub	x16, x13, #0x1
  455ae8:	cmp	x13, #0x0
  455aec:	mov	x13, x16
  455af0:	b.gt	455ad8 <_obstack_memory_used@@Base+0xef88>
  455af4:	b	455b08 <_obstack_memory_used@@Base+0xefb8>
  455af8:	mov	x16, x13
  455afc:	b	455b08 <_obstack_memory_used@@Base+0xefb8>
  455b00:	mov	x16, x13
  455b04:	b.eq	455b18 <_obstack_memory_used@@Base+0xefc8>  // b.none
  455b08:	ldr	x13, [x19, #16]
  455b0c:	sub	x8, x8, #0x1
  455b10:	str	x15, [x13, x8, lsl #3]
  455b14:	mov	x13, x16
  455b18:	cmp	x9, #0x1
  455b1c:	b.lt	455b28 <_obstack_memory_used@@Base+0xefd8>  // b.tstop
  455b20:	cmp	x14, #0x2
  455b24:	b.ge	455a90 <_obstack_memory_used@@Base+0xef40>  // b.tcont
  455b28:	ldp	x12, x0, [x19, #8]
  455b2c:	ldr	x13, [x21, #8]
  455b30:	ldr	x14, [x20, #8]
  455b34:	subs	x9, x12, #0x1
  455b38:	add	x9, x9, x13
  455b3c:	add	x10, x9, x14
  455b40:	sub	x15, x10, x8
  455b44:	add	x9, x15, #0x1
  455b48:	subs	x11, x12, #0x1
  455b4c:	add	x16, x9, x12
  455b50:	str	x16, [x19, #8]
  455b54:	b.lt	455bb0 <_obstack_memory_used@@Base+0xf060>  // b.tstop
  455b58:	tbnz	x15, #63, 455bb0 <_obstack_memory_used@@Base+0xf060>
  455b5c:	add	x12, x12, x14
  455b60:	add	x12, x12, x13
  455b64:	sub	x12, x12, x8
  455b68:	add	x12, x0, x12, lsl #3
  455b6c:	ldr	x14, [x0, x10, lsl #3]
  455b70:	ldr	x13, [x0, x11, lsl #3]
  455b74:	cmp	x14, x13
  455b78:	b.gt	455b94 <_obstack_memory_used@@Base+0xf044>
  455b7c:	sub	x14, x11, #0x1
  455b80:	cmp	x11, #0x0
  455b84:	str	x13, [x12, x11, lsl #3]
  455b88:	mov	x11, x14
  455b8c:	b.gt	455b6c <_obstack_memory_used@@Base+0xf01c>
  455b90:	b	455bb0 <_obstack_memory_used@@Base+0xf060>
  455b94:	mov	x13, xzr
  455b98:	sub	x10, x10, #0x1
  455b9c:	sub	x9, x9, #0x1
  455ba0:	str	x14, [x12, x11, lsl #3]
  455ba4:	sub	x12, x12, #0x8
  455ba8:	cbnz	x9, 455b6c <_obstack_memory_used@@Base+0xf01c>
  455bac:	b	455bb4 <_obstack_memory_used@@Base+0xf064>
  455bb0:	mov	x13, x9
  455bb4:	add	x1, x0, x8, lsl #3
  455bb8:	lsl	x2, x13, #3
  455bbc:	bl	403ec0 <memcpy@plt>
  455bc0:	mov	w0, wzr
  455bc4:	ldp	x20, x19, [sp, #32]
  455bc8:	ldp	x22, x21, [sp, #16]
  455bcc:	ldp	x29, x30, [sp], #48
  455bd0:	ret
  455bd4:	mov	w0, #0xc                   	// #12
  455bd8:	b	455bc4 <_obstack_memory_used@@Base+0xf074>
  455bdc:	sub	sp, sp, #0x80
  455be0:	stp	x29, x30, [sp, #32]
  455be4:	stp	x28, x27, [sp, #48]
  455be8:	stp	x26, x25, [sp, #64]
  455bec:	stp	x24, x23, [sp, #80]
  455bf0:	stp	x22, x21, [sp, #96]
  455bf4:	stp	x20, x19, [sp, #112]
  455bf8:	ldr	x25, [x0, #56]
  455bfc:	mov	w8, #0x18                  	// #24
  455c00:	stp	xzr, xzr, [sp, #8]
  455c04:	str	xzr, [sp, #24]
  455c08:	madd	x24, x1, x8, x25
  455c0c:	ldr	x8, [x24, #8]!
  455c10:	add	x29, sp, #0x20
  455c14:	cmp	x8, #0x1
  455c18:	b.lt	455eb8 <_obstack_memory_used@@Base+0xf368>  // b.tstop
  455c1c:	mov	w27, #0x18                  	// #24
  455c20:	madd	x9, x1, x27, x25
  455c24:	mov	x21, x3
  455c28:	mov	x20, x1
  455c2c:	mov	x22, x0
  455c30:	mov	x19, x2
  455c34:	mov	x26, xzr
  455c38:	add	x28, x9, #0x10
  455c3c:	b	455c4c <_obstack_memory_used@@Base+0xf0fc>
  455c40:	add	x26, x26, #0x1
  455c44:	cmp	x26, x8
  455c48:	b.ge	455dc0 <_obstack_memory_used@@Base+0xf270>  // b.tcont
  455c4c:	ldr	x11, [x28]
  455c50:	ldr	x9, [x11, x26, lsl #3]
  455c54:	cmp	x9, x20
  455c58:	b.eq	455c40 <_obstack_memory_used@@Base+0xf0f0>  // b.none
  455c5c:	ldr	x10, [x22]
  455c60:	add	x10, x10, x9, lsl #4
  455c64:	ldrb	w10, [x10, #8]
  455c68:	tbz	w10, #3, 455c40 <_obstack_memory_used@@Base+0xf0f0>
  455c6c:	ldr	x10, [x22, #40]
  455c70:	madd	x12, x9, x27, x10
  455c74:	ldp	x13, x10, [x12, #8]
  455c78:	ldr	x12, [x10]
  455c7c:	cmp	x13, #0x1
  455c80:	b.le	455c94 <_obstack_memory_used@@Base+0xf144>
  455c84:	ldr	x10, [x10, #8]
  455c88:	subs	x13, x8, #0x1
  455c8c:	b.ge	455ca0 <_obstack_memory_used@@Base+0xf150>  // b.tcont
  455c90:	b	455cd4 <_obstack_memory_used@@Base+0xf184>
  455c94:	mov	x10, #0xffffffffffffffff    	// #-1
  455c98:	subs	x13, x8, #0x1
  455c9c:	b.lt	455cd4 <_obstack_memory_used@@Base+0xf184>  // b.tstop
  455ca0:	mov	x14, xzr
  455ca4:	b.eq	455cc8 <_obstack_memory_used@@Base+0xf178>  // b.none
  455ca8:	add	x15, x14, x13
  455cac:	lsr	x15, x15, #1
  455cb0:	ldr	x16, [x11, x15, lsl #3]
  455cb4:	cmp	x16, x12
  455cb8:	csinc	x14, x14, x15, ge  // ge = tcont
  455cbc:	csel	x13, x13, x15, lt  // lt = tstop
  455cc0:	cmp	x14, x13
  455cc4:	b.cc	455ca8 <_obstack_memory_used@@Base+0xf158>  // b.lo, b.ul, b.last
  455cc8:	ldr	x13, [x11, x14, lsl #3]
  455ccc:	cmp	x13, x12
  455cd0:	b.eq	455d18 <_obstack_memory_used@@Base+0xf1c8>  // b.none
  455cd4:	ldr	x13, [x19, #8]
  455cd8:	subs	x14, x13, #0x1
  455cdc:	b.lt	455d18 <_obstack_memory_used@@Base+0xf1c8>  // b.tstop
  455ce0:	ldr	x13, [x19, #16]
  455ce4:	mov	x15, xzr
  455ce8:	b.eq	455d0c <_obstack_memory_used@@Base+0xf1bc>  // b.none
  455cec:	add	x16, x15, x14
  455cf0:	lsr	x16, x16, #1
  455cf4:	ldr	x17, [x13, x16, lsl #3]
  455cf8:	cmp	x17, x12
  455cfc:	csinc	x15, x15, x16, ge  // ge = tcont
  455d00:	csel	x14, x14, x16, lt  // lt = tstop
  455d04:	cmp	x15, x14
  455d08:	b.cc	455cec <_obstack_memory_used@@Base+0xf19c>  // b.lo, b.ul, b.last
  455d0c:	ldr	x13, [x13, x15, lsl #3]
  455d10:	cmp	x13, x12
  455d14:	b.eq	455da0 <_obstack_memory_used@@Base+0xf250>  // b.none
  455d18:	cmp	x10, #0x1
  455d1c:	b.lt	455c40 <_obstack_memory_used@@Base+0xf0f0>  // b.tstop
  455d20:	subs	x12, x8, #0x1
  455d24:	b.lt	455d5c <_obstack_memory_used@@Base+0xf20c>  // b.tstop
  455d28:	mov	x13, xzr
  455d2c:	b.eq	455d50 <_obstack_memory_used@@Base+0xf200>  // b.none
  455d30:	add	x14, x13, x12
  455d34:	lsr	x14, x14, #1
  455d38:	ldr	x15, [x11, x14, lsl #3]
  455d3c:	cmp	x15, x10
  455d40:	csinc	x13, x13, x14, ge  // ge = tcont
  455d44:	csel	x12, x12, x14, lt  // lt = tstop
  455d48:	cmp	x13, x12
  455d4c:	b.cc	455d30 <_obstack_memory_used@@Base+0xf1e0>  // b.lo, b.ul, b.last
  455d50:	ldr	x11, [x11, x13, lsl #3]
  455d54:	cmp	x11, x10
  455d58:	b.eq	455c40 <_obstack_memory_used@@Base+0xf0f0>  // b.none
  455d5c:	ldr	x11, [x19, #8]
  455d60:	subs	x12, x11, #0x1
  455d64:	b.lt	455c40 <_obstack_memory_used@@Base+0xf0f0>  // b.tstop
  455d68:	ldr	x11, [x19, #16]
  455d6c:	mov	x13, xzr
  455d70:	b.eq	455d94 <_obstack_memory_used@@Base+0xf244>  // b.none
  455d74:	add	x14, x13, x12
  455d78:	lsr	x14, x14, #1
  455d7c:	ldr	x15, [x11, x14, lsl #3]
  455d80:	cmp	x15, x10
  455d84:	csinc	x13, x13, x14, ge  // ge = tcont
  455d88:	csel	x12, x12, x14, lt  // lt = tstop
  455d8c:	cmp	x13, x12
  455d90:	b.cc	455d74 <_obstack_memory_used@@Base+0xf224>  // b.lo, b.ul, b.last
  455d94:	ldr	x11, [x11, x13, lsl #3]
  455d98:	cmp	x11, x10
  455d9c:	b.ne	455c40 <_obstack_memory_used@@Base+0xf0f0>  // b.any
  455da0:	ldr	x8, [x22, #56]
  455da4:	add	x0, sp, #0x8
  455da8:	mov	x1, x21
  455dac:	madd	x2, x9, x27, x8
  455db0:	bl	455a14 <_obstack_memory_used@@Base+0xeec4>
  455db4:	cbnz	w0, 455ee8 <_obstack_memory_used@@Base+0xf398>
  455db8:	ldr	x8, [x24]
  455dbc:	b	455c40 <_obstack_memory_used@@Base+0xf0f0>
  455dc0:	cmp	x8, #0x0
  455dc4:	b.le	455eb8 <_obstack_memory_used@@Base+0xf368>
  455dc8:	mov	w9, #0x18                  	// #24
  455dcc:	madd	x9, x20, x9, x25
  455dd0:	ldp	x10, x0, [sp, #16]
  455dd4:	ldr	x9, [x9, #16]
  455dd8:	mov	x8, xzr
  455ddc:	sub	x11, x10, #0x1
  455de0:	b	455df4 <_obstack_memory_used@@Base+0xf2a4>
  455de4:	ldr	x12, [x24]
  455de8:	add	x8, x8, #0x1
  455dec:	cmp	x8, x12
  455df0:	b.ge	455ebc <_obstack_memory_used@@Base+0xf36c>  // b.tcont
  455df4:	ldr	x12, [x9, x8, lsl #3]
  455df8:	cmp	x10, #0x1
  455dfc:	b.lt	455e38 <_obstack_memory_used@@Base+0xf2e8>  // b.tstop
  455e00:	mov	x13, xzr
  455e04:	cbz	x11, 455e2c <_obstack_memory_used@@Base+0xf2dc>
  455e08:	mov	x14, x11
  455e0c:	add	x15, x13, x14
  455e10:	lsr	x15, x15, #1
  455e14:	ldr	x16, [x0, x15, lsl #3]
  455e18:	cmp	x16, x12
  455e1c:	csinc	x13, x13, x15, ge  // ge = tcont
  455e20:	csel	x14, x14, x15, lt  // lt = tstop
  455e24:	cmp	x13, x14
  455e28:	b.cc	455e0c <_obstack_memory_used@@Base+0xf2bc>  // b.lo, b.ul, b.last
  455e2c:	ldr	x13, [x0, x13, lsl #3]
  455e30:	cmp	x13, x12
  455e34:	b.eq	455de4 <_obstack_memory_used@@Base+0xf294>  // b.none
  455e38:	ldr	x16, [x19, #8]
  455e3c:	subs	x15, x16, #0x1
  455e40:	b.lt	455de4 <_obstack_memory_used@@Base+0xf294>  // b.tstop
  455e44:	ldr	x13, [x19, #16]
  455e48:	mov	x14, xzr
  455e4c:	b.eq	455e74 <_obstack_memory_used@@Base+0xf324>  // b.none
  455e50:	mov	x17, x15
  455e54:	add	x18, x14, x17
  455e58:	lsr	x18, x18, #1
  455e5c:	ldr	x1, [x13, x18, lsl #3]
  455e60:	cmp	x1, x12
  455e64:	csinc	x14, x14, x18, ge  // ge = tcont
  455e68:	csel	x17, x17, x18, lt  // lt = tstop
  455e6c:	cmp	x14, x17
  455e70:	b.cc	455e54 <_obstack_memory_used@@Base+0xf304>  // b.lo, b.ul, b.last
  455e74:	ldr	x17, [x13, x14, lsl #3]
  455e78:	cmp	x17, x12
  455e7c:	csinv	x12, x14, xzr, eq  // eq = none
  455e80:	tbnz	x12, #63, 455de4 <_obstack_memory_used@@Base+0xf294>
  455e84:	cmp	x16, x12
  455e88:	b.le	455de4 <_obstack_memory_used@@Base+0xf294>
  455e8c:	cmp	x15, x12
  455e90:	str	x15, [x19, #8]
  455e94:	b.le	455de4 <_obstack_memory_used@@Base+0xf294>
  455e98:	add	x12, x13, x14, lsl #3
  455e9c:	ldr	x15, [x12, #8]
  455ea0:	add	x14, x14, #0x1
  455ea4:	str	x15, [x12]
  455ea8:	ldr	x12, [x19, #8]
  455eac:	cmp	x14, x12
  455eb0:	b.lt	455e98 <_obstack_memory_used@@Base+0xf348>  // b.tstop
  455eb4:	b	455de4 <_obstack_memory_used@@Base+0xf294>
  455eb8:	ldr	x0, [sp, #24]
  455ebc:	mov	w23, wzr
  455ec0:	bl	404700 <free@plt>
  455ec4:	mov	w0, w23
  455ec8:	ldp	x20, x19, [sp, #112]
  455ecc:	ldp	x22, x21, [sp, #96]
  455ed0:	ldp	x24, x23, [sp, #80]
  455ed4:	ldp	x26, x25, [sp, #64]
  455ed8:	ldp	x28, x27, [sp, #48]
  455edc:	ldp	x29, x30, [sp, #32]
  455ee0:	add	sp, sp, #0x80
  455ee4:	ret
  455ee8:	mov	w23, w0
  455eec:	ldr	x0, [sp, #24]
  455ef0:	b	455ec0 <_obstack_memory_used@@Base+0xf370>
  455ef4:	sub	sp, sp, #0x80
  455ef8:	stp	x29, x30, [sp, #32]
  455efc:	stp	x28, x27, [sp, #48]
  455f00:	stp	x26, x25, [sp, #64]
  455f04:	stp	x24, x23, [sp, #80]
  455f08:	stp	x22, x21, [sp, #96]
  455f0c:	stp	x20, x19, [sp, #112]
  455f10:	stp	x2, x4, [sp, #8]
  455f14:	ldr	x8, [x0, #200]
  455f18:	ldr	x9, [x0, #152]
  455f1c:	add	x29, sp, #0x20
  455f20:	mov	x19, x5
  455f24:	mov	x21, x3
  455f28:	mov	x23, x0
  455f2c:	cmp	x8, #0x1
  455f30:	mov	x24, x1
  455f34:	mov	x25, xzr
  455f38:	stur	x9, [x29, #-8]
  455f3c:	b.lt	455f78 <_obstack_memory_used@@Base+0xf428>  // b.tstop
  455f40:	ldr	x9, [x23, #216]
  455f44:	mov	w10, #0x28                  	// #40
  455f48:	mov	x11, x8
  455f4c:	add	x12, x11, x25
  455f50:	cmp	x12, #0x0
  455f54:	cinc	x12, x12, lt  // lt = tstop
  455f58:	asr	x12, x12, #1
  455f5c:	madd	x13, x12, x10, x9
  455f60:	ldr	x13, [x13, #8]
  455f64:	cmp	x13, x21
  455f68:	csel	x11, x11, x12, lt  // lt = tstop
  455f6c:	csinc	x25, x25, x12, ge  // ge = tcont
  455f70:	cmp	x25, x11
  455f74:	b.lt	455f4c <_obstack_memory_used@@Base+0xf3fc>  // b.tstop
  455f78:	cmp	x25, x8
  455f7c:	b.ge	455f98 <_obstack_memory_used@@Base+0xf448>  // b.tcont
  455f80:	ldr	x9, [x23, #216]
  455f84:	mov	w10, #0x28                  	// #40
  455f88:	madd	x9, x25, x10, x9
  455f8c:	ldr	x9, [x9, #8]
  455f90:	cmp	x9, x21
  455f94:	b.eq	455f9c <_obstack_memory_used@@Base+0xf44c>  // b.none
  455f98:	mov	x25, #0xffffffffffffffff    	// #-1
  455f9c:	cmp	x8, #0x1
  455fa0:	b.lt	455fec <_obstack_memory_used@@Base+0xf49c>  // b.tstop
  455fa4:	ldr	x9, [x23, #216]
  455fa8:	mov	x26, xzr
  455fac:	mov	w10, #0x28                  	// #40
  455fb0:	mov	x11, x8
  455fb4:	add	x12, x11, x26
  455fb8:	cmp	x12, #0x0
  455fbc:	cinc	x12, x12, lt  // lt = tstop
  455fc0:	asr	x12, x12, #1
  455fc4:	madd	x13, x12, x10, x9
  455fc8:	ldr	x13, [x13, #8]
  455fcc:	cmp	x13, x19
  455fd0:	csel	x11, x11, x12, lt  // lt = tstop
  455fd4:	csinc	x26, x26, x12, ge  // ge = tcont
  455fd8:	cmp	x26, x11
  455fdc:	b.lt	455fb4 <_obstack_memory_used@@Base+0xf464>  // b.tstop
  455fe0:	cmp	x26, x8
  455fe4:	b.lt	455ff8 <_obstack_memory_used@@Base+0xf4a8>  // b.tstop
  455fe8:	b	456010 <_obstack_memory_used@@Base+0xf4c0>
  455fec:	mov	x26, xzr
  455ff0:	cmp	x26, x8
  455ff4:	b.ge	456010 <_obstack_memory_used@@Base+0xf4c0>  // b.tcont
  455ff8:	ldr	x8, [x23, #216]
  455ffc:	mov	w9, #0x28                  	// #40
  456000:	madd	x8, x26, x9, x8
  456004:	ldr	x8, [x8, #8]
  456008:	cmp	x8, x19
  45600c:	b.eq	456014 <_obstack_memory_used@@Base+0xf4c4>  // b.none
  456010:	mov	x26, #0xffffffffffffffff    	// #-1
  456014:	ldr	x8, [x24, #8]
  456018:	cmp	x8, #0x1
  45601c:	b.lt	456170 <_obstack_memory_used@@Base+0xf620>  // b.tstop
  456020:	mov	x22, xzr
  456024:	mov	w20, #0x28                  	// #40
  456028:	b	456048 <_obstack_memory_used@@Base+0xf4f8>
  45602c:	mov	w0, #0xffffffff            	// #-1
  456030:	cmp	w0, w28
  456034:	b.ne	456168 <_obstack_memory_used@@Base+0xf618>  // b.any
  456038:	ldr	x8, [x24, #8]
  45603c:	add	x22, x22, #0x1
  456040:	cmp	x22, x8
  456044:	b.ge	456170 <_obstack_memory_used@@Base+0xf620>  // b.tcont
  456048:	ldr	x8, [x24, #16]
  45604c:	ldr	x9, [x23, #216]
  456050:	ldur	x12, [x29, #-8]
  456054:	ldr	x8, [x8, x22, lsl #3]
  456058:	ldr	x12, [x12]
  45605c:	madd	x10, x8, x20, x9
  456060:	ldr	x11, [x10]
  456064:	ldr	x10, [x10, #16]
  456068:	lsl	x11, x11, #4
  45606c:	ldr	x27, [x12, x11]
  456070:	cmp	x10, x21
  456074:	b.le	456088 <_obstack_memory_used@@Base+0xf538>
  456078:	mov	w28, #0xffffffff            	// #-1
  45607c:	cmp	x10, x19
  456080:	b.gt	45602c <_obstack_memory_used@@Base+0xf4dc>
  456084:	b	456104 <_obstack_memory_used@@Base+0xf5b4>
  456088:	madd	x11, x8, x20, x9
  45608c:	ldr	x11, [x11, #24]
  456090:	cmp	x11, x21
  456094:	b.ge	4560a8 <_obstack_memory_used@@Base+0xf558>  // b.tcont
  456098:	mov	w28, #0x1                   	// #1
  45609c:	cmp	x10, x19
  4560a0:	b.gt	45602c <_obstack_memory_used@@Base+0xf4dc>
  4560a4:	b	456104 <_obstack_memory_used@@Base+0xf5b4>
  4560a8:	cmp	x10, x21
  4560ac:	cset	w1, eq  // eq = none
  4560b0:	cmp	x11, x21
  4560b4:	cset	w11, eq  // eq = none
  4560b8:	bfi	w1, w11, #1, #1
  4560bc:	cbz	w1, 4560f8 <_obstack_memory_used@@Base+0xf5a8>
  4560c0:	ldr	x3, [sp, #8]
  4560c4:	mov	x0, x23
  4560c8:	mov	x2, x27
  4560cc:	mov	x4, x25
  4560d0:	bl	456194 <_obstack_memory_used@@Base+0xf644>
  4560d4:	ldr	x8, [x24, #16]
  4560d8:	ldr	x9, [x23, #216]
  4560dc:	mov	w28, w0
  4560e0:	ldr	x8, [x8, x22, lsl #3]
  4560e4:	madd	x10, x8, x20, x9
  4560e8:	ldr	x10, [x10, #16]
  4560ec:	cmp	x10, x19
  4560f0:	b.le	456104 <_obstack_memory_used@@Base+0xf5b4>
  4560f4:	b	45602c <_obstack_memory_used@@Base+0xf4dc>
  4560f8:	mov	w28, wzr
  4560fc:	cmp	x10, x19
  456100:	b.gt	45602c <_obstack_memory_used@@Base+0xf4dc>
  456104:	madd	x8, x8, x20, x9
  456108:	ldr	x8, [x8, #24]
  45610c:	cmp	x8, x19
  456110:	b.ge	456124 <_obstack_memory_used@@Base+0xf5d4>  // b.tcont
  456114:	mov	w0, #0x1                   	// #1
  456118:	cmp	w0, w28
  45611c:	b.eq	456038 <_obstack_memory_used@@Base+0xf4e8>  // b.none
  456120:	b	456168 <_obstack_memory_used@@Base+0xf618>
  456124:	cmp	x10, x19
  456128:	cset	w1, eq  // eq = none
  45612c:	cmp	x8, x19
  456130:	cset	w8, eq  // eq = none
  456134:	bfi	w1, w8, #1, #1
  456138:	cbz	w1, 45615c <_obstack_memory_used@@Base+0xf60c>
  45613c:	ldr	x3, [sp, #16]
  456140:	mov	x0, x23
  456144:	mov	x2, x27
  456148:	mov	x4, x26
  45614c:	bl	456194 <_obstack_memory_used@@Base+0xf644>
  456150:	cmp	w0, w28
  456154:	b.eq	456038 <_obstack_memory_used@@Base+0xf4e8>  // b.none
  456158:	b	456168 <_obstack_memory_used@@Base+0xf618>
  45615c:	mov	w0, wzr
  456160:	cmp	w0, w28
  456164:	b.eq	456038 <_obstack_memory_used@@Base+0xf4e8>  // b.none
  456168:	mov	w0, #0x1                   	// #1
  45616c:	b	456174 <_obstack_memory_used@@Base+0xf624>
  456170:	mov	w0, wzr
  456174:	ldp	x20, x19, [sp, #112]
  456178:	ldp	x22, x21, [sp, #96]
  45617c:	ldp	x24, x23, [sp, #80]
  456180:	ldp	x26, x25, [sp, #64]
  456184:	ldp	x28, x27, [sp, #48]
  456188:	ldp	x29, x30, [sp, #32]
  45618c:	add	sp, sp, #0x80
  456190:	ret
  456194:	sub	sp, sp, #0x80
  456198:	stp	x29, x30, [sp, #32]
  45619c:	stp	x28, x27, [sp, #48]
  4561a0:	stp	x26, x25, [sp, #64]
  4561a4:	stp	x24, x23, [sp, #80]
  4561a8:	stp	x22, x21, [sp, #96]
  4561ac:	stp	x20, x19, [sp, #112]
  4561b0:	ldr	x24, [x0, #152]
  4561b4:	mov	w8, #0x18                  	// #24
  4561b8:	mov	w23, w1
  4561bc:	add	x29, sp, #0x20
  4561c0:	ldr	x9, [x24, #48]
  4561c4:	madd	x13, x3, x8, x9
  4561c8:	ldr	x8, [x13, #8]!
  4561cc:	cmp	x8, #0x1
  4561d0:	b.lt	456348 <_obstack_memory_used@@Base+0xf7f8>  // b.tstop
  4561d4:	mov	w12, #0x18                  	// #24
  4561d8:	cmp	x2, #0x3f
  4561dc:	and	w10, w23, #0x2
  4561e0:	mov	w11, #0x1                   	// #1
  4561e4:	madd	x9, x3, x12, x9
  4561e8:	cset	w12, gt
  4561ec:	lsl	x11, x11, x2
  4561f0:	add	x25, x9, #0x10
  4561f4:	orr	w9, w12, w10, lsr #1
  4561f8:	mov	x19, x4
  4561fc:	mov	x20, x3
  456200:	mov	x21, x2
  456204:	mov	x22, x0
  456208:	mov	x26, xzr
  45620c:	stur	w9, [x29, #-12]
  456210:	stur	x11, [x29, #-8]
  456214:	mvn	w9, w11
  456218:	mov	w11, #0x28                  	// #40
  45621c:	str	w9, [sp, #16]
  456220:	str	x13, [sp, #8]
  456224:	b	456240 <_obstack_memory_used@@Base+0xf6f0>
  456228:	ldr	x13, [sp, #8]
  45622c:	mov	w11, #0x28                  	// #40
  456230:	ldr	x8, [x13]
  456234:	add	x26, x26, #0x1
  456238:	cmp	x26, x8
  45623c:	b.ge	456348 <_obstack_memory_used@@Base+0xf7f8>  // b.tcont
  456240:	ldr	x9, [x25]
  456244:	ldr	x27, [x9, x26, lsl #3]
  456248:	ldr	x9, [x24]
  45624c:	add	x9, x9, x27, lsl #4
  456250:	ldrb	w10, [x9, #8]
  456254:	cmp	w10, #0x9
  456258:	b.eq	45631c <_obstack_memory_used@@Base+0xf7cc>  // b.none
  45625c:	cmp	w10, #0x8
  456260:	b.eq	456330 <_obstack_memory_used@@Base+0xf7e0>  // b.none
  456264:	cmp	w10, #0x4
  456268:	b.ne	456234 <_obstack_memory_used@@Base+0xf6e4>  // b.any
  45626c:	cmn	x19, #0x1
  456270:	b.eq	456234 <_obstack_memory_used@@Base+0xf6e4>  // b.none
  456274:	ldr	x8, [x22, #216]
  456278:	madd	x8, x19, x11, x8
  45627c:	add	x28, x8, #0x22
  456280:	b	4562a0 <_obstack_memory_used@@Base+0xf750>
  456284:	ldrh	w8, [x28]
  456288:	ldr	w9, [sp, #16]
  45628c:	and	w8, w8, w9
  456290:	strh	w8, [x28]
  456294:	ldurb	w8, [x28, #-2]
  456298:	add	x28, x28, #0x28
  45629c:	cbz	w8, 456228 <_obstack_memory_used@@Base+0xf6d8>
  4562a0:	ldur	x8, [x28, #-34]
  4562a4:	cmp	x8, x27
  4562a8:	b.ne	456294 <_obstack_memory_used@@Base+0xf744>  // b.any
  4562ac:	cmp	x21, #0x3f
  4562b0:	b.gt	4562c4 <_obstack_memory_used@@Base+0xf774>
  4562b4:	ldrh	w8, [x28]
  4562b8:	ldur	x9, [x29, #-8]
  4562bc:	tst	x9, x8
  4562c0:	b.eq	456294 <_obstack_memory_used@@Base+0xf744>  // b.none
  4562c4:	ldr	x8, [x24, #40]
  4562c8:	mov	w9, #0x18                  	// #24
  4562cc:	madd	x8, x27, x9, x8
  4562d0:	ldr	x8, [x8, #16]
  4562d4:	ldr	x3, [x8]
  4562d8:	cmp	x3, x20
  4562dc:	b.eq	456350 <_obstack_memory_used@@Base+0xf800>  // b.none
  4562e0:	mov	x0, x22
  4562e4:	mov	w1, w23
  4562e8:	mov	x2, x21
  4562ec:	mov	x4, x19
  4562f0:	bl	456194 <_obstack_memory_used@@Base+0xf644>
  4562f4:	cbz	w0, 45630c <_obstack_memory_used@@Base+0xf7bc>
  4562f8:	cmn	w0, #0x1
  4562fc:	b.eq	45635c <_obstack_memory_used@@Base+0xf80c>  // b.none
  456300:	cmp	x21, #0x3f
  456304:	b.le	456284 <_obstack_memory_used@@Base+0xf734>
  456308:	b	456294 <_obstack_memory_used@@Base+0xf744>
  45630c:	ldur	w8, [x29, #-12]
  456310:	tbz	w8, #0, 456284 <_obstack_memory_used@@Base+0xf734>
  456314:	tbz	w23, #1, 456294 <_obstack_memory_used@@Base+0xf744>
  456318:	b	456358 <_obstack_memory_used@@Base+0xf808>
  45631c:	tbz	w23, #1, 456234 <_obstack_memory_used@@Base+0xf6e4>
  456320:	ldr	x9, [x9]
  456324:	cmp	x9, x21
  456328:	b.ne	456234 <_obstack_memory_used@@Base+0xf6e4>  // b.any
  45632c:	b	456358 <_obstack_memory_used@@Base+0xf808>
  456330:	tbz	w23, #0, 456234 <_obstack_memory_used@@Base+0xf6e4>
  456334:	ldr	x9, [x9]
  456338:	cmp	x9, x21
  45633c:	b.ne	456234 <_obstack_memory_used@@Base+0xf6e4>  // b.any
  456340:	mov	w0, #0xffffffff            	// #-1
  456344:	b	45635c <_obstack_memory_used@@Base+0xf80c>
  456348:	ubfx	w0, w23, #1, #1
  45634c:	b	45635c <_obstack_memory_used@@Base+0xf80c>
  456350:	sbfx	w0, w23, #0, #1
  456354:	b	45635c <_obstack_memory_used@@Base+0xf80c>
  456358:	mov	w0, wzr
  45635c:	ldp	x20, x19, [sp, #112]
  456360:	ldp	x22, x21, [sp, #96]
  456364:	ldp	x24, x23, [sp, #80]
  456368:	ldp	x26, x25, [sp, #64]
  45636c:	ldp	x28, x27, [sp, #48]
  456370:	ldp	x29, x30, [sp, #32]
  456374:	add	sp, sp, #0x80
  456378:	ret
  45637c:	stp	x29, x30, [sp, #-48]!
  456380:	stp	x20, x19, [sp, #32]
  456384:	mov	x19, x0
  456388:	stp	x22, x21, [sp, #16]
  45638c:	mov	x29, sp
  456390:	cbz	x0, 4563b4 <_obstack_memory_used@@Base+0xf864>
  456394:	mov	x0, x19
  456398:	bl	403f40 <strlen@plt>
  45639c:	add	x20, x0, #0x1
  4563a0:	cmp	x20, #0x76
  4563a4:	b.ls	4563b8 <_obstack_memory_used@@Base+0xf868>  // b.plast
  4563a8:	add	x8, x0, #0x12
  4563ac:	and	x0, x8, #0xfffffffffffffff8
  4563b0:	b	4563bc <_obstack_memory_used@@Base+0xf86c>
  4563b4:	mov	x20, xzr
  4563b8:	mov	w0, #0x80                  	// #128
  4563bc:	bl	404250 <malloc@plt>
  4563c0:	mov	x21, x0
  4563c4:	cbz	x0, 4563f8 <_obstack_memory_used@@Base+0xf8a8>
  4563c8:	cmp	x19, #0x0
  4563cc:	mov	x22, x21
  4563d0:	cset	w8, ne  // ne = any
  4563d4:	str	xzr, [x21]
  4563d8:	strb	w8, [x21, #8]
  4563dc:	strb	wzr, [x22, #9]!
  4563e0:	cbz	x19, 4563f8 <_obstack_memory_used@@Base+0xf8a8>
  4563e4:	mov	x0, x22
  4563e8:	mov	x1, x19
  4563ec:	mov	x2, x20
  4563f0:	bl	403ec0 <memcpy@plt>
  4563f4:	strb	wzr, [x22, x20]
  4563f8:	mov	x0, x21
  4563fc:	ldp	x20, x19, [sp, #32]
  456400:	ldp	x22, x21, [sp, #16]
  456404:	ldp	x29, x30, [sp], #48
  456408:	ret
  45640c:	stp	x29, x30, [sp, #-32]!
  456410:	cmp	x0, #0x2
  456414:	str	x19, [sp, #16]
  456418:	mov	x29, sp
  45641c:	b.cc	456430 <_obstack_memory_used@@Base+0xf8e0>  // b.lo, b.ul, b.last
  456420:	ldr	x19, [x0]
  456424:	bl	404700 <free@plt>
  456428:	mov	x0, x19
  45642c:	cbnz	x19, 456420 <_obstack_memory_used@@Base+0xf8d0>
  456430:	ldr	x19, [sp, #16]
  456434:	ldp	x29, x30, [sp], #32
  456438:	ret
  45643c:	stp	x29, x30, [sp, #-80]!
  456440:	stp	x22, x21, [sp, #48]
  456444:	stp	x20, x19, [sp, #64]
  456448:	mov	x19, x2
  45644c:	mov	x22, x1
  456450:	str	x25, [sp, #16]
  456454:	stp	x24, x23, [sp, #32]
  456458:	mov	x29, sp
  45645c:	cbz	x0, 4564f0 <_obstack_memory_used@@Base+0xf9a0>
  456460:	mov	x21, x0
  456464:	bl	456568 <_obstack_memory_used@@Base+0xfa18>
  456468:	cbz	x0, 45652c <_obstack_memory_used@@Base+0xf9dc>
  45646c:	mov	x20, x0
  456470:	mov	x0, x22
  456474:	mov	x1, x19
  456478:	bl	404040 <localtime_r@plt>
  45647c:	cbz	x0, 456510 <_obstack_memory_used@@Base+0xf9c0>
  456480:	mov	x0, x21
  456484:	mov	x1, x19
  456488:	bl	4566a4 <_obstack_memory_used@@Base+0xfb54>
  45648c:	eor	w22, w0, #0x1
  456490:	cmp	x20, #0x1
  456494:	b.eq	45651c <_obstack_memory_used@@Base+0xf9cc>  // b.none
  456498:	bl	404a10 <__errno_location@plt>
  45649c:	ldrb	w8, [x20, #8]
  4564a0:	ldr	w23, [x0]
  4564a4:	mov	x21, x0
  4564a8:	cbz	w8, 456544 <_obstack_memory_used@@Base+0xf9f4>
  4564ac:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4564b0:	add	x1, x20, #0x9
  4564b4:	add	x0, x0, #0x4ea
  4564b8:	mov	w2, #0x1                   	// #1
  4564bc:	bl	404050 <setenv@plt>
  4564c0:	cbz	w0, 456554 <_obstack_memory_used@@Base+0xfa04>
  4564c4:	ldr	w23, [x21]
  4564c8:	mov	w24, wzr
  4564cc:	cmp	x20, #0x2
  4564d0:	b.cc	4564e8 <_obstack_memory_used@@Base+0xf998>  // b.lo, b.ul, b.last
  4564d4:	ldr	x25, [x20]
  4564d8:	mov	x0, x20
  4564dc:	bl	404700 <free@plt>
  4564e0:	mov	x20, x25
  4564e4:	cbnz	x25, 4564d4 <_obstack_memory_used@@Base+0xf984>
  4564e8:	str	w23, [x21]
  4564ec:	b	456520 <_obstack_memory_used@@Base+0xf9d0>
  4564f0:	mov	x0, x22
  4564f4:	mov	x1, x19
  4564f8:	ldp	x20, x19, [sp, #64]
  4564fc:	ldp	x22, x21, [sp, #48]
  456500:	ldp	x24, x23, [sp, #32]
  456504:	ldr	x25, [sp, #16]
  456508:	ldp	x29, x30, [sp], #80
  45650c:	b	4043a0 <gmtime_r@plt>
  456510:	mov	w22, #0x1                   	// #1
  456514:	cmp	x20, #0x1
  456518:	b.ne	456498 <_obstack_memory_used@@Base+0xf948>  // b.any
  45651c:	mov	w24, #0x1                   	// #1
  456520:	orn	w8, w22, w24
  456524:	tst	w8, #0x1
  456528:	csel	x0, xzr, x19, ne  // ne = any
  45652c:	ldp	x20, x19, [sp, #64]
  456530:	ldp	x22, x21, [sp, #48]
  456534:	ldp	x24, x23, [sp, #32]
  456538:	ldr	x25, [sp, #16]
  45653c:	ldp	x29, x30, [sp], #80
  456540:	ret
  456544:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  456548:	add	x0, x0, #0x4ea
  45654c:	bl	404860 <unsetenv@plt>
  456550:	cbnz	w0, 4564c4 <_obstack_memory_used@@Base+0xf974>
  456554:	bl	4042a0 <tzset@plt>
  456558:	mov	w24, #0x1                   	// #1
  45655c:	cmp	x20, #0x2
  456560:	b.cs	4564d4 <_obstack_memory_used@@Base+0xf984>  // b.hs, b.nlast
  456564:	b	4564e8 <_obstack_memory_used@@Base+0xf998>
  456568:	stp	x29, x30, [sp, #-80]!
  45656c:	stp	x20, x19, [sp, #64]
  456570:	mov	x19, x0
  456574:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  456578:	add	x0, x0, #0x4ea
  45657c:	str	x25, [sp, #16]
  456580:	stp	x24, x23, [sp, #32]
  456584:	stp	x22, x21, [sp, #48]
  456588:	mov	x29, sp
  45658c:	bl	404a30 <getenv@plt>
  456590:	ldrb	w24, [x19, #8]
  456594:	mov	x21, x0
  456598:	cbz	x0, 4565d4 <_obstack_memory_used@@Base+0xfa84>
  45659c:	cbz	w24, 4565b0 <_obstack_memory_used@@Base+0xfa60>
  4565a0:	add	x0, x19, #0x9
  4565a4:	mov	x1, x21
  4565a8:	bl	404660 <strcmp@plt>
  4565ac:	cbz	w0, 45666c <_obstack_memory_used@@Base+0xfb1c>
  4565b0:	mov	x0, x21
  4565b4:	bl	403f40 <strlen@plt>
  4565b8:	add	x22, x0, #0x1
  4565bc:	cmp	x22, #0x76
  4565c0:	mov	w25, #0x1                   	// #1
  4565c4:	b.ls	4565e0 <_obstack_memory_used@@Base+0xfa90>  // b.plast
  4565c8:	add	x8, x0, #0x12
  4565cc:	and	x0, x8, #0xfffffffffffffff8
  4565d0:	b	4565e4 <_obstack_memory_used@@Base+0xfa94>
  4565d4:	cbz	w24, 45666c <_obstack_memory_used@@Base+0xfb1c>
  4565d8:	mov	w25, wzr
  4565dc:	mov	x22, xzr
  4565e0:	mov	w0, #0x80                  	// #128
  4565e4:	bl	404250 <malloc@plt>
  4565e8:	mov	x20, x0
  4565ec:	cbz	x0, 456688 <_obstack_memory_used@@Base+0xfb38>
  4565f0:	mov	x23, x20
  4565f4:	str	xzr, [x20]
  4565f8:	strb	w25, [x20, #8]
  4565fc:	strb	wzr, [x23, #9]!
  456600:	cbz	w25, 45661c <_obstack_memory_used@@Base+0xfacc>
  456604:	mov	x0, x23
  456608:	mov	x1, x21
  45660c:	mov	x2, x22
  456610:	bl	403ec0 <memcpy@plt>
  456614:	strb	wzr, [x23, x22]
  456618:	ldrb	w24, [x19, #8]
  45661c:	cbz	w24, 456674 <_obstack_memory_used@@Base+0xfb24>
  456620:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  456624:	add	x1, x19, #0x9
  456628:	add	x0, x0, #0x4ea
  45662c:	mov	w2, #0x1                   	// #1
  456630:	bl	404050 <setenv@plt>
  456634:	cbz	w0, 456684 <_obstack_memory_used@@Base+0xfb34>
  456638:	bl	404a10 <__errno_location@plt>
  45663c:	ldr	w21, [x0]
  456640:	mov	x19, x0
  456644:	cmp	x20, #0x2
  456648:	b.cc	456660 <_obstack_memory_used@@Base+0xfb10>  // b.lo, b.ul, b.last
  45664c:	ldr	x22, [x20]
  456650:	mov	x0, x20
  456654:	bl	404700 <free@plt>
  456658:	mov	x20, x22
  45665c:	cbnz	x22, 45664c <_obstack_memory_used@@Base+0xfafc>
  456660:	mov	x20, xzr
  456664:	str	w21, [x19]
  456668:	b	456688 <_obstack_memory_used@@Base+0xfb38>
  45666c:	mov	w20, #0x1                   	// #1
  456670:	b	456688 <_obstack_memory_used@@Base+0xfb38>
  456674:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  456678:	add	x0, x0, #0x4ea
  45667c:	bl	404860 <unsetenv@plt>
  456680:	cbnz	w0, 456638 <_obstack_memory_used@@Base+0xfae8>
  456684:	bl	4042a0 <tzset@plt>
  456688:	mov	x0, x20
  45668c:	ldp	x20, x19, [sp, #64]
  456690:	ldp	x22, x21, [sp, #48]
  456694:	ldp	x24, x23, [sp, #32]
  456698:	ldr	x25, [sp, #16]
  45669c:	ldp	x29, x30, [sp], #80
  4566a0:	ret
  4566a4:	stp	x29, x30, [sp, #-64]!
  4566a8:	stp	x24, x23, [sp, #16]
  4566ac:	stp	x22, x21, [sp, #32]
  4566b0:	stp	x20, x19, [sp, #48]
  4566b4:	ldr	x21, [x1, #48]
  4566b8:	mov	x29, sp
  4566bc:	cbz	x21, 45674c <_obstack_memory_used@@Base+0xfbfc>
  4566c0:	mov	x19, x1
  4566c4:	mov	x20, x0
  4566c8:	cmp	x21, x1
  4566cc:	b.cc	4566dc <_obstack_memory_used@@Base+0xfb8c>  // b.lo, b.ul, b.last
  4566d0:	add	x8, x19, #0x38
  4566d4:	cmp	x21, x8
  4566d8:	b.cc	45674c <_obstack_memory_used@@Base+0xfbfc>  // b.lo, b.ul, b.last
  4566dc:	ldrb	w8, [x21]
  4566e0:	cbz	w8, 456740 <_obstack_memory_used@@Base+0xfbf0>
  4566e4:	add	x22, x20, #0x9
  4566e8:	mov	x0, x22
  4566ec:	mov	x1, x21
  4566f0:	bl	404660 <strcmp@plt>
  4566f4:	cbz	w0, 456748 <_obstack_memory_used@@Base+0xfbf8>
  4566f8:	ldrb	w8, [x22]
  4566fc:	cbnz	w8, 456714 <_obstack_memory_used@@Base+0xfbc4>
  456700:	add	x24, x20, #0x9
  456704:	cmp	x22, x24
  456708:	b.ne	456768 <_obstack_memory_used@@Base+0xfc18>  // b.any
  45670c:	ldrb	w8, [x20, #8]
  456710:	cbz	w8, 456764 <_obstack_memory_used@@Base+0xfc14>
  456714:	mov	x0, x22
  456718:	bl	403f40 <strlen@plt>
  45671c:	add	x22, x0, x22
  456720:	ldrb	w8, [x22, #1]!
  456724:	cbnz	w8, 4566e8 <_obstack_memory_used@@Base+0xfb98>
  456728:	ldr	x8, [x20]
  45672c:	add	x9, x8, #0x9
  456730:	cmp	x8, #0x0
  456734:	csel	x22, x22, x9, eq  // eq = none
  456738:	csel	x20, x20, x8, eq  // eq = none
  45673c:	b	4566e8 <_obstack_memory_used@@Base+0xfb98>
  456740:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  456744:	add	x22, x22, #0x66
  456748:	str	x22, [x19, #48]
  45674c:	mov	w0, #0x1                   	// #1
  456750:	ldp	x20, x19, [sp, #48]
  456754:	ldp	x22, x21, [sp, #32]
  456758:	ldp	x24, x23, [sp, #16]
  45675c:	ldp	x29, x30, [sp], #64
  456760:	ret
  456764:	mov	x24, x22
  456768:	mov	x0, x21
  45676c:	bl	403f40 <strlen@plt>
  456770:	sub	x8, x22, x24
  456774:	add	x23, x0, #0x1
  456778:	mvn	x9, x8
  45677c:	cmp	x23, x9
  456780:	b.ls	45679c <_obstack_memory_used@@Base+0xfc4c>  // b.plast
  456784:	bl	404a10 <__errno_location@plt>
  456788:	mov	x8, x0
  45678c:	mov	w9, #0xc                   	// #12
  456790:	mov	w0, wzr
  456794:	str	w9, [x8]
  456798:	b	456750 <_obstack_memory_used@@Base+0xfc00>
  45679c:	add	x8, x23, x8
  4567a0:	cmp	x8, #0x76
  4567a4:	b.hi	4567c0 <_obstack_memory_used@@Base+0xfc70>  // b.pmore
  4567a8:	mov	x0, x22
  4567ac:	mov	x1, x21
  4567b0:	mov	x2, x23
  4567b4:	bl	403ec0 <memcpy@plt>
  4567b8:	strb	wzr, [x22, x23]
  4567bc:	b	456748 <_obstack_memory_used@@Base+0xfbf8>
  4567c0:	add	x8, x0, #0x12
  4567c4:	cmp	x23, #0x77
  4567c8:	and	x8, x8, #0xfffffffffffffff8
  4567cc:	mov	w9, #0x80                  	// #128
  4567d0:	csel	x0, x9, x8, cc  // cc = lo, ul, last
  4567d4:	bl	404250 <malloc@plt>
  4567d8:	cbz	x0, 456810 <_obstack_memory_used@@Base+0xfcc0>
  4567dc:	mov	w8, #0x1                   	// #1
  4567e0:	add	x22, x0, #0x9
  4567e4:	mov	x24, x0
  4567e8:	str	xzr, [x0]
  4567ec:	strh	w8, [x0, #8]
  4567f0:	mov	x0, x22
  4567f4:	mov	x1, x21
  4567f8:	mov	x2, x23
  4567fc:	bl	403ec0 <memcpy@plt>
  456800:	strb	wzr, [x22, x23]
  456804:	str	x24, [x20]
  456808:	strb	wzr, [x24, #8]
  45680c:	b	456748 <_obstack_memory_used@@Base+0xfbf8>
  456810:	str	xzr, [x20]
  456814:	b	456750 <_obstack_memory_used@@Base+0xfc00>
  456818:	sub	sp, sp, #0x80
  45681c:	stp	x20, x19, [sp, #112]
  456820:	mov	x20, x1
  456824:	stp	x29, x30, [sp, #64]
  456828:	str	x23, [sp, #80]
  45682c:	stp	x22, x21, [sp, #96]
  456830:	add	x29, sp, #0x40
  456834:	cbz	x0, 456878 <_obstack_memory_used@@Base+0xfd28>
  456838:	mov	x21, x0
  45683c:	bl	456568 <_obstack_memory_used@@Base+0xfa18>
  456840:	cbz	x0, 456978 <_obstack_memory_used@@Base+0xfe28>
  456844:	mov	x19, x0
  456848:	mov	x0, x20
  45684c:	bl	404560 <mktime@plt>
  456850:	cmn	x0, #0x1
  456854:	str	x0, [x29, #24]
  456858:	b.eq	456894 <_obstack_memory_used@@Base+0xfd44>  // b.none
  45685c:	mov	x0, x21
  456860:	mov	x1, x20
  456864:	bl	4566a4 <_obstack_memory_used@@Base+0xfb54>
  456868:	tbnz	w0, #0, 456910 <_obstack_memory_used@@Base+0xfdc0>
  45686c:	mov	x8, #0xffffffffffffffff    	// #-1
  456870:	str	x8, [x29, #24]
  456874:	b	456910 <_obstack_memory_used@@Base+0xfdc0>
  456878:	mov	x0, x20
  45687c:	ldp	x20, x19, [sp, #112]
  456880:	ldp	x22, x21, [sp, #96]
  456884:	ldr	x23, [sp, #80]
  456888:	ldp	x29, x30, [sp, #64]
  45688c:	add	sp, sp, #0x80
  456890:	b	404a80 <timegm@plt>
  456894:	add	x0, x29, #0x18
  456898:	mov	x1, sp
  45689c:	bl	404040 <localtime_r@plt>
  4568a0:	cbz	x0, 456910 <_obstack_memory_used@@Base+0xfdc0>
  4568a4:	ldr	q0, [x20]
  4568a8:	ldr	q1, [sp]
  4568ac:	ldr	w12, [x20, #32]
  4568b0:	ldp	w8, w9, [x20, #16]
  4568b4:	ldp	w10, w11, [sp, #16]
  4568b8:	ldr	w13, [sp, #32]
  4568bc:	eor	v0.16b, v1.16b, v0.16b
  4568c0:	cmp	w12, #0x0
  4568c4:	ext	v1.16b, v0.16b, v0.16b, #8
  4568c8:	eor	w8, w10, w8
  4568cc:	eor	w9, w11, w9
  4568d0:	orr	w10, w13, w12
  4568d4:	cset	w11, eq  // eq = none
  4568d8:	cmp	w13, #0x0
  4568dc:	orr	v0.16b, v0.16b, v1.16b
  4568e0:	cset	w12, eq  // eq = none
  4568e4:	cmp	w10, #0x0
  4568e8:	dup	v1.4s, v0.s[1]
  4568ec:	eor	w10, w11, w12
  4568f0:	cset	w11, ge  // ge = tcont
  4568f4:	orr	v0.16b, v0.16b, v1.16b
  4568f8:	and	w10, w11, w10
  4568fc:	fmov	w11, s0
  456900:	orr	w8, w11, w8
  456904:	orr	w8, w8, w9
  456908:	orr	w8, w8, w10
  45690c:	cbz	w8, 45685c <_obstack_memory_used@@Base+0xfd0c>
  456910:	cmp	x19, #0x1
  456914:	b.eq	456970 <_obstack_memory_used@@Base+0xfe20>  // b.none
  456918:	bl	404a10 <__errno_location@plt>
  45691c:	ldrb	w8, [x19, #8]
  456920:	ldr	w21, [x0]
  456924:	mov	x20, x0
  456928:	cbz	w8, 456994 <_obstack_memory_used@@Base+0xfe44>
  45692c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  456930:	add	x1, x19, #0x9
  456934:	add	x0, x0, #0x4ea
  456938:	mov	w2, #0x1                   	// #1
  45693c:	bl	404050 <setenv@plt>
  456940:	cbz	w0, 4569a4 <_obstack_memory_used@@Base+0xfe54>
  456944:	ldr	w21, [x20]
  456948:	mov	w22, wzr
  45694c:	cmp	x19, #0x2
  456950:	b.cc	456968 <_obstack_memory_used@@Base+0xfe18>  // b.lo, b.ul, b.last
  456954:	ldr	x23, [x19]
  456958:	mov	x0, x19
  45695c:	bl	404700 <free@plt>
  456960:	mov	x19, x23
  456964:	cbnz	x23, 456954 <_obstack_memory_used@@Base+0xfe04>
  456968:	str	w21, [x20]
  45696c:	tbz	w22, #0, 456978 <_obstack_memory_used@@Base+0xfe28>
  456970:	ldr	x0, [x29, #24]
  456974:	b	45697c <_obstack_memory_used@@Base+0xfe2c>
  456978:	mov	x0, #0xffffffffffffffff    	// #-1
  45697c:	ldp	x20, x19, [sp, #112]
  456980:	ldp	x22, x21, [sp, #96]
  456984:	ldr	x23, [sp, #80]
  456988:	ldp	x29, x30, [sp, #64]
  45698c:	add	sp, sp, #0x80
  456990:	ret
  456994:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  456998:	add	x0, x0, #0x4ea
  45699c:	bl	404860 <unsetenv@plt>
  4569a0:	cbnz	w0, 456944 <_obstack_memory_used@@Base+0xfdf4>
  4569a4:	bl	4042a0 <tzset@plt>
  4569a8:	mov	w22, #0x1                   	// #1
  4569ac:	cmp	x19, #0x2
  4569b0:	b.cs	456954 <_obstack_memory_used@@Base+0xfe04>  // b.hs, b.nlast
  4569b4:	b	456968 <_obstack_memory_used@@Base+0xfe18>
  4569b8:	mov	w8, w0
  4569bc:	cmp	w0, #0x26
  4569c0:	mov	w0, wzr
  4569c4:	b.hi	4569e4 <_obstack_memory_used@@Base+0xfe94>  // b.pmore
  4569c8:	mov	w9, w8
  4569cc:	mov	w10, #0x1                   	// #1
  4569d0:	lsl	x9, x10, x9
  4569d4:	mov	x10, #0x410000              	// #4259840
  4569d8:	movk	x10, #0x40, lsl #32
  4569dc:	tst	x9, x10
  4569e0:	b.ne	4569ec <_obstack_memory_used@@Base+0xfe9c>  // b.any
  4569e4:	cmp	w8, #0x5f
  4569e8:	b.ne	4569f0 <_obstack_memory_used@@Base+0xfea0>  // b.any
  4569ec:	ret
  4569f0:	mov	w0, #0x1                   	// #1
  4569f4:	ret
  4569f8:	stp	x29, x30, [sp, #-64]!
  4569fc:	str	x23, [sp, #16]
  456a00:	mov	x23, x0
  456a04:	mov	w0, #0x48                  	// #72
  456a08:	stp	x22, x21, [sp, #32]
  456a0c:	stp	x20, x19, [sp, #48]
  456a10:	mov	x29, sp
  456a14:	mov	x20, x3
  456a18:	mov	x21, x2
  456a1c:	mov	x22, x1
  456a20:	bl	404250 <malloc@plt>
  456a24:	mov	x19, x0
  456a28:	cbz	x0, 456a60 <_obstack_memory_used@@Base+0xff10>
  456a2c:	mov	w0, #0xc8                  	// #200
  456a30:	stp	x23, x22, [x19]
  456a34:	stp	x21, x20, [x19, #16]
  456a38:	stp	xzr, xzr, [x19, #32]
  456a3c:	bl	404250 <malloc@plt>
  456a40:	str	x0, [x19, #48]
  456a44:	cbz	x0, 456a54 <_obstack_memory_used@@Base+0xff04>
  456a48:	add	x8, x0, #0xc8
  456a4c:	stp	x0, x8, [x19, #56]
  456a50:	b	456a60 <_obstack_memory_used@@Base+0xff10>
  456a54:	mov	x0, x19
  456a58:	bl	404700 <free@plt>
  456a5c:	mov	x19, xzr
  456a60:	mov	x0, x19
  456a64:	ldp	x20, x19, [sp, #48]
  456a68:	ldp	x22, x21, [sp, #32]
  456a6c:	ldr	x23, [sp, #16]
  456a70:	ldp	x29, x30, [sp], #64
  456a74:	ret
  456a78:	stp	x29, x30, [sp, #-32]!
  456a7c:	str	x19, [sp, #16]
  456a80:	mov	x29, sp
  456a84:	mov	x19, x0
  456a88:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  456a8c:	ldp	x0, x8, [x19, #48]
  456a90:	subs	x2, x8, x0
  456a94:	b.ls	456aa4 <_obstack_memory_used@@Base+0xff54>  // b.plast
  456a98:	ldr	x3, [x19]
  456a9c:	mov	w1, #0x1                   	// #1
  456aa0:	bl	403f20 <fwrite_unlocked@plt>
  456aa4:	ldr	x0, [x19, #48]
  456aa8:	bl	404700 <free@plt>
  456aac:	mov	x0, x19
  456ab0:	ldr	x19, [sp, #16]
  456ab4:	ldp	x29, x30, [sp], #32
  456ab8:	b	404700 <free@plt>
  456abc:	sub	sp, sp, #0x70
  456ac0:	stp	x29, x30, [sp, #16]
  456ac4:	stp	x28, x27, [sp, #32]
  456ac8:	stp	x26, x25, [sp, #48]
  456acc:	stp	x24, x23, [sp, #64]
  456ad0:	stp	x22, x21, [sp, #80]
  456ad4:	stp	x20, x19, [sp, #96]
  456ad8:	ldr	x8, [x0, #32]
  456adc:	ldp	x9, x27, [x0, #48]
  456ae0:	mov	x19, x0
  456ae4:	add	x29, sp, #0x10
  456ae8:	add	x21, x9, x8
  456aec:	cmp	x21, x27
  456af0:	b.cs	456f2c <_obstack_memory_used@@Base+0x103dc>  // b.hs, b.nlast
  456af4:	ldr	x23, [x19, #40]
  456af8:	mov	w25, #0x20                  	// #32
  456afc:	b	456b18 <_obstack_memory_used@@Base+0xffc8>
  456b00:	mov	x23, xzr
  456b04:	add	x20, x24, #0x1
  456b08:	str	xzr, [x19, #40]
  456b0c:	cmp	x20, x27
  456b10:	mov	x21, x20
  456b14:	b.cs	456f2c <_obstack_memory_used@@Base+0x103dc>  // b.hs, b.nlast
  456b18:	cbnz	x23, 456b74 <_obstack_memory_used@@Base+0x10024>
  456b1c:	ldr	x23, [x19, #8]
  456b20:	cbz	x23, 456b74 <_obstack_memory_used@@Base+0x10024>
  456b24:	ldr	x8, [x19, #64]
  456b28:	add	x9, x27, x23
  456b2c:	mov	x20, x23
  456b30:	cmp	x9, x8
  456b34:	b.cs	456bac <_obstack_memory_used@@Base+0x1005c>  // b.hs, b.nlast
  456b38:	add	x20, x21, x23
  456b3c:	sub	x2, x27, x21
  456b40:	mov	x0, x20
  456b44:	mov	x1, x21
  456b48:	bl	403ed0 <memmove@plt>
  456b4c:	ldr	x8, [x19, #56]
  456b50:	mov	w1, #0x20                  	// #32
  456b54:	mov	x0, x21
  456b58:	mov	x2, x23
  456b5c:	add	x8, x8, x23
  456b60:	str	x8, [x19, #56]
  456b64:	bl	404360 <memset@plt>
  456b68:	mov	x21, x20
  456b6c:	ldr	x27, [x19, #56]
  456b70:	str	x23, [x19, #40]
  456b74:	sub	x26, x27, x21
  456b78:	mov	w1, #0xa                   	// #10
  456b7c:	mov	x0, x21
  456b80:	mov	x2, x26
  456b84:	bl	404890 <memchr@plt>
  456b88:	mov	x24, x0
  456b8c:	tbnz	x23, #63, 456be8 <_obstack_memory_used@@Base+0x10098>
  456b90:	cbz	x24, 456bf4 <_obstack_memory_used@@Base+0x100a4>
  456b94:	ldr	x20, [x19, #16]
  456b98:	sub	x8, x24, x21
  456b9c:	add	x8, x8, x23
  456ba0:	cmp	x8, x20
  456ba4:	b.lt	456b00 <_obstack_memory_used@@Base+0xffb0>  // b.tstop
  456ba8:	b	456c08 <_obstack_memory_used@@Base+0x100b8>
  456bac:	ldr	x0, [x19]
  456bb0:	ldp	x8, x9, [x0, #40]
  456bb4:	cmp	x8, x9
  456bb8:	b.cs	456bd4 <_obstack_memory_used@@Base+0x10084>  // b.hs, b.nlast
  456bbc:	add	x9, x8, #0x1
  456bc0:	str	x9, [x0, #40]
  456bc4:	strb	w25, [x8]
  456bc8:	subs	x20, x20, #0x1
  456bcc:	b.ne	456bac <_obstack_memory_used@@Base+0x1005c>  // b.any
  456bd0:	b	456b6c <_obstack_memory_used@@Base+0x1001c>
  456bd4:	mov	w1, #0x20                  	// #32
  456bd8:	bl	4045e0 <__overflow@plt>
  456bdc:	subs	x20, x20, #0x1
  456be0:	b.ne	456bac <_obstack_memory_used@@Base+0x1005c>  // b.any
  456be4:	b	456b6c <_obstack_memory_used@@Base+0x1001c>
  456be8:	mov	x23, xzr
  456bec:	str	xzr, [x19, #40]
  456bf0:	cbnz	x24, 456b94 <_obstack_memory_used@@Base+0x10044>
  456bf4:	ldr	x20, [x19, #16]
  456bf8:	add	x8, x23, x26
  456bfc:	mov	x24, x27
  456c00:	cmp	x8, x20
  456c04:	b.cc	456f10 <_obstack_memory_used@@Base+0x103c0>  // b.lo, b.ul, b.last
  456c08:	ldr	x28, [x19, #24]
  456c0c:	tbnz	x28, #63, 456c4c <_obstack_memory_used@@Base+0x100fc>
  456c10:	str	x26, [sp, #8]
  456c14:	subs	x26, x20, x23
  456c18:	add	x20, x21, x26
  456c1c:	b.mi	456c98 <_obstack_memory_used@@Base+0x10148>  // b.first
  456c20:	bl	404690 <__ctype_b_loc@plt>
  456c24:	ldr	x8, [x0]
  456c28:	mov	x22, x20
  456c2c:	ldrb	w9, [x22]
  456c30:	ldrh	w9, [x8, x9, lsl #1]
  456c34:	tbnz	w9, #0, 456ca4 <_obstack_memory_used@@Base+0x10154>
  456c38:	sub	x22, x22, #0x1
  456c3c:	cmp	x22, x21
  456c40:	b.cs	456c2c <_obstack_memory_used@@Base+0x100dc>  // b.hs, b.nlast
  456c44:	mov	w8, wzr
  456c48:	b	456ca8 <_obstack_memory_used@@Base+0x10158>
  456c4c:	cmp	x24, x27
  456c50:	sub	x22, x20, #0x1
  456c54:	b.cs	456f18 <_obstack_memory_used@@Base+0x103c8>  // b.hs, b.nlast
  456c58:	sub	x8, x22, x23
  456c5c:	add	x0, x21, x8
  456c60:	sub	x2, x27, x24
  456c64:	mov	x1, x24
  456c68:	bl	403ed0 <memmove@plt>
  456c6c:	ldr	x8, [x19, #40]
  456c70:	ldr	x9, [x19, #56]
  456c74:	mov	x23, xzr
  456c78:	str	xzr, [x19, #40]
  456c7c:	sub	x8, x22, x8
  456c80:	add	x8, x21, x8
  456c84:	sub	x8, x24, x8
  456c88:	add	x27, x9, x8
  456c8c:	str	x27, [x19, #56]
  456c90:	add	x20, x21, x20
  456c94:	b	456b0c <_obstack_memory_used@@Base+0xffbc>
  456c98:	mov	w8, wzr
  456c9c:	mov	x22, x20
  456ca0:	b	456ca8 <_obstack_memory_used@@Base+0x10158>
  456ca4:	mov	w8, #0x1                   	// #1
  456ca8:	add	x23, x22, #0x1
  456cac:	cmp	x23, x21
  456cb0:	b.ls	456ce8 <_obstack_memory_used@@Base+0x10198>  // b.plast
  456cb4:	cbz	w8, 456d44 <_obstack_memory_used@@Base+0x101f4>
  456cb8:	ldr	x24, [sp, #8]
  456cbc:	sub	x8, x22, #0x1
  456cc0:	mov	x22, x8
  456cc4:	cmp	x8, x21
  456cc8:	b.cc	456d48 <_obstack_memory_used@@Base+0x101f8>  // b.lo, b.ul, b.last
  456ccc:	bl	404690 <__ctype_b_loc@plt>
  456cd0:	mov	x8, x22
  456cd4:	ldr	x9, [x0]
  456cd8:	ldrb	w10, [x8], #-1
  456cdc:	ldrh	w9, [x9, x10, lsl #1]
  456ce0:	tbnz	w9, #0, 456cc0 <_obstack_memory_used@@Base+0x10170>
  456ce4:	b	456d48 <_obstack_memory_used@@Base+0x101f8>
  456ce8:	cmp	x20, x24
  456cec:	b.cs	456d1c <_obstack_memory_used@@Base+0x101cc>  // b.hs, b.nlast
  456cf0:	add	x8, x21, x26
  456cf4:	add	x8, x8, #0x1
  456cf8:	mov	x20, x8
  456cfc:	cmp	x8, x24
  456d00:	b.cs	456d1c <_obstack_memory_used@@Base+0x101cc>  // b.hs, b.nlast
  456d04:	bl	404690 <__ctype_b_loc@plt>
  456d08:	mov	x8, x20
  456d0c:	ldr	x9, [x0]
  456d10:	ldrb	w10, [x8], #1
  456d14:	ldrh	w9, [x9, x10, lsl #1]
  456d18:	tbz	w9, #0, 456cf8 <_obstack_memory_used@@Base+0x101a8>
  456d1c:	cmp	x20, x24
  456d20:	b.eq	456b00 <_obstack_memory_used@@Base+0xffb0>  // b.none
  456d24:	bl	404690 <__ctype_b_loc@plt>
  456d28:	ldr	x8, [x0]
  456d2c:	mov	x23, x20
  456d30:	ldrb	w9, [x23, #1]!
  456d34:	ldrh	w9, [x8, x9, lsl #1]
  456d38:	tbnz	w9, #0, 456d30 <_obstack_memory_used@@Base+0x101e0>
  456d3c:	ldr	x24, [sp, #8]
  456d40:	b	456d4c <_obstack_memory_used@@Base+0x101fc>
  456d44:	ldr	x24, [sp, #8]
  456d48:	add	x20, x22, #0x1
  456d4c:	add	x8, x27, #0x1
  456d50:	cmp	x23, x8
  456d54:	b.eq	456d78 <_obstack_memory_used@@Base+0x10228>  // b.none
  456d58:	cmp	x27, x23
  456d5c:	b.ls	456dd8 <_obstack_memory_used@@Base+0x10288>  // b.plast
  456d60:	mvn	x8, x20
  456d64:	add	x8, x8, x23
  456d68:	cmp	x8, x28
  456d6c:	b.ge	456dd8 <_obstack_memory_used@@Base+0x10288>  // b.tcont
  456d70:	ldr	x8, [x19, #64]
  456d74:	b	456d90 <_obstack_memory_used@@Base+0x10240>
  456d78:	cmp	x27, x23
  456d7c:	b.ls	456dd8 <_obstack_memory_used@@Base+0x10288>  // b.plast
  456d80:	ldr	x8, [x19, #64]
  456d84:	sub	x9, x8, x20
  456d88:	cmp	x9, x28
  456d8c:	b.gt	456dd8 <_obstack_memory_used@@Base+0x10288>
  456d90:	sub	x8, x8, x27
  456d94:	add	x9, x28, #0x1
  456d98:	cmp	x8, x9
  456d9c:	b.le	456de4 <_obstack_memory_used@@Base+0x10294>
  456da0:	sub	x22, x27, x23
  456da4:	add	x24, x20, #0x1
  456da8:	add	x0, x24, x28
  456dac:	mov	x1, x23
  456db0:	mov	x2, x22
  456db4:	bl	403ed0 <memmove@plt>
  456db8:	ldr	x8, [x19, #24]
  456dbc:	mov	w9, #0xa                   	// #10
  456dc0:	strb	w9, [x20]
  456dc4:	mov	x20, x24
  456dc8:	add	x23, x24, x8
  456dcc:	add	x8, x23, x22
  456dd0:	sub	x24, x8, x21
  456dd4:	b	456e28 <_obstack_memory_used@@Base+0x102d8>
  456dd8:	mov	w8, #0xa                   	// #10
  456ddc:	strb	w8, [x20], #1
  456de0:	b	456e28 <_obstack_memory_used@@Base+0x102d8>
  456de4:	ldr	x0, [x19, #48]
  456de8:	subs	x2, x20, x0
  456dec:	b.ls	456dfc <_obstack_memory_used@@Base+0x102ac>  // b.plast
  456df0:	ldr	x3, [x19]
  456df4:	mov	w1, #0x1                   	// #1
  456df8:	bl	403f20 <fwrite_unlocked@plt>
  456dfc:	ldr	x0, [x19]
  456e00:	ldp	x8, x9, [x0, #40]
  456e04:	cmp	x8, x9
  456e08:	b.cs	456f04 <_obstack_memory_used@@Base+0x103b4>  // b.hs, b.nlast
  456e0c:	add	x9, x8, #0x1
  456e10:	str	x9, [x0, #40]
  456e14:	mov	w9, #0xa                   	// #10
  456e18:	strb	w9, [x8]
  456e1c:	ldr	x20, [x19, #48]
  456e20:	sub	x24, x27, x20
  456e24:	mov	x21, x20
  456e28:	ldr	x8, [x19, #24]
  456e2c:	sub	x9, x23, x20
  456e30:	cmp	x9, x8
  456e34:	b.ge	456ea0 <_obstack_memory_used@@Base+0x10350>  // b.tcont
  456e38:	add	x9, x21, x24
  456e3c:	add	x9, x9, #0x1
  456e40:	cmp	x23, x9
  456e44:	b.ne	456e58 <_obstack_memory_used@@Base+0x10308>  // b.any
  456e48:	ldr	x9, [x19, #64]
  456e4c:	sub	x9, x9, x23
  456e50:	cmp	x9, x8
  456e54:	b.ge	456ea0 <_obstack_memory_used@@Base+0x10350>  // b.tcont
  456e58:	cmp	x8, #0x1
  456e5c:	b.lt	456ec4 <_obstack_memory_used@@Base+0x10374>  // b.tstop
  456e60:	mov	x22, xzr
  456e64:	ldr	x0, [x19]
  456e68:	ldp	x8, x9, [x0, #40]
  456e6c:	cmp	x8, x9
  456e70:	b.cs	456e94 <_obstack_memory_used@@Base+0x10344>  // b.hs, b.nlast
  456e74:	add	x9, x8, #0x1
  456e78:	str	x9, [x0, #40]
  456e7c:	strb	w25, [x8]
  456e80:	ldr	x8, [x19, #24]
  456e84:	add	x22, x22, #0x1
  456e88:	cmp	x8, x22
  456e8c:	b.gt	456e64 <_obstack_memory_used@@Base+0x10314>
  456e90:	b	456ec4 <_obstack_memory_used@@Base+0x10374>
  456e94:	mov	w1, #0x20                  	// #32
  456e98:	bl	4045e0 <__overflow@plt>
  456e9c:	b	456e80 <_obstack_memory_used@@Base+0x10330>
  456ea0:	cmp	x8, #0x1
  456ea4:	b.lt	456ec4 <_obstack_memory_used@@Base+0x10374>  // b.tstop
  456ea8:	mov	x9, xzr
  456eac:	strb	w25, [x20, x9]
  456eb0:	ldr	x8, [x19, #24]
  456eb4:	add	x9, x9, #0x1
  456eb8:	cmp	x8, x9
  456ebc:	b.gt	456eac <_obstack_memory_used@@Base+0x1035c>
  456ec0:	add	x20, x20, x9
  456ec4:	cmp	x20, x23
  456ec8:	b.cs	456ee4 <_obstack_memory_used@@Base+0x10394>  // b.hs, b.nlast
  456ecc:	add	x8, x21, x24
  456ed0:	sub	x2, x8, x23
  456ed4:	mov	x0, x20
  456ed8:	mov	x1, x23
  456edc:	bl	403ed0 <memmove@plt>
  456ee0:	ldr	x8, [x19, #24]
  456ee4:	sub	x9, x24, x23
  456ee8:	cmp	x8, #0x0
  456eec:	add	x9, x9, x21
  456ef0:	csinv	x23, x8, xzr, ne  // ne = any
  456ef4:	add	x27, x20, x9
  456ef8:	str	x27, [x19, #56]
  456efc:	str	x23, [x19, #40]
  456f00:	b	456b0c <_obstack_memory_used@@Base+0xffbc>
  456f04:	mov	w1, #0xa                   	// #10
  456f08:	bl	4045e0 <__overflow@plt>
  456f0c:	b	456e1c <_obstack_memory_used@@Base+0x102cc>
  456f10:	str	x8, [x19, #40]
  456f14:	b	456f2c <_obstack_memory_used@@Base+0x103dc>
  456f18:	add	x8, x23, x26
  456f1c:	str	x8, [x19, #40]
  456f20:	sub	x8, x22, x8
  456f24:	add	x27, x27, x8
  456f28:	str	x27, [x19, #56]
  456f2c:	ldr	x8, [x19, #48]
  456f30:	sub	x8, x27, x8
  456f34:	str	x8, [x19, #32]
  456f38:	ldp	x20, x19, [sp, #96]
  456f3c:	ldp	x22, x21, [sp, #80]
  456f40:	ldp	x24, x23, [sp, #64]
  456f44:	ldp	x26, x25, [sp, #48]
  456f48:	ldp	x28, x27, [sp, #32]
  456f4c:	ldp	x29, x30, [sp, #16]
  456f50:	add	sp, sp, #0x70
  456f54:	ret
  456f58:	stp	x29, x30, [sp, #-32]!
  456f5c:	stp	x20, x19, [sp, #16]
  456f60:	ldp	x9, x8, [x0, #56]
  456f64:	mov	x29, sp
  456f68:	sub	x8, x8, x9
  456f6c:	cmp	x8, x1
  456f70:	b.cs	456fe0 <_obstack_memory_used@@Base+0x10490>  // b.hs, b.nlast
  456f74:	mov	x20, x1
  456f78:	mov	x19, x0
  456f7c:	bl	456abc <_obstack_memory_used@@Base+0xff6c>
  456f80:	ldp	x0, x8, [x19, #48]
  456f84:	ldr	x3, [x19]
  456f88:	mov	w1, #0x1                   	// #1
  456f8c:	sub	x2, x8, x0
  456f90:	bl	403f20 <fwrite_unlocked@plt>
  456f94:	mov	x8, x0
  456f98:	ldp	x0, x9, [x19, #48]
  456f9c:	sub	x10, x9, x0
  456fa0:	cmp	x8, x10
  456fa4:	b.ne	456fe8 <_obstack_memory_used@@Base+0x10498>  // b.any
  456fa8:	ldr	x8, [x19, #64]
  456fac:	str	x0, [x19, #56]
  456fb0:	str	xzr, [x19, #32]
  456fb4:	sub	x8, x8, x0
  456fb8:	cmp	x8, x20
  456fbc:	b.cs	456fe0 <_obstack_memory_used@@Base+0x10490>  // b.hs, b.nlast
  456fc0:	adds	x20, x8, x20
  456fc4:	b.cs	457010 <_obstack_memory_used@@Base+0x104c0>  // b.hs, b.nlast
  456fc8:	mov	x1, x20
  456fcc:	bl	404490 <realloc@plt>
  456fd0:	cbz	x0, 457010 <_obstack_memory_used@@Base+0x104c0>
  456fd4:	add	x8, x0, x20
  456fd8:	stp	x0, x0, [x19, #48]
  456fdc:	str	x8, [x19, #64]
  456fe0:	mov	w0, #0x1                   	// #1
  456fe4:	b	457024 <_obstack_memory_used@@Base+0x104d4>
  456fe8:	ldr	x10, [x19, #32]
  456fec:	sub	x9, x9, x8
  456ff0:	add	x1, x0, x8
  456ff4:	sub	x2, x9, x0
  456ff8:	sub	x8, x10, x8
  456ffc:	str	x9, [x19, #56]
  457000:	str	x8, [x19, #32]
  457004:	bl	403ed0 <memmove@plt>
  457008:	mov	w0, wzr
  45700c:	b	457024 <_obstack_memory_used@@Base+0x104d4>
  457010:	bl	404a10 <__errno_location@plt>
  457014:	mov	x8, x0
  457018:	mov	w0, wzr
  45701c:	mov	w9, #0xc                   	// #12
  457020:	str	w9, [x8]
  457024:	ldp	x20, x19, [sp, #16]
  457028:	ldp	x29, x30, [sp], #32
  45702c:	ret
  457030:	sub	sp, sp, #0x140
  457034:	stp	x29, x30, [sp, #240]
  457038:	add	x29, sp, #0xf0
  45703c:	stp	x22, x21, [sp, #288]
  457040:	mov	x22, #0xffffffffffffffd0    	// #-48
  457044:	mov	x8, sp
  457048:	sub	x9, x29, #0x70
  45704c:	stp	x28, x25, [sp, #256]
  457050:	stp	x24, x23, [sp, #272]
  457054:	stp	x20, x19, [sp, #304]
  457058:	mov	x20, x1
  45705c:	mov	x19, x0
  457060:	mov	w1, #0x96                  	// #150
  457064:	movk	x22, #0xff80, lsl #32
  457068:	add	x23, x29, #0x50
  45706c:	add	x24, x8, #0x80
  457070:	add	x25, x9, #0x30
  457074:	stp	x2, x3, [x29, #-112]
  457078:	stp	x4, x5, [x29, #-96]
  45707c:	stp	x6, x7, [x29, #-80]
  457080:	stp	q1, q2, [sp, #16]
  457084:	stp	q3, q4, [sp, #48]
  457088:	str	q0, [sp]
  45708c:	stp	q5, q6, [sp, #80]
  457090:	str	q7, [sp, #112]
  457094:	mov	x0, x19
  457098:	bl	456f58 <_obstack_memory_used@@Base+0x10408>
  45709c:	cbz	w0, 4570f8 <_obstack_memory_used@@Base+0x105a8>
  4570a0:	stp	x24, x22, [x29, #-48]
  4570a4:	stp	x23, x25, [x29, #-64]
  4570a8:	ldp	x0, x8, [x19, #56]
  4570ac:	ldp	q0, q1, [x29, #-64]
  4570b0:	sub	x5, x29, #0x20
  4570b4:	mov	w2, #0x1                   	// #1
  4570b8:	sub	x21, x8, x0
  4570bc:	mov	x3, #0xffffffffffffffff    	// #-1
  4570c0:	mov	x1, x21
  4570c4:	mov	x4, x20
  4570c8:	stp	q0, q1, [x29, #-32]
  4570cc:	bl	404230 <__vsnprintf_chk@plt>
  4570d0:	mov	w8, w0
  4570d4:	sxtw	x0, w8
  4570d8:	add	w8, w8, #0x1
  4570dc:	cmp	x21, x0
  4570e0:	sxtw	x1, w8
  4570e4:	b.ls	457094 <_obstack_memory_used@@Base+0x10544>  // b.plast
  4570e8:	ldr	x8, [x19, #56]
  4570ec:	add	x8, x8, x0
  4570f0:	str	x8, [x19, #56]
  4570f4:	b	4570fc <_obstack_memory_used@@Base+0x105ac>
  4570f8:	mov	x0, #0xffffffffffffffff    	// #-1
  4570fc:	ldp	x20, x19, [sp, #304]
  457100:	ldp	x22, x21, [sp, #288]
  457104:	ldp	x24, x23, [sp, #272]
  457108:	ldp	x28, x25, [sp, #256]
  45710c:	ldp	x29, x30, [sp, #240]
  457110:	add	sp, sp, #0x140
  457114:	ret
  457118:	stp	x29, x30, [sp, #-48]!
  45711c:	str	x21, [sp, #16]
  457120:	stp	x20, x19, [sp, #32]
  457124:	mov	x29, sp
  457128:	mov	x20, x0
  45712c:	bl	404130 <__fpending@plt>
  457130:	ldr	w21, [x20]
  457134:	mov	x19, x0
  457138:	mov	x0, x20
  45713c:	bl	4041e0 <fclose@plt>
  457140:	mov	w8, w0
  457144:	tbnz	w21, #5, 45716c <_obstack_memory_used@@Base+0x1061c>
  457148:	cmp	w8, #0x0
  45714c:	csetm	w0, ne  // ne = any
  457150:	cbnz	x19, 45717c <_obstack_memory_used@@Base+0x1062c>
  457154:	cbz	w8, 45717c <_obstack_memory_used@@Base+0x1062c>
  457158:	bl	404a10 <__errno_location@plt>
  45715c:	ldr	w8, [x0]
  457160:	cmp	w8, #0x9
  457164:	csetm	w0, ne  // ne = any
  457168:	b	45717c <_obstack_memory_used@@Base+0x1062c>
  45716c:	cbnz	w8, 457178 <_obstack_memory_used@@Base+0x10628>
  457170:	bl	404a10 <__errno_location@plt>
  457174:	str	wzr, [x0]
  457178:	mov	w0, #0xffffffff            	// #-1
  45717c:	ldp	x20, x19, [sp, #32]
  457180:	ldr	x21, [sp, #16]
  457184:	ldp	x29, x30, [sp], #48
  457188:	ret
  45718c:	stp	x29, x30, [sp, #-64]!
  457190:	str	x23, [sp, #16]
  457194:	stp	x22, x21, [sp, #32]
  457198:	stp	x20, x19, [sp, #48]
  45719c:	mov	x29, sp
  4571a0:	bl	404090 <opendir@plt>
  4571a4:	mov	x19, x0
  4571a8:	cbz	x0, 457214 <_obstack_memory_used@@Base+0x106c4>
  4571ac:	mov	x0, x19
  4571b0:	bl	404850 <dirfd@plt>
  4571b4:	cmp	w0, #0x2
  4571b8:	b.hi	457214 <_obstack_memory_used@@Base+0x106c4>  // b.pmore
  4571bc:	mov	w1, #0x406                 	// #1030
  4571c0:	mov	w2, #0x3                   	// #3
  4571c4:	bl	446494 <argp_parse@@Base+0xebe8>
  4571c8:	tbnz	w0, #31, 4571f4 <_obstack_memory_used@@Base+0x106a4>
  4571cc:	mov	w22, w0
  4571d0:	bl	404570 <fdopendir@plt>
  4571d4:	mov	x21, x0
  4571d8:	bl	404a10 <__errno_location@plt>
  4571dc:	ldr	w23, [x0]
  4571e0:	mov	x20, x0
  4571e4:	cbnz	x21, 457204 <_obstack_memory_used@@Base+0x106b4>
  4571e8:	mov	w0, w22
  4571ec:	bl	404520 <close@plt>
  4571f0:	b	457204 <_obstack_memory_used@@Base+0x106b4>
  4571f4:	bl	404a10 <__errno_location@plt>
  4571f8:	ldr	w23, [x0]
  4571fc:	mov	x20, x0
  457200:	mov	x21, xzr
  457204:	mov	x0, x19
  457208:	bl	4044f0 <closedir@plt>
  45720c:	mov	x19, x21
  457210:	str	w23, [x20]
  457214:	mov	x0, x19
  457218:	ldp	x20, x19, [sp, #48]
  45721c:	ldp	x22, x21, [sp, #32]
  457220:	ldr	x23, [sp, #16]
  457224:	ldp	x29, x30, [sp], #64
  457228:	ret
  45722c:	sub	sp, sp, #0xe0
  457230:	stp	x29, x30, [sp, #208]
  457234:	add	x29, sp, #0xd0
  457238:	stp	x2, x3, [x29, #-80]
  45723c:	stp	x4, x5, [x29, #-64]
  457240:	stp	x6, x7, [x29, #-48]
  457244:	stp	q1, q2, [sp, #16]
  457248:	stp	q3, q4, [sp, #48]
  45724c:	str	q0, [sp]
  457250:	stp	q5, q6, [sp, #80]
  457254:	str	q7, [sp, #112]
  457258:	tbnz	w1, #6, 457264 <_obstack_memory_used@@Base+0x10714>
  45725c:	mov	w2, wzr
  457260:	b	4572bc <_obstack_memory_used@@Base+0x1076c>
  457264:	mov	x9, #0xffffffffffffffd0    	// #-48
  457268:	mov	x11, sp
  45726c:	sub	x12, x29, #0x50
  457270:	movk	x9, #0xff80, lsl #32
  457274:	add	x10, x29, #0x10
  457278:	mov	x8, #0xffffffffffffffd0    	// #-48
  45727c:	add	x11, x11, #0x80
  457280:	add	x12, x12, #0x30
  457284:	stp	x11, x9, [x29, #-16]
  457288:	stp	x10, x12, [x29, #-32]
  45728c:	tbz	w8, #31, 4572ac <_obstack_memory_used@@Base+0x1075c>
  457290:	add	w9, w8, #0x8
  457294:	cmn	w8, #0x8
  457298:	stur	w9, [x29, #-8]
  45729c:	b.gt	4572ac <_obstack_memory_used@@Base+0x1075c>
  4572a0:	ldur	x9, [x29, #-24]
  4572a4:	add	x8, x9, x8
  4572a8:	b	4572b8 <_obstack_memory_used@@Base+0x10768>
  4572ac:	ldur	x8, [x29, #-32]
  4572b0:	add	x9, x8, #0x8
  4572b4:	stur	x9, [x29, #-32]
  4572b8:	ldr	w2, [x8]
  4572bc:	bl	404280 <open@plt>
  4572c0:	bl	4588bc <_obstack_memory_used@@Base+0x11d6c>
  4572c4:	ldp	x29, x30, [sp, #208]
  4572c8:	add	sp, sp, #0xe0
  4572cc:	ret
  4572d0:	stp	x29, x30, [sp, #-32]!
  4572d4:	mov	x1, xzr
  4572d8:	str	x19, [sp, #16]
  4572dc:	mov	x29, sp
  4572e0:	bl	404b00 <setlocale@plt>
  4572e4:	cbz	x0, 457310 <_obstack_memory_used@@Base+0x107c0>
  4572e8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d4b0>
  4572ec:	add	x1, x1, #0xf03
  4572f0:	mov	x19, x0
  4572f4:	bl	404660 <strcmp@plt>
  4572f8:	cbz	w0, 457318 <_obstack_memory_used@@Base+0x107c8>
  4572fc:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  457300:	add	x1, x1, #0xeca
  457304:	mov	x0, x19
  457308:	bl	404660 <strcmp@plt>
  45730c:	cbz	w0, 457318 <_obstack_memory_used@@Base+0x107c8>
  457310:	mov	w0, #0x1                   	// #1
  457314:	b	45731c <_obstack_memory_used@@Base+0x107cc>
  457318:	mov	w0, wzr
  45731c:	ldr	x19, [sp, #16]
  457320:	ldp	x29, x30, [sp], #32
  457324:	ret
  457328:	stp	x29, x30, [sp, #-32]!
  45732c:	str	x19, [sp, #16]
  457330:	mov	x29, sp
  457334:	mov	w19, w0
  457338:	bl	404260 <wcwidth@plt>
  45733c:	tbz	w0, #31, 457350 <_obstack_memory_used@@Base+0x10800>
  457340:	mov	w0, w19
  457344:	bl	4040d0 <iswcntrl@plt>
  457348:	cmp	w0, #0x0
  45734c:	cset	w0, eq  // eq = none
  457350:	ldr	x19, [sp, #16]
  457354:	ldp	x29, x30, [sp], #32
  457358:	ret
  45735c:	stp	x29, x30, [sp, #-48]!
  457360:	str	x21, [sp, #16]
  457364:	stp	x20, x19, [sp, #32]
  457368:	mov	x8, x1
  45736c:	mov	x19, x1
  457370:	ldr	x1, [x8], #24
  457374:	mov	x20, x0
  457378:	mov	x29, sp
  45737c:	cmp	x1, x8
  457380:	b.ne	457398 <_obstack_memory_used@@Base+0x10848>  // b.any
  457384:	ldr	x2, [x19, #8]
  457388:	add	x21, x20, #0x18
  45738c:	mov	x0, x21
  457390:	bl	403ec0 <memcpy@plt>
  457394:	mov	x1, x21
  457398:	str	x1, [x20]
  45739c:	ldr	x8, [x19, #8]
  4573a0:	str	x8, [x20, #8]
  4573a4:	ldrb	w8, [x19, #16]
  4573a8:	strb	w8, [x20, #16]
  4573ac:	cbz	w8, 4573b8 <_obstack_memory_used@@Base+0x10868>
  4573b0:	ldr	w8, [x19, #20]
  4573b4:	str	w8, [x20, #20]
  4573b8:	ldp	x20, x19, [sp, #32]
  4573bc:	ldr	x21, [sp, #16]
  4573c0:	ldp	x29, x30, [sp], #48
  4573c4:	ret
  4573c8:	lsr	w8, w0, #3
  4573cc:	adrp	x9, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4573d0:	and	x8, x8, #0x1c
  4573d4:	add	x9, x9, #0xed0
  4573d8:	ldr	w8, [x9, x8]
  4573dc:	lsr	w8, w8, w0
  4573e0:	and	w0, w8, #0x1
  4573e4:	ret
  4573e8:	mov	w6, w5
  4573ec:	mov	x5, x4
  4573f0:	mov	w4, wzr
  4573f4:	b	4573f8 <_obstack_memory_used@@Base+0x108a8>
  4573f8:	stp	x29, x30, [sp, #-96]!
  4573fc:	stp	x28, x27, [sp, #16]
  457400:	stp	x26, x25, [sp, #32]
  457404:	stp	x24, x23, [sp, #48]
  457408:	stp	x22, x21, [sp, #64]
  45740c:	stp	x20, x19, [sp, #80]
  457410:	mov	x29, sp
  457414:	sub	sp, sp, #0x4b0
  457418:	ldr	x8, [x3, #48]
  45741c:	ldr	w9, [x3, #8]
  457420:	adrp	x10, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  457424:	mov	x25, x2
  457428:	add	x10, x10, #0x66
  45742c:	cmp	x8, #0x0
  457430:	csel	x12, x10, x8, eq  // eq = none
  457434:	ldrb	w8, [x25]
  457438:	mov	w11, #0xc                   	// #12
  45743c:	cmp	w9, #0x0
  457440:	csel	w10, w11, w9, eq  // eq = none
  457444:	subs	w9, w9, #0xc
  457448:	mov	x2, x0
  45744c:	csel	w9, w9, w10, gt
  457450:	str	x5, [sp, #72]
  457454:	str	w4, [sp, #116]
  457458:	str	x1, [sp, #120]
  45745c:	str	x3, [sp, #104]
  457460:	cbz	w8, 4587dc <_obstack_memory_used@@Base+0x11c8c>
  457464:	str	w9, [sp, #36]
  457468:	sub	x9, x29, #0x20
  45746c:	sub	x10, x29, #0x28
  457470:	add	x9, x9, #0x17
  457474:	str	x9, [sp, #96]
  457478:	orr	x9, x10, #0x2
  45747c:	add	x11, sp, #0x80
  457480:	str	x9, [sp, #88]
  457484:	orr	x9, x10, #0x3
  457488:	str	x12, [sp, #24]
  45748c:	sub	x12, x12, #0x1
  457490:	str	x9, [sp, #80]
  457494:	orr	x9, x11, #0x1
  457498:	mov	x0, xzr
  45749c:	stp	x12, x9, [sp, #8]
  4574a0:	sub	x9, x11, #0x1
  4574a4:	str	x9, [sp, #40]
  4574a8:	str	w6, [sp, #52]
  4574ac:	b	4574bc <_obstack_memory_used@@Base+0x1096c>
  4574b0:	add	x0, x0, #0x1
  4574b4:	ldrb	w8, [x25, #1]!
  4574b8:	cbz	w8, 4587e0 <_obstack_memory_used@@Base+0x11c90>
  4574bc:	and	w9, w8, #0xff
  4574c0:	cmp	w9, #0x25
  4574c4:	b.ne	45753c <_obstack_memory_used@@Base+0x109ec>  // b.any
  4574c8:	ldr	w20, [sp, #116]
  4574cc:	mov	w10, #0xcccc                	// #52428
  4574d0:	mov	w28, wzr
  4574d4:	mov	w26, wzr
  4574d8:	movk	w10, #0xccc, lsl #16
  4574dc:	mov	w11, #0xa                   	// #10
  4574e0:	add	x25, x25, #0x1
  4574e4:	b	4574f8 <_obstack_memory_used@@Base+0x109a8>
  4574e8:	cmp	w8, #0x2d
  4574ec:	b.ne	457528 <_obstack_memory_used@@Base+0x109d8>  // b.any
  4574f0:	add	x25, x25, #0x1
  4574f4:	mov	w26, w8
  4574f8:	ldrb	w8, [x25]
  4574fc:	cmp	w8, #0x2f
  457500:	b.le	4574e8 <_obstack_memory_used@@Base+0x10998>
  457504:	cmp	w8, #0x30
  457508:	b.eq	4574f0 <_obstack_memory_used@@Base+0x109a0>  // b.none
  45750c:	cmp	w8, #0x5f
  457510:	b.eq	4574f0 <_obstack_memory_used@@Base+0x109a0>  // b.none
  457514:	cmp	w8, #0x5e
  457518:	b.ne	457558 <_obstack_memory_used@@Base+0x10a08>  // b.any
  45751c:	mov	w20, #0x1                   	// #1
  457520:	add	x25, x25, #0x1
  457524:	b	4574f8 <_obstack_memory_used@@Base+0x109a8>
  457528:	cmp	w8, #0x23
  45752c:	b.ne	457558 <_obstack_memory_used@@Base+0x10a08>  // b.any
  457530:	mov	w28, #0x1                   	// #1
  457534:	add	x25, x25, #0x1
  457538:	b	4574f8 <_obstack_memory_used@@Base+0x109a8>
  45753c:	ldr	x9, [sp, #120]
  457540:	sub	x9, x9, x0
  457544:	cmp	x9, #0x2
  457548:	b.cc	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.lo, b.ul, b.last
  45754c:	cbz	x2, 4574b0 <_obstack_memory_used@@Base+0x10960>
  457550:	strb	w8, [x2], #1
  457554:	b	4574b0 <_obstack_memory_used@@Base+0x10960>
  457558:	sub	w9, w8, #0x30
  45755c:	cmp	w9, #0x9
  457560:	b.hi	4575a8 <_obstack_memory_used@@Base+0x10a58>  // b.pmore
  457564:	mov	w19, wzr
  457568:	b	457580 <_obstack_memory_used@@Base+0x10a30>
  45756c:	mov	w19, #0x7fffffff            	// #2147483647
  457570:	ldrb	w8, [x25, #1]!
  457574:	sub	w9, w8, #0x30
  457578:	cmp	w9, #0xa
  45757c:	b.cs	4575ac <_obstack_memory_used@@Base+0x10a5c>  // b.hs, b.nlast
  457580:	cmp	w19, w10
  457584:	b.gt	45756c <_obstack_memory_used@@Base+0x10a1c>
  457588:	b.ne	457598 <_obstack_memory_used@@Base+0x10a48>  // b.any
  45758c:	and	w9, w8, #0xff
  457590:	cmp	w9, #0x37
  457594:	b.hi	45756c <_obstack_memory_used@@Base+0x10a1c>  // b.pmore
  457598:	mul	w9, w19, w11
  45759c:	add	w8, w9, w8, uxtb
  4575a0:	sub	w19, w8, #0x30
  4575a4:	b	457570 <_obstack_memory_used@@Base+0x10a20>
  4575a8:	mov	w19, #0xffffffff            	// #-1
  4575ac:	cmp	w8, #0x4f
  4575b0:	b.eq	4575bc <_obstack_memory_used@@Base+0x10a6c>  // b.none
  4575b4:	cmp	w8, #0x45
  4575b8:	b.ne	4575d4 <_obstack_memory_used@@Base+0x10a84>  // b.any
  4575bc:	ldrb	w10, [x25, #1]!
  4575c0:	mov	w9, w8
  4575c4:	mov	w8, w10
  4575c8:	cmp	w8, #0x7a
  4575cc:	b.ls	4575e0 <_obstack_memory_used@@Base+0x10a90>  // b.plast
  4575d0:	b	458384 <_obstack_memory_used@@Base+0x11834>
  4575d4:	mov	w9, wzr
  4575d8:	cmp	w8, #0x7a
  4575dc:	b.hi	458384 <_obstack_memory_used@@Base+0x11834>  // b.pmore
  4575e0:	adrp	x14, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  4575e4:	add	x14, x14, #0xef0
  4575e8:	adr	x12, 457610 <_obstack_memory_used@@Base+0x10ac0>
  4575ec:	ldrh	w13, [x14, x8, lsl #1]
  4575f0:	add	x12, x12, x13, lsl #2
  4575f4:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0x164b0>
  4575f8:	mov	w24, wzr
  4575fc:	mov	w22, wzr
  457600:	mov	w11, wzr
  457604:	mov	x10, xzr
  457608:	add	x21, x21, #0x323
  45760c:	br	x12
  457610:	cmp	w9, #0x45
  457614:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457618:	ldr	x10, [sp, #104]
  45761c:	mov	w13, #0xffffff9c            	// #-100
  457620:	mov	w14, #0x12c                 	// #300
  457624:	ldr	w11, [x10, #20]
  457628:	ldp	w10, w12, [x10, #24]
  45762c:	cmp	w11, #0x0
  457630:	sub	w15, w12, w10
  457634:	csel	w14, w14, w13, lt  // lt = tstop
  457638:	add	w13, w15, #0x17e
  45763c:	mov	w15, #0x2493                	// #9363
  457640:	movk	w15, #0x9249, lsl #16
  457644:	smull	x15, w13, w15
  457648:	lsr	x15, x15, #32
  45764c:	add	w15, w15, w13
  457650:	asr	w16, w15, #2
  457654:	add	w15, w16, w15, lsr #31
  457658:	lsl	w16, w15, #3
  45765c:	sub	w15, w16, w15
  457660:	sub	w13, w15, w13
  457664:	add	w13, w12, w13
  457668:	adds	w13, w13, #0x3
  45766c:	add	w15, w14, w11
  457670:	b.mi	457e1c <_obstack_memory_used@@Base+0x112cc>  // b.first
  457674:	tst	w15, #0x3
  457678:	mov	w14, #0x16d                 	// #365
  45767c:	b.ne	4576b8 <_obstack_memory_used@@Base+0x10b68>  // b.any
  457680:	mov	w16, #0x5c29                	// #23593
  457684:	mov	w17, #0xb850                	// #47184
  457688:	movk	w16, #0xc28f, lsl #16
  45768c:	movk	w17, #0x51e, lsl #16
  457690:	mov	w18, #0xd70b                	// #55051
  457694:	madd	w15, w15, w16, w17
  457698:	movk	w18, #0xa3, lsl #16
  45769c:	ror	w16, w15, #2
  4576a0:	ror	w15, w15, #4
  4576a4:	cmp	w15, w18
  4576a8:	mov	w15, #0x5c28                	// #23592
  4576ac:	movk	w15, #0x28f, lsl #16
  4576b0:	ccmp	w16, w15, #0x2, cs  // cs = hs, nlast
  4576b4:	cinc	w14, w14, hi  // hi = pmore
  4576b8:	add	w14, w10, w14
  4576bc:	sub	w12, w12, w14
  4576c0:	mov	w14, #0x2493                	// #9363
  4576c4:	movk	w14, #0x9249, lsl #16
  4576c8:	add	w12, w12, #0x17e
  4576cc:	smull	x14, w12, w14
  4576d0:	lsr	x14, x14, #32
  4576d4:	add	w12, w14, w12
  4576d8:	asr	w14, w12, #2
  4576dc:	add	w12, w14, w12, lsr #31
  4576e0:	lsl	w14, w12, #3
  4576e4:	sub	w12, w14, w12
  4576e8:	add	w10, w10, w12
  4576ec:	sub	w10, w10, #0x17b
  4576f0:	mvn	w12, w10
  4576f4:	cmp	w10, #0x0
  4576f8:	lsr	w14, w12, #31
  4576fc:	csel	w10, w10, w13, ge  // ge = tcont
  457700:	cmp	w8, #0x47
  457704:	b.eq	457eac <_obstack_memory_used@@Base+0x1135c>  // b.none
  457708:	cmp	w8, #0x67
  45770c:	b.ne	457ed4 <_obstack_memory_used@@Base+0x11384>  // b.any
  457710:	mov	w10, #0x851f                	// #34079
  457714:	movk	w10, #0x51eb, lsl #16
  457718:	smull	x13, w11, w10
  45771c:	lsr	x15, x13, #63
  457720:	asr	x13, x13, #37
  457724:	mov	w12, #0x64                  	// #100
  457728:	add	w13, w13, w15
  45772c:	msub	w13, w13, w12, w11
  457730:	add	w13, w14, w13
  457734:	smull	x10, w13, w10
  457738:	lsr	x15, x10, #63
  45773c:	asr	x10, x10, #37
  457740:	add	w10, w10, w15
  457744:	msub	w10, w10, w12, w13
  457748:	tbz	w10, #31, 457f8c <_obstack_memory_used@@Base+0x1143c>
  45774c:	mov	w12, #0xfffff894            	// #-1900
  457750:	sub	w12, w12, w14
  457754:	add	w13, w10, #0x64
  457758:	cmp	w11, w12
  45775c:	csneg	w10, w13, w10, ge  // ge = tcont
  457760:	b	457f8c <_obstack_memory_used@@Base+0x1143c>
  457764:	cmp	w9, #0x45
  457768:	orr	w20, w28, w20
  45776c:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457770:	mov	w24, wzr
  457774:	mov	w22, wzr
  457778:	b	457fac <_obstack_memory_used@@Base+0x1145c>
  45777c:	sub	x25, x25, #0x1
  457780:	b	458384 <_obstack_memory_used@@Base+0x11834>
  457784:	cbnz	w9, 458384 <_obstack_memory_used@@Base+0x11834>
  457788:	ldr	x9, [sp, #120]
  45778c:	bic	w8, w19, w19, asr #31
  457790:	cmp	w8, #0x1
  457794:	csinc	w20, w8, wzr, hi  // hi = pmore
  457798:	sub	x9, x9, x0
  45779c:	cmp	x9, x20
  4577a0:	b.ls	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.plast
  4577a4:	cbz	x2, 458478 <_obstack_memory_used@@Base+0x11928>
  4577a8:	cmp	w8, #0x2
  4577ac:	b.cc	45871c <_obstack_memory_used@@Base+0x11bcc>  // b.lo, b.ul, b.last
  4577b0:	sxtw	x8, w19
  4577b4:	mov	x22, x0
  4577b8:	cmp	w26, #0x30
  4577bc:	sub	x21, x8, #0x1
  4577c0:	b.ne	4587a4 <_obstack_memory_used@@Base+0x11c54>  // b.any
  4577c4:	mov	w1, #0x30                  	// #48
  4577c8:	b	4587a8 <_obstack_memory_used@@Base+0x11c58>
  4577cc:	mov	w10, #0x1                   	// #1
  4577d0:	ldrb	w11, [x25, x10]
  4577d4:	cmp	w11, #0x3a
  4577d8:	b.ne	457d58 <_obstack_memory_used@@Base+0x11208>  // b.any
  4577dc:	add	x10, x10, #0x1
  4577e0:	b	4577d0 <_obstack_memory_used@@Base+0x10c80>
  4577e4:	cbnz	w9, 458384 <_obstack_memory_used@@Base+0x11834>
  4577e8:	mov	w24, wzr
  4577ec:	mov	w22, wzr
  4577f0:	orr	w20, w28, w20
  4577f4:	mov	w8, #0x41                  	// #65
  4577f8:	b	457fac <_obstack_memory_used@@Base+0x1145c>
  4577fc:	cmp	w9, #0x45
  457800:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457804:	mov	w24, wzr
  457808:	mov	w22, wzr
  45780c:	orr	w20, w28, w20
  457810:	mov	w8, #0x42                  	// #66
  457814:	b	457fac <_obstack_memory_used@@Base+0x1145c>
  457818:	cmp	w9, #0x45
  45781c:	b.ne	457ef8 <_obstack_memory_used@@Base+0x113a8>  // b.any
  457820:	mov	w24, wzr
  457824:	mov	w22, wzr
  457828:	mov	w8, #0x43                  	// #67
  45782c:	b	457fac <_obstack_memory_used@@Base+0x1145c>
  457830:	cbnz	w9, 458384 <_obstack_memory_used@@Base+0x11834>
  457834:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  457838:	add	x21, x21, #0x218
  45783c:	b	45790c <_obstack_memory_used@@Base+0x10dbc>
  457840:	cbnz	w9, 458384 <_obstack_memory_used@@Base+0x11834>
  457844:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  457848:	add	x21, x21, #0x221
  45784c:	b	45790c <_obstack_memory_used@@Base+0x10dbc>
  457850:	cmp	w9, #0x45
  457854:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457858:	ldr	x10, [sp, #104]
  45785c:	ldr	w10, [x10, #8]
  457860:	b	457f8c <_obstack_memory_used@@Base+0x1143c>
  457864:	cmp	w9, #0x45
  457868:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  45786c:	ldr	w10, [sp, #36]
  457870:	b	457f8c <_obstack_memory_used@@Base+0x1143c>
  457874:	cmp	w9, #0x45
  457878:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  45787c:	ldr	x10, [sp, #104]
  457880:	ldr	w10, [x10, #4]
  457884:	b	457f8c <_obstack_memory_used@@Base+0x1143c>
  457888:	cmp	w9, #0x45
  45788c:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457890:	cmn	w19, #0x1
  457894:	b.eq	4584ac <_obstack_memory_used@@Base+0x1195c>  // b.none
  457898:	cmp	w19, #0x8
  45789c:	b.gt	4584e0 <_obstack_memory_used@@Base+0x11990>
  4578a0:	ldr	w10, [sp, #52]
  4578a4:	sub	w11, w19, #0x1
  4578a8:	mov	w12, #0x6667                	// #26215
  4578ac:	movk	w12, #0x6666, lsl #16
  4578b0:	smull	x10, w10, w12
  4578b4:	add	w11, w11, #0x1
  4578b8:	lsr	x12, x10, #63
  4578bc:	asr	x10, x10, #34
  4578c0:	cmp	w11, #0x8
  4578c4:	add	w10, w10, w12
  4578c8:	b.lt	4578a8 <_obstack_memory_used@@Base+0x10d58>  // b.tstop
  4578cc:	mov	w22, w19
  4578d0:	b	457f90 <_obstack_memory_used@@Base+0x11440>
  4578d4:	mov	w11, #0x1                   	// #1
  4578d8:	eor	w8, w28, #0x1
  4578dc:	mov	w22, wzr
  4578e0:	orr	w24, w28, w11
  4578e4:	and	w20, w20, w8
  4578e8:	mov	w8, #0x70                  	// #112
  4578ec:	b	457fac <_obstack_memory_used@@Base+0x1145c>
  4578f0:	cmp	w9, #0x45
  4578f4:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  4578f8:	ldr	x10, [sp, #104]
  4578fc:	ldr	w10, [x10]
  457900:	b	457f8c <_obstack_memory_used@@Base+0x1143c>
  457904:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  457908:	add	x21, x21, #0x159
  45790c:	ldr	x3, [sp, #104]
  457910:	ldr	x5, [sp, #72]
  457914:	ldr	w6, [sp, #52]
  457918:	mov	w23, w20
  45791c:	and	w4, w20, #0x1
  457920:	mov	x1, #0xffffffffffffffff    	// #-1
  457924:	mov	x24, x0
  457928:	mov	x0, xzr
  45792c:	mov	x20, x2
  457930:	mov	x2, x21
  457934:	bl	4573f8 <_obstack_memory_used@@Base+0x108a8>
  457938:	ldr	x9, [sp, #120]
  45793c:	mov	x28, x0
  457940:	bic	w8, w19, w19, asr #31
  457944:	mov	x0, x24
  457948:	cmp	x28, x8
  45794c:	mov	x10, x20
  457950:	csel	x20, x8, x28, cc  // cc = lo, ul, last
  457954:	sub	x22, x9, x0
  457958:	cmp	x20, x22
  45795c:	b.cs	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.hs, b.nlast
  457960:	cbz	x10, 457e10 <_obstack_memory_used@@Base+0x112c0>
  457964:	cmp	x28, x8
  457968:	b.cs	458340 <_obstack_memory_used@@Base+0x117f0>  // b.hs, b.nlast
  45796c:	sxtw	x8, w19
  457970:	cmp	w26, #0x30
  457974:	sub	x26, x8, x28
  457978:	b.ne	458328 <_obstack_memory_used@@Base+0x117d8>  // b.any
  45797c:	mov	w1, #0x30                  	// #48
  457980:	b	45832c <_obstack_memory_used@@Base+0x117dc>
  457984:	cmp	w9, #0x45
  457988:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  45798c:	ldr	x11, [sp, #104]
  457990:	mov	w12, #0x2493                	// #9363
  457994:	movk	w12, #0x9249, lsl #16
  457998:	ldp	w11, w10, [x11, #24]
  45799c:	sub	w10, w10, w11
  4579a0:	b	4579e4 <_obstack_memory_used@@Base+0x10e94>
  4579a4:	cmp	w9, #0x45
  4579a8:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  4579ac:	ldr	x11, [sp, #104]
  4579b0:	mov	w12, #0x2493                	// #9363
  4579b4:	movk	w12, #0x9249, lsl #16
  4579b8:	ldp	w10, w11, [x11, #24]
  4579bc:	add	w10, w10, #0x6
  4579c0:	smull	x13, w10, w12
  4579c4:	lsr	x13, x13, #32
  4579c8:	add	w13, w13, w10
  4579cc:	asr	w14, w13, #2
  4579d0:	add	w13, w14, w13, lsr #31
  4579d4:	lsl	w14, w13, #3
  4579d8:	sub	w13, w14, w13
  4579dc:	sub	w10, w13, w10
  4579e0:	add	w10, w11, w10
  4579e4:	add	w10, w10, #0x7
  4579e8:	smull	x11, w10, w12
  4579ec:	lsr	x11, x11, #32
  4579f0:	add	w10, w11, w10
  4579f4:	asr	w11, w10, #2
  4579f8:	add	w10, w11, w10, lsr #31
  4579fc:	b	457f8c <_obstack_memory_used@@Base+0x1143c>
  457a00:	cmp	w9, #0x4f
  457a04:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457a08:	mov	w24, wzr
  457a0c:	mov	w22, wzr
  457a10:	mov	w8, #0x58                  	// #88
  457a14:	b	457fac <_obstack_memory_used@@Base+0x1145c>
  457a18:	cmp	w9, #0x45
  457a1c:	b.eq	458480 <_obstack_memory_used@@Base+0x11930>  // b.none
  457a20:	cmp	w9, #0x4f
  457a24:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457a28:	ldr	x8, [sp, #104]
  457a2c:	mov	w12, wzr
  457a30:	mov	w13, wzr
  457a34:	mov	w22, #0x4                   	// #4
  457a38:	ldr	w8, [x8, #20]
  457a3c:	cmn	w8, #0x76c
  457a40:	add	w10, w8, #0x76c
  457a44:	cset	w11, lt  // lt = tstop
  457a48:	b	458040 <_obstack_memory_used@@Base+0x114f0>
  457a4c:	mov	x24, x0
  457a50:	ldr	x0, [sp, #24]
  457a54:	mov	w27, w20
  457a58:	mov	x23, x2
  457a5c:	bl	403f40 <strlen@plt>
  457a60:	ldr	x9, [sp, #120]
  457a64:	bic	w8, w19, w19, asr #31
  457a68:	cmp	x0, x8
  457a6c:	csel	x20, x8, x0, cc  // cc = lo, ul, last
  457a70:	sub	x9, x9, x24
  457a74:	mov	x21, x0
  457a78:	cmp	x20, x9
  457a7c:	b.cs	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.hs, b.nlast
  457a80:	mov	x2, x23
  457a84:	cbz	x23, 458608 <_obstack_memory_used@@Base+0x11ab8>
  457a88:	cmp	x21, x8
  457a8c:	b.cs	458504 <_obstack_memory_used@@Base+0x119b4>  // b.hs, b.nlast
  457a90:	sxtw	x8, w19
  457a94:	cmp	w26, #0x30
  457a98:	sub	x22, x8, x21
  457a9c:	b.ne	4584ec <_obstack_memory_used@@Base+0x1199c>  // b.any
  457aa0:	mov	w1, #0x30                  	// #48
  457aa4:	b	4584f0 <_obstack_memory_used@@Base+0x119a0>
  457aa8:	cbnz	w9, 458384 <_obstack_memory_used@@Base+0x11834>
  457aac:	mov	w24, wzr
  457ab0:	mov	w22, wzr
  457ab4:	orr	w20, w28, w20
  457ab8:	mov	w8, #0x61                  	// #97
  457abc:	b	457fac <_obstack_memory_used@@Base+0x1145c>
  457ac0:	cmp	w9, #0x4f
  457ac4:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457ac8:	mov	w24, wzr
  457acc:	mov	w22, wzr
  457ad0:	mov	w8, #0x63                  	// #99
  457ad4:	b	457fac <_obstack_memory_used@@Base+0x1145c>
  457ad8:	cmp	w9, #0x45
  457adc:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457ae0:	ldr	x10, [sp, #104]
  457ae4:	ldr	w10, [x10, #12]
  457ae8:	b	457f8c <_obstack_memory_used@@Base+0x1143c>
  457aec:	cmp	w9, #0x45
  457af0:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457af4:	ldr	x10, [sp, #104]
  457af8:	ldr	w10, [x10, #12]
  457afc:	b	457b44 <_obstack_memory_used@@Base+0x10ff4>
  457b00:	cmp	w9, #0x45
  457b04:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457b08:	ldr	x10, [sp, #104]
  457b0c:	mov	w13, wzr
  457b10:	mov	w12, wzr
  457b14:	mov	w22, #0x3                   	// #3
  457b18:	ldr	w10, [x10, #28]
  457b1c:	b	457b80 <_obstack_memory_used@@Base+0x11030>
  457b20:	cmp	w9, #0x45
  457b24:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457b28:	ldr	x10, [sp, #104]
  457b2c:	ldr	w10, [x10, #8]
  457b30:	b	457b44 <_obstack_memory_used@@Base+0x10ff4>
  457b34:	ldr	w10, [sp, #36]
  457b38:	cmp	w9, #0x45
  457b3c:	mov	w11, #0x1                   	// #1
  457b40:	b.eq	458388 <_obstack_memory_used@@Base+0x11838>  // b.none
  457b44:	and	w11, w26, #0xff
  457b48:	cmp	w11, #0x2d
  457b4c:	mov	w22, #0x2                   	// #2
  457b50:	b.eq	457f90 <_obstack_memory_used@@Base+0x11440>  // b.none
  457b54:	cmp	w11, #0x30
  457b58:	b.eq	457f90 <_obstack_memory_used@@Base+0x11440>  // b.none
  457b5c:	mov	w26, #0x5f                  	// #95
  457b60:	b	457f8c <_obstack_memory_used@@Base+0x1143c>
  457b64:	cmp	w9, #0x45
  457b68:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457b6c:	ldr	x10, [sp, #104]
  457b70:	mov	w13, wzr
  457b74:	mov	w12, wzr
  457b78:	mov	w22, #0x2                   	// #2
  457b7c:	ldr	w10, [x10, #16]
  457b80:	cmn	w10, #0x1
  457b84:	add	w10, w10, #0x1
  457b88:	cset	w11, lt  // lt = tstop
  457b8c:	b	457f9c <_obstack_memory_used@@Base+0x1144c>
  457b90:	ldr	x9, [sp, #120]
  457b94:	bic	w8, w19, w19, asr #31
  457b98:	cmp	w8, #0x1
  457b9c:	csinc	w20, w8, wzr, hi  // hi = pmore
  457ba0:	sub	x9, x9, x0
  457ba4:	cmp	x9, x20
  457ba8:	b.ls	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.plast
  457bac:	cbz	x2, 458478 <_obstack_memory_used@@Base+0x11928>
  457bb0:	cmp	w8, #0x2
  457bb4:	b.cc	4585b0 <_obstack_memory_used@@Base+0x11a60>  // b.lo, b.ul, b.last
  457bb8:	sxtw	x8, w19
  457bbc:	cmp	w26, #0x30
  457bc0:	sub	x21, x8, #0x1
  457bc4:	b.ne	45858c <_obstack_memory_used@@Base+0x11a3c>  // b.any
  457bc8:	mov	w1, #0x30                  	// #48
  457bcc:	b	458590 <_obstack_memory_used@@Base+0x11a40>
  457bd0:	ldr	x10, [sp, #104]
  457bd4:	mov	w14, #0xb                   	// #11
  457bd8:	mov	w13, wzr
  457bdc:	mov	w12, wzr
  457be0:	ldr	w10, [x10, #16]
  457be4:	mov	w11, wzr
  457be8:	mov	w22, #0x1                   	// #1
  457bec:	mul	w10, w10, w14
  457bf0:	asr	w10, w10, #5
  457bf4:	add	w10, w10, #0x1
  457bf8:	b	457f9c <_obstack_memory_used@@Base+0x1144c>
  457bfc:	ldr	x9, [sp, #104]
  457c00:	mov	w23, w20
  457c04:	mov	x20, x0
  457c08:	ldr	x0, [sp, #72]
  457c0c:	ldr	x8, [x9, #48]
  457c10:	ldp	q1, q0, [x9, #16]
  457c14:	ldr	q2, [x9]
  457c18:	add	x1, sp, #0x80
  457c1c:	mov	x21, x2
  457c20:	str	x8, [sp, #176]
  457c24:	stp	q1, q0, [sp, #144]
  457c28:	str	q2, [sp, #128]
  457c2c:	bl	456818 <_obstack_memory_used@@Base+0xfcc8>
  457c30:	ldr	x28, [sp, #96]
  457c34:	lsr	x11, x0, #63
  457c38:	mov	x8, x0
  457c3c:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  457c40:	movk	x9, #0x6667
  457c44:	smulh	x9, x8, x9
  457c48:	asr	x13, x9, #2
  457c4c:	mov	w10, #0xa                   	// #10
  457c50:	add	x9, x13, x9, lsr #63
  457c54:	cmp	x0, #0x0
  457c58:	add	x12, x8, #0x9
  457c5c:	msub	w8, w9, w10, w8
  457c60:	cneg	w8, w8, lt  // lt = tstop
  457c64:	add	w8, w8, #0x30
  457c68:	cmp	x12, #0x12
  457c6c:	strb	w8, [x28, #-1]!
  457c70:	mov	x8, x9
  457c74:	b.hi	457c3c <_obstack_memory_used@@Base+0x110ec>  // b.pmore
  457c78:	cmp	w19, #0x1
  457c7c:	mov	w8, wzr
  457c80:	csinc	w22, w19, wzr, gt
  457c84:	mov	x0, x20
  457c88:	mov	x2, x21
  457c8c:	mov	w20, w23
  457c90:	b	4580a4 <_obstack_memory_used@@Base+0x11554>
  457c94:	ldr	x9, [sp, #120]
  457c98:	bic	w8, w19, w19, asr #31
  457c9c:	cmp	w8, #0x1
  457ca0:	csinc	w20, w8, wzr, hi  // hi = pmore
  457ca4:	sub	x9, x9, x0
  457ca8:	cmp	x9, x20
  457cac:	b.ls	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.plast
  457cb0:	cbz	x2, 458478 <_obstack_memory_used@@Base+0x11928>
  457cb4:	cmp	w8, #0x2
  457cb8:	b.cc	4585e0 <_obstack_memory_used@@Base+0x11a90>  // b.lo, b.ul, b.last
  457cbc:	sxtw	x8, w19
  457cc0:	cmp	w26, #0x30
  457cc4:	sub	x21, x8, #0x1
  457cc8:	b.ne	4585bc <_obstack_memory_used@@Base+0x11a6c>  // b.any
  457ccc:	mov	w1, #0x30                  	// #48
  457cd0:	b	4585c0 <_obstack_memory_used@@Base+0x11a70>
  457cd4:	ldr	x10, [sp, #104]
  457cd8:	mov	w11, #0x2493                	// #9363
  457cdc:	movk	w11, #0x9249, lsl #16
  457ce0:	mov	w22, #0x1                   	// #1
  457ce4:	ldr	w10, [x10, #24]
  457ce8:	add	w10, w10, #0x6
  457cec:	smull	x11, w10, w11
  457cf0:	lsr	x11, x11, #32
  457cf4:	add	w11, w11, w10
  457cf8:	asr	w12, w11, #2
  457cfc:	add	w11, w12, w11, lsr #31
  457d00:	sub	w11, w11, w11, lsl #3
  457d04:	add	w10, w10, w11
  457d08:	add	w10, w10, #0x1
  457d0c:	b	457f90 <_obstack_memory_used@@Base+0x11440>
  457d10:	cmp	w9, #0x45
  457d14:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457d18:	ldr	x10, [sp, #104]
  457d1c:	mov	w22, #0x1                   	// #1
  457d20:	ldr	w10, [x10, #24]
  457d24:	b	457f90 <_obstack_memory_used@@Base+0x11440>
  457d28:	cmp	w9, #0x4f
  457d2c:	b.eq	458384 <_obstack_memory_used@@Base+0x11834>  // b.none
  457d30:	mov	w24, wzr
  457d34:	mov	w22, wzr
  457d38:	mov	w8, #0x78                  	// #120
  457d3c:	b	457fac <_obstack_memory_used@@Base+0x1145c>
  457d40:	cmp	w9, #0x45
  457d44:	b.ne	457f50 <_obstack_memory_used@@Base+0x11400>  // b.any
  457d48:	mov	w24, wzr
  457d4c:	mov	w22, wzr
  457d50:	mov	w8, #0x79                  	// #121
  457d54:	b	457fac <_obstack_memory_used@@Base+0x1145c>
  457d58:	cmp	w11, #0x7a
  457d5c:	b.ne	458384 <_obstack_memory_used@@Base+0x11834>  // b.any
  457d60:	add	x25, x25, x10
  457d64:	ldr	x12, [sp, #104]
  457d68:	ldr	w11, [x12, #32]
  457d6c:	tbnz	w11, #31, 4574b4 <_obstack_memory_used@@Base+0x10964>
  457d70:	ldr	w12, [x12, #40]
  457d74:	tbnz	w12, #31, 458378 <_obstack_memory_used@@Base+0x11828>
  457d78:	cbz	w12, 458490 <_obstack_memory_used@@Base+0x11940>
  457d7c:	mov	w11, wzr
  457d80:	cmp	x10, #0x3
  457d84:	b.hi	458384 <_obstack_memory_used@@Base+0x11834>  // b.pmore
  457d88:	mov	w13, #0x8889                	// #34953
  457d8c:	movk	w13, #0x8888, lsl #16
  457d90:	adrp	x15, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  457d94:	add	x15, x15, #0xfe6
  457d98:	smull	x16, w12, w13
  457d9c:	adr	x17, 457df8 <_obstack_memory_used@@Base+0x112a8>
  457da0:	ldrh	w18, [x15, x10, lsl #1]
  457da4:	add	x17, x17, x18, lsl #2
  457da8:	lsr	x10, x16, #32
  457dac:	mov	w14, #0xb3c5                	// #46021
  457db0:	add	w10, w10, w12
  457db4:	movk	w14, #0x91a2, lsl #16
  457db8:	asr	w15, w10, #5
  457dbc:	smull	x14, w12, w14
  457dc0:	add	w15, w15, w10, lsr #31
  457dc4:	lsr	x14, x14, #32
  457dc8:	smull	x13, w15, w13
  457dcc:	add	w14, w14, w12
  457dd0:	lsr	x13, x13, #32
  457dd4:	asr	w10, w14, #11
  457dd8:	add	w13, w13, w15
  457ddc:	add	w10, w10, w14, lsr #31
  457de0:	asr	w14, w13, #5
  457de4:	add	w13, w14, w13, lsr #31
  457de8:	mov	w16, #0x3c                  	// #60
  457dec:	msub	w14, w13, w16, w15
  457df0:	msub	w13, w15, w16, w12
  457df4:	br	x17
  457df8:	mov	w12, #0x64                  	// #100
  457dfc:	mov	w13, wzr
  457e00:	mov	w22, #0x5                   	// #5
  457e04:	madd	w10, w10, w12, w14
  457e08:	mov	w12, #0x1                   	// #1
  457e0c:	b	457f9c <_obstack_memory_used@@Base+0x1144c>
  457e10:	mov	x2, xzr
  457e14:	add	x0, x20, x0
  457e18:	b	4574b4 <_obstack_memory_used@@Base+0x10964>
  457e1c:	sub	w14, w15, #0x1
  457e20:	tst	w14, #0x3
  457e24:	mov	w13, #0x16d                 	// #365
  457e28:	b.ne	457e64 <_obstack_memory_used@@Base+0x11314>  // b.any
  457e2c:	mov	w15, #0x5c29                	// #23593
  457e30:	mov	w16, #0xb850                	// #47184
  457e34:	movk	w15, #0xc28f, lsl #16
  457e38:	movk	w16, #0x51e, lsl #16
  457e3c:	mov	w17, #0xd70b                	// #55051
  457e40:	madd	w14, w14, w15, w16
  457e44:	movk	w17, #0xa3, lsl #16
  457e48:	ror	w15, w14, #2
  457e4c:	ror	w14, w14, #4
  457e50:	cmp	w14, w17
  457e54:	mov	w14, #0x5c28                	// #23592
  457e58:	movk	w14, #0x28f, lsl #16
  457e5c:	ccmp	w15, w14, #0x2, cs  // cs = hs, nlast
  457e60:	cinc	w13, w13, hi  // hi = pmore
  457e64:	add	w12, w13, w12
  457e68:	mov	w13, #0x17e                 	// #382
  457e6c:	mov	w14, #0x2493                	// #9363
  457e70:	sub	w10, w13, w10
  457e74:	movk	w14, #0x9249, lsl #16
  457e78:	add	w12, w10, w12
  457e7c:	smull	x13, w12, w14
  457e80:	lsr	x13, x13, #32
  457e84:	add	w12, w13, w12
  457e88:	asr	w13, w12, #2
  457e8c:	add	w12, w13, w12, lsr #31
  457e90:	lsl	w13, w12, #3
  457e94:	sub	w12, w13, w12
  457e98:	sub	w10, w12, w10
  457e9c:	add	w10, w10, #0x3
  457ea0:	mov	w14, #0xffffffff            	// #-1
  457ea4:	cmp	w8, #0x47
  457ea8:	b.ne	457708 <_obstack_memory_used@@Base+0x10bb8>  // b.any
  457eac:	mov	w10, #0xfffff894            	// #-1900
  457eb0:	add	w15, w11, w14
  457eb4:	sub	w14, w10, w14
  457eb8:	cmp	w11, w14
  457ebc:	mov	w13, wzr
  457ec0:	mov	w12, wzr
  457ec4:	add	w10, w15, #0x76c
  457ec8:	cset	w11, lt  // lt = tstop
  457ecc:	mov	w22, #0x4                   	// #4
  457ed0:	b	457f9c <_obstack_memory_used@@Base+0x1144c>
  457ed4:	mov	w11, #0x2493                	// #9363
  457ed8:	movk	w11, #0x9249, lsl #16
  457edc:	smull	x11, w10, w11
  457ee0:	lsr	x11, x11, #32
  457ee4:	add	w10, w11, w10
  457ee8:	asr	w11, w10, #2
  457eec:	add	w10, w11, w10, lsr #31
  457ef0:	add	w10, w10, #0x1
  457ef4:	b	457f8c <_obstack_memory_used@@Base+0x1143c>
  457ef8:	ldr	x10, [sp, #104]
  457efc:	mov	w11, #0x851f                	// #34079
  457f00:	movk	w11, #0x51eb, lsl #16
  457f04:	mov	w14, #0x64                  	// #100
  457f08:	ldrsw	x10, [x10, #20]
  457f0c:	mov	w13, wzr
  457f10:	mov	w12, wzr
  457f14:	mov	w22, #0x2                   	// #2
  457f18:	mul	x11, x10, x11
  457f1c:	lsr	x15, x11, #63
  457f20:	asr	x11, x11, #37
  457f24:	add	w15, w11, w15
  457f28:	cmn	x10, #0x76c
  457f2c:	msub	w10, w15, w14, w10
  457f30:	cset	w11, lt  // lt = tstop
  457f34:	cset	w14, gt
  457f38:	cmp	w10, #0x0
  457f3c:	cset	w10, lt  // lt = tstop
  457f40:	and	w10, w14, w10
  457f44:	sub	w10, w15, w10
  457f48:	add	w10, w10, #0x13
  457f4c:	b	457f9c <_obstack_memory_used@@Base+0x1144c>
  457f50:	ldr	x10, [sp, #104]
  457f54:	mov	w11, #0x851f                	// #34079
  457f58:	movk	w11, #0x51eb, lsl #16
  457f5c:	mov	w12, #0x64                  	// #100
  457f60:	ldrsw	x10, [x10, #20]
  457f64:	mul	x11, x10, x11
  457f68:	lsr	x13, x11, #63
  457f6c:	asr	x11, x11, #37
  457f70:	add	w11, w11, w13
  457f74:	cmn	w10, #0x76c
  457f78:	msub	w10, w11, w12, w10
  457f7c:	add	w11, w10, #0x64
  457f80:	csneg	w11, w11, w10, ge  // ge = tcont
  457f84:	cmp	w10, #0x0
  457f88:	csel	w10, w11, w10, lt  // lt = tstop
  457f8c:	mov	w22, #0x2                   	// #2
  457f90:	mov	w13, wzr
  457f94:	mov	w12, wzr
  457f98:	lsr	w11, w10, #31
  457f9c:	cmp	w9, #0x4f
  457fa0:	b.ne	458040 <_obstack_memory_used@@Base+0x114f0>  // b.any
  457fa4:	cbnz	w11, 458040 <_obstack_memory_used@@Base+0x114f0>
  457fa8:	mov	w24, wzr
  457fac:	mov	w10, #0x2520                	// #9504
  457fb0:	sturh	w10, [x29, #-40]
  457fb4:	ldr	x10, [sp, #88]
  457fb8:	mov	x23, x2
  457fbc:	mov	x27, x0
  457fc0:	cbz	w9, 457fcc <_obstack_memory_used@@Base+0x1147c>
  457fc4:	ldr	x10, [sp, #80]
  457fc8:	sturb	w9, [x29, #-38]
  457fcc:	ldr	x3, [sp, #104]
  457fd0:	add	x0, sp, #0x80
  457fd4:	sub	x2, x29, #0x28
  457fd8:	mov	w1, #0x400                 	// #1024
  457fdc:	strb	w8, [x10]
  457fe0:	strb	wzr, [x10, #1]
  457fe4:	bl	4040a0 <strftime@plt>
  457fe8:	cbz	x0, 4580f4 <_obstack_memory_used@@Base+0x115a4>
  457fec:	ldr	x9, [sp, #120]
  457ff0:	sub	x28, x0, #0x1
  457ff4:	bic	w8, w19, w19, asr #31
  457ff8:	cmp	x28, x8
  457ffc:	mov	w10, w22
  458000:	csel	x22, x8, x28, cc  // cc = lo, ul, last
  458004:	sub	x9, x9, x27
  458008:	mov	x21, x0
  45800c:	cmp	x22, x9
  458010:	b.cs	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.hs, b.nlast
  458014:	mov	x2, x23
  458018:	cbz	x23, 4582c8 <_obstack_memory_used@@Base+0x11778>
  45801c:	cbnz	w10, 458234 <_obstack_memory_used@@Base+0x116e4>
  458020:	cmp	x28, x8
  458024:	b.cs	458234 <_obstack_memory_used@@Base+0x116e4>  // b.hs, b.nlast
  458028:	sxtw	x8, w19
  45802c:	cmp	w26, #0x30
  458030:	sub	x19, x8, x28
  458034:	b.ne	45821c <_obstack_memory_used@@Base+0x116cc>  // b.any
  458038:	mov	w1, #0x30                  	// #48
  45803c:	b	458220 <_obstack_memory_used@@Base+0x116d0>
  458040:	ldr	x28, [sp, #96]
  458044:	cmp	w11, #0x0
  458048:	cneg	w8, w10, ne  // ne = any
  45804c:	tbz	w13, #0, 458058 <_obstack_memory_used@@Base+0x11508>
  458050:	mov	w9, #0x3a                  	// #58
  458054:	strb	w9, [x28, #-1]!
  458058:	mov	w9, #0xcccd                	// #52429
  45805c:	movk	w9, #0xcccc, lsl #16
  458060:	umull	x9, w8, w9
  458064:	mov	w10, #0xa                   	// #10
  458068:	lsr	x9, x9, #35
  45806c:	msub	w10, w9, w10, w8
  458070:	orr	w10, w10, #0x30
  458074:	asr	w13, w13, #1
  458078:	cmp	w8, #0x9
  45807c:	strb	w10, [x28, #-1]!
  458080:	mov	w8, w9
  458084:	b.hi	45804c <_obstack_memory_used@@Base+0x114fc>  // b.pmore
  458088:	mov	w8, w9
  45808c:	cbnz	w13, 45804c <_obstack_memory_used@@Base+0x114fc>
  458090:	cmp	w22, w19
  458094:	csel	w22, w19, w22, lt  // lt = tstop
  458098:	cmp	w12, #0x0
  45809c:	mov	w8, #0x2b                  	// #43
  4580a0:	csel	w8, w8, wzr, ne  // ne = any
  4580a4:	cmp	w11, #0x0
  4580a8:	mov	w9, #0x2d                  	// #45
  4580ac:	csel	w24, w9, w8, ne  // ne = any
  4580b0:	cmp	w26, #0x2d
  4580b4:	str	w20, [sp, #68]
  4580b8:	b.ne	458100 <_obstack_memory_used@@Base+0x115b0>  // b.any
  4580bc:	cbz	w24, 458638 <_obstack_memory_used@@Base+0x11ae8>
  4580c0:	ldr	x9, [sp, #120]
  4580c4:	bic	w8, w19, w19, asr #31
  4580c8:	cmp	w8, #0x1
  4580cc:	csinc	w20, w8, wzr, hi  // hi = pmore
  4580d0:	sub	x9, x9, x0
  4580d4:	cmp	x9, x20
  4580d8:	b.ls	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.plast
  4580dc:	cbz	x2, 458634 <_obstack_memory_used@@Base+0x11ae4>
  4580e0:	cbnz	w22, 458630 <_obstack_memory_used@@Base+0x11ae0>
  4580e4:	cmp	w8, #0x2
  4580e8:	b.cc	458630 <_obstack_memory_used@@Base+0x11ae0>  // b.lo, b.ul, b.last
  4580ec:	sxtw	x8, w19
  4580f0:	b	4581a4 <_obstack_memory_used@@Base+0x11654>
  4580f4:	mov	x0, x27
  4580f8:	mov	x2, x23
  4580fc:	b	4574b4 <_obstack_memory_used@@Base+0x10964>
  458100:	ldr	x10, [sp, #96]
  458104:	sxtw	x8, w22
  458108:	cmp	w24, #0x0
  45810c:	cset	w9, ne  // ne = any
  458110:	sub	x10, x8, x10
  458114:	add	x10, x10, x28
  458118:	sub	x20, x10, x9
  45811c:	cmp	w20, #0x1
  458120:	b.lt	4581d0 <_obstack_memory_used@@Base+0x11680>  // b.tstop
  458124:	cmp	w26, #0x5f
  458128:	b.ne	4582d4 <_obstack_memory_used@@Base+0x11784>  // b.any
  45812c:	ldr	x8, [sp, #120]
  458130:	sxtw	x21, w20
  458134:	sub	x8, x8, x0
  458138:	cmp	x21, x8
  45813c:	b.cs	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.hs, b.nlast
  458140:	cbz	x2, 458168 <_obstack_memory_used@@Base+0x11618>
  458144:	mov	w1, #0x20                  	// #32
  458148:	mov	x23, x0
  45814c:	mov	x0, x2
  458150:	mov	x27, x2
  458154:	mov	x2, x21
  458158:	bl	404360 <memset@plt>
  45815c:	mov	x2, x27
  458160:	mov	x0, x23
  458164:	add	x2, x27, x21
  458168:	subs	w8, w19, w20
  45816c:	add	x0, x21, x0
  458170:	csel	w19, w8, wzr, gt
  458174:	cbz	w24, 458638 <_obstack_memory_used@@Base+0x11ae8>
  458178:	ldr	x8, [sp, #120]
  45817c:	cmp	w19, #0x1
  458180:	csinc	w20, w19, wzr, hi  // hi = pmore
  458184:	sub	x8, x8, x0
  458188:	cmp	x8, x20
  45818c:	b.ls	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.plast
  458190:	cbz	x2, 458634 <_obstack_memory_used@@Base+0x11ae4>
  458194:	cbnz	w22, 458630 <_obstack_memory_used@@Base+0x11ae0>
  458198:	cmp	w19, #0x2
  45819c:	b.cc	458630 <_obstack_memory_used@@Base+0x11ae0>  // b.lo, b.ul, b.last
  4581a0:	mov	w8, w19
  4581a4:	sub	x21, x8, #0x1
  4581a8:	mov	w1, #0x20                  	// #32
  4581ac:	mov	x23, x0
  4581b0:	mov	x0, x2
  4581b4:	mov	x27, x2
  4581b8:	mov	x2, x21
  4581bc:	bl	404360 <memset@plt>
  4581c0:	mov	x2, x27
  4581c4:	mov	x0, x23
  4581c8:	add	x2, x27, x21
  4581cc:	b	458630 <_obstack_memory_used@@Base+0x11ae0>
  4581d0:	cbz	w24, 458638 <_obstack_memory_used@@Base+0x11ae8>
  4581d4:	ldr	x9, [sp, #120]
  4581d8:	bic	w8, w19, w19, asr #31
  4581dc:	cmp	w8, #0x1
  4581e0:	csinc	w20, w8, wzr, hi  // hi = pmore
  4581e4:	sub	x9, x9, x0
  4581e8:	cmp	x9, x20
  4581ec:	b.ls	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.plast
  4581f0:	cbz	x2, 458634 <_obstack_memory_used@@Base+0x11ae4>
  4581f4:	cbnz	w22, 458630 <_obstack_memory_used@@Base+0x11ae0>
  4581f8:	cmp	w8, #0x2
  4581fc:	b.cc	458630 <_obstack_memory_used@@Base+0x11ae0>  // b.lo, b.ul, b.last
  458200:	sxtw	x8, w19
  458204:	mov	x27, x0
  458208:	cmp	w26, #0x30
  45820c:	sub	x21, x8, #0x1
  458210:	b.ne	458614 <_obstack_memory_used@@Base+0x11ac4>  // b.any
  458214:	mov	w1, #0x30                  	// #48
  458218:	b	458618 <_obstack_memory_used@@Base+0x11ac8>
  45821c:	mov	w1, #0x20                  	// #32
  458220:	mov	x0, x2
  458224:	mov	x2, x19
  458228:	bl	404360 <memset@plt>
  45822c:	mov	x2, x23
  458230:	add	x2, x23, x19
  458234:	tbz	w24, #0, 458270 <_obstack_memory_used@@Base+0x11720>
  458238:	cbz	x28, 4582c4 <_obstack_memory_used@@Base+0x11774>
  45823c:	mov	x19, x2
  458240:	bl	404140 <__ctype_tolower_loc@plt>
  458244:	ldr	x11, [sp, #40]
  458248:	mov	x2, x19
  45824c:	sub	x8, x19, #0x2
  458250:	ldr	x9, [x0]
  458254:	ldrb	w10, [x11, x21]
  458258:	ldr	w9, [x9, x10, lsl #2]
  45825c:	strb	w9, [x8, x21]
  458260:	sub	x21, x21, #0x1
  458264:	cmp	x21, #0x1
  458268:	b.ne	458250 <_obstack_memory_used@@Base+0x11700>  // b.any
  45826c:	b	4582c4 <_obstack_memory_used@@Base+0x11774>
  458270:	tbz	w20, #0, 4582ac <_obstack_memory_used@@Base+0x1175c>
  458274:	cbz	x28, 4582c4 <_obstack_memory_used@@Base+0x11774>
  458278:	mov	x19, x2
  45827c:	bl	4044a0 <__ctype_toupper_loc@plt>
  458280:	ldr	x11, [sp, #40]
  458284:	mov	x2, x19
  458288:	sub	x8, x19, #0x2
  45828c:	ldr	x9, [x0]
  458290:	ldrb	w10, [x11, x21]
  458294:	ldr	w9, [x9, x10, lsl #2]
  458298:	strb	w9, [x8, x21]
  45829c:	sub	x21, x21, #0x1
  4582a0:	cmp	x21, #0x1
  4582a4:	b.ne	45828c <_obstack_memory_used@@Base+0x1173c>  // b.any
  4582a8:	b	4582c4 <_obstack_memory_used@@Base+0x11774>
  4582ac:	ldr	x1, [sp, #16]
  4582b0:	mov	x0, x2
  4582b4:	mov	x19, x2
  4582b8:	mov	x2, x28
  4582bc:	bl	403ec0 <memcpy@plt>
  4582c0:	mov	x2, x19
  4582c4:	add	x2, x2, x28
  4582c8:	mov	x0, x27
  4582cc:	add	x0, x22, x27
  4582d0:	b	4574b4 <_obstack_memory_used@@Base+0x10964>
  4582d4:	ldr	x9, [sp, #120]
  4582d8:	sub	x9, x9, x0
  4582dc:	cmp	x9, x8
  4582e0:	b.ls	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.plast
  4582e4:	cbz	w24, 45874c <_obstack_memory_used@@Base+0x11bfc>
  4582e8:	bic	w8, w19, w19, asr #31
  4582ec:	cmp	w8, #0x1
  4582f0:	csinc	w27, w8, wzr, hi  // hi = pmore
  4582f4:	cmp	x9, x27
  4582f8:	b.ls	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.plast
  4582fc:	cbz	x2, 458748 <_obstack_memory_used@@Base+0x11bf8>
  458300:	cbnz	w22, 458744 <_obstack_memory_used@@Base+0x11bf4>
  458304:	cmp	w8, #0x2
  458308:	b.cc	458744 <_obstack_memory_used@@Base+0x11bf4>  // b.lo, b.ul, b.last
  45830c:	sxtw	x8, w19
  458310:	cmp	w26, #0x30
  458314:	sub	x21, x8, #0x1
  458318:	str	x0, [sp, #56]
  45831c:	b.ne	458728 <_obstack_memory_used@@Base+0x11bd8>  // b.any
  458320:	mov	w1, #0x30                  	// #48
  458324:	b	45872c <_obstack_memory_used@@Base+0x11bdc>
  458328:	mov	w1, #0x20                  	// #32
  45832c:	mov	x0, x10
  458330:	mov	x2, x26
  458334:	mov	x19, x10
  458338:	bl	404360 <memset@plt>
  45833c:	add	x10, x19, x26
  458340:	ldr	x3, [sp, #104]
  458344:	ldr	w6, [sp, #52]
  458348:	ldr	x5, [sp, #72]
  45834c:	and	w4, w23, #0x1
  458350:	mov	x0, x10
  458354:	mov	x1, x22
  458358:	mov	x2, x21
  45835c:	mov	x19, x10
  458360:	bl	4573f8 <_obstack_memory_used@@Base+0x108a8>
  458364:	mov	x2, x19
  458368:	mov	x0, x24
  45836c:	add	x2, x19, x28
  458370:	add	x0, x20, x24
  458374:	b	4574b4 <_obstack_memory_used@@Base+0x10964>
  458378:	mov	w11, #0x1                   	// #1
  45837c:	cmp	x10, #0x3
  458380:	b.ls	457d88 <_obstack_memory_used@@Base+0x11238>  // b.plast
  458384:	mov	w11, #0x1                   	// #1
  458388:	mov	w23, w20
  45838c:	sub	x8, x25, #0x1
  458390:	mov	w9, #0x1                   	// #1
  458394:	sub	x27, x11, x9
  458398:	ldrb	w10, [x25, x27]
  45839c:	mov	x24, x9
  4583a0:	mov	x28, x8
  4583a4:	add	x9, x9, #0x1
  4583a8:	cmp	w10, #0x25
  4583ac:	sub	x8, x8, #0x1
  4583b0:	b.ne	458394 <_obstack_memory_used@@Base+0x11844>  // b.any
  4583b4:	ldr	x9, [sp, #120]
  4583b8:	bic	w8, w19, w19, asr #31
  4583bc:	cmp	w8, w24
  4583c0:	csel	w20, w24, w8, cc  // cc = lo, ul, last
  4583c4:	sub	x9, x9, x0
  4583c8:	cmp	x9, x20
  4583cc:	b.ls	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.plast
  4583d0:	cbz	x2, 458478 <_obstack_memory_used@@Base+0x11928>
  4583d4:	cmp	w8, w24
  4583d8:	and	x21, x24, #0xffffffff
  4583dc:	b.ls	458418 <_obstack_memory_used@@Base+0x118c8>  // b.plast
  4583e0:	sxtw	x8, w19
  4583e4:	cmp	w26, #0x30
  4583e8:	sub	x22, x8, x21
  4583ec:	str	x0, [sp, #56]
  4583f0:	b.ne	4583fc <_obstack_memory_used@@Base+0x118ac>  // b.any
  4583f4:	mov	w1, #0x30                  	// #48
  4583f8:	b	458400 <_obstack_memory_used@@Base+0x118b0>
  4583fc:	mov	w1, #0x20                  	// #32
  458400:	mov	x0, x2
  458404:	mov	x19, x2
  458408:	mov	x2, x22
  45840c:	bl	404360 <memset@plt>
  458410:	ldr	x0, [sp, #56]
  458414:	add	x2, x19, x22
  458418:	mov	x19, x0
  45841c:	tbz	w23, #0, 458458 <_obstack_memory_used@@Base+0x11908>
  458420:	mov	x22, x2
  458424:	bl	4044a0 <__ctype_toupper_loc@plt>
  458428:	mov	x2, x22
  45842c:	sub	x8, x22, #0x1
  458430:	add	x9, x28, w24, uxtw
  458434:	mov	x10, x21
  458438:	ldr	x11, [x0]
  45843c:	ldrb	w12, [x9], #-1
  458440:	ldr	w11, [x11, x12, lsl #2]
  458444:	subs	x12, x10, #0x1
  458448:	strb	w11, [x8, x10]
  45844c:	mov	x10, x12
  458450:	b.ne	458438 <_obstack_memory_used@@Base+0x118e8>  // b.any
  458454:	b	458470 <_obstack_memory_used@@Base+0x11920>
  458458:	add	x1, x25, x27
  45845c:	mov	x0, x2
  458460:	mov	x22, x2
  458464:	mov	x2, x21
  458468:	bl	403ec0 <memcpy@plt>
  45846c:	mov	x2, x22
  458470:	add	x2, x2, x21
  458474:	mov	x0, x19
  458478:	add	x0, x0, x20
  45847c:	b	4574b4 <_obstack_memory_used@@Base+0x10964>
  458480:	mov	w24, wzr
  458484:	mov	w22, wzr
  458488:	mov	w8, #0x59                  	// #89
  45848c:	b	457fac <_obstack_memory_used@@Base+0x1145c>
  458490:	ldr	x11, [sp, #24]
  458494:	ldrb	w11, [x11]
  458498:	cmp	w11, #0x2d
  45849c:	cset	w11, eq  // eq = none
  4584a0:	cmp	x10, #0x3
  4584a4:	b.ls	457d88 <_obstack_memory_used@@Base+0x11238>  // b.plast
  4584a8:	b	458384 <_obstack_memory_used@@Base+0x11834>
  4584ac:	ldr	w10, [sp, #52]
  4584b0:	mov	w19, #0x9                   	// #9
  4584b4:	mov	w22, #0x9                   	// #9
  4584b8:	b	457f90 <_obstack_memory_used@@Base+0x11440>
  4584bc:	cbz	w13, 458788 <_obstack_memory_used@@Base+0x11c38>
  4584c0:	mov	w15, #0x2710                	// #10000
  4584c4:	mov	w16, #0x64                  	// #100
  4584c8:	madd	w10, w10, w15, w13
  4584cc:	mov	w22, #0x9                   	// #9
  4584d0:	mov	w12, #0x1                   	// #1
  4584d4:	madd	w10, w14, w16, w10
  4584d8:	mov	w13, #0x14                  	// #20
  4584dc:	b	457f9c <_obstack_memory_used@@Base+0x1144c>
  4584e0:	ldr	w10, [sp, #52]
  4584e4:	mov	w22, w19
  4584e8:	b	457f90 <_obstack_memory_used@@Base+0x11440>
  4584ec:	mov	w1, #0x20                  	// #32
  4584f0:	mov	x0, x2
  4584f4:	mov	x2, x22
  4584f8:	bl	404360 <memset@plt>
  4584fc:	mov	x2, x23
  458500:	add	x2, x23, x22
  458504:	tbz	w28, #0, 458544 <_obstack_memory_used@@Base+0x119f4>
  458508:	cbz	x21, 458604 <_obstack_memory_used@@Base+0x11ab4>
  45850c:	mov	x19, x2
  458510:	bl	404140 <__ctype_tolower_loc@plt>
  458514:	ldr	x12, [sp, #8]
  458518:	mov	x2, x19
  45851c:	sub	x8, x19, #0x1
  458520:	mov	x9, x21
  458524:	ldr	x10, [x0]
  458528:	ldrb	w11, [x12, x9]
  45852c:	ldr	w10, [x10, x11, lsl #2]
  458530:	subs	x11, x9, #0x1
  458534:	strb	w10, [x8, x9]
  458538:	mov	x9, x11
  45853c:	b.ne	458524 <_obstack_memory_used@@Base+0x119d4>  // b.any
  458540:	b	458604 <_obstack_memory_used@@Base+0x11ab4>
  458544:	eor	w8, w28, #0x1
  458548:	and	w8, w27, w8
  45854c:	tbz	w8, #0, 4585ec <_obstack_memory_used@@Base+0x11a9c>
  458550:	cbz	x21, 458604 <_obstack_memory_used@@Base+0x11ab4>
  458554:	mov	x19, x2
  458558:	bl	4044a0 <__ctype_toupper_loc@plt>
  45855c:	ldr	x12, [sp, #8]
  458560:	mov	x2, x19
  458564:	sub	x8, x19, #0x1
  458568:	mov	x9, x21
  45856c:	ldr	x10, [x0]
  458570:	ldrb	w11, [x12, x9]
  458574:	ldr	w10, [x10, x11, lsl #2]
  458578:	subs	x11, x9, #0x1
  45857c:	strb	w10, [x8, x9]
  458580:	mov	x9, x11
  458584:	b.ne	45856c <_obstack_memory_used@@Base+0x11a1c>  // b.any
  458588:	b	458604 <_obstack_memory_used@@Base+0x11ab4>
  45858c:	mov	w1, #0x20                  	// #32
  458590:	mov	x19, x0
  458594:	mov	x0, x2
  458598:	mov	x22, x2
  45859c:	mov	x2, x21
  4585a0:	bl	404360 <memset@plt>
  4585a4:	mov	x2, x22
  4585a8:	mov	x0, x19
  4585ac:	add	x2, x22, x21
  4585b0:	mov	w8, #0xa                   	// #10
  4585b4:	strb	w8, [x2], #1
  4585b8:	b	458478 <_obstack_memory_used@@Base+0x11928>
  4585bc:	mov	w1, #0x20                  	// #32
  4585c0:	mov	x19, x0
  4585c4:	mov	x0, x2
  4585c8:	mov	x22, x2
  4585cc:	mov	x2, x21
  4585d0:	bl	404360 <memset@plt>
  4585d4:	mov	x2, x22
  4585d8:	mov	x0, x19
  4585dc:	add	x2, x22, x21
  4585e0:	mov	w8, #0x9                   	// #9
  4585e4:	strb	w8, [x2], #1
  4585e8:	b	458478 <_obstack_memory_used@@Base+0x11928>
  4585ec:	ldr	x1, [sp, #24]
  4585f0:	mov	x0, x2
  4585f4:	mov	x19, x2
  4585f8:	mov	x2, x21
  4585fc:	bl	403ec0 <memcpy@plt>
  458600:	mov	x2, x19
  458604:	add	x2, x2, x21
  458608:	mov	x0, x24
  45860c:	add	x0, x20, x24
  458610:	b	4574b4 <_obstack_memory_used@@Base+0x10964>
  458614:	mov	w1, #0x20                  	// #32
  458618:	mov	x0, x2
  45861c:	mov	x23, x2
  458620:	mov	x2, x21
  458624:	bl	404360 <memset@plt>
  458628:	add	x2, x23, x21
  45862c:	mov	x0, x27
  458630:	strb	w24, [x2], #1
  458634:	add	x0, x0, x20
  458638:	bic	w8, w19, w19, asr #31
  45863c:	ldr	x9, [sp, #96]
  458640:	mov	w8, w8
  458644:	sub	x21, x9, x28
  458648:	ldr	x9, [sp, #120]
  45864c:	cmp	x21, x8
  458650:	csel	x20, x8, x21, cc  // cc = lo, ul, last
  458654:	sub	x9, x9, x0
  458658:	cmp	x20, x9
  45865c:	b.cs	4587f4 <_obstack_memory_used@@Base+0x11ca4>  // b.hs, b.nlast
  458660:	cbz	x2, 458714 <_obstack_memory_used@@Base+0x11bc4>
  458664:	cbnz	w22, 4586ac <_obstack_memory_used@@Base+0x11b5c>
  458668:	cmp	x21, x8
  45866c:	b.cs	4586ac <_obstack_memory_used@@Base+0x11b5c>  // b.hs, b.nlast
  458670:	sxtw	x8, w19
  458674:	cmp	w26, #0x30
  458678:	sub	x22, x8, x21
  45867c:	b.ne	458688 <_obstack_memory_used@@Base+0x11b38>  // b.any
  458680:	mov	w1, #0x30                  	// #48
  458684:	b	45868c <_obstack_memory_used@@Base+0x11b3c>
  458688:	mov	w1, #0x20                  	// #32
  45868c:	mov	x19, x0
  458690:	mov	x0, x2
  458694:	mov	x23, x2
  458698:	mov	x2, x22
  45869c:	bl	404360 <memset@plt>
  4586a0:	mov	x2, x23
  4586a4:	mov	x0, x19
  4586a8:	add	x2, x23, x22
  4586ac:	ldr	w8, [sp, #68]
  4586b0:	mov	x19, x0
  4586b4:	tbz	w8, #0, 4586f4 <_obstack_memory_used@@Base+0x11ba4>
  4586b8:	cbz	x21, 45870c <_obstack_memory_used@@Base+0x11bbc>
  4586bc:	mov	x22, x2
  4586c0:	bl	4044a0 <__ctype_toupper_loc@plt>
  4586c4:	mov	x2, x22
  4586c8:	sub	x8, x22, #0x1
  4586cc:	sub	x9, x28, #0x1
  4586d0:	mov	x10, x21
  4586d4:	ldr	x11, [x0]
  4586d8:	ldrb	w12, [x9, x10]
  4586dc:	ldr	w11, [x11, x12, lsl #2]
  4586e0:	subs	x12, x10, #0x1
  4586e4:	strb	w11, [x8, x10]
  4586e8:	mov	x10, x12
  4586ec:	b.ne	4586d4 <_obstack_memory_used@@Base+0x11b84>  // b.any
  4586f0:	b	45870c <_obstack_memory_used@@Base+0x11bbc>
  4586f4:	mov	x0, x2
  4586f8:	mov	x1, x28
  4586fc:	mov	x22, x2
  458700:	mov	x2, x21
  458704:	bl	403ec0 <memcpy@plt>
  458708:	mov	x2, x22
  45870c:	add	x2, x2, x21
  458710:	mov	x0, x19
  458714:	add	x0, x20, x0
  458718:	b	4574b4 <_obstack_memory_used@@Base+0x10964>
  45871c:	mov	w8, #0x25                  	// #37
  458720:	strb	w8, [x2], #1
  458724:	b	458478 <_obstack_memory_used@@Base+0x11928>
  458728:	mov	w1, #0x20                  	// #32
  45872c:	mov	x0, x2
  458730:	mov	x19, x2
  458734:	mov	x2, x21
  458738:	bl	404360 <memset@plt>
  45873c:	ldr	x0, [sp, #56]
  458740:	add	x2, x19, x21
  458744:	strb	w24, [x2], #1
  458748:	add	x0, x0, x27
  45874c:	sxtw	x21, w20
  458750:	cbz	x2, 458778 <_obstack_memory_used@@Base+0x11c28>
  458754:	mov	w1, #0x30                  	// #48
  458758:	mov	x19, x0
  45875c:	mov	x0, x2
  458760:	mov	x20, x2
  458764:	mov	x2, x21
  458768:	bl	404360 <memset@plt>
  45876c:	mov	x2, x20
  458770:	mov	x0, x19
  458774:	add	x2, x20, x21
  458778:	mov	w19, wzr
  45877c:	mov	w8, wzr
  458780:	add	x0, x0, x21
  458784:	b	45863c <_obstack_memory_used@@Base+0x11aec>
  458788:	cbz	w14, 4587cc <_obstack_memory_used@@Base+0x11c7c>
  45878c:	mov	w13, #0x64                  	// #100
  458790:	mov	w22, #0x6                   	// #6
  458794:	mov	w12, #0x1                   	// #1
  458798:	madd	w10, w10, w13, w14
  45879c:	mov	w13, #0x4                   	// #4
  4587a0:	b	457f9c <_obstack_memory_used@@Base+0x1144c>
  4587a4:	mov	w1, #0x20                  	// #32
  4587a8:	mov	x0, x2
  4587ac:	mov	x19, x2
  4587b0:	mov	x2, x21
  4587b4:	bl	404360 <memset@plt>
  4587b8:	ldrb	w8, [x25]
  4587bc:	add	x2, x19, x21
  4587c0:	mov	x0, x22
  4587c4:	strb	w8, [x2], #1
  4587c8:	b	458478 <_obstack_memory_used@@Base+0x11928>
  4587cc:	mov	w13, wzr
  4587d0:	mov	w22, #0x3                   	// #3
  4587d4:	mov	w12, #0x1                   	// #1
  4587d8:	b	457f9c <_obstack_memory_used@@Base+0x1144c>
  4587dc:	mov	x0, xzr
  4587e0:	ldr	x8, [sp, #120]
  4587e4:	cbz	x8, 4587f8 <_obstack_memory_used@@Base+0x11ca8>
  4587e8:	cbz	x2, 4587f8 <_obstack_memory_used@@Base+0x11ca8>
  4587ec:	strb	wzr, [x2]
  4587f0:	b	4587f8 <_obstack_memory_used@@Base+0x11ca8>
  4587f4:	mov	x0, xzr
  4587f8:	add	sp, sp, #0x4b0
  4587fc:	ldp	x20, x19, [sp, #80]
  458800:	ldp	x22, x21, [sp, #64]
  458804:	ldp	x24, x23, [sp, #48]
  458808:	ldp	x26, x25, [sp, #32]
  45880c:	ldp	x28, x27, [sp, #16]
  458810:	ldp	x29, x30, [sp], #96
  458814:	ret
  458818:	sub	sp, sp, #0xe0
  45881c:	stp	x29, x30, [sp, #208]
  458820:	add	x29, sp, #0xd0
  458824:	stp	x3, x4, [x29, #-72]
  458828:	stp	x5, x6, [x29, #-56]
  45882c:	stur	x7, [x29, #-40]
  458830:	stp	q1, q2, [sp, #16]
  458834:	stp	q3, q4, [sp, #48]
  458838:	str	q0, [sp]
  45883c:	stp	q5, q6, [sp, #80]
  458840:	str	q7, [sp, #112]
  458844:	tbnz	w2, #6, 458850 <_obstack_memory_used@@Base+0x11d00>
  458848:	mov	w3, wzr
  45884c:	b	4588a8 <_obstack_memory_used@@Base+0x11d58>
  458850:	mov	x9, #0xffffffffffffffd8    	// #-40
  458854:	mov	x11, sp
  458858:	sub	x12, x29, #0x48
  45885c:	movk	x9, #0xff80, lsl #32
  458860:	add	x10, x29, #0x10
  458864:	mov	x8, #0xffffffffffffffd8    	// #-40
  458868:	add	x11, x11, #0x80
  45886c:	add	x12, x12, #0x28
  458870:	stp	x11, x9, [x29, #-16]
  458874:	stp	x10, x12, [x29, #-32]
  458878:	tbz	w8, #31, 458898 <_obstack_memory_used@@Base+0x11d48>
  45887c:	add	w9, w8, #0x8
  458880:	cmn	w8, #0x8
  458884:	stur	w9, [x29, #-8]
  458888:	b.gt	458898 <_obstack_memory_used@@Base+0x11d48>
  45888c:	ldur	x9, [x29, #-24]
  458890:	add	x8, x9, x8
  458894:	b	4588a4 <_obstack_memory_used@@Base+0x11d54>
  458898:	ldur	x8, [x29, #-32]
  45889c:	add	x9, x8, #0x8
  4588a0:	stur	x9, [x29, #-32]
  4588a4:	ldr	w3, [x8]
  4588a8:	bl	4049f0 <openat@plt>
  4588ac:	bl	4588bc <_obstack_memory_used@@Base+0x11d6c>
  4588b0:	ldp	x29, x30, [sp, #208]
  4588b4:	add	sp, sp, #0xe0
  4588b8:	ret
  4588bc:	stp	x29, x30, [sp, #-48]!
  4588c0:	stp	x20, x19, [sp, #32]
  4588c4:	mov	w19, w0
  4588c8:	cmp	w0, #0x2
  4588cc:	stp	x22, x21, [sp, #16]
  4588d0:	mov	x29, sp
  4588d4:	b.hi	458904 <_obstack_memory_used@@Base+0x11db4>  // b.pmore
  4588d8:	mov	w0, w19
  4588dc:	bl	459980 <_obstack_memory_used@@Base+0x12e30>
  4588e0:	mov	w20, w0
  4588e4:	bl	404a10 <__errno_location@plt>
  4588e8:	ldr	w22, [x0]
  4588ec:	mov	x21, x0
  4588f0:	mov	w0, w19
  4588f4:	bl	404520 <close@plt>
  4588f8:	str	w22, [x21]
  4588fc:	mov	w0, w20
  458900:	b	458908 <_obstack_memory_used@@Base+0x11db8>
  458904:	mov	w0, w19
  458908:	ldp	x20, x19, [sp, #32]
  45890c:	ldp	x22, x21, [sp, #16]
  458910:	ldp	x29, x30, [sp], #48
  458914:	ret
  458918:	sub	sp, sp, #0x80
  45891c:	str	x23, [sp, #80]
  458920:	mov	x2, x0
  458924:	mov	x23, xzr
  458928:	mov	x8, x0
  45892c:	stp	x29, x30, [sp, #64]
  458930:	stp	x22, x21, [sp, #96]
  458934:	stp	x20, x19, [sp, #112]
  458938:	add	x29, sp, #0x40
  45893c:	ldrb	w9, [x8]
  458940:	cmp	w9, #0x25
  458944:	b.ne	458960 <_obstack_memory_used@@Base+0x11e10>  // b.any
  458948:	ldrb	w9, [x8, #1]
  45894c:	cmp	w9, #0x73
  458950:	b.ne	4589d4 <_obstack_memory_used@@Base+0x11e84>  // b.any
  458954:	sub	x23, x23, #0x1
  458958:	add	x8, x8, #0x2
  45895c:	b	45893c <_obstack_memory_used@@Base+0x11dec>
  458960:	cbnz	w9, 4589d4 <_obstack_memory_used@@Base+0x11e84>
  458964:	ldp	q1, q0, [x1]
  458968:	stp	q1, q0, [sp]
  45896c:	stp	q1, q0, [sp, #32]
  458970:	cbz	x23, 458a2c <_obstack_memory_used@@Base+0x11edc>
  458974:	ldr	x20, [sp, #40]
  458978:	ldr	w8, [sp, #56]
  45897c:	mov	x19, xzr
  458980:	mov	x21, x23
  458984:	b	4589a8 <_obstack_memory_used@@Base+0x11e58>
  458988:	add	x8, x20, w8, sxtw
  45898c:	ldr	x0, [x8]
  458990:	bl	403f40 <strlen@plt>
  458994:	adds	x8, x19, x0
  458998:	csinv	x19, x8, xzr, cc  // cc = lo, ul, last
  45899c:	adds	x21, x21, #0x1
  4589a0:	mov	w8, w22
  4589a4:	b.cs	458a10 <_obstack_memory_used@@Base+0x11ec0>  // b.hs, b.nlast
  4589a8:	tbnz	w8, #31, 4589b4 <_obstack_memory_used@@Base+0x11e64>
  4589ac:	mov	w22, w8
  4589b0:	b	4589c4 <_obstack_memory_used@@Base+0x11e74>
  4589b4:	add	w22, w8, #0x8
  4589b8:	cmn	w8, #0x8
  4589bc:	str	w22, [sp, #56]
  4589c0:	b.le	458988 <_obstack_memory_used@@Base+0x11e38>
  4589c4:	ldr	x8, [sp, #32]
  4589c8:	add	x9, x8, #0x8
  4589cc:	str	x9, [sp, #32]
  4589d0:	b	45898c <_obstack_memory_used@@Base+0x11e3c>
  4589d4:	ldp	q1, q0, [x1]
  4589d8:	mov	x0, sp
  4589dc:	add	x3, sp, #0x20
  4589e0:	mov	w1, #0x1                   	// #1
  4589e4:	stp	q1, q0, [sp, #32]
  4589e8:	bl	404290 <__vasprintf_chk@plt>
  4589ec:	tbnz	w0, #31, 4589f8 <_obstack_memory_used@@Base+0x11ea8>
  4589f0:	ldr	x19, [sp]
  4589f4:	b	458ab8 <_obstack_memory_used@@Base+0x11f68>
  4589f8:	bl	404a10 <__errno_location@plt>
  4589fc:	ldr	w8, [x0]
  458a00:	cmp	w8, #0xc
  458a04:	b.eq	458ad4 <_obstack_memory_used@@Base+0x11f84>  // b.none
  458a08:	mov	x19, xzr
  458a0c:	b	458ab8 <_obstack_memory_used@@Base+0x11f68>
  458a10:	lsr	x8, x19, #31
  458a14:	cbz	x8, 458a44 <_obstack_memory_used@@Base+0x11ef4>
  458a18:	bl	404a10 <__errno_location@plt>
  458a1c:	mov	w8, #0x4b                  	// #75
  458a20:	mov	x19, xzr
  458a24:	str	w8, [x0]
  458a28:	b	458ab8 <_obstack_memory_used@@Base+0x11f68>
  458a2c:	mov	w0, #0x1                   	// #1
  458a30:	bl	4459e8 <argp_parse@@Base+0xe13c>
  458a34:	mov	x19, x0
  458a38:	mov	x20, x0
  458a3c:	strb	wzr, [x0]
  458a40:	b	458ab8 <_obstack_memory_used@@Base+0x11f68>
  458a44:	add	x0, x19, #0x1
  458a48:	bl	4459e8 <argp_parse@@Base+0xe13c>
  458a4c:	mov	x19, x0
  458a50:	mov	x20, x0
  458a54:	b	458a90 <_obstack_memory_used@@Base+0x11f40>
  458a58:	ldr	x8, [sp]
  458a5c:	add	x9, x8, #0x8
  458a60:	str	x9, [sp]
  458a64:	ldr	x21, [x8]
  458a68:	mov	x0, x21
  458a6c:	bl	403f40 <strlen@plt>
  458a70:	mov	x22, x0
  458a74:	mov	x0, x20
  458a78:	mov	x1, x21
  458a7c:	mov	x2, x22
  458a80:	bl	403ec0 <memcpy@plt>
  458a84:	adds	x23, x23, #0x1
  458a88:	add	x20, x20, x22
  458a8c:	b.cs	458ab4 <_obstack_memory_used@@Base+0x11f64>  // b.hs, b.nlast
  458a90:	ldrsw	x8, [sp, #24]
  458a94:	tbz	w8, #31, 458a58 <_obstack_memory_used@@Base+0x11f08>
  458a98:	add	w9, w8, #0x8
  458a9c:	cmn	w8, #0x8
  458aa0:	str	w9, [sp, #24]
  458aa4:	b.gt	458a58 <_obstack_memory_used@@Base+0x11f08>
  458aa8:	ldr	x9, [sp, #8]
  458aac:	add	x8, x9, x8
  458ab0:	b	458a64 <_obstack_memory_used@@Base+0x11f14>
  458ab4:	strb	wzr, [x20]
  458ab8:	mov	x0, x19
  458abc:	ldp	x20, x19, [sp, #112]
  458ac0:	ldp	x22, x21, [sp, #96]
  458ac4:	ldr	x23, [sp, #80]
  458ac8:	ldp	x29, x30, [sp, #64]
  458acc:	add	sp, sp, #0x80
  458ad0:	ret
  458ad4:	bl	40e9ac <wcrtomb@plt+0x9e6c>
  458ad8:	sub	sp, sp, #0x80
  458adc:	cmp	w0, #0x1
  458ae0:	stp	x29, x30, [sp, #32]
  458ae4:	stp	x28, x27, [sp, #48]
  458ae8:	stp	x26, x25, [sp, #64]
  458aec:	stp	x24, x23, [sp, #80]
  458af0:	stp	x22, x21, [sp, #96]
  458af4:	stp	x20, x19, [sp, #112]
  458af8:	add	x29, sp, #0x20
  458afc:	b.lt	4591fc <_obstack_memory_used@@Base+0x126ac>  // b.tstop
  458b00:	ldp	w25, w23, [x6]
  458b04:	mov	x19, x6
  458b08:	mov	w26, w5
  458b0c:	mov	x27, x4
  458b10:	mov	x28, x3
  458b14:	mov	x22, x2
  458b18:	mov	w21, w0
  458b1c:	mov	x20, x1
  458b20:	str	xzr, [x6, #16]
  458b24:	cbz	w25, 458b4c <_obstack_memory_used@@Base+0x11ffc>
  458b28:	ldr	w8, [x19, #24]
  458b2c:	cbz	w8, 458b54 <_obstack_memory_used@@Base+0x12004>
  458b30:	ldrb	w8, [x22]
  458b34:	cmp	w8, #0x2d
  458b38:	b.eq	458b44 <_obstack_memory_used@@Base+0x11ff4>  // b.none
  458b3c:	cmp	w8, #0x2b
  458b40:	b.ne	458bac <_obstack_memory_used@@Base+0x1205c>  // b.any
  458b44:	add	x22, x22, #0x1
  458b48:	b	458bac <_obstack_memory_used@@Base+0x1205c>
  458b4c:	mov	w25, #0x1                   	// #1
  458b50:	str	w25, [x19]
  458b54:	stp	w25, w25, [x19, #44]
  458b58:	str	xzr, [x19, #32]
  458b5c:	ldrb	w8, [x22]
  458b60:	cmp	w8, #0x2b
  458b64:	b.eq	458b80 <_obstack_memory_used@@Base+0x12030>  // b.none
  458b68:	cmp	w8, #0x2d
  458b6c:	b.ne	458b8c <_obstack_memory_used@@Base+0x1203c>  // b.any
  458b70:	mov	w8, #0x2                   	// #2
  458b74:	str	w8, [x19, #40]
  458b78:	add	x22, x22, #0x1
  458b7c:	b	458ba4 <_obstack_memory_used@@Base+0x12054>
  458b80:	str	wzr, [x19, #40]
  458b84:	add	x22, x22, #0x1
  458b88:	b	458ba4 <_obstack_memory_used@@Base+0x12054>
  458b8c:	cbnz	w7, 458ba0 <_obstack_memory_used@@Base+0x12050>
  458b90:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c4b0>
  458b94:	add	x0, x0, #0x325
  458b98:	bl	404a30 <getenv@plt>
  458b9c:	cbz	x0, 45923c <_obstack_memory_used@@Base+0x126ec>
  458ba0:	str	wzr, [x19, #40]
  458ba4:	mov	w8, #0x1                   	// #1
  458ba8:	str	w8, [x19, #24]
  458bac:	ldrb	w8, [x22]
  458bb0:	ldr	x24, [x19, #32]
  458bb4:	cmp	w8, #0x3a
  458bb8:	csel	w2, wzr, w23, eq  // eq = none
  458bbc:	cbz	x24, 458c84 <_obstack_memory_used@@Base+0x12134>
  458bc0:	ldrb	w8, [x24]
  458bc4:	cbz	w8, 458c84 <_obstack_memory_used@@Base+0x12134>
  458bc8:	stur	w2, [x29, #-4]
  458bcc:	add	x23, x24, #0x1
  458bd0:	str	x23, [x19, #32]
  458bd4:	ldrb	w26, [x24]
  458bd8:	mov	x0, x22
  458bdc:	mov	w1, w26
  458be0:	bl	4047a0 <strchr@plt>
  458be4:	ldrb	w8, [x24, #1]
  458be8:	cbnz	w8, 458bf4 <_obstack_memory_used@@Base+0x120a4>
  458bec:	add	w25, w25, #0x1
  458bf0:	str	w25, [x19]
  458bf4:	orr	w8, w26, #0x1
  458bf8:	cmp	w8, #0x3b
  458bfc:	b.eq	458e78 <_obstack_memory_used@@Base+0x12328>  // b.none
  458c00:	cbz	x0, 458e78 <_obstack_memory_used@@Base+0x12328>
  458c04:	ldrb	w9, [x0]
  458c08:	ldrb	w8, [x0, #1]
  458c0c:	cmp	w9, #0x57
  458c10:	b.ne	458ec0 <_obstack_memory_used@@Base+0x12370>  // b.any
  458c14:	cbz	x28, 458ec0 <_obstack_memory_used@@Base+0x12370>
  458c18:	cmp	w8, #0x3b
  458c1c:	b.ne	458ec0 <_obstack_memory_used@@Base+0x12370>  // b.any
  458c20:	ldrb	w8, [x23]
  458c24:	cbnz	w8, 4592a8 <_obstack_memory_used@@Base+0x12758>
  458c28:	cmp	w25, w21
  458c2c:	b.ne	4592a4 <_obstack_memory_used@@Base+0x12754>  // b.any
  458c30:	ldur	w8, [x29, #-4]
  458c34:	cbz	w8, 458c6c <_obstack_memory_used@@Base+0x1211c>
  458c38:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  458c3c:	ldr	x21, [x8, #96]
  458c40:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f4b0>
  458c44:	add	x1, x1, #0xa
  458c48:	mov	w2, #0x5                   	// #5
  458c4c:	mov	x0, xzr
  458c50:	bl	404900 <dcgettext@plt>
  458c54:	ldr	x3, [x20]
  458c58:	mov	x2, x0
  458c5c:	mov	w1, #0x1                   	// #1
  458c60:	mov	x0, x21
  458c64:	mov	w4, w26
  458c68:	bl	404650 <__fprintf_chk@plt>
  458c6c:	str	w26, [x19, #8]
  458c70:	ldrb	w8, [x22]
  458c74:	mov	w9, #0x3f                  	// #63
  458c78:	cmp	w8, #0x3a
  458c7c:	csel	w26, w8, w9, eq  // eq = none
  458c80:	b	459200 <_obstack_memory_used@@Base+0x126b0>
  458c84:	ldr	w23, [x19, #48]
  458c88:	str	x28, [sp, #16]
  458c8c:	cmp	w23, w25
  458c90:	b.le	458c9c <_obstack_memory_used@@Base+0x1214c>
  458c94:	mov	w23, w25
  458c98:	str	w25, [x19, #48]
  458c9c:	ldr	w28, [x19, #44]
  458ca0:	cmp	w28, w25
  458ca4:	b.le	458cb0 <_obstack_memory_used@@Base+0x12160>
  458ca8:	mov	w28, w25
  458cac:	str	w25, [x19, #44]
  458cb0:	ldr	w24, [x19, #40]
  458cb4:	cmp	w24, #0x1
  458cb8:	b.ne	458f50 <_obstack_memory_used@@Base+0x12400>  // b.any
  458cbc:	cmp	w28, w23
  458cc0:	b.eq	458ee4 <_obstack_memory_used@@Base+0x12394>  // b.none
  458cc4:	cmp	w23, w25
  458cc8:	b.eq	458ee4 <_obstack_memory_used@@Base+0x12394>  // b.none
  458ccc:	cmp	w25, w23
  458cd0:	b.le	458ef8 <_obstack_memory_used@@Base+0x123a8>
  458cd4:	cmp	w28, w23
  458cd8:	b.ge	458ef8 <_obstack_memory_used@@Base+0x123a8>  // b.tcont
  458cdc:	add	x9, x20, w23, sxtw #3
  458ce0:	sxtw	x8, w23
  458ce4:	add	x10, x20, #0x10
  458ce8:	add	x11, x9, #0x10
  458cec:	mov	w12, w28
  458cf0:	mov	w13, w25
  458cf4:	sub	w14, w13, w23
  458cf8:	sub	w15, w23, w12
  458cfc:	cmp	w14, w15
  458d00:	b.le	458d80 <_obstack_memory_used@@Base+0x12230>
  458d04:	cmp	w15, #0x1
  458d08:	sub	w13, w13, w15
  458d0c:	b.lt	458dec <_obstack_memory_used@@Base+0x1229c>  // b.tstop
  458d10:	sxtw	x14, w12
  458d14:	sxtw	x16, w13
  458d18:	cmp	w15, #0x4
  458d1c:	mov	w15, w15
  458d20:	b.cc	458d4c <_obstack_memory_used@@Base+0x121fc>  // b.lo, b.ul, b.last
  458d24:	add	x18, x16, x15
  458d28:	add	x17, x20, x14, lsl #3
  458d2c:	add	x18, x20, x18, lsl #3
  458d30:	cmp	x17, x18
  458d34:	b.cs	458e00 <_obstack_memory_used@@Base+0x122b0>  // b.hs, b.nlast
  458d38:	add	x17, x14, x15
  458d3c:	add	x17, x20, x17, lsl #3
  458d40:	add	x18, x20, x16, lsl #3
  458d44:	cmp	x18, x17
  458d48:	b.cs	458e00 <_obstack_memory_used@@Base+0x122b0>  // b.hs, b.nlast
  458d4c:	mov	x17, xzr
  458d50:	add	x16, x17, x16
  458d54:	add	x18, x17, x14
  458d58:	add	x14, x20, x16, lsl #3
  458d5c:	add	x16, x20, x18, lsl #3
  458d60:	sub	x15, x15, x17
  458d64:	ldr	x17, [x14]
  458d68:	ldr	x18, [x16]
  458d6c:	subs	x15, x15, #0x1
  458d70:	str	x17, [x16], #8
  458d74:	str	x18, [x14], #8
  458d78:	b.ne	458d64 <_obstack_memory_used@@Base+0x12214>  // b.any
  458d7c:	b	458dec <_obstack_memory_used@@Base+0x1229c>
  458d80:	cmp	w14, #0x1
  458d84:	b.lt	458de8 <_obstack_memory_used@@Base+0x12298>  // b.tstop
  458d88:	sxtw	x15, w12
  458d8c:	cmp	w14, #0x3
  458d90:	mov	w16, w14
  458d94:	b.ls	458db8 <_obstack_memory_used@@Base+0x12268>  // b.plast
  458d98:	add	x17, x20, x15, lsl #3
  458d9c:	add	x18, x9, x16, lsl #3
  458da0:	cmp	x17, x18
  458da4:	b.cs	458e3c <_obstack_memory_used@@Base+0x122ec>  // b.hs, b.nlast
  458da8:	add	x17, x15, x16
  458dac:	add	x17, x20, x17, lsl #3
  458db0:	cmp	x9, x17
  458db4:	b.cs	458e3c <_obstack_memory_used@@Base+0x122ec>  // b.hs, b.nlast
  458db8:	mov	x17, xzr
  458dbc:	add	x18, x8, x17
  458dc0:	add	x0, x17, x15
  458dc4:	add	x15, x20, x18, lsl #3
  458dc8:	add	x18, x20, x0, lsl #3
  458dcc:	sub	x16, x16, x17
  458dd0:	ldr	x17, [x15]
  458dd4:	ldr	x0, [x18]
  458dd8:	subs	x16, x16, #0x1
  458ddc:	str	x17, [x18], #8
  458de0:	str	x0, [x15], #8
  458de4:	b.ne	458dd0 <_obstack_memory_used@@Base+0x12280>  // b.any
  458de8:	add	w12, w14, w12
  458dec:	cmp	w13, w23
  458df0:	b.le	458ef8 <_obstack_memory_used@@Base+0x123a8>
  458df4:	cmp	w23, w12
  458df8:	b.gt	458cf4 <_obstack_memory_used@@Base+0x121a4>
  458dfc:	b	458ef8 <_obstack_memory_used@@Base+0x123a8>
  458e00:	and	x17, x15, #0xfffffffc
  458e04:	add	x18, x10, x14, lsl #3
  458e08:	add	x0, x10, x16, lsl #3
  458e0c:	mov	x1, x17
  458e10:	ldp	q0, q3, [x18, #-16]
  458e14:	ldp	q1, q2, [x0, #-16]
  458e18:	subs	x1, x1, #0x4
  458e1c:	stp	q1, q2, [x18, #-16]
  458e20:	stp	q0, q3, [x0, #-16]
  458e24:	add	x18, x18, #0x20
  458e28:	add	x0, x0, #0x20
  458e2c:	b.ne	458e10 <_obstack_memory_used@@Base+0x122c0>  // b.any
  458e30:	cmp	x17, x15
  458e34:	b.eq	458dec <_obstack_memory_used@@Base+0x1229c>  // b.none
  458e38:	b	458d50 <_obstack_memory_used@@Base+0x12200>
  458e3c:	and	x17, x16, #0xfffffffc
  458e40:	add	x18, x10, x15, lsl #3
  458e44:	mov	x0, x17
  458e48:	mov	x1, x11
  458e4c:	ldp	q0, q3, [x18, #-16]
  458e50:	ldp	q1, q2, [x1, #-16]
  458e54:	subs	x0, x0, #0x4
  458e58:	stp	q1, q2, [x18, #-16]
  458e5c:	stp	q0, q3, [x1, #-16]
  458e60:	add	x18, x18, #0x20
  458e64:	add	x1, x1, #0x20
  458e68:	b.ne	458e4c <_obstack_memory_used@@Base+0x122fc>  // b.any
  458e6c:	cmp	x17, x16
  458e70:	b.ne	458dbc <_obstack_memory_used@@Base+0x1226c>  // b.any
  458e74:	b	458de8 <_obstack_memory_used@@Base+0x12298>
  458e78:	ldur	w8, [x29, #-4]
  458e7c:	cbz	w8, 458eb4 <_obstack_memory_used@@Base+0x12364>
  458e80:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  458e84:	ldr	x21, [x8, #96]
  458e88:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  458e8c:	add	x1, x1, #0xfee
  458e90:	mov	w2, #0x5                   	// #5
  458e94:	mov	x0, xzr
  458e98:	bl	404900 <dcgettext@plt>
  458e9c:	ldr	x3, [x20]
  458ea0:	mov	x2, x0
  458ea4:	mov	w1, #0x1                   	// #1
  458ea8:	mov	x0, x21
  458eac:	mov	w4, w26
  458eb0:	bl	404650 <__fprintf_chk@plt>
  458eb4:	str	w26, [x19, #8]
  458eb8:	mov	w26, #0x3f                  	// #63
  458ebc:	b	459200 <_obstack_memory_used@@Base+0x126b0>
  458ec0:	cmp	w8, #0x3a
  458ec4:	b.ne	459200 <_obstack_memory_used@@Base+0x126b0>  // b.any
  458ec8:	ldrb	w9, [x0, #2]
  458ecc:	ldrb	w8, [x23]
  458ed0:	cmp	w9, #0x3a
  458ed4:	b.ne	459224 <_obstack_memory_used@@Base+0x126d4>  // b.any
  458ed8:	cbnz	w8, 459228 <_obstack_memory_used@@Base+0x126d8>
  458edc:	str	xzr, [x19, #16]
  458ee0:	b	459234 <_obstack_memory_used@@Base+0x126e4>
  458ee4:	cmp	w23, w25
  458ee8:	b.eq	458f04 <_obstack_memory_used@@Base+0x123b4>  // b.none
  458eec:	mov	w28, w25
  458ef0:	str	w25, [x19, #44]
  458ef4:	b	458f04 <_obstack_memory_used@@Base+0x123b4>
  458ef8:	add	w8, w28, w25
  458efc:	sub	w28, w8, w23
  458f00:	stp	w28, w25, [x19, #44]
  458f04:	cmp	w25, w21
  458f08:	b.ge	458f48 <_obstack_memory_used@@Base+0x123f8>  // b.tcont
  458f0c:	add	x8, x20, w25, sxtw #3
  458f10:	b	458f28 <_obstack_memory_used@@Base+0x123d8>
  458f14:	add	w25, w25, #0x1
  458f18:	cmp	w21, w25
  458f1c:	add	x8, x8, #0x8
  458f20:	str	w25, [x19]
  458f24:	b.eq	458f44 <_obstack_memory_used@@Base+0x123f4>  // b.none
  458f28:	ldr	x9, [x8]
  458f2c:	ldrb	w10, [x9]
  458f30:	cmp	w10, #0x2d
  458f34:	b.ne	458f14 <_obstack_memory_used@@Base+0x123c4>  // b.any
  458f38:	ldrb	w9, [x9, #1]
  458f3c:	cbz	w9, 458f14 <_obstack_memory_used@@Base+0x123c4>
  458f40:	b	458f48 <_obstack_memory_used@@Base+0x123f8>
  458f44:	mov	w25, w21
  458f48:	mov	w23, w25
  458f4c:	str	w25, [x19, #48]
  458f50:	cmp	w25, w21
  458f54:	b.eq	4591f0 <_obstack_memory_used@@Base+0x126a0>  // b.none
  458f58:	ldr	x0, [x20, w25, sxtw #3]
  458f5c:	str	w26, [sp, #12]
  458f60:	mov	x26, x27
  458f64:	adrp	x27, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  458f68:	add	x27, x27, #0x84
  458f6c:	mov	x1, x27
  458f70:	stur	w2, [x29, #-4]
  458f74:	bl	404660 <strcmp@plt>
  458f78:	cbz	w0, 458fe8 <_obstack_memory_used@@Base+0x12498>
  458f7c:	cmp	w25, w21
  458f80:	b.eq	4591f0 <_obstack_memory_used@@Base+0x126a0>  // b.none
  458f84:	sxtw	x8, w25
  458f88:	ldr	x23, [x20, x8, lsl #3]
  458f8c:	ldrb	w8, [x23]
  458f90:	cmp	w8, #0x2d
  458f94:	b.ne	4591ac <_obstack_memory_used@@Base+0x1265c>  // b.any
  458f98:	mov	x28, x23
  458f9c:	ldrb	w1, [x28, #1]!
  458fa0:	cbz	w1, 4591ac <_obstack_memory_used@@Base+0x1265c>
  458fa4:	ldr	x8, [sp, #16]
  458fa8:	cbz	x8, 459348 <_obstack_memory_used@@Base+0x127f8>
  458fac:	cmp	w1, #0x2d
  458fb0:	b.ne	4592e8 <_obstack_memory_used@@Base+0x12798>  // b.any
  458fb4:	ldr	x3, [sp, #16]
  458fb8:	ldr	w5, [sp, #12]
  458fbc:	ldur	w7, [x29, #-4]
  458fc0:	add	x8, x23, #0x2
  458fc4:	mov	w0, w21
  458fc8:	mov	x1, x20
  458fcc:	mov	x2, x22
  458fd0:	mov	x4, x26
  458fd4:	mov	x6, x19
  458fd8:	str	x8, [x19, #32]
  458fdc:	str	x27, [sp]
  458fe0:	bl	459380 <_obstack_memory_used@@Base+0x12830>
  458fe4:	b	459204 <_obstack_memory_used@@Base+0x126b4>
  458fe8:	add	w8, w25, #0x1
  458fec:	cmp	w28, w23
  458ff0:	str	w8, [x19]
  458ff4:	b.eq	4591c4 <_obstack_memory_used@@Base+0x12674>  // b.none
  458ff8:	cmp	w23, w8
  458ffc:	b.eq	4591c4 <_obstack_memory_used@@Base+0x12674>  // b.none
  459000:	cmp	w25, w23
  459004:	b.lt	4591d8 <_obstack_memory_used@@Base+0x12688>  // b.tstop
  459008:	cmp	w28, w23
  45900c:	b.ge	4591d8 <_obstack_memory_used@@Base+0x12688>  // b.tcont
  459010:	add	x10, x20, w23, sxtw #3
  459014:	sxtw	x9, w23
  459018:	add	x11, x20, #0x10
  45901c:	add	x12, x10, #0x10
  459020:	mov	w13, w28
  459024:	mov	w14, w8
  459028:	sub	w15, w14, w23
  45902c:	sub	w16, w23, w13
  459030:	cmp	w15, w16
  459034:	b.le	4590b4 <_obstack_memory_used@@Base+0x12564>
  459038:	cmp	w16, #0x1
  45903c:	sub	w14, w14, w16
  459040:	b.lt	459120 <_obstack_memory_used@@Base+0x125d0>  // b.tstop
  459044:	sxtw	x15, w13
  459048:	sxtw	x17, w14
  45904c:	cmp	w16, #0x4
  459050:	mov	w16, w16
  459054:	b.cc	459080 <_obstack_memory_used@@Base+0x12530>  // b.lo, b.ul, b.last
  459058:	add	x0, x17, x16
  45905c:	add	x18, x20, x15, lsl #3
  459060:	add	x0, x20, x0, lsl #3
  459064:	cmp	x18, x0
  459068:	b.cs	459134 <_obstack_memory_used@@Base+0x125e4>  // b.hs, b.nlast
  45906c:	add	x18, x15, x16
  459070:	add	x18, x20, x18, lsl #3
  459074:	add	x0, x20, x17, lsl #3
  459078:	cmp	x0, x18
  45907c:	b.cs	459134 <_obstack_memory_used@@Base+0x125e4>  // b.hs, b.nlast
  459080:	mov	x18, xzr
  459084:	add	x17, x18, x17
  459088:	add	x0, x18, x15
  45908c:	add	x15, x20, x17, lsl #3
  459090:	add	x17, x20, x0, lsl #3
  459094:	sub	x16, x16, x18
  459098:	ldr	x18, [x15]
  45909c:	ldr	x0, [x17]
  4590a0:	subs	x16, x16, #0x1
  4590a4:	str	x18, [x17], #8
  4590a8:	str	x0, [x15], #8
  4590ac:	b.ne	459098 <_obstack_memory_used@@Base+0x12548>  // b.any
  4590b0:	b	459120 <_obstack_memory_used@@Base+0x125d0>
  4590b4:	cmp	w15, #0x1
  4590b8:	b.lt	45911c <_obstack_memory_used@@Base+0x125cc>  // b.tstop
  4590bc:	sxtw	x16, w13
  4590c0:	cmp	w15, #0x3
  4590c4:	mov	w17, w15
  4590c8:	b.ls	4590ec <_obstack_memory_used@@Base+0x1259c>  // b.plast
  4590cc:	add	x18, x20, x16, lsl #3
  4590d0:	add	x0, x10, x17, lsl #3
  4590d4:	cmp	x18, x0
  4590d8:	b.cs	459170 <_obstack_memory_used@@Base+0x12620>  // b.hs, b.nlast
  4590dc:	add	x18, x16, x17
  4590e0:	add	x18, x20, x18, lsl #3
  4590e4:	cmp	x10, x18
  4590e8:	b.cs	459170 <_obstack_memory_used@@Base+0x12620>  // b.hs, b.nlast
  4590ec:	mov	x18, xzr
  4590f0:	add	x0, x9, x18
  4590f4:	add	x1, x18, x16
  4590f8:	add	x16, x20, x0, lsl #3
  4590fc:	add	x0, x20, x1, lsl #3
  459100:	sub	x17, x17, x18
  459104:	ldr	x18, [x16]
  459108:	ldr	x1, [x0]
  45910c:	subs	x17, x17, #0x1
  459110:	str	x18, [x0], #8
  459114:	str	x1, [x16], #8
  459118:	b.ne	459104 <_obstack_memory_used@@Base+0x125b4>  // b.any
  45911c:	add	w13, w15, w13
  459120:	cmp	w14, w23
  459124:	b.le	4591d8 <_obstack_memory_used@@Base+0x12688>
  459128:	cmp	w23, w13
  45912c:	b.gt	459028 <_obstack_memory_used@@Base+0x124d8>
  459130:	b	4591d8 <_obstack_memory_used@@Base+0x12688>
  459134:	and	x18, x16, #0xfffffffc
  459138:	add	x0, x11, x15, lsl #3
  45913c:	add	x1, x11, x17, lsl #3
  459140:	mov	x2, x18
  459144:	ldp	q0, q3, [x0, #-16]
  459148:	ldp	q1, q2, [x1, #-16]
  45914c:	subs	x2, x2, #0x4
  459150:	stp	q1, q2, [x0, #-16]
  459154:	stp	q0, q3, [x1, #-16]
  459158:	add	x0, x0, #0x20
  45915c:	add	x1, x1, #0x20
  459160:	b.ne	459144 <_obstack_memory_used@@Base+0x125f4>  // b.any
  459164:	cmp	x18, x16
  459168:	b.eq	459120 <_obstack_memory_used@@Base+0x125d0>  // b.none
  45916c:	b	459084 <_obstack_memory_used@@Base+0x12534>
  459170:	and	x18, x17, #0xfffffffc
  459174:	add	x0, x11, x16, lsl #3
  459178:	mov	x1, x18
  45917c:	mov	x2, x12
  459180:	ldp	q0, q3, [x0, #-16]
  459184:	ldp	q1, q2, [x2, #-16]
  459188:	subs	x1, x1, #0x4
  45918c:	stp	q1, q2, [x0, #-16]
  459190:	stp	q0, q3, [x2, #-16]
  459194:	add	x0, x0, #0x20
  459198:	add	x2, x2, #0x20
  45919c:	b.ne	459180 <_obstack_memory_used@@Base+0x12630>  // b.any
  4591a0:	cmp	x18, x17
  4591a4:	b.ne	4590f0 <_obstack_memory_used@@Base+0x125a0>  // b.any
  4591a8:	b	45911c <_obstack_memory_used@@Base+0x125cc>
  4591ac:	cbz	w24, 4591fc <_obstack_memory_used@@Base+0x126ac>
  4591b0:	add	w8, w25, #0x1
  4591b4:	str	x23, [x19, #16]
  4591b8:	str	w8, [x19]
  4591bc:	mov	w26, #0x1                   	// #1
  4591c0:	b	459200 <_obstack_memory_used@@Base+0x126b0>
  4591c4:	cmp	w28, w23
  4591c8:	b.ne	4591e4 <_obstack_memory_used@@Base+0x12694>  // b.any
  4591cc:	mov	w28, w8
  4591d0:	str	w8, [x19, #44]
  4591d4:	b	4591e4 <_obstack_memory_used@@Base+0x12694>
  4591d8:	add	w9, w28, w8
  4591dc:	sub	w28, w9, w23
  4591e0:	stp	w28, w8, [x19, #44]
  4591e4:	str	w21, [x19, #48]
  4591e8:	str	w21, [x19]
  4591ec:	mov	w23, w21
  4591f0:	cmp	w28, w23
  4591f4:	b.eq	4591fc <_obstack_memory_used@@Base+0x126ac>  // b.none
  4591f8:	str	w28, [x19]
  4591fc:	mov	w26, #0xffffffff            	// #-1
  459200:	mov	w0, w26
  459204:	ldp	x20, x19, [sp, #112]
  459208:	ldp	x22, x21, [sp, #96]
  45920c:	ldp	x24, x23, [sp, #80]
  459210:	ldp	x26, x25, [sp, #64]
  459214:	ldp	x28, x27, [sp, #48]
  459218:	ldp	x29, x30, [sp, #32]
  45921c:	add	sp, sp, #0x80
  459220:	ret
  459224:	cbz	w8, 459248 <_obstack_memory_used@@Base+0x126f8>
  459228:	add	w8, w25, #0x1
  45922c:	str	x23, [x19, #16]
  459230:	str	w8, [x19]
  459234:	str	xzr, [x19, #32]
  459238:	b	459200 <_obstack_memory_used@@Base+0x126b0>
  45923c:	mov	w8, #0x1                   	// #1
  459240:	str	w8, [x19, #40]
  459244:	b	458ba4 <_obstack_memory_used@@Base+0x12054>
  459248:	cmp	w25, w21
  45924c:	b.ne	45935c <_obstack_memory_used@@Base+0x1280c>  // b.any
  459250:	ldur	w8, [x29, #-4]
  459254:	cbz	w8, 45928c <_obstack_memory_used@@Base+0x1273c>
  459258:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  45925c:	ldr	x21, [x8, #96]
  459260:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f4b0>
  459264:	add	x1, x1, #0xa
  459268:	mov	w2, #0x5                   	// #5
  45926c:	mov	x0, xzr
  459270:	bl	404900 <dcgettext@plt>
  459274:	ldr	x3, [x20]
  459278:	mov	x2, x0
  45927c:	mov	w1, #0x1                   	// #1
  459280:	mov	x0, x21
  459284:	mov	w4, w26
  459288:	bl	404650 <__fprintf_chk@plt>
  45928c:	str	w26, [x19, #8]
  459290:	ldrb	w8, [x22]
  459294:	mov	w9, #0x3f                  	// #63
  459298:	cmp	w8, #0x3a
  45929c:	csel	w26, w8, w9, eq  // eq = none
  4592a0:	b	459234 <_obstack_memory_used@@Base+0x126e4>
  4592a4:	ldr	x23, [x20, w25, sxtw #3]
  4592a8:	str	x23, [x19, #16]
  4592ac:	ldur	w7, [x29, #-4]
  4592b0:	adrp	x8, 466000 <_obstack_memory_used@@Base+0x1f4b0>
  4592b4:	add	x8, x8, #0x33
  4592b8:	mov	w0, w21
  4592bc:	mov	x1, x20
  4592c0:	mov	x2, x22
  4592c4:	mov	x3, x28
  4592c8:	mov	x4, x27
  4592cc:	mov	w5, wzr
  4592d0:	mov	x6, x19
  4592d4:	str	x23, [x19, #32]
  4592d8:	str	xzr, [x19, #16]
  4592dc:	str	x8, [sp]
  4592e0:	bl	459380 <_obstack_memory_used@@Base+0x12830>
  4592e4:	b	459204 <_obstack_memory_used@@Base+0x126b4>
  4592e8:	ldr	w8, [sp, #12]
  4592ec:	cbz	w8, 459348 <_obstack_memory_used@@Base+0x127f8>
  4592f0:	ldrb	w8, [x23, #2]
  4592f4:	mov	x27, x26
  4592f8:	cbz	w8, 459370 <_obstack_memory_used@@Base+0x12820>
  4592fc:	ldr	x3, [sp, #16]
  459300:	ldr	w5, [sp, #12]
  459304:	ldur	w7, [x29, #-4]
  459308:	adrp	x8, 465000 <_obstack_memory_used@@Base+0x1e4b0>
  45930c:	add	x8, x8, #0x85
  459310:	mov	w0, w21
  459314:	mov	x1, x20
  459318:	mov	x2, x22
  45931c:	mov	x4, x27
  459320:	mov	x6, x19
  459324:	str	x28, [x19, #32]
  459328:	str	x8, [sp]
  45932c:	bl	459380 <_obstack_memory_used@@Base+0x12830>
  459330:	mov	w26, w0
  459334:	cmn	w0, #0x1
  459338:	b.ne	459200 <_obstack_memory_used@@Base+0x126b0>  // b.any
  45933c:	ldrsw	x25, [x19]
  459340:	ldr	x23, [x20, x25, lsl #3]
  459344:	b	45934c <_obstack_memory_used@@Base+0x127fc>
  459348:	mov	x27, x26
  45934c:	ldr	x28, [sp, #16]
  459350:	add	x24, x23, #0x1
  459354:	str	x24, [x19, #32]
  459358:	b	458bcc <_obstack_memory_used@@Base+0x1207c>
  45935c:	add	w8, w25, #0x1
  459360:	str	w8, [x19]
  459364:	ldr	x8, [x20, w25, sxtw #3]
  459368:	str	x8, [x19, #16]
  45936c:	b	459234 <_obstack_memory_used@@Base+0x126e4>
  459370:	mov	x0, x22
  459374:	bl	4047a0 <strchr@plt>
  459378:	cbnz	x0, 45934c <_obstack_memory_used@@Base+0x127fc>
  45937c:	b	4592fc <_obstack_memory_used@@Base+0x127ac>
  459380:	sub	sp, sp, #0xa0
  459384:	stp	x29, x30, [sp, #64]
  459388:	stp	x28, x27, [sp, #80]
  45938c:	stp	x26, x25, [sp, #96]
  459390:	stp	x24, x23, [sp, #112]
  459394:	stp	x22, x21, [sp, #128]
  459398:	stp	x20, x19, [sp, #144]
  45939c:	add	x29, sp, #0x40
  4593a0:	ldr	x21, [x6, #32]
  4593a4:	ldr	x26, [x29, #96]
  4593a8:	mov	x19, x6
  4593ac:	mov	x23, x3
  4593b0:	mov	x22, x1
  4593b4:	mov	x24, x21
  4593b8:	stur	w7, [x29, #-16]
  4593bc:	stur	w5, [x29, #-8]
  4593c0:	ldrb	w8, [x24]
  4593c4:	cbz	w8, 4593dc <_obstack_memory_used@@Base+0x1288c>
  4593c8:	cmp	w8, #0x3d
  4593cc:	b.eq	4593dc <_obstack_memory_used@@Base+0x1288c>  // b.none
  4593d0:	add	x24, x24, #0x1
  4593d4:	ldrb	w8, [x24]
  4593d8:	cbnz	w8, 4593c8 <_obstack_memory_used@@Base+0x12878>
  4593dc:	ldr	x25, [x23]
  4593e0:	str	x2, [sp, #16]
  4593e4:	str	w0, [sp, #12]
  4593e8:	cbz	x25, 459574 <_obstack_memory_used@@Base+0x12a24>
  4593ec:	stp	x4, x26, [sp, #24]
  4593f0:	mov	x28, xzr
  4593f4:	sub	x27, x24, x21
  4593f8:	mov	x26, x25
  4593fc:	mov	x20, x23
  459400:	b	459410 <_obstack_memory_used@@Base+0x128c0>
  459404:	ldr	x26, [x20, #32]!
  459408:	add	x28, x28, #0x1
  45940c:	cbz	x26, 459444 <_obstack_memory_used@@Base+0x128f4>
  459410:	mov	x0, x26
  459414:	mov	x1, x21
  459418:	mov	x2, x27
  45941c:	bl	404300 <strncmp@plt>
  459420:	cbnz	w0, 459404 <_obstack_memory_used@@Base+0x128b4>
  459424:	mov	x0, x26
  459428:	bl	403f40 <strlen@plt>
  45942c:	cmp	x27, x0
  459430:	b.ne	459404 <_obstack_memory_used@@Base+0x128b4>  // b.any
  459434:	ldp	x4, x26, [sp, #24]
  459438:	mov	w8, w28
  45943c:	stur	w28, [x29, #-12]
  459440:	b	4595c0 <_obstack_memory_used@@Base+0x12a70>
  459444:	cbz	x25, 459598 <_obstack_memory_used@@Base+0x12a48>
  459448:	str	x22, [sp]
  45944c:	mov	x26, xzr
  459450:	mov	x20, xzr
  459454:	mov	w8, #0xffffffff            	// #-1
  459458:	mov	x22, x23
  45945c:	stur	wzr, [x29, #-4]
  459460:	str	wzr, [sp, #8]
  459464:	stur	xzr, [x29, #-24]
  459468:	stur	w8, [x29, #-12]
  45946c:	mov	x0, x25
  459470:	mov	x1, x21
  459474:	mov	x2, x27
  459478:	bl	404300 <strncmp@plt>
  45947c:	cbz	w0, 459494 <_obstack_memory_used@@Base+0x12944>
  459480:	ldr	x25, [x22, #32]!
  459484:	cbz	x25, 459580 <_obstack_memory_used@@Base+0x12a30>
  459488:	ldr	x21, [x19, #32]
  45948c:	add	x26, x26, #0x1
  459490:	b	45946c <_obstack_memory_used@@Base+0x1291c>
  459494:	cbz	x20, 459510 <_obstack_memory_used@@Base+0x129c0>
  459498:	ldur	w8, [x29, #-8]
  45949c:	cbnz	w8, 4594c0 <_obstack_memory_used@@Base+0x12970>
  4594a0:	ldr	w8, [x20, #8]
  4594a4:	ldr	w9, [x22, #8]
  4594a8:	cmp	w8, w9
  4594ac:	b.ne	4594c0 <_obstack_memory_used@@Base+0x12970>  // b.any
  4594b0:	ldr	x8, [x20, #16]
  4594b4:	ldr	x9, [x22, #16]
  4594b8:	cmp	x8, x9
  4594bc:	b.eq	459540 <_obstack_memory_used@@Base+0x129f0>  // b.none
  4594c0:	ldur	w8, [x29, #-4]
  4594c4:	cbnz	w8, 459480 <_obstack_memory_used@@Base+0x12930>
  4594c8:	ldur	w8, [x29, #-16]
  4594cc:	cbz	w8, 459520 <_obstack_memory_used@@Base+0x129d0>
  4594d0:	ldur	x21, [x29, #-24]
  4594d4:	cbnz	x21, 459508 <_obstack_memory_used@@Base+0x129b8>
  4594d8:	mov	x0, x28
  4594dc:	bl	404250 <malloc@plt>
  4594e0:	mov	w25, #0x1                   	// #1
  4594e4:	cbz	x0, 459564 <_obstack_memory_used@@Base+0x12a14>
  4594e8:	mov	w1, wzr
  4594ec:	mov	x2, x28
  4594f0:	mov	x21, x0
  4594f4:	bl	404360 <memset@plt>
  4594f8:	ldur	w8, [x29, #-12]
  4594fc:	strb	w25, [x21, w8, sxtw]
  459500:	mov	w8, #0x1                   	// #1
  459504:	str	w8, [sp, #8]
  459508:	stur	wzr, [x29, #-4]
  45950c:	b	459530 <_obstack_memory_used@@Base+0x129e0>
  459510:	mov	x20, x22
  459514:	mov	w8, w26
  459518:	stur	w26, [x29, #-12]
  45951c:	b	459480 <_obstack_memory_used@@Base+0x12930>
  459520:	ldur	x21, [x29, #-24]
  459524:	mov	w8, #0x1                   	// #1
  459528:	stur	w8, [x29, #-4]
  45952c:	cbz	x21, 45955c <_obstack_memory_used@@Base+0x12a0c>
  459530:	mov	w8, #0x1                   	// #1
  459534:	stur	x21, [x29, #-24]
  459538:	strb	w8, [x21, x26]
  45953c:	b	459480 <_obstack_memory_used@@Base+0x12930>
  459540:	ldur	w8, [x29, #-4]
  459544:	cbnz	w8, 459480 <_obstack_memory_used@@Base+0x12930>
  459548:	ldr	w8, [x20, #24]
  45954c:	ldr	w9, [x22, #24]
  459550:	cmp	w8, w9
  459554:	b.ne	4594c8 <_obstack_memory_used@@Base+0x12978>  // b.any
  459558:	b	459480 <_obstack_memory_used@@Base+0x12930>
  45955c:	stur	xzr, [x29, #-24]
  459560:	b	459480 <_obstack_memory_used@@Base+0x12930>
  459564:	mov	w8, #0x1                   	// #1
  459568:	stur	w8, [x29, #-4]
  45956c:	stur	xzr, [x29, #-24]
  459570:	b	459480 <_obstack_memory_used@@Base+0x12930>
  459574:	mov	w8, #0xffffffff            	// #-1
  459578:	mov	w28, wzr
  45957c:	b	4595a0 <_obstack_memory_used@@Base+0x12a50>
  459580:	ldp	x4, x26, [sp, #24]
  459584:	ldr	x22, [sp]
  459588:	ldur	x25, [x29, #-24]
  45958c:	ldr	w27, [sp, #8]
  459590:	cbz	x25, 4595b4 <_obstack_memory_used@@Base+0x12a64>
  459594:	b	4595ec <_obstack_memory_used@@Base+0x12a9c>
  459598:	ldp	x4, x26, [sp, #24]
  45959c:	mov	w8, #0xffffffff            	// #-1
  4595a0:	mov	x20, xzr
  4595a4:	mov	w27, wzr
  4595a8:	stur	wzr, [x29, #-4]
  4595ac:	stur	w8, [x29, #-12]
  4595b0:	cbnz	x25, 4595ec <_obstack_memory_used@@Base+0x12a9c>
  4595b4:	ldur	w8, [x29, #-4]
  4595b8:	cbnz	w8, 4595ec <_obstack_memory_used@@Base+0x12a9c>
  4595bc:	cbz	x20, 4596a8 <_obstack_memory_used@@Base+0x12b58>
  4595c0:	ldr	w9, [x19]
  4595c4:	str	xzr, [x19, #32]
  4595c8:	add	w8, w9, #0x1
  4595cc:	str	w8, [x19]
  4595d0:	ldrb	w11, [x24]
  4595d4:	ldr	w10, [x20, #8]
  4595d8:	cbz	w11, 459660 <_obstack_memory_used@@Base+0x12b10>
  4595dc:	cbz	w10, 459758 <_obstack_memory_used@@Base+0x12c08>
  4595e0:	add	x8, x24, #0x1
  4595e4:	str	x8, [x19, #16]
  4595e8:	b	459684 <_obstack_memory_used@@Base+0x12b34>
  4595ec:	ldur	w8, [x29, #-16]
  4595f0:	cbz	w8, 459634 <_obstack_memory_used@@Base+0x12ae4>
  4595f4:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4595f8:	ldr	x21, [x20, #96]
  4595fc:	ldur	w8, [x29, #-4]
  459600:	cbz	w8, 4597a8 <_obstack_memory_used@@Base+0x12c58>
  459604:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f4b0>
  459608:	add	x1, x1, #0x37
  45960c:	mov	w2, #0x5                   	// #5
  459610:	mov	x0, xzr
  459614:	bl	404900 <dcgettext@plt>
  459618:	ldr	x3, [x22]
  45961c:	ldr	x5, [x19, #32]
  459620:	mov	x2, x0
  459624:	mov	w1, #0x1                   	// #1
  459628:	mov	x0, x21
  45962c:	mov	x4, x26
  459630:	bl	404650 <__fprintf_chk@plt>
  459634:	cbz	w27, 459640 <_obstack_memory_used@@Base+0x12af0>
  459638:	mov	x0, x25
  45963c:	bl	404700 <free@plt>
  459640:	ldr	x20, [x19, #32]
  459644:	mov	x0, x20
  459648:	bl	403f40 <strlen@plt>
  45964c:	ldr	w8, [x19]
  459650:	add	x9, x20, x0
  459654:	str	wzr, [x19, #8]
  459658:	str	x9, [x19, #32]
  45965c:	b	45972c <_obstack_memory_used@@Base+0x12bdc>
  459660:	cmp	w10, #0x1
  459664:	b.ne	459684 <_obstack_memory_used@@Base+0x12b34>  // b.any
  459668:	ldr	w10, [sp, #12]
  45966c:	cmp	w8, w10
  459670:	b.ge	459854 <_obstack_memory_used@@Base+0x12d04>  // b.tcont
  459674:	add	w9, w9, #0x2
  459678:	str	w9, [x19]
  45967c:	ldr	x8, [x22, w8, sxtw #3]
  459680:	b	4595e4 <_obstack_memory_used@@Base+0x12a94>
  459684:	cbz	x4, 459690 <_obstack_memory_used@@Base+0x12b40>
  459688:	ldur	w8, [x29, #-12]
  45968c:	str	w8, [x4]
  459690:	ldr	x8, [x20, #16]
  459694:	ldr	w0, [x20, #24]
  459698:	cbz	x8, 459738 <_obstack_memory_used@@Base+0x12be8>
  45969c:	str	w0, [x8]
  4596a0:	mov	w0, wzr
  4596a4:	b	459738 <_obstack_memory_used@@Base+0x12be8>
  4596a8:	ldur	w8, [x29, #-8]
  4596ac:	cbz	w8, 4596e0 <_obstack_memory_used@@Base+0x12b90>
  4596b0:	ldrsw	x8, [x19]
  4596b4:	ldr	x8, [x22, x8, lsl #3]
  4596b8:	ldrb	w8, [x8, #1]
  4596bc:	cmp	w8, #0x2d
  4596c0:	b.eq	4596e0 <_obstack_memory_used@@Base+0x12b90>  // b.none
  4596c4:	ldr	x8, [x19, #32]
  4596c8:	ldr	x0, [sp, #16]
  4596cc:	ldrb	w1, [x8]
  4596d0:	bl	4047a0 <strchr@plt>
  4596d4:	cbz	x0, 4596e0 <_obstack_memory_used@@Base+0x12b90>
  4596d8:	mov	w0, #0xffffffff            	// #-1
  4596dc:	b	459738 <_obstack_memory_used@@Base+0x12be8>
  4596e0:	ldur	w8, [x29, #-16]
  4596e4:	cbz	w8, 459720 <_obstack_memory_used@@Base+0x12bd0>
  4596e8:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4596ec:	ldr	x21, [x8, #96]
  4596f0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f4b0>
  4596f4:	add	x1, x1, #0x8e
  4596f8:	mov	w2, #0x5                   	// #5
  4596fc:	mov	x0, xzr
  459700:	bl	404900 <dcgettext@plt>
  459704:	ldr	x3, [x22]
  459708:	ldr	x5, [x19, #32]
  45970c:	mov	x2, x0
  459710:	mov	w1, #0x1                   	// #1
  459714:	mov	x0, x21
  459718:	mov	x4, x26
  45971c:	bl	404650 <__fprintf_chk@plt>
  459720:	ldr	w8, [x19]
  459724:	str	xzr, [x19, #32]
  459728:	str	wzr, [x19, #8]
  45972c:	add	w8, w8, #0x1
  459730:	str	w8, [x19]
  459734:	mov	w0, #0x3f                  	// #63
  459738:	ldp	x20, x19, [sp, #144]
  45973c:	ldp	x22, x21, [sp, #128]
  459740:	ldp	x24, x23, [sp, #112]
  459744:	ldp	x26, x25, [sp, #96]
  459748:	ldp	x28, x27, [sp, #80]
  45974c:	ldp	x29, x30, [sp, #64]
  459750:	add	sp, sp, #0xa0
  459754:	ret
  459758:	ldur	w8, [x29, #-16]
  45975c:	cbz	w8, 459798 <_obstack_memory_used@@Base+0x12c48>
  459760:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  459764:	ldr	x21, [x8, #96]
  459768:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f4b0>
  45976c:	add	x1, x1, #0xae
  459770:	mov	w2, #0x5                   	// #5
  459774:	mov	x0, xzr
  459778:	bl	404900 <dcgettext@plt>
  45977c:	ldr	x3, [x22]
  459780:	ldr	x5, [x20]
  459784:	mov	x2, x0
  459788:	mov	w1, #0x1                   	// #1
  45978c:	mov	x0, x21
  459790:	mov	x4, x26
  459794:	bl	404650 <__fprintf_chk@plt>
  459798:	ldr	w8, [x20, #24]
  45979c:	mov	w0, #0x3f                  	// #63
  4597a0:	str	w8, [x19, #8]
  4597a4:	b	459738 <_obstack_memory_used@@Base+0x12be8>
  4597a8:	mov	x0, x21
  4597ac:	bl	403fe0 <flockfile@plt>
  4597b0:	ldr	x21, [x20, #96]
  4597b4:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f4b0>
  4597b8:	add	x1, x1, #0x57
  4597bc:	mov	w2, #0x5                   	// #5
  4597c0:	mov	x0, xzr
  4597c4:	bl	404900 <dcgettext@plt>
  4597c8:	ldr	x3, [x22]
  4597cc:	ldr	x5, [x19, #32]
  4597d0:	mov	x2, x0
  4597d4:	mov	w1, #0x1                   	// #1
  4597d8:	mov	x0, x21
  4597dc:	mov	x4, x26
  4597e0:	bl	404650 <__fprintf_chk@plt>
  4597e4:	cbz	w28, 459830 <_obstack_memory_used@@Base+0x12ce0>
  4597e8:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x1f4b0>
  4597ec:	mov	w22, w28
  4597f0:	add	x21, x21, #0x86
  4597f4:	mov	x24, x25
  4597f8:	b	45980c <_obstack_memory_used@@Base+0x12cbc>
  4597fc:	add	x24, x24, #0x1
  459800:	subs	x22, x22, #0x1
  459804:	add	x23, x23, #0x20
  459808:	b.eq	459830 <_obstack_memory_used@@Base+0x12ce0>  // b.none
  45980c:	ldrb	w8, [x24]
  459810:	cbz	w8, 4597fc <_obstack_memory_used@@Base+0x12cac>
  459814:	ldr	x0, [x20, #96]
  459818:	ldr	x4, [x23]
  45981c:	mov	w1, #0x1                   	// #1
  459820:	mov	x2, x21
  459824:	mov	x3, x26
  459828:	bl	404650 <__fprintf_chk@plt>
  45982c:	b	4597fc <_obstack_memory_used@@Base+0x12cac>
  459830:	ldr	x0, [x20, #96]
  459834:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b4b0>
  459838:	add	x2, x2, #0x783
  45983c:	mov	w1, #0x1                   	// #1
  459840:	bl	404650 <__fprintf_chk@plt>
  459844:	ldr	x0, [x20, #96]
  459848:	bl	404270 <funlockfile@plt>
  45984c:	cbnz	w27, 459638 <_obstack_memory_used@@Base+0x12ae8>
  459850:	b	459640 <_obstack_memory_used@@Base+0x12af0>
  459854:	ldur	w8, [x29, #-16]
  459858:	cbz	w8, 459894 <_obstack_memory_used@@Base+0x12d44>
  45985c:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  459860:	ldr	x21, [x8, #96]
  459864:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f4b0>
  459868:	add	x1, x1, #0xdb
  45986c:	mov	w2, #0x5                   	// #5
  459870:	mov	x0, xzr
  459874:	bl	404900 <dcgettext@plt>
  459878:	ldr	x3, [x22]
  45987c:	ldr	x5, [x20]
  459880:	mov	x2, x0
  459884:	mov	w1, #0x1                   	// #1
  459888:	mov	x0, x21
  45988c:	mov	x4, x26
  459890:	bl	404650 <__fprintf_chk@plt>
  459894:	ldr	w8, [x20, #24]
  459898:	mov	w9, #0x3f                  	// #63
  45989c:	str	w8, [x19, #8]
  4598a0:	ldr	x8, [sp, #16]
  4598a4:	ldrb	w8, [x8]
  4598a8:	cmp	w8, #0x3a
  4598ac:	csel	w0, w8, w9, eq  // eq = none
  4598b0:	b	459738 <_obstack_memory_used@@Base+0x12be8>
  4598b4:	stp	x29, x30, [sp, #-32]!
  4598b8:	stp	x20, x19, [sp, #16]
  4598bc:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4598c0:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4598c4:	ldr	w9, [x20, #76]
  4598c8:	ldr	w8, [x8, #80]
  4598cc:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  4598d0:	add	x19, x19, #0xb10
  4598d4:	mov	w7, w6
  4598d8:	mov	x6, x19
  4598dc:	mov	x29, sp
  4598e0:	stp	w9, w8, [x19]
  4598e4:	bl	458ad8 <_obstack_memory_used@@Base+0x11f88>
  4598e8:	ldr	w8, [x19]
  4598ec:	ldr	x9, [x19, #16]
  4598f0:	ldr	w11, [x19, #8]
  4598f4:	adrp	x10, 47b000 <argp_program_version@@Base+0x8>
  4598f8:	str	w8, [x20, #76]
  4598fc:	ldp	x20, x19, [sp, #16]
  459900:	adrp	x12, 47a000 <_obstack_memory_used@@Base+0x334b0>
  459904:	str	x9, [x10, #16]
  459908:	str	w11, [x12, #84]
  45990c:	ldp	x29, x30, [sp], #32
  459910:	ret
  459914:	stp	x29, x30, [sp, #-32]!
  459918:	stp	x20, x19, [sp, #16]
  45991c:	adrp	x20, 47a000 <_obstack_memory_used@@Base+0x334b0>
  459920:	adrp	x8, 47a000 <_obstack_memory_used@@Base+0x334b0>
  459924:	ldr	w9, [x20, #76]
  459928:	ldr	w8, [x8, #80]
  45992c:	adrp	x19, 47a000 <_obstack_memory_used@@Base+0x334b0>
  459930:	add	x19, x19, #0xb10
  459934:	mov	w7, #0x1                   	// #1
  459938:	mov	x3, xzr
  45993c:	mov	x4, xzr
  459940:	mov	w5, wzr
  459944:	mov	x6, x19
  459948:	mov	x29, sp
  45994c:	stp	w9, w8, [x19]
  459950:	bl	458ad8 <_obstack_memory_used@@Base+0x11f88>
  459954:	ldr	w8, [x19]
  459958:	ldr	x9, [x19, #16]
  45995c:	ldr	w11, [x19, #8]
  459960:	adrp	x10, 47b000 <argp_program_version@@Base+0x8>
  459964:	str	w8, [x20, #76]
  459968:	ldp	x20, x19, [sp, #16]
  45996c:	adrp	x12, 47a000 <_obstack_memory_used@@Base+0x334b0>
  459970:	str	x9, [x10, #16]
  459974:	str	w11, [x12, #84]
  459978:	ldp	x29, x30, [sp], #32
  45997c:	ret
  459980:	mov	w2, #0x3                   	// #3
  459984:	mov	w1, wzr
  459988:	b	446494 <argp_parse@@Base+0xebe8>
  45998c:	nop
  459990:	stp	x29, x30, [sp, #-48]!
  459994:	mov	x29, sp
  459998:	str	q0, [sp, #16]
  45999c:	str	q1, [sp, #32]
  4599a0:	ldp	x2, x0, [sp, #16]
  4599a4:	ldp	x5, x3, [sp, #32]
  4599a8:	mrs	x10, fpcr
  4599ac:	lsr	x1, x0, #63
  4599b0:	ubfx	x6, x0, #0, #48
  4599b4:	and	w13, w1, #0xff
  4599b8:	mov	x14, x1
  4599bc:	ubfx	x7, x0, #48, #15
  4599c0:	cbz	w7, 459de0 <_obstack_memory_used@@Base+0x13290>
  4599c4:	mov	w4, #0x7fff                	// #32767
  4599c8:	cmp	w7, w4
  4599cc:	b.eq	459e28 <_obstack_memory_used@@Base+0x132d8>  // b.none
  4599d0:	and	x7, x7, #0xffff
  4599d4:	extr	x6, x6, x2, #61
  4599d8:	mov	x15, #0xffffffffffffc001    	// #-16383
  4599dc:	orr	x4, x6, #0x8000000000000
  4599e0:	add	x7, x7, x15
  4599e4:	lsl	x2, x2, #3
  4599e8:	mov	x1, #0x0                   	// #0
  4599ec:	mov	x16, #0x0                   	// #0
  4599f0:	mov	w0, #0x0                   	// #0
  4599f4:	lsr	x8, x3, #63
  4599f8:	ubfx	x6, x3, #0, #48
  4599fc:	and	w15, w8, #0xff
  459a00:	ubfx	x9, x3, #48, #15
  459a04:	cbz	w9, 459d9c <_obstack_memory_used@@Base+0x1324c>
  459a08:	mov	w11, #0x7fff                	// #32767
  459a0c:	cmp	w9, w11
  459a10:	b.eq	459ad4 <_obstack_memory_used@@Base+0x12f84>  // b.none
  459a14:	and	x9, x9, #0xffff
  459a18:	extr	x6, x6, x5, #61
  459a1c:	mov	x12, #0xffffffffffffc001    	// #-16383
  459a20:	orr	x6, x6, #0x8000000000000
  459a24:	add	x9, x9, x12
  459a28:	lsl	x5, x5, #3
  459a2c:	sub	x7, x7, x9
  459a30:	mov	x9, #0x0                   	// #0
  459a34:	eor	w11, w13, w15
  459a38:	cmp	x1, #0x9
  459a3c:	and	x3, x11, #0xff
  459a40:	mov	x12, x3
  459a44:	b.gt	459d74 <_obstack_memory_used@@Base+0x13224>
  459a48:	cmp	x1, #0x7
  459a4c:	b.gt	459f34 <_obstack_memory_used@@Base+0x133e4>
  459a50:	cmp	x1, #0x3
  459a54:	b.eq	459a70 <_obstack_memory_used@@Base+0x12f20>  // b.none
  459a58:	b.le	459d44 <_obstack_memory_used@@Base+0x131f4>
  459a5c:	cmp	x1, #0x5
  459a60:	b.eq	459d84 <_obstack_memory_used@@Base+0x13234>  // b.none
  459a64:	b.le	459b68 <_obstack_memory_used@@Base+0x13018>
  459a68:	cmp	x1, #0x6
  459a6c:	b.eq	459b38 <_obstack_memory_used@@Base+0x12fe8>  // b.none
  459a70:	cmp	x9, #0x1
  459a74:	b.eq	459eb8 <_obstack_memory_used@@Base+0x13368>  // b.none
  459a78:	cbz	x9, 459a8c <_obstack_memory_used@@Base+0x12f3c>
  459a7c:	cmp	x9, #0x2
  459a80:	b.eq	45a0bc <_obstack_memory_used@@Base+0x1356c>  // b.none
  459a84:	cmp	x9, #0x3
  459a88:	b.eq	45a0a4 <_obstack_memory_used@@Base+0x13554>  // b.none
  459a8c:	mov	x1, #0x3fff                	// #16383
  459a90:	mov	x12, x8
  459a94:	add	x3, x7, x1
  459a98:	cmp	x3, #0x0
  459a9c:	b.le	459f78 <_obstack_memory_used@@Base+0x13428>
  459aa0:	tst	x5, #0x7
  459aa4:	b.ne	459ee8 <_obstack_memory_used@@Base+0x13398>  // b.any
  459aa8:	and	w11, w12, #0x1
  459aac:	tbz	x6, #52, 459ab8 <_obstack_memory_used@@Base+0x12f68>
  459ab0:	and	x6, x6, #0xffefffffffffffff
  459ab4:	add	x3, x7, #0x4, lsl #12
  459ab8:	mov	x1, #0x7ffe                	// #32766
  459abc:	cmp	x3, x1
  459ac0:	b.gt	45a060 <_obstack_memory_used@@Base+0x13510>
  459ac4:	and	w1, w3, #0x7fff
  459ac8:	extr	x2, x6, x5, #3
  459acc:	ubfx	x6, x6, #3, #48
  459ad0:	b	459b44 <_obstack_memory_used@@Base+0x12ff4>
  459ad4:	mov	x9, #0xffffffffffff8001    	// #-32767
  459ad8:	orr	x3, x6, x5
  459adc:	add	x7, x7, x9
  459ae0:	cbz	x3, 459e5c <_obstack_memory_used@@Base+0x1330c>
  459ae4:	tst	x6, #0x800000000000
  459ae8:	orr	x1, x1, #0x3
  459aec:	csinc	w0, w0, wzr, ne  // ne = any
  459af0:	mov	x9, #0x3                   	// #3
  459af4:	eor	w11, w13, w15
  459af8:	cmp	x1, #0x9
  459afc:	and	x3, x11, #0xff
  459b00:	mov	x12, x3
  459b04:	b.le	459a48 <_obstack_memory_used@@Base+0x12ef8>
  459b08:	cmp	x1, #0xf
  459b0c:	b.ne	459d74 <_obstack_memory_used@@Base+0x13224>  // b.any
  459b10:	tbz	x4, #47, 459f20 <_obstack_memory_used@@Base+0x133d0>
  459b14:	tbnz	x6, #47, 459f20 <_obstack_memory_used@@Base+0x133d0>
  459b18:	orr	x6, x6, #0x800000000000
  459b1c:	mov	w11, w15
  459b20:	and	x6, x6, #0xffffffffffff
  459b24:	mov	x2, x5
  459b28:	mov	w1, #0x7fff                	// #32767
  459b2c:	b	459b44 <_obstack_memory_used@@Base+0x12ff4>
  459b30:	cmp	x1, #0x2
  459b34:	b.ne	459b70 <_obstack_memory_used@@Base+0x13020>  // b.any
  459b38:	mov	w1, #0x0                   	// #0
  459b3c:	mov	x6, #0x0                   	// #0
  459b40:	mov	x2, #0x0                   	// #0
  459b44:	mov	x5, #0x0                   	// #0
  459b48:	orr	w1, w1, w11, lsl #15
  459b4c:	bfxil	x5, x6, #0, #48
  459b50:	fmov	d0, x2
  459b54:	bfi	x5, x1, #48, #16
  459b58:	fmov	v0.d[1], x5
  459b5c:	cbnz	w0, 459d64 <_obstack_memory_used@@Base+0x13214>
  459b60:	ldp	x29, x30, [sp], #48
  459b64:	ret
  459b68:	cmp	x1, #0x4
  459b6c:	b.eq	459b38 <_obstack_memory_used@@Base+0x12fe8>  // b.none
  459b70:	cmp	x4, x6
  459b74:	b.ls	459ecc <_obstack_memory_used@@Base+0x1337c>  // b.plast
  459b78:	lsr	x3, x4, #1
  459b7c:	extr	x8, x4, x2, #1
  459b80:	lsl	x2, x2, #63
  459b84:	ubfx	x14, x6, #20, #32
  459b88:	extr	x9, x6, x5, #52
  459b8c:	lsl	x13, x5, #12
  459b90:	and	x15, x9, #0xffffffff
  459b94:	udiv	x5, x3, x14
  459b98:	msub	x3, x5, x14, x3
  459b9c:	mul	x1, x15, x5
  459ba0:	extr	x3, x3, x8, #32
  459ba4:	cmp	x1, x3
  459ba8:	b.ls	459bbc <_obstack_memory_used@@Base+0x1306c>  // b.plast
  459bac:	adds	x3, x9, x3
  459bb0:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
  459bb4:	b.hi	45a19c <_obstack_memory_used@@Base+0x1364c>  // b.pmore
  459bb8:	sub	x5, x5, #0x1
  459bbc:	sub	x3, x3, x1
  459bc0:	mov	x4, x8
  459bc4:	udiv	x1, x3, x14
  459bc8:	msub	x3, x1, x14, x3
  459bcc:	mul	x6, x15, x1
  459bd0:	bfi	x4, x3, #32, #32
  459bd4:	cmp	x6, x4
  459bd8:	b.ls	459bec <_obstack_memory_used@@Base+0x1309c>  // b.plast
  459bdc:	adds	x4, x9, x4
  459be0:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
  459be4:	b.hi	45a190 <_obstack_memory_used@@Base+0x13640>  // b.pmore
  459be8:	sub	x1, x1, #0x1
  459bec:	orr	x8, x1, x5, lsl #32
  459bf0:	and	x17, x13, #0xffffffff
  459bf4:	and	x1, x8, #0xffffffff
  459bf8:	lsr	x16, x13, #32
  459bfc:	lsr	x5, x8, #32
  459c00:	sub	x4, x4, x6
  459c04:	mov	x18, #0x100000000           	// #4294967296
  459c08:	mul	x3, x1, x17
  459c0c:	mul	x30, x5, x17
  459c10:	madd	x6, x16, x1, x30
  459c14:	and	x1, x3, #0xffffffff
  459c18:	mul	x5, x5, x16
  459c1c:	add	x3, x6, x3, lsr #32
  459c20:	add	x6, x5, x18
  459c24:	cmp	x30, x3
  459c28:	csel	x5, x6, x5, hi  // hi = pmore
  459c2c:	add	x1, x1, x3, lsl #32
  459c30:	add	x5, x5, x3, lsr #32
  459c34:	cmp	x4, x5
  459c38:	b.cc	459f44 <_obstack_memory_used@@Base+0x133f4>  // b.lo, b.ul, b.last
  459c3c:	ccmp	x2, x1, #0x2, eq  // eq = none
  459c40:	mov	x6, x8
  459c44:	b.cc	459f44 <_obstack_memory_used@@Base+0x133f4>  // b.lo, b.ul, b.last
  459c48:	subs	x8, x2, x1
  459c4c:	mov	x3, #0x3fff                	// #16383
  459c50:	cmp	x2, x1
  459c54:	add	x3, x7, x3
  459c58:	sbc	x4, x4, x5
  459c5c:	cmp	x9, x4
  459c60:	b.eq	45a1a8 <_obstack_memory_used@@Base+0x13658>  // b.none
  459c64:	udiv	x5, x4, x14
  459c68:	msub	x4, x5, x14, x4
  459c6c:	mul	x2, x15, x5
  459c70:	extr	x1, x4, x8, #32
  459c74:	cmp	x2, x1
  459c78:	b.ls	459c8c <_obstack_memory_used@@Base+0x1313c>  // b.plast
  459c7c:	adds	x1, x9, x1
  459c80:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
  459c84:	b.hi	45a260 <_obstack_memory_used@@Base+0x13710>  // b.pmore
  459c88:	sub	x5, x5, #0x1
  459c8c:	sub	x1, x1, x2
  459c90:	udiv	x2, x1, x14
  459c94:	msub	x1, x2, x14, x1
  459c98:	mul	x15, x15, x2
  459c9c:	bfi	x8, x1, #32, #32
  459ca0:	mov	x1, x8
  459ca4:	cmp	x15, x8
  459ca8:	b.ls	459cbc <_obstack_memory_used@@Base+0x1316c>  // b.plast
  459cac:	adds	x1, x9, x8
  459cb0:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
  459cb4:	b.hi	45a26c <_obstack_memory_used@@Base+0x1371c>  // b.pmore
  459cb8:	sub	x2, x2, #0x1
  459cbc:	orr	x5, x2, x5, lsl #32
  459cc0:	mov	x11, #0x100000000           	// #4294967296
  459cc4:	and	x4, x5, #0xffffffff
  459cc8:	sub	x1, x1, x15
  459ccc:	lsr	x14, x5, #32
  459cd0:	mul	x2, x17, x4
  459cd4:	mul	x17, x14, x17
  459cd8:	madd	x4, x16, x4, x17
  459cdc:	and	x8, x2, #0xffffffff
  459ce0:	mul	x16, x16, x14
  459ce4:	add	x2, x4, x2, lsr #32
  459ce8:	add	x4, x16, x11
  459cec:	cmp	x17, x2
  459cf0:	csel	x16, x4, x16, hi  // hi = pmore
  459cf4:	add	x4, x8, x2, lsl #32
  459cf8:	add	x16, x16, x2, lsr #32
  459cfc:	cmp	x1, x16
  459d00:	b.cs	45a0e0 <_obstack_memory_used@@Base+0x13590>  // b.hs, b.nlast
  459d04:	adds	x2, x9, x1
  459d08:	sub	x8, x5, #0x1
  459d0c:	mov	x1, x2
  459d10:	b.cs	459d24 <_obstack_memory_used@@Base+0x131d4>  // b.hs, b.nlast
  459d14:	cmp	x2, x16
  459d18:	b.cc	45a1e0 <_obstack_memory_used@@Base+0x13690>  // b.lo, b.ul, b.last
  459d1c:	ccmp	x13, x4, #0x2, eq  // eq = none
  459d20:	b.cc	45a1e0 <_obstack_memory_used@@Base+0x13690>  // b.lo, b.ul, b.last
  459d24:	cmp	x13, x4
  459d28:	mov	x5, x8
  459d2c:	cset	w2, ne  // ne = any
  459d30:	cmp	w2, #0x0
  459d34:	orr	x2, x5, #0x1
  459d38:	ccmp	x1, x16, #0x0, eq  // eq = none
  459d3c:	csel	x5, x2, x5, ne  // ne = any
  459d40:	b	459a98 <_obstack_memory_used@@Base+0x12f48>
  459d44:	cmp	x1, #0x1
  459d48:	b.ne	459b30 <_obstack_memory_used@@Base+0x12fe0>  // b.any
  459d4c:	mov	x4, #0x0                   	// #0
  459d50:	fmov	d0, x4
  459d54:	lsl	x3, x3, #63
  459d58:	orr	w0, w0, #0x2
  459d5c:	orr	x5, x3, #0x7fff000000000000
  459d60:	fmov	v0.d[1], x5
  459d64:	str	q0, [sp, #16]
  459d68:	bl	45af08 <_obstack_memory_used@@Base+0x143b8>
  459d6c:	ldr	q0, [sp, #16]
  459d70:	b	459b60 <_obstack_memory_used@@Base+0x13010>
  459d74:	cmp	x1, #0xb
  459d78:	b.gt	459e48 <_obstack_memory_used@@Base+0x132f8>
  459d7c:	cmp	x1, #0xa
  459d80:	b.ne	459a70 <_obstack_memory_used@@Base+0x12f20>  // b.any
  459d84:	mov	w11, #0x0                   	// #0
  459d88:	mov	x6, #0xffffffffffff        	// #281474976710655
  459d8c:	mov	x2, #0xffffffffffffffff    	// #-1
  459d90:	mov	w0, #0x1                   	// #1
  459d94:	mov	w1, #0x7fff                	// #32767
  459d98:	b	459b44 <_obstack_memory_used@@Base+0x12ff4>
  459d9c:	orr	x3, x6, x5
  459da0:	cbz	x3, 459e88 <_obstack_memory_used@@Base+0x13338>
  459da4:	cbz	x6, 45a03c <_obstack_memory_used@@Base+0x134ec>
  459da8:	clz	x3, x6
  459dac:	sub	x9, x3, #0xf
  459db0:	add	w12, w9, #0x3
  459db4:	mov	w11, #0x3d                  	// #61
  459db8:	sub	w9, w11, w9
  459dbc:	lsl	x6, x6, x12
  459dc0:	lsr	x9, x5, x9
  459dc4:	orr	x6, x9, x6
  459dc8:	lsl	x5, x5, x12
  459dcc:	add	x7, x3, x7
  459dd0:	mov	x11, #0x3fef                	// #16367
  459dd4:	mov	x9, #0x0                   	// #0
  459dd8:	add	x7, x7, x11
  459ddc:	b	459a34 <_obstack_memory_used@@Base+0x12ee4>
  459de0:	orr	x4, x6, x2
  459de4:	cbz	x4, 459e70 <_obstack_memory_used@@Base+0x13320>
  459de8:	cbz	x6, 45a018 <_obstack_memory_used@@Base+0x134c8>
  459dec:	clz	x0, x6
  459df0:	sub	x4, x0, #0xf
  459df4:	add	w7, w4, #0x3
  459df8:	mov	w1, #0x3d                  	// #61
  459dfc:	sub	w4, w1, w4
  459e00:	lsl	x6, x6, x7
  459e04:	lsr	x4, x2, x4
  459e08:	orr	x4, x4, x6
  459e0c:	lsl	x2, x2, x7
  459e10:	mov	x7, #0xffffffffffffc011    	// #-16367
  459e14:	mov	x1, #0x0                   	// #0
  459e18:	sub	x7, x7, x0
  459e1c:	mov	x16, #0x0                   	// #0
  459e20:	mov	w0, #0x0                   	// #0
  459e24:	b	4599f4 <_obstack_memory_used@@Base+0x12ea4>
  459e28:	orr	x4, x6, x2
  459e2c:	cbnz	x4, 459e9c <_obstack_memory_used@@Base+0x1334c>
  459e30:	mov	x2, #0x0                   	// #0
  459e34:	mov	x1, #0x8                   	// #8
  459e38:	mov	x7, #0x7fff                	// #32767
  459e3c:	mov	x16, #0x2                   	// #2
  459e40:	mov	w0, #0x0                   	// #0
  459e44:	b	4599f4 <_obstack_memory_used@@Base+0x12ea4>
  459e48:	mov	x6, x4
  459e4c:	mov	x5, x2
  459e50:	mov	x8, x14
  459e54:	mov	x9, x16
  459e58:	b	459a70 <_obstack_memory_used@@Base+0x12f20>
  459e5c:	orr	x1, x1, #0x2
  459e60:	mov	x6, #0x0                   	// #0
  459e64:	mov	x5, #0x0                   	// #0
  459e68:	mov	x9, #0x2                   	// #2
  459e6c:	b	459af4 <_obstack_memory_used@@Base+0x12fa4>
  459e70:	mov	x2, #0x0                   	// #0
  459e74:	mov	x1, #0x4                   	// #4
  459e78:	mov	x7, #0x0                   	// #0
  459e7c:	mov	x16, #0x1                   	// #1
  459e80:	mov	w0, #0x0                   	// #0
  459e84:	b	4599f4 <_obstack_memory_used@@Base+0x12ea4>
  459e88:	orr	x1, x1, #0x1
  459e8c:	mov	x6, #0x0                   	// #0
  459e90:	mov	x5, #0x0                   	// #0
  459e94:	mov	x9, #0x1                   	// #1
  459e98:	b	459a34 <_obstack_memory_used@@Base+0x12ee4>
  459e9c:	lsr	x0, x6, #47
  459ea0:	mov	x4, x6
  459ea4:	eor	w0, w0, #0x1
  459ea8:	mov	x1, #0xc                   	// #12
  459eac:	mov	x7, #0x7fff                	// #32767
  459eb0:	mov	x16, #0x3                   	// #3
  459eb4:	b	4599f4 <_obstack_memory_used@@Base+0x12ea4>
  459eb8:	mov	w11, w8
  459ebc:	mov	w1, #0x0                   	// #0
  459ec0:	mov	x6, #0x0                   	// #0
  459ec4:	mov	x2, #0x0                   	// #0
  459ec8:	b	459b44 <_obstack_memory_used@@Base+0x12ff4>
  459ecc:	ccmp	x5, x2, #0x2, eq  // eq = none
  459ed0:	b.ls	459b78 <_obstack_memory_used@@Base+0x13028>  // b.plast
  459ed4:	mov	x8, x2
  459ed8:	sub	x7, x7, #0x1
  459edc:	mov	x3, x4
  459ee0:	mov	x2, #0x0                   	// #0
  459ee4:	b	459b84 <_obstack_memory_used@@Base+0x13034>
  459ee8:	and	x1, x10, #0xc00000
  459eec:	orr	w0, w0, #0x10
  459ef0:	cmp	x1, #0x400, lsl #12
  459ef4:	b.eq	45a248 <_obstack_memory_used@@Base+0x136f8>  // b.none
  459ef8:	cmp	x1, #0x800, lsl #12
  459efc:	b.eq	45a15c <_obstack_memory_used@@Base+0x1360c>  // b.none
  459f00:	cbnz	x1, 459aa8 <_obstack_memory_used@@Base+0x12f58>
  459f04:	and	x1, x5, #0xf
  459f08:	and	w11, w12, #0x1
  459f0c:	cmp	x1, #0x4
  459f10:	b.eq	459aac <_obstack_memory_used@@Base+0x12f5c>  // b.none
  459f14:	adds	x5, x5, #0x4
  459f18:	cinc	x6, x6, cs  // cs = hs, nlast
  459f1c:	b	459aac <_obstack_memory_used@@Base+0x12f5c>
  459f20:	orr	x6, x4, #0x800000000000
  459f24:	mov	w11, w13
  459f28:	and	x6, x6, #0xffffffffffff
  459f2c:	mov	w1, #0x7fff                	// #32767
  459f30:	b	459b44 <_obstack_memory_used@@Base+0x12ff4>
  459f34:	mov	w1, #0x7fff                	// #32767
  459f38:	mov	x6, #0x0                   	// #0
  459f3c:	mov	x2, #0x0                   	// #0
  459f40:	b	459b44 <_obstack_memory_used@@Base+0x12ff4>
  459f44:	adds	x3, x2, x13
  459f48:	sub	x6, x8, #0x1
  459f4c:	adc	x4, x4, x9
  459f50:	cset	x18, cs  // cs = hs, nlast
  459f54:	mov	x2, x3
  459f58:	cmp	x9, x4
  459f5c:	b.cs	45a0d0 <_obstack_memory_used@@Base+0x13580>  // b.hs, b.nlast
  459f60:	cmp	x5, x4
  459f64:	b.ls	45a0f8 <_obstack_memory_used@@Base+0x135a8>  // b.plast
  459f68:	adds	x2, x13, x3
  459f6c:	sub	x6, x8, #0x2
  459f70:	adc	x4, x4, x9
  459f74:	b	459c48 <_obstack_memory_used@@Base+0x130f8>
  459f78:	mov	x1, #0x1                   	// #1
  459f7c:	sub	x1, x1, x3
  459f80:	cmp	x1, #0x74
  459f84:	and	w11, w12, #0x1
  459f88:	b.le	459fa4 <_obstack_memory_used@@Base+0x13454>
  459f8c:	orr	x2, x5, x6
  459f90:	cbnz	x2, 45a1c4 <_obstack_memory_used@@Base+0x13674>
  459f94:	orr	w0, w0, #0x8
  459f98:	mov	w1, #0x0                   	// #0
  459f9c:	mov	x6, #0x0                   	// #0
  459fa0:	b	45a088 <_obstack_memory_used@@Base+0x13538>
  459fa4:	cmp	x1, #0x3f
  459fa8:	b.le	45a104 <_obstack_memory_used@@Base+0x135b4>
  459fac:	mov	w2, #0x80                  	// #128
  459fb0:	sub	w2, w2, w1
  459fb4:	cmp	x1, #0x40
  459fb8:	sub	w1, w1, #0x40
  459fbc:	lsl	x2, x6, x2
  459fc0:	orr	x2, x5, x2
  459fc4:	csel	x5, x2, x5, ne  // ne = any
  459fc8:	lsr	x6, x6, x1
  459fcc:	cmp	x5, #0x0
  459fd0:	cset	x2, ne  // ne = any
  459fd4:	orr	x2, x2, x6
  459fd8:	ands	x6, x2, #0x7
  459fdc:	b.eq	45a138 <_obstack_memory_used@@Base+0x135e8>  // b.none
  459fe0:	mov	x6, #0x0                   	// #0
  459fe4:	and	x10, x10, #0xc00000
  459fe8:	orr	w0, w0, #0x10
  459fec:	cmp	x10, #0x400, lsl #12
  459ff0:	b.eq	45a284 <_obstack_memory_used@@Base+0x13734>  // b.none
  459ff4:	cmp	x10, #0x800, lsl #12
  459ff8:	b.eq	45a298 <_obstack_memory_used@@Base+0x13748>  // b.none
  459ffc:	cbz	x10, 45a200 <_obstack_memory_used@@Base+0x136b0>
  45a000:	tbnz	x6, #51, 45a218 <_obstack_memory_used@@Base+0x136c8>
  45a004:	orr	w0, w0, #0x8
  45a008:	extr	x2, x6, x2, #3
  45a00c:	mov	w1, #0x0                   	// #0
  45a010:	ubfx	x6, x6, #3, #48
  45a014:	b	45a088 <_obstack_memory_used@@Base+0x13538>
  45a018:	clz	x7, x2
  45a01c:	add	x4, x7, #0x31
  45a020:	add	x0, x7, #0x40
  45a024:	cmp	x4, #0x3c
  45a028:	b.le	459df4 <_obstack_memory_used@@Base+0x132a4>
  45a02c:	sub	w4, w4, #0x3d
  45a030:	lsl	x4, x2, x4
  45a034:	mov	x2, #0x0                   	// #0
  45a038:	b	459e10 <_obstack_memory_used@@Base+0x132c0>
  45a03c:	clz	x3, x5
  45a040:	add	x9, x3, #0x31
  45a044:	add	x3, x3, #0x40
  45a048:	cmp	x9, #0x3c
  45a04c:	b.le	459db0 <_obstack_memory_used@@Base+0x13260>
  45a050:	sub	w6, w9, #0x3d
  45a054:	lsl	x6, x5, x6
  45a058:	mov	x5, #0x0                   	// #0
  45a05c:	b	459dcc <_obstack_memory_used@@Base+0x1327c>
  45a060:	and	x2, x10, #0xc00000
  45a064:	cmp	x2, #0x400, lsl #12
  45a068:	b.eq	45a22c <_obstack_memory_used@@Base+0x136dc>  // b.none
  45a06c:	cmp	x2, #0x800, lsl #12
  45a070:	b.eq	45a174 <_obstack_memory_used@@Base+0x13624>  // b.none
  45a074:	cbz	x2, 45a150 <_obstack_memory_used@@Base+0x13600>
  45a078:	mov	x6, #0xffffffffffff        	// #281474976710655
  45a07c:	mov	x2, #0xffffffffffffffff    	// #-1
  45a080:	mov	w3, #0x14                  	// #20
  45a084:	orr	w0, w0, w3
  45a088:	mov	x5, #0x0                   	// #0
  45a08c:	orr	w1, w1, w11, lsl #15
  45a090:	bfxil	x5, x6, #0, #48
  45a094:	fmov	d0, x2
  45a098:	bfi	x5, x1, #48, #16
  45a09c:	fmov	v0.d[1], x5
  45a0a0:	b	459d64 <_obstack_memory_used@@Base+0x13214>
  45a0a4:	orr	x6, x6, #0x800000000000
  45a0a8:	mov	w11, w8
  45a0ac:	and	x6, x6, #0xffffffffffff
  45a0b0:	mov	x2, x5
  45a0b4:	mov	w1, #0x7fff                	// #32767
  45a0b8:	b	459b44 <_obstack_memory_used@@Base+0x12ff4>
  45a0bc:	mov	w11, w8
  45a0c0:	mov	w1, #0x7fff                	// #32767
  45a0c4:	mov	x6, #0x0                   	// #0
  45a0c8:	mov	x2, #0x0                   	// #0
  45a0cc:	b	459b44 <_obstack_memory_used@@Base+0x12ff4>
  45a0d0:	cmp	x18, #0x0
  45a0d4:	ccmp	x9, x4, #0x0, eq  // eq = none
  45a0d8:	b.ne	459c48 <_obstack_memory_used@@Base+0x130f8>  // b.any
  45a0dc:	b	459f60 <_obstack_memory_used@@Base+0x13410>
  45a0e0:	cmp	x4, #0x0
  45a0e4:	cset	w2, ne  // ne = any
  45a0e8:	cmp	w2, #0x0
  45a0ec:	ccmp	x1, x16, #0x0, ne  // ne = any
  45a0f0:	b.ne	459d30 <_obstack_memory_used@@Base+0x131e0>  // b.any
  45a0f4:	b	459d04 <_obstack_memory_used@@Base+0x131b4>
  45a0f8:	ccmp	x1, x3, #0x0, eq  // eq = none
  45a0fc:	b.ls	459c48 <_obstack_memory_used@@Base+0x130f8>  // b.plast
  45a100:	b	459f68 <_obstack_memory_used@@Base+0x13418>
  45a104:	mov	w2, #0x40                  	// #64
  45a108:	sub	w2, w2, w1
  45a10c:	lsr	x4, x5, x1
  45a110:	lsl	x5, x5, x2
  45a114:	cmp	x5, #0x0
  45a118:	cset	x3, ne  // ne = any
  45a11c:	lsl	x2, x6, x2
  45a120:	orr	x2, x2, x4
  45a124:	lsr	x6, x6, x1
  45a128:	orr	x2, x2, x3
  45a12c:	tst	x2, #0x7
  45a130:	b.ne	459fe4 <_obstack_memory_used@@Base+0x13494>  // b.any
  45a134:	tbnz	x6, #51, 45a2a4 <_obstack_memory_used@@Base+0x13754>
  45a138:	mov	w1, #0x0                   	// #0
  45a13c:	extr	x2, x6, x2, #3
  45a140:	ubfx	x6, x6, #3, #48
  45a144:	tbz	w10, #11, 459b44 <_obstack_memory_used@@Base+0x12ff4>
  45a148:	orr	w0, w0, #0x8
  45a14c:	b	45a088 <_obstack_memory_used@@Base+0x13538>
  45a150:	mov	w1, #0x7fff                	// #32767
  45a154:	mov	x6, #0x0                   	// #0
  45a158:	b	45a080 <_obstack_memory_used@@Base+0x13530>
  45a15c:	mov	w11, #0x0                   	// #0
  45a160:	cbz	x12, 459aac <_obstack_memory_used@@Base+0x12f5c>
  45a164:	adds	x5, x5, #0x8
  45a168:	mov	w11, #0x1                   	// #1
  45a16c:	cinc	x6, x6, cs  // cs = hs, nlast
  45a170:	b	459aac <_obstack_memory_used@@Base+0x12f5c>
  45a174:	cmp	x12, #0x0
  45a178:	mov	w2, #0x7fff                	// #32767
  45a17c:	mov	x6, #0xffffffffffff        	// #281474976710655
  45a180:	csel	w1, w1, w2, eq  // eq = none
  45a184:	csel	x6, x6, xzr, eq  // eq = none
  45a188:	csetm	x2, eq  // eq = none
  45a18c:	b	45a080 <_obstack_memory_used@@Base+0x13530>
  45a190:	sub	x1, x1, #0x2
  45a194:	add	x4, x4, x9
  45a198:	b	459bec <_obstack_memory_used@@Base+0x1309c>
  45a19c:	sub	x5, x5, #0x2
  45a1a0:	add	x3, x3, x9
  45a1a4:	b	459bbc <_obstack_memory_used@@Base+0x1306c>
  45a1a8:	cmp	x3, #0x0
  45a1ac:	mov	x5, #0xffffffffffffffff    	// #-1
  45a1b0:	b.gt	459ee8 <_obstack_memory_used@@Base+0x13398>
  45a1b4:	mov	x1, #0x1                   	// #1
  45a1b8:	sub	x1, x1, x3
  45a1bc:	cmp	x1, #0x74
  45a1c0:	b.le	459fa4 <_obstack_memory_used@@Base+0x13454>
  45a1c4:	and	x10, x10, #0xc00000
  45a1c8:	orr	w0, w0, #0x10
  45a1cc:	cmp	x10, #0x400, lsl #12
  45a1d0:	b.eq	45a278 <_obstack_memory_used@@Base+0x13728>  // b.none
  45a1d4:	cmp	x10, #0x800, lsl #12
  45a1d8:	csel	x2, x12, xzr, eq  // eq = none
  45a1dc:	b	459f94 <_obstack_memory_used@@Base+0x13444>
  45a1e0:	lsl	x8, x13, #1
  45a1e4:	sub	x5, x5, #0x2
  45a1e8:	cmp	x13, x8
  45a1ec:	cinc	x1, x9, hi  // hi = pmore
  45a1f0:	cmp	x4, x8
  45a1f4:	add	x1, x2, x1
  45a1f8:	cset	w2, ne  // ne = any
  45a1fc:	b	459d30 <_obstack_memory_used@@Base+0x131e0>
  45a200:	and	x1, x2, #0xf
  45a204:	cmp	x1, #0x4
  45a208:	b.eq	45a214 <_obstack_memory_used@@Base+0x136c4>  // b.none
  45a20c:	adds	x2, x2, #0x4
  45a210:	cinc	x6, x6, cs  // cs = hs, nlast
  45a214:	tbz	x6, #51, 45a004 <_obstack_memory_used@@Base+0x134b4>
  45a218:	orr	w0, w0, #0x8
  45a21c:	mov	w1, #0x1                   	// #1
  45a220:	mov	x6, #0x0                   	// #0
  45a224:	mov	x2, #0x0                   	// #0
  45a228:	b	45a088 <_obstack_memory_used@@Base+0x13538>
  45a22c:	cmp	x12, #0x0
  45a230:	mov	w2, #0x7fff                	// #32767
  45a234:	mov	x6, #0xffffffffffff        	// #281474976710655
  45a238:	csel	w1, w1, w2, ne  // ne = any
  45a23c:	csel	x6, x6, xzr, ne  // ne = any
  45a240:	csetm	x2, ne  // ne = any
  45a244:	b	45a080 <_obstack_memory_used@@Base+0x13530>
  45a248:	mov	w11, #0x1                   	// #1
  45a24c:	cbnz	x12, 459aac <_obstack_memory_used@@Base+0x12f5c>
  45a250:	adds	x5, x5, #0x8
  45a254:	mov	w11, #0x0                   	// #0
  45a258:	cinc	x6, x6, cs  // cs = hs, nlast
  45a25c:	b	459aac <_obstack_memory_used@@Base+0x12f5c>
  45a260:	sub	x5, x5, #0x2
  45a264:	add	x1, x1, x9
  45a268:	b	459c8c <_obstack_memory_used@@Base+0x1313c>
  45a26c:	sub	x2, x2, #0x2
  45a270:	add	x1, x1, x9
  45a274:	b	459cbc <_obstack_memory_used@@Base+0x1316c>
  45a278:	mov	x2, #0x1                   	// #1
  45a27c:	sub	x2, x2, x12
  45a280:	b	459f94 <_obstack_memory_used@@Base+0x13444>
  45a284:	cbnz	x12, 45a214 <_obstack_memory_used@@Base+0x136c4>
  45a288:	adds	x2, x2, #0x8
  45a28c:	cinc	x6, x6, cs  // cs = hs, nlast
  45a290:	tbnz	x6, #51, 45a218 <_obstack_memory_used@@Base+0x136c8>
  45a294:	b	45a004 <_obstack_memory_used@@Base+0x134b4>
  45a298:	cbnz	x12, 45a288 <_obstack_memory_used@@Base+0x13738>
  45a29c:	tbnz	x6, #51, 45a218 <_obstack_memory_used@@Base+0x136c8>
  45a2a0:	b	45a004 <_obstack_memory_used@@Base+0x134b4>
  45a2a4:	orr	w0, w0, #0x10
  45a2a8:	b	45a218 <_obstack_memory_used@@Base+0x136c8>
  45a2ac:	nop
  45a2b0:	stp	x29, x30, [sp, #-48]!
  45a2b4:	mov	x29, sp
  45a2b8:	str	q0, [sp, #16]
  45a2bc:	str	q1, [sp, #32]
  45a2c0:	ldp	x6, x1, [sp, #16]
  45a2c4:	ldp	x7, x0, [sp, #32]
  45a2c8:	mrs	x2, fpcr
  45a2cc:	ubfx	x4, x1, #48, #15
  45a2d0:	lsr	x2, x1, #63
  45a2d4:	lsr	x3, x0, #63
  45a2d8:	ubfx	x9, x0, #0, #48
  45a2dc:	mov	x5, #0x7fff                	// #32767
  45a2e0:	mov	x10, x6
  45a2e4:	cmp	x4, x5
  45a2e8:	and	w2, w2, #0xff
  45a2ec:	ubfx	x1, x1, #0, #48
  45a2f0:	and	w3, w3, #0xff
  45a2f4:	ubfx	x0, x0, #48, #15
  45a2f8:	b.eq	45a32c <_obstack_memory_used@@Base+0x137dc>  // b.none
  45a2fc:	cmp	x0, x5
  45a300:	b.eq	45a318 <_obstack_memory_used@@Base+0x137c8>  // b.none
  45a304:	cmp	x4, x0
  45a308:	mov	w0, #0x1                   	// #1
  45a30c:	b.eq	45a344 <_obstack_memory_used@@Base+0x137f4>  // b.none
  45a310:	ldp	x29, x30, [sp], #48
  45a314:	ret
  45a318:	orr	x8, x9, x7
  45a31c:	cbnz	x8, 45a3a8 <_obstack_memory_used@@Base+0x13858>
  45a320:	mov	w0, #0x1                   	// #1
  45a324:	ldp	x29, x30, [sp], #48
  45a328:	ret
  45a32c:	orr	x5, x1, x6
  45a330:	cbnz	x5, 45a378 <_obstack_memory_used@@Base+0x13828>
  45a334:	cmp	x0, x4
  45a338:	b.ne	45a320 <_obstack_memory_used@@Base+0x137d0>  // b.any
  45a33c:	orr	x8, x9, x7
  45a340:	cbnz	x8, 45a3a8 <_obstack_memory_used@@Base+0x13858>
  45a344:	cmp	x1, x9
  45a348:	mov	w0, #0x1                   	// #1
  45a34c:	ccmp	x6, x7, #0x0, eq  // eq = none
  45a350:	b.ne	45a310 <_obstack_memory_used@@Base+0x137c0>  // b.any
  45a354:	cmp	w2, w3
  45a358:	mov	w0, #0x0                   	// #0
  45a35c:	b.eq	45a310 <_obstack_memory_used@@Base+0x137c0>  // b.none
  45a360:	mov	w0, #0x1                   	// #1
  45a364:	cbnz	x4, 45a310 <_obstack_memory_used@@Base+0x137c0>
  45a368:	orr	x1, x1, x10
  45a36c:	cmp	x1, #0x0
  45a370:	cset	w0, ne  // ne = any
  45a374:	b	45a310 <_obstack_memory_used@@Base+0x137c0>
  45a378:	tst	x1, #0x800000000000
  45a37c:	b.ne	45a394 <_obstack_memory_used@@Base+0x13844>  // b.any
  45a380:	mov	w0, #0x1                   	// #1
  45a384:	bl	45af08 <_obstack_memory_used@@Base+0x143b8>
  45a388:	mov	w0, #0x1                   	// #1
  45a38c:	ldp	x29, x30, [sp], #48
  45a390:	ret
  45a394:	cmp	x0, x4
  45a398:	mov	w0, #0x1                   	// #1
  45a39c:	b.ne	45a310 <_obstack_memory_used@@Base+0x137c0>  // b.any
  45a3a0:	orr	x8, x9, x7
  45a3a4:	cbz	x8, 45a310 <_obstack_memory_used@@Base+0x137c0>
  45a3a8:	tst	x9, #0x800000000000
  45a3ac:	b.eq	45a380 <_obstack_memory_used@@Base+0x13830>  // b.none
  45a3b0:	b	45a320 <_obstack_memory_used@@Base+0x137d0>
  45a3b4:	nop
  45a3b8:	stp	x29, x30, [sp, #-48]!
  45a3bc:	mov	x29, sp
  45a3c0:	str	q0, [sp, #16]
  45a3c4:	str	q1, [sp, #32]
  45a3c8:	ldp	x8, x1, [sp, #16]
  45a3cc:	ldp	x9, x0, [sp, #32]
  45a3d0:	mrs	x2, fpcr
  45a3d4:	ubfx	x4, x1, #48, #15
  45a3d8:	ubfx	x10, x1, #0, #48
  45a3dc:	lsr	x2, x1, #63
  45a3e0:	mov	x5, #0x7fff                	// #32767
  45a3e4:	mov	x6, x8
  45a3e8:	cmp	x4, x5
  45a3ec:	ubfx	x11, x0, #0, #48
  45a3f0:	ubfx	x7, x0, #48, #15
  45a3f4:	lsr	x1, x0, #63
  45a3f8:	mov	x3, x9
  45a3fc:	b.eq	45a434 <_obstack_memory_used@@Base+0x138e4>  // b.none
  45a400:	cmp	x7, x5
  45a404:	b.eq	45a444 <_obstack_memory_used@@Base+0x138f4>  // b.none
  45a408:	cbnz	x4, 45a470 <_obstack_memory_used@@Base+0x13920>
  45a40c:	orr	x6, x10, x8
  45a410:	cmp	x6, #0x0
  45a414:	cset	w0, eq  // eq = none
  45a418:	cbnz	x7, 45a45c <_obstack_memory_used@@Base+0x1390c>
  45a41c:	orr	x3, x11, x9
  45a420:	cbnz	x3, 45a45c <_obstack_memory_used@@Base+0x1390c>
  45a424:	mov	w0, #0x0                   	// #0
  45a428:	cbnz	x6, 45a484 <_obstack_memory_used@@Base+0x13934>
  45a42c:	ldp	x29, x30, [sp], #48
  45a430:	ret
  45a434:	orr	x0, x10, x8
  45a438:	cbnz	x0, 45a498 <_obstack_memory_used@@Base+0x13948>
  45a43c:	cmp	x7, x4
  45a440:	b.ne	45a470 <_obstack_memory_used@@Base+0x13920>  // b.any
  45a444:	orr	x3, x11, x3
  45a448:	cbnz	x3, 45a498 <_obstack_memory_used@@Base+0x13948>
  45a44c:	cbnz	x4, 45a47c <_obstack_memory_used@@Base+0x1392c>
  45a450:	orr	x6, x10, x6
  45a454:	cmp	x6, #0x0
  45a458:	cset	w0, eq  // eq = none
  45a45c:	cbz	w0, 45a47c <_obstack_memory_used@@Base+0x1392c>
  45a460:	cmp	x1, #0x0
  45a464:	csinv	w0, w0, wzr, ne  // ne = any
  45a468:	ldp	x29, x30, [sp], #48
  45a46c:	ret
  45a470:	cbnz	x7, 45a47c <_obstack_memory_used@@Base+0x1392c>
  45a474:	orr	x3, x11, x3
  45a478:	cbz	x3, 45a484 <_obstack_memory_used@@Base+0x13934>
  45a47c:	cmp	x2, x1
  45a480:	b.eq	45a4ac <_obstack_memory_used@@Base+0x1395c>  // b.none
  45a484:	cmp	x2, #0x0
  45a488:	mov	w0, #0xffffffff            	// #-1
  45a48c:	cneg	w0, w0, eq  // eq = none
  45a490:	ldp	x29, x30, [sp], #48
  45a494:	ret
  45a498:	mov	w0, #0x1                   	// #1
  45a49c:	bl	45af08 <_obstack_memory_used@@Base+0x143b8>
  45a4a0:	mov	w0, #0x2                   	// #2
  45a4a4:	ldp	x29, x30, [sp], #48
  45a4a8:	ret
  45a4ac:	cmp	x4, x7
  45a4b0:	b.gt	45a484 <_obstack_memory_used@@Base+0x13934>
  45a4b4:	b.lt	45a4e8 <_obstack_memory_used@@Base+0x13998>  // b.tstop
  45a4b8:	cmp	x10, x11
  45a4bc:	b.hi	45a484 <_obstack_memory_used@@Base+0x13934>  // b.pmore
  45a4c0:	cset	w0, eq  // eq = none
  45a4c4:	cmp	w0, #0x0
  45a4c8:	ccmp	x8, x9, #0x0, ne  // ne = any
  45a4cc:	b.hi	45a484 <_obstack_memory_used@@Base+0x13934>  // b.pmore
  45a4d0:	cmp	x10, x11
  45a4d4:	b.cc	45a4e8 <_obstack_memory_used@@Base+0x13998>  // b.lo, b.ul, b.last
  45a4d8:	cmp	w0, #0x0
  45a4dc:	mov	w0, #0x0                   	// #0
  45a4e0:	ccmp	x8, x9, #0x2, ne  // ne = any
  45a4e4:	b.cs	45a42c <_obstack_memory_used@@Base+0x138dc>  // b.hs, b.nlast
  45a4e8:	cmp	x2, #0x0
  45a4ec:	mov	w0, #0x1                   	// #1
  45a4f0:	cneg	w0, w0, eq  // eq = none
  45a4f4:	b	45a42c <_obstack_memory_used@@Base+0x138dc>
  45a4f8:	stp	x29, x30, [sp, #-80]!
  45a4fc:	mov	x29, sp
  45a500:	str	q0, [sp, #48]
  45a504:	str	q1, [sp, #64]
  45a508:	ldp	x1, x0, [sp, #48]
  45a50c:	ldp	x6, x2, [sp, #64]
  45a510:	mrs	x11, fpcr
  45a514:	lsr	x3, x0, #63
  45a518:	ubfx	x7, x0, #0, #48
  45a51c:	and	w12, w3, #0xff
  45a520:	mov	x14, x3
  45a524:	ubfx	x3, x0, #48, #15
  45a528:	cbz	w3, 45a8d0 <_obstack_memory_used@@Base+0x13d80>
  45a52c:	mov	w4, #0x7fff                	// #32767
  45a530:	cmp	w3, w4
  45a534:	b.eq	45a974 <_obstack_memory_used@@Base+0x13e24>  // b.none
  45a538:	and	x3, x3, #0xffff
  45a53c:	extr	x4, x7, x1, #61
  45a540:	mov	x18, #0xffffffffffffc001    	// #-16383
  45a544:	orr	x7, x4, #0x8000000000000
  45a548:	add	x3, x3, x18
  45a54c:	lsl	x5, x1, #3
  45a550:	mov	x16, #0x0                   	// #0
  45a554:	mov	x1, #0x0                   	// #0
  45a558:	mov	w0, #0x0                   	// #0
  45a55c:	lsr	x8, x2, #63
  45a560:	ubfx	x4, x2, #0, #48
  45a564:	and	w15, w8, #0xff
  45a568:	mov	x13, x8
  45a56c:	ubfx	x9, x2, #48, #15
  45a570:	cbz	w9, 45a930 <_obstack_memory_used@@Base+0x13de0>
  45a574:	mov	w8, #0x7fff                	// #32767
  45a578:	cmp	w9, w8
  45a57c:	b.eq	45a600 <_obstack_memory_used@@Base+0x13ab0>  // b.none
  45a580:	and	x9, x9, #0xffff
  45a584:	mov	x17, #0xffffffffffffc001    	// #-16383
  45a588:	add	x9, x9, x17
  45a58c:	extr	x2, x4, x6, #61
  45a590:	add	x9, x9, x3
  45a594:	lsl	x6, x6, #3
  45a598:	orr	x4, x2, #0x8000000000000
  45a59c:	mov	x2, #0x0                   	// #0
  45a5a0:	eor	w8, w12, w15
  45a5a4:	cmp	x1, #0xa
  45a5a8:	and	w10, w8, #0xff
  45a5ac:	add	x3, x9, #0x1
  45a5b0:	and	x8, x8, #0xff
  45a5b4:	b.le	45a638 <_obstack_memory_used@@Base+0x13ae8>
  45a5b8:	cmp	x1, #0xb
  45a5bc:	b.eq	45acd0 <_obstack_memory_used@@Base+0x14180>  // b.none
  45a5c0:	mov	w15, w12
  45a5c4:	mov	x13, x14
  45a5c8:	mov	w10, w15
  45a5cc:	cmp	x16, #0x2
  45a5d0:	b.eq	45a994 <_obstack_memory_used@@Base+0x13e44>  // b.none
  45a5d4:	mov	x4, x7
  45a5d8:	mov	x6, x5
  45a5dc:	mov	x2, x16
  45a5e0:	mov	x8, x13
  45a5e4:	cmp	x2, #0x3
  45a5e8:	b.ne	45a654 <_obstack_memory_used@@Base+0x13b04>  // b.any
  45a5ec:	orr	x4, x4, #0x800000000000
  45a5f0:	mov	x5, x6
  45a5f4:	and	x4, x4, #0xffffffffffff
  45a5f8:	mov	w1, #0x7fff                	// #32767
  45a5fc:	b	45a668 <_obstack_memory_used@@Base+0x13b18>
  45a600:	mov	x8, #0x7fff                	// #32767
  45a604:	orr	x2, x4, x6
  45a608:	add	x9, x3, x8
  45a60c:	cbnz	x2, 45a68c <_obstack_memory_used@@Base+0x13b3c>
  45a610:	eor	w8, w12, w15
  45a614:	orr	x1, x1, #0x2
  45a618:	and	w10, w8, #0xff
  45a61c:	cmp	x1, #0xa
  45a620:	add	x3, x3, #0x8, lsl #12
  45a624:	and	x8, x8, #0xff
  45a628:	mov	x6, #0x0                   	// #0
  45a62c:	b.gt	45ac44 <_obstack_memory_used@@Base+0x140f4>
  45a630:	mov	x4, #0x0                   	// #0
  45a634:	mov	x2, #0x2                   	// #2
  45a638:	cmp	x1, #0x2
  45a63c:	b.gt	45a6b4 <_obstack_memory_used@@Base+0x13b64>
  45a640:	sub	x1, x1, #0x1
  45a644:	cmp	x1, #0x1
  45a648:	b.hi	45a6f0 <_obstack_memory_used@@Base+0x13ba0>  // b.pmore
  45a64c:	cmp	x2, #0x2
  45a650:	b.eq	45a994 <_obstack_memory_used@@Base+0x13e44>  // b.none
  45a654:	cmp	x2, #0x1
  45a658:	b.ne	45a850 <_obstack_memory_used@@Base+0x13d00>  // b.any
  45a65c:	mov	w1, #0x0                   	// #0
  45a660:	mov	x4, #0x0                   	// #0
  45a664:	mov	x5, #0x0                   	// #0
  45a668:	mov	x3, #0x0                   	// #0
  45a66c:	orr	w1, w1, w10, lsl #15
  45a670:	bfxil	x3, x4, #0, #48
  45a674:	fmov	d0, x5
  45a678:	bfi	x3, x1, #48, #16
  45a67c:	fmov	v0.d[1], x3
  45a680:	cbnz	w0, 45aac0 <_obstack_memory_used@@Base+0x13f70>
  45a684:	ldp	x29, x30, [sp], #80
  45a688:	ret
  45a68c:	tst	x4, #0x800000000000
  45a690:	eor	w8, w12, w15
  45a694:	orr	x1, x1, #0x3
  45a698:	csinc	w0, w0, wzr, ne  // ne = any
  45a69c:	and	w10, w8, #0xff
  45a6a0:	add	x3, x3, #0x8, lsl #12
  45a6a4:	cmp	x1, #0xa
  45a6a8:	and	x8, x8, #0xff
  45a6ac:	mov	x2, #0x3                   	// #3
  45a6b0:	b.gt	45acc4 <_obstack_memory_used@@Base+0x14174>
  45a6b4:	mov	x12, #0x1                   	// #1
  45a6b8:	mov	x14, #0x530                 	// #1328
  45a6bc:	lsl	x1, x12, x1
  45a6c0:	tst	x1, x14
  45a6c4:	b.ne	45a8c4 <_obstack_memory_used@@Base+0x13d74>  // b.any
  45a6c8:	mov	x14, #0x240                 	// #576
  45a6cc:	tst	x1, x14
  45a6d0:	b.ne	45a8ac <_obstack_memory_used@@Base+0x13d5c>  // b.any
  45a6d4:	mov	x12, #0x88                  	// #136
  45a6d8:	tst	x1, x12
  45a6dc:	b.eq	45a6f0 <_obstack_memory_used@@Base+0x13ba0>  // b.none
  45a6e0:	mov	x7, x4
  45a6e4:	mov	x5, x6
  45a6e8:	mov	x16, x2
  45a6ec:	b	45a5c8 <_obstack_memory_used@@Base+0x13a78>
  45a6f0:	lsr	x13, x5, #32
  45a6f4:	and	x12, x6, #0xffffffff
  45a6f8:	and	x15, x5, #0xffffffff
  45a6fc:	lsr	x6, x6, #32
  45a700:	and	x18, x4, #0xffffffff
  45a704:	lsr	x2, x4, #32
  45a708:	mul	x4, x13, x12
  45a70c:	stp	x21, x22, [sp, #32]
  45a710:	lsr	x22, x7, #32
  45a714:	and	x5, x7, #0xffffffff
  45a718:	mul	x16, x12, x15
  45a71c:	madd	x7, x6, x15, x4
  45a720:	stp	x19, x20, [sp, #16]
  45a724:	mul	x1, x13, x18
  45a728:	mul	x17, x15, x18
  45a72c:	and	x30, x16, #0xffffffff
  45a730:	madd	x15, x2, x15, x1
  45a734:	add	x16, x7, x16, lsr #32
  45a738:	mul	x21, x22, x12
  45a73c:	cmp	x4, x16
  45a740:	mul	x20, x22, x18
  45a744:	mov	x14, #0x100000000           	// #4294967296
  45a748:	mul	x19, x13, x6
  45a74c:	add	x15, x15, x17, lsr #32
  45a750:	mul	x12, x12, x5
  45a754:	and	x17, x17, #0xffffffff
  45a758:	mul	x18, x5, x18
  45a75c:	add	x4, x19, x14
  45a760:	madd	x7, x6, x5, x21
  45a764:	csel	x19, x4, x19, hi  // hi = pmore
  45a768:	madd	x5, x2, x5, x20
  45a76c:	cmp	x1, x15
  45a770:	mul	x13, x13, x2
  45a774:	add	x17, x17, x15, lsl #32
  45a778:	mul	x6, x6, x22
  45a77c:	add	x7, x7, x12, lsr #32
  45a780:	add	x5, x5, x18, lsr #32
  45a784:	add	x4, x13, x14
  45a788:	mul	x2, x2, x22
  45a78c:	csel	x13, x4, x13, hi  // hi = pmore
  45a790:	and	x1, x18, #0xffffffff
  45a794:	cmp	x21, x7
  45a798:	add	x4, x6, x14
  45a79c:	add	x30, x30, x16, lsl #32
  45a7a0:	csel	x6, x4, x6, hi  // hi = pmore
  45a7a4:	add	x13, x13, x15, lsr #32
  45a7a8:	cmp	x20, x5
  45a7ac:	add	x1, x1, x5, lsl #32
  45a7b0:	add	x16, x17, x16, lsr #32
  45a7b4:	add	x14, x2, x14
  45a7b8:	csel	x2, x14, x2, hi  // hi = pmore
  45a7bc:	add	x16, x19, x16
  45a7c0:	adds	x1, x1, x13
  45a7c4:	and	x12, x12, #0xffffffff
  45a7c8:	cset	x13, cs  // cs = hs, nlast
  45a7cc:	cmp	x16, x17
  45a7d0:	cset	x4, cc  // cc = lo, ul, last
  45a7d4:	add	x12, x12, x7, lsl #32
  45a7d8:	adds	x1, x1, x4
  45a7dc:	lsr	x5, x5, #32
  45a7e0:	cset	x4, cs  // cs = hs, nlast
  45a7e4:	cmp	x13, #0x0
  45a7e8:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  45a7ec:	add	x7, x6, x7, lsr #32
  45a7f0:	cinc	x5, x5, ne  // ne = any
  45a7f4:	adds	x6, x16, x12
  45a7f8:	cset	x4, cs  // cs = hs, nlast
  45a7fc:	adds	x1, x1, x7
  45a800:	cset	x7, cs  // cs = hs, nlast
  45a804:	adds	x4, x1, x4
  45a808:	cset	x1, cs  // cs = hs, nlast
  45a80c:	cmp	x7, #0x0
  45a810:	orr	x30, x30, x6, lsl #13
  45a814:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  45a818:	cinc	x1, x2, ne  // ne = any
  45a81c:	cmp	x30, #0x0
  45a820:	add	x1, x1, x5
  45a824:	cset	x2, ne  // ne = any
  45a828:	orr	x6, x2, x6, lsr #51
  45a82c:	orr	x6, x6, x4, lsl #13
  45a830:	extr	x4, x1, x4, #51
  45a834:	tbz	x1, #39, 45ab48 <_obstack_memory_used@@Base+0x13ff8>
  45a838:	ldp	x19, x20, [sp, #16]
  45a83c:	and	x1, x6, #0x1
  45a840:	ldp	x21, x22, [sp, #32]
  45a844:	orr	x6, x1, x6, lsr #1
  45a848:	orr	x6, x6, x4, lsl #63
  45a84c:	lsr	x4, x4, #1
  45a850:	mov	x1, #0x3fff                	// #16383
  45a854:	add	x2, x3, x1
  45a858:	cmp	x2, #0x0
  45a85c:	b.le	45a9f4 <_obstack_memory_used@@Base+0x13ea4>
  45a860:	tst	x6, #0x7
  45a864:	b.eq	45a884 <_obstack_memory_used@@Base+0x13d34>  // b.none
  45a868:	and	x1, x11, #0xc00000
  45a86c:	orr	w0, w0, #0x10
  45a870:	cmp	x1, #0x400, lsl #12
  45a874:	b.eq	45ac3c <_obstack_memory_used@@Base+0x140ec>  // b.none
  45a878:	cmp	x1, #0x800, lsl #12
  45a87c:	b.eq	45abe4 <_obstack_memory_used@@Base+0x14094>  // b.none
  45a880:	cbz	x1, 45abcc <_obstack_memory_used@@Base+0x1407c>
  45a884:	tbz	x4, #52, 45a890 <_obstack_memory_used@@Base+0x13d40>
  45a888:	and	x4, x4, #0xffefffffffffffff
  45a88c:	add	x2, x3, #0x4, lsl #12
  45a890:	mov	x1, #0x7ffe                	// #32766
  45a894:	cmp	x2, x1
  45a898:	b.gt	45ab1c <_obstack_memory_used@@Base+0x13fcc>
  45a89c:	and	w1, w2, #0x7fff
  45a8a0:	extr	x5, x4, x6, #3
  45a8a4:	ubfx	x4, x4, #3, #48
  45a8a8:	b	45a668 <_obstack_memory_used@@Base+0x13b18>
  45a8ac:	mov	w0, w12
  45a8b0:	mov	w10, #0x0                   	// #0
  45a8b4:	mov	x4, #0xffffffffffff        	// #281474976710655
  45a8b8:	mov	x5, #0xffffffffffffffff    	// #-1
  45a8bc:	mov	w1, #0x7fff                	// #32767
  45a8c0:	b	45a668 <_obstack_memory_used@@Base+0x13b18>
  45a8c4:	mov	w15, w10
  45a8c8:	mov	x13, x8
  45a8cc:	b	45a5c8 <_obstack_memory_used@@Base+0x13a78>
  45a8d0:	orr	x5, x7, x1
  45a8d4:	cbz	x5, 45a9dc <_obstack_memory_used@@Base+0x13e8c>
  45a8d8:	cbz	x7, 45aaf8 <_obstack_memory_used@@Base+0x13fa8>
  45a8dc:	clz	x0, x7
  45a8e0:	sub	x4, x0, #0xf
  45a8e4:	add	w5, w4, #0x3
  45a8e8:	mov	w3, #0x3d                  	// #61
  45a8ec:	sub	w3, w3, w4
  45a8f0:	lsl	x4, x7, x5
  45a8f4:	lsr	x3, x1, x3
  45a8f8:	orr	x7, x3, x4
  45a8fc:	lsl	x5, x1, x5
  45a900:	lsr	x8, x2, #63
  45a904:	mov	x3, #0xffffffffffffc011    	// #-16367
  45a908:	ubfx	x4, x2, #0, #48
  45a90c:	sub	x3, x3, x0
  45a910:	and	w15, w8, #0xff
  45a914:	mov	x13, x8
  45a918:	ubfx	x9, x2, #48, #15
  45a91c:	mov	x1, #0x0                   	// #0
  45a920:	mov	x16, #0x0                   	// #0
  45a924:	mov	w0, #0x0                   	// #0
  45a928:	cbnz	w9, 45a574 <_obstack_memory_used@@Base+0x13a24>
  45a92c:	nop
  45a930:	orr	x2, x4, x6
  45a934:	cbz	x2, 45a9a4 <_obstack_memory_used@@Base+0x13e54>
  45a938:	cbz	x4, 45aad4 <_obstack_memory_used@@Base+0x13f84>
  45a93c:	clz	x9, x4
  45a940:	sub	x2, x9, #0xf
  45a944:	add	w10, w2, #0x3
  45a948:	mov	w8, #0x3d                  	// #61
  45a94c:	sub	w8, w8, w2
  45a950:	lsl	x2, x4, x10
  45a954:	lsr	x8, x6, x8
  45a958:	orr	x4, x8, x2
  45a95c:	lsl	x6, x6, x10
  45a960:	sub	x9, x3, x9
  45a964:	mov	x10, #0xffffffffffffc011    	// #-16367
  45a968:	mov	x2, #0x0                   	// #0
  45a96c:	add	x9, x9, x10
  45a970:	b	45a5a0 <_obstack_memory_used@@Base+0x13a50>
  45a974:	orr	x5, x7, x1
  45a978:	cbnz	x5, 45a9bc <_obstack_memory_used@@Base+0x13e6c>
  45a97c:	mov	x7, #0x0                   	// #0
  45a980:	mov	x1, #0x8                   	// #8
  45a984:	mov	x3, #0x7fff                	// #32767
  45a988:	mov	x16, #0x2                   	// #2
  45a98c:	mov	w0, #0x0                   	// #0
  45a990:	b	45a55c <_obstack_memory_used@@Base+0x13a0c>
  45a994:	mov	w1, #0x7fff                	// #32767
  45a998:	mov	x4, #0x0                   	// #0
  45a99c:	mov	x5, #0x0                   	// #0
  45a9a0:	b	45a668 <_obstack_memory_used@@Base+0x13b18>
  45a9a4:	orr	x1, x1, #0x1
  45a9a8:	mov	x9, x3
  45a9ac:	mov	x4, #0x0                   	// #0
  45a9b0:	mov	x6, #0x0                   	// #0
  45a9b4:	mov	x2, #0x1                   	// #1
  45a9b8:	b	45a5a0 <_obstack_memory_used@@Base+0x13a50>
  45a9bc:	lsr	x0, x7, #47
  45a9c0:	mov	x5, x1
  45a9c4:	eor	x0, x0, #0x1
  45a9c8:	mov	x1, #0xc                   	// #12
  45a9cc:	and	w0, w0, #0x1
  45a9d0:	mov	x3, #0x7fff                	// #32767
  45a9d4:	mov	x16, #0x3                   	// #3
  45a9d8:	b	45a55c <_obstack_memory_used@@Base+0x13a0c>
  45a9dc:	mov	x7, #0x0                   	// #0
  45a9e0:	mov	x1, #0x4                   	// #4
  45a9e4:	mov	x3, #0x0                   	// #0
  45a9e8:	mov	x16, #0x1                   	// #1
  45a9ec:	mov	w0, #0x0                   	// #0
  45a9f0:	b	45a55c <_obstack_memory_used@@Base+0x13a0c>
  45a9f4:	mov	x1, #0x1                   	// #1
  45a9f8:	sub	x2, x1, x2
  45a9fc:	cmp	x2, #0x74
  45aa00:	b.gt	45aa78 <_obstack_memory_used@@Base+0x13f28>
  45aa04:	cmp	x2, #0x3f
  45aa08:	b.le	45ab58 <_obstack_memory_used@@Base+0x14008>
  45aa0c:	mov	w1, #0x80                  	// #128
  45aa10:	sub	w1, w1, w2
  45aa14:	cmp	x2, #0x40
  45aa18:	sub	w2, w2, #0x40
  45aa1c:	lsl	x1, x4, x1
  45aa20:	orr	x1, x6, x1
  45aa24:	csel	x6, x1, x6, ne  // ne = any
  45aa28:	lsr	x2, x4, x2
  45aa2c:	cmp	x6, #0x0
  45aa30:	cset	x5, ne  // ne = any
  45aa34:	orr	x5, x5, x2
  45aa38:	ands	x2, x5, #0x7
  45aa3c:	b.eq	45ab8c <_obstack_memory_used@@Base+0x1403c>  // b.none
  45aa40:	mov	x2, #0x0                   	// #0
  45aa44:	and	x11, x11, #0xc00000
  45aa48:	orr	w0, w0, #0x10
  45aa4c:	cmp	x11, #0x400, lsl #12
  45aa50:	b.eq	45ac9c <_obstack_memory_used@@Base+0x1414c>  // b.none
  45aa54:	cmp	x11, #0x800, lsl #12
  45aa58:	b.eq	45acb0 <_obstack_memory_used@@Base+0x14160>  // b.none
  45aa5c:	cbz	x11, 45abf4 <_obstack_memory_used@@Base+0x140a4>
  45aa60:	tbnz	x2, #51, 45ac0c <_obstack_memory_used@@Base+0x140bc>
  45aa64:	ubfx	x4, x2, #3, #48
  45aa68:	extr	x5, x2, x5, #3
  45aa6c:	orr	w0, w0, #0x8
  45aa70:	mov	w1, #0x0                   	// #0
  45aa74:	b	45aaa8 <_obstack_memory_used@@Base+0x13f58>
  45aa78:	orr	x5, x6, x4
  45aa7c:	cbz	x5, 45aa9c <_obstack_memory_used@@Base+0x13f4c>
  45aa80:	and	x11, x11, #0xc00000
  45aa84:	orr	w0, w0, #0x10
  45aa88:	cmp	x11, #0x400, lsl #12
  45aa8c:	sub	x5, x1, x8
  45aa90:	b.eq	45aa9c <_obstack_memory_used@@Base+0x13f4c>  // b.none
  45aa94:	cmp	x11, #0x800, lsl #12
  45aa98:	csel	x5, x8, xzr, eq  // eq = none
  45aa9c:	orr	w0, w0, #0x8
  45aaa0:	mov	w1, #0x0                   	// #0
  45aaa4:	mov	x4, #0x0                   	// #0
  45aaa8:	mov	x3, #0x0                   	// #0
  45aaac:	fmov	d0, x5
  45aab0:	bfxil	x3, x4, #0, #48
  45aab4:	bfi	x3, x1, #48, #15
  45aab8:	bfi	x3, x10, #63, #1
  45aabc:	fmov	v0.d[1], x3
  45aac0:	str	q0, [sp, #48]
  45aac4:	bl	45af08 <_obstack_memory_used@@Base+0x143b8>
  45aac8:	ldr	q0, [sp, #48]
  45aacc:	ldp	x29, x30, [sp], #80
  45aad0:	ret
  45aad4:	clz	x9, x6
  45aad8:	add	x2, x9, #0x31
  45aadc:	add	x9, x9, #0x40
  45aae0:	cmp	x2, #0x3c
  45aae4:	b.le	45a944 <_obstack_memory_used@@Base+0x13df4>
  45aae8:	sub	w2, w2, #0x3d
  45aaec:	lsl	x4, x6, x2
  45aaf0:	mov	x6, #0x0                   	// #0
  45aaf4:	b	45a960 <_obstack_memory_used@@Base+0x13e10>
  45aaf8:	clz	x3, x1
  45aafc:	add	x4, x3, #0x31
  45ab00:	add	x0, x3, #0x40
  45ab04:	cmp	x4, #0x3c
  45ab08:	b.le	45a8e4 <_obstack_memory_used@@Base+0x13d94>
  45ab0c:	sub	w4, w4, #0x3d
  45ab10:	mov	x5, #0x0                   	// #0
  45ab14:	lsl	x7, x1, x4
  45ab18:	b	45a900 <_obstack_memory_used@@Base+0x13db0>
  45ab1c:	and	x5, x11, #0xc00000
  45ab20:	cmp	x5, #0x400, lsl #12
  45ab24:	b.eq	45ac20 <_obstack_memory_used@@Base+0x140d0>  // b.none
  45ab28:	cmp	x5, #0x800, lsl #12
  45ab2c:	b.eq	45abb0 <_obstack_memory_used@@Base+0x14060>  // b.none
  45ab30:	cbz	x5, 45aba4 <_obstack_memory_used@@Base+0x14054>
  45ab34:	mov	x4, #0xffffffffffff        	// #281474976710655
  45ab38:	mov	x5, #0xffffffffffffffff    	// #-1
  45ab3c:	mov	w2, #0x14                  	// #20
  45ab40:	orr	w0, w0, w2
  45ab44:	b	45aaa8 <_obstack_memory_used@@Base+0x13f58>
  45ab48:	mov	x3, x9
  45ab4c:	ldp	x19, x20, [sp, #16]
  45ab50:	ldp	x21, x22, [sp, #32]
  45ab54:	b	45a850 <_obstack_memory_used@@Base+0x13d00>
  45ab58:	mov	w1, #0x40                  	// #64
  45ab5c:	sub	w1, w1, w2
  45ab60:	lsr	x3, x6, x2
  45ab64:	lsl	x6, x6, x1
  45ab68:	cmp	x6, #0x0
  45ab6c:	lsl	x5, x4, x1
  45ab70:	cset	x1, ne  // ne = any
  45ab74:	orr	x5, x5, x3
  45ab78:	lsr	x2, x4, x2
  45ab7c:	orr	x5, x5, x1
  45ab80:	tst	x5, #0x7
  45ab84:	b.ne	45aa44 <_obstack_memory_used@@Base+0x13ef4>  // b.any
  45ab88:	tbnz	x2, #51, 45acbc <_obstack_memory_used@@Base+0x1416c>
  45ab8c:	ubfx	x4, x2, #3, #48
  45ab90:	extr	x5, x2, x5, #3
  45ab94:	mov	w1, #0x0                   	// #0
  45ab98:	tbz	w11, #11, 45a668 <_obstack_memory_used@@Base+0x13b18>
  45ab9c:	orr	w0, w0, #0x8
  45aba0:	b	45aaa8 <_obstack_memory_used@@Base+0x13f58>
  45aba4:	mov	w1, #0x7fff                	// #32767
  45aba8:	mov	x4, #0x0                   	// #0
  45abac:	b	45ab3c <_obstack_memory_used@@Base+0x13fec>
  45abb0:	cmp	x8, #0x0
  45abb4:	mov	w2, #0x7fff                	// #32767
  45abb8:	mov	x4, #0xffffffffffff        	// #281474976710655
  45abbc:	csel	w1, w1, w2, eq  // eq = none
  45abc0:	csel	x4, x4, xzr, eq  // eq = none
  45abc4:	csetm	x5, eq  // eq = none
  45abc8:	b	45ab3c <_obstack_memory_used@@Base+0x13fec>
  45abcc:	and	x1, x6, #0xf
  45abd0:	cmp	x1, #0x4
  45abd4:	b.eq	45a884 <_obstack_memory_used@@Base+0x13d34>  // b.none
  45abd8:	adds	x6, x6, #0x4
  45abdc:	cinc	x4, x4, cs  // cs = hs, nlast
  45abe0:	b	45a884 <_obstack_memory_used@@Base+0x13d34>
  45abe4:	cbz	x8, 45a884 <_obstack_memory_used@@Base+0x13d34>
  45abe8:	adds	x6, x6, #0x8
  45abec:	cinc	x4, x4, cs  // cs = hs, nlast
  45abf0:	b	45a884 <_obstack_memory_used@@Base+0x13d34>
  45abf4:	and	x1, x5, #0xf
  45abf8:	cmp	x1, #0x4
  45abfc:	b.eq	45ac08 <_obstack_memory_used@@Base+0x140b8>  // b.none
  45ac00:	adds	x5, x5, #0x4
  45ac04:	cinc	x2, x2, cs  // cs = hs, nlast
  45ac08:	tbz	x2, #51, 45aa64 <_obstack_memory_used@@Base+0x13f14>
  45ac0c:	orr	w0, w0, #0x8
  45ac10:	mov	w1, #0x1                   	// #1
  45ac14:	mov	x4, #0x0                   	// #0
  45ac18:	mov	x5, #0x0                   	// #0
  45ac1c:	b	45aaa8 <_obstack_memory_used@@Base+0x13f58>
  45ac20:	cmp	x8, #0x0
  45ac24:	mov	w2, #0x7fff                	// #32767
  45ac28:	mov	x4, #0xffffffffffff        	// #281474976710655
  45ac2c:	csel	w1, w1, w2, ne  // ne = any
  45ac30:	csel	x4, x4, xzr, ne  // ne = any
  45ac34:	csetm	x5, ne  // ne = any
  45ac38:	b	45ab3c <_obstack_memory_used@@Base+0x13fec>
  45ac3c:	cbnz	x8, 45a884 <_obstack_memory_used@@Base+0x13d34>
  45ac40:	b	45abe8 <_obstack_memory_used@@Base+0x14098>
  45ac44:	mov	x4, #0x2                   	// #2
  45ac48:	cmp	x1, #0xf
  45ac4c:	b.ne	45ac70 <_obstack_memory_used@@Base+0x14120>  // b.any
  45ac50:	tbz	x7, #47, 45ac88 <_obstack_memory_used@@Base+0x14138>
  45ac54:	tbnz	x2, #47, 45ac88 <_obstack_memory_used@@Base+0x14138>
  45ac58:	orr	x4, x2, #0x800000000000
  45ac5c:	mov	w10, w15
  45ac60:	and	x4, x4, #0xffffffffffff
  45ac64:	mov	x5, x6
  45ac68:	mov	w1, #0x7fff                	// #32767
  45ac6c:	b	45a668 <_obstack_memory_used@@Base+0x13b18>
  45ac70:	cmp	x1, #0xb
  45ac74:	b.ne	45a5c0 <_obstack_memory_used@@Base+0x13a70>  // b.any
  45ac78:	mov	x7, x2
  45ac7c:	mov	x5, x6
  45ac80:	mov	x16, x4
  45ac84:	b	45a5c8 <_obstack_memory_used@@Base+0x13a78>
  45ac88:	orr	x4, x7, #0x800000000000
  45ac8c:	mov	w10, w12
  45ac90:	and	x4, x4, #0xffffffffffff
  45ac94:	mov	w1, #0x7fff                	// #32767
  45ac98:	b	45a668 <_obstack_memory_used@@Base+0x13b18>
  45ac9c:	cbnz	x8, 45ac08 <_obstack_memory_used@@Base+0x140b8>
  45aca0:	adds	x5, x5, #0x8
  45aca4:	cinc	x2, x2, cs  // cs = hs, nlast
  45aca8:	tbnz	x2, #51, 45ac0c <_obstack_memory_used@@Base+0x140bc>
  45acac:	b	45aa64 <_obstack_memory_used@@Base+0x13f14>
  45acb0:	cbnz	x8, 45aca0 <_obstack_memory_used@@Base+0x14150>
  45acb4:	tbnz	x2, #51, 45ac0c <_obstack_memory_used@@Base+0x140bc>
  45acb8:	b	45aa64 <_obstack_memory_used@@Base+0x13f14>
  45acbc:	orr	w0, w0, #0x10
  45acc0:	b	45ac0c <_obstack_memory_used@@Base+0x140bc>
  45acc4:	mov	x2, x4
  45acc8:	mov	x4, #0x3                   	// #3
  45accc:	b	45ac48 <_obstack_memory_used@@Base+0x140f8>
  45acd0:	mov	w10, w15
  45acd4:	mov	x8, x13
  45acd8:	b	45a5e4 <_obstack_memory_used@@Base+0x13a94>
  45acdc:	nop
  45ace0:	cbz	w0, 45ad24 <_obstack_memory_used@@Base+0x141d4>
  45ace4:	mov	w0, w0
  45ace8:	mov	w1, #0x403e                	// #16446
  45acec:	clz	x3, x0
  45acf0:	mov	w2, #0x402f                	// #16431
  45acf4:	sub	w1, w1, w3
  45acf8:	mov	x3, #0x0                   	// #0
  45acfc:	sub	w2, w2, w1
  45ad00:	and	w1, w1, #0x7fff
  45ad04:	lsl	x0, x0, x2
  45ad08:	and	x0, x0, #0xffffffffffff
  45ad0c:	mov	x2, #0x0                   	// #0
  45ad10:	fmov	d0, x2
  45ad14:	bfxil	x3, x0, #0, #48
  45ad18:	bfi	x3, x1, #48, #16
  45ad1c:	fmov	v0.d[1], x3
  45ad20:	ret
  45ad24:	mov	x0, #0x0                   	// #0
  45ad28:	mov	x3, #0x0                   	// #0
  45ad2c:	bfxil	x3, x0, #0, #48
  45ad30:	mov	x2, #0x0                   	// #0
  45ad34:	fmov	d0, x2
  45ad38:	mov	w1, #0x0                   	// #0
  45ad3c:	bfi	x3, x1, #48, #16
  45ad40:	fmov	v0.d[1], x3
  45ad44:	ret
  45ad48:	stp	x29, x30, [sp, #-48]!
  45ad4c:	mov	x29, sp
  45ad50:	str	x19, [sp, #16]
  45ad54:	str	q0, [sp, #32]
  45ad58:	ldr	x19, [sp, #32]
  45ad5c:	ldr	x1, [sp, #40]
  45ad60:	mrs	x0, fpcr
  45ad64:	ubfx	x3, x1, #48, #15
  45ad68:	mov	x2, x19
  45ad6c:	mov	x4, #0x3ffe                	// #16382
  45ad70:	ubfx	x19, x1, #0, #48
  45ad74:	cmp	x3, x4
  45ad78:	b.gt	45ada4 <_obstack_memory_used@@Base+0x14254>
  45ad7c:	cbnz	x3, 45ad88 <_obstack_memory_used@@Base+0x14238>
  45ad80:	orr	x19, x2, x19
  45ad84:	cbz	x19, 45ad94 <_obstack_memory_used@@Base+0x14244>
  45ad88:	mov	w0, #0x10                  	// #16
  45ad8c:	mov	x19, #0x0                   	// #0
  45ad90:	bl	45af08 <_obstack_memory_used@@Base+0x143b8>
  45ad94:	mov	x0, x19
  45ad98:	ldr	x19, [sp, #16]
  45ad9c:	ldp	x29, x30, [sp], #48
  45ada0:	ret
  45ada4:	lsr	x0, x1, #63
  45ada8:	mov	x4, #0x403f                	// #16447
  45adac:	and	w0, w0, #0xff
  45adb0:	and	x5, x0, #0xff
  45adb4:	sub	x4, x4, x5
  45adb8:	cmp	x4, x3
  45adbc:	b.le	45ae10 <_obstack_memory_used@@Base+0x142c0>
  45adc0:	cbnz	x5, 45ae24 <_obstack_memory_used@@Base+0x142d4>
  45adc4:	mov	x1, x3
  45adc8:	mov	x0, #0x406f                	// #16495
  45adcc:	sub	x3, x0, x3
  45add0:	orr	x4, x19, #0x1000000000000
  45add4:	cmp	x3, #0x3f
  45add8:	b.gt	45ae34 <_obstack_memory_used@@Base+0x142e4>
  45addc:	mov	w3, #0xffffbfd1            	// #-16431
  45ade0:	add	w3, w1, w3
  45ade4:	sub	w1, w0, w1
  45ade8:	lsl	x0, x2, x3
  45adec:	cmp	x0, #0x0
  45adf0:	lsr	x19, x2, x1
  45adf4:	cset	w0, ne  // ne = any
  45adf8:	lsl	x4, x4, x3
  45adfc:	orr	x19, x19, x4
  45ae00:	cbz	w0, 45ad94 <_obstack_memory_used@@Base+0x14244>
  45ae04:	mov	w0, #0x10                  	// #16
  45ae08:	bl	45af08 <_obstack_memory_used@@Base+0x143b8>
  45ae0c:	b	45ad94 <_obstack_memory_used@@Base+0x14244>
  45ae10:	eor	w19, w0, #0x1
  45ae14:	mov	w0, #0x1                   	// #1
  45ae18:	sbfx	x19, x19, #0, #1
  45ae1c:	bl	45af08 <_obstack_memory_used@@Base+0x143b8>
  45ae20:	b	45ad94 <_obstack_memory_used@@Base+0x14244>
  45ae24:	mov	w0, #0x1                   	// #1
  45ae28:	mov	x19, #0x0                   	// #0
  45ae2c:	bl	45af08 <_obstack_memory_used@@Base+0x143b8>
  45ae30:	b	45ad94 <_obstack_memory_used@@Base+0x14244>
  45ae34:	mov	w0, #0xffffc011            	// #-16367
  45ae38:	add	w5, w1, w0
  45ae3c:	mov	w0, #0x402f                	// #16431
  45ae40:	cmp	x3, #0x40
  45ae44:	sub	w1, w0, w1
  45ae48:	lsl	x0, x4, x5
  45ae4c:	orr	x0, x2, x0
  45ae50:	csel	x2, x0, x2, ne  // ne = any
  45ae54:	lsr	x19, x4, x1
  45ae58:	cmp	x2, #0x0
  45ae5c:	cset	w0, ne  // ne = any
  45ae60:	b	45ae00 <_obstack_memory_used@@Base+0x142b0>
  45ae64:	nop
  45ae68:	cbz	x0, 45aebc <_obstack_memory_used@@Base+0x1436c>
  45ae6c:	clz	x2, x0
  45ae70:	mov	w1, #0x403e                	// #16446
  45ae74:	sub	w1, w1, w2
  45ae78:	mov	x2, #0x406f                	// #16495
  45ae7c:	and	w4, w1, #0x7fff
  45ae80:	sub	x3, x2, w1, sxtw
  45ae84:	cmp	x3, #0x3f
  45ae88:	b.gt	45aedc <_obstack_memory_used@@Base+0x1438c>
  45ae8c:	sub	w2, w2, w1
  45ae90:	mov	w3, #0xffffbfd1            	// #-16431
  45ae94:	add	w1, w1, w3
  45ae98:	mov	x3, #0x0                   	// #0
  45ae9c:	lsr	x1, x0, x1
  45aea0:	and	x1, x1, #0xffffffffffff
  45aea4:	lsl	x0, x0, x2
  45aea8:	fmov	d0, x0
  45aeac:	bfxil	x3, x1, #0, #48
  45aeb0:	bfi	x3, x4, #48, #16
  45aeb4:	fmov	v0.d[1], x3
  45aeb8:	ret
  45aebc:	mov	x1, #0x0                   	// #0
  45aec0:	mov	x3, #0x0                   	// #0
  45aec4:	bfxil	x3, x1, #0, #48
  45aec8:	fmov	d0, x0
  45aecc:	mov	w4, #0x0                   	// #0
  45aed0:	bfi	x3, x4, #48, #16
  45aed4:	fmov	v0.d[1], x3
  45aed8:	ret
  45aedc:	mov	w2, #0x402f                	// #16431
  45aee0:	sub	w1, w2, w1
  45aee4:	mov	x3, #0x0                   	// #0
  45aee8:	lsl	x1, x0, x1
  45aeec:	and	x1, x1, #0xffffffffffff
  45aef0:	mov	x0, #0x0                   	// #0
  45aef4:	fmov	d0, x0
  45aef8:	bfxil	x3, x1, #0, #48
  45aefc:	bfi	x3, x4, #48, #16
  45af00:	fmov	v0.d[1], x3
  45af04:	ret
  45af08:	tbz	w0, #0, 45af18 <_obstack_memory_used@@Base+0x143c8>
  45af0c:	movi	v1.2s, #0x0
  45af10:	fdiv	s0, s1, s1
  45af14:	mrs	x1, fpsr
  45af18:	tbz	w0, #1, 45af2c <_obstack_memory_used@@Base+0x143dc>
  45af1c:	fmov	s1, #1.000000000000000000e+00
  45af20:	movi	v2.2s, #0x0
  45af24:	fdiv	s0, s1, s2
  45af28:	mrs	x1, fpsr
  45af2c:	tbz	w0, #2, 45af4c <_obstack_memory_used@@Base+0x143fc>
  45af30:	mov	w2, #0xc5ae                	// #50606
  45af34:	mov	w1, #0x7f7fffff            	// #2139095039
  45af38:	movk	w2, #0x749d, lsl #16
  45af3c:	fmov	s1, w1
  45af40:	fmov	s2, w2
  45af44:	fadd	s0, s1, s2
  45af48:	mrs	x1, fpsr
  45af4c:	tbz	w0, #3, 45af5c <_obstack_memory_used@@Base+0x1440c>
  45af50:	movi	v1.2s, #0x80, lsl #16
  45af54:	fmul	s0, s1, s1
  45af58:	mrs	x1, fpsr
  45af5c:	tbz	w0, #4, 45af74 <_obstack_memory_used@@Base+0x14424>
  45af60:	mov	w0, #0x7f7fffff            	// #2139095039
  45af64:	fmov	s2, #1.000000000000000000e+00
  45af68:	fmov	s1, w0
  45af6c:	fsub	s0, s1, s2
  45af70:	mrs	x0, fpsr
  45af74:	ret
  45af78:	stp	x29, x30, [sp, #-64]!
  45af7c:	mov	x29, sp
  45af80:	stp	x19, x20, [sp, #16]
  45af84:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x2f4b0>
  45af88:	add	x20, x20, #0xde0
  45af8c:	stp	x21, x22, [sp, #32]
  45af90:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x2f4b0>
  45af94:	add	x21, x21, #0xdd8
  45af98:	sub	x20, x20, x21
  45af9c:	mov	w22, w0
  45afa0:	stp	x23, x24, [sp, #48]
  45afa4:	mov	x23, x1
  45afa8:	mov	x24, x2
  45afac:	bl	403e70 <mbrtowc@plt-0x40>
  45afb0:	cmp	xzr, x20, asr #3
  45afb4:	b.eq	45afe0 <_obstack_memory_used@@Base+0x14490>  // b.none
  45afb8:	asr	x20, x20, #3
  45afbc:	mov	x19, #0x0                   	// #0
  45afc0:	ldr	x3, [x21, x19, lsl #3]
  45afc4:	mov	x2, x24
  45afc8:	add	x19, x19, #0x1
  45afcc:	mov	x1, x23
  45afd0:	mov	w0, w22
  45afd4:	blr	x3
  45afd8:	cmp	x20, x19
  45afdc:	b.ne	45afc0 <_obstack_memory_used@@Base+0x14470>  // b.any
  45afe0:	ldp	x19, x20, [sp, #16]
  45afe4:	ldp	x21, x22, [sp, #32]
  45afe8:	ldp	x23, x24, [sp, #48]
  45afec:	ldp	x29, x30, [sp], #64
  45aff0:	ret
  45aff4:	nop
  45aff8:	ret

Disassembly of section .fini:

000000000045affc <.fini>:
  45affc:	stp	x29, x30, [sp, #-16]!
  45b000:	mov	x29, sp
  45b004:	ldp	x29, x30, [sp], #16
  45b008:	ret
