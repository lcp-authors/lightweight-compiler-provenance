
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//revoutput.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000658 <.init>:
 658:	stp	x29, x30, [sp, #-16]!
 65c:	mov	x29, sp
 660:	bl	700 <fprintf@plt+0x10>
 664:	ldp	x29, x30, [sp], #16
 668:	ret

Disassembly of section .plt:

0000000000000670 <exit@plt-0x20>:
 670:	stp	x16, x30, [sp, #-16]!
 674:	adrp	x16, 11000 <dl_load@@Base+0x104cc>
 678:	ldr	x17, [x16, #4088]
 67c:	add	x16, x16, #0xff8
 680:	br	x17
 684:	nop
 688:	nop
 68c:	nop

0000000000000690 <exit@plt>:
 690:	adrp	x16, 12000 <exit@GLIBC_2.17>
 694:	ldr	x17, [x16]
 698:	add	x16, x16, #0x0
 69c:	br	x17

00000000000006a0 <__cxa_finalize@plt>:
 6a0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #8]
 6a8:	add	x16, x16, #0x8
 6ac:	br	x17

00000000000006b0 <putc@plt>:
 6b0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #16]
 6b8:	add	x16, x16, #0x10
 6bc:	br	x17

00000000000006c0 <__gmon_start__@plt>:
 6c0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #24]
 6c8:	add	x16, x16, #0x18
 6cc:	br	x17

00000000000006d0 <fwrite@plt>:
 6d0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #32]
 6d8:	add	x16, x16, #0x20
 6dc:	br	x17

00000000000006e0 <gettext@plt>:
 6e0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6e4:	ldr	x17, [x16, #40]
 6e8:	add	x16, x16, #0x28
 6ec:	br	x17

00000000000006f0 <fprintf@plt>:
 6f0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6f4:	ldr	x17, [x16, #48]
 6f8:	add	x16, x16, #0x30
 6fc:	br	x17

Disassembly of section .text:

0000000000000700 <dl_load@@Base-0x434>:
 700:	adrp	x0, 11000 <dl_load@@Base+0x104cc>
 704:	ldr	x0, [x0, #4056]
 708:	cbz	x0, 710 <fprintf@plt+0x20>
 70c:	b	6c0 <__gmon_start__@plt>
 710:	ret
 714:	stp	x29, x30, [sp, #-32]!
 718:	mov	x29, sp
 71c:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 720:	add	x0, x0, #0x70
 724:	str	x0, [sp, #24]
 728:	ldr	x0, [sp, #24]
 72c:	str	x0, [sp, #24]
 730:	ldr	x1, [sp, #24]
 734:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 738:	add	x0, x0, #0x70
 73c:	cmp	x1, x0
 740:	b.eq	778 <fprintf@plt+0x88>  // b.none
 744:	adrp	x0, 11000 <dl_load@@Base+0x104cc>
 748:	ldr	x0, [x0, #4032]
 74c:	str	x0, [sp, #16]
 750:	ldr	x0, [sp, #16]
 754:	str	x0, [sp, #16]
 758:	ldr	x0, [sp, #16]
 75c:	cmp	x0, #0x0
 760:	b.eq	77c <fprintf@plt+0x8c>  // b.none
 764:	ldr	x1, [sp, #16]
 768:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 76c:	add	x0, x0, #0x70
 770:	blr	x1
 774:	b	77c <fprintf@plt+0x8c>
 778:	nop
 77c:	ldp	x29, x30, [sp], #32
 780:	ret
 784:	stp	x29, x30, [sp, #-48]!
 788:	mov	x29, sp
 78c:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 790:	add	x0, x0, #0x70
 794:	str	x0, [sp, #40]
 798:	ldr	x0, [sp, #40]
 79c:	str	x0, [sp, #40]
 7a0:	ldr	x1, [sp, #40]
 7a4:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 7a8:	add	x0, x0, #0x70
 7ac:	sub	x0, x1, x0
 7b0:	asr	x0, x0, #3
 7b4:	lsr	x1, x0, #63
 7b8:	add	x0, x1, x0
 7bc:	asr	x0, x0, #1
 7c0:	str	x0, [sp, #32]
 7c4:	ldr	x0, [sp, #32]
 7c8:	cmp	x0, #0x0
 7cc:	b.eq	808 <fprintf@plt+0x118>  // b.none
 7d0:	adrp	x0, 11000 <dl_load@@Base+0x104cc>
 7d4:	ldr	x0, [x0, #4064]
 7d8:	str	x0, [sp, #24]
 7dc:	ldr	x0, [sp, #24]
 7e0:	str	x0, [sp, #24]
 7e4:	ldr	x0, [sp, #24]
 7e8:	cmp	x0, #0x0
 7ec:	b.eq	80c <fprintf@plt+0x11c>  // b.none
 7f0:	ldr	x2, [sp, #24]
 7f4:	ldr	x1, [sp, #32]
 7f8:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 7fc:	add	x0, x0, #0x70
 800:	blr	x2
 804:	b	80c <fprintf@plt+0x11c>
 808:	nop
 80c:	ldp	x29, x30, [sp], #48
 810:	ret
 814:	stp	x29, x30, [sp, #-16]!
 818:	mov	x29, sp
 81c:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 820:	add	x0, x0, #0x70
 824:	ldrb	w0, [x0]
 828:	and	x0, x0, #0xff
 82c:	cmp	x0, #0x0
 830:	b.ne	86c <fprintf@plt+0x17c>  // b.any
 834:	adrp	x0, 11000 <dl_load@@Base+0x104cc>
 838:	ldr	x0, [x0, #4040]
 83c:	cmp	x0, #0x0
 840:	b.eq	854 <fprintf@plt+0x164>  // b.none
 844:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 848:	add	x0, x0, #0x38
 84c:	ldr	x0, [x0]
 850:	bl	6a0 <__cxa_finalize@plt>
 854:	bl	714 <fprintf@plt+0x24>
 858:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 85c:	add	x0, x0, #0x70
 860:	mov	w1, #0x1                   	// #1
 864:	strb	w1, [x0]
 868:	b	870 <fprintf@plt+0x180>
 86c:	nop
 870:	ldp	x29, x30, [sp], #16
 874:	ret
 878:	stp	x29, x30, [sp, #-16]!
 87c:	mov	x29, sp
 880:	bl	784 <fprintf@plt+0x94>
 884:	nop
 888:	ldp	x29, x30, [sp], #16
 88c:	ret
 890:	sub	sp, sp, #0x10
 894:	str	d0, [sp, #8]
 898:	str	x0, [sp]
 89c:	ldr	x0, [sp]
 8a0:	mov	w1, #0x1                   	// #1
 8a4:	str	w1, [x0]
 8a8:	ldr	x0, [sp]
 8ac:	ldr	d0, [sp, #8]
 8b0:	str	d0, [x0, #8]
 8b4:	ldr	x0, [sp]
 8b8:	str	wzr, [x0, #16]
 8bc:	ldr	x0, [sp]
 8c0:	add	sp, sp, #0x10
 8c4:	ret
 8c8:	stp	x29, x30, [sp, #-80]!
 8cc:	mov	x29, sp
 8d0:	str	x0, [sp, #56]
 8d4:	str	x1, [sp, #48]
 8d8:	str	x2, [sp, #40]
 8dc:	str	x3, [sp, #32]
 8e0:	str	x4, [sp, #24]
 8e4:	ldr	x0, [sp, #56]
 8e8:	str	x0, [sp, #64]
 8ec:	ldr	x0, [sp, #48]
 8f0:	mov	w1, w0
 8f4:	ldr	x0, [sp, #40]
 8f8:	mul	w0, w1, w0
 8fc:	str	w0, [sp, #76]
 900:	b	92c <fprintf@plt+0x23c>
 904:	ldrsw	x0, [sp, #76]
 908:	sub	x0, x0, #0x1
 90c:	ldr	x1, [sp, #64]
 910:	add	x0, x1, x0
 914:	ldrb	w0, [x0]
 918:	ldr	x1, [sp, #32]
 91c:	bl	6b0 <putc@plt>
 920:	ldr	w0, [sp, #76]
 924:	sub	w0, w0, #0x1
 928:	str	w0, [sp, #76]
 92c:	ldr	w0, [sp, #76]
 930:	cmp	w0, #0x0
 934:	b.gt	904 <fprintf@plt+0x214>
 938:	ldr	x1, [sp, #48]
 93c:	ldr	x0, [sp, #40]
 940:	mul	x0, x1, x0
 944:	ldp	x29, x30, [sp], #80
 948:	ret
 94c:	stp	x29, x30, [sp, #-64]!
 950:	mov	x29, sp
 954:	str	x0, [sp, #24]
 958:	ldr	x0, [sp, #24]
 95c:	cmp	x0, #0x0
 960:	b.ne	96c <fprintf@plt+0x27c>  // b.any
 964:	mov	w0, #0x0                   	// #0
 968:	b	9cc <fprintf@plt+0x2dc>
 96c:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 970:	add	x0, x0, #0x78
 974:	ldr	x0, [x0]
 978:	ldr	x5, [x0, #168]
 97c:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 980:	add	x0, x0, #0x80
 984:	ldr	x6, [x0]
 988:	add	x0, sp, #0x20
 98c:	mov	x4, x0
 990:	mov	w3, #0x1                   	// #1
 994:	adrp	x0, 0 <exit@plt-0x690>
 998:	add	x2, x0, #0xe28
 99c:	adrp	x0, 0 <exit@plt-0x690>
 9a0:	add	x1, x0, #0xe30
 9a4:	mov	x0, x6
 9a8:	blr	x5
 9ac:	cmp	w0, #0x0
 9b0:	b.ne	9bc <fprintf@plt+0x2cc>  // b.any
 9b4:	mov	w0, #0x0                   	// #0
 9b8:	b	9cc <fprintf@plt+0x2dc>
 9bc:	ldr	d0, [sp, #40]
 9c0:	fcmp	d0, #0.0
 9c4:	cset	w0, ne  // ne = any
 9c8:	and	w0, w0, #0xff
 9cc:	ldp	x29, x30, [sp], #64
 9d0:	ret
 9d4:	sub	sp, sp, #0x10
 9d8:	str	x0, [sp, #8]
 9dc:	ldr	x0, [sp, #8]
 9e0:	cmp	x0, #0x0
 9e4:	b.ne	9f0 <fprintf@plt+0x300>  // b.any
 9e8:	mov	w0, #0x0                   	// #0
 9ec:	b	a10 <fprintf@plt+0x320>
 9f0:	ldr	x0, [sp, #8]
 9f4:	adrp	x1, 0 <exit@plt-0x690>
 9f8:	add	x1, x1, #0x8c8
 9fc:	str	x1, [x0, #40]
 a00:	ldr	x0, [sp, #8]
 a04:	mov	w1, #0x1                   	// #1
 a08:	str	w1, [x0, #24]
 a0c:	mov	w0, #0x1                   	// #1
 a10:	add	sp, sp, #0x10
 a14:	ret
 a18:	stp	x29, x30, [sp, #-64]!
 a1c:	mov	x29, sp
 a20:	stp	x19, x20, [sp, #16]
 a24:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 a28:	add	x0, x0, #0x78
 a2c:	ldr	x0, [x0]
 a30:	ldr	x2, [x0, #64]
 a34:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 a38:	add	x0, x0, #0x80
 a3c:	ldr	x3, [x0]
 a40:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 a44:	add	x1, x0, #0x50
 a48:	mov	x0, x3
 a4c:	blr	x2
 a50:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 a54:	add	x0, x0, #0x78
 a58:	ldr	x0, [x0]
 a5c:	ldr	x5, [x0, #168]
 a60:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 a64:	add	x0, x0, #0x80
 a68:	ldr	x6, [x0]
 a6c:	add	x0, sp, #0x20
 a70:	mov	x4, x0
 a74:	mov	w3, #0x6                   	// #6
 a78:	adrp	x0, 0 <exit@plt-0x690>
 a7c:	add	x2, x0, #0xe28
 a80:	adrp	x0, 0 <exit@plt-0x690>
 a84:	add	x1, x0, #0xe30
 a88:	mov	x0, x6
 a8c:	blr	x5
 a90:	cmp	w0, #0x0
 a94:	b.ne	b24 <fprintf@plt+0x434>  // b.any
 a98:	add	x0, sp, #0x20
 a9c:	movi	d0, #0x0
 aa0:	bl	890 <fprintf@plt+0x1a0>
 aa4:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 aa8:	add	x0, x0, #0x78
 aac:	ldr	x0, [x0]
 ab0:	ldr	x4, [x0, #176]
 ab4:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 ab8:	add	x0, x0, #0x80
 abc:	ldr	x5, [x0]
 ac0:	add	x0, sp, #0x20
 ac4:	mov	x3, x0
 ac8:	adrp	x0, 0 <exit@plt-0x690>
 acc:	add	x2, x0, #0xe28
 ad0:	adrp	x0, 0 <exit@plt-0x690>
 ad4:	add	x1, x0, #0xe30
 ad8:	mov	x0, x5
 adc:	blr	x4
 ae0:	cmp	w0, #0x0
 ae4:	b.ne	b24 <fprintf@plt+0x434>  // b.any
 ae8:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 aec:	add	x0, x0, #0x78
 af0:	ldr	x0, [x0]
 af4:	ldr	x19, [x0, #104]
 af8:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 afc:	add	x0, x0, #0x80
 b00:	ldr	x20, [x0]
 b04:	adrp	x0, 0 <exit@plt-0x690>
 b08:	add	x0, x0, #0xe48
 b0c:	bl	6e0 <gettext@plt>
 b10:	mov	x1, x0
 b14:	mov	x0, x20
 b18:	blr	x19
 b1c:	mov	w0, #0x0                   	// #0
 b20:	b	b28 <fprintf@plt+0x438>
 b24:	mov	w0, #0x1                   	// #1
 b28:	ldp	x19, x20, [sp, #16]
 b2c:	ldp	x29, x30, [sp], #64
 b30:	ret

0000000000000b34 <dl_load@@Base>:
 b34:	stp	x29, x30, [sp, #-64]!
 b38:	mov	x29, sp
 b3c:	str	x0, [sp, #24]
 b40:	str	x1, [sp, #16]
 b44:	str	wzr, [sp, #52]
 b48:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 b4c:	add	x0, x0, #0x78
 b50:	ldr	x1, [sp, #24]
 b54:	str	x1, [x0]
 b58:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 b5c:	add	x0, x0, #0x80
 b60:	ldr	x1, [sp, #16]
 b64:	str	x1, [x0]
 b68:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 b6c:	add	x0, x0, #0x78
 b70:	ldr	x0, [x0]
 b74:	ldr	w0, [x0]
 b78:	cmp	w0, #0x2
 b7c:	b.ne	b98 <dl_load@@Base+0x64>  // b.any
 b80:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 b84:	add	x0, x0, #0x78
 b88:	ldr	x0, [x0]
 b8c:	ldr	w0, [x0, #4]
 b90:	cmp	w0, #0x0
 b94:	b.ge	c10 <dl_load@@Base+0xdc>  // b.tcont
 b98:	adrp	x0, 11000 <dl_load@@Base+0x104cc>
 b9c:	ldr	x0, [x0, #4048]
 ba0:	ldr	x0, [x0]
 ba4:	mov	x3, x0
 ba8:	mov	x2, #0x27                  	// #39
 bac:	mov	x1, #0x1                   	// #1
 bb0:	adrp	x0, 0 <exit@plt-0x690>
 bb4:	add	x0, x0, #0xe78
 bb8:	bl	6d0 <fwrite@plt>
 bbc:	adrp	x0, 11000 <dl_load@@Base+0x104cc>
 bc0:	ldr	x0, [x0, #4048]
 bc4:	ldr	x6, [x0]
 bc8:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 bcc:	add	x0, x0, #0x78
 bd0:	ldr	x0, [x0]
 bd4:	ldr	w1, [x0]
 bd8:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 bdc:	add	x0, x0, #0x78
 be0:	ldr	x0, [x0]
 be4:	ldr	w0, [x0, #4]
 be8:	mov	w5, w0
 bec:	mov	w4, w1
 bf0:	mov	w3, #0x0                   	// #0
 bf4:	mov	w2, #0x2                   	// #2
 bf8:	adrp	x0, 0 <exit@plt-0x690>
 bfc:	add	x1, x0, #0xea0
 c00:	mov	x0, x6
 c04:	bl	6f0 <fprintf@plt>
 c08:	mov	w0, #0x1                   	// #1
 c0c:	bl	690 <exit@plt>
 c10:	str	xzr, [sp, #56]
 c14:	mov	x0, #0x1                   	// #1
 c18:	str	x0, [sp, #40]
 c1c:	b	d10 <dl_load@@Base+0x1dc>
 c20:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 c24:	add	x2, x0, #0x88
 c28:	ldr	x1, [sp, #56]
 c2c:	mov	x0, x1
 c30:	lsl	x0, x0, #1
 c34:	add	x0, x0, x1
 c38:	lsl	x0, x0, #4
 c3c:	add	x0, x2, x0
 c40:	ldr	x0, [x0]
 c44:	cmp	x0, #0x0
 c48:	b.eq	d24 <dl_load@@Base+0x1f0>  // b.none
 c4c:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 c50:	add	x0, x0, #0x78
 c54:	ldr	x0, [x0]
 c58:	ldr	x3, [x0, #48]
 c5c:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 c60:	add	x0, x0, #0x80
 c64:	ldr	x4, [x0]
 c68:	ldr	x1, [sp, #56]
 c6c:	mov	x0, x1
 c70:	lsl	x0, x0, #1
 c74:	add	x0, x0, x1
 c78:	lsl	x0, x0, #4
 c7c:	adrp	x1, 12000 <dl_load@@Base+0x114cc>
 c80:	add	x1, x1, #0x88
 c84:	add	x0, x0, x1
 c88:	mov	x2, x0
 c8c:	adrp	x0, 0 <exit@plt-0x690>
 c90:	add	x1, x0, #0xe30
 c94:	mov	x0, x4
 c98:	blr	x3
 c9c:	cmp	w0, #0x0
 ca0:	b.ne	d04 <dl_load@@Base+0x1d0>  // b.any
 ca4:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 ca8:	add	x0, x0, #0x78
 cac:	ldr	x0, [x0]
 cb0:	ldr	x3, [x0, #104]
 cb4:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 cb8:	add	x0, x0, #0x80
 cbc:	ldr	x4, [x0]
 cc0:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 cc4:	add	x2, x0, #0x88
 cc8:	ldr	x1, [sp, #56]
 ccc:	mov	x0, x1
 cd0:	lsl	x0, x0, #1
 cd4:	add	x0, x0, x1
 cd8:	lsl	x0, x0, #4
 cdc:	add	x0, x2, x0
 ce0:	ldr	x0, [x0]
 ce4:	mov	x2, x0
 ce8:	adrp	x0, 0 <exit@plt-0x690>
 cec:	add	x1, x0, #0xed8
 cf0:	mov	x0, x4
 cf4:	blr	x3
 cf8:	ldr	w0, [sp, #52]
 cfc:	add	w0, w0, #0x1
 d00:	str	w0, [sp, #52]
 d04:	ldr	x0, [sp, #56]
 d08:	add	x0, x0, #0x1
 d0c:	str	x0, [sp, #56]
 d10:	ldr	x1, [sp, #56]
 d14:	ldr	x0, [sp, #40]
 d18:	cmp	x1, x0
 d1c:	b.cc	c20 <dl_load@@Base+0xec>  // b.lo, b.ul, b.last
 d20:	b	d28 <dl_load@@Base+0x1f4>
 d24:	nop
 d28:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 d2c:	add	x0, x0, #0x48
 d30:	ldr	x0, [x0]
 d34:	cmp	x0, #0x0
 d38:	b.eq	d8c <dl_load@@Base+0x258>  // b.none
 d3c:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 d40:	add	x0, x0, #0x48
 d44:	ldr	x0, [x0]
 d48:	blr	x0
 d4c:	cmp	w0, #0x0
 d50:	b.ne	d8c <dl_load@@Base+0x258>  // b.any
 d54:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 d58:	add	x0, x0, #0x78
 d5c:	ldr	x0, [x0]
 d60:	ldr	x2, [x0, #104]
 d64:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 d68:	add	x0, x0, #0x80
 d6c:	ldr	x3, [x0]
 d70:	adrp	x0, 0 <exit@plt-0x690>
 d74:	add	x1, x0, #0xef8
 d78:	mov	x0, x3
 d7c:	blr	x2
 d80:	ldr	w0, [sp, #52]
 d84:	add	w0, w0, #0x1
 d88:	str	w0, [sp, #52]
 d8c:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 d90:	add	x0, x0, #0x40
 d94:	ldr	x0, [x0]
 d98:	cmp	x0, #0x0
 d9c:	b.eq	dd4 <dl_load@@Base+0x2a0>  // b.none
 da0:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 da4:	add	x0, x0, #0x78
 da8:	ldr	x0, [x0]
 dac:	ldr	x2, [x0, #88]
 db0:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 db4:	add	x0, x0, #0x80
 db8:	ldr	x3, [x0]
 dbc:	adrp	x0, 12000 <dl_load@@Base+0x114cc>
 dc0:	add	x0, x0, #0x40
 dc4:	ldr	x0, [x0]
 dc8:	mov	x1, x0
 dcc:	mov	x0, x3
 dd0:	blr	x2
 dd4:	ldr	w0, [sp, #52]
 dd8:	cmp	w0, #0x0
 ddc:	cset	w0, eq  // eq = none
 de0:	and	w0, w0, #0xff
 de4:	ldp	x29, x30, [sp], #64
 de8:	ret

Disassembly of section .fini:

0000000000000dec <.fini>:
 dec:	stp	x29, x30, [sp, #-16]!
 df0:	mov	x29, sp
 df4:	ldp	x29, x30, [sp], #16
 df8:	ret
