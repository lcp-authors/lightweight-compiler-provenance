
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lzopio.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x800>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x20, [x0, #80]
  14:	ldr	x0, [x20]
  18:	bl	0 <grub_file_close>
  1c:	ldr	x0, [x20, #64]
  20:	bl	0 <grub_free>
  24:	ldr	x0, [x20, #72]
  28:	bl	0 <grub_free>
  2c:	mov	x0, x20
  30:	bl	0 <grub_free>
  34:	adrp	x0, 0 <grub_mod_init-0x800>
  38:	ldr	x0, [x0]
  3c:	ldr	w0, [x0]
  40:	stp	xzr, xzr, [x19]
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
	...
  58:	stp	x29, x30, [sp, #-32]!
  5c:	mov	x29, sp
  60:	ldr	x1, [x0, #32]
  64:	ldr	w2, [x0, #48]
  68:	str	x19, [sp, #16]
  6c:	mov	x19, x0
  70:	ldr	x0, [x0, #72]
  74:	add	x1, x1, x2
  78:	str	x1, [x19, #32]
  7c:	bl	0 <grub_free>
  80:	ldr	x0, [x19, #64]
  84:	bl	0 <grub_free>
  88:	mov	x1, x19
  8c:	mov	x2, #0x4                   	// #4
  90:	ldr	x0, [x1], #48
  94:	stp	xzr, xzr, [x19, #64]
  98:	bl	0 <grub_file_read>
  9c:	cmp	x0, #0x4
  a0:	b.ne	140 <grub_mod_init-0x6c0>  // b.any
  a4:	ldr	w1, [x19, #48]
  a8:	mov	x2, x0
  ac:	ldr	x0, [x19]
  b0:	rev	w1, w1
  b4:	str	w1, [x19, #48]
  b8:	cbnz	w1, d8 <grub_mod_init-0x728>
  bc:	ldr	x1, [x0, #24]
  c0:	ldr	x0, [x0, #64]
  c4:	cmp	x0, x1
  c8:	csetm	w0, ne  // ne = any
  cc:	ldr	x19, [sp, #16]
  d0:	ldp	x29, x30, [sp], #32
  d4:	ret
  d8:	add	x1, x19, #0x34
  dc:	bl	0 <grub_file_read>
  e0:	cmp	x0, #0x4
  e4:	b.ne	140 <grub_mod_init-0x6c0>  // b.any
  e8:	ldp	w2, w1, [x19, #48]
  ec:	rev	w1, w1
  f0:	str	w1, [x19, #52]
  f4:	cmp	w1, w2
  f8:	b.hi	140 <grub_mod_init-0x6c0>  // b.pmore
  fc:	ldr	w1, [x19, #12]
 100:	cbnz	w1, 128 <grub_mod_init-0x6d8>
 104:	ldr	w0, [x19, #8]
 108:	cbz	w0, cc <grub_mod_init-0x734>
 10c:	ldp	w0, w1, [x19, #48]
 110:	cmp	w1, w0
 114:	b.ne	148 <grub_mod_init-0x6b8>  // b.any
 118:	ldr	w1, [x19, #56]
 11c:	mov	w0, #0x0                   	// #0
 120:	str	w1, [x19, #60]
 124:	b	cc <grub_mod_init-0x734>
 128:	mov	x1, x19
 12c:	mov	x2, x0
 130:	ldr	x0, [x1], #56
 134:	bl	0 <grub_file_read>
 138:	cmp	x0, #0x4
 13c:	b.eq	104 <grub_mod_init-0x6fc>  // b.none
 140:	mov	w0, #0xffffffff            	// #-1
 144:	b	cc <grub_mod_init-0x734>
 148:	mov	x1, x19
 14c:	mov	x2, #0x4                   	// #4
 150:	ldr	x0, [x1], #60
 154:	bl	0 <grub_file_read>
 158:	cmp	x0, #0x4
 15c:	csetm	w0, ne  // ne = any
 160:	b	cc <grub_mod_init-0x734>
 164:	nop
 168:	stp	x29, x30, [sp, #-32]!
 16c:	mov	x29, sp
 170:	str	x19, [sp, #16]
 174:	mov	x19, x0
 178:	ldr	x0, [x0, #72]
 17c:	cbz	x0, 190 <grub_mod_init-0x670>
 180:	mov	x0, x19
 184:	ldr	x19, [sp, #16]
 188:	ldp	x29, x30, [sp], #32
 18c:	b	58 <grub_mod_init-0x7a8>
 190:	ldr	x0, [x19]
 194:	ldr	w2, [x19, #52]
 198:	ldr	x1, [x0, #24]
 19c:	add	x1, x2, x1
 1a0:	bl	0 <grub_file_seek>
 1a4:	cmn	x0, #0x1
 1a8:	b.ne	180 <grub_mod_init-0x680>  // b.any
 1ac:	ldr	x19, [sp, #16]
 1b0:	ldp	x29, x30, [sp], #32
 1b4:	ret
 1b8:	stp	x29, x30, [sp, #-160]!
 1bc:	mov	x29, sp
 1c0:	stp	x19, x20, [sp, #16]
 1c4:	mov	x20, x2
 1c8:	ldr	x19, [x0, #24]
 1cc:	str	x25, [sp, #64]
 1d0:	ldr	x25, [x0, #80]
 1d4:	stp	x21, x22, [sp, #32]
 1d8:	mov	x22, x1
 1dc:	mov	x21, x0
 1e0:	ldr	x1, [x25, #32]
 1e4:	cmp	x1, x19
 1e8:	b.ls	204 <grub_mod_init-0x5fc>  // b.plast
 1ec:	b	3f0 <grub_mod_init-0x410>
 1f0:	cbz	w3, 3d4 <grub_mod_init-0x42c>
 1f4:	bl	168 <grub_mod_init-0x698>
 1f8:	tbnz	w0, #31, 3a8 <grub_mod_init-0x458>
 1fc:	ldr	x19, [x21, #24]
 200:	ldr	x1, [x25, #32]
 204:	mov	x0, x25
 208:	ldr	w3, [x25, #48]
 20c:	add	x2, x1, w3, uxtw
 210:	cmp	x2, x19
 214:	b.ls	1f0 <grub_mod_init-0x610>  // b.plast
 218:	sub	x19, x19, x1
 21c:	mov	x21, #0x0                   	// #0
 220:	cbz	x20, 26c <grub_mod_init-0x594>
 224:	stp	x23, x24, [sp, #48]
 228:	add	x24, x25, #0x38
 22c:	add	x23, x25, #0x3c
 230:	cbz	w3, 268 <grub_mod_init-0x598>
 234:	ldr	x1, [x25, #72]
 238:	mov	w3, w3
 23c:	cbz	x1, 2a0 <grub_mod_init-0x560>
 240:	sub	x3, x3, x19
 244:	add	x1, x1, x19
 248:	cmp	x20, x3
 24c:	mov	x0, x22
 250:	csel	x19, x20, x3, ls  // ls = plast
 254:	mov	x2, x19
 258:	add	x21, x21, x19
 25c:	bl	0 <grub_memmove>
 260:	subs	x20, x20, x19
 264:	b.ne	284 <grub_mod_init-0x57c>  // b.any
 268:	ldp	x23, x24, [sp, #48]
 26c:	mov	x0, x21
 270:	ldp	x19, x20, [sp, #16]
 274:	ldp	x21, x22, [sp, #32]
 278:	ldr	x25, [sp, #64]
 27c:	ldp	x29, x30, [sp], #160
 280:	ret
 284:	mov	x0, x25
 288:	bl	58 <grub_mod_init-0x7a8>
 28c:	tbnz	w0, #31, 3a4 <grub_mod_init-0x45c>
 290:	add	x22, x22, x19
 294:	ldr	w3, [x25, #48]
 298:	mov	x19, #0x0                   	// #0
 29c:	b	230 <grub_mod_init-0x5d0>
 2a0:	ldr	w0, [x25, #52]
 2a4:	str	x3, [sp, #88]
 2a8:	bl	0 <grub_malloc>
 2ac:	str	x0, [x25, #64]
 2b0:	mov	x1, x0
 2b4:	cbz	x0, 3a4 <grub_mod_init-0x45c>
 2b8:	ldr	w2, [x25, #52]
 2bc:	ldr	x0, [x25]
 2c0:	bl	0 <grub_file_read>
 2c4:	mov	x3, x0
 2c8:	ldr	w1, [x25, #52]
 2cc:	cmp	x0, w1, uxtw
 2d0:	b.ne	3a4 <grub_mod_init-0x45c>  // b.any
 2d4:	ldr	x0, [x25, #24]
 2d8:	cbz	x0, 30c <grub_mod_init-0x4f4>
 2dc:	ldr	x1, [x0, #32]
 2e0:	cmp	x1, #0x40
 2e4:	b.hi	3a4 <grub_mod_init-0x45c>  // b.pmore
 2e8:	ldr	x2, [x25, #64]
 2ec:	add	x1, sp, #0x60
 2f0:	bl	0 <grub_crypto_hash>
 2f4:	mov	x1, x23
 2f8:	add	x0, sp, #0x60
 2fc:	mov	x2, #0x4                   	// #4
 300:	bl	0 <grub_memcmp>
 304:	cbnz	w0, 3a4 <grub_mod_init-0x45c>
 308:	ldr	w1, [x25, #52]
 30c:	ldr	w3, [x25, #48]
 310:	cmp	w3, w1
 314:	mov	w3, w3
 318:	b.ne	328 <grub_mod_init-0x4d8>  // b.any
 31c:	ldr	x1, [x25, #64]
 320:	stp	xzr, x1, [x25, #64]
 324:	b	240 <grub_mod_init-0x5c0>
 328:	mov	x0, x3
 32c:	bl	0 <grub_malloc>
 330:	str	x0, [x25, #72]
 334:	mov	x2, x0
 338:	cbz	x0, 3a4 <grub_mod_init-0x45c>
 33c:	ldr	w1, [x25, #52]
 340:	add	x3, sp, #0x58
 344:	ldr	x0, [x25, #64]
 348:	mov	x4, #0x0                   	// #0
 34c:	bl	840 <lzo1x_decompress_safe>
 350:	cbnz	w0, 3a4 <grub_mod_init-0x45c>
 354:	ldr	x0, [x25, #16]
 358:	cbz	x0, 38c <grub_mod_init-0x474>
 35c:	ldr	x1, [x0, #32]
 360:	cmp	x1, #0x40
 364:	b.hi	3a4 <grub_mod_init-0x45c>  // b.pmore
 368:	ldr	w3, [x25, #48]
 36c:	add	x1, sp, #0x60
 370:	ldr	x2, [x25, #72]
 374:	bl	0 <grub_crypto_hash>
 378:	mov	x1, x24
 37c:	add	x0, sp, #0x60
 380:	mov	x2, #0x4                   	// #4
 384:	bl	0 <grub_memcmp>
 388:	cbnz	w0, 3a4 <grub_mod_init-0x45c>
 38c:	ldr	x0, [x25, #64]
 390:	bl	0 <grub_free>
 394:	str	xzr, [x25, #64]
 398:	ldr	w3, [x25, #48]
 39c:	ldr	x1, [x25, #72]
 3a0:	b	240 <grub_mod_init-0x5c0>
 3a4:	ldp	x23, x24, [sp, #48]
 3a8:	adrp	x1, 0 <grub_mod_init-0x800>
 3ac:	mov	x21, #0xffffffffffffffff    	// #-1
 3b0:	mov	w0, #0x1a                  	// #26
 3b4:	ldr	x1, [x1]
 3b8:	bl	0 <grub_error>
 3bc:	mov	x0, x21
 3c0:	ldp	x19, x20, [sp, #16]
 3c4:	ldp	x21, x22, [sp, #32]
 3c8:	ldr	x25, [sp, #64]
 3cc:	ldp	x29, x30, [sp], #160
 3d0:	ret
 3d4:	mov	x21, #0x0                   	// #0
 3d8:	mov	x0, x21
 3dc:	ldp	x19, x20, [sp, #16]
 3e0:	ldp	x21, x22, [sp, #32]
 3e4:	ldr	x25, [sp, #64]
 3e8:	ldp	x29, x30, [sp], #160
 3ec:	ret
 3f0:	ldr	x0, [x25]
 3f4:	ldr	x1, [x25, #40]
 3f8:	bl	0 <grub_file_seek>
 3fc:	mov	x0, x25
 400:	bl	58 <grub_mod_init-0x7a8>
 404:	tbnz	w0, #31, 3a8 <grub_mod_init-0x458>
 408:	str	xzr, [x25, #32]
 40c:	mov	x1, #0x0                   	// #0
 410:	ldr	x19, [x21, #24]
 414:	b	204 <grub_mod_init-0x5fc>
	...
 420:	stp	x29, x30, [sp, #-128]!
 424:	mov	x29, sp
 428:	stp	x19, x20, [sp, #16]
 42c:	mov	x19, x0
 430:	tbz	w1, #17, 444 <grub_mod_init-0x3bc>
 434:	mov	x0, x19
 438:	ldp	x19, x20, [sp, #16]
 43c:	ldp	x29, x30, [sp], #128
 440:	ret
 444:	mov	x0, #0x68                  	// #104
 448:	bl	0 <grub_zalloc>
 44c:	mov	x20, x0
 450:	cbz	x0, 674 <grub_mod_init-0x18c>
 454:	mov	x0, #0x50                  	// #80
 458:	stp	x21, x22, [sp, #32]
 45c:	bl	0 <grub_zalloc>
 460:	mov	x21, x0
 464:	cbz	x0, 6c8 <grub_mod_init-0x138>
 468:	ldr	x3, [x19, #8]
 46c:	str	x19, [x21]
 470:	mov	x0, #0xffffffffffffffff    	// #-1
 474:	str	x0, [x20, #64]
 478:	adrp	x2, 0 <grub_mod_init-0x800>
 47c:	mov	w0, #0x1                   	// #1
 480:	ldr	x1, [x19, #24]
 484:	str	w0, [x20, #72]
 488:	ldr	x2, [x2]
 48c:	stp	x3, x2, [x20, #8]
 490:	mov	x22, x21
 494:	str	x21, [x20, #80]
 498:	mov	x0, x19
 49c:	cbnz	x1, 4e4 <grub_mod_init-0x31c>
 4a0:	add	x1, sp, #0x58
 4a4:	mov	x2, #0x22                  	// #34
 4a8:	bl	0 <grub_file_read>
 4ac:	cmp	x0, #0x22
 4b0:	b.eq	508 <grub_mod_init-0x2f8>  // b.none
 4b4:	adrp	x2, 0 <grub_mod_init-0x800>
 4b8:	mov	x1, #0x0                   	// #0
 4bc:	mov	x0, x19
 4c0:	ldr	x2, [x2]
 4c4:	str	wzr, [x2]
 4c8:	bl	0 <grub_file_seek>
 4cc:	mov	x0, x21
 4d0:	bl	0 <grub_free>
 4d4:	mov	x0, x20
 4d8:	bl	0 <grub_free>
 4dc:	ldp	x21, x22, [sp, #32]
 4e0:	b	434 <grub_mod_init-0x3cc>
 4e4:	mov	x1, #0x0                   	// #0
 4e8:	bl	0 <grub_file_seek>
 4ec:	ldr	x22, [x20, #80]
 4f0:	add	x1, sp, #0x58
 4f4:	mov	x2, #0x22                  	// #34
 4f8:	ldr	x0, [x22]
 4fc:	bl	0 <grub_file_read>
 500:	cmp	x0, #0x22
 504:	b.ne	4b4 <grub_mod_init-0x34c>  // b.any
 508:	adrp	x1, 0 <grub_mod_init-0x800>
 50c:	add	x0, sp, #0x58
 510:	mov	x2, #0x9                   	// #9
 514:	ldr	x1, [x1]
 518:	bl	0 <grub_memcmp>
 51c:	cbnz	w0, 4b4 <grub_mod_init-0x34c>
 520:	ldurh	w0, [sp, #99]
 524:	lsr	w1, w0, #8
 528:	orr	w0, w1, w0, lsl #8
 52c:	and	w0, w0, #0xffff
 530:	cmp	w0, #0x93f
 534:	b.ls	4b4 <grub_mod_init-0x34c>  // b.plast
 538:	ldurh	w0, [sp, #101]
 53c:	mov	w1, #0x2050                	// #8272
 540:	lsr	w2, w0, #8
 544:	orr	w0, w2, w0, lsl #8
 548:	cmp	w1, w0, uxth
 54c:	b.cc	4b4 <grub_mod_init-0x34c>  // b.lo, b.ul, b.last
 550:	stp	x23, x24, [sp, #48]
 554:	ldur	w23, [sp, #105]
 558:	rev	w23, w23
 55c:	tbnz	w23, #8, 784 <grub_mod_init-0x7c>
 560:	tbnz	w23, #0, 698 <grub_mod_init-0x168>
 564:	tbnz	w23, #9, 768 <grub_mod_init-0x98>
 568:	tbnz	w23, #1, 67c <grub_mod_init-0x184>
 56c:	tbz	w23, #12, 6b4 <grub_mod_init-0x14c>
 570:	adrp	x0, 0 <grub_mod_init-0x800>
 574:	ldr	x0, [x0]
 578:	bl	0 <grub_crypto_lookup_md_by_name>
 57c:	mov	x23, x0
 580:	cbz	x23, 6dc <grub_mod_init-0x124>
 584:	ldr	x0, [x23, #72]
 588:	bl	0 <grub_malloc>
 58c:	mov	x24, x0
 590:	cbz	x0, 760 <grub_mod_init-0xa0>
 594:	ldr	x1, [x23, #40]
 598:	str	x25, [sp, #64]
 59c:	blr	x1
 5a0:	ldr	x3, [x23, #48]
 5a4:	mov	x0, x24
 5a8:	add	x1, sp, #0x61
 5ac:	mov	x2, #0x19                  	// #25
 5b0:	blr	x3
 5b4:	ldrb	w0, [sp, #121]
 5b8:	cbnz	w0, 6ec <grub_mod_init-0x114>
 5bc:	ldr	x1, [x23, #56]
 5c0:	mov	x0, x24
 5c4:	blr	x1
 5c8:	ldr	x0, [x22]
 5cc:	add	x1, sp, #0x54
 5d0:	mov	x2, #0x4                   	// #4
 5d4:	bl	0 <grub_file_read>
 5d8:	mov	x25, x0
 5dc:	cmp	x0, #0x4
 5e0:	b.ne	7a0 <grub_mod_init-0x60>  // b.any
 5e4:	ldr	x1, [x23, #64]
 5e8:	mov	x0, x24
 5ec:	blr	x1
 5f0:	mov	x1, x0
 5f4:	mov	x2, x25
 5f8:	add	x0, sp, #0x54
 5fc:	bl	0 <grub_memcmp>
 600:	cbnz	w0, 7a0 <grub_mod_init-0x60>
 604:	ldr	x25, [sp, #64]
 608:	ldr	x0, [x22]
 60c:	ldr	x23, [x20, #80]
 610:	ldr	x0, [x0, #24]
 614:	str	x0, [x22, #40]
 618:	mov	x0, x23
 61c:	bl	58 <grub_mod_init-0x7a8>
 620:	tbnz	w0, #31, 760 <grub_mod_init-0xa0>
 624:	mov	x24, #0x0                   	// #0
 628:	b	638 <grub_mod_init-0x1c8>
 62c:	add	x24, x24, w1, uxtw
 630:	bl	168 <grub_mod_init-0x698>
 634:	tbnz	w0, #31, 760 <grub_mod_init-0xa0>
 638:	ldr	w1, [x23, #48]
 63c:	mov	x0, x23
 640:	cbnz	w1, 62c <grub_mod_init-0x1d4>
 644:	ldr	x0, [x22]
 648:	str	x24, [x20, #64]
 64c:	ldr	x1, [x22, #40]
 650:	bl	0 <grub_file_seek>
 654:	mov	x0, x22
 658:	bl	58 <grub_mod_init-0x7a8>
 65c:	tbnz	w0, #31, 760 <grub_mod_init-0xa0>
 660:	mov	x19, x20
 664:	ldp	x23, x24, [sp, #48]
 668:	str	xzr, [x22, #32]
 66c:	ldp	x21, x22, [sp, #32]
 670:	b	434 <grub_mod_init-0x3cc>
 674:	mov	x19, #0x0                   	// #0
 678:	b	434 <grub_mod_init-0x3cc>
 67c:	adrp	x0, 0 <grub_mod_init-0x800>
 680:	mov	w1, #0x1                   	// #1
 684:	str	w1, [x22, #8]
 688:	ldr	x0, [x0]
 68c:	bl	0 <grub_crypto_lookup_md_by_name>
 690:	str	x0, [x22, #24]
 694:	b	56c <grub_mod_init-0x294>
 698:	adrp	x0, 0 <grub_mod_init-0x800>
 69c:	mov	w1, #0x1                   	// #1
 6a0:	str	w1, [x22, #12]
 6a4:	ldr	x0, [x0]
 6a8:	bl	0 <grub_crypto_lookup_md_by_name>
 6ac:	str	x0, [x22, #16]
 6b0:	b	564 <grub_mod_init-0x29c>
 6b4:	adrp	x0, 0 <grub_mod_init-0x800>
 6b8:	ldr	x0, [x0]
 6bc:	bl	0 <grub_crypto_lookup_md_by_name>
 6c0:	mov	x23, x0
 6c4:	b	580 <grub_mod_init-0x280>
 6c8:	mov	x0, x20
 6cc:	mov	x19, #0x0                   	// #0
 6d0:	bl	0 <grub_free>
 6d4:	ldp	x21, x22, [sp, #32]
 6d8:	b	434 <grub_mod_init-0x3cc>
 6dc:	ldrb	w0, [sp, #121]
 6e0:	mov	x24, #0x0                   	// #0
 6e4:	cbz	w0, 748 <grub_mod_init-0xb8>
 6e8:	str	x25, [sp, #64]
 6ec:	and	x0, x0, #0xff
 6f0:	bl	0 <grub_malloc>
 6f4:	mov	x25, x0
 6f8:	cbz	x0, 7c0 <grub_mod_init-0x40>
 6fc:	mov	x1, x0
 700:	ldrb	w2, [sp, #121]
 704:	ldr	x0, [x22]
 708:	bl	0 <grub_file_read>
 70c:	ldrb	w1, [sp, #121]
 710:	cmp	x0, x1
 714:	b.ne	7ac <grub_mod_init-0x54>  // b.any
 718:	cbz	x23, 73c <grub_mod_init-0xc4>
 71c:	ldr	x3, [x23, #48]
 720:	mov	x2, x0
 724:	mov	x1, x25
 728:	mov	x0, x24
 72c:	blr	x3
 730:	mov	x0, x25
 734:	bl	0 <grub_free>
 738:	b	5bc <grub_mod_init-0x244>
 73c:	mov	x0, x25
 740:	bl	0 <grub_free>
 744:	ldr	x25, [sp, #64]
 748:	add	x1, sp, #0x54
 74c:	ldr	x0, [x22]
 750:	mov	x2, #0x4                   	// #4
 754:	bl	0 <grub_file_read>
 758:	cmp	x0, #0x4
 75c:	b.eq	608 <grub_mod_init-0x1f8>  // b.none
 760:	ldp	x23, x24, [sp, #48]
 764:	b	4b4 <grub_mod_init-0x34c>
 768:	adrp	x0, 0 <grub_mod_init-0x800>
 76c:	mov	w1, #0x1                   	// #1
 770:	str	w1, [x22, #8]
 774:	ldr	x0, [x0]
 778:	bl	0 <grub_crypto_lookup_md_by_name>
 77c:	str	x0, [x22, #24]
 780:	b	56c <grub_mod_init-0x294>
 784:	adrp	x0, 0 <grub_mod_init-0x800>
 788:	mov	w1, #0x1                   	// #1
 78c:	str	w1, [x22, #12]
 790:	ldr	x0, [x0]
 794:	bl	0 <grub_crypto_lookup_md_by_name>
 798:	str	x0, [x22, #16]
 79c:	b	564 <grub_mod_init-0x29c>
 7a0:	ldp	x23, x24, [sp, #48]
 7a4:	ldr	x25, [sp, #64]
 7a8:	b	4b4 <grub_mod_init-0x34c>
 7ac:	mov	x0, x25
 7b0:	bl	0 <grub_free>
 7b4:	ldp	x23, x24, [sp, #48]
 7b8:	ldr	x25, [sp, #64]
 7bc:	b	4b4 <grub_mod_init-0x34c>
 7c0:	mov	x0, x24
 7c4:	bl	0 <grub_free>
 7c8:	ldp	x23, x24, [sp, #48]
 7cc:	ldr	x25, [sp, #64]
 7d0:	b	4b4 <grub_mod_init-0x34c>
 7d4:	nop
	...

0000000000000800 <grub_mod_init>:
 800:	adrp	x0, 0 <grub_mod_init-0x800>
 804:	adrp	x1, 0 <grub_mod_init-0x800>
 808:	ldr	x0, [x0]
 80c:	ldr	x1, [x1]
 810:	str	x1, [x0, #24]
 814:	ret
	...

0000000000000828 <grub_mod_fini>:
 828:	adrp	x0, 0 <grub_mod_init-0x800>
 82c:	ldr	x0, [x0]
 830:	str	xzr, [x0, #24]
 834:	ret
	...

0000000000000840 <lzo1x_decompress_safe>:
 840:	stp	x29, x30, [sp, #-96]!
 844:	mov	x29, sp
 848:	stp	x19, x20, [sp, #16]
 84c:	mov	x19, x0
 850:	stp	x21, x22, [sp, #32]
 854:	stp	x23, x24, [sp, #48]
 858:	mov	x23, x2
 85c:	mov	x24, x3
 860:	stp	x25, x26, [sp, #64]
 864:	add	x25, x0, x1
 868:	ldr	x2, [x3]
 86c:	str	xzr, [x3]
 870:	ldrb	w0, [x0]
 874:	add	x26, x23, x2
 878:	cmp	w0, #0x11
 87c:	b.ls	948 <lzo1x_decompress_safe+0x108>  // b.plast
 880:	sub	w20, w0, #0x11
 884:	add	x19, x19, #0x1
 888:	cmp	w20, #0x3
 88c:	sxtw	x20, w20
 890:	b.le	acc <lzo1x_decompress_safe+0x28c>
 894:	cmp	x2, x20
 898:	b.cc	cc4 <lzo1x_decompress_safe+0x484>  // b.lo, b.ul, b.last
 89c:	sub	x1, x1, #0x1
 8a0:	add	x2, x20, #0x1
 8a4:	cmp	x1, x2
 8a8:	b.cc	ca4 <lzo1x_decompress_safe+0x464>  // b.lo, b.ul, b.last
 8ac:	and	x1, x0, #0xff
 8b0:	mov	x0, #0x0                   	// #0
 8b4:	sub	x1, x1, #0x11
 8b8:	ldrb	w2, [x19, x0]
 8bc:	strb	w2, [x23, x0]
 8c0:	add	x0, x0, #0x1
 8c4:	cmp	x1, x0
 8c8:	b.ne	8b8 <lzo1x_decompress_safe+0x78>  // b.any
 8cc:	add	x19, x19, x20
 8d0:	add	x20, x23, x20
 8d4:	add	x21, x19, #0x1
 8d8:	ldrb	w22, [x19]
 8dc:	cmp	x22, #0xf
 8e0:	b.hi	a3c <lzo1x_decompress_safe+0x1fc>  // b.pmore
 8e4:	ldrb	w1, [x19, #1]
 8e8:	mov	x0, #0xfffffffffffff7ff    	// #-2049
 8ec:	sub	x22, x0, x22, lsr #2
 8f0:	add	x19, x19, #0x2
 8f4:	sub	x22, x22, w1, uxtb #2
 8f8:	add	x22, x20, x22
 8fc:	cmp	x23, x22
 900:	ccmp	x20, x22, #0x0, ls  // ls = plast
 904:	b.ls	cb4 <lzo1x_decompress_safe+0x474>  // b.plast
 908:	sub	x0, x26, x20
 90c:	cmp	x0, #0x2
 910:	b.ls	abc <lzo1x_decompress_safe+0x27c>  // b.plast
 914:	ldrb	w0, [x22]
 918:	add	x1, x20, #0x3
 91c:	strb	w0, [x20]
 920:	ldrb	w0, [x22, #1]
 924:	strb	w0, [x20, #1]
 928:	ldrb	w0, [x22, #2]
 92c:	strb	w0, [x20, #2]
 930:	ldurb	w0, [x19, #-2]
 934:	ands	w0, w0, #0x3
 938:	and	x20, x0, #0xff
 93c:	b.ne	ad0 <lzo1x_decompress_safe+0x290>  // b.any
 940:	mov	x20, x1
 944:	b	94c <lzo1x_decompress_safe+0x10c>
 948:	mov	x20, x23
 94c:	cmp	x19, x25
 950:	b.cs	b28 <lzo1x_decompress_safe+0x2e8>  // b.hs, b.nlast
 954:	mov	x21, x19
 958:	ldrb	w22, [x21], #1
 95c:	cmp	x22, #0xf
 960:	b.hi	a3c <lzo1x_decompress_safe+0x1fc>  // b.pmore
 964:	cbnz	x22, 9cc <lzo1x_decompress_safe+0x18c>
 968:	cmp	x25, x21
 96c:	b.ne	99c <lzo1x_decompress_safe+0x15c>  // b.any
 970:	sub	x20, x20, x23
 974:	mov	w0, #0xfffffffc            	// #-4
 978:	str	x20, [x24]
 97c:	ldp	x19, x20, [sp, #16]
 980:	ldp	x21, x22, [sp, #32]
 984:	ldp	x23, x24, [sp, #48]
 988:	ldp	x25, x26, [sp, #64]
 98c:	ldp	x29, x30, [sp], #96
 990:	ret
 994:	add	x22, x22, #0xff
 998:	b.eq	970 <lzo1x_decompress_safe+0x130>  // b.none
 99c:	ldrb	w0, [x21], #1
 9a0:	cmp	x25, x21
 9a4:	cbz	w0, 994 <lzo1x_decompress_safe+0x154>
 9a8:	add	w0, w0, #0xf
 9ac:	adds	x22, x22, w0, sxtw
 9b0:	b.ne	9cc <lzo1x_decompress_safe+0x18c>  // b.any
 9b4:	adrp	x1, 0 <grub_mod_init-0x800>
 9b8:	adrp	x0, 0 <grub_mod_init-0x800>
 9bc:	mov	w2, #0x106b                	// #4203
 9c0:	ldr	x1, [x1]
 9c4:	ldr	x0, [x0]
 9c8:	bl	0 <grub_printf>
 9cc:	add	x2, x22, #0x3
 9d0:	sub	x0, x26, x20
 9d4:	cmp	x0, x2
 9d8:	b.cc	abc <lzo1x_decompress_safe+0x27c>  // b.lo, b.ul, b.last
 9dc:	sub	x0, x25, x21
 9e0:	add	x1, x22, #0x4
 9e4:	cmp	x0, x1
 9e8:	b.cc	970 <lzo1x_decompress_safe+0x130>  // b.lo, b.ul, b.last
 9ec:	ldrb	w0, [x21]
 9f0:	add	x19, x21, #0x3
 9f4:	strb	w0, [x20]
 9f8:	add	x3, x20, #0x3
 9fc:	mov	x0, #0x3                   	// #3
 a00:	ldrb	w1, [x21, #1]
 a04:	strb	w1, [x20, #1]
 a08:	ldrb	w1, [x21, #2]
 a0c:	strb	w1, [x20, #2]
 a10:	ldrb	w1, [x21, x0]
 a14:	strb	w1, [x20, x0]
 a18:	add	x0, x0, #0x1
 a1c:	cmp	x2, x0
 a20:	b.ne	a10 <lzo1x_decompress_safe+0x1d0>  // b.any
 a24:	add	x19, x19, x22
 a28:	add	x20, x3, x22
 a2c:	add	x21, x19, #0x1
 a30:	ldrb	w22, [x19]
 a34:	cmp	x22, #0xf
 a38:	b.ls	8e4 <lzo1x_decompress_safe+0xa4>  // b.plast
 a3c:	cmp	x22, #0x3f
 a40:	b.hi	b4c <lzo1x_decompress_safe+0x30c>  // b.pmore
 a44:	cmp	x22, #0x1f
 a48:	b.ls	bd0 <lzo1x_decompress_safe+0x390>  // b.plast
 a4c:	ands	x22, x22, #0x1f
 a50:	b.ne	a7c <lzo1x_decompress_safe+0x23c>  // b.any
 a54:	cmp	x21, x25
 a58:	b.ne	a68 <lzo1x_decompress_safe+0x228>  // b.any
 a5c:	b	970 <lzo1x_decompress_safe+0x130>
 a60:	add	x22, x22, #0xff
 a64:	b.eq	970 <lzo1x_decompress_safe+0x130>  // b.none
 a68:	ldrb	w0, [x21], #1
 a6c:	cmp	x25, x21
 a70:	cbz	w0, a60 <lzo1x_decompress_safe+0x220>
 a74:	add	w0, w0, #0x1f
 a78:	add	x22, x22, w0, sxtw
 a7c:	ldrb	w0, [x21, #1]
 a80:	add	x19, x21, #0x2
 a84:	ldrb	w21, [x21]
 a88:	lsl	w0, w0, #6
 a8c:	add	w21, w0, w21, lsr #2
 a90:	sxtw	x21, w21
 a94:	mvn	x21, x21
 a98:	add	x21, x20, x21
 a9c:	cmp	x21, x23
 aa0:	ccmp	x20, x21, #0x0, cs  // cs = hs, nlast
 aa4:	b.ls	cb4 <lzo1x_decompress_safe+0x474>  // b.plast
 aa8:	cbz	x22, c88 <lzo1x_decompress_safe+0x448>
 aac:	sub	x0, x26, x20
 ab0:	add	x3, x22, #0x2
 ab4:	cmp	x0, x3
 ab8:	b.cs	b8c <lzo1x_decompress_safe+0x34c>  // b.hs, b.nlast
 abc:	sub	x20, x20, x23
 ac0:	mov	w0, #0xfffffffb            	// #-5
 ac4:	str	x20, [x24]
 ac8:	b	97c <lzo1x_decompress_safe+0x13c>
 acc:	mov	x1, x23
 ad0:	sub	x0, x26, x1
 ad4:	cmp	x0, x20
 ad8:	b.cc	cd4 <lzo1x_decompress_safe+0x494>  // b.lo, b.ul, b.last
 adc:	sub	x0, x25, x19
 ae0:	add	x2, x20, #0x1
 ae4:	cmp	x0, x2
 ae8:	b.cc	ccc <lzo1x_decompress_safe+0x48c>  // b.lo, b.ul, b.last
 aec:	ldrb	w0, [x19]
 af0:	cmp	x20, #0x1
 af4:	strb	w0, [x1]
 af8:	b.eq	b40 <lzo1x_decompress_safe+0x300>  // b.none
 afc:	ldrb	w0, [x19, #1]
 b00:	cmp	x20, #0x2
 b04:	strb	w0, [x1, #1]
 b08:	b.eq	bc4 <lzo1x_decompress_safe+0x384>  // b.none
 b0c:	ldrb	w0, [x19, #2]
 b10:	add	x20, x1, #0x3
 b14:	add	x19, x19, #0x3
 b18:	strb	w0, [x1, #2]
 b1c:	add	x21, x19, #0x1
 b20:	cmp	x25, x21
 b24:	b.hi	b38 <lzo1x_decompress_safe+0x2f8>  // b.pmore
 b28:	sub	x20, x20, x23
 b2c:	mov	w0, #0xfffffff9            	// #-7
 b30:	str	x20, [x24]
 b34:	b	97c <lzo1x_decompress_safe+0x13c>
 b38:	ldrb	w22, [x19]
 b3c:	b	a3c <lzo1x_decompress_safe+0x1fc>
 b40:	add	x19, x19, #0x1
 b44:	add	x20, x1, #0x1
 b48:	b	b1c <lzo1x_decompress_safe+0x2dc>
 b4c:	mov	x19, x21
 b50:	ubfx	x0, x22, #2, #3
 b54:	mvn	x0, x0
 b58:	lsr	x3, x22, #5
 b5c:	sub	x22, x3, #0x1
 b60:	ldrb	w21, [x19], #1
 b64:	sub	x21, x0, w21, uxtb #3
 b68:	add	x21, x20, x21
 b6c:	cmp	x23, x21
 b70:	ccmp	x20, x21, #0x0, ls  // ls = plast
 b74:	b.ls	cb4 <lzo1x_decompress_safe+0x474>  // b.plast
 b78:	add	x1, x3, #0x1
 b7c:	sub	x0, x26, x20
 b80:	cmp	x0, x1
 b84:	mov	x3, x1
 b88:	b.cc	abc <lzo1x_decompress_safe+0x27c>  // b.lo, b.ul, b.last
 b8c:	mov	x1, x20
 b90:	ldrb	w2, [x21]
 b94:	mov	x0, #0x2                   	// #2
 b98:	strb	w2, [x1], #2
 b9c:	ldrb	w2, [x21, #1]
 ba0:	strb	w2, [x20, #1]
 ba4:	nop
 ba8:	ldrb	w2, [x21, x0]
 bac:	strb	w2, [x20, x0]
 bb0:	add	x0, x0, #0x1
 bb4:	cmp	x3, x0
 bb8:	b.ne	ba8 <lzo1x_decompress_safe+0x368>  // b.any
 bbc:	add	x1, x1, x22
 bc0:	b	930 <lzo1x_decompress_safe+0xf0>
 bc4:	add	x19, x19, #0x2
 bc8:	add	x20, x1, #0x2
 bcc:	b	b1c <lzo1x_decompress_safe+0x2dc>
 bd0:	cmp	x22, #0xf
 bd4:	b.ls	c44 <lzo1x_decompress_safe+0x404>  // b.plast
 bd8:	lsl	x0, x22, #11
 bdc:	ands	x22, x22, #0x7
 be0:	and	x1, x0, #0x4000
 be4:	b.ne	cac <lzo1x_decompress_safe+0x46c>  // b.any
 be8:	cmp	x21, x25
 bec:	b.ne	bfc <lzo1x_decompress_safe+0x3bc>  // b.any
 bf0:	b	970 <lzo1x_decompress_safe+0x130>
 bf4:	add	x22, x22, #0xff
 bf8:	b.eq	970 <lzo1x_decompress_safe+0x130>  // b.none
 bfc:	ldrb	w0, [x21], #1
 c00:	cmp	x25, x21
 c04:	cbz	w0, bf4 <lzo1x_decompress_safe+0x3b4>
 c08:	add	w0, w0, #0x7
 c0c:	str	x27, [sp, #80]
 c10:	add	x22, x22, w0, sxtw
 c14:	ldrb	w0, [x21, #1]
 c18:	add	x19, x21, #0x2
 c1c:	ldrb	w27, [x21]
 c20:	lsl	w0, w0, #6
 c24:	add	w27, w0, w27, lsr #2
 c28:	add	x27, x1, w27, sxtw
 c2c:	sub	x27, x20, x27
 c30:	cmp	x20, x27
 c34:	sub	x21, x27, #0x4, lsl #12
 c38:	b.eq	cdc <lzo1x_decompress_safe+0x49c>  // b.none
 c3c:	ldr	x27, [sp, #80]
 c40:	b	a9c <lzo1x_decompress_safe+0x25c>
 c44:	mov	x19, x21
 c48:	mvn	x22, x22, lsr #2
 c4c:	ldrb	w0, [x19], #1
 c50:	sub	x0, x22, w0, uxtb #2
 c54:	add	x0, x20, x0
 c58:	cmp	x23, x0
 c5c:	ccmp	x20, x0, #0x0, ls  // ls = plast
 c60:	b.ls	cb4 <lzo1x_decompress_safe+0x474>  // b.plast
 c64:	sub	x1, x26, x20
 c68:	cmp	x1, #0x1
 c6c:	b.ls	abc <lzo1x_decompress_safe+0x27c>  // b.plast
 c70:	mov	x1, x20
 c74:	ldrb	w2, [x0]
 c78:	strb	w2, [x1], #2
 c7c:	ldrb	w0, [x0, #1]
 c80:	strb	w0, [x20, #1]
 c84:	b	930 <lzo1x_decompress_safe+0xf0>
 c88:	adrp	x1, 0 <grub_mod_init-0x800>
 c8c:	adrp	x0, 0 <grub_mod_init-0x800>
 c90:	mov	w2, #0x116b                	// #4459
 c94:	ldr	x1, [x1]
 c98:	ldr	x0, [x0]
 c9c:	bl	0 <grub_printf>
 ca0:	b	aac <lzo1x_decompress_safe+0x26c>
 ca4:	mov	x20, #0x0                   	// #0
 ca8:	b	974 <lzo1x_decompress_safe+0x134>
 cac:	str	x27, [sp, #80]
 cb0:	b	c14 <lzo1x_decompress_safe+0x3d4>
 cb4:	sub	x20, x20, x23
 cb8:	mov	w0, #0xfffffffa            	// #-6
 cbc:	str	x20, [x24]
 cc0:	b	97c <lzo1x_decompress_safe+0x13c>
 cc4:	mov	x20, #0x0                   	// #0
 cc8:	b	ac0 <lzo1x_decompress_safe+0x280>
 ccc:	sub	x20, x1, x23
 cd0:	b	974 <lzo1x_decompress_safe+0x134>
 cd4:	sub	x20, x1, x23
 cd8:	b	ac0 <lzo1x_decompress_safe+0x280>
 cdc:	cmp	x22, #0x1
 ce0:	b.ne	d0c <lzo1x_decompress_safe+0x4cc>  // b.any
 ce4:	cmp	x25, x19
 ce8:	mov	w1, #0xfffffffc            	// #-4
 cec:	mov	w0, #0xfffffff8            	// #-8
 cf0:	csel	w0, w0, w1, hi  // hi = pmore
 cf4:	sub	x20, x27, x23
 cf8:	mov	w1, #0x0                   	// #0
 cfc:	csel	w0, w0, w1, ne  // ne = any
 d00:	ldr	x27, [sp, #80]
 d04:	str	x20, [x24]
 d08:	b	97c <lzo1x_decompress_safe+0x13c>
 d0c:	adrp	x1, 0 <grub_mod_init-0x800>
 d10:	adrp	x0, 0 <grub_mod_init-0x800>
 d14:	mov	w2, #0x11b7                	// #4535
 d18:	ldr	x1, [x1]
 d1c:	ldr	x0, [x0]
 d20:	bl	0 <grub_printf>
 d24:	b	ce4 <lzo1x_decompress_safe+0x4a4>
	...
