
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.hwasan-aarch64.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006170 <.init>:
    6170:	stp	x29, x30, [sp, #-16]!
    6174:	mov	x29, sp
    6178:	bl	668c <__sanitizer_print_memory_profile@plt+0x2c>
    617c:	ldp	x29, x30, [sp], #16
    6180:	ret

Disassembly of section .plt:

0000000000006190 <_Unwind_Backtrace@plt-0x20>:
    6190:	stp	x16, x30, [sp, #-16]!
    6194:	adrp	x16, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    6198:	ldr	x17, [x16, #4088]
    619c:	add	x16, x16, #0xff8
    61a0:	br	x17
    61a4:	nop
    61a8:	nop
    61ac:	nop

00000000000061b0 <_Unwind_Backtrace@plt>:
    61b0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    61b4:	ldr	x17, [x16]
    61b8:	add	x16, x16, #0x0
    61bc:	br	x17

00000000000061c0 <__sanitizer_report_error_summary@plt>:
    61c0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    61c4:	ldr	x17, [x16, #8]
    61c8:	add	x16, x16, #0x8
    61cc:	br	x17

00000000000061d0 <memcpy@plt>:
    61d0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    61d4:	ldr	x17, [x16, #16]
    61d8:	add	x16, x16, #0x10
    61dc:	br	x17

00000000000061e0 <__sanitizer_on_print@plt>:
    61e0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    61e4:	ldr	x17, [x16, #24]
    61e8:	add	x16, x16, #0x18
    61ec:	br	x17

00000000000061f0 <__hwasan_handle_vfork@plt>:
    61f0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    61f4:	ldr	x17, [x16, #32]
    61f8:	add	x16, x16, #0x20
    61fc:	br	x17

0000000000006200 <sched_getaffinity@plt>:
    6200:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6204:	ldr	x17, [x16, #40]
    6208:	add	x16, x16, #0x28
    620c:	br	x17

0000000000006210 <__hwasan_default_options@plt>:
    6210:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6214:	ldr	x17, [x16, #48]
    6218:	add	x16, x16, #0x30
    621c:	br	x17

0000000000006220 <execv@plt>:
    6220:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6224:	ldr	x17, [x16, #56]
    6228:	add	x16, x16, #0x38
    622c:	br	x17

0000000000006230 <pipe@plt>:
    6230:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6234:	ldr	x17, [x16, #64]
    6238:	add	x16, x16, #0x40
    623c:	br	x17

0000000000006240 <__sanitizer_get_module_and_offset_for_pc@plt>:
    6240:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6244:	ldr	x17, [x16, #72]
    6248:	add	x16, x16, #0x48
    624c:	br	x17

0000000000006250 <__sanitizer_malloc_hook@plt>:
    6250:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6254:	ldr	x17, [x16, #80]
    6258:	add	x16, x16, #0x50
    625c:	br	x17

0000000000006260 <dlvsym@plt>:
    6260:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6264:	ldr	x17, [x16, #88]
    6268:	add	x16, x16, #0x58
    626c:	br	x17

0000000000006270 <pthread_getattr_np@plt>:
    6270:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6274:	ldr	x17, [x16, #96]
    6278:	add	x16, x16, #0x60
    627c:	br	x17

0000000000006280 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>:
    6280:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6284:	ldr	x17, [x16, #104]
    6288:	add	x16, x16, #0x68
    628c:	br	x17

0000000000006290 <__sanitizer_symbolize_demangle@plt>:
    6290:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6294:	ldr	x17, [x16, #112]
    6298:	add	x16, x16, #0x70
    629c:	br	x17

00000000000062a0 <sigprocmask@plt>:
    62a0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    62a4:	ldr	x17, [x16, #120]
    62a8:	add	x16, x16, #0x78
    62ac:	br	x17

00000000000062b0 <pthread_attr_init@plt>:
    62b0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    62b4:	ldr	x17, [x16, #128]
    62b8:	add	x16, x16, #0x80
    62bc:	br	x17

00000000000062c0 <real_pthread_attr_getstack@plt>:
    62c0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    62c4:	ldr	x17, [x16, #136]
    62c8:	add	x16, x16, #0x88
    62cc:	br	x17

00000000000062d0 <sleep@plt>:
    62d0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    62d4:	ldr	x17, [x16, #144]
    62d8:	add	x16, x16, #0x90
    62dc:	br	x17

00000000000062e0 <dlsym@plt>:
    62e0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    62e4:	ldr	x17, [x16, #152]
    62e8:	add	x16, x16, #0x98
    62ec:	br	x17

00000000000062f0 <memset@plt>:
    62f0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    62f4:	ldr	x17, [x16, #160]
    62f8:	add	x16, x16, #0xa0
    62fc:	br	x17

0000000000006300 <__sanitizer_symbolize_data@plt>:
    6300:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6304:	ldr	x17, [x16, #168]
    6308:	add	x16, x16, #0xa8
    630c:	br	x17

0000000000006310 <isatty@plt>:
    6310:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6314:	ldr	x17, [x16, #176]
    6318:	add	x16, x16, #0xb0
    631c:	br	x17

0000000000006320 <dlerror@plt>:
    6320:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6324:	ldr	x17, [x16, #184]
    6328:	add	x16, x16, #0xb8
    632c:	br	x17

0000000000006330 <__cxa_finalize@plt>:
    6330:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6334:	ldr	x17, [x16, #192]
    6338:	add	x16, x16, #0xc0
    633c:	br	x17

0000000000006340 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    6340:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6344:	ldr	x17, [x16, #200]
    6348:	add	x16, x16, #0xc8
    634c:	br	x17

0000000000006350 <getrusage@plt>:
    6350:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6354:	ldr	x17, [x16, #208]
    6358:	add	x16, x16, #0xd0
    635c:	br	x17

0000000000006360 <pthread_attr_destroy@plt>:
    6360:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6364:	ldr	x17, [x16, #216]
    6368:	add	x16, x16, #0xd8
    636c:	br	x17

0000000000006370 <real_clock_gettime@plt>:
    6370:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6374:	ldr	x17, [x16, #224]
    6378:	add	x16, x16, #0xe0
    637c:	br	x17

0000000000006380 <__cxa_demangle@plt>:
    6380:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6384:	ldr	x17, [x16, #232]
    6388:	add	x16, x16, #0xe8
    638c:	br	x17

0000000000006390 <__sanitizer_symbolize_code@plt>:
    6390:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6394:	ldr	x17, [x16, #240]
    6398:	add	x16, x16, #0xf0
    639c:	br	x17

00000000000063a0 <dl_iterate_phdr@plt>:
    63a0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    63a4:	ldr	x17, [x16, #248]
    63a8:	add	x16, x16, #0xf8
    63ac:	br	x17

00000000000063b0 <__sanitizer_dump_coverage@plt>:
    63b0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    63b4:	ldr	x17, [x16, #256]
    63b8:	add	x16, x16, #0x100
    63bc:	br	x17

00000000000063c0 <__interceptor_sigsetjmp@plt>:
    63c0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    63c4:	ldr	x17, [x16, #264]
    63c8:	add	x16, x16, #0x108
    63cc:	br	x17

00000000000063d0 <__sanitizer_get_allocated_size@plt>:
    63d0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    63d4:	ldr	x17, [x16, #272]
    63d8:	add	x16, x16, #0x110
    63dc:	br	x17

00000000000063e0 <clock_gettime@plt>:
    63e0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    63e4:	ldr	x17, [x16, #280]
    63e8:	add	x16, x16, #0x118
    63ec:	br	x17

00000000000063f0 <__sanitizer_symbolize_flush@plt>:
    63f0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    63f4:	ldr	x17, [x16, #288]
    63f8:	add	x16, x16, #0x120
    63fc:	br	x17

0000000000006400 <pthread_setspecific@plt>:
    6400:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6404:	ldr	x17, [x16, #296]
    6408:	add	x16, x16, #0x128
    640c:	br	x17

0000000000006410 <__hwasan_tag_mismatch4@plt>:
    6410:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6414:	ldr	x17, [x16, #304]
    6418:	add	x16, x16, #0x130
    641c:	br	x17

0000000000006420 <__ubsan_on_report@plt>:
    6420:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6424:	ldr	x17, [x16, #312]
    6428:	add	x16, x16, #0x138
    642c:	br	x17

0000000000006430 <__dynamic_cast@plt>:
    6430:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6434:	ldr	x17, [x16, #320]
    6438:	add	x16, x16, #0x140
    643c:	br	x17

0000000000006440 <__cxa_atexit@plt>:
    6440:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6444:	ldr	x17, [x16, #328]
    6448:	add	x16, x16, #0x148
    644c:	br	x17

0000000000006450 <snprintf@plt>:
    6450:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6454:	ldr	x17, [x16, #336]
    6458:	add	x16, x16, #0x150
    645c:	br	x17

0000000000006460 <pthread_attr_getstack@plt>:
    6460:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6464:	ldr	x17, [x16, #344]
    6468:	add	x16, x16, #0x158
    646c:	br	x17

0000000000006470 <__hwasan_test_shadow@plt>:
    6470:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6474:	ldr	x17, [x16, #352]
    6478:	add	x16, x16, #0x160
    647c:	br	x17

0000000000006480 <pthread_attr_setstacksize@plt>:
    6480:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6484:	ldr	x17, [x16, #360]
    6488:	add	x16, x16, #0x168
    648c:	br	x17

0000000000006490 <_Unwind_GetIP@plt>:
    6490:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6494:	ldr	x17, [x16, #368]
    6498:	add	x16, x16, #0x170
    649c:	br	x17

00000000000064a0 <madvise@plt>:
    64a0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    64a4:	ldr	x17, [x16, #376]
    64a8:	add	x16, x16, #0x178
    64ac:	br	x17

00000000000064b0 <usleep@plt>:
    64b0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    64b4:	ldr	x17, [x16, #384]
    64b8:	add	x16, x16, #0x180
    64bc:	br	x17

00000000000064c0 <memmove@plt>:
    64c0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    64c4:	ldr	x17, [x16, #392]
    64c8:	add	x16, x16, #0x188
    64cc:	br	x17

00000000000064d0 <__sched_cpucount@plt>:
    64d0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    64d4:	ldr	x17, [x16, #400]
    64d8:	add	x16, x16, #0x190
    64dc:	br	x17

00000000000064e0 <__hwasan_init@plt>:
    64e0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    64e4:	ldr	x17, [x16, #408]
    64e8:	add	x16, x16, #0x198
    64ec:	br	x17

00000000000064f0 <__errno_location@plt>:
    64f0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    64f4:	ldr	x17, [x16, #416]
    64f8:	add	x16, x16, #0x1a0
    64fc:	br	x17

0000000000006500 <sched_yield@plt>:
    6500:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6504:	ldr	x17, [x16, #424]
    6508:	add	x16, x16, #0x1a8
    650c:	br	x17

0000000000006510 <syslog@plt>:
    6510:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6514:	ldr	x17, [x16, #432]
    6518:	add	x16, x16, #0x1b0
    651c:	br	x17

0000000000006520 <__sanitizer_dump_trace_pc_guard_coverage@plt>:
    6520:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6524:	ldr	x17, [x16, #440]
    6528:	add	x16, x16, #0x1b8
    652c:	br	x17

0000000000006530 <__extenddftf2@plt>:
    6530:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6534:	ldr	x17, [x16, #448]
    6538:	add	x16, x16, #0x1c0
    653c:	br	x17

0000000000006540 <pthread_key_create@plt>:
    6540:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6544:	ldr	x17, [x16, #456]
    6548:	add	x16, x16, #0x1c8
    654c:	br	x17

0000000000006550 <__ubsan_handle_cfi_bad_type@plt>:
    6550:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6554:	ldr	x17, [x16, #464]
    6558:	add	x16, x16, #0x1d0
    655c:	br	x17

0000000000006560 <setrlimit@plt>:
    6560:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6564:	ldr	x17, [x16, #472]
    6568:	add	x16, x16, #0x1d8
    656c:	br	x17

0000000000006570 <getauxval@plt>:
    6570:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6574:	ldr	x17, [x16, #480]
    6578:	add	x16, x16, #0x1e0
    657c:	br	x17

0000000000006580 <__hwasan_handle_longjmp@plt>:
    6580:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6584:	ldr	x17, [x16, #488]
    6588:	add	x16, x16, #0x1e8
    658c:	br	x17

0000000000006590 <__sanitizer_free_hook@plt>:
    6590:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6594:	ldr	x17, [x16, #496]
    6598:	add	x16, x16, #0x1f0
    659c:	br	x17

00000000000065a0 <abort@plt>:
    65a0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    65a4:	ldr	x17, [x16, #504]
    65a8:	add	x16, x16, #0x1f8
    65ac:	br	x17

00000000000065b0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    65b0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    65b4:	ldr	x17, [x16, #512]
    65b8:	add	x16, x16, #0x200
    65bc:	br	x17

00000000000065c0 <sysconf@plt>:
    65c0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    65c4:	ldr	x17, [x16, #520]
    65c8:	add	x16, x16, #0x208
    65cc:	br	x17

00000000000065d0 <__extendsftf2@plt>:
    65d0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    65d4:	ldr	x17, [x16, #528]
    65d8:	add	x16, x16, #0x210
    65dc:	br	x17

00000000000065e0 <pthread_self@plt>:
    65e0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    65e4:	ldr	x17, [x16, #536]
    65e8:	add	x16, x16, #0x218
    65ec:	br	x17

00000000000065f0 <getuid@plt>:
    65f0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    65f4:	ldr	x17, [x16, #544]
    65f8:	add	x16, x16, #0x220
    65fc:	br	x17

0000000000006600 <__ubsan_default_options@plt>:
    6600:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6604:	ldr	x17, [x16, #552]
    6608:	add	x16, x16, #0x228
    660c:	br	x17

0000000000006610 <getrlimit@plt>:
    6610:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6614:	ldr	x17, [x16, #560]
    6618:	add	x16, x16, #0x230
    661c:	br	x17

0000000000006620 <sigaltstack@plt>:
    6620:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6624:	ldr	x17, [x16, #568]
    6628:	add	x16, x16, #0x238
    662c:	br	x17

0000000000006630 <__gmon_start__@plt>:
    6630:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6634:	ldr	x17, [x16, #576]
    6638:	add	x16, x16, #0x240
    663c:	br	x17

0000000000006640 <sigaction@plt>:
    6640:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6644:	ldr	x17, [x16, #584]
    6648:	add	x16, x16, #0x248
    664c:	br	x17

0000000000006650 <__sanitizer_set_report_path@plt>:
    6650:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6654:	ldr	x17, [x16, #592]
    6658:	add	x16, x16, #0x250
    665c:	br	x17

0000000000006660 <__sanitizer_print_memory_profile@plt>:
    6660:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6664:	ldr	x17, [x16, #600]
    6668:	add	x16, x16, #0x258
    666c:	br	x17

Disassembly of section .text:

0000000000006670 <__hwasan_init_frames@@Base-0xcc0>:
    6670:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    6674:	add	x0, x0, #0xd30
    6678:	strb	wzr, [x0, #736]
    667c:	ret
    6680:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    6684:	add	x0, x0, #0xac8
    6688:	b	1c5c0 <__sanitizer_set_report_fd@@Base+0x4800>
    668c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    6690:	ldr	x0, [x0, #4032]
    6694:	cbz	x0, 669c <__sanitizer_print_memory_profile@plt+0x3c>
    6698:	b	6630 <__gmon_start__@plt>
    669c:	ret
    66a0:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    66a4:	add	x0, x0, #0xca0
    66a8:	adrp	x1, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    66ac:	add	x1, x1, #0xca0
    66b0:	cmp	x1, x0
    66b4:	b.eq	66cc <__sanitizer_print_memory_profile@plt+0x6c>  // b.none
    66b8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    66bc:	ldr	x1, [x1, #3976]
    66c0:	cbz	x1, 66cc <__sanitizer_print_memory_profile@plt+0x6c>
    66c4:	mov	x16, x1
    66c8:	br	x16
    66cc:	ret
    66d0:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    66d4:	add	x0, x0, #0xca0
    66d8:	adrp	x1, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    66dc:	add	x1, x1, #0xca0
    66e0:	sub	x1, x1, x0
    66e4:	lsr	x2, x1, #63
    66e8:	add	x1, x2, x1, asr #3
    66ec:	cmp	xzr, x1, asr #1
    66f0:	asr	x1, x1, #1
    66f4:	b.eq	670c <__sanitizer_print_memory_profile@plt+0xac>  // b.none
    66f8:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    66fc:	ldr	x2, [x2, #4040]
    6700:	cbz	x2, 670c <__sanitizer_print_memory_profile@plt+0xac>
    6704:	mov	x16, x2
    6708:	br	x16
    670c:	ret
    6710:	stp	x29, x30, [sp, #-32]!
    6714:	mov	x29, sp
    6718:	str	x19, [sp, #16]
    671c:	adrp	x19, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    6720:	ldrb	w0, [x19, #3264]
    6724:	cbnz	w0, 674c <__sanitizer_print_memory_profile@plt+0xec>
    6728:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    672c:	ldr	x0, [x0, #3760]
    6730:	cbz	x0, 6740 <__sanitizer_print_memory_profile@plt+0xe0>
    6734:	adrp	x0, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
    6738:	ldr	x0, [x0, #608]
    673c:	bl	6330 <__cxa_finalize@plt>
    6740:	bl	66a0 <__sanitizer_print_memory_profile@plt+0x40>
    6744:	mov	w0, #0x1                   	// #1
    6748:	strb	w0, [x19, #3264]
    674c:	ldr	x19, [sp, #16]
    6750:	ldp	x29, x30, [sp], #32
    6754:	ret
    6758:	b	66d0 <__sanitizer_print_memory_profile@plt+0x70>
    675c:	nop
    6760:	str	x30, [sp, #-16]!
    6764:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    6768:	cbz	x0, 6780 <__sanitizer_print_memory_profile@plt+0x120>
    676c:	ldr	w1, [x0, #44]
    6770:	ldr	x30, [sp], #16
    6774:	add	w1, w1, #0x1
    6778:	str	w1, [x0, #44]
    677c:	ret
    6780:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6784:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6788:	add	x2, x2, #0x160
    678c:	add	x0, x0, #0x170
    6790:	mov	x4, #0x0                   	// #0
    6794:	mov	x3, #0x0                   	// #0
    6798:	mov	w1, #0x29                  	// #41
    679c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    67a0:	str	x30, [sp, #-16]!
    67a4:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    67a8:	cbz	x0, 67c0 <__sanitizer_print_memory_profile@plt+0x160>
    67ac:	ldr	w1, [x0, #44]
    67b0:	ldr	x30, [sp], #16
    67b4:	sub	w1, w1, #0x1
    67b8:	str	w1, [x0, #44]
    67bc:	ret
    67c0:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    67c4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    67c8:	add	x2, x2, #0x160
    67cc:	add	x0, x0, #0x170
    67d0:	mov	x4, #0x0                   	// #0
    67d4:	mov	x3, #0x0                   	// #0
    67d8:	mov	w1, #0x2e                  	// #46
    67dc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    67e0:	ands	w2, w2, #0xffff
    67e4:	b.eq	6988 <__sanitizer_print_memory_profile@plt+0x328>  // b.none
    67e8:	stp	x19, x20, [sp, #-80]!
    67ec:	sub	w2, w2, #0x1
    67f0:	stp	x23, x24, [sp, #32]
    67f4:	add	x23, x1, #0x38
    67f8:	stp	x25, x26, [sp, #48]
    67fc:	mov	x25, x0
    6800:	mov	w0, #0x38                  	// #56
    6804:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6808:	add	x26, x26, #0x1b0
    680c:	umaddl	x23, w2, w0, x23
    6810:	stp	x21, x22, [sp, #16]
    6814:	mov	x21, x1
    6818:	mov	x22, x1
    681c:	str	x30, [sp, #64]
    6820:	ldr	w2, [x22]
    6824:	cmp	w2, #0x4
    6828:	b.eq	6850 <__sanitizer_print_memory_profile@plt+0x1f0>  // b.none
    682c:	add	x22, x22, #0x38
    6830:	cmp	x22, x23
    6834:	b.ne	6820 <__sanitizer_print_memory_profile@plt+0x1c0>  // b.any
    6838:	ldp	x21, x22, [sp, #16]
    683c:	ldp	x23, x24, [sp, #32]
    6840:	ldp	x25, x26, [sp, #48]
    6844:	ldr	x30, [sp, #64]
    6848:	ldp	x19, x20, [sp], #80
    684c:	ret
    6850:	ldr	x19, [x22, #16]
    6854:	ldr	x24, [x22, #40]
    6858:	add	x19, x25, x19
    685c:	add	x24, x19, x24
    6860:	cmp	x19, x24
    6864:	b.cs	682c <__sanitizer_print_memory_profile@plt+0x1cc>  // b.hs, b.nlast
    6868:	mov	x0, x19
    686c:	ldr	w2, [x19, #8]
    6870:	cmp	w2, #0x3
    6874:	ldr	w20, [x0], #12
    6878:	add	x20, x20, #0x3
    687c:	and	x20, x20, #0xfffffffffffffffc
    6880:	add	x20, x0, x20
    6884:	b.eq	68c0 <__sanitizer_print_memory_profile@plt+0x260>  // b.none
    6888:	ldr	w19, [x19, #4]
    688c:	add	x19, x19, #0x3
    6890:	and	x19, x19, #0xfffffffffffffffc
    6894:	add	x19, x20, x19
    6898:	cmp	x24, x19
    689c:	b.ls	682c <__sanitizer_print_memory_profile@plt+0x1cc>  // b.plast
    68a0:	mov	x0, x19
    68a4:	ldr	w2, [x19, #8]
    68a8:	cmp	w2, #0x3
    68ac:	ldr	w20, [x0], #12
    68b0:	add	x20, x20, #0x3
    68b4:	and	x20, x20, #0xfffffffffffffffc
    68b8:	add	x20, x0, x20
    68bc:	b.ne	6888 <__sanitizer_print_memory_profile@plt+0x228>  // b.any
    68c0:	mov	x1, x26
    68c4:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
    68c8:	cbnz	w0, 6888 <__sanitizer_print_memory_profile@plt+0x228>
    68cc:	mov	x4, #0x0                   	// #0
    68d0:	mov	x3, #0xffffffffffffffff    	// #-1
    68d4:	nop
    68d8:	ldr	w1, [x21]
    68dc:	cmp	w1, #0x1
    68e0:	b.ne	6904 <__sanitizer_print_memory_profile@plt+0x2a4>  // b.any
    68e4:	ldr	x1, [x21, #16]
    68e8:	ldr	x2, [x21, #40]
    68ec:	add	x1, x25, x1
    68f0:	cmp	x3, x1
    68f4:	add	x2, x1, x2
    68f8:	csel	x3, x3, x1, ls  // ls = plast
    68fc:	cmp	x4, x2
    6900:	csel	x4, x4, x2, cs  // cs = hs, nlast
    6904:	add	x21, x21, #0x38
    6908:	cmp	x21, x23
    690c:	b.ne	68d8 <__sanitizer_print_memory_profile@plt+0x278>  // b.any
    6910:	sub	x3, x4, x3
    6914:	mov	x0, #0x100000000           	// #4294967296
    6918:	cmp	x3, x0
    691c:	b.hi	698c <__sanitizer_print_memory_profile@plt+0x32c>  // b.pmore
    6920:	mov	x0, #0x1000000000000       	// #281474976710656
    6924:	cmp	x4, x0
    6928:	b.hi	699c <__sanitizer_print_memory_profile@plt+0x33c>  // b.pmore
    692c:	ldpsw	x0, x1, [x20]
    6930:	add	x20, x19, x0
    6934:	add	x19, x19, x1
    6938:	cmp	x20, x19
    693c:	b.ne	6950 <__sanitizer_print_memory_profile@plt+0x2f0>  // b.any
    6940:	b	6838 <__sanitizer_print_memory_profile@plt+0x1d8>
    6944:	add	x20, x20, #0x8
    6948:	cmp	x19, x20
    694c:	b.eq	6838 <__sanitizer_print_memory_profile@plt+0x1d8>  // b.none
    6950:	ldr	w21, [x20, #4]
    6954:	ldrsw	x22, [x20]
    6958:	and	x23, x21, #0xfffff0
    695c:	add	x22, x20, x22
    6960:	lsr	w2, w21, #24
    6964:	mov	x0, x22
    6968:	mov	x1, x23
    696c:	bl	eaf8 <__hwasan_memmove@@Base+0x130>
    6970:	ands	w2, w21, #0xf
    6974:	b.eq	6944 <__sanitizer_print_memory_profile@plt+0x2e4>  // b.none
    6978:	add	x0, x22, x23
    697c:	mov	x1, #0x10                  	// #16
    6980:	bl	eaf8 <__hwasan_memmove@@Base+0x130>
    6984:	b	6944 <__sanitizer_print_memory_profile@plt+0x2e4>
    6988:	ret
    698c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6990:	add	x0, x0, #0x1b8
    6994:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    6998:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    699c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    69a0:	add	x0, x0, #0x1f0
    69a4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    69a8:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    69ac:	nop
    69b0:	mov	x2, x0
    69b4:	str	x30, [sp, #-16]!
    69b8:	ldr	x0, [x0]
    69bc:	ldr	x1, [x2, #16]
    69c0:	ldrh	w2, [x2, #24]
    69c4:	bl	67e0 <__sanitizer_print_memory_profile@plt+0x180>
    69c8:	mov	w0, #0x0                   	// #0
    69cc:	ldr	x30, [sp], #16
    69d0:	ret
    69d4:	nop
    69d8:	stp	x19, x20, [sp, #-368]!
    69dc:	stp	x25, x26, [sp, #48]
    69e0:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    69e4:	add	x20, sp, #0x58
    69e8:	ldr	x26, [x25, #4056]
    69ec:	stp	x21, x22, [sp, #16]
    69f0:	mov	w21, #0x1                   	// #1
    69f4:	mov	x0, x26
    69f8:	stp	x23, x24, [sp, #32]
    69fc:	add	x24, sp, #0x78
    6a00:	str	x30, [sp, #64]
    6a04:	bl	17de0 <__sanitizer_set_report_fd@@Base+0x20>
    6a08:	mov	x1, x26
    6a0c:	mov	x0, x24
    6a10:	bl	17ed8 <__sanitizer_set_report_fd@@Base+0x118>
    6a14:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    6a18:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6a1c:	add	x0, x0, #0x230
    6a20:	bl	1c420 <__sanitizer_set_report_fd@@Base+0x4660>
    6a24:	mov	x6, x0
    6a28:	mov	w5, #0x14                  	// #20
    6a2c:	mov	w4, #0x2                   	// #2
    6a30:	mov	x3, #0x8000                	// #32768
    6a34:	mov	w2, #0x63                  	// #99
    6a38:	mov	x1, x24
    6a3c:	mov	x0, x26
    6a40:	str	x6, [sp, #128]
    6a44:	add	x22, x22, #0x8b8
    6a48:	strb	w21, [sp, #155]
    6a4c:	adrp	x23, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
    6a50:	str	w5, [sp, #156]
    6a54:	add	x23, x23, #0x328
    6a58:	strb	wzr, [sp, #188]
    6a5c:	str	w4, [sp, #208]
    6a60:	str	x3, [sp, #224]
    6a64:	strb	w21, [sp, #241]
    6a68:	str	w2, [sp, #344]
    6a6c:	bl	17ed8 <__sanitizer_set_report_fd@@Base+0x118>
    6a70:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6a74:	mov	x1, #0x100                 	// #256
    6a78:	movk	x1, #0x1, lsl #16
    6a7c:	mov	w2, #0x1000                	// #4096
    6a80:	ldr	q0, [x0, #3248]
    6a84:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    6a88:	add	x19, x0, #0xcd0
    6a8c:	movk	x1, #0x1, lsl #32
    6a90:	movk	x1, #0x100, lsl #48
    6a94:	str	x1, [x0, #3280]
    6a98:	mov	w1, #0x400                 	// #1024
    6a9c:	mov	x0, x20
    6aa0:	strb	w21, [x19, #12]
    6aa4:	strb	w21, [x19, #32]
    6aa8:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    6aac:	stp	xzr, xzr, [x19, #40]
    6ab0:	str	w2, [x19, #8]
    6ab4:	str	q0, [x19, #16]
    6ab8:	str	w1, [x19, #36]
    6abc:	strb	wzr, [x19, #56]
    6ac0:	bl	19c28 <__sanitizer_set_report_fd@@Base+0x1e68>
    6ac4:	ldr	x21, [x21, #3632]
    6ac8:	mov	x1, #0x10                  	// #16
    6acc:	mov	x0, x21
    6ad0:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6ad4:	mov	x2, x0
    6ad8:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6adc:	add	x3, x3, #0x248
    6ae0:	mov	x0, x20
    6ae4:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6ae8:	add	x1, x1, #0x270
    6aec:	stp	x22, x19, [x2]
    6af0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6af4:	mov	x1, #0x10                  	// #16
    6af8:	mov	x0, x21
    6afc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6b00:	mov	x2, x0
    6b04:	str	x22, [x0]
    6b08:	mov	x3, x23
    6b0c:	add	x1, x19, #0x1
    6b10:	mov	x0, x20
    6b14:	str	x1, [x2, #8]
    6b18:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6b1c:	add	x1, x1, #0x280
    6b20:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6b24:	mov	x1, #0x10                  	// #16
    6b28:	mov	x0, x21
    6b2c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6b30:	mov	x2, x0
    6b34:	add	x4, x19, #0x2
    6b38:	mov	x3, x23
    6b3c:	mov	x0, x20
    6b40:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6b44:	stp	x22, x4, [x2]
    6b48:	add	x1, x1, #0x290
    6b4c:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6b50:	mov	x1, #0x10                  	// #16
    6b54:	mov	x0, x21
    6b58:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6b5c:	mov	x2, x0
    6b60:	add	x4, x19, #0x3
    6b64:	mov	x3, x23
    6b68:	mov	x0, x20
    6b6c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6b70:	stp	x22, x4, [x2]
    6b74:	add	x1, x1, #0x2a0
    6b78:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6b7c:	mov	x1, #0x10                  	// #16
    6b80:	mov	x0, x21
    6b84:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6b88:	mov	x2, x0
    6b8c:	add	x4, x19, #0x4
    6b90:	mov	x3, x23
    6b94:	mov	x0, x20
    6b98:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6b9c:	stp	x22, x4, [x2]
    6ba0:	add	x1, x1, #0x2b0
    6ba4:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6ba8:	mov	x1, #0x10                  	// #16
    6bac:	mov	x0, x21
    6bb0:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6bb4:	mov	x2, x0
    6bb8:	add	x4, x19, #0x5
    6bbc:	mov	x3, x23
    6bc0:	mov	x0, x20
    6bc4:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6bc8:	stp	x22, x4, [x2]
    6bcc:	add	x1, x1, #0x2c0
    6bd0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6bd4:	mov	x1, #0x10                  	// #16
    6bd8:	mov	x0, x21
    6bdc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6be0:	mov	x2, x0
    6be4:	add	x4, x19, #0x6
    6be8:	mov	x3, x23
    6bec:	mov	x0, x20
    6bf0:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6bf4:	stp	x22, x4, [x2]
    6bf8:	add	x1, x1, #0x2c8
    6bfc:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6c00:	mov	x1, #0x10                  	// #16
    6c04:	mov	x0, x21
    6c08:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6c0c:	mov	x2, x0
    6c10:	add	x4, x19, #0x7
    6c14:	mov	x3, x23
    6c18:	mov	x0, x20
    6c1c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6c20:	stp	x22, x4, [x2]
    6c24:	add	x1, x1, #0x2e8
    6c28:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    6c2c:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6c30:	add	x23, x23, #0x8d8
    6c34:	mov	x1, #0x10                  	// #16
    6c38:	mov	x0, x21
    6c3c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6c40:	mov	x2, x0
    6c44:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6c48:	add	x0, x19, #0x8
    6c4c:	add	x3, x3, #0x2f8
    6c50:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6c54:	stp	x23, x0, [x2]
    6c58:	add	x1, x1, #0x378
    6c5c:	mov	x0, x20
    6c60:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6c64:	mov	x1, #0x10                  	// #16
    6c68:	mov	x0, x21
    6c6c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6c70:	mov	x2, x0
    6c74:	add	x4, x19, #0xc
    6c78:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6c7c:	add	x3, x3, #0x390
    6c80:	mov	x0, x20
    6c84:	stp	x22, x4, [x2]
    6c88:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6c8c:	add	x1, x1, #0x420
    6c90:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6c94:	mov	x1, #0x10                  	// #16
    6c98:	mov	x0, x21
    6c9c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6ca0:	mov	x2, x0
    6ca4:	add	x4, x19, #0x10
    6ca8:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6cac:	add	x3, x3, #0x438
    6cb0:	mov	x0, x20
    6cb4:	stp	x23, x4, [x2]
    6cb8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6cbc:	add	x1, x1, #0x4b8
    6cc0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6cc4:	mov	x1, #0x10                  	// #16
    6cc8:	mov	x0, x21
    6ccc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6cd0:	mov	x2, x0
    6cd4:	add	x4, x19, #0x14
    6cd8:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6cdc:	add	x3, x3, #0x4d0
    6ce0:	mov	x0, x20
    6ce4:	stp	x23, x4, [x2]
    6ce8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6cec:	add	x1, x1, #0x500
    6cf0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6cf4:	mov	x1, #0x10                  	// #16
    6cf8:	mov	x0, x21
    6cfc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6d00:	mov	x2, x0
    6d04:	add	x4, x19, #0x18
    6d08:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6d0c:	add	x3, x3, #0x518
    6d10:	mov	x0, x20
    6d14:	stp	x23, x4, [x2]
    6d18:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6d1c:	add	x1, x1, #0x540
    6d20:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6d24:	mov	x1, #0x10                  	// #16
    6d28:	mov	x0, x21
    6d2c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6d30:	mov	x2, x0
    6d34:	add	x4, x19, #0x1c
    6d38:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6d3c:	add	x3, x3, #0x550
    6d40:	mov	x0, x20
    6d44:	stp	x23, x4, [x2]
    6d48:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6d4c:	add	x1, x1, #0x5e0
    6d50:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6d54:	mov	x1, #0x10                  	// #16
    6d58:	mov	x0, x21
    6d5c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6d60:	mov	x2, x0
    6d64:	add	x4, x19, #0x20
    6d68:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6d6c:	add	x3, x3, #0x5f8
    6d70:	mov	x0, x20
    6d74:	stp	x22, x4, [x2]
    6d78:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6d7c:	add	x1, x1, #0x628
    6d80:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6d84:	mov	x1, #0x10                  	// #16
    6d88:	mov	x0, x21
    6d8c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6d90:	mov	x2, x0
    6d94:	add	x4, x19, #0x24
    6d98:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6d9c:	add	x3, x3, #0x640
    6da0:	mov	x0, x20
    6da4:	stp	x23, x4, [x2]
    6da8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6dac:	add	x1, x1, #0x6c8
    6db0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6db4:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    6db8:	mov	x1, #0x10                  	// #16
    6dbc:	mov	x0, x21
    6dc0:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6dc4:	mov	x2, x0
    6dc8:	add	x23, x23, #0x8f8
    6dcc:	add	x0, x19, #0x28
    6dd0:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6dd4:	add	x3, x3, #0x6e0
    6dd8:	stp	x23, x0, [x2]
    6ddc:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6de0:	mov	x0, x20
    6de4:	add	x1, x1, #0x710
    6de8:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6dec:	mov	x1, #0x10                  	// #16
    6df0:	mov	x0, x21
    6df4:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6df8:	mov	x2, x0
    6dfc:	add	x4, x19, #0x30
    6e00:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6e04:	add	x3, x3, #0x728
    6e08:	mov	x0, x20
    6e0c:	stp	x23, x4, [x2]
    6e10:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6e14:	add	x1, x1, #0x758
    6e18:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6e1c:	add	x19, x19, #0x38
    6e20:	mov	x1, #0x10                  	// #16
    6e24:	mov	x0, x21
    6e28:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6e2c:	mov	x2, x0
    6e30:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6e34:	add	x3, x3, #0x770
    6e38:	mov	x0, x20
    6e3c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6e40:	stp	x22, x19, [x2]
    6e44:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    6e48:	add	x1, x1, #0x7c0
    6e4c:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
    6e50:	mov	x1, x26
    6e54:	mov	x0, x20
    6e58:	bl	180f0 <__sanitizer_set_report_fd@@Base+0x330>
    6e5c:	ldr	x19, [x19, #3704]
    6e60:	mov	x0, x19
    6e64:	bl	2f660 <__ubsan_default_options@@Base+0x18>
    6e68:	mov	x0, x24
    6e6c:	bl	19c28 <__sanitizer_set_report_fd@@Base+0x1e68>
    6e70:	mov	x1, x19
    6e74:	mov	x0, x24
    6e78:	bl	2f678 <__ubsan_default_options@@Base+0x30>
    6e7c:	mov	x0, x24
    6e80:	mov	x1, x26
    6e84:	bl	180f0 <__sanitizer_set_report_fd@@Base+0x330>
    6e88:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    6e8c:	ldr	x0, [x0, #3640]
    6e90:	cbz	x0, 6ea8 <__sanitizer_print_memory_profile@plt+0x848>
    6e94:	bl	6210 <__hwasan_default_options@plt>
    6e98:	mov	x1, x0
    6e9c:	mov	x2, #0x0                   	// #0
    6ea0:	mov	x0, x20
    6ea4:	bl	199c0 <__sanitizer_set_report_fd@@Base+0x1c00>
    6ea8:	bl	2f658 <__ubsan_default_options@@Base+0x10>
    6eac:	mov	x1, x0
    6eb0:	mov	x2, #0x0                   	// #0
    6eb4:	mov	x0, x24
    6eb8:	bl	199c0 <__sanitizer_set_report_fd@@Base+0x1c00>
    6ebc:	mov	x0, x20
    6ec0:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6ec4:	add	x1, x1, #0x7d8
    6ec8:	bl	19938 <__sanitizer_set_report_fd@@Base+0x1b78>
    6ecc:	mov	x0, x24
    6ed0:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    6ed4:	add	x1, x1, #0x7e8
    6ed8:	bl	19938 <__sanitizer_set_report_fd@@Base+0x1b78>
    6edc:	ldr	x0, [x25, #4056]
    6ee0:	bl	19030 <__sanitizer_set_report_fd@@Base+0x1270>
    6ee4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    6ee8:	ldr	x0, [x0, #3816]
    6eec:	ldr	w0, [x0]
    6ef0:	cbnz	w0, 6f18 <__sanitizer_print_memory_profile@plt+0x8b8>
    6ef4:	ldr	x25, [x25, #4056]
    6ef8:	ldrb	w0, [x25, #122]
    6efc:	cbnz	w0, 6f28 <__sanitizer_print_memory_profile@plt+0x8c8>
    6f00:	ldp	x21, x22, [sp, #16]
    6f04:	ldp	x23, x24, [sp, #32]
    6f08:	ldp	x25, x26, [sp, #48]
    6f0c:	ldr	x30, [sp, #64]
    6f10:	ldp	x19, x20, [sp], #368
    6f14:	ret
    6f18:	bl	192c8 <__sanitizer_set_report_fd@@Base+0x1508>
    6f1c:	ldr	x25, [x25, #4056]
    6f20:	ldrb	w0, [x25, #122]
    6f24:	cbz	w0, 6f00 <__sanitizer_print_memory_profile@plt+0x8a0>
    6f28:	mov	x0, x20
    6f2c:	bl	193a8 <__sanitizer_set_report_fd@@Base+0x15e8>
    6f30:	ldp	x21, x22, [sp, #16]
    6f34:	ldp	x23, x24, [sp, #32]
    6f38:	ldp	x25, x26, [sp, #48]
    6f3c:	ldr	x30, [sp, #64]
    6f40:	ldp	x19, x20, [sp], #368
    6f44:	ret
    6f48:	stp	x19, x20, [sp, #-48]!
    6f4c:	stp	x21, x22, [sp, #16]
    6f50:	adrp	x21, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    6f54:	add	x0, x21, #0xcd0
    6f58:	ldr	w0, [x0, #64]
    6f5c:	str	x30, [sp, #32]
    6f60:	cbz	w0, 6f74 <__sanitizer_print_memory_profile@plt+0x914>
    6f64:	ldp	x21, x22, [sp, #16]
    6f68:	ldr	x30, [sp, #32]
    6f6c:	ldp	x19, x20, [sp], #48
    6f70:	ret
    6f74:	bl	d6f0 <__interceptor_vfork@@Base+0x1d0>
    6f78:	bl	d788 <__interceptor_vfork@@Base+0x268>
    6f7c:	tst	w0, #0xff
    6f80:	b.eq	70dc <__sanitizer_print_memory_profile@plt+0xa7c>  // b.none
    6f84:	bl	dd48 <__interceptor_vfork@@Base+0x828>
    6f88:	bl	11880 <__hwasan_tag_mismatch_v2@@Base+0x688>
    6f8c:	mov	x19, x0
    6f90:	add	x0, x0, #0x30
    6f94:	mov	w2, #0x1                   	// #1
    6f98:	ldxrb	w1, [x0]
    6f9c:	stxrb	w3, w2, [x0]
    6fa0:	cbnz	w3, 6f98 <__sanitizer_print_memory_profile@plt+0x938>
    6fa4:	dmb	ish
    6fa8:	tst	w1, #0xff
    6fac:	b.eq	6fb4 <__sanitizer_print_memory_profile@plt+0x954>  // b.none
    6fb0:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    6fb4:	ldr	x20, [x19, #32]
    6fb8:	ldr	x0, [x19, #16]
    6fbc:	cbz	x20, 7068 <__sanitizer_print_memory_profile@plt+0xa08>
    6fc0:	ldr	x1, [x20, #2664]
    6fc4:	str	x1, [x19, #32]
    6fc8:	add	x2, x0, #0xa80
    6fcc:	mov	x22, x20
    6fd0:	sub	x0, x20, x0
    6fd4:	mov	w1, #0x0                   	// #0
    6fd8:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    6fdc:	ldr	x0, [x19, #40]
    6fe0:	str	x0, [x20, #2664]
    6fe4:	str	x20, [x19, #40]
    6fe8:	dmb	ish
    6fec:	strb	wzr, [x19, #48]
    6ff0:	ldr	x2, [x19, #16]
    6ff4:	mov	x0, x20
    6ff8:	sub	x1, x22, x2
    6ffc:	bl	11390 <__hwasan_tag_mismatch_v2@@Base+0x198>
    7000:	add	x0, x19, #0x48
    7004:	mov	w2, #0x1                   	// #1
    7008:	ldxrb	w1, [x0]
    700c:	stxrb	w3, w2, [x0]
    7010:	cbnz	w3, 7008 <__sanitizer_print_memory_profile@plt+0x9a8>
    7014:	dmb	ish
    7018:	tst	w1, #0xff
    701c:	b.eq	7024 <__sanitizer_print_memory_profile@plt+0x9c4>  // b.none
    7020:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    7024:	ldp	x0, x2, [x20, #8]
    7028:	ldr	x1, [x19, #64]
    702c:	add	x0, x0, x1
    7030:	ldr	x1, [x19, #56]
    7034:	sub	x0, x0, x2
    7038:	str	x0, [x19, #64]
    703c:	add	x0, x1, #0x1
    7040:	str	x0, [x19, #56]
    7044:	dmb	ish
    7048:	strb	wzr, [x19, #72]
    704c:	add	x21, x21, #0xcd0
    7050:	mov	w0, #0x1                   	// #1
    7054:	ldr	x30, [sp, #32]
    7058:	str	w0, [x21, #64]
    705c:	ldp	x21, x22, [sp, #16]
    7060:	ldp	x19, x20, [sp], #48
    7064:	ret
    7068:	ldr	x1, [x19]
    706c:	lsl	x2, x0, #1
    7070:	sub	x2, x2, #0x1
    7074:	tst	x2, x1
    7078:	b.ne	70bc <__sanitizer_print_memory_profile@plt+0xa5c>  // b.any
    707c:	ldr	x2, [x19, #24]
    7080:	add	x22, x1, x0
    7084:	ldr	x0, [x19, #8]
    7088:	add	x1, x1, x2
    708c:	str	x1, [x19]
    7090:	mov	x20, x22
    7094:	cmp	x1, x0
    7098:	b.ls	6fdc <__sanitizer_print_memory_profile@plt+0x97c>  // b.plast
    709c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    70a0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    70a4:	add	x2, x2, #0x8b8
    70a8:	add	x0, x0, #0x868
    70ac:	mov	x4, #0x0                   	// #0
    70b0:	mov	x3, #0x0                   	// #0
    70b4:	mov	w1, #0xc3                  	// #195
    70b8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    70bc:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    70c0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    70c4:	add	x2, x2, #0x838
    70c8:	add	x0, x0, #0x868
    70cc:	mov	x4, #0x0                   	// #0
    70d0:	mov	x3, #0x0                   	// #0
    70d4:	mov	w1, #0xc0                  	// #192
    70d8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    70dc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    70e0:	add	x0, x0, #0x7f8
    70e4:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    70e8:	bl	1e5b0 <__sanitizer_set_report_fd@@Base+0x67f0>
    70ec:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    70f0:	str	x30, [sp, #-16]!
    70f4:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    70f8:	mov	x1, x0
    70fc:	mov	w0, #0x0                   	// #0
    7100:	cbz	x1, 7110 <__sanitizer_print_memory_profile@plt+0xab0>
    7104:	ldr	w0, [x1, #44]
    7108:	cmp	w0, #0x0
    710c:	cset	w0, ne  // ne = any
    7110:	ldr	x30, [sp], #16
    7114:	ret
    7118:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    711c:	add	x0, x0, #0xcd0
    7120:	ret
    7124:	nop
    7128:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    712c:	mov	x4, #0x100                 	// #256
    7130:	movk	x4, #0x1, lsl #16
    7134:	mov	w3, #0x1000                	// #4096
    7138:	ldr	q0, [x1, #3248]
    713c:	movk	x4, #0x1, lsl #32
    7140:	mov	w1, #0x1                   	// #1
    7144:	movk	x4, #0x100, lsl #48
    7148:	mov	w2, #0x400                 	// #1024
    714c:	str	x4, [x0]
    7150:	str	w3, [x0, #8]
    7154:	strb	w1, [x0, #12]
    7158:	str	q0, [x0, #16]
    715c:	strb	w1, [x0, #32]
    7160:	str	w2, [x0, #36]
    7164:	stp	xzr, xzr, [x0, #40]
    7168:	strb	wzr, [x0, #56]
    716c:	ret
    7170:	ret
    7174:	nop
    7178:	stp	x19, x20, [sp, #-64]!
    717c:	mov	x19, x0
    7180:	mov	w20, w5
    7184:	stp	x21, x22, [sp, #16]
    7188:	mov	x21, x2
    718c:	mov	x22, x3
    7190:	stp	x23, x24, [sp, #32]
    7194:	mov	x23, x1
    7198:	and	w24, w4, #0xff
    719c:	str	x30, [sp, #48]
    71a0:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    71a4:	cbz	x0, 7240 <__sanitizer_print_memory_profile@plt+0xbe0>
    71a8:	cbz	w24, 71dc <__sanitizer_print_memory_profile@plt+0xb7c>
    71ac:	mov	x3, x21
    71b0:	mov	x2, x23
    71b4:	mov	w1, w20
    71b8:	mov	w7, #0x1                   	// #1
    71bc:	ldp	x5, x6, [x0, #8]
    71c0:	mov	x0, x19
    71c4:	ldp	x21, x22, [sp, #16]
    71c8:	mov	x4, #0x0                   	// #0
    71cc:	ldp	x23, x24, [sp, #32]
    71d0:	ldr	x30, [sp, #48]
    71d4:	ldp	x19, x20, [sp], #64
    71d8:	b	28300 <__sanitizer_cov_dump@@Base+0x17a0>
    71dc:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    71e0:	mov	x5, x0
    71e4:	cbz	x0, 7258 <__sanitizer_print_memory_profile@plt+0xbf8>
    71e8:	ldr	w6, [x5, #44]
    71ec:	mov	x4, x22
    71f0:	mov	x3, x21
    71f4:	mov	x2, x23
    71f8:	add	w6, w6, #0x1
    71fc:	mov	w1, w20
    7200:	mov	x0, x19
    7204:	str	w6, [x5, #44]
    7208:	mov	w7, #0x0                   	// #0
    720c:	mov	x6, #0x0                   	// #0
    7210:	mov	x5, #0x0                   	// #0
    7214:	bl	28300 <__sanitizer_cov_dump@@Base+0x17a0>
    7218:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    721c:	cbz	x0, 7278 <__sanitizer_print_memory_profile@plt+0xc18>
    7220:	ldr	w1, [x0, #44]
    7224:	ldp	x21, x22, [sp, #16]
    7228:	sub	w1, w1, #0x1
    722c:	str	w1, [x0, #44]
    7230:	ldp	x23, x24, [sp, #32]
    7234:	ldr	x30, [sp, #48]
    7238:	ldp	x19, x20, [sp], #64
    723c:	ret
    7240:	str	wzr, [x19, #8]
    7244:	ldp	x21, x22, [sp, #16]
    7248:	ldp	x23, x24, [sp, #32]
    724c:	ldr	x30, [sp, #48]
    7250:	ldp	x19, x20, [sp], #64
    7254:	ret
    7258:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    725c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    7260:	add	x2, x2, #0x160
    7264:	add	x0, x0, #0x170
    7268:	mov	x4, #0x0                   	// #0
    726c:	mov	x3, #0x0                   	// #0
    7270:	mov	w1, #0x29                  	// #41
    7274:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    7278:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    727c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    7280:	add	x2, x2, #0x160
    7284:	add	x0, x0, #0x170
    7288:	mov	x4, #0x0                   	// #0
    728c:	mov	x3, #0x0                   	// #0
    7290:	mov	w1, #0x2e                  	// #46
    7294:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    7298:	sub	sp, sp, #0x840
    729c:	mov	w7, w1
    72a0:	mov	x6, x3
    72a4:	mov	x5, x2
    72a8:	mov	x1, x0
    72ac:	mov	x3, x5
    72b0:	stp	x29, x30, [sp]
    72b4:	mov	x29, sp
    72b8:	mov	x5, x4
    72bc:	mov	w2, w7
    72c0:	mov	x4, x6
    72c4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    72c8:	add	x0, x0, #0x900
    72cc:	str	x19, [sp, #16]
    72d0:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    72d4:	add	x19, x29, #0x28
    72d8:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    72dc:	add	x1, x19, #0x10
    72e0:	str	x1, [x29, #40]
    72e4:	ldr	w0, [x0, #3348]
    72e8:	str	xzr, [x29, #48]
    72ec:	str	xzr, [x29, #2104]
    72f0:	cbnz	w0, 7300 <__sanitizer_print_memory_profile@plt+0xca0>
    72f4:	mov	x0, x19
    72f8:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
    72fc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    7300:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
    7304:	mov	x1, x0
    7308:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    730c:	mov	x2, x29
    7310:	mov	x0, x19
    7314:	mov	w5, #0x100                 	// #256
    7318:	ldr	x4, [x4, #4056]
    731c:	mov	x3, #0x0                   	// #0
    7320:	str	x29, [x29, #2104]
    7324:	ldrb	w4, [x4, #33]
    7328:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    732c:	b	72f4 <__sanitizer_print_memory_profile@plt+0xc94>

0000000000007330 <__hwasan_init_frames@@Base>:
    7330:	ret
    7334:	nop

0000000000007338 <__hwasan_init_static@@Base>:
    7338:	str	x30, [sp, #-16]!
    733c:	bl	c558 <__sanitizer_get_allocated_size@@Base+0x33a8>
    7340:	bl	6f48 <__sanitizer_print_memory_profile@plt+0x8e8>
    7344:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7348:	mov	x0, #0x0                   	// #0
    734c:	ldr	x30, [sp], #16
    7350:	ldr	x1, [x1, #3784]
    7354:	ldrh	w2, [x1, #56]
    7358:	ldr	x3, [x1, #32]
    735c:	add	x1, x1, x3
    7360:	b	67e0 <__sanitizer_print_memory_profile@plt+0x180>
    7364:	nop

0000000000007368 <__hwasan_init@@Base>:
    7368:	stp	x19, x20, [sp, #-32]!
    736c:	adrp	x19, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    7370:	add	x0, x19, #0xcd0
    7374:	ldrb	w1, [x0, #72]
    7378:	str	x30, [sp, #16]
    737c:	cbnz	w1, 7494 <__hwasan_init@@Base+0x12c>
    7380:	ldr	w1, [x0, #68]
    7384:	cbz	w1, 7394 <__hwasan_init@@Base+0x2c>
    7388:	ldr	x30, [sp, #16]
    738c:	ldp	x19, x20, [sp], #32
    7390:	ret
    7394:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7398:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    739c:	add	x2, x2, #0x968
    73a0:	mov	w3, #0x1                   	// #1
    73a4:	ldr	x1, [x1, #4024]
    73a8:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    73ac:	strb	w3, [x0, #72]
    73b0:	str	x2, [x1]
    73b4:	bl	23c60 <__sanitizer_sandbox_on_notify@@Base+0x6d8>
    73b8:	bl	14e78 <_ZdaPvRKSt9nothrow_t@@Base+0x31b8>
    73bc:	bl	69d8 <__sanitizer_print_memory_profile@plt+0x378>
    73c0:	adrp	x0, 7000 <__sanitizer_print_memory_profile@plt+0x9a0>
    73c4:	add	x0, x0, #0x298
    73c8:	bl	23080 <__sanitizer_on_print@@Base+0x3820>
    73cc:	ldr	x20, [x20, #4056]
    73d0:	ldr	x0, [x20, #40]
    73d4:	bl	6650 <__sanitizer_set_report_path@plt>
    73d8:	bl	e330 <__interceptor_vfork@@Base+0xe10>
    73dc:	bl	24578 <__sanitizer_sandbox_on_notify@@Base+0xff0>
    73e0:	bl	6f48 <__sanitizer_print_memory_profile@plt+0x8e8>
    73e4:	mov	x1, #0x0                   	// #0
    73e8:	adrp	x0, 6000 <__hwasan_tls@@Base+0x6000>
    73ec:	add	x0, x0, #0x9b0
    73f0:	bl	63a0 <dl_iterate_phdr@plt>
    73f4:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    73f8:	bl	11240 <__hwasan_tag_mismatch_v2@@Base+0x48>
    73fc:	bl	de78 <__interceptor_vfork@@Base+0x958>
    7400:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7404:	ldr	x0, [x0, #3960]
    7408:	bl	1f850 <__sanitizer_set_report_fd@@Base+0x7a90>
    740c:	bl	24268 <__sanitizer_sandbox_on_notify@@Base+0xce0>
    7410:	bl	d480 <__interceptor_longjmp@@Base+0x78>
    7414:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7418:	ldr	x0, [x0, #3768]
    741c:	bl	24990 <__sanitizer_sandbox_on_notify@@Base+0x1408>
    7420:	bl	df80 <__interceptor_vfork@@Base+0xa60>
    7424:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
    7428:	adrp	x2, 6000 <__hwasan_tls@@Base+0x6000>
    742c:	adrp	x1, 6000 <__hwasan_tls@@Base+0x6000>
    7430:	add	x2, x2, #0x7a0
    7434:	add	x1, x1, #0x760
    7438:	bl	292a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa78>
    743c:	ldrb	w0, [x20, #169]
    7440:	ldr	x1, [x20, #176]
    7444:	bl	265b8 <__sanitizer_sandbox_on_notify@@Base+0x3030>
    7448:	bl	e2a0 <__interceptor_vfork@@Base+0xd80>
    744c:	bl	e250 <__interceptor_vfork@@Base+0xd30>
    7450:	bl	87f8 <__sanitizer_print_stack_trace@@Base+0x5e0>
    7454:	bl	2f5d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6db0>
    7458:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    745c:	ldr	x0, [x0, #3816]
    7460:	ldr	w0, [x0]
    7464:	cbnz	w0, 7484 <__hwasan_init@@Base+0x11c>
    7468:	add	x19, x19, #0xcd0
    746c:	mov	w0, #0x1                   	// #1
    7470:	ldr	x30, [sp, #16]
    7474:	str	w0, [x19, #68]
    7478:	strb	wzr, [x19, #72]
    747c:	ldp	x19, x20, [sp], #32
    7480:	ret
    7484:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    7488:	add	x0, x0, #0x980
    748c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    7490:	b	7468 <__hwasan_init@@Base+0x100>
    7494:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    7498:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    749c:	add	x2, x2, #0x940
    74a0:	add	x0, x0, #0x170
    74a4:	mov	x4, #0x0                   	// #0
    74a8:	mov	x3, #0x0                   	// #0
    74ac:	mov	w1, #0x162                 	// #354
    74b0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    74b4:	nop

00000000000074b8 <__hwasan_library_loaded@@Base>:
    74b8:	b	67e0 <__sanitizer_print_memory_profile@plt+0x180>
    74bc:	nop

00000000000074c0 <__hwasan_library_unloaded@@Base>:
    74c0:	ands	w2, w2, #0xffff
    74c4:	b.eq	7538 <__hwasan_library_unloaded@@Base+0x78>  // b.none
    74c8:	sub	w2, w2, #0x1
    74cc:	stp	x19, x20, [sp, #-32]!
    74d0:	and	x20, x2, #0xffff
    74d4:	mov	x19, x1
    74d8:	add	x1, x20, #0x1
    74dc:	stp	x21, x30, [sp, #16]
    74e0:	mov	x21, x0
    74e4:	lsl	x20, x1, #3
    74e8:	sub	x20, x20, x1
    74ec:	add	x20, x19, x20, lsl #3
    74f0:	b	7500 <__hwasan_library_unloaded@@Base+0x40>
    74f4:	add	x19, x19, #0x38
    74f8:	cmp	x19, x20
    74fc:	b.eq	752c <__hwasan_library_unloaded@@Base+0x6c>  // b.none
    7500:	ldr	w1, [x19]
    7504:	cmp	w1, #0x1
    7508:	b.ne	74f4 <__hwasan_library_unloaded@@Base+0x34>  // b.any
    750c:	ldr	x1, [x19, #40]
    7510:	mov	w2, #0x0                   	// #0
    7514:	ldr	x0, [x19, #16]
    7518:	add	x19, x19, #0x38
    751c:	add	x0, x21, x0
    7520:	bl	ec40 <__hwasan_memmove@@Base+0x278>
    7524:	cmp	x19, x20
    7528:	b.ne	7500 <__hwasan_library_unloaded@@Base+0x40>  // b.any
    752c:	ldp	x21, x30, [sp, #16]
    7530:	ldp	x19, x20, [sp], #32
    7534:	ret
    7538:	ret
    753c:	nop

0000000000007540 <__hwasan_print_shadow@@Base>:
    7540:	stp	x19, x20, [sp, #-48]!
    7544:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7548:	mov	x2, x1
    754c:	ldr	x20, [x20, #3848]
    7550:	and	x1, x0, #0xffffffffffffff
    7554:	add	x2, x2, x1
    7558:	stp	x21, x22, [sp, #16]
    755c:	sub	x21, x2, #0x1
    7560:	ldr	x4, [x20]
    7564:	ubfx	x19, x0, #4, #52
    7568:	lsr	x3, x0, #56
    756c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    7570:	add	x19, x19, x4
    7574:	add	x0, x0, #0x9a0
    7578:	add	x21, x4, x21, lsr #4
    757c:	str	x30, [sp, #32]
    7580:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    7584:	cmp	x21, x19
    7588:	b.cc	75bc <__hwasan_print_shadow@@Base+0x7c>  // b.lo, b.ul, b.last
    758c:	adrp	x22, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    7590:	add	x22, x22, #0x9d8
    7594:	nop
    7598:	ldr	x1, [x20]
    759c:	mov	x0, x22
    75a0:	ldrb	w2, [x19]
    75a4:	sub	x1, x19, x1
    75a8:	add	x19, x19, #0x1
    75ac:	lsl	x1, x1, #4
    75b0:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    75b4:	cmp	x19, x21
    75b8:	b.ls	7598 <__hwasan_print_shadow@@Base+0x58>  // b.plast
    75bc:	ldp	x21, x22, [sp, #16]
    75c0:	ldr	x30, [sp, #32]
    75c4:	ldp	x19, x20, [sp], #48
    75c8:	ret
    75cc:	nop

00000000000075d0 <__hwasan_test_shadow@@Base>:
    75d0:	cbz	x1, 7634 <__hwasan_test_shadow@@Base+0x64>
    75d4:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    75d8:	sub	x2, x1, #0x1
    75dc:	and	x5, x0, #0xffffffffffffff
    75e0:	ubfx	x1, x0, #4, #52
    75e4:	ldr	x3, [x3, #3848]
    75e8:	lsr	x4, x0, #56
    75ec:	add	x2, x2, x5
    75f0:	ldr	x0, [x3]
    75f4:	add	x1, x1, x0
    75f8:	add	x2, x0, x2, lsr #4
    75fc:	cmp	x2, x1
    7600:	b.cs	7614 <__hwasan_test_shadow@@Base+0x44>  // b.hs, b.nlast
    7604:	b	7634 <__hwasan_test_shadow@@Base+0x64>
    7608:	add	x1, x1, #0x1
    760c:	cmp	x2, x1
    7610:	b.cc	7634 <__hwasan_test_shadow@@Base+0x64>  // b.lo, b.ul, b.last
    7614:	ldrb	w3, [x1]
    7618:	cmp	w3, w4
    761c:	b.eq	7608 <__hwasan_test_shadow@@Base+0x38>  // b.none
    7620:	sub	x0, x1, x0
    7624:	lsl	x0, x0, #4
    7628:	subs	x0, x0, x5
    762c:	csel	x0, x0, xzr, pl  // pl = nfrst
    7630:	ret
    7634:	mov	x0, #0xffffffffffffffff    	// #-1
    7638:	ret
    763c:	nop

0000000000007640 <__sanitizer_unaligned_load16@@Base>:
    7640:	ldrh	w0, [x0]
    7644:	ret

0000000000007648 <__sanitizer_unaligned_load32@@Base>:
    7648:	ldr	w0, [x0]
    764c:	ret

0000000000007650 <__sanitizer_unaligned_load64@@Base>:
    7650:	ldr	x0, [x0]
    7654:	ret

0000000000007658 <__sanitizer_unaligned_store16@@Base>:
    7658:	strh	w1, [x0]
    765c:	ret

0000000000007660 <__sanitizer_unaligned_store32@@Base>:
    7660:	str	w1, [x0]
    7664:	ret

0000000000007668 <__sanitizer_unaligned_store64@@Base>:
    7668:	str	x1, [x0]
    766c:	ret

0000000000007670 <__hwasan_loadN@@Base>:
    7670:	cbnz	x1, 7678 <__hwasan_loadN@@Base+0x8>
    7674:	ret
    7678:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    767c:	and	x6, x0, #0xffffffffffffff
    7680:	add	x6, x1, x6
    7684:	ubfx	x2, x0, #4, #52
    7688:	ldr	x3, [x3, #3848]
    768c:	lsr	x6, x6, #4
    7690:	lsr	x5, x0, #56
    7694:	ldr	x7, [x3]
    7698:	add	x2, x2, x7
    769c:	add	x4, x6, x7
    76a0:	cmp	x2, x4
    76a4:	b.cc	76b8 <__hwasan_loadN@@Base+0x48>  // b.lo, b.ul, b.last
    76a8:	b	76c8 <__hwasan_loadN@@Base+0x58>
    76ac:	add	x2, x2, #0x1
    76b0:	cmp	x4, x2
    76b4:	b.ls	76c8 <__hwasan_loadN@@Base+0x58>  // b.plast
    76b8:	ldrb	w3, [x2]
    76bc:	cmp	w3, w5
    76c0:	b.eq	76ac <__hwasan_loadN@@Base+0x3c>  // b.none
    76c4:	brk	#0x90f
    76c8:	add	x2, x0, x1
    76cc:	ands	x3, x2, #0xf
    76d0:	b.eq	7674 <__hwasan_loadN@@Base+0x4>  // b.none
    76d4:	ldrb	w4, [x6, x7]
    76d8:	lsr	x5, x2, #56
    76dc:	and	x2, x2, #0xfffffffffffffff0
    76e0:	cmp	w4, w5
    76e4:	b.eq	7674 <__hwasan_loadN@@Base+0x4>  // b.none
    76e8:	cmp	w4, #0xf
    76ec:	b.hi	76c4 <__hwasan_loadN@@Base+0x54>  // b.pmore
    76f0:	cmp	x3, w4, uxtb
    76f4:	b.hi	76c4 <__hwasan_loadN@@Base+0x54>  // b.pmore
    76f8:	orr	x2, x2, #0xf
    76fc:	ldrb	w2, [x2]
    7700:	cmp	w2, w5
    7704:	b.ne	76c4 <__hwasan_loadN@@Base+0x54>  // b.any
    7708:	ret
    770c:	nop

0000000000007710 <__hwasan_load1@@Base>:
    7710:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7714:	ubfx	x3, x0, #4, #52
    7718:	lsr	x2, x0, #56
    771c:	ldr	x1, [x1, #3848]
    7720:	ldr	x1, [x1]
    7724:	ldrb	w1, [x3, x1]
    7728:	cmp	w1, w2
    772c:	b.eq	7758 <__hwasan_load1@@Base+0x48>  // b.none
    7730:	cmp	w1, #0xf
    7734:	b.hi	775c <__hwasan_load1@@Base+0x4c>  // b.pmore
    7738:	and	x3, x0, #0xf
    773c:	add	x3, x3, #0x1
    7740:	cmp	x3, w1, uxtb
    7744:	b.hi	775c <__hwasan_load1@@Base+0x4c>  // b.pmore
    7748:	orr	x1, x0, #0xf
    774c:	ldrb	w1, [x1]
    7750:	cmp	w1, w2
    7754:	b.ne	775c <__hwasan_load1@@Base+0x4c>  // b.any
    7758:	ret
    775c:	brk	#0x900

0000000000007760 <__hwasan_load2@@Base>:
    7760:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7764:	ubfx	x3, x0, #4, #52
    7768:	lsr	x2, x0, #56
    776c:	ldr	x1, [x1, #3848]
    7770:	ldr	x1, [x1]
    7774:	ldrb	w1, [x3, x1]
    7778:	cmp	w1, w2
    777c:	b.eq	77a8 <__hwasan_load2@@Base+0x48>  // b.none
    7780:	cmp	w1, #0xf
    7784:	b.hi	77ac <__hwasan_load2@@Base+0x4c>  // b.pmore
    7788:	and	x3, x0, #0xf
    778c:	add	x3, x3, #0x2
    7790:	cmp	x3, w1, uxtb
    7794:	b.hi	77ac <__hwasan_load2@@Base+0x4c>  // b.pmore
    7798:	orr	x1, x0, #0xf
    779c:	ldrb	w1, [x1]
    77a0:	cmp	w1, w2
    77a4:	b.ne	77ac <__hwasan_load2@@Base+0x4c>  // b.any
    77a8:	ret
    77ac:	brk	#0x901

00000000000077b0 <__hwasan_load4@@Base>:
    77b0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    77b4:	ubfx	x3, x0, #4, #52
    77b8:	lsr	x2, x0, #56
    77bc:	ldr	x1, [x1, #3848]
    77c0:	ldr	x1, [x1]
    77c4:	ldrb	w1, [x3, x1]
    77c8:	cmp	w1, w2
    77cc:	b.eq	77f8 <__hwasan_load4@@Base+0x48>  // b.none
    77d0:	cmp	w1, #0xf
    77d4:	b.hi	77fc <__hwasan_load4@@Base+0x4c>  // b.pmore
    77d8:	and	x3, x0, #0xf
    77dc:	add	x3, x3, #0x4
    77e0:	cmp	x3, w1, uxtb
    77e4:	b.hi	77fc <__hwasan_load4@@Base+0x4c>  // b.pmore
    77e8:	orr	x1, x0, #0xf
    77ec:	ldrb	w1, [x1]
    77f0:	cmp	w1, w2
    77f4:	b.ne	77fc <__hwasan_load4@@Base+0x4c>  // b.any
    77f8:	ret
    77fc:	brk	#0x902

0000000000007800 <__hwasan_load8@@Base>:
    7800:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7804:	ubfx	x3, x0, #4, #52
    7808:	lsr	x2, x0, #56
    780c:	ldr	x1, [x1, #3848]
    7810:	ldr	x1, [x1]
    7814:	ldrb	w1, [x3, x1]
    7818:	cmp	w1, w2
    781c:	b.eq	7848 <__hwasan_load8@@Base+0x48>  // b.none
    7820:	cmp	w1, #0xf
    7824:	b.hi	784c <__hwasan_load8@@Base+0x4c>  // b.pmore
    7828:	and	x3, x0, #0xf
    782c:	add	x3, x3, #0x8
    7830:	cmp	x3, w1, uxtb
    7834:	b.hi	784c <__hwasan_load8@@Base+0x4c>  // b.pmore
    7838:	orr	x1, x0, #0xf
    783c:	ldrb	w1, [x1]
    7840:	cmp	w1, w2
    7844:	b.ne	784c <__hwasan_load8@@Base+0x4c>  // b.any
    7848:	ret
    784c:	brk	#0x903

0000000000007850 <__hwasan_load16@@Base>:
    7850:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7854:	ubfx	x3, x0, #4, #52
    7858:	lsr	x2, x0, #56
    785c:	ldr	x1, [x1, #3848]
    7860:	ldr	x1, [x1]
    7864:	ldrb	w1, [x3, x1]
    7868:	cmp	w1, w2
    786c:	b.eq	7874 <__hwasan_load16@@Base+0x24>  // b.none
    7870:	brk	#0x904
    7874:	ret

0000000000007878 <__hwasan_loadN_noabort@@Base>:
    7878:	cbnz	x1, 7880 <__hwasan_loadN_noabort@@Base+0x8>
    787c:	ret
    7880:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7884:	and	x6, x0, #0xffffffffffffff
    7888:	add	x6, x1, x6
    788c:	ubfx	x2, x0, #4, #52
    7890:	ldr	x3, [x3, #3848]
    7894:	lsr	x6, x6, #4
    7898:	lsr	x5, x0, #56
    789c:	ldr	x7, [x3]
    78a0:	add	x2, x2, x7
    78a4:	add	x4, x6, x7
    78a8:	cmp	x2, x4
    78ac:	b.cs	78c8 <__hwasan_loadN_noabort@@Base+0x50>  // b.hs, b.nlast
    78b0:	ldrb	w3, [x2]
    78b4:	cmp	w3, w5
    78b8:	b.ne	7910 <__hwasan_loadN_noabort@@Base+0x98>  // b.any
    78bc:	add	x2, x2, #0x1
    78c0:	cmp	x4, x2
    78c4:	b.ne	78b0 <__hwasan_loadN_noabort@@Base+0x38>  // b.any
    78c8:	add	x2, x0, x1
    78cc:	ands	x3, x2, #0xf
    78d0:	b.eq	787c <__hwasan_loadN_noabort@@Base+0x4>  // b.none
    78d4:	ldrb	w4, [x6, x7]
    78d8:	lsr	x5, x2, #56
    78dc:	and	x2, x2, #0xfffffffffffffff0
    78e0:	cmp	w4, w5
    78e4:	b.eq	787c <__hwasan_loadN_noabort@@Base+0x4>  // b.none
    78e8:	cmp	w4, #0xf
    78ec:	b.hi	7908 <__hwasan_loadN_noabort@@Base+0x90>  // b.pmore
    78f0:	cmp	x3, w4, uxtb
    78f4:	b.hi	7908 <__hwasan_loadN_noabort@@Base+0x90>  // b.pmore
    78f8:	orr	x2, x2, #0xf
    78fc:	ldrb	w2, [x2]
    7900:	cmp	w2, w5
    7904:	b.eq	787c <__hwasan_loadN_noabort@@Base+0x4>  // b.none
    7908:	brk	#0x92f
    790c:	ret
    7910:	brk	#0x92f
    7914:	b	78bc <__hwasan_loadN_noabort@@Base+0x44>

0000000000007918 <__hwasan_load1_noabort@@Base>:
    7918:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    791c:	ubfx	x3, x0, #4, #52
    7920:	lsr	x2, x0, #56
    7924:	ldr	x1, [x1, #3848]
    7928:	ldr	x1, [x1]
    792c:	ldrb	w1, [x3, x1]
    7930:	cmp	w1, w2
    7934:	b.eq	7960 <__hwasan_load1_noabort@@Base+0x48>  // b.none
    7938:	cmp	w1, #0xf
    793c:	b.hi	7964 <__hwasan_load1_noabort@@Base+0x4c>  // b.pmore
    7940:	and	x3, x0, #0xf
    7944:	add	x3, x3, #0x1
    7948:	cmp	x3, w1, uxtb
    794c:	b.hi	7964 <__hwasan_load1_noabort@@Base+0x4c>  // b.pmore
    7950:	orr	x1, x0, #0xf
    7954:	ldrb	w1, [x1]
    7958:	cmp	w1, w2
    795c:	b.ne	7964 <__hwasan_load1_noabort@@Base+0x4c>  // b.any
    7960:	ret
    7964:	brk	#0x920
    7968:	ret
    796c:	nop

0000000000007970 <__hwasan_load2_noabort@@Base>:
    7970:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7974:	ubfx	x3, x0, #4, #52
    7978:	lsr	x2, x0, #56
    797c:	ldr	x1, [x1, #3848]
    7980:	ldr	x1, [x1]
    7984:	ldrb	w1, [x3, x1]
    7988:	cmp	w1, w2
    798c:	b.eq	79b8 <__hwasan_load2_noabort@@Base+0x48>  // b.none
    7990:	cmp	w1, #0xf
    7994:	b.hi	79bc <__hwasan_load2_noabort@@Base+0x4c>  // b.pmore
    7998:	and	x3, x0, #0xf
    799c:	add	x3, x3, #0x2
    79a0:	cmp	x3, w1, uxtb
    79a4:	b.hi	79bc <__hwasan_load2_noabort@@Base+0x4c>  // b.pmore
    79a8:	orr	x1, x0, #0xf
    79ac:	ldrb	w1, [x1]
    79b0:	cmp	w1, w2
    79b4:	b.ne	79bc <__hwasan_load2_noabort@@Base+0x4c>  // b.any
    79b8:	ret
    79bc:	brk	#0x921
    79c0:	ret
    79c4:	nop

00000000000079c8 <__hwasan_load4_noabort@@Base>:
    79c8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    79cc:	ubfx	x3, x0, #4, #52
    79d0:	lsr	x2, x0, #56
    79d4:	ldr	x1, [x1, #3848]
    79d8:	ldr	x1, [x1]
    79dc:	ldrb	w1, [x3, x1]
    79e0:	cmp	w1, w2
    79e4:	b.eq	7a10 <__hwasan_load4_noabort@@Base+0x48>  // b.none
    79e8:	cmp	w1, #0xf
    79ec:	b.hi	7a14 <__hwasan_load4_noabort@@Base+0x4c>  // b.pmore
    79f0:	and	x3, x0, #0xf
    79f4:	add	x3, x3, #0x4
    79f8:	cmp	x3, w1, uxtb
    79fc:	b.hi	7a14 <__hwasan_load4_noabort@@Base+0x4c>  // b.pmore
    7a00:	orr	x1, x0, #0xf
    7a04:	ldrb	w1, [x1]
    7a08:	cmp	w1, w2
    7a0c:	b.ne	7a14 <__hwasan_load4_noabort@@Base+0x4c>  // b.any
    7a10:	ret
    7a14:	brk	#0x922
    7a18:	ret
    7a1c:	nop

0000000000007a20 <__hwasan_load8_noabort@@Base>:
    7a20:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7a24:	ubfx	x3, x0, #4, #52
    7a28:	lsr	x2, x0, #56
    7a2c:	ldr	x1, [x1, #3848]
    7a30:	ldr	x1, [x1]
    7a34:	ldrb	w1, [x3, x1]
    7a38:	cmp	w1, w2
    7a3c:	b.eq	7a68 <__hwasan_load8_noabort@@Base+0x48>  // b.none
    7a40:	cmp	w1, #0xf
    7a44:	b.hi	7a6c <__hwasan_load8_noabort@@Base+0x4c>  // b.pmore
    7a48:	and	x3, x0, #0xf
    7a4c:	add	x3, x3, #0x8
    7a50:	cmp	x3, w1, uxtb
    7a54:	b.hi	7a6c <__hwasan_load8_noabort@@Base+0x4c>  // b.pmore
    7a58:	orr	x1, x0, #0xf
    7a5c:	ldrb	w1, [x1]
    7a60:	cmp	w1, w2
    7a64:	b.ne	7a6c <__hwasan_load8_noabort@@Base+0x4c>  // b.any
    7a68:	ret
    7a6c:	brk	#0x923
    7a70:	ret
    7a74:	nop

0000000000007a78 <__hwasan_load16_noabort@@Base>:
    7a78:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7a7c:	ubfx	x3, x0, #4, #52
    7a80:	lsr	x2, x0, #56
    7a84:	ldr	x1, [x1, #3848]
    7a88:	ldr	x1, [x1]
    7a8c:	ldrb	w1, [x3, x1]
    7a90:	cmp	w1, w2
    7a94:	b.eq	7a9c <__hwasan_load16_noabort@@Base+0x24>  // b.none
    7a98:	brk	#0x924
    7a9c:	ret

0000000000007aa0 <__hwasan_storeN@@Base>:
    7aa0:	cbnz	x1, 7aa8 <__hwasan_storeN@@Base+0x8>
    7aa4:	ret
    7aa8:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7aac:	and	x6, x0, #0xffffffffffffff
    7ab0:	add	x6, x1, x6
    7ab4:	ubfx	x2, x0, #4, #52
    7ab8:	ldr	x3, [x3, #3848]
    7abc:	lsr	x6, x6, #4
    7ac0:	lsr	x5, x0, #56
    7ac4:	ldr	x7, [x3]
    7ac8:	add	x2, x2, x7
    7acc:	add	x4, x6, x7
    7ad0:	cmp	x2, x4
    7ad4:	b.cc	7ae8 <__hwasan_storeN@@Base+0x48>  // b.lo, b.ul, b.last
    7ad8:	b	7af8 <__hwasan_storeN@@Base+0x58>
    7adc:	add	x2, x2, #0x1
    7ae0:	cmp	x4, x2
    7ae4:	b.ls	7af8 <__hwasan_storeN@@Base+0x58>  // b.plast
    7ae8:	ldrb	w3, [x2]
    7aec:	cmp	w3, w5
    7af0:	b.eq	7adc <__hwasan_storeN@@Base+0x3c>  // b.none
    7af4:	brk	#0x91f
    7af8:	add	x2, x0, x1
    7afc:	ands	x3, x2, #0xf
    7b00:	b.eq	7aa4 <__hwasan_storeN@@Base+0x4>  // b.none
    7b04:	ldrb	w4, [x6, x7]
    7b08:	lsr	x5, x2, #56
    7b0c:	and	x2, x2, #0xfffffffffffffff0
    7b10:	cmp	w4, w5
    7b14:	b.eq	7aa4 <__hwasan_storeN@@Base+0x4>  // b.none
    7b18:	cmp	w4, #0xf
    7b1c:	b.hi	7af4 <__hwasan_storeN@@Base+0x54>  // b.pmore
    7b20:	cmp	x3, w4, uxtb
    7b24:	b.hi	7af4 <__hwasan_storeN@@Base+0x54>  // b.pmore
    7b28:	orr	x2, x2, #0xf
    7b2c:	ldrb	w2, [x2]
    7b30:	cmp	w2, w5
    7b34:	b.ne	7af4 <__hwasan_storeN@@Base+0x54>  // b.any
    7b38:	ret
    7b3c:	nop

0000000000007b40 <__hwasan_store1@@Base>:
    7b40:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7b44:	ubfx	x3, x0, #4, #52
    7b48:	lsr	x2, x0, #56
    7b4c:	ldr	x1, [x1, #3848]
    7b50:	ldr	x1, [x1]
    7b54:	ldrb	w1, [x3, x1]
    7b58:	cmp	w1, w2
    7b5c:	b.eq	7b88 <__hwasan_store1@@Base+0x48>  // b.none
    7b60:	cmp	w1, #0xf
    7b64:	b.hi	7b8c <__hwasan_store1@@Base+0x4c>  // b.pmore
    7b68:	and	x3, x0, #0xf
    7b6c:	add	x3, x3, #0x1
    7b70:	cmp	x3, w1, uxtb
    7b74:	b.hi	7b8c <__hwasan_store1@@Base+0x4c>  // b.pmore
    7b78:	orr	x1, x0, #0xf
    7b7c:	ldrb	w1, [x1]
    7b80:	cmp	w1, w2
    7b84:	b.ne	7b8c <__hwasan_store1@@Base+0x4c>  // b.any
    7b88:	ret
    7b8c:	brk	#0x910

0000000000007b90 <__hwasan_store2@@Base>:
    7b90:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7b94:	ubfx	x3, x0, #4, #52
    7b98:	lsr	x2, x0, #56
    7b9c:	ldr	x1, [x1, #3848]
    7ba0:	ldr	x1, [x1]
    7ba4:	ldrb	w1, [x3, x1]
    7ba8:	cmp	w1, w2
    7bac:	b.eq	7bd8 <__hwasan_store2@@Base+0x48>  // b.none
    7bb0:	cmp	w1, #0xf
    7bb4:	b.hi	7bdc <__hwasan_store2@@Base+0x4c>  // b.pmore
    7bb8:	and	x3, x0, #0xf
    7bbc:	add	x3, x3, #0x2
    7bc0:	cmp	x3, w1, uxtb
    7bc4:	b.hi	7bdc <__hwasan_store2@@Base+0x4c>  // b.pmore
    7bc8:	orr	x1, x0, #0xf
    7bcc:	ldrb	w1, [x1]
    7bd0:	cmp	w1, w2
    7bd4:	b.ne	7bdc <__hwasan_store2@@Base+0x4c>  // b.any
    7bd8:	ret
    7bdc:	brk	#0x911

0000000000007be0 <__hwasan_store4@@Base>:
    7be0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7be4:	ubfx	x3, x0, #4, #52
    7be8:	lsr	x2, x0, #56
    7bec:	ldr	x1, [x1, #3848]
    7bf0:	ldr	x1, [x1]
    7bf4:	ldrb	w1, [x3, x1]
    7bf8:	cmp	w1, w2
    7bfc:	b.eq	7c28 <__hwasan_store4@@Base+0x48>  // b.none
    7c00:	cmp	w1, #0xf
    7c04:	b.hi	7c2c <__hwasan_store4@@Base+0x4c>  // b.pmore
    7c08:	and	x3, x0, #0xf
    7c0c:	add	x3, x3, #0x4
    7c10:	cmp	x3, w1, uxtb
    7c14:	b.hi	7c2c <__hwasan_store4@@Base+0x4c>  // b.pmore
    7c18:	orr	x1, x0, #0xf
    7c1c:	ldrb	w1, [x1]
    7c20:	cmp	w1, w2
    7c24:	b.ne	7c2c <__hwasan_store4@@Base+0x4c>  // b.any
    7c28:	ret
    7c2c:	brk	#0x912

0000000000007c30 <__hwasan_store8@@Base>:
    7c30:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7c34:	ubfx	x3, x0, #4, #52
    7c38:	lsr	x2, x0, #56
    7c3c:	ldr	x1, [x1, #3848]
    7c40:	ldr	x1, [x1]
    7c44:	ldrb	w1, [x3, x1]
    7c48:	cmp	w1, w2
    7c4c:	b.eq	7c78 <__hwasan_store8@@Base+0x48>  // b.none
    7c50:	cmp	w1, #0xf
    7c54:	b.hi	7c7c <__hwasan_store8@@Base+0x4c>  // b.pmore
    7c58:	and	x3, x0, #0xf
    7c5c:	add	x3, x3, #0x8
    7c60:	cmp	x3, w1, uxtb
    7c64:	b.hi	7c7c <__hwasan_store8@@Base+0x4c>  // b.pmore
    7c68:	orr	x1, x0, #0xf
    7c6c:	ldrb	w1, [x1]
    7c70:	cmp	w1, w2
    7c74:	b.ne	7c7c <__hwasan_store8@@Base+0x4c>  // b.any
    7c78:	ret
    7c7c:	brk	#0x913

0000000000007c80 <__hwasan_store16@@Base>:
    7c80:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7c84:	ubfx	x3, x0, #4, #52
    7c88:	lsr	x2, x0, #56
    7c8c:	ldr	x1, [x1, #3848]
    7c90:	ldr	x1, [x1]
    7c94:	ldrb	w1, [x3, x1]
    7c98:	cmp	w1, w2
    7c9c:	b.eq	7ca4 <__hwasan_store16@@Base+0x24>  // b.none
    7ca0:	brk	#0x914
    7ca4:	ret

0000000000007ca8 <__hwasan_storeN_noabort@@Base>:
    7ca8:	cbnz	x1, 7cb0 <__hwasan_storeN_noabort@@Base+0x8>
    7cac:	ret
    7cb0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7cb4:	and	x6, x0, #0xffffffffffffff
    7cb8:	add	x6, x1, x6
    7cbc:	ubfx	x2, x0, #4, #52
    7cc0:	ldr	x3, [x3, #3848]
    7cc4:	lsr	x6, x6, #4
    7cc8:	lsr	x5, x0, #56
    7ccc:	ldr	x7, [x3]
    7cd0:	add	x2, x2, x7
    7cd4:	add	x4, x6, x7
    7cd8:	cmp	x2, x4
    7cdc:	b.cs	7cf8 <__hwasan_storeN_noabort@@Base+0x50>  // b.hs, b.nlast
    7ce0:	ldrb	w3, [x2]
    7ce4:	cmp	w3, w5
    7ce8:	b.ne	7d40 <__hwasan_storeN_noabort@@Base+0x98>  // b.any
    7cec:	add	x2, x2, #0x1
    7cf0:	cmp	x4, x2
    7cf4:	b.ne	7ce0 <__hwasan_storeN_noabort@@Base+0x38>  // b.any
    7cf8:	add	x2, x0, x1
    7cfc:	ands	x3, x2, #0xf
    7d00:	b.eq	7cac <__hwasan_storeN_noabort@@Base+0x4>  // b.none
    7d04:	ldrb	w4, [x6, x7]
    7d08:	lsr	x5, x2, #56
    7d0c:	and	x2, x2, #0xfffffffffffffff0
    7d10:	cmp	w4, w5
    7d14:	b.eq	7cac <__hwasan_storeN_noabort@@Base+0x4>  // b.none
    7d18:	cmp	w4, #0xf
    7d1c:	b.hi	7d38 <__hwasan_storeN_noabort@@Base+0x90>  // b.pmore
    7d20:	cmp	x3, w4, uxtb
    7d24:	b.hi	7d38 <__hwasan_storeN_noabort@@Base+0x90>  // b.pmore
    7d28:	orr	x2, x2, #0xf
    7d2c:	ldrb	w2, [x2]
    7d30:	cmp	w2, w5
    7d34:	b.eq	7cac <__hwasan_storeN_noabort@@Base+0x4>  // b.none
    7d38:	brk	#0x93f
    7d3c:	ret
    7d40:	brk	#0x93f
    7d44:	b	7cec <__hwasan_storeN_noabort@@Base+0x44>

0000000000007d48 <__hwasan_store1_noabort@@Base>:
    7d48:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7d4c:	ubfx	x3, x0, #4, #52
    7d50:	lsr	x2, x0, #56
    7d54:	ldr	x1, [x1, #3848]
    7d58:	ldr	x1, [x1]
    7d5c:	ldrb	w1, [x3, x1]
    7d60:	cmp	w1, w2
    7d64:	b.eq	7d90 <__hwasan_store1_noabort@@Base+0x48>  // b.none
    7d68:	cmp	w1, #0xf
    7d6c:	b.hi	7d94 <__hwasan_store1_noabort@@Base+0x4c>  // b.pmore
    7d70:	and	x3, x0, #0xf
    7d74:	add	x3, x3, #0x1
    7d78:	cmp	x3, w1, uxtb
    7d7c:	b.hi	7d94 <__hwasan_store1_noabort@@Base+0x4c>  // b.pmore
    7d80:	orr	x1, x0, #0xf
    7d84:	ldrb	w1, [x1]
    7d88:	cmp	w1, w2
    7d8c:	b.ne	7d94 <__hwasan_store1_noabort@@Base+0x4c>  // b.any
    7d90:	ret
    7d94:	brk	#0x930
    7d98:	ret
    7d9c:	nop

0000000000007da0 <__hwasan_store2_noabort@@Base>:
    7da0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7da4:	ubfx	x3, x0, #4, #52
    7da8:	lsr	x2, x0, #56
    7dac:	ldr	x1, [x1, #3848]
    7db0:	ldr	x1, [x1]
    7db4:	ldrb	w1, [x3, x1]
    7db8:	cmp	w1, w2
    7dbc:	b.eq	7de8 <__hwasan_store2_noabort@@Base+0x48>  // b.none
    7dc0:	cmp	w1, #0xf
    7dc4:	b.hi	7dec <__hwasan_store2_noabort@@Base+0x4c>  // b.pmore
    7dc8:	and	x3, x0, #0xf
    7dcc:	add	x3, x3, #0x2
    7dd0:	cmp	x3, w1, uxtb
    7dd4:	b.hi	7dec <__hwasan_store2_noabort@@Base+0x4c>  // b.pmore
    7dd8:	orr	x1, x0, #0xf
    7ddc:	ldrb	w1, [x1]
    7de0:	cmp	w1, w2
    7de4:	b.ne	7dec <__hwasan_store2_noabort@@Base+0x4c>  // b.any
    7de8:	ret
    7dec:	brk	#0x931
    7df0:	ret
    7df4:	nop

0000000000007df8 <__hwasan_store4_noabort@@Base>:
    7df8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7dfc:	ubfx	x3, x0, #4, #52
    7e00:	lsr	x2, x0, #56
    7e04:	ldr	x1, [x1, #3848]
    7e08:	ldr	x1, [x1]
    7e0c:	ldrb	w1, [x3, x1]
    7e10:	cmp	w1, w2
    7e14:	b.eq	7e40 <__hwasan_store4_noabort@@Base+0x48>  // b.none
    7e18:	cmp	w1, #0xf
    7e1c:	b.hi	7e44 <__hwasan_store4_noabort@@Base+0x4c>  // b.pmore
    7e20:	and	x3, x0, #0xf
    7e24:	add	x3, x3, #0x4
    7e28:	cmp	x3, w1, uxtb
    7e2c:	b.hi	7e44 <__hwasan_store4_noabort@@Base+0x4c>  // b.pmore
    7e30:	orr	x1, x0, #0xf
    7e34:	ldrb	w1, [x1]
    7e38:	cmp	w1, w2
    7e3c:	b.ne	7e44 <__hwasan_store4_noabort@@Base+0x4c>  // b.any
    7e40:	ret
    7e44:	brk	#0x932
    7e48:	ret
    7e4c:	nop

0000000000007e50 <__hwasan_store8_noabort@@Base>:
    7e50:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7e54:	ubfx	x3, x0, #4, #52
    7e58:	lsr	x2, x0, #56
    7e5c:	ldr	x1, [x1, #3848]
    7e60:	ldr	x1, [x1]
    7e64:	ldrb	w1, [x3, x1]
    7e68:	cmp	w1, w2
    7e6c:	b.eq	7e98 <__hwasan_store8_noabort@@Base+0x48>  // b.none
    7e70:	cmp	w1, #0xf
    7e74:	b.hi	7e9c <__hwasan_store8_noabort@@Base+0x4c>  // b.pmore
    7e78:	and	x3, x0, #0xf
    7e7c:	add	x3, x3, #0x8
    7e80:	cmp	x3, w1, uxtb
    7e84:	b.hi	7e9c <__hwasan_store8_noabort@@Base+0x4c>  // b.pmore
    7e88:	orr	x1, x0, #0xf
    7e8c:	ldrb	w1, [x1]
    7e90:	cmp	w1, w2
    7e94:	b.ne	7e9c <__hwasan_store8_noabort@@Base+0x4c>  // b.any
    7e98:	ret
    7e9c:	brk	#0x933
    7ea0:	ret
    7ea4:	nop

0000000000007ea8 <__hwasan_store16_noabort@@Base>:
    7ea8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7eac:	ubfx	x3, x0, #4, #52
    7eb0:	lsr	x2, x0, #56
    7eb4:	ldr	x1, [x1, #3848]
    7eb8:	ldr	x1, [x1]
    7ebc:	ldrb	w1, [x3, x1]
    7ec0:	cmp	w1, w2
    7ec4:	b.eq	7ecc <__hwasan_store16_noabort@@Base+0x24>  // b.none
    7ec8:	brk	#0x934
    7ecc:	ret

0000000000007ed0 <__hwasan_tag_memory@@Base>:
    7ed0:	mov	x3, x2
    7ed4:	mov	w2, w1
    7ed8:	mov	x1, x3
    7edc:	b	eaf8 <__hwasan_memmove@@Base+0x130>

0000000000007ee0 <__hwasan_tag_pointer@@Base>:
    7ee0:	bfi	x0, x1, #56, #8
    7ee4:	ret

0000000000007ee8 <__hwasan_handle_longjmp@@Base>:
    7ee8:	stp	x29, x30, [sp, #-16]!
    7eec:	cmp	xzr, x0, lsr #56
    7ef0:	mov	x29, sp
    7ef4:	b.ne	7f3c <__hwasan_handle_longjmp@@Base+0x54>  // b.any
    7ef8:	mov	x2, x0
    7efc:	cmp	x0, x29
    7f00:	mov	x1, x29
    7f04:	sub	x3, x0, x29
    7f08:	b.cc	7f18 <__hwasan_handle_longjmp@@Base+0x30>  // b.lo, b.ul, b.last
    7f0c:	mov	x0, #0x4000000             	// #67108864
    7f10:	cmp	x3, x0
    7f14:	b.ls	7f28 <__hwasan_handle_longjmp@@Base+0x40>  // b.plast
    7f18:	ldp	x29, x30, [sp], #16
    7f1c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    7f20:	add	x0, x0, #0xa10
    7f24:	b	1fbf8 <__sanitizer_on_print@@Base+0x398>
    7f28:	mov	x0, x29
    7f2c:	mov	x1, x3
    7f30:	ldp	x29, x30, [sp], #16
    7f34:	mov	w2, #0x0                   	// #0
    7f38:	b	ec40 <__hwasan_memmove@@Base+0x278>
    7f3c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    7f40:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    7f44:	add	x2, x2, #0x9e8
    7f48:	add	x0, x0, #0x170
    7f4c:	mov	x4, #0x0                   	// #0
    7f50:	mov	x3, #0x0                   	// #0
    7f54:	mov	w1, #0x228                 	// #552
    7f58:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    7f5c:	nop

0000000000007f60 <__hwasan_handle_vfork@@Base>:
    7f60:	stp	x19, x30, [sp, #-16]!
    7f64:	mov	x19, x0
    7f68:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    7f6c:	cbz	x0, 7fb4 <__hwasan_handle_vfork@@Base+0x54>
    7f70:	ldp	x1, x3, [x0, #8]
    7f74:	cmp	x1, #0x0
    7f78:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    7f7c:	b.eq	7f8c <__hwasan_handle_vfork@@Base+0x2c>  // b.none
    7f80:	cmp	x19, x3
    7f84:	ccmp	x19, x1, #0x2, cs  // cs = hs, nlast
    7f88:	b.cc	7fa0 <__hwasan_handle_vfork@@Base+0x40>  // b.lo, b.ul, b.last
    7f8c:	mov	x2, x19
    7f90:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    7f94:	ldp	x19, x30, [sp], #16
    7f98:	add	x0, x0, #0xaa8
    7f9c:	b	1fbf8 <__sanitizer_on_print@@Base+0x398>
    7fa0:	sub	x1, x19, x3
    7fa4:	mov	x0, x3
    7fa8:	ldp	x19, x30, [sp], #16
    7fac:	mov	w2, #0x0                   	// #0
    7fb0:	b	ec40 <__hwasan_memmove@@Base+0x278>
    7fb4:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    7fb8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    7fbc:	add	x2, x2, #0x160
    7fc0:	add	x0, x0, #0x170
    7fc4:	mov	x4, #0x0                   	// #0
    7fc8:	mov	x3, #0x0                   	// #0
    7fcc:	mov	w1, #0x23a                 	// #570
    7fd0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    7fd4:	nop
    7fd8:	str	x30, [sp, #-16]!
    7fdc:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    7fe0:	ldr	x30, [sp], #16
    7fe4:	ret

0000000000007fe8 <__hwasan_print_memory_usage@@Base>:
    7fe8:	sub	sp, sp, #0x70
    7fec:	stp	x21, x22, [sp, #32]
    7ff0:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    7ff4:	stp	x19, x20, [sp, #16]
    7ff8:	ldr	x19, [x21, #4016]
    7ffc:	stp	x23, x30, [sp, #48]
    8000:	str	xzr, [sp, #80]
    8004:	ldr	x0, [x19]
    8008:	stp	xzr, xzr, [sp, #88]
    800c:	cbz	x0, 8174 <__hwasan_print_memory_usage@@Base+0x18c>
    8010:	sub	x1, x0, #0x1
    8014:	tst	x1, x0
    8018:	b.ne	81d8 <__hwasan_print_memory_usage@@Base+0x1f0>  // b.any
    801c:	add	x20, x0, #0xfff
    8020:	neg	x0, x0
    8024:	and	x20, x20, x0
    8028:	mov	w2, #0x0                   	// #0
    802c:	mov	x0, x20
    8030:	adrp	x22, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8034:	add	x1, x22, #0xb50
    8038:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
    803c:	ldr	x1, [sp, #80]
    8040:	mov	x19, x0
    8044:	ldr	x2, [sp, #96]
    8048:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    804c:	ldp	x0, x1, [sp, #80]
    8050:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    8054:	stp	x19, x20, [sp, #80]
    8058:	ldr	x2, [sp, #96]
    805c:	cmp	x2, #0xfff
    8060:	b.ls	8150 <__hwasan_print_memory_usage@@Base+0x168>  // b.plast
    8064:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8068:	ldr	q0, [x0, #3264]
    806c:	str	q0, [sp, #96]
    8070:	strb	wzr, [x19]
    8074:	bl	11880 <__hwasan_tag_mismatch_v2@@Base+0x688>
    8078:	mov	x19, x0
    807c:	add	x0, x0, #0x48
    8080:	mov	w2, #0x1                   	// #1
    8084:	ldxrb	w1, [x0]
    8088:	stxrb	w3, w2, [x0]
    808c:	cbnz	w3, 8084 <__hwasan_print_memory_usage@@Base+0x9c>
    8090:	dmb	ish
    8094:	tst	w1, #0xff
    8098:	b.eq	80a0 <__hwasan_print_memory_usage@@Base+0xb8>  // b.none
    809c:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    80a0:	ldp	x22, x23, [x19, #56]
    80a4:	dmb	ish
    80a8:	strb	wzr, [x19, #72]
    80ac:	bl	27060 <__sanitizer_cov_dump@@Base+0x500>
    80b0:	mov	x20, x0
    80b4:	add	x0, sp, #0x40
    80b8:	bl	8750 <__sanitizer_print_stack_trace@@Base+0x538>
    80bc:	bl	1c738 <__sanitizer_set_report_fd@@Base+0x4978>
    80c0:	mov	x21, x0
    80c4:	bl	240b0 <__sanitizer_sandbox_on_notify@@Base+0xb28>
    80c8:	mov	x3, x0
    80cc:	adrp	x2, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    80d0:	mov	w8, #0x18                  	// #24
    80d4:	ldr	x1, [x19, #16]
    80d8:	mov	x5, x23
    80dc:	ldr	w7, [x2, #3308]
    80e0:	mov	x4, x22
    80e4:	add	x1, x1, #0xa80
    80e8:	mov	x2, x21
    80ec:	cmp	w7, #0x0
    80f0:	ldr	x0, [sp, #72]
    80f4:	smaddl	x8, w7, w8, x1
    80f8:	ldr	x7, [x20, #8]
    80fc:	add	x8, x8, #0x10
    8100:	csel	x1, x8, x1, ne  // ne = any
    8104:	str	x0, [sp, #8]
    8108:	ldr	x0, [x20]
    810c:	mul	x6, x1, x22
    8110:	str	x0, [sp]
    8114:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8118:	add	x0, sp, #0x50
    811c:	add	x1, x1, #0xb68
    8120:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
    8124:	ldr	x1, [sp, #80]
    8128:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
    812c:	add	x0, x0, #0x730
    8130:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    8134:	ldp	x0, x1, [sp, #80]
    8138:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    813c:	ldp	x19, x20, [sp, #16]
    8140:	ldp	x21, x22, [sp, #32]
    8144:	ldp	x23, x30, [sp, #48]
    8148:	add	sp, sp, #0x70
    814c:	ret
    8150:	cmp	x20, #0xfff
    8154:	b.ls	8180 <__hwasan_print_memory_usage@@Base+0x198>  // b.plast
    8158:	mov	x3, #0x1000                	// #4096
    815c:	add	x0, x19, x2
    8160:	mov	w1, #0x0                   	// #0
    8164:	sub	x2, x3, x2
    8168:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    816c:	ldr	x19, [sp, #80]
    8170:	b	8064 <__hwasan_print_memory_usage@@Base+0x7c>
    8174:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    8178:	str	x0, [x19]
    817c:	b	8010 <__hwasan_print_memory_usage@@Base+0x28>
    8180:	ldr	x21, [x21, #4016]
    8184:	ldr	x0, [x21]
    8188:	cbz	x0, 81e8 <__hwasan_print_memory_usage@@Base+0x200>
    818c:	sub	x1, x0, #0x1
    8190:	tst	x1, x0
    8194:	b.ne	81d8 <__hwasan_print_memory_usage@@Base+0x1f0>  // b.any
    8198:	add	x20, x0, #0xfff
    819c:	neg	x0, x0
    81a0:	and	x20, x20, x0
    81a4:	add	x1, x22, #0xb50
    81a8:	mov	w2, #0x0                   	// #0
    81ac:	mov	x0, x20
    81b0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
    81b4:	mov	x19, x0
    81b8:	ldr	x1, [sp, #80]
    81bc:	ldr	x2, [sp, #96]
    81c0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    81c4:	ldp	x0, x1, [sp, #80]
    81c8:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    81cc:	stp	x19, x20, [sp, #80]
    81d0:	ldr	x2, [sp, #96]
    81d4:	b	8158 <__hwasan_print_memory_usage@@Base+0x170>
    81d8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    81dc:	add	x0, x0, #0xb38
    81e0:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    81e4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    81e8:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    81ec:	str	x0, [x21]
    81f0:	b	818c <__hwasan_print_memory_usage@@Base+0x1a4>
    81f4:	nop

00000000000081f8 <__hwasan_generate_tag@@Base>:
    81f8:	str	x30, [sp, #-16]!
    81fc:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    8200:	cbz	x0, 820c <__hwasan_generate_tag@@Base+0x14>
    8204:	ldr	x30, [sp], #16
    8208:	b	117d8 <__hwasan_tag_mismatch_v2@@Base+0x5e0>
    820c:	mov	w0, #0xffffffbb            	// #-69
    8210:	ldr	x30, [sp], #16
    8214:	ret

0000000000008218 <__sanitizer_print_stack_trace@@Base>:
    8218:	sub	sp, sp, #0x840
    821c:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    8220:	stp	x29, x30, [sp]
    8224:	mov	x29, sp
    8228:	ldr	w0, [x0, #3348]
    822c:	str	x19, [sp, #16]
    8230:	add	x19, x29, #0x28
    8234:	add	x1, x19, #0x10
    8238:	str	x1, [x29, #40]
    823c:	str	xzr, [x29, #48]
    8240:	str	xzr, [x29, #2104]
    8244:	cbnz	w0, 8260 <__sanitizer_print_stack_trace@@Base+0x48>
    8248:	mov	x0, x19
    824c:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
    8250:	ldp	x29, x30, [sp]
    8254:	ldr	x19, [sp, #16]
    8258:	add	sp, sp, #0x840
    825c:	ret
    8260:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
    8264:	mov	x1, x0
    8268:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    826c:	mov	x2, x29
    8270:	mov	w5, #0x100                 	// #256
    8274:	mov	x3, #0x0                   	// #0
    8278:	ldr	x4, [x4, #4056]
    827c:	mov	x0, x19
    8280:	str	x29, [x29, #2104]
    8284:	ldrb	w4, [x4, #33]
    8288:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    828c:	mov	x0, x19
    8290:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
    8294:	ldp	x29, x30, [sp]
    8298:	ldr	x19, [sp, #16]
    829c:	add	sp, sp, #0x840
    82a0:	ret
    82a4:	nop
    82a8:	mov	x3, x0
    82ac:	stp	x19, x30, [sp, #-16]!
    82b0:	mov	x19, x2
    82b4:	mov	x0, x1
    82b8:	mov	x1, x2
    82bc:	ldr	x3, [x3, #8]
    82c0:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    82c4:	add	x2, x2, #0xbd8
    82c8:	ldr	w3, [x3]
    82cc:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
    82d0:	cmp	x19, w0, sxtw
    82d4:	cset	w0, hi  // hi = pmore
    82d8:	ldp	x19, x30, [sp], #16
    82dc:	ret
    82e0:	mov	x3, x0
    82e4:	stp	x19, x30, [sp, #-16]!
    82e8:	mov	x19, x2
    82ec:	mov	x0, x1
    82f0:	mov	x1, x2
    82f4:	ldr	x3, [x3, #8]
    82f8:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    82fc:	add	x2, x2, #0xbe0
    8300:	ldr	x3, [x3]
    8304:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
    8308:	cmp	x19, w0, sxtw
    830c:	cset	w0, hi  // hi = pmore
    8310:	ldp	x19, x30, [sp], #16
    8314:	ret
    8318:	stp	x19, x30, [sp, #-16]!
    831c:	adrp	x4, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8320:	add	x4, x4, #0xbf0
    8324:	ldr	x5, [x0, #8]
    8328:	mov	x19, x2
    832c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8330:	add	x3, x3, #0xbe8
    8334:	mov	x0, x1
    8338:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    833c:	ldrb	w5, [x5]
    8340:	mov	x1, x19
    8344:	add	x2, x2, #0xbf8
    8348:	cmp	w5, #0x0
    834c:	csel	x3, x3, x4, ne  // ne = any
    8350:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
    8354:	cmp	x19, w0, sxtw
    8358:	cset	w0, hi  // hi = pmore
    835c:	ldp	x19, x30, [sp], #16
    8360:	ret
    8364:	nop
    8368:	stp	x19, x20, [sp, #-48]!
    836c:	mov	x20, x0
    8370:	mov	w2, #0xa                   	// #10
    8374:	mov	x0, x1
    8378:	mov	x19, x1
    837c:	add	x1, sp, #0x28
    8380:	str	x30, [sp, #16]
    8384:	bl	1b550 <__sanitizer_set_report_fd@@Base+0x3790>
    8388:	ldr	x2, [x20, #8]
    838c:	ldr	x1, [sp, #40]
    8390:	str	w0, [x2]
    8394:	ldrb	w0, [x1]
    8398:	cmp	w0, #0x0
    839c:	cset	w20, eq  // eq = none
    83a0:	cbnz	w0, 83b4 <__sanitizer_print_stack_trace@@Base+0x19c>
    83a4:	mov	w0, w20
    83a8:	ldr	x30, [sp, #16]
    83ac:	ldp	x19, x20, [sp], #48
    83b0:	ret
    83b4:	mov	x1, x19
    83b8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    83bc:	add	x0, x0, #0xc00
    83c0:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    83c4:	mov	w0, w20
    83c8:	ldr	x30, [sp, #16]
    83cc:	ldp	x19, x20, [sp], #48
    83d0:	ret
    83d4:	nop
    83d8:	stp	x19, x20, [sp, #-48]!
    83dc:	mov	x20, x0
    83e0:	mov	w2, #0xa                   	// #10
    83e4:	mov	x0, x1
    83e8:	mov	x19, x1
    83ec:	add	x1, sp, #0x28
    83f0:	str	x30, [sp, #16]
    83f4:	bl	1b550 <__sanitizer_set_report_fd@@Base+0x3790>
    83f8:	ldr	x2, [x20, #8]
    83fc:	ldr	x1, [sp, #40]
    8400:	str	x0, [x2]
    8404:	ldrb	w0, [x1]
    8408:	cmp	w0, #0x0
    840c:	cset	w20, eq  // eq = none
    8410:	cbnz	w0, 8424 <__sanitizer_print_stack_trace@@Base+0x20c>
    8414:	mov	w0, w20
    8418:	ldr	x30, [sp, #16]
    841c:	ldp	x19, x20, [sp], #48
    8420:	ret
    8424:	mov	x1, x19
    8428:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    842c:	add	x0, x0, #0xc30
    8430:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    8434:	mov	w0, w20
    8438:	ldr	x30, [sp, #16]
    843c:	ldp	x19, x20, [sp], #48
    8440:	ret
    8444:	nop
    8448:	mov	x2, x0
    844c:	stp	x19, x20, [sp, #-32]!
    8450:	mov	x19, x1
    8454:	mov	x0, x19
    8458:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    845c:	add	x1, x1, #0xc60
    8460:	ldr	x20, [x2, #8]
    8464:	str	x30, [sp, #16]
    8468:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
    846c:	cbnz	w0, 8484 <__sanitizer_print_stack_trace@@Base+0x26c>
    8470:	mov	w0, #0x1                   	// #1
    8474:	strb	wzr, [x20]
    8478:	ldr	x30, [sp, #16]
    847c:	ldp	x19, x20, [sp], #32
    8480:	ret
    8484:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8488:	mov	x0, x19
    848c:	add	x1, x1, #0xc68
    8490:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
    8494:	cbz	w0, 8470 <__sanitizer_print_stack_trace@@Base+0x258>
    8498:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    849c:	mov	x0, x19
    84a0:	add	x1, x1, #0xbf0
    84a4:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
    84a8:	cbz	w0, 8470 <__sanitizer_print_stack_trace@@Base+0x258>
    84ac:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
    84b0:	mov	x0, x19
    84b4:	add	x1, x1, #0x340
    84b8:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
    84bc:	cbz	w0, 84d4 <__sanitizer_print_stack_trace@@Base+0x2bc>
    84c0:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    84c4:	mov	x0, x19
    84c8:	add	x1, x1, #0xc70
    84cc:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
    84d0:	cbnz	w0, 84e4 <__sanitizer_print_stack_trace@@Base+0x2cc>
    84d4:	mov	w1, #0x1                   	// #1
    84d8:	mov	w0, #0x1                   	// #1
    84dc:	strb	w1, [x20]
    84e0:	b	8478 <__sanitizer_print_stack_trace@@Base+0x260>
    84e4:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    84e8:	mov	x0, x19
    84ec:	add	x1, x1, #0xbe8
    84f0:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
    84f4:	cbz	w0, 84d4 <__sanitizer_print_stack_trace@@Base+0x2bc>
    84f8:	mov	x1, x19
    84fc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8500:	add	x0, x0, #0xc78
    8504:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    8508:	mov	w0, #0x0                   	// #0
    850c:	ldr	x30, [sp, #16]
    8510:	ldp	x19, x20, [sp], #32
    8514:	ret
    8518:	stp	x19, x20, [sp, #-32]!
    851c:	mov	x20, x0
    8520:	mov	w19, #0x0                   	// #0
    8524:	stp	x21, x30, [sp, #16]
    8528:	mov	w21, #0x1                   	// #1
    852c:	nop
    8530:	cmp	w19, #0x9
    8534:	b.gt	8570 <__sanitizer_print_stack_trace@@Base+0x358>
    8538:	ldrb	w0, [x20]
    853c:	tst	w0, #0xff
    8540:	b.ne	855c <__sanitizer_print_stack_trace@@Base+0x344>  // b.any
    8544:	ldxrb	w0, [x20]
    8548:	stxrb	w1, w21, [x20]
    854c:	cbnz	w1, 8544 <__sanitizer_print_stack_trace@@Base+0x32c>
    8550:	dmb	ish
    8554:	tst	w0, #0xff
    8558:	b.eq	8564 <__sanitizer_print_stack_trace@@Base+0x34c>  // b.none
    855c:	add	w19, w19, #0x1
    8560:	b	8530 <__sanitizer_print_stack_trace@@Base+0x318>
    8564:	ldp	x21, x30, [sp, #16]
    8568:	ldp	x19, x20, [sp], #32
    856c:	ret
    8570:	bl	1c2d0 <__sanitizer_set_report_fd@@Base+0x4510>
    8574:	b	8538 <__sanitizer_print_stack_trace@@Base+0x320>
    8578:	ldr	x1, [x0, #8]
    857c:	mov	w0, #0x0                   	// #0
    8580:	cbz	x1, 859c <__sanitizer_print_stack_trace@@Base+0x384>
    8584:	ldr	w2, [x1, #4]
    8588:	mov	w0, #0x0                   	// #0
    858c:	cbz	w2, 859c <__sanitizer_print_stack_trace@@Base+0x384>
    8590:	ldr	w0, [x1]
    8594:	tst	x0, #0x7fffffff
    8598:	cset	w0, ne  // ne = any
    859c:	ret
    85a0:	ldr	x1, [x0, #8]
    85a4:	ldr	x0, [x0]
    85a8:	cbz	x1, 85b4 <__sanitizer_print_stack_trace@@Base+0x39c>
    85ac:	ldrsb	w2, [x1, #3]
    85b0:	tbnz	w2, #31, 85b8 <__sanitizer_print_stack_trace@@Base+0x3a0>
    85b4:	ret
    85b8:	ldr	w2, [x1]
    85bc:	add	x1, x0, #0x10
    85c0:	and	x3, x2, #0xf
    85c4:	tst	x2, #0xf
    85c8:	sub	x1, x1, x3
    85cc:	csel	x0, x1, x0, ne  // ne = any
    85d0:	ret
    85d4:	nop
    85d8:	ldr	x1, [x0, #8]
    85dc:	ldr	x0, [x0]
    85e0:	ldrsb	w2, [x1, #3]
    85e4:	ldr	w1, [x1]
    85e8:	ubfx	x1, x1, #0, #31
    85ec:	tbnz	w2, #31, 85fc <__sanitizer_print_stack_trace@@Base+0x3e4>
    85f0:	mov	w1, w1
    85f4:	add	x0, x1, x0
    85f8:	ret
    85fc:	add	x3, x0, #0x10
    8600:	and	x2, x1, #0xf
    8604:	tst	x1, #0xf
    8608:	sub	x2, x3, x2
    860c:	csel	x0, x2, x0, ne  // ne = any
    8610:	mov	w1, w1
    8614:	add	x0, x1, x0
    8618:	ret
    861c:	nop
    8620:	ldr	x0, [x0, #8]
    8624:	ldr	w0, [x0]
    8628:	and	x0, x0, #0x7fffffff
    862c:	ret
    8630:	ldr	x0, [x0, #8]
    8634:	ldr	w0, [x0, #4]
    8638:	ret
    863c:	nop
    8640:	adrp	x2, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    8644:	add	x3, x2, #0xd30
    8648:	ldr	x1, [x0]
    864c:	ldr	x0, [x3, #32]
    8650:	cmp	x1, x0
    8654:	b.cc	8668 <__sanitizer_print_stack_trace@@Base+0x450>  // b.lo, b.ul, b.last
    8658:	mov	x3, #0x2000000000          	// #137438953472
    865c:	add	x3, x0, x3
    8660:	cmp	x1, x3
    8664:	b.cc	86a4 <__sanitizer_print_stack_trace@@Base+0x48c>  // b.lo, b.ul, b.last
    8668:	add	x2, x2, #0xd30
    866c:	str	x30, [sp, #-16]!
    8670:	ldr	x2, [x2, #48]
    8674:	sub	x3, x2, #0x1
    8678:	tst	x1, x3
    867c:	b.ne	86e4 <__sanitizer_print_stack_trace@@Base+0x4cc>  // b.any
    8680:	sub	x1, x1, x2
    8684:	neg	x4, x2
    8688:	tst	x2, x3
    868c:	ldr	x0, [x1, #16]
    8690:	add	x0, x0, x3
    8694:	and	x0, x0, x4
    8698:	b.ne	8704 <__sanitizer_print_stack_trace@@Base+0x4ec>  // b.any
    869c:	ldr	x30, [sp], #16
    86a0:	ret
    86a4:	sub	x0, x1, x0
    86a8:	ubfx	x0, x0, #32, #5
    86ac:	cmp	x0, #0x1f
    86b0:	b.eq	8714 <__sanitizer_print_stack_trace@@Base+0x4fc>  // b.none
    86b4:	cmp	x0, #0x10
    86b8:	b.ls	86dc <__sanitizer_print_stack_trace@@Base+0x4c4>  // b.plast
    86bc:	sub	x0, x0, #0x10
    86c0:	mov	x1, #0x200                 	// #512
    86c4:	and	x2, x0, #0x1
    86c8:	lsr	x0, x0, #1
    86cc:	lsl	x1, x1, x0
    86d0:	lsr	x0, x1, #1
    86d4:	madd	x0, x0, x2, x1
    86d8:	ret
    86dc:	lsl	x0, x0, #5
    86e0:	ret
    86e4:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    86e8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    86ec:	add	x2, x2, #0xcd0
    86f0:	add	x0, x0, #0xcf8
    86f4:	mov	x4, #0x0                   	// #0
    86f8:	mov	x3, #0x0                   	// #0
    86fc:	mov	w1, #0x12d                 	// #301
    8700:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    8704:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8708:	add	x0, x0, #0xb38
    870c:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    8710:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    8714:	mov	x0, #0x40                  	// #64
    8718:	ret
    871c:	nop
    8720:	adrp	x1, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    8724:	ldr	x0, [x0]
    8728:	ldr	x1, [x1, #3408]
    872c:	cmp	x0, x1
    8730:	b.cc	8748 <__sanitizer_print_stack_trace@@Base+0x530>  // b.lo, b.ul, b.last
    8734:	mov	x2, #0x2000000000          	// #137438953472
    8738:	add	x1, x1, x2
    873c:	cmp	x0, x1
    8740:	cset	w0, cc  // cc = lo, ul, last
    8744:	ret
    8748:	mov	w0, #0x0                   	// #0
    874c:	ret
    8750:	stp	x19, x20, [sp, #-32]!
    8754:	mov	x2, #0x10                  	// #16
    8758:	mov	x19, x0
    875c:	mov	w1, #0x0                   	// #0
    8760:	str	x30, [sp, #16]
    8764:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    8768:	adrp	x20, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    876c:	add	x0, x20, #0xd30
    8770:	mov	w2, #0x1                   	// #1
    8774:	add	x0, x0, #0x2c0
    8778:	ldxrb	w1, [x0]
    877c:	stxrb	w3, w2, [x0]
    8780:	cbnz	w3, 8778 <__sanitizer_print_stack_trace@@Base+0x560>
    8784:	dmb	ish
    8788:	tst	w1, #0xff
    878c:	b.eq	8794 <__sanitizer_print_stack_trace@@Base+0x57c>  // b.none
    8790:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    8794:	ldp	x1, x0, [x19]
    8798:	add	x20, x20, #0xd30
    879c:	add	x2, x20, #0x2a0
    87a0:	mov	x3, x2
    87a4:	nop
    87a8:	ldr	x4, [x2, #16]
    87ac:	add	x1, x1, x4
    87b0:	str	x1, [x19]
    87b4:	ldr	x4, [x2, #24]
    87b8:	ldr	x2, [x2]
    87bc:	add	x0, x0, x4
    87c0:	str	x0, [x19, #8]
    87c4:	cmp	x2, x3
    87c8:	b.ne	87a8 <__sanitizer_print_stack_trace@@Base+0x590>  // b.any
    87cc:	cmp	x1, #0x0
    87d0:	csel	x1, x1, xzr, ge  // ge = tcont
    87d4:	cmp	x0, #0x0
    87d8:	csel	x0, x0, xzr, ge  // ge = tcont
    87dc:	stp	x1, x0, [x19]
    87e0:	dmb	ish
    87e4:	strb	wzr, [x20, #704]
    87e8:	ldr	x30, [sp, #16]
    87ec:	ldp	x19, x20, [sp], #32
    87f0:	ret
    87f4:	nop
    87f8:	stp	x19, x20, [sp, #-64]!
    87fc:	adrp	x19, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    8800:	add	x20, x19, #0xd30
    8804:	stp	x21, x22, [sp, #16]
    8808:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    880c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    8810:	stp	x23, x24, [sp, #32]
    8814:	add	x23, x20, #0x2a0
    8818:	str	x30, [sp, #48]
    881c:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    8820:	ldr	x22, [x22, #4056]
    8824:	ldrb	w1, [x0, #6]
    8828:	ldrb	w0, [x22, #59]
    882c:	eor	w1, w1, #0x1
    8830:	strb	w1, [x20, #712]
    8834:	bl	120e0 <_ZdaPvRKSt9nothrow_t@@Base+0x420>
    8838:	ldr	w22, [x22, #164]
    883c:	mov	x0, x23
    8840:	mov	x2, #0x28                  	// #40
    8844:	mov	w1, #0x0                   	// #0
    8848:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    884c:	ldr	x24, [x21, #4016]
    8850:	str	x23, [x20, #672]
    8854:	str	x23, [x20, #680]
    8858:	ldr	x0, [x24]
    885c:	cbz	x0, 8990 <__sanitizer_print_stack_trace@@Base+0x778>
    8860:	sub	x1, x0, #0x1
    8864:	tst	x1, x0
    8868:	b.ne	89a8 <__sanitizer_print_stack_trace@@Base+0x790>  // b.any
    886c:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    8870:	add	x23, x19, #0xd30
    8874:	mov	x3, #0x17ff                	// #6143
    8878:	add	x1, x0, x3
    887c:	ldr	x2, [x2, #3776]
    8880:	neg	x0, x0
    8884:	and	x1, x1, x0
    8888:	mov	x20, #0x2000000000          	// #137438953472
    888c:	mov	x0, x23
    8890:	add	x1, x1, x20
    8894:	ldr	x2, [x2]
    8898:	mov	x3, #0x0                   	// #0
    889c:	bl	24e20 <__sanitizer_sandbox_on_notify@@Base+0x1898>
    88a0:	str	x0, [x23, #32]
    88a4:	mov	x4, x0
    88a8:	cmn	x0, #0x1
    88ac:	b.eq	89c4 <__sanitizer_print_stack_trace@@Base+0x7ac>  // b.none
    88b0:	ldr	x24, [x21, #4016]
    88b4:	add	x20, x0, x20
    88b8:	str	w22, [x23, #40]
    88bc:	ldr	x0, [x24]
    88c0:	cbz	x0, 89b8 <__sanitizer_print_stack_trace@@Base+0x7a0>
    88c4:	sub	x1, x0, #0x1
    88c8:	tst	x1, x0
    88cc:	b.ne	89a8 <__sanitizer_print_stack_trace@@Base+0x790>  // b.any
    88d0:	mov	x1, #0x17ff                	// #6143
    88d4:	add	x22, x19, #0xd30
    88d8:	add	x2, x0, x1
    88dc:	neg	x0, x0
    88e0:	and	x2, x2, x0
    88e4:	mov	x1, x20
    88e8:	mov	x0, x22
    88ec:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    88f0:	add	x3, x3, #0xdf0
    88f4:	bl	24ea0 <__sanitizer_sandbox_on_notify@@Base+0x1918>
    88f8:	cmp	x20, x0
    88fc:	b.ne	89e0 <__sanitizer_print_stack_trace@@Base+0x7c8>  // b.any
    8900:	bl	7170 <__sanitizer_print_memory_profile@plt+0xb10>
    8904:	mov	x2, #0x270                 	// #624
    8908:	add	x0, x22, #0x30
    890c:	mov	w1, #0x0                   	// #0
    8910:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    8914:	ldr	x21, [x21, #4016]
    8918:	ldr	x2, [x21]
    891c:	cbz	x2, 8980 <__sanitizer_print_stack_trace@@Base+0x768>
    8920:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    8924:	add	x21, x19, #0xd30
    8928:	add	x0, x21, #0x40
    892c:	mov	x3, #0x0                   	// #0
    8930:	ldr	x4, [x4, #3944]
    8934:	str	x2, [x21, #48]
    8938:	mov	x1, #0x800000              	// #8388608
    893c:	ldr	x2, [x4]
    8940:	bl	24e20 <__sanitizer_sandbox_on_notify@@Base+0x1898>
    8944:	cbz	x0, 8a00 <__sanitizer_print_stack_trace@@Base+0x7e8>
    8948:	add	x19, x21, #0x2d0
    894c:	add	x20, x21, #0x2df
    8950:	str	x0, [x21, #56]
    8954:	nop
    8958:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    895c:	bl	117d8 <__hwasan_tag_mismatch_v2@@Base+0x5e0>
    8960:	strb	w0, [x19], #1
    8964:	cmp	x20, x19
    8968:	b.ne	8958 <__sanitizer_print_stack_trace@@Base+0x740>  // b.any
    896c:	ldp	x21, x22, [sp, #16]
    8970:	ldp	x23, x24, [sp, #32]
    8974:	ldr	x30, [sp, #48]
    8978:	ldp	x19, x20, [sp], #64
    897c:	ret
    8980:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    8984:	mov	x2, x0
    8988:	str	x0, [x21]
    898c:	b	8920 <__sanitizer_print_stack_trace@@Base+0x708>
    8990:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    8994:	str	x0, [x24]
    8998:	sub	x1, x0, #0x1
    899c:	tst	x1, x0
    89a0:	b.eq	886c <__sanitizer_print_stack_trace@@Base+0x654>  // b.none
    89a4:	nop
    89a8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    89ac:	add	x0, x0, #0xb38
    89b0:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    89b4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    89b8:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    89bc:	str	x0, [x24]
    89c0:	b	88c4 <__sanitizer_print_stack_trace@@Base+0x6ac>
    89c4:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    89c8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    89cc:	add	x2, x2, #0xd60
    89d0:	add	x0, x0, #0xd88
    89d4:	mov	x3, x4
    89d8:	mov	w1, #0x50                  	// #80
    89dc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    89e0:	mov	x4, x0
    89e4:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    89e8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    89ec:	mov	x3, x20
    89f0:	add	x2, x2, #0xe10
    89f4:	add	x0, x0, #0xd88
    89f8:	mov	w1, #0x287                 	// #647
    89fc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    8a00:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8a04:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8a08:	add	x2, x2, #0xe48
    8a0c:	add	x0, x0, #0xcf8
    8a10:	mov	x4, #0x0                   	// #0
    8a14:	mov	x3, #0x0                   	// #0
    8a18:	mov	w1, #0x25                  	// #37
    8a1c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    8a20:	stp	x19, x20, [sp, #-32]!
    8a24:	adrp	x20, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    8a28:	add	x1, x20, #0xd30
    8a2c:	mov	x19, x0
    8a30:	ldr	x2, [x1, #32]
    8a34:	str	x30, [sp, #16]
    8a38:	cmp	x0, x2
    8a3c:	b.cc	8a50 <__sanitizer_print_stack_trace@@Base+0x838>  // b.lo, b.ul, b.last
    8a40:	mov	x0, #0x2000000000          	// #137438953472
    8a44:	add	x1, x2, x0
    8a48:	cmp	x19, x1
    8a4c:	b.cc	8b90 <__sanitizer_print_stack_trace@@Base+0x978>  // b.lo, b.ul, b.last
    8a50:	add	x0, x20, #0xd30
    8a54:	mov	w2, #0x1                   	// #1
    8a58:	add	x0, x0, #0x298
    8a5c:	ldxrb	w1, [x0]
    8a60:	stxrb	w3, w2, [x0]
    8a64:	cbnz	w3, 8a5c <__sanitizer_print_stack_trace@@Base+0x844>
    8a68:	dmb	ish
    8a6c:	tst	w1, #0xff
    8a70:	b.eq	8a78 <__sanitizer_print_stack_trace@@Base+0x860>  // b.none
    8a74:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    8a78:	add	x0, x20, #0xd30
    8a7c:	ldr	x1, [x0, #104]
    8a80:	ldr	x0, [x0, #56]
    8a84:	cbz	x1, 8c44 <__sanitizer_print_stack_trace@@Base+0xa2c>
    8a88:	add	x2, x0, x1, lsl #3
    8a8c:	mov	x3, #0x0                   	// #0
    8a90:	ldr	x1, [x0]
    8a94:	cmp	x19, x1
    8a98:	b.cc	8aac <__sanitizer_print_stack_trace@@Base+0x894>  // b.lo, b.ul, b.last
    8a9c:	sub	x5, x19, x3
    8aa0:	sub	x4, x19, x1
    8aa4:	cmp	x5, x4
    8aa8:	csel	x3, x3, x1, ls  // ls = plast
    8aac:	add	x0, x0, #0x8
    8ab0:	cmp	x0, x2
    8ab4:	b.ne	8a90 <__sanitizer_print_stack_trace@@Base+0x878>  // b.any
    8ab8:	cbz	x3, 8c44 <__sanitizer_print_stack_trace@@Base+0xa2c>
    8abc:	ldr	x4, [x3]
    8ac0:	cmp	x4, x3
    8ac4:	b.hi	8c8c <__sanitizer_print_stack_trace@@Base+0xa74>  // b.pmore
    8ac8:	ldr	x0, [x3, #8]
    8acc:	add	x4, x4, x0
    8ad0:	cmp	x4, x3
    8ad4:	b.ls	8ca4 <__sanitizer_print_stack_trace@@Base+0xa8c>  // b.plast
    8ad8:	cmp	x19, x3
    8adc:	b.cc	8c70 <__sanitizer_print_stack_trace@@Base+0xa58>  // b.lo, b.ul, b.last
    8ae0:	cmp	x19, x4
    8ae4:	b.cs	8c44 <__sanitizer_print_stack_trace@@Base+0xa2c>  // b.hs, b.nlast
    8ae8:	add	x1, x20, #0xd30
    8aec:	ldr	x19, [x1, #48]
    8af0:	sub	x0, x19, #0x1
    8af4:	tst	x0, x3
    8af8:	b.ne	8cdc <__sanitizer_print_stack_trace@@Base+0xac4>  // b.any
    8afc:	add	x19, x19, x3
    8b00:	dmb	ish
    8b04:	strb	wzr, [x1, #664]
    8b08:	cbz	x19, 8c50 <__sanitizer_print_stack_trace@@Base+0xa38>
    8b0c:	add	x0, x20, #0xd30
    8b10:	mov	x1, #0xe0000000            	// #3758096384
    8b14:	ldr	x0, [x0, #32]
    8b18:	cmp	x0, x19
    8b1c:	add	x2, x0, x1
    8b20:	b.hi	8bf8 <__sanitizer_print_stack_trace@@Base+0x9e0>  // b.pmore
    8b24:	mov	x1, #0x2000000000          	// #137438953472
    8b28:	add	x1, x0, x1
    8b2c:	cmp	x1, x19
    8b30:	b.ls	8bf8 <__sanitizer_print_stack_trace@@Base+0x9e0>  // b.plast
    8b34:	sub	x0, x19, x0
    8b38:	ubfx	x1, x0, #32, #5
    8b3c:	cmp	x1, #0x1f
    8b40:	b.eq	8d08 <__sanitizer_print_stack_trace@@Base+0xaf0>  // b.none
    8b44:	lsl	w3, w1, #5
    8b48:	cmp	x1, #0x10
    8b4c:	b.ls	8b6c <__sanitizer_print_stack_trace@@Base+0x954>  // b.plast
    8b50:	sub	x3, x1, #0x10
    8b54:	mov	x4, #0x200                 	// #512
    8b58:	and	x5, x3, #0x1
    8b5c:	lsr	x3, x3, #1
    8b60:	lsl	x4, x4, x3
    8b64:	lsr	x3, x4, #1
    8b68:	madd	w3, w3, w5, w4
    8b6c:	udiv	w0, w0, w3
    8b70:	lsl	x3, x1, #32
    8b74:	add	x1, x0, #0x1
    8b78:	sub	x1, x3, x1, lsl #3
    8b7c:	add	x1, x1, x2
    8b80:	mov	x0, x19
    8b84:	ldr	x30, [sp, #16]
    8b88:	ldp	x19, x20, [sp], #32
    8b8c:	ret
    8b90:	sub	x19, x19, x2
    8b94:	ubfx	x0, x19, #32, #5
    8b98:	cmp	x0, #0x1f
    8b9c:	b.eq	8cfc <__sanitizer_print_stack_trace@@Base+0xae4>  // b.none
    8ba0:	cmp	x0, #0x10
    8ba4:	b.ls	8c64 <__sanitizer_print_stack_trace@@Base+0xa4c>  // b.plast
    8ba8:	sub	x3, x0, #0x10
    8bac:	mov	x4, #0x200                 	// #512
    8bb0:	and	x5, x3, #0x1
    8bb4:	lsr	x3, x3, #1
    8bb8:	lsl	x3, x4, x3
    8bbc:	lsr	x4, x3, #1
    8bc0:	madd	x4, x4, x5, x3
    8bc4:	mov	w3, w4
    8bc8:	udiv	w3, w19, w3
    8bcc:	add	x0, x0, x0, lsl #1
    8bd0:	add	x0, x1, x0, lsl #6
    8bd4:	mul	x3, x3, x4
    8bd8:	ldr	x0, [x0, #120]
    8bdc:	add	x4, x4, x3
    8be0:	cmp	x4, x0
    8be4:	b.hi	8c50 <__sanitizer_print_stack_trace@@Base+0xa38>  // b.pmore
    8be8:	and	x19, x19, #0xffffffff00000000
    8bec:	add	x19, x19, x2
    8bf0:	add	x19, x19, x3
    8bf4:	b	8b08 <__sanitizer_print_stack_trace@@Base+0x8f0>
    8bf8:	add	x20, x20, #0xd30
    8bfc:	ldr	x1, [x20, #48]
    8c00:	sub	x0, x1, #0x1
    8c04:	tst	x0, x19
    8c08:	b.eq	8c38 <__sanitizer_print_stack_trace@@Base+0xa20>  // b.none
    8c0c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    8c10:	mov	x2, x19
    8c14:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8c18:	add	x0, x0, #0xf08
    8c1c:	ldr	x1, [x1, #4024]
    8c20:	ldr	x1, [x1]
    8c24:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    8c28:	ldr	x1, [x20, #48]
    8c2c:	sub	x0, x1, #0x1
    8c30:	tst	x0, x19
    8c34:	b.ne	8cbc <__sanitizer_print_stack_trace@@Base+0xaa4>  // b.any
    8c38:	sub	x1, x19, x1
    8c3c:	add	x1, x1, #0x20
    8c40:	b	8b80 <__sanitizer_print_stack_trace@@Base+0x968>
    8c44:	dmb	ish
    8c48:	add	x20, x20, #0xd30
    8c4c:	strb	wzr, [x20, #664]
    8c50:	mov	x0, #0x0                   	// #0
    8c54:	mov	x1, #0x0                   	// #0
    8c58:	ldr	x30, [sp, #16]
    8c5c:	ldp	x19, x20, [sp], #32
    8c60:	ret
    8c64:	lsl	x4, x0, #5
    8c68:	cbz	x0, 8c50 <__sanitizer_print_stack_trace@@Base+0xa38>
    8c6c:	b	8bc4 <__sanitizer_print_stack_trace@@Base+0x9ac>
    8c70:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8c74:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8c78:	mov	x4, x19
    8c7c:	add	x2, x2, #0xeb8
    8c80:	add	x0, x0, #0xcf8
    8c84:	mov	w1, #0xc9                  	// #201
    8c88:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    8c8c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8c90:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8c94:	add	x2, x2, #0xe58
    8c98:	add	x0, x0, #0xcf8
    8c9c:	mov	w1, #0xc7                  	// #199
    8ca0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    8ca4:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8ca8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8cac:	add	x2, x2, #0xe80
    8cb0:	add	x0, x0, #0xcf8
    8cb4:	mov	w1, #0xc8                  	// #200
    8cb8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    8cbc:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8cc0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8cc4:	add	x2, x2, #0xf20
    8cc8:	add	x0, x0, #0xcf8
    8ccc:	mov	x4, #0x0                   	// #0
    8cd0:	mov	x3, #0x0                   	// #0
    8cd4:	mov	w1, #0xb1                  	// #177
    8cd8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    8cdc:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8ce0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8ce4:	add	x2, x2, #0xed8
    8ce8:	add	x0, x0, #0xcf8
    8cec:	mov	x4, #0x0                   	// #0
    8cf0:	mov	x3, #0x0                   	// #0
    8cf4:	mov	w1, #0x135                 	// #309
    8cf8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    8cfc:	mov	w3, #0x40                  	// #64
    8d00:	mov	x4, #0x40                  	// #64
    8d04:	b	8bc8 <__sanitizer_print_stack_trace@@Base+0x9b0>
    8d08:	mov	w3, #0x40                  	// #64
    8d0c:	b	8b6c <__sanitizer_print_stack_trace@@Base+0x954>

0000000000008d10 <__hwasan_enable_allocator_tagging@@Base>:
    8d10:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    8d14:	add	x0, x0, #0xd30
    8d18:	mov	w1, #0x1                   	// #1
    8d1c:	strb	w1, [x0, #712]
    8d20:	ret
    8d24:	nop

0000000000008d28 <__hwasan_disable_allocator_tagging@@Base>:
    8d28:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    8d2c:	add	x0, x0, #0xd30
    8d30:	strb	wzr, [x0, #712]
    8d34:	ret

0000000000008d38 <__sanitizer_get_current_allocated_bytes@@Base>:
    8d38:	stp	x19, x30, [sp, #-32]!
    8d3c:	mov	x2, #0x10                  	// #16
    8d40:	mov	w1, #0x0                   	// #0
    8d44:	add	x0, sp, x2
    8d48:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    8d4c:	adrp	x19, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    8d50:	add	x0, x19, #0xd30
    8d54:	add	x0, x0, #0x2c0
    8d58:	mov	w2, #0x1                   	// #1
    8d5c:	ldxrb	w1, [x0]
    8d60:	stxrb	w3, w2, [x0]
    8d64:	cbnz	w3, 8d5c <__sanitizer_get_current_allocated_bytes@@Base+0x24>
    8d68:	dmb	ish
    8d6c:	tst	w1, #0xff
    8d70:	b.eq	8d78 <__sanitizer_get_current_allocated_bytes@@Base+0x40>  // b.none
    8d74:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    8d78:	ldp	x1, x0, [sp, #16]
    8d7c:	add	x19, x19, #0xd30
    8d80:	add	x2, x19, #0x2a0
    8d84:	mov	x3, x2
    8d88:	ldr	x5, [x2, #16]
    8d8c:	ldr	x4, [x2, #24]
    8d90:	add	x1, x1, x5
    8d94:	ldr	x2, [x2]
    8d98:	add	x0, x0, x4
    8d9c:	cmp	x2, x3
    8da0:	b.ne	8d88 <__sanitizer_get_current_allocated_bytes@@Base+0x50>  // b.any
    8da4:	cmp	x1, #0x0
    8da8:	csel	x1, x1, xzr, ge  // ge = tcont
    8dac:	cmp	x0, #0x0
    8db0:	csel	x0, x0, xzr, ge  // ge = tcont
    8db4:	stp	x1, x0, [sp, #16]
    8db8:	dmb	ish
    8dbc:	strb	wzr, [x19, #704]
    8dc0:	ldr	x0, [sp, #16]
    8dc4:	ldp	x19, x30, [sp], #32
    8dc8:	ret
    8dcc:	nop

0000000000008dd0 <__sanitizer_get_heap_size@@Base>:
    8dd0:	stp	x19, x30, [sp, #-32]!
    8dd4:	mov	x2, #0x10                  	// #16
    8dd8:	mov	w1, #0x0                   	// #0
    8ddc:	add	x0, sp, x2
    8de0:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    8de4:	adrp	x19, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    8de8:	add	x0, x19, #0xd30
    8dec:	add	x0, x0, #0x2c0
    8df0:	mov	w2, #0x1                   	// #1
    8df4:	ldxrb	w1, [x0]
    8df8:	stxrb	w3, w2, [x0]
    8dfc:	cbnz	w3, 8df4 <__sanitizer_get_heap_size@@Base+0x24>
    8e00:	dmb	ish
    8e04:	tst	w1, #0xff
    8e08:	b.eq	8e10 <__sanitizer_get_heap_size@@Base+0x40>  // b.none
    8e0c:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    8e10:	ldp	x1, x0, [sp, #16]
    8e14:	add	x19, x19, #0xd30
    8e18:	add	x2, x19, #0x2a0
    8e1c:	mov	x3, x2
    8e20:	ldr	x5, [x2, #16]
    8e24:	ldr	x4, [x2, #24]
    8e28:	add	x1, x1, x5
    8e2c:	ldr	x2, [x2]
    8e30:	add	x0, x0, x4
    8e34:	cmp	x2, x3
    8e38:	b.ne	8e20 <__sanitizer_get_heap_size@@Base+0x50>  // b.any
    8e3c:	cmp	x1, #0x0
    8e40:	csel	x1, x1, xzr, ge  // ge = tcont
    8e44:	cmp	x0, #0x0
    8e48:	csel	x0, x0, xzr, ge  // ge = tcont
    8e4c:	stp	x1, x0, [sp, #16]
    8e50:	dmb	ish
    8e54:	strb	wzr, [x19, #704]
    8e58:	ldr	x0, [sp, #24]
    8e5c:	ldp	x19, x30, [sp], #32
    8e60:	ret
    8e64:	nop

0000000000008e68 <__sanitizer_get_free_bytes@@Base>:
    8e68:	mov	x0, #0x1                   	// #1
    8e6c:	ret

0000000000008e70 <__sanitizer_get_unmapped_bytes@@Base>:
    8e70:	mov	x0, #0x1                   	// #1
    8e74:	ret

0000000000008e78 <__sanitizer_get_estimated_allocated_size@@Base>:
    8e78:	ret
    8e7c:	nop

0000000000008e80 <__sanitizer_get_ownership@@Base>:
    8e80:	stp	x19, x20, [sp, #-48]!
    8e84:	ands	x19, x0, #0xffffffffffffff
    8e88:	str	x30, [sp, #32]
    8e8c:	b.ne	8ea0 <__sanitizer_get_ownership@@Base+0x20>  // b.any
    8e90:	mov	w0, #0x0                   	// #0
    8e94:	ldr	x30, [sp, #32]
    8e98:	ldp	x19, x20, [sp], #48
    8e9c:	ret
    8ea0:	mov	x20, x0
    8ea4:	stp	x21, x22, [sp, #16]
    8ea8:	adrp	x21, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    8eac:	add	x0, x21, #0xd30
    8eb0:	ldr	x1, [x0, #32]
    8eb4:	cmp	x19, x1
    8eb8:	b.cc	8ecc <__sanitizer_get_ownership@@Base+0x4c>  // b.lo, b.ul, b.last
    8ebc:	mov	x2, #0x2000000000          	// #137438953472
    8ec0:	add	x3, x1, x2
    8ec4:	cmp	x19, x3
    8ec8:	b.cc	8ff8 <__sanitizer_get_ownership@@Base+0x178>  // b.lo, b.ul, b.last
    8ecc:	add	x0, x21, #0xd30
    8ed0:	mov	w2, #0x1                   	// #1
    8ed4:	add	x0, x0, #0x298
    8ed8:	ldxrb	w1, [x0]
    8edc:	stxrb	w3, w2, [x0]
    8ee0:	cbnz	w3, 8ed8 <__sanitizer_get_ownership@@Base+0x58>
    8ee4:	dmb	ish
    8ee8:	tst	w1, #0xff
    8eec:	b.eq	8ef4 <__sanitizer_get_ownership@@Base+0x74>  // b.none
    8ef0:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    8ef4:	add	x0, x21, #0xd30
    8ef8:	ldr	x2, [x0, #104]
    8efc:	ldr	x0, [x0, #56]
    8f00:	cbz	x2, 90d8 <__sanitizer_get_ownership@@Base+0x258>
    8f04:	add	x2, x0, x2, lsl #3
    8f08:	mov	x3, #0x0                   	// #0
    8f0c:	nop
    8f10:	ldr	x1, [x0]
    8f14:	cmp	x19, x1
    8f18:	b.cc	8f2c <__sanitizer_get_ownership@@Base+0xac>  // b.lo, b.ul, b.last
    8f1c:	sub	x5, x19, x3
    8f20:	sub	x4, x19, x1
    8f24:	cmp	x5, x4
    8f28:	csel	x3, x3, x1, ls  // ls = plast
    8f2c:	add	x0, x0, #0x8
    8f30:	cmp	x0, x2
    8f34:	b.ne	8f10 <__sanitizer_get_ownership@@Base+0x90>  // b.any
    8f38:	cbz	x3, 90d8 <__sanitizer_get_ownership@@Base+0x258>
    8f3c:	ldr	x4, [x3]
    8f40:	cmp	x4, x3
    8f44:	b.hi	9110 <__sanitizer_get_ownership@@Base+0x290>  // b.pmore
    8f48:	ldr	x0, [x3, #8]
    8f4c:	add	x4, x4, x0
    8f50:	cmp	x4, x3
    8f54:	b.ls	9128 <__sanitizer_get_ownership@@Base+0x2a8>  // b.plast
    8f58:	cmp	x19, x3
    8f5c:	b.cc	9140 <__sanitizer_get_ownership@@Base+0x2c0>  // b.lo, b.ul, b.last
    8f60:	cmp	x19, x4
    8f64:	b.cs	90d8 <__sanitizer_get_ownership@@Base+0x258>  // b.hs, b.nlast
    8f68:	add	x0, x21, #0xd30
    8f6c:	ldr	x22, [x0, #48]
    8f70:	sub	x0, x22, #0x1
    8f74:	add	x22, x22, x3
    8f78:	tst	x0, x3
    8f7c:	b.ne	915c <__sanitizer_get_ownership@@Base+0x2dc>  // b.any
    8f80:	dmb	ish
    8f84:	add	x0, x21, #0xd30
    8f88:	strb	wzr, [x0, #664]
    8f8c:	ldr	x1, [x0, #32]
    8f90:	cmp	x19, x1
    8f94:	b.cs	90e0 <__sanitizer_get_ownership@@Base+0x260>  // b.hs, b.nlast
    8f98:	add	x21, x21, #0xd30
    8f9c:	ldr	x0, [x21, #48]
    8fa0:	sub	x1, x0, #0x1
    8fa4:	tst	x1, x19
    8fa8:	b.eq	8fd8 <__sanitizer_get_ownership@@Base+0x158>  // b.none
    8fac:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    8fb0:	mov	x2, x19
    8fb4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    8fb8:	add	x0, x0, #0xf08
    8fbc:	ldr	x1, [x1, #4024]
    8fc0:	ldr	x1, [x1]
    8fc4:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    8fc8:	ldr	x0, [x21, #48]
    8fcc:	sub	x1, x0, #0x1
    8fd0:	tst	x1, x19
    8fd4:	b.ne	917c <__sanitizer_get_ownership@@Base+0x2fc>  // b.any
    8fd8:	sub	x0, x19, x0
    8fdc:	add	x0, x0, #0x20
    8fe0:	ldrsb	w1, [x0, #3]
    8fe4:	tbnz	w1, #31, 90b0 <__sanitizer_get_ownership@@Base+0x230>
    8fe8:	cmp	x19, x22
    8fec:	b.eq	90bc <__sanitizer_get_ownership@@Base+0x23c>  // b.none
    8ff0:	ldp	x21, x22, [sp, #16]
    8ff4:	b	8e90 <__sanitizer_get_ownership@@Base+0x10>
    8ff8:	sub	x6, x19, x1
    8ffc:	ubfx	x2, x6, #32, #5
    9000:	cmp	x2, #0x1f
    9004:	b.eq	919c <__sanitizer_get_ownership@@Base+0x31c>  // b.none
    9008:	cmp	x2, #0x10
    900c:	b.ls	9100 <__sanitizer_get_ownership@@Base+0x280>  // b.plast
    9010:	sub	x0, x2, #0x10
    9014:	mov	x4, #0x200                 	// #512
    9018:	and	x5, x0, #0x1
    901c:	lsr	x0, x0, #1
    9020:	lsl	x0, x4, x0
    9024:	lsr	x4, x0, #1
    9028:	madd	x4, x4, x5, x0
    902c:	mov	w5, w4
    9030:	add	x2, x2, x2, lsl #1
    9034:	and	x22, x6, #0xffffffff00000000
    9038:	udiv	w5, w6, w5
    903c:	add	x22, x22, x1
    9040:	add	x2, x3, x2, lsl #6
    9044:	mul	x3, x5, x4
    9048:	ldr	x0, [x2, #120]
    904c:	add	x4, x4, x3
    9050:	add	x22, x22, x3
    9054:	cmp	x4, x0
    9058:	csel	x22, x22, xzr, ls  // ls = plast
    905c:	mov	x2, #0xe0000000            	// #3758096384
    9060:	add	x2, x1, x2
    9064:	ubfx	x3, x6, #32, #5
    9068:	cmp	x3, #0x1f
    906c:	b.eq	91a8 <__sanitizer_get_ownership@@Base+0x328>  // b.none
    9070:	lsl	w0, w3, #5
    9074:	cmp	x3, #0x10
    9078:	b.ls	9098 <__sanitizer_get_ownership@@Base+0x218>  // b.plast
    907c:	sub	x1, x3, #0x10
    9080:	mov	x0, #0x200                 	// #512
    9084:	and	x4, x1, #0x1
    9088:	lsr	x1, x1, #1
    908c:	lsl	x0, x0, x1
    9090:	lsr	x1, x0, #1
    9094:	madd	w0, w1, w4, w0
    9098:	udiv	w0, w6, w0
    909c:	lsl	x3, x3, #32
    90a0:	add	x0, x0, #0x1
    90a4:	sub	x0, x3, x0, lsl #3
    90a8:	add	x0, x0, x2
    90ac:	b	8fe0 <__sanitizer_get_ownership@@Base+0x160>
    90b0:	and	x20, x20, #0xfffffffffffff0
    90b4:	cmp	x22, x20
    90b8:	b.ne	8ff0 <__sanitizer_get_ownership@@Base+0x170>  // b.any
    90bc:	ldr	w0, [x0]
    90c0:	ldp	x21, x22, [sp, #16]
    90c4:	tst	x0, #0x7fffffff
    90c8:	cset	w0, ne  // ne = any
    90cc:	ldr	x30, [sp, #32]
    90d0:	ldp	x19, x20, [sp], #48
    90d4:	ret
    90d8:	mov	x22, #0x0                   	// #0
    90dc:	b	8f80 <__sanitizer_get_ownership@@Base+0x100>
    90e0:	mov	x0, #0x2000000000          	// #137438953472
    90e4:	add	x0, x1, x0
    90e8:	cmp	x19, x0
    90ec:	mov	x0, #0xe0000000            	// #3758096384
    90f0:	add	x2, x1, x0
    90f4:	b.cs	8f98 <__sanitizer_get_ownership@@Base+0x118>  // b.hs, b.nlast
    90f8:	sub	x6, x19, x1
    90fc:	b	9064 <__sanitizer_get_ownership@@Base+0x1e4>
    9100:	lsl	x4, x2, #5
    9104:	mov	x22, #0x0                   	// #0
    9108:	cbz	x2, 905c <__sanitizer_get_ownership@@Base+0x1dc>
    910c:	b	902c <__sanitizer_get_ownership@@Base+0x1ac>
    9110:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9114:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9118:	add	x2, x2, #0xe58
    911c:	add	x0, x0, #0xcf8
    9120:	mov	w1, #0xc7                  	// #199
    9124:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    9128:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    912c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9130:	add	x2, x2, #0xe80
    9134:	add	x0, x0, #0xcf8
    9138:	mov	w1, #0xc8                  	// #200
    913c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    9140:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9144:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9148:	mov	x4, x19
    914c:	add	x2, x2, #0xeb8
    9150:	add	x0, x0, #0xcf8
    9154:	mov	w1, #0xc9                  	// #201
    9158:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    915c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9160:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9164:	add	x2, x2, #0xed8
    9168:	add	x0, x0, #0xcf8
    916c:	mov	x4, #0x0                   	// #0
    9170:	mov	x3, #0x0                   	// #0
    9174:	mov	w1, #0x135                 	// #309
    9178:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    917c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9180:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9184:	add	x2, x2, #0xf20
    9188:	add	x0, x0, #0xcf8
    918c:	mov	x4, #0x0                   	// #0
    9190:	mov	x3, #0x0                   	// #0
    9194:	mov	w1, #0xb1                  	// #177
    9198:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    919c:	mov	w5, #0x40                  	// #64
    91a0:	mov	x4, #0x40                  	// #64
    91a4:	b	9030 <__sanitizer_get_ownership@@Base+0x1b0>
    91a8:	mov	w0, #0x40                  	// #64
    91ac:	b	9098 <__sanitizer_get_ownership@@Base+0x218>

00000000000091b0 <__sanitizer_get_allocated_size@@Base>:
    91b0:	stp	x19, x20, [sp, #-48]!
    91b4:	ands	x19, x0, #0xffffffffffffff
    91b8:	str	x30, [sp, #32]
    91bc:	b.ne	91d0 <__sanitizer_get_allocated_size@@Base+0x20>  // b.any
    91c0:	mov	x0, #0x0                   	// #0
    91c4:	ldr	x30, [sp, #32]
    91c8:	ldp	x19, x20, [sp], #48
    91cc:	ret
    91d0:	mov	x20, x0
    91d4:	stp	x21, x22, [sp, #16]
    91d8:	adrp	x21, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    91dc:	add	x0, x21, #0xd30
    91e0:	ldr	x1, [x0, #32]
    91e4:	cmp	x19, x1
    91e8:	b.cc	91fc <__sanitizer_get_allocated_size@@Base+0x4c>  // b.lo, b.ul, b.last
    91ec:	mov	x2, #0x2000000000          	// #137438953472
    91f0:	add	x3, x1, x2
    91f4:	cmp	x19, x3
    91f8:	b.cc	9328 <__sanitizer_get_allocated_size@@Base+0x178>  // b.lo, b.ul, b.last
    91fc:	add	x0, x21, #0xd30
    9200:	mov	w2, #0x1                   	// #1
    9204:	add	x0, x0, #0x298
    9208:	ldxrb	w1, [x0]
    920c:	stxrb	w3, w2, [x0]
    9210:	cbnz	w3, 9208 <__sanitizer_get_allocated_size@@Base+0x58>
    9214:	dmb	ish
    9218:	tst	w1, #0xff
    921c:	b.eq	9224 <__sanitizer_get_allocated_size@@Base+0x74>  // b.none
    9220:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    9224:	add	x0, x21, #0xd30
    9228:	ldr	x2, [x0, #104]
    922c:	ldr	x0, [x0, #56]
    9230:	cbz	x2, 9404 <__sanitizer_get_allocated_size@@Base+0x254>
    9234:	add	x2, x0, x2, lsl #3
    9238:	mov	x3, #0x0                   	// #0
    923c:	nop
    9240:	ldr	x1, [x0]
    9244:	cmp	x19, x1
    9248:	b.cc	925c <__sanitizer_get_allocated_size@@Base+0xac>  // b.lo, b.ul, b.last
    924c:	sub	x5, x19, x3
    9250:	sub	x4, x19, x1
    9254:	cmp	x5, x4
    9258:	csel	x3, x3, x1, ls  // ls = plast
    925c:	add	x0, x0, #0x8
    9260:	cmp	x0, x2
    9264:	b.ne	9240 <__sanitizer_get_allocated_size@@Base+0x90>  // b.any
    9268:	cbz	x3, 9404 <__sanitizer_get_allocated_size@@Base+0x254>
    926c:	ldr	x4, [x3]
    9270:	cmp	x4, x3
    9274:	b.hi	943c <__sanitizer_get_allocated_size@@Base+0x28c>  // b.pmore
    9278:	ldr	x0, [x3, #8]
    927c:	add	x4, x4, x0
    9280:	cmp	x4, x3
    9284:	b.ls	9454 <__sanitizer_get_allocated_size@@Base+0x2a4>  // b.plast
    9288:	cmp	x19, x3
    928c:	b.cc	946c <__sanitizer_get_allocated_size@@Base+0x2bc>  // b.lo, b.ul, b.last
    9290:	cmp	x19, x4
    9294:	b.cs	9404 <__sanitizer_get_allocated_size@@Base+0x254>  // b.hs, b.nlast
    9298:	add	x0, x21, #0xd30
    929c:	ldr	x22, [x0, #48]
    92a0:	sub	x0, x22, #0x1
    92a4:	add	x22, x22, x3
    92a8:	tst	x0, x3
    92ac:	b.ne	9488 <__sanitizer_get_allocated_size@@Base+0x2d8>  // b.any
    92b0:	dmb	ish
    92b4:	add	x0, x21, #0xd30
    92b8:	strb	wzr, [x0, #664]
    92bc:	ldr	x1, [x0, #32]
    92c0:	cmp	x19, x1
    92c4:	b.cs	940c <__sanitizer_get_allocated_size@@Base+0x25c>  // b.hs, b.nlast
    92c8:	add	x21, x21, #0xd30
    92cc:	ldr	x0, [x21, #48]
    92d0:	sub	x1, x0, #0x1
    92d4:	tst	x1, x19
    92d8:	b.eq	9308 <__sanitizer_get_allocated_size@@Base+0x158>  // b.none
    92dc:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    92e0:	mov	x2, x19
    92e4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    92e8:	add	x0, x0, #0xf08
    92ec:	ldr	x1, [x1, #4024]
    92f0:	ldr	x1, [x1]
    92f4:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    92f8:	ldr	x0, [x21, #48]
    92fc:	sub	x1, x0, #0x1
    9300:	tst	x1, x19
    9304:	b.ne	94a8 <__sanitizer_get_allocated_size@@Base+0x2f8>  // b.any
    9308:	sub	x0, x19, x0
    930c:	add	x0, x0, #0x20
    9310:	ldrsb	w1, [x0, #3]
    9314:	tbnz	w1, #31, 93e0 <__sanitizer_get_allocated_size@@Base+0x230>
    9318:	cmp	x19, x22
    931c:	b.eq	93ec <__sanitizer_get_allocated_size@@Base+0x23c>  // b.none
    9320:	ldp	x21, x22, [sp, #16]
    9324:	b	91c0 <__sanitizer_get_allocated_size@@Base+0x10>
    9328:	sub	x6, x19, x1
    932c:	ubfx	x2, x6, #32, #5
    9330:	cmp	x2, #0x1f
    9334:	b.eq	94c8 <__sanitizer_get_allocated_size@@Base+0x318>  // b.none
    9338:	cmp	x2, #0x10
    933c:	b.ls	942c <__sanitizer_get_allocated_size@@Base+0x27c>  // b.plast
    9340:	sub	x0, x2, #0x10
    9344:	mov	x4, #0x200                 	// #512
    9348:	and	x5, x0, #0x1
    934c:	lsr	x0, x0, #1
    9350:	lsl	x0, x4, x0
    9354:	lsr	x4, x0, #1
    9358:	madd	x4, x4, x5, x0
    935c:	mov	w5, w4
    9360:	add	x2, x2, x2, lsl #1
    9364:	and	x22, x6, #0xffffffff00000000
    9368:	udiv	w5, w6, w5
    936c:	add	x22, x22, x1
    9370:	add	x2, x3, x2, lsl #6
    9374:	mul	x3, x5, x4
    9378:	ldr	x0, [x2, #120]
    937c:	add	x4, x4, x3
    9380:	add	x22, x22, x3
    9384:	cmp	x4, x0
    9388:	csel	x22, x22, xzr, ls  // ls = plast
    938c:	mov	x2, #0xe0000000            	// #3758096384
    9390:	add	x2, x1, x2
    9394:	ubfx	x3, x6, #32, #5
    9398:	cmp	x3, #0x1f
    939c:	b.eq	94d4 <__sanitizer_get_allocated_size@@Base+0x324>  // b.none
    93a0:	lsl	w0, w3, #5
    93a4:	cmp	x3, #0x10
    93a8:	b.ls	93c8 <__sanitizer_get_allocated_size@@Base+0x218>  // b.plast
    93ac:	sub	x1, x3, #0x10
    93b0:	mov	x0, #0x200                 	// #512
    93b4:	and	x4, x1, #0x1
    93b8:	lsr	x1, x1, #1
    93bc:	lsl	x0, x0, x1
    93c0:	lsr	x1, x0, #1
    93c4:	madd	w0, w1, w4, w0
    93c8:	udiv	w0, w6, w0
    93cc:	lsl	x3, x3, #32
    93d0:	add	x0, x0, #0x1
    93d4:	sub	x0, x3, x0, lsl #3
    93d8:	add	x0, x0, x2
    93dc:	b	9310 <__sanitizer_get_allocated_size@@Base+0x160>
    93e0:	and	x20, x20, #0xfffffffffffff0
    93e4:	cmp	x22, x20
    93e8:	b.ne	9320 <__sanitizer_get_allocated_size@@Base+0x170>  // b.any
    93ec:	ldr	w0, [x0]
    93f0:	ldp	x21, x22, [sp, #16]
    93f4:	and	x0, x0, #0x7fffffff
    93f8:	ldr	x30, [sp, #32]
    93fc:	ldp	x19, x20, [sp], #48
    9400:	ret
    9404:	mov	x22, #0x0                   	// #0
    9408:	b	92b0 <__sanitizer_get_allocated_size@@Base+0x100>
    940c:	mov	x0, #0x2000000000          	// #137438953472
    9410:	add	x0, x1, x0
    9414:	cmp	x19, x0
    9418:	mov	x0, #0xe0000000            	// #3758096384
    941c:	add	x2, x1, x0
    9420:	b.cs	92c8 <__sanitizer_get_allocated_size@@Base+0x118>  // b.hs, b.nlast
    9424:	sub	x6, x19, x1
    9428:	b	9394 <__sanitizer_get_allocated_size@@Base+0x1e4>
    942c:	lsl	x4, x2, #5
    9430:	mov	x22, #0x0                   	// #0
    9434:	cbz	x2, 938c <__sanitizer_get_allocated_size@@Base+0x1dc>
    9438:	b	935c <__sanitizer_get_allocated_size@@Base+0x1ac>
    943c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9440:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9444:	add	x2, x2, #0xe58
    9448:	add	x0, x0, #0xcf8
    944c:	mov	w1, #0xc7                  	// #199
    9450:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    9454:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9458:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    945c:	add	x2, x2, #0xe80
    9460:	add	x0, x0, #0xcf8
    9464:	mov	w1, #0xc8                  	// #200
    9468:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    946c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9470:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9474:	mov	x4, x19
    9478:	add	x2, x2, #0xeb8
    947c:	add	x0, x0, #0xcf8
    9480:	mov	w1, #0xc9                  	// #201
    9484:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    9488:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    948c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9490:	add	x2, x2, #0xed8
    9494:	add	x0, x0, #0xcf8
    9498:	mov	x4, #0x0                   	// #0
    949c:	mov	x3, #0x0                   	// #0
    94a0:	mov	w1, #0x135                 	// #309
    94a4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    94a8:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    94ac:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    94b0:	add	x2, x2, #0xf20
    94b4:	add	x0, x0, #0xcf8
    94b8:	mov	x4, #0x0                   	// #0
    94bc:	mov	x3, #0x0                   	// #0
    94c0:	mov	w1, #0xb1                  	// #177
    94c4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    94c8:	mov	w5, #0x40                  	// #64
    94cc:	mov	x4, #0x40                  	// #64
    94d0:	b	9360 <__sanitizer_get_allocated_size@@Base+0x1b0>
    94d4:	mov	w0, #0x40                  	// #64
    94d8:	b	93c8 <__sanitizer_get_allocated_size@@Base+0x218>
    94dc:	nop
    94e0:	stp	x19, x20, [sp, #-96]!
    94e4:	cmp	x2, #0x10
    94e8:	mov	x19, #0x10                  	// #16
    94ec:	csel	x19, x2, x19, cs  // cs = hs, nlast
    94f0:	cmp	x1, #0x0
    94f4:	stp	x25, x26, [sp, #48]
    94f8:	stp	x27, x28, [sp, #64]
    94fc:	mov	x27, #0x1                   	// #1
    9500:	csel	x25, x1, x27, ne  // ne = any
    9504:	add	x20, x25, #0xf
    9508:	stp	x21, x22, [sp, #16]
    950c:	and	x20, x20, #0xfffffffffffffff0
    9510:	stp	x23, x24, [sp, #32]
    9514:	cmp	x25, x20
    9518:	str	x30, [sp, #80]
    951c:	b.hi	9824 <__sanitizer_get_allocated_size@@Base+0x674>  // b.pmore
    9520:	mov	x21, x1
    9524:	mov	x24, x0
    9528:	and	w26, w3, #0xff
    952c:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    9530:	mov	x23, x0
    9534:	cbz	x0, 972c <__sanitizer_get_allocated_size@@Base+0x57c>
    9538:	mov	x3, x19
    953c:	mov	x2, x20
    9540:	add	x1, x23, #0x38
    9544:	adrp	x22, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    9548:	add	x0, x22, #0xd30
    954c:	bl	b5d0 <__sanitizer_get_allocated_size@@Base+0x2420>
    9550:	mov	x27, x0
    9554:	cbz	x27, 9844 <__sanitizer_get_allocated_size@@Base+0x694>
    9558:	add	x0, x22, #0xd30
    955c:	mov	x19, #0xe0000000            	// #3758096384
    9560:	ldr	x2, [x0, #32]
    9564:	cmp	x27, x2
    9568:	add	x0, x2, x19
    956c:	b.cc	95d0 <__sanitizer_get_allocated_size@@Base+0x420>  // b.lo, b.ul, b.last
    9570:	mov	x1, #0x2000000000          	// #137438953472
    9574:	add	x1, x2, x1
    9578:	cmp	x27, x1
    957c:	b.cs	95d0 <__sanitizer_get_allocated_size@@Base+0x420>  // b.hs, b.nlast
    9580:	sub	x2, x27, x2
    9584:	ubfx	x1, x2, #32, #5
    9588:	cmp	x1, #0x1f
    958c:	b.eq	9860 <__sanitizer_get_allocated_size@@Base+0x6b0>  // b.none
    9590:	lsl	w19, w1, #5
    9594:	cmp	x1, #0x10
    9598:	b.ls	95b8 <__sanitizer_get_allocated_size@@Base+0x408>  // b.plast
    959c:	sub	x3, x1, #0x10
    95a0:	mov	x19, #0x200                 	// #512
    95a4:	and	x4, x3, #0x1
    95a8:	lsr	x3, x3, #1
    95ac:	lsl	x3, x19, x3
    95b0:	lsr	x19, x3, #1
    95b4:	madd	w19, w19, w4, w3
    95b8:	udiv	w2, w2, w19
    95bc:	lsl	x1, x1, #32
    95c0:	add	x19, x2, #0x1
    95c4:	sub	x19, x1, x19, lsl #3
    95c8:	add	x19, x19, x0
    95cc:	b	95ec <__sanitizer_get_allocated_size@@Base+0x43c>
    95d0:	add	x28, x22, #0xd30
    95d4:	ldr	x19, [x28, #48]
    95d8:	sub	x0, x19, #0x1
    95dc:	tst	x27, x0
    95e0:	b.ne	96e0 <__sanitizer_get_allocated_size@@Base+0x530>  // b.any
    95e4:	sub	x19, x27, x19
    95e8:	add	x19, x19, #0x20
    95ec:	ldr	w2, [x19]
    95f0:	ldp	x0, x1, [x24]
    95f4:	bfxil	w2, w21, #0, #31
    95f8:	str	w2, [x19]
    95fc:	bl	276f8 <__sanitizer_cov_dump@@Base+0xb98>
    9600:	str	w0, [x19, #4]
    9604:	ldrb	w1, [x19, #3]
    9608:	and	w1, w1, #0x7f
    960c:	strb	w1, [x19, #3]
    9610:	cbnz	w26, 96cc <__sanitizer_get_allocated_size@@Base+0x51c>
    9614:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    9618:	ldr	w0, [x0, #8]
    961c:	cmp	w0, #0x0
    9620:	b.le	964c <__sanitizer_get_allocated_size@@Base+0x49c>
    9624:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    9628:	ldrsw	x2, [x0, #8]
    962c:	cmp	x2, x20
    9630:	csel	x19, x2, x20, ls  // ls = plast
    9634:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    9638:	mov	x1, x0
    963c:	mov	x2, x19
    9640:	mov	x0, x27
    9644:	ldr	w1, [x1, #20]
    9648:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    964c:	cmp	x21, x20
    9650:	b.eq	966c <__sanitizer_get_allocated_size@@Base+0x4bc>  // b.none
    9654:	mvn	x2, x21
    9658:	add	x1, x22, #0xd30
    965c:	add	x2, x2, x20
    9660:	add	x1, x1, #0x2d0
    9664:	add	x0, x27, x21
    9668:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    966c:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    9670:	ldrb	w0, [x0, #1]
    9674:	cbz	w0, 977c <__sanitizer_get_allocated_size@@Base+0x5cc>
    9678:	add	x22, x22, #0xd30
    967c:	ldrb	w0, [x22, #712]
    9680:	tst	w0, #0xff
    9684:	b.ne	9798 <__sanitizer_get_allocated_size@@Base+0x5e8>  // b.any
    9688:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    968c:	ldr	x0, [x0, #3664]
    9690:	cbz	x0, 96a0 <__sanitizer_get_allocated_size@@Base+0x4f0>
    9694:	mov	x1, x20
    9698:	mov	x0, x27
    969c:	bl	6250 <__sanitizer_malloc_hook@plt>
    96a0:	mov	x1, x20
    96a4:	mov	x0, x27
    96a8:	bl	15060 <_ZdaPvRKSt9nothrow_t@@Base+0x33a0>
    96ac:	mov	x0, x27
    96b0:	ldp	x21, x22, [sp, #16]
    96b4:	ldp	x23, x24, [sp, #32]
    96b8:	ldp	x25, x26, [sp, #48]
    96bc:	ldp	x27, x28, [sp, #64]
    96c0:	ldr	x30, [sp, #80]
    96c4:	ldp	x19, x20, [sp], #96
    96c8:	ret
    96cc:	mov	x2, x20
    96d0:	mov	x0, x27
    96d4:	mov	w1, #0x0                   	// #0
    96d8:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    96dc:	b	964c <__sanitizer_get_allocated_size@@Base+0x49c>
    96e0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    96e4:	mov	x2, x27
    96e8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    96ec:	add	x0, x0, #0xf08
    96f0:	ldr	x1, [x1, #4024]
    96f4:	ldr	x1, [x1]
    96f8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    96fc:	ldr	x19, [x28, #48]
    9700:	sub	x0, x19, #0x1
    9704:	tst	x27, x0
    9708:	b.eq	95e4 <__sanitizer_get_allocated_size@@Base+0x434>  // b.none
    970c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9710:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9714:	add	x2, x2, #0xf20
    9718:	add	x0, x0, #0xcf8
    971c:	mov	x4, #0x0                   	// #0
    9720:	mov	x3, #0x0                   	// #0
    9724:	mov	w1, #0xb1                  	// #177
    9728:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    972c:	adrp	x22, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    9730:	add	x0, x22, #0xd30
    9734:	add	x0, x0, #0x2e0
    9738:	ldxrb	w1, [x0]
    973c:	stxrb	w2, w27, [x0]
    9740:	cbnz	w2, 9738 <__sanitizer_get_allocated_size@@Base+0x588>
    9744:	dmb	ish
    9748:	tst	w1, #0xff
    974c:	b.eq	9754 <__sanitizer_get_allocated_size@@Base+0x5a4>  // b.none
    9750:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    9754:	add	x0, x22, #0xd30
    9758:	mov	x3, x19
    975c:	add	x1, x0, #0x2f0
    9760:	mov	x19, x0
    9764:	mov	x2, x20
    9768:	bl	b5d0 <__sanitizer_get_allocated_size@@Base+0x2420>
    976c:	dmb	ish
    9770:	mov	x27, x0
    9774:	strb	wzr, [x19, #736]
    9778:	b	9554 <__sanitizer_get_allocated_size@@Base+0x3a4>
    977c:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    9780:	ldrb	w0, [x0, #2]
    9784:	cbz	w0, 9688 <__sanitizer_get_allocated_size@@Base+0x4d8>
    9788:	add	x22, x22, #0xd30
    978c:	ldrb	w0, [x22, #712]
    9790:	tst	w0, #0xff
    9794:	b.eq	9688 <__sanitizer_get_allocated_size@@Base+0x4d8>  // b.none
    9798:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    979c:	ldrb	w0, [x0, #1]
    97a0:	cbz	w0, 980c <__sanitizer_get_allocated_size@@Base+0x65c>
    97a4:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    97a8:	ldr	x22, [x0, #40]
    97ac:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    97b0:	ldr	x4, [x0, #48]
    97b4:	orr	x0, x22, x4
    97b8:	cbnz	x0, 9870 <__sanitizer_get_allocated_size@@Base+0x6c0>
    97bc:	mov	w21, #0xbb                  	// #187
    97c0:	cbz	x23, 97d0 <__sanitizer_get_allocated_size@@Base+0x620>
    97c4:	mov	x0, x23
    97c8:	bl	117d8 <__hwasan_tag_mismatch_v2@@Base+0x5e0>
    97cc:	and	w21, w0, #0xff
    97d0:	and	x19, x25, #0xfffffffffffffff0
    97d4:	mov	w2, w21
    97d8:	mov	x1, x19
    97dc:	mov	x0, x27
    97e0:	bl	eaf8 <__hwasan_memmove@@Base+0x130>
    97e4:	cmp	x19, x25
    97e8:	b.eq	9868 <__sanitizer_get_allocated_size@@Base+0x6b8>  // b.none
    97ec:	add	x19, x27, x19
    97f0:	and	w2, w25, #0xf
    97f4:	mov	x27, x0
    97f8:	mov	x1, #0x10                  	// #16
    97fc:	mov	x0, x19
    9800:	bl	eaf8 <__hwasan_memmove@@Base+0x130>
    9804:	strb	w21, [x19, #15]
    9808:	b	9688 <__sanitizer_get_allocated_size@@Base+0x4d8>
    980c:	mov	x0, x27
    9810:	mov	x1, x20
    9814:	mov	w2, #0x0                   	// #0
    9818:	bl	eaf8 <__hwasan_memmove@@Base+0x130>
    981c:	mov	x27, x0
    9820:	b	9688 <__sanitizer_get_allocated_size@@Base+0x4d8>
    9824:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9828:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    982c:	mov	x4, x25
    9830:	mov	x3, x20
    9834:	add	x2, x2, #0xf60
    9838:	add	x0, x0, #0xf80
    983c:	mov	w1, #0x62                  	// #98
    9840:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    9844:	bl	120b8 <_ZdaPvRKSt9nothrow_t@@Base+0x3f8>
    9848:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    984c:	tst	w0, #0xff
    9850:	b.ne	96ac <__sanitizer_get_allocated_size@@Base+0x4fc>  // b.any
    9854:	mov	x1, x24
    9858:	mov	x0, x20
    985c:	bl	26ef8 <__sanitizer_cov_dump@@Base+0x398>
    9860:	mov	w19, #0x40                  	// #64
    9864:	b	95b8 <__sanitizer_get_allocated_size@@Base+0x408>
    9868:	mov	x27, x0
    986c:	b	9688 <__sanitizer_get_allocated_size@@Base+0x4d8>
    9870:	mov	w3, #0xe995                	// #59797
    9874:	ldr	w2, [x24, #8]
    9878:	movk	w3, #0x5bd1, lsl #16
    987c:	mov	w5, #0x7                   	// #7
    9880:	cmp	w2, w5
    9884:	mov	w6, #0xb28c                	// #45708
    9888:	mul	w1, w21, w3
    988c:	csel	w0, w2, w5, ls  // ls = plast
    9890:	movk	w6, #0x9747, lsl #16
    9894:	eor	w0, w0, w6
    9898:	csel	w5, w2, w5, ls  // ls = plast
    989c:	cmp	w2, #0x1
    98a0:	eor	w1, w1, w1, lsr #24
    98a4:	mul	w0, w0, w3
    98a8:	ldr	x6, [x24]
    98ac:	mul	w1, w1, w3
    98b0:	eor	w1, w0, w1
    98b4:	b.ls	98e8 <__sanitizer_get_allocated_size@@Base+0x738>  // b.plast
    98b8:	mov	x2, #0x1                   	// #1
    98bc:	nop
    98c0:	ldr	x0, [x6, x2, lsl #3]
    98c4:	mul	w1, w1, w3
    98c8:	add	x2, x2, #0x1
    98cc:	and	w0, w0, #0xfff
    98d0:	cmp	x5, x2
    98d4:	mul	w0, w0, w3
    98d8:	eor	w0, w0, w0, lsr #24
    98dc:	mul	w0, w0, w3
    98e0:	eor	w1, w0, w1
    98e4:	b.ne	98c0 <__sanitizer_get_allocated_size@@Base+0x710>  // b.any
    98e8:	eor	w0, w1, w1, lsr #13
    98ec:	mov	w19, #0xe995                	// #59797
    98f0:	movk	w19, #0x5bd1, lsl #16
    98f4:	mul	w19, w0, w19
    98f8:	eor	w19, w19, w19, lsr #15
    98fc:	cmp	x22, x19
    9900:	ccmp	x4, x19, #0x0, ls  // ls = plast
    9904:	b.cc	980c <__sanitizer_get_allocated_size@@Base+0x65c>  // b.lo, b.ul, b.last
    9908:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    990c:	ldrb	w0, [x0, #56]
    9910:	cbz	w0, 97bc <__sanitizer_get_allocated_size@@Base+0x60c>
    9914:	mov	x2, x21
    9918:	mov	x1, x19
    991c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9920:	add	x0, x0, #0xfd0
    9924:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    9928:	mov	x0, x24
    992c:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
    9930:	b	97bc <__sanitizer_get_allocated_size@@Base+0x60c>
    9934:	nop
    9938:	stp	x19, x20, [sp, #-32]!
    993c:	mov	x19, x0
    9940:	mov	x20, x1
    9944:	stp	x21, x30, [sp, #16]
    9948:	mov	x21, #0x80000000            	// #2147483648
    994c:	cmp	x0, x21
    9950:	b.ls	9984 <__sanitizer_get_allocated_size@@Base+0x7d4>  // b.plast
    9954:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9958:	tst	w0, #0xff
    995c:	b.eq	99a8 <__sanitizer_get_allocated_size@@Base+0x7f8>  // b.none
    9960:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9964:	mov	x1, x19
    9968:	add	x0, x0, #0xfe0
    996c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    9970:	bl	235b0 <__sanitizer_sandbox_on_notify@@Base+0x28>
    9974:	mov	x0, #0x0                   	// #0
    9978:	ldp	x21, x30, [sp, #16]
    997c:	ldp	x19, x20, [sp], #32
    9980:	ret
    9984:	mov	x1, x0
    9988:	mov	w3, #0x0                   	// #0
    998c:	mov	x0, x20
    9990:	mov	x2, #0x8                   	// #8
    9994:	bl	94e0 <__sanitizer_get_allocated_size@@Base+0x330>
    9998:	cbz	x0, 9970 <__sanitizer_get_allocated_size@@Base+0x7c0>
    999c:	ldp	x21, x30, [sp, #16]
    99a0:	ldp	x19, x20, [sp], #32
    99a4:	ret
    99a8:	mov	x2, x20
    99ac:	mov	x1, x21
    99b0:	mov	x0, x19
    99b4:	bl	26ea0 <__sanitizer_cov_dump@@Base+0x340>
    99b8:	stp	x19, x20, [sp, #-48]!
    99bc:	mov	x19, #0x0                   	// #0
    99c0:	stp	x21, x30, [sp, #16]
    99c4:	mov	x21, x2
    99c8:	cbz	x1, 9a18 <__sanitizer_get_allocated_size@@Base+0x868>
    99cc:	mov	x19, x0
    99d0:	umulh	x0, x0, x1
    99d4:	cbnz	x0, 9a4c <__sanitizer_get_allocated_size@@Base+0x89c>
    99d8:	mul	x19, x19, x1
    99dc:	mov	x20, #0x80000000            	// #2147483648
    99e0:	cmp	x19, x20
    99e4:	b.ls	9a18 <__sanitizer_get_allocated_size@@Base+0x868>  // b.plast
    99e8:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    99ec:	tst	w0, #0xff
    99f0:	b.eq	9a3c <__sanitizer_get_allocated_size@@Base+0x88c>  // b.none
    99f4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    99f8:	mov	x1, x19
    99fc:	add	x0, x0, #0xfe0
    9a00:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    9a04:	bl	235b0 <__sanitizer_sandbox_on_notify@@Base+0x28>
    9a08:	mov	x0, #0x0                   	// #0
    9a0c:	ldp	x21, x30, [sp, #16]
    9a10:	ldp	x19, x20, [sp], #48
    9a14:	ret
    9a18:	mov	x1, x19
    9a1c:	mov	x0, x21
    9a20:	mov	w3, #0x1                   	// #1
    9a24:	mov	x2, #0x8                   	// #8
    9a28:	bl	94e0 <__sanitizer_get_allocated_size@@Base+0x330>
    9a2c:	cbz	x0, 9a04 <__sanitizer_get_allocated_size@@Base+0x854>
    9a30:	ldp	x21, x30, [sp, #16]
    9a34:	ldp	x19, x20, [sp], #48
    9a38:	ret
    9a3c:	mov	x2, x21
    9a40:	mov	x1, x20
    9a44:	mov	x0, x19
    9a48:	bl	26ea0 <__sanitizer_cov_dump@@Base+0x340>
    9a4c:	str	x1, [sp, #40]
    9a50:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9a54:	tst	w0, #0xff
    9a58:	ldr	x1, [sp, #40]
    9a5c:	b.ne	9a04 <__sanitizer_get_allocated_size@@Base+0x854>  // b.any
    9a60:	mov	x2, x21
    9a64:	mov	x0, x19
    9a68:	bl	26c90 <__sanitizer_cov_dump@@Base+0x130>
    9a6c:	nop
    9a70:	stp	x19, x20, [sp, #-32]!
    9a74:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    9a78:	mov	x19, x0
    9a7c:	ldr	x20, [x20, #4016]
    9a80:	stp	x21, x30, [sp, #16]
    9a84:	mov	x21, x1
    9a88:	ldr	x2, [x20]
    9a8c:	cbz	x2, 9aec <__sanitizer_get_allocated_size@@Base+0x93c>
    9a90:	mov	x20, #0x80000000            	// #2147483648
    9a94:	cmp	x19, x20
    9a98:	b.ls	9acc <__sanitizer_get_allocated_size@@Base+0x91c>  // b.plast
    9a9c:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9aa0:	tst	w0, #0xff
    9aa4:	b.eq	9afc <__sanitizer_get_allocated_size@@Base+0x94c>  // b.none
    9aa8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9aac:	mov	x1, x19
    9ab0:	add	x0, x0, #0xfe0
    9ab4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    9ab8:	bl	235b0 <__sanitizer_sandbox_on_notify@@Base+0x28>
    9abc:	mov	x0, #0x0                   	// #0
    9ac0:	ldp	x21, x30, [sp, #16]
    9ac4:	ldp	x19, x20, [sp], #32
    9ac8:	ret
    9acc:	mov	x1, x19
    9ad0:	mov	x0, x21
    9ad4:	mov	w3, #0x0                   	// #0
    9ad8:	bl	94e0 <__sanitizer_get_allocated_size@@Base+0x330>
    9adc:	cbz	x0, 9ab8 <__sanitizer_get_allocated_size@@Base+0x908>
    9ae0:	ldp	x21, x30, [sp, #16]
    9ae4:	ldp	x19, x20, [sp], #32
    9ae8:	ret
    9aec:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    9af0:	mov	x2, x0
    9af4:	str	x0, [x20]
    9af8:	b	9a90 <__sanitizer_get_allocated_size@@Base+0x8e0>
    9afc:	mov	x2, x21
    9b00:	mov	x1, x20
    9b04:	mov	x0, x19
    9b08:	bl	26ea0 <__sanitizer_cov_dump@@Base+0x340>
    9b0c:	nop
    9b10:	stp	x19, x20, [sp, #-48]!
    9b14:	mov	x19, x0
    9b18:	sub	x0, x0, #0x1
    9b1c:	stp	x21, x22, [sp, #16]
    9b20:	tst	x0, x19
    9b24:	mov	x21, x2
    9b28:	str	x30, [sp, #32]
    9b2c:	b.ne	9b8c <__sanitizer_get_allocated_size@@Base+0x9dc>  // b.any
    9b30:	mov	x22, #0x80000000            	// #2147483648
    9b34:	mov	x20, x1
    9b38:	cmp	x1, x22
    9b3c:	b.ls	9b68 <__sanitizer_get_allocated_size@@Base+0x9b8>  // b.plast
    9b40:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9b44:	tst	w0, #0xff
    9b48:	b.eq	9bb4 <__sanitizer_get_allocated_size@@Base+0xa04>  // b.none
    9b4c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9b50:	mov	x1, x20
    9b54:	add	x0, x0, #0xfe0
    9b58:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    9b5c:	bl	235b0 <__sanitizer_sandbox_on_notify@@Base+0x28>
    9b60:	mov	x0, #0x0                   	// #0
    9b64:	b	9b7c <__sanitizer_get_allocated_size@@Base+0x9cc>
    9b68:	mov	x2, x19
    9b6c:	mov	x0, x21
    9b70:	mov	w3, #0x0                   	// #0
    9b74:	bl	94e0 <__sanitizer_get_allocated_size@@Base+0x330>
    9b78:	cbz	x0, 9b5c <__sanitizer_get_allocated_size@@Base+0x9ac>
    9b7c:	ldp	x21, x22, [sp, #16]
    9b80:	ldr	x30, [sp, #32]
    9b84:	ldp	x19, x20, [sp], #48
    9b88:	ret
    9b8c:	bl	64f0 <__errno_location@plt>
    9b90:	mov	w1, #0x16                  	// #22
    9b94:	str	w1, [x0]
    9b98:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9b9c:	tst	w0, #0xff
    9ba0:	mov	x0, #0x0                   	// #0
    9ba4:	b.ne	9b7c <__sanitizer_get_allocated_size@@Base+0x9cc>  // b.any
    9ba8:	mov	x1, x21
    9bac:	mov	x0, x19
    9bb0:	bl	26da8 <__sanitizer_cov_dump@@Base+0x248>
    9bb4:	mov	x2, x21
    9bb8:	mov	x1, x22
    9bbc:	mov	x0, x20
    9bc0:	bl	26ea0 <__sanitizer_cov_dump@@Base+0x340>
    9bc4:	nop
    9bc8:	stp	x19, x20, [sp, #-48]!
    9bcc:	mov	x19, x0
    9bd0:	mov	x20, x1
    9bd4:	stp	x21, x22, [sp, #16]
    9bd8:	mov	x21, x2
    9bdc:	str	x30, [sp, #32]
    9be0:	cbnz	x0, 9c10 <__sanitizer_get_allocated_size@@Base+0xa60>
    9be4:	bl	64f0 <__errno_location@plt>
    9be8:	mov	w1, #0x16                  	// #22
    9bec:	str	w1, [x0]
    9bf0:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9bf4:	tst	w0, #0xff
    9bf8:	mov	x0, #0x0                   	// #0
    9bfc:	b.eq	9c88 <__sanitizer_get_allocated_size@@Base+0xad8>  // b.none
    9c00:	ldp	x21, x22, [sp, #16]
    9c04:	ldr	x30, [sp, #32]
    9c08:	ldp	x19, x20, [sp], #48
    9c0c:	ret
    9c10:	sub	x0, x0, #0x1
    9c14:	orr	x2, x19, x1
    9c18:	tst	x0, x2
    9c1c:	b.ne	9be4 <__sanitizer_get_allocated_size@@Base+0xa34>  // b.any
    9c20:	mov	x22, #0x80000000            	// #2147483648
    9c24:	cmp	x1, x22
    9c28:	b.ls	9c54 <__sanitizer_get_allocated_size@@Base+0xaa4>  // b.plast
    9c2c:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9c30:	tst	w0, #0xff
    9c34:	b.eq	9c78 <__sanitizer_get_allocated_size@@Base+0xac8>  // b.none
    9c38:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9c3c:	mov	x1, x20
    9c40:	add	x0, x0, #0xfe0
    9c44:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    9c48:	bl	235b0 <__sanitizer_sandbox_on_notify@@Base+0x28>
    9c4c:	mov	x0, #0x0                   	// #0
    9c50:	b	9c00 <__sanitizer_get_allocated_size@@Base+0xa50>
    9c54:	mov	x2, x19
    9c58:	mov	x0, x21
    9c5c:	mov	w3, #0x0                   	// #0
    9c60:	bl	94e0 <__sanitizer_get_allocated_size@@Base+0x330>
    9c64:	cbz	x0, 9c48 <__sanitizer_get_allocated_size@@Base+0xa98>
    9c68:	ldp	x21, x22, [sp, #16]
    9c6c:	ldr	x30, [sp, #32]
    9c70:	ldp	x19, x20, [sp], #48
    9c74:	ret
    9c78:	mov	x2, x21
    9c7c:	mov	x1, x22
    9c80:	mov	x0, x20
    9c84:	bl	26ea0 <__sanitizer_cov_dump@@Base+0x340>
    9c88:	mov	x2, x21
    9c8c:	mov	x1, x19
    9c90:	mov	x0, x20
    9c94:	bl	26df8 <__sanitizer_cov_dump@@Base+0x298>
    9c98:	stp	x19, x20, [sp, #-32]!
    9c9c:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    9ca0:	mov	x20, x0
    9ca4:	ldr	x19, [x19, #4016]
    9ca8:	stp	x21, x30, [sp, #16]
    9cac:	mov	x21, x1
    9cb0:	ldr	x2, [x19]
    9cb4:	cbz	x2, 9d34 <__sanitizer_get_allocated_size@@Base+0xb84>
    9cb8:	sub	x19, x2, #0x1
    9cbc:	tst	x2, x19
    9cc0:	b.ne	9d4c <__sanitizer_get_allocated_size@@Base+0xb9c>  // b.any
    9cc4:	add	x19, x20, x19
    9cc8:	neg	x0, x2
    9ccc:	and	x19, x19, x0
    9cd0:	cmp	x20, x19
    9cd4:	b.hi	9d5c <__sanitizer_get_allocated_size@@Base+0xbac>  // b.pmore
    9cd8:	cmp	x20, #0x0
    9cdc:	mov	x20, #0x80000000            	// #2147483648
    9ce0:	csel	x19, x19, x2, ne  // ne = any
    9ce4:	cmp	x19, x20
    9ce8:	b.ls	9d14 <__sanitizer_get_allocated_size@@Base+0xb64>  // b.plast
    9cec:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9cf0:	tst	w0, #0xff
    9cf4:	b.eq	9d84 <__sanitizer_get_allocated_size@@Base+0xbd4>  // b.none
    9cf8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9cfc:	mov	x1, x19
    9d00:	add	x0, x0, #0xfe0
    9d04:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    9d08:	bl	235b0 <__sanitizer_sandbox_on_notify@@Base+0x28>
    9d0c:	mov	x0, #0x0                   	// #0
    9d10:	b	9d28 <__sanitizer_get_allocated_size@@Base+0xb78>
    9d14:	mov	x1, x19
    9d18:	mov	x0, x21
    9d1c:	mov	w3, #0x0                   	// #0
    9d20:	bl	94e0 <__sanitizer_get_allocated_size@@Base+0x330>
    9d24:	cbz	x0, 9d08 <__sanitizer_get_allocated_size@@Base+0xb58>
    9d28:	ldp	x21, x30, [sp, #16]
    9d2c:	ldp	x19, x20, [sp], #32
    9d30:	ret
    9d34:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    9d38:	mov	x2, x0
    9d3c:	str	x0, [x19]
    9d40:	sub	x19, x2, #0x1
    9d44:	tst	x2, x19
    9d48:	b.eq	9cc4 <__sanitizer_get_allocated_size@@Base+0xb14>  // b.none
    9d4c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9d50:	add	x0, x0, #0xb38
    9d54:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    9d58:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    9d5c:	bl	64f0 <__errno_location@plt>
    9d60:	mov	w1, #0xc                   	// #12
    9d64:	str	w1, [x0]
    9d68:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9d6c:	tst	w0, #0xff
    9d70:	mov	x0, #0x0                   	// #0
    9d74:	b.ne	9d28 <__sanitizer_get_allocated_size@@Base+0xb78>  // b.any
    9d78:	mov	x1, x21
    9d7c:	mov	x0, x20
    9d80:	bl	26d30 <__sanitizer_cov_dump@@Base+0x1d0>
    9d84:	mov	x2, x21
    9d88:	mov	x1, x20
    9d8c:	mov	x0, x19
    9d90:	bl	26ea0 <__sanitizer_cov_dump@@Base+0x340>
    9d94:	nop
    9d98:	stp	x19, x20, [sp, #-64]!
    9d9c:	mov	x19, x1
    9da0:	stp	x21, x22, [sp, #16]
    9da4:	mov	x22, x3
    9da8:	str	x30, [sp, #48]
    9dac:	cbnz	x1, 9dd0 <__sanitizer_get_allocated_size@@Base+0xc20>
    9db0:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9db4:	tst	w0, #0xff
    9db8:	mov	w0, #0x16                  	// #22
    9dbc:	b.eq	9eb0 <__sanitizer_get_allocated_size@@Base+0xd00>  // b.none
    9dc0:	ldp	x21, x22, [sp, #16]
    9dc4:	ldr	x30, [sp, #48]
    9dc8:	ldp	x19, x20, [sp], #64
    9dcc:	ret
    9dd0:	stp	x23, x24, [sp, #32]
    9dd4:	sub	x23, x1, #0x1
    9dd8:	mov	x21, x0
    9ddc:	orr	x0, x23, #0x7
    9de0:	tst	x0, x1
    9de4:	b.eq	9df0 <__sanitizer_get_allocated_size@@Base+0xc40>  // b.none
    9de8:	ldp	x23, x24, [sp, #32]
    9dec:	b	9db0 <__sanitizer_get_allocated_size@@Base+0xc00>
    9df0:	mov	x24, #0x80000000            	// #2147483648
    9df4:	mov	x20, x2
    9df8:	cmp	x2, x24
    9dfc:	b.hi	9e40 <__sanitizer_get_allocated_size@@Base+0xc90>  // b.pmore
    9e00:	mov	x2, x1
    9e04:	mov	x1, x20
    9e08:	mov	x0, x3
    9e0c:	mov	w3, #0x0                   	// #0
    9e10:	bl	94e0 <__sanitizer_get_allocated_size@@Base+0x330>
    9e14:	mov	x1, x0
    9e18:	cbz	x0, 9e94 <__sanitizer_get_allocated_size@@Base+0xce4>
    9e1c:	tst	x0, x23
    9e20:	b.ne	9e74 <__sanitizer_get_allocated_size@@Base+0xcc4>  // b.any
    9e24:	ldp	x23, x24, [sp, #32]
    9e28:	str	x1, [x21]
    9e2c:	mov	w0, #0x0                   	// #0
    9e30:	ldp	x21, x22, [sp, #16]
    9e34:	ldr	x30, [sp, #48]
    9e38:	ldp	x19, x20, [sp], #64
    9e3c:	ret
    9e40:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9e44:	tst	w0, #0xff
    9e48:	b.eq	9ea0 <__sanitizer_get_allocated_size@@Base+0xcf0>  // b.none
    9e4c:	mov	x1, x20
    9e50:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9e54:	add	x0, x0, #0xfe0
    9e58:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    9e5c:	mov	w0, #0xc                   	// #12
    9e60:	ldp	x21, x22, [sp, #16]
    9e64:	ldp	x23, x24, [sp, #32]
    9e68:	ldr	x30, [sp, #48]
    9e6c:	ldp	x19, x20, [sp], #64
    9e70:	ret
    9e74:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    9e78:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    9e7c:	add	x2, x2, #0x20
    9e80:	add	x0, x0, #0xf80
    9e84:	mov	x4, #0x0                   	// #0
    9e88:	mov	x3, #0x0                   	// #0
    9e8c:	mov	w1, #0x16d                 	// #365
    9e90:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    9e94:	mov	w0, #0xc                   	// #12
    9e98:	ldp	x23, x24, [sp, #32]
    9e9c:	b	9dc0 <__sanitizer_get_allocated_size@@Base+0xc10>
    9ea0:	mov	x2, x22
    9ea4:	mov	x1, x24
    9ea8:	mov	x0, x20
    9eac:	bl	26ea0 <__sanitizer_cov_dump@@Base+0x340>
    9eb0:	mov	x1, x22
    9eb4:	mov	x0, x19
    9eb8:	stp	x23, x24, [sp, #32]
    9ebc:	bl	26e50 <__sanitizer_cov_dump@@Base+0x2f0>
    9ec0:	stp	x19, x20, [sp, #-48]!
    9ec4:	add	x19, x0, #0x50
    9ec8:	mov	x20, #0x1                   	// #1
    9ecc:	stp	x21, x22, [sp, #16]
    9ed0:	adrp	x22, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    9ed4:	mov	x21, x0
    9ed8:	add	x22, x22, #0xd30
    9edc:	str	x30, [sp, #32]
    9ee0:	b	9efc <__sanitizer_get_allocated_size@@Base+0xd4c>
    9ee4:	mov	w4, w4
    9ee8:	mov	x3, x20
    9eec:	mov	x2, x22
    9ef0:	mov	x1, x19
    9ef4:	mov	x0, x21
    9ef8:	bl	c458 <__sanitizer_get_allocated_size@@Base+0x32a8>
    9efc:	ldr	w4, [x19]
    9f00:	cbnz	w4, 9ee4 <__sanitizer_get_allocated_size@@Base+0xd34>
    9f04:	add	x20, x20, #0x1
    9f08:	add	x19, x19, #0x50
    9f0c:	cmp	x20, #0x20
    9f10:	b.ne	9efc <__sanitizer_get_allocated_size@@Base+0xd4c>  // b.any
    9f14:	ldp	x21, x22, [sp, #16]
    9f18:	ldr	x30, [sp, #32]
    9f1c:	ldp	x19, x20, [sp], #48
    9f20:	ret
    9f24:	nop
    9f28:	stp	x19, x20, [sp, #-112]!
    9f2c:	stp	x21, x22, [sp, #16]
    9f30:	stp	x23, x24, [sp, #32]
    9f34:	stp	x25, x26, [sp, #48]
    9f38:	stp	x27, x28, [sp, #64]
    9f3c:	str	x30, [sp, #80]
    9f40:	cbz	x1, a4f0 <__sanitizer_get_allocated_size@@Base+0x1340>
    9f44:	mov	x23, x0
    9f48:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    9f4c:	mov	x20, x1
    9f50:	ldr	x0, [x0, #3952]
    9f54:	cbz	x0, 9f60 <__sanitizer_get_allocated_size@@Base+0xdb0>
    9f58:	mov	x0, x1
    9f5c:	bl	6590 <__sanitizer_free_hook@plt>
    9f60:	mov	x0, x20
    9f64:	bl	150b8 <_ZdaPvRKSt9nothrow_t@@Base+0x33f8>
    9f68:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    9f6c:	ubfx	x0, x20, #4, #52
    9f70:	lsr	x2, x20, #56
    9f74:	ldr	x1, [x1, #3848]
    9f78:	ldr	x1, [x1]
    9f7c:	ldrb	w0, [x0, x1]
    9f80:	cmp	w0, w2
    9f84:	b.eq	9fb0 <__sanitizer_get_allocated_size@@Base+0xe00>  // b.none
    9f88:	cmp	w0, #0xf
    9f8c:	b.hi	a2b0 <__sanitizer_get_allocated_size@@Base+0x1100>  // b.pmore
    9f90:	and	x1, x20, #0xf
    9f94:	add	x1, x1, #0x1
    9f98:	cmp	x1, w0, uxtb
    9f9c:	b.hi	a2b0 <__sanitizer_get_allocated_size@@Base+0x1100>  // b.pmore
    9fa0:	orr	x0, x20, #0xf
    9fa4:	ldrb	w0, [x0]
    9fa8:	cmp	w0, w2
    9fac:	b.ne	a2b0 <__sanitizer_get_allocated_size@@Base+0x1100>  // b.any
    9fb0:	adrp	x21, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    9fb4:	add	x0, x21, #0xd30
    9fb8:	and	x22, x20, #0xfffffffffffff0
    9fbc:	mov	x19, #0xe0000000            	// #3758096384
    9fc0:	ldr	x2, [x0, #32]
    9fc4:	add	x0, x2, x19
    9fc8:	cmp	x22, x2
    9fcc:	b.cc	a030 <__sanitizer_get_allocated_size@@Base+0xe80>  // b.lo, b.ul, b.last
    9fd0:	mov	x1, #0x2000000000          	// #137438953472
    9fd4:	add	x1, x2, x1
    9fd8:	cmp	x22, x1
    9fdc:	b.cs	a030 <__sanitizer_get_allocated_size@@Base+0xe80>  // b.hs, b.nlast
    9fe0:	sub	x2, x22, x2
    9fe4:	ubfx	x1, x2, #32, #5
    9fe8:	cmp	x1, #0x1f
    9fec:	b.eq	a618 <__sanitizer_get_allocated_size@@Base+0x1468>  // b.none
    9ff0:	lsl	w19, w1, #5
    9ff4:	cmp	x1, #0x10
    9ff8:	b.ls	a018 <__sanitizer_get_allocated_size@@Base+0xe68>  // b.plast
    9ffc:	sub	x3, x1, #0x10
    a000:	mov	x19, #0x200                 	// #512
    a004:	and	x4, x3, #0x1
    a008:	lsr	x3, x3, #1
    a00c:	lsl	x3, x19, x3
    a010:	lsr	x19, x3, #1
    a014:	madd	w19, w19, w4, w3
    a018:	udiv	w2, w2, w19
    a01c:	lsl	x1, x1, #32
    a020:	add	x19, x2, #0x1
    a024:	sub	x19, x1, x19, lsl #3
    a028:	add	x19, x19, x0
    a02c:	b	a04c <__sanitizer_get_allocated_size@@Base+0xe9c>
    a030:	add	x24, x21, #0xd30
    a034:	ldr	x19, [x24, #48]
    a038:	sub	x0, x19, #0x1
    a03c:	tst	x0, x22
    a040:	b.ne	a22c <__sanitizer_get_allocated_size@@Base+0x107c>  // b.any
    a044:	sub	x19, x22, x19
    a048:	add	x19, x19, #0x20
    a04c:	ldp	x0, x1, [x23]
    a050:	ldr	w26, [x19]
    a054:	and	x25, x26, #0x7fffffff
    a058:	ubfx	x26, x26, #0, #31
    a05c:	bl	276f8 <__sanitizer_cov_dump@@Base+0xb98>
    a060:	ldr	w28, [x19, #4]
    a064:	cmp	x25, #0x0
    a068:	mov	w27, w0
    a06c:	csinc	x4, x25, xzr, ne  // ne = any
    a070:	add	x24, x4, #0xf
    a074:	and	x24, x24, #0xfffffffffffffff0
    a078:	cmp	x4, x24
    a07c:	b.hi	a510 <__sanitizer_get_allocated_size@@Base+0x1360>  // b.pmore
    a080:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    a084:	ldrb	w0, [x0, #12]
    a088:	cbz	w0, a0c8 <__sanitizer_get_allocated_size@@Base+0xf18>
    a08c:	cmp	x25, #0x0
    a090:	ccmp	x25, x24, #0x4, ne  // ne = any
    a094:	b.eq	a0c8 <__sanitizer_get_allocated_size@@Base+0xf18>  // b.none
    a098:	mvn	x2, x25
    a09c:	add	x2, x2, x24
    a0a0:	cmp	x2, #0xf
    a0a4:	b.hi	a5c4 <__sanitizer_get_allocated_size@@Base+0x1414>  // b.pmore
    a0a8:	cbz	x2, a0c8 <__sanitizer_get_allocated_size@@Base+0xf18>
    a0ac:	add	x1, x21, #0xd30
    a0b0:	add	x0, x25, x22
    a0b4:	add	x1, x1, #0x2d0
    a0b8:	str	x1, [sp, #104]
    a0bc:	bl	19cc0 <__sanitizer_set_report_fd@@Base+0x1f00>
    a0c0:	ldr	x1, [sp, #104]
    a0c4:	cbnz	w0, a5e4 <__sanitizer_get_allocated_size@@Base+0x1434>
    a0c8:	ldr	x0, [x19]
    a0cc:	and	x0, x0, #0x80000000
    a0d0:	str	x0, [x19]
    a0d4:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    a0d8:	mov	x19, x0
    a0dc:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    a0e0:	ldr	w0, [x0, #16]
    a0e4:	cmp	w0, #0x0
    a0e8:	b.gt	a278 <__sanitizer_get_allocated_size@@Base+0x10c8>
    a0ec:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    a0f0:	ldrb	w0, [x0, #2]
    a0f4:	cbnz	w0, a2e0 <__sanitizer_get_allocated_size@@Base+0x1130>
    a0f8:	cbz	x19, a330 <__sanitizer_get_allocated_size@@Base+0x1180>
    a0fc:	cbz	x22, a1dc <__sanitizer_get_allocated_size@@Base+0x102c>
    a100:	add	x0, x21, #0xd30
    a104:	ldr	x0, [x0, #32]
    a108:	cmp	x22, x0
    a10c:	b.cs	a46c <__sanitizer_get_allocated_size@@Base+0x12bc>  // b.hs, b.nlast
    a110:	add	x0, x21, #0xd30
    a114:	ldr	x4, [x0, #48]
    a118:	sub	x1, x4, #0x1
    a11c:	tst	x1, x22
    a120:	b.ne	a620 <__sanitizer_get_allocated_size@@Base+0x1470>  // b.any
    a124:	sub	x22, x22, x4
    a128:	add	x0, x0, #0x298
    a12c:	mov	w2, #0x1                   	// #1
    a130:	ldxrb	w1, [x0]
    a134:	stxrb	w3, w2, [x0]
    a138:	cbnz	w3, a130 <__sanitizer_get_allocated_size@@Base+0xf80>
    a13c:	dmb	ish
    a140:	tst	w1, #0xff
    a144:	b.eq	a14c <__sanitizer_get_allocated_size@@Base+0xf9c>  // b.none
    a148:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    a14c:	add	x21, x21, #0xd30
    a150:	ldr	x0, [x22, #24]
    a154:	ldr	x1, [x21, #56]
    a158:	ldr	x3, [x1, x0, lsl #3]
    a15c:	cmp	x3, x22
    a160:	b.ne	a640 <__sanitizer_get_allocated_size@@Base+0x1490>  // b.any
    a164:	ldr	x4, [x21, #104]
    a168:	mov	x3, x0
    a16c:	cmp	x0, x4
    a170:	b.cs	a600 <__sanitizer_get_allocated_size@@Base+0x1450>  // b.hs, b.nlast
    a174:	sub	x4, x4, #0x1
    a178:	ldr	x2, [x22, #8]
    a17c:	ldr	x3, [x1, x4, lsl #3]
    a180:	str	x4, [x21, #104]
    a184:	str	x3, [x1, x0, lsl #3]
    a188:	ldr	x1, [x21, #688]
    a18c:	str	x0, [x3, #24]
    a190:	ldr	x3, [x21, #128]
    a194:	sub	x1, x1, x2
    a198:	str	x1, [x21, #688]
    a19c:	ldr	x1, [x21, #136]
    a1a0:	add	x3, x3, #0x1
    a1a4:	ldr	x0, [x21, #696]
    a1a8:	sub	x1, x1, x2
    a1ac:	strb	wzr, [x21, #112]
    a1b0:	sub	x0, x0, x2
    a1b4:	str	x3, [x21, #128]
    a1b8:	str	x1, [x21, #136]
    a1bc:	str	x0, [x21, #696]
    a1c0:	dmb	ish
    a1c4:	strb	wzr, [x21, #664]
    a1c8:	ldp	x0, x1, [x22]
    a1cc:	mov	w2, #0x0                   	// #0
    a1d0:	bl	ec40 <__hwasan_memmove@@Base+0x278>
    a1d4:	ldp	x0, x1, [x22]
    a1d8:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    a1dc:	ldr	x1, [x19, #2648]
    a1e0:	cbz	x1, a210 <__sanitizer_get_allocated_size@@Base+0x1060>
    a1e4:	ldr	x0, [x1, #8]
    a1e8:	mov	x2, x1
    a1ec:	sub	x3, x0, #0x18
    a1f0:	str	x20, [x0]
    a1f4:	stp	w28, w27, [x0, #8]
    a1f8:	str	w26, [x0, #16]
    a1fc:	str	x3, [x2, #8]!
    a200:	cmp	x3, x2
    a204:	b.hi	a210 <__sanitizer_get_allocated_size@@Base+0x1060>  // b.pmore
    a208:	ldr	x0, [x1]
    a20c:	str	x0, [x1, #8]
    a210:	ldp	x21, x22, [sp, #16]
    a214:	ldp	x23, x24, [sp, #32]
    a218:	ldp	x25, x26, [sp, #48]
    a21c:	ldp	x27, x28, [sp, #64]
    a220:	ldr	x30, [sp, #80]
    a224:	ldp	x19, x20, [sp], #112
    a228:	ret
    a22c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    a230:	mov	x2, x22
    a234:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a238:	add	x0, x0, #0xf08
    a23c:	ldr	x1, [x1, #4024]
    a240:	ldr	x1, [x1]
    a244:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    a248:	ldr	x19, [x24, #48]
    a24c:	sub	x0, x19, #0x1
    a250:	tst	x0, x22
    a254:	b.eq	a044 <__sanitizer_get_allocated_size@@Base+0xe94>  // b.none
    a258:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a25c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a260:	add	x2, x2, #0xf20
    a264:	add	x0, x0, #0xcf8
    a268:	mov	x4, #0x0                   	// #0
    a26c:	mov	x3, #0x0                   	// #0
    a270:	mov	w1, #0xb1                  	// #177
    a274:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    a278:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    a27c:	ldrsw	x2, [x0, #16]
    a280:	cmp	x2, x24
    a284:	csel	x25, x2, x24, ls  // ls = plast
    a288:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    a28c:	mov	x1, x0
    a290:	mov	x2, x25
    a294:	mov	x0, x22
    a298:	ldr	w1, [x1, #24]
    a29c:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    a2a0:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    a2a4:	ldrb	w0, [x0, #2]
    a2a8:	cbz	w0, a0f8 <__sanitizer_get_allocated_size@@Base+0xf48>
    a2ac:	b	a2e0 <__sanitizer_get_allocated_size@@Base+0x1130>
    a2b0:	mov	x0, x23
    a2b4:	mov	x1, x20
    a2b8:	bl	ff30 <__hwasan_memmove@@Base+0x1568>
    a2bc:	adrp	x21, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    a2c0:	add	x0, x21, #0xd30
    a2c4:	and	x22, x20, #0xfffffffffffff0
    a2c8:	mov	x19, #0xe0000000            	// #3758096384
    a2cc:	ldr	x2, [x0, #32]
    a2d0:	add	x0, x2, x19
    a2d4:	cmp	x22, x2
    a2d8:	b.cc	a030 <__sanitizer_get_allocated_size@@Base+0xe80>  // b.lo, b.ul, b.last
    a2dc:	b	9fd0 <__sanitizer_get_allocated_size@@Base+0xe20>
    a2e0:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    a2e4:	ldr	x25, [x0, #40]
    a2e8:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    a2ec:	ldr	x4, [x0, #48]
    a2f0:	orr	x0, x25, x4
    a2f4:	cbnz	x0, a65c <__sanitizer_get_allocated_size@@Base+0x14ac>
    a2f8:	add	x0, x21, #0xd30
    a2fc:	ldrb	w0, [x0, #712]
    a300:	tst	w0, #0xff
    a304:	b.eq	a0f8 <__sanitizer_get_allocated_size@@Base+0xf48>  // b.none
    a308:	mov	w2, #0xbc                  	// #188
    a30c:	cbz	x19, a31c <__sanitizer_get_allocated_size@@Base+0x116c>
    a310:	mov	x0, x19
    a314:	bl	117d8 <__hwasan_tag_mismatch_v2@@Base+0x5e0>
    a318:	and	w2, w0, #0xff
    a31c:	mov	x1, x24
    a320:	mov	x0, x22
    a324:	bl	eaf8 <__hwasan_memmove@@Base+0x130>
    a328:	cbnz	x19, a0fc <__sanitizer_get_allocated_size@@Base+0xf4c>
    a32c:	nop
    a330:	add	x0, x21, #0xd30
    a334:	mov	w2, #0x1                   	// #1
    a338:	add	x0, x0, #0x2e0
    a33c:	ldxrb	w1, [x0]
    a340:	stxrb	w3, w2, [x0]
    a344:	cbnz	w3, a33c <__sanitizer_get_allocated_size@@Base+0x118c>
    a348:	dmb	ish
    a34c:	tst	w1, #0xff
    a350:	b.eq	a358 <__sanitizer_get_allocated_size@@Base+0x11a8>  // b.none
    a354:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    a358:	cbz	x22, a444 <__sanitizer_get_allocated_size@@Base+0x1294>
    a35c:	add	x0, x21, #0xd30
    a360:	ldr	x1, [x0, #32]
    a364:	cmp	x22, x1
    a368:	b.cc	a37c <__sanitizer_get_allocated_size@@Base+0x11cc>  // b.lo, b.ul, b.last
    a36c:	mov	x2, #0x2000000000          	// #137438953472
    a370:	add	x2, x1, x2
    a374:	cmp	x22, x2
    a378:	b.cc	a52c <__sanitizer_get_allocated_size@@Base+0x137c>  // b.lo, b.ul, b.last
    a37c:	add	x0, x21, #0xd30
    a380:	ldr	x4, [x0, #48]
    a384:	sub	x1, x4, #0x1
    a388:	tst	x1, x22
    a38c:	b.ne	a620 <__sanitizer_get_allocated_size@@Base+0x1470>  // b.any
    a390:	sub	x22, x22, x4
    a394:	add	x0, x0, #0x298
    a398:	mov	w2, #0x1                   	// #1
    a39c:	ldxrb	w1, [x0]
    a3a0:	stxrb	w3, w2, [x0]
    a3a4:	cbnz	w3, a39c <__sanitizer_get_allocated_size@@Base+0x11ec>
    a3a8:	dmb	ish
    a3ac:	tst	w1, #0xff
    a3b0:	b.eq	a3b8 <__sanitizer_get_allocated_size@@Base+0x1208>  // b.none
    a3b4:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    a3b8:	add	x0, x21, #0xd30
    a3bc:	ldr	x1, [x22, #24]
    a3c0:	ldr	x2, [x0, #56]
    a3c4:	ldr	x3, [x2, x1, lsl #3]
    a3c8:	cmp	x3, x22
    a3cc:	b.ne	a640 <__sanitizer_get_allocated_size@@Base+0x1490>  // b.any
    a3d0:	ldr	x4, [x0, #104]
    a3d4:	cmp	x1, x4
    a3d8:	b.cs	a5fc <__sanitizer_get_allocated_size@@Base+0x144c>  // b.hs, b.nlast
    a3dc:	sub	x4, x4, #0x1
    a3e0:	ldr	x3, [x22, #8]
    a3e4:	str	x4, [x0, #104]
    a3e8:	ldr	x4, [x2, x4, lsl #3]
    a3ec:	str	x4, [x2, x1, lsl #3]
    a3f0:	ldr	x2, [x0, #688]
    a3f4:	str	x1, [x4, #24]
    a3f8:	sub	x2, x2, x3
    a3fc:	str	x2, [x0, #688]
    a400:	ldr	x4, [x0, #128]
    a404:	strb	wzr, [x0, #112]
    a408:	ldr	x2, [x0, #136]
    a40c:	add	x4, x4, #0x1
    a410:	ldr	x1, [x0, #696]
    a414:	sub	x2, x2, x3
    a418:	str	x4, [x0, #128]
    a41c:	sub	x1, x1, x3
    a420:	str	x2, [x0, #136]
    a424:	str	x1, [x0, #696]
    a428:	dmb	ish
    a42c:	strb	wzr, [x0, #664]
    a430:	ldp	x0, x1, [x22]
    a434:	mov	w2, #0x0                   	// #0
    a438:	bl	ec40 <__hwasan_memmove@@Base+0x278>
    a43c:	ldp	x0, x1, [x22]
    a440:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    a444:	dmb	ish
    a448:	add	x21, x21, #0xd30
    a44c:	strb	wzr, [x21, #736]
    a450:	ldp	x21, x22, [sp, #16]
    a454:	ldp	x23, x24, [sp, #32]
    a458:	ldp	x25, x26, [sp, #48]
    a45c:	ldp	x27, x28, [sp, #64]
    a460:	ldr	x30, [sp, #80]
    a464:	ldp	x19, x20, [sp], #112
    a468:	ret
    a46c:	mov	x1, #0x2000000000          	// #137438953472
    a470:	add	x1, x0, x1
    a474:	cmp	x22, x1
    a478:	b.cs	a110 <__sanitizer_get_allocated_size@@Base+0xf60>  // b.hs, b.nlast
    a47c:	sub	x0, x22, x0
    a480:	tst	x0, #0x1f00000000
    a484:	ubfx	x25, x0, #32, #5
    a488:	b.eq	a710 <__sanitizer_get_allocated_size@@Base+0x1560>  // b.none
    a48c:	lsl	x24, x25, #2
    a490:	add	x23, x19, #0x38
    a494:	add	x5, x24, x25
    a498:	lsl	x7, x5, #4
    a49c:	add	x1, x23, x7
    a4a0:	ldr	w2, [x1, #4]
    a4a4:	cbz	w2, a730 <__sanitizer_get_allocated_size@@Base+0x1580>
    a4a8:	add	x7, x19, x7
    a4ac:	ldp	w4, w2, [x7, #56]
    a4b0:	cmp	w4, w2
    a4b4:	b.eq	a7c8 <__sanitizer_get_allocated_size@@Base+0x1618>  // b.none
    a4b8:	add	x24, x24, x25
    a4bc:	add	w2, w4, #0x1
    a4c0:	sub	x0, x0, x25, lsl #32
    a4c4:	str	w2, [x7, #56]
    a4c8:	lsl	x24, x24, #2
    a4cc:	add	x4, x24, w4, uxtw
    a4d0:	lsr	x0, x0, #4
    a4d4:	add	x4, x4, #0x4
    a4d8:	ldr	x2, [x19, #2632]
    a4dc:	str	w0, [x23, x4, lsl #2]
    a4e0:	ldr	x0, [x7, #64]
    a4e4:	sub	x2, x2, x0
    a4e8:	str	x2, [x19, #2632]
    a4ec:	b	a1dc <__sanitizer_get_allocated_size@@Base+0x102c>
    a4f0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    a4f4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a4f8:	add	x2, x2, #0x50
    a4fc:	add	x0, x0, #0xf80
    a500:	mov	x4, #0x0                   	// #0
    a504:	mov	x3, #0x0                   	// #0
    a508:	mov	w1, #0xb7                  	// #183
    a50c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    a510:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a514:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a518:	mov	x3, x24
    a51c:	add	x2, x2, #0xf60
    a520:	add	x0, x0, #0xf80
    a524:	mov	w1, #0x62                  	// #98
    a528:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    a52c:	sub	x7, x22, x1
    a530:	tst	x7, #0x1f00000000
    a534:	ubfx	x20, x7, #32, #5
    a538:	b.eq	a710 <__sanitizer_get_allocated_size@@Base+0x1560>  // b.none
    a53c:	lsl	x19, x20, #2
    a540:	add	x0, x0, #0x2f0
    a544:	add	x1, x19, x20
    a548:	add	x1, x0, x1, lsl #4
    a54c:	ldr	w2, [x1, #4]
    a550:	cbz	w2, a828 <__sanitizer_get_allocated_size@@Base+0x1678>
    a554:	add	x4, x19, x20
    a558:	add	x23, x21, #0xd30
    a55c:	add	x0, x23, #0x2f0
    a560:	lsl	x4, x4, #4
    a564:	add	x2, x0, x4
    a568:	ldr	w4, [x0, x4]
    a56c:	ldr	w2, [x2, #4]
    a570:	cmp	w4, w2
    a574:	b.eq	a80c <__sanitizer_get_allocated_size@@Base+0x165c>  // b.none
    a578:	add	x19, x19, x20
    a57c:	add	x0, x21, #0xd30
    a580:	add	x0, x0, #0x2f0
    a584:	sub	x1, x7, x20, lsl #32
    a588:	lsl	x4, x19, #4
    a58c:	lsl	x19, x19, #2
    a590:	lsr	x2, x1, #4
    a594:	add	x5, x0, x4
    a598:	ldr	x3, [x0, #2576]
    a59c:	ldr	w1, [x0, x4]
    a5a0:	ldr	x5, [x5, #8]
    a5a4:	add	w6, w1, #0x1
    a5a8:	add	x1, x19, w1, uxtw
    a5ac:	str	w6, [x0, x4]
    a5b0:	add	x1, x1, #0x4
    a5b4:	sub	x3, x3, x5
    a5b8:	str	x3, [x0, #2576]
    a5bc:	str	w2, [x0, x1, lsl #2]
    a5c0:	b	a444 <__sanitizer_get_allocated_size@@Base+0x1294>
    a5c4:	mov	x3, x2
    a5c8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a5cc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    a5d0:	add	x0, x0, #0xf80
    a5d4:	add	x2, x2, #0x68
    a5d8:	mov	x4, #0x10                  	// #16
    a5dc:	mov	w1, #0xcb                  	// #203
    a5e0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    a5e4:	mov	x3, x1
    a5e8:	mov	x2, x25
    a5ec:	mov	x1, x20
    a5f0:	mov	x0, x23
    a5f4:	bl	10328 <__hwasan_memmove@@Base+0x1960>
    a5f8:	b	a0c8 <__sanitizer_get_allocated_size@@Base+0xf18>
    a5fc:	mov	x3, x1
    a600:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    a604:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a608:	add	x2, x2, #0xb0
    a60c:	add	x0, x0, #0xcf8
    a610:	mov	w1, #0x8c                  	// #140
    a614:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    a618:	mov	w19, #0x40                  	// #64
    a61c:	b	a018 <__sanitizer_get_allocated_size@@Base+0xe68>
    a620:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a624:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a628:	add	x2, x2, #0xcd0
    a62c:	add	x0, x0, #0xcf8
    a630:	mov	x4, #0x0                   	// #0
    a634:	mov	x3, #0x0                   	// #0
    a638:	mov	w1, #0x12d                 	// #301
    a63c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    a640:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    a644:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a648:	mov	x4, x22
    a64c:	add	x2, x2, #0x90
    a650:	add	x0, x0, #0xcf8
    a654:	mov	w1, #0x8b                  	// #139
    a658:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    a65c:	ldr	w1, [x23, #8]
    a660:	mov	w6, #0x7                   	// #7
    a664:	mov	w2, #0xb28c                	// #45708
    a668:	mov	w3, #0xe995                	// #59797
    a66c:	cmp	w1, w6
    a670:	movk	w2, #0x9747, lsl #16
    a674:	csel	w0, w1, w6, ls  // ls = plast
    a678:	movk	w3, #0x5bd1, lsl #16
    a67c:	eor	w0, w0, w2
    a680:	csel	w6, w1, w6, ls  // ls = plast
    a684:	cmp	w1, #0x1
    a688:	ldr	x7, [x23]
    a68c:	mul	w1, w0, w3
    a690:	b.ls	a6c0 <__sanitizer_get_allocated_size@@Base+0x1510>  // b.plast
    a694:	mov	x2, #0x1                   	// #1
    a698:	ldr	x0, [x7, x2, lsl #3]
    a69c:	mul	w1, w1, w3
    a6a0:	add	x2, x2, #0x1
    a6a4:	and	w0, w0, #0xfff
    a6a8:	cmp	x6, x2
    a6ac:	mul	w0, w0, w3
    a6b0:	eor	w0, w0, w0, lsr #24
    a6b4:	mul	w0, w0, w3
    a6b8:	eor	w1, w0, w1
    a6bc:	b.ne	a698 <__sanitizer_get_allocated_size@@Base+0x14e8>  // b.any
    a6c0:	eor	w0, w1, w1, lsr #13
    a6c4:	mov	w1, #0xe995                	// #59797
    a6c8:	movk	w1, #0x5bd1, lsl #16
    a6cc:	mul	w0, w0, w1
    a6d0:	eor	w1, w0, w0, lsr #15
    a6d4:	str	x1, [sp, #104]
    a6d8:	cmp	x25, x1
    a6dc:	ccmp	x4, x1, #0x0, ls  // ls = plast
    a6e0:	b.cc	a0f8 <__sanitizer_get_allocated_size@@Base+0xf48>  // b.lo, b.ul, b.last
    a6e4:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    a6e8:	ldrb	w0, [x0, #56]
    a6ec:	ldr	x1, [sp, #104]
    a6f0:	cbz	w0, a2f8 <__sanitizer_get_allocated_size@@Base+0x1148>
    a6f4:	mov	x2, #0x0                   	// #0
    a6f8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a6fc:	add	x0, x0, #0xfd0
    a700:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    a704:	mov	x0, x23
    a708:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
    a70c:	b	a2f8 <__sanitizer_get_allocated_size@@Base+0x1148>
    a710:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    a714:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    a718:	add	x2, x2, #0x2c8
    a71c:	add	x0, x0, #0x2e0
    a720:	mov	x4, #0x0                   	// #0
    a724:	mov	x3, #0x0                   	// #0
    a728:	mov	w1, #0x31                  	// #49
    a72c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    a730:	mov	x4, #0x1                   	// #1
    a734:	mov	w10, w4
    a738:	mov	w8, #0x400                 	// #1024
    a73c:	mov	w11, #0x8                   	// #8
    a740:	mov	x9, #0x200                 	// #512
    a744:	nop
    a748:	lsl	x5, x4, #5
    a74c:	add	x3, x4, x4, lsl #2
    a750:	add	x4, x4, #0x1
    a754:	add	x3, x19, x3, lsl #4
    a758:	udiv	w2, w8, w5
    a75c:	mov	x6, x3
    a760:	str	x5, [x3, #64]
    a764:	cmp	w2, #0x8
    a768:	csel	w2, w2, w11, ls  // ls = plast
    a76c:	lsl	w2, w2, #1
    a770:	str	w2, [x3, #60]
    a774:	cmp	x4, #0x1f
    a778:	b.eq	a7f8 <__sanitizer_get_allocated_size@@Base+0x1648>  // b.none
    a77c:	cmp	x4, #0x10
    a780:	b.ls	a748 <__sanitizer_get_allocated_size@@Base+0x1598>  // b.plast
    a784:	sub	x5, x4, #0x10
    a788:	add	x4, x4, #0x1
    a78c:	and	x3, x5, #0x1
    a790:	add	x6, x6, #0x50
    a794:	lsr	x5, x5, #1
    a798:	lsl	x5, x9, x5
    a79c:	lsr	x2, x5, #1
    a7a0:	madd	x2, x2, x3, x5
    a7a4:	str	x2, [x6, #64]
    a7a8:	udiv	w2, w8, w2
    a7ac:	cmp	w2, #0x0
    a7b0:	csel	w2, w2, w10, ne  // ne = any
    a7b4:	cmp	x4, #0x20
    a7b8:	lsl	w2, w2, #1
    a7bc:	str	w2, [x6, #60]
    a7c0:	b.ne	a774 <__sanitizer_get_allocated_size@@Base+0x15c4>  // b.any
    a7c4:	b	a4a8 <__sanitizer_get_allocated_size@@Base+0x12f8>
    a7c8:	add	x21, x21, #0xd30
    a7cc:	lsr	w4, w4, #1
    a7d0:	mov	x0, x23
    a7d4:	mov	x2, x21
    a7d8:	mov	x3, x25
    a7dc:	str	x7, [sp, #104]
    a7e0:	bl	c458 <__sanitizer_get_allocated_size@@Base+0x32a8>
    a7e4:	ldr	x7, [sp, #104]
    a7e8:	ldr	x0, [x21, #32]
    a7ec:	ldr	w4, [x7, #56]
    a7f0:	sub	x0, x22, x0
    a7f4:	b	a4b8 <__sanitizer_get_allocated_size@@Base+0x1308>
    a7f8:	mov	w3, #0x10                  	// #16
    a7fc:	mov	x2, #0x40                  	// #64
    a800:	str	w3, [x19, #2540]
    a804:	str	x2, [x19, #2544]
    a808:	b	a4a8 <__sanitizer_get_allocated_size@@Base+0x12f8>
    a80c:	lsr	w4, w4, #1
    a810:	mov	x3, x20
    a814:	mov	x2, x23
    a818:	bl	c458 <__sanitizer_get_allocated_size@@Base+0x32a8>
    a81c:	ldr	x1, [x23, #32]
    a820:	sub	x7, x22, x1
    a824:	b	a578 <__sanitizer_get_allocated_size@@Base+0x13c8>
    a828:	mov	x2, #0x1                   	// #1
    a82c:	mov	x6, x0
    a830:	mov	w11, w2
    a834:	mov	w8, #0x400                 	// #1024
    a838:	mov	w12, #0x8                   	// #8
    a83c:	mov	x10, #0x200                 	// #512
    a840:	lsl	x9, x2, #5
    a844:	add	x0, x2, x2, lsl #2
    a848:	add	x2, x2, #0x1
    a84c:	lsl	x0, x0, #4
    a850:	udiv	w3, w8, w9
    a854:	add	x4, x6, x0
    a858:	add	x0, x0, #0x54
    a85c:	add	x5, x6, x0
    a860:	str	x9, [x4, #8]
    a864:	cmp	w3, #0x8
    a868:	csel	w3, w3, w12, ls  // ls = plast
    a86c:	lsl	w3, w3, #1
    a870:	str	w3, [x4, #4]
    a874:	cmp	x2, #0x1f
    a878:	b.eq	a8c8 <__sanitizer_get_allocated_size@@Base+0x1718>  // b.none
    a87c:	cmp	x2, #0x10
    a880:	b.ls	a840 <__sanitizer_get_allocated_size@@Base+0x1690>  // b.plast
    a884:	sub	x4, x2, #0x10
    a888:	add	x2, x2, #0x1
    a88c:	and	x3, x4, #0x1
    a890:	add	x5, x5, #0x50
    a894:	lsr	x4, x4, #1
    a898:	lsl	x4, x10, x4
    a89c:	lsr	x0, x4, #1
    a8a0:	madd	x0, x0, x3, x4
    a8a4:	stur	x0, [x5, #-76]
    a8a8:	udiv	w0, w8, w0
    a8ac:	cmp	w0, #0x0
    a8b0:	csel	w0, w0, w11, ne  // ne = any
    a8b4:	cmp	x2, #0x20
    a8b8:	lsl	w0, w0, #1
    a8bc:	stur	w0, [x5, #-80]
    a8c0:	b.ne	a874 <__sanitizer_get_allocated_size@@Base+0x16c4>  // b.any
    a8c4:	b	a554 <__sanitizer_get_allocated_size@@Base+0x13a4>
    a8c8:	add	x0, x21, #0xd30
    a8cc:	mov	w3, #0x10                  	// #16
    a8d0:	mov	x2, #0x40                  	// #64
    a8d4:	str	w3, [x0, #3236]
    a8d8:	str	x2, [x0, #3240]
    a8dc:	b	a554 <__sanitizer_get_allocated_size@@Base+0x13a4>
    a8e0:	mov	x2, x0
    a8e4:	mov	x0, x1
    a8e8:	mov	x1, x2
    a8ec:	b	9f28 <__sanitizer_get_allocated_size@@Base+0xd78>
    a8f0:	stp	x19, x20, [sp, #-64]!
    a8f4:	mov	x20, x1
    a8f8:	stp	x21, x22, [sp, #16]
    a8fc:	mov	x22, x2
    a900:	str	x30, [sp, #48]
    a904:	cbz	x0, aae0 <__sanitizer_get_allocated_size@@Base+0x1930>
    a908:	mov	x19, x0
    a90c:	cbz	x1, ab08 <__sanitizer_get_allocated_size@@Base+0x1958>
    a910:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    a914:	ubfx	x0, x0, #4, #52
    a918:	lsr	x2, x19, #56
    a91c:	ldr	x1, [x1, #3848]
    a920:	ldr	x1, [x1]
    a924:	ldrb	w0, [x0, x1]
    a928:	cmp	w0, w2
    a92c:	b.eq	a958 <__sanitizer_get_allocated_size@@Base+0x17a8>  // b.none
    a930:	cmp	w0, #0xf
    a934:	b.hi	aa64 <__sanitizer_get_allocated_size@@Base+0x18b4>  // b.pmore
    a938:	and	x1, x19, #0xf
    a93c:	add	x1, x1, #0x1
    a940:	cmp	x1, w0, uxtb
    a944:	b.hi	aa64 <__sanitizer_get_allocated_size@@Base+0x18b4>  // b.pmore
    a948:	orr	x0, x19, #0xf
    a94c:	ldrb	w0, [x0]
    a950:	cmp	w0, w2
    a954:	b.ne	aa64 <__sanitizer_get_allocated_size@@Base+0x18b4>  // b.any
    a958:	mov	x0, #0x80000000            	// #2147483648
    a95c:	cmp	x20, x0
    a960:	b.ls	a99c <__sanitizer_get_allocated_size@@Base+0x17ec>  // b.plast
    a964:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    a968:	tst	w0, #0xff
    a96c:	b.eq	ab54 <__sanitizer_get_allocated_size@@Base+0x19a4>  // b.none
    a970:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a974:	mov	x1, x20
    a978:	add	x0, x0, #0xfe0
    a97c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    a980:	mov	x21, #0x0                   	// #0
    a984:	bl	235b0 <__sanitizer_sandbox_on_notify@@Base+0x28>
    a988:	mov	x0, x21
    a98c:	ldp	x21, x22, [sp, #16]
    a990:	ldr	x30, [sp, #48]
    a994:	ldp	x19, x20, [sp], #64
    a998:	ret
    a99c:	mov	x1, x20
    a9a0:	mov	x0, x22
    a9a4:	mov	w3, #0x0                   	// #0
    a9a8:	mov	x2, #0x8                   	// #8
    a9ac:	bl	94e0 <__sanitizer_get_allocated_size@@Base+0x330>
    a9b0:	mov	x21, x0
    a9b4:	cbz	x0, a980 <__sanitizer_get_allocated_size@@Base+0x17d0>
    a9b8:	adrp	x1, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    a9bc:	add	x0, x1, #0xd30
    a9c0:	stp	x23, x24, [sp, #32]
    a9c4:	and	x23, x19, #0xffffffffffffff
    a9c8:	mov	x2, #0xe0000000            	// #3758096384
    a9cc:	ldr	x0, [x0, #32]
    a9d0:	add	x2, x0, x2
    a9d4:	cmp	x23, x0
    a9d8:	b.cs	aa80 <__sanitizer_get_allocated_size@@Base+0x18d0>  // b.hs, b.nlast
    a9dc:	add	x24, x1, #0xd30
    a9e0:	ldr	x0, [x24, #48]
    a9e4:	sub	x1, x0, #0x1
    a9e8:	tst	x23, x1
    a9ec:	b.eq	aa1c <__sanitizer_get_allocated_size@@Base+0x186c>  // b.none
    a9f0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    a9f4:	mov	x2, x23
    a9f8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    a9fc:	add	x0, x0, #0xf08
    aa00:	ldr	x1, [x1, #4024]
    aa04:	ldr	x1, [x1]
    aa08:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    aa0c:	ldr	x0, [x24, #48]
    aa10:	sub	x1, x0, #0x1
    aa14:	tst	x23, x1
    aa18:	b.ne	ab34 <__sanitizer_get_allocated_size@@Base+0x1984>  // b.any
    aa1c:	sub	x0, x23, x0
    aa20:	add	x0, x0, #0x20
    aa24:	ldr	w2, [x0]
    aa28:	mov	x1, x23
    aa2c:	and	x0, x21, #0xffffffffffffff
    aa30:	and	x2, x2, #0x7fffffff
    aa34:	cmp	x2, x20
    aa38:	csel	x2, x2, x20, ls  // ls = plast
    aa3c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    aa40:	mov	x1, x19
    aa44:	mov	x0, x22
    aa48:	bl	9f28 <__sanitizer_get_allocated_size@@Base+0xd78>
    aa4c:	mov	x0, x21
    aa50:	ldp	x21, x22, [sp, #16]
    aa54:	ldp	x23, x24, [sp, #32]
    aa58:	ldr	x30, [sp, #48]
    aa5c:	ldp	x19, x20, [sp], #64
    aa60:	ret
    aa64:	mov	x0, x22
    aa68:	mov	x1, x19
    aa6c:	bl	ff30 <__hwasan_memmove@@Base+0x1568>
    aa70:	mov	x0, #0x80000000            	// #2147483648
    aa74:	cmp	x20, x0
    aa78:	b.ls	a99c <__sanitizer_get_allocated_size@@Base+0x17ec>  // b.plast
    aa7c:	b	a964 <__sanitizer_get_allocated_size@@Base+0x17b4>
    aa80:	mov	x3, #0x2000000000          	// #137438953472
    aa84:	add	x3, x0, x3
    aa88:	cmp	x23, x3
    aa8c:	b.cs	a9dc <__sanitizer_get_allocated_size@@Base+0x182c>  // b.hs, b.nlast
    aa90:	sub	x0, x23, x0
    aa94:	ubfx	x1, x0, #32, #5
    aa98:	cmp	x1, #0x1f
    aa9c:	b.eq	ab2c <__sanitizer_get_allocated_size@@Base+0x197c>  // b.none
    aaa0:	lsl	w3, w1, #5
    aaa4:	cmp	x1, #0x10
    aaa8:	b.ls	aac8 <__sanitizer_get_allocated_size@@Base+0x1918>  // b.plast
    aaac:	sub	x3, x1, #0x10
    aab0:	mov	x4, #0x200                 	// #512
    aab4:	and	x5, x3, #0x1
    aab8:	lsr	x3, x3, #1
    aabc:	lsl	x4, x4, x3
    aac0:	lsr	x3, x4, #1
    aac4:	madd	w3, w3, w5, w4
    aac8:	udiv	w0, w0, w3
    aacc:	lsl	x1, x1, #32
    aad0:	add	x0, x0, #0x1
    aad4:	sub	x0, x1, x0, lsl #3
    aad8:	add	x0, x0, x2
    aadc:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x1874>
    aae0:	mov	x0, #0x80000000            	// #2147483648
    aae4:	cmp	x1, x0
    aae8:	b.hi	a964 <__sanitizer_get_allocated_size@@Base+0x17b4>  // b.pmore
    aaec:	mov	x0, x2
    aaf0:	mov	w3, #0x0                   	// #0
    aaf4:	mov	x2, #0x8                   	// #8
    aaf8:	bl	94e0 <__sanitizer_get_allocated_size@@Base+0x330>
    aafc:	mov	x21, x0
    ab00:	cbnz	x0, a988 <__sanitizer_get_allocated_size@@Base+0x17d8>
    ab04:	b	a980 <__sanitizer_get_allocated_size@@Base+0x17d0>
    ab08:	mov	x1, x0
    ab0c:	mov	x21, #0x0                   	// #0
    ab10:	mov	x0, x2
    ab14:	bl	9f28 <__sanitizer_get_allocated_size@@Base+0xd78>
    ab18:	mov	x0, x21
    ab1c:	ldp	x21, x22, [sp, #16]
    ab20:	ldr	x30, [sp, #48]
    ab24:	ldp	x19, x20, [sp], #64
    ab28:	ret
    ab2c:	mov	w3, #0x40                  	// #64
    ab30:	b	aac8 <__sanitizer_get_allocated_size@@Base+0x1918>
    ab34:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    ab38:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    ab3c:	add	x2, x2, #0xf20
    ab40:	add	x0, x0, #0xcf8
    ab44:	mov	x4, #0x0                   	// #0
    ab48:	mov	x3, #0x0                   	// #0
    ab4c:	mov	w1, #0xb1                  	// #177
    ab50:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    ab54:	mov	x2, x22
    ab58:	mov	x0, x20
    ab5c:	mov	x1, #0x80000000            	// #2147483648
    ab60:	stp	x23, x24, [sp, #32]
    ab64:	bl	26ea0 <__sanitizer_cov_dump@@Base+0x340>
    ab68:	stp	x19, x20, [sp, #-64]!
    ab6c:	mov	x19, x2
    ab70:	stp	x21, x22, [sp, #16]
    ab74:	mov	x22, x3
    ab78:	stp	x23, x24, [sp, #32]
    ab7c:	mov	x23, x0
    ab80:	str	x30, [sp, #48]
    ab84:	cbz	x2, accc <__sanitizer_get_allocated_size@@Base+0x1b1c>
    ab88:	umulh	x0, x1, x2
    ab8c:	mov	x20, x1
    ab90:	cbnz	x0, adf0 <__sanitizer_get_allocated_size@@Base+0x1c40>
    ab94:	mul	x19, x2, x1
    ab98:	cbz	x23, ad9c <__sanitizer_get_allocated_size@@Base+0x1bec>
    ab9c:	cbz	x19, acd0 <__sanitizer_get_allocated_size@@Base+0x1b20>
    aba0:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    aba4:	ubfx	x1, x23, #4, #52
    aba8:	lsr	x3, x23, #56
    abac:	ldr	x2, [x2, #3848]
    abb0:	ldr	x0, [x2]
    abb4:	ldrb	w0, [x1, x0]
    abb8:	cmp	w0, w3
    abbc:	b.eq	abe8 <__sanitizer_get_allocated_size@@Base+0x1a38>  // b.none
    abc0:	cmp	w0, #0xf
    abc4:	b.hi	acf8 <__sanitizer_get_allocated_size@@Base+0x1b48>  // b.pmore
    abc8:	and	x1, x23, #0xf
    abcc:	add	x1, x1, #0x1
    abd0:	cmp	x1, w0, uxtb
    abd4:	b.hi	acf8 <__sanitizer_get_allocated_size@@Base+0x1b48>  // b.pmore
    abd8:	orr	x0, x23, #0xf
    abdc:	ldrb	w0, [x0]
    abe0:	cmp	w0, w3
    abe4:	b.ne	acf8 <__sanitizer_get_allocated_size@@Base+0x1b48>  // b.any
    abe8:	mov	x20, #0x80000000            	// #2147483648
    abec:	cmp	x19, x20
    abf0:	b.ls	ac30 <__sanitizer_get_allocated_size@@Base+0x1a80>  // b.plast
    abf4:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    abf8:	tst	w0, #0xff
    abfc:	b.eq	ae1c <__sanitizer_get_allocated_size@@Base+0x1c6c>  // b.none
    ac00:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    ac04:	mov	x1, x19
    ac08:	add	x0, x0, #0xfe0
    ac0c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    ac10:	mov	x21, #0x0                   	// #0
    ac14:	bl	235b0 <__sanitizer_sandbox_on_notify@@Base+0x28>
    ac18:	mov	x0, x21
    ac1c:	ldp	x21, x22, [sp, #16]
    ac20:	ldp	x23, x24, [sp, #32]
    ac24:	ldr	x30, [sp, #48]
    ac28:	ldp	x19, x20, [sp], #64
    ac2c:	ret
    ac30:	mov	x1, x19
    ac34:	mov	x0, x22
    ac38:	mov	w3, #0x0                   	// #0
    ac3c:	mov	x2, #0x8                   	// #8
    ac40:	bl	94e0 <__sanitizer_get_allocated_size@@Base+0x330>
    ac44:	mov	x21, x0
    ac48:	cbz	x0, ac10 <__sanitizer_get_allocated_size@@Base+0x1a60>
    ac4c:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
    ac50:	add	x1, x0, #0xd30
    ac54:	and	x20, x23, #0xffffffffffffff
    ac58:	mov	x2, #0xe0000000            	// #3758096384
    ac5c:	ldr	x1, [x1, #32]
    ac60:	add	x2, x1, x2
    ac64:	cmp	x20, x1
    ac68:	b.cc	ad14 <__sanitizer_get_allocated_size@@Base+0x1b64>  // b.lo, b.ul, b.last
    ac6c:	mov	x3, #0x2000000000          	// #137438953472
    ac70:	add	x3, x1, x3
    ac74:	cmp	x20, x3
    ac78:	b.cs	ad14 <__sanitizer_get_allocated_size@@Base+0x1b64>  // b.hs, b.nlast
    ac7c:	sub	x1, x20, x1
    ac80:	ubfx	x0, x1, #32, #5
    ac84:	cmp	x0, #0x1f
    ac88:	b.eq	ade8 <__sanitizer_get_allocated_size@@Base+0x1c38>  // b.none
    ac8c:	lsl	w3, w0, #5
    ac90:	cmp	x0, #0x10
    ac94:	b.ls	acb4 <__sanitizer_get_allocated_size@@Base+0x1b04>  // b.plast
    ac98:	sub	x3, x0, #0x10
    ac9c:	mov	x4, #0x200                 	// #512
    aca0:	and	x5, x3, #0x1
    aca4:	lsr	x3, x3, #1
    aca8:	lsl	x4, x4, x3
    acac:	lsr	x3, x4, #1
    acb0:	madd	w3, w3, w5, w4
    acb4:	udiv	w1, w1, w3
    acb8:	lsl	x0, x0, #32
    acbc:	add	x1, x1, #0x1
    acc0:	sub	x1, x0, x1, lsl #3
    acc4:	add	x1, x1, x2
    acc8:	b	ad5c <__sanitizer_get_allocated_size@@Base+0x1bac>
    accc:	cbz	x0, ada8 <__sanitizer_get_allocated_size@@Base+0x1bf8>
    acd0:	mov	x1, x23
    acd4:	mov	x0, x22
    acd8:	mov	x21, #0x0                   	// #0
    acdc:	bl	9f28 <__sanitizer_get_allocated_size@@Base+0xd78>
    ace0:	mov	x0, x21
    ace4:	ldp	x21, x22, [sp, #16]
    ace8:	ldp	x23, x24, [sp, #32]
    acec:	ldr	x30, [sp, #48]
    acf0:	ldp	x19, x20, [sp], #64
    acf4:	ret
    acf8:	mov	x1, x23
    acfc:	mov	x0, x22
    ad00:	bl	ff30 <__hwasan_memmove@@Base+0x1568>
    ad04:	mov	x20, #0x80000000            	// #2147483648
    ad08:	cmp	x19, x20
    ad0c:	b.ls	ac30 <__sanitizer_get_allocated_size@@Base+0x1a80>  // b.plast
    ad10:	b	abf4 <__sanitizer_get_allocated_size@@Base+0x1a44>
    ad14:	add	x24, x0, #0xd30
    ad18:	ldr	x1, [x24, #48]
    ad1c:	sub	x0, x1, #0x1
    ad20:	tst	x20, x0
    ad24:	b.eq	ad54 <__sanitizer_get_allocated_size@@Base+0x1ba4>  // b.none
    ad28:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    ad2c:	mov	x2, x20
    ad30:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    ad34:	add	x0, x0, #0xf08
    ad38:	ldr	x1, [x1, #4024]
    ad3c:	ldr	x1, [x1]
    ad40:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    ad44:	ldr	x1, [x24, #48]
    ad48:	sub	x0, x1, #0x1
    ad4c:	tst	x20, x0
    ad50:	b.ne	adc8 <__sanitizer_get_allocated_size@@Base+0x1c18>  // b.any
    ad54:	sub	x1, x20, x1
    ad58:	add	x1, x1, #0x20
    ad5c:	ldr	w2, [x1]
    ad60:	and	x0, x21, #0xffffffffffffff
    ad64:	mov	x1, x20
    ad68:	and	x2, x2, #0x7fffffff
    ad6c:	cmp	x2, x19
    ad70:	csel	x2, x2, x19, ls  // ls = plast
    ad74:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    ad78:	mov	x1, x23
    ad7c:	mov	x0, x22
    ad80:	bl	9f28 <__sanitizer_get_allocated_size@@Base+0xd78>
    ad84:	mov	x0, x21
    ad88:	ldp	x21, x22, [sp, #16]
    ad8c:	ldp	x23, x24, [sp, #32]
    ad90:	ldr	x30, [sp, #48]
    ad94:	ldp	x19, x20, [sp], #64
    ad98:	ret
    ad9c:	mov	x20, #0x80000000            	// #2147483648
    ada0:	cmp	x19, x20
    ada4:	b.hi	abf4 <__sanitizer_get_allocated_size@@Base+0x1a44>  // b.pmore
    ada8:	mov	x1, x19
    adac:	mov	x0, x22
    adb0:	mov	w3, #0x0                   	// #0
    adb4:	mov	x2, #0x8                   	// #8
    adb8:	bl	94e0 <__sanitizer_get_allocated_size@@Base+0x330>
    adbc:	mov	x21, x0
    adc0:	cbnz	x0, ac18 <__sanitizer_get_allocated_size@@Base+0x1a68>
    adc4:	b	ac10 <__sanitizer_get_allocated_size@@Base+0x1a60>
    adc8:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    adcc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    add0:	add	x2, x2, #0xf20
    add4:	add	x0, x0, #0xcf8
    add8:	mov	x4, #0x0                   	// #0
    addc:	mov	x3, #0x0                   	// #0
    ade0:	mov	w1, #0xb1                  	// #177
    ade4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    ade8:	mov	w3, #0x40                  	// #64
    adec:	b	acb4 <__sanitizer_get_allocated_size@@Base+0x1b04>
    adf0:	bl	64f0 <__errno_location@plt>
    adf4:	mov	x21, #0x0                   	// #0
    adf8:	mov	w1, #0xc                   	// #12
    adfc:	str	w1, [x0]
    ae00:	bl	120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    ae04:	tst	w0, #0xff
    ae08:	b.ne	ac18 <__sanitizer_get_allocated_size@@Base+0x1a68>  // b.any
    ae0c:	mov	x2, x22
    ae10:	mov	x1, x19
    ae14:	mov	x0, x20
    ae18:	bl	26ce0 <__sanitizer_cov_dump@@Base+0x180>
    ae1c:	mov	x2, x22
    ae20:	mov	x1, x20
    ae24:	mov	x0, x19
    ae28:	bl	26ea0 <__sanitizer_cov_dump@@Base+0x340>
    ae2c:	nop
    ae30:	stp	x19, x20, [sp, #-96]!
    ae34:	cmp	x2, #0x1f
    ae38:	mov	x19, x3
    ae3c:	stp	x23, x24, [sp, #32]
    ae40:	ldr	x23, [x0, #32]
    ae44:	stp	x21, x22, [sp, #16]
    ae48:	mov	x22, x1
    ae4c:	stp	x25, x26, [sp, #48]
    ae50:	mov	x26, x0
    ae54:	mov	x25, x2
    ae58:	str	x30, [sp, #80]
    ae5c:	add	x23, x23, x2, lsl #32
    ae60:	b.eq	b1c8 <__sanitizer_get_allocated_size@@Base+0x2018>  // b.none
    ae64:	lsl	x24, x2, #5
    ae68:	cmp	x2, #0x10
    ae6c:	b.ls	ae8c <__sanitizer_get_allocated_size@@Base+0x1cdc>  // b.plast
    ae70:	sub	x0, x2, #0x10
    ae74:	mov	x24, #0x200                 	// #512
    ae78:	and	x1, x0, #0x1
    ae7c:	lsr	x0, x0, #1
    ae80:	lsl	x0, x24, x0
    ae84:	lsr	x24, x0, #1
    ae88:	madd	x24, x24, x1, x0
    ae8c:	ldr	x0, [x19, #104]
    ae90:	ldr	x3, [x19, #120]
    ae94:	madd	x20, x4, x24, x0
    ae98:	cmp	x3, x20
    ae9c:	b.cs	b1c0 <__sanitizer_get_allocated_size@@Base+0x2010>  // b.hs, b.nlast
    aea0:	cbz	x3, b23c <__sanitizer_get_allocated_size@@Base+0x208c>
    aea4:	ldr	x0, [x19, #128]
    aea8:	mov	x4, #0xffff                	// #65535
    aeac:	add	x20, x20, x4
    aeb0:	mov	x1, #0xe0000000            	// #3758096384
    aeb4:	sub	x20, x20, x3
    aeb8:	add	x0, x3, x0
    aebc:	and	x20, x20, #0xffffffffffff0000
    aec0:	add	x0, x0, x20
    aec4:	cmp	x0, x1
    aec8:	b.hi	b1d0 <__sanitizer_get_allocated_size@@Base+0x2020>  // b.pmore
    aecc:	add	x21, x23, x3
    aed0:	mov	x2, x20
    aed4:	adrp	x3, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    aed8:	mov	x1, x21
    aedc:	add	x3, x3, #0xc8
    aee0:	mov	x0, x26
    aee4:	bl	24e90 <__sanitizer_sandbox_on_notify@@Base+0x1908>
    aee8:	cbz	x0, b17c <__sanitizer_get_allocated_size@@Base+0x1fcc>
    aeec:	stp	x27, x28, [sp, #64]
    aef0:	mov	x4, x0
    aef4:	mov	x3, x21
    aef8:	cmp	x21, x0
    aefc:	b.ne	b1a8 <__sanitizer_get_allocated_size@@Base+0x1ff8>  // b.any
    af00:	bl	7170 <__sanitizer_print_memory_profile@plt+0xb10>
    af04:	ldr	x1, [x22, #24]
    af08:	ldr	x3, [x19, #120]
    af0c:	add	x1, x20, x1
    af10:	ldr	x0, [x19, #104]
    af14:	str	x1, [x22, #24]
    af18:	add	x3, x20, x3
    af1c:	str	x3, [x19, #120]
    af20:	sub	x27, x3, x0
    af24:	ldr	x1, [x19, #112]
    af28:	udiv	x20, x27, x24
    af2c:	ldr	x0, [x19, #128]
    af30:	lsl	x22, x20, #3
    af34:	add	x1, x22, x1
    af38:	cmp	x0, x1
    af3c:	b.cs	afa8 <__sanitizer_get_allocated_size@@Base+0x1df8>  // b.hs, b.nlast
    af40:	sub	x1, x1, x0
    af44:	mov	x2, #0xffff                	// #65535
    af48:	add	x1, x1, x2
    af4c:	ands	x21, x1, #0xffffffffffff0000
    af50:	b.eq	afa8 <__sanitizer_get_allocated_size@@Base+0x1df8>  // b.none
    af54:	add	x3, x0, x3
    af58:	mov	x1, #0xe0000000            	// #3758096384
    af5c:	add	x3, x3, x21
    af60:	cmp	x3, x1
    af64:	b.hi	b2ac <__sanitizer_get_allocated_size@@Base+0x20fc>  // b.pmore
    af68:	sub	x0, x1, x0
    af6c:	sub	x25, x23, x21
    af70:	add	x25, x25, x0
    af74:	adrp	x3, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    af78:	mov	x1, x25
    af7c:	add	x3, x3, #0x150
    af80:	mov	x2, x21
    af84:	mov	x0, x26
    af88:	bl	24e90 <__sanitizer_sandbox_on_notify@@Base+0x1908>
    af8c:	cbz	x0, b178 <__sanitizer_get_allocated_size@@Base+0x1fc8>
    af90:	cmp	x25, x0
    af94:	b.ne	b19c <__sanitizer_get_allocated_size@@Base+0x1fec>  // b.any
    af98:	bl	7170 <__sanitizer_print_memory_profile@plt+0xb10>
    af9c:	ldr	x0, [x19, #128]
    afa0:	add	x0, x0, x21
    afa4:	str	x0, [x19, #128]
    afa8:	ldp	x21, x2, [x19, #88]
    afac:	add	x21, x20, x21
    afb0:	lsl	x25, x21, #2
    afb4:	cmp	x2, x21, lsl #2
    afb8:	b.cc	b114 <__sanitizer_get_allocated_size@@Base+0x1f64>  // b.lo, b.ul, b.last
    afbc:	mov	x4, x21
    afc0:	mov	x0, #0xe0000000            	// #3758096384
    afc4:	cmp	x27, x24
    afc8:	add	x23, x23, x0
    afcc:	ldr	x3, [x19, #104]
    afd0:	b.cc	b0bc <__sanitizer_get_allocated_size@@Base+0x1f0c>  // b.lo, b.ul, b.last
    afd4:	sub	x21, x21, #0x1
    afd8:	cmp	x20, #0x4
    afdc:	b.ls	b284 <__sanitizer_get_allocated_size@@Base+0x20d4>  // b.plast
    afe0:	fmov	d3, x3
    afe4:	fmov	d0, x24
    afe8:	add	x2, x3, x24
    afec:	add	x0, x23, x21, lsl #2
    aff0:	mov	v3.d[1], x4
    aff4:	shl	d5, d0, #2
    aff8:	shl	d4, d0, #1
    affc:	lsr	x1, x20, #2
    b000:	sub	x0, x0, #0xc
    b004:	sub	x1, x0, x1, lsl #4
    b008:	mov	v3.d[1], x2
    b00c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b010:	dup	v5.2d, v5.d[0]
    b014:	dup	v4.2d, v4.d[0]
    b018:	ldr	q6, [x2, #1904]
    b01c:	nop
    b020:	mov	v0.16b, v3.16b
    b024:	add	v3.2d, v3.2d, v5.2d
    b028:	add	v2.2d, v4.2d, v0.2d
    b02c:	ushr	v0.2d, v0.2d, #4
    b030:	ushr	v2.2d, v2.2d, #4
    b034:	xtn	v1.2s, v0.2d
    b038:	xtn2	v1.4s, v2.2d
    b03c:	tbl	v0.16b, {v1.16b}, v6.16b
    b040:	str	q0, [x0], #-16
    b044:	cmp	x0, x1
    b048:	b.ne	b020 <__sanitizer_get_allocated_size@@Base+0x1e70>  // b.any
    b04c:	and	x1, x20, #0xfffffffffffffffc
    b050:	cmp	x1, x20
    b054:	madd	x0, x24, x1, x3
    b058:	b.eq	b0bc <__sanitizer_get_allocated_size@@Base+0x1f0c>  // b.none
    b05c:	sub	x5, x21, x1
    b060:	lsr	x6, x0, #4
    b064:	add	x2, x1, #0x1
    b068:	add	x0, x24, x0
    b06c:	cmp	x20, x2
    b070:	str	w6, [x23, x5, lsl #2]
    b074:	b.ls	b0bc <__sanitizer_get_allocated_size@@Base+0x1f0c>  // b.plast
    b078:	sub	x2, x21, x2
    b07c:	lsr	x6, x0, #4
    b080:	add	x5, x1, #0x2
    b084:	add	x0, x24, x0
    b088:	cmp	x5, x20
    b08c:	str	w6, [x23, x2, lsl #2]
    b090:	b.cs	b0bc <__sanitizer_get_allocated_size@@Base+0x1f0c>  // b.hs, b.nlast
    b094:	sub	x5, x21, x5
    b098:	lsr	x2, x0, #4
    b09c:	add	x1, x1, #0x3
    b0a0:	add	x0, x0, x24
    b0a4:	cmp	x20, x1
    b0a8:	str	w2, [x23, x5, lsl #2]
    b0ac:	b.ls	b0bc <__sanitizer_get_allocated_size@@Base+0x1f0c>  // b.plast
    b0b0:	sub	x21, x21, x1
    b0b4:	lsr	x0, x0, #4
    b0b8:	str	w0, [x23, x21, lsl #2]
    b0bc:	madd	x3, x20, x24, x3
    b0c0:	str	x4, [x19, #88]
    b0c4:	ldr	x4, [x19, #120]
    b0c8:	str	x3, [x19, #104]
    b0cc:	cmp	x3, x4
    b0d0:	b.hi	b254 <__sanitizer_get_allocated_size@@Base+0x20a4>  // b.pmore
    b0d4:	ldr	x3, [x19, #112]
    b0d8:	ldr	x4, [x19, #128]
    b0dc:	add	x3, x22, x3
    b0e0:	str	x3, [x19, #112]
    b0e4:	cmp	x3, x4
    b0e8:	b.hi	b26c <__sanitizer_get_allocated_size@@Base+0x20bc>  // b.pmore
    b0ec:	ldp	x27, x28, [sp, #64]
    b0f0:	mov	w20, #0x1                   	// #1
    b0f4:	strb	wzr, [x19, #140]
    b0f8:	mov	w0, w20
    b0fc:	ldp	x21, x22, [sp, #16]
    b100:	ldp	x23, x24, [sp, #32]
    b104:	ldp	x25, x26, [sp, #48]
    b108:	ldr	x30, [sp, #80]
    b10c:	ldp	x19, x20, [sp], #96
    b110:	ret
    b114:	mov	x0, #0xffff                	// #65535
    b118:	add	x25, x25, x0
    b11c:	and	x25, x25, #0xffffffffffff0000
    b120:	mov	x4, #0x20000000            	// #536870912
    b124:	cmp	x25, x4
    b128:	b.hi	b290 <__sanitizer_get_allocated_size@@Base+0x20e0>  // b.pmore
    b12c:	mov	x28, #0xe0000000            	// #3758096384
    b130:	add	x28, x2, x28
    b134:	add	x28, x28, x23
    b138:	adrp	x3, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b13c:	mov	x0, x26
    b140:	sub	x2, x25, x2
    b144:	mov	x1, x28
    b148:	add	x3, x3, #0x1a8
    b14c:	bl	24e90 <__sanitizer_sandbox_on_notify@@Base+0x1908>
    b150:	cbz	x0, b178 <__sanitizer_get_allocated_size@@Base+0x1fc8>
    b154:	mov	x4, x0
    b158:	mov	x3, x28
    b15c:	cmp	x28, x0
    b160:	b.ne	b1a8 <__sanitizer_get_allocated_size@@Base+0x1ff8>  // b.any
    b164:	bl	7170 <__sanitizer_print_memory_profile@plt+0xb10>
    b168:	str	x25, [x19, #96]
    b16c:	ldr	x4, [x19, #88]
    b170:	add	x4, x20, x4
    b174:	b	afc0 <__sanitizer_get_allocated_size@@Base+0x1e10>
    b178:	ldp	x27, x28, [sp, #64]
    b17c:	mov	w20, #0x0                   	// #0
    b180:	mov	w0, w20
    b184:	ldp	x21, x22, [sp, #16]
    b188:	ldp	x23, x24, [sp, #32]
    b18c:	ldp	x25, x26, [sp, #48]
    b190:	ldr	x30, [sp, #80]
    b194:	ldp	x19, x20, [sp], #96
    b198:	ret
    b19c:	mov	x4, x0
    b1a0:	mov	x3, x25
    b1a4:	nop
    b1a8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b1ac:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    b1b0:	add	x2, x2, #0x138
    b1b4:	add	x0, x0, #0xd88
    b1b8:	mov	w1, #0x281                 	// #641
    b1bc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    b1c0:	stp	x27, x28, [sp, #64]
    b1c4:	b	af20 <__sanitizer_get_allocated_size@@Base+0x1d70>
    b1c8:	mov	x24, #0x40                  	// #64
    b1cc:	b	ae8c <__sanitizer_get_allocated_size@@Base+0x1cdc>
    b1d0:	ldrb	w20, [x19, #140]
    b1d4:	cbnz	w20, b17c <__sanitizer_get_allocated_size@@Base+0x1fcc>
    b1d8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    b1dc:	mov	w0, #0x1                   	// #1
    b1e0:	strb	w0, [x19, #140]
    b1e4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b1e8:	ldr	x1, [x1, #4024]
    b1ec:	add	x0, x0, #0xe8
    b1f0:	ldr	x1, [x1]
    b1f4:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    b1f8:	cmp	x25, #0x1f
    b1fc:	b.eq	b31c <__sanitizer_get_allocated_size@@Base+0x216c>  // b.none
    b200:	lsl	x2, x25, #5
    b204:	cmp	x25, #0x10
    b208:	b.ls	b228 <__sanitizer_get_allocated_size@@Base+0x2078>  // b.plast
    b20c:	sub	x25, x25, #0x10
    b210:	mov	x2, #0x200                 	// #512
    b214:	and	x0, x25, #0x1
    b218:	lsr	x25, x25, #1
    b21c:	lsl	x25, x2, x25
    b220:	lsr	x2, x25, #1
    b224:	madd	x2, x2, x0, x25
    b228:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b22c:	mov	x1, #0x1000                	// #4096
    b230:	add	x0, x0, #0x100
    b234:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    b238:	b	b0f8 <__sanitizer_get_allocated_size@@Base+0x1f48>
    b23c:	ldr	w0, [x26, #40]
    b240:	tbnz	w0, #31, aea4 <__sanitizer_get_allocated_size@@Base+0x1cf4>
    b244:	bl	242a8 <__sanitizer_sandbox_on_notify@@Base+0xd20>
    b248:	str	x0, [x19, #176]
    b24c:	ldr	x3, [x19, #120]
    b250:	b	aea4 <__sanitizer_get_allocated_size@@Base+0x1cf4>
    b254:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b258:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    b25c:	add	x2, x2, #0x1c8
    b260:	add	x0, x0, #0xd88
    b264:	mov	w1, #0x2f9                 	// #761
    b268:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    b26c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b270:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    b274:	add	x2, x2, #0x200
    b278:	add	x0, x0, #0xd88
    b27c:	mov	w1, #0x2fb                 	// #763
    b280:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    b284:	mov	x0, x3
    b288:	mov	x1, #0x0                   	// #0
    b28c:	b	b05c <__sanitizer_get_allocated_size@@Base+0x1eac>
    b290:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b294:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    b298:	mov	x3, x25
    b29c:	add	x2, x2, #0x178
    b2a0:	add	x0, x0, #0xd88
    b2a4:	mov	w1, #0x295                 	// #661
    b2a8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    b2ac:	ldrb	w20, [x19, #140]
    b2b0:	cbnz	w20, b178 <__sanitizer_get_allocated_size@@Base+0x1fc8>
    b2b4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    b2b8:	mov	w0, #0x1                   	// #1
    b2bc:	strb	w0, [x19, #140]
    b2c0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b2c4:	ldr	x1, [x1, #4024]
    b2c8:	add	x0, x0, #0xe8
    b2cc:	ldr	x1, [x1]
    b2d0:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    b2d4:	cmp	x25, #0x1f
    b2d8:	b.eq	b324 <__sanitizer_get_allocated_size@@Base+0x2174>  // b.none
    b2dc:	lsl	x2, x25, #5
    b2e0:	cmp	x25, #0x10
    b2e4:	b.ls	b304 <__sanitizer_get_allocated_size@@Base+0x2154>  // b.plast
    b2e8:	sub	x25, x25, #0x10
    b2ec:	mov	x2, #0x200                 	// #512
    b2f0:	and	x0, x25, #0x1
    b2f4:	lsr	x25, x25, #1
    b2f8:	lsl	x25, x2, x25
    b2fc:	lsr	x2, x25, #1
    b300:	madd	x2, x2, x0, x25
    b304:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b308:	mov	x1, #0x1000                	// #4096
    b30c:	add	x0, x0, #0x100
    b310:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    b314:	ldp	x27, x28, [sp, #64]
    b318:	b	b0f8 <__sanitizer_get_allocated_size@@Base+0x1f48>
    b31c:	mov	x2, #0x40                  	// #64
    b320:	b	b228 <__sanitizer_get_allocated_size@@Base+0x2078>
    b324:	mov	x2, #0x40                  	// #64
    b328:	b	b304 <__sanitizer_get_allocated_size@@Base+0x2154>
    b32c:	nop
    b330:	stp	x19, x20, [sp, #-64]!
    b334:	mov	x19, x3
    b338:	mov	x20, x4
    b33c:	stp	x23, x24, [sp, #32]
    b340:	mov	x24, x0
    b344:	mov	x23, x2
    b348:	stp	x21, x22, [sp, #16]
    b34c:	mov	x2, #0x2000000000          	// #137438953472
    b350:	add	x21, x23, x23, lsl #1
    b354:	ldr	x22, [x24, #32]
    b358:	mov	x0, #0xe0000000            	// #3758096384
    b35c:	add	x0, x0, x23, lsl #32
    b360:	stp	x25, x30, [sp, #48]
    b364:	add	x2, x22, x2
    b368:	add	x21, x2, x21, lsl #6
    b36c:	mov	x25, x1
    b370:	add	x22, x0, x22
    b374:	mov	x0, x21
    b378:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
    b37c:	ldr	x3, [x21, #88]
    b380:	cmp	x3, x20
    b384:	b.cc	b488 <__sanitizer_get_allocated_size@@Base+0x22d8>  // b.lo, b.ul, b.last
    b388:	sub	x4, x3, x20
    b38c:	str	x4, [x21, #88]
    b390:	cbz	x20, b42c <__sanitizer_get_allocated_size@@Base+0x227c>
    b394:	add	x1, x4, #0x4
    b398:	add	x6, x19, #0x10
    b39c:	sub	x5, x20, #0x1
    b3a0:	lsl	x1, x1, #2
    b3a4:	sub	x0, x1, #0x10
    b3a8:	add	x2, x22, x1
    b3ac:	add	x1, x22, x0
    b3b0:	cmp	x1, x6
    b3b4:	ccmp	x19, x2, #0x2, cc  // cc = lo, ul, last
    b3b8:	ccmp	x5, #0x7, #0x0, cs  // cs = hs, nlast
    b3bc:	b.ls	b45c <__sanitizer_get_allocated_size@@Base+0x22ac>  // b.plast
    b3c0:	lsr	x2, x20, #2
    b3c4:	mov	x0, #0x0                   	// #0
    b3c8:	lsl	x2, x2, #4
    b3cc:	nop
    b3d0:	ldr	q0, [x1, x0]
    b3d4:	str	q0, [x19, x0]
    b3d8:	add	x0, x0, #0x10
    b3dc:	cmp	x0, x2
    b3e0:	b.ne	b3d0 <__sanitizer_get_allocated_size@@Base+0x2220>  // b.any
    b3e4:	tst	x20, #0x3
    b3e8:	and	x0, x20, #0xfffffffffffffffc
    b3ec:	b.eq	b42c <__sanitizer_get_allocated_size@@Base+0x227c>  // b.none
    b3f0:	add	x1, x4, x0
    b3f4:	add	x2, x0, #0x1
    b3f8:	cmp	x20, x2
    b3fc:	ldr	w1, [x22, x1, lsl #2]
    b400:	str	w1, [x19, x0, lsl #2]
    b404:	b.ls	b42c <__sanitizer_get_allocated_size@@Base+0x227c>  // b.plast
    b408:	add	x1, x4, x2
    b40c:	add	x0, x0, #0x2
    b410:	cmp	x20, x0
    b414:	ldr	w1, [x22, x1, lsl #2]
    b418:	str	w1, [x19, x2, lsl #2]
    b41c:	b.ls	b42c <__sanitizer_get_allocated_size@@Base+0x227c>  // b.plast
    b420:	add	x4, x4, x0
    b424:	ldr	w1, [x22, x4, lsl #2]
    b428:	str	w1, [x19, x0, lsl #2]
    b42c:	ldr	x0, [x21, #144]
    b430:	mov	w23, #0x1                   	// #1
    b434:	add	x20, x0, x20
    b438:	str	x20, [x21, #144]
    b43c:	mov	x0, x21
    b440:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
    b444:	mov	w0, w23
    b448:	ldp	x21, x22, [sp, #16]
    b44c:	ldp	x23, x24, [sp, #32]
    b450:	ldp	x25, x30, [sp, #48]
    b454:	ldp	x19, x20, [sp], #64
    b458:	ret
    b45c:	neg	x4, x4, lsl #2
    b460:	mov	x0, x1
    b464:	sub	x1, x4, x22
    b468:	add	x3, x22, x3, lsl #2
    b46c:	add	x19, x19, x1
    b470:	ldr	w1, [x0]
    b474:	str	w1, [x19, x0]
    b478:	add	x0, x0, #0x4
    b47c:	cmp	x0, x3
    b480:	b.ne	b470 <__sanitizer_get_allocated_size@@Base+0x22c0>  // b.any
    b484:	b	b42c <__sanitizer_get_allocated_size@@Base+0x227c>
    b488:	sub	x4, x20, x3
    b48c:	mov	x2, x23
    b490:	mov	x1, x25
    b494:	mov	x0, x24
    b498:	mov	x3, x21
    b49c:	bl	ae30 <__sanitizer_get_allocated_size@@Base+0x1c80>
    b4a0:	ands	w23, w0, #0xff
    b4a4:	b.eq	b43c <__sanitizer_get_allocated_size@@Base+0x228c>  // b.none
    b4a8:	ldr	x3, [x21, #88]
    b4ac:	cmp	x20, x3
    b4b0:	b.ls	b388 <__sanitizer_get_allocated_size@@Base+0x21d8>  // b.plast
    b4b4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b4b8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    b4bc:	mov	x4, x20
    b4c0:	add	x2, x2, #0x238
    b4c4:	add	x0, x0, #0xd88
    b4c8:	mov	w1, #0x93                  	// #147
    b4cc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    b4d0:	stp	x19, x20, [sp, #-32]!
    b4d4:	mov	x19, x1
    b4d8:	mov	x1, x0
    b4dc:	mov	x0, x2
    b4e0:	mov	x2, x3
    b4e4:	ldr	w4, [x19, #4]
    b4e8:	str	x30, [sp, #16]
    b4ec:	cbz	w4, b51c <__sanitizer_get_allocated_size@@Base+0x236c>
    b4f0:	add	x1, x1, #0xa00
    b4f4:	lsr	w20, w4, #1
    b4f8:	add	x3, x19, #0x10
    b4fc:	lsr	w4, w4, #1
    b500:	bl	b330 <__sanitizer_get_allocated_size@@Base+0x2180>
    b504:	tst	w0, #0xff
    b508:	b.eq	b510 <__sanitizer_get_allocated_size@@Base+0x2360>  // b.none
    b50c:	str	w20, [x19]
    b510:	ldr	x30, [sp, #16]
    b514:	ldp	x19, x20, [sp], #32
    b518:	ret
    b51c:	mov	x5, #0x1                   	// #1
    b520:	mov	w10, w5
    b524:	mov	w8, #0x400                 	// #1024
    b528:	mov	w11, #0x8                   	// #8
    b52c:	mov	x9, #0x200                 	// #512
    b530:	lsl	x3, x5, #5
    b534:	add	x6, x5, x5, lsl #2
    b538:	add	x5, x5, #0x1
    b53c:	add	x6, x1, x6, lsl #4
    b540:	udiv	w4, w8, w3
    b544:	mov	x7, x6
    b548:	str	x3, [x6, #8]
    b54c:	cmp	w4, #0x8
    b550:	csel	w4, w4, w11, ls  // ls = plast
    b554:	lsl	w4, w4, #1
    b558:	str	w4, [x6, #4]
    b55c:	sub	x6, x5, #0x10
    b560:	cmp	x5, #0x1f
    b564:	and	x3, x6, #0x1
    b568:	b.eq	b5b4 <__sanitizer_get_allocated_size@@Base+0x2404>  // b.none
    b56c:	lsr	x6, x6, #1
    b570:	cmp	x5, #0x10
    b574:	b.ls	b530 <__sanitizer_get_allocated_size@@Base+0x2380>  // b.plast
    b578:	lsl	x6, x9, x6
    b57c:	add	x5, x5, #0x1
    b580:	lsr	x4, x6, #1
    b584:	add	x7, x7, #0x50
    b588:	madd	x4, x4, x3, x6
    b58c:	str	x4, [x7, #8]
    b590:	udiv	w4, w8, w4
    b594:	cmp	w4, #0x0
    b598:	csel	w4, w4, w10, ne  // ne = any
    b59c:	cmp	x5, #0x20
    b5a0:	lsl	w4, w4, #1
    b5a4:	str	w4, [x7, #4]
    b5a8:	b.ne	b55c <__sanitizer_get_allocated_size@@Base+0x23ac>  // b.any
    b5ac:	ldr	w4, [x19, #4]
    b5b0:	b	b4f0 <__sanitizer_get_allocated_size@@Base+0x2340>
    b5b4:	mov	w4, #0x10                  	// #16
    b5b8:	mov	x3, #0x40                  	// #64
    b5bc:	str	w4, [x1, #2484]
    b5c0:	str	x3, [x1, #2488]
    b5c4:	ldr	w4, [x19, #4]
    b5c8:	b	b4f0 <__sanitizer_get_allocated_size@@Base+0x2340>
    b5cc:	nop
    b5d0:	stp	x19, x20, [sp, #-64]!
    b5d4:	cmp	x2, #0x0
    b5d8:	stp	x21, x22, [sp, #16]
    b5dc:	csinc	x21, x2, xzr, ne  // ne = any
    b5e0:	stp	x23, x24, [sp, #32]
    b5e4:	mov	x23, x0
    b5e8:	adds	x0, x3, x21
    b5ec:	str	x30, [sp, #56]
    b5f0:	b.cs	ba68 <__sanitizer_get_allocated_size@@Base+0x28b8>  // b.hs, b.nlast
    b5f4:	str	x25, [sp, #48]
    b5f8:	mov	x19, x3
    b5fc:	mov	x22, x1
    b600:	cmp	x3, #0x8
    b604:	b.hi	b85c <__sanitizer_get_allocated_size@@Base+0x26ac>  // b.pmore
    b608:	cmp	x2, #0x10, lsl #12
    b60c:	b.hi	b6d8 <__sanitizer_get_allocated_size@@Base+0x2528>  // b.pmore
    b610:	cmp	x21, #0x200
    b614:	b.ls	b890 <__sanitizer_get_allocated_size@@Base+0x26e0>  // b.plast
    b618:	clz	x4, x21
    b61c:	mov	w20, #0x3f                  	// #63
    b620:	sub	w20, w20, w4
    b624:	mov	w0, #0x1                   	// #1
    b628:	sub	w2, w20, #0x1
    b62c:	lsl	w0, w0, w2
    b630:	sub	w0, w0, #0x1
    b634:	tst	x0, x21
    b638:	lsr	x4, x21, x2
    b63c:	and	x4, x4, #0x1
    b640:	cinc	x4, x4, ne  // ne = any
    b644:	add	x20, x4, w20, sxtw #1
    b648:	cmp	x20, #0x22
    b64c:	sub	x20, x20, #0x2
    b650:	b.eq	b8d0 <__sanitizer_get_allocated_size@@Base+0x2720>  // b.none
    b654:	lsl	x21, x20, #2
    b658:	add	x24, x21, x20
    b65c:	lsl	x24, x24, #4
    b660:	add	x25, x22, x24
    b664:	ldr	w2, [x22, x24]
    b668:	cbz	w2, b958 <__sanitizer_get_allocated_size@@Base+0x27a8>
    b66c:	add	x21, x21, x20
    b670:	sub	w2, w2, #0x1
    b674:	str	w2, [x22, x24]
    b678:	lsl	x21, x21, #2
    b67c:	add	x2, x21, w2, uxtw
    b680:	add	x2, x2, #0x4
    b684:	ldr	x3, [x23, #32]
    b688:	ldr	w0, [x22, x2, lsl #2]
    b68c:	ldr	x2, [x25, #8]
    b690:	add	x20, x3, x20, lsl #32
    b694:	ubfiz	x0, x0, #4, #32
    b698:	ldr	x1, [x22, #2576]
    b69c:	add	x20, x20, x0
    b6a0:	mov	x0, x20
    b6a4:	add	x1, x1, x2
    b6a8:	str	x1, [x22, #2576]
    b6ac:	cmp	x19, #0x8
    b6b0:	b.ls	b6c0 <__sanitizer_get_allocated_size@@Base+0x2510>  // b.plast
    b6b4:	sub	x19, x19, #0x1
    b6b8:	ands	x3, x19, x20
    b6bc:	b.ne	b91c <__sanitizer_get_allocated_size@@Base+0x276c>  // b.any
    b6c0:	ldr	x25, [sp, #48]
    b6c4:	ldp	x21, x22, [sp, #16]
    b6c8:	ldp	x23, x24, [sp, #32]
    b6cc:	ldr	x30, [sp, #56]
    b6d0:	ldp	x19, x20, [sp], #64
    b6d4:	ret
    b6d8:	sub	x25, x3, #0x1
    b6dc:	tst	x3, x25
    b6e0:	b.ne	b938 <__sanitizer_get_allocated_size@@Base+0x2788>  // b.any
    b6e4:	ldr	x1, [x23, #48]
    b6e8:	sub	x0, x1, #0x1
    b6ec:	tst	x1, x0
    b6f0:	b.ne	b8c0 <__sanitizer_get_allocated_size@@Base+0x2710>  // b.any
    b6f4:	add	x22, x21, x0
    b6f8:	neg	x0, x1
    b6fc:	and	x22, x22, x0
    b700:	cmp	x19, x1
    b704:	add	x22, x22, x1
    b708:	add	x0, x22, x19
    b70c:	csel	x22, x0, x22, hi  // hi = pmore
    b710:	cmp	x21, x22
    b714:	b.hi	b8f0 <__sanitizer_get_allocated_size@@Base+0x2740>  // b.pmore
    b718:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    b71c:	mov	x0, x22
    b720:	ldr	x1, [x1, #3944]
    b724:	ldr	x1, [x1]
    b728:	bl	1ea00 <__sanitizer_set_report_fd@@Base+0x6c40>
    b72c:	mov	x24, x0
    b730:	cbz	x0, b97c <__sanitizer_get_allocated_size@@Base+0x27cc>
    b734:	ldr	x0, [x23, #48]
    b738:	sub	x0, x0, #0x1
    b73c:	tst	x24, x0
    b740:	b.ne	b988 <__sanitizer_get_allocated_size@@Base+0x27d8>  // b.any
    b744:	bl	7170 <__sanitizer_print_memory_profile@plt+0xb10>
    b748:	ldr	x0, [x23, #48]
    b74c:	add	x20, x24, x0
    b750:	ands	x1, x25, x20
    b754:	b.eq	b768 <__sanitizer_get_allocated_size@@Base+0x25b8>  // b.none
    b758:	add	x20, x19, x20
    b75c:	sub	x20, x20, x1
    b760:	tst	x25, x20
    b764:	b.ne	b9a8 <__sanitizer_get_allocated_size@@Base+0x27f8>  // b.any
    b768:	sub	x1, x0, #0x1
    b76c:	tst	x1, x20
    b770:	b.ne	b9c8 <__sanitizer_get_allocated_size@@Base+0x2818>  // b.any
    b774:	add	x3, x20, x21
    b778:	cmp	x24, x3
    b77c:	b.hi	b9e8 <__sanitizer_get_allocated_size@@Base+0x2838>  // b.pmore
    b780:	add	x4, x24, x22
    b784:	cmp	x4, x3
    b788:	b.cc	ba04 <__sanitizer_get_allocated_size@@Base+0x2854>  // b.lo, b.ul, b.last
    b78c:	sub	x25, x20, x0
    b790:	add	x0, x23, #0x298
    b794:	mov	w2, #0x1                   	// #1
    b798:	stp	x24, x22, [x25]
    b79c:	str	x21, [x25, #16]
    b7a0:	ldxrb	w1, [x0]
    b7a4:	stxrb	w3, w2, [x0]
    b7a8:	cbnz	w3, b7a0 <__sanitizer_get_allocated_size@@Base+0x25f0>
    b7ac:	dmb	ish
    b7b0:	tst	w1, #0xff
    b7b4:	b.eq	b7bc <__sanitizer_get_allocated_size@@Base+0x260c>  // b.none
    b7b8:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    b7bc:	ldr	x1, [x23, #104]
    b7c0:	add	x21, x23, #0x30
    b7c4:	mov	x0, #0xfffff               	// #1048575
    b7c8:	cmp	x1, x0
    b7cc:	b.hi	ba1c <__sanitizer_get_allocated_size@@Base+0x286c>  // b.pmore
    b7d0:	ldr	x0, [x23, #96]
    b7d4:	add	x24, x23, #0x40
    b7d8:	cmp	x1, x0
    b7dc:	b.eq	ba3c <__sanitizer_get_allocated_size@@Base+0x288c>  // b.none
    b7e0:	ldp	x2, x3, [x21, #88]
    b7e4:	clz	x6, x22
    b7e8:	ldr	x5, [x21, #8]
    b7ec:	add	x4, x1, #0x1
    b7f0:	mov	w0, #0x3f                  	// #63
    b7f4:	sub	w0, w0, w6
    b7f8:	str	x4, [x21, #56]
    b7fc:	ldr	x4, [x21, #72]
    b800:	add	x2, x22, x2
    b804:	str	x1, [x25, #24]
    b808:	add	x0, x23, w0, sxtw #3
    b80c:	cmp	x3, x2
    b810:	str	x25, [x5, x1, lsl #3]
    b814:	csel	x3, x3, x2, cs  // cs = hs, nlast
    b818:	add	x4, x4, #0x1
    b81c:	strb	wzr, [x21, #64]
    b820:	str	x4, [x21, #72]
    b824:	stp	x2, x3, [x21, #88]
    b828:	ldr	x3, [x0, #152]
    b82c:	ldr	x2, [x23, #688]
    b830:	add	x3, x3, #0x1
    b834:	str	x3, [x0, #152]
    b838:	add	x2, x22, x2
    b83c:	str	x2, [x23, #688]
    b840:	ldr	x0, [x23, #696]
    b844:	add	x22, x22, x0
    b848:	str	x22, [x23, #696]
    b84c:	dmb	ish
    b850:	strb	wzr, [x23, #664]
    b854:	mov	x0, x20
    b858:	b	b6ac <__sanitizer_get_allocated_size@@Base+0x24fc>
    b85c:	sub	x25, x3, #0x1
    b860:	tst	x3, x25
    b864:	b.ne	b8c0 <__sanitizer_get_allocated_size@@Base+0x2710>  // b.any
    b868:	sub	x1, x0, #0x1
    b86c:	neg	x0, x3
    b870:	and	x0, x1, x0
    b874:	cmp	x3, #0x10, lsl #12
    b878:	mov	x1, #0x10000               	// #65536
    b87c:	ccmp	x0, x1, #0x2, ls  // ls = plast
    b880:	b.hi	b6e4 <__sanitizer_get_allocated_size@@Base+0x2534>  // b.pmore
    b884:	mov	x21, x0
    b888:	cmp	x21, #0x200
    b88c:	b.hi	b618 <__sanitizer_get_allocated_size@@Base+0x2468>  // b.pmore
    b890:	add	x20, x21, #0x1f
    b894:	cmp	xzr, x20, lsr #5
    b898:	lsr	x20, x20, #5
    b89c:	b.ne	b654 <__sanitizer_get_allocated_size@@Base+0x24a4>  // b.any
    b8a0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b8a4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b8a8:	add	x2, x2, #0x2c8
    b8ac:	add	x0, x0, #0x2e0
    b8b0:	mov	x4, #0x0                   	// #0
    b8b4:	mov	x3, #0x0                   	// #0
    b8b8:	mov	w1, #0x22                  	// #34
    b8bc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    b8c0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    b8c4:	add	x0, x0, #0xb38
    b8c8:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    b8cc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    b8d0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b8d4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b8d8:	add	x2, x2, #0x350
    b8dc:	add	x0, x0, #0x2e0
    b8e0:	mov	x4, x20
    b8e4:	mov	x3, x20
    b8e8:	mov	w1, #0x23                  	// #35
    b8ec:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    b8f0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    b8f4:	mov	x3, x19
    b8f8:	mov	x2, x22
    b8fc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b900:	ldr	x1, [x1, #4024]
    b904:	add	x0, x0, #0x398
    b908:	ldr	x1, [x1]
    b90c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    b910:	mov	x0, #0x0                   	// #0
    b914:	ldr	x25, [sp, #48]
    b918:	b	b6c4 <__sanitizer_get_allocated_size@@Base+0x2514>
    b91c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b920:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b924:	add	x2, x2, #0x4e0
    b928:	add	x0, x0, #0x520
    b92c:	mov	x4, #0x0                   	// #0
    b930:	mov	w1, #0x49                  	// #73
    b934:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    b938:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b93c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    b940:	add	x2, x2, #0x370
    b944:	add	x0, x0, #0xcf8
    b948:	mov	x4, #0x0                   	// #0
    b94c:	mov	x3, #0x0                   	// #0
    b950:	mov	w1, #0x56                  	// #86
    b954:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    b958:	mov	x3, x20
    b95c:	mov	x2, x23
    b960:	mov	x1, x25
    b964:	mov	x0, x22
    b968:	bl	b4d0 <__sanitizer_get_allocated_size@@Base+0x2320>
    b96c:	tst	w0, #0xff
    b970:	b.eq	b97c <__sanitizer_get_allocated_size@@Base+0x27cc>  // b.none
    b974:	ldr	w2, [x22, x24]
    b978:	b	b66c <__sanitizer_get_allocated_size@@Base+0x24bc>
    b97c:	mov	x0, #0x0                   	// #0
    b980:	ldr	x25, [sp, #48]
    b984:	b	b6c4 <__sanitizer_get_allocated_size@@Base+0x2514>
    b988:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b98c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    b990:	add	x2, x2, #0x400
    b994:	add	x0, x0, #0xcf8
    b998:	mov	x4, #0x0                   	// #0
    b99c:	mov	x3, #0x0                   	// #0
    b9a0:	mov	w1, #0x65                  	// #101
    b9a4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    b9a8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b9ac:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    b9b0:	add	x2, x2, #0x430
    b9b4:	add	x0, x0, #0xcf8
    b9b8:	mov	x4, #0x0                   	// #0
    b9bc:	mov	x3, #0x0                   	// #0
    b9c0:	mov	w1, #0x6b                  	// #107
    b9c4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    b9c8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b9cc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    b9d0:	add	x2, x2, #0x458
    b9d4:	add	x0, x0, #0xcf8
    b9d8:	mov	x4, #0x0                   	// #0
    b9dc:	mov	x3, #0x0                   	// #0
    b9e0:	mov	w1, #0x6c                  	// #108
    b9e4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    b9e8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    b9ec:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    b9f0:	mov	x4, x24
    b9f4:	add	x2, x2, #0x480
    b9f8:	add	x0, x0, #0xcf8
    b9fc:	mov	w1, #0x6d                  	// #109
    ba00:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    ba04:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    ba08:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    ba0c:	add	x2, x2, #0x4a0
    ba10:	add	x0, x0, #0xcf8
    ba14:	mov	w1, #0x6e                  	// #110
    ba18:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    ba1c:	mov	x3, x1
    ba20:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    ba24:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    ba28:	add	x2, x2, #0x4c0
    ba2c:	add	x0, x0, #0xcf8
    ba30:	mov	x4, #0x100000              	// #1048576
    ba34:	mov	w1, #0x2a                  	// #42
    ba38:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    ba3c:	ldr	x4, [x23, #64]
    ba40:	mov	x0, x24
    ba44:	mov	x3, #0x0                   	// #0
    ba48:	mov	x2, #0x20000               	// #131072
    ba4c:	add	x1, x4, x1, lsl #3
    ba50:	bl	24ea0 <__sanitizer_sandbox_on_notify@@Base+0x1918>
    ba54:	ldr	x0, [x24, #32]
    ba58:	ldr	x1, [x21, #56]
    ba5c:	add	x0, x0, #0x4, lsl #12
    ba60:	str	x0, [x24, #32]
    ba64:	b	b7e0 <__sanitizer_get_allocated_size@@Base+0x2630>
    ba68:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    ba6c:	mov	x2, x21
    ba70:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    ba74:	add	x0, x0, #0x268
    ba78:	ldr	x1, [x1, #4024]
    ba7c:	ldr	x1, [x1]
    ba80:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    ba84:	mov	x0, #0x0                   	// #0
    ba88:	b	b6c4 <__sanitizer_get_allocated_size@@Base+0x2514>
    ba8c:	nop
    ba90:	adrp	x9, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    ba94:	stp	x19, x20, [sp, #-176]!
    ba98:	mov	x5, x1
    ba9c:	ldr	x19, [x9, #4016]
    baa0:	stp	x25, x26, [sp, #48]
    baa4:	mov	x20, x4
    baa8:	stp	x21, x22, [sp, #16]
    baac:	mov	x25, x2
    bab0:	ldr	x26, [x19]
    bab4:	stp	x23, x24, [sp, #32]
    bab8:	mov	x24, x0
    babc:	stp	x27, x28, [sp, #64]
    bac0:	mov	x28, x3
    bac4:	str	x30, [sp, #80]
    bac8:	cbz	x26, bdbc <__sanitizer_get_allocated_size@@Base+0x2c0c>
    bacc:	cmp	x25, x26
    bad0:	b.ls	bcec <__sanitizer_get_allocated_size@@Base+0x2b3c>  // b.plast
    bad4:	udiv	x0, x25, x26
    bad8:	msub	x0, x0, x26, x25
    badc:	cbnz	x0, bdd4 <__sanitizer_get_allocated_size@@Base+0x2c24>
    bae0:	mov	w10, #0x1                   	// #1
    bae4:	mov	x2, #0x1                   	// #1
    bae8:	cbz	x28, be60 <__sanitizer_get_allocated_size@@Base+0x2cb0>
    baec:	rbit	x21, x2
    baf0:	mov	x0, #0x40                  	// #64
    baf4:	clz	x21, x21
    baf8:	mov	x27, x2
    bafc:	lsr	x0, x0, x21
    bb00:	sub	x22, x0, #0x1
    bb04:	rbit	x0, x0
    bb08:	mov	x6, #0x1                   	// #1
    bb0c:	clz	x0, x0
    bb10:	mov	w23, w0
    bb14:	lsl	x1, x6, x0
    bb18:	sub	x3, x1, #0x1
    bb1c:	tst	x3, x1
    bb20:	b.ne	c0a4 <__sanitizer_get_allocated_size@@Base+0x2ef4>  // b.any
    bb24:	sub	x3, x28, #0x1
    bb28:	neg	x7, x1
    bb2c:	add	x3, x3, x1
    bb30:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    bb34:	and	x3, x3, x7
    bb38:	add	x1, x1, #0x6b8
    bb3c:	str	w10, [sp, #96]
    bb40:	lsr	x0, x3, x0
    bb44:	stp	x2, x5, [sp, #104]
    bb48:	lsl	x0, x0, #3
    bb4c:	str	x0, [sp, #120]
    bb50:	bl	1ea00 <__sanitizer_set_report_fd@@Base+0x6c40>
    bb54:	mov	x19, x0
    bb58:	cbz	x0, be80 <__sanitizer_get_allocated_size@@Base+0x2cd0>
    bb5c:	lsr	x3, x26, #4
    bb60:	ldr	w10, [sp, #96]
    bb64:	sub	x0, x3, #0x1
    bb68:	lsr	x11, x25, #4
    bb6c:	tst	x0, x3
    bb70:	mov	x6, #0x1                   	// #1
    bb74:	adrp	x9, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    bb78:	ldp	x2, x5, [sp, #104]
    bb7c:	b.ne	bd7c <__sanitizer_get_allocated_size@@Base+0x2bcc>  // b.any
    bb80:	cbz	x3, c084 <__sanitizer_get_allocated_size@@Base+0x2ed4>
    bb84:	rbit	x12, x3
    bb88:	cmp	x25, x26
    bb8c:	clz	x12, x12
    bb90:	b.hi	bba0 <__sanitizer_get_allocated_size@@Base+0x29f0>  // b.pmore
    bb94:	udiv	x0, x26, x25
    bb98:	msub	x0, x0, x25, x26
    bb9c:	cbz	x0, c008 <__sanitizer_get_allocated_size@@Base+0x2e58>
    bba0:	cbz	x5, bbfc <__sanitizer_get_allocated_size@@Base+0x2a4c>
    bba4:	add	x14, x24, x5, lsl #2
    bba8:	sub	x13, x11, #0x1
    bbac:	mov	x0, #0x1                   	// #1
    bbb0:	ldr	w5, [x24]
    bbb4:	add	x8, x13, w5, uxtw
    bbb8:	lsr	w5, w5, w12
    bbbc:	lsr	x8, x8, x12
    bbc0:	cmp	x5, x8
    bbc4:	b.hi	bbf0 <__sanitizer_get_allocated_size@@Base+0x2a40>  // b.pmore
    bbc8:	lsr	x7, x5, x23
    bbcc:	and	x1, x5, x22
    bbd0:	add	x5, x5, #0x1
    bbd4:	ldr	x6, [x19, x7, lsl #3]
    bbd8:	lsl	x1, x1, x21
    bbdc:	lsl	x1, x0, x1
    bbe0:	cmp	x8, x5
    bbe4:	add	x1, x6, x1
    bbe8:	str	x1, [x19, x7, lsl #3]
    bbec:	b.cs	bbc8 <__sanitizer_get_allocated_size@@Base+0x2a18>  // b.hs, b.nlast
    bbf0:	add	x24, x24, #0x4
    bbf4:	cmp	x14, x24
    bbf8:	b.ne	bbb0 <__sanitizer_get_allocated_size@@Base+0x2a00>  // b.any
    bbfc:	ldr	x24, [x9, #4016]
    bc00:	ldr	x5, [x24]
    bc04:	cbz	x5, bfe0 <__sanitizer_get_allocated_size@@Base+0x2e30>
    bc08:	lsr	x5, x5, #4
    bc0c:	sub	x24, x5, #0x1
    bc10:	ands	x24, x24, x5
    bc14:	b.ne	bd7c <__sanitizer_get_allocated_size@@Base+0x2bcc>  // b.any
    bc18:	cbz	x5, c084 <__sanitizer_get_allocated_size@@Base+0x2ed4>
    bc1c:	neg	w2, w2
    bc20:	rbit	x5, x5
    bc24:	clz	x5, x5
    bc28:	mov	x0, #0xffffffffffffffff    	// #-1
    bc2c:	mov	w6, w5
    bc30:	lsr	x2, x0, x2
    bc34:	cbz	w10, bebc <__sanitizer_get_allocated_size@@Base+0x2d0c>
    bc38:	mov	x25, #0x0                   	// #0
    bc3c:	mov	w3, #0x0                   	// #0
    bc40:	cbnz	x28, bc64 <__sanitizer_get_allocated_size@@Base+0x2ab4>
    bc44:	b	be3c <__sanitizer_get_allocated_size@@Base+0x2c8c>
    bc48:	cbnz	w3, bc58 <__sanitizer_get_allocated_size@@Base+0x2aa8>
    bc4c:	mov	w7, w10
    bc50:	mov	x24, x25
    bc54:	mov	w3, #0x1                   	// #1
    bc58:	add	x25, x25, #0x1
    bc5c:	cmp	x28, x25
    bc60:	b.eq	be04 <__sanitizer_get_allocated_size@@Base+0x2c54>  // b.none
    bc64:	lsr	x0, x25, x23
    bc68:	and	x1, x25, x22
    bc6c:	mov	w7, w3
    bc70:	ldr	x0, [x19, x0, lsl #3]
    bc74:	lsl	x1, x1, x21
    bc78:	lsr	x0, x0, x1
    bc7c:	and	x0, x0, x2
    bc80:	cmp	x0, x27
    bc84:	b.eq	bc48 <__sanitizer_get_allocated_size@@Base+0x2a98>  // b.none
    bc88:	cbz	w3, bc58 <__sanitizer_get_allocated_size@@Base+0x2aa8>
    bc8c:	lsl	x0, x24, x6
    bc90:	str	w6, [sp, #104]
    bc94:	ubfiz	x3, x0, #4, #32
    bc98:	lsl	x26, x25, x6
    bc9c:	ldr	x1, [x20, #8]
    bca0:	ubfiz	x26, x26, #4, #32
    bca4:	str	x3, [sp, #96]
    bca8:	add	x0, x1, x3
    bcac:	add	x1, x1, x26
    bcb0:	str	w10, [sp, #112]
    bcb4:	stp	x2, x5, [sp, #128]
    bcb8:	bl	244a8 <__sanitizer_sandbox_on_notify@@Base+0xf20>
    bcbc:	ldr	w6, [sp, #104]
    bcc0:	ldp	x1, x0, [x20, #16]
    bcc4:	mov	w7, #0x0                   	// #0
    bcc8:	ldr	x3, [sp, #96]
    bccc:	ldr	w10, [sp, #112]
    bcd0:	ldp	x2, x5, [sp, #128]
    bcd4:	add	x0, x26, x0
    bcd8:	sub	x0, x0, x3
    bcdc:	add	x1, x1, #0x1
    bce0:	mov	w3, #0x0                   	// #0
    bce4:	stp	x1, x0, [x20, #16]
    bce8:	b	bc58 <__sanitizer_get_allocated_size@@Base+0x2aa8>
    bcec:	udiv	x27, x26, x25
    bcf0:	mov	w10, #0x1                   	// #1
    bcf4:	msub	x0, x27, x25, x26
    bcf8:	cbnz	x0, bd9c <__sanitizer_get_allocated_size@@Base+0x2bec>
    bcfc:	cbz	x28, be60 <__sanitizer_get_allocated_size@@Base+0x2cb0>
    bd00:	cbz	x27, be9c <__sanitizer_get_allocated_size@@Base+0x2cec>
    bd04:	clz	x0, x27
    bd08:	mov	w1, #0x3f                  	// #63
    bd0c:	sub	w0, w1, w0
    bd10:	sxtw	x0, w0
    bd14:	add	x3, x0, #0x1
    bd18:	tst	x0, x3
    bd1c:	b.eq	c0b4 <__sanitizer_get_allocated_size@@Base+0x2f04>  // b.none
    bd20:	clz	x2, x3
    bd24:	mov	x0, #0x1                   	// #1
    bd28:	sub	w1, w1, w2
    bd2c:	add	w2, w1, #0x1
    bd30:	lsl	x2, x0, x2
    bd34:	cmp	x2, x3
    bd38:	b.ls	c050 <__sanitizer_get_allocated_size@@Base+0x2ea0>  // b.plast
    bd3c:	lsl	x4, x0, x1
    bd40:	cmp	x4, x3
    bd44:	b.cs	c06c <__sanitizer_get_allocated_size@@Base+0x2ebc>  // b.hs, b.nlast
    bd48:	cmp	x2, #0x40
    bd4c:	b.hi	bfc0 <__sanitizer_get_allocated_size@@Base+0x2e10>  // b.pmore
    bd50:	sub	x0, x2, #0x1
    bd54:	ands	x0, x0, x2
    bd58:	cset	x3, eq  // eq = none
    bd5c:	cbnz	x0, bde4 <__sanitizer_get_allocated_size@@Base+0x2c34>
    bd60:	rbit	x21, x2
    bd64:	mov	x0, #0x40                  	// #64
    bd68:	clz	x21, x21
    bd6c:	lsr	x0, x0, x21
    bd70:	sub	x22, x0, #0x1
    bd74:	tst	x0, x22
    bd78:	b.eq	bb04 <__sanitizer_get_allocated_size@@Base+0x2954>  // b.none
    bd7c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    bd80:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    bd84:	add	x2, x2, #0x698
    bd88:	add	x0, x0, #0x5e8
    bd8c:	mov	x4, #0x0                   	// #0
    bd90:	mov	x3, #0x0                   	// #0
    bd94:	mov	w1, #0x19d                 	// #413
    bd98:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    bd9c:	udiv	x1, x25, x0
    bda0:	msub	x0, x1, x0, x25
    bda4:	cbnz	x0, bdb0 <__sanitizer_get_allocated_size@@Base+0x2c00>
    bda8:	add	x27, x27, #0x1
    bdac:	b	bcfc <__sanitizer_get_allocated_size@@Base+0x2b4c>
    bdb0:	add	x27, x27, #0x2
    bdb4:	mov	w10, #0x0                   	// #0
    bdb8:	b	bcfc <__sanitizer_get_allocated_size@@Base+0x2b4c>
    bdbc:	str	x1, [sp, #96]
    bdc0:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    bdc4:	mov	x26, x0
    bdc8:	str	x0, [x19]
    bdcc:	ldr	x5, [sp, #96]
    bdd0:	b	bacc <__sanitizer_get_allocated_size@@Base+0x291c>
    bdd4:	cbz	x28, be60 <__sanitizer_get_allocated_size@@Base+0x2cb0>
    bdd8:	mov	w10, #0x0                   	// #0
    bddc:	mov	x2, #0x2                   	// #2
    bde0:	b	baec <__sanitizer_get_allocated_size@@Base+0x293c>
    bde4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    bde8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    bdec:	add	x2, x2, #0x698
    bdf0:	add	x0, x0, #0x5e8
    bdf4:	mov	x4, #0x0                   	// #0
    bdf8:	mov	w1, #0x19d                 	// #413
    bdfc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    be00:	mov	x24, x9
    be04:	cbz	w7, be3c <__sanitizer_get_allocated_size@@Base+0x2c8c>
    be08:	ldr	x1, [x20, #8]
    be0c:	lsl	x21, x24, x5
    be10:	lsl	x5, x28, x5
    be14:	ubfiz	x21, x21, #4, #32
    be18:	ubfiz	x22, x5, #4, #32
    be1c:	add	x0, x1, x21
    be20:	add	x1, x1, x22
    be24:	bl	244a8 <__sanitizer_sandbox_on_notify@@Base+0xf20>
    be28:	ldp	x0, x1, [x20, #16]
    be2c:	add	x22, x22, x1
    be30:	add	x0, x0, #0x1
    be34:	sub	x21, x22, x21
    be38:	stp	x0, x21, [x20, #16]
    be3c:	mov	x0, x19
    be40:	ldp	x21, x22, [sp, #16]
    be44:	ldp	x23, x24, [sp, #32]
    be48:	ldp	x25, x26, [sp, #48]
    be4c:	ldp	x27, x28, [sp, #64]
    be50:	ldr	x30, [sp, #80]
    be54:	ldr	x1, [sp, #120]
    be58:	ldp	x19, x20, [sp], #176
    be5c:	b	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    be60:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    be64:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    be68:	add	x2, x2, #0x588
    be6c:	add	x0, x0, #0xd88
    be70:	mov	x4, #0x0                   	// #0
    be74:	mov	x3, #0x0                   	// #0
    be78:	mov	w1, #0x14e                 	// #334
    be7c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    be80:	ldp	x21, x22, [sp, #16]
    be84:	ldp	x23, x24, [sp, #32]
    be88:	ldp	x25, x26, [sp, #48]
    be8c:	ldp	x27, x28, [sp, #64]
    be90:	ldr	x30, [sp, #80]
    be94:	ldp	x19, x20, [sp], #176
    be98:	ret
    be9c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    bea0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    bea4:	add	x2, x2, #0x5a8
    bea8:	add	x0, x0, #0xd88
    beac:	mov	x4, #0x0                   	// #0
    beb0:	mov	x3, #0x0                   	// #0
    beb4:	mov	w1, #0x14f                 	// #335
    beb8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    bebc:	cmp	x25, x26
    bec0:	b.cs	c044 <__sanitizer_get_allocated_size@@Base+0x2e94>  // b.hs, b.nlast
    bec4:	udiv	x27, x3, x11
    bec8:	mul	x8, x11, x27
    becc:	cbz	x28, be3c <__sanitizer_get_allocated_size@@Base+0x2c8c>
    bed0:	mov	x9, #0x0                   	// #0
    bed4:	mov	x25, #0x0                   	// #0
    bed8:	mov	x26, #0x0                   	// #0
    bedc:	mov	w12, #0x0                   	// #0
    bee0:	b	bf00 <__sanitizer_get_allocated_size@@Base+0x2d50>
    bee4:	cbnz	w12, bef4 <__sanitizer_get_allocated_size@@Base+0x2d44>
    bee8:	mov	w12, #0x1                   	// #1
    beec:	mov	x9, x25
    bef0:	mov	w7, w12
    bef4:	add	x25, x25, #0x1
    bef8:	cmp	x28, x25
    befc:	b.eq	be00 <__sanitizer_get_allocated_size@@Base+0x2c50>  // b.none
    bf00:	mov	x0, x24
    bf04:	add	x24, x24, x3
    bf08:	cmp	x24, x26
    bf0c:	mov	x10, x27
    bf10:	b.ls	bf30 <__sanitizer_get_allocated_size@@Base+0x2d80>  // b.plast
    bf14:	cmp	x26, x0
    bf18:	add	x26, x26, x8
    bf1c:	cinc	x10, x27, hi  // hi = pmore
    bf20:	cmp	x24, x26
    bf24:	b.ls	bf30 <__sanitizer_get_allocated_size@@Base+0x2d80>  // b.plast
    bf28:	add	x10, x10, #0x1
    bf2c:	add	x26, x26, x11
    bf30:	lsr	x0, x25, x23
    bf34:	and	x1, x25, x22
    bf38:	mov	w7, w12
    bf3c:	ldr	x0, [x19, x0, lsl #3]
    bf40:	lsl	x1, x1, x21
    bf44:	lsr	x0, x0, x1
    bf48:	and	x0, x0, x2
    bf4c:	cmp	x10, x0
    bf50:	b.eq	bee4 <__sanitizer_get_allocated_size@@Base+0x2d34>  // b.none
    bf54:	cbz	w12, bef4 <__sanitizer_get_allocated_size@@Base+0x2d44>
    bf58:	lsl	x0, x9, x6
    bf5c:	str	w6, [sp, #112]
    bf60:	lsl	x10, x25, x6
    bf64:	ubfiz	x12, x0, #4, #32
    bf68:	ubfiz	x10, x10, #4, #32
    bf6c:	stp	x10, x12, [sp, #96]
    bf70:	ldr	x1, [x20, #8]
    bf74:	stp	x9, x11, [sp, #128]
    bf78:	add	x0, x1, x12
    bf7c:	add	x1, x1, x10
    bf80:	stp	x3, x2, [sp, #144]
    bf84:	stp	x8, x5, [sp, #160]
    bf88:	bl	244a8 <__sanitizer_sandbox_on_notify@@Base+0xf20>
    bf8c:	ldr	w6, [sp, #112]
    bf90:	ldp	x1, x0, [x20, #16]
    bf94:	mov	w7, #0x0                   	// #0
    bf98:	ldp	x10, x12, [sp, #96]
    bf9c:	ldp	x9, x11, [sp, #128]
    bfa0:	add	x1, x1, #0x1
    bfa4:	ldp	x3, x2, [sp, #144]
    bfa8:	add	x0, x10, x0
    bfac:	sub	x0, x0, x12
    bfb0:	mov	w12, #0x0                   	// #0
    bfb4:	stp	x1, x0, [x20, #16]
    bfb8:	ldp	x8, x5, [sp, #160]
    bfbc:	b	bef4 <__sanitizer_get_allocated_size@@Base+0x2d44>
    bfc0:	mov	x3, x2
    bfc4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    bfc8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    bfcc:	add	x0, x0, #0xd88
    bfd0:	add	x2, x2, #0x668
    bfd4:	mov	x4, #0x40                  	// #64
    bfd8:	mov	w1, #0x155                 	// #341
    bfdc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    bfe0:	str	w10, [sp, #96]
    bfe4:	stp	x11, x3, [sp, #104]
    bfe8:	str	x2, [sp, #128]
    bfec:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    bff0:	ldr	w10, [sp, #96]
    bff4:	mov	x5, x0
    bff8:	str	x0, [x24]
    bffc:	ldp	x11, x3, [sp, #104]
    c000:	ldr	x2, [sp, #128]
    c004:	b	bc08 <__sanitizer_get_allocated_size@@Base+0x2a58>
    c008:	cbz	x5, bbfc <__sanitizer_get_allocated_size@@Base+0x2a4c>
    c00c:	mov	w8, w12
    c010:	add	x5, x24, x5, lsl #2
    c014:	ldr	w0, [x24], #4
    c018:	cmp	x24, x5
    c01c:	lsr	w0, w0, w8
    c020:	and	x1, x0, x22
    c024:	lsr	x0, x0, x23
    c028:	lsl	x1, x1, x21
    c02c:	ldr	x7, [x19, x0, lsl #3]
    c030:	lsl	x1, x6, x1
    c034:	add	x1, x7, x1
    c038:	str	x1, [x19, x0, lsl #3]
    c03c:	b.ne	c014 <__sanitizer_get_allocated_size@@Base+0x2e64>  // b.any
    c040:	b	bbfc <__sanitizer_get_allocated_size@@Base+0x2a4c>
    c044:	mov	x8, x11
    c048:	mov	x27, #0x1                   	// #1
    c04c:	b	becc <__sanitizer_get_allocated_size@@Base+0x2d1c>
    c050:	mov	x4, x2
    c054:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c058:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c05c:	add	x0, x0, #0x5e8
    c060:	add	x2, x2, #0x5c0
    c064:	mov	w1, #0x18a                 	// #394
    c068:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    c06c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c070:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c074:	add	x2, x2, #0x648
    c078:	add	x0, x0, #0x5e8
    c07c:	mov	w1, #0x18b                 	// #395
    c080:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    c084:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c088:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c08c:	add	x2, x2, #0x6d0
    c090:	add	x0, x0, #0x5e8
    c094:	mov	x4, #0x0                   	// #0
    c098:	mov	x3, #0x0                   	// #0
    c09c:	mov	w1, #0x171                 	// #369
    c0a0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    c0a4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    c0a8:	add	x0, x0, #0xb38
    c0ac:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    c0b0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    c0b4:	mov	x2, x3
    c0b8:	b	bd60 <__sanitizer_get_allocated_size@@Base+0x2bb0>
    c0bc:	nop
    c0c0:	stp	x19, x20, [sp, #-160]!
    c0c4:	mov	x19, x2
    c0c8:	mov	x20, x3
    c0cc:	stp	x25, x26, [sp, #48]
    c0d0:	mov	x25, x0
    c0d4:	mov	x26, x4
    c0d8:	ldr	x0, [x0, #32]
    c0dc:	stp	x23, x24, [sp, #32]
    c0e0:	add	x23, x2, x2, lsl #1
    c0e4:	mov	x24, #0x2000000000          	// #137438953472
    c0e8:	add	x24, x0, x24
    c0ec:	lsl	x23, x23, #6
    c0f0:	stp	x21, x22, [sp, #16]
    c0f4:	add	x24, x24, x23
    c0f8:	lsl	x22, x2, #32
    c0fc:	mov	x21, #0xe0000000            	// #3758096384
    c100:	add	x21, x22, x21
    c104:	stp	x27, x28, [sp, #64]
    c108:	add	x21, x21, x0
    c10c:	mov	x0, x24
    c110:	str	x30, [sp, #80]
    c114:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
    c118:	ldp	x27, x2, [x24, #88]
    c11c:	add	x28, x27, x26
    c120:	lsl	x6, x28, #2
    c124:	cmp	x2, x28, lsl #2
    c128:	b.cs	c188 <__sanitizer_get_allocated_size@@Base+0x2fd8>  // b.hs, b.nlast
    c12c:	mov	x0, #0xffff                	// #65535
    c130:	add	x5, x6, x0
    c134:	and	x5, x5, #0xffffffffffff0000
    c138:	mov	x4, #0x20000000            	// #536870912
    c13c:	cmp	x5, x4
    c140:	b.hi	c380 <__sanitizer_get_allocated_size@@Base+0x31d0>  // b.pmore
    c144:	add	x1, x21, x2
    c148:	mov	x0, x25
    c14c:	sub	x2, x5, x2
    c150:	adrp	x3, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c154:	add	x3, x3, #0x1a8
    c158:	stp	x1, x5, [sp, #104]
    c15c:	str	x6, [sp, #120]
    c160:	bl	24e90 <__sanitizer_sandbox_on_notify@@Base+0x1908>
    c164:	ldp	x1, x5, [sp, #104]
    c168:	ldr	x6, [sp, #120]
    c16c:	cbz	x0, c3c4 <__sanitizer_get_allocated_size@@Base+0x3214>
    c170:	cmp	x1, x0
    c174:	b.ne	c41c <__sanitizer_get_allocated_size@@Base+0x326c>  // b.any
    c178:	stp	x6, x5, [sp, #104]
    c17c:	bl	7170 <__sanitizer_print_memory_profile@plt+0xb10>
    c180:	ldp	x6, x5, [sp, #104]
    c184:	str	x5, [x24, #96]
    c188:	cbz	x26, c224 <__sanitizer_get_allocated_size@@Base+0x3074>
    c18c:	add	x2, x27, #0x4
    c190:	add	x4, x20, #0x10
    c194:	sub	x0, x26, #0x1
    c198:	lsl	x2, x2, #2
    c19c:	sub	x1, x2, #0x10
    c1a0:	add	x3, x21, x2
    c1a4:	add	x2, x21, x1
    c1a8:	cmp	x2, x4
    c1ac:	ccmp	x20, x3, #0x2, cc  // cc = lo, ul, last
    c1b0:	ccmp	x0, #0x7, #0x0, cs  // cs = hs, nlast
    c1b4:	b.ls	c39c <__sanitizer_get_allocated_size@@Base+0x31ec>  // b.plast
    c1b8:	lsr	x3, x26, #2
    c1bc:	mov	x1, #0x0                   	// #0
    c1c0:	lsl	x3, x3, #4
    c1c4:	nop
    c1c8:	ldr	q0, [x20, x1]
    c1cc:	str	q0, [x2, x1]
    c1d0:	add	x1, x1, #0x10
    c1d4:	cmp	x1, x3
    c1d8:	b.ne	c1c8 <__sanitizer_get_allocated_size@@Base+0x3018>  // b.any
    c1dc:	tst	x26, #0x3
    c1e0:	and	x0, x26, #0xfffffffffffffffc
    c1e4:	b.eq	c224 <__sanitizer_get_allocated_size@@Base+0x3074>  // b.none
    c1e8:	add	x1, x27, x0
    c1ec:	ldr	w3, [x20, x0, lsl #2]
    c1f0:	add	x2, x0, #0x1
    c1f4:	cmp	x26, x2
    c1f8:	str	w3, [x21, x1, lsl #2]
    c1fc:	b.ls	c224 <__sanitizer_get_allocated_size@@Base+0x3074>  // b.plast
    c200:	add	x1, x27, x2
    c204:	ldr	w2, [x20, x2, lsl #2]
    c208:	add	x0, x0, #0x2
    c20c:	cmp	x26, x0
    c210:	str	w2, [x21, x1, lsl #2]
    c214:	b.ls	c224 <__sanitizer_get_allocated_size@@Base+0x3074>  // b.plast
    c218:	add	x27, x27, x0
    c21c:	ldr	w0, [x20, x0, lsl #2]
    c220:	str	w0, [x21, x27, lsl #2]
    c224:	ldr	x1, [x24, #152]
    c228:	cmp	x19, #0x1f
    c22c:	ldr	x0, [x25, #32]
    c230:	add	x26, x1, x26
    c234:	str	x28, [x24, #88]
    c238:	mov	x1, #0x2000000000          	// #137438953472
    c23c:	str	x26, [x24, #152]
    c240:	add	x0, x0, x1
    c244:	add	x23, x0, x23
    c248:	b.eq	c414 <__sanitizer_get_allocated_size@@Base+0x3264>  // b.none
    c24c:	cmp	x19, #0x10
    c250:	b.ls	c35c <__sanitizer_get_allocated_size@@Base+0x31ac>  // b.plast
    c254:	sub	x19, x19, #0x10
    c258:	mov	x2, #0x200                 	// #512
    c25c:	and	x0, x19, #0x1
    c260:	lsr	x19, x19, #1
    c264:	lsl	x19, x2, x19
    c268:	lsr	x2, x19, #1
    c26c:	madd	x19, x2, x0, x19
    c270:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    c274:	ldr	x21, [x21, #4016]
    c278:	ldr	x20, [x21]
    c27c:	cbz	x20, c370 <__sanitizer_get_allocated_size@@Base+0x31c0>
    c280:	ldr	x21, [x23, #88]
    c284:	mul	x0, x21, x19
    c288:	cmp	x0, x20
    c28c:	b.cc	c338 <__sanitizer_get_allocated_size@@Base+0x3188>  // b.lo, b.ul, b.last
    c290:	ldp	x0, x1, [x23, #152]
    c294:	sub	x0, x0, x1
    c298:	mul	x0, x0, x19
    c29c:	cmp	x0, x20
    c2a0:	b.cc	c338 <__sanitizer_get_allocated_size@@Base+0x3188>  // b.lo, b.ul, b.last
    c2a4:	ldr	w0, [x25, #40]
    c2a8:	tbnz	w0, #31, c338 <__sanitizer_get_allocated_size@@Base+0x3188>
    c2ac:	ldr	x26, [x23, #176]
    c2b0:	mov	w1, #0x4240                	// #16960
    c2b4:	movk	w1, #0xf, lsl #16
    c2b8:	smaddl	x26, w0, w1, x26
    c2bc:	bl	242a8 <__sanitizer_sandbox_on_notify@@Base+0xd20>
    c2c0:	cmp	x26, x0
    c2c4:	b.hi	c338 <__sanitizer_get_allocated_size@@Base+0x3188>  // b.pmore
    c2c8:	ldr	x0, [x25, #32]
    c2cc:	stp	xzr, xzr, [sp, #144]
    c2d0:	sub	x3, x20, #0x1
    c2d4:	add	x22, x22, x0
    c2d8:	stp	x25, x22, [sp, #128]
    c2dc:	mov	x0, #0xe0000000            	// #3758096384
    c2e0:	tst	x20, x3
    c2e4:	add	x0, x22, x0
    c2e8:	ldr	x1, [x23, #104]
    c2ec:	b.ne	c43c <__sanitizer_get_allocated_size@@Base+0x328c>  // b.any
    c2f0:	add	x1, x1, x3
    c2f4:	neg	x3, x20
    c2f8:	and	x3, x1, x3
    c2fc:	mov	x2, x19
    c300:	mov	x1, x21
    c304:	add	x4, sp, #0x80
    c308:	udiv	x3, x3, x20
    c30c:	bl	ba90 <__sanitizer_get_allocated_size@@Base+0x28e0>
    c310:	ldr	x0, [sp, #144]
    c314:	cbz	x0, c330 <__sanitizer_get_allocated_size@@Base+0x3180>
    c318:	ldr	x1, [x23, #168]
    c31c:	ldr	x2, [sp, #152]
    c320:	add	x0, x1, x0
    c324:	ldr	x1, [x23, #152]
    c328:	stp	x1, x0, [x23, #160]
    c32c:	str	x2, [x23, #184]
    c330:	bl	242a8 <__sanitizer_sandbox_on_notify@@Base+0xd20>
    c334:	str	x0, [x23, #176]
    c338:	mov	x0, x24
    c33c:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
    c340:	ldp	x21, x22, [sp, #16]
    c344:	ldp	x23, x24, [sp, #32]
    c348:	ldp	x25, x26, [sp, #48]
    c34c:	ldp	x27, x28, [sp, #64]
    c350:	ldr	x30, [sp, #80]
    c354:	ldp	x19, x20, [sp], #160
    c358:	ret
    c35c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    c360:	lsl	x19, x19, #5
    c364:	ldr	x21, [x21, #4016]
    c368:	ldr	x20, [x21]
    c36c:	cbnz	x20, c280 <__sanitizer_get_allocated_size@@Base+0x30d0>
    c370:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    c374:	mov	x20, x0
    c378:	str	x0, [x21]
    c37c:	b	c280 <__sanitizer_get_allocated_size@@Base+0x30d0>
    c380:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c384:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    c388:	mov	x3, x5
    c38c:	add	x2, x2, #0x178
    c390:	add	x0, x0, #0xd88
    c394:	mov	w1, #0x295                 	// #661
    c398:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    c39c:	neg	x0, x27, lsl #2
    c3a0:	mov	x1, x2
    c3a4:	sub	x0, x0, x21
    c3a8:	add	x21, x21, x6
    c3ac:	add	x20, x20, x0
    c3b0:	ldr	w0, [x20, x1]
    c3b4:	str	w0, [x1], #4
    c3b8:	cmp	x1, x21
    c3bc:	b.ne	c3b0 <__sanitizer_get_allocated_size@@Base+0x3200>  // b.any
    c3c0:	b	c224 <__sanitizer_get_allocated_size@@Base+0x3074>
    c3c4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    c3c8:	cmp	x19, #0x1f
    c3cc:	ldr	x0, [x0, #4024]
    c3d0:	ldr	x1, [x0]
    c3d4:	b.eq	c44c <__sanitizer_get_allocated_size@@Base+0x329c>  // b.none
    c3d8:	lsl	x3, x19, #5
    c3dc:	cmp	x19, #0x10
    c3e0:	b.ls	c400 <__sanitizer_get_allocated_size@@Base+0x3250>  // b.plast
    c3e4:	sub	x0, x19, #0x10
    c3e8:	mov	x3, #0x200                 	// #512
    c3ec:	and	x2, x0, #0x1
    c3f0:	lsr	x0, x0, #1
    c3f4:	lsl	x0, x3, x0
    c3f8:	lsr	x3, x0, #1
    c3fc:	madd	x3, x3, x2, x0
    c400:	mov	x2, x19
    c404:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c408:	add	x0, x0, #0x6e0
    c40c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    c410:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    c414:	mov	x19, #0x40                  	// #64
    c418:	b	c270 <__sanitizer_get_allocated_size@@Base+0x30c0>
    c41c:	mov	x4, x0
    c420:	mov	x3, x1
    c424:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c428:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    c42c:	add	x2, x2, #0x138
    c430:	add	x0, x0, #0xd88
    c434:	mov	w1, #0x281                 	// #641
    c438:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    c43c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    c440:	add	x0, x0, #0xb38
    c444:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    c448:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    c44c:	mov	x3, #0x40                  	// #64
    c450:	b	c400 <__sanitizer_get_allocated_size@@Base+0x3250>
    c454:	nop
    c458:	mov	x5, x1
    c45c:	mov	x1, x0
    c460:	mov	x0, x2
    c464:	mov	x2, x3
    c468:	ldr	w7, [x5]
    c46c:	mov	w3, w7
    c470:	cmp	x4, w7, uxtw
    c474:	b.hi	c494 <__sanitizer_get_allocated_size@@Base+0x32e4>  // b.pmore
    c478:	sub	x8, x3, x4
    c47c:	sub	w6, w7, w4
    c480:	add	x8, x8, #0x4
    c484:	str	w6, [x5]
    c488:	add	x1, x1, #0xa00
    c48c:	add	x3, x5, x8, lsl #2
    c490:	b	c0c0 <__sanitizer_get_allocated_size@@Base+0x2f10>
    c494:	str	x30, [sp, #-16]!
    c498:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c49c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c4a0:	add	x2, x2, #0x748
    c4a4:	add	x0, x0, #0x2e0
    c4a8:	mov	w1, #0x6f                  	// #111
    c4ac:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    c4b0:	cmp	x1, x0
    c4b4:	b.eq	c4f0 <__sanitizer_get_allocated_size@@Base+0x3340>  // b.none
    c4b8:	stp	x19, x20, [sp, #-32]!
    c4bc:	str	x30, [sp, #16]
    c4c0:	b.cc	c4f4 <__sanitizer_get_allocated_size@@Base+0x3344>  // b.lo, b.ul, b.last
    c4c4:	sub	x19, x1, x0
    c4c8:	mov	x20, x0
    c4cc:	mov	x1, x19
    c4d0:	bl	1c0f8 <__sanitizer_set_report_fd@@Base+0x4338>
    c4d4:	mov	x1, #0x0                   	// #0
    c4d8:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
    c4dc:	tst	w0, #0xff
    c4e0:	b.ne	c514 <__sanitizer_get_allocated_size@@Base+0x3364>  // b.any
    c4e4:	ldr	x30, [sp, #16]
    c4e8:	ldp	x19, x20, [sp], #32
    c4ec:	ret
    c4f0:	ret
    c4f4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c4f8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c4fc:	add	x2, x2, #0x780
    c500:	add	x0, x0, #0x798
    c504:	mov	x4, #0x0                   	// #0
    c508:	mov	x3, #0x0                   	// #0
    c50c:	mov	w1, #0x20                  	// #32
    c510:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    c514:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    c518:	mov	x4, x20
    c51c:	mov	x3, x19
    c520:	mov	x2, x19
    c524:	ldr	x1, [x1, #4024]
    c528:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c52c:	add	x0, x0, #0x7e8
    c530:	ldr	x1, [x1]
    c534:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    c538:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c53c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c540:	add	x2, x2, #0x828
    c544:	add	x0, x0, #0x798
    c548:	mov	x4, #0x0                   	// #0
    c54c:	mov	x3, #0x0                   	// #0
    c550:	mov	w1, #0x25                  	// #37
    c554:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    c558:	ret
    c55c:	nop
    c560:	stp	x19, x20, [sp, #-48]!
    c564:	mov	x19, x0
    c568:	stp	x21, x22, [sp, #16]
    c56c:	mov	x21, #0x100000000           	// #4294967296
    c570:	stp	x23, x30, [sp, #32]
    c574:	bl	1da08 <__sanitizer_set_report_fd@@Base+0x5c48>
    c578:	cmp	x21, x0, lsl #4
    c57c:	b.cc	c5ec <__sanitizer_get_allocated_size@@Base+0x343c>  // b.lo, b.ul, b.last
    c580:	sub	x1, x0, #0x1
    c584:	tst	x1, x0
    c588:	b.ne	c60c <__sanitizer_get_allocated_size@@Base+0x345c>  // b.any
    c58c:	sub	x19, x19, #0x1
    c590:	neg	x1, x0
    c594:	add	x19, x19, x0
    c598:	mov	x23, #0x200000000           	// #8589934592
    c59c:	and	x19, x19, x1
    c5a0:	add	x23, x19, x23
    c5a4:	mov	x0, x23
    c5a8:	bl	24f68 <__sanitizer_sandbox_on_notify@@Base+0x19e0>
    c5ac:	mov	x22, x0
    c5b0:	cmn	x0, #0x1
    c5b4:	b.eq	c61c <__sanitizer_get_allocated_size@@Base+0x346c>  // b.none
    c5b8:	mov	x20, #0x1ffffffff           	// #8589934591
    c5bc:	add	x20, x0, x20
    c5c0:	and	x20, x20, #0xffffffff00000000
    c5c4:	sub	x1, x20, x21
    c5c8:	bl	c4b0 <__sanitizer_get_allocated_size@@Base+0x3300>
    c5cc:	add	x1, x22, x23
    c5d0:	add	x0, x20, x19
    c5d4:	bl	c4b0 <__sanitizer_get_allocated_size@@Base+0x3300>
    c5d8:	mov	x0, x20
    c5dc:	ldp	x21, x22, [sp, #16]
    c5e0:	ldp	x23, x30, [sp, #32]
    c5e4:	ldp	x19, x20, [sp], #48
    c5e8:	ret
    c5ec:	lsl	x4, x0, #4
    c5f0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c5f4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c5f8:	mov	x3, x21
    c5fc:	add	x2, x2, #0x850
    c600:	add	x0, x0, #0x798
    c604:	mov	w1, #0x30                  	// #48
    c608:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    c60c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    c610:	add	x0, x0, #0xb38
    c614:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    c618:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    c61c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c620:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c624:	add	x2, x2, #0x878
    c628:	add	x0, x0, #0x798
    c62c:	mov	x4, x22
    c630:	mov	x3, x22
    c634:	mov	w1, #0x38                  	// #56
    c638:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    c63c:	nop

000000000000c640 <__hwasan_personality_wrapper@@Base>:
    c640:	stp	x19, x20, [sp, #-48]!
    c644:	and	w19, w1, #0x2
    c648:	mov	x20, x4
    c64c:	stp	x21, x22, [sp, #16]
    c650:	mov	x21, x6
    c654:	mov	x22, x7
    c658:	str	x30, [sp, #32]
    c65c:	cbz	x5, c680 <__hwasan_personality_wrapper@@Base+0x40>
    c660:	blr	x5
    c664:	cmp	w19, #0x0
    c668:	ccmp	w0, #0x8, #0x0, ne  // ne = any
    c66c:	b.eq	c688 <__hwasan_personality_wrapper@@Base+0x48>  // b.none
    c670:	ldp	x21, x22, [sp, #16]
    c674:	ldr	x30, [sp, #32]
    c678:	ldp	x19, x20, [sp], #48
    c67c:	ret
    c680:	mov	w0, #0x8                   	// #8
    c684:	cbz	w19, c670 <__hwasan_personality_wrapper@@Base+0x30>
    c688:	mov	w1, #0x1d                  	// #29
    c68c:	mov	x0, x20
    c690:	blr	x21
    c694:	mov	x19, x0
    c698:	mov	x0, x20
    c69c:	blr	x22
    c6a0:	mov	w2, #0x0                   	// #0
    c6a4:	sub	x1, x19, x0
    c6a8:	bl	ec40 <__hwasan_memmove@@Base+0x278>
    c6ac:	mov	w0, #0x8                   	// #8
    c6b0:	ldp	x21, x22, [sp, #16]
    c6b4:	ldr	x30, [sp, #32]
    c6b8:	ldp	x19, x20, [sp], #48
    c6bc:	ret
    c6c0:	stp	x19, x20, [sp, #-48]!
    c6c4:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    c6c8:	mov	x19, x0
    c6cc:	stp	x21, x22, [sp, #16]
    c6d0:	str	x30, [sp, #32]
    c6d4:	bl	df90 <__interceptor_vfork@@Base+0xa70>
    c6d8:	ldr	x20, [x20, #4016]
    c6dc:	ldp	x21, x22, [x19]
    c6e0:	ldr	x1, [x20]
    c6e4:	cbz	x1, c708 <__hwasan_personality_wrapper@@Base+0xc8>
    c6e8:	mov	x0, x19
    c6ec:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    c6f0:	mov	x0, x22
    c6f4:	mov	x16, x21
    c6f8:	ldp	x21, x22, [sp, #16]
    c6fc:	ldr	x30, [sp, #32]
    c700:	ldp	x19, x20, [sp], #48
    c704:	br	x16
    c708:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    c70c:	mov	x1, x0
    c710:	str	x0, [x20]
    c714:	mov	x0, x19
    c718:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    c71c:	mov	x0, x22
    c720:	mov	x16, x21
    c724:	ldp	x21, x22, [sp, #16]
    c728:	ldr	x30, [sp, #32]
    c72c:	ldp	x19, x20, [sp], #48
    c730:	br	x16
    c734:	nop

000000000000c738 <__interceptor_pthread_create@@Base>:
    c738:	stp	x19, x20, [sp, #-48]!
    c73c:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    c740:	mov	x20, x0
    c744:	stp	x21, x22, [sp, #16]
    c748:	mov	x22, x2
    c74c:	mov	x21, x3
    c750:	stp	x23, x30, [sp, #32]
    c754:	mov	x23, x1
    c758:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    c75c:	ldr	x19, [x19, #4016]
    c760:	mov	x4, x0
    c764:	ldr	w1, [x0, #2680]
    c768:	ldr	x0, [x19]
    c76c:	add	w1, w1, #0x1
    c770:	str	w1, [x4, #2680]
    c774:	cbz	x0, c7d8 <__interceptor_pthread_create@@Base+0xa0>
    c778:	mov	w2, #0x0                   	// #0
    c77c:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c780:	add	x1, x1, #0x898
    c784:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
    c788:	adrp	x2, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    c78c:	mov	x3, x0
    c790:	and	x1, x23, #0xffffffffffffff
    c794:	and	x0, x20, #0xffffffffffffff
    c798:	ldr	x4, [x2, #2624]
    c79c:	adrp	x2, c000 <__sanitizer_get_allocated_size@@Base+0x2e50>
    c7a0:	add	x2, x2, #0x6c0
    c7a4:	stp	x22, x21, [x3]
    c7a8:	blr	x4
    c7ac:	mov	w19, w0
    c7b0:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    c7b4:	mov	x1, x0
    c7b8:	ldp	x21, x22, [sp, #16]
    c7bc:	mov	w0, w19
    c7c0:	ldr	w2, [x1, #2680]
    c7c4:	ldp	x23, x30, [sp, #32]
    c7c8:	sub	w2, w2, #0x1
    c7cc:	str	w2, [x1, #2680]
    c7d0:	ldp	x19, x20, [sp], #48
    c7d4:	ret
    c7d8:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    c7dc:	str	x0, [x19]
    c7e0:	b	c778 <__interceptor_pthread_create@@Base+0x40>
    c7e4:	nop

000000000000c7e8 <__interceptor_fork@@Base>:
    c7e8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    c7ec:	stp	x19, x30, [sp, #-16]!
    c7f0:	ldr	x0, [x0, #3824]
    c7f4:	ldrb	w0, [x0]
    c7f8:	cbnz	w0, c838 <__interceptor_fork@@Base+0x50>
    c7fc:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    c800:	ldr	x0, [x0, #3904]
    c804:	ldr	w0, [x0]
    c808:	cbz	w0, c830 <__interceptor_fork@@Base+0x48>
    c80c:	bl	27158 <__sanitizer_cov_dump@@Base+0x5f8>
    c810:	adrp	x0, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    c814:	ldr	x0, [x0, #2632]
    c818:	blr	x0
    c81c:	mov	w19, w0
    c820:	bl	271e8 <__sanitizer_cov_dump@@Base+0x688>
    c824:	mov	w0, w19
    c828:	ldp	x19, x30, [sp], #16
    c82c:	ret
    c830:	bl	64e0 <__hwasan_init@plt>
    c834:	b	c80c <__interceptor_fork@@Base+0x24>
    c838:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    c83c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c840:	add	x2, x2, #0x940
    c844:	add	x0, x0, #0x8a8
    c848:	mov	x4, #0x0                   	// #0
    c84c:	mov	x3, #0x0                   	// #0
    c850:	mov	w1, #0x13c                 	// #316
    c854:	bl	23090 <__sanitizer_on_print@@Base+0x3830>

000000000000c858 <__interceptor_posix_memalign@@Base>:
    c858:	sub	sp, sp, #0x850
    c85c:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    c860:	stp	x29, x30, [sp]
    c864:	mov	x29, sp
    c868:	ldr	x3, [x3, #3904]
    c86c:	stp	x21, x22, [sp, #32]
    c870:	add	x22, x29, #0x38
    c874:	add	x4, x22, #0x10
    c878:	stp	x19, x20, [sp, #16]
    c87c:	ldr	w3, [x3]
    c880:	str	x4, [x29, #56]
    c884:	mov	x19, x0
    c888:	str	xzr, [x29, #64]
    c88c:	mov	x20, x1
    c890:	str	xzr, [x29, #2120]
    c894:	mov	x21, x2
    c898:	cbnz	w3, c8c8 <__interceptor_posix_memalign@@Base+0x70>
    c89c:	cbz	x19, c908 <__interceptor_posix_memalign@@Base+0xb0>
    c8a0:	mov	x3, x22
    c8a4:	mov	x2, x21
    c8a8:	mov	x1, x20
    c8ac:	mov	x0, x19
    c8b0:	bl	9d98 <__sanitizer_get_allocated_size@@Base+0xbe8>
    c8b4:	ldp	x29, x30, [sp]
    c8b8:	ldp	x19, x20, [sp, #16]
    c8bc:	ldp	x21, x22, [sp, #32]
    c8c0:	add	sp, sp, #0x850
    c8c4:	ret
    c8c8:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
    c8cc:	mov	x1, x0
    c8d0:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    c8d4:	ldr	x2, [x2, #4056]
    c8d8:	ldr	w5, [x2, #36]
    c8dc:	cbz	w5, c928 <__interceptor_posix_memalign@@Base+0xd0>
    c8e0:	str	x29, [x29, #2120]
    c8e4:	cmp	w5, #0x1
    c8e8:	ldrb	w4, [x2, #34]
    c8ec:	b.eq	c934 <__interceptor_posix_memalign@@Base+0xdc>  // b.none
    c8f0:	mov	x2, x29
    c8f4:	mov	x0, x22
    c8f8:	mov	x3, #0x0                   	// #0
    c8fc:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    c900:	cbnz	x19, c8a0 <__interceptor_posix_memalign@@Base+0x48>
    c904:	nop
    c908:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c90c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    c910:	add	x2, x2, #0x8f8
    c914:	add	x0, x0, #0x8a8
    c918:	mov	x4, #0x0                   	// #0
    c91c:	mov	x3, #0x0                   	// #0
    c920:	mov	w1, #0x4a                  	// #74
    c924:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    c928:	str	w5, [x29, #64]
    c92c:	str	xzr, [x29, #2120]
    c930:	b	c89c <__interceptor_posix_memalign@@Base+0x44>
    c934:	str	w5, [x29, #64]
    c938:	str	x0, [x29, #72]
    c93c:	b	c89c <__interceptor_posix_memalign@@Base+0x44>

000000000000c940 <__interceptor_memalign@@Base>:
    c940:	sub	sp, sp, #0x850
    c944:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    c948:	stp	x29, x30, [sp]
    c94c:	mov	x29, sp
    c950:	ldr	x2, [x2, #3904]
    c954:	stp	x19, x20, [sp, #16]
    c958:	mov	x19, x0
    c95c:	str	xzr, [x29, #64]
    c960:	mov	x20, x1
    c964:	ldr	w0, [x2]
    c968:	str	x21, [sp, #32]
    c96c:	add	x21, x29, #0x38
    c970:	add	x3, x21, #0x10
    c974:	str	x3, [x29, #56]
    c978:	str	xzr, [x29, #2120]
    c97c:	cbnz	w0, c9a4 <__interceptor_memalign@@Base+0x64>
    c980:	mov	x2, x21
    c984:	mov	x1, x20
    c988:	mov	x0, x19
    c98c:	bl	9b10 <__sanitizer_get_allocated_size@@Base+0x960>
    c990:	ldp	x29, x30, [sp]
    c994:	ldp	x19, x20, [sp, #16]
    c998:	ldr	x21, [sp, #32]
    c99c:	add	sp, sp, #0x850
    c9a0:	ret
    c9a4:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
    c9a8:	mov	x1, x0
    c9ac:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    c9b0:	ldr	x2, [x2, #4056]
    c9b4:	ldr	w5, [x2, #36]
    c9b8:	cbz	w5, c9e0 <__interceptor_memalign@@Base+0xa0>
    c9bc:	str	x29, [x29, #2120]
    c9c0:	cmp	w5, #0x1
    c9c4:	ldrb	w4, [x2, #34]
    c9c8:	b.eq	c9ec <__interceptor_memalign@@Base+0xac>  // b.none
    c9cc:	mov	x2, x29
    c9d0:	mov	x0, x21
    c9d4:	mov	x3, #0x0                   	// #0
    c9d8:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    c9dc:	b	c980 <__interceptor_memalign@@Base+0x40>
    c9e0:	str	w5, [x29, #64]
    c9e4:	str	xzr, [x29, #2120]
    c9e8:	b	c980 <__interceptor_memalign@@Base+0x40>
    c9ec:	str	w5, [x29, #64]
    c9f0:	str	x0, [x29, #72]
    c9f4:	b	c980 <__interceptor_memalign@@Base+0x40>

000000000000c9f8 <__interceptor_aligned_alloc@@Base>:
    c9f8:	sub	sp, sp, #0x850
    c9fc:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    ca00:	stp	x29, x30, [sp]
    ca04:	mov	x29, sp
    ca08:	ldr	x2, [x2, #3904]
    ca0c:	stp	x19, x20, [sp, #16]
    ca10:	mov	x19, x0
    ca14:	str	xzr, [x29, #64]
    ca18:	mov	x20, x1
    ca1c:	ldr	w0, [x2]
    ca20:	str	x21, [sp, #32]
    ca24:	add	x21, x29, #0x38
    ca28:	add	x3, x21, #0x10
    ca2c:	str	x3, [x29, #56]
    ca30:	str	xzr, [x29, #2120]
    ca34:	cbnz	w0, ca5c <__interceptor_aligned_alloc@@Base+0x64>
    ca38:	mov	x2, x21
    ca3c:	mov	x1, x20
    ca40:	mov	x0, x19
    ca44:	bl	9bc8 <__sanitizer_get_allocated_size@@Base+0xa18>
    ca48:	ldp	x29, x30, [sp]
    ca4c:	ldp	x19, x20, [sp, #16]
    ca50:	ldr	x21, [sp, #32]
    ca54:	add	sp, sp, #0x850
    ca58:	ret
    ca5c:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
    ca60:	mov	x1, x0
    ca64:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    ca68:	ldr	x2, [x2, #4056]
    ca6c:	ldr	w5, [x2, #36]
    ca70:	cbz	w5, ca98 <__interceptor_aligned_alloc@@Base+0xa0>
    ca74:	str	x29, [x29, #2120]
    ca78:	cmp	w5, #0x1
    ca7c:	ldrb	w4, [x2, #34]
    ca80:	b.eq	caa4 <__interceptor_aligned_alloc@@Base+0xac>  // b.none
    ca84:	mov	x2, x29
    ca88:	mov	x0, x21
    ca8c:	mov	x3, #0x0                   	// #0
    ca90:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    ca94:	b	ca38 <__interceptor_aligned_alloc@@Base+0x40>
    ca98:	str	w5, [x29, #64]
    ca9c:	str	xzr, [x29, #2120]
    caa0:	b	ca38 <__interceptor_aligned_alloc@@Base+0x40>
    caa4:	str	w5, [x29, #64]
    caa8:	str	x0, [x29, #72]
    caac:	b	ca38 <__interceptor_aligned_alloc@@Base+0x40>

000000000000cab0 <__interceptor___libc_memalign@@Base>:
    cab0:	sub	sp, sp, #0x850
    cab4:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    cab8:	stp	x29, x30, [sp]
    cabc:	mov	x29, sp
    cac0:	ldr	x2, [x2, #3904]
    cac4:	stp	x19, x20, [sp, #16]
    cac8:	mov	x19, x0
    cacc:	str	xzr, [x29, #64]
    cad0:	mov	x20, x1
    cad4:	ldr	w0, [x2]
    cad8:	str	x21, [sp, #32]
    cadc:	add	x21, x29, #0x38
    cae0:	add	x3, x21, #0x10
    cae4:	str	x3, [x29, #56]
    cae8:	str	xzr, [x29, #2120]
    caec:	cbnz	w0, cb28 <__interceptor___libc_memalign@@Base+0x78>
    caf0:	mov	x0, x19
    caf4:	mov	x2, x21
    caf8:	mov	x1, x20
    cafc:	bl	9b10 <__sanitizer_get_allocated_size@@Base+0x960>
    cb00:	mov	x19, x0
    cb04:	cbz	x0, cb10 <__interceptor___libc_memalign@@Base+0x60>
    cb08:	mov	x1, x20
    cb0c:	bl	21ae8 <__sanitizer_on_print@@Base+0x2288>
    cb10:	mov	x0, x19
    cb14:	ldp	x29, x30, [sp]
    cb18:	ldp	x19, x20, [sp, #16]
    cb1c:	ldr	x21, [sp, #32]
    cb20:	add	sp, sp, #0x850
    cb24:	ret
    cb28:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
    cb2c:	mov	x1, x0
    cb30:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    cb34:	ldr	x2, [x2, #4056]
    cb38:	ldr	w5, [x2, #36]
    cb3c:	cbz	w5, cb64 <__interceptor___libc_memalign@@Base+0xb4>
    cb40:	str	x29, [x29, #2120]
    cb44:	cmp	w5, #0x1
    cb48:	ldrb	w4, [x2, #34]
    cb4c:	b.eq	cb70 <__interceptor___libc_memalign@@Base+0xc0>  // b.none
    cb50:	mov	x2, x29
    cb54:	mov	x0, x21
    cb58:	mov	x3, #0x0                   	// #0
    cb5c:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    cb60:	b	caf0 <__interceptor___libc_memalign@@Base+0x40>
    cb64:	str	w5, [x29, #64]
    cb68:	str	xzr, [x29, #2120]
    cb6c:	b	caf0 <__interceptor___libc_memalign@@Base+0x40>
    cb70:	str	w5, [x29, #64]
    cb74:	str	x0, [x29, #72]
    cb78:	b	caf0 <__interceptor___libc_memalign@@Base+0x40>
    cb7c:	nop

000000000000cb80 <__interceptor_valloc@@Base>:
    cb80:	sub	sp, sp, #0x840
    cb84:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    cb88:	stp	x29, x30, [sp]
    cb8c:	mov	x29, sp
    cb90:	ldr	x1, [x1, #3904]
    cb94:	stp	x19, x20, [sp, #16]
    cb98:	mov	x19, x0
    cb9c:	add	x20, x29, #0x28
    cba0:	str	xzr, [x29, #48]
    cba4:	ldr	w0, [x1]
    cba8:	add	x2, x20, #0x10
    cbac:	str	x2, [x29, #40]
    cbb0:	str	xzr, [x29, #2104]
    cbb4:	cbnz	w0, cbd4 <__interceptor_valloc@@Base+0x54>
    cbb8:	mov	x1, x20
    cbbc:	mov	x0, x19
    cbc0:	bl	9a70 <__sanitizer_get_allocated_size@@Base+0x8c0>
    cbc4:	ldp	x29, x30, [sp]
    cbc8:	ldp	x19, x20, [sp, #16]
    cbcc:	add	sp, sp, #0x840
    cbd0:	ret
    cbd4:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
    cbd8:	mov	x1, x0
    cbdc:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    cbe0:	ldr	x2, [x2, #4056]
    cbe4:	ldr	w5, [x2, #36]
    cbe8:	cbz	w5, cc28 <__interceptor_valloc@@Base+0xa8>
    cbec:	str	x29, [x29, #2104]
    cbf0:	cmp	w5, #0x1
    cbf4:	ldrb	w4, [x2, #34]
    cbf8:	b.eq	cc4c <__interceptor_valloc@@Base+0xcc>  // b.none
    cbfc:	mov	x2, x29
    cc00:	mov	x3, #0x0                   	// #0
    cc04:	mov	x0, x20
    cc08:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    cc0c:	mov	x1, x20
    cc10:	mov	x0, x19
    cc14:	bl	9a70 <__sanitizer_get_allocated_size@@Base+0x8c0>
    cc18:	ldp	x29, x30, [sp]
    cc1c:	ldp	x19, x20, [sp, #16]
    cc20:	add	sp, sp, #0x840
    cc24:	ret
    cc28:	str	w5, [x29, #48]
    cc2c:	str	xzr, [x29, #2104]
    cc30:	mov	x1, x20
    cc34:	mov	x0, x19
    cc38:	bl	9a70 <__sanitizer_get_allocated_size@@Base+0x8c0>
    cc3c:	ldp	x29, x30, [sp]
    cc40:	ldp	x19, x20, [sp, #16]
    cc44:	add	sp, sp, #0x840
    cc48:	ret
    cc4c:	str	w5, [x29, #48]
    cc50:	str	x0, [x29, #56]
    cc54:	b	cc30 <__interceptor_valloc@@Base+0xb0>

000000000000cc58 <__interceptor_pvalloc@@Base>:
    cc58:	sub	sp, sp, #0x840
    cc5c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    cc60:	stp	x29, x30, [sp]
    cc64:	mov	x29, sp
    cc68:	ldr	x1, [x1, #3904]
    cc6c:	stp	x19, x20, [sp, #16]
    cc70:	mov	x19, x0
    cc74:	add	x20, x29, #0x28
    cc78:	str	xzr, [x29, #48]
    cc7c:	ldr	w0, [x1]
    cc80:	add	x2, x20, #0x10
    cc84:	str	x2, [x29, #40]
    cc88:	str	xzr, [x29, #2104]
    cc8c:	cbnz	w0, ccac <__interceptor_pvalloc@@Base+0x54>
    cc90:	mov	x1, x20
    cc94:	mov	x0, x19
    cc98:	bl	9c98 <__sanitizer_get_allocated_size@@Base+0xae8>
    cc9c:	ldp	x29, x30, [sp]
    cca0:	ldp	x19, x20, [sp, #16]
    cca4:	add	sp, sp, #0x840
    cca8:	ret
    ccac:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
    ccb0:	mov	x1, x0
    ccb4:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    ccb8:	ldr	x2, [x2, #4056]
    ccbc:	ldr	w5, [x2, #36]
    ccc0:	cbz	w5, cd00 <__interceptor_pvalloc@@Base+0xa8>
    ccc4:	str	x29, [x29, #2104]
    ccc8:	cmp	w5, #0x1
    cccc:	ldrb	w4, [x2, #34]
    ccd0:	b.eq	cd24 <__interceptor_pvalloc@@Base+0xcc>  // b.none
    ccd4:	mov	x2, x29
    ccd8:	mov	x3, #0x0                   	// #0
    ccdc:	mov	x0, x20
    cce0:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    cce4:	mov	x1, x20
    cce8:	mov	x0, x19
    ccec:	bl	9c98 <__sanitizer_get_allocated_size@@Base+0xae8>
    ccf0:	ldp	x29, x30, [sp]
    ccf4:	ldp	x19, x20, [sp, #16]
    ccf8:	add	sp, sp, #0x840
    ccfc:	ret
    cd00:	str	w5, [x29, #48]
    cd04:	str	xzr, [x29, #2104]
    cd08:	mov	x1, x20
    cd0c:	mov	x0, x19
    cd10:	bl	9c98 <__sanitizer_get_allocated_size@@Base+0xae8>
    cd14:	ldp	x29, x30, [sp]
    cd18:	ldp	x19, x20, [sp, #16]
    cd1c:	add	sp, sp, #0x840
    cd20:	ret
    cd24:	str	w5, [x29, #48]
    cd28:	str	x0, [x29, #56]
    cd2c:	b	cd08 <__interceptor_pvalloc@@Base+0xb0>

000000000000cd30 <__interceptor_free@@Base>:
    cd30:	sub	sp, sp, #0x840
    cd34:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    cd38:	stp	x29, x30, [sp]
    cd3c:	mov	x29, sp
    cd40:	ldr	x1, [x1, #3904]
    cd44:	stp	x19, x20, [sp, #16]
    cd48:	mov	x19, x0
    cd4c:	add	x20, x29, #0x28
    cd50:	str	xzr, [x29, #48]
    cd54:	ldr	w0, [x1]
    cd58:	add	x2, x20, #0x10
    cd5c:	str	x2, [x29, #40]
    cd60:	str	xzr, [x29, #2104]
    cd64:	cbnz	w0, cda0 <__interceptor_free@@Base+0x70>
    cd68:	cbz	x19, cd90 <__interceptor_free@@Base+0x60>
    cd6c:	adrp	x0, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    cd70:	add	x0, x0, #0xa80
    cd74:	sub	x0, x19, x0
    cd78:	mov	x1, #0x1fff                	// #8191
    cd7c:	cmp	x0, x1
    cd80:	b.ls	cd90 <__interceptor_free@@Base+0x60>  // b.plast
    cd84:	mov	x1, x20
    cd88:	mov	x0, x19
    cd8c:	bl	a8e0 <__sanitizer_get_allocated_size@@Base+0x1730>
    cd90:	ldp	x29, x30, [sp]
    cd94:	ldp	x19, x20, [sp, #16]
    cd98:	add	sp, sp, #0x840
    cd9c:	ret
    cda0:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
    cda4:	mov	x1, x0
    cda8:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    cdac:	ldr	x2, [x2, #4056]
    cdb0:	ldr	w5, [x2, #36]
    cdb4:	cbz	w5, cddc <__interceptor_free@@Base+0xac>
    cdb8:	str	x29, [x29, #2104]
    cdbc:	cmp	w5, #0x1
    cdc0:	ldrb	w4, [x2, #34]
    cdc4:	b.eq	cde8 <__interceptor_free@@Base+0xb8>  // b.none
    cdc8:	mov	x2, x29
    cdcc:	mov	x0, x20
    cdd0:	mov	x3, #0x0                   	// #0
    cdd4:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    cdd8:	b	cd68 <__interceptor_free@@Base+0x38>
    cddc:	str	w5, [x29, #48]
    cde0:	str	xzr, [x29, #2104]
    cde4:	b	cd68 <__interceptor_free@@Base+0x38>
    cde8:	str	w5, [x29, #48]
    cdec:	str	x0, [x29, #56]
    cdf0:	b	cd68 <__interceptor_free@@Base+0x38>
    cdf4:	nop

000000000000cdf8 <__interceptor_cfree@@Base>:
    cdf8:	b	cd30 <__interceptor_free@@Base>
    cdfc:	nop

000000000000ce00 <__interceptor_malloc_usable_size@@Base>:
    ce00:	b	63d0 <__sanitizer_get_allocated_size@plt>
    ce04:	nop

000000000000ce08 <__interceptor_mallinfo@@Base>:
    ce08:	str	x30, [sp, #-16]!
    ce0c:	mov	x0, x8
    ce10:	mov	x2, #0x28                  	// #40
    ce14:	mov	w1, #0x0                   	// #0
    ce18:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    ce1c:	ldr	x30, [sp], #16
    ce20:	ret
    ce24:	nop

000000000000ce28 <__interceptor_mallopt@@Base>:
    ce28:	mov	w0, #0x0                   	// #0
    ce2c:	ret

000000000000ce30 <__interceptor_malloc_stats@@Base>:
    ce30:	ret
    ce34:	nop

000000000000ce38 <__interceptor_calloc@@Base>:
    ce38:	sub	sp, sp, #0x850
    ce3c:	stp	x29, x30, [sp]
    ce40:	mov	x29, sp
    ce44:	stp	x19, x20, [sp, #16]
    ce48:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    ce4c:	mov	x19, x0
    ce50:	stp	x21, x22, [sp, #32]
    ce54:	add	x22, x29, #0x38
    ce58:	add	x2, x22, #0x10
    ce5c:	str	x2, [x29, #56]
    ce60:	mov	x21, x1
    ce64:	ldr	x2, [x20, #3904]
    ce68:	str	xzr, [x29, #64]
    ce6c:	str	xzr, [x29, #2120]
    ce70:	ldr	w0, [x2]
    ce74:	cbnz	w0, cebc <__interceptor_calloc@@Base+0x84>
    ce78:	adrp	x1, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    ce7c:	add	x1, x1, #0xa40
    ce80:	adrp	x0, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    ce84:	mul	x3, x19, x21
    ce88:	add	x2, x0, #0xa80
    ce8c:	ldr	x0, [x1, #16]
    ce90:	add	x3, x3, #0x7
    ce94:	add	x3, x0, x3, lsr #3
    ce98:	str	x3, [x1, #16]
    ce9c:	cmp	x3, #0x3ff
    cea0:	add	x0, x2, x0, lsl #3
    cea4:	b.hi	cf3c <__interceptor_calloc@@Base+0x104>  // b.pmore
    cea8:	ldp	x29, x30, [sp]
    ceac:	ldp	x19, x20, [sp, #16]
    ceb0:	ldp	x21, x22, [sp, #32]
    ceb4:	add	sp, sp, #0x850
    ceb8:	ret
    cebc:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
    cec0:	mov	x1, x0
    cec4:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    cec8:	ldr	x2, [x2, #4056]
    cecc:	ldr	w5, [x2, #36]
    ced0:	cbz	w5, cf24 <__interceptor_calloc@@Base+0xec>
    ced4:	str	x29, [x29, #2120]
    ced8:	cmp	w5, #0x1
    cedc:	ldrb	w4, [x2, #34]
    cee0:	b.eq	cf30 <__interceptor_calloc@@Base+0xf8>  // b.none
    cee4:	mov	x2, x29
    cee8:	mov	x0, x22
    ceec:	mov	x3, #0x0                   	// #0
    cef0:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    cef4:	ldr	x20, [x20, #3904]
    cef8:	ldr	w0, [x20]
    cefc:	cbz	w0, ce78 <__interceptor_calloc@@Base+0x40>
    cf00:	mov	x2, x22
    cf04:	mov	x1, x21
    cf08:	mov	x0, x19
    cf0c:	bl	99b8 <__sanitizer_get_allocated_size@@Base+0x808>
    cf10:	ldp	x29, x30, [sp]
    cf14:	ldp	x19, x20, [sp, #16]
    cf18:	ldp	x21, x22, [sp, #32]
    cf1c:	add	sp, sp, #0x850
    cf20:	ret
    cf24:	str	w5, [x29, #64]
    cf28:	str	xzr, [x29, #2120]
    cf2c:	b	cef4 <__interceptor_calloc@@Base+0xbc>
    cf30:	str	w5, [x29, #64]
    cf34:	str	x0, [x29, #72]
    cf38:	b	cef4 <__interceptor_calloc@@Base+0xbc>
    cf3c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    cf40:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    cf44:	add	x2, x2, #0x910
    cf48:	add	x0, x0, #0x8a8
    cf4c:	mov	x4, #0x400                 	// #1024
    cf50:	mov	w1, #0x3c                  	// #60
    cf54:	bl	23090 <__sanitizer_on_print@@Base+0x3830>

000000000000cf58 <__interceptor_realloc@@Base>:
    cf58:	sub	sp, sp, #0x870
    cf5c:	stp	x29, x30, [sp]
    cf60:	mov	x29, sp
    cf64:	stp	x21, x22, [sp, #32]
    cf68:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    cf6c:	add	x21, x29, #0x58
    cf70:	ldr	x2, [x22, #3904]
    cf74:	stp	x19, x20, [sp, #16]
    cf78:	mov	x19, x0
    cf7c:	add	x3, x21, #0x10
    cf80:	stp	x23, x24, [sp, #48]
    cf84:	ldr	w0, [x2]
    cf88:	str	x25, [sp, #64]
    cf8c:	adrp	x24, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    cf90:	str	x3, [x29, #88]
    cf94:	add	x23, x24, #0xa80
    cf98:	str	xzr, [x29, #96]
    cf9c:	mov	x20, x1
    cfa0:	str	xzr, [x29, #2152]
    cfa4:	sub	x25, x19, x23
    cfa8:	cbnz	w0, cfec <__interceptor_realloc@@Base+0x94>
    cfac:	mov	x0, #0x1fff                	// #8191
    cfb0:	cmp	x25, x0
    cfb4:	b.ls	d078 <__interceptor_realloc@@Base+0x120>  // b.plast
    cfb8:	mov	x2, x21
    cfbc:	mov	x1, x20
    cfc0:	mov	x0, x19
    cfc4:	bl	a8f0 <__sanitizer_get_allocated_size@@Base+0x1740>
    cfc8:	mov	x21, x0
    cfcc:	mov	x0, x21
    cfd0:	ldp	x29, x30, [sp]
    cfd4:	ldp	x19, x20, [sp, #16]
    cfd8:	ldp	x21, x22, [sp, #32]
    cfdc:	ldp	x23, x24, [sp, #48]
    cfe0:	ldr	x25, [sp, #64]
    cfe4:	add	sp, sp, #0x870
    cfe8:	ret
    cfec:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
    cff0:	mov	x1, x0
    cff4:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    cff8:	ldr	x2, [x2, #4056]
    cffc:	ldr	w5, [x2, #36]
    d000:	cbz	w5, d060 <__interceptor_realloc@@Base+0x108>
    d004:	str	x29, [x29, #2152]
    d008:	cmp	w5, #0x1
    d00c:	ldrb	w4, [x2, #34]
    d010:	b.eq	d06c <__interceptor_realloc@@Base+0x114>  // b.none
    d014:	mov	x2, x29
    d018:	mov	x0, x21
    d01c:	mov	x3, #0x0                   	// #0
    d020:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    d024:	mov	x0, #0x1fff                	// #8191
    d028:	cmp	x25, x0
    d02c:	b.hi	cfb8 <__interceptor_realloc@@Base+0x60>  // b.pmore
    d030:	ldr	x22, [x22, #3904]
    d034:	ldr	w0, [x22]
    d038:	cbz	w0, d078 <__interceptor_realloc@@Base+0x120>
    d03c:	mov	x1, x21
    d040:	mov	x0, x20
    d044:	bl	9938 <__sanitizer_get_allocated_size@@Base+0x788>
    d048:	mov	x21, x0
    d04c:	mov	x2, x20
    d050:	mov	x1, x19
    d054:	mov	x0, x21
    d058:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    d05c:	b	cfcc <__interceptor_realloc@@Base+0x74>
    d060:	str	w5, [x29, #96]
    d064:	str	xzr, [x29, #2152]
    d068:	b	d024 <__interceptor_realloc@@Base+0xcc>
    d06c:	str	w5, [x29, #96]
    d070:	str	x0, [x29, #104]
    d074:	b	d024 <__interceptor_realloc@@Base+0xcc>
    d078:	add	x0, x23, #0x400
    d07c:	add	x24, x24, #0xa80
    d080:	sub	x0, x0, x19
    d084:	cmp	x20, x0
    d088:	csel	x20, x20, x0, ls  // ls = plast
    d08c:	adrp	x0, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    d090:	add	x0, x0, #0xa40
    d094:	add	x3, x20, #0x7
    d098:	ldr	x21, [x0, #16]
    d09c:	add	x3, x21, x3, lsr #3
    d0a0:	str	x3, [x0, #16]
    d0a4:	add	x21, x24, x21, lsl #3
    d0a8:	cmp	x3, #0x3ff
    d0ac:	b.ls	d04c <__interceptor_realloc@@Base+0xf4>  // b.plast
    d0b0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d0b4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d0b8:	add	x2, x2, #0x910
    d0bc:	add	x0, x0, #0x8a8
    d0c0:	mov	x4, #0x400                 	// #1024
    d0c4:	mov	w1, #0x3c                  	// #60
    d0c8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    d0cc:	nop

000000000000d0d0 <__interceptor_reallocarray@@Base>:
    d0d0:	sub	sp, sp, #0x850
    d0d4:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d0d8:	stp	x29, x30, [sp]
    d0dc:	mov	x29, sp
    d0e0:	ldr	x3, [x3, #3904]
    d0e4:	stp	x21, x22, [sp, #32]
    d0e8:	add	x22, x29, #0x38
    d0ec:	add	x4, x22, #0x10
    d0f0:	stp	x19, x20, [sp, #16]
    d0f4:	ldr	w3, [x3]
    d0f8:	str	x4, [x29, #56]
    d0fc:	mov	x19, x0
    d100:	str	xzr, [x29, #64]
    d104:	mov	x20, x1
    d108:	str	xzr, [x29, #2120]
    d10c:	mov	x21, x2
    d110:	cbnz	w3, d13c <__interceptor_reallocarray@@Base+0x6c>
    d114:	mov	x3, x22
    d118:	mov	x2, x21
    d11c:	mov	x1, x20
    d120:	mov	x0, x19
    d124:	bl	ab68 <__sanitizer_get_allocated_size@@Base+0x19b8>
    d128:	ldp	x29, x30, [sp]
    d12c:	ldp	x19, x20, [sp, #16]
    d130:	ldp	x21, x22, [sp, #32]
    d134:	add	sp, sp, #0x850
    d138:	ret
    d13c:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
    d140:	mov	x1, x0
    d144:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d148:	ldr	x2, [x2, #4056]
    d14c:	ldr	w5, [x2, #36]
    d150:	cbz	w5, d178 <__interceptor_reallocarray@@Base+0xa8>
    d154:	str	x29, [x29, #2120]
    d158:	cmp	w5, #0x1
    d15c:	ldrb	w4, [x2, #34]
    d160:	b.eq	d184 <__interceptor_reallocarray@@Base+0xb4>  // b.none
    d164:	mov	x2, x29
    d168:	mov	x0, x22
    d16c:	mov	x3, #0x0                   	// #0
    d170:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    d174:	b	d114 <__interceptor_reallocarray@@Base+0x44>
    d178:	str	w5, [x29, #64]
    d17c:	str	xzr, [x29, #2120]
    d180:	b	d114 <__interceptor_reallocarray@@Base+0x44>
    d184:	str	w5, [x29, #64]
    d188:	str	x0, [x29, #72]
    d18c:	b	d114 <__interceptor_reallocarray@@Base+0x44>

000000000000d190 <__interceptor_malloc@@Base>:
    d190:	sub	sp, sp, #0x850
    d194:	stp	x29, x30, [sp]
    d198:	mov	x29, sp
    d19c:	stp	x19, x20, [sp, #16]
    d1a0:	add	x20, x29, #0x38
    d1a4:	add	x1, x20, #0x10
    d1a8:	str	x21, [sp, #32]
    d1ac:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d1b0:	str	x1, [x29, #56]
    d1b4:	mov	x19, x0
    d1b8:	ldr	x1, [x21, #3904]
    d1bc:	str	xzr, [x29, #64]
    d1c0:	str	xzr, [x29, #2120]
    d1c4:	ldr	w1, [x1]
    d1c8:	cbnz	w1, d20c <__interceptor_malloc@@Base+0x7c>
    d1cc:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d1d0:	ldr	x1, [x1, #3824]
    d1d4:	ldrb	w0, [x1]
    d1d8:	cbnz	w0, d270 <__interceptor_malloc@@Base+0xe0>
    d1dc:	bl	64e0 <__hwasan_init@plt>
    d1e0:	ldr	x21, [x21, #3904]
    d1e4:	ldr	w1, [x21]
    d1e8:	cbz	w1, d270 <__interceptor_malloc@@Base+0xe0>
    d1ec:	mov	x1, x20
    d1f0:	mov	x0, x19
    d1f4:	bl	9938 <__sanitizer_get_allocated_size@@Base+0x788>
    d1f8:	ldp	x29, x30, [sp]
    d1fc:	ldp	x19, x20, [sp, #16]
    d200:	ldr	x21, [sp, #32]
    d204:	add	sp, sp, #0x850
    d208:	ret
    d20c:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
    d210:	mov	x1, x0
    d214:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d218:	ldr	x2, [x2, #4056]
    d21c:	ldr	w5, [x2, #36]
    d220:	cbz	w5, d264 <__interceptor_malloc@@Base+0xd4>
    d224:	str	x29, [x29, #2120]
    d228:	cmp	w5, #0x1
    d22c:	ldrb	w4, [x2, #34]
    d230:	b.eq	d2b8 <__interceptor_malloc@@Base+0x128>  // b.none
    d234:	mov	x2, x29
    d238:	mov	x0, x20
    d23c:	mov	x3, #0x0                   	// #0
    d240:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    d244:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d248:	ldr	x1, [x21, #3904]
    d24c:	ldr	x0, [x0, #3824]
    d250:	ldr	w1, [x1]
    d254:	ldrb	w0, [x0]
    d258:	cbnz	w0, d1e8 <__interceptor_malloc@@Base+0x58>
    d25c:	cbnz	w1, d1ec <__interceptor_malloc@@Base+0x5c>
    d260:	b	d1dc <__interceptor_malloc@@Base+0x4c>
    d264:	str	w5, [x29, #64]
    d268:	str	xzr, [x29, #2120]
    d26c:	b	d244 <__interceptor_malloc@@Base+0xb4>
    d270:	adrp	x2, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    d274:	add	x2, x2, #0xa40
    d278:	add	x3, x19, #0x7
    d27c:	adrp	x0, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    d280:	add	x0, x0, #0xa80
    d284:	ldr	x1, [x2, #16]
    d288:	add	x3, x1, x3, lsr #3
    d28c:	str	x3, [x2, #16]
    d290:	cmp	x3, #0x3ff
    d294:	add	x0, x0, x1, lsl #3
    d298:	b.ls	d1f8 <__interceptor_malloc@@Base+0x68>  // b.plast
    d29c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d2a0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d2a4:	add	x2, x2, #0x910
    d2a8:	add	x0, x0, #0x8a8
    d2ac:	mov	x4, #0x400                 	// #1024
    d2b0:	mov	w1, #0x3c                  	// #60
    d2b4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    d2b8:	str	w5, [x29, #64]
    d2bc:	str	x0, [x29, #72]
    d2c0:	b	d244 <__interceptor_malloc@@Base+0xb4>
    d2c4:	nop
    d2c8:	stp	x19, x30, [sp, #-16]!
    d2cc:	mov	x19, x0
    d2d0:	cbnz	w1, d2e4 <__interceptor_malloc@@Base+0x154>
    d2d4:	str	w1, [x19, #176]
    d2d8:	mov	w0, #0x0                   	// #0
    d2dc:	ldp	x19, x30, [sp], #16
    d2e0:	ret
    d2e4:	add	x2, x0, #0xb8
    d2e8:	mov	x1, #0x0                   	// #0
    d2ec:	mov	w0, #0x0                   	// #0
    d2f0:	bl	62a0 <sigprocmask@plt>
    d2f4:	cmp	w0, #0x0
    d2f8:	mov	w0, #0x0                   	// #0
    d2fc:	cset	w1, eq  // eq = none
    d300:	str	w1, [x19, #176]
    d304:	ldp	x19, x30, [sp], #16
    d308:	ret
    d30c:	nop

000000000000d310 <__interceptor_siglongjmp@@Base>:
    d310:	stp	x19, x20, [sp, #-32]!
    d314:	mov	x19, x0
    d318:	mov	w20, w1
    d31c:	ldr	w0, [x0, #176]
    d320:	str	x30, [sp, #16]
    d324:	cbnz	w0, d384 <__interceptor_siglongjmp@@Base+0x74>
    d328:	ldr	x0, [x19, #104]
    d32c:	bl	6580 <__hwasan_handle_longjmp@plt>
    d330:	sxtw	x1, w20
    d334:	mov	x0, x19
    d338:	ldp	x19, x20, [x0]
    d33c:	ldp	x21, x22, [x0, #16]
    d340:	ldp	x23, x24, [x0, #32]
    d344:	ldp	x25, x26, [x0, #48]
    d348:	ldp	x27, x28, [x0, #64]
    d34c:	ldp	x29, x30, [x0, #80]
    d350:	ldp	d8, d9, [x0, #112]
    d354:	ldp	d10, d11, [x0, #128]
    d358:	ldp	d12, d13, [x0, #144]
    d35c:	ldp	d14, d15, [x0, #160]
    d360:	ldr	x5, [x0, #104]
    d364:	mov	sp, x5
    d368:	cmp	x1, #0x0
    d36c:	mov	x0, #0x1                   	// #1
    d370:	csel	x0, x1, x0, ne  // ne = any
    d374:	br	x30
    d378:	ldr	x30, [sp, #16]
    d37c:	ldp	x19, x20, [sp], #32
    d380:	ret
    d384:	add	x1, x19, #0xb8
    d388:	mov	x2, #0x0                   	// #0
    d38c:	mov	w0, #0x2                   	// #2
    d390:	bl	62a0 <sigprocmask@plt>
    d394:	b	d328 <__interceptor_siglongjmp@@Base+0x18>

000000000000d398 <__interceptor___libc_longjmp@@Base>:
    d398:	stp	x19, x20, [sp, #-32]!
    d39c:	mov	x19, x0
    d3a0:	mov	w20, w1
    d3a4:	ldr	x0, [x0, #104]
    d3a8:	str	x30, [sp, #16]
    d3ac:	bl	6580 <__hwasan_handle_longjmp@plt>
    d3b0:	sxtw	x1, w20
    d3b4:	mov	x0, x19
    d3b8:	ldp	x19, x20, [x0]
    d3bc:	ldp	x21, x22, [x0, #16]
    d3c0:	ldp	x23, x24, [x0, #32]
    d3c4:	ldp	x25, x26, [x0, #48]
    d3c8:	ldp	x27, x28, [x0, #64]
    d3cc:	ldp	x29, x30, [x0, #80]
    d3d0:	ldp	d8, d9, [x0, #112]
    d3d4:	ldp	d10, d11, [x0, #128]
    d3d8:	ldp	d12, d13, [x0, #144]
    d3dc:	ldp	d14, d15, [x0, #160]
    d3e0:	ldr	x5, [x0, #104]
    d3e4:	mov	sp, x5
    d3e8:	cmp	x1, #0x0
    d3ec:	mov	x0, #0x1                   	// #1
    d3f0:	csel	x0, x1, x0, ne  // ne = any
    d3f4:	br	x30
    d3f8:	ldr	x30, [sp, #16]
    d3fc:	ldp	x19, x20, [sp], #32
    d400:	ret
    d404:	nop

000000000000d408 <__interceptor_longjmp@@Base>:
    d408:	stp	x19, x20, [sp, #-32]!
    d40c:	mov	x19, x0
    d410:	mov	w20, w1
    d414:	ldr	x0, [x0, #104]
    d418:	str	x30, [sp, #16]
    d41c:	bl	6580 <__hwasan_handle_longjmp@plt>
    d420:	sxtw	x1, w20
    d424:	mov	x0, x19
    d428:	ldp	x19, x20, [x0]
    d42c:	ldp	x21, x22, [x0, #16]
    d430:	ldp	x23, x24, [x0, #32]
    d434:	ldp	x25, x26, [x0, #48]
    d438:	ldp	x27, x28, [x0, #64]
    d43c:	ldp	x29, x30, [x0, #80]
    d440:	ldp	d8, d9, [x0, #112]
    d444:	ldp	d10, d11, [x0, #128]
    d448:	ldp	d12, d13, [x0, #144]
    d44c:	ldp	d14, d15, [x0, #160]
    d450:	ldr	x5, [x0, #104]
    d454:	mov	sp, x5
    d458:	cmp	x1, #0x0
    d45c:	mov	x0, #0x1                   	// #1
    d460:	csel	x0, x1, x0, ne  // ne = any
    d464:	br	x30
    d468:	ldr	x30, [sp, #16]
    d46c:	ldp	x19, x20, [sp], #32
    d470:	ret
    d474:	nop
    d478:	mov	w0, #0x0                   	// #0
    d47c:	ret
    d480:	stp	x19, x30, [sp, #-16]!
    d484:	adrp	x19, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    d488:	add	x19, x19, #0xa40
    d48c:	ldrsw	x3, [x19, #24]
    d490:	cbnz	x3, d504 <__interceptor_longjmp@@Base+0xfc>
    d494:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d498:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d49c:	add	x1, x19, #0x8
    d4a0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d4a4:	ldr	x3, [x3, #3888]
    d4a8:	add	x0, x0, #0x960
    d4ac:	ldr	x2, [x2, #3656]
    d4b0:	bl	11cc8 <_ZdaPvRKSt9nothrow_t@@Base+0x8>
    d4b4:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d4b8:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d4bc:	add	x1, x19, #0x20
    d4c0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d4c4:	ldr	x3, [x3, #3832]
    d4c8:	add	x0, x0, #0x968
    d4cc:	ldr	x2, [x2, #3984]
    d4d0:	bl	11cc8 <_ZdaPvRKSt9nothrow_t@@Base+0x8>
    d4d4:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d4d8:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d4dc:	mov	x1, x19
    d4e0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d4e4:	ldr	x3, [x3, #3712]
    d4e8:	add	x0, x0, #0x898
    d4ec:	ldr	x2, [x2, #3688]
    d4f0:	bl	11cc8 <_ZdaPvRKSt9nothrow_t@@Base+0x8>
    d4f4:	mov	w0, #0x1                   	// #1
    d4f8:	str	w0, [x19, #24]
    d4fc:	ldp	x19, x30, [sp], #16
    d500:	ret
    d504:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d508:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d50c:	add	x2, x2, #0x948
    d510:	add	x0, x0, #0x8a8
    d514:	mov	x4, #0x0                   	// #0
    d518:	mov	w1, #0x150                 	// #336
    d51c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>

000000000000d520 <__interceptor_vfork@@Base>:
    d520:	stp	xzr, x30, [sp, #-16]!
    d524:	bl	7fd8 <__hwasan_handle_vfork@@Base+0x78>
    d528:	ldp	xzr, x30, [sp], #16
    d52c:	str	x30, [x0]
    d530:	adrp	x0, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    d534:	ldr	x0, [x0, #2656]
    d538:	blr	x0
    d53c:	stp	x0, xzr, [sp, #-16]!
    d540:	cmp	x0, #0x0
    d544:	b.eq	d550 <__interceptor_vfork@@Base+0x30>  // b.none
    d548:	add	x0, sp, #0x10
    d54c:	bl	61f0 <__hwasan_handle_vfork@plt>
    d550:	bl	7fd8 <__hwasan_handle_vfork@@Base+0x78>
    d554:	ldr	x30, [x0]
    d558:	ldp	x0, xzr, [sp], #16
    d55c:	ret
    d560:	stp	x19, x20, [sp, #-32]!
    d564:	mov	x20, x0
    d568:	mov	x19, x1
    d56c:	stp	x21, x30, [sp, #16]
    d570:	mov	x21, x2
    d574:	bl	1da08 <__sanitizer_set_report_fd@@Base+0x5c48>
    d578:	udiv	x3, x20, x0
    d57c:	msub	x3, x3, x0, x20
    d580:	cbnz	x3, d5c8 <__interceptor_vfork@@Base+0xa8>
    d584:	add	x19, x19, #0x1
    d588:	bl	1da08 <__sanitizer_set_report_fd@@Base+0x5c48>
    d58c:	udiv	x3, x19, x0
    d590:	msub	x3, x3, x0, x19
    d594:	cbnz	x3, d5e4 <__interceptor_vfork@@Base+0xc4>
    d598:	sub	x19, x19, x20
    d59c:	mov	x0, x19
    d5a0:	bl	14bf8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
    d5a4:	mov	x2, x21
    d5a8:	mov	x1, x19
    d5ac:	mov	x0, x20
    d5b0:	bl	24bc8 <__sanitizer_sandbox_on_notify@@Base+0x1640>
    d5b4:	tst	w0, #0xff
    d5b8:	b.eq	d600 <__interceptor_vfork@@Base+0xe0>  // b.none
    d5bc:	ldp	x21, x30, [sp, #16]
    d5c0:	ldp	x19, x20, [sp], #32
    d5c4:	ret
    d5c8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d5cc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d5d0:	add	x2, x2, #0x970
    d5d4:	add	x0, x0, #0x9a0
    d5d8:	mov	x4, #0x0                   	// #0
    d5dc:	mov	w1, #0x3d                  	// #61
    d5e0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    d5e4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d5e8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d5ec:	add	x2, x2, #0x9e8
    d5f0:	add	x0, x0, #0x9a0
    d5f4:	mov	x4, #0x0                   	// #0
    d5f8:	mov	w1, #0x3e                  	// #62
    d5fc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    d600:	mov	x1, x19
    d604:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d608:	add	x0, x0, #0xa18
    d60c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    d610:	bl	24830 <__sanitizer_sandbox_on_notify@@Base+0x12a8>
    d614:	nop
    d618:	stp	x19, x20, [sp, #-32]!
    d61c:	mov	x19, x0
    d620:	mov	x20, x2
    d624:	ldr	x0, [x0, #24]
    d628:	str	x30, [sp, #16]
    d62c:	bl	27bb0 <__sanitizer_cov_dump@@Base+0x1050>
    d630:	mov	x1, x0
    d634:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d638:	mov	x0, x20
    d63c:	ldr	x2, [x19, #40]
    d640:	mov	w5, #0x100                 	// #256
    d644:	ldr	x4, [x4, #4056]
    d648:	ldr	x3, [x19, #8]
    d64c:	ldr	x30, [sp, #16]
    d650:	str	x2, [x20, #2064]
    d654:	ldrb	w4, [x4, #33]
    d658:	ldp	x19, x20, [sp], #32
    d65c:	b	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    d660:	stp	x19, x20, [sp, #-32]!
    d664:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d668:	ldr	x0, [x20, #4056]
    d66c:	ldr	w0, [x0, #64]
    d670:	str	x30, [sp, #16]
    d674:	cbnz	w0, d6b0 <__interceptor_vfork@@Base+0x190>
    d678:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    d67c:	ldrb	w0, [x0, #3]
    d680:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d684:	cbnz	w0, d6c4 <__interceptor_vfork@@Base+0x1a4>
    d688:	ldr	x19, [x19, #3864]
    d68c:	ldr	w0, [x19]
    d690:	cmp	w0, #0x0
    d694:	b.le	d6a4 <__interceptor_vfork@@Base+0x184>
    d698:	ldr	x20, [x20, #4056]
    d69c:	ldr	w0, [x20, #224]
    d6a0:	cbnz	w0, d6e8 <__interceptor_vfork@@Base+0x1c8>
    d6a4:	ldr	x30, [sp, #16]
    d6a8:	ldp	x19, x20, [sp], #32
    d6ac:	ret
    d6b0:	bl	1e5b0 <__sanitizer_set_report_fd@@Base+0x67f0>
    d6b4:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d6b8:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    d6bc:	ldrb	w0, [x0, #3]
    d6c0:	cbz	w0, d688 <__interceptor_vfork@@Base+0x168>
    d6c4:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    d6c8:	ldrb	w0, [x0, #5]
    d6cc:	cbnz	w0, d6e0 <__interceptor_vfork@@Base+0x1c0>
    d6d0:	ldr	x0, [x19, #3864]
    d6d4:	ldr	w0, [x0]
    d6d8:	cmp	w0, #0x0
    d6dc:	b.le	d6a4 <__interceptor_vfork@@Base+0x184>
    d6e0:	bl	ff28 <__hwasan_memmove@@Base+0x1560>
    d6e4:	b	d688 <__interceptor_vfork@@Base+0x168>
    d6e8:	bl	1c2e0 <__sanitizer_set_report_fd@@Base+0x4520>
    d6ec:	nop
    d6f0:	str	x30, [sp, #-16]!
    d6f4:	mov	x4, #0x0                   	// #0
    d6f8:	mov	x3, #0x0                   	// #0
    d6fc:	mov	x2, #0x0                   	// #0
    d700:	mov	x1, #0x0                   	// #0
    d704:	mov	w0, #0x38                  	// #56
    d708:	bl	1c788 <__sanitizer_set_report_fd@@Base+0x49c8>
    d70c:	cmn	x0, #0x1
    d710:	b.ne	d724 <__interceptor_vfork@@Base+0x204>  // b.any
    d714:	bl	64f0 <__errno_location@plt>
    d718:	ldr	w0, [x0]
    d71c:	cmp	w0, #0x16
    d720:	b.eq	d778 <__interceptor_vfork@@Base+0x258>  // b.none
    d724:	mov	x4, #0x0                   	// #0
    d728:	mov	x3, #0x0                   	// #0
    d72c:	mov	x2, #0x0                   	// #0
    d730:	mov	x1, #0x1                   	// #1
    d734:	mov	w0, #0x37                  	// #55
    d738:	bl	1c788 <__sanitizer_set_report_fd@@Base+0x49c8>
    d73c:	cmn	x0, #0x1
    d740:	b.eq	d768 <__interceptor_vfork@@Base+0x248>  // b.none
    d744:	mov	x4, #0x0                   	// #0
    d748:	mov	x3, #0x0                   	// #0
    d74c:	mov	x2, #0x0                   	// #0
    d750:	mov	x1, #0x0                   	// #0
    d754:	mov	w0, #0x38                  	// #56
    d758:	bl	1c788 <__sanitizer_set_report_fd@@Base+0x49c8>
    d75c:	cbz	x0, d768 <__interceptor_vfork@@Base+0x248>
    d760:	ldr	x30, [sp], #16
    d764:	ret
    d768:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d76c:	add	x0, x0, #0xac8
    d770:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    d774:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    d778:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d77c:	add	x0, x0, #0xa80
    d780:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    d784:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    d788:	stp	x19, x20, [sp, #-48]!
    d78c:	stp	x21, x22, [sp, #16]
    d790:	adrp	x21, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    d794:	add	x20, x21, #0xa80
    d798:	stp	x23, x30, [sp, #32]
    d79c:	bl	1d238 <__sanitizer_set_report_fd@@Base+0x5478>
    d7a0:	mov	x19, x0
    d7a4:	bl	1da08 <__sanitizer_set_report_fd@@Base+0x5c48>
    d7a8:	lsl	x1, x0, #4
    d7ac:	sub	x1, x1, #0x1
    d7b0:	orr	x0, x1, x19
    d7b4:	str	x0, [x21, #2688]
    d7b8:	lsr	x0, x0, #4
    d7bc:	bl	c560 <__sanitizer_get_allocated_size@@Base+0x33b0>
    d7c0:	ldr	x2, [x21, #2688]
    d7c4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d7c8:	sub	x3, x0, #0x1
    d7cc:	stp	x3, xzr, [x20, #8]
    d7d0:	add	x2, x0, x2, lsr #4
    d7d4:	add	x5, x0, x3, lsr #4
    d7d8:	ldr	x4, [x1, #3848]
    d7dc:	add	x1, x0, x2, lsr #4
    d7e0:	cmp	x1, x3
    d7e4:	stp	x5, x0, [x20, #24]
    d7e8:	csel	x1, x1, x3, cs  // cs = hs, nlast
    d7ec:	add	x1, x1, #0x1
    d7f0:	str	x0, [x4]
    d7f4:	sub	x0, x1, x0
    d7f8:	stp	x2, x1, [x20, #40]
    d7fc:	lsl	x19, x0, #4
    d800:	str	x19, [x20, #56]
    d804:	bl	1da08 <__sanitizer_set_report_fd@@Base+0x5c48>
    d808:	udiv	x1, x19, x0
    d80c:	msub	x19, x1, x0, x19
    d810:	cbnz	x19, dbac <__interceptor_vfork@@Base+0x68c>
    d814:	ldr	x0, [x20, #40]
    d818:	ldr	x3, [x20, #56]
    d81c:	cmp	x3, x0
    d820:	b.ls	dbcc <__interceptor_vfork@@Base+0x6ac>  // b.plast
    d824:	ldr	x5, [x20, #48]
    d828:	cmp	x0, x5
    d82c:	b.ls	dbe8 <__interceptor_vfork@@Base+0x6c8>  // b.plast
    d830:	ldr	x2, [x20, #8]
    d834:	cmp	x5, x2
    d838:	b.ls	dc08 <__interceptor_vfork@@Base+0x6e8>  // b.plast
    d83c:	ldr	x4, [x20, #16]
    d840:	cmp	x2, x4
    d844:	b.ls	dc28 <__interceptor_vfork@@Base+0x708>  // b.plast
    d848:	ldp	x1, x0, [x20, #24]
    d84c:	cmp	x1, x0
    d850:	b.ls	dc44 <__interceptor_vfork@@Base+0x724>  // b.plast
    d854:	cmp	x2, x0
    d858:	b.cs	d950 <__interceptor_vfork@@Base+0x430>  // b.hs, b.nlast
    d85c:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    d860:	ldr	x2, [x2, #3816]
    d864:	ldr	w2, [x2]
    d868:	cbnz	w2, d970 <__interceptor_vfork@@Base+0x450>
    d86c:	add	x23, x21, #0xa80
    d870:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d874:	add	x2, x2, #0xd88
    d878:	bl	d560 <__interceptor_vfork@@Base+0x40>
    d87c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d880:	add	x2, x2, #0xd98
    d884:	ldp	x1, x0, [x23, #40]
    d888:	bl	d560 <__interceptor_vfork@@Base+0x40>
    d88c:	ldr	x20, [x23, #16]
    d890:	ldr	x1, [x23, #32]
    d894:	cmp	x20, x1
    d898:	csel	x20, x20, x1, ls  // ls = plast
    d89c:	cbz	x20, d8f8 <__interceptor_vfork@@Base+0x3d8>
    d8a0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d8a4:	add	x22, x2, #0xda8
    d8a8:	mov	x2, x22
    d8ac:	mov	x1, x20
    d8b0:	mov	x0, #0x0                   	// #0
    d8b4:	bl	24f58 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    d8b8:	cbz	x0, dc84 <__interceptor_vfork@@Base+0x764>
    d8bc:	bl	1da08 <__sanitizer_set_report_fd@@Base+0x5c48>
    d8c0:	mov	x23, x0
    d8c4:	nop
    d8c8:	cmp	x23, x20
    d8cc:	b.cs	dd38 <__interceptor_vfork@@Base+0x818>  // b.hs, b.nlast
    d8d0:	add	x19, x19, x23
    d8d4:	sub	x20, x20, x23
    d8d8:	mov	x1, x20
    d8dc:	mov	x0, x19
    d8e0:	mov	x2, x22
    d8e4:	bl	24f58 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    d8e8:	cmp	x0, x19
    d8ec:	b.ne	d8c8 <__interceptor_vfork@@Base+0x3a8>  // b.any
    d8f0:	add	x0, x21, #0xa80
    d8f4:	ldr	x1, [x0, #32]
    d8f8:	add	x0, x21, #0xa80
    d8fc:	ldr	x0, [x0, #8]
    d900:	add	x22, x0, #0x1
    d904:	cmp	x22, x1
    d908:	b.cc	da54 <__interceptor_vfork@@Base+0x534>  // b.lo, b.ul, b.last
    d90c:	add	x0, x21, #0xa80
    d910:	ldr	x20, [x0, #24]
    d914:	ldr	x0, [x0, #48]
    d918:	add	x22, x20, #0x1
    d91c:	cmp	x22, x0
    d920:	b.cc	dad4 <__interceptor_vfork@@Base+0x5b4>  // b.lo, b.ul, b.last
    d924:	add	x21, x21, #0xa80
    d928:	ldr	x20, [x21, #40]
    d92c:	ldr	x0, [x21, #56]
    d930:	add	x21, x20, #0x1
    d934:	cmp	x21, x0
    d938:	b.cc	db3c <__interceptor_vfork@@Base+0x61c>  // b.lo, b.ul, b.last
    d93c:	mov	w0, #0x1                   	// #1
    d940:	ldp	x21, x22, [sp, #16]
    d944:	ldp	x23, x30, [sp, #32]
    d948:	ldp	x19, x20, [sp], #48
    d94c:	ret
    d950:	mov	x4, x2
    d954:	mov	x3, x0
    d958:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d95c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d960:	add	x2, x2, #0xc58
    d964:	add	x0, x0, #0x9a0
    d968:	mov	w1, #0xd8                  	// #216
    d96c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    d970:	ldr	x2, [x21, #2688]
    d974:	adrp	x22, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d978:	add	x23, x22, #0xc88
    d97c:	mov	x1, x3
    d980:	mov	x0, x23
    d984:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d988:	mov	w3, #0xa                   	// #10
    d98c:	add	x4, x4, #0xc80
    d990:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    d994:	ldr	x2, [x20, #40]
    d998:	ldr	x4, [x20, #56]
    d99c:	add	x1, x2, #0x1
    d9a0:	cmp	x1, x4
    d9a4:	b.cc	dc64 <__interceptor_vfork@@Base+0x744>  // b.lo, b.ul, b.last
    d9a8:	b.ne	dce8 <__interceptor_vfork@@Base+0x7c8>  // b.any
    d9ac:	add	x20, x21, #0xa80
    d9b0:	add	x23, x22, #0xc88
    d9b4:	mov	x0, x23
    d9b8:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    d9bc:	mov	w3, #0xa                   	// #10
    d9c0:	add	x4, x4, #0xce0
    d9c4:	ldr	x1, [x20, #48]
    d9c8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    d9cc:	ldr	x2, [x20, #24]
    d9d0:	ldr	x4, [x20, #48]
    d9d4:	add	x1, x2, #0x1
    d9d8:	cmp	x1, x4
    d9dc:	b.cc	dc8c <__interceptor_vfork@@Base+0x76c>  // b.lo, b.ul, b.last
    d9e0:	ldr	x3, [x20, #8]
    d9e4:	add	x3, x3, #0x1
    d9e8:	cmp	x4, x3
    d9ec:	b.ne	dd04 <__interceptor_vfork@@Base+0x7e4>  // b.any
    d9f0:	add	x20, x21, #0xa80
    d9f4:	add	x23, x22, #0xc88
    d9f8:	mov	x0, x23
    d9fc:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    da00:	mov	w3, #0xa                   	// #10
    da04:	add	x4, x4, #0xd20
    da08:	ldr	x1, [x20, #32]
    da0c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    da10:	ldr	x2, [x20, #8]
    da14:	ldr	x4, [x20, #32]
    da18:	add	x1, x2, #0x1
    da1c:	cmp	x1, x4
    da20:	b.cc	dcac <__interceptor_vfork@@Base+0x78c>  // b.lo, b.ul, b.last
    da24:	b.ne	dd1c <__interceptor_vfork@@Base+0x7fc>  // b.any
    da28:	add	x20, x21, #0xa80
    da2c:	add	x0, x22, #0xc88
    da30:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    da34:	mov	w3, #0xa                   	// #10
    da38:	add	x4, x4, #0xd60
    da3c:	ldr	x1, [x20, #16]
    da40:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    da44:	ldr	x4, [x20, #16]
    da48:	cbnz	x4, dccc <__interceptor_vfork@@Base+0x7ac>
    da4c:	ldp	x1, x0, [x20, #24]
    da50:	b	d86c <__interceptor_vfork@@Base+0x34c>
    da54:	mvn	x0, x0
    da58:	adds	x20, x0, x1
    da5c:	b.eq	d90c <__interceptor_vfork@@Base+0x3ec>  // b.none
    da60:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    da64:	add	x19, x2, #0xda8
    da68:	mov	x2, x19
    da6c:	mov	x1, x20
    da70:	mov	x0, x22
    da74:	bl	24f58 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    da78:	cmp	x0, x22
    da7c:	b.eq	d90c <__interceptor_vfork@@Base+0x3ec>  // b.none
    da80:	cbnz	x22, dab8 <__interceptor_vfork@@Base+0x598>
    da84:	bl	1da08 <__sanitizer_set_report_fd@@Base+0x5c48>
    da88:	mov	x23, x0
    da8c:	b	dab0 <__interceptor_vfork@@Base+0x590>
    da90:	add	x22, x22, x23
    da94:	sub	x20, x20, x23
    da98:	mov	x1, x20
    da9c:	mov	x0, x22
    daa0:	mov	x2, x19
    daa4:	bl	24f58 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    daa8:	cmp	x0, x22
    daac:	b.eq	d90c <__interceptor_vfork@@Base+0x3ec>  // b.none
    dab0:	cmp	x23, x20
    dab4:	b.cc	da90 <__interceptor_vfork@@Base+0x570>  // b.lo, b.ul, b.last
    dab8:	add	x2, x22, x20
    dabc:	mov	x1, x22
    dac0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dac4:	add	x0, x0, #0xdb8
    dac8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    dacc:	bl	1e5b0 <__sanitizer_set_report_fd@@Base+0x67f0>
    dad0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    dad4:	sub	x0, x0, #0x1
    dad8:	subs	x20, x0, x20
    dadc:	b.eq	d924 <__interceptor_vfork@@Base+0x404>  // b.none
    dae0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dae4:	add	x19, x2, #0xda8
    dae8:	mov	x2, x19
    daec:	mov	x1, x20
    daf0:	mov	x0, x22
    daf4:	bl	24f58 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    daf8:	cmp	x0, x22
    dafc:	b.eq	d924 <__interceptor_vfork@@Base+0x404>  // b.none
    db00:	cbnz	x22, dab8 <__interceptor_vfork@@Base+0x598>
    db04:	bl	1da08 <__sanitizer_set_report_fd@@Base+0x5c48>
    db08:	mov	x23, x0
    db0c:	b	db30 <__interceptor_vfork@@Base+0x610>
    db10:	add	x22, x22, x23
    db14:	sub	x20, x20, x23
    db18:	mov	x1, x20
    db1c:	mov	x0, x22
    db20:	mov	x2, x19
    db24:	bl	24f58 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    db28:	cmp	x0, x22
    db2c:	b.eq	d924 <__interceptor_vfork@@Base+0x404>  // b.none
    db30:	cmp	x23, x20
    db34:	b.cc	db10 <__interceptor_vfork@@Base+0x5f0>  // b.lo, b.ul, b.last
    db38:	b	dab8 <__interceptor_vfork@@Base+0x598>
    db3c:	sub	x0, x0, #0x1
    db40:	subs	x20, x0, x20
    db44:	b.eq	d93c <__interceptor_vfork@@Base+0x41c>  // b.none
    db48:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    db4c:	add	x19, x2, #0xda8
    db50:	mov	x2, x19
    db54:	mov	x1, x20
    db58:	mov	x0, x21
    db5c:	bl	24f58 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    db60:	cmp	x0, x21
    db64:	b.eq	d93c <__interceptor_vfork@@Base+0x41c>  // b.none
    db68:	cbnz	x21, dba0 <__interceptor_vfork@@Base+0x680>
    db6c:	bl	1da08 <__sanitizer_set_report_fd@@Base+0x5c48>
    db70:	mov	x22, x0
    db74:	b	db98 <__interceptor_vfork@@Base+0x678>
    db78:	add	x21, x21, x22
    db7c:	sub	x20, x20, x22
    db80:	mov	x1, x20
    db84:	mov	x0, x21
    db88:	mov	x2, x19
    db8c:	bl	24f58 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    db90:	cmp	x0, x21
    db94:	b.eq	d93c <__interceptor_vfork@@Base+0x41c>  // b.none
    db98:	cmp	x22, x20
    db9c:	b.cc	db78 <__interceptor_vfork@@Base+0x658>  // b.lo, b.ul, b.last
    dba0:	add	x2, x21, x20
    dba4:	mov	x1, x21
    dba8:	b	dac0 <__interceptor_vfork@@Base+0x5a0>
    dbac:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dbb0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dbb4:	mov	x3, x19
    dbb8:	add	x2, x2, #0xb50
    dbbc:	add	x0, x0, #0x9a0
    dbc0:	mov	x4, #0x0                   	// #0
    dbc4:	mov	w1, #0xd2                  	// #210
    dbc8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    dbcc:	mov	x4, x0
    dbd0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dbd4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dbd8:	add	x2, x2, #0xb88
    dbdc:	add	x0, x0, #0x9a0
    dbe0:	mov	w1, #0xd3                  	// #211
    dbe4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    dbe8:	mov	x3, x0
    dbec:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dbf0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dbf4:	mov	x4, x5
    dbf8:	add	x2, x2, #0xbb0
    dbfc:	add	x0, x0, #0x9a0
    dc00:	mov	w1, #0xd4                  	// #212
    dc04:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    dc08:	mov	x4, x2
    dc0c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dc10:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dc14:	mov	x3, x5
    dc18:	add	x2, x2, #0xbe0
    dc1c:	add	x0, x0, #0x9a0
    dc20:	mov	w1, #0xd5                  	// #213
    dc24:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    dc28:	mov	x3, x2
    dc2c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dc30:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dc34:	add	x0, x0, #0x9a0
    dc38:	add	x2, x2, #0xc08
    dc3c:	mov	w1, #0xd6                  	// #214
    dc40:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    dc44:	mov	x4, x0
    dc48:	mov	x3, x1
    dc4c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dc50:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dc54:	add	x2, x2, #0xc30
    dc58:	add	x0, x0, #0x9a0
    dc5c:	mov	w1, #0xd7                  	// #215
    dc60:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    dc64:	sub	x2, x4, #0x1
    dc68:	mov	x0, x23
    dc6c:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dc70:	mov	w3, #0xa                   	// #10
    dc74:	add	x4, x4, #0xca0
    dc78:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    dc7c:	ldr	x2, [x20, #40]
    dc80:	b	d9ac <__interceptor_vfork@@Base+0x48c>
    dc84:	ldr	x1, [x23, #32]
    dc88:	b	d8f8 <__interceptor_vfork@@Base+0x3d8>
    dc8c:	sub	x2, x4, #0x1
    dc90:	mov	x0, x23
    dc94:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dc98:	mov	w3, #0xa                   	// #10
    dc9c:	add	x4, x4, #0xca0
    dca0:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    dca4:	ldr	x2, [x20, #24]
    dca8:	b	d9f0 <__interceptor_vfork@@Base+0x4d0>
    dcac:	sub	x2, x4, #0x1
    dcb0:	mov	x0, x23
    dcb4:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dcb8:	mov	w3, #0xa                   	// #10
    dcbc:	add	x4, x4, #0xca0
    dcc0:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    dcc4:	ldr	x2, [x20, #8]
    dcc8:	b	da28 <__interceptor_vfork@@Base+0x508>
    dccc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dcd0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dcd4:	add	x2, x2, #0xd68
    dcd8:	add	x0, x0, #0x9a0
    dcdc:	mov	x3, #0x0                   	// #0
    dce0:	mov	w1, #0x84                  	// #132
    dce4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    dce8:	mov	x3, x1
    dcec:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dcf0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dcf4:	add	x2, x2, #0xcb0
    dcf8:	add	x0, x0, #0x9a0
    dcfc:	mov	w1, #0x78                  	// #120
    dd00:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    dd04:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dd08:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dd0c:	add	x2, x2, #0xcf0
    dd10:	add	x0, x0, #0x9a0
    dd14:	mov	w1, #0x7d                  	// #125
    dd18:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    dd1c:	mov	x3, x1
    dd20:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dd24:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dd28:	add	x2, x2, #0xd30
    dd2c:	add	x0, x0, #0x9a0
    dd30:	mov	w1, #0x82                  	// #130
    dd34:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    dd38:	add	x2, x20, x19
    dd3c:	mov	x1, x19
    dd40:	b	dac0 <__interceptor_vfork@@Base+0x5a0>
    dd44:	nop
    dd48:	stp	x19, x20, [sp, #-64]!
    dd4c:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    dd50:	ldr	x20, [x20, #3848]
    dd54:	stp	x21, x22, [sp, #16]
    dd58:	stp	x23, x24, [sp, #32]
    dd5c:	ldr	x0, [x20]
    dd60:	str	x30, [sp, #48]
    dd64:	cbz	x0, de34 <__interceptor_vfork@@Base+0x914>
    dd68:	bl	1da08 <__sanitizer_set_report_fd@@Base+0x5c48>
    dd6c:	mov	x22, #0xffffffff00000000    	// #-4294967296
    dd70:	ldr	x24, [x20]
    dd74:	mov	x21, x0
    dd78:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    dd7c:	add	x2, x2, #0xe50
    dd80:	sub	x23, x24, x0
    dd84:	add	x22, x24, x22
    dd88:	sub	x1, x23, #0x1
    dd8c:	mov	x0, x22
    dd90:	bl	d560 <__interceptor_vfork@@Base+0x40>
    dd94:	ldr	x19, [x20]
    dd98:	sub	x19, x19, x24
    dd9c:	adds	x19, x19, x21
    dda0:	b.ne	ddc0 <__interceptor_vfork@@Base+0x8a0>  // b.any
    dda4:	sub	x1, x23, x22
    dda8:	mov	x0, x22
    ddac:	ldp	x21, x22, [sp, #16]
    ddb0:	ldp	x23, x24, [sp, #32]
    ddb4:	ldr	x30, [sp, #48]
    ddb8:	ldp	x19, x20, [sp], #64
    ddbc:	b	11890 <__hwasan_tag_mismatch_v2@@Base+0x698>
    ddc0:	adrp	x24, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    ddc4:	add	x24, x24, #0xda8
    ddc8:	mov	x2, x24
    ddcc:	mov	x1, x19
    ddd0:	mov	x0, x23
    ddd4:	bl	24f58 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    ddd8:	cmp	x0, x23
    dddc:	b.eq	dda4 <__interceptor_vfork@@Base+0x884>  // b.none
    dde0:	cbnz	x23, de54 <__interceptor_vfork@@Base+0x934>
    dde4:	bl	1da08 <__sanitizer_set_report_fd@@Base+0x5c48>
    dde8:	mov	x21, x0
    ddec:	mov	x20, #0x0                   	// #0
    ddf0:	cmp	x21, x19
    ddf4:	b.cs	de58 <__interceptor_vfork@@Base+0x938>  // b.hs, b.nlast
    ddf8:	add	x20, x20, x21
    ddfc:	sub	x19, x19, x21
    de00:	mov	x1, x19
    de04:	mov	x0, x20
    de08:	mov	x2, x24
    de0c:	bl	24f58 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    de10:	cmp	x0, x20
    de14:	b.ne	ddf0 <__interceptor_vfork@@Base+0x8d0>  // b.any
    de18:	sub	x1, x23, x22
    de1c:	mov	x0, x22
    de20:	ldp	x21, x22, [sp, #16]
    de24:	ldp	x23, x24, [sp, #32]
    de28:	ldr	x30, [sp, #48]
    de2c:	ldp	x19, x20, [sp], #64
    de30:	b	11890 <__hwasan_tag_mismatch_v2@@Base+0x698>
    de34:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    de38:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    de3c:	add	x2, x2, #0xe18
    de40:	add	x0, x0, #0x9a0
    de44:	mov	x4, #0x0                   	// #0
    de48:	mov	x3, #0x0                   	// #0
    de4c:	mov	w1, #0xee                  	// #238
    de50:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    de54:	mov	x20, x23
    de58:	add	x2, x20, x19
    de5c:	mov	x1, x20
    de60:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    de64:	add	x0, x0, #0xdb8
    de68:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
    de6c:	bl	1e5b0 <__sanitizer_set_report_fd@@Base+0x67f0>
    de70:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    de74:	nop
    de78:	stp	x19, x20, [sp, #-48]!
    de7c:	adrp	x20, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    de80:	add	x0, x20, #0xa80
    de84:	stp	x21, x22, [sp, #16]
    de88:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    de8c:	ldp	x19, x22, [x0, #24]
    de90:	str	x30, [sp, #32]
    de94:	add	x19, x19, #0x1
    de98:	mov	x0, x22
    de9c:	sub	x19, x19, x22
    dea0:	mov	x1, x19
    dea4:	bl	24538 <__sanitizer_sandbox_on_notify@@Base+0xfb0>
    dea8:	ldr	x0, [x21, #4056]
    deac:	ldrb	w0, [x0, #187]
    deb0:	cbnz	w0, deec <__interceptor_vfork@@Base+0x9cc>
    deb4:	add	x20, x20, #0xa80
    deb8:	ldp	x19, x20, [x20, #40]
    debc:	add	x19, x19, #0x1
    dec0:	mov	x0, x20
    dec4:	sub	x19, x19, x20
    dec8:	mov	x1, x19
    decc:	bl	24538 <__sanitizer_sandbox_on_notify@@Base+0xfb0>
    ded0:	ldr	x21, [x21, #4056]
    ded4:	ldrb	w0, [x21, #187]
    ded8:	cbnz	w0, defc <__interceptor_vfork@@Base+0x9dc>
    dedc:	ldp	x21, x22, [sp, #16]
    dee0:	ldr	x30, [sp, #32]
    dee4:	ldp	x19, x20, [sp], #48
    dee8:	ret
    deec:	mov	x1, x19
    def0:	mov	x0, x22
    def4:	bl	24558 <__sanitizer_sandbox_on_notify@@Base+0xfd0>
    def8:	b	deb4 <__interceptor_vfork@@Base+0x994>
    defc:	mov	x1, x19
    df00:	mov	x0, x20
    df04:	ldp	x21, x22, [sp, #16]
    df08:	ldr	x30, [sp, #32]
    df0c:	ldp	x19, x20, [sp], #48
    df10:	b	24558 <__sanitizer_sandbox_on_notify@@Base+0xfd0>
    df14:	nop
    df18:	cmp	xzr, x0, lsr #56
    df1c:	b.ne	df5c <__interceptor_vfork@@Base+0xa3c>  // b.any
    df20:	adrp	x2, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    df24:	add	x2, x2, #0xa80
    df28:	mov	x1, x0
    df2c:	mov	w0, #0x1                   	// #1
    df30:	ldr	x3, [x2, #56]
    df34:	cmp	x3, x1
    df38:	b.ls	df58 <__interceptor_vfork@@Base+0xa38>  // b.plast
    df3c:	ldr	x3, [x2, #16]
    df40:	mov	w0, #0x0                   	// #0
    df44:	cmp	x3, x1
    df48:	b.hi	df58 <__interceptor_vfork@@Base+0xa38>  // b.pmore
    df4c:	ldr	x0, [x2, #8]
    df50:	cmp	x0, x1
    df54:	cset	w0, cs  // cs = hs, nlast
    df58:	ret
    df5c:	str	x30, [sp, #-16]!
    df60:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    df64:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    df68:	add	x2, x2, #0xe60
    df6c:	add	x0, x0, #0x9a0
    df70:	mov	x4, #0x0                   	// #0
    df74:	mov	x3, #0x0                   	// #0
    df78:	mov	w1, #0x108                 	// #264
    df7c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    df80:	adrp	x0, d000 <__interceptor_realloc@@Base+0xa8>
    df84:	add	x0, x0, #0x660
    df88:	b	34140 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x598>
    df8c:	nop
    df90:	stp	x19, x20, [sp, #-32]!
    df94:	stp	x21, x30, [sp, #16]
    df98:	bl	11880 <__hwasan_tag_mismatch_v2@@Base+0x688>
    df9c:	mov	x19, x0
    dfa0:	add	x0, x0, #0x30
    dfa4:	mov	w2, #0x1                   	// #1
    dfa8:	ldxrb	w1, [x0]
    dfac:	stxrb	w3, w2, [x0]
    dfb0:	cbnz	w3, dfa8 <__interceptor_vfork@@Base+0xa88>
    dfb4:	dmb	ish
    dfb8:	tst	w1, #0xff
    dfbc:	b.eq	dfc4 <__interceptor_vfork@@Base+0xaa4>  // b.none
    dfc0:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    dfc4:	ldr	x20, [x19, #32]
    dfc8:	ldr	x0, [x19, #16]
    dfcc:	cbz	x20, e06c <__interceptor_vfork@@Base+0xb4c>
    dfd0:	ldr	x1, [x20, #2664]
    dfd4:	str	x1, [x19, #32]
    dfd8:	add	x2, x0, #0xa80
    dfdc:	mov	x21, x20
    dfe0:	sub	x0, x20, x0
    dfe4:	mov	w1, #0x0                   	// #0
    dfe8:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    dfec:	ldr	x0, [x19, #40]
    dff0:	str	x0, [x20, #2664]
    dff4:	str	x20, [x19, #40]
    dff8:	dmb	ish
    dffc:	strb	wzr, [x19, #48]
    e000:	ldr	x2, [x19, #16]
    e004:	mov	x0, x20
    e008:	sub	x1, x21, x2
    e00c:	bl	11390 <__hwasan_tag_mismatch_v2@@Base+0x198>
    e010:	add	x0, x19, #0x48
    e014:	mov	w2, #0x1                   	// #1
    e018:	ldxrb	w1, [x0]
    e01c:	stxrb	w3, w2, [x0]
    e020:	cbnz	w3, e018 <__interceptor_vfork@@Base+0xaf8>
    e024:	dmb	ish
    e028:	tst	w1, #0xff
    e02c:	b.eq	e034 <__interceptor_vfork@@Base+0xb14>  // b.none
    e030:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    e034:	ldp	x0, x2, [x20, #8]
    e038:	ldr	x1, [x19, #64]
    e03c:	add	x0, x0, x1
    e040:	ldr	x1, [x19, #56]
    e044:	sub	x0, x0, x2
    e048:	str	x0, [x19, #64]
    e04c:	add	x0, x1, #0x1
    e050:	str	x0, [x19, #56]
    e054:	dmb	ish
    e058:	strb	wzr, [x19, #72]
    e05c:	mov	x0, x20
    e060:	ldp	x21, x30, [sp, #16]
    e064:	ldp	x19, x20, [sp], #32
    e068:	b	11240 <__hwasan_tag_mismatch_v2@@Base+0x48>
    e06c:	ldr	x1, [x19]
    e070:	lsl	x2, x0, #1
    e074:	sub	x2, x2, #0x1
    e078:	tst	x2, x1
    e07c:	b.ne	e0c0 <__interceptor_vfork@@Base+0xba0>  // b.any
    e080:	ldr	x2, [x19, #24]
    e084:	add	x21, x1, x0
    e088:	ldr	x0, [x19, #8]
    e08c:	add	x1, x1, x2
    e090:	str	x1, [x19]
    e094:	mov	x20, x21
    e098:	cmp	x1, x0
    e09c:	b.ls	dfec <__interceptor_vfork@@Base+0xacc>  // b.plast
    e0a0:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    e0a4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    e0a8:	add	x2, x2, #0x8b8
    e0ac:	add	x0, x0, #0x868
    e0b0:	mov	x4, #0x0                   	// #0
    e0b4:	mov	x3, #0x0                   	// #0
    e0b8:	mov	w1, #0xc3                  	// #195
    e0bc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    e0c0:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    e0c4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    e0c8:	add	x2, x2, #0x838
    e0cc:	add	x0, x0, #0x868
    e0d0:	mov	x4, #0x0                   	// #0
    e0d4:	mov	x3, #0x0                   	// #0
    e0d8:	mov	w1, #0xc0                  	// #192
    e0dc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    e0e0:	stp	x19, x20, [sp, #-32]!
    e0e4:	str	x30, [sp, #16]
    e0e8:	bl	11880 <__hwasan_tag_mismatch_v2@@Base+0x688>
    e0ec:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    e0f0:	ldr	x1, [x1, #3992]
    e0f4:	mrs	x2, tpidr_el0
    e0f8:	ldr	x0, [x0, #16]
    e0fc:	ldr	x1, [x2, x1]
    e100:	neg	x19, x0, lsl #1
    e104:	and	x19, x19, x1
    e108:	and	x19, x19, #0xffffffffffffff
    e10c:	add	x19, x19, x0
    e110:	cbnz	x19, e120 <__interceptor_vfork@@Base+0xc00>
    e114:	ldr	x30, [sp, #16]
    e118:	ldp	x19, x20, [sp], #32
    e11c:	ret
    e120:	bl	11880 <__hwasan_tag_mismatch_v2@@Base+0x688>
    e124:	mov	x20, x0
    e128:	add	x0, x0, #0x48
    e12c:	mov	w2, #0x1                   	// #1
    e130:	ldxrb	w1, [x0]
    e134:	stxrb	w3, w2, [x0]
    e138:	cbnz	w3, e130 <__interceptor_vfork@@Base+0xc10>
    e13c:	dmb	ish
    e140:	tst	w1, #0xff
    e144:	b.eq	e14c <__interceptor_vfork@@Base+0xc2c>  // b.none
    e148:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    e14c:	ldp	x1, x0, [x19, #8]
    e150:	sub	x1, x0, x1
    e154:	ldp	x2, x0, [x20, #56]
    e158:	sub	x2, x2, #0x1
    e15c:	add	x0, x0, x1
    e160:	stp	x2, x0, [x20, #56]
    e164:	dmb	ish
    e168:	strb	wzr, [x20, #72]
    e16c:	mov	x0, x19
    e170:	bl	116f8 <__hwasan_tag_mismatch_v2@@Base+0x500>
    e174:	add	x0, x20, #0x30
    e178:	mov	w2, #0x1                   	// #1
    e17c:	ldxrb	w1, [x0]
    e180:	stxrb	w3, w2, [x0]
    e184:	cbnz	w3, e17c <__interceptor_vfork@@Base+0xc5c>
    e188:	dmb	ish
    e18c:	tst	w1, #0xff
    e190:	b.eq	e198 <__interceptor_vfork@@Base+0xc78>  // b.none
    e194:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    e198:	ldr	x0, [x20, #40]
    e19c:	cmp	x19, x0
    e1a0:	b.eq	e1f8 <__interceptor_vfork@@Base+0xcd8>  // b.none
    e1a4:	nop
    e1a8:	mov	x1, x0
    e1ac:	ldr	x0, [x0, #2664]
    e1b0:	cmp	x19, x0
    e1b4:	b.ne	e1a8 <__interceptor_vfork@@Base+0xc88>  // b.any
    e1b8:	add	x1, x1, #0xa68
    e1bc:	ldr	x0, [x0, #2664]
    e1c0:	str	x0, [x1]
    e1c4:	ldr	x0, [x20, #16]
    e1c8:	ldr	x1, [x20, #32]
    e1cc:	str	x1, [x19, #2664]
    e1d0:	ldr	x1, [x20, #24]
    e1d4:	str	x19, [x20, #32]
    e1d8:	sub	x0, x19, x0
    e1dc:	add	x1, x0, x1
    e1e0:	bl	244a8 <__sanitizer_sandbox_on_notify@@Base+0xf20>
    e1e4:	dmb	ish
    e1e8:	strb	wzr, [x20, #48]
    e1ec:	ldr	x30, [sp, #16]
    e1f0:	ldp	x19, x20, [sp], #32
    e1f4:	ret
    e1f8:	add	x1, x20, #0x28
    e1fc:	b	e1bc <__interceptor_vfork@@Base+0xc9c>
    e200:	cmp	x0, #0x1
    e204:	b.ls	e22c <__interceptor_vfork@@Base+0xd0c>  // b.plast
    e208:	adrp	x2, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    e20c:	sub	x1, x0, #0x1
    e210:	str	x30, [sp, #-16]!
    e214:	ldr	w0, [x2, #2752]
    e218:	bl	6400 <pthread_setspecific@plt>
    e21c:	sxtw	x4, w0
    e220:	cbnz	w0, e230 <__interceptor_vfork@@Base+0xd10>
    e224:	ldr	x30, [sp], #16
    e228:	ret
    e22c:	b	e0e0 <__interceptor_vfork@@Base+0xbc0>
    e230:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    e234:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    e238:	add	x2, x2, #0xe88
    e23c:	add	x0, x0, #0x9a0
    e240:	mov	x3, #0x0                   	// #0
    e244:	mov	w1, #0x137                 	// #311
    e248:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    e24c:	nop
    e250:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    e254:	add	x0, x0, #0xa80
    e258:	ldrb	w1, [x0, #68]
    e25c:	cbnz	w1, e264 <__interceptor_vfork@@Base+0xd44>
    e260:	ret
    e264:	ldr	w0, [x0, #64]
    e268:	mov	x1, #0x4                   	// #4
    e26c:	str	x30, [sp, #-16]!
    e270:	bl	6400 <pthread_setspecific@plt>
    e274:	sxtw	x4, w0
    e278:	cbnz	w0, e284 <__interceptor_vfork@@Base+0xd64>
    e27c:	ldr	x30, [sp], #16
    e280:	ret
    e284:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    e288:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    e28c:	add	x2, x2, #0xed0
    e290:	add	x0, x0, #0x9a0
    e294:	mov	x3, #0x0                   	// #0
    e298:	mov	w1, #0x130                 	// #304
    e29c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    e2a0:	adrp	x2, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    e2a4:	add	x2, x2, #0xa80
    e2a8:	str	x30, [sp, #-16]!
    e2ac:	ldrb	w0, [x2, #68]
    e2b0:	cbnz	w0, e2dc <__interceptor_vfork@@Base+0xdbc>
    e2b4:	mov	w3, #0x1                   	// #1
    e2b8:	add	x0, x2, #0x40
    e2bc:	adrp	x1, e000 <__interceptor_vfork@@Base+0xae0>
    e2c0:	add	x1, x1, #0x200
    e2c4:	strb	w3, [x2, #68]
    e2c8:	bl	6540 <pthread_key_create@plt>
    e2cc:	sxtw	x4, w0
    e2d0:	cbnz	w0, e2fc <__interceptor_vfork@@Base+0xddc>
    e2d4:	ldr	x30, [sp], #16
    e2d8:	ret
    e2dc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    e2e0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    e2e4:	add	x2, x2, #0xf28
    e2e8:	add	x0, x0, #0x9a0
    e2ec:	mov	x4, #0x0                   	// #0
    e2f0:	mov	x3, #0x0                   	// #0
    e2f4:	mov	w1, #0x13e                 	// #318
    e2f8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    e2fc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    e300:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    e304:	add	x2, x2, #0xf48
    e308:	add	x0, x0, #0x9a0
    e30c:	mov	x3, #0x0                   	// #0
    e310:	mov	w1, #0x140                 	// #320
    e314:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    e318:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    e31c:	ldr	x0, [x0, #3992]
    e320:	mrs	x1, tpidr_el0
    e324:	add	x0, x1, x0
    e328:	ret
    e32c:	nop
    e330:	ret
    e334:	nop
    e338:	str	x30, [sp, #-16]!
    e33c:	bl	11880 <__hwasan_tag_mismatch_v2@@Base+0x688>
    e340:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    e344:	ldr	x1, [x1, #3992]
    e348:	mrs	x2, tpidr_el0
    e34c:	ldr	x3, [x0, #16]
    e350:	ldr	x30, [sp], #16
    e354:	ldr	x1, [x2, x1]
    e358:	neg	x0, x3, lsl #1
    e35c:	and	x0, x0, x1
    e360:	and	x0, x0, #0xffffffffffffff
    e364:	add	x0, x0, x3
    e368:	ret
    e36c:	nop
    e370:	stp	x19, x20, [sp, #-176]!
    e374:	cmp	w0, #0x5
    e378:	mov	x20, x1
    e37c:	str	x30, [sp, #80]
    e380:	mov	x19, x2
    e384:	b.eq	e3b4 <__interceptor_vfork@@Base+0xe94>  // b.none
    e388:	bl	1c398 <__sanitizer_set_report_fd@@Base+0x45d8>
    e38c:	mov	w2, w0
    e390:	mov	x1, x19
    e394:	mov	x0, x20
    e398:	mov	x4, #0x0                   	// #0
    e39c:	adrp	x3, d000 <__interceptor_realloc@@Base+0xa8>
    e3a0:	add	x3, x3, #0x618
    e3a4:	bl	2d810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fe8>
    e3a8:	ldr	x30, [sp, #80]
    e3ac:	ldp	x19, x20, [sp], #176
    e3b0:	ret
    e3b4:	ldr	x0, [x1, #16]
    e3b8:	stp	x21, x22, [sp, #16]
    e3bc:	ldr	w22, [x0]
    e3c0:	lsr	w22, w22, #5
    e3c4:	and	w0, w22, #0xff00
    e3c8:	cmp	w0, #0x900
    e3cc:	b.eq	e3d8 <__interceptor_vfork@@Base+0xeb8>  // b.none
    e3d0:	ldp	x21, x22, [sp, #16]
    e3d4:	b	e388 <__interceptor_vfork@@Base+0xe68>
    e3d8:	and	w0, w22, #0xf
    e3dc:	stp	x23, x24, [sp, #32]
    e3e0:	cmp	w0, #0x4
    e3e4:	and	w1, w22, #0x10
    e3e8:	ccmp	w0, #0xf, #0x4, hi  // hi = pmore
    e3ec:	and	w22, w22, #0x20
    e3f0:	ldr	x24, [x2, #184]
    e3f4:	b.ne	e580 <__interceptor_vfork@@Base+0x1060>  // b.any
    e3f8:	stp	x25, x26, [sp, #48]
    e3fc:	cmp	w0, #0xf
    e400:	stp	x27, x28, [sp, #64]
    e404:	b.eq	e58c <__interceptor_vfork@@Base+0x106c>  // b.none
    e408:	mov	w2, #0x1                   	// #1
    e40c:	lsl	w0, w2, w0
    e410:	str	x0, [sp, #104]
    e414:	cmp	w1, #0x0
    e418:	add	x21, sp, #0x70
    e41c:	cset	w23, ne  // ne = any
    e420:	mov	x0, x21
    e424:	stp	x20, x19, [sp, #112]
    e428:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    e42c:	bl	1e120 <__sanitizer_set_report_fd@@Base+0x6360>
    e430:	mov	x1, x0
    e434:	mov	x0, x21
    e438:	str	x1, [sp, #128]
    e43c:	bl	1e130 <__sanitizer_set_report_fd@@Base+0x6370>
    e440:	mov	w1, w0
    e444:	mov	x0, x21
    e448:	strb	w1, [sp, #160]
    e44c:	bl	1d808 <__sanitizer_set_report_fd@@Base+0x5a48>
    e450:	mov	w1, w0
    e454:	mov	x0, x21
    e458:	str	w1, [sp, #164]
    e45c:	bl	1d850 <__sanitizer_set_report_fd@@Base+0x5a90>
    e460:	mov	w1, w0
    e464:	mov	x0, x21
    e468:	strb	w1, [sp, #168]
    e46c:	bl	1d880 <__sanitizer_set_report_fd@@Base+0x5ac0>
    e470:	ldr	x0, [sp, #136]
    e474:	bl	27bb0 <__sanitizer_cov_dump@@Base+0x1050>
    e478:	mov	x21, x0
    e47c:	ldr	x20, [x25, #4016]
    e480:	ldr	x26, [sp, #152]
    e484:	ldr	x2, [x20]
    e488:	cbz	x2, e598 <__interceptor_vfork@@Base+0x1078>
    e48c:	sub	x0, x2, #0x1
    e490:	tst	x0, x2
    e494:	b.ne	e604 <__interceptor_vfork@@Base+0x10e4>  // b.any
    e498:	add	x28, x2, #0x817
    e49c:	neg	x2, x2
    e4a0:	and	x28, x28, x2
    e4a4:	adrp	x27, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    e4a8:	mov	w2, #0x0                   	// #0
    e4ac:	add	x1, x27, #0xb50
    e4b0:	mov	x0, x28
    e4b4:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
    e4b8:	mov	x2, #0x0                   	// #0
    e4bc:	mov	x1, #0x0                   	// #0
    e4c0:	mov	x20, x0
    e4c4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    e4c8:	mov	x1, #0x0                   	// #0
    e4cc:	mov	x0, #0x0                   	// #0
    e4d0:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    e4d4:	cmp	x28, #0x817
    e4d8:	b.ls	e5a8 <__interceptor_vfork@@Base+0x1088>  // b.plast
    e4dc:	mov	x0, x20
    e4e0:	mov	x2, #0x818                 	// #2072
    e4e4:	mov	w1, #0x0                   	// #0
    e4e8:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    e4ec:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    e4f0:	mov	x2, x26
    e4f4:	mov	x1, x21
    e4f8:	mov	x3, x19
    e4fc:	ldr	x4, [x4, #4056]
    e500:	add	x5, x20, #0x10
    e504:	mov	x0, x20
    e508:	str	xzr, [x20, #8]
    e50c:	str	x26, [x20, #2064]
    e510:	ldrb	w4, [x4, #33]
    e514:	str	x5, [x20]
    e518:	mov	w5, #0x100                 	// #256
    e51c:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    e520:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    e524:	ldrb	w4, [x0, #4]
    e528:	cmp	w22, #0x0
    e52c:	mov	w3, w23
    e530:	ldr	x2, [sp, #104]
    e534:	cset	w6, eq  // eq = none
    e538:	orr	w4, w6, w4
    e53c:	mov	x5, #0x0                   	// #0
    e540:	mov	x1, x24
    e544:	mov	x0, x20
    e548:	bl	10be8 <__hwasan_memmove@@Base+0x2220>
    e54c:	mov	x1, x28
    e550:	mov	x0, x20
    e554:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    e558:	ldr	x0, [x19, #440]
    e55c:	ldp	x21, x22, [sp, #16]
    e560:	add	x0, x0, #0x4
    e564:	ldp	x23, x24, [sp, #32]
    e568:	ldp	x25, x26, [sp, #48]
    e56c:	ldp	x27, x28, [sp, #64]
    e570:	str	x0, [x19, #440]
    e574:	ldr	x30, [sp, #80]
    e578:	ldp	x19, x20, [sp], #176
    e57c:	ret
    e580:	ldp	x21, x22, [sp, #16]
    e584:	ldp	x23, x24, [sp, #32]
    e588:	b	e388 <__interceptor_vfork@@Base+0xe68>
    e58c:	ldr	x0, [x2, #192]
    e590:	str	x0, [sp, #104]
    e594:	b	e414 <__interceptor_vfork@@Base+0xef4>
    e598:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    e59c:	mov	x2, x0
    e5a0:	str	x0, [x20]
    e5a4:	b	e48c <__interceptor_vfork@@Base+0xf6c>
    e5a8:	ldr	x25, [x25, #4016]
    e5ac:	ldr	x0, [x25]
    e5b0:	cbz	x0, e614 <__interceptor_vfork@@Base+0x10f4>
    e5b4:	sub	x1, x0, #0x1
    e5b8:	tst	x1, x0
    e5bc:	b.ne	e604 <__interceptor_vfork@@Base+0x10e4>  // b.any
    e5c0:	add	x25, x0, #0x817
    e5c4:	neg	x0, x0
    e5c8:	and	x25, x25, x0
    e5cc:	add	x1, x27, #0xb50
    e5d0:	mov	x0, x25
    e5d4:	mov	w2, #0x0                   	// #0
    e5d8:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
    e5dc:	mov	x27, x0
    e5e0:	mov	x2, #0x0                   	// #0
    e5e4:	mov	x1, x20
    e5e8:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    e5ec:	mov	x1, x28
    e5f0:	mov	x0, x20
    e5f4:	mov	x28, x25
    e5f8:	mov	x20, x27
    e5fc:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    e600:	b	e4dc <__interceptor_vfork@@Base+0xfbc>
    e604:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    e608:	add	x0, x0, #0xb38
    e60c:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    e610:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    e614:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    e618:	str	x0, [x25]
    e61c:	b	e5b4 <__interceptor_vfork@@Base+0x1094>

000000000000e620 <__hwasan_tag_mismatch4@@Base>:
    e620:	stp	x29, x30, [sp, #-96]!
    e624:	mov	w4, #0x1                   	// #1
    e628:	mov	x29, sp
    e62c:	stp	x27, x28, [sp, #80]
    e630:	adrp	x27, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    e634:	stp	x19, x20, [sp, #16]
    e638:	ldr	x19, [x27, #4016]
    e63c:	stp	x21, x22, [sp, #32]
    e640:	mov	x21, x1
    e644:	and	x1, x1, #0xf
    e648:	stp	x23, x24, [sp, #48]
    e64c:	cmp	x1, #0xf
    e650:	lsl	w6, w4, w1
    e654:	stp	x25, x26, [sp, #64]
    e658:	sxtw	x6, w6
    e65c:	ldr	x4, [x19]
    e660:	mov	x24, x30
    e664:	mov	x23, x0
    e668:	mov	x22, x2
    e66c:	csel	x20, x6, x3, ne  // ne = any
    e670:	mov	x26, x29
    e674:	cbz	x4, e76c <__hwasan_tag_mismatch4@@Base+0x14c>
    e678:	sub	x0, x4, #0x1
    e67c:	tst	x0, x4
    e680:	b.ne	e7d8 <__hwasan_tag_mismatch4@@Base+0x1b8>  // b.any
    e684:	add	x25, x4, #0x817
    e688:	neg	x4, x4
    e68c:	and	x25, x25, x4
    e690:	mov	w2, #0x0                   	// #0
    e694:	mov	x0, x25
    e698:	adrp	x28, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    e69c:	add	x1, x28, #0xb50
    e6a0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
    e6a4:	mov	x2, #0x0                   	// #0
    e6a8:	mov	x1, #0x0                   	// #0
    e6ac:	mov	x19, x0
    e6b0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    e6b4:	mov	x1, #0x0                   	// #0
    e6b8:	mov	x0, #0x0                   	// #0
    e6bc:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    e6c0:	cmp	x25, #0x817
    e6c4:	b.ls	e77c <__hwasan_tag_mismatch4@@Base+0x15c>  // b.plast
    e6c8:	mov	x2, #0x818                 	// #2072
    e6cc:	mov	w1, #0x0                   	// #0
    e6d0:	mov	x0, x19
    e6d4:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    e6d8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    e6dc:	add	x1, x19, #0x10
    e6e0:	str	xzr, [x19, #8]
    e6e4:	mov	x2, x26
    e6e8:	ldr	x0, [x0, #4056]
    e6ec:	str	x26, [x19, #2064]
    e6f0:	mov	w5, #0x100                 	// #256
    e6f4:	mov	x3, #0x0                   	// #0
    e6f8:	ldrb	w4, [x0, #33]
    e6fc:	mov	x0, x19
    e700:	str	x1, [x19]
    e704:	mov	x1, x24
    e708:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
    e70c:	cbz	x22, e730 <__hwasan_tag_mismatch4@@Base+0x110>
    e710:	ldr	x0, [x19]
    e714:	cbz	x0, e730 <__hwasan_tag_mismatch4@@Base+0x110>
    e718:	ldr	w1, [x19, #8]
    e71c:	cbz	w1, e730 <__hwasan_tag_mismatch4@@Base+0x110>
    e720:	add	x0, x0, #0x8
    e724:	sub	w1, w1, #0x1
    e728:	str	x0, [x19]
    e72c:	str	w1, [x19, #8]
    e730:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    e734:	ldrb	w4, [x0, #4]
    e738:	ubfx	w6, w21, #5, #1
    e73c:	ubfx	w3, w21, #4, #1
    e740:	eor	w4, w4, #0x1
    e744:	mov	x5, x22
    e748:	tst	w6, w4
    e74c:	mov	x2, x20
    e750:	cset	w4, eq  // eq = none
    e754:	mov	x1, x23
    e758:	mov	x0, x19
    e75c:	bl	10be8 <__hwasan_memmove@@Base+0x2220>
    e760:	mov	x1, x25
    e764:	mov	x0, x19
    e768:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    e76c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    e770:	mov	x4, x0
    e774:	str	x0, [x19]
    e778:	b	e678 <__hwasan_tag_mismatch4@@Base+0x58>
    e77c:	ldr	x27, [x27, #4016]
    e780:	ldr	x0, [x27]
    e784:	cbz	x0, e7e8 <__hwasan_tag_mismatch4@@Base+0x1c8>
    e788:	sub	x1, x0, #0x1
    e78c:	tst	x1, x0
    e790:	b.ne	e7d8 <__hwasan_tag_mismatch4@@Base+0x1b8>  // b.any
    e794:	add	x27, x0, #0x817
    e798:	neg	x0, x0
    e79c:	and	x27, x27, x0
    e7a0:	add	x1, x28, #0xb50
    e7a4:	mov	x0, x27
    e7a8:	mov	w2, #0x0                   	// #0
    e7ac:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
    e7b0:	mov	x28, x0
    e7b4:	mov	x2, #0x0                   	// #0
    e7b8:	mov	x1, x19
    e7bc:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    e7c0:	mov	x1, x25
    e7c4:	mov	x0, x19
    e7c8:	mov	x25, x27
    e7cc:	mov	x19, x28
    e7d0:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    e7d4:	b	e6c8 <__hwasan_tag_mismatch4@@Base+0xa8>
    e7d8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    e7dc:	add	x0, x0, #0xb38
    e7e0:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    e7e4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    e7e8:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    e7ec:	str	x0, [x27]
    e7f0:	b	e788 <__hwasan_tag_mismatch4@@Base+0x168>
    e7f4:	nop

000000000000e7f8 <__hwasan_memset@@Base>:
    e7f8:	mov	x5, x0
    e7fc:	and	x0, x0, #0xffffffffffffff
    e800:	cbnz	x2, e808 <__hwasan_memset@@Base+0x10>
    e804:	b	62f0 <memset@plt>
    e808:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    e80c:	add	x8, x2, x0
    e810:	lsr	x7, x5, #56
    e814:	ldr	x3, [x3, #3848]
    e818:	lsr	x8, x8, #4
    e81c:	ldr	x9, [x3]
    e820:	add	x6, x8, x9
    e824:	add	x3, x9, x0, lsr #4
    e828:	cmp	x3, x6
    e82c:	b.cs	e848 <__hwasan_memset@@Base+0x50>  // b.hs, b.nlast
    e830:	ldrb	w4, [x3]
    e834:	cmp	w4, w7
    e838:	b.ne	e890 <__hwasan_memset@@Base+0x98>  // b.any
    e83c:	add	x3, x3, #0x1
    e840:	cmp	x6, x3
    e844:	b.ne	e830 <__hwasan_memset@@Base+0x38>  // b.any
    e848:	add	x3, x5, x2
    e84c:	ands	x4, x3, #0xf
    e850:	b.eq	e804 <__hwasan_memset@@Base+0xc>  // b.none
    e854:	ldrb	w6, [x8, x9]
    e858:	lsr	x7, x3, #56
    e85c:	and	x3, x3, #0xfffffffffffffff0
    e860:	cmp	w6, w7
    e864:	b.eq	e804 <__hwasan_memset@@Base+0xc>  // b.none
    e868:	cmp	w6, #0xf
    e86c:	b.hi	e888 <__hwasan_memset@@Base+0x90>  // b.pmore
    e870:	cmp	x4, w6, uxtb
    e874:	b.hi	e888 <__hwasan_memset@@Base+0x90>  // b.pmore
    e878:	orr	x3, x3, #0xf
    e87c:	ldrb	w3, [x3]
    e880:	cmp	w3, w7
    e884:	b.eq	e804 <__hwasan_memset@@Base+0xc>  // b.none
    e888:	brk	#0x93f
    e88c:	b	62f0 <memset@plt>
    e890:	brk	#0x93f
    e894:	b	e83c <__hwasan_memset@@Base+0x44>

000000000000e898 <__hwasan_memcpy@@Base>:
    e898:	mov	x5, x0
    e89c:	mov	x10, x1
    e8a0:	and	x0, x0, #0xffffffffffffff
    e8a4:	and	x1, x1, #0xffffffffffffff
    e8a8:	cbnz	x2, e8b0 <__hwasan_memcpy@@Base+0x18>
    e8ac:	b	61d0 <memcpy@plt>
    e8b0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    e8b4:	add	x8, x2, x0
    e8b8:	lsr	x7, x5, #56
    e8bc:	ldr	x3, [x3, #3848]
    e8c0:	lsr	x8, x8, #4
    e8c4:	ldr	x9, [x3]
    e8c8:	add	x6, x8, x9
    e8cc:	add	x3, x9, x0, lsr #4
    e8d0:	cmp	x3, x6
    e8d4:	b.cs	e8f0 <__hwasan_memcpy@@Base+0x58>  // b.hs, b.nlast
    e8d8:	ldrb	w4, [x3]
    e8dc:	cmp	w4, w7
    e8e0:	b.ne	e978 <__hwasan_memcpy@@Base+0xe0>  // b.any
    e8e4:	add	x3, x3, #0x1
    e8e8:	cmp	x6, x3
    e8ec:	b.ne	e8d8 <__hwasan_memcpy@@Base+0x40>  // b.any
    e8f0:	add	x3, x5, x2
    e8f4:	ands	x4, x3, #0xf
    e8f8:	b.ne	e988 <__hwasan_memcpy@@Base+0xf0>  // b.any
    e8fc:	add	x7, x2, x1
    e900:	add	x3, x9, x1, lsr #4
    e904:	lsr	x6, x10, #56
    e908:	lsr	x7, x7, #4
    e90c:	add	x5, x7, x9
    e910:	cmp	x3, x5
    e914:	b.cs	e930 <__hwasan_memcpy@@Base+0x98>  // b.hs, b.nlast
    e918:	ldrb	w4, [x3]
    e91c:	cmp	w4, w6
    e920:	b.ne	e980 <__hwasan_memcpy@@Base+0xe8>  // b.any
    e924:	add	x3, x3, #0x1
    e928:	cmp	x5, x3
    e92c:	b.ne	e918 <__hwasan_memcpy@@Base+0x80>  // b.any
    e930:	add	x3, x10, x2
    e934:	ands	x4, x3, #0xf
    e938:	b.eq	e8ac <__hwasan_memcpy@@Base+0x14>  // b.none
    e93c:	ldrb	w5, [x7, x9]
    e940:	lsr	x6, x3, #56
    e944:	and	x3, x3, #0xfffffffffffffff0
    e948:	cmp	w5, w6
    e94c:	b.eq	e8ac <__hwasan_memcpy@@Base+0x14>  // b.none
    e950:	cmp	w5, #0xf
    e954:	b.hi	e970 <__hwasan_memcpy@@Base+0xd8>  // b.pmore
    e958:	cmp	x4, w5, uxtb
    e95c:	b.hi	e970 <__hwasan_memcpy@@Base+0xd8>  // b.pmore
    e960:	orr	x3, x3, #0xf
    e964:	ldrb	w3, [x3]
    e968:	cmp	w3, w6
    e96c:	b.eq	e8ac <__hwasan_memcpy@@Base+0x14>  // b.none
    e970:	brk	#0x92f
    e974:	b	61d0 <memcpy@plt>
    e978:	brk	#0x93f
    e97c:	b	e8e4 <__hwasan_memcpy@@Base+0x4c>
    e980:	brk	#0x92f
    e984:	b	e924 <__hwasan_memcpy@@Base+0x8c>
    e988:	ldrb	w6, [x8, x9]
    e98c:	lsr	x7, x3, #56
    e990:	and	x3, x3, #0xfffffffffffffff0
    e994:	cmp	w6, w7
    e998:	b.eq	e8fc <__hwasan_memcpy@@Base+0x64>  // b.none
    e99c:	cmp	w6, #0xf
    e9a0:	b.hi	e9bc <__hwasan_memcpy@@Base+0x124>  // b.pmore
    e9a4:	cmp	x4, w6, uxtb
    e9a8:	b.hi	e9bc <__hwasan_memcpy@@Base+0x124>  // b.pmore
    e9ac:	orr	x3, x3, #0xf
    e9b0:	ldrb	w3, [x3]
    e9b4:	cmp	w3, w7
    e9b8:	b.eq	e8fc <__hwasan_memcpy@@Base+0x64>  // b.none
    e9bc:	brk	#0x93f
    e9c0:	b	e8fc <__hwasan_memcpy@@Base+0x64>
    e9c4:	nop

000000000000e9c8 <__hwasan_memmove@@Base>:
    e9c8:	mov	x5, x0
    e9cc:	mov	x10, x1
    e9d0:	and	x0, x0, #0xffffffffffffff
    e9d4:	and	x1, x1, #0xffffffffffffff
    e9d8:	cbnz	x2, e9e0 <__hwasan_memmove@@Base+0x18>
    e9dc:	b	64c0 <memmove@plt>
    e9e0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    e9e4:	add	x8, x2, x0
    e9e8:	lsr	x7, x5, #56
    e9ec:	ldr	x3, [x3, #3848]
    e9f0:	lsr	x8, x8, #4
    e9f4:	ldr	x9, [x3]
    e9f8:	add	x6, x8, x9
    e9fc:	add	x3, x9, x0, lsr #4
    ea00:	cmp	x3, x6
    ea04:	b.cs	ea20 <__hwasan_memmove@@Base+0x58>  // b.hs, b.nlast
    ea08:	ldrb	w4, [x3]
    ea0c:	cmp	w4, w7
    ea10:	b.ne	eaa8 <__hwasan_memmove@@Base+0xe0>  // b.any
    ea14:	add	x3, x3, #0x1
    ea18:	cmp	x6, x3
    ea1c:	b.ne	ea08 <__hwasan_memmove@@Base+0x40>  // b.any
    ea20:	add	x3, x5, x2
    ea24:	ands	x4, x3, #0xf
    ea28:	b.ne	eab8 <__hwasan_memmove@@Base+0xf0>  // b.any
    ea2c:	add	x7, x2, x1
    ea30:	add	x3, x9, x1, lsr #4
    ea34:	lsr	x6, x10, #56
    ea38:	lsr	x7, x7, #4
    ea3c:	add	x5, x7, x9
    ea40:	cmp	x3, x5
    ea44:	b.cs	ea60 <__hwasan_memmove@@Base+0x98>  // b.hs, b.nlast
    ea48:	ldrb	w4, [x3]
    ea4c:	cmp	w4, w6
    ea50:	b.ne	eab0 <__hwasan_memmove@@Base+0xe8>  // b.any
    ea54:	add	x3, x3, #0x1
    ea58:	cmp	x5, x3
    ea5c:	b.ne	ea48 <__hwasan_memmove@@Base+0x80>  // b.any
    ea60:	add	x3, x10, x2
    ea64:	ands	x4, x3, #0xf
    ea68:	b.eq	e9dc <__hwasan_memmove@@Base+0x14>  // b.none
    ea6c:	ldrb	w5, [x7, x9]
    ea70:	lsr	x6, x3, #56
    ea74:	and	x3, x3, #0xfffffffffffffff0
    ea78:	cmp	w5, w6
    ea7c:	b.eq	e9dc <__hwasan_memmove@@Base+0x14>  // b.none
    ea80:	cmp	w5, #0xf
    ea84:	b.hi	eaa0 <__hwasan_memmove@@Base+0xd8>  // b.pmore
    ea88:	cmp	x4, w5, uxtb
    ea8c:	b.hi	eaa0 <__hwasan_memmove@@Base+0xd8>  // b.pmore
    ea90:	orr	x3, x3, #0xf
    ea94:	ldrb	w3, [x3]
    ea98:	cmp	w3, w6
    ea9c:	b.eq	e9dc <__hwasan_memmove@@Base+0x14>  // b.none
    eaa0:	brk	#0x92f
    eaa4:	b	64c0 <memmove@plt>
    eaa8:	brk	#0x93f
    eaac:	b	ea14 <__hwasan_memmove@@Base+0x4c>
    eab0:	brk	#0x92f
    eab4:	b	ea54 <__hwasan_memmove@@Base+0x8c>
    eab8:	ldrb	w6, [x8, x9]
    eabc:	lsr	x7, x3, #56
    eac0:	and	x3, x3, #0xfffffffffffffff0
    eac4:	cmp	w6, w7
    eac8:	b.eq	ea2c <__hwasan_memmove@@Base+0x64>  // b.none
    eacc:	cmp	w6, #0xf
    ead0:	b.hi	eaec <__hwasan_memmove@@Base+0x124>  // b.pmore
    ead4:	cmp	x4, w6, uxtb
    ead8:	b.hi	eaec <__hwasan_memmove@@Base+0x124>  // b.pmore
    eadc:	orr	x3, x3, #0xf
    eae0:	ldrb	w3, [x3]
    eae4:	cmp	w3, w7
    eae8:	b.eq	ea2c <__hwasan_memmove@@Base+0x64>  // b.none
    eaec:	brk	#0x93f
    eaf0:	b	ea2c <__hwasan_memmove@@Base+0x64>
    eaf4:	nop
    eaf8:	stp	x19, x20, [sp, #-64]!
    eafc:	tst	x0, #0xf
    eb00:	stp	x21, x22, [sp, #16]
    eb04:	stp	x23, x24, [sp, #32]
    eb08:	stp	x25, x30, [sp, #48]
    eb0c:	b.ne	ebbc <__hwasan_memmove@@Base+0x1f4>  // b.any
    eb10:	tst	x1, #0xf
    eb14:	b.ne	ebdc <__hwasan_memmove@@Base+0x214>  // b.any
    eb18:	mov	x20, x0
    eb1c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    eb20:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    eb24:	and	w23, w2, #0xff
    eb28:	ldr	x21, [x21, #4016]
    eb2c:	lsr	x19, x1, #4
    eb30:	ldr	x0, [x0, #3848]
    eb34:	ldr	x3, [x21]
    eb38:	ldr	x22, [x0]
    eb3c:	add	x22, x22, x20, lsr #4
    eb40:	cbz	x3, ebac <__hwasan_memmove@@Base+0x1e4>
    eb44:	sub	x0, x3, #0x1
    eb48:	tst	x3, x0
    eb4c:	b.ne	ebfc <__hwasan_memmove@@Base+0x234>  // b.any
    eb50:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    eb54:	neg	x3, x3
    eb58:	add	x0, x22, x0
    eb5c:	add	x24, x19, x22
    eb60:	ldr	x1, [x1, #4056]
    eb64:	and	x21, x0, x3
    eb68:	cmp	w23, #0x0
    eb6c:	and	x25, x24, x3
    eb70:	ldr	x0, [x1, #104]
    eb74:	add	x0, x21, x0
    eb78:	ccmp	x0, x25, #0x2, eq  // eq = none
    eb7c:	b.ls	ec0c <__hwasan_memmove@@Base+0x244>  // b.plast
    eb80:	mov	x2, x19
    eb84:	mov	x0, x22
    eb88:	mov	w1, w23
    eb8c:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    eb90:	mov	x0, x20
    eb94:	bfi	x0, x23, #56, #8
    eb98:	ldp	x21, x22, [sp, #16]
    eb9c:	ldp	x23, x24, [sp, #32]
    eba0:	ldp	x25, x30, [sp, #48]
    eba4:	ldp	x19, x20, [sp], #64
    eba8:	ret
    ebac:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    ebb0:	mov	x3, x0
    ebb4:	str	x0, [x21]
    ebb8:	b	eb44 <__hwasan_memmove@@Base+0x17c>
    ebbc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    ebc0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    ebc4:	add	x2, x2, #0xf88
    ebc8:	add	x0, x0, #0xfb8
    ebcc:	mov	x4, #0x0                   	// #0
    ebd0:	mov	x3, #0x0                   	// #0
    ebd4:	mov	w1, #0x17                  	// #23
    ebd8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    ebdc:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    ebe0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    ebe4:	add	x2, x2, #0x8
    ebe8:	add	x0, x0, #0xfb8
    ebec:	mov	x4, #0x0                   	// #0
    ebf0:	mov	x3, #0x0                   	// #0
    ebf4:	mov	w1, #0x18                  	// #24
    ebf8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    ebfc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    ec00:	add	x0, x0, #0xb38
    ec04:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    ec08:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    ec0c:	sub	x2, x21, x22
    ec10:	mov	x0, x22
    ec14:	mov	w1, #0x0                   	// #0
    ec18:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    ec1c:	sub	x2, x24, x25
    ec20:	mov	x0, x25
    ec24:	mov	w1, #0x0                   	// #0
    ec28:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    ec2c:	mov	x1, x25
    ec30:	mov	x0, x21
    ec34:	bl	244a8 <__sanitizer_sandbox_on_notify@@Base+0xf20>
    ec38:	b	eb90 <__hwasan_memmove@@Base+0x1c8>
    ec3c:	nop
    ec40:	stp	x19, x20, [sp, #-64]!
    ec44:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    ec48:	mov	x20, x0
    ec4c:	stp	x21, x22, [sp, #16]
    ec50:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    ec54:	mov	x19, x1
    ec58:	ldr	x22, [x22, #4016]
    ec5c:	stp	x23, x30, [sp, #32]
    ec60:	and	w23, w2, #0xff
    ec64:	ldr	x0, [x3, #3848]
    ec68:	ldr	x3, [x22]
    ec6c:	ldr	x21, [x0]
    ec70:	cbz	x3, ecec <__hwasan_memmove@@Base+0x324>
    ec74:	sub	x4, x3, #0x1
    ec78:	tst	x4, x3
    ec7c:	b.ne	ecfc <__hwasan_memmove@@Base+0x334>  // b.any
    ec80:	adrp	x5, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    ec84:	add	x1, x19, #0xf
    ec88:	add	x1, x1, x20
    ec8c:	and	x2, x20, #0xfffffffffffffff0
    ec90:	ldr	x5, [x5, #4056]
    ec94:	and	x1, x1, #0xfffffffffffffff0
    ec98:	sub	x2, x1, x2
    ec9c:	add	x0, x21, x20, lsr #4
    eca0:	neg	x3, x3
    eca4:	add	x4, x0, x4
    eca8:	ldr	x1, [x5, #104]
    ecac:	lsr	x2, x2, #4
    ecb0:	and	x4, x4, x3
    ecb4:	add	x21, x0, x2
    ecb8:	cmp	w23, #0x0
    ecbc:	and	x19, x21, x3
    ecc0:	add	x1, x4, x1
    ecc4:	ccmp	x19, x1, #0x0, eq  // eq = none
    ecc8:	b.cs	ed0c <__hwasan_memmove@@Base+0x344>  // b.hs, b.nlast
    eccc:	mov	w1, w23
    ecd0:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    ecd4:	and	x0, x20, #0xfffffffffffff0
    ecd8:	orr	x0, x0, x23, lsl #56
    ecdc:	ldp	x21, x22, [sp, #16]
    ece0:	ldp	x23, x30, [sp, #32]
    ece4:	ldp	x19, x20, [sp], #64
    ece8:	ret
    ecec:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    ecf0:	mov	x3, x0
    ecf4:	str	x0, [x22]
    ecf8:	b	ec74 <__hwasan_memmove@@Base+0x2ac>
    ecfc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    ed00:	add	x0, x0, #0xb38
    ed04:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    ed08:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    ed0c:	sub	x2, x4, x0
    ed10:	mov	w1, #0x0                   	// #0
    ed14:	str	x4, [sp, #56]
    ed18:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    ed1c:	sub	x2, x21, x19
    ed20:	mov	x0, x19
    ed24:	mov	w1, #0x0                   	// #0
    ed28:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    ed2c:	ldr	x4, [sp, #56]
    ed30:	mov	x1, x19
    ed34:	mov	x0, x4
    ed38:	bl	244a8 <__sanitizer_sandbox_on_notify@@Base+0xf20>
    ed3c:	b	ecd4 <__hwasan_memmove@@Base+0x30c>
    ed40:	mov	x2, x1
    ed44:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    ed48:	add	x1, x1, #0x38
    ed4c:	ldrb	w2, [x2]
    ed50:	b	1fc80 <__sanitizer_on_print@@Base+0x420>
    ed54:	nop
    ed58:	mov	x2, x1
    ed5c:	ldrb	w1, [x1]
    ed60:	sub	w1, w1, #0x1
    ed64:	and	w1, w1, #0xff
    ed68:	cmp	w1, #0xf
    ed6c:	b.hi	ed94 <__hwasan_memmove@@Base+0x3cc>  // b.pmore
    ed70:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    ed74:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    ed78:	add	x1, x1, #0x38
    ed7c:	ldr	x3, [x3, #3848]
    ed80:	ldr	x3, [x3]
    ed84:	sub	x2, x2, x3
    ed88:	lsl	x2, x2, #4
    ed8c:	ldrb	w2, [x2, #15]
    ed90:	b	1fc80 <__sanitizer_on_print@@Base+0x420>
    ed94:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    ed98:	add	x1, x1, #0x40
    ed9c:	b	1fc80 <__sanitizer_on_print@@Base+0x420>
    eda0:	stp	x19, x20, [sp, #-160]!
    eda4:	stp	x21, x22, [sp, #16]
    eda8:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    edac:	mov	x22, x0
    edb0:	ldr	x20, [x21, #4016]
    edb4:	stp	x25, x26, [sp, #48]
    edb8:	add	x26, x1, #0x1
    edbc:	stp	x27, x28, [sp, #64]
    edc0:	and	x27, x0, #0xfffffffffffffff0
    edc4:	lsr	x26, x26, #1
    edc8:	ldr	x0, [x20]
    edcc:	lsr	x1, x1, #1
    edd0:	stp	x23, x24, [sp, #32]
    edd4:	mov	x23, x2
    edd8:	add	x2, x27, x26, lsl #4
    eddc:	str	x30, [sp, #80]
    ede0:	sub	x24, x27, x1, lsl #4
    ede4:	str	x2, [sp, #96]
    ede8:	cbz	x0, ee24 <__hwasan_memmove@@Base+0x45c>
    edec:	str	xzr, [sp, #128]
    edf0:	cmp	xzr, x0, lsl #3
    edf4:	stp	xzr, xzr, [sp, #136]
    edf8:	lsl	x19, x0, #3
    edfc:	b.ne	ee50 <__hwasan_memmove@@Base+0x488>  // b.any
    ee00:	stp	xzr, xzr, [sp, #144]
    ee04:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    ee08:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    ee0c:	add	x2, x2, #0x58
    ee10:	add	x0, x0, #0x5e8
    ee14:	mov	x4, #0x0                   	// #0
    ee18:	mov	x3, #0x0                   	// #0
    ee1c:	mov	w1, #0x1c5                 	// #453
    ee20:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    ee24:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    ee28:	str	x0, [x20]
    ee2c:	str	xzr, [sp, #128]
    ee30:	mov	x19, x0
    ee34:	stp	xzr, xzr, [sp, #136]
    ee38:	cmp	xzr, x0, lsl #3
    ee3c:	lsl	x1, x0, #3
    ee40:	b.eq	ee00 <__hwasan_memmove@@Base+0x438>  // b.none
    ee44:	cbnz	x0, f0ac <__hwasan_memmove@@Base+0x6e4>
    ee48:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    ee4c:	str	x0, [x20]
    ee50:	sub	x1, x0, #0x1
    ee54:	tst	x0, x1
    ee58:	b.ne	f09c <__hwasan_memmove@@Base+0x6d4>  // b.any
    ee5c:	add	x1, x1, x19
    ee60:	neg	x0, x0
    ee64:	and	x28, x1, x0
    ee68:	mov	w2, #0x0                   	// #0
    ee6c:	mov	x0, x28
    ee70:	adrp	x25, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    ee74:	add	x1, x25, #0xb50
    ee78:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
    ee7c:	ldr	x1, [sp, #128]
    ee80:	mov	x20, x0
    ee84:	ldr	x2, [sp, #144]
    ee88:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    ee8c:	ldp	x0, x1, [sp, #128]
    ee90:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    ee94:	stp	x20, x28, [sp, #128]
    ee98:	ldr	x2, [sp, #144]
    ee9c:	cmp	x19, x2
    eea0:	b.ls	f0b4 <__hwasan_memmove@@Base+0x6ec>  // b.plast
    eea4:	cmp	x28, x19
    eea8:	b.cc	f038 <__hwasan_memmove@@Base+0x670>  // b.lo, b.ul, b.last
    eeac:	add	x0, x20, x2
    eeb0:	mov	w1, #0x0                   	// #0
    eeb4:	sub	x2, x19, x2
    eeb8:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    eebc:	stp	x19, xzr, [sp, #144]
    eec0:	ldr	x20, [sp, #128]
    eec4:	cbz	x19, ee04 <__hwasan_memmove@@Base+0x43c>
    eec8:	ldr	x0, [sp, #96]
    eecc:	strb	wzr, [x20]
    eed0:	cmp	x24, x0
    eed4:	b.cs	effc <__hwasan_memmove@@Base+0x634>  // b.hs, b.nlast
    eed8:	add	x25, x24, #0x10
    eedc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    eee0:	add	x0, x0, #0x50
    eee4:	adrp	x20, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
    eee8:	mov	x21, x25
    eeec:	add	x20, x20, #0xa68
    eef0:	add	x28, sp, #0x80
    eef4:	str	x0, [sp, #112]
    eef8:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    eefc:	add	x0, x0, #0x48
    ef00:	str	x0, [sp, #120]
    ef04:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    ef08:	str	x0, [sp, #104]
    ef0c:	nop
    ef10:	ldp	x0, x2, [sp, #104]
    ef14:	cmp	x27, x24
    ef18:	mov	x26, x24
    ef1c:	add	x1, x0, #0xbf8
    ef20:	ldr	x0, [sp, #120]
    ef24:	mov	x19, x1
    ef28:	csel	x2, x0, x2, eq  // eq = none
    ef2c:	mov	x0, x28
    ef30:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
    ef34:	mov	x2, x24
    ef38:	adrp	x24, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    ef3c:	add	x24, x24, #0x78
    ef40:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    ef44:	add	x1, x0, #0x70
    ef48:	mov	x0, x28
    ef4c:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
    ef50:	cmp	x26, x22
    ef54:	b.eq	efbc <__hwasan_memmove@@Base+0x5f4>  // b.none
    ef58:	mov	x2, x20
    ef5c:	mov	x1, x19
    ef60:	mov	x0, x28
    ef64:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
    ef68:	mov	x1, x26
    ef6c:	mov	x0, x28
    ef70:	blr	x23
    ef74:	add	x26, x26, #0x1
    ef78:	mov	x2, x20
    ef7c:	mov	x1, x19
    ef80:	mov	x0, x28
    ef84:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
    ef88:	cmp	x26, x21
    ef8c:	b.ne	ef50 <__hwasan_memmove@@Base+0x588>  // b.any
    ef90:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
    ef94:	add	x1, x0, #0xf40
    ef98:	mov	x0, x28
    ef9c:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
    efa0:	ldr	x0, [sp, #96]
    efa4:	add	x21, x21, #0x10
    efa8:	mov	x24, x25
    efac:	cmp	x0, x25
    efb0:	b.ls	f004 <__hwasan_memmove@@Base+0x63c>  // b.plast
    efb4:	add	x25, x25, #0x10
    efb8:	b	ef10 <__hwasan_memmove@@Base+0x548>
    efbc:	mov	x2, x24
    efc0:	mov	x1, x19
    efc4:	mov	x0, x28
    efc8:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
    efcc:	mov	x1, x26
    efd0:	mov	x0, x28
    efd4:	blr	x23
    efd8:	add	x26, x26, #0x1
    efdc:	mov	x1, x19
    efe0:	mov	x0, x28
    efe4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
    efe8:	add	x2, x2, #0xd58
    efec:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
    eff0:	cmp	x26, x21
    eff4:	b.ne	ef50 <__hwasan_memmove@@Base+0x588>  // b.any
    eff8:	b	ef90 <__hwasan_memmove@@Base+0x5c8>
    effc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    f000:	str	x0, [sp, #104]
    f004:	ldr	x1, [sp, #128]
    f008:	ldr	x0, [sp, #104]
    f00c:	add	x0, x0, #0xbf8
    f010:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f014:	ldp	x0, x1, [sp, #128]
    f018:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    f01c:	ldp	x21, x22, [sp, #16]
    f020:	ldp	x23, x24, [sp, #32]
    f024:	ldp	x25, x26, [sp, #48]
    f028:	ldp	x27, x28, [sp, #64]
    f02c:	ldr	x30, [sp, #80]
    f030:	ldp	x19, x20, [sp], #160
    f034:	ret
    f038:	ldr	x21, [x21, #4016]
    f03c:	ldr	x0, [x21]
    f040:	cbz	x0, f090 <__hwasan_memmove@@Base+0x6c8>
    f044:	sub	x1, x0, #0x1
    f048:	tst	x1, x0
    f04c:	b.ne	f09c <__hwasan_memmove@@Base+0x6d4>  // b.any
    f050:	add	x1, x19, x1
    f054:	neg	x0, x0
    f058:	and	x21, x1, x0
    f05c:	mov	w2, #0x0                   	// #0
    f060:	add	x1, x25, #0xb50
    f064:	mov	x0, x21
    f068:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
    f06c:	mov	x20, x0
    f070:	ldr	x1, [sp, #128]
    f074:	ldr	x2, [sp, #144]
    f078:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    f07c:	ldp	x0, x1, [sp, #128]
    f080:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    f084:	stp	x20, x21, [sp, #128]
    f088:	ldr	x2, [sp, #144]
    f08c:	b	eeac <__hwasan_memmove@@Base+0x4e4>
    f090:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    f094:	str	x0, [x21]
    f098:	b	f044 <__hwasan_memmove@@Base+0x67c>
    f09c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    f0a0:	add	x0, x0, #0xb38
    f0a4:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    f0a8:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    f0ac:	mov	x19, x1
    f0b0:	b	ee50 <__hwasan_memmove@@Base+0x488>
    f0b4:	stp	x19, xzr, [sp, #144]
    f0b8:	b	eec8 <__hwasan_memmove@@Base+0x500>
    f0bc:	nop
    f0c0:	stp	x19, x20, [sp, #-80]!
    f0c4:	mov	x20, x0
    f0c8:	stp	x23, x24, [sp, #32]
    f0cc:	adrp	x23, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    f0d0:	add	x19, x23, #0xac8
    f0d4:	mov	x0, x19
    f0d8:	str	x30, [sp, #64]
    f0dc:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
    f0e0:	ldr	x0, [x19, #88]
    f0e4:	cbz	x0, f188 <__hwasan_memmove@@Base+0x7c0>
    f0e8:	mov	x0, x20
    f0ec:	stp	x21, x22, [sp, #16]
    f0f0:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
    f0f4:	ldr	x22, [x19, #88]
    f0f8:	mov	x21, x0
    f0fc:	ldr	x19, [x22, #16]
    f100:	add	x24, x0, x19
    f104:	cmp	x19, x24
    f108:	b.cs	f144 <__hwasan_memmove@@Base+0x77c>  // b.hs, b.nlast
    f10c:	ldr	x0, [x22, #8]
    f110:	stp	x25, x26, [sp, #48]
    f114:	cmp	x24, x0
    f118:	b.hi	f19c <__hwasan_memmove@@Base+0x7d4>  // b.pmore
    f11c:	ldr	x25, [x22]
    f120:	mov	x2, x21
    f124:	mov	x0, x19
    f128:	add	x0, x25, x0
    f12c:	mov	w1, #0x0                   	// #0
    f130:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    f134:	add	x0, x23, #0xac8
    f138:	ldp	x25, x26, [sp, #48]
    f13c:	ldr	x1, [x0, #88]
    f140:	b	f148 <__hwasan_memmove@@Base+0x780>
    f144:	mov	x1, x22
    f148:	ldr	x0, [x1]
    f14c:	str	x24, [x22, #16]
    f150:	sub	x3, x19, #0x1
    f154:	ldr	x4, [x1, #16]
    f158:	cmp	x3, x4
    f15c:	b.cs	f200 <__hwasan_memmove@@Base+0x838>  // b.hs, b.nlast
    f160:	mov	x2, x21
    f164:	mov	x1, x20
    f168:	add	x0, x0, x3
    f16c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    f170:	add	x0, x23, #0xac8
    f174:	ldp	x21, x22, [sp, #16]
    f178:	ldp	x23, x24, [sp, #32]
    f17c:	ldr	x30, [sp, #64]
    f180:	ldp	x19, x20, [sp], #80
    f184:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
    f188:	mov	x0, x19
    f18c:	ldp	x23, x24, [sp, #32]
    f190:	ldr	x30, [sp, #64]
    f194:	ldp	x19, x20, [sp], #80
    f198:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
    f19c:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    f1a0:	ldr	x25, [x25, #4016]
    f1a4:	ldr	x0, [x25]
    f1a8:	cbz	x0, f21c <__hwasan_memmove@@Base+0x854>
    f1ac:	sub	x1, x0, #0x1
    f1b0:	tst	x0, x1
    f1b4:	b.ne	f228 <__hwasan_memmove@@Base+0x860>  // b.any
    f1b8:	add	x1, x24, x1
    f1bc:	neg	x0, x0
    f1c0:	and	x26, x1, x0
    f1c4:	mov	w2, #0x0                   	// #0
    f1c8:	mov	x0, x26
    f1cc:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    f1d0:	add	x1, x1, #0xb50
    f1d4:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
    f1d8:	ldr	x1, [x22]
    f1dc:	mov	x25, x0
    f1e0:	ldr	x2, [x22, #16]
    f1e4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    f1e8:	ldp	x0, x1, [x22]
    f1ec:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    f1f0:	stp	x25, x26, [x22]
    f1f4:	ldr	x0, [x22, #16]
    f1f8:	sub	x2, x24, x0
    f1fc:	b	f128 <__hwasan_memmove@@Base+0x760>
    f200:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f204:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    f208:	add	x2, x2, #0x58
    f20c:	add	x0, x0, #0x5e8
    f210:	mov	w1, #0x1c5                 	// #453
    f214:	stp	x25, x26, [sp, #48]
    f218:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    f21c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    f220:	str	x0, [x25]
    f224:	b	f1ac <__hwasan_memmove@@Base+0x7e4>
    f228:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    f22c:	add	x0, x0, #0xb38
    f230:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    f234:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    f238:	cbz	x0, f2f8 <__hwasan_memmove@@Base+0x930>
    f23c:	mov	x5, x0
    f240:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f244:	movk	x8, #0xaaab
    f248:	ldr	x3, [x5], #16
    f24c:	add	x4, x3, #0x18
    f250:	sub	x4, x4, x5
    f254:	asr	x4, x4, #3
    f258:	mul	x4, x4, x8
    f25c:	cbz	x4, f2f8 <__hwasan_memmove@@Base+0x930>
    f260:	ldr	x7, [x0, #8]
    f264:	sub	sp, sp, #0x20
    f268:	add	x10, sp, #0x8
    f26c:	mov	x0, #0x0                   	// #0
    f270:	sub	x6, x3, x7
    f274:	asr	x6, x6, #3
    f278:	mul	x6, x6, x8
    f27c:	nop
    f280:	add	x0, x0, #0x1
    f284:	cmp	x6, x0
    f288:	sub	x3, x0, x4
    f28c:	csel	x3, x3, x0, lt  // lt = tstop
    f290:	add	x3, x3, x3, lsl #1
    f294:	add	x5, x7, x3, lsl #3
    f298:	ldr	x3, [x7, x3, lsl #3]
    f29c:	ldp	x8, x9, [x5]
    f2a0:	stp	x8, x9, [x10]
    f2a4:	cmp	x3, x1
    f2a8:	ldr	x8, [x5, #16]
    f2ac:	str	x8, [x10, #16]
    f2b0:	b.hi	f2c4 <__hwasan_memmove@@Base+0x8fc>  // b.pmore
    f2b4:	ldr	w5, [x5, #16]
    f2b8:	add	x8, x3, w5, uxtw
    f2bc:	cmp	x8, x1
    f2c0:	b.hi	f2d8 <__hwasan_memmove@@Base+0x910>  // b.pmore
    f2c4:	cmp	x4, x0
    f2c8:	b.ne	f280 <__hwasan_memmove@@Base+0x8b8>  // b.any
    f2cc:	mov	x0, #0x0                   	// #0
    f2d0:	add	sp, sp, #0x20
    f2d4:	ret
    f2d8:	str	x3, [sp, #8]
    f2dc:	str	w5, [sp, #24]
    f2e0:	ldp	x4, x5, [x10]
    f2e4:	stp	x4, x5, [x2]
    f2e8:	ldr	x1, [x10, #16]
    f2ec:	str	x1, [x2, #16]
    f2f0:	add	sp, sp, #0x20
    f2f4:	ret
    f2f8:	mov	x0, #0x0                   	// #0
    f2fc:	ret
    f300:	sub	sp, sp, #0x150
    f304:	stp	x19, x20, [sp, #16]
    f308:	and	x20, x0, #0xffffffffffffff
    f30c:	stp	x21, x22, [sp, #32]
    f310:	add	x21, sp, #0xd8
    f314:	stp	x23, x24, [sp, #48]
    f318:	mov	x23, x0
    f31c:	stp	x25, x26, [sp, #64]
    f320:	stp	x27, x28, [sp, #80]
    f324:	str	x30, [sp, #96]
    f328:	str	x2, [sp, #168]
    f32c:	bl	2c890 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
    f330:	and	w28, w0, #0xff
    f334:	mov	x0, x20
    f338:	bl	8a20 <__sanitizer_print_stack_trace@@Base+0x808>
    f33c:	mov	x2, x0
    f340:	mov	x3, x1
    f344:	mov	x0, x21
    f348:	stp	x2, x3, [sp, #216]
    f34c:	bl	85a0 <__sanitizer_print_stack_trace@@Base+0x388>
    f350:	cbnz	x0, f8d4 <__hwasan_memmove@@Base+0xf0c>
    f354:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    f358:	lsr	x19, x20, #4
    f35c:	lsr	x21, x23, #56
    f360:	ldr	x0, [x0, #3848]
    f364:	lsl	x4, x19, #5
    f368:	lsl	x22, x19, #4
    f36c:	add	x6, x4, #0xf
    f370:	ldr	x2, [x0]
    f374:	add	x19, x2, x19
    f378:	sub	x5, x19, #0x3e8
    f37c:	lsl	x3, x19, #1
    f380:	ldrb	w0, [x19]
    f384:	sub	x1, x3, x19
    f388:	cmp	w21, w0
    f38c:	b.eq	f3f4 <__hwasan_memmove@@Base+0xa2c>  // b.none
    f390:	sub	w0, w0, #0x1
    f394:	and	w0, w0, #0xff
    f398:	cmp	w0, #0xe
    f39c:	b.hi	f3ac <__hwasan_memmove@@Base+0x9e4>  // b.pmore
    f3a0:	ldrb	w0, [x22, #15]
    f3a4:	cmp	w0, w21
    f3a8:	b.eq	fe74 <__hwasan_memmove@@Base+0x14ac>  // b.none
    f3ac:	ldrb	w0, [x1]
    f3b0:	sub	x19, x19, #0x1
    f3b4:	cmp	w21, w0
    f3b8:	b.eq	f8c0 <__hwasan_memmove@@Base+0xef8>  // b.none
    f3bc:	sub	w0, w0, #0x1
    f3c0:	and	w0, w0, #0xff
    f3c4:	cmp	w0, #0xe
    f3c8:	b.hi	f3e0 <__hwasan_memmove@@Base+0xa18>  // b.pmore
    f3cc:	sub	x0, x6, x22
    f3d0:	sub	x7, x4, x22
    f3d4:	ldrb	w0, [x0]
    f3d8:	cmp	w0, w21
    f3dc:	b.eq	fe7c <__hwasan_memmove@@Base+0x14b4>  // b.none
    f3e0:	sub	x22, x22, #0x10
    f3e4:	cmp	x19, x5
    f3e8:	b.ne	f380 <__hwasan_memmove@@Base+0x9b8>  // b.any
    f3ec:	str	wzr, [sp, #124]
    f3f0:	b	f510 <__hwasan_memmove@@Base+0xb48>
    f3f4:	sub	x22, x19, x2
    f3f8:	mov	x24, x19
    f3fc:	lsl	x22, x22, #4
    f400:	mov	x0, x22
    f404:	bl	8a20 <__sanitizer_print_stack_trace@@Base+0x808>
    f408:	mov	x2, x0
    f40c:	mov	x3, x1
    f410:	add	x25, sp, #0xe8
    f414:	stp	x2, x3, [sp, #232]
    f418:	mov	x0, x25
    f41c:	bl	8578 <__sanitizer_print_stack_trace@@Base+0x360>
    f420:	tst	w0, #0xff
    f424:	b.eq	f9a0 <__hwasan_memmove@@Base+0xfd8>  // b.none
    f428:	cmp	w28, #0x0
    f42c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
    f430:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f434:	add	x0, x0, #0x328
    f438:	add	x1, x1, #0x80
    f43c:	adrp	x22, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    f440:	csel	x1, x1, x0, ne  // ne = any
    f444:	add	x0, x22, #0xbf8
    f448:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f44c:	mov	x0, x25
    f450:	cmp	x19, x24
    f454:	b.eq	fe0c <__hwasan_memmove@@Base+0x1444>  // b.none
    f458:	adrp	x27, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f45c:	bl	85a0 <__sanitizer_print_stack_trace@@Base+0x388>
    f460:	add	x27, x27, #0xd8
    f464:	sub	x26, x0, x20
    f468:	mov	x0, x25
    f46c:	bl	8620 <__sanitizer_print_stack_trace@@Base+0x408>
    f470:	mov	x19, x0
    f474:	mov	x0, x25
    f478:	bl	85a0 <__sanitizer_print_stack_trace@@Base+0x388>
    f47c:	mov	x24, x0
    f480:	mov	x0, x25
    f484:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x3c0>
    f488:	mov	x5, x24
    f48c:	mov	x6, x0
    f490:	mov	x4, x19
    f494:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f498:	mov	x3, x27
    f49c:	mov	x2, x26
    f4a0:	mov	x1, x20
    f4a4:	add	x0, x0, #0x130
    f4a8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f4ac:	cbnz	w28, f978 <__hwasan_memmove@@Base+0xfb0>
    f4b0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
    f4b4:	add	x19, x1, #0x328
    f4b8:	mov	x1, x19
    f4bc:	add	x0, x22, #0xbf8
    f4c0:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f4c4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f4c8:	add	x0, x0, #0x4a8
    f4cc:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f4d0:	mov	x1, x19
    f4d4:	add	x0, x22, #0xbf8
    f4d8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f4dc:	mov	x0, x25
    f4e0:	bl	8630 <__sanitizer_print_stack_trace@@Base+0x418>
    f4e4:	cbz	w0, fd1c <__hwasan_memmove@@Base+0x1354>
    f4e8:	bl	27070 <__sanitizer_cov_dump@@Base+0x510>
    f4ec:	mov	x2, x0
    f4f0:	fmov	d0, x1
    f4f4:	cbz	x0, fd84 <__hwasan_memmove@@Base+0x13bc>
    f4f8:	mov	w1, #0x1                   	// #1
    f4fc:	add	x0, sp, #0x110
    f500:	str	w1, [sp, #124]
    f504:	str	x2, [sp, #272]
    f508:	str	d0, [sp, #280]
    f50c:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
    f510:	bl	11880 <__hwasan_tag_mismatch_v2@@Base+0x688>
    f514:	str	x0, [sp, #128]
    f518:	add	x0, x0, #0x30
    f51c:	mov	w2, #0x1                   	// #1
    f520:	ldxrb	w1, [x0]
    f524:	stxrb	w3, w2, [x0]
    f528:	cbnz	w3, f520 <__hwasan_memmove@@Base+0xb58>
    f52c:	dmb	ish
    f530:	tst	w1, #0xff
    f534:	b.eq	f53c <__hwasan_memmove@@Base+0xb74>  // b.none
    f538:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    f53c:	ldr	x0, [sp, #128]
    f540:	ldr	x19, [x0, #40]
    f544:	cbz	x19, fbf8 <__hwasan_memmove@@Base+0x1230>
    f548:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f54c:	add	x2, x0, #0xc0
    f550:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
    f554:	cmp	w28, #0x0
    f558:	add	x1, x0, #0x328
    f55c:	add	x25, sp, #0x110
    f560:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f564:	add	x0, x0, #0x370
    f568:	csel	x1, x2, x1, ne  // ne = any
    f56c:	stp	w28, w21, [sp, #136]
    f570:	stp	x1, x0, [sp, #152]
    f574:	add	x0, sp, #0xf8
    f578:	str	x0, [sp, #112]
    f57c:	ldr	x2, [sp, #112]
    f580:	mov	x1, x23
    f584:	ldr	x0, [x19, #2648]
    f588:	bl	f238 <__hwasan_memmove@@Base+0x870>
    f58c:	mov	x22, x0
    f590:	cbz	x0, f6d4 <__hwasan_memmove@@Base+0xd0c>
    f594:	ldr	w0, [sp, #136]
    f598:	cbz	w0, fca4 <__hwasan_memmove@@Base+0x12dc>
    f59c:	adrp	x21, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    f5a0:	add	x26, x21, #0xbf8
    f5a4:	mov	x0, x26
    f5a8:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f5ac:	add	x1, x1, #0x80
    f5b0:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f5b4:	ldr	x4, [sp, #248]
    f5b8:	mov	x1, x20
    f5bc:	ldr	w3, [sp, #264]
    f5c0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f5c4:	and	x4, x4, #0xffffffffffffff
    f5c8:	add	x0, x0, #0x448
    f5cc:	sub	x2, x20, x4
    f5d0:	adrp	x24, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f5d4:	add	x5, x4, w3, uxtw
    f5d8:	add	x24, x24, #0xe0
    f5dc:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f5e0:	add	x21, x21, #0xbf8
    f5e4:	mov	x0, x26
    f5e8:	mov	x1, x24
    f5ec:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f5f0:	ldr	x1, [x19, #2672]
    f5f4:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f5f8:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f5fc:	add	x26, x2, #0xc0
    f600:	add	x0, x0, #0x488
    f604:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f608:	mov	x0, x21
    f60c:	mov	x1, x26
    f610:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f614:	ldr	w0, [sp, #260]
    f618:	cbz	w0, fd1c <__hwasan_memmove@@Base+0x1354>
    f61c:	bl	27070 <__sanitizer_cov_dump@@Base+0x510>
    f620:	mov	x2, x0
    f624:	fmov	d0, x1
    f628:	cbz	x0, fd84 <__hwasan_memmove@@Base+0x13bc>
    f62c:	mov	x0, x25
    f630:	str	x2, [sp, #272]
    f634:	str	d0, [sp, #280]
    f638:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
    f63c:	mov	x1, x24
    f640:	mov	x0, x21
    f644:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f648:	mov	x1, x19
    f64c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f650:	add	x0, x0, #0x270
    f654:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f658:	mov	x0, x21
    f65c:	mov	x1, x26
    f660:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f664:	ldr	w0, [sp, #256]
    f668:	cbz	w0, fd1c <__hwasan_memmove@@Base+0x1354>
    f66c:	bl	27070 <__sanitizer_cov_dump@@Base+0x510>
    f670:	mov	x2, x0
    f674:	fmov	d0, x1
    f678:	cbz	x0, fd84 <__hwasan_memmove@@Base+0x13bc>
    f67c:	mov	x0, x25
    f680:	str	x2, [sp, #272]
    f684:	str	d0, [sp, #280]
    f688:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
    f68c:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    f690:	mov	x2, x0
    f694:	mov	x1, x22
    f698:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f69c:	add	x0, x0, #0x290
    f6a0:	ldr	w2, [x2, #28]
    f6a4:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f6a8:	ldrb	w0, [x19, #2684]
    f6ac:	cbnz	w0, f6c8 <__hwasan_memmove@@Base+0xd00>
    f6b0:	mov	w0, #0x1                   	// #1
    f6b4:	strb	w0, [x19, #2684]
    f6b8:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f6bc:	mov	x0, x19
    f6c0:	add	x1, x1, #0x2c0
    f6c4:	bl	117a0 <__hwasan_tag_mismatch_v2@@Base+0x5a8>
    f6c8:	ldr	w0, [sp, #124]
    f6cc:	add	w0, w0, #0x1
    f6d0:	str	w0, [sp, #124]
    f6d4:	ldr	x0, [x19, #16]
    f6d8:	cmp	x20, x0
    f6dc:	b.cc	fbf0 <__hwasan_memmove@@Base+0x1228>  // b.lo, b.ul, b.last
    f6e0:	ldr	x0, [x19, #8]
    f6e4:	cmp	x20, x0
    f6e8:	b.cs	fbf0 <__hwasan_memmove@@Base+0x1228>  // b.hs, b.nlast
    f6ec:	ldr	w0, [sp, #136]
    f6f0:	cbz	w0, fd3c <__hwasan_memmove@@Base+0x1374>
    f6f4:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f6f8:	adrp	x21, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    f6fc:	add	x1, x1, #0x80
    f700:	add	x0, x21, #0xbf8
    f704:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f708:	ldr	x2, [x19, #2672]
    f70c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f710:	mov	x1, x20
    f714:	add	x0, x0, #0x418
    f718:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f71c:	ldr	x1, [sp, #152]
    f720:	add	x0, x21, #0xbf8
    f724:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f728:	ldrb	w0, [x19, #2684]
    f72c:	cbnz	w0, f748 <__hwasan_memmove@@Base+0xd80>
    f730:	mov	w0, #0x1                   	// #1
    f734:	strb	w0, [x19, #2684]
    f738:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f73c:	mov	x0, x19
    f740:	add	x1, x1, #0x2c0
    f744:	bl	117a0 <__hwasan_tag_mismatch_v2@@Base+0x5a8>
    f748:	bl	e338 <__interceptor_vfork@@Base+0xe18>
    f74c:	cmp	x19, x0
    f750:	b.eq	fa2c <__hwasan_memmove@@Base+0x1064>  // b.none
    f754:	ldr	x26, [x19, #2656]
    f758:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    f75c:	ldr	x1, [x26]
    f760:	ldrsw	x0, [x0, #36]
    f764:	lsr	x4, x1, #56
    f768:	lsl	x27, x4, #9
    f76c:	cmp	x27, x0
    f770:	csel	x27, x27, x0, ls  // ls = plast
    f774:	cbz	x27, fdb4 <__hwasan_memmove@@Base+0x13ec>
    f778:	mov	x28, #0x0                   	// #0
    f77c:	mov	x24, x28
    f780:	str	wzr, [sp, #144]
    f784:	stp	x19, x23, [sp, #176]
    f788:	str	x21, [sp, #192]
    f78c:	b	f7ac <__hwasan_memmove@@Base+0xde4>
    f790:	ldp	x0, x1, [sp, #296]
    f794:	add	x24, x24, #0x1
    f798:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    f79c:	cmp	x27, x24
    f7a0:	b.eq	fda4 <__hwasan_memmove@@Base+0x13dc>  // b.none
    f7a4:	ldr	x1, [x26]
    f7a8:	lsr	x4, x1, #56
    f7ac:	cmp	x24, x4, lsl #9
    f7b0:	lsl	x0, x4, #12
    f7b4:	lsl	x4, x4, #9
    f7b8:	b.cs	fd68 <__hwasan_memmove@@Base+0x13a0>  // b.hs, b.nlast
    f7bc:	and	x3, x1, #0xffffffffffffff
    f7c0:	neg	x1, x0
    f7c4:	bic	x2, x3, x1
    f7c8:	mvn	x0, x24
    f7cc:	and	x1, x1, x3
    f7d0:	adds	x0, x0, x2, lsr #3
    f7d4:	add	x4, x0, x4
    f7d8:	csel	x0, x4, x0, mi  // mi = first
    f7dc:	add	x19, x1, x0, lsl #3
    f7e0:	ldr	x22, [x1, x0, lsl #3]
    f7e4:	cbz	x22, fda4 <__hwasan_memmove@@Base+0x13dc>
    f7e8:	str	xzr, [sp, #296]
    f7ec:	stp	xzr, xzr, [sp, #304]
    f7f0:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
    f7f4:	mov	x2, x25
    f7f8:	and	x1, x22, #0xffffffffffff
    f7fc:	bl	2a080 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1858>
    f800:	tst	w0, #0xff
    f804:	b.eq	f790 <__hwasan_memmove@@Base+0xdc8>  // b.none
    f808:	ldr	x0, [sp, #312]
    f80c:	ldr	x5, [sp, #296]
    f810:	lsl	x7, x0, #3
    f814:	sub	x7, x7, x0
    f818:	add	x23, x5, x7, lsl #3
    f81c:	cmp	x5, x23
    f820:	b.eq	f8b4 <__hwasan_memmove@@Base+0xeec>  // b.none
    f824:	lsr	x22, x22, #48
    f828:	adrp	x28, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f82c:	add	x28, x28, #0x348
    f830:	mov	x21, x5
    f834:	ubfx	w19, w19, #3, #8
    f838:	sub	x22, x20, x22, lsl #4
    f83c:	str	x28, [sp, #200]
    f840:	mov	x28, x23
    f844:	nop
    f848:	ldrb	w0, [x21, #28]
    f84c:	cbz	w0, f8a8 <__hwasan_memmove@@Base+0xee0>
    f850:	ldrb	w0, [x21, #29]
    f854:	cbz	w0, f8a8 <__hwasan_memmove@@Base+0xee0>
    f858:	ldrb	w23, [x21, #30]
    f85c:	cbz	w23, f8a8 <__hwasan_memmove@@Base+0xee0>
    f860:	ldrb	w0, [x21, #48]
    f864:	ldr	w1, [sp, #140]
    f868:	eor	w0, w0, w19
    f86c:	cmp	w1, w0
    f870:	b.ne	f8a8 <__hwasan_memmove@@Base+0xee0>  // b.any
    f874:	ldp	x0, x1, [x21, #32]
    f878:	sub	x0, x22, x0
    f87c:	and	x0, x0, #0xfffff
    f880:	cmp	x0, x1
    f884:	b.cs	f8a8 <__hwasan_memmove@@Base+0xee0>  // b.hs, b.nlast
    f888:	ldr	w0, [sp, #144]
    f88c:	cbz	w0, fe00 <__hwasan_memmove@@Base+0x1438>
    f890:	ldp	x2, x1, [x21]
    f894:	str	w23, [sp, #144]
    f898:	ldr	w4, [x21, #24]
    f89c:	ldr	x3, [x21, #16]
    f8a0:	ldr	x0, [sp, #160]
    f8a4:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f8a8:	add	x21, x21, #0x38
    f8ac:	cmp	x28, x21
    f8b0:	b.ne	f848 <__hwasan_memmove@@Base+0xe80>  // b.any
    f8b4:	mov	x0, x25
    f8b8:	bl	29220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9f8>
    f8bc:	b	f790 <__hwasan_memmove@@Base+0xdc8>
    f8c0:	sub	x22, x1, x2
    f8c4:	mov	x24, x19
    f8c8:	mov	x19, x1
    f8cc:	lsl	x22, x22, #4
    f8d0:	b	f400 <__hwasan_memmove@@Base+0xa38>
    f8d4:	mov	x19, x0
    f8d8:	mov	x0, x21
    f8dc:	bl	8640 <__sanitizer_print_stack_trace@@Base+0x428>
    f8e0:	adrp	x22, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f8e4:	cmp	w28, #0x0
    f8e8:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
    f8ec:	add	x22, x22, #0x80
    f8f0:	add	x25, x1, #0x328
    f8f4:	mov	x24, x0
    f8f8:	csel	x22, x22, x25, ne  // ne = any
    f8fc:	mov	x0, x21
    f900:	bl	8720 <__sanitizer_print_stack_trace@@Base+0x508>
    f904:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f908:	tst	w0, #0xff
    f90c:	add	x1, x1, #0x98
    f910:	adrp	x4, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f914:	add	x4, x4, #0x90
    f918:	mov	x0, x21
    f91c:	csel	x21, x4, x1, ne  // ne = any
    f920:	bl	8578 <__sanitizer_print_stack_trace@@Base+0x360>
    f924:	tst	w0, #0xff
    f928:	adrp	x5, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f92c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f930:	add	x5, x5, #0xa0
    f934:	add	x0, x0, #0xb0
    f938:	csel	x5, x5, x0, ne  // ne = any
    f93c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f940:	cmp	w28, #0x0
    f944:	add	x1, x1, #0xc0
    f948:	csel	x1, x1, x25, ne  // ne = any
    f94c:	str	x1, [sp]
    f950:	add	x3, x19, x24
    f954:	mov	x4, x21
    f958:	mov	x6, x24
    f95c:	sub	x7, x20, x19
    f960:	mov	x2, x19
    f964:	mov	x1, x22
    f968:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f96c:	add	x0, x0, #0xf0
    f970:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f974:	b	f354 <__hwasan_memmove@@Base+0x98c>
    f978:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f97c:	add	x1, x1, #0xe0
    f980:	add	x0, x22, #0xbf8
    f984:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f988:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f98c:	add	x0, x0, #0x4a8
    f990:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    f994:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    f998:	add	x1, x1, #0xc0
    f99c:	b	f4d4 <__hwasan_memmove@@Base+0xb0c>
    f9a0:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
    f9a4:	mov	x25, x0
    f9a8:	add	x3, sp, #0xf8
    f9ac:	add	x2, sp, #0xd0
    f9b0:	mov	x1, x22
    f9b4:	bl	29fe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b8>
    f9b8:	str	wzr, [sp, #124]
    f9bc:	tst	w0, #0xff
    f9c0:	b.eq	f510 <__hwasan_memmove@@Base+0xb48>  // b.none
    f9c4:	add	x26, sp, #0x110
    f9c8:	mov	x0, x26
    f9cc:	bl	291d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9a8>
    f9d0:	mov	x2, x26
    f9d4:	mov	x1, x22
    f9d8:	mov	x0, x25
    f9dc:	bl	2ab90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2368>
    f9e0:	tst	w0, #0xff
    f9e4:	b.eq	fe30 <__hwasan_memmove@@Base+0x1468>  // b.none
    f9e8:	ldr	x6, [sp, #320]
    f9ec:	cbz	x6, fe30 <__hwasan_memmove@@Base+0x1468>
    f9f0:	ldr	x4, [sp, #328]
    f9f4:	cmp	x19, x24
    f9f8:	add	x7, x6, x4
    f9fc:	b.eq	ff0c <__hwasan_memmove@@Base+0x1544>  // b.none
    fa00:	adrp	x3, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fa04:	sub	x2, x6, x20
    fa08:	add	x3, x3, #0xd8
    fa0c:	ldr	x5, [sp, #312]
    fa10:	mov	x1, x20
    fa14:	ldr	x0, [sp, #208]
    fa18:	str	x0, [sp]
    fa1c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fa20:	add	x0, x0, #0x1e0
    fa24:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    fa28:	b	fe60 <__hwasan_memmove@@Base+0x1498>
    fa2c:	ldr	x0, [sp, #168]
    fa30:	mov	x26, x0
    fa34:	cbnz	x0, f758 <__hwasan_memmove@@Base+0xd90>
    fa38:	b	f754 <__hwasan_memmove@@Base+0xd8c>
    fa3c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    fa40:	str	xzr, [sp, #272]
    fa44:	add	x1, sp, #0x200
    fa48:	str	x0, [x22]
    fa4c:	cmp	xzr, x0, lsl #1
    fa50:	lsl	x28, x0, #1
    fa54:	stp	xzr, xzr, [x1, #-232]
    fa58:	b.eq	fddc <__hwasan_memmove@@Base+0x1414>  // b.none
    fa5c:	cbnz	x0, fa68 <__hwasan_memmove@@Base+0x10a0>
    fa60:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    fa64:	str	x0, [x22]
    fa68:	sub	x1, x0, #0x1
    fa6c:	ands	x24, x0, x1
    fa70:	b.ne	fefc <__hwasan_memmove@@Base+0x1534>  // b.any
    fa74:	add	x1, x28, x1
    fa78:	neg	x0, x0
    fa7c:	and	x4, x1, x0
    fa80:	adrp	x6, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    fa84:	mov	x0, x4
    fa88:	add	x1, x6, #0xb50
    fa8c:	mov	w2, #0x0                   	// #0
    fa90:	str	x4, [sp, #144]
    fa94:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
    fa98:	mov	x22, x0
    fa9c:	ldr	x1, [sp, #272]
    faa0:	ldr	x2, [sp, #288]
    faa4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    faa8:	ldp	x0, x1, [sp, #272]
    faac:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    fab0:	ldr	x4, [sp, #144]
    fab4:	stp	x22, x4, [sp, #272]
    fab8:	ldr	x2, [sp, #288]
    fabc:	cmp	x2, x28
    fac0:	b.cs	ff1c <__hwasan_memmove@@Base+0x1554>  // b.hs, b.nlast
    fac4:	cmp	x28, x4
    fac8:	adrp	x6, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    facc:	adrp	x5, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    fad0:	b.hi	fe8c <__hwasan_memmove@@Base+0x14c4>  // b.pmore
    fad4:	add	x0, x22, x2
    fad8:	mov	w1, #0x0                   	// #0
    fadc:	sub	x2, x28, x2
    fae0:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    fae4:	ldr	x22, [sp, #272]
    fae8:	stp	x28, xzr, [sp, #288]
    faec:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    faf0:	strb	wzr, [x22]
    faf4:	add	x0, x0, #0x388
    faf8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    fafc:	cbz	x27, fbdc <__hwasan_memmove@@Base+0x1214>
    fb00:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    fb04:	adrp	x22, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fb08:	add	x22, x22, #0x3a8
    fb0c:	str	x19, [sp, #144]
    fb10:	ldr	x28, [x0, #4056]
    fb14:	ldr	x1, [x26]
    fb18:	lsr	x0, x1, #56
    fb1c:	cmp	x24, x0, lsl #9
    fb20:	lsl	x3, x0, #12
    fb24:	lsl	x4, x0, #9
    fb28:	b.cs	fe6c <__hwasan_memmove@@Base+0x14a4>  // b.hs, b.nlast
    fb2c:	and	x2, x1, #0xffffffffffffff
    fb30:	neg	x3, x3
    fb34:	bic	x1, x2, x3
    fb38:	mvn	x0, x24
    fb3c:	and	x3, x3, x2
    fb40:	adds	x0, x0, x1, lsr #3
    fb44:	add	x4, x0, x4
    fb48:	csel	x0, x4, x0, mi  // mi = first
    fb4c:	add	x2, x3, x0, lsl #3
    fb50:	ldr	x19, [x3, x0, lsl #3]
    fb54:	cbz	x19, fbd8 <__hwasan_memmove@@Base+0x1210>
    fb58:	mov	x3, x19
    fb5c:	mov	x1, x22
    fb60:	mov	x0, x25
    fb64:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
    fb68:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
    fb6c:	and	x1, x19, #0xffffffffffff
    fb70:	bl	2aa50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
    fb74:	mov	x19, x0
    fb78:	cbz	x0, fbac <__hwasan_memmove@@Base+0x11e4>
    fb7c:	ldrb	w4, [x28, #189]
    fb80:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
    fb84:	ldr	x5, [x28, #24]
    fb88:	add	x6, x0, #0x328
    fb8c:	add	x3, x19, #0x8
    fb90:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fb94:	add	x1, x1, #0x3d0
    fb98:	mov	w2, #0x0                   	// #0
    fb9c:	mov	x0, x25
    fba0:	bl	28c50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x428>
    fba4:	mov	x0, x19
    fba8:	bl	29160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
    fbac:	ldr	x1, [sp, #272]
    fbb0:	add	x0, x21, #0xbf8
    fbb4:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    fbb8:	ldr	x0, [sp, #288]
    fbbc:	ldr	x1, [sp, #272]
    fbc0:	cbz	x0, fde0 <__hwasan_memmove@@Base+0x1418>
    fbc4:	strb	wzr, [x1]
    fbc8:	add	x24, x24, #0x1
    fbcc:	str	xzr, [sp, #296]
    fbd0:	cmp	x27, x24
    fbd4:	b.ne	fb14 <__hwasan_memmove@@Base+0x114c>  // b.any
    fbd8:	ldr	x19, [sp, #144]
    fbdc:	ldp	x0, x1, [sp, #272]
    fbe0:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    fbe4:	ldr	w0, [sp, #124]
    fbe8:	add	w0, w0, #0x1
    fbec:	str	w0, [sp, #124]
    fbf0:	ldr	x19, [x19, #2664]
    fbf4:	cbnz	x19, f57c <__hwasan_memmove@@Base+0xbb4>
    fbf8:	dmb	ish
    fbfc:	ldr	x0, [sp, #128]
    fc00:	strb	wzr, [x0, #48]
    fc04:	bl	11880 <__hwasan_tag_mismatch_v2@@Base+0x688>
    fc08:	mov	x21, x0
    fc0c:	add	x0, x0, #0x30
    fc10:	mov	w2, #0x1                   	// #1
    fc14:	ldxrb	w1, [x0]
    fc18:	stxrb	w3, w2, [x0]
    fc1c:	cbnz	w3, fc14 <__hwasan_memmove@@Base+0x124c>
    fc20:	dmb	ish
    fc24:	tst	w1, #0xff
    fc28:	b.eq	fc30 <__hwasan_memmove@@Base+0x1268>  // b.none
    fc2c:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
    fc30:	ldr	x19, [x21, #40]
    fc34:	adrp	x20, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fc38:	mov	w22, #0x1                   	// #1
    fc3c:	add	x20, x20, #0x2c0
    fc40:	cbz	x19, fc68 <__hwasan_memmove@@Base+0x12a0>
    fc44:	nop
    fc48:	ldrb	w0, [x19, #2684]
    fc4c:	cbnz	w0, fc98 <__hwasan_memmove@@Base+0x12d0>
    fc50:	strb	w22, [x19, #2684]
    fc54:	mov	x0, x19
    fc58:	mov	x1, x20
    fc5c:	bl	117a0 <__hwasan_tag_mismatch_v2@@Base+0x5a8>
    fc60:	ldr	x19, [x19, #2664]
    fc64:	cbnz	x19, fc48 <__hwasan_memmove@@Base+0x1280>
    fc68:	dmb	ish
    fc6c:	strb	wzr, [x21, #48]
    fc70:	ldr	w0, [sp, #124]
    fc74:	cbz	w0, fe20 <__hwasan_memmove@@Base+0x1458>
    fc78:	ldp	x19, x20, [sp, #16]
    fc7c:	ldp	x21, x22, [sp, #32]
    fc80:	ldp	x23, x24, [sp, #48]
    fc84:	ldp	x25, x26, [sp, #64]
    fc88:	ldp	x27, x28, [sp, #80]
    fc8c:	ldr	x30, [sp, #96]
    fc90:	add	sp, sp, #0x150
    fc94:	ret
    fc98:	ldr	x19, [x19, #2664]
    fc9c:	cbnz	x19, fc48 <__hwasan_memmove@@Base+0x1280>
    fca0:	b	fc68 <__hwasan_memmove@@Base+0x12a0>
    fca4:	adrp	x21, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    fca8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
    fcac:	add	x26, x21, #0xbf8
    fcb0:	add	x24, x0, #0x328
    fcb4:	mov	x1, x24
    fcb8:	mov	x0, x26
    fcbc:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    fcc0:	add	x21, x21, #0xbf8
    fcc4:	ldr	x4, [sp, #248]
    fcc8:	mov	x1, x20
    fccc:	ldr	w3, [sp, #264]
    fcd0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fcd4:	and	x4, x4, #0xffffffffffffff
    fcd8:	add	x0, x0, #0x448
    fcdc:	sub	x2, x20, x4
    fce0:	add	x5, x4, w3, uxtw
    fce4:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    fce8:	mov	x0, x26
    fcec:	mov	x1, x24
    fcf0:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    fcf4:	mov	x26, x24
    fcf8:	ldr	x1, [x19, #2672]
    fcfc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fd00:	add	x0, x0, #0x488
    fd04:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    fd08:	mov	x0, x21
    fd0c:	mov	x1, x26
    fd10:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    fd14:	ldr	w0, [sp, #260]
    fd18:	cbnz	w0, f61c <__hwasan_memmove@@Base+0xc54>
    fd1c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fd20:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fd24:	add	x2, x2, #0x170
    fd28:	add	x0, x0, #0x180
    fd2c:	mov	x4, #0x0                   	// #0
    fd30:	mov	x3, #0x0                   	// #0
    fd34:	mov	w1, #0x53                  	// #83
    fd38:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    fd3c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
    fd40:	adrp	x21, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    fd44:	add	x1, x0, #0x328
    fd48:	add	x0, x21, #0xbf8
    fd4c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    fd50:	ldr	x2, [x19, #2672]
    fd54:	mov	x1, x20
    fd58:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fd5c:	add	x0, x0, #0x418
    fd60:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    fd64:	b	f71c <__hwasan_memmove@@Base+0xd54>
    fd68:	mov	x3, x24
    fd6c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fd70:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fd74:	add	x2, x2, #0x2d0
    fd78:	add	x0, x0, #0x2e8
    fd7c:	mov	w1, #0x8f                  	// #143
    fd80:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    fd84:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fd88:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fd8c:	add	x2, x2, #0x1c8
    fd90:	add	x0, x0, #0x180
    fd94:	mov	x4, #0x0                   	// #0
    fd98:	mov	x3, #0x0                   	// #0
    fd9c:	mov	w1, #0x55                  	// #85
    fda0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    fda4:	ldr	w0, [sp, #144]
    fda8:	ldp	x19, x23, [sp, #176]
    fdac:	ldr	x21, [sp, #192]
    fdb0:	cbnz	w0, fbe4 <__hwasan_memmove@@Base+0x121c>
    fdb4:	adrp	x5, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    fdb8:	ldr	x22, [x5, #4016]
    fdbc:	ldr	x0, [x22]
    fdc0:	cbz	x0, fa3c <__hwasan_memmove@@Base+0x1074>
    fdc4:	add	x1, sp, #0x200
    fdc8:	str	xzr, [sp, #272]
    fdcc:	cmp	xzr, x0, lsl #1
    fdd0:	lsl	x28, x0, #1
    fdd4:	stp	xzr, xzr, [x1, #-232]
    fdd8:	b.ne	fa68 <__hwasan_memmove@@Base+0x10a0>  // b.any
    fddc:	stp	xzr, xzr, [sp, #288]
    fde0:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fde4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
    fde8:	add	x2, x2, #0x58
    fdec:	add	x0, x0, #0x5e8
    fdf0:	mov	x4, #0x0                   	// #0
    fdf4:	mov	x3, #0x0                   	// #0
    fdf8:	mov	w1, #0x1c5                 	// #453
    fdfc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
    fe00:	ldr	x0, [sp, #200]
    fe04:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    fe08:	b	f890 <__hwasan_memmove@@Base+0xec8>
    fe0c:	adrp	x27, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fe10:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x3c0>
    fe14:	add	x27, x27, #0xd0
    fe18:	sub	x26, x20, x0
    fe1c:	b	f468 <__hwasan_memmove@@Base+0xaa0>
    fe20:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fe24:	add	x0, x0, #0x3d8
    fe28:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    fe2c:	b	fc78 <__hwasan_memmove@@Base+0x12b0>
    fe30:	ldr	x3, [sp, #208]
    fe34:	cmp	x19, x24
    fe38:	ldr	x4, [sp, #248]
    fe3c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fe40:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fe44:	add	x1, x1, #0xd8
    fe48:	add	x2, x2, #0xd0
    fe4c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    fe50:	csel	x2, x2, x1, eq  // eq = none
    fe54:	add	x0, x0, #0x230
    fe58:	mov	x1, x20
    fe5c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
    fe60:	mov	w0, #0x1                   	// #1
    fe64:	str	w0, [sp, #124]
    fe68:	b	f510 <__hwasan_memmove@@Base+0xb48>
    fe6c:	mov	x3, x24
    fe70:	b	fd6c <__hwasan_memmove@@Base+0x13a4>
    fe74:	mov	x24, x19
    fe78:	b	f400 <__hwasan_memmove@@Base+0xa38>
    fe7c:	mov	x24, x19
    fe80:	mov	x22, x7
    fe84:	mov	x19, x1
    fe88:	b	f400 <__hwasan_memmove@@Base+0xa38>
    fe8c:	ldr	x22, [x5, #4016]
    fe90:	ldr	x0, [x22]
    fe94:	cbz	x0, feec <__hwasan_memmove@@Base+0x1524>
    fe98:	sub	x1, x0, #0x1
    fe9c:	tst	x1, x0
    fea0:	b.ne	fefc <__hwasan_memmove@@Base+0x1534>  // b.any
    fea4:	add	x1, x28, x1
    fea8:	neg	x0, x0
    feac:	and	x4, x1, x0
    feb0:	mov	w2, #0x0                   	// #0
    feb4:	add	x1, x6, #0xb50
    feb8:	mov	x0, x4
    febc:	str	x4, [sp, #144]
    fec0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
    fec4:	mov	x22, x0
    fec8:	ldr	x1, [sp, #272]
    fecc:	ldr	x2, [sp, #288]
    fed0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    fed4:	ldp	x0, x1, [sp, #272]
    fed8:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    fedc:	ldr	x4, [sp, #144]
    fee0:	stp	x22, x4, [sp, #272]
    fee4:	ldr	x2, [sp, #288]
    fee8:	b	fad4 <__hwasan_memmove@@Base+0x110c>
    feec:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
    fef0:	str	x0, [x22]
    fef4:	adrp	x6, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    fef8:	b	fe98 <__hwasan_memmove@@Base+0x14d0>
    fefc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    ff00:	add	x0, x0, #0xb38
    ff04:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    ff08:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
    ff0c:	adrp	x3, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
    ff10:	sub	x2, x20, x7
    ff14:	add	x3, x3, #0xd0
    ff18:	b	fa0c <__hwasan_memmove@@Base+0x1044>
    ff1c:	stp	x28, xzr, [sp, #288]
    ff20:	b	faec <__hwasan_memmove@@Base+0x1124>
    ff24:	nop
    ff28:	ret
    ff2c:	nop
    ff30:	stp	x19, x20, [sp, #-144]!
    ff34:	mov	x19, x1
    ff38:	mov	x20, x0
    ff3c:	stp	x21, x22, [sp, #16]
    ff40:	stp	x23, x24, [sp, #32]
    ff44:	add	x23, sp, #0x60
    ff48:	stp	x25, x26, [sp, #48]
    ff4c:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
    ff50:	stp	x27, x28, [sp, #64]
    ff54:	str	x30, [sp, #80]
    ff58:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
    ff5c:	mov	x1, x0
    ff60:	mov	x0, x23
    ff64:	ldrb	w24, [x1, #4]
    ff68:	bl	2d750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>
    ff6c:	ldr	x21, [x25, #4016]
    ff70:	str	xzr, [sp, #104]
    ff74:	stp	xzr, xzr, [sp, #112]
    ff78:	ldr	x2, [x21]
    ff7c:	cbz	x2, 1022c <__hwasan_memmove@@Base+0x1864>
    ff80:	sub	x0, x2, #0x1
    ff84:	tst	x0, x2
    ff88:	b.ne	10308 <__hwasan_memmove@@Base+0x1940>  // b.any
    ff8c:	neg	x21, x2
    ff90:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
    ff94:	and	x21, x21, x2
    ff98:	add	x1, x26, #0xb50
    ff9c:	mov	w2, #0x0                   	// #0
    ffa0:	mov	x0, x21
    ffa4:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
    ffa8:	mov	x22, x0
    ffac:	ldr	x1, [sp, #104]
    ffb0:	ldr	x2, [sp, #120]
    ffb4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
    ffb8:	ldp	x0, x1, [sp, #104]
    ffbc:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
    ffc0:	stp	x22, x21, [sp, #104]
    ffc4:	ldr	x2, [sp, #120]
    ffc8:	cbnz	x2, ffe4 <__hwasan_memmove@@Base+0x161c>
    ffcc:	cbz	x21, 102b4 <__hwasan_memmove@@Base+0x18ec>
    ffd0:	mov	x3, #0x1                   	// #1
    ffd4:	add	x0, x22, x2
    ffd8:	mov	w1, #0x0                   	// #0
    ffdc:	sub	x2, x3, x2
    ffe0:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
    ffe4:	mov	x1, #0x1                   	// #1
    ffe8:	adrp	x21, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    ffec:	add	x22, x21, #0xac8
    fff0:	str	x1, [sp, #120]
    fff4:	mov	x0, x22
    fff8:	strb	w24, [sp, #128]
    fffc:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   10000:	and	x25, x19, #0xffffffffffffff
   10004:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10008:	cmp	w24, #0x0
   1000c:	add	x1, x23, #0x8
   10010:	mov	x0, x22
   10014:	ldr	x2, [x2, #3864]
   10018:	csel	x1, x1, xzr, ne  // ne = any
   1001c:	str	x1, [x22, #88]
   10020:	lsr	x24, x19, #56
   10024:	ldr	w1, [x2]
   10028:	add	w1, w1, #0x1
   1002c:	str	w1, [x2]
   10030:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   10034:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10038:	ubfx	x0, x19, #4, #52
   1003c:	ldr	x1, [x1, #3848]
   10040:	ldr	x1, [x1]
   10044:	add	x27, x0, x1
   10048:	ldrb	w28, [x0, x1]
   1004c:	bl	2c890 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   10050:	tst	w0, #0xff
   10054:	b.eq	101bc <__hwasan_memmove@@Base+0x17f4>  // b.none
   10058:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1005c:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   10060:	add	x1, x1, #0x658
   10064:	add	x0, x26, #0xbf8
   10068:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   1006c:	ldr	w0, [x20, #8]
   10070:	cbnz	w0, 1023c <__hwasan_memmove@@Base+0x1874>
   10074:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10078:	mov	x3, x25
   1007c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10080:	adrp	x25, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10084:	ldr	x1, [x1, #4024]
   10088:	add	x2, x25, #0x620
   1008c:	add	x0, x0, #0x630
   10090:	mov	x4, #0x0                   	// #0
   10094:	ldr	x1, [x1]
   10098:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1009c:	add	x0, x26, #0xbf8
   100a0:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   100a4:	add	x1, x1, #0x4c0
   100a8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   100ac:	mov	w1, w24
   100b0:	mov	w2, w28
   100b4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   100b8:	add	x0, x0, #0x4d0
   100bc:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   100c0:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   100c4:	add	x1, x1, #0xc0
   100c8:	add	x0, x26, #0xbf8
   100cc:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   100d0:	mov	x0, x20
   100d4:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
   100d8:	mov	x2, #0x0                   	// #0
   100dc:	mov	x0, x19
   100e0:	mov	x1, #0x0                   	// #0
   100e4:	bl	f300 <__hwasan_memmove@@Base+0x938>
   100e8:	mov	x1, #0x10                  	// #16
   100ec:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   100f0:	add	x0, x0, #0x4f0
   100f4:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   100f8:	adrp	x2, e000 <__interceptor_vfork@@Base+0xae0>
   100fc:	add	x2, x2, #0xd40
   10100:	mov	x0, x27
   10104:	mov	x1, #0x11                  	// #17
   10108:	bl	eda0 <__hwasan_memmove@@Base+0x3d8>
   1010c:	mov	x1, #0x10                  	// #16
   10110:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10114:	add	x0, x0, #0x540
   10118:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   1011c:	adrp	x2, e000 <__interceptor_vfork@@Base+0xae0>
   10120:	add	x2, x2, #0xd58
   10124:	mov	x1, #0x3                   	// #3
   10128:	mov	x0, x27
   1012c:	bl	eda0 <__hwasan_memmove@@Base+0x3d8>
   10130:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10134:	add	x0, x0, #0x598
   10138:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   1013c:	mov	x1, x20
   10140:	mov	x2, #0x0                   	// #0
   10144:	add	x0, x25, #0x620
   10148:	bl	2c948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4120>
   1014c:	add	x0, x21, #0xac8
   10150:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   10154:	ldrb	w0, [sp, #128]
   10158:	cbnz	w0, 102a8 <__hwasan_memmove@@Base+0x18e0>
   1015c:	add	x0, x21, #0xac8
   10160:	str	xzr, [x0, #88]
   10164:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   10168:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1016c:	ldr	x0, [x0, #4056]
   10170:	ldr	w1, [x0, #64]
   10174:	cmp	w1, #0x1
   10178:	b.gt	1029c <__hwasan_memmove@@Base+0x18d4>
   1017c:	ldrb	w0, [sp, #128]
   10180:	cmp	w1, #0x0
   10184:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   10188:	b.ne	1029c <__hwasan_memmove@@Base+0x18d4>  // b.any
   1018c:	cbnz	w0, 10324 <__hwasan_memmove@@Base+0x195c>
   10190:	ldp	x0, x1, [sp, #104]
   10194:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   10198:	mov	x0, x23
   1019c:	bl	2d8b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5090>
   101a0:	ldp	x21, x22, [sp, #16]
   101a4:	ldp	x23, x24, [sp, #32]
   101a8:	ldp	x25, x26, [sp, #48]
   101ac:	ldp	x27, x28, [sp, #64]
   101b0:	ldr	x30, [sp, #80]
   101b4:	ldp	x19, x20, [sp], #144
   101b8:	ret
   101bc:	adrp	x22, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   101c0:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   101c4:	add	x1, x22, #0x328
   101c8:	add	x0, x26, #0xbf8
   101cc:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   101d0:	ldr	w0, [x20, #8]
   101d4:	cbnz	w0, 1026c <__hwasan_memmove@@Base+0x18a4>
   101d8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   101dc:	mov	x3, x25
   101e0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   101e4:	adrp	x25, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   101e8:	ldr	x1, [x1, #4024]
   101ec:	add	x2, x25, #0x620
   101f0:	add	x0, x0, #0x630
   101f4:	mov	x4, #0x0                   	// #0
   101f8:	ldr	x1, [x1]
   101fc:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   10200:	add	x22, x22, #0x328
   10204:	add	x0, x26, #0xbf8
   10208:	mov	x1, x22
   1020c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10210:	mov	w1, w24
   10214:	mov	w2, w28
   10218:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1021c:	add	x0, x0, #0x4d0
   10220:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10224:	mov	x1, x22
   10228:	b	100c8 <__hwasan_memmove@@Base+0x1700>
   1022c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   10230:	mov	x2, x0
   10234:	str	x0, [x21]
   10238:	b	ff80 <__hwasan_memmove@@Base+0x15b8>
   1023c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10240:	mov	x3, x25
   10244:	ldr	x0, [x20]
   10248:	adrp	x25, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1024c:	ldr	x1, [x1, #4024]
   10250:	add	x2, x25, #0x620
   10254:	ldr	x4, [x0]
   10258:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1025c:	ldr	x1, [x1]
   10260:	add	x0, x0, #0x630
   10264:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   10268:	b	1009c <__hwasan_memmove@@Base+0x16d4>
   1026c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10270:	mov	x3, x25
   10274:	ldr	x0, [x20]
   10278:	adrp	x25, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1027c:	ldr	x1, [x1, #4024]
   10280:	add	x2, x25, #0x620
   10284:	ldr	x4, [x0]
   10288:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1028c:	ldr	x1, [x1]
   10290:	add	x0, x0, #0x630
   10294:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   10298:	b	10200 <__hwasan_memmove@@Base+0x1838>
   1029c:	bl	1e5b0 <__sanitizer_set_report_fd@@Base+0x67f0>
   102a0:	ldrb	w0, [sp, #128]
   102a4:	b	1018c <__hwasan_memmove@@Base+0x17c4>
   102a8:	ldr	x0, [sp, #104]
   102ac:	bl	24288 <__sanitizer_sandbox_on_notify@@Base+0xd00>
   102b0:	b	1015c <__hwasan_memmove@@Base+0x1794>
   102b4:	ldr	x25, [x25, #4016]
   102b8:	ldr	x0, [x25]
   102bc:	cbz	x0, 10318 <__hwasan_memmove@@Base+0x1950>
   102c0:	sub	x1, x0, #0x1
   102c4:	tst	x1, x0
   102c8:	b.ne	10308 <__hwasan_memmove@@Base+0x1940>  // b.any
   102cc:	neg	x21, x0
   102d0:	add	x1, x26, #0xb50
   102d4:	and	x21, x21, x0
   102d8:	mov	w2, #0x0                   	// #0
   102dc:	mov	x0, x21
   102e0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   102e4:	ldr	x1, [sp, #104]
   102e8:	mov	x22, x0
   102ec:	ldr	x2, [sp, #120]
   102f0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   102f4:	ldp	x0, x1, [sp, #104]
   102f8:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   102fc:	stp	x22, x21, [sp, #104]
   10300:	ldr	x2, [sp, #120]
   10304:	b	ffd0 <__hwasan_memmove@@Base+0x1608>
   10308:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1030c:	add	x0, x0, #0xb38
   10310:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   10314:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   10318:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1031c:	str	x0, [x25]
   10320:	b	102c0 <__hwasan_memmove@@Base+0x18f8>
   10324:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   10328:	stp	x19, x20, [sp, #-256]!
   1032c:	mov	x20, x2
   10330:	stp	x21, x22, [sp, #16]
   10334:	stp	x23, x24, [sp, #32]
   10338:	mov	x24, x1
   1033c:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10340:	stp	x25, x26, [sp, #48]
   10344:	stp	x27, x28, [sp, #64]
   10348:	add	x28, sp, #0xd0
   1034c:	str	x30, [sp, #80]
   10350:	stp	x0, x3, [sp, #104]
   10354:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
   10358:	mov	x1, x0
   1035c:	mov	x0, x28
   10360:	ldrb	w19, [x1, #4]
   10364:	bl	2d750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>
   10368:	ldr	x21, [x23, #4016]
   1036c:	str	xzr, [sp, #216]
   10370:	stp	xzr, xzr, [sp, #224]
   10374:	ldr	x0, [x21]
   10378:	cbz	x0, 1061c <__hwasan_memmove@@Base+0x1c54>
   1037c:	sub	x1, x0, #0x1
   10380:	tst	x1, x0
   10384:	b.ne	109d8 <__hwasan_memmove@@Base+0x2010>  // b.any
   10388:	neg	x21, x0
   1038c:	mov	w2, #0x0                   	// #0
   10390:	and	x21, x21, x0
   10394:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   10398:	mov	x0, x21
   1039c:	add	x1, x26, #0xb50
   103a0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   103a4:	mov	x27, x0
   103a8:	ldr	x1, [sp, #216]
   103ac:	ldr	x2, [sp, #232]
   103b0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   103b4:	ldp	x0, x1, [sp, #216]
   103b8:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   103bc:	stp	x27, x21, [sp, #216]
   103c0:	ldr	x2, [sp, #232]
   103c4:	cbnz	x2, 103e0 <__hwasan_memmove@@Base+0x1a18>
   103c8:	cbz	x21, 109e8 <__hwasan_memmove@@Base+0x2020>
   103cc:	mov	x3, #0x1                   	// #1
   103d0:	add	x0, x27, x2
   103d4:	mov	w1, #0x0                   	// #0
   103d8:	sub	x2, x3, x2
   103dc:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   103e0:	mov	x1, #0x1                   	// #1
   103e4:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   103e8:	add	x21, x0, #0xac8
   103ec:	str	x1, [sp, #232]
   103f0:	mov	x0, x21
   103f4:	strb	w19, [sp, #240]
   103f8:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   103fc:	and	x24, x24, #0xffffffffffffff
   10400:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10404:	cmp	w19, #0x0
   10408:	add	x1, x28, #0x8
   1040c:	mov	x0, x21
   10410:	ldr	x2, [x2, #3864]
   10414:	csel	x1, x1, xzr, ne  // ne = any
   10418:	str	x1, [x21, #88]
   1041c:	add	x19, x20, x24
   10420:	ldr	w1, [x2]
   10424:	add	w1, w1, #0x1
   10428:	str	w1, [x2]
   1042c:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   10430:	bl	2c890 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   10434:	tst	w0, #0xff
   10438:	b.eq	1057c <__hwasan_memmove@@Base+0x1bb4>  // b.none
   1043c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10440:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   10444:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10448:	add	x1, x1, #0x658
   1044c:	str	x0, [sp, #120]
   10450:	add	x0, x0, #0xbf8
   10454:	str	x21, [sp, #136]
   10458:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   1045c:	ldr	x1, [x21, #4024]
   10460:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10464:	mov	x2, x0
   10468:	mov	x5, x20
   1046c:	mov	x4, x19
   10470:	mov	x3, x24
   10474:	ldr	x1, [x1]
   10478:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1047c:	add	x0, x0, #0x848
   10480:	str	x2, [sp, #128]
   10484:	add	x2, x2, #0x828
   10488:	add	x21, sp, #0xa0
   1048c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   10490:	adrp	x6, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10494:	add	x6, x6, #0xc0
   10498:	mov	x1, x6
   1049c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   104a0:	add	x0, x0, #0x878
   104a4:	str	x6, [sp, #144]
   104a8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   104ac:	ldr	x0, [sp, #104]
   104b0:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
   104b4:	mov	x0, x24
   104b8:	bl	8a20 <__sanitizer_print_stack_trace@@Base+0x808>
   104bc:	mov	x2, x0
   104c0:	mov	x3, x1
   104c4:	mov	x0, x21
   104c8:	stp	x2, x3, [sp, #160]
   104cc:	bl	85a0 <__sanitizer_print_stack_trace@@Base+0x388>
   104d0:	ldr	x6, [sp, #144]
   104d4:	cbz	x0, 10538 <__hwasan_memmove@@Base+0x1b70>
   104d8:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   104dc:	mov	x25, x6
   104e0:	add	x1, x1, #0xe0
   104e4:	ldr	x0, [sp, #120]
   104e8:	add	x22, x0, #0xbf8
   104ec:	mov	x0, x22
   104f0:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   104f4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   104f8:	add	x0, x0, #0x4a8
   104fc:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10500:	mov	x1, x25
   10504:	mov	x0, x22
   10508:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   1050c:	mov	x0, x21
   10510:	bl	8630 <__sanitizer_print_stack_trace@@Base+0x418>
   10514:	cbz	w0, 10abc <__hwasan_memmove@@Base+0x20f4>
   10518:	bl	27070 <__sanitizer_cov_dump@@Base+0x510>
   1051c:	mov	x2, x0
   10520:	fmov	d0, x1
   10524:	cbz	x0, 10ae8 <__hwasan_memmove@@Base+0x2120>
   10528:	add	x0, sp, #0xb0
   1052c:	str	x2, [sp, #176]
   10530:	str	d0, [sp, #184]
   10534:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
   10538:	ldr	x21, [x23, #4016]
   1053c:	ldr	x0, [x21]
   10540:	cbz	x0, 10628 <__hwasan_memmove@@Base+0x1c60>
   10544:	str	xzr, [sp, #176]
   10548:	cmp	xzr, x0, lsl #3
   1054c:	stp	xzr, xzr, [sp, #184]
   10550:	lsl	x3, x0, #3
   10554:	b.ne	10658 <__hwasan_memmove@@Base+0x1c90>  // b.any
   10558:	stp	xzr, xzr, [sp, #192]
   1055c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10560:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   10564:	add	x2, x2, #0x58
   10568:	add	x0, x0, #0x5e8
   1056c:	mov	x4, #0x0                   	// #0
   10570:	mov	x3, #0x0                   	// #0
   10574:	mov	w1, #0x1c5                 	// #453
   10578:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1057c:	adrp	x6, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   10580:	add	x6, x6, #0x328
   10584:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10588:	mov	x1, x6
   1058c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   10590:	str	x0, [sp, #120]
   10594:	add	x0, x0, #0xbf8
   10598:	stp	x21, x6, [sp, #136]
   1059c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   105a0:	ldr	x1, [x21, #4024]
   105a4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   105a8:	mov	x5, x20
   105ac:	add	x2, x0, #0x828
   105b0:	mov	x4, x19
   105b4:	mov	x3, x24
   105b8:	ldr	x1, [x1]
   105bc:	str	x0, [sp, #128]
   105c0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   105c4:	add	x0, x0, #0x848
   105c8:	add	x21, sp, #0xa0
   105cc:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   105d0:	ldr	x6, [sp, #144]
   105d4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   105d8:	add	x0, x0, #0x878
   105dc:	mov	x1, x6
   105e0:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   105e4:	ldr	x0, [sp, #104]
   105e8:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
   105ec:	mov	x0, x24
   105f0:	bl	8a20 <__sanitizer_print_stack_trace@@Base+0x808>
   105f4:	mov	x2, x0
   105f8:	mov	x3, x1
   105fc:	mov	x0, x21
   10600:	stp	x2, x3, [sp, #160]
   10604:	bl	85a0 <__sanitizer_print_stack_trace@@Base+0x388>
   10608:	ldr	x6, [sp, #144]
   1060c:	cbz	x0, 10538 <__hwasan_memmove@@Base+0x1b70>
   10610:	mov	x25, x6
   10614:	mov	x1, x6
   10618:	b	104e4 <__hwasan_memmove@@Base+0x1b1c>
   1061c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   10620:	str	x0, [x21]
   10624:	b	1037c <__hwasan_memmove@@Base+0x19b4>
   10628:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1062c:	str	x0, [x21]
   10630:	str	xzr, [sp, #176]
   10634:	cmp	xzr, x0, lsl #3
   10638:	stp	xzr, xzr, [sp, #184]
   1063c:	lsl	x1, x0, #3
   10640:	b.eq	10558 <__hwasan_memmove@@Base+0x1b90>  // b.none
   10644:	cbnz	x0, 10b24 <__hwasan_memmove@@Base+0x215c>
   10648:	str	x0, [sp, #144]
   1064c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   10650:	ldr	x3, [sp, #144]
   10654:	str	x0, [x21]
   10658:	sub	x1, x0, #0x1
   1065c:	ands	x21, x1, x0
   10660:	b.ne	109d8 <__hwasan_memmove@@Base+0x2010>  // b.any
   10664:	add	x1, x3, x1
   10668:	neg	x0, x0
   1066c:	and	x22, x1, x0
   10670:	mov	w2, #0x0                   	// #0
   10674:	add	x1, x26, #0xb50
   10678:	mov	x0, x22
   1067c:	str	x3, [sp, #152]
   10680:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   10684:	ldr	x1, [sp, #176]
   10688:	str	x0, [sp, #144]
   1068c:	ldr	x2, [sp, #192]
   10690:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   10694:	ldp	x0, x1, [sp, #176]
   10698:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1069c:	ldp	x4, x3, [sp, #144]
   106a0:	stp	x4, x22, [sp, #176]
   106a4:	ldr	x2, [sp, #192]
   106a8:	cmp	x3, x2
   106ac:	b.ls	10b1c <__hwasan_memmove@@Base+0x2154>  // b.plast
   106b0:	cmp	x3, x22
   106b4:	b.hi	10a3c <__hwasan_memmove@@Base+0x2074>  // b.pmore
   106b8:	add	x0, x4, x2
   106bc:	mov	w1, #0x0                   	// #0
   106c0:	sub	x2, x3, x2
   106c4:	str	x3, [sp, #144]
   106c8:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   106cc:	ldr	x3, [sp, #144]
   106d0:	stp	x3, xzr, [sp, #192]
   106d4:	ldr	x4, [sp, #176]
   106d8:	cbz	x3, 1055c <__hwasan_memmove@@Base+0x1b94>
   106dc:	and	x20, x20, #0xf
   106e0:	strb	wzr, [x4]
   106e4:	mov	x26, #0x10                  	// #16
   106e8:	sub	x26, x26, x20
   106ec:	cmp	x26, #0x10
   106f0:	b.eq	10a9c <__hwasan_memmove@@Base+0x20d4>  // b.none
   106f4:	add	x27, sp, #0xb0
   106f8:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   106fc:	mov	x0, x27
   10700:	add	x1, x1, #0x668
   10704:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   10708:	mov	x22, #0x0                   	// #0
   1070c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10710:	add	x23, x1, #0x678
   10714:	cbz	x20, 10730 <__hwasan_memmove@@Base+0x1d68>
   10718:	add	x22, x22, #0x1
   1071c:	mov	x1, x23
   10720:	mov	x0, x27
   10724:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   10728:	cmp	x20, x22
   1072c:	b.ne	10718 <__hwasan_memmove@@Base+0x1d50>  // b.any
   10730:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10734:	add	x23, x26, x19
   10738:	add	x25, x0, #0x680
   1073c:	mov	x22, x19
   10740:	ldrb	w2, [x22], #1
   10744:	mov	x1, x25
   10748:	mov	x0, x27
   1074c:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   10750:	cmp	x23, x22
   10754:	b.ne	10740 <__hwasan_memmove@@Base+0x1d78>  // b.any
   10758:	mov	x0, x27
   1075c:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   10760:	add	x1, x1, #0xf40
   10764:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   10768:	mov	x0, x27
   1076c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10770:	add	x1, x1, #0x688
   10774:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   10778:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1077c:	mov	x25, #0x0                   	// #0
   10780:	add	x22, x1, #0x678
   10784:	cbz	x20, 107a0 <__hwasan_memmove@@Base+0x1dd8>
   10788:	add	x25, x25, #0x1
   1078c:	mov	x1, x22
   10790:	mov	x0, x27
   10794:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   10798:	cmp	x20, x25
   1079c:	b.ne	10788 <__hwasan_memmove@@Base+0x1dc0>  // b.any
   107a0:	ldr	x22, [sp, #112]
   107a4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   107a8:	add	x25, x0, #0x680
   107ac:	add	x26, x26, x22
   107b0:	ldrb	w2, [x22], #1
   107b4:	mov	x1, x25
   107b8:	mov	x0, x27
   107bc:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   107c0:	cmp	x26, x22
   107c4:	b.ne	107b0 <__hwasan_memmove@@Base+0x1de8>  // b.any
   107c8:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   107cc:	add	x1, x0, #0xf40
   107d0:	mov	x0, x27
   107d4:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   107d8:	mov	x0, x27
   107dc:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   107e0:	adrp	x26, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   107e4:	add	x1, x1, #0x698
   107e8:	add	x26, x26, #0x6a8
   107ec:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   107f0:	cbz	x20, 10810 <__hwasan_memmove@@Base+0x1e48>
   107f4:	nop
   107f8:	add	x21, x21, #0x1
   107fc:	mov	x1, x26
   10800:	mov	x0, x27
   10804:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   10808:	cmp	x20, x21
   1080c:	b.ne	107f8 <__hwasan_memmove@@Base+0x1e30>  // b.any
   10810:	ldr	x0, [sp, #112]
   10814:	adrp	x26, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   10818:	adrp	x21, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1081c:	adrp	x20, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10820:	add	x26, x26, #0xb38
   10824:	add	x21, x21, #0x50
   10828:	add	x20, x20, #0x6b0
   1082c:	sub	x22, x0, x19
   10830:	ldrb	w2, [x22, x19]
   10834:	add	x19, x19, #0x1
   10838:	ldurb	w1, [x19, #-1]
   1083c:	cmp	w2, w1
   10840:	b.eq	109b0 <__hwasan_memmove@@Base+0x1fe8>  // b.none
   10844:	mov	x2, x20
   10848:	mov	x1, x26
   1084c:	mov	x0, x27
   10850:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   10854:	cmp	x23, x19
   10858:	b.ne	10830 <__hwasan_memmove@@Base+0x1e68>  // b.any
   1085c:	ldr	x0, [sp, #136]
   10860:	mov	x2, #0x10                  	// #16
   10864:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10868:	add	x1, x1, #0x6b8
   1086c:	ldr	x3, [x0, #4024]
   10870:	mov	x0, x27
   10874:	ldr	x3, [x3]
   10878:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   1087c:	ldr	x0, [sp, #120]
   10880:	ldr	x1, [sp, #176]
   10884:	add	x0, x0, #0xbf8
   10888:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   1088c:	bl	e338 <__interceptor_vfork@@Base+0xe18>
   10890:	ldrb	w2, [x0, #2684]
   10894:	cbnz	w2, 108ac <__hwasan_memmove@@Base+0x1ee4>
   10898:	mov	w2, #0x1                   	// #1
   1089c:	strb	w2, [x0, #2684]
   108a0:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   108a4:	add	x1, x1, #0x2c0
   108a8:	bl	117a0 <__hwasan_tag_mismatch_v2@@Base+0x5a8>
   108ac:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   108b0:	mov	x1, #0x10                  	// #16
   108b4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   108b8:	add	x0, x0, #0x4f0
   108bc:	ldr	x2, [x2, #3848]
   108c0:	ldr	x2, [x2]
   108c4:	add	x24, x2, x24, lsr #4
   108c8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   108cc:	adrp	x2, e000 <__interceptor_vfork@@Base+0xae0>
   108d0:	add	x2, x2, #0xd40
   108d4:	mov	x0, x24
   108d8:	mov	x1, #0x11                  	// #17
   108dc:	bl	eda0 <__hwasan_memmove@@Base+0x3d8>
   108e0:	mov	x1, #0x10                  	// #16
   108e4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   108e8:	add	x0, x0, #0x540
   108ec:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   108f0:	adrp	x2, e000 <__interceptor_vfork@@Base+0xae0>
   108f4:	add	x2, x2, #0xd58
   108f8:	mov	x1, #0x3                   	// #3
   108fc:	mov	x0, x24
   10900:	bl	eda0 <__hwasan_memmove@@Base+0x3d8>
   10904:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10908:	add	x0, x0, #0x598
   1090c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10910:	ldr	x1, [sp, #104]
   10914:	mov	x2, #0x0                   	// #0
   10918:	ldr	x0, [sp, #128]
   1091c:	add	x0, x0, #0x828
   10920:	bl	2c948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4120>
   10924:	ldp	x0, x1, [sp, #176]
   10928:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1092c:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   10930:	add	x0, x0, #0xac8
   10934:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   10938:	ldrb	w0, [sp, #240]
   1093c:	cbnz	w0, 109cc <__hwasan_memmove@@Base+0x2004>
   10940:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   10944:	add	x0, x0, #0xac8
   10948:	str	xzr, [x0, #88]
   1094c:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   10950:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10954:	ldr	x0, [x0, #4056]
   10958:	ldr	w1, [x0, #64]
   1095c:	cmp	w1, #0x1
   10960:	b.gt	109a4 <__hwasan_memmove@@Base+0x1fdc>
   10964:	ldrb	w0, [sp, #240]
   10968:	cmp	w1, #0x0
   1096c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   10970:	b.ne	109a4 <__hwasan_memmove@@Base+0x1fdc>  // b.any
   10974:	cbnz	w0, 10b2c <__hwasan_memmove@@Base+0x2164>
   10978:	ldp	x0, x1, [sp, #216]
   1097c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   10980:	mov	x0, x28
   10984:	bl	2d8b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5090>
   10988:	ldp	x21, x22, [sp, #16]
   1098c:	ldp	x23, x24, [sp, #32]
   10990:	ldp	x25, x26, [sp, #48]
   10994:	ldp	x27, x28, [sp, #64]
   10998:	ldr	x30, [sp, #80]
   1099c:	ldp	x19, x20, [sp], #256
   109a0:	ret
   109a4:	bl	1e5b0 <__sanitizer_set_report_fd@@Base+0x67f0>
   109a8:	ldrb	w0, [sp, #240]
   109ac:	b	10974 <__hwasan_memmove@@Base+0x1fac>
   109b0:	mov	x2, x21
   109b4:	mov	x1, x26
   109b8:	mov	x0, x27
   109bc:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   109c0:	cmp	x19, x23
   109c4:	b.ne	10830 <__hwasan_memmove@@Base+0x1e68>  // b.any
   109c8:	b	1085c <__hwasan_memmove@@Base+0x1e94>
   109cc:	ldr	x0, [sp, #216]
   109d0:	bl	24288 <__sanitizer_sandbox_on_notify@@Base+0xd00>
   109d4:	b	10940 <__hwasan_memmove@@Base+0x1f78>
   109d8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   109dc:	add	x0, x0, #0xb38
   109e0:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   109e4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   109e8:	ldr	x21, [x23, #4016]
   109ec:	ldr	x0, [x21]
   109f0:	cbz	x0, 10adc <__hwasan_memmove@@Base+0x2114>
   109f4:	sub	x1, x0, #0x1
   109f8:	tst	x1, x0
   109fc:	b.ne	109d8 <__hwasan_memmove@@Base+0x2010>  // b.any
   10a00:	neg	x21, x0
   10a04:	add	x1, x26, #0xb50
   10a08:	and	x21, x21, x0
   10a0c:	mov	w2, #0x0                   	// #0
   10a10:	mov	x0, x21
   10a14:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   10a18:	ldr	x1, [sp, #216]
   10a1c:	mov	x27, x0
   10a20:	ldr	x2, [sp, #232]
   10a24:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   10a28:	ldp	x0, x1, [sp, #216]
   10a2c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   10a30:	stp	x27, x21, [sp, #216]
   10a34:	ldr	x2, [sp, #232]
   10a38:	b	103cc <__hwasan_memmove@@Base+0x1a04>
   10a3c:	ldr	x23, [x23, #4016]
   10a40:	ldr	x0, [x23]
   10a44:	cbz	x0, 10b08 <__hwasan_memmove@@Base+0x2140>
   10a48:	sub	x1, x0, #0x1
   10a4c:	tst	x0, x1
   10a50:	b.ne	109d8 <__hwasan_memmove@@Base+0x2010>  // b.any
   10a54:	add	x1, x3, x1
   10a58:	neg	x0, x0
   10a5c:	and	x23, x1, x0
   10a60:	mov	w2, #0x0                   	// #0
   10a64:	add	x1, x26, #0xb50
   10a68:	mov	x0, x23
   10a6c:	str	x3, [sp, #152]
   10a70:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   10a74:	ldr	x1, [sp, #176]
   10a78:	str	x0, [sp, #144]
   10a7c:	ldr	x2, [sp, #192]
   10a80:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   10a84:	ldp	x0, x1, [sp, #176]
   10a88:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   10a8c:	ldp	x4, x3, [sp, #144]
   10a90:	stp	x4, x23, [sp, #176]
   10a94:	ldr	x2, [sp, #192]
   10a98:	b	106b8 <__hwasan_memmove@@Base+0x1cf0>
   10a9c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   10aa0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10aa4:	add	x2, x2, #0x68
   10aa8:	add	x0, x0, #0x180
   10aac:	mov	x4, x26
   10ab0:	mov	x3, x26
   10ab4:	mov	w1, #0x1cd                 	// #461
   10ab8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   10abc:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10ac0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10ac4:	add	x2, x2, #0x170
   10ac8:	add	x0, x0, #0x180
   10acc:	mov	x4, #0x0                   	// #0
   10ad0:	mov	x3, #0x0                   	// #0
   10ad4:	mov	w1, #0x53                  	// #83
   10ad8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   10adc:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   10ae0:	str	x0, [x21]
   10ae4:	b	109f4 <__hwasan_memmove@@Base+0x202c>
   10ae8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10aec:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10af0:	add	x2, x2, #0x1c8
   10af4:	add	x0, x0, #0x180
   10af8:	mov	x4, #0x0                   	// #0
   10afc:	mov	x3, #0x0                   	// #0
   10b00:	mov	w1, #0x55                  	// #85
   10b04:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   10b08:	str	x3, [sp, #144]
   10b0c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   10b10:	str	x0, [x23]
   10b14:	ldr	x3, [sp, #144]
   10b18:	b	10a48 <__hwasan_memmove@@Base+0x2080>
   10b1c:	stp	x3, xzr, [sp, #192]
   10b20:	b	106dc <__hwasan_memmove@@Base+0x1d14>
   10b24:	mov	x3, x1
   10b28:	b	10658 <__hwasan_memmove@@Base+0x1c90>
   10b2c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   10b30:	stp	x19, x30, [sp, #-16]!
   10b34:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10b38:	mov	x19, x0
   10b3c:	add	x0, x2, #0x880
   10b40:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10b44:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10b48:	add	x0, x0, #0x8b0
   10b4c:	ldp	x1, x2, [x19]
   10b50:	ldp	x3, x4, [x19, #16]
   10b54:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10b58:	ldp	x1, x2, [x19, #32]
   10b5c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10b60:	ldp	x3, x4, [x19, #48]
   10b64:	add	x0, x0, #0x8e8
   10b68:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10b6c:	ldp	x1, x2, [x19, #64]
   10b70:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10b74:	ldp	x3, x4, [x19, #80]
   10b78:	add	x0, x0, #0x920
   10b7c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10b80:	ldp	x1, x2, [x19, #96]
   10b84:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10b88:	ldp	x3, x4, [x19, #112]
   10b8c:	add	x0, x0, #0x958
   10b90:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10b94:	ldp	x1, x2, [x19, #128]
   10b98:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10b9c:	ldp	x3, x4, [x19, #144]
   10ba0:	add	x0, x0, #0x990
   10ba4:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10ba8:	ldp	x1, x2, [x19, #160]
   10bac:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10bb0:	ldp	x3, x4, [x19, #176]
   10bb4:	add	x0, x0, #0x9c8
   10bb8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10bbc:	ldp	x1, x2, [x19, #192]
   10bc0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10bc4:	ldp	x3, x4, [x19, #208]
   10bc8:	add	x0, x0, #0xa00
   10bcc:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10bd0:	ldp	x1, x2, [x19, #224]
   10bd4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10bd8:	ldr	x3, [x19, #240]
   10bdc:	add	x0, x0, #0xa38
   10be0:	ldp	x19, x30, [sp], #16
   10be4:	b	1fb70 <__sanitizer_on_print@@Base+0x310>
   10be8:	stp	x19, x20, [sp, #-192]!
   10bec:	mov	x20, x1
   10bf0:	mov	x19, x2
   10bf4:	stp	x23, x24, [sp, #32]
   10bf8:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10bfc:	add	x24, sp, #0x90
   10c00:	stp	x21, x22, [sp, #16]
   10c04:	mov	x21, x0
   10c08:	and	w0, w3, #0xff
   10c0c:	mov	x22, x5
   10c10:	stp	x25, x26, [sp, #48]
   10c14:	and	w25, w4, #0xff
   10c18:	stp	x27, x28, [sp, #64]
   10c1c:	str	x30, [sp, #80]
   10c20:	str	w0, [sp, #104]
   10c24:	mov	x0, x24
   10c28:	bl	2d750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>
   10c2c:	str	xzr, [sp, #152]
   10c30:	ldr	x26, [x23, #4016]
   10c34:	stp	xzr, xzr, [sp, #160]
   10c38:	ldr	x0, [x26]
   10c3c:	cbz	x0, 10ff8 <__hwasan_memmove@@Base+0x2630>
   10c40:	sub	x1, x0, #0x1
   10c44:	tst	x1, x0
   10c48:	b.ne	110b8 <__hwasan_memmove@@Base+0x26f0>  // b.any
   10c4c:	neg	x26, x0
   10c50:	mov	w2, #0x0                   	// #0
   10c54:	and	x26, x26, x0
   10c58:	adrp	x28, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   10c5c:	mov	x0, x26
   10c60:	add	x1, x28, #0xb50
   10c64:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   10c68:	mov	x27, x0
   10c6c:	ldr	x1, [sp, #152]
   10c70:	ldr	x2, [sp, #168]
   10c74:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   10c78:	ldp	x0, x1, [sp, #152]
   10c7c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   10c80:	stp	x27, x26, [sp, #152]
   10c84:	ldr	x2, [sp, #168]
   10c88:	cbz	x2, 10fdc <__hwasan_memmove@@Base+0x2614>
   10c8c:	mov	x1, #0x1                   	// #1
   10c90:	adrp	x23, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   10c94:	add	x26, x23, #0xac8
   10c98:	str	x1, [sp, #168]
   10c9c:	mov	x0, x26
   10ca0:	strb	w25, [sp, #176]
   10ca4:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   10ca8:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10cac:	cmp	w25, #0x0
   10cb0:	add	x1, x24, #0x8
   10cb4:	mov	x0, x26
   10cb8:	ldr	x2, [x2, #3864]
   10cbc:	csel	x1, x1, xzr, ne  // ne = any
   10cc0:	str	x1, [x26, #88]
   10cc4:	ldr	w1, [x2]
   10cc8:	add	w1, w1, #0x1
   10ccc:	str	w1, [x2]
   10cd0:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   10cd4:	bl	e338 <__interceptor_vfork@@Base+0xe18>
   10cd8:	ldr	x26, [x0, #2656]
   10cdc:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10ce0:	add	x2, x2, #0xa78
   10ce4:	ldrb	w0, [x26, #7]
   10ce8:	lsl	x1, x0, #13
   10cec:	lsl	x0, x0, #12
   10cf0:	bl	1eb00 <__sanitizer_set_report_fd@@Base+0x6d40>
   10cf4:	mov	x28, x0
   10cf8:	ldr	x27, [x26]
   10cfc:	lsr	x3, x27, #56
   10d00:	str	x3, [sp, #96]
   10d04:	neg	x1, x3, lsl #12
   10d08:	lsl	x25, x3, #12
   10d0c:	and	x1, x1, x27
   10d10:	mov	x2, x25
   10d14:	and	x1, x1, #0xffffffffffffff
   10d18:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   10d1c:	sub	x0, x25, #0x1
   10d20:	tst	x0, x25
   10d24:	ldr	x3, [sp, #96]
   10d28:	b.ne	110c8 <__hwasan_memmove@@Base+0x2700>  // b.any
   10d2c:	cmp	x25, #0xfff
   10d30:	b.ls	110e8 <__hwasan_memmove@@Base+0x2720>  // b.plast
   10d34:	cmp	x25, #0x80, lsl #12
   10d38:	b.hi	11108 <__hwasan_memmove@@Base+0x2740>  // b.pmore
   10d3c:	lsl	x3, x3, #13
   10d40:	udiv	x25, x28, x3
   10d44:	msub	x25, x25, x3, x28
   10d48:	cbnz	x25, 11128 <__hwasan_memmove@@Base+0x2760>
   10d4c:	and	x0, x27, #0xff00000000000000
   10d50:	and	x27, x20, #0xffffffffffffff
   10d54:	orr	x0, x0, x28
   10d58:	str	x0, [sp, #136]
   10d5c:	and	x0, x0, #0xff00000000000000
   10d60:	ldr	x1, [x26]
   10d64:	and	x2, x1, #0xffffffffffffff
   10d68:	lsr	x1, x1, #56
   10d6c:	neg	x1, x1, lsl #12
   10d70:	bic	x1, x2, x1
   10d74:	add	x28, x28, x1
   10d78:	orr	x0, x28, x0
   10d7c:	str	x0, [sp, #136]
   10d80:	bl	2c890 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   10d84:	ands	w0, w0, #0xff
   10d88:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   10d8c:	add	x2, x2, #0x328
   10d90:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10d94:	add	x1, x1, #0x658
   10d98:	csel	x1, x1, x2, ne  // ne = any
   10d9c:	str	w0, [sp, #96]
   10da0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   10da4:	add	x0, x0, #0xbf8
   10da8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10dac:	ldr	w0, [x21, #8]
   10db0:	cbnz	w0, 11004 <__hwasan_memmove@@Base+0x263c>
   10db4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10db8:	mov	x4, x25
   10dbc:	mov	x3, x27
   10dc0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10dc4:	ldr	x1, [x1, #4024]
   10dc8:	add	x0, x0, #0x630
   10dcc:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10dd0:	add	x2, x2, #0xb28
   10dd4:	ldr	x1, [x1]
   10dd8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   10ddc:	bl	e338 <__interceptor_vfork@@Base+0xe18>
   10de0:	mov	x26, x0
   10de4:	mov	x1, x19
   10de8:	mov	x0, x20
   10dec:	bl	6470 <__hwasan_test_shadow@plt>
   10df0:	cmp	x0, #0x0
   10df4:	mov	x7, x0
   10df8:	ccmp	x19, x0, #0x4, ge  // ge = tcont
   10dfc:	b.le	11148 <__hwasan_memmove@@Base+0x2780>
   10e00:	adrp	x5, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10e04:	add	x2, x0, x27
   10e08:	ldr	w0, [sp, #96]
   10e0c:	adrp	x4, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   10e10:	ldr	x5, [x5, #3848]
   10e14:	lsr	x2, x2, #4
   10e18:	cmp	w0, #0x0
   10e1c:	add	x4, x4, #0x328
   10e20:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10e24:	add	x1, x1, #0x4c0
   10e28:	ldr	x5, [x5]
   10e2c:	csel	x1, x1, x4, ne  // ne = any
   10e30:	lsr	x4, x20, #56
   10e34:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   10e38:	add	x28, x2, x5
   10e3c:	add	x0, x0, #0xbf8
   10e40:	ldrb	w5, [x2, x5]
   10e44:	str	w5, [sp, #108]
   10e48:	stp	x4, x7, [sp, #112]
   10e4c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10e50:	ldp	w0, w5, [sp, #104]
   10e54:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10e58:	ldr	x4, [sp, #112]
   10e5c:	cmp	w0, #0x0
   10e60:	ldr	x6, [x26, #2672]
   10e64:	add	x1, x1, #0xa68
   10e68:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10e6c:	add	x0, x0, #0xa70
   10e70:	csel	x1, x1, x0, ne  // ne = any
   10e74:	mov	x3, x27
   10e78:	mov	x2, x19
   10e7c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10e80:	add	x0, x0, #0xb80
   10e84:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10e88:	ldr	x7, [sp, #120]
   10e8c:	cbnz	x7, 11044 <__hwasan_memmove@@Base+0x267c>
   10e90:	ldr	w0, [sp, #96]
   10e94:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   10e98:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10e9c:	add	x2, x2, #0x328
   10ea0:	cmp	w0, #0x0
   10ea4:	add	x1, x1, #0xc0
   10ea8:	csel	x1, x1, x2, ne  // ne = any
   10eac:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   10eb0:	add	x0, x0, #0xbf8
   10eb4:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10eb8:	mov	x0, x21
   10ebc:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
   10ec0:	mov	x0, x20
   10ec4:	mov	x1, x19
   10ec8:	add	x2, sp, #0x88
   10ecc:	bl	f300 <__hwasan_memmove@@Base+0x938>
   10ed0:	ldrb	w0, [x26, #2684]
   10ed4:	cbz	w0, 11010 <__hwasan_memmove@@Base+0x2648>
   10ed8:	mov	x1, #0x10                  	// #16
   10edc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10ee0:	add	x0, x0, #0x4f0
   10ee4:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10ee8:	adrp	x2, e000 <__interceptor_vfork@@Base+0xae0>
   10eec:	add	x2, x2, #0xd40
   10ef0:	mov	x0, x28
   10ef4:	mov	x1, #0x11                  	// #17
   10ef8:	bl	eda0 <__hwasan_memmove@@Base+0x3d8>
   10efc:	mov	x1, #0x10                  	// #16
   10f00:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10f04:	add	x0, x0, #0x540
   10f08:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10f0c:	adrp	x2, e000 <__interceptor_vfork@@Base+0xae0>
   10f10:	add	x2, x2, #0xd58
   10f14:	mov	x1, #0x3                   	// #3
   10f18:	mov	x0, x28
   10f1c:	bl	eda0 <__hwasan_memmove@@Base+0x3d8>
   10f20:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10f24:	add	x0, x0, #0x598
   10f28:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   10f2c:	cbz	x22, 10f3c <__hwasan_memmove@@Base+0x2574>
   10f30:	mov	x1, x25
   10f34:	mov	x0, x22
   10f38:	bl	10b30 <__hwasan_memmove@@Base+0x2168>
   10f3c:	mov	x1, x21
   10f40:	mov	x2, #0x0                   	// #0
   10f44:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   10f48:	add	x0, x0, #0xb28
   10f4c:	bl	2c948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4120>
   10f50:	ldr	x2, [sp, #136]
   10f54:	lsr	x1, x2, #56
   10f58:	neg	x0, x1, lsl #12
   10f5c:	lsl	x1, x1, #12
   10f60:	and	x0, x0, x2
   10f64:	and	x0, x0, #0xffffffffffffff
   10f68:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   10f6c:	add	x0, x23, #0xac8
   10f70:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   10f74:	ldrb	w0, [sp, #176]
   10f78:	cbnz	w0, 11038 <__hwasan_memmove@@Base+0x2670>
   10f7c:	add	x0, x23, #0xac8
   10f80:	str	xzr, [x0, #88]
   10f84:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   10f88:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   10f8c:	ldr	x0, [x0, #4056]
   10f90:	ldr	w1, [x0, #64]
   10f94:	cmp	w1, #0x1
   10f98:	b.gt	1102c <__hwasan_memmove@@Base+0x2664>
   10f9c:	ldrb	w0, [sp, #176]
   10fa0:	cmp	w1, #0x0
   10fa4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   10fa8:	b.ne	1102c <__hwasan_memmove@@Base+0x2664>  // b.any
   10fac:	cbnz	w0, 11174 <__hwasan_memmove@@Base+0x27ac>
   10fb0:	ldp	x0, x1, [sp, #152]
   10fb4:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   10fb8:	mov	x0, x24
   10fbc:	bl	2d8b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5090>
   10fc0:	ldp	x21, x22, [sp, #16]
   10fc4:	ldp	x23, x24, [sp, #32]
   10fc8:	ldp	x25, x26, [sp, #48]
   10fcc:	ldp	x27, x28, [sp, #64]
   10fd0:	ldr	x30, [sp, #80]
   10fd4:	ldp	x19, x20, [sp], #192
   10fd8:	ret
   10fdc:	cbz	x26, 11064 <__hwasan_memmove@@Base+0x269c>
   10fe0:	mov	x3, #0x1                   	// #1
   10fe4:	add	x0, x27, x2
   10fe8:	mov	w1, #0x0                   	// #0
   10fec:	sub	x2, x3, x2
   10ff0:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   10ff4:	b	10c8c <__hwasan_memmove@@Base+0x22c4>
   10ff8:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   10ffc:	str	x0, [x26]
   11000:	b	10c40 <__hwasan_memmove@@Base+0x2278>
   11004:	ldr	x0, [x21]
   11008:	ldr	x25, [x0]
   1100c:	b	10db4 <__hwasan_memmove@@Base+0x23ec>
   11010:	mov	w0, #0x1                   	// #1
   11014:	strb	w0, [x26, #2684]
   11018:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1101c:	mov	x0, x26
   11020:	add	x1, x1, #0x2c0
   11024:	bl	117a0 <__hwasan_tag_mismatch_v2@@Base+0x5a8>
   11028:	b	10ed8 <__hwasan_memmove@@Base+0x2510>
   1102c:	bl	1e5b0 <__sanitizer_set_report_fd@@Base+0x67f0>
   11030:	ldrb	w0, [sp, #176]
   11034:	b	10fac <__hwasan_memmove@@Base+0x25e4>
   11038:	ldr	x0, [sp, #152]
   1103c:	bl	24288 <__sanitizer_sandbox_on_notify@@Base+0xd00>
   11040:	b	10f7c <__hwasan_memmove@@Base+0x25b4>
   11044:	add	x2, x7, #0x10
   11048:	mov	x1, x7
   1104c:	cmp	x2, x19
   11050:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11054:	csel	x2, x2, x19, ls  // ls = plast
   11058:	add	x0, x0, #0xbc0
   1105c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   11060:	b	10e90 <__hwasan_memmove@@Base+0x24c8>
   11064:	ldr	x23, [x23, #4016]
   11068:	ldr	x0, [x23]
   1106c:	cbz	x0, 11168 <__hwasan_memmove@@Base+0x27a0>
   11070:	sub	x1, x0, #0x1
   11074:	tst	x1, x0
   11078:	b.ne	110b8 <__hwasan_memmove@@Base+0x26f0>  // b.any
   1107c:	neg	x23, x0
   11080:	add	x1, x28, #0xb50
   11084:	and	x23, x23, x0
   11088:	mov	w2, #0x0                   	// #0
   1108c:	mov	x0, x23
   11090:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   11094:	ldr	x1, [sp, #152]
   11098:	mov	x27, x0
   1109c:	ldr	x2, [sp, #168]
   110a0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   110a4:	ldp	x0, x1, [sp, #152]
   110a8:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   110ac:	stp	x27, x23, [sp, #152]
   110b0:	ldr	x2, [sp, #168]
   110b4:	b	10fe0 <__hwasan_memmove@@Base+0x2618>
   110b8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   110bc:	add	x0, x0, #0xb38
   110c0:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   110c4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   110c8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   110cc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   110d0:	add	x2, x2, #0xa90
   110d4:	add	x0, x0, #0x2e8
   110d8:	mov	x4, #0x0                   	// #0
   110dc:	mov	x3, #0x0                   	// #0
   110e0:	mov	w1, #0x5f                  	// #95
   110e4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   110e8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   110ec:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   110f0:	mov	x3, x25
   110f4:	add	x2, x2, #0xab0
   110f8:	add	x0, x0, #0x2e8
   110fc:	mov	x4, #0x1000                	// #4096
   11100:	mov	w1, #0x60                  	// #96
   11104:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   11108:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1110c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11110:	mov	x3, x25
   11114:	add	x2, x2, #0xad8
   11118:	add	x0, x0, #0x2e8
   1111c:	mov	x4, #0x80000               	// #524288
   11120:	mov	w1, #0x61                  	// #97
   11124:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   11128:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1112c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11130:	mov	x3, x25
   11134:	add	x2, x2, #0xb00
   11138:	add	x0, x0, #0x2e8
   1113c:	mov	x4, #0x0                   	// #0
   11140:	mov	w1, #0x64                  	// #100
   11144:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   11148:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1114c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11150:	add	x2, x2, #0xb38
   11154:	add	x0, x0, #0x180
   11158:	mov	x4, #0x0                   	// #0
   1115c:	mov	x3, #0x0                   	// #0
   11160:	mov	w1, #0x205                 	// #517
   11164:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   11168:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1116c:	str	x0, [x23]
   11170:	b	11070 <__hwasan_memmove@@Base+0x26a8>
   11174:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000011178 <__interceptor_setjmp@@Base>:
   11178:	mov	x1, #0x0                   	// #0
   1117c:	b	63c0 <__interceptor_sigsetjmp@plt>

0000000000011180 <__interceptor_sigsetjmp@@Base>:
   11180:	stp	x19, x20, [x0]
   11184:	stp	x21, x22, [x0, #16]
   11188:	stp	x23, x24, [x0, #32]
   1118c:	stp	x25, x26, [x0, #48]
   11190:	stp	x27, x28, [x0, #64]
   11194:	stp	x29, x30, [x0, #80]
   11198:	stp	d8, d9, [x0, #112]
   1119c:	stp	d10, d11, [x0, #128]
   111a0:	stp	d12, d13, [x0, #144]
   111a4:	stp	d14, d15, [x0, #160]
   111a8:	mov	x2, sp
   111ac:	str	x2, [x0, #104]
   111b0:	b	d2c8 <__interceptor_malloc@@Base+0x138>

00000000000111b4 <__hwasan_tag_mismatch@@Base>:
   111b4:	mov	x16, #0x1                   	// #1
   111b8:	and	x17, x1, #0xf
   111bc:	lsl	x16, x16, x17
   111c0:	and	x17, x0, #0xf
   111c4:	add	x17, x16, x17
   111c8:	ubfx	x16, x0, #4, #52
   111cc:	ldrb	w16, [x9, x16]
   111d0:	cmp	w16, #0xf
   111d4:	b.hi	111f8 <__hwasan_tag_mismatch_v2@@Base>  // b.pmore
   111d8:	cmp	w16, w17
   111dc:	b.cc	111f8 <__hwasan_tag_mismatch_v2@@Base>  // b.lo, b.ul, b.last
   111e0:	orr	x16, x0, #0xf
   111e4:	ldrb	w16, [x16]
   111e8:	cmp	x16, x0, lsr #56
   111ec:	b.ne	111f8 <__hwasan_tag_mismatch_v2@@Base>  // b.any
   111f0:	ldp	x0, x1, [sp], #256
   111f4:	ret

00000000000111f8 <__hwasan_tag_mismatch_v2@@Base>:
   111f8:	add	x29, sp, #0xe8
   111fc:	str	x28, [sp, #224]
   11200:	stp	x26, x27, [sp, #208]
   11204:	stp	x24, x25, [sp, #192]
   11208:	stp	x22, x23, [sp, #176]
   1120c:	stp	x20, x21, [sp, #160]
   11210:	stp	x18, x19, [sp, #144]
   11214:	stp	x16, x17, [sp, #128]
   11218:	stp	x14, x15, [sp, #112]
   1121c:	stp	x12, x13, [sp, #96]
   11220:	stp	x10, x11, [sp, #80]
   11224:	stp	x8, x9, [sp, #64]
   11228:	stp	x6, x7, [sp, #48]
   1122c:	stp	x4, x5, [sp, #32]
   11230:	stp	x2, x3, [sp, #16]
   11234:	mov	x2, sp
   11238:	bl	6410 <__hwasan_tag_mismatch4@plt>
   1123c:	nop
   11240:	stp	x29, x30, [sp, #-64]!
   11244:	mov	x29, sp
   11248:	stp	x19, x20, [sp, #16]
   1124c:	mov	x19, x0
   11250:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
   11254:	ldrb	w0, [x0, #7]
   11258:	cbnz	w0, 11318 <__hwasan_tag_mismatch_v2@@Base+0x120>
   1125c:	ldr	w1, [x19, #2672]
   11260:	ldr	w0, [x19, #2680]
   11264:	str	w1, [x19, #48]
   11268:	cbnz	w0, 112f0 <__hwasan_tag_mismatch_v2@@Base+0xf8>
   1126c:	nop
   11270:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
   11274:	ldrb	w0, [x0, #7]
   11278:	cbz	w0, 112fc <__hwasan_tag_mismatch_v2@@Base+0x104>
   1127c:	ldr	w2, [x19, #52]
   11280:	cbnz	w2, 112a4 <__hwasan_tag_mismatch_v2@@Base+0xac>
   11284:	ldr	w0, [x19, #48]
   11288:	eor	w0, w0, w0, lsl #13
   1128c:	eor	w0, w0, w0, lsr #17
   11290:	lsl	w1, w0, #5
   11294:	eor	w2, w0, w1
   11298:	stp	w2, w2, [x19, #48]
   1129c:	cmp	w0, w1
   112a0:	b.eq	11368 <__hwasan_tag_mismatch_v2@@Base+0x170>  // b.none
   112a4:	lsr	w0, w2, #8
   112a8:	str	w0, [x19, #52]
   112ac:	and	w2, w2, #0xff
   112b0:	cbz	w2, 11270 <__hwasan_tag_mismatch_v2@@Base+0x78>
   112b4:	ldr	x3, [x19, #2656]
   112b8:	mov	w4, #0x0                   	// #0
   112bc:	ldr	x0, [x3]
   112c0:	and	x0, x0, #0xffffffffffffff
   112c4:	add	w1, w4, #0x1
   112c8:	and	w4, w1, #0xff
   112cc:	str	xzr, [x0], #8
   112d0:	cmp	w2, w1, uxtb
   112d4:	ldr	x1, [x3]
   112d8:	and	x5, x1, #0xff00000000000000
   112dc:	lsr	x1, x1, #56
   112e0:	bic	x0, x0, x1, lsl #12
   112e4:	orr	x0, x0, x5
   112e8:	str	x0, [x3]
   112ec:	b.ne	112c0 <__hwasan_tag_mismatch_v2@@Base+0xc8>  // b.any
   112f0:	ldp	x19, x20, [sp, #16]
   112f4:	ldp	x29, x30, [sp], #64
   112f8:	ret
   112fc:	ldr	w0, [x19, #48]
   11300:	add	w0, w0, #0x1
   11304:	and	w2, w0, #0xff
   11308:	and	w0, w0, #0xff
   1130c:	str	w0, [x19, #48]
   11310:	cbz	w2, 11270 <__hwasan_tag_mismatch_v2@@Base+0x78>
   11314:	b	112b4 <__hwasan_tag_mismatch_v2@@Base+0xbc>
   11318:	add	x20, x29, #0x3c
   1131c:	str	x21, [x29, #32]
   11320:	lsr	x21, x29, #4
   11324:	b	11330 <__hwasan_tag_mismatch_v2@@Base+0x138>
   11328:	ldr	w1, [x29, #60]
   1132c:	cbnz	w1, 11360 <__hwasan_tag_mismatch_v2@@Base+0x168>
   11330:	mov	x0, x20
   11334:	mov	w2, #0x0                   	// #0
   11338:	mov	x1, #0x4                   	// #4
   1133c:	bl	1d910 <__sanitizer_set_report_fd@@Base+0x5b50>
   11340:	tst	w0, #0xff
   11344:	b.ne	11328 <__hwasan_tag_mismatch_v2@@Base+0x130>  // b.any
   11348:	bl	1c3c0 <__sanitizer_set_report_fd@@Base+0x4600>
   1134c:	lsr	x0, x0, #12
   11350:	eor	w1, w21, w0
   11354:	str	w1, [x29, #60]
   11358:	cmp	w0, w21
   1135c:	b.eq	11330 <__hwasan_tag_mismatch_v2@@Base+0x138>  // b.none
   11360:	ldr	x21, [x29, #32]
   11364:	b	11260 <__hwasan_tag_mismatch_v2@@Base+0x68>
   11368:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1136c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11370:	add	x2, x2, #0xbf0
   11374:	add	x0, x0, #0xc10
   11378:	mov	x4, #0x0                   	// #0
   1137c:	mov	x3, #0x0                   	// #0
   11380:	mov	w1, #0x75                  	// #117
   11384:	str	x21, [x29, #32]
   11388:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1138c:	nop
   11390:	sub	sp, sp, #0x60
   11394:	adrp	x4, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   11398:	stp	x19, x20, [sp, #16]
   1139c:	mov	x20, x0
   113a0:	mov	x19, x2
   113a4:	ldr	x0, [x4, #2856]
   113a8:	stp	x21, x22, [sp, #32]
   113ac:	mov	x22, x1
   113b0:	str	x30, [sp, #48]
   113b4:	str	x0, [x20, #2672]
   113b8:	add	x0, x0, #0x1
   113bc:	str	x0, [x4, #2856]
   113c0:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
   113c4:	ldr	w0, [x0, #28]
   113c8:	cbnz	w0, 11528 <__hwasan_tag_mismatch_v2@@Base+0x330>
   113cc:	bl	e250 <__interceptor_vfork@@Base+0xd30>
   113d0:	bl	e318 <__interceptor_vfork@@Base+0xdf8>
   113d4:	sub	x1, x19, #0x1
   113d8:	tst	x1, x19
   113dc:	b.ne	11568 <__hwasan_tag_mismatch_v2@@Base+0x370>  // b.any
   113e0:	cmp	x19, #0xfff
   113e4:	b.ls	115a8 <__hwasan_tag_mismatch_v2@@Base+0x3b0>  // b.plast
   113e8:	cmp	x19, #0x80, lsl #12
   113ec:	b.hi	115c8 <__hwasan_tag_mismatch_v2@@Base+0x3d0>  // b.pmore
   113f0:	ands	x3, x19, #0xfff
   113f4:	b.ne	115e8 <__hwasan_tag_mismatch_v2@@Base+0x3f0>  // b.any
   113f8:	ands	x3, x19, #0x7
   113fc:	b.ne	11604 <__hwasan_tag_mismatch_v2@@Base+0x40c>  // b.any
   11400:	lsl	x1, x19, #1
   11404:	udiv	x3, x22, x1
   11408:	msub	x3, x3, x1, x22
   1140c:	cbnz	x3, 11654 <__hwasan_tag_mismatch_v2@@Base+0x45c>
   11410:	lsr	x19, x19, #12
   11414:	orr	x19, x22, x19, lsl #56
   11418:	str	x19, [x0]
   1141c:	str	x0, [x20, #2656]
   11420:	bl	e338 <__interceptor_vfork@@Base+0xe18>
   11424:	cmp	x0, x20
   11428:	b.ne	11588 <__hwasan_tag_mismatch_v2@@Base+0x390>  // b.any
   1142c:	bl	e338 <__interceptor_vfork@@Base+0xe18>
   11430:	ldr	w5, [x0, #2680]
   11434:	ldr	x1, [x20, #2672]
   11438:	add	w5, w5, #0x1
   1143c:	str	w5, [x0, #2680]
   11440:	add	x3, x20, #0x18
   11444:	cmp	x1, #0x0
   11448:	add	x2, sp, #0x58
   1144c:	add	x1, x20, #0x10
   11450:	cset	w0, eq  // eq = none
   11454:	add	x4, sp, #0x50
   11458:	bl	23d98 <__sanitizer_sandbox_on_notify@@Base+0x810>
   1145c:	ldp	x0, x2, [x20, #16]
   11460:	ldp	x3, x1, [sp, #80]
   11464:	add	x1, x0, x1
   11468:	add	x2, x2, x3
   1146c:	str	x1, [x20, #8]
   11470:	str	x2, [x20, #32]
   11474:	cbz	x0, 114c8 <__hwasan_tag_mismatch_v2@@Base+0x2d0>
   11478:	add	x2, sp, #0x4c
   1147c:	cmp	x1, x2
   11480:	ccmp	x0, x2, #0x2, hi  // hi = pmore
   11484:	b.ls	114a8 <__hwasan_tag_mismatch_v2@@Base+0x2b0>  // b.plast
   11488:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1148c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11490:	add	x2, x2, #0xcd0
   11494:	add	x0, x0, #0xc10
   11498:	mov	x4, #0x0                   	// #0
   1149c:	mov	x3, #0x0                   	// #0
   114a0:	mov	w1, #0x3f                  	// #63
   114a4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   114a8:	bl	df18 <__interceptor_vfork@@Base+0x9f8>
   114ac:	tst	w0, #0xff
   114b0:	b.eq	11690 <__hwasan_tag_mismatch_v2@@Base+0x498>  // b.none
   114b4:	ldr	x0, [x20, #8]
   114b8:	sub	x0, x0, #0x1
   114bc:	bl	df18 <__interceptor_vfork@@Base+0x9f8>
   114c0:	tst	w0, #0xff
   114c4:	b.eq	11670 <__hwasan_tag_mismatch_v2@@Base+0x478>  // b.none
   114c8:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
   114cc:	ldrb	w0, [x0]
   114d0:	cbz	w0, 11504 <__hwasan_tag_mismatch_v2@@Base+0x30c>
   114d4:	ldr	x2, [x20, #2672]
   114d8:	cbz	x2, 11620 <__hwasan_tag_mismatch_v2@@Base+0x428>
   114dc:	ldp	x5, x4, [x20, #8]
   114e0:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   114e4:	ldp	x7, x0, [x20, #24]
   114e8:	str	x0, [sp]
   114ec:	add	x1, x1, #0xd88
   114f0:	mov	x3, x20
   114f4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   114f8:	sub	x6, x5, x4
   114fc:	add	x0, x0, #0xd98
   11500:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   11504:	bl	e338 <__interceptor_vfork@@Base+0xe18>
   11508:	ldr	w1, [x0, #2680]
   1150c:	ldp	x19, x20, [sp, #16]
   11510:	sub	w1, w1, #0x1
   11514:	ldp	x21, x22, [sp, #32]
   11518:	ldr	x30, [sp, #48]
   1151c:	str	w1, [x0, #2680]
   11520:	add	sp, sp, #0x60
   11524:	ret
   11528:	mov	w21, #0x18                  	// #24
   1152c:	mov	w2, #0x0                   	// #0
   11530:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11534:	add	x1, x1, #0xc58
   11538:	smull	x21, w0, w21
   1153c:	add	x0, x21, #0x10
   11540:	sub	x21, x21, #0x8
   11544:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   11548:	add	x21, x0, x21
   1154c:	stp	x21, x21, [x0]
   11550:	str	x0, [x20, #2648]
   11554:	bl	e250 <__interceptor_vfork@@Base+0xd30>
   11558:	bl	e318 <__interceptor_vfork@@Base+0xdf8>
   1155c:	sub	x1, x19, #0x1
   11560:	tst	x1, x19
   11564:	b.eq	113e0 <__hwasan_tag_mismatch_v2@@Base+0x1e8>  // b.none
   11568:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1156c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11570:	add	x2, x2, #0xa90
   11574:	add	x0, x0, #0x2e8
   11578:	mov	x4, #0x0                   	// #0
   1157c:	mov	x3, #0x0                   	// #0
   11580:	mov	w1, #0x5f                  	// #95
   11584:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   11588:	mov	x3, x0
   1158c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11590:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11594:	mov	x4, x20
   11598:	add	x2, x2, #0xca8
   1159c:	add	x0, x0, #0xc10
   115a0:	mov	w1, #0x31                  	// #49
   115a4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   115a8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   115ac:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   115b0:	mov	x3, x19
   115b4:	add	x2, x2, #0xab0
   115b8:	add	x0, x0, #0x2e8
   115bc:	mov	x4, #0x1000                	// #4096
   115c0:	mov	w1, #0x60                  	// #96
   115c4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   115c8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   115cc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   115d0:	mov	x3, x19
   115d4:	add	x2, x2, #0xad8
   115d8:	add	x0, x0, #0x2e8
   115dc:	mov	x4, #0x80000               	// #524288
   115e0:	mov	w1, #0x61                  	// #97
   115e4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   115e8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   115ec:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   115f0:	add	x2, x2, #0xc68
   115f4:	add	x0, x0, #0x2e8
   115f8:	mov	x4, #0x0                   	// #0
   115fc:	mov	w1, #0x62                  	// #98
   11600:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   11604:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11608:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1160c:	add	x2, x2, #0xc88
   11610:	add	x0, x0, #0x2e8
   11614:	mov	x4, #0x0                   	// #0
   11618:	mov	w1, #0x63                  	// #99
   1161c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   11620:	ldr	x4, [x20, #2648]
   11624:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11628:	ldr	x3, [x20, #2656]
   1162c:	add	x0, x0, #0xd48
   11630:	ldr	x2, [x4], #16
   11634:	mov	x1, #0xa80                 	// #2688
   11638:	ldrb	w3, [x3, #7]
   1163c:	sub	x2, x2, x4
   11640:	add	x2, x2, #0x28
   11644:	lsl	x3, x3, #12
   11648:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   1164c:	ldr	x2, [x20, #2672]
   11650:	b	114dc <__hwasan_tag_mismatch_v2@@Base+0x2e4>
   11654:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11658:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1165c:	add	x2, x2, #0xb00
   11660:	add	x0, x0, #0x2e8
   11664:	mov	x4, #0x0                   	// #0
   11668:	mov	w1, #0x64                  	// #100
   1166c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   11670:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11674:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11678:	add	x2, x2, #0xd20
   1167c:	add	x0, x0, #0xc10
   11680:	mov	x4, #0x0                   	// #0
   11684:	mov	x3, #0x0                   	// #0
   11688:	mov	w1, #0x41                  	// #65
   1168c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   11690:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11694:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11698:	add	x2, x2, #0xcf8
   1169c:	add	x0, x0, #0xc10
   116a0:	mov	x4, #0x0                   	// #0
   116a4:	mov	x3, #0x0                   	// #0
   116a8:	mov	w1, #0x40                  	// #64
   116ac:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   116b0:	stp	x19, x30, [sp, #-16]!
   116b4:	mov	x19, x0
   116b8:	ldp	x1, x0, [x0, #8]
   116bc:	cmp	x1, x0
   116c0:	b.eq	116d0 <__hwasan_tag_mismatch_v2@@Base+0x4d8>  // b.none
   116c4:	sub	x1, x1, x0
   116c8:	mov	w2, #0x0                   	// #0
   116cc:	bl	ec40 <__hwasan_memmove@@Base+0x278>
   116d0:	ldp	x0, x1, [x19, #24]
   116d4:	cmp	x0, x1
   116d8:	b.ne	116e4 <__hwasan_tag_mismatch_v2@@Base+0x4ec>  // b.any
   116dc:	ldp	x19, x30, [sp], #16
   116e0:	ret
   116e4:	ldp	x19, x30, [sp], #16
   116e8:	sub	x1, x1, x0
   116ec:	mov	w2, #0x0                   	// #0
   116f0:	b	ec40 <__hwasan_memmove@@Base+0x278>
   116f4:	nop
   116f8:	sub	sp, sp, #0x20
   116fc:	stp	x19, x30, [sp, #16]
   11700:	mov	x19, x0
   11704:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
   11708:	ldrb	w0, [x0]
   1170c:	cbnz	w0, 11770 <__hwasan_tag_mismatch_v2@@Base+0x578>
   11710:	add	x0, x19, #0x38
   11714:	bl	9ec0 <__sanitizer_get_allocated_size@@Base+0xd10>
   11718:	ldp	x1, x0, [x19, #8]
   1171c:	cmp	x1, x0
   11720:	b.eq	11730 <__hwasan_tag_mismatch_v2@@Base+0x538>  // b.none
   11724:	sub	x1, x1, x0
   11728:	mov	w2, #0x0                   	// #0
   1172c:	bl	ec40 <__hwasan_memmove@@Base+0x278>
   11730:	ldp	x0, x1, [x19, #24]
   11734:	cmp	x0, x1
   11738:	b.eq	11748 <__hwasan_tag_mismatch_v2@@Base+0x550>  // b.none
   1173c:	sub	x1, x1, x0
   11740:	mov	w2, #0x0                   	// #0
   11744:	bl	ec40 <__hwasan_memmove@@Base+0x278>
   11748:	ldr	x1, [x19, #2648]
   1174c:	cbz	x1, 11764 <__hwasan_tag_mismatch_v2@@Base+0x56c>
   11750:	mov	x0, x1
   11754:	ldr	x2, [x1], #16
   11758:	sub	x1, x2, x1
   1175c:	add	x1, x1, #0x28
   11760:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   11764:	ldp	x19, x30, [sp, #16]
   11768:	add	sp, sp, #0x20
   1176c:	b	21638 <__sanitizer_on_print@@Base+0x1dd8>
   11770:	ldp	x5, x4, [x19, #8]
   11774:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11778:	ldp	x7, x3, [x19, #24]
   1177c:	add	x1, x1, #0xdc8
   11780:	ldr	x2, [x19, #2672]
   11784:	str	x3, [sp]
   11788:	sub	x6, x5, x4
   1178c:	mov	x3, x19
   11790:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11794:	add	x0, x0, #0xd98
   11798:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   1179c:	b	11710 <__hwasan_tag_mismatch_v2@@Base+0x518>
   117a0:	mov	x3, x0
   117a4:	sub	sp, sp, #0x20
   117a8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   117ac:	add	x0, x2, #0xd98
   117b0:	ldp	x5, x4, [x3, #8]
   117b4:	ldp	x7, x6, [x3, #24]
   117b8:	ldr	x2, [x3, #2672]
   117bc:	str	x6, [sp]
   117c0:	sub	x6, x5, x4
   117c4:	str	x30, [sp, #16]
   117c8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   117cc:	ldr	x30, [sp, #16]
   117d0:	add	sp, sp, #0x20
   117d4:	ret
   117d8:	stp	x19, x30, [sp, #-16]!
   117dc:	mov	x19, x0
   117e0:	ldr	w0, [x0, #2680]
   117e4:	cbnz	w0, 11850 <__hwasan_tag_mismatch_v2@@Base+0x658>
   117e8:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
   117ec:	ldrb	w0, [x0, #7]
   117f0:	cbz	w0, 11834 <__hwasan_tag_mismatch_v2@@Base+0x63c>
   117f4:	ldr	w1, [x19, #52]
   117f8:	cbnz	w1, 1181c <__hwasan_tag_mismatch_v2@@Base+0x624>
   117fc:	ldr	w0, [x19, #48]
   11800:	eor	w0, w0, w0, lsl #13
   11804:	eor	w0, w0, w0, lsr #17
   11808:	lsl	w2, w0, #5
   1180c:	eor	w1, w0, w2
   11810:	stp	w1, w1, [x19, #48]
   11814:	cmp	w0, w2
   11818:	b.eq	1185c <__hwasan_tag_mismatch_v2@@Base+0x664>  // b.none
   1181c:	lsr	w2, w1, #8
   11820:	str	w2, [x19, #52]
   11824:	and	w0, w1, #0xff
   11828:	cbz	w0, 117e8 <__hwasan_tag_mismatch_v2@@Base+0x5f0>
   1182c:	ldp	x19, x30, [sp], #16
   11830:	ret
   11834:	ldr	w1, [x19, #48]
   11838:	add	w1, w1, #0x1
   1183c:	and	w0, w1, #0xff
   11840:	and	w1, w1, #0xff
   11844:	str	w1, [x19, #48]
   11848:	cbz	w0, 117e8 <__hwasan_tag_mismatch_v2@@Base+0x5f0>
   1184c:	b	1182c <__hwasan_tag_mismatch_v2@@Base+0x634>
   11850:	mov	w0, #0x0                   	// #0
   11854:	ldp	x19, x30, [sp], #16
   11858:	ret
   1185c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11860:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11864:	add	x2, x2, #0xbf0
   11868:	add	x0, x0, #0xc10
   1186c:	mov	x4, #0x0                   	// #0
   11870:	mov	x3, #0x0                   	// #0
   11874:	mov	w1, #0x75                  	// #117
   11878:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1187c:	nop
   11880:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   11884:	ldr	x0, [x0, #2864]
   11888:	ret
   1188c:	nop
   11890:	stp	x19, x30, [sp, #-16]!
   11894:	adrp	x19, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   11898:	ldr	x2, [x19, #2864]
   1189c:	cbnz	x2, 1192c <__hwasan_tag_mismatch_v2@@Base+0x734>
   118a0:	add	x3, x19, #0xb30
   118a4:	add	x1, x0, x1
   118a8:	strb	wzr, [x3, #64]
   118ac:	stp	x0, x1, [x3, #16]
   118b0:	stp	xzr, xzr, [x3, #48]
   118b4:	strb	wzr, [x3, #88]
   118b8:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
   118bc:	ldrsw	x0, [x0, #36]
   118c0:	lsl	x0, x0, #3
   118c4:	cmp	x0, #0x2, lsl #12
   118c8:	b.ls	1194c <__hwasan_tag_mismatch_v2@@Base+0x754>  // b.plast
   118cc:	cmp	x0, #0x4, lsl #12
   118d0:	b.ls	1197c <__hwasan_tag_mismatch_v2@@Base+0x784>  // b.plast
   118d4:	cmp	x0, #0x8, lsl #12
   118d8:	b.ls	11984 <__hwasan_tag_mismatch_v2@@Base+0x78c>  // b.plast
   118dc:	cmp	x0, #0x10, lsl #12
   118e0:	b.ls	1198c <__hwasan_tag_mismatch_v2@@Base+0x794>  // b.plast
   118e4:	cmp	x0, #0x20, lsl #12
   118e8:	b.ls	11994 <__hwasan_tag_mismatch_v2@@Base+0x79c>  // b.plast
   118ec:	cmp	x0, #0x40, lsl #12
   118f0:	b.ls	1199c <__hwasan_tag_mismatch_v2@@Base+0x7a4>  // b.plast
   118f4:	bl	7118 <__sanitizer_print_memory_profile@plt+0xab8>
   118f8:	mov	x1, x0
   118fc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11900:	add	x0, x0, #0xe58
   11904:	ldr	w1, [x1, #36]
   11908:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   1190c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11910:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   11914:	add	x2, x2, #0xe80
   11918:	add	x0, x0, #0x868
   1191c:	mov	x4, #0x0                   	// #0
   11920:	mov	x3, #0x0                   	// #0
   11924:	mov	w1, #0x41                  	// #65
   11928:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1192c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11930:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11934:	add	x2, x2, #0xdd8
   11938:	add	x0, x0, #0xe08
   1193c:	mov	x4, #0x0                   	// #0
   11940:	mov	x3, #0x0                   	// #0
   11944:	mov	w1, #0xa                   	// #10
   11948:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1194c:	mov	x3, #0x2000                	// #8192
   11950:	add	x0, x19, #0xb30
   11954:	lsl	x2, x3, #1
   11958:	add	x0, x0, #0x10
   1195c:	add	x1, x3, #0xa7f
   11960:	add	x1, x1, x2
   11964:	neg	x2, x2
   11968:	and	x1, x1, x2
   1196c:	str	x0, [x19, #2864]
   11970:	stp	x3, x1, [x0, #16]
   11974:	ldp	x19, x30, [sp], #16
   11978:	ret
   1197c:	mov	x3, #0x4000                	// #16384
   11980:	b	11950 <__hwasan_tag_mismatch_v2@@Base+0x758>
   11984:	mov	x3, #0x8000                	// #32768
   11988:	b	11950 <__hwasan_tag_mismatch_v2@@Base+0x758>
   1198c:	mov	x3, #0x10000               	// #65536
   11990:	b	11950 <__hwasan_tag_mismatch_v2@@Base+0x758>
   11994:	mov	x3, #0x20000               	// #131072
   11998:	b	11950 <__hwasan_tag_mismatch_v2@@Base+0x758>
   1199c:	mov	x3, #0x40000               	// #262144
   119a0:	b	11950 <__hwasan_tag_mismatch_v2@@Base+0x758>
   119a4:	nop

00000000000119a8 <_Znwm@@Base>:
   119a8:	sub	sp, sp, #0x840
   119ac:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   119b0:	stp	x29, x30, [sp]
   119b4:	mov	x29, sp
   119b8:	ldr	x1, [x1, #3904]
   119bc:	stp	x19, x20, [sp, #16]
   119c0:	mov	x19, x0
   119c4:	add	x20, x29, #0x28
   119c8:	str	xzr, [x29, #48]
   119cc:	ldr	w0, [x1]
   119d0:	add	x2, x20, #0x10
   119d4:	str	x2, [x29, #40]
   119d8:	str	xzr, [x29, #2104]
   119dc:	cbnz	w0, 11a00 <_Znwm@@Base+0x58>
   119e0:	mov	x1, x20
   119e4:	mov	x0, x19
   119e8:	bl	9938 <__sanitizer_get_allocated_size@@Base+0x788>
   119ec:	cbz	x0, 11a48 <_Znwm@@Base+0xa0>
   119f0:	ldp	x29, x30, [sp]
   119f4:	ldp	x19, x20, [sp, #16]
   119f8:	add	sp, sp, #0x840
   119fc:	ret
   11a00:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
   11a04:	mov	x1, x0
   11a08:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   11a0c:	ldr	x2, [x2, #4056]
   11a10:	ldr	w5, [x2, #36]
   11a14:	cbz	w5, 11a54 <_Znwm@@Base+0xac>
   11a18:	str	x29, [x29, #2104]
   11a1c:	cmp	w5, #0x1
   11a20:	ldrb	w4, [x2, #34]
   11a24:	b.eq	11a60 <_Znwm@@Base+0xb8>  // b.none
   11a28:	mov	x2, x29
   11a2c:	mov	x3, #0x0                   	// #0
   11a30:	mov	x0, x20
   11a34:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
   11a38:	mov	x1, x20
   11a3c:	mov	x0, x19
   11a40:	bl	9938 <__sanitizer_get_allocated_size@@Base+0x788>
   11a44:	cbnz	x0, 119f0 <_Znwm@@Base+0x48>
   11a48:	mov	x1, x20
   11a4c:	mov	x0, x19
   11a50:	bl	26ef8 <__sanitizer_cov_dump@@Base+0x398>
   11a54:	str	w5, [x29, #48]
   11a58:	str	xzr, [x29, #2104]
   11a5c:	b	119e0 <_Znwm@@Base+0x38>
   11a60:	str	w5, [x29, #48]
   11a64:	str	x0, [x29, #56]
   11a68:	b	119e0 <_Znwm@@Base+0x38>
   11a6c:	nop

0000000000011a70 <_Znam@@Base>:
   11a70:	b	119a8 <_Znwm@@Base>
   11a74:	nop

0000000000011a78 <_ZnwmRKSt9nothrow_t@@Base>:
   11a78:	sub	sp, sp, #0x840
   11a7c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   11a80:	stp	x29, x30, [sp]
   11a84:	mov	x29, sp
   11a88:	ldr	x1, [x1, #3904]
   11a8c:	stp	x19, x20, [sp, #16]
   11a90:	mov	x19, x0
   11a94:	add	x20, x29, #0x28
   11a98:	str	xzr, [x29, #48]
   11a9c:	ldr	w0, [x1]
   11aa0:	add	x2, x20, #0x10
   11aa4:	str	x2, [x29, #40]
   11aa8:	str	xzr, [x29, #2104]
   11aac:	cbnz	w0, 11acc <_ZnwmRKSt9nothrow_t@@Base+0x54>
   11ab0:	mov	x1, x20
   11ab4:	mov	x0, x19
   11ab8:	bl	9938 <__sanitizer_get_allocated_size@@Base+0x788>
   11abc:	ldp	x29, x30, [sp]
   11ac0:	ldp	x19, x20, [sp, #16]
   11ac4:	add	sp, sp, #0x840
   11ac8:	ret
   11acc:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
   11ad0:	mov	x1, x0
   11ad4:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   11ad8:	ldr	x2, [x2, #4056]
   11adc:	ldr	w5, [x2, #36]
   11ae0:	cbz	w5, 11b20 <_ZnwmRKSt9nothrow_t@@Base+0xa8>
   11ae4:	str	x29, [x29, #2104]
   11ae8:	cmp	w5, #0x1
   11aec:	ldrb	w4, [x2, #34]
   11af0:	b.eq	11b44 <_ZnwmRKSt9nothrow_t@@Base+0xcc>  // b.none
   11af4:	mov	x2, x29
   11af8:	mov	x3, #0x0                   	// #0
   11afc:	mov	x0, x20
   11b00:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
   11b04:	mov	x1, x20
   11b08:	mov	x0, x19
   11b0c:	bl	9938 <__sanitizer_get_allocated_size@@Base+0x788>
   11b10:	ldp	x29, x30, [sp]
   11b14:	ldp	x19, x20, [sp, #16]
   11b18:	add	sp, sp, #0x840
   11b1c:	ret
   11b20:	str	w5, [x29, #48]
   11b24:	str	xzr, [x29, #2104]
   11b28:	mov	x1, x20
   11b2c:	mov	x0, x19
   11b30:	bl	9938 <__sanitizer_get_allocated_size@@Base+0x788>
   11b34:	ldp	x29, x30, [sp]
   11b38:	ldp	x19, x20, [sp, #16]
   11b3c:	add	sp, sp, #0x840
   11b40:	ret
   11b44:	str	w5, [x29, #48]
   11b48:	str	x0, [x29, #56]
   11b4c:	b	11b28 <_ZnwmRKSt9nothrow_t@@Base+0xb0>

0000000000011b50 <_ZnamRKSt9nothrow_t@@Base>:
   11b50:	b	11a78 <_ZnwmRKSt9nothrow_t@@Base>
   11b54:	nop

0000000000011b58 <_ZdlPv@@Base>:
   11b58:	sub	sp, sp, #0x840
   11b5c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   11b60:	stp	x29, x30, [sp]
   11b64:	mov	x29, sp
   11b68:	ldr	x1, [x1, #3904]
   11b6c:	stp	x19, x20, [sp, #16]
   11b70:	mov	x19, x0
   11b74:	add	x20, x29, #0x28
   11b78:	str	xzr, [x29, #48]
   11b7c:	ldr	w0, [x1]
   11b80:	add	x2, x20, #0x10
   11b84:	str	x2, [x29, #40]
   11b88:	str	xzr, [x29, #2104]
   11b8c:	cbnz	w0, 11bb0 <_ZdlPv@@Base+0x58>
   11b90:	cbz	x19, 11ba0 <_ZdlPv@@Base+0x48>
   11b94:	mov	x1, x20
   11b98:	mov	x0, x19
   11b9c:	bl	a8e0 <__sanitizer_get_allocated_size@@Base+0x1730>
   11ba0:	ldp	x29, x30, [sp]
   11ba4:	ldp	x19, x20, [sp, #16]
   11ba8:	add	sp, sp, #0x840
   11bac:	ret
   11bb0:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
   11bb4:	mov	x1, x0
   11bb8:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   11bbc:	ldr	x2, [x2, #4056]
   11bc0:	ldr	w5, [x2, #36]
   11bc4:	cbz	w5, 11bec <_ZdlPv@@Base+0x94>
   11bc8:	str	x29, [x29, #2104]
   11bcc:	cmp	w5, #0x1
   11bd0:	ldrb	w4, [x2, #34]
   11bd4:	b.eq	11bf8 <_ZdlPv@@Base+0xa0>  // b.none
   11bd8:	mov	x2, x29
   11bdc:	mov	x0, x20
   11be0:	mov	x3, #0x0                   	// #0
   11be4:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
   11be8:	b	11b90 <_ZdlPv@@Base+0x38>
   11bec:	str	w5, [x29, #48]
   11bf0:	str	xzr, [x29, #2104]
   11bf4:	b	11b90 <_ZdlPv@@Base+0x38>
   11bf8:	str	w5, [x29, #48]
   11bfc:	str	x0, [x29, #56]
   11c00:	b	11b90 <_ZdlPv@@Base+0x38>
   11c04:	nop

0000000000011c08 <_ZdaPv@@Base>:
   11c08:	b	11b58 <_ZdlPv@@Base>
   11c0c:	nop

0000000000011c10 <_ZdlPvRKSt9nothrow_t@@Base>:
   11c10:	sub	sp, sp, #0x840
   11c14:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   11c18:	stp	x29, x30, [sp]
   11c1c:	mov	x29, sp
   11c20:	ldr	x1, [x1, #3904]
   11c24:	stp	x19, x20, [sp, #16]
   11c28:	mov	x19, x0
   11c2c:	add	x20, x29, #0x28
   11c30:	str	xzr, [x29, #48]
   11c34:	ldr	w0, [x1]
   11c38:	add	x2, x20, #0x10
   11c3c:	str	x2, [x29, #40]
   11c40:	str	xzr, [x29, #2104]
   11c44:	cbnz	w0, 11c68 <_ZdlPvRKSt9nothrow_t@@Base+0x58>
   11c48:	cbz	x19, 11c58 <_ZdlPvRKSt9nothrow_t@@Base+0x48>
   11c4c:	mov	x1, x20
   11c50:	mov	x0, x19
   11c54:	bl	a8e0 <__sanitizer_get_allocated_size@@Base+0x1730>
   11c58:	ldp	x29, x30, [sp]
   11c5c:	ldp	x19, x20, [sp, #16]
   11c60:	add	sp, sp, #0x840
   11c64:	ret
   11c68:	bl	27bb8 <__sanitizer_cov_dump@@Base+0x1058>
   11c6c:	mov	x1, x0
   11c70:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   11c74:	ldr	x2, [x2, #4056]
   11c78:	ldr	w5, [x2, #36]
   11c7c:	cbz	w5, 11ca4 <_ZdlPvRKSt9nothrow_t@@Base+0x94>
   11c80:	str	x29, [x29, #2104]
   11c84:	cmp	w5, #0x1
   11c88:	ldrb	w4, [x2, #34]
   11c8c:	b.eq	11cb0 <_ZdlPvRKSt9nothrow_t@@Base+0xa0>  // b.none
   11c90:	mov	x2, x29
   11c94:	mov	x0, x20
   11c98:	mov	x3, #0x0                   	// #0
   11c9c:	bl	7178 <__sanitizer_print_memory_profile@plt+0xb18>
   11ca0:	b	11c48 <_ZdlPvRKSt9nothrow_t@@Base+0x38>
   11ca4:	str	w5, [x29, #48]
   11ca8:	str	xzr, [x29, #2104]
   11cac:	b	11c48 <_ZdlPvRKSt9nothrow_t@@Base+0x38>
   11cb0:	str	w5, [x29, #48]
   11cb4:	str	x0, [x29, #56]
   11cb8:	b	11c48 <_ZdlPvRKSt9nothrow_t@@Base+0x38>
   11cbc:	nop

0000000000011cc0 <_ZdaPvRKSt9nothrow_t@@Base>:
   11cc0:	b	11c10 <_ZdlPvRKSt9nothrow_t@@Base>
   11cc4:	nop
   11cc8:	stp	x19, x20, [sp, #-48]!
   11ccc:	mov	x19, x3
   11cd0:	mov	x20, x0
   11cd4:	stp	x21, x22, [sp, #16]
   11cd8:	mov	x22, x2
   11cdc:	mov	x21, x1
   11ce0:	mov	x1, x0
   11ce4:	mov	x0, #0xffffffffffffffff    	// #-1
   11ce8:	str	x30, [sp, #32]
   11cec:	bl	62e0 <dlsym@plt>
   11cf0:	cmp	x19, x22
   11cf4:	mov	x2, x0
   11cf8:	cset	w22, eq  // eq = none
   11cfc:	cbz	x0, 11d18 <_ZdaPvRKSt9nothrow_t@@Base+0x58>
   11d00:	ldr	x30, [sp, #32]
   11d04:	str	x2, [x21]
   11d08:	mov	w0, w22
   11d0c:	ldp	x21, x22, [sp, #16]
   11d10:	ldp	x19, x20, [sp], #48
   11d14:	ret
   11d18:	mov	x1, x20
   11d1c:	bl	62e0 <dlsym@plt>
   11d20:	mov	x2, x0
   11d24:	cmp	x19, x0
   11d28:	b.eq	11d4c <_ZdaPvRKSt9nothrow_t@@Base+0x8c>  // b.none
   11d2c:	cmp	x0, #0x0
   11d30:	ldr	x30, [sp, #32]
   11d34:	str	x2, [x21]
   11d38:	csel	w22, w22, wzr, ne  // ne = any
   11d3c:	mov	w0, w22
   11d40:	ldp	x21, x22, [sp, #16]
   11d44:	ldp	x19, x20, [sp], #48
   11d48:	ret
   11d4c:	mov	w22, #0x0                   	// #0
   11d50:	mov	x2, #0x0                   	// #0
   11d54:	b	11d00 <_ZdaPvRKSt9nothrow_t@@Base+0x40>
   11d58:	stp	x19, x20, [sp, #-32]!
   11d5c:	mov	x5, x1
   11d60:	mov	x20, x3
   11d64:	stp	x21, x30, [sp, #16]
   11d68:	mov	x21, x2
   11d6c:	mov	x19, x4
   11d70:	mov	x1, x0
   11d74:	mov	x2, x5
   11d78:	mov	x0, #0xffffffffffffffff    	// #-1
   11d7c:	bl	6260 <dlvsym@plt>
   11d80:	cmp	x0, #0x0
   11d84:	str	x0, [x21]
   11d88:	ccmp	x20, x19, #0x0, ne  // ne = any
   11d8c:	cset	w0, eq  // eq = none
   11d90:	ldp	x21, x30, [sp, #16]
   11d94:	ldp	x19, x20, [sp], #32
   11d98:	ret
   11d9c:	nop
   11da0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   11da4:	mov	x2, x0
   11da8:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11dac:	add	x0, x0, #0xe90
   11db0:	ldr	x1, [x1, #4024]
   11db4:	adrp	x3, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   11db8:	mov	w4, #0x1                   	// #1
   11dbc:	str	x30, [sp, #-16]!
   11dc0:	strb	w4, [x3, #3008]
   11dc4:	ldr	x1, [x1]
   11dc8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   11dcc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   11dd0:	stp	x19, x20, [sp, #-48]!
   11dd4:	adrp	x19, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   11dd8:	add	x0, x19, #0xbc0
   11ddc:	add	x0, x0, #0x8
   11de0:	mov	w2, #0x1                   	// #1
   11de4:	str	x30, [sp, #32]
   11de8:	ldxrb	w1, [x0]
   11dec:	stxrb	w3, w2, [x0]
   11df0:	cbnz	w3, 11de8 <_ZdaPvRKSt9nothrow_t@@Base+0x128>
   11df4:	dmb	ish
   11df8:	tst	w1, #0xff
   11dfc:	b.eq	11e04 <_ZdaPvRKSt9nothrow_t@@Base+0x144>  // b.none
   11e00:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   11e04:	add	x0, x19, #0xbc0
   11e08:	ldrb	w0, [x0, #16]
   11e0c:	tst	w0, #0xff
   11e10:	b.eq	11e2c <_ZdaPvRKSt9nothrow_t@@Base+0x16c>  // b.none
   11e14:	dmb	ish
   11e18:	add	x19, x19, #0xbc0
   11e1c:	strb	wzr, [x19, #8]
   11e20:	ldr	x30, [sp, #32]
   11e24:	ldp	x19, x20, [sp], #48
   11e28:	ret
   11e2c:	mov	x2, #0x28                  	// #40
   11e30:	mov	w1, #0x0                   	// #0
   11e34:	adrp	x20, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   11e38:	stp	x21, x22, [sp, #16]
   11e3c:	add	x21, x20, #0x440
   11e40:	adrp	x22, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   11e44:	add	x0, x22, #0x448
   11e48:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   11e4c:	add	x22, x22, #0x448
   11e50:	add	x3, x21, #0xc0, lsl #12
   11e54:	mov	x0, x21
   11e58:	add	x21, x21, #0x80, lsl #12
   11e5c:	mov	x2, #0x80000               	// #524288
   11e60:	mov	w1, #0x0                   	// #0
   11e64:	str	x22, [x3, #4104]
   11e68:	str	x22, [x3, #4112]
   11e6c:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   11e70:	strb	wzr, [x21]
   11e74:	mov	x2, #0xd80                 	// #3456
   11e78:	mov	w1, #0x0                   	// #0
   11e7c:	adrp	x0, ed000 <__hwasan_shadow_memory_dynamic_address@@Base+0x902e0>
   11e80:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   11e84:	add	x0, x0, #0x480
   11e88:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   11e8c:	mov	x2, #0x248                 	// #584
   11e90:	adrp	x0, ee000 <__hwasan_shadow_memory_dynamic_address@@Base+0x912e0>
   11e94:	movk	x2, #0x4, lsl #16
   11e98:	add	x0, x0, #0x200
   11e9c:	mov	w1, #0x0                   	// #0
   11ea0:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   11ea4:	ldr	x21, [x21, #4016]
   11ea8:	ldr	x0, [x21]
   11eac:	cbz	x0, 11ef4 <_ZdaPvRKSt9nothrow_t@@Base+0x234>
   11eb0:	add	x20, x20, #0x440
   11eb4:	adrp	x1, ee000 <__hwasan_shadow_memory_dynamic_address@@Base+0x912e0>
   11eb8:	add	x20, x20, #0x80, lsl #12
   11ebc:	add	x1, x1, #0x210
   11ec0:	str	x0, [x20, #3520]
   11ec4:	str	x1, [x20, #3528]
   11ec8:	dmb	ish
   11ecc:	add	x0, x19, #0xbc0
   11ed0:	mov	w1, #0x1                   	// #1
   11ed4:	strb	w1, [x0, #16]
   11ed8:	ldp	x21, x22, [sp, #16]
   11edc:	dmb	ish
   11ee0:	add	x19, x19, #0xbc0
   11ee4:	strb	wzr, [x19, #8]
   11ee8:	ldr	x30, [sp, #32]
   11eec:	ldp	x19, x20, [sp], #48
   11ef0:	ret
   11ef4:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   11ef8:	str	x0, [x21]
   11efc:	b	11eb0 <_ZdaPvRKSt9nothrow_t@@Base+0x1f0>
   11f00:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   11f04:	add	x0, x0, #0xbc0
   11f08:	ldrb	w0, [x0, #16]
   11f0c:	dmb	ish
   11f10:	and	w0, w0, #0xff
   11f14:	cbz	w0, 11f24 <_ZdaPvRKSt9nothrow_t@@Base+0x264>
   11f18:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   11f1c:	add	x0, x0, #0x440
   11f20:	ret
   11f24:	str	x30, [sp, #-16]!
   11f28:	bl	11dd0 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   11f2c:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   11f30:	add	x0, x0, #0x440
   11f34:	ldr	x30, [sp], #16
   11f38:	ret
   11f3c:	nop
   11f40:	adrp	x2, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
   11f44:	stp	x19, x20, [sp, #-32]!
   11f48:	mov	x20, x0
   11f4c:	ldr	x0, [x2, #616]
   11f50:	str	x30, [sp, #24]
   11f54:	sub	x19, x0, #0x1
   11f58:	tst	x0, x19
   11f5c:	b.ne	12014 <_ZdaPvRKSt9nothrow_t@@Base+0x354>  // b.any
   11f60:	ldp	x3, x2, [x20]
   11f64:	add	x1, x1, x19
   11f68:	neg	x19, x0
   11f6c:	and	x19, x1, x19
   11f70:	sub	x0, x3, x2
   11f74:	cmp	x0, x19
   11f78:	b.ge	11ff0 <_ZdaPvRKSt9nothrow_t@@Base+0x330>  // b.tcont
   11f7c:	str	x21, [sp, #16]
   11f80:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   11f84:	ldr	x21, [x21, #4016]
   11f88:	ldr	x0, [x21]
   11f8c:	cbz	x0, 12008 <_ZdaPvRKSt9nothrow_t@@Base+0x348>
   11f90:	sub	x1, x0, #0x1
   11f94:	tst	x1, x0
   11f98:	b.ne	12018 <_ZdaPvRKSt9nothrow_t@@Base+0x358>  // b.any
   11f9c:	add	x1, x19, x1
   11fa0:	neg	x0, x0
   11fa4:	and	x21, x1, x0
   11fa8:	mov	w2, #0x0                   	// #0
   11fac:	mov	x0, x21
   11fb0:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   11fb4:	add	x1, x1, #0xee0
   11fb8:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   11fbc:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   11fc0:	mov	x2, x0
   11fc4:	ldr	x3, [x1, #3032]
   11fc8:	add	x1, x0, x21
   11fcc:	stp	x1, x0, [x20]
   11fd0:	cbz	x3, 11fe0 <_ZdaPvRKSt9nothrow_t@@Base+0x320>
   11fd4:	mov	x1, x21
   11fd8:	blr	x3
   11fdc:	ldp	x1, x2, [x20]
   11fe0:	sub	x1, x1, x2
   11fe4:	cmp	x19, x1
   11fe8:	b.gt	12028 <_ZdaPvRKSt9nothrow_t@@Base+0x368>
   11fec:	ldr	x21, [sp, #16]
   11ff0:	add	x19, x2, x19
   11ff4:	ldr	x30, [sp, #24]
   11ff8:	str	x19, [x20, #8]
   11ffc:	mov	x0, x2
   12000:	ldp	x19, x20, [sp], #32
   12004:	ret
   12008:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1200c:	str	x0, [x21]
   12010:	b	11f90 <_ZdaPvRKSt9nothrow_t@@Base+0x2d0>
   12014:	str	x21, [sp, #16]
   12018:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1201c:	add	x0, x0, #0xb38
   12020:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   12024:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   12028:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1202c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   12030:	add	x2, x2, #0xef0
   12034:	add	x0, x0, #0xf30
   12038:	mov	x4, #0x0                   	// #0
   1203c:	mov	x3, #0x0                   	// #0
   12040:	mov	w1, #0xe1                  	// #225
   12044:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12048:	sub	x1, x0, #0x1
   1204c:	tst	x1, x0
   12050:	b.ne	1206c <_ZdaPvRKSt9nothrow_t@@Base+0x3ac>  // b.any
   12054:	adrp	x2, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
   12058:	ldr	x1, [x2, #616]
   1205c:	cmp	x1, x0
   12060:	csel	x0, x1, x0, cs  // cs = hs, nlast
   12064:	str	x0, [x2, #616]
   12068:	ret
   1206c:	str	x30, [sp, #-16]!
   12070:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   12074:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   12078:	add	x2, x2, #0x370
   1207c:	add	x0, x0, #0xf30
   12080:	mov	x4, #0x0                   	// #0
   12084:	mov	x3, #0x0                   	// #0
   12088:	mov	w1, #0xe8                  	// #232
   1208c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12090:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12094:	str	x0, [x1, #3032]
   12098:	ret
   1209c:	nop
   120a0:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   120a4:	ldrb	w0, [x0, #3008]
   120a8:	tst	w0, #0xff
   120ac:	cset	w0, ne  // ne = any
   120b0:	ret
   120b4:	nop
   120b8:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   120bc:	mov	w1, #0x1                   	// #1
   120c0:	strb	w1, [x0, #3008]
   120c4:	ret
   120c8:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   120cc:	add	x0, x0, #0xbc0
   120d0:	ldrb	w0, [x0, #32]
   120d4:	tst	w0, #0xff
   120d8:	cset	w0, ne  // ne = any
   120dc:	ret
   120e0:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   120e4:	add	x1, x1, #0xbc0
   120e8:	and	w0, w0, #0xff
   120ec:	strb	w0, [x1, #32]
   120f0:	ret
   120f4:	nop
   120f8:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   120fc:	add	x0, x0, #0xf88
   12100:	b	1fbf8 <__sanitizer_on_print@@Base+0x398>
   12104:	nop
   12108:	cmn	x0, #0x9
   1210c:	b.hi	121f0 <_ZdaPvRKSt9nothrow_t@@Base+0x530>  // b.pmore
   12110:	stp	x19, x20, [sp, #-48]!
   12114:	cmp	x2, #0x0
   12118:	add	x20, x0, #0x8
   1211c:	str	x30, [sp, #24]
   12120:	mov	x0, #0x8                   	// #8
   12124:	csel	x19, x2, x0, ne  // ne = any
   12128:	cbz	x1, 1217c <_ZdaPvRKSt9nothrow_t@@Base+0x4bc>
   1212c:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12130:	add	x0, x0, #0xbc0
   12134:	ldrb	w0, [x0, #16]
   12138:	dmb	ish
   1213c:	and	w0, w0, #0xff
   12140:	cbz	w0, 12200 <_ZdaPvRKSt9nothrow_t@@Base+0x540>
   12144:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12148:	mov	x3, x19
   1214c:	mov	x2, x20
   12150:	add	x0, x0, #0x440
   12154:	bl	138b8 <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   12158:	cbz	x0, 12210 <_ZdaPvRKSt9nothrow_t@@Base+0x550>
   1215c:	mov	x1, #0xc041                	// #49217
   12160:	movk	x1, #0xbceb, lsl #16
   12164:	movk	x1, #0xb03a, lsl #32
   12168:	movk	x1, #0x6a6c, lsl #48
   1216c:	str	x1, [x0], #8
   12170:	ldr	x30, [sp, #24]
   12174:	ldp	x19, x20, [sp], #48
   12178:	ret
   1217c:	str	x21, [sp, #16]
   12180:	adrp	x21, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12184:	add	x0, x21, #0xbc0
   12188:	mov	w2, #0x1                   	// #1
   1218c:	add	x0, x0, #0x28
   12190:	ldxrb	w1, [x0]
   12194:	stxrb	w3, w2, [x0]
   12198:	cbnz	w3, 12190 <_ZdaPvRKSt9nothrow_t@@Base+0x4d0>
   1219c:	dmb	ish
   121a0:	tst	w1, #0xff
   121a4:	b.eq	121ac <_ZdaPvRKSt9nothrow_t@@Base+0x4ec>  // b.none
   121a8:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   121ac:	add	x0, x21, #0xbc0
   121b0:	ldrb	w0, [x0, #16]
   121b4:	dmb	ish
   121b8:	and	w0, w0, #0xff
   121bc:	cbz	w0, 121f8 <_ZdaPvRKSt9nothrow_t@@Base+0x538>
   121c0:	mov	x3, x19
   121c4:	mov	x2, x20
   121c8:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   121cc:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   121d0:	add	x1, x1, #0xbf0
   121d4:	add	x0, x0, #0x440
   121d8:	bl	138b8 <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   121dc:	dmb	ish
   121e0:	add	x21, x21, #0xbc0
   121e4:	strb	wzr, [x21, #40]
   121e8:	ldr	x21, [sp, #16]
   121ec:	b	12158 <_ZdaPvRKSt9nothrow_t@@Base+0x498>
   121f0:	mov	x0, #0x0                   	// #0
   121f4:	ret
   121f8:	bl	11dd0 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   121fc:	b	121c0 <_ZdaPvRKSt9nothrow_t@@Base+0x500>
   12200:	str	x1, [sp, #40]
   12204:	bl	11dd0 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   12208:	ldr	x1, [sp, #40]
   1220c:	b	12144 <_ZdaPvRKSt9nothrow_t@@Base+0x484>
   12210:	mov	x0, x20
   12214:	str	x21, [sp, #16]
   12218:	bl	11da0 <_ZdaPvRKSt9nothrow_t@@Base+0xe0>
   1221c:	nop
   12220:	stp	x19, x20, [sp, #-48]!
   12224:	mov	x19, x2
   12228:	str	x30, [sp, #32]
   1222c:	cbz	x0, 122d8 <_ZdaPvRKSt9nothrow_t@@Base+0x618>
   12230:	mov	x20, x1
   12234:	umulh	x1, x1, x0
   12238:	cbnz	x1, 12370 <_ZdaPvRKSt9nothrow_t@@Base+0x6b0>
   1223c:	mul	x20, x0, x20
   12240:	cmn	x20, #0x9
   12244:	b.hi	122c4 <_ZdaPvRKSt9nothrow_t@@Base+0x604>  // b.pmore
   12248:	stp	x21, x22, [sp, #16]
   1224c:	add	x21, x20, #0x8
   12250:	cbz	x19, 122e8 <_ZdaPvRKSt9nothrow_t@@Base+0x628>
   12254:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12258:	add	x0, x0, #0xbc0
   1225c:	ldrb	w0, [x0, #16]
   12260:	dmb	ish
   12264:	and	w0, w0, #0xff
   12268:	cbz	w0, 12358 <_ZdaPvRKSt9nothrow_t@@Base+0x698>
   1226c:	mov	x1, x19
   12270:	mov	x2, x21
   12274:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12278:	mov	x3, #0x8                   	// #8
   1227c:	add	x0, x0, #0x440
   12280:	bl	138b8 <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   12284:	mov	x19, x0
   12288:	cbz	x19, 12360 <_ZdaPvRKSt9nothrow_t@@Base+0x6a0>
   1228c:	mov	x0, #0xc041                	// #49217
   12290:	mov	x2, x20
   12294:	movk	x0, #0xbceb, lsl #16
   12298:	mov	w1, #0x0                   	// #0
   1229c:	movk	x0, #0xb03a, lsl #32
   122a0:	movk	x0, #0x6a6c, lsl #48
   122a4:	str	x0, [x19], #8
   122a8:	mov	x0, x19
   122ac:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   122b0:	mov	x0, x19
   122b4:	ldp	x21, x22, [sp, #16]
   122b8:	ldr	x30, [sp, #32]
   122bc:	ldp	x19, x20, [sp], #48
   122c0:	ret
   122c4:	mov	x19, #0x0                   	// #0
   122c8:	mov	x0, x19
   122cc:	ldr	x30, [sp, #32]
   122d0:	ldp	x19, x20, [sp], #48
   122d4:	ret
   122d8:	stp	x21, x22, [sp, #16]
   122dc:	mov	x20, #0x0                   	// #0
   122e0:	add	x21, x20, #0x8
   122e4:	cbnz	x19, 12254 <_ZdaPvRKSt9nothrow_t@@Base+0x594>
   122e8:	adrp	x22, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   122ec:	add	x0, x22, #0xbc0
   122f0:	add	x0, x0, #0x28
   122f4:	mov	w2, #0x1                   	// #1
   122f8:	ldxrb	w1, [x0]
   122fc:	stxrb	w3, w2, [x0]
   12300:	cbnz	w3, 122f8 <_ZdaPvRKSt9nothrow_t@@Base+0x638>
   12304:	dmb	ish
   12308:	tst	w1, #0xff
   1230c:	b.eq	12314 <_ZdaPvRKSt9nothrow_t@@Base+0x654>  // b.none
   12310:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   12314:	add	x0, x22, #0xbc0
   12318:	ldrb	w0, [x0, #16]
   1231c:	dmb	ish
   12320:	and	w0, w0, #0xff
   12324:	cbz	w0, 12368 <_ZdaPvRKSt9nothrow_t@@Base+0x6a8>
   12328:	mov	x2, x21
   1232c:	mov	x3, #0x8                   	// #8
   12330:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12334:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12338:	add	x1, x1, #0xbf0
   1233c:	add	x0, x0, #0x440
   12340:	bl	138b8 <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   12344:	dmb	ish
   12348:	mov	x19, x0
   1234c:	add	x22, x22, #0xbc0
   12350:	strb	wzr, [x22, #40]
   12354:	b	12288 <_ZdaPvRKSt9nothrow_t@@Base+0x5c8>
   12358:	bl	11dd0 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   1235c:	b	1226c <_ZdaPvRKSt9nothrow_t@@Base+0x5ac>
   12360:	mov	x0, x21
   12364:	bl	11da0 <_ZdaPvRKSt9nothrow_t@@Base+0xe0>
   12368:	bl	11dd0 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   1236c:	b	12328 <_ZdaPvRKSt9nothrow_t@@Base+0x668>
   12370:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   12374:	mov	x2, x0
   12378:	mov	x3, x20
   1237c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   12380:	ldr	x1, [x1, #4024]
   12384:	add	x0, x0, #0xfe0
   12388:	stp	x21, x22, [sp, #16]
   1238c:	ldr	x1, [x1]
   12390:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   12394:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   12398:	stp	x19, x20, [sp, #-48]!
   1239c:	mov	x20, x1
   123a0:	mov	x1, x2
   123a4:	str	x30, [sp, #24]
   123a8:	cbz	x0, 124a0 <_ZdaPvRKSt9nothrow_t@@Base+0x7e0>
   123ac:	cmn	x20, #0x9
   123b0:	b.hi	124b4 <_ZdaPvRKSt9nothrow_t@@Base+0x7f4>  // b.pmore
   123b4:	mov	x3, #0xc041                	// #49217
   123b8:	add	x20, x20, #0x8
   123bc:	ldur	x4, [x0, #-8]
   123c0:	movk	x3, #0xbceb, lsl #16
   123c4:	movk	x3, #0xb03a, lsl #32
   123c8:	sub	x19, x0, #0x8
   123cc:	movk	x3, #0x6a6c, lsl #48
   123d0:	cmp	x4, x3
   123d4:	b.ne	124d4 <_ZdaPvRKSt9nothrow_t@@Base+0x814>  // b.any
   123d8:	cbz	x2, 12424 <_ZdaPvRKSt9nothrow_t@@Base+0x764>
   123dc:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   123e0:	add	x0, x0, #0xbc0
   123e4:	ldrb	w0, [x0, #16]
   123e8:	dmb	ish
   123ec:	and	w0, w0, #0xff
   123f0:	cbz	w0, 124c4 <_ZdaPvRKSt9nothrow_t@@Base+0x804>
   123f4:	mov	x2, x19
   123f8:	mov	x3, x20
   123fc:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12400:	mov	x4, #0x8                   	// #8
   12404:	add	x0, x0, #0x440
   12408:	bl	13f28 <_ZdaPvRKSt9nothrow_t@@Base+0x2268>
   1240c:	mov	x1, x0
   12410:	add	x0, x1, #0x8
   12414:	cbz	x1, 124f0 <_ZdaPvRKSt9nothrow_t@@Base+0x830>
   12418:	ldr	x30, [sp, #24]
   1241c:	ldp	x19, x20, [sp], #48
   12420:	ret
   12424:	str	x21, [sp, #16]
   12428:	adrp	x21, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   1242c:	add	x0, x21, #0xbc0
   12430:	mov	w2, #0x1                   	// #1
   12434:	add	x0, x0, #0x28
   12438:	ldxrb	w1, [x0]
   1243c:	stxrb	w3, w2, [x0]
   12440:	cbnz	w3, 12438 <_ZdaPvRKSt9nothrow_t@@Base+0x778>
   12444:	dmb	ish
   12448:	tst	w1, #0xff
   1244c:	b.eq	12454 <_ZdaPvRKSt9nothrow_t@@Base+0x794>  // b.none
   12450:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   12454:	add	x0, x21, #0xbc0
   12458:	ldrb	w0, [x0, #16]
   1245c:	dmb	ish
   12460:	and	w0, w0, #0xff
   12464:	cbz	w0, 124fc <_ZdaPvRKSt9nothrow_t@@Base+0x83c>
   12468:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   1246c:	add	x1, x1, #0xbf0
   12470:	mov	x2, x19
   12474:	mov	x3, x20
   12478:	mov	x4, #0x8                   	// #8
   1247c:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12480:	add	x0, x0, #0x440
   12484:	bl	13f28 <_ZdaPvRKSt9nothrow_t@@Base+0x2268>
   12488:	dmb	ish
   1248c:	mov	x1, x0
   12490:	add	x21, x21, #0xbc0
   12494:	strb	wzr, [x21, #40]
   12498:	ldr	x21, [sp, #16]
   1249c:	b	12410 <_ZdaPvRKSt9nothrow_t@@Base+0x750>
   124a0:	mov	x0, x20
   124a4:	mov	x2, #0x0                   	// #0
   124a8:	ldr	x30, [sp, #24]
   124ac:	ldp	x19, x20, [sp], #48
   124b0:	b	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   124b4:	mov	x0, #0x0                   	// #0
   124b8:	ldr	x30, [sp, #24]
   124bc:	ldp	x19, x20, [sp], #48
   124c0:	ret
   124c4:	str	x2, [sp, #40]
   124c8:	bl	11dd0 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   124cc:	ldr	x1, [sp, #40]
   124d0:	b	123f4 <_ZdaPvRKSt9nothrow_t@@Base+0x734>
   124d4:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   124d8:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   124dc:	add	x2, x2, #0x48
   124e0:	add	x0, x0, #0xf30
   124e4:	mov	w1, #0xa6                  	// #166
   124e8:	str	x21, [sp, #16]
   124ec:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   124f0:	mov	x0, x20
   124f4:	str	x21, [sp, #16]
   124f8:	bl	11da0 <_ZdaPvRKSt9nothrow_t@@Base+0xe0>
   124fc:	bl	11dd0 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   12500:	b	12468 <_ZdaPvRKSt9nothrow_t@@Base+0x7a8>
   12504:	nop
   12508:	stp	x19, x20, [sp, #-48]!
   1250c:	mov	x5, x0
   12510:	mov	x0, x1
   12514:	str	x30, [sp, #24]
   12518:	mov	x1, x3
   1251c:	cbz	x0, 125a8 <_ZdaPvRKSt9nothrow_t@@Base+0x8e8>
   12520:	umulh	x3, x2, x0
   12524:	cbnz	x3, 12688 <_ZdaPvRKSt9nothrow_t@@Base+0x9c8>
   12528:	mul	x0, x0, x2
   1252c:	cbz	x5, 125ac <_ZdaPvRKSt9nothrow_t@@Base+0x8ec>
   12530:	cmn	x0, #0x9
   12534:	b.hi	12638 <_ZdaPvRKSt9nothrow_t@@Base+0x978>  // b.pmore
   12538:	mov	x3, #0xc041                	// #49217
   1253c:	add	x19, x0, #0x8
   12540:	ldur	x4, [x5, #-8]
   12544:	movk	x3, #0xbceb, lsl #16
   12548:	movk	x3, #0xb03a, lsl #32
   1254c:	sub	x20, x5, #0x8
   12550:	movk	x3, #0x6a6c, lsl #48
   12554:	cmp	x4, x3
   12558:	b.ne	12658 <_ZdaPvRKSt9nothrow_t@@Base+0x998>  // b.any
   1255c:	cbz	x1, 125bc <_ZdaPvRKSt9nothrow_t@@Base+0x8fc>
   12560:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12564:	add	x0, x0, #0xbc0
   12568:	ldrb	w0, [x0, #16]
   1256c:	dmb	ish
   12570:	and	w0, w0, #0xff
   12574:	cbz	w0, 12648 <_ZdaPvRKSt9nothrow_t@@Base+0x988>
   12578:	mov	x2, x20
   1257c:	mov	x3, x19
   12580:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12584:	mov	x4, #0x8                   	// #8
   12588:	add	x0, x0, #0x440
   1258c:	bl	13f28 <_ZdaPvRKSt9nothrow_t@@Base+0x2268>
   12590:	mov	x1, x0
   12594:	add	x0, x1, #0x8
   12598:	cbz	x1, 12674 <_ZdaPvRKSt9nothrow_t@@Base+0x9b4>
   1259c:	ldr	x30, [sp, #24]
   125a0:	ldp	x19, x20, [sp], #48
   125a4:	ret
   125a8:	cbnz	x5, 12538 <_ZdaPvRKSt9nothrow_t@@Base+0x878>
   125ac:	ldr	x30, [sp, #24]
   125b0:	mov	x2, #0x0                   	// #0
   125b4:	ldp	x19, x20, [sp], #48
   125b8:	b	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   125bc:	str	x21, [sp, #16]
   125c0:	adrp	x21, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   125c4:	add	x0, x21, #0xbc0
   125c8:	mov	w2, #0x1                   	// #1
   125cc:	add	x0, x0, #0x28
   125d0:	ldxrb	w1, [x0]
   125d4:	stxrb	w3, w2, [x0]
   125d8:	cbnz	w3, 125d0 <_ZdaPvRKSt9nothrow_t@@Base+0x910>
   125dc:	dmb	ish
   125e0:	tst	w1, #0xff
   125e4:	b.eq	125ec <_ZdaPvRKSt9nothrow_t@@Base+0x92c>  // b.none
   125e8:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   125ec:	add	x0, x21, #0xbc0
   125f0:	ldrb	w0, [x0, #16]
   125f4:	dmb	ish
   125f8:	and	w0, w0, #0xff
   125fc:	cbz	w0, 12680 <_ZdaPvRKSt9nothrow_t@@Base+0x9c0>
   12600:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12604:	add	x1, x1, #0xbf0
   12608:	mov	x2, x20
   1260c:	mov	x3, x19
   12610:	mov	x4, #0x8                   	// #8
   12614:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12618:	add	x0, x0, #0x440
   1261c:	bl	13f28 <_ZdaPvRKSt9nothrow_t@@Base+0x2268>
   12620:	dmb	ish
   12624:	mov	x1, x0
   12628:	add	x21, x21, #0xbc0
   1262c:	strb	wzr, [x21, #40]
   12630:	ldr	x21, [sp, #16]
   12634:	b	12594 <_ZdaPvRKSt9nothrow_t@@Base+0x8d4>
   12638:	mov	x0, #0x0                   	// #0
   1263c:	ldr	x30, [sp, #24]
   12640:	ldp	x19, x20, [sp], #48
   12644:	ret
   12648:	str	x1, [sp, #40]
   1264c:	bl	11dd0 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   12650:	ldr	x1, [sp, #40]
   12654:	b	12578 <_ZdaPvRKSt9nothrow_t@@Base+0x8b8>
   12658:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1265c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   12660:	add	x2, x2, #0x48
   12664:	add	x0, x0, #0xf30
   12668:	mov	w1, #0xa6                  	// #166
   1266c:	str	x21, [sp, #16]
   12670:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12674:	mov	x0, x19
   12678:	str	x21, [sp, #16]
   1267c:	bl	11da0 <_ZdaPvRKSt9nothrow_t@@Base+0xe0>
   12680:	bl	11dd0 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   12684:	b	12600 <_ZdaPvRKSt9nothrow_t@@Base+0x940>
   12688:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1268c:	mov	x3, x2
   12690:	mov	x2, x0
   12694:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12698:	ldr	x1, [x1, #4024]
   1269c:	add	x0, x0, #0x70
   126a0:	ldr	x1, [x1]
   126a4:	str	x21, [sp, #16]
   126a8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   126ac:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   126b0:	cbz	x0, 12a18 <_ZdaPvRKSt9nothrow_t@@Base+0xd58>
   126b4:	stp	x19, x20, [sp, #-64]!
   126b8:	mov	x3, #0xc041                	// #49217
   126bc:	movk	x3, #0xbceb, lsl #16
   126c0:	ldur	x4, [x0, #-8]
   126c4:	stp	x21, x22, [sp, #16]
   126c8:	movk	x3, #0xb03a, lsl #32
   126cc:	str	x30, [sp, #48]
   126d0:	movk	x3, #0x6a6c, lsl #48
   126d4:	sub	x21, x0, #0x8
   126d8:	cmp	x4, x3
   126dc:	b.ne	129fc <_ZdaPvRKSt9nothrow_t@@Base+0xd3c>  // b.any
   126e0:	stur	xzr, [x0, #-8]
   126e4:	mov	x19, x1
   126e8:	cbz	x1, 12818 <_ZdaPvRKSt9nothrow_t@@Base+0xb58>
   126ec:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   126f0:	add	x0, x0, #0xbc0
   126f4:	ldrb	w0, [x0, #16]
   126f8:	dmb	ish
   126fc:	and	w0, w0, #0xff
   12700:	cbz	w0, 12810 <_ZdaPvRKSt9nothrow_t@@Base+0xb50>
   12704:	mov	x0, #0xffffffffffff        	// #281474976710655
   12708:	adrp	x20, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   1270c:	cmp	x21, x0
   12710:	b.hi	12734 <_ZdaPvRKSt9nothrow_t@@Base+0xa74>  // b.pmore
   12714:	lsr	x2, x21, #32
   12718:	add	x1, x20, #0x440
   1271c:	ldr	x0, [x1, x2, lsl #3]
   12720:	dmb	ish
   12724:	cbz	x0, 12734 <_ZdaPvRKSt9nothrow_t@@Base+0xa74>
   12728:	lsr	w3, w21, #20
   1272c:	ldrb	w0, [x0, x3]
   12730:	cbnz	w0, 12a1c <_ZdaPvRKSt9nothrow_t@@Base+0xd5c>
   12734:	add	x0, x20, #0x440
   12738:	add	x0, x0, #0x80, lsl #12
   1273c:	ldr	x19, [x0, #3520]
   12740:	sub	x0, x19, #0x1
   12744:	tst	x21, x0
   12748:	b.ne	12a98 <_ZdaPvRKSt9nothrow_t@@Base+0xdd8>  // b.any
   1274c:	adrp	x0, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   12750:	sub	x19, x21, x19
   12754:	add	x0, x0, #0x440
   12758:	mov	w2, #0x1                   	// #1
   1275c:	ldxrb	w1, [x0]
   12760:	stxrb	w3, w2, [x0]
   12764:	cbnz	w3, 1275c <_ZdaPvRKSt9nothrow_t@@Base+0xa9c>
   12768:	dmb	ish
   1276c:	tst	w1, #0xff
   12770:	b.eq	12778 <_ZdaPvRKSt9nothrow_t@@Base+0xab8>  // b.none
   12774:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   12778:	add	x20, x20, #0x440
   1277c:	add	x0, x20, #0x80, lsl #12
   12780:	ldr	x1, [x19, #24]
   12784:	ldr	x2, [x0, #3528]
   12788:	ldr	x3, [x2, x1, lsl #3]
   1278c:	cmp	x3, x19
   12790:	b.ne	12abc <_ZdaPvRKSt9nothrow_t@@Base+0xdfc>  // b.any
   12794:	add	x0, x20, #0xc0, lsl #12
   12798:	ldr	x4, [x0, #3536]
   1279c:	cmp	x1, x4
   127a0:	b.cs	12adc <_ZdaPvRKSt9nothrow_t@@Base+0xe1c>  // b.hs, b.nlast
   127a4:	sub	x4, x4, #0x1
   127a8:	ldr	x3, [x19, #8]
   127ac:	str	x4, [x0, #3536]
   127b0:	ldr	x4, [x2, x4, lsl #3]
   127b4:	str	x4, [x2, x1, lsl #3]
   127b8:	ldr	x2, [x0, #4120]
   127bc:	str	x1, [x4, #24]
   127c0:	sub	x2, x2, x3
   127c4:	str	x2, [x0, #4120]
   127c8:	ldr	x4, [x0, #3560]
   127cc:	strb	wzr, [x0, #3544]
   127d0:	ldr	x2, [x0, #3568]
   127d4:	add	x4, x4, #0x1
   127d8:	ldr	x1, [x0, #4128]
   127dc:	sub	x2, x2, x3
   127e0:	str	x4, [x0, #3560]
   127e4:	sub	x1, x1, x3
   127e8:	str	x2, [x0, #3568]
   127ec:	str	x1, [x0, #4128]
   127f0:	dmb	ish
   127f4:	add	x20, x20, #0xc1, lsl #12
   127f8:	strb	wzr, [x20]
   127fc:	ldp	x0, x1, [x19]
   12800:	ldp	x21, x22, [sp, #16]
   12804:	ldr	x30, [sp, #48]
   12808:	ldp	x19, x20, [sp], #64
   1280c:	b	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   12810:	bl	11dd0 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   12814:	b	12704 <_ZdaPvRKSt9nothrow_t@@Base+0xa44>
   12818:	adrp	x19, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   1281c:	add	x0, x19, #0xbc0
   12820:	add	x0, x0, #0x28
   12824:	mov	w2, #0x1                   	// #1
   12828:	ldxrb	w1, [x0]
   1282c:	stxrb	w3, w2, [x0]
   12830:	cbnz	w3, 12828 <_ZdaPvRKSt9nothrow_t@@Base+0xb68>
   12834:	dmb	ish
   12838:	tst	w1, #0xff
   1283c:	b.eq	12844 <_ZdaPvRKSt9nothrow_t@@Base+0xb84>  // b.none
   12840:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   12844:	add	x0, x19, #0xbc0
   12848:	ldrb	w0, [x0, #16]
   1284c:	dmb	ish
   12850:	and	w0, w0, #0xff
   12854:	cbz	w0, 12a90 <_ZdaPvRKSt9nothrow_t@@Base+0xdd0>
   12858:	mov	x0, #0xffffffffffff        	// #281474976710655
   1285c:	adrp	x20, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12860:	cmp	x21, x0
   12864:	b.hi	12910 <_ZdaPvRKSt9nothrow_t@@Base+0xc50>  // b.pmore
   12868:	lsr	x2, x21, #32
   1286c:	add	x1, x20, #0x440
   12870:	ldr	x0, [x1, x2, lsl #3]
   12874:	dmb	ish
   12878:	cbz	x0, 12910 <_ZdaPvRKSt9nothrow_t@@Base+0xc50>
   1287c:	lsr	w3, w21, #20
   12880:	ldrb	w0, [x0, x3]
   12884:	cbz	w0, 12910 <_ZdaPvRKSt9nothrow_t@@Base+0xc50>
   12888:	stp	x23, x24, [sp, #32]
   1288c:	ldr	x0, [x1, x2, lsl #3]
   12890:	dmb	ish
   12894:	cbz	x0, 12afc <_ZdaPvRKSt9nothrow_t@@Base+0xe3c>
   12898:	ldrb	w24, [x0, x3]
   1289c:	cbz	x24, 12afc <_ZdaPvRKSt9nothrow_t@@Base+0xe3c>
   128a0:	cmp	x24, #0x35
   128a4:	b.hi	12c98 <_ZdaPvRKSt9nothrow_t@@Base+0xfd8>  // b.pmore
   128a8:	lsl	x23, x24, #10
   128ac:	adrp	x22, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   128b0:	add	x6, x22, #0xbf0
   128b4:	add	x0, x6, x23
   128b8:	ldr	x2, [x0, #8]
   128bc:	cbz	x2, 12cc8 <_ZdaPvRKSt9nothrow_t@@Base+0x1008>
   128c0:	add	x0, x22, #0xbf0
   128c4:	add	x1, x0, x23
   128c8:	ldr	x4, [x0, x23]
   128cc:	cmp	x4, x2
   128d0:	b.eq	12cb8 <_ZdaPvRKSt9nothrow_t@@Base+0xff8>  // b.none
   128d4:	add	x22, x22, #0xbf0
   128d8:	add	x1, x22, x23
   128dc:	add	x2, x22, #0x8, lsl #12
   128e0:	ldr	x0, [x22, x23]
   128e4:	ldr	x4, [x1, #16]
   128e8:	add	x1, x0, #0x1
   128ec:	add	x0, x0, x24, lsl #7
   128f0:	str	x1, [x22, x23]
   128f4:	add	x0, x0, #0x4
   128f8:	ldr	x1, [x2, #22544]
   128fc:	str	x21, [x22, x0, lsl #3]
   12900:	sub	x0, x1, x4
   12904:	ldp	x23, x24, [sp, #32]
   12908:	str	x0, [x2, #22544]
   1290c:	b	129e0 <_ZdaPvRKSt9nothrow_t@@Base+0xd20>
   12910:	add	x0, x20, #0x440
   12914:	add	x0, x0, #0x80, lsl #12
   12918:	ldr	x4, [x0, #3520]
   1291c:	sub	x0, x4, #0x1
   12920:	tst	x21, x0
   12924:	b.ne	12b1c <_ZdaPvRKSt9nothrow_t@@Base+0xe5c>  // b.any
   12928:	adrp	x0, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   1292c:	sub	x21, x21, x4
   12930:	add	x0, x0, #0x440
   12934:	mov	w2, #0x1                   	// #1
   12938:	ldxrb	w1, [x0]
   1293c:	stxrb	w3, w2, [x0]
   12940:	cbnz	w3, 12938 <_ZdaPvRKSt9nothrow_t@@Base+0xc78>
   12944:	dmb	ish
   12948:	tst	w1, #0xff
   1294c:	b.eq	12954 <_ZdaPvRKSt9nothrow_t@@Base+0xc94>  // b.none
   12950:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   12954:	add	x20, x20, #0x440
   12958:	add	x0, x20, #0x80, lsl #12
   1295c:	ldr	x1, [x21, #24]
   12960:	ldr	x2, [x0, #3528]
   12964:	ldr	x3, [x2, x1, lsl #3]
   12968:	cmp	x3, x21
   1296c:	b.ne	12b40 <_ZdaPvRKSt9nothrow_t@@Base+0xe80>  // b.any
   12970:	add	x0, x20, #0xc0, lsl #12
   12974:	ldr	x4, [x0, #3536]
   12978:	cmp	x1, x4
   1297c:	b.cs	12b60 <_ZdaPvRKSt9nothrow_t@@Base+0xea0>  // b.hs, b.nlast
   12980:	sub	x4, x4, #0x1
   12984:	ldr	x3, [x21, #8]
   12988:	str	x4, [x0, #3536]
   1298c:	ldr	x4, [x2, x4, lsl #3]
   12990:	str	x4, [x2, x1, lsl #3]
   12994:	ldr	x2, [x0, #4120]
   12998:	str	x1, [x4, #24]
   1299c:	sub	x2, x2, x3
   129a0:	str	x2, [x0, #4120]
   129a4:	ldr	x4, [x0, #3560]
   129a8:	strb	wzr, [x0, #3544]
   129ac:	ldr	x2, [x0, #3568]
   129b0:	add	x4, x4, #0x1
   129b4:	ldr	x1, [x0, #4128]
   129b8:	sub	x2, x2, x3
   129bc:	str	x4, [x0, #3560]
   129c0:	sub	x1, x1, x3
   129c4:	str	x2, [x0, #3568]
   129c8:	str	x1, [x0, #4128]
   129cc:	dmb	ish
   129d0:	add	x20, x20, #0xc1, lsl #12
   129d4:	strb	wzr, [x20]
   129d8:	ldp	x0, x1, [x21]
   129dc:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   129e0:	dmb	ish
   129e4:	add	x19, x19, #0xbc0
   129e8:	strb	wzr, [x19, #40]
   129ec:	ldp	x21, x22, [sp, #16]
   129f0:	ldr	x30, [sp, #48]
   129f4:	ldp	x19, x20, [sp], #64
   129f8:	ret
   129fc:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12a00:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   12a04:	add	x2, x2, #0x48
   12a08:	add	x0, x0, #0xf30
   12a0c:	mov	w1, #0xca                  	// #202
   12a10:	stp	x23, x24, [sp, #32]
   12a14:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12a18:	ret
   12a1c:	stp	x23, x24, [sp, #32]
   12a20:	ldr	x0, [x1, x2, lsl #3]
   12a24:	dmb	ish
   12a28:	cbz	x0, 12afc <_ZdaPvRKSt9nothrow_t@@Base+0xe3c>
   12a2c:	ldrb	w22, [x0, x3]
   12a30:	cbz	x22, 12afc <_ZdaPvRKSt9nothrow_t@@Base+0xe3c>
   12a34:	cmp	x22, #0x35
   12a38:	b.hi	12b80 <_ZdaPvRKSt9nothrow_t@@Base+0xec0>  // b.pmore
   12a3c:	lsl	x23, x22, #10
   12a40:	add	x1, x19, x23
   12a44:	ldr	x2, [x1, #8]
   12a48:	cbz	x2, 12ba0 <_ZdaPvRKSt9nothrow_t@@Base+0xee0>
   12a4c:	ldr	x0, [x19, x23]
   12a50:	cmp	x2, x0
   12a54:	b.eq	12c80 <_ZdaPvRKSt9nothrow_t@@Base+0xfc0>  // b.none
   12a58:	add	x22, x0, x22, lsl #7
   12a5c:	add	x2, x19, x23
   12a60:	add	x22, x22, #0x4
   12a64:	add	x0, x0, #0x1
   12a68:	mov	x3, #0xd800                	// #55296
   12a6c:	add	x1, x19, x3
   12a70:	str	x0, [x19, x23]
   12a74:	str	x21, [x19, x22, lsl #3]
   12a78:	ldr	x0, [x1, #16]
   12a7c:	ldr	x2, [x2, #16]
   12a80:	ldp	x23, x24, [sp, #32]
   12a84:	sub	x0, x0, x2
   12a88:	str	x0, [x1, #16]
   12a8c:	b	129ec <_ZdaPvRKSt9nothrow_t@@Base+0xd2c>
   12a90:	bl	11dd0 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   12a94:	b	12858 <_ZdaPvRKSt9nothrow_t@@Base+0xb98>
   12a98:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   12a9c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12aa0:	add	x2, x2, #0xcd0
   12aa4:	add	x0, x0, #0x338
   12aa8:	mov	x4, #0x0                   	// #0
   12aac:	mov	x3, #0x0                   	// #0
   12ab0:	mov	w1, #0x12d                 	// #301
   12ab4:	stp	x23, x24, [sp, #32]
   12ab8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12abc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   12ac0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12ac4:	mov	x4, x19
   12ac8:	add	x2, x2, #0x90
   12acc:	add	x0, x0, #0x338
   12ad0:	mov	w1, #0x8b                  	// #139
   12ad4:	stp	x23, x24, [sp, #32]
   12ad8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12adc:	mov	x3, x1
   12ae0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   12ae4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12ae8:	add	x2, x2, #0xb0
   12aec:	add	x0, x0, #0x338
   12af0:	mov	w1, #0x8c                  	// #140
   12af4:	stp	x23, x24, [sp, #32]
   12af8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12afc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   12b00:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12b04:	add	x2, x2, #0x2c8
   12b08:	add	x0, x0, #0x270
   12b0c:	mov	x4, #0x0                   	// #0
   12b10:	mov	x3, #0x0                   	// #0
   12b14:	mov	w1, #0xa8                  	// #168
   12b18:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12b1c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   12b20:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12b24:	add	x2, x2, #0xcd0
   12b28:	add	x0, x0, #0x338
   12b2c:	mov	x4, #0x0                   	// #0
   12b30:	mov	x3, #0x0                   	// #0
   12b34:	mov	w1, #0x12d                 	// #301
   12b38:	stp	x23, x24, [sp, #32]
   12b3c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12b40:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   12b44:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12b48:	mov	x4, x21
   12b4c:	add	x2, x2, #0x90
   12b50:	add	x0, x0, #0x338
   12b54:	mov	w1, #0x8b                  	// #139
   12b58:	stp	x23, x24, [sp, #32]
   12b5c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12b60:	mov	x3, x1
   12b64:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   12b68:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12b6c:	add	x2, x2, #0xb0
   12b70:	add	x0, x0, #0x338
   12b74:	mov	w1, #0x8c                  	// #140
   12b78:	stp	x23, x24, [sp, #32]
   12b7c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12b80:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   12b84:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12b88:	mov	x3, x22
   12b8c:	add	x2, x2, #0x350
   12b90:	add	x0, x0, #0x270
   12b94:	mov	x4, #0x36                  	// #54
   12b98:	mov	w1, #0xa9                  	// #169
   12b9c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12ba0:	mov	x2, #0x1                   	// #1
   12ba4:	mov	x11, x2
   12ba8:	mov	x12, #0x7c                  	// #124
   12bac:	mov	x10, #0x14                  	// #20
   12bb0:	mov	x9, #0x100                 	// #256
   12bb4:	mov	w8, #0x4000                	// #16384
   12bb8:	mov	x7, #0x3e                  	// #62
   12bbc:	nop
   12bc0:	add	x5, x19, x2, lsl #10
   12bc4:	lsl	x6, x2, #4
   12bc8:	mov	x4, x5
   12bcc:	mov	x0, #0x14                  	// #20
   12bd0:	mov	x3, x2
   12bd4:	add	x2, x2, #0x1
   12bd8:	stp	x12, x6, [x5, #8]
   12bdc:	cmp	x2, #0x36
   12be0:	str	x0, [x4, #24]
   12be4:	b.eq	12c54 <_ZdaPvRKSt9nothrow_t@@Base+0xf94>  // b.none
   12be8:	cmp	x2, #0x35
   12bec:	b.eq	12c5c <_ZdaPvRKSt9nothrow_t@@Base+0xf9c>  // b.none
   12bf0:	cmp	x2, #0x10
   12bf4:	b.ls	12bc0 <_ZdaPvRKSt9nothrow_t@@Base+0xf00>  // b.plast
   12bf8:	sub	x0, x3, #0xf
   12bfc:	add	x4, x4, #0x400
   12c00:	and	x6, x0, #0x3
   12c04:	mov	x3, x2
   12c08:	lsr	x0, x0, #2
   12c0c:	add	x2, x2, #0x1
   12c10:	lsl	x0, x9, x0
   12c14:	lsr	x5, x0, #2
   12c18:	madd	x5, x5, x6, x0
   12c1c:	str	x5, [x4, #16]
   12c20:	udiv	w0, w8, w5
   12c24:	cmp	x0, #0x0
   12c28:	csel	x0, x0, x11, ne  // ne = any
   12c2c:	cmp	x0, #0x3e
   12c30:	csel	x0, x0, x7, ls  // ls = plast
   12c34:	add	x6, x0, #0x2
   12c38:	lsl	x0, x0, #1
   12c3c:	str	x0, [x4, #8]
   12c40:	cmp	x5, x6, lsl #3
   12c44:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   12c48:	str	x0, [x4, #24]
   12c4c:	cmp	x2, #0x36
   12c50:	b.ne	12be8 <_ZdaPvRKSt9nothrow_t@@Base+0xf28>  // b.any
   12c54:	ldr	x2, [x1, #8]
   12c58:	b	12a4c <_ZdaPvRKSt9nothrow_t@@Base+0xd8c>
   12c5c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12c60:	ldr	q0, [x0, #1136]
   12c64:	mov	x0, #0xd400                	// #54272
   12c68:	add	x2, x19, x0
   12c6c:	add	x0, x19, #0x8, lsl #12
   12c70:	stur	q0, [x2, #8]
   12c74:	str	xzr, [x0, #21528]
   12c78:	ldr	x2, [x1, #8]
   12c7c:	b	12a4c <_ZdaPvRKSt9nothrow_t@@Base+0xd8c>
   12c80:	mov	x0, x19
   12c84:	add	x2, x20, #0x440
   12c88:	mov	x3, x22
   12c8c:	bl	13d50 <_ZdaPvRKSt9nothrow_t@@Base+0x2090>
   12c90:	ldr	x0, [x19, x23]
   12c94:	b	12a58 <_ZdaPvRKSt9nothrow_t@@Base+0xd98>
   12c98:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   12c9c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12ca0:	mov	x3, x24
   12ca4:	add	x2, x2, #0x350
   12ca8:	add	x0, x0, #0x270
   12cac:	mov	x4, #0x36                  	// #54
   12cb0:	mov	w1, #0xa9                  	// #169
   12cb4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12cb8:	add	x2, x20, #0x440
   12cbc:	mov	x3, x24
   12cc0:	bl	13d50 <_ZdaPvRKSt9nothrow_t@@Base+0x2090>
   12cc4:	b	128d4 <_ZdaPvRKSt9nothrow_t@@Base+0xc14>
   12cc8:	mov	x1, #0x1                   	// #1
   12ccc:	mov	x11, x1
   12cd0:	mov	x12, #0x7c                  	// #124
   12cd4:	mov	x10, #0x14                  	// #20
   12cd8:	mov	x9, #0x100                 	// #256
   12cdc:	mov	w8, #0x4000                	// #16384
   12ce0:	mov	x7, #0x3e                  	// #62
   12ce4:	nop
   12ce8:	lsl	x0, x1, #10
   12cec:	lsl	x4, x1, #4
   12cf0:	add	x13, x6, x0
   12cf4:	add	x0, x0, #0x18
   12cf8:	add	x2, x0, x6
   12cfc:	mov	x0, #0x14                  	// #20
   12d00:	mov	x5, x1
   12d04:	add	x1, x1, #0x1
   12d08:	stp	x12, x4, [x13, #8]
   12d0c:	cmp	x1, #0x36
   12d10:	str	x0, [x2]
   12d14:	b.eq	12d84 <_ZdaPvRKSt9nothrow_t@@Base+0x10c4>  // b.none
   12d18:	cmp	x1, #0x35
   12d1c:	b.eq	12d94 <_ZdaPvRKSt9nothrow_t@@Base+0x10d4>  // b.none
   12d20:	cmp	x1, #0x10
   12d24:	b.ls	12ce8 <_ZdaPvRKSt9nothrow_t@@Base+0x1028>  // b.plast
   12d28:	sub	x0, x5, #0xf
   12d2c:	add	x2, x2, #0x400
   12d30:	and	x13, x0, #0x3
   12d34:	mov	x5, x1
   12d38:	lsr	x0, x0, #2
   12d3c:	add	x1, x1, #0x1
   12d40:	lsl	x0, x9, x0
   12d44:	lsr	x4, x0, #2
   12d48:	madd	x4, x4, x13, x0
   12d4c:	stur	x4, [x2, #-8]
   12d50:	udiv	w0, w8, w4
   12d54:	cmp	x0, #0x0
   12d58:	csel	x0, x0, x11, ne  // ne = any
   12d5c:	cmp	x0, #0x3e
   12d60:	csel	x0, x0, x7, ls  // ls = plast
   12d64:	add	x13, x0, #0x2
   12d68:	lsl	x0, x0, #1
   12d6c:	stur	x0, [x2, #-16]
   12d70:	cmp	x4, x13, lsl #3
   12d74:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   12d78:	str	x0, [x2]
   12d7c:	cmp	x1, #0x36
   12d80:	b.ne	12d18 <_ZdaPvRKSt9nothrow_t@@Base+0x1058>  // b.any
   12d84:	add	x0, x22, #0xbf0
   12d88:	add	x0, x0, x23
   12d8c:	ldr	x2, [x0, #8]
   12d90:	b	128c0 <_ZdaPvRKSt9nothrow_t@@Base+0xc00>
   12d94:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12d98:	add	x0, x22, #0xbf0
   12d9c:	ldr	q0, [x1, #1136]
   12da0:	mov	x1, #0xd400                	// #54272
   12da4:	add	x2, x0, x1
   12da8:	add	x1, x0, x23
   12dac:	add	x0, x0, #0x8, lsl #12
   12db0:	stur	q0, [x2, #8]
   12db4:	str	xzr, [x0, #21528]
   12db8:	ldr	x2, [x1, #8]
   12dbc:	b	128c0 <_ZdaPvRKSt9nothrow_t@@Base+0xc00>
   12dc0:	stp	x19, x20, [sp, #-48]!
   12dc4:	stp	x21, x22, [sp, #16]
   12dc8:	mov	x21, x0
   12dcc:	ldr	x0, [x2, #8]
   12dd0:	stp	x23, x30, [sp, #32]
   12dd4:	cbz	x0, 12e80 <_ZdaPvRKSt9nothrow_t@@Base+0x11c0>
   12dd8:	mov	x0, #0x2001                	// #8193
   12ddc:	add	x22, x1, x0
   12de0:	mov	x20, x2
   12de4:	mov	x19, x1
   12de8:	add	x23, x21, x22, lsl #6
   12dec:	mov	w1, #0x1                   	// #1
   12df0:	ldxrb	w0, [x23]
   12df4:	stxrb	w2, w1, [x23]
   12df8:	cbnz	w2, 12df0 <_ZdaPvRKSt9nothrow_t@@Base+0x1130>
   12dfc:	dmb	ish
   12e00:	tst	w0, #0xff
   12e04:	b.eq	12e10 <_ZdaPvRKSt9nothrow_t@@Base+0x1150>  // b.none
   12e08:	mov	x0, x23
   12e0c:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   12e10:	ldr	x0, [x23, #8]
   12e14:	cbz	x0, 12e4c <_ZdaPvRKSt9nothrow_t@@Base+0x118c>
   12e18:	add	x19, x21, x19, lsl #6
   12e1c:	add	x0, x0, #0x1
   12e20:	add	x19, x19, #0x80, lsl #12
   12e24:	ldr	x1, [x19, #80]
   12e28:	str	x1, [x20]
   12e2c:	stp	x0, x20, [x19, #72]
   12e30:	dmb	ish
   12e34:	lsl	x22, x22, #6
   12e38:	strb	wzr, [x21, x22]
   12e3c:	ldp	x21, x22, [sp, #16]
   12e40:	ldp	x23, x30, [sp, #32]
   12e44:	ldp	x19, x20, [sp], #48
   12e48:	ret
   12e4c:	add	x0, x21, x22, lsl #6
   12e50:	dup	v0.2d, x20
   12e54:	str	xzr, [x20]
   12e58:	mov	x1, #0x1                   	// #1
   12e5c:	str	x1, [x0, #8]
   12e60:	str	q0, [x0, #16]
   12e64:	dmb	ish
   12e68:	lsl	x22, x22, #6
   12e6c:	strb	wzr, [x21, x22]
   12e70:	ldp	x21, x22, [sp, #16]
   12e74:	ldp	x23, x30, [sp, #32]
   12e78:	ldp	x19, x20, [sp], #48
   12e7c:	ret
   12e80:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12e84:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   12e88:	add	x2, x2, #0x110
   12e8c:	add	x0, x0, #0x128
   12e90:	mov	x4, #0x0                   	// #0
   12e94:	mov	x3, #0x0                   	// #0
   12e98:	mov	w1, #0xb8                  	// #184
   12e9c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   12ea0:	sub	sp, sp, #0x210
   12ea4:	adrp	x5, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
   12ea8:	stp	x25, x26, [sp, #48]
   12eac:	mov	x26, x2
   12eb0:	mov	x25, x3
   12eb4:	ldr	x2, [x5, #624]
   12eb8:	stp	x19, x20, [sp]
   12ebc:	mov	x19, x1
   12ec0:	mov	x1, #0x100000              	// #1048576
   12ec4:	stp	x21, x22, [sp, #16]
   12ec8:	mov	x21, x0
   12ecc:	mov	x0, x1
   12ed0:	str	x30, [sp, #80]
   12ed4:	str	x4, [sp, #104]
   12ed8:	bl	1eb00 <__sanitizer_set_report_fd@@Base+0x6d40>
   12edc:	ldr	x4, [sp, #104]
   12ee0:	cbz	x0, 130c4 <_ZdaPvRKSt9nothrow_t@@Base+0x1404>
   12ee4:	mov	x22, x0
   12ee8:	tst	x0, #0xfffff
   12eec:	ldr	x0, [x19, #24]
   12ef0:	stp	x23, x24, [sp, #32]
   12ef4:	stp	x27, x28, [sp, #64]
   12ef8:	add	x0, x0, #0x100, lsl #12
   12efc:	str	x0, [x19, #24]
   12f00:	b.ne	132cc <_ZdaPvRKSt9nothrow_t@@Base+0x160c>  // b.any
   12f04:	mov	x0, #0xfffffff             	// #268435455
   12f08:	lsr	x19, x22, #20
   12f0c:	cmp	x0, x22, lsr #20
   12f10:	b.cc	13334 <_ZdaPvRKSt9nothrow_t@@Base+0x1674>  // b.lo, b.ul, b.last
   12f14:	and	w23, w4, #0xff
   12f18:	lsr	x20, x22, #32
   12f1c:	ldr	x0, [x21, x20, lsl #3]
   12f20:	dmb	ish
   12f24:	cbz	x0, 13284 <_ZdaPvRKSt9nothrow_t@@Base+0x15c4>
   12f28:	and	x3, x19, #0xfff
   12f2c:	ldrb	w1, [x0, x3]
   12f30:	cbnz	x1, 1338c <_ZdaPvRKSt9nothrow_t@@Base+0x16cc>
   12f34:	strb	w23, [x0, x3]
   12f38:	cmp	x4, #0x35
   12f3c:	b.eq	1315c <_ZdaPvRKSt9nothrow_t@@Base+0x149c>  // b.none
   12f40:	lsl	x28, x4, #4
   12f44:	cmp	x4, #0x10
   12f48:	b.ls	12f68 <_ZdaPvRKSt9nothrow_t@@Base+0x12a8>  // b.plast
   12f4c:	sub	x0, x4, #0x10
   12f50:	mov	x28, #0x100                 	// #256
   12f54:	and	x1, x0, #0x3
   12f58:	lsr	x0, x0, #2
   12f5c:	lsl	x0, x28, x0
   12f60:	lsr	x28, x0, #2
   12f64:	madd	x28, x28, x1, x0
   12f68:	mov	x27, #0x100000              	// #1048576
   12f6c:	udiv	x27, x27, x28
   12f70:	cbz	x28, 13274 <_ZdaPvRKSt9nothrow_t@@Base+0x15b4>
   12f74:	mov	w23, #0x4000                	// #16384
   12f78:	mov	x1, #0x40                  	// #64
   12f7c:	mov	x0, #0x3e                  	// #62
   12f80:	mul	x27, x27, x28
   12f84:	udiv	w23, w23, w28
   12f88:	cmp	x23, x1
   12f8c:	csel	x23, x23, x1, ls  // ls = plast
   12f90:	cmp	x23, #0x0
   12f94:	csinc	x23, x23, xzr, ne  // ne = any
   12f98:	cmp	x23, x0
   12f9c:	csel	x23, x23, x0, ls  // ls = plast
   12fa0:	add	x27, x22, x27
   12fa4:	cmp	x22, x27
   12fa8:	b.cs	13274 <_ZdaPvRKSt9nothrow_t@@Base+0x15b4>  // b.hs, b.nlast
   12fac:	add	x24, sp, #0x90
   12fb0:	add	x7, x26, x4, lsl #10
   12fb4:	mov	x1, #0x0                   	// #0
   12fb8:	mov	x19, #0x1                   	// #1
   12fbc:	str	x22, [sp, #144]
   12fc0:	add	x22, x22, x28
   12fc4:	cmp	x22, x27
   12fc8:	b.cs	13118 <_ZdaPvRKSt9nothrow_t@@Base+0x1458>  // b.hs, b.nlast
   12fcc:	str	x22, [x24, x19, lsl #3]
   12fd0:	cmp	x19, #0x2f
   12fd4:	add	x19, x19, #0x1
   12fd8:	b.ne	12fc0 <_ZdaPvRKSt9nothrow_t@@Base+0x1300>  // b.any
   12fdc:	mov	x2, #0xd800                	// #55296
   12fe0:	mov	x19, #0x0                   	// #0
   12fe4:	add	x9, x26, x2
   12fe8:	b	12ff4 <_ZdaPvRKSt9nothrow_t@@Base+0x1334>
   12fec:	cmp	x19, #0x2f
   12ff0:	b.hi	13154 <_ZdaPvRKSt9nothrow_t@@Base+0x1494>  // b.pmore
   12ff4:	ldr	x8, [x24, x19, lsl #3]
   12ff8:	cbz	x1, 13044 <_ZdaPvRKSt9nothrow_t@@Base+0x1384>
   12ffc:	ldr	x5, [x1, #8]
   13000:	add	x6, x5, #0x1
   13004:	add	x5, x5, #0x2
   13008:	str	x6, [x1, #8]
   1300c:	add	x19, x19, #0x1
   13010:	cmp	x6, x23
   13014:	str	x8, [x1, x5, lsl #3]
   13018:	b.ne	12fec <_ZdaPvRKSt9nothrow_t@@Base+0x132c>  // b.any
   1301c:	ldr	x5, [x25, #8]
   13020:	cbnz	x5, 130e0 <_ZdaPvRKSt9nothrow_t@@Base+0x1420>
   13024:	dup	v0.2d, x1
   13028:	str	xzr, [x1]
   1302c:	mov	x0, #0x1                   	// #1
   13030:	str	x0, [x25, #8]
   13034:	cmp	x19, #0x2f
   13038:	str	q0, [x25, #16]
   1303c:	b.hi	13100 <_ZdaPvRKSt9nothrow_t@@Base+0x1440>  // b.pmore
   13040:	ldr	x8, [x24, x19, lsl #3]
   13044:	mov	x1, x8
   13048:	ldr	x20, [x7, #24]
   1304c:	cbnz	x20, 13064 <_ZdaPvRKSt9nothrow_t@@Base+0x13a4>
   13050:	cbz	x1, 130bc <_ZdaPvRKSt9nothrow_t@@Base+0x13fc>
   13054:	mov	x5, #0x0                   	// #0
   13058:	mov	x6, #0x1                   	// #1
   1305c:	str	xzr, [x1, #8]
   13060:	b	13004 <_ZdaPvRKSt9nothrow_t@@Base+0x1344>
   13064:	cmp	x20, #0x35
   13068:	b.hi	132ec <_ZdaPvRKSt9nothrow_t@@Base+0x162c>  // b.pmore
   1306c:	lsl	x5, x20, #10
   13070:	add	x1, x26, x5
   13074:	ldr	x0, [x26, x5]
   13078:	cbz	x0, 13354 <_ZdaPvRKSt9nothrow_t@@Base+0x1694>
   1307c:	lsl	x20, x20, #7
   13080:	add	x3, x26, x5
   13084:	add	x1, x20, x0
   13088:	sub	x0, x0, #0x1
   1308c:	add	x1, x1, #0x2
   13090:	str	x0, [x26, x5]
   13094:	add	x20, x20, x0
   13098:	add	x20, x20, #0x4
   1309c:	ldr	x2, [x26, x1, lsl #3]
   130a0:	ldr	x0, [x9, #16]
   130a4:	ldr	x1, [x3, #16]
   130a8:	prfm	pldl1keep, [x2]
   130ac:	add	x0, x0, x1
   130b0:	ldr	x1, [x26, x20, lsl #3]
   130b4:	str	x0, [x9, #16]
   130b8:	cbnz	x1, 13054 <_ZdaPvRKSt9nothrow_t@@Base+0x1394>
   130bc:	ldp	x23, x24, [sp, #32]
   130c0:	ldp	x27, x28, [sp, #64]
   130c4:	mov	w0, #0x0                   	// #0
   130c8:	ldp	x19, x20, [sp]
   130cc:	ldp	x21, x22, [sp, #16]
   130d0:	ldp	x25, x26, [sp, #48]
   130d4:	ldr	x30, [sp, #80]
   130d8:	add	sp, sp, #0x210
   130dc:	ret
   130e0:	ldr	x2, [x25, #24]
   130e4:	str	xzr, [x1]
   130e8:	add	x5, x5, #0x1
   130ec:	cmp	x19, #0x2f
   130f0:	str	x1, [x2]
   130f4:	str	x5, [x25, #8]
   130f8:	str	x1, [x25, #24]
   130fc:	b.ls	13040 <_ZdaPvRKSt9nothrow_t@@Base+0x1380>  // b.plast
   13100:	add	x22, x22, x28
   13104:	mov	x19, #0x0                   	// #0
   13108:	cmp	x22, x27
   1310c:	mov	x1, #0x0                   	// #0
   13110:	b.cc	12fcc <_ZdaPvRKSt9nothrow_t@@Base+0x130c>  // b.lo, b.ul, b.last
   13114:	nop
   13118:	cbnz	x19, 1316c <_ZdaPvRKSt9nothrow_t@@Base+0x14ac>
   1311c:	cbz	x1, 13274 <_ZdaPvRKSt9nothrow_t@@Base+0x15b4>
   13120:	ldr	x2, [x1, #8]
   13124:	cbz	x2, 133ac <_ZdaPvRKSt9nothrow_t@@Base+0x16ec>
   13128:	ldr	x0, [x25, #8]
   1312c:	cbnz	x0, 1330c <_ZdaPvRKSt9nothrow_t@@Base+0x164c>
   13130:	dup	v0.2d, x1
   13134:	ldp	x23, x24, [sp, #32]
   13138:	ldp	x27, x28, [sp, #64]
   1313c:	str	xzr, [x1]
   13140:	mov	x1, #0x1                   	// #1
   13144:	mov	w0, w1
   13148:	str	x1, [x25, #8]
   1314c:	str	q0, [x25, #16]
   13150:	b	130c8 <_ZdaPvRKSt9nothrow_t@@Base+0x1408>
   13154:	mov	x19, #0x0                   	// #0
   13158:	b	12fc0 <_ZdaPvRKSt9nothrow_t@@Base+0x1300>
   1315c:	mov	x27, #0x100000              	// #1048576
   13160:	mov	x23, #0x20                  	// #32
   13164:	mov	x28, #0x200                 	// #512
   13168:	b	12fa0 <_ZdaPvRKSt9nothrow_t@@Base+0x12e0>
   1316c:	add	x28, x26, x4, lsl #10
   13170:	mov	x0, #0xd800                	// #55296
   13174:	add	x27, sp, #0x90
   13178:	add	x4, x26, x0
   1317c:	mov	x20, #0x0                   	// #0
   13180:	b	1318c <_ZdaPvRKSt9nothrow_t@@Base+0x14cc>
   13184:	cmp	x19, x20
   13188:	b.ls	13124 <_ZdaPvRKSt9nothrow_t@@Base+0x1464>  // b.plast
   1318c:	ldr	x22, [x27, x20, lsl #3]
   13190:	cbz	x1, 131dc <_ZdaPvRKSt9nothrow_t@@Base+0x151c>
   13194:	ldr	x0, [x1, #8]
   13198:	add	x2, x0, #0x1
   1319c:	add	x0, x0, #0x2
   131a0:	str	x2, [x1, #8]
   131a4:	add	x20, x20, #0x1
   131a8:	cmp	x2, x23
   131ac:	str	x22, [x1, x0, lsl #3]
   131b0:	b.ne	13184 <_ZdaPvRKSt9nothrow_t@@Base+0x14c4>  // b.any
   131b4:	ldr	x0, [x25, #8]
   131b8:	cbnz	x0, 13254 <_ZdaPvRKSt9nothrow_t@@Base+0x1594>
   131bc:	dup	v0.2d, x1
   131c0:	str	xzr, [x1]
   131c4:	mov	x0, #0x1                   	// #1
   131c8:	str	x0, [x25, #8]
   131cc:	cmp	x19, x20
   131d0:	str	q0, [x25, #16]
   131d4:	b.ls	13274 <_ZdaPvRKSt9nothrow_t@@Base+0x15b4>  // b.plast
   131d8:	ldr	x22, [x27, x20, lsl #3]
   131dc:	mov	x1, x22
   131e0:	ldr	x24, [x28, #24]
   131e4:	cbnz	x24, 131fc <_ZdaPvRKSt9nothrow_t@@Base+0x153c>
   131e8:	cbz	x1, 130bc <_ZdaPvRKSt9nothrow_t@@Base+0x13fc>
   131ec:	mov	x0, #0x0                   	// #0
   131f0:	mov	x2, #0x1                   	// #1
   131f4:	str	xzr, [x1, #8]
   131f8:	b	1319c <_ZdaPvRKSt9nothrow_t@@Base+0x14dc>
   131fc:	cmp	x24, #0x35
   13200:	b.hi	133f4 <_ZdaPvRKSt9nothrow_t@@Base+0x1734>  // b.pmore
   13204:	lsl	x5, x24, #10
   13208:	add	x1, x26, x5
   1320c:	ldr	x0, [x26, x5]
   13210:	cbz	x0, 133fc <_ZdaPvRKSt9nothrow_t@@Base+0x173c>
   13214:	lsl	x24, x24, #7
   13218:	add	x2, x26, x5
   1321c:	add	x1, x24, x0
   13220:	sub	x0, x0, #0x1
   13224:	add	x1, x1, #0x2
   13228:	str	x0, [x26, x5]
   1322c:	add	x24, x24, x0
   13230:	add	x0, x24, #0x4
   13234:	ldr	x3, [x26, x1, lsl #3]
   13238:	ldr	x1, [x2, #16]
   1323c:	ldr	x2, [x4, #16]
   13240:	prfm	pldl1keep, [x3]
   13244:	add	x2, x2, x1
   13248:	ldr	x1, [x26, x0, lsl #3]
   1324c:	str	x2, [x4, #16]
   13250:	b	131e8 <_ZdaPvRKSt9nothrow_t@@Base+0x1528>
   13254:	ldr	x3, [x25, #24]
   13258:	str	xzr, [x1]
   1325c:	add	x0, x0, #0x1
   13260:	cmp	x19, x20
   13264:	str	x1, [x3]
   13268:	str	x0, [x25, #8]
   1326c:	str	x1, [x25, #24]
   13270:	b.hi	131d8 <_ZdaPvRKSt9nothrow_t@@Base+0x1518>  // b.pmore
   13274:	mov	w0, #0x1                   	// #1
   13278:	ldp	x23, x24, [sp, #32]
   1327c:	ldp	x27, x28, [sp, #64]
   13280:	b	130c8 <_ZdaPvRKSt9nothrow_t@@Base+0x1408>
   13284:	add	x24, x21, #0x80, lsl #12
   13288:	mov	w1, #0x1                   	// #1
   1328c:	ldxrb	w0, [x24]
   13290:	stxrb	w2, w1, [x24]
   13294:	cbnz	w2, 1328c <_ZdaPvRKSt9nothrow_t@@Base+0x15cc>
   13298:	dmb	ish
   1329c:	tst	w0, #0xff
   132a0:	b.eq	132b4 <_ZdaPvRKSt9nothrow_t@@Base+0x15f4>  // b.none
   132a4:	mov	x0, x24
   132a8:	str	x4, [sp, #104]
   132ac:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   132b0:	ldr	x4, [sp, #104]
   132b4:	ldr	x0, [x21, x20, lsl #3]
   132b8:	dmb	ish
   132bc:	cbz	x0, 133cc <_ZdaPvRKSt9nothrow_t@@Base+0x170c>
   132c0:	dmb	ish
   132c4:	strb	wzr, [x24]
   132c8:	b	12f28 <_ZdaPvRKSt9nothrow_t@@Base+0x1268>
   132cc:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   132d0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   132d4:	add	x2, x2, #0x188
   132d8:	add	x0, x0, #0x128
   132dc:	mov	x4, #0x0                   	// #0
   132e0:	mov	x3, #0x0                   	// #0
   132e4:	mov	w1, #0x131                 	// #305
   132e8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   132ec:	mov	x3, x20
   132f0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   132f4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   132f8:	add	x2, x2, #0x350
   132fc:	add	x0, x0, #0x270
   13300:	mov	x4, #0x36                  	// #54
   13304:	mov	w1, #0x9a                  	// #154
   13308:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1330c:	ldr	x4, [x25, #24]
   13310:	add	x2, x0, #0x1
   13314:	ldp	x23, x24, [sp, #32]
   13318:	mov	w0, #0x1                   	// #1
   1331c:	ldp	x27, x28, [sp, #64]
   13320:	str	xzr, [x1]
   13324:	str	x1, [x4]
   13328:	str	x2, [x25, #8]
   1332c:	str	x1, [x25, #24]
   13330:	b	130c8 <_ZdaPvRKSt9nothrow_t@@Base+0x1408>
   13334:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13338:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1333c:	mov	x3, x19
   13340:	add	x2, x2, #0x1b0
   13344:	add	x0, x0, #0x128
   13348:	mov	x4, #0x10000000            	// #268435456
   1334c:	mov	w1, #0x121                 	// #289
   13350:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13354:	mov	x3, x20
   13358:	mov	x2, x21
   1335c:	mov	x0, x26
   13360:	stp	x8, x4, [sp, #104]
   13364:	stp	x5, x9, [sp, #120]
   13368:	str	x7, [sp, #136]
   1336c:	bl	13530 <_ZdaPvRKSt9nothrow_t@@Base+0x1870>
   13370:	tst	w0, #0xff
   13374:	b.eq	130bc <_ZdaPvRKSt9nothrow_t@@Base+0x13fc>  // b.none
   13378:	ldp	x5, x9, [sp, #120]
   1337c:	ldp	x8, x4, [sp, #104]
   13380:	ldr	x7, [sp, #136]
   13384:	ldr	x0, [x26, x5]
   13388:	b	1307c <_ZdaPvRKSt9nothrow_t@@Base+0x13bc>
   1338c:	mov	x4, x1
   13390:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13394:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13398:	add	x2, x2, #0x1e8
   1339c:	add	x0, x0, #0x210
   133a0:	mov	x3, #0x0                   	// #0
   133a4:	mov	w1, #0x47                  	// #71
   133a8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   133ac:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   133b0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   133b4:	add	x2, x2, #0x110
   133b8:	add	x0, x0, #0x128
   133bc:	mov	x4, #0x0                   	// #0
   133c0:	mov	x3, #0x0                   	// #0
   133c4:	mov	w1, #0x174                 	// #372
   133c8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   133cc:	mov	w2, #0x0                   	// #0
   133d0:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   133d4:	mov	x0, #0x1000                	// #4096
   133d8:	add	x1, x1, #0x1d8
   133dc:	str	x4, [sp, #104]
   133e0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   133e4:	dmb	ish
   133e8:	str	x0, [x21, x20, lsl #3]
   133ec:	ldr	x4, [sp, #104]
   133f0:	b	132c0 <_ZdaPvRKSt9nothrow_t@@Base+0x1600>
   133f4:	mov	x3, x24
   133f8:	b	132f0 <_ZdaPvRKSt9nothrow_t@@Base+0x1630>
   133fc:	mov	x3, x24
   13400:	mov	x2, x21
   13404:	mov	x0, x26
   13408:	stp	x5, x4, [sp, #104]
   1340c:	bl	13530 <_ZdaPvRKSt9nothrow_t@@Base+0x1870>
   13410:	tst	w0, #0xff
   13414:	b.eq	130bc <_ZdaPvRKSt9nothrow_t@@Base+0x13fc>  // b.none
   13418:	ldp	x5, x4, [sp, #104]
   1341c:	ldr	x0, [x26, x5]
   13420:	b	13214 <_ZdaPvRKSt9nothrow_t@@Base+0x1554>
   13424:	nop
   13428:	stp	x19, x20, [sp, #-80]!
   1342c:	mov	x20, x0
   13430:	mov	x0, #0x2001                	// #8193
   13434:	stp	x21, x22, [sp, #16]
   13438:	add	x22, x3, x0
   1343c:	mov	x19, x3
   13440:	lsl	x21, x22, #6
   13444:	stp	x23, x24, [sp, #32]
   13448:	add	x23, x20, x21
   1344c:	stp	x25, x26, [sp, #48]
   13450:	mov	x25, x2
   13454:	mov	x24, x1
   13458:	mov	w1, #0x1                   	// #1
   1345c:	str	x30, [sp, #64]
   13460:	ldxrb	w0, [x23]
   13464:	stxrb	w2, w1, [x23]
   13468:	cbnz	w2, 13460 <_ZdaPvRKSt9nothrow_t@@Base+0x17a0>
   1346c:	dmb	ish
   13470:	tst	w0, #0xff
   13474:	b.eq	13480 <_ZdaPvRKSt9nothrow_t@@Base+0x17c0>  // b.none
   13478:	mov	x0, x23
   1347c:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   13480:	add	x21, x21, #0x8
   13484:	add	x26, x20, x21
   13488:	ldr	x5, [x20, x21]
   1348c:	cbnz	x5, 134b8 <_ZdaPvRKSt9nothrow_t@@Base+0x17f8>
   13490:	mov	x3, x23
   13494:	mov	x2, x25
   13498:	mov	x1, x24
   1349c:	mov	x4, x19
   134a0:	mov	x0, x20
   134a4:	bl	12ea0 <_ZdaPvRKSt9nothrow_t@@Base+0x11e0>
   134a8:	tst	w0, #0xff
   134ac:	b.eq	13528 <_ZdaPvRKSt9nothrow_t@@Base+0x1868>  // b.none
   134b0:	ldr	x5, [x20, x21]
   134b4:	cbz	x5, 13508 <_ZdaPvRKSt9nothrow_t@@Base+0x1848>
   134b8:	add	x4, x20, x19, lsl #6
   134bc:	add	x4, x4, #0x80, lsl #12
   134c0:	ldr	x0, [x26, #8]
   134c4:	ldr	x1, [x4, #80]
   134c8:	ldr	x1, [x1]
   134cc:	str	x1, [x4, #80]
   134d0:	cbz	x1, 13500 <_ZdaPvRKSt9nothrow_t@@Base+0x1840>
   134d4:	sub	x5, x5, #0x1
   134d8:	str	x5, [x4, #72]
   134dc:	dmb	ish
   134e0:	lsl	x22, x22, #6
   134e4:	strb	wzr, [x20, x22]
   134e8:	ldp	x21, x22, [sp, #16]
   134ec:	ldp	x23, x24, [sp, #32]
   134f0:	ldp	x25, x26, [sp, #48]
   134f4:	ldr	x30, [sp, #64]
   134f8:	ldp	x19, x20, [sp], #80
   134fc:	ret
   13500:	str	xzr, [x4, #88]
   13504:	b	134d4 <_ZdaPvRKSt9nothrow_t@@Base+0x1814>
   13508:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1350c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13510:	add	x2, x2, #0x2d0
   13514:	add	x0, x0, #0x2e8
   13518:	mov	x4, #0x0                   	// #0
   1351c:	mov	x3, #0x0                   	// #0
   13520:	mov	w1, #0x41                  	// #65
   13524:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13528:	mov	x0, #0x0                   	// #0
   1352c:	b	134dc <_ZdaPvRKSt9nothrow_t@@Base+0x181c>
   13530:	stp	x19, x20, [sp, #-64]!
   13534:	mov	x19, x0
   13538:	ldr	x0, [x1, #8]
   1353c:	stp	x21, x22, [sp, #16]
   13540:	mov	x21, x1
   13544:	stp	x23, x24, [sp, #32]
   13548:	mov	x22, x2
   1354c:	mov	x23, x3
   13550:	str	x30, [sp, #48]
   13554:	cbz	x0, 13698 <_ZdaPvRKSt9nothrow_t@@Base+0x19d8>
   13558:	mov	x3, #0xd800                	// #55296
   1355c:	add	x24, x19, x3
   13560:	mov	x1, x24
   13564:	mov	x3, x23
   13568:	mov	x2, x19
   1356c:	mov	x0, x22
   13570:	bl	13428 <_ZdaPvRKSt9nothrow_t@@Base+0x1768>
   13574:	mov	x20, x0
   13578:	cbz	x0, 13680 <_ZdaPvRKSt9nothrow_t@@Base+0x19c0>
   1357c:	ldr	x5, [x0, #8]
   13580:	cbz	x5, 13774 <_ZdaPvRKSt9nothrow_t@@Base+0x1ab4>
   13584:	add	x2, x0, #0x10
   13588:	add	x0, x21, #0x30
   1358c:	cmp	x2, x0
   13590:	sub	x1, x5, #0x1
   13594:	ccmp	x21, x20, #0x2, cc  // cc = lo, ul, last
   13598:	add	x0, x21, #0x20
   1359c:	ccmp	x1, #0x9, #0x0, cs  // cs = hs, nlast
   135a0:	b.ls	13664 <_ZdaPvRKSt9nothrow_t@@Base+0x19a4>  // b.plast
   135a4:	lsr	x1, x5, #1
   135a8:	mov	x4, #0x0                   	// #0
   135ac:	lsl	x1, x1, #4
   135b0:	ldr	q0, [x2, x4]
   135b4:	str	q0, [x0, x4]
   135b8:	add	x4, x4, #0x10
   135bc:	cmp	x1, x4
   135c0:	b.ne	135b0 <_ZdaPvRKSt9nothrow_t@@Base+0x18f0>  // b.any
   135c4:	and	x4, x5, #0xfffffffffffffffe
   135c8:	tbz	w5, #0, 135d8 <_ZdaPvRKSt9nothrow_t@@Base+0x1918>
   135cc:	add	x1, x4, #0x2
   135d0:	ldr	x1, [x20, x1, lsl #3]
   135d4:	str	x1, [x0, x4, lsl #3]
   135d8:	add	x23, x19, x23, lsl #10
   135dc:	str	x5, [x21]
   135e0:	mov	w0, #0x1                   	// #1
   135e4:	ldr	x21, [x23, #24]
   135e8:	cbnz	x21, 13600 <_ZdaPvRKSt9nothrow_t@@Base+0x1940>
   135ec:	ldp	x21, x22, [sp, #16]
   135f0:	ldp	x23, x24, [sp, #32]
   135f4:	ldr	x30, [sp, #48]
   135f8:	ldp	x19, x20, [sp], #64
   135fc:	ret
   13600:	cmp	x21, #0x35
   13604:	b.hi	13894 <_ZdaPvRKSt9nothrow_t@@Base+0x1bd4>  // b.pmore
   13608:	lsl	x23, x21, #10
   1360c:	add	x1, x19, x23
   13610:	ldr	x2, [x1, #8]
   13614:	cbz	x2, 137ac <_ZdaPvRKSt9nothrow_t@@Base+0x1aec>
   13618:	ldr	x0, [x19, x23]
   1361c:	cmp	x0, x2
   13620:	b.eq	13794 <_ZdaPvRKSt9nothrow_t@@Base+0x1ad4>  // b.none
   13624:	add	x2, x0, x21, lsl #7
   13628:	add	x3, x19, x23
   1362c:	add	x2, x2, #0x4
   13630:	add	x0, x0, #0x1
   13634:	str	x0, [x19, x23]
   13638:	mov	w0, #0x1                   	// #1
   1363c:	ldr	x1, [x24, #16]
   13640:	str	x20, [x19, x2, lsl #3]
   13644:	ldp	x21, x22, [sp, #16]
   13648:	ldr	x2, [x3, #16]
   1364c:	ldr	x30, [sp, #48]
   13650:	sub	x1, x1, x2
   13654:	str	x1, [x24, #16]
   13658:	ldp	x23, x24, [sp, #32]
   1365c:	ldp	x19, x20, [sp], #64
   13660:	ret
   13664:	mov	x1, #0x0                   	// #0
   13668:	ldr	x3, [x2, x1, lsl #3]
   1366c:	str	x3, [x0, x1, lsl #3]
   13670:	add	x1, x1, #0x1
   13674:	cmp	x5, x1
   13678:	b.ne	13668 <_ZdaPvRKSt9nothrow_t@@Base+0x19a8>  // b.any
   1367c:	b	135d8 <_ZdaPvRKSt9nothrow_t@@Base+0x1918>
   13680:	mov	w0, #0x0                   	// #0
   13684:	ldp	x21, x22, [sp, #16]
   13688:	ldp	x23, x24, [sp, #32]
   1368c:	ldr	x30, [sp, #48]
   13690:	ldp	x19, x20, [sp], #64
   13694:	ret
   13698:	mov	x5, #0x1                   	// #1
   1369c:	mov	x11, x5
   136a0:	mov	x12, #0x7c                  	// #124
   136a4:	mov	x10, #0x14                  	// #20
   136a8:	mov	x9, #0x100                 	// #256
   136ac:	mov	w8, #0x4000                	// #16384
   136b0:	mov	x3, #0x3e                  	// #62
   136b4:	nop
   136b8:	add	x2, x19, x5, lsl #10
   136bc:	lsl	x4, x5, #4
   136c0:	mov	x6, x2
   136c4:	mov	x0, #0x14                  	// #20
   136c8:	mov	x1, x5
   136cc:	add	x5, x5, #0x1
   136d0:	stp	x12, x4, [x2, #8]
   136d4:	cmp	x5, #0x36
   136d8:	str	x0, [x6, #24]
   136dc:	b.eq	13558 <_ZdaPvRKSt9nothrow_t@@Base+0x1898>  // b.none
   136e0:	cmp	x5, #0x35
   136e4:	b.eq	13754 <_ZdaPvRKSt9nothrow_t@@Base+0x1a94>  // b.none
   136e8:	cmp	x5, #0x10
   136ec:	b.ls	136b8 <_ZdaPvRKSt9nothrow_t@@Base+0x19f8>  // b.plast
   136f0:	sub	x4, x1, #0xf
   136f4:	add	x6, x6, #0x400
   136f8:	and	x0, x4, #0x3
   136fc:	mov	x1, x5
   13700:	lsr	x4, x4, #2
   13704:	add	x5, x5, #0x1
   13708:	lsl	x4, x9, x4
   1370c:	lsr	x7, x4, #2
   13710:	madd	x7, x7, x0, x4
   13714:	str	x7, [x6, #16]
   13718:	udiv	w4, w8, w7
   1371c:	cmp	x4, #0x0
   13720:	csel	x4, x4, x11, ne  // ne = any
   13724:	cmp	x4, #0x3e
   13728:	csel	x4, x4, x3, ls  // ls = plast
   1372c:	add	x0, x4, #0x2
   13730:	lsl	x4, x4, #1
   13734:	str	x4, [x6, #8]
   13738:	cmp	x7, x0, lsl #3
   1373c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   13740:	str	x0, [x6, #24]
   13744:	cmp	x5, #0x36
   13748:	b.eq	13558 <_ZdaPvRKSt9nothrow_t@@Base+0x1898>  // b.none
   1374c:	cmp	x5, #0x35
   13750:	b.ne	136e8 <_ZdaPvRKSt9nothrow_t@@Base+0x1a28>  // b.any
   13754:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13758:	ldr	q0, [x0, #1136]
   1375c:	mov	x0, #0xd400                	// #54272
   13760:	add	x1, x19, x0
   13764:	add	x0, x19, #0x8, lsl #12
   13768:	stur	q0, [x1, #8]
   1376c:	str	xzr, [x0, #21528]
   13770:	b	13558 <_ZdaPvRKSt9nothrow_t@@Base+0x1898>
   13774:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13778:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1377c:	add	x2, x2, #0x110
   13780:	add	x0, x0, #0x270
   13784:	mov	x4, #0x0                   	// #0
   13788:	mov	x3, #0x0                   	// #0
   1378c:	mov	w1, #0xf0                  	// #240
   13790:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13794:	mov	x0, x19
   13798:	mov	x2, x22
   1379c:	mov	x3, x21
   137a0:	bl	13d50 <_ZdaPvRKSt9nothrow_t@@Base+0x2090>
   137a4:	ldr	x0, [x19, x23]
   137a8:	b	13624 <_ZdaPvRKSt9nothrow_t@@Base+0x1964>
   137ac:	mov	x2, #0x1                   	// #1
   137b0:	mov	x11, x2
   137b4:	mov	x12, #0x7c                  	// #124
   137b8:	mov	x10, #0x14                  	// #20
   137bc:	mov	x9, #0x100                 	// #256
   137c0:	mov	w8, #0x4000                	// #16384
   137c4:	mov	x7, #0x3e                  	// #62
   137c8:	add	x5, x19, x2, lsl #10
   137cc:	lsl	x6, x2, #4
   137d0:	mov	x4, x5
   137d4:	mov	x0, #0x14                  	// #20
   137d8:	mov	x3, x2
   137dc:	add	x2, x2, #0x1
   137e0:	stp	x12, x6, [x5, #8]
   137e4:	cmp	x2, #0x36
   137e8:	str	x0, [x4, #24]
   137ec:	b.eq	1385c <_ZdaPvRKSt9nothrow_t@@Base+0x1b9c>  // b.none
   137f0:	cmp	x2, #0x35
   137f4:	b.eq	13864 <_ZdaPvRKSt9nothrow_t@@Base+0x1ba4>  // b.none
   137f8:	cmp	x2, #0x10
   137fc:	b.ls	137c8 <_ZdaPvRKSt9nothrow_t@@Base+0x1b08>  // b.plast
   13800:	sub	x0, x3, #0xf
   13804:	add	x4, x4, #0x400
   13808:	and	x6, x0, #0x3
   1380c:	mov	x3, x2
   13810:	lsr	x0, x0, #2
   13814:	add	x2, x2, #0x1
   13818:	lsl	x0, x9, x0
   1381c:	lsr	x5, x0, #2
   13820:	madd	x5, x5, x6, x0
   13824:	str	x5, [x4, #16]
   13828:	udiv	w0, w8, w5
   1382c:	cmp	x0, #0x0
   13830:	csel	x0, x0, x11, ne  // ne = any
   13834:	cmp	x0, #0x3e
   13838:	csel	x0, x0, x7, ls  // ls = plast
   1383c:	add	x6, x0, #0x2
   13840:	lsl	x0, x0, #1
   13844:	str	x0, [x4, #8]
   13848:	cmp	x5, x6, lsl #3
   1384c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   13850:	str	x0, [x4, #24]
   13854:	cmp	x2, #0x36
   13858:	b.ne	137f0 <_ZdaPvRKSt9nothrow_t@@Base+0x1b30>  // b.any
   1385c:	ldr	x2, [x1, #8]
   13860:	b	13618 <_ZdaPvRKSt9nothrow_t@@Base+0x1958>
   13864:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13868:	mov	x2, #0xd400                	// #54272
   1386c:	add	x2, x19, x2
   13870:	ldr	q0, [x0, #1136]
   13874:	add	x0, x19, #0x8, lsl #12
   13878:	stur	q0, [x2, #8]
   1387c:	str	xzr, [x0, #21528]
   13880:	ldr	x0, [x19, x23]
   13884:	ldr	x2, [x1, #8]
   13888:	cmp	x0, x2
   1388c:	b.ne	13624 <_ZdaPvRKSt9nothrow_t@@Base+0x1964>  // b.any
   13890:	b	13794 <_ZdaPvRKSt9nothrow_t@@Base+0x1ad4>
   13894:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13898:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1389c:	mov	x3, x21
   138a0:	add	x2, x2, #0x350
   138a4:	add	x0, x0, #0x270
   138a8:	mov	x4, #0x36                  	// #54
   138ac:	mov	w1, #0xa9                  	// #169
   138b0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   138b4:	nop
   138b8:	stp	x19, x20, [sp, #-80]!
   138bc:	cmp	x2, #0x0
   138c0:	stp	x21, x22, [sp, #16]
   138c4:	csinc	x22, x2, xzr, ne  // ne = any
   138c8:	mov	x21, x1
   138cc:	str	x30, [sp, #64]
   138d0:	adds	x1, x3, x22
   138d4:	b.cs	13d28 <_ZdaPvRKSt9nothrow_t@@Base+0x2068>  // b.hs, b.nlast
   138d8:	stp	x23, x24, [sp, #32]
   138dc:	mov	x19, x3
   138e0:	mov	x23, x0
   138e4:	cmp	x3, #0x8
   138e8:	b.hi	13b30 <_ZdaPvRKSt9nothrow_t@@Base+0x1e70>  // b.pmore
   138ec:	cmp	x2, #0x20, lsl #12
   138f0:	b.hi	139b4 <_ZdaPvRKSt9nothrow_t@@Base+0x1cf4>  // b.pmore
   138f4:	cmp	x22, #0x100
   138f8:	b.ls	13b64 <_ZdaPvRKSt9nothrow_t@@Base+0x1ea4>  // b.plast
   138fc:	clz	x3, x22
   13900:	mov	w20, #0x3f                  	// #63
   13904:	sub	w20, w20, w3
   13908:	mov	w3, #0x1                   	// #1
   1390c:	sub	w1, w20, #0x2
   13910:	lsl	w3, w3, w1
   13914:	sub	w3, w3, #0x1
   13918:	tst	x3, x22
   1391c:	lsr	x3, x22, x1
   13920:	and	x3, x3, #0x3
   13924:	cinc	x3, x3, ne  // ne = any
   13928:	add	x20, x3, w20, sxtw #2
   1392c:	sub	x20, x20, #0x10
   13930:	cmp	x20, #0x35
   13934:	b.hi	13bb4 <_ZdaPvRKSt9nothrow_t@@Base+0x1ef4>  // b.pmore
   13938:	lsl	x22, x20, #10
   1393c:	add	x1, x21, x22
   13940:	ldr	x3, [x21, x22]
   13944:	cbz	x3, 13c48 <_ZdaPvRKSt9nothrow_t@@Base+0x1f88>
   13948:	lsl	x20, x20, #7
   1394c:	add	x1, x21, x22
   13950:	add	x0, x20, x3
   13954:	mov	x2, #0xd800                	// #55296
   13958:	add	x0, x0, #0x2
   1395c:	sub	x3, x3, #0x1
   13960:	add	x2, x21, x2
   13964:	str	x3, [x21, x22]
   13968:	add	x20, x20, x3
   1396c:	ldr	x3, [x21, x0, lsl #3]
   13970:	add	x20, x20, #0x4
   13974:	ldr	x0, [x1, #16]
   13978:	ldr	x1, [x2, #16]
   1397c:	prfm	pldl1keep, [x3]
   13980:	add	x1, x1, x0
   13984:	ldr	x0, [x21, x20, lsl #3]
   13988:	str	x1, [x2, #16]
   1398c:	cmp	x19, #0x8
   13990:	b.ls	139a0 <_ZdaPvRKSt9nothrow_t@@Base+0x1ce0>  // b.plast
   13994:	sub	x19, x19, #0x1
   13998:	ands	x3, x0, x19
   1399c:	b.ne	13c08 <_ZdaPvRKSt9nothrow_t@@Base+0x1f48>  // b.any
   139a0:	ldp	x23, x24, [sp, #32]
   139a4:	ldp	x21, x22, [sp, #16]
   139a8:	ldr	x30, [sp, #64]
   139ac:	ldp	x19, x20, [sp], #80
   139b0:	ret
   139b4:	stp	x25, x26, [sp, #48]
   139b8:	sub	x24, x3, #0x1
   139bc:	tst	x3, x24
   139c0:	b.ne	13c28 <_ZdaPvRKSt9nothrow_t@@Base+0x1f68>  // b.any
   139c4:	add	x25, x23, #0x80, lsl #12
   139c8:	add	x25, x25, #0xc00
   139cc:	ldr	x2, [x25, #448]
   139d0:	sub	x0, x2, #0x1
   139d4:	tst	x2, x0
   139d8:	b.ne	13ba4 <_ZdaPvRKSt9nothrow_t@@Base+0x1ee4>  // b.any
   139dc:	add	x20, x22, x0
   139e0:	neg	x0, x2
   139e4:	and	x20, x20, x0
   139e8:	cmp	x19, x2
   139ec:	add	x20, x20, x2
   139f0:	add	x0, x20, x19
   139f4:	csel	x20, x0, x20, hi  // hi = pmore
   139f8:	cmp	x22, x20
   139fc:	b.hi	13bd8 <_ZdaPvRKSt9nothrow_t@@Base+0x1f18>  // b.pmore
   13a00:	adrp	x1, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
   13a04:	mov	x0, x20
   13a08:	ldr	x1, [x1, #632]
   13a0c:	bl	1ea00 <__sanitizer_set_report_fd@@Base+0x6c40>
   13a10:	cbz	x0, 13c68 <_ZdaPvRKSt9nothrow_t@@Base+0x1fa8>
   13a14:	ldr	x1, [x25, #448]
   13a18:	sub	x2, x1, #0x1
   13a1c:	tst	x0, x2
   13a20:	b.ne	13c78 <_ZdaPvRKSt9nothrow_t@@Base+0x1fb8>  // b.any
   13a24:	add	x21, x0, x1
   13a28:	ands	x3, x24, x21
   13a2c:	b.eq	13a40 <_ZdaPvRKSt9nothrow_t@@Base+0x1d80>  // b.none
   13a30:	add	x21, x19, x21
   13a34:	sub	x21, x21, x3
   13a38:	tst	x24, x21
   13a3c:	b.ne	13c98 <_ZdaPvRKSt9nothrow_t@@Base+0x1fd8>  // b.any
   13a40:	tst	x21, x2
   13a44:	b.ne	13cb8 <_ZdaPvRKSt9nothrow_t@@Base+0x1ff8>  // b.any
   13a48:	add	x3, x21, x22
   13a4c:	cmp	x0, x3
   13a50:	b.hi	13cd8 <_ZdaPvRKSt9nothrow_t@@Base+0x2018>  // b.pmore
   13a54:	add	x4, x0, x20
   13a58:	cmp	x4, x3
   13a5c:	b.cc	13cf4 <_ZdaPvRKSt9nothrow_t@@Base+0x2034>  // b.lo, b.ul, b.last
   13a60:	sub	x24, x21, x1
   13a64:	add	x26, x23, #0xc1, lsl #12
   13a68:	mov	w1, #0x1                   	// #1
   13a6c:	stp	x0, x20, [x24]
   13a70:	str	x22, [x24, #16]
   13a74:	ldxrb	w0, [x26]
   13a78:	stxrb	w2, w1, [x26]
   13a7c:	cbnz	w2, 13a74 <_ZdaPvRKSt9nothrow_t@@Base+0x1db4>
   13a80:	dmb	ish
   13a84:	tst	w0, #0xff
   13a88:	b.eq	13a94 <_ZdaPvRKSt9nothrow_t@@Base+0x1dd4>  // b.none
   13a8c:	mov	x0, x26
   13a90:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   13a94:	add	x25, x25, #0x1c0
   13a98:	mov	x0, #0x7fff                	// #32767
   13a9c:	add	x1, x25, #0x40, lsl #12
   13aa0:	ldr	x3, [x1, #16]
   13aa4:	cmp	x3, x0
   13aa8:	b.hi	13d0c <_ZdaPvRKSt9nothrow_t@@Base+0x204c>  // b.pmore
   13aac:	clz	x0, x20
   13ab0:	mov	w2, #0x3f                  	// #63
   13ab4:	sub	w2, w2, w0
   13ab8:	add	x5, x3, #0x1
   13abc:	ldp	x0, x4, [x1, #48]
   13ac0:	add	x23, x23, w2, sxtw #3
   13ac4:	ldr	x6, [x25, #8]
   13ac8:	str	x5, [x1, #16]
   13acc:	ldr	x5, [x1, #32]
   13ad0:	str	x3, [x24, #24]
   13ad4:	add	x0, x20, x0
   13ad8:	add	x23, x23, #0xc0, lsl #12
   13adc:	cmp	x4, x0
   13ae0:	str	x24, [x6, x3, lsl #3]
   13ae4:	csel	x4, x4, x0, cs  // cs = hs, nlast
   13ae8:	add	x5, x5, #0x1
   13aec:	strb	wzr, [x1, #24]
   13af0:	str	x5, [x1, #32]
   13af4:	stp	x0, x4, [x1, #48]
   13af8:	ldr	x1, [x23, #3584]
   13afc:	ldr	x0, [x26, #24]
   13b00:	add	x1, x1, #0x1
   13b04:	str	x1, [x23, #3584]
   13b08:	add	x0, x20, x0
   13b0c:	str	x0, [x26, #24]
   13b10:	ldr	x0, [x26, #32]
   13b14:	add	x20, x20, x0
   13b18:	str	x20, [x26, #32]
   13b1c:	dmb	ish
   13b20:	strb	wzr, [x26]
   13b24:	mov	x0, x21
   13b28:	ldp	x25, x26, [sp, #48]
   13b2c:	b	1398c <_ZdaPvRKSt9nothrow_t@@Base+0x1ccc>
   13b30:	sub	x24, x3, #0x1
   13b34:	tst	x3, x24
   13b38:	b.ne	13ba0 <_ZdaPvRKSt9nothrow_t@@Base+0x1ee0>  // b.any
   13b3c:	sub	x3, x1, #0x1
   13b40:	neg	x1, x19
   13b44:	cmp	x19, #0x20, lsl #12
   13b48:	and	x1, x3, x1
   13b4c:	mov	x0, #0x20000               	// #131072
   13b50:	ccmp	x1, x0, #0x2, ls  // ls = plast
   13b54:	b.hi	13b98 <_ZdaPvRKSt9nothrow_t@@Base+0x1ed8>  // b.pmore
   13b58:	mov	x22, x1
   13b5c:	cmp	x22, #0x100
   13b60:	b.hi	138fc <_ZdaPvRKSt9nothrow_t@@Base+0x1c3c>  // b.pmore
   13b64:	add	x20, x22, #0xf
   13b68:	cmp	xzr, x20, lsr #4
   13b6c:	lsr	x20, x20, #4
   13b70:	b.ne	13938 <_ZdaPvRKSt9nothrow_t@@Base+0x1c78>  // b.any
   13b74:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13b78:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13b7c:	add	x2, x2, #0x2c8
   13b80:	add	x0, x0, #0x270
   13b84:	mov	x4, #0x0                   	// #0
   13b88:	mov	x3, #0x0                   	// #0
   13b8c:	mov	w1, #0x99                  	// #153
   13b90:	stp	x25, x26, [sp, #48]
   13b94:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13b98:	stp	x25, x26, [sp, #48]
   13b9c:	b	139c4 <_ZdaPvRKSt9nothrow_t@@Base+0x1d04>
   13ba0:	stp	x25, x26, [sp, #48]
   13ba4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   13ba8:	add	x0, x0, #0xb38
   13bac:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   13bb0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   13bb4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13bb8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13bbc:	mov	x3, x20
   13bc0:	add	x2, x2, #0x350
   13bc4:	add	x0, x0, #0x270
   13bc8:	mov	x4, #0x36                  	// #54
   13bcc:	mov	w1, #0x9a                  	// #154
   13bd0:	stp	x25, x26, [sp, #48]
   13bd4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13bd8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   13bdc:	mov	x3, x19
   13be0:	mov	x2, x20
   13be4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13be8:	ldr	x1, [x1, #4024]
   13bec:	add	x0, x0, #0x398
   13bf0:	ldr	x1, [x1]
   13bf4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   13bf8:	mov	x0, #0x0                   	// #0
   13bfc:	ldp	x23, x24, [sp, #32]
   13c00:	ldp	x25, x26, [sp, #48]
   13c04:	b	139a4 <_ZdaPvRKSt9nothrow_t@@Base+0x1ce4>
   13c08:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13c0c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13c10:	add	x2, x2, #0x4e0
   13c14:	add	x0, x0, #0x398
   13c18:	mov	x4, #0x0                   	// #0
   13c1c:	mov	w1, #0x49                  	// #73
   13c20:	stp	x25, x26, [sp, #48]
   13c24:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13c28:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13c2c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13c30:	add	x2, x2, #0x370
   13c34:	add	x0, x0, #0x338
   13c38:	mov	x4, #0x0                   	// #0
   13c3c:	mov	x3, #0x0                   	// #0
   13c40:	mov	w1, #0x56                  	// #86
   13c44:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13c48:	mov	x2, x23
   13c4c:	mov	x3, x20
   13c50:	mov	x0, x21
   13c54:	bl	13530 <_ZdaPvRKSt9nothrow_t@@Base+0x1870>
   13c58:	tst	w0, #0xff
   13c5c:	b.eq	13c6c <_ZdaPvRKSt9nothrow_t@@Base+0x1fac>  // b.none
   13c60:	ldr	x3, [x21, x22]
   13c64:	b	13948 <_ZdaPvRKSt9nothrow_t@@Base+0x1c88>
   13c68:	ldp	x25, x26, [sp, #48]
   13c6c:	mov	x0, #0x0                   	// #0
   13c70:	ldp	x23, x24, [sp, #32]
   13c74:	b	139a4 <_ZdaPvRKSt9nothrow_t@@Base+0x1ce4>
   13c78:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13c7c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13c80:	add	x2, x2, #0x400
   13c84:	add	x0, x0, #0x338
   13c88:	mov	x4, #0x0                   	// #0
   13c8c:	mov	x3, #0x0                   	// #0
   13c90:	mov	w1, #0x65                  	// #101
   13c94:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13c98:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13c9c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13ca0:	add	x2, x2, #0x430
   13ca4:	add	x0, x0, #0x338
   13ca8:	mov	x4, #0x0                   	// #0
   13cac:	mov	x3, #0x0                   	// #0
   13cb0:	mov	w1, #0x6b                  	// #107
   13cb4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13cb8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13cbc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13cc0:	add	x2, x2, #0x458
   13cc4:	add	x0, x0, #0x338
   13cc8:	mov	x4, #0x0                   	// #0
   13ccc:	mov	x3, #0x0                   	// #0
   13cd0:	mov	w1, #0x6c                  	// #108
   13cd4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13cd8:	mov	x4, x0
   13cdc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13ce0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13ce4:	add	x2, x2, #0x480
   13ce8:	add	x0, x0, #0x338
   13cec:	mov	w1, #0x6d                  	// #109
   13cf0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13cf4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13cf8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13cfc:	add	x2, x2, #0x4a0
   13d00:	add	x0, x0, #0x338
   13d04:	mov	w1, #0x6e                  	// #110
   13d08:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13d0c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13d10:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13d14:	add	x2, x2, #0x4c0
   13d18:	add	x0, x0, #0x338
   13d1c:	mov	x4, #0x8000                	// #32768
   13d20:	mov	w1, #0x16                  	// #22
   13d24:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13d28:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   13d2c:	mov	x2, x22
   13d30:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13d34:	add	x0, x0, #0x268
   13d38:	ldr	x1, [x1, #4024]
   13d3c:	ldr	x1, [x1]
   13d40:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   13d44:	mov	x0, #0x0                   	// #0
   13d48:	b	139a4 <_ZdaPvRKSt9nothrow_t@@Base+0x1ce4>
   13d4c:	nop
   13d50:	stp	x19, x20, [sp, #-80]!
   13d54:	stp	x23, x24, [sp, #32]
   13d58:	mov	x23, x1
   13d5c:	add	x1, x0, x3, lsl #10
   13d60:	stp	x25, x26, [sp, #48]
   13d64:	mov	x24, x3
   13d68:	mov	x25, x2
   13d6c:	ldp	x20, x19, [x23]
   13d70:	stp	x21, x22, [sp, #16]
   13d74:	ldr	x26, [x1, #24]
   13d78:	str	x30, [sp, #72]
   13d7c:	lsr	x19, x19, #1
   13d80:	cmp	x19, x20
   13d84:	csel	x19, x19, x20, ls  // ls = plast
   13d88:	sub	x21, x20, x19
   13d8c:	cbnz	x26, 13e44 <_ZdaPvRKSt9nothrow_t@@Base+0x2184>
   13d90:	add	x0, x21, #0x4
   13d94:	ldr	x2, [x23, x0, lsl #3]
   13d98:	cbz	x2, 13ed0 <_ZdaPvRKSt9nothrow_t@@Base+0x2210>
   13d9c:	add	x5, x21, #0x4
   13da0:	str	x19, [x2, #8]
   13da4:	add	x5, x23, x5, lsl #3
   13da8:	cbz	x19, 13e18 <_ZdaPvRKSt9nothrow_t@@Base+0x2158>
   13dac:	add	x0, x20, #0x6
   13db0:	add	x4, x20, #0x4
   13db4:	sub	x0, x0, x19
   13db8:	sub	x4, x4, x19
   13dbc:	add	x7, x2, #0x10
   13dc0:	add	x1, x2, #0x20
   13dc4:	add	x0, x23, x0, lsl #3
   13dc8:	add	x4, x23, x4, lsl #3
   13dcc:	cmp	x7, x0
   13dd0:	sub	x0, x19, #0x1
   13dd4:	ccmp	x1, x4, #0x0, cc  // cc = lo, ul, last
   13dd8:	ccmp	x0, #0x9, #0x0, ls  // ls = plast
   13ddc:	b.ls	13eb0 <_ZdaPvRKSt9nothrow_t@@Base+0x21f0>  // b.plast
   13de0:	lsr	x6, x19, #1
   13de4:	mov	x0, #0x0                   	// #0
   13de8:	lsl	x6, x6, #4
   13dec:	nop
   13df0:	ldr	q0, [x4, x0]
   13df4:	str	q0, [x7, x0]
   13df8:	add	x0, x0, #0x10
   13dfc:	cmp	x0, x6
   13e00:	b.ne	13df0 <_ZdaPvRKSt9nothrow_t@@Base+0x2130>  // b.any
   13e04:	and	x0, x19, #0xfffffffffffffffe
   13e08:	tbz	w19, #0, 13e18 <_ZdaPvRKSt9nothrow_t@@Base+0x2158>
   13e0c:	add	x4, x0, #0x2
   13e10:	ldr	x0, [x5, x0, lsl #3]
   13e14:	str	x0, [x2, x4, lsl #3]
   13e18:	ldr	x3, [x23]
   13e1c:	mov	x0, x25
   13e20:	ldp	x21, x22, [sp, #16]
   13e24:	sub	x19, x3, x19
   13e28:	ldp	x25, x26, [sp, #48]
   13e2c:	mov	x1, x24
   13e30:	ldr	x30, [sp, #72]
   13e34:	str	x19, [x23]
   13e38:	ldp	x23, x24, [sp, #32]
   13e3c:	ldp	x19, x20, [sp], #80
   13e40:	b	12dc0 <_ZdaPvRKSt9nothrow_t@@Base+0x1100>
   13e44:	str	x27, [sp, #64]
   13e48:	cmp	x26, #0x35
   13e4c:	b.hi	13ef0 <_ZdaPvRKSt9nothrow_t@@Base+0x2230>  // b.pmore
   13e50:	lsl	x27, x26, #10
   13e54:	mov	x22, x0
   13e58:	add	x1, x0, x27
   13e5c:	ldr	x3, [x0, x27]
   13e60:	cbz	x3, 13f10 <_ZdaPvRKSt9nothrow_t@@Base+0x2250>
   13e64:	lsl	x26, x26, #7
   13e68:	add	x2, x22, x27
   13e6c:	add	x0, x26, x3
   13e70:	mov	x1, #0xd800                	// #55296
   13e74:	add	x0, x0, #0x2
   13e78:	sub	x3, x3, #0x1
   13e7c:	add	x1, x22, x1
   13e80:	str	x3, [x22, x27]
   13e84:	add	x26, x26, x3
   13e88:	ldr	x3, [x22, x0, lsl #3]
   13e8c:	add	x26, x26, #0x4
   13e90:	ldr	x2, [x2, #16]
   13e94:	ldr	x0, [x1, #16]
   13e98:	prfm	pldl1keep, [x3]
   13e9c:	add	x0, x0, x2
   13ea0:	ldr	x2, [x22, x26, lsl #3]
   13ea4:	ldr	x27, [sp, #64]
   13ea8:	str	x0, [x1, #16]
   13eac:	b	13d98 <_ZdaPvRKSt9nothrow_t@@Base+0x20d8>
   13eb0:	mov	x0, #0x0                   	// #0
   13eb4:	nop
   13eb8:	ldr	x1, [x5, x0, lsl #3]
   13ebc:	str	x1, [x7, x0, lsl #3]
   13ec0:	add	x0, x0, #0x1
   13ec4:	cmp	x19, x0
   13ec8:	b.ne	13eb8 <_ZdaPvRKSt9nothrow_t@@Base+0x21f8>  // b.any
   13ecc:	b	13e18 <_ZdaPvRKSt9nothrow_t@@Base+0x2158>
   13ed0:	str	x27, [sp, #64]
   13ed4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   13ed8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13edc:	add	x0, x0, #0x3f8
   13ee0:	ldr	x1, [x1, #4024]
   13ee4:	ldr	x1, [x1]
   13ee8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   13eec:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   13ef0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   13ef4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   13ef8:	mov	x3, x26
   13efc:	add	x2, x2, #0x350
   13f00:	add	x0, x0, #0x270
   13f04:	mov	x4, #0x36                  	// #54
   13f08:	mov	w1, #0x9a                  	// #154
   13f0c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   13f10:	mov	x3, x26
   13f14:	bl	13530 <_ZdaPvRKSt9nothrow_t@@Base+0x1870>
   13f18:	tst	w0, #0xff
   13f1c:	b.eq	13ed4 <_ZdaPvRKSt9nothrow_t@@Base+0x2214>  // b.none
   13f20:	ldr	x3, [x22, x27]
   13f24:	b	13e64 <_ZdaPvRKSt9nothrow_t@@Base+0x21a4>
   13f28:	stp	x19, x20, [sp, #-64]!
   13f2c:	stp	x23, x24, [sp, #32]
   13f30:	mov	x23, x3
   13f34:	mov	x24, x4
   13f38:	str	x30, [sp, #56]
   13f3c:	cbz	x2, 141e8 <_ZdaPvRKSt9nothrow_t@@Base+0x2528>
   13f40:	stp	x21, x22, [sp, #16]
   13f44:	mov	x19, x2
   13f48:	mov	x20, x0
   13f4c:	mov	x22, x1
   13f50:	cbz	x3, 14200 <_ZdaPvRKSt9nothrow_t@@Base+0x2540>
   13f54:	str	x25, [sp, #48]
   13f58:	mov	x0, #0xffffffffffff        	// #281474976710655
   13f5c:	cmp	x2, x0
   13f60:	b.ls	14178 <_ZdaPvRKSt9nothrow_t@@Base+0x24b8>  // b.plast
   13f64:	add	x25, x20, #0xc1, lsl #12
   13f68:	mov	w1, #0x1                   	// #1
   13f6c:	ldxrb	w0, [x25]
   13f70:	stxrb	w2, w1, [x25]
   13f74:	cbnz	w2, 13f6c <_ZdaPvRKSt9nothrow_t@@Base+0x22ac>
   13f78:	dmb	ish
   13f7c:	tst	w0, #0xff
   13f80:	b.eq	13f8c <_ZdaPvRKSt9nothrow_t@@Base+0x22cc>  // b.none
   13f84:	mov	x0, x25
   13f88:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   13f8c:	add	x21, x20, #0x80, lsl #12
   13f90:	mov	x3, #0x0                   	// #0
   13f94:	add	x21, x21, #0xc00
   13f98:	add	x1, x21, #0x1c0
   13f9c:	add	x0, x1, #0x40, lsl #12
   13fa0:	ldr	x6, [x21, #456]
   13fa4:	ldr	x7, [x0, #16]
   13fa8:	add	x8, x6, x7, lsl #3
   13fac:	cbz	x7, 141c0 <_ZdaPvRKSt9nothrow_t@@Base+0x2500>
   13fb0:	ldr	x7, [x6]
   13fb4:	cmp	x19, x7
   13fb8:	b.cc	13fcc <_ZdaPvRKSt9nothrow_t@@Base+0x230c>  // b.lo, b.ul, b.last
   13fbc:	sub	x2, x19, x3
   13fc0:	sub	x1, x19, x7
   13fc4:	cmp	x2, x1
   13fc8:	csel	x3, x3, x7, ls  // ls = plast
   13fcc:	add	x6, x6, #0x8
   13fd0:	cmp	x6, x8
   13fd4:	b.ne	13fb0 <_ZdaPvRKSt9nothrow_t@@Base+0x22f0>  // b.any
   13fd8:	cbz	x3, 141c0 <_ZdaPvRKSt9nothrow_t@@Base+0x2500>
   13fdc:	ldr	x4, [x3]
   13fe0:	cmp	x4, x3
   13fe4:	b.hi	144ac <_ZdaPvRKSt9nothrow_t@@Base+0x27ec>  // b.pmore
   13fe8:	ldr	x0, [x3, #8]
   13fec:	add	x4, x4, x0
   13ff0:	cmp	x4, x3
   13ff4:	b.ls	144c4 <_ZdaPvRKSt9nothrow_t@@Base+0x2804>  // b.plast
   13ff8:	cmp	x19, x3
   13ffc:	b.cc	144dc <_ZdaPvRKSt9nothrow_t@@Base+0x281c>  // b.lo, b.ul, b.last
   14000:	cmp	x4, x19
   14004:	b.ls	141c0 <_ZdaPvRKSt9nothrow_t@@Base+0x2500>  // b.plast
   14008:	ldr	x0, [x21, #448]
   1400c:	sub	x1, x0, #0x1
   14010:	tst	x1, x3
   14014:	b.ne	14420 <_ZdaPvRKSt9nothrow_t@@Base+0x2760>  // b.any
   14018:	dmb	ish
   1401c:	strb	wzr, [x25]
   14020:	cmn	x0, x3
   14024:	b.eq	141c8 <_ZdaPvRKSt9nothrow_t@@Base+0x2508>  // b.none
   14028:	mov	x0, #0xffffffffffff        	// #281474976710655
   1402c:	cmp	x19, x0
   14030:	b.ls	14368 <_ZdaPvRKSt9nothrow_t@@Base+0x26a8>  // b.plast
   14034:	ldr	x1, [x21, #448]
   14038:	sub	x0, x1, #0x1
   1403c:	tst	x19, x0
   14040:	b.ne	14400 <_ZdaPvRKSt9nothrow_t@@Base+0x2740>  // b.any
   14044:	sub	x2, x19, x1
   14048:	tst	x1, x0
   1404c:	ldr	x5, [x2, #16]
   14050:	b.ne	144f8 <_ZdaPvRKSt9nothrow_t@@Base+0x2838>  // b.any
   14054:	add	x5, x5, x0
   14058:	neg	x0, x1
   1405c:	and	x0, x5, x0
   14060:	cmp	x0, x23
   14064:	csel	x21, x0, x23, ls  // ls = plast
   14068:	mov	x2, x23
   1406c:	mov	x3, x24
   14070:	mov	x1, x22
   14074:	mov	x0, x20
   14078:	bl	138b8 <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   1407c:	mov	x23, x0
   14080:	cbz	x0, 14090 <_ZdaPvRKSt9nothrow_t@@Base+0x23d0>
   14084:	mov	x2, x21
   14088:	mov	x1, x19
   1408c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   14090:	mov	x0, #0xffffffffffff        	// #281474976710655
   14094:	cmp	x19, x0
   14098:	b.ls	14374 <_ZdaPvRKSt9nothrow_t@@Base+0x26b4>  // b.plast
   1409c:	add	x21, x20, #0x80, lsl #12
   140a0:	add	x21, x21, #0xc00
   140a4:	ldr	x4, [x21, #448]
   140a8:	sub	x0, x4, #0x1
   140ac:	tst	x19, x0
   140b0:	b.ne	14400 <_ZdaPvRKSt9nothrow_t@@Base+0x2740>  // b.any
   140b4:	sub	x19, x19, x4
   140b8:	add	x25, x20, #0xc1, lsl #12
   140bc:	mov	w1, #0x1                   	// #1
   140c0:	ldxrb	w0, [x25]
   140c4:	stxrb	w2, w1, [x25]
   140c8:	cbnz	w2, 140c0 <_ZdaPvRKSt9nothrow_t@@Base+0x2400>
   140cc:	dmb	ish
   140d0:	tst	w0, #0xff
   140d4:	b.eq	140e0 <_ZdaPvRKSt9nothrow_t@@Base+0x2420>  // b.none
   140d8:	mov	x0, x25
   140dc:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   140e0:	ldr	x0, [x19, #24]
   140e4:	add	x21, x21, #0x1c0
   140e8:	ldr	x2, [x21, #8]
   140ec:	ldr	x3, [x2, x0, lsl #3]
   140f0:	cmp	x3, x19
   140f4:	b.ne	14508 <_ZdaPvRKSt9nothrow_t@@Base+0x2848>  // b.any
   140f8:	add	x21, x21, #0x40, lsl #12
   140fc:	ldr	x4, [x21, #16]
   14100:	cmp	x0, x4
   14104:	b.cs	14524 <_ZdaPvRKSt9nothrow_t@@Base+0x2864>  // b.hs, b.nlast
   14108:	sub	x4, x4, #0x1
   1410c:	ldr	x3, [x19, #8]
   14110:	ldr	x5, [x2, x4, lsl #3]
   14114:	str	x4, [x21, #16]
   14118:	str	x5, [x2, x0, lsl #3]
   1411c:	ldp	x4, x2, [x21, #40]
   14120:	str	x0, [x5, #24]
   14124:	ldr	x0, [x25, #24]
   14128:	strb	wzr, [x21, #24]
   1412c:	sub	x0, x0, x3
   14130:	sub	x2, x2, x3
   14134:	add	x4, x4, #0x1
   14138:	stp	x4, x2, [x21, #40]
   1413c:	str	x0, [x25, #24]
   14140:	ldr	x0, [x25, #32]
   14144:	sub	x0, x0, x3
   14148:	str	x0, [x25, #32]
   1414c:	dmb	ish
   14150:	strb	wzr, [x25]
   14154:	ldp	x0, x1, [x19]
   14158:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1415c:	ldr	x25, [sp, #48]
   14160:	mov	x0, x23
   14164:	ldp	x21, x22, [sp, #16]
   14168:	ldp	x23, x24, [sp, #32]
   1416c:	ldr	x30, [sp, #56]
   14170:	ldp	x19, x20, [sp], #64
   14174:	ret
   14178:	lsr	x0, x2, #32
   1417c:	ldr	x1, [x20, x0, lsl #3]
   14180:	dmb	ish
   14184:	cbz	x1, 13f64 <_ZdaPvRKSt9nothrow_t@@Base+0x22a4>
   14188:	lsr	w2, w2, #20
   1418c:	lsr	x3, x19, #20
   14190:	ldrb	w1, [x1, x2]
   14194:	cbz	w1, 13f64 <_ZdaPvRKSt9nothrow_t@@Base+0x22a4>
   14198:	lsl	x1, x0, #3
   1419c:	ldr	x0, [x20, x0, lsl #3]
   141a0:	dmb	ish
   141a4:	cbz	x0, 141b4 <_ZdaPvRKSt9nothrow_t@@Base+0x24f4>
   141a8:	and	x3, x3, #0xfff
   141ac:	ldrb	w0, [x0, x3]
   141b0:	cbnz	w0, 14440 <_ZdaPvRKSt9nothrow_t@@Base+0x2780>
   141b4:	add	x21, x20, #0x80, lsl #12
   141b8:	add	x21, x21, #0xc00
   141bc:	b	14034 <_ZdaPvRKSt9nothrow_t@@Base+0x2374>
   141c0:	dmb	ish
   141c4:	strb	wzr, [x25]
   141c8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   141cc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   141d0:	add	x2, x2, #0x448
   141d4:	add	x0, x0, #0x398
   141d8:	mov	x4, #0x0                   	// #0
   141dc:	mov	x3, #0x0                   	// #0
   141e0:	mov	w1, #0x69                  	// #105
   141e4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   141e8:	mov	x2, x23
   141ec:	mov	x3, x4
   141f0:	ldp	x23, x24, [sp, #32]
   141f4:	ldr	x30, [sp, #56]
   141f8:	ldp	x19, x20, [sp], #64
   141fc:	b	138b8 <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   14200:	mov	x0, #0xffffffffffff        	// #281474976710655
   14204:	cmp	x2, x0
   14208:	b.hi	14298 <_ZdaPvRKSt9nothrow_t@@Base+0x25d8>  // b.pmore
   1420c:	lsr	x1, x2, #32
   14210:	ldr	x0, [x20, x1, lsl #3]
   14214:	dmb	ish
   14218:	cbz	x0, 14298 <_ZdaPvRKSt9nothrow_t@@Base+0x25d8>
   1421c:	lsr	w2, w2, #20
   14220:	ldrb	w0, [x0, x2]
   14224:	cbz	w0, 14298 <_ZdaPvRKSt9nothrow_t@@Base+0x25d8>
   14228:	ldr	x0, [x20, x1, lsl #3]
   1422c:	dmb	ish
   14230:	cbz	x0, 14550 <_ZdaPvRKSt9nothrow_t@@Base+0x2890>
   14234:	ldrb	w21, [x0, x2]
   14238:	cbz	x21, 14550 <_ZdaPvRKSt9nothrow_t@@Base+0x2890>
   1423c:	cmp	x21, #0x35
   14240:	b.hi	14594 <_ZdaPvRKSt9nothrow_t@@Base+0x28d4>  // b.pmore
   14244:	lsl	x23, x21, #10
   14248:	add	x1, x22, x23
   1424c:	ldr	x2, [x1, #8]
   14250:	cbz	x2, 146c8 <_ZdaPvRKSt9nothrow_t@@Base+0x2a08>
   14254:	ldr	x0, [x22, x23]
   14258:	cmp	x0, x2
   1425c:	b.eq	146b0 <_ZdaPvRKSt9nothrow_t@@Base+0x29f0>  // b.none
   14260:	add	x1, x0, x21, lsl #7
   14264:	add	x3, x22, x23
   14268:	add	x1, x1, #0x4
   1426c:	add	x0, x0, #0x1
   14270:	mov	x5, #0xd800                	// #55296
   14274:	add	x2, x22, x5
   14278:	str	x0, [x22, x23]
   1427c:	mov	x23, #0x0                   	// #0
   14280:	str	x19, [x22, x1, lsl #3]
   14284:	ldr	x0, [x2, #16]
   14288:	ldr	x1, [x3, #16]
   1428c:	sub	x0, x0, x1
   14290:	str	x0, [x2, #16]
   14294:	b	14160 <_ZdaPvRKSt9nothrow_t@@Base+0x24a0>
   14298:	add	x21, x20, #0x80, lsl #12
   1429c:	add	x21, x21, #0xc00
   142a0:	ldr	x4, [x21, #448]
   142a4:	str	x25, [sp, #48]
   142a8:	sub	x0, x4, #0x1
   142ac:	tst	x19, x0
   142b0:	b.ne	14400 <_ZdaPvRKSt9nothrow_t@@Base+0x2740>  // b.any
   142b4:	sub	x19, x19, x4
   142b8:	add	x25, x20, #0xc1, lsl #12
   142bc:	mov	w1, #0x1                   	// #1
   142c0:	ldxrb	w0, [x25]
   142c4:	stxrb	w2, w1, [x25]
   142c8:	cbnz	w2, 142c0 <_ZdaPvRKSt9nothrow_t@@Base+0x2600>
   142cc:	dmb	ish
   142d0:	tst	w0, #0xff
   142d4:	b.eq	142e0 <_ZdaPvRKSt9nothrow_t@@Base+0x2620>  // b.none
   142d8:	mov	x0, x25
   142dc:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   142e0:	ldr	x0, [x19, #24]
   142e4:	add	x21, x21, #0x1c0
   142e8:	ldr	x2, [x21, #8]
   142ec:	ldr	x3, [x2, x0, lsl #3]
   142f0:	cmp	x3, x19
   142f4:	b.ne	14508 <_ZdaPvRKSt9nothrow_t@@Base+0x2848>  // b.any
   142f8:	add	x21, x21, #0x40, lsl #12
   142fc:	ldr	x4, [x21, #16]
   14300:	cmp	x0, x4
   14304:	b.cs	14524 <_ZdaPvRKSt9nothrow_t@@Base+0x2864>  // b.hs, b.nlast
   14308:	sub	x4, x4, #0x1
   1430c:	ldr	x3, [x19, #8]
   14310:	ldr	x5, [x2, x4, lsl #3]
   14314:	str	x4, [x21, #16]
   14318:	str	x5, [x2, x0, lsl #3]
   1431c:	ldp	x4, x2, [x21, #40]
   14320:	str	x0, [x5, #24]
   14324:	ldr	x0, [x25, #24]
   14328:	strb	wzr, [x21, #24]
   1432c:	sub	x0, x0, x3
   14330:	sub	x2, x2, x3
   14334:	add	x4, x4, #0x1
   14338:	stp	x4, x2, [x21, #40]
   1433c:	str	x0, [x25, #24]
   14340:	ldr	x0, [x25, #32]
   14344:	sub	x0, x0, x3
   14348:	str	x0, [x25, #32]
   1434c:	dmb	ish
   14350:	strb	wzr, [x25]
   14354:	ldp	x0, x1, [x19]
   14358:	mov	x23, #0x0                   	// #0
   1435c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   14360:	ldr	x25, [sp, #48]
   14364:	b	14160 <_ZdaPvRKSt9nothrow_t@@Base+0x24a0>
   14368:	lsr	x3, x19, #20
   1436c:	lsr	x0, x19, #32
   14370:	b	14198 <_ZdaPvRKSt9nothrow_t@@Base+0x24d8>
   14374:	lsr	x1, x19, #32
   14378:	ldr	x0, [x20, x1, lsl #3]
   1437c:	dmb	ish
   14380:	cbz	x0, 1409c <_ZdaPvRKSt9nothrow_t@@Base+0x23dc>
   14384:	lsr	w2, w19, #20
   14388:	ldrb	w0, [x0, x2]
   1438c:	cbz	w0, 1409c <_ZdaPvRKSt9nothrow_t@@Base+0x23dc>
   14390:	ldr	x0, [x20, x1, lsl #3]
   14394:	dmb	ish
   14398:	cbz	x0, 14554 <_ZdaPvRKSt9nothrow_t@@Base+0x2894>
   1439c:	ldrb	w21, [x0, x2]
   143a0:	cbz	x21, 14554 <_ZdaPvRKSt9nothrow_t@@Base+0x2894>
   143a4:	cmp	x21, #0x35
   143a8:	b.hi	14598 <_ZdaPvRKSt9nothrow_t@@Base+0x28d8>  // b.pmore
   143ac:	lsl	x24, x21, #10
   143b0:	add	x1, x22, x24
   143b4:	ldr	x2, [x1, #8]
   143b8:	cbz	x2, 145d0 <_ZdaPvRKSt9nothrow_t@@Base+0x2910>
   143bc:	ldr	x0, [x22, x24]
   143c0:	cmp	x0, x2
   143c4:	b.eq	145b8 <_ZdaPvRKSt9nothrow_t@@Base+0x28f8>  // b.none
   143c8:	add	x1, x0, x21, lsl #7
   143cc:	add	x3, x22, x24
   143d0:	add	x1, x1, #0x4
   143d4:	add	x0, x0, #0x1
   143d8:	mov	x4, #0xd800                	// #55296
   143dc:	add	x2, x22, x4
   143e0:	str	x0, [x22, x24]
   143e4:	str	x19, [x22, x1, lsl #3]
   143e8:	ldr	x0, [x2, #16]
   143ec:	ldr	x1, [x3, #16]
   143f0:	ldr	x25, [sp, #48]
   143f4:	sub	x0, x0, x1
   143f8:	str	x0, [x2, #16]
   143fc:	b	14160 <_ZdaPvRKSt9nothrow_t@@Base+0x24a0>
   14400:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   14404:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   14408:	add	x2, x2, #0xcd0
   1440c:	add	x0, x0, #0x338
   14410:	mov	x4, #0x0                   	// #0
   14414:	mov	x3, #0x0                   	// #0
   14418:	mov	w1, #0x12d                 	// #301
   1441c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   14420:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   14424:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   14428:	add	x2, x2, #0xed8
   1442c:	add	x0, x0, #0x338
   14430:	mov	x4, #0x0                   	// #0
   14434:	mov	x3, #0x0                   	// #0
   14438:	mov	w1, #0x135                 	// #309
   1443c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   14440:	ldr	x0, [x20, x1]
   14444:	dmb	ish
   14448:	cbz	x0, 14574 <_ZdaPvRKSt9nothrow_t@@Base+0x28b4>
   1444c:	ldrb	w0, [x0, x3]
   14450:	cbz	w0, 14574 <_ZdaPvRKSt9nothrow_t@@Base+0x28b4>
   14454:	ldr	x21, [x20, x1]
   14458:	dmb	ish
   1445c:	cbz	x21, 14068 <_ZdaPvRKSt9nothrow_t@@Base+0x23a8>
   14460:	ldrb	w0, [x21, x3]
   14464:	cmp	w0, #0x35
   14468:	and	x1, x0, #0xff
   1446c:	b.eq	14540 <_ZdaPvRKSt9nothrow_t@@Base+0x2880>  // b.none
   14470:	ubfiz	x0, x0, #4, #8
   14474:	cmp	x0, x23
   14478:	csel	x21, x0, x23, ls  // ls = plast
   1447c:	cmp	x1, #0x10
   14480:	b.ls	14068 <_ZdaPvRKSt9nothrow_t@@Base+0x23a8>  // b.plast
   14484:	sub	x1, x1, #0x10
   14488:	mov	x0, #0x100                 	// #256
   1448c:	and	x21, x1, #0x3
   14490:	lsr	x1, x1, #2
   14494:	lsl	x1, x0, x1
   14498:	lsr	x0, x1, #2
   1449c:	madd	x0, x0, x21, x1
   144a0:	cmp	x0, x23
   144a4:	csel	x21, x0, x23, ls  // ls = plast
   144a8:	b	14068 <_ZdaPvRKSt9nothrow_t@@Base+0x23a8>
   144ac:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   144b0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   144b4:	add	x2, x2, #0xe58
   144b8:	add	x0, x0, #0x338
   144bc:	mov	w1, #0xc7                  	// #199
   144c0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   144c4:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   144c8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   144cc:	add	x2, x2, #0xe80
   144d0:	add	x0, x0, #0x338
   144d4:	mov	w1, #0xc8                  	// #200
   144d8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   144dc:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   144e0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   144e4:	mov	x4, x19
   144e8:	add	x2, x2, #0xeb8
   144ec:	add	x0, x0, #0x338
   144f0:	mov	w1, #0xc9                  	// #201
   144f4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   144f8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   144fc:	add	x0, x0, #0xb38
   14500:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   14504:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   14508:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   1450c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   14510:	mov	x4, x19
   14514:	add	x2, x2, #0x90
   14518:	add	x0, x0, #0x338
   1451c:	mov	w1, #0x8b                  	// #139
   14520:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   14524:	mov	x3, x0
   14528:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   1452c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   14530:	add	x2, x2, #0xb0
   14534:	add	x0, x0, #0x338
   14538:	mov	w1, #0x8c                  	// #140
   1453c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   14540:	cmp	x23, #0x200
   14544:	mov	x0, #0x200                 	// #512
   14548:	csel	x21, x23, x0, ls  // ls = plast
   1454c:	b	14068 <_ZdaPvRKSt9nothrow_t@@Base+0x23a8>
   14550:	str	x25, [sp, #48]
   14554:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   14558:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1455c:	add	x2, x2, #0x2c8
   14560:	add	x0, x0, #0x270
   14564:	mov	x4, #0x0                   	// #0
   14568:	mov	x3, #0x0                   	// #0
   1456c:	mov	w1, #0xa8                  	// #168
   14570:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   14574:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   14578:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1457c:	add	x2, x2, #0x448
   14580:	add	x0, x0, #0x128
   14584:	mov	x4, #0x0                   	// #0
   14588:	mov	x3, #0x0                   	// #0
   1458c:	mov	w1, #0xd7                  	// #215
   14590:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   14594:	str	x25, [sp, #48]
   14598:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   1459c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   145a0:	mov	x3, x21
   145a4:	add	x2, x2, #0x350
   145a8:	add	x0, x0, #0x270
   145ac:	mov	x4, #0x36                  	// #54
   145b0:	mov	w1, #0xa9                  	// #169
   145b4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   145b8:	mov	x0, x22
   145bc:	mov	x2, x20
   145c0:	mov	x3, x21
   145c4:	bl	13d50 <_ZdaPvRKSt9nothrow_t@@Base+0x2090>
   145c8:	ldr	x0, [x22, x24]
   145cc:	b	143c8 <_ZdaPvRKSt9nothrow_t@@Base+0x2708>
   145d0:	mov	x2, #0x1                   	// #1
   145d4:	mov	x11, x2
   145d8:	mov	x12, #0x7c                  	// #124
   145dc:	mov	x10, #0x14                  	// #20
   145e0:	mov	x9, #0x100                 	// #256
   145e4:	mov	w8, #0x4000                	// #16384
   145e8:	mov	x7, #0x3e                  	// #62
   145ec:	nop
   145f0:	add	x5, x22, x2, lsl #10
   145f4:	lsl	x6, x2, #4
   145f8:	mov	x4, x5
   145fc:	mov	x0, #0x14                  	// #20
   14600:	mov	x3, x2
   14604:	add	x2, x2, #0x1
   14608:	stp	x12, x6, [x5, #8]
   1460c:	cmp	x2, #0x36
   14610:	str	x0, [x4, #24]
   14614:	b.eq	14684 <_ZdaPvRKSt9nothrow_t@@Base+0x29c4>  // b.none
   14618:	cmp	x2, #0x35
   1461c:	b.eq	1468c <_ZdaPvRKSt9nothrow_t@@Base+0x29cc>  // b.none
   14620:	cmp	x2, #0x10
   14624:	b.ls	145f0 <_ZdaPvRKSt9nothrow_t@@Base+0x2930>  // b.plast
   14628:	sub	x0, x3, #0xf
   1462c:	add	x4, x4, #0x400
   14630:	and	x6, x0, #0x3
   14634:	mov	x3, x2
   14638:	lsr	x0, x0, #2
   1463c:	add	x2, x2, #0x1
   14640:	lsl	x0, x9, x0
   14644:	lsr	x5, x0, #2
   14648:	madd	x5, x5, x6, x0
   1464c:	str	x5, [x4, #16]
   14650:	udiv	w0, w8, w5
   14654:	cmp	x0, #0x0
   14658:	csel	x0, x0, x11, ne  // ne = any
   1465c:	cmp	x0, #0x3e
   14660:	csel	x0, x0, x7, ls  // ls = plast
   14664:	add	x6, x0, #0x2
   14668:	lsl	x0, x0, #1
   1466c:	str	x0, [x4, #8]
   14670:	cmp	x5, x6, lsl #3
   14674:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   14678:	str	x0, [x4, #24]
   1467c:	cmp	x2, #0x36
   14680:	b.ne	14618 <_ZdaPvRKSt9nothrow_t@@Base+0x2958>  // b.any
   14684:	ldr	x2, [x1, #8]
   14688:	b	143bc <_ZdaPvRKSt9nothrow_t@@Base+0x26fc>
   1468c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   14690:	ldr	q0, [x0, #1136]
   14694:	mov	x0, #0xd400                	// #54272
   14698:	add	x2, x22, x0
   1469c:	add	x0, x22, #0x8, lsl #12
   146a0:	stur	q0, [x2, #8]
   146a4:	str	xzr, [x0, #21528]
   146a8:	ldr	x2, [x1, #8]
   146ac:	b	143bc <_ZdaPvRKSt9nothrow_t@@Base+0x26fc>
   146b0:	mov	x0, x22
   146b4:	mov	x2, x20
   146b8:	mov	x3, x21
   146bc:	bl	13d50 <_ZdaPvRKSt9nothrow_t@@Base+0x2090>
   146c0:	ldr	x0, [x22, x23]
   146c4:	b	14260 <_ZdaPvRKSt9nothrow_t@@Base+0x25a0>
   146c8:	mov	x2, #0x1                   	// #1
   146cc:	mov	x11, x2
   146d0:	mov	x12, #0x7c                  	// #124
   146d4:	mov	x10, #0x14                  	// #20
   146d8:	mov	x9, #0x100                 	// #256
   146dc:	mov	w8, #0x4000                	// #16384
   146e0:	mov	x7, #0x3e                  	// #62
   146e4:	nop
   146e8:	add	x5, x22, x2, lsl #10
   146ec:	lsl	x6, x2, #4
   146f0:	mov	x4, x5
   146f4:	mov	x0, #0x14                  	// #20
   146f8:	mov	x3, x2
   146fc:	add	x2, x2, #0x1
   14700:	stp	x12, x6, [x5, #8]
   14704:	cmp	x2, #0x36
   14708:	str	x0, [x4, #24]
   1470c:	b.eq	1477c <_ZdaPvRKSt9nothrow_t@@Base+0x2abc>  // b.none
   14710:	cmp	x2, #0x35
   14714:	b.eq	14784 <_ZdaPvRKSt9nothrow_t@@Base+0x2ac4>  // b.none
   14718:	cmp	x2, #0x10
   1471c:	b.ls	146e8 <_ZdaPvRKSt9nothrow_t@@Base+0x2a28>  // b.plast
   14720:	sub	x0, x3, #0xf
   14724:	add	x4, x4, #0x400
   14728:	and	x6, x0, #0x3
   1472c:	mov	x3, x2
   14730:	lsr	x0, x0, #2
   14734:	add	x2, x2, #0x1
   14738:	lsl	x0, x9, x0
   1473c:	lsr	x5, x0, #2
   14740:	madd	x5, x5, x6, x0
   14744:	str	x5, [x4, #16]
   14748:	udiv	w0, w8, w5
   1474c:	cmp	x0, #0x0
   14750:	csel	x0, x0, x11, ne  // ne = any
   14754:	cmp	x0, #0x3e
   14758:	csel	x0, x0, x7, ls  // ls = plast
   1475c:	add	x6, x0, #0x2
   14760:	lsl	x0, x0, #1
   14764:	str	x0, [x4, #8]
   14768:	cmp	x5, x6, lsl #3
   1476c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   14770:	str	x0, [x4, #24]
   14774:	cmp	x2, #0x36
   14778:	b.ne	14710 <_ZdaPvRKSt9nothrow_t@@Base+0x2a50>  // b.any
   1477c:	ldr	x2, [x1, #8]
   14780:	b	14254 <_ZdaPvRKSt9nothrow_t@@Base+0x2594>
   14784:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   14788:	mov	x2, #0xd400                	// #54272
   1478c:	add	x2, x22, x2
   14790:	ldr	q0, [x0, #1136]
   14794:	add	x0, x22, #0x8, lsl #12
   14798:	stur	q0, [x2, #8]
   1479c:	str	xzr, [x0, #21528]
   147a0:	ldr	x2, [x1, #8]
   147a4:	b	14254 <_ZdaPvRKSt9nothrow_t@@Base+0x2594>
   147a8:	str	x30, [sp, #-16]!
   147ac:	tst	w4, #0xff
   147b0:	b.ne	147c4 <_ZdaPvRKSt9nothrow_t@@Base+0x2b04>  // b.any
   147b4:	adrp	x8, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   147b8:	mov	x7, x0
   147bc:	ldr	w0, [x8, #1152]
   147c0:	cbz	w0, 147d4 <_ZdaPvRKSt9nothrow_t@@Base+0x2b14>
   147c4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   147c8:	add	x0, x0, #0x480
   147cc:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   147d0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   147d4:	adrp	x4, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
   147d8:	mov	x5, x1
   147dc:	mov	w6, w3
   147e0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   147e4:	ldr	x1, [x4, #640]
   147e8:	mov	x3, x7
   147ec:	mov	x4, x7
   147f0:	add	x0, x0, #0x498
   147f4:	mov	w7, #0x1                   	// #1
   147f8:	str	w7, [x8, #1152]
   147fc:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   14800:	bl	1e5b0 <__sanitizer_set_report_fd@@Base+0x67f0>
   14804:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   14808:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1480c:	add	x2, x2, #0x4e0
   14810:	add	x0, x0, #0x508
   14814:	mov	x4, #0x0                   	// #0
   14818:	mov	x3, #0x0                   	// #0
   1481c:	mov	w1, #0x36                  	// #54
   14820:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   14824:	nop
   14828:	stp	x19, x20, [sp, #-32]!
   1482c:	str	x30, [sp, #24]
   14830:	cbz	x0, 148a0 <_ZdaPvRKSt9nothrow_t@@Base+0x2be0>
   14834:	mov	x19, x0
   14838:	mov	x20, x1
   1483c:	cbz	x1, 1486c <_ZdaPvRKSt9nothrow_t@@Base+0x2bac>
   14840:	str	x21, [sp, #16]
   14844:	bl	1b4c0 <__sanitizer_set_report_fd@@Base+0x3700>
   14848:	mov	x21, x0
   1484c:	cbz	x0, 1485c <_ZdaPvRKSt9nothrow_t@@Base+0x2b9c>
   14850:	mov	x0, x20
   14854:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   14858:	add	x19, x21, x0
   1485c:	ldrb	w0, [x19]
   14860:	cmp	w0, #0x2e
   14864:	b.eq	1487c <_ZdaPvRKSt9nothrow_t@@Base+0x2bbc>  // b.none
   14868:	ldr	x21, [sp, #16]
   1486c:	mov	x0, x19
   14870:	ldr	x30, [sp, #24]
   14874:	ldp	x19, x20, [sp], #32
   14878:	ret
   1487c:	ldrb	w1, [x19, #1]
   14880:	add	x0, x19, #0x2
   14884:	ldr	x21, [sp, #16]
   14888:	cmp	w1, #0x2f
   1488c:	csel	x19, x0, x19, eq  // eq = none
   14890:	mov	x0, x19
   14894:	ldr	x30, [sp, #24]
   14898:	ldp	x19, x20, [sp], #32
   1489c:	ret
   148a0:	mov	x19, #0x0                   	// #0
   148a4:	b	1486c <_ZdaPvRKSt9nothrow_t@@Base+0x2bac>
   148a8:	stp	x19, x30, [sp, #-16]!
   148ac:	mov	x19, x0
   148b0:	cbz	x0, 148c4 <_ZdaPvRKSt9nothrow_t@@Base+0x2c04>
   148b4:	mov	w1, #0x2f                  	// #47
   148b8:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x27e8>
   148bc:	cmp	x0, #0x0
   148c0:	csinc	x19, x19, x0, eq  // eq = none
   148c4:	mov	x0, x19
   148c8:	ldp	x19, x30, [sp], #16
   148cc:	ret
   148d0:	cbz	x0, 1495c <_ZdaPvRKSt9nothrow_t@@Base+0x2c9c>
   148d4:	stp	x19, x30, [sp, #-16]!
   148d8:	mov	x19, x0
   148dc:	ldrb	w1, [x0]
   148e0:	cbz	w1, 14950 <_ZdaPvRKSt9nothrow_t@@Base+0x2c90>
   148e4:	nop
   148e8:	cmp	w1, #0x1b
   148ec:	b.eq	14934 <_ZdaPvRKSt9nothrow_t@@Base+0x2c74>  // b.none
   148f0:	cmp	x0, x19
   148f4:	b.eq	148fc <_ZdaPvRKSt9nothrow_t@@Base+0x2c3c>  // b.none
   148f8:	strb	w1, [x19]
   148fc:	add	x19, x19, #0x1
   14900:	ldrb	w1, [x0, #1]
   14904:	add	x0, x0, #0x1
   14908:	cbz	w1, 14950 <_ZdaPvRKSt9nothrow_t@@Base+0x2c90>
   1490c:	cmp	x0, x19
   14910:	b.cs	148e8 <_ZdaPvRKSt9nothrow_t@@Base+0x2c28>  // b.hs, b.nlast
   14914:	mov	x3, x0
   14918:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1491c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   14920:	mov	x4, x19
   14924:	add	x2, x2, #0x560
   14928:	add	x0, x0, #0x508
   1492c:	mov	w1, #0x69                  	// #105
   14930:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   14934:	ldrb	w2, [x0, #1]
   14938:	cmp	w2, #0x5b
   1493c:	b.ne	148f0 <_ZdaPvRKSt9nothrow_t@@Base+0x2c30>  // b.any
   14940:	mov	w1, #0x6d                  	// #109
   14944:	bl	1a558 <__sanitizer_set_report_fd@@Base+0x2798>
   14948:	ldrb	w1, [x0]
   1494c:	cbnz	w1, 14900 <_ZdaPvRKSt9nothrow_t@@Base+0x2c40>
   14950:	strb	wzr, [x19]
   14954:	ldp	x19, x30, [sp], #16
   14958:	ret
   1495c:	ret
   14960:	stp	x19, x20, [sp, #-32]!
   14964:	mov	x19, x0
   14968:	mov	x1, #0x0                   	// #0
   1496c:	ldr	x0, [x0]
   14970:	str	x30, [sp, #16]
   14974:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   14978:	str	xzr, [x19]
   1497c:	stp	xzr, xzr, [x19, #8]
   14980:	mov	x2, #0x10                  	// #16
   14984:	add	x0, x19, #0x1c
   14988:	str	wzr, [x19, #24]
   1498c:	mov	w1, #0x0                   	// #0
   14990:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   14994:	strb	wzr, [x19, #44]
   14998:	ldr	x2, [x19, #48]
   1499c:	cbz	x2, 149d0 <_ZdaPvRKSt9nothrow_t@@Base+0x2d10>
   149a0:	add	x20, x19, #0x30
   149a4:	nop
   149a8:	ldr	x0, [x19, #56]
   149ac:	sub	x4, x2, #0x1
   149b0:	mov	x1, #0x0                   	// #0
   149b4:	ldr	x3, [x0]
   149b8:	str	x3, [x20, #8]
   149bc:	cbz	x3, 149dc <_ZdaPvRKSt9nothrow_t@@Base+0x2d1c>
   149c0:	str	x4, [x20]
   149c4:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   149c8:	ldr	x2, [x19, #48]
   149cc:	cbnz	x2, 149a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2ce8>
   149d0:	ldr	x30, [sp, #16]
   149d4:	ldp	x19, x20, [sp], #32
   149d8:	ret
   149dc:	str	x4, [x20]
   149e0:	str	xzr, [x20, #16]
   149e4:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   149e8:	ldr	x2, [x19, #48]
   149ec:	cbnz	x2, 149a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2ce8>
   149f0:	ldr	x30, [sp, #16]
   149f4:	ldp	x19, x20, [sp], #32
   149f8:	ret
   149fc:	nop
   14a00:	stp	x19, x20, [sp, #-32]!
   14a04:	mov	x19, x0
   14a08:	mov	x20, x2
   14a0c:	stp	x21, x30, [sp, #16]
   14a10:	mov	x21, x1
   14a14:	bl	14960 <_ZdaPvRKSt9nothrow_t@@Base+0x2ca0>
   14a18:	mov	x0, x21
   14a1c:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   14a20:	ldp	x21, x30, [sp, #16]
   14a24:	stp	x0, x20, [x19]
   14a28:	ldp	x19, x20, [sp], #32
   14a2c:	ret
   14a30:	stp	x19, x20, [sp, #-64]!
   14a34:	mov	x19, x0
   14a38:	mov	w20, w3
   14a3c:	stp	x21, x22, [sp, #16]
   14a40:	mov	x21, x4
   14a44:	mov	x22, x2
   14a48:	stp	x23, x24, [sp, #32]
   14a4c:	and	w24, w5, #0xff
   14a50:	mov	x23, x1
   14a54:	str	x30, [sp, #48]
   14a58:	bl	14960 <_ZdaPvRKSt9nothrow_t@@Base+0x2ca0>
   14a5c:	mov	x0, x23
   14a60:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   14a64:	stp	x0, x22, [x19]
   14a68:	mov	x1, x21
   14a6c:	add	x0, x19, #0x1c
   14a70:	str	w20, [x19, #24]
   14a74:	mov	x2, #0x10                  	// #16
   14a78:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   14a7c:	strb	w24, [x19, #44]
   14a80:	ldp	x21, x22, [sp, #16]
   14a84:	ldp	x23, x24, [sp, #32]
   14a88:	ldr	x30, [sp, #48]
   14a8c:	ldp	x19, x20, [sp], #64
   14a90:	ret
   14a94:	nop
   14a98:	stp	x19, x20, [sp, #-64]!
   14a9c:	mov	x20, x0
   14aa0:	mov	x0, #0x30                  	// #48
   14aa4:	stp	x21, x22, [sp, #16]
   14aa8:	mov	x21, x5
   14aac:	mov	x22, x2
   14ab0:	mov	x2, #0x0                   	// #0
   14ab4:	stp	x23, x24, [sp, #32]
   14ab8:	and	w24, w3, #0xff
   14abc:	mov	x23, x1
   14ac0:	mov	x1, #0x0                   	// #0
   14ac4:	stp	x25, x30, [sp, #48]
   14ac8:	and	w25, w4, #0xff
   14acc:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   14ad0:	mov	x19, x0
   14ad4:	cmp	x21, #0x0
   14ad8:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   14adc:	add	x1, x1, #0x328
   14ae0:	add	x0, x0, #0x1a
   14ae4:	csel	x1, x1, x21, eq  // eq = none
   14ae8:	stp	xzr, x23, [x19]
   14aec:	mov	x2, #0x10                  	// #16
   14af0:	str	x22, [x19, #16]
   14af4:	strb	w24, [x19, #24]
   14af8:	strb	w25, [x19, #25]
   14afc:	bl	1b408 <__sanitizer_set_report_fd@@Base+0x3648>
   14b00:	ldr	x0, [x20, #48]
   14b04:	cbnz	x0, 14b44 <_ZdaPvRKSt9nothrow_t@@Base+0x2e84>
   14b08:	dup	v0.2d, x19
   14b0c:	str	xzr, [x19]
   14b10:	mov	x0, #0x1                   	// #1
   14b14:	str	x0, [x20, #48]
   14b18:	stur	q0, [x20, #56]
   14b1c:	cbz	w24, 14b30 <_ZdaPvRKSt9nothrow_t@@Base+0x2e70>
   14b20:	ldr	x0, [x20, #16]
   14b24:	cmp	x0, x22
   14b28:	b.cs	14b30 <_ZdaPvRKSt9nothrow_t@@Base+0x2e70>  // b.hs, b.nlast
   14b2c:	str	x22, [x20, #16]
   14b30:	ldp	x21, x22, [sp, #16]
   14b34:	ldp	x23, x24, [sp, #32]
   14b38:	ldp	x25, x30, [sp, #48]
   14b3c:	ldp	x19, x20, [sp], #64
   14b40:	ret
   14b44:	str	xzr, [x19]
   14b48:	add	x0, x0, #0x1
   14b4c:	ldr	x2, [x20, #64]
   14b50:	str	x19, [x2]
   14b54:	str	x0, [x20, #48]
   14b58:	str	x19, [x20, #64]
   14b5c:	b	14b1c <_ZdaPvRKSt9nothrow_t@@Base+0x2e5c>
   14b60:	ldr	x0, [x0, #56]
   14b64:	cbz	x0, 14b94 <_ZdaPvRKSt9nothrow_t@@Base+0x2ed4>
   14b68:	ldr	x2, [x0, #8]
   14b6c:	cmp	x2, x1
   14b70:	b.hi	14b80 <_ZdaPvRKSt9nothrow_t@@Base+0x2ec0>  // b.pmore
   14b74:	ldr	x2, [x0, #16]
   14b78:	cmp	x2, x1
   14b7c:	b.hi	14b8c <_ZdaPvRKSt9nothrow_t@@Base+0x2ecc>  // b.pmore
   14b80:	ldr	x0, [x0]
   14b84:	cbnz	x0, 14b68 <_ZdaPvRKSt9nothrow_t@@Base+0x2ea8>
   14b88:	ret
   14b8c:	mov	w0, #0x1                   	// #1
   14b90:	ret
   14b94:	mov	w0, #0x0                   	// #0
   14b98:	ret
   14b9c:	nop
   14ba0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   14ba4:	ldr	x1, [x1, #4056]
   14ba8:	ldr	x2, [x1, #128]
   14bac:	cbnz	x2, 14bb4 <_ZdaPvRKSt9nothrow_t@@Base+0x2ef4>
   14bb0:	ret
   14bb4:	adrp	x2, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   14bb8:	add	x2, x2, #0x480
   14bbc:	add	x2, x2, #0x8
   14bc0:	ldxr	x3, [x2]
   14bc4:	add	x4, x3, x0
   14bc8:	stlxr	w5, x4, [x2]
   14bcc:	cbnz	w5, 14bc0 <_ZdaPvRKSt9nothrow_t@@Base+0x2f00>
   14bd0:	dmb	ish
   14bd4:	ldr	x1, [x1, #128]
   14bd8:	add	x0, x3, x0
   14bdc:	cmp	x1, x0, lsr #20
   14be0:	b.hi	14bb0 <_ZdaPvRKSt9nothrow_t@@Base+0x2ef0>  // b.pmore
   14be4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   14be8:	add	x0, x0, #0x570
   14bec:	str	x30, [sp, #-16]!
   14bf0:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   14bf4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   14bf8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   14bfc:	ldr	x1, [x1, #4056]
   14c00:	ldr	x1, [x1, #128]
   14c04:	cbnz	x1, 14c0c <_ZdaPvRKSt9nothrow_t@@Base+0x2f4c>
   14c08:	ret
   14c0c:	adrp	x1, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   14c10:	add	x1, x1, #0x480
   14c14:	neg	x0, x0
   14c18:	add	x1, x1, #0x8
   14c1c:	ldxr	x2, [x1]
   14c20:	add	x2, x2, x0
   14c24:	stlxr	w3, x2, [x1]
   14c28:	cbnz	w3, 14c1c <_ZdaPvRKSt9nothrow_t@@Base+0x2f5c>
   14c2c:	dmb	ish
   14c30:	ret
   14c34:	nop
   14c38:	cbz	x1, 14dcc <_ZdaPvRKSt9nothrow_t@@Base+0x310c>
   14c3c:	stp	x19, x20, [sp, #-80]!
   14c40:	mov	x19, x0
   14c44:	stp	x21, x22, [sp, #16]
   14c48:	mov	x21, x1
   14c4c:	str	x30, [sp, #64]
   14c50:	ldrb	w0, [x1]
   14c54:	cbz	w0, 14d4c <_ZdaPvRKSt9nothrow_t@@Base+0x308c>
   14c58:	cbz	x19, 14d30 <_ZdaPvRKSt9nothrow_t@@Base+0x3070>
   14c5c:	stp	x23, x24, [sp, #32]
   14c60:	mov	w23, #0x0                   	// #0
   14c64:	stp	x25, x26, [sp, #48]
   14c68:	ldrb	w1, [x19]
   14c6c:	cmp	w1, #0x5e
   14c70:	b.ne	14c80 <_ZdaPvRKSt9nothrow_t@@Base+0x2fc0>  // b.any
   14c74:	ldrb	w1, [x19, #1]
   14c78:	add	x19, x19, #0x1
   14c7c:	mov	w23, #0x1                   	// #1
   14c80:	mov	w2, #0x0                   	// #0
   14c84:	mov	w25, #0x2a                  	// #42
   14c88:	mov	w24, #0x24                  	// #36
   14c8c:	cbz	w1, 14d28 <_ZdaPvRKSt9nothrow_t@@Base+0x3068>
   14c90:	cmp	w1, #0x2a
   14c94:	b.eq	14dbc <_ZdaPvRKSt9nothrow_t@@Base+0x30fc>  // b.none
   14c98:	ldrb	w0, [x21]
   14c9c:	cmp	w1, #0x24
   14ca0:	b.eq	14dd4 <_ZdaPvRKSt9nothrow_t@@Base+0x3114>  // b.none
   14ca4:	cbz	w0, 14d44 <_ZdaPvRKSt9nothrow_t@@Base+0x3084>
   14ca8:	mov	w1, #0x2a                  	// #42
   14cac:	mov	x0, x19
   14cb0:	bl	1a528 <__sanitizer_set_report_fd@@Base+0x2768>
   14cb4:	mov	x22, x0
   14cb8:	mov	w1, #0x24                  	// #36
   14cbc:	mov	x0, x19
   14cc0:	bl	1a528 <__sanitizer_set_report_fd@@Base+0x2768>
   14cc4:	mov	x26, x0
   14cc8:	cbz	x22, 14d94 <_ZdaPvRKSt9nothrow_t@@Base+0x30d4>
   14ccc:	cmp	x0, #0x0
   14cd0:	ccmp	x22, x0, #0x0, ne  // ne = any
   14cd4:	b.ls	14d60 <_ZdaPvRKSt9nothrow_t@@Base+0x30a0>  // b.plast
   14cd8:	strb	wzr, [x26]
   14cdc:	mov	x1, x19
   14ce0:	mov	x0, x21
   14ce4:	bl	1b4c0 <__sanitizer_set_report_fd@@Base+0x3700>
   14ce8:	mov	x20, x0
   14cec:	mov	x0, x19
   14cf0:	mov	x19, x26
   14cf4:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   14cf8:	add	x0, x20, x0
   14cfc:	mov	w1, #0x24                  	// #36
   14d00:	strb	w1, [x19]
   14d04:	cbz	x20, 14d44 <_ZdaPvRKSt9nothrow_t@@Base+0x3084>
   14d08:	cmp	x21, x20
   14d0c:	csel	w2, w23, wzr, ne  // ne = any
   14d10:	cbnz	w2, 14d44 <_ZdaPvRKSt9nothrow_t@@Base+0x3084>
   14d14:	cbz	x19, 14d28 <_ZdaPvRKSt9nothrow_t@@Base+0x3068>
   14d18:	ldrb	w1, [x19]
   14d1c:	mov	x21, x0
   14d20:	mov	w23, #0x0                   	// #0
   14d24:	cbnz	w1, 14c90 <_ZdaPvRKSt9nothrow_t@@Base+0x2fd0>
   14d28:	ldp	x23, x24, [sp, #32]
   14d2c:	ldp	x25, x26, [sp, #48]
   14d30:	mov	w0, #0x1                   	// #1
   14d34:	ldp	x21, x22, [sp, #16]
   14d38:	ldr	x30, [sp, #64]
   14d3c:	ldp	x19, x20, [sp], #80
   14d40:	ret
   14d44:	ldp	x23, x24, [sp, #32]
   14d48:	ldp	x25, x26, [sp, #48]
   14d4c:	mov	w0, #0x0                   	// #0
   14d50:	ldp	x21, x22, [sp, #16]
   14d54:	ldr	x30, [sp, #64]
   14d58:	ldp	x19, x20, [sp], #80
   14d5c:	ret
   14d60:	strb	wzr, [x22]
   14d64:	mov	x1, x19
   14d68:	mov	x0, x21
   14d6c:	bl	1b4c0 <__sanitizer_set_report_fd@@Base+0x3700>
   14d70:	mov	x20, x0
   14d74:	mov	x0, x19
   14d78:	mov	x19, x22
   14d7c:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   14d80:	add	x0, x20, x0
   14d84:	cmp	x22, x26
   14d88:	csel	w1, w24, w25, eq  // eq = none
   14d8c:	strb	w1, [x19]
   14d90:	b	14d04 <_ZdaPvRKSt9nothrow_t@@Base+0x3044>
   14d94:	cbnz	x0, 14cd8 <_ZdaPvRKSt9nothrow_t@@Base+0x3018>
   14d98:	mov	x1, x19
   14d9c:	mov	x0, x21
   14da0:	bl	1b4c0 <__sanitizer_set_report_fd@@Base+0x3700>
   14da4:	mov	x20, x0
   14da8:	mov	x0, x19
   14dac:	mov	x19, #0x0                   	// #0
   14db0:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   14db4:	add	x0, x20, x0
   14db8:	b	14d04 <_ZdaPvRKSt9nothrow_t@@Base+0x3044>
   14dbc:	add	x19, x19, #0x1
   14dc0:	mov	x0, x21
   14dc4:	mov	w2, #0x1                   	// #1
   14dc8:	b	14d18 <_ZdaPvRKSt9nothrow_t@@Base+0x3058>
   14dcc:	mov	w0, #0x0                   	// #0
   14dd0:	ret
   14dd4:	cmp	w0, #0x0
   14dd8:	csinc	w0, w2, wzr, ne  // ne = any
   14ddc:	ldp	x23, x24, [sp, #32]
   14de0:	ldp	x25, x26, [sp, #48]
   14de4:	b	14d50 <_ZdaPvRKSt9nothrow_t@@Base+0x3090>
   14de8:	adrp	x0, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   14dec:	add	x0, x0, #0x4f0
   14df0:	ret
   14df4:	nop
   14df8:	stp	x19, x20, [sp, #-32]!
   14dfc:	adrp	x19, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   14e00:	add	x19, x19, #0x4f0
   14e04:	mov	x1, #0x1000                	// #4096
   14e08:	mov	x0, x19
   14e0c:	str	x30, [sp, #24]
   14e10:	bl	1d300 <__sanitizer_set_report_fd@@Base+0x5540>
   14e14:	mov	x0, x19
   14e18:	mov	w1, #0x2f                  	// #47
   14e1c:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x27e8>
   14e20:	cbz	x0, 14e64 <_ZdaPvRKSt9nothrow_t@@Base+0x31a4>
   14e24:	add	x20, x0, #0x1
   14e28:	str	x21, [sp, #16]
   14e2c:	mov	x0, x20
   14e30:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   14e34:	cmp	x20, x19
   14e38:	mov	x21, x0
   14e3c:	b.eq	14e54 <_ZdaPvRKSt9nothrow_t@@Base+0x3194>  // b.none
   14e40:	mov	x2, x0
   14e44:	mov	x1, x20
   14e48:	mov	x0, x19
   14e4c:	bl	19e88 <__sanitizer_set_report_fd@@Base+0x20c8>
   14e50:	strb	wzr, [x21, x19]
   14e54:	ldr	x21, [sp, #16]
   14e58:	ldr	x30, [sp, #24]
   14e5c:	ldp	x19, x20, [sp], #32
   14e60:	ret
   14e64:	mov	x0, x19
   14e68:	ldr	x30, [sp, #24]
   14e6c:	ldp	x19, x20, [sp], #32
   14e70:	b	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   14e74:	nop
   14e78:	adrp	x1, 12f000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd22e0>
   14e7c:	add	x0, x1, #0x4f0
   14e80:	ldrb	w1, [x1, #1264]
   14e84:	cbz	w1, 14e8c <_ZdaPvRKSt9nothrow_t@@Base+0x31cc>
   14e88:	ret
   14e8c:	stp	x19, x20, [sp, #-32]!
   14e90:	mov	x1, #0x1000                	// #4096
   14e94:	adrp	x19, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   14e98:	add	x19, x19, #0x4f0
   14e9c:	str	x30, [sp, #24]
   14ea0:	bl	1d268 <__sanitizer_set_report_fd@@Base+0x54a8>
   14ea4:	mov	x1, #0x1000                	// #4096
   14ea8:	mov	x0, x19
   14eac:	bl	1d300 <__sanitizer_set_report_fd@@Base+0x5540>
   14eb0:	mov	x0, x19
   14eb4:	mov	w1, #0x2f                  	// #47
   14eb8:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x27e8>
   14ebc:	cbz	x0, 14f00 <_ZdaPvRKSt9nothrow_t@@Base+0x3240>
   14ec0:	add	x20, x0, #0x1
   14ec4:	str	x21, [sp, #16]
   14ec8:	mov	x0, x20
   14ecc:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   14ed0:	cmp	x20, x19
   14ed4:	mov	x21, x0
   14ed8:	b.eq	14ef0 <_ZdaPvRKSt9nothrow_t@@Base+0x3230>  // b.none
   14edc:	mov	x2, x0
   14ee0:	mov	x1, x20
   14ee4:	mov	x0, x19
   14ee8:	bl	19e88 <__sanitizer_set_report_fd@@Base+0x20c8>
   14eec:	strb	wzr, [x21, x19]
   14ef0:	ldr	x21, [sp, #16]
   14ef4:	ldr	x30, [sp, #24]
   14ef8:	ldp	x19, x20, [sp], #32
   14efc:	ret
   14f00:	mov	x0, x19
   14f04:	ldr	x30, [sp, #24]
   14f08:	ldp	x19, x20, [sp], #32
   14f0c:	b	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   14f10:	stp	x19, x20, [sp, #-64]!
   14f14:	adrp	x20, 12f000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd22e0>
   14f18:	mov	x19, x1
   14f1c:	ldrb	w2, [x20, #1264]
   14f20:	stp	x21, x22, [sp, #16]
   14f24:	mov	x21, x0
   14f28:	str	x30, [sp, #48]
   14f2c:	cbz	w2, 14f78 <_ZdaPvRKSt9nothrow_t@@Base+0x32b8>
   14f30:	add	x20, x20, #0x4f0
   14f34:	mov	x0, x20
   14f38:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   14f3c:	mov	x2, x0
   14f40:	cbz	x19, 14f64 <_ZdaPvRKSt9nothrow_t@@Base+0x32a4>
   14f44:	sub	x19, x19, #0x1
   14f48:	mov	x1, x20
   14f4c:	cmp	x19, x0
   14f50:	mov	x0, x21
   14f54:	csel	x19, x19, x2, ls  // ls = plast
   14f58:	mov	x2, x19
   14f5c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   14f60:	strb	wzr, [x21, x19]
   14f64:	mov	x0, x19
   14f68:	ldp	x21, x22, [sp, #16]
   14f6c:	ldr	x30, [sp, #48]
   14f70:	ldp	x19, x20, [sp], #64
   14f74:	ret
   14f78:	mov	x1, #0x1000                	// #4096
   14f7c:	add	x0, x20, #0x4f0
   14f80:	adrp	x22, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   14f84:	bl	1d268 <__sanitizer_set_report_fd@@Base+0x54a8>
   14f88:	add	x22, x22, #0x4f0
   14f8c:	mov	x1, #0x1000                	// #4096
   14f90:	mov	x0, x22
   14f94:	bl	1d300 <__sanitizer_set_report_fd@@Base+0x5540>
   14f98:	mov	x0, x22
   14f9c:	mov	w1, #0x2f                  	// #47
   14fa0:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x27e8>
   14fa4:	cbz	x0, 14fe0 <_ZdaPvRKSt9nothrow_t@@Base+0x3320>
   14fa8:	stp	x23, x24, [sp, #32]
   14fac:	add	x23, x0, #0x1
   14fb0:	mov	x0, x23
   14fb4:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   14fb8:	mov	x24, x0
   14fbc:	cmp	x23, x22
   14fc0:	b.eq	14fec <_ZdaPvRKSt9nothrow_t@@Base+0x332c>  // b.none
   14fc4:	mov	x1, x23
   14fc8:	mov	x2, x0
   14fcc:	mov	x0, x22
   14fd0:	bl	19e88 <__sanitizer_set_report_fd@@Base+0x20c8>
   14fd4:	strb	wzr, [x24, x22]
   14fd8:	ldp	x23, x24, [sp, #32]
   14fdc:	b	14f30 <_ZdaPvRKSt9nothrow_t@@Base+0x3270>
   14fe0:	mov	x0, x22
   14fe4:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   14fe8:	b	14f30 <_ZdaPvRKSt9nothrow_t@@Base+0x3270>
   14fec:	ldp	x23, x24, [sp, #32]
   14ff0:	b	14f30 <_ZdaPvRKSt9nothrow_t@@Base+0x3270>
   14ff4:	nop
   14ff8:	stp	x19, x20, [sp, #-32]!
   14ffc:	str	x30, [sp, #16]
   15000:	bl	1c528 <__sanitizer_set_report_fd@@Base+0x4768>
   15004:	cbz	x0, 15054 <_ZdaPvRKSt9nothrow_t@@Base+0x3394>
   15008:	mov	x19, x0
   1500c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15010:	add	x0, x0, #0x5a8
   15014:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   15018:	ldr	x1, [x19]
   1501c:	cbz	x1, 15040 <_ZdaPvRKSt9nothrow_t@@Base+0x3380>
   15020:	adrp	x20, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   15024:	add	x19, x19, #0x8
   15028:	add	x20, x20, #0xb38
   1502c:	nop
   15030:	mov	x0, x20
   15034:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   15038:	ldr	x1, [x19], #8
   1503c:	cbnz	x1, 15030 <_ZdaPvRKSt9nothrow_t@@Base+0x3370>
   15040:	ldr	x30, [sp, #16]
   15044:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15048:	ldp	x19, x20, [sp], #32
   1504c:	add	x0, x0, #0x5b8
   15050:	b	1fb70 <__sanitizer_on_print@@Base+0x310>
   15054:	ldr	x30, [sp, #16]
   15058:	ldp	x19, x20, [sp], #32
   1505c:	ret
   15060:	stp	x19, x20, [sp, #-48]!
   15064:	adrp	x20, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   15068:	add	x20, x20, #0x480
   1506c:	add	x19, x20, #0x10
   15070:	add	x20, x20, #0x60
   15074:	stp	x21, x22, [sp, #16]
   15078:	mov	x22, x0
   1507c:	mov	x21, x1
   15080:	str	x30, [sp, #32]
   15084:	ldr	x2, [x19]
   15088:	mov	x1, x21
   1508c:	mov	x0, x22
   15090:	add	x19, x19, #0x10
   15094:	cbz	x2, 150a4 <_ZdaPvRKSt9nothrow_t@@Base+0x33e4>
   15098:	blr	x2
   1509c:	cmp	x19, x20
   150a0:	b.ne	15084 <_ZdaPvRKSt9nothrow_t@@Base+0x33c4>  // b.any
   150a4:	ldp	x21, x22, [sp, #16]
   150a8:	ldr	x30, [sp, #32]
   150ac:	ldp	x19, x20, [sp], #48
   150b0:	ret
   150b4:	nop
   150b8:	stp	x19, x20, [sp, #-32]!
   150bc:	adrp	x20, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   150c0:	add	x20, x20, #0x480
   150c4:	add	x20, x20, #0x10
   150c8:	stp	x21, x30, [sp, #16]
   150cc:	mov	x21, x0
   150d0:	mov	x19, #0x0                   	// #0
   150d4:	add	x1, x20, x19
   150d8:	mov	x0, x21
   150dc:	add	x19, x19, #0x10
   150e0:	ldr	x1, [x1, #8]
   150e4:	cbz	x1, 150f4 <_ZdaPvRKSt9nothrow_t@@Base+0x3434>
   150e8:	blr	x1
   150ec:	cmp	x19, #0x50
   150f0:	b.ne	150d4 <_ZdaPvRKSt9nothrow_t@@Base+0x3414>  // b.any
   150f4:	ldp	x21, x30, [sp, #16]
   150f8:	ldp	x19, x20, [sp], #32
   150fc:	ret

0000000000015100 <__sanitizer_report_error_summary@@Base>:
   15100:	mov	x1, x0
   15104:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   15108:	add	x0, x2, #0x730
   1510c:	b	1fb70 <__sanitizer_on_print@@Base+0x310>
   15110:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   15114:	ldr	x4, [x4, #4056]
   15118:	ldrb	w2, [x4, #60]
   1511c:	cbnz	w2, 15124 <__sanitizer_report_error_summary@@Base+0x24>
   15120:	ret
   15124:	stp	x19, x20, [sp, #-96]!
   15128:	mov	x20, x1
   1512c:	stp	x23, x24, [sp, #32]
   15130:	adrp	x23, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   15134:	add	x19, x23, #0x480
   15138:	stp	x21, x22, [sp, #16]
   1513c:	mov	x21, x0
   15140:	ldr	x2, [x19, #96]
   15144:	str	x30, [sp, #48]
   15148:	str	xzr, [sp, #64]
   1514c:	stp	xzr, xzr, [sp, #72]
   15150:	cbz	x2, 15220 <__sanitizer_report_error_summary@@Base+0x120>
   15154:	sub	x0, x2, #0x1
   15158:	tst	x0, x2
   1515c:	b.ne	15288 <__sanitizer_report_error_summary@@Base+0x188>  // b.any
   15160:	add	x22, x2, #0x3ff
   15164:	neg	x2, x2
   15168:	and	x22, x22, x2
   1516c:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   15170:	mov	w2, #0x0                   	// #0
   15174:	add	x1, x24, #0xb50
   15178:	mov	x0, x22
   1517c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   15180:	ldr	x1, [sp, #64]
   15184:	mov	x19, x0
   15188:	ldr	x2, [sp, #80]
   1518c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   15190:	ldp	x0, x1, [sp, #64]
   15194:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   15198:	stp	x19, x22, [sp, #64]
   1519c:	ldr	x2, [sp, #80]
   151a0:	cmp	x2, #0x3ff
   151a4:	b.hi	151c8 <__sanitizer_report_error_summary@@Base+0xc8>  // b.pmore
   151a8:	cmp	x22, #0x3ff
   151ac:	b.ls	15230 <__sanitizer_report_error_summary@@Base+0x130>  // b.plast
   151b0:	mov	x3, #0x400                 	// #1024
   151b4:	add	x0, x19, x2
   151b8:	mov	w1, #0x0                   	// #0
   151bc:	sub	x2, x3, x2
   151c0:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   151c4:	ldr	x19, [sp, #64]
   151c8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   151cc:	adrp	x2, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
   151d0:	cmp	x20, #0x0
   151d4:	ldr	q0, [x0, #1504]
   151d8:	mov	x3, x21
   151dc:	add	x0, sp, #0x40
   151e0:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   151e4:	add	x1, x1, #0x5c0
   151e8:	str	q0, [sp, #80]
   151ec:	strb	wzr, [x19]
   151f0:	ldr	x2, [x2, #640]
   151f4:	csel	x2, x2, x20, eq  // eq = none
   151f8:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   151fc:	ldr	x0, [sp, #64]
   15200:	bl	61c0 <__sanitizer_report_error_summary@plt>
   15204:	ldp	x0, x1, [sp, #64]
   15208:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1520c:	ldp	x21, x22, [sp, #16]
   15210:	ldp	x23, x24, [sp, #32]
   15214:	ldr	x30, [sp, #48]
   15218:	ldp	x19, x20, [sp], #96
   1521c:	ret
   15220:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   15224:	mov	x2, x0
   15228:	str	x0, [x19, #96]
   1522c:	b	15154 <__sanitizer_report_error_summary@@Base+0x54>
   15230:	add	x23, x23, #0x480
   15234:	ldr	x0, [x23, #96]
   15238:	cbz	x0, 15298 <__sanitizer_report_error_summary@@Base+0x198>
   1523c:	sub	x1, x0, #0x1
   15240:	tst	x1, x0
   15244:	b.ne	15288 <__sanitizer_report_error_summary@@Base+0x188>  // b.any
   15248:	add	x22, x0, #0x3ff
   1524c:	neg	x0, x0
   15250:	and	x22, x22, x0
   15254:	add	x1, x24, #0xb50
   15258:	mov	w2, #0x0                   	// #0
   1525c:	mov	x0, x22
   15260:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   15264:	mov	x19, x0
   15268:	ldr	x1, [sp, #64]
   1526c:	ldr	x2, [sp, #80]
   15270:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   15274:	ldp	x0, x1, [sp, #64]
   15278:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1527c:	stp	x19, x22, [sp, #64]
   15280:	ldr	x2, [sp, #80]
   15284:	b	151b0 <__sanitizer_report_error_summary@@Base+0xb0>
   15288:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1528c:	add	x0, x0, #0xb38
   15290:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   15294:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   15298:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1529c:	str	x0, [x23, #96]
   152a0:	b	1523c <__sanitizer_report_error_summary@@Base+0x13c>
   152a4:	nop

00000000000152a8 <__sanitizer_acquire_crash_state@@Base>:
   152a8:	adrp	x0, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   152ac:	add	x0, x0, #0x480
   152b0:	add	x0, x0, #0x68
   152b4:	mov	w2, #0x1                   	// #1
   152b8:	ldxrb	w1, [x0]
   152bc:	stxrb	w3, w2, [x0]
   152c0:	cbnz	w3, 152b8 <__sanitizer_acquire_crash_state@@Base+0x10>
   152c4:	tst	w1, #0xff
   152c8:	dmb	ish
   152cc:	cset	w0, eq  // eq = none
   152d0:	ret
   152d4:	nop

00000000000152d8 <__sanitizer_install_malloc_and_free_hooks@@Base>:
   152d8:	cmp	x0, #0x0
   152dc:	mov	x2, x0
   152e0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   152e4:	mov	w0, #0x0                   	// #0
   152e8:	b.eq	15324 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4c>  // b.none
   152ec:	adrp	x3, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   152f0:	add	x4, x3, #0x480
   152f4:	add	x0, x4, #0x10
   152f8:	ldr	x4, [x4, #16]
   152fc:	cbz	x4, 1534c <__sanitizer_install_malloc_and_free_hooks@@Base+0x74>
   15300:	ldr	x4, [x0, #16]
   15304:	cbz	x4, 15358 <__sanitizer_install_malloc_and_free_hooks@@Base+0x80>
   15308:	ldr	x4, [x0, #32]
   1530c:	cbz	x4, 15364 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8c>
   15310:	ldr	x4, [x0, #48]
   15314:	cbz	x4, 15370 <__sanitizer_install_malloc_and_free_hooks@@Base+0x98>
   15318:	ldr	x4, [x0, #64]
   1531c:	mov	w0, #0x0                   	// #0
   15320:	cbz	x4, 15328 <__sanitizer_install_malloc_and_free_hooks@@Base+0x50>
   15324:	ret
   15328:	mov	w4, #0x4                   	// #4
   1532c:	mov	w0, #0x5                   	// #5
   15330:	add	x3, x3, #0x480
   15334:	sbfiz	x4, x4, #4, #32
   15338:	add	x3, x3, #0x10
   1533c:	add	x5, x3, x4
   15340:	str	x2, [x3, x4]
   15344:	str	x1, [x5, #8]
   15348:	ret
   1534c:	mov	w4, #0x0                   	// #0
   15350:	mov	w0, #0x1                   	// #1
   15354:	b	15330 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   15358:	mov	w4, #0x1                   	// #1
   1535c:	mov	w0, #0x2                   	// #2
   15360:	b	15330 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   15364:	mov	w4, #0x2                   	// #2
   15368:	mov	w0, #0x3                   	// #3
   1536c:	b	15330 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   15370:	mov	w4, #0x3                   	// #3
   15374:	mov	w0, #0x4                   	// #4
   15378:	b	15330 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   1537c:	nop
   15380:	mov	x0, #0x0                   	// #0
   15384:	ret
   15388:	ret
   1538c:	nop
   15390:	ldr	x1, [x1, #16]
   15394:	ldrb	w0, [x1, #2224]
   15398:	cbz	w0, 153a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd0>
   1539c:	add	x0, x1, #0x628
   153a0:	strb	wzr, [x1, #2224]
   153a4:	ret
   153a8:	mov	x0, #0x0                   	// #0
   153ac:	ret
   153b0:	stp	x19, x30, [sp, #-16]!
   153b4:	mov	x2, #0x0                   	// #0
   153b8:	mov	x19, x1
   153bc:	mov	x0, #0x8b8                 	// #2232
   153c0:	mov	x1, #0x0                   	// #0
   153c4:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   153c8:	mov	x3, x0
   153cc:	str	x19, [x0]
   153d0:	str	xzr, [x3, #8]!
   153d4:	str	xzr, [x3, #520]
   153d8:	str	xzr, [x3, #1040]
   153dc:	str	xzr, [x3, #1560]
   153e0:	strb	wzr, [x0, #2224]
   153e4:	ldp	x19, x30, [sp], #16
   153e8:	ret
   153ec:	nop
   153f0:	mov	x0, x1
   153f4:	mov	x1, #0x0                   	// #0
   153f8:	b	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   153fc:	nop
   15400:	ldr	x1, [x1, #16]
   15404:	ldr	x2, [x2]
   15408:	ldr	x3, [x1, #528]
   1540c:	and	x0, x2, #0xfffffffffffff000
   15410:	cmp	x3, x0
   15414:	b.eq	1541c <__sanitizer_install_malloc_and_free_hooks@@Base+0x144>  // b.none
   15418:	ret
   1541c:	ldr	x7, [x1, #1048]
   15420:	add	x6, x1, #0x8
   15424:	and	x4, x2, #0xfff
   15428:	cbz	x7, 15474 <__sanitizer_install_malloc_and_free_hooks@@Base+0x19c>
   1542c:	sub	x8, x7, #0x1
   15430:	mov	x0, x8
   15434:	tbnz	x8, #63, 15474 <__sanitizer_install_malloc_and_free_hooks@@Base+0x19c>
   15438:	add	x5, x1, #0x218
   1543c:	b	1544c <__sanitizer_install_malloc_and_free_hooks@@Base+0x174>
   15440:	sub	x0, x0, #0x1
   15444:	cmn	x0, #0x1
   15448:	b.eq	15474 <__sanitizer_install_malloc_and_free_hooks@@Base+0x19c>  // b.none
   1544c:	ldr	x3, [x5, x0, lsl #3]
   15450:	cmp	x4, x3
   15454:	b.ne	15440 <__sanitizer_install_malloc_and_free_hooks@@Base+0x168>  // b.any
   15458:	add	x1, x1, x7, lsl #3
   1545c:	add	x0, x0, #0x42
   15460:	str	x8, [x6, #1040]
   15464:	ldr	x2, [x1, #528]
   15468:	str	x2, [x6, x0, lsl #3]
   1546c:	str	x4, [x1, #528]
   15470:	ret
   15474:	ldr	x7, [x1, #8]
   15478:	lsr	x3, x4, #6
   1547c:	mov	x0, #0x1                   	// #1
   15480:	lsl	x5, x0, x3
   15484:	tst	x7, x5
   15488:	b.eq	15418 <__sanitizer_install_malloc_and_free_hooks@@Base+0x140>  // b.none
   1548c:	add	x3, x3, x0
   15490:	lsl	x0, x0, x2
   15494:	ldr	x2, [x6, x3, lsl #3]
   15498:	bic	x0, x2, x0
   1549c:	str	x0, [x6, x3, lsl #3]
   154a0:	cbz	x0, 1551c <__sanitizer_install_malloc_and_free_hooks@@Base+0x244>
   154a4:	cmp	x2, x0
   154a8:	b.eq	15418 <__sanitizer_install_malloc_and_free_hooks@@Base+0x140>  // b.none
   154ac:	ldr	x5, [x6, #1560]
   154b0:	cbz	x5, 15418 <__sanitizer_install_malloc_and_free_hooks@@Base+0x140>
   154b4:	sub	x7, x5, #0x1
   154b8:	mov	x0, x7
   154bc:	tbnz	x7, #63, 15418 <__sanitizer_install_malloc_and_free_hooks@@Base+0x140>
   154c0:	add	x1, x1, #0x420
   154c4:	mov	w3, w4
   154c8:	b	154d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x200>
   154cc:	sub	x0, x0, #0x1
   154d0:	cmn	x0, #0x1
   154d4:	b.eq	15418 <__sanitizer_install_malloc_and_free_hooks@@Base+0x140>  // b.none
   154d8:	lsl	x2, x0, #3
   154dc:	ldr	w2, [x1, x2]
   154e0:	cmp	w3, w2
   154e4:	b.ne	154cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f4>  // b.any
   154e8:	add	x3, x6, x0, lsl #3
   154ec:	add	x1, x5, #0x82
   154f0:	add	x5, x6, x7, lsl #3
   154f4:	mov	x0, x3
   154f8:	lsl	x1, x1, #3
   154fc:	add	x2, x6, x1
   15500:	ldr	w3, [x3, #1052]
   15504:	ldr	x5, [x5, #1048]
   15508:	str	x5, [x0, #1048]
   1550c:	str	w4, [x6, x1]
   15510:	str	w3, [x2, #4]
   15514:	str	x7, [x6, #1560]
   15518:	ret
   1551c:	bic	x5, x7, x5
   15520:	str	x5, [x1, #8]
   15524:	b	154a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cc>
   15528:	ldr	x3, [x1]
   1552c:	stp	x19, x30, [sp, #-16]!
   15530:	mov	x19, x2
   15534:	adrp	x2, 16000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd28>
   15538:	add	x2, x2, #0x9f8
   1553c:	ldr	x3, [x3]
   15540:	str	xzr, [x19]
   15544:	mov	w0, #0x0                   	// #0
   15548:	cmp	x3, x2
   1554c:	b.ne	1555c <__sanitizer_install_malloc_and_free_hooks@@Base+0x284>  // b.any
   15550:	str	w0, [x19, #8]
   15554:	ldp	x19, x30, [sp], #16
   15558:	ret
   1555c:	mov	x0, x1
   15560:	blr	x3
   15564:	str	w0, [x19, #8]
   15568:	ldp	x19, x30, [sp], #16
   1556c:	ret
   15570:	stp	x19, x20, [sp, #-32]!
   15574:	mov	x20, x0
   15578:	ldr	x0, [x2]
   1557c:	str	x30, [sp, #16]
   15580:	cbnz	x0, 15590 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2b8>
   15584:	ldr	x30, [sp, #16]
   15588:	ldp	x19, x20, [sp], #32
   1558c:	ret
   15590:	add	x0, x20, #0x8
   15594:	mov	x19, x2
   15598:	mov	w2, #0x1                   	// #1
   1559c:	ldxrb	w1, [x0]
   155a0:	stxrb	w3, w2, [x0]
   155a4:	cbnz	w3, 1559c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c4>
   155a8:	dmb	ish
   155ac:	tst	w1, #0xff
   155b0:	b.eq	155b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2e0>  // b.none
   155b4:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   155b8:	ldr	x3, [x19]
   155bc:	cbz	x3, 155d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2f8>
   155c0:	ldr	x0, [x20, #16]
   155c4:	and	x1, x3, #0xfffffffffffff000
   155c8:	cmp	x1, x0
   155cc:	b.eq	155e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x310>  // b.none
   155d0:	str	xzr, [x19]
   155d4:	dmb	ish
   155d8:	strb	wzr, [x20, #8]
   155dc:	ldr	x30, [sp, #16]
   155e0:	ldp	x19, x20, [sp], #32
   155e4:	ret
   155e8:	cmp	x3, #0xfff
   155ec:	b.ls	156a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3d0>  // b.plast
   155f0:	ubfx	x0, x3, #6, #6
   155f4:	mov	x1, #0x1                   	// #1
   155f8:	ldr	x6, [x20, #24]
   155fc:	add	x4, x0, x1
   15600:	and	x2, x3, #0xfff
   15604:	lsl	x0, x1, x0
   15608:	lsl	x5, x4, #3
   1560c:	tst	x0, x6
   15610:	lsl	x3, x1, x3
   15614:	b.ne	15644 <__sanitizer_install_malloc_and_free_hooks@@Base+0x36c>  // b.any
   15618:	ldr	x1, [x20, #544]
   1561c:	add	x5, x20, #0x220
   15620:	tst	x0, x1
   15624:	b.ne	15674 <__sanitizer_install_malloc_and_free_hooks@@Base+0x39c>  // b.any
   15628:	orr	x0, x0, x1
   1562c:	str	x0, [x20, #544]
   15630:	str	x3, [x5, x4, lsl #3]
   15634:	add	x2, x2, x2, lsl #6
   15638:	add	x2, x20, x2, lsl #3
   1563c:	str	xzr, [x2, #1584]
   15640:	b	155d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2f8>
   15644:	add	x5, x20, x5
   15648:	ldr	x1, [x5, #24]
   1564c:	tst	x3, x1
   15650:	b.eq	15618 <__sanitizer_install_malloc_and_free_hooks@@Base+0x340>  // b.none
   15654:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15658:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1565c:	add	x2, x2, #0x6f8
   15660:	add	x0, x0, #0x698
   15664:	mov	x4, #0x0                   	// #0
   15668:	mov	x3, #0x0                   	// #0
   1566c:	mov	w1, #0xbe                  	// #190
   15670:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   15674:	ldr	x0, [x5, x4, lsl #3]
   15678:	orr	x3, x0, x3
   1567c:	str	x3, [x5, x4, lsl #3]
   15680:	cmp	x0, x3
   15684:	b.ne	15634 <__sanitizer_install_malloc_and_free_hooks@@Base+0x35c>  // b.any
   15688:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1568c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15690:	add	x2, x2, #0x728
   15694:	add	x0, x0, #0x698
   15698:	mov	x4, #0x0                   	// #0
   1569c:	mov	x3, #0x0                   	// #0
   156a0:	mov	w1, #0xbf                  	// #191
   156a4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   156a8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   156ac:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   156b0:	add	x2, x2, #0x680
   156b4:	add	x0, x0, #0x698
   156b8:	mov	x4, #0x1000                	// #4096
   156bc:	mov	w1, #0x16e                 	// #366
   156c0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   156c4:	nop
   156c8:	stp	x19, x30, [sp, #-16]!
   156cc:	mov	x19, x0
   156d0:	mov	x0, #0xa50                 	// #2640
   156d4:	mov	w2, #0x0                   	// #0
   156d8:	movk	x0, #0x41, lsl #16
   156dc:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   156e0:	add	x1, x1, #0x750
   156e4:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   156e8:	add	x4, x0, #0x410, lsl #12
   156ec:	strb	wzr, [x0, #8]
   156f0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   156f4:	add	x3, x1, #0x918
   156f8:	add	x2, x0, #0x208, lsl #12
   156fc:	str	x3, [x0]
   15700:	add	x1, x0, #0x630
   15704:	ldrb	w3, [x19]
   15708:	add	x2, x2, #0x630
   1570c:	strb	w3, [x4, #2632]
   15710:	stp	xzr, xzr, [x0, #16]
   15714:	str	xzr, [x0, #544]
   15718:	str	xzr, [x1]
   1571c:	add	x1, x1, #0x208
   15720:	cmp	x1, x2
   15724:	b.ne	15718 <__sanitizer_install_malloc_and_free_hooks@@Base+0x440>  // b.any
   15728:	add	x1, x0, #0x10
   1572c:	add	x1, x1, #0x410, lsl #12
   15730:	str	xzr, [x1, #2608]
   15734:	ldp	x19, x30, [sp], #16
   15738:	ret
   1573c:	nop
   15740:	add	x5, x0, #0x410, lsl #12
   15744:	strb	wzr, [x0, #8]
   15748:	add	x3, x0, #0x208, lsl #12
   1574c:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   15750:	ldrb	w1, [x1]
   15754:	add	x4, x4, #0x918
   15758:	str	x4, [x0]
   1575c:	add	x2, x0, #0x630
   15760:	add	x3, x3, #0x630
   15764:	strb	w1, [x5, #2632]
   15768:	stp	xzr, xzr, [x0, #16]
   1576c:	str	xzr, [x0, #544]
   15770:	str	xzr, [x2]
   15774:	add	x2, x2, #0x208
   15778:	cmp	x2, x3
   1577c:	b.ne	15770 <__sanitizer_install_malloc_and_free_hooks@@Base+0x498>  // b.any
   15780:	add	x0, x0, #0x10
   15784:	add	x0, x0, #0x410, lsl #12
   15788:	str	xzr, [x0, #2608]
   1578c:	ret
   15790:	ldr	x3, [x2]
   15794:	cbz	x3, 157a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4d0>
   15798:	ldr	x4, [x0, #16]
   1579c:	and	x3, x3, #0xfffffffffffff000
   157a0:	cmp	x3, x4
   157a4:	b.eq	15a6c <__sanitizer_install_malloc_and_free_hooks@@Base+0x794>  // b.none
   157a8:	stp	x19, x20, [sp, #-32]!
   157ac:	ldr	x9, [x0, #24]
   157b0:	str	x30, [sp, #16]
   157b4:	cbz	x9, 15820 <__sanitizer_install_malloc_and_free_hooks@@Base+0x548>
   157b8:	mov	x4, x0
   157bc:	rbit	x3, x9
   157c0:	clz	x3, x3
   157c4:	mov	x5, #0x1                   	// #1
   157c8:	add	x8, x3, x5
   157cc:	lsl	x7, x5, x3
   157d0:	bic	x9, x9, x7
   157d4:	str	x9, [x4, #24]!
   157d8:	ldr	x6, [x4, x8, lsl #3]
   157dc:	cbz	x6, 15bc8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8f0>
   157e0:	rbit	x10, x6
   157e4:	clz	x10, x10
   157e8:	lsl	x5, x5, x10
   157ec:	bic	x5, x6, x5
   157f0:	str	x5, [x4, x8, lsl #3]
   157f4:	cbz	x5, 15800 <__sanitizer_install_malloc_and_free_hooks@@Base+0x528>
   157f8:	orr	x7, x7, x9
   157fc:	str	x7, [x0, #24]
   15800:	add	x3, x10, x3, lsl #6
   15804:	add	x4, x0, #0x10
   15808:	add	x5, x3, #0x41, lsl #12
   1580c:	add	x5, x5, #0x146
   15810:	str	x2, [x4, x5, lsl #3]
   15814:	ldr	x4, [x0, #16]
   15818:	add	x3, x3, x4
   1581c:	b	15a20 <__sanitizer_install_malloc_and_free_hooks@@Base+0x748>
   15820:	ldr	x15, [x0, #544]
   15824:	cbz	x15, 1596c <__sanitizer_install_malloc_and_free_hooks@@Base+0x694>
   15828:	add	x11, x0, #0x10
   1582c:	add	x10, x11, #0x410, lsl #12
   15830:	ldr	x4, [x10, #2608]
   15834:	subs	x12, x4, #0x1
   15838:	b.mi	15910 <__sanitizer_install_malloc_and_free_hooks@@Base+0x638>  // b.first
   1583c:	add	x4, x4, #0x21, lsl #12
   15840:	mov	x16, #0x10a2                	// #4258
   15844:	add	x4, x4, #0xa3
   15848:	add	x14, x0, #0x220
   1584c:	mov	x13, #0x1                   	// #1
   15850:	movk	x16, #0x2, lsl #16
   15854:	add	x4, x0, x4, lsl #4
   15858:	ldrh	w6, [x4]
   1585c:	and	x3, x6, #0xffff
   15860:	cmp	x3, #0x1, lsl #12
   15864:	b.hi	15b64 <__sanitizer_install_malloc_and_free_hooks@@Base+0x88c>  // b.pmore
   15868:	lsr	x5, x3, #12
   1586c:	ubfx	x3, x3, #6, #6
   15870:	lsl	x8, x13, x3
   15874:	ldr	x7, [x14, x5, lsl #3]
   15878:	tst	x8, x7
   1587c:	b.ne	15a50 <__sanitizer_install_malloc_and_free_hooks@@Base+0x778>  // b.any
   15880:	ldrh	w6, [x4, #2]
   15884:	and	x3, x6, #0xffff
   15888:	cmp	x3, #0x1, lsl #12
   1588c:	b.hi	15b8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x8b4>  // b.pmore
   15890:	lsr	x5, x3, #12
   15894:	ubfx	x3, x3, #6, #6
   15898:	lsl	x8, x13, x3
   1589c:	ldr	x7, [x14, x5, lsl #3]
   158a0:	tst	x8, x7
   158a4:	b.eq	15900 <__sanitizer_install_malloc_and_free_hooks@@Base+0x628>  // b.none
   158a8:	add	x3, x3, x5, lsl #6
   158ac:	lsl	x6, x13, x6
   158b0:	add	x3, x3, #0x1
   158b4:	ldr	x3, [x14, x3, lsl #3]
   158b8:	tst	x6, x3
   158bc:	b.eq	15900 <__sanitizer_install_malloc_and_free_hooks@@Base+0x628>  // b.none
   158c0:	ldr	x3, [x10, #2608]
   158c4:	ldrh	w20, [x4]
   158c8:	add	x8, x3, x16
   158cc:	sub	x5, x3, #0x1
   158d0:	ldrh	w19, [x4, #2]
   158d4:	lsl	x8, x8, #4
   158d8:	ldr	w17, [x4, #12]
   158dc:	add	x3, x11, x8
   158e0:	ldp	w30, w18, [x4, #4]
   158e4:	ldp	x6, x7, [x3]
   158e8:	stp	x6, x7, [x4]
   158ec:	strh	w20, [x11, x8]
   158f0:	strh	w19, [x3, #2]
   158f4:	stp	w30, w18, [x3, #4]
   158f8:	str	w17, [x3, #12]
   158fc:	str	x5, [x10, #2608]
   15900:	sub	x12, x12, #0x1
   15904:	sub	x4, x4, #0x10
   15908:	cmn	x12, #0x1
   1590c:	b.ne	15858 <__sanitizer_install_malloc_and_free_hooks@@Base+0x580>  // b.any
   15910:	mov	x12, #0x1                   	// #1
   15914:	add	x6, x0, #0x630
   15918:	mov	x14, x12
   1591c:	ldr	x3, [x6, x9, lsl #3]
   15920:	add	x13, x9, #0x1
   15924:	and	x3, x15, x3
   15928:	cbz	x3, 15aac <__sanitizer_install_malloc_and_free_hooks@@Base+0x7d4>
   1592c:	rbit	x4, x3
   15930:	clz	x4, x4
   15934:	add	x7, x13, x4
   15938:	add	x10, x0, x4, lsl #3
   1593c:	lsl	x5, x12, x4
   15940:	bic	x3, x3, x5
   15944:	ldr	x8, [x6, x7, lsl #3]
   15948:	ldr	x5, [x10, #552]
   1594c:	bic	x5, x8, x5
   15950:	str	x5, [x6, x7, lsl #3]
   15954:	cbnz	x5, 15928 <__sanitizer_install_malloc_and_free_hooks@@Base+0x650>
   15958:	ldr	x5, [x6, x9, lsl #3]
   1595c:	lsl	x4, x14, x4
   15960:	bic	x4, x5, x4
   15964:	str	x4, [x6, x9, lsl #3]
   15968:	b	15928 <__sanitizer_install_malloc_and_free_hooks@@Base+0x650>
   1596c:	ldr	x4, [x0, #16]
   15970:	mov	x5, x0
   15974:	mvni	v0.4s, #0x0
   15978:	add	x3, x0, #0x20
   1597c:	add	x4, x4, #0x1, lsl #12
   15980:	str	x4, [x0, #16]
   15984:	add	x4, x0, #0x220
   15988:	mov	x6, #0xffffffffffffffff    	// #-1
   1598c:	str	x6, [x5, #24]!
   15990:	str	q0, [x3], #16
   15994:	cmp	x3, x4
   15998:	b.ne	15990 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6b8>  // b.any
   1599c:	add	x4, x0, #0x208, lsl #12
   159a0:	add	x3, x0, #0x630
   159a4:	add	x4, x4, #0x630
   159a8:	str	xzr, [x3]
   159ac:	add	x3, x3, #0x208
   159b0:	cmp	x4, x3
   159b4:	b.ne	159a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6d0>  // b.any
   159b8:	add	x11, x0, #0x10
   159bc:	add	x3, x11, #0x410, lsl #12
   159c0:	str	xzr, [x3, #2608]
   159c4:	ldr	x4, [x0, #24]
   159c8:	cbz	x4, 15a8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x7b4>
   159cc:	rbit	x3, x4
   159d0:	mov	x6, #0x1                   	// #1
   159d4:	clz	x3, x3
   159d8:	add	x9, x3, x6
   159dc:	lsl	x8, x6, x3
   159e0:	bic	x4, x4, x8
   159e4:	str	x4, [x0, #24]
   159e8:	ldr	x7, [x5, x9, lsl #3]
   159ec:	cbz	x7, 15ba8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8d0>
   159f0:	rbit	x10, x7
   159f4:	clz	x10, x10
   159f8:	lsl	x6, x6, x10
   159fc:	bic	x6, x7, x6
   15a00:	str	x6, [x5, x9, lsl #3]
   15a04:	cbnz	x6, 15b80 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8a8>
   15a08:	add	x3, x10, x3, lsl #6
   15a0c:	add	x4, x3, #0x41, lsl #12
   15a10:	add	x4, x4, #0x146
   15a14:	str	x2, [x11, x4, lsl #3]
   15a18:	ldr	x4, [x0, #16]
   15a1c:	add	x3, x3, x4
   15a20:	str	x3, [x2]
   15a24:	ldr	x2, [x1, #528]
   15a28:	ldr	x4, [x0, #16]
   15a2c:	cmp	x2, x4
   15a30:	b.eq	15a44 <__sanitizer_install_malloc_and_free_hooks@@Base+0x76c>  // b.none
   15a34:	str	xzr, [x1, #8]
   15a38:	str	x4, [x1, #528]
   15a3c:	str	xzr, [x1, #1048]
   15a40:	str	xzr, [x1, #1568]
   15a44:	ldr	x30, [sp, #16]
   15a48:	ldp	x19, x20, [sp], #32
   15a4c:	ret
   15a50:	add	x3, x3, x5, lsl #6
   15a54:	lsl	x6, x13, x6
   15a58:	add	x3, x3, #0x1
   15a5c:	ldr	x3, [x14, x3, lsl #3]
   15a60:	tst	x6, x3
   15a64:	b.ne	158c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x5e8>  // b.any
   15a68:	b	15880 <__sanitizer_install_malloc_and_free_hooks@@Base+0x5a8>
   15a6c:	ldr	x2, [x1, #528]
   15a70:	cmp	x2, x4
   15a74:	b.eq	15a88 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7b0>  // b.none
   15a78:	str	xzr, [x1, #8]
   15a7c:	str	x4, [x1, #528]
   15a80:	str	xzr, [x1, #1048]
   15a84:	str	xzr, [x1, #1568]
   15a88:	ret
   15a8c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   15a90:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15a94:	add	x2, x2, #0xe80
   15a98:	add	x0, x0, #0x610
   15a9c:	mov	x4, #0x0                   	// #0
   15aa0:	mov	x3, #0x0                   	// #0
   15aa4:	mov	w1, #0xc0                  	// #192
   15aa8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   15aac:	add	x9, x9, #0x41
   15ab0:	cmp	x9, #0x41, lsl #12
   15ab4:	ldr	x15, [x0, #544]
   15ab8:	b.ne	1591c <__sanitizer_install_malloc_and_free_hooks@@Base+0x644>  // b.any
   15abc:	add	x8, x0, #0x220
   15ac0:	add	x6, x0, #0x18
   15ac4:	mov	x7, #0x1                   	// #1
   15ac8:	cbz	x15, 15b08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x830>
   15acc:	rbit	x3, x15
   15ad0:	ldr	x5, [x0, #24]
   15ad4:	clz	x3, x3
   15ad8:	lsl	x4, x7, x3
   15adc:	add	x3, x3, #0x1
   15ae0:	bic	x15, x15, x4
   15ae4:	orr	x4, x4, x5
   15ae8:	str	x4, [x0, #24]
   15aec:	cmp	x4, x5
   15af0:	lsl	x4, x3, #3
   15af4:	b.eq	15be8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x910>  // b.none
   15af8:	str	xzr, [x6, x3, lsl #3]
   15afc:	ldr	x4, [x8, x3, lsl #3]
   15b00:	str	x4, [x6, x3, lsl #3]
   15b04:	cbnz	x15, 15acc <__sanitizer_install_malloc_and_free_hooks@@Base+0x7f4>
   15b08:	ldr	x5, [x0, #24]
   15b0c:	str	xzr, [x0, #544]
   15b10:	cbz	x5, 15a8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x7b4>
   15b14:	rbit	x3, x5
   15b18:	mov	x7, x0
   15b1c:	clz	x3, x3
   15b20:	mov	x4, #0x1                   	// #1
   15b24:	add	x6, x3, #0x1
   15b28:	lsl	x8, x4, x3
   15b2c:	bic	x5, x5, x8
   15b30:	lsl	x6, x6, #3
   15b34:	str	x5, [x7, #24]!
   15b38:	ldr	x9, [x7, x6]
   15b3c:	cbz	x9, 15c00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x928>
   15b40:	rbit	x10, x9
   15b44:	clz	x10, x10
   15b48:	lsl	x4, x4, x10
   15b4c:	bic	x4, x9, x4
   15b50:	str	x4, [x7, x6]
   15b54:	cbz	x4, 15a08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x730>
   15b58:	orr	x5, x8, x5
   15b5c:	str	x5, [x0, #24]
   15b60:	b	15a08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x730>
   15b64:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15b68:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15b6c:	add	x2, x2, #0x668
   15b70:	add	x0, x0, #0x610
   15b74:	mov	x4, #0x1000                	// #4096
   15b78:	mov	w1, #0x144                 	// #324
   15b7c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   15b80:	orr	x4, x8, x4
   15b84:	str	x4, [x0, #24]
   15b88:	b	15a08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x730>
   15b8c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15b90:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15b94:	add	x2, x2, #0x668
   15b98:	add	x0, x0, #0x610
   15b9c:	mov	x4, #0x1000                	// #4096
   15ba0:	mov	w1, #0x144                 	// #324
   15ba4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   15ba8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15bac:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15bb0:	add	x2, x2, #0x2d0
   15bb4:	add	x0, x0, #0x610
   15bb8:	mov	x4, #0x0                   	// #0
   15bbc:	mov	x3, #0x0                   	// #0
   15bc0:	mov	w1, #0x31                  	// #49
   15bc4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   15bc8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15bcc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15bd0:	add	x2, x2, #0x2d0
   15bd4:	add	x0, x0, #0x610
   15bd8:	mov	x4, #0x0                   	// #0
   15bdc:	mov	x3, #0x0                   	// #0
   15be0:	mov	w1, #0x31                  	// #49
   15be4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   15be8:	ldr	x3, [x6, x4]
   15bec:	ldr	x5, [x8, x4]
   15bf0:	orr	x3, x3, x5
   15bf4:	str	x3, [x6, x4]
   15bf8:	cbnz	x15, 15acc <__sanitizer_install_malloc_and_free_hooks@@Base+0x7f4>
   15bfc:	b	15b08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x830>
   15c00:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15c04:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15c08:	add	x2, x2, #0x2d0
   15c0c:	add	x0, x0, #0x610
   15c10:	mov	x4, #0x0                   	// #0
   15c14:	mov	x3, #0x0                   	// #0
   15c18:	mov	w1, #0x31                  	// #49
   15c1c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   15c20:	stp	x19, x20, [sp, #-96]!
   15c24:	mov	x20, x1
   15c28:	add	x1, x0, #0x410, lsl #12
   15c2c:	stp	x21, x22, [sp, #16]
   15c30:	mov	x19, x0
   15c34:	mov	x21, x2
   15c38:	ldrb	w1, [x1, #2632]
   15c3c:	stp	x23, x24, [sp, #32]
   15c40:	and	w24, w3, #0xff
   15c44:	stp	x25, x26, [sp, #48]
   15c48:	and	w26, w4, #0xff
   15c4c:	mov	w25, #0x0                   	// #0
   15c50:	ldr	x23, [x20, #16]
   15c54:	str	x30, [sp, #64]
   15c58:	cbz	w1, 15c74 <__sanitizer_install_malloc_and_free_hooks@@Base+0x99c>
   15c5c:	ldr	x0, [x20]
   15c60:	adrp	x1, 16000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd28>
   15c64:	add	x1, x1, #0x9f8
   15c68:	ldr	x2, [x0]
   15c6c:	cmp	x2, x1
   15c70:	b.ne	15e0c <__sanitizer_install_malloc_and_free_hooks@@Base+0xb34>  // b.any
   15c74:	ldr	x1, [x23, #8]
   15c78:	add	x22, x23, #0x8
   15c7c:	ldr	x2, [x21]
   15c80:	ldr	x5, [x23, #528]
   15c84:	cbz	x1, 15db0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xad8>
   15c88:	cbz	x2, 15c98 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9c0>
   15c8c:	ldr	x0, [x19, #16]
   15c90:	cmp	x0, x5
   15c94:	b.eq	15e30 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb58>  // b.none
   15c98:	add	x0, x19, #0x8
   15c9c:	mov	w2, #0x1                   	// #1
   15ca0:	ldxrb	w1, [x0]
   15ca4:	stxrb	w3, w2, [x0]
   15ca8:	cbnz	w3, 15ca0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9c8>
   15cac:	dmb	ish
   15cb0:	tst	w1, #0xff
   15cb4:	b.eq	15cc0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9e8>  // b.none
   15cb8:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   15cbc:	nop
   15cc0:	mov	x2, x21
   15cc4:	mov	x1, x23
   15cc8:	mov	x0, x19
   15ccc:	bl	15790 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4b8>
   15cd0:	cbnz	w24, 15eec <__sanitizer_install_malloc_and_free_hooks@@Base+0xc14>
   15cd4:	ldr	x24, [x21]
   15cd8:	cbnz	w26, 15d14 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa3c>
   15cdc:	mov	w3, w25
   15ce0:	ldr	x1, [x20]
   15ce4:	cbz	w25, 15fb4 <__sanitizer_install_malloc_and_free_hooks@@Base+0xcdc>
   15ce8:	ldr	x2, [x1, #8]
   15cec:	adrp	x1, 16000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd28>
   15cf0:	add	x1, x1, #0xa00
   15cf4:	mov	w4, #0x0                   	// #0
   15cf8:	cmp	x2, x1
   15cfc:	b.ne	16080 <__sanitizer_install_malloc_and_free_hooks@@Base+0xda8>  // b.any
   15d00:	mov	x2, x24
   15d04:	mov	x1, x22
   15d08:	add	x0, x19, #0x10
   15d0c:	bl	16c40 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1968>
   15d10:	ldr	x24, [x21]
   15d14:	ldr	x0, [x19, #16]
   15d18:	ldr	x1, [x22, #520]
   15d1c:	cmp	x0, x1
   15d20:	b.eq	15d34 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa5c>  // b.none
   15d24:	str	xzr, [x23, #8]
   15d28:	str	x0, [x22, #520]
   15d2c:	str	xzr, [x22, #1040]
   15d30:	str	xzr, [x22, #1560]
   15d34:	cmp	x24, #0xfff
   15d38:	b.ls	16048 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd70>  // b.plast
   15d3c:	ldr	x3, [x19, #16]
   15d40:	and	x4, x24, #0xfffffffffffff000
   15d44:	cmp	x3, x4
   15d48:	b.ne	16068 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd90>  // b.any
   15d4c:	cmp	x3, x0
   15d50:	and	x4, x24, #0xfff
   15d54:	b.ne	16098 <__sanitizer_install_malloc_and_free_hooks@@Base+0xdc0>  // b.any
   15d58:	ldr	x1, [x23, #8]
   15d5c:	lsr	x2, x4, #6
   15d60:	mov	x0, #0x1                   	// #1
   15d64:	add	x3, x2, x0
   15d68:	lsl	x24, x0, x24
   15d6c:	lsl	x0, x0, x2
   15d70:	tst	x1, x0
   15d74:	b.ne	15f64 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc8c>  // b.any
   15d78:	orr	x0, x1, x0
   15d7c:	str	x0, [x23, #8]
   15d80:	str	x24, [x22, x3, lsl #3]
   15d84:	ldr	x3, [x22, #1560]
   15d88:	cmp	x3, #0x3f
   15d8c:	b.hi	15fdc <__sanitizer_install_malloc_and_free_hooks@@Base+0xd04>  // b.pmore
   15d90:	add	x0, x3, #0x83
   15d94:	add	x3, x3, #0x1
   15d98:	str	x3, [x22, #1560]
   15d9c:	lsl	x0, x0, #3
   15da0:	add	x1, x22, x0
   15da4:	str	w4, [x22, x0]
   15da8:	str	w25, [x1, #4]
   15dac:	b	15f94 <__sanitizer_install_malloc_and_free_hooks@@Base+0xcbc>
   15db0:	cbz	x5, 15c88 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9b0>
   15db4:	and	x0, x2, #0xfffffffffffff000
   15db8:	cmp	x0, x5
   15dbc:	b.ne	15c88 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9b0>  // b.any
   15dc0:	ubfx	x1, x2, #6, #6
   15dc4:	mov	x0, #0x1                   	// #1
   15dc8:	add	x3, x1, x0
   15dcc:	lsl	x4, x0, x2
   15dd0:	lsl	x0, x0, x1
   15dd4:	str	x0, [x23, #8]
   15dd8:	and	x2, x2, #0xfff
   15ddc:	str	x4, [x22, x3, lsl #3]
   15de0:	ldr	x3, [x22, #1560]
   15de4:	cmp	x3, #0x3f
   15de8:	b.hi	15fdc <__sanitizer_install_malloc_and_free_hooks@@Base+0xd04>  // b.pmore
   15dec:	add	x0, x3, #0x83
   15df0:	add	x3, x3, #0x1
   15df4:	str	x3, [x22, #1560]
   15df8:	lsl	x0, x0, #3
   15dfc:	add	x1, x22, x0
   15e00:	str	w2, [x22, x0]
   15e04:	str	w25, [x1, #4]
   15e08:	b	15f9c <__sanitizer_install_malloc_and_free_hooks@@Base+0xcc4>
   15e0c:	mov	x0, x20
   15e10:	blr	x2
   15e14:	ldr	x1, [x23, #8]
   15e18:	mov	w25, w0
   15e1c:	add	x22, x23, #0x8
   15e20:	ldr	x2, [x21]
   15e24:	ldr	x5, [x23, #528]
   15e28:	cbnz	x1, 15c88 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9b0>
   15e2c:	b	15db0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xad8>
   15e30:	and	x0, x2, #0xfffffffffffff000
   15e34:	cmp	x0, x5
   15e38:	b.ne	15c98 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9c0>  // b.any
   15e3c:	ldr	x9, [x23, #1568]
   15e40:	ubfx	x6, x2, #6, #6
   15e44:	mov	x0, #0x1                   	// #1
   15e48:	and	x8, x2, #0xfff
   15e4c:	add	x5, x6, x0
   15e50:	lsl	x3, x0, x6
   15e54:	lsl	x2, x0, x2
   15e58:	cbz	x9, 15eac <__sanitizer_install_malloc_and_free_hooks@@Base+0xbd4>
   15e5c:	add	x6, x6, #0x1
   15e60:	add	x7, x19, #0x630
   15e64:	add	x11, x23, #0x420
   15e68:	mov	x0, #0x0                   	// #0
   15e6c:	mov	w10, #0x208                 	// #520
   15e70:	mov	w12, #0x41                  	// #65
   15e74:	lsl	x4, x0, #3
   15e78:	ldr	w4, [x11, x4]
   15e7c:	umull	x5, w4, w10
   15e80:	ldr	x5, [x7, x5]
   15e84:	tst	x3, x5
   15e88:	b.eq	15c98 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9c0>  // b.none
   15e8c:	umaddl	x4, w4, w12, x6
   15e90:	mov	x5, x6
   15e94:	ldr	x4, [x7, x4, lsl #3]
   15e98:	tst	x2, x4
   15e9c:	b.eq	15c98 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9c0>  // b.none
   15ea0:	add	x0, x0, #0x1
   15ea4:	cmp	x9, x0
   15ea8:	b.ne	15e74 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb9c>  // b.any
   15eac:	tst	x1, x3
   15eb0:	b.ne	16014 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd3c>  // b.any
   15eb4:	orr	x1, x1, x3
   15eb8:	str	x1, [x23, #8]
   15ebc:	str	x2, [x22, x5, lsl #3]
   15ec0:	ldr	x3, [x22, #1560]
   15ec4:	cmp	x3, #0x3f
   15ec8:	b.hi	15fdc <__sanitizer_install_malloc_and_free_hooks@@Base+0xd04>  // b.pmore
   15ecc:	add	x0, x3, #0x83
   15ed0:	add	x3, x3, #0x1
   15ed4:	str	x3, [x22, #1560]
   15ed8:	lsl	x0, x0, #3
   15edc:	add	x1, x22, x0
   15ee0:	str	w8, [x22, x0]
   15ee4:	str	w25, [x1, #4]
   15ee8:	b	15f9c <__sanitizer_install_malloc_and_free_hooks@@Base+0xcc4>
   15eec:	ldr	x0, [x19, #16]
   15ef0:	ldr	x3, [x22, #520]
   15ef4:	ldr	x24, [x21]
   15ef8:	cmp	x0, x3
   15efc:	b.ne	160b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xde0>  // b.any
   15f00:	cmp	x24, #0xfff
   15f04:	b.ls	16048 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd70>  // b.plast
   15f08:	and	x4, x24, #0xfffffffffffff000
   15f0c:	mov	x3, x0
   15f10:	cmp	x0, x4
   15f14:	b.ne	16068 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd90>  // b.any
   15f18:	ldr	x2, [x23, #8]
   15f1c:	ubfx	x1, x24, #6, #6
   15f20:	mov	x0, #0x1                   	// #1
   15f24:	lsl	x3, x0, x1
   15f28:	tst	x3, x2
   15f2c:	b.eq	15cd8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa00>  // b.none
   15f30:	add	x1, x1, x0
   15f34:	lsl	x0, x0, x24
   15f38:	ldr	x1, [x22, x1, lsl #3]
   15f3c:	tst	x0, x1
   15f40:	b.eq	15cd8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa00>  // b.none
   15f44:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15f48:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15f4c:	add	x2, x2, #0x820
   15f50:	add	x0, x0, #0x848
   15f54:	mov	x4, #0x0                   	// #0
   15f58:	mov	x3, #0x0                   	// #0
   15f5c:	mov	w1, #0xa6                  	// #166
   15f60:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   15f64:	ldr	x0, [x22, x3, lsl #3]
   15f68:	orr	x24, x0, x24
   15f6c:	str	x24, [x22, x3, lsl #3]
   15f70:	cmp	x0, x24
   15f74:	b.ne	15d84 <__sanitizer_install_malloc_and_free_hooks@@Base+0xaac>  // b.any
   15f78:	ldr	x3, [x22, #1040]
   15f7c:	cmp	x3, #0x3f
   15f80:	b.hi	15ff8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd20>  // b.pmore
   15f84:	add	x0, x3, #0x42
   15f88:	add	x3, x3, #0x1
   15f8c:	str	x3, [x22, #1040]
   15f90:	str	x4, [x22, x0, lsl #3]
   15f94:	dmb	ish
   15f98:	strb	wzr, [x19, #8]
   15f9c:	ldp	x21, x22, [sp, #16]
   15fa0:	ldp	x23, x24, [sp, #32]
   15fa4:	ldp	x25, x26, [sp, #48]
   15fa8:	ldr	x30, [sp, #64]
   15fac:	ldp	x19, x20, [sp], #96
   15fb0:	ret
   15fb4:	ldr	x2, [x1]
   15fb8:	adrp	x0, 16000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd28>
   15fbc:	add	x0, x0, #0x9f8
   15fc0:	cmp	x2, x0
   15fc4:	b.eq	15ce8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa10>  // b.none
   15fc8:	mov	x0, x20
   15fcc:	blr	x2
   15fd0:	mov	w3, w0
   15fd4:	ldr	x1, [x20]
   15fd8:	b	15ce8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa10>
   15fdc:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15fe0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15fe4:	add	x2, x2, #0x768
   15fe8:	add	x0, x0, #0x698
   15fec:	mov	x4, #0x40                  	// #64
   15ff0:	mov	w1, #0x43                  	// #67
   15ff4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   15ff8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   15ffc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16000:	add	x2, x2, #0x7c8
   16004:	add	x0, x0, #0x698
   16008:	mov	x4, #0x40                  	// #64
   1600c:	mov	w1, #0x3f                  	// #63
   16010:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16014:	ldr	x0, [x22, x5, lsl #3]
   16018:	orr	x2, x0, x2
   1601c:	str	x2, [x22, x5, lsl #3]
   16020:	cmp	x0, x2
   16024:	b.ne	15ec0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xbe8>  // b.any
   16028:	ldr	x3, [x22, #1040]
   1602c:	cmp	x3, #0x3f
   16030:	b.hi	15ff8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd20>  // b.pmore
   16034:	add	x0, x3, #0x42
   16038:	add	x3, x3, #0x1
   1603c:	str	x3, [x22, #1040]
   16040:	str	x8, [x22, x0, lsl #3]
   16044:	b	15f9c <__sanitizer_install_malloc_and_free_hooks@@Base+0xcc4>
   16048:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1604c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16050:	mov	x3, x24
   16054:	add	x2, x2, #0x680
   16058:	add	x0, x0, #0x698
   1605c:	mov	x4, #0x1000                	// #4096
   16060:	mov	w1, #0x16e                 	// #366
   16064:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16068:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1606c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16070:	add	x2, x2, #0x948
   16074:	add	x0, x0, #0x698
   16078:	mov	w1, #0x16f                 	// #367
   1607c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16080:	str	w3, [sp, #92]
   16084:	mov	x0, x20
   16088:	blr	x2
   1608c:	mov	w4, w0
   16090:	ldr	w3, [sp, #92]
   16094:	b	15d00 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa28>
   16098:	mov	x4, x3
   1609c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   160a0:	mov	x3, x0
   160a4:	add	x2, x2, #0x978
   160a8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   160ac:	mov	w1, #0x3c                  	// #60
   160b0:	add	x0, x0, #0x698
   160b4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   160b8:	mov	x4, x0
   160bc:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   160c0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   160c4:	add	x2, x2, #0x978
   160c8:	add	x0, x0, #0x698
   160cc:	mov	w1, #0x6b                  	// #107
   160d0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   160d4:	nop
   160d8:	stp	x19, x20, [sp, #-336]!
   160dc:	stp	x23, x24, [sp, #32]
   160e0:	ldr	x23, [x1, #16]
   160e4:	stp	x21, x22, [sp, #16]
   160e8:	mov	x22, x2
   160ec:	ldr	x4, [x0, #16]
   160f0:	stp	x25, x26, [sp, #48]
   160f4:	add	x2, x23, #0x8
   160f8:	ldr	x3, [x2, #520]
   160fc:	stp	x27, x28, [sp, #64]
   16100:	ldr	x25, [x22]
   16104:	str	x30, [sp, #80]
   16108:	cmp	x4, x3
   1610c:	b.ne	16318 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1040>  // b.any
   16110:	str	xzr, [x0, #1064]
   16114:	mov	x19, x0
   16118:	add	x21, x0, #0x428
   1611c:	ldr	x1, [x23, #8]
   16120:	cbz	x1, 1617c <__sanitizer_install_malloc_and_free_hooks@@Base+0xea4>
   16124:	mov	x3, #0x0                   	// #0
   16128:	mov	x6, #0x1                   	// #1
   1612c:	rbit	x0, x1
   16130:	clz	x0, x0
   16134:	lsl	x5, x6, x0
   16138:	orr	x4, x5, x3
   1613c:	str	x4, [x19, #1064]
   16140:	bic	x1, x1, x5
   16144:	cmp	x4, x3
   16148:	add	x0, x0, #0x1
   1614c:	b.eq	16168 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe90>  // b.none
   16150:	str	xzr, [x21, x0, lsl #3]
   16154:	ldr	x3, [x2, x0, lsl #3]
   16158:	str	x3, [x21, x0, lsl #3]
   1615c:	cbz	x1, 1617c <__sanitizer_install_malloc_and_free_hooks@@Base+0xea4>
   16160:	ldr	x3, [x19, #1064]
   16164:	b	1612c <__sanitizer_install_malloc_and_free_hooks@@Base+0xe54>
   16168:	ldr	x3, [x21, x0, lsl #3]
   1616c:	ldr	x4, [x2, x0, lsl #3]
   16170:	orr	x3, x3, x4
   16174:	str	x3, [x21, x0, lsl #3]
   16178:	cbnz	x1, 16160 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe88>
   1617c:	mov	x3, x25
   16180:	cmp	x25, #0xfff
   16184:	b.ls	1635c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1084>  // b.plast
   16188:	ldr	x3, [x19, #16]
   1618c:	and	x4, x25, #0xfffffffffffff000
   16190:	cmp	x3, x4
   16194:	b.ne	1637c <__sanitizer_install_malloc_and_free_hooks@@Base+0x10a4>  // b.any
   16198:	ubfx	x24, x25, #6, #6
   1619c:	mov	x5, #0x1                   	// #1
   161a0:	ldr	x20, [x19, #1064]
   161a4:	add	x0, x24, x5
   161a8:	and	x6, x25, #0xfff
   161ac:	lsl	x24, x5, x24
   161b0:	add	x11, x21, x0, lsl #3
   161b4:	ands	x20, x20, x24
   161b8:	lsl	x5, x5, x25
   161bc:	b.eq	161ec <__sanitizer_install_malloc_and_free_hooks@@Base+0xf14>  // b.none
   161c0:	ldr	x0, [x21, x0, lsl #3]
   161c4:	tst	x5, x0
   161c8:	b.eq	161ec <__sanitizer_install_malloc_and_free_hooks@@Base+0xf14>  // b.none
   161cc:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   161d0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   161d4:	add	x2, x2, #0x8a8
   161d8:	add	x0, x0, #0x698
   161dc:	mov	x4, #0x0                   	// #0
   161e0:	mov	x3, #0x0                   	// #0
   161e4:	mov	w1, #0x13a                 	// #314
   161e8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   161ec:	add	x8, x6, x6, lsl #6
   161f0:	str	x6, [sp, #176]
   161f4:	add	x7, x19, #0x630
   161f8:	mov	x26, #0x1                   	// #1
   161fc:	add	x3, sp, #0xb8
   16200:	add	x10, x7, x8, lsl #3
   16204:	mov	x9, x26
   16208:	cbz	x20, 16240 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf68>
   1620c:	ldr	x20, [x11]
   16210:	ands	x20, x5, x20
   16214:	b.eq	16240 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf68>  // b.none
   16218:	mov	x0, #0x1                   	// #1
   1621c:	cmp	x0, x26
   16220:	b.eq	163b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10dc>  // b.none
   16224:	add	x26, x26, #0x1
   16228:	cmp	x26, #0x15
   1622c:	b.eq	16548 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1270>  // b.none
   16230:	ldr	x20, [x19, #1064]
   16234:	str	x6, [sp, #176]
   16238:	and	x20, x20, x24
   1623c:	cbnz	x20, 1620c <__sanitizer_install_malloc_and_free_hooks@@Base+0xf34>
   16240:	sub	x4, x26, #0x1
   16244:	mov	x28, #0x0                   	// #0
   16248:	mov	x27, #0x0                   	// #0
   1624c:	mov	x12, #0x0                   	// #0
   16250:	cbnz	x27, 162f4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x101c>
   16254:	cbnz	x20, 16224 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf4c>
   16258:	ldr	x27, [x10]
   1625c:	cbz	x27, 16224 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf4c>
   16260:	cbnz	x28, 16330 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1058>
   16264:	mov	x1, x8
   16268:	mov	x20, x28
   1626c:	rbit	x12, x27
   16270:	clz	x12, x12
   16274:	add	x0, x1, x12
   16278:	add	x0, x0, #0x1
   1627c:	ldr	x2, [x7, x0, lsl #3]
   16280:	cbz	x2, 16394 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10bc>
   16284:	add	x1, x12, x28
   16288:	lsl	x0, x9, x12
   1628c:	mov	x28, x2
   16290:	bic	x27, x27, x0
   16294:	rbit	x0, x28
   16298:	clz	x0, x0
   1629c:	add	x1, x0, x1, lsl #6
   162a0:	lsl	x2, x9, x0
   162a4:	bic	x28, x28, x2
   162a8:	orr	x0, x28, x27
   162ac:	cbz	x0, 16348 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1070>
   162b0:	mov	x0, x7
   162b4:	mov	x2, x21
   162b8:	stp	x7, x3, [sp, #104]
   162bc:	stp	x4, x6, [sp, #120]
   162c0:	stp	x10, x12, [sp, #136]
   162c4:	stp	x11, x5, [sp, #152]
   162c8:	str	x8, [sp, #168]
   162cc:	bl	16f20 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c48>
   162d0:	mov	x9, #0x1                   	// #1
   162d4:	ldp	x7, x3, [sp, #104]
   162d8:	ldp	x4, x6, [sp, #120]
   162dc:	ldp	x10, x12, [sp, #136]
   162e0:	ldp	x11, x5, [sp, #152]
   162e4:	ldr	x8, [sp, #168]
   162e8:	cbz	x0, 16250 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf78>
   162ec:	add	x0, x0, x9
   162f0:	b	1621c <__sanitizer_install_malloc_and_free_hooks@@Base+0xf44>
   162f4:	lsl	x0, x20, #6
   162f8:	cbz	x28, 1633c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1064>
   162fc:	rbit	x1, x28
   16300:	add	x0, x12, x0
   16304:	clz	x1, x1
   16308:	lsl	x2, x9, x1
   1630c:	add	x1, x1, x0, lsl #6
   16310:	bic	x28, x28, x2
   16314:	b	162b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xfd8>
   16318:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1631c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16320:	add	x2, x2, #0x978
   16324:	add	x0, x0, #0x698
   16328:	mov	w1, #0x6b                  	// #107
   1632c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16330:	mov	x1, x12
   16334:	mov	x27, #0x0                   	// #0
   16338:	b	16294 <__sanitizer_install_malloc_and_free_hooks@@Base+0xfbc>
   1633c:	add	x1, x8, x0
   16340:	mov	x28, x0
   16344:	b	1626c <__sanitizer_install_malloc_and_free_hooks@@Base+0xf94>
   16348:	add	x20, x20, #0x1
   1634c:	mov	x27, #0x0                   	// #0
   16350:	mov	x28, #0x0                   	// #0
   16354:	b	162b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xfd8>
   16358:	mov	x3, x5
   1635c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16360:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16364:	add	x2, x2, #0x680
   16368:	add	x0, x0, #0x698
   1636c:	mov	x4, #0x1000                	// #4096
   16370:	mov	w1, #0x16e                 	// #366
   16374:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16378:	mov	x3, x1
   1637c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16380:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16384:	add	x2, x2, #0x948
   16388:	add	x0, x0, #0x698
   1638c:	mov	w1, #0x16f                 	// #367
   16390:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16394:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16398:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1639c:	add	x2, x2, #0x5f0
   163a0:	add	x0, x0, #0x610
   163a4:	mov	x4, #0x0                   	// #0
   163a8:	mov	x3, #0x0                   	// #0
   163ac:	mov	w1, #0x133                 	// #307
   163b0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   163b4:	add	x7, sp, #0xb0
   163b8:	mov	x0, x7
   163bc:	add	x2, x7, x26, lsl #3
   163c0:	b	163d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1100>
   163c4:	ldr	x1, [x19, #16]
   163c8:	add	x3, x3, x1
   163cc:	str	x3, [x0], #8
   163d0:	cmp	x2, x0
   163d4:	b.eq	16400 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1128>  // b.none
   163d8:	ldr	x3, [x0]
   163dc:	cmp	x3, #0xfff
   163e0:	b.ls	163c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10ec>  // b.plast
   163e4:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   163e8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   163ec:	add	x2, x2, #0x8c8
   163f0:	add	x0, x0, #0x698
   163f4:	mov	x4, #0x1000                	// #4096
   163f8:	mov	w1, #0x16b                 	// #363
   163fc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16400:	ldr	x3, [sp, #176]
   16404:	cmp	x25, x3
   16408:	b.ne	16580 <__sanitizer_install_malloc_and_free_hooks@@Base+0x12a8>  // b.any
   1640c:	ldr	x3, [x22]
   16410:	cmp	x3, x25
   16414:	b.ne	16558 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1280>  // b.any
   16418:	add	x10, x19, #0x10
   1641c:	mov	x0, #0x14                  	// #20
   16420:	cmp	x26, #0x14
   16424:	mov	x13, #0xa40                 	// #2624
   16428:	mov	x11, #0x1146                	// #4422
   1642c:	add	x12, x10, #0x410, lsl #12
   16430:	add	x9, x23, #0x630
   16434:	csel	x26, x26, x0, ls  // ls = plast
   16438:	mov	x8, #0x1                   	// #1
   1643c:	mov	w0, #0x1                   	// #1
   16440:	movk	x13, #0x21, lsl #16
   16444:	movk	x11, #0x4, lsl #16
   16448:	str	w26, [x23, #1576]
   1644c:	strb	w0, [x23, #2224]
   16450:	udiv	x0, x8, x26
   16454:	add	x2, x7, x8, lsl #3
   16458:	ldur	x5, [x2, #-8]
   1645c:	msub	x0, x0, x26, x8
   16460:	cmp	x5, #0xfff
   16464:	b.ls	16358 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1080>  // b.plast
   16468:	and	x4, x5, #0xfffffffffffff000
   1646c:	cmp	x1, x4
   16470:	b.ne	16378 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10a0>  // b.any
   16474:	ldr	x3, [x7, x0, lsl #3]
   16478:	and	x5, x5, #0xfff
   1647c:	cmp	x3, #0xfff
   16480:	b.ls	1635c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1084>  // b.plast
   16484:	and	x4, x3, #0xfffffffffffff000
   16488:	cmp	x1, x4
   1648c:	b.ne	16378 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10a0>  // b.any
   16490:	ldr	x4, [x12, #2608]
   16494:	and	x6, x3, #0xfff
   16498:	cbz	x4, 16574 <__sanitizer_install_malloc_and_free_hooks@@Base+0x129c>
   1649c:	add	x0, x19, x13
   164a0:	mov	x2, #0x0                   	// #0
   164a4:	b	164b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x11e0>
   164a8:	add	x2, x2, #0x1
   164ac:	add	x0, x0, #0x10
   164b0:	cmp	x4, x2
   164b4:	b.eq	16538 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1260>  // b.none
   164b8:	ldrh	w3, [x0]
   164bc:	cmp	x5, x3
   164c0:	b.ne	164a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x11d0>  // b.any
   164c4:	ldrh	w3, [x0, #2]
   164c8:	cmp	x6, x3
   164cc:	b.ne	164a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x11d0>  // b.any
   164d0:	add	x0, x19, x2, lsl #4
   164d4:	add	x0, x0, #0x210, lsl #12
   164d8:	ldrsw	x4, [x0, #2636]
   164dc:	ldr	w2, [x0, #2628]
   164e0:	ldr	w0, [x0, #2632]
   164e4:	add	x5, x5, x11
   164e8:	add	x3, x6, x11
   164ec:	cmp	x26, x8
   164f0:	add	x8, x8, #0x1
   164f4:	ldr	x5, [x10, x5, lsl #3]
   164f8:	ldr	x3, [x10, x3, lsl #3]
   164fc:	str	x4, [x9]
   16500:	ldr	x4, [x5, #16]
   16504:	str	x4, [x9, #8]
   16508:	ldr	x3, [x3, #16]
   1650c:	str	x3, [x9, #16]
   16510:	stp	w0, w2, [x9, #24]
   16514:	add	x9, x9, #0x20
   16518:	b.ne	16450 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1178>  // b.any
   1651c:	ldp	x21, x22, [sp, #16]
   16520:	ldp	x23, x24, [sp, #32]
   16524:	ldp	x25, x26, [sp, #48]
   16528:	ldp	x27, x28, [sp, #64]
   1652c:	ldr	x30, [sp, #80]
   16530:	ldp	x19, x20, [sp], #336
   16534:	ret
   16538:	mov	w0, #0xffffffff            	// #-1
   1653c:	mov	x4, #0x0                   	// #0
   16540:	mov	w2, w0
   16544:	b	164e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x120c>
   16548:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1654c:	add	x0, x0, #0x920
   16550:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   16554:	b	1651c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1244>
   16558:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1655c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16560:	mov	x4, x25
   16564:	add	x2, x2, #0x900
   16568:	add	x0, x0, #0x848
   1656c:	mov	w1, #0x80                  	// #128
   16570:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16574:	mov	w0, #0xffffffff            	// #-1
   16578:	mov	w2, w0
   1657c:	b	164e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x120c>
   16580:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16584:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16588:	mov	x4, x25
   1658c:	add	x2, x2, #0x8e0
   16590:	add	x0, x0, #0x698
   16594:	mov	w1, #0x13f                 	// #319
   16598:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1659c:	nop
   165a0:	stp	x19, x20, [sp, #-64]!
   165a4:	mov	x19, x0
   165a8:	stp	x21, x22, [sp, #16]
   165ac:	ldr	x21, [x1, #16]
   165b0:	ldr	x0, [x21, #8]
   165b4:	str	x30, [sp, #40]
   165b8:	cbz	x0, 1677c <__sanitizer_install_malloc_and_free_hooks@@Base+0x14a4>
   165bc:	ldr	x0, [x2]
   165c0:	mov	x22, x1
   165c4:	mov	x20, x2
   165c8:	cbz	x0, 165dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1304>
   165cc:	ldr	x2, [x19, #16]
   165d0:	ldr	x1, [x21, #528]
   165d4:	cmp	x1, x2
   165d8:	b.eq	1679c <__sanitizer_install_malloc_and_free_hooks@@Base+0x14c4>  // b.none
   165dc:	add	x0, x19, #0x8
   165e0:	mov	w2, #0x1                   	// #1
   165e4:	str	x23, [sp, #32]
   165e8:	ldxrb	w1, [x0]
   165ec:	stxrb	w3, w2, [x0]
   165f0:	cbnz	w3, 165e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1310>
   165f4:	dmb	ish
   165f8:	tst	w1, #0xff
   165fc:	b.eq	16604 <__sanitizer_install_malloc_and_free_hooks@@Base+0x132c>  // b.none
   16600:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   16604:	add	x23, x21, #0x8
   16608:	mov	x1, x21
   1660c:	mov	x0, x19
   16610:	mov	x2, x20
   16614:	bl	15790 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4b8>
   16618:	ldr	x1, [x19, #16]
   1661c:	ldr	x3, [x23, #520]
   16620:	ldr	x0, [x20]
   16624:	cmp	x1, x3
   16628:	b.ne	16924 <__sanitizer_install_malloc_and_free_hooks@@Base+0x164c>  // b.any
   1662c:	cmp	x0, #0xfff
   16630:	b.ls	16940 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1668>  // b.plast
   16634:	and	x4, x0, #0xfffffffffffff000
   16638:	cmp	x1, x4
   1663c:	b.ne	16960 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1688>  // b.any
   16640:	ldr	x2, [x21, #8]
   16644:	ubfx	x1, x0, #6, #6
   16648:	mov	x3, #0x1                   	// #1
   1664c:	add	x8, x1, x3
   16650:	lsl	x5, x3, x1
   16654:	and	x1, x0, #0xfff
   16658:	tst	x5, x2
   1665c:	lsl	x3, x3, x0
   16660:	b.ne	1678c <__sanitizer_install_malloc_and_free_hooks@@Base+0x14b4>  // b.any
   16664:	add	x6, x19, #0x208, lsl #12
   16668:	add	x4, x1, x1, lsl #6
   1666c:	add	x10, x19, #0x630
   16670:	str	xzr, [x6, #1584]
   16674:	ldr	x1, [x10, x4, lsl #3]
   16678:	cbz	x1, 16828 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1550>
   1667c:	add	x9, x19, #0x208, lsl #12
   16680:	mov	x2, #0x0                   	// #0
   16684:	add	x9, x9, #0x630
   16688:	mov	x11, #0x1                   	// #1
   1668c:	rbit	x0, x1
   16690:	clz	x0, x0
   16694:	lsl	x0, x11, x0
   16698:	orr	x7, x0, x2
   1669c:	cmp	x7, x2
   166a0:	rbit	x2, x1
   166a4:	str	x7, [x6, #1584]
   166a8:	clz	x2, x2
   166ac:	bic	x1, x1, x0
   166b0:	add	x0, x2, #0x1
   166b4:	add	x2, x2, x4
   166b8:	b.eq	16810 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1538>  // b.none
   166bc:	add	x2, x2, #0x1
   166c0:	str	xzr, [x9, x0, lsl #3]
   166c4:	ldr	x2, [x10, x2, lsl #3]
   166c8:	str	x2, [x9, x0, lsl #3]
   166cc:	cbz	x1, 16828 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1550>
   166d0:	ldr	x2, [x6, #1584]
   166d4:	b	1668c <__sanitizer_install_malloc_and_free_hooks@@Base+0x13b4>
   166d8:	ldr	x0, [x21, #8]
   166dc:	mov	x4, #0x1                   	// #1
   166e0:	ldr	x3, [x6, #2104]
   166e4:	ands	x0, x3, x0
   166e8:	b.eq	16770 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1498>  // b.none
   166ec:	rbit	x1, x0
   166f0:	clz	x1, x1
   166f4:	mov	x2, x1
   166f8:	lsl	x1, x4, x1
   166fc:	tst	x1, x3
   16700:	bic	x0, x0, x1
   16704:	b.eq	1697c <__sanitizer_install_malloc_and_free_hooks@@Base+0x16a4>  // b.none
   16708:	add	x1, x2, #0x1
   1670c:	ldr	x2, [x23, x1, lsl #3]
   16710:	ldr	x1, [x7, x1, lsl #3]
   16714:	tst	x2, x1
   16718:	b.eq	1697c <__sanitizer_install_malloc_and_free_hooks@@Base+0x16a4>  // b.none
   1671c:	ldr	x1, [x22]
   16720:	adrp	x0, 16000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd28>
   16724:	add	x0, x0, #0x9f8
   16728:	mov	w3, #0x0                   	// #0
   1672c:	ldr	x2, [x20]
   16730:	ldr	x4, [x1]
   16734:	cmp	x4, x0
   16738:	b.ne	169bc <__sanitizer_install_malloc_and_free_hooks@@Base+0x16e4>  // b.any
   1673c:	ldr	x1, [x1, #8]
   16740:	adrp	x0, 16000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd28>
   16744:	add	x0, x0, #0xa00
   16748:	mov	w4, #0x0                   	// #0
   1674c:	cmp	x1, x0
   16750:	b.ne	1699c <__sanitizer_install_malloc_and_free_hooks@@Base+0x16c4>  // b.any
   16754:	mov	x1, x23
   16758:	add	x0, x19, #0x10
   1675c:	bl	16c40 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1968>
   16760:	mov	x2, x20
   16764:	mov	x1, x22
   16768:	mov	x0, x19
   1676c:	bl	160d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe00>
   16770:	dmb	ish
   16774:	strb	wzr, [x19, #8]
   16778:	ldr	x23, [sp, #32]
   1677c:	ldp	x21, x22, [sp, #16]
   16780:	ldr	x30, [sp, #40]
   16784:	ldp	x19, x20, [sp], #64
   16788:	ret
   1678c:	ldr	x0, [x23, x8, lsl #3]
   16790:	tst	x3, x0
   16794:	b.eq	16664 <__sanitizer_install_malloc_and_free_hooks@@Base+0x138c>  // b.none
   16798:	b	16770 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1498>
   1679c:	and	x2, x0, #0xfffffffffffff000
   167a0:	cmp	x1, x2
   167a4:	b.ne	165dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1304>  // b.any
   167a8:	ldr	x6, [x21, #1568]
   167ac:	cbz	x6, 1677c <__sanitizer_install_malloc_and_free_hooks@@Base+0x14a4>
   167b0:	ubfx	x3, x0, #6, #6
   167b4:	mov	x1, #0x1                   	// #1
   167b8:	add	x5, x19, #0x630
   167bc:	add	x8, x21, #0x420
   167c0:	add	x10, x3, x1
   167c4:	lsl	x0, x1, x0
   167c8:	lsl	x3, x1, x3
   167cc:	mov	w7, #0x208                 	// #520
   167d0:	mov	x1, #0x0                   	// #0
   167d4:	mov	w9, #0x41                  	// #65
   167d8:	lsl	x2, x1, #3
   167dc:	ldr	w2, [x8, x2]
   167e0:	umull	x4, w2, w7
   167e4:	ldr	x4, [x5, x4]
   167e8:	tst	x3, x4
   167ec:	b.eq	165dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1304>  // b.none
   167f0:	umaddl	x2, w2, w9, x10
   167f4:	ldr	x2, [x5, x2, lsl #3]
   167f8:	tst	x0, x2
   167fc:	b.eq	165dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1304>  // b.none
   16800:	add	x1, x1, #0x1
   16804:	cmp	x6, x1
   16808:	b.ne	167d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1500>  // b.any
   1680c:	b	1677c <__sanitizer_install_malloc_and_free_hooks@@Base+0x14a4>
   16810:	add	x2, x2, #0x1
   16814:	ldr	x7, [x9, x0, lsl #3]
   16818:	ldr	x2, [x10, x2, lsl #3]
   1681c:	orr	x2, x7, x2
   16820:	str	x2, [x9, x0, lsl #3]
   16824:	cbnz	x1, 166d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x13f8>
   16828:	add	x7, x19, #0x208, lsl #12
   1682c:	add	x9, x19, #0x208, lsl #12
   16830:	add	x7, x7, #0x838
   16834:	add	x9, x9, #0x630
   16838:	str	x5, [x6, #2104]
   1683c:	mov	w12, #0x40                  	// #64
   16840:	mov	x13, #0x208                 	// #520
   16844:	mov	x5, #0x1                   	// #1
   16848:	str	x3, [x7, x8, lsl #3]
   1684c:	ldr	x0, [x6, #1584]
   16850:	cbz	x0, 166d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1400>
   16854:	rbit	x1, x0
   16858:	clz	x1, x1
   1685c:	add	x3, x1, #0x1
   16860:	lsl	x4, x5, x1
   16864:	bic	x0, x0, x4
   16868:	str	x0, [x6, #1584]
   1686c:	ldr	x2, [x9, x3, lsl #3]
   16870:	cbz	x2, 169d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1700>
   16874:	rbit	x11, x2
   16878:	clz	x11, x11
   1687c:	lsl	x8, x5, x11
   16880:	bic	x2, x2, x8
   16884:	str	x2, [x9, x3, lsl #3]
   16888:	cbz	x2, 16894 <__sanitizer_install_malloc_and_free_hooks@@Base+0x15bc>
   1688c:	orr	x0, x4, x0
   16890:	str	x0, [x6, #1584]
   16894:	sxtw	x11, w11
   16898:	ldr	x3, [x6, #2104]
   1689c:	smaddl	x1, w1, w12, x11
   168a0:	lsr	x0, x1, #6
   168a4:	lsl	x2, x5, x1
   168a8:	add	x4, x0, #0x1
   168ac:	lsl	x0, x5, x0
   168b0:	tst	x3, x0
   168b4:	b.ne	16984 <__sanitizer_install_malloc_and_free_hooks@@Base+0x16ac>  // b.any
   168b8:	orr	x0, x3, x0
   168bc:	str	x0, [x6, #2104]
   168c0:	str	x2, [x7, x4, lsl #3]
   168c4:	mul	x0, x1, x13
   168c8:	add	x1, x1, x1, lsl #6
   168cc:	ldr	x2, [x10, x0]
   168d0:	ldr	x11, [x6, #1584]
   168d4:	cbz	x2, 1684c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1574>
   168d8:	rbit	x4, x2
   168dc:	clz	x4, x4
   168e0:	mov	x0, x4
   168e4:	add	x3, x0, #0x1
   168e8:	lsl	x4, x5, x4
   168ec:	orr	x8, x4, x11
   168f0:	str	x8, [x6, #1584]
   168f4:	cmp	x11, x8
   168f8:	bic	x2, x2, x4
   168fc:	lsl	x3, x3, #3
   16900:	b.eq	16908 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1630>  // b.none
   16904:	str	xzr, [x9, x3]
   16908:	add	x0, x0, x1
   1690c:	add	x0, x0, #0x1
   16910:	ldr	x4, [x9, x3]
   16914:	ldr	x0, [x10, x0, lsl #3]
   16918:	orr	x0, x4, x0
   1691c:	str	x0, [x9, x3]
   16920:	b	168d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x15f8>
   16924:	mov	x4, x1
   16928:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1692c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16930:	add	x2, x2, #0x978
   16934:	add	x0, x0, #0x698
   16938:	mov	w1, #0x6b                  	// #107
   1693c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16940:	mov	x3, x0
   16944:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16948:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1694c:	add	x2, x2, #0x680
   16950:	add	x0, x0, #0x698
   16954:	mov	x4, #0x1000                	// #4096
   16958:	mov	w1, #0x16e                 	// #366
   1695c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16960:	mov	x3, x1
   16964:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16968:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1696c:	add	x2, x2, #0x948
   16970:	add	x0, x0, #0x698
   16974:	mov	w1, #0x16f                 	// #367
   16978:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1697c:	cbnz	x0, 166ec <__sanitizer_install_malloc_and_free_hooks@@Base+0x1414>
   16980:	b	16770 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1498>
   16984:	ldr	x0, [x7, x4, lsl #3]
   16988:	orr	x2, x0, x2
   1698c:	str	x2, [x7, x4, lsl #3]
   16990:	cmp	x0, x2
   16994:	b.eq	1684c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1574>  // b.none
   16998:	b	168c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x15ec>
   1699c:	str	x2, [sp, #48]
   169a0:	mov	x0, x22
   169a4:	str	w3, [sp, #60]
   169a8:	blr	x1
   169ac:	mov	w4, w0
   169b0:	ldr	w3, [sp, #60]
   169b4:	ldr	x2, [sp, #48]
   169b8:	b	16754 <__sanitizer_install_malloc_and_free_hooks@@Base+0x147c>
   169bc:	str	x2, [sp, #48]
   169c0:	mov	x0, x22
   169c4:	blr	x4
   169c8:	mov	w3, w0
   169cc:	ldr	x1, [x22]
   169d0:	ldr	x2, [sp, #48]
   169d4:	b	1673c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1464>
   169d8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   169dc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   169e0:	add	x2, x2, #0x2d0
   169e4:	add	x0, x0, #0x610
   169e8:	mov	x4, #0x0                   	// #0
   169ec:	mov	x3, #0x0                   	// #0
   169f0:	mov	w1, #0x31                  	// #49
   169f4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   169f8:	mov	w0, #0x0                   	// #0
   169fc:	ret
   16a00:	mov	w0, #0x0                   	// #0
   16a04:	ret
   16a08:	stp	x19, x20, [sp, #-112]!
   16a0c:	add	x1, x1, x1, lsl #6
   16a10:	mov	x19, #0x0                   	// #0
   16a14:	stp	x21, x22, [sp, #16]
   16a18:	mov	x22, x0
   16a1c:	add	x21, x1, #0x1
   16a20:	stp	x23, x24, [sp, #32]
   16a24:	sub	x23, x4, #0x1
   16a28:	mov	x20, #0x0                   	// #0
   16a2c:	stp	x25, x26, [sp, #48]
   16a30:	mov	x26, x3
   16a34:	add	x3, x3, #0x8
   16a38:	stp	x27, x28, [sp, #64]
   16a3c:	add	x27, x0, x1, lsl #3
   16a40:	mov	x25, #0x0                   	// #0
   16a44:	mov	x28, #0x0                   	// #0
   16a48:	mov	x24, #0x1                   	// #1
   16a4c:	str	x30, [sp, #80]
   16a50:	cbnz	x23, 16a94 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17bc>
   16a54:	mov	x1, #0x1                   	// #1
   16a58:	cbnz	x20, 16b38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1860>
   16a5c:	cbnz	x28, 16bdc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1904>
   16a60:	ldr	x20, [x27]
   16a64:	cbz	x20, 16bdc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1904>
   16a68:	cbz	x19, 16b54 <__sanitizer_install_malloc_and_free_hooks@@Base+0x187c>
   16a6c:	mov	x20, #0x0                   	// #0
   16a70:	rbit	x0, x19
   16a74:	clz	x0, x0
   16a78:	lsl	x0, x1, x0
   16a7c:	bic	x19, x19, x0
   16a80:	orr	x0, x19, x20
   16a84:	cbnz	x0, 16a58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1780>
   16a88:	add	x28, x28, #0x1
   16a8c:	mov	x19, #0x0                   	// #0
   16a90:	b	16a5c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1784>
   16a94:	cbnz	x20, 16b98 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18c0>
   16a98:	cbnz	x28, 16bdc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1904>
   16a9c:	ldr	x20, [x27]
   16aa0:	cbz	x20, 16bdc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1904>
   16aa4:	cbz	x19, 16bb4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18dc>
   16aa8:	mov	x1, x25
   16aac:	mov	x20, #0x0                   	// #0
   16ab0:	rbit	x0, x19
   16ab4:	clz	x0, x0
   16ab8:	lsl	x4, x24, x0
   16abc:	bic	x19, x19, x4
   16ac0:	orr	x4, x19, x20
   16ac4:	cbnz	x4, 16ad4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17fc>
   16ac8:	add	x28, x28, #0x1
   16acc:	mov	x20, #0x0                   	// #0
   16ad0:	mov	x19, #0x0                   	// #0
   16ad4:	sxtw	x0, w0
   16ad8:	add	x1, x0, x1, lsl #6
   16adc:	str	x1, [x26, #8]
   16ae0:	cmp	x1, #0x1, lsl #12
   16ae4:	b.hi	16c1c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1944>  // b.pmore
   16ae8:	lsr	x0, x1, #12
   16aec:	ubfx	x4, x1, #6, #6
   16af0:	lsl	x6, x24, x4
   16af4:	ldr	x5, [x2, x0, lsl #3]
   16af8:	tst	x6, x5
   16afc:	b.eq	16b78 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18a0>  // b.none
   16b00:	add	x0, x4, x0, lsl #6
   16b04:	lsl	x4, x24, x1
   16b08:	add	x0, x0, #0x1
   16b0c:	ldr	x5, [x2, x0, lsl #3]
   16b10:	tst	x4, x5
   16b14:	b.eq	16b78 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18a0>  // b.none
   16b18:	mov	x0, #0x2                   	// #2
   16b1c:	ldp	x21, x22, [sp, #16]
   16b20:	ldp	x23, x24, [sp, #32]
   16b24:	ldp	x25, x26, [sp, #48]
   16b28:	ldp	x27, x28, [sp, #64]
   16b2c:	ldr	x30, [sp, #80]
   16b30:	ldp	x19, x20, [sp], #112
   16b34:	ret
   16b38:	cbz	x19, 16b54 <__sanitizer_install_malloc_and_free_hooks@@Base+0x187c>
   16b3c:	rbit	x0, x19
   16b40:	clz	x0, x0
   16b44:	lsl	x0, x1, x0
   16b48:	bic	x19, x19, x0
   16b4c:	cbz	x20, 16a5c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1784>
   16b50:	b	16b38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1860>
   16b54:	rbit	x2, x20
   16b58:	add	x0, x21, x28, lsl #6
   16b5c:	clz	x2, x2
   16b60:	add	x0, x0, x2
   16b64:	ldr	x19, [x22, x0, lsl #3]
   16b68:	cbz	x19, 16bfc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1924>
   16b6c:	lsl	x2, x1, x2
   16b70:	bic	x20, x20, x2
   16b74:	b	16a70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1798>
   16b78:	mov	x4, x23
   16b7c:	mov	x0, x22
   16b80:	stp	x2, x3, [sp, #96]
   16b84:	bl	16a08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1730>
   16b88:	ldp	x2, x3, [sp, #96]
   16b8c:	cbz	x0, 16a50 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1778>
   16b90:	add	x0, x0, #0x1
   16b94:	b	16be0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1908>
   16b98:	cbz	x19, 16bb4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18dc>
   16b9c:	rbit	x0, x19
   16ba0:	add	x1, x25, x28, lsl #6
   16ba4:	clz	x0, x0
   16ba8:	lsl	x4, x24, x0
   16bac:	bic	x19, x19, x4
   16bb0:	b	16ad4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17fc>
   16bb4:	rbit	x25, x20
   16bb8:	clz	x25, x25
   16bbc:	add	x1, x25, x28, lsl #6
   16bc0:	mov	x0, x25
   16bc4:	add	x4, x1, x21
   16bc8:	ldr	x19, [x22, x4, lsl #3]
   16bcc:	cbz	x19, 16bfc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1924>
   16bd0:	lsl	x0, x24, x0
   16bd4:	bic	x20, x20, x0
   16bd8:	b	16ab0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17d8>
   16bdc:	mov	x0, #0x0                   	// #0
   16be0:	ldp	x21, x22, [sp, #16]
   16be4:	ldp	x23, x24, [sp, #32]
   16be8:	ldp	x25, x26, [sp, #48]
   16bec:	ldp	x27, x28, [sp, #64]
   16bf0:	ldr	x30, [sp, #80]
   16bf4:	ldp	x19, x20, [sp], #112
   16bf8:	ret
   16bfc:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16c00:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16c04:	add	x2, x2, #0x5f0
   16c08:	add	x0, x0, #0x610
   16c0c:	mov	x4, #0x0                   	// #0
   16c10:	mov	x3, #0x0                   	// #0
   16c14:	mov	w1, #0x133                 	// #307
   16c18:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16c1c:	mov	x3, x1
   16c20:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16c24:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16c28:	add	x2, x2, #0x668
   16c2c:	add	x0, x0, #0x610
   16c30:	mov	x4, #0x1000                	// #4096
   16c34:	mov	w1, #0x144                 	// #324
   16c38:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16c3c:	nop
   16c40:	stp	x19, x20, [sp, #-352]!
   16c44:	mov	x8, x0
   16c48:	ldr	x0, [x0]
   16c4c:	ldr	x5, [x1, #520]
   16c50:	str	x30, [sp, #16]
   16c54:	cmp	x0, x5
   16c58:	b.eq	16c6c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1994>  // b.none
   16c5c:	str	xzr, [x1]
   16c60:	str	x0, [x1, #520]
   16c64:	str	xzr, [x1, #1040]
   16c68:	str	xzr, [x1, #1560]
   16c6c:	cmp	x2, #0xfff
   16c70:	b.ls	16e64 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b8c>  // b.plast
   16c74:	ldr	x5, [x8]
   16c78:	and	x6, x2, #0xfffffffffffff000
   16c7c:	cmp	x5, x6
   16c80:	b.ne	16e84 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bac>  // b.any
   16c84:	cmp	x5, x0
   16c88:	b.ne	16ea4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bcc>  // b.any
   16c8c:	add	x12, x8, #0x208, lsl #12
   16c90:	str	xzr, [x12, #1568]
   16c94:	ldr	x5, [x1]
   16c98:	cbz	x5, 16d00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a28>
   16c9c:	add	x10, x8, #0x208, lsl #12
   16ca0:	mov	x6, #0x0                   	// #0
   16ca4:	add	x10, x10, #0x620
   16ca8:	mov	x11, #0x1                   	// #1
   16cac:	rbit	x0, x5
   16cb0:	clz	x0, x0
   16cb4:	lsl	x9, x11, x0
   16cb8:	orr	x7, x9, x6
   16cbc:	str	x7, [x12, #1568]
   16cc0:	bic	x5, x5, x9
   16cc4:	cmp	x7, x6
   16cc8:	add	x0, x0, #0x1
   16ccc:	b.eq	16ce8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a10>  // b.none
   16cd0:	str	xzr, [x10, x0, lsl #3]
   16cd4:	ldr	x6, [x1, x0, lsl #3]
   16cd8:	str	x6, [x10, x0, lsl #3]
   16cdc:	cbz	x5, 16cfc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a24>
   16ce0:	ldr	x6, [x12, #1568]
   16ce4:	b	16cac <__sanitizer_install_malloc_and_free_hooks@@Base+0x19d4>
   16ce8:	ldr	x6, [x10, x0, lsl #3]
   16cec:	ldr	x7, [x1, x0, lsl #3]
   16cf0:	orr	x6, x6, x7
   16cf4:	str	x6, [x10, x0, lsl #3]
   16cf8:	cbnz	x5, 16ce0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a08>
   16cfc:	ldr	x5, [x12, #1568]
   16d00:	ubfx	x0, x2, #6, #6
   16d04:	mov	x6, #0x1                   	// #1
   16d08:	add	x10, x8, #0x208, lsl #12
   16d0c:	add	x19, x0, x6
   16d10:	lsl	x16, x6, x0
   16d14:	mov	x11, x6
   16d18:	and	x14, x2, #0xfff
   16d1c:	add	x10, x10, #0x620
   16d20:	add	x17, x8, #0x620
   16d24:	add	x30, sp, #0x20
   16d28:	mov	x0, #0x0                   	// #0
   16d2c:	lsl	x13, x6, x2
   16d30:	mov	w20, #0x40                  	// #64
   16d34:	cbz	x5, 16da8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ad0>
   16d38:	rbit	x2, x5
   16d3c:	clz	x2, x2
   16d40:	add	x9, x2, #0x1
   16d44:	lsl	x7, x11, x2
   16d48:	bic	x5, x5, x7
   16d4c:	str	x5, [x12, #1568]
   16d50:	ldr	x6, [x10, x9, lsl #3]
   16d54:	cbz	x6, 16f00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c28>
   16d58:	rbit	x18, x6
   16d5c:	clz	x18, x18
   16d60:	lsl	x15, x11, x18
   16d64:	bic	x6, x6, x15
   16d68:	str	x6, [x10, x9, lsl #3]
   16d6c:	cbnz	x6, 16ecc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bf4>
   16d70:	sxtw	x18, w18
   16d74:	smaddl	x2, w2, w20, x18
   16d78:	add	x7, x2, x2, lsl #6
   16d7c:	add	x6, x19, x7
   16d80:	ldr	x5, [x17, x7, lsl #3]
   16d84:	tst	x5, x16
   16d88:	b.ne	16ed8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c00>  // b.any
   16d8c:	orr	x5, x5, x16
   16d90:	str	x5, [x17, x7, lsl #3]
   16d94:	str	x13, [x17, x6, lsl #3]
   16d98:	cmp	x0, #0x27
   16d9c:	b.ls	16ef0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c18>  // b.plast
   16da0:	ldr	x5, [x12, #1568]
   16da4:	cbnz	x5, 16d38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a60>
   16da8:	cbz	x0, 16e58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b80>
   16dac:	add	x15, x8, #0x410, lsl #12
   16db0:	mov	x16, #0x10a3                	// #4259
   16db4:	and	w14, w14, #0xffff
   16db8:	add	x17, sp, #0x20
   16dbc:	add	x11, x1, #0x418
   16dc0:	mov	x5, #0x1                   	// #1
   16dc4:	mov	x12, #0x1ffff               	// #131071
   16dc8:	movk	x16, #0x2, lsl #16
   16dcc:	ldr	x10, [x15, #2608]
   16dd0:	b	16de0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b08>
   16dd4:	cmp	x0, x5
   16dd8:	add	x5, x5, #0x1
   16ddc:	b.eq	16e58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b80>  // b.none
   16de0:	cmp	x10, x12
   16de4:	b.hi	16dd4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1afc>  // b.pmore
   16de8:	add	x2, x17, x5, lsl #3
   16dec:	ldr	x9, [x1, #1560]
   16df0:	ldur	x7, [x2, #-8]
   16df4:	and	w13, w7, #0xffff
   16df8:	cbz	x9, 16ec4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bec>
   16dfc:	mov	x2, #0x0                   	// #0
   16e00:	b	16e10 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b38>
   16e04:	add	x2, x2, #0x1
   16e08:	cmp	x2, x9
   16e0c:	b.eq	16ec4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bec>  // b.none
   16e10:	lsl	x6, x2, #3
   16e14:	ldr	w6, [x11, x6]
   16e18:	cmp	w6, w7
   16e1c:	b.ne	16e04 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b2c>  // b.any
   16e20:	add	x2, x1, x2, lsl #3
   16e24:	ldr	w7, [x2, #1052]
   16e28:	add	x6, x10, x16
   16e2c:	add	x10, x10, #0x1
   16e30:	str	x10, [x15, #2608]
   16e34:	cmp	x0, x5
   16e38:	lsl	x6, x6, #4
   16e3c:	add	x5, x5, #0x1
   16e40:	add	x2, x8, x6
   16e44:	strh	w13, [x8, x6]
   16e48:	strh	w14, [x2, #2]
   16e4c:	stp	w7, w3, [x2, #4]
   16e50:	str	w4, [x2, #12]
   16e54:	b.ne	16de0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b08>  // b.any
   16e58:	ldr	x30, [sp, #16]
   16e5c:	ldp	x19, x20, [sp], #352
   16e60:	ret
   16e64:	mov	x3, x2
   16e68:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16e6c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16e70:	add	x0, x0, #0x698
   16e74:	add	x2, x2, #0x680
   16e78:	mov	x4, #0x1000                	// #4096
   16e7c:	mov	w1, #0x16e                 	// #366
   16e80:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16e84:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16e88:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16e8c:	mov	x4, x6
   16e90:	mov	x3, x5
   16e94:	add	x2, x2, #0x948
   16e98:	add	x0, x0, #0x698
   16e9c:	mov	w1, #0x16f                 	// #367
   16ea0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16ea4:	mov	x3, x0
   16ea8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16eac:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16eb0:	mov	x4, x5
   16eb4:	add	x2, x2, #0x978
   16eb8:	add	x0, x0, #0x698
   16ebc:	mov	w1, #0x6b                  	// #107
   16ec0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16ec4:	mov	w7, #0x0                   	// #0
   16ec8:	b	16e28 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b50>
   16ecc:	orr	x7, x7, x5
   16ed0:	str	x7, [x12, #1568]
   16ed4:	b	16d70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a98>
   16ed8:	ldr	x7, [x17, x6, lsl #3]
   16edc:	cmp	x0, #0x27
   16ee0:	orr	x5, x7, x13
   16ee4:	str	x5, [x17, x6, lsl #3]
   16ee8:	ccmp	x7, x5, #0x4, ls  // ls = plast
   16eec:	b.eq	16da0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ac8>  // b.none
   16ef0:	str	x2, [x30, x0, lsl #3]
   16ef4:	add	x0, x0, #0x1
   16ef8:	ldr	x5, [x12, #1568]
   16efc:	b	16da4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1acc>
   16f00:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16f04:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   16f08:	add	x2, x2, #0x2d0
   16f0c:	add	x0, x0, #0x610
   16f10:	mov	x4, #0x0                   	// #0
   16f14:	mov	x3, #0x0                   	// #0
   16f18:	mov	w1, #0x31                  	// #49
   16f1c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   16f20:	stp	x19, x20, [sp, #-112]!
   16f24:	stp	x23, x24, [sp, #32]
   16f28:	mov	x24, x0
   16f2c:	mov	x0, x4
   16f30:	str	x30, [sp, #80]
   16f34:	cbnz	x4, 16f48 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c70>
   16f38:	ldp	x23, x24, [sp, #32]
   16f3c:	ldr	x30, [sp, #80]
   16f40:	ldp	x19, x20, [sp], #112
   16f44:	ret
   16f48:	str	x1, [x3]
   16f4c:	mov	x23, x3
   16f50:	cmp	x1, #0x1, lsl #12
   16f54:	b.hi	17154 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e7c>  // b.pmore
   16f58:	lsr	x3, x1, #12
   16f5c:	ubfx	x5, x1, #6, #6
   16f60:	mov	x4, #0x1                   	// #1
   16f64:	lsl	x7, x4, x5
   16f68:	ldr	x6, [x2, x3, lsl #3]
   16f6c:	tst	x7, x6
   16f70:	b.eq	16f94 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cbc>  // b.none
   16f74:	add	x3, x5, x3, lsl #6
   16f78:	lsl	x5, x4, x1
   16f7c:	add	x3, x3, x4
   16f80:	ldr	x6, [x2, x3, lsl #3]
   16f84:	tst	x5, x6
   16f88:	b.eq	16f94 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cbc>  // b.none
   16f8c:	mov	x0, x4
   16f90:	b	16f38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c60>
   16f94:	add	x1, x1, x1, lsl #6
   16f98:	sub	x20, x0, #0x1
   16f9c:	add	x3, x23, #0x8
   16fa0:	stp	x27, x28, [sp, #64]
   16fa4:	add	x19, x24, x1, lsl #3
   16fa8:	add	x28, x1, #0x1
   16fac:	mov	x27, #0x0                   	// #0
   16fb0:	stp	x21, x22, [sp, #16]
   16fb4:	mov	x21, #0x0                   	// #0
   16fb8:	mov	x22, #0x0                   	// #0
   16fbc:	stp	x25, x26, [sp, #48]
   16fc0:	mov	x25, #0x0                   	// #0
   16fc4:	mov	x26, #0x1                   	// #1
   16fc8:	cbnz	x20, 1700c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d34>
   16fcc:	mov	x1, #0x1                   	// #1
   16fd0:	cbnz	x22, 17050 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d78>
   16fd4:	cbnz	x25, 171a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ec8>
   16fd8:	ldr	x22, [x19]
   16fdc:	cbz	x22, 171a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ec8>
   16fe0:	cbz	x21, 170dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e04>
   16fe4:	mov	x22, #0x0                   	// #0
   16fe8:	rbit	x0, x21
   16fec:	clz	x0, x0
   16ff0:	lsl	x0, x1, x0
   16ff4:	bic	x21, x21, x0
   16ff8:	orr	x0, x22, x21
   16ffc:	cbnz	x0, 16fd0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cf8>
   17000:	add	x25, x25, #0x1
   17004:	mov	x21, #0x0                   	// #0
   17008:	b	16fd4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cfc>
   1700c:	cbnz	x22, 1706c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d94>
   17010:	cbnz	x25, 171a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ec8>
   17014:	ldr	x22, [x19]
   17018:	cbz	x22, 171a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ec8>
   1701c:	cbz	x21, 1712c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e54>
   17020:	mov	x1, x27
   17024:	mov	x22, #0x0                   	// #0
   17028:	rbit	x0, x21
   1702c:	clz	x0, x0
   17030:	lsl	x4, x26, x0
   17034:	bic	x21, x21, x4
   17038:	orr	x4, x21, x22
   1703c:	cbnz	x4, 17084 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1dac>
   17040:	add	x25, x25, #0x1
   17044:	mov	x22, #0x0                   	// #0
   17048:	mov	x21, #0x0                   	// #0
   1704c:	b	17084 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1dac>
   17050:	cbz	x21, 170dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e04>
   17054:	rbit	x0, x21
   17058:	clz	x0, x0
   1705c:	lsl	x0, x1, x0
   17060:	bic	x21, x21, x0
   17064:	cbz	x22, 16fd4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cfc>
   17068:	b	17050 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d78>
   1706c:	cbz	x21, 1712c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e54>
   17070:	rbit	x0, x21
   17074:	add	x1, x27, x25, lsl #6
   17078:	clz	x0, x0
   1707c:	lsl	x4, x26, x0
   17080:	bic	x21, x21, x4
   17084:	sxtw	x0, w0
   17088:	add	x1, x0, x1, lsl #6
   1708c:	str	x1, [x23, #8]
   17090:	cmp	x1, #0x1, lsl #12
   17094:	b.hi	17160 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e88>  // b.pmore
   17098:	lsr	x0, x1, #12
   1709c:	ubfx	x4, x1, #6, #6
   170a0:	lsl	x6, x26, x4
   170a4:	ldr	x5, [x2, x0, lsl #3]
   170a8:	tst	x6, x5
   170ac:	b.eq	17100 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e28>  // b.none
   170b0:	add	x0, x4, x0, lsl #6
   170b4:	lsl	x4, x26, x1
   170b8:	add	x0, x0, #0x1
   170bc:	ldr	x5, [x2, x0, lsl #3]
   170c0:	tst	x4, x5
   170c4:	b.eq	17100 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e28>  // b.none
   170c8:	mov	x0, #0x2                   	// #2
   170cc:	ldp	x21, x22, [sp, #16]
   170d0:	ldp	x25, x26, [sp, #48]
   170d4:	ldp	x27, x28, [sp, #64]
   170d8:	b	16f38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c60>
   170dc:	rbit	x2, x22
   170e0:	add	x0, x28, x25, lsl #6
   170e4:	clz	x2, x2
   170e8:	add	x0, x0, x2
   170ec:	ldr	x21, [x24, x0, lsl #3]
   170f0:	cbz	x21, 17180 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ea8>
   170f4:	lsl	x2, x1, x2
   170f8:	bic	x22, x22, x2
   170fc:	b	16fe8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d10>
   17100:	mov	x4, x20
   17104:	mov	x0, x24
   17108:	stp	x2, x3, [sp, #96]
   1710c:	bl	16a08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1730>
   17110:	ldp	x2, x3, [sp, #96]
   17114:	cbz	x0, 16fc8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cf0>
   17118:	add	x0, x0, #0x1
   1711c:	ldp	x21, x22, [sp, #16]
   17120:	ldp	x25, x26, [sp, #48]
   17124:	ldp	x27, x28, [sp, #64]
   17128:	b	16f38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c60>
   1712c:	rbit	x27, x22
   17130:	clz	x27, x27
   17134:	add	x1, x27, x25, lsl #6
   17138:	mov	x0, x27
   1713c:	add	x4, x1, x28
   17140:	ldr	x21, [x24, x4, lsl #3]
   17144:	cbz	x21, 17180 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ea8>
   17148:	lsl	x0, x26, x0
   1714c:	bic	x22, x22, x0
   17150:	b	17028 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d50>
   17154:	stp	x21, x22, [sp, #16]
   17158:	stp	x25, x26, [sp, #48]
   1715c:	stp	x27, x28, [sp, #64]
   17160:	mov	x3, x1
   17164:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17168:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1716c:	add	x2, x2, #0x668
   17170:	add	x0, x0, #0x610
   17174:	mov	x4, #0x1000                	// #4096
   17178:	mov	w1, #0x144                 	// #324
   1717c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   17180:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17184:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17188:	add	x2, x2, #0x5f0
   1718c:	add	x0, x0, #0x610
   17190:	mov	x4, #0x0                   	// #0
   17194:	mov	x3, #0x0                   	// #0
   17198:	mov	w1, #0x133                 	// #307
   1719c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   171a0:	mov	x0, #0x0                   	// #0
   171a4:	ldp	x21, x22, [sp, #16]
   171a8:	ldp	x25, x26, [sp, #48]
   171ac:	ldp	x27, x28, [sp, #64]
   171b0:	b	16f38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c60>
   171b4:	nop
   171b8:	mov	x2, x1
   171bc:	mov	x4, #0x0                   	// #0
   171c0:	mov	x1, x0
   171c4:	mov	x3, #0x0                   	// #0
   171c8:	mov	w0, #0x2                   	// #2
   171cc:	b	1dc68 <__sanitizer_set_report_fd@@Base+0x5ea8>
   171d0:	stp	x19, x30, [sp, #-16]!
   171d4:	mov	x19, x0
   171d8:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   171dc:	mov	x2, x0
   171e0:	mov	x1, x19
   171e4:	adrp	x0, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
   171e8:	ldp	x19, x30, [sp], #16
   171ec:	add	x0, x0, #0x288
   171f0:	b	1e0b0 <__sanitizer_set_report_fd@@Base+0x62f0>
   171f4:	nop
   171f8:	stp	x19, x20, [sp, #-32]!
   171fc:	mov	x19, x0
   17200:	ldr	x0, [x0]
   17204:	str	x30, [sp, #24]
   17208:	ldrb	w3, [x0]
   1720c:	and	x3, x3, #0xff
   17210:	cmp	x3, #0x1
   17214:	b.ne	17318 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2040>  // b.any
   17218:	ldr	w0, [x19, #8]
   1721c:	sub	w0, w0, #0x1
   17220:	cmp	w0, #0x1
   17224:	b.ls	172d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ff8>  // b.plast
   17228:	bl	1c738 <__sanitizer_set_report_fd@@Base+0x4978>
   1722c:	mov	x20, x0
   17230:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   17234:	ldr	x1, [x1, #3744]
   17238:	ldr	x0, [x1]
   1723c:	cmp	x0, x20
   17240:	b.eq	172dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x2004>  // b.none
   17244:	ldr	w0, [x19, #8]
   17248:	cmn	w0, #0x1
   1724c:	b.eq	172f4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x201c>  // b.none
   17250:	ldr	x1, [x19, #8208]
   17254:	cmp	x1, x20
   17258:	b.eq	172d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ff8>  // b.none
   1725c:	str	x21, [sp, #16]
   17260:	bl	1dc10 <__sanitizer_set_report_fd@@Base+0x5e50>
   17264:	bl	14de8 <_ZdaPvRKSt9nothrow_t@@Base+0x3128>
   17268:	cmp	x0, #0x0
   1726c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   17270:	mov	x4, x0
   17274:	mov	x0, #0x100c                	// #4108
   17278:	add	x21, x19, x0
   1727c:	ldr	x0, [x1, #4056]
   17280:	cset	w1, ne  // ne = any
   17284:	add	x3, x19, #0xc
   17288:	ldrb	w0, [x0, #48]
   1728c:	tst	w1, w0
   17290:	b.ne	172fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x2024>  // b.any
   17294:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17298:	mov	x4, x20
   1729c:	add	x2, x2, #0xa38
   172a0:	mov	x0, x21
   172a4:	mov	x1, #0x1000                	// #4096
   172a8:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   172ac:	mov	x0, x21
   172b0:	mov	x2, #0x0                   	// #0
   172b4:	mov	w1, #0x1                   	// #1
   172b8:	bl	1dae0 <__sanitizer_set_report_fd@@Base+0x5d20>
   172bc:	str	w0, [x19, #8]
   172c0:	cmn	w0, #0x1
   172c4:	b.eq	17338 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2060>  // b.none
   172c8:	ldr	x21, [sp, #16]
   172cc:	str	x20, [x19, #8208]
   172d0:	ldr	x30, [sp, #24]
   172d4:	ldp	x19, x20, [sp], #32
   172d8:	ret
   172dc:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   172e0:	ldr	x0, [x0, #3736]
   172e4:	ldr	x20, [x0]
   172e8:	ldr	w0, [x19, #8]
   172ec:	cmn	w0, #0x1
   172f0:	b.ne	17250 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f78>  // b.any
   172f4:	str	x21, [sp, #16]
   172f8:	b	17264 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8c>
   172fc:	mov	x5, x20
   17300:	mov	x0, x21
   17304:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17308:	mov	x1, #0x1000                	// #4096
   1730c:	add	x2, x2, #0xa28
   17310:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   17314:	b	172ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x1fd4>
   17318:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1731c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17320:	add	x2, x2, #0x9a0
   17324:	add	x0, x0, #0x9d8
   17328:	mov	x4, #0x1                   	// #1
   1732c:	mov	w1, #0x2b                  	// #43
   17330:	str	x21, [sp, #16]
   17334:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   17338:	adrp	x19, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1733c:	add	x19, x19, #0xa40
   17340:	mov	x0, x19
   17344:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   17348:	mov	x1, x19
   1734c:	mov	x2, x0
   17350:	mov	x4, #0x0                   	// #0
   17354:	mov	x3, #0x0                   	// #0
   17358:	mov	w0, #0x2                   	// #2
   1735c:	bl	1dc68 <__sanitizer_set_report_fd@@Base+0x5ea8>
   17360:	mov	x0, x21
   17364:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   17368:	mov	x1, x21
   1736c:	mov	x2, x0
   17370:	mov	x4, #0x0                   	// #0
   17374:	mov	x3, #0x0                   	// #0
   17378:	mov	w0, #0x2                   	// #2
   1737c:	bl	1dc68 <__sanitizer_set_report_fd@@Base+0x5ea8>
   17380:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   17384:	nop
   17388:	cbz	x1, 1747c <__sanitizer_install_malloc_and_free_hooks@@Base+0x21a4>
   1738c:	sub	sp, sp, #0x30
   17390:	stp	x19, x20, [sp, #16]
   17394:	mov	x19, x0
   17398:	mov	x20, x1
   1739c:	mov	x0, x1
   173a0:	stp	x21, x30, [sp, #32]
   173a4:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   173a8:	cmp	x0, #0xf9c
   173ac:	b.hi	1749c <__sanitizer_install_malloc_and_free_hooks@@Base+0x21c4>  // b.pmore
   173b0:	ldr	x21, [x19]
   173b4:	mov	w1, #0x1                   	// #1
   173b8:	ldxrb	w0, [x21]
   173bc:	stxrb	w2, w1, [x21]
   173c0:	cbnz	w2, 173b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20e0>
   173c4:	dmb	ish
   173c8:	tst	w0, #0xff
   173cc:	b.eq	173d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2100>  // b.none
   173d0:	mov	x0, x21
   173d4:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   173d8:	ldr	w0, [x19, #8]
   173dc:	sub	w1, w0, #0x1
   173e0:	cmp	w1, #0x1
   173e4:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   173e8:	b.ne	17428 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2150>  // b.any
   173ec:	mov	w0, #0xffffffff            	// #-1
   173f0:	str	w0, [x19, #8]
   173f4:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   173f8:	mov	x0, x20
   173fc:	add	x1, x1, #0xa90
   17400:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   17404:	cbnz	w0, 17448 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2170>
   17408:	mov	w0, #0x1                   	// #1
   1740c:	str	w0, [x19, #8]
   17410:	dmb	ish
   17414:	strb	wzr, [x21]
   17418:	ldp	x19, x20, [sp, #16]
   1741c:	ldp	x21, x30, [sp, #32]
   17420:	add	sp, sp, #0x30
   17424:	ret
   17428:	bl	1dc10 <__sanitizer_set_report_fd@@Base+0x5e50>
   1742c:	mov	w0, #0xffffffff            	// #-1
   17430:	str	w0, [x19, #8]
   17434:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17438:	mov	x0, x20
   1743c:	add	x1, x1, #0xa90
   17440:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   17444:	cbz	w0, 17408 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2130>
   17448:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1744c:	mov	x0, x20
   17450:	add	x1, x1, #0xa98
   17454:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   17458:	cbnz	w0, 17480 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21a8>
   1745c:	mov	w0, #0x2                   	// #2
   17460:	str	w0, [x19, #8]
   17464:	dmb	ish
   17468:	strb	wzr, [x21]
   1746c:	ldp	x19, x20, [sp, #16]
   17470:	ldp	x21, x30, [sp, #32]
   17474:	add	sp, sp, #0x30
   17478:	ret
   1747c:	ret
   17480:	mov	x3, x20
   17484:	add	x0, x19, #0xc
   17488:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1748c:	mov	x1, #0x1000                	// #4096
   17490:	add	x2, x2, #0xbf8
   17494:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   17498:	b	17410 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2138>
   1749c:	ldrb	w7, [x20, #6]
   174a0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   174a4:	ldrb	w6, [x20, #5]
   174a8:	add	x0, x0, #0xa60
   174ac:	ldrb	w5, [x20, #4]
   174b0:	ldrb	w4, [x20, #3]
   174b4:	ldrb	w3, [x20, #2]
   174b8:	ldrb	w2, [x20, #1]
   174bc:	ldrb	w1, [x20]
   174c0:	ldrb	w8, [x20, #7]
   174c4:	str	w8, [sp]
   174c8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   174cc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   174d0:	stp	x19, x20, [sp, #-128]!
   174d4:	mov	w19, #0x1                   	// #1
   174d8:	str	x30, [sp, #80]
   174dc:	str	xzr, [x1]
   174e0:	str	xzr, [x2]
   174e4:	str	xzr, [x3]
   174e8:	cbz	x4, 175f4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x231c>
   174ec:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   174f0:	stp	x21, x22, [sp, #16]
   174f4:	mov	x21, x1
   174f8:	ldr	x19, [x19, #4016]
   174fc:	stp	x23, x24, [sp, #32]
   17500:	mov	x22, x4
   17504:	stp	x25, x26, [sp, #48]
   17508:	mov	x23, x5
   1750c:	mov	x26, x0
   17510:	ldr	x20, [x19]
   17514:	stp	x27, x28, [sp, #64]
   17518:	mov	x25, x2
   1751c:	mov	x28, x3
   17520:	mov	x0, #0x0                   	// #0
   17524:	cbz	x20, 17630 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2358>
   17528:	cmp	x20, x22
   1752c:	add	x24, sp, #0x78
   17530:	csel	x20, x20, x22, ls  // ls = plast
   17534:	adrp	x27, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17538:	add	x1, x27, #0xaa0
   1753c:	str	x1, [sp, #104]
   17540:	ldr	x1, [x25]
   17544:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   17548:	ldr	x1, [sp, #104]
   1754c:	mov	w2, #0x0                   	// #0
   17550:	mov	x0, x20
   17554:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   17558:	str	x0, [x21]
   1755c:	str	x20, [x25]
   17560:	mov	x2, x23
   17564:	mov	x0, x26
   17568:	mov	w1, #0x0                   	// #0
   1756c:	bl	1dae0 <__sanitizer_set_report_fd@@Base+0x5d20>
   17570:	mov	w27, w0
   17574:	cmn	w0, #0x1
   17578:	b.eq	17644 <__sanitizer_install_malloc_and_free_hooks@@Base+0x236c>  // b.none
   1757c:	str	xzr, [x28]
   17580:	mov	x1, #0x0                   	// #0
   17584:	cbnz	x20, 17594 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22bc>
   17588:	b	17604 <__sanitizer_install_malloc_and_free_hooks@@Base+0x232c>
   1758c:	cmp	x1, x20
   17590:	b.cs	17604 <__sanitizer_install_malloc_and_free_hooks@@Base+0x232c>  // b.hs, b.nlast
   17594:	ldr	x5, [x21]
   17598:	sub	x2, x20, x1
   1759c:	mov	x4, x23
   175a0:	mov	x3, x24
   175a4:	mov	w0, w27
   175a8:	add	x1, x5, x1
   175ac:	bl	1dc18 <__sanitizer_set_report_fd@@Base+0x5e58>
   175b0:	ands	w19, w0, #0xff
   175b4:	b.eq	17620 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2348>  // b.none
   175b8:	ldr	x1, [x28]
   175bc:	ldr	x2, [sp, #120]
   175c0:	add	x1, x2, x1
   175c4:	str	x1, [x28]
   175c8:	cmp	x1, x22
   175cc:	cset	w19, eq  // eq = none
   175d0:	cmp	x2, #0x0
   175d4:	csinc	w19, w19, wzr, ne  // ne = any
   175d8:	cbz	w19, 1758c <__sanitizer_install_malloc_and_free_hooks@@Base+0x22b4>
   175dc:	mov	w0, w27
   175e0:	bl	1dc10 <__sanitizer_set_report_fd@@Base+0x5e50>
   175e4:	ldp	x21, x22, [sp, #16]
   175e8:	ldp	x23, x24, [sp, #32]
   175ec:	ldp	x25, x26, [sp, #48]
   175f0:	ldp	x27, x28, [sp, #64]
   175f4:	mov	w0, w19
   175f8:	ldr	x30, [sp, #80]
   175fc:	ldp	x19, x20, [sp], #128
   17600:	ret
   17604:	mov	w0, w27
   17608:	lsl	x20, x20, #1
   1760c:	bl	1dc10 <__sanitizer_set_report_fd@@Base+0x5e50>
   17610:	cmp	x20, x22
   17614:	csel	x20, x20, x22, ls  // ls = plast
   17618:	ldr	x0, [x21]
   1761c:	b	17540 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2268>
   17620:	ldr	x0, [x21]
   17624:	ldr	x1, [x25]
   17628:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1762c:	b	175dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x2304>
   17630:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   17634:	mov	x20, x0
   17638:	ldr	x0, [x21]
   1763c:	str	x20, [x19]
   17640:	b	17528 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2250>
   17644:	ldr	x0, [x21]
   17648:	mov	w19, #0x0                   	// #0
   1764c:	ldr	x1, [x25]
   17650:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   17654:	ldp	x21, x22, [sp, #16]
   17658:	ldp	x23, x24, [sp, #32]
   1765c:	ldp	x25, x26, [sp, #48]
   17660:	ldp	x27, x28, [sp, #64]
   17664:	b	175f4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x231c>
   17668:	stp	x19, x20, [sp, #-144]!
   1766c:	stp	x27, x28, [sp, #64]
   17670:	str	x30, [sp, #80]
   17674:	str	xzr, [x1, #16]
   17678:	cbz	x2, 177f4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x251c>
   1767c:	stp	x25, x26, [sp, #48]
   17680:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   17684:	mov	x20, x1
   17688:	stp	x23, x24, [sp, #32]
   1768c:	mov	x19, x0
   17690:	ldr	x24, [x25, #4016]
   17694:	stp	x21, x22, [sp, #16]
   17698:	mov	x21, x2
   1769c:	mov	x22, x3
   176a0:	ldr	x23, [x24]
   176a4:	cbz	x23, 177a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x24d0>
   176a8:	mov	x0, x19
   176ac:	mov	x2, x22
   176b0:	mov	w1, #0x0                   	// #0
   176b4:	bl	1dae0 <__sanitizer_set_report_fd@@Base+0x5d20>
   176b8:	mov	w27, w0
   176bc:	cmn	w0, #0x1
   176c0:	b.eq	177d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x24f8>  // b.none
   176c4:	ldr	x0, [x25, #4016]
   176c8:	str	x0, [sp, #104]
   176cc:	ldr	x3, [x20, #16]
   176d0:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   176d4:	mov	x19, #0x0                   	// #0
   176d8:	add	x24, sp, #0x88
   176dc:	add	x26, x26, #0xb50
   176e0:	cmp	x3, x19
   176e4:	b.ls	17738 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2460>  // b.plast
   176e8:	cmp	x21, x3
   176ec:	b.cc	1778c <__sanitizer_install_malloc_and_free_hooks@@Base+0x24b4>  // b.lo, b.ul, b.last
   176f0:	ldr	x1, [x20]
   176f4:	sub	x2, x3, x19
   176f8:	mov	x4, x22
   176fc:	mov	x3, x24
   17700:	mov	w0, w27
   17704:	add	x1, x1, x19
   17708:	bl	1dc18 <__sanitizer_set_report_fd@@Base+0x5e58>
   1770c:	ands	w28, w0, #0xff
   17710:	b.eq	178e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2610>  // b.none
   17714:	ldr	x1, [sp, #136]
   17718:	add	x3, x1, x19
   1771c:	cbz	x1, 1788c <__sanitizer_install_malloc_and_free_hooks@@Base+0x25b4>
   17720:	cmp	x21, x3
   17724:	b.ls	17890 <__sanitizer_install_malloc_and_free_hooks@@Base+0x25b8>  // b.plast
   17728:	mov	x19, x3
   1772c:	ldr	x3, [x20, #16]
   17730:	cmp	x3, x19
   17734:	b.hi	176e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2410>  // b.pmore
   17738:	lsl	x28, x19, #1
   1773c:	cmp	x28, x23
   17740:	csel	x28, x28, x23, cs  // cs = hs, nlast
   17744:	cmp	x28, x21
   17748:	csel	x28, x28, x21, ls  // ls = plast
   1774c:	cmp	x28, x3
   17750:	b.ls	17774 <__sanitizer_install_malloc_and_free_hooks@@Base+0x249c>  // b.plast
   17754:	ldr	x0, [x20, #8]
   17758:	cmp	x28, x0
   1775c:	b.hi	1782c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2554>  // b.pmore
   17760:	ldr	x4, [x20]
   17764:	add	x0, x4, x3
   17768:	sub	x2, x28, x3
   1776c:	mov	w1, #0x0                   	// #0
   17770:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   17774:	str	x28, [x20, #16]
   17778:	cmp	x28, x19
   1777c:	b.ls	1780c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2534>  // b.plast
   17780:	mov	x3, x28
   17784:	cmp	x21, x3
   17788:	b.cs	176f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2418>  // b.hs, b.nlast
   1778c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17790:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17794:	mov	x4, x21
   17798:	add	x2, x2, #0xba8
   1779c:	add	x0, x0, #0xb50
   177a0:	mov	w1, #0x9a                  	// #154
   177a4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   177a8:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   177ac:	mov	x23, x0
   177b0:	mov	x2, x22
   177b4:	mov	w1, #0x0                   	// #0
   177b8:	str	x0, [x24]
   177bc:	mov	x0, x19
   177c0:	bl	1dae0 <__sanitizer_set_report_fd@@Base+0x5d20>
   177c4:	mov	w27, w0
   177c8:	cmn	w0, #0x1
   177cc:	b.ne	176c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x23ec>  // b.any
   177d0:	mov	w28, #0x0                   	// #0
   177d4:	mov	w0, w28
   177d8:	ldp	x21, x22, [sp, #16]
   177dc:	ldp	x23, x24, [sp, #32]
   177e0:	ldp	x25, x26, [sp, #48]
   177e4:	ldp	x27, x28, [sp, #64]
   177e8:	ldr	x30, [sp, #80]
   177ec:	ldp	x19, x20, [sp], #144
   177f0:	ret
   177f4:	mov	w28, #0x1                   	// #1
   177f8:	mov	w0, w28
   177fc:	ldp	x27, x28, [sp, #64]
   17800:	ldr	x30, [sp, #80]
   17804:	ldp	x19, x20, [sp], #144
   17808:	ret
   1780c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17810:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17814:	mov	x4, x28
   17818:	mov	x3, x19
   1781c:	add	x2, x2, #0xb30
   17820:	add	x0, x0, #0xb50
   17824:	mov	w1, #0x99                  	// #153
   17828:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1782c:	ldr	x0, [sp, #104]
   17830:	ldr	x0, [x0]
   17834:	cbz	x0, 17900 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2628>
   17838:	sub	x1, x0, #0x1
   1783c:	tst	x1, x0
   17840:	b.ne	17998 <__sanitizer_install_malloc_and_free_hooks@@Base+0x26c0>  // b.any
   17844:	add	x1, x28, x1
   17848:	neg	x0, x0
   1784c:	and	x6, x1, x0
   17850:	mov	w2, #0x0                   	// #0
   17854:	mov	x0, x6
   17858:	mov	x1, x26
   1785c:	str	x6, [sp, #120]
   17860:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   17864:	str	x0, [sp, #112]
   17868:	ldr	x1, [x20]
   1786c:	ldr	x2, [x20, #16]
   17870:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   17874:	ldp	x0, x1, [x20]
   17878:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1787c:	ldp	x4, x6, [sp, #112]
   17880:	stp	x4, x6, [x20]
   17884:	ldr	x3, [x20, #16]
   17888:	b	17764 <__sanitizer_install_malloc_and_free_hooks@@Base+0x248c>
   1788c:	mov	x3, x19
   17890:	mov	w0, w27
   17894:	str	x3, [sp, #104]
   17898:	bl	1dc10 <__sanitizer_set_report_fd@@Base+0x5e50>
   1789c:	ldr	x2, [x20, #16]
   178a0:	ldr	x3, [sp, #104]
   178a4:	cmp	x3, x2
   178a8:	b.ls	178d4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x25fc>  // b.plast
   178ac:	ldr	x0, [x20, #8]
   178b0:	cmp	x3, x0
   178b4:	b.hi	17910 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2638>  // b.pmore
   178b8:	ldr	x19, [x20]
   178bc:	add	x0, x19, x2
   178c0:	mov	w1, #0x0                   	// #0
   178c4:	sub	x2, x3, x2
   178c8:	str	x3, [sp, #104]
   178cc:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   178d0:	ldr	x3, [sp, #104]
   178d4:	ldp	x21, x22, [sp, #16]
   178d8:	ldp	x23, x24, [sp, #32]
   178dc:	ldp	x25, x26, [sp, #48]
   178e0:	str	x3, [x20, #16]
   178e4:	b	177f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2520>
   178e8:	mov	w0, w27
   178ec:	bl	1dc10 <__sanitizer_set_report_fd@@Base+0x5e50>
   178f0:	ldp	x21, x22, [sp, #16]
   178f4:	ldp	x23, x24, [sp, #32]
   178f8:	ldp	x25, x26, [sp, #48]
   178fc:	b	177f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2520>
   17900:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   17904:	ldr	x1, [sp, #104]
   17908:	str	x0, [x1]
   1790c:	b	17838 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2560>
   17910:	cbz	x3, 17978 <__sanitizer_install_malloc_and_free_hooks@@Base+0x26a0>
   17914:	ldr	x25, [x25, #4016]
   17918:	ldr	x0, [x25]
   1791c:	cbz	x0, 179c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x26e8>
   17920:	sub	x1, x0, #0x1
   17924:	tst	x0, x1
   17928:	b.ne	17998 <__sanitizer_install_malloc_and_free_hooks@@Base+0x26c0>  // b.any
   1792c:	add	x1, x3, x1
   17930:	neg	x0, x0
   17934:	and	x21, x1, x0
   17938:	mov	w2, #0x0                   	// #0
   1793c:	mov	x0, x21
   17940:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   17944:	add	x1, x1, #0xb50
   17948:	str	x3, [sp, #104]
   1794c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   17950:	mov	x19, x0
   17954:	ldr	x1, [x20]
   17958:	ldr	x2, [x20, #16]
   1795c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   17960:	ldp	x0, x1, [x20]
   17964:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   17968:	stp	x19, x21, [x20]
   1796c:	ldr	x2, [x20, #16]
   17970:	ldr	x3, [sp, #104]
   17974:	b	178bc <__sanitizer_install_malloc_and_free_hooks@@Base+0x25e4>
   17978:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1797c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17980:	add	x2, x2, #0xab8
   17984:	add	x0, x0, #0xad8
   17988:	mov	x4, #0x0                   	// #0
   1798c:	mov	x3, #0x0                   	// #0
   17990:	mov	w1, #0x20b                 	// #523
   17994:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   17998:	adrp	x19, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1799c:	add	x19, x19, #0xb38
   179a0:	mov	x0, x19
   179a4:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   179a8:	mov	x1, x19
   179ac:	mov	x2, x0
   179b0:	adrp	x0, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
   179b4:	add	x0, x0, #0x288
   179b8:	bl	1e0b0 <__sanitizer_set_report_fd@@Base+0x62f0>
   179bc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   179c0:	str	x3, [sp, #104]
   179c4:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   179c8:	str	x0, [x25]
   179cc:	ldr	x3, [sp, #104]
   179d0:	b	17920 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2648>
   179d4:	nop
   179d8:	stp	x19, x20, [sp, #-80]!
   179dc:	stp	x23, x24, [sp, #32]
   179e0:	mov	x23, x0
   179e4:	str	x30, [sp, #72]
   179e8:	bl	1c340 <__sanitizer_set_report_fd@@Base+0x4580>
   179ec:	tst	w0, #0xff
   179f0:	b.eq	17a08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2730>  // b.none
   179f4:	mov	x0, x23
   179f8:	ldp	x23, x24, [sp, #32]
   179fc:	ldr	x30, [sp, #72]
   17a00:	ldp	x19, x20, [sp], #80
   17a04:	b	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   17a08:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17a0c:	add	x0, x0, #0xbc8
   17a10:	stp	x21, x22, [sp, #16]
   17a14:	bl	1c420 <__sanitizer_set_report_fd@@Base+0x4660>
   17a18:	mov	x21, x0
   17a1c:	cbz	x0, 17b58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2880>
   17a20:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   17a24:	mov	x0, x23
   17a28:	stp	x25, x26, [sp, #48]
   17a2c:	str	x27, [sp, #64]
   17a30:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   17a34:	ldr	x20, [x19, #4016]
   17a38:	mov	x24, x0
   17a3c:	ldr	x0, [x20]
   17a40:	cbz	x0, 17b70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2898>
   17a44:	sub	x1, x0, #0x1
   17a48:	tst	x1, x0
   17a4c:	b.ne	17c34 <__sanitizer_install_malloc_and_free_hooks@@Base+0x295c>  // b.any
   17a50:	add	x25, x0, #0xfff
   17a54:	neg	x0, x0
   17a58:	and	x25, x25, x0
   17a5c:	mov	w2, #0x0                   	// #0
   17a60:	mov	x0, x25
   17a64:	adrp	x20, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   17a68:	add	x1, x20, #0xb50
   17a6c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   17a70:	mov	x2, #0x0                   	// #0
   17a74:	mov	x1, #0x0                   	// #0
   17a78:	mov	x22, x0
   17a7c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   17a80:	mov	x1, #0x0                   	// #0
   17a84:	mov	x0, #0x0                   	// #0
   17a88:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   17a8c:	cmp	x25, #0xfff
   17a90:	b.ls	17bd8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2900>  // b.plast
   17a94:	mov	x0, x22
   17a98:	mov	w26, #0x2f                  	// #47
   17a9c:	mov	x2, #0x1000                	// #4096
   17aa0:	mov	w1, #0x0                   	// #0
   17aa4:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   17aa8:	b	17ab8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x27e0>
   17aac:	ldrb	w0, [x19]
   17ab0:	cbz	w0, 17b40 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2868>
   17ab4:	add	x21, x19, #0x1
   17ab8:	mov	x0, x21
   17abc:	mov	w1, #0x3a                  	// #58
   17ac0:	bl	1a558 <__sanitizer_set_report_fd@@Base+0x2798>
   17ac4:	sub	x20, x0, x21
   17ac8:	add	x27, x24, x20
   17acc:	mov	x19, x0
   17ad0:	add	x0, x27, #0x2
   17ad4:	cmp	x0, #0x1, lsl #12
   17ad8:	b.hi	17aac <__sanitizer_install_malloc_and_free_hooks@@Base+0x27d4>  // b.pmore
   17adc:	mov	x1, x21
   17ae0:	mov	x2, x20
   17ae4:	mov	x0, x22
   17ae8:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   17aec:	cmp	x20, #0xfff
   17af0:	b.hi	17b7c <__sanitizer_install_malloc_and_free_hooks@@Base+0x28a4>  // b.pmore
   17af4:	strb	w26, [x22, x20]
   17af8:	add	x4, x20, #0x1
   17afc:	b.eq	17b9c <__sanitizer_install_malloc_and_free_hooks@@Base+0x28c4>  // b.none
   17b00:	add	x0, x22, x4
   17b04:	mov	x2, x24
   17b08:	mov	x1, x23
   17b0c:	add	x27, x27, #0x1
   17b10:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   17b14:	cmp	x27, #0xfff
   17b18:	b.hi	17bb8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x28e0>  // b.pmore
   17b1c:	strb	wzr, [x22, x27]
   17b20:	mov	x0, x22
   17b24:	bl	1c340 <__sanitizer_set_report_fd@@Base+0x4580>
   17b28:	tst	w0, #0xff
   17b2c:	b.eq	17aac <__sanitizer_install_malloc_and_free_hooks@@Base+0x27d4>  // b.none
   17b30:	mov	x0, x22
   17b34:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   17b38:	mov	x21, x0
   17b3c:	b	17b44 <__sanitizer_install_malloc_and_free_hooks@@Base+0x286c>
   17b40:	mov	x21, #0x0                   	// #0
   17b44:	mov	x1, x25
   17b48:	mov	x0, x22
   17b4c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   17b50:	ldp	x25, x26, [sp, #48]
   17b54:	ldr	x27, [sp, #64]
   17b58:	mov	x0, x21
   17b5c:	ldp	x21, x22, [sp, #16]
   17b60:	ldp	x23, x24, [sp, #32]
   17b64:	ldr	x30, [sp, #72]
   17b68:	ldp	x19, x20, [sp], #80
   17b6c:	ret
   17b70:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   17b74:	str	x0, [x20]
   17b78:	b	17a44 <__sanitizer_install_malloc_and_free_hooks@@Base+0x276c>
   17b7c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   17b80:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17b84:	mov	x3, x20
   17b88:	add	x2, x2, #0x58
   17b8c:	add	x0, x0, #0xad8
   17b90:	mov	x4, #0x1000                	// #4096
   17b94:	mov	w1, #0x1c5                 	// #453
   17b98:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   17b9c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   17ba0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17ba4:	add	x2, x2, #0x58
   17ba8:	add	x0, x0, #0xad8
   17bac:	mov	x3, x4
   17bb0:	mov	w1, #0x1c5                 	// #453
   17bb4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   17bb8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   17bbc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17bc0:	add	x2, x2, #0x58
   17bc4:	add	x0, x0, #0xad8
   17bc8:	mov	x4, #0x1000                	// #4096
   17bcc:	mov	x3, #0xffffffffffffffff    	// #-1
   17bd0:	mov	w1, #0x1c5                 	// #453
   17bd4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   17bd8:	ldr	x19, [x19, #4016]
   17bdc:	ldr	x0, [x19]
   17be0:	cbz	x0, 17c5c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2984>
   17be4:	sub	x1, x0, #0x1
   17be8:	tst	x1, x0
   17bec:	b.ne	17c34 <__sanitizer_install_malloc_and_free_hooks@@Base+0x295c>  // b.any
   17bf0:	add	x19, x0, #0xfff
   17bf4:	neg	x0, x0
   17bf8:	and	x19, x19, x0
   17bfc:	add	x1, x20, #0xb50
   17c00:	mov	x0, x19
   17c04:	mov	w2, #0x0                   	// #0
   17c08:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   17c0c:	mov	x20, x0
   17c10:	mov	x2, #0x0                   	// #0
   17c14:	mov	x1, x22
   17c18:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   17c1c:	mov	x1, x25
   17c20:	mov	x0, x22
   17c24:	mov	x25, x19
   17c28:	mov	x22, x20
   17c2c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   17c30:	b	17a94 <__sanitizer_install_malloc_and_free_hooks@@Base+0x27bc>
   17c34:	adrp	x19, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   17c38:	add	x19, x19, #0xb38
   17c3c:	mov	x0, x19
   17c40:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   17c44:	mov	x1, x19
   17c48:	mov	x2, x0
   17c4c:	adrp	x0, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
   17c50:	add	x0, x0, #0x288
   17c54:	bl	1e0b0 <__sanitizer_set_report_fd@@Base+0x62f0>
   17c58:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   17c5c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   17c60:	str	x0, [x19]
   17c64:	b	17be4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x290c>

0000000000017c68 <__sanitizer_set_report_path@@Base>:
   17c68:	cbz	x0, 17d64 <__sanitizer_set_report_path@@Base+0xfc>
   17c6c:	sub	sp, sp, #0x30
   17c70:	stp	x19, x20, [sp, #16]
   17c74:	mov	x19, x0
   17c78:	stp	x21, x30, [sp, #32]
   17c7c:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   17c80:	cmp	x0, #0xf9c
   17c84:	b.hi	17d88 <__sanitizer_set_report_path@@Base+0x120>  // b.pmore
   17c88:	adrp	x20, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
   17c8c:	mov	w1, #0x1                   	// #1
   17c90:	ldr	x21, [x20, #648]
   17c94:	ldxrb	w0, [x21]
   17c98:	stxrb	w2, w1, [x21]
   17c9c:	cbnz	w2, 17c94 <__sanitizer_set_report_path@@Base+0x2c>
   17ca0:	dmb	ish
   17ca4:	tst	w0, #0xff
   17ca8:	b.eq	17cb4 <__sanitizer_set_report_path@@Base+0x4c>  // b.none
   17cac:	mov	x0, x21
   17cb0:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   17cb4:	add	x0, x20, #0x288
   17cb8:	ldr	w0, [x0, #8]
   17cbc:	sub	w1, w0, #0x1
   17cc0:	cmp	w1, #0x1
   17cc4:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   17cc8:	b.ne	17d0c <__sanitizer_set_report_path@@Base+0xa4>  // b.any
   17ccc:	add	x20, x20, #0x288
   17cd0:	mov	w2, #0xffffffff            	// #-1
   17cd4:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17cd8:	mov	x0, x19
   17cdc:	add	x1, x1, #0xa90
   17ce0:	str	w2, [x20, #8]
   17ce4:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   17ce8:	cbnz	w0, 17d30 <__sanitizer_set_report_path@@Base+0xc8>
   17cec:	mov	w0, #0x1                   	// #1
   17cf0:	str	w0, [x20, #8]
   17cf4:	dmb	ish
   17cf8:	strb	wzr, [x21]
   17cfc:	ldp	x19, x20, [sp, #16]
   17d00:	ldp	x21, x30, [sp, #32]
   17d04:	add	sp, sp, #0x30
   17d08:	ret
   17d0c:	bl	1dc10 <__sanitizer_set_report_fd@@Base+0x5e50>
   17d10:	add	x20, x20, #0x288
   17d14:	mov	w2, #0xffffffff            	// #-1
   17d18:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17d1c:	mov	x0, x19
   17d20:	add	x1, x1, #0xa90
   17d24:	str	w2, [x20, #8]
   17d28:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   17d2c:	cbz	w0, 17cec <__sanitizer_set_report_path@@Base+0x84>
   17d30:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17d34:	mov	x0, x19
   17d38:	add	x1, x1, #0xa98
   17d3c:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   17d40:	cbnz	w0, 17d68 <__sanitizer_set_report_path@@Base+0x100>
   17d44:	mov	w0, #0x2                   	// #2
   17d48:	str	w0, [x20, #8]
   17d4c:	dmb	ish
   17d50:	strb	wzr, [x21]
   17d54:	ldp	x19, x20, [sp, #16]
   17d58:	ldp	x21, x30, [sp, #32]
   17d5c:	add	sp, sp, #0x30
   17d60:	ret
   17d64:	ret
   17d68:	mov	x3, x19
   17d6c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   17d70:	adrp	x0, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
   17d74:	add	x2, x2, #0xbf8
   17d78:	mov	x1, #0x1000                	// #4096
   17d7c:	add	x0, x0, #0x294
   17d80:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   17d84:	b	17cf4 <__sanitizer_set_report_path@@Base+0x8c>
   17d88:	ldrb	w7, [x19, #6]
   17d8c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17d90:	ldrb	w6, [x19, #5]
   17d94:	add	x0, x0, #0xa60
   17d98:	ldrb	w5, [x19, #4]
   17d9c:	ldrb	w4, [x19, #3]
   17da0:	ldrb	w3, [x19, #2]
   17da4:	ldrb	w2, [x19, #1]
   17da8:	ldrb	w1, [x19]
   17dac:	ldrb	w8, [x19, #7]
   17db0:	str	w8, [sp]
   17db4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   17db8:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   17dbc:	nop

0000000000017dc0 <__sanitizer_set_report_fd@@Base>:
   17dc0:	stp	x19, x30, [sp, #-16]!
   17dc4:	adrp	x19, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
   17dc8:	add	x19, x19, #0x288
   17dcc:	str	w0, [x19, #8]
   17dd0:	bl	1c738 <__sanitizer_set_report_fd@@Base+0x4978>
   17dd4:	str	x0, [x19, #8208]
   17dd8:	ldp	x19, x30, [sp], #16
   17ddc:	ret
   17de0:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   17de4:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   17de8:	movi	v0.4s, #0x0
   17dec:	mov	x17, #0x10000               	// #65536
   17df0:	ldr	q2, [x2, #272]
   17df4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   17df8:	mov	x16, #0x10100000000         	// #1103806595072
   17dfc:	mov	w11, #0x100                 	// #256
   17e00:	ldr	q1, [x2, #288]
   17e04:	add	x7, x1, #0x328
   17e08:	mov	w8, #0x1                   	// #1
   17e0c:	mov	w1, #0x1                   	// #1
   17e10:	movk	x17, #0x1, lsl #32
   17e14:	movk	x16, #0x1, lsl #48
   17e18:	mov	x15, #0x100000000           	// #4294967296
   17e1c:	mov	w14, #0x101                 	// #257
   17e20:	mov	x13, #0x10000               	// #65536
   17e24:	mov	w12, #0x1388                	// #5000
   17e28:	movk	w11, #0x101, lsl #16
   17e2c:	adrp	x6, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17e30:	adrp	x5, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17e34:	add	x6, x6, #0xa98
   17e38:	add	x5, x5, #0xc18
   17e3c:	adrp	x4, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   17e40:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17e44:	add	x4, x4, #0xae8
   17e48:	add	x3, x3, #0xc20
   17e4c:	mov	x10, #0x1                   	// #1
   17e50:	strb	w1, [x0]
   17e54:	movk	x10, #0x100, lsl #32
   17e58:	str	xzr, [x0, #8]
   17e5c:	mov	w9, #0x100                 	// #256
   17e60:	strb	wzr, [x0, #16]
   17e64:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17e68:	stp	x7, x17, [x0, #24]
   17e6c:	add	x2, x2, #0xc28
   17e70:	str	x6, [x0, #40]
   17e74:	strh	wzr, [x0, #48]
   17e78:	stur	x16, [x0, #52]
   17e7c:	strb	w1, [x0, #60]
   17e80:	str	wzr, [x0, #64]
   17e84:	strb	w1, [x0, #68]
   17e88:	stur	q2, [x0, #72]
   17e8c:	str	x15, [x0, #88]
   17e90:	strh	w14, [x0, #96]
   17e94:	strb	w1, [x0, #98]
   17e98:	stp	x13, x5, [x0, #104]
   17e9c:	strh	wzr, [x0, #120]
   17ea0:	strb	wzr, [x0, #122]
   17ea4:	stp	q0, q0, [x0, #128]
   17ea8:	strb	wzr, [x0, #160]
   17eac:	str	w12, [x0, #164]
   17eb0:	strh	w8, [x0, #168]
   17eb4:	str	x4, [x0, #176]
   17eb8:	str	w11, [x0, #184]
   17ebc:	strh	w8, [x0, #188]
   17ec0:	str	wzr, [x0, #192]
   17ec4:	str	x3, [x0, #200]
   17ec8:	str	q1, [x0, #208]
   17ecc:	stp	x10, x2, [x0, #224]
   17ed0:	str	w9, [x0, #240]
   17ed4:	ret
   17ed8:	mov	x2, #0xf8                  	// #248
   17edc:	b	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   17ee0:	stp	x19, x20, [sp, #-80]!
   17ee4:	sub	x2, x2, #0x1
   17ee8:	mov	x19, x1
   17eec:	stp	x21, x22, [sp, #16]
   17ef0:	mov	x21, x0
   17ef4:	add	x20, x1, x2
   17ef8:	str	x30, [sp, #32]
   17efc:	ldrb	w0, [x0]
   17f00:	cbz	w0, 17fd8 <__sanitizer_set_report_fd@@Base+0x218>
   17f04:	cmp	x1, x20
   17f08:	b.cs	17fa4 <__sanitizer_set_report_fd@@Base+0x1e4>  // b.hs, b.nlast
   17f0c:	mov	w22, #0x6667                	// #26215
   17f10:	movk	w22, #0x6666, lsl #16
   17f14:	nop
   17f18:	cmp	w0, #0x25
   17f1c:	b.ne	17fc8 <__sanitizer_set_report_fd@@Base+0x208>  // b.any
   17f20:	ldrb	w1, [x21, #1]
   17f24:	cmp	w1, #0x62
   17f28:	b.eq	17ff4 <__sanitizer_set_report_fd@@Base+0x234>  // b.none
   17f2c:	cmp	w1, #0x70
   17f30:	b.ne	17fc8 <__sanitizer_set_report_fd@@Base+0x208>  // b.any
   17f34:	bl	1c738 <__sanitizer_set_report_fd@@Base+0x4978>
   17f38:	add	x3, sp, #0x50
   17f3c:	nop
   17f40:	smull	x1, w0, w22
   17f44:	asr	x1, x1, #34
   17f48:	sub	w1, w1, w0, asr #31
   17f4c:	add	w2, w1, w1, lsl #2
   17f50:	sub	w2, w0, w2, lsl #1
   17f54:	mov	w0, w1
   17f58:	add	w1, w2, #0x30
   17f5c:	strb	w1, [x3, #-1]!
   17f60:	cbnz	w0, 17f40 <__sanitizer_set_report_fd@@Base+0x180>
   17f64:	add	x0, sp, #0x50
   17f68:	cmp	x0, x3
   17f6c:	ccmp	x19, x20, #0x2, hi  // hi = pmore
   17f70:	b.cs	17f90 <__sanitizer_set_report_fd@@Base+0x1d0>  // b.hs, b.nlast
   17f74:	nop
   17f78:	ldrb	w0, [x3], #1
   17f7c:	strb	w0, [x19], #1
   17f80:	add	x0, sp, #0x50
   17f84:	cmp	x19, x20
   17f88:	ccmp	x0, x3, #0x0, cc  // cc = lo, ul, last
   17f8c:	b.hi	17f78 <__sanitizer_set_report_fd@@Base+0x1b8>  // b.pmore
   17f90:	ldrb	w0, [x21, #2]
   17f94:	add	x21, x21, #0x2
   17f98:	cbz	w0, 17fd8 <__sanitizer_set_report_fd@@Base+0x218>
   17f9c:	cmp	x19, x20
   17fa0:	b.cc	17f18 <__sanitizer_set_report_fd@@Base+0x158>  // b.lo, b.ul, b.last
   17fa4:	cmp	x19, x20
   17fa8:	cset	x3, cc  // cc = lo, ul, last
   17fac:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17fb0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   17fb4:	add	x2, x2, #0xc98
   17fb8:	add	x0, x0, #0xc40
   17fbc:	mov	x4, #0x0                   	// #0
   17fc0:	mov	w1, #0x47                  	// #71
   17fc4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   17fc8:	add	x21, x21, #0x1
   17fcc:	strb	w0, [x19], #1
   17fd0:	ldrb	w0, [x21]
   17fd4:	cbnz	w0, 17f9c <__sanitizer_set_report_fd@@Base+0x1dc>
   17fd8:	cmp	x19, x20
   17fdc:	b.cs	18048 <__sanitizer_set_report_fd@@Base+0x288>  // b.hs, b.nlast
   17fe0:	strb	wzr, [x19]
   17fe4:	ldp	x21, x22, [sp, #16]
   17fe8:	ldr	x30, [sp, #32]
   17fec:	ldp	x19, x20, [sp], #80
   17ff0:	ret
   17ff4:	bl	14de8 <_ZdaPvRKSt9nothrow_t@@Base+0x3128>
   17ff8:	cbz	x0, 18028 <__sanitizer_set_report_fd@@Base+0x268>
   17ffc:	ldrb	w1, [x0]
   18000:	cmp	w1, #0x0
   18004:	ccmp	x19, x20, #0x2, ne  // ne = any
   18008:	b.cs	17f90 <__sanitizer_set_report_fd@@Base+0x1d0>  // b.hs, b.nlast
   1800c:	nop
   18010:	strb	w1, [x19], #1
   18014:	ldrb	w1, [x0, #1]!
   18018:	cmp	w1, #0x0
   1801c:	ccmp	x19, x20, #0x2, ne  // ne = any
   18020:	b.cc	18010 <__sanitizer_set_report_fd@@Base+0x250>  // b.lo, b.ul, b.last
   18024:	b	17f90 <__sanitizer_set_report_fd@@Base+0x1d0>
   18028:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1802c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   18030:	add	x2, x2, #0xc30
   18034:	add	x0, x0, #0xc40
   18038:	mov	x4, #0x0                   	// #0
   1803c:	mov	x3, #0x0                   	// #0
   18040:	mov	w1, #0x2f                  	// #47
   18044:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   18048:	mov	x3, #0x0                   	// #0
   1804c:	b	17fac <__sanitizer_set_report_fd@@Base+0x1ec>
   18050:	stp	x19, x20, [sp, #-48]!
   18054:	mov	x1, #0x20                  	// #32
   18058:	mov	x19, x0
   1805c:	stp	x21, x22, [sp, #16]
   18060:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   18064:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   18068:	ldr	x22, [x22, #3632]
   1806c:	str	x30, [sp, #32]
   18070:	add	x21, x21, #0x9b8
   18074:	adrp	x20, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   18078:	mov	x0, x22
   1807c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18080:	mov	x2, x0
   18084:	add	x20, x20, #0x328
   18088:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1808c:	add	x3, x3, #0xcb8
   18090:	mov	x0, x19
   18094:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   18098:	stp	x21, x19, [x2]
   1809c:	add	x1, x1, #0xce0
   180a0:	strb	wzr, [x2, #16]
   180a4:	str	x20, [x2, #24]
   180a8:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   180ac:	mov	x0, x22
   180b0:	mov	x1, #0x20                  	// #32
   180b4:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   180b8:	mov	x2, x0
   180bc:	mov	w4, #0x1                   	// #1
   180c0:	mov	x0, x19
   180c4:	ldr	x30, [sp, #32]
   180c8:	stp	x21, x19, [x2]
   180cc:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   180d0:	strb	w4, [x2, #16]
   180d4:	add	x3, x3, #0xce8
   180d8:	str	x20, [x2, #24]
   180dc:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   180e0:	ldp	x21, x22, [sp, #16]
   180e4:	add	x1, x1, #0xd20
   180e8:	ldp	x19, x20, [sp], #48
   180ec:	b	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   180f0:	stp	x19, x20, [sp, #-64]!
   180f4:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   180f8:	mov	x19, x0
   180fc:	ldr	x20, [x20, #3632]
   18100:	stp	x21, x22, [sp, #16]
   18104:	mov	x21, x1
   18108:	mov	x0, x20
   1810c:	mov	x1, #0x10                  	// #16
   18110:	stp	x23, x24, [sp, #32]
   18114:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   18118:	add	x22, x22, #0x8b8
   1811c:	stp	x25, x30, [sp, #48]
   18120:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18124:	mov	x2, x0
   18128:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1812c:	add	x3, x3, #0xd38
   18130:	mov	x0, x19
   18134:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   18138:	stp	x22, x21, [x2]
   1813c:	add	x1, x1, #0xdb0
   18140:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   18144:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18148:	add	x23, x23, #0x998
   1814c:	mov	x0, x20
   18150:	mov	x1, #0x10                  	// #16
   18154:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18158:	mov	x2, x0
   1815c:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   18160:	add	x0, x21, #0x8
   18164:	add	x3, x3, #0xdc0
   18168:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1816c:	stp	x23, x0, [x2]
   18170:	add	x1, x1, #0xe18
   18174:	mov	x0, x19
   18178:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1817c:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   18180:	mov	x0, x20
   18184:	mov	x1, #0x10                  	// #16
   18188:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   1818c:	mov	x2, x0
   18190:	add	x4, x21, #0x10
   18194:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   18198:	add	x3, x3, #0xe38
   1819c:	mov	x0, x19
   181a0:	stp	x22, x4, [x2]
   181a4:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   181a8:	add	x1, x1, #0xed8
   181ac:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   181b0:	add	x25, x25, #0x8d8
   181b4:	mov	x0, x20
   181b8:	mov	x1, #0x10                  	// #16
   181bc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   181c0:	mov	x2, x0
   181c4:	add	x4, x21, #0x18
   181c8:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   181cc:	add	x3, x3, #0xee8
   181d0:	mov	x0, x19
   181d4:	stp	x23, x4, [x2]
   181d8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   181dc:	add	x1, x1, #0xf20
   181e0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   181e4:	adrp	x24, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   181e8:	mov	x0, x20
   181ec:	mov	x1, #0x10                  	// #16
   181f0:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   181f4:	mov	x2, x0
   181f8:	add	x4, x21, #0x20
   181fc:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   18200:	add	x3, x3, #0xf38
   18204:	mov	x0, x19
   18208:	stp	x22, x4, [x2]
   1820c:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   18210:	add	x1, x1, #0xf90
   18214:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18218:	add	x24, x24, #0x978
   1821c:	mov	x0, x20
   18220:	mov	x1, #0x10                  	// #16
   18224:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18228:	mov	x2, x0
   1822c:	add	x4, x21, #0x21
   18230:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   18234:	add	x3, x3, #0xfa8
   18238:	mov	x0, x19
   1823c:	stp	x22, x4, [x2]
   18240:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   18244:	add	x1, x1, #0xff8
   18248:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1824c:	mov	x0, x20
   18250:	mov	x1, #0x10                  	// #16
   18254:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18258:	mov	x2, x0
   1825c:	add	x4, x21, #0x22
   18260:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18264:	add	x3, x3, #0x10
   18268:	mov	x0, x19
   1826c:	stp	x22, x4, [x2]
   18270:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18274:	add	x1, x1, #0x58
   18278:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1827c:	mov	x0, x20
   18280:	mov	x1, #0x10                  	// #16
   18284:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18288:	mov	x2, x0
   1828c:	add	x4, x21, #0x23
   18290:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18294:	add	x3, x3, #0x70
   18298:	mov	x0, x19
   1829c:	stp	x22, x4, [x2]
   182a0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   182a4:	add	x1, x1, #0x98
   182a8:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   182ac:	mov	x0, x20
   182b0:	mov	x1, #0x10                  	// #16
   182b4:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   182b8:	mov	x2, x0
   182bc:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   182c0:	add	x0, x21, #0x24
   182c4:	add	x3, x3, #0xa8
   182c8:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   182cc:	stp	x25, x0, [x2]
   182d0:	add	x1, x1, #0xf0
   182d4:	mov	x0, x19
   182d8:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   182dc:	mov	x0, x20
   182e0:	mov	x1, #0x10                  	// #16
   182e4:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   182e8:	mov	x2, x0
   182ec:	add	x4, x21, #0x28
   182f0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   182f4:	add	x3, x3, #0x108
   182f8:	mov	x0, x19
   182fc:	stp	x23, x4, [x2]
   18300:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18304:	add	x1, x1, #0x170
   18308:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1830c:	mov	x0, x20
   18310:	mov	x1, #0x10                  	// #16
   18314:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18318:	mov	x2, x0
   1831c:	add	x4, x21, #0x30
   18320:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18324:	add	x3, x3, #0x180
   18328:	mov	x0, x19
   1832c:	stp	x22, x4, [x2]
   18330:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18334:	add	x1, x1, #0x1f8
   18338:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1833c:	mov	x0, x20
   18340:	mov	x1, #0x10                  	// #16
   18344:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18348:	mov	x2, x0
   1834c:	add	x4, x21, #0x31
   18350:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18354:	add	x3, x3, #0x208
   18358:	mov	x0, x19
   1835c:	stp	x22, x4, [x2]
   18360:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18364:	add	x1, x1, #0x258
   18368:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1836c:	mov	x0, x20
   18370:	mov	x1, #0x10                  	// #16
   18374:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18378:	mov	x2, x0
   1837c:	add	x4, x21, #0x34
   18380:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18384:	add	x3, x3, #0x268
   18388:	mov	x0, x19
   1838c:	stp	x25, x4, [x2]
   18390:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18394:	add	x1, x1, #0x2b0
   18398:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1839c:	mov	x0, x20
   183a0:	mov	x1, #0x10                  	// #16
   183a4:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   183a8:	mov	x2, x0
   183ac:	add	x4, x21, #0x38
   183b0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   183b4:	add	x3, x3, #0x2c0
   183b8:	mov	x0, x19
   183bc:	stp	x22, x4, [x2]
   183c0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   183c4:	add	x1, x1, #0x330
   183c8:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   183cc:	mov	x0, x20
   183d0:	mov	x1, #0x10                  	// #16
   183d4:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   183d8:	mov	x2, x0
   183dc:	add	x4, x21, #0x39
   183e0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   183e4:	add	x3, x3, #0x340
   183e8:	mov	x0, x19
   183ec:	stp	x22, x4, [x2]
   183f0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   183f4:	add	x1, x1, #0x360
   183f8:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   183fc:	mov	x0, x20
   18400:	mov	x1, #0x10                  	// #16
   18404:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18408:	mov	x2, x0
   1840c:	add	x4, x21, #0x3a
   18410:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18414:	add	x3, x3, #0x370
   18418:	mov	x0, x19
   1841c:	stp	x22, x4, [x2]
   18420:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18424:	add	x1, x1, #0x410
   18428:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1842c:	mov	x0, x20
   18430:	mov	x1, #0x10                  	// #16
   18434:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18438:	mov	x2, x0
   1843c:	add	x4, x21, #0x3b
   18440:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18444:	add	x3, x3, #0x428
   18448:	mov	x0, x19
   1844c:	stp	x22, x4, [x2]
   18450:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18454:	add	x1, x1, #0x478
   18458:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1845c:	mov	x0, x20
   18460:	mov	x1, #0x10                  	// #16
   18464:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18468:	mov	x2, x0
   1846c:	add	x4, x21, #0x3c
   18470:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18474:	add	x3, x3, #0x498
   18478:	mov	x0, x19
   1847c:	stp	x22, x4, [x2]
   18480:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18484:	add	x1, x1, #0x4e8
   18488:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1848c:	mov	x0, x20
   18490:	mov	x1, #0x10                  	// #16
   18494:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18498:	mov	x2, x0
   1849c:	add	x4, x21, #0x40
   184a0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   184a4:	add	x3, x3, #0x4f8
   184a8:	mov	x0, x19
   184ac:	stp	x25, x4, [x2]
   184b0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   184b4:	add	x1, x1, #0x560
   184b8:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   184bc:	mov	x0, x20
   184c0:	mov	x1, #0x10                  	// #16
   184c4:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   184c8:	mov	x2, x0
   184cc:	add	x4, x21, #0x44
   184d0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   184d4:	add	x3, x3, #0x578
   184d8:	mov	x0, x19
   184dc:	stp	x22, x4, [x2]
   184e0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   184e4:	add	x1, x1, #0x590
   184e8:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   184ec:	mov	x0, x20
   184f0:	mov	x1, #0x10                  	// #16
   184f4:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   184f8:	mov	x2, x0
   184fc:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18500:	add	x0, x21, #0x48
   18504:	add	x3, x3, #0x5a0
   18508:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1850c:	stp	x24, x0, [x2]
   18510:	add	x1, x1, #0x660
   18514:	mov	x0, x19
   18518:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1851c:	mov	x0, x20
   18520:	mov	x1, #0x10                  	// #16
   18524:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18528:	mov	x2, x0
   1852c:	add	x4, x21, #0x4c
   18530:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18534:	add	x3, x3, #0x670
   18538:	mov	x0, x19
   1853c:	stp	x24, x4, [x2]
   18540:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18544:	add	x1, x1, #0x730
   18548:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1854c:	mov	x0, x20
   18550:	mov	x1, #0x10                  	// #16
   18554:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18558:	mov	x2, x0
   1855c:	add	x4, x21, #0x50
   18560:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18564:	add	x3, x3, #0x740
   18568:	mov	x0, x19
   1856c:	stp	x24, x4, [x2]
   18570:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18574:	add	x1, x1, #0x800
   18578:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1857c:	mov	x0, x20
   18580:	mov	x1, #0x10                  	// #16
   18584:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18588:	mov	x2, x0
   1858c:	add	x4, x21, #0x54
   18590:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18594:	add	x3, x3, #0x810
   18598:	mov	x0, x19
   1859c:	stp	x24, x4, [x2]
   185a0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   185a4:	add	x1, x1, #0x8d0
   185a8:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   185ac:	mov	x0, x20
   185b0:	mov	x1, #0x10                  	// #16
   185b4:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   185b8:	mov	x2, x0
   185bc:	add	x4, x21, #0x58
   185c0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   185c4:	add	x3, x3, #0x8e0
   185c8:	mov	x0, x19
   185cc:	stp	x24, x4, [x2]
   185d0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   185d4:	add	x1, x1, #0x9a0
   185d8:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   185dc:	mov	x0, x20
   185e0:	mov	x1, #0x10                  	// #16
   185e4:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   185e8:	mov	x2, x0
   185ec:	add	x4, x21, #0x5c
   185f0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   185f4:	add	x3, x3, #0x9b0
   185f8:	mov	x0, x19
   185fc:	stp	x24, x4, [x2]
   18600:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18604:	add	x1, x1, #0xa70
   18608:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   1860c:	adrp	x24, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   18610:	mov	x0, x20
   18614:	mov	x1, #0x10                  	// #16
   18618:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   1861c:	mov	x2, x0
   18620:	add	x4, x21, #0x60
   18624:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18628:	add	x3, x3, #0xa80
   1862c:	mov	x0, x19
   18630:	stp	x22, x4, [x2]
   18634:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   18638:	add	x1, x1, #0xaf0
   1863c:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18640:	add	x24, x24, #0x8f8
   18644:	mov	x0, x20
   18648:	mov	x1, #0x10                  	// #16
   1864c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18650:	mov	x2, x0
   18654:	add	x4, x21, #0x61
   18658:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1865c:	add	x3, x3, #0xb08
   18660:	mov	x0, x19
   18664:	stp	x22, x4, [x2]
   18668:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1866c:	add	x1, x1, #0xb40
   18670:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18674:	mov	x0, x20
   18678:	mov	x1, #0x10                  	// #16
   1867c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18680:	mov	x2, x0
   18684:	add	x4, x21, #0x62
   18688:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1868c:	add	x3, x3, #0xb50
   18690:	mov	x0, x19
   18694:	stp	x22, x4, [x2]
   18698:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1869c:	add	x1, x1, #0xb78
   186a0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   186a4:	mov	x0, x20
   186a8:	mov	x1, #0x10                  	// #16
   186ac:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   186b0:	mov	x2, x0
   186b4:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   186b8:	add	x0, x21, #0x68
   186bc:	add	x3, x3, #0xb90
   186c0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   186c4:	stp	x24, x0, [x2]
   186c8:	add	x1, x1, #0xc08
   186cc:	mov	x0, x19
   186d0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   186d4:	mov	x0, x20
   186d8:	mov	x1, #0x10                  	// #16
   186dc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   186e0:	mov	x2, x0
   186e4:	add	x4, x21, #0x70
   186e8:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   186ec:	add	x3, x3, #0xc28
   186f0:	mov	x0, x19
   186f4:	stp	x23, x4, [x2]
   186f8:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   186fc:	add	x1, x1, #0xc50
   18700:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18704:	mov	x0, x20
   18708:	mov	x1, #0x10                  	// #16
   1870c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18710:	mov	x2, x0
   18714:	add	x4, x21, #0x78
   18718:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1871c:	add	x3, x3, #0xc58
   18720:	mov	x0, x19
   18724:	stp	x22, x4, [x2]
   18728:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1872c:	add	x1, x1, #0xca0
   18730:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18734:	mov	x0, x20
   18738:	mov	x1, #0x10                  	// #16
   1873c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18740:	mov	x2, x0
   18744:	add	x4, x21, #0x79
   18748:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1874c:	add	x3, x3, #0xcb8
   18750:	mov	x0, x19
   18754:	stp	x22, x4, [x2]
   18758:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1875c:	add	x1, x1, #0xcd8
   18760:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18764:	mov	x0, x20
   18768:	mov	x1, #0x10                  	// #16
   1876c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18770:	mov	x2, x0
   18774:	add	x4, x21, #0x7a
   18778:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1877c:	add	x3, x3, #0xcf0
   18780:	mov	x0, x19
   18784:	stp	x22, x4, [x2]
   18788:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1878c:	add	x1, x1, #0xd10
   18790:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18794:	mov	x0, x20
   18798:	mov	x1, #0x10                  	// #16
   1879c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   187a0:	mov	x2, x0
   187a4:	add	x4, x21, #0x80
   187a8:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   187ac:	add	x3, x3, #0xd18
   187b0:	mov	x0, x19
   187b4:	stp	x24, x4, [x2]
   187b8:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   187bc:	add	x1, x1, #0xd90
   187c0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   187c4:	mov	x0, x20
   187c8:	mov	x1, #0x10                  	// #16
   187cc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   187d0:	mov	x2, x0
   187d4:	add	x4, x21, #0x88
   187d8:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   187dc:	add	x3, x3, #0xda0
   187e0:	mov	x0, x19
   187e4:	stp	x24, x4, [x2]
   187e8:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   187ec:	add	x1, x1, #0xe40
   187f0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   187f4:	mov	x0, x20
   187f8:	mov	x1, #0x10                  	// #16
   187fc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18800:	mov	x2, x0
   18804:	add	x4, x21, #0x90
   18808:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1880c:	add	x3, x3, #0xe58
   18810:	mov	x0, x19
   18814:	stp	x24, x4, [x2]
   18818:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1881c:	add	x1, x1, #0xfb8
   18820:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18824:	mov	x0, x20
   18828:	mov	x1, #0x10                  	// #16
   1882c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18830:	mov	x2, x0
   18834:	add	x4, x21, #0x98
   18838:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   1883c:	add	x3, x3, #0xfd0
   18840:	mov	x0, x19
   18844:	stp	x24, x4, [x2]
   18848:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   1884c:	add	x1, x1, #0x48
   18850:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18854:	mov	x0, x20
   18858:	mov	x1, #0x10                  	// #16
   1885c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18860:	mov	x2, x0
   18864:	add	x4, x21, #0xa0
   18868:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   1886c:	add	x3, x3, #0x60
   18870:	mov	x0, x19
   18874:	stp	x22, x4, [x2]
   18878:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   1887c:	add	x1, x1, #0x88
   18880:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18884:	mov	x0, x20
   18888:	mov	x1, #0x10                  	// #16
   1888c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18890:	mov	x2, x0
   18894:	add	x4, x21, #0xa4
   18898:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   1889c:	add	x3, x3, #0x98
   188a0:	mov	x0, x19
   188a4:	stp	x25, x4, [x2]
   188a8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   188ac:	add	x1, x1, #0x168
   188b0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   188b4:	mov	x0, x20
   188b8:	mov	x1, #0x10                  	// #16
   188bc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   188c0:	mov	x2, x0
   188c4:	add	x4, x21, #0xa8
   188c8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   188cc:	add	x3, x3, #0x190
   188d0:	mov	x0, x19
   188d4:	stp	x22, x4, [x2]
   188d8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   188dc:	add	x1, x1, #0x1f0
   188e0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   188e4:	mov	x0, x20
   188e8:	mov	x1, #0x10                  	// #16
   188ec:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   188f0:	mov	x2, x0
   188f4:	add	x4, x21, #0xa9
   188f8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   188fc:	add	x3, x3, #0x208
   18900:	mov	x0, x19
   18904:	stp	x22, x4, [x2]
   18908:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   1890c:	add	x1, x1, #0x288
   18910:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18914:	mov	x0, x20
   18918:	mov	x1, #0x10                  	// #16
   1891c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18920:	mov	x2, x0
   18924:	add	x4, x21, #0xb0
   18928:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   1892c:	add	x3, x3, #0x298
   18930:	mov	x0, x19
   18934:	stp	x23, x4, [x2]
   18938:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   1893c:	add	x1, x1, #0x2e0
   18940:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18944:	mov	x0, x20
   18948:	mov	x1, #0x10                  	// #16
   1894c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18950:	mov	x2, x0
   18954:	add	x4, x21, #0xb8
   18958:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   1895c:	add	x3, x3, #0x2f0
   18960:	mov	x0, x19
   18964:	stp	x22, x4, [x2]
   18968:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   1896c:	add	x1, x1, #0x358
   18970:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18974:	mov	x0, x20
   18978:	mov	x1, #0x10                  	// #16
   1897c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18980:	mov	x2, x0
   18984:	add	x4, x21, #0xb9
   18988:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   1898c:	add	x3, x3, #0x370
   18990:	mov	x0, x19
   18994:	stp	x22, x4, [x2]
   18998:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   1899c:	add	x1, x1, #0x398
   189a0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   189a4:	mov	x0, x20
   189a8:	mov	x1, #0x10                  	// #16
   189ac:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   189b0:	mov	x2, x0
   189b4:	add	x4, x21, #0xba
   189b8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   189bc:	add	x3, x3, #0x3b0
   189c0:	mov	x0, x19
   189c4:	stp	x22, x4, [x2]
   189c8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   189cc:	add	x1, x1, #0x480
   189d0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   189d4:	mov	x0, x20
   189d8:	mov	x1, #0x10                  	// #16
   189dc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   189e0:	mov	x2, x0
   189e4:	add	x4, x21, #0xbb
   189e8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   189ec:	add	x3, x3, #0x498
   189f0:	mov	x0, x19
   189f4:	stp	x22, x4, [x2]
   189f8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   189fc:	add	x1, x1, #0x4e0
   18a00:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18a04:	mov	x0, x20
   18a08:	mov	x1, #0x10                  	// #16
   18a0c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18a10:	mov	x2, x0
   18a14:	add	x4, x21, #0xbc
   18a18:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18a1c:	add	x3, x3, #0x4f8
   18a20:	mov	x0, x19
   18a24:	stp	x22, x4, [x2]
   18a28:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18a2c:	add	x1, x1, #0x530
   18a30:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18a34:	mov	x0, x20
   18a38:	mov	x1, #0x10                  	// #16
   18a3c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18a40:	mov	x2, x0
   18a44:	add	x4, x21, #0xbd
   18a48:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18a4c:	add	x3, x3, #0x548
   18a50:	mov	x0, x19
   18a54:	stp	x22, x4, [x2]
   18a58:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18a5c:	add	x1, x1, #0x590
   18a60:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18a64:	mov	x0, x20
   18a68:	mov	x1, #0x10                  	// #16
   18a6c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18a70:	mov	x2, x0
   18a74:	add	x4, x21, #0xc0
   18a78:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18a7c:	add	x3, x3, #0x5a8
   18a80:	mov	x0, x19
   18a84:	stp	x25, x4, [x2]
   18a88:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18a8c:	add	x1, x1, #0x678
   18a90:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18a94:	mov	x0, x20
   18a98:	mov	x1, #0x10                  	// #16
   18a9c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18aa0:	mov	x2, x0
   18aa4:	add	x4, x21, #0xc8
   18aa8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18aac:	add	x3, x3, #0x690
   18ab0:	mov	x0, x19
   18ab4:	stp	x23, x4, [x2]
   18ab8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18abc:	add	x1, x1, #0x720
   18ac0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18ac4:	mov	x0, x20
   18ac8:	mov	x1, #0x10                  	// #16
   18acc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18ad0:	mov	x2, x0
   18ad4:	add	x4, x21, #0xd0
   18ad8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18adc:	add	x3, x3, #0x738
   18ae0:	mov	x0, x19
   18ae4:	stp	x22, x4, [x2]
   18ae8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18aec:	add	x1, x1, #0x770
   18af0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18af4:	mov	x0, x20
   18af8:	mov	x1, #0x10                  	// #16
   18afc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18b00:	mov	x2, x0
   18b04:	add	x4, x21, #0xd1
   18b08:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18b0c:	add	x3, x3, #0x790
   18b10:	mov	x0, x19
   18b14:	stp	x22, x4, [x2]
   18b18:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18b1c:	add	x1, x1, #0x7d0
   18b20:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18b24:	mov	x0, x20
   18b28:	mov	x1, #0x10                  	// #16
   18b2c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18b30:	mov	x2, x0
   18b34:	add	x4, x21, #0xd2
   18b38:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18b3c:	add	x3, x3, #0x7e8
   18b40:	mov	x0, x19
   18b44:	stp	x22, x4, [x2]
   18b48:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18b4c:	add	x1, x1, #0x840
   18b50:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18b54:	mov	x0, x20
   18b58:	mov	x1, #0x10                  	// #16
   18b5c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18b60:	mov	x2, x0
   18b64:	add	x4, x21, #0xd3
   18b68:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18b6c:	add	x3, x3, #0x858
   18b70:	mov	x0, x19
   18b74:	stp	x22, x4, [x2]
   18b78:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18b7c:	add	x1, x1, #0x8b0
   18b80:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18b84:	mov	x0, x20
   18b88:	mov	x1, #0x10                  	// #16
   18b8c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18b90:	mov	x2, x0
   18b94:	add	x4, x21, #0xd4
   18b98:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18b9c:	add	x3, x3, #0x8c8
   18ba0:	mov	x0, x19
   18ba4:	stp	x22, x4, [x2]
   18ba8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18bac:	add	x1, x1, #0x918
   18bb0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18bb4:	mov	x0, x20
   18bb8:	mov	x1, #0x10                  	// #16
   18bbc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18bc0:	mov	x2, x0
   18bc4:	add	x4, x21, #0xd5
   18bc8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18bcc:	add	x3, x3, #0x930
   18bd0:	mov	x0, x19
   18bd4:	stp	x22, x4, [x2]
   18bd8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18bdc:	add	x1, x1, #0x978
   18be0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18be4:	mov	x0, x20
   18be8:	mov	x1, #0x10                  	// #16
   18bec:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18bf0:	mov	x2, x0
   18bf4:	add	x4, x21, #0xd6
   18bf8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18bfc:	add	x3, x3, #0x990
   18c00:	mov	x0, x19
   18c04:	stp	x22, x4, [x2]
   18c08:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18c0c:	add	x1, x1, #0x9e8
   18c10:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18c14:	mov	x0, x20
   18c18:	mov	x1, #0x10                  	// #16
   18c1c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18c20:	mov	x2, x0
   18c24:	add	x4, x21, #0xd7
   18c28:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18c2c:	add	x3, x3, #0xa00
   18c30:	mov	x0, x19
   18c34:	stp	x22, x4, [x2]
   18c38:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18c3c:	add	x1, x1, #0xa48
   18c40:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18c44:	mov	x0, x20
   18c48:	mov	x1, #0x10                  	// #16
   18c4c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18c50:	mov	x2, x0
   18c54:	add	x4, x21, #0xd8
   18c58:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18c5c:	add	x3, x3, #0xa60
   18c60:	mov	x0, x19
   18c64:	stp	x22, x4, [x2]
   18c68:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18c6c:	add	x1, x1, #0xac0
   18c70:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18c74:	mov	x0, x20
   18c78:	mov	x1, #0x10                  	// #16
   18c7c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18c80:	mov	x2, x0
   18c84:	add	x4, x21, #0xd9
   18c88:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18c8c:	add	x3, x3, #0xad8
   18c90:	mov	x0, x19
   18c94:	stp	x22, x4, [x2]
   18c98:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18c9c:	add	x1, x1, #0xb20
   18ca0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18ca4:	mov	x0, x20
   18ca8:	mov	x1, #0x10                  	// #16
   18cac:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18cb0:	mov	x2, x0
   18cb4:	add	x4, x21, #0xda
   18cb8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18cbc:	add	x3, x3, #0xb38
   18cc0:	mov	x0, x19
   18cc4:	stp	x22, x4, [x2]
   18cc8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18ccc:	add	x1, x1, #0xb90
   18cd0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18cd4:	mov	x0, x20
   18cd8:	mov	x1, #0x10                  	// #16
   18cdc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18ce0:	mov	x2, x0
   18ce4:	add	x4, x21, #0xdb
   18ce8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18cec:	add	x3, x3, #0xba0
   18cf0:	mov	x0, x19
   18cf4:	stp	x22, x4, [x2]
   18cf8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18cfc:	add	x1, x1, #0xbe0
   18d00:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18d04:	mov	x0, x20
   18d08:	mov	x1, #0x10                  	// #16
   18d0c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18d10:	mov	x2, x0
   18d14:	add	x4, x21, #0xdc
   18d18:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18d1c:	add	x3, x3, #0xbf8
   18d20:	mov	x0, x19
   18d24:	stp	x22, x4, [x2]
   18d28:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18d2c:	add	x1, x1, #0xc50
   18d30:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18d34:	mov	x0, x20
   18d38:	mov	x1, #0x10                  	// #16
   18d3c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18d40:	mov	x2, x0
   18d44:	add	x4, x21, #0xdd
   18d48:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18d4c:	add	x3, x3, #0xc68
   18d50:	mov	x0, x19
   18d54:	stp	x22, x4, [x2]
   18d58:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18d5c:	add	x1, x1, #0xcb0
   18d60:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18d64:	mov	x0, x20
   18d68:	mov	x1, #0x10                  	// #16
   18d6c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18d70:	mov	x2, x0
   18d74:	add	x4, x21, #0xde
   18d78:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18d7c:	add	x3, x3, #0xcc0
   18d80:	mov	x0, x19
   18d84:	stp	x22, x4, [x2]
   18d88:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18d8c:	add	x1, x1, #0xd08
   18d90:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18d94:	mov	x0, x20
   18d98:	mov	x1, #0x10                  	// #16
   18d9c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18da0:	mov	x2, x0
   18da4:	add	x4, x21, #0xdf
   18da8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18dac:	add	x3, x3, #0xd18
   18db0:	mov	x0, x19
   18db4:	stp	x22, x4, [x2]
   18db8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18dbc:	add	x1, x1, #0xd68
   18dc0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18dc4:	mov	x0, x20
   18dc8:	mov	x1, #0x10                  	// #16
   18dcc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18dd0:	mov	x2, x0
   18dd4:	add	x1, x21, #0xe0
   18dd8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18ddc:	add	x3, x3, #0xd80
   18de0:	stp	x25, x1, [x0]
   18de4:	mov	x0, x19
   18de8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18dec:	add	x1, x1, #0xdc0
   18df0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18df4:	mov	x0, x20
   18df8:	mov	x1, #0x10                  	// #16
   18dfc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18e00:	mov	x2, x0
   18e04:	add	x4, x21, #0xe4
   18e08:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18e0c:	add	x3, x3, #0xdd0
   18e10:	mov	x0, x19
   18e14:	stp	x22, x4, [x2]
   18e18:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18e1c:	add	x1, x1, #0xe28
   18e20:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18e24:	mov	x0, x20
   18e28:	mov	x1, #0x10                  	// #16
   18e2c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18e30:	mov	x2, x0
   18e34:	add	x4, x21, #0xe5
   18e38:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18e3c:	add	x3, x3, #0xe38
   18e40:	mov	x0, x19
   18e44:	stp	x22, x4, [x2]
   18e48:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18e4c:	add	x1, x1, #0xea0
   18e50:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18e54:	mov	x0, x20
   18e58:	mov	x1, #0x10                  	// #16
   18e5c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18e60:	mov	x2, x0
   18e64:	add	x4, x21, #0xe6
   18e68:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18e6c:	add	x3, x3, #0xeb8
   18e70:	mov	x0, x19
   18e74:	stp	x22, x4, [x2]
   18e78:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18e7c:	add	x1, x1, #0xee8
   18e80:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18e84:	mov	x0, x20
   18e88:	mov	x1, #0x10                  	// #16
   18e8c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18e90:	mov	x2, x0
   18e94:	add	x4, x21, #0xe7
   18e98:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18e9c:	add	x3, x3, #0xef8
   18ea0:	mov	x0, x19
   18ea4:	stp	x22, x4, [x2]
   18ea8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18eac:	add	x1, x1, #0xf18
   18eb0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18eb4:	mov	x0, x20
   18eb8:	mov	x1, #0x10                  	// #16
   18ebc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18ec0:	mov	x2, x0
   18ec4:	add	x4, x21, #0xe8
   18ec8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18ecc:	add	x3, x3, #0xf28
   18ed0:	mov	x0, x19
   18ed4:	stp	x23, x4, [x2]
   18ed8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18edc:	add	x1, x1, #0xf40
   18ee0:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18ee4:	mov	x0, x20
   18ee8:	mov	x1, #0x10                  	// #16
   18eec:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18ef0:	mov	x2, x0
   18ef4:	add	x4, x21, #0xf0
   18ef8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18efc:	add	x3, x3, #0xf50
   18f00:	mov	x0, x19
   18f04:	stp	x22, x4, [x2]
   18f08:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18f0c:	add	x1, x1, #0xf98
   18f10:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18f14:	mov	x0, x20
   18f18:	mov	x1, #0x10                  	// #16
   18f1c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18f20:	mov	x2, x0
   18f24:	add	x4, x21, #0xf1
   18f28:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5458>
   18f2c:	add	x3, x3, #0xfb0
   18f30:	mov	x0, x19
   18f34:	stp	x22, x4, [x2]
   18f38:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   18f3c:	add	x1, x1, #0x10
   18f40:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18f44:	mov	x0, x20
   18f48:	mov	x1, #0x10                  	// #16
   18f4c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18f50:	mov	x2, x0
   18f54:	add	x4, x21, #0xf2
   18f58:	adrp	x3, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   18f5c:	add	x3, x3, #0x20
   18f60:	mov	x0, x19
   18f64:	stp	x22, x4, [x2]
   18f68:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   18f6c:	add	x1, x1, #0x78
   18f70:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18f74:	add	x21, x21, #0xf3
   18f78:	mov	x0, x20
   18f7c:	mov	x1, #0x10                  	// #16
   18f80:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18f84:	mov	x2, x0
   18f88:	adrp	x3, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   18f8c:	add	x3, x3, #0x90
   18f90:	mov	x0, x19
   18f94:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   18f98:	stp	x22, x21, [x2]
   18f9c:	add	x1, x1, #0xd8
   18fa0:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   18fa4:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18fa8:	add	x22, x22, #0x9b8
   18fac:	mov	x0, x20
   18fb0:	mov	x1, #0x20                  	// #32
   18fb4:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18fb8:	mov	x2, x0
   18fbc:	adrp	x21, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   18fc0:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   18fc4:	add	x21, x21, #0x328
   18fc8:	add	x3, x3, #0xcb8
   18fcc:	stp	x22, x19, [x2]
   18fd0:	mov	x0, x19
   18fd4:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   18fd8:	strb	wzr, [x2, #16]
   18fdc:	add	x1, x1, #0xce0
   18fe0:	str	x21, [x2, #24]
   18fe4:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   18fe8:	mov	x0, x20
   18fec:	mov	x1, #0x20                  	// #32
   18ff0:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18ff4:	mov	x2, x0
   18ff8:	mov	w4, #0x1                   	// #1
   18ffc:	mov	x0, x19
   19000:	ldp	x23, x24, [sp, #32]
   19004:	strb	w4, [x2, #16]
   19008:	ldp	x25, x30, [sp, #48]
   1900c:	stp	x22, x19, [x2]
   19010:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   19014:	str	x21, [x2, #24]
   19018:	add	x3, x3, #0xce8
   1901c:	ldp	x21, x22, [sp, #16]
   19020:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   19024:	ldp	x19, x20, [sp], #64
   19028:	add	x1, x1, #0xd20
   1902c:	b	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   19030:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   19034:	ldrb	w4, [x0, #231]
   19038:	ldr	w3, [x0, #52]
   1903c:	ldr	x2, [x1, #3816]
   19040:	ldrb	w1, [x0, #169]
   19044:	orr	w1, w1, w4
   19048:	str	w3, [x2]
   1904c:	strb	w1, [x0, #169]
   19050:	ret
   19054:	nop
   19058:	mov	x2, x0
   1905c:	mov	w0, #0x1                   	// #1
   19060:	ldr	x2, [x2, #8]
   19064:	str	x1, [x2]
   19068:	ret
   1906c:	nop
   19070:	mov	x3, x0
   19074:	stp	x19, x30, [sp, #-16]!
   19078:	mov	x19, x2
   1907c:	mov	x0, x1
   19080:	mov	x1, x2
   19084:	ldr	x3, [x3, #8]
   19088:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1908c:	add	x2, x2, #0xbd8
   19090:	ldr	w3, [x3]
   19094:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   19098:	cmp	x19, w0, sxtw
   1909c:	cset	w0, hi  // hi = pmore
   190a0:	ldp	x19, x30, [sp], #16
   190a4:	ret
   190a8:	mov	x3, x0
   190ac:	stp	x19, x30, [sp, #-16]!
   190b0:	mov	x19, x2
   190b4:	mov	x0, x1
   190b8:	mov	x1, x2
   190bc:	ldr	x3, [x3, #24]
   190c0:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   190c4:	add	x2, x2, #0xbf8
   190c8:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   190cc:	cmp	x19, w0, sxtw
   190d0:	cset	w0, hi  // hi = pmore
   190d4:	ldp	x19, x30, [sp], #16
   190d8:	ret
   190dc:	nop
   190e0:	mov	x3, x0
   190e4:	stp	x19, x30, [sp, #-16]!
   190e8:	mov	x19, x2
   190ec:	mov	x0, x1
   190f0:	mov	x1, x2
   190f4:	ldr	x3, [x3, #8]
   190f8:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   190fc:	add	x2, x2, #0xbf8
   19100:	ldr	x3, [x3]
   19104:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   19108:	cmp	x19, w0, sxtw
   1910c:	cset	w0, hi  // hi = pmore
   19110:	ldp	x19, x30, [sp], #16
   19114:	ret
   19118:	stp	x19, x20, [sp, #-32]!
   1911c:	mov	x19, x1
   19120:	mov	x20, x0
   19124:	mov	x0, x1
   19128:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1912c:	add	x1, x1, #0xc60
   19130:	str	x30, [sp, #16]
   19134:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   19138:	cbnz	w0, 19158 <__sanitizer_set_report_fd@@Base+0x1398>
   1913c:	mov	w1, #0x0                   	// #0
   19140:	ldr	x2, [x20, #8]
   19144:	mov	w0, #0x1                   	// #1
   19148:	ldr	x30, [sp, #16]
   1914c:	str	w1, [x2]
   19150:	ldp	x19, x20, [sp], #32
   19154:	ret
   19158:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1915c:	mov	x0, x19
   19160:	add	x1, x1, #0xc68
   19164:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   19168:	cbz	w0, 1913c <__sanitizer_set_report_fd@@Base+0x137c>
   1916c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   19170:	mov	x0, x19
   19174:	add	x1, x1, #0xbf0
   19178:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   1917c:	cbz	w0, 1913c <__sanitizer_set_report_fd@@Base+0x137c>
   19180:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   19184:	mov	x0, x19
   19188:	add	x1, x1, #0x340
   1918c:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   19190:	cbz	w0, 191a8 <__sanitizer_set_report_fd@@Base+0x13e8>
   19194:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   19198:	mov	x0, x19
   1919c:	add	x1, x1, #0xc70
   191a0:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   191a4:	cbnz	w0, 191b0 <__sanitizer_set_report_fd@@Base+0x13f0>
   191a8:	mov	w1, #0x1                   	// #1
   191ac:	b	19140 <__sanitizer_set_report_fd@@Base+0x1380>
   191b0:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   191b4:	mov	x0, x19
   191b8:	add	x1, x1, #0xbe8
   191bc:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   191c0:	cbz	w0, 191a8 <__sanitizer_set_report_fd@@Base+0x13e8>
   191c4:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   191c8:	mov	x0, x19
   191cc:	add	x1, x1, #0xe80
   191d0:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   191d4:	cbz	w0, 1920c <__sanitizer_set_report_fd@@Base+0x144c>
   191d8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   191dc:	mov	x0, x19
   191e0:	add	x1, x1, #0xbd0
   191e4:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   191e8:	cbz	w0, 1920c <__sanitizer_set_report_fd@@Base+0x144c>
   191ec:	mov	x1, x19
   191f0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   191f4:	add	x0, x0, #0xbe0
   191f8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   191fc:	mov	w0, #0x0                   	// #0
   19200:	ldr	x30, [sp, #16]
   19204:	ldp	x19, x20, [sp], #32
   19208:	ret
   1920c:	ldr	x1, [x20, #8]
   19210:	mov	w2, #0x2                   	// #2
   19214:	mov	w0, #0x1                   	// #1
   19218:	ldr	x30, [sp, #16]
   1921c:	str	w2, [x1]
   19220:	ldp	x19, x20, [sp], #32
   19224:	ret
   19228:	stp	x19, x20, [sp, #-32]!
   1922c:	mov	x20, x0
   19230:	mov	x19, x1
   19234:	str	x30, [sp, #24]
   19238:	mov	x0, x1
   1923c:	str	x19, [x20, #24]
   19240:	mov	w1, #0x25                  	// #37
   19244:	bl	1a528 <__sanitizer_set_report_fd@@Base+0x2768>
   19248:	cbz	x0, 192ac <__sanitizer_set_report_fd@@Base+0x14ec>
   1924c:	mov	w2, #0x0                   	// #0
   19250:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19254:	mov	x0, #0x1000                	// #4096
   19258:	add	x1, x1, #0xf8
   1925c:	str	x21, [sp, #16]
   19260:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   19264:	mov	x21, x0
   19268:	mov	x2, #0x1000                	// #4096
   1926c:	mov	x0, x19
   19270:	mov	x1, x21
   19274:	bl	17ee0 <__sanitizer_set_report_fd@@Base+0x120>
   19278:	ldrb	w2, [x20, #16]
   1927c:	mov	x1, x21
   19280:	ldr	x0, [x20, #8]
   19284:	bl	199f8 <__sanitizer_set_report_fd@@Base+0x1c38>
   19288:	mov	w19, w0
   1928c:	mov	x1, #0x1000                	// #4096
   19290:	mov	x0, x21
   19294:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   19298:	mov	w0, w19
   1929c:	ldr	x21, [sp, #16]
   192a0:	ldr	x30, [sp, #24]
   192a4:	ldp	x19, x20, [sp], #32
   192a8:	ret
   192ac:	ldrb	w2, [x20, #16]
   192b0:	mov	x1, x19
   192b4:	ldr	x0, [x20, #8]
   192b8:	ldr	x30, [sp, #24]
   192bc:	ldp	x19, x20, [sp], #32
   192c0:	b	199f8 <__sanitizer_set_report_fd@@Base+0x1c38>
   192c4:	nop
   192c8:	stp	x19, x20, [sp, #-48]!
   192cc:	stp	x21, x22, [sp, #16]
   192d0:	adrp	x21, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   192d4:	add	x19, x21, #0x610
   192d8:	str	x30, [sp, #32]
   192dc:	ldr	w1, [x19, #160]
   192e0:	cbnz	w1, 192f4 <__sanitizer_set_report_fd@@Base+0x1534>
   192e4:	ldp	x21, x22, [sp, #16]
   192e8:	ldr	x30, [sp, #32]
   192ec:	ldp	x19, x20, [sp], #48
   192f0:	ret
   192f4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   192f8:	add	x0, x0, #0x130
   192fc:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   19300:	ldr	w0, [x19, #160]
   19304:	cmp	w0, #0x0
   19308:	b.le	19334 <__sanitizer_set_report_fd@@Base+0x1574>
   1930c:	adrp	x22, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19310:	add	x22, x22, #0x160
   19314:	mov	x20, #0x0                   	// #0
   19318:	ldr	x1, [x19, x20, lsl #3]
   1931c:	mov	x0, x22
   19320:	add	x20, x20, #0x1
   19324:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   19328:	ldr	w0, [x19, #160]
   1932c:	cmp	w0, w20
   19330:	b.gt	19318 <__sanitizer_set_report_fd@@Base+0x1558>
   19334:	add	x21, x21, #0x610
   19338:	ldr	x30, [sp, #32]
   1933c:	str	wzr, [x21, #160]
   19340:	ldp	x21, x22, [sp, #16]
   19344:	ldp	x19, x20, [sp], #48
   19348:	ret
   1934c:	nop
   19350:	stp	x19, x20, [sp, #-32]!
   19354:	stp	x21, x30, [sp, #16]
   19358:	mov	x21, x1
   1935c:	mov	x0, x21
   19360:	mov	x1, x2
   19364:	bl	1b498 <__sanitizer_set_report_fd@@Base+0x36d8>
   19368:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   1936c:	mov	x19, x0
   19370:	add	x0, x1, #0x610
   19374:	add	x1, x19, #0x1
   19378:	add	x0, x0, #0xa8
   1937c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   19380:	mov	x20, x0
   19384:	mov	x1, x21
   19388:	mov	x2, x19
   1938c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   19390:	mov	x0, x20
   19394:	strb	wzr, [x20, x19]
   19398:	ldp	x21, x30, [sp, #16]
   1939c:	ldp	x19, x20, [sp], #32
   193a0:	ret
   193a4:	nop
   193a8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   193ac:	stp	x19, x20, [sp, #-192]!
   193b0:	mov	x20, x0
   193b4:	ldr	x1, [x1, #4024]
   193b8:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   193bc:	add	x0, x0, #0x168
   193c0:	strb	wzr, [sp, #191]
   193c4:	ldr	x1, [x1]
   193c8:	str	x30, [sp, #48]
   193cc:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   193d0:	ldr	w0, [x20, #8]
   193d4:	cmp	w0, #0x0
   193d8:	b.le	194a4 <__sanitizer_set_report_fd@@Base+0x16e4>
   193dc:	mov	x19, #0x0                   	// #0
   193e0:	stp	x21, x22, [sp, #16]
   193e4:	add	x22, sp, #0x40
   193e8:	mov	w21, #0x0                   	// #0
   193ec:	stp	x23, x24, [sp, #32]
   193f0:	adrp	x24, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   193f4:	adrp	x23, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   193f8:	add	x24, x24, #0x328
   193fc:	add	x23, x23, #0x220
   19400:	b	19438 <__sanitizer_set_report_fd@@Base+0x1678>
   19404:	add	x2, x1, x19
   19408:	mov	x0, x23
   1940c:	ldr	x1, [x1, x19]
   19410:	mov	x4, x22
   19414:	ldr	x2, [x2, #8]
   19418:	adrp	x3, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1941c:	add	x3, x3, #0x210
   19420:	add	w21, w21, #0x1
   19424:	add	x19, x19, #0x18
   19428:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   1942c:	ldr	w0, [x20, #8]
   19430:	cmp	w0, w21
   19434:	b.le	1949c <__sanitizer_set_report_fd@@Base+0x16dc>
   19438:	ldr	x3, [x20]
   1943c:	mov	x1, x22
   19440:	mov	x2, #0x80                  	// #128
   19444:	add	x3, x3, x19
   19448:	ldr	x0, [x3, #16]
   1944c:	ldr	x3, [x0]
   19450:	ldr	x3, [x3, #8]
   19454:	blr	x3
   19458:	and	w0, w0, #0xff
   1945c:	ldrb	w3, [sp, #191]
   19460:	cbnz	x3, 194b0 <__sanitizer_set_report_fd@@Base+0x16f0>
   19464:	ldr	x1, [x20]
   19468:	cbz	w0, 19404 <__sanitizer_set_report_fd@@Base+0x1644>
   1946c:	add	x2, x1, x19
   19470:	mov	x0, x23
   19474:	ldr	x1, [x1, x19]
   19478:	mov	x4, x22
   1947c:	ldr	x2, [x2, #8]
   19480:	mov	x3, x24
   19484:	add	w21, w21, #0x1
   19488:	add	x19, x19, #0x18
   1948c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   19490:	ldr	w0, [x20, #8]
   19494:	cmp	w0, w21
   19498:	b.gt	19438 <__sanitizer_set_report_fd@@Base+0x1678>
   1949c:	ldp	x21, x22, [sp, #16]
   194a0:	ldp	x23, x24, [sp, #32]
   194a4:	ldr	x30, [sp, #48]
   194a8:	ldp	x19, x20, [sp], #192
   194ac:	ret
   194b0:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   194b4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   194b8:	add	x2, x2, #0x188
   194bc:	add	x0, x0, #0x1b8
   194c0:	mov	x4, #0x0                   	// #0
   194c4:	mov	w1, #0x40                  	// #64
   194c8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   194cc:	nop
   194d0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   194d4:	mov	x2, x1
   194d8:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   194dc:	add	x0, x0, #0x248
   194e0:	ldr	x3, [x3, #4024]
   194e4:	str	x30, [sp, #-16]!
   194e8:	ldr	x1, [x3]
   194ec:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   194f0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   194f4:	nop
   194f8:	and	w1, w1, #0xff
   194fc:	cmp	w1, #0x20
   19500:	cset	w0, eq  // eq = none
   19504:	cmp	w1, #0x2c
   19508:	csinc	w0, w0, wzr, ne  // ne = any
   1950c:	cbnz	w0, 19524 <__sanitizer_set_report_fd@@Base+0x1764>
   19510:	cmp	w1, #0x3a
   19514:	cset	w0, eq  // eq = none
   19518:	cmp	w1, #0xa
   1951c:	csinc	w0, w0, wzr, ne  // ne = any
   19520:	cbz	w0, 19528 <__sanitizer_set_report_fd@@Base+0x1768>
   19524:	ret
   19528:	and	w1, w1, #0xfffffffb
   1952c:	cmp	w1, #0x9
   19530:	cset	w0, eq  // eq = none
   19534:	ret
   19538:	ldp	x4, x2, [x0, #16]
   1953c:	mov	w5, #0x2c                  	// #44
   19540:	ldrb	w1, [x4, x2]
   19544:	add	x2, x2, #0x1
   19548:	cmp	w1, #0x20
   1954c:	ccmp	w1, w5, #0x4, ne  // ne = any
   19550:	b.eq	19574 <__sanitizer_set_report_fd@@Base+0x17b4>  // b.none
   19554:	sub	w3, w1, #0x9
   19558:	cmp	w1, #0x3a
   1955c:	and	w3, w3, #0xff
   19560:	b.eq	19574 <__sanitizer_set_report_fd@@Base+0x17b4>  // b.none
   19564:	cmp	w3, #0x1
   19568:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
   1956c:	b.eq	19574 <__sanitizer_set_report_fd@@Base+0x17b4>  // b.none
   19570:	ret
   19574:	str	x2, [x0, #24]
   19578:	b	19540 <__sanitizer_set_report_fd@@Base+0x1780>
   1957c:	nop
   19580:	stp	x19, x20, [sp, #-64]!
   19584:	mov	x2, x1
   19588:	mov	x19, x0
   1958c:	ldp	x5, x1, [x0, #16]
   19590:	stp	x21, x22, [sp, #16]
   19594:	stp	x23, x24, [sp, #32]
   19598:	str	x30, [sp, #48]
   1959c:	add	x20, x5, x1
   195a0:	ldrb	w3, [x5, x1]
   195a4:	cmp	w3, #0x3d
   195a8:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   195ac:	b.eq	19630 <__sanitizer_set_report_fd@@Base+0x1870>  // b.none
   195b0:	add	x4, x1, #0x1
   195b4:	mov	w6, #0x2c                  	// #44
   195b8:	b	195f4 <__sanitizer_set_report_fd@@Base+0x1834>
   195bc:	cmp	w3, #0x3a
   195c0:	b.eq	19600 <__sanitizer_set_report_fd@@Base+0x1840>  // b.none
   195c4:	sub	w0, w3, #0x9
   195c8:	and	w0, w0, #0xff
   195cc:	cmp	w0, #0x1
   195d0:	ccmp	w3, #0xd, #0x4, hi  // hi = pmore
   195d4:	b.eq	19600 <__sanitizer_set_report_fd@@Base+0x1840>  // b.none
   195d8:	str	x4, [x19, #24]
   195dc:	add	x0, x4, #0x1
   195e0:	ldrb	w3, [x5, x4]
   195e4:	cmp	w3, #0x3d
   195e8:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   195ec:	b.eq	19638 <__sanitizer_set_report_fd@@Base+0x1878>  // b.none
   195f0:	mov	x4, x0
   195f4:	cmp	w3, #0x20
   195f8:	ccmp	w3, w6, #0x4, ne  // ne = any
   195fc:	b.ne	195bc <__sanitizer_set_report_fd@@Base+0x17fc>  // b.any
   19600:	cbz	x2, 19620 <__sanitizer_set_report_fd@@Base+0x1860>
   19604:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   19608:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1960c:	add	x0, x0, #0x258
   19610:	ldr	x1, [x1, #4024]
   19614:	ldr	x1, [x1]
   19618:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   1961c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   19620:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19624:	mov	x0, x19
   19628:	add	x1, x1, #0x278
   1962c:	bl	194d0 <__sanitizer_set_report_fd@@Base+0x1710>
   19630:	mov	x4, x1
   19634:	nop
   19638:	cmp	w3, #0x3d
   1963c:	b.ne	19600 <__sanitizer_set_report_fd@@Base+0x1840>  // b.any
   19640:	sub	x1, x4, x1
   19644:	mov	x0, x20
   19648:	bl	1b498 <__sanitizer_set_report_fd@@Base+0x36d8>
   1964c:	adrp	x23, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   19650:	mov	x21, x0
   19654:	add	x0, x23, #0x610
   19658:	add	x1, x21, #0x1
   1965c:	add	x0, x0, #0xa8
   19660:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   19664:	mov	x22, x0
   19668:	mov	x2, x21
   1966c:	mov	x1, x20
   19670:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   19674:	strb	wzr, [x22, x21]
   19678:	mov	w0, #0x22                  	// #34
   1967c:	ldp	x4, x2, [x19, #16]
   19680:	add	x5, x2, #0x1
   19684:	str	x5, [x19, #24]
   19688:	add	x21, x4, x5
   1968c:	ldrb	w1, [x4, x5]
   19690:	cmp	w1, #0x27
   19694:	ccmp	w1, w0, #0x4, ne  // ne = any
   19698:	b.eq	19718 <__sanitizer_set_report_fd@@Base+0x1958>  // b.none
   1969c:	cbz	w1, 19888 <__sanitizer_set_report_fd@@Base+0x1ac8>
   196a0:	mov	x3, x5
   196a4:	mov	w6, #0x2c                  	// #44
   196a8:	cmp	w1, #0x20
   196ac:	ccmp	w1, w6, #0x4, ne  // ne = any
   196b0:	b.eq	196e0 <__sanitizer_set_report_fd@@Base+0x1920>  // b.none
   196b4:	cmp	w1, #0x3a
   196b8:	b.eq	196e0 <__sanitizer_set_report_fd@@Base+0x1920>  // b.none
   196bc:	sub	w0, w1, #0x9
   196c0:	and	w0, w0, #0xff
   196c4:	cmp	w0, #0x1
   196c8:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
   196cc:	b.ne	19808 <__sanitizer_set_report_fd@@Base+0x1a48>  // b.any
   196d0:	cmp	w0, #0x1
   196d4:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
   196d8:	b.ne	19854 <__sanitizer_set_report_fd@@Base+0x1a94>  // b.any
   196dc:	nop
   196e0:	sub	x1, x3, x5
   196e4:	mov	x0, x21
   196e8:	bl	1b498 <__sanitizer_set_report_fd@@Base+0x36d8>
   196ec:	mov	x20, x0
   196f0:	add	x0, x23, #0x610
   196f4:	add	x1, x20, #0x1
   196f8:	add	x0, x0, #0xa8
   196fc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   19700:	mov	x24, x0
   19704:	mov	x1, x21
   19708:	mov	x2, x20
   1970c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   19710:	strb	wzr, [x24, x20]
   19714:	b	19790 <__sanitizer_set_report_fd@@Base+0x19d0>
   19718:	add	x1, x2, #0x2
   1971c:	str	x1, [x19, #24]
   19720:	add	x21, x4, x1
   19724:	ldrb	w2, [x4, x5]
   19728:	ldrb	w0, [x4, x1]
   1972c:	cbnz	w0, 19744 <__sanitizer_set_report_fd@@Base+0x1984>
   19730:	b	19844 <__sanitizer_set_report_fd@@Base+0x1a84>
   19734:	add	x1, x1, #0x1
   19738:	str	x1, [x19, #24]
   1973c:	ldrb	w0, [x4, x1]
   19740:	cbz	w0, 19844 <__sanitizer_set_report_fd@@Base+0x1a84>
   19744:	cmp	w0, w2
   19748:	b.ne	19734 <__sanitizer_set_report_fd@@Base+0x1974>  // b.any
   1974c:	mvn	x5, x5
   19750:	mov	x0, x21
   19754:	add	x1, x5, x1
   19758:	bl	1b498 <__sanitizer_set_report_fd@@Base+0x36d8>
   1975c:	mov	x20, x0
   19760:	add	x1, x23, #0x610
   19764:	add	x0, x1, #0xa8
   19768:	add	x1, x20, #0x1
   1976c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   19770:	mov	x24, x0
   19774:	mov	x1, x21
   19778:	mov	x2, x20
   1977c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   19780:	strb	wzr, [x24, x20]
   19784:	ldr	x0, [x19, #24]
   19788:	add	x0, x0, #0x1
   1978c:	str	x0, [x19, #24]
   19790:	ldr	w0, [x19, #8]
   19794:	mov	x20, #0x0                   	// #0
   19798:	mov	w21, #0x0                   	// #0
   1979c:	cmp	w0, #0x0
   197a0:	b.gt	197bc <__sanitizer_set_report_fd@@Base+0x19fc>
   197a4:	b	19820 <__sanitizer_set_report_fd@@Base+0x1a60>
   197a8:	ldr	w1, [x19, #8]
   197ac:	add	w21, w21, #0x1
   197b0:	add	x20, x20, #0x18
   197b4:	cmp	w1, w21
   197b8:	b.le	19820 <__sanitizer_set_report_fd@@Base+0x1a60>
   197bc:	ldr	x1, [x19]
   197c0:	mov	x0, x22
   197c4:	ldr	x1, [x1, x20]
   197c8:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   197cc:	cbnz	w0, 197a8 <__sanitizer_set_report_fd@@Base+0x19e8>
   197d0:	ldr	x0, [x19]
   197d4:	mov	x1, x24
   197d8:	add	x20, x0, x20
   197dc:	ldr	x0, [x20, #16]
   197e0:	ldr	x2, [x0]
   197e4:	ldr	x2, [x2]
   197e8:	blr	x2
   197ec:	tst	w0, #0xff
   197f0:	b.eq	19890 <__sanitizer_set_report_fd@@Base+0x1ad0>  // b.none
   197f4:	ldp	x21, x22, [sp, #16]
   197f8:	ldp	x23, x24, [sp, #32]
   197fc:	ldr	x30, [sp, #48]
   19800:	ldp	x19, x20, [sp], #64
   19804:	ret
   19808:	add	x0, x3, #0x1
   1980c:	str	x0, [x19, #24]
   19810:	ldrb	w1, [x4, x0]
   19814:	cbz	w1, 19864 <__sanitizer_set_report_fd@@Base+0x1aa4>
   19818:	mov	x3, x0
   1981c:	b	196a8 <__sanitizer_set_report_fd@@Base+0x18e8>
   19820:	add	x23, x23, #0x610
   19824:	ldr	w0, [x23, #160]
   19828:	sxtw	x3, w0
   1982c:	cmp	x3, #0x13
   19830:	b.hi	1986c <__sanitizer_set_report_fd@@Base+0x1aac>  // b.pmore
   19834:	add	w0, w0, #0x1
   19838:	str	x22, [x23, x3, lsl #3]
   1983c:	str	w0, [x23, #160]
   19840:	b	197f4 <__sanitizer_set_report_fd@@Base+0x1a34>
   19844:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19848:	mov	x0, x19
   1984c:	add	x1, x1, #0x2f0
   19850:	bl	194d0 <__sanitizer_set_report_fd@@Base+0x1710>
   19854:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19858:	mov	x0, x19
   1985c:	add	x1, x1, #0x288
   19860:	bl	194d0 <__sanitizer_set_report_fd@@Base+0x1710>
   19864:	sub	x1, x3, x2
   19868:	b	196e4 <__sanitizer_set_report_fd@@Base+0x1924>
   1986c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19870:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19874:	add	x2, x2, #0x2a8
   19878:	add	x0, x0, #0x1b8
   1987c:	mov	x4, #0x14                  	// #20
   19880:	mov	w1, #0x1f                  	// #31
   19884:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   19888:	mov	x1, #0x0                   	// #0
   1988c:	b	196e4 <__sanitizer_set_report_fd@@Base+0x1924>
   19890:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19894:	mov	x0, x19
   19898:	add	x1, x1, #0x2d8
   1989c:	bl	194d0 <__sanitizer_set_report_fd@@Base+0x1710>
   198a0:	stp	x19, x20, [sp, #-32]!
   198a4:	mov	x19, x0
   198a8:	mov	x20, x1
   198ac:	stp	x21, x30, [sp, #16]
   198b0:	mov	w21, #0x2c                  	// #44
   198b4:	nop
   198b8:	ldp	x0, x4, [x19, #16]
   198bc:	nop
   198c0:	ldrb	w2, [x0, x4]
   198c4:	add	x4, x4, #0x1
   198c8:	cmp	w2, #0x20
   198cc:	ccmp	w2, w21, #0x4, ne  // ne = any
   198d0:	b.eq	19904 <__sanitizer_set_report_fd@@Base+0x1b44>  // b.none
   198d4:	sub	w3, w2, #0x9
   198d8:	cmp	w2, #0x3a
   198dc:	and	w3, w3, #0xff
   198e0:	b.eq	19904 <__sanitizer_set_report_fd@@Base+0x1b44>  // b.none
   198e4:	cmp	w3, #0x1
   198e8:	ccmp	w2, #0xd, #0x4, hi  // hi = pmore
   198ec:	b.eq	19904 <__sanitizer_set_report_fd@@Base+0x1b44>  // b.none
   198f0:	cbz	w2, 1990c <__sanitizer_set_report_fd@@Base+0x1b4c>
   198f4:	mov	x1, x20
   198f8:	mov	x0, x19
   198fc:	bl	19580 <__sanitizer_set_report_fd@@Base+0x17c0>
   19900:	b	198b8 <__sanitizer_set_report_fd@@Base+0x1af8>
   19904:	str	x4, [x19, #24]
   19908:	b	198c0 <__sanitizer_set_report_fd@@Base+0x1b00>
   1990c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   19910:	ldr	x0, [x0, #4056]
   19914:	ldr	w1, [x0, #36]
   19918:	cmp	w1, #0x0
   1991c:	b.gt	19928 <__sanitizer_set_report_fd@@Base+0x1b68>
   19920:	mov	w1, #0x1                   	// #1
   19924:	str	w1, [x0, #36]
   19928:	ldp	x21, x30, [sp, #16]
   1992c:	ldp	x19, x20, [sp], #32
   19930:	ret
   19934:	nop
   19938:	stp	x19, x20, [sp, #-48]!
   1993c:	mov	x19, x0
   19940:	mov	x0, x1
   19944:	stp	x21, x22, [sp, #16]
   19948:	mov	x21, x1
   1994c:	str	x30, [sp, #32]
   19950:	bl	1c420 <__sanitizer_set_report_fd@@Base+0x4660>
   19954:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   19958:	mov	x20, x0
   1995c:	ldr	x1, [x1, #3816]
   19960:	ldr	w0, [x1]
   19964:	cbz	w0, 19988 <__sanitizer_set_report_fd@@Base+0x1bc8>
   19968:	cmp	x20, #0x0
   1996c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19970:	add	x2, x2, #0x308
   19974:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19978:	csel	x2, x2, x20, eq  // eq = none
   1997c:	add	x0, x0, #0x310
   19980:	mov	x1, x21
   19984:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   19988:	cbz	x20, 199ac <__sanitizer_set_report_fd@@Base+0x1bec>
   1998c:	ldr	x22, [x19, #16]
   19990:	str	x20, [x19, #16]
   19994:	ldr	x20, [x19, #24]
   19998:	str	xzr, [x19, #24]
   1999c:	mov	x1, x21
   199a0:	mov	x0, x19
   199a4:	bl	198a0 <__sanitizer_set_report_fd@@Base+0x1ae0>
   199a8:	stp	x22, x20, [x19, #16]
   199ac:	ldp	x21, x22, [sp, #16]
   199b0:	ldr	x30, [sp, #32]
   199b4:	ldp	x19, x20, [sp], #48
   199b8:	ret
   199bc:	nop
   199c0:	mov	x3, x1
   199c4:	cbz	x1, 199f4 <__sanitizer_set_report_fd@@Base+0x1c34>
   199c8:	stp	x19, x20, [sp, #-32]!
   199cc:	mov	x19, x0
   199d0:	mov	x1, x2
   199d4:	stp	x21, x30, [sp, #16]
   199d8:	ldp	x21, x20, [x0, #16]
   199dc:	stp	x3, xzr, [x0, #16]
   199e0:	bl	198a0 <__sanitizer_set_report_fd@@Base+0x1ae0>
   199e4:	stp	x21, x20, [x19, #16]
   199e8:	ldp	x21, x30, [sp, #16]
   199ec:	ldp	x19, x20, [sp], #32
   199f0:	ret
   199f4:	ret
   199f8:	stp	x19, x20, [sp, #-80]!
   199fc:	mov	x19, x0
   19a00:	mov	x20, x1
   19a04:	stp	x21, x22, [sp, #16]
   19a08:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   19a0c:	and	w22, w2, #0xff
   19a10:	ldr	x21, [x21, #4016]
   19a14:	ldr	x0, [x21]
   19a18:	str	x30, [sp, #40]
   19a1c:	cbz	x0, 19ab4 <__sanitizer_set_report_fd@@Base+0x1cf4>
   19a20:	cmp	x0, #0x8, lsl #12
   19a24:	add	x5, sp, #0x34
   19a28:	add	x3, sp, #0x48
   19a2c:	add	x2, sp, #0x40
   19a30:	add	x1, sp, #0x38
   19a34:	mov	x4, #0x8000                	// #32768
   19a38:	csel	x4, x0, x4, cs  // cs = hs, nlast
   19a3c:	mov	x0, x20
   19a40:	bl	174d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   19a44:	ands	w21, w0, #0xff
   19a48:	b.ne	19a64 <__sanitizer_set_report_fd@@Base+0x1ca4>  // b.any
   19a4c:	cbz	w22, 19ac0 <__sanitizer_set_report_fd@@Base+0x1d00>
   19a50:	mov	w0, w22
   19a54:	ldp	x21, x22, [sp, #16]
   19a58:	ldr	x30, [sp, #40]
   19a5c:	ldp	x19, x20, [sp], #80
   19a60:	ret
   19a64:	ldr	x0, [sp, #56]
   19a68:	cbz	x0, 19a94 <__sanitizer_set_report_fd@@Base+0x1cd4>
   19a6c:	ldr	x22, [x19, #24]
   19a70:	str	x23, [sp, #32]
   19a74:	ldr	x23, [x19, #16]
   19a78:	stp	x0, xzr, [x19, #16]
   19a7c:	mov	x1, x20
   19a80:	mov	x0, x19
   19a84:	bl	198a0 <__sanitizer_set_report_fd@@Base+0x1ae0>
   19a88:	stp	x23, x22, [x19, #16]
   19a8c:	ldr	x23, [sp, #32]
   19a90:	ldr	x0, [sp, #56]
   19a94:	mov	w22, w21
   19a98:	ldr	x1, [sp, #64]
   19a9c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   19aa0:	mov	w0, w22
   19aa4:	ldp	x21, x22, [sp, #16]
   19aa8:	ldr	x30, [sp, #40]
   19aac:	ldp	x19, x20, [sp], #80
   19ab0:	ret
   19ab4:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   19ab8:	str	x0, [x21]
   19abc:	b	19a20 <__sanitizer_set_report_fd@@Base+0x1c60>
   19ac0:	ldr	w2, [sp, #52]
   19ac4:	mov	x1, x20
   19ac8:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19acc:	add	x0, x0, #0x318
   19ad0:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   19ad4:	mov	w0, w22
   19ad8:	ldp	x21, x22, [sp, #16]
   19adc:	ldr	x30, [sp, #40]
   19ae0:	ldp	x19, x20, [sp], #80
   19ae4:	ret
   19ae8:	stp	x19, x20, [sp, #-48]!
   19aec:	stp	x21, x22, [sp, #16]
   19af0:	mov	x21, x0
   19af4:	ldr	w0, [x0, #8]
   19af8:	str	x30, [sp, #40]
   19afc:	mov	x22, x1
   19b00:	cmp	w0, #0x0
   19b04:	b.le	19b78 <__sanitizer_set_report_fd@@Base+0x1db8>
   19b08:	mov	x19, #0x0                   	// #0
   19b0c:	mov	w20, #0x0                   	// #0
   19b10:	str	x23, [sp, #32]
   19b14:	mov	x23, x2
   19b18:	b	19b30 <__sanitizer_set_report_fd@@Base+0x1d70>
   19b1c:	ldr	w0, [x21, #8]
   19b20:	add	w20, w20, #0x1
   19b24:	add	x19, x19, #0x18
   19b28:	cmp	w0, w20
   19b2c:	b.le	19b74 <__sanitizer_set_report_fd@@Base+0x1db4>
   19b30:	ldr	x3, [x21]
   19b34:	mov	x0, x22
   19b38:	ldr	x1, [x3, x19]
   19b3c:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   19b40:	cbnz	w0, 19b1c <__sanitizer_set_report_fd@@Base+0x1d5c>
   19b44:	ldr	x0, [x21]
   19b48:	mov	x1, x23
   19b4c:	ldp	x21, x22, [sp, #16]
   19b50:	add	x19, x0, x19
   19b54:	ldr	x23, [sp, #32]
   19b58:	ldr	x0, [x19, #16]
   19b5c:	ldr	x30, [sp, #40]
   19b60:	ldr	x2, [x0]
   19b64:	ldp	x19, x20, [sp], #48
   19b68:	ldr	x2, [x2]
   19b6c:	mov	x16, x2
   19b70:	br	x16
   19b74:	ldr	x23, [sp, #32]
   19b78:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   19b7c:	add	x1, x1, #0x610
   19b80:	ldr	w0, [x1, #160]
   19b84:	sxtw	x3, w0
   19b88:	cmp	x3, #0x13
   19b8c:	b.hi	19bb0 <__sanitizer_set_report_fd@@Base+0x1df0>  // b.pmore
   19b90:	add	w2, w0, #0x1
   19b94:	str	x22, [x1, x3, lsl #3]
   19b98:	ldp	x21, x22, [sp, #16]
   19b9c:	mov	w0, #0x1                   	// #1
   19ba0:	ldr	x30, [sp, #40]
   19ba4:	str	w2, [x1, #160]
   19ba8:	ldp	x19, x20, [sp], #48
   19bac:	ret
   19bb0:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19bb4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19bb8:	add	x2, x2, #0x2a8
   19bbc:	add	x0, x0, #0x1b8
   19bc0:	mov	x4, #0x14                  	// #20
   19bc4:	mov	w1, #0x1f                  	// #31
   19bc8:	str	x23, [sp, #32]
   19bcc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   19bd0:	ldr	w4, [x0, #8]
   19bd4:	sxtw	x5, w4
   19bd8:	cmp	x5, #0xc7
   19bdc:	b.hi	19c04 <__sanitizer_set_report_fd@@Base+0x1e44>  // b.pmore
   19be0:	mov	w5, #0x18                  	// #24
   19be4:	add	w7, w4, #0x1
   19be8:	ldr	x6, [x0]
   19bec:	smull	x4, w4, w5
   19bf0:	add	x5, x6, x4
   19bf4:	str	x1, [x6, x4]
   19bf8:	stp	x3, x2, [x5, #8]
   19bfc:	str	w7, [x0, #8]
   19c00:	ret
   19c04:	str	x30, [sp, #-16]!
   19c08:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19c0c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   19c10:	mov	x3, x5
   19c14:	add	x2, x2, #0x348
   19c18:	add	x0, x0, #0x1b8
   19c1c:	mov	x4, #0xc8                  	// #200
   19c20:	mov	w1, #0xb4                  	// #180
   19c24:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   19c28:	stp	x19, x30, [sp, #-16]!
   19c2c:	mov	x19, x0
   19c30:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   19c34:	add	x0, x1, #0x610
   19c38:	mov	x1, #0x12c0                	// #4800
   19c3c:	str	wzr, [x19, #8]
   19c40:	add	x0, x0, #0xa8
   19c44:	stp	xzr, xzr, [x19, #16]
   19c48:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   19c4c:	str	x0, [x19]
   19c50:	ldp	x19, x30, [sp], #16
   19c54:	ret
   19c58:	cbz	x2, 19c80 <__sanitizer_set_report_fd@@Base+0x1ec0>
   19c5c:	add	x3, x0, x2
   19c60:	b	19c70 <__sanitizer_set_report_fd@@Base+0x1eb0>
   19c64:	add	x0, x0, #0x1
   19c68:	cmp	x3, x0
   19c6c:	b.eq	19c80 <__sanitizer_set_report_fd@@Base+0x1ec0>  // b.none
   19c70:	ldrb	w2, [x0]
   19c74:	cmp	w2, w1
   19c78:	b.ne	19c64 <__sanitizer_set_report_fd@@Base+0x1ea4>  // b.any
   19c7c:	ret
   19c80:	mov	x0, #0x0                   	// #0
   19c84:	ret
   19c88:	mov	x3, x0
   19c8c:	cbz	x2, 19cb4 <__sanitizer_set_report_fd@@Base+0x1ef4>
   19c90:	add	x4, x0, x2
   19c94:	mov	x0, #0x0                   	// #0
   19c98:	ldrb	w2, [x3]
   19c9c:	cmp	w1, w2
   19ca0:	csel	x0, x0, x3, ne  // ne = any
   19ca4:	add	x3, x3, #0x1
   19ca8:	cmp	x4, x3
   19cac:	b.ne	19c98 <__sanitizer_set_report_fd@@Base+0x1ed8>  // b.any
   19cb0:	ret
   19cb4:	mov	x0, #0x0                   	// #0
   19cb8:	ret
   19cbc:	nop
   19cc0:	cbz	x2, 19cf4 <__sanitizer_set_report_fd@@Base+0x1f34>
   19cc4:	mov	x3, #0x0                   	// #0
   19cc8:	b	19cd4 <__sanitizer_set_report_fd@@Base+0x1f14>
   19ccc:	cmp	x2, x3
   19cd0:	b.eq	19cf4 <__sanitizer_set_report_fd@@Base+0x1f34>  // b.none
   19cd4:	ldrb	w5, [x0, x3]
   19cd8:	ldrb	w4, [x1, x3]
   19cdc:	add	x3, x3, #0x1
   19ce0:	cmp	w5, w4
   19ce4:	b.eq	19ccc <__sanitizer_set_report_fd@@Base+0x1f0c>  // b.none
   19ce8:	mov	w0, #0x1                   	// #1
   19cec:	cneg	w0, w0, cc  // cc = lo, ul, last
   19cf0:	ret
   19cf4:	mov	w0, #0x0                   	// #0
   19cf8:	ret
   19cfc:	nop
   19d00:	cbz	x2, 19e68 <__sanitizer_set_report_fd@@Base+0x20a8>
   19d04:	add	x3, x0, #0xf
   19d08:	sub	x4, x2, #0x1
   19d0c:	sub	x3, x3, x1
   19d10:	cmp	x3, #0x1e
   19d14:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
   19d18:	b.ls	19e6c <__sanitizer_set_report_fd@@Base+0x20ac>  // b.plast
   19d1c:	and	x4, x2, #0xfffffffffffffff0
   19d20:	mov	x3, #0x0                   	// #0
   19d24:	nop
   19d28:	ldr	q0, [x1, x3]
   19d2c:	str	q0, [x0, x3]
   19d30:	add	x3, x3, #0x10
   19d34:	cmp	x3, x4
   19d38:	b.ne	19d28 <__sanitizer_set_report_fd@@Base+0x1f68>  // b.any
   19d3c:	tst	x2, #0xf
   19d40:	and	x3, x2, #0xfffffffffffffff0
   19d44:	b.eq	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.none
   19d48:	ldrb	w5, [x1, x3]
   19d4c:	add	x4, x3, #0x1
   19d50:	strb	w5, [x0, x3]
   19d54:	cmp	x2, x4
   19d58:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19d5c:	ldrb	w6, [x1, x4]
   19d60:	add	x5, x3, #0x2
   19d64:	strb	w6, [x0, x4]
   19d68:	cmp	x2, x5
   19d6c:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19d70:	ldrb	w6, [x1, x5]
   19d74:	add	x4, x3, #0x3
   19d78:	strb	w6, [x0, x5]
   19d7c:	cmp	x2, x4
   19d80:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19d84:	ldrb	w6, [x1, x4]
   19d88:	add	x5, x3, #0x4
   19d8c:	strb	w6, [x0, x4]
   19d90:	cmp	x2, x5
   19d94:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19d98:	ldrb	w6, [x1, x5]
   19d9c:	add	x4, x3, #0x5
   19da0:	strb	w6, [x0, x5]
   19da4:	cmp	x2, x4
   19da8:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19dac:	ldrb	w6, [x1, x4]
   19db0:	add	x5, x3, #0x6
   19db4:	strb	w6, [x0, x4]
   19db8:	cmp	x2, x5
   19dbc:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19dc0:	ldrb	w6, [x1, x5]
   19dc4:	add	x4, x3, #0x7
   19dc8:	strb	w6, [x0, x5]
   19dcc:	cmp	x2, x4
   19dd0:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19dd4:	ldrb	w6, [x1, x4]
   19dd8:	add	x5, x3, #0x8
   19ddc:	strb	w6, [x0, x4]
   19de0:	cmp	x2, x5
   19de4:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19de8:	ldrb	w6, [x1, x5]
   19dec:	add	x4, x3, #0x9
   19df0:	strb	w6, [x0, x5]
   19df4:	cmp	x2, x4
   19df8:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19dfc:	ldrb	w6, [x1, x4]
   19e00:	add	x5, x3, #0xa
   19e04:	strb	w6, [x0, x4]
   19e08:	cmp	x2, x5
   19e0c:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19e10:	ldrb	w6, [x1, x5]
   19e14:	add	x4, x3, #0xb
   19e18:	strb	w6, [x0, x5]
   19e1c:	cmp	x2, x4
   19e20:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19e24:	ldrb	w6, [x1, x4]
   19e28:	add	x5, x3, #0xc
   19e2c:	strb	w6, [x0, x4]
   19e30:	cmp	x2, x5
   19e34:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19e38:	ldrb	w6, [x1, x5]
   19e3c:	add	x4, x3, #0xd
   19e40:	strb	w6, [x0, x5]
   19e44:	cmp	x2, x4
   19e48:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19e4c:	ldrb	w5, [x1, x4]
   19e50:	add	x3, x3, #0xe
   19e54:	strb	w5, [x0, x4]
   19e58:	cmp	x2, x3
   19e5c:	b.ls	19e68 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19e60:	ldrb	w1, [x1, x3]
   19e64:	strb	w1, [x0, x3]
   19e68:	ret
   19e6c:	mov	x3, #0x0                   	// #0
   19e70:	ldrb	w4, [x1, x3]
   19e74:	strb	w4, [x0, x3]
   19e78:	add	x3, x3, #0x1
   19e7c:	cmp	x2, x3
   19e80:	b.ne	19e70 <__sanitizer_set_report_fd@@Base+0x20b0>  // b.any
   19e84:	ret
   19e88:	cmp	x0, x1
   19e8c:	b.cs	19ffc <__sanitizer_set_report_fd@@Base+0x223c>  // b.hs, b.nlast
   19e90:	cmp	x2, #0x0
   19e94:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19e98:	add	x3, x0, #0xf
   19e9c:	sub	x4, x2, #0x1
   19ea0:	sub	x3, x3, x1
   19ea4:	cmp	x3, #0x1e
   19ea8:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
   19eac:	b.ls	1a1a8 <__sanitizer_set_report_fd@@Base+0x23e8>  // b.plast
   19eb0:	and	x4, x2, #0xfffffffffffffff0
   19eb4:	mov	x3, #0x0                   	// #0
   19eb8:	ldr	q0, [x1, x3]
   19ebc:	str	q0, [x0, x3]
   19ec0:	add	x3, x3, #0x10
   19ec4:	cmp	x3, x4
   19ec8:	b.ne	19eb8 <__sanitizer_set_report_fd@@Base+0x20f8>  // b.any
   19ecc:	tst	x2, #0xf
   19ed0:	and	x3, x2, #0xfffffffffffffff0
   19ed4:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   19ed8:	ldrb	w5, [x1, x3]
   19edc:	add	x4, x3, #0x1
   19ee0:	strb	w5, [x0, x3]
   19ee4:	cmp	x4, x2
   19ee8:	b.ge	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.tcont
   19eec:	ldrb	w6, [x1, x4]
   19ef0:	add	x5, x3, #0x2
   19ef4:	strb	w6, [x0, x4]
   19ef8:	cmp	x2, x5
   19efc:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19f00:	ldrb	w6, [x1, x5]
   19f04:	add	x4, x3, #0x3
   19f08:	strb	w6, [x0, x5]
   19f0c:	cmp	x2, x4
   19f10:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19f14:	ldrb	w6, [x1, x4]
   19f18:	add	x5, x3, #0x4
   19f1c:	strb	w6, [x0, x4]
   19f20:	cmp	x2, x5
   19f24:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19f28:	ldrb	w6, [x1, x5]
   19f2c:	add	x4, x3, #0x5
   19f30:	strb	w6, [x0, x5]
   19f34:	cmp	x2, x4
   19f38:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19f3c:	ldrb	w6, [x1, x4]
   19f40:	add	x5, x3, #0x6
   19f44:	strb	w6, [x0, x4]
   19f48:	cmp	x2, x5
   19f4c:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19f50:	ldrb	w6, [x1, x5]
   19f54:	add	x4, x3, #0x7
   19f58:	strb	w6, [x0, x5]
   19f5c:	cmp	x2, x4
   19f60:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19f64:	ldrb	w6, [x1, x4]
   19f68:	add	x5, x3, #0x8
   19f6c:	strb	w6, [x0, x4]
   19f70:	cmp	x2, x5
   19f74:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19f78:	ldrb	w6, [x1, x5]
   19f7c:	add	x4, x3, #0x9
   19f80:	strb	w6, [x0, x5]
   19f84:	cmp	x2, x4
   19f88:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19f8c:	ldrb	w6, [x1, x4]
   19f90:	add	x5, x3, #0xa
   19f94:	strb	w6, [x0, x4]
   19f98:	cmp	x2, x5
   19f9c:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19fa0:	ldrb	w6, [x1, x5]
   19fa4:	add	x4, x3, #0xb
   19fa8:	strb	w6, [x0, x5]
   19fac:	cmp	x2, x4
   19fb0:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19fb4:	ldrb	w6, [x1, x4]
   19fb8:	add	x5, x3, #0xc
   19fbc:	strb	w6, [x0, x4]
   19fc0:	cmp	x2, x5
   19fc4:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19fc8:	ldrb	w6, [x1, x5]
   19fcc:	add	x4, x3, #0xd
   19fd0:	strb	w6, [x0, x5]
   19fd4:	cmp	x2, x4
   19fd8:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19fdc:	ldrb	w5, [x1, x4]
   19fe0:	add	x3, x3, #0xe
   19fe4:	strb	w5, [x0, x4]
   19fe8:	cmp	x2, x3
   19fec:	b.le	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   19ff0:	ldrb	w1, [x1, x3]
   19ff4:	strb	w1, [x0, x3]
   19ff8:	ret
   19ffc:	cmp	x2, #0x0
   1a000:	ccmp	x0, x1, #0x0, gt
   1a004:	b.ls	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.plast
   1a008:	sub	x4, x2, #0x10
   1a00c:	add	x3, x0, x2
   1a010:	add	x7, x1, x4
   1a014:	add	x4, x0, x4
   1a018:	cmp	x3, x7
   1a01c:	add	x3, x1, x2
   1a020:	ccmp	x3, x4, #0x0, hi  // hi = pmore
   1a024:	sub	x5, x2, #0x1
   1a028:	ccmp	x5, #0xe, #0x0, ls  // ls = plast
   1a02c:	b.ls	1a17c <__sanitizer_set_report_fd@@Base+0x23bc>  // b.plast
   1a030:	neg	x6, x2, lsr #4
   1a034:	mov	x3, #0x0                   	// #0
   1a038:	lsl	x6, x6, #4
   1a03c:	nop
   1a040:	ldr	q0, [x7, x3]
   1a044:	str	q0, [x4, x3]
   1a048:	sub	x3, x3, #0x10
   1a04c:	cmp	x3, x6
   1a050:	b.ne	1a040 <__sanitizer_set_report_fd@@Base+0x2280>  // b.any
   1a054:	and	x4, x2, #0xfffffffffffffff0
   1a058:	sub	x3, x5, x4
   1a05c:	cmp	x2, x4
   1a060:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a064:	ldrb	w4, [x1, x3]
   1a068:	sub	x2, x3, #0x1
   1a06c:	strb	w4, [x0, x3]
   1a070:	cbz	x3, 19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   1a074:	ldrb	w4, [x1, x2]
   1a078:	cmp	x3, #0x1
   1a07c:	strb	w4, [x0, x2]
   1a080:	sub	x2, x3, #0x2
   1a084:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a088:	ldrb	w4, [x1, x2]
   1a08c:	cmp	x3, #0x2
   1a090:	strb	w4, [x0, x2]
   1a094:	sub	x2, x3, #0x3
   1a098:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a09c:	ldrb	w4, [x1, x2]
   1a0a0:	cmp	x3, #0x3
   1a0a4:	strb	w4, [x0, x2]
   1a0a8:	sub	x2, x3, #0x4
   1a0ac:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a0b0:	ldrb	w4, [x1, x2]
   1a0b4:	cmp	x3, #0x4
   1a0b8:	strb	w4, [x0, x2]
   1a0bc:	sub	x2, x3, #0x5
   1a0c0:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a0c4:	ldrb	w4, [x1, x2]
   1a0c8:	cmp	x3, #0x5
   1a0cc:	strb	w4, [x0, x2]
   1a0d0:	sub	x2, x3, #0x6
   1a0d4:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a0d8:	ldrb	w4, [x1, x2]
   1a0dc:	cmp	x3, #0x6
   1a0e0:	strb	w4, [x0, x2]
   1a0e4:	sub	x2, x3, #0x7
   1a0e8:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a0ec:	ldrb	w4, [x1, x2]
   1a0f0:	cmp	x3, #0x7
   1a0f4:	strb	w4, [x0, x2]
   1a0f8:	sub	x2, x3, #0x8
   1a0fc:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a100:	ldrb	w4, [x1, x2]
   1a104:	cmp	x3, #0x8
   1a108:	strb	w4, [x0, x2]
   1a10c:	sub	x2, x3, #0x9
   1a110:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a114:	ldrb	w4, [x1, x2]
   1a118:	cmp	x3, #0x9
   1a11c:	strb	w4, [x0, x2]
   1a120:	sub	x2, x3, #0xa
   1a124:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a128:	ldrb	w4, [x1, x2]
   1a12c:	cmp	x3, #0xa
   1a130:	strb	w4, [x0, x2]
   1a134:	sub	x2, x3, #0xb
   1a138:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a13c:	ldrb	w4, [x1, x2]
   1a140:	cmp	x3, #0xb
   1a144:	strb	w4, [x0, x2]
   1a148:	sub	x2, x3, #0xc
   1a14c:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a150:	ldrb	w4, [x1, x2]
   1a154:	cmp	x3, #0xc
   1a158:	strb	w4, [x0, x2]
   1a15c:	sub	x2, x3, #0xd
   1a160:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a164:	ldrb	w4, [x1, x2]
   1a168:	cmp	x3, #0xd
   1a16c:	strb	w4, [x0, x2]
   1a170:	sub	x3, x3, #0xe
   1a174:	b.ne	19ff0 <__sanitizer_set_report_fd@@Base+0x2230>  // b.any
   1a178:	ret
   1a17c:	ldrb	w2, [x1, x5]
   1a180:	strb	w2, [x0, x5]
   1a184:	sub	x5, x5, #0x1
   1a188:	cmn	x5, #0x1
   1a18c:	b.eq	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a190:	ldrb	w2, [x1, x5]
   1a194:	strb	w2, [x0, x5]
   1a198:	sub	x5, x5, #0x1
   1a19c:	cmn	x5, #0x1
   1a1a0:	b.ne	1a17c <__sanitizer_set_report_fd@@Base+0x23bc>  // b.any
   1a1a4:	b	19ff8 <__sanitizer_set_report_fd@@Base+0x2238>
   1a1a8:	mov	x3, #0x0                   	// #0
   1a1ac:	nop
   1a1b0:	ldrb	w4, [x1, x3]
   1a1b4:	strb	w4, [x0, x3]
   1a1b8:	add	x3, x3, #0x1
   1a1bc:	cmp	x2, x3
   1a1c0:	b.ne	1a1b0 <__sanitizer_set_report_fd@@Base+0x23f0>  // b.any
   1a1c4:	ret
   1a1c8:	orr	x3, x0, x2
   1a1cc:	ands	x3, x3, #0xf
   1a1d0:	b.eq	1a1f8 <__sanitizer_set_report_fd@@Base+0x2438>  // b.none
   1a1d4:	cbz	x2, 1a1f4 <__sanitizer_set_report_fd@@Base+0x2434>
   1a1d8:	and	w3, w1, #0xff
   1a1dc:	add	x2, x0, x2
   1a1e0:	mov	x1, x0
   1a1e4:	nop
   1a1e8:	strb	w3, [x1], #1
   1a1ec:	cmp	x1, x2
   1a1f0:	b.ne	1a1e8 <__sanitizer_set_report_fd@@Base+0x2428>  // b.any
   1a1f4:	ret
   1a1f8:	sxtw	x4, w1
   1a1fc:	sbfiz	x1, x1, #8, #32
   1a200:	orr	x1, x4, x1
   1a204:	and	x2, x2, #0xfffffffffffffff8
   1a208:	add	x4, x0, x2
   1a20c:	orr	x1, x1, x1, lsl #16
   1a210:	cmp	x0, x4
   1a214:	orr	x4, x1, x1, lsl #32
   1a218:	b.cs	1a1f4 <__sanitizer_set_report_fd@@Base+0x2434>  // b.hs, b.nlast
   1a21c:	sub	x1, x2, #0x1
   1a220:	dup	v0.2d, x4
   1a224:	lsr	x1, x1, #4
   1a228:	add	x1, x1, #0x1
   1a22c:	nop
   1a230:	lsl	x2, x3, #4
   1a234:	add	x3, x3, #0x1
   1a238:	cmp	x1, x3
   1a23c:	str	q0, [x0, x2]
   1a240:	b.hi	1a230 <__sanitizer_set_report_fd@@Base+0x2470>  // b.pmore
   1a244:	ret
   1a248:	ldrb	w4, [x0]
   1a24c:	mov	x6, x0
   1a250:	cbz	w4, 1a294 <__sanitizer_set_report_fd@@Base+0x24d4>
   1a254:	ldrb	w5, [x1]
   1a258:	mov	x0, #0x0                   	// #0
   1a25c:	nop
   1a260:	cmp	w4, w5
   1a264:	b.eq	1a280 <__sanitizer_set_report_fd@@Base+0x24c0>  // b.none
   1a268:	mov	w2, w5
   1a26c:	mov	x3, x1
   1a270:	cbz	w2, 1a284 <__sanitizer_set_report_fd@@Base+0x24c4>
   1a274:	ldrb	w2, [x3, #1]!
   1a278:	cmp	w4, w2
   1a27c:	b.ne	1a270 <__sanitizer_set_report_fd@@Base+0x24b0>  // b.any
   1a280:	ret
   1a284:	add	x0, x0, #0x1
   1a288:	ldrb	w4, [x6, x0]
   1a28c:	cbnz	w4, 1a260 <__sanitizer_set_report_fd@@Base+0x24a0>
   1a290:	ret
   1a294:	mov	x0, #0x0                   	// #0
   1a298:	ret
   1a29c:	nop
   1a2a0:	stp	x19, x20, [sp, #-32]!
   1a2a4:	mov	x20, x0
   1a2a8:	str	x30, [sp, #24]
   1a2ac:	ldrb	w0, [x0]
   1a2b0:	cbz	w0, 1a478 <__sanitizer_set_report_fd@@Base+0x26b8>
   1a2b4:	mov	x19, #0x0                   	// #0
   1a2b8:	str	x21, [sp, #16]
   1a2bc:	nop
   1a2c0:	mov	x21, x19
   1a2c4:	add	x19, x19, #0x1
   1a2c8:	ldrb	w0, [x20, x19]
   1a2cc:	cbnz	w0, 1a2c0 <__sanitizer_set_report_fd@@Base+0x2500>
   1a2d0:	mov	x1, #0x0                   	// #0
   1a2d4:	add	x0, x21, #0x2
   1a2d8:	mov	x2, #0x0                   	// #0
   1a2dc:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   1a2e0:	add	x1, x20, #0xf
   1a2e4:	sub	x1, x1, x0
   1a2e8:	cmp	x1, #0x1e
   1a2ec:	ccmp	x21, #0xe, #0x0, hi  // hi = pmore
   1a2f0:	b.ls	1a458 <__sanitizer_set_report_fd@@Base+0x2698>  // b.plast
   1a2f4:	and	x2, x19, #0xfffffffffffffff0
   1a2f8:	mov	x1, #0x0                   	// #0
   1a2fc:	nop
   1a300:	ldr	q0, [x20, x1]
   1a304:	str	q0, [x0, x1]
   1a308:	add	x1, x1, #0x10
   1a30c:	cmp	x1, x2
   1a310:	b.ne	1a300 <__sanitizer_set_report_fd@@Base+0x2540>  // b.any
   1a314:	tst	x19, #0xf
   1a318:	and	x1, x19, #0xfffffffffffffff0
   1a31c:	b.eq	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.none
   1a320:	ldrb	w3, [x20, x1]
   1a324:	add	x2, x1, #0x1
   1a328:	strb	w3, [x0, x1]
   1a32c:	cmp	x19, x2
   1a330:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a334:	ldrb	w4, [x20, x2]
   1a338:	add	x3, x1, #0x2
   1a33c:	strb	w4, [x0, x2]
   1a340:	cmp	x19, x3
   1a344:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a348:	ldrb	w4, [x20, x3]
   1a34c:	add	x2, x1, #0x3
   1a350:	strb	w4, [x0, x3]
   1a354:	cmp	x19, x2
   1a358:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a35c:	ldrb	w4, [x20, x2]
   1a360:	add	x3, x1, #0x4
   1a364:	strb	w4, [x0, x2]
   1a368:	cmp	x19, x3
   1a36c:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a370:	ldrb	w4, [x20, x3]
   1a374:	add	x2, x1, #0x5
   1a378:	strb	w4, [x0, x3]
   1a37c:	cmp	x19, x2
   1a380:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a384:	ldrb	w4, [x20, x2]
   1a388:	add	x3, x1, #0x6
   1a38c:	strb	w4, [x0, x2]
   1a390:	cmp	x19, x3
   1a394:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a398:	ldrb	w4, [x20, x3]
   1a39c:	add	x2, x1, #0x7
   1a3a0:	strb	w4, [x0, x3]
   1a3a4:	cmp	x19, x2
   1a3a8:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a3ac:	ldrb	w4, [x20, x2]
   1a3b0:	add	x3, x1, #0x8
   1a3b4:	strb	w4, [x0, x2]
   1a3b8:	cmp	x19, x3
   1a3bc:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a3c0:	ldrb	w4, [x20, x3]
   1a3c4:	add	x2, x1, #0x9
   1a3c8:	strb	w4, [x0, x3]
   1a3cc:	cmp	x19, x2
   1a3d0:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a3d4:	ldrb	w4, [x20, x2]
   1a3d8:	add	x3, x1, #0xa
   1a3dc:	strb	w4, [x0, x2]
   1a3e0:	cmp	x19, x3
   1a3e4:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a3e8:	ldrb	w4, [x20, x3]
   1a3ec:	add	x2, x1, #0xb
   1a3f0:	strb	w4, [x0, x3]
   1a3f4:	cmp	x19, x2
   1a3f8:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a3fc:	ldrb	w4, [x20, x2]
   1a400:	add	x3, x1, #0xc
   1a404:	strb	w4, [x0, x2]
   1a408:	cmp	x19, x3
   1a40c:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a410:	ldrb	w4, [x20, x3]
   1a414:	add	x2, x1, #0xd
   1a418:	strb	w4, [x0, x3]
   1a41c:	cmp	x19, x2
   1a420:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a424:	ldrb	w3, [x20, x2]
   1a428:	add	x1, x1, #0xe
   1a42c:	strb	w3, [x0, x2]
   1a430:	cmp	x19, x1
   1a434:	b.ls	1a440 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a438:	ldrb	w2, [x20, x1]
   1a43c:	strb	w2, [x0, x1]
   1a440:	add	x19, x0, x19
   1a444:	ldr	x21, [sp, #16]
   1a448:	strb	wzr, [x19]
   1a44c:	ldr	x30, [sp, #24]
   1a450:	ldp	x19, x20, [sp], #32
   1a454:	ret
   1a458:	mov	x1, #0x0                   	// #0
   1a45c:	nop
   1a460:	ldrb	w3, [x20, x1]
   1a464:	cmp	x21, x1
   1a468:	strb	w3, [x0, x1]
   1a46c:	add	x1, x1, #0x1
   1a470:	b.ne	1a460 <__sanitizer_set_report_fd@@Base+0x26a0>  // b.any
   1a474:	b	1a440 <__sanitizer_set_report_fd@@Base+0x2680>
   1a478:	mov	x2, #0x0                   	// #0
   1a47c:	mov	x1, #0x0                   	// #0
   1a480:	mov	x0, #0x1                   	// #1
   1a484:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   1a488:	mov	x19, x0
   1a48c:	strb	wzr, [x19]
   1a490:	ldr	x30, [sp, #24]
   1a494:	ldp	x19, x20, [sp], #32
   1a498:	ret
   1a49c:	nop
   1a4a0:	ldrb	w3, [x0]
   1a4a4:	mov	x2, #0x1                   	// #1
   1a4a8:	ldrb	w4, [x1]
   1a4ac:	cmp	w4, w3
   1a4b0:	b.ne	1a4d0 <__sanitizer_set_report_fd@@Base+0x2710>  // b.any
   1a4b4:	nop
   1a4b8:	cbz	w3, 1a4e0 <__sanitizer_set_report_fd@@Base+0x2720>
   1a4bc:	ldrb	w3, [x0, x2]
   1a4c0:	ldrb	w4, [x1, x2]
   1a4c4:	add	x2, x2, #0x1
   1a4c8:	cmp	w3, w4
   1a4cc:	b.eq	1a4b8 <__sanitizer_set_report_fd@@Base+0x26f8>  // b.none
   1a4d0:	cmp	w3, w4
   1a4d4:	mov	w0, #0x1                   	// #1
   1a4d8:	cneg	w0, w0, cc  // cc = lo, ul, last
   1a4dc:	ret
   1a4e0:	mov	w0, #0x0                   	// #0
   1a4e4:	ret
   1a4e8:	cbz	x2, 1a520 <__sanitizer_set_report_fd@@Base+0x2760>
   1a4ec:	mov	x3, #0x0                   	// #0
   1a4f0:	b	1a500 <__sanitizer_set_report_fd@@Base+0x2740>
   1a4f4:	cbz	w4, 1a520 <__sanitizer_set_report_fd@@Base+0x2760>
   1a4f8:	cmp	x2, x3
   1a4fc:	b.eq	1a520 <__sanitizer_set_report_fd@@Base+0x2760>  // b.none
   1a500:	ldrb	w4, [x0, x3]
   1a504:	ldrb	w5, [x1, x3]
   1a508:	add	x3, x3, #0x1
   1a50c:	cmp	w4, w5
   1a510:	b.eq	1a4f4 <__sanitizer_set_report_fd@@Base+0x2734>  // b.none
   1a514:	mov	w0, #0x1                   	// #1
   1a518:	cneg	w0, w0, cc  // cc = lo, ul, last
   1a51c:	ret
   1a520:	mov	w0, #0x0                   	// #0
   1a524:	ret
   1a528:	ldrb	w2, [x0]
   1a52c:	and	w3, w1, #0xff
   1a530:	cmp	w2, w1, uxtb
   1a534:	b.eq	1a548 <__sanitizer_set_report_fd@@Base+0x2788>  // b.none
   1a538:	cbz	w2, 1a54c <__sanitizer_set_report_fd@@Base+0x278c>
   1a53c:	ldrb	w2, [x0, #1]!
   1a540:	cmp	w2, w3
   1a544:	b.ne	1a538 <__sanitizer_set_report_fd@@Base+0x2778>  // b.any
   1a548:	ret
   1a54c:	mov	x0, #0x0                   	// #0
   1a550:	ret
   1a554:	nop
   1a558:	ldrb	w4, [x0]
   1a55c:	mov	x2, x0
   1a560:	and	w3, w1, #0xff
   1a564:	cmp	w4, w1, uxtb
   1a568:	b.eq	1a580 <__sanitizer_set_report_fd@@Base+0x27c0>  // b.none
   1a56c:	mov	w1, w4
   1a570:	cbz	w1, 1a584 <__sanitizer_set_report_fd@@Base+0x27c4>
   1a574:	ldrb	w1, [x0, #1]!
   1a578:	cmp	w1, w3
   1a57c:	b.ne	1a570 <__sanitizer_set_report_fd@@Base+0x27b0>  // b.any
   1a580:	ret
   1a584:	cbz	w4, 1a5a0 <__sanitizer_set_report_fd@@Base+0x27e0>
   1a588:	add	x1, x2, #0x1
   1a58c:	nop
   1a590:	mov	x0, x1
   1a594:	ldrb	w2, [x1], #1
   1a598:	cbnz	w2, 1a590 <__sanitizer_set_report_fd@@Base+0x27d0>
   1a59c:	ret
   1a5a0:	mov	x0, x2
   1a5a4:	ret
   1a5a8:	ldrb	w3, [x0]
   1a5ac:	mov	x2, x0
   1a5b0:	mov	x0, #0x0                   	// #0
   1a5b4:	cbz	w3, 1a5c8 <__sanitizer_set_report_fd@@Base+0x2808>
   1a5b8:	cmp	w1, w3
   1a5bc:	csel	x0, x0, x2, ne  // ne = any
   1a5c0:	ldrb	w3, [x2, #1]!
   1a5c4:	cbnz	w3, 1a5b8 <__sanitizer_set_report_fd@@Base+0x27f8>
   1a5c8:	ret
   1a5cc:	nop
   1a5d0:	mov	x2, x0
   1a5d4:	ldrb	w0, [x0]
   1a5d8:	cbz	w0, 1a5f0 <__sanitizer_set_report_fd@@Base+0x2830>
   1a5dc:	mov	x0, #0x0                   	// #0
   1a5e0:	add	x0, x0, #0x1
   1a5e4:	ldrb	w1, [x2, x0]
   1a5e8:	cbnz	w1, 1a5e0 <__sanitizer_set_report_fd@@Base+0x2820>
   1a5ec:	ret
   1a5f0:	mov	x0, #0x0                   	// #0
   1a5f4:	ret
   1a5f8:	ldrb	w3, [x1]
   1a5fc:	mov	x4, #0x0                   	// #0
   1a600:	cbz	w3, 1a614 <__sanitizer_set_report_fd@@Base+0x2854>
   1a604:	nop
   1a608:	add	x4, x4, #0x1
   1a60c:	ldrb	w3, [x1, x4]
   1a610:	cbnz	w3, 1a608 <__sanitizer_set_report_fd@@Base+0x2848>
   1a614:	cbz	x2, 1a938 <__sanitizer_set_report_fd@@Base+0x2b78>
   1a618:	mov	x3, #0x0                   	// #0
   1a61c:	b	1a62c <__sanitizer_set_report_fd@@Base+0x286c>
   1a620:	add	x3, x3, #0x1
   1a624:	cmp	x2, x3
   1a628:	b.eq	1a938 <__sanitizer_set_report_fd@@Base+0x2b78>  // b.none
   1a62c:	ldrb	w5, [x0, x3]
   1a630:	add	x7, x0, x3
   1a634:	cbnz	w5, 1a620 <__sanitizer_set_report_fd@@Base+0x2860>
   1a638:	sub	x5, x2, x3
   1a63c:	cmp	x5, x4
   1a640:	b.ls	1a7b8 <__sanitizer_set_report_fd@@Base+0x29f8>  // b.plast
   1a644:	cmp	x1, x7
   1a648:	add	x5, x4, #0x1
   1a64c:	b.ls	1a940 <__sanitizer_set_report_fd@@Base+0x2b80>  // b.plast
   1a650:	cmp	x5, #0x0
   1a654:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a658:	add	x0, x1, #0xf
   1a65c:	sub	x0, x0, x7
   1a660:	cmp	x0, #0x1e
   1a664:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
   1a668:	b.ls	1acc0 <__sanitizer_set_report_fd@@Base+0x2f00>  // b.plast
   1a66c:	and	x2, x5, #0xfffffffffffffff0
   1a670:	mov	x0, #0x0                   	// #0
   1a674:	nop
   1a678:	ldr	q0, [x1, x0]
   1a67c:	str	q0, [x7, x0]
   1a680:	add	x0, x0, #0x10
   1a684:	cmp	x0, x2
   1a688:	b.ne	1a678 <__sanitizer_set_report_fd@@Base+0x28b8>  // b.any
   1a68c:	tst	x5, #0xf
   1a690:	and	x0, x5, #0xfffffffffffffff0
   1a694:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1a698:	ldrb	w6, [x1, x0]
   1a69c:	add	x2, x0, #0x1
   1a6a0:	strb	w6, [x7, x0]
   1a6a4:	cmp	x5, x2
   1a6a8:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a6ac:	ldrb	w8, [x1, x2]
   1a6b0:	add	x6, x0, #0x2
   1a6b4:	strb	w8, [x7, x2]
   1a6b8:	cmp	x5, x6
   1a6bc:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a6c0:	ldrb	w8, [x1, x6]
   1a6c4:	add	x2, x0, #0x3
   1a6c8:	strb	w8, [x7, x6]
   1a6cc:	cmp	x5, x2
   1a6d0:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a6d4:	ldrb	w8, [x1, x2]
   1a6d8:	add	x6, x0, #0x4
   1a6dc:	strb	w8, [x7, x2]
   1a6e0:	cmp	x5, x6
   1a6e4:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a6e8:	ldrb	w8, [x1, x6]
   1a6ec:	add	x2, x0, #0x5
   1a6f0:	strb	w8, [x7, x6]
   1a6f4:	cmp	x5, x2
   1a6f8:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a6fc:	ldrb	w8, [x1, x2]
   1a700:	add	x6, x0, #0x6
   1a704:	strb	w8, [x7, x2]
   1a708:	cmp	x5, x6
   1a70c:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a710:	ldrb	w8, [x1, x6]
   1a714:	add	x2, x0, #0x7
   1a718:	strb	w8, [x7, x6]
   1a71c:	cmp	x5, x2
   1a720:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a724:	ldrb	w8, [x1, x2]
   1a728:	add	x6, x0, #0x8
   1a72c:	strb	w8, [x7, x2]
   1a730:	cmp	x5, x6
   1a734:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a738:	ldrb	w8, [x1, x6]
   1a73c:	add	x2, x0, #0x9
   1a740:	strb	w8, [x7, x6]
   1a744:	cmp	x5, x2
   1a748:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a74c:	ldrb	w8, [x1, x2]
   1a750:	add	x6, x0, #0xa
   1a754:	strb	w8, [x7, x2]
   1a758:	cmp	x5, x6
   1a75c:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a760:	ldrb	w8, [x1, x6]
   1a764:	add	x2, x0, #0xb
   1a768:	strb	w8, [x7, x6]
   1a76c:	cmp	x5, x2
   1a770:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a774:	ldrb	w8, [x1, x2]
   1a778:	add	x6, x0, #0xc
   1a77c:	strb	w8, [x7, x2]
   1a780:	cmp	x5, x6
   1a784:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a788:	ldrb	w8, [x1, x6]
   1a78c:	add	x2, x0, #0xd
   1a790:	strb	w8, [x7, x6]
   1a794:	cmp	x5, x2
   1a798:	b.le	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a79c:	ldrb	w6, [x1, x2]
   1a7a0:	add	x0, x0, #0xe
   1a7a4:	strb	w6, [x7, x2]
   1a7a8:	cmp	x5, x0
   1a7ac:	b.gt	1aab8 <__sanitizer_set_report_fd@@Base+0x2cf8>
   1a7b0:	add	x0, x4, x3
   1a7b4:	ret
   1a7b8:	cmp	x1, x7
   1a7bc:	sub	x8, x5, #0x1
   1a7c0:	b.ls	1aac8 <__sanitizer_set_report_fd@@Base+0x2d08>  // b.plast
   1a7c4:	cmp	x8, #0x0
   1a7c8:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a7cc:	add	x6, x1, #0xf
   1a7d0:	sub	x5, x5, #0x2
   1a7d4:	sub	x6, x6, x7
   1a7d8:	cmp	x6, #0x1e
   1a7dc:	ccmp	x5, #0xe, #0x0, hi  // hi = pmore
   1a7e0:	b.ls	1aca4 <__sanitizer_set_report_fd@@Base+0x2ee4>  // b.plast
   1a7e4:	and	x6, x8, #0xfffffffffffffff0
   1a7e8:	mov	x5, #0x0                   	// #0
   1a7ec:	nop
   1a7f0:	ldr	q0, [x1, x5]
   1a7f4:	str	q0, [x7, x5]
   1a7f8:	add	x5, x5, #0x10
   1a7fc:	cmp	x5, x6
   1a800:	b.ne	1a7f0 <__sanitizer_set_report_fd@@Base+0x2a30>  // b.any
   1a804:	tst	x8, #0xf
   1a808:	and	x5, x8, #0xfffffffffffffff0
   1a80c:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1a810:	ldrb	w9, [x1, x5]
   1a814:	add	x6, x5, #0x1
   1a818:	strb	w9, [x7, x5]
   1a81c:	cmp	x8, x6
   1a820:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a824:	ldrb	w10, [x1, x6]
   1a828:	add	x9, x5, #0x2
   1a82c:	strb	w10, [x7, x6]
   1a830:	cmp	x8, x9
   1a834:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a838:	ldrb	w10, [x1, x9]
   1a83c:	add	x6, x5, #0x3
   1a840:	strb	w10, [x7, x9]
   1a844:	cmp	x8, x6
   1a848:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a84c:	ldrb	w10, [x1, x6]
   1a850:	add	x9, x5, #0x4
   1a854:	strb	w10, [x7, x6]
   1a858:	cmp	x8, x9
   1a85c:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a860:	ldrb	w10, [x1, x9]
   1a864:	add	x6, x5, #0x5
   1a868:	strb	w10, [x7, x9]
   1a86c:	cmp	x8, x6
   1a870:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a874:	ldrb	w10, [x1, x6]
   1a878:	add	x9, x5, #0x6
   1a87c:	strb	w10, [x7, x6]
   1a880:	cmp	x8, x9
   1a884:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a888:	ldrb	w10, [x1, x9]
   1a88c:	add	x6, x5, #0x7
   1a890:	strb	w10, [x7, x9]
   1a894:	cmp	x8, x6
   1a898:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a89c:	ldrb	w10, [x1, x6]
   1a8a0:	add	x9, x5, #0x8
   1a8a4:	strb	w10, [x7, x6]
   1a8a8:	cmp	x8, x9
   1a8ac:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a8b0:	ldrb	w10, [x1, x9]
   1a8b4:	add	x6, x5, #0x9
   1a8b8:	strb	w10, [x7, x9]
   1a8bc:	cmp	x8, x6
   1a8c0:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a8c4:	ldrb	w10, [x1, x6]
   1a8c8:	add	x9, x5, #0xa
   1a8cc:	strb	w10, [x7, x6]
   1a8d0:	cmp	x8, x9
   1a8d4:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a8d8:	ldrb	w10, [x1, x9]
   1a8dc:	add	x6, x5, #0xb
   1a8e0:	strb	w10, [x7, x9]
   1a8e4:	cmp	x8, x6
   1a8e8:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a8ec:	ldrb	w10, [x1, x6]
   1a8f0:	add	x9, x5, #0xc
   1a8f4:	strb	w10, [x7, x6]
   1a8f8:	cmp	x8, x9
   1a8fc:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a900:	ldrb	w10, [x1, x9]
   1a904:	add	x6, x5, #0xd
   1a908:	strb	w10, [x7, x9]
   1a90c:	cmp	x8, x6
   1a910:	b.le	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a914:	ldrb	w9, [x1, x6]
   1a918:	add	x5, x5, #0xe
   1a91c:	strb	w9, [x7, x6]
   1a920:	cmp	x8, x5
   1a924:	b.gt	1ac40 <__sanitizer_set_report_fd@@Base+0x2e80>
   1a928:	add	x0, x0, x2
   1a92c:	sturb	wzr, [x0, #-1]
   1a930:	add	x0, x4, x3
   1a934:	b	1a7b4 <__sanitizer_set_report_fd@@Base+0x29f4>
   1a938:	add	x0, x2, x4
   1a93c:	ret
   1a940:	cmp	x5, #0x0
   1a944:	ccmp	x1, x7, #0x2, gt
   1a948:	b.cs	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.hs, b.nlast
   1a94c:	sub	x2, x4, #0xf
   1a950:	add	x0, x1, x5
   1a954:	add	x8, x7, x2
   1a958:	add	x2, x1, x2
   1a95c:	cmp	x8, x0
   1a960:	add	x0, x7, x5
   1a964:	ccmp	x0, x2, #0x0, cc  // cc = lo, ul, last
   1a968:	mov	x0, x4
   1a96c:	ccmp	x4, #0xe, #0x0, ls  // ls = plast
   1a970:	b.ls	1ac4c <__sanitizer_set_report_fd@@Base+0x2e8c>  // b.plast
   1a974:	neg	x6, x5, lsr #4
   1a978:	mov	x0, #0x0                   	// #0
   1a97c:	lsl	x6, x6, #4
   1a980:	ldr	q0, [x2, x0]
   1a984:	str	q0, [x8, x0]
   1a988:	sub	x0, x0, #0x10
   1a98c:	cmp	x0, x6
   1a990:	b.ne	1a980 <__sanitizer_set_report_fd@@Base+0x2bc0>  // b.any
   1a994:	and	x0, x5, #0xfffffffffffffff0
   1a998:	cmp	x5, x0
   1a99c:	sub	x0, x4, x0
   1a9a0:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1a9a4:	ldrb	w5, [x1, x0]
   1a9a8:	sub	x2, x0, #0x1
   1a9ac:	strb	w5, [x7, x0]
   1a9b0:	cbz	x0, 1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a9b4:	ldrb	w5, [x1, x2]
   1a9b8:	cmp	x0, #0x1
   1a9bc:	strb	w5, [x7, x2]
   1a9c0:	sub	x2, x0, #0x2
   1a9c4:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1a9c8:	ldrb	w5, [x1, x2]
   1a9cc:	cmp	x0, #0x2
   1a9d0:	strb	w5, [x7, x2]
   1a9d4:	sub	x2, x0, #0x3
   1a9d8:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1a9dc:	ldrb	w5, [x1, x2]
   1a9e0:	cmp	x0, #0x3
   1a9e4:	strb	w5, [x7, x2]
   1a9e8:	sub	x2, x0, #0x4
   1a9ec:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1a9f0:	ldrb	w5, [x1, x2]
   1a9f4:	cmp	x0, #0x4
   1a9f8:	strb	w5, [x7, x2]
   1a9fc:	sub	x2, x0, #0x5
   1aa00:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aa04:	ldrb	w5, [x1, x2]
   1aa08:	cmp	x0, #0x5
   1aa0c:	strb	w5, [x7, x2]
   1aa10:	sub	x2, x0, #0x6
   1aa14:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aa18:	ldrb	w5, [x1, x2]
   1aa1c:	cmp	x0, #0x6
   1aa20:	strb	w5, [x7, x2]
   1aa24:	sub	x2, x0, #0x7
   1aa28:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aa2c:	ldrb	w5, [x1, x2]
   1aa30:	cmp	x0, #0x7
   1aa34:	strb	w5, [x7, x2]
   1aa38:	sub	x2, x0, #0x8
   1aa3c:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aa40:	ldrb	w5, [x1, x2]
   1aa44:	cmp	x0, #0x8
   1aa48:	strb	w5, [x7, x2]
   1aa4c:	sub	x2, x0, #0x9
   1aa50:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aa54:	ldrb	w5, [x1, x2]
   1aa58:	cmp	x0, #0x9
   1aa5c:	strb	w5, [x7, x2]
   1aa60:	sub	x2, x0, #0xa
   1aa64:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aa68:	ldrb	w5, [x1, x2]
   1aa6c:	cmp	x0, #0xa
   1aa70:	strb	w5, [x7, x2]
   1aa74:	sub	x2, x0, #0xb
   1aa78:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aa7c:	ldrb	w5, [x1, x2]
   1aa80:	cmp	x0, #0xb
   1aa84:	strb	w5, [x7, x2]
   1aa88:	sub	x2, x0, #0xc
   1aa8c:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aa90:	ldrb	w5, [x1, x2]
   1aa94:	cmp	x0, #0xc
   1aa98:	strb	w5, [x7, x2]
   1aa9c:	sub	x2, x0, #0xd
   1aaa0:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aaa4:	ldrb	w5, [x1, x2]
   1aaa8:	cmp	x0, #0xd
   1aaac:	strb	w5, [x7, x2]
   1aab0:	sub	x0, x0, #0xe
   1aab4:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aab8:	ldrb	w1, [x1, x0]
   1aabc:	strb	w1, [x7, x0]
   1aac0:	add	x0, x4, x3
   1aac4:	b	1a7b4 <__sanitizer_set_report_fd@@Base+0x29f4>
   1aac8:	cmp	x8, #0x0
   1aacc:	ccmp	x1, x7, #0x2, gt
   1aad0:	b.cs	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.hs, b.nlast
   1aad4:	sub	x9, x5, #0x11
   1aad8:	add	x6, x1, x8
   1aadc:	add	x11, x7, x9
   1aae0:	add	x9, x1, x9
   1aae4:	cmp	x6, x11
   1aae8:	add	x6, x7, x8
   1aaec:	sub	x5, x5, #0x2
   1aaf0:	ccmp	x6, x9, #0x0, hi  // hi = pmore
   1aaf4:	ccmp	x5, #0xe, #0x0, ls  // ls = plast
   1aaf8:	b.ls	1ac78 <__sanitizer_set_report_fd@@Base+0x2eb8>  // b.plast
   1aafc:	neg	x10, x8, lsr #4
   1ab00:	mov	x6, #0x0                   	// #0
   1ab04:	lsl	x10, x10, #4
   1ab08:	ldr	q0, [x9, x6]
   1ab0c:	str	q0, [x11, x6]
   1ab10:	sub	x6, x6, #0x10
   1ab14:	cmp	x6, x10
   1ab18:	b.ne	1ab08 <__sanitizer_set_report_fd@@Base+0x2d48>  // b.any
   1ab1c:	and	x6, x8, #0xfffffffffffffff0
   1ab20:	sub	x5, x5, x6
   1ab24:	cmp	x8, x6
   1ab28:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ab2c:	ldrb	w8, [x1, x5]
   1ab30:	sub	x6, x5, #0x1
   1ab34:	strb	w8, [x7, x5]
   1ab38:	cbz	x5, 1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1ab3c:	ldrb	w8, [x1, x6]
   1ab40:	cmp	x5, #0x1
   1ab44:	strb	w8, [x7, x6]
   1ab48:	sub	x6, x5, #0x2
   1ab4c:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ab50:	ldrb	w8, [x1, x6]
   1ab54:	cmp	x5, #0x2
   1ab58:	strb	w8, [x7, x6]
   1ab5c:	sub	x6, x5, #0x3
   1ab60:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ab64:	ldrb	w8, [x1, x6]
   1ab68:	cmp	x5, #0x3
   1ab6c:	strb	w8, [x7, x6]
   1ab70:	sub	x6, x5, #0x4
   1ab74:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ab78:	ldrb	w8, [x1, x6]
   1ab7c:	cmp	x5, #0x4
   1ab80:	strb	w8, [x7, x6]
   1ab84:	sub	x6, x5, #0x5
   1ab88:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ab8c:	ldrb	w8, [x1, x6]
   1ab90:	cmp	x5, #0x5
   1ab94:	strb	w8, [x7, x6]
   1ab98:	sub	x6, x5, #0x6
   1ab9c:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1aba0:	ldrb	w8, [x1, x6]
   1aba4:	cmp	x5, #0x6
   1aba8:	strb	w8, [x7, x6]
   1abac:	sub	x6, x5, #0x7
   1abb0:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1abb4:	ldrb	w8, [x1, x6]
   1abb8:	cmp	x5, #0x7
   1abbc:	strb	w8, [x7, x6]
   1abc0:	sub	x6, x5, #0x8
   1abc4:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1abc8:	ldrb	w8, [x1, x6]
   1abcc:	cmp	x5, #0x8
   1abd0:	strb	w8, [x7, x6]
   1abd4:	sub	x6, x5, #0x9
   1abd8:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1abdc:	ldrb	w8, [x1, x6]
   1abe0:	cmp	x5, #0x9
   1abe4:	strb	w8, [x7, x6]
   1abe8:	sub	x6, x5, #0xa
   1abec:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1abf0:	ldrb	w8, [x1, x6]
   1abf4:	cmp	x5, #0xa
   1abf8:	strb	w8, [x7, x6]
   1abfc:	sub	x6, x5, #0xb
   1ac00:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ac04:	ldrb	w8, [x1, x6]
   1ac08:	cmp	x5, #0xb
   1ac0c:	strb	w8, [x7, x6]
   1ac10:	sub	x6, x5, #0xc
   1ac14:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ac18:	ldrb	w8, [x1, x6]
   1ac1c:	cmp	x5, #0xc
   1ac20:	strb	w8, [x7, x6]
   1ac24:	sub	x6, x5, #0xd
   1ac28:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ac2c:	ldrb	w8, [x1, x6]
   1ac30:	cmp	x5, #0xd
   1ac34:	strb	w8, [x7, x6]
   1ac38:	sub	x5, x5, #0xe
   1ac3c:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ac40:	ldrb	w1, [x1, x5]
   1ac44:	strb	w1, [x7, x5]
   1ac48:	b	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1ac4c:	ldrb	w2, [x1, x0]
   1ac50:	strb	w2, [x7, x0]
   1ac54:	sub	x0, x0, #0x1
   1ac58:	cmn	x0, #0x1
   1ac5c:	b.eq	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1ac60:	ldrb	w2, [x1, x0]
   1ac64:	strb	w2, [x7, x0]
   1ac68:	sub	x0, x0, #0x1
   1ac6c:	cmn	x0, #0x1
   1ac70:	b.ne	1ac4c <__sanitizer_set_report_fd@@Base+0x2e8c>  // b.any
   1ac74:	b	1a7b0 <__sanitizer_set_report_fd@@Base+0x29f0>
   1ac78:	ldrb	w6, [x1, x5]
   1ac7c:	strb	w6, [x7, x5]
   1ac80:	sub	x5, x5, #0x1
   1ac84:	cmn	x5, #0x1
   1ac88:	b.eq	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ac8c:	ldrb	w6, [x1, x5]
   1ac90:	strb	w6, [x7, x5]
   1ac94:	sub	x5, x5, #0x1
   1ac98:	cmn	x5, #0x1
   1ac9c:	b.ne	1ac78 <__sanitizer_set_report_fd@@Base+0x2eb8>  // b.any
   1aca0:	b	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1aca4:	mov	x5, #0x0                   	// #0
   1aca8:	ldrb	w6, [x1, x5]
   1acac:	strb	w6, [x7, x5]
   1acb0:	add	x5, x5, #0x1
   1acb4:	cmp	x8, x5
   1acb8:	b.ne	1aca8 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.any
   1acbc:	b	1a928 <__sanitizer_set_report_fd@@Base+0x2b68>
   1acc0:	mov	x0, #0x0                   	// #0
   1acc4:	nop
   1acc8:	ldrb	w2, [x1, x0]
   1accc:	strb	w2, [x7, x0]
   1acd0:	add	x0, x0, #0x1
   1acd4:	cmp	x5, x0
   1acd8:	b.ne	1acc8 <__sanitizer_set_report_fd@@Base+0x2f08>  // b.any
   1acdc:	add	x0, x4, x3
   1ace0:	b	1a7b4 <__sanitizer_set_report_fd@@Base+0x29f4>
   1ace4:	nop
   1ace8:	ldrb	w3, [x0]
   1acec:	mov	x4, #0x0                   	// #0
   1acf0:	cbz	w3, 1ad50 <__sanitizer_set_report_fd@@Base+0x2f90>
   1acf4:	nop
   1acf8:	add	x4, x4, #0x1
   1acfc:	add	x5, x0, x4
   1ad00:	ldrb	w3, [x0, x4]
   1ad04:	cbnz	w3, 1acf8 <__sanitizer_set_report_fd@@Base+0x2f38>
   1ad08:	add	x6, x0, x4
   1ad0c:	mov	x3, #0x0                   	// #0
   1ad10:	cbnz	x2, 1ad24 <__sanitizer_set_report_fd@@Base+0x2f64>
   1ad14:	b	1ad38 <__sanitizer_set_report_fd@@Base+0x2f78>
   1ad18:	strb	w7, [x6]
   1ad1c:	add	x6, x6, #0x1
   1ad20:	b.eq	1ad40 <__sanitizer_set_report_fd@@Base+0x2f80>  // b.none
   1ad24:	ldrb	w7, [x1, x3]
   1ad28:	add	x3, x3, #0x1
   1ad2c:	mov	x5, x6
   1ad30:	cmp	x2, x3
   1ad34:	cbnz	w7, 1ad18 <__sanitizer_set_report_fd@@Base+0x2f58>
   1ad38:	strb	wzr, [x5]
   1ad3c:	ret
   1ad40:	add	x4, x2, x4
   1ad44:	add	x5, x0, x4
   1ad48:	strb	wzr, [x5]
   1ad4c:	ret
   1ad50:	mov	x5, x0
   1ad54:	b	1ad08 <__sanitizer_set_report_fd@@Base+0x2f48>
   1ad58:	mov	x4, x0
   1ad5c:	ldrb	w0, [x1]
   1ad60:	cbz	w0, 1b3b8 <__sanitizer_set_report_fd@@Base+0x35f8>
   1ad64:	mov	x0, #0x0                   	// #0
   1ad68:	add	x0, x0, #0x1
   1ad6c:	ldrb	w3, [x1, x0]
   1ad70:	cbnz	w3, 1ad68 <__sanitizer_set_report_fd@@Base+0x2fa8>
   1ad74:	cmp	x2, x0
   1ad78:	b.hi	1af00 <__sanitizer_set_report_fd@@Base+0x3140>  // b.pmore
   1ad7c:	cbnz	x2, 1ad84 <__sanitizer_set_report_fd@@Base+0x2fc4>
   1ad80:	ret
   1ad84:	cmp	x1, x4
   1ad88:	sub	x5, x2, #0x1
   1ad8c:	b.ls	1b220 <__sanitizer_set_report_fd@@Base+0x3460>  // b.plast
   1ad90:	cmp	x5, #0x0
   1ad94:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1ad98:	add	x3, x1, #0xf
   1ad9c:	sub	x2, x2, #0x2
   1ada0:	sub	x3, x3, x4
   1ada4:	cmp	x3, #0x1e
   1ada8:	ccmp	x2, #0xe, #0x0, hi  // hi = pmore
   1adac:	b.ls	1b3e0 <__sanitizer_set_report_fd@@Base+0x3620>  // b.plast
   1adb0:	and	x3, x5, #0xfffffffffffffff0
   1adb4:	mov	x2, #0x0                   	// #0
   1adb8:	ldr	q0, [x1, x2]
   1adbc:	str	q0, [x4, x2]
   1adc0:	add	x2, x2, #0x10
   1adc4:	cmp	x2, x3
   1adc8:	b.ne	1adb8 <__sanitizer_set_report_fd@@Base+0x2ff8>  // b.any
   1adcc:	tst	x5, #0xf
   1add0:	and	x2, x5, #0xfffffffffffffff0
   1add4:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1add8:	ldrb	w6, [x1, x2]
   1addc:	add	x3, x2, #0x1
   1ade0:	strb	w6, [x4, x2]
   1ade4:	cmp	x5, x3
   1ade8:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1adec:	ldrb	w7, [x1, x3]
   1adf0:	add	x6, x2, #0x2
   1adf4:	strb	w7, [x4, x3]
   1adf8:	cmp	x5, x6
   1adfc:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1ae00:	ldrb	w7, [x1, x6]
   1ae04:	add	x3, x2, #0x3
   1ae08:	strb	w7, [x4, x6]
   1ae0c:	cmp	x5, x3
   1ae10:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1ae14:	ldrb	w7, [x1, x3]
   1ae18:	add	x6, x2, #0x4
   1ae1c:	strb	w7, [x4, x3]
   1ae20:	cmp	x5, x6
   1ae24:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1ae28:	ldrb	w7, [x1, x6]
   1ae2c:	add	x3, x2, #0x5
   1ae30:	strb	w7, [x4, x6]
   1ae34:	cmp	x5, x3
   1ae38:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1ae3c:	ldrb	w7, [x1, x3]
   1ae40:	add	x6, x2, #0x6
   1ae44:	strb	w7, [x4, x3]
   1ae48:	cmp	x5, x6
   1ae4c:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1ae50:	ldrb	w7, [x1, x6]
   1ae54:	add	x3, x2, #0x7
   1ae58:	strb	w7, [x4, x6]
   1ae5c:	cmp	x5, x3
   1ae60:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1ae64:	ldrb	w7, [x1, x3]
   1ae68:	add	x6, x2, #0x8
   1ae6c:	strb	w7, [x4, x3]
   1ae70:	cmp	x5, x6
   1ae74:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1ae78:	ldrb	w7, [x1, x6]
   1ae7c:	add	x3, x2, #0x9
   1ae80:	strb	w7, [x4, x6]
   1ae84:	cmp	x5, x3
   1ae88:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1ae8c:	ldrb	w6, [x1, x3]
   1ae90:	add	x7, x2, #0xa
   1ae94:	strb	w6, [x4, x3]
   1ae98:	cmp	x5, x7
   1ae9c:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1aea0:	ldrb	w3, [x1, x7]
   1aea4:	add	x6, x2, #0xb
   1aea8:	strb	w3, [x4, x7]
   1aeac:	cmp	x5, x6
   1aeb0:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1aeb4:	ldrb	w7, [x1, x6]
   1aeb8:	add	x3, x2, #0xc
   1aebc:	strb	w7, [x4, x6]
   1aec0:	cmp	x5, x3
   1aec4:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1aec8:	ldrb	w7, [x1, x3]
   1aecc:	add	x6, x2, #0xd
   1aed0:	strb	w7, [x4, x3]
   1aed4:	cmp	x5, x6
   1aed8:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1aedc:	ldrb	w3, [x1, x6]
   1aee0:	add	x2, x2, #0xe
   1aee4:	strb	w3, [x4, x6]
   1aee8:	cmp	x5, x2
   1aeec:	b.le	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1aef0:	ldrb	w1, [x1, x2]
   1aef4:	strb	w1, [x4, x2]
   1aef8:	strb	wzr, [x4, x5]
   1aefc:	ret
   1af00:	cmp	x1, x4
   1af04:	add	x6, x0, #0x1
   1af08:	b.ls	1b074 <__sanitizer_set_report_fd@@Base+0x32b4>  // b.plast
   1af0c:	cmp	x6, #0x0
   1af10:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1af14:	add	x2, x1, #0xf
   1af18:	sub	x2, x2, x4
   1af1c:	cmp	x2, #0x1e
   1af20:	ccmp	x0, #0xe, #0x0, hi  // hi = pmore
   1af24:	b.ls	1b3c0 <__sanitizer_set_report_fd@@Base+0x3600>  // b.plast
   1af28:	and	x3, x6, #0xfffffffffffffff0
   1af2c:	mov	x2, #0x0                   	// #0
   1af30:	ldr	q0, [x1, x2]
   1af34:	str	q0, [x4, x2]
   1af38:	add	x2, x2, #0x10
   1af3c:	cmp	x2, x3
   1af40:	b.ne	1af30 <__sanitizer_set_report_fd@@Base+0x3170>  // b.any
   1af44:	tst	x6, #0xf
   1af48:	and	x2, x6, #0xfffffffffffffff0
   1af4c:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1af50:	ldrb	w5, [x1, x2]
   1af54:	add	x3, x2, #0x1
   1af58:	strb	w5, [x4, x2]
   1af5c:	cmp	x6, x3
   1af60:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1af64:	ldrb	w7, [x1, x3]
   1af68:	add	x5, x2, #0x2
   1af6c:	strb	w7, [x4, x3]
   1af70:	cmp	x6, x5
   1af74:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1af78:	ldrb	w7, [x1, x5]
   1af7c:	add	x3, x2, #0x3
   1af80:	strb	w7, [x4, x5]
   1af84:	cmp	x6, x3
   1af88:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1af8c:	ldrb	w7, [x1, x3]
   1af90:	add	x5, x2, #0x4
   1af94:	strb	w7, [x4, x3]
   1af98:	cmp	x6, x5
   1af9c:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1afa0:	ldrb	w7, [x1, x5]
   1afa4:	add	x3, x2, #0x5
   1afa8:	strb	w7, [x4, x5]
   1afac:	cmp	x6, x3
   1afb0:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1afb4:	ldrb	w7, [x1, x3]
   1afb8:	add	x5, x2, #0x6
   1afbc:	strb	w7, [x4, x3]
   1afc0:	cmp	x6, x5
   1afc4:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1afc8:	ldrb	w7, [x1, x5]
   1afcc:	add	x3, x2, #0x7
   1afd0:	strb	w7, [x4, x5]
   1afd4:	cmp	x6, x3
   1afd8:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1afdc:	ldrb	w7, [x1, x3]
   1afe0:	add	x5, x2, #0x8
   1afe4:	strb	w7, [x4, x3]
   1afe8:	cmp	x6, x5
   1afec:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1aff0:	ldrb	w7, [x1, x5]
   1aff4:	add	x3, x2, #0x9
   1aff8:	strb	w7, [x4, x5]
   1affc:	cmp	x6, x3
   1b000:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b004:	ldrb	w7, [x1, x3]
   1b008:	add	x5, x2, #0xa
   1b00c:	strb	w7, [x4, x3]
   1b010:	cmp	x6, x5
   1b014:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b018:	ldrb	w3, [x1, x5]
   1b01c:	add	x7, x2, #0xb
   1b020:	strb	w3, [x4, x5]
   1b024:	cmp	x6, x7
   1b028:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b02c:	ldrb	w5, [x1, x7]
   1b030:	add	x3, x2, #0xc
   1b034:	strb	w5, [x4, x7]
   1b038:	cmp	x6, x3
   1b03c:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b040:	ldrb	w7, [x1, x3]
   1b044:	add	x5, x2, #0xd
   1b048:	strb	w7, [x4, x3]
   1b04c:	cmp	x6, x5
   1b050:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b054:	ldrb	w3, [x1, x5]
   1b058:	add	x2, x2, #0xe
   1b05c:	strb	w3, [x4, x5]
   1b060:	cmp	x6, x2
   1b064:	b.le	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b068:	ldrb	w1, [x1, x2]
   1b06c:	strb	w1, [x4, x2]
   1b070:	ret
   1b074:	cmp	x6, #0x0
   1b078:	ccmp	x1, x4, #0x2, gt
   1b07c:	b.cs	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.hs, b.nlast
   1b080:	sub	x3, x0, #0xf
   1b084:	add	x2, x1, x6
   1b088:	add	x7, x4, x3
   1b08c:	add	x3, x1, x3
   1b090:	cmp	x2, x7
   1b094:	add	x2, x4, x6
   1b098:	ccmp	x2, x3, #0x0, hi  // hi = pmore
   1b09c:	mov	x2, x0
   1b0a0:	ccmp	x0, #0xe, #0x0, ls  // ls = plast
   1b0a4:	b.ls	1b1f4 <__sanitizer_set_report_fd@@Base+0x3434>  // b.plast
   1b0a8:	neg	x5, x6, lsr #4
   1b0ac:	mov	x2, #0x0                   	// #0
   1b0b0:	lsl	x5, x5, #4
   1b0b4:	nop
   1b0b8:	ldr	q0, [x3, x2]
   1b0bc:	str	q0, [x7, x2]
   1b0c0:	sub	x2, x2, #0x10
   1b0c4:	cmp	x2, x5
   1b0c8:	b.ne	1b0b8 <__sanitizer_set_report_fd@@Base+0x32f8>  // b.any
   1b0cc:	and	x2, x6, #0xfffffffffffffff0
   1b0d0:	cmp	x6, x2
   1b0d4:	sub	x2, x0, x2
   1b0d8:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b0dc:	ldrb	w5, [x1, x2]
   1b0e0:	sub	x3, x2, #0x1
   1b0e4:	strb	w5, [x4, x2]
   1b0e8:	cbz	x2, 1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b0ec:	ldrb	w5, [x1, x3]
   1b0f0:	cmp	x2, #0x1
   1b0f4:	strb	w5, [x4, x3]
   1b0f8:	sub	x3, x2, #0x2
   1b0fc:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b100:	ldrb	w5, [x1, x3]
   1b104:	cmp	x2, #0x2
   1b108:	strb	w5, [x4, x3]
   1b10c:	sub	x3, x2, #0x3
   1b110:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b114:	ldrb	w5, [x1, x3]
   1b118:	cmp	x2, #0x3
   1b11c:	strb	w5, [x4, x3]
   1b120:	sub	x3, x2, #0x4
   1b124:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b128:	ldrb	w5, [x1, x3]
   1b12c:	cmp	x2, #0x4
   1b130:	strb	w5, [x4, x3]
   1b134:	sub	x3, x2, #0x5
   1b138:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b13c:	ldrb	w5, [x1, x3]
   1b140:	cmp	x2, #0x5
   1b144:	strb	w5, [x4, x3]
   1b148:	sub	x3, x2, #0x6
   1b14c:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b150:	ldrb	w5, [x1, x3]
   1b154:	cmp	x2, #0x6
   1b158:	strb	w5, [x4, x3]
   1b15c:	sub	x3, x2, #0x7
   1b160:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b164:	ldrb	w5, [x1, x3]
   1b168:	cmp	x2, #0x7
   1b16c:	strb	w5, [x4, x3]
   1b170:	sub	x3, x2, #0x8
   1b174:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b178:	ldrb	w5, [x1, x3]
   1b17c:	cmp	x2, #0x8
   1b180:	strb	w5, [x4, x3]
   1b184:	sub	x3, x2, #0x9
   1b188:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b18c:	ldrb	w5, [x1, x3]
   1b190:	cmp	x2, #0x9
   1b194:	strb	w5, [x4, x3]
   1b198:	sub	x3, x2, #0xa
   1b19c:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b1a0:	ldrb	w5, [x1, x3]
   1b1a4:	cmp	x2, #0xa
   1b1a8:	strb	w5, [x4, x3]
   1b1ac:	sub	x3, x2, #0xb
   1b1b0:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b1b4:	ldrb	w5, [x1, x3]
   1b1b8:	cmp	x2, #0xb
   1b1bc:	strb	w5, [x4, x3]
   1b1c0:	sub	x3, x2, #0xc
   1b1c4:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b1c8:	ldrb	w5, [x1, x3]
   1b1cc:	cmp	x2, #0xc
   1b1d0:	strb	w5, [x4, x3]
   1b1d4:	sub	x3, x2, #0xd
   1b1d8:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b1dc:	ldrb	w5, [x1, x3]
   1b1e0:	cmp	x2, #0xd
   1b1e4:	strb	w5, [x4, x3]
   1b1e8:	sub	x2, x2, #0xe
   1b1ec:	b.ne	1b068 <__sanitizer_set_report_fd@@Base+0x32a8>  // b.any
   1b1f0:	ret
   1b1f4:	ldrb	w3, [x1, x2]
   1b1f8:	strb	w3, [x4, x2]
   1b1fc:	sub	x2, x2, #0x1
   1b200:	cmn	x2, #0x1
   1b204:	b.eq	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b208:	ldrb	w3, [x1, x2]
   1b20c:	strb	w3, [x4, x2]
   1b210:	sub	x2, x2, #0x1
   1b214:	cmn	x2, #0x1
   1b218:	b.ne	1b1f4 <__sanitizer_set_report_fd@@Base+0x3434>  // b.any
   1b21c:	b	1ad80 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b220:	cmp	x5, #0x0
   1b224:	ccmp	x1, x4, #0x2, gt
   1b228:	b.cs	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.hs, b.nlast
   1b22c:	sub	x6, x2, #0x11
   1b230:	add	x3, x1, x5
   1b234:	add	x8, x4, x6
   1b238:	add	x6, x1, x6
   1b23c:	cmp	x3, x8
   1b240:	add	x3, x4, x5
   1b244:	sub	x2, x2, #0x2
   1b248:	ccmp	x3, x6, #0x0, hi  // hi = pmore
   1b24c:	ccmp	x2, #0xe, #0x0, ls  // ls = plast
   1b250:	b.ls	1b3a0 <__sanitizer_set_report_fd@@Base+0x35e0>  // b.plast
   1b254:	neg	x7, x5, lsr #4
   1b258:	mov	x3, #0x0                   	// #0
   1b25c:	lsl	x7, x7, #4
   1b260:	ldr	q0, [x6, x3]
   1b264:	str	q0, [x8, x3]
   1b268:	sub	x3, x3, #0x10
   1b26c:	cmp	x3, x7
   1b270:	b.ne	1b260 <__sanitizer_set_report_fd@@Base+0x34a0>  // b.any
   1b274:	and	x3, x5, #0xfffffffffffffff0
   1b278:	sub	x2, x2, x3
   1b27c:	cmp	x5, x3
   1b280:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b284:	ldrb	w6, [x1, x2]
   1b288:	sub	x3, x2, #0x1
   1b28c:	strb	w6, [x4, x2]
   1b290:	cbz	x2, 1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1b294:	ldrb	w6, [x1, x3]
   1b298:	cmp	x2, #0x1
   1b29c:	strb	w6, [x4, x3]
   1b2a0:	sub	x3, x2, #0x2
   1b2a4:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b2a8:	ldrb	w6, [x1, x3]
   1b2ac:	cmp	x2, #0x2
   1b2b0:	strb	w6, [x4, x3]
   1b2b4:	sub	x3, x2, #0x3
   1b2b8:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b2bc:	ldrb	w6, [x1, x3]
   1b2c0:	cmp	x2, #0x3
   1b2c4:	strb	w6, [x4, x3]
   1b2c8:	sub	x3, x2, #0x4
   1b2cc:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b2d0:	ldrb	w6, [x1, x3]
   1b2d4:	cmp	x2, #0x4
   1b2d8:	strb	w6, [x4, x3]
   1b2dc:	sub	x3, x2, #0x5
   1b2e0:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b2e4:	ldrb	w6, [x1, x3]
   1b2e8:	cmp	x2, #0x5
   1b2ec:	strb	w6, [x4, x3]
   1b2f0:	sub	x3, x2, #0x6
   1b2f4:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b2f8:	ldrb	w6, [x1, x3]
   1b2fc:	cmp	x2, #0x6
   1b300:	strb	w6, [x4, x3]
   1b304:	sub	x3, x2, #0x7
   1b308:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b30c:	ldrb	w6, [x1, x3]
   1b310:	cmp	x2, #0x7
   1b314:	strb	w6, [x4, x3]
   1b318:	sub	x3, x2, #0x8
   1b31c:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b320:	ldrb	w6, [x1, x3]
   1b324:	cmp	x2, #0x8
   1b328:	strb	w6, [x4, x3]
   1b32c:	sub	x3, x2, #0x9
   1b330:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b334:	ldrb	w6, [x1, x3]
   1b338:	cmp	x2, #0x9
   1b33c:	strb	w6, [x4, x3]
   1b340:	sub	x3, x2, #0xa
   1b344:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b348:	ldrb	w6, [x1, x3]
   1b34c:	cmp	x2, #0xa
   1b350:	strb	w6, [x4, x3]
   1b354:	sub	x3, x2, #0xb
   1b358:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b35c:	ldrb	w6, [x1, x3]
   1b360:	cmp	x2, #0xb
   1b364:	strb	w6, [x4, x3]
   1b368:	sub	x3, x2, #0xc
   1b36c:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b370:	ldrb	w6, [x1, x3]
   1b374:	cmp	x2, #0xc
   1b378:	strb	w6, [x4, x3]
   1b37c:	sub	x3, x2, #0xd
   1b380:	b.eq	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b384:	ldrb	w6, [x1, x3]
   1b388:	cmp	x2, #0xd
   1b38c:	strb	w6, [x4, x3]
   1b390:	sub	x2, x2, #0xe
   1b394:	b.ne	1aef0 <__sanitizer_set_report_fd@@Base+0x3130>  // b.any
   1b398:	strb	wzr, [x4, x5]
   1b39c:	b	1aefc <__sanitizer_set_report_fd@@Base+0x313c>
   1b3a0:	ldrb	w3, [x1, x2]
   1b3a4:	strb	w3, [x4, x2]
   1b3a8:	sub	x2, x2, #0x1
   1b3ac:	cmn	x2, #0x1
   1b3b0:	b.ne	1b3a0 <__sanitizer_set_report_fd@@Base+0x35e0>  // b.any
   1b3b4:	b	1aef8 <__sanitizer_set_report_fd@@Base+0x3138>
   1b3b8:	mov	x0, #0x0                   	// #0
   1b3bc:	b	1ad74 <__sanitizer_set_report_fd@@Base+0x2fb4>
   1b3c0:	mov	x2, #0x0                   	// #0
   1b3c4:	nop
   1b3c8:	ldrb	w3, [x1, x2]
   1b3cc:	strb	w3, [x4, x2]
   1b3d0:	add	x2, x2, #0x1
   1b3d4:	cmp	x6, x2
   1b3d8:	b.ne	1b3c8 <__sanitizer_set_report_fd@@Base+0x3608>  // b.any
   1b3dc:	ret
   1b3e0:	mov	x2, #0x0                   	// #0
   1b3e4:	nop
   1b3e8:	ldrb	w3, [x1, x2]
   1b3ec:	strb	w3, [x4, x2]
   1b3f0:	add	x2, x2, #0x1
   1b3f4:	cmp	x5, x2
   1b3f8:	b.ne	1b3e8 <__sanitizer_set_report_fd@@Base+0x3628>  // b.any
   1b3fc:	strb	wzr, [x4, x5]
   1b400:	b	1aefc <__sanitizer_set_report_fd@@Base+0x313c>
   1b404:	nop
   1b408:	cbz	x2, 1b454 <__sanitizer_set_report_fd@@Base+0x3694>
   1b40c:	mov	x3, #0x0                   	// #0
   1b410:	b	1b424 <__sanitizer_set_report_fd@@Base+0x3664>
   1b414:	strb	w5, [x0, x3]
   1b418:	add	x3, x3, #0x1
   1b41c:	cmp	x2, x3
   1b420:	b.eq	1b454 <__sanitizer_set_report_fd@@Base+0x3694>  // b.none
   1b424:	ldrb	w5, [x1, x3]
   1b428:	add	x4, x0, x3
   1b42c:	cbnz	w5, 1b414 <__sanitizer_set_report_fd@@Base+0x3654>
   1b430:	sub	x2, x2, x3
   1b434:	orr	x3, x2, x4
   1b438:	ands	x3, x3, #0xf
   1b43c:	b.eq	1b458 <__sanitizer_set_report_fd@@Base+0x3698>  // b.none
   1b440:	cbz	x2, 1b454 <__sanitizer_set_report_fd@@Base+0x3694>
   1b444:	add	x2, x4, x2
   1b448:	strb	wzr, [x4], #1
   1b44c:	cmp	x4, x2
   1b450:	b.ne	1b448 <__sanitizer_set_report_fd@@Base+0x3688>  // b.any
   1b454:	ret
   1b458:	and	x2, x2, #0xfffffffffffffff8
   1b45c:	add	x1, x4, x2
   1b460:	cmp	x1, x4
   1b464:	b.ls	1b454 <__sanitizer_set_report_fd@@Base+0x3694>  // b.plast
   1b468:	movi	v0.4s, #0x0
   1b46c:	mvn	x2, x4
   1b470:	add	x1, x1, x2
   1b474:	lsr	x1, x1, #4
   1b478:	add	x1, x1, #0x1
   1b47c:	nop
   1b480:	lsl	x2, x3, #4
   1b484:	add	x3, x3, #0x1
   1b488:	cmp	x3, x1
   1b48c:	str	q0, [x4, x2]
   1b490:	b.cc	1b480 <__sanitizer_set_report_fd@@Base+0x36c0>  // b.lo, b.ul, b.last
   1b494:	ret
   1b498:	mov	x3, x0
   1b49c:	mov	x0, #0x0                   	// #0
   1b4a0:	cbnz	x1, 1b4b4 <__sanitizer_set_report_fd@@Base+0x36f4>
   1b4a4:	b	1b4bc <__sanitizer_set_report_fd@@Base+0x36fc>
   1b4a8:	add	x0, x0, #0x1
   1b4ac:	cmp	x1, x0
   1b4b0:	b.eq	1b4bc <__sanitizer_set_report_fd@@Base+0x36fc>  // b.none
   1b4b4:	ldrb	w2, [x3, x0]
   1b4b8:	cbnz	w2, 1b4a8 <__sanitizer_set_report_fd@@Base+0x36e8>
   1b4bc:	ret
   1b4c0:	mov	x8, x0
   1b4c4:	ldrb	w0, [x0]
   1b4c8:	mov	x2, #0x0                   	// #0
   1b4cc:	cbz	w0, 1b4dc <__sanitizer_set_report_fd@@Base+0x371c>
   1b4d0:	add	x2, x2, #0x1
   1b4d4:	ldrb	w3, [x8, x2]
   1b4d8:	cbnz	w3, 1b4d0 <__sanitizer_set_report_fd@@Base+0x3710>
   1b4dc:	ldrb	w0, [x1]
   1b4e0:	cbz	w0, 1b548 <__sanitizer_set_report_fd@@Base+0x3788>
   1b4e4:	mov	x3, #0x0                   	// #0
   1b4e8:	mov	x4, x3
   1b4ec:	add	x3, x3, #0x1
   1b4f0:	ldrb	w5, [x1, x3]
   1b4f4:	cbnz	w5, 1b4e8 <__sanitizer_set_report_fd@@Base+0x3728>
   1b4f8:	cmp	x3, x2
   1b4fc:	b.hi	1b540 <__sanitizer_set_report_fd@@Base+0x3780>  // b.pmore
   1b500:	sub	x3, x2, x3
   1b504:	mov	x9, #0x0                   	// #0
   1b508:	add	x0, x8, x9
   1b50c:	mov	x2, #0x0                   	// #0
   1b510:	b	1b520 <__sanitizer_set_report_fd@@Base+0x3760>
   1b514:	cmp	x4, x2
   1b518:	b.eq	1b544 <__sanitizer_set_report_fd@@Base+0x3784>  // b.none
   1b51c:	mov	x2, x7
   1b520:	ldrb	w6, [x0, x2]
   1b524:	add	x7, x2, #0x1
   1b528:	ldrb	w5, [x1, x2]
   1b52c:	cmp	w6, w5
   1b530:	b.eq	1b514 <__sanitizer_set_report_fd@@Base+0x3754>  // b.none
   1b534:	add	x9, x9, #0x1
   1b538:	cmp	x3, x9
   1b53c:	b.cs	1b508 <__sanitizer_set_report_fd@@Base+0x3748>  // b.hs, b.nlast
   1b540:	mov	x0, #0x0                   	// #0
   1b544:	ret
   1b548:	mov	x0, x8
   1b54c:	ret
   1b550:	cmp	w2, #0xa
   1b554:	b.ne	1b648 <__sanitizer_set_report_fd@@Base+0x3888>  // b.any
   1b558:	ldrb	w2, [x0]
   1b55c:	cmp	w2, #0x20
   1b560:	b.eq	1b608 <__sanitizer_set_report_fd@@Base+0x3848>  // b.none
   1b564:	sub	w3, w2, #0x9
   1b568:	and	w3, w3, #0xff
   1b56c:	cmp	w3, #0x4
   1b570:	b.ls	1b608 <__sanitizer_set_report_fd@@Base+0x3848>  // b.plast
   1b574:	cmp	w2, #0x2b
   1b578:	b.eq	1b634 <__sanitizer_set_report_fd@@Base+0x3874>  // b.none
   1b57c:	cmp	w2, #0x2d
   1b580:	b.eq	1b610 <__sanitizer_set_report_fd@@Base+0x3850>  // b.none
   1b584:	mov	w4, w2
   1b588:	mov	x5, x0
   1b58c:	mov	w8, #0x1                   	// #1
   1b590:	sub	w2, w2, #0x30
   1b594:	cmp	w2, #0x9
   1b598:	b.hi	1b66c <__sanitizer_set_report_fd@@Base+0x38ac>  // b.pmore
   1b59c:	mov	x7, #0x9999999999999999    	// #-7378697629483820647
   1b5a0:	mov	x3, #0x0                   	// #0
   1b5a4:	movk	x7, #0x1999, lsl #48
   1b5a8:	mov	x6, #0xffffffffffffffff    	// #-1
   1b5ac:	nop
   1b5b0:	sub	w0, w4, #0x30
   1b5b4:	add	x2, x3, x3, lsl #2
   1b5b8:	cmp	x3, x7
   1b5bc:	ldrb	w4, [x5, #1]!
   1b5c0:	sxtw	x0, w0
   1b5c4:	lsl	x2, x2, #1
   1b5c8:	csel	x2, x2, x6, ls  // ls = plast
   1b5cc:	mvn	x3, x0
   1b5d0:	cmp	x3, x2
   1b5d4:	add	x0, x0, x2
   1b5d8:	sub	w2, w4, #0x30
   1b5dc:	csel	x3, x0, x6, cs  // cs = hs, nlast
   1b5e0:	cmp	w2, #0x9
   1b5e4:	b.ls	1b5b0 <__sanitizer_set_report_fd@@Base+0x37f0>  // b.plast
   1b5e8:	cbz	x1, 1b5f0 <__sanitizer_set_report_fd@@Base+0x3830>
   1b5ec:	str	x5, [x1]
   1b5f0:	cmp	w8, #0x1
   1b5f4:	b.ne	1b624 <__sanitizer_set_report_fd@@Base+0x3864>  // b.any
   1b5f8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   1b5fc:	cmp	x3, x0
   1b600:	csel	x0, x3, x0, ls  // ls = plast
   1b604:	ret
   1b608:	add	x0, x0, #0x1
   1b60c:	b	1b558 <__sanitizer_set_report_fd@@Base+0x3798>
   1b610:	ldrb	w2, [x0, #1]
   1b614:	add	x5, x0, #0x1
   1b618:	mov	w8, #0xffffffff            	// #-1
   1b61c:	mov	w4, w2
   1b620:	b	1b590 <__sanitizer_set_report_fd@@Base+0x37d0>
   1b624:	cmp	x3, #0x0
   1b628:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1b62c:	csneg	x0, x0, x3, lt  // lt = tstop
   1b630:	ret
   1b634:	ldrb	w2, [x0, #1]
   1b638:	add	x5, x0, #0x1
   1b63c:	mov	w8, #0x1                   	// #1
   1b640:	mov	w4, w2
   1b644:	b	1b590 <__sanitizer_set_report_fd@@Base+0x37d0>
   1b648:	str	x30, [sp, #-16]!
   1b64c:	sxtw	x3, w2
   1b650:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1b654:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1b658:	add	x0, x0, #0x380
   1b65c:	add	x2, x2, #0x368
   1b660:	mov	x4, #0xa                   	// #10
   1b664:	mov	w1, #0xe7                  	// #231
   1b668:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1b66c:	mov	x5, x0
   1b670:	mov	x3, #0x0                   	// #0
   1b674:	cbnz	x1, 1b5ec <__sanitizer_set_report_fd@@Base+0x382c>
   1b678:	mov	x0, #0x0                   	// #0
   1b67c:	ret
   1b680:	mov	w2, #0xa                   	// #10
   1b684:	mov	x1, #0x0                   	// #0
   1b688:	b	1b550 <__sanitizer_set_report_fd@@Base+0x3790>
   1b68c:	nop
   1b690:	mov	x4, #0x10000000000         	// #1099511627776
   1b694:	cmp	x1, x4
   1b698:	b.hi	1b9a8 <__sanitizer_set_report_fd@@Base+0x3be8>  // b.pmore
   1b69c:	add	x4, x0, x1
   1b6a0:	add	x2, x0, #0x7
   1b6a4:	and	x2, x2, #0xfffffffffffffff8
   1b6a8:	cmp	x0, x4
   1b6ac:	and	x6, x4, #0xfffffffffffffff8
   1b6b0:	ccmp	x0, x2, #0x2, cc  // cc = lo, ul, last
   1b6b4:	mov	x8, x2
   1b6b8:	mov	x7, x6
   1b6bc:	mov	x1, x0
   1b6c0:	mov	x3, #0x0                   	// #0
   1b6c4:	b.cs	1b6dc <__sanitizer_set_report_fd@@Base+0x391c>  // b.hs, b.nlast
   1b6c8:	ldrb	w5, [x1], #1
   1b6cc:	cmp	x2, x1
   1b6d0:	orr	x3, x3, x5
   1b6d4:	ccmp	x4, x1, #0x0, hi  // hi = pmore
   1b6d8:	b.hi	1b6c8 <__sanitizer_set_report_fd@@Base+0x3908>  // b.pmore
   1b6dc:	cmp	x2, x6
   1b6e0:	b.cs	1b7a4 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.hs, b.nlast
   1b6e4:	sub	x1, x6, x2
   1b6e8:	add	x9, x2, #0x1
   1b6ec:	sub	x1, x1, #0x1
   1b6f0:	cmp	x6, x9
   1b6f4:	mov	x10, #0x1                   	// #1
   1b6f8:	lsr	x5, x1, #3
   1b6fc:	csinc	x5, x10, x5, cc  // cc = lo, ul, last
   1b700:	cmp	x1, #0x27
   1b704:	ccmp	x6, x9, #0x0, hi  // hi = pmore
   1b708:	b.cc	1b74c <__sanitizer_set_report_fd@@Base+0x398c>  // b.lo, b.ul, b.last
   1b70c:	movi	v0.4s, #0x0
   1b710:	lsr	x1, x5, #1
   1b714:	add	x1, x2, x1, lsl #4
   1b718:	ldr	q1, [x2], #16
   1b71c:	orr	v0.16b, v0.16b, v1.16b
   1b720:	cmp	x2, x1
   1b724:	b.ne	1b718 <__sanitizer_set_report_fd@@Base+0x3958>  // b.any
   1b728:	movi	v1.4s, #0x0
   1b72c:	and	x1, x5, #0xfffffffffffffffe
   1b730:	cmp	x5, x1
   1b734:	add	x8, x8, x1, lsl #3
   1b738:	ext	v1.16b, v0.16b, v1.16b, #8
   1b73c:	orr	v0.16b, v0.16b, v1.16b
   1b740:	mov	x1, v0.d[0]
   1b744:	orr	x3, x3, x1
   1b748:	b.eq	1b7a4 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.none
   1b74c:	mov	x1, x8
   1b750:	ldr	x2, [x1], #8
   1b754:	orr	x3, x3, x2
   1b758:	cmp	x6, x1
   1b75c:	b.ls	1b7a4 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.plast
   1b760:	ldr	x1, [x8, #8]
   1b764:	add	x2, x8, #0x10
   1b768:	cmp	x6, x2
   1b76c:	orr	x3, x3, x1
   1b770:	b.ls	1b7a4 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.plast
   1b774:	ldr	x1, [x8, #16]
   1b778:	add	x2, x8, #0x18
   1b77c:	cmp	x6, x2
   1b780:	orr	x3, x3, x1
   1b784:	b.ls	1b7a4 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.plast
   1b788:	ldr	x1, [x8, #24]
   1b78c:	add	x2, x8, #0x20
   1b790:	cmp	x6, x2
   1b794:	orr	x3, x3, x1
   1b798:	b.ls	1b7a4 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.plast
   1b79c:	ldr	x1, [x8, #32]
   1b7a0:	orr	x3, x3, x1
   1b7a4:	cmp	x0, x6
   1b7a8:	b.hi	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.pmore
   1b7ac:	cmp	x4, x6
   1b7b0:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b7b4:	add	x1, x6, #0x1
   1b7b8:	sub	x0, x4, #0x1
   1b7bc:	cmp	x4, x1
   1b7c0:	sub	x2, x4, x6
   1b7c4:	sub	x0, x0, x6
   1b7c8:	csinc	x2, x2, xzr, cs  // cs = hs, nlast
   1b7cc:	cmp	x0, #0xe
   1b7d0:	ccmp	x4, x1, #0x0, hi  // hi = pmore
   1b7d4:	b.cc	1b87c <__sanitizer_set_report_fd@@Base+0x3abc>  // b.lo, b.ul, b.last
   1b7d8:	sub	x1, x2, #0x10
   1b7dc:	mov	x0, #0x0                   	// #0
   1b7e0:	movi	v5.4s, #0x0
   1b7e4:	lsr	x1, x1, #4
   1b7e8:	add	x1, x1, #0x1
   1b7ec:	nop
   1b7f0:	ldr	q2, [x6], #16
   1b7f4:	add	x0, x0, #0x1
   1b7f8:	cmp	x1, x0
   1b7fc:	uxtl	v3.8h, v2.8b
   1b800:	uxtl2	v2.8h, v2.16b
   1b804:	uxtl	v0.4s, v3.4h
   1b808:	uxtl2	v3.4s, v3.8h
   1b80c:	uxtl	v4.4s, v2.4h
   1b810:	uxtl2	v2.4s, v2.8h
   1b814:	uxtl	v1.2d, v0.2s
   1b818:	uxtl2	v0.2d, v0.4s
   1b81c:	uxtl	v16.2d, v3.2s
   1b820:	uxtl2	v3.2d, v3.4s
   1b824:	uxtl	v7.2d, v4.2s
   1b828:	orr	v1.16b, v1.16b, v0.16b
   1b82c:	uxtl2	v4.2d, v4.4s
   1b830:	uxtl	v6.2d, v2.2s
   1b834:	uxtl2	v2.2d, v2.4s
   1b838:	orr	v0.16b, v1.16b, v16.16b
   1b83c:	orr	v0.16b, v0.16b, v3.16b
   1b840:	orr	v0.16b, v0.16b, v7.16b
   1b844:	orr	v0.16b, v0.16b, v4.16b
   1b848:	orr	v0.16b, v0.16b, v6.16b
   1b84c:	orr	v0.16b, v0.16b, v2.16b
   1b850:	orr	v5.16b, v5.16b, v0.16b
   1b854:	b.hi	1b7f0 <__sanitizer_set_report_fd@@Base+0x3a30>  // b.pmore
   1b858:	movi	v0.4s, #0x0
   1b85c:	lsl	x1, x1, #4
   1b860:	add	x7, x7, x1
   1b864:	cmp	x2, x1
   1b868:	ext	v0.16b, v5.16b, v0.16b, #8
   1b86c:	orr	v5.16b, v5.16b, v0.16b
   1b870:	mov	x0, v5.d[0]
   1b874:	orr	x3, x3, x0
   1b878:	b.eq	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.none
   1b87c:	mov	x0, x7
   1b880:	ldrb	w1, [x0], #1
   1b884:	orr	x3, x3, x1
   1b888:	cmp	x4, x0
   1b88c:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b890:	ldrb	w0, [x7, #1]
   1b894:	add	x1, x7, #0x2
   1b898:	cmp	x4, x1
   1b89c:	orr	x3, x3, x0
   1b8a0:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b8a4:	ldrb	w0, [x7, #2]
   1b8a8:	add	x1, x7, #0x3
   1b8ac:	cmp	x4, x1
   1b8b0:	orr	x3, x3, x0
   1b8b4:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b8b8:	ldrb	w0, [x7, #3]
   1b8bc:	add	x1, x7, #0x4
   1b8c0:	cmp	x4, x1
   1b8c4:	orr	x3, x3, x0
   1b8c8:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b8cc:	ldrb	w0, [x7, #4]
   1b8d0:	add	x1, x7, #0x5
   1b8d4:	cmp	x4, x1
   1b8d8:	orr	x3, x3, x0
   1b8dc:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b8e0:	ldrb	w0, [x7, #5]
   1b8e4:	add	x1, x7, #0x6
   1b8e8:	cmp	x4, x1
   1b8ec:	orr	x3, x3, x0
   1b8f0:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b8f4:	ldrb	w0, [x7, #6]
   1b8f8:	add	x1, x7, #0x7
   1b8fc:	cmp	x4, x1
   1b900:	orr	x3, x3, x0
   1b904:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b908:	ldrb	w0, [x7, #7]
   1b90c:	add	x1, x7, #0x8
   1b910:	cmp	x4, x1
   1b914:	orr	x3, x3, x0
   1b918:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b91c:	ldrb	w0, [x7, #8]
   1b920:	add	x1, x7, #0x9
   1b924:	cmp	x4, x1
   1b928:	orr	x3, x3, x0
   1b92c:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b930:	ldrb	w0, [x7, #9]
   1b934:	add	x1, x7, #0xa
   1b938:	cmp	x4, x1
   1b93c:	orr	x3, x3, x0
   1b940:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b944:	ldrb	w0, [x7, #10]
   1b948:	add	x1, x7, #0xb
   1b94c:	cmp	x4, x1
   1b950:	orr	x3, x3, x0
   1b954:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b958:	ldrb	w0, [x7, #11]
   1b95c:	add	x1, x7, #0xc
   1b960:	cmp	x4, x1
   1b964:	orr	x3, x3, x0
   1b968:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b96c:	ldrb	w0, [x7, #12]
   1b970:	add	x1, x7, #0xd
   1b974:	cmp	x4, x1
   1b978:	orr	x3, x3, x0
   1b97c:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b980:	ldrb	w0, [x7, #13]
   1b984:	add	x1, x7, #0xe
   1b988:	cmp	x4, x1
   1b98c:	orr	x3, x3, x0
   1b990:	b.ls	1b99c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b994:	ldrb	w0, [x7, #14]
   1b998:	orr	x3, x3, x0
   1b99c:	cmp	x3, #0x0
   1b9a0:	cset	w0, eq  // eq = none
   1b9a4:	ret
   1b9a8:	str	x30, [sp, #-16]!
   1b9ac:	mov	x3, x1
   1b9b0:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1b9b4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1b9b8:	add	x2, x2, #0x3d8
   1b9bc:	add	x0, x0, #0x380
   1b9c0:	mov	w1, #0x106                 	// #262
   1b9c4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1b9c8:	mov	x1, #0x4810                	// #18448
   1b9cc:	add	x0, x0, x1
   1b9d0:	b	1c5c0 <__sanitizer_set_report_fd@@Base+0x4800>
   1b9d4:	nop
   1b9d8:	stp	x19, x20, [sp, #-48]!
   1b9dc:	mov	x20, x0
   1b9e0:	stp	x21, x22, [sp, #16]
   1b9e4:	mov	x21, x1
   1b9e8:	mov	x1, #0x4810                	// #18448
   1b9ec:	add	x22, x0, x1
   1b9f0:	str	x30, [sp, #32]
   1b9f4:	mov	x0, x22
   1b9f8:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   1b9fc:	ldr	x19, [x20, #18536]
   1ba00:	cmp	x19, #0x3ff
   1ba04:	b.hi	1ba48 <__sanitizer_set_report_fd@@Base+0x3c88>  // b.pmore
   1ba08:	add	x0, x19, #0x1
   1ba0c:	str	x0, [x20, #18536]
   1ba10:	mov	x0, x21
   1ba14:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   1ba18:	mov	x3, x0
   1ba1c:	add	x1, x20, x19, lsl #5
   1ba20:	mov	x0, x22
   1ba24:	add	x2, x1, #0x4, lsl #12
   1ba28:	ldp	x21, x22, [sp, #16]
   1ba2c:	ldr	x30, [sp, #32]
   1ba30:	str	x3, [x1, #18544]
   1ba34:	str	xzr, [x1, #18552]
   1ba38:	str	xzr, [x1, #18560]
   1ba3c:	strb	wzr, [x2, #2184]
   1ba40:	ldp	x19, x20, [sp], #48
   1ba44:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   1ba48:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1ba4c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1ba50:	add	x0, x0, #0x3f8
   1ba54:	mov	x2, #0x400                 	// #1024
   1ba58:	ldr	x1, [x1, #4024]
   1ba5c:	ldr	x1, [x1]
   1ba60:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1ba64:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1ba68:	stp	x19, x20, [sp, #-160]!
   1ba6c:	mov	x3, #0x4810                	// #18448
   1ba70:	mov	x20, x0
   1ba74:	stp	x21, x22, [sp, #16]
   1ba78:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1ba7c:	add	x0, x0, x3
   1ba80:	mov	x19, x1
   1ba84:	stp	x23, x24, [sp, #32]
   1ba88:	stp	x25, x26, [sp, #48]
   1ba8c:	str	x30, [sp, #80]
   1ba90:	str	x0, [sp, #112]
   1ba94:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   1ba98:	ldr	x22, [x21, #4016]
   1ba9c:	ldr	x0, [x22]
   1baa0:	cbz	x0, 1bd4c <__sanitizer_set_report_fd@@Base+0x3f8c>
   1baa4:	sub	x1, x0, #0x1
   1baa8:	tst	x1, x0
   1baac:	b.ne	1bdec <__sanitizer_set_report_fd@@Base+0x402c>  // b.any
   1bab0:	add	x25, x0, #0xfff
   1bab4:	neg	x0, x0
   1bab8:	and	x23, x25, x0
   1babc:	mov	w2, #0x0                   	// #0
   1bac0:	mov	x0, x23
   1bac4:	adrp	x22, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1bac8:	add	x1, x22, #0xb50
   1bacc:	str	x23, [sp, #120]
   1bad0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   1bad4:	mov	x24, x0
   1bad8:	mov	x2, #0x0                   	// #0
   1badc:	mov	x1, #0x0                   	// #0
   1bae0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   1bae4:	mov	x1, #0x0                   	// #0
   1bae8:	mov	x0, #0x0                   	// #0
   1baec:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1baf0:	cmp	x23, #0xfff
   1baf4:	b.ls	1bd58 <__sanitizer_set_report_fd@@Base+0x3f98>  // b.plast
   1baf8:	mov	x0, x24
   1bafc:	mov	x2, #0x1000                	// #4096
   1bb00:	mov	w1, #0x0                   	// #0
   1bb04:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1bb08:	strb	wzr, [x24]
   1bb0c:	cbz	x19, 1bb30 <__sanitizer_set_report_fd@@Base+0x3d70>
   1bb10:	mov	x1, x24
   1bb14:	mov	x0, x19
   1bb18:	mov	x2, #0xfff                 	// #4095
   1bb1c:	bl	1c278 <__sanitizer_set_report_fd@@Base+0x44b8>
   1bb20:	cbz	x0, 1bb30 <__sanitizer_set_report_fd@@Base+0x3d70>
   1bb24:	ldrb	w0, [x24]
   1bb28:	cbnz	w0, 1bdb4 <__sanitizer_set_report_fd@@Base+0x3ff4>
   1bb2c:	nop
   1bb30:	add	x0, sp, #0x80
   1bb34:	strb	wzr, [sp, #152]
   1bb38:	bl	23e98 <__sanitizer_sandbox_on_notify@@Base+0x910>
   1bb3c:	ldr	x0, [x20, #18536]
   1bb40:	cbz	x0, 1bc54 <__sanitizer_set_report_fd@@Base+0x3e94>
   1bb44:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1bb48:	mov	x0, #0x4870                	// #18544
   1bb4c:	adrp	x26, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1bb50:	add	x19, x20, x0
   1bb54:	ldr	x22, [x22, #3816]
   1bb58:	add	x0, x26, #0x480
   1bb5c:	stp	x27, x28, [sp, #64]
   1bb60:	stp	x0, xzr, [sp, #96]
   1bb64:	ldr	x21, [sp, #144]
   1bb68:	ldr	x5, [sp, #128]
   1bb6c:	add	x21, x21, x21, lsl #3
   1bb70:	add	x21, x5, x21, lsl #3
   1bb74:	cmp	x5, x21
   1bb78:	b.eq	1be3c <__sanitizer_set_report_fd@@Base+0x407c>  // b.none
   1bb7c:	mov	x28, x5
   1bb80:	mov	w27, #0x0                   	// #0
   1bb84:	mov	w23, #0x1                   	// #1
   1bb88:	ldr	x26, [x28, #56]
   1bb8c:	cbz	x26, 1bc14 <__sanitizer_set_report_fd@@Base+0x3e54>
   1bb90:	ldrb	w25, [x26, #24]
   1bb94:	cbz	w25, 1bcf8 <__sanitizer_set_report_fd@@Base+0x3f38>
   1bb98:	ldr	x0, [x19]
   1bb9c:	ldr	x1, [x28]
   1bba0:	bl	14c38 <_ZdaPvRKSt9nothrow_t@@Base+0x2f78>
   1bba4:	tst	w0, #0xff
   1bba8:	b.ne	1bbc0 <__sanitizer_set_report_fd@@Base+0x3e00>  // b.any
   1bbac:	ldr	x0, [x19, #16]
   1bbb0:	cbz	x0, 1bcf8 <__sanitizer_set_report_fd@@Base+0x3f38>
   1bbb4:	ldr	x1, [x28]
   1bbb8:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   1bbbc:	cbnz	w0, 1bcf8 <__sanitizer_set_report_fd@@Base+0x3f38>
   1bbc0:	cbnz	w27, 1bf50 <__sanitizer_set_report_fd@@Base+0x4190>
   1bbc4:	ldrb	w27, [x19, #24]
   1bbc8:	cbnz	w27, 1bcf8 <__sanitizer_set_report_fd@@Base+0x3f38>
   1bbcc:	ldr	w0, [x22]
   1bbd0:	cbnz	w0, 1bd04 <__sanitizer_set_report_fd@@Base+0x3f44>
   1bbd4:	strb	w23, [x19, #24]
   1bbd8:	ldr	x0, [x28]
   1bbdc:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   1bbe0:	ldr	x3, [x20]
   1bbe4:	str	x0, [x19, #8]
   1bbe8:	cmp	x3, #0x7f
   1bbec:	b.hi	1bd30 <__sanitizer_set_report_fd@@Base+0x3f70>  // b.pmore
   1bbf0:	add	x0, x20, x3, lsl #4
   1bbf4:	add	x3, x3, #0x1
   1bbf8:	ldr	x1, [x26, #8]
   1bbfc:	str	x1, [x0, #8]
   1bc00:	ldr	x1, [x26, #16]
   1bc04:	str	x1, [x0, #16]
   1bc08:	dmb	ish
   1bc0c:	str	x3, [x20]
   1bc10:	mov	w27, w25
   1bc14:	add	x28, x28, #0x48
   1bc18:	cmp	x21, x28
   1bc1c:	b.ne	1bb88 <__sanitizer_set_report_fd@@Base+0x3dc8>  // b.any
   1bc20:	ldrb	w0, [x19, #24]
   1bc24:	eor	w0, w0, #0x1
   1bc28:	orr	w2, w27, w0
   1bc2c:	tst	w2, #0xff
   1bc30:	b.eq	1bf80 <__sanitizer_set_report_fd@@Base+0x41c0>  // b.none
   1bc34:	ldr	x1, [sp, #104]
   1bc38:	add	x19, x19, #0x20
   1bc3c:	ldr	x0, [x20, #18536]
   1bc40:	add	x1, x1, #0x1
   1bc44:	str	x1, [sp, #104]
   1bc48:	cmp	x0, x1
   1bc4c:	b.hi	1bb64 <__sanitizer_set_report_fd@@Base+0x3da4>  // b.pmore
   1bc50:	ldp	x27, x28, [sp, #64]
   1bc54:	add	x1, x20, #0xc, lsl #12
   1bc58:	ldr	x0, [sp, #144]
   1bc5c:	ldrb	w1, [x1, #2160]
   1bc60:	ldr	x19, [sp, #128]
   1bc64:	add	x0, x0, x0, lsl #3
   1bc68:	add	x22, x19, x0, lsl #3
   1bc6c:	cbz	w1, 1bcb0 <__sanitizer_set_report_fd@@Base+0x3ef0>
   1bc70:	mov	x21, x19
   1bc74:	cmp	x19, x22
   1bc78:	b.eq	1bccc <__sanitizer_set_report_fd@@Base+0x3f0c>  // b.none
   1bc7c:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1bc80:	adrp	x26, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1bc84:	add	x26, x26, #0x5c0
   1bc88:	ldr	x23, [x23, #3816]
   1bc8c:	ldrb	w0, [x21, #44]
   1bc90:	cbnz	w0, 1be44 <__sanitizer_set_report_fd@@Base+0x4084>
   1bc94:	add	x21, x21, #0x48
   1bc98:	cmp	x22, x21
   1bc9c:	b.ne	1bc8c <__sanitizer_set_report_fd@@Base+0x3ecc>  // b.any
   1bca0:	ldr	x0, [sp, #144]
   1bca4:	ldr	x19, [sp, #128]
   1bca8:	add	x0, x0, x0, lsl #3
   1bcac:	add	x22, x19, x0, lsl #3
   1bcb0:	cmp	x19, x22
   1bcb4:	b.eq	1bccc <__sanitizer_set_report_fd@@Base+0x3f0c>  // b.none
   1bcb8:	mov	x0, x19
   1bcbc:	add	x19, x19, #0x48
   1bcc0:	bl	14960 <_ZdaPvRKSt9nothrow_t@@Base+0x2ca0>
   1bcc4:	cmp	x22, x19
   1bcc8:	b.ne	1bcb8 <__sanitizer_set_report_fd@@Base+0x3ef8>  // b.any
   1bccc:	ldr	x1, [sp, #120]
   1bcd0:	mov	x0, x24
   1bcd4:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1bcd8:	ldr	x0, [sp, #112]
   1bcdc:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   1bce0:	ldp	x21, x22, [sp, #16]
   1bce4:	ldp	x23, x24, [sp, #32]
   1bce8:	ldp	x25, x26, [sp, #48]
   1bcec:	ldr	x30, [sp, #80]
   1bcf0:	ldp	x19, x20, [sp], #160
   1bcf4:	ret
   1bcf8:	ldr	x26, [x26]
   1bcfc:	cbnz	x26, 1bb90 <__sanitizer_set_report_fd@@Base+0x3dd0>
   1bd00:	b	1bc14 <__sanitizer_set_report_fd@@Base+0x3e54>
   1bd04:	ldr	x1, [x19]
   1bd08:	ldr	x2, [x28]
   1bd0c:	ldr	x0, [sp, #96]
   1bd10:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1bd14:	strb	w23, [x19, #24]
   1bd18:	ldr	x0, [x28]
   1bd1c:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   1bd20:	ldr	x3, [x20]
   1bd24:	str	x0, [x19, #8]
   1bd28:	cmp	x3, #0x7f
   1bd2c:	b.ls	1bbf0 <__sanitizer_set_report_fd@@Base+0x3e30>  // b.plast
   1bd30:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1bd34:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1bd38:	add	x2, x2, #0x4c0
   1bd3c:	add	x0, x0, #0x510
   1bd40:	mov	x4, #0x80                  	// #128
   1bd44:	mov	w1, #0x53                  	// #83
   1bd48:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1bd4c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1bd50:	str	x0, [x22]
   1bd54:	b	1baa4 <__sanitizer_set_report_fd@@Base+0x3ce4>
   1bd58:	ldr	x21, [x21, #4016]
   1bd5c:	ldr	x0, [x21]
   1bd60:	cbz	x0, 1be30 <__sanitizer_set_report_fd@@Base+0x4070>
   1bd64:	sub	x1, x0, #0x1
   1bd68:	tst	x1, x0
   1bd6c:	b.ne	1bdec <__sanitizer_set_report_fd@@Base+0x402c>  // b.any
   1bd70:	add	x21, x0, #0xfff
   1bd74:	neg	x0, x0
   1bd78:	and	x21, x21, x0
   1bd7c:	add	x1, x22, #0xb50
   1bd80:	mov	x0, x21
   1bd84:	mov	w2, #0x0                   	// #0
   1bd88:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   1bd8c:	mov	x22, x0
   1bd90:	mov	x1, x24
   1bd94:	mov	x2, #0x0                   	// #0
   1bd98:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   1bd9c:	ldr	x1, [sp, #120]
   1bda0:	mov	x0, x24
   1bda4:	mov	x24, x22
   1bda8:	str	x21, [sp, #120]
   1bdac:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1bdb0:	b	1baf8 <__sanitizer_set_report_fd@@Base+0x3d38>
   1bdb4:	ldr	x1, [x20, #18536]
   1bdb8:	cbz	x1, 1bb30 <__sanitizer_set_report_fd@@Base+0x3d70>
   1bdbc:	mov	x2, #0x4870                	// #18544
   1bdc0:	add	x21, x20, x2
   1bdc4:	mov	x22, #0x0                   	// #0
   1bdc8:	ldrb	w0, [x21, #24]
   1bdcc:	cbnz	w0, 1bdd8 <__sanitizer_set_report_fd@@Base+0x4018>
   1bdd0:	ldr	x0, [x21, #16]
   1bdd4:	cbz	x0, 1be00 <__sanitizer_set_report_fd@@Base+0x4040>
   1bdd8:	add	x22, x22, #0x1
   1bddc:	add	x21, x21, #0x20
   1bde0:	cmp	x22, x1
   1bde4:	b.cc	1bdc8 <__sanitizer_set_report_fd@@Base+0x4008>  // b.lo, b.ul, b.last
   1bde8:	b	1bb30 <__sanitizer_set_report_fd@@Base+0x3d70>
   1bdec:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1bdf0:	add	x0, x0, #0xb38
   1bdf4:	stp	x27, x28, [sp, #64]
   1bdf8:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1bdfc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1be00:	ldr	x0, [x21]
   1be04:	mov	x1, x19
   1be08:	bl	14c38 <_ZdaPvRKSt9nothrow_t@@Base+0x2f78>
   1be0c:	tst	w0, #0xff
   1be10:	b.ne	1be1c <__sanitizer_set_report_fd@@Base+0x405c>  // b.any
   1be14:	ldr	x1, [x20, #18536]
   1be18:	b	1bdd8 <__sanitizer_set_report_fd@@Base+0x4018>
   1be1c:	mov	x0, x24
   1be20:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   1be24:	str	x0, [x21, #16]
   1be28:	ldr	x1, [x20, #18536]
   1be2c:	b	1bdd8 <__sanitizer_set_report_fd@@Base+0x4018>
   1be30:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1be34:	str	x0, [x21]
   1be38:	b	1bd64 <__sanitizer_set_report_fd@@Base+0x3fa4>
   1be3c:	mov	w27, #0x0                   	// #0
   1be40:	b	1bc20 <__sanitizer_set_report_fd@@Base+0x3e60>
   1be44:	ldr	x19, [x21, #56]
   1be48:	cbz	x19, 1bc94 <__sanitizer_set_report_fd@@Base+0x3ed4>
   1be4c:	ldrb	w1, [x19, #24]
   1be50:	cbz	w1, 1befc <__sanitizer_set_report_fd@@Base+0x413c>
   1be54:	ldr	x4, [x19, #8]
   1be58:	ldr	x6, [x20, #2056]
   1be5c:	dmb	ish
   1be60:	add	x5, x20, #0x810
   1be64:	mov	x2, #0x0                   	// #0
   1be68:	mov	x1, x5
   1be6c:	cbz	x6, 1bec8 <__sanitizer_set_report_fd@@Base+0x4108>
   1be70:	ldr	x3, [x1]
   1be74:	cmp	x4, x3
   1be78:	b.cc	1bf08 <__sanitizer_set_report_fd@@Base+0x4148>  // b.lo, b.ul, b.last
   1be7c:	ldr	x3, [x1, #8]
   1be80:	cmp	x4, x3
   1be84:	b.cs	1bf08 <__sanitizer_set_report_fd@@Base+0x4148>  // b.hs, b.nlast
   1be88:	ldr	x2, [x19, #16]
   1be8c:	sub	x2, x2, #0x1
   1be90:	ldr	x0, [x20, #2056]
   1be94:	dmb	ish
   1be98:	cbz	x0, 1bec8 <__sanitizer_set_report_fd@@Base+0x4108>
   1be9c:	mov	x1, #0x0                   	// #0
   1bea0:	ldr	x3, [x5]
   1bea4:	cmp	x2, x3
   1bea8:	b.cc	1beb8 <__sanitizer_set_report_fd@@Base+0x40f8>  // b.lo, b.ul, b.last
   1beac:	ldr	x3, [x5, #8]
   1beb0:	cmp	x2, x3
   1beb4:	b.cc	1befc <__sanitizer_set_report_fd@@Base+0x413c>  // b.lo, b.ul, b.last
   1beb8:	add	x1, x1, #0x1
   1bebc:	add	x5, x5, #0x10
   1bec0:	cmp	x1, x0
   1bec4:	b.ne	1bea0 <__sanitizer_set_report_fd@@Base+0x40e0>  // b.any
   1bec8:	ldr	w0, [x23]
   1becc:	cbnz	w0, 1bf1c <__sanitizer_set_report_fd@@Base+0x415c>
   1bed0:	ldr	x3, [x20, #2056]
   1bed4:	cmp	x3, #0x3ff
   1bed8:	b.hi	1bf30 <__sanitizer_set_report_fd@@Base+0x4170>  // b.pmore
   1bedc:	add	x1, x20, x3, lsl #4
   1bee0:	add	x3, x3, #0x1
   1bee4:	ldr	x0, [x19, #8]
   1bee8:	str	x0, [x1, #2064]
   1beec:	ldr	x0, [x19, #16]
   1bef0:	str	x0, [x1, #2072]
   1bef4:	dmb	ish
   1bef8:	str	x3, [x20, #2056]
   1befc:	ldr	x19, [x19]
   1bf00:	cbnz	x19, 1be4c <__sanitizer_set_report_fd@@Base+0x408c>
   1bf04:	b	1bc94 <__sanitizer_set_report_fd@@Base+0x3ed4>
   1bf08:	add	x2, x2, #0x1
   1bf0c:	add	x1, x1, #0x10
   1bf10:	cmp	x2, x6
   1bf14:	b.ne	1be70 <__sanitizer_set_report_fd@@Base+0x40b0>  // b.any
   1bf18:	b	1bec8 <__sanitizer_set_report_fd@@Base+0x4108>
   1bf1c:	ldp	x1, x2, [x19, #8]
   1bf20:	mov	x0, x26
   1bf24:	ldr	x3, [x21]
   1bf28:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1bf2c:	b	1bed0 <__sanitizer_set_report_fd@@Base+0x4110>
   1bf30:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1bf34:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1bf38:	add	x2, x2, #0x5f8
   1bf3c:	add	x0, x0, #0x510
   1bf40:	mov	x4, #0x400                 	// #1024
   1bf44:	mov	w1, #0x70                  	// #112
   1bf48:	stp	x27, x28, [sp, #64]
   1bf4c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1bf50:	ldr	x0, [sp, #104]
   1bf54:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1bf58:	ldr	x4, [x28]
   1bf5c:	ldr	x1, [x1, #4024]
   1bf60:	add	x20, x20, x0, lsl #5
   1bf64:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1bf68:	add	x0, x0, #0x428
   1bf6c:	ldr	x1, [x1]
   1bf70:	ldr	x2, [x20, #18544]
   1bf74:	ldr	x3, [x20, #18552]
   1bf78:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1bf7c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1bf80:	ldr	x0, [sp, #104]
   1bf84:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1bf88:	ldr	x1, [x1, #4024]
   1bf8c:	add	x20, x20, x0, lsl #5
   1bf90:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1bf94:	add	x0, x0, #0x568
   1bf98:	ldr	x1, [x1]
   1bf9c:	ldr	x3, [x20, #18544]
   1bfa0:	ldr	x2, [x20, #18552]
   1bfa4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1bfa8:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1bfac:	nop
   1bfb0:	mov	x1, #0x0                   	// #0
   1bfb4:	b	1ba68 <__sanitizer_set_report_fd@@Base+0x3ca8>
   1bfb8:	stp	x19, x20, [sp, #-64]!
   1bfbc:	mov	x19, x1
   1bfc0:	mov	x20, x0
   1bfc4:	mov	w2, #0x0                   	// #0
   1bfc8:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1bfcc:	mov	x0, #0x3e80                	// #16000
   1bfd0:	add	x1, x1, #0x658
   1bfd4:	str	x30, [sp, #16]
   1bfd8:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   1bfdc:	str	x0, [x19]
   1bfe0:	add	x3, sp, #0x38
   1bfe4:	add	x2, sp, #0x30
   1bfe8:	add	x1, sp, #0x28
   1bfec:	mov	x0, x20
   1bff0:	mov	x5, #0x0                   	// #0
   1bff4:	mov	x4, #0x100000              	// #1048576
   1bff8:	bl	174d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   1bffc:	tst	w0, #0xff
   1c000:	b.eq	1c0a0 <__sanitizer_set_report_fd@@Base+0x42e0>  // b.none
   1c004:	ldr	x4, [x19]
   1c008:	mov	x0, #0x1                   	// #1
   1c00c:	ldr	x1, [sp, #40]
   1c010:	mov	w2, w0
   1c014:	str	x1, [x4]
   1c018:	ldr	x1, [sp, #40]
   1c01c:	nop
   1c020:	ldrb	w3, [x1, x0]
   1c024:	add	x0, x0, #0x1
   1c028:	cbnz	w3, 1c020 <__sanitizer_set_report_fd@@Base+0x4260>
   1c02c:	add	x5, x1, x0
   1c030:	ldrb	w1, [x1, x0]
   1c034:	sxtw	x3, w2
   1c038:	add	x6, x4, w2, sxtw #3
   1c03c:	cbz	w1, 1c074 <__sanitizer_set_report_fd@@Base+0x42b4>
   1c040:	str	x5, [x4, x3, lsl #3]
   1c044:	cmp	w2, #0x7cf
   1c048:	b.gt	1c084 <__sanitizer_set_report_fd@@Base+0x42c4>
   1c04c:	ldr	x1, [sp, #40]
   1c050:	add	w2, w2, #0x1
   1c054:	ldrb	w3, [x1, x0]
   1c058:	add	x0, x0, #0x1
   1c05c:	cbnz	w3, 1c020 <__sanitizer_set_report_fd@@Base+0x4260>
   1c060:	add	x5, x1, x0
   1c064:	ldrb	w1, [x1, x0]
   1c068:	sxtw	x3, w2
   1c06c:	add	x6, x4, w2, sxtw #3
   1c070:	cbnz	w1, 1c040 <__sanitizer_set_report_fd@@Base+0x4280>
   1c074:	str	xzr, [x6]
   1c078:	ldr	x30, [sp, #16]
   1c07c:	ldp	x19, x20, [sp], #64
   1c080:	ret
   1c084:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c088:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c08c:	add	x2, x2, #0x670
   1c090:	add	x0, x0, #0x690
   1c094:	mov	x4, #0x7cf                 	// #1999
   1c098:	mov	w1, #0x243                 	// #579
   1c09c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1c0a0:	ldr	x0, [x19]
   1c0a4:	ldr	x30, [sp, #16]
   1c0a8:	str	xzr, [x0]
   1c0ac:	ldp	x19, x20, [sp], #64
   1c0b0:	ret
   1c0b4:	nop
   1c0b8:	mov	x2, x0
   1c0bc:	mov	w0, #0x0                   	// #0
   1c0c0:	cmn	x2, #0x1, lsl #12
   1c0c4:	b.hi	1c0cc <__sanitizer_set_report_fd@@Base+0x430c>  // b.pmore
   1c0c8:	ret
   1c0cc:	mov	w0, #0x1                   	// #1
   1c0d0:	cbz	x1, 1c0c8 <__sanitizer_set_report_fd@@Base+0x4308>
   1c0d4:	neg	w2, w2
   1c0d8:	str	w2, [x1]
   1c0dc:	ret
   1c0e0:	mov	x8, #0xde                  	// #222
   1c0e4:	sxtw	x2, w2
   1c0e8:	sxtw	x3, w3
   1c0ec:	sxtw	x4, w4
   1c0f0:	svc	#0x0
   1c0f4:	ret
   1c0f8:	mov	x8, #0xd7                  	// #215
   1c0fc:	svc	#0x0
   1c100:	ret
   1c104:	nop
   1c108:	mov	x8, #0xe2                  	// #226
   1c10c:	sxtw	x2, w2
   1c110:	svc	#0x0
   1c114:	ret
   1c118:	mov	x8, #0x39                  	// #57
   1c11c:	sxtw	x0, w0
   1c120:	svc	#0x0
   1c124:	ret
   1c128:	sxtw	x2, w1
   1c12c:	mov	x8, #0x38                  	// #56
   1c130:	mov	x1, x0
   1c134:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c138:	svc	#0x0
   1c13c:	ret
   1c140:	mov	w4, w1
   1c144:	mov	w3, w2
   1c148:	mov	x1, x0
   1c14c:	mov	x8, #0x38                  	// #56
   1c150:	sxtw	x2, w4
   1c154:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c158:	svc	#0x0
   1c15c:	ret
   1c160:	sxtw	x3, w0
   1c164:	mov	x0, x3
   1c168:	mov	x8, #0x3f                  	// #63
   1c16c:	svc	#0x0
   1c170:	cmn	x0, #0x1, lsl #12
   1c174:	b.hi	1c17c <__sanitizer_set_report_fd@@Base+0x43bc>  // b.pmore
   1c178:	ret
   1c17c:	cmn	w0, #0x4
   1c180:	b.eq	1c164 <__sanitizer_set_report_fd@@Base+0x43a4>  // b.none
   1c184:	ret
   1c188:	sxtw	x3, w0
   1c18c:	mov	x0, x3
   1c190:	mov	x8, #0x40                  	// #64
   1c194:	svc	#0x0
   1c198:	cmn	x0, #0x1, lsl #12
   1c19c:	b.hi	1c1a4 <__sanitizer_set_report_fd@@Base+0x43e4>  // b.pmore
   1c1a0:	ret
   1c1a4:	cmn	w0, #0x4
   1c1a8:	b.eq	1c18c <__sanitizer_set_report_fd@@Base+0x43cc>  // b.none
   1c1ac:	ret
   1c1b0:	sxtw	x2, w0
   1c1b4:	mov	x0, x2
   1c1b8:	mov	x8, #0x2e                  	// #46
   1c1bc:	svc	#0x0
   1c1c0:	cmn	x0, #0x1, lsl #12
   1c1c4:	b.hi	1c1cc <__sanitizer_set_report_fd@@Base+0x440c>  // b.pmore
   1c1c8:	ret
   1c1cc:	cmn	w0, #0x4
   1c1d0:	b.eq	1c1b4 <__sanitizer_set_report_fd@@Base+0x43f4>  // b.none
   1c1d4:	ret
   1c1d8:	mov	x2, x1
   1c1dc:	mov	x8, #0x4f                  	// #79
   1c1e0:	mov	x1, x0
   1c1e4:	mov	x3, #0x0                   	// #0
   1c1e8:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c1ec:	svc	#0x0
   1c1f0:	ret
   1c1f4:	nop
   1c1f8:	mov	x2, x1
   1c1fc:	mov	x8, #0x4f                  	// #79
   1c200:	mov	x1, x0
   1c204:	mov	x3, #0x100                 	// #256
   1c208:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c20c:	svc	#0x0
   1c210:	ret
   1c214:	nop
   1c218:	mov	x8, #0x50                  	// #80
   1c21c:	sxtw	x0, w0
   1c220:	svc	#0x0
   1c224:	ret
   1c228:	sub	sp, sp, #0x80
   1c22c:	mov	x8, #0x50                  	// #80
   1c230:	mov	x1, sp
   1c234:	sxtw	x0, w0
   1c238:	svc	#0x0
   1c23c:	ldr	x1, [sp, #48]
   1c240:	cmp	x0, #0x0
   1c244:	add	sp, sp, #0x80
   1c248:	csinv	x0, x1, xzr, eq  // eq = none
   1c24c:	ret
   1c250:	mov	x8, #0x17                  	// #23
   1c254:	sxtw	x0, w0
   1c258:	svc	#0x0
   1c25c:	ret
   1c260:	mov	x8, #0x18                  	// #24
   1c264:	mov	x2, #0x0                   	// #0
   1c268:	sxtw	x0, w0
   1c26c:	sxtw	x1, w1
   1c270:	svc	#0x0
   1c274:	ret
   1c278:	mov	x4, x1
   1c27c:	mov	x3, x2
   1c280:	mov	x1, x0
   1c284:	mov	x2, x4
   1c288:	mov	x8, #0x4e                  	// #78
   1c28c:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c290:	svc	#0x0
   1c294:	ret
   1c298:	mov	x1, x0
   1c29c:	mov	x8, #0x23                  	// #35
   1c2a0:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c2a4:	mov	x2, #0x0                   	// #0
   1c2a8:	svc	#0x0
   1c2ac:	ret
   1c2b0:	mov	x3, x1
   1c2b4:	mov	x8, #0x26                  	// #38
   1c2b8:	mov	x1, x0
   1c2bc:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c2c0:	mov	x2, x0
   1c2c4:	svc	#0x0
   1c2c8:	ret
   1c2cc:	nop
   1c2d0:	mov	x8, #0x7c                  	// #124
   1c2d4:	svc	#0x0
   1c2d8:	ret
   1c2dc:	nop
   1c2e0:	sxtw	x0, w0
   1c2e4:	mov	x8, #0x5e                  	// #94
   1c2e8:	str	x30, [sp, #-16]!
   1c2ec:	svc	#0x0
   1c2f0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1c2f4:	nop
   1c2f8:	sub	sp, sp, #0x10
   1c2fc:	mov	w2, w0
   1c300:	mov	x1, sp
   1c304:	mov	x8, #0x65                  	// #101
   1c308:	mov	x0, x1
   1c30c:	stp	x2, xzr, [sp]
   1c310:	svc	#0x0
   1c314:	ldr	w1, [sp]
   1c318:	cmp	w0, #0x0
   1c31c:	mov	w0, #0x0                   	// #0
   1c320:	add	sp, sp, #0x10
   1c324:	csel	w0, w1, w0, ne  // ne = any
   1c328:	ret
   1c32c:	nop
   1c330:	mov	x8, #0xdd                  	// #221
   1c334:	svc	#0x0
   1c338:	ret
   1c33c:	nop
   1c340:	stp	x19, x30, [sp, #-144]!
   1c344:	mov	x19, x0
   1c348:	bl	1e2b0 <__sanitizer_set_report_fd@@Base+0x64f0>
   1c34c:	tst	w0, #0xff
   1c350:	b.ne	1c388 <__sanitizer_set_report_fd@@Base+0x45c8>  // b.any
   1c354:	mov	x1, x19
   1c358:	add	x2, sp, #0x10
   1c35c:	mov	x8, #0x4f                  	// #79
   1c360:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c364:	mov	x3, #0x0                   	// #0
   1c368:	svc	#0x0
   1c36c:	cbnz	x0, 1c388 <__sanitizer_set_report_fd@@Base+0x45c8>
   1c370:	ldr	w0, [sp, #32]
   1c374:	ldp	x19, x30, [sp], #144
   1c378:	and	w0, w0, #0xf000
   1c37c:	cmp	w0, #0x8, lsl #12
   1c380:	cset	w0, eq  // eq = none
   1c384:	ret
   1c388:	mov	w0, #0x0                   	// #0
   1c38c:	ldp	x19, x30, [sp], #144
   1c390:	ret
   1c394:	nop
   1c398:	mov	x8, #0xb2                  	// #178
   1c39c:	svc	#0x0
   1c3a0:	ret
   1c3a4:	nop
   1c3a8:	mov	x8, #0x83                  	// #131
   1c3ac:	sxtw	x0, w0
   1c3b0:	sxtw	x2, w2
   1c3b4:	svc	#0x0
   1c3b8:	ret
   1c3bc:	nop
   1c3c0:	stp	x19, x30, [sp, #-32]!
   1c3c4:	mov	x2, #0x10                  	// #16
   1c3c8:	mov	w1, #0x0                   	// #0
   1c3cc:	add	x19, sp, #0x10
   1c3d0:	mov	x0, x19
   1c3d4:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1c3d8:	mov	x0, x19
   1c3dc:	mov	x8, #0xa9                  	// #169
   1c3e0:	mov	x1, #0x0                   	// #0
   1c3e4:	svc	#0x0
   1c3e8:	ldp	x3, x2, [sp, #16]
   1c3ec:	mov	x0, #0xca00                	// #51712
   1c3f0:	movk	x0, #0x3b9a, lsl #16
   1c3f4:	ldp	x19, x30, [sp], #32
   1c3f8:	lsl	x1, x2, #5
   1c3fc:	sub	x1, x1, x2
   1c400:	add	x1, x2, x1, lsl #2
   1c404:	lsl	x1, x1, #3
   1c408:	madd	x0, x3, x0, x1
   1c40c:	ret
   1c410:	mov	x8, #0x71                  	// #113
   1c414:	sxtw	x0, w0
   1c418:	svc	#0x0
   1c41c:	ret
   1c420:	stp	x19, x20, [sp, #-64]!
   1c424:	stp	x21, x22, [sp, #16]
   1c428:	adrp	x21, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   1c42c:	add	x19, x21, #0x6c8
   1c430:	stp	x23, x30, [sp, #32]
   1c434:	mov	x23, x0
   1c438:	ldrb	w0, [x21, #1736]
   1c43c:	cbz	w0, 1c4d8 <__sanitizer_set_report_fd@@Base+0x4718>
   1c440:	ldr	x0, [x19, #8]
   1c444:	cbz	x0, 1c4c4 <__sanitizer_set_report_fd@@Base+0x4704>
   1c448:	add	x21, x21, #0x6c8
   1c44c:	ldr	x0, [x21, #16]
   1c450:	cbz	x0, 1c4c4 <__sanitizer_set_report_fd@@Base+0x4704>
   1c454:	mov	x0, x23
   1c458:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   1c45c:	ldr	x20, [x21, #8]
   1c460:	mov	x22, x0
   1c464:	ldrb	w0, [x20]
   1c468:	cbz	w0, 1c4c4 <__sanitizer_set_report_fd@@Base+0x4704>
   1c46c:	mov	x2, x20
   1c470:	b	1c4a0 <__sanitizer_set_report_fd@@Base+0x46e0>
   1c474:	mov	x1, x23
   1c478:	mov	x0, x20
   1c47c:	bl	19cc0 <__sanitizer_set_report_fd@@Base+0x1f00>
   1c480:	cbnz	w0, 1c490 <__sanitizer_set_report_fd@@Base+0x46d0>
   1c484:	ldrb	w0, [x20, x22]
   1c488:	cmp	w0, #0x3d
   1c48c:	b.eq	1c510 <__sanitizer_set_report_fd@@Base+0x4750>  // b.none
   1c490:	ldrb	w0, [x19, #1]
   1c494:	add	x20, x19, #0x1
   1c498:	cbz	w0, 1c4c4 <__sanitizer_set_report_fd@@Base+0x4704>
   1c49c:	ldr	x2, [x21, #8]
   1c4a0:	sub	x2, x20, x2
   1c4a4:	ldr	x3, [x21, #16]
   1c4a8:	mov	x0, x20
   1c4ac:	mov	w1, #0x0                   	// #0
   1c4b0:	sub	x2, x3, x2
   1c4b4:	bl	19c58 <__sanitizer_set_report_fd@@Base+0x1e98>
   1c4b8:	mov	x19, x0
   1c4bc:	mov	x2, x22
   1c4c0:	cbnz	x0, 1c474 <__sanitizer_set_report_fd@@Base+0x46b4>
   1c4c4:	mov	x0, #0x0                   	// #0
   1c4c8:	ldp	x21, x22, [sp, #16]
   1c4cc:	ldp	x23, x30, [sp, #32]
   1c4d0:	ldp	x19, x20, [sp], #64
   1c4d4:	ret
   1c4d8:	mov	w1, #0x1                   	// #1
   1c4dc:	add	x3, x19, #0x10
   1c4e0:	strb	w1, [x21, #1736]
   1c4e4:	add	x2, sp, #0x38
   1c4e8:	add	x1, x19, #0x8
   1c4ec:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c4f0:	mov	x5, #0x0                   	// #0
   1c4f4:	add	x0, x0, #0x6e8
   1c4f8:	mov	x4, #0x4000000             	// #67108864
   1c4fc:	bl	174d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   1c500:	tst	w0, #0xff
   1c504:	b.ne	1c440 <__sanitizer_set_report_fd@@Base+0x4680>  // b.any
   1c508:	str	xzr, [x19, #8]
   1c50c:	b	1c4c4 <__sanitizer_set_report_fd@@Base+0x4704>
   1c510:	add	x0, x22, #0x1
   1c514:	add	x0, x20, x0
   1c518:	ldp	x21, x22, [sp, #16]
   1c51c:	ldp	x23, x30, [sp, #32]
   1c520:	ldp	x19, x20, [sp], #64
   1c524:	ret
   1c528:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1c52c:	ldr	x0, [x0, #4048]
   1c530:	cbz	x0, 1c540 <__sanitizer_set_report_fd@@Base+0x4780>
   1c534:	ldr	x0, [x0]
   1c538:	add	x0, x0, #0x8
   1c53c:	ret
   1c540:	str	x30, [sp, #-32]!
   1c544:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c548:	add	x0, x0, #0x700
   1c54c:	add	x1, sp, #0x10
   1c550:	bl	1bfb8 <__sanitizer_set_report_fd@@Base+0x41f8>
   1c554:	add	x1, sp, #0x18
   1c558:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c55c:	add	x0, x0, #0x6e8
   1c560:	bl	1bfb8 <__sanitizer_set_report_fd@@Base+0x41f8>
   1c564:	ldr	x0, [sp, #16]
   1c568:	ldr	x30, [sp], #32
   1c56c:	ret
   1c570:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1c574:	ldr	x0, [x0, #4048]
   1c578:	cbz	x0, 1c590 <__sanitizer_set_report_fd@@Base+0x47d0>
   1c57c:	ldr	x1, [x0]
   1c580:	ldrsw	x0, [x1]
   1c584:	add	x0, x0, #0x2
   1c588:	add	x0, x1, x0, lsl #3
   1c58c:	ret
   1c590:	str	x30, [sp, #-32]!
   1c594:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c598:	add	x0, x0, #0x700
   1c59c:	add	x1, sp, #0x10
   1c5a0:	bl	1bfb8 <__sanitizer_set_report_fd@@Base+0x41f8>
   1c5a4:	add	x1, sp, #0x18
   1c5a8:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c5ac:	add	x0, x0, #0x6e8
   1c5b0:	bl	1bfb8 <__sanitizer_set_report_fd@@Base+0x41f8>
   1c5b4:	ldr	x0, [sp, #24]
   1c5b8:	ldr	x30, [sp], #32
   1c5bc:	ret
   1c5c0:	mov	x2, #0x58                  	// #88
   1c5c4:	mov	w1, #0x0                   	// #0
   1c5c8:	b	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1c5cc:	nop
   1c5d0:	ldr	x3, [x0, #80]
   1c5d4:	mov	x6, x0
   1c5d8:	mov	w1, #0x1                   	// #1
   1c5dc:	cbnz	x3, 1c644 <__sanitizer_set_report_fd@@Base+0x4884>
   1c5e0:	ldxr	w0, [x6]
   1c5e4:	stxr	w2, w1, [x6]
   1c5e8:	cbnz	w2, 1c5e0 <__sanitizer_set_report_fd@@Base+0x4820>
   1c5ec:	dmb	ish
   1c5f0:	cbz	w0, 1c640 <__sanitizer_set_report_fd@@Base+0x4880>
   1c5f4:	mov	w7, #0x2                   	// #2
   1c5f8:	ldxr	w0, [x6]
   1c5fc:	stxr	w1, w7, [x6]
   1c600:	cbnz	w1, 1c5f8 <__sanitizer_set_report_fd@@Base+0x4838>
   1c604:	dmb	ish
   1c608:	cbz	w0, 1c640 <__sanitizer_set_report_fd@@Base+0x4880>
   1c60c:	mov	x0, x6
   1c610:	mov	x8, #0x62                  	// #98
   1c614:	mov	x1, #0x80                  	// #128
   1c618:	mov	x2, #0x2                   	// #2
   1c61c:	mov	x3, #0x0                   	// #0
   1c620:	mov	x4, #0x0                   	// #0
   1c624:	mov	x5, #0x0                   	// #0
   1c628:	svc	#0x0
   1c62c:	ldxr	w0, [x6]
   1c630:	stxr	w1, w7, [x6]
   1c634:	cbnz	w1, 1c5f8 <__sanitizer_set_report_fd@@Base+0x4838>
   1c638:	dmb	ish
   1c63c:	cbnz	w0, 1c60c <__sanitizer_set_report_fd@@Base+0x484c>
   1c640:	ret
   1c644:	str	x30, [sp, #-16]!
   1c648:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c64c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c650:	add	x2, x2, #0x718
   1c654:	add	x0, x0, #0x690
   1c658:	mov	x4, #0x0                   	// #0
   1c65c:	mov	w1, #0x288                 	// #648
   1c660:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1c664:	nop
   1c668:	dmb	ish
   1c66c:	mov	x1, x0
   1c670:	ldxr	w2, [x1]
   1c674:	stxr	w3, wzr, [x1]
   1c678:	cbnz	w3, 1c670 <__sanitizer_set_report_fd@@Base+0x48b0>
   1c67c:	dmb	ish
   1c680:	cbz	w2, 1c6b0 <__sanitizer_set_report_fd@@Base+0x48f0>
   1c684:	cmp	w2, #0x2
   1c688:	b.eq	1c690 <__sanitizer_set_report_fd@@Base+0x48d0>  // b.none
   1c68c:	ret
   1c690:	mov	x8, #0x62                  	// #98
   1c694:	mov	x1, #0x81                  	// #129
   1c698:	mov	x2, #0x1                   	// #1
   1c69c:	mov	x3, #0x0                   	// #0
   1c6a0:	mov	x4, #0x0                   	// #0
   1c6a4:	mov	x5, #0x0                   	// #0
   1c6a8:	svc	#0x0
   1c6ac:	ret
   1c6b0:	str	x30, [sp, #-16]!
   1c6b4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c6b8:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c6bc:	add	x2, x2, #0x730
   1c6c0:	add	x0, x0, #0x690
   1c6c4:	mov	x4, #0x0                   	// #0
   1c6c8:	mov	x3, #0x0                   	// #0
   1c6cc:	mov	w1, #0x29b                 	// #667
   1c6d0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1c6d4:	nop
   1c6d8:	ldr	w0, [x0]
   1c6dc:	cbz	w0, 1c6e4 <__sanitizer_set_report_fd@@Base+0x4924>
   1c6e0:	ret
   1c6e4:	str	x30, [sp, #-16]!
   1c6e8:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c6ec:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c6f0:	add	x2, x2, #0x750
   1c6f4:	add	x0, x0, #0x690
   1c6f8:	mov	x4, #0x0                   	// #0
   1c6fc:	mov	x3, #0x0                   	// #0
   1c700:	mov	w1, #0x2a9                 	// #681
   1c704:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1c708:	mov	x8, #0x75                  	// #117
   1c70c:	sxtw	x0, w0
   1c710:	sxtw	x1, w1
   1c714:	svc	#0x0
   1c718:	ret
   1c71c:	nop
   1c720:	mov	x8, #0x104                 	// #260
   1c724:	mov	x3, #0x0                   	// #0
   1c728:	sxtw	x0, w0
   1c72c:	sxtw	x2, w2
   1c730:	svc	#0x0
   1c734:	ret
   1c738:	mov	x8, #0xac                  	// #172
   1c73c:	svc	#0x0
   1c740:	ret
   1c744:	nop
   1c748:	mov	x8, #0xad                  	// #173
   1c74c:	svc	#0x0
   1c750:	ret
   1c754:	nop
   1c758:	mov	w2, w2
   1c75c:	mov	x8, #0x3d                  	// #61
   1c760:	sxtw	x0, w0
   1c764:	svc	#0x0
   1c768:	ret
   1c76c:	nop
   1c770:	mov	x8, #0x3e                  	// #62
   1c774:	sxtw	x0, w0
   1c778:	sxtw	x2, w2
   1c77c:	svc	#0x0
   1c780:	ret
   1c784:	nop
   1c788:	mov	x8, #0xa7                  	// #167
   1c78c:	sxtw	x0, w0
   1c790:	svc	#0x0
   1c794:	ret
   1c798:	mov	x8, #0x84                  	// #132
   1c79c:	svc	#0x0
   1c7a0:	ret
   1c7a4:	nop
   1c7a8:	mov	x8, #0xdc                  	// #220
   1c7ac:	mov	x0, #0x11                  	// #17
   1c7b0:	mov	x1, #0x0                   	// #0
   1c7b4:	svc	#0x0
   1c7b8:	ret
   1c7bc:	nop
   1c7c0:	stp	x19, x20, [sp, #-112]!
   1c7c4:	sxtw	x20, w0
   1c7c8:	mov	x19, x1
   1c7cc:	stp	x23, x30, [sp, #32]
   1c7d0:	add	x23, sp, #0x30
   1c7d4:	mov	w1, #0x0                   	// #0
   1c7d8:	mov	x0, x23
   1c7dc:	stp	x21, x22, [sp, #16]
   1c7e0:	mov	x21, x2
   1c7e4:	add	x22, sp, #0x50
   1c7e8:	mov	x2, #0x20                  	// #32
   1c7ec:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1c7f0:	mov	w1, #0x0                   	// #0
   1c7f4:	mov	x0, x22
   1c7f8:	mov	x2, #0x20                  	// #32
   1c7fc:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1c800:	mov	x1, #0x0                   	// #0
   1c804:	cbz	x19, 1c838 <__sanitizer_set_report_fd@@Base+0x4a78>
   1c808:	mov	x1, x19
   1c80c:	mov	x2, #0x8                   	// #8
   1c810:	add	x0, x23, #0x18
   1c814:	ldr	x3, [x1], #8
   1c818:	str	x3, [sp, #48]
   1c81c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   1c820:	ldr	w0, [x19, #136]
   1c824:	mov	x1, x23
   1c828:	ldr	x2, [x19, #144]
   1c82c:	orr	w0, w0, #0x4000000
   1c830:	sxtw	x0, w0
   1c834:	stp	x0, x2, [sp, #56]
   1c838:	cmp	x21, #0x0
   1c83c:	mov	x0, x20
   1c840:	csel	x2, x22, xzr, ne  // ne = any
   1c844:	mov	x8, #0x86                  	// #134
   1c848:	mov	x3, #0x8                   	// #8
   1c84c:	svc	#0x0
   1c850:	cmp	x0, #0x0
   1c854:	mov	x19, x0
   1c858:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   1c85c:	b.ne	1c874 <__sanitizer_set_report_fd@@Base+0x4ab4>  // b.any
   1c860:	mov	w0, w19
   1c864:	ldp	x21, x22, [sp, #16]
   1c868:	ldp	x23, x30, [sp, #32]
   1c86c:	ldp	x19, x20, [sp], #112
   1c870:	ret
   1c874:	mov	x0, x21
   1c878:	mov	x2, x3
   1c87c:	ldr	x3, [sp, #80]
   1c880:	add	x1, x22, #0x18
   1c884:	str	x3, [x0], #8
   1c888:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   1c88c:	ldr	x0, [sp, #88]
   1c890:	str	w0, [x21, #136]
   1c894:	ldr	x0, [sp, #96]
   1c898:	str	x0, [x21, #144]
   1c89c:	mov	w0, w19
   1c8a0:	ldp	x21, x22, [sp, #16]
   1c8a4:	ldp	x23, x30, [sp, #32]
   1c8a8:	ldp	x19, x20, [sp], #112
   1c8ac:	ret
   1c8b0:	mov	x8, #0x87                  	// #135
   1c8b4:	mov	x3, #0x8                   	// #8
   1c8b8:	sxtw	x0, w0
   1c8bc:	svc	#0x0
   1c8c0:	ret
   1c8c4:	nop
   1c8c8:	mov	x2, #0x80                  	// #128
   1c8cc:	mov	w1, #0xff                  	// #255
   1c8d0:	b	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1c8d4:	nop
   1c8d8:	mov	x2, #0x80                  	// #128
   1c8dc:	mov	w1, #0x0                   	// #0
   1c8e0:	b	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1c8e4:	nop
   1c8e8:	sub	w1, w1, #0x1
   1c8ec:	sxtw	x3, w1
   1c8f0:	cmp	x3, #0x3ff
   1c8f4:	b.hi	1c918 <__sanitizer_set_report_fd@@Base+0x4b58>  // b.pmore
   1c8f8:	lsr	x3, x3, #3
   1c8fc:	and	w1, w1, #0x7
   1c900:	mov	w2, #0x1                   	// #1
   1c904:	lsl	w1, w2, w1
   1c908:	ldrb	w2, [x0, x3]
   1c90c:	bic	w1, w2, w1
   1c910:	strb	w1, [x0, x3]
   1c914:	ret
   1c918:	str	x30, [sp, #-16]!
   1c91c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c920:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c924:	add	x2, x2, #0x790
   1c928:	add	x0, x0, #0x690
   1c92c:	mov	x4, #0x400                 	// #1024
   1c930:	mov	w1, #0x364                 	// #868
   1c934:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1c938:	sub	w1, w1, #0x1
   1c93c:	sxtw	x3, w1
   1c940:	cmp	x3, #0x3ff
   1c944:	b.hi	1c960 <__sanitizer_set_report_fd@@Base+0x4ba0>  // b.pmore
   1c948:	lsr	x3, x3, #3
   1c94c:	and	w1, w1, #0x7
   1c950:	ldrb	w0, [x0, x3]
   1c954:	asr	w0, w0, w1
   1c958:	and	w0, w0, #0x1
   1c95c:	ret
   1c960:	str	x30, [sp, #-16]!
   1c964:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c968:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1c96c:	add	x2, x2, #0x790
   1c970:	add	x0, x0, #0x690
   1c974:	mov	x4, #0x400                 	// #1024
   1c978:	mov	w1, #0x36e                 	// #878
   1c97c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1c980:	stp	x19, x20, [sp, #-144]!
   1c984:	mov	x19, x0
   1c988:	mov	w20, w1
   1c98c:	stp	x23, x24, [sp, #32]
   1c990:	adrp	x24, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1c994:	mov	w1, #0xffffffff            	// #-1
   1c998:	stp	x21, x22, [sp, #16]
   1c99c:	ldr	x21, [x24, #4016]
   1c9a0:	stp	x25, x30, [sp, #48]
   1c9a4:	stp	xzr, xzr, [x0, #16]
   1c9a8:	ldr	x0, [x21]
   1c9ac:	stp	w20, w1, [x19]
   1c9b0:	str	xzr, [x19, #8]
   1c9b4:	cbz	x0, 1cab4 <__sanitizer_set_report_fd@@Base+0x4cf4>
   1c9b8:	sub	x1, x0, #0x1
   1c9bc:	tst	x1, x0
   1c9c0:	b.ne	1cb24 <__sanitizer_set_report_fd@@Base+0x4d64>  // b.any
   1c9c4:	add	x21, x19, #0x8
   1c9c8:	add	x22, x0, #0xfff
   1c9cc:	neg	x0, x0
   1c9d0:	mov	w2, #0x0                   	// #0
   1c9d4:	and	x22, x22, x0
   1c9d8:	adrp	x25, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1c9dc:	mov	x0, x22
   1c9e0:	add	x1, x25, #0xb50
   1c9e4:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   1c9e8:	mov	x23, x0
   1c9ec:	ldr	x1, [x19, #8]
   1c9f0:	ldr	x2, [x21, #16]
   1c9f4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   1c9f8:	ldr	x0, [x19, #8]
   1c9fc:	ldr	x1, [x21, #8]
   1ca00:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1ca04:	ldr	x2, [x21, #16]
   1ca08:	str	x23, [x19, #8]
   1ca0c:	str	x22, [x21, #8]
   1ca10:	cmp	x2, #0xfff
   1ca14:	b.hi	1ca34 <__sanitizer_set_report_fd@@Base+0x4c74>  // b.pmore
   1ca18:	cmp	x22, #0xfff
   1ca1c:	b.ls	1cac4 <__sanitizer_set_report_fd@@Base+0x4d04>  // b.plast
   1ca20:	mov	x3, #0x1000                	// #4096
   1ca24:	add	x0, x23, x2
   1ca28:	mov	w1, #0x0                   	// #0
   1ca2c:	sub	x2, x3, x2
   1ca30:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1ca34:	mov	x0, #0x1000                	// #4096
   1ca38:	str	x0, [x21, #16]
   1ca3c:	add	x21, sp, #0x40
   1ca40:	mov	w3, w20
   1ca44:	mov	x0, x21
   1ca48:	mov	x1, #0x50                  	// #80
   1ca4c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1ca50:	add	x2, x2, #0x7b8
   1ca54:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   1ca58:	mov	x1, x21
   1ca5c:	mov	x8, #0x38                  	// #56
   1ca60:	mov	x0, #0xffffffffffffff9c    	// #-100
   1ca64:	mov	x2, #0x4000                	// #16384
   1ca68:	svc	#0x0
   1ca6c:	str	w0, [x19, #4]
   1ca70:	sxtw	x0, w0
   1ca74:	cmn	x0, #0x1, lsl #12
   1ca78:	b.hi	1ca90 <__sanitizer_set_report_fd@@Base+0x4cd0>  // b.pmore
   1ca7c:	ldp	x21, x22, [sp, #16]
   1ca80:	ldp	x23, x24, [sp, #32]
   1ca84:	ldp	x25, x30, [sp, #48]
   1ca88:	ldp	x19, x20, [sp], #144
   1ca8c:	ret
   1ca90:	mov	w1, w20
   1ca94:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1ca98:	add	x0, x0, #0x7c8
   1ca9c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1caa0:	ldp	x21, x22, [sp, #16]
   1caa4:	ldp	x23, x24, [sp, #32]
   1caa8:	ldp	x25, x30, [sp, #48]
   1caac:	ldp	x19, x20, [sp], #144
   1cab0:	ret
   1cab4:	mov	x0, #0x6                   	// #6
   1cab8:	bl	6570 <getauxval@plt>
   1cabc:	str	x0, [x21]
   1cac0:	b	1c9b8 <__sanitizer_set_report_fd@@Base+0x4bf8>
   1cac4:	ldr	x24, [x24, #4016]
   1cac8:	ldr	x0, [x24]
   1cacc:	cbz	x0, 1cb34 <__sanitizer_set_report_fd@@Base+0x4d74>
   1cad0:	sub	x1, x0, #0x1
   1cad4:	tst	x1, x0
   1cad8:	b.ne	1cb24 <__sanitizer_set_report_fd@@Base+0x4d64>  // b.any
   1cadc:	add	x22, x0, #0xfff
   1cae0:	neg	x0, x0
   1cae4:	and	x22, x22, x0
   1cae8:	add	x1, x25, #0xb50
   1caec:	mov	w2, #0x0                   	// #0
   1caf0:	mov	x0, x22
   1caf4:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   1caf8:	mov	x23, x0
   1cafc:	ldr	x1, [x19, #8]
   1cb00:	ldr	x2, [x21, #16]
   1cb04:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   1cb08:	ldr	x0, [x19, #8]
   1cb0c:	ldr	x1, [x21, #8]
   1cb10:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1cb14:	ldr	x2, [x21, #16]
   1cb18:	str	x23, [x19, #8]
   1cb1c:	str	x22, [x21, #8]
   1cb20:	b	1ca20 <__sanitizer_set_report_fd@@Base+0x4c60>
   1cb24:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1cb28:	add	x0, x0, #0xb38
   1cb2c:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1cb30:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1cb34:	mov	x0, #0x6                   	// #6
   1cb38:	bl	6570 <getauxval@plt>
   1cb3c:	str	x0, [x24]
   1cb40:	b	1cad0 <__sanitizer_set_report_fd@@Base+0x4d10>
   1cb44:	nop
   1cb48:	stp	x19, x20, [sp, #-144]!
   1cb4c:	mov	x20, x0
   1cb50:	mov	w4, w1
   1cb54:	stp	x21, x22, [sp, #16]
   1cb58:	add	x21, sp, #0x40
   1cb5c:	ldr	w3, [x20], #8
   1cb60:	mov	x1, #0x50                  	// #80
   1cb64:	mov	x19, x0
   1cb68:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1cb6c:	mov	x0, x21
   1cb70:	add	x2, x2, #0x7f0
   1cb74:	str	x30, [sp, #32]
   1cb78:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   1cb7c:	mov	x0, x21
   1cb80:	mov	x1, x20
   1cb84:	mov	x3, #0x0                   	// #0
   1cb88:	mov	x2, #0x4000000             	// #67108864
   1cb8c:	bl	17668 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2390>
   1cb90:	tst	w0, #0xff
   1cb94:	b.eq	1cba0 <__sanitizer_set_report_fd@@Base+0x4de0>  // b.none
   1cb98:	ldr	x3, [x19, #24]
   1cb9c:	cbnz	x3, 1cbb4 <__sanitizer_set_report_fd@@Base+0x4df4>
   1cba0:	mov	w0, #0x0                   	// #0
   1cba4:	ldp	x21, x22, [sp, #16]
   1cba8:	ldr	x30, [sp, #32]
   1cbac:	ldp	x19, x20, [sp], #144
   1cbb0:	ret
   1cbb4:	ldr	x4, [x19, #16]
   1cbb8:	strb	wzr, [sp, #63]
   1cbbc:	cmp	x3, x4
   1cbc0:	b.hi	1ccdc <__sanitizer_set_report_fd@@Base+0x4f1c>  // b.pmore
   1cbc4:	add	x1, x3, #0x1
   1cbc8:	b.eq	1cc28 <__sanitizer_set_report_fd@@Base+0x4e68>  // b.none
   1cbcc:	ldr	x21, [x19, #8]
   1cbd0:	str	x1, [x20, #16]
   1cbd4:	add	x0, x21, x3
   1cbd8:	add	x1, sp, #0x3f
   1cbdc:	mov	x2, #0x1                   	// #1
   1cbe0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   1cbe4:	ldr	x0, [x19, #8]
   1cbe8:	adrp	x20, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1cbec:	add	x20, x20, #0xaf0
   1cbf0:	mov	x1, x20
   1cbf4:	bl	1b4c0 <__sanitizer_set_report_fd@@Base+0x3700>
   1cbf8:	mov	x19, x0
   1cbfc:	cbz	x0, 1cba0 <__sanitizer_set_report_fd@@Base+0x4de0>
   1cc00:	mov	x0, x20
   1cc04:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   1cc08:	add	x0, x19, x0
   1cc0c:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   1cc10:	cmp	w0, #0x0
   1cc14:	cset	w0, ne  // ne = any
   1cc18:	ldp	x21, x22, [sp, #16]
   1cc1c:	ldr	x30, [sp, #32]
   1cc20:	ldp	x19, x20, [sp], #144
   1cc24:	ret
   1cc28:	cbz	x1, 1cd04 <__sanitizer_set_report_fd@@Base+0x4f44>
   1cc2c:	tst	x3, x1
   1cc30:	b.eq	1ccd4 <__sanitizer_set_report_fd@@Base+0x4f14>  // b.none
   1cc34:	clz	x2, x1
   1cc38:	mov	w0, #0x3f                  	// #63
   1cc3c:	sub	w0, w0, w2
   1cc40:	mov	x2, #0x1                   	// #1
   1cc44:	add	w21, w0, #0x1
   1cc48:	lsl	x21, x2, x21
   1cc4c:	cmp	x1, x21
   1cc50:	b.cs	1cd50 <__sanitizer_set_report_fd@@Base+0x4f90>  // b.hs, b.nlast
   1cc54:	lsl	x4, x2, x0
   1cc58:	cmp	x1, x4
   1cc5c:	b.ls	1cd70 <__sanitizer_set_report_fd@@Base+0x4fb0>  // b.plast
   1cc60:	cmp	x3, x21
   1cc64:	b.hi	1cd24 <__sanitizer_set_report_fd@@Base+0x4f64>  // b.pmore
   1cc68:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1cc6c:	ldr	x22, [x22, #4016]
   1cc70:	ldr	x0, [x22]
   1cc74:	cbz	x0, 1ccf4 <__sanitizer_set_report_fd@@Base+0x4f34>
   1cc78:	sub	x22, x0, #0x1
   1cc7c:	tst	x22, x0
   1cc80:	b.ne	1cd40 <__sanitizer_set_report_fd@@Base+0x4f80>  // b.any
   1cc84:	add	x21, x21, x22
   1cc88:	neg	x0, x0
   1cc8c:	and	x22, x21, x0
   1cc90:	mov	w2, #0x0                   	// #0
   1cc94:	mov	x0, x22
   1cc98:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1cc9c:	add	x1, x1, #0xb50
   1cca0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   1cca4:	ldr	x1, [x19, #8]
   1cca8:	mov	x21, x0
   1ccac:	ldr	x2, [x20, #16]
   1ccb0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   1ccb4:	ldr	x1, [x20, #8]
   1ccb8:	ldr	x0, [x19, #8]
   1ccbc:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1ccc0:	ldr	x3, [x20, #16]
   1ccc4:	str	x21, [x19, #8]
   1ccc8:	str	x22, [x20, #8]
   1cccc:	add	x1, x3, #0x1
   1ccd0:	b	1cbd0 <__sanitizer_set_report_fd@@Base+0x4e10>
   1ccd4:	mov	x21, x1
   1ccd8:	b	1cc68 <__sanitizer_set_report_fd@@Base+0x4ea8>
   1ccdc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1cce0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1cce4:	add	x2, x2, #0x808
   1cce8:	add	x0, x0, #0xad8
   1ccec:	mov	w1, #0x1cd                 	// #461
   1ccf0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1ccf4:	mov	x0, #0x6                   	// #6
   1ccf8:	bl	6570 <getauxval@plt>
   1ccfc:	str	x0, [x22]
   1cd00:	b	1cc78 <__sanitizer_set_report_fd@@Base+0x4eb8>
   1cd04:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1cd08:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1cd0c:	add	x2, x2, #0x828
   1cd10:	add	x0, x0, #0xad8
   1cd14:	mov	x4, #0x0                   	// #0
   1cd18:	mov	x3, #0x0                   	// #0
   1cd1c:	mov	w1, #0x186                 	// #390
   1cd20:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1cd24:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1cd28:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1cd2c:	mov	x4, x21
   1cd30:	add	x2, x2, #0x838
   1cd34:	add	x0, x0, #0xad8
   1cd38:	mov	w1, #0x20c                 	// #524
   1cd3c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1cd40:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1cd44:	add	x0, x0, #0xb38
   1cd48:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1cd4c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1cd50:	mov	x3, x1
   1cd54:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   1cd58:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1cd5c:	mov	x4, x21
   1cd60:	add	x2, x2, #0x5c0
   1cd64:	add	x0, x0, #0xad8
   1cd68:	mov	w1, #0x18a                 	// #394
   1cd6c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1cd70:	mov	x3, x1
   1cd74:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   1cd78:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1cd7c:	add	x2, x2, #0x648
   1cd80:	add	x0, x0, #0xad8
   1cd84:	mov	w1, #0x18b                 	// #395
   1cd88:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1cd8c:	nop
   1cd90:	stp	x19, x20, [sp, #-144]!
   1cd94:	stp	x23, x24, [sp, #32]
   1cd98:	stp	x25, x26, [sp, #48]
   1cd9c:	mov	x25, x0
   1cda0:	ldrsw	x0, [x0, #4]
   1cda4:	str	x30, [sp, #80]
   1cda8:	cmn	x0, #0x1, lsl #12
   1cdac:	b.hi	1cf6c <__sanitizer_set_report_fd@@Base+0x51ac>  // b.pmore
   1cdb0:	mov	x8, #0x3e                  	// #62
   1cdb4:	mov	x2, #0x0                   	// #0
   1cdb8:	stp	x21, x22, [sp, #16]
   1cdbc:	stp	x27, x28, [sp, #64]
   1cdc0:	mov	x28, x1
   1cdc4:	mov	x1, #0x0                   	// #0
   1cdc8:	svc	#0x0
   1cdcc:	add	x23, x25, #0x8
   1cdd0:	str	xzr, [x28, #16]
   1cdd4:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1cdd8:	add	x0, sp, #0x88
   1cddc:	ldr	x19, [x25, #16]
   1cde0:	str	x0, [sp, #96]
   1cde4:	ldr	x3, [x23, #16]
   1cde8:	mov	w20, #0x1                   	// #1
   1cdec:	ldr	x0, [x22, #4016]
   1cdf0:	mov	w24, #0x2                   	// #2
   1cdf4:	str	x0, [sp, #104]
   1cdf8:	cmp	x19, x3
   1cdfc:	b.ls	1ce14 <__sanitizer_set_report_fd@@Base+0x5054>  // b.plast
   1ce00:	ldr	x0, [x23]
   1ce04:	sub	x2, x19, x3
   1ce08:	mov	w1, #0x0                   	// #0
   1ce0c:	add	x0, x0, x3
   1ce10:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1ce14:	str	x19, [x23, #16]
   1ce18:	cmp	x19, #0xfff
   1ce1c:	b.ls	1cf94 <__sanitizer_set_report_fd@@Base+0x51d4>  // b.plast
   1ce20:	ldrsw	x0, [x25, #4]
   1ce24:	and	x2, x19, #0xffffffff
   1ce28:	mov	x8, #0x3d                  	// #61
   1ce2c:	ldr	x1, [x25, #8]
   1ce30:	svc	#0x0
   1ce34:	mov	x26, x0
   1ce38:	cbz	x0, 1d14c <__sanitizer_set_report_fd@@Base+0x538c>
   1ce3c:	cmn	x0, #0x1, lsl #12
   1ce40:	b.hi	1cf38 <__sanitizer_set_report_fd@@Base+0x5178>  // b.pmore
   1ce44:	ldr	x19, [x25, #8]
   1ce48:	add	x27, x19, x0
   1ce4c:	cmp	x19, x27
   1ce50:	b.cs	1cee0 <__sanitizer_set_report_fd@@Base+0x5120>  // b.hs, b.nlast
   1ce54:	adrp	x21, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1ce58:	add	x21, x21, #0xb50
   1ce5c:	b	1ce6c <__sanitizer_set_report_fd@@Base+0x50ac>
   1ce60:	cbnz	x2, 1ce88 <__sanitizer_set_report_fd@@Base+0x50c8>
   1ce64:	cmp	x27, x19
   1ce68:	b.ls	1cee0 <__sanitizer_set_report_fd@@Base+0x5120>  // b.plast
   1ce6c:	mov	x0, x19
   1ce70:	ldrh	w2, [x19, #16]
   1ce74:	add	x19, x19, x2
   1ce78:	ldr	x2, [x0]
   1ce7c:	cmp	x2, #0x1
   1ce80:	b.ne	1ce60 <__sanitizer_set_report_fd@@Base+0x50a0>  // b.any
   1ce84:	mov	w24, w2
   1ce88:	ldrb	w2, [x0, #19]
   1ce8c:	sub	w2, w2, #0x30
   1ce90:	and	w2, w2, #0xff
   1ce94:	cmp	w2, #0x9
   1ce98:	b.hi	1ce64 <__sanitizer_set_report_fd@@Base+0x50a4>  // b.pmore
   1ce9c:	add	x0, x0, #0x13
   1cea0:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   1cea4:	ldp	x4, x3, [x28, #8]
   1cea8:	str	x0, [sp, #136]
   1ceac:	lsr	x4, x4, #3
   1ceb0:	cmp	x3, x4
   1ceb4:	b.hi	1d134 <__sanitizer_set_report_fd@@Base+0x5374>  // b.pmore
   1ceb8:	add	x0, x3, #0x1
   1cebc:	b.eq	1cff8 <__sanitizer_set_report_fd@@Base+0x5238>  // b.none
   1cec0:	ldr	x7, [x28]
   1cec4:	str	x0, [x28, #16]
   1cec8:	ldr	x1, [sp, #96]
   1cecc:	add	x0, x7, x3, lsl #3
   1ced0:	mov	x2, #0x8                   	// #8
   1ced4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   1ced8:	cmp	x27, x19
   1cedc:	b.hi	1ce6c <__sanitizer_set_report_fd@@Base+0x50ac>  // b.pmore
   1cee0:	ldr	x3, [x25, #24]
   1cee4:	cbz	w20, 1cf28 <__sanitizer_set_report_fd@@Base+0x5168>
   1cee8:	sub	x0, x3, #0x400
   1ceec:	cmp	x0, x26
   1cef0:	b.cc	1cfb4 <__sanitizer_set_report_fd@@Base+0x51f4>  // b.lo, b.ul, b.last
   1cef4:	ldr	x1, [x28, #16]
   1cef8:	cbz	x1, 1cf88 <__sanitizer_set_report_fd@@Base+0x51c8>
   1cefc:	ldr	x2, [x28]
   1cf00:	mov	x0, x25
   1cf04:	add	x1, x2, x1, lsl #3
   1cf08:	ldur	w1, [x1, #-8]
   1cf0c:	bl	1cb48 <__sanitizer_set_report_fd@@Base+0x4d88>
   1cf10:	tst	w0, #0xff
   1cf14:	b.eq	1d0a4 <__sanitizer_set_report_fd@@Base+0x52e4>  // b.none
   1cf18:	mov	w20, #0x0                   	// #0
   1cf1c:	ldr	x3, [x23, #16]
   1cf20:	ldr	x19, [x25, #16]
   1cf24:	b	1cdf8 <__sanitizer_set_report_fd@@Base+0x5038>
   1cf28:	mov	w24, #0x1                   	// #1
   1cf2c:	mov	w20, #0x0                   	// #0
   1cf30:	ldr	x19, [x25, #16]
   1cf34:	b	1cdf8 <__sanitizer_set_report_fd@@Base+0x5038>
   1cf38:	ldr	w1, [x25]
   1cf3c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1cf40:	add	x0, x0, #0x878
   1cf44:	mov	w24, #0x0                   	// #0
   1cf48:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1cf4c:	ldp	x21, x22, [sp, #16]
   1cf50:	ldp	x27, x28, [sp, #64]
   1cf54:	mov	w0, w24
   1cf58:	ldp	x23, x24, [sp, #32]
   1cf5c:	ldp	x25, x26, [sp, #48]
   1cf60:	ldr	x30, [sp, #80]
   1cf64:	ldp	x19, x20, [sp], #144
   1cf68:	ret
   1cf6c:	mov	w24, #0x0                   	// #0
   1cf70:	mov	w0, w24
   1cf74:	ldp	x23, x24, [sp, #32]
   1cf78:	ldp	x25, x26, [sp, #48]
   1cf7c:	ldr	x30, [sp, #80]
   1cf80:	ldp	x19, x20, [sp], #144
   1cf84:	ret
   1cf88:	mov	w20, #0x0                   	// #0
   1cf8c:	ldr	x19, [x25, #16]
   1cf90:	b	1cdf8 <__sanitizer_set_report_fd@@Base+0x5038>
   1cf94:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1cf98:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1cf9c:	mov	x3, x19
   1cfa0:	add	x2, x2, #0x858
   1cfa4:	add	x0, x0, #0x690
   1cfa8:	mov	x4, #0x1000                	// #4096
   1cfac:	mov	w1, #0x398                 	// #920
   1cfb0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1cfb4:	cmp	x3, x3, lsl #1
   1cfb8:	lsl	x20, x3, #1
   1cfbc:	ldr	x19, [x25, #16]
   1cfc0:	b.cs	1cfe4 <__sanitizer_set_report_fd@@Base+0x5224>  // b.hs, b.nlast
   1cfc4:	cmp	x20, x19
   1cfc8:	b.hi	1d0b8 <__sanitizer_set_report_fd@@Base+0x52f8>  // b.pmore
   1cfcc:	ldr	x19, [x23]
   1cfd0:	add	x0, x19, x3
   1cfd4:	sub	x2, x20, x3
   1cfd8:	mov	w1, #0x0                   	// #0
   1cfdc:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1cfe0:	ldr	x19, [x25, #16]
   1cfe4:	mov	x3, x20
   1cfe8:	mov	w24, #0x1                   	// #1
   1cfec:	str	x20, [x23, #16]
   1cff0:	mov	w20, #0x0                   	// #0
   1cff4:	b	1cdf8 <__sanitizer_set_report_fd@@Base+0x5038>
   1cff8:	tst	x3, x0
   1cffc:	b.eq	1d038 <__sanitizer_set_report_fd@@Base+0x5278>  // b.none
   1d000:	clz	x2, x0
   1d004:	mov	w1, #0x3f                  	// #63
   1d008:	sub	w2, w1, w2
   1d00c:	mov	x1, #0x1                   	// #1
   1d010:	add	w4, w2, #0x1
   1d014:	lsl	x4, x1, x4
   1d018:	cmp	x4, x0
   1d01c:	b.ls	1d118 <__sanitizer_set_report_fd@@Base+0x5358>  // b.plast
   1d020:	lsl	x1, x1, x2
   1d024:	cmp	x1, x0
   1d028:	b.cs	1d1ac <__sanitizer_set_report_fd@@Base+0x53ec>  // b.hs, b.nlast
   1d02c:	cmp	x3, x4
   1d030:	b.hi	1d184 <__sanitizer_set_report_fd@@Base+0x53c4>  // b.pmore
   1d034:	mov	x0, x4
   1d038:	ldr	x1, [sp, #104]
   1d03c:	ldr	x2, [x1]
   1d040:	lsl	x1, x0, #3
   1d044:	cbz	x2, 1d158 <__sanitizer_set_report_fd@@Base+0x5398>
   1d048:	sub	x0, x2, #0x1
   1d04c:	tst	x2, x0
   1d050:	b.ne	1d174 <__sanitizer_set_report_fd@@Base+0x53b4>  // b.any
   1d054:	add	x0, x1, x0
   1d058:	neg	x2, x2
   1d05c:	and	x4, x0, x2
   1d060:	mov	x1, x21
   1d064:	mov	x0, x4
   1d068:	mov	w2, #0x0                   	// #0
   1d06c:	str	x4, [sp, #120]
   1d070:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   1d074:	str	x0, [sp, #112]
   1d078:	ldr	x1, [x28]
   1d07c:	ldr	x2, [x28, #16]
   1d080:	lsl	x2, x2, #3
   1d084:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   1d088:	ldp	x0, x1, [x28]
   1d08c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1d090:	ldr	x3, [x28, #16]
   1d094:	ldp	x7, x4, [sp, #112]
   1d098:	add	x0, x3, #0x1
   1d09c:	stp	x7, x4, [x28]
   1d0a0:	b	1cec4 <__sanitizer_set_report_fd@@Base+0x5104>
   1d0a4:	mov	w24, #0x1                   	// #1
   1d0a8:	mov	w20, #0x0                   	// #0
   1d0ac:	ldr	x3, [x23, #16]
   1d0b0:	ldr	x19, [x25, #16]
   1d0b4:	b	1cdf8 <__sanitizer_set_report_fd@@Base+0x5038>
   1d0b8:	cbz	x20, 1d1cc <__sanitizer_set_report_fd@@Base+0x540c>
   1d0bc:	ldr	x19, [x22, #4016]
   1d0c0:	ldr	x0, [x19]
   1d0c4:	cbz	x0, 1d19c <__sanitizer_set_report_fd@@Base+0x53dc>
   1d0c8:	sub	x1, x0, #0x1
   1d0cc:	tst	x0, x1
   1d0d0:	b.ne	1d174 <__sanitizer_set_report_fd@@Base+0x53b4>  // b.any
   1d0d4:	add	x1, x20, x1
   1d0d8:	neg	x0, x0
   1d0dc:	and	x21, x1, x0
   1d0e0:	mov	w2, #0x0                   	// #0
   1d0e4:	mov	x0, x21
   1d0e8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1d0ec:	add	x1, x1, #0xb50
   1d0f0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   1d0f4:	ldr	x1, [x23]
   1d0f8:	mov	x19, x0
   1d0fc:	ldr	x2, [x23, #16]
   1d100:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   1d104:	ldp	x0, x1, [x23]
   1d108:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1d10c:	stp	x19, x21, [x23]
   1d110:	ldr	x3, [x23, #16]
   1d114:	b	1cfd0 <__sanitizer_set_report_fd@@Base+0x5210>
   1d118:	mov	x3, x0
   1d11c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   1d120:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1d124:	add	x2, x2, #0x5c0
   1d128:	add	x0, x0, #0xad8
   1d12c:	mov	w1, #0x18a                 	// #394
   1d130:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1d134:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d138:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1d13c:	add	x2, x2, #0x808
   1d140:	add	x0, x0, #0xad8
   1d144:	mov	w1, #0x1cd                 	// #461
   1d148:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1d14c:	ldp	x21, x22, [sp, #16]
   1d150:	ldp	x27, x28, [sp, #64]
   1d154:	b	1cf54 <__sanitizer_set_report_fd@@Base+0x5194>
   1d158:	mov	x0, #0x6                   	// #6
   1d15c:	str	x1, [sp, #112]
   1d160:	bl	6570 <getauxval@plt>
   1d164:	mov	x2, x0
   1d168:	ldp	x0, x1, [sp, #104]
   1d16c:	str	x2, [x0]
   1d170:	b	1d048 <__sanitizer_set_report_fd@@Base+0x5288>
   1d174:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1d178:	add	x0, x0, #0xb38
   1d17c:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1d180:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1d184:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d188:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1d18c:	add	x2, x2, #0x838
   1d190:	add	x0, x0, #0xad8
   1d194:	mov	w1, #0x20c                 	// #524
   1d198:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1d19c:	mov	x0, #0x6                   	// #6
   1d1a0:	bl	6570 <getauxval@plt>
   1d1a4:	str	x0, [x19]
   1d1a8:	b	1d0c8 <__sanitizer_set_report_fd@@Base+0x5308>
   1d1ac:	mov	x4, x1
   1d1b0:	mov	x3, x0
   1d1b4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   1d1b8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1d1bc:	add	x2, x2, #0x648
   1d1c0:	add	x0, x0, #0xad8
   1d1c4:	mov	w1, #0x18b                 	// #395
   1d1c8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1d1cc:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1d1d0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   1d1d4:	add	x2, x2, #0xab8
   1d1d8:	add	x0, x0, #0xad8
   1d1dc:	mov	x4, #0x0                   	// #0
   1d1e0:	mov	x3, #0x0                   	// #0
   1d1e4:	mov	w1, #0x20b                 	// #523
   1d1e8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1d1ec:	nop
   1d1f0:	mov	x1, x0
   1d1f4:	ldrsw	x0, [x0, #4]
   1d1f8:	cmn	x0, #0x1, lsl #12
   1d1fc:	b.hi	1d208 <__sanitizer_set_report_fd@@Base+0x5448>  // b.pmore
   1d200:	mov	x8, #0x39                  	// #57
   1d204:	svc	#0x0
   1d208:	ldp	x0, x1, [x1, #8]
   1d20c:	b	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1d210:	stp	x29, x30, [sp, #-16]!
   1d214:	mov	x0, #0x1                   	// #1
   1d218:	mov	x29, sp
   1d21c:	clz	x1, x29
   1d220:	neg	w1, w1
   1d224:	ldp	x29, x30, [sp], #16
   1d228:	lsl	x0, x0, x1
   1d22c:	sub	x0, x0, #0x1
   1d230:	ret
   1d234:	nop
   1d238:	stp	x29, x30, [sp, #-16]!
   1d23c:	mov	x0, #0x1                   	// #1
   1d240:	mov	x29, sp
   1d244:	clz	x1, x29
   1d248:	neg	w1, w1
   1d24c:	ldp	x29, x30, [sp], #16
   1d250:	lsl	x0, x0, x1
   1d254:	sub	x0, x0, #0x1
   1d258:	ret
   1d25c:	nop
   1d260:	mov	x0, #0x6                   	// #6
   1d264:	b	6570 <getauxval@plt>
   1d268:	stp	x19, x20, [sp, #-32]!
   1d26c:	mov	x2, x0
   1d270:	mov	x20, x0
   1d274:	mov	x19, x1
   1d278:	mov	x3, x1
   1d27c:	mov	x8, #0x4e                  	// #78
   1d280:	mov	x0, #0xffffffffffffff9c    	// #-100
   1d284:	stp	x21, x30, [sp, #16]
   1d288:	adrp	x21, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d28c:	add	x1, x21, #0x8b0
   1d290:	svc	#0x0
   1d294:	cmn	x0, #0x1, lsl #12
   1d298:	b.hi	1d2a8 <__sanitizer_set_report_fd@@Base+0x54e8>  // b.pmore
   1d29c:	ldp	x21, x30, [sp, #16]
   1d2a0:	ldp	x19, x20, [sp], #32
   1d2a4:	ret
   1d2a8:	neg	w1, w0
   1d2ac:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d2b0:	add	x0, x0, #0x8c0
   1d2b4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1d2b8:	add	x3, x21, #0x8b0
   1d2bc:	mov	x0, x20
   1d2c0:	mov	x1, x19
   1d2c4:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1d2c8:	add	x2, x2, #0xbf8
   1d2cc:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   1d2d0:	cmp	x19, w0, sxtw
   1d2d4:	sxtw	x0, w0
   1d2d8:	b.hi	1d29c <__sanitizer_set_report_fd@@Base+0x54dc>  // b.pmore
   1d2dc:	mov	x3, x0
   1d2e0:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d2e4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d2e8:	mov	x4, x19
   1d2ec:	add	x2, x2, #0x920
   1d2f0:	add	x0, x0, #0x690
   1d2f4:	mov	w1, #0x45c                 	// #1116
   1d2f8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1d2fc:	nop
   1d300:	stp	x19, x20, [sp, #-64]!
   1d304:	mov	x5, #0x0                   	// #0
   1d308:	mov	x19, x0
   1d30c:	mov	x20, x1
   1d310:	add	x3, sp, #0x38
   1d314:	add	x2, sp, #0x30
   1d318:	add	x1, sp, #0x28
   1d31c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d320:	mov	x4, #0x100000              	// #1048576
   1d324:	add	x0, x0, #0x700
   1d328:	str	x30, [sp, #24]
   1d32c:	bl	174d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   1d330:	tst	w0, #0xff
   1d334:	b.eq	1d364 <__sanitizer_set_report_fd@@Base+0x55a4>  // b.none
   1d338:	ldr	x1, [sp, #40]
   1d33c:	mov	x2, x20
   1d340:	mov	x0, x19
   1d344:	bl	1b408 <__sanitizer_set_report_fd@@Base+0x3648>
   1d348:	ldp	x0, x1, [sp, #40]
   1d34c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1d350:	mov	x0, x19
   1d354:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   1d358:	ldr	x30, [sp, #24]
   1d35c:	ldp	x19, x20, [sp], #64
   1d360:	ret
   1d364:	mov	x2, x19
   1d368:	mov	x3, x20
   1d36c:	mov	x8, #0x4e                  	// #78
   1d370:	mov	x0, #0xffffffffffffff9c    	// #-100
   1d374:	str	x21, [sp, #16]
   1d378:	adrp	x21, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d37c:	add	x1, x21, #0x8b0
   1d380:	svc	#0x0
   1d384:	cmn	x0, #0x1, lsl #12
   1d388:	b.hi	1d39c <__sanitizer_set_report_fd@@Base+0x55dc>  // b.pmore
   1d38c:	ldr	x21, [sp, #16]
   1d390:	ldr	x30, [sp, #24]
   1d394:	ldp	x19, x20, [sp], #64
   1d398:	ret
   1d39c:	neg	w1, w0
   1d3a0:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d3a4:	add	x0, x0, #0x8c0
   1d3a8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1d3ac:	add	x3, x21, #0x8b0
   1d3b0:	mov	x0, x19
   1d3b4:	mov	x1, x20
   1d3b8:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1d3bc:	add	x2, x2, #0xbf8
   1d3c0:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   1d3c4:	cmp	x20, w0, sxtw
   1d3c8:	sxtw	x0, w0
   1d3cc:	b.hi	1d38c <__sanitizer_set_report_fd@@Base+0x55cc>  // b.pmore
   1d3d0:	mov	x3, x0
   1d3d4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d3d8:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d3dc:	mov	x4, x20
   1d3e0:	add	x2, x2, #0x920
   1d3e4:	add	x0, x0, #0x690
   1d3e8:	mov	w1, #0x45c                 	// #1116
   1d3ec:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1d3f0:	stp	x19, x20, [sp, #-32]!
   1d3f4:	mov	x20, x1
   1d3f8:	mov	x19, x0
   1d3fc:	str	x30, [sp, #16]
   1d400:	ldrb	w1, [x0]
   1d404:	cbz	w1, 1d438 <__sanitizer_set_report_fd@@Base+0x5678>
   1d408:	ldrb	w2, [x19, #1]!
   1d40c:	cbnz	w2, 1d408 <__sanitizer_set_report_fd@@Base+0x5648>
   1d410:	cmp	x0, x19
   1d414:	b.cc	1d428 <__sanitizer_set_report_fd@@Base+0x5668>  // b.lo, b.ul, b.last
   1d418:	b	1d438 <__sanitizer_set_report_fd@@Base+0x5678>
   1d41c:	ldrb	w2, [x19, #-1]!
   1d420:	cmp	x0, x19
   1d424:	b.eq	1d480 <__sanitizer_set_report_fd@@Base+0x56c0>  // b.none
   1d428:	ldrb	w2, [x19]
   1d42c:	cmp	w2, #0x2f
   1d430:	b.ne	1d41c <__sanitizer_set_report_fd@@Base+0x565c>  // b.any
   1d434:	add	x19, x19, #0x1
   1d438:	mov	x0, x20
   1d43c:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   1d440:	mov	x1, x20
   1d444:	mov	x20, x0
   1d448:	mov	x2, x20
   1d44c:	mov	x0, x19
   1d450:	bl	1a4e8 <__sanitizer_set_report_fd@@Base+0x2728>
   1d454:	mov	w1, #0x0                   	// #0
   1d458:	cbnz	w0, 1d470 <__sanitizer_set_report_fd@@Base+0x56b0>
   1d45c:	ldrb	w0, [x19, x20]
   1d460:	sub	w0, w0, #0x2d
   1d464:	and	w0, w0, #0xff
   1d468:	cmp	w0, #0x1
   1d46c:	cset	w1, ls  // ls = plast
   1d470:	mov	w0, w1
   1d474:	ldr	x30, [sp, #16]
   1d478:	ldp	x19, x20, [sp], #32
   1d47c:	ret
   1d480:	cmp	w2, #0x2f
   1d484:	b.ne	1d438 <__sanitizer_set_report_fd@@Base+0x5678>  // b.any
   1d488:	add	x19, x19, #0x1
   1d48c:	b	1d438 <__sanitizer_set_report_fd@@Base+0x5678>
   1d490:	stp	x19, x20, [sp, #-80]!
   1d494:	stp	x21, x22, [sp, #16]
   1d498:	str	x30, [sp, #72]
   1d49c:	cbz	x0, 1d5dc <__sanitizer_set_report_fd@@Base+0x581c>
   1d4a0:	str	x27, [sp, #64]
   1d4a4:	mov	x21, x1
   1d4a8:	ldr	x27, [x0]
   1d4ac:	mov	x22, #0xffffffffffffffff    	// #-1
   1d4b0:	ldrh	w0, [x27, #54]
   1d4b4:	ldrh	w20, [x27, #56]
   1d4b8:	ldr	x19, [x27, #32]
   1d4bc:	and	x2, x0, #0xffff
   1d4c0:	mul	w20, w20, w0
   1d4c4:	add	x19, x27, x19
   1d4c8:	mov	x0, x19
   1d4cc:	add	x20, x19, w20, sxtw
   1d4d0:	cmp	x19, x20
   1d4d4:	b.eq	1d588 <__sanitizer_set_report_fd@@Base+0x57c8>  // b.none
   1d4d8:	stp	x23, x24, [sp, #32]
   1d4dc:	stp	x25, x26, [sp, #48]
   1d4e0:	ldr	w3, [x0]
   1d4e4:	cmp	w3, #0x1
   1d4e8:	b.ne	1d4f8 <__sanitizer_set_report_fd@@Base+0x5738>  // b.any
   1d4ec:	ldr	x1, [x0, #16]
   1d4f0:	cmp	x22, x1
   1d4f4:	csel	x22, x22, x1, ls  // ls = plast
   1d4f8:	add	x0, x0, x2
   1d4fc:	cmp	x20, x0
   1d500:	b.ne	1d4e0 <__sanitizer_set_report_fd@@Base+0x5720>  // b.any
   1d504:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1d508:	sub	x22, x27, x22
   1d50c:	ldr	x23, [x23, #4016]
   1d510:	b	1d520 <__sanitizer_set_report_fd@@Base+0x5760>
   1d514:	add	x19, x19, x2
   1d518:	cmp	x20, x19
   1d51c:	b.eq	1d580 <__sanitizer_set_report_fd@@Base+0x57c0>  // b.none
   1d520:	ldr	w0, [x19]
   1d524:	cmp	w0, #0x1
   1d528:	b.ne	1d514 <__sanitizer_set_report_fd@@Base+0x5754>  // b.any
   1d52c:	ldr	x0, [x23]
   1d530:	ldr	x25, [x19, #16]
   1d534:	neg	x24, x0
   1d538:	ldr	x1, [x19, #40]
   1d53c:	add	x25, x22, x25
   1d540:	and	x24, x24, x25
   1d544:	add	x26, x25, x1
   1d548:	cbz	x0, 1d59c <__sanitizer_set_report_fd@@Base+0x57dc>
   1d54c:	sub	x2, x0, #0x1
   1d550:	tst	x2, x0
   1d554:	b.ne	1d5cc <__sanitizer_set_report_fd@@Base+0x580c>  // b.any
   1d558:	add	x2, x2, x26
   1d55c:	neg	x0, x0
   1d560:	and	x1, x2, x0
   1d564:	mov	x0, x24
   1d568:	sub	x1, x1, x24
   1d56c:	blr	x21
   1d570:	ldrh	w2, [x27, #54]
   1d574:	add	x19, x19, x2
   1d578:	cmp	x20, x19
   1d57c:	b.ne	1d520 <__sanitizer_set_report_fd@@Base+0x5760>  // b.any
   1d580:	ldp	x23, x24, [sp, #32]
   1d584:	ldp	x25, x26, [sp, #48]
   1d588:	ldp	x21, x22, [sp, #16]
   1d58c:	ldr	x27, [sp, #64]
   1d590:	ldr	x30, [sp, #72]
   1d594:	ldp	x19, x20, [sp], #80
   1d598:	ret
   1d59c:	mov	x0, #0x6                   	// #6
   1d5a0:	bl	6570 <getauxval@plt>
   1d5a4:	str	x0, [x23]
   1d5a8:	neg	x24, x0
   1d5ac:	and	x24, x24, x25
   1d5b0:	cbnz	x0, 1d54c <__sanitizer_set_report_fd@@Base+0x578c>
   1d5b4:	mov	x0, #0x6                   	// #6
   1d5b8:	bl	6570 <getauxval@plt>
   1d5bc:	str	x0, [x23]
   1d5c0:	sub	x2, x0, #0x1
   1d5c4:	tst	x2, x0
   1d5c8:	b.eq	1d558 <__sanitizer_set_report_fd@@Base+0x5798>  // b.none
   1d5cc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1d5d0:	add	x0, x0, #0xb38
   1d5d4:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1d5d8:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1d5dc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d5e0:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d5e4:	add	x2, x2, #0x948
   1d5e8:	add	x0, x0, #0x690
   1d5ec:	mov	x4, #0x0                   	// #0
   1d5f0:	mov	x3, #0x0                   	// #0
   1d5f4:	mov	w1, #0x481                 	// #1153
   1d5f8:	stp	x23, x24, [sp, #32]
   1d5fc:	stp	x25, x26, [sp, #48]
   1d600:	str	x27, [sp, #64]
   1d604:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1d608:	cmp	x0, #0x0
   1d60c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1d610:	b.eq	1d664 <__sanitizer_set_report_fd@@Base+0x58a4>  // b.none
   1d614:	str	x30, [sp, #-16]!
   1d618:	mov	x7, x1
   1d61c:	ands	x1, x1, #0xf
   1d620:	b.ne	1d66c <__sanitizer_set_report_fd@@Base+0x58ac>  // b.any
   1d624:	sub	x1, x7, #0x10
   1d628:	stp	x0, x3, [x7, #-16]
   1d62c:	mov	x0, x2
   1d630:	mov	x2, x4
   1d634:	mov	x3, x5
   1d638:	mov	x4, x6
   1d63c:	mov	x8, #0xdc                  	// #220
   1d640:	svc	#0x0
   1d644:	cmp	x0, #0x0
   1d648:	b.ne	1d65c <__sanitizer_set_report_fd@@Base+0x589c>  // b.any
   1d64c:	ldp	x1, x0, [sp], #16
   1d650:	blr	x1
   1d654:	mov	x8, #0x5d                  	// #93
   1d658:	svc	#0x0
   1d65c:	ldr	x30, [sp], #16
   1d660:	ret
   1d664:	mov	x0, #0xffffffffffffffea    	// #-22
   1d668:	ret
   1d66c:	mov	x4, x1
   1d670:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d674:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d678:	add	x2, x2, #0x960
   1d67c:	add	x0, x0, #0x690
   1d680:	mov	x3, #0x0                   	// #0
   1d684:	mov	w1, #0x537                 	// #1335
   1d688:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1d68c:	nop
   1d690:	cmp	w0, #0x7
   1d694:	b.eq	1d740 <__sanitizer_set_report_fd@@Base+0x5980>  // b.none
   1d698:	b.gt	1d6e4 <__sanitizer_set_report_fd@@Base+0x5924>
   1d69c:	cmp	w0, #0x5
   1d6a0:	b.eq	1d758 <__sanitizer_set_report_fd@@Base+0x5998>  // b.none
   1d6a4:	cmp	w0, #0x6
   1d6a8:	b.ne	1d6c4 <__sanitizer_set_report_fd@@Base+0x5904>  // b.any
   1d6ac:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1d6b0:	ldr	x0, [x1, #4056]
   1d6b4:	ldr	w0, [x0, #80]
   1d6b8:	cmp	w0, #0x1
   1d6bc:	b.eq	1d708 <__sanitizer_set_report_fd@@Base+0x5948>  // b.none
   1d6c0:	ret
   1d6c4:	cmp	w0, #0x4
   1d6c8:	b.ne	1d720 <__sanitizer_set_report_fd@@Base+0x5960>  // b.any
   1d6cc:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1d6d0:	ldr	x0, [x1, #4056]
   1d6d4:	ldr	w0, [x0, #84]
   1d6d8:	cmp	w0, #0x1
   1d6dc:	b.ne	1d6c0 <__sanitizer_set_report_fd@@Base+0x5900>  // b.any
   1d6e0:	b	1d708 <__sanitizer_set_report_fd@@Base+0x5948>
   1d6e4:	cmp	w0, #0x8
   1d6e8:	b.eq	1d728 <__sanitizer_set_report_fd@@Base+0x5968>  // b.none
   1d6ec:	cmp	w0, #0xb
   1d6f0:	b.ne	1d720 <__sanitizer_set_report_fd@@Base+0x5960>  // b.any
   1d6f4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1d6f8:	ldr	x0, [x1, #4056]
   1d6fc:	ldr	w0, [x0, #72]
   1d700:	cmp	w0, #0x1
   1d704:	b.ne	1d6c0 <__sanitizer_set_report_fd@@Base+0x5900>  // b.any
   1d708:	ldr	x1, [x1, #4056]
   1d70c:	mov	w2, #0x2                   	// #2
   1d710:	ldrb	w1, [x1, #96]
   1d714:	cmp	w1, #0x0
   1d718:	csel	w0, w0, w2, ne  // ne = any
   1d71c:	ret
   1d720:	mov	w0, #0x0                   	// #0
   1d724:	ret
   1d728:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1d72c:	ldr	x0, [x1, #4056]
   1d730:	ldr	w0, [x0, #92]
   1d734:	cmp	w0, #0x1
   1d738:	b.ne	1d6c0 <__sanitizer_set_report_fd@@Base+0x5900>  // b.any
   1d73c:	b	1d708 <__sanitizer_set_report_fd@@Base+0x5948>
   1d740:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1d744:	ldr	x0, [x1, #4056]
   1d748:	ldr	w0, [x0, #76]
   1d74c:	cmp	w0, #0x1
   1d750:	b.ne	1d6c0 <__sanitizer_set_report_fd@@Base+0x5900>  // b.any
   1d754:	b	1d708 <__sanitizer_set_report_fd@@Base+0x5948>
   1d758:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1d75c:	ldr	x0, [x1, #4056]
   1d760:	ldr	w0, [x0, #88]
   1d764:	cmp	w0, #0x1
   1d768:	b.ne	1d6c0 <__sanitizer_set_report_fd@@Base+0x5900>  // b.any
   1d76c:	b	1d708 <__sanitizer_set_report_fd@@Base+0x5948>
   1d770:	stp	x19, x20, [sp, #-320]!
   1d774:	mov	x2, #0x80                  	// #128
   1d778:	add	x20, sp, #0x40
   1d77c:	stp	x21, x22, [sp, #16]
   1d780:	mov	x21, x0
   1d784:	mov	x22, x1
   1d788:	mov	x0, x20
   1d78c:	mov	w1, #0xff                  	// #255
   1d790:	str	x30, [sp, #32]
   1d794:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1d798:	add	x19, sp, #0xc0
   1d79c:	ldrb	w4, [sp, #68]
   1d7a0:	mov	x1, x20
   1d7a4:	mov	x2, x19
   1d7a8:	mov	x8, #0x87                  	// #135
   1d7ac:	and	w4, w4, #0xfffffffe
   1d7b0:	mov	x0, #0x2                   	// #2
   1d7b4:	mov	x3, #0x8                   	// #8
   1d7b8:	strb	w4, [sp, #68]
   1d7bc:	svc	#0x0
   1d7c0:	mov	x1, #0x0                   	// #0
   1d7c4:	mov	x3, x22
   1d7c8:	mov	x2, x21
   1d7cc:	add	x0, sp, #0x38
   1d7d0:	bl	65b0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
   1d7d4:	mov	x1, x19
   1d7d8:	mov	x8, #0x87                  	// #135
   1d7dc:	mov	x0, #0x2                   	// #2
   1d7e0:	mov	x2, #0x0                   	// #0
   1d7e4:	mov	x3, #0x8                   	// #8
   1d7e8:	svc	#0x0
   1d7ec:	ldp	x21, x22, [sp, #16]
   1d7f0:	ldr	x30, [sp, #32]
   1d7f4:	ldr	x0, [sp, #56]
   1d7f8:	ldp	x19, x20, [sp], #320
   1d7fc:	ret
   1d800:	mov	x1, #0x0                   	// #0
   1d804:	b	6340 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
   1d808:	ldr	x0, [x0, #8]
   1d80c:	add	x1, x0, #0x1d0
   1d810:	ldr	w0, [x0, #468]
   1d814:	cbz	w0, 1d848 <__sanitizer_set_report_fd@@Base+0x5a88>
   1d818:	mov	w3, #0x5201                	// #20993
   1d81c:	movk	w3, #0x4553, lsl #16
   1d820:	b	1d830 <__sanitizer_set_report_fd@@Base+0x5a70>
   1d824:	add	x1, x1, w0, uxtw
   1d828:	ldr	w0, [x1, #4]
   1d82c:	cbz	w0, 1d848 <__sanitizer_set_report_fd@@Base+0x5a88>
   1d830:	ldr	w2, [x1]
   1d834:	cmp	w2, w3
   1d838:	b.ne	1d824 <__sanitizer_set_report_fd@@Base+0x5a64>  // b.any
   1d83c:	ldr	x0, [x1, #8]
   1d840:	ubfx	w0, w0, #6, #1
   1d844:	add	w0, w0, #0x1
   1d848:	ret
   1d84c:	nop
   1d850:	ldr	x0, [x0]
   1d854:	ldr	w1, [x0]
   1d858:	cmp	w1, #0xb
   1d85c:	b.eq	1d868 <__sanitizer_set_report_fd@@Base+0x5aa8>  // b.none
   1d860:	mov	w0, #0x0                   	// #0
   1d864:	ret
   1d868:	ldr	w0, [x0, #8]
   1d86c:	cmp	w0, #0x80
   1d870:	cset	w0, ne  // ne = any
   1d874:	ret
   1d878:	ret
   1d87c:	nop
   1d880:	ldr	x1, [x0, #8]
   1d884:	ldr	x2, [x1, #416]
   1d888:	ldp	x3, x1, [x1, #432]
   1d88c:	stp	x1, x3, [x0, #24]
   1d890:	str	x2, [x0, #40]
   1d894:	ret
   1d898:	ret
   1d89c:	nop
   1d8a0:	ret
   1d8a4:	nop
   1d8a8:	ret
   1d8ac:	nop
   1d8b0:	ret
   1d8b4:	nop
   1d8b8:	ret
   1d8bc:	nop
   1d8c0:	tbnz	w1, #3, 1d8c8 <__sanitizer_set_report_fd@@Base+0x5b08>
   1d8c4:	ret
   1d8c8:	mov	x2, x0
   1d8cc:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d8d0:	add	x0, x1, #0x988
   1d8d4:	mov	x1, x2
   1d8d8:	str	x30, [sp, #-16]!
   1d8dc:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1d8e0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1d8e4:	nop
   1d8e8:	str	x30, [sp, #-16]!
   1d8ec:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d8f0:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d8f4:	add	x2, x2, #0xaa0
   1d8f8:	add	x0, x0, #0x690
   1d8fc:	mov	x4, #0x0                   	// #0
   1d900:	mov	x3, #0x0                   	// #0
   1d904:	mov	w1, #0x83a                 	// #2106
   1d908:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1d90c:	nop
   1d910:	sub	x5, x1, #0x1
   1d914:	mov	x3, x1
   1d918:	cmp	x5, #0xff
   1d91c:	mov	x4, x0
   1d920:	and	w2, w2, #0xff
   1d924:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
   1d928:	b.ne	1d934 <__sanitizer_set_report_fd@@Base+0x5b74>  // b.any
   1d92c:	mov	w0, #0x0                   	// #0
   1d930:	ret
   1d934:	adrp	x5, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   1d938:	add	x5, x5, #0x6c8
   1d93c:	ldrb	w6, [x5, #24]
   1d940:	tst	w6, #0xff
   1d944:	b.ne	1d96c <__sanitizer_set_report_fd@@Base+0x5bac>  // b.any
   1d948:	eor	w2, w2, #0x1
   1d94c:	mov	x8, #0x116                 	// #278
   1d950:	and	x2, x2, #0xff
   1d954:	svc	#0x0
   1d958:	cmn	x0, #0x1, lsl #12
   1d95c:	b.hi	1d9c0 <__sanitizer_set_report_fd@@Base+0x5c00>  // b.pmore
   1d960:	cmp	x1, x0
   1d964:	mov	w0, #0x1                   	// #1
   1d968:	b.eq	1d930 <__sanitizer_set_report_fd@@Base+0x5b70>  // b.none
   1d96c:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1d970:	mov	x8, #0x38                  	// #56
   1d974:	add	x1, x1, #0xae0
   1d978:	mov	x0, #0xffffffffffffff9c    	// #-100
   1d97c:	mov	x2, #0x0                   	// #0
   1d980:	svc	#0x0
   1d984:	cmn	x0, #0x1, lsl #12
   1d988:	b.hi	1d92c <__sanitizer_set_report_fd@@Base+0x5b6c>  // b.pmore
   1d98c:	sxtw	x5, w0
   1d990:	mov	x0, x5
   1d994:	mov	x1, x4
   1d998:	mov	x2, x3
   1d99c:	mov	x8, #0x3f                  	// #63
   1d9a0:	svc	#0x0
   1d9a4:	cmn	x0, #0x1, lsl #12
   1d9a8:	b.hi	1d9d4 <__sanitizer_set_report_fd@@Base+0x5c14>  // b.pmore
   1d9ac:	mov	x0, x5
   1d9b0:	mov	x8, #0x39                  	// #57
   1d9b4:	svc	#0x0
   1d9b8:	mov	w0, #0x1                   	// #1
   1d9bc:	ret
   1d9c0:	cmn	w0, #0x26
   1d9c4:	b.ne	1d96c <__sanitizer_set_report_fd@@Base+0x5bac>  // b.any
   1d9c8:	mov	w0, #0x1                   	// #1
   1d9cc:	strb	w0, [x5, #24]
   1d9d0:	b	1d96c <__sanitizer_set_report_fd@@Base+0x5bac>
   1d9d4:	cmn	w0, #0x4
   1d9d8:	b.eq	1d990 <__sanitizer_set_report_fd@@Base+0x5bd0>  // b.none
   1d9dc:	mov	w0, #0x0                   	// #0
   1d9e0:	b	1d930 <__sanitizer_set_report_fd@@Base+0x5b70>
   1d9e4:	nop
   1d9e8:	cmp	w0, #0x2
   1d9ec:	b.eq	1da00 <__sanitizer_set_report_fd@@Base+0x5c40>  // b.none
   1d9f0:	cmp	w0, #0xa
   1d9f4:	cset	x0, eq  // eq = none
   1d9f8:	lsl	x0, x0, #4
   1d9fc:	ret
   1da00:	mov	x0, #0x4                   	// #4
   1da04:	ret
   1da08:	b	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1da0c:	nop
   1da10:	cmp	x0, #0x0
   1da14:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1da18:	b.ne	1da20 <__sanitizer_set_report_fd@@Base+0x5c60>  // b.any
   1da1c:	ret
   1da20:	stp	x19, x20, [sp, #-32]!
   1da24:	mov	x19, x1
   1da28:	mov	x20, x0
   1da2c:	str	x30, [sp, #16]
   1da30:	bl	1c0f8 <__sanitizer_set_report_fd@@Base+0x4338>
   1da34:	mov	x1, #0x0                   	// #0
   1da38:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1da3c:	tst	w0, #0xff
   1da40:	b.ne	1da54 <__sanitizer_set_report_fd@@Base+0x5c94>  // b.any
   1da44:	mov	x0, x19
   1da48:	ldr	x30, [sp, #16]
   1da4c:	ldp	x19, x20, [sp], #32
   1da50:	b	14bf8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
   1da54:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1da58:	mov	x4, x20
   1da5c:	mov	x3, x19
   1da60:	mov	x2, x19
   1da64:	ldr	x1, [x1, #4024]
   1da68:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1da6c:	add	x0, x0, #0xb30
   1da70:	ldr	x1, [x1]
   1da74:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1da78:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   1da7c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1da80:	add	x2, x2, #0x828
   1da84:	add	x0, x0, #0xb70
   1da88:	mov	x4, #0x0                   	// #0
   1da8c:	mov	x3, #0x0                   	// #0
   1da90:	mov	w1, #0x3d                  	// #61
   1da94:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1da98:	str	x30, [sp, #-16]!
   1da9c:	mov	w2, #0x0                   	// #0
   1daa0:	bl	1c108 <__sanitizer_set_report_fd@@Base+0x4348>
   1daa4:	cmp	w0, #0x0
   1daa8:	cset	w0, eq  // eq = none
   1daac:	ldr	x30, [sp], #16
   1dab0:	ret
   1dab4:	nop
   1dab8:	str	x30, [sp, #-16]!
   1dabc:	mov	w2, #0x1                   	// #1
   1dac0:	bl	1c108 <__sanitizer_set_report_fd@@Base+0x4348>
   1dac4:	cmp	w0, #0x0
   1dac8:	cset	w0, eq  // eq = none
   1dacc:	ldr	x30, [sp], #16
   1dad0:	ret
   1dad4:	nop
   1dad8:	ret
   1dadc:	nop
   1dae0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1dae4:	stp	x19, x20, [sp, #-64]!
   1dae8:	mov	w19, w1
   1daec:	ldr	x3, [x3, #4056]
   1daf0:	stp	x21, x22, [sp, #16]
   1daf4:	mov	x20, x2
   1daf8:	mov	x21, x0
   1dafc:	ldrb	w1, [x3, #243]
   1db00:	str	x30, [sp, #32]
   1db04:	cbnz	w1, 1dbcc <__sanitizer_set_report_fd@@Base+0x5e0c>
   1db08:	cmp	w19, #0x2
   1db0c:	b.ls	1db58 <__sanitizer_set_report_fd@@Base+0x5d98>  // b.plast
   1db10:	mov	w2, #0x1b0                 	// #432
   1db14:	mov	w1, w22
   1db18:	mov	x0, x21
   1db1c:	bl	1c140 <__sanitizer_set_report_fd@@Base+0x4380>
   1db20:	mov	x1, x20
   1db24:	mov	w19, w0
   1db28:	mov	x20, x0
   1db2c:	sxtw	x0, w0
   1db30:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1db34:	tst	w0, #0xff
   1db38:	b.ne	1dbe0 <__sanitizer_set_report_fd@@Base+0x5e20>  // b.any
   1db3c:	cmp	w20, #0x2
   1db40:	b.le	1db68 <__sanitizer_set_report_fd@@Base+0x5da8>
   1db44:	mov	w0, w19
   1db48:	ldp	x21, x22, [sp, #16]
   1db4c:	ldr	x30, [sp, #32]
   1db50:	ldp	x19, x20, [sp], #64
   1db54:	ret
   1db58:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1db5c:	add	x0, x0, #0xe18
   1db60:	ldr	w22, [x0, w19, uxtw #2]
   1db64:	b	1db10 <__sanitizer_set_report_fd@@Base+0x5d50>
   1db68:	add	x20, sp, #0x38
   1db6c:	mov	w21, #0x1                   	// #1
   1db70:	mov	x0, x20
   1db74:	mov	x2, #0x3                   	// #3
   1db78:	mov	w1, #0x0                   	// #0
   1db7c:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1db80:	mov	w0, w19
   1db84:	strb	w21, [x20, w19, sxtw]
   1db88:	bl	1c250 <__sanitizer_set_report_fd@@Base+0x4490>
   1db8c:	mov	x19, x0
   1db90:	cmp	w0, #0x2
   1db94:	b.le	1db80 <__sanitizer_set_report_fd@@Base+0x5dc0>
   1db98:	ldrb	w0, [sp, #56]
   1db9c:	cbnz	w0, 1dc04 <__sanitizer_set_report_fd@@Base+0x5e44>
   1dba0:	ldrb	w0, [sp, #57]
   1dba4:	cbnz	w0, 1dbf8 <__sanitizer_set_report_fd@@Base+0x5e38>
   1dba8:	ldrb	w0, [sp, #58]
   1dbac:	cbz	w0, 1db44 <__sanitizer_set_report_fd@@Base+0x5d84>
   1dbb0:	mov	w0, #0x2                   	// #2
   1dbb4:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   1dbb8:	mov	w0, w19
   1dbbc:	ldp	x21, x22, [sp, #16]
   1dbc0:	ldr	x30, [sp, #32]
   1dbc4:	ldp	x19, x20, [sp], #64
   1dbc8:	ret
   1dbcc:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1dbd0:	mov	x2, #0x6                   	// #6
   1dbd4:	add	x1, x1, #0xbc8
   1dbd8:	bl	1a4e8 <__sanitizer_set_report_fd@@Base+0x2728>
   1dbdc:	cbnz	w0, 1db08 <__sanitizer_set_report_fd@@Base+0x5d48>
   1dbe0:	mov	w19, #0xffffffff            	// #-1
   1dbe4:	mov	w0, w19
   1dbe8:	ldp	x21, x22, [sp, #16]
   1dbec:	ldr	x30, [sp, #32]
   1dbf0:	ldp	x19, x20, [sp], #64
   1dbf4:	ret
   1dbf8:	mov	w0, #0x1                   	// #1
   1dbfc:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   1dc00:	b	1dba8 <__sanitizer_set_report_fd@@Base+0x5de8>
   1dc04:	mov	w0, #0x0                   	// #0
   1dc08:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   1dc0c:	b	1dba0 <__sanitizer_set_report_fd@@Base+0x5de0>
   1dc10:	b	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   1dc14:	nop
   1dc18:	stp	x19, x20, [sp, #-32]!
   1dc1c:	mov	x20, x4
   1dc20:	mov	x19, x3
   1dc24:	str	x30, [sp, #16]
   1dc28:	bl	1c160 <__sanitizer_set_report_fd@@Base+0x43a0>
   1dc2c:	mov	x1, x20
   1dc30:	mov	x20, x0
   1dc34:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1dc38:	tst	w0, #0xff
   1dc3c:	b.ne	1dc58 <__sanitizer_set_report_fd@@Base+0x5e98>  // b.any
   1dc40:	mov	w0, #0x1                   	// #1
   1dc44:	cbz	x19, 1dc4c <__sanitizer_set_report_fd@@Base+0x5e8c>
   1dc48:	str	x20, [x19]
   1dc4c:	ldr	x30, [sp, #16]
   1dc50:	ldp	x19, x20, [sp], #32
   1dc54:	ret
   1dc58:	mov	w0, #0x0                   	// #0
   1dc5c:	ldr	x30, [sp, #16]
   1dc60:	ldp	x19, x20, [sp], #32
   1dc64:	ret
   1dc68:	stp	x19, x20, [sp, #-32]!
   1dc6c:	mov	x20, x4
   1dc70:	mov	x19, x3
   1dc74:	str	x30, [sp, #16]
   1dc78:	bl	1c188 <__sanitizer_set_report_fd@@Base+0x43c8>
   1dc7c:	mov	x1, x20
   1dc80:	mov	x20, x0
   1dc84:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1dc88:	tst	w0, #0xff
   1dc8c:	b.ne	1dca8 <__sanitizer_set_report_fd@@Base+0x5ee8>  // b.any
   1dc90:	mov	w0, #0x1                   	// #1
   1dc94:	cbz	x19, 1dc9c <__sanitizer_set_report_fd@@Base+0x5edc>
   1dc98:	str	x20, [x19]
   1dc9c:	ldr	x30, [sp, #16]
   1dca0:	ldp	x19, x20, [sp], #32
   1dca4:	ret
   1dca8:	mov	w0, #0x0                   	// #0
   1dcac:	ldr	x30, [sp, #16]
   1dcb0:	ldp	x19, x20, [sp], #32
   1dcb4:	ret
   1dcb8:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1dcbc:	stp	x19, x20, [sp, #-64]!
   1dcc0:	mov	x19, x0
   1dcc4:	ldr	x2, [x2, #4056]
   1dcc8:	stp	x21, x22, [sp, #16]
   1dccc:	mov	x21, x1
   1dcd0:	ldrb	w1, [x2, #243]
   1dcd4:	str	x30, [sp, #32]
   1dcd8:	cbnz	w1, 1ddf4 <__sanitizer_set_report_fd@@Base+0x6034>
   1dcdc:	mov	w2, #0x1b0                 	// #432
   1dce0:	mov	x0, x19
   1dce4:	mov	w1, #0x0                   	// #0
   1dce8:	bl	1c140 <__sanitizer_set_report_fd@@Base+0x4380>
   1dcec:	mov	x1, #0x0                   	// #0
   1dcf0:	mov	x20, x0
   1dcf4:	mov	w19, w0
   1dcf8:	sxtw	x0, w0
   1dcfc:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1dd00:	tst	w0, #0xff
   1dd04:	b.ne	1de08 <__sanitizer_set_report_fd@@Base+0x6048>  // b.any
   1dd08:	cmp	w20, #0x2
   1dd0c:	b.le	1dda0 <__sanitizer_set_report_fd@@Base+0x5fe0>
   1dd10:	mov	w0, w19
   1dd14:	bl	1c228 <__sanitizer_set_report_fd@@Base+0x4468>
   1dd18:	mov	x20, x0
   1dd1c:	cmn	x0, #0x1
   1dd20:	b.eq	1de40 <__sanitizer_set_report_fd@@Base+0x6080>  // b.none
   1dd24:	cbz	x20, 1de60 <__sanitizer_set_report_fd@@Base+0x60a0>
   1dd28:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1dd2c:	ldr	x22, [x22, #4016]
   1dd30:	ldr	x0, [x22]
   1dd34:	cbz	x0, 1dd94 <__sanitizer_set_report_fd@@Base+0x5fd4>
   1dd38:	sub	x1, x0, #0x1
   1dd3c:	tst	x0, x1
   1dd40:	b.ne	1de80 <__sanitizer_set_report_fd@@Base+0x60c0>  // b.any
   1dd44:	add	x20, x20, x1
   1dd48:	neg	x1, x0
   1dd4c:	and	x1, x20, x1
   1dd50:	mov	w4, w19
   1dd54:	str	x1, [x21]
   1dd58:	mov	x5, #0x0                   	// #0
   1dd5c:	mov	w3, #0x2                   	// #2
   1dd60:	mov	w2, #0x1                   	// #1
   1dd64:	mov	x0, #0x0                   	// #0
   1dd68:	bl	1c0e0 <__sanitizer_set_report_fd@@Base+0x4320>
   1dd6c:	mov	x1, #0x0                   	// #0
   1dd70:	mov	x19, x0
   1dd74:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1dd78:	tst	w0, #0xff
   1dd7c:	csel	x19, x19, xzr, eq  // eq = none
   1dd80:	mov	x0, x19
   1dd84:	ldp	x21, x22, [sp, #16]
   1dd88:	ldr	x30, [sp, #32]
   1dd8c:	ldp	x19, x20, [sp], #64
   1dd90:	ret
   1dd94:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1dd98:	str	x0, [x22]
   1dd9c:	b	1dd38 <__sanitizer_set_report_fd@@Base+0x5f78>
   1dda0:	add	x20, sp, #0x38
   1dda4:	mov	w22, #0x1                   	// #1
   1dda8:	mov	x0, x20
   1ddac:	mov	x2, #0x3                   	// #3
   1ddb0:	mov	w1, #0x0                   	// #0
   1ddb4:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1ddb8:	mov	w0, w19
   1ddbc:	strb	w22, [x20, w19, sxtw]
   1ddc0:	bl	1c250 <__sanitizer_set_report_fd@@Base+0x4490>
   1ddc4:	mov	x19, x0
   1ddc8:	cmp	w0, #0x2
   1ddcc:	b.le	1ddb8 <__sanitizer_set_report_fd@@Base+0x5ff8>
   1ddd0:	ldrb	w0, [sp, #56]
   1ddd4:	cbnz	w0, 1de34 <__sanitizer_set_report_fd@@Base+0x6074>
   1ddd8:	ldrb	w0, [sp, #57]
   1dddc:	cbnz	w0, 1de28 <__sanitizer_set_report_fd@@Base+0x6068>
   1dde0:	ldrb	w0, [sp, #58]
   1dde4:	cbz	w0, 1dd10 <__sanitizer_set_report_fd@@Base+0x5f50>
   1dde8:	mov	w0, #0x2                   	// #2
   1ddec:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   1ddf0:	b	1dd10 <__sanitizer_set_report_fd@@Base+0x5f50>
   1ddf4:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1ddf8:	mov	x2, #0x6                   	// #6
   1ddfc:	add	x1, x1, #0xbc8
   1de00:	bl	1a4e8 <__sanitizer_set_report_fd@@Base+0x2728>
   1de04:	cbnz	w0, 1dcdc <__sanitizer_set_report_fd@@Base+0x5f1c>
   1de08:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1de0c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1de10:	add	x2, x2, #0xbd0
   1de14:	add	x0, x0, #0xb70
   1de18:	mov	x4, #0x0                   	// #0
   1de1c:	mov	x3, #0x0                   	// #0
   1de20:	mov	w1, #0xc2                  	// #194
   1de24:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1de28:	mov	w0, #0x1                   	// #1
   1de2c:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   1de30:	b	1dde0 <__sanitizer_set_report_fd@@Base+0x6020>
   1de34:	mov	w0, #0x0                   	// #0
   1de38:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   1de3c:	b	1ddd8 <__sanitizer_set_report_fd@@Base+0x6018>
   1de40:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1de44:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1de48:	add	x2, x2, #0xbf0
   1de4c:	add	x0, x0, #0xb70
   1de50:	mov	x4, x20
   1de54:	mov	x3, x20
   1de58:	mov	w1, #0xc4                  	// #196
   1de5c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1de60:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1de64:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1de68:	add	x2, x2, #0xc10
   1de6c:	add	x0, x0, #0xb70
   1de70:	mov	x4, #0x0                   	// #0
   1de74:	mov	x3, #0x0                   	// #0
   1de78:	mov	w1, #0xc5                  	// #197
   1de7c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1de80:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1de84:	add	x0, x0, #0xb38
   1de88:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1de8c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1de90:	stp	x19, x20, [sp, #-64]!
   1de94:	cmp	x0, #0x0
   1de98:	mov	x5, x3
   1de9c:	mov	w4, w2
   1dea0:	stp	x21, x22, [sp, #16]
   1dea4:	mov	x21, x3
   1dea8:	mov	w3, #0x11                  	// #17
   1deac:	csinc	w3, w3, wzr, ne  // ne = any
   1deb0:	mov	w20, w2
   1deb4:	mov	w2, #0x3                   	// #3
   1deb8:	mov	x22, x1
   1debc:	str	x30, [sp, #32]
   1dec0:	bl	1c0e0 <__sanitizer_set_report_fd@@Base+0x4320>
   1dec4:	mov	x19, x0
   1dec8:	add	x1, sp, #0x3c
   1decc:	str	wzr, [sp, #60]
   1ded0:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1ded4:	tst	w0, #0xff
   1ded8:	b.ne	1def0 <__sanitizer_set_report_fd@@Base+0x6130>  // b.any
   1dedc:	mov	x0, x19
   1dee0:	ldp	x21, x22, [sp, #16]
   1dee4:	ldr	x30, [sp, #32]
   1dee8:	ldp	x19, x20, [sp], #64
   1deec:	ret
   1def0:	ldr	w5, [sp, #60]
   1def4:	mov	x4, x19
   1def8:	mov	x3, x22
   1defc:	mov	x2, x21
   1df00:	mov	w1, w20
   1df04:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1df08:	add	x0, x0, #0xc28
   1df0c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   1df10:	mov	x0, #0x0                   	// #0
   1df14:	b	1dee0 <__sanitizer_set_report_fd@@Base+0x6120>
   1df18:	stp	x19, x20, [sp, #-160]!
   1df1c:	add	x20, sp, #0x30
   1df20:	stp	x21, x22, [sp, #16]
   1df24:	mov	x22, x1
   1df28:	mov	w1, #0x1                   	// #1
   1df2c:	mov	x21, x0
   1df30:	mov	x0, x20
   1df34:	str	x30, [sp, #40]
   1df38:	bl	1fee0 <__sanitizer_on_print@@Base+0x680>
   1df3c:	mov	x0, x20
   1df40:	bl	20000 <__sanitizer_on_print@@Base+0x7a0>
   1df44:	ands	w19, w0, #0xff
   1df48:	b.ne	1dfb0 <__sanitizer_set_report_fd@@Base+0x61f0>  // b.any
   1df4c:	str	x23, [sp, #32]
   1df50:	cmp	x21, x22
   1df54:	stp	xzr, xzr, [sp, #104]
   1df58:	add	x23, sp, #0x50
   1df5c:	str	xzr, [sp, #152]
   1df60:	b.hi	1dfcc <__sanitizer_set_report_fd@@Base+0x620c>  // b.pmore
   1df64:	mov	x1, x23
   1df68:	mov	x0, x20
   1df6c:	bl	20750 <__sanitizer_on_print@@Base+0xef0>
   1df70:	tst	w0, #0xff
   1df74:	b.eq	1e060 <__sanitizer_set_report_fd@@Base+0x62a0>  // b.none
   1df78:	ldp	x3, x2, [sp, #80]
   1df7c:	cmp	x3, x2
   1df80:	b.eq	1df64 <__sanitizer_set_report_fd@@Base+0x61a4>  // b.none
   1df84:	cbz	x2, 1e01c <__sanitizer_set_report_fd@@Base+0x625c>
   1df88:	sub	x2, x2, #0x1
   1df8c:	cmp	x3, x2
   1df90:	b.hi	1e03c <__sanitizer_set_report_fd@@Base+0x627c>  // b.pmore
   1df94:	cmp	x22, x3
   1df98:	cset	w19, cc  // cc = lo, ul, last
   1df9c:	cmp	x21, x2
   1dfa0:	cset	w0, hi  // hi = pmore
   1dfa4:	orr	w19, w19, w0
   1dfa8:	cbnz	w19, 1df64 <__sanitizer_set_report_fd@@Base+0x61a4>
   1dfac:	ldr	x23, [sp, #32]
   1dfb0:	mov	x0, x20
   1dfb4:	bl	20010 <__sanitizer_on_print@@Base+0x7b0>
   1dfb8:	mov	w0, w19
   1dfbc:	ldp	x21, x22, [sp, #16]
   1dfc0:	ldr	x30, [sp, #40]
   1dfc4:	ldp	x19, x20, [sp], #160
   1dfc8:	ret
   1dfcc:	mov	x1, x23
   1dfd0:	mov	x0, x20
   1dfd4:	bl	20750 <__sanitizer_on_print@@Base+0xef0>
   1dfd8:	tst	w0, #0xff
   1dfdc:	b.eq	1e060 <__sanitizer_set_report_fd@@Base+0x62a0>  // b.none
   1dfe0:	ldp	x3, x2, [sp, #80]
   1dfe4:	cmp	x3, x2
   1dfe8:	b.eq	1dfcc <__sanitizer_set_report_fd@@Base+0x620c>  // b.none
   1dfec:	cbz	x2, 1e01c <__sanitizer_set_report_fd@@Base+0x625c>
   1dff0:	sub	x2, x2, #0x1
   1dff4:	cmp	x3, x2
   1dff8:	b.hi	1e03c <__sanitizer_set_report_fd@@Base+0x627c>  // b.pmore
   1dffc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e000:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e004:	add	x2, x2, #0xca8
   1e008:	add	x0, x0, #0xb70
   1e00c:	mov	x4, #0x0                   	// #0
   1e010:	mov	x3, #0x0                   	// #0
   1e014:	mov	w1, #0xdb                  	// #219
   1e018:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1e01c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e020:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e024:	add	x2, x2, #0xc68
   1e028:	add	x0, x0, #0xb70
   1e02c:	mov	x4, #0x0                   	// #0
   1e030:	mov	x3, #0x0                   	// #0
   1e034:	mov	w1, #0xea                  	// #234
   1e038:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1e03c:	cmp	x2, x3
   1e040:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e044:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e048:	cset	x3, cs  // cs = hs, nlast
   1e04c:	add	x2, x2, #0xc88
   1e050:	add	x0, x0, #0xb70
   1e054:	mov	x4, #0x0                   	// #0
   1e058:	mov	w1, #0xda                  	// #218
   1e05c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1e060:	mov	w19, #0x1                   	// #1
   1e064:	ldr	x23, [sp, #32]
   1e068:	b	1dfb0 <__sanitizer_set_report_fd@@Base+0x61f0>
   1e06c:	nop
   1e070:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e074:	add	x0, x0, #0xcc8
   1e078:	b	1c420 <__sanitizer_set_report_fd@@Base+0x4660>
   1e07c:	nop
   1e080:	and	w0, w0, #0xff
   1e084:	cmp	w0, #0x2f
   1e088:	cset	w0, eq  // eq = none
   1e08c:	ret
   1e090:	cbz	x0, 1e0a4 <__sanitizer_set_report_fd@@Base+0x62e4>
   1e094:	ldrb	w0, [x0]
   1e098:	cmp	w0, #0x2f
   1e09c:	cset	w0, eq  // eq = none
   1e0a0:	ret
   1e0a4:	mov	w0, #0x0                   	// #0
   1e0a8:	ret
   1e0ac:	nop
   1e0b0:	stp	x19, x20, [sp, #-48]!
   1e0b4:	mov	x19, x0
   1e0b8:	stp	x21, x22, [sp, #16]
   1e0bc:	mov	x22, x2
   1e0c0:	mov	x21, x1
   1e0c4:	mov	w1, #0x1                   	// #1
   1e0c8:	ldr	x20, [x0]
   1e0cc:	str	x30, [sp, #32]
   1e0d0:	ldxrb	w0, [x20]
   1e0d4:	stxrb	w2, w1, [x20]
   1e0d8:	cbnz	w2, 1e0d0 <__sanitizer_set_report_fd@@Base+0x6310>
   1e0dc:	dmb	ish
   1e0e0:	tst	w0, #0xff
   1e0e4:	b.eq	1e0f0 <__sanitizer_set_report_fd@@Base+0x6330>  // b.none
   1e0e8:	mov	x0, x20
   1e0ec:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   1e0f0:	mov	x0, x19
   1e0f4:	bl	171f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f20>
   1e0f8:	ldr	w0, [x19, #8]
   1e0fc:	mov	x2, x22
   1e100:	mov	x1, x21
   1e104:	bl	1c188 <__sanitizer_set_report_fd@@Base+0x43c8>
   1e108:	dmb	ish
   1e10c:	strb	wzr, [x20]
   1e110:	ldp	x21, x22, [sp, #16]
   1e114:	ldr	x30, [sp, #32]
   1e118:	ldp	x19, x20, [sp], #48
   1e11c:	ret
   1e120:	ldr	x0, [x0]
   1e124:	ldr	x0, [x0, #16]
   1e128:	ret
   1e12c:	nop
   1e130:	ldr	x0, [x0]
   1e134:	ldr	w0, [x0]
   1e138:	cmp	w0, #0xb
   1e13c:	cset	w0, eq  // eq = none
   1e140:	ret
   1e144:	nop
   1e148:	ldr	x0, [x0]
   1e14c:	ldr	w0, [x0]
   1e150:	ret
   1e154:	nop
   1e158:	ldr	x0, [x0]
   1e15c:	ldr	w1, [x0]
   1e160:	cmp	w1, #0x7
   1e164:	b.eq	1e1d8 <__sanitizer_set_report_fd@@Base+0x6418>  // b.none
   1e168:	b.gt	1e1a4 <__sanitizer_set_report_fd@@Base+0x63e4>
   1e16c:	cmp	w1, #0x5
   1e170:	b.eq	1e1cc <__sanitizer_set_report_fd@@Base+0x640c>  // b.none
   1e174:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e178:	cmp	w1, #0x6
   1e17c:	add	x0, x0, #0xce0
   1e180:	b.ne	1e188 <__sanitizer_set_report_fd@@Base+0x63c8>  // b.any
   1e184:	ret
   1e188:	cmp	w1, #0x4
   1e18c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e190:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e194:	add	x0, x0, #0xcd0
   1e198:	add	x1, x1, #0xd00
   1e19c:	csel	x0, x0, x1, ne  // ne = any
   1e1a0:	ret
   1e1a4:	cmp	w1, #0x8
   1e1a8:	b.eq	1e1c0 <__sanitizer_set_report_fd@@Base+0x6400>  // b.none
   1e1ac:	cmp	w1, #0xb
   1e1b0:	b.ne	1e1e4 <__sanitizer_set_report_fd@@Base+0x6424>  // b.any
   1e1b4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e1b8:	add	x0, x0, #0xd08
   1e1bc:	ret
   1e1c0:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e1c4:	add	x0, x0, #0xcf0
   1e1c8:	ret
   1e1cc:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e1d0:	add	x0, x0, #0xce8
   1e1d4:	ret
   1e1d8:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e1dc:	add	x0, x0, #0xcf8
   1e1e0:	ret
   1e1e4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e1e8:	add	x0, x0, #0xcd0
   1e1ec:	ret
   1e1f0:	stp	x19, x20, [sp, #-48]!
   1e1f4:	cmp	w0, #0x2
   1e1f8:	mov	w19, w0
   1e1fc:	str	x30, [sp, #24]
   1e200:	b.le	1e214 <__sanitizer_set_report_fd@@Base+0x6454>
   1e204:	mov	w0, w19
   1e208:	ldr	x30, [sp, #24]
   1e20c:	ldp	x19, x20, [sp], #48
   1e210:	ret
   1e214:	add	x20, sp, #0x28
   1e218:	mov	x2, #0x3                   	// #3
   1e21c:	mov	x0, x20
   1e220:	mov	w1, #0x0                   	// #0
   1e224:	str	x21, [sp, #16]
   1e228:	mov	w21, #0x1                   	// #1
   1e22c:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1e230:	mov	w0, w19
   1e234:	strb	w21, [x20, w19, sxtw]
   1e238:	bl	1c250 <__sanitizer_set_report_fd@@Base+0x4490>
   1e23c:	mov	x19, x0
   1e240:	cmp	w0, #0x2
   1e244:	b.le	1e230 <__sanitizer_set_report_fd@@Base+0x6470>
   1e248:	ldrb	w0, [sp, #40]
   1e24c:	cbnz	w0, 1e274 <__sanitizer_set_report_fd@@Base+0x64b4>
   1e250:	ldrb	w0, [sp, #41]
   1e254:	cbnz	w0, 1e284 <__sanitizer_set_report_fd@@Base+0x64c4>
   1e258:	ldrb	w0, [sp, #42]
   1e25c:	cbnz	w0, 1e294 <__sanitizer_set_report_fd@@Base+0x64d4>
   1e260:	mov	w0, w19
   1e264:	ldr	x21, [sp, #16]
   1e268:	ldr	x30, [sp, #24]
   1e26c:	ldp	x19, x20, [sp], #48
   1e270:	ret
   1e274:	mov	w0, #0x0                   	// #0
   1e278:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   1e27c:	ldrb	w0, [sp, #41]
   1e280:	cbz	w0, 1e258 <__sanitizer_set_report_fd@@Base+0x6498>
   1e284:	mov	w0, #0x1                   	// #1
   1e288:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   1e28c:	ldrb	w0, [sp, #42]
   1e290:	cbz	w0, 1e260 <__sanitizer_set_report_fd@@Base+0x64a0>
   1e294:	mov	w0, #0x2                   	// #2
   1e298:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   1e29c:	mov	w0, w19
   1e2a0:	ldr	x21, [sp, #16]
   1e2a4:	ldr	x30, [sp, #24]
   1e2a8:	ldp	x19, x20, [sp], #48
   1e2ac:	ret
   1e2b0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1e2b4:	ldr	x1, [x1, #4056]
   1e2b8:	ldrb	w1, [x1, #243]
   1e2bc:	cbnz	w1, 1e2c8 <__sanitizer_set_report_fd@@Base+0x6508>
   1e2c0:	mov	w0, w1
   1e2c4:	ret
   1e2c8:	str	x30, [sp, #-16]!
   1e2cc:	mov	x2, #0x6                   	// #6
   1e2d0:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e2d4:	add	x1, x1, #0xbc8
   1e2d8:	bl	1a4e8 <__sanitizer_set_report_fd@@Base+0x2728>
   1e2dc:	cmp	w0, #0x0
   1e2e0:	cset	w1, eq  // eq = none
   1e2e4:	mov	w0, w1
   1e2e8:	ldr	x30, [sp], #16
   1e2ec:	ret
   1e2f0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1e2f4:	stp	x19, x20, [sp, #-272]!
   1e2f8:	cmp	x0, #0x0
   1e2fc:	ldr	x4, [x3, #4056]
   1e300:	stp	x21, x22, [sp, #16]
   1e304:	mov	x21, x1
   1e308:	cset	w3, eq  // eq = none
   1e30c:	ldrb	w1, [x4, #223]
   1e310:	str	x30, [sp, #48]
   1e314:	eor	w1, w1, #0x1
   1e318:	orr	w3, w3, w1
   1e31c:	tst	w3, #0xff
   1e320:	b.ne	1e4ac <__sanitizer_set_report_fd@@Base+0x66ec>  // b.any
   1e324:	mov	x19, x0
   1e328:	mov	x20, x2
   1e32c:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   1e330:	cmp	x0, #0xbd
   1e334:	b.hi	1e448 <__sanitizer_set_report_fd@@Base+0x6688>  // b.pmore
   1e338:	bl	1c738 <__sanitizer_set_report_fd@@Base+0x4978>
   1e33c:	add	x22, sp, #0x48
   1e340:	mov	x3, x0
   1e344:	mov	x4, x19
   1e348:	mov	x1, #0xc8                  	// #200
   1e34c:	mov	x0, x22
   1e350:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e354:	add	x2, x2, #0xd48
   1e358:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   1e35c:	mov	w1, #0x242                 	// #578
   1e360:	mov	x0, x22
   1e364:	movk	w1, #0x8, lsl #16
   1e368:	mov	w2, #0x1c0                 	// #448
   1e36c:	bl	1c140 <__sanitizer_set_report_fd@@Base+0x4380>
   1e370:	mov	x19, x0
   1e374:	cmp	w0, #0x2
   1e378:	b.le	1e3c0 <__sanitizer_set_report_fd@@Base+0x6600>
   1e37c:	mov	x1, x21
   1e380:	mov	w0, w19
   1e384:	bl	1c1b0 <__sanitizer_set_report_fd@@Base+0x43f0>
   1e388:	sxtw	x4, w0
   1e38c:	cbnz	w0, 1e46c <__sanitizer_set_report_fd@@Base+0x66ac>
   1e390:	mov	x0, x22
   1e394:	bl	1c298 <__sanitizer_set_report_fd@@Base+0x44d8>
   1e398:	sxtw	x4, w0
   1e39c:	cbnz	w0, 1e48c <__sanitizer_set_report_fd@@Base+0x66cc>
   1e3a0:	ldr	w0, [x20]
   1e3a4:	and	w0, w0, #0xffffffdf
   1e3a8:	str	w0, [x20]
   1e3ac:	mov	w0, w19
   1e3b0:	ldp	x21, x22, [sp, #16]
   1e3b4:	ldr	x30, [sp, #48]
   1e3b8:	ldp	x19, x20, [sp], #272
   1e3bc:	ret
   1e3c0:	stp	x23, x24, [sp, #32]
   1e3c4:	add	x23, sp, #0x40
   1e3c8:	mov	x0, x23
   1e3cc:	mov	w24, #0x1                   	// #1
   1e3d0:	mov	x2, #0x3                   	// #3
   1e3d4:	mov	w1, #0x0                   	// #0
   1e3d8:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1e3dc:	nop
   1e3e0:	mov	w0, w19
   1e3e4:	strb	w24, [x23, w19, sxtw]
   1e3e8:	bl	1c250 <__sanitizer_set_report_fd@@Base+0x4490>
   1e3ec:	mov	x19, x0
   1e3f0:	cmp	w0, #0x2
   1e3f4:	b.le	1e3e0 <__sanitizer_set_report_fd@@Base+0x6620>
   1e3f8:	ldrb	w0, [sp, #64]
   1e3fc:	cbnz	w0, 1e418 <__sanitizer_set_report_fd@@Base+0x6658>
   1e400:	ldrb	w0, [sp, #65]
   1e404:	cbnz	w0, 1e428 <__sanitizer_set_report_fd@@Base+0x6668>
   1e408:	ldrb	w0, [sp, #66]
   1e40c:	cbnz	w0, 1e438 <__sanitizer_set_report_fd@@Base+0x6678>
   1e410:	ldp	x23, x24, [sp, #32]
   1e414:	b	1e37c <__sanitizer_set_report_fd@@Base+0x65bc>
   1e418:	mov	w0, #0x0                   	// #0
   1e41c:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   1e420:	ldrb	w0, [sp, #65]
   1e424:	cbz	w0, 1e408 <__sanitizer_set_report_fd@@Base+0x6648>
   1e428:	mov	w0, #0x1                   	// #1
   1e42c:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   1e430:	ldrb	w0, [sp, #66]
   1e434:	cbz	w0, 1e410 <__sanitizer_set_report_fd@@Base+0x6650>
   1e438:	mov	w0, #0x2                   	// #2
   1e43c:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   1e440:	ldp	x23, x24, [sp, #32]
   1e444:	b	1e37c <__sanitizer_set_report_fd@@Base+0x65bc>
   1e448:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e44c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e450:	add	x2, x2, #0xd10
   1e454:	add	x0, x0, #0xb70
   1e458:	mov	x4, #0x0                   	// #0
   1e45c:	mov	x3, #0x0                   	// #0
   1e460:	mov	w1, #0x15b                 	// #347
   1e464:	stp	x23, x24, [sp, #32]
   1e468:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1e46c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e470:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e474:	add	x2, x2, #0xd60
   1e478:	add	x0, x0, #0xb70
   1e47c:	mov	x3, #0x0                   	// #0
   1e480:	mov	w1, #0x162                 	// #354
   1e484:	stp	x23, x24, [sp, #32]
   1e488:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1e48c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e490:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e494:	add	x2, x2, #0xd60
   1e498:	add	x0, x0, #0xb70
   1e49c:	mov	x3, #0x0                   	// #0
   1e4a0:	mov	w1, #0x164                 	// #356
   1e4a4:	stp	x23, x24, [sp, #32]
   1e4a8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1e4ac:	mov	w19, #0xffffffff            	// #-1
   1e4b0:	b	1e3ac <__sanitizer_set_report_fd@@Base+0x65ec>
   1e4b4:	nop
   1e4b8:	stp	x19, x20, [sp, #-64]!
   1e4bc:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1e4c0:	mov	x19, x0
   1e4c4:	ldr	x20, [x20, #4016]
   1e4c8:	stp	x21, x22, [sp, #16]
   1e4cc:	and	w22, w2, #0xff
   1e4d0:	stp	x23, x30, [sp, #32]
   1e4d4:	mov	x23, x1
   1e4d8:	ldr	x0, [x20]
   1e4dc:	cbz	x0, 1e56c <__sanitizer_set_report_fd@@Base+0x67ac>
   1e4e0:	sub	x1, x0, #0x1
   1e4e4:	tst	x0, x1
   1e4e8:	b.ne	1e580 <__sanitizer_set_report_fd@@Base+0x67c0>  // b.any
   1e4ec:	mov	w3, #0x22                  	// #34
   1e4f0:	add	x19, x19, x1
   1e4f4:	neg	x0, x0
   1e4f8:	add	x20, sp, #0x3c
   1e4fc:	and	x19, x19, x0
   1e500:	mov	x2, x20
   1e504:	mov	x1, x19
   1e508:	mov	x0, x23
   1e50c:	str	w3, [sp, #60]
   1e510:	bl	1e2f0 <__sanitizer_set_report_fd@@Base+0x6530>
   1e514:	ldr	w3, [sp, #60]
   1e518:	mov	w4, w0
   1e51c:	mov	x5, #0x0                   	// #0
   1e520:	mov	w2, #0x3                   	// #3
   1e524:	mov	x1, x19
   1e528:	mov	x0, #0x0                   	// #0
   1e52c:	bl	1c0e0 <__sanitizer_set_report_fd@@Base+0x4320>
   1e530:	mov	x21, x0
   1e534:	mov	x1, #0x0                   	// #0
   1e538:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1e53c:	mov	x1, x20
   1e540:	mov	x0, x21
   1e544:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1e548:	tst	w0, #0xff
   1e54c:	b.ne	1e590 <__sanitizer_set_report_fd@@Base+0x67d0>  // b.any
   1e550:	mov	x0, x19
   1e554:	bl	14ba0 <_ZdaPvRKSt9nothrow_t@@Base+0x2ee0>
   1e558:	mov	x0, x21
   1e55c:	ldp	x21, x22, [sp, #16]
   1e560:	ldp	x23, x30, [sp, #32]
   1e564:	ldp	x19, x20, [sp], #64
   1e568:	ret
   1e56c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1e570:	str	x0, [x20]
   1e574:	sub	x1, x0, #0x1
   1e578:	tst	x0, x1
   1e57c:	b.eq	1e4ec <__sanitizer_set_report_fd@@Base+0x672c>  // b.none
   1e580:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1e584:	add	x0, x0, #0xb38
   1e588:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1e58c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1e590:	ldr	w3, [sp, #60]
   1e594:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e598:	mov	w4, w22
   1e59c:	mov	x1, x23
   1e5a0:	mov	x0, x19
   1e5a4:	add	x2, x2, #0xd78
   1e5a8:	bl	147a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2ae8>
   1e5ac:	nop
   1e5b0:	stp	x19, x20, [sp, #-160]!
   1e5b4:	mov	w1, #0x1                   	// #1
   1e5b8:	adrp	x20, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e5bc:	add	x19, sp, #0x30
   1e5c0:	stp	x21, x22, [sp, #16]
   1e5c4:	mov	x0, x19
   1e5c8:	str	x30, [sp, #32]
   1e5cc:	bl	1fee0 <__sanitizer_on_print@@Base+0x680>
   1e5d0:	mov	w2, #0x0                   	// #0
   1e5d4:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e5d8:	mov	x0, #0xfff                 	// #4095
   1e5dc:	add	x1, x1, #0xd88
   1e5e0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   1e5e4:	add	x21, sp, #0x50
   1e5e8:	mov	x1, #0xfff                 	// #4095
   1e5ec:	mov	x22, x0
   1e5f0:	add	x20, x20, #0xdb8
   1e5f4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e5f8:	add	x0, x0, #0xd98
   1e5fc:	stp	x22, x1, [sp, #104]
   1e600:	str	xzr, [sp, #152]
   1e604:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1e608:	b	1e61c <__sanitizer_set_report_fd@@Base+0x685c>
   1e60c:	ldp	x1, x2, [sp, #80]
   1e610:	mov	x0, x20
   1e614:	ldr	x3, [sp, #104]
   1e618:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   1e61c:	mov	x1, x21
   1e620:	mov	x0, x19
   1e624:	bl	20750 <__sanitizer_on_print@@Base+0xef0>
   1e628:	tst	w0, #0xff
   1e62c:	b.ne	1e60c <__sanitizer_set_report_fd@@Base+0x684c>  // b.any
   1e630:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e634:	add	x0, x0, #0xdc8
   1e638:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1e63c:	cbnz	x22, 1e658 <__sanitizer_set_report_fd@@Base+0x6898>
   1e640:	mov	x0, x19
   1e644:	bl	20010 <__sanitizer_on_print@@Base+0x7b0>
   1e648:	ldp	x21, x22, [sp, #16]
   1e64c:	ldr	x30, [sp, #32]
   1e650:	ldp	x19, x20, [sp], #160
   1e654:	ret
   1e658:	mov	x1, #0xfff                 	// #4095
   1e65c:	mov	x0, x22
   1e660:	bl	1c0f8 <__sanitizer_set_report_fd@@Base+0x4338>
   1e664:	mov	x1, #0x0                   	// #0
   1e668:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1e66c:	tst	w0, #0xff
   1e670:	b.ne	1e694 <__sanitizer_set_report_fd@@Base+0x68d4>  // b.any
   1e674:	mov	x0, #0xfff                 	// #4095
   1e678:	bl	14bf8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
   1e67c:	mov	x0, x19
   1e680:	bl	20010 <__sanitizer_on_print@@Base+0x7b0>
   1e684:	ldp	x21, x22, [sp, #16]
   1e688:	ldr	x30, [sp, #32]
   1e68c:	ldp	x19, x20, [sp], #160
   1e690:	ret
   1e694:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1e698:	mov	x3, #0xfff                 	// #4095
   1e69c:	mov	x4, x22
   1e6a0:	mov	x2, x3
   1e6a4:	ldr	x1, [x1, #4024]
   1e6a8:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e6ac:	add	x0, x0, #0xb30
   1e6b0:	ldr	x1, [x1]
   1e6b4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1e6b8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   1e6bc:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e6c0:	add	x2, x2, #0x828
   1e6c4:	add	x0, x0, #0xb70
   1e6c8:	mov	x4, #0x0                   	// #0
   1e6cc:	mov	x3, #0x0                   	// #0
   1e6d0:	mov	w1, #0x3d                  	// #61
   1e6d4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1e6d8:	stp	x19, x20, [sp, #-192]!
   1e6dc:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1e6e0:	add	x20, sp, #0x50
   1e6e4:	stp	x21, x22, [sp, #16]
   1e6e8:	mov	x22, x0
   1e6ec:	mov	x0, x20
   1e6f0:	stp	x23, x24, [sp, #32]
   1e6f4:	mov	x24, x1
   1e6f8:	mov	x23, x2
   1e6fc:	mov	w1, #0x0                   	// #0
   1e700:	stp	x25, x26, [sp, #48]
   1e704:	str	x30, [sp, #64]
   1e708:	bl	1fee0 <__sanitizer_on_print@@Base+0x680>
   1e70c:	ldr	x21, [x19, #4016]
   1e710:	ldr	x3, [x21]
   1e714:	cbz	x3, 1e818 <__sanitizer_set_report_fd@@Base+0x6a58>
   1e718:	sub	x0, x3, #0x1
   1e71c:	tst	x0, x3
   1e720:	b.ne	1e884 <__sanitizer_set_report_fd@@Base+0x6ac4>  // b.any
   1e724:	add	x25, x3, #0xfff
   1e728:	neg	x3, x3
   1e72c:	and	x25, x25, x3
   1e730:	mov	w2, #0x0                   	// #0
   1e734:	mov	x0, x25
   1e738:	adrp	x21, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1e73c:	add	x1, x21, #0xb50
   1e740:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   1e744:	mov	x2, #0x0                   	// #0
   1e748:	mov	x26, x0
   1e74c:	mov	x1, #0x0                   	// #0
   1e750:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   1e754:	cmp	x25, #0xfff
   1e758:	b.ls	1e828 <__sanitizer_set_report_fd@@Base+0x6a68>  // b.plast
   1e75c:	mov	x0, x26
   1e760:	mov	x2, #0x1000                	// #4096
   1e764:	mov	w1, #0x0                   	// #0
   1e768:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1e76c:	strb	wzr, [x26]
   1e770:	mov	x0, #0x1000                	// #4096
   1e774:	add	x21, sp, #0x70
   1e778:	stp	x26, x0, [sp, #136]
   1e77c:	str	xzr, [sp, #184]
   1e780:	b	1e78c <__sanitizer_set_report_fd@@Base+0x69cc>
   1e784:	ldr	x3, [sp, #152]
   1e788:	tbnz	w3, #2, 1e7c8 <__sanitizer_set_report_fd@@Base+0x6a08>
   1e78c:	mov	x1, x21
   1e790:	mov	x0, x20
   1e794:	bl	20750 <__sanitizer_on_print@@Base+0xef0>
   1e798:	ands	w19, w0, #0xff
   1e79c:	b.ne	1e784 <__sanitizer_set_report_fd@@Base+0x69c4>  // b.any
   1e7a0:	cbnz	x25, 1e7f0 <__sanitizer_set_report_fd@@Base+0x6a30>
   1e7a4:	mov	x0, x20
   1e7a8:	bl	20010 <__sanitizer_on_print@@Base+0x7b0>
   1e7ac:	mov	w0, w19
   1e7b0:	ldp	x21, x22, [sp, #16]
   1e7b4:	ldp	x23, x24, [sp, #32]
   1e7b8:	ldp	x25, x26, [sp, #48]
   1e7bc:	ldr	x30, [sp, #64]
   1e7c0:	ldp	x19, x20, [sp], #192
   1e7c4:	ret
   1e7c8:	ldr	x1, [sp, #136]
   1e7cc:	mov	x0, x22
   1e7d0:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   1e7d4:	cbnz	w0, 1e78c <__sanitizer_set_report_fd@@Base+0x69cc>
   1e7d8:	ldr	x0, [sp, #112]
   1e7dc:	str	x0, [x24]
   1e7e0:	ldr	x0, [sp, #120]
   1e7e4:	str	x0, [x23]
   1e7e8:	cbz	x25, 1e7a4 <__sanitizer_set_report_fd@@Base+0x69e4>
   1e7ec:	nop
   1e7f0:	mov	x1, x25
   1e7f4:	mov	x0, x26
   1e7f8:	bl	1c0f8 <__sanitizer_set_report_fd@@Base+0x4338>
   1e7fc:	mov	x1, #0x0                   	// #0
   1e800:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1e804:	tst	w0, #0xff
   1e808:	b.ne	1e8bc <__sanitizer_set_report_fd@@Base+0x6afc>  // b.any
   1e80c:	mov	x0, x25
   1e810:	bl	14bf8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
   1e814:	b	1e7a4 <__sanitizer_set_report_fd@@Base+0x69e4>
   1e818:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1e81c:	mov	x3, x0
   1e820:	str	x0, [x21]
   1e824:	b	1e718 <__sanitizer_set_report_fd@@Base+0x6958>
   1e828:	ldr	x19, [x19, #4016]
   1e82c:	ldr	x0, [x19]
   1e830:	cbz	x0, 1e900 <__sanitizer_set_report_fd@@Base+0x6b40>
   1e834:	sub	x1, x0, #0x1
   1e838:	tst	x1, x0
   1e83c:	b.ne	1e884 <__sanitizer_set_report_fd@@Base+0x6ac4>  // b.any
   1e840:	add	x19, x0, #0xfff
   1e844:	neg	x0, x0
   1e848:	and	x19, x19, x0
   1e84c:	add	x1, x21, #0xb50
   1e850:	mov	w2, #0x0                   	// #0
   1e854:	mov	x0, x19
   1e858:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   1e85c:	mov	x21, x0
   1e860:	mov	x1, x26
   1e864:	mov	x2, #0x0                   	// #0
   1e868:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   1e86c:	cmp	x26, #0x0
   1e870:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   1e874:	b.ne	1e894 <__sanitizer_set_report_fd@@Base+0x6ad4>  // b.any
   1e878:	mov	x25, x19
   1e87c:	mov	x26, x21
   1e880:	b	1e75c <__sanitizer_set_report_fd@@Base+0x699c>
   1e884:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1e888:	add	x0, x0, #0xb38
   1e88c:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1e890:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1e894:	mov	x1, x25
   1e898:	mov	x0, x26
   1e89c:	bl	1c0f8 <__sanitizer_set_report_fd@@Base+0x4338>
   1e8a0:	mov	x1, #0x0                   	// #0
   1e8a4:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1e8a8:	tst	w0, #0xff
   1e8ac:	b.ne	1e8bc <__sanitizer_set_report_fd@@Base+0x6afc>  // b.any
   1e8b0:	mov	x0, x25
   1e8b4:	bl	14bf8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
   1e8b8:	b	1e878 <__sanitizer_set_report_fd@@Base+0x6ab8>
   1e8bc:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1e8c0:	mov	x4, x26
   1e8c4:	mov	x3, x25
   1e8c8:	mov	x2, x25
   1e8cc:	ldr	x1, [x1, #4024]
   1e8d0:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e8d4:	add	x0, x0, #0xb30
   1e8d8:	ldr	x1, [x1]
   1e8dc:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1e8e0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   1e8e4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e8e8:	add	x2, x2, #0x828
   1e8ec:	add	x0, x0, #0xb70
   1e8f0:	mov	x4, #0x0                   	// #0
   1e8f4:	mov	x3, #0x0                   	// #0
   1e8f8:	mov	w1, #0x3d                  	// #61
   1e8fc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1e900:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1e904:	str	x0, [x19]
   1e908:	b	1e834 <__sanitizer_set_report_fd@@Base+0x6a74>
   1e90c:	nop
   1e910:	stp	x19, x20, [sp, #-64]!
   1e914:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1e918:	mov	x19, x0
   1e91c:	ldr	x20, [x20, #4016]
   1e920:	stp	x21, x22, [sp, #16]
   1e924:	mov	x22, x1
   1e928:	ldr	x0, [x20]
   1e92c:	str	x30, [sp, #32]
   1e930:	cbz	x0, 1e9c0 <__sanitizer_set_report_fd@@Base+0x6c00>
   1e934:	sub	x1, x0, #0x1
   1e938:	tst	x0, x1
   1e93c:	b.ne	1e9d4 <__sanitizer_set_report_fd@@Base+0x6c14>  // b.any
   1e940:	mov	w3, #0x4022                	// #16418
   1e944:	add	x19, x19, x1
   1e948:	neg	x0, x0
   1e94c:	add	x20, sp, #0x3c
   1e950:	and	x19, x19, x0
   1e954:	mov	x2, x20
   1e958:	mov	x1, x19
   1e95c:	mov	x0, x22
   1e960:	str	w3, [sp, #60]
   1e964:	bl	1e2f0 <__sanitizer_set_report_fd@@Base+0x6530>
   1e968:	ldr	w3, [sp, #60]
   1e96c:	mov	w4, w0
   1e970:	mov	x5, #0x0                   	// #0
   1e974:	mov	w2, #0x3                   	// #3
   1e978:	mov	x1, x19
   1e97c:	mov	x0, #0x0                   	// #0
   1e980:	bl	1c0e0 <__sanitizer_set_report_fd@@Base+0x4320>
   1e984:	mov	x21, x0
   1e988:	mov	x1, #0x0                   	// #0
   1e98c:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1e990:	mov	x1, x20
   1e994:	mov	x0, x21
   1e998:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1e99c:	tst	w0, #0xff
   1e9a0:	b.ne	1e9e4 <__sanitizer_set_report_fd@@Base+0x6c24>  // b.any
   1e9a4:	mov	x0, x19
   1e9a8:	bl	14ba0 <_ZdaPvRKSt9nothrow_t@@Base+0x2ee0>
   1e9ac:	mov	x0, x21
   1e9b0:	ldp	x21, x22, [sp, #16]
   1e9b4:	ldr	x30, [sp, #32]
   1e9b8:	ldp	x19, x20, [sp], #64
   1e9bc:	ret
   1e9c0:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1e9c4:	str	x0, [x20]
   1e9c8:	sub	x1, x0, #0x1
   1e9cc:	tst	x0, x1
   1e9d0:	b.eq	1e940 <__sanitizer_set_report_fd@@Base+0x6b80>  // b.none
   1e9d4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1e9d8:	add	x0, x0, #0xb38
   1e9dc:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1e9e0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1e9e4:	ldr	w3, [sp, #60]
   1e9e8:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1e9ec:	mov	x1, x22
   1e9f0:	mov	x0, x19
   1e9f4:	add	x2, x2, #0xde8
   1e9f8:	mov	w4, #0x0                   	// #0
   1e9fc:	bl	147a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2ae8>
   1ea00:	stp	x19, x20, [sp, #-64]!
   1ea04:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1ea08:	mov	x19, x0
   1ea0c:	ldr	x20, [x20, #4016]
   1ea10:	stp	x21, x22, [sp, #16]
   1ea14:	mov	x22, x1
   1ea18:	ldr	x0, [x20]
   1ea1c:	str	x30, [sp, #32]
   1ea20:	cbz	x0, 1eab0 <__sanitizer_set_report_fd@@Base+0x6cf0>
   1ea24:	sub	x1, x0, #0x1
   1ea28:	tst	x0, x1
   1ea2c:	b.ne	1eac4 <__sanitizer_set_report_fd@@Base+0x6d04>  // b.any
   1ea30:	mov	w3, #0x22                  	// #34
   1ea34:	add	x19, x19, x1
   1ea38:	neg	x0, x0
   1ea3c:	add	x21, sp, #0x3c
   1ea40:	and	x19, x19, x0
   1ea44:	mov	x2, x21
   1ea48:	mov	x1, x19
   1ea4c:	mov	x0, x22
   1ea50:	str	w3, [sp, #60]
   1ea54:	bl	1e2f0 <__sanitizer_set_report_fd@@Base+0x6530>
   1ea58:	ldr	w3, [sp, #60]
   1ea5c:	mov	w4, w0
   1ea60:	mov	x5, #0x0                   	// #0
   1ea64:	mov	w2, #0x3                   	// #3
   1ea68:	mov	x1, x19
   1ea6c:	mov	x0, #0x0                   	// #0
   1ea70:	bl	1c0e0 <__sanitizer_set_report_fd@@Base+0x4320>
   1ea74:	mov	x20, x0
   1ea78:	mov	x1, #0x0                   	// #0
   1ea7c:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1ea80:	mov	x1, x21
   1ea84:	mov	x0, x20
   1ea88:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1ea8c:	tst	w0, #0xff
   1ea90:	b.ne	1ead4 <__sanitizer_set_report_fd@@Base+0x6d14>  // b.any
   1ea94:	mov	x0, x19
   1ea98:	bl	14ba0 <_ZdaPvRKSt9nothrow_t@@Base+0x2ee0>
   1ea9c:	mov	x0, x20
   1eaa0:	ldp	x21, x22, [sp, #16]
   1eaa4:	ldr	x30, [sp, #32]
   1eaa8:	ldp	x19, x20, [sp], #64
   1eaac:	ret
   1eab0:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1eab4:	str	x0, [x20]
   1eab8:	sub	x1, x0, #0x1
   1eabc:	tst	x0, x1
   1eac0:	b.eq	1ea30 <__sanitizer_set_report_fd@@Base+0x6c70>  // b.none
   1eac4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1eac8:	add	x0, x0, #0xb38
   1eacc:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1ead0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1ead4:	ldr	w3, [sp, #60]
   1ead8:	mov	x0, #0x0                   	// #0
   1eadc:	cmp	w3, #0xc
   1eae0:	b.eq	1eaa0 <__sanitizer_set_report_fd@@Base+0x6ce0>  // b.none
   1eae4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1eae8:	mov	x1, x22
   1eaec:	mov	x0, x19
   1eaf0:	add	x2, x2, #0xd78
   1eaf4:	mov	w4, #0x0                   	// #0
   1eaf8:	bl	147a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2ae8>
   1eafc:	nop
   1eb00:	stp	x19, x20, [sp, #-48]!
   1eb04:	mov	x19, x0
   1eb08:	sub	x0, x0, #0x1
   1eb0c:	stp	x21, x22, [sp, #16]
   1eb10:	tst	x0, x19
   1eb14:	stp	x23, x30, [sp, #32]
   1eb18:	b.ne	1ec0c <__sanitizer_set_report_fd@@Base+0x6e4c>  // b.any
   1eb1c:	sub	x23, x1, #0x1
   1eb20:	mov	x21, x1
   1eb24:	tst	x1, x23
   1eb28:	b.ne	1ec2c <__sanitizer_set_report_fd@@Base+0x6e6c>  // b.any
   1eb2c:	add	x22, x19, x21
   1eb30:	mov	x1, x2
   1eb34:	mov	x0, x22
   1eb38:	bl	1ea00 <__sanitizer_set_report_fd@@Base+0x6c40>
   1eb3c:	mov	x20, x0
   1eb40:	cbz	x0, 1eb5c <__sanitizer_set_report_fd@@Base+0x6d9c>
   1eb44:	add	x22, x22, x0
   1eb48:	tst	x0, x23
   1eb4c:	b.ne	1ebb0 <__sanitizer_set_report_fd@@Base+0x6df0>  // b.any
   1eb50:	add	x19, x20, x19
   1eb54:	cmp	x22, x19
   1eb58:	b.ne	1eb70 <__sanitizer_set_report_fd@@Base+0x6db0>  // b.any
   1eb5c:	mov	x0, x20
   1eb60:	ldp	x21, x22, [sp, #16]
   1eb64:	ldp	x23, x30, [sp, #32]
   1eb68:	ldp	x19, x20, [sp], #48
   1eb6c:	ret
   1eb70:	cbz	x19, 1eb5c <__sanitizer_set_report_fd@@Base+0x6d9c>
   1eb74:	sub	x22, x22, x19
   1eb78:	mov	x0, x19
   1eb7c:	mov	x1, x22
   1eb80:	bl	1c0f8 <__sanitizer_set_report_fd@@Base+0x4338>
   1eb84:	mov	x1, #0x0                   	// #0
   1eb88:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1eb8c:	tst	w0, #0xff
   1eb90:	b.ne	1ec4c <__sanitizer_set_report_fd@@Base+0x6e8c>  // b.any
   1eb94:	mov	x0, x22
   1eb98:	bl	14bf8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
   1eb9c:	mov	x0, x20
   1eba0:	ldp	x21, x22, [sp, #16]
   1eba4:	ldp	x23, x30, [sp, #32]
   1eba8:	ldp	x19, x20, [sp], #48
   1ebac:	ret
   1ebb0:	add	x23, x0, x23
   1ebb4:	neg	x21, x21
   1ebb8:	and	x21, x23, x21
   1ebbc:	subs	x23, x21, x0
   1ebc0:	b.ne	1ebd8 <__sanitizer_set_report_fd@@Base+0x6e18>  // b.any
   1ebc4:	mov	x20, x21
   1ebc8:	add	x19, x20, x19
   1ebcc:	cmp	x22, x19
   1ebd0:	b.eq	1eb5c <__sanitizer_set_report_fd@@Base+0x6d9c>  // b.none
   1ebd4:	b	1eb70 <__sanitizer_set_report_fd@@Base+0x6db0>
   1ebd8:	mov	x1, x23
   1ebdc:	bl	1c0f8 <__sanitizer_set_report_fd@@Base+0x4338>
   1ebe0:	mov	x1, #0x0                   	// #0
   1ebe4:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1ebe8:	tst	w0, #0xff
   1ebec:	b.ne	1ec90 <__sanitizer_set_report_fd@@Base+0x6ed0>  // b.any
   1ebf0:	mov	x20, x21
   1ebf4:	mov	x0, x23
   1ebf8:	add	x19, x20, x19
   1ebfc:	bl	14bf8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
   1ec00:	cmp	x22, x19
   1ec04:	b.eq	1eb5c <__sanitizer_set_report_fd@@Base+0x6d9c>  // b.none
   1ec08:	b	1eb70 <__sanitizer_set_report_fd@@Base+0x6db0>
   1ec0c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   1ec10:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1ec14:	add	x2, x2, #0xa90
   1ec18:	add	x0, x0, #0xb70
   1ec1c:	mov	x4, #0x0                   	// #0
   1ec20:	mov	x3, #0x0                   	// #0
   1ec24:	mov	w1, #0x55                  	// #85
   1ec28:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1ec2c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   1ec30:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1ec34:	add	x2, x2, #0x370
   1ec38:	add	x0, x0, #0xb70
   1ec3c:	mov	x4, #0x0                   	// #0
   1ec40:	mov	x3, #0x0                   	// #0
   1ec44:	mov	w1, #0x56                  	// #86
   1ec48:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1ec4c:	mov	x4, x19
   1ec50:	mov	x3, x22
   1ec54:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1ec58:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1ec5c:	ldr	x1, [x1, #4024]
   1ec60:	mov	x2, x3
   1ec64:	add	x0, x0, #0xb30
   1ec68:	ldr	x1, [x1]
   1ec6c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   1ec70:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   1ec74:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1ec78:	add	x2, x2, #0x828
   1ec7c:	add	x0, x0, #0xb70
   1ec80:	mov	x4, #0x0                   	// #0
   1ec84:	mov	x3, #0x0                   	// #0
   1ec88:	mov	w1, #0x3d                  	// #61
   1ec8c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1ec90:	mov	x4, x20
   1ec94:	mov	x3, x23
   1ec98:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1ec9c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1eca0:	b	1ec5c <__sanitizer_set_report_fd@@Base+0x6e9c>
   1eca4:	nop
   1eca8:	stp	x19, x20, [sp, #-112]!
   1ecac:	mov	x20, x0
   1ecb0:	mov	x19, x1
   1ecb4:	stp	x21, x22, [sp, #16]
   1ecb8:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1ecbc:	and	w21, w2, #0xff
   1ecc0:	ldr	x22, [x22, #4016]
   1ecc4:	stp	x23, x24, [sp, #32]
   1ecc8:	mov	x23, x3
   1eccc:	ldr	x2, [x22]
   1ecd0:	str	x30, [sp, #48]
   1ecd4:	cbz	x2, 1ed6c <__sanitizer_set_report_fd@@Base+0x6fac>
   1ecd8:	sub	x1, x2, #0x1
   1ecdc:	tst	x2, x1
   1ece0:	b.ne	1eda0 <__sanitizer_set_report_fd@@Base+0x6fe0>  // b.any
   1ece4:	neg	x2, x2
   1ece8:	add	x19, x19, x1
   1ecec:	and	x19, x19, x2
   1ecf0:	mov	w3, #0x32                  	// #50
   1ecf4:	add	x24, sp, #0x48
   1ecf8:	and	x22, x20, x2
   1ecfc:	mov	x1, x19
   1ed00:	mov	x2, x24
   1ed04:	mov	x0, x23
   1ed08:	str	w3, [sp, #72]
   1ed0c:	bl	1e2f0 <__sanitizer_set_report_fd@@Base+0x6530>
   1ed10:	ldr	w3, [sp, #72]
   1ed14:	mov	w4, w0
   1ed18:	mov	x5, #0x0                   	// #0
   1ed1c:	mov	w2, #0x3                   	// #3
   1ed20:	mov	x1, x19
   1ed24:	mov	x0, x22
   1ed28:	bl	1c0e0 <__sanitizer_set_report_fd@@Base+0x4320>
   1ed2c:	mov	x20, x0
   1ed30:	mov	x1, #0x0                   	// #0
   1ed34:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1ed38:	mov	x0, x20
   1ed3c:	add	x1, sp, #0x44
   1ed40:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1ed44:	tst	w0, #0xff
   1ed48:	b.ne	1edb0 <__sanitizer_set_report_fd@@Base+0x6ff0>  // b.any
   1ed4c:	mov	x0, x19
   1ed50:	bl	14ba0 <_ZdaPvRKSt9nothrow_t@@Base+0x2ee0>
   1ed54:	mov	x0, x20
   1ed58:	ldp	x21, x22, [sp, #16]
   1ed5c:	ldp	x23, x24, [sp, #32]
   1ed60:	ldr	x30, [sp, #48]
   1ed64:	ldp	x19, x20, [sp], #112
   1ed68:	ret
   1ed6c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1ed70:	str	x0, [x22]
   1ed74:	sub	x1, x0, #0x1
   1ed78:	tst	x0, x1
   1ed7c:	b.ne	1eda0 <__sanitizer_set_report_fd@@Base+0x6fe0>  // b.any
   1ed80:	add	x19, x19, x1
   1ed84:	neg	x2, x0
   1ed88:	and	x19, x19, x2
   1ed8c:	cbnz	x0, 1ecf0 <__sanitizer_set_report_fd@@Base+0x6f30>
   1ed90:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   1ed94:	neg	x2, x0
   1ed98:	str	x0, [x22]
   1ed9c:	b	1ecf0 <__sanitizer_set_report_fd@@Base+0x6f30>
   1eda0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   1eda4:	add	x0, x0, #0xb38
   1eda8:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1edac:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1edb0:	cbz	w21, 1edc8 <__sanitizer_set_report_fd@@Base+0x7008>
   1edb4:	ldr	w0, [sp, #68]
   1edb8:	cmp	w0, #0xc
   1edbc:	b.ne	1edc8 <__sanitizer_set_report_fd@@Base+0x7008>  // b.any
   1edc0:	mov	x0, #0x0                   	// #0
   1edc4:	b	1ed58 <__sanitizer_set_report_fd@@Base+0x6f98>
   1edc8:	mov	x3, x22
   1edcc:	mov	x1, #0x28                  	// #40
   1edd0:	mov	x0, x24
   1edd4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1edd8:	add	x2, x2, #0xe00
   1eddc:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   1ede0:	ldr	w3, [sp, #68]
   1ede4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1ede8:	mov	x1, x24
   1edec:	mov	x0, x19
   1edf0:	add	x2, x2, #0xd78
   1edf4:	mov	w4, #0x0                   	// #0
   1edf8:	bl	147a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2ae8>
   1edfc:	nop
   1ee00:	mov	x3, x2
   1ee04:	mov	w2, #0x0                   	// #0
   1ee08:	b	1eca8 <__sanitizer_set_report_fd@@Base+0x6ee8>
   1ee0c:	nop
   1ee10:	mov	x3, x2
   1ee14:	mov	w2, #0x1                   	// #1
   1ee18:	b	1eca8 <__sanitizer_set_report_fd@@Base+0x6ee8>
   1ee1c:	nop
   1ee20:	ret
   1ee24:	nop
   1ee28:	stp	x19, x20, [sp, #-48]!
   1ee2c:	mov	x19, x0
   1ee30:	mov	x20, x1
   1ee34:	mov	x0, x4
   1ee38:	stp	x21, x30, [sp, #16]
   1ee3c:	mov	w21, w2
   1ee40:	add	x2, sp, #0x2c
   1ee44:	str	w3, [sp, #44]
   1ee48:	bl	1e2f0 <__sanitizer_set_report_fd@@Base+0x6530>
   1ee4c:	mov	w4, w0
   1ee50:	ldr	w3, [sp, #44]
   1ee54:	mov	w2, w21
   1ee58:	mov	x5, #0x0                   	// #0
   1ee5c:	mov	x1, x20
   1ee60:	mov	x0, x19
   1ee64:	bl	1c0e0 <__sanitizer_set_report_fd@@Base+0x4320>
   1ee68:	mov	x19, x0
   1ee6c:	mov	x1, #0x0                   	// #0
   1ee70:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1ee74:	mov	x0, x19
   1ee78:	ldp	x21, x30, [sp, #16]
   1ee7c:	ldp	x19, x20, [sp], #48
   1ee80:	ret
   1ee84:	nop
   1ee88:	stp	x19, x20, [sp, #-320]!
   1ee8c:	and	w3, w3, #0xff
   1ee90:	cmp	w3, #0xa
   1ee94:	cset	w8, ne  // ne = any
   1ee98:	stp	x21, x22, [sp, #16]
   1ee9c:	cmp	w8, #0x0
   1eea0:	stp	x23, x24, [sp, #32]
   1eea4:	ccmp	w3, #0x10, #0x4, ne  // ne = any
   1eea8:	stp	x25, x26, [sp, #48]
   1eeac:	str	x30, [sp, #64]
   1eeb0:	b.ne	1f0a4 <__sanitizer_set_report_fd@@Base+0x72e4>  // b.any
   1eeb4:	and	w24, w6, #0xff
   1eeb8:	cmp	w8, #0x0
   1eebc:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   1eec0:	b.ne	1f0c4 <__sanitizer_set_report_fd@@Base+0x7304>  // b.any
   1eec4:	cmp	x2, #0x0
   1eec8:	ccmp	w24, #0x0, #0x4, eq  // eq = none
   1eecc:	b.ne	1f0d4 <__sanitizer_set_report_fd@@Base+0x7314>  // b.any
   1eed0:	and	w23, w4, #0xff
   1eed4:	cmp	w23, #0x1d
   1eed8:	b.hi	1f0e4 <__sanitizer_set_report_fd@@Base+0x7324>  // b.pmore
   1eedc:	cmp	w23, #0x0
   1eee0:	mov	x19, x0
   1eee4:	sub	w0, w23, #0x1
   1eee8:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   1eeec:	and	w0, w0, #0xff
   1eef0:	and	w25, w5, #0xff
   1eef4:	csel	w23, w0, w23, ne  // ne = any
   1eef8:	cmp	w24, #0x0
   1eefc:	mov	x20, x1
   1ef00:	and	w26, w7, #0xff
   1ef04:	ccmp	w25, #0x0, #0x4, ne  // ne = any
   1ef08:	mov	w21, #0x0                   	// #0
   1ef0c:	b.ne	1ef5c <__sanitizer_set_report_fd@@Base+0x719c>  // b.any
   1ef10:	add	x22, sp, #0x50
   1ef14:	and	x3, x3, #0xff
   1ef18:	mov	x10, x22
   1ef1c:	mov	w0, #0x0                   	// #0
   1ef20:	udiv	x11, x2, x3
   1ef24:	mov	w8, w0
   1ef28:	cmp	x3, x2
   1ef2c:	add	w0, w0, #0x1
   1ef30:	msub	x12, x11, x3, x2
   1ef34:	mov	x2, x11
   1ef38:	str	x12, [x10]
   1ef3c:	b.hi	1ef84 <__sanitizer_set_report_fd@@Base+0x71c4>  // b.pmore
   1ef40:	add	x10, x10, #0x8
   1ef44:	cmp	w0, #0x1e
   1ef48:	b.ne	1ef20 <__sanitizer_set_report_fd@@Base+0x7160>  // b.any
   1ef4c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1ef50:	add	x0, x0, #0xea0
   1ef54:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1ef58:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1ef5c:	ldr	x9, [x19]
   1ef60:	mov	w21, #0x1                   	// #1
   1ef64:	cmp	x1, x9
   1ef68:	b.ls	1ef10 <__sanitizer_set_report_fd@@Base+0x7150>  // b.plast
   1ef6c:	mov	w0, #0x2d                  	// #45
   1ef70:	strb	w0, [x9]
   1ef74:	ldr	x9, [x19]
   1ef78:	add	x9, x9, #0x1
   1ef7c:	str	x9, [x19]
   1ef80:	b	1ef10 <__sanitizer_set_report_fd@@Base+0x7150>
   1ef84:	cmp	w0, w23
   1ef88:	b.lt	1f088 <__sanitizer_set_report_fd@@Base+0x72c8>  // b.tstop
   1ef8c:	ldr	x9, [x19]
   1ef90:	add	x0, x22, w8, sxtw #3
   1ef94:	mov	w3, #0x20                  	// #32
   1ef98:	mov	w2, #0x30                  	// #48
   1ef9c:	nop
   1efa0:	ldr	x1, [x0]
   1efa4:	cbnz	x1, 1f0b4 <__sanitizer_set_report_fd@@Base+0x72f4>
   1efa8:	cmp	w8, #0x0
   1efac:	ccmp	w25, #0x0, #0x0, ne  // ne = any
   1efb0:	csel	w1, w3, w2, eq  // eq = none
   1efb4:	cmp	x20, x9
   1efb8:	b.ls	1efcc <__sanitizer_set_report_fd@@Base+0x720c>  // b.plast
   1efbc:	strb	w1, [x9]
   1efc0:	ldr	x9, [x19]
   1efc4:	add	x9, x9, #0x1
   1efc8:	str	x9, [x19]
   1efcc:	sub	w8, w8, #0x1
   1efd0:	add	w21, w21, #0x1
   1efd4:	cmn	w8, #0x1
   1efd8:	sub	x0, x0, #0x8
   1efdc:	b.ne	1efa0 <__sanitizer_set_report_fd@@Base+0x71e0>  // b.any
   1efe0:	eor	w25, w25, #0x1
   1efe4:	tst	w24, w25
   1efe8:	b.eq	1f06c <__sanitizer_set_report_fd@@Base+0x72ac>  // b.none
   1efec:	cmp	x20, x9
   1eff0:	b.hi	1f0f4 <__sanitizer_set_report_fd@@Base+0x7334>  // b.pmore
   1eff4:	add	w21, w21, #0x1
   1eff8:	cmn	w8, #0x1
   1effc:	b.eq	1f06c <__sanitizer_set_report_fd@@Base+0x72ac>  // b.none
   1f000:	cmp	w26, #0x0
   1f004:	sub	w3, w8, #0x1
   1f008:	mov	w4, #0x41                  	// #65
   1f00c:	mov	w0, #0x61                  	// #97
   1f010:	csel	w4, w4, w0, ne  // ne = any
   1f014:	sxtw	x3, w3
   1f018:	sub	w4, w4, #0xa
   1f01c:	mov	x5, #0xfffffffffffffffe    	// #-2
   1f020:	add	x0, x22, x3, lsl #3
   1f024:	ldrb	w1, [x0, #8]
   1f028:	add	w0, w1, #0x30
   1f02c:	add	w2, w1, w4
   1f030:	cmp	w1, #0x9
   1f034:	and	w0, w0, #0xff
   1f038:	and	w2, w2, #0xff
   1f03c:	csel	w2, w2, w0, hi  // hi = pmore
   1f040:	cmp	x20, x9
   1f044:	b.ls	1f058 <__sanitizer_set_report_fd@@Base+0x7298>  // b.plast
   1f048:	strb	w2, [x9]
   1f04c:	ldr	x9, [x19]
   1f050:	add	x9, x9, #0x1
   1f054:	str	x9, [x19]
   1f058:	sub	x3, x3, #0x1
   1f05c:	cmp	x3, x5
   1f060:	b.ne	1f020 <__sanitizer_set_report_fd@@Base+0x7260>  // b.any
   1f064:	add	w21, w21, #0x1
   1f068:	add	w21, w21, w8
   1f06c:	mov	w0, w21
   1f070:	ldp	x21, x22, [sp, #16]
   1f074:	ldp	x23, x24, [sp, #32]
   1f078:	ldp	x25, x26, [sp, #48]
   1f07c:	ldr	x30, [sp, #64]
   1f080:	ldp	x19, x20, [sp], #320
   1f084:	ret
   1f088:	sub	w2, w23, w0
   1f08c:	mov	w1, #0x0                   	// #0
   1f090:	add	x0, x22, w0, sxtw #3
   1f094:	sbfiz	x2, x2, #3, #32
   1f098:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   1f09c:	sub	w8, w23, #0x1
   1f0a0:	b	1ef8c <__sanitizer_set_report_fd@@Base+0x71cc>
   1f0a4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1f0a8:	add	x0, x0, #0xe28
   1f0ac:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f0b0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1f0b4:	eor	w25, w25, #0x1
   1f0b8:	tst	w24, w25
   1f0bc:	b.eq	1f000 <__sanitizer_set_report_fd@@Base+0x7240>  // b.none
   1f0c0:	b	1efec <__sanitizer_set_report_fd@@Base+0x722c>
   1f0c4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1f0c8:	add	x0, x0, #0xe48
   1f0cc:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f0d0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1f0d4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1f0d8:	add	x0, x0, #0xe60
   1f0dc:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f0e0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1f0e4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1f0e8:	add	x0, x0, #0xe80
   1f0ec:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f0f0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1f0f4:	mov	w0, #0x2d                  	// #45
   1f0f8:	strb	w0, [x9]
   1f0fc:	ldr	x9, [x19]
   1f100:	add	x9, x9, #0x1
   1f104:	str	x9, [x19]
   1f108:	b	1eff4 <__sanitizer_set_report_fd@@Base+0x7234>
   1f10c:	nop
   1f110:	stp	x19, x20, [sp, #-112]!
   1f114:	stp	x23, x24, [sp, #32]
   1f118:	stp	x27, x28, [sp, #64]
   1f11c:	str	x30, [sp, #80]
   1f120:	str	x0, [sp, #104]
   1f124:	cbz	x2, 1f750 <__sanitizer_set_report_fd@@Base+0x7990>
   1f128:	cmp	w1, #0x0
   1f12c:	b.le	1f768 <__sanitizer_set_report_fd@@Base+0x79a8>
   1f130:	ldrb	w4, [x2]
   1f134:	sxtw	x19, w1
   1f138:	sub	x28, x19, #0x1
   1f13c:	mov	x20, x0
   1f140:	add	x28, x0, x28
   1f144:	cbz	w4, 1f82c <__sanitizer_set_report_fd@@Base+0x7a6c>
   1f148:	stp	x21, x22, [sp, #16]
   1f14c:	adrp	x21, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1f150:	add	x0, x21, #0xec0
   1f154:	mov	w27, #0x1                   	// #1
   1f158:	mov	w24, #0x0                   	// #0
   1f15c:	sub	w27, w27, w0
   1f160:	stp	x25, x26, [sp, #48]
   1f164:	ldr	w26, [x3, #24]
   1f168:	ldp	x25, x22, [x3]
   1f16c:	b	1f1a4 <__sanitizer_set_report_fd@@Base+0x73e4>
   1f170:	ldr	x0, [sp, #104]
   1f174:	cmp	x28, x0
   1f178:	b.ls	1f18c <__sanitizer_set_report_fd@@Base+0x73cc>  // b.plast
   1f17c:	strb	w4, [x0]
   1f180:	ldr	x0, [sp, #104]
   1f184:	add	x0, x0, #0x1
   1f188:	str	x0, [sp, #104]
   1f18c:	mov	x0, x23
   1f190:	add	w24, w24, #0x1
   1f194:	mov	x23, x2
   1f198:	mov	x2, x0
   1f19c:	ldrb	w4, [x23, #1]
   1f1a0:	cbz	w4, 1f340 <__sanitizer_set_report_fd@@Base+0x7580>
   1f1a4:	cmp	w4, #0x25
   1f1a8:	add	x23, x2, #0x1
   1f1ac:	b.ne	1f170 <__sanitizer_set_report_fd@@Base+0x73b0>  // b.any
   1f1b0:	ldrb	w1, [x2, #1]
   1f1b4:	cmp	w1, #0x2d
   1f1b8:	mov	w3, w1
   1f1bc:	b.ne	1f1c8 <__sanitizer_set_report_fd@@Base+0x7408>  // b.any
   1f1c0:	ldrb	w3, [x2, #2]
   1f1c4:	add	x23, x2, #0x2
   1f1c8:	sub	w0, w3, #0x30
   1f1cc:	mov	w4, #0x0                   	// #0
   1f1d0:	and	w0, w0, #0xff
   1f1d4:	cmp	w0, #0x9
   1f1d8:	cset	w6, ls  // ls = plast
   1f1dc:	cmp	w3, #0x30
   1f1e0:	cset	w5, eq  // eq = none
   1f1e4:	cmp	w0, #0x9
   1f1e8:	b.ls	1f254 <__sanitizer_set_report_fd@@Base+0x7494>  // b.plast
   1f1ec:	cmp	w3, #0x2e
   1f1f0:	mov	w8, #0x1                   	// #1
   1f1f4:	mov	w2, #0xffffffff            	// #-1
   1f1f8:	b.eq	1f298 <__sanitizer_set_report_fd@@Base+0x74d8>  // b.none
   1f1fc:	cmp	w3, #0x7a
   1f200:	cinc	x23, x23, eq  // eq = none
   1f204:	cset	w7, eq  // eq = none
   1f208:	ldrb	w3, [x23]
   1f20c:	b.eq	1f218 <__sanitizer_set_report_fd@@Base+0x7458>  // b.none
   1f210:	cmp	w3, #0x6c
   1f214:	b.eq	1f2b4 <__sanitizer_set_report_fd@@Base+0x74f4>  // b.none
   1f218:	cmp	w1, #0x2d
   1f21c:	orr	w6, w6, w7
   1f220:	ccmp	w8, #0x0, #0x4, ne  // ne = any
   1f224:	mov	w9, #0x0                   	// #0
   1f228:	b.ne	1f2e0 <__sanitizer_set_report_fd@@Base+0x7520>  // b.any
   1f22c:	cmp	w3, #0x73
   1f230:	b.eq	1f4e8 <__sanitizer_set_report_fd@@Base+0x7728>  // b.none
   1f234:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1f238:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1f23c:	add	x2, x2, #0xee8
   1f240:	add	x0, x0, #0xf28
   1f244:	mov	x4, #0x0                   	// #0
   1f248:	mov	x3, #0x0                   	// #0
   1f24c:	mov	w1, #0xaa                  	// #170
   1f250:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1f254:	add	w4, w4, w4, lsl #2
   1f258:	add	w4, w3, w4, lsl #1
   1f25c:	ldrb	w3, [x23, #1]!
   1f260:	sub	w4, w4, #0x30
   1f264:	sub	w2, w3, #0x30
   1f268:	and	w2, w2, #0xff
   1f26c:	cmp	w2, #0x9
   1f270:	b.hi	1f1ec <__sanitizer_set_report_fd@@Base+0x742c>  // b.pmore
   1f274:	add	w4, w4, w4, lsl #2
   1f278:	add	w4, w3, w4, lsl #1
   1f27c:	ldrb	w3, [x23, #1]!
   1f280:	sub	w4, w4, #0x30
   1f284:	sub	w2, w3, #0x30
   1f288:	and	w2, w2, #0xff
   1f28c:	cmp	w2, #0x9
   1f290:	b.ls	1f254 <__sanitizer_set_report_fd@@Base+0x7494>  // b.plast
   1f294:	b	1f1ec <__sanitizer_set_report_fd@@Base+0x742c>
   1f298:	ldrb	w3, [x23, #1]
   1f29c:	cmp	w3, #0x2a
   1f2a0:	b.eq	1f654 <__sanitizer_set_report_fd@@Base+0x7894>  // b.none
   1f2a4:	ldrb	w3, [x23]
   1f2a8:	mov	w7, #0x0                   	// #0
   1f2ac:	cmp	w3, #0x6c
   1f2b0:	b.ne	1f218 <__sanitizer_set_report_fd@@Base+0x7458>  // b.any
   1f2b4:	ldrb	w9, [x23, #1]
   1f2b8:	cmp	w9, #0x6c
   1f2bc:	b.ne	1f218 <__sanitizer_set_report_fd@@Base+0x7458>  // b.any
   1f2c0:	cmp	w1, #0x2d
   1f2c4:	mov	w7, #0x1                   	// #1
   1f2c8:	ldrb	w3, [x23, #2]
   1f2cc:	mov	w6, w7
   1f2d0:	add	x23, x23, #0x2
   1f2d4:	mov	w9, w7
   1f2d8:	ccmp	w8, #0x0, #0x4, ne  // ne = any
   1f2dc:	b.eq	1f22c <__sanitizer_set_report_fd@@Base+0x746c>  // b.none
   1f2e0:	cmp	w3, #0x64
   1f2e4:	b.eq	1f4b8 <__sanitizer_set_report_fd@@Base+0x76f8>  // b.none
   1f2e8:	b.hi	1f37c <__sanitizer_set_report_fd@@Base+0x75bc>  // b.pmore
   1f2ec:	cmp	w3, #0x58
   1f2f0:	b.eq	1f46c <__sanitizer_set_report_fd@@Base+0x76ac>  // b.none
   1f2f4:	cmp	w3, #0x63
   1f2f8:	b.ne	1f404 <__sanitizer_set_report_fd@@Base+0x7644>  // b.any
   1f2fc:	cbnz	w6, 1f440 <__sanitizer_set_report_fd@@Base+0x7680>
   1f300:	tbnz	w26, #31, 1f604 <__sanitizer_set_report_fd@@Base+0x7844>
   1f304:	add	x0, x25, #0xb
   1f308:	mov	x1, x25
   1f30c:	and	x25, x0, #0xfffffffffffffff8
   1f310:	ldr	x0, [sp, #104]
   1f314:	cmp	x28, x0
   1f318:	b.ls	1f330 <__sanitizer_set_report_fd@@Base+0x7570>  // b.plast
   1f31c:	ldr	w1, [x1]
   1f320:	strb	w1, [x0]
   1f324:	ldr	x0, [sp, #104]
   1f328:	add	x0, x0, #0x1
   1f32c:	str	x0, [sp, #104]
   1f330:	add	w24, w24, #0x1
   1f334:	add	x2, x23, #0x1
   1f338:	ldrb	w4, [x23, #1]
   1f33c:	cbnz	w4, 1f1a4 <__sanitizer_set_report_fd@@Base+0x73e4>
   1f340:	ldp	x21, x22, [sp, #16]
   1f344:	ldp	x25, x26, [sp, #48]
   1f348:	ldr	x0, [sp, #104]
   1f34c:	cmp	x28, x0
   1f350:	b.cc	1f834 <__sanitizer_set_report_fd@@Base+0x7a74>  // b.lo, b.ul, b.last
   1f354:	add	x19, x20, x19
   1f358:	cmp	x0, x19
   1f35c:	b.cs	1f364 <__sanitizer_set_report_fd@@Base+0x75a4>  // b.hs, b.nlast
   1f360:	strb	wzr, [x0]
   1f364:	mov	w0, w24
   1f368:	ldp	x23, x24, [sp, #32]
   1f36c:	ldp	x27, x28, [sp, #64]
   1f370:	ldr	x30, [sp, #80]
   1f374:	ldp	x19, x20, [sp], #112
   1f378:	ret
   1f37c:	cmp	w3, #0x70
   1f380:	b.ne	1f438 <__sanitizer_set_report_fd@@Base+0x7678>  // b.any
   1f384:	cbnz	w6, 1f440 <__sanitizer_set_report_fd@@Base+0x7680>
   1f388:	tbnz	w26, #31, 1f624 <__sanitizer_set_report_fd@@Base+0x7864>
   1f38c:	add	x0, x25, #0xf
   1f390:	mov	x2, x25
   1f394:	and	x25, x0, #0xfffffffffffffff8
   1f398:	ldr	x2, [x2]
   1f39c:	add	x1, x21, #0xec0
   1f3a0:	ldr	x0, [sp, #104]
   1f3a4:	mov	w3, #0x30                  	// #48
   1f3a8:	cmp	x28, x0
   1f3ac:	b.ls	1f644 <__sanitizer_set_report_fd@@Base+0x7884>  // b.plast
   1f3b0:	strb	w3, [x0]
   1f3b4:	add	w8, w27, w1
   1f3b8:	ldrb	w3, [x1, #1]!
   1f3bc:	ldr	x0, [sp, #104]
   1f3c0:	add	x0, x0, #0x1
   1f3c4:	str	x0, [sp, #104]
   1f3c8:	cbnz	w3, 1f3a8 <__sanitizer_set_report_fd@@Base+0x75e8>
   1f3cc:	mov	x1, x28
   1f3d0:	add	x0, sp, #0x68
   1f3d4:	mov	w7, #0x0                   	// #0
   1f3d8:	mov	w6, #0x0                   	// #0
   1f3dc:	mov	w5, #0x1                   	// #1
   1f3e0:	mov	w4, #0xc                   	// #12
   1f3e4:	mov	w3, #0x10                  	// #16
   1f3e8:	str	w8, [sp, #100]
   1f3ec:	bl	1ee88 <__sanitizer_set_report_fd@@Base+0x70c8>
   1f3f0:	ldr	w8, [sp, #100]
   1f3f4:	add	x2, x23, #0x1
   1f3f8:	add	w8, w0, w8
   1f3fc:	add	w24, w24, w8
   1f400:	b	1f19c <__sanitizer_set_report_fd@@Base+0x73dc>
   1f404:	cmp	w3, #0x25
   1f408:	b.ne	1f440 <__sanitizer_set_report_fd@@Base+0x7680>  // b.any
   1f40c:	cbnz	w6, 1f440 <__sanitizer_set_report_fd@@Base+0x7680>
   1f410:	ldr	x0, [sp, #104]
   1f414:	cmp	x28, x0
   1f418:	b.ls	1f330 <__sanitizer_set_report_fd@@Base+0x7570>  // b.plast
   1f41c:	strb	w3, [x0]
   1f420:	add	w24, w24, #0x1
   1f424:	add	x2, x23, #0x1
   1f428:	ldr	x0, [sp, #104]
   1f42c:	add	x0, x0, #0x1
   1f430:	str	x0, [sp, #104]
   1f434:	b	1f338 <__sanitizer_set_report_fd@@Base+0x7578>
   1f438:	cmp	w3, #0x6f
   1f43c:	b.hi	1f450 <__sanitizer_set_report_fd@@Base+0x7690>  // b.pmore
   1f440:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1f444:	add	x0, x0, #0xf80
   1f448:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f44c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1f450:	cmp	w3, #0x78
   1f454:	b.eq	1f46c <__sanitizer_set_report_fd@@Base+0x76ac>  // b.none
   1f458:	b.hi	1f440 <__sanitizer_set_report_fd@@Base+0x7680>  // b.pmore
   1f45c:	cmp	w3, #0x73
   1f460:	b.eq	1f4e8 <__sanitizer_set_report_fd@@Base+0x7728>  // b.none
   1f464:	cmp	w3, #0x75
   1f468:	b.ne	1f440 <__sanitizer_set_report_fd@@Base+0x7680>  // b.any
   1f46c:	cbz	w9, 1f5cc <__sanitizer_set_report_fd@@Base+0x780c>
   1f470:	tbnz	w26, #31, 1f710 <__sanitizer_set_report_fd@@Base+0x7950>
   1f474:	add	x1, x25, #0xf
   1f478:	mov	x0, x25
   1f47c:	and	x25, x1, #0xfffffffffffffff8
   1f480:	ldr	x2, [x0]
   1f484:	cmp	w3, #0x58
   1f488:	cset	w7, eq  // eq = none
   1f48c:	cmp	w3, #0x75
   1f490:	mov	w0, #0x10                  	// #16
   1f494:	mov	w3, #0xa                   	// #10
   1f498:	csel	w3, w3, w0, eq  // eq = none
   1f49c:	mov	w6, #0x0                   	// #0
   1f4a0:	mov	x1, x28
   1f4a4:	add	x0, sp, #0x68
   1f4a8:	bl	1ee88 <__sanitizer_set_report_fd@@Base+0x70c8>
   1f4ac:	add	w24, w24, w0
   1f4b0:	add	x2, x23, #0x1
   1f4b4:	b	1f19c <__sanitizer_set_report_fd@@Base+0x73dc>
   1f4b8:	cbz	w9, 1f5e8 <__sanitizer_set_report_fd@@Base+0x7828>
   1f4bc:	tbnz	w26, #31, 1f730 <__sanitizer_set_report_fd@@Base+0x7970>
   1f4c0:	add	x1, x25, #0xf
   1f4c4:	mov	x0, x25
   1f4c8:	and	x25, x1, #0xfffffffffffffff8
   1f4cc:	ldr	x6, [x0]
   1f4d0:	cmp	x6, #0x0
   1f4d4:	cneg	x2, x6, lt  // lt = tstop
   1f4d8:	mov	w7, #0x0                   	// #0
   1f4dc:	lsr	x6, x6, #63
   1f4e0:	mov	w3, #0xa                   	// #10
   1f4e4:	b	1f4a0 <__sanitizer_set_report_fd@@Base+0x76e0>
   1f4e8:	cbnz	w7, 1f440 <__sanitizer_set_report_fd@@Base+0x7680>
   1f4ec:	cmp	w1, #0x2d
   1f4f0:	ccmp	w0, #0x9, #0x2, ne  // ne = any
   1f4f4:	b.ls	1f694 <__sanitizer_set_report_fd@@Base+0x78d4>  // b.plast
   1f4f8:	cmp	w1, #0x2d
   1f4fc:	cneg	w4, w4, eq  // eq = none
   1f500:	tbnz	w26, #31, 1f6bc <__sanitizer_set_report_fd@@Base+0x78fc>
   1f504:	add	x1, x25, #0xf
   1f508:	mov	x0, x25
   1f50c:	and	x25, x1, #0xfffffffffffffff8
   1f510:	ldr	x5, [x0]
   1f514:	cbz	x5, 1f6e0 <__sanitizer_set_report_fd@@Base+0x7920>
   1f518:	ldrb	w3, [x5]
   1f51c:	cbz	w3, 1f818 <__sanitizer_set_report_fd@@Base+0x7a58>
   1f520:	cbz	w2, 1f824 <__sanitizer_set_report_fd@@Base+0x7a64>
   1f524:	mov	w6, #0x0                   	// #0
   1f528:	ldr	x0, [sp, #104]
   1f52c:	b	1f53c <__sanitizer_set_report_fd@@Base+0x777c>
   1f530:	cmp	w1, w2
   1f534:	b.eq	1f6b4 <__sanitizer_set_report_fd@@Base+0x78f4>  // b.none
   1f538:	mov	w6, w1
   1f53c:	cmp	x28, x0
   1f540:	b.ls	1f554 <__sanitizer_set_report_fd@@Base+0x7794>  // b.plast
   1f544:	strb	w3, [x0]
   1f548:	ldr	x0, [sp, #104]
   1f54c:	add	x0, x0, #0x1
   1f550:	str	x0, [sp, #104]
   1f554:	ldrb	w3, [x5, #1]!
   1f558:	add	w1, w6, #0x1
   1f55c:	cbnz	w3, 1f530 <__sanitizer_set_report_fd@@Base+0x7770>
   1f560:	mvn	w6, w6
   1f564:	mov	w2, w1
   1f568:	cmp	w4, w6
   1f56c:	b.ge	1f5c0 <__sanitizer_set_report_fd@@Base+0x7800>  // b.tcont
   1f570:	ldr	x0, [sp, #104]
   1f574:	mov	w1, w2
   1f578:	mov	w5, #0x20                  	// #32
   1f57c:	nop
   1f580:	cmp	x28, x0
   1f584:	b.ls	1f598 <__sanitizer_set_report_fd@@Base+0x77d8>  // b.plast
   1f588:	strb	w5, [x0]
   1f58c:	ldr	x0, [sp, #104]
   1f590:	add	x0, x0, #0x1
   1f594:	str	x0, [sp, #104]
   1f598:	add	w1, w1, #0x1
   1f59c:	neg	w3, w1
   1f5a0:	cmp	w4, w3
   1f5a4:	b.lt	1f580 <__sanitizer_set_report_fd@@Base+0x77c0>  // b.tstop
   1f5a8:	mvn	w0, w2
   1f5ac:	add	w2, w2, #0x1
   1f5b0:	cmp	w4, w0
   1f5b4:	sub	w4, w0, w4
   1f5b8:	csel	w4, w4, wzr, le
   1f5bc:	add	w2, w4, w2
   1f5c0:	add	w24, w24, w2
   1f5c4:	add	x2, x23, #0x1
   1f5c8:	b	1f19c <__sanitizer_set_report_fd@@Base+0x73dc>
   1f5cc:	cbnz	w7, 1f470 <__sanitizer_set_report_fd@@Base+0x76b0>
   1f5d0:	tbnz	w26, #31, 1f7b0 <__sanitizer_set_report_fd@@Base+0x79f0>
   1f5d4:	mov	x0, x25
   1f5d8:	add	x1, x25, #0xb
   1f5dc:	and	x25, x1, #0xfffffffffffffff8
   1f5e0:	ldr	w2, [x0]
   1f5e4:	b	1f484 <__sanitizer_set_report_fd@@Base+0x76c4>
   1f5e8:	cbnz	w7, 1f4bc <__sanitizer_set_report_fd@@Base+0x76fc>
   1f5ec:	tbnz	w26, #31, 1f78c <__sanitizer_set_report_fd@@Base+0x79cc>
   1f5f0:	mov	x0, x25
   1f5f4:	add	x1, x25, #0xb
   1f5f8:	and	x25, x1, #0xfffffffffffffff8
   1f5fc:	ldrsw	x6, [x0]
   1f600:	b	1f4d0 <__sanitizer_set_report_fd@@Base+0x7710>
   1f604:	add	w0, w26, #0x8
   1f608:	cmp	w0, #0x0
   1f60c:	b.le	1f67c <__sanitizer_set_report_fd@@Base+0x78bc>
   1f610:	add	x2, x25, #0xb
   1f614:	mov	x1, x25
   1f618:	mov	w26, w0
   1f61c:	and	x25, x2, #0xfffffffffffffff8
   1f620:	b	1f310 <__sanitizer_set_report_fd@@Base+0x7550>
   1f624:	add	w0, w26, #0x8
   1f628:	cmp	w0, #0x0
   1f62c:	b.le	1f688 <__sanitizer_set_report_fd@@Base+0x78c8>
   1f630:	add	x1, x25, #0xf
   1f634:	mov	x2, x25
   1f638:	mov	w26, w0
   1f63c:	and	x25, x1, #0xfffffffffffffff8
   1f640:	b	1f398 <__sanitizer_set_report_fd@@Base+0x75d8>
   1f644:	add	w8, w27, w1
   1f648:	ldrb	w3, [x1, #1]!
   1f64c:	cbnz	w3, 1f3a8 <__sanitizer_set_report_fd@@Base+0x75e8>
   1f650:	b	1f3cc <__sanitizer_set_report_fd@@Base+0x760c>
   1f654:	add	x7, x23, #0x2
   1f658:	tbnz	w26, #31, 1f6f0 <__sanitizer_set_report_fd@@Base+0x7930>
   1f65c:	add	x3, x25, #0xb
   1f660:	mov	x2, x25
   1f664:	and	x25, x3, #0xfffffffffffffff8
   1f668:	ldr	w2, [x2]
   1f66c:	ldrb	w3, [x23, #2]
   1f670:	mov	x23, x7
   1f674:	lsr	w8, w2, #31
   1f678:	b	1f1fc <__sanitizer_set_report_fd@@Base+0x743c>
   1f67c:	add	x1, x22, w26, sxtw
   1f680:	mov	w26, w0
   1f684:	b	1f310 <__sanitizer_set_report_fd@@Base+0x7550>
   1f688:	add	x2, x22, w26, sxtw
   1f68c:	mov	w26, w0
   1f690:	b	1f398 <__sanitizer_set_report_fd@@Base+0x75d8>
   1f694:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1f698:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1f69c:	add	x2, x2, #0xfd8
   1f6a0:	add	x0, x0, #0xf28
   1f6a4:	mov	x4, #0x0                   	// #0
   1f6a8:	mov	x3, #0x0                   	// #0
   1f6ac:	mov	w1, #0xc7                  	// #199
   1f6b0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1f6b4:	neg	w6, w2
   1f6b8:	b	1f568 <__sanitizer_set_report_fd@@Base+0x77a8>
   1f6bc:	add	w1, w26, #0x8
   1f6c0:	cmp	w1, #0x0
   1f6c4:	b.le	1f780 <__sanitizer_set_report_fd@@Base+0x79c0>
   1f6c8:	mov	x0, x25
   1f6cc:	add	x3, x25, #0xf
   1f6d0:	mov	w26, w1
   1f6d4:	and	x25, x3, #0xfffffffffffffff8
   1f6d8:	ldr	x5, [x0]
   1f6dc:	cbnz	x5, 1f518 <__sanitizer_set_report_fd@@Base+0x7758>
   1f6e0:	adrp	x5, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1f6e4:	mov	w3, #0x3c                  	// #60
   1f6e8:	add	x5, x5, #0xec8
   1f6ec:	b	1f520 <__sanitizer_set_report_fd@@Base+0x7760>
   1f6f0:	add	w3, w26, #0x8
   1f6f4:	cmp	w3, #0x0
   1f6f8:	b.le	1f7d4 <__sanitizer_set_report_fd@@Base+0x7a14>
   1f6fc:	add	x8, x25, #0xb
   1f700:	mov	x2, x25
   1f704:	mov	w26, w3
   1f708:	and	x25, x8, #0xfffffffffffffff8
   1f70c:	b	1f668 <__sanitizer_set_report_fd@@Base+0x78a8>
   1f710:	add	w1, w26, #0x8
   1f714:	cmp	w1, #0x0
   1f718:	b.le	1f7e0 <__sanitizer_set_report_fd@@Base+0x7a20>
   1f71c:	add	x2, x25, #0xf
   1f720:	mov	x0, x25
   1f724:	mov	w26, w1
   1f728:	and	x25, x2, #0xfffffffffffffff8
   1f72c:	b	1f480 <__sanitizer_set_report_fd@@Base+0x76c0>
   1f730:	add	w1, w26, #0x8
   1f734:	cmp	w1, #0x0
   1f738:	b.le	1f7ec <__sanitizer_set_report_fd@@Base+0x7a2c>
   1f73c:	add	x2, x25, #0xf
   1f740:	mov	x0, x25
   1f744:	mov	w26, w1
   1f748:	and	x25, x2, #0xfffffffffffffff8
   1f74c:	b	1f4cc <__sanitizer_set_report_fd@@Base+0x770c>
   1f750:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1f754:	add	x0, x0, #0xed0
   1f758:	stp	x21, x22, [sp, #16]
   1f75c:	stp	x25, x26, [sp, #48]
   1f760:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f764:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1f768:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1f76c:	add	x0, x0, #0xed8
   1f770:	stp	x21, x22, [sp, #16]
   1f774:	stp	x25, x26, [sp, #48]
   1f778:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f77c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1f780:	add	x0, x22, w26, sxtw
   1f784:	mov	w26, w1
   1f788:	b	1f510 <__sanitizer_set_report_fd@@Base+0x7750>
   1f78c:	add	w1, w26, #0x8
   1f790:	cmp	w1, #0x0
   1f794:	b.le	1f7f8 <__sanitizer_set_report_fd@@Base+0x7a38>
   1f798:	mov	x0, x25
   1f79c:	add	x2, x25, #0xb
   1f7a0:	mov	w26, w1
   1f7a4:	and	x25, x2, #0xfffffffffffffff8
   1f7a8:	ldrsw	x6, [x0]
   1f7ac:	b	1f4d0 <__sanitizer_set_report_fd@@Base+0x7710>
   1f7b0:	add	w1, w26, #0x8
   1f7b4:	cmp	w1, #0x0
   1f7b8:	b.le	1f808 <__sanitizer_set_report_fd@@Base+0x7a48>
   1f7bc:	mov	x0, x25
   1f7c0:	add	x2, x25, #0xb
   1f7c4:	and	x25, x2, #0xfffffffffffffff8
   1f7c8:	mov	w26, w1
   1f7cc:	ldr	w2, [x0]
   1f7d0:	b	1f484 <__sanitizer_set_report_fd@@Base+0x76c4>
   1f7d4:	add	x2, x22, w26, sxtw
   1f7d8:	mov	w26, w3
   1f7dc:	b	1f668 <__sanitizer_set_report_fd@@Base+0x78a8>
   1f7e0:	add	x0, x22, w26, sxtw
   1f7e4:	mov	w26, w1
   1f7e8:	b	1f480 <__sanitizer_set_report_fd@@Base+0x76c0>
   1f7ec:	add	x0, x22, w26, sxtw
   1f7f0:	mov	w26, w1
   1f7f4:	b	1f4cc <__sanitizer_set_report_fd@@Base+0x770c>
   1f7f8:	add	x0, x22, w26, sxtw
   1f7fc:	mov	w26, w1
   1f800:	ldrsw	x6, [x0]
   1f804:	b	1f4d0 <__sanitizer_set_report_fd@@Base+0x7710>
   1f808:	add	x0, x22, w26, sxtw
   1f80c:	mov	w26, w1
   1f810:	ldr	w2, [x0]
   1f814:	b	1f484 <__sanitizer_set_report_fd@@Base+0x76c4>
   1f818:	mov	w6, #0x0                   	// #0
   1f81c:	mov	w2, #0x0                   	// #0
   1f820:	b	1f568 <__sanitizer_set_report_fd@@Base+0x77a8>
   1f824:	mov	w6, #0x0                   	// #0
   1f828:	b	1f568 <__sanitizer_set_report_fd@@Base+0x77a8>
   1f82c:	mov	w24, #0x0                   	// #0
   1f830:	b	1f34c <__sanitizer_set_report_fd@@Base+0x758c>
   1f834:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   1f838:	add	x0, x0, #0x8
   1f83c:	stp	x21, x22, [sp, #16]
   1f840:	stp	x25, x26, [sp, #48]
   1f844:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f848:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1f84c:	nop
   1f850:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   1f854:	str	x0, [x1, #1800]
   1f858:	ret
   1f85c:	nop

000000000001f860 <__sanitizer_on_print@@Base>:
   1f860:	ret
   1f864:	nop
   1f868:	sub	sp, sp, #0x100
   1f86c:	mov	w9, #0xffffffd8            	// #-40
   1f870:	add	x10, sp, #0xd0
   1f874:	add	x11, sp, #0x100
   1f878:	mov	w8, #0xffffff80            	// #-128
   1f87c:	stp	x11, x11, [sp, #48]
   1f880:	str	x10, [sp, #64]
   1f884:	stp	w9, w8, [sp, #72]
   1f888:	ldp	x10, x11, [sp, #48]
   1f88c:	str	x30, [sp]
   1f890:	ldp	x8, x9, [sp, #64]
   1f894:	stp	x10, x11, [sp, #16]
   1f898:	stp	x8, x9, [sp, #32]
   1f89c:	str	q0, [sp, #80]
   1f8a0:	str	q1, [sp, #96]
   1f8a4:	str	q2, [sp, #112]
   1f8a8:	str	q3, [sp, #128]
   1f8ac:	str	q4, [sp, #144]
   1f8b0:	str	q5, [sp, #160]
   1f8b4:	str	q6, [sp, #176]
   1f8b8:	str	q7, [sp, #192]
   1f8bc:	stp	x3, x4, [sp, #216]
   1f8c0:	add	x3, sp, #0x10
   1f8c4:	stp	x5, x6, [sp, #232]
   1f8c8:	str	x7, [sp, #248]
   1f8cc:	bl	1f110 <__sanitizer_set_report_fd@@Base+0x7350>
   1f8d0:	ldr	x30, [sp]
   1f8d4:	add	sp, sp, #0x100
   1f8d8:	ret
   1f8dc:	nop
   1f8e0:	stp	x19, x20, [sp, #-176]!
   1f8e4:	and	w0, w0, #0xff
   1f8e8:	mov	x19, x1
   1f8ec:	stp	x23, x24, [sp, #32]
   1f8f0:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   1f8f4:	adrp	x24, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   1f8f8:	stp	x27, x28, [sp, #64]
   1f8fc:	mov	x27, x3
   1f900:	add	x24, x24, #0x50
   1f904:	ldr	x23, [x23, #4056]
   1f908:	stp	x21, x22, [sp, #16]
   1f90c:	mov	x21, x1
   1f910:	mov	x22, x2
   1f914:	stp	x25, x26, [sp, #48]
   1f918:	add	x25, sp, #0x70
   1f91c:	str	w0, [sp, #104]
   1f920:	mov	w26, #0x0                   	// #0
   1f924:	ldp	x2, x3, [x3]
   1f928:	mov	w20, #0x190                 	// #400
   1f92c:	ldp	x0, x1, [x27, #16]
   1f930:	str	x30, [sp, #80]
   1f934:	stp	x2, x3, [sp, #144]
   1f938:	stp	x0, x1, [sp, #160]
   1f93c:	ldr	w0, [sp, #104]
   1f940:	cbz	w0, 1f9a0 <__sanitizer_on_print@@Base+0x140>
   1f944:	bl	1c738 <__sanitizer_set_report_fd@@Base+0x4978>
   1f948:	mov	x28, x0
   1f94c:	bl	14de8 <_ZdaPvRKSt9nothrow_t@@Base+0x3128>
   1f950:	cmp	x0, #0x0
   1f954:	ldrb	w2, [x23, #48]
   1f958:	cset	w6, ne  // ne = any
   1f95c:	mov	x3, x0
   1f960:	sxtw	x1, w20
   1f964:	mov	x0, x19
   1f968:	tst	w6, w2
   1f96c:	mov	w5, #0x0                   	// #0
   1f970:	b.ne	1fabc <__sanitizer_on_print@@Base+0x25c>  // b.any
   1f974:	mov	w3, w28
   1f978:	mov	x2, x24
   1f97c:	str	w5, [sp, #108]
   1f980:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   1f984:	ldr	w5, [sp, #108]
   1f988:	add	w28, w5, w0
   1f98c:	cmp	w20, w28
   1f990:	b.le	1fa0c <__sanitizer_on_print@@Base+0x1ac>
   1f994:	add	x0, x19, w28, sxtw
   1f998:	sub	w1, w20, w28
   1f99c:	b	1f9ac <__sanitizer_on_print@@Base+0x14c>
   1f9a0:	mov	w1, w20
   1f9a4:	mov	x0, x19
   1f9a8:	mov	w28, #0x0                   	// #0
   1f9ac:	ldp	x6, x7, [x27]
   1f9b0:	mov	x3, x25
   1f9b4:	ldp	x8, x9, [x27, #16]
   1f9b8:	mov	x2, x22
   1f9bc:	stp	x6, x7, [x25]
   1f9c0:	stp	x8, x9, [x25, #16]
   1f9c4:	bl	1f110 <__sanitizer_set_report_fd@@Base+0x7350>
   1f9c8:	add	w0, w28, w0
   1f9cc:	cmp	w20, w0
   1f9d0:	b.gt	1fa58 <__sanitizer_on_print@@Base+0x1f8>
   1f9d4:	cbnz	w26, 1fa4c <__sanitizer_on_print@@Base+0x1ec>
   1f9d8:	ldp	x2, x3, [sp, #160]
   1f9dc:	stp	x2, x3, [x27, #16]
   1f9e0:	mov	w26, #0x1                   	// #1
   1f9e4:	ldp	x0, x1, [sp, #144]
   1f9e8:	stp	x0, x1, [x27]
   1f9ec:	mov	w2, #0x0                   	// #0
   1f9f0:	mov	w20, #0x4000                	// #16384
   1f9f4:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   1f9f8:	mov	x0, #0x4000                	// #16384
   1f9fc:	add	x1, x1, #0x20
   1fa00:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   1fa04:	mov	x19, x0
   1fa08:	b	1f93c <__sanitizer_on_print@@Base+0xdc>
   1fa0c:	cbz	w26, 1f9d8 <__sanitizer_on_print@@Base+0x178>
   1fa10:	mov	w0, #0x3fff                	// #16383
   1fa14:	cmp	w28, w0
   1fa18:	b.gt	1fae4 <__sanitizer_on_print@@Base+0x284>
   1fa1c:	ldp	x6, x7, [x27]
   1fa20:	mov	x2, x22
   1fa24:	ldp	x4, x5, [x27, #16]
   1fa28:	add	x3, sp, #0x70
   1fa2c:	sub	w1, w20, w28
   1fa30:	add	x0, x19, w28, sxtw
   1fa34:	stp	x6, x7, [sp, #112]
   1fa38:	stp	x4, x5, [sp, #128]
   1fa3c:	bl	1f110 <__sanitizer_set_report_fd@@Base+0x7350>
   1fa40:	add	w0, w28, w0
   1fa44:	cmp	w20, w0
   1fa48:	b.gt	1fa58 <__sanitizer_on_print@@Base+0x1f8>
   1fa4c:	mov	w1, #0x3fff                	// #16383
   1fa50:	cmp	w0, w1
   1fa54:	b.gt	1fae4 <__sanitizer_on_print@@Base+0x284>
   1fa58:	mov	x0, x19
   1fa5c:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1fa60:	mov	x0, x19
   1fa64:	bl	148d0 <_ZdaPvRKSt9nothrow_t@@Base+0x2c10>
   1fa68:	mov	x0, x19
   1fa6c:	bl	61e0 <__sanitizer_on_print@plt>
   1fa70:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   1fa74:	ldr	x1, [x0, #1800]
   1fa78:	cbz	x1, 1fa84 <__sanitizer_on_print@@Base+0x224>
   1fa7c:	mov	x0, x19
   1fa80:	blr	x1
   1fa84:	mov	x0, x19
   1fa88:	bl	24290 <__sanitizer_sandbox_on_notify@@Base+0xd08>
   1fa8c:	cmp	x19, x21
   1fa90:	b.eq	1faa0 <__sanitizer_on_print@@Base+0x240>  // b.none
   1fa94:	sxtw	x1, w20
   1fa98:	mov	x0, x19
   1fa9c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1faa0:	ldp	x21, x22, [sp, #16]
   1faa4:	ldp	x23, x24, [sp, #32]
   1faa8:	ldp	x25, x26, [sp, #48]
   1faac:	ldp	x27, x28, [sp, #64]
   1fab0:	ldr	x30, [sp, #80]
   1fab4:	ldp	x19, x20, [sp], #176
   1fab8:	ret
   1fabc:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   1fac0:	add	x2, x2, #0x28
   1fac4:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   1fac8:	mov	w5, w0
   1facc:	cmp	w20, w0
   1fad0:	b.le	1faf4 <__sanitizer_on_print@@Base+0x294>
   1fad4:	sub	w1, w20, w0
   1fad8:	add	x0, x19, w0, sxtw
   1fadc:	sxtw	x1, w1
   1fae0:	b	1f974 <__sanitizer_on_print@@Base+0x114>
   1fae4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   1fae8:	add	x0, x0, #0x30
   1faec:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1faf0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   1faf4:	cbz	w26, 1f9d8 <__sanitizer_on_print@@Base+0x178>
   1faf8:	mov	w0, #0x3fff                	// #16383
   1fafc:	cmp	w5, w0
   1fb00:	b.gt	1fae4 <__sanitizer_on_print@@Base+0x284>
   1fb04:	sub	w1, w20, w5
   1fb08:	mov	w3, w28
   1fb0c:	add	x0, x19, w5, sxtw
   1fb10:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   1fb14:	sxtw	x1, w1
   1fb18:	add	x2, x2, #0x50
   1fb1c:	str	w5, [sp, #104]
   1fb20:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   1fb24:	ldr	w5, [sp, #104]
   1fb28:	add	w28, w5, w0
   1fb2c:	cmp	w20, w28
   1fb30:	b.le	1fa10 <__sanitizer_on_print@@Base+0x1b0>
   1fb34:	b	1fa1c <__sanitizer_on_print@@Base+0x1bc>
   1fb38:	mov	x4, x2
   1fb3c:	sub	sp, sp, #0x1c0
   1fb40:	mov	x2, x1
   1fb44:	add	x3, sp, #0x10
   1fb48:	add	x1, sp, #0x30
   1fb4c:	ldp	x6, x7, [x4]
   1fb50:	stp	x6, x7, [sp, #16]
   1fb54:	ldp	x4, x5, [x4, #16]
   1fb58:	str	x30, [sp]
   1fb5c:	stp	x4, x5, [sp, #32]
   1fb60:	bl	1f8e0 <__sanitizer_on_print@@Base+0x80>
   1fb64:	ldr	x30, [sp]
   1fb68:	add	sp, sp, #0x1c0
   1fb6c:	ret
   1fb70:	sub	sp, sp, #0x110
   1fb74:	mov	w9, #0xffffffc8            	// #-56
   1fb78:	add	x11, sp, #0xd0
   1fb7c:	add	x10, sp, #0x110
   1fb80:	mov	w8, #0xffffff80            	// #-128
   1fb84:	stp	x10, x10, [sp, #48]
   1fb88:	mov	x10, x0
   1fb8c:	mov	w0, #0x0                   	// #0
   1fb90:	str	x11, [sp, #64]
   1fb94:	stp	w9, w8, [sp, #72]
   1fb98:	ldp	x12, x13, [sp, #48]
   1fb9c:	str	x30, [sp]
   1fba0:	ldp	x8, x9, [sp, #64]
   1fba4:	stp	x12, x13, [sp, #16]
   1fba8:	stp	x8, x9, [sp, #32]
   1fbac:	str	q0, [sp, #80]
   1fbb0:	str	q1, [sp, #96]
   1fbb4:	str	q2, [sp, #112]
   1fbb8:	str	q3, [sp, #128]
   1fbbc:	str	q4, [sp, #144]
   1fbc0:	str	q5, [sp, #160]
   1fbc4:	str	q6, [sp, #176]
   1fbc8:	str	q7, [sp, #192]
   1fbcc:	stp	x1, x2, [sp, #216]
   1fbd0:	add	x2, sp, #0x10
   1fbd4:	mov	x1, x10
   1fbd8:	stp	x3, x4, [sp, #232]
   1fbdc:	stp	x5, x6, [sp, #248]
   1fbe0:	str	x7, [sp, #264]
   1fbe4:	bl	1fb38 <__sanitizer_on_print@@Base+0x2d8>
   1fbe8:	ldr	x30, [sp]
   1fbec:	add	sp, sp, #0x110
   1fbf0:	ret
   1fbf4:	nop
   1fbf8:	sub	sp, sp, #0x110
   1fbfc:	mov	w9, #0xffffffc8            	// #-56
   1fc00:	add	x11, sp, #0xd0
   1fc04:	add	x10, sp, #0x110
   1fc08:	mov	w8, #0xffffff80            	// #-128
   1fc0c:	stp	x10, x10, [sp, #48]
   1fc10:	mov	x10, x0
   1fc14:	mov	w0, #0x1                   	// #1
   1fc18:	str	x11, [sp, #64]
   1fc1c:	stp	w9, w8, [sp, #72]
   1fc20:	ldp	x12, x13, [sp, #48]
   1fc24:	str	x30, [sp]
   1fc28:	ldp	x8, x9, [sp, #64]
   1fc2c:	stp	x12, x13, [sp, #16]
   1fc30:	stp	x8, x9, [sp, #32]
   1fc34:	str	q0, [sp, #80]
   1fc38:	str	q1, [sp, #96]
   1fc3c:	str	q2, [sp, #112]
   1fc40:	str	q3, [sp, #128]
   1fc44:	str	q4, [sp, #144]
   1fc48:	str	q5, [sp, #160]
   1fc4c:	str	q6, [sp, #176]
   1fc50:	str	q7, [sp, #192]
   1fc54:	stp	x1, x2, [sp, #216]
   1fc58:	add	x2, sp, #0x10
   1fc5c:	mov	x1, x10
   1fc60:	stp	x3, x4, [sp, #232]
   1fc64:	stp	x5, x6, [sp, #248]
   1fc68:	str	x7, [sp, #264]
   1fc6c:	bl	1fb38 <__sanitizer_on_print@@Base+0x2d8>
   1fc70:	ldr	x30, [sp]
   1fc74:	add	sp, sp, #0x110
   1fc78:	ret
   1fc7c:	nop
   1fc80:	stp	x19, x30, [sp, #-256]!
   1fc84:	mov	x19, x0
   1fc88:	str	q0, [sp, #80]
   1fc8c:	str	q1, [sp, #96]
   1fc90:	ldr	x8, [x0, #16]
   1fc94:	str	q2, [sp, #112]
   1fc98:	ldr	x0, [x0, #24]
   1fc9c:	str	q3, [sp, #128]
   1fca0:	str	q4, [sp, #144]
   1fca4:	cmp	x0, x8
   1fca8:	str	q5, [sp, #160]
   1fcac:	str	q6, [sp, #176]
   1fcb0:	str	q7, [sp, #192]
   1fcb4:	stp	x2, x3, [sp, #208]
   1fcb8:	stp	x4, x5, [sp, #224]
   1fcbc:	stp	x6, x7, [sp, #240]
   1fcc0:	b.cs	1fd34 <__sanitizer_on_print@@Base+0x4d4>  // b.hs, b.nlast
   1fcc4:	mov	w4, #0xffffff80            	// #-128
   1fcc8:	mov	w3, #0xffffffd0            	// #-48
   1fccc:	stp	w3, w4, [sp, #72]
   1fcd0:	add	x5, sp, #0xd0
   1fcd4:	ldr	x4, [x19]
   1fcd8:	add	x2, sp, #0x100
   1fcdc:	stp	x2, x2, [sp, #48]
   1fce0:	mov	x2, x1
   1fce4:	sub	w1, w8, w0
   1fce8:	str	x5, [sp, #64]
   1fcec:	add	x0, x4, x0
   1fcf0:	ldp	x6, x7, [sp, #48]
   1fcf4:	add	x3, sp, #0x10
   1fcf8:	ldp	x4, x5, [sp, #64]
   1fcfc:	stp	x6, x7, [sp, #16]
   1fd00:	stp	x4, x5, [sp, #32]
   1fd04:	bl	1f110 <__sanitizer_set_report_fd@@Base+0x7350>
   1fd08:	ldr	x1, [x19]
   1fd0c:	ldr	x0, [x19, #24]
   1fd10:	add	x0, x1, x0
   1fd14:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   1fd18:	ldp	x4, x3, [x19, #16]
   1fd1c:	add	x3, x0, x3
   1fd20:	str	x3, [x19, #24]
   1fd24:	cmp	x3, x4
   1fd28:	b.cs	1fd54 <__sanitizer_on_print@@Base+0x4f4>  // b.hs, b.nlast
   1fd2c:	ldp	x19, x30, [sp], #256
   1fd30:	ret
   1fd34:	mov	x3, x0
   1fd38:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   1fd3c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1fd40:	mov	x4, x8
   1fd44:	add	x2, x2, #0x58
   1fd48:	add	x0, x0, #0xf28
   1fd4c:	mov	w1, #0x15d                 	// #349
   1fd50:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1fd54:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   1fd58:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   1fd5c:	add	x2, x2, #0x58
   1fd60:	add	x0, x0, #0xf28
   1fd64:	mov	w1, #0x163                 	// #355
   1fd68:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1fd6c:	nop
   1fd70:	and	w0, w0, #0xff
   1fd74:	sub	w0, w0, #0x30
   1fd78:	and	w0, w0, #0xff
   1fd7c:	cmp	w0, #0xa
   1fd80:	cset	w0, cc  // cc = lo, ul, last
   1fd84:	ret
   1fd88:	ldr	x2, [x0]
   1fd8c:	mov	x3, x0
   1fd90:	ldrb	w1, [x2]
   1fd94:	sub	w1, w1, #0x30
   1fd98:	and	w0, w1, #0xff
   1fd9c:	cmp	w0, #0x9
   1fda0:	mov	x0, #0x0                   	// #0
   1fda4:	b.ls	1fdac <__sanitizer_on_print@@Base+0x54c>  // b.plast
   1fda8:	ret
   1fdac:	add	x2, x2, #0x1
   1fdb0:	str	x2, [x3]
   1fdb4:	sxtw	x4, w1
   1fdb8:	add	x0, x0, x0, lsl #2
   1fdbc:	ldrb	w1, [x2]
   1fdc0:	add	x0, x4, x0, lsl #1
   1fdc4:	sub	w1, w1, #0x30
   1fdc8:	and	w4, w1, #0xff
   1fdcc:	cmp	w4, #0x9
   1fdd0:	b.ls	1fdac <__sanitizer_on_print@@Base+0x54c>  // b.plast
   1fdd4:	ret
   1fdd8:	and	w1, w0, #0xff
   1fddc:	sub	w0, w1, #0x30
   1fde0:	and	w0, w0, #0xff
   1fde4:	cmp	w0, #0x9
   1fde8:	b.ls	1fe14 <__sanitizer_on_print@@Base+0x5b4>  // b.plast
   1fdec:	sub	w2, w1, #0x61
   1fdf0:	mov	w0, #0x1                   	// #1
   1fdf4:	and	w2, w2, #0xff
   1fdf8:	cmp	w2, #0x5
   1fdfc:	b.ls	1fe10 <__sanitizer_on_print@@Base+0x5b0>  // b.plast
   1fe00:	sub	w1, w1, #0x41
   1fe04:	and	w1, w1, #0xff
   1fe08:	cmp	w1, #0x5
   1fe0c:	cset	w0, ls  // ls = plast
   1fe10:	ret
   1fe14:	mov	w0, #0x1                   	// #1
   1fe18:	ret
   1fe1c:	nop
   1fe20:	mov	x4, x0
   1fe24:	mov	x0, #0x0                   	// #0
   1fe28:	ldr	x3, [x4]
   1fe2c:	b	1fe50 <__sanitizer_on_print@@Base+0x5f0>
   1fe30:	cmp	w6, #0x5
   1fe34:	b.ls	1fe80 <__sanitizer_on_print@@Base+0x620>  // b.plast
   1fe38:	cmp	w5, #0x5
   1fe3c:	b.hi	1fe88 <__sanitizer_on_print@@Base+0x628>  // b.pmore
   1fe40:	sxtw	x1, w1
   1fe44:	add	x3, x3, #0x1
   1fe48:	add	x0, x1, x0, lsl #4
   1fe4c:	str	x3, [x4]
   1fe50:	ldrb	w2, [x3]
   1fe54:	sub	w7, w2, #0x30
   1fe58:	sub	w6, w2, #0x61
   1fe5c:	sub	w5, w2, #0x41
   1fe60:	and	w8, w7, #0xff
   1fe64:	sub	w1, w2, #0x37
   1fe68:	and	w6, w6, #0xff
   1fe6c:	and	w5, w5, #0xff
   1fe70:	cmp	w8, #0x9
   1fe74:	b.hi	1fe30 <__sanitizer_on_print@@Base+0x5d0>  // b.pmore
   1fe78:	mov	w1, w7
   1fe7c:	b	1fe40 <__sanitizer_on_print@@Base+0x5e0>
   1fe80:	sub	w1, w2, #0x57
   1fe84:	b	1fe40 <__sanitizer_on_print@@Base+0x5e0>
   1fe88:	ret
   1fe8c:	nop
   1fe90:	mov	x2, x0
   1fe94:	mov	x0, x1
   1fe98:	ldr	x1, [x2, #72]
   1fe9c:	cbnz	x1, 1febc <__sanitizer_on_print@@Base+0x65c>
   1fea0:	ldr	x1, [x2]
   1fea4:	mov	x5, #0x0                   	// #0
   1fea8:	ldr	x3, [x2, #40]
   1feac:	ldr	x2, [x2, #8]
   1feb0:	ubfx	w4, w3, #1, #1
   1feb4:	ubfx	w3, w3, #2, #1
   1feb8:	b	14a98 <_ZdaPvRKSt9nothrow_t@@Base+0x2dd8>
   1febc:	str	x30, [sp, #-16]!
   1fec0:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   1fec4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   1fec8:	add	x2, x2, #0x78
   1fecc:	add	x0, x0, #0x90
   1fed0:	mov	x4, #0x0                   	// #0
   1fed4:	mov	x3, #0x0                   	// #0
   1fed8:	mov	w1, #0x44                  	// #68
   1fedc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   1fee0:	stp	x19, x20, [sp, #-64]!
   1fee4:	tst	w1, #0xff
   1fee8:	mov	x19, x0
   1feec:	str	x30, [sp, #16]
   1fef0:	b.ne	1ff0c <__sanitizer_on_print@@Base+0x6ac>  // b.any
   1fef4:	bl	20710 <__sanitizer_on_print@@Base+0xeb0>
   1fef8:	ldr	x0, [x19]
   1fefc:	ldr	x30, [sp, #16]
   1ff00:	str	x0, [x19, #24]
   1ff04:	ldp	x19, x20, [sp], #64
   1ff08:	ret
   1ff0c:	add	x0, sp, #0x28
   1ff10:	bl	20710 <__sanitizer_on_print@@Base+0xeb0>
   1ff14:	ldr	x0, [sp, #48]
   1ff18:	cbnz	x0, 1ff90 <__sanitizer_on_print@@Base+0x730>
   1ff1c:	mov	x0, x19
   1ff20:	bl	20710 <__sanitizer_on_print@@Base+0xeb0>
   1ff24:	ldr	x0, [x19, #8]
   1ff28:	cbnz	x0, 1fef8 <__sanitizer_on_print@@Base+0x698>
   1ff2c:	adrp	x20, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   1ff30:	add	x0, x20, #0x710
   1ff34:	mov	w2, #0x1                   	// #1
   1ff38:	ldxrb	w1, [x0]
   1ff3c:	stxrb	w3, w2, [x0]
   1ff40:	cbnz	w3, 1ff38 <__sanitizer_on_print@@Base+0x6d8>
   1ff44:	dmb	ish
   1ff48:	tst	w1, #0xff
   1ff4c:	b.eq	1ff54 <__sanitizer_on_print@@Base+0x6f4>  // b.none
   1ff50:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   1ff54:	add	x0, x20, #0x710
   1ff58:	add	x2, x0, #0x8
   1ff5c:	ldr	x1, [x0, #8]
   1ff60:	cbz	x1, 1ff74 <__sanitizer_on_print@@Base+0x714>
   1ff64:	ldp	x0, x1, [x0, #8]
   1ff68:	stp	x0, x1, [x19]
   1ff6c:	ldr	x0, [x2, #16]
   1ff70:	str	x0, [x19, #16]
   1ff74:	dmb	ish
   1ff78:	strb	wzr, [x20, #1808]
   1ff7c:	ldr	x0, [x19]
   1ff80:	ldr	x30, [sp, #16]
   1ff84:	str	x0, [x19, #24]
   1ff88:	ldp	x19, x20, [sp], #64
   1ff8c:	ret
   1ff90:	adrp	x20, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   1ff94:	add	x0, x20, #0x710
   1ff98:	mov	w2, #0x1                   	// #1
   1ff9c:	ldxrb	w1, [x0]
   1ffa0:	stxrb	w3, w2, [x0]
   1ffa4:	cbnz	w3, 1ff9c <__sanitizer_on_print@@Base+0x73c>
   1ffa8:	dmb	ish
   1ffac:	tst	w1, #0xff
   1ffb0:	b.eq	1ffb8 <__sanitizer_on_print@@Base+0x758>  // b.none
   1ffb4:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   1ffb8:	add	x0, x20, #0x710
   1ffbc:	ldr	x1, [x0, #16]
   1ffc0:	cbnz	x1, 1fff4 <__sanitizer_on_print@@Base+0x794>
   1ffc4:	add	x0, x20, #0x710
   1ffc8:	ldp	x2, x3, [sp, #40]
   1ffcc:	ldr	x1, [sp, #56]
   1ffd0:	stp	x2, x3, [x0, #8]
   1ffd4:	str	x1, [x0, #24]
   1ffd8:	dmb	ish
   1ffdc:	strb	wzr, [x20, #1808]
   1ffe0:	mov	x0, x19
   1ffe4:	bl	20710 <__sanitizer_on_print@@Base+0xeb0>
   1ffe8:	ldr	x0, [x19, #8]
   1ffec:	cbnz	x0, 1fef8 <__sanitizer_on_print@@Base+0x698>
   1fff0:	b	1ff2c <__sanitizer_on_print@@Base+0x6cc>
   1fff4:	ldr	x0, [x0, #8]
   1fff8:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   1fffc:	b	1ffc4 <__sanitizer_on_print@@Base+0x764>
   20000:	ldr	x0, [x0, #24]
   20004:	cmp	x0, #0x0
   20008:	cset	w0, eq  // eq = none
   2000c:	ret
   20010:	adrp	x2, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   20014:	mov	x1, x0
   20018:	ldr	x0, [x0]
   2001c:	ldr	x2, [x2, #1816]
   20020:	cmp	x0, x2
   20024:	b.eq	20030 <__sanitizer_on_print@@Base+0x7d0>  // b.none
   20028:	ldr	x1, [x1, #8]
   2002c:	b	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   20030:	ret
   20034:	nop
   20038:	ldr	x1, [x0]
   2003c:	str	x1, [x0, #24]
   20040:	ret
   20044:	nop
   20048:	stp	x19, x30, [sp, #-48]!
   2004c:	add	x0, sp, #0x18
   20050:	bl	20710 <__sanitizer_on_print@@Base+0xeb0>
   20054:	ldr	x0, [sp, #32]
   20058:	cbnz	x0, 20064 <__sanitizer_on_print@@Base+0x804>
   2005c:	ldp	x19, x30, [sp], #48
   20060:	ret
   20064:	adrp	x19, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   20068:	add	x0, x19, #0x710
   2006c:	mov	w2, #0x1                   	// #1
   20070:	ldxrb	w1, [x0]
   20074:	stxrb	w3, w2, [x0]
   20078:	cbnz	w3, 20070 <__sanitizer_on_print@@Base+0x810>
   2007c:	dmb	ish
   20080:	tst	w1, #0xff
   20084:	b.eq	2008c <__sanitizer_on_print@@Base+0x82c>  // b.none
   20088:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   2008c:	add	x0, x19, #0x710
   20090:	ldr	x1, [x0, #16]
   20094:	cbnz	x1, 200bc <__sanitizer_on_print@@Base+0x85c>
   20098:	add	x0, x19, #0x710
   2009c:	ldp	x2, x3, [sp, #24]
   200a0:	ldr	x1, [sp, #40]
   200a4:	stp	x2, x3, [x0, #8]
   200a8:	str	x1, [x0, #24]
   200ac:	dmb	ish
   200b0:	strb	wzr, [x19, #1808]
   200b4:	ldp	x19, x30, [sp], #48
   200b8:	ret
   200bc:	ldr	x0, [x0, #8]
   200c0:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   200c4:	b	20098 <__sanitizer_on_print@@Base+0x838>
   200c8:	stp	x19, x20, [sp, #-32]!
   200cc:	mov	x19, x0
   200d0:	adrp	x20, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   200d4:	add	x0, x20, #0x710
   200d8:	mov	w2, #0x1                   	// #1
   200dc:	str	x30, [sp, #16]
   200e0:	ldxrb	w1, [x0]
   200e4:	stxrb	w3, w2, [x0]
   200e8:	cbnz	w3, 200e0 <__sanitizer_on_print@@Base+0x880>
   200ec:	dmb	ish
   200f0:	tst	w1, #0xff
   200f4:	b.eq	200fc <__sanitizer_on_print@@Base+0x89c>  // b.none
   200f8:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   200fc:	add	x0, x20, #0x710
   20100:	add	x2, x0, #0x8
   20104:	ldr	x1, [x0, #8]
   20108:	cbz	x1, 2011c <__sanitizer_on_print@@Base+0x8bc>
   2010c:	ldp	x0, x1, [x0, #8]
   20110:	stp	x0, x1, [x19]
   20114:	ldr	x0, [x2, #16]
   20118:	str	x0, [x19, #16]
   2011c:	dmb	ish
   20120:	strb	wzr, [x20, #1808]
   20124:	ldr	x30, [sp, #16]
   20128:	ldp	x19, x20, [sp], #32
   2012c:	ret
   20130:	stp	x19, x20, [sp, #-272]!
   20134:	mov	x19, x1
   20138:	stp	x21, x22, [sp, #16]
   2013c:	mov	x21, x0
   20140:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   20144:	stp	x23, x24, [sp, #32]
   20148:	ldr	x20, [x0, #4016]
   2014c:	stp	x25, x26, [sp, #48]
   20150:	stp	x27, x28, [sp, #64]
   20154:	ldr	x0, [x21]
   20158:	str	x30, [sp, #80]
   2015c:	str	x0, [x21, #24]
   20160:	ldr	x0, [x20]
   20164:	cbz	x0, 202fc <__sanitizer_on_print@@Base+0xa9c>
   20168:	sub	x20, x0, #0x1
   2016c:	ands	x20, x20, x0
   20170:	b.ne	20460 <__sanitizer_on_print@@Base+0xc00>  // b.any
   20174:	add	x24, x0, #0xfff
   20178:	neg	x0, x0
   2017c:	and	x24, x24, x0
   20180:	mov	w2, #0x0                   	// #0
   20184:	mov	x0, x24
   20188:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2018c:	add	x1, x1, #0xb50
   20190:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   20194:	mov	x2, #0x0                   	// #0
   20198:	mov	x1, #0x0                   	// #0
   2019c:	mov	x23, x0
   201a0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   201a4:	mov	x1, #0x0                   	// #0
   201a8:	mov	x0, #0x0                   	// #0
   201ac:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   201b0:	cmp	x24, #0xfff
   201b4:	b.ls	203c4 <__sanitizer_on_print@@Base+0xb64>  // b.plast
   201b8:	mov	x2, #0x1000                	// #4096
   201bc:	mov	w1, #0x0                   	// #0
   201c0:	mov	x0, x23
   201c4:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   201c8:	strb	wzr, [x23]
   201cc:	mov	x0, #0x1000                	// #4096
   201d0:	add	x22, sp, #0x70
   201d4:	add	x25, sp, #0xc0
   201d8:	mov	x1, x25
   201dc:	add	x27, x22, #0x1c
   201e0:	stp	x23, x0, [sp, #216]
   201e4:	mov	x0, x21
   201e8:	str	xzr, [sp, #264]
   201ec:	bl	20750 <__sanitizer_on_print@@Base+0xef0>
   201f0:	tst	w0, #0xff
   201f4:	b.eq	202d4 <__sanitizer_on_print@@Base+0xa74>  // b.none
   201f8:	ldr	x28, [sp, #216]
   201fc:	ldrb	w0, [x28]
   20200:	cbz	w0, 202bc <__sanitizer_on_print@@Base+0xa5c>
   20204:	ldr	x3, [sp, #192]
   20208:	cmp	x20, #0x0
   2020c:	ldr	x0, [sp, #208]
   20210:	csel	x3, x3, xzr, ne  // ne = any
   20214:	mov	x2, #0x10                  	// #16
   20218:	mov	w1, #0x0                   	// #0
   2021c:	sub	x26, x3, x0
   20220:	mov	x0, x27
   20224:	str	xzr, [sp, #112]
   20228:	stp	xzr, xzr, [sp, #120]
   2022c:	str	wzr, [sp, #136]
   20230:	strb	wzr, [sp, #156]
   20234:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   20238:	mov	x0, x22
   2023c:	mov	x2, x26
   20240:	mov	x1, x28
   20244:	str	xzr, [sp, #160]
   20248:	stp	xzr, xzr, [sp, #168]
   2024c:	bl	14a00 <_ZdaPvRKSt9nothrow_t@@Base+0x2d40>
   20250:	ldr	x0, [sp, #264]
   20254:	cbnz	x0, 20428 <__sanitizer_on_print@@Base+0xbc8>
   20258:	ldp	x1, x2, [sp, #192]
   2025c:	mov	x0, x22
   20260:	ldr	x3, [sp, #232]
   20264:	mov	x5, #0x0                   	// #0
   20268:	ubfx	w4, w3, #1, #1
   2026c:	ubfx	w3, w3, #2, #1
   20270:	bl	14a98 <_ZdaPvRKSt9nothrow_t@@Base+0x2dd8>
   20274:	ldp	x4, x3, [x19, #8]
   20278:	mov	x0, #0xe38f                	// #58255
   2027c:	movk	x0, #0x8e38, lsl #16
   20280:	movk	x0, #0x38e3, lsl #32
   20284:	movk	x0, #0xe38e, lsl #48
   20288:	umulh	x4, x4, x0
   2028c:	lsr	x4, x4, #6
   20290:	cmp	x3, x4
   20294:	b.hi	20448 <__sanitizer_on_print@@Base+0xbe8>  // b.pmore
   20298:	add	x1, x3, #0x1
   2029c:	b.eq	20308 <__sanitizer_on_print@@Base+0xaa8>  // b.none
   202a0:	ldr	x5, [x19]
   202a4:	add	x3, x3, x3, lsl #3
   202a8:	str	x1, [x19, #16]
   202ac:	mov	x2, #0x48                  	// #72
   202b0:	add	x0, x5, x3, lsl #3
   202b4:	mov	x1, x22
   202b8:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   202bc:	mov	x1, x25
   202c0:	mov	x0, x21
   202c4:	add	x20, x20, #0x1
   202c8:	bl	20750 <__sanitizer_on_print@@Base+0xef0>
   202cc:	tst	w0, #0xff
   202d0:	b.ne	201f8 <__sanitizer_on_print@@Base+0x998>  // b.any
   202d4:	mov	x1, x24
   202d8:	mov	x0, x23
   202dc:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   202e0:	ldp	x21, x22, [sp, #16]
   202e4:	ldp	x23, x24, [sp, #32]
   202e8:	ldp	x25, x26, [sp, #48]
   202ec:	ldp	x27, x28, [sp, #64]
   202f0:	ldr	x30, [sp, #80]
   202f4:	ldp	x19, x20, [sp], #272
   202f8:	ret
   202fc:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   20300:	str	x0, [x20]
   20304:	b	20168 <__sanitizer_on_print@@Base+0x908>
   20308:	tst	x3, x1
   2030c:	b.eq	20348 <__sanitizer_on_print@@Base+0xae8>  // b.none
   20310:	clz	x2, x1
   20314:	mov	w0, #0x3f                  	// #63
   20318:	sub	w0, w0, w2
   2031c:	mov	x2, #0x1                   	// #1
   20320:	add	w4, w0, #0x1
   20324:	lsl	x4, x2, x4
   20328:	cmp	x4, x1
   2032c:	b.ls	204a8 <__sanitizer_on_print@@Base+0xc48>  // b.plast
   20330:	lsl	x0, x2, x0
   20334:	cmp	x0, x1
   20338:	b.cs	204c4 <__sanitizer_on_print@@Base+0xc64>  // b.hs, b.nlast
   2033c:	cmp	x3, x4
   20340:	b.hi	20490 <__sanitizer_on_print@@Base+0xc30>  // b.pmore
   20344:	mov	x1, x4
   20348:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2034c:	add	x1, x1, x1, lsl #3
   20350:	ldr	x2, [x0, #4016]
   20354:	lsl	x1, x1, #3
   20358:	ldr	x0, [x2]
   2035c:	cbz	x0, 20470 <__sanitizer_on_print@@Base+0xc10>
   20360:	sub	x4, x0, #0x1
   20364:	tst	x0, x4
   20368:	b.ne	20460 <__sanitizer_on_print@@Base+0xc00>  // b.any
   2036c:	add	x1, x1, x4
   20370:	neg	x0, x0
   20374:	and	x4, x1, x0
   20378:	mov	w2, #0x0                   	// #0
   2037c:	mov	x0, x4
   20380:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   20384:	add	x1, x1, #0xb50
   20388:	str	x4, [sp, #104]
   2038c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   20390:	str	x0, [sp, #96]
   20394:	ldr	x2, [x19, #16]
   20398:	ldr	x1, [x19]
   2039c:	add	x2, x2, x2, lsl #3
   203a0:	lsl	x2, x2, #3
   203a4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   203a8:	ldp	x0, x1, [x19]
   203ac:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   203b0:	ldr	x3, [x19, #16]
   203b4:	ldp	x5, x4, [sp, #96]
   203b8:	add	x1, x3, #0x1
   203bc:	stp	x5, x4, [x19]
   203c0:	b	202a4 <__sanitizer_on_print@@Base+0xa44>
   203c4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   203c8:	ldr	x22, [x0, #4016]
   203cc:	ldr	x0, [x22]
   203d0:	cbz	x0, 20484 <__sanitizer_on_print@@Base+0xc24>
   203d4:	sub	x1, x0, #0x1
   203d8:	tst	x1, x0
   203dc:	b.ne	20460 <__sanitizer_on_print@@Base+0xc00>  // b.any
   203e0:	add	x22, x0, #0xfff
   203e4:	neg	x0, x0
   203e8:	and	x22, x22, x0
   203ec:	mov	w2, #0x0                   	// #0
   203f0:	mov	x0, x22
   203f4:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   203f8:	add	x1, x1, #0xb50
   203fc:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   20400:	mov	x2, #0x0                   	// #0
   20404:	mov	x25, x0
   20408:	mov	x1, x23
   2040c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   20410:	mov	x1, x24
   20414:	mov	x0, x23
   20418:	mov	x24, x22
   2041c:	mov	x23, x25
   20420:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   20424:	b	201b8 <__sanitizer_on_print@@Base+0x958>
   20428:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2042c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20430:	add	x2, x2, #0x78
   20434:	add	x0, x0, #0x90
   20438:	mov	x4, #0x0                   	// #0
   2043c:	mov	x3, #0x0                   	// #0
   20440:	mov	w1, #0x44                  	// #68
   20444:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20448:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   2044c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   20450:	add	x2, x2, #0x808
   20454:	add	x0, x0, #0xad8
   20458:	mov	w1, #0x1cd                 	// #461
   2045c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20460:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   20464:	add	x0, x0, #0xb38
   20468:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2046c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   20470:	stp	x1, x2, [sp, #96]
   20474:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   20478:	ldp	x1, x2, [sp, #96]
   2047c:	str	x0, [x2]
   20480:	b	20360 <__sanitizer_on_print@@Base+0xb00>
   20484:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   20488:	str	x0, [x22]
   2048c:	b	203d4 <__sanitizer_on_print@@Base+0xb74>
   20490:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   20494:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   20498:	add	x2, x2, #0x838
   2049c:	add	x0, x0, #0xad8
   204a0:	mov	w1, #0x20c                 	// #524
   204a4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   204a8:	mov	x3, x1
   204ac:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   204b0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   204b4:	add	x2, x2, #0x5c0
   204b8:	add	x0, x0, #0xad8
   204bc:	mov	w1, #0x18a                 	// #394
   204c0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   204c4:	mov	x4, x0
   204c8:	mov	x3, x1
   204cc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   204d0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   204d4:	add	x2, x2, #0x648
   204d8:	add	x0, x0, #0xad8
   204dc:	mov	w1, #0x18b                 	// #395
   204e0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   204e4:	nop
   204e8:	stp	x19, x20, [sp, #-112]!
   204ec:	mov	x5, #0x0                   	// #0
   204f0:	mov	x4, #0x4000000             	// #67108864
   204f4:	add	x3, sp, #0x68
   204f8:	stp	x21, x22, [sp, #16]
   204fc:	mov	x21, x0
   20500:	mov	x22, x1
   20504:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20508:	add	x1, sp, #0x58
   2050c:	add	x0, x0, #0xf0
   20510:	stp	x23, x24, [sp, #32]
   20514:	mov	x23, x2
   20518:	add	x2, sp, #0x60
   2051c:	str	x30, [sp, #64]
   20520:	stp	xzr, xzr, [sp, #88]
   20524:	str	xzr, [sp, #104]
   20528:	bl	174d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   2052c:	tst	w0, #0xff
   20530:	b.eq	20634 <__sanitizer_on_print@@Base+0xdd4>  // b.none
   20534:	ldr	x20, [sp, #88]
   20538:	ldr	x6, [sp, #104]
   2053c:	add	x0, x20, x6
   20540:	cmp	x20, x0
   20544:	b.cs	20708 <__sanitizer_on_print@@Base+0xea8>  // b.hs, b.nlast
   20548:	adrp	x24, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2054c:	mov	x0, x20
   20550:	add	x24, x24, #0x108
   20554:	stp	x25, x26, [sp, #48]
   20558:	mov	w26, #0x0                   	// #0
   2055c:	mov	x25, #0x0                   	// #0
   20560:	ldrb	w1, [x20]
   20564:	sub	w3, w1, #0x30
   20568:	and	w2, w3, #0xff
   2056c:	cmp	w2, #0x9
   20570:	b.ls	20588 <__sanitizer_on_print@@Base+0xd28>  // b.plast
   20574:	and	w2, w1, #0xffffffdf
   20578:	sub	w2, w2, #0x41
   2057c:	and	w2, w2, #0xff
   20580:	cmp	w2, #0x5
   20584:	b.hi	20648 <__sanitizer_on_print@@Base+0xde8>  // b.pmore
   20588:	mov	x25, #0x0                   	// #0
   2058c:	b	205a4 <__sanitizer_on_print@@Base+0xd44>
   20590:	sub	w3, w1, #0x37
   20594:	ldrb	w1, [x20, #1]!
   20598:	sxtw	x3, w3
   2059c:	add	x25, x3, x25, lsl #4
   205a0:	sub	w3, w1, #0x30
   205a4:	sub	w2, w1, #0x61
   205a8:	sub	w4, w1, #0x41
   205ac:	and	w5, w3, #0xff
   205b0:	and	w2, w2, #0xff
   205b4:	and	w4, w4, #0xff
   205b8:	cmp	w5, #0x9
   205bc:	b.ls	20594 <__sanitizer_on_print@@Base+0xd34>  // b.plast
   205c0:	sub	w3, w1, #0x57
   205c4:	cmp	w2, #0x5
   205c8:	b.ls	20594 <__sanitizer_on_print@@Base+0xd34>  // b.plast
   205cc:	cmp	w4, #0x5
   205d0:	b.ls	20590 <__sanitizer_on_print@@Base+0xd30>  // b.plast
   205d4:	cmp	w1, #0x2f
   205d8:	cset	w26, eq  // eq = none
   205dc:	cmp	w26, #0x0
   205e0:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   205e4:	b.ls	20600 <__sanitizer_on_print@@Base+0xda0>  // b.plast
   205e8:	ldrb	w1, [x20, #1]!
   205ec:	cmp	w1, #0x2f
   205f0:	cset	w26, eq  // eq = none
   205f4:	cmp	w26, #0x0
   205f8:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   205fc:	b.hi	205e8 <__sanitizer_on_print@@Base+0xd88>  // b.pmore
   20600:	add	x19, x20, #0x1
   20604:	nop
   20608:	ldurb	w3, [x19, #-1]
   2060c:	mov	x20, x19
   20610:	add	x19, x19, #0x1
   20614:	cmp	w3, #0xa
   20618:	b.ne	20608 <__sanitizer_on_print@@Base+0xda8>  // b.any
   2061c:	add	x1, x0, x6
   20620:	cmp	x20, x1
   20624:	b.cc	20560 <__sanitizer_on_print@@Base+0xd00>  // b.lo, b.ul, b.last
   20628:	ldp	x25, x26, [sp, #48]
   2062c:	ldr	x1, [sp, #96]
   20630:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   20634:	ldp	x21, x22, [sp, #16]
   20638:	ldp	x23, x24, [sp, #32]
   2063c:	ldr	x30, [sp, #64]
   20640:	ldp	x19, x20, [sp], #112
   20644:	ret
   20648:	mov	x1, x24
   2064c:	mov	x0, x20
   20650:	mov	x2, #0x4                   	// #4
   20654:	bl	1a4e8 <__sanitizer_set_report_fd@@Base+0x2728>
   20658:	cbz	w0, 20670 <__sanitizer_on_print@@Base+0xe10>
   2065c:	add	x19, x20, #0x1
   20660:	ldr	x0, [sp, #88]
   20664:	ldr	x6, [sp, #104]
   20668:	b	20608 <__sanitizer_on_print@@Base+0xda8>
   2066c:	add	x20, x20, #0x1
   20670:	ldrb	w0, [x20]
   20674:	sub	w0, w0, #0x30
   20678:	and	w0, w0, #0xff
   2067c:	cmp	w0, #0x9
   20680:	b.hi	2066c <__sanitizer_on_print@@Base+0xe0c>  // b.pmore
   20684:	mov	x19, x20
   20688:	ldrb	w2, [x19], #1
   2068c:	sub	w0, w2, #0x30
   20690:	and	w1, w0, #0xff
   20694:	cmp	w1, #0x9
   20698:	mov	x1, #0x0                   	// #0
   2069c:	b.ls	206c4 <__sanitizer_on_print@@Base+0xe64>  // b.plast
   206a0:	mov	x0, x25
   206a4:	lsl	x1, x1, #10
   206a8:	mov	x4, x23
   206ac:	mov	x3, x22
   206b0:	mov	w2, w26
   206b4:	blr	x21
   206b8:	ldr	x0, [sp, #88]
   206bc:	ldr	x6, [sp, #104]
   206c0:	b	20608 <__sanitizer_on_print@@Base+0xda8>
   206c4:	ldrb	w2, [x19], #1
   206c8:	sxtw	x3, w0
   206cc:	add	x1, x1, x1, lsl #2
   206d0:	sub	w0, w2, #0x30
   206d4:	and	w2, w0, #0xff
   206d8:	add	x1, x3, x1, lsl #1
   206dc:	cmp	w2, #0x9
   206e0:	b.hi	206a0 <__sanitizer_on_print@@Base+0xe40>  // b.pmore
   206e4:	ldrb	w2, [x19], #1
   206e8:	sxtw	x3, w0
   206ec:	add	x1, x1, x1, lsl #2
   206f0:	sub	w0, w2, #0x30
   206f4:	and	w2, w0, #0xff
   206f8:	add	x1, x3, x1, lsl #1
   206fc:	cmp	w2, #0x9
   20700:	b.hi	206a0 <__sanitizer_on_print@@Base+0xe40>  // b.pmore
   20704:	b	206c4 <__sanitizer_on_print@@Base+0xe64>
   20708:	mov	x0, x20
   2070c:	b	2062c <__sanitizer_on_print@@Base+0xdcc>
   20710:	stp	x19, x30, [sp, #-16]!
   20714:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20718:	mov	x19, x0
   2071c:	add	x3, x19, #0x10
   20720:	add	x0, x1, #0x110
   20724:	add	x2, x19, #0x8
   20728:	mov	x1, x19
   2072c:	mov	x5, #0x0                   	// #0
   20730:	mov	x4, #0x4000000             	// #67108864
   20734:	bl	174d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   20738:	tst	w0, #0xff
   2073c:	b.ne	20748 <__sanitizer_on_print@@Base+0xee8>  // b.any
   20740:	str	xzr, [x19]
   20744:	stp	xzr, xzr, [x19, #8]
   20748:	ldp	x19, x30, [sp], #16
   2074c:	ret
   20750:	stp	x19, x20, [sp, #-64]!
   20754:	mov	x19, x0
   20758:	stp	x21, x22, [sp, #16]
   2075c:	mov	x22, x1
   20760:	str	x30, [sp, #56]
   20764:	bl	20000 <__sanitizer_on_print@@Base+0x7a0>
   20768:	ands	w21, w0, #0xff
   2076c:	b.ne	209f4 <__sanitizer_on_print@@Base+0x1194>  // b.any
   20770:	ldp	x1, x0, [x19, #16]
   20774:	ldr	x20, [x19]
   20778:	add	x20, x20, x1
   2077c:	cmp	x0, x20
   20780:	b.cc	20798 <__sanitizer_on_print@@Base+0xf38>  // b.lo, b.ul, b.last
   20784:	mov	w0, w21
   20788:	ldp	x21, x22, [sp, #16]
   2078c:	ldr	x30, [sp, #56]
   20790:	ldp	x19, x20, [sp], #64
   20794:	ret
   20798:	sub	x2, x20, x0
   2079c:	mov	w1, #0xa                   	// #10
   207a0:	stp	x23, x24, [sp, #32]
   207a4:	add	x24, x19, #0x18
   207a8:	str	x25, [sp, #48]
   207ac:	bl	19c58 <__sanitizer_set_report_fd@@Base+0x1e98>
   207b0:	mov	x23, x0
   207b4:	mov	x0, x24
   207b8:	cmp	x23, #0x0
   207bc:	csel	x23, x23, x20, ne  // ne = any
   207c0:	bl	1fe20 <__sanitizer_on_print@@Base+0x5c0>
   207c4:	ldr	x1, [x19, #24]
   207c8:	str	x0, [x22]
   207cc:	add	x0, x1, #0x1
   207d0:	str	x0, [x19, #24]
   207d4:	ldrb	w20, [x1]
   207d8:	cmp	x20, #0x2d
   207dc:	b.ne	20a34 <__sanitizer_on_print@@Base+0x11d4>  // b.any
   207e0:	mov	x0, x24
   207e4:	bl	1fe20 <__sanitizer_on_print@@Base+0x5c0>
   207e8:	ldr	x2, [x19, #24]
   207ec:	str	x0, [x22, #8]
   207f0:	add	x0, x2, #0x1
   207f4:	str	x0, [x19, #24]
   207f8:	ldrb	w3, [x2]
   207fc:	cmp	x3, #0x20
   20800:	b.ne	20a54 <__sanitizer_on_print@@Base+0x11f4>  // b.any
   20804:	ldrb	w0, [x2, #1]
   20808:	cmp	w0, #0x72
   2080c:	ccmp	w0, w20, #0x4, ne  // ne = any
   20810:	b.ne	20a70 <__sanitizer_on_print@@Base+0x1210>  // b.any
   20814:	str	xzr, [x22, #40]
   20818:	add	x0, x2, #0x2
   2081c:	str	x0, [x19, #24]
   20820:	ldrb	w0, [x2, #1]
   20824:	cmp	w0, #0x72
   20828:	b.eq	20a0c <__sanitizer_on_print@@Base+0x11ac>  // b.none
   2082c:	mov	x9, #0xe                   	// #14
   20830:	mov	x8, #0xa                   	// #10
   20834:	mov	x7, #0x6                   	// #6
   20838:	mov	x5, #0xc                   	// #12
   2083c:	mov	x3, #0x8                   	// #8
   20840:	mov	x4, #0x4                   	// #4
   20844:	mov	x6, #0x2                   	// #2
   20848:	ldrb	w0, [x2, #2]
   2084c:	mov	w1, #0x2d                  	// #45
   20850:	cmp	w0, #0x77
   20854:	ccmp	w0, w1, #0x4, ne  // ne = any
   20858:	b.ne	20a90 <__sanitizer_on_print@@Base+0x1230>  // b.any
   2085c:	add	x0, x2, #0x3
   20860:	str	x0, [x19, #24]
   20864:	ldrb	w0, [x2, #2]
   20868:	cmp	w0, #0x77
   2086c:	b.ne	20880 <__sanitizer_on_print@@Base+0x1020>  // b.any
   20870:	mov	x5, x9
   20874:	mov	x3, x8
   20878:	mov	x4, x7
   2087c:	str	x6, [x22, #40]
   20880:	ldrb	w0, [x2, #3]
   20884:	mov	w1, #0x78                  	// #120
   20888:	cmp	w0, #0x2d
   2088c:	ccmp	w0, w1, #0x4, ne  // ne = any
   20890:	b.ne	20ab0 <__sanitizer_on_print@@Base+0x1250>  // b.any
   20894:	add	x0, x2, #0x4
   20898:	str	x0, [x19, #24]
   2089c:	ldrb	w0, [x2, #3]
   208a0:	cmp	w0, #0x78
   208a4:	b.ne	208b0 <__sanitizer_on_print@@Base+0x1050>  // b.any
   208a8:	mov	x3, x5
   208ac:	str	x4, [x22, #40]
   208b0:	ldrb	w1, [x2, #4]
   208b4:	cmp	w1, #0x73
   208b8:	cset	w0, eq  // eq = none
   208bc:	cmp	w1, #0x70
   208c0:	csinc	w21, w0, wzr, ne  // ne = any
   208c4:	cbz	w21, 20ad0 <__sanitizer_on_print@@Base+0x1270>
   208c8:	add	x0, x2, #0x5
   208cc:	str	x0, [x19, #24]
   208d0:	ldrb	w0, [x2, #4]
   208d4:	cmp	w0, #0x73
   208d8:	b.ne	208e0 <__sanitizer_on_print@@Base+0x1080>  // b.any
   208dc:	str	x3, [x22, #40]
   208e0:	add	x0, x2, #0x6
   208e4:	str	x0, [x19, #24]
   208e8:	ldrb	w20, [x2, #5]
   208ec:	cmp	x20, #0x20
   208f0:	b.ne	20af0 <__sanitizer_on_print@@Base+0x1290>  // b.any
   208f4:	mov	x0, x24
   208f8:	bl	1fe20 <__sanitizer_on_print@@Base+0x5c0>
   208fc:	str	x0, [x22, #16]
   20900:	ldr	x0, [x19, #24]
   20904:	add	x1, x0, #0x1
   20908:	str	x1, [x19, #24]
   2090c:	ldrb	w25, [x0]
   20910:	cmp	x25, #0x20
   20914:	b.ne	20b10 <__sanitizer_on_print@@Base+0x12b0>  // b.any
   20918:	mov	x0, x24
   2091c:	bl	1fe20 <__sanitizer_on_print@@Base+0x5c0>
   20920:	ldr	x0, [x19, #24]
   20924:	add	x1, x0, #0x1
   20928:	str	x1, [x19, #24]
   2092c:	ldrb	w3, [x0]
   20930:	cmp	x3, #0x3a
   20934:	b.ne	20b30 <__sanitizer_on_print@@Base+0x12d0>  // b.any
   20938:	mov	x0, x24
   2093c:	bl	1fe20 <__sanitizer_on_print@@Base+0x5c0>
   20940:	ldr	x0, [x19, #24]
   20944:	add	x2, x0, #0x1
   20948:	str	x2, [x19, #24]
   2094c:	ldrb	w3, [x0]
   20950:	cmp	x3, #0x20
   20954:	b.eq	20968 <__sanitizer_on_print@@Base+0x1108>  // b.none
   20958:	b	20b4c <__sanitizer_on_print@@Base+0x12ec>
   2095c:	ldr	x2, [x19, #24]
   20960:	add	x2, x2, #0x1
   20964:	str	x2, [x19, #24]
   20968:	ldrb	w0, [x2]
   2096c:	bl	1fd70 <__sanitizer_on_print@@Base+0x510>
   20970:	tst	w0, #0xff
   20974:	b.ne	2095c <__sanitizer_on_print@@Base+0x10fc>  // b.any
   20978:	ldr	x1, [x19, #24]
   2097c:	cmp	x1, x23
   20980:	b.cc	20998 <__sanitizer_on_print@@Base+0x1138>  // b.lo, b.ul, b.last
   20984:	b	209a4 <__sanitizer_on_print@@Base+0x1144>
   20988:	add	x1, x1, #0x1
   2098c:	str	x1, [x19, #24]
   20990:	cmp	x1, x23
   20994:	b.eq	209a4 <__sanitizer_on_print@@Base+0x1144>  // b.none
   20998:	ldrb	w0, [x1]
   2099c:	cmp	w0, #0x20
   209a0:	b.eq	20988 <__sanitizer_on_print@@Base+0x1128>  // b.none
   209a4:	ldr	x0, [x22, #24]
   209a8:	cbz	x0, 209d0 <__sanitizer_on_print@@Base+0x1170>
   209ac:	ldr	x20, [x22, #32]
   209b0:	sub	x3, x23, x1
   209b4:	sub	x20, x20, #0x1
   209b8:	cmp	x20, x3
   209bc:	csel	x20, x20, x3, ls  // ls = plast
   209c0:	mov	x2, x20
   209c4:	bl	1b408 <__sanitizer_set_report_fd@@Base+0x3648>
   209c8:	ldr	x0, [x22, #24]
   209cc:	strb	wzr, [x0, x20]
   209d0:	add	x0, x23, #0x1
   209d4:	ldp	x23, x24, [sp, #32]
   209d8:	ldr	x25, [sp, #48]
   209dc:	str	x0, [x19, #24]
   209e0:	mov	w0, w21
   209e4:	ldp	x21, x22, [sp, #16]
   209e8:	ldr	x30, [sp, #56]
   209ec:	ldp	x19, x20, [sp], #64
   209f0:	ret
   209f4:	mov	w21, #0x0                   	// #0
   209f8:	mov	w0, w21
   209fc:	ldp	x21, x22, [sp, #16]
   20a00:	ldr	x30, [sp, #56]
   20a04:	ldp	x19, x20, [sp], #64
   20a08:	ret
   20a0c:	mov	x0, #0x1                   	// #1
   20a10:	mov	x9, #0xf                   	// #15
   20a14:	mov	x8, #0xb                   	// #11
   20a18:	mov	x7, #0x7                   	// #7
   20a1c:	mov	x5, #0xd                   	// #13
   20a20:	mov	x3, #0x9                   	// #9
   20a24:	mov	x4, #0x5                   	// #5
   20a28:	mov	x6, #0x3                   	// #3
   20a2c:	str	x0, [x22, #40]
   20a30:	b	20848 <__sanitizer_on_print@@Base+0xfe8>
   20a34:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20a38:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20a3c:	mov	x3, x20
   20a40:	add	x2, x2, #0x120
   20a44:	add	x0, x0, #0x140
   20a48:	mov	x4, #0x2d                  	// #45
   20a4c:	mov	w1, #0x2a                  	// #42
   20a50:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20a54:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20a58:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20a5c:	add	x2, x2, #0x1a0
   20a60:	add	x0, x0, #0x140
   20a64:	mov	x4, #0x20                  	// #32
   20a68:	mov	w1, #0x2c                  	// #44
   20a6c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20a70:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20a74:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20a78:	mov	w1, w20
   20a7c:	add	x2, x2, #0x1c0
   20a80:	add	x0, x0, #0x140
   20a84:	mov	x4, #0x0                   	// #0
   20a88:	mov	x3, #0x0                   	// #0
   20a8c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20a90:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20a94:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20a98:	add	x2, x2, #0x1f0
   20a9c:	add	x0, x0, #0x140
   20aa0:	mov	x4, #0x0                   	// #0
   20aa4:	mov	x3, #0x0                   	// #0
   20aa8:	mov	w1, #0x30                  	// #48
   20aac:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20ab0:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20ab4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20ab8:	add	x2, x2, #0x220
   20abc:	add	x0, x0, #0x140
   20ac0:	mov	x4, #0x0                   	// #0
   20ac4:	mov	x3, #0x0                   	// #0
   20ac8:	mov	w1, #0x32                  	// #50
   20acc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20ad0:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20ad4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20ad8:	add	x2, x2, #0x250
   20adc:	add	x0, x0, #0x140
   20ae0:	mov	x4, #0x0                   	// #0
   20ae4:	mov	x3, #0x0                   	// #0
   20ae8:	mov	w1, #0x34                  	// #52
   20aec:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20af0:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20af4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20af8:	mov	x3, x20
   20afc:	add	x2, x2, #0x1a0
   20b00:	add	x0, x0, #0x140
   20b04:	mov	x4, #0x20                  	// #32
   20b08:	mov	w1, #0x36                  	// #54
   20b0c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20b10:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20b14:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20b18:	mov	x4, x20
   20b1c:	mov	x3, x25
   20b20:	add	x2, x2, #0x1a0
   20b24:	add	x0, x0, #0x140
   20b28:	mov	w1, #0x38                  	// #56
   20b2c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20b30:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20b34:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20b38:	mov	x4, #0x3a                  	// #58
   20b3c:	add	x2, x2, #0x280
   20b40:	add	x0, x0, #0x140
   20b44:	mov	w1, w4
   20b48:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20b4c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20b50:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20b54:	mov	x4, x25
   20b58:	add	x2, x2, #0x1a0
   20b5c:	add	x0, x0, #0x140
   20b60:	mov	w1, #0x3c                  	// #60
   20b64:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20b68:	cbz	x1, 20e90 <__sanitizer_on_print@@Base+0x1630>
   20b6c:	stp	x19, x20, [sp, #-112]!
   20b70:	mov	x20, x0
   20b74:	mov	x19, x1
   20b78:	stp	x21, x22, [sp, #16]
   20b7c:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   20b80:	add	x21, sp, #0x50
   20b84:	ldr	x22, [x22, #4016]
   20b88:	stp	x23, x24, [sp, #32]
   20b8c:	adrp	x23, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   20b90:	add	x23, x23, #0xb50
   20b94:	stp	x25, x26, [sp, #48]
   20b98:	stp	x27, x30, [sp, #64]
   20b9c:	nop
   20ba0:	ldrb	w0, [x19]
   20ba4:	cmp	w0, #0x20
   20ba8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   20bac:	b.ne	20bc0 <__sanitizer_on_print@@Base+0x1360>  // b.any
   20bb0:	ldrb	w0, [x19, #1]!
   20bb4:	cmp	w0, #0x20
   20bb8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   20bbc:	b.eq	20bb0 <__sanitizer_on_print@@Base+0x1350>  // b.none
   20bc0:	mov	x0, x19
   20bc4:	mov	w1, #0xa                   	// #10
   20bc8:	bl	1a528 <__sanitizer_set_report_fd@@Base+0x2768>
   20bcc:	mov	x25, x0
   20bd0:	cbz	x0, 20d40 <__sanitizer_on_print@@Base+0x14e0>
   20bd4:	cmp	x25, x19
   20bd8:	b.eq	20be8 <__sanitizer_on_print@@Base+0x1388>  // b.none
   20bdc:	ldrb	w6, [x19]
   20be0:	cmp	w6, #0x23
   20be4:	b.ne	20bf8 <__sanitizer_on_print@@Base+0x1398>  // b.any
   20be8:	ldrb	w0, [x25]
   20bec:	cbz	w0, 20d28 <__sanitizer_on_print@@Base+0x14c8>
   20bf0:	add	x19, x25, #0x1
   20bf4:	b	20ba0 <__sanitizer_on_print@@Base+0x1340>
   20bf8:	mov	x24, x25
   20bfc:	nop
   20c00:	ldurb	w1, [x24, #-1]
   20c04:	cmp	w1, #0x20
   20c08:	and	w1, w1, #0xfffffffb
   20c0c:	ccmp	w1, #0x9, #0x4, ne  // ne = any
   20c10:	b.ne	20c20 <__sanitizer_on_print@@Base+0x13c0>  // b.any
   20c14:	sub	x24, x24, #0x1
   20c18:	cmp	x24, x19
   20c1c:	b.ne	20c00 <__sanitizer_on_print@@Base+0x13a0>  // b.any
   20c20:	ldr	w7, [x20, #8]
   20c24:	cmp	w7, #0x0
   20c28:	b.le	20e28 <__sanitizer_on_print@@Base+0x15c8>
   20c2c:	ldr	x8, [x20]
   20c30:	mov	x5, #0x0                   	// #0
   20c34:	nop
   20c38:	mov	w0, w5
   20c3c:	mov	w26, w5
   20c40:	ldr	x2, [x8, x5, lsl #3]
   20c44:	cbz	w6, 20c78 <__sanitizer_on_print@@Base+0x1418>
   20c48:	mov	w1, w6
   20c4c:	mov	x4, x19
   20c50:	b	20c60 <__sanitizer_on_print@@Base+0x1400>
   20c54:	ldrb	w1, [x4, #1]!
   20c58:	add	x2, x2, #0x1
   20c5c:	cbz	w1, 20c78 <__sanitizer_on_print@@Base+0x1418>
   20c60:	ldrb	w3, [x2]
   20c64:	cmp	w3, w1
   20c68:	b.eq	20c54 <__sanitizer_on_print@@Base+0x13f4>  // b.none
   20c6c:	cmp	w1, #0x3a
   20c70:	ccmp	w3, #0x0, #0x0, eq  // eq = none
   20c74:	b.eq	20d50 <__sanitizer_on_print@@Base+0x14f0>  // b.none
   20c78:	add	x5, x5, #0x1
   20c7c:	add	w26, w0, #0x1
   20c80:	cmp	w7, w5
   20c84:	b.gt	20c38 <__sanitizer_on_print@@Base+0x13d8>
   20c88:	cmp	w7, w26
   20c8c:	b.eq	20e94 <__sanitizer_on_print@@Base+0x1634>  // b.none
   20c90:	mov	x27, x20
   20c94:	mov	x2, #0x20                  	// #32
   20c98:	mov	w1, #0x0                   	// #0
   20c9c:	mov	x0, x21
   20ca0:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   20ca4:	sxtw	x26, w26
   20ca8:	ldr	x3, [x27], #16
   20cac:	sub	x24, x24, x19
   20cb0:	mov	x2, #0x0                   	// #0
   20cb4:	mov	x1, #0x0                   	// #0
   20cb8:	add	x0, x24, #0x1
   20cbc:	ldr	x3, [x3, x26, lsl #3]
   20cc0:	str	x3, [sp, #80]
   20cc4:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   20cc8:	str	x0, [sp, #88]
   20ccc:	mov	x1, x19
   20cd0:	mov	x2, x24
   20cd4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   20cd8:	ldr	x0, [sp, #88]
   20cdc:	strb	wzr, [x0, x24]
   20ce0:	ldr	x4, [x20, #24]
   20ce4:	ldr	x0, [x27, #16]
   20ce8:	lsr	x4, x4, #5
   20cec:	cmp	x0, x4
   20cf0:	b.hi	20e00 <__sanitizer_on_print@@Base+0x15a0>  // b.pmore
   20cf4:	add	x3, x0, #0x1
   20cf8:	b.eq	20d58 <__sanitizer_on_print@@Base+0x14f8>  // b.none
   20cfc:	ldr	x24, [x20, #16]
   20d00:	add	x26, x20, x26
   20d04:	str	x3, [x27, #16]
   20d08:	add	x0, x24, x0, lsl #5
   20d0c:	mov	x1, x21
   20d10:	mov	x2, #0x20                  	// #32
   20d14:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   20d18:	mov	w0, #0x1                   	// #1
   20d1c:	strb	w0, [x26, #40]
   20d20:	ldrb	w0, [x25]
   20d24:	cbnz	w0, 20bf0 <__sanitizer_on_print@@Base+0x1390>
   20d28:	ldp	x21, x22, [sp, #16]
   20d2c:	ldp	x23, x24, [sp, #32]
   20d30:	ldp	x25, x26, [sp, #48]
   20d34:	ldp	x27, x30, [sp, #64]
   20d38:	ldp	x19, x20, [sp], #112
   20d3c:	ret
   20d40:	mov	x0, x19
   20d44:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   20d48:	add	x25, x19, x0
   20d4c:	b	20bd4 <__sanitizer_on_print@@Base+0x1374>
   20d50:	add	x19, x4, #0x1
   20d54:	b	20c88 <__sanitizer_on_print@@Base+0x1428>
   20d58:	tst	x3, x0
   20d5c:	b.eq	20d98 <__sanitizer_on_print@@Base+0x1538>  // b.none
   20d60:	clz	x2, x3
   20d64:	mov	w1, #0x3f                  	// #63
   20d68:	sub	w2, w1, w2
   20d6c:	mov	x1, #0x1                   	// #1
   20d70:	add	w4, w2, #0x1
   20d74:	lsl	x4, x1, x4
   20d78:	cmp	x3, x4
   20d7c:	b.cs	20e4c <__sanitizer_on_print@@Base+0x15ec>  // b.hs, b.nlast
   20d80:	lsl	x1, x1, x2
   20d84:	cmp	x3, x1
   20d88:	b.ls	20e64 <__sanitizer_on_print@@Base+0x1604>  // b.plast
   20d8c:	cmp	x0, x4
   20d90:	b.hi	20e30 <__sanitizer_on_print@@Base+0x15d0>  // b.pmore
   20d94:	mov	x3, x4
   20d98:	ldr	x0, [x22]
   20d9c:	lsl	x19, x3, #5
   20da0:	cbz	x0, 20e1c <__sanitizer_on_print@@Base+0x15bc>
   20da4:	sub	x1, x0, #0x1
   20da8:	tst	x1, x0
   20dac:	b.ne	20e80 <__sanitizer_on_print@@Base+0x1620>  // b.any
   20db0:	add	x19, x19, x1
   20db4:	neg	x0, x0
   20db8:	and	x19, x19, x0
   20dbc:	mov	x1, x23
   20dc0:	mov	w2, #0x0                   	// #0
   20dc4:	mov	x0, x19
   20dc8:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   20dcc:	mov	x24, x0
   20dd0:	ldr	x1, [x20, #16]
   20dd4:	ldr	x2, [x27, #16]
   20dd8:	lsl	x2, x2, #5
   20ddc:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   20de0:	ldr	x1, [x27, #8]
   20de4:	ldr	x0, [x20, #16]
   20de8:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   20dec:	ldr	x0, [x27, #16]
   20df0:	str	x24, [x20, #16]
   20df4:	str	x19, [x27, #8]
   20df8:	add	x3, x0, #0x1
   20dfc:	b	20d00 <__sanitizer_on_print@@Base+0x14a0>
   20e00:	mov	x3, x0
   20e04:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   20e08:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   20e0c:	add	x2, x2, #0x808
   20e10:	add	x0, x0, #0xad8
   20e14:	mov	w1, #0x1cd                 	// #461
   20e18:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20e1c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   20e20:	str	x0, [x22]
   20e24:	b	20da4 <__sanitizer_on_print@@Base+0x1544>
   20e28:	mov	w26, #0x0                   	// #0
   20e2c:	b	20c88 <__sanitizer_on_print@@Base+0x1428>
   20e30:	mov	x3, x0
   20e34:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   20e38:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   20e3c:	add	x2, x2, #0x838
   20e40:	add	x0, x0, #0xad8
   20e44:	mov	w1, #0x20c                 	// #524
   20e48:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20e4c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   20e50:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   20e54:	add	x2, x2, #0x5c0
   20e58:	add	x0, x0, #0xad8
   20e5c:	mov	w1, #0x18a                 	// #394
   20e60:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20e64:	mov	x4, x1
   20e68:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   20e6c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   20e70:	add	x2, x2, #0x648
   20e74:	add	x0, x0, #0xad8
   20e78:	mov	w1, #0x18b                 	// #395
   20e7c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20e80:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   20e84:	add	x0, x0, #0xb38
   20e88:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   20e8c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   20e90:	ret
   20e94:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   20e98:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20e9c:	add	x0, x0, #0x2a0
   20ea0:	ldr	x1, [x1, #4024]
   20ea4:	ldr	x1, [x1]
   20ea8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   20eac:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   20eb0:	sxtw	x2, w2
   20eb4:	mov	w3, #0x1                   	// #1
   20eb8:	str	x1, [x0]
   20ebc:	cmp	x2, #0x40
   20ec0:	str	w2, [x0, #8]
   20ec4:	str	xzr, [x0, #16]
   20ec8:	stp	xzr, xzr, [x0, #24]
   20ecc:	strb	w3, [x0, #104]
   20ed0:	b.hi	20ee0 <__sanitizer_on_print@@Base+0x1680>  // b.pmore
   20ed4:	add	x0, x0, #0x28
   20ed8:	mov	w1, #0x0                   	// #0
   20edc:	b	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   20ee0:	str	x30, [sp, #-16]!
   20ee4:	mov	x3, x2
   20ee8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20eec:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   20ef0:	add	x0, x0, #0x300
   20ef4:	add	x2, x2, #0x2c8
   20ef8:	mov	x4, #0x40                  	// #64
   20efc:	mov	w1, #0x1d                  	// #29
   20f00:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   20f04:	nop
   20f08:	stp	x19, x20, [sp, #-112]!
   20f0c:	mov	x19, x1
   20f10:	str	x30, [sp, #64]
   20f14:	ldrb	w1, [x1]
   20f18:	cbnz	w1, 20f28 <__sanitizer_on_print@@Base+0x16c8>
   20f1c:	ldr	x30, [sp, #64]
   20f20:	ldp	x19, x20, [sp], #112
   20f24:	ret
   20f28:	stp	x21, x22, [sp, #16]
   20f2c:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   20f30:	mov	x21, x0
   20f34:	ldr	x20, [x22, #4016]
   20f38:	stp	x23, x24, [sp, #32]
   20f3c:	ldr	x2, [x20]
   20f40:	cbz	x2, 21040 <__sanitizer_on_print@@Base+0x17e0>
   20f44:	sub	x0, x2, #0x1
   20f48:	tst	x0, x2
   20f4c:	b.ne	21158 <__sanitizer_on_print@@Base+0x18f8>  // b.any
   20f50:	add	x24, x2, #0xfff
   20f54:	neg	x2, x2
   20f58:	and	x24, x24, x2
   20f5c:	adrp	x23, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   20f60:	mov	w2, #0x0                   	// #0
   20f64:	add	x1, x23, #0xb50
   20f68:	mov	x0, x24
   20f6c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   20f70:	mov	x2, #0x0                   	// #0
   20f74:	mov	x1, #0x0                   	// #0
   20f78:	mov	x20, x0
   20f7c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   20f80:	mov	x1, #0x0                   	// #0
   20f84:	mov	x0, #0x0                   	// #0
   20f88:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   20f8c:	cmp	x24, #0xfff
   20f90:	b.ls	210f4 <__sanitizer_on_print@@Base+0x1894>  // b.plast
   20f94:	mov	x2, #0x1000                	// #4096
   20f98:	mov	w1, #0x0                   	// #0
   20f9c:	mov	x0, x20
   20fa0:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   20fa4:	strb	wzr, [x20]
   20fa8:	mov	x0, x19
   20fac:	bl	1c340 <__sanitizer_set_report_fd@@Base+0x4580>
   20fb0:	tst	w0, #0xff
   20fb4:	b.eq	21050 <__sanitizer_on_print@@Base+0x17f0>  // b.none
   20fb8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   20fbc:	ldr	x0, [x0, #3816]
   20fc0:	ldr	w0, [x0]
   20fc4:	cbnz	w0, 21020 <__sanitizer_on_print@@Base+0x17c0>
   20fc8:	add	x3, sp, #0x68
   20fcc:	add	x2, sp, #0x60
   20fd0:	add	x1, sp, #0x58
   20fd4:	mov	x0, x19
   20fd8:	mov	x5, #0x0                   	// #0
   20fdc:	mov	x4, #0x4000000             	// #67108864
   20fe0:	bl	174d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   20fe4:	tst	w0, #0xff
   20fe8:	b.eq	21254 <__sanitizer_on_print@@Base+0x19f4>  // b.none
   20fec:	ldrb	w0, [x21, #104]
   20ff0:	ldr	x1, [sp, #88]
   20ff4:	cbz	w0, 2116c <__sanitizer_on_print@@Base+0x190c>
   20ff8:	mov	x0, x21
   20ffc:	bl	20b68 <__sanitizer_on_print@@Base+0x1308>
   21000:	mov	x1, x24
   21004:	mov	x0, x20
   21008:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2100c:	ldp	x21, x22, [sp, #16]
   21010:	ldp	x23, x24, [sp, #32]
   21014:	ldr	x30, [sp, #64]
   21018:	ldp	x19, x20, [sp], #112
   2101c:	ret
   21020:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21024:	mov	x2, x19
   21028:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2102c:	add	x0, x0, #0x360
   21030:	ldr	x1, [x1, #4024]
   21034:	ldr	x1, [x1]
   21038:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2103c:	b	20fc8 <__sanitizer_on_print@@Base+0x1768>
   21040:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   21044:	mov	x2, x0
   21048:	str	x0, [x20]
   2104c:	b	20f44 <__sanitizer_on_print@@Base+0x16e4>
   21050:	mov	x0, x19
   21054:	bl	1e090 <__sanitizer_set_report_fd@@Base+0x62d0>
   21058:	tst	w0, #0xff
   2105c:	b.ne	20fb8 <__sanitizer_on_print@@Base+0x1758>  // b.any
   21060:	stp	x25, x26, [sp, #48]
   21064:	ldr	x25, [x22, #4016]
   21068:	ldr	x0, [x25]
   2106c:	cbz	x0, 2119c <__sanitizer_on_print@@Base+0x193c>
   21070:	sub	x1, x0, #0x1
   21074:	tst	x1, x0
   21078:	b.ne	2115c <__sanitizer_on_print@@Base+0x18fc>  // b.any
   2107c:	add	x26, x0, #0xfff
   21080:	neg	x0, x0
   21084:	and	x26, x26, x0
   21088:	add	x1, x23, #0xb50
   2108c:	mov	w2, #0x0                   	// #0
   21090:	mov	x0, x26
   21094:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   21098:	mov	x25, x0
   2109c:	mov	x2, #0x0                   	// #0
   210a0:	mov	x1, #0x0                   	// #0
   210a4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   210a8:	mov	x1, #0x0                   	// #0
   210ac:	mov	x0, #0x0                   	// #0
   210b0:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   210b4:	cmp	x26, #0xfff
   210b8:	b.ls	211ec <__sanitizer_on_print@@Base+0x198c>  // b.plast
   210bc:	mov	w1, #0x0                   	// #0
   210c0:	mov	x0, x25
   210c4:	mov	x2, #0x1000                	// #4096
   210c8:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   210cc:	strb	wzr, [x25]
   210d0:	mov	x0, x25
   210d4:	mov	x1, #0x1000                	// #4096
   210d8:	bl	14f10 <_ZdaPvRKSt9nothrow_t@@Base+0x3250>
   210dc:	cbnz	x0, 211a8 <__sanitizer_on_print@@Base+0x1948>
   210e0:	mov	x1, x26
   210e4:	mov	x0, x25
   210e8:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   210ec:	ldp	x25, x26, [sp, #48]
   210f0:	b	20fb8 <__sanitizer_on_print@@Base+0x1758>
   210f4:	stp	x25, x26, [sp, #48]
   210f8:	ldr	x25, [x22, #4016]
   210fc:	ldr	x0, [x25]
   21100:	cbz	x0, 21190 <__sanitizer_on_print@@Base+0x1930>
   21104:	sub	x1, x0, #0x1
   21108:	tst	x1, x0
   2110c:	b.ne	2115c <__sanitizer_on_print@@Base+0x18fc>  // b.any
   21110:	add	x25, x0, #0xfff
   21114:	neg	x0, x0
   21118:	and	x25, x25, x0
   2111c:	add	x1, x23, #0xb50
   21120:	mov	x0, x25
   21124:	mov	w2, #0x0                   	// #0
   21128:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2112c:	mov	x26, x0
   21130:	mov	x2, #0x0                   	// #0
   21134:	mov	x1, x20
   21138:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2113c:	mov	x1, x24
   21140:	mov	x0, x20
   21144:	mov	x24, x25
   21148:	mov	x20, x26
   2114c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   21150:	ldp	x25, x26, [sp, #48]
   21154:	b	20f94 <__sanitizer_on_print@@Base+0x1734>
   21158:	stp	x25, x26, [sp, #48]
   2115c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   21160:	add	x0, x0, #0xb38
   21164:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   21168:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2116c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21170:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21174:	add	x2, x2, #0x3b8
   21178:	add	x0, x0, #0x300
   2117c:	mov	x4, #0x0                   	// #0
   21180:	mov	x3, #0x0                   	// #0
   21184:	mov	w1, #0x76                  	// #118
   21188:	stp	x25, x26, [sp, #48]
   2118c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21190:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   21194:	str	x0, [x25]
   21198:	b	21104 <__sanitizer_on_print@@Base+0x18a4>
   2119c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   211a0:	str	x0, [x25]
   211a4:	b	21070 <__sanitizer_on_print@@Base+0x1810>
   211a8:	mov	x0, x25
   211ac:	bl	148a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2be8>
   211b0:	sub	x2, x0, x25
   211b4:	mov	x22, #0xfff                 	// #4095
   211b8:	cmp	x2, x22
   211bc:	mov	x1, x25
   211c0:	csel	x2, x2, x22, ls  // ls = plast
   211c4:	mov	x0, x20
   211c8:	bl	1ace8 <__sanitizer_set_report_fd@@Base+0x2f28>
   211cc:	mov	x0, x20
   211d0:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   211d4:	mov	x1, x19
   211d8:	sub	x2, x22, x0
   211dc:	mov	x19, x20
   211e0:	mov	x0, x20
   211e4:	bl	1ace8 <__sanitizer_set_report_fd@@Base+0x2f28>
   211e8:	b	210e0 <__sanitizer_on_print@@Base+0x1880>
   211ec:	ldr	x22, [x22, #4016]
   211f0:	ldr	x0, [x22]
   211f4:	cbz	x0, 21248 <__sanitizer_on_print@@Base+0x19e8>
   211f8:	sub	x1, x0, #0x1
   211fc:	tst	x1, x0
   21200:	b.ne	2115c <__sanitizer_on_print@@Base+0x18fc>  // b.any
   21204:	add	x22, x0, #0xfff
   21208:	neg	x0, x0
   2120c:	and	x22, x22, x0
   21210:	add	x1, x23, #0xb50
   21214:	mov	x0, x22
   21218:	mov	w2, #0x0                   	// #0
   2121c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   21220:	mov	x23, x0
   21224:	mov	x2, #0x0                   	// #0
   21228:	mov	x1, x25
   2122c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   21230:	mov	x1, x26
   21234:	mov	x0, x25
   21238:	mov	x26, x22
   2123c:	mov	x25, x23
   21240:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   21244:	b	210bc <__sanitizer_on_print@@Base+0x185c>
   21248:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2124c:	str	x0, [x22]
   21250:	b	211f8 <__sanitizer_on_print@@Base+0x1998>
   21254:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21258:	mov	x2, x19
   2125c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21260:	add	x0, x0, #0x388
   21264:	ldr	x1, [x1, #4024]
   21268:	stp	x25, x26, [sp, #48]
   2126c:	ldr	x1, [x1]
   21270:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   21274:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   21278:	stp	x19, x20, [sp, #-64]!
   2127c:	mov	x20, x0
   21280:	str	x30, [sp, #48]
   21284:	strb	wzr, [x0, #104]
   21288:	ldr	w0, [x0, #8]
   2128c:	cmp	w0, #0x0
   21290:	b.le	21354 <__sanitizer_on_print@@Base+0x1af4>
   21294:	mov	x19, #0x0                   	// #0
   21298:	stp	x21, x22, [sp, #16]
   2129c:	mov	x22, x1
   212a0:	mov	x21, x2
   212a4:	stp	x23, x24, [sp, #32]
   212a8:	mov	x23, x3
   212ac:	b	212bc <__sanitizer_on_print@@Base+0x1a5c>
   212b0:	ldr	w0, [x20, #8]
   212b4:	cmp	w0, w19
   212b8:	b.le	2134c <__sanitizer_on_print@@Base+0x1aec>
   212bc:	ldr	x1, [x20]
   212c0:	mov	w24, w19
   212c4:	mov	x0, x21
   212c8:	ldr	x1, [x1, x19, lsl #3]
   212cc:	add	x19, x19, #0x1
   212d0:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   212d4:	cbnz	w0, 212b0 <__sanitizer_on_print@@Base+0x1a50>
   212d8:	add	x24, x20, w24, sxtw
   212dc:	ldrb	w0, [x24, #40]
   212e0:	cbz	w0, 2134c <__sanitizer_on_print@@Base+0x1aec>
   212e4:	ldr	x0, [x20, #32]
   212e8:	cbz	x0, 2134c <__sanitizer_on_print@@Base+0x1aec>
   212ec:	mov	x19, #0x0                   	// #0
   212f0:	b	21300 <__sanitizer_on_print@@Base+0x1aa0>
   212f4:	ldr	x0, [x20, #32]
   212f8:	cmp	x19, x0
   212fc:	b.cs	2134c <__sanitizer_on_print@@Base+0x1aec>  // b.hs, b.nlast
   21300:	ldr	x0, [x20, #16]
   21304:	lsl	x4, x19, #5
   21308:	mov	x1, x21
   2130c:	add	x19, x19, #0x1
   21310:	add	x24, x0, x4
   21314:	ldr	x0, [x0, x4]
   21318:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2131c:	cbnz	w0, 212f4 <__sanitizer_on_print@@Base+0x1a94>
   21320:	ldr	x0, [x24, #8]
   21324:	mov	x1, x22
   21328:	bl	14c38 <_ZdaPvRKSt9nothrow_t@@Base+0x2f78>
   2132c:	ands	w0, w0, #0xff
   21330:	b.eq	212f4 <__sanitizer_on_print@@Base+0x1a94>  // b.none
   21334:	ldp	x21, x22, [sp, #16]
   21338:	str	x24, [x23]
   2133c:	ldp	x23, x24, [sp, #32]
   21340:	ldr	x30, [sp, #48]
   21344:	ldp	x19, x20, [sp], #64
   21348:	ret
   2134c:	ldp	x21, x22, [sp, #16]
   21350:	ldp	x23, x24, [sp, #32]
   21354:	mov	w0, #0x0                   	// #0
   21358:	ldr	x30, [sp, #48]
   2135c:	ldp	x19, x20, [sp], #64
   21360:	ret
   21364:	nop
   21368:	ldrb	w2, [x0, #104]
   2136c:	cbz	w2, 21374 <__sanitizer_on_print@@Base+0x1b14>
   21370:	b	20b68 <__sanitizer_on_print@@Base+0x1308>
   21374:	str	x30, [sp, #-16]!
   21378:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2137c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21380:	add	x2, x2, #0x3b8
   21384:	add	x0, x0, #0x300
   21388:	mov	x4, #0x0                   	// #0
   2138c:	mov	x3, #0x0                   	// #0
   21390:	mov	w1, #0x76                  	// #118
   21394:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21398:	ldr	x0, [x0, #32]
   2139c:	ret
   213a0:	stp	x19, x20, [sp, #-48]!
   213a4:	mov	x20, x0
   213a8:	ldr	w0, [x0, #8]
   213ac:	str	x30, [sp, #32]
   213b0:	cmp	w0, #0x0
   213b4:	b.le	2140c <__sanitizer_on_print@@Base+0x1bac>
   213b8:	mov	x19, #0x0                   	// #0
   213bc:	stp	x21, x22, [sp, #16]
   213c0:	mov	x21, x1
   213c4:	b	213d4 <__sanitizer_on_print@@Base+0x1b74>
   213c8:	ldr	w0, [x20, #8]
   213cc:	cmp	w0, w19
   213d0:	b.le	21408 <__sanitizer_on_print@@Base+0x1ba8>
   213d4:	ldr	x2, [x20]
   213d8:	mov	w22, w19
   213dc:	mov	x0, x21
   213e0:	ldr	x1, [x2, x19, lsl #3]
   213e4:	add	x19, x19, #0x1
   213e8:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   213ec:	cbnz	w0, 213c8 <__sanitizer_on_print@@Base+0x1b68>
   213f0:	add	x20, x20, w22, sxtw
   213f4:	ldp	x21, x22, [sp, #16]
   213f8:	ldrb	w0, [x20, #40]
   213fc:	ldr	x30, [sp, #32]
   21400:	ldp	x19, x20, [sp], #48
   21404:	ret
   21408:	ldp	x21, x22, [sp, #16]
   2140c:	mov	w0, #0x0                   	// #0
   21410:	ldr	x30, [sp, #32]
   21414:	ldp	x19, x20, [sp], #48
   21418:	ret
   2141c:	nop
   21420:	ldr	x4, [x0, #32]
   21424:	cmp	x1, x4
   21428:	b.cs	21438 <__sanitizer_on_print@@Base+0x1bd8>  // b.hs, b.nlast
   2142c:	ldr	x0, [x0, #16]
   21430:	add	x0, x0, x1, lsl #5
   21434:	ret
   21438:	str	x30, [sp, #-16]!
   2143c:	mov	x3, x1
   21440:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21444:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21448:	add	x2, x2, #0x3d0
   2144c:	add	x0, x0, #0x300
   21450:	mov	w1, #0xaa                  	// #170
   21454:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21458:	stp	x19, x20, [sp, #-96]!
   2145c:	stp	x21, x22, [sp, #16]
   21460:	mov	x21, x1
   21464:	ldr	x1, [x0, #32]
   21468:	str	x30, [sp, #64]
   2146c:	cbz	x1, 21500 <__sanitizer_on_print@@Base+0x1ca0>
   21470:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21474:	mov	x20, x0
   21478:	mov	x19, #0x0                   	// #0
   2147c:	stp	x23, x24, [sp, #32]
   21480:	adrp	x23, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   21484:	ldr	x22, [x22, #4016]
   21488:	add	x23, x23, #0xb50
   2148c:	stp	x25, x26, [sp, #48]
   21490:	add	x26, sp, #0x58
   21494:	b	214a4 <__sanitizer_on_print@@Base+0x1c44>
   21498:	add	x19, x19, #0x1
   2149c:	cmp	x19, x1
   214a0:	b.cs	214f8 <__sanitizer_on_print@@Base+0x1c98>  // b.hs, b.nlast
   214a4:	ldr	x2, [x20, #16]
   214a8:	add	x2, x2, x19, lsl #5
   214ac:	ldr	w0, [x2, #16]
   214b0:	cbz	w0, 21498 <__sanitizer_on_print@@Base+0x1c38>
   214b4:	ldp	x4, x3, [x21, #8]
   214b8:	str	x2, [sp, #88]
   214bc:	lsr	x4, x4, #3
   214c0:	cmp	x3, x4
   214c4:	b.hi	215bc <__sanitizer_on_print@@Base+0x1d5c>  // b.pmore
   214c8:	add	x24, x3, #0x1
   214cc:	b.eq	21510 <__sanitizer_on_print@@Base+0x1cb0>  // b.none
   214d0:	ldr	x25, [x21]
   214d4:	str	x24, [x21, #16]
   214d8:	mov	x1, x26
   214dc:	add	x0, x25, x3, lsl #3
   214e0:	mov	x2, #0x8                   	// #8
   214e4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   214e8:	ldr	x1, [x20, #32]
   214ec:	add	x19, x19, #0x1
   214f0:	cmp	x19, x1
   214f4:	b.cc	214a4 <__sanitizer_on_print@@Base+0x1c44>  // b.lo, b.ul, b.last
   214f8:	ldp	x23, x24, [sp, #32]
   214fc:	ldp	x25, x26, [sp, #48]
   21500:	ldp	x21, x22, [sp, #16]
   21504:	ldr	x30, [sp, #64]
   21508:	ldp	x19, x20, [sp], #96
   2150c:	ret
   21510:	tst	x3, x24
   21514:	b.eq	21550 <__sanitizer_on_print@@Base+0x1cf0>  // b.none
   21518:	clz	x2, x24
   2151c:	mov	w0, #0x3f                  	// #63
   21520:	sub	w0, w0, w2
   21524:	mov	x2, #0x1                   	// #1
   21528:	add	w4, w0, #0x1
   2152c:	lsl	x4, x2, x4
   21530:	cmp	x4, x24
   21534:	b.ls	215e4 <__sanitizer_on_print@@Base+0x1d84>  // b.plast
   21538:	lsl	x0, x2, x0
   2153c:	cmp	x0, x24
   21540:	b.cs	21618 <__sanitizer_on_print@@Base+0x1db8>  // b.hs, b.nlast
   21544:	cmp	x3, x4
   21548:	b.hi	21600 <__sanitizer_on_print@@Base+0x1da0>  // b.pmore
   2154c:	mov	x24, x4
   21550:	ldr	x0, [x22]
   21554:	lsl	x24, x24, #3
   21558:	cbz	x0, 215b0 <__sanitizer_on_print@@Base+0x1d50>
   2155c:	sub	x1, x0, #0x1
   21560:	tst	x1, x0
   21564:	b.ne	215d4 <__sanitizer_on_print@@Base+0x1d74>  // b.any
   21568:	add	x24, x24, x1
   2156c:	neg	x0, x0
   21570:	and	x24, x24, x0
   21574:	mov	x1, x23
   21578:	mov	x0, x24
   2157c:	mov	w2, #0x0                   	// #0
   21580:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   21584:	mov	x25, x0
   21588:	ldr	x1, [x21]
   2158c:	ldr	x2, [x21, #16]
   21590:	lsl	x2, x2, #3
   21594:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   21598:	ldp	x0, x1, [x21]
   2159c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   215a0:	stp	x25, x24, [x21]
   215a4:	ldr	x3, [x21, #16]
   215a8:	add	x24, x3, #0x1
   215ac:	b	214d4 <__sanitizer_on_print@@Base+0x1c74>
   215b0:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   215b4:	str	x0, [x22]
   215b8:	b	2155c <__sanitizer_on_print@@Base+0x1cfc>
   215bc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   215c0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   215c4:	add	x2, x2, #0x808
   215c8:	add	x0, x0, #0xad8
   215cc:	mov	w1, #0x1cd                 	// #461
   215d0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   215d4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   215d8:	add	x0, x0, #0xb38
   215dc:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   215e0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   215e4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   215e8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   215ec:	mov	x3, x24
   215f0:	add	x2, x2, #0x5c0
   215f4:	add	x0, x0, #0xad8
   215f8:	mov	w1, #0x18a                 	// #394
   215fc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21600:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   21604:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   21608:	add	x2, x2, #0x838
   2160c:	add	x0, x0, #0xad8
   21610:	mov	w1, #0x20c                 	// #524
   21614:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21618:	mov	x4, x0
   2161c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   21620:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   21624:	mov	x3, x24
   21628:	add	x2, x2, #0x648
   2162c:	add	x0, x0, #0xad8
   21630:	mov	w1, #0x18b                 	// #395
   21634:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21638:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2163c:	ldr	x0, [x0, #4056]
   21640:	ldrb	w0, [x0, #121]
   21644:	cbz	w0, 2171c <__sanitizer_on_print@@Base+0x1ebc>
   21648:	stp	x19, x20, [sp, #-48]!
   2164c:	mrs	x19, tpidr_el0
   21650:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21654:	ldr	x20, [x20, #3608]
   21658:	stp	x21, x22, [sp, #16]
   2165c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21660:	add	x1, x19, x20
   21664:	ldr	x0, [x21, #3816]
   21668:	ldr	x22, [x19, x20]
   2166c:	ldr	w0, [x0]
   21670:	str	x30, [sp, #32]
   21674:	sxtw	x0, w0
   21678:	cmp	x0, #0x1
   2167c:	b.hi	216f4 <__sanitizer_on_print@@Base+0x1e94>  // b.pmore
   21680:	mov	x0, #0xffffffffffffffff    	// #-1
   21684:	str	x0, [x19, x20]
   21688:	add	x19, x19, x20
   2168c:	cbz	x22, 216e4 <__sanitizer_on_print@@Base+0x1e84>
   21690:	ldr	x21, [x21, #3816]
   21694:	ldr	x19, [x19, #8]
   21698:	ldr	w0, [x21]
   2169c:	sxtw	x0, w0
   216a0:	cmp	x0, #0x1
   216a4:	b.ls	216bc <__sanitizer_on_print@@Base+0x1e5c>  // b.plast
   216a8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   216ac:	mov	x2, x22
   216b0:	add	x0, x0, #0x420
   216b4:	mov	x1, x19
   216b8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   216bc:	mov	x0, x19
   216c0:	lsl	x1, x22, #4
   216c4:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   216c8:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   216cc:	add	x0, x0, #0x730
   216d0:	ldxr	x1, [x0]
   216d4:	sub	x1, x1, #0x1
   216d8:	stlxr	w2, x1, [x0]
   216dc:	cbnz	w2, 216d0 <__sanitizer_on_print@@Base+0x1e70>
   216e0:	dmb	ish
   216e4:	ldp	x21, x22, [sp, #16]
   216e8:	ldr	x30, [sp, #32]
   216ec:	ldp	x19, x20, [sp], #48
   216f0:	ret
   216f4:	mov	x2, x22
   216f8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   216fc:	add	x0, x0, #0x3f8
   21700:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   21704:	ldr	x22, [x19, x20]
   21708:	mov	x0, #0xffffffffffffffff    	// #-1
   2170c:	str	x0, [x19, x20]
   21710:	add	x19, x19, x20
   21714:	cbnz	x22, 21690 <__sanitizer_on_print@@Base+0x1e30>
   21718:	b	216e4 <__sanitizer_on_print@@Base+0x1e84>
   2171c:	ret
   21720:	adrp	x5, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21724:	stp	x19, x20, [sp, #-144]!
   21728:	mov	x20, x0
   2172c:	ldr	x5, [x5, #4056]
   21730:	ldrb	w0, [x5, #121]
   21734:	str	x30, [sp, #80]
   21738:	cbz	w0, 21924 <__sanitizer_on_print@@Base+0x20c4>
   2173c:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21740:	ldr	x19, [x19, #3608]
   21744:	stp	x23, x24, [sp, #32]
   21748:	mrs	x24, tpidr_el0
   2174c:	stp	x27, x28, [sp, #64]
   21750:	mov	x28, x1
   21754:	add	x1, x24, x19
   21758:	ldr	x5, [x24, x19]
   2175c:	cmn	x5, #0x1
   21760:	b.eq	219a4 <__sanitizer_on_print@@Base+0x2144>  // b.none
   21764:	stp	x21, x22, [sp, #16]
   21768:	mov	x23, x3
   2176c:	mov	x22, x2
   21770:	ldr	x21, [x20]
   21774:	stp	x25, x26, [sp, #48]
   21778:	add	x3, x21, #0x1
   2177c:	cmp	x5, x3
   21780:	b.cc	2185c <__sanitizer_on_print@@Base+0x1ffc>  // b.lo, b.ul, b.last
   21784:	ldr	x26, [x1, #8]
   21788:	lsl	x21, x21, #4
   2178c:	ldr	x26, [x26, x21]
   21790:	cbnz	x26, 21914 <__sanitizer_on_print@@Base+0x20b4>
   21794:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21798:	ldr	x3, [x20, #8]
   2179c:	ldr	x0, [x25, #3816]
   217a0:	sub	x5, x28, x3
   217a4:	str	x5, [sp, #136]
   217a8:	ldr	w0, [x0]
   217ac:	sxtw	x0, w0
   217b0:	cmp	x0, #0x1
   217b4:	b.ls	217e0 <__sanitizer_on_print@@Base+0x1f80>  // b.plast
   217b8:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   217bc:	mov	x4, x28
   217c0:	ldr	x2, [x20]
   217c4:	mov	x1, x20
   217c8:	ldr	x7, [x0, #1840]
   217cc:	add	x6, sp, #0x88
   217d0:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   217d4:	add	x0, x0, #0x500
   217d8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   217dc:	ldr	x5, [sp, #136]
   217e0:	add	x1, x24, x19
   217e4:	ldr	x0, [x1, #24]
   217e8:	cmp	x0, x5
   217ec:	b.eq	21970 <__sanitizer_on_print@@Base+0x2110>  // b.none
   217f0:	cmp	x23, x5
   217f4:	ccmp	x22, x5, #0x2, hi  // hi = pmore
   217f8:	b.ls	219cc <__sanitizer_on_print@@Base+0x216c>  // b.plast
   217fc:	and	x0, x5, #0xfff
   21800:	cmp	x0, #0x10
   21804:	ldr	x0, [x25, #3816]
   21808:	b.eq	2193c <__sanitizer_on_print@@Base+0x20dc>  // b.none
   2180c:	ldr	w0, [x0]
   21810:	sxtw	x0, w0
   21814:	cmp	x0, #0x1
   21818:	b.ls	2182c <__sanitizer_on_print@@Base+0x1fcc>  // b.plast
   2181c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21820:	add	x0, x0, #0x5e0
   21824:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   21828:	ldr	x5, [sp, #136]
   2182c:	add	x19, x24, x19
   21830:	ldp	x23, x24, [sp, #32]
   21834:	ldr	x1, [x19, #8]
   21838:	ldp	x27, x28, [sp, #64]
   2183c:	add	x0, x1, x21
   21840:	str	x5, [x1, x21]
   21844:	ldp	x21, x22, [sp, #16]
   21848:	str	x26, [x0, #8]
   2184c:	ldp	x25, x26, [sp, #48]
   21850:	ldr	x30, [sp, #80]
   21854:	ldp	x19, x20, [sp], #144
   21858:	ret
   2185c:	tst	x3, x21
   21860:	b.eq	21934 <__sanitizer_on_print@@Base+0x20d4>  // b.none
   21864:	clz	x1, x3
   21868:	mov	w4, #0x3f                  	// #63
   2186c:	sub	w4, w4, w1
   21870:	mov	x1, #0x1                   	// #1
   21874:	add	w27, w4, #0x1
   21878:	lsl	x27, x1, x27
   2187c:	cmp	x3, x27
   21880:	b.cs	21ab0 <__sanitizer_on_print@@Base+0x2250>  // b.hs, b.nlast
   21884:	lsl	x4, x1, x4
   21888:	cmp	x3, x4
   2188c:	b.ls	21acc <__sanitizer_on_print@@Base+0x226c>  // b.plast
   21890:	cmp	x27, #0x100
   21894:	mov	x4, #0x100                 	// #256
   21898:	csel	x27, x27, x4, cs  // cs = hs, nlast
   2189c:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   218a0:	mov	w2, #0x0                   	// #0
   218a4:	add	x1, x1, #0x448
   218a8:	lsl	x0, x27, #4
   218ac:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   218b0:	adrp	x4, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   218b4:	mov	x26, x0
   218b8:	add	x0, x4, #0x730
   218bc:	ldxr	x2, [x0]
   218c0:	add	x1, x2, #0x1
   218c4:	stlxr	w3, x1, [x0]
   218c8:	cbnz	w3, 218bc <__sanitizer_on_print@@Base+0x205c>
   218cc:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   218d0:	dmb	ish
   218d4:	ldr	x0, [x25, #3816]
   218d8:	ldr	w0, [x0]
   218dc:	sxtw	x0, w0
   218e0:	cmp	x0, #0x1
   218e4:	b.hi	219b0 <__sanitizer_on_print@@Base+0x2150>  // b.pmore
   218e8:	mov	x0, #0xfffff               	// #1048575
   218ec:	cmp	x2, x0
   218f0:	b.hi	21a90 <__sanitizer_on_print@@Base+0x2230>  // b.pmore
   218f4:	ldr	x3, [x24, x19]
   218f8:	add	x5, x24, x19
   218fc:	cbnz	x3, 219f8 <__sanitizer_on_print@@Base+0x2198>
   21900:	lsl	x21, x21, #4
   21904:	str	x26, [x5, #8]
   21908:	str	x27, [x24, x19]
   2190c:	ldr	x26, [x26, x21]
   21910:	cbz	x26, 21794 <__sanitizer_on_print@@Base+0x1f34>
   21914:	ldp	x21, x22, [sp, #16]
   21918:	ldp	x23, x24, [sp, #32]
   2191c:	ldp	x25, x26, [sp, #48]
   21920:	ldp	x27, x28, [sp, #64]
   21924:	mov	x0, #0x0                   	// #0
   21928:	ldr	x30, [sp, #80]
   2192c:	ldp	x19, x20, [sp], #144
   21930:	ret
   21934:	mov	x27, x3
   21938:	b	21890 <__sanitizer_on_print@@Base+0x2030>
   2193c:	ldr	w0, [x0]
   21940:	ldp	x26, x5, [x5, #-16]
   21944:	str	x5, [sp, #136]
   21948:	sxtw	x0, w0
   2194c:	cmp	x0, #0x1
   21950:	b.ls	2182c <__sanitizer_on_print@@Base+0x1fcc>  // b.plast
   21954:	mov	x1, x5
   21958:	mov	x2, x26
   2195c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21960:	add	x0, x0, #0x5a8
   21964:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   21968:	ldr	x5, [sp, #136]
   2196c:	b	2182c <__sanitizer_on_print@@Base+0x1fcc>
   21970:	ldr	x0, [x25, #3816]
   21974:	ldr	x26, [x1, #16]
   21978:	ldr	w0, [x0]
   2197c:	sxtw	x0, w0
   21980:	cmp	x0, #0x1
   21984:	b.ls	2182c <__sanitizer_on_print@@Base+0x1fcc>  // b.plast
   21988:	mov	x1, x5
   2198c:	mov	x2, x26
   21990:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21994:	add	x0, x0, #0x550
   21998:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2199c:	ldr	x5, [sp, #136]
   219a0:	b	2182c <__sanitizer_on_print@@Base+0x1fcc>
   219a4:	ldp	x23, x24, [sp, #32]
   219a8:	ldp	x27, x28, [sp, #64]
   219ac:	b	21924 <__sanitizer_on_print@@Base+0x20c4>
   219b0:	add	x1, x24, x19
   219b4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   219b8:	add	x0, x0, #0x458
   219bc:	str	x2, [sp, #96]
   219c0:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   219c4:	ldr	x2, [sp, #96]
   219c8:	b	218e8 <__sanitizer_on_print@@Base+0x2088>
   219cc:	ldr	x0, [x25, #3816]
   219d0:	ldr	w0, [x0]
   219d4:	sxtw	x0, w0
   219d8:	cmp	x0, #0x1
   219dc:	b.ls	2182c <__sanitizer_on_print@@Base+0x1fcc>  // b.plast
   219e0:	mov	x1, x5
   219e4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   219e8:	add	x0, x0, #0x588
   219ec:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   219f0:	ldr	x5, [sp, #136]
   219f4:	b	2182c <__sanitizer_on_print@@Base+0x1fcc>
   219f8:	ldr	x6, [x5, #8]
   219fc:	lsl	x7, x3, #4
   21a00:	mov	x2, x7
   21a04:	mov	x0, x26
   21a08:	mov	x1, x6
   21a0c:	stp	x6, x7, [sp, #96]
   21a10:	stp	x5, x3, [sp, #112]
   21a14:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   21a18:	ldr	x0, [x25, #3816]
   21a1c:	str	x27, [x24, x19]
   21a20:	ldr	x5, [sp, #112]
   21a24:	ldr	w0, [x0]
   21a28:	ldp	x6, x7, [sp, #96]
   21a2c:	str	x26, [x5, #8]
   21a30:	sxtw	x0, w0
   21a34:	cmp	x0, #0x1
   21a38:	b.hi	21a70 <__sanitizer_on_print@@Base+0x2210>  // b.pmore
   21a3c:	mov	x1, x7
   21a40:	mov	x0, x6
   21a44:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   21a48:	adrp	x4, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   21a4c:	add	x4, x4, #0x730
   21a50:	ldxr	x0, [x4]
   21a54:	sub	x0, x0, #0x1
   21a58:	stlxr	w1, x0, [x4]
   21a5c:	cbnz	w1, 21a50 <__sanitizer_on_print@@Base+0x21f0>
   21a60:	add	x0, x24, x19
   21a64:	dmb	ish
   21a68:	ldr	x26, [x0, #8]
   21a6c:	b	21788 <__sanitizer_on_print@@Base+0x1f28>
   21a70:	ldr	x3, [sp, #120]
   21a74:	mov	x1, x6
   21a78:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21a7c:	add	x0, x0, #0x420
   21a80:	mov	x2, x3
   21a84:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   21a88:	ldp	x6, x7, [sp, #96]
   21a8c:	b	21a3c <__sanitizer_on_print@@Base+0x21dc>
   21a90:	mov	x3, x2
   21a94:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21a98:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21a9c:	add	x0, x0, #0x4a0
   21aa0:	add	x2, x2, #0x480
   21aa4:	mov	x4, #0x100000              	// #1048576
   21aa8:	mov	w1, #0x3d                  	// #61
   21aac:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21ab0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   21ab4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   21ab8:	mov	x4, x27
   21abc:	add	x2, x2, #0x5c0
   21ac0:	add	x0, x0, #0xad8
   21ac4:	mov	w1, #0x18a                 	// #394
   21ac8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21acc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   21ad0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   21ad4:	add	x2, x2, #0x648
   21ad8:	add	x0, x0, #0xad8
   21adc:	mov	w1, #0x18b                 	// #395
   21ae0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21ae4:	nop
   21ae8:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21aec:	stp	x19, x20, [sp, #-32]!
   21af0:	mov	x19, x0
   21af4:	ldr	x3, [x3, #4056]
   21af8:	ldrb	w0, [x3, #121]
   21afc:	str	x30, [sp, #16]
   21b00:	cbz	w0, 21b34 <__sanitizer_on_print@@Base+0x22d4>
   21b04:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21b08:	mov	x20, x1
   21b0c:	ldr	x0, [x0, #3816]
   21b10:	ldr	w0, [x0]
   21b14:	sxtw	x0, w0
   21b18:	cmp	x0, #0x1
   21b1c:	b.hi	21b40 <__sanitizer_on_print@@Base+0x22e0>  // b.pmore
   21b20:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21b24:	ldr	x0, [x0, #3608]
   21b28:	mrs	x1, tpidr_el0
   21b2c:	add	x0, x1, x0
   21b30:	stp	x20, x19, [x0, #16]
   21b34:	ldr	x30, [sp, #16]
   21b38:	ldp	x19, x20, [sp], #32
   21b3c:	ret
   21b40:	mov	x2, x1
   21b44:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21b48:	mov	x1, x19
   21b4c:	add	x0, x0, #0x610
   21b50:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   21b54:	b	21b20 <__sanitizer_on_print@@Base+0x22c0>
   21b58:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21b5c:	ldr	x0, [x0, #3608]
   21b60:	mrs	x1, tpidr_el0
   21b64:	add	x0, x1, x0
   21b68:	ret
   21b6c:	nop
   21b70:	ldr	x0, [x0]
   21b74:	cmn	x0, #0x1
   21b78:	cset	w0, eq  // eq = none
   21b7c:	ret
   21b80:	stp	x19, x20, [sp, #-32]!
   21b84:	mov	x19, x0
   21b88:	ldr	x0, [x0, #160]
   21b8c:	str	x30, [sp, #16]
   21b90:	cbnz	x0, 21bc4 <__sanitizer_on_print@@Base+0x2364>
   21b94:	dup	v0.2d, x1
   21b98:	str	xzr, [x1, #128]
   21b9c:	mov	x1, #0x1                   	// #1
   21ba0:	mov	x2, x1
   21ba4:	str	x1, [x19, #160]
   21ba8:	ldr	w1, [x19, #12]
   21bac:	stur	q0, [x19, #168]
   21bb0:	cmp	x2, x1
   21bb4:	b.hi	21be8 <__sanitizer_on_print@@Base+0x2388>  // b.pmore
   21bb8:	ldr	x30, [sp, #16]
   21bbc:	ldp	x19, x20, [sp], #32
   21bc0:	ret
   21bc4:	str	xzr, [x1, #128]
   21bc8:	add	x2, x0, #0x1
   21bcc:	ldr	x4, [x19, #176]
   21bd0:	str	x1, [x4, #128]
   21bd4:	str	x2, [x19, #160]
   21bd8:	str	x1, [x19, #176]
   21bdc:	ldr	w1, [x19, #12]
   21be0:	cmp	x2, x1
   21be4:	b.ls	21bb8 <__sanitizer_on_print@@Base+0x2358>  // b.plast
   21be8:	ldr	x20, [x19, #168]
   21bec:	add	x2, x19, #0xa0
   21bf0:	ldr	x1, [x20, #128]
   21bf4:	str	x1, [x2, #8]
   21bf8:	cbz	x1, 21c9c <__sanitizer_on_print@@Base+0x243c>
   21bfc:	ldr	w3, [x20, #112]
   21c00:	str	x0, [x19, #160]
   21c04:	cmp	x3, #0x4
   21c08:	b.ne	21cb0 <__sanitizer_on_print@@Base+0x2450>  // b.any
   21c0c:	strb	wzr, [x20, #48]
   21c10:	str	wzr, [x20, #112]
   21c14:	dmb	ish
   21c18:	str	wzr, [x20, #136]
   21c1c:	ldr	x1, [x20]
   21c20:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x27a0>
   21c24:	add	x0, x0, #0xed8
   21c28:	ldr	x1, [x1, #40]
   21c2c:	cmp	x1, x0
   21c30:	b.ne	21ca4 <__sanitizer_on_print@@Base+0x2444>  // b.any
   21c34:	ldr	w0, [x20, #24]
   21c38:	add	w0, w0, #0x1
   21c3c:	str	w0, [x20, #24]
   21c40:	ldr	w1, [x19, #16]
   21c44:	cmp	w1, #0x0
   21c48:	ccmp	w0, w1, #0x0, ne  // ne = any
   21c4c:	b.cs	21bb8 <__sanitizer_on_print@@Base+0x2358>  // b.hs, b.nlast
   21c50:	ldr	x0, [x19, #184]
   21c54:	cbnz	x0, 21c78 <__sanitizer_on_print@@Base+0x2418>
   21c58:	dup	v0.2d, x20
   21c5c:	str	xzr, [x20, #128]
   21c60:	mov	x0, #0x1                   	// #1
   21c64:	str	x0, [x19, #184]
   21c68:	ldr	x30, [sp, #16]
   21c6c:	str	q0, [x19, #192]
   21c70:	ldp	x19, x20, [sp], #32
   21c74:	ret
   21c78:	str	xzr, [x20, #128]
   21c7c:	add	x0, x0, #0x1
   21c80:	ldr	x30, [sp, #16]
   21c84:	ldr	x2, [x19, #200]
   21c88:	str	x20, [x2, #128]
   21c8c:	str	x0, [x19, #184]
   21c90:	str	x20, [x19, #200]
   21c94:	ldp	x19, x20, [sp], #32
   21c98:	ret
   21c9c:	str	xzr, [x2, #16]
   21ca0:	b	21bfc <__sanitizer_on_print@@Base+0x239c>
   21ca4:	mov	x0, x20
   21ca8:	blr	x1
   21cac:	b	21c34 <__sanitizer_on_print@@Base+0x23d4>
   21cb0:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21cb4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21cb8:	add	x2, x2, #0x630
   21cbc:	add	x0, x0, #0x660
   21cc0:	mov	x4, #0x4                   	// #4
   21cc4:	mov	w1, #0x144                 	// #324
   21cc8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21ccc:	nop
   21cd0:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21cd4:	add	x2, x2, #0x9d8
   21cd8:	str	x2, [x0]
   21cdc:	str	w1, [x0, #8]
   21ce0:	str	xzr, [x0, #16]
   21ce4:	str	wzr, [x0, #24]
   21ce8:	stp	xzr, xzr, [x0, #32]
   21cec:	strb	wzr, [x0, #48]
   21cf0:	str	wzr, [x0, #112]
   21cf4:	strb	wzr, [x0, #116]
   21cf8:	stp	xzr, xzr, [x0, #120]
   21cfc:	dmb	ish
   21d00:	str	wzr, [x0, #136]
   21d04:	ret
   21d08:	str	x30, [sp, #-16]!
   21d0c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   21d10:	add	x1, x1, #0x9d8
   21d14:	str	x1, [x0]
   21d18:	adrp	x3, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21d1c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   21d20:	add	x0, x3, #0x660
   21d24:	add	x2, x2, #0xe80
   21d28:	mov	x4, #0x0                   	// #0
   21d2c:	mov	x3, #0x0                   	// #0
   21d30:	mov	w1, #0x1c                  	// #28
   21d34:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21d38:	strb	wzr, [x0, #48]
   21d3c:	cbz	x1, 21d60 <__sanitizer_on_print@@Base+0x2500>
   21d40:	stp	x19, x30, [sp, #-16]!
   21d44:	mov	x19, x0
   21d48:	mov	x2, #0x40                  	// #64
   21d4c:	add	x0, x0, #0x30
   21d50:	bl	1b408 <__sanitizer_set_report_fd@@Base+0x3648>
   21d54:	strb	wzr, [x19, #111]
   21d58:	ldp	x19, x30, [sp], #16
   21d5c:	ret
   21d60:	ret
   21d64:	nop
   21d68:	ldr	w2, [x0, #112]
   21d6c:	sub	w2, w2, #0x2
   21d70:	cmp	w2, #0x1
   21d74:	b.hi	21da8 <__sanitizer_on_print@@Base+0x2548>  // b.pmore
   21d78:	ldr	x3, [x0]
   21d7c:	adrp	x2, 22000 <__sanitizer_on_print@@Base+0x27a0>
   21d80:	add	x1, x2, #0xeb0
   21d84:	mov	w4, #0x4                   	// #4
   21d88:	str	xzr, [x0, #40]
   21d8c:	ldr	x2, [x3]
   21d90:	str	w4, [x0, #112]
   21d94:	cmp	x2, x1
   21d98:	b.ne	21da0 <__sanitizer_on_print@@Base+0x2540>  // b.any
   21d9c:	ret
   21da0:	mov	x16, x2
   21da4:	br	x16
   21da8:	str	x30, [sp, #-16]!
   21dac:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21db0:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21db4:	add	x2, x2, #0x6c0
   21db8:	add	x0, x0, #0x660
   21dbc:	mov	x4, #0x0                   	// #0
   21dc0:	mov	x3, #0x0                   	// #0
   21dc4:	mov	w1, #0x28                  	// #40
   21dc8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21dcc:	nop
   21dd0:	dmb	ish
   21dd4:	mov	w1, #0x1                   	// #1
   21dd8:	str	w1, [x0, #136]
   21ddc:	ret
   21de0:	ldr	w0, [x0, #136]
   21de4:	dmb	ish
   21de8:	cmp	w0, #0x0
   21dec:	cset	w0, ne  // ne = any
   21df0:	ret
   21df4:	nop
   21df8:	ldrb	w3, [x0, #116]
   21dfc:	str	x30, [sp, #-16]!
   21e00:	cbnz	w3, 21e48 <__sanitizer_on_print@@Base+0x25e8>
   21e04:	ldr	w4, [x0, #112]
   21e08:	cmp	x4, #0x3
   21e0c:	b.ne	21e68 <__sanitizer_on_print@@Base+0x2608>  // b.any
   21e10:	ldr	x4, [x0]
   21e14:	adrp	x3, 22000 <__sanitizer_on_print@@Base+0x27a0>
   21e18:	add	x2, x3, #0xeb8
   21e1c:	mov	w5, #0x4                   	// #4
   21e20:	str	xzr, [x0, #40]
   21e24:	ldr	x3, [x4, #8]
   21e28:	str	w5, [x0, #112]
   21e2c:	cmp	x3, x2
   21e30:	b.ne	21e3c <__sanitizer_on_print@@Base+0x25dc>  // b.any
   21e34:	ldr	x30, [sp], #16
   21e38:	ret
   21e3c:	ldr	x30, [sp], #16
   21e40:	mov	x16, x3
   21e44:	br	x16
   21e48:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21e4c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21e50:	add	x2, x2, #0x710
   21e54:	add	x0, x0, #0x660
   21e58:	mov	x4, #0x1                   	// #1
   21e5c:	mov	x3, #0x0                   	// #0
   21e60:	mov	w1, #0x39                  	// #57
   21e64:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21e68:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21e6c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21e70:	add	x2, x2, #0x730
   21e74:	add	x0, x0, #0x660
   21e78:	mov	x3, #0x3                   	// #3
   21e7c:	mov	w1, #0x3a                  	// #58
   21e80:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   21e84:	nop
   21e88:	ldrb	w1, [x0, #116]
   21e8c:	cbz	w1, 21eb8 <__sanitizer_on_print@@Base+0x2658>
   21e90:	ldr	w1, [x0, #112]
   21e94:	cmp	w1, #0x1
   21e98:	b.eq	21eb8 <__sanitizer_on_print@@Base+0x2658>  // b.none
   21e9c:	ldr	x2, [x0]
   21ea0:	adrp	x1, 22000 <__sanitizer_on_print@@Base+0x27a0>
   21ea4:	add	x1, x1, #0xec0
   21ea8:	ldr	x2, [x2, #16]
   21eac:	cmp	x2, x1
   21eb0:	b.ne	21ed8 <__sanitizer_on_print@@Base+0x2678>  // b.any
   21eb4:	ret
   21eb8:	ldr	x2, [x0]
   21ebc:	mov	w1, #0x3                   	// #3
   21ec0:	str	w1, [x0, #112]
   21ec4:	adrp	x1, 22000 <__sanitizer_on_print@@Base+0x27a0>
   21ec8:	add	x1, x1, #0xec0
   21ecc:	ldr	x2, [x2, #16]
   21ed0:	cmp	x2, x1
   21ed4:	b.eq	21eb4 <__sanitizer_on_print@@Base+0x2654>  // b.none
   21ed8:	mov	x16, x2
   21edc:	br	x16
   21ee0:	ldr	x6, [x0]
   21ee4:	str	w2, [x0, #120]
   21ee8:	mov	w7, #0x2                   	// #2
   21eec:	str	x1, [x0, #32]
   21ef0:	str	w7, [x0, #112]
   21ef4:	adrp	x5, 22000 <__sanitizer_on_print@@Base+0x27a0>
   21ef8:	ldr	x2, [x6, #24]
   21efc:	add	x5, x5, #0xec8
   21f00:	cmp	x2, x5
   21f04:	b.ne	21f0c <__sanitizer_on_print@@Base+0x26ac>  // b.any
   21f08:	ret
   21f0c:	mov	x1, x3
   21f10:	mov	x16, x2
   21f14:	br	x16
   21f18:	ldr	w6, [x0, #8]
   21f1c:	mov	w7, #0x1                   	// #1
   21f20:	str	x2, [x0, #16]
   21f24:	str	x1, [x0, #40]
   21f28:	str	w7, [x0, #112]
   21f2c:	strb	w3, [x0, #116]
   21f30:	cbz	w6, 21f38 <__sanitizer_on_print@@Base+0x26d8>
   21f34:	str	w4, [x0, #124]
   21f38:	ldr	x1, [x0]
   21f3c:	adrp	x2, 22000 <__sanitizer_on_print@@Base+0x27a0>
   21f40:	add	x2, x2, #0xed0
   21f44:	ldr	x3, [x1, #32]
   21f48:	cmp	x3, x2
   21f4c:	b.ne	21f54 <__sanitizer_on_print@@Base+0x26f4>  // b.any
   21f50:	ret
   21f54:	mov	x1, x5
   21f58:	mov	x16, x3
   21f5c:	br	x16
   21f60:	strb	wzr, [x0, #48]
   21f64:	str	wzr, [x0, #112]
   21f68:	dmb	ish
   21f6c:	str	wzr, [x0, #136]
   21f70:	ldr	x2, [x0]
   21f74:	adrp	x1, 22000 <__sanitizer_on_print@@Base+0x27a0>
   21f78:	add	x1, x1, #0xed8
   21f7c:	ldr	x2, [x2, #40]
   21f80:	cmp	x2, x1
   21f84:	b.ne	21f8c <__sanitizer_on_print@@Base+0x272c>  // b.any
   21f88:	ret
   21f8c:	mov	x16, x2
   21f90:	br	x16
   21f94:	nop
   21f98:	stp	x19, x30, [sp, #-16]!
   21f9c:	mov	x19, x0
   21fa0:	add	x0, x0, #0x18
   21fa4:	str	x1, [x19]
   21fa8:	stp	w2, w3, [x19, #8]
   21fac:	str	w4, [x19, #16]
   21fb0:	bl	1c5c0 <__sanitizer_set_report_fd@@Base+0x4800>
   21fb4:	str	wzr, [x19, #112]
   21fb8:	movi	v0.4s, #0x0
   21fbc:	ldr	w0, [x19, #8]
   21fc0:	mov	w2, #0x0                   	// #0
   21fc4:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   21fc8:	add	x1, x1, #0x758
   21fcc:	lsl	x0, x0, #3
   21fd0:	stur	q0, [x19, #120]
   21fd4:	stur	q0, [x19, #136]
   21fd8:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   21fdc:	movi	v0.4s, #0x0
   21fe0:	stp	x0, xzr, [x19, #152]
   21fe4:	str	xzr, [x19, #184]
   21fe8:	stur	q0, [x19, #168]
   21fec:	str	q0, [x19, #192]
   21ff0:	ldp	x19, x30, [sp], #16
   21ff4:	ret
   21ff8:	stp	x19, x20, [sp, #-48]!
   21ffc:	mov	x19, x0
   22000:	mov	x20, x3
   22004:	stp	x23, x30, [sp, #32]
   22008:	add	x23, x0, #0x18
   2200c:	mov	x0, x23
   22010:	stp	x21, x22, [sp, #16]
   22014:	mov	x22, x1
   22018:	mov	x21, x2
   2201c:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   22020:	cbz	x22, 2202c <__sanitizer_on_print@@Base+0x27cc>
   22024:	ldr	w0, [x19, #112]
   22028:	str	x0, [x22]
   2202c:	cbz	x21, 22038 <__sanitizer_on_print@@Base+0x27d8>
   22030:	ldr	x0, [x19, #144]
   22034:	str	x0, [x21]
   22038:	cbz	x20, 22044 <__sanitizer_on_print@@Base+0x27e4>
   2203c:	ldr	x0, [x19, #128]
   22040:	str	x0, [x20]
   22044:	mov	x0, x23
   22048:	ldp	x21, x22, [sp, #16]
   2204c:	ldp	x23, x30, [sp, #32]
   22050:	ldp	x19, x20, [sp], #48
   22054:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   22058:	stp	x19, x20, [sp, #-32]!
   2205c:	mov	x19, x0
   22060:	add	x20, x0, #0x18
   22064:	mov	x0, x20
   22068:	str	x30, [sp, #16]
   2206c:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   22070:	ldr	x19, [x19, #136]
   22074:	mov	x0, x20
   22078:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   2207c:	mov	x0, x19
   22080:	ldr	x30, [sp, #16]
   22084:	ldp	x19, x20, [sp], #32
   22088:	ret
   2208c:	nop
   22090:	stp	x19, x20, [sp, #-64]!
   22094:	mov	x19, x0
   22098:	stp	x25, x30, [sp, #48]
   2209c:	add	x25, x0, #0x18
   220a0:	mov	x0, x25
   220a4:	stp	x21, x22, [sp, #16]
   220a8:	mov	x21, x1
   220ac:	mov	w22, w3
   220b0:	stp	x23, x24, [sp, #32]
   220b4:	mov	x23, x4
   220b8:	and	w24, w2, #0xff
   220bc:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   220c0:	ldr	x1, [x19, #184]
   220c4:	cbz	x1, 22190 <__sanitizer_on_print@@Base+0x2930>
   220c8:	ldr	x0, [x19, #192]
   220cc:	ldr	x2, [x0, #128]
   220d0:	str	x2, [x19, #192]
   220d4:	cbz	x2, 221e4 <__sanitizer_on_print@@Base+0x2984>
   220d8:	ldr	w20, [x0, #8]
   220dc:	sub	x1, x1, #0x1
   220e0:	str	x1, [x19, #184]
   220e4:	mov	w3, w20
   220e8:	mov	x1, #0xffffffff            	// #4294967295
   220ec:	cmp	x3, x1
   220f0:	b.eq	22214 <__sanitizer_on_print@@Base+0x29b4>  // b.none
   220f4:	ldr	w4, [x19, #8]
   220f8:	cmp	x3, x4
   220fc:	b.cs	22230 <__sanitizer_on_print@@Base+0x29d0>  // b.hs, b.nlast
   22100:	ldr	w3, [x0, #112]
   22104:	cbnz	x3, 22248 <__sanitizer_on_print@@Base+0x29e8>
   22108:	ldp	x2, x1, [x19, #128]
   2210c:	add	x3, x2, #0x1
   22110:	str	x3, [x19, #128]
   22114:	cmp	x3, x1
   22118:	b.ls	2212c <__sanitizer_on_print@@Base+0x28cc>  // b.plast
   2211c:	add	x4, x1, #0x1
   22120:	str	x4, [x19, #136]
   22124:	cmp	x2, x1
   22128:	b.ne	22264 <__sanitizer_on_print@@Base+0x2a04>  // b.any
   2212c:	ldr	x1, [x19, #120]
   22130:	mov	w3, #0x1                   	// #1
   22134:	ldr	w2, [x0, #8]
   22138:	add	x4, x1, #0x1
   2213c:	str	x4, [x19, #120]
   22140:	str	x1, [x0, #16]
   22144:	str	x21, [x0, #40]
   22148:	str	w3, [x0, #112]
   2214c:	strb	w24, [x0, #116]
   22150:	cbz	w2, 22158 <__sanitizer_on_print@@Base+0x28f8>
   22154:	str	w22, [x0, #124]
   22158:	ldr	x2, [x0]
   2215c:	adrp	x1, 22000 <__sanitizer_on_print@@Base+0x27a0>
   22160:	add	x1, x1, #0xed0
   22164:	ldr	x2, [x2, #32]
   22168:	cmp	x2, x1
   2216c:	b.ne	221ec <__sanitizer_on_print@@Base+0x298c>  // b.any
   22170:	mov	x0, x25
   22174:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   22178:	mov	w0, w20
   2217c:	ldp	x21, x22, [sp, #16]
   22180:	ldp	x23, x24, [sp, #32]
   22184:	ldp	x25, x30, [sp, #48]
   22188:	ldp	x19, x20, [sp], #64
   2218c:	ret
   22190:	ldr	w2, [x19, #8]
   22194:	ldr	w20, [x19, #112]
   22198:	cmp	w20, w2
   2219c:	b.cs	2227c <__sanitizer_on_print@@Base+0x2a1c>  // b.hs, b.nlast
   221a0:	ldr	x1, [x19]
   221a4:	add	w0, w20, #0x1
   221a8:	str	w0, [x19, #112]
   221ac:	mov	w0, w20
   221b0:	blr	x1
   221b4:	ldr	x1, [x19, #152]
   221b8:	mov	w3, w20
   221bc:	str	x0, [x1, x3, lsl #3]
   221c0:	cbnz	x0, 220e8 <__sanitizer_on_print@@Base+0x2888>
   221c4:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   221c8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   221cc:	add	x2, x2, #0x798
   221d0:	add	x0, x0, #0x660
   221d4:	mov	x4, #0x0                   	// #0
   221d8:	mov	x3, #0x0                   	// #0
   221dc:	mov	w1, #0x9d                  	// #157
   221e0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   221e4:	str	xzr, [x19, #200]
   221e8:	b	220d8 <__sanitizer_on_print@@Base+0x2878>
   221ec:	mov	x1, x23
   221f0:	blr	x2
   221f4:	mov	x0, x25
   221f8:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   221fc:	mov	w0, w20
   22200:	ldp	x21, x22, [sp, #16]
   22204:	ldp	x23, x24, [sp, #32]
   22208:	ldp	x25, x30, [sp, #48]
   2220c:	ldp	x19, x20, [sp], #64
   22210:	ret
   22214:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22218:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2221c:	add	x2, x2, #0x7b0
   22220:	add	x0, x0, #0x660
   22224:	mov	x4, x3
   22228:	mov	w1, #0x9e                  	// #158
   2222c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22230:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22234:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22238:	add	x2, x2, #0x7d0
   2223c:	add	x0, x0, #0x660
   22240:	mov	w1, #0x9f                  	// #159
   22244:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22248:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2224c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22250:	add	x2, x2, #0x7f0
   22254:	add	x0, x0, #0x660
   22258:	mov	x4, #0x0                   	// #0
   2225c:	mov	w1, #0xa0                  	// #160
   22260:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22264:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22268:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2226c:	add	x2, x2, #0x820
   22270:	add	x0, x0, #0x660
   22274:	mov	w1, #0xa4                  	// #164
   22278:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2227c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   22280:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22284:	add	x0, x0, #0x768
   22288:	ldr	x1, [x1, #4024]
   2228c:	ldr	x1, [x1]
   22290:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   22294:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   22298:	stp	x19, x20, [sp, #-48]!
   2229c:	mov	x20, x0
   222a0:	add	x0, x0, #0x18
   222a4:	stp	x21, x22, [sp, #16]
   222a8:	mov	x22, x1
   222ac:	mov	x21, x2
   222b0:	str	x30, [sp, #32]
   222b4:	bl	1c6d8 <__sanitizer_set_report_fd@@Base+0x4918>
   222b8:	ldr	w3, [x20, #112]
   222bc:	cbz	w3, 22304 <__sanitizer_on_print@@Base+0x2aa4>
   222c0:	ldr	x4, [x20, #152]
   222c4:	mov	w19, #0x0                   	// #0
   222c8:	ldr	x0, [x4, w19, uxtw #3]
   222cc:	mov	x1, x21
   222d0:	cbz	x0, 222f8 <__sanitizer_on_print@@Base+0x2a98>
   222d4:	blr	x22
   222d8:	add	w19, w19, #0x1
   222dc:	ldr	w3, [x20, #112]
   222e0:	cmp	w3, w19
   222e4:	b.ls	22304 <__sanitizer_on_print@@Base+0x2aa4>  // b.plast
   222e8:	ldr	x4, [x20, #152]
   222ec:	mov	x1, x21
   222f0:	ldr	x0, [x4, w19, uxtw #3]
   222f4:	cbnz	x0, 222d4 <__sanitizer_on_print@@Base+0x2a74>
   222f8:	add	w19, w19, #0x1
   222fc:	cmp	w19, w3
   22300:	b.cc	222c8 <__sanitizer_on_print@@Base+0x2a68>  // b.lo, b.ul, b.last
   22304:	ldp	x21, x22, [sp, #16]
   22308:	ldr	x30, [sp, #32]
   2230c:	ldp	x19, x20, [sp], #48
   22310:	ret
   22314:	nop
   22318:	stp	x19, x20, [sp, #-64]!
   2231c:	mov	w19, #0x0                   	// #0
   22320:	stp	x21, x22, [sp, #16]
   22324:	mov	x21, x0
   22328:	mov	x22, x2
   2232c:	stp	x23, x24, [sp, #32]
   22330:	add	x24, x0, #0x18
   22334:	mov	x23, x1
   22338:	mov	x0, x24
   2233c:	str	x30, [sp, #48]
   22340:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   22344:	ldr	w3, [x21, #112]
   22348:	cbz	w3, 22380 <__sanitizer_on_print@@Base+0x2b20>
   2234c:	nop
   22350:	ldr	x0, [x21, #152]
   22354:	mov	x1, x22
   22358:	ldr	x20, [x0, w19, uxtw #3]
   2235c:	mov	x0, x20
   22360:	cbz	x20, 22374 <__sanitizer_on_print@@Base+0x2b14>
   22364:	blr	x23
   22368:	tst	w0, #0xff
   2236c:	b.ne	223a4 <__sanitizer_on_print@@Base+0x2b44>  // b.any
   22370:	ldr	w3, [x21, #112]
   22374:	add	w19, w19, #0x1
   22378:	cmp	w19, w3
   2237c:	b.cc	22350 <__sanitizer_on_print@@Base+0x2af0>  // b.lo, b.ul, b.last
   22380:	mov	x0, x24
   22384:	mov	w19, #0xffffffff            	// #-1
   22388:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   2238c:	mov	w0, w19
   22390:	ldp	x21, x22, [sp, #16]
   22394:	ldp	x23, x24, [sp, #32]
   22398:	ldr	x30, [sp, #48]
   2239c:	ldp	x19, x20, [sp], #64
   223a0:	ret
   223a4:	ldr	w19, [x20, #8]
   223a8:	mov	x0, x24
   223ac:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   223b0:	mov	w0, w19
   223b4:	ldp	x21, x22, [sp, #16]
   223b8:	ldp	x23, x24, [sp, #32]
   223bc:	ldr	x30, [sp, #48]
   223c0:	ldp	x19, x20, [sp], #64
   223c4:	ret
   223c8:	stp	x19, x20, [sp, #-48]!
   223cc:	mov	w19, #0x0                   	// #0
   223d0:	stp	x21, x22, [sp, #16]
   223d4:	mov	x21, x0
   223d8:	mov	x22, x2
   223dc:	add	x0, x0, #0x18
   223e0:	stp	x23, x30, [sp, #32]
   223e4:	mov	x23, x1
   223e8:	bl	1c6d8 <__sanitizer_set_report_fd@@Base+0x4918>
   223ec:	ldr	w3, [x21, #112]
   223f0:	cbz	w3, 22428 <__sanitizer_on_print@@Base+0x2bc8>
   223f4:	nop
   223f8:	ldr	x0, [x21, #152]
   223fc:	mov	x1, x22
   22400:	ldr	x20, [x0, w19, uxtw #3]
   22404:	add	w19, w19, #0x1
   22408:	mov	x0, x20
   2240c:	cbz	x20, 22420 <__sanitizer_on_print@@Base+0x2bc0>
   22410:	blr	x23
   22414:	tst	w0, #0xff
   22418:	b.ne	2242c <__sanitizer_on_print@@Base+0x2bcc>  // b.any
   2241c:	ldr	w3, [x21, #112]
   22420:	cmp	w19, w3
   22424:	b.cc	223f8 <__sanitizer_on_print@@Base+0x2b98>  // b.lo, b.ul, b.last
   22428:	mov	x20, #0x0                   	// #0
   2242c:	mov	x0, x20
   22430:	ldp	x21, x22, [sp, #16]
   22434:	ldp	x23, x30, [sp, #32]
   22438:	ldp	x19, x20, [sp], #48
   2243c:	ret
   22440:	stp	x19, x20, [sp, #-32]!
   22444:	mov	x19, x0
   22448:	mov	x20, x1
   2244c:	add	x0, x0, #0x18
   22450:	str	x30, [sp, #16]
   22454:	bl	1c6d8 <__sanitizer_set_report_fd@@Base+0x4918>
   22458:	ldr	w1, [x19, #112]
   2245c:	cbz	w1, 224a4 <__sanitizer_on_print@@Base+0x2c44>
   22460:	mov	x2, #0x0                   	// #0
   22464:	ldr	x4, [x19, #152]
   22468:	b	22474 <__sanitizer_on_print@@Base+0x2c14>
   2246c:	cmp	w1, w2
   22470:	b.ls	224a4 <__sanitizer_on_print@@Base+0x2c44>  // b.plast
   22474:	ldr	x0, [x4, x2, lsl #3]
   22478:	add	x2, x2, #0x1
   2247c:	cbz	x0, 2246c <__sanitizer_on_print@@Base+0x2c0c>
   22480:	ldr	x3, [x0, #32]
   22484:	cmp	x20, x3
   22488:	b.ne	2246c <__sanitizer_on_print@@Base+0x2c0c>  // b.any
   2248c:	ldr	w3, [x0, #112]
   22490:	tst	w3, #0xfffffffb
   22494:	b.eq	2246c <__sanitizer_on_print@@Base+0x2c0c>  // b.none
   22498:	ldr	x30, [sp, #16]
   2249c:	ldp	x19, x20, [sp], #32
   224a0:	ret
   224a4:	mov	x0, #0x0                   	// #0
   224a8:	ldr	x30, [sp, #16]
   224ac:	ldp	x19, x20, [sp], #32
   224b0:	ret
   224b4:	nop
   224b8:	stp	x19, x20, [sp, #-48]!
   224bc:	mov	x19, x0
   224c0:	mov	w20, w1
   224c4:	stp	x21, x22, [sp, #16]
   224c8:	add	x22, x0, #0x18
   224cc:	mov	x21, x2
   224d0:	mov	x0, x22
   224d4:	str	x30, [sp, #32]
   224d8:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   224dc:	ldr	w4, [x19, #112]
   224e0:	mov	w3, w20
   224e4:	cmp	x4, w20, uxtw
   224e8:	b.ls	22534 <__sanitizer_on_print@@Base+0x2cd4>  // b.plast
   224ec:	ldr	x0, [x19, #152]
   224f0:	ldr	x19, [x0, x3, lsl #3]
   224f4:	cbz	x19, 2254c <__sanitizer_on_print@@Base+0x2cec>
   224f8:	ldr	w4, [x19, #112]
   224fc:	cmp	x4, #0x2
   22500:	b.ne	2256c <__sanitizer_on_print@@Base+0x2d0c>  // b.any
   22504:	strb	wzr, [x19, #48]
   22508:	cbz	x21, 22520 <__sanitizer_on_print@@Base+0x2cc0>
   2250c:	mov	x1, x21
   22510:	add	x0, x19, #0x30
   22514:	mov	x2, #0x40                  	// #64
   22518:	bl	1b408 <__sanitizer_set_report_fd@@Base+0x3648>
   2251c:	strb	wzr, [x19, #111]
   22520:	mov	x0, x22
   22524:	ldp	x21, x22, [sp, #16]
   22528:	ldr	x30, [sp, #32]
   2252c:	ldp	x19, x20, [sp], #48
   22530:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   22534:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22538:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2253c:	add	x2, x2, #0x850
   22540:	add	x0, x0, #0x660
   22544:	mov	w1, #0xd8                  	// #216
   22548:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2254c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22550:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22554:	add	x2, x2, #0x798
   22558:	add	x0, x0, #0x660
   2255c:	mov	x4, #0x0                   	// #0
   22560:	mov	x3, #0x0                   	// #0
   22564:	mov	w1, #0xda                  	// #218
   22568:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2256c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22570:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22574:	add	x2, x2, #0x870
   22578:	add	x0, x0, #0x660
   2257c:	mov	x3, #0x2                   	// #2
   22580:	mov	w1, #0xdb                  	// #219
   22584:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22588:	stp	x19, x20, [sp, #-48]!
   2258c:	mov	x19, x0
   22590:	mov	x20, x1
   22594:	stp	x21, x22, [sp, #16]
   22598:	add	x22, x0, #0x18
   2259c:	mov	x21, x2
   225a0:	mov	x0, x22
   225a4:	str	x30, [sp, #32]
   225a8:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   225ac:	ldr	w4, [x19, #112]
   225b0:	cbz	w4, 22604 <__sanitizer_on_print@@Base+0x2da4>
   225b4:	mov	x0, #0x0                   	// #0
   225b8:	ldr	x5, [x19, #152]
   225bc:	b	225c8 <__sanitizer_on_print@@Base+0x2d68>
   225c0:	cmp	w4, w0
   225c4:	b.ls	22604 <__sanitizer_on_print@@Base+0x2da4>  // b.plast
   225c8:	ldr	x19, [x5, x0, lsl #3]
   225cc:	add	x0, x0, #0x1
   225d0:	cbz	x19, 225c0 <__sanitizer_on_print@@Base+0x2d60>
   225d4:	ldr	x3, [x19, #40]
   225d8:	cmp	x3, x20
   225dc:	b.ne	225c0 <__sanitizer_on_print@@Base+0x2d60>  // b.any
   225e0:	ldr	w1, [x19, #112]
   225e4:	cbz	w1, 225c0 <__sanitizer_on_print@@Base+0x2d60>
   225e8:	strb	wzr, [x19, #48]
   225ec:	cbz	x21, 22604 <__sanitizer_on_print@@Base+0x2da4>
   225f0:	mov	x1, x21
   225f4:	add	x0, x19, #0x30
   225f8:	mov	x2, #0x40                  	// #64
   225fc:	bl	1b408 <__sanitizer_set_report_fd@@Base+0x3648>
   22600:	strb	wzr, [x19, #111]
   22604:	mov	x0, x22
   22608:	ldp	x21, x22, [sp, #16]
   2260c:	ldr	x30, [sp, #32]
   22610:	ldp	x19, x20, [sp], #48
   22614:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   22618:	stp	x19, x20, [sp, #-48]!
   2261c:	mov	x19, x0
   22620:	mov	w20, w1
   22624:	stp	x21, x22, [sp, #16]
   22628:	add	x21, x0, #0x18
   2262c:	mov	x22, x2
   22630:	mov	x0, x21
   22634:	str	x30, [sp, #32]
   22638:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   2263c:	ldr	w4, [x19, #112]
   22640:	mov	w3, w20
   22644:	cmp	x4, w20, uxtw
   22648:	b.ls	2271c <__sanitizer_on_print@@Base+0x2ebc>  // b.plast
   2264c:	ldr	x0, [x19, #152]
   22650:	ldr	x20, [x0, x3, lsl #3]
   22654:	cbz	x20, 22734 <__sanitizer_on_print@@Base+0x2ed4>
   22658:	ldr	w1, [x20, #112]
   2265c:	cbz	w1, 2269c <__sanitizer_on_print@@Base+0x2e3c>
   22660:	ldr	x2, [x20]
   22664:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x27a0>
   22668:	add	x0, x0, #0xee0
   2266c:	ldr	x2, [x2, #48]
   22670:	cmp	x2, x0
   22674:	b.ne	226c8 <__sanitizer_on_print@@Base+0x2e68>  // b.any
   22678:	cmp	w1, #0x3
   2267c:	b.eq	226e0 <__sanitizer_on_print@@Base+0x2e80>  // b.none
   22680:	mov	w0, #0x1                   	// #1
   22684:	strb	w0, [x20, #116]
   22688:	mov	x0, x21
   2268c:	ldp	x21, x22, [sp, #16]
   22690:	ldr	x30, [sp, #32]
   22694:	ldp	x19, x20, [sp], #48
   22698:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   2269c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   226a0:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   226a4:	add	x0, x0, #0x8b8
   226a8:	ldr	x1, [x1, #4024]
   226ac:	ldr	x1, [x1]
   226b0:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   226b4:	mov	x0, x21
   226b8:	ldp	x21, x22, [sp, #16]
   226bc:	ldr	x30, [sp, #32]
   226c0:	ldp	x19, x20, [sp], #48
   226c4:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   226c8:	mov	x1, x22
   226cc:	mov	x0, x20
   226d0:	blr	x2
   226d4:	ldr	w1, [x20, #112]
   226d8:	cmp	w1, #0x3
   226dc:	b.ne	22680 <__sanitizer_on_print@@Base+0x2e20>  // b.any
   226e0:	ldr	x1, [x20]
   226e4:	mov	w2, #0x4                   	// #4
   226e8:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x27a0>
   226ec:	add	x0, x0, #0xeb0
   226f0:	ldr	x1, [x1]
   226f4:	str	xzr, [x20, #40]
   226f8:	str	w2, [x20, #112]
   226fc:	cmp	x1, x0
   22700:	b.ne	22754 <__sanitizer_on_print@@Base+0x2ef4>  // b.any
   22704:	ldr	w0, [x20, #8]
   22708:	cbz	w0, 22688 <__sanitizer_on_print@@Base+0x2e28>
   2270c:	mov	x1, x20
   22710:	mov	x0, x19
   22714:	bl	21b80 <__sanitizer_on_print@@Base+0x2320>
   22718:	b	22688 <__sanitizer_on_print@@Base+0x2e28>
   2271c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22720:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22724:	add	x2, x2, #0x850
   22728:	add	x0, x0, #0x660
   2272c:	mov	w1, #0xee                  	// #238
   22730:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22734:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22738:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2273c:	add	x2, x2, #0x798
   22740:	add	x0, x0, #0x660
   22744:	mov	x4, #0x0                   	// #0
   22748:	mov	x3, #0x0                   	// #0
   2274c:	mov	w1, #0xf0                  	// #240
   22750:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22754:	mov	x0, x20
   22758:	blr	x1
   2275c:	b	22704 <__sanitizer_on_print@@Base+0x2ea4>
   22760:	stp	x19, x20, [sp, #-64]!
   22764:	mov	x20, x0
   22768:	stp	x21, x22, [sp, #16]
   2276c:	add	x22, x0, #0x18
   22770:	ubfiz	x21, x1, #3, #32
   22774:	mov	x0, x22
   22778:	stp	x23, x24, [sp, #32]
   2277c:	mov	w23, w1
   22780:	mov	x24, x2
   22784:	str	x30, [sp, #48]
   22788:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   2278c:	ldr	w4, [x20, #112]
   22790:	cmp	x23, x4
   22794:	b.cs	227d8 <__sanitizer_on_print@@Base+0x2f78>  // b.hs, b.nlast
   22798:	ldr	x0, [x20, #152]
   2279c:	ldr	x19, [x0, x21]
   227a0:	cbz	x19, 22858 <__sanitizer_on_print@@Base+0x2ff8>
   227a4:	ldr	w0, [x19, #112]
   227a8:	cbz	w0, 228c4 <__sanitizer_on_print@@Base+0x3064>
   227ac:	ldr	w0, [x19, #136]
   227b0:	dmb	ish
   227b4:	cbnz	w0, 227f4 <__sanitizer_on_print@@Base+0x2f94>
   227b8:	mov	x0, x22
   227bc:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   227c0:	bl	1c2d0 <__sanitizer_set_report_fd@@Base+0x4510>
   227c4:	mov	x0, x22
   227c8:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   227cc:	ldr	w4, [x20, #112]
   227d0:	cmp	x23, x4
   227d4:	b.cc	22798 <__sanitizer_on_print@@Base+0x2f38>  // b.lo, b.ul, b.last
   227d8:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   227dc:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   227e0:	mov	x3, x23
   227e4:	add	x2, x2, #0x850
   227e8:	add	x0, x0, #0x660
   227ec:	mov	w1, #0x103                 	// #259
   227f0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   227f4:	ldrb	w0, [x19, #116]
   227f8:	cbnz	w0, 22888 <__sanitizer_on_print@@Base+0x3028>
   227fc:	ldr	w4, [x19, #112]
   22800:	cmp	x4, #0x3
   22804:	b.ne	228a8 <__sanitizer_on_print@@Base+0x3048>  // b.any
   22808:	ldr	x1, [x19]
   2280c:	mov	w2, #0x4                   	// #4
   22810:	str	w2, [x19, #112]
   22814:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x27a0>
   22818:	str	xzr, [x19, #40]
   2281c:	add	x0, x0, #0xeb8
   22820:	ldr	x2, [x1, #8]
   22824:	cmp	x2, x0
   22828:	b.ne	22878 <__sanitizer_on_print@@Base+0x3018>  // b.any
   2282c:	ldr	w0, [x19, #8]
   22830:	cbz	w0, 22840 <__sanitizer_on_print@@Base+0x2fe0>
   22834:	mov	x1, x19
   22838:	mov	x0, x20
   2283c:	bl	21b80 <__sanitizer_on_print@@Base+0x2320>
   22840:	mov	x0, x22
   22844:	ldp	x21, x22, [sp, #16]
   22848:	ldp	x23, x24, [sp, #32]
   2284c:	ldr	x30, [sp, #48]
   22850:	ldp	x19, x20, [sp], #64
   22854:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   22858:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2285c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22860:	add	x2, x2, #0x798
   22864:	add	x0, x0, #0x660
   22868:	mov	x4, #0x0                   	// #0
   2286c:	mov	x3, #0x0                   	// #0
   22870:	mov	w1, #0x105                 	// #261
   22874:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22878:	mov	x1, x24
   2287c:	mov	x0, x19
   22880:	blr	x2
   22884:	b	2282c <__sanitizer_on_print@@Base+0x2fcc>
   22888:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2288c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22890:	add	x2, x2, #0x710
   22894:	add	x0, x0, #0x660
   22898:	mov	x4, #0x1                   	// #1
   2289c:	mov	x3, #0x0                   	// #0
   228a0:	mov	w1, #0x39                  	// #57
   228a4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   228a8:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   228ac:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   228b0:	add	x2, x2, #0x730
   228b4:	add	x0, x0, #0x660
   228b8:	mov	x3, #0x3                   	// #3
   228bc:	mov	w1, #0x3a                  	// #58
   228c0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   228c4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   228c8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   228cc:	add	x0, x0, #0x8e0
   228d0:	ldr	x1, [x1, #4024]
   228d4:	ldr	x1, [x1]
   228d8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   228dc:	b	22840 <__sanitizer_on_print@@Base+0x2fe0>
   228e0:	stp	x19, x20, [sp, #-48]!
   228e4:	mov	x19, x0
   228e8:	mov	w20, w1
   228ec:	stp	x21, x22, [sp, #16]
   228f0:	add	x22, x0, #0x18
   228f4:	mov	x0, x22
   228f8:	str	x30, [sp, #32]
   228fc:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   22900:	ldr	x0, [x19, #128]
   22904:	cbz	x0, 22a24 <__sanitizer_on_print@@Base+0x31c4>
   22908:	ldr	w4, [x19, #112]
   2290c:	sub	x0, x0, #0x1
   22910:	str	x0, [x19, #128]
   22914:	mov	w3, w20
   22918:	cmp	x4, w20, uxtw
   2291c:	b.ls	22a44 <__sanitizer_on_print@@Base+0x31e4>  // b.plast
   22920:	ldr	x0, [x19, #152]
   22924:	ldr	x20, [x0, x3, lsl #3]
   22928:	cbz	x20, 22a5c <__sanitizer_on_print@@Base+0x31fc>
   2292c:	ldr	w0, [x20, #112]
   22930:	cmp	w0, #0x2
   22934:	b.eq	22990 <__sanitizer_on_print@@Base+0x3130>  // b.none
   22938:	cmp	w0, #0x1
   2293c:	mov	w21, w0
   22940:	b.ne	22a9c <__sanitizer_on_print@@Base+0x323c>  // b.any
   22944:	ldr	x1, [x20]
   22948:	mov	w0, #0x3                   	// #3
   2294c:	adrp	x2, 22000 <__sanitizer_on_print@@Base+0x27a0>
   22950:	add	x2, x2, #0xec0
   22954:	ldr	x1, [x1, #16]
   22958:	str	w0, [x20, #112]
   2295c:	cmp	x1, x2
   22960:	b.eq	229c0 <__sanitizer_on_print@@Base+0x3160>  // b.none
   22964:	mov	x0, x20
   22968:	blr	x1
   2296c:	cbnz	w21, 22b0c <__sanitizer_on_print@@Base+0x32ac>
   22970:	dmb	ish
   22974:	mov	w0, #0x1                   	// #1
   22978:	str	w0, [x20, #136]
   2297c:	mov	x0, x22
   22980:	ldp	x21, x22, [sp, #16]
   22984:	ldr	x30, [sp, #32]
   22988:	ldp	x19, x20, [sp], #48
   2298c:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   22990:	ldr	x1, [x19, #144]
   22994:	cbz	x1, 22ac8 <__sanitizer_on_print@@Base+0x3268>
   22998:	ldrb	w21, [x20, #116]
   2299c:	sub	x1, x1, #0x1
   229a0:	str	x1, [x19, #144]
   229a4:	cbz	w21, 22ae8 <__sanitizer_on_print@@Base+0x3288>
   229a8:	ldr	x1, [x20]
   229ac:	adrp	x2, 22000 <__sanitizer_on_print@@Base+0x27a0>
   229b0:	add	x2, x2, #0xec0
   229b4:	ldr	x1, [x1, #16]
   229b8:	cmp	x1, x2
   229bc:	b.ne	22964 <__sanitizer_on_print@@Base+0x3104>  // b.any
   229c0:	sub	w0, w0, #0x2
   229c4:	cmp	w0, #0x1
   229c8:	b.hi	22a7c <__sanitizer_on_print@@Base+0x321c>  // b.pmore
   229cc:	ldr	x1, [x20]
   229d0:	mov	w2, #0x4                   	// #4
   229d4:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x27a0>
   229d8:	add	x0, x0, #0xeb0
   229dc:	ldr	x1, [x1]
   229e0:	str	xzr, [x20, #40]
   229e4:	str	w2, [x20, #112]
   229e8:	cmp	x1, x0
   229ec:	b.ne	22abc <__sanitizer_on_print@@Base+0x325c>  // b.any
   229f0:	ldr	w0, [x20, #8]
   229f4:	cbz	w0, 22970 <__sanitizer_on_print@@Base+0x3110>
   229f8:	mov	x0, x19
   229fc:	mov	x1, x20
   22a00:	bl	21b80 <__sanitizer_on_print@@Base+0x2320>
   22a04:	dmb	ish
   22a08:	mov	w0, #0x1                   	// #1
   22a0c:	str	w0, [x20, #136]
   22a10:	mov	x0, x22
   22a14:	ldp	x21, x22, [sp, #16]
   22a18:	ldr	x30, [sp, #32]
   22a1c:	ldp	x19, x20, [sp], #48
   22a20:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   22a24:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22a28:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22a2c:	add	x2, x2, #0x908
   22a30:	add	x0, x0, #0x660
   22a34:	mov	x4, #0x0                   	// #0
   22a38:	mov	x3, #0x0                   	// #0
   22a3c:	mov	w1, #0x11b                 	// #283
   22a40:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22a44:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22a48:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22a4c:	add	x2, x2, #0x850
   22a50:	add	x0, x0, #0x660
   22a54:	mov	w1, #0x11d                 	// #285
   22a58:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22a5c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22a60:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22a64:	add	x2, x2, #0x798
   22a68:	add	x0, x0, #0x660
   22a6c:	mov	x4, #0x0                   	// #0
   22a70:	mov	x3, #0x0                   	// #0
   22a74:	mov	w1, #0x11f                 	// #287
   22a78:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22a7c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22a80:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22a84:	add	x2, x2, #0x6c0
   22a88:	add	x0, x0, #0x660
   22a8c:	mov	x4, #0x0                   	// #0
   22a90:	mov	x3, #0x0                   	// #0
   22a94:	mov	w1, #0x28                  	// #40
   22a98:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22a9c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22aa0:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22aa4:	mov	x3, x21
   22aa8:	add	x2, x2, #0x948
   22aac:	add	x0, x0, #0x660
   22ab0:	mov	x4, #0x1                   	// #1
   22ab4:	mov	w1, #0x126                 	// #294
   22ab8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22abc:	mov	x0, x20
   22ac0:	blr	x1
   22ac4:	b	229f0 <__sanitizer_on_print@@Base+0x3190>
   22ac8:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22acc:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22ad0:	add	x2, x2, #0x928
   22ad4:	add	x0, x0, #0x660
   22ad8:	mov	x4, #0x0                   	// #0
   22adc:	mov	x3, #0x0                   	// #0
   22ae0:	mov	w1, #0x122                 	// #290
   22ae4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22ae8:	ldr	x1, [x20]
   22aec:	mov	w0, #0x3                   	// #3
   22af0:	ldr	x1, [x1, #16]
   22af4:	str	w0, [x20, #112]
   22af8:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x27a0>
   22afc:	add	x0, x0, #0xec0
   22b00:	cmp	x1, x0
   22b04:	b.eq	22970 <__sanitizer_on_print@@Base+0x3110>  // b.none
   22b08:	b	22964 <__sanitizer_on_print@@Base+0x3104>
   22b0c:	ldr	w0, [x20, #112]
   22b10:	b	229c0 <__sanitizer_on_print@@Base+0x3160>
   22b14:	nop
   22b18:	stp	x19, x20, [sp, #-64]!
   22b1c:	mov	x19, x0
   22b20:	mov	w20, w1
   22b24:	stp	x23, x24, [sp, #32]
   22b28:	add	x24, x0, #0x18
   22b2c:	mov	x23, x4
   22b30:	mov	x0, x24
   22b34:	stp	x21, x22, [sp, #16]
   22b38:	mov	w21, w3
   22b3c:	mov	x22, x2
   22b40:	str	x30, [sp, #48]
   22b44:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   22b48:	ldr	x0, [x19, #144]
   22b4c:	mov	w3, w20
   22b50:	ldr	w4, [x19, #112]
   22b54:	add	x0, x0, #0x1
   22b58:	str	x0, [x19, #144]
   22b5c:	cmp	x4, w20, uxtw
   22b60:	b.ls	22bdc <__sanitizer_on_print@@Base+0x337c>  // b.plast
   22b64:	ldr	x0, [x19, #152]
   22b68:	ldr	x0, [x0, x3, lsl #3]
   22b6c:	cbz	x0, 22bf4 <__sanitizer_on_print@@Base+0x3394>
   22b70:	ldr	w4, [x0, #112]
   22b74:	cmp	x4, #0x1
   22b78:	b.ne	22c14 <__sanitizer_on_print@@Base+0x33b4>  // b.any
   22b7c:	ldr	x2, [x0]
   22b80:	mov	w3, #0x2                   	// #2
   22b84:	adrp	x1, 22000 <__sanitizer_on_print@@Base+0x27a0>
   22b88:	add	x1, x1, #0xec8
   22b8c:	ldr	x2, [x2, #24]
   22b90:	str	x22, [x0, #32]
   22b94:	str	w3, [x0, #112]
   22b98:	str	w21, [x0, #120]
   22b9c:	cmp	x2, x1
   22ba0:	b.ne	22bbc <__sanitizer_on_print@@Base+0x335c>  // b.any
   22ba4:	mov	x0, x24
   22ba8:	ldp	x21, x22, [sp, #16]
   22bac:	ldp	x23, x24, [sp, #32]
   22bb0:	ldr	x30, [sp, #48]
   22bb4:	ldp	x19, x20, [sp], #64
   22bb8:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   22bbc:	mov	x1, x23
   22bc0:	blr	x2
   22bc4:	mov	x0, x24
   22bc8:	ldp	x21, x22, [sp, #16]
   22bcc:	ldp	x23, x24, [sp, #32]
   22bd0:	ldr	x30, [sp, #48]
   22bd4:	ldp	x19, x20, [sp], #64
   22bd8:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   22bdc:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22be0:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22be4:	add	x2, x2, #0x850
   22be8:	add	x0, x0, #0x660
   22bec:	mov	w1, #0x135                 	// #309
   22bf0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22bf4:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22bf8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22bfc:	add	x2, x2, #0x798
   22c00:	add	x0, x0, #0x660
   22c04:	mov	x4, #0x0                   	// #0
   22c08:	mov	x3, #0x0                   	// #0
   22c0c:	mov	w1, #0x137                 	// #311
   22c10:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22c14:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22c18:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22c1c:	add	x2, x2, #0x978
   22c20:	add	x0, x0, #0x660
   22c24:	mov	x3, #0x1                   	// #1
   22c28:	mov	w1, #0x138                 	// #312
   22c2c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22c30:	stp	x19, x20, [sp, #-32]!
   22c34:	mov	x19, x0
   22c38:	ldr	w0, [x1, #8]
   22c3c:	str	x30, [sp, #16]
   22c40:	cbz	w0, 22cf4 <__sanitizer_on_print@@Base+0x3494>
   22c44:	ldr	x0, [x19, #160]
   22c48:	cbz	x0, 22d00 <__sanitizer_on_print@@Base+0x34a0>
   22c4c:	str	xzr, [x1, #128]
   22c50:	add	x2, x0, #0x1
   22c54:	ldr	x4, [x19, #176]
   22c58:	str	x1, [x4, #128]
   22c5c:	str	x2, [x19, #160]
   22c60:	str	x1, [x19, #176]
   22c64:	ldr	w1, [x19, #12]
   22c68:	cmp	x2, x1
   22c6c:	b.ls	22cf4 <__sanitizer_on_print@@Base+0x3494>  // b.plast
   22c70:	ldr	x20, [x19, #168]
   22c74:	add	x2, x19, #0xa0
   22c78:	ldr	x1, [x20, #128]
   22c7c:	str	x1, [x2, #8]
   22c80:	cbz	x1, 22d40 <__sanitizer_on_print@@Base+0x34e0>
   22c84:	ldr	w3, [x20, #112]
   22c88:	str	x0, [x19, #160]
   22c8c:	cmp	x3, #0x4
   22c90:	b.ne	22d54 <__sanitizer_on_print@@Base+0x34f4>  // b.any
   22c94:	strb	wzr, [x20, #48]
   22c98:	str	wzr, [x20, #112]
   22c9c:	dmb	ish
   22ca0:	str	wzr, [x20, #136]
   22ca4:	ldr	x1, [x20]
   22ca8:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x27a0>
   22cac:	add	x0, x0, #0xed8
   22cb0:	ldr	x1, [x1, #40]
   22cb4:	cmp	x1, x0
   22cb8:	b.ne	22d48 <__sanitizer_on_print@@Base+0x34e8>  // b.any
   22cbc:	ldr	w0, [x20, #24]
   22cc0:	add	w0, w0, #0x1
   22cc4:	str	w0, [x20, #24]
   22cc8:	ldr	w1, [x19, #16]
   22ccc:	cmp	w1, #0x0
   22cd0:	ccmp	w0, w1, #0x0, ne  // ne = any
   22cd4:	b.cs	22cf4 <__sanitizer_on_print@@Base+0x3494>  // b.hs, b.nlast
   22cd8:	ldr	x0, [x19, #184]
   22cdc:	cbnz	x0, 22d1c <__sanitizer_on_print@@Base+0x34bc>
   22ce0:	dup	v0.2d, x20
   22ce4:	str	xzr, [x20, #128]
   22ce8:	mov	x0, #0x1                   	// #1
   22cec:	str	x0, [x19, #184]
   22cf0:	str	q0, [x19, #192]
   22cf4:	ldr	x30, [sp, #16]
   22cf8:	ldp	x19, x20, [sp], #32
   22cfc:	ret
   22d00:	dup	v0.2d, x1
   22d04:	str	xzr, [x1, #128]
   22d08:	mov	x1, #0x1                   	// #1
   22d0c:	mov	x2, x1
   22d10:	str	x1, [x19, #160]
   22d14:	stur	q0, [x19, #168]
   22d18:	b	22c64 <__sanitizer_on_print@@Base+0x3404>
   22d1c:	str	xzr, [x20, #128]
   22d20:	add	x0, x0, #0x1
   22d24:	ldr	x30, [sp, #16]
   22d28:	ldr	x2, [x19, #200]
   22d2c:	str	x20, [x2, #128]
   22d30:	str	x0, [x19, #184]
   22d34:	str	x20, [x19, #200]
   22d38:	ldp	x19, x20, [sp], #32
   22d3c:	ret
   22d40:	str	xzr, [x2, #16]
   22d44:	b	22c84 <__sanitizer_on_print@@Base+0x3424>
   22d48:	mov	x0, x20
   22d4c:	blr	x1
   22d50:	b	22cbc <__sanitizer_on_print@@Base+0x345c>
   22d54:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22d58:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22d5c:	add	x2, x2, #0x630
   22d60:	add	x0, x0, #0x660
   22d64:	mov	x4, #0x4                   	// #4
   22d68:	mov	w1, #0x144                 	// #324
   22d6c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22d70:	ldr	x2, [x0, #184]
   22d74:	mov	x1, x0
   22d78:	mov	x0, #0x0                   	// #0
   22d7c:	cbz	x2, 22d98 <__sanitizer_on_print@@Base+0x3538>
   22d80:	ldr	x0, [x1, #192]
   22d84:	ldr	x3, [x0, #128]
   22d88:	str	x3, [x1, #192]
   22d8c:	cbz	x3, 22d9c <__sanitizer_on_print@@Base+0x353c>
   22d90:	sub	x2, x2, #0x1
   22d94:	str	x2, [x1, #184]
   22d98:	ret
   22d9c:	sub	x2, x2, #0x1
   22da0:	str	x2, [x1, #184]
   22da4:	str	xzr, [x1, #200]
   22da8:	b	22d98 <__sanitizer_on_print@@Base+0x3538>
   22dac:	nop
   22db0:	stp	x19, x20, [sp, #-48]!
   22db4:	mov	x19, x0
   22db8:	mov	w20, w1
   22dbc:	stp	x21, x22, [sp, #16]
   22dc0:	add	x22, x0, #0x18
   22dc4:	mov	x21, x2
   22dc8:	mov	x0, x22
   22dcc:	str	x30, [sp, #32]
   22dd0:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   22dd4:	ldr	w4, [x19, #112]
   22dd8:	mov	w3, w20
   22ddc:	cmp	x4, w20, uxtw
   22de0:	b.ls	22e20 <__sanitizer_on_print@@Base+0x35c0>  // b.plast
   22de4:	ldr	x0, [x19, #152]
   22de8:	ldr	x1, [x0, x3, lsl #3]
   22dec:	cbz	x1, 22e38 <__sanitizer_on_print@@Base+0x35d8>
   22df0:	ldr	w4, [x1, #112]
   22df4:	cbz	x4, 22e58 <__sanitizer_on_print@@Base+0x35f8>
   22df8:	cmp	x4, #0x4
   22dfc:	b.eq	22e74 <__sanitizer_on_print@@Base+0x3614>  // b.none
   22e00:	ldr	x3, [x1, #40]
   22e04:	cbnz	x3, 22e90 <__sanitizer_on_print@@Base+0x3630>
   22e08:	ldr	x30, [sp, #32]
   22e0c:	str	x21, [x1, #40]
   22e10:	mov	x0, x22
   22e14:	ldp	x21, x22, [sp, #16]
   22e18:	ldp	x19, x20, [sp], #48
   22e1c:	b	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   22e20:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22e24:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22e28:	add	x2, x2, #0x850
   22e2c:	add	x0, x0, #0x660
   22e30:	mov	w1, #0x156                 	// #342
   22e34:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22e38:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22e3c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22e40:	add	x2, x2, #0x798
   22e44:	add	x0, x0, #0x660
   22e48:	mov	x4, #0x0                   	// #0
   22e4c:	mov	x3, #0x0                   	// #0
   22e50:	mov	w1, #0x158                 	// #344
   22e54:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22e58:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22e5c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22e60:	add	x2, x2, #0x9a8
   22e64:	add	x0, x0, #0x660
   22e68:	mov	x3, #0x0                   	// #0
   22e6c:	mov	w1, #0x159                 	// #345
   22e70:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22e74:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22e78:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22e7c:	add	x2, x2, #0x9d8
   22e80:	add	x0, x0, #0x660
   22e84:	mov	x3, x4
   22e88:	mov	w1, #0x15a                 	// #346
   22e8c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22e90:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22e94:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   22e98:	add	x2, x2, #0xa08
   22e9c:	add	x0, x0, #0x660
   22ea0:	mov	x4, #0x0                   	// #0
   22ea4:	mov	w1, #0x15b                 	// #347
   22ea8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   22eac:	nop
   22eb0:	ret
   22eb4:	nop
   22eb8:	ret
   22ebc:	nop
   22ec0:	ret
   22ec4:	nop
   22ec8:	ret
   22ecc:	nop
   22ed0:	ret
   22ed4:	nop
   22ed8:	ret
   22edc:	nop
   22ee0:	ret
   22ee4:	nop
   22ee8:	adrp	x2, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   22eec:	add	x1, x2, #0x740
   22ef0:	ldr	x3, [x2, #1856]
   22ef4:	cbz	x3, 22f24 <__sanitizer_on_print@@Base+0x36c4>
   22ef8:	ldr	x3, [x1, #8]
   22efc:	cbz	x3, 22f3c <__sanitizer_on_print@@Base+0x36dc>
   22f00:	ldr	x3, [x1, #16]
   22f04:	cbz	x3, 22f44 <__sanitizer_on_print@@Base+0x36e4>
   22f08:	ldr	x3, [x1, #24]
   22f0c:	cbz	x3, 22f4c <__sanitizer_on_print@@Base+0x36ec>
   22f10:	ldr	x3, [x1, #32]
   22f14:	mov	w1, #0x0                   	// #0
   22f18:	cbz	x3, 22f54 <__sanitizer_on_print@@Base+0x36f4>
   22f1c:	mov	w0, w1
   22f20:	ret
   22f24:	mov	w3, #0x0                   	// #0
   22f28:	add	x2, x2, #0x740
   22f2c:	mov	w1, #0x1                   	// #1
   22f30:	str	x0, [x2, w3, sxtw #3]
   22f34:	mov	w0, w1
   22f38:	ret
   22f3c:	mov	w3, #0x1                   	// #1
   22f40:	b	22f28 <__sanitizer_on_print@@Base+0x36c8>
   22f44:	mov	w3, #0x2                   	// #2
   22f48:	b	22f28 <__sanitizer_on_print@@Base+0x36c8>
   22f4c:	mov	w3, #0x3                   	// #3
   22f50:	b	22f28 <__sanitizer_on_print@@Base+0x36c8>
   22f54:	mov	w3, #0x4                   	// #4
   22f58:	b	22f28 <__sanitizer_on_print@@Base+0x36c8>
   22f5c:	nop
   22f60:	adrp	x2, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   22f64:	mov	x1, x0
   22f68:	ldr	x3, [x2, #1856]
   22f6c:	cmp	x0, x3
   22f70:	b.eq	22fb0 <__sanitizer_on_print@@Base+0x3750>  // b.none
   22f74:	add	x0, x2, #0x740
   22f78:	ldr	x3, [x0, #8]
   22f7c:	cmp	x1, x3
   22f80:	b.eq	22fe8 <__sanitizer_on_print@@Base+0x3788>  // b.none
   22f84:	ldr	x3, [x0, #16]
   22f88:	cmp	x1, x3
   22f8c:	b.eq	22ff4 <__sanitizer_on_print@@Base+0x3794>  // b.none
   22f90:	ldr	x3, [x0, #24]
   22f94:	cmp	x1, x3
   22f98:	b.eq	23000 <__sanitizer_on_print@@Base+0x37a0>  // b.none
   22f9c:	ldr	x3, [x0, #32]
   22fa0:	mov	w0, #0x0                   	// #0
   22fa4:	cmp	x3, x1
   22fa8:	b.eq	2300c <__sanitizer_on_print@@Base+0x37ac>  // b.none
   22fac:	ret
   22fb0:	mov	w1, #0x1                   	// #1
   22fb4:	mov	w0, #0x0                   	// #0
   22fb8:	stp	x19, x30, [sp, #-16]!
   22fbc:	add	x19, x2, #0x740
   22fc0:	mov	w2, #0x4                   	// #4
   22fc4:	sub	w2, w2, w0
   22fc8:	add	x1, x19, w1, sxtw #3
   22fcc:	add	x0, x19, w0, sxtw #3
   22fd0:	sbfiz	x2, x2, #3, #32
   22fd4:	bl	19e88 <__sanitizer_set_report_fd@@Base+0x20c8>
   22fd8:	mov	w0, #0x1                   	// #1
   22fdc:	str	xzr, [x19, #32]
   22fe0:	ldp	x19, x30, [sp], #16
   22fe4:	ret
   22fe8:	mov	w1, #0x2                   	// #2
   22fec:	mov	w0, #0x1                   	// #1
   22ff0:	b	22fb8 <__sanitizer_on_print@@Base+0x3758>
   22ff4:	mov	w1, #0x3                   	// #3
   22ff8:	mov	w0, #0x2                   	// #2
   22ffc:	b	22fb8 <__sanitizer_on_print@@Base+0x3758>
   23000:	mov	w1, #0x4                   	// #4
   23004:	mov	w0, #0x3                   	// #3
   23008:	b	22fb8 <__sanitizer_on_print@@Base+0x3758>
   2300c:	mov	w1, #0x5                   	// #5
   23010:	mov	w0, #0x4                   	// #4
   23014:	b	22fb8 <__sanitizer_on_print@@Base+0x3758>
   23018:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   2301c:	str	x0, [x1, #1896]
   23020:	ret
   23024:	nop
   23028:	stp	x19, x20, [sp, #-32]!
   2302c:	adrp	x20, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23030:	add	x0, x20, #0x740
   23034:	ldr	x0, [x0, #40]
   23038:	str	x30, [sp, #16]
   2303c:	cbz	x0, 23044 <__sanitizer_on_print@@Base+0x37e4>
   23040:	blr	x0
   23044:	add	x20, x20, #0x740
   23048:	mov	x19, #0x4                   	// #4
   2304c:	ldr	x0, [x20, x19, lsl #3]
   23050:	cbz	x0, 23058 <__sanitizer_on_print@@Base+0x37f8>
   23054:	blr	x0
   23058:	sub	x19, x19, #0x1
   2305c:	cmn	x19, #0x1
   23060:	b.ne	2304c <__sanitizer_on_print@@Base+0x37ec>  // b.any
   23064:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   23068:	ldr	x0, [x0, #4056]
   2306c:	ldrb	w1, [x0, #228]
   23070:	cbz	w1, 23078 <__sanitizer_on_print@@Base+0x3818>
   23074:	bl	24830 <__sanitizer_sandbox_on_notify@@Base+0x12a8>
   23078:	ldr	w0, [x0, #224]
   2307c:	bl	1c2e0 <__sanitizer_set_report_fd@@Base+0x4520>
   23080:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23084:	str	x0, [x1, #1904]
   23088:	ret
   2308c:	nop
   23090:	stp	x19, x20, [sp, #-48]!
   23094:	adrp	x6, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23098:	add	x6, x6, #0x740
   2309c:	add	x5, x6, #0x38
   230a0:	mov	x19, x0
   230a4:	mov	w20, w1
   230a8:	stp	x21, x22, [sp, #16]
   230ac:	mov	x21, x2
   230b0:	mov	x22, x3
   230b4:	stp	x23, x30, [sp, #32]
   230b8:	mov	x23, x4
   230bc:	ldxr	w7, [x5]
   230c0:	add	w8, w7, #0x1
   230c4:	stlxr	w9, w8, [x5]
   230c8:	cbnz	w9, 230bc <__sanitizer_on_print@@Base+0x385c>
   230cc:	dmb	ish
   230d0:	cmp	w7, #0xa
   230d4:	b.hi	23108 <__sanitizer_on_print@@Base+0x38a8>  // b.pmore
   230d8:	ldr	x5, [x6, #48]
   230dc:	cbz	x5, 230e4 <__sanitizer_on_print@@Base+0x3884>
   230e0:	blr	x5
   230e4:	mov	x5, x23
   230e8:	mov	x4, x22
   230ec:	mov	x3, x21
   230f0:	mov	w2, w20
   230f4:	mov	x1, x19
   230f8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   230fc:	add	x0, x0, #0xa30
   23100:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   23104:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   23108:	mov	w0, #0x2                   	// #2
   2310c:	bl	24818 <__sanitizer_sandbox_on_notify@@Base+0x1290>
   23110:	brk	#0x3e8
   23114:	nop

0000000000023118 <__sanitizer_set_death_callback@@Base>:
   23118:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   2311c:	str	x0, [x1, #1896]
   23120:	ret
   23124:	nop
   23128:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   2312c:	ldr	x3, [x1, #1920]
   23130:	cbnz	x3, 2313c <__sanitizer_set_death_callback@@Base+0x24>
   23134:	str	x0, [x1, #1920]
   23138:	ret
   2313c:	str	x30, [sp, #-16]!
   23140:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23144:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23148:	add	x2, x2, #0xa60
   2314c:	add	x0, x0, #0xa90
   23150:	mov	x4, #0x0                   	// #0
   23154:	mov	w1, #0x17                  	// #23
   23158:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2315c:	nop
   23160:	mov	x0, #0x0                   	// #0
   23164:	ret
   23168:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2316c:	stp	x19, x20, [sp, #-128]!
   23170:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23174:	ldr	x0, [x0, #4056]
   23178:	stp	x21, x22, [sp, #16]
   2317c:	add	x1, x1, #0xb00
   23180:	str	x1, [sp, #120]
   23184:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23188:	ldp	x21, x19, [x0, #136]
   2318c:	stp	x23, x24, [sp, #32]
   23190:	mov	x22, #0x0                   	// #0
   23194:	stp	x27, x28, [sp, #64]
   23198:	mov	x27, #0xcccccccccccccccc    	// #-3689348814741910324
   2319c:	mov	w23, #0x0                   	// #0
   231a0:	stp	d8, d9, [sp, #96]
   231a4:	mov	x20, #0x0                   	// #0
   231a8:	cmp	x21, #0x0
   231ac:	cset	w24, ne  // ne = any
   231b0:	ldr	d9, [x1, #2992]
   231b4:	fmov	d8, xzr
   231b8:	movk	x27, #0xcccd
   231bc:	stp	x25, x26, [sp, #48]
   231c0:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   231c4:	ldrb	w26, [x0, #160]
   231c8:	str	x30, [sp, #80]
   231cc:	nop
   231d0:	mov	w0, #0x64                  	// #100
   231d4:	bl	24820 <__sanitizer_sandbox_on_notify@@Base+0x1298>
   231d8:	bl	240b0 <__sanitizer_sandbox_on_notify@@Base+0xb28>
   231dc:	lsr	x28, x0, #20
   231e0:	ldr	x1, [x25, #3816]
   231e4:	ldr	w0, [x1]
   231e8:	cbz	w0, 2322c <__sanitizer_set_death_callback@@Base+0x114>
   231ec:	add	x0, x20, x20, lsl #1
   231f0:	lsl	x0, x0, #2
   231f4:	sub	x0, x0, x20
   231f8:	umulh	x0, x0, x27
   231fc:	cmp	x28, x0, lsr #3
   23200:	b.hi	232b4 <__sanitizer_set_death_callback@@Base+0x19c>  // b.pmore
   23204:	bl	27060 <__sanitizer_cov_dump@@Base+0x500>
   23208:	mov	x5, x0
   2320c:	cbz	x0, 2322c <__sanitizer_set_death_callback@@Base+0x114>
   23210:	add	x1, x22, x22, lsl #1
   23214:	ldr	x3, [x0, #8]
   23218:	lsl	x1, x1, #2
   2321c:	sub	x1, x1, x22
   23220:	umulh	x1, x1, x27
   23224:	cmp	x3, x1, lsr #3
   23228:	b.hi	23314 <__sanitizer_set_death_callback@@Base+0x1fc>  // b.pmore
   2322c:	cmp	w24, #0x0
   23230:	ccmp	x21, x28, #0x2, ne  // ne = any
   23234:	b.cc	23348 <__sanitizer_set_death_callback@@Base+0x230>  // b.lo, b.ul, b.last
   23238:	cbz	x19, 23278 <__sanitizer_set_death_callback@@Base+0x160>
   2323c:	cmp	x19, x28
   23240:	eor	w0, w23, #0x1
   23244:	cset	w1, cc  // cc = lo, ul, last
   23248:	ands	w1, w1, w0
   2324c:	b.ne	232d8 <__sanitizer_set_death_callback@@Base+0x1c0>  // b.any
   23250:	cmp	w23, #0x0
   23254:	ccmp	x19, x28, #0x0, ne  // ne = any
   23258:	b.cc	23278 <__sanitizer_set_death_callback@@Base+0x160>  // b.lo, b.ul, b.last
   2325c:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23260:	mov	w23, #0x0                   	// #0
   23264:	ldr	x1, [x0, #1920]
   23268:	cbz	x1, 23278 <__sanitizer_set_death_callback@@Base+0x160>
   2326c:	mov	w0, #0x0                   	// #0
   23270:	blr	x1
   23274:	nop
   23278:	cbz	w26, 231d0 <__sanitizer_set_death_callback@@Base+0xb8>
   2327c:	scvtf	d0, d8
   23280:	scvtf	d1, x28
   23284:	fmul	d0, d0, d9
   23288:	fcmpe	d1, d0
   2328c:	b.le	231d0 <__sanitizer_set_death_callback@@Base+0xb8>
   23290:	mov	x1, x28
   23294:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23298:	add	x0, x0, #0xb90
   2329c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   232a0:	fmov	d8, x28
   232a4:	mov	x1, #0x14                  	// #20
   232a8:	mov	x0, #0x5a                  	// #90
   232ac:	bl	6660 <__sanitizer_print_memory_profile@plt>
   232b0:	b	231d0 <__sanitizer_set_death_callback@@Base+0xb8>
   232b4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   232b8:	mov	x20, x28
   232bc:	mov	x2, x28
   232c0:	ldr	x1, [x0, #4024]
   232c4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   232c8:	add	x0, x0, #0xaf0
   232cc:	ldr	x1, [x1]
   232d0:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   232d4:	b	23204 <__sanitizer_set_death_callback@@Base+0xec>
   232d8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   232dc:	mov	w23, w1
   232e0:	mov	x3, x28
   232e4:	mov	x2, x19
   232e8:	ldr	x5, [x0, #4024]
   232ec:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   232f0:	add	x0, x0, #0xb60
   232f4:	ldr	x1, [x5]
   232f8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   232fc:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23300:	ldr	x1, [x0, #1920]
   23304:	cbz	x1, 23278 <__sanitizer_set_death_callback@@Base+0x160>
   23308:	mov	w0, #0x1                   	// #1
   2330c:	blr	x1
   23310:	b	23278 <__sanitizer_set_death_callback@@Base+0x160>
   23314:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   23318:	lsr	x3, x3, #20
   2331c:	ldr	x2, [x5]
   23320:	str	x5, [sp, #112]
   23324:	ldr	x1, [x0, #4024]
   23328:	ldr	x0, [sp, #120]
   2332c:	ldr	x1, [x1]
   23330:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   23334:	ldr	x5, [sp, #112]
   23338:	cmp	w24, #0x0
   2333c:	ccmp	x21, x28, #0x2, ne  // ne = any
   23340:	ldr	x22, [x5, #8]
   23344:	b.cs	23238 <__sanitizer_set_death_callback@@Base+0x120>  // b.hs, b.nlast
   23348:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2334c:	mov	x3, x28
   23350:	mov	x2, x21
   23354:	ldr	x1, [x0, #4024]
   23358:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2335c:	add	x0, x0, #0xb30
   23360:	ldr	x1, [x1]
   23364:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   23368:	bl	1e5b0 <__sanitizer_set_report_fd@@Base+0x67f0>
   2336c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   23370:	stp	x19, x20, [sp, #-96]!
   23374:	stp	x23, x24, [sp, #32]
   23378:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2337c:	ldr	x19, [x23, #4016]
   23380:	stp	x21, x22, [sp, #16]
   23384:	mov	x21, x0
   23388:	str	xzr, [sp, #64]
   2338c:	ldr	x1, [x19]
   23390:	str	x30, [sp, #48]
   23394:	stp	xzr, xzr, [sp, #72]
   23398:	cbz	x1, 234b0 <__sanitizer_set_death_callback@@Base+0x398>
   2339c:	sub	x0, x1, #0x1
   233a0:	tst	x0, x1
   233a4:	b.ne	2351c <__sanitizer_set_death_callback@@Base+0x404>  // b.any
   233a8:	neg	x19, x1
   233ac:	mov	x22, #0xffff                	// #65535
   233b0:	add	x1, x1, x22
   233b4:	mov	w2, #0x0                   	// #0
   233b8:	and	x19, x1, x19
   233bc:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   233c0:	mov	x0, x19
   233c4:	add	x1, x24, #0xb50
   233c8:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   233cc:	mov	x20, x0
   233d0:	ldr	x1, [sp, #64]
   233d4:	ldr	x2, [sp, #80]
   233d8:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   233dc:	ldp	x0, x1, [sp, #64]
   233e0:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   233e4:	stp	x20, x19, [sp, #64]
   233e8:	ldr	x2, [sp, #80]
   233ec:	cmp	x2, x22
   233f0:	b.ls	23468 <__sanitizer_set_death_callback@@Base+0x350>  // b.plast
   233f4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   233f8:	mov	x2, x21
   233fc:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   23400:	add	x1, x1, #0xbf8
   23404:	ldr	q0, [x0, #3008]
   23408:	add	x0, sp, #0x40
   2340c:	str	q0, [sp, #80]
   23410:	strb	wzr, [x20]
   23414:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   23418:	ldr	x19, [sp, #64]
   2341c:	b	23430 <__sanitizer_set_death_callback@@Base+0x318>
   23420:	strb	wzr, [x0]
   23424:	mov	x0, x19
   23428:	add	x19, x1, #0x1
   2342c:	bl	24270 <__sanitizer_sandbox_on_notify@@Base+0xce8>
   23430:	mov	w1, #0xa                   	// #10
   23434:	mov	x0, x19
   23438:	bl	1a528 <__sanitizer_set_report_fd@@Base+0x2768>
   2343c:	mov	x1, x0
   23440:	cbnz	x0, 23420 <__sanitizer_set_death_callback@@Base+0x308>
   23444:	ldrb	w0, [x19]
   23448:	cbnz	w0, 2348c <__sanitizer_set_death_callback@@Base+0x374>
   2344c:	ldp	x0, x1, [sp, #64]
   23450:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   23454:	ldp	x21, x22, [sp, #16]
   23458:	ldp	x23, x24, [sp, #32]
   2345c:	ldr	x30, [sp, #48]
   23460:	ldp	x19, x20, [sp], #96
   23464:	ret
   23468:	cmp	x19, x22
   2346c:	b.ls	234c0 <__sanitizer_set_death_callback@@Base+0x3a8>  // b.plast
   23470:	mov	x3, #0x10000               	// #65536
   23474:	add	x0, x20, x2
   23478:	mov	w1, #0x0                   	// #0
   2347c:	sub	x2, x3, x2
   23480:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   23484:	ldr	x20, [sp, #64]
   23488:	b	233f4 <__sanitizer_set_death_callback@@Base+0x2dc>
   2348c:	mov	x0, x19
   23490:	bl	24270 <__sanitizer_sandbox_on_notify@@Base+0xce8>
   23494:	ldp	x0, x1, [sp, #64]
   23498:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2349c:	ldp	x21, x22, [sp, #16]
   234a0:	ldp	x23, x24, [sp, #32]
   234a4:	ldr	x30, [sp, #48]
   234a8:	ldp	x19, x20, [sp], #96
   234ac:	ret
   234b0:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   234b4:	mov	x1, x0
   234b8:	str	x0, [x19]
   234bc:	b	2339c <__sanitizer_set_death_callback@@Base+0x284>
   234c0:	ldr	x23, [x23, #4016]
   234c4:	ldr	x0, [x23]
   234c8:	cbz	x0, 2352c <__sanitizer_set_death_callback@@Base+0x414>
   234cc:	sub	x1, x0, #0x1
   234d0:	tst	x1, x0
   234d4:	b.ne	2351c <__sanitizer_set_death_callback@@Base+0x404>  // b.any
   234d8:	mov	x1, #0xffff                	// #65535
   234dc:	add	x19, x0, x1
   234e0:	neg	x0, x0
   234e4:	add	x1, x24, #0xb50
   234e8:	and	x19, x19, x0
   234ec:	mov	w2, #0x0                   	// #0
   234f0:	mov	x0, x19
   234f4:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   234f8:	ldr	x1, [sp, #64]
   234fc:	mov	x20, x0
   23500:	ldr	x2, [sp, #80]
   23504:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   23508:	ldp	x0, x1, [sp, #64]
   2350c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   23510:	stp	x20, x19, [sp, #64]
   23514:	ldr	x2, [sp, #80]
   23518:	b	23470 <__sanitizer_set_death_callback@@Base+0x358>
   2351c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   23520:	add	x0, x0, #0xb38
   23524:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   23528:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2352c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   23530:	str	x0, [x23]
   23534:	b	234cc <__sanitizer_set_death_callback@@Base+0x3b4>
   23538:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2353c:	ldr	x0, [x0, #4056]
   23540:	ldp	x1, x2, [x0, #136]
   23544:	orr	x1, x1, x2
   23548:	cbnz	x1, 23554 <__sanitizer_set_death_callback@@Base+0x43c>
   2354c:	ldrb	w0, [x0, #160]
   23550:	cbz	w0, 23570 <__sanitizer_set_death_callback@@Base+0x458>
   23554:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   23558:	ldr	x0, [x0, #3968]
   2355c:	cbz	x0, 23570 <__sanitizer_set_death_callback@@Base+0x458>
   23560:	adrp	x0, 23000 <__sanitizer_on_print@@Base+0x37a0>
   23564:	mov	x1, #0x0                   	// #0
   23568:	add	x0, x0, #0x168
   2356c:	b	1d770 <__sanitizer_set_report_fd@@Base+0x59b0>
   23570:	ret
   23574:	nop
   23578:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   2357c:	str	x0, [x1, #1928]
   23580:	ret
   23584:	nop

0000000000023588 <__sanitizer_sandbox_on_notify@@Base>:
   23588:	str	x30, [sp, #-16]!
   2358c:	bl	24bc0 <__sanitizer_sandbox_on_notify@@Base+0x1638>
   23590:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23594:	ldr	x0, [x0, #1928]
   23598:	cbz	x0, 235a8 <__sanitizer_sandbox_on_notify@@Base+0x20>
   2359c:	ldr	x30, [sp], #16
   235a0:	mov	x16, x0
   235a4:	br	x16
   235a8:	ldr	x30, [sp], #16
   235ac:	ret
   235b0:	str	x30, [sp, #-16]!
   235b4:	bl	64f0 <__errno_location@plt>
   235b8:	mov	w1, #0xc                   	// #12
   235bc:	ldr	x30, [sp], #16
   235c0:	str	w1, [x0]
   235c4:	ret
   235c8:	stp	x19, x20, [sp, #-176]!
   235cc:	stp	x23, x24, [sp, #32]
   235d0:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   235d4:	ldr	x19, [x23, #4016]
   235d8:	stp	x21, x22, [sp, #16]
   235dc:	mov	x21, x0
   235e0:	stp	x25, x30, [sp, #48]
   235e4:	mov	x22, x2
   235e8:	ldr	x1, [x19]
   235ec:	str	xzr, [sp, #64]
   235f0:	stp	xzr, xzr, [sp, #72]
   235f4:	cbz	x1, 237f4 <__sanitizer_sandbox_on_notify@@Base+0x26c>
   235f8:	sub	x19, x1, #0x1
   235fc:	ands	x19, x19, x1
   23600:	b.ne	23908 <__sanitizer_sandbox_on_notify@@Base+0x380>  // b.any
   23604:	add	x25, x1, #0xfff
   23608:	neg	x1, x1
   2360c:	and	x25, x25, x1
   23610:	mov	w2, #0x0                   	// #0
   23614:	mov	x0, x25
   23618:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2361c:	add	x1, x24, #0xb50
   23620:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   23624:	ldr	x1, [sp, #64]
   23628:	mov	x20, x0
   2362c:	ldr	x2, [sp, #80]
   23630:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   23634:	ldp	x0, x1, [sp, #64]
   23638:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2363c:	stp	x20, x25, [sp, #64]
   23640:	ldr	x2, [sp, #80]
   23644:	cmp	x2, #0xfff
   23648:	b.hi	2366c <__sanitizer_sandbox_on_notify@@Base+0xe4>  // b.pmore
   2364c:	cmp	x25, #0xfff
   23650:	b.ls	238b0 <__sanitizer_sandbox_on_notify@@Base+0x328>  // b.plast
   23654:	mov	x3, #0x1000                	// #4096
   23658:	add	x0, x20, x2
   2365c:	mov	w1, #0x0                   	// #0
   23660:	sub	x2, x3, x2
   23664:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   23668:	ldr	x20, [sp, #64]
   2366c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   23670:	ldr	q0, [x0, #3264]
   23674:	str	q0, [sp, #80]
   23678:	strb	wzr, [x20]
   2367c:	ldrb	w0, [x22, #8]
   23680:	cbnz	w0, 23798 <__sanitizer_sandbox_on_notify@@Base+0x210>
   23684:	ldr	x2, [x21, #8]
   23688:	cbz	x2, 2369c <__sanitizer_sandbox_on_notify@@Base+0x114>
   2368c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   23690:	add	x0, sp, #0x40
   23694:	add	x1, x1, #0xbf8
   23698:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2369c:	ldr	x1, [sp, #80]
   236a0:	ldr	x0, [sp, #64]
   236a4:	cbz	x1, 23918 <__sanitizer_sandbox_on_notify@@Base+0x390>
   236a8:	ldrb	w1, [x0]
   236ac:	cbz	w1, 23778 <__sanitizer_sandbox_on_notify@@Base+0x1f0>
   236b0:	movi	v0.4s, #0x0
   236b4:	add	x25, sp, #0x60
   236b8:	mov	x2, #0x10                  	// #16
   236bc:	mov	w1, #0x0                   	// #0
   236c0:	add	x0, x25, #0x1c
   236c4:	str	xzr, [sp, #96]
   236c8:	str	wzr, [sp, #120]
   236cc:	stur	q0, [sp, #104]
   236d0:	strb	wzr, [sp, #140]
   236d4:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   236d8:	movi	v0.4s, #0x0
   236dc:	mov	x0, x25
   236e0:	ldr	x2, [x21]
   236e4:	str	xzr, [sp, #144]
   236e8:	ldr	x1, [sp, #64]
   236ec:	stur	q0, [sp, #152]
   236f0:	bl	14a00 <_ZdaPvRKSt9nothrow_t@@Base+0x2d40>
   236f4:	ldrh	w3, [x21, #24]
   236f8:	cbz	w3, 23728 <__sanitizer_sandbox_on_notify@@Base+0x1a0>
   236fc:	ldr	x0, [x21, #16]
   23700:	mov	w20, #0x0                   	// #0
   23704:	nop
   23708:	ldr	w1, [x0, x19]
   2370c:	add	x2, x0, x19
   23710:	cmp	w1, #0x1
   23714:	b.eq	237ac <__sanitizer_sandbox_on_notify@@Base+0x224>  // b.none
   23718:	add	w20, w20, #0x1
   2371c:	add	x19, x19, #0x38
   23720:	cmp	w3, w20
   23724:	b.gt	23708 <__sanitizer_sandbox_on_notify@@Base+0x180>
   23728:	ldr	x19, [x22]
   2372c:	mov	x0, #0xe38f                	// #58255
   23730:	movk	x0, #0x8e38, lsl #16
   23734:	movk	x0, #0x38e3, lsl #32
   23738:	ldp	x4, x3, [x19, #8]
   2373c:	movk	x0, #0xe38e, lsl #48
   23740:	umulh	x4, x4, x0
   23744:	lsr	x4, x4, #6
   23748:	cmp	x3, x4
   2374c:	b.hi	23944 <__sanitizer_sandbox_on_notify@@Base+0x3bc>  // b.pmore
   23750:	add	x0, x3, #0x1
   23754:	b.eq	23804 <__sanitizer_sandbox_on_notify@@Base+0x27c>  // b.none
   23758:	ldr	x21, [x19]
   2375c:	add	x3, x3, x3, lsl #3
   23760:	str	x0, [x19, #16]
   23764:	mov	x1, x25
   23768:	add	x0, x21, x3, lsl #3
   2376c:	mov	x2, #0x48                  	// #72
   23770:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   23774:	ldr	x0, [sp, #64]
   23778:	ldr	x1, [sp, #72]
   2377c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   23780:	mov	w0, #0x0                   	// #0
   23784:	ldp	x21, x22, [sp, #16]
   23788:	ldp	x23, x24, [sp, #32]
   2378c:	ldp	x25, x30, [sp, #48]
   23790:	ldp	x19, x20, [sp], #176
   23794:	ret
   23798:	ldr	x0, [sp, #64]
   2379c:	strb	wzr, [x22, #8]
   237a0:	ldr	x1, [sp, #80]
   237a4:	bl	14f10 <_ZdaPvRKSt9nothrow_t@@Base+0x3250>
   237a8:	b	2369c <__sanitizer_sandbox_on_notify@@Base+0x114>
   237ac:	ldr	x1, [x21]
   237b0:	mov	x0, x25
   237b4:	ldr	x4, [x2, #16]
   237b8:	mov	x5, #0x0                   	// #0
   237bc:	ldr	w3, [x2, #4]
   237c0:	add	w20, w20, #0x1
   237c4:	ldr	x2, [x2, #40]
   237c8:	add	x1, x1, x4
   237cc:	ubfx	x4, x3, #1, #1
   237d0:	and	w3, w3, #0x1
   237d4:	add	x2, x1, x2
   237d8:	bl	14a98 <_ZdaPvRKSt9nothrow_t@@Base+0x2dd8>
   237dc:	ldrh	w3, [x21, #24]
   237e0:	add	x19, x19, #0x38
   237e4:	cmp	w20, w3
   237e8:	b.ge	23728 <__sanitizer_sandbox_on_notify@@Base+0x1a0>  // b.tcont
   237ec:	ldr	x0, [x21, #16]
   237f0:	b	23708 <__sanitizer_sandbox_on_notify@@Base+0x180>
   237f4:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   237f8:	mov	x1, x0
   237fc:	str	x0, [x19]
   23800:	b	235f8 <__sanitizer_sandbox_on_notify@@Base+0x70>
   23804:	tst	x0, x3
   23808:	b.eq	23844 <__sanitizer_sandbox_on_notify@@Base+0x2bc>  // b.none
   2380c:	clz	x2, x0
   23810:	mov	w1, #0x3f                  	// #63
   23814:	sub	w1, w1, w2
   23818:	mov	x2, #0x1                   	// #1
   2381c:	add	w4, w1, #0x1
   23820:	lsl	x4, x2, x4
   23824:	cmp	x0, x4
   23828:	b.cs	239a0 <__sanitizer_sandbox_on_notify@@Base+0x418>  // b.hs, b.nlast
   2382c:	lsl	x1, x2, x1
   23830:	cmp	x0, x1
   23834:	b.ls	23980 <__sanitizer_sandbox_on_notify@@Base+0x3f8>  // b.plast
   23838:	cmp	x3, x4
   2383c:	b.hi	23968 <__sanitizer_sandbox_on_notify@@Base+0x3e0>  // b.pmore
   23840:	mov	x0, x4
   23844:	ldr	x23, [x23, #4016]
   23848:	add	x0, x0, x0, lsl #3
   2384c:	lsl	x20, x0, #3
   23850:	ldr	x0, [x23]
   23854:	cbz	x0, 2395c <__sanitizer_sandbox_on_notify@@Base+0x3d4>
   23858:	sub	x1, x0, #0x1
   2385c:	tst	x1, x0
   23860:	b.ne	23908 <__sanitizer_sandbox_on_notify@@Base+0x380>  // b.any
   23864:	add	x20, x20, x1
   23868:	neg	x0, x0
   2386c:	and	x20, x20, x0
   23870:	add	x1, x24, #0xb50
   23874:	mov	w2, #0x0                   	// #0
   23878:	mov	x0, x20
   2387c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   23880:	mov	x21, x0
   23884:	ldr	x2, [x19, #16]
   23888:	ldr	x1, [x19]
   2388c:	add	x2, x2, x2, lsl #3
   23890:	lsl	x2, x2, #3
   23894:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   23898:	ldp	x0, x1, [x19]
   2389c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   238a0:	stp	x21, x20, [x19]
   238a4:	ldr	x3, [x19, #16]
   238a8:	add	x0, x3, #0x1
   238ac:	b	2375c <__sanitizer_sandbox_on_notify@@Base+0x1d4>
   238b0:	ldr	x20, [x23, #4016]
   238b4:	ldr	x0, [x20]
   238b8:	cbz	x0, 23938 <__sanitizer_sandbox_on_notify@@Base+0x3b0>
   238bc:	sub	x1, x0, #0x1
   238c0:	tst	x1, x0
   238c4:	b.ne	23908 <__sanitizer_sandbox_on_notify@@Base+0x380>  // b.any
   238c8:	add	x25, x0, #0xfff
   238cc:	neg	x0, x0
   238d0:	and	x25, x25, x0
   238d4:	add	x1, x24, #0xb50
   238d8:	mov	w2, #0x0                   	// #0
   238dc:	mov	x0, x25
   238e0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   238e4:	mov	x20, x0
   238e8:	ldr	x1, [sp, #64]
   238ec:	ldr	x2, [sp, #80]
   238f0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   238f4:	ldp	x0, x1, [sp, #64]
   238f8:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   238fc:	stp	x20, x25, [sp, #64]
   23900:	ldr	x2, [sp, #80]
   23904:	b	23654 <__sanitizer_sandbox_on_notify@@Base+0xcc>
   23908:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2390c:	add	x0, x0, #0xb38
   23910:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   23914:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   23918:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2391c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   23920:	add	x2, x2, #0x58
   23924:	add	x0, x0, #0xad8
   23928:	mov	x4, #0x0                   	// #0
   2392c:	mov	x3, #0x0                   	// #0
   23930:	mov	w1, #0x1c5                 	// #453
   23934:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   23938:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2393c:	str	x0, [x20]
   23940:	b	238bc <__sanitizer_sandbox_on_notify@@Base+0x334>
   23944:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   23948:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2394c:	add	x2, x2, #0x808
   23950:	add	x0, x0, #0xad8
   23954:	mov	w1, #0x1cd                 	// #461
   23958:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2395c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   23960:	str	x0, [x23]
   23964:	b	23858 <__sanitizer_sandbox_on_notify@@Base+0x2d0>
   23968:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   2396c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   23970:	add	x2, x2, #0x838
   23974:	add	x0, x0, #0xad8
   23978:	mov	w1, #0x20c                 	// #524
   2397c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   23980:	mov	x4, x1
   23984:	mov	x3, x0
   23988:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   2398c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   23990:	add	x2, x2, #0x648
   23994:	add	x0, x0, #0xad8
   23998:	mov	w1, #0x18b                 	// #395
   2399c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   239a0:	mov	x3, x0
   239a4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   239a8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   239ac:	add	x2, x2, #0x5c0
   239b0:	add	x0, x0, #0xad8
   239b4:	mov	w1, #0x18a                 	// #394
   239b8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   239bc:	nop
   239c0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   239c4:	ldr	x3, [x3, #3680]
   239c8:	cbz	x3, 239d0 <__sanitizer_sandbox_on_notify@@Base+0x448>
   239cc:	b	6280 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>
   239d0:	b	6640 <sigaction@plt>
   239d4:	nop
   239d8:	stp	x19, x20, [sp, #-192]!
   239dc:	str	x30, [sp, #48]
   239e0:	cbz	x1, 23b64 <__sanitizer_sandbox_on_notify@@Base+0x5dc>
   239e4:	stp	x23, x24, [sp, #32]
   239e8:	mov	x24, x2
   239ec:	cbz	x2, 23b8c <__sanitizer_sandbox_on_notify@@Base+0x604>
   239f0:	mov	x19, x1
   239f4:	and	w0, w0, #0xff
   239f8:	cbz	w0, 23aa4 <__sanitizer_sandbox_on_notify@@Base+0x51c>
   239fc:	stp	x21, x22, [sp, #16]
   23a00:	add	x22, sp, #0x40
   23a04:	mov	x1, x22
   23a08:	mov	w0, #0x3                   	// #3
   23a0c:	bl	6610 <getrlimit@plt>
   23a10:	sxtw	x20, w0
   23a14:	cbnz	w0, 23bb0 <__sanitizer_sandbox_on_notify@@Base+0x628>
   23a18:	add	x21, sp, #0x50
   23a1c:	mov	w1, #0x1                   	// #1
   23a20:	mov	x0, x21
   23a24:	bl	1fee0 <__sanitizer_on_print@@Base+0x680>
   23a28:	mov	x0, x21
   23a2c:	bl	20000 <__sanitizer_on_print@@Base+0x7a0>
   23a30:	tst	w0, #0xff
   23a34:	b.ne	23b58 <__sanitizer_sandbox_on_notify@@Base+0x5d0>  // b.any
   23a38:	add	x23, sp, #0x70
   23a3c:	stp	xzr, xzr, [sp, #136]
   23a40:	str	xzr, [sp, #184]
   23a44:	b	23a58 <__sanitizer_sandbox_on_notify@@Base+0x4d0>
   23a48:	ldr	x0, [sp, #120]
   23a4c:	cmp	x0, x22
   23a50:	b.hi	23b08 <__sanitizer_sandbox_on_notify@@Base+0x580>  // b.pmore
   23a54:	mov	x20, x0
   23a58:	mov	x1, x23
   23a5c:	mov	x0, x21
   23a60:	bl	20750 <__sanitizer_on_print@@Base+0xef0>
   23a64:	tst	w0, #0xff
   23a68:	b.ne	23a48 <__sanitizer_sandbox_on_notify@@Base+0x4c0>  // b.any
   23a6c:	ldr	x0, [sp, #112]
   23a70:	cmp	x0, x22
   23a74:	b.hi	23a84 <__sanitizer_sandbox_on_notify@@Base+0x4fc>  // b.pmore
   23a78:	ldr	x0, [sp, #120]
   23a7c:	cmp	x0, x22
   23a80:	b.hi	23b14 <__sanitizer_sandbox_on_notify@@Base+0x58c>  // b.pmore
   23a84:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23a88:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23a8c:	add	x2, x2, #0xc90
   23a90:	add	x0, x0, #0xbe8
   23a94:	mov	x4, #0x0                   	// #0
   23a98:	mov	x3, #0x0                   	// #0
   23a9c:	mov	w1, #0x73                  	// #115
   23aa0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   23aa4:	add	x20, sp, #0x70
   23aa8:	str	xzr, [sp, #64]
   23aac:	mov	x0, x20
   23ab0:	str	xzr, [sp, #80]
   23ab4:	bl	62b0 <pthread_attr_init@plt>
   23ab8:	bl	65e0 <pthread_self@plt>
   23abc:	mov	x1, x20
   23ac0:	bl	6270 <pthread_getattr_np@plt>
   23ac4:	sxtw	x3, w0
   23ac8:	cbnz	w0, 23bd0 <__sanitizer_sandbox_on_notify@@Base+0x648>
   23acc:	add	x2, sp, #0x40
   23ad0:	add	x1, sp, #0x50
   23ad4:	mov	x0, x20
   23ad8:	bl	24f88 <__sanitizer_sandbox_on_notify@@Base+0x1a00>
   23adc:	mov	x0, x20
   23ae0:	bl	6360 <pthread_attr_destroy@plt>
   23ae4:	ldr	x0, [sp, #64]
   23ae8:	ldr	x1, [sp, #80]
   23aec:	ldr	x30, [sp, #48]
   23af0:	add	x0, x0, x1
   23af4:	str	x0, [x19]
   23af8:	str	x1, [x24]
   23afc:	ldp	x23, x24, [sp, #32]
   23b00:	ldp	x19, x20, [sp], #192
   23b04:	ret
   23b08:	ldr	x1, [sp, #112]
   23b0c:	cmp	x1, x22
   23b10:	b.hi	23a84 <__sanitizer_sandbox_on_notify@@Base+0x4fc>  // b.pmore
   23b14:	ldr	x1, [sp, #64]
   23b18:	mov	x2, #0x40000000            	// #1073741824
   23b1c:	sub	x20, x0, x20
   23b20:	str	x0, [x19]
   23b24:	cmp	x1, x2
   23b28:	csel	x1, x1, x2, ls  // ls = plast
   23b2c:	cmp	x20, x1
   23b30:	csel	x20, x20, x1, ls  // ls = plast
   23b34:	sub	x0, x0, x20
   23b38:	str	x0, [x24]
   23b3c:	mov	x0, x21
   23b40:	bl	20010 <__sanitizer_on_print@@Base+0x7b0>
   23b44:	ldp	x21, x22, [sp, #16]
   23b48:	ldp	x23, x24, [sp, #32]
   23b4c:	ldr	x30, [sp, #48]
   23b50:	ldp	x19, x20, [sp], #192
   23b54:	ret
   23b58:	str	xzr, [x24]
   23b5c:	str	xzr, [x19]
   23b60:	b	23b3c <__sanitizer_sandbox_on_notify@@Base+0x5b4>
   23b64:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23b68:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23b6c:	add	x2, x2, #0xbd0
   23b70:	add	x0, x0, #0xbe8
   23b74:	mov	x4, #0x0                   	// #0
   23b78:	mov	x3, #0x0                   	// #0
   23b7c:	mov	w1, #0x60                  	// #96
   23b80:	stp	x21, x22, [sp, #16]
   23b84:	stp	x23, x24, [sp, #32]
   23b88:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   23b8c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23b90:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23b94:	add	x2, x2, #0xc48
   23b98:	add	x0, x0, #0xbe8
   23b9c:	mov	x4, #0x0                   	// #0
   23ba0:	mov	x3, #0x0                   	// #0
   23ba4:	mov	w1, #0x61                  	// #97
   23ba8:	stp	x21, x22, [sp, #16]
   23bac:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   23bb0:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23bb4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23bb8:	mov	x3, x20
   23bbc:	add	x2, x2, #0xc60
   23bc0:	add	x0, x0, #0xbe8
   23bc4:	mov	x4, #0x0                   	// #0
   23bc8:	mov	w1, #0x65                  	// #101
   23bcc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   23bd0:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23bd4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23bd8:	add	x2, x2, #0xcd8
   23bdc:	add	x0, x0, #0xbe8
   23be0:	mov	x4, #0x0                   	// #0
   23be4:	mov	w1, #0x91                  	// #145
   23be8:	stp	x21, x22, [sp, #16]
   23bec:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   23bf0:	stp	x19, x20, [sp, #-48]!
   23bf4:	mov	x19, x0
   23bf8:	mov	x20, x1
   23bfc:	mov	x0, #0xffffffffffffffff    	// #-1
   23c00:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23c04:	add	x1, x1, #0xd10
   23c08:	str	x30, [sp, #16]
   23c0c:	bl	62e0 <dlsym@plt>
   23c10:	str	x0, [sp, #32]
   23c14:	cbz	x0, 23c50 <__sanitizer_sandbox_on_notify@@Base+0x6c8>
   23c18:	add	x1, sp, #0x20
   23c1c:	add	x0, sp, #0x28
   23c20:	mov	x2, #0x8                   	// #8
   23c24:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   23c28:	ldr	x3, [sp, #40]
   23c2c:	mov	x1, x20
   23c30:	mov	x0, x19
   23c34:	mov	w2, #0x1                   	// #1
   23c38:	blr	x3
   23c3c:	cmp	w0, #0x0
   23c40:	cset	w0, eq  // eq = none
   23c44:	ldr	x30, [sp, #16]
   23c48:	ldp	x19, x20, [sp], #48
   23c4c:	ret
   23c50:	mov	w0, #0x0                   	// #0
   23c54:	ldr	x30, [sp, #16]
   23c58:	ldp	x19, x20, [sp], #48
   23c5c:	ret
   23c60:	str	x30, [sp, #-48]!
   23c64:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23c68:	mov	x0, #0xffffffffffffffff    	// #-1
   23c6c:	add	x1, x1, #0xd18
   23c70:	bl	62e0 <dlsym@plt>
   23c74:	mov	x3, x0
   23c78:	mov	x2, #0x8                   	// #8
   23c7c:	add	x1, sp, #0x20
   23c80:	add	x0, sp, #0x28
   23c84:	stp	xzr, xzr, [sp, #16]
   23c88:	str	x3, [sp, #32]
   23c8c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   23c90:	ldr	x2, [sp, #40]
   23c94:	cbz	x2, 23d08 <__sanitizer_sandbox_on_notify@@Base+0x780>
   23c98:	add	x1, sp, #0x18
   23c9c:	add	x0, sp, #0x10
   23ca0:	blr	x2
   23ca4:	ldr	x1, [sp, #24]
   23ca8:	cmp	x1, #0xf
   23cac:	b.ls	23ce0 <__sanitizer_sandbox_on_notify@@Base+0x758>  // b.plast
   23cb0:	sub	x0, x1, #0x1
   23cb4:	tst	x0, x1
   23cb8:	b.ne	23d28 <__sanitizer_sandbox_on_notify@@Base+0x7a0>  // b.any
   23cbc:	ldr	x0, [sp, #16]
   23cc0:	adrp	x2, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23cc4:	add	x0, x0, x1
   23cc8:	neg	x1, x1
   23ccc:	sub	x0, x0, #0x1
   23cd0:	and	x0, x0, x1
   23cd4:	str	x0, [x2, #1936]
   23cd8:	ldr	x30, [sp], #48
   23cdc:	ret
   23ce0:	ldr	x0, [sp, #16]
   23ce4:	mov	x1, #0x10                  	// #16
   23ce8:	adrp	x2, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23cec:	add	x0, x0, x1
   23cf0:	neg	x1, x1
   23cf4:	sub	x0, x0, #0x1
   23cf8:	and	x0, x0, x1
   23cfc:	str	x0, [x2, #1936]
   23d00:	ldr	x30, [sp], #48
   23d04:	ret
   23d08:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23d0c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23d10:	add	x2, x2, #0xd30
   23d14:	add	x0, x0, #0xbe8
   23d18:	mov	x4, #0x0                   	// #0
   23d1c:	mov	x3, #0x0                   	// #0
   23d20:	mov	w1, #0xd9                  	// #217
   23d24:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   23d28:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   23d2c:	add	x0, x0, #0xb38
   23d30:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   23d34:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   23d38:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23d3c:	add	x1, x1, #0x790
   23d40:	ldr	x0, [x1, #8]
   23d44:	cbnz	x0, 23d54 <__sanitizer_sandbox_on_notify@@Base+0x7cc>
   23d48:	mov	x2, #0x6f0                 	// #1776
   23d4c:	mov	x0, x2
   23d50:	str	x2, [x1, #8]
   23d54:	ret
   23d58:	mov	x0, #0x10                  	// #16
   23d5c:	ret
   23d60:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23d64:	add	x1, x1, #0x790
   23d68:	mrs	x2, tpidr_el0
   23d6c:	ldr	x0, [x1, #8]
   23d70:	cbnz	x0, 23d80 <__sanitizer_sandbox_on_notify@@Base+0x7f8>
   23d74:	mov	x3, #0x6f0                 	// #1776
   23d78:	mov	x0, x3
   23d7c:	str	x3, [x1, #8]
   23d80:	sub	x0, x2, x0
   23d84:	ret
   23d88:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23d8c:	ldr	x0, [x0, #1936]
   23d90:	ret
   23d94:	nop
   23d98:	adrp	x6, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23d9c:	add	x7, x6, #0x790
   23da0:	stp	x19, x20, [sp, #-64]!
   23da4:	mov	x20, x1
   23da8:	mov	x19, x3
   23dac:	ldr	x5, [x7, #8]
   23db0:	stp	x21, x22, [sp, #16]
   23db4:	mov	x22, x2
   23db8:	stp	x23, x30, [sp, #32]
   23dbc:	mov	x21, x4
   23dc0:	and	w23, w0, #0xff
   23dc4:	mrs	x0, tpidr_el0
   23dc8:	cbnz	x5, 23dd8 <__sanitizer_sandbox_on_notify@@Base+0x850>
   23dcc:	mov	x1, #0x6f0                 	// #1776
   23dd0:	mov	x5, x1
   23dd4:	str	x1, [x7, #8]
   23dd8:	sub	x0, x0, x5
   23ddc:	str	x0, [x19]
   23de0:	ldr	x0, [x6, #1936]
   23de4:	str	x0, [x21]
   23de8:	add	x1, sp, #0x30
   23dec:	mov	w0, w23
   23df0:	add	x2, sp, #0x38
   23df4:	bl	239d8 <__sanitizer_sandbox_on_notify@@Base+0x450>
   23df8:	ldp	x0, x1, [sp, #48]
   23dfc:	str	x1, [x20]
   23e00:	sub	x0, x0, x1
   23e04:	str	x0, [x22]
   23e08:	cbnz	w23, 23e54 <__sanitizer_sandbox_on_notify@@Base+0x8cc>
   23e0c:	ldr	x3, [x19]
   23e10:	ldr	x4, [x20]
   23e14:	cmp	x3, x4
   23e18:	b.ls	23e54 <__sanitizer_sandbox_on_notify@@Base+0x8cc>  // b.plast
   23e1c:	add	x1, x0, x4
   23e20:	cmp	x3, x1
   23e24:	b.cs	23e54 <__sanitizer_sandbox_on_notify@@Base+0x8cc>  // b.hs, b.nlast
   23e28:	ldr	x2, [x21]
   23e2c:	add	x3, x3, x2
   23e30:	cmp	x4, x3
   23e34:	b.cs	23e64 <__sanitizer_sandbox_on_notify@@Base+0x8dc>  // b.hs, b.nlast
   23e38:	cmp	x1, x3
   23e3c:	b.cc	23e7c <__sanitizer_sandbox_on_notify@@Base+0x8f4>  // b.lo, b.ul, b.last
   23e40:	sub	x0, x0, x2
   23e44:	str	x0, [x22]
   23e48:	ldr	x1, [x20]
   23e4c:	add	x0, x1, x0
   23e50:	str	x0, [x19]
   23e54:	ldp	x21, x22, [sp, #16]
   23e58:	ldp	x23, x30, [sp, #32]
   23e5c:	ldp	x19, x20, [sp], #64
   23e60:	ret
   23e64:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23e68:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23e6c:	add	x2, x2, #0xd48
   23e70:	add	x0, x0, #0xbe8
   23e74:	mov	w1, #0x202                 	// #514
   23e78:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   23e7c:	mov	x4, x1
   23e80:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23e84:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   23e88:	add	x2, x2, #0xd78
   23e8c:	add	x0, x0, #0xbe8
   23e90:	mov	w1, #0x203                 	// #515
   23e94:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   23e98:	stp	x19, x20, [sp, #-48]!
   23e9c:	mov	x19, x0
   23ea0:	ldrb	w0, [x0, #24]
   23ea4:	stp	x21, x30, [sp, #16]
   23ea8:	cbz	w0, 23f18 <__sanitizer_sandbox_on_notify@@Base+0x990>
   23eac:	ldr	x20, [x19, #16]
   23eb0:	ldr	x0, [x19]
   23eb4:	add	x20, x20, x20, lsl #3
   23eb8:	mov	x21, x0
   23ebc:	add	x20, x0, x20, lsl #3
   23ec0:	cmp	x0, x20
   23ec4:	b.eq	23edc <__sanitizer_sandbox_on_notify@@Base+0x954>  // b.none
   23ec8:	mov	x0, x21
   23ecc:	add	x21, x21, #0x48
   23ed0:	bl	14960 <_ZdaPvRKSt9nothrow_t@@Base+0x2ca0>
   23ed4:	cmp	x20, x21
   23ed8:	b.ne	23ec8 <__sanitizer_sandbox_on_notify@@Base+0x940>  // b.any
   23edc:	str	xzr, [x19, #16]
   23ee0:	mov	w2, #0x1                   	// #1
   23ee4:	strb	w2, [x19, #24]
   23ee8:	add	x1, sp, #0x20
   23eec:	adrp	x0, 23000 <__sanitizer_on_print@@Base+0x37a0>
   23ef0:	add	x0, x0, #0x5c8
   23ef4:	str	x19, [sp, #32]
   23ef8:	strb	w2, [sp, #40]
   23efc:	stur	wzr, [sp, #41]
   23f00:	sturh	wzr, [sp, #45]
   23f04:	strb	wzr, [sp, #47]
   23f08:	bl	63a0 <dl_iterate_phdr@plt>
   23f0c:	ldp	x21, x30, [sp, #16]
   23f10:	ldp	x19, x20, [sp], #48
   23f14:	ret
   23f18:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   23f1c:	stp	xzr, xzr, [x19, #8]
   23f20:	ldr	x20, [x20, #4016]
   23f24:	ldr	x0, [x20]
   23f28:	str	xzr, [x19]
   23f2c:	cbz	x0, 23f88 <__sanitizer_sandbox_on_notify@@Base+0xa00>
   23f30:	sub	x1, x0, #0x1
   23f34:	tst	x1, x0
   23f38:	b.ne	23f94 <__sanitizer_sandbox_on_notify@@Base+0xa0c>  // b.any
   23f3c:	add	x20, x0, #0x11f, lsl #12
   23f40:	neg	x0, x0
   23f44:	add	x20, x20, #0xfff
   23f48:	mov	w2, #0x0                   	// #0
   23f4c:	and	x20, x20, x0
   23f50:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   23f54:	mov	x0, x20
   23f58:	add	x1, x1, #0xb50
   23f5c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   23f60:	mov	x21, x0
   23f64:	ldr	x2, [x19, #16]
   23f68:	ldr	x1, [x19]
   23f6c:	add	x2, x2, x2, lsl #3
   23f70:	lsl	x2, x2, #3
   23f74:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   23f78:	ldp	x0, x1, [x19]
   23f7c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   23f80:	stp	x21, x20, [x19]
   23f84:	b	23ee0 <__sanitizer_sandbox_on_notify@@Base+0x958>
   23f88:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   23f8c:	str	x0, [x20]
   23f90:	b	23f30 <__sanitizer_sandbox_on_notify@@Base+0x9a8>
   23f94:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   23f98:	add	x0, x0, #0xb38
   23f9c:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   23fa0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   23fa4:	nop
   23fa8:	stp	x19, x20, [sp, #-64]!
   23fac:	mov	x19, x0
   23fb0:	ldrb	w0, [x0, #24]
   23fb4:	stp	x21, x30, [sp, #16]
   23fb8:	cbz	w0, 24024 <__sanitizer_sandbox_on_notify@@Base+0xa9c>
   23fbc:	ldr	x20, [x19, #16]
   23fc0:	ldr	x0, [x19]
   23fc4:	add	x20, x20, x20, lsl #3
   23fc8:	mov	x21, x0
   23fcc:	add	x20, x0, x20, lsl #3
   23fd0:	cmp	x0, x20
   23fd4:	b.eq	23fec <__sanitizer_sandbox_on_notify@@Base+0xa64>  // b.none
   23fd8:	mov	x0, x21
   23fdc:	add	x21, x21, #0x48
   23fe0:	bl	14960 <_ZdaPvRKSt9nothrow_t@@Base+0x2ca0>
   23fe4:	cmp	x20, x21
   23fe8:	b.ne	23fd8 <__sanitizer_sandbox_on_notify@@Base+0xa50>  // b.any
   23fec:	str	xzr, [x19, #16]
   23ff0:	mov	w1, #0x1                   	// #1
   23ff4:	strb	w1, [x19, #24]
   23ff8:	add	x20, sp, #0x20
   23ffc:	mov	x0, x20
   24000:	bl	1fee0 <__sanitizer_on_print@@Base+0x680>
   24004:	mov	x1, x19
   24008:	mov	x0, x20
   2400c:	bl	20130 <__sanitizer_on_print@@Base+0x8d0>
   24010:	mov	x0, x20
   24014:	bl	20010 <__sanitizer_on_print@@Base+0x7b0>
   24018:	ldp	x21, x30, [sp, #16]
   2401c:	ldp	x19, x20, [sp], #64
   24020:	ret
   24024:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24028:	stp	xzr, xzr, [x19, #8]
   2402c:	ldr	x20, [x20, #4016]
   24030:	ldr	x0, [x20]
   24034:	str	xzr, [x19]
   24038:	cbz	x0, 24094 <__sanitizer_sandbox_on_notify@@Base+0xb0c>
   2403c:	sub	x1, x0, #0x1
   24040:	tst	x1, x0
   24044:	b.ne	240a0 <__sanitizer_sandbox_on_notify@@Base+0xb18>  // b.any
   24048:	add	x20, x0, #0x11f, lsl #12
   2404c:	neg	x0, x0
   24050:	add	x20, x20, #0xfff
   24054:	mov	w2, #0x0                   	// #0
   24058:	and	x20, x20, x0
   2405c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   24060:	mov	x0, x20
   24064:	add	x1, x1, #0xb50
   24068:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2406c:	mov	x21, x0
   24070:	ldr	x2, [x19, #16]
   24074:	ldr	x1, [x19]
   24078:	add	x2, x2, x2, lsl #3
   2407c:	lsl	x2, x2, #3
   24080:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   24084:	ldp	x0, x1, [x19]
   24088:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2408c:	stp	x21, x20, [x19]
   24090:	b	23ff0 <__sanitizer_sandbox_on_notify@@Base+0xa68>
   24094:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   24098:	str	x0, [x20]
   2409c:	b	2403c <__sanitizer_sandbox_on_notify@@Base+0xab4>
   240a0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   240a4:	add	x0, x0, #0xb38
   240a8:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   240ac:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   240b0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   240b4:	stp	x19, x20, [sp, #-176]!
   240b8:	ldr	x0, [x0, #4056]
   240bc:	ldrb	w0, [x0, #168]
   240c0:	str	x30, [sp, #16]
   240c4:	cbnz	w0, 240f0 <__sanitizer_sandbox_on_notify@@Base+0xb68>
   240c8:	add	x1, sp, #0x20
   240cc:	bl	6350 <getrusage@plt>
   240d0:	mov	w1, w0
   240d4:	mov	x0, #0x0                   	// #0
   240d8:	cbnz	w1, 240e4 <__sanitizer_sandbox_on_notify@@Base+0xb5c>
   240dc:	ldr	x0, [sp, #64]
   240e0:	lsl	x0, x0, #10
   240e4:	ldr	x30, [sp, #16]
   240e8:	ldp	x19, x20, [sp], #176
   240ec:	ret
   240f0:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   240f4:	mov	x2, #0x0                   	// #0
   240f8:	add	x0, x0, #0xdb0
   240fc:	mov	w1, #0x0                   	// #0
   24100:	bl	1dae0 <__sanitizer_set_report_fd@@Base+0x5d20>
   24104:	mov	w20, w0
   24108:	cmn	w0, #0x1
   2410c:	b.eq	241dc <__sanitizer_sandbox_on_notify@@Base+0xc54>  // b.none
   24110:	add	x19, sp, #0x20
   24114:	mov	x2, #0x3f                  	// #63
   24118:	mov	x1, x19
   2411c:	bl	1c160 <__sanitizer_set_report_fd@@Base+0x43a0>
   24120:	mov	x1, x0
   24124:	mov	w0, w20
   24128:	mov	x20, x1
   2412c:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   24130:	cmp	x20, #0x0
   24134:	mov	x0, #0x0                   	// #0
   24138:	b.le	240e4 <__sanitizer_sandbox_on_notify@@Base+0xb5c>
   2413c:	strb	wzr, [x19, x20]
   24140:	mov	x1, x19
   24144:	ldrb	w2, [sp, #32]
   24148:	sub	w0, w2, #0x30
   2414c:	and	w0, w0, #0xff
   24150:	cmp	w0, #0x9
   24154:	b.hi	2416c <__sanitizer_sandbox_on_notify@@Base+0xbe4>  // b.pmore
   24158:	ldrb	w2, [x1, #1]!
   2415c:	sub	w0, w2, #0x30
   24160:	and	w0, w0, #0xff
   24164:	cmp	w0, #0x9
   24168:	b.ls	24158 <__sanitizer_sandbox_on_notify@@Base+0xbd0>  // b.plast
   2416c:	cbz	w2, 24210 <__sanitizer_sandbox_on_notify@@Base+0xc88>
   24170:	ldrb	w2, [x1, #1]!
   24174:	sub	w0, w2, #0x30
   24178:	cmp	w2, #0x0
   2417c:	and	w0, w0, #0xff
   24180:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   24184:	b.hi	24170 <__sanitizer_sandbox_on_notify@@Base+0xbe8>  // b.pmore
   24188:	cmp	w0, #0x9
   2418c:	mov	x19, #0x0                   	// #0
   24190:	b.hi	241bc <__sanitizer_sandbox_on_notify@@Base+0xc34>  // b.pmore
   24194:	nop
   24198:	and	x3, x2, #0xff
   2419c:	ldrb	w2, [x1, #1]!
   241a0:	add	x19, x19, x19, lsl #2
   241a4:	sub	w0, w2, #0x30
   241a8:	add	x19, x3, x19, lsl #1
   241ac:	and	w0, w0, #0xff
   241b0:	sub	x19, x19, #0x30
   241b4:	cmp	w0, #0x9
   241b8:	b.ls	24198 <__sanitizer_sandbox_on_notify@@Base+0xc10>  // b.plast
   241bc:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   241c0:	ldr	x20, [x20, #4016]
   241c4:	ldr	x0, [x20]
   241c8:	cbz	x0, 24200 <__sanitizer_sandbox_on_notify@@Base+0xc78>
   241cc:	mul	x0, x19, x0
   241d0:	ldr	x30, [sp, #16]
   241d4:	ldp	x19, x20, [sp], #176
   241d8:	ret
   241dc:	add	x1, sp, #0x20
   241e0:	mov	w0, #0x0                   	// #0
   241e4:	bl	6350 <getrusage@plt>
   241e8:	mov	w1, w0
   241ec:	mov	x0, #0x0                   	// #0
   241f0:	cbnz	w1, 240e4 <__sanitizer_sandbox_on_notify@@Base+0xb5c>
   241f4:	ldr	x0, [sp, #64]
   241f8:	lsl	x0, x0, #10
   241fc:	b	240e4 <__sanitizer_sandbox_on_notify@@Base+0xb5c>
   24200:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   24204:	str	x0, [x20]
   24208:	mul	x0, x19, x0
   2420c:	b	241d0 <__sanitizer_sandbox_on_notify@@Base+0xc48>
   24210:	mov	x19, #0x0                   	// #0
   24214:	b	241bc <__sanitizer_sandbox_on_notify@@Base+0xc34>
   24218:	stp	x19, x30, [sp, #-144]!
   2421c:	mov	x1, #0x80                  	// #128
   24220:	mov	w0, #0x0                   	// #0
   24224:	add	x19, sp, #0x10
   24228:	mov	x2, x19
   2422c:	bl	6200 <sched_getaffinity@plt>
   24230:	cbnz	w0, 24248 <__sanitizer_sandbox_on_notify@@Base+0xcc0>
   24234:	mov	x1, x19
   24238:	mov	x0, #0x80                  	// #128
   2423c:	bl	64d0 <__sched_cpucount@plt>
   24240:	ldp	x19, x30, [sp], #144
   24244:	ret
   24248:	sxtw	x3, w0
   2424c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24250:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24254:	add	x2, x2, #0xdc8
   24258:	add	x0, x0, #0xbe8
   2425c:	mov	x4, #0x0                   	// #0
   24260:	mov	w1, #0x2b9                 	// #697
   24264:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   24268:	ret
   2426c:	nop
   24270:	mov	x2, x0
   24274:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   24278:	mov	w0, #0x6                   	// #6
   2427c:	add	x1, x1, #0xbf8
   24280:	b	6510 <syslog@plt>
   24284:	nop
   24288:	ret
   2428c:	nop
   24290:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24294:	ldr	x1, [x1, #4056]
   24298:	ldrb	w1, [x1, #49]
   2429c:	cbnz	w1, 242a4 <__sanitizer_sandbox_on_notify@@Base+0xd1c>
   242a0:	ret
   242a4:	b	23370 <__sanitizer_set_death_callback@@Base+0x258>
   242a8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   242ac:	str	x30, [sp, #-32]!
   242b0:	ldr	x0, [x0, #4000]
   242b4:	cbz	x0, 242c8 <__sanitizer_sandbox_on_notify@@Base+0xd40>
   242b8:	ldr	x0, [x0]
   242bc:	cbz	x0, 242c8 <__sanitizer_sandbox_on_notify@@Base+0xd40>
   242c0:	ldrb	w0, [x0]
   242c4:	cbnz	w0, 242ec <__sanitizer_sandbox_on_notify@@Base+0xd64>
   242c8:	add	x1, sp, #0x10
   242cc:	mov	w0, #0x1                   	// #1
   242d0:	bl	1c410 <__sanitizer_set_report_fd@@Base+0x4650>
   242d4:	ldp	x2, x1, [sp, #16]
   242d8:	mov	x0, #0xca00                	// #51712
   242dc:	movk	x0, #0x3b9a, lsl #16
   242e0:	ldr	x30, [sp], #32
   242e4:	madd	x0, x2, x0, x1
   242e8:	ret
   242ec:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   242f0:	add	x1, sp, #0x10
   242f4:	ldr	x0, [x0, #3792]
   242f8:	cbz	x0, 2431c <__sanitizer_sandbox_on_notify@@Base+0xd94>
   242fc:	mov	w0, #0x1                   	// #1
   24300:	bl	6370 <real_clock_gettime@plt>
   24304:	ldp	x2, x1, [sp, #16]
   24308:	mov	x0, #0xca00                	// #51712
   2430c:	movk	x0, #0x3b9a, lsl #16
   24310:	ldr	x30, [sp], #32
   24314:	madd	x0, x2, x0, x1
   24318:	ret
   2431c:	mov	w0, #0x1                   	// #1
   24320:	bl	63e0 <clock_gettime@plt>
   24324:	b	242d4 <__sanitizer_sandbox_on_notify@@Base+0xd4c>
   24328:	stp	x19, x20, [sp, #-48]!
   2432c:	mov	x0, #0x1f                  	// #31
   24330:	str	x30, [sp, #16]
   24334:	bl	6570 <getauxval@plt>
   24338:	mov	x19, x0
   2433c:	bl	1c528 <__sanitizer_set_report_fd@@Base+0x4768>
   24340:	mov	x20, x0
   24344:	bl	1c570 <__sanitizer_set_report_fd@@Base+0x47b0>
   24348:	mov	x2, x0
   2434c:	mov	x1, x20
   24350:	mov	x0, x19
   24354:	bl	1c330 <__sanitizer_set_report_fd@@Base+0x4570>
   24358:	add	x1, sp, #0x2c
   2435c:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   24360:	tst	w0, #0xff
   24364:	b.eq	2437c <__sanitizer_sandbox_on_notify@@Base+0xdf4>  // b.none
   24368:	ldr	w1, [sp, #44]
   2436c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24370:	add	x0, x0, #0xe38
   24374:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   24378:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2437c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24380:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24384:	add	x2, x2, #0xe08
   24388:	add	x0, x0, #0xbe8
   2438c:	mov	x4, #0x1                   	// #1
   24390:	mov	x3, #0x0                   	// #0
   24394:	mov	w1, #0x342                 	// #834
   24398:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2439c:	nop
   243a0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   243a4:	stp	x19, x30, [sp, #-16]!
   243a8:	ldr	x0, [x0, #4024]
   243ac:	ldr	x19, [x0]
   243b0:	bl	64f0 <__errno_location@plt>
   243b4:	mov	x2, x0
   243b8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   243bc:	mov	x1, x19
   243c0:	add	x0, x0, #0xe58
   243c4:	ldr	w2, [x2]
   243c8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   243cc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   243d0:	stp	x19, x20, [sp, #-192]!
   243d4:	mov	x19, x1
   243d8:	stp	x21, x30, [sp, #16]
   243dc:	mov	w21, w0
   243e0:	bl	1d690 <__sanitizer_set_report_fd@@Base+0x58d0>
   243e4:	cbnz	w0, 243f4 <__sanitizer_sandbox_on_notify@@Base+0xe6c>
   243e8:	ldp	x21, x30, [sp, #16]
   243ec:	ldp	x19, x20, [sp], #192
   243f0:	ret
   243f4:	add	x20, sp, #0x28
   243f8:	mov	x2, #0x98                  	// #152
   243fc:	mov	w1, #0x0                   	// #0
   24400:	mov	x0, x20
   24404:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   24408:	str	x19, [sp, #40]
   2440c:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24410:	mov	w5, #0x4                   	// #4
   24414:	mov	w3, #0x4                   	// #4
   24418:	movk	w5, #0x4000, lsl #16
   2441c:	ldr	x4, [x4, #4056]
   24420:	movk	w3, #0x4800, lsl #16
   24424:	mov	x1, x20
   24428:	mov	w0, w21
   2442c:	mov	x2, #0x0                   	// #0
   24430:	ldrb	w4, [x4, #97]
   24434:	cmp	w4, #0x0
   24438:	csel	w3, w3, w5, ne  // ne = any
   2443c:	str	w3, [sp, #176]
   24440:	bl	239c0 <__sanitizer_sandbox_on_notify@@Base+0x438>
   24444:	sxtw	x4, w0
   24448:	cbnz	w0, 24478 <__sanitizer_sandbox_on_notify@@Base+0xef0>
   2444c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24450:	ldr	x0, [x0, #3816]
   24454:	ldr	w0, [x0]
   24458:	cbz	w0, 243e8 <__sanitizer_sandbox_on_notify@@Base+0xe60>
   2445c:	mov	w1, w21
   24460:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24464:	add	x0, x0, #0xf20
   24468:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2446c:	ldp	x21, x30, [sp, #16]
   24470:	ldp	x19, x20, [sp], #192
   24474:	ret
   24478:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2447c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24480:	add	x2, x2, #0xe80
   24484:	add	x0, x0, #0xec0
   24488:	mov	x3, #0x0                   	// #0
   2448c:	mov	w1, #0xd2                  	// #210
   24490:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   24494:	nop
   24498:	b	65f0 <getuid@plt>
   2449c:	nop
   244a0:	b	65e0 <pthread_self@plt>
   244a4:	nop
   244a8:	stp	x19, x20, [sp, #-32]!
   244ac:	mov	x19, x0
   244b0:	mov	x20, x1
   244b4:	stp	x21, x30, [sp, #16]
   244b8:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   244bc:	ldr	x21, [x21, #4016]
   244c0:	ldr	x2, [x21]
   244c4:	cbz	x2, 244f8 <__sanitizer_sandbox_on_notify@@Base+0xf70>
   244c8:	sub	x0, x2, #0x1
   244cc:	tst	x2, x0
   244d0:	b.ne	24510 <__sanitizer_sandbox_on_notify@@Base+0xf88>  // b.any
   244d4:	neg	x2, x2
   244d8:	add	x0, x19, x0
   244dc:	and	x20, x20, x2
   244e0:	and	x0, x0, x2
   244e4:	cmp	x20, x0
   244e8:	b.hi	24520 <__sanitizer_sandbox_on_notify@@Base+0xf98>  // b.pmore
   244ec:	ldp	x21, x30, [sp, #16]
   244f0:	ldp	x19, x20, [sp], #32
   244f4:	ret
   244f8:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   244fc:	mov	x2, x0
   24500:	str	x0, [x21]
   24504:	sub	x0, x2, #0x1
   24508:	tst	x2, x0
   2450c:	b.eq	244d4 <__sanitizer_sandbox_on_notify@@Base+0xf4c>  // b.none
   24510:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   24514:	add	x0, x0, #0xb38
   24518:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2451c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   24520:	sub	x1, x20, x0
   24524:	mov	w2, #0x4                   	// #4
   24528:	ldp	x21, x30, [sp, #16]
   2452c:	ldp	x19, x20, [sp], #32
   24530:	b	64a0 <madvise@plt>
   24534:	nop
   24538:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2453c:	ldr	x2, [x2, #4056]
   24540:	ldrb	w2, [x2, #208]
   24544:	cbz	w2, 24550 <__sanitizer_sandbox_on_notify@@Base+0xfc8>
   24548:	mov	w2, #0xf                   	// #15
   2454c:	b	64a0 <madvise@plt>
   24550:	mov	w2, #0xe                   	// #14
   24554:	b	64a0 <madvise@plt>
   24558:	str	x30, [sp, #-16]!
   2455c:	mov	w2, #0x10                  	// #16
   24560:	bl	64a0 <madvise@plt>
   24564:	cmp	w0, #0x0
   24568:	cset	w0, eq  // eq = none
   2456c:	ldr	x30, [sp], #16
   24570:	ret
   24574:	nop
   24578:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2457c:	ldr	x0, [x0, #4056]
   24580:	ldrb	w0, [x0, #186]
   24584:	cbnz	w0, 2458c <__sanitizer_sandbox_on_notify@@Base+0x1004>
   24588:	ret
   2458c:	stp	x19, x30, [sp, #-32]!
   24590:	mov	w0, #0x4                   	// #4
   24594:	add	x19, sp, #0x10
   24598:	mov	x1, x19
   2459c:	bl	6610 <getrlimit@plt>
   245a0:	cbnz	w0, 245c0 <__sanitizer_sandbox_on_notify@@Base+0x1038>
   245a4:	mov	x1, x19
   245a8:	mov	w0, #0x4                   	// #4
   245ac:	str	xzr, [sp, #16]
   245b0:	bl	6560 <setrlimit@plt>
   245b4:	cbnz	w0, 245ec <__sanitizer_sandbox_on_notify@@Base+0x1064>
   245b8:	ldp	x19, x30, [sp], #32
   245bc:	ret
   245c0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   245c4:	ldr	x0, [x0, #4024]
   245c8:	ldr	x19, [x0]
   245cc:	bl	64f0 <__errno_location@plt>
   245d0:	mov	x2, x0
   245d4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   245d8:	mov	x1, x19
   245dc:	add	x0, x0, #0xf48
   245e0:	ldr	w2, [x2]
   245e4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   245e8:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   245ec:	bl	243a0 <__sanitizer_sandbox_on_notify@@Base+0xe18>
   245f0:	str	x30, [sp, #-32]!
   245f4:	mov	w0, #0x3                   	// #3
   245f8:	add	x1, sp, #0x10
   245fc:	bl	6610 <getrlimit@plt>
   24600:	cbnz	w0, 24618 <__sanitizer_sandbox_on_notify@@Base+0x1090>
   24604:	ldr	x0, [sp, #16]
   24608:	ldr	x30, [sp], #32
   2460c:	cmn	x0, #0x1
   24610:	cset	w0, eq  // eq = none
   24614:	ret
   24618:	sxtw	x4, w0
   2461c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24620:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24624:	add	x2, x2, #0xf70
   24628:	add	x0, x0, #0xec0
   2462c:	mov	x3, #0x0                   	// #0
   24630:	mov	w1, #0x5c                  	// #92
   24634:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   24638:	stp	x19, x20, [sp, #-48]!
   2463c:	mov	x19, x0
   24640:	mov	w0, #0x3                   	// #3
   24644:	add	x20, sp, #0x20
   24648:	str	x30, [sp, #16]
   2464c:	mov	x1, x20
   24650:	bl	6610 <getrlimit@plt>
   24654:	cbnz	w0, 246d4 <__sanitizer_sandbox_on_notify@@Base+0x114c>
   24658:	mov	x1, x20
   2465c:	mov	w0, #0x3                   	// #3
   24660:	str	x19, [sp, #32]
   24664:	bl	6560 <setrlimit@plt>
   24668:	cbnz	w0, 24700 <__sanitizer_sandbox_on_notify@@Base+0x1178>
   2466c:	mov	x1, x20
   24670:	mov	w0, #0x3                   	// #3
   24674:	bl	6610 <getrlimit@plt>
   24678:	sxtw	x4, w0
   2467c:	cbnz	w0, 24698 <__sanitizer_sandbox_on_notify@@Base+0x1110>
   24680:	ldr	x0, [sp, #32]
   24684:	cmn	x0, #0x1
   24688:	b.eq	246b4 <__sanitizer_sandbox_on_notify@@Base+0x112c>  // b.none
   2468c:	ldr	x30, [sp, #16]
   24690:	ldp	x19, x20, [sp], #48
   24694:	ret
   24698:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2469c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   246a0:	add	x2, x2, #0xf70
   246a4:	add	x0, x0, #0xec0
   246a8:	mov	x3, #0x0                   	// #0
   246ac:	mov	w1, #0x5c                  	// #92
   246b0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   246b4:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   246b8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   246bc:	add	x2, x2, #0xf98
   246c0:	add	x0, x0, #0xec0
   246c4:	mov	x4, #0x0                   	// #0
   246c8:	mov	x3, #0x0                   	// #0
   246cc:	mov	w1, #0x7a                  	// #122
   246d0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   246d4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   246d8:	ldr	x0, [x0, #4024]
   246dc:	ldr	x19, [x0]
   246e0:	bl	64f0 <__errno_location@plt>
   246e4:	mov	x2, x0
   246e8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   246ec:	mov	x1, x19
   246f0:	add	x0, x0, #0xf48
   246f4:	ldr	w2, [x2]
   246f8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   246fc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   24700:	bl	243a0 <__sanitizer_sandbox_on_notify@@Base+0xe18>
   24704:	nop
   24708:	str	x30, [sp, #-32]!
   2470c:	mov	w0, #0x9                   	// #9
   24710:	add	x1, sp, #0x10
   24714:	bl	6610 <getrlimit@plt>
   24718:	cbnz	w0, 24730 <__sanitizer_sandbox_on_notify@@Base+0x11a8>
   2471c:	ldr	x0, [sp, #16]
   24720:	ldr	x30, [sp], #32
   24724:	cmn	x0, #0x1
   24728:	cset	w0, eq  // eq = none
   2472c:	ret
   24730:	sxtw	x4, w0
   24734:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24738:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   2473c:	add	x2, x2, #0xf70
   24740:	add	x0, x0, #0xec0
   24744:	mov	x3, #0x0                   	// #0
   24748:	mov	w1, #0x5c                  	// #92
   2474c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   24750:	stp	x19, x30, [sp, #-32]!
   24754:	mov	w0, #0x9                   	// #9
   24758:	add	x19, sp, #0x10
   2475c:	mov	x1, x19
   24760:	bl	6610 <getrlimit@plt>
   24764:	cbnz	w0, 247e4 <__sanitizer_sandbox_on_notify@@Base+0x125c>
   24768:	mov	x2, #0xffffffffffffffff    	// #-1
   2476c:	mov	x1, x19
   24770:	mov	w0, #0x9                   	// #9
   24774:	str	x2, [sp, #16]
   24778:	bl	6560 <setrlimit@plt>
   2477c:	cbnz	w0, 24810 <__sanitizer_sandbox_on_notify@@Base+0x1288>
   24780:	mov	x1, x19
   24784:	mov	w0, #0x9                   	// #9
   24788:	bl	6610 <getrlimit@plt>
   2478c:	sxtw	x4, w0
   24790:	cbnz	w0, 247a8 <__sanitizer_sandbox_on_notify@@Base+0x1220>
   24794:	ldr	x0, [sp, #16]
   24798:	cmn	x0, #0x1
   2479c:	b.ne	247c4 <__sanitizer_sandbox_on_notify@@Base+0x123c>  // b.any
   247a0:	ldp	x19, x30, [sp], #32
   247a4:	ret
   247a8:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   247ac:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   247b0:	add	x2, x2, #0xf70
   247b4:	add	x0, x0, #0xec0
   247b8:	mov	x3, #0x0                   	// #0
   247bc:	mov	w1, #0x5c                  	// #92
   247c0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   247c4:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   247c8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   247cc:	add	x2, x2, #0xfc0
   247d0:	add	x0, x0, #0xec0
   247d4:	mov	x4, #0x0                   	// #0
   247d8:	mov	x3, #0x0                   	// #0
   247dc:	mov	w1, #0x84                  	// #132
   247e0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   247e4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   247e8:	ldr	x0, [x0, #4024]
   247ec:	ldr	x19, [x0]
   247f0:	bl	64f0 <__errno_location@plt>
   247f4:	mov	x2, x0
   247f8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   247fc:	mov	x1, x19
   24800:	add	x0, x0, #0xf48
   24804:	ldr	w2, [x2]
   24808:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2480c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   24810:	bl	243a0 <__sanitizer_sandbox_on_notify@@Base+0xe18>
   24814:	nop
   24818:	b	62d0 <sleep@plt>
   2481c:	nop
   24820:	mov	w1, #0x3e8                 	// #1000
   24824:	mul	w0, w0, w1
   24828:	b	64b0 <usleep@plt>
   2482c:	nop
   24830:	stp	x19, x30, [sp, #-176]!
   24834:	mov	w0, #0x6                   	// #6
   24838:	bl	1d690 <__sanitizer_set_report_fd@@Base+0x58d0>
   2483c:	cbnz	w0, 24844 <__sanitizer_sandbox_on_notify@@Base+0x12bc>
   24840:	bl	65a0 <abort@plt>
   24844:	add	x19, sp, #0x18
   24848:	mov	x2, #0x98                  	// #152
   2484c:	mov	w1, #0x0                   	// #0
   24850:	mov	x0, x19
   24854:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   24858:	str	xzr, [sp, #24]
   2485c:	mov	x1, x19
   24860:	mov	x2, #0x0                   	// #0
   24864:	mov	w0, #0x6                   	// #6
   24868:	bl	239c0 <__sanitizer_sandbox_on_notify@@Base+0x438>
   2486c:	bl	65a0 <abort@plt>
   24870:	b	34140 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x598>
   24874:	nop
   24878:	str	x30, [sp, #-16]!
   2487c:	bl	6310 <isatty@plt>
   24880:	cmp	w0, #0x0
   24884:	cset	w0, ne  // ne = any
   24888:	ldr	x30, [sp], #16
   2488c:	ret
   24890:	str	x30, [sp, #-64]!
   24894:	mov	x0, #0x0                   	// #0
   24898:	add	x1, sp, #0x10
   2489c:	bl	6620 <sigaltstack@plt>
   248a0:	cbnz	w0, 2490c <__sanitizer_sandbox_on_notify@@Base+0x1384>
   248a4:	ldr	w0, [sp, #24]
   248a8:	tbnz	w0, #1, 248b4 <__sanitizer_sandbox_on_notify@@Base+0x132c>
   248ac:	ldr	x30, [sp], #64
   248b0:	ret
   248b4:	mov	w2, #0x0                   	// #0
   248b8:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   248bc:	mov	x0, #0x10000               	// #65536
   248c0:	add	x1, x1, #0x18
   248c4:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   248c8:	mov	x3, x0
   248cc:	mov	x2, #0x10000               	// #65536
   248d0:	add	x0, sp, #0x28
   248d4:	mov	x1, #0x0                   	// #0
   248d8:	str	x3, [sp, #40]
   248dc:	str	wzr, [sp, #48]
   248e0:	str	x2, [sp, #56]
   248e4:	bl	6620 <sigaltstack@plt>
   248e8:	sxtw	x4, w0
   248ec:	cbz	w0, 248ac <__sanitizer_sandbox_on_notify@@Base+0x1324>
   248f0:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   248f4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   248f8:	add	x2, x2, #0x30
   248fc:	add	x0, x0, #0xec0
   24900:	mov	x3, #0x0                   	// #0
   24904:	mov	w1, #0xbb                  	// #187
   24908:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2490c:	sxtw	x4, w0
   24910:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24914:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24918:	add	x2, x2, #0xfe8
   2491c:	add	x0, x0, #0xec0
   24920:	mov	x3, #0x0                   	// #0
   24924:	mov	w1, #0xb0                  	// #176
   24928:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2492c:	nop
   24930:	mov	w3, #0x2                   	// #2
   24934:	mov	x2, #0x10000               	// #65536
   24938:	str	x30, [sp, #-64]!
   2493c:	add	x1, sp, #0x28
   24940:	add	x0, sp, #0x10
   24944:	str	xzr, [sp, #16]
   24948:	str	w3, [sp, #24]
   2494c:	str	x2, [sp, #32]
   24950:	bl	6620 <sigaltstack@plt>
   24954:	cbnz	w0, 2496c <__sanitizer_sandbox_on_notify@@Base+0x13e4>
   24958:	ldr	x0, [sp, #40]
   2495c:	ldr	x1, [sp, #56]
   24960:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   24964:	ldr	x30, [sp], #64
   24968:	ret
   2496c:	sxtw	x4, w0
   24970:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   24974:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24978:	add	x2, x2, #0x60
   2497c:	add	x0, x0, #0xec0
   24980:	mov	x3, #0x0                   	// #0
   24984:	mov	w1, #0xc3                  	// #195
   24988:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2498c:	nop
   24990:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24994:	stp	x19, x30, [sp, #-16]!
   24998:	mov	x19, x0
   2499c:	ldr	x1, [x1, #4056]
   249a0:	ldrb	w0, [x1, #97]
   249a4:	cbnz	w0, 249f4 <__sanitizer_sandbox_on_notify@@Base+0x146c>
   249a8:	mov	x1, x19
   249ac:	mov	w0, #0xb                   	// #11
   249b0:	bl	243d0 <__sanitizer_sandbox_on_notify@@Base+0xe48>
   249b4:	mov	x1, x19
   249b8:	mov	w0, #0x7                   	// #7
   249bc:	bl	243d0 <__sanitizer_sandbox_on_notify@@Base+0xe48>
   249c0:	mov	x1, x19
   249c4:	mov	w0, #0x6                   	// #6
   249c8:	bl	243d0 <__sanitizer_sandbox_on_notify@@Base+0xe48>
   249cc:	mov	x1, x19
   249d0:	mov	w0, #0x8                   	// #8
   249d4:	bl	243d0 <__sanitizer_sandbox_on_notify@@Base+0xe48>
   249d8:	mov	x1, x19
   249dc:	mov	w0, #0x4                   	// #4
   249e0:	bl	243d0 <__sanitizer_sandbox_on_notify@@Base+0xe48>
   249e4:	mov	x1, x19
   249e8:	mov	w0, #0x5                   	// #5
   249ec:	ldp	x19, x30, [sp], #16
   249f0:	b	243d0 <__sanitizer_sandbox_on_notify@@Base+0xe48>
   249f4:	bl	24890 <__sanitizer_sandbox_on_notify@@Base+0x1308>
   249f8:	b	249a8 <__sanitizer_sandbox_on_notify@@Base+0x1420>
   249fc:	nop
   24a00:	stp	x19, x20, [sp, #-32]!
   24a04:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24a08:	mov	x19, x0
   24a0c:	ldr	x20, [x20, #4016]
   24a10:	stp	x21, x30, [sp, #16]
   24a14:	ldr	x21, [x0, #16]
   24a18:	ldr	x0, [x20]
   24a1c:	cbz	x0, 24a88 <__sanitizer_sandbox_on_notify@@Base+0x1500>
   24a20:	ldr	x1, [x19, #32]
   24a24:	add	x21, x21, x0
   24a28:	mov	w0, #0x0                   	// #0
   24a2c:	cmp	x21, x1
   24a30:	b.ls	24a7c <__sanitizer_sandbox_on_notify@@Base+0x14f4>  // b.plast
   24a34:	mov	x2, #0xffff                	// #65535
   24a38:	add	x1, x1, x2
   24a3c:	ldr	x2, [x19, #16]
   24a40:	cmp	x2, x1
   24a44:	b.cs	24a7c <__sanitizer_sandbox_on_notify@@Base+0x14f4>  // b.hs, b.nlast
   24a48:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24a4c:	mov	w0, #0x1                   	// #1
   24a50:	ldr	x2, [x19]
   24a54:	ldr	x1, [x1, #3624]
   24a58:	ldr	w2, [x2, #8]
   24a5c:	ldr	w1, [x1]
   24a60:	cmp	w2, w1
   24a64:	b.eq	24a7c <__sanitizer_sandbox_on_notify@@Base+0x14f4>  // b.none
   24a68:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24a6c:	ldr	x0, [x0, #3648]
   24a70:	ldr	w0, [x0]
   24a74:	cmp	w0, w2
   24a78:	cset	w0, eq  // eq = none
   24a7c:	ldp	x21, x30, [sp, #16]
   24a80:	ldp	x19, x20, [sp], #32
   24a84:	ret
   24a88:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   24a8c:	str	x0, [x20]
   24a90:	b	24a20 <__sanitizer_sandbox_on_notify@@Base+0x1498>
   24a94:	nop
   24a98:	stp	x19, x20, [sp, #-64]!
   24a9c:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24aa0:	mov	x19, x1
   24aa4:	ldr	x20, [x20, #4016]
   24aa8:	stp	x21, x22, [sp, #16]
   24aac:	mov	x21, x0
   24ab0:	ldr	x4, [x20]
   24ab4:	str	x30, [sp, #32]
   24ab8:	cbz	x4, 24b4c <__sanitizer_sandbox_on_notify@@Base+0x15c4>
   24abc:	add	x4, x4, x4, lsl #2
   24ac0:	cmp	x19, x4, lsl #1
   24ac4:	lsl	x4, x4, #1
   24ac8:	b.cs	24b68 <__sanitizer_sandbox_on_notify@@Base+0x15e0>  // b.hs, b.nlast
   24acc:	add	x0, sp, #0x38
   24ad0:	mov	w22, #0x0                   	// #0
   24ad4:	bl	6230 <pipe@plt>
   24ad8:	mov	w20, w0
   24adc:	cbz	w0, 24af4 <__sanitizer_sandbox_on_notify@@Base+0x156c>
   24ae0:	mov	w0, w22
   24ae4:	ldp	x21, x22, [sp, #16]
   24ae8:	ldr	x30, [sp, #32]
   24aec:	ldp	x19, x20, [sp], #64
   24af0:	ret
   24af4:	ldr	w0, [sp, #60]
   24af8:	mov	x2, x19
   24afc:	mov	x1, x21
   24b00:	bl	1c188 <__sanitizer_set_report_fd@@Base+0x43c8>
   24b04:	mov	x21, x0
   24b08:	add	x1, sp, #0x34
   24b0c:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   24b10:	tst	w0, #0xff
   24b14:	b.eq	24b84 <__sanitizer_sandbox_on_notify@@Base+0x15fc>  // b.none
   24b18:	ldrsw	x4, [sp, #52]
   24b1c:	mov	w22, w20
   24b20:	cmp	x4, #0xe
   24b24:	b.ne	24ba0 <__sanitizer_sandbox_on_notify@@Base+0x1618>  // b.any
   24b28:	ldr	w0, [sp, #56]
   24b2c:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   24b30:	ldr	w0, [sp, #60]
   24b34:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   24b38:	mov	w0, w22
   24b3c:	ldp	x21, x22, [sp, #16]
   24b40:	ldr	x30, [sp, #32]
   24b44:	ldp	x19, x20, [sp], #64
   24b48:	ret
   24b4c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   24b50:	mov	x4, x0
   24b54:	str	x0, [x20]
   24b58:	add	x4, x4, x4, lsl #2
   24b5c:	cmp	x19, x4, lsl #1
   24b60:	lsl	x4, x4, #1
   24b64:	b.cc	24acc <__sanitizer_sandbox_on_notify@@Base+0x1544>  // b.lo, b.ul, b.last
   24b68:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   24b6c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24b70:	mov	x3, x19
   24b74:	add	x2, x2, #0x90
   24b78:	add	x0, x0, #0xec0
   24b7c:	mov	w1, #0x118                 	// #280
   24b80:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   24b84:	ldr	w0, [sp, #56]
   24b88:	cmp	x19, x21
   24b8c:	cset	w22, eq  // eq = none
   24b90:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   24b94:	ldr	w0, [sp, #60]
   24b98:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   24b9c:	b	24b38 <__sanitizer_sandbox_on_notify@@Base+0x15b0>
   24ba0:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   24ba4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24ba8:	add	x2, x2, #0xb0
   24bac:	add	x0, x0, #0xec0
   24bb0:	mov	x3, #0xe                   	// #14
   24bb4:	mov	w1, #0x121                 	// #289
   24bb8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   24bbc:	nop
   24bc0:	b	20048 <__sanitizer_on_print@@Base+0x7e8>
   24bc4:	nop
   24bc8:	stp	x19, x20, [sp, #-64]!
   24bcc:	mov	x20, x0
   24bd0:	mov	x19, x1
   24bd4:	stp	x21, x22, [sp, #16]
   24bd8:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24bdc:	mov	x22, x2
   24be0:	ldr	x21, [x21, #4016]
   24be4:	ldr	x3, [x21]
   24be8:	str	x30, [sp, #32]
   24bec:	cbz	x3, 24c50 <__sanitizer_sandbox_on_notify@@Base+0x16c8>
   24bf0:	sub	x1, x3, #0x1
   24bf4:	tst	x3, x1
   24bf8:	b.ne	24cc0 <__sanitizer_sandbox_on_notify@@Base+0x1738>  // b.any
   24bfc:	neg	x3, x3
   24c00:	add	x19, x19, x1
   24c04:	and	x19, x19, x3
   24c08:	mov	x4, x22
   24c0c:	and	x20, x20, x3
   24c10:	mov	w2, #0x3                   	// #3
   24c14:	mov	w3, #0x4032                	// #16434
   24c18:	mov	x1, x19
   24c1c:	mov	x0, x20
   24c20:	bl	1ee28 <__sanitizer_set_report_fd@@Base+0x7068>
   24c24:	add	x1, sp, #0x3c
   24c28:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   24c2c:	tst	w0, #0xff
   24c30:	b.ne	24c84 <__sanitizer_sandbox_on_notify@@Base+0x16fc>  // b.any
   24c34:	mov	x0, x19
   24c38:	bl	14ba0 <_ZdaPvRKSt9nothrow_t@@Base+0x2ee0>
   24c3c:	mov	w0, #0x1                   	// #1
   24c40:	ldp	x21, x22, [sp, #16]
   24c44:	ldr	x30, [sp, #32]
   24c48:	ldp	x19, x20, [sp], #64
   24c4c:	ret
   24c50:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   24c54:	str	x0, [x21]
   24c58:	sub	x1, x0, #0x1
   24c5c:	tst	x0, x1
   24c60:	b.ne	24cc0 <__sanitizer_sandbox_on_notify@@Base+0x1738>  // b.any
   24c64:	add	x19, x19, x1
   24c68:	neg	x3, x0
   24c6c:	and	x19, x19, x3
   24c70:	cbnz	x0, 24c08 <__sanitizer_sandbox_on_notify@@Base+0x1680>
   24c74:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   24c78:	neg	x3, x0
   24c7c:	str	x0, [x21]
   24c80:	b	24c08 <__sanitizer_sandbox_on_notify@@Base+0x1680>
   24c84:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24c88:	ldr	w5, [sp, #60]
   24c8c:	mov	x4, x20
   24c90:	mov	x3, x19
   24c94:	ldr	x1, [x1, #4024]
   24c98:	mov	x2, x19
   24c9c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   24ca0:	add	x0, x0, #0xd0
   24ca4:	ldr	x1, [x1]
   24ca8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   24cac:	mov	w0, #0x0                   	// #0
   24cb0:	ldp	x21, x22, [sp, #16]
   24cb4:	ldr	x30, [sp, #32]
   24cb8:	ldp	x19, x20, [sp], #64
   24cbc:	ret
   24cc0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   24cc4:	add	x0, x0, #0xb38
   24cc8:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   24ccc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   24cd0:	stp	x19, x20, [sp, #-64]!
   24cd4:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24cd8:	ldr	x19, [x19, #4016]
   24cdc:	stp	x21, x22, [sp, #16]
   24ce0:	mov	x21, x0
   24ce4:	stp	x23, x30, [sp, #32]
   24ce8:	mov	x22, x1
   24cec:	mov	x23, x2
   24cf0:	ldr	x5, [x19]
   24cf4:	cbz	x5, 24d78 <__sanitizer_sandbox_on_notify@@Base+0x17f0>
   24cf8:	sub	x20, x5, #0x1
   24cfc:	tst	x5, x20
   24d00:	b.ne	24e0c <__sanitizer_sandbox_on_notify@@Base+0x1884>  // b.any
   24d04:	neg	x5, x5
   24d08:	add	x20, x22, x20
   24d0c:	and	x20, x20, x5
   24d10:	mov	x4, x23
   24d14:	and	x19, x21, x5
   24d18:	mov	w3, #0x4032                	// #16434
   24d1c:	mov	w2, #0x3                   	// #3
   24d20:	mov	x1, x20
   24d24:	mov	x0, x19
   24d28:	bl	1ee28 <__sanitizer_set_report_fd@@Base+0x7068>
   24d2c:	add	x1, sp, #0x3c
   24d30:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   24d34:	tst	w0, #0xff
   24d38:	b.ne	24dac <__sanitizer_sandbox_on_notify@@Base+0x1824>  // b.any
   24d3c:	mov	x0, x20
   24d40:	bl	14ba0 <_ZdaPvRKSt9nothrow_t@@Base+0x2ee0>
   24d44:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24d48:	mov	x1, x22
   24d4c:	ldr	x0, [x0, #4056]
   24d50:	ldrb	w19, [x0, #208]
   24d54:	mov	x0, x21
   24d58:	cbz	w19, 24dec <__sanitizer_sandbox_on_notify@@Base+0x1864>
   24d5c:	mov	w2, #0xf                   	// #15
   24d60:	bl	64a0 <madvise@plt>
   24d64:	mov	w0, w19
   24d68:	ldp	x21, x22, [sp, #16]
   24d6c:	ldp	x23, x30, [sp, #32]
   24d70:	ldp	x19, x20, [sp], #64
   24d74:	ret
   24d78:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   24d7c:	str	x0, [x19]
   24d80:	sub	x20, x0, #0x1
   24d84:	tst	x0, x20
   24d88:	b.ne	24e0c <__sanitizer_sandbox_on_notify@@Base+0x1884>  // b.any
   24d8c:	add	x20, x22, x20
   24d90:	neg	x5, x0
   24d94:	and	x20, x20, x5
   24d98:	cbnz	x0, 24d10 <__sanitizer_sandbox_on_notify@@Base+0x1788>
   24d9c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   24da0:	neg	x5, x0
   24da4:	str	x0, [x19]
   24da8:	b	24d10 <__sanitizer_sandbox_on_notify@@Base+0x1788>
   24dac:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24db0:	ldr	w5, [sp, #60]
   24db4:	mov	x4, x19
   24db8:	mov	x3, x20
   24dbc:	ldr	x1, [x1, #4024]
   24dc0:	mov	x2, x20
   24dc4:	mov	w19, #0x0                   	// #0
   24dc8:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   24dcc:	add	x0, x0, #0xd0
   24dd0:	ldr	x1, [x1]
   24dd4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   24dd8:	mov	w0, w19
   24ddc:	ldp	x21, x22, [sp, #16]
   24de0:	ldp	x23, x30, [sp, #32]
   24de4:	ldp	x19, x20, [sp], #64
   24de8:	ret
   24dec:	mov	w2, #0xe                   	// #14
   24df0:	mov	w19, #0x1                   	// #1
   24df4:	bl	64a0 <madvise@plt>
   24df8:	mov	w0, w19
   24dfc:	ldp	x21, x22, [sp, #16]
   24e00:	ldp	x23, x30, [sp, #32]
   24e04:	ldp	x19, x20, [sp], #64
   24e08:	ret
   24e0c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   24e10:	add	x0, x0, #0xb38
   24e14:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   24e18:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   24e1c:	nop
   24e20:	stp	x19, x20, [sp, #-32]!
   24e24:	mov	x19, x0
   24e28:	mov	x20, x2
   24e2c:	stp	x21, x30, [sp, #16]
   24e30:	mov	x21, x1
   24e34:	cbz	x3, 24e60 <__sanitizer_sandbox_on_notify@@Base+0x18d8>
   24e38:	mov	x4, x2
   24e3c:	mov	x0, x3
   24e40:	mov	w2, #0x0                   	// #0
   24e44:	mov	w3, #0x4032                	// #16434
   24e48:	bl	1ee28 <__sanitizer_set_report_fd@@Base+0x7068>
   24e4c:	stp	x0, x21, [x19]
   24e50:	str	x20, [x19, #16]
   24e54:	ldp	x21, x30, [sp, #16]
   24e58:	ldp	x19, x20, [sp], #32
   24e5c:	ret
   24e60:	mov	x5, #0x0                   	// #0
   24e64:	mov	w4, #0xffffffff            	// #-1
   24e68:	mov	w3, #0x4022                	// #16418
   24e6c:	mov	w2, #0x0                   	// #0
   24e70:	mov	x0, #0x0                   	// #0
   24e74:	bl	1c0e0 <__sanitizer_set_report_fd@@Base+0x4320>
   24e78:	stp	x0, x21, [x19]
   24e7c:	str	x20, [x19, #16]
   24e80:	ldp	x21, x30, [sp, #16]
   24e84:	ldp	x19, x20, [sp], #32
   24e88:	ret
   24e8c:	nop
   24e90:	mov	x0, x1
   24e94:	mov	x1, x2
   24e98:	mov	x2, x3
   24e9c:	b	1ee10 <__sanitizer_set_report_fd@@Base+0x7050>
   24ea0:	mov	x0, x1
   24ea4:	mov	x1, x2
   24ea8:	mov	x2, x3
   24eac:	b	1ee00 <__sanitizer_set_report_fd@@Base+0x7040>
   24eb0:	ldr	x4, [x0, #8]
   24eb4:	str	x30, [sp, #-16]!
   24eb8:	mov	x5, x0
   24ebc:	cmp	x2, x4
   24ec0:	b.hi	24f1c <__sanitizer_sandbox_on_notify@@Base+0x1994>  // b.pmore
   24ec4:	mov	x0, x1
   24ec8:	ldr	x1, [x5]
   24ecc:	cmp	x1, x0
   24ed0:	b.eq	24ef8 <__sanitizer_sandbox_on_notify@@Base+0x1970>  // b.none
   24ed4:	add	x1, x1, x4
   24ed8:	add	x3, x2, x0
   24edc:	cmp	x3, x1
   24ee0:	b.ne	24f38 <__sanitizer_sandbox_on_notify@@Base+0x19b0>  // b.any
   24ee4:	ldr	x30, [sp], #16
   24ee8:	sub	x4, x4, x2
   24eec:	str	x4, [x5, #8]
   24ef0:	mov	x1, x2
   24ef4:	b	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   24ef8:	ldr	x30, [sp], #16
   24efc:	cmp	x2, x4
   24f00:	add	x1, x2, x0
   24f04:	sub	x4, x4, x2
   24f08:	csel	x1, x1, xzr, ne  // ne = any
   24f0c:	str	x1, [x5]
   24f10:	str	x4, [x5, #8]
   24f14:	mov	x1, x2
   24f18:	b	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   24f1c:	mov	x3, x2
   24f20:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24f24:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   24f28:	add	x0, x0, #0xec0
   24f2c:	add	x2, x2, #0x120
   24f30:	mov	w1, #0x16d                 	// #365
   24f34:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   24f38:	mov	x4, x1
   24f3c:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   24f40:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7458>
   24f44:	add	x2, x2, #0x138
   24f48:	add	x0, x0, #0xec0
   24f4c:	mov	w1, #0x172                 	// #370
   24f50:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   24f54:	nop
   24f58:	mov	x4, x2
   24f5c:	mov	w3, #0x4032                	// #16434
   24f60:	mov	w2, #0x0                   	// #0
   24f64:	b	1ee28 <__sanitizer_set_report_fd@@Base+0x7068>
   24f68:	mov	x1, x0
   24f6c:	mov	x5, #0x0                   	// #0
   24f70:	mov	w4, #0xffffffff            	// #-1
   24f74:	mov	w3, #0x4022                	// #16418
   24f78:	mov	w2, #0x0                   	// #0
   24f7c:	mov	x0, #0x0                   	// #0
   24f80:	b	1c0e0 <__sanitizer_set_report_fd@@Base+0x4320>
   24f84:	nop
   24f88:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24f8c:	ldr	x3, [x3, #3728]
   24f90:	cbz	x3, 24f98 <__sanitizer_sandbox_on_notify@@Base+0x1a10>
   24f94:	b	62c0 <real_pthread_attr_getstack@plt>
   24f98:	b	6460 <pthread_attr_getstack@plt>
   24f9c:	nop
   24fa0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   24fa4:	stp	x19, x20, [sp, #-48]!
   24fa8:	mov	x20, x0
   24fac:	ldr	x1, [x1, #3728]
   24fb0:	str	x30, [sp, #16]
   24fb4:	stp	xzr, xzr, [sp, #32]
   24fb8:	add	x2, sp, #0x28
   24fbc:	cbz	x1, 25038 <__sanitizer_sandbox_on_notify@@Base+0x1ab0>
   24fc0:	add	x1, sp, #0x20
   24fc4:	bl	62c0 <real_pthread_attr_getstack@plt>
   24fc8:	ldr	x1, [sp, #32]
   24fcc:	cbz	x1, 24fdc <__sanitizer_sandbox_on_notify@@Base+0x1a54>
   24fd0:	ldr	x0, [sp, #40]
   24fd4:	cmn	x1, x0
   24fd8:	b.ne	25000 <__sanitizer_sandbox_on_notify@@Base+0x1a78>  // b.any
   24fdc:	bl	23d88 <__sanitizer_sandbox_on_notify@@Base+0x800>
   24fe0:	add	x19, x0, #0x20, lsl #12
   24fe4:	ldr	x1, [sp, #40]
   24fe8:	cmp	x1, #0x0
   24fec:	ccmp	x19, x1, #0x0, ne  // ne = any
   24ff0:	b.hi	25044 <__sanitizer_sandbox_on_notify@@Base+0x1abc>  // b.pmore
   24ff4:	ldr	x30, [sp, #16]
   24ff8:	ldp	x19, x20, [sp], #48
   24ffc:	ret
   25000:	bl	23d88 <__sanitizer_sandbox_on_notify@@Base+0x800>
   25004:	add	x2, x0, #0x20, lsl #12
   25008:	ldr	x1, [sp, #40]
   2500c:	cmp	x2, x1
   25010:	b.ls	24ff4 <__sanitizer_sandbox_on_notify@@Base+0x1a6c>  // b.plast
   25014:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25018:	add	x0, x0, #0x1a8
   2501c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   25020:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25024:	add	x0, x0, #0x1e8
   25028:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2502c:	ldr	x30, [sp, #16]
   25030:	ldp	x19, x20, [sp], #48
   25034:	ret
   25038:	add	x1, sp, #0x20
   2503c:	bl	6460 <pthread_attr_getstack@plt>
   25040:	b	24fc8 <__sanitizer_sandbox_on_notify@@Base+0x1a40>
   25044:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   25048:	ldr	x0, [x0, #3816]
   2504c:	ldr	w0, [x0]
   25050:	cbnz	w0, 2506c <__sanitizer_sandbox_on_notify@@Base+0x1ae4>
   25054:	mov	x1, x19
   25058:	mov	x0, x20
   2505c:	bl	6480 <pthread_attr_setstacksize@plt>
   25060:	ldr	x30, [sp, #16]
   25064:	ldp	x19, x20, [sp], #48
   25068:	ret
   2506c:	mov	x2, x19
   25070:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25074:	add	x0, x0, #0x178
   25078:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2507c:	b	25054 <__sanitizer_sandbox_on_notify@@Base+0x1acc>
   25080:	stp	x19, x20, [sp, #-80]!
   25084:	mov	w20, w4
   25088:	stp	x21, x22, [sp, #16]
   2508c:	mov	w22, w2
   25090:	mov	w21, w3
   25094:	stp	x23, x24, [sp, #32]
   25098:	mov	x23, x0
   2509c:	mov	x24, x1
   250a0:	str	x30, [sp, #48]
   250a4:	bl	1c7a8 <__sanitizer_set_report_fd@@Base+0x49e8>
   250a8:	mov	w19, w0
   250ac:	cmp	w0, #0x0
   250b0:	b.lt	25100 <__sanitizer_sandbox_on_notify@@Base+0x1b78>  // b.tstop
   250b4:	b.eq	25128 <__sanitizer_sandbox_on_notify@@Base+0x1ba0>  // b.none
   250b8:	cmn	w22, #0x1
   250bc:	b.eq	250c8 <__sanitizer_sandbox_on_notify@@Base+0x1b40>  // b.none
   250c0:	mov	w0, w22
   250c4:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   250c8:	cmn	w21, #0x1
   250cc:	b.eq	250d8 <__sanitizer_sandbox_on_notify@@Base+0x1b50>  // b.none
   250d0:	mov	w0, w21
   250d4:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   250d8:	cmn	w20, #0x1
   250dc:	b.eq	250e8 <__sanitizer_sandbox_on_notify@@Base+0x1b60>  // b.none
   250e0:	mov	w0, w20
   250e4:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   250e8:	mov	w0, w19
   250ec:	ldp	x21, x22, [sp, #16]
   250f0:	ldp	x23, x24, [sp, #32]
   250f4:	ldr	x30, [sp, #48]
   250f8:	ldp	x19, x20, [sp], #80
   250fc:	ret
   25100:	add	x1, sp, #0x4c
   25104:	sxtw	x0, w0
   25108:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   2510c:	tst	w0, #0xff
   25110:	b.eq	250b8 <__sanitizer_sandbox_on_notify@@Base+0x1b30>  // b.none
   25114:	ldr	w1, [sp, #76]
   25118:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2511c:	add	x0, x0, #0x218
   25120:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   25124:	b	250b8 <__sanitizer_sandbox_on_notify@@Base+0x1b30>
   25128:	cmn	w22, #0x1
   2512c:	b.eq	25148 <__sanitizer_sandbox_on_notify@@Base+0x1bc0>  // b.none
   25130:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   25134:	mov	w1, #0x0                   	// #0
   25138:	mov	w0, w22
   2513c:	bl	1c260 <__sanitizer_set_report_fd@@Base+0x44a0>
   25140:	mov	w0, w22
   25144:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   25148:	cmn	w21, #0x1
   2514c:	b.eq	2516c <__sanitizer_sandbox_on_notify@@Base+0x1be4>  // b.none
   25150:	mov	w0, #0x1                   	// #1
   25154:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   25158:	mov	w1, #0x1                   	// #1
   2515c:	mov	w0, w21
   25160:	bl	1c260 <__sanitizer_set_report_fd@@Base+0x44a0>
   25164:	mov	w0, w21
   25168:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   2516c:	cmn	w20, #0x1
   25170:	b.eq	25190 <__sanitizer_sandbox_on_notify@@Base+0x1c08>  // b.none
   25174:	mov	w0, #0x2                   	// #2
   25178:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   2517c:	mov	w1, #0x2                   	// #2
   25180:	mov	w0, w20
   25184:	bl	1c260 <__sanitizer_set_report_fd@@Base+0x44a0>
   25188:	mov	w0, w20
   2518c:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   25190:	mov	w0, #0x4                   	// #4
   25194:	bl	65c0 <sysconf@plt>
   25198:	mov	x19, x0
   2519c:	cmp	w0, #0x2
   251a0:	b.le	251b8 <__sanitizer_sandbox_on_notify@@Base+0x1c30>
   251a4:	mov	w0, w19
   251a8:	sub	w19, w19, #0x1
   251ac:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   251b0:	cmp	w19, #0x2
   251b4:	b.ne	251a4 <__sanitizer_sandbox_on_notify@@Base+0x1c1c>  // b.any
   251b8:	mov	x1, x24
   251bc:	mov	x0, x23
   251c0:	bl	6220 <execv@plt>
   251c4:	mov	w0, #0x1                   	// #1
   251c8:	bl	1c2e0 <__sanitizer_set_report_fd@@Base+0x4520>
   251cc:	nop
   251d0:	stp	x19, x30, [sp, #-32]!
   251d4:	mov	w2, #0x1                   	// #1
   251d8:	add	x1, sp, #0x18
   251dc:	bl	1c720 <__sanitizer_set_report_fd@@Base+0x4960>
   251e0:	add	x1, sp, #0x1c
   251e4:	mov	x19, x0
   251e8:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   251ec:	cmp	x19, #0x0
   251f0:	cset	w19, eq  // eq = none
   251f4:	tst	w0, #0xff
   251f8:	b.ne	25208 <__sanitizer_sandbox_on_notify@@Base+0x1c80>  // b.any
   251fc:	mov	w0, w19
   25200:	ldp	x19, x30, [sp], #32
   25204:	ret
   25208:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2520c:	mov	w19, #0x0                   	// #0
   25210:	ldr	x0, [x0, #3816]
   25214:	ldr	w0, [x0]
   25218:	cbz	w0, 251fc <__sanitizer_sandbox_on_notify@@Base+0x1c74>
   2521c:	ldr	w1, [sp, #28]
   25220:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25224:	add	x0, x0, #0x240
   25228:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2522c:	mov	w0, w19
   25230:	ldp	x19, x30, [sp], #32
   25234:	ret
   25238:	stp	x19, x30, [sp, #-32]!
   2523c:	mov	w2, #0x0                   	// #0
   25240:	add	x1, sp, #0x18
   25244:	bl	1c720 <__sanitizer_set_report_fd@@Base+0x4960>
   25248:	add	x1, sp, #0x1c
   2524c:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   25250:	tst	w0, #0xff
   25254:	b.ne	25268 <__sanitizer_sandbox_on_notify@@Base+0x1ce0>  // b.any
   25258:	ldr	w19, [sp, #24]
   2525c:	mov	w0, w19
   25260:	ldp	x19, x30, [sp], #32
   25264:	ret
   25268:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2526c:	mov	w19, #0xffffffff            	// #-1
   25270:	ldr	x0, [x0, #3816]
   25274:	ldr	w0, [x0]
   25278:	cbz	w0, 2525c <__sanitizer_sandbox_on_notify@@Base+0x1cd4>
   2527c:	ldr	w1, [sp, #28]
   25280:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25284:	add	x0, x0, #0x240
   25288:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2528c:	b	2525c <__sanitizer_sandbox_on_notify@@Base+0x1cd4>
   25290:	cmp	w0, #0x1
   25294:	cset	w0, eq  // eq = none
   25298:	ret
   2529c:	nop
   252a0:	ldr	x0, [x0, #24]
   252a4:	ret
   252a8:	mov	x0, #0x22                  	// #34
   252ac:	ret
   252b0:	ldr	x4, [x0, #24]
   252b4:	cmp	x1, x4
   252b8:	b.cs	252c8 <__sanitizer_sandbox_on_notify@@Base+0x1d40>  // b.hs, b.nlast
   252bc:	ldr	x0, [x0, #8]
   252c0:	ldr	x0, [x0, x1, lsl #3]
   252c4:	ret
   252c8:	str	x30, [sp, #-16]!
   252cc:	mov	x3, x1
   252d0:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   252d4:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   252d8:	add	x2, x2, #0x270
   252dc:	add	x0, x0, #0x298
   252e0:	mov	w1, #0x204                 	// #516
   252e4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   252e8:	stp	x19, x20, [sp, #-352]!
   252ec:	mov	x19, x2
   252f0:	adrp	x4, 25000 <__sanitizer_sandbox_on_notify@@Base+0x1a78>
   252f4:	ldr	x2, [x0]
   252f8:	stp	x21, x22, [sp, #16]
   252fc:	add	x4, x4, #0x2b0
   25300:	stp	x23, x30, [sp, #32]
   25304:	mov	x20, x3
   25308:	ldr	x2, [x2, #24]
   2530c:	cmp	x2, x4
   25310:	b.ne	253b4 <__sanitizer_sandbox_on_notify@@Base+0x1e2c>  // b.any
   25314:	ldr	x4, [x0, #24]
   25318:	mov	x3, x1
   2531c:	cmp	x1, x4
   25320:	b.cs	253d8 <__sanitizer_sandbox_on_notify@@Base+0x1e50>  // b.hs, b.nlast
   25324:	ldr	x0, [x0, #8]
   25328:	ldr	x21, [x0, x1, lsl #3]
   2532c:	add	x3, sp, #0x40
   25330:	mov	x2, #0x1                   	// #1
   25334:	mov	w1, w21
   25338:	add	x22, sp, #0x50
   2533c:	mov	x23, #0x110                 	// #272
   25340:	mov	w0, #0x4204                	// #16900
   25344:	stp	x22, x23, [sp, #64]
   25348:	bl	1c708 <__sanitizer_set_report_fd@@Base+0x4948>
   2534c:	add	x1, sp, #0x3c
   25350:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   25354:	tst	w0, #0xff
   25358:	b.eq	25388 <__sanitizer_sandbox_on_notify@@Base+0x1e00>  // b.none
   2535c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   25360:	ldr	w2, [sp, #60]
   25364:	ldr	x0, [x0, #3816]
   25368:	ldr	w0, [x0]
   2536c:	cbnz	w0, 253c0 <__sanitizer_sandbox_on_notify@@Base+0x1e38>
   25370:	cmp	w2, #0x3
   25374:	csetm	w0, eq  // eq = none
   25378:	ldp	x21, x22, [sp, #16]
   2537c:	ldp	x23, x30, [sp, #32]
   25380:	ldp	x19, x20, [sp], #352
   25384:	ret
   25388:	ldr	x0, [sp, #328]
   2538c:	str	x0, [x20]
   25390:	mov	x2, x23
   25394:	mov	x1, x22
   25398:	mov	x0, x19
   2539c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   253a0:	mov	w0, #0x1                   	// #1
   253a4:	ldp	x21, x22, [sp, #16]
   253a8:	ldp	x23, x30, [sp, #32]
   253ac:	ldp	x19, x20, [sp], #352
   253b0:	ret
   253b4:	blr	x2
   253b8:	mov	x21, x0
   253bc:	b	2532c <__sanitizer_sandbox_on_notify@@Base+0x1da4>
   253c0:	mov	w1, w21
   253c4:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   253c8:	add	x0, x0, #0x300
   253cc:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   253d0:	ldr	w2, [sp, #60]
   253d4:	b	25370 <__sanitizer_sandbox_on_notify@@Base+0x1de8>
   253d8:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   253dc:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   253e0:	add	x2, x2, #0x270
   253e4:	add	x0, x0, #0x298
   253e8:	mov	w1, #0x204                 	// #516
   253ec:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   253f0:	stp	x19, x20, [sp, #-32]!
   253f4:	adrp	x20, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   253f8:	ldr	x19, [x20, #1952]
   253fc:	str	x30, [sp, #24]
   25400:	cbz	x19, 2541c <__sanitizer_sandbox_on_notify@@Base+0x1e94>
   25404:	bl	1c738 <__sanitizer_set_report_fd@@Base+0x4978>
   25408:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2540c:	ldr	x1, [x1, #3744]
   25410:	ldr	x1, [x1]
   25414:	cmp	x0, x1
   25418:	b.eq	25428 <__sanitizer_sandbox_on_notify@@Base+0x1ea0>  // b.none
   2541c:	ldr	x30, [sp, #24]
   25420:	ldp	x19, x20, [sp], #32
   25424:	ret
   25428:	ldr	x0, [x19, #32]
   2542c:	cbz	x0, 25464 <__sanitizer_sandbox_on_notify@@Base+0x1edc>
   25430:	str	x21, [sp, #16]
   25434:	mov	x21, #0x0                   	// #0
   25438:	ldr	x1, [x19, #16]
   2543c:	mov	x3, #0x0                   	// #0
   25440:	mov	x2, #0x0                   	// #0
   25444:	mov	w0, #0x8                   	// #8
   25448:	ldr	x1, [x1, x21, lsl #3]
   2544c:	add	x21, x21, #0x1
   25450:	bl	1c708 <__sanitizer_set_report_fd@@Base+0x4948>
   25454:	ldr	x0, [x19, #32]
   25458:	cmp	x0, x21
   2545c:	b.hi	25438 <__sanitizer_sandbox_on_notify@@Base+0x1eb0>  // b.pmore
   25460:	ldr	x21, [sp, #16]
   25464:	str	xzr, [x20, #1952]
   25468:	b	2541c <__sanitizer_sandbox_on_notify@@Base+0x1e94>
   2546c:	nop
   25470:	stp	x19, x20, [sp, #-96]!
   25474:	mov	x19, x1
   25478:	mov	x20, x0
   2547c:	ldr	x1, [x0, #32]
   25480:	stp	x21, x22, [sp, #16]
   25484:	str	x30, [sp, #64]
   25488:	cbz	x1, 254c8 <__sanitizer_sandbox_on_notify@@Base+0x1f40>
   2548c:	mov	x2, #0x0                   	// #0
   25490:	ldr	x4, [x0, #16]
   25494:	b	254a4 <__sanitizer_sandbox_on_notify@@Base+0x1f1c>
   25498:	add	x2, x2, #0x1
   2549c:	cmp	x2, x1
   254a0:	b.eq	254c8 <__sanitizer_sandbox_on_notify@@Base+0x1f40>  // b.none
   254a4:	ldr	x3, [x4, x2, lsl #3]
   254a8:	cmp	x19, x3
   254ac:	b.ne	25498 <__sanitizer_sandbox_on_notify@@Base+0x1f10>  // b.any
   254b0:	mov	w21, #0x0                   	// #0
   254b4:	mov	w0, w21
   254b8:	ldp	x21, x22, [sp, #16]
   254bc:	ldr	x30, [sp, #64]
   254c0:	ldp	x19, x20, [sp], #96
   254c4:	ret
   254c8:	mov	x3, #0x0                   	// #0
   254cc:	mov	x2, #0x0                   	// #0
   254d0:	mov	w1, w19
   254d4:	mov	w0, #0x10                  	// #16
   254d8:	stp	x23, x24, [sp, #32]
   254dc:	bl	1c708 <__sanitizer_set_report_fd@@Base+0x4948>
   254e0:	add	x1, sp, #0x50
   254e4:	mov	w23, w19
   254e8:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   254ec:	ands	w21, w0, #0xff
   254f0:	b.ne	255ec <__sanitizer_sandbox_on_notify@@Base+0x2064>  // b.any
   254f4:	stp	x25, x26, [sp, #48]
   254f8:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   254fc:	ldr	x0, [x25, #3816]
   25500:	ldr	w0, [x0]
   25504:	sxtw	x0, w0
   25508:	cmp	x0, #0x1
   2550c:	b.hi	25618 <__sanitizer_sandbox_on_notify@@Base+0x2090>  // b.pmore
   25510:	add	x24, sp, #0x54
   25514:	add	x22, sp, #0x58
   25518:	mov	w2, #0x40000000            	// #1073741824
   2551c:	mov	x1, x24
   25520:	mov	w0, w23
   25524:	bl	1c720 <__sanitizer_set_report_fd@@Base+0x4960>
   25528:	mov	x1, x22
   2552c:	mov	x26, x0
   25530:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   25534:	tst	w0, #0xff
   25538:	b.eq	25548 <__sanitizer_sandbox_on_notify@@Base+0x1fc0>  // b.none
   2553c:	ldr	w0, [sp, #88]
   25540:	cmp	w0, #0x4
   25544:	b.eq	25518 <__sanitizer_sandbox_on_notify@@Base+0x1f90>  // b.none
   25548:	mov	x0, x26
   2554c:	mov	x1, x22
   25550:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   25554:	tst	w0, #0xff
   25558:	b.ne	25714 <__sanitizer_sandbox_on_notify@@Base+0x218c>  // b.any
   2555c:	ldr	w3, [sp, #84]
   25560:	and	w0, w3, #0xff
   25564:	cmp	w0, #0x7f
   25568:	b.ne	25590 <__sanitizer_sandbox_on_notify@@Base+0x2008>  // b.any
   2556c:	ubfx	x3, x3, #8, #8
   25570:	cmp	w3, #0x13
   25574:	b.eq	25590 <__sanitizer_sandbox_on_notify@@Base+0x2008>  // b.none
   25578:	and	x3, x3, #0xff
   2557c:	mov	w1, w23
   25580:	mov	x2, #0x0                   	// #0
   25584:	mov	w0, #0x7                   	// #7
   25588:	bl	1c708 <__sanitizer_set_report_fd@@Base+0x4948>
   2558c:	b	25518 <__sanitizer_sandbox_on_notify@@Base+0x1f90>
   25590:	ldr	x4, [x20, #24]
   25594:	str	x19, [sp, #88]
   25598:	ldr	x3, [x20, #32]
   2559c:	add	x21, x20, #0x10
   255a0:	lsr	x4, x4, #3
   255a4:	cmp	x3, x4
   255a8:	b.hi	256fc <__sanitizer_sandbox_on_notify@@Base+0x2174>  // b.pmore
   255ac:	add	x19, x3, #0x1
   255b0:	b.eq	2562c <__sanitizer_sandbox_on_notify@@Base+0x20a4>  // b.none
   255b4:	ldr	x23, [x20, #16]
   255b8:	str	x19, [x21, #16]
   255bc:	mov	x1, x22
   255c0:	add	x0, x23, x3, lsl #3
   255c4:	mov	x2, #0x8                   	// #8
   255c8:	mov	w21, #0x1                   	// #1
   255cc:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   255d0:	mov	w0, w21
   255d4:	ldp	x21, x22, [sp, #16]
   255d8:	ldp	x23, x24, [sp, #32]
   255dc:	ldp	x25, x26, [sp, #48]
   255e0:	ldr	x30, [sp, #64]
   255e4:	ldp	x19, x20, [sp], #96
   255e8:	ret
   255ec:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   255f0:	mov	w21, #0x0                   	// #0
   255f4:	ldr	x0, [x0, #3816]
   255f8:	ldr	w0, [x0]
   255fc:	cbnz	w0, 256e0 <__sanitizer_sandbox_on_notify@@Base+0x2158>
   25600:	mov	w0, w21
   25604:	ldp	x21, x22, [sp, #16]
   25608:	ldp	x23, x24, [sp, #32]
   2560c:	ldr	x30, [sp, #64]
   25610:	ldp	x19, x20, [sp], #96
   25614:	ret
   25618:	mov	x1, x19
   2561c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25620:	add	x0, x0, #0x368
   25624:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   25628:	b	25510 <__sanitizer_sandbox_on_notify@@Base+0x1f88>
   2562c:	tst	x3, x19
   25630:	b.eq	2566c <__sanitizer_sandbox_on_notify@@Base+0x20e4>  // b.none
   25634:	clz	x2, x19
   25638:	mov	w1, #0x3f                  	// #63
   2563c:	sub	w2, w1, w2
   25640:	mov	x1, #0x1                   	// #1
   25644:	add	w4, w2, #0x1
   25648:	lsl	x4, x1, x4
   2564c:	cmp	x4, x19
   25650:	b.ls	257ac <__sanitizer_sandbox_on_notify@@Base+0x2224>  // b.plast
   25654:	lsl	x1, x1, x2
   25658:	cmp	x1, x19
   2565c:	b.cs	2578c <__sanitizer_sandbox_on_notify@@Base+0x2204>  // b.hs, b.nlast
   25660:	cmp	x3, x4
   25664:	b.hi	25764 <__sanitizer_sandbox_on_notify@@Base+0x21dc>  // b.pmore
   25668:	mov	x19, x4
   2566c:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   25670:	lsl	x19, x19, #3
   25674:	ldr	x23, [x23, #4016]
   25678:	ldr	x0, [x23]
   2567c:	cbz	x0, 25740 <__sanitizer_sandbox_on_notify@@Base+0x21b8>
   25680:	sub	x1, x0, #0x1
   25684:	tst	x0, x1
   25688:	b.ne	2577c <__sanitizer_sandbox_on_notify@@Base+0x21f4>  // b.any
   2568c:	add	x19, x19, x1
   25690:	neg	x0, x0
   25694:	and	x19, x19, x0
   25698:	mov	w2, #0x0                   	// #0
   2569c:	mov	x0, x19
   256a0:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   256a4:	add	x1, x1, #0xb50
   256a8:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   256ac:	ldr	x1, [x20, #16]
   256b0:	mov	x23, x0
   256b4:	ldr	x2, [x21, #16]
   256b8:	lsl	x2, x2, #3
   256bc:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   256c0:	ldr	x1, [x21, #8]
   256c4:	ldr	x0, [x20, #16]
   256c8:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   256cc:	ldr	x3, [x21, #16]
   256d0:	str	x23, [x20, #16]
   256d4:	str	x19, [x21, #8]
   256d8:	add	x19, x3, #0x1
   256dc:	b	255b8 <__sanitizer_sandbox_on_notify@@Base+0x2030>
   256e0:	ldr	w2, [sp, #80]
   256e4:	mov	x1, x19
   256e8:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   256ec:	add	x0, x0, #0x338
   256f0:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   256f4:	ldp	x23, x24, [sp, #32]
   256f8:	b	254b4 <__sanitizer_sandbox_on_notify@@Base+0x1f2c>
   256fc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   25700:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   25704:	add	x2, x2, #0x808
   25708:	add	x0, x0, #0xad8
   2570c:	mov	w1, #0x1cd                 	// #461
   25710:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   25714:	ldr	x25, [x25, #3816]
   25718:	ldr	w0, [x25]
   2571c:	cbnz	w0, 2574c <__sanitizer_sandbox_on_notify@@Base+0x21c4>
   25720:	mov	w1, w19
   25724:	mov	x3, #0x0                   	// #0
   25728:	mov	x2, #0x0                   	// #0
   2572c:	mov	w0, #0x11                  	// #17
   25730:	bl	1c708 <__sanitizer_set_report_fd@@Base+0x4948>
   25734:	ldp	x23, x24, [sp, #32]
   25738:	ldp	x25, x26, [sp, #48]
   2573c:	b	254b4 <__sanitizer_sandbox_on_notify@@Base+0x1f2c>
   25740:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   25744:	str	x0, [x23]
   25748:	b	25680 <__sanitizer_sandbox_on_notify@@Base+0x20f8>
   2574c:	ldr	w2, [sp, #88]
   25750:	mov	x1, x19
   25754:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25758:	add	x0, x0, #0x388
   2575c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   25760:	b	25720 <__sanitizer_sandbox_on_notify@@Base+0x2198>
   25764:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   25768:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2576c:	add	x2, x2, #0x838
   25770:	add	x0, x0, #0xad8
   25774:	mov	w1, #0x20c                 	// #524
   25778:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2577c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   25780:	add	x0, x0, #0xb38
   25784:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   25788:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2578c:	mov	x4, x1
   25790:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   25794:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   25798:	mov	x3, x19
   2579c:	add	x2, x2, #0x648
   257a0:	add	x0, x0, #0xad8
   257a4:	mov	w1, #0x18b                 	// #395
   257a8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   257ac:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   257b0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   257b4:	mov	x3, x19
   257b8:	add	x2, x2, #0x5c0
   257bc:	add	x0, x0, #0xad8
   257c0:	mov	w1, #0x18a                 	// #394
   257c4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   257c8:	stp	x19, x20, [sp, #-80]!
   257cc:	mov	x20, x0
   257d0:	ldr	x0, [x0, #32]
   257d4:	str	x30, [sp, #56]
   257d8:	cbz	x0, 2589c <__sanitizer_sandbox_on_notify@@Base+0x2314>
   257dc:	mov	x19, #0x0                   	// #0
   257e0:	stp	x21, x22, [sp, #16]
   257e4:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   257e8:	stp	x23, x24, [sp, #32]
   257ec:	adrp	x24, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   257f0:	add	x23, sp, #0x4c
   257f4:	add	x24, x24, #0x3c0
   257f8:	str	x25, [sp, #48]
   257fc:	adrp	x25, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25800:	add	x25, x25, #0x3e0
   25804:	b	25838 <__sanitizer_sandbox_on_notify@@Base+0x22b0>
   25808:	ldr	x2, [x22, #3816]
   2580c:	mov	w1, w21
   25810:	mov	x0, x24
   25814:	ldr	w2, [x2]
   25818:	sxtw	x2, w2
   2581c:	cmp	x2, #0x1
   25820:	b.ls	25828 <__sanitizer_sandbox_on_notify@@Base+0x22a0>  // b.plast
   25824:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   25828:	ldr	x0, [x20, #32]
   2582c:	add	x19, x19, #0x1
   25830:	cmp	x0, x19
   25834:	b.ls	25890 <__sanitizer_sandbox_on_notify@@Base+0x2308>  // b.plast
   25838:	ldr	x1, [x20, #16]
   2583c:	mov	x3, #0x0                   	// #0
   25840:	mov	x2, #0x0                   	// #0
   25844:	mov	w0, #0x11                  	// #17
   25848:	ldr	x21, [x1, x19, lsl #3]
   2584c:	mov	w1, w21
   25850:	bl	1c708 <__sanitizer_set_report_fd@@Base+0x4948>
   25854:	mov	x1, x23
   25858:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   2585c:	tst	w0, #0xff
   25860:	b.eq	25808 <__sanitizer_sandbox_on_notify@@Base+0x2280>  // b.none
   25864:	ldr	x0, [x22, #3816]
   25868:	ldr	w0, [x0]
   2586c:	cbz	w0, 25828 <__sanitizer_sandbox_on_notify@@Base+0x22a0>
   25870:	ldr	w2, [sp, #76]
   25874:	mov	x0, x25
   25878:	mov	w1, w21
   2587c:	add	x19, x19, #0x1
   25880:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   25884:	ldr	x0, [x20, #32]
   25888:	cmp	x0, x19
   2588c:	b.hi	25838 <__sanitizer_sandbox_on_notify@@Base+0x22b0>  // b.pmore
   25890:	ldp	x21, x22, [sp, #16]
   25894:	ldp	x23, x24, [sp, #32]
   25898:	ldr	x25, [sp, #48]
   2589c:	ldr	x30, [sp, #56]
   258a0:	ldp	x19, x20, [sp], #80
   258a4:	ret
   258a8:	stp	x19, x20, [sp, #-32]!
   258ac:	mov	x20, x0
   258b0:	ldr	x0, [x0, #32]
   258b4:	str	x30, [sp, #16]
   258b8:	cbz	x0, 258e8 <__sanitizer_sandbox_on_notify@@Base+0x2360>
   258bc:	mov	x19, #0x0                   	// #0
   258c0:	ldr	x1, [x20, #16]
   258c4:	mov	x3, #0x0                   	// #0
   258c8:	mov	x2, #0x0                   	// #0
   258cc:	mov	w0, #0x8                   	// #8
   258d0:	ldr	x1, [x1, x19, lsl #3]
   258d4:	add	x19, x19, #0x1
   258d8:	bl	1c708 <__sanitizer_set_report_fd@@Base+0x4948>
   258dc:	ldr	x0, [x20, #32]
   258e0:	cmp	x0, x19
   258e4:	b.hi	258c0 <__sanitizer_sandbox_on_notify@@Base+0x2338>  // b.pmore
   258e8:	ldr	x30, [sp, #16]
   258ec:	ldp	x19, x20, [sp], #32
   258f0:	ret
   258f4:	nop
   258f8:	stp	x19, x20, [sp, #-96]!
   258fc:	mov	w20, w0
   25900:	add	x19, sp, #0x20
   25904:	stp	x21, x30, [sp, #16]
   25908:	mov	x0, x19
   2590c:	stp	x1, x2, [sp, #32]
   25910:	bl	1e120 <__sanitizer_set_report_fd@@Base+0x6360>
   25914:	mov	x1, x0
   25918:	mov	x0, x19
   2591c:	str	x1, [sp, #48]
   25920:	adrp	x21, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   25924:	bl	1e130 <__sanitizer_set_report_fd@@Base+0x6370>
   25928:	mov	w1, w0
   2592c:	mov	x0, x19
   25930:	strb	w1, [sp, #80]
   25934:	bl	1d808 <__sanitizer_set_report_fd@@Base+0x5a48>
   25938:	mov	w1, w0
   2593c:	mov	x0, x19
   25940:	str	w1, [sp, #84]
   25944:	bl	1d850 <__sanitizer_set_report_fd@@Base+0x5a90>
   25948:	mov	w1, w0
   2594c:	mov	x0, x19
   25950:	strb	w1, [sp, #88]
   25954:	bl	1d880 <__sanitizer_set_report_fd@@Base+0x5ac0>
   25958:	ldp	x2, x3, [sp, #48]
   2595c:	mov	w1, w20
   25960:	ldr	x4, [sp, #64]
   25964:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25968:	add	x0, x0, #0x410
   2596c:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   25970:	ldr	x19, [x21, #1952]
   25974:	cbz	x19, 259ac <__sanitizer_sandbox_on_notify@@Base+0x2424>
   25978:	mov	x0, x19
   2597c:	cmp	w20, #0x6
   25980:	b.eq	259bc <__sanitizer_sandbox_on_notify@@Base+0x2434>  // b.none
   25984:	bl	257c8 <__sanitizer_sandbox_on_notify@@Base+0x2240>
   25988:	adrp	x0, 25000 <__sanitizer_sandbox_on_notify@@Base+0x1a78>
   2598c:	add	x0, x0, #0x3f0
   25990:	bl	22f60 <__sanitizer_on_print@@Base+0x3700>
   25994:	tst	w0, #0xff
   25998:	b.eq	259c4 <__sanitizer_sandbox_on_notify@@Base+0x243c>  // b.none
   2599c:	ldr	x0, [x19]
   259a0:	mov	x1, #0x1                   	// #1
   259a4:	str	xzr, [x21, #1952]
   259a8:	str	x1, [x0, #104]
   259ac:	cmp	w20, #0x6
   259b0:	cset	w0, ne  // ne = any
   259b4:	add	w0, w0, #0x1
   259b8:	bl	1c2e0 <__sanitizer_set_report_fd@@Base+0x4520>
   259bc:	bl	258a8 <__sanitizer_sandbox_on_notify@@Base+0x2320>
   259c0:	b	25988 <__sanitizer_sandbox_on_notify@@Base+0x2400>
   259c4:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   259c8:	add	x0, x0, #0x448
   259cc:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   259d0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   259d4:	nop
   259d8:	stp	x19, x20, [sp, #-128]!
   259dc:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   259e0:	stp	x21, x22, [sp, #16]
   259e4:	mov	x22, x0
   259e8:	stp	x23, x24, [sp, #32]
   259ec:	add	x23, sp, #0x60
   259f0:	ldr	w1, [x22, #40]
   259f4:	mov	x0, x23
   259f8:	stp	x25, x30, [sp, #48]
   259fc:	bl	1c980 <__sanitizer_set_report_fd@@Base+0x4bc0>
   25a00:	str	xzr, [sp, #64]
   25a04:	ldr	x19, [x19, #4016]
   25a08:	stp	xzr, xzr, [sp, #72]
   25a0c:	ldr	x0, [x19]
   25a10:	cbz	x0, 25b3c <__sanitizer_sandbox_on_notify@@Base+0x25b4>
   25a14:	sub	x1, x0, #0x1
   25a18:	tst	x1, x0
   25a1c:	b.ne	25b48 <__sanitizer_sandbox_on_notify@@Base+0x25c0>  // b.any
   25a20:	add	x19, x0, #0x3ff
   25a24:	neg	x0, x0
   25a28:	and	x19, x19, x0
   25a2c:	mov	w2, #0x0                   	// #0
   25a30:	mov	x0, x19
   25a34:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   25a38:	add	x1, x1, #0xb50
   25a3c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   25a40:	ldr	x1, [sp, #64]
   25a44:	mov	x20, x0
   25a48:	ldr	x2, [sp, #80]
   25a4c:	add	x25, sp, #0x40
   25a50:	mov	w24, #0x0                   	// #0
   25a54:	lsl	x2, x2, #3
   25a58:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   25a5c:	ldp	x0, x1, [sp, #64]
   25a60:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   25a64:	stp	x20, x19, [sp, #64]
   25a68:	mov	x1, x25
   25a6c:	mov	x0, x23
   25a70:	bl	1cd90 <__sanitizer_set_report_fd@@Base+0x4fd0>
   25a74:	cbz	w0, 25b00 <__sanitizer_sandbox_on_notify@@Base+0x2578>
   25a78:	cmp	w0, #0x1
   25a7c:	b.ne	25a9c <__sanitizer_sandbox_on_notify@@Base+0x2514>  // b.any
   25a80:	ldr	x19, [sp, #64]
   25a84:	ldr	x21, [sp, #80]
   25a88:	add	x21, x19, x21, lsl #3
   25a8c:	cmp	x21, x19
   25a90:	b.eq	25b58 <__sanitizer_sandbox_on_notify@@Base+0x25d0>  // b.none
   25a94:	mov	w20, w0
   25a98:	b	25ab8 <__sanitizer_sandbox_on_notify@@Base+0x2530>
   25a9c:	ldr	x19, [sp, #64]
   25aa0:	ldr	x21, [sp, #80]
   25aa4:	add	x21, x19, x21, lsl #3
   25aa8:	cmp	x21, x19
   25aac:	b.eq	25af0 <__sanitizer_sandbox_on_notify@@Base+0x2568>  // b.none
   25ab0:	mov	w20, #0x0                   	// #0
   25ab4:	nop
   25ab8:	ldr	x1, [x19], #8
   25abc:	mov	x0, x22
   25ac0:	bl	25470 <__sanitizer_sandbox_on_notify@@Base+0x1ee8>
   25ac4:	ands	w0, w0, #0xff
   25ac8:	csel	w20, w20, w0, eq  // eq = none
   25acc:	cmp	x21, x19
   25ad0:	b.ne	25ab8 <__sanitizer_sandbox_on_notify@@Base+0x2530>  // b.any
   25ad4:	eor	w20, w20, #0x1
   25ad8:	and	w20, w20, #0xff
   25adc:	add	w24, w24, #0x1
   25ae0:	cmp	w20, #0x0
   25ae4:	ccmp	w24, #0x1d, #0x0, eq  // eq = none
   25ae8:	b.le	25a68 <__sanitizer_sandbox_on_notify@@Base+0x24e0>
   25aec:	ldr	x19, [sp, #64]
   25af0:	ldr	x0, [x22, #32]
   25af4:	cmp	x0, #0x0
   25af8:	cset	w20, ne  // ne = any
   25afc:	b	25b10 <__sanitizer_sandbox_on_notify@@Base+0x2588>
   25b00:	mov	x0, x22
   25b04:	bl	257c8 <__sanitizer_sandbox_on_notify@@Base+0x2240>
   25b08:	ldr	x19, [sp, #64]
   25b0c:	mov	w20, #0x0                   	// #0
   25b10:	ldr	x1, [sp, #72]
   25b14:	mov	x0, x19
   25b18:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   25b1c:	mov	x0, x23
   25b20:	bl	1d1f0 <__sanitizer_set_report_fd@@Base+0x5430>
   25b24:	mov	w0, w20
   25b28:	ldp	x21, x22, [sp, #16]
   25b2c:	ldp	x23, x24, [sp, #32]
   25b30:	ldp	x25, x30, [sp, #48]
   25b34:	ldp	x19, x20, [sp], #128
   25b38:	ret
   25b3c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   25b40:	str	x0, [x19]
   25b44:	b	25a14 <__sanitizer_sandbox_on_notify@@Base+0x248c>
   25b48:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   25b4c:	add	x0, x0, #0xb38
   25b50:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   25b54:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   25b58:	mov	w20, #0x0                   	// #0
   25b5c:	b	25adc <__sanitizer_sandbox_on_notify@@Base+0x2554>
   25b60:	stp	x19, x20, [sp, #-336]!
   25b64:	mov	x1, #0x9                   	// #9
   25b68:	mov	x4, #0x0                   	// #0
   25b6c:	mov	x3, #0x0                   	// #0
   25b70:	mov	x2, #0x0                   	// #0
   25b74:	stp	x21, x22, [sp, #16]
   25b78:	mov	x22, x0
   25b7c:	mov	w0, #0x1                   	// #1
   25b80:	stp	x23, x24, [sp, #32]
   25b84:	stp	x25, x26, [sp, #48]
   25b88:	stp	x27, x28, [sp, #64]
   25b8c:	str	x30, [sp, #80]
   25b90:	bl	1c788 <__sanitizer_set_report_fd@@Base+0x49c8>
   25b94:	bl	1c748 <__sanitizer_set_report_fd@@Base+0x4988>
   25b98:	ldr	x1, [x22, #112]
   25b9c:	cmp	x0, x1
   25ba0:	b.ne	25eb8 <__sanitizer_sandbox_on_notify@@Base+0x2930>  // b.any
   25ba4:	add	x19, x22, #0x10
   25ba8:	adrp	x27, 25000 <__sanitizer_sandbox_on_notify@@Base+0x1a78>
   25bac:	mov	x0, x19
   25bb0:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   25bb4:	mov	x0, x19
   25bb8:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   25bbc:	add	x0, x27, #0x3f0
   25bc0:	bl	22ee8 <__sanitizer_on_print@@Base+0x3688>
   25bc4:	tst	w0, #0xff
   25bc8:	b.eq	25e2c <__sanitizer_sandbox_on_notify@@Base+0x28a4>  // b.none
   25bcc:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   25bd0:	bl	1c748 <__sanitizer_set_report_fd@@Base+0x4988>
   25bd4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   25bd8:	add	x1, x1, #0xa20
   25bdc:	ldr	x20, [x21, #4016]
   25be0:	stp	x22, x1, [sp, #128]
   25be4:	mov	x19, x0
   25be8:	str	xzr, [sp, #144]
   25bec:	ldr	x1, [x20]
   25bf0:	stp	xzr, xzr, [sp, #152]
   25bf4:	cbz	x1, 25dc8 <__sanitizer_sandbox_on_notify@@Base+0x2840>
   25bf8:	sub	x0, x1, #0x1
   25bfc:	tst	x0, x1
   25c00:	b.ne	25e1c <__sanitizer_sandbox_on_notify@@Base+0x2894>  // b.any
   25c04:	mov	x2, #0x1fff                	// #8191
   25c08:	add	x20, x1, x2
   25c0c:	neg	x1, x1
   25c10:	mov	w2, #0x0                   	// #0
   25c14:	and	x20, x20, x1
   25c18:	adrp	x23, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   25c1c:	mov	x0, x20
   25c20:	add	x1, x23, #0xb50
   25c24:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   25c28:	mov	x24, x0
   25c2c:	ldr	x1, [sp, #144]
   25c30:	add	x28, sp, #0x80
   25c34:	ldr	x2, [sp, #160]
   25c38:	lsl	x2, x2, #3
   25c3c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   25c40:	ldp	x0, x1, [sp, #144]
   25c44:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   25c48:	stp	x24, x20, [sp, #144]
   25c4c:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   25c50:	ldr	x25, [x21, #4016]
   25c54:	str	x28, [x0, #1952]
   25c58:	str	w19, [sp, #168]
   25c5c:	ldr	x0, [x25]
   25c60:	cbz	x0, 25df4 <__sanitizer_sandbox_on_notify@@Base+0x286c>
   25c64:	sub	x19, x0, #0x1
   25c68:	ands	x19, x19, x0
   25c6c:	b.ne	25e1c <__sanitizer_sandbox_on_notify@@Base+0x2894>  // b.any
   25c70:	neg	x20, x0
   25c74:	mov	x24, #0x1fff                	// #8191
   25c78:	add	x0, x0, x24
   25c7c:	add	x1, x23, #0xb50
   25c80:	and	x20, x0, x20
   25c84:	mov	w2, #0x0                   	// #0
   25c88:	mov	x0, x20
   25c8c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   25c90:	mov	x2, #0x0                   	// #0
   25c94:	mov	x1, #0x0                   	// #0
   25c98:	mov	x26, x0
   25c9c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   25ca0:	mov	x1, #0x0                   	// #0
   25ca4:	mov	x0, #0x0                   	// #0
   25ca8:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   25cac:	cmp	x20, x24
   25cb0:	b.ls	25e3c <__sanitizer_sandbox_on_notify@@Base+0x28b4>  // b.plast
   25cb4:	add	x23, sp, #0x68
   25cb8:	mov	x2, #0x2000                	// #8192
   25cbc:	mov	w1, #0x0                   	// #0
   25cc0:	mov	x0, x26
   25cc4:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   25cc8:	mov	w25, #0x4                   	// #4
   25ccc:	mov	x0, x23
   25cd0:	mov	x2, #0x18                  	// #24
   25cd4:	mov	w1, #0x0                   	// #0
   25cd8:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   25cdc:	mov	x2, #0x2000                	// #8192
   25ce0:	mov	x0, x23
   25ce4:	adrp	x24, 25000 <__sanitizer_sandbox_on_notify@@Base+0x1a78>
   25ce8:	adrp	x23, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25cec:	add	x21, sp, #0xb8
   25cf0:	add	x24, x24, #0x8f8
   25cf4:	add	x23, x23, #0x590
   25cf8:	mov	x1, #0x0                   	// #0
   25cfc:	movk	w25, #0x800, lsl #16
   25d00:	str	x26, [sp, #104]
   25d04:	str	x2, [sp, #120]
   25d08:	bl	1c798 <__sanitizer_set_report_fd@@Base+0x49d8>
   25d0c:	nop
   25d10:	mov	x2, #0x98                  	// #152
   25d14:	mov	w1, #0x0                   	// #0
   25d18:	mov	x0, x21
   25d1c:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   25d20:	ldr	w0, [x23, x19, lsl #2]
   25d24:	mov	x1, x21
   25d28:	add	x19, x19, #0x1
   25d2c:	mov	x2, #0x0                   	// #0
   25d30:	str	x24, [sp, #184]
   25d34:	str	w25, [sp, #320]
   25d38:	bl	1c7c0 <__sanitizer_set_report_fd@@Base+0x4a00>
   25d3c:	cmp	x19, #0x7
   25d40:	b.ne	25d10 <__sanitizer_sandbox_on_notify@@Base+0x2788>  // b.any
   25d44:	mov	x0, x28
   25d48:	bl	259d8 <__sanitizer_sandbox_on_notify@@Base+0x2450>
   25d4c:	tst	w0, #0xff
   25d50:	b.ne	25dd8 <__sanitizer_sandbox_on_notify@@Base+0x2850>  // b.any
   25d54:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   25d58:	mov	w19, #0x3                   	// #3
   25d5c:	ldr	x0, [x0, #3816]
   25d60:	ldr	w0, [x0]
   25d64:	cbnz	w0, 25e0c <__sanitizer_sandbox_on_notify@@Base+0x2884>
   25d68:	add	x0, x27, #0x3f0
   25d6c:	bl	22f60 <__sanitizer_on_print@@Base+0x3700>
   25d70:	tst	w0, #0xff
   25d74:	b.eq	25ea8 <__sanitizer_sandbox_on_notify@@Base+0x2920>  // b.none
   25d78:	mov	x0, #0x1                   	// #1
   25d7c:	str	x0, [x22, #104]
   25d80:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   25d84:	mov	x1, x20
   25d88:	str	xzr, [x0, #1952]
   25d8c:	mov	x0, x26
   25d90:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   25d94:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   25d98:	add	x2, x1, #0xa20
   25d9c:	ldp	x0, x1, [sp, #144]
   25da0:	str	x2, [sp, #136]
   25da4:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   25da8:	mov	w0, w19
   25dac:	ldp	x21, x22, [sp, #16]
   25db0:	ldp	x23, x24, [sp, #32]
   25db4:	ldp	x25, x26, [sp, #48]
   25db8:	ldp	x27, x28, [sp, #64]
   25dbc:	ldr	x30, [sp, #80]
   25dc0:	ldp	x19, x20, [sp], #336
   25dc4:	ret
   25dc8:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   25dcc:	mov	x1, x0
   25dd0:	str	x0, [x20]
   25dd4:	b	25bf8 <__sanitizer_sandbox_on_notify@@Base+0x2670>
   25dd8:	ldp	x2, x1, [x22]
   25ddc:	add	x0, x28, #0x8
   25de0:	mov	w19, #0x0                   	// #0
   25de4:	blr	x2
   25de8:	mov	x0, x28
   25dec:	bl	257c8 <__sanitizer_sandbox_on_notify@@Base+0x2240>
   25df0:	b	25d68 <__sanitizer_sandbox_on_notify@@Base+0x27e0>
   25df4:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   25df8:	str	x0, [x25]
   25dfc:	sub	x19, x0, #0x1
   25e00:	ands	x19, x19, x0
   25e04:	b.eq	25c70 <__sanitizer_sandbox_on_notify@@Base+0x26e8>  // b.none
   25e08:	b	25e1c <__sanitizer_sandbox_on_notify@@Base+0x2894>
   25e0c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25e10:	add	x0, x0, #0x4a0
   25e14:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   25e18:	b	25d68 <__sanitizer_sandbox_on_notify@@Base+0x27e0>
   25e1c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   25e20:	add	x0, x0, #0xb38
   25e24:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   25e28:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   25e2c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25e30:	add	x0, x0, #0x478
   25e34:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   25e38:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   25e3c:	ldr	x21, [x21, #4016]
   25e40:	ldr	x0, [x21]
   25e44:	cbz	x0, 25e9c <__sanitizer_sandbox_on_notify@@Base+0x2914>
   25e48:	sub	x1, x0, #0x1
   25e4c:	tst	x1, x0
   25e50:	b.ne	25e1c <__sanitizer_sandbox_on_notify@@Base+0x2894>  // b.any
   25e54:	mov	x1, #0x1fff                	// #8191
   25e58:	add	x21, x0, x1
   25e5c:	neg	x0, x0
   25e60:	add	x1, x23, #0xb50
   25e64:	and	x21, x21, x0
   25e68:	mov	w2, #0x0                   	// #0
   25e6c:	mov	x0, x21
   25e70:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   25e74:	mov	x2, #0x0                   	// #0
   25e78:	mov	x23, x0
   25e7c:	mov	x1, x26
   25e80:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   25e84:	mov	x1, x20
   25e88:	mov	x0, x26
   25e8c:	mov	x20, x21
   25e90:	mov	x26, x23
   25e94:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   25e98:	b	25cb4 <__sanitizer_sandbox_on_notify@@Base+0x272c>
   25e9c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   25ea0:	str	x0, [x21]
   25ea4:	b	25e48 <__sanitizer_sandbox_on_notify@@Base+0x28c0>
   25ea8:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25eac:	add	x0, x0, #0x448
   25eb0:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   25eb4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   25eb8:	mov	w0, #0x4                   	// #4
   25ebc:	bl	1c2e0 <__sanitizer_set_report_fd@@Base+0x4520>
   25ec0:	stp	x19, x20, [sp, #-208]!
   25ec4:	mov	x4, #0x0                   	// #0
   25ec8:	mov	x20, x0
   25ecc:	mov	x19, x1
   25ed0:	mov	x3, #0x0                   	// #0
   25ed4:	mov	x2, #0x0                   	// #0
   25ed8:	mov	x1, #0x0                   	// #0
   25edc:	mov	w0, #0x3                   	// #3
   25ee0:	stp	x21, x22, [sp, #16]
   25ee4:	stp	x23, x24, [sp, #32]
   25ee8:	stp	x25, x26, [sp, #48]
   25eec:	str	x30, [sp, #64]
   25ef0:	bl	1c788 <__sanitizer_set_report_fd@@Base+0x49c8>
   25ef4:	mov	x22, x0
   25ef8:	cbz	w0, 2605c <__sanitizer_sandbox_on_notify@@Base+0x2ad4>
   25efc:	add	x24, sp, #0x58
   25f00:	add	x0, x24, #0x10
   25f04:	bl	1c5c0 <__sanitizer_set_report_fd@@Base+0x4800>
   25f08:	stp	x20, x19, [sp, #88]
   25f0c:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   25f10:	bl	1c738 <__sanitizer_set_report_fd@@Base+0x4978>
   25f14:	str	xzr, [sp, #192]
   25f18:	ldr	x20, [x20, #4016]
   25f1c:	str	x0, [sp, #200]
   25f20:	ldr	x19, [x20]
   25f24:	cbz	x19, 2604c <__sanitizer_sandbox_on_notify@@Base+0x2ac4>
   25f28:	mov	w2, #0x0                   	// #0
   25f2c:	add	x25, x19, #0x200, lsl #12
   25f30:	mov	x0, x25
   25f34:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25f38:	add	x1, x1, #0x4c0
   25f3c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   25f40:	mov	x1, x19
   25f44:	mov	x23, x0
   25f48:	bl	1da98 <__sanitizer_set_report_fd@@Base+0x5cd8>
   25f4c:	tst	w0, #0xff
   25f50:	b.eq	26178 <__sanitizer_sandbox_on_notify@@Base+0x2bf0>  // b.none
   25f54:	add	x0, x24, #0x10
   25f58:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   25f5c:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   25f60:	adrp	x20, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   25f64:	add	x1, x1, #0x7a0
   25f68:	add	x20, x20, #0x590
   25f6c:	mov	x19, #0x0                   	// #0
   25f70:	add	x0, x1, #0x10
   25f74:	mov	x21, x1
   25f78:	mov	x26, x0
   25f7c:	bl	1c8c8 <__sanitizer_set_report_fd@@Base+0x4b08>
   25f80:	ldr	w1, [x20, x19, lsl #2]
   25f84:	mov	x0, x26
   25f88:	add	x19, x19, #0x1
   25f8c:	bl	1c8e8 <__sanitizer_set_report_fd@@Base+0x4b28>
   25f90:	cmp	x19, #0x7
   25f94:	b.ne	25f80 <__sanitizer_sandbox_on_notify@@Base+0x29f8>  // b.any
   25f98:	add	x21, x21, #0x90
   25f9c:	mov	x1, x26
   25fa0:	mov	x2, x21
   25fa4:	mov	w0, #0x0                   	// #0
   25fa8:	bl	1c8b0 <__sanitizer_set_report_fd@@Base+0x4af0>
   25fac:	sxtw	x3, w0
   25fb0:	cbnz	w0, 26198 <__sanitizer_sandbox_on_notify@@Base+0x2c10>
   25fb4:	mov	x3, x24
   25fb8:	mov	w2, #0x700                 	// #1792
   25fbc:	mov	x6, #0x0                   	// #0
   25fc0:	mov	x5, #0x0                   	// #0
   25fc4:	mov	x4, #0x0                   	// #0
   25fc8:	add	x1, x23, x25
   25fcc:	movk	w2, #0x80, lsl #16
   25fd0:	adrp	x0, 25000 <__sanitizer_sandbox_on_notify@@Base+0x1a78>
   25fd4:	add	x0, x0, #0xb60
   25fd8:	bl	1d608 <__sanitizer_set_report_fd@@Base+0x5848>
   25fdc:	mov	x2, #0x0                   	// #0
   25fe0:	mov	x20, x0
   25fe4:	mov	x1, x21
   25fe8:	add	x19, sp, #0x54
   25fec:	mov	w0, #0x2                   	// #2
   25ff0:	bl	1c8b0 <__sanitizer_set_report_fd@@Base+0x4af0>
   25ff4:	mov	x0, x20
   25ff8:	mov	x1, x19
   25ffc:	str	wzr, [sp, #84]
   26000:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   26004:	tst	w0, #0xff
   26008:	b.eq	260a8 <__sanitizer_sandbox_on_notify@@Base+0x2b20>  // b.none
   2600c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   26010:	ldr	x0, [x0, #3816]
   26014:	ldr	w0, [x0]
   26018:	cbnz	w0, 26154 <__sanitizer_sandbox_on_notify@@Base+0x2bcc>
   2601c:	add	x0, x24, #0x10
   26020:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   26024:	mov	x1, x25
   26028:	mov	x0, x23
   2602c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   26030:	cbz	w22, 26078 <__sanitizer_sandbox_on_notify@@Base+0x2af0>
   26034:	ldp	x21, x22, [sp, #16]
   26038:	ldp	x23, x24, [sp, #32]
   2603c:	ldp	x25, x26, [sp, #48]
   26040:	ldr	x30, [sp, #64]
   26044:	ldp	x19, x20, [sp], #208
   26048:	ret
   2604c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   26050:	mov	x19, x0
   26054:	str	x0, [x20]
   26058:	b	25f28 <__sanitizer_sandbox_on_notify@@Base+0x29a0>
   2605c:	mov	x4, #0x0                   	// #0
   26060:	mov	x3, #0x0                   	// #0
   26064:	mov	x2, #0x0                   	// #0
   26068:	mov	x1, #0x1                   	// #1
   2606c:	mov	w0, #0x4                   	// #4
   26070:	bl	1c788 <__sanitizer_set_report_fd@@Base+0x49c8>
   26074:	b	25efc <__sanitizer_sandbox_on_notify@@Base+0x2974>
   26078:	mov	x4, #0x0                   	// #0
   2607c:	mov	x3, #0x0                   	// #0
   26080:	mov	x2, #0x0                   	// #0
   26084:	mov	x1, #0x0                   	// #0
   26088:	mov	w0, #0x4                   	// #4
   2608c:	bl	1c788 <__sanitizer_set_report_fd@@Base+0x49c8>
   26090:	ldp	x21, x22, [sp, #16]
   26094:	ldp	x23, x24, [sp, #32]
   26098:	ldp	x25, x26, [sp, #48]
   2609c:	ldr	x30, [sp, #64]
   260a0:	ldp	x19, x20, [sp], #208
   260a4:	ret
   260a8:	adrp	x26, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   260ac:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   260b0:	ldr	x0, [x26, #3744]
   260b4:	str	x20, [x0]
   260b8:	bl	1c738 <__sanitizer_set_report_fd@@Base+0x4978>
   260bc:	ldr	x5, [x21, #3736]
   260c0:	mov	x6, x0
   260c4:	mov	x1, x20
   260c8:	mov	x4, #0x0                   	// #0
   260cc:	mov	x3, #0x0                   	// #0
   260d0:	mov	x2, #0x0                   	// #0
   260d4:	mov	w0, #0x6d61                	// #28001
   260d8:	str	x6, [x5]
   260dc:	movk	w0, #0x5961, lsl #16
   260e0:	bl	1c788 <__sanitizer_set_report_fd@@Base+0x49c8>
   260e4:	add	x0, x24, #0x10
   260e8:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   260ec:	ldr	x0, [sp, #192]
   260f0:	cbnz	x0, 26104 <__sanitizer_sandbox_on_notify@@Base+0x2b7c>
   260f4:	nop
   260f8:	bl	6500 <sched_yield@plt>
   260fc:	ldr	x0, [sp, #192]
   26100:	cbz	x0, 260f8 <__sanitizer_sandbox_on_notify@@Base+0x2b70>
   26104:	mov	w2, #0x40000000            	// #1073741824
   26108:	mov	x1, #0x0                   	// #0
   2610c:	mov	w0, w20
   26110:	bl	1c720 <__sanitizer_set_report_fd@@Base+0x4960>
   26114:	mov	x1, x19
   26118:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x42f8>
   2611c:	tst	w0, #0xff
   26120:	b.eq	26140 <__sanitizer_sandbox_on_notify@@Base+0x2bb8>  // b.none
   26124:	ldr	w1, [sp, #84]
   26128:	cmp	w1, #0x4
   2612c:	b.eq	26104 <__sanitizer_sandbox_on_notify@@Base+0x2b7c>  // b.none
   26130:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   26134:	ldr	x0, [x0, #3816]
   26138:	ldr	w0, [x0]
   2613c:	cbnz	w0, 26168 <__sanitizer_sandbox_on_notify@@Base+0x2be0>
   26140:	ldr	x26, [x26, #3744]
   26144:	ldr	x21, [x21, #3736]
   26148:	str	xzr, [x26]
   2614c:	str	xzr, [x21]
   26150:	b	26024 <__sanitizer_sandbox_on_notify@@Base+0x2a9c>
   26154:	ldr	w1, [sp, #84]
   26158:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2615c:	add	x0, x0, #0x528
   26160:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   26164:	b	2601c <__sanitizer_sandbox_on_notify@@Base+0x2a94>
   26168:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2616c:	add	x0, x0, #0x558
   26170:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   26174:	b	26140 <__sanitizer_sandbox_on_notify@@Base+0x2bb8>
   26178:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2617c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26180:	add	x2, x2, #0x4d8
   26184:	add	x0, x0, #0x298
   26188:	mov	x4, #0x0                   	// #0
   2618c:	mov	x3, #0x0                   	// #0
   26190:	mov	w1, #0x154                 	// #340
   26194:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   26198:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2619c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   261a0:	add	x2, x2, #0x518
   261a4:	add	x0, x0, #0x298
   261a8:	mov	x4, #0x0                   	// #0
   261ac:	mov	w1, #0x1ae                 	// #430
   261b0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   261b4:	nop
   261b8:	ldr	x3, [x0, #24]
   261bc:	cbz	x3, 261ec <__sanitizer_sandbox_on_notify@@Base+0x2c64>
   261c0:	ldr	x4, [x0, #8]
   261c4:	mov	x0, #0x0                   	// #0
   261c8:	b	261d4 <__sanitizer_sandbox_on_notify@@Base+0x2c4c>
   261cc:	cmp	x0, x3
   261d0:	b.eq	261ec <__sanitizer_sandbox_on_notify@@Base+0x2c64>  // b.none
   261d4:	ldr	x2, [x4, x0, lsl #3]
   261d8:	add	x0, x0, #0x1
   261dc:	cmp	x2, x1
   261e0:	b.ne	261cc <__sanitizer_sandbox_on_notify@@Base+0x2c44>  // b.any
   261e4:	mov	w0, #0x1                   	// #1
   261e8:	ret
   261ec:	mov	w0, #0x0                   	// #0
   261f0:	ret
   261f4:	nop
   261f8:	stp	x19, x20, [sp, #-64]!
   261fc:	stp	x21, x22, [sp, #16]
   26200:	add	x21, x0, #0x8
   26204:	ldr	x4, [x0, #16]
   26208:	str	x1, [sp, #56]
   2620c:	ldr	x3, [x21, #16]
   26210:	str	x30, [sp, #32]
   26214:	lsr	x4, x4, #3
   26218:	cmp	x3, x4
   2621c:	b.hi	26308 <__sanitizer_sandbox_on_notify@@Base+0x2d80>  // b.pmore
   26220:	mov	x19, x0
   26224:	add	x20, x3, #0x1
   26228:	b.eq	26254 <__sanitizer_sandbox_on_notify@@Base+0x2ccc>  // b.none
   2622c:	ldr	x22, [x0, #8]
   26230:	str	x20, [x21, #16]
   26234:	add	x0, x22, x3, lsl #3
   26238:	add	x1, sp, #0x38
   2623c:	mov	x2, #0x8                   	// #8
   26240:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   26244:	ldp	x21, x22, [sp, #16]
   26248:	ldr	x30, [sp, #32]
   2624c:	ldp	x19, x20, [sp], #64
   26250:	ret
   26254:	tst	x3, x20
   26258:	b.eq	26294 <__sanitizer_sandbox_on_notify@@Base+0x2d0c>  // b.none
   2625c:	clz	x4, x20
   26260:	mov	w0, #0x3f                  	// #63
   26264:	sub	w0, w0, w4
   26268:	mov	x2, #0x1                   	// #1
   2626c:	add	w4, w0, #0x1
   26270:	lsl	x4, x2, x4
   26274:	cmp	x4, x20
   26278:	b.ls	26354 <__sanitizer_sandbox_on_notify@@Base+0x2dcc>  // b.plast
   2627c:	lsl	x0, x2, x0
   26280:	cmp	x20, x0
   26284:	b.ls	26370 <__sanitizer_sandbox_on_notify@@Base+0x2de8>  // b.plast
   26288:	cmp	x3, x4
   2628c:	b.hi	2632c <__sanitizer_sandbox_on_notify@@Base+0x2da4>  // b.pmore
   26290:	mov	x20, x4
   26294:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   26298:	lsl	x20, x20, #3
   2629c:	ldr	x22, [x22, #4016]
   262a0:	ldr	x0, [x22]
   262a4:	cbz	x0, 26320 <__sanitizer_sandbox_on_notify@@Base+0x2d98>
   262a8:	sub	x1, x0, #0x1
   262ac:	tst	x0, x1
   262b0:	b.ne	26344 <__sanitizer_sandbox_on_notify@@Base+0x2dbc>  // b.any
   262b4:	add	x20, x20, x1
   262b8:	neg	x0, x0
   262bc:	and	x20, x20, x0
   262c0:	mov	w2, #0x0                   	// #0
   262c4:	mov	x0, x20
   262c8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   262cc:	add	x1, x1, #0xb50
   262d0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   262d4:	ldr	x1, [x19, #8]
   262d8:	mov	x22, x0
   262dc:	ldr	x2, [x21, #16]
   262e0:	lsl	x2, x2, #3
   262e4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   262e8:	ldr	x0, [x19, #8]
   262ec:	ldr	x1, [x21, #8]
   262f0:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   262f4:	ldr	x3, [x21, #16]
   262f8:	str	x22, [x19, #8]
   262fc:	str	x20, [x21, #8]
   26300:	add	x20, x3, #0x1
   26304:	b	26230 <__sanitizer_sandbox_on_notify@@Base+0x2ca8>
   26308:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   2630c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   26310:	add	x2, x2, #0x808
   26314:	add	x0, x0, #0xad8
   26318:	mov	w1, #0x1cd                 	// #461
   2631c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   26320:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   26324:	str	x0, [x22]
   26328:	b	262a8 <__sanitizer_sandbox_on_notify@@Base+0x2d20>
   2632c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   26330:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   26334:	add	x2, x2, #0x838
   26338:	add	x0, x0, #0xad8
   2633c:	mov	w1, #0x20c                 	// #524
   26340:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   26344:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   26348:	add	x0, x0, #0xb38
   2634c:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   26350:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   26354:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   26358:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2635c:	mov	x3, x20
   26360:	add	x2, x2, #0x5c0
   26364:	add	x0, x0, #0xad8
   26368:	mov	w1, #0x18a                 	// #394
   2636c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   26370:	mov	x4, x0
   26374:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   26378:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2637c:	mov	x3, x20
   26380:	add	x2, x2, #0x648
   26384:	add	x0, x0, #0xad8
   26388:	mov	w1, #0x18b                 	// #395
   2638c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   26390:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   26394:	add	x0, x0, #0x328
   26398:	ret
   2639c:	nop
   263a0:	mov	w1, #0x1                   	// #1
   263a4:	strh	w1, [x0]
   263a8:	ret
   263ac:	nop
   263b0:	stp	x19, x20, [sp, #-80]!
   263b4:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   263b8:	mov	w1, #0x1                   	// #1
   263bc:	stp	x21, x22, [sp, #16]
   263c0:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   263c4:	add	x19, sp, #0x30
   263c8:	add	x22, x0, #0x8b0
   263cc:	strh	w1, [x0, #2224]
   263d0:	mov	x0, x19
   263d4:	str	x30, [sp, #32]
   263d8:	bl	19c28 <__sanitizer_set_report_fd@@Base+0x1e68>
   263dc:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   263e0:	ldr	x21, [x21, #3632]
   263e4:	mov	x1, #0x10                  	// #16
   263e8:	add	x20, x20, #0x8b8
   263ec:	mov	x0, x21
   263f0:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   263f4:	mov	x2, x0
   263f8:	adrp	x3, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   263fc:	add	x3, x3, #0x5b0
   26400:	mov	x0, x19
   26404:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   26408:	add	x1, x1, #0xdb0
   2640c:	stp	x20, x22, [x2]
   26410:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   26414:	mov	x1, #0x10                  	// #16
   26418:	mov	x0, x21
   2641c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   26420:	mov	x2, x0
   26424:	add	x4, x22, #0x1
   26428:	mov	x0, x19
   2642c:	adrp	x3, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26430:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   26434:	add	x3, x3, #0x600
   26438:	add	x1, x1, #0xd10
   2643c:	stp	x20, x4, [x2]
   26440:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   26444:	bl	26390 <__sanitizer_sandbox_on_notify@@Base+0x2e08>
   26448:	mov	x1, x0
   2644c:	mov	x2, #0x0                   	// #0
   26450:	mov	x0, x19
   26454:	bl	199c0 <__sanitizer_set_report_fd@@Base+0x1c00>
   26458:	mov	x0, x19
   2645c:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26460:	add	x1, x1, #0x618
   26464:	bl	19938 <__sanitizer_set_report_fd@@Base+0x1b78>
   26468:	bl	192c8 <__sanitizer_set_report_fd@@Base+0x1508>
   2646c:	ldrb	w0, [x22, #1]
   26470:	cbnz	w0, 26484 <__sanitizer_sandbox_on_notify@@Base+0x2efc>
   26474:	ldp	x21, x22, [sp, #16]
   26478:	ldr	x30, [sp, #32]
   2647c:	ldp	x19, x20, [sp], #80
   26480:	ret
   26484:	mov	x0, x19
   26488:	bl	193a8 <__sanitizer_set_report_fd@@Base+0x15e8>
   2648c:	ldp	x21, x22, [sp, #16]
   26490:	ldr	x30, [sp, #32]
   26494:	ldp	x19, x20, [sp], #80
   26498:	ret
   2649c:	nop
   264a0:	stp	x19, x20, [sp, #-64]!
   264a4:	mov	x20, x0
   264a8:	mov	x0, x1
   264ac:	stp	x21, x22, [sp, #16]
   264b0:	mov	x22, x2
   264b4:	mov	x21, x3
   264b8:	stp	x23, x30, [sp, #32]
   264bc:	bl	148a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2be8>
   264c0:	cbz	x0, 26594 <__sanitizer_sandbox_on_notify@@Base+0x300c>
   264c4:	mov	x19, x0
   264c8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   264cc:	ldr	x0, [x0, #4056]
   264d0:	ldr	x23, [x0, #176]
   264d4:	bl	1c738 <__sanitizer_set_report_fd@@Base+0x4978>
   264d8:	mov	x4, x19
   264dc:	mov	x5, x0
   264e0:	mov	x3, x23
   264e4:	adrp	x6, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   264e8:	add	x6, x6, #0xc28
   264ec:	mov	x1, #0x1000                	// #4096
   264f0:	mov	x0, x20
   264f4:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   264f8:	add	x2, x2, #0x6a0
   264fc:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   26500:	add	x2, sp, #0x3c
   26504:	mov	x0, x20
   26508:	mov	w1, #0x1                   	// #1
   2650c:	bl	1dae0 <__sanitizer_set_report_fd@@Base+0x5d20>
   26510:	mov	w19, w0
   26514:	cmn	w0, #0x1
   26518:	b.eq	2657c <__sanitizer_sandbox_on_notify@@Base+0x2ff4>  // b.none
   2651c:	mov	w0, w19
   26520:	mov	x4, #0x0                   	// #0
   26524:	mov	x3, #0x0                   	// #0
   26528:	mov	x2, #0x8                   	// #8
   2652c:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26530:	add	x1, x1, #0x790
   26534:	bl	1dc68 <__sanitizer_set_report_fd@@Base+0x5ea8>
   26538:	mov	x1, x22
   2653c:	lsl	x2, x21, #3
   26540:	mov	x4, #0x0                   	// #0
   26544:	mov	x3, #0x0                   	// #0
   26548:	mov	w0, w19
   2654c:	bl	1dc68 <__sanitizer_set_report_fd@@Base+0x5ea8>
   26550:	mov	w0, w19
   26554:	bl	1dc10 <__sanitizer_set_report_fd@@Base+0x5e50>
   26558:	mov	x2, x21
   2655c:	mov	x1, x20
   26560:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26564:	add	x0, x0, #0x6f0
   26568:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2656c:	ldp	x21, x22, [sp, #16]
   26570:	ldp	x23, x30, [sp, #32]
   26574:	ldp	x19, x20, [sp], #64
   26578:	ret
   2657c:	ldr	w2, [sp, #60]
   26580:	mov	x1, x20
   26584:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26588:	add	x0, x0, #0x6b0
   2658c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   26590:	b	2651c <__sanitizer_sandbox_on_notify@@Base+0x2f94>
   26594:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26598:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2659c:	add	x2, x2, #0x628
   265a0:	add	x0, x0, #0x638
   265a4:	mov	x4, #0x0                   	// #0
   265a8:	mov	x3, #0x0                   	// #0
   265ac:	mov	w1, #0x29                  	// #41
   265b0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   265b4:	nop
   265b8:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   265bc:	ldrb	w2, [x1, #2232]
   265c0:	cbz	w2, 265c8 <__sanitizer_sandbox_on_notify@@Base+0x3040>
   265c4:	ret
   265c8:	stp	x19, x30, [sp, #-16]!
   265cc:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   265d0:	and	w0, w0, #0xff
   265d4:	ldr	x19, [x19, #3896]
   265d8:	strb	w0, [x1, #2232]
   265dc:	mov	x0, x19
   265e0:	bl	24870 <__sanitizer_sandbox_on_notify@@Base+0x12e8>
   265e4:	mov	x0, x19
   265e8:	ldp	x19, x30, [sp], #16
   265ec:	b	22ee8 <__sanitizer_on_print@@Base+0x3688>

00000000000265f0 <__sanitizer_cov_trace_pc_guard@@Base>:
   265f0:	ldr	w3, [x0]
   265f4:	cbnz	w3, 265fc <__sanitizer_cov_trace_pc_guard@@Base+0xc>
   265f8:	ret
   265fc:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   26600:	add	x0, x0, #0x8b8
   26604:	add	x0, x0, #0x8
   26608:	str	x30, [sp, #-16]!
   2660c:	sub	w3, w3, #0x1
   26610:	ldr	x4, [x0, #24]
   26614:	ldr	x0, [x0, #8]
   26618:	cmp	x3, x4
   2661c:	b.cs	26638 <__sanitizer_cov_trace_pc_guard@@Base+0x48>  // b.hs, b.nlast
   26620:	ldr	x1, [x0, x3, lsl #3]
   26624:	cbnz	x1, 26630 <__sanitizer_cov_trace_pc_guard@@Base+0x40>
   26628:	sub	x30, x30, #0x1
   2662c:	str	x30, [x0, x3, lsl #3]
   26630:	ldr	x30, [sp], #16
   26634:	ret
   26638:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2663c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   26640:	add	x2, x2, #0x58
   26644:	add	x0, x0, #0xad8
   26648:	mov	w1, #0x1c5                 	// #453
   2664c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>

0000000000026650 <__sanitizer_cov_trace_pc_guard_init@@Base>:
   26650:	cmp	x0, x1
   26654:	b.eq	267b0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x160>  // b.none
   26658:	stp	x19, x20, [sp, #-48]!
   2665c:	mov	x19, x0
   26660:	ldr	w0, [x0]
   26664:	str	x30, [sp, #40]
   26668:	cbz	w0, 26678 <__sanitizer_cov_trace_pc_guard_init@@Base+0x28>
   2666c:	ldr	x30, [sp, #40]
   26670:	ldp	x19, x20, [sp], #48
   26674:	ret
   26678:	stp	x21, x22, [sp, #16]
   2667c:	adrp	x22, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   26680:	add	x0, x22, #0x8b8
   26684:	mov	x20, x1
   26688:	add	x21, x0, #0x8
   2668c:	ldrb	w1, [x0, #8]
   26690:	cbz	w1, 267b4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x164>
   26694:	cmp	x19, x20
   26698:	mov	x1, x19
   2669c:	b.eq	26864 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>  // b.none
   266a0:	add	x0, x22, #0x8b8
   266a4:	ldr	x0, [x0, #32]
   266a8:	mov	w21, w0
   266ac:	b.cs	26760 <__sanitizer_cov_trace_pc_guard_init@@Base+0x110>  // b.hs, b.nlast
   266b0:	sub	x3, x20, #0x1
   266b4:	sub	x3, x3, x19
   266b8:	cmp	x3, #0xf
   266bc:	lsr	x3, x3, #2
   266c0:	add	x4, x3, #0x1
   266c4:	b.ls	26888 <__sanitizer_cov_trace_pc_guard_init@@Base+0x238>  // b.plast
   266c8:	adrp	x5, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   266cc:	dup	v1.4s, w0
   266d0:	movi	v3.4s, #0x4
   266d4:	lsr	x2, x4, #2
   266d8:	ldr	q0, [x5, #1920]
   266dc:	add	x2, x19, x2, lsl #4
   266e0:	movi	v2.4s, #0x1
   266e4:	add	v1.4s, v1.4s, v0.4s
   266e8:	mov	v0.16b, v1.16b
   266ec:	add	v1.4s, v1.4s, v3.4s
   266f0:	add	v0.4s, v0.4s, v2.4s
   266f4:	str	q0, [x1], #16
   266f8:	cmp	x1, x2
   266fc:	b.ne	266e8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x98>  // b.any
   26700:	and	x2, x4, #0xfffffffffffffffc
   26704:	cmp	x4, x2
   26708:	add	w1, w21, w2
   2670c:	add	x19, x19, x2, lsl #2
   26710:	b.eq	26758 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.none
   26714:	mov	x2, x19
   26718:	add	w4, w1, #0x1
   2671c:	str	w4, [x2], #4
   26720:	cmp	x20, x2
   26724:	b.ls	26758 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.plast
   26728:	add	w2, w1, #0x2
   2672c:	str	w2, [x19, #4]
   26730:	add	x2, x19, #0x8
   26734:	cmp	x20, x2
   26738:	b.ls	26758 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.plast
   2673c:	add	w2, w1, #0x3
   26740:	str	w2, [x19, #8]
   26744:	add	x2, x19, #0xc
   26748:	cmp	x20, x2
   2674c:	b.ls	26758 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.plast
   26750:	add	w1, w1, #0x4
   26754:	str	w1, [x19, #12]
   26758:	add	w19, w21, #0x1
   2675c:	add	w21, w19, w3
   26760:	cmp	x0, w21, uxtw
   26764:	mov	w20, w21
   26768:	b.cs	26798 <__sanitizer_cov_trace_pc_guard_init@@Base+0x148>  // b.hs, b.nlast
   2676c:	add	x1, x22, #0x8b8
   26770:	add	x1, x1, #0x8
   26774:	ldr	x2, [x1, #16]
   26778:	cmp	x20, x2, lsr #3
   2677c:	b.hi	267f4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a4>  // b.pmore
   26780:	ldr	x21, [x1, #8]
   26784:	sub	x2, x20, x0
   26788:	mov	w1, #0x0                   	// #0
   2678c:	add	x0, x21, x0, lsl #3
   26790:	lsl	x2, x2, #3
   26794:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   26798:	add	x0, x22, #0x8b8
   2679c:	ldp	x21, x22, [sp, #16]
   267a0:	str	x20, [x0, #32]
   267a4:	ldr	x30, [sp, #40]
   267a8:	ldp	x19, x20, [sp], #48
   267ac:	ret
   267b0:	ret
   267b4:	mov	w1, #0x1                   	// #1
   267b8:	strb	w1, [x0, #8]
   267bc:	bl	263b0 <__sanitizer_sandbox_on_notify@@Base+0x2e28>
   267c0:	ldr	w0, [x19]
   267c4:	str	xzr, [x21, #8]
   267c8:	stp	xzr, xzr, [x21, #16]
   267cc:	cbz	w0, 26694 <__sanitizer_cov_trace_pc_guard_init@@Base+0x44>
   267d0:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   267d4:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   267d8:	add	x2, x2, #0x718
   267dc:	add	x0, x0, #0x638
   267e0:	mov	x4, #0x0                   	// #0
   267e4:	mov	x3, #0x0                   	// #0
   267e8:	mov	w1, #0x78                  	// #120
   267ec:	str	x23, [sp, #32]
   267f0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   267f4:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   267f8:	ldr	x19, [x19, #4016]
   267fc:	ldr	x0, [x19]
   26800:	str	x23, [sp, #32]
   26804:	cbz	x0, 26890 <__sanitizer_cov_trace_pc_guard_init@@Base+0x240>
   26808:	sub	x19, x0, #0x1
   2680c:	tst	x19, x0
   26810:	b.ne	2689c <__sanitizer_cov_trace_pc_guard_init@@Base+0x24c>  // b.any
   26814:	add	x23, x22, #0x8b8
   26818:	add	x19, x19, w21, uxtw #3
   2681c:	neg	x0, x0
   26820:	mov	w2, #0x0                   	// #0
   26824:	and	x19, x19, x0
   26828:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2682c:	mov	x0, x19
   26830:	add	x1, x1, #0xb50
   26834:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   26838:	mov	x21, x0
   2683c:	ldr	x1, [x23, #16]
   26840:	ldr	x2, [x23, #32]
   26844:	lsl	x2, x2, #3
   26848:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2684c:	ldp	x0, x1, [x23, #16]
   26850:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   26854:	stp	x21, x19, [x23, #16]
   26858:	ldr	x0, [x23, #32]
   2685c:	ldr	x23, [sp, #32]
   26860:	b	26784 <__sanitizer_cov_trace_pc_guard_init@@Base+0x134>
   26864:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26868:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2686c:	add	x2, x2, #0x730
   26870:	add	x0, x0, #0x638
   26874:	mov	x4, x19
   26878:	mov	x3, x19
   2687c:	mov	w1, #0x79                  	// #121
   26880:	str	x23, [sp, #32]
   26884:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   26888:	mov	w1, w0
   2688c:	b	26714 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc4>
   26890:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   26894:	str	x0, [x19]
   26898:	b	26808 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b8>
   2689c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   268a0:	add	x0, x0, #0xb38
   268a4:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   268a8:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   268ac:	nop

00000000000268b0 <__sanitizer_cov_reset@@Base>:
   268b0:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   268b4:	add	x0, x0, #0x8b8
   268b8:	add	x0, x0, #0x8
   268bc:	ldr	x2, [x0, #24]
   268c0:	ldr	x0, [x0, #8]
   268c4:	cbz	x2, 268d4 <__sanitizer_cov_reset@@Base+0x24>
   268c8:	lsl	x2, x2, #3
   268cc:	mov	w1, #0x0                   	// #0
   268d0:	b	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   268d4:	str	x30, [sp, #-16]!
   268d8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   268dc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   268e0:	add	x2, x2, #0x58
   268e4:	add	x0, x0, #0xad8
   268e8:	mov	x4, #0x0                   	// #0
   268ec:	mov	x3, #0x0                   	// #0
   268f0:	mov	w1, #0x1c5                 	// #453
   268f4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>

00000000000268f8 <__sanitizer_cov_trace_cmp@@Base>:
   268f8:	ret
   268fc:	nop

0000000000026900 <__sanitizer_cov_trace_cmp1@@Base>:
   26900:	ret
   26904:	nop

0000000000026908 <__sanitizer_cov_trace_cmp2@@Base>:
   26908:	ret
   2690c:	nop

0000000000026910 <__sanitizer_cov_trace_cmp4@@Base>:
   26910:	ret
   26914:	nop

0000000000026918 <__sanitizer_cov_trace_cmp8@@Base>:
   26918:	ret
   2691c:	nop

0000000000026920 <__sanitizer_cov_trace_const_cmp1@@Base>:
   26920:	ret
   26924:	nop

0000000000026928 <__sanitizer_cov_trace_const_cmp2@@Base>:
   26928:	ret
   2692c:	nop

0000000000026930 <__sanitizer_cov_trace_const_cmp4@@Base>:
   26930:	ret
   26934:	nop

0000000000026938 <__sanitizer_cov_trace_const_cmp8@@Base>:
   26938:	ret
   2693c:	nop

0000000000026940 <__sanitizer_cov_trace_switch@@Base>:
   26940:	ret
   26944:	nop

0000000000026948 <__sanitizer_cov_trace_div4@@Base>:
   26948:	ret
   2694c:	nop

0000000000026950 <__sanitizer_cov_trace_div8@@Base>:
   26950:	ret
   26954:	nop

0000000000026958 <__sanitizer_cov_trace_gep@@Base>:
   26958:	ret
   2695c:	nop

0000000000026960 <__sanitizer_cov_trace_pc_indir@@Base>:
   26960:	ret
   26964:	nop

0000000000026968 <__sanitizer_cov_8bit_counters_init@@Base>:
   26968:	ret
   2696c:	nop

0000000000026970 <__sanitizer_cov_pcs_init@@Base>:
   26970:	ret
   26974:	nop

0000000000026978 <__sanitizer_dump_coverage@@Base>:
   26978:	cbnz	x1, 26980 <__sanitizer_dump_coverage@@Base+0x8>
   2697c:	ret
   26980:	stp	x19, x20, [sp, #-128]!
   26984:	mov	x20, x1
   26988:	mov	x19, x0
   2698c:	mov	x2, #0x0                   	// #0
   26990:	mov	x1, #0x0                   	// #0
   26994:	mov	x0, #0x1000                	// #4096
   26998:	stp	x21, x22, [sp, #16]
   2699c:	lsl	x22, x20, #3
   269a0:	stp	x23, x24, [sp, #32]
   269a4:	mov	w23, #0x0                   	// #0
   269a8:	stp	x25, x26, [sp, #48]
   269ac:	mov	x26, #0x0                   	// #0
   269b0:	stp	x27, x28, [sp, #64]
   269b4:	adrp	x28, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   269b8:	mov	x27, #0x0                   	// #0
   269bc:	str	x30, [sp, #80]
   269c0:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   269c4:	mov	x2, #0x0                   	// #0
   269c8:	mov	x1, #0x0                   	// #0
   269cc:	mov	x25, x0
   269d0:	mov	x0, #0x1000                	// #4096
   269d4:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   269d8:	mov	x24, x0
   269dc:	mov	x2, #0x0                   	// #0
   269e0:	mov	x1, #0x0                   	// #0
   269e4:	mov	x0, x22
   269e8:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   269ec:	mov	x1, x19
   269f0:	mov	x2, x22
   269f4:	mov	x21, x0
   269f8:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   269fc:	mov	x0, x21
   26a00:	mov	x1, x20
   26a04:	mov	w2, #0x0                   	// #0
   26a08:	bl	26b68 <__sanitizer_cov_dump@@Base+0x8>
   26a0c:	add	x0, x28, #0x748
   26a10:	mov	x19, #0x0                   	// #0
   26a14:	str	x0, [sp, #104]
   26a18:	b	26a4c <__sanitizer_dump_coverage@@Base+0xd4>
   26a1c:	cbnz	w23, 26b00 <__sanitizer_dump_coverage@@Base+0x188>
   26a20:	mov	x3, x28
   26a24:	mov	x0, x22
   26a28:	mov	x26, x5
   26a2c:	mov	w23, w4
   26a30:	mov	x1, x24
   26a34:	mov	x27, x19
   26a38:	mov	x2, #0x1000                	// #4096
   26a3c:	bl	6240 <__sanitizer_get_module_and_offset_for_pc@plt>
   26a40:	add	x19, x19, #0x1
   26a44:	cmp	x20, x19
   26a48:	b.eq	26a9c <__sanitizer_dump_coverage@@Base+0x124>  // b.none
   26a4c:	ldr	x22, [x21, x19, lsl #3]
   26a50:	add	x28, x21, x19, lsl #3
   26a54:	mov	x3, x28
   26a58:	mov	x2, #0x0                   	// #0
   26a5c:	mov	x0, x22
   26a60:	mov	x1, #0x0                   	// #0
   26a64:	cbz	x22, 26a40 <__sanitizer_dump_coverage@@Base+0xc8>
   26a68:	bl	6240 <__sanitizer_get_module_and_offset_for_pc@plt>
   26a6c:	eor	w1, w23, #0x1
   26a70:	cbz	w0, 26af0 <__sanitizer_dump_coverage@@Base+0x178>
   26a74:	ldr	x5, [x21, x19, lsl #3]
   26a78:	sub	x5, x22, x5
   26a7c:	cmp	x5, x26
   26a80:	cset	w4, ne  // ne = any
   26a84:	orr	w4, w4, w1
   26a88:	cbnz	w4, 26a1c <__sanitizer_dump_coverage@@Base+0xa4>
   26a8c:	add	x19, x19, #0x1
   26a90:	mov	w23, #0x1                   	// #1
   26a94:	cmp	x20, x19
   26a98:	b.ne	26a4c <__sanitizer_dump_coverage@@Base+0xd4>  // b.any
   26a9c:	cbz	w23, 26ab4 <__sanitizer_dump_coverage@@Base+0x13c>
   26aa0:	sub	x3, x20, x27
   26aa4:	add	x2, x21, x27, lsl #3
   26aa8:	mov	x1, x24
   26aac:	mov	x0, x25
   26ab0:	bl	264a0 <__sanitizer_sandbox_on_notify@@Base+0x2f18>
   26ab4:	mov	x0, x25
   26ab8:	mov	x1, #0x0                   	// #0
   26abc:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   26ac0:	mov	x0, x24
   26ac4:	mov	x1, #0x0                   	// #0
   26ac8:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   26acc:	mov	x0, x21
   26ad0:	mov	x1, #0x0                   	// #0
   26ad4:	ldp	x21, x22, [sp, #16]
   26ad8:	ldp	x23, x24, [sp, #32]
   26adc:	ldp	x25, x26, [sp, #48]
   26ae0:	ldp	x27, x28, [sp, #64]
   26ae4:	ldr	x30, [sp, #80]
   26ae8:	ldp	x19, x20, [sp], #128
   26aec:	b	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   26af0:	ldr	x0, [sp, #104]
   26af4:	mov	x1, x22
   26af8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   26afc:	b	26a40 <__sanitizer_dump_coverage@@Base+0xc8>
   26b00:	sub	x3, x19, x27
   26b04:	add	x2, x21, x27, lsl #3
   26b08:	mov	x1, x24
   26b0c:	mov	x0, x25
   26b10:	str	x5, [sp, #112]
   26b14:	str	w4, [sp, #124]
   26b18:	bl	264a0 <__sanitizer_sandbox_on_notify@@Base+0x2f18>
   26b1c:	ldr	w4, [sp, #124]
   26b20:	ldr	x5, [sp, #112]
   26b24:	b	26a20 <__sanitizer_dump_coverage@@Base+0xa8>

0000000000026b28 <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
   26b28:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   26b2c:	add	x0, x0, #0x8b8
   26b30:	add	x1, x0, #0x8
   26b34:	ldrb	w0, [x0, #8]
   26b38:	cbz	w0, 26b4c <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x24>
   26b3c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   26b40:	ldr	x0, [x0, #4056]
   26b44:	ldrb	w0, [x0, #169]
   26b48:	cbnz	w0, 26b50 <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x28>
   26b4c:	ret
   26b50:	ldr	x0, [x1, #8]
   26b54:	ldr	x1, [x1, #24]
   26b58:	b	63b0 <__sanitizer_dump_coverage@plt>
   26b5c:	nop

0000000000026b60 <__sanitizer_cov_dump@@Base>:
   26b60:	b	6520 <__sanitizer_dump_trace_pc_guard_coverage@plt>
   26b64:	nop
   26b68:	cmp	x1, #0x1
   26b6c:	mov	x4, #0x1                   	// #1
   26b70:	b.ls	26c64 <__sanitizer_cov_dump@@Base+0x104>  // b.plast
   26b74:	nop
   26b78:	ldr	x5, [x0, x4, lsl #3]
   26b7c:	mov	x2, x4
   26b80:	sub	x3, x2, #0x1
   26b84:	mov	x6, x2
   26b88:	lsr	x2, x3, #1
   26b8c:	ldr	x3, [x0, x2, lsl #3]
   26b90:	cmp	x3, x5
   26b94:	b.cs	26ba4 <__sanitizer_cov_dump@@Base+0x44>  // b.hs, b.nlast
   26b98:	str	x3, [x0, x6, lsl #3]
   26b9c:	str	x5, [x0, x2, lsl #3]
   26ba0:	cbnz	x2, 26b80 <__sanitizer_cov_dump@@Base+0x20>
   26ba4:	add	x2, x4, #0x1
   26ba8:	cmp	x1, x2
   26bac:	b.eq	26bfc <__sanitizer_cov_dump@@Base+0x9c>  // b.none
   26bb0:	mov	x4, x2
   26bb4:	b	26b78 <__sanitizer_cov_dump@@Base+0x18>
   26bb8:	cmp	x1, x4
   26bbc:	b.cs	26bf4 <__sanitizer_cov_dump@@Base+0x94>  // b.hs, b.nlast
   26bc0:	lsl	x5, x5, #4
   26bc4:	add	x7, x0, x5
   26bc8:	ldr	x3, [x0, x2, lsl #3]
   26bcc:	ldr	x5, [x0, x5]
   26bd0:	cmp	x5, x3
   26bd4:	b.ls	26bf4 <__sanitizer_cov_dump@@Base+0x94>  // b.plast
   26bd8:	cmp	x1, x2
   26bdc:	b.eq	26bf4 <__sanitizer_cov_dump@@Base+0x94>  // b.none
   26be0:	ldr	x3, [x0, x2, lsl #3]
   26be4:	str	x5, [x0, x2, lsl #3]
   26be8:	str	x3, [x7]
   26bec:	cmp	x1, x4
   26bf0:	b.cc	26c5c <__sanitizer_cov_dump@@Base+0xfc>  // b.lo, b.ul, b.last
   26bf4:	subs	x4, x4, #0x1
   26bf8:	b.eq	26c64 <__sanitizer_cov_dump@@Base+0x104>  // b.none
   26bfc:	ldr	x3, [x0, x4, lsl #3]
   26c00:	mov	x2, #0x0                   	// #0
   26c04:	ldr	x1, [x0]
   26c08:	str	x3, [x0]
   26c0c:	str	x1, [x0, x4, lsl #3]
   26c10:	lsl	x1, x2, #1
   26c14:	add	x5, x2, #0x1
   26c18:	add	x3, x1, #0x1
   26c1c:	add	x1, x1, #0x2
   26c20:	cmp	x3, x4
   26c24:	b.cs	26bb8 <__sanitizer_cov_dump@@Base+0x58>  // b.hs, b.nlast
   26c28:	ldr	x6, [x0, x3, lsl #3]
   26c2c:	add	x8, x0, x3, lsl #3
   26c30:	ldr	x7, [x0, x2, lsl #3]
   26c34:	cmp	x7, x6
   26c38:	b.cs	26bb8 <__sanitizer_cov_dump@@Base+0x58>  // b.hs, b.nlast
   26c3c:	cmp	x1, x4
   26c40:	b.cc	26c68 <__sanitizer_cov_dump@@Base+0x108>  // b.lo, b.ul, b.last
   26c44:	cmp	x3, x2
   26c48:	b.eq	26bf4 <__sanitizer_cov_dump@@Base+0x94>  // b.none
   26c4c:	mov	x1, x3
   26c50:	ldr	x5, [x0, x2, lsl #3]
   26c54:	str	x6, [x0, x2, lsl #3]
   26c58:	str	x5, [x0, x3, lsl #3]
   26c5c:	mov	x2, x1
   26c60:	b	26c10 <__sanitizer_cov_dump@@Base+0xb0>
   26c64:	ret
   26c68:	lsl	x9, x5, #4
   26c6c:	add	x7, x0, x5, lsl #4
   26c70:	ldr	x5, [x0, x9]
   26c74:	cmp	x6, x5
   26c78:	b.cc	26bd8 <__sanitizer_cov_dump@@Base+0x78>  // b.lo, b.ul, b.last
   26c7c:	mov	x5, x6
   26c80:	mov	x7, x8
   26c84:	mov	x1, x3
   26c88:	b	26bd8 <__sanitizer_cov_dump@@Base+0x78>
   26c8c:	nop
   26c90:	stp	x19, x20, [sp, #-64]!
   26c94:	mov	x20, x0
   26c98:	add	x19, sp, #0x20
   26c9c:	stp	x21, x30, [sp, #16]
   26ca0:	mov	x0, x19
   26ca4:	mov	x21, x1
   26ca8:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26cac:	add	x1, x1, #0x798
   26cb0:	bl	26f48 <__sanitizer_cov_dump@@Base+0x3e8>
   26cb4:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   26cb8:	mov	x3, x21
   26cbc:	mov	x2, x20
   26cc0:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26cc4:	ldr	x1, [x4, #4024]
   26cc8:	add	x0, x0, #0x7a8
   26ccc:	ldr	x1, [x1]
   26cd0:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   26cd4:	mov	x0, x19
   26cd8:	bl	26f98 <__sanitizer_cov_dump@@Base+0x438>
   26cdc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   26ce0:	stp	x19, x20, [sp, #-64]!
   26ce4:	mov	x20, x0
   26ce8:	add	x19, sp, #0x20
   26cec:	stp	x21, x30, [sp, #16]
   26cf0:	mov	x0, x19
   26cf4:	mov	x21, x1
   26cf8:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26cfc:	add	x1, x1, #0x810
   26d00:	bl	26f48 <__sanitizer_cov_dump@@Base+0x3e8>
   26d04:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   26d08:	mov	x3, x21
   26d0c:	mov	x2, x20
   26d10:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26d14:	ldr	x1, [x4, #4024]
   26d18:	add	x0, x0, #0x828
   26d1c:	ldr	x1, [x1]
   26d20:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   26d24:	mov	x0, x19
   26d28:	bl	26f98 <__sanitizer_cov_dump@@Base+0x438>
   26d2c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   26d30:	stp	x19, x20, [sp, #-80]!
   26d34:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   26d38:	mov	x2, x1
   26d3c:	stp	x21, x22, [sp, #16]
   26d40:	add	x21, sp, #0x30
   26d44:	mov	x20, x0
   26d48:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26d4c:	mov	x0, x21
   26d50:	add	x1, x1, #0x898
   26d54:	str	x30, [sp, #32]
   26d58:	bl	26f48 <__sanitizer_cov_dump@@Base+0x3e8>
   26d5c:	ldr	x19, [x19, #4016]
   26d60:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   26d64:	ldr	x0, [x0, #4024]
   26d68:	ldr	x3, [x19]
   26d6c:	ldr	x22, [x0]
   26d70:	cbz	x3, 26d94 <__sanitizer_cov_dump@@Base+0x234>
   26d74:	mov	x2, x20
   26d78:	mov	x1, x22
   26d7c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26d80:	add	x0, x0, #0x8b0
   26d84:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   26d88:	mov	x0, x21
   26d8c:	bl	26f98 <__sanitizer_cov_dump@@Base+0x438>
   26d90:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   26d94:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   26d98:	mov	x3, x0
   26d9c:	str	x0, [x19]
   26da0:	b	26d74 <__sanitizer_cov_dump@@Base+0x214>
   26da4:	nop
   26da8:	stp	x19, x20, [sp, #-64]!
   26dac:	mov	x2, x1
   26db0:	mov	x20, x0
   26db4:	add	x19, sp, #0x20
   26db8:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26dbc:	mov	x0, x19
   26dc0:	add	x1, x1, #0x930
   26dc4:	str	x30, [sp, #16]
   26dc8:	bl	26f48 <__sanitizer_cov_dump@@Base+0x3e8>
   26dcc:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   26dd0:	mov	x2, x20
   26dd4:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26dd8:	add	x0, x0, #0x950
   26ddc:	ldr	x1, [x1, #4024]
   26de0:	ldr	x1, [x1]
   26de4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   26de8:	mov	x0, x19
   26dec:	bl	26f98 <__sanitizer_cov_dump@@Base+0x438>
   26df0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   26df4:	nop
   26df8:	stp	x19, x20, [sp, #-80]!
   26dfc:	mov	x20, x1
   26e00:	add	x19, sp, #0x30
   26e04:	stp	x21, x30, [sp, #16]
   26e08:	mov	x21, x0
   26e0c:	mov	x0, x19
   26e10:	str	x1, [sp, #40]
   26e14:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26e18:	add	x1, x1, #0x9a0
   26e1c:	bl	26f48 <__sanitizer_cov_dump@@Base+0x3e8>
   26e20:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   26e24:	mov	x3, x21
   26e28:	mov	x2, x20
   26e2c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26e30:	ldr	x1, [x1, #4024]
   26e34:	add	x0, x0, #0x9c0
   26e38:	ldr	x1, [x1]
   26e3c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   26e40:	mov	x0, x19
   26e44:	bl	26f98 <__sanitizer_cov_dump@@Base+0x438>
   26e48:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   26e4c:	nop
   26e50:	stp	x19, x20, [sp, #-64]!
   26e54:	mov	x2, x1
   26e58:	mov	x20, x0
   26e5c:	add	x19, sp, #0x20
   26e60:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26e64:	mov	x0, x19
   26e68:	add	x1, x1, #0xa60
   26e6c:	str	x30, [sp, #16]
   26e70:	bl	26f48 <__sanitizer_cov_dump@@Base+0x3e8>
   26e74:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   26e78:	mov	x2, x20
   26e7c:	mov	x3, #0x8                   	// #8
   26e80:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26e84:	ldr	x1, [x1, #4024]
   26e88:	add	x0, x0, #0xa88
   26e8c:	ldr	x1, [x1]
   26e90:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   26e94:	mov	x0, x19
   26e98:	bl	26f98 <__sanitizer_cov_dump@@Base+0x438>
   26e9c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   26ea0:	stp	x19, x20, [sp, #-80]!
   26ea4:	mov	x20, x0
   26ea8:	add	x19, sp, #0x30
   26eac:	stp	x21, x30, [sp, #16]
   26eb0:	mov	x0, x19
   26eb4:	mov	x21, x1
   26eb8:	str	x1, [sp, #40]
   26ebc:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26ec0:	add	x1, x1, #0xb10
   26ec4:	bl	26f48 <__sanitizer_cov_dump@@Base+0x3e8>
   26ec8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   26ecc:	mov	x3, x21
   26ed0:	mov	x2, x20
   26ed4:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26ed8:	ldr	x1, [x1, #4024]
   26edc:	add	x0, x0, #0xb28
   26ee0:	ldr	x1, [x1]
   26ee4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   26ee8:	mov	x0, x19
   26eec:	bl	26f98 <__sanitizer_cov_dump@@Base+0x438>
   26ef0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   26ef4:	nop
   26ef8:	stp	x19, x20, [sp, #-64]!
   26efc:	mov	x2, x1
   26f00:	mov	x20, x0
   26f04:	add	x19, sp, #0x20
   26f08:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26f0c:	mov	x0, x19
   26f10:	add	x1, x1, #0xb80
   26f14:	str	x30, [sp, #16]
   26f18:	bl	26f48 <__sanitizer_cov_dump@@Base+0x3e8>
   26f1c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   26f20:	mov	x2, x20
   26f24:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   26f28:	add	x0, x0, #0xb90
   26f2c:	ldr	x1, [x1, #4024]
   26f30:	ldr	x1, [x1]
   26f34:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   26f38:	mov	x0, x19
   26f3c:	bl	26f98 <__sanitizer_cov_dump@@Base+0x438>
   26f40:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   26f44:	nop
   26f48:	stp	x19, x20, [sp, #-32]!
   26f4c:	mov	x19, x0
   26f50:	mov	x20, x2
   26f54:	stp	x21, x30, [sp, #16]
   26f58:	mov	x21, x1
   26f5c:	bl	2d750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>
   26f60:	stp	x21, x20, [x19, #8]
   26f64:	bl	2c890 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   26f68:	strb	w0, [x19, #24]
   26f6c:	ldp	x21, x30, [sp, #16]
   26f70:	tst	w0, #0xff
   26f74:	ldp	x19, x20, [sp], #32
   26f78:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   26f7c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   26f80:	add	x2, x2, #0x328
   26f84:	add	x1, x1, #0x658
   26f88:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   26f8c:	csel	x1, x1, x2, ne  // ne = any
   26f90:	add	x0, x0, #0xbf8
   26f94:	b	1fb70 <__sanitizer_on_print@@Base+0x310>
   26f98:	stp	x19, x30, [sp, #-16]!
   26f9c:	mov	x19, x0
   26fa0:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   26fa4:	add	x2, x2, #0x328
   26fa8:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   26fac:	ldrb	w3, [x19, #24]
   26fb0:	add	x1, x1, #0xc0
   26fb4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   26fb8:	add	x0, x0, #0xbf8
   26fbc:	cmp	w3, #0x0
   26fc0:	csel	x1, x1, x2, ne  // ne = any
   26fc4:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   26fc8:	ldr	x0, [x19, #16]
   26fcc:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
   26fd0:	bl	120f8 <_ZdaPvRKSt9nothrow_t@@Base+0x438>
   26fd4:	ldp	x0, x1, [x19, #8]
   26fd8:	mov	x2, #0x0                   	// #0
   26fdc:	bl	2c948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4120>
   26fe0:	mov	x0, x19
   26fe4:	ldp	x19, x30, [sp], #16
   26fe8:	b	2d8b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5090>
   26fec:	nop
   26ff0:	ldr	x0, [x0]
   26ff4:	ldr	w0, [x0, #8]
   26ff8:	ret
   26ffc:	nop
   27000:	ldr	x0, [x0]
   27004:	ldr	w0, [x0, #12]
   27008:	and	w0, w0, #0xfffff
   2700c:	ret
   27010:	ldr	x0, [x0]
   27014:	add	x0, x0, #0xc
   27018:	ldxr	w1, [x0]
   2701c:	add	w2, w1, #0x1
   27020:	stlxr	w3, w2, [x0]
   27024:	cbnz	w3, 27018 <__sanitizer_cov_dump@@Base+0x4b8>
   27028:	mvn	x0, x1
   2702c:	dmb	ish
   27030:	tst	x0, #0xfffff
   27034:	b.eq	2703c <__sanitizer_cov_dump@@Base+0x4dc>  // b.none
   27038:	ret
   2703c:	str	x30, [sp, #-16]!
   27040:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27044:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27048:	mov	x4, #0x100000              	// #1048576
   2704c:	add	x2, x2, #0xbd8
   27050:	add	x0, x0, #0xc08
   27054:	mov	x3, x4
   27058:	mov	w1, #0x55                  	// #85
   2705c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   27060:	adrp	x0, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   27064:	add	x0, x0, #0xce0
   27068:	ret
   2706c:	nop
   27070:	mov	w2, w0
   27074:	cbz	w0, 270ec <__sanitizer_cov_dump@@Base+0x58c>
   27078:	str	x30, [sp, #-16]!
   2707c:	and	x3, x2, #0x7fffffff
   27080:	mov	w4, w0
   27084:	cmp	x3, w0, uxtw
   27088:	b.ne	27120 <__sanitizer_cov_dump@@Base+0x5c0>  // b.any
   2708c:	lsr	w3, w0, #23
   27090:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   27094:	add	x0, x0, #0x8e0
   27098:	mov	x5, #0xfffff               	// #1048575
   2709c:	lsl	x3, x3, #12
   270a0:	add	x6, x3, #0x1, lsl #12
   270a4:	cmp	x3, x5
   270a8:	b.hi	27138 <__sanitizer_cov_dump@@Base+0x5d8>  // b.pmore
   270ac:	ldr	x1, [x0, x3, lsl #3]
   270b0:	ands	x1, x1, #0xfffffffffffffffe
   270b4:	b.ne	270c4 <__sanitizer_cov_dump@@Base+0x564>  // b.any
   270b8:	b	27104 <__sanitizer_cov_dump@@Base+0x5a4>
   270bc:	ldr	x1, [x1]
   270c0:	cbz	x1, 27104 <__sanitizer_cov_dump@@Base+0x5a4>
   270c4:	ldr	w4, [x1, #8]
   270c8:	cmp	w2, w4
   270cc:	b.ne	270bc <__sanitizer_cov_dump@@Base+0x55c>  // b.any
   270d0:	ldp	w2, w3, [x1, #16]
   270d4:	add	x0, x1, #0x18
   270d8:	mov	x1, #0x0                   	// #0
   270dc:	bfxil	x1, x2, #0, #32
   270e0:	ldr	x30, [sp], #16
   270e4:	bfi	x1, x3, #32, #32
   270e8:	ret
   270ec:	mov	x1, #0x0                   	// #0
   270f0:	mov	w3, #0x0                   	// #0
   270f4:	bfxil	x1, x2, #0, #32
   270f8:	mov	x0, #0x0                   	// #0
   270fc:	bfi	x1, x3, #32, #32
   27100:	ret
   27104:	add	x3, x3, #0x1
   27108:	cmp	x6, x3
   2710c:	b.ne	270a4 <__sanitizer_cov_dump@@Base+0x544>  // b.any
   27110:	mov	w3, #0x0                   	// #0
   27114:	mov	w2, #0x0                   	// #0
   27118:	mov	x0, #0x0                   	// #0
   2711c:	b	270d8 <__sanitizer_cov_dump@@Base+0x578>
   27120:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27124:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27128:	add	x2, x2, #0xc60
   2712c:	add	x0, x0, #0xc90
   27130:	mov	w1, #0x8d                  	// #141
   27134:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   27138:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2713c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27140:	add	x2, x2, #0xcf0
   27144:	add	x0, x0, #0xc90
   27148:	mov	x4, #0x100000              	// #1048576
   2714c:	mov	w1, #0x92                  	// #146
   27150:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   27154:	nop
   27158:	stp	x19, x20, [sp, #-48]!
   2715c:	adrp	x19, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   27160:	add	x19, x19, #0x8e0
   27164:	stp	x23, x30, [sp, #32]
   27168:	mov	x23, x19
   2716c:	stp	x21, x22, [sp, #16]
   27170:	mov	w21, #0x0                   	// #0
   27174:	nop
   27178:	sxtw	x22, w21
   2717c:	mov	w20, #0x0                   	// #0
   27180:	ldr	x0, [x23, x22, lsl #3]
   27184:	orr	x2, x0, #0x1
   27188:	tbnz	w0, #0, 271ac <__sanitizer_cov_dump@@Base+0x64c>
   2718c:	ldxr	x1, [x19]
   27190:	cmp	x1, x0
   27194:	b.ne	271a0 <__sanitizer_cov_dump@@Base+0x640>  // b.any
   27198:	stlxr	w3, x2, [x19]
   2719c:	cbnz	w3, 2718c <__sanitizer_cov_dump@@Base+0x62c>
   271a0:	dmb	ish
   271a4:	cmp	x0, x1
   271a8:	b.eq	271c8 <__sanitizer_cov_dump@@Base+0x668>  // b.none
   271ac:	cmp	w20, #0x9
   271b0:	b.gt	271bc <__sanitizer_cov_dump@@Base+0x65c>
   271b4:	add	w20, w20, #0x1
   271b8:	b	27180 <__sanitizer_cov_dump@@Base+0x620>
   271bc:	add	w20, w20, #0x1
   271c0:	bl	1c2d0 <__sanitizer_set_report_fd@@Base+0x4510>
   271c4:	b	27180 <__sanitizer_cov_dump@@Base+0x620>
   271c8:	add	w21, w21, #0x1
   271cc:	add	x19, x19, #0x8
   271d0:	cmp	w21, #0x100, lsl #12
   271d4:	b.ne	27178 <__sanitizer_cov_dump@@Base+0x618>  // b.any
   271d8:	ldp	x21, x22, [sp, #16]
   271dc:	ldp	x23, x30, [sp, #32]
   271e0:	ldp	x19, x20, [sp], #48
   271e4:	ret
   271e8:	adrp	x3, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   271ec:	add	x3, x3, #0x8e0
   271f0:	mov	w0, #0x0                   	// #0
   271f4:	nop
   271f8:	sxtw	x2, w0
   271fc:	ldr	x1, [x3, x2, lsl #3]
   27200:	dmb	ish
   27204:	and	x1, x1, #0xfffffffffffffffe
   27208:	str	x1, [x3, x2, lsl #3]
   2720c:	add	w0, w0, #0x1
   27210:	cmp	w0, #0x100, lsl #12
   27214:	b.ne	271f8 <__sanitizer_cov_dump@@Base+0x698>  // b.any
   27218:	ret
   2721c:	nop
   27220:	ldr	w2, [x0]
   27224:	ldr	w0, [x1]
   27228:	cmp	w2, w0
   2722c:	cset	w0, cc  // cc = lo, ul, last
   27230:	ret
   27234:	nop
   27238:	stp	x19, x20, [sp, #-96]!
   2723c:	mov	x19, x0
   27240:	stp	x25, x26, [sp, #48]
   27244:	adrp	x25, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   27248:	add	x0, x25, #0x8e0
   2724c:	add	x0, x0, #0x800, lsl #12
   27250:	stp	x21, x22, [sp, #16]
   27254:	stp	x23, x24, [sp, #32]
   27258:	stp	x27, x30, [sp, #64]
   2725c:	ldr	x0, [x0, #1024]
   27260:	str	xzr, [x19]
   27264:	stp	xzr, xzr, [x19, #8]
   27268:	adds	x0, x0, #0x64
   2726c:	b.ne	27524 <__sanitizer_cov_dump@@Base+0x9c4>  // b.any
   27270:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   27274:	add	x24, sp, #0x50
   27278:	mov	w23, #0x0                   	// #0
   2727c:	ldr	x22, [x22, #4016]
   27280:	add	x0, x25, #0x8e0
   27284:	sxtw	x1, w23
   27288:	ldr	x20, [x0, x1, lsl #3]
   2728c:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   27290:	ands	x20, x20, #0xfffffffffffffffe
   27294:	add	x26, x26, #0xb50
   27298:	b.eq	272e0 <__sanitizer_cov_dump@@Base+0x780>  // b.none
   2729c:	ldp	x4, x0, [x19, #8]
   272a0:	ldr	w1, [x20, #8]
   272a4:	str	w1, [sp, #80]
   272a8:	str	x20, [sp, #88]
   272ac:	lsr	x4, x4, #4
   272b0:	cmp	x0, x4
   272b4:	b.hi	27508 <__sanitizer_cov_dump@@Base+0x9a8>  // b.pmore
   272b8:	add	x3, x0, #0x1
   272bc:	b.eq	27468 <__sanitizer_cov_dump@@Base+0x908>  // b.none
   272c0:	ldr	x27, [x19]
   272c4:	str	x3, [x19, #16]
   272c8:	add	x0, x27, x0, lsl #4
   272cc:	mov	x1, x24
   272d0:	mov	x2, #0x10                  	// #16
   272d4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   272d8:	ldr	x20, [x20]
   272dc:	cbnz	x20, 2729c <__sanitizer_cov_dump@@Base+0x73c>
   272e0:	add	w23, w23, #0x1
   272e4:	cmp	w23, #0x100, lsl #12
   272e8:	b.ne	27280 <__sanitizer_cov_dump@@Base+0x720>  // b.any
   272ec:	ldr	x2, [x19, #16]
   272f0:	cmp	x2, #0x1
   272f4:	b.ls	27450 <__sanitizer_cov_dump@@Base+0x8f0>  // b.plast
   272f8:	ldr	x0, [x19]
   272fc:	mov	x1, #0x1                   	// #1
   27300:	lsl	x4, x1, #4
   27304:	mov	x3, x1
   27308:	ldr	w8, [x0, x4]
   2730c:	sub	x5, x3, #0x1
   27310:	mov	x4, x3
   27314:	lsr	x3, x5, #1
   27318:	add	x4, x0, x4, lsl #4
   2731c:	lsl	x5, x3, #4
   27320:	add	x9, x0, x5
   27324:	ldr	w6, [x0, x5]
   27328:	cmp	w6, w8
   2732c:	b.cs	27348 <__sanitizer_cov_dump@@Base+0x7e8>  // b.hs, b.nlast
   27330:	ldp	x6, x7, [x9]
   27334:	ldr	x10, [x4, #8]
   27338:	stp	x6, x7, [x4]
   2733c:	str	w8, [x0, x5]
   27340:	str	x10, [x9, #8]
   27344:	cbnz	x3, 2730c <__sanitizer_cov_dump@@Base+0x7ac>
   27348:	add	x1, x1, #0x1
   2734c:	cmp	x2, x1
   27350:	b.ne	27300 <__sanitizer_cov_dump@@Base+0x7a0>  // b.any
   27354:	sub	x8, x2, #0x1
   27358:	add	x2, x0, x2, lsl #4
   2735c:	ldp	x6, x7, [x2, #-16]
   27360:	mov	x3, #0x0                   	// #0
   27364:	ldr	w4, [x0]
   27368:	add	x5, x3, #0x1
   2736c:	ldr	x1, [x0, #8]
   27370:	stp	x6, x7, [x0]
   27374:	stur	w4, [x2, #-16]
   27378:	stur	x1, [x2, #-8]
   2737c:	lsl	x1, x3, #1
   27380:	add	x7, x1, #0x1
   27384:	add	x1, x1, #0x2
   27388:	cmp	x7, x8
   2738c:	b.cs	273f4 <__sanitizer_cov_dump@@Base+0x894>  // b.hs, b.nlast
   27390:	lsl	x6, x7, #4
   27394:	lsl	x4, x3, #4
   27398:	add	x9, x0, x6
   2739c:	add	x11, x0, x4
   273a0:	ldr	w10, [x0, x6]
   273a4:	ldr	w12, [x0, x4]
   273a8:	cmp	w12, w10
   273ac:	b.cs	273f4 <__sanitizer_cov_dump@@Base+0x894>  // b.hs, b.nlast
   273b0:	cmp	x1, x8
   273b4:	b.cc	27600 <__sanitizer_cov_dump@@Base+0xaa0>  // b.lo, b.ul, b.last
   273b8:	cmp	x7, x3
   273bc:	b.eq	27444 <__sanitizer_cov_dump@@Base+0x8e4>  // b.none
   273c0:	ldp	x4, x5, [x9]
   273c4:	mov	x1, x7
   273c8:	ldr	x3, [x11, #8]
   273cc:	stp	x4, x5, [x11]
   273d0:	str	w12, [x0, x6]
   273d4:	str	x3, [x9, #8]
   273d8:	mov	x3, x1
   273dc:	add	x5, x3, #0x1
   273e0:	lsl	x1, x3, #1
   273e4:	add	x7, x1, #0x1
   273e8:	add	x1, x1, #0x2
   273ec:	cmp	x7, x8
   273f0:	b.cc	27390 <__sanitizer_cov_dump@@Base+0x830>  // b.lo, b.ul, b.last
   273f4:	cmp	x1, x8
   273f8:	b.cs	27444 <__sanitizer_cov_dump@@Base+0x8e4>  // b.hs, b.nlast
   273fc:	lsl	x5, x5, #5
   27400:	lsl	x4, x3, #4
   27404:	add	x6, x0, x5
   27408:	ldr	w7, [x0, x5]
   2740c:	ldr	w5, [x0, x4]
   27410:	cmp	w7, w5
   27414:	b.ls	27444 <__sanitizer_cov_dump@@Base+0x8e4>  // b.plast
   27418:	cmp	x1, x3
   2741c:	b.eq	27444 <__sanitizer_cov_dump@@Base+0x8e4>  // b.none
   27420:	add	x3, x0, x4
   27424:	ldr	w9, [x0, x4]
   27428:	ldp	x4, x5, [x6]
   2742c:	cmp	x1, x8
   27430:	ldr	x7, [x3, #8]
   27434:	stp	x4, x5, [x3]
   27438:	str	w9, [x6]
   2743c:	str	x7, [x6, #8]
   27440:	b.cc	273d8 <__sanitizer_cov_dump@@Base+0x878>  // b.lo, b.ul, b.last
   27444:	sub	x2, x2, #0x10
   27448:	subs	x8, x8, #0x1
   2744c:	b.ne	2735c <__sanitizer_cov_dump@@Base+0x7fc>  // b.any
   27450:	ldp	x21, x22, [sp, #16]
   27454:	ldp	x23, x24, [sp, #32]
   27458:	ldp	x25, x26, [sp, #48]
   2745c:	ldp	x27, x30, [sp, #64]
   27460:	ldp	x19, x20, [sp], #96
   27464:	ret
   27468:	tst	x0, x3
   2746c:	b.eq	274a8 <__sanitizer_cov_dump@@Base+0x948>  // b.none
   27470:	clz	x2, x3
   27474:	mov	w1, #0x3f                  	// #63
   27478:	sub	w2, w1, w2
   2747c:	mov	x1, #0x1                   	// #1
   27480:	add	w4, w2, #0x1
   27484:	lsl	x4, x1, x4
   27488:	cmp	x4, x3
   2748c:	b.ls	275a0 <__sanitizer_cov_dump@@Base+0xa40>  // b.plast
   27490:	lsl	x1, x1, x2
   27494:	cmp	x1, x3
   27498:	b.cs	275e4 <__sanitizer_cov_dump@@Base+0xa84>  // b.hs, b.nlast
   2749c:	cmp	x0, x4
   274a0:	b.hi	275b8 <__sanitizer_cov_dump@@Base+0xa58>  // b.pmore
   274a4:	mov	x3, x4
   274a8:	ldr	x0, [x22]
   274ac:	lsl	x21, x3, #4
   274b0:	cbz	x0, 27588 <__sanitizer_cov_dump@@Base+0xa28>
   274b4:	sub	x1, x0, #0x1
   274b8:	tst	x1, x0
   274bc:	b.ne	275d4 <__sanitizer_cov_dump@@Base+0xa74>  // b.any
   274c0:	add	x21, x21, x1
   274c4:	neg	x0, x0
   274c8:	and	x21, x21, x0
   274cc:	mov	x1, x26
   274d0:	mov	w2, #0x0                   	// #0
   274d4:	mov	x0, x21
   274d8:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   274dc:	mov	x27, x0
   274e0:	ldr	x1, [x19]
   274e4:	ldr	x2, [x19, #16]
   274e8:	lsl	x2, x2, #4
   274ec:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   274f0:	ldp	x0, x1, [x19]
   274f4:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   274f8:	stp	x27, x21, [x19]
   274fc:	ldr	x0, [x19, #16]
   27500:	add	x3, x0, #0x1
   27504:	b	272c4 <__sanitizer_cov_dump@@Base+0x764>
   27508:	mov	x3, x0
   2750c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   27510:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   27514:	add	x2, x2, #0x808
   27518:	add	x0, x0, #0xad8
   2751c:	mov	w1, #0x1cd                 	// #461
   27520:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   27524:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   27528:	lsl	x20, x0, #4
   2752c:	ldr	x21, [x21, #4016]
   27530:	ldr	x0, [x21]
   27534:	cbz	x0, 27594 <__sanitizer_cov_dump@@Base+0xa34>
   27538:	sub	x1, x0, #0x1
   2753c:	tst	x1, x0
   27540:	b.ne	275d4 <__sanitizer_cov_dump@@Base+0xa74>  // b.any
   27544:	add	x20, x20, x1
   27548:	neg	x0, x0
   2754c:	and	x20, x20, x0
   27550:	mov	w2, #0x0                   	// #0
   27554:	mov	x0, x20
   27558:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2755c:	add	x1, x1, #0xb50
   27560:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   27564:	ldr	x1, [x19]
   27568:	mov	x21, x0
   2756c:	ldr	x2, [x19, #16]
   27570:	lsl	x2, x2, #4
   27574:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   27578:	ldp	x0, x1, [x19]
   2757c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   27580:	stp	x21, x20, [x19]
   27584:	b	27270 <__sanitizer_cov_dump@@Base+0x710>
   27588:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2758c:	str	x0, [x22]
   27590:	b	274b4 <__sanitizer_cov_dump@@Base+0x954>
   27594:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   27598:	str	x0, [x21]
   2759c:	b	27538 <__sanitizer_cov_dump@@Base+0x9d8>
   275a0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   275a4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   275a8:	add	x2, x2, #0x5c0
   275ac:	add	x0, x0, #0xad8
   275b0:	mov	w1, #0x18a                 	// #394
   275b4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   275b8:	mov	x3, x0
   275bc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   275c0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   275c4:	add	x2, x2, #0x838
   275c8:	add	x0, x0, #0xad8
   275cc:	mov	w1, #0x20c                 	// #524
   275d0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   275d4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   275d8:	add	x0, x0, #0xb38
   275dc:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   275e0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   275e4:	mov	x4, x1
   275e8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   275ec:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   275f0:	add	x2, x2, #0x648
   275f4:	add	x0, x0, #0xad8
   275f8:	mov	w1, #0x18b                 	// #395
   275fc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   27600:	lsl	x11, x5, #5
   27604:	add	x6, x0, x5, lsl #5
   27608:	ldr	w5, [x0, x11]
   2760c:	cmp	w10, w5
   27610:	csel	x6, x6, x9, cc  // cc = lo, ul, last
   27614:	csel	x1, x1, x7, cc  // cc = lo, ul, last
   27618:	b	27418 <__sanitizer_cov_dump@@Base+0x8b8>
   2761c:	nop
   27620:	ldr	x4, [x0, #16]
   27624:	cbnz	x4, 27634 <__sanitizer_cov_dump@@Base+0xad4>
   27628:	mov	x0, #0x0                   	// #0
   2762c:	mov	x1, #0x0                   	// #0
   27630:	ret
   27634:	mov	x5, x4
   27638:	mov	x2, #0x0                   	// #0
   2763c:	str	x30, [sp, #-16]!
   27640:	cmp	x5, x2
   27644:	b.ls	27678 <__sanitizer_cov_dump@@Base+0xb18>  // b.plast
   27648:	add	x3, x5, x2
   2764c:	ldr	x7, [x0]
   27650:	cmp	x4, x3, lsr #1
   27654:	lsr	x3, x3, #1
   27658:	b.ls	276b4 <__sanitizer_cov_dump@@Base+0xb54>  // b.plast
   2765c:	lsl	x6, x3, #4
   27660:	ldr	w6, [x7, x6]
   27664:	cmp	w1, w6
   27668:	b.ls	276ac <__sanitizer_cov_dump@@Base+0xb4c>  // b.plast
   2766c:	add	x2, x3, #0x1
   27670:	cmp	x5, x2
   27674:	b.hi	27648 <__sanitizer_cov_dump@@Base+0xae8>  // b.pmore
   27678:	cmp	x4, x2
   2767c:	b.cc	2769c <__sanitizer_cov_dump@@Base+0xb3c>  // b.lo, b.ul, b.last
   27680:	ldr	x0, [x0]
   27684:	b.eq	276dc <__sanitizer_cov_dump@@Base+0xb7c>  // b.none
   27688:	lsl	x2, x2, #4
   2768c:	add	x3, x0, x2
   27690:	ldr	w0, [x0, x2]
   27694:	cmp	w0, w1
   27698:	b.eq	276cc <__sanitizer_cov_dump@@Base+0xb6c>  // b.none
   2769c:	mov	x0, #0x0                   	// #0
   276a0:	mov	x1, #0x0                   	// #0
   276a4:	ldr	x30, [sp], #16
   276a8:	ret
   276ac:	mov	x5, x3
   276b0:	b	27640 <__sanitizer_cov_dump@@Base+0xae0>
   276b4:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   276b8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   276bc:	add	x2, x2, #0x58
   276c0:	add	x0, x0, #0xad8
   276c4:	mov	w1, #0x1c9                 	// #457
   276c8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   276cc:	ldr	x1, [x3, #8]
   276d0:	add	x0, x1, #0x18
   276d4:	ldr	x1, [x1, #16]
   276d8:	b	276a4 <__sanitizer_cov_dump@@Base+0xb44>
   276dc:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   276e0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   276e4:	add	x2, x2, #0x58
   276e8:	add	x0, x0, #0xad8
   276ec:	mov	x3, x4
   276f0:	mov	w1, #0x1c5                 	// #453
   276f4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   276f8:	str	x30, [sp, #-16]!
   276fc:	mov	x2, x1
   27700:	mov	x3, #0x0                   	// #0
   27704:	mov	x1, x0
   27708:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   2770c:	add	x0, x0, #0x8e0
   27710:	bl	27748 <__sanitizer_cov_dump@@Base+0xbe8>
   27714:	cbz	x0, 27724 <__sanitizer_cov_dump@@Base+0xbc4>
   27718:	ldr	w0, [x0, #8]
   2771c:	ldr	x30, [sp], #16
   27720:	ret
   27724:	mov	w0, #0x0                   	// #0
   27728:	ldr	x30, [sp], #16
   2772c:	ret
   27730:	mov	x2, x1
   27734:	mov	x3, #0x0                   	// #0
   27738:	mov	x1, x0
   2773c:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   27740:	add	x0, x0, #0x8e0
   27744:	b	27748 <__sanitizer_cov_dump@@Base+0xbe8>
   27748:	stp	x19, x20, [sp, #-160]!
   2774c:	stp	x21, x22, [sp, #16]
   27750:	mov	x22, x2
   27754:	mov	x21, x1
   27758:	stp	x23, x24, [sp, #32]
   2775c:	mov	x24, x0
   27760:	mov	x23, x3
   27764:	stp	x25, x26, [sp, #48]
   27768:	lsr	x25, x2, #32
   2776c:	stp	x27, x28, [sp, #64]
   27770:	mov	w27, w25
   27774:	mov	w28, w2
   27778:	str	x30, [sp, #80]
   2777c:	cbz	x3, 27784 <__sanitizer_cov_dump@@Base+0xc24>
   27780:	strb	wzr, [x3]
   27784:	cmp	x21, #0x0
   27788:	mov	x0, #0x0                   	// #0
   2778c:	ccmp	w22, #0x0, #0x4, ne  // ne = any
   27790:	b.ne	277b0 <__sanitizer_cov_dump@@Base+0xc50>  // b.any
   27794:	ldp	x21, x22, [sp, #16]
   27798:	ldp	x23, x24, [sp, #32]
   2779c:	ldp	x25, x26, [sp, #48]
   277a0:	ldp	x27, x28, [sp, #64]
   277a4:	ldr	x30, [sp, #80]
   277a8:	ldp	x19, x20, [sp], #160
   277ac:	ret
   277b0:	mov	w4, #0xb28c                	// #45708
   277b4:	mov	w20, #0xe995                	// #59797
   277b8:	movk	w4, #0x9747, lsl #16
   277bc:	mov	w26, w22
   277c0:	eor	w5, w4, w22, lsl #3
   277c4:	mov	x1, #0x0                   	// #0
   277c8:	movk	w20, #0x5bd1, lsl #16
   277cc:	nop
   277d0:	ldr	x4, [x21, x1, lsl #3]
   277d4:	mul	w5, w5, w20
   277d8:	add	x1, x1, #0x1
   277dc:	cmp	x26, x1
   277e0:	mul	w4, w4, w20
   277e4:	eor	w4, w4, w4, lsr #24
   277e8:	mul	w4, w4, w20
   277ec:	eor	w5, w4, w5
   277f0:	b.hi	277d0 <__sanitizer_cov_dump@@Base+0xc70>  // b.pmore
   277f4:	eor	w4, w5, w5, lsr #13
   277f8:	mul	w20, w4, w20
   277fc:	eor	w20, w20, w20, lsr #15
   27800:	and	x5, x20, #0xfffff
   27804:	ubfiz	x2, x20, #3, #20
   27808:	add	x2, x24, x2
   2780c:	ldr	x9, [x24, x5, lsl #3]
   27810:	ands	x9, x9, #0xfffffffffffffffe
   27814:	b.eq	27880 <__sanitizer_cov_dump@@Base+0xd20>  // b.none
   27818:	and	w10, w20, #0xfff00000
   2781c:	mov	x4, x9
   27820:	ldr	w1, [x4, #12]
   27824:	and	w1, w1, #0xfff00000
   27828:	cmp	w1, w10
   2782c:	b.ne	27878 <__sanitizer_cov_dump@@Base+0xd18>  // b.any
   27830:	bfxil	x6, x28, #0, #32
   27834:	ldr	x0, [x4, #16]
   27838:	bfi	x6, x27, #32, #32
   2783c:	cmp	x0, x6
   27840:	b.ne	27878 <__sanitizer_cov_dump@@Base+0xd18>  // b.any
   27844:	ldr	w0, [x4, #16]
   27848:	cbz	x0, 278e4 <__sanitizer_cov_dump@@Base+0xd84>
   2784c:	add	x3, x4, #0x18
   27850:	mov	x1, #0x0                   	// #0
   27854:	b	27864 <__sanitizer_cov_dump@@Base+0xd04>
   27858:	add	x1, x1, #0x1
   2785c:	cmp	x0, x1
   27860:	b.eq	278e4 <__sanitizer_cov_dump@@Base+0xd84>  // b.none
   27864:	ldr	x8, [x3, x1, lsl #3]
   27868:	ldr	x7, [x21, x1, lsl #3]
   2786c:	cmp	x8, x7
   27870:	b.eq	27858 <__sanitizer_cov_dump@@Base+0xcf8>  // b.none
   27874:	nop
   27878:	ldr	x4, [x4]
   2787c:	cbnz	x4, 27820 <__sanitizer_cov_dump@@Base+0xcc0>
   27880:	mov	w1, #0x0                   	// #0
   27884:	ldr	x0, [x2]
   27888:	tbnz	w0, #0, 278b0 <__sanitizer_cov_dump@@Base+0xd50>
   2788c:	orr	x3, x0, #0x1
   27890:	ldxr	x6, [x2]
   27894:	cmp	x6, x0
   27898:	b.ne	278a4 <__sanitizer_cov_dump@@Base+0xd44>  // b.any
   2789c:	stlxr	w4, x3, [x2]
   278a0:	cbnz	w4, 27890 <__sanitizer_cov_dump@@Base+0xd30>
   278a4:	dmb	ish
   278a8:	cmp	x0, x6
   278ac:	b.eq	278ec <__sanitizer_cov_dump@@Base+0xd8c>  // b.none
   278b0:	cmp	w1, #0x9
   278b4:	b.gt	278c0 <__sanitizer_cov_dump@@Base+0xd60>
   278b8:	add	w1, w1, #0x1
   278bc:	b	27884 <__sanitizer_cov_dump@@Base+0xd24>
   278c0:	stp	x5, x2, [sp, #104]
   278c4:	str	x9, [sp, #120]
   278c8:	str	w1, [sp, #128]
   278cc:	bl	1c2d0 <__sanitizer_set_report_fd@@Base+0x4510>
   278d0:	ldr	w1, [sp, #128]
   278d4:	ldp	x5, x2, [sp, #104]
   278d8:	add	w1, w1, #0x1
   278dc:	ldr	x9, [sp, #120]
   278e0:	b	27884 <__sanitizer_cov_dump@@Base+0xd24>
   278e4:	mov	x0, x4
   278e8:	b	27794 <__sanitizer_cov_dump@@Base+0xc34>
   278ec:	cmp	x9, x6
   278f0:	b.eq	27960 <__sanitizer_cov_dump@@Base+0xe00>  // b.none
   278f4:	cbz	x6, 27960 <__sanitizer_cov_dump@@Base+0xe00>
   278f8:	and	w8, w20, #0xfff00000
   278fc:	mov	x4, x6
   27900:	ldr	w0, [x4, #12]
   27904:	and	w0, w0, #0xfff00000
   27908:	cmp	w0, w8
   2790c:	b.ne	27958 <__sanitizer_cov_dump@@Base+0xdf8>  // b.any
   27910:	bfxil	x19, x28, #0, #32
   27914:	ldr	x0, [x4, #16]
   27918:	bfi	x19, x27, #32, #32
   2791c:	cmp	x0, x19
   27920:	b.ne	27958 <__sanitizer_cov_dump@@Base+0xdf8>  // b.any
   27924:	ldr	w3, [x4, #16]
   27928:	cbz	x3, 27a58 <__sanitizer_cov_dump@@Base+0xef8>
   2792c:	add	x7, x4, #0x18
   27930:	mov	x1, #0x0                   	// #0
   27934:	b	27944 <__sanitizer_cov_dump@@Base+0xde4>
   27938:	add	x1, x1, #0x1
   2793c:	cmp	x3, x1
   27940:	b.eq	27a58 <__sanitizer_cov_dump@@Base+0xef8>  // b.none
   27944:	ldr	x2, [x7, x1, lsl #3]
   27948:	ldr	x0, [x21, x1, lsl #3]
   2794c:	cmp	x2, x0
   27950:	b.eq	27938 <__sanitizer_cov_dump@@Base+0xdd8>  // b.none
   27954:	nop
   27958:	ldr	x4, [x4]
   2795c:	cbnz	x4, 27900 <__sanitizer_cov_dump@@Base+0xda0>
   27960:	lsr	x7, x5, #12
   27964:	add	x0, x7, #0x200, lsl #12
   27968:	add	x0, x24, x0, lsl #2
   2796c:	ldxr	w3, [x0]
   27970:	add	w1, w3, #0x1
   27974:	stlxr	w2, w1, [x0]
   27978:	cbnz	w2, 2796c <__sanitizer_cov_dump@@Base+0xe0c>
   2797c:	add	x28, x24, #0x800, lsl #12
   27980:	mov	w0, #0x7fffff              	// #8388607
   27984:	add	w3, w3, #0x1
   27988:	dmb	ish
   2798c:	cmp	w3, w0
   27990:	ldr	x0, [x28, #1024]
   27994:	add	x0, x0, #0x1
   27998:	str	x0, [x28, #1024]
   2799c:	b.hi	27b70 <__sanitizer_cov_dump@@Base+0x1010>  // b.pmore
   279a0:	orr	w7, w3, w7, lsl #23
   279a4:	cbz	w7, 27b8c <__sanitizer_cov_dump@@Base+0x102c>
   279a8:	adrp	x9, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   279ac:	sub	w27, w22, #0x1
   279b0:	add	x27, x27, #0x4
   279b4:	ldr	x1, [x9, #3720]
   279b8:	lsl	x27, x27, #3
   279bc:	add	x2, x1, #0x8
   279c0:	ldr	x19, [x1, #8]
   279c4:	dmb	ish
   279c8:	ldr	x3, [x1, #16]
   279cc:	dmb	ish
   279d0:	cbz	x19, 27a68 <__sanitizer_cov_dump@@Base+0xf08>
   279d4:	add	x0, x27, x19
   279d8:	cmp	x0, x3
   279dc:	b.hi	27a68 <__sanitizer_cov_dump@@Base+0xf08>  // b.pmore
   279e0:	ldxr	x3, [x2]
   279e4:	cmp	x3, x19
   279e8:	b.ne	279f4 <__sanitizer_cov_dump@@Base+0xe94>  // b.any
   279ec:	stlxr	w4, x0, [x2]
   279f0:	cbnz	w4, 279e0 <__sanitizer_cov_dump@@Base+0xe80>
   279f4:	dmb	ish
   279f8:	cmp	x3, x19
   279fc:	b.ne	279c0 <__sanitizer_cov_dump@@Base+0xe60>  // b.any
   27a00:	ldr	x0, [x28, #1032]
   27a04:	and	w20, w20, #0xfff00000
   27a08:	lsl	x2, x26, #3
   27a0c:	mov	x1, x21
   27a10:	add	x27, x0, x27
   27a14:	str	x27, [x28, #1032]
   27a18:	str	w7, [x19, #8]
   27a1c:	add	x0, x19, #0x18
   27a20:	str	w20, [x19, #12]
   27a24:	stp	w22, w25, [x19, #16]
   27a28:	stp	x5, x6, [sp, #104]
   27a2c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   27a30:	ldr	x6, [sp, #112]
   27a34:	str	x6, [x19]
   27a38:	dmb	ish
   27a3c:	ldr	x5, [sp, #104]
   27a40:	str	x19, [x24, x5, lsl #3]
   27a44:	cbz	x23, 27a50 <__sanitizer_cov_dump@@Base+0xef0>
   27a48:	mov	w0, #0x1                   	// #1
   27a4c:	strb	w0, [x23]
   27a50:	mov	x0, x19
   27a54:	b	27794 <__sanitizer_cov_dump@@Base+0xc34>
   27a58:	dmb	ish
   27a5c:	str	x6, [x24, x5, lsl #3]
   27a60:	mov	x0, x4
   27a64:	b	27794 <__sanitizer_cov_dump@@Base+0xc34>
   27a68:	ldr	x0, [x9, #3720]
   27a6c:	mov	w2, #0x1                   	// #1
   27a70:	ldxrb	w1, [x0]
   27a74:	stxrb	w3, w2, [x0]
   27a78:	cbnz	w3, 27a70 <__sanitizer_cov_dump@@Base+0xf10>
   27a7c:	dmb	ish
   27a80:	tst	w1, #0xff
   27a84:	b.eq	27aa8 <__sanitizer_cov_dump@@Base+0xf48>  // b.none
   27a88:	str	x5, [sp, #104]
   27a8c:	str	w7, [sp, #112]
   27a90:	str	x6, [sp, #120]
   27a94:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   27a98:	ldr	w7, [sp, #112]
   27a9c:	adrp	x9, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   27aa0:	ldr	x5, [sp, #104]
   27aa4:	ldr	x6, [sp, #120]
   27aa8:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27aac:	ldr	x3, [x9, #3720]
   27ab0:	add	x0, x0, #0xd30
   27ab4:	str	x0, [sp, #152]
   27ab8:	add	x4, x3, #0x8
   27abc:	nop
   27ac0:	ldr	x19, [x3, #8]
   27ac4:	dmb	ish
   27ac8:	ldr	x1, [x3, #16]
   27acc:	dmb	ish
   27ad0:	cbz	x19, 27b0c <__sanitizer_cov_dump@@Base+0xfac>
   27ad4:	add	x0, x27, x19
   27ad8:	cmp	x0, x1
   27adc:	b.hi	27b0c <__sanitizer_cov_dump@@Base+0xfac>  // b.pmore
   27ae0:	ldxr	x1, [x4]
   27ae4:	cmp	x1, x19
   27ae8:	b.ne	27af4 <__sanitizer_cov_dump@@Base+0xf94>  // b.any
   27aec:	stlxr	w2, x0, [x4]
   27af0:	cbnz	w2, 27ae0 <__sanitizer_cov_dump@@Base+0xf80>
   27af4:	dmb	ish
   27af8:	cmp	x1, x19
   27afc:	b.ne	27ac0 <__sanitizer_cov_dump@@Base+0xf60>  // b.any
   27b00:	dmb	ish
   27b04:	strb	wzr, [x3]
   27b08:	b	27a00 <__sanitizer_cov_dump@@Base+0xea0>
   27b0c:	ldr	x10, [x9, #3720]
   27b10:	cmp	x27, #0x10, lsl #12
   27b14:	ldr	x1, [sp, #152]
   27b18:	mov	x19, #0x10000               	// #65536
   27b1c:	str	xzr, [x10, #8]
   27b20:	csel	x19, x27, x19, cs  // cs = hs, nlast
   27b24:	mov	x0, x19
   27b28:	mov	w2, #0x0                   	// #0
   27b2c:	stp	x10, x5, [sp, #104]
   27b30:	str	w7, [sp, #120]
   27b34:	stp	x6, x3, [sp, #128]
   27b38:	str	x4, [sp, #144]
   27b3c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   27b40:	dmb	ish
   27b44:	add	x19, x19, x0
   27b48:	ldr	x10, [sp, #104]
   27b4c:	str	x19, [x10, #16]
   27b50:	dmb	ish
   27b54:	str	x0, [x10, #8]
   27b58:	adrp	x9, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   27b5c:	ldr	w7, [sp, #120]
   27b60:	ldr	x5, [sp, #112]
   27b64:	ldp	x6, x3, [sp, #128]
   27b68:	ldr	x4, [sp, #144]
   27b6c:	b	27ac0 <__sanitizer_cov_dump@@Base+0xf60>
   27b70:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27b74:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27b78:	add	x2, x2, #0xd08
   27b7c:	add	x0, x0, #0xc90
   27b80:	mov	x4, #0x800000              	// #8388608
   27b84:	mov	w1, #0x78                  	// #120
   27b88:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   27b8c:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27b90:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27b94:	add	x2, x2, #0xd20
   27b98:	add	x0, x0, #0xc90
   27b9c:	mov	x4, #0x0                   	// #0
   27ba0:	mov	x3, #0x0                   	// #0
   27ba4:	mov	w1, #0x7a                  	// #122
   27ba8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   27bac:	nop
   27bb0:	add	x0, x0, #0x4
   27bb4:	ret
   27bb8:	str	x30, [sp, #-16]!
   27bbc:	mov	x0, x30
   27bc0:	ldr	x30, [sp], #16
   27bc4:	ret
   27bc8:	stp	x19, x20, [sp, #-32]!
   27bcc:	cmp	x3, #0x0
   27bd0:	stp	x21, x30, [sp, #16]
   27bd4:	mov	x21, x3
   27bd8:	cinc	w3, w2, ne  // ne = any
   27bdc:	str	w3, [x0, #8]
   27be0:	cmp	w3, #0x100
   27be4:	b.hi	27c18 <__sanitizer_cov_dump@@Base+0x10b8>  // b.pmore
   27be8:	mov	x19, x0
   27bec:	mov	x20, x2
   27bf0:	add	x0, x0, #0x10
   27bf4:	lsl	x2, x2, #3
   27bf8:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   27bfc:	cbz	x21, 27c08 <__sanitizer_cov_dump@@Base+0x10a8>
   27c00:	add	x20, x20, #0x2
   27c04:	str	x21, [x19, x20, lsl #3]
   27c08:	ldp	x21, x30, [sp, #16]
   27c0c:	str	xzr, [x19, #2064]
   27c10:	ldp	x19, x20, [sp], #32
   27c14:	ret
   27c18:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27c1c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27c20:	mov	w3, w3
   27c24:	add	x2, x2, #0xd40
   27c28:	add	x0, x0, #0xd60
   27c2c:	mov	x4, #0x100                 	// #256
   27c30:	mov	w1, #0x23                  	// #35
   27c34:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   27c38:	stp	x19, x20, [sp, #-64]!
   27c3c:	cmp	w5, #0x1
   27c40:	stp	x21, x22, [sp, #16]
   27c44:	stp	x23, x24, [sp, #32]
   27c48:	stp	x25, x30, [sp, #48]
   27c4c:	b.ls	27d34 <__sanitizer_cov_dump@@Base+0x11d4>  // b.plast
   27c50:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   27c54:	mov	x19, x0
   27c58:	mov	w20, w5
   27c5c:	mov	x24, x1
   27c60:	ldr	x25, [x25, #4016]
   27c64:	mov	x22, x2
   27c68:	mov	x21, x3
   27c6c:	mov	x23, x4
   27c70:	ldr	x0, [x25]
   27c74:	cbz	x0, 27d28 <__sanitizer_cov_dump@@Base+0x11c8>
   27c78:	mov	w1, #0x1                   	// #1
   27c7c:	str	w1, [x19, #8]
   27c80:	str	x24, [x19, #16]
   27c84:	cmp	x21, #0xfff
   27c88:	b.ls	27d14 <__sanitizer_cov_dump@@Base+0x11b4>  // b.plast
   27c8c:	mov	x4, x23
   27c90:	cmp	x21, x23
   27c94:	b.ls	27d58 <__sanitizer_cov_dump@@Base+0x11f8>  // b.plast
   27c98:	cmp	x22, x23
   27c9c:	b.ls	27d14 <__sanitizer_cov_dump@@Base+0x11b4>  // b.plast
   27ca0:	sub	x3, x21, #0x10
   27ca4:	cmp	x22, x3
   27ca8:	b.cs	27d14 <__sanitizer_cov_dump@@Base+0x11b4>  // b.hs, b.nlast
   27cac:	tst	x22, #0x7
   27cb0:	b.ne	27d14 <__sanitizer_cov_dump@@Base+0x11b4>  // b.any
   27cb4:	mov	x2, x22
   27cb8:	ldr	x4, [x2, #8]
   27cbc:	cmp	x0, x4
   27cc0:	b.hi	27d14 <__sanitizer_cov_dump@@Base+0x11b4>  // b.pmore
   27cc4:	cmp	x24, x4
   27cc8:	b.eq	27cdc <__sanitizer_cov_dump@@Base+0x117c>  // b.none
   27ccc:	add	x5, x19, w1, uxtw #3
   27cd0:	add	w1, w1, #0x1
   27cd4:	str	w1, [x19, #8]
   27cd8:	str	x4, [x5, #16]
   27cdc:	cmp	x22, x21
   27ce0:	ldr	x2, [x2]
   27ce4:	b.cs	27d54 <__sanitizer_cov_dump@@Base+0x11f4>  // b.hs, b.nlast
   27ce8:	cmp	x22, x2
   27cec:	b.cs	27d14 <__sanitizer_cov_dump@@Base+0x11b4>  // b.hs, b.nlast
   27cf0:	cmp	x2, x3
   27cf4:	b.cs	27d14 <__sanitizer_cov_dump@@Base+0x11b4>  // b.hs, b.nlast
   27cf8:	tst	x2, #0x7
   27cfc:	b.ne	27d14 <__sanitizer_cov_dump@@Base+0x11b4>  // b.any
   27d00:	ldr	w1, [x19, #8]
   27d04:	cmp	w1, w20
   27d08:	b.cs	27d14 <__sanitizer_cov_dump@@Base+0x11b4>  // b.hs, b.nlast
   27d0c:	mov	x22, x2
   27d10:	b	27cb8 <__sanitizer_cov_dump@@Base+0x1158>
   27d14:	ldp	x21, x22, [sp, #16]
   27d18:	ldp	x23, x24, [sp, #32]
   27d1c:	ldp	x25, x30, [sp, #48]
   27d20:	ldp	x19, x20, [sp], #64
   27d24:	ret
   27d28:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   27d2c:	str	x0, [x25]
   27d30:	b	27c78 <__sanitizer_cov_dump@@Base+0x1118>
   27d34:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27d38:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27d3c:	mov	w3, w5
   27d40:	add	x2, x2, #0xdb8
   27d44:	add	x0, x0, #0xd60
   27d48:	mov	x4, #0x2                   	// #2
   27d4c:	mov	w1, #0x49                  	// #73
   27d50:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   27d54:	mov	x4, x22
   27d58:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27d5c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27d60:	mov	x3, x21
   27d64:	add	x2, x2, #0xdd0
   27d68:	add	x0, x0, #0xd60
   27d6c:	mov	w1, #0x33                  	// #51
   27d70:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   27d74:	nop
   27d78:	ldr	w2, [x0, #8]
   27d7c:	cmp	x1, w2, uxtw
   27d80:	b.cs	27e0c <__sanitizer_cov_dump@@Base+0x12ac>  // b.hs, b.nlast
   27d84:	sub	w6, w2, w1
   27d88:	str	w6, [x0, #8]
   27d8c:	cbz	w6, 27e08 <__sanitizer_cov_dump@@Base+0x12a8>
   27d90:	sub	x3, x6, #0x1
   27d94:	cmp	x3, #0x9
   27d98:	ccmp	x1, #0x1, #0x0, hi  // hi = pmore
   27d9c:	b.ls	27dec <__sanitizer_cov_dump@@Base+0x128c>  // b.plast
   27da0:	add	x4, x1, #0x2
   27da4:	lsr	x3, x6, #1
   27da8:	add	x5, x0, #0x10
   27dac:	mov	x2, #0x0                   	// #0
   27db0:	add	x4, x0, x4, lsl #3
   27db4:	lsl	x3, x3, #4
   27db8:	ldr	q0, [x4, x2]
   27dbc:	str	q0, [x5, x2]
   27dc0:	add	x2, x2, #0x10
   27dc4:	cmp	x2, x3
   27dc8:	b.ne	27db8 <__sanitizer_cov_dump@@Base+0x1258>  // b.any
   27dcc:	and	x2, x6, #0xfffffffffffffffe
   27dd0:	tbz	w6, #0, 27e08 <__sanitizer_cov_dump@@Base+0x12a8>
   27dd4:	add	x1, x2, x1
   27dd8:	add	x2, x2, #0x2
   27ddc:	add	x1, x1, #0x2
   27de0:	ldr	x1, [x0, x1, lsl #3]
   27de4:	str	x1, [x0, x2, lsl #3]
   27de8:	ret
   27dec:	add	x0, x0, #0x10
   27df0:	add	x2, x0, w6, uxtw #3
   27df4:	nop
   27df8:	ldr	x3, [x0, x1, lsl #3]
   27dfc:	str	x3, [x0], #8
   27e00:	cmp	x0, x2
   27e04:	b.ne	27df8 <__sanitizer_cov_dump@@Base+0x1298>  // b.any
   27e08:	ret
   27e0c:	str	x30, [sp, #-16]!
   27e10:	mov	w4, w2
   27e14:	mov	x3, x1
   27e18:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27e1c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27e20:	add	x2, x2, #0xdf8
   27e24:	add	x0, x0, #0xd60
   27e28:	mov	w1, #0x74                  	// #116
   27e2c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   27e30:	ldr	w9, [x0, #8]
   27e34:	cmp	x9, #0x1
   27e38:	b.ls	27e90 <__sanitizer_cov_dump@@Base+0x1330>  // b.plast
   27e3c:	ldr	x10, [x0]
   27e40:	mov	x3, #0x1                   	// #1
   27e44:	mov	x0, #0x0                   	// #0
   27e48:	ldr	x2, [x10]
   27e4c:	nop
   27e50:	sub	x7, x1, x2
   27e54:	ldr	x6, [x10, x3, lsl #3]
   27e58:	sub	x5, x2, x1
   27e5c:	cmp	x6, x1
   27e60:	sub	x8, x1, x6
   27e64:	sub	x4, x6, x1
   27e68:	csel	x4, x4, x8, cs  // cs = hs, nlast
   27e6c:	cmp	x2, x1
   27e70:	csel	x5, x5, x7, cs  // cs = hs, nlast
   27e74:	cmp	x5, x4
   27e78:	csel	x0, x3, x0, hi  // hi = pmore
   27e7c:	add	x3, x3, #0x1
   27e80:	csel	x2, x6, x2, hi  // hi = pmore
   27e84:	cmp	x9, x3
   27e88:	b.ne	27e50 <__sanitizer_cov_dump@@Base+0x12f0>  // b.any
   27e8c:	ret
   27e90:	mov	x0, #0x0                   	// #0
   27e94:	ret
   27e98:	stp	x19, x20, [sp, #-176]!
   27e9c:	stp	x21, x22, [sp, #16]
   27ea0:	mov	x21, x0
   27ea4:	ldr	x0, [x0]
   27ea8:	str	x30, [sp, #80]
   27eac:	cbz	x0, 27f0c <__sanitizer_cov_dump@@Base+0x13ac>
   27eb0:	ldr	w0, [x21, #8]
   27eb4:	cbz	w0, 27f0c <__sanitizer_cov_dump@@Base+0x13ac>
   27eb8:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   27ebc:	stp	x23, x24, [sp, #32]
   27ec0:	ldr	x22, [x20, #4016]
   27ec4:	stp	x25, x26, [sp, #48]
   27ec8:	stp	x27, x28, [sp, #64]
   27ecc:	ldr	x0, [x22]
   27ed0:	cbz	x0, 27f28 <__sanitizer_cov_dump@@Base+0x13c8>
   27ed4:	str	xzr, [sp, #112]
   27ed8:	cmp	xzr, x0, lsl #1
   27edc:	stp	xzr, xzr, [sp, #120]
   27ee0:	lsl	x19, x0, #1
   27ee4:	b.ne	27f54 <__sanitizer_cov_dump@@Base+0x13f4>  // b.any
   27ee8:	stp	xzr, xzr, [sp, #128]
   27eec:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   27ef0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   27ef4:	add	x2, x2, #0x58
   27ef8:	add	x0, x0, #0xad8
   27efc:	mov	x4, #0x0                   	// #0
   27f00:	mov	x3, #0x0                   	// #0
   27f04:	mov	w1, #0x1c5                 	// #453
   27f08:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   27f0c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   27f10:	add	x0, x0, #0xe10
   27f14:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   27f18:	ldp	x21, x22, [sp, #16]
   27f1c:	ldr	x30, [sp, #80]
   27f20:	ldp	x19, x20, [sp], #176
   27f24:	ret
   27f28:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   27f2c:	str	x0, [x22]
   27f30:	str	xzr, [sp, #112]
   27f34:	mov	x19, x0
   27f38:	stp	xzr, xzr, [sp, #120]
   27f3c:	cmp	xzr, x0, lsl #1
   27f40:	lsl	x1, x0, #1
   27f44:	b.eq	27ee8 <__sanitizer_cov_dump@@Base+0x1388>  // b.none
   27f48:	cbnz	x0, 282ec <__sanitizer_cov_dump@@Base+0x178c>
   27f4c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   27f50:	str	x0, [x22]
   27f54:	sub	x1, x0, #0x1
   27f58:	tst	x1, x0
   27f5c:	b.ne	282c0 <__sanitizer_cov_dump@@Base+0x1760>  // b.any
   27f60:	add	x1, x19, x1
   27f64:	neg	x0, x0
   27f68:	and	x23, x1, x0
   27f6c:	mov	w2, #0x0                   	// #0
   27f70:	mov	x0, x23
   27f74:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   27f78:	add	x1, x24, #0xb50
   27f7c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   27f80:	ldr	x1, [sp, #112]
   27f84:	mov	x22, x0
   27f88:	ldr	x2, [sp, #128]
   27f8c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   27f90:	ldp	x0, x1, [sp, #112]
   27f94:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   27f98:	stp	x22, x23, [sp, #112]
   27f9c:	ldr	x2, [sp, #128]
   27fa0:	cmp	x19, x2
   27fa4:	b.ls	282e4 <__sanitizer_cov_dump@@Base+0x1784>  // b.plast
   27fa8:	cmp	x19, x23
   27fac:	b.hi	281a4 <__sanitizer_cov_dump@@Base+0x1644>  // b.pmore
   27fb0:	add	x0, x22, x2
   27fb4:	mov	w1, #0x0                   	// #0
   27fb8:	sub	x2, x19, x2
   27fbc:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   27fc0:	stp	x19, xzr, [sp, #128]
   27fc4:	ldr	x22, [sp, #112]
   27fc8:	cbz	x19, 27eec <__sanitizer_cov_dump@@Base+0x138c>
   27fcc:	ldr	x23, [x20, #4016]
   27fd0:	strb	wzr, [x22]
   27fd4:	ldr	x19, [x23]
   27fd8:	cbz	x19, 28158 <__sanitizer_cov_dump@@Base+0x15f8>
   27fdc:	str	xzr, [sp, #144]
   27fe0:	stp	xzr, xzr, [sp, #152]
   27fe4:	sub	x23, x19, #0x1
   27fe8:	ands	x23, x23, x19
   27fec:	b.ne	282c0 <__sanitizer_cov_dump@@Base+0x1760>  // b.any
   27ff0:	lsl	x0, x19, #1
   27ff4:	neg	x25, x19
   27ff8:	sub	x0, x0, #0x1
   27ffc:	add	x1, x24, #0xb50
   28000:	and	x25, x0, x25
   28004:	mov	w2, #0x0                   	// #0
   28008:	mov	x0, x25
   2800c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   28010:	ldr	x1, [sp, #144]
   28014:	mov	x22, x0
   28018:	ldr	x2, [sp, #160]
   2801c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   28020:	ldp	x0, x1, [sp, #144]
   28024:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   28028:	stp	x22, x25, [sp, #144]
   2802c:	ldr	x2, [sp, #160]
   28030:	cmp	x19, x2
   28034:	b.ls	282f4 <__sanitizer_cov_dump@@Base+0x1794>  // b.plast
   28038:	cmp	x19, x25
   2803c:	b.hi	2821c <__sanitizer_cov_dump@@Base+0x16bc>  // b.pmore
   28040:	add	x0, x22, x2
   28044:	mov	w1, #0x0                   	// #0
   28048:	sub	x2, x19, x2
   2804c:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   28050:	ldr	x22, [sp, #144]
   28054:	stp	x19, xzr, [sp, #160]
   28058:	adrp	x26, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2805c:	strb	wzr, [x22]
   28060:	ldr	x1, [x26, #4056]
   28064:	str	xzr, [sp, #96]
   28068:	ldr	w0, [x21, #8]
   2806c:	ldr	w27, [x1, #192]
   28070:	cbz	w0, 2828c <__sanitizer_cov_dump@@Base+0x172c>
   28074:	adrp	x24, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   28078:	add	x28, sp, #0x70
   2807c:	add	x24, x24, #0x328
   28080:	ldr	x0, [x21]
   28084:	ldr	x1, [sp, #96]
   28088:	ldr	x19, [x0, x1, lsl #3]
   2808c:	cbz	x19, 2828c <__sanitizer_cov_dump@@Base+0x172c>
   28090:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   28094:	sub	x1, x19, #0x4
   28098:	bl	2aa50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2809c:	str	x0, [sp, #104]
   280a0:	cbz	x0, 281fc <__sanitizer_cov_dump@@Base+0x169c>
   280a4:	mov	x25, x0
   280a8:	adrp	x22, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   280ac:	ldr	x0, [sp, #128]
   280b0:	add	x22, x22, #0x730
   280b4:	mov	x19, x23
   280b8:	ldr	x2, [sp, #112]
   280bc:	cbz	x0, 27eec <__sanitizer_cov_dump@@Base+0x138c>
   280c0:	ldr	x1, [x26, #4056]
   280c4:	strb	wzr, [x2]
   280c8:	mov	x6, x24
   280cc:	mov	w2, w19
   280d0:	add	x3, x25, #0x8
   280d4:	mov	x0, x28
   280d8:	ldrb	w4, [x1, #189]
   280dc:	add	x20, x19, #0x1
   280e0:	ldr	x5, [x1, #24]
   280e4:	str	xzr, [sp, #136]
   280e8:	ldr	x1, [x1, #200]
   280ec:	bl	28c50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x428>
   280f0:	ldr	x1, [sp, #112]
   280f4:	mov	x0, x22
   280f8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   280fc:	add	w1, w27, w23
   28100:	sub	w0, w1, w19
   28104:	sub	w19, w1, w20
   28108:	cmp	w0, #0x0
   2810c:	b.le	28128 <__sanitizer_cov_dump@@Base+0x15c8>
   28110:	ldr	x0, [sp, #168]
   28114:	cbnz	x0, 28144 <__sanitizer_cov_dump@@Base+0x15e4>
   28118:	ldr	x1, [x25, #40]
   2811c:	cbz	x1, 28128 <__sanitizer_cov_dump@@Base+0x15c8>
   28120:	add	x0, sp, #0x90
   28124:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28128:	ldr	x25, [x25]
   2812c:	cbz	x25, 28178 <__sanitizer_cov_dump@@Base+0x1618>
   28130:	ldr	x0, [sp, #128]
   28134:	mov	x19, x20
   28138:	ldr	x2, [sp, #112]
   2813c:	cbnz	x0, 280c0 <__sanitizer_cov_dump@@Base+0x1560>
   28140:	b	27eec <__sanitizer_cov_dump@@Base+0x138c>
   28144:	add	x0, sp, #0x90
   28148:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2814c:	add	x1, x1, #0xea0
   28150:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28154:	b	28118 <__sanitizer_cov_dump@@Base+0x15b8>
   28158:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2815c:	str	x0, [x23]
   28160:	str	xzr, [sp, #144]
   28164:	mov	x19, x0
   28168:	stp	xzr, xzr, [sp, #152]
   2816c:	cbnz	x0, 27fe4 <__sanitizer_cov_dump@@Base+0x1484>
   28170:	stp	xzr, xzr, [sp, #160]
   28174:	b	27eec <__sanitizer_cov_dump@@Base+0x138c>
   28178:	ldr	x0, [sp, #104]
   2817c:	bl	29160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   28180:	ldr	x1, [sp, #96]
   28184:	ldr	w0, [x21, #8]
   28188:	add	x1, x1, #0x1
   2818c:	str	x1, [sp, #96]
   28190:	cmp	x0, x1
   28194:	b.ls	2828c <__sanitizer_cov_dump@@Base+0x172c>  // b.plast
   28198:	mov	x23, x20
   2819c:	mov	w27, w19
   281a0:	b	28080 <__sanitizer_cov_dump@@Base+0x1520>
   281a4:	ldr	x22, [x20, #4016]
   281a8:	ldr	x0, [x22]
   281ac:	cbz	x0, 28274 <__sanitizer_cov_dump@@Base+0x1714>
   281b0:	sub	x1, x0, #0x1
   281b4:	tst	x1, x0
   281b8:	b.ne	282c0 <__sanitizer_cov_dump@@Base+0x1760>  // b.any
   281bc:	add	x1, x19, x1
   281c0:	neg	x0, x0
   281c4:	and	x23, x1, x0
   281c8:	mov	w2, #0x0                   	// #0
   281cc:	add	x1, x24, #0xb50
   281d0:	mov	x0, x23
   281d4:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   281d8:	mov	x22, x0
   281dc:	ldr	x1, [sp, #112]
   281e0:	ldr	x2, [sp, #128]
   281e4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   281e8:	ldp	x0, x1, [sp, #112]
   281ec:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   281f0:	stp	x22, x23, [sp, #112]
   281f4:	ldr	x2, [sp, #128]
   281f8:	b	27fb0 <__sanitizer_cov_dump@@Base+0x1450>
   281fc:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28200:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28204:	add	x2, x2, #0xe28
   28208:	add	x0, x0, #0xe40
   2820c:	mov	x4, #0x0                   	// #0
   28210:	mov	x3, #0x0                   	// #0
   28214:	mov	w1, #0x23                  	// #35
   28218:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2821c:	ldr	x20, [x20, #4016]
   28220:	ldr	x0, [x20]
   28224:	cbz	x0, 28280 <__sanitizer_cov_dump@@Base+0x1720>
   28228:	sub	x1, x0, #0x1
   2822c:	tst	x1, x0
   28230:	b.ne	282c0 <__sanitizer_cov_dump@@Base+0x1760>  // b.any
   28234:	add	x1, x19, x1
   28238:	neg	x0, x0
   2823c:	and	x20, x1, x0
   28240:	mov	w2, #0x0                   	// #0
   28244:	add	x1, x24, #0xb50
   28248:	mov	x0, x20
   2824c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   28250:	mov	x22, x0
   28254:	ldr	x1, [sp, #144]
   28258:	ldr	x2, [sp, #160]
   2825c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   28260:	ldp	x0, x1, [sp, #144]
   28264:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   28268:	stp	x22, x20, [sp, #144]
   2826c:	ldr	x2, [sp, #160]
   28270:	b	28040 <__sanitizer_cov_dump@@Base+0x14e0>
   28274:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   28278:	str	x0, [x22]
   2827c:	b	281b0 <__sanitizer_cov_dump@@Base+0x1650>
   28280:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   28284:	str	x0, [x20]
   28288:	b	28228 <__sanitizer_cov_dump@@Base+0x16c8>
   2828c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28290:	add	x0, x0, #0xf40
   28294:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   28298:	ldr	x0, [sp, #168]
   2829c:	cbnz	x0, 282d0 <__sanitizer_cov_dump@@Base+0x1770>
   282a0:	ldp	x0, x1, [sp, #144]
   282a4:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   282a8:	ldp	x0, x1, [sp, #112]
   282ac:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   282b0:	ldp	x23, x24, [sp, #32]
   282b4:	ldp	x25, x26, [sp, #48]
   282b8:	ldp	x27, x28, [sp, #64]
   282bc:	b	27f18 <__sanitizer_cov_dump@@Base+0x13b8>
   282c0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   282c4:	add	x0, x0, #0xb38
   282c8:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   282cc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   282d0:	ldr	x1, [sp, #144]
   282d4:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   282d8:	add	x0, x0, #0xea8
   282dc:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   282e0:	b	282a0 <__sanitizer_cov_dump@@Base+0x1740>
   282e4:	stp	x19, xzr, [sp, #128]
   282e8:	b	27fcc <__sanitizer_cov_dump@@Base+0x146c>
   282ec:	mov	x19, x1
   282f0:	b	27f54 <__sanitizer_cov_dump@@Base+0x13f4>
   282f4:	stp	x19, xzr, [sp, #160]
   282f8:	b	28058 <__sanitizer_cov_dump@@Base+0x14f8>
   282fc:	nop
   28300:	mov	w8, w1
   28304:	and	w7, w7, #0xff
   28308:	mov	x1, x2
   2830c:	mov	x9, x0
   28310:	mov	x2, x3
   28314:	mov	x3, x5
   28318:	cbnz	w8, 28328 <__sanitizer_cov_dump@@Base+0x17c8>
   2831c:	str	wzr, [x0, #8]
   28320:	str	xzr, [x0, #2064]
   28324:	ret
   28328:	str	x2, [x0, #2064]
   2832c:	cmp	w8, #0x1
   28330:	b.eq	28354 <__sanitizer_cov_dump@@Base+0x17f4>  // b.none
   28334:	cbnz	w7, 28348 <__sanitizer_cov_dump@@Base+0x17e8>
   28338:	cbz	x4, 28360 <__sanitizer_cov_dump@@Base+0x1800>
   2833c:	mov	w3, w8
   28340:	mov	x2, x4
   28344:	b	2da60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5238>
   28348:	mov	w5, w8
   2834c:	mov	x4, x6
   28350:	b	27c38 <__sanitizer_cov_dump@@Base+0x10d8>
   28354:	str	w8, [x9, #8]
   28358:	str	x1, [x9, #16]
   2835c:	ret
   28360:	mov	w2, w8
   28364:	b	2d9c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5198>

0000000000028368 <__sanitizer_symbolize_pc@@Base>:
   28368:	cbnz	x3, 28370 <__sanitizer_symbolize_pc@@Base+0x8>
   2836c:	ret
   28370:	stp	x19, x20, [sp, #-112]!
   28374:	mov	x19, x2
   28378:	mov	x20, x3
   2837c:	stp	x21, x22, [sp, #16]
   28380:	mov	x21, x0
   28384:	stp	x23, x24, [sp, #32]
   28388:	mov	x23, x1
   2838c:	str	x30, [sp, #72]
   28390:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   28394:	sub	x1, x21, #0x4
   28398:	bl	2aa50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2839c:	mov	x21, x0
   283a0:	cbz	x0, 285dc <__sanitizer_symbolize_pc@@Base+0x274>
   283a4:	stp	x25, x26, [sp, #48]
   283a8:	adrp	x26, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   283ac:	ldr	x24, [x26, #4016]
   283b0:	ldr	x22, [x24]
   283b4:	str	x27, [sp, #64]
   283b8:	cbz	x22, 28514 <__sanitizer_symbolize_pc@@Base+0x1ac>
   283bc:	str	xzr, [sp, #80]
   283c0:	stp	xzr, xzr, [sp, #88]
   283c4:	sub	x0, x22, #0x1
   283c8:	tst	x0, x22
   283cc:	b.ne	285cc <__sanitizer_symbolize_pc@@Base+0x264>  // b.any
   283d0:	lsl	x0, x22, #1
   283d4:	neg	x25, x22
   283d8:	sub	x0, x0, #0x1
   283dc:	mov	w2, #0x0                   	// #0
   283e0:	and	x25, x0, x25
   283e4:	adrp	x27, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   283e8:	mov	x0, x25
   283ec:	add	x1, x27, #0xb50
   283f0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   283f4:	mov	x24, x0
   283f8:	ldr	x1, [sp, #80]
   283fc:	ldr	x2, [sp, #96]
   28400:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   28404:	ldp	x0, x1, [sp, #80]
   28408:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2840c:	stp	x24, x25, [sp, #80]
   28410:	ldr	x2, [sp, #96]
   28414:	cmp	x22, x2
   28418:	b.ls	2861c <__sanitizer_symbolize_pc@@Base+0x2b4>  // b.plast
   2841c:	cmp	x22, x25
   28420:	b.hi	28568 <__sanitizer_symbolize_pc@@Base+0x200>  // b.pmore
   28424:	add	x0, x24, x2
   28428:	mov	w1, #0x0                   	// #0
   2842c:	sub	x2, x22, x2
   28430:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   28434:	ldr	x24, [sp, #80]
   28438:	stp	x22, xzr, [sp, #96]
   2843c:	sub	x20, x20, #0x1
   28440:	strb	wzr, [x24]
   28444:	add	x20, x19, x20
   28448:	cmp	x19, x20
   2844c:	b.cs	284e4 <__sanitizer_symbolize_pc@@Base+0x17c>  // b.hs, b.nlast
   28450:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   28454:	adrp	x26, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   28458:	add	x27, sp, #0x50
   2845c:	add	x26, x26, #0x328
   28460:	ldr	x25, [x25, #4056]
   28464:	mov	w22, #0x0                   	// #0
   28468:	ldr	x0, [sp, #96]
   2846c:	ldr	x1, [sp, #80]
   28470:	cbz	x0, 28530 <__sanitizer_symbolize_pc@@Base+0x1c8>
   28474:	strb	wzr, [x1]
   28478:	mov	x0, x27
   2847c:	mov	x6, x26
   28480:	add	x3, x21, #0x8
   28484:	ldrb	w4, [x25, #189]
   28488:	mov	w2, w22
   2848c:	ldr	x5, [x25, #24]
   28490:	mov	x1, x23
   28494:	str	xzr, [sp, #104]
   28498:	bl	28c50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x428>
   2849c:	ldr	x0, [sp, #104]
   284a0:	cbz	x0, 28550 <__sanitizer_symbolize_pc@@Base+0x1e8>
   284a4:	ldr	x1, [sp, #80]
   284a8:	sub	x24, x20, x19
   284ac:	sub	x24, x24, #0x1
   284b0:	mov	x0, x19
   284b4:	mov	x2, x24
   284b8:	add	w22, w22, #0x1
   284bc:	bl	1b408 <__sanitizer_set_report_fd@@Base+0x3648>
   284c0:	ldr	x2, [sp, #104]
   284c4:	cmp	x2, x24
   284c8:	csel	x2, x2, x24, ls  // ls = plast
   284cc:	add	x19, x19, x2
   284d0:	strb	wzr, [x19], #1
   284d4:	ldr	x21, [x21]
   284d8:	cmp	x21, #0x0
   284dc:	ccmp	x20, x19, #0x0, ne  // ne = any
   284e0:	b.hi	28468 <__sanitizer_symbolize_pc@@Base+0x100>  // b.pmore
   284e4:	cmp	x19, x20
   284e8:	b.hi	285fc <__sanitizer_symbolize_pc@@Base+0x294>  // b.pmore
   284ec:	ldp	x0, x1, [sp, #80]
   284f0:	strb	wzr, [x19]
   284f4:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   284f8:	ldp	x25, x26, [sp, #48]
   284fc:	ldr	x27, [sp, #64]
   28500:	ldp	x21, x22, [sp, #16]
   28504:	ldp	x23, x24, [sp, #32]
   28508:	ldr	x30, [sp, #72]
   2850c:	ldp	x19, x20, [sp], #112
   28510:	ret
   28514:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   28518:	str	x0, [x24]
   2851c:	str	xzr, [sp, #80]
   28520:	mov	x22, x0
   28524:	stp	xzr, xzr, [sp, #88]
   28528:	cbnz	x0, 283c4 <__sanitizer_symbolize_pc@@Base+0x5c>
   2852c:	stp	xzr, xzr, [sp, #96]
   28530:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   28534:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   28538:	add	x2, x2, #0x58
   2853c:	add	x0, x0, #0xad8
   28540:	mov	x4, #0x0                   	// #0
   28544:	mov	x3, #0x0                   	// #0
   28548:	mov	w1, #0x1c5                 	// #453
   2854c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   28550:	ldr	x21, [x21]
   28554:	add	w22, w22, #0x1
   28558:	cmp	x21, #0x0
   2855c:	ccmp	x20, x19, #0x0, ne  // ne = any
   28560:	b.hi	28468 <__sanitizer_symbolize_pc@@Base+0x100>  // b.pmore
   28564:	b	284e4 <__sanitizer_symbolize_pc@@Base+0x17c>
   28568:	ldr	x26, [x26, #4016]
   2856c:	ldr	x0, [x26]
   28570:	cbz	x0, 285c0 <__sanitizer_symbolize_pc@@Base+0x258>
   28574:	sub	x1, x0, #0x1
   28578:	tst	x0, x1
   2857c:	b.ne	285cc <__sanitizer_symbolize_pc@@Base+0x264>  // b.any
   28580:	add	x1, x22, x1
   28584:	neg	x0, x0
   28588:	and	x25, x1, x0
   2858c:	mov	w2, #0x0                   	// #0
   28590:	add	x1, x27, #0xb50
   28594:	mov	x0, x25
   28598:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2859c:	mov	x24, x0
   285a0:	ldr	x1, [sp, #80]
   285a4:	ldr	x2, [sp, #96]
   285a8:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   285ac:	ldp	x0, x1, [sp, #80]
   285b0:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   285b4:	stp	x24, x25, [sp, #80]
   285b8:	ldr	x2, [sp, #96]
   285bc:	b	28424 <__sanitizer_symbolize_pc@@Base+0xbc>
   285c0:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   285c4:	str	x0, [x26]
   285c8:	b	28574 <__sanitizer_symbolize_pc@@Base+0x20c>
   285cc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   285d0:	add	x0, x0, #0xb38
   285d4:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   285d8:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   285dc:	mov	x0, x19
   285e0:	add	x19, x19, x20
   285e4:	mov	x2, x20
   285e8:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   285ec:	add	x1, x1, #0xec0
   285f0:	bl	1b408 <__sanitizer_set_report_fd@@Base+0x3648>
   285f4:	sturb	wzr, [x19, #-1]
   285f8:	b	28500 <__sanitizer_symbolize_pc@@Base+0x198>
   285fc:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28600:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28604:	add	x2, x2, #0xed8
   28608:	add	x0, x0, #0xe40
   2860c:	mov	x4, #0x0                   	// #0
   28610:	mov	x3, #0x0                   	// #0
   28614:	mov	w1, #0x87                  	// #135
   28618:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2861c:	stp	x22, xzr, [sp, #96]
   28620:	b	2843c <__sanitizer_symbolize_pc@@Base+0xd4>
   28624:	nop

0000000000028628 <__sanitizer_symbolize_global@@Base>:
   28628:	cbnz	x3, 28630 <__sanitizer_symbolize_global@@Base+0x8>
   2862c:	ret
   28630:	stp	x19, x20, [sp, #-176]!
   28634:	mov	x20, x0
   28638:	mov	x19, x3
   2863c:	stp	x21, x22, [sp, #16]
   28640:	mov	x22, x1
   28644:	mov	x21, x2
   28648:	stp	x23, x24, [sp, #32]
   2864c:	add	x23, sp, #0x70
   28650:	mov	x0, x23
   28654:	str	x30, [sp, #72]
   28658:	strb	wzr, [x2]
   2865c:	bl	291d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9a8>
   28660:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   28664:	mov	x2, x23
   28668:	mov	x1, x20
   2866c:	bl	2ab90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2368>
   28670:	tst	w0, #0xff
   28674:	b.eq	28758 <__sanitizer_symbolize_global@@Base+0x130>  // b.none
   28678:	stp	x25, x26, [sp, #48]
   2867c:	adrp	x26, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   28680:	ldr	x24, [x26, #4016]
   28684:	ldr	x20, [x24]
   28688:	str	x27, [sp, #64]
   2868c:	cbz	x20, 2876c <__sanitizer_symbolize_global@@Base+0x144>
   28690:	str	xzr, [sp, #80]
   28694:	stp	xzr, xzr, [sp, #88]
   28698:	sub	x0, x20, #0x1
   2869c:	tst	x0, x20
   286a0:	b.ne	2880c <__sanitizer_symbolize_global@@Base+0x1e4>  // b.any
   286a4:	lsl	x0, x20, #1
   286a8:	neg	x25, x20
   286ac:	sub	x0, x0, #0x1
   286b0:	mov	w2, #0x0                   	// #0
   286b4:	and	x25, x0, x25
   286b8:	adrp	x27, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   286bc:	mov	x0, x25
   286c0:	add	x1, x27, #0xb50
   286c4:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   286c8:	mov	x24, x0
   286cc:	ldr	x1, [sp, #80]
   286d0:	ldr	x2, [sp, #96]
   286d4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   286d8:	ldp	x0, x1, [sp, #80]
   286dc:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   286e0:	stp	x24, x25, [sp, #80]
   286e4:	ldr	x2, [sp, #96]
   286e8:	cmp	x20, x2
   286ec:	b.ls	2881c <__sanitizer_symbolize_global@@Base+0x1f4>  // b.plast
   286f0:	cmp	x20, x25
   286f4:	b.hi	287a8 <__sanitizer_symbolize_global@@Base+0x180>  // b.pmore
   286f8:	add	x0, x24, x2
   286fc:	mov	w1, #0x0                   	// #0
   28700:	sub	x2, x20, x2
   28704:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   28708:	ldr	x24, [sp, #80]
   2870c:	stp	x20, xzr, [sp, #96]
   28710:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   28714:	strb	wzr, [x24]
   28718:	mov	x2, x23
   2871c:	ldr	x3, [x3, #4056]
   28720:	mov	x1, x22
   28724:	add	x0, sp, #0x50
   28728:	ldr	x3, [x3, #24]
   2872c:	bl	288b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   28730:	ldr	x1, [sp, #80]
   28734:	mov	x2, x19
   28738:	mov	x0, x21
   2873c:	bl	1b408 <__sanitizer_set_report_fd@@Base+0x3648>
   28740:	ldp	x0, x1, [sp, #80]
   28744:	add	x2, x21, x19
   28748:	sturb	wzr, [x2, #-1]
   2874c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   28750:	ldp	x25, x26, [sp, #48]
   28754:	ldr	x27, [sp, #64]
   28758:	ldp	x21, x22, [sp, #16]
   2875c:	ldp	x23, x24, [sp, #32]
   28760:	ldr	x30, [sp, #72]
   28764:	ldp	x19, x20, [sp], #176
   28768:	ret
   2876c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   28770:	str	x0, [x24]
   28774:	str	xzr, [sp, #80]
   28778:	mov	x20, x0
   2877c:	stp	xzr, xzr, [sp, #88]
   28780:	cbnz	x0, 28698 <__sanitizer_symbolize_global@@Base+0x70>
   28784:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   28788:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2878c:	add	x2, x2, #0x58
   28790:	add	x0, x0, #0xad8
   28794:	mov	x4, #0x0                   	// #0
   28798:	mov	x3, #0x0                   	// #0
   2879c:	mov	w1, #0x1c5                 	// #453
   287a0:	stp	xzr, xzr, [sp, #96]
   287a4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   287a8:	ldr	x26, [x26, #4016]
   287ac:	ldr	x0, [x26]
   287b0:	cbz	x0, 28800 <__sanitizer_symbolize_global@@Base+0x1d8>
   287b4:	sub	x1, x0, #0x1
   287b8:	tst	x0, x1
   287bc:	b.ne	2880c <__sanitizer_symbolize_global@@Base+0x1e4>  // b.any
   287c0:	add	x1, x20, x1
   287c4:	neg	x0, x0
   287c8:	and	x25, x1, x0
   287cc:	mov	w2, #0x0                   	// #0
   287d0:	add	x1, x27, #0xb50
   287d4:	mov	x0, x25
   287d8:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   287dc:	mov	x24, x0
   287e0:	ldr	x1, [sp, #80]
   287e4:	ldr	x2, [sp, #96]
   287e8:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   287ec:	ldp	x0, x1, [sp, #80]
   287f0:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   287f4:	stp	x24, x25, [sp, #80]
   287f8:	ldr	x2, [sp, #96]
   287fc:	b	286f8 <__sanitizer_symbolize_global@@Base+0xd0>
   28800:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   28804:	str	x0, [x26]
   28808:	b	287b4 <__sanitizer_symbolize_global@@Base+0x18c>
   2880c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   28810:	add	x0, x0, #0xb38
   28814:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   28818:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2881c:	stp	x20, xzr, [sp, #96]
   28820:	b	28710 <__sanitizer_symbolize_global@@Base+0xe8>
   28824:	nop

0000000000028828 <__sanitizer_get_module_and_offset_for_pc@@Base>:
   28828:	stp	x19, x20, [sp, #-64]!
   2882c:	mov	x19, x1
   28830:	mov	x20, x2
   28834:	stp	x21, x22, [sp, #16]
   28838:	mov	x21, x0
   2883c:	mov	x22, x3
   28840:	str	x30, [sp, #32]
   28844:	str	xzr, [sp, #56]
   28848:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2884c:	mov	x1, x21
   28850:	mov	x3, x22
   28854:	add	x2, sp, #0x38
   28858:	mov	w21, #0x0                   	// #0
   2885c:	bl	29fe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b8>
   28860:	tst	w0, #0xff
   28864:	b.eq	28878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50>  // b.none
   28868:	cmp	x19, #0x0
   2886c:	mov	w21, #0x1                   	// #1
   28870:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   28874:	b.ne	2888c <__sanitizer_get_module_and_offset_for_pc@@Base+0x64>  // b.any
   28878:	mov	w0, w21
   2887c:	ldp	x21, x22, [sp, #16]
   28880:	ldr	x30, [sp, #32]
   28884:	ldp	x19, x20, [sp], #64
   28888:	ret
   2888c:	ldr	x1, [sp, #56]
   28890:	mov	x0, x19
   28894:	add	x19, x19, x20
   28898:	mov	x2, x20
   2889c:	bl	1b408 <__sanitizer_set_report_fd@@Base+0x3648>
   288a0:	sturb	wzr, [x19, #-1]
   288a4:	mov	w0, w21
   288a8:	ldp	x21, x22, [sp, #16]
   288ac:	ldr	x30, [sp, #32]
   288b0:	ldp	x19, x20, [sp], #64
   288b4:	ret
   288b8:	stp	x19, x20, [sp, #-80]!
   288bc:	stp	x21, x22, [sp, #16]
   288c0:	mov	x22, x2
   288c4:	str	x30, [sp, #64]
   288c8:	ldrb	w2, [x1]
   288cc:	cbz	w2, 28968 <__sanitizer_get_module_and_offset_for_pc@@Base+0x140>
   288d0:	mov	x19, x1
   288d4:	mov	x21, x0
   288d8:	stp	x23, x24, [sp, #32]
   288dc:	adrp	x23, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   288e0:	mov	x24, x3
   288e4:	add	x23, x23, #0xbf8
   288e8:	stp	x25, x26, [sp, #48]
   288ec:	adrp	x25, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   288f0:	adrp	x26, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   288f4:	add	x25, x25, #0xbd8
   288f8:	b	28914 <__sanitizer_get_module_and_offset_for_pc@@Base+0xec>
   288fc:	add	x19, x19, #0x2
   28900:	add	x1, x26, #0xf00
   28904:	mov	x0, x21
   28908:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2890c:	ldrb	w2, [x20, #1]
   28910:	cbz	w2, 28960 <__sanitizer_get_module_and_offset_for_pc@@Base+0x138>
   28914:	cmp	w2, #0x25
   28918:	add	x20, x19, #0x1
   2891c:	b.ne	289a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17c>  // b.any
   28920:	ldrb	w2, [x19, #1]
   28924:	cmp	w2, #0x6c
   28928:	b.eq	289c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19c>  // b.none
   2892c:	b.hi	28978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x150>  // b.pmore
   28930:	cmp	w2, #0x25
   28934:	b.eq	288fc <__sanitizer_get_module_and_offset_for_pc@@Base+0xd4>  // b.none
   28938:	cmp	w2, #0x67
   2893c:	b.ne	289dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b4>  // b.any
   28940:	ldr	x2, [x22, #40]
   28944:	mov	x1, x23
   28948:	mov	x0, x21
   2894c:	add	x19, x19, #0x2
   28950:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28954:	ldrb	w2, [x20, #1]
   28958:	cbnz	w2, 28914 <__sanitizer_get_module_and_offset_for_pc@@Base+0xec>
   2895c:	nop
   28960:	ldp	x23, x24, [sp, #32]
   28964:	ldp	x25, x26, [sp, #48]
   28968:	ldp	x21, x22, [sp, #16]
   2896c:	ldr	x30, [sp, #64]
   28970:	ldp	x19, x20, [sp], #80
   28974:	ret
   28978:	cmp	w2, #0x73
   2897c:	b.ne	289dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b4>  // b.any
   28980:	ldr	x0, [x22, #24]
   28984:	mov	x1, x24
   28988:	add	x19, x19, #0x2
   2898c:	bl	14828 <_ZdaPvRKSt9nothrow_t@@Base+0x2b68>
   28990:	mov	x2, x0
   28994:	mov	x1, x23
   28998:	mov	x0, x21
   2899c:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   289a0:	b	2890c <__sanitizer_get_module_and_offset_for_pc@@Base+0xe4>
   289a4:	mov	x0, x21
   289a8:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   289ac:	add	x1, x1, #0xef8
   289b0:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   289b4:	mov	x0, x20
   289b8:	mov	x20, x19
   289bc:	mov	x19, x0
   289c0:	b	2890c <__sanitizer_get_module_and_offset_for_pc@@Base+0xe4>
   289c4:	ldr	x2, [x22, #32]
   289c8:	add	x19, x19, #0x2
   289cc:	mov	x1, x25
   289d0:	mov	x0, x21
   289d4:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   289d8:	b	2890c <__sanitizer_get_module_and_offset_for_pc@@Base+0xe4>
   289dc:	mov	w1, w2
   289e0:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   289e4:	add	x0, x0, #0xf08
   289e8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   289ec:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   289f0:	stp	x19, x20, [sp, #-48]!
   289f4:	cmp	w2, #0x0
   289f8:	and	w4, w4, #0xff
   289fc:	stp	x21, x22, [sp, #16]
   28a00:	mov	x20, x0
   28a04:	mov	w19, w2
   28a08:	str	x30, [sp, #32]
   28a0c:	mov	x0, x1
   28a10:	mov	w21, w3
   28a14:	ccmp	w4, #0x0, #0x4, gt
   28a18:	mov	x1, x5
   28a1c:	b.ne	28a8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x264>  // b.any
   28a20:	bl	14828 <_ZdaPvRKSt9nothrow_t@@Base+0x2b68>
   28a24:	mov	x2, x0
   28a28:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   28a2c:	mov	x0, x20
   28a30:	add	x1, x1, #0xbf8
   28a34:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28a38:	cmp	w19, #0x0
   28a3c:	b.gt	28a50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x228>
   28a40:	ldp	x21, x22, [sp, #16]
   28a44:	ldr	x30, [sp, #32]
   28a48:	ldp	x19, x20, [sp], #48
   28a4c:	ret
   28a50:	adrp	x22, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28a54:	add	x22, x22, #0xf58
   28a58:	mov	w2, w19
   28a5c:	mov	x1, x22
   28a60:	mov	x0, x20
   28a64:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28a68:	cmp	w21, #0x0
   28a6c:	b.le	28a40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x218>
   28a70:	mov	w2, w21
   28a74:	mov	x1, x22
   28a78:	mov	x0, x20
   28a7c:	ldp	x21, x22, [sp, #16]
   28a80:	ldr	x30, [sp, #32]
   28a84:	ldp	x19, x20, [sp], #48
   28a88:	b	1fc80 <__sanitizer_on_print@@Base+0x420>
   28a8c:	bl	14828 <_ZdaPvRKSt9nothrow_t@@Base+0x2b68>
   28a90:	mov	x2, x0
   28a94:	mov	w3, w19
   28a98:	mov	x0, x20
   28a9c:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28aa0:	add	x1, x1, #0xf48
   28aa4:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28aa8:	cmp	w21, #0x0
   28aac:	b.gt	28acc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a4>
   28ab0:	mov	x0, x20
   28ab4:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   28ab8:	ldp	x21, x22, [sp, #16]
   28abc:	add	x1, x1, #0x5e0
   28ac0:	ldr	x30, [sp, #32]
   28ac4:	ldp	x19, x20, [sp], #48
   28ac8:	b	1fc80 <__sanitizer_on_print@@Base+0x420>
   28acc:	mov	w2, w21
   28ad0:	mov	x0, x20
   28ad4:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28ad8:	add	x1, x1, #0xf50
   28adc:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28ae0:	mov	x0, x20
   28ae4:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   28ae8:	ldp	x21, x22, [sp, #16]
   28aec:	add	x1, x1, #0x5e0
   28af0:	ldr	x30, [sp, #32]
   28af4:	ldp	x19, x20, [sp], #48
   28af8:	b	1fc80 <__sanitizer_on_print@@Base+0x420>
   28afc:	nop
   28b00:	stp	x19, x20, [sp, #-32]!
   28b04:	mov	x20, x0
   28b08:	mov	w19, w3
   28b0c:	mov	x0, x1
   28b10:	mov	x1, x4
   28b14:	stp	x21, x30, [sp, #16]
   28b18:	mov	x21, x2
   28b1c:	bl	14828 <_ZdaPvRKSt9nothrow_t@@Base+0x2b68>
   28b20:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28b24:	mov	x2, x0
   28b28:	add	x1, x1, #0xfa0
   28b2c:	mov	x0, x20
   28b30:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28b34:	cbnz	w19, 28b54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32c>
   28b38:	mov	x2, x21
   28b3c:	mov	x0, x20
   28b40:	ldp	x21, x30, [sp, #16]
   28b44:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28b48:	ldp	x19, x20, [sp], #32
   28b4c:	add	x1, x1, #0xfd8
   28b50:	b	1fc80 <__sanitizer_on_print@@Base+0x420>
   28b54:	cmp	w19, #0x5
   28b58:	b.eq	28c24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fc>  // b.none
   28b5c:	b.hi	28ba4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37c>  // b.pmore
   28b60:	cmp	w19, #0x3
   28b64:	b.eq	28c18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f0>  // b.none
   28b68:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28b6c:	cmp	w19, #0x4
   28b70:	add	x2, x1, #0xf88
   28b74:	b.ne	28bd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a8>  // b.any
   28b78:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28b7c:	mov	x0, x20
   28b80:	add	x1, x1, #0xfd0
   28b84:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28b88:	mov	x2, x21
   28b8c:	mov	x0, x20
   28b90:	ldp	x21, x30, [sp, #16]
   28b94:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28b98:	ldp	x19, x20, [sp], #32
   28b9c:	add	x1, x1, #0xfd8
   28ba0:	b	1fc80 <__sanitizer_on_print@@Base+0x420>
   28ba4:	cmp	w19, #0x7
   28ba8:	b.eq	28c0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e4>  // b.none
   28bac:	cmp	w19, #0x8
   28bb0:	b.ne	28bec <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c4>  // b.any
   28bb4:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28bb8:	mov	x0, x20
   28bbc:	add	x2, x1, #0xf90
   28bc0:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28bc4:	add	x1, x1, #0xfd0
   28bc8:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28bcc:	b	28b88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x360>
   28bd0:	cmp	w19, #0x1
   28bd4:	b.eq	28c00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d8>  // b.none
   28bd8:	cmp	w19, #0x2
   28bdc:	b.ne	28c30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x408>  // b.any
   28be0:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28be4:	add	x2, x1, #0xf68
   28be8:	b	28b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   28bec:	cmp	w19, #0x6
   28bf0:	b.ne	28c30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x408>  // b.any
   28bf4:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28bf8:	add	x2, x1, #0xf98
   28bfc:	b	28b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   28c00:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28c04:	add	x2, x1, #0xf70
   28c08:	b	28b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   28c0c:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28c10:	add	x2, x1, #0xf60
   28c14:	b	28b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   28c18:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28c1c:	add	x2, x1, #0xf80
   28c20:	b	28b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   28c24:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28c28:	add	x2, x1, #0xf78
   28c2c:	b	28b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   28c30:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28c34:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   28c38:	add	x2, x2, #0xfa8
   28c3c:	add	x0, x0, #0xad8
   28c40:	mov	x4, #0x0                   	// #0
   28c44:	mov	x3, #0x0                   	// #0
   28c48:	mov	w1, #0x2b8                 	// #696
   28c4c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   28c50:	stp	x19, x20, [sp, #-112]!
   28c54:	mov	x19, x1
   28c58:	mov	x20, x0
   28c5c:	mov	x0, x1
   28c60:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   28c64:	add	x1, x1, #0xc20
   28c68:	stp	x21, x22, [sp, #16]
   28c6c:	mov	x21, x3
   28c70:	mov	x22, x6
   28c74:	stp	x23, x24, [sp, #32]
   28c78:	mov	x23, x5
   28c7c:	stp	x25, x26, [sp, #48]
   28c80:	mov	w26, w2
   28c84:	stp	x27, x28, [sp, #64]
   28c88:	and	w27, w4, #0xff
   28c8c:	str	x30, [sp, #80]
   28c90:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   28c94:	cbz	w0, 28fc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x798>
   28c98:	ldrb	w2, [x19]
   28c9c:	cbz	w2, 28d70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x548>
   28ca0:	adrp	x25, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   28ca4:	adrp	x24, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28ca8:	add	x25, x25, #0xbd8
   28cac:	add	x24, x24, #0xfe8
   28cb0:	b	28d40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x518>
   28cb4:	ldrb	w2, [x19, #1]
   28cb8:	cmp	w2, #0x6c
   28cbc:	b.eq	28fa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x780>  // b.none
   28cc0:	b.hi	28de8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c0>  // b.pmore
   28cc4:	cmp	w2, #0x4d
   28cc8:	b.eq	28f70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x748>  // b.none
   28ccc:	b.ls	28db4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58c>  // b.plast
   28cd0:	cmp	w2, #0x63
   28cd4:	b.eq	28f58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x730>  // b.none
   28cd8:	cmp	w2, #0x66
   28cdc:	b.ne	28d8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x564>  // b.any
   28ce0:	ldr	x3, [x21, #32]
   28ce4:	cbz	x3, 28d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f8>
   28ce8:	cbz	x22, 28d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f8>
   28cec:	mov	x0, x22
   28cf0:	str	x3, [sp, #96]
   28cf4:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   28cf8:	mov	x2, x0
   28cfc:	ldr	x3, [sp, #96]
   28d00:	mov	x1, x22
   28d04:	stp	x2, x3, [sp, #96]
   28d08:	mov	x0, x3
   28d0c:	bl	1a4e8 <__sanitizer_set_report_fd@@Base+0x2728>
   28d10:	cmp	w0, #0x0
   28d14:	ldp	x2, x3, [sp, #96]
   28d18:	add	x2, x3, x2
   28d1c:	csel	x3, x2, x3, eq  // eq = none
   28d20:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   28d24:	mov	x2, x3
   28d28:	add	x19, x19, #0x2
   28d2c:	mov	x0, x20
   28d30:	add	x1, x1, #0xbf8
   28d34:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28d38:	ldrb	w2, [x28, #1]
   28d3c:	cbz	w2, 28d70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x548>
   28d40:	cmp	w2, #0x25
   28d44:	add	x28, x19, #0x1
   28d48:	b.eq	28cb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48c>  // b.none
   28d4c:	mov	x0, x20
   28d50:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28d54:	add	x1, x1, #0xef8
   28d58:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28d5c:	mov	x0, x28
   28d60:	mov	x28, x19
   28d64:	mov	x19, x0
   28d68:	ldrb	w2, [x28, #1]
   28d6c:	cbnz	w2, 28d40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x518>
   28d70:	ldp	x21, x22, [sp, #16]
   28d74:	ldp	x23, x24, [sp, #32]
   28d78:	ldp	x25, x26, [sp, #48]
   28d7c:	ldp	x27, x28, [sp, #64]
   28d80:	ldr	x30, [sp, #80]
   28d84:	ldp	x19, x20, [sp], #112
   28d88:	ret
   28d8c:	cmp	w2, #0x53
   28d90:	b.ne	29018 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f0>  // b.any
   28d94:	ldp	w2, w3, [x21, #56]
   28d98:	add	x19, x19, #0x2
   28d9c:	ldr	x1, [x21, #48]
   28da0:	mov	x5, x23
   28da4:	mov	w4, w27
   28da8:	mov	x0, x20
   28dac:	bl	289f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c8>
   28db0:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28db4:	cmp	w2, #0x46
   28db8:	b.eq	28ec0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x698>  // b.none
   28dbc:	cmp	w2, #0x4c
   28dc0:	b.ne	28e1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f4>  // b.any
   28dc4:	ldr	x1, [x21, #48]
   28dc8:	add	x19, x19, #0x2
   28dcc:	cbz	x1, 28fd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a8>
   28dd0:	ldp	w2, w3, [x21, #56]
   28dd4:	mov	x5, x23
   28dd8:	mov	w4, w27
   28ddc:	mov	x0, x20
   28de0:	bl	289f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c8>
   28de4:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28de8:	cmp	w2, #0x70
   28dec:	b.eq	28f40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x718>  // b.none
   28df0:	b.ls	28e6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x644>  // b.plast
   28df4:	cmp	w2, #0x71
   28df8:	b.ne	28e3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x614>  // b.any
   28dfc:	ldr	x2, [x21, #40]
   28e00:	add	x19, x19, #0x2
   28e04:	mov	x1, x24
   28e08:	mov	x0, x20
   28e0c:	cmn	x2, #0x1
   28e10:	csel	x2, x2, xzr, ne  // ne = any
   28e14:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28e18:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28e1c:	cmp	w2, #0x25
   28e20:	b.ne	29018 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f0>  // b.any
   28e24:	add	x19, x19, #0x2
   28e28:	mov	x0, x20
   28e2c:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28e30:	add	x1, x1, #0xf00
   28e34:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28e38:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28e3c:	cmp	w2, #0x73
   28e40:	b.ne	29018 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f0>  // b.any
   28e44:	ldr	x0, [x21, #48]
   28e48:	mov	x1, x23
   28e4c:	bl	14828 <_ZdaPvRKSt9nothrow_t@@Base+0x2b68>
   28e50:	add	x19, x19, #0x2
   28e54:	mov	x2, x0
   28e58:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   28e5c:	mov	x0, x20
   28e60:	add	x1, x1, #0xbf8
   28e64:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28e68:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28e6c:	cmp	w2, #0x6e
   28e70:	b.eq	28ea4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67c>  // b.none
   28e74:	cmp	w2, #0x6f
   28e78:	b.ne	28e94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66c>  // b.any
   28e7c:	ldr	x2, [x21, #16]
   28e80:	add	x19, x19, #0x2
   28e84:	mov	x1, x24
   28e88:	mov	x0, x20
   28e8c:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28e90:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28e94:	cmp	w2, #0x6d
   28e98:	b.ne	29018 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f0>  // b.any
   28e9c:	ldr	x0, [x21, #8]
   28ea0:	b	28e48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x620>
   28ea4:	add	x19, x19, #0x2
   28ea8:	mov	w2, w26
   28eac:	mov	x0, x20
   28eb0:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28eb4:	add	x1, x1, #0xfe0
   28eb8:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28ebc:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28ec0:	ldr	x3, [x21, #32]
   28ec4:	add	x19, x19, #0x2
   28ec8:	cbz	x3, 28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28ecc:	cbz	x22, 28f04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6dc>
   28ed0:	mov	x0, x22
   28ed4:	str	x3, [sp, #96]
   28ed8:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   28edc:	mov	x2, x0
   28ee0:	ldr	x3, [sp, #96]
   28ee4:	mov	x1, x22
   28ee8:	stp	x2, x3, [sp, #96]
   28eec:	mov	x0, x3
   28ef0:	bl	1a4e8 <__sanitizer_set_report_fd@@Base+0x2728>
   28ef4:	cmp	w0, #0x0
   28ef8:	ldp	x2, x3, [sp, #96]
   28efc:	add	x2, x3, x2
   28f00:	csel	x3, x2, x3, eq  // eq = none
   28f04:	mov	x0, x20
   28f08:	mov	x2, x3
   28f0c:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28f10:	add	x1, x1, #0xff0
   28f14:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28f18:	ldr	x0, [x21, #48]
   28f1c:	cbnz	x0, 28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28f20:	ldr	x2, [x21, #40]
   28f24:	cmn	x2, #0x1
   28f28:	b.eq	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>  // b.none
   28f2c:	mov	x0, x20
   28f30:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   28f34:	add	x1, x1, #0xff8
   28f38:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28f3c:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28f40:	ldr	x2, [x21]
   28f44:	add	x19, x19, #0x2
   28f48:	mov	x1, x24
   28f4c:	mov	x0, x20
   28f50:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28f54:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28f58:	ldr	w2, [x21, #60]
   28f5c:	add	x19, x19, #0x2
   28f60:	mov	x1, x25
   28f64:	mov	x0, x20
   28f68:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28f6c:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28f70:	ldr	x2, [x21]
   28f74:	add	x19, x19, #0x2
   28f78:	tbnz	x2, #60, 28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28f7c:	ldr	x0, [x21, #8]
   28f80:	cbz	x0, 28ff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c8>
   28f84:	bl	148a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2be8>
   28f88:	mov	x1, x0
   28f8c:	ldr	w3, [x21, #24]
   28f90:	mov	x0, x20
   28f94:	ldr	x2, [x21, #16]
   28f98:	adrp	x4, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   28f9c:	add	x4, x4, #0x328
   28fa0:	bl	28b00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d8>
   28fa4:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28fa8:	ldr	w2, [x21, #56]
   28fac:	add	x19, x19, #0x2
   28fb0:	mov	x1, x25
   28fb4:	mov	x0, x20
   28fb8:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   28fbc:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28fc0:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   28fc4:	mov	w2, #0x20                  	// #32
   28fc8:	add	x19, x19, #0x20
   28fcc:	b	28ca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x478>
   28fd0:	ldr	x1, [x21, #8]
   28fd4:	cbz	x1, 29004 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7dc>
   28fd8:	ldr	w3, [x21, #24]
   28fdc:	mov	x4, x23
   28fe0:	ldr	x2, [x21, #16]
   28fe4:	mov	x0, x20
   28fe8:	bl	28b00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d8>
   28fec:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28ff0:	mov	x0, x20
   28ff4:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   28ff8:	add	x1, x1, #0x18
   28ffc:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   29000:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   29004:	mov	x0, x20
   29008:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2900c:	add	x1, x1, #0x0
   29010:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   29014:	b	28d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   29018:	mov	w1, w2
   2901c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   29020:	add	x0, x0, #0xf08
   29024:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   29028:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2902c:	nop
   29030:	stp	x19, x30, [sp, #-16]!
   29034:	mov	x19, x0
   29038:	mov	x2, #0x40                  	// #64
   2903c:	mov	w1, #0x0                   	// #0
   29040:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   29044:	mov	x0, #0xffffffffffffffff    	// #-1
   29048:	str	x0, [x19, #40]
   2904c:	ldp	x19, x30, [sp], #16
   29050:	ret
   29054:	nop
   29058:	stp	x19, x30, [sp, #-16]!
   2905c:	mov	x19, x0
   29060:	mov	x1, #0x0                   	// #0
   29064:	ldr	x0, [x0, #8]
   29068:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2906c:	ldr	x0, [x19, #32]
   29070:	mov	x1, #0x0                   	// #0
   29074:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29078:	ldr	x0, [x19, #48]
   2907c:	mov	x1, #0x0                   	// #0
   29080:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29084:	mov	x0, x19
   29088:	mov	x2, #0x40                  	// #64
   2908c:	mov	w1, #0x0                   	// #0
   29090:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   29094:	mov	x0, #0xffffffffffffffff    	// #-1
   29098:	str	x0, [x19, #40]
   2909c:	ldp	x19, x30, [sp], #16
   290a0:	ret
   290a4:	nop
   290a8:	stp	x19, x20, [sp, #-32]!
   290ac:	mov	x19, x0
   290b0:	mov	w20, w3
   290b4:	mov	x0, x1
   290b8:	stp	x21, x30, [sp, #16]
   290bc:	mov	x21, x2
   290c0:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   290c4:	stp	x0, x21, [x19, #8]
   290c8:	str	w20, [x19, #24]
   290cc:	ldp	x21, x30, [sp, #16]
   290d0:	ldp	x19, x20, [sp], #32
   290d4:	ret
   290d8:	stp	x19, x30, [sp, #-16]!
   290dc:	mov	x19, x0
   290e0:	mov	x2, #0x40                  	// #64
   290e4:	mov	w1, #0x0                   	// #0
   290e8:	str	xzr, [x19], #8
   290ec:	mov	x0, x19
   290f0:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   290f4:	mov	x0, #0xffffffffffffffff    	// #-1
   290f8:	str	x0, [x19, #40]
   290fc:	ldp	x19, x30, [sp], #16
   29100:	ret
   29104:	nop
   29108:	stp	x19, x20, [sp, #-32]!
   2910c:	mov	x2, #0x0                   	// #0
   29110:	mov	x1, #0x0                   	// #0
   29114:	stp	x21, x30, [sp, #16]
   29118:	mov	x21, x0
   2911c:	mov	x0, #0x48                  	// #72
   29120:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   29124:	mov	x20, x0
   29128:	mov	x19, x0
   2912c:	mov	x2, #0x40                  	// #64
   29130:	mov	w1, #0x0                   	// #0
   29134:	str	xzr, [x20], #8
   29138:	mov	x0, x20
   2913c:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   29140:	mov	x0, #0xffffffffffffffff    	// #-1
   29144:	str	x0, [x20, #40]
   29148:	str	x21, [x19, #8]
   2914c:	mov	x0, x19
   29150:	ldp	x21, x30, [sp, #16]
   29154:	ldp	x19, x20, [sp], #32
   29158:	ret
   2915c:	nop
   29160:	stp	x19, x20, [sp, #-32]!
   29164:	mov	x19, x0
   29168:	add	x20, x0, #0x8
   2916c:	ldr	x0, [x0, #16]
   29170:	mov	x1, #0x0                   	// #0
   29174:	str	x30, [sp, #16]
   29178:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2917c:	ldr	x0, [x19, #40]
   29180:	mov	x1, #0x0                   	// #0
   29184:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29188:	ldr	x0, [x19, #56]
   2918c:	mov	x1, #0x0                   	// #0
   29190:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29194:	mov	w1, #0x0                   	// #0
   29198:	mov	x0, x20
   2919c:	mov	x2, #0x40                  	// #64
   291a0:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   291a4:	ldr	x0, [x19]
   291a8:	mov	x1, #0xffffffffffffffff    	// #-1
   291ac:	str	x1, [x19, #48]
   291b0:	cbz	x0, 291b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x990>
   291b4:	bl	29160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   291b8:	mov	x0, x19
   291bc:	mov	x1, #0x0                   	// #0
   291c0:	ldr	x30, [sp, #16]
   291c4:	ldp	x19, x20, [sp], #32
   291c8:	b	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   291cc:	nop
   291d0:	mov	x2, #0x40                  	// #64
   291d4:	mov	w1, #0x0                   	// #0
   291d8:	b	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   291dc:	nop
   291e0:	stp	x19, x30, [sp, #-16]!
   291e4:	mov	x19, x0
   291e8:	mov	x1, #0x0                   	// #0
   291ec:	ldr	x0, [x0]
   291f0:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   291f4:	ldr	x0, [x19, #24]
   291f8:	mov	x1, #0x0                   	// #0
   291fc:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29200:	ldr	x0, [x19, #40]
   29204:	mov	x1, #0x0                   	// #0
   29208:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2920c:	mov	x0, x19
   29210:	mov	x2, #0x40                  	// #64
   29214:	ldp	x19, x30, [sp], #16
   29218:	mov	w1, #0x0                   	// #0
   2921c:	b	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   29220:	stp	x19, x20, [sp, #-32]!
   29224:	mov	x1, #0x0                   	// #0
   29228:	stp	x21, x30, [sp, #16]
   2922c:	mov	x21, x0
   29230:	ldr	x0, [x0]
   29234:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29238:	ldr	x0, [x21, #40]
   2923c:	ldr	x19, [x21, #24]
   29240:	lsl	x20, x0, #3
   29244:	sub	x20, x20, x0
   29248:	add	x20, x19, x20, lsl #3
   2924c:	cmp	x20, x19
   29250:	b.eq	29288 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa60>  // b.none
   29254:	nop
   29258:	ldr	x0, [x19]
   2925c:	mov	x1, #0x0                   	// #0
   29260:	add	x19, x19, #0x38
   29264:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29268:	ldur	x0, [x19, #-48]
   2926c:	mov	x1, #0x0                   	// #0
   29270:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29274:	ldur	x0, [x19, #-40]
   29278:	mov	x1, #0x0                   	// #0
   2927c:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29280:	cmp	x20, x19
   29284:	b.ne	29258 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa30>  // b.any
   29288:	str	xzr, [x21, #40]
   2928c:	ldp	x21, x30, [sp, #16]
   29290:	ldp	x19, x20, [sp], #32
   29294:	ret
   29298:	strb	wzr, [x0, #104]
   2929c:	ret
   292a0:	ldr	x3, [x0, #224]
   292a4:	cbz	x3, 292cc <__sanitizer_get_module_and_offset_for_pc@@Base+0xaa4>
   292a8:	str	x30, [sp, #-16]!
   292ac:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   292b0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   292b4:	add	x2, x2, #0x38
   292b8:	add	x0, x0, #0x68
   292bc:	mov	x4, #0x0                   	// #0
   292c0:	mov	x3, #0x0                   	// #0
   292c4:	mov	w1, #0x59                  	// #89
   292c8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   292cc:	ldr	x3, [x0, #232]
   292d0:	cbnz	x3, 292a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa80>
   292d4:	stp	x1, x2, [x0, #224]
   292d8:	ret
   292dc:	nop
   292e0:	stp	x19, x20, [sp, #-48]!
   292e4:	mov	x20, x0
   292e8:	ldr	x0, [x0, #32]
   292ec:	stp	x21, x22, [sp, #16]
   292f0:	mov	x21, x1
   292f4:	str	x30, [sp, #32]
   292f8:	bl	1c6d8 <__sanitizer_set_report_fd@@Base+0x4918>
   292fc:	ldr	x0, [x20, #24]
   29300:	cbz	x0, 29310 <__sanitizer_get_module_and_offset_for_pc@@Base+0xae8>
   29304:	mov	x1, x21
   29308:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2930c:	cbz	w0, 293b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb88>
   29310:	ldr	x0, [x20, #16]
   29314:	mov	x19, #0x0                   	// #0
   29318:	cbnz	x0, 29330 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb08>
   2931c:	b	29370 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb48>
   29320:	ldr	x0, [x20, #16]
   29324:	add	x19, x19, #0x1
   29328:	cmp	x19, x0
   2932c:	b.cs	29370 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb48>  // b.hs, b.nlast
   29330:	ldr	x0, [x20]
   29334:	mov	x1, x21
   29338:	lsl	x22, x19, #3
   2933c:	ldr	x0, [x0, x19, lsl #3]
   29340:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   29344:	cbnz	w0, 29320 <__sanitizer_get_module_and_offset_for_pc@@Base+0xaf8>
   29348:	ldr	x4, [x20, #16]
   2934c:	ldr	x0, [x20]
   29350:	cmp	x4, x19
   29354:	b.ls	294a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc7c>  // b.plast
   29358:	ldr	x0, [x0, x22]
   2935c:	str	x0, [x20, #24]
   29360:	ldp	x21, x22, [sp, #16]
   29364:	ldr	x30, [sp, #32]
   29368:	ldp	x19, x20, [sp], #48
   2936c:	ret
   29370:	mov	x0, x21
   29374:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   29378:	ldp	x4, x3, [x20, #8]
   2937c:	mov	x19, x20
   29380:	str	x0, [x19, #24]!
   29384:	lsr	x4, x4, #3
   29388:	cmp	x3, x4
   2938c:	b.hi	2948c <__sanitizer_get_module_and_offset_for_pc@@Base+0xc64>  // b.pmore
   29390:	add	x21, x3, #0x1
   29394:	b.eq	293c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb9c>  // b.none
   29398:	ldr	x22, [x20]
   2939c:	str	x21, [x20, #16]
   293a0:	mov	x1, x19
   293a4:	add	x0, x22, x3, lsl #3
   293a8:	mov	x2, #0x8                   	// #8
   293ac:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   293b0:	ldp	x21, x22, [sp, #16]
   293b4:	ldr	x0, [x20, #24]
   293b8:	ldr	x30, [sp, #32]
   293bc:	ldp	x19, x20, [sp], #48
   293c0:	ret
   293c4:	tst	x3, x21
   293c8:	b.eq	29404 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbdc>  // b.none
   293cc:	clz	x2, x21
   293d0:	mov	w1, #0x3f                  	// #63
   293d4:	sub	w1, w1, w2
   293d8:	mov	x2, #0x1                   	// #1
   293dc:	add	w4, w1, #0x1
   293e0:	lsl	x4, x2, x4
   293e4:	cmp	x4, x21
   293e8:	b.ls	29470 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc48>  // b.plast
   293ec:	lsl	x1, x2, x1
   293f0:	cmp	x1, x21
   293f4:	b.cs	294f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xccc>  // b.hs, b.nlast
   293f8:	cmp	x3, x4
   293fc:	b.hi	294cc <__sanitizer_get_module_and_offset_for_pc@@Base+0xca4>  // b.pmore
   29400:	mov	x21, x4
   29404:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   29408:	lsl	x21, x21, #3
   2940c:	ldr	x22, [x22, #4016]
   29410:	ldr	x0, [x22]
   29414:	cbz	x0, 294c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc98>
   29418:	sub	x1, x0, #0x1
   2941c:	tst	x0, x1
   29420:	b.ne	294e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcbc>  // b.any
   29424:	add	x21, x21, x1
   29428:	neg	x0, x0
   2942c:	and	x21, x21, x0
   29430:	mov	w2, #0x0                   	// #0
   29434:	mov	x0, x21
   29438:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2943c:	add	x1, x1, #0xb50
   29440:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   29444:	ldr	x1, [x20]
   29448:	mov	x22, x0
   2944c:	ldr	x2, [x20, #16]
   29450:	lsl	x2, x2, #3
   29454:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   29458:	ldp	x0, x1, [x20]
   2945c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   29460:	stp	x22, x21, [x20]
   29464:	ldr	x3, [x20, #16]
   29468:	add	x21, x3, #0x1
   2946c:	b	2939c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb74>
   29470:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   29474:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   29478:	mov	x3, x21
   2947c:	add	x2, x2, #0x5c0
   29480:	add	x0, x0, #0xad8
   29484:	mov	w1, #0x18a                 	// #394
   29488:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2948c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   29490:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   29494:	add	x2, x2, #0x808
   29498:	add	x0, x0, #0xad8
   2949c:	mov	w1, #0x1cd                 	// #461
   294a0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   294a4:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   294a8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   294ac:	mov	x3, x19
   294b0:	add	x2, x2, #0x58
   294b4:	add	x0, x0, #0xad8
   294b8:	mov	w1, #0x1c5                 	// #453
   294bc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   294c0:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   294c4:	str	x0, [x22]
   294c8:	b	29418 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbf0>
   294cc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   294d0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   294d4:	add	x2, x2, #0x838
   294d8:	add	x0, x0, #0xad8
   294dc:	mov	w1, #0x20c                 	// #524
   294e0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   294e4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   294e8:	add	x0, x0, #0xb38
   294ec:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   294f0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   294f4:	mov	x4, x1
   294f8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   294fc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   29500:	mov	x3, x21
   29504:	add	x2, x2, #0x648
   29508:	add	x0, x0, #0xad8
   2950c:	mov	w1, #0x18b                 	// #395
   29510:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   29514:	nop
   29518:	stp	x19, x20, [sp, #-48]!
   2951c:	mov	x19, x0
   29520:	mov	x20, x1
   29524:	stp	x21, x22, [sp, #16]
   29528:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2952c:	ldr	x21, [x21, #4016]
   29530:	stp	x23, x30, [sp, #32]
   29534:	add	x23, x0, #0x70
   29538:	str	xzr, [x0]
   2953c:	stp	xzr, xzr, [x0, #8]
   29540:	ldr	x0, [x21]
   29544:	stp	xzr, x23, [x19, #24]
   29548:	cbz	x0, 295d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdac>
   2954c:	sub	x1, x0, #0x1
   29550:	tst	x1, x0
   29554:	b.ne	295e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb8>  // b.any
   29558:	mov	x1, #0x1f3f                	// #7999
   2955c:	add	x21, x0, x1
   29560:	neg	x0, x0
   29564:	mov	w2, #0x0                   	// #0
   29568:	and	x21, x21, x0
   2956c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   29570:	mov	x0, x21
   29574:	add	x1, x1, #0xb50
   29578:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2957c:	mov	x22, x0
   29580:	ldr	x1, [x19]
   29584:	ldr	x2, [x19, #16]
   29588:	lsl	x2, x2, #3
   2958c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   29590:	ldp	x0, x1, [x19]
   29594:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   29598:	stp	x22, x21, [x19]
   2959c:	mov	x0, x23
   295a0:	strb	wzr, [x19, #64]
   295a4:	strb	wzr, [x19, #96]
   295a8:	strb	wzr, [x19, #104]
   295ac:	bl	1c5c0 <__sanitizer_set_report_fd@@Base+0x4800>
   295b0:	stp	xzr, xzr, [x19, #224]
   295b4:	ldp	x0, x1, [x20]
   295b8:	stp	x0, x1, [x19, #200]
   295bc:	ldr	x0, [x20, #16]
   295c0:	ldp	x21, x22, [sp, #16]
   295c4:	ldp	x23, x30, [sp, #32]
   295c8:	str	x0, [x19, #216]
   295cc:	ldp	x19, x20, [sp], #48
   295d0:	ret
   295d4:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   295d8:	str	x0, [x21]
   295dc:	b	2954c <__sanitizer_get_module_and_offset_for_pc@@Base+0xd24>
   295e0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   295e4:	add	x0, x0, #0xb38
   295e8:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   295ec:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   295f0:	str	x1, [x0]
   295f4:	ldr	x0, [x1, #224]
   295f8:	cbz	x0, 29604 <__sanitizer_get_module_and_offset_for_pc@@Base+0xddc>
   295fc:	mov	x16, x0
   29600:	br	x16
   29604:	ret
   29608:	ldr	x0, [x0]
   2960c:	ldr	x0, [x0, #232]
   29610:	cbz	x0, 2961c <__sanitizer_get_module_and_offset_for_pc@@Base+0xdf4>
   29614:	mov	x16, x0
   29618:	br	x16
   2961c:	ret
   29620:	mov	w0, #0x0                   	// #0
   29624:	ret
   29628:	mov	x0, #0x0                   	// #0
   2962c:	ret
   29630:	mov	x0, #0x0                   	// #0
   29634:	ret
   29638:	mov	w0, #0x0                   	// #0
   2963c:	ret
   29640:	ret
   29644:	nop
   29648:	stp	x19, x20, [sp, #-96]!
   2964c:	mov	x19, #0x0                   	// #0
   29650:	stp	x21, x22, [sp, #16]
   29654:	mov	x22, x0
   29658:	mov	x21, x1
   2965c:	stp	x23, x24, [sp, #32]
   29660:	adrp	x24, 2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27d8>
   29664:	mov	x23, x2
   29668:	add	x24, x24, #0x740
   2966c:	stp	x25, x26, [sp, #48]
   29670:	sub	x26, x2, #0x1
   29674:	add	x25, sp, #0x58
   29678:	str	x30, [sp, #64]
   2967c:	b	296a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe78>
   29680:	cmp	x19, #0x1
   29684:	b.ls	29694 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe6c>  // b.plast
   29688:	ldurb	w0, [x1, #-1]
   2968c:	cmp	w0, #0xa
   29690:	b.eq	29720 <__sanitizer_get_module_and_offset_for_pc@@Base+0xef8>  // b.none
   29694:	add	x0, x19, #0x1
   29698:	cmp	x23, x0
   2969c:	b.eq	29768 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf40>  // b.none
   296a0:	ldr	w0, [x22, #16]
   296a4:	mov	x3, x25
   296a8:	sub	x2, x26, x19
   296ac:	add	x1, x21, x19
   296b0:	mov	x4, #0x0                   	// #0
   296b4:	str	xzr, [sp, #88]
   296b8:	bl	1dc18 <__sanitizer_set_report_fd@@Base+0x5e58>
   296bc:	ands	w20, w0, #0xff
   296c0:	b.eq	29738 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf10>  // b.none
   296c4:	ldr	x3, [sp, #88]
   296c8:	add	x19, x19, x3
   296cc:	add	x1, x21, x19
   296d0:	cbz	x3, 29738 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf10>
   296d4:	ldr	x0, [x22]
   296d8:	ldr	x3, [x0, #16]
   296dc:	cmp	x3, x24
   296e0:	b.eq	29680 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe58>  // b.none
   296e4:	mov	x2, x19
   296e8:	mov	x1, x21
   296ec:	mov	x0, x22
   296f0:	blr	x3
   296f4:	tst	w0, #0xff
   296f8:	b.eq	29694 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe6c>  // b.none
   296fc:	add	x21, x21, x19
   29700:	strb	wzr, [x21]
   29704:	mov	w0, w20
   29708:	ldp	x21, x22, [sp, #16]
   2970c:	ldp	x23, x24, [sp, #32]
   29710:	ldp	x25, x26, [sp, #48]
   29714:	ldr	x30, [sp, #64]
   29718:	ldp	x19, x20, [sp], #96
   2971c:	ret
   29720:	ldurb	w0, [x1, #-2]
   29724:	cmp	w0, #0xa
   29728:	b.ne	29694 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe6c>  // b.any
   2972c:	mov	x21, x1
   29730:	strb	wzr, [x21]
   29734:	b	29704 <__sanitizer_get_module_and_offset_for_pc@@Base+0xedc>
   29738:	ldr	w1, [x22, #16]
   2973c:	mov	w20, #0x0                   	// #0
   29740:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   29744:	add	x0, x0, #0x100
   29748:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2974c:	mov	w0, w20
   29750:	ldp	x21, x22, [sp, #16]
   29754:	ldp	x23, x24, [sp, #32]
   29758:	ldp	x25, x26, [sp, #48]
   2975c:	ldr	x30, [sp, #64]
   29760:	ldp	x19, x20, [sp], #96
   29764:	ret
   29768:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2976c:	add	x0, x0, #0x130
   29770:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   29774:	strb	wzr, [x21]
   29778:	b	29704 <__sanitizer_get_module_and_offset_for_pc@@Base+0xedc>
   2977c:	nop
   29780:	cbz	x2, 29788 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf60>
   29784:	b	29648 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe20>
   29788:	mov	w0, #0x1                   	// #1
   2978c:	ret
   29790:	stp	x19, x20, [sp, #-48]!
   29794:	stp	x21, x22, [sp, #16]
   29798:	mov	x21, x0
   2979c:	mov	x0, x1
   297a0:	stp	x23, x30, [sp, #32]
   297a4:	mov	x23, x1
   297a8:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   297ac:	add	x1, x1, #0xf40
   297b0:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   297b4:	mov	x2, #0x0                   	// #0
   297b8:	mov	x19, x0
   297bc:	mov	x1, #0x0                   	// #0
   297c0:	add	x0, x0, #0x1
   297c4:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   297c8:	mov	x20, x0
   297cc:	mov	x2, x19
   297d0:	mov	x1, x23
   297d4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   297d8:	add	x22, x23, x19
   297dc:	strb	wzr, [x20, x19]
   297e0:	ldrb	w0, [x23, x19]
   297e4:	cmp	w0, #0x0
   297e8:	cinc	x22, x22, ne  // ne = any
   297ec:	cbz	x20, 298d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a8>
   297f0:	mov	x0, x20
   297f4:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   297f8:	cbz	x0, 298a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1080>
   297fc:	sub	x19, x0, #0x1
   29800:	mov	w23, #0x2                   	// #2
   29804:	add	x19, x20, x19
   29808:	ldrb	w1, [x19]
   2980c:	cmp	x19, x20
   29810:	b.hi	29824 <__sanitizer_get_module_and_offset_for_pc@@Base+0xffc>  // b.pmore
   29814:	b	29834 <__sanitizer_get_module_and_offset_for_pc@@Base+0x100c>
   29818:	ldrb	w1, [x19, #-1]!
   2981c:	cmp	x19, x20
   29820:	b.eq	29834 <__sanitizer_get_module_and_offset_for_pc@@Base+0x100c>  // b.none
   29824:	ldrb	w1, [x19]
   29828:	sub	w2, w1, #0x30
   2982c:	cmp	w2, #0x9
   29830:	b.ls	29818 <__sanitizer_get_module_and_offset_for_pc@@Base+0xff0>  // b.plast
   29834:	cmp	w1, #0x3a
   29838:	b.ne	2986c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1044>  // b.any
   2983c:	ldrb	w0, [x19, #1]
   29840:	sub	w0, w0, #0x30
   29844:	cmp	w0, #0x9
   29848:	b.hi	2986c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1044>  // b.pmore
   2984c:	ldr	w1, [x21, #56]
   29850:	add	x0, x19, #0x1
   29854:	str	w1, [x21, #60]
   29858:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   2985c:	str	w0, [x21, #56]
   29860:	strb	wzr, [x19], #-1
   29864:	cmp	w23, #0x1
   29868:	b.ne	298c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a0>  // b.any
   2986c:	mov	x0, x20
   29870:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   29874:	add	x1, x1, #0x328
   29878:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2987c:	mov	x2, #0x0                   	// #0
   29880:	mov	x19, x0
   29884:	mov	x1, #0x0                   	// #0
   29888:	add	x0, x0, #0x1
   2988c:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   29890:	str	x0, [x21, #48]
   29894:	mov	x2, x19
   29898:	mov	x1, x20
   2989c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   298a0:	ldr	x0, [x21, #48]
   298a4:	strb	wzr, [x0, x19]
   298a8:	mov	x0, x20
   298ac:	mov	x1, #0x0                   	// #0
   298b0:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   298b4:	mov	x0, x22
   298b8:	ldp	x21, x22, [sp, #16]
   298bc:	ldp	x23, x30, [sp, #32]
   298c0:	ldp	x19, x20, [sp], #48
   298c4:	ret
   298c8:	mov	w23, #0x1                   	// #1
   298cc:	b	29808 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfe0>
   298d0:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   298d4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   298d8:	add	x2, x2, #0x158
   298dc:	add	x0, x0, #0x178
   298e0:	mov	x4, #0x0                   	// #0
   298e4:	mov	x3, #0x0                   	// #0
   298e8:	mov	w1, #0x129                 	// #297
   298ec:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   298f0:	stp	x19, x20, [sp, #-32]!
   298f4:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   298f8:	mov	w2, #0x1                   	// #1
   298fc:	ldr	x0, [x19, #3936]
   29900:	str	x30, [sp, #16]
   29904:	ldxrb	w1, [x0]
   29908:	stxrb	w3, w2, [x0]
   2990c:	cbnz	w3, 29904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10dc>
   29910:	dmb	ish
   29914:	tst	w1, #0xff
   29918:	b.eq	29920 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10f8>  // b.none
   2991c:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   29920:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   29924:	ldr	x20, [x20, #3880]
   29928:	ldr	x0, [x20]
   2992c:	cbz	x0, 29948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1120>
   29930:	dmb	ish
   29934:	ldr	x19, [x19, #3936]
   29938:	strb	wzr, [x19]
   2993c:	ldr	x30, [sp, #16]
   29940:	ldp	x19, x20, [sp], #32
   29944:	ret
   29948:	bl	2bc90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3468>
   2994c:	str	x0, [x20]
   29950:	cbnz	x0, 29930 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1108>
   29954:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   29958:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2995c:	add	x2, x2, #0x1d8
   29960:	add	x0, x0, #0x178
   29964:	mov	x4, #0x0                   	// #0
   29968:	mov	x3, #0x0                   	// #0
   2996c:	mov	w1, #0x18                  	// #24
   29970:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   29974:	nop
   29978:	stp	x19, x20, [sp, #-32]!
   2997c:	mov	x20, x0
   29980:	stp	x21, x30, [sp, #16]
   29984:	mov	x21, x2
   29988:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2998c:	mov	x2, #0x0                   	// #0
   29990:	mov	x19, x0
   29994:	mov	x1, #0x0                   	// #0
   29998:	add	x0, x0, #0x1
   2999c:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   299a0:	str	x0, [x21]
   299a4:	mov	x2, x19
   299a8:	mov	x1, x20
   299ac:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   299b0:	ldr	x1, [x21]
   299b4:	add	x0, x20, x19
   299b8:	strb	wzr, [x1, x19]
   299bc:	ldrb	w1, [x20, x19]
   299c0:	ldp	x21, x30, [sp, #16]
   299c4:	cmp	w1, #0x0
   299c8:	cinc	x0, x0, ne  // ne = any
   299cc:	ldp	x19, x20, [sp], #32
   299d0:	ret
   299d4:	nop
   299d8:	stp	x19, x20, [sp, #-48]!
   299dc:	stp	x21, x22, [sp, #16]
   299e0:	mov	x21, x0
   299e4:	stp	x23, x30, [sp, #32]
   299e8:	mov	x23, x2
   299ec:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   299f0:	mov	x2, #0x0                   	// #0
   299f4:	mov	x19, x0
   299f8:	mov	x1, #0x0                   	// #0
   299fc:	add	x0, x0, #0x1
   29a00:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   29a04:	mov	x20, x0
   29a08:	mov	x2, x19
   29a0c:	mov	x1, x21
   29a10:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   29a14:	add	x22, x21, x19
   29a18:	strb	wzr, [x20, x19]
   29a1c:	ldrb	w0, [x21, x19]
   29a20:	cmp	w0, #0x0
   29a24:	cinc	x22, x22, ne  // ne = any
   29a28:	cbz	x20, 29a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1210>
   29a2c:	mov	x0, x20
   29a30:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   29a34:	str	w0, [x23]
   29a38:	mov	x0, x20
   29a3c:	mov	x1, #0x0                   	// #0
   29a40:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29a44:	mov	x0, x22
   29a48:	ldp	x21, x22, [sp, #16]
   29a4c:	ldp	x23, x30, [sp, #32]
   29a50:	ldp	x19, x20, [sp], #48
   29a54:	ret
   29a58:	stp	x19, x20, [sp, #-48]!
   29a5c:	stp	x21, x22, [sp, #16]
   29a60:	mov	x21, x0
   29a64:	stp	x23, x30, [sp, #32]
   29a68:	mov	x23, x2
   29a6c:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   29a70:	mov	x2, #0x0                   	// #0
   29a74:	mov	x19, x0
   29a78:	mov	x1, #0x0                   	// #0
   29a7c:	add	x0, x0, #0x1
   29a80:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   29a84:	mov	x20, x0
   29a88:	mov	x2, x19
   29a8c:	mov	x1, x21
   29a90:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   29a94:	add	x22, x21, x19
   29a98:	strb	wzr, [x20, x19]
   29a9c:	ldrb	w0, [x21, x19]
   29aa0:	cmp	w0, #0x0
   29aa4:	cinc	x22, x22, ne  // ne = any
   29aa8:	cbz	x20, 29ab8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1290>
   29aac:	mov	x0, x20
   29ab0:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   29ab4:	str	x0, [x23]
   29ab8:	mov	x0, x20
   29abc:	mov	x1, #0x0                   	// #0
   29ac0:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29ac4:	mov	x0, x22
   29ac8:	ldp	x21, x22, [sp, #16]
   29acc:	ldp	x23, x30, [sp, #32]
   29ad0:	ldp	x19, x20, [sp], #48
   29ad4:	ret
   29ad8:	stp	x19, x20, [sp, #-48]!
   29adc:	stp	x21, x22, [sp, #16]
   29ae0:	mov	x21, x0
   29ae4:	stp	x23, x30, [sp, #32]
   29ae8:	mov	x23, x2
   29aec:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   29af0:	mov	x2, #0x0                   	// #0
   29af4:	mov	x19, x0
   29af8:	mov	x1, #0x0                   	// #0
   29afc:	add	x0, x0, #0x1
   29b00:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   29b04:	mov	x20, x0
   29b08:	mov	x2, x19
   29b0c:	mov	x1, x21
   29b10:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   29b14:	add	x22, x21, x19
   29b18:	strb	wzr, [x20, x19]
   29b1c:	ldrb	w0, [x21, x19]
   29b20:	cmp	w0, #0x0
   29b24:	cinc	x22, x22, ne  // ne = any
   29b28:	cbz	x20, 29b38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1310>
   29b2c:	mov	x0, x20
   29b30:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   29b34:	str	x0, [x23]
   29b38:	mov	x0, x20
   29b3c:	mov	x1, #0x0                   	// #0
   29b40:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29b44:	mov	x0, x22
   29b48:	ldp	x21, x22, [sp, #16]
   29b4c:	ldp	x23, x30, [sp, #32]
   29b50:	ldp	x19, x20, [sp], #48
   29b54:	ret
   29b58:	stp	x19, x20, [sp, #-48]!
   29b5c:	mov	x20, x0
   29b60:	stp	x21, x22, [sp, #16]
   29b64:	mov	x21, x2
   29b68:	stp	x23, x30, [sp, #32]
   29b6c:	mov	x23, x1
   29b70:	bl	1b4c0 <__sanitizer_set_report_fd@@Base+0x3700>
   29b74:	cbz	x0, 29be4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13bc>
   29b78:	mov	x19, x0
   29b7c:	sub	x22, x0, x20
   29b80:	mov	x2, #0x0                   	// #0
   29b84:	mov	x1, #0x0                   	// #0
   29b88:	add	x0, x22, #0x1
   29b8c:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   29b90:	str	x0, [x21]
   29b94:	mov	x1, x20
   29b98:	mov	x2, x22
   29b9c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   29ba0:	ldr	x0, [x21]
   29ba4:	strb	wzr, [x0, x22]
   29ba8:	ldrb	w0, [x19]
   29bac:	cbnz	w0, 29bc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x139c>
   29bb0:	mov	x0, x19
   29bb4:	ldp	x21, x22, [sp, #16]
   29bb8:	ldp	x23, x30, [sp, #32]
   29bbc:	ldp	x19, x20, [sp], #48
   29bc0:	ret
   29bc4:	mov	x0, x23
   29bc8:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   29bcc:	add	x19, x19, x0
   29bd0:	mov	x0, x19
   29bd4:	ldp	x21, x22, [sp, #16]
   29bd8:	ldp	x23, x30, [sp, #32]
   29bdc:	ldp	x19, x20, [sp], #48
   29be0:	ret
   29be4:	mov	x0, x20
   29be8:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   29bec:	mov	x22, x0
   29bf0:	add	x19, x20, x0
   29bf4:	b	29b80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1358>
   29bf8:	stp	x19, x20, [sp, #-64]!
   29bfc:	stp	x21, x22, [sp, #16]
   29c00:	mov	x21, x0
   29c04:	stp	x23, x30, [sp, #32]
   29c08:	add	x23, x0, #0x70
   29c0c:	mov	x0, x23
   29c10:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   29c14:	ldr	x19, [x21, #208]
   29c18:	cbz	x19, 29c54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x142c>
   29c1c:	adrp	x22, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7d8>
   29c20:	add	x20, sp, #0x38
   29c24:	add	x22, x22, #0x640
   29c28:	mov	x1, x21
   29c2c:	mov	x0, x20
   29c30:	bl	295f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc8>
   29c34:	ldr	x1, [x19]
   29c38:	mov	x0, x20
   29c3c:	ldr	x1, [x1, #24]
   29c40:	cmp	x1, x22
   29c44:	b.ne	29c6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1444>  // b.any
   29c48:	bl	29608 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   29c4c:	ldr	x19, [x19, #8]
   29c50:	cbnz	x19, 29c28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1400>
   29c54:	mov	x0, x23
   29c58:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   29c5c:	ldp	x21, x22, [sp, #16]
   29c60:	ldp	x23, x30, [sp, #32]
   29c64:	ldp	x19, x20, [sp], #64
   29c68:	ret
   29c6c:	mov	x0, x19
   29c70:	blr	x1
   29c74:	mov	x0, x20
   29c78:	bl	29608 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   29c7c:	ldr	x19, [x19, #8]
   29c80:	cbnz	x19, 29c28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1400>
   29c84:	mov	x0, x23
   29c88:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   29c8c:	ldp	x21, x22, [sp, #16]
   29c90:	ldp	x23, x30, [sp, #32]
   29c94:	ldp	x19, x20, [sp], #64
   29c98:	ret
   29c9c:	nop
   29ca0:	stp	x19, x20, [sp, #-80]!
   29ca4:	stp	x21, x22, [sp, #16]
   29ca8:	mov	x21, x0
   29cac:	stp	x25, x30, [sp, #48]
   29cb0:	add	x25, x0, #0x70
   29cb4:	mov	x0, x25
   29cb8:	stp	x23, x24, [sp, #32]
   29cbc:	mov	x24, x1
   29cc0:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   29cc4:	ldr	x19, [x21, #208]
   29cc8:	cbz	x19, 29d44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x151c>
   29ccc:	adrp	x22, 2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27d8>
   29cd0:	add	x20, sp, #0x48
   29cd4:	add	x22, x22, #0x738
   29cd8:	b	29cec <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>
   29cdc:	mov	x0, x20
   29ce0:	bl	29608 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   29ce4:	ldr	x19, [x19, #8]
   29ce8:	cbz	x19, 29d44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x151c>
   29cec:	mov	x1, x21
   29cf0:	mov	x0, x20
   29cf4:	bl	295f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc8>
   29cf8:	ldr	x2, [x19]
   29cfc:	ldr	x2, [x2, #32]
   29d00:	cmp	x2, x22
   29d04:	b.eq	29cdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x14b4>  // b.none
   29d08:	mov	x1, x24
   29d0c:	mov	x0, x19
   29d10:	blr	x2
   29d14:	mov	x23, x0
   29d18:	cbz	x0, 29cdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x14b4>
   29d1c:	mov	x0, x20
   29d20:	bl	29608 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   29d24:	mov	x0, x25
   29d28:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   29d2c:	mov	x0, x23
   29d30:	ldp	x21, x22, [sp, #16]
   29d34:	ldp	x23, x24, [sp, #32]
   29d38:	ldp	x25, x30, [sp, #48]
   29d3c:	ldp	x19, x20, [sp], #80
   29d40:	ret
   29d44:	mov	x1, x24
   29d48:	mov	x0, x21
   29d4c:	bl	2bbf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33c8>
   29d50:	mov	x23, x0
   29d54:	mov	x0, x25
   29d58:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   29d5c:	mov	x0, x23
   29d60:	ldp	x21, x22, [sp, #16]
   29d64:	ldp	x23, x24, [sp, #32]
   29d68:	ldp	x25, x30, [sp, #48]
   29d6c:	ldp	x19, x20, [sp], #80
   29d70:	ret
   29d74:	nop
   29d78:	stp	x19, x30, [sp, #-16]!
   29d7c:	mov	x19, x0
   29d80:	add	x0, x0, #0x28
   29d84:	bl	23e98 <__sanitizer_sandbox_on_notify@@Base+0x910>
   29d88:	add	x0, x19, #0x48
   29d8c:	bl	23fa8 <__sanitizer_sandbox_on_notify@@Base+0xa20>
   29d90:	ldr	x0, [x19, #56]
   29d94:	cbz	x0, 29da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1580>
   29d98:	mov	w0, #0x1                   	// #1
   29d9c:	strb	w0, [x19, #104]
   29da0:	ldp	x19, x30, [sp], #16
   29da4:	ret
   29da8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   29dac:	add	x0, x0, #0x1f0
   29db0:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   29db4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   29db8:	stp	x19, x20, [sp, #-48]!
   29dbc:	mov	x19, x0
   29dc0:	mov	x20, x1
   29dc4:	ldrb	w0, [x0, #104]
   29dc8:	stp	x21, x22, [sp, #16]
   29dcc:	stp	x23, x30, [sp, #32]
   29dd0:	cbz	w0, 29e60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1638>
   29dd4:	ldr	x0, [x19, #56]
   29dd8:	mov	w23, #0x0                   	// #0
   29ddc:	cbz	x0, 29ef4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16cc>
   29de0:	mov	x21, #0x0                   	// #0
   29de4:	mov	x22, #0x0                   	// #0
   29de8:	b	29e00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15d8>
   29dec:	ldr	x0, [x19, #56]
   29df0:	add	x22, x22, #0x1
   29df4:	add	x21, x21, #0x48
   29df8:	cmp	x0, x22
   29dfc:	b.ls	29e40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1618>  // b.plast
   29e00:	ldr	x0, [x19, #40]
   29e04:	mov	x1, x20
   29e08:	add	x0, x0, x21
   29e0c:	bl	14b60 <_ZdaPvRKSt9nothrow_t@@Base+0x2ea0>
   29e10:	tst	w0, #0xff
   29e14:	b.eq	29dec <__sanitizer_get_module_and_offset_for_pc@@Base+0x15c4>  // b.none
   29e18:	ldr	x4, [x19, #56]
   29e1c:	cmp	x4, x22
   29e20:	b.ls	29ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16b0>  // b.plast
   29e24:	ldr	x0, [x19, #40]
   29e28:	adds	x0, x0, x21
   29e2c:	b.eq	29e40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1618>  // b.none
   29e30:	ldp	x21, x22, [sp, #16]
   29e34:	ldp	x23, x30, [sp, #32]
   29e38:	ldp	x19, x20, [sp], #48
   29e3c:	ret
   29e40:	cbz	w23, 29ef4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16cc>
   29e44:	ldr	x0, [x19, #88]
   29e48:	cbnz	x0, 29e88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1660>
   29e4c:	mov	x0, #0x0                   	// #0
   29e50:	ldp	x21, x22, [sp, #16]
   29e54:	ldp	x23, x30, [sp, #32]
   29e58:	ldp	x19, x20, [sp], #48
   29e5c:	ret
   29e60:	add	x0, x19, #0x28
   29e64:	bl	23e98 <__sanitizer_sandbox_on_notify@@Base+0x910>
   29e68:	add	x0, x19, #0x48
   29e6c:	bl	23fa8 <__sanitizer_sandbox_on_notify@@Base+0xa20>
   29e70:	ldr	x0, [x19, #56]
   29e74:	cbz	x0, 29f68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1740>
   29e78:	mov	w0, #0x1                   	// #1
   29e7c:	mov	w23, #0x1                   	// #1
   29e80:	strb	w0, [x19, #104]
   29e84:	b	29de0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b8>
   29e88:	mov	x21, #0x0                   	// #0
   29e8c:	mov	x22, #0x0                   	// #0
   29e90:	b	29ea8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1680>
   29e94:	ldr	x0, [x19, #88]
   29e98:	add	x22, x22, #0x1
   29e9c:	add	x21, x21, #0x48
   29ea0:	cmp	x0, x22
   29ea4:	b.ls	29e4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1624>  // b.plast
   29ea8:	ldr	x0, [x19, #72]
   29eac:	mov	x1, x20
   29eb0:	add	x0, x0, x21
   29eb4:	bl	14b60 <_ZdaPvRKSt9nothrow_t@@Base+0x2ea0>
   29eb8:	tst	w0, #0xff
   29ebc:	b.eq	29e94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x166c>  // b.none
   29ec0:	ldr	x4, [x19, #88]
   29ec4:	cmp	x22, x4
   29ec8:	b.cs	29ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16b0>  // b.hs, b.nlast
   29ecc:	ldr	x0, [x19, #72]
   29ed0:	add	x0, x0, x21
   29ed4:	b	29e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1608>
   29ed8:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   29edc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   29ee0:	mov	x3, x22
   29ee4:	add	x2, x2, #0x208
   29ee8:	add	x0, x0, #0xad8
   29eec:	mov	w1, #0x308                 	// #776
   29ef0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   29ef4:	add	x0, x19, #0x28
   29ef8:	bl	23e98 <__sanitizer_sandbox_on_notify@@Base+0x910>
   29efc:	add	x0, x19, #0x48
   29f00:	bl	23fa8 <__sanitizer_sandbox_on_notify@@Base+0xa20>
   29f04:	ldr	x0, [x19, #56]
   29f08:	cbz	x0, 29f68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1740>
   29f0c:	mov	w0, #0x1                   	// #1
   29f10:	mov	x21, #0x0                   	// #0
   29f14:	mov	x22, #0x0                   	// #0
   29f18:	strb	w0, [x19, #104]
   29f1c:	b	29f34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x170c>
   29f20:	ldr	x0, [x19, #56]
   29f24:	add	x22, x22, #0x1
   29f28:	add	x21, x21, #0x48
   29f2c:	cmp	x0, x22
   29f30:	b.ls	29e44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x161c>  // b.plast
   29f34:	ldr	x0, [x19, #40]
   29f38:	mov	x1, x20
   29f3c:	add	x0, x0, x21
   29f40:	bl	14b60 <_ZdaPvRKSt9nothrow_t@@Base+0x2ea0>
   29f44:	tst	w0, #0xff
   29f48:	b.eq	29f20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16f8>  // b.none
   29f4c:	ldr	x4, [x19, #56]
   29f50:	cmp	x22, x4
   29f54:	b.cs	29ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16b0>  // b.hs, b.nlast
   29f58:	ldr	x0, [x19, #40]
   29f5c:	adds	x0, x0, x21
   29f60:	b.ne	29e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1608>  // b.any
   29f64:	b	29e44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x161c>
   29f68:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   29f6c:	add	x0, x0, #0x1f0
   29f70:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   29f74:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   29f78:	stp	x19, x20, [sp, #-48]!
   29f7c:	mov	x20, x4
   29f80:	mov	x19, x1
   29f84:	stp	x21, x22, [sp, #16]
   29f88:	mov	x22, x2
   29f8c:	mov	x21, x3
   29f90:	str	x30, [sp, #32]
   29f94:	bl	29db8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1590>
   29f98:	cbz	x0, 29fcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x17a4>
   29f9c:	mov	x5, x0
   29fa0:	mov	w0, #0x1                   	// #1
   29fa4:	ldr	x30, [sp, #32]
   29fa8:	ldp	x2, x1, [x5]
   29fac:	str	x2, [x22]
   29fb0:	sub	x1, x19, x1
   29fb4:	str	x1, [x21]
   29fb8:	ldr	w1, [x5, #24]
   29fbc:	str	w1, [x20]
   29fc0:	ldp	x21, x22, [sp, #16]
   29fc4:	ldp	x19, x20, [sp], #48
   29fc8:	ret
   29fcc:	mov	w0, #0x0                   	// #0
   29fd0:	ldp	x21, x22, [sp, #16]
   29fd4:	ldr	x30, [sp, #32]
   29fd8:	ldp	x19, x20, [sp], #48
   29fdc:	ret
   29fe0:	stp	x19, x20, [sp, #-64]!
   29fe4:	mov	x20, x0
   29fe8:	mov	x19, x1
   29fec:	stp	x21, x22, [sp, #16]
   29ff0:	add	x22, x0, #0x70
   29ff4:	mov	x0, x22
   29ff8:	mov	x21, x2
   29ffc:	stp	x23, x24, [sp, #32]
   2a000:	mov	x23, x3
   2a004:	str	x30, [sp, #48]
   2a008:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   2a00c:	mov	x1, x19
   2a010:	mov	x0, x20
   2a014:	bl	29db8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1590>
   2a018:	cbz	x0, 2a05c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1834>
   2a01c:	ldp	x1, x2, [x0]
   2a020:	mov	w24, #0x1                   	// #1
   2a024:	sub	x19, x19, x2
   2a028:	str	x19, [x23]
   2a02c:	cbz	x21, 2a03c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1814>
   2a030:	mov	x0, x20
   2a034:	bl	292e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xab8>
   2a038:	str	x0, [x21]
   2a03c:	mov	x0, x22
   2a040:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   2a044:	mov	w0, w24
   2a048:	ldp	x21, x22, [sp, #16]
   2a04c:	ldp	x23, x24, [sp, #32]
   2a050:	ldr	x30, [sp, #48]
   2a054:	ldp	x19, x20, [sp], #64
   2a058:	ret
   2a05c:	mov	x0, x22
   2a060:	mov	w24, #0x0                   	// #0
   2a064:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   2a068:	mov	w0, w24
   2a06c:	ldp	x21, x22, [sp, #16]
   2a070:	ldp	x23, x24, [sp, #32]
   2a074:	ldr	x30, [sp, #48]
   2a078:	ldp	x19, x20, [sp], #64
   2a07c:	ret
   2a080:	stp	x19, x20, [sp, #-80]!
   2a084:	stp	x25, x30, [sp, #48]
   2a088:	add	x25, x0, #0x70
   2a08c:	stp	x21, x22, [sp, #16]
   2a090:	mov	x21, x0
   2a094:	mov	x22, x2
   2a098:	mov	x0, x25
   2a09c:	stp	x23, x24, [sp, #32]
   2a0a0:	mov	x24, x1
   2a0a4:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   2a0a8:	mov	x1, x24
   2a0ac:	mov	x0, x21
   2a0b0:	bl	29db8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1590>
   2a0b4:	cbz	x0, 2a170 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1948>
   2a0b8:	mov	x1, x0
   2a0bc:	add	x23, sp, #0x48
   2a0c0:	ldp	x0, x2, [x0]
   2a0c4:	ldr	w1, [x1, #24]
   2a0c8:	str	w1, [x22, #16]
   2a0cc:	sub	x2, x24, x2
   2a0d0:	str	x2, [x22, #8]
   2a0d4:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   2a0d8:	ldr	x19, [x21, #208]
   2a0dc:	str	x0, [x22]
   2a0e0:	cbnz	x19, 2a0f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18cc>
   2a0e4:	b	2a14c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1924>
   2a0e8:	bl	29608 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2a0ec:	ldr	x19, [x19, #8]
   2a0f0:	cbz	x19, 2a14c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1924>
   2a0f4:	mov	x1, x21
   2a0f8:	mov	x0, x23
   2a0fc:	bl	295f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc8>
   2a100:	ldr	x3, [x19]
   2a104:	mov	x2, x22
   2a108:	mov	x1, x24
   2a10c:	mov	x0, x19
   2a110:	ldr	x3, [x3, #16]
   2a114:	blr	x3
   2a118:	mov	w20, w0
   2a11c:	ands	w20, w20, #0xff
   2a120:	mov	x0, x23
   2a124:	b.eq	2a0e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18c0>  // b.none
   2a128:	bl	29608 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2a12c:	mov	x0, x25
   2a130:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   2a134:	mov	w0, w20
   2a138:	ldp	x21, x22, [sp, #16]
   2a13c:	ldp	x23, x24, [sp, #32]
   2a140:	ldp	x25, x30, [sp, #48]
   2a144:	ldp	x19, x20, [sp], #80
   2a148:	ret
   2a14c:	mov	x0, x25
   2a150:	mov	w20, #0x1                   	// #1
   2a154:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   2a158:	mov	w0, w20
   2a15c:	ldp	x21, x22, [sp, #16]
   2a160:	ldp	x23, x24, [sp, #32]
   2a164:	ldp	x25, x30, [sp, #48]
   2a168:	ldp	x19, x20, [sp], #80
   2a16c:	ret
   2a170:	mov	x0, x25
   2a174:	mov	w20, #0x0                   	// #0
   2a178:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   2a17c:	mov	w0, w20
   2a180:	ldp	x21, x22, [sp, #16]
   2a184:	ldp	x23, x24, [sp, #32]
   2a188:	ldp	x25, x30, [sp, #48]
   2a18c:	ldp	x19, x20, [sp], #80
   2a190:	ret
   2a194:	nop
   2a198:	stp	x19, x20, [sp, #-32]!
   2a19c:	mov	x20, x0
   2a1a0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2a1a4:	add	x3, x3, #0xa88
   2a1a8:	str	x30, [sp, #16]
   2a1ac:	stp	x3, xzr, [x20]
   2a1b0:	mov	x0, x2
   2a1b4:	mov	x19, x1
   2a1b8:	mov	x1, #0x4028                	// #16424
   2a1bc:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2a1c0:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2a1c4:	add	x1, x0, #0x4, lsl #12
   2a1c8:	mov	x3, #0xffffffffffffffff    	// #-1
   2a1cc:	str	x3, [x0, #16]
   2a1d0:	ldr	x2, [x2, #4008]
   2a1d4:	str	xzr, [x0, #16408]
   2a1d8:	add	x2, x2, #0x10
   2a1dc:	stp	x2, x19, [x0]
   2a1e0:	strh	wzr, [x1, #32]
   2a1e4:	strb	wzr, [x1, #34]
   2a1e8:	cbz	x19, 2a210 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19e8>
   2a1ec:	ldrb	w1, [x19]
   2a1f0:	cbz	w1, 2a230 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a08>
   2a1f4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2a1f8:	add	x1, x1, #0xb60
   2a1fc:	ldr	x30, [sp, #16]
   2a200:	str	x1, [x0]
   2a204:	str	x0, [x20, #16]
   2a208:	ldp	x19, x20, [sp], #32
   2a20c:	ret
   2a210:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a214:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a218:	add	x2, x2, #0x228
   2a21c:	add	x0, x0, #0x178
   2a220:	mov	x4, #0x0                   	// #0
   2a224:	mov	x3, #0x0                   	// #0
   2a228:	mov	w1, #0x1d0                 	// #464
   2a22c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2a230:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a234:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a238:	add	x2, x2, #0x240
   2a23c:	add	x0, x0, #0x178
   2a240:	mov	x4, #0x0                   	// #0
   2a244:	mov	x3, #0x0                   	// #0
   2a248:	mov	w1, #0x1d1                 	// #465
   2a24c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2a250:	stp	x19, x20, [sp, #-96]!
   2a254:	mov	x20, x0
   2a258:	stp	x21, x22, [sp, #16]
   2a25c:	adrp	x22, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a260:	add	x22, x22, #0x280
   2a264:	stp	x23, x24, [sp, #32]
   2a268:	mov	x23, x1
   2a26c:	mov	w24, #0x1                   	// #1
   2a270:	stp	x25, x26, [sp, #48]
   2a274:	adrp	x25, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2a278:	add	x26, x1, #0x8
   2a27c:	add	x25, x25, #0xf40
   2a280:	stp	x27, x28, [sp, #64]
   2a284:	mov	x27, x1
   2a288:	str	x30, [sp, #80]
   2a28c:	nop
   2a290:	mov	x1, x25
   2a294:	mov	x0, x20
   2a298:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2a29c:	mov	x19, x0
   2a2a0:	mov	x2, #0x0                   	// #0
   2a2a4:	mov	x1, #0x0                   	// #0
   2a2a8:	add	x0, x0, #0x1
   2a2ac:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2a2b0:	mov	x21, x0
   2a2b4:	mov	x2, x19
   2a2b8:	mov	x1, x20
   2a2bc:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2a2c0:	add	x28, x20, x19
   2a2c4:	strb	wzr, [x21, x19]
   2a2c8:	ldrb	w0, [x20, x19]
   2a2cc:	cmp	w0, #0x0
   2a2d0:	cinc	x28, x28, ne  // ne = any
   2a2d4:	cbz	x21, 2a384 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b5c>
   2a2d8:	ldrb	w0, [x21]
   2a2dc:	cbz	w0, 2a3a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b7c>
   2a2e0:	cbz	w24, 2a354 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b2c>
   2a2e4:	mov	x20, x26
   2a2e8:	mov	x19, x26
   2a2ec:	str	x21, [x19, #32]
   2a2f0:	mov	x1, x28
   2a2f4:	mov	x0, x20
   2a2f8:	bl	29790 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf68>
   2a2fc:	mov	x20, x0
   2a300:	ldr	x0, [x19, #32]
   2a304:	mov	x1, x22
   2a308:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2a30c:	cbz	w0, 2a340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b18>
   2a310:	ldr	x0, [x19, #48]
   2a314:	mov	x1, x22
   2a318:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2a31c:	cbz	w0, 2a328 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b00>
   2a320:	mov	w24, #0x0                   	// #0
   2a324:	b	2a290 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a68>
   2a328:	ldr	x0, [x19, #48]
   2a32c:	mov	x1, #0x0                   	// #0
   2a330:	mov	w24, #0x0                   	// #0
   2a334:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2a338:	str	xzr, [x19, #48]
   2a33c:	b	2a290 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a68>
   2a340:	ldr	x0, [x19, #32]
   2a344:	mov	x1, #0x0                   	// #0
   2a348:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2a34c:	str	xzr, [x19, #32]
   2a350:	b	2a310 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ae8>
   2a354:	ldr	x0, [x23, #8]
   2a358:	bl	29108 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8e0>
   2a35c:	mov	x24, x0
   2a360:	ldp	x1, x2, [x23, #16]
   2a364:	add	x19, x0, #0x8
   2a368:	ldr	w3, [x23, #32]
   2a36c:	mov	x0, x19
   2a370:	mov	x20, x19
   2a374:	bl	290a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x880>
   2a378:	str	x24, [x27]
   2a37c:	mov	x27, x24
   2a380:	b	2a2ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ac4>
   2a384:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a388:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a38c:	add	x2, x2, #0x260
   2a390:	add	x0, x0, #0x178
   2a394:	mov	x4, #0x0                   	// #0
   2a398:	mov	x3, #0x0                   	// #0
   2a39c:	mov	w1, #0x148                 	// #328
   2a3a0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2a3a4:	mov	x0, x21
   2a3a8:	mov	x1, #0x0                   	// #0
   2a3ac:	ldp	x21, x22, [sp, #16]
   2a3b0:	ldp	x23, x24, [sp, #32]
   2a3b4:	ldp	x25, x26, [sp, #48]
   2a3b8:	ldp	x27, x28, [sp, #64]
   2a3bc:	ldr	x30, [sp, #80]
   2a3c0:	ldp	x19, x20, [sp], #96
   2a3c4:	b	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2a3c8:	stp	x19, x20, [sp, #-64]!
   2a3cc:	stp	x21, x22, [sp, #16]
   2a3d0:	mov	x22, x1
   2a3d4:	mov	x21, x0
   2a3d8:	stp	x23, x24, [sp, #32]
   2a3dc:	adrp	x23, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2a3e0:	add	x1, x23, #0xf40
   2a3e4:	str	x30, [sp, #48]
   2a3e8:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2a3ec:	mov	x2, #0x0                   	// #0
   2a3f0:	mov	x19, x0
   2a3f4:	mov	x1, #0x0                   	// #0
   2a3f8:	add	x0, x0, #0x1
   2a3fc:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2a400:	str	x0, [x22, #40]
   2a404:	mov	x2, x19
   2a408:	mov	x1, x21
   2a40c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2a410:	add	x20, x21, x19
   2a414:	ldr	x0, [x22, #40]
   2a418:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   2a41c:	add	x1, x1, #0xa68
   2a420:	strb	wzr, [x0, x19]
   2a424:	ldrb	w0, [x21, x19]
   2a428:	cmp	w0, #0x0
   2a42c:	cinc	x20, x20, ne  // ne = any
   2a430:	mov	x0, x20
   2a434:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2a438:	mov	x19, x0
   2a43c:	mov	x2, #0x0                   	// #0
   2a440:	mov	x1, #0x0                   	// #0
   2a444:	add	x0, x0, #0x1
   2a448:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2a44c:	mov	x21, x0
   2a450:	mov	x1, x20
   2a454:	mov	x2, x19
   2a458:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2a45c:	add	x24, x20, x19
   2a460:	strb	wzr, [x21, x19]
   2a464:	ldrb	w0, [x20, x19]
   2a468:	cmp	w0, #0x0
   2a46c:	cinc	x24, x24, ne  // ne = any
   2a470:	cbz	x21, 2a480 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c58>
   2a474:	mov	x0, x21
   2a478:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   2a47c:	str	x0, [x22, #48]
   2a480:	mov	x0, x21
   2a484:	mov	x1, #0x0                   	// #0
   2a488:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2a48c:	add	x1, x23, #0xf40
   2a490:	mov	x0, x24
   2a494:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2a498:	mov	x20, x0
   2a49c:	mov	x2, #0x0                   	// #0
   2a4a0:	mov	x1, #0x0                   	// #0
   2a4a4:	add	x0, x0, #0x1
   2a4a8:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2a4ac:	mov	x19, x0
   2a4b0:	mov	x1, x24
   2a4b4:	mov	x2, x20
   2a4b8:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2a4bc:	strb	wzr, [x19, x20]
   2a4c0:	cbz	x19, 2a4d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ca8>
   2a4c4:	mov	x0, x19
   2a4c8:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   2a4cc:	str	x0, [x22, #56]
   2a4d0:	mov	x0, x19
   2a4d4:	mov	x1, #0x0                   	// #0
   2a4d8:	ldp	x21, x22, [sp, #16]
   2a4dc:	ldp	x23, x24, [sp, #32]
   2a4e0:	ldr	x30, [sp, #48]
   2a4e4:	ldp	x19, x20, [sp], #64
   2a4e8:	b	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2a4ec:	nop
   2a4f0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2a4f4:	add	x4, x0, #0x4, lsl #12
   2a4f8:	str	x30, [sp, #-16]!
   2a4fc:	mov	x5, #0xffffffffffffffff    	// #-1
   2a500:	ldr	x3, [x3, #4008]
   2a504:	str	x5, [x0, #16]
   2a508:	str	xzr, [x0, #16408]
   2a50c:	add	x3, x3, #0x10
   2a510:	stp	x3, x1, [x0]
   2a514:	strh	wzr, [x4, #32]
   2a518:	strb	w2, [x4, #34]
   2a51c:	cbz	x1, 2a530 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d08>
   2a520:	ldrb	w0, [x1]
   2a524:	cbz	w0, 2a550 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d28>
   2a528:	ldr	x30, [sp], #16
   2a52c:	ret
   2a530:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a534:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a538:	add	x2, x2, #0x228
   2a53c:	add	x0, x0, #0x178
   2a540:	mov	x4, #0x0                   	// #0
   2a544:	mov	x3, #0x0                   	// #0
   2a548:	mov	w1, #0x1d0                 	// #464
   2a54c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2a550:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a554:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a558:	add	x2, x2, #0x240
   2a55c:	add	x0, x0, #0x178
   2a560:	mov	x4, #0x0                   	// #0
   2a564:	mov	x3, #0x0                   	// #0
   2a568:	mov	w1, #0x1d1                 	// #465
   2a56c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2a570:	stp	x19, x20, [sp, #-80]!
   2a574:	mov	x19, x0
   2a578:	stp	x25, x30, [sp, #48]
   2a57c:	add	x25, x0, #0x4, lsl #12
   2a580:	ldrb	w0, [x25, #32]
   2a584:	cbnz	w0, 2a6b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e88>
   2a588:	stp	x21, x22, [sp, #16]
   2a58c:	mov	x21, x1
   2a590:	ldr	x22, [x19, #8]
   2a594:	bl	14de8 <_ZdaPvRKSt9nothrow_t@@Base+0x3128>
   2a598:	mov	x20, x0
   2a59c:	cbz	x0, 2a5dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1db4>
   2a5a0:	mov	x0, x22
   2a5a4:	bl	148a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2be8>
   2a5a8:	mov	x1, x0
   2a5ac:	cbz	x0, 2a5dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1db4>
   2a5b0:	mov	x0, x20
   2a5b4:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2a5b8:	cbnz	w0, 2a5dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1db4>
   2a5bc:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a5c0:	add	x0, x0, #0x288
   2a5c4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2a5c8:	mov	x20, #0x0                   	// #0
   2a5cc:	mov	w0, #0x1                   	// #1
   2a5d0:	strb	w0, [x25, #32]
   2a5d4:	ldp	x21, x22, [sp, #16]
   2a5d8:	b	2a6b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e8c>
   2a5dc:	ldr	x0, [x19, #16408]
   2a5e0:	cmp	x0, #0x4
   2a5e4:	b.hi	2a6a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e7c>  // b.pmore
   2a5e8:	adrp	x22, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7d8>
   2a5ec:	add	x22, x22, #0x780
   2a5f0:	stp	x23, x24, [sp, #32]
   2a5f4:	adrp	x23, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a5f8:	add	x24, sp, #0x48
   2a5fc:	add	x23, x23, #0x2c0
   2a600:	ldp	w2, w0, [x19, #16]
   2a604:	cmn	w2, #0x1
   2a608:	b.eq	2a670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e48>  // b.none
   2a60c:	cmn	w0, #0x1
   2a610:	b.eq	2a6c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e9c>  // b.none
   2a614:	mov	x0, x21
   2a618:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   2a61c:	mov	x20, x0
   2a620:	cbz	x0, 2a6d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ea8>
   2a624:	mov	x2, x0
   2a628:	ldr	w0, [x19, #20]
   2a62c:	mov	x3, x24
   2a630:	mov	x1, x21
   2a634:	mov	x4, #0x0                   	// #0
   2a638:	str	xzr, [sp, #72]
   2a63c:	bl	1dc68 <__sanitizer_set_report_fd@@Base+0x5ea8>
   2a640:	tst	w0, #0xff
   2a644:	b.eq	2a654 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e2c>  // b.none
   2a648:	ldr	x0, [sp, #72]
   2a64c:	cmp	x20, x0
   2a650:	b.eq	2a6d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ea8>  // b.none
   2a654:	ldr	w1, [x19, #20]
   2a658:	mov	x0, x23
   2a65c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2a660:	ldr	w2, [x19, #16]
   2a664:	cmn	w2, #0x1
   2a668:	b.ne	2a6c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e9c>  // b.any
   2a66c:	ldr	w0, [x19, #20]
   2a670:	cmn	w0, #0x1
   2a674:	b.eq	2a67c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e54>  // b.none
   2a678:	bl	1dc10 <__sanitizer_set_report_fd@@Base+0x5e50>
   2a67c:	ldr	x1, [x19]
   2a680:	mov	x0, x19
   2a684:	ldr	x1, [x1]
   2a688:	blr	x1
   2a68c:	ldr	x0, [x19, #16408]
   2a690:	add	x0, x0, #0x1
   2a694:	str	x0, [x19, #16408]
   2a698:	cmp	x0, #0x4
   2a69c:	b.ls	2a600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1dd8>  // b.plast
   2a6a0:	ldp	x23, x24, [sp, #32]
   2a6a4:	ldrb	w0, [x25, #32]
   2a6a8:	cbz	w0, 2a724 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1efc>
   2a6ac:	ldp	x21, x22, [sp, #16]
   2a6b0:	mov	x20, #0x0                   	// #0
   2a6b4:	mov	x0, x20
   2a6b8:	ldp	x25, x30, [sp, #48]
   2a6bc:	ldp	x19, x20, [sp], #80
   2a6c0:	ret
   2a6c4:	mov	w0, w2
   2a6c8:	bl	1dc10 <__sanitizer_set_report_fd@@Base+0x5e50>
   2a6cc:	b	2a66c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e44>
   2a6d0:	mov	x20, x19
   2a6d4:	mov	x2, #0x4000                	// #16384
   2a6d8:	ldr	x0, [x20], #24
   2a6dc:	mov	x1, x20
   2a6e0:	ldr	x3, [x0, #8]
   2a6e4:	mov	x0, x19
   2a6e8:	cmp	x3, x22
   2a6ec:	b.ne	2a714 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1eec>  // b.any
   2a6f0:	bl	29648 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe20>
   2a6f4:	and	w0, w0, #0xff
   2a6f8:	cbz	w0, 2a660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e38>
   2a6fc:	mov	x0, x20
   2a700:	ldp	x21, x22, [sp, #16]
   2a704:	ldp	x23, x24, [sp, #32]
   2a708:	ldp	x25, x30, [sp, #48]
   2a70c:	ldp	x19, x20, [sp], #80
   2a710:	ret
   2a714:	blr	x3
   2a718:	and	w0, w0, #0xff
   2a71c:	cbz	w0, 2a660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e38>
   2a720:	b	2a6fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ed4>
   2a724:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a728:	add	x0, x0, #0x2f0
   2a72c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2a730:	mov	x20, #0x0                   	// #0
   2a734:	mov	w0, #0x1                   	// #1
   2a738:	strb	w0, [x25, #32]
   2a73c:	mov	x0, x20
   2a740:	ldp	x21, x22, [sp, #16]
   2a744:	ldp	x25, x30, [sp, #48]
   2a748:	ldp	x19, x20, [sp], #80
   2a74c:	ret
   2a750:	stp	x19, x20, [sp, #-32]!
   2a754:	mov	w7, w4
   2a758:	mov	x4, x2
   2a75c:	str	x30, [sp, #16]
   2a760:	cbz	x2, 2a888 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2060>
   2a764:	mov	x19, x0
   2a768:	add	x20, x0, #0x18
   2a76c:	cbz	w7, 2a7d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fac>
   2a770:	cmp	w7, #0x5
   2a774:	b.eq	2a8a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x207c>  // b.none
   2a778:	b.hi	2a82c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2004>  // b.pmore
   2a77c:	cmp	w7, #0x3
   2a780:	b.eq	2a87c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2054>  // b.none
   2a784:	adrp	x8, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2a788:	cmp	w7, #0x4
   2a78c:	add	x5, x8, #0xf88
   2a790:	b.ne	2a818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ff0>  // b.any
   2a794:	nop
   2a798:	mov	x6, x3
   2a79c:	mov	x0, x20
   2a7a0:	mov	x3, x1
   2a7a4:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a7a8:	mov	x1, #0x4000                	// #16384
   2a7ac:	add	x2, x2, #0x380
   2a7b0:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   2a7b4:	mov	w1, #0x3fff                	// #16383
   2a7b8:	cmp	w0, w1
   2a7bc:	b.gt	2a7fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fd4>
   2a7c0:	mov	x1, x20
   2a7c4:	ldr	x0, [x19, #16]
   2a7c8:	ldr	x30, [sp, #16]
   2a7cc:	ldp	x19, x20, [sp], #32
   2a7d0:	b	2a570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d48>
   2a7d4:	mov	x5, x3
   2a7d8:	mov	x0, x20
   2a7dc:	mov	x3, x1
   2a7e0:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a7e4:	mov	x1, #0x4000                	// #16384
   2a7e8:	add	x2, x2, #0x348
   2a7ec:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   2a7f0:	mov	w1, #0x3fff                	// #16383
   2a7f4:	cmp	w0, w1
   2a7f8:	b.le	2a7c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f98>
   2a7fc:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a800:	add	x0, x0, #0x358
   2a804:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2a808:	mov	x0, #0x0                   	// #0
   2a80c:	ldr	x30, [sp, #16]
   2a810:	ldp	x19, x20, [sp], #32
   2a814:	ret
   2a818:	cmp	w7, #0x1
   2a81c:	b.ne	2a848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2020>  // b.any
   2a820:	adrp	x8, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2a824:	add	x5, x8, #0xf70
   2a828:	b	2a798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a82c:	cmp	w7, #0x7
   2a830:	b.eq	2a870 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2048>  // b.none
   2a834:	cmp	w7, #0x8
   2a838:	b.ne	2a85c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2034>  // b.any
   2a83c:	adrp	x8, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2a840:	add	x5, x8, #0xf90
   2a844:	b	2a798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a848:	cmp	w7, #0x2
   2a84c:	b.ne	2a8b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2088>  // b.any
   2a850:	adrp	x8, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2a854:	add	x5, x8, #0xf68
   2a858:	b	2a798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a85c:	cmp	w7, #0x6
   2a860:	b.ne	2a8b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2088>  // b.any
   2a864:	adrp	x8, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2a868:	add	x5, x8, #0xf98
   2a86c:	b	2a798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a870:	adrp	x8, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2a874:	add	x5, x8, #0xf60
   2a878:	b	2a798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a87c:	adrp	x8, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2a880:	add	x5, x8, #0xf80
   2a884:	b	2a798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a888:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a88c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a890:	add	x2, x2, #0x330
   2a894:	add	x0, x0, #0x178
   2a898:	mov	x3, #0x0                   	// #0
   2a89c:	mov	w1, #0x1b5                 	// #437
   2a8a0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2a8a4:	adrp	x8, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2a8a8:	add	x5, x8, #0xf78
   2a8ac:	b	2a798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a8b0:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2a8b4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2a8b8:	add	x2, x2, #0xfa8
   2a8bc:	add	x0, x0, #0xad8
   2a8c0:	mov	x4, #0x0                   	// #0
   2a8c4:	mov	x3, #0x0                   	// #0
   2a8c8:	mov	w1, #0x2b8                 	// #696
   2a8cc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2a8d0:	stp	x19, x20, [sp, #-64]!
   2a8d4:	mov	x19, x2
   2a8d8:	ldr	w4, [x2, #16]
   2a8dc:	ldr	x2, [x2]
   2a8e0:	stp	x21, x22, [sp, #16]
   2a8e4:	mov	x21, x1
   2a8e8:	ldr	x3, [x19, #8]
   2a8ec:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2a8f0:	add	x1, x1, #0x398
   2a8f4:	str	x30, [sp, #56]
   2a8f8:	bl	2a750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f28>
   2a8fc:	cbnz	x0, 2a914 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ec>
   2a900:	mov	w0, #0x0                   	// #0
   2a904:	ldp	x21, x22, [sp, #16]
   2a908:	ldr	x30, [sp, #56]
   2a90c:	ldp	x19, x20, [sp], #64
   2a910:	ret
   2a914:	mov	x20, x0
   2a918:	stp	x23, x24, [sp, #32]
   2a91c:	adrp	x24, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2a920:	add	x1, x24, #0xf40
   2a924:	str	x25, [sp, #48]
   2a928:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2a92c:	mov	x22, x0
   2a930:	mov	x2, #0x0                   	// #0
   2a934:	mov	x1, #0x0                   	// #0
   2a938:	add	x0, x0, #0x1
   2a93c:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2a940:	str	x0, [x19, #40]
   2a944:	mov	x2, x22
   2a948:	mov	x1, x20
   2a94c:	add	x23, x20, x22
   2a950:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2a954:	ldr	x0, [x19, #40]
   2a958:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   2a95c:	add	x1, x1, #0xa68
   2a960:	strb	wzr, [x0, x22]
   2a964:	ldrb	w0, [x20, x22]
   2a968:	cmp	w0, #0x0
   2a96c:	cinc	x23, x23, ne  // ne = any
   2a970:	mov	x0, x23
   2a974:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2a978:	mov	x20, x0
   2a97c:	mov	x2, #0x0                   	// #0
   2a980:	mov	x1, #0x0                   	// #0
   2a984:	add	x0, x0, #0x1
   2a988:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2a98c:	mov	x22, x0
   2a990:	mov	x1, x23
   2a994:	mov	x2, x20
   2a998:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2a99c:	add	x25, x23, x20
   2a9a0:	strb	wzr, [x22, x20]
   2a9a4:	ldrb	w0, [x23, x20]
   2a9a8:	cmp	w0, #0x0
   2a9ac:	cinc	x25, x25, ne  // ne = any
   2a9b0:	cbz	x22, 2a9c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2198>
   2a9b4:	mov	x0, x22
   2a9b8:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   2a9bc:	str	x0, [x19, #48]
   2a9c0:	mov	x0, x22
   2a9c4:	mov	x1, #0x0                   	// #0
   2a9c8:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2a9cc:	add	x1, x24, #0xf40
   2a9d0:	mov	x0, x25
   2a9d4:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2a9d8:	mov	x22, x0
   2a9dc:	mov	x2, #0x0                   	// #0
   2a9e0:	mov	x1, #0x0                   	// #0
   2a9e4:	add	x0, x0, #0x1
   2a9e8:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2a9ec:	mov	x20, x0
   2a9f0:	mov	x1, x25
   2a9f4:	mov	x2, x22
   2a9f8:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2a9fc:	strb	wzr, [x20, x22]
   2aa00:	cbz	x20, 2aa10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21e8>
   2aa04:	mov	x0, x20
   2aa08:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   2aa0c:	str	x0, [x19, #56]
   2aa10:	mov	x0, x20
   2aa14:	mov	x1, #0x0                   	// #0
   2aa18:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2aa1c:	ldr	x2, [x19, #48]
   2aa20:	mov	w0, #0x1                   	// #1
   2aa24:	ldr	x1, [x19, #8]
   2aa28:	add	x21, x21, x2
   2aa2c:	ldp	x23, x24, [sp, #32]
   2aa30:	sub	x21, x21, x1
   2aa34:	ldr	x25, [sp, #48]
   2aa38:	str	x21, [x19, #48]
   2aa3c:	ldp	x21, x22, [sp, #16]
   2aa40:	ldr	x30, [sp, #56]
   2aa44:	ldp	x19, x20, [sp], #64
   2aa48:	ret
   2aa4c:	nop
   2aa50:	stp	x19, x20, [sp, #-96]!
   2aa54:	stp	x27, x30, [sp, #64]
   2aa58:	add	x27, x0, #0x70
   2aa5c:	stp	x21, x22, [sp, #16]
   2aa60:	mov	x21, x0
   2aa64:	mov	x0, x27
   2aa68:	stp	x23, x24, [sp, #32]
   2aa6c:	mov	x24, x1
   2aa70:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   2aa74:	mov	x0, x24
   2aa78:	bl	29108 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8e0>
   2aa7c:	mov	x1, x24
   2aa80:	mov	x23, x0
   2aa84:	mov	x0, x21
   2aa88:	bl	29db8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1590>
   2aa8c:	cbz	x0, 2ab28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2300>
   2aa90:	mov	x2, x0
   2aa94:	add	x20, x23, #0x8
   2aa98:	mov	x0, x20
   2aa9c:	ldr	w3, [x2, #24]
   2aaa0:	ldp	x1, x2, [x2]
   2aaa4:	sub	x2, x24, x2
   2aaa8:	bl	290a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x880>
   2aaac:	ldr	x19, [x21, #208]
   2aab0:	cbz	x19, 2ab28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2300>
   2aab4:	add	x22, sp, #0x58
   2aab8:	stp	x25, x26, [sp, #48]
   2aabc:	adrp	x26, 2a000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17d8>
   2aac0:	adrp	x25, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2aac4:	add	x26, x26, #0xde0
   2aac8:	add	x25, x25, #0x3a0
   2aacc:	b	2aae0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22b8>
   2aad0:	mov	x0, x22
   2aad4:	bl	29608 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2aad8:	ldr	x19, [x19, #8]
   2aadc:	cbz	x19, 2ab6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2344>
   2aae0:	mov	x1, x21
   2aae4:	mov	x0, x22
   2aae8:	bl	295f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc8>
   2aaec:	ldr	x2, [x19]
   2aaf0:	mov	x1, x25
   2aaf4:	mov	x0, x19
   2aaf8:	ldr	x3, [x2]
   2aafc:	cmp	x3, x26
   2ab00:	b.ne	2ab48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2320>  // b.any
   2ab04:	ldp	x2, x3, [x20, #8]
   2ab08:	ldr	w4, [x20, #24]
   2ab0c:	bl	2a750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f28>
   2ab10:	cbz	x0, 2aad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22a8>
   2ab14:	mov	x1, x23
   2ab18:	bl	2a250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a28>
   2ab1c:	mov	x0, x22
   2ab20:	bl	29608 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2ab24:	ldp	x25, x26, [sp, #48]
   2ab28:	mov	x0, x27
   2ab2c:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   2ab30:	mov	x0, x23
   2ab34:	ldp	x21, x22, [sp, #16]
   2ab38:	ldp	x23, x24, [sp, #32]
   2ab3c:	ldp	x27, x30, [sp, #64]
   2ab40:	ldp	x19, x20, [sp], #96
   2ab44:	ret
   2ab48:	mov	x2, x23
   2ab4c:	mov	x1, x24
   2ab50:	blr	x3
   2ab54:	tst	w0, #0xff
   2ab58:	b.ne	2ab1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x22f4>  // b.any
   2ab5c:	mov	x0, x22
   2ab60:	bl	29608 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2ab64:	ldr	x19, [x19, #8]
   2ab68:	cbnz	x19, 2aae0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22b8>
   2ab6c:	mov	x0, x27
   2ab70:	ldp	x25, x26, [sp, #48]
   2ab74:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   2ab78:	mov	x0, x23
   2ab7c:	ldp	x21, x22, [sp, #16]
   2ab80:	ldp	x23, x24, [sp, #32]
   2ab84:	ldp	x27, x30, [sp, #64]
   2ab88:	ldp	x19, x20, [sp], #96
   2ab8c:	ret
   2ab90:	stp	x19, x20, [sp, #-96]!
   2ab94:	mov	x19, x2
   2ab98:	stp	x23, x24, [sp, #32]
   2ab9c:	add	x24, x0, #0x70
   2aba0:	stp	x21, x22, [sp, #16]
   2aba4:	mov	x22, x1
   2aba8:	stp	x25, x26, [sp, #48]
   2abac:	mov	x25, x0
   2abb0:	mov	x0, x24
   2abb4:	str	x30, [sp, #72]
   2abb8:	bl	1c5d0 <__sanitizer_set_report_fd@@Base+0x4810>
   2abbc:	mov	x1, x22
   2abc0:	mov	x0, x25
   2abc4:	bl	29db8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1590>
   2abc8:	cbz	x0, 2add4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25ac>
   2abcc:	mov	x1, x0
   2abd0:	mov	x0, x19
   2abd4:	add	x23, sp, #0x58
   2abd8:	ldp	x20, x21, [x1]
   2abdc:	ldr	w26, [x1, #24]
   2abe0:	str	x27, [sp, #64]
   2abe4:	bl	291e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9b8>
   2abe8:	adrp	x27, 2a000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17d8>
   2abec:	add	x27, x27, #0x8d0
   2abf0:	mov	x0, x20
   2abf4:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   2abf8:	ldr	x20, [x25, #208]
   2abfc:	sub	x21, x22, x21
   2ac00:	stp	x0, x21, [x19]
   2ac04:	str	w26, [x19, #16]
   2ac08:	adrp	x26, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ac0c:	add	x26, x26, #0x398
   2ac10:	cbnz	x20, 2ac28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2400>
   2ac14:	b	2adc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25a0>
   2ac18:	mov	x0, x23
   2ac1c:	bl	29608 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2ac20:	ldr	x20, [x20, #8]
   2ac24:	cbz	x20, 2adc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25a0>
   2ac28:	mov	x1, x25
   2ac2c:	mov	x0, x23
   2ac30:	bl	295f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc8>
   2ac34:	ldr	x2, [x20]
   2ac38:	mov	x1, x26
   2ac3c:	mov	x0, x20
   2ac40:	ldr	x3, [x2, #8]
   2ac44:	cmp	x3, x27
   2ac48:	b.ne	2ada4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x257c>  // b.any
   2ac4c:	ldp	x2, x3, [x19]
   2ac50:	ldr	w4, [x19, #16]
   2ac54:	bl	2a750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f28>
   2ac58:	mov	x21, x0
   2ac5c:	cbz	x0, 2ac18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23f0>
   2ac60:	adrp	x25, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2ac64:	add	x1, x25, #0xf40
   2ac68:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2ac6c:	mov	x20, x0
   2ac70:	mov	x2, #0x0                   	// #0
   2ac74:	mov	x1, #0x0                   	// #0
   2ac78:	add	x0, x0, #0x1
   2ac7c:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2ac80:	str	x0, [x19, #40]
   2ac84:	mov	x2, x20
   2ac88:	mov	x1, x21
   2ac8c:	add	x26, x21, x20
   2ac90:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2ac94:	ldr	x0, [x19, #40]
   2ac98:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   2ac9c:	add	x1, x1, #0xa68
   2aca0:	strb	wzr, [x0, x20]
   2aca4:	ldrb	w0, [x21, x20]
   2aca8:	cmp	w0, #0x0
   2acac:	cinc	x26, x26, ne  // ne = any
   2acb0:	mov	x0, x26
   2acb4:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2acb8:	mov	x20, x0
   2acbc:	mov	x2, #0x0                   	// #0
   2acc0:	mov	x1, #0x0                   	// #0
   2acc4:	add	x0, x0, #0x1
   2acc8:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2accc:	mov	x21, x0
   2acd0:	mov	x1, x26
   2acd4:	mov	x2, x20
   2acd8:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2acdc:	add	x27, x26, x20
   2ace0:	strb	wzr, [x21, x20]
   2ace4:	ldrb	w0, [x26, x20]
   2ace8:	cmp	w0, #0x0
   2acec:	cinc	x27, x27, ne  // ne = any
   2acf0:	cbz	x21, 2ad00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24d8>
   2acf4:	mov	x0, x21
   2acf8:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   2acfc:	str	x0, [x19, #48]
   2ad00:	mov	x0, x21
   2ad04:	mov	x1, #0x0                   	// #0
   2ad08:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2ad0c:	add	x1, x25, #0xf40
   2ad10:	mov	x0, x27
   2ad14:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2ad18:	mov	x21, x0
   2ad1c:	mov	x2, #0x0                   	// #0
   2ad20:	mov	x1, #0x0                   	// #0
   2ad24:	add	x0, x0, #0x1
   2ad28:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2ad2c:	mov	x20, x0
   2ad30:	mov	x1, x27
   2ad34:	mov	x2, x21
   2ad38:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2ad3c:	strb	wzr, [x20, x21]
   2ad40:	cbz	x20, 2ad50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2528>
   2ad44:	mov	x0, x20
   2ad48:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   2ad4c:	str	x0, [x19, #56]
   2ad50:	mov	x0, x20
   2ad54:	mov	x1, #0x0                   	// #0
   2ad58:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2ad5c:	ldr	x1, [x19, #48]
   2ad60:	ldr	x0, [x19, #8]
   2ad64:	add	x22, x22, x1
   2ad68:	sub	x22, x22, x0
   2ad6c:	str	x22, [x19, #48]
   2ad70:	mov	x0, x23
   2ad74:	bl	29608 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2ad78:	ldr	x27, [sp, #64]
   2ad7c:	mov	w19, #0x1                   	// #1
   2ad80:	mov	x0, x24
   2ad84:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x48a8>
   2ad88:	mov	w0, w19
   2ad8c:	ldp	x21, x22, [sp, #16]
   2ad90:	ldp	x23, x24, [sp, #32]
   2ad94:	ldp	x25, x26, [sp, #48]
   2ad98:	ldr	x30, [sp, #72]
   2ad9c:	ldp	x19, x20, [sp], #96
   2ada0:	ret
   2ada4:	mov	x2, x19
   2ada8:	mov	x1, x22
   2adac:	blr	x3
   2adb0:	tst	w0, #0xff
   2adb4:	b.ne	2ad70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2548>  // b.any
   2adb8:	mov	x0, x23
   2adbc:	bl	29608 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2adc0:	ldr	x20, [x20, #8]
   2adc4:	cbnz	x20, 2ac28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2400>
   2adc8:	mov	w19, #0x1                   	// #1
   2adcc:	ldr	x27, [sp, #64]
   2add0:	b	2ad80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2558>
   2add4:	mov	w19, #0x0                   	// #0
   2add8:	b	2ad80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2558>
   2addc:	nop
   2ade0:	stp	x19, x20, [sp, #-32]!
   2ade4:	mov	x19, x2
   2ade8:	mov	x20, x0
   2adec:	ldp	x4, x5, [x2, #16]
   2adf0:	stp	x21, x30, [sp, #16]
   2adf4:	ldr	w2, [x2, #32]
   2adf8:	cbz	x4, 2af34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x270c>
   2adfc:	add	x21, x0, #0x18
   2ae00:	cbz	w2, 2ae88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2660>
   2ae04:	cmp	w2, #0x5
   2ae08:	b.eq	2af50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2728>  // b.none
   2ae0c:	b.hi	2aed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26b0>  // b.pmore
   2ae10:	cmp	w2, #0x3
   2ae14:	b.eq	2af28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2700>  // b.none
   2ae18:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2ae1c:	cmp	w2, #0x4
   2ae20:	add	x1, x1, #0xf88
   2ae24:	b.ne	2aec4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x269c>  // b.any
   2ae28:	mov	x6, x5
   2ae2c:	mov	x0, x21
   2ae30:	mov	x5, x1
   2ae34:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ae38:	mov	x1, #0x4000                	// #16384
   2ae3c:	add	x3, x3, #0x3a0
   2ae40:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ae44:	add	x2, x2, #0x380
   2ae48:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   2ae4c:	mov	w1, #0x3fff                	// #16383
   2ae50:	cmp	w0, w1
   2ae54:	b.gt	2aeb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2688>
   2ae58:	ldr	x0, [x20, #16]
   2ae5c:	mov	x1, x21
   2ae60:	bl	2a570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d48>
   2ae64:	mov	w1, #0x0                   	// #0
   2ae68:	cbz	x0, 2ae78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2650>
   2ae6c:	mov	x1, x19
   2ae70:	bl	2a250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a28>
   2ae74:	mov	w1, #0x1                   	// #1
   2ae78:	mov	w0, w1
   2ae7c:	ldp	x21, x30, [sp, #16]
   2ae80:	ldp	x19, x20, [sp], #32
   2ae84:	ret
   2ae88:	mov	x1, #0x4000                	// #16384
   2ae8c:	mov	x0, x21
   2ae90:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ae94:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ae98:	add	x3, x3, #0x3a0
   2ae9c:	add	x2, x2, #0x348
   2aea0:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   2aea4:	mov	w1, #0x3fff                	// #16383
   2aea8:	cmp	w0, w1
   2aeac:	b.le	2ae58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2630>
   2aeb0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2aeb4:	add	x0, x0, #0x358
   2aeb8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2aebc:	mov	w1, #0x0                   	// #0
   2aec0:	b	2ae78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2650>
   2aec4:	cmp	w2, #0x1
   2aec8:	b.ne	2aef4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26cc>  // b.any
   2aecc:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2aed0:	add	x1, x1, #0xf70
   2aed4:	b	2ae28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2aed8:	cmp	w2, #0x7
   2aedc:	b.eq	2af1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x26f4>  // b.none
   2aee0:	cmp	w2, #0x8
   2aee4:	b.ne	2af08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26e0>  // b.any
   2aee8:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2aeec:	add	x1, x1, #0xf90
   2aef0:	b	2ae28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2aef4:	cmp	w2, #0x2
   2aef8:	b.ne	2af5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2734>  // b.any
   2aefc:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2af00:	add	x1, x1, #0xf68
   2af04:	b	2ae28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2af08:	cmp	w2, #0x6
   2af0c:	b.ne	2af5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2734>  // b.any
   2af10:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2af14:	add	x1, x1, #0xf98
   2af18:	b	2ae28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2af1c:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2af20:	add	x1, x1, #0xf60
   2af24:	b	2ae28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2af28:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2af2c:	add	x1, x1, #0xf80
   2af30:	b	2ae28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2af34:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2af38:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2af3c:	add	x2, x2, #0x330
   2af40:	add	x0, x0, #0x178
   2af44:	mov	x3, #0x0                   	// #0
   2af48:	mov	w1, #0x1b5                 	// #437
   2af4c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2af50:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2af54:	add	x1, x1, #0xf78
   2af58:	b	2ae28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2af5c:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2af60:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2af64:	add	x2, x2, #0xfa8
   2af68:	add	x0, x0, #0xad8
   2af6c:	mov	x4, #0x0                   	// #0
   2af70:	mov	x3, #0x0                   	// #0
   2af74:	mov	w1, #0x2b8                 	// #696
   2af78:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2af7c:	nop
   2af80:	stp	x19, x20, [sp, #-224]!
   2af84:	mov	x20, x2
   2af88:	ldp	x4, x5, [x2]
   2af8c:	ldr	w2, [x2, #16]
   2af90:	stp	x21, x22, [sp, #16]
   2af94:	str	x30, [sp, #80]
   2af98:	cbz	x4, 2b490 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c68>
   2af9c:	mov	x19, x0
   2afa0:	add	x21, x0, #0x18
   2afa4:	cbz	w2, 2b02c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2804>
   2afa8:	cmp	w2, #0x5
   2afac:	b.eq	2b4d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ca8>  // b.none
   2afb0:	b.hi	2b07c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2854>  // b.pmore
   2afb4:	cmp	w2, #0x3
   2afb8:	b.eq	2b484 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c5c>  // b.none
   2afbc:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2afc0:	cmp	w2, #0x4
   2afc4:	add	x1, x1, #0xf88
   2afc8:	b.ne	2b068 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2840>  // b.any
   2afcc:	nop
   2afd0:	mov	x6, x5
   2afd4:	mov	x0, x21
   2afd8:	mov	x5, x1
   2afdc:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2afe0:	mov	x1, #0x4000                	// #16384
   2afe4:	add	x3, x3, #0x3a8
   2afe8:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2afec:	add	x2, x2, #0x380
   2aff0:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   2aff4:	mov	w1, #0x3fff                	// #16383
   2aff8:	cmp	w0, w1
   2affc:	b.gt	2b054 <__sanitizer_get_module_and_offset_for_pc@@Base+0x282c>
   2b000:	ldr	x0, [x19, #16]
   2b004:	mov	x1, x21
   2b008:	bl	2a570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d48>
   2b00c:	mov	x19, x0
   2b010:	mov	w1, #0x0                   	// #0
   2b014:	cbnz	x0, 2b0c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2898>
   2b018:	mov	w0, w1
   2b01c:	ldp	x21, x22, [sp, #16]
   2b020:	ldr	x30, [sp, #80]
   2b024:	ldp	x19, x20, [sp], #224
   2b028:	ret
   2b02c:	mov	x1, #0x4000                	// #16384
   2b030:	mov	x0, x21
   2b034:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b038:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b03c:	add	x3, x3, #0x3a8
   2b040:	add	x2, x2, #0x348
   2b044:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   2b048:	mov	w1, #0x3fff                	// #16383
   2b04c:	cmp	w0, w1
   2b050:	b.le	2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27d8>
   2b054:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b058:	add	x0, x0, #0x358
   2b05c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2b060:	mov	w1, #0x0                   	// #0
   2b064:	b	2b018 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27f0>
   2b068:	cmp	w2, #0x1
   2b06c:	b.ne	2b098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2870>  // b.any
   2b070:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2b074:	add	x1, x1, #0xf70
   2b078:	b	2afd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b07c:	cmp	w2, #0x7
   2b080:	b.eq	2b3bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b94>  // b.none
   2b084:	cmp	w2, #0x8
   2b088:	b.ne	2b0ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2884>  // b.any
   2b08c:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2b090:	add	x1, x1, #0xf90
   2b094:	b	2afd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b098:	cmp	w2, #0x2
   2b09c:	b.ne	2b54c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d24>  // b.any
   2b0a0:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2b0a4:	add	x1, x1, #0xf68
   2b0a8:	b	2afd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b0ac:	cmp	w2, #0x6
   2b0b0:	b.ne	2b54c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d24>  // b.any
   2b0b4:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2b0b8:	add	x1, x1, #0xf98
   2b0bc:	b	2afd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b0c0:	adrp	x22, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b0c4:	add	x22, x22, #0x280
   2b0c8:	mov	x1, x22
   2b0cc:	mov	x2, #0x2                   	// #2
   2b0d0:	bl	1a4e8 <__sanitizer_set_report_fd@@Base+0x2728>
   2b0d4:	cbz	w0, 2b3a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b7c>
   2b0d8:	ldrb	w0, [x19]
   2b0dc:	cbz	w0, 2b3a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b7c>
   2b0e0:	stp	x23, x24, [sp, #32]
   2b0e4:	adrp	x23, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2b0e8:	add	x24, x20, #0x18
   2b0ec:	add	x23, x23, #0xf40
   2b0f0:	stp	x25, x26, [sp, #48]
   2b0f4:	adrp	x25, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   2b0f8:	add	x26, sp, #0xa0
   2b0fc:	add	x25, x25, #0xa68
   2b100:	stp	x27, x28, [sp, #64]
   2b104:	mov	x1, x23
   2b108:	mov	x0, x19
   2b10c:	stp	xzr, xzr, [sp, #96]
   2b110:	str	xzr, [sp, #112]
   2b114:	str	wzr, [sp, #120]
   2b118:	strh	wzr, [sp, #124]
   2b11c:	strb	wzr, [sp, #126]
   2b120:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2b124:	mov	x2, #0x0                   	// #0
   2b128:	mov	x21, x0
   2b12c:	mov	x1, #0x0                   	// #0
   2b130:	add	x0, x0, #0x1
   2b134:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2b138:	str	x0, [sp, #96]
   2b13c:	mov	x2, x21
   2b140:	mov	x1, x19
   2b144:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b148:	add	x28, x19, x21
   2b14c:	ldr	x0, [sp, #96]
   2b150:	mov	x1, x23
   2b154:	strb	wzr, [x0, x21]
   2b158:	ldrb	w0, [x19, x21]
   2b15c:	cmp	w0, #0x0
   2b160:	cinc	x28, x28, ne  // ne = any
   2b164:	mov	x0, x28
   2b168:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2b16c:	mov	x19, x0
   2b170:	mov	x2, #0x0                   	// #0
   2b174:	mov	x1, #0x0                   	// #0
   2b178:	add	x0, x0, #0x1
   2b17c:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2b180:	mov	x2, x19
   2b184:	mov	x1, x28
   2b188:	str	x0, [sp, #104]
   2b18c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b190:	ldr	x1, [sp, #104]
   2b194:	add	x21, x28, x19
   2b198:	mov	x0, x26
   2b19c:	strb	wzr, [x1, x19]
   2b1a0:	ldrb	w1, [x28, x19]
   2b1a4:	cmp	w1, #0x0
   2b1a8:	cinc	x21, x21, ne  // ne = any
   2b1ac:	bl	29030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x808>
   2b1b0:	mov	x1, x21
   2b1b4:	mov	x0, x26
   2b1b8:	bl	29790 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf68>
   2b1bc:	mov	x28, x0
   2b1c0:	ldr	w3, [sp, #216]
   2b1c4:	mov	x1, x22
   2b1c8:	ldr	x4, [sp, #208]
   2b1cc:	mov	x2, #0x2                   	// #2
   2b1d0:	str	x4, [sp, #112]
   2b1d4:	str	w3, [sp, #120]
   2b1d8:	bl	1a4e8 <__sanitizer_set_report_fd@@Base+0x2728>
   2b1dc:	cmp	w0, #0x0
   2b1e0:	cset	w2, ne  // ne = any
   2b1e4:	mov	x1, x25
   2b1e8:	mov	x0, x28
   2b1ec:	strb	w2, [sp, #124]
   2b1f0:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2b1f4:	mov	x19, x0
   2b1f8:	mov	x2, #0x0                   	// #0
   2b1fc:	mov	x1, #0x0                   	// #0
   2b200:	add	x0, x0, #0x1
   2b204:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2b208:	mov	x27, x0
   2b20c:	mov	x2, x19
   2b210:	mov	x1, x28
   2b214:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b218:	add	x21, x28, x19
   2b21c:	strb	wzr, [x27, x19]
   2b220:	ldrb	w0, [x28, x19]
   2b224:	cmp	w0, #0x0
   2b228:	cinc	x21, x21, ne  // ne = any
   2b22c:	cbz	x27, 2b23c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a14>
   2b230:	mov	x0, x27
   2b234:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   2b238:	str	x0, [sp, #128]
   2b23c:	mov	x0, x27
   2b240:	mov	x1, #0x0                   	// #0
   2b244:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2b248:	mov	x1, x22
   2b24c:	mov	x2, #0x2                   	// #2
   2b250:	mov	x0, x21
   2b254:	bl	1a4e8 <__sanitizer_set_report_fd@@Base+0x2728>
   2b258:	cmp	w0, #0x0
   2b25c:	mov	x1, x25
   2b260:	cset	w2, ne  // ne = any
   2b264:	mov	x0, x21
   2b268:	strb	w2, [sp, #125]
   2b26c:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2b270:	mov	x19, x0
   2b274:	mov	x2, #0x0                   	// #0
   2b278:	mov	x1, #0x0                   	// #0
   2b27c:	add	x0, x0, #0x1
   2b280:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2b284:	mov	x27, x0
   2b288:	mov	x2, x19
   2b28c:	mov	x1, x21
   2b290:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b294:	add	x28, x21, x19
   2b298:	strb	wzr, [x27, x19]
   2b29c:	ldrb	w0, [x21, x19]
   2b2a0:	cmp	w0, #0x0
   2b2a4:	cinc	x28, x28, ne  // ne = any
   2b2a8:	cbz	x27, 2b2b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a90>
   2b2ac:	mov	x0, x27
   2b2b0:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   2b2b4:	str	x0, [sp, #136]
   2b2b8:	mov	x0, x27
   2b2bc:	mov	x1, #0x0                   	// #0
   2b2c0:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2b2c4:	mov	x1, x22
   2b2c8:	mov	x2, #0x2                   	// #2
   2b2cc:	mov	x0, x28
   2b2d0:	bl	1a4e8 <__sanitizer_set_report_fd@@Base+0x2728>
   2b2d4:	cmp	w0, #0x0
   2b2d8:	mov	x1, x23
   2b2dc:	cset	w2, ne  // ne = any
   2b2e0:	mov	x0, x28
   2b2e4:	strb	w2, [sp, #126]
   2b2e8:	bl	1a248 <__sanitizer_set_report_fd@@Base+0x2488>
   2b2ec:	mov	x21, x0
   2b2f0:	mov	x2, #0x0                   	// #0
   2b2f4:	mov	x1, #0x0                   	// #0
   2b2f8:	add	x0, x0, #0x1
   2b2fc:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2b300:	mov	x27, x0
   2b304:	mov	x2, x21
   2b308:	mov	x1, x28
   2b30c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b310:	add	x19, x28, x21
   2b314:	strb	wzr, [x27, x21]
   2b318:	ldrb	w0, [x28, x21]
   2b31c:	cmp	w0, #0x0
   2b320:	cinc	x19, x19, ne  // ne = any
   2b324:	cbz	x27, 2b334 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0c>
   2b328:	mov	x0, x27
   2b32c:	bl	1b680 <__sanitizer_set_report_fd@@Base+0x38c0>
   2b330:	str	x0, [sp, #144]
   2b334:	mov	x0, x27
   2b338:	mov	x1, #0x0                   	// #0
   2b33c:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2b340:	ldr	x4, [x20, #32]
   2b344:	mov	x0, #0x2493                	// #9363
   2b348:	movk	x0, #0x9249, lsl #16
   2b34c:	movk	x0, #0x4924, lsl #32
   2b350:	lsr	x4, x4, #3
   2b354:	movk	x0, #0x2492, lsl #48
   2b358:	ldr	x3, [x24, #16]
   2b35c:	umulh	x4, x4, x0
   2b360:	cmp	x3, x4
   2b364:	b.hi	2b4b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c90>  // b.pmore
   2b368:	add	x1, x3, #0x1
   2b36c:	b.eq	2b3c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ba0>  // b.none
   2b370:	ldr	x21, [x24]
   2b374:	lsl	x0, x3, #3
   2b378:	sub	x0, x0, x3
   2b37c:	str	x1, [x24, #16]
   2b380:	mov	x2, #0x38                  	// #56
   2b384:	add	x1, sp, #0x60
   2b388:	add	x0, x21, x0, lsl #3
   2b38c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b390:	ldrb	w0, [x19]
   2b394:	cbnz	w0, 2b104 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28dc>
   2b398:	ldp	x23, x24, [sp, #32]
   2b39c:	ldp	x25, x26, [sp, #48]
   2b3a0:	ldp	x27, x28, [sp, #64]
   2b3a4:	mov	w1, #0x1                   	// #1
   2b3a8:	mov	w0, w1
   2b3ac:	ldp	x21, x22, [sp, #16]
   2b3b0:	ldr	x30, [sp, #80]
   2b3b4:	ldp	x19, x20, [sp], #224
   2b3b8:	ret
   2b3bc:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2b3c0:	add	x1, x1, #0xf60
   2b3c4:	b	2afd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b3c8:	tst	x1, x3
   2b3cc:	b.eq	2b408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2be0>  // b.none
   2b3d0:	clz	x4, x1
   2b3d4:	mov	w0, #0x3f                  	// #63
   2b3d8:	sub	w0, w0, w4
   2b3dc:	mov	x2, #0x1                   	// #1
   2b3e0:	add	w4, w0, #0x1
   2b3e4:	lsl	x4, x2, x4
   2b3e8:	cmp	x1, x4
   2b3ec:	b.cs	2b510 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ce8>  // b.hs, b.nlast
   2b3f0:	lsl	x0, x2, x0
   2b3f4:	cmp	x1, x0
   2b3f8:	b.ls	2b52c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d04>  // b.plast
   2b3fc:	cmp	x3, x4
   2b400:	b.hi	2b4dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cb4>  // b.pmore
   2b404:	mov	x1, x4
   2b408:	adrp	x28, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2b40c:	lsl	x0, x1, #3
   2b410:	sub	x1, x0, x1
   2b414:	ldr	x28, [x28, #4016]
   2b418:	lsl	x21, x1, #3
   2b41c:	ldr	x0, [x28]
   2b420:	cbz	x0, 2b4f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ccc>
   2b424:	sub	x1, x0, #0x1
   2b428:	tst	x0, x1
   2b42c:	b.ne	2b500 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cd8>  // b.any
   2b430:	add	x1, x21, x1
   2b434:	neg	x0, x0
   2b438:	and	x28, x1, x0
   2b43c:	mov	w2, #0x0                   	// #0
   2b440:	mov	x0, x28
   2b444:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2b448:	add	x1, x1, #0xb50
   2b44c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2b450:	ldr	x3, [x24, #16]
   2b454:	mov	x21, x0
   2b458:	ldr	x1, [x24]
   2b45c:	lsl	x2, x3, #3
   2b460:	sub	x2, x2, x3
   2b464:	lsl	x2, x2, #3
   2b468:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b46c:	ldp	x0, x1, [x24]
   2b470:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2b474:	stp	x21, x28, [x24]
   2b478:	ldr	x3, [x24, #16]
   2b47c:	add	x1, x3, #0x1
   2b480:	b	2b374 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b4c>
   2b484:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2b488:	add	x1, x1, #0xf80
   2b48c:	b	2afd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b490:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b494:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b498:	add	x2, x2, #0x330
   2b49c:	add	x0, x0, #0x178
   2b4a0:	mov	x3, #0x0                   	// #0
   2b4a4:	mov	w1, #0x1b5                 	// #437
   2b4a8:	stp	x23, x24, [sp, #32]
   2b4ac:	stp	x25, x26, [sp, #48]
   2b4b0:	stp	x27, x28, [sp, #64]
   2b4b4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2b4b8:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   2b4bc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2b4c0:	add	x2, x2, #0x808
   2b4c4:	add	x0, x0, #0xad8
   2b4c8:	mov	w1, #0x1cd                 	// #461
   2b4cc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2b4d0:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2b4d4:	add	x1, x1, #0xf78
   2b4d8:	b	2afd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b4dc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   2b4e0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2b4e4:	add	x2, x2, #0x838
   2b4e8:	add	x0, x0, #0xad8
   2b4ec:	mov	w1, #0x20c                 	// #524
   2b4f0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2b4f4:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2b4f8:	str	x0, [x28]
   2b4fc:	b	2b424 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bfc>
   2b500:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2b504:	add	x0, x0, #0xb38
   2b508:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2b50c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2b510:	mov	x3, x1
   2b514:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   2b518:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2b51c:	add	x2, x2, #0x5c0
   2b520:	add	x0, x0, #0xad8
   2b524:	mov	w1, #0x18a                 	// #394
   2b528:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2b52c:	mov	x4, x0
   2b530:	mov	x3, x1
   2b534:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   2b538:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2b53c:	add	x2, x2, #0x648
   2b540:	add	x0, x0, #0xad8
   2b544:	mov	w1, #0x18b                 	// #395
   2b548:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2b54c:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2b550:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2b554:	add	x2, x2, #0xfa8
   2b558:	add	x0, x0, #0xad8
   2b55c:	mov	x4, #0x0                   	// #0
   2b560:	mov	x3, #0x0                   	// #0
   2b564:	mov	w1, #0x2b8                 	// #696
   2b568:	stp	x23, x24, [sp, #32]
   2b56c:	stp	x25, x26, [sp, #48]
   2b570:	stp	x27, x28, [sp, #64]
   2b574:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2b578:	stp	x19, x20, [sp, #-48]!
   2b57c:	mov	x19, x0
   2b580:	ldr	w0, [x0, #16]
   2b584:	str	x30, [sp, #24]
   2b588:	cmn	w0, #0x1
   2b58c:	b.eq	2b654 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e2c>  // b.none
   2b590:	ldr	w0, [x19, #20]
   2b594:	cmn	w0, #0x1
   2b598:	b.eq	2b654 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e2c>  // b.none
   2b59c:	mov	x20, x1
   2b5a0:	mov	x0, x1
   2b5a4:	str	x21, [sp, #16]
   2b5a8:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   2b5ac:	mov	x21, x0
   2b5b0:	cbnz	x0, 2b5fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dd4>
   2b5b4:	mov	x20, x19
   2b5b8:	adrp	x0, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7d8>
   2b5bc:	add	x0, x0, #0x780
   2b5c0:	ldr	x1, [x20], #24
   2b5c4:	ldr	x3, [x1, #8]
   2b5c8:	cmp	x3, x0
   2b5cc:	b.ne	2b668 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e40>  // b.any
   2b5d0:	mov	x0, x19
   2b5d4:	mov	x1, x20
   2b5d8:	mov	x2, #0x4000                	// #16384
   2b5dc:	bl	29648 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe20>
   2b5e0:	and	w0, w0, #0xff
   2b5e4:	ldr	x21, [sp, #16]
   2b5e8:	cbz	w0, 2b654 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e2c>
   2b5ec:	mov	x0, x20
   2b5f0:	ldr	x30, [sp, #24]
   2b5f4:	ldp	x19, x20, [sp], #48
   2b5f8:	ret
   2b5fc:	mov	x2, x0
   2b600:	ldr	w0, [x19, #20]
   2b604:	mov	x1, x20
   2b608:	add	x3, sp, #0x28
   2b60c:	mov	x4, #0x0                   	// #0
   2b610:	str	xzr, [sp, #40]
   2b614:	bl	1dc68 <__sanitizer_set_report_fd@@Base+0x5ea8>
   2b618:	tst	w0, #0xff
   2b61c:	b.eq	2b62c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e04>  // b.none
   2b620:	ldr	x0, [sp, #40]
   2b624:	cmp	x21, x0
   2b628:	b.eq	2b5b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d8c>  // b.none
   2b62c:	ldr	w1, [x19, #20]
   2b630:	mov	x20, #0x0                   	// #0
   2b634:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b638:	add	x0, x0, #0x2c0
   2b63c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2b640:	mov	x0, x20
   2b644:	ldr	x21, [sp, #16]
   2b648:	ldr	x30, [sp, #24]
   2b64c:	ldp	x19, x20, [sp], #48
   2b650:	ret
   2b654:	mov	x20, #0x0                   	// #0
   2b658:	mov	x0, x20
   2b65c:	ldr	x30, [sp, #24]
   2b660:	ldp	x19, x20, [sp], #48
   2b664:	ret
   2b668:	mov	x0, x19
   2b66c:	mov	x1, x20
   2b670:	mov	x2, #0x4000                	// #16384
   2b674:	blr	x3
   2b678:	and	w0, w0, #0xff
   2b67c:	b	2b5e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dbc>
   2b680:	stp	x19, x30, [sp, #-16]!
   2b684:	mov	x19, x0
   2b688:	ldr	w0, [x0, #16]
   2b68c:	cmn	w0, #0x1
   2b690:	b.eq	2b698 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e70>  // b.none
   2b694:	bl	1dc10 <__sanitizer_set_report_fd@@Base+0x5e50>
   2b698:	ldr	w0, [x19, #20]
   2b69c:	cmn	w0, #0x1
   2b6a0:	b.eq	2b6a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e80>  // b.none
   2b6a4:	bl	1dc10 <__sanitizer_set_report_fd@@Base+0x5e50>
   2b6a8:	ldr	x1, [x19]
   2b6ac:	mov	x0, x19
   2b6b0:	ldp	x19, x30, [sp], #16
   2b6b4:	ldr	x1, [x1]
   2b6b8:	mov	x16, x1
   2b6bc:	br	x16
   2b6c0:	cbnz	x2, 2b6cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ea4>
   2b6c4:	mov	w0, #0x1                   	// #1
   2b6c8:	ret
   2b6cc:	stp	x19, x20, [sp, #-48]!
   2b6d0:	mov	x20, x0
   2b6d4:	mov	x19, x2
   2b6d8:	ldr	w0, [x0, #20]
   2b6dc:	add	x3, sp, #0x28
   2b6e0:	mov	x4, #0x0                   	// #0
   2b6e4:	str	x30, [sp, #16]
   2b6e8:	str	xzr, [sp, #40]
   2b6ec:	bl	1dc68 <__sanitizer_set_report_fd@@Base+0x5ea8>
   2b6f0:	tst	w0, #0xff
   2b6f4:	b.eq	2b714 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2eec>  // b.none
   2b6f8:	ldr	x0, [sp, #40]
   2b6fc:	cmp	x0, x19
   2b700:	b.ne	2b714 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2eec>  // b.any
   2b704:	mov	w0, #0x1                   	// #1
   2b708:	ldr	x30, [sp, #16]
   2b70c:	ldp	x19, x20, [sp], #48
   2b710:	ret
   2b714:	ldr	w1, [x20, #20]
   2b718:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b71c:	add	x0, x0, #0x2c0
   2b720:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2b724:	mov	w0, #0x0                   	// #0
   2b728:	ldr	x30, [sp, #16]
   2b72c:	ldp	x19, x20, [sp], #48
   2b730:	ret
   2b734:	nop
   2b738:	mov	x0, #0x0                   	// #0
   2b73c:	ret
   2b740:	cmp	x2, #0x1
   2b744:	mov	w0, #0x0                   	// #0
   2b748:	b.ls	2b75c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f34>  // b.plast
   2b74c:	add	x1, x1, x2
   2b750:	ldurb	w2, [x1, #-1]
   2b754:	cmp	w2, #0xa
   2b758:	b.eq	2b760 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f38>  // b.none
   2b75c:	ret
   2b760:	ldurb	w0, [x1, #-2]
   2b764:	cmp	w0, #0xa
   2b768:	cset	w0, eq  // eq = none
   2b76c:	ret
   2b770:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2b774:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b778:	adrp	x4, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b77c:	add	x4, x4, #0xe8
   2b780:	ldr	x5, [x3, #4056]
   2b784:	add	x3, x0, #0xd0
   2b788:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b78c:	add	x0, x0, #0xc0
   2b790:	ldrb	w5, [x5, #188]
   2b794:	stp	x4, xzr, [x2, #16]
   2b798:	cmp	w5, #0x0
   2b79c:	csel	x0, x0, x3, ne  // ne = any
   2b7a0:	stp	x1, x0, [x2]
   2b7a4:	ret
   2b7a8:	cmp	x2, #0x8
   2b7ac:	b.hi	2b7b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f90>  // b.pmore
   2b7b0:	mov	w0, #0x0                   	// #0
   2b7b4:	ret
   2b7b8:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b7bc:	str	x30, [sp, #-16]!
   2b7c0:	sub	x2, x2, #0x8
   2b7c4:	add	x0, x1, x2
   2b7c8:	add	x1, x3, #0x880
   2b7cc:	mov	x2, #0x8                   	// #8
   2b7d0:	bl	19cc0 <__sanitizer_set_report_fd@@Base+0x1f00>
   2b7d4:	cmp	w0, #0x0
   2b7d8:	cset	w0, eq  // eq = none
   2b7dc:	ldr	x30, [sp], #16
   2b7e0:	ret
   2b7e4:	nop
   2b7e8:	stp	x19, x20, [sp, #-160]!
   2b7ec:	mov	x19, x0
   2b7f0:	ldr	x0, [x0, #8]
   2b7f4:	stp	x23, x24, [sp, #32]
   2b7f8:	str	x30, [sp, #56]
   2b7fc:	bl	1c340 <__sanitizer_set_report_fd@@Base+0x4580>
   2b800:	ands	w24, w0, #0xff
   2b804:	b.eq	2b8bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3094>  // b.none
   2b808:	ldp	x2, x1, [x19]
   2b80c:	stp	x21, x22, [sp, #16]
   2b810:	adrp	x0, 2c000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37d8>
   2b814:	add	x0, x0, #0x120
   2b818:	ldr	x3, [x2, #24]
   2b81c:	str	x25, [sp, #48]
   2b820:	cmp	x3, x0
   2b824:	b.ne	2b8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x30d4>  // b.any
   2b828:	ldr	x2, [x19, #16424]
   2b82c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b830:	add	x0, x0, #0x3b0
   2b834:	stp	x1, x0, [sp, #112]
   2b838:	stp	x2, xzr, [sp, #128]
   2b83c:	add	x0, x19, #0x4, lsl #12
   2b840:	ldrb	w24, [x0, #34]
   2b844:	cbnz	w24, 2ba78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3250>
   2b848:	add	x23, sp, #0x48
   2b84c:	mov	x22, #0x0                   	// #0
   2b850:	mov	x20, x23
   2b854:	mov	w21, #0x0                   	// #0
   2b858:	mov	x0, x20
   2b85c:	bl	6230 <pipe@plt>
   2b860:	cmn	w0, #0x1
   2b864:	b.eq	2b934 <__sanitizer_get_module_and_offset_for_pc@@Base+0x310c>  // b.none
   2b868:	ldr	w0, [x20]
   2b86c:	cmp	w0, #0x2
   2b870:	b.le	2b888 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3060>
   2b874:	ldr	w0, [x20, #4]
   2b878:	cmp	w0, #0x2
   2b87c:	b.le	2b888 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3060>
   2b880:	cbnz	x22, 2b990 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3168>
   2b884:	mov	x22, x20
   2b888:	add	w21, w21, #0x1
   2b88c:	add	x20, x20, #0x8
   2b890:	cmp	w21, #0x5
   2b894:	b.ne	2b858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3030>  // b.any
   2b898:	cbnz	x22, 2b8dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x30b4>
   2b89c:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b8a0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b8a4:	add	x2, x2, #0x4e8
   2b8a8:	add	x0, x0, #0x450
   2b8ac:	mov	x4, #0x0                   	// #0
   2b8b0:	mov	x3, #0x0                   	// #0
   2b8b4:	mov	w1, #0x84                  	// #132
   2b8b8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2b8bc:	add	x19, x19, #0x4, lsl #12
   2b8c0:	ldrb	w0, [x19, #33]
   2b8c4:	cbz	w0, 2b90c <__sanitizer_get_module_and_offset_for_pc@@Base+0x30e4>
   2b8c8:	mov	w0, w24
   2b8cc:	ldp	x23, x24, [sp, #32]
   2b8d0:	ldr	x30, [sp, #56]
   2b8d4:	ldp	x19, x20, [sp], #160
   2b8d8:	ret
   2b8dc:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b8e0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b8e4:	add	x2, x2, #0x4f8
   2b8e8:	add	x0, x0, #0x450
   2b8ec:	mov	x4, #0x0                   	// #0
   2b8f0:	mov	x3, #0x0                   	// #0
   2b8f4:	mov	w1, #0x85                  	// #133
   2b8f8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2b8fc:	add	x2, sp, #0x70
   2b900:	mov	x0, x19
   2b904:	blr	x3
   2b908:	b	2b83c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3014>
   2b90c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b910:	add	x0, x0, #0x4b8
   2b914:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2b918:	mov	w0, #0x1                   	// #1
   2b91c:	strb	w0, [x19, #33]
   2b920:	mov	w0, w24
   2b924:	ldp	x23, x24, [sp, #32]
   2b928:	ldr	x30, [sp, #56]
   2b92c:	ldp	x19, x20, [sp], #160
   2b930:	ret
   2b934:	cbz	w21, 2b95c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3134>
   2b938:	mov	w19, #0x0                   	// #0
   2b93c:	ldr	w0, [x23]
   2b940:	add	w19, w19, #0x1
   2b944:	add	x23, x23, #0x8
   2b948:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   2b94c:	ldur	w0, [x23, #-4]
   2b950:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   2b954:	cmp	w19, w21
   2b958:	b.ne	2b93c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3114>  // b.any
   2b95c:	bl	64f0 <__errno_location@plt>
   2b960:	mov	x1, x0
   2b964:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2b968:	add	x0, x0, #0x510
   2b96c:	ldr	w1, [x1]
   2b970:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2b974:	mov	w0, w24
   2b978:	ldp	x21, x22, [sp, #16]
   2b97c:	ldp	x23, x24, [sp, #32]
   2b980:	ldr	x25, [sp, #48]
   2b984:	ldr	x30, [sp, #56]
   2b988:	ldp	x19, x20, [sp], #160
   2b98c:	ret
   2b990:	cbz	w21, 2b9c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3198>
   2b994:	mov	w25, #0x0                   	// #0
   2b998:	cmp	x23, x22
   2b99c:	b.eq	2b9b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3188>  // b.none
   2b9a0:	ldr	w0, [x23]
   2b9a4:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   2b9a8:	ldr	w0, [x23, #4]
   2b9ac:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   2b9b0:	add	w25, w25, #0x1
   2b9b4:	add	x23, x23, #0x8
   2b9b8:	cmp	w25, w21
   2b9bc:	b.ne	2b998 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3170>  // b.any
   2b9c0:	ldr	w2, [x20]
   2b9c4:	add	x1, sp, #0x70
   2b9c8:	ldp	w21, w3, [x22]
   2b9cc:	mov	w4, #0xffffffff            	// #-1
   2b9d0:	ldr	x0, [x19, #8]
   2b9d4:	ldr	w22, [x20, #4]
   2b9d8:	bl	25080 <__sanitizer_sandbox_on_notify@@Base+0x1af8>
   2b9dc:	mov	w20, w0
   2b9e0:	cmp	w0, #0x0
   2b9e4:	b.lt	2ba3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3214>  // b.tstop
   2b9e8:	stp	w21, w22, [x19, #16]
   2b9ec:	b.eq	2ba58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3230>  // b.none
   2b9f0:	mov	w0, #0xa                   	// #10
   2b9f4:	bl	24820 <__sanitizer_sandbox_on_notify@@Base+0x1298>
   2b9f8:	mov	w0, w20
   2b9fc:	bl	251d0 <__sanitizer_sandbox_on_notify@@Base+0x1c48>
   2ba00:	ands	w24, w0, #0xff
   2ba04:	b.eq	2ba24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31fc>  // b.none
   2ba08:	mov	w0, w24
   2ba0c:	ldp	x21, x22, [sp, #16]
   2ba10:	ldp	x23, x24, [sp, #32]
   2ba14:	ldr	x25, [sp, #48]
   2ba18:	ldr	x30, [sp, #56]
   2ba1c:	ldp	x19, x20, [sp], #160
   2ba20:	ret
   2ba24:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ba28:	add	x0, x0, #0x570
   2ba2c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2ba30:	ldp	x21, x22, [sp, #16]
   2ba34:	ldr	x25, [sp, #48]
   2ba38:	b	2b8c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30a0>
   2ba3c:	mov	w0, w21
   2ba40:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   2ba44:	mov	w0, w22
   2ba48:	bl	1c118 <__sanitizer_set_report_fd@@Base+0x4358>
   2ba4c:	ldp	x21, x22, [sp, #16]
   2ba50:	ldr	x25, [sp, #48]
   2ba54:	b	2b8c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30a0>
   2ba58:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ba5c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ba60:	add	x2, x2, #0x560
   2ba64:	add	x0, x0, #0x450
   2ba68:	mov	x4, #0x0                   	// #0
   2ba6c:	mov	x3, #0x0                   	// #0
   2ba70:	mov	w1, #0xbc                  	// #188
   2ba74:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2ba78:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ba7c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ba80:	add	x2, x2, #0x3b8
   2ba84:	add	x0, x0, #0x450
   2ba88:	mov	x4, #0x0                   	// #0
   2ba8c:	mov	x3, #0x0                   	// #0
   2ba90:	mov	w1, #0xa6                  	// #166
   2ba94:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2ba98:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2ba9c:	stp	x19, x30, [sp, #-16]!
   2baa0:	mov	x19, x0
   2baa4:	ldr	x1, [x1, #3800]
   2baa8:	cbz	x1, 2bac8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32a0>
   2baac:	mov	x3, #0x0                   	// #0
   2bab0:	mov	x2, #0x0                   	// #0
   2bab4:	mov	x1, #0x0                   	// #0
   2bab8:	bl	6380 <__cxa_demangle@plt>
   2babc:	cbz	x0, 2bac8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32a0>
   2bac0:	ldp	x19, x30, [sp], #16
   2bac4:	ret
   2bac8:	mov	x0, x19
   2bacc:	ldp	x19, x30, [sp], #16
   2bad0:	ret
   2bad4:	nop
   2bad8:	cbz	x0, 2bb44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x331c>
   2badc:	stp	x19, x20, [sp, #-32]!
   2bae0:	mov	x19, x0
   2bae4:	str	x30, [sp, #16]
   2bae8:	ldrb	w1, [x0]
   2baec:	cmp	w1, #0x5f
   2baf0:	b.ne	2bb34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x330c>  // b.any
   2baf4:	ldrb	w1, [x0, #1]
   2baf8:	cmp	w1, #0x54
   2bafc:	b.ne	2bb34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x330c>  // b.any
   2bb00:	adrp	x1, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2bb04:	ldr	x20, [x1, #3344]
   2bb08:	cbz	x20, 2bb34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x330c>
   2bb0c:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   2bb10:	mov	x1, x0
   2bb14:	mov	x16, x20
   2bb18:	mov	x0, x19
   2bb1c:	ldr	x30, [sp, #16]
   2bb20:	mov	w4, #0x0                   	// #0
   2bb24:	ldp	x19, x20, [sp], #32
   2bb28:	mov	x3, #0x0                   	// #0
   2bb2c:	mov	x2, #0x0                   	// #0
   2bb30:	br	x16
   2bb34:	mov	x0, #0x0                   	// #0
   2bb38:	ldr	x30, [sp, #16]
   2bb3c:	ldp	x19, x20, [sp], #32
   2bb40:	ret
   2bb44:	mov	x0, #0x0                   	// #0
   2bb48:	ret
   2bb4c:	nop
   2bb50:	cbz	x0, 2bbe4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33bc>
   2bb54:	stp	x19, x20, [sp, #-32]!
   2bb58:	mov	x19, x0
   2bb5c:	str	x30, [sp, #16]
   2bb60:	ldrb	w1, [x0]
   2bb64:	cmp	w1, #0x5f
   2bb68:	b.ne	2bbb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3388>  // b.any
   2bb6c:	ldrb	w1, [x0, #1]
   2bb70:	cmp	w1, #0x54
   2bb74:	b.ne	2bbb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3388>  // b.any
   2bb78:	adrp	x1, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2bb7c:	ldr	x20, [x1, #3344]
   2bb80:	cbz	x20, 2bbb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3388>
   2bb84:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   2bb88:	mov	x1, x0
   2bb8c:	mov	w4, #0x0                   	// #0
   2bb90:	mov	x0, x19
   2bb94:	mov	x3, #0x0                   	// #0
   2bb98:	mov	x2, #0x0                   	// #0
   2bb9c:	blr	x20
   2bba0:	cbz	x0, 2bbb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3388>
   2bba4:	ldr	x30, [sp, #16]
   2bba8:	ldp	x19, x20, [sp], #32
   2bbac:	ret
   2bbb0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bbb4:	ldr	x0, [x0, #3800]
   2bbb8:	cbz	x0, 2bbd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33ac>
   2bbbc:	mov	x0, x19
   2bbc0:	mov	x3, #0x0                   	// #0
   2bbc4:	mov	x2, #0x0                   	// #0
   2bbc8:	mov	x1, #0x0                   	// #0
   2bbcc:	bl	6380 <__cxa_demangle@plt>
   2bbd0:	cbnz	x0, 2bba4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x337c>
   2bbd4:	mov	x0, x19
   2bbd8:	ldr	x30, [sp, #16]
   2bbdc:	ldp	x19, x20, [sp], #32
   2bbe0:	ret
   2bbe4:	mov	x0, #0x0                   	// #0
   2bbe8:	ret
   2bbec:	nop
   2bbf0:	cbz	x1, 2bc88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3460>
   2bbf4:	stp	x19, x20, [sp, #-32]!
   2bbf8:	mov	x19, x1
   2bbfc:	str	x30, [sp, #16]
   2bc00:	ldrb	w0, [x1]
   2bc04:	cmp	w0, #0x5f
   2bc08:	b.ne	2bc54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x342c>  // b.any
   2bc0c:	ldrb	w0, [x1, #1]
   2bc10:	cmp	w0, #0x54
   2bc14:	b.ne	2bc54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x342c>  // b.any
   2bc18:	adrp	x0, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2bc1c:	ldr	x20, [x0, #3344]
   2bc20:	cbz	x20, 2bc54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x342c>
   2bc24:	mov	x0, x1
   2bc28:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   2bc2c:	mov	w4, #0x0                   	// #0
   2bc30:	mov	x1, x0
   2bc34:	mov	x3, #0x0                   	// #0
   2bc38:	mov	x0, x19
   2bc3c:	mov	x2, #0x0                   	// #0
   2bc40:	blr	x20
   2bc44:	cbz	x0, 2bc54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x342c>
   2bc48:	ldr	x30, [sp, #16]
   2bc4c:	ldp	x19, x20, [sp], #32
   2bc50:	ret
   2bc54:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bc58:	ldr	x0, [x0, #3800]
   2bc5c:	cbz	x0, 2bc78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3450>
   2bc60:	mov	x0, x19
   2bc64:	mov	x3, #0x0                   	// #0
   2bc68:	mov	x2, #0x0                   	// #0
   2bc6c:	mov	x1, #0x0                   	// #0
   2bc70:	bl	6380 <__cxa_demangle@plt>
   2bc74:	cbnz	x0, 2bc48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3420>
   2bc78:	mov	x0, x19
   2bc7c:	ldr	x30, [sp, #16]
   2bc80:	ldp	x19, x20, [sp], #32
   2bc84:	ret
   2bc88:	mov	x0, #0x0                   	// #0
   2bc8c:	ret
   2bc90:	stp	x19, x20, [sp, #-128]!
   2bc94:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bc98:	ldr	x0, [x20, #4056]
   2bc9c:	stp	x21, x22, [sp, #16]
   2bca0:	ldrb	w0, [x0]
   2bca4:	str	x30, [sp, #48]
   2bca8:	cbnz	w0, 2bd34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350c>
   2bcac:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bcb0:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bcb4:	ldr	x0, [x0, #3816]
   2bcb8:	ldr	w0, [x0]
   2bcbc:	sxtw	x0, w0
   2bcc0:	cmp	x0, #0x1
   2bcc4:	b.hi	2bd18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34f0>  // b.pmore
   2bcc8:	mov	x19, #0x0                   	// #0
   2bccc:	mov	x2, #0x0                   	// #0
   2bcd0:	dup	v0.2d, x19
   2bcd4:	mov	x1, #0xf0                  	// #240
   2bcd8:	ldr	x0, [x22, #3920]
   2bcdc:	str	x2, [sp, #96]
   2bce0:	stur	q0, [sp, #104]
   2bce4:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2bce8:	ldp	x4, x5, [sp, #96]
   2bcec:	mov	x19, x0
   2bcf0:	ldr	x2, [sp, #112]
   2bcf4:	add	x1, sp, #0x40
   2bcf8:	stp	x4, x5, [sp, #64]
   2bcfc:	str	x2, [sp, #80]
   2bd00:	bl	29518 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcf0>
   2bd04:	mov	x0, x19
   2bd08:	ldp	x21, x22, [sp, #16]
   2bd0c:	ldr	x30, [sp, #48]
   2bd10:	ldp	x19, x20, [sp], #128
   2bd14:	ret
   2bd18:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2bd1c:	add	x0, x0, #0x5b0
   2bd20:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2bd24:	mov	x19, #0x0                   	// #0
   2bd28:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bd2c:	mov	x2, #0x0                   	// #0
   2bd30:	b	2bcd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a8>
   2bd34:	bl	120a0 <_ZdaPvRKSt9nothrow_t@@Base+0x3e0>
   2bd38:	tst	w0, #0xff
   2bd3c:	b.eq	2bd90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3568>  // b.none
   2bd40:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bd44:	ldr	x0, [x0, #3816]
   2bd48:	ldr	w0, [x0]
   2bd4c:	sxtw	x0, w0
   2bd50:	cmp	x0, #0x1
   2bd54:	b.hi	2bdf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35cc>  // b.pmore
   2bd58:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bd5c:	ldr	x0, [x22, #3920]
   2bd60:	bl	29630 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe08>
   2bd64:	mov	x19, x0
   2bd68:	cbz	x0, 2be14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35ec>
   2bd6c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bd70:	ldr	x0, [x0, #3816]
   2bd74:	ldr	w0, [x0]
   2bd78:	sxtw	x0, w0
   2bd7c:	cmp	x0, #0x1
   2bd80:	b.hi	2be04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35dc>  // b.pmore
   2bd84:	mov	x2, #0x1                   	// #1
   2bd88:	str	xzr, [x19, #8]
   2bd8c:	b	2bcd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a8>
   2bd90:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bd94:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bd98:	ldr	x1, [x1, #3752]
   2bd9c:	ldr	x0, [x0, #3808]
   2bda0:	cmp	x1, #0x0
   2bda4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2bda8:	b.eq	2bd58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3530>  // b.none
   2bdac:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bdb0:	mov	x1, #0x4010                	// #16400
   2bdb4:	ldr	x0, [x22, #3920]
   2bdb8:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2bdbc:	mov	x19, x0
   2bdc0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bdc4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bdc8:	add	x0, x0, #0xb28
   2bdcc:	ldr	x1, [x1, #3816]
   2bdd0:	stp	x0, xzr, [x19]
   2bdd4:	ldr	w0, [x1]
   2bdd8:	sxtw	x0, w0
   2bddc:	cmp	x0, #0x1
   2bde0:	b.ls	2bd84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x355c>  // b.plast
   2bde4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2bde8:	add	x0, x0, #0x600
   2bdec:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2bdf0:	b	2bd84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x355c>
   2bdf4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2bdf8:	add	x0, x0, #0x5d0
   2bdfc:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2be00:	b	2bd58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3530>
   2be04:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2be08:	add	x0, x0, #0x620
   2be0c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2be10:	b	2bd84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x355c>
   2be14:	ldr	x0, [x20, #4056]
   2be18:	stp	x23, x24, [sp, #32]
   2be1c:	ldr	x23, [x0, #8]
   2be20:	cbz	x23, 2beb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3688>
   2be24:	mov	x0, x23
   2be28:	bl	148a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2be8>
   2be2c:	ldrb	w1, [x23]
   2be30:	mov	x21, x0
   2be34:	cbz	w1, 2bfa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x377c>
   2be38:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2be3c:	add	x19, x19, #0x670
   2be40:	mov	x1, x19
   2be44:	mov	x0, x21
   2be48:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2be4c:	cbnz	w0, 2bebc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3694>
   2be50:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2be54:	ldr	x0, [x0, #3816]
   2be58:	ldr	w0, [x0]
   2be5c:	sxtw	x0, w0
   2be60:	cmp	x0, #0x1
   2be64:	b.hi	2be9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3674>  // b.pmore
   2be68:	ldr	x20, [x22, #3920]
   2be6c:	mov	x1, #0x4018                	// #16408
   2be70:	mov	x0, x20
   2be74:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2be78:	mov	x2, x20
   2be7c:	mov	x1, x23
   2be80:	mov	x19, x0
   2be84:	bl	2a198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1970>
   2be88:	cbz	x19, 2bf9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3774>
   2be8c:	mov	x2, #0x1                   	// #1
   2be90:	ldp	x23, x24, [sp, #32]
   2be94:	str	xzr, [x19, #8]
   2be98:	b	2bcd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a8>
   2be9c:	mov	x1, x23
   2bea0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2bea4:	add	x0, x0, #0x680
   2bea8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2beac:	b	2be68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3640>
   2beb0:	adrp	x21, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2beb4:	add	x21, x21, #0x328
   2beb8:	b	2be38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3610>
   2bebc:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2bec0:	mov	x0, x21
   2bec4:	add	x1, x1, #0x6b8
   2bec8:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2becc:	cbz	w0, 2c0e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38bc>
   2bed0:	adrp	x24, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2bed4:	add	x24, x24, #0x6f8
   2bed8:	mov	x0, x21
   2bedc:	mov	x1, x24
   2bee0:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2bee4:	cbnz	w0, 2bfd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37ac>
   2bee8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2beec:	ldr	x0, [x0, #3816]
   2bef0:	ldr	w0, [x0]
   2bef4:	sxtw	x0, w0
   2bef8:	cmp	x0, #0x1
   2befc:	b.ls	2bf10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36e8>  // b.plast
   2bf00:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2bf04:	mov	x1, x23
   2bf08:	add	x0, x0, #0x708
   2bf0c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2bf10:	ldr	x20, [x22, #3920]
   2bf14:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bf18:	mov	x1, #0x38                  	// #56
   2bf1c:	mov	x0, x20
   2bf20:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2bf24:	ldr	x21, [x21, #4016]
   2bf28:	mov	x19, x0
   2bf2c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bf30:	add	x0, x0, #0xaf0
   2bf34:	stp	x0, xzr, [x19]
   2bf38:	ldr	x0, [x21]
   2bf3c:	stp	x23, x20, [x19, #16]
   2bf40:	str	xzr, [x19, #32]
   2bf44:	stp	xzr, xzr, [x19, #40]
   2bf48:	cbz	x0, 2c0b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x388c>
   2bf4c:	sub	x1, x0, #0x1
   2bf50:	tst	x1, x0
   2bf54:	b.ne	2c0c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3898>  // b.any
   2bf58:	add	x20, x0, #0x7f
   2bf5c:	neg	x0, x0
   2bf60:	and	x20, x20, x0
   2bf64:	mov	w2, #0x0                   	// #0
   2bf68:	mov	x0, x20
   2bf6c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2bf70:	add	x1, x1, #0xb50
   2bf74:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2bf78:	ldr	x1, [x19, #32]
   2bf7c:	mov	x23, x0
   2bf80:	ldr	x2, [x19, #48]
   2bf84:	lsl	x2, x2, #3
   2bf88:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2bf8c:	ldp	x0, x1, [x19, #32]
   2bf90:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2bf94:	stp	x23, x20, [x19, #32]
   2bf98:	b	2be8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3664>
   2bf9c:	ldp	x23, x24, [sp, #32]
   2bfa0:	b	2bcc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a0>
   2bfa4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bfa8:	ldr	x0, [x0, #3816]
   2bfac:	ldr	w0, [x0]
   2bfb0:	sxtw	x0, w0
   2bfb4:	cmp	x0, #0x1
   2bfb8:	b.ls	2bf9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3774>  // b.plast
   2bfbc:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2bfc0:	add	x0, x0, #0x640
   2bfc4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2bfc8:	mov	x2, #0x0                   	// #0
   2bfcc:	ldp	x23, x24, [sp, #32]
   2bfd0:	b	2bcd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a8>
   2bfd4:	cbnz	x23, 2c0d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a8>
   2bfd8:	mov	x0, x19
   2bfdc:	bl	179d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2700>
   2bfe0:	mov	x21, x0
   2bfe4:	cbz	x0, 2c034 <__sanitizer_get_module_and_offset_for_pc@@Base+0x380c>
   2bfe8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2bfec:	ldr	x0, [x0, #3816]
   2bff0:	ldr	w0, [x0]
   2bff4:	sxtw	x0, w0
   2bff8:	cmp	x0, #0x1
   2bffc:	b.ls	2c010 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37e8>  // b.plast
   2c000:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c004:	mov	x1, x21
   2c008:	add	x0, x0, #0x7d0
   2c00c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2c010:	ldr	x20, [x22, #3920]
   2c014:	mov	x1, #0x4018                	// #16408
   2c018:	mov	x0, x20
   2c01c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2c020:	mov	x2, x20
   2c024:	mov	x1, x21
   2c028:	mov	x19, x0
   2c02c:	bl	2a198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1970>
   2c030:	b	2be88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3660>
   2c034:	ldr	x20, [x20, #4056]
   2c038:	ldrb	w0, [x20, #16]
   2c03c:	cbz	w0, 2bf9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3774>
   2c040:	mov	x0, x24
   2c044:	bl	179d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2700>
   2c048:	mov	x20, x0
   2c04c:	cbz	x0, 2bf9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3774>
   2c050:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2c054:	ldr	x0, [x0, #3816]
   2c058:	ldr	w0, [x0]
   2c05c:	sxtw	x0, w0
   2c060:	cmp	x0, #0x1
   2c064:	b.ls	2c078 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3850>  // b.plast
   2c068:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c06c:	mov	x1, x20
   2c070:	add	x0, x0, #0x7f8
   2c074:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2c078:	ldr	x23, [x22, #3920]
   2c07c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2c080:	mov	x1, #0x38                  	// #56
   2c084:	mov	x0, x23
   2c088:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2c08c:	ldr	x21, [x21, #4016]
   2c090:	mov	x19, x0
   2c094:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2c098:	add	x0, x0, #0xaf0
   2c09c:	stp	x0, xzr, [x19]
   2c0a0:	ldr	x0, [x21]
   2c0a4:	stp	x20, x23, [x19, #16]
   2c0a8:	str	xzr, [x19, #32]
   2c0ac:	stp	xzr, xzr, [x19, #40]
   2c0b0:	cbnz	x0, 2bf4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3724>
   2c0b4:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2c0b8:	str	x0, [x21]
   2c0bc:	b	2bf4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3724>
   2c0c0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2c0c4:	add	x0, x0, #0xb38
   2c0c8:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2c0cc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2c0d0:	mov	x1, x23
   2c0d4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c0d8:	add	x0, x0, #0x738
   2c0dc:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2c0e0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2c0e4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c0e8:	add	x0, x0, #0x6c0
   2c0ec:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2c0f0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2c0f4:	nop
   2c0f8:	str	x30, [sp, #-16]!
   2c0fc:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2c100:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c104:	mov	x0, #0x0                   	// #0
   2c108:	add	x1, x1, #0x818
   2c10c:	bl	62e0 <dlsym@plt>
   2c110:	ldr	x30, [sp], #16
   2c114:	adrp	x1, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2c118:	str	x0, [x1, #3344]
   2c11c:	b	6320 <dlerror@plt>
   2c120:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c124:	add	x3, x3, #0x3b0
   2c128:	stp	x1, x3, [x2]
   2c12c:	ldr	x0, [x0, #16424]
   2c130:	stp	x0, xzr, [x2, #16]
   2c134:	ret
   2c138:	mov	w0, #0x0                   	// #0
   2c13c:	ret
   2c140:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2c144:	ldr	x0, [x0, #3840]
   2c148:	cbz	x0, 2c150 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3928>
   2c14c:	b	63f0 <__sanitizer_symbolize_flush@plt>
   2c150:	ret
   2c154:	nop
   2c158:	str	x30, [sp, #-16]!
   2c15c:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c160:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c164:	add	x2, x2, #0x3b8
   2c168:	add	x0, x0, #0x3d8
   2c16c:	mov	x4, #0x0                   	// #0
   2c170:	mov	x3, #0x0                   	// #0
   2c174:	mov	w1, #0x62                  	// #98
   2c178:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2c17c:	nop
   2c180:	str	x30, [sp, #-16]!
   2c184:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c188:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c18c:	add	x2, x2, #0x3b8
   2c190:	add	x0, x0, #0x3d8
   2c194:	mov	x4, #0x0                   	// #0
   2c198:	mov	x3, #0x0                   	// #0
   2c19c:	mov	w1, #0x5c                  	// #92
   2c1a0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2c1a4:	nop
   2c1a8:	stp	x19, x20, [sp, #-48]!
   2c1ac:	mov	x19, x2
   2c1b0:	mov	w3, #0x4000                	// #16384
   2c1b4:	stp	x21, x22, [sp, #16]
   2c1b8:	add	x22, x0, #0x10
   2c1bc:	mov	x21, x1
   2c1c0:	ldp	x0, x1, [x19]
   2c1c4:	mov	x2, x22
   2c1c8:	str	x30, [sp, #32]
   2c1cc:	bl	6300 <__sanitizer_symbolize_data@plt>
   2c1d0:	mov	w20, w0
   2c1d4:	tst	w0, #0xff
   2c1d8:	b.ne	2c1f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39c8>  // b.any
   2c1dc:	mov	w0, w20
   2c1e0:	ldp	x21, x22, [sp, #16]
   2c1e4:	ldr	x30, [sp, #32]
   2c1e8:	ldp	x19, x20, [sp], #48
   2c1ec:	ret
   2c1f0:	mov	x0, x22
   2c1f4:	mov	x1, x19
   2c1f8:	bl	2a3c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ba0>
   2c1fc:	ldr	x1, [x19, #48]
   2c200:	ldr	x0, [x19, #8]
   2c204:	add	x1, x21, x1
   2c208:	ldp	x21, x22, [sp, #16]
   2c20c:	sub	x1, x1, x0
   2c210:	str	x1, [x19, #48]
   2c214:	mov	w0, w20
   2c218:	ldr	x30, [sp, #32]
   2c21c:	ldp	x19, x20, [sp], #48
   2c220:	ret
   2c224:	nop
   2c228:	stp	x19, x20, [sp, #-32]!
   2c22c:	mov	x19, x2
   2c230:	mov	w3, #0x4000                	// #16384
   2c234:	stp	x21, x30, [sp, #16]
   2c238:	add	x21, x0, #0x10
   2c23c:	mov	x2, x21
   2c240:	ldp	x0, x1, [x19, #16]
   2c244:	bl	6390 <__sanitizer_symbolize_code@plt>
   2c248:	mov	w20, w0
   2c24c:	tst	w0, #0xff
   2c250:	b.ne	2c264 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a3c>  // b.any
   2c254:	mov	w0, w20
   2c258:	ldp	x21, x30, [sp, #16]
   2c25c:	ldp	x19, x20, [sp], #32
   2c260:	ret
   2c264:	mov	x1, x19
   2c268:	mov	x0, x21
   2c26c:	bl	2a250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a28>
   2c270:	mov	w0, w20
   2c274:	ldp	x21, x30, [sp, #16]
   2c278:	ldp	x19, x20, [sp], #32
   2c27c:	ret
   2c280:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2c284:	stp	x19, x20, [sp, #-32]!
   2c288:	mov	x20, x1
   2c28c:	ldr	x0, [x0, #3696]
   2c290:	str	x30, [sp, #24]
   2c294:	cbz	x0, 2c300 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ad8>
   2c298:	str	x21, [sp, #16]
   2c29c:	mov	x21, #0x400                 	// #1024
   2c2a0:	mov	x2, #0x0                   	// #0
   2c2a4:	mov	x1, #0x0                   	// #0
   2c2a8:	mov	x0, x21
   2c2ac:	bl	12108 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2c2b0:	mov	x19, x0
   2c2b4:	mov	w2, w21
   2c2b8:	mov	x0, x20
   2c2bc:	mov	x1, x19
   2c2c0:	bl	6290 <__sanitizer_symbolize_demangle@plt>
   2c2c4:	cmp	x21, w0, sxtw
   2c2c8:	sxtw	x0, w0
   2c2cc:	b.cc	2c2e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3abc>  // b.lo, b.ul, b.last
   2c2d0:	mov	x0, x19
   2c2d4:	ldr	x21, [sp, #16]
   2c2d8:	ldr	x30, [sp, #24]
   2c2dc:	ldp	x19, x20, [sp], #32
   2c2e0:	ret
   2c2e4:	add	x21, x0, #0x1
   2c2e8:	mov	x1, #0x0                   	// #0
   2c2ec:	mov	x0, x19
   2c2f0:	bl	126b0 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2c2f4:	cmp	x21, #0x20, lsl #12
   2c2f8:	b.ls	2c2a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>  // b.plast
   2c2fc:	ldr	x21, [sp, #16]
   2c300:	mov	x19, x20
   2c304:	mov	x0, x19
   2c308:	ldr	x30, [sp, #24]
   2c30c:	ldp	x19, x20, [sp], #32
   2c310:	ret
   2c314:	nop
   2c318:	stp	x19, x20, [sp, #-32]!
   2c31c:	mov	x20, x1
   2c320:	str	x30, [sp, #16]
   2c324:	bl	29780 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf58>
   2c328:	mov	w19, w0
   2c32c:	tst	w0, #0xff
   2c330:	b.eq	2c33c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b14>  // b.none
   2c334:	ldrb	w0, [x20]
   2c338:	cbnz	w0, 2c34c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b24>
   2c33c:	mov	w0, w19
   2c340:	ldr	x30, [sp, #16]
   2c344:	ldp	x19, x20, [sp], #32
   2c348:	ret
   2c34c:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c350:	add	x0, x20, #0x1
   2c354:	add	x1, x1, #0x880
   2c358:	bl	1b4c0 <__sanitizer_set_report_fd@@Base+0x3700>
   2c35c:	cbz	x0, 2c374 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b4c>
   2c360:	strb	wzr, [x0]
   2c364:	mov	w0, w19
   2c368:	ldr	x30, [sp, #16]
   2c36c:	ldp	x19, x20, [sp], #32
   2c370:	ret
   2c374:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c378:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c37c:	add	x2, x2, #0x438
   2c380:	add	x0, x0, #0x450
   2c384:	mov	x4, #0x0                   	// #0
   2c388:	mov	x3, #0x0                   	// #0
   2c38c:	mov	w1, #0xeb                  	// #235
   2c390:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2c394:	nop
   2c398:	stp	x19, x20, [sp, #-144]!
   2c39c:	mov	x19, x0
   2c3a0:	mov	x20, #0x0                   	// #0
   2c3a4:	ldr	x0, [x0, #48]
   2c3a8:	stp	x21, x22, [sp, #16]
   2c3ac:	mov	x22, x2
   2c3b0:	stp	x23, x24, [sp, #32]
   2c3b4:	stp	x25, x30, [sp, #48]
   2c3b8:	str	xzr, [sp, #72]
   2c3bc:	ldp	x21, x23, [x2, #16]
   2c3c0:	cbnz	x0, 2c3d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bb0>
   2c3c4:	b	2c484 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c5c>
   2c3c8:	ldr	x0, [x19, #48]
   2c3cc:	add	x20, x20, #0x1
   2c3d0:	cmp	x0, x20
   2c3d4:	b.ls	2c47c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c54>  // b.plast
   2c3d8:	ldr	x1, [x19, #32]
   2c3dc:	mov	x0, x21
   2c3e0:	lsl	x24, x20, #3
   2c3e4:	ldr	x1, [x1, x20, lsl #3]
   2c3e8:	ldr	x1, [x1, #16424]
   2c3ec:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2c3f0:	cbnz	w0, 2c3c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ba0>
   2c3f4:	ldr	x4, [x19, #48]
   2c3f8:	ldr	x0, [x19, #32]
   2c3fc:	cmp	x4, x20
   2c400:	b.ls	2c518 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cf0>  // b.plast
   2c404:	ldr	x1, [x0, x24]
   2c408:	str	x1, [sp, #72]
   2c40c:	cbz	x1, 2c484 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c5c>
   2c410:	ldr	x1, [x1, #16424]
   2c414:	mov	x0, x21
   2c418:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2c41c:	sxtw	x4, w0
   2c420:	cbnz	w0, 2c4fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cd4>
   2c424:	add	x19, sp, #0x50
   2c428:	mov	x3, x23
   2c42c:	mov	x4, #0xffffffffffffffff    	// #-1
   2c430:	mov	x1, #0x40                  	// #64
   2c434:	mov	x0, x19
   2c438:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c43c:	add	x2, x2, #0x870
   2c440:	bl	1f868 <__sanitizer_on_print@@Base+0x8>
   2c444:	ldr	x0, [sp, #72]
   2c448:	mov	x1, x19
   2c44c:	bl	2a570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d48>
   2c450:	mov	w1, #0x0                   	// #0
   2c454:	cbz	x0, 2c464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c3c>
   2c458:	mov	x1, x22
   2c45c:	bl	2a250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a28>
   2c460:	mov	w1, #0x1                   	// #1
   2c464:	mov	w0, w1
   2c468:	ldp	x21, x22, [sp, #16]
   2c46c:	ldp	x23, x24, [sp, #32]
   2c470:	ldp	x25, x30, [sp, #48]
   2c474:	ldp	x19, x20, [sp], #144
   2c478:	ret
   2c47c:	ldr	x1, [sp, #72]
   2c480:	cbnz	x1, 2c410 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3be8>
   2c484:	ldr	x0, [x19, #24]
   2c488:	mov	x1, #0x4030                	// #16432
   2c48c:	add	x24, x19, #0x20
   2c490:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2c494:	mov	x20, x0
   2c498:	ldr	x1, [x19, #16]
   2c49c:	mov	w2, #0x0                   	// #0
   2c4a0:	bl	2a4f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cc8>
   2c4a4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2c4a8:	add	x0, x0, #0xac0
   2c4ac:	str	x0, [x20]
   2c4b0:	mov	x0, x21
   2c4b4:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   2c4b8:	str	x20, [sp, #72]
   2c4bc:	ldr	x4, [x19, #40]
   2c4c0:	ldr	x3, [x24, #16]
   2c4c4:	str	x0, [x20, #16424]
   2c4c8:	lsr	x4, x4, #3
   2c4cc:	cmp	x3, x4
   2c4d0:	b.hi	2c5e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dc0>  // b.pmore
   2c4d4:	add	x20, x3, #0x1
   2c4d8:	b.eq	2c534 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d0c>  // b.none
   2c4dc:	ldr	x25, [x19, #32]
   2c4e0:	str	x20, [x24, #16]
   2c4e4:	add	x1, sp, #0x48
   2c4e8:	add	x0, x25, x3, lsl #3
   2c4ec:	mov	x2, #0x8                   	// #8
   2c4f0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2c4f4:	ldr	x1, [sp, #72]
   2c4f8:	b	2c410 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3be8>
   2c4fc:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c500:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c504:	add	x2, x2, #0x828
   2c508:	add	x0, x0, #0x450
   2c50c:	mov	x3, #0x0                   	// #0
   2c510:	mov	w1, #0x129                 	// #297
   2c514:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2c518:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2c51c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2c520:	mov	x3, x20
   2c524:	add	x2, x2, #0x58
   2c528:	add	x0, x0, #0xad8
   2c52c:	mov	w1, #0x1c5                 	// #453
   2c530:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2c534:	tst	x3, x20
   2c538:	b.eq	2c574 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d4c>  // b.none
   2c53c:	clz	x2, x20
   2c540:	mov	w0, #0x3f                  	// #63
   2c544:	sub	w0, w0, w2
   2c548:	mov	x2, #0x1                   	// #1
   2c54c:	add	w4, w0, #0x1
   2c550:	lsl	x4, x2, x4
   2c554:	cmp	x4, x20
   2c558:	b.ls	2c634 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e0c>  // b.plast
   2c55c:	lsl	x0, x2, x0
   2c560:	cmp	x0, x20
   2c564:	b.cs	2c650 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e28>  // b.hs, b.nlast
   2c568:	cmp	x3, x4
   2c56c:	b.hi	2c60c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3de4>  // b.pmore
   2c570:	mov	x20, x4
   2c574:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2c578:	lsl	x20, x20, #3
   2c57c:	ldr	x25, [x25, #4016]
   2c580:	ldr	x0, [x25]
   2c584:	cbz	x0, 2c600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd8>
   2c588:	sub	x1, x0, #0x1
   2c58c:	tst	x0, x1
   2c590:	b.ne	2c624 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dfc>  // b.any
   2c594:	add	x20, x20, x1
   2c598:	neg	x0, x0
   2c59c:	and	x20, x20, x0
   2c5a0:	mov	w2, #0x0                   	// #0
   2c5a4:	mov	x0, x20
   2c5a8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2c5ac:	add	x1, x1, #0xb50
   2c5b0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2c5b4:	ldr	x2, [x24, #16]
   2c5b8:	mov	x25, x0
   2c5bc:	ldr	x1, [x19, #32]
   2c5c0:	lsl	x2, x2, #3
   2c5c4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2c5c8:	ldr	x1, [x24, #8]
   2c5cc:	ldr	x0, [x19, #32]
   2c5d0:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2c5d4:	ldr	x3, [x24, #16]
   2c5d8:	str	x25, [x19, #32]
   2c5dc:	str	x20, [x24, #8]
   2c5e0:	add	x20, x3, #0x1
   2c5e4:	b	2c4e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cb8>
   2c5e8:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   2c5ec:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2c5f0:	add	x2, x2, #0x808
   2c5f4:	add	x0, x0, #0xad8
   2c5f8:	mov	w1, #0x1cd                 	// #461
   2c5fc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2c600:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2c604:	str	x0, [x25]
   2c608:	b	2c588 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d60>
   2c60c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6458>
   2c610:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2c614:	add	x2, x2, #0x838
   2c618:	add	x0, x0, #0xad8
   2c61c:	mov	w1, #0x20c                 	// #524
   2c620:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2c624:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2c628:	add	x0, x0, #0xb38
   2c62c:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2c630:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2c634:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   2c638:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2c63c:	mov	x3, x20
   2c640:	add	x2, x2, #0x5c0
   2c644:	add	x0, x0, #0xad8
   2c648:	mov	w1, #0x18a                 	// #394
   2c64c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2c650:	mov	x4, x0
   2c654:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   2c658:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2c65c:	mov	x3, x20
   2c660:	add	x2, x2, #0x648
   2c664:	add	x0, x0, #0xad8
   2c668:	mov	w1, #0x18b                 	// #395
   2c66c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2c670:	stp	x19, x20, [sp, #-96]!
   2c674:	stp	x23, x24, [sp, #32]
   2c678:	adrp	x24, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2c67c:	mov	x23, x0
   2c680:	ldr	x19, [x24, #4016]
   2c684:	stp	x21, x22, [sp, #16]
   2c688:	mov	x22, x1
   2c68c:	stp	x25, x30, [sp, #48]
   2c690:	mov	x21, x2
   2c694:	ldr	x3, [x19]
   2c698:	str	xzr, [sp, #64]
   2c69c:	stp	xzr, xzr, [sp, #72]
   2c6a0:	cbz	x3, 2c798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f70>
   2c6a4:	sub	x0, x3, #0x1
   2c6a8:	tst	x0, x3
   2c6ac:	b.ne	2c800 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fd8>  // b.any
   2c6b0:	add	x20, x3, #0x3ff
   2c6b4:	neg	x3, x3
   2c6b8:	and	x20, x20, x3
   2c6bc:	mov	w2, #0x0                   	// #0
   2c6c0:	mov	x0, x20
   2c6c4:	adrp	x25, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2c6c8:	add	x1, x25, #0xb50
   2c6cc:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2c6d0:	ldr	x1, [sp, #64]
   2c6d4:	mov	x19, x0
   2c6d8:	ldr	x2, [sp, #80]
   2c6dc:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2c6e0:	ldp	x0, x1, [sp, #64]
   2c6e4:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2c6e8:	stp	x19, x20, [sp, #64]
   2c6ec:	ldr	x2, [sp, #80]
   2c6f0:	cmp	x2, #0x3ff
   2c6f4:	b.hi	2c718 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ef0>  // b.pmore
   2c6f8:	cmp	x20, #0x3ff
   2c6fc:	b.ls	2c7a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f80>  // b.plast
   2c700:	mov	x3, #0x400                 	// #1024
   2c704:	add	x0, x19, x2
   2c708:	mov	w1, #0x0                   	// #0
   2c70c:	sub	x2, x3, x2
   2c710:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   2c714:	ldr	x19, [sp, #64]
   2c718:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2c71c:	add	x20, sp, #0x40
   2c720:	mov	x2, x23
   2c724:	ldr	q0, [x0, #1504]
   2c728:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c72c:	mov	x0, x20
   2c730:	add	x1, x1, #0xb38
   2c734:	str	q0, [sp, #80]
   2c738:	strb	wzr, [x19]
   2c73c:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2c740:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2c744:	mov	x3, x22
   2c748:	mov	w2, #0x0                   	// #0
   2c74c:	mov	x0, x20
   2c750:	ldr	x4, [x4, #4056]
   2c754:	adrp	x6, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c758:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c75c:	add	x6, x6, #0x328
   2c760:	add	x1, x1, #0x890
   2c764:	ldr	x5, [x4, #24]
   2c768:	ldrb	w4, [x4, #189]
   2c76c:	bl	28c50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x428>
   2c770:	ldr	x0, [sp, #64]
   2c774:	mov	x1, x21
   2c778:	bl	15110 <__sanitizer_report_error_summary@@Base+0x10>
   2c77c:	ldp	x0, x1, [sp, #64]
   2c780:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2c784:	ldp	x21, x22, [sp, #16]
   2c788:	ldp	x23, x24, [sp, #32]
   2c78c:	ldp	x25, x30, [sp, #48]
   2c790:	ldp	x19, x20, [sp], #96
   2c794:	ret
   2c798:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2c79c:	mov	x3, x0
   2c7a0:	str	x0, [x19]
   2c7a4:	b	2c6a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e7c>
   2c7a8:	ldr	x24, [x24, #4016]
   2c7ac:	ldr	x0, [x24]
   2c7b0:	cbz	x0, 2c810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fe8>
   2c7b4:	sub	x1, x0, #0x1
   2c7b8:	tst	x1, x0
   2c7bc:	b.ne	2c800 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fd8>  // b.any
   2c7c0:	add	x20, x0, #0x3ff
   2c7c4:	neg	x0, x0
   2c7c8:	and	x20, x20, x0
   2c7cc:	add	x1, x25, #0xb50
   2c7d0:	mov	w2, #0x0                   	// #0
   2c7d4:	mov	x0, x20
   2c7d8:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2c7dc:	mov	x19, x0
   2c7e0:	ldr	x1, [sp, #64]
   2c7e4:	ldr	x2, [sp, #80]
   2c7e8:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2c7ec:	ldp	x0, x1, [sp, #64]
   2c7f0:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2c7f4:	stp	x19, x20, [sp, #64]
   2c7f8:	ldr	x2, [sp, #80]
   2c7fc:	b	2c700 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ed8>
   2c800:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2c804:	add	x0, x0, #0xb38
   2c808:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2c80c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2c810:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2c814:	str	x0, [x24]
   2c818:	b	2c7b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f8c>
   2c81c:	nop
   2c820:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2c824:	ldr	x3, [x3, #4056]
   2c828:	ldrb	w3, [x3, #60]
   2c82c:	cbnz	w3, 2c834 <__sanitizer_get_module_and_offset_for_pc@@Base+0x400c>
   2c830:	ret
   2c834:	b	2c670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e48>
   2c838:	stp	x19, x20, [sp, #-32]!
   2c83c:	mov	x19, x0
   2c840:	mov	w1, #0x1                   	// #1
   2c844:	ldr	x20, [x0]
   2c848:	str	x30, [sp, #16]
   2c84c:	ldxrb	w0, [x20]
   2c850:	stxrb	w2, w1, [x20]
   2c854:	cbnz	w2, 2c84c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4024>
   2c858:	dmb	ish
   2c85c:	tst	w0, #0xff
   2c860:	b.eq	2c86c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4044>  // b.none
   2c864:	mov	x0, x20
   2c868:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   2c86c:	mov	x0, x19
   2c870:	bl	171f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f20>
   2c874:	ldr	w0, [x19, #8]
   2c878:	bl	24878 <__sanitizer_sandbox_on_notify@@Base+0x12f0>
   2c87c:	dmb	ish
   2c880:	strb	wzr, [x20]
   2c884:	ldr	x30, [sp, #16]
   2c888:	ldp	x19, x20, [sp], #32
   2c88c:	ret
   2c890:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2c894:	stp	x19, x20, [sp, #-32]!
   2c898:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2c89c:	ldr	x0, [x0, #4056]
   2c8a0:	add	x1, x1, #0x898
   2c8a4:	ldr	x19, [x0, #112]
   2c8a8:	str	x30, [sp, #16]
   2c8ac:	mov	x0, x19
   2c8b0:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2c8b4:	mov	w1, #0x1                   	// #1
   2c8b8:	cbnz	w0, 2c8cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x40a4>
   2c8bc:	mov	w0, w1
   2c8c0:	ldr	x30, [sp, #16]
   2c8c4:	ldp	x19, x20, [sp], #32
   2c8c8:	ret
   2c8cc:	mov	x0, x19
   2c8d0:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2c8d4:	add	x1, x1, #0xc18
   2c8d8:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2c8dc:	mov	w1, #0x0                   	// #0
   2c8e0:	cbnz	w0, 2c8bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4094>
   2c8e4:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2c8e8:	mov	w1, #0x1                   	// #1
   2c8ec:	ldr	x0, [x19, #3928]
   2c8f0:	ldr	x20, [x0]
   2c8f4:	ldxrb	w0, [x20]
   2c8f8:	stxrb	w2, w1, [x20]
   2c8fc:	cbnz	w2, 2c8f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40cc>
   2c900:	dmb	ish
   2c904:	tst	w0, #0xff
   2c908:	b.eq	2c914 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40ec>  // b.none
   2c90c:	mov	x0, x20
   2c910:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   2c914:	ldr	x19, [x19, #3928]
   2c918:	mov	x0, x19
   2c91c:	bl	171f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f20>
   2c920:	ldr	w0, [x19, #8]
   2c924:	bl	24878 <__sanitizer_sandbox_on_notify@@Base+0x12f0>
   2c928:	dmb	ish
   2c92c:	and	w1, w0, #0xff
   2c930:	strb	wzr, [x20]
   2c934:	mov	w0, w1
   2c938:	ldr	x30, [sp, #16]
   2c93c:	ldp	x19, x20, [sp], #32
   2c940:	ret
   2c944:	nop
   2c948:	stp	x19, x20, [sp, #-48]!
   2c94c:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2c950:	ldr	x19, [x19, #4056]
   2c954:	stp	x21, x22, [sp, #16]
   2c958:	mov	x21, x2
   2c95c:	ldrb	w2, [x19, #60]
   2c960:	str	x30, [sp, #32]
   2c964:	cbz	w2, 2c9d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41a8>
   2c968:	ldr	w2, [x1, #8]
   2c96c:	cbz	w2, 2c9bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4194>
   2c970:	mov	x20, x0
   2c974:	ldr	x0, [x1]
   2c978:	ldr	x22, [x0]
   2c97c:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2c980:	sub	x22, x22, #0x4
   2c984:	mov	x1, x22
   2c988:	bl	2aa50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2c98c:	ldrb	w1, [x19, #60]
   2c990:	mov	x19, x0
   2c994:	cbz	w1, 2c9a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4180>
   2c998:	mov	x2, x21
   2c99c:	mov	x0, x20
   2c9a0:	add	x1, x19, #0x8
   2c9a4:	bl	2c670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e48>
   2c9a8:	mov	x0, x19
   2c9ac:	ldp	x21, x22, [sp, #16]
   2c9b0:	ldr	x30, [sp, #32]
   2c9b4:	ldp	x19, x20, [sp], #48
   2c9b8:	b	29160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   2c9bc:	ldp	x21, x22, [sp, #16]
   2c9c0:	mov	x1, #0x0                   	// #0
   2c9c4:	ldr	x30, [sp, #32]
   2c9c8:	ldp	x19, x20, [sp], #48
   2c9cc:	b	15110 <__sanitizer_report_error_summary@@Base+0x10>
   2c9d0:	ldp	x21, x22, [sp, #16]
   2c9d4:	ldr	x30, [sp, #32]
   2c9d8:	ldp	x19, x20, [sp], #48
   2c9dc:	ret
   2c9e0:	and	w0, w0, #0x6
   2c9e4:	cmp	w0, #0x6
   2c9e8:	b.eq	2c9f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41c8>  // b.none
   2c9ec:	ret
   2c9f0:	stp	x29, x30, [sp, #-96]!
   2c9f4:	mov	x29, sp
   2c9f8:	stp	x19, x20, [sp, #16]
   2c9fc:	mov	x20, x30
   2ca00:	stp	x21, x22, [sp, #32]
   2ca04:	adrp	x22, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2ca08:	add	x19, x22, #0xd18
   2ca0c:	stp	x23, x24, [sp, #48]
   2ca10:	str	x25, [sp, #64]
   2ca14:	bl	244a0 <__sanitizer_sandbox_on_notify@@Base+0xf18>
   2ca18:	mov	x21, x0
   2ca1c:	ldxr	x1, [x19]
   2ca20:	cbnz	x1, 2ca2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4204>
   2ca24:	stlxr	w0, x21, [x19]
   2ca28:	cbnz	w0, 2ca1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x41f4>
   2ca2c:	dmb	ish
   2ca30:	cbz	x1, 2ca4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4224>
   2ca34:	cmp	x21, x1
   2ca38:	b.eq	2cd04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44dc>  // b.none
   2ca3c:	bl	1c2d0 <__sanitizer_set_report_fd@@Base+0x4510>
   2ca40:	ldxr	x1, [x19]
   2ca44:	cbz	x1, 2ca24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   2ca48:	b	2ca2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4204>
   2ca4c:	add	x0, x19, #0x8
   2ca50:	mov	w2, #0x1                   	// #1
   2ca54:	ldxrb	w1, [x0]
   2ca58:	stxrb	w3, w2, [x0]
   2ca5c:	cbnz	w3, 2ca54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x422c>
   2ca60:	dmb	ish
   2ca64:	tst	w1, #0xff
   2ca68:	b.eq	2ca70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4248>  // b.none
   2ca6c:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   2ca70:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2ca74:	bl	2c890 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   2ca78:	and	w24, w0, #0xff
   2ca7c:	ldr	x19, [x23, #4016]
   2ca80:	ldr	x0, [x19]
   2ca84:	cbz	x0, 2cc6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4444>
   2ca88:	sub	x1, x0, #0x1
   2ca8c:	tst	x1, x0
   2ca90:	b.ne	2cce8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44c0>  // b.any
   2ca94:	add	x21, x0, #0x817
   2ca98:	neg	x0, x0
   2ca9c:	and	x21, x21, x0
   2caa0:	mov	w2, #0x0                   	// #0
   2caa4:	mov	x0, x21
   2caa8:	adrp	x25, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2caac:	add	x1, x25, #0xb50
   2cab0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2cab4:	mov	x2, #0x0                   	// #0
   2cab8:	mov	x1, #0x0                   	// #0
   2cabc:	mov	x19, x0
   2cac0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2cac4:	mov	x1, #0x0                   	// #0
   2cac8:	mov	x0, #0x0                   	// #0
   2cacc:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2cad0:	cmp	x21, #0x817
   2cad4:	b.ls	2cc8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4464>  // b.plast
   2cad8:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2cadc:	mov	w1, #0x0                   	// #0
   2cae0:	mov	x0, x19
   2cae4:	mov	x2, #0x818                 	// #2072
   2cae8:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   2caec:	str	xzr, [x19, #2064]
   2caf0:	ldr	x1, [x23, #4056]
   2caf4:	add	x0, x19, #0x10
   2caf8:	str	x0, [x19]
   2cafc:	stp	xzr, xzr, [x29, #80]
   2cb00:	ldrb	w0, [x1, #33]
   2cb04:	str	xzr, [x19, #8]
   2cb08:	cbz	w0, 2cc0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x43e4>
   2cb0c:	add	x2, x29, #0x58
   2cb10:	add	x1, x29, #0x50
   2cb14:	mov	w0, #0x0                   	// #0
   2cb18:	bl	239d8 <__sanitizer_sandbox_on_notify@@Base+0x450>
   2cb1c:	ldp	x5, x6, [x29, #80]
   2cb20:	mov	x2, x20
   2cb24:	mov	x3, x29
   2cb28:	mov	x0, x19
   2cb2c:	mov	w7, #0x1                   	// #1
   2cb30:	mov	x4, #0x0                   	// #0
   2cb34:	mov	w1, #0x100                 	// #256
   2cb38:	bl	28300 <__sanitizer_cov_dump@@Base+0x17a0>
   2cb3c:	cbz	w24, 2cc34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x440c>
   2cb40:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2cb44:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2cb48:	add	x1, x1, #0x658
   2cb4c:	add	x0, x24, #0xbf8
   2cb50:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2cb54:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2cb58:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2cb5c:	add	x0, x0, #0x8b0
   2cb60:	ldr	x1, [x1, #4024]
   2cb64:	ldr	x1, [x1]
   2cb68:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2cb6c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2cb70:	add	x1, x1, #0xc0
   2cb74:	add	x0, x24, #0xbf8
   2cb78:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2cb7c:	mov	x0, x19
   2cb80:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
   2cb84:	ldr	x23, [x23, #4056]
   2cb88:	ldrb	w0, [x23, #60]
   2cb8c:	cbz	w0, 2cbd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43b0>
   2cb90:	ldr	w0, [x19, #8]
   2cb94:	cbz	w0, 2cc78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4450>
   2cb98:	ldr	x0, [x19]
   2cb9c:	ldr	x20, [x0]
   2cba0:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2cba4:	sub	x20, x20, #0x4
   2cba8:	mov	x1, x20
   2cbac:	bl	2aa50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2cbb0:	ldrb	w1, [x23, #60]
   2cbb4:	mov	x20, x0
   2cbb8:	cbz	w1, 2cbd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43a8>
   2cbbc:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2cbc0:	add	x1, x20, #0x8
   2cbc4:	add	x0, x0, #0x8a0
   2cbc8:	mov	x2, #0x0                   	// #0
   2cbcc:	bl	2c670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e48>
   2cbd0:	mov	x0, x20
   2cbd4:	bl	29160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   2cbd8:	mov	x1, x21
   2cbdc:	mov	x0, x19
   2cbe0:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2cbe4:	dmb	ish
   2cbe8:	add	x0, x22, #0xd18
   2cbec:	strb	wzr, [x0, #8]
   2cbf0:	str	xzr, [x22, #3352]
   2cbf4:	ldp	x19, x20, [sp, #16]
   2cbf8:	ldp	x21, x22, [sp, #32]
   2cbfc:	ldp	x23, x24, [sp, #48]
   2cc00:	ldr	x25, [sp, #64]
   2cc04:	ldp	x29, x30, [sp], #96
   2cc08:	ret
   2cc0c:	mov	x2, x20
   2cc10:	mov	x0, x19
   2cc14:	mov	w7, #0x0                   	// #0
   2cc18:	mov	x6, #0x0                   	// #0
   2cc1c:	mov	x5, #0x0                   	// #0
   2cc20:	mov	x4, #0x0                   	// #0
   2cc24:	mov	x3, #0x0                   	// #0
   2cc28:	mov	w1, #0x100                 	// #256
   2cc2c:	bl	28300 <__sanitizer_cov_dump@@Base+0x17a0>
   2cc30:	cbnz	w24, 2cb40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4318>
   2cc34:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2cc38:	add	x20, x1, #0x328
   2cc3c:	mov	x1, x20
   2cc40:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2cc44:	add	x0, x24, #0xbf8
   2cc48:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2cc4c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2cc50:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2cc54:	add	x0, x0, #0x8b0
   2cc58:	ldr	x1, [x1, #4024]
   2cc5c:	ldr	x1, [x1]
   2cc60:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2cc64:	mov	x1, x20
   2cc68:	b	2cb74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x434c>
   2cc6c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2cc70:	str	x0, [x19]
   2cc74:	b	2ca88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4260>
   2cc78:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2cc7c:	mov	x1, #0x0                   	// #0
   2cc80:	add	x0, x0, #0x8a0
   2cc84:	bl	15110 <__sanitizer_report_error_summary@@Base+0x10>
   2cc88:	b	2cbd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43b0>
   2cc8c:	ldr	x23, [x23, #4016]
   2cc90:	ldr	x0, [x23]
   2cc94:	cbz	x0, 2ccf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44d0>
   2cc98:	sub	x1, x0, #0x1
   2cc9c:	tst	x1, x0
   2cca0:	b.ne	2cce8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44c0>  // b.any
   2cca4:	add	x23, x0, #0x817
   2cca8:	neg	x0, x0
   2ccac:	and	x23, x23, x0
   2ccb0:	add	x1, x25, #0xb50
   2ccb4:	mov	x0, x23
   2ccb8:	mov	w2, #0x0                   	// #0
   2ccbc:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2ccc0:	mov	x25, x0
   2ccc4:	mov	x2, #0x0                   	// #0
   2ccc8:	mov	x1, x19
   2cccc:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2ccd0:	mov	x1, x21
   2ccd4:	mov	x0, x19
   2ccd8:	mov	x21, x23
   2ccdc:	mov	x19, x25
   2cce0:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2cce4:	b	2cad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42b0>
   2cce8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2ccec:	add	x0, x0, #0xb38
   2ccf0:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2ccf4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2ccf8:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2ccfc:	str	x0, [x23]
   2cd00:	b	2cc98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4470>
   2cd04:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2cd08:	ldr	x0, [x0, #4024]
   2cd0c:	ldr	x19, [x0]
   2cd10:	mov	x0, x19
   2cd14:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   2cd18:	mov	x1, x0
   2cd1c:	mov	x0, x19
   2cd20:	bl	171b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ee0>
   2cd24:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2cd28:	mov	x1, #0x2b                  	// #43
   2cd2c:	add	x0, x0, #0xb90
   2cd30:	bl	171b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ee0>
   2cd34:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2cd38:	ldr	x0, [x0, #4056]
   2cd3c:	ldr	w0, [x0, #224]
   2cd40:	bl	1c2e0 <__sanitizer_set_report_fd@@Base+0x4520>
   2cd44:	nop
   2cd48:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2cd4c:	stp	x19, x30, [sp, #-16]!
   2cd50:	ldr	x0, [x0, #4024]
   2cd54:	ldr	x19, [x0]
   2cd58:	mov	x0, x19
   2cd5c:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   2cd60:	mov	x1, x0
   2cd64:	mov	x0, x19
   2cd68:	bl	171b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ee0>
   2cd6c:	ldp	x19, x30, [sp], #16
   2cd70:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2cd74:	add	x0, x0, #0xb90
   2cd78:	mov	x1, #0xe                   	// #14
   2cd7c:	add	x0, x0, #0x30
   2cd80:	b	171b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ee0>
   2cd84:	nop
   2cd88:	stp	x19, x20, [sp, #-272]!
   2cd8c:	mov	x19, x0
   2cd90:	stp	x21, x22, [sp, #16]
   2cd94:	mov	w21, w1
   2cd98:	mov	x22, x2
   2cd9c:	stp	x23, x24, [sp, #32]
   2cda0:	mov	x23, x3
   2cda4:	stp	x25, x26, [sp, #48]
   2cda8:	stp	x27, x28, [sp, #64]
   2cdac:	str	x30, [sp, #80]
   2cdb0:	bl	24a00 <__sanitizer_sandbox_on_notify@@Base+0x1478>
   2cdb4:	tst	w0, #0xff
   2cdb8:	b.eq	2cf44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x471c>  // b.none
   2cdbc:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2cdc0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2cdc4:	add	x1, x1, #0x898
   2cdc8:	ldr	x0, [x20, #4056]
   2cdcc:	ldr	x24, [x0, #112]
   2cdd0:	mov	x0, x24
   2cdd4:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2cdd8:	cbnz	w0, 2d3a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b78>
   2cddc:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2cde0:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2cde4:	add	x0, x24, #0xbf8
   2cde8:	add	x1, x1, #0x658
   2cdec:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2cdf0:	adrp	x26, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2cdf4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2cdf8:	add	x2, x26, #0xb90
   2cdfc:	ldp	x3, x4, [x19, #16]
   2ce00:	mov	w7, w21
   2ce04:	ldr	x0, [x0, #4024]
   2ce08:	add	x2, x2, #0x40
   2ce0c:	ldp	x6, x5, [x19, #32]
   2ce10:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2ce14:	ldr	x1, [x0]
   2ce18:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ce1c:	add	x0, x0, #0x8e8
   2ce20:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2ce24:	add	x0, x24, #0xbf8
   2ce28:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2ce2c:	add	x1, x1, #0xc0
   2ce30:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2ce34:	ldr	x21, [x25, #4016]
   2ce38:	ldr	x0, [x21]
   2ce3c:	cbz	x0, 2d418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bf0>
   2ce40:	sub	x1, x0, #0x1
   2ce44:	tst	x1, x0
   2ce48:	b.ne	2d4e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc0>  // b.any
   2ce4c:	add	x24, x0, #0x817
   2ce50:	neg	x0, x0
   2ce54:	and	x24, x24, x0
   2ce58:	mov	w2, #0x0                   	// #0
   2ce5c:	mov	x0, x24
   2ce60:	adrp	x28, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2ce64:	add	x1, x28, #0xb50
   2ce68:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2ce6c:	mov	x2, #0x0                   	// #0
   2ce70:	mov	x1, #0x0                   	// #0
   2ce74:	mov	x21, x0
   2ce78:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2ce7c:	mov	x1, #0x0                   	// #0
   2ce80:	mov	x0, #0x0                   	// #0
   2ce84:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2ce88:	cmp	x24, #0x817
   2ce8c:	b.ls	2d600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dd8>  // b.plast
   2ce90:	mov	x2, #0x818                 	// #2072
   2ce94:	mov	w1, #0x0                   	// #0
   2ce98:	mov	x0, x21
   2ce9c:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   2cea0:	mov	x1, x23
   2cea4:	mov	x2, x21
   2cea8:	add	x0, x21, #0x10
   2ceac:	str	x0, [x21]
   2ceb0:	str	xzr, [x21, #8]
   2ceb4:	mov	x0, x19
   2ceb8:	str	xzr, [x21, #2064]
   2cebc:	blr	x22
   2cec0:	mov	x0, x21
   2cec4:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
   2cec8:	ldr	x20, [x20, #4056]
   2cecc:	ldrb	w0, [x20, #60]
   2ced0:	cbz	w0, 2cf1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x46f4>
   2ced4:	ldr	w0, [x21, #8]
   2ced8:	cbz	w0, 2d458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c30>
   2cedc:	ldr	x0, [x21]
   2cee0:	ldr	x19, [x0]
   2cee4:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2cee8:	sub	x19, x19, #0x4
   2ceec:	mov	x1, x19
   2cef0:	bl	2aa50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2cef4:	ldrb	w1, [x20, #60]
   2cef8:	mov	x19, x0
   2cefc:	cbz	w1, 2cf14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46ec>
   2cf00:	add	x0, x26, #0xb90
   2cf04:	add	x1, x19, #0x8
   2cf08:	add	x0, x0, #0x40
   2cf0c:	mov	x2, #0x0                   	// #0
   2cf10:	bl	2c670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e48>
   2cf14:	mov	x0, x19
   2cf18:	bl	29160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   2cf1c:	mov	x1, x24
   2cf20:	mov	x0, x21
   2cf24:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2cf28:	ldp	x21, x22, [sp, #16]
   2cf2c:	ldp	x23, x24, [sp, #32]
   2cf30:	ldp	x25, x26, [sp, #48]
   2cf34:	ldp	x27, x28, [sp, #64]
   2cf38:	ldr	x30, [sp, #80]
   2cf3c:	ldp	x19, x20, [sp], #272
   2cf40:	ret
   2cf44:	bl	2c890 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   2cf48:	ands	w20, w0, #0xff
   2cf4c:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2cf50:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2cf54:	add	x1, x1, #0x328
   2cf58:	add	x0, x0, #0x658
   2cf5c:	csel	x1, x0, x1, ne  // ne = any
   2cf60:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2cf64:	add	x0, x24, #0xbf8
   2cf68:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2cf6c:	mov	x0, x19
   2cf70:	bl	1e158 <__sanitizer_set_report_fd@@Base+0x6398>
   2cf74:	str	x0, [sp, #104]
   2cf78:	ldrb	w1, [x19, #48]
   2cf7c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2cf80:	cbz	w1, 2d424 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bfc>
   2cf84:	mov	x1, x0
   2cf88:	ldrb	w2, [x19, #56]
   2cf8c:	str	x1, [sp, #128]
   2cf90:	ldp	x0, x5, [x19, #24]
   2cf94:	ldr	x1, [x1, #4024]
   2cf98:	ldr	x4, [x19, #40]
   2cf9c:	ldr	x1, [x1]
   2cfa0:	cbz	w2, 2d4cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ca4>
   2cfa4:	ldr	x3, [x19, #16]
   2cfa8:	mov	x6, x5
   2cfac:	ldr	x2, [sp, #104]
   2cfb0:	mov	x5, x4
   2cfb4:	mov	w7, w21
   2cfb8:	mov	x4, x0
   2cfbc:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2cfc0:	add	x0, x0, #0x960
   2cfc4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2cfc8:	cmp	w20, #0x0
   2cfcc:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2cfd0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2cfd4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2cfd8:	add	x1, x1, #0x328
   2cfdc:	add	x0, x0, #0xc0
   2cfe0:	csel	x1, x0, x1, ne  // ne = any
   2cfe4:	add	x0, x24, #0xbf8
   2cfe8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2cfec:	ldr	x20, [x25, #4016]
   2cff0:	ldr	x21, [x19, #24]
   2cff4:	ldr	x0, [x20]
   2cff8:	cbz	x0, 2d4b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c8c>
   2cffc:	cmp	x0, x21
   2d000:	b.hi	2d4a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c7c>  // b.pmore
   2d004:	ldrb	w0, [x19, #48]
   2d008:	cbz	w0, 2d068 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4840>
   2d00c:	ldr	w0, [x19, #52]
   2d010:	cmp	w0, #0x2
   2d014:	b.eq	2d44c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c24>  // b.none
   2d018:	cmp	w0, #0x1
   2d01c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2d020:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d024:	add	x1, x1, #0xa70
   2d028:	add	x0, x0, #0x8e0
   2d02c:	csel	x1, x1, x0, eq  // eq = none
   2d030:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d034:	add	x0, x0, #0x9c8
   2d038:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2d03c:	ldrb	w0, [x19, #56]
   2d040:	cbz	w0, 2d4f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cd0>
   2d044:	ldr	x20, [x25, #4016]
   2d048:	ldr	x21, [x19, #16]
   2d04c:	ldr	x0, [x20]
   2d050:	cbz	x0, 2d570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d48>
   2d054:	cmp	x21, x0
   2d058:	b.cs	2d068 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4840>  // b.hs, b.nlast
   2d05c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d060:	add	x0, x0, #0xaa0
   2d064:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2d068:	add	x27, sp, #0xa0
   2d06c:	adrp	x21, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d070:	add	x26, sp, #0xc0
   2d074:	add	x21, x21, #0xac8
   2d078:	mov	x0, x27
   2d07c:	mov	w1, #0x1                   	// #1
   2d080:	ldr	x20, [x19, #24]
   2d084:	bl	1fee0 <__sanitizer_on_print@@Base+0x680>
   2d088:	stp	xzr, xzr, [sp, #216]
   2d08c:	str	xzr, [sp, #264]
   2d090:	mov	x1, x26
   2d094:	mov	x0, x27
   2d098:	bl	20750 <__sanitizer_on_print@@Base+0xef0>
   2d09c:	tst	w0, #0xff
   2d0a0:	b.eq	2d0e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48b8>  // b.none
   2d0a4:	ldr	x0, [sp, #192]
   2d0a8:	cmp	x20, x0
   2d0ac:	b.cc	2d090 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4868>  // b.lo, b.ul, b.last
   2d0b0:	ldr	x0, [sp, #200]
   2d0b4:	cmp	x20, x0
   2d0b8:	b.cs	2d090 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4868>  // b.hs, b.nlast
   2d0bc:	ldr	x0, [sp, #232]
   2d0c0:	tbnz	w0, #2, 2d090 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4868>
   2d0c4:	mov	x0, x21
   2d0c8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2d0cc:	mov	x1, x26
   2d0d0:	mov	x0, x27
   2d0d4:	bl	20750 <__sanitizer_on_print@@Base+0xef0>
   2d0d8:	tst	w0, #0xff
   2d0dc:	b.ne	2d0a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x487c>  // b.any
   2d0e0:	mov	x0, x27
   2d0e4:	bl	20010 <__sanitizer_on_print@@Base+0x7b0>
   2d0e8:	ldr	x20, [x25, #4016]
   2d0ec:	ldr	x0, [x20]
   2d0f0:	cbz	x0, 2d4c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c98>
   2d0f4:	sub	x1, x0, #0x1
   2d0f8:	tst	x1, x0
   2d0fc:	b.ne	2d4e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc0>  // b.any
   2d100:	add	x27, x0, #0x817
   2d104:	neg	x0, x0
   2d108:	and	x27, x27, x0
   2d10c:	mov	w2, #0x0                   	// #0
   2d110:	mov	x0, x27
   2d114:	adrp	x28, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2d118:	add	x1, x28, #0xb50
   2d11c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2d120:	mov	x2, #0x0                   	// #0
   2d124:	mov	x1, #0x0                   	// #0
   2d128:	mov	x21, x0
   2d12c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2d130:	mov	x1, #0x0                   	// #0
   2d134:	mov	x0, #0x0                   	// #0
   2d138:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d13c:	cmp	x27, #0x817
   2d140:	b.ls	2d65c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e34>  // b.plast
   2d144:	mov	x2, #0x818                 	// #2072
   2d148:	mov	w1, #0x0                   	// #0
   2d14c:	mov	x0, x21
   2d150:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   2d154:	mov	x1, x23
   2d158:	mov	x2, x21
   2d15c:	add	x0, x21, #0x10
   2d160:	str	x0, [x21]
   2d164:	str	xzr, [x21, #8]
   2d168:	mov	x0, x19
   2d16c:	str	xzr, [x21, #2064]
   2d170:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2d174:	blr	x22
   2d178:	mov	x0, x21
   2d17c:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
   2d180:	ldr	x0, [x20, #4056]
   2d184:	ldrb	w0, [x0, #240]
   2d188:	cbz	w0, 2d304 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4adc>
   2d18c:	ldr	x23, [x25, #4016]
   2d190:	ldr	x22, [x19, #24]
   2d194:	ldr	x0, [x23]
   2d198:	cbz	x0, 2d46c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c44>
   2d19c:	cmp	x22, x0
   2d1a0:	b.cc	2d304 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4adc>  // b.lo, b.ul, b.last
   2d1a4:	str	xzr, [sp, #192]
   2d1a8:	stp	xzr, xzr, [sp, #200]
   2d1ac:	sub	x1, x0, #0x1
   2d1b0:	tst	x1, x0
   2d1b4:	b.ne	2d4e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc0>  // b.any
   2d1b8:	add	x3, x0, #0x3ff
   2d1bc:	neg	x0, x0
   2d1c0:	and	x3, x3, x0
   2d1c4:	add	x1, x28, #0xb50
   2d1c8:	mov	x0, x3
   2d1cc:	mov	w2, #0x0                   	// #0
   2d1d0:	str	x3, [sp, #112]
   2d1d4:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2d1d8:	mov	x23, x0
   2d1dc:	ldr	x1, [sp, #192]
   2d1e0:	ldr	x2, [sp, #208]
   2d1e4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2d1e8:	ldp	x0, x1, [sp, #192]
   2d1ec:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d1f0:	ldr	x3, [sp, #112]
   2d1f4:	stp	x23, x3, [sp, #192]
   2d1f8:	ldr	x2, [sp, #208]
   2d1fc:	cmp	x2, #0x3ff
   2d200:	b.ls	2d5dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4db4>  // b.plast
   2d204:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2d208:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d20c:	add	x1, x1, #0xb08
   2d210:	ldr	q0, [x0, #1504]
   2d214:	mov	x0, x26
   2d218:	str	q0, [sp, #208]
   2d21c:	strb	wzr, [x23]
   2d220:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2d224:	mov	x0, x22
   2d228:	mov	x1, #0x10                  	// #16
   2d22c:	bl	24a98 <__sanitizer_sandbox_on_notify@@Base+0x1510>
   2d230:	tst	w0, #0xff
   2d234:	b.eq	2d6bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e94>  // b.none
   2d238:	ldr	x0, [x20, #4056]
   2d23c:	str	x0, [sp, #120]
   2d240:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2d244:	add	x0, x0, #0xe0
   2d248:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d24c:	add	x23, x1, #0x328
   2d250:	str	x0, [sp, #136]
   2d254:	add	x0, x22, #0x10
   2d258:	str	x0, [sp, #112]
   2d25c:	b	2d298 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a70>
   2d260:	ldr	x3, [sp, #136]
   2d264:	adrp	x6, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2d268:	asr	w4, w25, #4
   2d26c:	add	x6, x6, #0xc0
   2d270:	and	w5, w25, #0xf
   2d274:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d278:	mov	x2, x23
   2d27c:	add	x1, x0, #0xb30
   2d280:	mov	x0, x26
   2d284:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2d288:	add	x22, x22, #0x1
   2d28c:	ldr	x0, [sp, #112]
   2d290:	cmp	x22, x0
   2d294:	b.eq	2d2e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>  // b.none
   2d298:	ldr	x0, [sp, #120]
   2d29c:	ldrb	w25, [x22]
   2d2a0:	ldr	x28, [x0, #112]
   2d2a4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d2a8:	add	x1, x0, #0x898
   2d2ac:	mov	x0, x28
   2d2b0:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2d2b4:	cbz	w0, 2d260 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a38>
   2d2b8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2d2bc:	mov	x0, x28
   2d2c0:	add	x1, x1, #0xc18
   2d2c4:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2d2c8:	cbz	w0, 2d508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ce0>
   2d2cc:	asr	w4, w25, #4
   2d2d0:	and	w5, w25, #0xf
   2d2d4:	mov	x3, x23
   2d2d8:	mov	x6, x23
   2d2dc:	b	2d274 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a4c>
   2d2e0:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2d2e4:	mov	x0, x26
   2d2e8:	add	x1, x1, #0xf40
   2d2ec:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2d2f0:	ldr	x1, [sp, #192]
   2d2f4:	add	x0, x24, #0xbf8
   2d2f8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2d2fc:	ldp	x0, x1, [sp, #192]
   2d300:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d304:	ldr	x0, [x20, #4056]
   2d308:	ldrb	w0, [x0, #241]
   2d30c:	cbnz	w0, 2d440 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c18>
   2d310:	ldr	x0, [sp, #128]
   2d314:	ldr	x1, [x0, #4024]
   2d318:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d31c:	add	x0, x0, #0xb50
   2d320:	ldr	x1, [x1]
   2d324:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2d328:	ldr	x20, [x20, #4056]
   2d32c:	ldrb	w0, [x20, #60]
   2d330:	cbz	w0, 2d378 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b50>
   2d334:	ldr	w0, [x21, #8]
   2d338:	cbz	w0, 2d494 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c6c>
   2d33c:	ldr	x0, [x21]
   2d340:	ldr	x19, [x0]
   2d344:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2d348:	sub	x19, x19, #0x4
   2d34c:	mov	x1, x19
   2d350:	bl	2aa50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2d354:	ldrb	w1, [x20, #60]
   2d358:	mov	x19, x0
   2d35c:	cbz	w1, 2d370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b48>
   2d360:	add	x1, x0, #0x8
   2d364:	mov	x2, #0x0                   	// #0
   2d368:	ldr	x0, [sp, #104]
   2d36c:	bl	2c670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e48>
   2d370:	mov	x0, x19
   2d374:	bl	29160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   2d378:	mov	x1, x27
   2d37c:	mov	x0, x21
   2d380:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d384:	ldp	x21, x22, [sp, #16]
   2d388:	ldp	x23, x24, [sp, #32]
   2d38c:	ldp	x25, x26, [sp, #48]
   2d390:	ldp	x27, x28, [sp, #64]
   2d394:	ldr	x30, [sp, #80]
   2d398:	ldp	x19, x20, [sp], #272
   2d39c:	ret
   2d3a0:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2d3a4:	mov	x0, x24
   2d3a8:	add	x1, x1, #0xc18
   2d3ac:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   2d3b0:	cbz	w0, 2d57c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d54>
   2d3b4:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d3b8:	add	x25, x1, #0x328
   2d3bc:	mov	x1, x25
   2d3c0:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2d3c4:	add	x0, x24, #0xbf8
   2d3c8:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2d3cc:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2d3d0:	adrp	x26, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d3d4:	ldp	x3, x4, [x19, #16]
   2d3d8:	add	x2, x26, #0xb90
   2d3dc:	ldr	x0, [x0, #4024]
   2d3e0:	mov	w7, w21
   2d3e4:	ldp	x6, x5, [x19, #32]
   2d3e8:	add	x2, x2, #0x40
   2d3ec:	ldr	x1, [x0]
   2d3f0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d3f4:	add	x0, x0, #0x8e8
   2d3f8:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2d3fc:	mov	x1, x25
   2d400:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2d404:	add	x0, x24, #0xbf8
   2d408:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2d40c:	ldr	x21, [x25, #4016]
   2d410:	ldr	x0, [x21]
   2d414:	cbnz	x0, 2ce40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4618>
   2d418:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d41c:	str	x0, [x21]
   2d420:	b	2ce40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4618>
   2d424:	mov	x1, x0
   2d428:	str	x1, [sp, #128]
   2d42c:	ldp	x0, x5, [x19, #24]
   2d430:	ldr	x1, [x1, #4024]
   2d434:	ldr	x4, [x19, #40]
   2d438:	ldr	x1, [x1]
   2d43c:	b	2cfa4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x477c>
   2d440:	ldr	x0, [x19, #8]
   2d444:	bl	1d878 <__sanitizer_set_report_fd@@Base+0x5ab8>
   2d448:	b	2d310 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ae8>
   2d44c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2d450:	add	x1, x1, #0xa68
   2d454:	b	2d030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4808>
   2d458:	add	x0, x26, #0xb90
   2d45c:	mov	x1, #0x0                   	// #0
   2d460:	add	x0, x0, #0x40
   2d464:	bl	15110 <__sanitizer_report_error_summary@@Base+0x10>
   2d468:	b	2cf1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x46f4>
   2d46c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d470:	str	x0, [x23]
   2d474:	cmp	x22, x0
   2d478:	b.cc	2d304 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4adc>  // b.lo, b.ul, b.last
   2d47c:	str	xzr, [sp, #192]
   2d480:	stp	xzr, xzr, [sp, #200]
   2d484:	cbnz	x0, 2d1ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4984>
   2d488:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d48c:	str	x0, [x23]
   2d490:	b	2d1ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4984>
   2d494:	ldr	x0, [sp, #104]
   2d498:	mov	x1, #0x0                   	// #0
   2d49c:	bl	15110 <__sanitizer_report_error_summary@@Base+0x10>
   2d4a0:	b	2d378 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b50>
   2d4a4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d4a8:	add	x0, x0, #0x9a0
   2d4ac:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2d4b0:	b	2d004 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47dc>
   2d4b4:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d4b8:	str	x0, [x20]
   2d4bc:	b	2cffc <__sanitizer_get_module_and_offset_for_pc@@Base+0x47d4>
   2d4c0:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d4c4:	str	x0, [x20]
   2d4c8:	b	2d0f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48cc>
   2d4cc:	ldr	x2, [sp, #104]
   2d4d0:	mov	x3, x0
   2d4d4:	mov	w6, w21
   2d4d8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d4dc:	add	x0, x0, #0x920
   2d4e0:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2d4e4:	b	2cfc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47a0>
   2d4e8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2d4ec:	add	x0, x0, #0xb38
   2d4f0:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2d4f4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2d4f8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d4fc:	add	x0, x0, #0x9f8
   2d500:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2d504:	b	2d068 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4840>
   2d508:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2d50c:	mov	w3, #0x1                   	// #1
   2d510:	ldr	x0, [x1, #3928]
   2d514:	ldr	x2, [x0]
   2d518:	ldxrb	w0, [x2]
   2d51c:	stxrb	w4, w3, [x2]
   2d520:	cbnz	w4, 2d518 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cf0>
   2d524:	dmb	ish
   2d528:	tst	w0, #0xff
   2d52c:	b.eq	2d540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d18>  // b.none
   2d530:	mov	x0, x2
   2d534:	stp	x2, x1, [sp, #144]
   2d538:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   2d53c:	ldp	x2, x1, [sp, #144]
   2d540:	ldr	x0, [x1, #3928]
   2d544:	stp	x0, x2, [sp, #144]
   2d548:	bl	171f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f20>
   2d54c:	ldr	x0, [sp, #144]
   2d550:	ldr	w0, [x0, #8]
   2d554:	bl	24878 <__sanitizer_sandbox_on_notify@@Base+0x12f0>
   2d558:	dmb	ish
   2d55c:	and	w0, w0, #0xff
   2d560:	ldr	x2, [sp, #152]
   2d564:	strb	wzr, [x2]
   2d568:	cbnz	w0, 2d260 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a38>
   2d56c:	b	2d2cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4aa4>
   2d570:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d574:	str	x0, [x20]
   2d578:	b	2d054 <__sanitizer_get_module_and_offset_for_pc@@Base+0x482c>
   2d57c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2d580:	mov	w2, #0x1                   	// #1
   2d584:	ldr	x0, [x1, #3928]
   2d588:	ldr	x25, [x0]
   2d58c:	ldxrb	w0, [x25]
   2d590:	stxrb	w3, w2, [x25]
   2d594:	cbnz	w3, 2d58c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d64>
   2d598:	dmb	ish
   2d59c:	tst	w0, #0xff
   2d5a0:	b.eq	2d5b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d8c>  // b.none
   2d5a4:	mov	x0, x25
   2d5a8:	str	x1, [sp, #104]
   2d5ac:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   2d5b0:	ldr	x1, [sp, #104]
   2d5b4:	ldr	x24, [x1, #3928]
   2d5b8:	mov	x0, x24
   2d5bc:	bl	171f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f20>
   2d5c0:	ldr	w0, [x24, #8]
   2d5c4:	bl	24878 <__sanitizer_sandbox_on_notify@@Base+0x12f0>
   2d5c8:	dmb	ish
   2d5cc:	and	w0, w0, #0xff
   2d5d0:	strb	wzr, [x25]
   2d5d4:	cbnz	w0, 2cddc <__sanitizer_get_module_and_offset_for_pc@@Base+0x45b4>
   2d5d8:	b	2d3b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b8c>
   2d5dc:	cmp	x3, #0x3ff
   2d5e0:	b.ls	2d6e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ec0>  // b.plast
   2d5e4:	mov	x3, #0x400                 	// #1024
   2d5e8:	add	x0, x23, x2
   2d5ec:	mov	w1, #0x0                   	// #0
   2d5f0:	sub	x2, x3, x2
   2d5f4:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   2d5f8:	ldr	x23, [sp, #192]
   2d5fc:	b	2d204 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49dc>
   2d600:	ldr	x25, [x25, #4016]
   2d604:	ldr	x0, [x25]
   2d608:	cbz	x0, 2d6d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ea8>
   2d60c:	sub	x1, x0, #0x1
   2d610:	tst	x1, x0
   2d614:	b.ne	2d4e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc0>  // b.any
   2d618:	add	x25, x0, #0x817
   2d61c:	neg	x0, x0
   2d620:	and	x25, x25, x0
   2d624:	add	x1, x28, #0xb50
   2d628:	mov	x0, x25
   2d62c:	mov	w2, #0x0                   	// #0
   2d630:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2d634:	mov	x27, x0
   2d638:	mov	x2, #0x0                   	// #0
   2d63c:	mov	x1, x21
   2d640:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2d644:	mov	x1, x24
   2d648:	mov	x0, x21
   2d64c:	mov	x24, x25
   2d650:	mov	x21, x27
   2d654:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d658:	b	2ce90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4668>
   2d65c:	ldr	x20, [x25, #4016]
   2d660:	ldr	x0, [x20]
   2d664:	cbz	x0, 2d6dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb4>
   2d668:	sub	x1, x0, #0x1
   2d66c:	tst	x1, x0
   2d670:	b.ne	2d4e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc0>  // b.any
   2d674:	add	x20, x0, #0x817
   2d678:	neg	x0, x0
   2d67c:	and	x20, x20, x0
   2d680:	add	x1, x28, #0xb50
   2d684:	mov	x0, x20
   2d688:	mov	w2, #0x0                   	// #0
   2d68c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2d690:	str	x0, [sp, #112]
   2d694:	mov	x1, x21
   2d698:	mov	x2, #0x0                   	// #0
   2d69c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2d6a0:	ldr	x3, [sp, #112]
   2d6a4:	mov	x1, x27
   2d6a8:	mov	x0, x21
   2d6ac:	mov	x27, x20
   2d6b0:	mov	x21, x3
   2d6b4:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d6b8:	b	2d144 <__sanitizer_get_module_and_offset_for_pc@@Base+0x491c>
   2d6bc:	mov	x0, x26
   2d6c0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d6c4:	add	x1, x1, #0xb40
   2d6c8:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2d6cc:	b	2d2f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ac8>
   2d6d0:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d6d4:	str	x0, [x25]
   2d6d8:	b	2d60c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4de4>
   2d6dc:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d6e0:	str	x0, [x20]
   2d6e4:	b	2d668 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e40>
   2d6e8:	ldr	x25, [x25, #4016]
   2d6ec:	ldr	x0, [x25]
   2d6f0:	cbz	x0, 2d740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f18>
   2d6f4:	sub	x1, x0, #0x1
   2d6f8:	tst	x1, x0
   2d6fc:	b.ne	2d4e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc0>  // b.any
   2d700:	add	x25, x0, #0x3ff
   2d704:	neg	x0, x0
   2d708:	and	x25, x25, x0
   2d70c:	add	x1, x28, #0xb50
   2d710:	mov	w2, #0x0                   	// #0
   2d714:	mov	x0, x25
   2d718:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2d71c:	mov	x23, x0
   2d720:	ldr	x1, [sp, #192]
   2d724:	ldr	x2, [sp, #208]
   2d728:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2d72c:	ldp	x0, x1, [sp, #192]
   2d730:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d734:	stp	x23, x25, [sp, #192]
   2d738:	ldr	x2, [sp, #208]
   2d73c:	b	2d5e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dbc>
   2d740:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d744:	str	x0, [x25]
   2d748:	b	2d6f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ecc>
   2d74c:	nop
   2d750:	stp	x19, x20, [sp, #-32]!
   2d754:	adrp	x19, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2d758:	add	x19, x19, #0xd18
   2d75c:	str	x30, [sp, #16]
   2d760:	bl	244a0 <__sanitizer_sandbox_on_notify@@Base+0xf18>
   2d764:	mov	x20, x0
   2d768:	ldxr	x1, [x19]
   2d76c:	cbnz	x1, 2d778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f50>
   2d770:	stlxr	w0, x20, [x19]
   2d774:	cbnz	w0, 2d768 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f40>
   2d778:	dmb	ish
   2d77c:	cbz	x1, 2d798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f70>
   2d780:	cmp	x20, x1
   2d784:	b.eq	2d7d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fa8>  // b.none
   2d788:	bl	1c2d0 <__sanitizer_set_report_fd@@Base+0x4510>
   2d78c:	ldxr	x1, [x19]
   2d790:	cbz	x1, 2d770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f48>
   2d794:	b	2d778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f50>
   2d798:	add	x0, x19, #0x8
   2d79c:	mov	w2, #0x1                   	// #1
   2d7a0:	ldxrb	w1, [x0]
   2d7a4:	stxrb	w3, w2, [x0]
   2d7a8:	cbnz	w3, 2d7a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f78>
   2d7ac:	dmb	ish
   2d7b0:	tst	w1, #0xff
   2d7b4:	b.eq	2d7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f9c>  // b.none
   2d7b8:	ldr	x30, [sp, #16]
   2d7bc:	ldp	x19, x20, [sp], #32
   2d7c0:	b	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   2d7c4:	ldr	x30, [sp, #16]
   2d7c8:	ldp	x19, x20, [sp], #32
   2d7cc:	ret
   2d7d0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2d7d4:	ldr	x0, [x0, #4024]
   2d7d8:	ldr	x19, [x0]
   2d7dc:	mov	x0, x19
   2d7e0:	bl	1a5d0 <__sanitizer_set_report_fd@@Base+0x2810>
   2d7e4:	mov	x1, x0
   2d7e8:	mov	x0, x19
   2d7ec:	bl	171b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ee0>
   2d7f0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d7f4:	mov	x1, #0x2b                  	// #43
   2d7f8:	add	x0, x0, #0xb90
   2d7fc:	bl	171b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ee0>
   2d800:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2d804:	ldr	x0, [x0, #4056]
   2d808:	ldr	w0, [x0, #224]
   2d80c:	bl	1c2e0 <__sanitizer_set_report_fd@@Base+0x4520>
   2d810:	stp	x19, x20, [sp, #-144]!
   2d814:	mov	w20, w2
   2d818:	stp	x21, x22, [sp, #16]
   2d81c:	mov	x22, x4
   2d820:	mov	x21, x3
   2d824:	stp	x23, x24, [sp, #32]
   2d828:	mov	x23, x1
   2d82c:	mov	x24, x0
   2d830:	str	x30, [sp, #48]
   2d834:	bl	2cd48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4520>
   2d838:	add	x19, sp, #0x50
   2d83c:	add	x0, sp, #0x48
   2d840:	bl	2d750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>
   2d844:	stp	x24, x23, [sp, #80]
   2d848:	mov	x0, x19
   2d84c:	bl	1e120 <__sanitizer_set_report_fd@@Base+0x6360>
   2d850:	mov	x1, x0
   2d854:	mov	x0, x19
   2d858:	str	x1, [sp, #96]
   2d85c:	bl	1e130 <__sanitizer_set_report_fd@@Base+0x6370>
   2d860:	mov	w1, w0
   2d864:	mov	x0, x19
   2d868:	strb	w1, [sp, #128]
   2d86c:	bl	1d808 <__sanitizer_set_report_fd@@Base+0x5a48>
   2d870:	mov	w1, w0
   2d874:	mov	x0, x19
   2d878:	str	w1, [sp, #132]
   2d87c:	bl	1d850 <__sanitizer_set_report_fd@@Base+0x5a90>
   2d880:	mov	w1, w0
   2d884:	mov	x0, x19
   2d888:	strb	w1, [sp, #136]
   2d88c:	bl	1d880 <__sanitizer_set_report_fd@@Base+0x5ac0>
   2d890:	mov	x3, x22
   2d894:	mov	x2, x21
   2d898:	mov	w1, w20
   2d89c:	mov	x0, x19
   2d8a0:	bl	2cd88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4560>
   2d8a4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d8a8:	add	x0, x0, #0xb78
   2d8ac:	bl	1fbf8 <__sanitizer_on_print@@Base+0x398>
   2d8b0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2d8b4:	nop
   2d8b8:	dmb	ish
   2d8bc:	adrp	x0, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2d8c0:	add	x1, x0, #0xd18
   2d8c4:	strb	wzr, [x1, #8]
   2d8c8:	str	xzr, [x0, #3352]
   2d8cc:	ret
   2d8d0:	adrp	x0, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2d8d4:	add	x0, x0, #0xd18
   2d8d8:	ldrb	w3, [x0, #8]
   2d8dc:	and	x3, x3, #0xff
   2d8e0:	cmp	x3, #0x1
   2d8e4:	b.ne	2d8ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x50c4>  // b.any
   2d8e8:	ret
   2d8ec:	str	x30, [sp, #-16]!
   2d8f0:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2d8f4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2d8f8:	add	x2, x2, #0x9a0
   2d8fc:	add	x0, x0, #0x9d8
   2d900:	mov	x4, #0x1                   	// #1
   2d904:	mov	w1, #0x2b                  	// #43
   2d908:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2d90c:	nop
   2d910:	stp	x19, x20, [sp, #-32]!
   2d914:	mov	x19, x1
   2d918:	ldr	w4, [x1, #8]
   2d91c:	ldr	x1, [x1]
   2d920:	stp	x21, x30, [sp, #16]
   2d924:	ldr	w3, [x1, #8]
   2d928:	cmp	x3, x4
   2d92c:	b.cs	2d9a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x517c>  // b.hs, b.nlast
   2d930:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2d934:	bl	6490 <_Unwind_GetIP@plt>
   2d938:	mov	x20, x0
   2d93c:	ldr	x21, [x21, #4016]
   2d940:	ldr	x0, [x21]
   2d944:	cbz	x0, 2d984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x515c>
   2d948:	cmp	x20, x0
   2d94c:	b.cc	2d994 <__sanitizer_get_module_and_offset_for_pc@@Base+0x516c>  // b.lo, b.ul, b.last
   2d950:	ldr	x1, [x19]
   2d954:	ldr	w3, [x19, #8]
   2d958:	ldr	w0, [x1, #8]
   2d95c:	add	w2, w0, #0x1
   2d960:	str	w2, [x1, #8]
   2d964:	add	x0, x1, w0, uxtw #3
   2d968:	cmp	w2, w3
   2d96c:	str	x20, [x0, #16]
   2d970:	b.eq	2d994 <__sanitizer_get_module_and_offset_for_pc@@Base+0x516c>  // b.none
   2d974:	mov	w0, #0x0                   	// #0
   2d978:	ldp	x21, x30, [sp, #16]
   2d97c:	ldp	x19, x20, [sp], #32
   2d980:	ret
   2d984:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d988:	str	x0, [x21]
   2d98c:	cmp	x20, x0
   2d990:	b.cs	2d950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5128>  // b.hs, b.nlast
   2d994:	mov	w0, #0x4                   	// #4
   2d998:	ldp	x21, x30, [sp, #16]
   2d99c:	ldp	x19, x20, [sp], #32
   2d9a0:	ret
   2d9a4:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d9a8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2d9ac:	add	x2, x2, #0xbe0
   2d9b0:	add	x0, x0, #0xc10
   2d9b4:	mov	w1, #0x50                  	// #80
   2d9b8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2d9bc:	nop
   2d9c0:	stp	x19, x20, [sp, #-48]!
   2d9c4:	cmp	w2, #0x1
   2d9c8:	str	x30, [sp, #16]
   2d9cc:	b.ls	2da3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5214>  // b.plast
   2d9d0:	mov	x19, x0
   2d9d4:	add	w2, w2, #0x1
   2d9d8:	cmp	w2, #0x100
   2d9dc:	mov	x20, x1
   2d9e0:	mov	w1, #0x100                 	// #256
   2d9e4:	csel	w2, w2, w1, ls  // ls = plast
   2d9e8:	str	wzr, [x19, #8]
   2d9ec:	add	x1, sp, #0x20
   2d9f0:	adrp	x0, 2d000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47d8>
   2d9f4:	add	x0, x0, #0x910
   2d9f8:	str	x19, [sp, #32]
   2d9fc:	str	w2, [sp, #40]
   2da00:	bl	61b0 <_Unwind_Backtrace@plt>
   2da04:	mov	x1, x20
   2da08:	mov	x0, x19
   2da0c:	bl	27e30 <__sanitizer_cov_dump@@Base+0x12d0>
   2da10:	mov	x1, x0
   2da14:	cbnz	x0, 2da24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51fc>
   2da18:	ldr	w0, [x19, #8]
   2da1c:	cmp	w0, #0x1
   2da20:	cset	x1, hi  // hi = pmore
   2da24:	mov	x0, x19
   2da28:	bl	27d78 <__sanitizer_cov_dump@@Base+0x1218>
   2da2c:	ldr	x30, [sp, #16]
   2da30:	str	x20, [x19, #16]
   2da34:	ldp	x19, x20, [sp], #48
   2da38:	ret
   2da3c:	mov	w3, w2
   2da40:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2da44:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2da48:	add	x0, x0, #0xc10
   2da4c:	add	x2, x2, #0xdb8
   2da50:	mov	x4, #0x2                   	// #2
   2da54:	mov	w1, #0x7f                  	// #127
   2da58:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2da5c:	nop
   2da60:	stp	x19, x20, [sp, #-112]!
   2da64:	str	x30, [sp, #80]
   2da68:	cbz	x2, 2dc8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5464>
   2da6c:	stp	x21, x22, [sp, #16]
   2da70:	cmp	w3, #0x1
   2da74:	stp	x23, x24, [sp, #32]
   2da78:	mov	w24, w3
   2da7c:	b.ls	2dcbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5494>  // b.plast
   2da80:	adrp	x22, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2da84:	mov	x21, x0
   2da88:	mov	x20, x1
   2da8c:	add	x1, x22, #0xd28
   2da90:	ldr	x0, [x22, #3368]
   2da94:	cbz	x0, 2dd04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54dc>
   2da98:	ldr	x0, [x1, #8]
   2da9c:	stp	x25, x26, [sp, #48]
   2daa0:	mov	x19, x2
   2daa4:	stp	x27, x28, [sp, #64]
   2daa8:	blr	x0
   2daac:	mov	x23, x0
   2dab0:	cbz	x0, 2dce4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54bc>
   2dab4:	adrp	x26, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2dab8:	ldr	x20, [x26, #4016]
   2dabc:	ldr	x3, [x20]
   2dac0:	cbz	x3, 2dc64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x543c>
   2dac4:	sub	x0, x3, #0x1
   2dac8:	tst	x0, x3
   2dacc:	b.ne	2dc7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5454>  // b.any
   2dad0:	neg	x20, x3
   2dad4:	mov	x27, #0x17ff                	// #6143
   2dad8:	add	x3, x3, x27
   2dadc:	mov	w2, #0x0                   	// #0
   2dae0:	and	x20, x3, x20
   2dae4:	adrp	x28, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2dae8:	mov	x0, x20
   2daec:	add	x1, x28, #0xb50
   2daf0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2daf4:	mov	x25, x0
   2daf8:	mov	x2, #0x0                   	// #0
   2dafc:	mov	x1, #0x0                   	// #0
   2db00:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2db04:	mov	x1, #0x0                   	// #0
   2db08:	mov	x0, #0x0                   	// #0
   2db0c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2db10:	cmp	x20, x27
   2db14:	b.ls	2dd84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x555c>  // b.plast
   2db18:	mov	x2, #0x1800                	// #6144
   2db1c:	mov	w1, #0x0                   	// #0
   2db20:	mov	x0, x25
   2db24:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   2db28:	ldr	x6, [x22, #3368]
   2db2c:	add	x22, x22, #0xd28
   2db30:	mov	x1, x19
   2db34:	mov	x5, x24
   2db38:	mov	x3, x25
   2db3c:	mov	x2, x23
   2db40:	mov	x4, #0x0                   	// #0
   2db44:	mov	x0, #0x0                   	// #0
   2db48:	blr	x6
   2db4c:	mov	x19, x0
   2db50:	ldr	x1, [x22, #16]
   2db54:	mov	x0, x23
   2db58:	blr	x1
   2db5c:	tbnz	x19, #63, 2dc3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5414>
   2db60:	cmp	x19, #0x100
   2db64:	b.gt	2ddf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55c8>
   2db68:	str	wzr, [x21, #8]
   2db6c:	cmp	x19, #0x0
   2db70:	cbz	x19, 2dc3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5414>
   2db74:	add	x0, x19, x19, lsl #1
   2db78:	add	x1, x19, #0x2
   2db7c:	mov	x2, #0x8                   	// #8
   2db80:	mov	x3, #0x18                  	// #24
   2db84:	lsl	x0, x0, #3
   2db88:	lsl	x1, x1, #3
   2db8c:	sub	x0, x0, #0x10
   2db90:	csel	x1, x1, x3, gt
   2db94:	csel	x0, x0, x2, gt
   2db98:	add	x2, x21, #0x10
   2db9c:	add	x0, x25, x0
   2dba0:	add	x1, x21, x1
   2dba4:	cmp	x2, x0
   2dba8:	ccmp	x25, x1, #0x2, cc  // cc = lo, ul, last
   2dbac:	ccmp	x19, #0x7, #0x4, cs  // cs = hs, nlast
   2dbb0:	b.le	2dd60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5538>
   2dbb4:	cmp	x19, #0x0
   2dbb8:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dbbc:	csinc	x0, x19, xzr, gt
   2dbc0:	mov	x2, x25
   2dbc4:	sub	x0, x0, #0x1
   2dbc8:	mov	x1, x21
   2dbcc:	ldr	q0, [x3, #3280]
   2dbd0:	lsr	x3, x0, #1
   2dbd4:	add	x3, x21, x3, lsl #4
   2dbd8:	ld3	{v1.2d-v3.2d}, [x2], #48
   2dbdc:	add	v1.2d, v0.2d, v1.2d
   2dbe0:	str	q1, [x1, #16]!
   2dbe4:	cmp	x1, x3
   2dbe8:	b.ne	2dbd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53b0>  // b.any
   2dbec:	and	x0, x0, #0xfffffffffffffffe
   2dbf0:	add	x3, x0, #0x1
   2dbf4:	mov	w2, w0
   2dbf8:	add	x1, x0, x0, lsl #1
   2dbfc:	add	x2, x2, #0x2
   2dc00:	cmp	x19, x3
   2dc04:	add	w0, w0, #0x1
   2dc08:	lsl	x1, x1, #3
   2dc0c:	ldr	x3, [x25, x1]
   2dc10:	add	x3, x3, #0x2
   2dc14:	str	x3, [x21, x2, lsl #3]
   2dc18:	b.le	2dc30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5408>
   2dc1c:	add	x1, x25, x1
   2dc20:	add	x0, x21, w0, uxtw #3
   2dc24:	ldr	x1, [x1, #24]
   2dc28:	add	x1, x1, #0x2
   2dc2c:	str	x1, [x0, #16]
   2dc30:	cmp	x19, #0x0
   2dc34:	csinc	w19, w19, wzr, gt
   2dc38:	str	w19, [x21, #8]
   2dc3c:	mov	x0, x25
   2dc40:	mov	x1, x20
   2dc44:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2dc48:	ldp	x25, x26, [sp, #48]
   2dc4c:	ldp	x27, x28, [sp, #64]
   2dc50:	ldp	x21, x22, [sp, #16]
   2dc54:	ldp	x23, x24, [sp, #32]
   2dc58:	ldr	x30, [sp, #80]
   2dc5c:	ldp	x19, x20, [sp], #112
   2dc60:	ret
   2dc64:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2dc68:	mov	x3, x0
   2dc6c:	str	x0, [x20]
   2dc70:	sub	x0, x3, #0x1
   2dc74:	tst	x0, x3
   2dc78:	b.eq	2dad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52a8>  // b.none
   2dc7c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2dc80:	add	x0, x0, #0xb38
   2dc84:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2dc88:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2dc8c:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dc90:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dc94:	add	x2, x2, #0xc78
   2dc98:	add	x0, x0, #0xc10
   2dc9c:	mov	x4, #0x0                   	// #0
   2dca0:	mov	x3, #0x0                   	// #0
   2dca4:	mov	w1, #0x98                  	// #152
   2dca8:	stp	x21, x22, [sp, #16]
   2dcac:	stp	x23, x24, [sp, #32]
   2dcb0:	stp	x25, x26, [sp, #48]
   2dcb4:	stp	x27, x28, [sp, #64]
   2dcb8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2dcbc:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2dcc0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dcc4:	mov	x3, x24
   2dcc8:	add	x2, x2, #0xdb8
   2dccc:	add	x0, x0, #0xc10
   2dcd0:	mov	x4, #0x2                   	// #2
   2dcd4:	mov	w1, #0x99                  	// #153
   2dcd8:	stp	x25, x26, [sp, #48]
   2dcdc:	stp	x27, x28, [sp, #64]
   2dce0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2dce4:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dce8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dcec:	add	x2, x2, #0xc90
   2dcf0:	add	x0, x0, #0xc10
   2dcf4:	mov	x4, #0x0                   	// #0
   2dcf8:	mov	x3, #0x0                   	// #0
   2dcfc:	mov	w1, #0xa0                  	// #160
   2dd00:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2dd04:	add	w3, w3, #0x1
   2dd08:	mov	w1, #0x100                 	// #256
   2dd0c:	cmp	w3, #0x100
   2dd10:	str	wzr, [x21, #8]
   2dd14:	csel	w3, w3, w1, ls  // ls = plast
   2dd18:	adrp	x0, 2d000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47d8>
   2dd1c:	add	x1, sp, #0x60
   2dd20:	add	x0, x0, #0x910
   2dd24:	str	x21, [sp, #96]
   2dd28:	str	w3, [sp, #104]
   2dd2c:	bl	61b0 <_Unwind_Backtrace@plt>
   2dd30:	mov	x1, x20
   2dd34:	mov	x0, x21
   2dd38:	bl	27e30 <__sanitizer_cov_dump@@Base+0x12d0>
   2dd3c:	mov	x1, x0
   2dd40:	cbnz	x0, 2dd50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5528>
   2dd44:	ldr	w0, [x21, #8]
   2dd48:	cmp	w0, #0x1
   2dd4c:	cset	x1, hi  // hi = pmore
   2dd50:	mov	x0, x21
   2dd54:	bl	27d78 <__sanitizer_cov_dump@@Base+0x1218>
   2dd58:	str	x20, [x21, #16]
   2dd5c:	b	2dc50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5428>
   2dd60:	mov	x3, x25
   2dd64:	mov	x0, #0x0                   	// #0
   2dd68:	ldr	x1, [x3], #24
   2dd6c:	add	x1, x1, #0x2
   2dd70:	str	x1, [x2, x0, lsl #3]
   2dd74:	add	x0, x0, #0x1
   2dd78:	cmp	x19, x0
   2dd7c:	b.gt	2dd68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5540>
   2dd80:	b	2dc30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5408>
   2dd84:	ldr	x26, [x26, #4016]
   2dd88:	ldr	x0, [x26]
   2dd8c:	cbz	x0, 2dde4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55bc>
   2dd90:	sub	x1, x0, #0x1
   2dd94:	tst	x1, x0
   2dd98:	b.ne	2dc7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5454>  // b.any
   2dd9c:	mov	x1, #0x17ff                	// #6143
   2dda0:	add	x26, x0, x1
   2dda4:	neg	x0, x0
   2dda8:	add	x1, x28, #0xb50
   2ddac:	and	x26, x26, x0
   2ddb0:	mov	w2, #0x0                   	// #0
   2ddb4:	mov	x0, x26
   2ddb8:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2ddbc:	mov	x2, #0x0                   	// #0
   2ddc0:	mov	x27, x0
   2ddc4:	mov	x1, x25
   2ddc8:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2ddcc:	mov	x1, x20
   2ddd0:	mov	x0, x25
   2ddd4:	mov	x20, x26
   2ddd8:	mov	x25, x27
   2dddc:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2dde0:	b	2db18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52f0>
   2dde4:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2dde8:	str	x0, [x26]
   2ddec:	b	2dd90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5568>
   2ddf0:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ddf4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ddf8:	mov	x3, x19
   2ddfc:	add	x2, x2, #0xca0
   2de00:	add	x0, x0, #0xc10
   2de04:	mov	x4, #0x100                 	// #256
   2de08:	mov	w1, #0xa8                  	// #168
   2de0c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2de10:	cmp	w0, #0x1f
   2de14:	b.ls	2de3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5614>  // b.plast
   2de18:	str	x30, [sp, #-16]!
   2de1c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2de20:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2de24:	add	x2, x2, #0x38
   2de28:	add	x0, x0, #0x60
   2de2c:	mov	x4, #0x0                   	// #0
   2de30:	mov	x3, #0x0                   	// #0
   2de34:	mov	w1, #0x42                  	// #66
   2de38:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2de3c:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2de40:	add	x1, x1, #0x370
   2de44:	ldrb	w0, [x1, w0, uxtw]
   2de48:	adr	x1, 2de54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x562c>
   2de4c:	add	x0, x1, w0, sxtb #2
   2de50:	br	x0
   2de54:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2de58:	add	x0, x0, #0xd08
   2de5c:	ret
   2de60:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2de64:	add	x0, x0, #0x20
   2de68:	ret
   2de6c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2de70:	add	x0, x0, #0xf78
   2de74:	ret
   2de78:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2de7c:	add	x0, x0, #0xf60
   2de80:	ret
   2de84:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2de88:	add	x0, x0, #0xf50
   2de8c:	ret
   2de90:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2de94:	add	x0, x0, #0xf38
   2de98:	ret
   2de9c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dea0:	add	x0, x0, #0xf20
   2dea4:	ret
   2dea8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2deac:	add	x0, x0, #0xf08
   2deb0:	ret
   2deb4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2deb8:	add	x0, x0, #0xef0
   2debc:	ret
   2dec0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dec4:	add	x0, x0, #0xff0
   2dec8:	ret
   2decc:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ded0:	add	x0, x0, #0xfd8
   2ded4:	ret
   2ded8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dedc:	add	x0, x0, #0xfc0
   2dee0:	ret
   2dee4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dee8:	add	x0, x0, #0xfa8
   2deec:	ret
   2def0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2def4:	add	x0, x0, #0xce0
   2def8:	ret
   2defc:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2df00:	add	x0, x0, #0x8
   2df04:	ret
   2df08:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2df0c:	add	x0, x0, #0xcf0
   2df10:	ret
   2df14:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2df18:	add	x0, x0, #0xf90
   2df1c:	ret
   2df20:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2df24:	add	x0, x0, #0xd40
   2df28:	ret
   2df2c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2df30:	add	x0, x0, #0xd78
   2df34:	ret
   2df38:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2df3c:	add	x0, x0, #0xd60
   2df40:	ret
   2df44:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2df48:	add	x0, x0, #0xde0
   2df4c:	ret
   2df50:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2df54:	add	x0, x0, #0xdc8
   2df58:	ret
   2df5c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2df60:	add	x0, x0, #0xda8
   2df64:	ret
   2df68:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2df6c:	add	x0, x0, #0xd90
   2df70:	ret
   2df74:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2df78:	add	x0, x0, #0xd20
   2df7c:	ret
   2df80:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2df84:	add	x0, x0, #0xeb8
   2df88:	ret
   2df8c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2df90:	add	x0, x0, #0xe98
   2df94:	ret
   2df98:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2df9c:	add	x0, x0, #0xe70
   2dfa0:	ret
   2dfa4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dfa8:	add	x0, x0, #0xe48
   2dfac:	ret
   2dfb0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dfb4:	add	x0, x0, #0xe30
   2dfb8:	ret
   2dfbc:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dfc0:	add	x0, x0, #0xe18
   2dfc4:	ret
   2dfc8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2dfcc:	add	x0, x0, #0xe00
   2dfd0:	ret
   2dfd4:	nop
   2dfd8:	cbz	w2, 2e0c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x589c>
   2dfdc:	sub	w2, w2, #0x1
   2dfe0:	add	x3, x1, #0x58
   2dfe4:	mov	w5, #0x58                  	// #88
   2dfe8:	mov	x4, #0x0                   	// #0
   2dfec:	str	x30, [sp, #-16]!
   2dff0:	umaddl	x2, w2, w5, x3
   2dff4:	b	2e02c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5804>
   2dff8:	ldr	w3, [x4]
   2dffc:	ldr	x5, [x4, #24]
   2e000:	cmp	w3, #0x2
   2e004:	b.ne	2e084 <__sanitizer_get_module_and_offset_for_pc@@Base+0x585c>  // b.any
   2e008:	ldr	w3, [x1]
   2e00c:	ldr	x6, [x1, #24]
   2e010:	cmp	w3, #0x2
   2e014:	b.ne	2e0a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x587c>  // b.any
   2e018:	cmp	x5, x6
   2e01c:	csel	x4, x4, x1, ls  // ls = plast
   2e020:	add	x1, x1, #0x58
   2e024:	cmp	x1, x2
   2e028:	b.eq	2e058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5830>  // b.none
   2e02c:	ldr	w3, [x1, #40]
   2e030:	ldr	x5, [x1, #64]
   2e034:	cmp	w3, #0x2
   2e038:	b.ne	2e064 <__sanitizer_get_module_and_offset_for_pc@@Base+0x583c>  // b.any
   2e03c:	cmp	x5, x0
   2e040:	b.ls	2e020 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57f8>  // b.plast
   2e044:	cbnz	x4, 2dff8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57d0>
   2e048:	mov	x4, x1
   2e04c:	add	x1, x1, #0x58
   2e050:	cmp	x1, x2
   2e054:	b.ne	2e02c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5804>  // b.any
   2e058:	mov	x0, x4
   2e05c:	ldr	x30, [sp], #16
   2e060:	ret
   2e064:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e068:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e06c:	add	x2, x2, #0xa8
   2e070:	add	x0, x0, #0xc8
   2e074:	mov	x4, #0x0                   	// #0
   2e078:	mov	x3, #0x0                   	// #0
   2e07c:	mov	w1, #0x56                  	// #86
   2e080:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2e084:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e088:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e08c:	add	x2, x2, #0xa8
   2e090:	add	x0, x0, #0xc8
   2e094:	mov	x4, #0x0                   	// #0
   2e098:	mov	x3, #0x0                   	// #0
   2e09c:	mov	w1, #0x56                  	// #86
   2e0a0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2e0a4:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e0a8:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e0ac:	add	x2, x2, #0xa8
   2e0b0:	add	x0, x0, #0xc8
   2e0b4:	mov	x4, #0x0                   	// #0
   2e0b8:	mov	x3, #0x0                   	// #0
   2e0bc:	mov	w1, #0x56                  	// #86
   2e0c0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2e0c4:	mov	x4, #0x0                   	// #0
   2e0c8:	mov	x0, x4
   2e0cc:	ret
   2e0d0:	stp	x19, x20, [sp, #-112]!
   2e0d4:	mov	x20, x2
   2e0d8:	str	x30, [sp, #64]
   2e0dc:	ldrb	w2, [x1]
   2e0e0:	cbz	w2, 2e18c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5964>
   2e0e4:	mov	x19, x1
   2e0e8:	stp	x21, x22, [sp, #16]
   2e0ec:	adrp	x22, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e0f0:	mov	x21, x0
   2e0f4:	add	x22, x22, #0x118
   2e0f8:	stp	x23, x24, [sp, #32]
   2e0fc:	adrp	x23, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e100:	add	x24, sp, #0x50
   2e104:	add	x23, x23, #0x110
   2e108:	stp	x25, x26, [sp, #48]
   2e10c:	nop
   2e110:	cmp	w2, #0x25
   2e114:	add	x25, x19, #0x1
   2e118:	b.ne	2e1dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x59b4>  // b.any
   2e11c:	ldrb	w3, [x19, #1]
   2e120:	add	x19, x19, #0x2
   2e124:	ubfiz	x3, x3, #5, #8
   2e128:	sub	x3, x3, #0x600
   2e12c:	add	x26, x20, x3
   2e130:	ldr	w3, [x20, x3]
   2e134:	cmp	w3, #0x3
   2e138:	b.eq	2e220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59f8>  // b.none
   2e13c:	b.hi	2e1b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x598c>  // b.pmore
   2e140:	cmp	w3, #0x1
   2e144:	b.eq	2e1fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x59d4>  // b.none
   2e148:	cmp	w3, #0x2
   2e14c:	b.ne	2e198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5970>  // b.any
   2e150:	ldp	x2, x0, [x26, #16]
   2e154:	cbz	x0, 2e270 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a48>
   2e158:	mov	w5, w2
   2e15c:	lsr	x4, x2, #32
   2e160:	mov	w3, w0
   2e164:	lsr	x2, x0, #32
   2e168:	mov	x1, x22
   2e16c:	mov	x0, x21
   2e170:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e174:	nop
   2e178:	ldrb	w2, [x25, #1]
   2e17c:	cbnz	w2, 2e110 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58e8>
   2e180:	ldp	x21, x22, [sp, #16]
   2e184:	ldp	x23, x24, [sp, #32]
   2e188:	ldp	x25, x26, [sp, #48]
   2e18c:	ldr	x30, [sp, #64]
   2e190:	ldp	x19, x20, [sp], #112
   2e194:	ret
   2e198:	cbnz	w3, 2e178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e19c:	ldr	x2, [x26, #16]
   2e1a0:	mov	x0, x21
   2e1a4:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2e1a8:	add	x1, x1, #0xbf8
   2e1ac:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e1b0:	b	2e178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e1b4:	cmp	w3, #0x4
   2e1b8:	b.eq	2e240 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a18>  // b.none
   2e1bc:	cmp	w3, #0x5
   2e1c0:	b.ne	2e178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>  // b.any
   2e1c4:	ldr	x2, [x26, #16]
   2e1c8:	mov	x0, x21
   2e1cc:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2e1d0:	add	x1, x1, #0xbe0
   2e1d4:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e1d8:	b	2e178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e1dc:	mov	x0, x21
   2e1e0:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2e1e4:	add	x1, x1, #0xef8
   2e1e8:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e1ec:	mov	x0, x25
   2e1f0:	mov	x25, x19
   2e1f4:	mov	x19, x0
   2e1f8:	b	2e178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e1fc:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2e200:	ldr	x1, [x26, #16]
   2e204:	bl	29ca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1478>
   2e208:	mov	x2, x0
   2e20c:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e210:	mov	x0, x21
   2e214:	add	x1, x1, #0x108
   2e218:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e21c:	b	2e178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e220:	ldp	x2, x0, [x26, #16]
   2e224:	cmp	x2, #0x0
   2e228:	cinc	x1, x0, lt  // lt = tstop
   2e22c:	cbnz	x1, 2e158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5930>
   2e230:	mov	x1, x23
   2e234:	mov	x0, x21
   2e238:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e23c:	b	2e178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e240:	ldr	q0, [x26, #16]
   2e244:	mov	x0, x24
   2e248:	mov	x1, #0x20                  	// #32
   2e24c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e250:	add	x2, x2, #0x138
   2e254:	bl	6450 <snprintf@plt>
   2e258:	mov	x2, x24
   2e25c:	mov	x0, x21
   2e260:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2e264:	add	x1, x1, #0xbf8
   2e268:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e26c:	b	2e178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e270:	mov	x0, x21
   2e274:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e278:	add	x1, x1, #0x130
   2e27c:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e280:	b	2e178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e284:	nop
   2e288:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2e28c:	sub	sp, sp, #0x850
   2e290:	ldr	x4, [x4, #3704]
   2e294:	stp	x19, x20, [sp]
   2e298:	mov	x19, x0
   2e29c:	ldrb	w0, [x4, #1]
   2e2a0:	str	x30, [sp, #24]
   2e2a4:	cbnz	w0, 2e2b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a90>
   2e2a8:	ldp	x19, x20, [sp]
   2e2ac:	ldr	x30, [sp, #24]
   2e2b0:	add	sp, sp, #0x850
   2e2b4:	ret
   2e2b8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2e2bc:	mov	x20, x1
   2e2c0:	stp	xzr, xzr, [sp, #40]
   2e2c4:	ldr	x0, [x0, #4056]
   2e2c8:	str	xzr, [sp, #64]
   2e2cc:	str	xzr, [sp, #2120]
   2e2d0:	ldrb	w0, [x0, #33]
   2e2d4:	str	x21, [sp, #16]
   2e2d8:	add	x21, sp, #0x38
   2e2dc:	add	x1, x21, #0x10
   2e2e0:	str	x1, [sp, #56]
   2e2e4:	cbz	w0, 2e334 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b0c>
   2e2e8:	add	x2, sp, #0x30
   2e2ec:	add	x1, sp, #0x28
   2e2f0:	mov	w0, #0x0                   	// #0
   2e2f4:	bl	239d8 <__sanitizer_sandbox_on_notify@@Base+0x450>
   2e2f8:	ldp	x5, x6, [sp, #40]
   2e2fc:	mov	x3, x20
   2e300:	mov	x2, x19
   2e304:	mov	x0, x21
   2e308:	mov	w7, #0x1                   	// #1
   2e30c:	mov	x4, #0x0                   	// #0
   2e310:	mov	w1, #0x100                 	// #256
   2e314:	bl	28300 <__sanitizer_cov_dump@@Base+0x17a0>
   2e318:	mov	x0, x21
   2e31c:	bl	27e98 <__sanitizer_cov_dump@@Base+0x1338>
   2e320:	ldp	x19, x20, [sp]
   2e324:	ldr	x21, [sp, #16]
   2e328:	ldr	x30, [sp, #24]
   2e32c:	add	sp, sp, #0x850
   2e330:	ret
   2e334:	mov	x3, x20
   2e338:	mov	x2, x19
   2e33c:	mov	x0, x21
   2e340:	mov	w7, #0x0                   	// #0
   2e344:	mov	x6, #0x0                   	// #0
   2e348:	mov	x5, #0x0                   	// #0
   2e34c:	mov	x4, #0x0                   	// #0
   2e350:	mov	w1, #0x100                 	// #256
   2e354:	bl	28300 <__sanitizer_cov_dump@@Base+0x17a0>
   2e358:	b	2e318 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5af0>
   2e35c:	nop
   2e360:	stp	x19, x20, [sp, #-64]!
   2e364:	tst	w5, #0xff
   2e368:	mov	x19, x1
   2e36c:	str	x30, [sp, #32]
   2e370:	stp	xzr, xzr, [sp, #48]
   2e374:	b.eq	2e3c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ba0>  // b.none
   2e378:	mov	x20, x0
   2e37c:	add	x1, sp, #0x30
   2e380:	mov	w0, #0x0                   	// #0
   2e384:	stp	x21, x22, [sp, #16]
   2e388:	mov	x21, x2
   2e38c:	mov	x22, x3
   2e390:	add	x2, sp, #0x38
   2e394:	bl	239d8 <__sanitizer_sandbox_on_notify@@Base+0x450>
   2e398:	ldp	x5, x6, [sp, #48]
   2e39c:	mov	x3, x22
   2e3a0:	mov	x2, x21
   2e3a4:	mov	w1, w19
   2e3a8:	mov	x0, x20
   2e3ac:	mov	w7, #0x1                   	// #1
   2e3b0:	mov	x4, #0x0                   	// #0
   2e3b4:	bl	28300 <__sanitizer_cov_dump@@Base+0x17a0>
   2e3b8:	ldp	x21, x22, [sp, #16]
   2e3bc:	ldr	x30, [sp, #32]
   2e3c0:	ldp	x19, x20, [sp], #64
   2e3c4:	ret
   2e3c8:	mov	w7, #0x0                   	// #0
   2e3cc:	mov	x6, #0x0                   	// #0
   2e3d0:	mov	x5, #0x0                   	// #0
   2e3d4:	bl	28300 <__sanitizer_cov_dump@@Base+0x17a0>
   2e3d8:	ldr	x30, [sp, #32]
   2e3dc:	ldp	x19, x20, [sp], #64
   2e3e0:	ret
   2e3e4:	nop
   2e3e8:	stp	x19, x30, [sp, #-16]!
   2e3ec:	mov	x19, x0
   2e3f0:	bl	2f520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cf8>
   2e3f4:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2e3f8:	mov	x1, x19
   2e3fc:	ldp	x19, x30, [sp], #16
   2e400:	b	2aa50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2e404:	nop
   2e408:	ldr	w3, [x0, #320]
   2e40c:	cmp	w3, #0x8
   2e410:	b.eq	2e438 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c10>  // b.none
   2e414:	ubfiz	x4, x3, #5, #32
   2e418:	add	w3, w3, #0x1
   2e41c:	add	x4, x4, #0x40
   2e420:	str	w3, [x0, #320]
   2e424:	add	x3, x0, x4
   2e428:	add	x1, x1, #0x4
   2e42c:	str	wzr, [x0, x4]
   2e430:	str	x1, [x3, #16]
   2e434:	ret
   2e438:	str	x30, [sp, #-16]!
   2e43c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e440:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e444:	add	x2, x2, #0x140
   2e448:	add	x0, x0, #0xc8
   2e44c:	mov	x4, #0x0                   	// #0
   2e450:	mov	x3, #0x0                   	// #0
   2e454:	mov	w1, #0xc0                  	// #192
   2e458:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2e45c:	nop
   2e460:	stp	x19, x30, [sp, #-16]!
   2e464:	mov	x19, x0
   2e468:	ldr	x0, [x1]
   2e46c:	ldrh	w2, [x0]
   2e470:	cbz	w2, 2e4bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c94>
   2e474:	cmp	w2, #0x1
   2e478:	b.ne	2e544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d1c>  // b.any
   2e47c:	mov	x0, x1
   2e480:	bl	330f8 <__ubsan_get_current_report_data@@Base+0x390>
   2e484:	ldr	w0, [x19, #320]
   2e488:	cmp	w0, #0x8
   2e48c:	b.eq	2e580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d58>  // b.none
   2e490:	ubfiz	x1, x0, #5, #32
   2e494:	add	w0, w0, #0x1
   2e498:	add	x1, x1, #0x40
   2e49c:	str	w0, [x19, #320]
   2e4a0:	add	x0, x19, x1
   2e4a4:	mov	w2, #0x4                   	// #4
   2e4a8:	str	w2, [x19, x1]
   2e4ac:	str	q0, [x0, #16]
   2e4b0:	mov	x0, x19
   2e4b4:	ldp	x19, x30, [sp], #16
   2e4b8:	ret
   2e4bc:	ldrh	w0, [x0, #2]
   2e4c0:	tbz	w0, #0, 2e504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cdc>
   2e4c4:	mov	x0, x1
   2e4c8:	bl	32e68 <__ubsan_get_current_report_data@@Base+0x100>
   2e4cc:	ldr	w2, [x19, #320]
   2e4d0:	cmp	w2, #0x8
   2e4d4:	b.eq	2e580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d58>  // b.none
   2e4d8:	ubfiz	x3, x2, #5, #32
   2e4dc:	add	w2, w2, #0x1
   2e4e0:	add	x3, x3, #0x40
   2e4e4:	str	w2, [x19, #320]
   2e4e8:	add	x2, x19, x3
   2e4ec:	mov	w4, #0x3                   	// #3
   2e4f0:	str	w4, [x19, x3]
   2e4f4:	stp	x0, x1, [x2, #16]
   2e4f8:	mov	x0, x19
   2e4fc:	ldp	x19, x30, [sp], #16
   2e500:	ret
   2e504:	mov	x0, x1
   2e508:	bl	32f50 <__ubsan_get_current_report_data@@Base+0x1e8>
   2e50c:	ldr	w2, [x19, #320]
   2e510:	cmp	w2, #0x8
   2e514:	b.eq	2e580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d58>  // b.none
   2e518:	ubfiz	x3, x2, #5, #32
   2e51c:	add	w2, w2, #0x1
   2e520:	add	x3, x3, #0x40
   2e524:	str	w2, [x19, #320]
   2e528:	add	x2, x19, x3
   2e52c:	mov	w4, #0x2                   	// #2
   2e530:	str	w4, [x19, x3]
   2e534:	stp	x0, x1, [x2, #16]
   2e538:	mov	x0, x19
   2e53c:	ldp	x19, x30, [sp], #16
   2e540:	ret
   2e544:	ldr	w0, [x19, #320]
   2e548:	cmp	w0, #0x8
   2e54c:	b.eq	2e580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d58>  // b.none
   2e550:	ubfiz	x1, x0, #5, #32
   2e554:	add	w0, w0, #0x1
   2e558:	add	x1, x1, #0x40
   2e55c:	str	w0, [x19, #320]
   2e560:	add	x2, x19, x1
   2e564:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e568:	add	x0, x0, #0x160
   2e56c:	str	wzr, [x19, x1]
   2e570:	str	x0, [x2, #16]
   2e574:	mov	x0, x19
   2e578:	ldp	x19, x30, [sp], #16
   2e57c:	ret
   2e580:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e584:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e588:	add	x2, x2, #0x140
   2e58c:	add	x0, x0, #0xc8
   2e590:	mov	x4, #0x0                   	// #0
   2e594:	mov	x3, #0x0                   	// #0
   2e598:	mov	w1, #0xc0                  	// #192
   2e59c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2e5a0:	stp	x19, x20, [sp, #-208]!
   2e5a4:	stp	x27, x28, [sp, #64]
   2e5a8:	adrp	x27, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2e5ac:	stp	x21, x22, [sp, #16]
   2e5b0:	stp	x23, x24, [sp, #32]
   2e5b4:	mov	x24, x0
   2e5b8:	stp	x25, x26, [sp, #48]
   2e5bc:	str	x30, [sp, #80]
   2e5c0:	bl	2d8d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50a8>
   2e5c4:	bl	2c890 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   2e5c8:	and	w26, w0, #0xff
   2e5cc:	ldr	x19, [x27, #4016]
   2e5d0:	str	xzr, [sp, #128]
   2e5d4:	stp	xzr, xzr, [sp, #136]
   2e5d8:	ldr	x0, [x19]
   2e5dc:	cbz	x0, 2e810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fe8>
   2e5e0:	sub	x25, x0, #0x1
   2e5e4:	ands	x25, x25, x0
   2e5e8:	b.ne	2eb20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62f8>  // b.any
   2e5ec:	add	x19, x0, #0x3ff
   2e5f0:	neg	x0, x0
   2e5f4:	and	x19, x19, x0
   2e5f8:	mov	w2, #0x0                   	// #0
   2e5fc:	mov	x0, x19
   2e600:	adrp	x28, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2e604:	add	x1, x28, #0xb50
   2e608:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2e60c:	ldr	x1, [sp, #128]
   2e610:	mov	x20, x0
   2e614:	ldr	x2, [sp, #144]
   2e618:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2e61c:	ldp	x0, x1, [sp, #128]
   2e620:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2e624:	stp	x20, x19, [sp, #128]
   2e628:	ldr	x2, [sp, #144]
   2e62c:	cmp	x2, #0x3ff
   2e630:	b.hi	2e654 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e2c>  // b.pmore
   2e634:	cmp	x19, #0x3ff
   2e638:	b.ls	2eaa0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6278>  // b.plast
   2e63c:	mov	x3, #0x400                 	// #1024
   2e640:	add	x0, x20, x2
   2e644:	mov	w1, #0x0                   	// #0
   2e648:	sub	x2, x3, x2
   2e64c:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   2e650:	ldr	x20, [sp, #128]
   2e654:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2e658:	add	x19, x24, #0x40
   2e65c:	add	x22, sp, #0x80
   2e660:	ldr	q0, [x0, #1504]
   2e664:	str	q0, [sp, #144]
   2e668:	strb	wzr, [x20]
   2e66c:	ldr	w0, [x24, #40]
   2e670:	cbz	w0, 2e7c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f9c>
   2e674:	cmp	w26, #0x0
   2e678:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2e67c:	adrp	x20, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e680:	add	x1, x1, #0x328
   2e684:	add	x20, x20, #0x180
   2e688:	mov	x0, x22
   2e68c:	csel	x20, x20, x1, ne  // ne = any
   2e690:	mov	x1, x20
   2e694:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e698:	ldp	x2, x3, [x24, #16]
   2e69c:	stp	x2, x3, [sp, #176]
   2e6a0:	ldp	x0, x1, [x24]
   2e6a4:	stp	x0, x1, [sp, #160]
   2e6a8:	ldr	w0, [x24]
   2e6ac:	ldr	x2, [x24, #32]
   2e6b0:	str	x2, [sp, #192]
   2e6b4:	cmp	w0, #0x2
   2e6b8:	b.eq	2e86c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6044>  // b.none
   2e6bc:	b.hi	2e6d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5eb0>  // b.pmore
   2e6c0:	cbz	w0, 2e81c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ff4>
   2e6c4:	ldr	x1, [sp, #168]
   2e6c8:	cbz	x1, 2e81c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ff4>
   2e6cc:	ldp	w2, w3, [sp, #176]
   2e6d0:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2e6d4:	b	2e6f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ecc>
   2e6d8:	cmp	w0, #0x3
   2e6dc:	b.ne	2e708 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ee0>  // b.any
   2e6e0:	ldr	x1, [x2, #56]
   2e6e4:	add	x0, x2, #0x8
   2e6e8:	cbz	x1, 2eb30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6308>
   2e6ec:	ldp	w2, w3, [x0, #56]
   2e6f0:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2e6f4:	ldr	x4, [x4, #4056]
   2e6f8:	mov	x0, x22
   2e6fc:	ldr	x5, [x4, #24]
   2e700:	ldrb	w4, [x4, #189]
   2e704:	bl	289f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c8>
   2e708:	mov	x0, x22
   2e70c:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e710:	add	x1, x1, #0x1e8
   2e714:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e718:	ldr	w0, [x24, #40]
   2e71c:	cbz	w0, 2e844 <__sanitizer_get_module_and_offset_for_pc@@Base+0x601c>
   2e720:	cmp	w0, #0x1
   2e724:	b.ne	2e748 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f20>  // b.any
   2e728:	cbnz	w26, 2eb0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x62e4>
   2e72c:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2e730:	add	x2, x2, #0x328
   2e734:	mov	x3, x2
   2e738:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e73c:	mov	x0, x22
   2e740:	add	x1, x1, #0x208
   2e744:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e748:	ldr	x1, [x24, #48]
   2e74c:	mov	x2, x19
   2e750:	mov	x0, x22
   2e754:	adrp	x20, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2e758:	bl	2e0d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58a8>
   2e75c:	adrp	x4, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2e760:	cmp	w26, #0x0
   2e764:	add	x0, x4, #0x328
   2e768:	adrp	x4, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2e76c:	add	x4, x4, #0xc0
   2e770:	add	x1, x20, #0x730
   2e774:	csel	x21, x4, x0, ne  // ne = any
   2e778:	mov	x0, x22
   2e77c:	mov	x2, x21
   2e780:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e784:	ldr	x1, [sp, #128]
   2e788:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2e78c:	add	x0, x0, #0xbf8
   2e790:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2e794:	ldr	w0, [x24]
   2e798:	cmp	w0, #0x2
   2e79c:	b.eq	2e89c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6074>  // b.none
   2e7a0:	ldp	x0, x1, [sp, #128]
   2e7a4:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2e7a8:	ldp	x21, x22, [sp, #16]
   2e7ac:	ldp	x23, x24, [sp, #32]
   2e7b0:	ldp	x25, x26, [sp, #48]
   2e7b4:	ldp	x27, x28, [sp, #64]
   2e7b8:	ldr	x30, [sp, #80]
   2e7bc:	ldp	x19, x20, [sp], #208
   2e7c0:	ret
   2e7c4:	ldr	x1, [x24, #48]
   2e7c8:	mov	x2, x19
   2e7cc:	mov	x0, x22
   2e7d0:	bl	2e0d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58a8>
   2e7d4:	ldr	w0, [x24, #44]
   2e7d8:	bl	2de10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55e8>
   2e7dc:	mov	x1, x0
   2e7e0:	mov	x3, x22
   2e7e4:	add	x0, sp, #0xa0
   2e7e8:	mov	x2, x24
   2e7ec:	bl	32bc0 <__ubsan_on_report@@Base+0x8>
   2e7f0:	ldr	x0, [sp, #144]
   2e7f4:	ldr	x1, [sp, #128]
   2e7f8:	cbz	x0, 2eb58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6330>
   2e7fc:	strb	wzr, [x1]
   2e800:	str	xzr, [sp, #152]
   2e804:	ldp	x0, x1, [sp, #176]
   2e808:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2e80c:	b	2e674 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e4c>
   2e810:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2e814:	str	x0, [x19]
   2e818:	b	2e5e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5db8>
   2e81c:	mov	x0, x22
   2e820:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e824:	add	x1, x1, #0x160
   2e828:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e82c:	mov	x0, x22
   2e830:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e834:	add	x1, x1, #0x1e8
   2e838:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e83c:	ldr	w0, [x24, #40]
   2e840:	cbnz	w0, 2e720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ef8>
   2e844:	cbnz	w26, 2eaf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62d0>
   2e848:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2e84c:	add	x2, x2, #0x328
   2e850:	mov	x3, x2
   2e854:	mov	x4, x20
   2e858:	mov	x0, x22
   2e85c:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e860:	add	x1, x1, #0x1f0
   2e864:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e868:	b	2e748 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f20>
   2e86c:	ldr	x2, [x24, #24]
   2e870:	mov	x0, x22
   2e874:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2e878:	add	x1, x1, #0xbe0
   2e87c:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e880:	mov	x0, x22
   2e884:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2e888:	add	x1, x1, #0x1e8
   2e88c:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2e890:	ldr	w0, [x24, #40]
   2e894:	cbnz	w0, 2e720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ef8>
   2e898:	b	2e844 <__sanitizer_get_module_and_offset_for_pc@@Base+0x601c>
   2e89c:	ldr	x6, [x24, #24]
   2e8a0:	add	x0, x24, #0x148
   2e8a4:	str	x0, [sp, #96]
   2e8a8:	ldr	w22, [x24, #416]
   2e8ac:	cmp	x6, #0x3
   2e8b0:	b.ls	2ea78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6250>  // b.plast
   2e8b4:	cmn	x6, #0x5
   2e8b8:	sub	x25, x6, #0x4
   2e8bc:	mov	x2, #0xffffffffffffffff    	// #-1
   2e8c0:	b.ls	2ea78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6250>  // b.plast
   2e8c4:	cbz	w22, 2edd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65a8>
   2e8c8:	add	x24, x24, #0x1a0
   2e8cc:	sub	w3, w22, #0x1
   2e8d0:	mov	w0, #0x58                  	// #88
   2e8d4:	mov	x23, x25
   2e8d8:	ldr	x1, [sp, #96]
   2e8dc:	umaddl	x24, w3, w0, x24
   2e8e0:	ldr	w3, [x1]
   2e8e4:	ldr	x0, [x1, #24]
   2e8e8:	cmp	w3, #0x2
   2e8ec:	b.ne	2ea80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>  // b.any
   2e8f0:	ldr	w3, [x1, #40]
   2e8f4:	cmp	x23, x0
   2e8f8:	csel	x23, x23, x0, ls  // ls = plast
   2e8fc:	cmp	w3, #0x2
   2e900:	ldr	x0, [x1, #64]
   2e904:	b.ne	2ea80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>  // b.any
   2e908:	cmp	x2, x0
   2e90c:	add	x1, x1, #0x58
   2e910:	csel	x2, x2, x0, cs  // cs = hs, nlast
   2e914:	cmp	x24, x1
   2e918:	b.ne	2e8e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60b8>  // b.any
   2e91c:	sub	x0, x2, x23
   2e920:	cmp	x0, #0x20
   2e924:	b.ls	2e934 <__sanitizer_get_module_and_offset_for_pc@@Base+0x610c>  // b.plast
   2e928:	sub	x2, x2, #0x20
   2e92c:	cmp	x2, x25
   2e930:	csel	x23, x2, x25, ls  // ls = plast
   2e934:	cmn	x23, #0x21
   2e938:	add	x25, x23, #0x20
   2e93c:	mov	x1, #0x20                  	// #32
   2e940:	b.ls	2e94c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6124>  // b.plast
   2e944:	mvn	x1, x23
   2e948:	mov	x25, #0xffffffffffffffff    	// #-1
   2e94c:	mov	x0, x23
   2e950:	str	x6, [sp, #104]
   2e954:	bl	24a98 <__sanitizer_sandbox_on_notify@@Base+0x1510>
   2e958:	tst	w0, #0xff
   2e95c:	ldr	x6, [sp, #104]
   2e960:	b.eq	2ed58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6530>  // b.none
   2e964:	ldr	x24, [x27, #4016]
   2e968:	str	xzr, [sp, #160]
   2e96c:	stp	xzr, xzr, [sp, #168]
   2e970:	ldr	x0, [x24]
   2e974:	cbz	x0, 2edd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65b0>
   2e978:	str	x6, [sp, #104]
   2e97c:	sub	x1, x0, #0x1
   2e980:	tst	x1, x0
   2e984:	b.ne	2eb20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62f8>  // b.any
   2e988:	add	x3, x0, #0x3ff
   2e98c:	neg	x0, x0
   2e990:	and	x3, x3, x0
   2e994:	add	x1, x28, #0xb50
   2e998:	mov	x0, x3
   2e99c:	mov	w2, #0x0                   	// #0
   2e9a0:	str	x3, [sp, #112]
   2e9a4:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2e9a8:	mov	x24, x0
   2e9ac:	ldr	x1, [sp, #160]
   2e9b0:	ldr	x2, [sp, #176]
   2e9b4:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2e9b8:	ldp	x0, x1, [sp, #160]
   2e9bc:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2e9c0:	ldp	x6, x3, [sp, #104]
   2e9c4:	stp	x24, x3, [sp, #160]
   2e9c8:	ldr	x2, [sp, #176]
   2e9cc:	cmp	x2, #0x3ff
   2e9d0:	b.hi	2e9fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x61d4>  // b.pmore
   2e9d4:	cmp	x3, #0x3ff
   2e9d8:	b.ls	2ee08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65e0>  // b.plast
   2e9dc:	mov	x3, #0x400                 	// #1024
   2e9e0:	add	x0, x24, x2
   2e9e4:	mov	w1, #0x0                   	// #0
   2e9e8:	sub	x2, x3, x2
   2e9ec:	str	x6, [sp, #104]
   2e9f0:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   2e9f4:	ldr	x6, [sp, #104]
   2e9f8:	ldr	x24, [sp, #160]
   2e9fc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3458>
   2ea00:	cmp	x23, x25
   2ea04:	ldr	q0, [x0, #1504]
   2ea08:	str	q0, [sp, #176]
   2ea0c:	strb	wzr, [x24]
   2ea10:	b.eq	2ee70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6648>  // b.none
   2ea14:	adrp	x28, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2ea18:	add	x0, x28, #0x50
   2ea1c:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2ea20:	mov	x28, x23
   2ea24:	add	x27, x1, #0x238
   2ea28:	add	x24, sp, #0xa0
   2ea2c:	str	x0, [sp, #112]
   2ea30:	adrp	x0, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   2ea34:	add	x0, x0, #0xa68
   2ea38:	str	x0, [sp, #120]
   2ea3c:	b	2ea5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6234>
   2ea40:	ldr	x2, [sp, #120]
   2ea44:	mov	x1, x27
   2ea48:	mov	x0, x24
   2ea4c:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2ea50:	cmp	x25, x28
   2ea54:	ldr	x6, [sp, #104]
   2ea58:	b.eq	2eb9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6374>  // b.none
   2ea5c:	str	x6, [sp, #104]
   2ea60:	tst	x28, #0x7
   2ea64:	ldrb	w3, [x28]
   2ea68:	add	x28, x28, #0x1
   2ea6c:	b.ne	2ea40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6218>  // b.any
   2ea70:	ldr	x2, [sp, #112]
   2ea74:	b	2ea44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x621c>
   2ea78:	add	x2, x6, #0x4
   2ea7c:	b	2e8c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x609c>
   2ea80:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2ea84:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2ea88:	add	x2, x2, #0xa8
   2ea8c:	add	x0, x0, #0xc8
   2ea90:	mov	x4, #0x0                   	// #0
   2ea94:	mov	x3, #0x0                   	// #0
   2ea98:	mov	w1, #0x56                  	// #86
   2ea9c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2eaa0:	ldr	x19, [x27, #4016]
   2eaa4:	ldr	x0, [x19]
   2eaa8:	cbz	x0, 2eb90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6368>
   2eaac:	sub	x1, x0, #0x1
   2eab0:	tst	x1, x0
   2eab4:	b.ne	2eb20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62f8>  // b.any
   2eab8:	add	x19, x0, #0x3ff
   2eabc:	neg	x0, x0
   2eac0:	and	x19, x19, x0
   2eac4:	add	x1, x28, #0xb50
   2eac8:	mov	w2, #0x0                   	// #0
   2eacc:	mov	x0, x19
   2ead0:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2ead4:	mov	x20, x0
   2ead8:	ldr	x1, [sp, #128]
   2eadc:	ldr	x2, [sp, #144]
   2eae0:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2eae4:	ldp	x0, x1, [sp, #128]
   2eae8:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2eaec:	stp	x20, x19, [sp, #128]
   2eaf0:	ldr	x2, [sp, #144]
   2eaf4:	b	2e63c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e14>
   2eaf8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2eafc:	adrp	x3, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2eb00:	add	x2, x2, #0x658
   2eb04:	add	x3, x3, #0xc0
   2eb08:	b	2e854 <__sanitizer_get_module_and_offset_for_pc@@Base+0x602c>
   2eb0c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2eb10:	adrp	x3, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2eb14:	add	x2, x2, #0x170
   2eb18:	add	x3, x3, #0xc0
   2eb1c:	b	2e738 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f10>
   2eb20:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2eb24:	add	x0, x0, #0xb38
   2eb28:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2eb2c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2eb30:	ldr	x1, [x0, #8]
   2eb34:	cbz	x1, 2eb78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6350>
   2eb38:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2eb3c:	ldr	w3, [x0, #24]
   2eb40:	ldr	x2, [x0, #16]
   2eb44:	mov	x0, x22
   2eb48:	ldr	x4, [x4, #4056]
   2eb4c:	ldr	x4, [x4, #24]
   2eb50:	bl	28b00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d8>
   2eb54:	b	2e708 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ee0>
   2eb58:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2eb5c:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2eb60:	add	x2, x2, #0x58
   2eb64:	add	x0, x0, #0x188
   2eb68:	mov	x4, #0x0                   	// #0
   2eb6c:	mov	x3, #0x0                   	// #0
   2eb70:	mov	w1, #0x1c5                 	// #453
   2eb74:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2eb78:	ldr	x2, [x2, #8]
   2eb7c:	mov	x0, x22
   2eb80:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2eb84:	add	x1, x1, #0xbe0
   2eb88:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2eb8c:	b	2e708 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ee0>
   2eb90:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2eb94:	str	x0, [x19]
   2eb98:	b	2eaac <__sanitizer_get_module_and_offset_for_pc@@Base+0x6284>
   2eb9c:	mov	x0, x24
   2eba0:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2eba4:	add	x1, x1, #0xf40
   2eba8:	str	x6, [sp, #104]
   2ebac:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2ebb0:	mov	x27, x23
   2ebb4:	cmp	w26, #0x0
   2ebb8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2ebbc:	add	x2, x2, #0x80
   2ebc0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ebc4:	add	x1, x1, #0x328
   2ebc8:	mov	x0, x24
   2ebcc:	csel	x1, x2, x1, ne  // ne = any
   2ebd0:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2ebd4:	ldr	x1, [sp, #96]
   2ebd8:	mov	w2, w22
   2ebdc:	mov	x0, x23
   2ebe0:	bl	2dfd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57b0>
   2ebe4:	mov	x28, x0
   2ebe8:	ldr	x6, [sp, #104]
   2ebec:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2ebf0:	add	x0, x0, #0xef8
   2ebf4:	str	x0, [sp, #120]
   2ebf8:	cbz	x28, 2ed24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64fc>
   2ebfc:	ldr	w0, [x28, #40]
   2ec00:	ldr	x1, [x28, #64]
   2ec04:	cmp	w0, #0x2
   2ec08:	b.ne	2ea80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>  // b.any
   2ec0c:	cmp	x27, x1
   2ec10:	b.eq	2eda0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6578>  // b.none
   2ec14:	ldr	w0, [x28]
   2ec18:	ldr	x1, [x28, #24]
   2ec1c:	cmp	w0, #0x2
   2ec20:	b.ne	2ea80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>  // b.any
   2ec24:	cmp	x27, x1
   2ec28:	b.ls	2ed10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64e8>  // b.plast
   2ec2c:	mov	w26, #0x7e                  	// #126
   2ec30:	mov	w2, w26
   2ec34:	tst	x27, #0x7
   2ec38:	b.eq	2ed38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6510>  // b.none
   2ec3c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2ec40:	add	x1, x0, #0xef8
   2ec44:	mov	x0, x24
   2ec48:	stp	x1, x6, [sp, #104]
   2ec4c:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2ec50:	ldp	x1, x6, [sp, #104]
   2ec54:	cmp	x6, x27
   2ec58:	b.eq	2ed68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6540>  // b.none
   2ec5c:	mov	w2, w26
   2ec60:	mov	x0, x24
   2ec64:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2ec68:	add	x27, x27, #0x1
   2ec6c:	ldr	x1, [sp, #104]
   2ec70:	mov	w2, w26
   2ec74:	mov	x0, x24
   2ec78:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2ec7c:	cmp	x27, x25
   2ec80:	ldr	x6, [sp, #112]
   2ec84:	b.ne	2ebf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63d0>  // b.any
   2ec88:	add	x1, x20, #0x730
   2ec8c:	mov	w26, #0x0                   	// #0
   2ec90:	mov	x20, #0x0                   	// #0
   2ec94:	mov	x2, x21
   2ec98:	mov	x0, x24
   2ec9c:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2eca0:	cbz	x20, 2edec <__sanitizer_get_module_and_offset_for_pc@@Base+0x65c4>
   2eca4:	ldr	w0, [x20, #40]
   2eca8:	ldr	x1, [x20, #64]
   2ecac:	cmp	w0, #0x2
   2ecb0:	b.ne	2ea80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>  // b.any
   2ecb4:	cmp	x23, x1
   2ecb8:	b.eq	2edec <__sanitizer_get_module_and_offset_for_pc@@Base+0x65c4>  // b.none
   2ecbc:	tst	x23, #0x7
   2ecc0:	ldr	w1, [x20]
   2ecc4:	cset	w0, eq  // eq = none
   2ecc8:	add	w0, w0, #0x1
   2eccc:	cmp	w1, #0x2
   2ecd0:	add	w0, w26, w0
   2ecd4:	ldr	x1, [x20, #24]
   2ecd8:	b.ne	2ea80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>  // b.any
   2ecdc:	cmp	x23, x1
   2ece0:	b.eq	2eedc <__sanitizer_get_module_and_offset_for_pc@@Base+0x66b4>  // b.none
   2ece4:	add	x23, x23, #0x1
   2ece8:	add	w26, w0, #0x2
   2ecec:	cmp	x25, x23
   2ecf0:	b.ne	2eca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6478>  // b.any
   2ecf4:	ldr	x1, [sp, #160]
   2ecf8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2ecfc:	add	x0, x0, #0xbf8
   2ed00:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2ed04:	ldp	x0, x1, [sp, #160]
   2ed08:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2ed0c:	b	2e7a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f78>
   2ed10:	mov	w26, #0x20                  	// #32
   2ed14:	mov	w0, #0x7e                  	// #126
   2ed18:	csel	w2, w26, w26, cc  // cc = lo, ul, last
   2ed1c:	csel	w26, w26, w0, cc  // cc = lo, ul, last
   2ed20:	b	2ec34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640c>
   2ed24:	cmp	x6, x27
   2ed28:	b.cc	2ec88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6460>  // b.lo, b.ul, b.last
   2ed2c:	mov	w26, #0x20                  	// #32
   2ed30:	mov	w2, w26
   2ed34:	b	2ec34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640c>
   2ed38:	ldr	x1, [sp, #120]
   2ed3c:	mov	x0, x24
   2ed40:	str	w2, [sp, #104]
   2ed44:	str	x6, [sp, #112]
   2ed48:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2ed4c:	ldr	w2, [sp, #104]
   2ed50:	ldr	x6, [sp, #112]
   2ed54:	b	2ec3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6414>
   2ed58:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2ed5c:	add	x0, x0, #0x218
   2ed60:	bl	1fb70 <__sanitizer_on_print@@Base+0x310>
   2ed64:	b	2e7a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f78>
   2ed68:	mov	x0, x24
   2ed6c:	mov	w2, #0x5e                  	// #94
   2ed70:	stp	x1, x6, [sp, #104]
   2ed74:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2ed78:	mov	w2, w26
   2ed7c:	ldp	x1, x6, [sp, #104]
   2ed80:	mov	x0, x24
   2ed84:	str	x6, [sp, #104]
   2ed88:	add	x27, x6, #0x1
   2ed8c:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2ed90:	cmp	x25, x27
   2ed94:	ldr	x6, [sp, #104]
   2ed98:	b.ne	2ebf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63d0>  // b.any
   2ed9c:	b	2ec88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6460>
   2eda0:	ldr	x1, [sp, #96]
   2eda4:	mov	w2, w22
   2eda8:	mov	x0, x27
   2edac:	str	x6, [sp, #104]
   2edb0:	bl	2dfd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57b0>
   2edb4:	cmp	x0, #0x0
   2edb8:	ldr	x6, [sp, #104]
   2edbc:	mov	x28, x0
   2edc0:	ccmp	x6, x27, #0x2, eq  // eq = none
   2edc4:	b.cc	2ec88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6460>  // b.lo, b.ul, b.last
   2edc8:	cbnz	x0, 2ec14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63ec>
   2edcc:	b	2ed2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6504>
   2edd0:	mov	x23, x25
   2edd4:	b	2e91c <__sanitizer_get_module_and_offset_for_pc@@Base+0x60f4>
   2edd8:	str	x6, [sp, #104]
   2eddc:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2ede0:	str	x0, [x24]
   2ede4:	ldr	x6, [sp, #104]
   2ede8:	b	2e978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6150>
   2edec:	ldr	x1, [sp, #96]
   2edf0:	mov	w2, w22
   2edf4:	mov	x0, x23
   2edf8:	bl	2dfd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57b0>
   2edfc:	mov	x20, x0
   2ee00:	cbnz	x0, 2ecbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6494>
   2ee04:	b	2ecf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64cc>
   2ee08:	ldr	x24, [x27, #4016]
   2ee0c:	ldr	x0, [x24]
   2ee10:	cbz	x0, 2eebc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6694>
   2ee14:	ldr	x27, [x27, #4016]
   2ee18:	str	x6, [sp, #104]
   2ee1c:	ldr	x0, [x27]
   2ee20:	sub	x1, x0, #0x1
   2ee24:	tst	x1, x0
   2ee28:	b.ne	2eb20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62f8>  // b.any
   2ee2c:	add	x27, x0, #0x3ff
   2ee30:	neg	x0, x0
   2ee34:	and	x27, x27, x0
   2ee38:	add	x1, x28, #0xb50
   2ee3c:	mov	w2, #0x0                   	// #0
   2ee40:	mov	x0, x27
   2ee44:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   2ee48:	mov	x24, x0
   2ee4c:	ldr	x1, [sp, #160]
   2ee50:	ldr	x2, [sp, #176]
   2ee54:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   2ee58:	ldp	x0, x1, [sp, #160]
   2ee5c:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   2ee60:	stp	x24, x27, [sp, #160]
   2ee64:	ldr	x6, [sp, #104]
   2ee68:	ldr	x2, [sp, #176]
   2ee6c:	b	2e9dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b4>
   2ee70:	add	x24, sp, #0xa0
   2ee74:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2ee78:	mov	x0, x24
   2ee7c:	add	x1, x1, #0xf40
   2ee80:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2ee84:	cbnz	w26, 2eecc <__sanitizer_get_module_and_offset_for_pc@@Base+0x66a4>
   2ee88:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2ee8c:	mov	x0, x24
   2ee90:	add	x1, x1, #0x328
   2ee94:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2ee98:	ldr	x1, [sp, #96]
   2ee9c:	mov	w2, w22
   2eea0:	mov	x0, x23
   2eea4:	bl	2dfd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57b0>
   2eea8:	mov	x2, x21
   2eeac:	add	x1, x20, #0x730
   2eeb0:	mov	x0, x24
   2eeb4:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2eeb8:	b	2ecf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64cc>
   2eebc:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   2eec0:	str	x0, [x24]
   2eec4:	ldr	x6, [sp, #104]
   2eec8:	b	2ee14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65ec>
   2eecc:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   2eed0:	mov	x0, x24
   2eed4:	add	x1, x1, #0x80
   2eed8:	b	2ee94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x666c>
   2eedc:	adrp	x22, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4458>
   2eee0:	sub	w23, w0, #0x1
   2eee4:	add	x22, x22, #0xa68
   2eee8:	cbz	w0, 2ef04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66dc>
   2eeec:	sub	w23, w23, #0x1
   2eef0:	mov	x1, x22
   2eef4:	mov	x0, x24
   2eef8:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2eefc:	cmn	w23, #0x1
   2ef00:	b.ne	2eeec <__sanitizer_get_module_and_offset_for_pc@@Base+0x66c4>  // b.any
   2ef04:	ldr	x1, [x20, #80]
   2ef08:	mov	x2, x19
   2ef0c:	mov	x0, x24
   2ef10:	bl	2e0d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58a8>
   2ef14:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8458>
   2ef18:	add	x1, x0, #0xf40
   2ef1c:	mov	x0, x24
   2ef20:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   2ef24:	b	2ecf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64cc>
   2ef28:	b	2f520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cf8>
   2ef2c:	nop
   2ef30:	stp	x19, x20, [sp, #-48]!
   2ef34:	mov	x19, x0
   2ef38:	mov	x20, x2
   2ef3c:	stp	x21, x22, [sp, #16]
   2ef40:	mov	x21, x1
   2ef44:	mov	w22, w3
   2ef48:	str	x30, [sp, #32]
   2ef4c:	bl	2f520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cf8>
   2ef50:	add	x0, x19, #0x1
   2ef54:	bl	2d750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>
   2ef58:	ldp	x2, x3, [x21]
   2ef5c:	stp	x2, x3, [x19, #8]
   2ef60:	ldp	x2, x3, [x20]
   2ef64:	stp	x2, x3, [x19, #32]
   2ef68:	ldr	x1, [x21, #16]
   2ef6c:	ldp	x2, x3, [x20, #16]
   2ef70:	stp	x2, x3, [x19, #48]
   2ef74:	ldr	x30, [sp, #32]
   2ef78:	str	x1, [x19, #24]
   2ef7c:	ldr	x1, [x20, #32]
   2ef80:	str	w22, [x19, #72]
   2ef84:	ldp	x21, x22, [sp, #16]
   2ef88:	str	x1, [x19, #64]
   2ef8c:	ldp	x19, x20, [sp], #48
   2ef90:	ret
   2ef94:	nop
   2ef98:	stp	x19, x20, [sp, #-176]!
   2ef9c:	mov	x19, x0
   2efa0:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2efa4:	ldr	x0, [x0, #16]
   2efa8:	ldr	x1, [x19, #24]
   2efac:	str	x30, [sp, #48]
   2efb0:	bl	2e288 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a60>
   2efb4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2efb8:	ldr	w0, [x19, #72]
   2efbc:	ldp	x2, x3, [x19, #32]
   2efc0:	stp	x2, x3, [sp, #72]
   2efc4:	ldr	x1, [x1, #4056]
   2efc8:	ldp	x2, x3, [x19, #48]
   2efcc:	stp	x2, x3, [sp, #88]
   2efd0:	ldrb	w1, [x1, #60]
   2efd4:	cbz	w1, 2f01c <__sanitizer_get_module_and_offset_for_pc@@Base+0x67f4>
   2efd8:	ldr	x1, [x20, #3704]
   2efdc:	stp	x21, x22, [sp, #16]
   2efe0:	ldrb	w1, [x1, #16]
   2efe4:	cmp	w1, #0x0
   2efe8:	csel	w0, w0, wzr, ne  // ne = any
   2efec:	bl	2de10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55e8>
   2eff0:	ldr	w22, [x19, #32]
   2eff4:	mov	x21, x0
   2eff8:	cmp	w22, #0x1
   2effc:	b.eq	2f060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6838>  // b.none
   2f000:	cmp	w22, #0x3
   2f004:	b.eq	2f03c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6814>  // b.none
   2f008:	bl	2f458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c30>
   2f00c:	mov	x1, x0
   2f010:	mov	x0, x21
   2f014:	bl	15110 <__sanitizer_report_error_summary@@Base+0x10>
   2f018:	ldp	x21, x22, [sp, #16]
   2f01c:	ldr	x20, [x20, #3704]
   2f020:	ldrb	w0, [x20]
   2f024:	cbnz	w0, 2f0c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x689c>
   2f028:	add	x0, x19, #0x1
   2f02c:	bl	2d8b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5090>
   2f030:	ldr	x30, [sp, #48]
   2f034:	ldp	x19, x20, [sp], #176
   2f038:	ret
   2f03c:	ldr	x22, [x19, #64]
   2f040:	bl	2f458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c30>
   2f044:	mov	x2, x0
   2f048:	mov	x0, x21
   2f04c:	add	x22, x22, #0x8
   2f050:	mov	x1, x22
   2f054:	bl	2c820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ff8>
   2f058:	ldp	x21, x22, [sp, #16]
   2f05c:	b	2f01c <__sanitizer_get_module_and_offset_for_pc@@Base+0x67f4>
   2f060:	ldr	x22, [sp, #80]
   2f064:	cbz	x22, 2f008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67e0>
   2f068:	stp	x23, x24, [sp, #32]
   2f06c:	add	x23, sp, #0x70
   2f070:	mov	x0, x23
   2f074:	ldr	x24, [sp, #88]
   2f078:	bl	29030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x808>
   2f07c:	mov	x0, x22
   2f080:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   2f084:	mov	x1, x0
   2f088:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f08c:	add	x0, x0, #0x328
   2f090:	stp	x1, x24, [sp, #160]
   2f094:	bl	1a2a0 <__sanitizer_set_report_fd@@Base+0x24e0>
   2f098:	str	x0, [sp, #144]
   2f09c:	bl	2f458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c30>
   2f0a0:	mov	x2, x0
   2f0a4:	mov	x1, x23
   2f0a8:	mov	x0, x21
   2f0ac:	bl	2c820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ff8>
   2f0b0:	mov	x0, x23
   2f0b4:	bl	29058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x830>
   2f0b8:	ldp	x21, x22, [sp, #16]
   2f0bc:	ldp	x23, x24, [sp, #32]
   2f0c0:	b	2f01c <__sanitizer_get_module_and_offset_for_pc@@Base+0x67f4>
   2f0c4:	stp	x21, x22, [sp, #16]
   2f0c8:	stp	x23, x24, [sp, #32]
   2f0cc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   2f0d0:	stp	x19, x20, [sp, #-32]!
   2f0d4:	adrp	x20, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f0d8:	ldr	x4, [x20, #3392]
   2f0dc:	str	x30, [sp, #16]
   2f0e0:	cbnz	x4, 2f120 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68f8>
   2f0e4:	add	x19, x20, #0xd40
   2f0e8:	mov	w2, #0x21                  	// #33
   2f0ec:	add	x19, x19, #0x40
   2f0f0:	adrp	x1, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
   2f0f4:	mov	x0, x19
   2f0f8:	add	x1, x1, #0xb30
   2f0fc:	bl	20eb0 <__sanitizer_on_print@@Base+0x1650>
   2f100:	str	x19, [x20, #3392]
   2f104:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2f108:	mov	x0, x19
   2f10c:	ldr	x30, [sp, #16]
   2f110:	ldr	x1, [x1, #3704]
   2f114:	ldp	x19, x20, [sp], #32
   2f118:	ldr	x1, [x1, #8]
   2f11c:	b	20f08 <__sanitizer_on_print@@Base+0x16a8>
   2f120:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f124:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f128:	add	x2, x2, #0x240
   2f12c:	add	x0, x0, #0x60
   2f130:	mov	x3, #0x0                   	// #0
   2f134:	mov	w1, #0x196                 	// #406
   2f138:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2f13c:	nop
   2f140:	stp	x19, x30, [sp, #-32]!
   2f144:	mov	x19, x0
   2f148:	bl	2f520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cf8>
   2f14c:	adrp	x0, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f150:	ldr	x0, [x0, #3392]
   2f154:	cbz	x0, 2f174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x694c>
   2f158:	mov	x1, x19
   2f15c:	add	x3, sp, #0x18
   2f160:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f164:	add	x2, x2, #0x3d0
   2f168:	bl	21278 <__sanitizer_on_print@@Base+0x1a18>
   2f16c:	ldp	x19, x30, [sp], #32
   2f170:	ret
   2f174:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f178:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f17c:	add	x2, x2, #0x268
   2f180:	add	x0, x0, #0x60
   2f184:	mov	x4, #0x0                   	// #0
   2f188:	mov	x3, #0x0                   	// #0
   2f18c:	mov	w1, #0x19e                 	// #414
   2f190:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2f194:	nop
   2f198:	stp	x19, x20, [sp, #-96]!
   2f19c:	mov	w19, w0
   2f1a0:	mov	x20, x2
   2f1a4:	stp	x21, x22, [sp, #16]
   2f1a8:	adrp	x22, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f1ac:	mov	x21, x1
   2f1b0:	stp	x23, x24, [sp, #32]
   2f1b4:	str	x30, [sp, #48]
   2f1b8:	bl	2f520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cf8>
   2f1bc:	ldr	x0, [x22, #3392]
   2f1c0:	cbz	x0, 2f2ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ac4>
   2f1c4:	cmp	w19, #0x1f
   2f1c8:	b.hi	2f438 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c10>  // b.pmore
   2f1cc:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f1d0:	add	x1, x1, #0x390
   2f1d4:	ldrh	w1, [x1, w19, uxtw #1]
   2f1d8:	adr	x2, 2f1e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69bc>
   2f1dc:	add	x1, x2, w1, sxth #2
   2f1e0:	br	x1
   2f1e4:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f1e8:	add	x19, x19, #0xd60
   2f1ec:	mov	x1, x19
   2f1f0:	bl	213a0 <__sanitizer_on_print@@Base+0x1b40>
   2f1f4:	ands	w23, w0, #0xff
   2f1f8:	b.eq	2f298 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a70>  // b.none
   2f1fc:	str	xzr, [sp, #72]
   2f200:	cbz	x20, 2f2c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6aa0>
   2f204:	ldr	x0, [x22, #3392]
   2f208:	add	x24, sp, #0x48
   2f20c:	mov	x1, x20
   2f210:	mov	x3, x24
   2f214:	mov	x2, x19
   2f218:	bl	21278 <__sanitizer_on_print@@Base+0x1a18>
   2f21c:	tst	w0, #0xff
   2f220:	b.ne	2f298 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a70>  // b.any
   2f224:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2f228:	str	xzr, [sp, #80]
   2f22c:	add	x3, sp, #0x58
   2f230:	add	x2, sp, #0x50
   2f234:	mov	x1, x21
   2f238:	bl	29fe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b8>
   2f23c:	tst	w0, #0xff
   2f240:	b.eq	2f264 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a3c>  // b.none
   2f244:	ldr	x1, [sp, #80]
   2f248:	cbz	x1, 2f264 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a3c>
   2f24c:	ldr	x0, [x22, #3392]
   2f250:	mov	x3, x24
   2f254:	mov	x2, x19
   2f258:	bl	21278 <__sanitizer_on_print@@Base+0x1a18>
   2f25c:	tst	w0, #0xff
   2f260:	b.ne	2f298 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a70>  // b.any
   2f264:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2f268:	mov	x1, x21
   2f26c:	bl	2aa50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2f270:	mov	x20, x0
   2f274:	mov	x3, x24
   2f278:	ldr	x0, [x22, #3392]
   2f27c:	mov	x2, x19
   2f280:	ldr	x1, [x20, #40]
   2f284:	bl	21278 <__sanitizer_on_print@@Base+0x1a18>
   2f288:	ands	w23, w0, #0xff
   2f28c:	b.eq	2f2d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6aa8>  // b.none
   2f290:	mov	x0, x20
   2f294:	bl	29160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   2f298:	mov	w0, w23
   2f29c:	ldp	x21, x22, [sp, #16]
   2f2a0:	ldp	x23, x24, [sp, #32]
   2f2a4:	ldr	x30, [sp, #48]
   2f2a8:	ldp	x19, x20, [sp], #96
   2f2ac:	ret
   2f2b0:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f2b4:	add	x19, x19, #0x368
   2f2b8:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f2bc:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f2c0:	add	x19, x19, #0x2b0
   2f2c4:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f2c8:	add	x24, sp, #0x48
   2f2cc:	b	2f224 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69fc>
   2f2d0:	ldr	x0, [x22, #3392]
   2f2d4:	mov	x3, x24
   2f2d8:	ldr	x1, [x20, #56]
   2f2dc:	mov	x2, x19
   2f2e0:	bl	21278 <__sanitizer_on_print@@Base+0x1a18>
   2f2e4:	and	w23, w0, #0xff
   2f2e8:	b	2f290 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a68>
   2f2ec:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f2f0:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f2f4:	add	x2, x2, #0x268
   2f2f8:	add	x0, x0, #0x60
   2f2fc:	mov	x4, #0x0                   	// #0
   2f300:	mov	x3, #0x0                   	// #0
   2f304:	mov	w1, #0x1a5                 	// #421
   2f308:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2f30c:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f310:	add	x19, x19, #0x2e0
   2f314:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f318:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f31c:	add	x19, x19, #0x2a0
   2f320:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f324:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f328:	add	x19, x19, #0x288
   2f32c:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f330:	adrp	x19, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   2f334:	add	x19, x19, #0x3a8
   2f338:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f33c:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f340:	add	x19, x19, #0x2c8
   2f344:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f348:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f34c:	add	x19, x19, #0x2c0
   2f350:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f354:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f358:	add	x19, x19, #0x290
   2f35c:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f360:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f364:	add	x19, x19, #0x360
   2f368:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f36c:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f370:	add	x19, x19, #0x358
   2f374:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f378:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f37c:	add	x19, x19, #0xf78
   2f380:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f384:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f388:	add	x19, x19, #0x348
   2f38c:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f390:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f394:	add	x19, x19, #0xf58
   2f398:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f39c:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f3a0:	add	x19, x19, #0x338
   2f3a4:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f3a8:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f3ac:	add	x19, x19, #0x330
   2f3b0:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f3b4:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f3b8:	add	x19, x19, #0xf10
   2f3bc:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f3c0:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f3c4:	add	x19, x19, #0xef8
   2f3c8:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f3cc:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f3d0:	add	x19, x19, #0x2f0
   2f3d4:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f3d8:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f3dc:	add	x19, x19, #0xe98
   2f3e0:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f3e4:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f3e8:	add	x19, x19, #0xe70
   2f3ec:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f3f0:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f3f4:	add	x19, x19, #0xe48
   2f3f8:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f3fc:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f400:	add	x19, x19, #0xe30
   2f404:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f408:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f40c:	add	x19, x19, #0xe18
   2f410:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f414:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f418:	add	x19, x19, #0xe00
   2f41c:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f420:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f424:	add	x19, x19, #0xde0
   2f428:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f42c:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f430:	add	x19, x19, #0xdc8
   2f434:	b	2f1ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f438:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f43c:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f440:	add	x2, x2, #0x38
   2f444:	add	x0, x0, #0x60
   2f448:	mov	x4, #0x0                   	// #0
   2f44c:	mov	x3, #0x0                   	// #0
   2f450:	mov	w1, #0x4d                  	// #77
   2f454:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   2f458:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f45c:	add	x0, x0, #0x3e0
   2f460:	ret
   2f464:	nop
   2f468:	stp	x19, x20, [sp, #-32]!
   2f46c:	adrp	x19, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f470:	add	x0, x19, #0xdf0
   2f474:	mov	w2, #0x1                   	// #1
   2f478:	str	x30, [sp, #24]
   2f47c:	ldxrb	w1, [x0]
   2f480:	stxrb	w3, w2, [x0]
   2f484:	cbnz	w3, 2f47c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c54>
   2f488:	dmb	ish
   2f48c:	tst	w1, #0xff
   2f490:	b.eq	2f498 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c70>  // b.none
   2f494:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   2f498:	add	x20, x19, #0xdf0
   2f49c:	ldrb	w0, [x20, #1]
   2f4a0:	cbz	w0, 2f4b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c90>
   2f4a4:	dmb	ish
   2f4a8:	strb	wzr, [x19, #3568]
   2f4ac:	ldr	x30, [sp, #24]
   2f4b0:	ldp	x19, x20, [sp], #32
   2f4b4:	ret
   2f4b8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2f4bc:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f4c0:	add	x1, x1, #0x3e0
   2f4c4:	str	x21, [sp, #16]
   2f4c8:	ldr	x0, [x0, #4024]
   2f4cc:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2f4d0:	str	x1, [x0]
   2f4d4:	bl	14e78 <_ZdaPvRKSt9nothrow_t@@Base+0x31b8>
   2f4d8:	bl	2f7a0 <__ubsan_default_options@@Base+0x158>
   2f4dc:	ldr	x21, [x21, #4056]
   2f4e0:	ldr	x0, [x21, #40]
   2f4e4:	bl	6650 <__sanitizer_set_report_path@plt>
   2f4e8:	bl	24268 <__sanitizer_sandbox_on_notify@@Base+0xce0>
   2f4ec:	ldrb	w0, [x21, #169]
   2f4f0:	ldr	x1, [x21, #176]
   2f4f4:	bl	265b8 <__sanitizer_sandbox_on_notify@@Base+0x3030>
   2f4f8:	bl	2f0d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68a8>
   2f4fc:	mov	w0, #0x1                   	// #1
   2f500:	strb	w0, [x20, #1]
   2f504:	ldr	x21, [sp, #16]
   2f508:	dmb	ish
   2f50c:	strb	wzr, [x19, #3568]
   2f510:	ldr	x30, [sp, #24]
   2f514:	ldp	x19, x20, [sp], #32
   2f518:	ret
   2f51c:	nop
   2f520:	stp	x19, x20, [sp, #-32]!
   2f524:	adrp	x19, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f528:	add	x0, x19, #0xdf0
   2f52c:	mov	w2, #0x1                   	// #1
   2f530:	str	x30, [sp, #24]
   2f534:	ldxrb	w1, [x0]
   2f538:	stxrb	w3, w2, [x0]
   2f53c:	cbnz	w3, 2f534 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d0c>
   2f540:	dmb	ish
   2f544:	tst	w1, #0xff
   2f548:	b.eq	2f550 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d28>  // b.none
   2f54c:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   2f550:	add	x20, x19, #0xdf0
   2f554:	ldrb	w0, [x20, #1]
   2f558:	cbz	w0, 2f570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d48>
   2f55c:	dmb	ish
   2f560:	strb	wzr, [x19, #3568]
   2f564:	ldr	x30, [sp, #24]
   2f568:	ldp	x19, x20, [sp], #32
   2f56c:	ret
   2f570:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2f574:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f578:	add	x1, x1, #0x3e0
   2f57c:	str	x21, [sp, #16]
   2f580:	ldr	x0, [x0, #4024]
   2f584:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2f588:	str	x1, [x0]
   2f58c:	bl	14e78 <_ZdaPvRKSt9nothrow_t@@Base+0x31b8>
   2f590:	bl	2f7a0 <__ubsan_default_options@@Base+0x158>
   2f594:	ldr	x21, [x21, #4056]
   2f598:	ldr	x0, [x21, #40]
   2f59c:	bl	6650 <__sanitizer_set_report_path@plt>
   2f5a0:	bl	24268 <__sanitizer_sandbox_on_notify@@Base+0xce0>
   2f5a4:	ldrb	w0, [x21, #169]
   2f5a8:	ldr	x1, [x21, #176]
   2f5ac:	bl	265b8 <__sanitizer_sandbox_on_notify@@Base+0x3030>
   2f5b0:	bl	2f0d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68a8>
   2f5b4:	mov	w0, #0x1                   	// #1
   2f5b8:	strb	w0, [x20, #1]
   2f5bc:	ldr	x21, [sp, #16]
   2f5c0:	dmb	ish
   2f5c4:	strb	wzr, [x19, #3568]
   2f5c8:	ldr	x30, [sp, #24]
   2f5cc:	ldp	x19, x20, [sp], #32
   2f5d0:	ret
   2f5d4:	nop
   2f5d8:	stp	x19, x20, [sp, #-32]!
   2f5dc:	adrp	x19, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f5e0:	add	x0, x19, #0xdf0
   2f5e4:	mov	w2, #0x1                   	// #1
   2f5e8:	str	x30, [sp, #16]
   2f5ec:	ldxrb	w1, [x0]
   2f5f0:	stxrb	w3, w2, [x0]
   2f5f4:	cbnz	w3, 2f5ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x6dc4>
   2f5f8:	dmb	ish
   2f5fc:	tst	w1, #0xff
   2f600:	b.eq	2f608 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6de0>  // b.none
   2f604:	bl	8518 <__sanitizer_print_stack_trace@@Base+0x300>
   2f608:	add	x20, x19, #0xdf0
   2f60c:	ldrb	w0, [x20, #1]
   2f610:	cbz	w0, 2f628 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e00>
   2f614:	dmb	ish
   2f618:	strb	wzr, [x19, #3568]
   2f61c:	ldr	x30, [sp, #16]
   2f620:	ldp	x19, x20, [sp], #32
   2f624:	ret
   2f628:	bl	2f0d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68a8>
   2f62c:	mov	w0, #0x1                   	// #1
   2f630:	strb	w0, [x20, #1]
   2f634:	dmb	ish
   2f638:	strb	wzr, [x19, #3568]
   2f63c:	ldr	x30, [sp, #16]
   2f640:	ldp	x19, x20, [sp], #32
   2f644:	ret

000000000002f648 <__ubsan_default_options@@Base>:
   2f648:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f64c:	add	x0, x0, #0x328
   2f650:	ret
   2f654:	nop
   2f658:	b	6600 <__ubsan_default_options@plt>
   2f65c:	nop
   2f660:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f664:	add	x1, x1, #0x328
   2f668:	strh	wzr, [x0]
   2f66c:	str	x1, [x0, #8]
   2f670:	strh	wzr, [x0, #16]
   2f674:	ret
   2f678:	stp	x19, x20, [sp, #-48]!
   2f67c:	mov	x20, x0
   2f680:	mov	x19, x1
   2f684:	stp	x21, x22, [sp, #16]
   2f688:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2f68c:	mov	x1, #0x10                  	// #16
   2f690:	ldr	x21, [x21, #3632]
   2f694:	str	x30, [sp, #32]
   2f698:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2f69c:	add	x22, x22, #0x8b8
   2f6a0:	mov	x0, x21
   2f6a4:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2f6a8:	mov	x2, x0
   2f6ac:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f6b0:	add	x3, x3, #0x400
   2f6b4:	mov	x0, x20
   2f6b8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2f6bc:	add	x1, x1, #0x2b0
   2f6c0:	stp	x22, x19, [x2]
   2f6c4:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   2f6c8:	mov	x0, x21
   2f6cc:	mov	x1, #0x10                  	// #16
   2f6d0:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2f6d4:	mov	x2, x0
   2f6d8:	add	x4, x19, #0x1
   2f6dc:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f6e0:	add	x3, x3, #0x438
   2f6e4:	mov	x0, x20
   2f6e8:	stp	x22, x4, [x2]
   2f6ec:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f6f0:	add	x1, x1, #0x468
   2f6f4:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   2f6f8:	mov	x0, x21
   2f6fc:	mov	x1, #0x10                  	// #16
   2f700:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2f704:	mov	x2, x0
   2f708:	add	x1, x19, #0x8
   2f70c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2f710:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f714:	add	x0, x0, #0x998
   2f718:	add	x3, x3, #0x480
   2f71c:	stp	x0, x1, [x2]
   2f720:	mov	x0, x20
   2f724:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f728:	add	x1, x1, #0x498
   2f72c:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   2f730:	mov	x0, x21
   2f734:	mov	x1, #0x10                  	// #16
   2f738:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2f73c:	mov	x2, x0
   2f740:	add	x4, x19, #0x10
   2f744:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f748:	add	x3, x3, #0x4a8
   2f74c:	mov	x0, x20
   2f750:	stp	x22, x4, [x2]
   2f754:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f758:	add	x1, x1, #0x4f0
   2f75c:	bl	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   2f760:	add	x19, x19, #0x11
   2f764:	mov	x0, x21
   2f768:	mov	x1, #0x10                  	// #16
   2f76c:	bl	11f40 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2f770:	mov	x2, x0
   2f774:	ldr	x30, [sp, #32]
   2f778:	mov	x0, x20
   2f77c:	stp	x22, x19, [x2]
   2f780:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f784:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f788:	ldp	x21, x22, [sp, #16]
   2f78c:	add	x3, x3, #0x508
   2f790:	ldp	x19, x20, [sp], #48
   2f794:	add	x1, x1, #0x588
   2f798:	b	19bd0 <__sanitizer_set_report_fd@@Base+0x1e10>
   2f79c:	nop
   2f7a0:	stp	x19, x20, [sp, #-304]!
   2f7a4:	stp	x21, x22, [sp, #16]
   2f7a8:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2f7ac:	add	x19, sp, #0x38
   2f7b0:	ldr	x20, [x21, #4056]
   2f7b4:	str	x30, [sp, #32]
   2f7b8:	mov	x0, x20
   2f7bc:	bl	17de0 <__sanitizer_set_report_fd@@Base+0x20>
   2f7c0:	mov	x1, x20
   2f7c4:	mov	x0, x19
   2f7c8:	bl	17ed8 <__sanitizer_set_report_fd@@Base+0x118>
   2f7cc:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f7d0:	add	x0, x0, #0x5a8
   2f7d4:	bl	1c420 <__sanitizer_set_report_fd@@Base+0x4660>
   2f7d8:	mov	x2, x0
   2f7dc:	mov	x1, x19
   2f7e0:	mov	x0, x20
   2f7e4:	str	x2, [sp, #64]
   2f7e8:	bl	17ed8 <__sanitizer_set_report_fd@@Base+0x118>
   2f7ec:	adrp	x2, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f7f0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   2f7f4:	add	x22, x2, #0xdf8
   2f7f8:	add	x1, x1, #0x328
   2f7fc:	strh	wzr, [x2, #3576]
   2f800:	mov	x0, x19
   2f804:	str	x1, [x22, #8]
   2f808:	strh	wzr, [x22, #16]
   2f80c:	bl	19c28 <__sanitizer_set_report_fd@@Base+0x1e68>
   2f810:	mov	x1, x20
   2f814:	mov	x0, x19
   2f818:	bl	180f0 <__sanitizer_set_report_fd@@Base+0x330>
   2f81c:	mov	x1, x22
   2f820:	mov	x0, x19
   2f824:	bl	2f678 <__ubsan_default_options@@Base+0x30>
   2f828:	bl	6600 <__ubsan_default_options@plt>
   2f82c:	mov	x1, x0
   2f830:	mov	x2, #0x0                   	// #0
   2f834:	mov	x0, x19
   2f838:	bl	199c0 <__sanitizer_set_report_fd@@Base+0x1c00>
   2f83c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   2f840:	add	x1, x1, #0x7e8
   2f844:	mov	x0, x19
   2f848:	bl	19938 <__sanitizer_set_report_fd@@Base+0x1b78>
   2f84c:	mov	x0, x20
   2f850:	bl	19030 <__sanitizer_set_report_fd@@Base+0x1270>
   2f854:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2f858:	ldr	x0, [x0, #3816]
   2f85c:	ldr	w0, [x0]
   2f860:	cbnz	w0, 2f880 <__ubsan_default_options@@Base+0x238>
   2f864:	ldr	x21, [x21, #4056]
   2f868:	ldrb	w0, [x21, #122]
   2f86c:	cbnz	w0, 2f890 <__ubsan_default_options@@Base+0x248>
   2f870:	ldp	x21, x22, [sp, #16]
   2f874:	ldr	x30, [sp, #32]
   2f878:	ldp	x19, x20, [sp], #304
   2f87c:	ret
   2f880:	bl	192c8 <__sanitizer_set_report_fd@@Base+0x1508>
   2f884:	ldr	x21, [x21, #4056]
   2f888:	ldrb	w0, [x21, #122]
   2f88c:	cbz	w0, 2f870 <__ubsan_default_options@@Base+0x228>
   2f890:	mov	x0, x19
   2f894:	bl	193a8 <__sanitizer_set_report_fd@@Base+0x15e8>
   2f898:	ldp	x21, x22, [sp, #16]
   2f89c:	ldr	x30, [sp, #32]
   2f8a0:	ldp	x19, x20, [sp], #304
   2f8a4:	ret
   2f8a8:	sub	sp, sp, #0x2c0
   2f8ac:	ldrb	w3, [x2]
   2f8b0:	mov	w4, #0xffffffff            	// #-1
   2f8b4:	stp	x19, x20, [sp]
   2f8b8:	mov	x19, x0
   2f8bc:	add	x0, x0, #0xc
   2f8c0:	stp	x23, x24, [sp, #32]
   2f8c4:	mov	x24, x2
   2f8c8:	mov	x20, x1
   2f8cc:	stp	x21, x22, [sp, #16]
   2f8d0:	stp	x25, x26, [sp, #48]
   2f8d4:	ldr	x1, [x2, #8]
   2f8d8:	str	x30, [sp, #80]
   2f8dc:	ldxr	w21, [x0]
   2f8e0:	stxr	w2, w4, [x0]
   2f8e4:	cbnz	w2, 2f8dc <__ubsan_default_options@@Base+0x294>
   2f8e8:	dmb	ish
   2f8ec:	ldr	x0, [x19, #16]
   2f8f0:	mov	w26, w3
   2f8f4:	ldr	w25, [x19, #8]
   2f8f8:	ldr	x23, [x19]
   2f8fc:	ldrh	w4, [x0]
   2f900:	cbnz	w4, 2f93c <__ubsan_default_options@@Base+0x2f4>
   2f904:	ldrh	w0, [x0, #2]
   2f908:	tbz	w0, #0, 2f93c <__ubsan_default_options@@Base+0x2f4>
   2f90c:	cbnz	w3, 2fac8 <__ubsan_default_options@@Base+0x480>
   2f910:	mov	w26, #0x1                   	// #1
   2f914:	mov	w22, #0x9                   	// #9
   2f918:	cmn	w21, #0x1
   2f91c:	b.ne	2fa40 <__ubsan_default_options@@Base+0x3f8>  // b.any
   2f920:	ldp	x19, x20, [sp]
   2f924:	ldp	x21, x22, [sp, #16]
   2f928:	ldp	x23, x24, [sp, #32]
   2f92c:	ldp	x25, x26, [sp, #48]
   2f930:	ldr	x30, [sp, #80]
   2f934:	add	sp, sp, #0x2c0
   2f938:	ret
   2f93c:	mov	w22, #0xa                   	// #10
   2f940:	cbz	w3, 2f918 <__ubsan_default_options@@Base+0x2d0>
   2f944:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   2f948:	ldr	x0, [x0, #3704]
   2f94c:	ldrb	w0, [x0, #17]
   2f950:	cbnz	w0, 2f920 <__ubsan_default_options@@Base+0x2d8>
   2f954:	stp	x27, x28, [sp, #64]
   2f958:	mov	w28, #0x1                   	// #1
   2f95c:	add	x26, sp, #0xc0
   2f960:	str	w28, [sp, #272]
   2f964:	mov	w3, w22
   2f968:	str	x23, [sp, #280]
   2f96c:	add	x2, sp, #0x60
   2f970:	str	w25, [sp, #288]
   2f974:	mov	x0, x26
   2f978:	str	w21, [sp, #292]
   2f97c:	add	x1, sp, #0x90
   2f980:	ldp	x6, x7, [sp, #272]
   2f984:	add	x27, sp, #0x110
   2f988:	ldr	x8, [x24, #16]
   2f98c:	stp	x6, x7, [sp, #96]
   2f990:	ldp	x6, x7, [x24]
   2f994:	stp	x6, x7, [sp, #144]
   2f998:	ldp	x4, x5, [sp, #288]
   2f99c:	stp	x4, x5, [sp, #112]
   2f9a0:	ldr	x9, [sp, #304]
   2f9a4:	str	x9, [sp, #128]
   2f9a8:	str	x8, [sp, #160]
   2f9ac:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   2f9b0:	ldr	x3, [x19, #16]
   2f9b4:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2f9b8:	mov	x0, x27
   2f9bc:	add	x2, x2, #0x630
   2f9c0:	stp	x3, x20, [sp, #176]
   2f9c4:	add	x3, sp, #0x130
   2f9c8:	add	x1, sp, #0xb0
   2f9cc:	str	w28, [sp, #272]
   2f9d0:	str	x23, [sp, #280]
   2f9d4:	stp	w25, w21, [x3, #-16]
   2f9d8:	stp	wzr, w22, [x3, #8]
   2f9dc:	str	x2, [sp, #320]
   2f9e0:	str	wzr, [sp, #592]
   2f9e4:	str	wzr, [sp, #600]
   2f9e8:	str	xzr, [sp, #608]
   2f9ec:	str	xzr, [sp, #616]
   2f9f0:	str	wzr, [sp, #640]
   2f9f4:	str	xzr, [sp, #648]
   2f9f8:	str	xzr, [sp, #656]
   2f9fc:	str	xzr, [sp, #680]
   2fa00:	str	wzr, [sp, #688]
   2fa04:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   2fa08:	ldr	x1, [x19, #16]
   2fa0c:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   2fa10:	mov	x0, x27
   2fa14:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   2fa18:	mov	x0, x26
   2fa1c:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   2fa20:	ldp	x19, x20, [sp]
   2fa24:	ldp	x21, x22, [sp, #16]
   2fa28:	ldp	x23, x24, [sp, #32]
   2fa2c:	ldp	x25, x26, [sp, #48]
   2fa30:	ldp	x27, x28, [sp, #64]
   2fa34:	ldr	x30, [sp, #80]
   2fa38:	add	sp, sp, #0x2c0
   2fa3c:	ret
   2fa40:	mov	x2, x23
   2fa44:	mov	w0, w22
   2fa48:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   2fa4c:	tst	w0, #0xff
   2fa50:	b.ne	2f920 <__ubsan_default_options@@Base+0x2d8>  // b.any
   2fa54:	cbz	w26, 2f944 <__ubsan_default_options@@Base+0x2fc>
   2fa58:	stp	x27, x28, [sp, #64]
   2fa5c:	mov	w28, #0x1                   	// #1
   2fa60:	str	w28, [sp, #272]
   2fa64:	add	x26, sp, #0xc0
   2fa68:	str	x23, [sp, #280]
   2fa6c:	mov	w3, w22
   2fa70:	str	w25, [sp, #288]
   2fa74:	add	x2, sp, #0x60
   2fa78:	str	w21, [sp, #292]
   2fa7c:	mov	x0, x26
   2fa80:	ldp	x6, x7, [sp, #272]
   2fa84:	add	x1, sp, #0x90
   2fa88:	ldr	x8, [x24, #16]
   2fa8c:	stp	x6, x7, [sp, #96]
   2fa90:	add	x27, sp, #0x110
   2fa94:	ldp	x6, x7, [x24]
   2fa98:	stp	x6, x7, [sp, #144]
   2fa9c:	ldp	x4, x5, [sp, #288]
   2faa0:	stp	x4, x5, [sp, #112]
   2faa4:	ldr	x9, [sp, #304]
   2faa8:	str	x9, [sp, #128]
   2faac:	str	x8, [sp, #160]
   2fab0:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   2fab4:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2fab8:	mov	x0, x27
   2fabc:	add	x2, x2, #0x5c0
   2fac0:	ldr	x3, [x19, #16]
   2fac4:	b	2f9c0 <__ubsan_default_options@@Base+0x378>
   2fac8:	mov	w22, #0x9                   	// #9
   2facc:	stp	x27, x28, [sp, #64]
   2fad0:	b	2fa5c <__ubsan_default_options@@Base+0x414>
   2fad4:	nop
   2fad8:	sub	sp, sp, #0x2b0
   2fadc:	stp	x19, x20, [sp]
   2fae0:	mov	x19, x0
   2fae4:	mov	x20, x2
   2fae8:	add	x0, x0, #0xc
   2faec:	stp	x21, x22, [sp, #16]
   2faf0:	mov	x21, x1
   2faf4:	mov	w1, #0xffffffff            	// #-1
   2faf8:	stp	x25, x26, [sp, #48]
   2fafc:	str	x30, [sp, #72]
   2fb00:	ldxr	w22, [x0]
   2fb04:	stxr	w2, w1, [x0]
   2fb08:	cbnz	w2, 2fb00 <__ubsan_default_options@@Base+0x4b8>
   2fb0c:	dmb	ish
   2fb10:	ldrb	w0, [x20]
   2fb14:	ldr	w26, [x19, #8]
   2fb18:	ldr	x25, [x19]
   2fb1c:	cbnz	w0, 2fb58 <__ubsan_default_options@@Base+0x510>
   2fb20:	cmp	w22, w1
   2fb24:	b.ne	2fb40 <__ubsan_default_options@@Base+0x4f8>  // b.any
   2fb28:	ldp	x19, x20, [sp]
   2fb2c:	ldp	x21, x22, [sp, #16]
   2fb30:	ldp	x25, x26, [sp, #48]
   2fb34:	ldr	x30, [sp, #72]
   2fb38:	add	sp, sp, #0x2b0
   2fb3c:	ret
   2fb40:	ldr	x1, [x20, #8]
   2fb44:	mov	x2, x25
   2fb48:	mov	w0, #0x14                  	// #20
   2fb4c:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   2fb50:	tst	w0, #0xff
   2fb54:	b.ne	2fb28 <__ubsan_default_options@@Base+0x4e0>  // b.any
   2fb58:	str	x25, [sp, #264]
   2fb5c:	add	x2, sp, #0x50
   2fb60:	str	w26, [sp, #272]
   2fb64:	add	x1, sp, #0x80
   2fb68:	str	w22, [sp, #276]
   2fb6c:	mov	w3, #0x14                  	// #20
   2fb70:	ldp	x8, x9, [x20]
   2fb74:	str	x27, [sp, #64]
   2fb78:	mov	w27, #0x1                   	// #1
   2fb7c:	str	w27, [sp, #256]
   2fb80:	ldp	x4, x5, [sp, #272]
   2fb84:	stp	x23, x24, [sp, #32]
   2fb88:	add	x23, sp, #0xb0
   2fb8c:	ldp	x6, x7, [sp, #256]
   2fb90:	stp	x6, x7, [sp, #80]
   2fb94:	mov	x0, x23
   2fb98:	ldr	x6, [x20, #16]
   2fb9c:	stp	x4, x5, [sp, #96]
   2fba0:	add	x24, sp, #0x100
   2fba4:	ldr	x10, [sp, #288]
   2fba8:	str	x10, [sp, #112]
   2fbac:	stp	x8, x9, [sp, #128]
   2fbb0:	str	x6, [sp, #144]
   2fbb4:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   2fbb8:	ldr	x4, [x19, #24]
   2fbbc:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2fbc0:	add	x2, x2, #0x660
   2fbc4:	mov	x3, #0x1400000000          	// #85899345920
   2fbc8:	add	x1, sp, #0xa0
   2fbcc:	mov	x0, x24
   2fbd0:	stp	x4, x21, [sp, #160]
   2fbd4:	str	w27, [sp, #256]
   2fbd8:	str	x25, [sp, #264]
   2fbdc:	str	w26, [sp, #272]
   2fbe0:	str	w22, [sp, #276]
   2fbe4:	stp	x3, x2, [sp, #296]
   2fbe8:	str	wzr, [sp, #576]
   2fbec:	str	wzr, [sp, #584]
   2fbf0:	str	xzr, [sp, #592]
   2fbf4:	str	xzr, [sp, #600]
   2fbf8:	str	wzr, [sp, #624]
   2fbfc:	str	xzr, [sp, #632]
   2fc00:	str	xzr, [sp, #640]
   2fc04:	str	xzr, [sp, #664]
   2fc08:	str	wzr, [sp, #672]
   2fc0c:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   2fc10:	ldr	x1, [x19, #16]
   2fc14:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   2fc18:	mov	x0, x24
   2fc1c:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   2fc20:	mov	x0, x23
   2fc24:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   2fc28:	ldp	x19, x20, [sp]
   2fc2c:	ldp	x21, x22, [sp, #16]
   2fc30:	ldp	x23, x24, [sp, #32]
   2fc34:	ldp	x25, x26, [sp, #48]
   2fc38:	ldr	x27, [sp, #64]
   2fc3c:	ldr	x30, [sp, #72]
   2fc40:	add	sp, sp, #0x2b0
   2fc44:	ret
   2fc48:	sub	sp, sp, #0x2b0
   2fc4c:	stp	x19, x20, [sp]
   2fc50:	mov	x19, x0
   2fc54:	mov	x20, x2
   2fc58:	add	x0, x0, #0xc
   2fc5c:	stp	x21, x22, [sp, #16]
   2fc60:	mov	x21, x1
   2fc64:	mov	w1, #0xffffffff            	// #-1
   2fc68:	stp	x23, x24, [sp, #32]
   2fc6c:	stp	x25, x26, [sp, #48]
   2fc70:	str	x30, [sp, #72]
   2fc74:	ldxr	w26, [x0]
   2fc78:	stxr	w2, w1, [x0]
   2fc7c:	cbnz	w2, 2fc74 <__ubsan_default_options@@Base+0x62c>
   2fc80:	dmb	ish
   2fc84:	ldrb	w0, [x20]
   2fc88:	ldr	w25, [x19, #8]
   2fc8c:	ldr	x24, [x19]
   2fc90:	cbnz	w0, 2fcd0 <__ubsan_default_options@@Base+0x688>
   2fc94:	cmp	w26, w1
   2fc98:	b.ne	2fcb8 <__ubsan_default_options@@Base+0x670>  // b.any
   2fc9c:	ldp	x19, x20, [sp]
   2fca0:	ldp	x21, x22, [sp, #16]
   2fca4:	ldp	x23, x24, [sp, #32]
   2fca8:	ldp	x25, x26, [sp, #48]
   2fcac:	ldr	x30, [sp, #72]
   2fcb0:	add	sp, sp, #0x2b0
   2fcb4:	ret
   2fcb8:	ldr	x1, [x20, #8]
   2fcbc:	mov	x2, x24
   2fcc0:	mov	w0, #0x17                  	// #23
   2fcc4:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   2fcc8:	tst	w0, #0xff
   2fccc:	b.ne	2fc9c <__ubsan_default_options@@Base+0x654>  // b.any
   2fcd0:	str	x27, [sp, #64]
   2fcd4:	mov	w27, #0x1                   	// #1
   2fcd8:	str	w27, [sp, #256]
   2fcdc:	add	x22, sp, #0xb0
   2fce0:	str	x24, [sp, #264]
   2fce4:	mov	x0, x22
   2fce8:	str	w25, [sp, #272]
   2fcec:	add	x2, sp, #0x50
   2fcf0:	str	w26, [sp, #276]
   2fcf4:	add	x1, sp, #0x80
   2fcf8:	ldp	x6, x7, [sp, #256]
   2fcfc:	stp	x6, x7, [sp, #80]
   2fd00:	mov	w3, #0x17                  	// #23
   2fd04:	ldp	x6, x7, [x20]
   2fd08:	add	x23, sp, #0x100
   2fd0c:	ldp	x4, x5, [sp, #272]
   2fd10:	stp	x4, x5, [sp, #96]
   2fd14:	ldr	x4, [x20, #16]
   2fd18:	stp	x6, x7, [sp, #128]
   2fd1c:	ldr	x8, [sp, #288]
   2fd20:	str	x8, [sp, #112]
   2fd24:	str	x4, [sp, #144]
   2fd28:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   2fd2c:	str	w27, [sp, #256]
   2fd30:	ldr	x4, [x19, #16]
   2fd34:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2fd38:	add	x2, x2, #0x688
   2fd3c:	add	x1, sp, #0xa0
   2fd40:	mov	x3, #0x1700000000          	// #98784247808
   2fd44:	mov	x0, x23
   2fd48:	stp	x4, x21, [sp, #160]
   2fd4c:	str	x24, [sp, #264]
   2fd50:	str	w25, [sp, #272]
   2fd54:	str	w26, [sp, #276]
   2fd58:	stp	x3, x2, [sp, #296]
   2fd5c:	str	wzr, [sp, #576]
   2fd60:	str	wzr, [sp, #584]
   2fd64:	str	xzr, [sp, #592]
   2fd68:	str	xzr, [sp, #600]
   2fd6c:	str	wzr, [sp, #624]
   2fd70:	str	xzr, [sp, #632]
   2fd74:	str	xzr, [sp, #640]
   2fd78:	str	xzr, [sp, #664]
   2fd7c:	str	wzr, [sp, #672]
   2fd80:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   2fd84:	mov	x0, x23
   2fd88:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   2fd8c:	mov	x0, x22
   2fd90:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   2fd94:	ldp	x19, x20, [sp]
   2fd98:	ldp	x21, x22, [sp, #16]
   2fd9c:	ldp	x23, x24, [sp, #32]
   2fda0:	ldp	x25, x26, [sp, #48]
   2fda4:	ldr	x27, [sp, #64]
   2fda8:	ldr	x30, [sp, #72]
   2fdac:	add	sp, sp, #0x2b0
   2fdb0:	ret
   2fdb4:	nop
   2fdb8:	sub	sp, sp, #0x2c0
   2fdbc:	stp	x19, x20, [sp]
   2fdc0:	mov	x20, x3
   2fdc4:	mov	x19, x0
   2fdc8:	add	x0, x0, #0xc
   2fdcc:	stp	x21, x22, [sp, #16]
   2fdd0:	stp	x23, x24, [sp, #32]
   2fdd4:	stp	x25, x26, [sp, #48]
   2fdd8:	ldrb	w25, [x3]
   2fddc:	mov	w3, #0xffffffff            	// #-1
   2fde0:	ldr	x26, [x20, #8]
   2fde4:	str	x30, [sp, #64]
   2fde8:	ldxr	w21, [x0]
   2fdec:	stxr	w4, w3, [x0]
   2fdf0:	cbnz	w4, 2fde8 <__ubsan_default_options@@Base+0x7a0>
   2fdf4:	dmb	ish
   2fdf8:	ldr	x0, [x19, #16]
   2fdfc:	stp	x0, x1, [sp, #160]
   2fe00:	ldr	w22, [x19, #8]
   2fe04:	stp	x0, x2, [sp, #176]
   2fe08:	ldrh	w1, [x0]
   2fe0c:	ldr	x23, [x19]
   2fe10:	cbnz	w1, 2fe40 <__ubsan_default_options@@Base+0x7f8>
   2fe14:	ldrh	w0, [x0, #2]
   2fe18:	tbz	w0, #0, 2ff54 <__ubsan_default_options@@Base+0x90c>
   2fe1c:	add	x0, sp, #0xb0
   2fe20:	bl	32e68 <__ubsan_get_current_report_data@@Base+0x100>
   2fe24:	cmn	x0, #0x1
   2fe28:	b.ne	2fe34 <__ubsan_default_options@@Base+0x7ec>  // b.any
   2fe2c:	cmn	x1, #0x1
   2fe30:	b.eq	2ffb4 <__ubsan_default_options@@Base+0x96c>  // b.none
   2fe34:	ldr	x0, [x19, #16]
   2fe38:	ldrh	w0, [x0]
   2fe3c:	cbz	w0, 2ff54 <__ubsan_default_options@@Base+0x90c>
   2fe40:	mov	w24, #0xc                   	// #12
   2fe44:	cbnz	w25, 2ff5c <__ubsan_default_options@@Base+0x914>
   2fe48:	cmn	w21, #0x1
   2fe4c:	b.ne	2fe6c <__ubsan_default_options@@Base+0x824>  // b.any
   2fe50:	ldp	x19, x20, [sp]
   2fe54:	ldp	x21, x22, [sp, #16]
   2fe58:	ldp	x23, x24, [sp, #32]
   2fe5c:	ldp	x25, x26, [sp, #48]
   2fe60:	ldr	x30, [sp, #64]
   2fe64:	add	sp, sp, #0x2c0
   2fe68:	ret
   2fe6c:	mov	x1, x26
   2fe70:	mov	x2, x23
   2fe74:	mov	w0, w24
   2fe78:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   2fe7c:	tst	w0, #0xff
   2fe80:	b.ne	2fe50 <__ubsan_default_options@@Base+0x808>  // b.any
   2fe84:	mov	w0, #0x1                   	// #1
   2fe88:	str	w0, [sp, #272]
   2fe8c:	str	x23, [sp, #280]
   2fe90:	add	x25, sp, #0xc0
   2fe94:	str	w22, [sp, #288]
   2fe98:	mov	w3, w24
   2fe9c:	str	w21, [sp, #292]
   2fea0:	add	x2, sp, #0x50
   2fea4:	ldp	x6, x7, [sp, #272]
   2fea8:	stp	x6, x7, [sp, #80]
   2feac:	add	x1, sp, #0x80
   2feb0:	ldp	x6, x7, [x20]
   2feb4:	mov	x0, x25
   2feb8:	ldp	x4, x5, [sp, #288]
   2febc:	stp	x4, x5, [sp, #96]
   2fec0:	ldr	x4, [x20, #16]
   2fec4:	stp	x6, x7, [sp, #128]
   2fec8:	ldr	x8, [sp, #304]
   2fecc:	str	x8, [sp, #112]
   2fed0:	str	x4, [sp, #144]
   2fed4:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   2fed8:	cmp	w24, #0x9
   2fedc:	b.eq	30010 <__ubsan_default_options@@Base+0x9c8>  // b.none
   2fee0:	mov	w2, #0x1                   	// #1
   2fee4:	str	w2, [sp, #272]
   2fee8:	add	x2, sp, #0x130
   2feec:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   2fef0:	add	x1, x1, #0x700
   2fef4:	str	x23, [sp, #280]
   2fef8:	add	x0, sp, #0x110
   2fefc:	stp	w22, w21, [x2, #-16]
   2ff00:	stp	wzr, w24, [x2, #8]
   2ff04:	str	x1, [sp, #320]
   2ff08:	str	wzr, [sp, #592]
   2ff0c:	str	wzr, [sp, #600]
   2ff10:	str	xzr, [sp, #608]
   2ff14:	str	xzr, [sp, #616]
   2ff18:	str	wzr, [sp, #640]
   2ff1c:	str	xzr, [sp, #648]
   2ff20:	str	xzr, [sp, #656]
   2ff24:	str	xzr, [sp, #680]
   2ff28:	str	wzr, [sp, #688]
   2ff2c:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   2ff30:	mov	x0, x25
   2ff34:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   2ff38:	ldp	x19, x20, [sp]
   2ff3c:	ldp	x21, x22, [sp, #16]
   2ff40:	ldp	x23, x24, [sp, #32]
   2ff44:	ldp	x25, x26, [sp, #48]
   2ff48:	ldr	x30, [sp, #64]
   2ff4c:	add	sp, sp, #0x2c0
   2ff50:	ret
   2ff54:	mov	w24, #0xb                   	// #11
   2ff58:	cbz	w25, 2fe48 <__ubsan_default_options@@Base+0x800>
   2ff5c:	mov	w0, #0x1                   	// #1
   2ff60:	str	w0, [sp, #272]
   2ff64:	str	x23, [sp, #280]
   2ff68:	add	x25, sp, #0xc0
   2ff6c:	str	w22, [sp, #288]
   2ff70:	mov	w3, w24
   2ff74:	str	w21, [sp, #292]
   2ff78:	add	x2, sp, #0x50
   2ff7c:	ldp	x6, x7, [sp, #272]
   2ff80:	stp	x6, x7, [sp, #80]
   2ff84:	add	x1, sp, #0x80
   2ff88:	ldp	x6, x7, [x20]
   2ff8c:	mov	x0, x25
   2ff90:	ldp	x4, x5, [sp, #288]
   2ff94:	stp	x4, x5, [sp, #96]
   2ff98:	ldr	x4, [x20, #16]
   2ff9c:	stp	x6, x7, [sp, #128]
   2ffa0:	ldr	x8, [sp, #304]
   2ffa4:	str	x8, [sp, #112]
   2ffa8:	str	x4, [sp, #144]
   2ffac:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   2ffb0:	b	2fee0 <__ubsan_default_options@@Base+0x898>
   2ffb4:	mov	w24, #0x9                   	// #9
   2ffb8:	cbz	w25, 2fe48 <__ubsan_default_options@@Base+0x800>
   2ffbc:	mov	w0, #0x1                   	// #1
   2ffc0:	str	w0, [sp, #272]
   2ffc4:	str	x23, [sp, #280]
   2ffc8:	add	x25, sp, #0xc0
   2ffcc:	str	w22, [sp, #288]
   2ffd0:	add	x2, sp, #0x50
   2ffd4:	str	w21, [sp, #292]
   2ffd8:	add	x1, sp, #0x80
   2ffdc:	ldp	x6, x7, [sp, #272]
   2ffe0:	stp	x6, x7, [sp, #80]
   2ffe4:	mov	x0, x25
   2ffe8:	ldp	x6, x7, [x20]
   2ffec:	mov	w3, #0x9                   	// #9
   2fff0:	ldp	x4, x5, [sp, #288]
   2fff4:	stp	x4, x5, [sp, #96]
   2fff8:	ldr	x4, [x20, #16]
   2fffc:	stp	x6, x7, [sp, #128]
   30000:	ldr	x8, [sp, #304]
   30004:	str	x8, [sp, #112]
   30008:	str	x4, [sp, #144]
   3000c:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   30010:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30014:	add	x2, x2, #0x6c8
   30018:	mov	w4, #0x1                   	// #1
   3001c:	mov	x3, #0x900000000           	// #38654705664
   30020:	add	x20, sp, #0x110
   30024:	add	x1, sp, #0xa0
   30028:	mov	x0, x20
   3002c:	str	w4, [sp, #272]
   30030:	str	x23, [sp, #280]
   30034:	str	w22, [sp, #288]
   30038:	str	w21, [sp, #292]
   3003c:	stp	x3, x2, [sp, #312]
   30040:	str	wzr, [sp, #592]
   30044:	str	wzr, [sp, #600]
   30048:	str	xzr, [sp, #608]
   3004c:	str	xzr, [sp, #616]
   30050:	str	wzr, [sp, #640]
   30054:	str	xzr, [sp, #648]
   30058:	str	xzr, [sp, #656]
   3005c:	str	xzr, [sp, #680]
   30060:	str	wzr, [sp, #688]
   30064:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   30068:	ldr	x1, [x19, #16]
   3006c:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   30070:	mov	x0, x20
   30074:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30078:	b	2ff30 <__ubsan_default_options@@Base+0x8e8>
   3007c:	nop
   30080:	sub	sp, sp, #0x2c0
   30084:	stp	x19, x20, [sp]
   30088:	mov	x19, x0
   3008c:	mov	x20, x2
   30090:	add	x0, x0, #0xc
   30094:	stp	x21, x22, [sp, #16]
   30098:	mov	x21, x1
   3009c:	mov	w1, #0xffffffff            	// #-1
   300a0:	stp	x23, x24, [sp, #32]
   300a4:	stp	x27, x28, [sp, #64]
   300a8:	str	x30, [sp, #80]
   300ac:	ldxr	w22, [x0]
   300b0:	stxr	w2, w1, [x0]
   300b4:	cbnz	w2, 300ac <__ubsan_default_options@@Base+0xa64>
   300b8:	dmb	ish
   300bc:	ldr	x0, [x19, #16]
   300c0:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   300c4:	ldr	w24, [x19, #8]
   300c8:	add	x1, x1, #0x718
   300cc:	add	x0, x0, #0x4
   300d0:	ldr	x23, [x19]
   300d4:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   300d8:	cbnz	w0, 30210 <__ubsan_default_options@@Base+0xbc8>
   300dc:	mov	w27, #0x19                  	// #25
   300e0:	ldrb	w0, [x20]
   300e4:	cbnz	w0, 30124 <__ubsan_default_options@@Base+0xadc>
   300e8:	cmn	w22, #0x1
   300ec:	b.ne	3010c <__ubsan_default_options@@Base+0xac4>  // b.any
   300f0:	ldp	x19, x20, [sp]
   300f4:	ldp	x21, x22, [sp, #16]
   300f8:	ldp	x23, x24, [sp, #32]
   300fc:	ldp	x27, x28, [sp, #64]
   30100:	ldr	x30, [sp, #80]
   30104:	add	sp, sp, #0x2c0
   30108:	ret
   3010c:	ldr	x1, [x20, #8]
   30110:	mov	x2, x23
   30114:	mov	w0, w27
   30118:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   3011c:	tst	w0, #0xff
   30120:	b.ne	300f0 <__ubsan_default_options@@Base+0xaa8>  // b.any
   30124:	mov	w28, #0x1                   	// #1
   30128:	str	w28, [sp, #272]
   3012c:	str	x23, [sp, #280]
   30130:	mov	w3, w27
   30134:	str	w24, [sp, #288]
   30138:	add	x2, sp, #0x60
   3013c:	str	w22, [sp, #292]
   30140:	add	x1, sp, #0x90
   30144:	ldp	x6, x7, [sp, #272]
   30148:	stp	x25, x26, [sp, #48]
   3014c:	add	x25, sp, #0xc0
   30150:	ldr	x8, [x20, #16]
   30154:	stp	x6, x7, [sp, #96]
   30158:	mov	x0, x25
   3015c:	ldp	x6, x7, [x20]
   30160:	stp	x6, x7, [sp, #144]
   30164:	add	x26, sp, #0x110
   30168:	ldp	x4, x5, [sp, #288]
   3016c:	stp	x4, x5, [sp, #112]
   30170:	ldr	x9, [sp, #304]
   30174:	str	x9, [sp, #128]
   30178:	str	x8, [sp, #160]
   3017c:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   30180:	str	w28, [sp, #272]
   30184:	ldr	x3, [x19, #16]
   30188:	stp	x3, x21, [sp, #176]
   3018c:	add	x3, sp, #0x130
   30190:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30194:	add	x2, x2, #0x728
   30198:	str	x23, [sp, #280]
   3019c:	add	x1, sp, #0xb0
   301a0:	stp	w24, w22, [x3, #-16]
   301a4:	mov	x0, x26
   301a8:	stp	wzr, w27, [x3, #8]
   301ac:	str	x2, [sp, #320]
   301b0:	str	wzr, [sp, #592]
   301b4:	str	wzr, [sp, #600]
   301b8:	str	xzr, [sp, #608]
   301bc:	str	xzr, [sp, #616]
   301c0:	str	wzr, [sp, #640]
   301c4:	str	xzr, [sp, #648]
   301c8:	str	xzr, [sp, #656]
   301cc:	str	xzr, [sp, #680]
   301d0:	str	wzr, [sp, #688]
   301d4:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   301d8:	ldr	x1, [x19, #16]
   301dc:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   301e0:	mov	x0, x26
   301e4:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   301e8:	mov	x0, x25
   301ec:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   301f0:	ldp	x19, x20, [sp]
   301f4:	ldp	x21, x22, [sp, #16]
   301f8:	ldp	x23, x24, [sp, #32]
   301fc:	ldp	x25, x26, [sp, #48]
   30200:	ldp	x27, x28, [sp, #64]
   30204:	ldr	x30, [sp, #80]
   30208:	add	sp, sp, #0x2c0
   3020c:	ret
   30210:	ldr	x0, [x19, #16]
   30214:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30218:	mov	x2, #0x6                   	// #6
   3021c:	add	x1, x1, #0x720
   30220:	add	x0, x0, #0x4
   30224:	mov	w27, #0x1a                  	// #26
   30228:	bl	1a4e8 <__sanitizer_set_report_fd@@Base+0x2728>
   3022c:	cbnz	w0, 300e0 <__ubsan_default_options@@Base+0xa98>
   30230:	b	300dc <__ubsan_default_options@@Base+0xa94>
   30234:	nop
   30238:	sub	sp, sp, #0x280
   3023c:	mov	x4, x1
   30240:	add	x2, sp, #0x30
   30244:	add	x1, sp, #0x60
   30248:	mov	w3, #0x16                  	// #22
   3024c:	stp	x19, x20, [sp]
   30250:	mov	x19, x0
   30254:	add	x20, sp, #0x80
   30258:	ldr	x0, [x0]
   3025c:	stp	x21, x22, [sp, #16]
   30260:	ldr	d0, [x19, #8]
   30264:	mov	w22, #0x1                   	// #1
   30268:	str	w22, [sp, #208]
   3026c:	str	x0, [sp, #216]
   30270:	mov	x0, x20
   30274:	str	d0, [sp, #224]
   30278:	add	x21, sp, #0xd0
   3027c:	ldp	x6, x7, [sp, #224]
   30280:	stp	x6, x7, [sp, #64]
   30284:	ldp	x6, x7, [x4]
   30288:	str	x30, [sp, #32]
   3028c:	ldp	x8, x9, [sp, #208]
   30290:	stp	x8, x9, [sp, #48]
   30294:	ldr	x4, [x4, #16]
   30298:	stp	x6, x7, [sp, #96]
   3029c:	ldr	x5, [sp, #240]
   302a0:	str	x5, [sp, #80]
   302a4:	str	x4, [sp, #112]
   302a8:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   302ac:	str	w22, [sp, #208]
   302b0:	ldr	x3, [x19]
   302b4:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   302b8:	add	x1, x1, #0x768
   302bc:	ldr	d0, [x19, #8]
   302c0:	mov	x2, #0x1600000000          	// #94489280512
   302c4:	mov	x0, x21
   302c8:	str	x3, [sp, #216]
   302cc:	str	d0, [sp, #224]
   302d0:	stp	x2, x1, [sp, #248]
   302d4:	str	wzr, [sp, #528]
   302d8:	str	wzr, [sp, #536]
   302dc:	str	xzr, [sp, #544]
   302e0:	str	xzr, [sp, #552]
   302e4:	str	wzr, [sp, #576]
   302e8:	str	xzr, [sp, #584]
   302ec:	str	xzr, [sp, #592]
   302f0:	str	xzr, [sp, #616]
   302f4:	str	wzr, [sp, #624]
   302f8:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   302fc:	mov	x0, x20
   30300:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   30304:	ldp	x19, x20, [sp]
   30308:	ldp	x21, x22, [sp, #16]
   3030c:	ldr	x30, [sp, #32]
   30310:	add	sp, sp, #0x280
   30314:	ret
   30318:	sub	sp, sp, #0x280
   3031c:	mov	x4, x1
   30320:	add	x2, sp, #0x30
   30324:	add	x1, sp, #0x60
   30328:	mov	w3, #0x15                  	// #21
   3032c:	stp	x19, x20, [sp]
   30330:	mov	x19, x0
   30334:	add	x20, sp, #0x80
   30338:	ldr	x0, [x0]
   3033c:	stp	x21, x22, [sp, #16]
   30340:	ldr	d0, [x19, #8]
   30344:	mov	w22, #0x1                   	// #1
   30348:	str	w22, [sp, #208]
   3034c:	str	x0, [sp, #216]
   30350:	mov	x0, x20
   30354:	str	d0, [sp, #224]
   30358:	add	x21, sp, #0xd0
   3035c:	ldp	x6, x7, [sp, #224]
   30360:	stp	x6, x7, [sp, #64]
   30364:	ldp	x6, x7, [x4]
   30368:	str	x30, [sp, #32]
   3036c:	ldp	x8, x9, [sp, #208]
   30370:	stp	x8, x9, [sp, #48]
   30374:	ldr	x4, [x4, #16]
   30378:	stp	x6, x7, [sp, #96]
   3037c:	ldr	x5, [sp, #240]
   30380:	str	x5, [sp, #80]
   30384:	str	x4, [sp, #112]
   30388:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   3038c:	str	w22, [sp, #208]
   30390:	ldr	x3, [x19]
   30394:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30398:	add	x1, x1, #0x7c0
   3039c:	ldr	d0, [x19, #8]
   303a0:	mov	x2, #0x1500000000          	// #90194313216
   303a4:	mov	x0, x21
   303a8:	str	x3, [sp, #216]
   303ac:	str	d0, [sp, #224]
   303b0:	stp	x2, x1, [sp, #248]
   303b4:	str	wzr, [sp, #528]
   303b8:	str	wzr, [sp, #536]
   303bc:	str	xzr, [sp, #544]
   303c0:	str	xzr, [sp, #552]
   303c4:	str	wzr, [sp, #576]
   303c8:	str	xzr, [sp, #584]
   303cc:	str	xzr, [sp, #592]
   303d0:	str	xzr, [sp, #616]
   303d4:	str	wzr, [sp, #624]
   303d8:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   303dc:	mov	x0, x20
   303e0:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   303e4:	ldp	x19, x20, [sp]
   303e8:	ldp	x21, x22, [sp, #16]
   303ec:	ldr	x30, [sp, #32]
   303f0:	add	sp, sp, #0x280
   303f4:	ret
   303f8:	sub	sp, sp, #0x300
   303fc:	stp	x19, x20, [sp]
   30400:	mov	x20, x2
   30404:	mov	x19, x0
   30408:	stp	x21, x22, [sp, #16]
   3040c:	add	x22, sp, #0x150
   30410:	mov	x2, #0x8                   	// #8
   30414:	mov	x21, x1
   30418:	mov	x1, x0
   3041c:	mov	x0, x22
   30420:	stp	x23, x24, [sp, #32]
   30424:	stp	x25, x26, [sp, #48]
   30428:	stp	x27, x28, [sp, #64]
   3042c:	ldr	x23, [x20, #8]
   30430:	str	x30, [sp, #80]
   30434:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   30438:	ldr	x0, [sp, #336]
   3043c:	ldrb	w1, [x0]
   30440:	ldrb	w0, [x0, #1]
   30444:	add	w2, w1, w0
   30448:	cmp	w2, #0x1
   3044c:	b.ls	304b0 <__ubsan_default_options@@Base+0xe68>  // b.plast
   30450:	cmp	w1, #0xff
   30454:	b.eq	304b0 <__ubsan_default_options@@Base+0xe68>  // b.none
   30458:	cmp	w0, #0xff
   3045c:	b.eq	304b0 <__ubsan_default_options@@Base+0xe68>  // b.none
   30460:	add	x0, x19, #0xc
   30464:	mov	w1, #0xffffffff            	// #-1
   30468:	ldxr	w26, [x0]
   3046c:	stxr	w2, w1, [x0]
   30470:	cbnz	w2, 30468 <__ubsan_default_options@@Base+0xe20>
   30474:	dmb	ish
   30478:	ldrb	w0, [x20]
   3047c:	ldr	w28, [x19, #8]
   30480:	ldr	x27, [x19]
   30484:	cbnz	w0, 305f0 <__ubsan_default_options@@Base+0xfa8>
   30488:	cmn	w26, #0x1
   3048c:	b.ne	305d4 <__ubsan_default_options@@Base+0xf8c>  // b.any
   30490:	ldp	x19, x20, [sp]
   30494:	ldp	x21, x22, [sp, #16]
   30498:	ldp	x23, x24, [sp, #32]
   3049c:	ldp	x25, x26, [sp, #48]
   304a0:	ldp	x27, x28, [sp, #64]
   304a4:	ldr	x30, [sp, #80]
   304a8:	add	sp, sp, #0x300
   304ac:	ret
   304b0:	cbz	x23, 30600 <__ubsan_default_options@@Base+0xfb8>
   304b4:	sub	x0, x23, #0x4
   304b8:	bl	2e3e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bc0>
   304bc:	ldp	x23, x9, [x19]
   304c0:	mov	x25, x0
   304c4:	mov	x24, x0
   304c8:	mov	w26, #0x0                   	// #0
   304cc:	mov	w28, #0x0                   	// #0
   304d0:	mov	x27, #0x0                   	// #0
   304d4:	mov	w8, #0x3                   	// #3
   304d8:	str	w8, [sp, #216]
   304dc:	add	x19, sp, #0x100
   304e0:	str	x27, [sp, #224]
   304e4:	add	x2, sp, #0x70
   304e8:	stp	w28, w26, [sp, #232]
   304ec:	mov	x0, x19
   304f0:	ldp	x6, x7, [sp, #216]
   304f4:	stp	x6, x7, [sp, #112]
   304f8:	add	x1, sp, #0xa0
   304fc:	ldp	x6, x7, [x20]
   30500:	mov	w3, #0x18                  	// #24
   30504:	ldp	x4, x5, [sp, #232]
   30508:	stp	x4, x5, [sp, #128]
   3050c:	ldr	x4, [x20, #16]
   30510:	str	w8, [sp, #100]
   30514:	str	x9, [sp, #104]
   30518:	str	x24, [sp, #144]
   3051c:	stp	x6, x7, [sp, #160]
   30520:	str	x4, [sp, #176]
   30524:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   30528:	ldr	w8, [sp, #100]
   3052c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30530:	add	x2, x2, #0x808
   30534:	mov	x3, #0x1800000000          	// #103079215104
   30538:	add	x1, sp, #0xc8
   3053c:	mov	x0, x22
   30540:	stp	x23, x21, [sp, #200]
   30544:	str	w8, [sp, #336]
   30548:	str	x27, [sp, #344]
   3054c:	str	w28, [sp, #352]
   30550:	str	w26, [sp, #356]
   30554:	stp	x24, x3, [sp, #368]
   30558:	str	x2, [sp, #384]
   3055c:	str	wzr, [sp, #656]
   30560:	str	wzr, [sp, #664]
   30564:	str	xzr, [sp, #672]
   30568:	str	xzr, [sp, #680]
   3056c:	str	wzr, [sp, #704]
   30570:	str	xzr, [sp, #712]
   30574:	str	xzr, [sp, #720]
   30578:	str	xzr, [sp, #744]
   3057c:	str	wzr, [sp, #752]
   30580:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   30584:	mov	x1, x23
   30588:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   3058c:	ldr	x9, [sp, #104]
   30590:	mov	x1, x9
   30594:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   30598:	mov	x0, x22
   3059c:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   305a0:	mov	x0, x19
   305a4:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   305a8:	cbz	x25, 30490 <__ubsan_default_options@@Base+0xe48>
   305ac:	mov	x0, x25
   305b0:	bl	29160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   305b4:	ldp	x19, x20, [sp]
   305b8:	ldp	x21, x22, [sp, #16]
   305bc:	ldp	x23, x24, [sp, #32]
   305c0:	ldp	x25, x26, [sp, #48]
   305c4:	ldp	x27, x28, [sp, #64]
   305c8:	ldr	x30, [sp, #80]
   305cc:	add	sp, sp, #0x300
   305d0:	ret
   305d4:	mov	x1, x23
   305d8:	mov	x2, x27
   305dc:	mov	w0, #0x18                  	// #24
   305e0:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   305e4:	tst	w0, #0xff
   305e8:	b.ne	30490 <__ubsan_default_options@@Base+0xe48>  // b.any
   305ec:	nop
   305f0:	mov	w8, #0x1                   	// #1
   305f4:	mov	x25, #0x0                   	// #0
   305f8:	ldp	x23, x9, [x19, #16]
   305fc:	b	304d8 <__ubsan_default_options@@Base+0xe90>
   30600:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30604:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30608:	add	x2, x2, #0x7f0
   3060c:	add	x0, x0, #0xc8
   30610:	mov	x4, #0x0                   	// #0
   30614:	mov	x3, #0x0                   	// #0
   30618:	mov	w1, #0x2c                  	// #44
   3061c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   30620:	sub	sp, sp, #0x290
   30624:	mov	x4, x1
   30628:	mov	w1, #0xffffffff            	// #-1
   3062c:	stp	x19, x20, [sp]
   30630:	mov	x19, x0
   30634:	add	x0, x0, #0xc
   30638:	stp	x21, x22, [sp, #16]
   3063c:	stp	x23, x24, [sp, #32]
   30640:	str	x30, [sp, #48]
   30644:	ldxr	w22, [x0]
   30648:	stxr	w2, w1, [x0]
   3064c:	cbnz	w2, 30644 <__ubsan_default_options@@Base+0xffc>
   30650:	dmb	ish
   30654:	ldr	x24, [x19]
   30658:	mov	w21, #0x1                   	// #1
   3065c:	ldr	w23, [x19, #8]
   30660:	add	x20, sp, #0x90
   30664:	str	w21, [sp, #224]
   30668:	mov	x0, x20
   3066c:	str	x24, [sp, #232]
   30670:	add	x2, sp, #0x40
   30674:	stp	w23, w22, [sp, #240]
   30678:	add	x1, sp, #0x70
   3067c:	ldp	x6, x7, [sp, #224]
   30680:	stp	x6, x7, [sp, #64]
   30684:	mov	w3, #0xd                   	// #13
   30688:	ldp	x6, x7, [sp, #240]
   3068c:	stp	x6, x7, [sp, #80]
   30690:	ldp	x6, x7, [x4]
   30694:	stp	x6, x7, [sp, #112]
   30698:	ldr	x4, [x4, #16]
   3069c:	str	x4, [sp, #128]
   306a0:	ldr	x5, [sp, #256]
   306a4:	str	x5, [sp, #96]
   306a8:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   306ac:	str	w21, [sp, #224]
   306b0:	ldrb	w2, [x19, #16]
   306b4:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   306b8:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   306bc:	add	x0, x0, #0x850
   306c0:	cmp	w2, #0x0
   306c4:	add	x1, x1, #0x848
   306c8:	csel	x1, x1, x0, eq  // eq = none
   306cc:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   306d0:	add	x2, x2, #0x858
   306d4:	mov	x3, #0xd00000000           	// #55834574848
   306d8:	add	x0, sp, #0xe0
   306dc:	str	x24, [sp, #232]
   306e0:	stp	w23, w22, [sp, #240]
   306e4:	stp	x3, x2, [sp, #264]
   306e8:	str	wzr, [sp, #288]
   306ec:	str	x1, [sp, #304]
   306f0:	str	w21, [sp, #544]
   306f4:	str	wzr, [sp, #552]
   306f8:	str	xzr, [sp, #560]
   306fc:	str	xzr, [sp, #568]
   30700:	str	wzr, [sp, #592]
   30704:	str	xzr, [sp, #600]
   30708:	str	xzr, [sp, #608]
   3070c:	str	xzr, [sp, #632]
   30710:	str	wzr, [sp, #640]
   30714:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30718:	mov	x0, x20
   3071c:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   30720:	ldp	x19, x20, [sp]
   30724:	ldp	x21, x22, [sp, #16]
   30728:	ldp	x23, x24, [sp, #32]
   3072c:	ldr	x30, [sp, #48]
   30730:	add	sp, sp, #0x290
   30734:	ret
   30738:	sub	sp, sp, #0x2e0
   3073c:	stp	x19, x20, [sp]
   30740:	mov	x19, x0
   30744:	mov	x20, x5
   30748:	add	x0, x0, #0xc
   3074c:	stp	x21, x22, [sp, #16]
   30750:	mov	x21, x1
   30754:	ldrb	w1, [x5]
   30758:	stp	x23, x24, [sp, #32]
   3075c:	stp	x25, x26, [sp, #48]
   30760:	stp	x27, x28, [sp, #64]
   30764:	str	x30, [sp, #80]
   30768:	str	x2, [sp, #104]
   3076c:	mov	w2, #0xffffffff            	// #-1
   30770:	stp	x3, x4, [sp, #192]
   30774:	ldxr	w25, [x0]
   30778:	stxr	w3, w2, [x0]
   3077c:	cbnz	w3, 30774 <__ubsan_default_options@@Base+0x112c>
   30780:	dmb	ish
   30784:	ldr	x0, [x19, #16]
   30788:	mov	w24, w1
   3078c:	ldr	w28, [x19, #8]
   30790:	ldr	x26, [x19]
   30794:	ldrh	w2, [x0]
   30798:	cbnz	w2, 307b4 <__ubsan_default_options@@Base+0x116c>
   3079c:	ldrh	w0, [x0, #2]
   307a0:	tbz	w0, #0, 307b4 <__ubsan_default_options@@Base+0x116c>
   307a4:	cbnz	w1, 3093c <__ubsan_default_options@@Base+0x12f4>
   307a8:	mov	w24, #0x1                   	// #1
   307ac:	mov	w27, #0x9                   	// #9
   307b0:	b	307bc <__ubsan_default_options@@Base+0x1174>
   307b4:	cbnz	w1, 307f4 <__ubsan_default_options@@Base+0x11ac>
   307b8:	mov	w27, #0xa                   	// #10
   307bc:	cmn	w25, #0x1
   307c0:	b.eq	3091c <__ubsan_default_options@@Base+0x12d4>  // b.none
   307c4:	ldr	x1, [x20, #8]
   307c8:	mov	x2, x26
   307cc:	mov	w0, w27
   307d0:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   307d4:	tst	w0, #0xff
   307d8:	b.ne	3091c <__ubsan_default_options@@Base+0x12d4>  // b.any
   307dc:	cbnz	w24, 307fc <__ubsan_default_options@@Base+0x11b4>
   307e0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   307e4:	ldr	x0, [x0, #3704]
   307e8:	ldrb	w24, [x0, #17]
   307ec:	cbz	w24, 307fc <__ubsan_default_options@@Base+0x11b4>
   307f0:	b	3091c <__ubsan_default_options@@Base+0x12d4>
   307f4:	mov	w24, #0x0                   	// #0
   307f8:	mov	w27, #0xa                   	// #10
   307fc:	mov	w9, #0x1                   	// #1
   30800:	str	w9, [sp, #304]
   30804:	str	x26, [sp, #312]
   30808:	add	x22, sp, #0xe0
   3080c:	str	w28, [sp, #320]
   30810:	mov	x0, x22
   30814:	str	w25, [sp, #324]
   30818:	mov	w3, w27
   3081c:	ldp	x6, x7, [sp, #304]
   30820:	stp	x6, x7, [sp, #112]
   30824:	add	x2, sp, #0x70
   30828:	ldp	x4, x5, [sp, #320]
   3082c:	add	x1, sp, #0xa0
   30830:	ldr	x6, [x20, #16]
   30834:	stp	x4, x5, [sp, #128]
   30838:	add	x23, sp, #0x130
   3083c:	ldp	x4, x5, [x20]
   30840:	stp	x4, x5, [sp, #160]
   30844:	ldr	x10, [sp, #336]
   30848:	str	x10, [sp, #144]
   3084c:	str	x6, [sp, #176]
   30850:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   30854:	str	x26, [sp, #312]
   30858:	ldr	x4, [x19, #16]
   3085c:	stp	x4, x21, [sp, #208]
   30860:	add	x4, sp, #0x150
   30864:	cmp	w24, #0x0
   30868:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   3086c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30870:	add	x0, x0, #0x898
   30874:	add	x2, x2, #0x890
   30878:	mov	w9, #0x1                   	// #1
   3087c:	csel	x2, x2, x0, ne  // ne = any
   30880:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30884:	add	x3, x3, #0x8a8
   30888:	str	w9, [sp, #304]
   3088c:	stp	w28, w25, [x4, #-16]
   30890:	add	x1, sp, #0xd0
   30894:	stp	wzr, w27, [x4, #8]
   30898:	mov	x0, x23
   3089c:	str	x3, [sp, #352]
   308a0:	str	wzr, [sp, #368]
   308a4:	str	x2, [sp, #384]
   308a8:	str	w9, [sp, #624]
   308ac:	str	wzr, [sp, #632]
   308b0:	str	xzr, [sp, #640]
   308b4:	str	xzr, [sp, #648]
   308b8:	str	wzr, [sp, #672]
   308bc:	str	xzr, [sp, #680]
   308c0:	str	xzr, [sp, #688]
   308c4:	str	xzr, [sp, #712]
   308c8:	str	wzr, [sp, #720]
   308cc:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   308d0:	ldr	w1, [x0, #320]
   308d4:	cmp	w1, #0x8
   308d8:	b.eq	30944 <__ubsan_default_options@@Base+0x12fc>  // b.none
   308dc:	ubfiz	x3, x1, #5, #32
   308e0:	add	w1, w1, #0x1
   308e4:	add	x3, x3, #0x40
   308e8:	str	w1, [x0, #320]
   308ec:	add	x4, x0, x3
   308f0:	add	x1, sp, #0xc0
   308f4:	ldr	x2, [sp, #104]
   308f8:	str	wzr, [x0, x3]
   308fc:	str	x2, [x4, #16]
   30900:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   30904:	ldr	x1, [x19, #16]
   30908:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   3090c:	mov	x0, x23
   30910:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30914:	mov	x0, x22
   30918:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   3091c:	ldp	x19, x20, [sp]
   30920:	ldp	x21, x22, [sp, #16]
   30924:	ldp	x23, x24, [sp, #32]
   30928:	ldp	x25, x26, [sp, #48]
   3092c:	ldp	x27, x28, [sp, #64]
   30930:	ldr	x30, [sp, #80]
   30934:	add	sp, sp, #0x2e0
   30938:	ret
   3093c:	mov	w27, #0x9                   	// #9
   30940:	b	307fc <__ubsan_default_options@@Base+0x11b4>
   30944:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30948:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   3094c:	add	x2, x2, #0x140
   30950:	add	x0, x0, #0xc8
   30954:	mov	x4, #0x0                   	// #0
   30958:	mov	x3, #0x0                   	// #0
   3095c:	mov	w1, #0xc0                  	// #192
   30960:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   30964:	nop
   30968:	sub	sp, sp, #0x2a0
   3096c:	stp	x19, x20, [sp]
   30970:	mov	x19, x0
   30974:	add	x0, x0, #0xc
   30978:	stp	x23, x24, [sp, #32]
   3097c:	and	w23, w2, #0xff
   30980:	mov	x20, x1
   30984:	mov	w1, #0xffffffff            	// #-1
   30988:	stp	x21, x22, [sp, #16]
   3098c:	stp	x25, x26, [sp, #48]
   30990:	str	x30, [sp, #72]
   30994:	ldxr	w21, [x0]
   30998:	stxr	w2, w1, [x0]
   3099c:	cbnz	w2, 30994 <__ubsan_default_options@@Base+0x134c>
   309a0:	dmb	ish
   309a4:	ldrb	w0, [x20]
   309a8:	ldr	w25, [x19, #8]
   309ac:	ldr	x22, [x19]
   309b0:	cbnz	w0, 309f0 <__ubsan_default_options@@Base+0x13a8>
   309b4:	cmp	w21, w1
   309b8:	b.ne	309d8 <__ubsan_default_options@@Base+0x1390>  // b.any
   309bc:	ldp	x19, x20, [sp]
   309c0:	ldp	x21, x22, [sp, #16]
   309c4:	ldp	x23, x24, [sp, #32]
   309c8:	ldp	x25, x26, [sp, #48]
   309cc:	ldr	x30, [sp, #72]
   309d0:	add	sp, sp, #0x2a0
   309d4:	ret
   309d8:	ldr	x1, [x20, #8]
   309dc:	mov	x2, x22
   309e0:	mov	w0, #0x1d                  	// #29
   309e4:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   309e8:	tst	w0, #0xff
   309ec:	b.ne	309bc <__ubsan_default_options@@Base+0x1374>  // b.any
   309f0:	mov	w26, #0x1                   	// #1
   309f4:	str	w26, [sp, #240]
   309f8:	str	x22, [sp, #248]
   309fc:	add	x2, sp, #0x50
   30a00:	str	w25, [sp, #256]
   30a04:	add	x1, sp, #0x80
   30a08:	str	w21, [sp, #260]
   30a0c:	mov	w3, #0x1d                  	// #29
   30a10:	ldp	x6, x7, [sp, #240]
   30a14:	stp	x6, x7, [sp, #80]
   30a18:	add	x24, sp, #0xf0
   30a1c:	ldp	x6, x7, [x20]
   30a20:	str	x27, [sp, #64]
   30a24:	ldp	x4, x5, [sp, #256]
   30a28:	stp	x4, x5, [sp, #96]
   30a2c:	add	x27, sp, #0xa0
   30a30:	ldr	x4, [x20, #16]
   30a34:	mov	x0, x27
   30a38:	ldr	x8, [sp, #272]
   30a3c:	str	x8, [sp, #112]
   30a40:	stp	x6, x7, [sp, #128]
   30a44:	str	x4, [sp, #144]
   30a48:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   30a4c:	ldrsw	x2, [x19, #32]
   30a50:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30a54:	add	x1, x1, #0x908
   30a58:	mov	x4, #0x1d00000000          	// #124554051584
   30a5c:	mov	w3, #0x2                   	// #2
   30a60:	mov	x0, x24
   30a64:	str	w26, [sp, #240]
   30a68:	str	x22, [sp, #248]
   30a6c:	str	w25, [sp, #256]
   30a70:	str	w21, [sp, #260]
   30a74:	stp	x4, x1, [sp, #280]
   30a78:	str	w3, [sp, #304]
   30a7c:	stp	x2, xzr, [sp, #320]
   30a80:	str	w26, [sp, #560]
   30a84:	str	wzr, [sp, #568]
   30a88:	str	xzr, [sp, #576]
   30a8c:	str	xzr, [sp, #584]
   30a90:	str	wzr, [sp, #608]
   30a94:	str	xzr, [sp, #616]
   30a98:	str	xzr, [sp, #624]
   30a9c:	str	xzr, [sp, #648]
   30aa0:	str	wzr, [sp, #656]
   30aa4:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30aa8:	ldr	x2, [x19, #16]
   30aac:	cbz	x2, 30b20 <__ubsan_default_options@@Base+0x14d8>
   30ab0:	cmp	w23, #0x0
   30ab4:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30ab8:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30abc:	add	x3, x3, #0x8e8
   30ac0:	add	x1, x1, #0x970
   30ac4:	mov	x4, #0x1                   	// #1
   30ac8:	csel	x1, x1, x3, ne  // ne = any
   30acc:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30ad0:	add	x3, x3, #0x950
   30ad4:	ldr	d0, [x19, #24]
   30ad8:	movk	x4, #0x1d, lsl #32
   30adc:	mov	x0, x24
   30ae0:	str	w26, [sp, #240]
   30ae4:	str	x2, [sp, #248]
   30ae8:	str	d0, [sp, #256]
   30aec:	stp	x4, x3, [sp, #280]
   30af0:	str	wzr, [sp, #304]
   30af4:	str	x1, [sp, #320]
   30af8:	str	w26, [sp, #560]
   30afc:	str	wzr, [sp, #568]
   30b00:	str	xzr, [sp, #576]
   30b04:	str	xzr, [sp, #584]
   30b08:	str	wzr, [sp, #608]
   30b0c:	str	xzr, [sp, #616]
   30b10:	str	xzr, [sp, #624]
   30b14:	str	xzr, [sp, #648]
   30b18:	str	wzr, [sp, #656]
   30b1c:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30b20:	mov	x0, x27
   30b24:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   30b28:	ldp	x19, x20, [sp]
   30b2c:	ldp	x21, x22, [sp, #16]
   30b30:	ldp	x23, x24, [sp, #32]
   30b34:	ldp	x25, x26, [sp, #48]
   30b38:	ldr	x27, [sp, #64]
   30b3c:	ldr	x30, [sp, #72]
   30b40:	add	sp, sp, #0x2a0
   30b44:	ret
   30b48:	sub	sp, sp, #0x2a0
   30b4c:	stp	x19, x20, [sp]
   30b50:	stp	x21, x22, [sp, #16]
   30b54:	stp	x23, x24, [sp, #32]
   30b58:	stp	x25, x26, [sp, #48]
   30b5c:	str	x30, [sp, #72]
   30b60:	cbz	x1, 30d20 <__ubsan_default_options@@Base+0x16d8>
   30b64:	mov	x19, x2
   30b68:	and	w22, w3, #0xff
   30b6c:	add	x2, x1, #0xc
   30b70:	mov	x25, x0
   30b74:	mov	w0, #0xffffffff            	// #-1
   30b78:	ldxr	w20, [x2]
   30b7c:	stxr	w3, w0, [x2]
   30b80:	cbnz	w3, 30b78 <__ubsan_default_options@@Base+0x1530>
   30b84:	dmb	ish
   30b88:	ldrb	w0, [x19]
   30b8c:	ldr	w24, [x1, #8]
   30b90:	ldr	x21, [x1]
   30b94:	cbnz	w0, 30bd8 <__ubsan_default_options@@Base+0x1590>
   30b98:	cmn	w20, #0x1
   30b9c:	b.ne	30bbc <__ubsan_default_options@@Base+0x1574>  // b.any
   30ba0:	ldp	x19, x20, [sp]
   30ba4:	ldp	x21, x22, [sp, #16]
   30ba8:	ldp	x23, x24, [sp, #32]
   30bac:	ldp	x25, x26, [sp, #48]
   30bb0:	ldr	x30, [sp, #72]
   30bb4:	add	sp, sp, #0x2a0
   30bb8:	ret
   30bbc:	ldr	x1, [x19, #8]
   30bc0:	mov	x2, x21
   30bc4:	mov	w0, #0x1c                  	// #28
   30bc8:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   30bcc:	tst	w0, #0xff
   30bd0:	b.ne	30ba0 <__ubsan_default_options@@Base+0x1558>  // b.any
   30bd4:	nop
   30bd8:	mov	w26, #0x1                   	// #1
   30bdc:	str	w26, [sp, #240]
   30be0:	str	x21, [sp, #248]
   30be4:	mov	w3, #0x1c                  	// #28
   30be8:	str	w24, [sp, #256]
   30bec:	add	x2, sp, #0x50
   30bf0:	str	w20, [sp, #260]
   30bf4:	add	x1, sp, #0x80
   30bf8:	ldp	x6, x7, [sp, #240]
   30bfc:	stp	x6, x7, [sp, #80]
   30c00:	add	x23, sp, #0xf0
   30c04:	ldp	x6, x7, [x19]
   30c08:	str	x27, [sp, #64]
   30c0c:	ldp	x4, x5, [sp, #256]
   30c10:	stp	x4, x5, [sp, #96]
   30c14:	add	x27, sp, #0xa0
   30c18:	ldr	x4, [x19, #16]
   30c1c:	mov	x0, x27
   30c20:	ldr	x8, [sp, #272]
   30c24:	str	x8, [sp, #112]
   30c28:	stp	x6, x7, [sp, #128]
   30c2c:	str	x4, [sp, #144]
   30c30:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   30c34:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30c38:	add	x1, x1, #0xa28
   30c3c:	mov	x2, #0x1c00000000          	// #120259084288
   30c40:	mov	x0, x23
   30c44:	str	w26, [sp, #240]
   30c48:	str	x21, [sp, #248]
   30c4c:	str	w24, [sp, #256]
   30c50:	str	w20, [sp, #260]
   30c54:	stp	x2, x1, [sp, #280]
   30c58:	str	wzr, [sp, #560]
   30c5c:	str	wzr, [sp, #568]
   30c60:	str	xzr, [sp, #576]
   30c64:	str	xzr, [sp, #584]
   30c68:	str	wzr, [sp, #608]
   30c6c:	str	xzr, [sp, #616]
   30c70:	str	xzr, [sp, #624]
   30c74:	str	xzr, [sp, #648]
   30c78:	str	wzr, [sp, #656]
   30c7c:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30c80:	ldr	x3, [x25]
   30c84:	cbz	x3, 30cf8 <__ubsan_default_options@@Base+0x16b0>
   30c88:	cmp	w22, #0x0
   30c8c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30c90:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30c94:	add	x2, x2, #0x988
   30c98:	add	x1, x1, #0x968
   30c9c:	mov	x4, #0x1                   	// #1
   30ca0:	csel	x1, x1, x2, ne  // ne = any
   30ca4:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30ca8:	add	x2, x2, #0x950
   30cac:	ldr	d0, [x25, #8]
   30cb0:	movk	x4, #0x1c, lsl #32
   30cb4:	mov	x0, x23
   30cb8:	str	w26, [sp, #240]
   30cbc:	str	x3, [sp, #248]
   30cc0:	str	d0, [sp, #256]
   30cc4:	stp	x4, x2, [sp, #280]
   30cc8:	str	wzr, [sp, #304]
   30ccc:	str	x1, [sp, #320]
   30cd0:	str	w26, [sp, #560]
   30cd4:	str	wzr, [sp, #568]
   30cd8:	str	xzr, [sp, #576]
   30cdc:	str	xzr, [sp, #584]
   30ce0:	str	wzr, [sp, #608]
   30ce4:	str	xzr, [sp, #616]
   30ce8:	str	xzr, [sp, #624]
   30cec:	str	xzr, [sp, #648]
   30cf0:	str	wzr, [sp, #656]
   30cf4:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30cf8:	mov	x0, x27
   30cfc:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   30d00:	ldp	x19, x20, [sp]
   30d04:	ldp	x21, x22, [sp, #16]
   30d08:	ldp	x23, x24, [sp, #32]
   30d0c:	ldp	x25, x26, [sp, #48]
   30d10:	ldr	x27, [sp, #64]
   30d14:	ldr	x30, [sp, #72]
   30d18:	add	sp, sp, #0x2a0
   30d1c:	ret
   30d20:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30d24:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30d28:	add	x2, x2, #0x9a8
   30d2c:	add	x0, x0, #0x9e0
   30d30:	mov	x4, #0x0                   	// #0
   30d34:	mov	x3, #0x0                   	// #0
   30d38:	mov	w1, #0x25c                 	// #604
   30d3c:	str	x27, [sp, #64]
   30d40:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   30d44:	nop
   30d48:	sub	sp, sp, #0x2f0
   30d4c:	stp	x25, x26, [sp, #48]
   30d50:	mov	x25, x1
   30d54:	add	x1, x0, #0xc
   30d58:	stp	x19, x20, [sp]
   30d5c:	stp	x21, x22, [sp, #16]
   30d60:	stp	x23, x24, [sp, #32]
   30d64:	stp	x27, x28, [sp, #64]
   30d68:	str	x30, [sp, #80]
   30d6c:	stp	x2, x3, [sp, #96]
   30d70:	mov	w2, #0xffffffff            	// #-1
   30d74:	ldxr	w21, [x1]
   30d78:	stxr	w3, w2, [x1]
   30d7c:	cbnz	w3, 30d74 <__ubsan_default_options@@Base+0x172c>
   30d80:	dmb	ish
   30d84:	ldp	x26, x28, [x0, #16]
   30d88:	mov	w23, #0x0                   	// #0
   30d8c:	ldr	w20, [x0, #8]
   30d90:	ldr	x10, [x0]
   30d94:	ldrh	w1, [x26]
   30d98:	cbnz	w1, 30da4 <__ubsan_default_options@@Base+0x175c>
   30d9c:	ldrh	w8, [x26, #2]
   30da0:	and	w23, w8, #0x1
   30da4:	ldrh	w1, [x28]
   30da8:	cbnz	w1, 30db4 <__ubsan_default_options@@Base+0x176c>
   30dac:	ldrh	w1, [x28, #2]
   30db0:	tbnz	w1, #0, 31064 <__ubsan_default_options@@Base+0x1a1c>
   30db4:	ldrb	w0, [x0, #32]
   30db8:	mov	w1, w23
   30dbc:	str	wzr, [sp, #116]
   30dc0:	cmp	w0, #0x2
   30dc4:	b.eq	31078 <__ubsan_default_options@@Base+0x1a30>  // b.none
   30dc8:	b.ls	30e14 <__ubsan_default_options@@Base+0x17cc>  // b.plast
   30dcc:	cmp	w0, #0x3
   30dd0:	mov	w19, #0x10                  	// #16
   30dd4:	b.eq	30de4 <__ubsan_default_options@@Base+0x179c>  // b.none
   30dd8:	cmp	w0, #0x4
   30ddc:	mov	w19, #0x11                  	// #17
   30de0:	csel	w19, wzr, w19, ne  // ne = any
   30de4:	ldrb	w0, [x25]
   30de8:	cbnz	w0, 30e30 <__ubsan_default_options@@Base+0x17e8>
   30dec:	cmn	w21, #0x1
   30df0:	b.ne	31024 <__ubsan_default_options@@Base+0x19dc>  // b.any
   30df4:	ldp	x19, x20, [sp]
   30df8:	ldp	x21, x22, [sp, #16]
   30dfc:	ldp	x23, x24, [sp, #32]
   30e00:	ldp	x25, x26, [sp, #48]
   30e04:	ldp	x27, x28, [sp, #64]
   30e08:	ldr	x30, [sp, #80]
   30e0c:	add	sp, sp, #0x2f0
   30e10:	ret
   30e14:	mov	w19, #0xe                   	// #14
   30e18:	cbnz	w0, 30de4 <__ubsan_default_options@@Base+0x179c>
   30e1c:	ldrb	w0, [x25]
   30e20:	cmp	w1, #0x0
   30e24:	cset	w19, ne  // ne = any
   30e28:	add	w19, w19, #0xe
   30e2c:	cbz	w0, 30dec <__ubsan_default_options@@Base+0x17a4>
   30e30:	mov	w22, #0x1                   	// #1
   30e34:	str	w22, [sp, #320]
   30e38:	str	x10, [sp, #328]
   30e3c:	add	x24, sp, #0xf0
   30e40:	str	w20, [sp, #336]
   30e44:	mov	w3, w19
   30e48:	str	w21, [sp, #340]
   30e4c:	add	x2, sp, #0x80
   30e50:	ldp	x6, x7, [sp, #320]
   30e54:	stp	x6, x7, [sp, #128]
   30e58:	mov	x0, x24
   30e5c:	ldp	x4, x5, [sp, #336]
   30e60:	stp	x4, x5, [sp, #144]
   30e64:	add	x1, sp, #0xb0
   30e68:	ldp	x4, x5, [x25]
   30e6c:	str	x10, [sp, #120]
   30e70:	ldr	x6, [sp, #352]
   30e74:	str	x6, [sp, #160]
   30e78:	ldr	x6, [x25, #16]
   30e7c:	stp	x4, x5, [sp, #176]
   30e80:	add	x27, sp, #0x140
   30e84:	str	x6, [sp, #192]
   30e88:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   30e8c:	str	w22, [sp, #320]
   30e90:	add	x3, sp, #0x160
   30e94:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30e98:	ldr	x10, [sp, #120]
   30e9c:	add	x2, x2, #0xa78
   30ea0:	str	x10, [sp, #328]
   30ea4:	mov	x1, x26
   30ea8:	stp	w20, w21, [x3, #-16]
   30eac:	mov	x0, x27
   30eb0:	stp	wzr, w19, [x3, #8]
   30eb4:	str	x2, [sp, #368]
   30eb8:	str	wzr, [sp, #640]
   30ebc:	str	wzr, [sp, #648]
   30ec0:	str	xzr, [sp, #656]
   30ec4:	str	xzr, [sp, #664]
   30ec8:	str	wzr, [sp, #688]
   30ecc:	str	xzr, [sp, #696]
   30ed0:	str	xzr, [sp, #704]
   30ed4:	str	xzr, [sp, #728]
   30ed8:	str	wzr, [sp, #736]
   30edc:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   30ee0:	ldr	x2, [sp, #96]
   30ee4:	add	x1, sp, #0xd0
   30ee8:	stp	x26, x2, [sp, #208]
   30eec:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   30ef0:	ldrh	w1, [x26]
   30ef4:	cbnz	w1, 31080 <__ubsan_default_options@@Base+0x1a38>
   30ef8:	ldrh	w1, [x26, #2]
   30efc:	ldr	w4, [x0, #320]
   30f00:	asr	w1, w1, #1
   30f04:	cmp	w4, #0x8
   30f08:	lsl	w5, w22, w1
   30f0c:	b.eq	310a0 <__ubsan_default_options@@Base+0x1a58>  // b.none
   30f10:	ubfiz	x3, x4, #5, #32
   30f14:	add	w1, w4, #0x1
   30f18:	add	x3, x3, #0x40
   30f1c:	str	w1, [x0, #320]
   30f20:	add	x6, x0, x3
   30f24:	mov	w19, #0x2                   	// #2
   30f28:	cmp	w23, #0x0
   30f2c:	adrp	x20, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   30f30:	str	w19, [x0, x3]
   30f34:	add	x20, x20, #0xa70
   30f38:	stp	x5, xzr, [x6, #16]
   30f3c:	adrp	x25, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   30f40:	add	x25, x25, #0x328
   30f44:	csel	x5, x25, x20, ne  // ne = any
   30f48:	cmp	w1, #0x8
   30f4c:	b.eq	310a0 <__ubsan_default_options@@Base+0x1a58>  // b.none
   30f50:	ubfiz	x1, x1, #5, #32
   30f54:	add	w4, w4, #0x2
   30f58:	add	x3, x1, #0x40
   30f5c:	str	w4, [x0, #320]
   30f60:	add	x4, x0, x3
   30f64:	mov	x1, x28
   30f68:	str	wzr, [x0, x3]
   30f6c:	str	x5, [x4, #16]
   30f70:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   30f74:	ldr	x2, [sp, #104]
   30f78:	add	x1, sp, #0xe0
   30f7c:	stp	x28, x2, [sp, #224]
   30f80:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   30f84:	mov	x1, x0
   30f88:	ldrh	w2, [x28]
   30f8c:	cbnz	w2, 31080 <__ubsan_default_options@@Base+0x1a38>
   30f90:	ldrh	w0, [x28, #2]
   30f94:	ldr	w3, [x1, #320]
   30f98:	asr	w0, w0, #1
   30f9c:	cmp	w3, #0x8
   30fa0:	lsl	w22, w22, w0
   30fa4:	b.eq	310a0 <__ubsan_default_options@@Base+0x1a58>  // b.none
   30fa8:	ubfiz	x2, x3, #5, #32
   30fac:	add	w0, w3, #0x1
   30fb0:	add	x2, x2, #0x40
   30fb4:	str	w0, [x1, #320]
   30fb8:	add	x5, x1, x2
   30fbc:	ldr	w4, [sp, #116]
   30fc0:	str	w19, [x1, x2]
   30fc4:	cmp	w4, #0x0
   30fc8:	stp	x22, xzr, [x5, #16]
   30fcc:	csel	x4, x25, x20, ne  // ne = any
   30fd0:	cmp	w0, #0x8
   30fd4:	b.eq	310a0 <__ubsan_default_options@@Base+0x1a58>  // b.none
   30fd8:	ubfiz	x0, x0, #5, #32
   30fdc:	add	w3, w3, #0x2
   30fe0:	add	x2, x0, #0x40
   30fe4:	str	w3, [x1, #320]
   30fe8:	add	x3, x1, x2
   30fec:	mov	x0, x27
   30ff0:	str	wzr, [x1, x2]
   30ff4:	str	x4, [x3, #16]
   30ff8:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30ffc:	mov	x0, x24
   31000:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   31004:	ldp	x19, x20, [sp]
   31008:	ldp	x21, x22, [sp, #16]
   3100c:	ldp	x23, x24, [sp, #32]
   31010:	ldp	x25, x26, [sp, #48]
   31014:	ldp	x27, x28, [sp, #64]
   31018:	ldr	x30, [sp, #80]
   3101c:	add	sp, sp, #0x2f0
   31020:	ret
   31024:	ldr	x1, [x25, #8]
   31028:	mov	x2, x10
   3102c:	mov	w0, w19
   31030:	str	x10, [sp, #120]
   31034:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   31038:	tst	w0, #0xff
   3103c:	ldr	x10, [sp, #120]
   31040:	b.eq	30e30 <__ubsan_default_options@@Base+0x17e8>  // b.none
   31044:	ldp	x19, x20, [sp]
   31048:	ldp	x21, x22, [sp, #16]
   3104c:	ldp	x23, x24, [sp, #32]
   31050:	ldp	x25, x26, [sp, #48]
   31054:	ldp	x27, x28, [sp, #64]
   31058:	ldr	x30, [sp, #80]
   3105c:	add	sp, sp, #0x2f0
   31060:	ret
   31064:	ldrb	w0, [x0, #32]
   31068:	mov	w1, #0x1                   	// #1
   3106c:	str	w1, [sp, #116]
   31070:	cmp	w0, #0x2
   31074:	b.ne	30dc8 <__ubsan_default_options@@Base+0x1780>  // b.any
   31078:	mov	w19, #0xf                   	// #15
   3107c:	b	30de4 <__ubsan_default_options@@Base+0x179c>
   31080:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31084:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31088:	add	x2, x2, #0xaf0
   3108c:	add	x0, x0, #0xb10
   31090:	mov	x4, #0x0                   	// #0
   31094:	mov	x3, #0x0                   	// #0
   31098:	mov	w1, #0x7c                  	// #124
   3109c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   310a0:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   310a4:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   310a8:	add	x2, x2, #0x140
   310ac:	add	x0, x0, #0xc8
   310b0:	mov	x4, #0x0                   	// #0
   310b4:	mov	x3, #0x0                   	// #0
   310b8:	mov	w1, #0xc0                  	// #192
   310bc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   310c0:	sub	sp, sp, #0x2f0
   310c4:	stp	x19, x20, [sp]
   310c8:	mov	x19, x0
   310cc:	add	x0, x0, #0xc
   310d0:	stp	x21, x22, [sp, #16]
   310d4:	mov	x21, x3
   310d8:	mov	x20, x1
   310dc:	stp	x23, x24, [sp, #32]
   310e0:	mov	x24, x2
   310e4:	mov	w1, #0xffffffff            	// #-1
   310e8:	stp	x25, x26, [sp, #48]
   310ec:	mov	x26, x4
   310f0:	stp	x27, x28, [sp, #64]
   310f4:	str	x30, [sp, #80]
   310f8:	ldxr	w28, [x0]
   310fc:	stxr	w2, w1, [x0]
   31100:	cbnz	w2, 310f8 <__ubsan_default_options@@Base+0x1ab0>
   31104:	dmb	ish
   31108:	ldr	w25, [x19, #8]
   3110c:	ldr	x22, [x19]
   31110:	add	x0, x19, #0x1c
   31114:	ldxr	w2, [x0]
   31118:	stxr	w3, w1, [x0]
   3111c:	cbnz	w3, 31114 <__ubsan_default_options@@Base+0x1acc>
   31120:	dmb	ish
   31124:	ldrb	w0, [x26]
   31128:	ldr	x1, [x19, #16]
   3112c:	str	x1, [sp, #96]
   31130:	ldr	w1, [x19, #24]
   31134:	str	w2, [sp, #104]
   31138:	str	w1, [sp, #108]
   3113c:	cbnz	w0, 31180 <__ubsan_default_options@@Base+0x1b38>
   31140:	cmn	w28, #0x1
   31144:	b.ne	31168 <__ubsan_default_options@@Base+0x1b20>  // b.any
   31148:	ldp	x19, x20, [sp]
   3114c:	ldp	x21, x22, [sp, #16]
   31150:	ldp	x23, x24, [sp, #32]
   31154:	ldp	x25, x26, [sp, #48]
   31158:	ldp	x27, x28, [sp, #64]
   3115c:	ldr	x30, [sp, #80]
   31160:	add	sp, sp, #0x2f0
   31164:	ret
   31168:	ldr	x1, [x26, #8]
   3116c:	mov	x2, x22
   31170:	mov	w0, #0x7                   	// #7
   31174:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   31178:	tst	w0, #0xff
   3117c:	b.ne	31148 <__ubsan_default_options@@Base+0x1b00>  // b.any
   31180:	mov	w11, #0x1                   	// #1
   31184:	str	w11, [sp, #200]
   31188:	str	x22, [sp, #208]
   3118c:	add	x23, sp, #0xf0
   31190:	stp	w25, w28, [sp, #216]
   31194:	mov	x0, x23
   31198:	ldp	x8, x9, [sp, #200]
   3119c:	stp	x8, x9, [sp, #112]
   311a0:	add	x2, sp, #0x70
   311a4:	ldp	x6, x7, [sp, #216]
   311a8:	stp	x6, x7, [sp, #128]
   311ac:	add	x1, sp, #0xa0
   311b0:	ldp	x6, x7, [x26]
   311b4:	mov	w3, #0x7                   	// #7
   311b8:	ldr	x8, [sp, #232]
   311bc:	str	x8, [sp, #144]
   311c0:	ldr	x8, [x26, #16]
   311c4:	stp	x6, x7, [sp, #160]
   311c8:	str	x8, [sp, #176]
   311cc:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   311d0:	subs	x20, x20, x21
   311d4:	mov	w11, #0x1                   	// #1
   311d8:	b.eq	313b4 <__ubsan_default_options@@Base+0x1d6c>  // b.none
   311dc:	rbit	x27, x20
   311e0:	sub	x26, x24, #0x1
   311e4:	clz	x27, x27
   311e8:	mov	x2, #0x1                   	// #1
   311ec:	and	x26, x26, x20
   311f0:	lsl	x27, x2, x27
   311f4:	ldr	x1, [x19, #32]
   311f8:	add	x19, sp, #0x140
   311fc:	cbnz	x21, 31374 <__ubsan_default_options@@Base+0x1d2c>
   31200:	mov	x0, x19
   31204:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31208:	mov	x7, #0x700000000           	// #30064771072
   3120c:	add	x3, x3, #0xb60
   31210:	mov	w6, #0x2                   	// #2
   31214:	str	w2, [sp, #320]
   31218:	str	x22, [sp, #328]
   3121c:	str	w25, [sp, #336]
   31220:	str	w28, [sp, #340]
   31224:	stp	x7, x3, [sp, #360]
   31228:	str	w6, [sp, #384]
   3122c:	stp	x24, xzr, [sp, #400]
   31230:	str	w11, [sp, #640]
   31234:	str	wzr, [sp, #648]
   31238:	str	xzr, [sp, #656]
   3123c:	str	xzr, [sp, #664]
   31240:	str	wzr, [sp, #688]
   31244:	str	xzr, [sp, #696]
   31248:	str	xzr, [sp, #704]
   3124c:	str	xzr, [sp, #728]
   31250:	str	wzr, [sp, #736]
   31254:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   31258:	mov	x0, x19
   3125c:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31260:	ldr	x4, [sp, #96]
   31264:	cbz	x4, 312c4 <__ubsan_default_options@@Base+0x1c7c>
   31268:	mov	w3, #0x1                   	// #1
   3126c:	str	w3, [sp, #320]
   31270:	ldr	w3, [sp, #108]
   31274:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31278:	str	w3, [sp, #336]
   3127c:	add	x1, x1, #0xbf8
   31280:	ldr	w3, [sp, #104]
   31284:	mov	x2, #0x1                   	// #1
   31288:	movk	x2, #0x7, lsl #32
   3128c:	mov	x0, x19
   31290:	str	x4, [sp, #328]
   31294:	str	w3, [sp, #340]
   31298:	stp	x2, x1, [sp, #360]
   3129c:	str	wzr, [sp, #640]
   312a0:	str	wzr, [sp, #648]
   312a4:	str	xzr, [sp, #656]
   312a8:	str	xzr, [sp, #664]
   312ac:	str	wzr, [sp, #688]
   312b0:	str	xzr, [sp, #696]
   312b4:	str	xzr, [sp, #704]
   312b8:	str	xzr, [sp, #728]
   312bc:	str	wzr, [sp, #736]
   312c0:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   312c4:	cmp	x21, #0x0
   312c8:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9458>
   312cc:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   312d0:	add	x2, x2, #0x328
   312d4:	add	x1, x1, #0xb58
   312d8:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   312dc:	csel	x1, x1, x2, ne  // ne = any
   312e0:	add	x3, x3, #0xc20
   312e4:	mov	x5, #0x1                   	// #1
   312e8:	mov	w2, #0x2                   	// #2
   312ec:	movk	x5, #0x7, lsl #32
   312f0:	mov	w4, #0x3                   	// #3
   312f4:	mov	x0, x19
   312f8:	str	w2, [sp, #320]
   312fc:	str	xzr, [sp, #328]
   31300:	str	xzr, [sp, #336]
   31304:	str	x20, [sp, #344]
   31308:	stp	x5, x3, [sp, #360]
   3130c:	str	wzr, [sp, #384]
   31310:	str	x1, [sp, #400]
   31314:	str	w2, [sp, #416]
   31318:	stp	x27, xzr, [sp, #432]
   3131c:	str	w2, [sp, #448]
   31320:	stp	x26, xzr, [sp, #464]
   31324:	str	w4, [sp, #640]
   31328:	str	wzr, [sp, #648]
   3132c:	str	xzr, [sp, #656]
   31330:	str	xzr, [sp, #664]
   31334:	str	wzr, [sp, #688]
   31338:	str	xzr, [sp, #696]
   3133c:	str	xzr, [sp, #704]
   31340:	str	xzr, [sp, #728]
   31344:	str	wzr, [sp, #736]
   31348:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   3134c:	mov	x0, x23
   31350:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   31354:	ldp	x19, x20, [sp]
   31358:	ldp	x21, x22, [sp, #16]
   3135c:	ldp	x23, x24, [sp, #32]
   31360:	ldp	x25, x26, [sp, #48]
   31364:	ldp	x27, x28, [sp, #64]
   31368:	ldr	x30, [sp, #80]
   3136c:	add	sp, sp, #0x2f0
   31370:	ret
   31374:	mov	w3, #0x2                   	// #2
   31378:	adrp	x6, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   3137c:	mov	x7, #0x700000000           	// #30064771072
   31380:	add	x6, x6, #0xba0
   31384:	mov	x0, x19
   31388:	str	w2, [sp, #320]
   3138c:	str	x22, [sp, #328]
   31390:	str	w25, [sp, #336]
   31394:	str	w28, [sp, #340]
   31398:	stp	x7, x6, [sp, #360]
   3139c:	str	w3, [sp, #384]
   313a0:	stp	x24, xzr, [sp, #400]
   313a4:	str	w3, [sp, #416]
   313a8:	stp	x21, xzr, [sp, #432]
   313ac:	str	w3, [sp, #640]
   313b0:	b	31234 <__ubsan_default_options@@Base+0x1bec>
   313b4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1458>
   313b8:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   313bc:	add	x2, x2, #0x6d0
   313c0:	add	x0, x0, #0x188
   313c4:	mov	x4, #0x0                   	// #0
   313c8:	mov	x3, #0x0                   	// #0
   313cc:	mov	w1, #0x171                 	// #369
   313d0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   313d4:	nop
   313d8:	sub	sp, sp, #0x2c0
   313dc:	stp	x19, x20, [sp]
   313e0:	mov	x19, x0
   313e4:	ldrb	w0, [x0]
   313e8:	stp	x21, x22, [sp, #16]
   313ec:	sub	w0, w0, #0x4
   313f0:	stp	x23, x24, [sp, #32]
   313f4:	and	w0, w0, #0xff
   313f8:	cmp	w0, #0x1
   313fc:	stp	x25, x26, [sp, #48]
   31400:	stp	x27, x28, [sp, #64]
   31404:	ldr	x26, [x2, #8]
   31408:	str	x30, [sp, #80]
   3140c:	b.hi	316fc <__ubsan_default_options@@Base+0x20b4>  // b.pmore
   31410:	mov	x28, x2
   31414:	add	x0, x19, #0x14
   31418:	mov	x20, x1
   3141c:	mov	w1, #0xffffffff            	// #-1
   31420:	ldxr	w21, [x0]
   31424:	stxr	w2, w1, [x0]
   31428:	cbnz	w2, 31420 <__ubsan_default_options@@Base+0x1dd8>
   3142c:	dmb	ish
   31430:	ldrb	w0, [x28]
   31434:	ldr	w24, [x19, #16]
   31438:	ldr	x23, [x19, #8]
   3143c:	cbnz	w0, 31480 <__ubsan_default_options@@Base+0x1e38>
   31440:	cmp	w21, w1
   31444:	b.ne	31468 <__ubsan_default_options@@Base+0x1e20>  // b.any
   31448:	ldp	x19, x20, [sp]
   3144c:	ldp	x21, x22, [sp, #16]
   31450:	ldp	x23, x24, [sp, #32]
   31454:	ldp	x25, x26, [sp, #48]
   31458:	ldp	x27, x28, [sp, #64]
   3145c:	ldr	x30, [sp, #80]
   31460:	add	sp, sp, #0x2c0
   31464:	ret
   31468:	mov	x2, x23
   3146c:	mov	x1, x26
   31470:	mov	w0, #0x1f                  	// #31
   31474:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   31478:	tst	w0, #0xff
   3147c:	b.ne	31448 <__ubsan_default_options@@Base+0x1e00>  // b.any
   31480:	mov	w25, #0x1                   	// #1
   31484:	str	w25, [sp, #272]
   31488:	str	x23, [sp, #280]
   3148c:	add	x27, sp, #0xc0
   31490:	str	w24, [sp, #288]
   31494:	mov	x0, x27
   31498:	str	w21, [sp, #292]
   3149c:	add	x2, sp, #0x60
   314a0:	ldp	x6, x7, [sp, #272]
   314a4:	stp	x6, x7, [sp, #96]
   314a8:	add	x1, sp, #0x90
   314ac:	ldp	x6, x7, [x28]
   314b0:	mov	w3, #0x1f                  	// #31
   314b4:	ldp	x4, x5, [sp, #288]
   314b8:	stp	x4, x5, [sp, #112]
   314bc:	add	x22, sp, #0x110
   314c0:	ldr	x4, [x28, #16]
   314c4:	stp	x6, x7, [sp, #144]
   314c8:	ldr	x8, [sp, #304]
   314cc:	str	x8, [sp, #128]
   314d0:	str	x4, [sp, #160]
   314d4:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   314d8:	str	w25, [sp, #272]
   314dc:	ldrb	w2, [x19]
   314e0:	mov	x3, #0x1f00000000          	// #133143986176
   314e4:	ldr	x1, [x19, #24]
   314e8:	cmp	w2, #0x5
   314ec:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   314f0:	add	x2, x2, #0xcb8
   314f4:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   314f8:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   314fc:	add	x0, x0, #0xc90
   31500:	add	x19, x19, #0xc60
   31504:	csel	x19, x19, x0, eq  // eq = none
   31508:	mov	x0, x22
   3150c:	str	x23, [sp, #280]
   31510:	str	w24, [sp, #288]
   31514:	str	w21, [sp, #292]
   31518:	stp	x3, x2, [sp, #312]
   3151c:	str	wzr, [sp, #592]
   31520:	str	wzr, [sp, #600]
   31524:	str	xzr, [sp, #608]
   31528:	str	xzr, [sp, #616]
   3152c:	str	wzr, [sp, #640]
   31530:	str	xzr, [sp, #648]
   31534:	str	xzr, [sp, #656]
   31538:	str	xzr, [sp, #680]
   3153c:	str	wzr, [sp, #688]
   31540:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   31544:	mov	x1, x0
   31548:	ldr	w0, [x0, #320]
   3154c:	cmp	w0, #0x8
   31550:	b.eq	31670 <__ubsan_default_options@@Base+0x2028>  // b.none
   31554:	ubfiz	x2, x0, #5, #32
   31558:	add	w0, w0, #0x1
   3155c:	add	x2, x2, #0x40
   31560:	str	w0, [x1, #320]
   31564:	add	x3, x1, x2
   31568:	mov	x0, x22
   3156c:	str	wzr, [x1, x2]
   31570:	str	x19, [x3, #16]
   31574:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31578:	mov	x0, x20
   3157c:	bl	2e3e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bc0>
   31580:	mov	x19, x0
   31584:	adrp	x20, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31588:	add	x20, x20, #0xca8
   3158c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31590:	mov	x3, #0x1                   	// #1
   31594:	add	x2, x2, #0xcf8
   31598:	ldr	x1, [x19, #40]
   3159c:	mov	w4, #0x3                   	// #3
   315a0:	movk	x3, #0x1f, lsl #32
   315a4:	mov	x0, x22
   315a8:	cmp	x1, #0x0
   315ac:	str	w4, [sp, #272]
   315b0:	csel	x1, x20, x1, eq  // eq = none
   315b4:	str	xzr, [sp, #280]
   315b8:	str	xzr, [sp, #288]
   315bc:	stp	x19, x3, [sp, #304]
   315c0:	str	x2, [sp, #320]
   315c4:	str	wzr, [sp, #336]
   315c8:	str	x1, [sp, #352]
   315cc:	str	w25, [sp, #592]
   315d0:	str	wzr, [sp, #600]
   315d4:	str	xzr, [sp, #608]
   315d8:	str	xzr, [sp, #616]
   315dc:	str	wzr, [sp, #640]
   315e0:	str	xzr, [sp, #648]
   315e4:	str	xzr, [sp, #656]
   315e8:	str	xzr, [sp, #680]
   315ec:	str	wzr, [sp, #688]
   315f0:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   315f4:	ldr	x25, [x19, #16]
   315f8:	cmp	x25, #0x0
   315fc:	csel	x25, x20, x25, eq  // eq = none
   31600:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   31604:	str	xzr, [sp, #184]
   31608:	mov	x1, x26
   3160c:	mov	x3, x22
   31610:	add	x2, sp, #0xb8
   31614:	mov	x26, x20
   31618:	bl	29fe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b8>
   3161c:	tst	w0, #0xff
   31620:	b.eq	31630 <__ubsan_default_options@@Base+0x1fe8>  // b.none
   31624:	ldr	x26, [sp, #184]
   31628:	cmp	x26, #0x0
   3162c:	csel	x26, x20, x26, eq  // eq = none
   31630:	mov	x1, x25
   31634:	mov	x0, x26
   31638:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   3163c:	cbnz	w0, 31690 <__ubsan_default_options@@Base+0x2048>
   31640:	mov	x0, x19
   31644:	bl	29160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   31648:	mov	x0, x27
   3164c:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   31650:	ldp	x19, x20, [sp]
   31654:	ldp	x21, x22, [sp, #16]
   31658:	ldp	x23, x24, [sp, #32]
   3165c:	ldp	x25, x26, [sp, #48]
   31660:	ldp	x27, x28, [sp, #64]
   31664:	ldr	x30, [sp, #80]
   31668:	add	sp, sp, #0x2c0
   3166c:	ret
   31670:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31674:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31678:	add	x2, x2, #0x140
   3167c:	add	x0, x0, #0xc8
   31680:	mov	x4, #0x0                   	// #0
   31684:	mov	x3, #0x0                   	// #0
   31688:	mov	w1, #0xc0                  	// #192
   3168c:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   31690:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31694:	mov	x3, #0x1                   	// #1
   31698:	add	x1, x1, #0xd08
   3169c:	mov	w4, #0x1                   	// #1
   316a0:	movk	x3, #0x1f, lsl #32
   316a4:	mov	w2, #0x2                   	// #2
   316a8:	mov	x0, x22
   316ac:	str	w4, [sp, #272]
   316b0:	str	x23, [sp, #280]
   316b4:	str	w24, [sp, #288]
   316b8:	str	w21, [sp, #292]
   316bc:	stp	x3, x1, [sp, #312]
   316c0:	str	wzr, [sp, #336]
   316c4:	str	x26, [sp, #352]
   316c8:	str	wzr, [sp, #368]
   316cc:	str	x25, [sp, #384]
   316d0:	str	w2, [sp, #592]
   316d4:	str	wzr, [sp, #600]
   316d8:	str	xzr, [sp, #608]
   316dc:	str	xzr, [sp, #616]
   316e0:	str	wzr, [sp, #640]
   316e4:	str	xzr, [sp, #648]
   316e8:	str	xzr, [sp, #656]
   316ec:	str	xzr, [sp, #680]
   316f0:	str	wzr, [sp, #688]
   316f4:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   316f8:	b	31640 <__ubsan_default_options@@Base+0x1ff8>
   316fc:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   31700:	sub	sp, sp, #0x2f0
   31704:	mov	w3, #0xffffffff            	// #-1
   31708:	stp	x19, x20, [sp]
   3170c:	mov	x19, x0
   31710:	mov	x20, x1
   31714:	add	x0, x0, #0xc
   31718:	stp	x27, x28, [sp, #64]
   3171c:	mov	x28, x2
   31720:	stp	x21, x22, [sp, #16]
   31724:	stp	x23, x24, [sp, #32]
   31728:	stp	x25, x26, [sp, #48]
   3172c:	ldr	x24, [x2, #8]
   31730:	str	x30, [sp, #80]
   31734:	ldxr	w27, [x0]
   31738:	stxr	w1, w3, [x0]
   3173c:	cbnz	w1, 31734 <__ubsan_default_options@@Base+0x20ec>
   31740:	dmb	ish
   31744:	ldrb	w25, [x19, #24]
   31748:	mov	x0, #0x1                   	// #1
   3174c:	ldr	w23, [x19, #8]
   31750:	mov	w21, w0
   31754:	lsl	x25, x0, x25
   31758:	ldr	x26, [x19]
   3175c:	cbz	x20, 31774 <__ubsan_default_options@@Base+0x212c>
   31760:	sub	x0, x25, #0x1
   31764:	mov	w21, #0x6                   	// #6
   31768:	tst	x0, x20
   3176c:	mov	w3, #0x8                   	// #8
   31770:	csel	w21, w21, w3, ne  // ne = any
   31774:	ldrb	w0, [x28]
   31778:	cbnz	w0, 317c4 <__ubsan_default_options@@Base+0x217c>
   3177c:	cmn	w27, #0x1
   31780:	b.ne	317a4 <__ubsan_default_options@@Base+0x215c>  // b.any
   31784:	ldp	x19, x20, [sp]
   31788:	ldp	x21, x22, [sp, #16]
   3178c:	ldp	x23, x24, [sp, #32]
   31790:	ldp	x25, x26, [sp, #48]
   31794:	ldp	x27, x28, [sp, #64]
   31798:	ldr	x30, [sp, #80]
   3179c:	add	sp, sp, #0x2f0
   317a0:	ret
   317a4:	mov	x2, x26
   317a8:	mov	x1, x24
   317ac:	mov	w0, w21
   317b0:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   317b4:	tst	w0, #0xff
   317b8:	b.ne	31784 <__ubsan_default_options@@Base+0x213c>  // b.any
   317bc:	ldr	x0, [x19]
   317c0:	b	317c8 <__ubsan_default_options@@Base+0x2180>
   317c4:	mov	x0, x26
   317c8:	mov	w9, #0x1                   	// #1
   317cc:	mov	x22, #0x0                   	// #0
   317d0:	cbz	x0, 31a40 <__ubsan_default_options@@Base+0x23f8>
   317d4:	str	w9, [sp, #200]
   317d8:	add	x24, sp, #0xf0
   317dc:	str	x26, [sp, #208]
   317e0:	mov	x0, x24
   317e4:	stp	w23, w27, [sp, #216]
   317e8:	mov	w3, w21
   317ec:	ldp	x6, x7, [sp, #200]
   317f0:	stp	x6, x7, [sp, #112]
   317f4:	add	x2, sp, #0x70
   317f8:	ldp	x6, x7, [x28]
   317fc:	add	x1, sp, #0xa0
   31800:	ldp	x4, x5, [sp, #216]
   31804:	stp	x4, x5, [sp, #128]
   31808:	ldr	x4, [x28, #16]
   3180c:	str	w9, [sp, #108]
   31810:	ldr	x5, [sp, #96]
   31814:	str	x5, [sp, #144]
   31818:	stp	x6, x7, [sp, #160]
   3181c:	str	x4, [sp, #176]
   31820:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   31824:	ldr	w9, [sp, #108]
   31828:	cmp	w21, #0x6
   3182c:	b.eq	31978 <__ubsan_default_options@@Base+0x2330>  // b.none
   31830:	cmp	w21, #0x8
   31834:	b.ne	318fc <__ubsan_default_options@@Base+0x22b4>  // b.any
   31838:	ldrb	w3, [x19, #25]
   3183c:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
   31840:	add	x0, x0, #0xc40
   31844:	add	x28, sp, #0x140
   31848:	ldr	x1, [x19, #16]
   3184c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31850:	ldr	x5, [x0, x3, lsl #3]
   31854:	mov	x0, x28
   31858:	ldr	x7, [sp, #96]
   3185c:	add	x2, x2, #0xda8
   31860:	mov	x6, #0x800000000           	// #34359738368
   31864:	mov	w4, #0x5                   	// #5
   31868:	mov	w3, #0x2                   	// #2
   3186c:	str	w9, [sp, #320]
   31870:	str	x26, [sp, #328]
   31874:	str	w23, [sp, #336]
   31878:	str	w27, [sp, #340]
   3187c:	stp	x7, x6, [sp, #352]
   31880:	str	x2, [sp, #368]
   31884:	str	wzr, [sp, #384]
   31888:	str	x5, [sp, #400]
   3188c:	str	w4, [sp, #416]
   31890:	str	x20, [sp, #432]
   31894:	str	w3, [sp, #640]
   31898:	str	wzr, [sp, #648]
   3189c:	str	xzr, [sp, #656]
   318a0:	str	xzr, [sp, #664]
   318a4:	str	wzr, [sp, #688]
   318a8:	str	xzr, [sp, #696]
   318ac:	str	xzr, [sp, #704]
   318b0:	str	xzr, [sp, #728]
   318b4:	str	wzr, [sp, #736]
   318b8:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   318bc:	mov	x0, x28
   318c0:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   318c4:	cbnz	x20, 319e4 <__ubsan_default_options@@Base+0x239c>
   318c8:	mov	x0, x24
   318cc:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   318d0:	cbz	x22, 31784 <__ubsan_default_options@@Base+0x213c>
   318d4:	mov	x0, x22
   318d8:	bl	29160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   318dc:	ldp	x19, x20, [sp]
   318e0:	ldp	x21, x22, [sp, #16]
   318e4:	ldp	x23, x24, [sp, #32]
   318e8:	ldp	x25, x26, [sp, #48]
   318ec:	ldp	x27, x28, [sp, #64]
   318f0:	ldr	x30, [sp, #80]
   318f4:	add	sp, sp, #0x2f0
   318f8:	ret
   318fc:	cmp	w21, #0x1
   31900:	b.eq	31924 <__ubsan_default_options@@Base+0x22dc>  // b.none
   31904:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31908:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   3190c:	add	x2, x2, #0xde8
   31910:	add	x0, x0, #0x9e0
   31914:	mov	x4, #0x0                   	// #0
   31918:	mov	x3, #0x0                   	// #0
   3191c:	mov	w1, #0x59                  	// #89
   31920:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   31924:	ldrb	w3, [x19, #25]
   31928:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
   3192c:	add	x0, x0, #0xc40
   31930:	add	x28, sp, #0x140
   31934:	ldr	x5, [sp, #96]
   31938:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   3193c:	ldr	x3, [x0, x3, lsl #3]
   31940:	add	x2, x2, #0xd40
   31944:	mov	x4, #0x100000000           	// #4294967296
   31948:	mov	x0, x28
   3194c:	str	w9, [sp, #320]
   31950:	str	x26, [sp, #328]
   31954:	str	w23, [sp, #336]
   31958:	str	w27, [sp, #340]
   3195c:	stp	x5, x4, [sp, #352]
   31960:	str	x2, [sp, #368]
   31964:	str	wzr, [sp, #384]
   31968:	str	x3, [sp, #400]
   3196c:	str	w21, [sp, #640]
   31970:	ldr	x1, [x19, #16]
   31974:	b	31898 <__ubsan_default_options@@Base+0x2250>
   31978:	ldrb	w3, [x19, #25]
   3197c:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28458>
   31980:	add	x0, x0, #0xc40
   31984:	add	x28, sp, #0x140
   31988:	ldr	x8, [sp, #96]
   3198c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31990:	ldr	x6, [x0, x3, lsl #3]
   31994:	add	x2, x2, #0xd60
   31998:	mov	x7, #0x600000000           	// #25769803776
   3199c:	mov	w5, #0x5                   	// #5
   319a0:	mov	w4, #0x2                   	// #2
   319a4:	mov	x0, x28
   319a8:	mov	w3, #0x3                   	// #3
   319ac:	str	w9, [sp, #320]
   319b0:	str	x26, [sp, #328]
   319b4:	str	w23, [sp, #336]
   319b8:	str	w27, [sp, #340]
   319bc:	stp	x8, x7, [sp, #352]
   319c0:	str	x2, [sp, #368]
   319c4:	str	wzr, [sp, #384]
   319c8:	str	x6, [sp, #400]
   319cc:	str	w5, [sp, #416]
   319d0:	str	x20, [sp, #432]
   319d4:	str	w4, [sp, #448]
   319d8:	stp	x25, xzr, [sp, #464]
   319dc:	ldr	x1, [x19, #16]
   319e0:	b	31894 <__ubsan_default_options@@Base+0x224c>
   319e4:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   319e8:	add	x1, x1, #0xe18
   319ec:	mov	w3, #0x2                   	// #2
   319f0:	mov	w2, #0x1                   	// #1
   319f4:	mov	x0, x28
   319f8:	str	w3, [sp, #320]
   319fc:	str	xzr, [sp, #328]
   31a00:	str	xzr, [sp, #336]
   31a04:	str	x20, [sp, #344]
   31a08:	str	w2, [sp, #360]
   31a0c:	str	w21, [sp, #364]
   31a10:	str	x1, [sp, #368]
   31a14:	str	wzr, [sp, #640]
   31a18:	str	wzr, [sp, #648]
   31a1c:	str	xzr, [sp, #656]
   31a20:	str	xzr, [sp, #664]
   31a24:	str	wzr, [sp, #688]
   31a28:	str	xzr, [sp, #696]
   31a2c:	str	xzr, [sp, #704]
   31a30:	str	xzr, [sp, #728]
   31a34:	str	wzr, [sp, #736]
   31a38:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31a3c:	b	318c8 <__ubsan_default_options@@Base+0x2280>
   31a40:	cbz	x24, 31a68 <__ubsan_default_options@@Base+0x2420>
   31a44:	sub	x0, x24, #0x4
   31a48:	bl	2e3e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bc0>
   31a4c:	mov	x26, #0x0                   	// #0
   31a50:	mov	x22, x0
   31a54:	mov	w27, #0x0                   	// #0
   31a58:	mov	w23, #0x0                   	// #0
   31a5c:	mov	w9, #0x3                   	// #3
   31a60:	str	x0, [sp, #96]
   31a64:	b	317d4 <__ubsan_default_options@@Base+0x218c>
   31a68:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31a6c:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31a70:	add	x2, x2, #0x7f0
   31a74:	add	x0, x0, #0xc8
   31a78:	mov	x4, #0x0                   	// #0
   31a7c:	mov	x3, #0x0                   	// #0
   31a80:	mov	w1, #0x2c                  	// #44
   31a84:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   31a88:	sub	sp, sp, #0x2c0
   31a8c:	stp	x25, x26, [sp, #48]
   31a90:	mov	x25, x3
   31a94:	stp	x19, x20, [sp]
   31a98:	mov	x19, x0
   31a9c:	add	x0, x0, #0xc
   31aa0:	stp	x21, x22, [sp, #16]
   31aa4:	stp	x23, x24, [sp, #32]
   31aa8:	ldrb	w24, [x3]
   31aac:	mov	w3, #0xffffffff            	// #-1
   31ab0:	ldr	x26, [x25, #8]
   31ab4:	str	x30, [sp, #72]
   31ab8:	ldxr	w21, [x0]
   31abc:	stxr	w4, w3, [x0]
   31ac0:	cbnz	w4, 31ab8 <__ubsan_default_options@@Base+0x2470>
   31ac4:	dmb	ish
   31ac8:	ldr	x0, [x19, #24]
   31acc:	stp	x1, x0, [sp, #168]
   31ad0:	ldr	w23, [x19, #8]
   31ad4:	ldr	x1, [x19, #16]
   31ad8:	str	x1, [sp, #160]
   31adc:	ldrh	w1, [x0]
   31ae0:	str	x2, [sp, #184]
   31ae4:	ldr	x22, [x19]
   31ae8:	cbnz	w1, 31af8 <__ubsan_default_options@@Base+0x24b0>
   31aec:	ldrh	w0, [x0, #2]
   31af0:	tbnz	w0, #0, 31c6c <__ubsan_default_options@@Base+0x2624>
   31af4:	nop
   31af8:	add	x20, sp, #0xb0
   31afc:	mov	x0, x20
   31b00:	bl	32fe8 <__ubsan_get_current_report_data@@Base+0x280>
   31b04:	ldr	x2, [x19, #16]
   31b08:	ldrh	w3, [x2]
   31b0c:	cbnz	w3, 31e88 <__ubsan_default_options@@Base+0x2840>
   31b10:	ldrh	w2, [x2, #2]
   31b14:	mov	w3, #0x1                   	// #1
   31b18:	asr	w2, w2, #1
   31b1c:	lsl	w2, w3, w2
   31b20:	cbz	x1, 31c84 <__ubsan_default_options@@Base+0x263c>
   31b24:	cbnz	w24, 31ce4 <__ubsan_default_options@@Base+0x269c>
   31b28:	str	x27, [sp, #64]
   31b2c:	mov	w27, #0x13                  	// #19
   31b30:	cmn	w21, #0x1
   31b34:	b.eq	31e68 <__ubsan_default_options@@Base+0x2820>  // b.none
   31b38:	mov	x1, x26
   31b3c:	mov	x2, x22
   31b40:	mov	w0, w27
   31b44:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   31b48:	tst	w0, #0xff
   31b4c:	b.ne	31e68 <__ubsan_default_options@@Base+0x2820>  // b.any
   31b50:	mov	w0, #0x1                   	// #1
   31b54:	str	w0, [sp, #272]
   31b58:	str	x22, [sp, #280]
   31b5c:	add	x24, sp, #0xc0
   31b60:	str	w23, [sp, #288]
   31b64:	mov	w3, w27
   31b68:	str	w21, [sp, #292]
   31b6c:	add	x2, sp, #0x50
   31b70:	ldp	x6, x7, [sp, #272]
   31b74:	stp	x6, x7, [sp, #80]
   31b78:	add	x1, sp, #0x80
   31b7c:	ldp	x6, x7, [x25]
   31b80:	mov	x0, x24
   31b84:	ldp	x4, x5, [sp, #288]
   31b88:	stp	x4, x5, [sp, #96]
   31b8c:	ldr	x4, [x25, #16]
   31b90:	stp	x6, x7, [sp, #128]
   31b94:	ldr	x8, [sp, #304]
   31b98:	str	x8, [sp, #112]
   31b9c:	str	x4, [sp, #144]
   31ba0:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   31ba4:	cmp	w27, #0x13
   31ba8:	ldr	x27, [sp, #64]
   31bac:	b.eq	31d38 <__ubsan_default_options@@Base+0x26f0>  // b.none
   31bb0:	ldr	x0, [sp, #160]
   31bb4:	add	x26, sp, #0xa0
   31bb8:	ldrh	w1, [x0]
   31bbc:	cbnz	w1, 31bd8 <__ubsan_default_options@@Base+0x2590>
   31bc0:	ldrh	w0, [x0, #2]
   31bc4:	add	x26, sp, #0xa0
   31bc8:	tbz	w0, #0, 31bd8 <__ubsan_default_options@@Base+0x2590>
   31bcc:	mov	x0, x26
   31bd0:	bl	32e68 <__ubsan_get_current_report_data@@Base+0x100>
   31bd4:	tbnz	x1, #63, 31eac <__ubsan_default_options@@Base+0x2864>
   31bd8:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31bdc:	add	x2, x2, #0xea8
   31be0:	mov	w4, #0x1                   	// #1
   31be4:	mov	x3, #0x1200000000          	// #77309411328
   31be8:	add	x25, sp, #0x110
   31bec:	mov	x1, x26
   31bf0:	mov	x0, x25
   31bf4:	str	w4, [sp, #272]
   31bf8:	str	x22, [sp, #280]
   31bfc:	str	w23, [sp, #288]
   31c00:	str	w21, [sp, #292]
   31c04:	stp	x3, x2, [sp, #312]
   31c08:	str	wzr, [sp, #592]
   31c0c:	str	wzr, [sp, #600]
   31c10:	str	xzr, [sp, #608]
   31c14:	str	xzr, [sp, #616]
   31c18:	str	wzr, [sp, #640]
   31c1c:	str	xzr, [sp, #648]
   31c20:	str	xzr, [sp, #656]
   31c24:	str	xzr, [sp, #680]
   31c28:	str	wzr, [sp, #688]
   31c2c:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   31c30:	mov	x1, x20
   31c34:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   31c38:	ldr	x1, [x19, #16]
   31c3c:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   31c40:	mov	x0, x25
   31c44:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31c48:	mov	x0, x24
   31c4c:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   31c50:	ldp	x19, x20, [sp]
   31c54:	ldp	x21, x22, [sp, #16]
   31c58:	ldp	x23, x24, [sp, #32]
   31c5c:	ldp	x25, x26, [sp, #48]
   31c60:	ldr	x30, [sp, #72]
   31c64:	add	sp, sp, #0x2c0
   31c68:	ret
   31c6c:	add	x20, sp, #0xb0
   31c70:	mov	x0, x20
   31c74:	bl	32e68 <__ubsan_get_current_report_data@@Base+0x100>
   31c78:	tbz	x1, #63, 31afc <__ubsan_default_options@@Base+0x24b4>
   31c7c:	cbz	w24, 31b28 <__ubsan_default_options@@Base+0x24e0>
   31c80:	b	31ce4 <__ubsan_default_options@@Base+0x269c>
   31c84:	cmp	x2, x0
   31c88:	b.ls	31b24 <__ubsan_default_options@@Base+0x24dc>  // b.plast
   31c8c:	cbz	w24, 31ef0 <__ubsan_default_options@@Base+0x28a8>
   31c90:	str	w3, [sp, #272]
   31c94:	add	x24, sp, #0xc0
   31c98:	str	x22, [sp, #280]
   31c9c:	mov	x0, x24
   31ca0:	str	w23, [sp, #288]
   31ca4:	add	x2, sp, #0x50
   31ca8:	str	w21, [sp, #292]
   31cac:	add	x1, sp, #0x80
   31cb0:	ldp	x6, x7, [sp, #272]
   31cb4:	stp	x6, x7, [sp, #80]
   31cb8:	mov	w3, #0x12                  	// #18
   31cbc:	ldp	x6, x7, [x25]
   31cc0:	ldp	x4, x5, [sp, #288]
   31cc4:	stp	x4, x5, [sp, #96]
   31cc8:	ldr	x4, [x25, #16]
   31ccc:	stp	x6, x7, [sp, #128]
   31cd0:	ldr	x8, [sp, #304]
   31cd4:	str	x8, [sp, #112]
   31cd8:	str	x4, [sp, #144]
   31cdc:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   31ce0:	b	31bb0 <__ubsan_default_options@@Base+0x2568>
   31ce4:	mov	w0, #0x1                   	// #1
   31ce8:	str	w0, [sp, #272]
   31cec:	str	x22, [sp, #280]
   31cf0:	add	x24, sp, #0xc0
   31cf4:	str	w23, [sp, #288]
   31cf8:	add	x2, sp, #0x50
   31cfc:	str	w21, [sp, #292]
   31d00:	add	x1, sp, #0x80
   31d04:	ldp	x6, x7, [sp, #272]
   31d08:	stp	x6, x7, [sp, #80]
   31d0c:	mov	x0, x24
   31d10:	ldp	x6, x7, [x25]
   31d14:	mov	w3, #0x13                  	// #19
   31d18:	ldp	x4, x5, [sp, #288]
   31d1c:	stp	x4, x5, [sp, #96]
   31d20:	ldr	x4, [x25, #16]
   31d24:	stp	x6, x7, [sp, #128]
   31d28:	ldr	x8, [sp, #304]
   31d2c:	str	x8, [sp, #112]
   31d30:	str	x4, [sp, #144]
   31d34:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   31d38:	ldr	x0, [sp, #176]
   31d3c:	ldrh	w1, [x0]
   31d40:	cbnz	w1, 31dbc <__ubsan_default_options@@Base+0x2774>
   31d44:	ldrh	w0, [x0, #2]
   31d48:	tbz	w0, #0, 31dbc <__ubsan_default_options@@Base+0x2774>
   31d4c:	mov	x0, x20
   31d50:	bl	32e68 <__ubsan_get_current_report_data@@Base+0x100>
   31d54:	tbz	x1, #63, 31dbc <__ubsan_default_options@@Base+0x2774>
   31d58:	add	x19, sp, #0x110
   31d5c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31d60:	mov	x1, x20
   31d64:	mov	x0, x19
   31d68:	add	x2, x2, #0xe30
   31d6c:	mov	w4, #0x1                   	// #1
   31d70:	mov	x3, #0x1300000000          	// #81604378624
   31d74:	str	w4, [sp, #272]
   31d78:	str	x22, [sp, #280]
   31d7c:	str	w23, [sp, #288]
   31d80:	str	w21, [sp, #292]
   31d84:	stp	x3, x2, [sp, #312]
   31d88:	str	wzr, [sp, #592]
   31d8c:	str	wzr, [sp, #600]
   31d90:	str	xzr, [sp, #608]
   31d94:	str	xzr, [sp, #616]
   31d98:	str	wzr, [sp, #640]
   31d9c:	str	xzr, [sp, #648]
   31da0:	str	xzr, [sp, #656]
   31da4:	str	xzr, [sp, #680]
   31da8:	str	wzr, [sp, #688]
   31dac:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   31db0:	mov	x0, x19
   31db4:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31db8:	b	31c48 <__ubsan_default_options@@Base+0x2600>
   31dbc:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31dc0:	add	x2, x2, #0xe50
   31dc4:	mov	x3, #0x1300000000          	// #81604378624
   31dc8:	add	x25, sp, #0x110
   31dcc:	mov	x1, x20
   31dd0:	mov	x0, x25
   31dd4:	mov	w20, #0x1                   	// #1
   31dd8:	str	w20, [sp, #272]
   31ddc:	str	x22, [sp, #280]
   31de0:	str	w23, [sp, #288]
   31de4:	str	w21, [sp, #292]
   31de8:	stp	x3, x2, [sp, #312]
   31dec:	str	wzr, [sp, #592]
   31df0:	str	wzr, [sp, #600]
   31df4:	str	xzr, [sp, #608]
   31df8:	str	xzr, [sp, #616]
   31dfc:	str	wzr, [sp, #640]
   31e00:	str	xzr, [sp, #648]
   31e04:	str	xzr, [sp, #656]
   31e08:	str	xzr, [sp, #680]
   31e0c:	str	wzr, [sp, #688]
   31e10:	bl	2e460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   31e14:	ldr	x1, [x19, #16]
   31e18:	ldrh	w3, [x1]
   31e1c:	cbnz	w3, 31e88 <__ubsan_default_options@@Base+0x2840>
   31e20:	ldrh	w4, [x1, #2]
   31e24:	ldr	w3, [x0, #320]
   31e28:	asr	w4, w4, #1
   31e2c:	cmp	w3, #0x8
   31e30:	lsl	w20, w20, w4
   31e34:	b.eq	31ecc <__ubsan_default_options@@Base+0x2884>  // b.none
   31e38:	ubfiz	x4, x3, #5, #32
   31e3c:	add	w3, w3, #0x1
   31e40:	add	x4, x4, #0x40
   31e44:	str	w3, [x0, #320]
   31e48:	add	x3, x0, x4
   31e4c:	mov	w5, #0x2                   	// #2
   31e50:	str	w5, [x0, x4]
   31e54:	stp	x20, xzr, [x3, #16]
   31e58:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   31e5c:	mov	x0, x25
   31e60:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31e64:	b	31c48 <__ubsan_default_options@@Base+0x2600>
   31e68:	ldp	x19, x20, [sp]
   31e6c:	ldp	x21, x22, [sp, #16]
   31e70:	ldp	x23, x24, [sp, #32]
   31e74:	ldp	x25, x26, [sp, #48]
   31e78:	ldr	x27, [sp, #64]
   31e7c:	ldr	x30, [sp, #72]
   31e80:	add	sp, sp, #0x2c0
   31e84:	ret
   31e88:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31e8c:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31e90:	add	x2, x2, #0xaf0
   31e94:	add	x0, x0, #0xb10
   31e98:	mov	x4, #0x0                   	// #0
   31e9c:	mov	x3, #0x0                   	// #0
   31ea0:	mov	w1, #0x7c                  	// #124
   31ea4:	str	x27, [sp, #64]
   31ea8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   31eac:	add	x19, sp, #0x110
   31eb0:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31eb4:	mov	x1, x26
   31eb8:	mov	x0, x19
   31ebc:	add	x2, x2, #0xe88
   31ec0:	mov	w4, #0x1                   	// #1
   31ec4:	mov	x3, #0x1200000000          	// #77309411328
   31ec8:	b	31d74 <__ubsan_default_options@@Base+0x272c>
   31ecc:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31ed0:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   31ed4:	add	x2, x2, #0x140
   31ed8:	add	x0, x0, #0xc8
   31edc:	mov	x4, #0x0                   	// #0
   31ee0:	mov	x3, #0x0                   	// #0
   31ee4:	mov	w1, #0xc0                  	// #192
   31ee8:	str	x27, [sp, #64]
   31eec:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   31ef0:	str	x27, [sp, #64]
   31ef4:	mov	w27, #0x12                  	// #18
   31ef8:	b	31b30 <__ubsan_default_options@@Base+0x24e8>
   31efc:	nop
   31f00:	sub	sp, sp, #0x2a0
   31f04:	ldrb	w4, [x3]
   31f08:	stp	x19, x20, [sp]
   31f0c:	mov	x19, x3
   31f10:	mov	x20, x2
   31f14:	add	x2, x0, #0xc
   31f18:	mov	w3, #0xffffffff            	// #-1
   31f1c:	stp	x21, x22, [sp, #16]
   31f20:	stp	x23, x24, [sp, #32]
   31f24:	mov	x24, x1
   31f28:	stp	x25, x26, [sp, #48]
   31f2c:	ldr	x1, [x19, #8]
   31f30:	str	x30, [sp, #64]
   31f34:	ldxr	w22, [x2]
   31f38:	stxr	w5, w3, [x2]
   31f3c:	cbnz	w5, 31f34 <__ubsan_default_options@@Base+0x28ec>
   31f40:	dmb	ish
   31f44:	orr	x2, x24, x20
   31f48:	ldr	w25, [x0, #8]
   31f4c:	ldr	x23, [x0]
   31f50:	cbz	x2, 32120 <__ubsan_default_options@@Base+0x2ad8>
   31f54:	cmp	x24, #0x0
   31f58:	mov	w21, #0x3                   	// #3
   31f5c:	ccmp	x20, #0x0, #0x4, eq  // eq = none
   31f60:	b.eq	32000 <__ubsan_default_options@@Base+0x29b8>  // b.none
   31f64:	cbnz	w4, 32014 <__ubsan_default_options@@Base+0x29cc>
   31f68:	cmn	w22, #0x1
   31f6c:	b.ne	31f8c <__ubsan_default_options@@Base+0x2944>  // b.any
   31f70:	ldp	x19, x20, [sp]
   31f74:	ldp	x21, x22, [sp, #16]
   31f78:	ldp	x23, x24, [sp, #32]
   31f7c:	ldp	x25, x26, [sp, #48]
   31f80:	ldr	x30, [sp, #64]
   31f84:	add	sp, sp, #0x2a0
   31f88:	ret
   31f8c:	mov	x2, x23
   31f90:	mov	w0, w21
   31f94:	bl	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   31f98:	tst	w0, #0xff
   31f9c:	b.ne	31f70 <__ubsan_default_options@@Base+0x2928>  // b.any
   31fa0:	mov	w0, #0x1                   	// #1
   31fa4:	str	w0, [sp, #240]
   31fa8:	str	x23, [sp, #248]
   31fac:	add	x26, sp, #0xa0
   31fb0:	str	w25, [sp, #256]
   31fb4:	mov	w3, w21
   31fb8:	str	w22, [sp, #260]
   31fbc:	add	x2, sp, #0x50
   31fc0:	ldp	x6, x7, [sp, #240]
   31fc4:	stp	x6, x7, [sp, #80]
   31fc8:	add	x1, sp, #0x80
   31fcc:	ldp	x6, x7, [x19]
   31fd0:	mov	x0, x26
   31fd4:	ldp	x4, x5, [sp, #256]
   31fd8:	stp	x4, x5, [sp, #96]
   31fdc:	ldr	x4, [x19, #16]
   31fe0:	stp	x6, x7, [sp, #128]
   31fe4:	ldr	x8, [sp, #272]
   31fe8:	str	x8, [sp, #112]
   31fec:	str	x4, [sp, #144]
   31ff0:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   31ff4:	cmp	w21, #0x2
   31ff8:	b.ne	32068 <__ubsan_default_options@@Base+0x2a20>  // b.any
   31ffc:	b	32198 <__ubsan_default_options@@Base+0x2b50>
   32000:	cmp	x24, #0x0
   32004:	ccmp	x20, #0x0, #0x0, ne  // ne = any
   32008:	cset	w21, ne  // ne = any
   3200c:	add	w21, w21, #0x4
   32010:	cbz	w4, 31f68 <__ubsan_default_options@@Base+0x2920>
   32014:	mov	w0, #0x1                   	// #1
   32018:	str	w0, [sp, #240]
   3201c:	str	x23, [sp, #248]
   32020:	add	x26, sp, #0xa0
   32024:	str	w25, [sp, #256]
   32028:	mov	w3, w21
   3202c:	str	w22, [sp, #260]
   32030:	add	x2, sp, #0x50
   32034:	ldp	x6, x7, [sp, #240]
   32038:	stp	x6, x7, [sp, #80]
   3203c:	add	x1, sp, #0x80
   32040:	ldp	x6, x7, [x19]
   32044:	mov	x0, x26
   32048:	ldp	x4, x5, [sp, #256]
   3204c:	stp	x4, x5, [sp, #96]
   32050:	ldr	x4, [x19, #16]
   32054:	stp	x6, x7, [sp, #128]
   32058:	ldr	x8, [sp, #272]
   3205c:	str	x8, [sp, #112]
   32060:	str	x4, [sp, #144]
   32064:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   32068:	cmp	w21, #0x3
   3206c:	b.eq	321c8 <__ubsan_default_options@@Base+0x2b80>  // b.none
   32070:	cmp	w21, #0x4
   32074:	b.eq	32214 <__ubsan_default_options@@Base+0x2bcc>  // b.none
   32078:	mvn	x0, x24
   3207c:	mvn	x1, x20
   32080:	lsr	x0, x0, #63
   32084:	cmp	x0, x1, lsr #63
   32088:	b.ne	32134 <__ubsan_default_options@@Base+0x2aec>  // b.any
   3208c:	cmp	x24, x20
   32090:	b.ls	32204 <__ubsan_default_options@@Base+0x2bbc>  // b.plast
   32094:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   32098:	add	x1, x1, #0xf88
   3209c:	mov	w5, #0x1                   	// #1
   320a0:	add	x0, sp, #0xf0
   320a4:	mov	w2, #0x5                   	// #5
   320a8:	mov	x4, #0x500000000           	// #21474836480
   320ac:	mov	w3, #0x2                   	// #2
   320b0:	str	w5, [sp, #240]
   320b4:	str	x23, [sp, #248]
   320b8:	str	w25, [sp, #256]
   320bc:	str	w22, [sp, #260]
   320c0:	stp	x4, x1, [sp, #280]
   320c4:	str	w2, [sp, #304]
   320c8:	str	x24, [sp, #320]
   320cc:	str	w2, [sp, #336]
   320d0:	str	x20, [sp, #352]
   320d4:	str	w3, [sp, #560]
   320d8:	str	wzr, [sp, #568]
   320dc:	str	xzr, [sp, #576]
   320e0:	str	xzr, [sp, #584]
   320e4:	str	wzr, [sp, #608]
   320e8:	str	xzr, [sp, #616]
   320ec:	str	xzr, [sp, #624]
   320f0:	str	xzr, [sp, #648]
   320f4:	str	wzr, [sp, #656]
   320f8:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   320fc:	mov	x0, x26
   32100:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   32104:	ldp	x19, x20, [sp]
   32108:	ldp	x21, x22, [sp, #16]
   3210c:	ldp	x23, x24, [sp, #32]
   32110:	ldp	x25, x26, [sp, #48]
   32114:	ldr	x30, [sp, #64]
   32118:	add	sp, sp, #0x2a0
   3211c:	ret
   32120:	cbnz	w4, 32144 <__ubsan_default_options@@Base+0x2afc>
   32124:	cmn	w22, #0x1
   32128:	mov	w21, #0x2                   	// #2
   3212c:	b.eq	31f70 <__ubsan_default_options@@Base+0x2928>  // b.none
   32130:	b	31f8c <__ubsan_default_options@@Base+0x2944>
   32134:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   32138:	mov	w5, #0x1                   	// #1
   3213c:	add	x1, x1, #0xff8
   32140:	b	320a0 <__ubsan_default_options@@Base+0x2a58>
   32144:	mov	w0, #0x1                   	// #1
   32148:	str	w0, [sp, #240]
   3214c:	str	x23, [sp, #248]
   32150:	add	x26, sp, #0xa0
   32154:	str	w25, [sp, #256]
   32158:	add	x2, sp, #0x50
   3215c:	str	w22, [sp, #260]
   32160:	add	x1, sp, #0x80
   32164:	ldp	x6, x7, [sp, #240]
   32168:	stp	x6, x7, [sp, #80]
   3216c:	mov	x0, x26
   32170:	ldp	x6, x7, [x19]
   32174:	mov	w3, #0x2                   	// #2
   32178:	ldp	x4, x5, [sp, #256]
   3217c:	stp	x4, x5, [sp, #96]
   32180:	ldr	x4, [x19, #16]
   32184:	stp	x6, x7, [sp, #128]
   32188:	ldr	x8, [sp, #272]
   3218c:	str	x8, [sp, #112]
   32190:	str	x4, [sp, #144]
   32194:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   32198:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   3219c:	mov	w3, #0x1                   	// #1
   321a0:	add	x1, x1, #0xee8
   321a4:	mov	x2, #0x200000000           	// #8589934592
   321a8:	add	x0, sp, #0xf0
   321ac:	str	w3, [sp, #240]
   321b0:	str	x23, [sp, #248]
   321b4:	str	w25, [sp, #256]
   321b8:	str	w22, [sp, #260]
   321bc:	stp	x2, x1, [sp, #280]
   321c0:	str	wzr, [sp, #560]
   321c4:	b	320d8 <__ubsan_default_options@@Base+0x2a90>
   321c8:	mov	w2, #0x1                   	// #1
   321cc:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   321d0:	mov	x4, #0x300000000           	// #12884901888
   321d4:	add	x1, x1, #0xf10
   321d8:	mov	w3, #0x2                   	// #2
   321dc:	add	x0, sp, #0xf0
   321e0:	str	w2, [sp, #240]
   321e4:	str	x23, [sp, #248]
   321e8:	str	w25, [sp, #256]
   321ec:	str	w22, [sp, #260]
   321f0:	stp	x4, x1, [sp, #280]
   321f4:	str	w3, [sp, #304]
   321f8:	stp	x20, xzr, [sp, #320]
   321fc:	str	w2, [sp, #560]
   32200:	b	320d8 <__ubsan_default_options@@Base+0x2a90>
   32204:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   32208:	mov	w5, #0x1                   	// #1
   3220c:	add	x1, x1, #0xfc0
   32210:	b	320a0 <__ubsan_default_options@@Base+0x2a58>
   32214:	mov	w2, #0x1                   	// #1
   32218:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   3221c:	mov	x4, #0x400000000           	// #17179869184
   32220:	add	x1, x1, #0xf40
   32224:	mov	w3, #0x5                   	// #5
   32228:	add	x0, sp, #0xf0
   3222c:	str	w2, [sp, #240]
   32230:	str	x23, [sp, #248]
   32234:	str	w25, [sp, #256]
   32238:	str	w22, [sp, #260]
   3223c:	stp	x4, x1, [sp, #280]
   32240:	str	w3, [sp, #304]
   32244:	str	x24, [sp, #320]
   32248:	str	w2, [sp, #560]
   3224c:	b	320d8 <__ubsan_default_options@@Base+0x2a90>
   32250:	mov	x4, x2
   32254:	mov	x2, x0
   32258:	ldrb	w0, [x4]
   3225c:	cbnz	w0, 32280 <__ubsan_default_options@@Base+0x2c38>
   32260:	lsr	x1, x1, #32
   32264:	mov	w0, #0x1                   	// #1
   32268:	cmn	w1, #0x1
   3226c:	b.ne	32274 <__ubsan_default_options@@Base+0x2c2c>  // b.any
   32270:	ret
   32274:	ldr	x1, [x4, #8]
   32278:	mov	w0, w3
   3227c:	b	2f198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   32280:	mov	w0, #0x0                   	// #0
   32284:	ret

0000000000032288 <__ubsan_handle_type_mismatch_v1@@Base>:
   32288:	stp	x29, x30, [sp, #-80]!
   3228c:	mov	x29, sp
   32290:	add	x2, x29, #0x10
   32294:	stp	xzr, x30, [x29, #56]
   32298:	ldp	x4, x5, [x29, #56]
   3229c:	stp	x4, x5, [x29, #16]
   322a0:	str	x29, [x29, #32]
   322a4:	bl	31700 <__ubsan_default_options@@Base+0x20b8>
   322a8:	ldp	x29, x30, [sp], #80
   322ac:	ret

00000000000322b0 <__ubsan_handle_type_mismatch_v1_abort@@Base>:
   322b0:	stp	x29, x30, [sp, #-80]!
   322b4:	mov	w3, #0x1                   	// #1
   322b8:	mov	x29, sp
   322bc:	add	x2, x29, #0x10
   322c0:	strb	w3, [x29, #56]
   322c4:	stur	wzr, [x29, #57]
   322c8:	sturh	wzr, [x29, #61]
   322cc:	strb	wzr, [x29, #63]
   322d0:	str	x30, [x29, #64]
   322d4:	str	x29, [x29, #32]
   322d8:	ldp	x4, x5, [x29, #56]
   322dc:	stp	x4, x5, [x29, #16]
   322e0:	bl	31700 <__ubsan_default_options@@Base+0x20b8>
   322e4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

00000000000322e8 <__ubsan_handle_alignment_assumption@@Base>:
   322e8:	stp	x29, x30, [sp, #-80]!
   322ec:	mov	x29, sp
   322f0:	add	x4, x29, #0x10
   322f4:	stp	xzr, x30, [x29, #56]
   322f8:	ldp	x6, x7, [x29, #56]
   322fc:	stp	x6, x7, [x29, #16]
   32300:	str	x29, [x29, #32]
   32304:	bl	310c0 <__ubsan_default_options@@Base+0x1a78>
   32308:	ldp	x29, x30, [sp], #80
   3230c:	ret

0000000000032310 <__ubsan_handle_alignment_assumption_abort@@Base>:
   32310:	stp	x29, x30, [sp, #-80]!
   32314:	mov	w5, #0x1                   	// #1
   32318:	mov	x29, sp
   3231c:	add	x4, x29, #0x10
   32320:	strb	w5, [x29, #56]
   32324:	stur	wzr, [x29, #57]
   32328:	sturh	wzr, [x29, #61]
   3232c:	strb	wzr, [x29, #63]
   32330:	str	x30, [x29, #64]
   32334:	str	x29, [x29, #32]
   32338:	ldp	x6, x7, [x29, #56]
   3233c:	stp	x6, x7, [x29, #16]
   32340:	bl	310c0 <__ubsan_default_options@@Base+0x1a78>
   32344:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000032348 <__ubsan_handle_add_overflow@@Base>:
   32348:	stp	x29, x30, [sp, #-80]!
   3234c:	mov	x4, x2
   32350:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   32354:	mov	x29, sp
   32358:	ldr	x3, [x0, #16]
   3235c:	add	x5, x29, #0x10
   32360:	stp	xzr, x30, [x29, #56]
   32364:	add	x2, x2, #0x30
   32368:	ldp	x6, x7, [x29, #56]
   3236c:	stp	x6, x7, [x29, #16]
   32370:	str	x29, [x29, #32]
   32374:	bl	30738 <__ubsan_default_options@@Base+0x10f0>
   32378:	ldp	x29, x30, [sp], #80
   3237c:	ret

0000000000032380 <__ubsan_handle_add_overflow_abort@@Base>:
   32380:	stp	x29, x30, [sp, #-80]!
   32384:	mov	w6, #0x1                   	// #1
   32388:	mov	x4, x2
   3238c:	mov	x29, sp
   32390:	ldr	x3, [x0, #16]
   32394:	add	x5, x29, #0x10
   32398:	strb	w6, [x29, #56]
   3239c:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   323a0:	stur	wzr, [x29, #57]
   323a4:	add	x2, x2, #0x30
   323a8:	sturh	wzr, [x29, #61]
   323ac:	strb	wzr, [x29, #63]
   323b0:	str	x30, [x29, #64]
   323b4:	str	x29, [x29, #32]
   323b8:	ldp	x6, x7, [x29, #56]
   323bc:	stp	x6, x7, [x29, #16]
   323c0:	bl	30738 <__ubsan_default_options@@Base+0x10f0>
   323c4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

00000000000323c8 <__ubsan_handle_sub_overflow@@Base>:
   323c8:	stp	x29, x30, [sp, #-80]!
   323cc:	mov	x4, x2
   323d0:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   323d4:	mov	x29, sp
   323d8:	ldr	x3, [x0, #16]
   323dc:	add	x5, x29, #0x10
   323e0:	stp	xzr, x30, [x29, #56]
   323e4:	add	x2, x2, #0x38
   323e8:	ldp	x6, x7, [x29, #56]
   323ec:	stp	x6, x7, [x29, #16]
   323f0:	str	x29, [x29, #32]
   323f4:	bl	30738 <__ubsan_default_options@@Base+0x10f0>
   323f8:	ldp	x29, x30, [sp], #80
   323fc:	ret

0000000000032400 <__ubsan_handle_sub_overflow_abort@@Base>:
   32400:	stp	x29, x30, [sp, #-80]!
   32404:	mov	w6, #0x1                   	// #1
   32408:	mov	x4, x2
   3240c:	mov	x29, sp
   32410:	ldr	x3, [x0, #16]
   32414:	add	x5, x29, #0x10
   32418:	strb	w6, [x29, #56]
   3241c:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   32420:	stur	wzr, [x29, #57]
   32424:	add	x2, x2, #0x38
   32428:	sturh	wzr, [x29, #61]
   3242c:	strb	wzr, [x29, #63]
   32430:	str	x30, [x29, #64]
   32434:	str	x29, [x29, #32]
   32438:	ldp	x6, x7, [x29, #56]
   3243c:	stp	x6, x7, [x29, #16]
   32440:	bl	30738 <__ubsan_default_options@@Base+0x10f0>
   32444:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000032448 <__ubsan_handle_mul_overflow@@Base>:
   32448:	stp	x29, x30, [sp, #-80]!
   3244c:	mov	x4, x2
   32450:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   32454:	mov	x29, sp
   32458:	ldr	x3, [x0, #16]
   3245c:	add	x5, x29, #0x10
   32460:	stp	xzr, x30, [x29, #56]
   32464:	add	x2, x2, #0x40
   32468:	ldp	x6, x7, [x29, #56]
   3246c:	stp	x6, x7, [x29, #16]
   32470:	str	x29, [x29, #32]
   32474:	bl	30738 <__ubsan_default_options@@Base+0x10f0>
   32478:	ldp	x29, x30, [sp], #80
   3247c:	ret

0000000000032480 <__ubsan_handle_mul_overflow_abort@@Base>:
   32480:	stp	x29, x30, [sp, #-80]!
   32484:	mov	w6, #0x1                   	// #1
   32488:	mov	x4, x2
   3248c:	mov	x29, sp
   32490:	ldr	x3, [x0, #16]
   32494:	add	x5, x29, #0x10
   32498:	strb	w6, [x29, #56]
   3249c:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   324a0:	stur	wzr, [x29, #57]
   324a4:	add	x2, x2, #0x40
   324a8:	sturh	wzr, [x29, #61]
   324ac:	strb	wzr, [x29, #63]
   324b0:	str	x30, [x29, #64]
   324b4:	str	x29, [x29, #32]
   324b8:	ldp	x6, x7, [x29, #56]
   324bc:	stp	x6, x7, [x29, #16]
   324c0:	bl	30738 <__ubsan_default_options@@Base+0x10f0>
   324c4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

00000000000324c8 <__ubsan_handle_negate_overflow@@Base>:
   324c8:	stp	x29, x30, [sp, #-80]!
   324cc:	mov	x29, sp
   324d0:	add	x2, x29, #0x10
   324d4:	stp	xzr, x30, [x29, #56]
   324d8:	ldp	x4, x5, [x29, #56]
   324dc:	stp	x4, x5, [x29, #16]
   324e0:	str	x29, [x29, #32]
   324e4:	bl	2f8a8 <__ubsan_default_options@@Base+0x260>
   324e8:	ldp	x29, x30, [sp], #80
   324ec:	ret

00000000000324f0 <__ubsan_handle_negate_overflow_abort@@Base>:
   324f0:	stp	x29, x30, [sp, #-80]!
   324f4:	mov	w3, #0x1                   	// #1
   324f8:	mov	x29, sp
   324fc:	add	x2, x29, #0x10
   32500:	strb	w3, [x29, #56]
   32504:	stur	wzr, [x29, #57]
   32508:	sturh	wzr, [x29, #61]
   3250c:	strb	wzr, [x29, #63]
   32510:	str	x30, [x29, #64]
   32514:	str	x29, [x29, #32]
   32518:	ldp	x4, x5, [x29, #56]
   3251c:	stp	x4, x5, [x29, #16]
   32520:	bl	2f8a8 <__ubsan_default_options@@Base+0x260>
   32524:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000032528 <__ubsan_handle_divrem_overflow@@Base>:
   32528:	stp	x29, x30, [sp, #-80]!
   3252c:	mov	x29, sp
   32530:	add	x3, x29, #0x10
   32534:	stp	xzr, x30, [x29, #56]
   32538:	ldp	x4, x5, [x29, #56]
   3253c:	stp	x4, x5, [x29, #16]
   32540:	str	x29, [x29, #32]
   32544:	bl	2fdb8 <__ubsan_default_options@@Base+0x770>
   32548:	ldp	x29, x30, [sp], #80
   3254c:	ret

0000000000032550 <__ubsan_handle_divrem_overflow_abort@@Base>:
   32550:	stp	x29, x30, [sp, #-80]!
   32554:	mov	w4, #0x1                   	// #1
   32558:	mov	x29, sp
   3255c:	add	x3, x29, #0x10
   32560:	strb	w4, [x29, #56]
   32564:	stur	wzr, [x29, #57]
   32568:	sturh	wzr, [x29, #61]
   3256c:	strb	wzr, [x29, #63]
   32570:	str	x30, [x29, #64]
   32574:	str	x29, [x29, #32]
   32578:	ldp	x4, x5, [x29, #56]
   3257c:	stp	x4, x5, [x29, #16]
   32580:	bl	2fdb8 <__ubsan_default_options@@Base+0x770>
   32584:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000032588 <__ubsan_handle_shift_out_of_bounds@@Base>:
   32588:	stp	x29, x30, [sp, #-80]!
   3258c:	mov	x29, sp
   32590:	add	x3, x29, #0x10
   32594:	stp	xzr, x30, [x29, #56]
   32598:	ldp	x4, x5, [x29, #56]
   3259c:	stp	x4, x5, [x29, #16]
   325a0:	str	x29, [x29, #32]
   325a4:	bl	31a88 <__ubsan_default_options@@Base+0x2440>
   325a8:	ldp	x29, x30, [sp], #80
   325ac:	ret

00000000000325b0 <__ubsan_handle_shift_out_of_bounds_abort@@Base>:
   325b0:	stp	x29, x30, [sp, #-80]!
   325b4:	mov	w4, #0x1                   	// #1
   325b8:	mov	x29, sp
   325bc:	add	x3, x29, #0x10
   325c0:	strb	w4, [x29, #56]
   325c4:	stur	wzr, [x29, #57]
   325c8:	sturh	wzr, [x29, #61]
   325cc:	strb	wzr, [x29, #63]
   325d0:	str	x30, [x29, #64]
   325d4:	str	x29, [x29, #32]
   325d8:	ldp	x4, x5, [x29, #56]
   325dc:	stp	x4, x5, [x29, #16]
   325e0:	bl	31a88 <__ubsan_default_options@@Base+0x2440>
   325e4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

00000000000325e8 <__ubsan_handle_out_of_bounds@@Base>:
   325e8:	stp	x29, x30, [sp, #-80]!
   325ec:	mov	x29, sp
   325f0:	add	x2, x29, #0x10
   325f4:	stp	xzr, x30, [x29, #56]
   325f8:	ldp	x4, x5, [x29, #56]
   325fc:	stp	x4, x5, [x29, #16]
   32600:	str	x29, [x29, #32]
   32604:	bl	2fad8 <__ubsan_default_options@@Base+0x490>
   32608:	ldp	x29, x30, [sp], #80
   3260c:	ret

0000000000032610 <__ubsan_handle_out_of_bounds_abort@@Base>:
   32610:	stp	x29, x30, [sp, #-80]!
   32614:	mov	w3, #0x1                   	// #1
   32618:	mov	x29, sp
   3261c:	add	x2, x29, #0x10
   32620:	strb	w3, [x29, #56]
   32624:	stur	wzr, [x29, #57]
   32628:	sturh	wzr, [x29, #61]
   3262c:	strb	wzr, [x29, #63]
   32630:	str	x30, [x29, #64]
   32634:	str	x29, [x29, #32]
   32638:	ldp	x4, x5, [x29, #56]
   3263c:	stp	x4, x5, [x29, #16]
   32640:	bl	2fad8 <__ubsan_default_options@@Base+0x490>
   32644:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000032648 <__ubsan_handle_builtin_unreachable@@Base>:
   32648:	stp	x29, x30, [sp, #-80]!
   3264c:	mov	w2, #0x1                   	// #1
   32650:	mov	x29, sp
   32654:	add	x1, x29, #0x10
   32658:	strb	w2, [x29, #56]
   3265c:	stur	wzr, [x29, #57]
   32660:	sturh	wzr, [x29, #61]
   32664:	strb	wzr, [x29, #63]
   32668:	str	x30, [x29, #64]
   3266c:	str	x29, [x29, #32]
   32670:	ldp	x2, x3, [x29, #56]
   32674:	stp	x2, x3, [x29, #16]
   32678:	bl	30318 <__ubsan_default_options@@Base+0xcd0>
   3267c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000032680 <__ubsan_handle_missing_return@@Base>:
   32680:	stp	x29, x30, [sp, #-80]!
   32684:	mov	w2, #0x1                   	// #1
   32688:	mov	x29, sp
   3268c:	add	x1, x29, #0x10
   32690:	strb	w2, [x29, #56]
   32694:	stur	wzr, [x29, #57]
   32698:	sturh	wzr, [x29, #61]
   3269c:	strb	wzr, [x29, #63]
   326a0:	str	x30, [x29, #64]
   326a4:	str	x29, [x29, #32]
   326a8:	ldp	x2, x3, [x29, #56]
   326ac:	stp	x2, x3, [x29, #16]
   326b0:	bl	30238 <__ubsan_default_options@@Base+0xbf0>
   326b4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

00000000000326b8 <__ubsan_handle_vla_bound_not_positive@@Base>:
   326b8:	stp	x29, x30, [sp, #-80]!
   326bc:	mov	x29, sp
   326c0:	add	x2, x29, #0x10
   326c4:	stp	xzr, x30, [x29, #56]
   326c8:	ldp	x4, x5, [x29, #56]
   326cc:	stp	x4, x5, [x29, #16]
   326d0:	str	x29, [x29, #32]
   326d4:	bl	2fc48 <__ubsan_default_options@@Base+0x600>
   326d8:	ldp	x29, x30, [sp], #80
   326dc:	ret

00000000000326e0 <__ubsan_handle_vla_bound_not_positive_abort@@Base>:
   326e0:	stp	x29, x30, [sp, #-80]!
   326e4:	mov	w3, #0x1                   	// #1
   326e8:	mov	x29, sp
   326ec:	add	x2, x29, #0x10
   326f0:	strb	w3, [x29, #56]
   326f4:	stur	wzr, [x29, #57]
   326f8:	sturh	wzr, [x29, #61]
   326fc:	strb	wzr, [x29, #63]
   32700:	str	x30, [x29, #64]
   32704:	str	x29, [x29, #32]
   32708:	ldp	x4, x5, [x29, #56]
   3270c:	stp	x4, x5, [x29, #16]
   32710:	bl	2fc48 <__ubsan_default_options@@Base+0x600>
   32714:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000032718 <__ubsan_handle_float_cast_overflow@@Base>:
   32718:	stp	x29, x30, [sp, #-80]!
   3271c:	mov	x29, sp
   32720:	add	x2, x29, #0x10
   32724:	stp	xzr, x30, [x29, #56]
   32728:	ldp	x4, x5, [x29, #56]
   3272c:	stp	x4, x5, [x29, #16]
   32730:	str	x29, [x29, #32]
   32734:	bl	303f8 <__ubsan_default_options@@Base+0xdb0>
   32738:	ldp	x29, x30, [sp], #80
   3273c:	ret

0000000000032740 <__ubsan_handle_float_cast_overflow_abort@@Base>:
   32740:	stp	x29, x30, [sp, #-80]!
   32744:	mov	w3, #0x1                   	// #1
   32748:	mov	x29, sp
   3274c:	add	x2, x29, #0x10
   32750:	strb	w3, [x29, #56]
   32754:	stur	wzr, [x29, #57]
   32758:	sturh	wzr, [x29, #61]
   3275c:	strb	wzr, [x29, #63]
   32760:	str	x30, [x29, #64]
   32764:	str	x29, [x29, #32]
   32768:	ldp	x4, x5, [x29, #56]
   3276c:	stp	x4, x5, [x29, #16]
   32770:	bl	303f8 <__ubsan_default_options@@Base+0xdb0>
   32774:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000032778 <__ubsan_handle_load_invalid_value@@Base>:
   32778:	stp	x29, x30, [sp, #-80]!
   3277c:	mov	x29, sp
   32780:	add	x2, x29, #0x10
   32784:	stp	xzr, x30, [x29, #56]
   32788:	ldp	x4, x5, [x29, #56]
   3278c:	stp	x4, x5, [x29, #16]
   32790:	str	x29, [x29, #32]
   32794:	bl	30080 <__ubsan_default_options@@Base+0xa38>
   32798:	ldp	x29, x30, [sp], #80
   3279c:	ret

00000000000327a0 <__ubsan_handle_load_invalid_value_abort@@Base>:
   327a0:	stp	x29, x30, [sp, #-80]!
   327a4:	mov	w3, #0x1                   	// #1
   327a8:	mov	x29, sp
   327ac:	add	x2, x29, #0x10
   327b0:	strb	w3, [x29, #56]
   327b4:	stur	wzr, [x29, #57]
   327b8:	sturh	wzr, [x29, #61]
   327bc:	strb	wzr, [x29, #63]
   327c0:	str	x30, [x29, #64]
   327c4:	str	x29, [x29, #32]
   327c8:	ldp	x4, x5, [x29, #56]
   327cc:	stp	x4, x5, [x29, #16]
   327d0:	bl	30080 <__ubsan_default_options@@Base+0xa38>
   327d4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

00000000000327d8 <__ubsan_handle_implicit_conversion@@Base>:
   327d8:	stp	x29, x30, [sp, #-80]!
   327dc:	mov	x6, x1
   327e0:	mov	x3, x2
   327e4:	mov	x29, sp
   327e8:	add	x1, x29, #0x10
   327ec:	mov	x2, x6
   327f0:	stp	xzr, x30, [x29, #56]
   327f4:	ldp	x4, x5, [x29, #56]
   327f8:	stp	x4, x5, [x29, #16]
   327fc:	str	x29, [x29, #32]
   32800:	bl	30d48 <__ubsan_default_options@@Base+0x1700>
   32804:	ldp	x29, x30, [sp], #80
   32808:	ret
   3280c:	nop

0000000000032810 <__ubsan_handle_implicit_conversion_abort@@Base>:
   32810:	stp	x29, x30, [sp, #-80]!
   32814:	mov	w4, #0x1                   	// #1
   32818:	mov	x3, x2
   3281c:	mov	x29, sp
   32820:	mov	x2, x1
   32824:	add	x1, x29, #0x10
   32828:	strb	w4, [x29, #56]
   3282c:	stur	wzr, [x29, #57]
   32830:	sturh	wzr, [x29, #61]
   32834:	strb	wzr, [x29, #63]
   32838:	str	x30, [x29, #64]
   3283c:	str	x29, [x29, #32]
   32840:	ldp	x4, x5, [x29, #56]
   32844:	stp	x4, x5, [x29, #16]
   32848:	bl	30d48 <__ubsan_default_options@@Base+0x1700>
   3284c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000032850 <__ubsan_handle_invalid_builtin@@Base>:
   32850:	stp	x29, x30, [sp, #-80]!
   32854:	mov	w1, #0x1                   	// #1
   32858:	mov	x29, sp
   3285c:	strb	w1, [x29, #56]
   32860:	add	x1, x29, #0x10
   32864:	stur	wzr, [x29, #57]
   32868:	sturh	wzr, [x29, #61]
   3286c:	strb	wzr, [x29, #63]
   32870:	str	x30, [x29, #64]
   32874:	str	x29, [x29, #32]
   32878:	ldp	x2, x3, [x29, #56]
   3287c:	stp	x2, x3, [x29, #16]
   32880:	bl	30620 <__ubsan_default_options@@Base+0xfd8>
   32884:	ldp	x29, x30, [sp], #80
   32888:	ret
   3288c:	nop

0000000000032890 <__ubsan_handle_invalid_builtin_abort@@Base>:
   32890:	stp	x29, x30, [sp, #-80]!
   32894:	mov	w2, #0x1                   	// #1
   32898:	mov	x29, sp
   3289c:	add	x1, x29, #0x10
   328a0:	strb	w2, [x29, #56]
   328a4:	stur	wzr, [x29, #57]
   328a8:	sturh	wzr, [x29, #61]
   328ac:	strb	wzr, [x29, #63]
   328b0:	str	x30, [x29, #64]
   328b4:	str	x29, [x29, #32]
   328b8:	ldp	x2, x3, [x29, #56]
   328bc:	stp	x2, x3, [x29, #16]
   328c0:	bl	30620 <__ubsan_default_options@@Base+0xfd8>
   328c4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

00000000000328c8 <__ubsan_handle_nonnull_return_v1@@Base>:
   328c8:	stp	x29, x30, [sp, #-80]!
   328cc:	mov	w3, #0x1                   	// #1
   328d0:	mov	x29, sp
   328d4:	add	x2, x29, #0x10
   328d8:	stp	xzr, x30, [x29, #56]
   328dc:	ldp	x4, x5, [x29, #56]
   328e0:	stp	x4, x5, [x29, #16]
   328e4:	str	x29, [x29, #32]
   328e8:	bl	30b48 <__ubsan_default_options@@Base+0x1500>
   328ec:	ldp	x29, x30, [sp], #80
   328f0:	ret
   328f4:	nop

00000000000328f8 <__ubsan_handle_nonnull_return_v1_abort@@Base>:
   328f8:	stp	x29, x30, [sp, #-80]!
   328fc:	mov	w3, #0x1                   	// #1
   32900:	mov	x29, sp
   32904:	add	x2, x29, #0x10
   32908:	strb	w3, [x29, #56]
   3290c:	stur	wzr, [x29, #57]
   32910:	sturh	wzr, [x29, #61]
   32914:	strb	wzr, [x29, #63]
   32918:	str	x30, [x29, #64]
   3291c:	str	x29, [x29, #32]
   32920:	ldp	x4, x5, [x29, #56]
   32924:	stp	x4, x5, [x29, #16]
   32928:	bl	30b48 <__ubsan_default_options@@Base+0x1500>
   3292c:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000032930 <__ubsan_handle_nullability_return_v1@@Base>:
   32930:	stp	x29, x30, [sp, #-80]!
   32934:	mov	w3, #0x0                   	// #0
   32938:	mov	x29, sp
   3293c:	add	x2, x29, #0x10
   32940:	stp	xzr, x30, [x29, #56]
   32944:	ldp	x4, x5, [x29, #56]
   32948:	stp	x4, x5, [x29, #16]
   3294c:	str	x29, [x29, #32]
   32950:	bl	30b48 <__ubsan_default_options@@Base+0x1500>
   32954:	ldp	x29, x30, [sp], #80
   32958:	ret
   3295c:	nop

0000000000032960 <__ubsan_handle_nullability_return_v1_abort@@Base>:
   32960:	stp	x29, x30, [sp, #-80]!
   32964:	mov	w3, #0x1                   	// #1
   32968:	mov	x29, sp
   3296c:	add	x2, x29, #0x10
   32970:	strb	w3, [x29, #56]
   32974:	mov	w3, #0x0                   	// #0
   32978:	stur	wzr, [x29, #57]
   3297c:	sturh	wzr, [x29, #61]
   32980:	strb	wzr, [x29, #63]
   32984:	str	x30, [x29, #64]
   32988:	str	x29, [x29, #32]
   3298c:	ldp	x4, x5, [x29, #56]
   32990:	stp	x4, x5, [x29, #16]
   32994:	bl	30b48 <__ubsan_default_options@@Base+0x1500>
   32998:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   3299c:	nop

00000000000329a0 <__ubsan_handle_nonnull_arg@@Base>:
   329a0:	stp	x29, x30, [sp, #-80]!
   329a4:	mov	w2, #0x1                   	// #1
   329a8:	mov	x29, sp
   329ac:	add	x1, x29, #0x10
   329b0:	stp	xzr, x30, [x29, #56]
   329b4:	ldp	x4, x5, [x29, #56]
   329b8:	stp	x4, x5, [x29, #16]
   329bc:	str	x29, [x29, #32]
   329c0:	bl	30968 <__ubsan_default_options@@Base+0x1320>
   329c4:	ldp	x29, x30, [sp], #80
   329c8:	ret
   329cc:	nop

00000000000329d0 <__ubsan_handle_nonnull_arg_abort@@Base>:
   329d0:	stp	x29, x30, [sp, #-80]!
   329d4:	mov	w2, #0x1                   	// #1
   329d8:	mov	x29, sp
   329dc:	add	x1, x29, #0x10
   329e0:	strb	w2, [x29, #56]
   329e4:	stur	wzr, [x29, #57]
   329e8:	sturh	wzr, [x29, #61]
   329ec:	strb	wzr, [x29, #63]
   329f0:	str	x30, [x29, #64]
   329f4:	str	x29, [x29, #32]
   329f8:	ldp	x4, x5, [x29, #56]
   329fc:	stp	x4, x5, [x29, #16]
   32a00:	bl	30968 <__ubsan_default_options@@Base+0x1320>
   32a04:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000032a08 <__ubsan_handle_nullability_arg@@Base>:
   32a08:	stp	x29, x30, [sp, #-80]!
   32a0c:	mov	w2, #0x0                   	// #0
   32a10:	mov	x29, sp
   32a14:	add	x1, x29, #0x10
   32a18:	stp	xzr, x30, [x29, #56]
   32a1c:	ldp	x4, x5, [x29, #56]
   32a20:	stp	x4, x5, [x29, #16]
   32a24:	str	x29, [x29, #32]
   32a28:	bl	30968 <__ubsan_default_options@@Base+0x1320>
   32a2c:	ldp	x29, x30, [sp], #80
   32a30:	ret
   32a34:	nop

0000000000032a38 <__ubsan_handle_nullability_arg_abort@@Base>:
   32a38:	stp	x29, x30, [sp, #-80]!
   32a3c:	mov	w2, #0x1                   	// #1
   32a40:	mov	x29, sp
   32a44:	add	x1, x29, #0x10
   32a48:	strb	w2, [x29, #56]
   32a4c:	mov	w2, #0x0                   	// #0
   32a50:	stur	wzr, [x29, #57]
   32a54:	sturh	wzr, [x29, #61]
   32a58:	strb	wzr, [x29, #63]
   32a5c:	str	x30, [x29, #64]
   32a60:	str	x29, [x29, #32]
   32a64:	ldp	x4, x5, [x29, #56]
   32a68:	stp	x4, x5, [x29, #16]
   32a6c:	bl	30968 <__ubsan_default_options@@Base+0x1320>
   32a70:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   32a74:	nop

0000000000032a78 <__ubsan_handle_pointer_overflow@@Base>:
   32a78:	stp	x29, x30, [sp, #-80]!
   32a7c:	mov	x29, sp
   32a80:	add	x3, x29, #0x10
   32a84:	stp	xzr, x30, [x29, #56]
   32a88:	ldp	x4, x5, [x29, #56]
   32a8c:	stp	x4, x5, [x29, #16]
   32a90:	str	x29, [x29, #32]
   32a94:	bl	31f00 <__ubsan_default_options@@Base+0x28b8>
   32a98:	ldp	x29, x30, [sp], #80
   32a9c:	ret

0000000000032aa0 <__ubsan_handle_pointer_overflow_abort@@Base>:
   32aa0:	stp	x29, x30, [sp, #-80]!
   32aa4:	mov	w4, #0x1                   	// #1
   32aa8:	mov	x29, sp
   32aac:	add	x3, x29, #0x10
   32ab0:	strb	w4, [x29, #56]
   32ab4:	stur	wzr, [x29, #57]
   32ab8:	sturh	wzr, [x29, #61]
   32abc:	strb	wzr, [x29, #63]
   32ac0:	str	x30, [x29, #64]
   32ac4:	str	x29, [x29, #32]
   32ac8:	ldp	x4, x5, [x29, #56]
   32acc:	stp	x4, x5, [x29, #16]
   32ad0:	bl	31f00 <__ubsan_default_options@@Base+0x28b8>
   32ad4:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000032ad8 <__ubsan_handle_cfi_check_fail@@Base>:
   32ad8:	stp	x29, x30, [sp, #-80]!
   32adc:	mov	x29, sp
   32ae0:	ldrb	w3, [x0]
   32ae4:	sub	w3, w3, #0x4
   32ae8:	stp	xzr, x30, [x29, #56]
   32aec:	and	w3, w3, #0xff
   32af0:	cmp	w3, #0x1
   32af4:	b.ls	32b1c <__ubsan_handle_cfi_check_fail@@Base+0x44>  // b.plast
   32af8:	ldp	x4, x5, [x29, #56]
   32afc:	cmp	x2, #0x0
   32b00:	add	x3, x29, #0x10
   32b04:	cset	w2, ne  // ne = any
   32b08:	stp	x4, x5, [x29, #16]
   32b0c:	str	x29, [x29, #32]
   32b10:	bl	6550 <__ubsan_handle_cfi_bad_type@plt>
   32b14:	ldp	x29, x30, [sp], #80
   32b18:	ret
   32b1c:	ldp	x4, x5, [x29, #56]
   32b20:	add	x2, x29, #0x10
   32b24:	stp	x4, x5, [x29, #16]
   32b28:	str	x29, [x29, #32]
   32b2c:	bl	313d8 <__ubsan_default_options@@Base+0x1d90>
   32b30:	ldp	x29, x30, [sp], #80
   32b34:	ret

0000000000032b38 <__ubsan_handle_cfi_check_fail_abort@@Base>:
   32b38:	stp	x29, x30, [sp, #-80]!
   32b3c:	mov	w3, #0x1                   	// #1
   32b40:	mov	x29, sp
   32b44:	strb	w3, [x29, #56]
   32b48:	ldrb	w3, [x0]
   32b4c:	stur	wzr, [x29, #57]
   32b50:	sub	w3, w3, #0x4
   32b54:	sturh	wzr, [x29, #61]
   32b58:	strb	wzr, [x29, #63]
   32b5c:	and	w3, w3, #0xff
   32b60:	str	x30, [x29, #64]
   32b64:	cmp	w3, #0x1
   32b68:	b.ls	32b8c <__ubsan_handle_cfi_check_fail_abort@@Base+0x54>  // b.plast
   32b6c:	ldp	x4, x5, [x29, #56]
   32b70:	cmp	x2, #0x0
   32b74:	add	x3, x29, #0x10
   32b78:	cset	w2, ne  // ne = any
   32b7c:	stp	x4, x5, [x29, #16]
   32b80:	str	x29, [x29, #32]
   32b84:	bl	6550 <__ubsan_handle_cfi_bad_type@plt>
   32b88:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   32b8c:	ldp	x4, x5, [x29, #56]
   32b90:	add	x2, x29, #0x10
   32b94:	stp	x4, x5, [x29, #16]
   32b98:	str	x29, [x29, #32]
   32b9c:	bl	313d8 <__ubsan_default_options@@Base+0x1d90>
   32ba0:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   32ba4:	nop
   32ba8:	adrp	x1, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   32bac:	str	x0, [x1, #3600]
   32bb0:	ret
   32bb4:	nop

0000000000032bb8 <__ubsan_on_report@@Base>:
   32bb8:	ret
   32bbc:	nop
   32bc0:	stp	x19, x20, [sp, #-80]!
   32bc4:	add	x20, x0, #0x10
   32bc8:	mov	x19, x0
   32bcc:	stp	x21, x22, [sp, #16]
   32bd0:	stp	x23, x24, [sp, #32]
   32bd4:	stp	x25, x26, [sp, #48]
   32bd8:	str	x30, [sp, #64]
   32bdc:	stp	x1, x2, [x0]
   32be0:	ldr	x0, [x3, #24]
   32be4:	stp	xzr, xzr, [x20, #8]
   32be8:	str	xzr, [x19, #16]
   32bec:	adds	x21, x0, #0x1
   32bf0:	b.ne	32c18 <__ubsan_on_report@@Base+0x60>  // b.any
   32bf4:	str	xzr, [x20, #24]
   32bf8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2458>
   32bfc:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   32c00:	add	x2, x2, #0x58
   32c04:	add	x0, x0, #0x188
   32c08:	mov	x4, #0x0                   	// #0
   32c0c:	mov	x3, #0x0                   	// #0
   32c10:	mov	w1, #0x1c5                 	// #453
   32c14:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   32c18:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   32c1c:	mov	x22, x3
   32c20:	ldr	x23, [x25, #4016]
   32c24:	ldr	x0, [x23]
   32c28:	cbz	x0, 32ce0 <__ubsan_on_report@@Base+0x128>
   32c2c:	sub	x1, x0, #0x1
   32c30:	tst	x0, x1
   32c34:	b.ne	32d58 <__ubsan_on_report@@Base+0x1a0>  // b.any
   32c38:	add	x1, x21, x1
   32c3c:	neg	x0, x0
   32c40:	and	x24, x1, x0
   32c44:	mov	w2, #0x0                   	// #0
   32c48:	mov	x0, x24
   32c4c:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   32c50:	add	x1, x26, #0xb50
   32c54:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   32c58:	ldr	x2, [x20, #16]
   32c5c:	mov	x23, x0
   32c60:	ldr	x1, [x19, #16]
   32c64:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   32c68:	ldr	x1, [x20, #8]
   32c6c:	ldr	x0, [x19, #16]
   32c70:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   32c74:	ldr	x2, [x20, #16]
   32c78:	str	x23, [x19, #16]
   32c7c:	str	x24, [x20, #8]
   32c80:	cmp	x21, x2
   32c84:	b.ls	32ca4 <__ubsan_on_report@@Base+0xec>  // b.plast
   32c88:	cmp	x21, x24
   32c8c:	b.hi	32cec <__ubsan_on_report@@Base+0x134>  // b.pmore
   32c90:	add	x0, x23, x2
   32c94:	mov	w1, #0x0                   	// #0
   32c98:	sub	x2, x21, x2
   32c9c:	bl	1a1c8 <__sanitizer_set_report_fd@@Base+0x2408>
   32ca0:	ldr	x23, [x19, #16]
   32ca4:	stp	x21, xzr, [x20, #16]
   32ca8:	mov	x0, x19
   32cac:	strb	wzr, [x23]
   32cb0:	bl	32ba8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x70>
   32cb4:	ldr	x2, [x22]
   32cb8:	mov	x0, x20
   32cbc:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   32cc0:	add	x1, x1, #0xbf8
   32cc4:	bl	1fc80 <__sanitizer_on_print@@Base+0x420>
   32cc8:	ldp	x21, x22, [sp, #16]
   32ccc:	ldp	x23, x24, [sp, #32]
   32cd0:	ldp	x25, x26, [sp, #48]
   32cd4:	ldr	x30, [sp, #64]
   32cd8:	ldp	x19, x20, [sp], #80
   32cdc:	b	6420 <__ubsan_on_report@plt>
   32ce0:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   32ce4:	str	x0, [x23]
   32ce8:	b	32c2c <__ubsan_on_report@@Base+0x74>
   32cec:	ldr	x25, [x25, #4016]
   32cf0:	ldr	x0, [x25]
   32cf4:	cbz	x0, 32d4c <__ubsan_on_report@@Base+0x194>
   32cf8:	sub	x1, x0, #0x1
   32cfc:	tst	x0, x1
   32d00:	b.ne	32d58 <__ubsan_on_report@@Base+0x1a0>  // b.any
   32d04:	add	x1, x21, x1
   32d08:	neg	x0, x0
   32d0c:	and	x24, x1, x0
   32d10:	mov	w2, #0x0                   	// #0
   32d14:	add	x1, x26, #0xb50
   32d18:	mov	x0, x24
   32d1c:	bl	1e4b8 <__sanitizer_set_report_fd@@Base+0x66f8>
   32d20:	mov	x23, x0
   32d24:	ldr	x2, [x20, #16]
   32d28:	ldr	x1, [x19, #16]
   32d2c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   32d30:	ldr	x1, [x20, #8]
   32d34:	ldr	x0, [x19, #16]
   32d38:	bl	1da10 <__sanitizer_set_report_fd@@Base+0x5c50>
   32d3c:	ldr	x2, [x20, #16]
   32d40:	str	x23, [x19, #16]
   32d44:	str	x24, [x20, #8]
   32d48:	b	32c90 <__ubsan_on_report@@Base+0xd8>
   32d4c:	bl	1d260 <__sanitizer_set_report_fd@@Base+0x54a0>
   32d50:	str	x0, [x25]
   32d54:	b	32cf8 <__ubsan_on_report@@Base+0x140>
   32d58:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x458>
   32d5c:	add	x0, x0, #0xb38
   32d60:	bl	171d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   32d64:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>

0000000000032d68 <__ubsan_get_current_report_data@@Base>:
   32d68:	cmp	x0, #0x0
   32d6c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   32d70:	b.eq	32e40 <__ubsan_get_current_report_data@@Base+0xd8>  // b.none
   32d74:	cmp	x2, #0x0
   32d78:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   32d7c:	b.eq	32e40 <__ubsan_get_current_report_data@@Base+0xd8>  // b.none
   32d80:	cmp	x4, #0x0
   32d84:	ccmp	x5, #0x0, #0x4, ne  // ne = any
   32d88:	b.eq	32e40 <__ubsan_get_current_report_data@@Base+0xd8>  // b.none
   32d8c:	adrp	x6, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   32d90:	ldr	x6, [x6, #3600]
   32d94:	ldr	x9, [x6, #16]
   32d98:	ldrb	w8, [x9]
   32d9c:	sub	w7, w8, #0x61
   32da0:	and	w7, w7, #0xff
   32da4:	cmp	w7, #0x19
   32da8:	b.ls	32df0 <__ubsan_get_current_report_data@@Base+0x88>  // b.plast
   32dac:	ldr	x7, [x6]
   32db0:	str	x7, [x0]
   32db4:	ldp	x7, x0, [x6, #8]
   32db8:	str	x0, [x1]
   32dbc:	ldr	w1, [x7]
   32dc0:	cmp	w1, #0x1
   32dc4:	b.eq	32e14 <__ubsan_get_current_report_data@@Base+0xac>  // b.none
   32dc8:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   32dcc:	add	x0, x0, #0x160
   32dd0:	str	x0, [x2]
   32dd4:	cmp	w1, #0x2
   32dd8:	str	wzr, [x4]
   32ddc:	str	wzr, [x3]
   32de0:	b.eq	32e34 <__ubsan_get_current_report_data@@Base+0xcc>  // b.none
   32de4:	mov	x0, #0x0                   	// #0
   32de8:	str	x0, [x5]
   32dec:	ret
   32df0:	sub	w8, w8, #0x20
   32df4:	strb	w8, [x9]
   32df8:	ldr	x7, [x6]
   32dfc:	str	x7, [x0]
   32e00:	ldp	x7, x0, [x6, #8]
   32e04:	str	x0, [x1]
   32e08:	ldr	w1, [x7]
   32e0c:	cmp	w1, #0x1
   32e10:	b.ne	32dc8 <__ubsan_get_current_report_data@@Base+0x60>  // b.any
   32e14:	ldr	x8, [x7, #8]
   32e18:	mov	x0, #0x0                   	// #0
   32e1c:	ldp	w6, w1, [x7, #16]
   32e20:	str	x8, [x2]
   32e24:	str	w6, [x3]
   32e28:	str	w1, [x4]
   32e2c:	str	x0, [x5]
   32e30:	ret
   32e34:	ldr	x0, [x7, #24]
   32e38:	str	x0, [x5]
   32e3c:	ret
   32e40:	str	x30, [sp, #-16]!
   32e44:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   32e48:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   32e4c:	add	x2, x2, #0x120
   32e50:	add	x0, x0, #0x170
   32e54:	mov	x4, #0x0                   	// #0
   32e58:	mov	x3, #0x0                   	// #0
   32e5c:	mov	w1, #0x31                  	// #49
   32e60:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   32e64:	nop
   32e68:	ldr	x1, [x0]
   32e6c:	str	x30, [sp, #-16]!
   32e70:	ldrh	w2, [x1]
   32e74:	cbnz	w2, 32eac <__ubsan_get_current_report_data@@Base+0x144>
   32e78:	ldrh	w1, [x1, #2]
   32e7c:	tbz	w1, #0, 32eac <__ubsan_get_current_report_data@@Base+0x144>
   32e80:	asr	w2, w1, #1
   32e84:	mov	w1, #0x1                   	// #1
   32e88:	lsl	w1, w1, w2
   32e8c:	cmp	w1, #0x40
   32e90:	b.ls	32ecc <__ubsan_get_current_report_data@@Base+0x164>  // b.plast
   32e94:	cmp	w1, #0x80
   32e98:	b.ne	32f2c <__ubsan_get_current_report_data@@Base+0x1c4>  // b.any
   32e9c:	ldr	x1, [x0, #8]
   32ea0:	ldr	x30, [sp], #16
   32ea4:	ldp	x0, x1, [x1]
   32ea8:	ret
   32eac:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   32eb0:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   32eb4:	add	x2, x2, #0x1b8
   32eb8:	add	x0, x0, #0x1e8
   32ebc:	mov	x4, #0x0                   	// #0
   32ec0:	mov	x3, #0x0                   	// #0
   32ec4:	mov	w1, #0x17                  	// #23
   32ec8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   32ecc:	ldr	x0, [x0, #8]
   32ed0:	mov	w2, #0x80                  	// #128
   32ed4:	sub	w2, w2, w1
   32ed8:	mov	w4, #0x3f                  	// #63
   32edc:	sub	w3, w2, #0x40
   32ee0:	sub	w4, w4, w2
   32ee4:	lsr	x5, x0, #1
   32ee8:	cmp	w3, #0x0
   32eec:	lsl	x1, x0, x3
   32ef0:	lsr	x5, x5, x4
   32ef4:	csel	x1, x1, x5, ge  // ge = tcont
   32ef8:	lsl	x0, x0, x2
   32efc:	csel	x0, xzr, x0, ge  // ge = tcont
   32f00:	lsl	x5, x1, #1
   32f04:	asr	x6, x1, #63
   32f08:	lsr	x0, x0, x2
   32f0c:	lsl	x4, x5, x4
   32f10:	orr	x0, x4, x0
   32f14:	asr	x7, x1, x3
   32f18:	csel	x0, x7, x0, ge  // ge = tcont
   32f1c:	asr	x1, x1, x2
   32f20:	csel	x1, x6, x1, ge  // ge = tcont
   32f24:	ldr	x30, [sp], #16
   32f28:	ret
   32f2c:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   32f30:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   32f34:	add	x2, x2, #0x230
   32f38:	add	x0, x0, #0x1e8
   32f3c:	mov	x4, #0x0                   	// #0
   32f40:	mov	x3, #0x0                   	// #0
   32f44:	mov	w1, #0x28                  	// #40
   32f48:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   32f4c:	nop
   32f50:	ldr	x1, [x0]
   32f54:	str	x30, [sp, #-16]!
   32f58:	ldrh	w2, [x1]
   32f5c:	cbnz	w2, 32f8c <__ubsan_get_current_report_data@@Base+0x224>
   32f60:	ldrh	w1, [x1, #2]
   32f64:	tbnz	w1, #0, 32f8c <__ubsan_get_current_report_data@@Base+0x224>
   32f68:	asr	w1, w1, #1
   32f6c:	mov	w2, #0x1                   	// #1
   32f70:	lsl	w1, w2, w1
   32f74:	cmp	w1, #0x40
   32f78:	b.hi	32fac <__ubsan_get_current_report_data@@Base+0x244>  // b.pmore
   32f7c:	mov	x1, #0x0                   	// #0
   32f80:	ldr	x0, [x0, #8]
   32f84:	ldr	x30, [sp], #16
   32f88:	ret
   32f8c:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   32f90:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   32f94:	add	x2, x2, #0x258
   32f98:	add	x0, x0, #0x1e8
   32f9c:	mov	x4, #0x0                   	// #0
   32fa0:	mov	x3, #0x0                   	// #0
   32fa4:	mov	w1, #0x2c                  	// #44
   32fa8:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   32fac:	cmp	w1, #0x80
   32fb0:	b.ne	32fc4 <__ubsan_get_current_report_data@@Base+0x25c>  // b.any
   32fb4:	ldr	x1, [x0, #8]
   32fb8:	ldr	x30, [sp], #16
   32fbc:	ldp	x0, x1, [x1]
   32fc0:	ret
   32fc4:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   32fc8:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   32fcc:	add	x2, x2, #0x230
   32fd0:	add	x0, x0, #0x1e8
   32fd4:	mov	x4, #0x0                   	// #0
   32fd8:	mov	x3, #0x0                   	// #0
   32fdc:	mov	w1, #0x38                  	// #56
   32fe0:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   32fe4:	nop
   32fe8:	ldr	x2, [x0]
   32fec:	str	x30, [sp, #-16]!
   32ff0:	ldrh	w3, [x2]
   32ff4:	cbnz	w3, 3303c <__ubsan_get_current_report_data@@Base+0x2d4>
   32ff8:	ldrh	w2, [x2, #2]
   32ffc:	tbnz	w2, #0, 33008 <__ubsan_get_current_report_data@@Base+0x2a0>
   33000:	ldr	x30, [sp], #16
   33004:	b	32f50 <__ubsan_get_current_report_data@@Base+0x1e8>
   33008:	asr	w2, w2, #1
   3300c:	mov	x1, x0
   33010:	mov	w0, #0x1                   	// #1
   33014:	lsl	w2, w0, w2
   33018:	cmp	w2, #0x40
   3301c:	b.ls	3305c <__ubsan_get_current_report_data@@Base+0x2f4>  // b.plast
   33020:	cmp	w2, #0x80
   33024:	b.ne	330d8 <__ubsan_get_current_report_data@@Base+0x370>  // b.any
   33028:	ldr	x1, [x1, #8]
   3302c:	ldp	x0, x1, [x1]
   33030:	tbnz	x1, #63, 330b8 <__ubsan_get_current_report_data@@Base+0x350>
   33034:	ldr	x30, [sp], #16
   33038:	ret
   3303c:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33040:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33044:	add	x2, x2, #0x1b8
   33048:	add	x0, x0, #0x1e8
   3304c:	mov	x4, #0x0                   	// #0
   33050:	mov	x3, #0x0                   	// #0
   33054:	mov	w1, #0x17                  	// #23
   33058:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   3305c:	ldr	x0, [x1, #8]
   33060:	mov	w1, #0x80                  	// #128
   33064:	sub	w2, w1, w2
   33068:	mov	w4, #0x3f                  	// #63
   3306c:	sub	w3, w2, #0x40
   33070:	sub	w4, w4, w2
   33074:	lsr	x5, x0, #1
   33078:	cmp	w3, #0x0
   3307c:	lsl	x1, x0, x3
   33080:	lsr	x5, x5, x4
   33084:	csel	x1, x1, x5, ge  // ge = tcont
   33088:	lsl	x0, x0, x2
   3308c:	csel	x0, xzr, x0, ge  // ge = tcont
   33090:	lsl	x5, x1, #1
   33094:	asr	x6, x1, #63
   33098:	lsr	x0, x0, x2
   3309c:	lsl	x4, x5, x4
   330a0:	orr	x0, x4, x0
   330a4:	asr	x7, x1, x3
   330a8:	csel	x0, x7, x0, ge  // ge = tcont
   330ac:	asr	x1, x1, x2
   330b0:	csel	x1, x6, x1, ge  // ge = tcont
   330b4:	b	33030 <__ubsan_get_current_report_data@@Base+0x2c8>
   330b8:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   330bc:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   330c0:	add	x2, x2, #0x288
   330c4:	add	x0, x0, #0x1e8
   330c8:	mov	x4, #0x0                   	// #0
   330cc:	mov	x3, #0x0                   	// #0
   330d0:	mov	w1, #0x3f                  	// #63
   330d4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   330d8:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   330dc:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   330e0:	add	x2, x2, #0x230
   330e4:	add	x0, x0, #0x1e8
   330e8:	mov	x4, #0x0                   	// #0
   330ec:	mov	x3, #0x0                   	// #0
   330f0:	mov	w1, #0x28                  	// #40
   330f4:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   330f8:	ldr	x1, [x0]
   330fc:	str	x30, [sp, #-32]!
   33100:	ldrh	w2, [x1]
   33104:	cmp	w2, #0x1
   33108:	b.ne	331b0 <__ubsan_get_current_report_data@@Base+0x448>  // b.any
   3310c:	ldrh	w1, [x1, #2]
   33110:	cmp	w1, #0x40
   33114:	b.ls	33138 <__ubsan_get_current_report_data@@Base+0x3d0>  // b.plast
   33118:	cmp	w1, #0x60
   3311c:	b.eq	33128 <__ubsan_get_current_report_data@@Base+0x3c0>  // b.none
   33120:	cmp	w1, #0x80
   33124:	b.ne	33160 <__ubsan_get_current_report_data@@Base+0x3f8>  // b.any
   33128:	ldr	x0, [x0, #8]
   3312c:	ldr	q0, [x0]
   33130:	ldr	x30, [sp], #32
   33134:	ret
   33138:	cmp	w1, #0x20
   3313c:	b.ne	33188 <__ubsan_get_current_report_data@@Base+0x420>  // b.any
   33140:	add	x1, x0, #0x8
   33144:	mov	x2, #0x4                   	// #4
   33148:	add	x0, sp, #0x18
   3314c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   33150:	ldr	s0, [sp, #24]
   33154:	bl	65d0 <__extendsftf2@plt>
   33158:	ldr	x30, [sp], #32
   3315c:	ret
   33160:	cmp	w1, #0x50
   33164:	b.eq	33128 <__ubsan_get_current_report_data@@Base+0x3c0>  // b.none
   33168:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   3316c:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33170:	add	x2, x2, #0x2c8
   33174:	add	x0, x0, #0x1e8
   33178:	mov	x4, #0x0                   	// #0
   3317c:	mov	x3, #0x0                   	// #0
   33180:	mov	w1, #0x6d                  	// #109
   33184:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   33188:	cmp	w1, #0x40
   3318c:	b.ne	33168 <__ubsan_get_current_report_data@@Base+0x400>  // b.any
   33190:	add	x1, x0, #0x8
   33194:	mov	x2, #0x8                   	// #8
   33198:	add	x0, sp, #0x18
   3319c:	bl	19d00 <__sanitizer_set_report_fd@@Base+0x1f40>
   331a0:	ldr	d0, [sp, #24]
   331a4:	bl	6530 <__extenddftf2@plt>
   331a8:	ldr	x30, [sp], #32
   331ac:	ret
   331b0:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   331b4:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   331b8:	add	x2, x2, #0x2a0
   331bc:	add	x0, x0, #0x1e8
   331c0:	mov	x4, #0x0                   	// #0
   331c4:	mov	x3, #0x0                   	// #0
   331c8:	mov	w1, #0x47                  	// #71
   331cc:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   331d0:	sub	sp, sp, #0x2a0
   331d4:	stp	x19, x20, [sp]
   331d8:	mov	x20, x0
   331dc:	mov	x0, x2
   331e0:	stp	x21, x22, [sp, #16]
   331e4:	mov	x22, x1
   331e8:	mov	x21, x4
   331ec:	mov	x1, x3
   331f0:	str	x30, [sp, #72]
   331f4:	bl	340f0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x548>
   331f8:	tst	w0, #0xff
   331fc:	b.eq	33218 <__ubsan_get_current_report_data@@Base+0x4b0>  // b.none
   33200:	mov	w0, #0x0                   	// #0
   33204:	ldp	x19, x20, [sp]
   33208:	ldp	x21, x22, [sp, #16]
   3320c:	ldr	x30, [sp, #72]
   33210:	add	sp, sp, #0x2a0
   33214:	ret
   33218:	add	x0, x20, #0xc
   3321c:	mov	w1, #0xffffffff            	// #-1
   33220:	stp	x23, x24, [sp, #32]
   33224:	stp	x25, x26, [sp, #48]
   33228:	ldxr	w23, [x0]
   3322c:	stxr	w2, w1, [x0]
   33230:	cbnz	w2, 33228 <__ubsan_get_current_report_data@@Base+0x4c0>
   33234:	dmb	ish
   33238:	ldp	x4, x5, [x21]
   3323c:	mov	x1, #0x0                   	// #0
   33240:	ldr	w24, [x20, #8]
   33244:	add	x19, sp, #0x80
   33248:	ldr	x6, [x21, #16]
   3324c:	mov	x2, x19
   33250:	ldr	x25, [x20]
   33254:	bfxil	x1, x24, #0, #32
   33258:	mov	w3, #0x1b                  	// #27
   3325c:	stp	x4, x5, [sp, #128]
   33260:	bfi	x1, x23, #32, #32
   33264:	mov	x0, x25
   33268:	str	x6, [sp, #144]
   3326c:	bl	32250 <__ubsan_default_options@@Base+0x2c08>
   33270:	ands	w0, w0, #0xff
   33274:	b.ne	333e4 <__ubsan_get_current_report_data@@Base+0x67c>  // b.any
   33278:	mov	x1, x19
   3327c:	mov	w19, #0x1                   	// #1
   33280:	str	w19, [sp, #240]
   33284:	add	x2, sp, #0x50
   33288:	str	x25, [sp, #248]
   3328c:	mov	w3, #0x1b                  	// #27
   33290:	str	w24, [sp, #256]
   33294:	add	x26, sp, #0xf0
   33298:	str	w23, [sp, #260]
   3329c:	ldp	x4, x5, [sp, #240]
   332a0:	stp	x4, x5, [sp, #80]
   332a4:	ldp	x4, x5, [sp, #256]
   332a8:	stp	x4, x5, [sp, #96]
   332ac:	ldr	x4, [sp, #272]
   332b0:	str	x4, [sp, #112]
   332b4:	ldp	x4, x5, [x21]
   332b8:	stp	x4, x5, [sp, #128]
   332bc:	ldr	x4, [x21, #16]
   332c0:	str	x27, [sp, #64]
   332c4:	add	x27, sp, #0xa0
   332c8:	str	x4, [sp, #144]
   332cc:	mov	x0, x27
   332d0:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   332d4:	mov	x0, x22
   332d8:	bl	2e3e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bc0>
   332dc:	mov	x21, x0
   332e0:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   332e4:	ldr	x1, [x20, #16]
   332e8:	add	x3, x3, #0xca8
   332ec:	ldr	x20, [x21, #40]
   332f0:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   332f4:	add	x2, x2, #0x300
   332f8:	mov	x4, #0x1b00000000          	// #115964116992
   332fc:	cmp	x20, #0x0
   33300:	mov	x0, x26
   33304:	csel	x20, x3, x20, eq  // eq = none
   33308:	str	w19, [sp, #240]
   3330c:	str	x25, [sp, #248]
   33310:	str	w24, [sp, #256]
   33314:	str	w23, [sp, #260]
   33318:	stp	x4, x2, [sp, #280]
   3331c:	str	wzr, [sp, #304]
   33320:	str	x20, [sp, #320]
   33324:	str	w19, [sp, #560]
   33328:	str	wzr, [sp, #568]
   3332c:	str	xzr, [sp, #576]
   33330:	str	xzr, [sp, #584]
   33334:	str	wzr, [sp, #608]
   33338:	str	xzr, [sp, #616]
   3333c:	str	xzr, [sp, #624]
   33340:	str	xzr, [sp, #648]
   33344:	str	wzr, [sp, #656]
   33348:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   3334c:	mov	x0, x26
   33350:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   33354:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   33358:	mov	x2, #0x1                   	// #1
   3335c:	add	x1, x1, #0xcf8
   33360:	mov	w3, #0x3                   	// #3
   33364:	movk	x2, #0x1b, lsl #32
   33368:	mov	x0, x26
   3336c:	str	w3, [sp, #240]
   33370:	str	xzr, [sp, #248]
   33374:	str	xzr, [sp, #256]
   33378:	stp	x21, x2, [sp, #272]
   3337c:	str	x1, [sp, #288]
   33380:	str	wzr, [sp, #304]
   33384:	str	x20, [sp, #320]
   33388:	str	w19, [sp, #560]
   3338c:	str	wzr, [sp, #568]
   33390:	str	xzr, [sp, #576]
   33394:	str	xzr, [sp, #584]
   33398:	str	wzr, [sp, #608]
   3339c:	str	xzr, [sp, #616]
   333a0:	str	xzr, [sp, #624]
   333a4:	str	xzr, [sp, #648]
   333a8:	str	wzr, [sp, #656]
   333ac:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   333b0:	mov	x0, x21
   333b4:	bl	29160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   333b8:	mov	x0, x27
   333bc:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   333c0:	mov	w0, w19
   333c4:	ldp	x19, x20, [sp]
   333c8:	ldp	x21, x22, [sp, #16]
   333cc:	ldp	x23, x24, [sp, #32]
   333d0:	ldp	x25, x26, [sp, #48]
   333d4:	ldr	x27, [sp, #64]
   333d8:	ldr	x30, [sp, #72]
   333dc:	add	sp, sp, #0x2a0
   333e0:	ret
   333e4:	ldp	x19, x20, [sp]
   333e8:	ldp	x21, x22, [sp, #16]
   333ec:	ldp	x23, x24, [sp, #32]
   333f0:	ldp	x25, x26, [sp, #48]
   333f4:	ldr	x30, [sp, #72]
   333f8:	add	sp, sp, #0x2a0
   333fc:	ret
   33400:	sub	sp, sp, #0x2e0
   33404:	stp	x19, x20, [sp]
   33408:	mov	x19, x0
   3340c:	mov	x20, x1
   33410:	mov	x0, x1
   33414:	stp	x21, x22, [sp, #16]
   33418:	mov	x21, x3
   3341c:	ldr	x1, [x19, #24]
   33420:	str	x30, [sp, #80]
   33424:	bl	33e50 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2a8>
   33428:	tst	w0, #0xff
   3342c:	b.eq	33448 <__ubsan_get_current_report_data@@Base+0x6e0>  // b.none
   33430:	mov	w0, #0x0                   	// #0
   33434:	ldp	x19, x20, [sp]
   33438:	ldp	x21, x22, [sp, #16]
   3343c:	ldr	x30, [sp, #80]
   33440:	add	sp, sp, #0x2e0
   33444:	ret
   33448:	add	x8, sp, #0xc8
   3344c:	mov	x0, x20
   33450:	stp	x23, x24, [sp, #32]
   33454:	bl	33bf0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x48>
   33458:	ldp	x22, x23, [sp, #200]
   3345c:	cbz	x22, 33470 <__ubsan_get_current_report_data@@Base+0x708>
   33460:	mov	x0, x22
   33464:	bl	2f140 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6918>
   33468:	tst	w0, #0xff
   3346c:	b.ne	3366c <__ubsan_get_current_report_data@@Base+0x904>  // b.any
   33470:	add	x0, x19, #0xc
   33474:	mov	w1, #0xffffffff            	// #-1
   33478:	stp	x25, x26, [sp, #48]
   3347c:	stp	x27, x28, [sp, #64]
   33480:	ldxr	w24, [x0]
   33484:	stxr	w2, w1, [x0]
   33488:	cbnz	w2, 33480 <__ubsan_get_current_report_data@@Base+0x718>
   3348c:	dmb	ish
   33490:	ldp	x4, x5, [x21]
   33494:	mov	x1, #0x0                   	// #0
   33498:	ldr	w25, [x19, #8]
   3349c:	add	x26, sp, #0xa0
   334a0:	ldr	x6, [x21, #16]
   334a4:	mov	x2, x26
   334a8:	ldr	x27, [x19]
   334ac:	bfxil	x1, x25, #0, #32
   334b0:	mov	w3, #0x1e                  	// #30
   334b4:	stp	x4, x5, [sp, #160]
   334b8:	bfi	x1, x24, #32, #32
   334bc:	mov	x0, x27
   334c0:	str	x6, [sp, #176]
   334c4:	bl	32250 <__ubsan_default_options@@Base+0x2c08>
   334c8:	tst	w0, #0xff
   334cc:	b.ne	3365c <__ubsan_get_current_report_data@@Base+0x8f4>  // b.any
   334d0:	mov	w28, #0x1                   	// #1
   334d4:	str	w28, [sp, #304]
   334d8:	str	x27, [sp, #312]
   334dc:	add	x8, sp, #0xe0
   334e0:	str	w25, [sp, #320]
   334e4:	mov	x0, x8
   334e8:	str	w24, [sp, #324]
   334ec:	mov	x1, x26
   334f0:	ldp	x6, x7, [sp, #304]
   334f4:	stp	x6, x7, [sp, #112]
   334f8:	add	x2, sp, #0x70
   334fc:	ldp	x6, x7, [x21]
   33500:	mov	w3, #0x1e                  	// #30
   33504:	ldp	x4, x5, [sp, #320]
   33508:	stp	x4, x5, [sp, #128]
   3350c:	add	x26, sp, #0x130
   33510:	ldr	x5, [x21, #16]
   33514:	str	x8, [sp, #104]
   33518:	ldr	x9, [sp, #336]
   3351c:	str	x9, [sp, #144]
   33520:	stp	x6, x7, [sp, #160]
   33524:	str	x5, [sp, #176]
   33528:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   3352c:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   33530:	ldrb	w7, [x19, #32]
   33534:	ldr	x1, [x19, #16]
   33538:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   3353c:	ldr	x3, [x3, #3616]
   33540:	add	x2, x2, #0x348
   33544:	mov	w4, #0x2                   	// #2
   33548:	mov	x6, #0x1e00000000          	// #128849018880
   3354c:	mov	w5, #0x5                   	// #5
   33550:	mov	x0, x26
   33554:	ldr	x3, [x3, x7, lsl #3]
   33558:	str	w28, [sp, #304]
   3355c:	str	x27, [sp, #312]
   33560:	str	w25, [sp, #320]
   33564:	str	w24, [sp, #324]
   33568:	stp	x6, x2, [sp, #344]
   3356c:	str	wzr, [sp, #368]
   33570:	str	x3, [sp, #384]
   33574:	str	w5, [sp, #400]
   33578:	str	x20, [sp, #416]
   3357c:	str	w4, [sp, #624]
   33580:	str	wzr, [sp, #632]
   33584:	str	xzr, [sp, #640]
   33588:	str	xzr, [sp, #648]
   3358c:	str	wzr, [sp, #672]
   33590:	str	xzr, [sp, #680]
   33594:	str	xzr, [sp, #688]
   33598:	str	xzr, [sp, #712]
   3359c:	str	wzr, [sp, #720]
   335a0:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   335a4:	mov	x0, x26
   335a8:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   335ac:	add	x1, x20, #0x8
   335b0:	mov	w4, #0x2                   	// #2
   335b4:	ldr	x8, [sp, #104]
   335b8:	cbz	x22, 336d0 <__ubsan_get_current_report_data@@Base+0x968>
   335bc:	str	x8, [sp, #104]
   335c0:	cbnz	x23, 33674 <__ubsan_get_current_report_data@@Base+0x90c>
   335c4:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   335c8:	mov	x5, #0x1                   	// #1
   335cc:	mov	x0, x26
   335d0:	add	x2, x2, #0x420
   335d4:	adrp	x3, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   335d8:	movk	x5, #0x1e, lsl #32
   335dc:	add	x3, x3, #0x408
   335e0:	str	w4, [sp, #304]
   335e4:	str	xzr, [sp, #312]
   335e8:	str	xzr, [sp, #320]
   335ec:	str	x20, [sp, #328]
   335f0:	stp	x5, x3, [sp, #344]
   335f4:	str	w28, [sp, #368]
   335f8:	str	x22, [sp, #384]
   335fc:	str	w28, [sp, #624]
   33600:	str	w4, [sp, #632]
   33604:	str	xzr, [sp, #640]
   33608:	str	xzr, [sp, #648]
   3360c:	str	x20, [sp, #656]
   33610:	str	w4, [sp, #672]
   33614:	str	xzr, [sp, #680]
   33618:	str	xzr, [sp, #688]
   3361c:	str	x1, [sp, #696]
   33620:	str	x2, [sp, #712]
   33624:	str	w28, [sp, #720]
   33628:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   3362c:	ldr	x8, [sp, #104]
   33630:	mov	x0, x8
   33634:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   33638:	mov	w0, #0x1                   	// #1
   3363c:	ldp	x19, x20, [sp]
   33640:	ldp	x21, x22, [sp, #16]
   33644:	ldp	x23, x24, [sp, #32]
   33648:	ldp	x25, x26, [sp, #48]
   3364c:	ldp	x27, x28, [sp, #64]
   33650:	ldr	x30, [sp, #80]
   33654:	add	sp, sp, #0x2e0
   33658:	ret
   3365c:	ldp	x23, x24, [sp, #32]
   33660:	ldp	x25, x26, [sp, #48]
   33664:	ldp	x27, x28, [sp, #64]
   33668:	b	33430 <__ubsan_get_current_report_data@@Base+0x6c8>
   3366c:	ldp	x23, x24, [sp, #32]
   33670:	b	33430 <__ubsan_get_current_report_data@@Base+0x6c8>
   33674:	mov	x7, #0x1                   	// #1
   33678:	sub	x9, x20, x23
   3367c:	ldr	x6, [sp, #216]
   33680:	adrp	x3, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33684:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33688:	add	x3, x3, #0x430
   3368c:	movk	x7, #0x1e, lsl #32
   33690:	mov	w5, #0x3                   	// #3
   33694:	mov	x0, x26
   33698:	add	x2, x2, #0x478
   3369c:	str	w4, [sp, #304]
   336a0:	str	xzr, [sp, #312]
   336a4:	str	xzr, [sp, #320]
   336a8:	str	x9, [sp, #328]
   336ac:	stp	x7, x3, [sp, #344]
   336b0:	str	w4, [sp, #368]
   336b4:	stp	x23, xzr, [sp, #384]
   336b8:	str	w28, [sp, #400]
   336bc:	str	x22, [sp, #416]
   336c0:	str	w28, [sp, #432]
   336c4:	str	x6, [sp, #448]
   336c8:	str	w5, [sp, #624]
   336cc:	b	33600 <__ubsan_get_current_report_data@@Base+0x898>
   336d0:	add	x23, x23, #0x100, lsl #12
   336d4:	cmp	x23, #0x200, lsl #12
   336d8:	b.ls	33720 <__ubsan_get_current_report_data@@Base+0x9b8>  // b.plast
   336dc:	adrp	x3, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   336e0:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   336e4:	mov	x0, x26
   336e8:	add	x3, x3, #0x3b0
   336ec:	add	x2, x2, #0x3f0
   336f0:	str	x8, [sp, #104]
   336f4:	mov	x5, #0x1                   	// #1
   336f8:	str	w4, [sp, #304]
   336fc:	movk	x5, #0x1e, lsl #32
   33700:	str	xzr, [sp, #312]
   33704:	str	xzr, [sp, #320]
   33708:	str	x20, [sp, #328]
   3370c:	stp	x5, x3, [sp, #344]
   33710:	str	w28, [sp, #368]
   33714:	str	xzr, [sp, #384]
   33718:	str	w28, [sp, #624]
   3371c:	b	33600 <__ubsan_get_current_report_data@@Base+0x898>
   33720:	adrp	x3, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33724:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33728:	mov	x0, x26
   3372c:	add	x3, x3, #0x388
   33730:	add	x2, x2, #0x3a0
   33734:	b	336f4 <__ubsan_get_current_report_data@@Base+0x98c>

0000000000033738 <__ubsan_handle_dynamic_type_cache_miss@@Base>:
   33738:	stp	x29, x30, [sp, #-80]!
   3373c:	mov	x29, sp
   33740:	add	x3, x29, #0x10
   33744:	stp	xzr, x30, [x29, #56]
   33748:	ldp	x4, x5, [x29, #56]
   3374c:	stp	x4, x5, [x29, #16]
   33750:	str	x29, [x29, #32]
   33754:	bl	33400 <__ubsan_get_current_report_data@@Base+0x698>
   33758:	ldp	x29, x30, [sp], #80
   3375c:	ret

0000000000033760 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base>:
   33760:	stp	x29, x30, [sp, #-80]!
   33764:	mov	x29, sp
   33768:	add	x3, x29, #0x10
   3376c:	stp	xzr, x30, [x29, #56]
   33770:	ldp	x4, x5, [x29, #56]
   33774:	stp	x4, x5, [x29, #16]
   33778:	str	x29, [x29, #32]
   3377c:	bl	33400 <__ubsan_get_current_report_data@@Base+0x698>
   33780:	tst	w0, #0xff
   33784:	b.ne	33790 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base+0x30>  // b.any
   33788:	ldp	x29, x30, [sp], #80
   3378c:	ret
   33790:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   33794:	nop

0000000000033798 <__ubsan_handle_cfi_bad_type@@Base>:
   33798:	sub	sp, sp, #0x2d0
   3379c:	stp	x19, x20, [sp]
   337a0:	mov	x20, x3
   337a4:	and	w19, w2, #0xff
   337a8:	stp	x27, x28, [sp, #64]
   337ac:	mov	x27, x0
   337b0:	add	x0, x0, #0x14
   337b4:	stp	x21, x22, [sp, #16]
   337b8:	mov	x21, x1
   337bc:	mov	w1, #0xffffffff            	// #-1
   337c0:	stp	x23, x24, [sp, #32]
   337c4:	stp	x25, x26, [sp, #48]
   337c8:	str	x30, [sp, #80]
   337cc:	ldxr	w22, [x0]
   337d0:	stxr	w2, w1, [x0]
   337d4:	cbnz	w2, 337cc <__ubsan_handle_cfi_bad_type@@Base+0x34>
   337d8:	dmb	ish
   337dc:	ldp	x4, x5, [x20]
   337e0:	mov	x1, #0x0                   	// #0
   337e4:	ldr	w23, [x27, #16]
   337e8:	add	x26, sp, #0x90
   337ec:	ldr	x6, [x20, #16]
   337f0:	mov	x2, x26
   337f4:	ldr	x24, [x27, #8]
   337f8:	bfxil	x1, x23, #0, #32
   337fc:	mov	w3, #0x1f                  	// #31
   33800:	stp	x4, x5, [sp, #144]
   33804:	bfi	x1, x22, #32, #32
   33808:	mov	x0, x24
   3380c:	str	x6, [sp, #160]
   33810:	bl	32250 <__ubsan_default_options@@Base+0x2c08>
   33814:	tst	w0, #0xff
   33818:	b.ne	33a48 <__ubsan_handle_cfi_bad_type@@Base+0x2b0>  // b.any
   3381c:	mov	w0, #0x1                   	// #1
   33820:	str	w0, [sp, #288]
   33824:	str	x24, [sp, #296]
   33828:	add	x25, sp, #0xd0
   3382c:	str	w23, [sp, #304]
   33830:	mov	x1, x26
   33834:	str	w22, [sp, #308]
   33838:	add	x2, sp, #0x60
   3383c:	ldp	x8, x9, [x20]
   33840:	mov	x0, x25
   33844:	ldp	x4, x5, [sp, #288]
   33848:	stp	x4, x5, [sp, #96]
   3384c:	mov	w3, #0x1f                  	// #31
   33850:	ldp	x6, x7, [sp, #304]
   33854:	mov	x26, #0x0                   	// #0
   33858:	ldr	x4, [x20, #16]
   3385c:	stp	x6, x7, [sp, #112]
   33860:	ldr	x10, [sp, #320]
   33864:	str	x10, [sp, #128]
   33868:	stp	x8, x9, [sp, #144]
   3386c:	str	x4, [sp, #160]
   33870:	bl	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   33874:	cbnz	w19, 33a98 <__ubsan_handle_cfi_bad_type@@Base+0x300>
   33878:	ldrb	w0, [x27]
   3387c:	cmp	w0, #0x2
   33880:	b.eq	33b6c <__ubsan_handle_cfi_bad_type@@Base+0x3d4>  // b.none
   33884:	b.hi	33a68 <__ubsan_handle_cfi_bad_type@@Base+0x2d0>  // b.pmore
   33888:	cmp	w0, #0x0
   3388c:	adrp	x19, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33890:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33894:	add	x19, x19, #0x4c8
   33898:	add	x0, x0, #0x4e0
   3389c:	csel	x19, x19, x0, ne  // ne = any
   338a0:	ldr	x1, [x27, #24]
   338a4:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   338a8:	add	x2, x2, #0x518
   338ac:	mov	x3, #0x1f00000000          	// #133143986176
   338b0:	add	x27, sp, #0x120
   338b4:	mov	w28, #0x1                   	// #1
   338b8:	mov	x0, x27
   338bc:	str	w28, [sp, #288]
   338c0:	str	x24, [sp, #296]
   338c4:	str	w23, [sp, #304]
   338c8:	str	w22, [sp, #308]
   338cc:	stp	x3, x2, [sp, #328]
   338d0:	str	wzr, [sp, #608]
   338d4:	str	wzr, [sp, #616]
   338d8:	str	xzr, [sp, #624]
   338dc:	str	xzr, [sp, #632]
   338e0:	str	wzr, [sp, #656]
   338e4:	str	xzr, [sp, #664]
   338e8:	str	xzr, [sp, #672]
   338ec:	str	xzr, [sp, #696]
   338f0:	str	wzr, [sp, #704]
   338f4:	bl	2e408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   338f8:	ldr	w3, [x0, #320]
   338fc:	mov	x1, x0
   33900:	cmp	w3, #0x8
   33904:	b.eq	33b4c <__ubsan_handle_cfi_bad_type@@Base+0x3b4>  // b.none
   33908:	ubfiz	x2, x3, #5, #32
   3390c:	add	w0, w3, #0x1
   33910:	add	x2, x2, #0x40
   33914:	str	w0, [x1, #320]
   33918:	add	x4, x1, x2
   3391c:	cmp	w0, #0x8
   33920:	str	wzr, [x1, x2]
   33924:	str	x19, [x4, #16]
   33928:	b.eq	33b4c <__ubsan_handle_cfi_bad_type@@Base+0x3b4>  // b.none
   3392c:	ubfiz	x0, x0, #5, #32
   33930:	add	w3, w3, #0x2
   33934:	add	x2, x0, #0x40
   33938:	str	w3, [x1, #320]
   3393c:	add	x3, x1, x2
   33940:	mov	w4, #0x5                   	// #5
   33944:	mov	x0, x27
   33948:	str	w4, [x1, x2]
   3394c:	str	x21, [x3, #16]
   33950:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   33954:	cbz	x26, 33b18 <__ubsan_handle_cfi_bad_type@@Base+0x380>
   33958:	mov	x2, #0x1                   	// #1
   3395c:	mov	x0, x27
   33960:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33964:	mov	w3, #0x2                   	// #2
   33968:	add	x1, x1, #0x578
   3396c:	movk	x2, #0x1f, lsl #32
   33970:	str	w3, [sp, #288]
   33974:	str	xzr, [sp, #296]
   33978:	str	xzr, [sp, #304]
   3397c:	str	x21, [sp, #312]
   33980:	stp	x2, x1, [sp, #328]
   33984:	str	w28, [sp, #352]
   33988:	str	x26, [sp, #368]
   3398c:	str	w28, [sp, #608]
   33990:	str	wzr, [sp, #616]
   33994:	add	x26, sp, #0xb0
   33998:	str	xzr, [sp, #624]
   3399c:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   339a0:	str	xzr, [sp, #632]
   339a4:	add	x19, x19, #0xca8
   339a8:	str	wzr, [sp, #656]
   339ac:	str	xzr, [sp, #664]
   339b0:	str	xzr, [sp, #672]
   339b4:	str	xzr, [sp, #696]
   339b8:	str	wzr, [sp, #704]
   339bc:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   339c0:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   339c4:	str	xzr, [sp, #176]
   339c8:	mov	x1, x21
   339cc:	mov	x2, x26
   339d0:	mov	x3, x27
   339d4:	bl	29fe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b8>
   339d8:	tst	w0, #0xff
   339dc:	b.eq	339f4 <__ubsan_handle_cfi_bad_type@@Base+0x25c>  // b.none
   339e0:	ldr	x19, [sp, #176]
   339e4:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   339e8:	add	x0, x0, #0xca8
   339ec:	cmp	x19, #0x0
   339f0:	csel	x19, x0, x19, eq  // eq = none
   339f4:	bl	298f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   339f8:	str	xzr, [sp, #176]
   339fc:	ldr	x1, [x20, #8]
   33a00:	mov	x2, x26
   33a04:	mov	x3, x27
   33a08:	adrp	x20, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   33a0c:	add	x20, x20, #0xca8
   33a10:	bl	29fe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b8>
   33a14:	tst	w0, #0xff
   33a18:	b.eq	33a30 <__ubsan_handle_cfi_bad_type@@Base+0x298>  // b.none
   33a1c:	ldr	x20, [sp, #176]
   33a20:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   33a24:	add	x0, x0, #0xca8
   33a28:	cmp	x20, #0x0
   33a2c:	csel	x20, x0, x20, eq  // eq = none
   33a30:	mov	x1, x19
   33a34:	mov	x0, x20
   33a38:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   33a3c:	cbnz	w0, 33aac <__ubsan_handle_cfi_bad_type@@Base+0x314>
   33a40:	mov	x0, x25
   33a44:	bl	2ef98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   33a48:	ldp	x19, x20, [sp]
   33a4c:	ldp	x21, x22, [sp, #16]
   33a50:	ldp	x23, x24, [sp, #32]
   33a54:	ldp	x25, x26, [sp, #48]
   33a58:	ldp	x27, x28, [sp, #64]
   33a5c:	ldr	x30, [sp, #80]
   33a60:	add	sp, sp, #0x2d0
   33a64:	ret
   33a68:	cmp	w0, #0x5
   33a6c:	b.hi	33a84 <__ubsan_handle_cfi_bad_type@@Base+0x2ec>  // b.pmore
   33a70:	cmp	w0, #0x3
   33a74:	b.ne	33b78 <__ubsan_handle_cfi_bad_type@@Base+0x3e0>  // b.any
   33a78:	adrp	x19, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33a7c:	add	x19, x19, #0x498
   33a80:	b	338a0 <__ubsan_handle_cfi_bad_type@@Base+0x108>
   33a84:	cmp	w0, #0x6
   33a88:	adrp	x19, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33a8c:	add	x19, x19, #0x4f0
   33a90:	csel	x19, x19, xzr, eq  // eq = none
   33a94:	b	338a0 <__ubsan_handle_cfi_bad_type@@Base+0x108>
   33a98:	add	x8, sp, #0xb8
   33a9c:	mov	x0, x21
   33aa0:	bl	34040 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x498>
   33aa4:	ldr	x26, [sp, #184]
   33aa8:	b	33878 <__ubsan_handle_cfi_bad_type@@Base+0xe0>
   33aac:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33ab0:	mov	x3, #0x1                   	// #1
   33ab4:	add	x1, x1, #0x590
   33ab8:	mov	w4, #0x1                   	// #1
   33abc:	movk	x3, #0x1f, lsl #32
   33ac0:	mov	w2, #0x2                   	// #2
   33ac4:	mov	x0, x27
   33ac8:	str	w4, [sp, #288]
   33acc:	str	x24, [sp, #296]
   33ad0:	str	w23, [sp, #304]
   33ad4:	str	w22, [sp, #308]
   33ad8:	stp	x3, x1, [sp, #328]
   33adc:	str	wzr, [sp, #352]
   33ae0:	str	x20, [sp, #368]
   33ae4:	str	wzr, [sp, #384]
   33ae8:	str	x19, [sp, #400]
   33aec:	str	w2, [sp, #608]
   33af0:	str	wzr, [sp, #616]
   33af4:	str	xzr, [sp, #624]
   33af8:	str	xzr, [sp, #632]
   33afc:	str	wzr, [sp, #656]
   33b00:	str	xzr, [sp, #664]
   33b04:	str	xzr, [sp, #672]
   33b08:	str	xzr, [sp, #696]
   33b0c:	str	wzr, [sp, #704]
   33b10:	bl	2e5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   33b14:	b	33a40 <__ubsan_handle_cfi_bad_type@@Base+0x2a8>
   33b18:	mov	x2, #0x1                   	// #1
   33b1c:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33b20:	mov	w3, #0x2                   	// #2
   33b24:	add	x1, x1, #0x568
   33b28:	movk	x2, #0x1f, lsl #32
   33b2c:	mov	x0, x27
   33b30:	str	w3, [sp, #288]
   33b34:	str	xzr, [sp, #296]
   33b38:	str	xzr, [sp, #304]
   33b3c:	str	x21, [sp, #312]
   33b40:	stp	x2, x1, [sp, #328]
   33b44:	str	wzr, [sp, #608]
   33b48:	b	33990 <__ubsan_handle_cfi_bad_type@@Base+0x1f8>
   33b4c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   33b50:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   33b54:	add	x2, x2, #0x140
   33b58:	add	x0, x0, #0xc8
   33b5c:	mov	x4, #0x0                   	// #0
   33b60:	mov	x3, #0x0                   	// #0
   33b64:	mov	w1, #0xc0                  	// #192
   33b68:	bl	23090 <__sanitizer_on_print@@Base+0x3830>
   33b6c:	adrp	x19, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb458>
   33b70:	add	x19, x19, #0x4b0
   33b74:	b	338a0 <__ubsan_handle_cfi_bad_type@@Base+0x108>
   33b78:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   33b7c:	nop

0000000000033b80 <__ubsan_handle_function_type_mismatch_v1@@Base>:
   33b80:	stp	x29, x30, [sp, #-80]!
   33b84:	mov	x29, sp
   33b88:	add	x4, x29, #0x10
   33b8c:	stp	xzr, x30, [x29, #56]
   33b90:	ldp	x6, x7, [x29, #56]
   33b94:	stp	x6, x7, [x29, #16]
   33b98:	str	x29, [x29, #32]
   33b9c:	bl	331d0 <__ubsan_get_current_report_data@@Base+0x468>
   33ba0:	ldp	x29, x30, [sp], #80
   33ba4:	ret

0000000000033ba8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base>:
   33ba8:	stp	x29, x30, [sp, #-80]!
   33bac:	mov	w4, #0x1                   	// #1
   33bb0:	mov	x29, sp
   33bb4:	strb	w4, [x29, #56]
   33bb8:	add	x4, x29, #0x10
   33bbc:	stur	wzr, [x29, #57]
   33bc0:	sturh	wzr, [x29, #61]
   33bc4:	strb	wzr, [x29, #63]
   33bc8:	str	x30, [x29, #64]
   33bcc:	str	x29, [x29, #32]
   33bd0:	ldp	x6, x7, [x29, #56]
   33bd4:	stp	x6, x7, [x29, #16]
   33bd8:	bl	331d0 <__ubsan_get_current_report_data@@Base+0x468>
   33bdc:	tst	w0, #0xff
   33be0:	b.ne	33bec <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x44>  // b.any
   33be4:	ldp	x29, x30, [sp], #80
   33be8:	ret
   33bec:	bl	23028 <__sanitizer_on_print@@Base+0x37c8>
   33bf0:	ldr	x0, [x0]
   33bf4:	str	x30, [sp, #-16]!
   33bf8:	bl	34040 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x498>
   33bfc:	ldr	x30, [sp], #16
   33c00:	ret
   33c04:	nop
   33c08:	stp	x19, x20, [sp, #-48]!
   33c0c:	mov	x20, x0
   33c10:	str	x30, [sp, #40]
   33c14:	cbz	x1, 33d0c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x164>
   33c18:	cbz	x0, 33d14 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x16c>
   33c1c:	stp	x21, x22, [sp, #16]
   33c20:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   33c24:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   33c28:	ldr	x22, [x22, #3912]
   33c2c:	str	x23, [sp, #32]
   33c30:	ldr	x21, [x21, #4064]
   33c34:	mov	x23, x1
   33c38:	b	33c44 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9c>
   33c3c:	ldr	x20, [x0, #16]
   33c40:	cbz	x20, 33cd4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x12c>
   33c44:	mov	x2, x22
   33c48:	mov	x1, x21
   33c4c:	mov	x0, x20
   33c50:	mov	x3, #0x0                   	// #0
   33c54:	bl	6430 <__dynamic_cast@plt>
   33c58:	mov	x19, x0
   33c5c:	cbnz	x0, 33c3c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x94>
   33c60:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   33c64:	mov	x1, x21
   33c68:	mov	x0, x20
   33c6c:	mov	x3, #0x0                   	// #0
   33c70:	ldr	x2, [x2, #3856]
   33c74:	bl	6430 <__dynamic_cast@plt>
   33c78:	cbz	x0, 33cbc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x114>
   33c7c:	ldr	w21, [x0, #20]
   33c80:	cbz	w21, 33cbc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x114>
   33c84:	sub	w21, w21, #0x1
   33c88:	add	x1, x0, #0x28
   33c8c:	add	x20, x0, #0x18
   33c90:	add	x21, x1, w21, uxtw #4
   33c94:	nop
   33c98:	ldr	x0, [x20, #8]
   33c9c:	sub	x1, x23, x0, asr #8
   33ca0:	tbnz	w0, #0, 33cb0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x108>
   33ca4:	ldr	x0, [x20]
   33ca8:	bl	33c08 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x60>
   33cac:	cbnz	x0, 33cf0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x148>
   33cb0:	add	x20, x20, #0x10
   33cb4:	cmp	x20, x21
   33cb8:	b.ne	33c98 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xf0>  // b.any
   33cbc:	ldp	x21, x22, [sp, #16]
   33cc0:	ldr	x23, [sp, #32]
   33cc4:	mov	x0, x19
   33cc8:	ldr	x30, [sp, #40]
   33ccc:	ldp	x19, x20, [sp], #48
   33cd0:	ret
   33cd4:	mov	x19, #0x0                   	// #0
   33cd8:	mov	x0, x19
   33cdc:	ldp	x21, x22, [sp, #16]
   33ce0:	ldr	x23, [sp, #32]
   33ce4:	ldr	x30, [sp, #40]
   33ce8:	ldp	x19, x20, [sp], #48
   33cec:	ret
   33cf0:	mov	x19, x0
   33cf4:	mov	x0, x19
   33cf8:	ldp	x21, x22, [sp, #16]
   33cfc:	ldr	x23, [sp, #32]
   33d00:	ldr	x30, [sp, #40]
   33d04:	ldp	x19, x20, [sp], #48
   33d08:	ret
   33d0c:	mov	x19, x0
   33d10:	b	33cc4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x11c>
   33d14:	mov	x19, #0x0                   	// #0
   33d18:	b	33cc4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x11c>
   33d1c:	nop
   33d20:	stp	x19, x20, [sp, #-48]!
   33d24:	mov	x19, x0
   33d28:	mov	x20, x1
   33d2c:	ldr	x0, [x0, #8]
   33d30:	stp	x23, x30, [sp, #32]
   33d34:	mov	x23, x2
   33d38:	ldr	x1, [x1, #8]
   33d3c:	cmp	x0, x1
   33d40:	b.eq	33d7c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1d4>  // b.none
   33d44:	stp	x21, x22, [sp, #16]
   33d48:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   33d4c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   33d50:	ldr	x22, [x22, #3912]
   33d54:	ldr	x21, [x21, #4064]
   33d58:	ldrb	w3, [x0]
   33d5c:	cmp	w3, #0x2a
   33d60:	b.eq	33d90 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1e8>  // b.none
   33d64:	ldrb	w2, [x1]
   33d68:	cmp	w2, #0x2a
   33d6c:	b.eq	33d90 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1e8>  // b.none
   33d70:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   33d74:	cbnz	w0, 33d90 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1e8>
   33d78:	ldp	x21, x22, [sp, #16]
   33d7c:	cmp	x23, #0x0
   33d80:	cset	w0, eq  // eq = none
   33d84:	ldp	x23, x30, [sp, #32]
   33d88:	ldp	x19, x20, [sp], #48
   33d8c:	ret
   33d90:	mov	x2, x22
   33d94:	mov	x1, x21
   33d98:	mov	x0, x19
   33d9c:	mov	x3, #0x0                   	// #0
   33da0:	bl	6430 <__dynamic_cast@plt>
   33da4:	cbz	x0, 33dc0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x218>
   33da8:	ldr	x19, [x0, #16]
   33dac:	ldr	x1, [x20, #8]
   33db0:	ldr	x0, [x19, #8]
   33db4:	cmp	x0, x1
   33db8:	b.ne	33d58 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1b0>  // b.any
   33dbc:	b	33d78 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1d0>
   33dc0:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   33dc4:	mov	x1, x21
   33dc8:	mov	x0, x19
   33dcc:	mov	x3, #0x0                   	// #0
   33dd0:	ldr	x2, [x2, #3856]
   33dd4:	bl	6430 <__dynamic_cast@plt>
   33dd8:	mov	x21, x0
   33ddc:	cbz	x0, 33e28 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x280>
   33de0:	ldr	w0, [x0, #20]
   33de4:	cbz	w0, 33e28 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x280>
   33de8:	mov	w19, #0x0                   	// #0
   33dec:	ubfiz	x3, x19, #4, #32
   33df0:	mov	x1, x20
   33df4:	add	x3, x21, x3
   33df8:	add	w19, w19, #0x1
   33dfc:	ldr	x0, [x3, #32]
   33e00:	asr	x2, x0, #8
   33e04:	tbnz	w0, #0, 33e3c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x294>
   33e08:	ldr	x0, [x3, #24]
   33e0c:	sub	x2, x23, x2
   33e10:	bl	33d20 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x178>
   33e14:	tst	w0, #0xff
   33e18:	b.ne	33e3c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x294>  // b.any
   33e1c:	ldr	w0, [x21, #20]
   33e20:	cmp	w0, w19
   33e24:	b.ne	33dec <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x244>  // b.any
   33e28:	mov	w0, #0x0                   	// #0
   33e2c:	ldp	x21, x22, [sp, #16]
   33e30:	ldp	x23, x30, [sp, #32]
   33e34:	ldp	x19, x20, [sp], #48
   33e38:	ret
   33e3c:	mov	w0, #0x1                   	// #1
   33e40:	ldp	x21, x22, [sp, #16]
   33e44:	ldp	x23, x30, [sp, #32]
   33e48:	ldp	x19, x20, [sp], #48
   33e4c:	ret
   33e50:	stp	x19, x20, [sp, #-48]!
   33e54:	mov	x19, x2
   33e58:	and	w2, w2, #0xffff
   33e5c:	eor	w6, w2, #0x1
   33e60:	stp	x21, x22, [sp, #16]
   33e64:	adrp	x21, 931000 <__ubsan_vptr_type_cache@@Base+0x1e8>
   33e68:	add	x5, x21, #0x220
   33e6c:	mov	x20, x1
   33e70:	ldr	x3, [x5, x6, lsl #3]
   33e74:	str	x30, [sp, #32]
   33e78:	cbz	x3, 34008 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x460>
   33e7c:	cmp	x19, x3
   33e80:	b.eq	33ff8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x450>  // b.none
   33e84:	lsr	w1, w19, #16
   33e88:	add	w3, w6, w1
   33e8c:	add	w2, w3, #0x1
   33e90:	sub	w3, w3, #0x10, lsl #12
   33e94:	cmp	w2, #0x10, lsl #12
   33e98:	csel	w2, w3, w2, hi  // hi = pmore
   33e9c:	mov	w4, w2
   33ea0:	ldr	x3, [x5, x4, lsl #3]
   33ea4:	cbz	x3, 34004 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x45c>
   33ea8:	cmp	x19, x3
   33eac:	b.eq	34018 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x470>  // b.none
   33eb0:	add	w2, w1, w2
   33eb4:	add	w4, w2, #0x1
   33eb8:	sub	w2, w2, #0x10, lsl #12
   33ebc:	cmp	w4, #0x10, lsl #12
   33ec0:	csel	w4, w2, w4, hi  // hi = pmore
   33ec4:	mov	w2, w4
   33ec8:	ldr	x3, [x5, x2, lsl #3]
   33ecc:	cbz	x3, 34020 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x478>
   33ed0:	cmp	x19, x3
   33ed4:	b.eq	33ff4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x44c>  // b.none
   33ed8:	add	w4, w1, w4
   33edc:	add	w2, w4, #0x1
   33ee0:	sub	w4, w4, #0x10, lsl #12
   33ee4:	cmp	w2, #0x10, lsl #12
   33ee8:	csel	w2, w4, w2, hi  // hi = pmore
   33eec:	mov	w4, w2
   33ef0:	ldr	x3, [x5, x4, lsl #3]
   33ef4:	cbz	x3, 34004 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x45c>
   33ef8:	cmp	x19, x3
   33efc:	b.eq	34018 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x470>  // b.none
   33f00:	add	w1, w1, w2
   33f04:	add	w2, w1, #0x1
   33f08:	sub	w1, w1, #0x10, lsl #12
   33f0c:	cmp	w2, #0x10, lsl #12
   33f10:	csel	w2, w1, w2, hi  // hi = pmore
   33f14:	mov	w1, w2
   33f18:	ldr	x3, [x5, x1, lsl #3]
   33f1c:	cbz	x3, 3402c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x484>
   33f20:	cmp	x19, x3
   33f24:	b.eq	34038 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x490>  // b.none
   33f28:	ldr	x3, [x5, x6, lsl #3]
   33f2c:	add	x21, x5, x6, lsl #3
   33f30:	cmp	x3, x19
   33f34:	b.eq	33fd0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x428>  // b.none
   33f38:	ldr	x22, [x0]
   33f3c:	mov	x1, #0x10                  	// #16
   33f40:	sub	x0, x22, #0x10
   33f44:	bl	24a98 <__sanitizer_sandbox_on_notify@@Base+0x1510>
   33f48:	tst	w0, #0xff
   33f4c:	b.eq	33fbc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x414>  // b.none
   33f50:	ldur	x0, [x22, #-8]
   33f54:	cbz	x0, 33fbc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x414>
   33f58:	ldur	x22, [x22, #-16]
   33f5c:	add	x1, x22, #0x100, lsl #12
   33f60:	cmp	x1, #0x200, lsl #12
   33f64:	b.hi	33fbc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x414>  // b.pmore
   33f68:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   33f6c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   33f70:	mov	x3, #0x0                   	// #0
   33f74:	ldr	x2, [x2, #4064]
   33f78:	ldr	x1, [x1, #3872]
   33f7c:	bl	6430 <__dynamic_cast@plt>
   33f80:	cbz	x0, 33fbc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x414>
   33f84:	neg	x2, x22
   33f88:	mov	x1, x20
   33f8c:	bl	33d20 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x178>
   33f90:	ands	w0, w0, #0xff
   33f94:	b.eq	33fbc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x414>  // b.none
   33f98:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   33f9c:	and	x2, x19, #0x7f
   33fa0:	str	x19, [x21]
   33fa4:	ldr	x1, [x1, #3672]
   33fa8:	ldp	x21, x22, [sp, #16]
   33fac:	str	x19, [x1, x2, lsl #3]
   33fb0:	ldr	x30, [sp, #32]
   33fb4:	ldp	x19, x20, [sp], #48
   33fb8:	ret
   33fbc:	mov	w0, #0x0                   	// #0
   33fc0:	ldp	x21, x22, [sp, #16]
   33fc4:	ldr	x30, [sp, #32]
   33fc8:	ldp	x19, x20, [sp], #48
   33fcc:	ret
   33fd0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25458>
   33fd4:	and	x2, x3, #0x7f
   33fd8:	mov	w0, #0x1                   	// #1
   33fdc:	ldr	x1, [x1, #3672]
   33fe0:	ldp	x21, x22, [sp, #16]
   33fe4:	str	x3, [x1, x2, lsl #3]
   33fe8:	ldr	x30, [sp, #32]
   33fec:	ldp	x19, x20, [sp], #48
   33ff0:	ret
   33ff4:	mov	x6, x2
   33ff8:	add	x21, x21, #0x220
   33ffc:	add	x21, x21, x6, lsl #3
   34000:	b	33f30 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x388>
   34004:	mov	x6, x4
   34008:	mov	x3, #0x0                   	// #0
   3400c:	add	x21, x21, #0x220
   34010:	add	x21, x21, x6, lsl #3
   34014:	b	33f30 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x388>
   34018:	mov	x6, x4
   3401c:	b	33ff8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x450>
   34020:	mov	x6, x2
   34024:	mov	x3, #0x0                   	// #0
   34028:	b	3400c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x464>
   3402c:	mov	x6, x1
   34030:	mov	x3, #0x0                   	// #0
   34034:	b	3400c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x464>
   34038:	mov	w6, w2
   3403c:	b	33ff8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x450>
   34040:	stp	x19, x20, [sp, #-32]!
   34044:	mov	x1, #0x10                  	// #16
   34048:	mov	x20, x0
   3404c:	mov	x19, x8
   34050:	sub	x0, x0, #0x10
   34054:	str	x30, [sp, #24]
   34058:	bl	24a98 <__sanitizer_sandbox_on_notify@@Base+0x1510>
   3405c:	tst	w0, #0xff
   34060:	b.eq	340d0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x528>  // b.none
   34064:	str	x21, [sp, #16]
   34068:	ldur	x21, [x20, #-8]
   3406c:	cbz	x21, 340cc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x524>
   34070:	ldur	x1, [x20, #-16]
   34074:	add	x0, x1, #0x100, lsl #12
   34078:	cmp	x0, #0x200, lsl #12
   3407c:	b.ls	34098 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4f0>  // b.plast
   34080:	ldr	x21, [sp, #16]
   34084:	stp	xzr, x1, [x19]
   34088:	str	xzr, [x19, #16]
   3408c:	ldr	x30, [sp, #24]
   34090:	ldp	x19, x20, [sp], #32
   34094:	ret
   34098:	neg	x20, x1
   3409c:	mov	x0, x21
   340a0:	mov	x1, x20
   340a4:	bl	33c08 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x60>
   340a8:	ldr	x1, [x21, #8]
   340ac:	cbz	x0, 340e4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x53c>
   340b0:	ldr	x0, [x0, #8]
   340b4:	ldr	x21, [sp, #16]
   340b8:	stp	x1, x20, [x19]
   340bc:	str	x0, [x19, #16]
   340c0:	ldr	x30, [sp, #24]
   340c4:	ldp	x19, x20, [sp], #32
   340c8:	ret
   340cc:	ldr	x21, [sp, #16]
   340d0:	stp	xzr, xzr, [x19]
   340d4:	str	xzr, [x19, #16]
   340d8:	ldr	x30, [sp, #24]
   340dc:	ldp	x19, x20, [sp], #32
   340e0:	ret
   340e4:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa458>
   340e8:	add	x0, x0, #0x160
   340ec:	b	340b4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x50c>
   340f0:	ldr	x2, [x0, #8]
   340f4:	ldrb	w0, [x2]
   340f8:	cmp	w0, #0x2a
   340fc:	b.eq	34134 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x58c>  // b.none
   34100:	ldr	x1, [x1, #8]
   34104:	mov	w0, #0x0                   	// #0
   34108:	ldrb	w3, [x1]
   3410c:	cmp	w3, #0x2a
   34110:	b.ne	34118 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x570>  // b.any
   34114:	ret
   34118:	str	x30, [sp, #-16]!
   3411c:	mov	x0, x2
   34120:	bl	1a4a0 <__sanitizer_set_report_fd@@Base+0x26e0>
   34124:	cmp	w0, #0x0
   34128:	cset	w0, eq  // eq = none
   3412c:	ldr	x30, [sp], #16
   34130:	ret
   34134:	mov	w0, #0x0                   	// #0
   34138:	ret
   3413c:	nop
   34140:	adrp	x2, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26458>
   34144:	mov	x1, #0x0                   	// #0
   34148:	ldr	x2, [x2, #608]
   3414c:	b	6440 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000034150 <.fini>:
   34150:	stp	x29, x30, [sp, #-16]!
   34154:	mov	x29, sp
   34158:	ldp	x29, x30, [sp], #16
   3415c:	ret
