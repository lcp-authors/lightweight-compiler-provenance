
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-sysctl_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401408 <_init>:
  401408:	stp	x29, x30, [sp, #-16]!
  40140c:	mov	x29, sp
  401410:	bl	401760 <call_weak_fn>
  401414:	ldp	x29, x30, [sp], #16
  401418:	ret

Disassembly of section .plt:

0000000000401420 <.plt>:
  401420:	stp	x16, x30, [sp, #-16]!
  401424:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401428:	ldr	x17, [x16, #3712]
  40142c:	add	x16, x16, #0xe80
  401430:	br	x17
  401434:	nop
  401438:	nop
  40143c:	nop

0000000000401440 <internal_hashmap_remove@plt>:
  401440:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401444:	ldr	x17, [x16, #3720]
  401448:	add	x16, x16, #0xe88
  40144c:	br	x17

0000000000401450 <safe_fclose@plt>:
  401450:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401454:	ldr	x17, [x16, #3728]
  401458:	add	x16, x16, #0xe90
  40145c:	br	x17

0000000000401460 <read_line_full@plt>:
  401460:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401464:	ldr	x17, [x16, #3736]
  401468:	add	x16, x16, #0xe98
  40146c:	br	x17

0000000000401470 <internal_hashmap_free@plt>:
  401470:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401474:	ldr	x17, [x16, #3744]
  401478:	add	x16, x16, #0xea0
  40147c:	br	x17

0000000000401480 <__libc_start_main@plt>:
  401480:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401484:	ldr	x17, [x16, #3752]
  401488:	add	x16, x16, #0xea8
  40148c:	br	x17

0000000000401490 <__gmon_start__@plt>:
  401490:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401494:	ldr	x17, [x16, #3760]
  401498:	add	x16, x16, #0xeb0
  40149c:	br	x17

00000000004014a0 <internal_ordered_hashmap_new@plt>:
  4014a0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4014a4:	ldr	x17, [x16, #3768]
  4014a8:	add	x16, x16, #0xeb8
  4014ac:	br	x17

00000000004014b0 <polkit_agent_close@plt>:
  4014b0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4014b4:	ldr	x17, [x16, #3776]
  4014b8:	add	x16, x16, #0xec0
  4014bc:	br	x17

00000000004014c0 <log_setup_service@plt>:
  4014c0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4014c4:	ldr	x17, [x16, #3784]
  4014c8:	add	x16, x16, #0xec8
  4014cc:	br	x17

00000000004014d0 <log_assert_failed_realm@plt>:
  4014d0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4014d4:	ldr	x17, [x16, #3792]
  4014d8:	add	x16, x16, #0xed0
  4014dc:	br	x17

00000000004014e0 <getopt_long@plt>:
  4014e0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4014e4:	ldr	x17, [x16, #3800]
  4014e8:	add	x16, x16, #0xed8
  4014ec:	br	x17

00000000004014f0 <sysctl_write@plt>:
  4014f0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4014f4:	ldr	x17, [x16, #3808]
  4014f8:	add	x16, x16, #0xee0
  4014fc:	br	x17

0000000000401500 <search_and_fopen@plt>:
  401500:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401504:	ldr	x17, [x16, #3816]
  401508:	add	x16, x16, #0xee8
  40150c:	br	x17

0000000000401510 <log_assert_failed_unreachable_realm@plt>:
  401510:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401514:	ldr	x17, [x16, #3824]
  401518:	add	x16, x16, #0xef0
  40151c:	br	x17

0000000000401520 <umask@plt>:
  401520:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401524:	ldr	x17, [x16, #3832]
  401528:	add	x16, x16, #0xef8
  40152c:	br	x17

0000000000401530 <abort@plt>:
  401530:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401534:	ldr	x17, [x16, #3840]
  401538:	add	x16, x16, #0xf00
  40153c:	br	x17

0000000000401540 <internal_hashmap_get@plt>:
  401540:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401544:	ldr	x17, [x16, #3848]
  401548:	add	x16, x16, #0xf08
  40154c:	br	x17

0000000000401550 <strv_consume@plt>:
  401550:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401554:	ldr	x17, [x16, #3856]
  401558:	add	x16, x16, #0xf10
  40155c:	br	x17

0000000000401560 <path_startswith@plt>:
  401560:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401564:	ldr	x17, [x16, #3864]
  401568:	add	x16, x16, #0xf18
  40156c:	br	x17

0000000000401570 <strv_free@plt>:
  401570:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401574:	ldr	x17, [x16, #3872]
  401578:	add	x16, x16, #0xf20
  40157c:	br	x17

0000000000401580 <pager_open@plt>:
  401580:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401584:	ldr	x17, [x16, #3880]
  401588:	add	x16, x16, #0xf28
  40158c:	br	x17

0000000000401590 <terminal_urlify_man@plt>:
  401590:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401594:	ldr	x17, [x16, #3888]
  401598:	add	x16, x16, #0xf30
  40159c:	br	x17

00000000004015a0 <__stack_chk_fail@plt>:
  4015a0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4015a4:	ldr	x17, [x16, #3896]
  4015a8:	add	x16, x16, #0xf38
  4015ac:	br	x17

00000000004015b0 <path_join_internal@plt>:
  4015b0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4015b4:	ldr	x17, [x16, #3904]
  4015b8:	add	x16, x16, #0xf40
  4015bc:	br	x17

00000000004015c0 <ask_password_agent_close@plt>:
  4015c0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4015c4:	ldr	x17, [x16, #3912]
  4015c8:	add	x16, x16, #0xf48
  4015cc:	br	x17

00000000004015d0 <sysctl_normalize@plt>:
  4015d0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4015d4:	ldr	x17, [x16, #3920]
  4015d8:	add	x16, x16, #0xf50
  4015dc:	br	x17

00000000004015e0 <version@plt>:
  4015e0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4015e4:	ldr	x17, [x16, #3928]
  4015e8:	add	x16, x16, #0xf58
  4015ec:	br	x17

00000000004015f0 <pager_close@plt>:
  4015f0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4015f4:	ldr	x17, [x16, #3936]
  4015f8:	add	x16, x16, #0xf60
  4015fc:	br	x17

0000000000401600 <malloc@plt>:
  401600:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401604:	ldr	x17, [x16, #3944]
  401608:	add	x16, x16, #0xf68
  40160c:	br	x17

0000000000401610 <log_internal_realm@plt>:
  401610:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401614:	ldr	x17, [x16, #3952]
  401618:	add	x16, x16, #0xf70
  40161c:	br	x17

0000000000401620 <string_hash_func@plt>:
  401620:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401624:	ldr	x17, [x16, #3960]
  401628:	add	x16, x16, #0xf78
  40162c:	br	x17

0000000000401630 <hashmap_put@plt>:
  401630:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401634:	ldr	x17, [x16, #3968]
  401638:	add	x16, x16, #0xf80
  40163c:	br	x17

0000000000401640 <log_syntax_internal@plt>:
  401640:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401644:	ldr	x17, [x16, #3976]
  401648:	add	x16, x16, #0xf88
  40164c:	br	x17

0000000000401650 <strcmp@plt>:
  401650:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401654:	ldr	x17, [x16, #3984]
  401658:	add	x16, x16, #0xf90
  40165c:	br	x17

0000000000401660 <internal_hashmap_iterate@plt>:
  401660:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401664:	ldr	x17, [x16, #3992]
  401668:	add	x16, x16, #0xf98
  40166c:	br	x17

0000000000401670 <strdup@plt>:
  401670:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401674:	ldr	x17, [x16, #4000]
  401678:	add	x16, x16, #0xfa0
  40167c:	br	x17

0000000000401680 <strchr@plt>:
  401680:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401684:	ldr	x17, [x16, #4008]
  401688:	add	x16, x16, #0xfa8
  40168c:	br	x17

0000000000401690 <strstrip@plt>:
  401690:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401694:	ldr	x17, [x16, #4016]
  401698:	add	x16, x16, #0xfb0
  40169c:	br	x17

00000000004016a0 <free@plt>:
  4016a0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4016a4:	ldr	x17, [x16, #4024]
  4016a8:	add	x16, x16, #0xfb8
  4016ac:	br	x17

00000000004016b0 <mac_selinux_finish@plt>:
  4016b0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4016b4:	ldr	x17, [x16, #4032]
  4016b8:	add	x16, x16, #0xfc0
  4016bc:	br	x17

00000000004016c0 <printf@plt>:
  4016c0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4016c4:	ldr	x17, [x16, #4040]
  4016c8:	add	x16, x16, #0xfc8
  4016cc:	br	x17

00000000004016d0 <conf_files_list_strv@plt>:
  4016d0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4016d4:	ldr	x17, [x16, #4048]
  4016d8:	add	x16, x16, #0xfd0
  4016dc:	br	x17

00000000004016e0 <log_oom_internal@plt>:
  4016e0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4016e4:	ldr	x17, [x16, #4056]
  4016e8:	add	x16, x16, #0xfd8
  4016ec:	br	x17

00000000004016f0 <log_get_max_level_realm@plt>:
  4016f0:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  4016f4:	ldr	x17, [x16, #4064]
  4016f8:	add	x16, x16, #0xfe0
  4016fc:	br	x17

0000000000401700 <cat_files@plt>:
  401700:	adrp	x16, 414000 <__FRAME_END__+0x10220>
  401704:	ldr	x17, [x16, #4072]
  401708:	add	x16, x16, #0xfe8
  40170c:	br	x17

Disassembly of section .text:

0000000000401710 <_start>:
  401710:	mov	x29, #0x0                   	// #0
  401714:	mov	x30, #0x0                   	// #0
  401718:	mov	x5, x0
  40171c:	ldr	x1, [sp]
  401720:	add	x2, sp, #0x8
  401724:	mov	x6, sp
  401728:	movz	x0, #0x0, lsl #48
  40172c:	movk	x0, #0x0, lsl #32
  401730:	movk	x0, #0x40, lsl #16
  401734:	movk	x0, #0x3120
  401738:	movz	x3, #0x0, lsl #48
  40173c:	movk	x3, #0x0, lsl #32
  401740:	movk	x3, #0x40, lsl #16
  401744:	movk	x3, #0x3170
  401748:	movz	x4, #0x0, lsl #48
  40174c:	movk	x4, #0x0, lsl #32
  401750:	movk	x4, #0x40, lsl #16
  401754:	movk	x4, #0x31f0
  401758:	bl	401480 <__libc_start_main@plt>
  40175c:	bl	401530 <abort@plt>

0000000000401760 <call_weak_fn>:
  401760:	adrp	x0, 414000 <__FRAME_END__+0x10220>
  401764:	ldr	x0, [x0, #4088]
  401768:	cbz	x0, 401770 <call_weak_fn+0x10>
  40176c:	b	401490 <__gmon_start__@plt>
  401770:	ret

0000000000401774 <deregister_tm_clones>:
  401774:	stp	x29, x30, [sp, #-32]!
  401778:	mov	x29, sp
  40177c:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401780:	add	x0, x0, #0x0
  401784:	str	x0, [sp, #24]
  401788:	ldr	x0, [sp, #24]
  40178c:	str	x0, [sp, #24]
  401790:	ldr	x1, [sp, #24]
  401794:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401798:	add	x0, x0, #0x0
  40179c:	cmp	x1, x0
  4017a0:	b.eq	4017dc <deregister_tm_clones+0x68>  // b.none
  4017a4:	adrp	x0, 403000 <run+0x23c>
  4017a8:	add	x0, x0, #0x208
  4017ac:	ldr	x0, [x0]
  4017b0:	str	x0, [sp, #16]
  4017b4:	ldr	x0, [sp, #16]
  4017b8:	str	x0, [sp, #16]
  4017bc:	ldr	x0, [sp, #16]
  4017c0:	cmp	x0, #0x0
  4017c4:	b.eq	4017e0 <deregister_tm_clones+0x6c>  // b.none
  4017c8:	ldr	x1, [sp, #16]
  4017cc:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4017d0:	add	x0, x0, #0x0
  4017d4:	blr	x1
  4017d8:	b	4017e0 <deregister_tm_clones+0x6c>
  4017dc:	nop
  4017e0:	ldp	x29, x30, [sp], #32
  4017e4:	ret

00000000004017e8 <register_tm_clones>:
  4017e8:	stp	x29, x30, [sp, #-48]!
  4017ec:	mov	x29, sp
  4017f0:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4017f4:	add	x0, x0, #0x0
  4017f8:	str	x0, [sp, #40]
  4017fc:	ldr	x0, [sp, #40]
  401800:	str	x0, [sp, #40]
  401804:	ldr	x1, [sp, #40]
  401808:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  40180c:	add	x0, x0, #0x0
  401810:	sub	x0, x1, x0
  401814:	asr	x0, x0, #3
  401818:	lsr	x1, x0, #63
  40181c:	add	x0, x1, x0
  401820:	asr	x0, x0, #1
  401824:	str	x0, [sp, #32]
  401828:	ldr	x0, [sp, #32]
  40182c:	cmp	x0, #0x0
  401830:	b.eq	401870 <register_tm_clones+0x88>  // b.none
  401834:	adrp	x0, 403000 <run+0x23c>
  401838:	add	x0, x0, #0x210
  40183c:	ldr	x0, [x0]
  401840:	str	x0, [sp, #24]
  401844:	ldr	x0, [sp, #24]
  401848:	str	x0, [sp, #24]
  40184c:	ldr	x0, [sp, #24]
  401850:	cmp	x0, #0x0
  401854:	b.eq	401874 <register_tm_clones+0x8c>  // b.none
  401858:	ldr	x2, [sp, #24]
  40185c:	ldr	x1, [sp, #32]
  401860:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401864:	add	x0, x0, #0x0
  401868:	blr	x2
  40186c:	b	401874 <register_tm_clones+0x8c>
  401870:	nop
  401874:	ldp	x29, x30, [sp], #48
  401878:	ret

000000000040187c <__do_global_dtors_aux>:
  40187c:	stp	x29, x30, [sp, #-16]!
  401880:	mov	x29, sp
  401884:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401888:	add	x0, x0, #0x20
  40188c:	ldrb	w0, [x0]
  401890:	and	x0, x0, #0xff
  401894:	cmp	x0, #0x0
  401898:	b.ne	4018b4 <__do_global_dtors_aux+0x38>  // b.any
  40189c:	bl	401774 <deregister_tm_clones>
  4018a0:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4018a4:	add	x0, x0, #0x20
  4018a8:	mov	w1, #0x1                   	// #1
  4018ac:	strb	w1, [x0]
  4018b0:	b	4018b8 <__do_global_dtors_aux+0x3c>
  4018b4:	nop
  4018b8:	ldp	x29, x30, [sp], #16
  4018bc:	ret

00000000004018c0 <frame_dummy>:
  4018c0:	stp	x29, x30, [sp, #-16]!
  4018c4:	mov	x29, sp
  4018c8:	bl	4017e8 <register_tm_clones>
  4018cc:	nop
  4018d0:	ldp	x29, x30, [sp], #16
  4018d4:	ret

00000000004018d8 <ALIGN_TO>:
  4018d8:	sub	sp, sp, #0x10
  4018dc:	str	x0, [sp, #8]
  4018e0:	str	x1, [sp]
  4018e4:	ldr	x1, [sp, #8]
  4018e8:	ldr	x0, [sp]
  4018ec:	add	x0, x1, x0
  4018f0:	sub	x1, x0, #0x1
  4018f4:	ldr	x0, [sp]
  4018f8:	neg	x0, x0
  4018fc:	and	x0, x1, x0
  401900:	add	sp, sp, #0x10
  401904:	ret

0000000000401908 <fclosep>:
  401908:	stp	x29, x30, [sp, #-32]!
  40190c:	mov	x29, sp
  401910:	str	x0, [sp, #24]
  401914:	ldr	x0, [sp, #24]
  401918:	ldr	x0, [x0]
  40191c:	bl	401450 <safe_fclose@plt>
  401920:	nop
  401924:	ldp	x29, x30, [sp], #32
  401928:	ret

000000000040192c <read_line>:
  40192c:	stp	x29, x30, [sp, #-48]!
  401930:	mov	x29, sp
  401934:	str	x0, [sp, #40]
  401938:	str	x1, [sp, #32]
  40193c:	str	x2, [sp, #24]
  401940:	ldr	x3, [sp, #24]
  401944:	mov	w2, #0x0                   	// #0
  401948:	ldr	x1, [sp, #32]
  40194c:	ldr	x0, [sp, #40]
  401950:	bl	401460 <read_line_full@plt>
  401954:	ldp	x29, x30, [sp], #48
  401958:	ret

000000000040195c <mfree>:
  40195c:	stp	x29, x30, [sp, #-32]!
  401960:	mov	x29, sp
  401964:	str	x0, [sp, #24]
  401968:	ldr	x0, [sp, #24]
  40196c:	bl	4016a0 <free@plt>
  401970:	mov	x0, #0x0                   	// #0
  401974:	ldp	x29, x30, [sp], #32
  401978:	ret

000000000040197c <freep>:
  40197c:	stp	x29, x30, [sp, #-32]!
  401980:	mov	x29, sp
  401984:	str	x0, [sp, #24]
  401988:	ldr	x0, [sp, #24]
  40198c:	ldr	x0, [x0]
  401990:	bl	4016a0 <free@plt>
  401994:	nop
  401998:	ldp	x29, x30, [sp], #32
  40199c:	ret

00000000004019a0 <size_multiply_overflow>:
  4019a0:	sub	sp, sp, #0x10
  4019a4:	str	x0, [sp, #8]
  4019a8:	str	x1, [sp]
  4019ac:	ldr	x0, [sp]
  4019b0:	cmp	x0, #0x0
  4019b4:	cset	w0, ne  // ne = any
  4019b8:	and	w0, w0, #0xff
  4019bc:	and	x0, x0, #0xff
  4019c0:	cmp	x0, #0x0
  4019c4:	b.eq	401a08 <size_multiply_overflow+0x68>  // b.none
  4019c8:	mov	x2, #0x0                   	// #0
  4019cc:	ldr	x1, [sp, #8]
  4019d0:	ldr	x0, [sp]
  4019d4:	umulh	x0, x1, x0
  4019d8:	cmp	x0, #0x0
  4019dc:	b.eq	4019e4 <size_multiply_overflow+0x44>  // b.none
  4019e0:	mov	x2, #0x1                   	// #1
  4019e4:	mov	x0, x2
  4019e8:	cmp	x0, #0x0
  4019ec:	cset	w0, ne  // ne = any
  4019f0:	and	w0, w0, #0xff
  4019f4:	and	x0, x0, #0xff
  4019f8:	cmp	x0, #0x0
  4019fc:	b.eq	401a08 <size_multiply_overflow+0x68>  // b.none
  401a00:	mov	w0, #0x1                   	// #1
  401a04:	b	401a0c <size_multiply_overflow+0x6c>
  401a08:	mov	w0, #0x0                   	// #0
  401a0c:	and	w0, w0, #0x1
  401a10:	and	w0, w0, #0xff
  401a14:	add	sp, sp, #0x10
  401a18:	ret

0000000000401a1c <malloc_multiply>:
  401a1c:	stp	x29, x30, [sp, #-32]!
  401a20:	mov	x29, sp
  401a24:	str	x0, [sp, #24]
  401a28:	str	x1, [sp, #16]
  401a2c:	ldr	x1, [sp, #16]
  401a30:	ldr	x0, [sp, #24]
  401a34:	bl	4019a0 <size_multiply_overflow>
  401a38:	and	w0, w0, #0xff
  401a3c:	cmp	w0, #0x0
  401a40:	b.eq	401a4c <malloc_multiply+0x30>  // b.none
  401a44:	mov	x0, #0x0                   	// #0
  401a48:	b	401a68 <malloc_multiply+0x4c>
  401a4c:	ldr	x1, [sp, #24]
  401a50:	ldr	x0, [sp, #16]
  401a54:	mul	x0, x1, x0
  401a58:	cmp	x0, #0x0
  401a5c:	b.ne	401a64 <malloc_multiply+0x48>  // b.any
  401a60:	mov	x0, #0x1                   	// #1
  401a64:	bl	401600 <malloc@plt>
  401a68:	ldp	x29, x30, [sp], #32
  401a6c:	ret

0000000000401a70 <save_argc_argv>:
  401a70:	sub	sp, sp, #0x10
  401a74:	str	w0, [sp, #12]
  401a78:	str	x1, [sp]
  401a7c:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401a80:	add	x0, x0, #0x14
  401a84:	ldr	w1, [sp, #12]
  401a88:	str	w1, [x0]
  401a8c:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401a90:	add	x0, x0, #0x0
  401a94:	ldr	x1, [sp]
  401a98:	str	x1, [x0]
  401a9c:	nop
  401aa0:	add	sp, sp, #0x10
  401aa4:	ret

0000000000401aa8 <ordered_hashmap_free>:
  401aa8:	stp	x29, x30, [sp, #-32]!
  401aac:	mov	x29, sp
  401ab0:	str	x0, [sp, #24]
  401ab4:	mov	x2, #0x0                   	// #0
  401ab8:	mov	x1, #0x0                   	// #0
  401abc:	ldr	x0, [sp, #24]
  401ac0:	bl	401470 <internal_hashmap_free@plt>
  401ac4:	ldp	x29, x30, [sp], #32
  401ac8:	ret

0000000000401acc <ordered_hashmap_put>:
  401acc:	stp	x29, x30, [sp, #-48]!
  401ad0:	mov	x29, sp
  401ad4:	str	x0, [sp, #40]
  401ad8:	str	x1, [sp, #32]
  401adc:	str	x2, [sp, #24]
  401ae0:	ldr	x2, [sp, #24]
  401ae4:	ldr	x1, [sp, #32]
  401ae8:	ldr	x0, [sp, #40]
  401aec:	bl	401630 <hashmap_put@plt>
  401af0:	ldp	x29, x30, [sp], #48
  401af4:	ret

0000000000401af8 <ordered_hashmap_get>:
  401af8:	stp	x29, x30, [sp, #-32]!
  401afc:	mov	x29, sp
  401b00:	str	x0, [sp, #24]
  401b04:	str	x1, [sp, #16]
  401b08:	ldr	x1, [sp, #16]
  401b0c:	ldr	x0, [sp, #24]
  401b10:	bl	401540 <internal_hashmap_get@plt>
  401b14:	ldp	x29, x30, [sp], #32
  401b18:	ret

0000000000401b1c <ordered_hashmap_remove>:
  401b1c:	stp	x29, x30, [sp, #-32]!
  401b20:	mov	x29, sp
  401b24:	str	x0, [sp, #24]
  401b28:	str	x1, [sp, #16]
  401b2c:	ldr	x1, [sp, #16]
  401b30:	ldr	x0, [sp, #24]
  401b34:	bl	401440 <internal_hashmap_remove@plt>
  401b38:	ldp	x29, x30, [sp], #32
  401b3c:	ret

0000000000401b40 <ordered_hashmap_iterate>:
  401b40:	stp	x29, x30, [sp, #-48]!
  401b44:	mov	x29, sp
  401b48:	str	x0, [sp, #40]
  401b4c:	str	x1, [sp, #32]
  401b50:	str	x2, [sp, #24]
  401b54:	str	x3, [sp, #16]
  401b58:	ldr	x3, [sp, #16]
  401b5c:	ldr	x2, [sp, #24]
  401b60:	ldr	x1, [sp, #32]
  401b64:	ldr	x0, [sp, #40]
  401b68:	bl	401660 <internal_hashmap_iterate@plt>
  401b6c:	and	w0, w0, #0xff
  401b70:	ldp	x29, x30, [sp], #48
  401b74:	ret

0000000000401b78 <ordered_hashmap_freep>:
  401b78:	stp	x29, x30, [sp, #-32]!
  401b7c:	mov	x29, sp
  401b80:	str	x0, [sp, #24]
  401b84:	ldr	x0, [sp, #24]
  401b88:	ldr	x0, [x0]
  401b8c:	cmp	x0, #0x0
  401b90:	b.eq	401ba0 <ordered_hashmap_freep+0x28>  // b.none
  401b94:	ldr	x0, [sp, #24]
  401b98:	ldr	x0, [x0]
  401b9c:	bl	401aa8 <ordered_hashmap_free>
  401ba0:	nop
  401ba4:	ldp	x29, x30, [sp], #32
  401ba8:	ret

0000000000401bac <isempty>:
  401bac:	sub	sp, sp, #0x10
  401bb0:	str	x0, [sp, #8]
  401bb4:	ldr	x0, [sp, #8]
  401bb8:	cmp	x0, #0x0
  401bbc:	b.eq	401bd0 <isempty+0x24>  // b.none
  401bc0:	ldr	x0, [sp, #8]
  401bc4:	ldrb	w0, [x0]
  401bc8:	cmp	w0, #0x0
  401bcc:	b.ne	401bd8 <isempty+0x2c>  // b.any
  401bd0:	mov	w0, #0x1                   	// #1
  401bd4:	b	401bdc <isempty+0x30>
  401bd8:	mov	w0, #0x0                   	// #0
  401bdc:	and	w0, w0, #0x1
  401be0:	and	w0, w0, #0xff
  401be4:	add	sp, sp, #0x10
  401be8:	ret

0000000000401bec <static_destruct>:
  401bec:	stp	x29, x30, [sp, #-32]!
  401bf0:	mov	x29, sp
  401bf4:	adrp	x0, 403000 <run+0x23c>
  401bf8:	add	x0, x0, #0x6a8
  401bfc:	ldr	x0, [x0]
  401c00:	cmp	x0, #0x0
  401c04:	b.eq	401c68 <static_destruct+0x7c>  // b.none
  401c08:	adrp	x0, 403000 <run+0x23c>
  401c0c:	add	x0, x0, #0x6a8
  401c10:	ldr	x0, [x0]
  401c14:	mov	x1, #0x8                   	// #8
  401c18:	bl	4018d8 <ALIGN_TO>
  401c1c:	str	x0, [sp, #24]
  401c20:	b	401c4c <static_destruct+0x60>
  401c24:	ldr	x0, [sp, #24]
  401c28:	ldr	x1, [x0, #8]
  401c2c:	ldr	x0, [sp, #24]
  401c30:	ldr	x0, [x0]
  401c34:	blr	x1
  401c38:	ldr	x0, [sp, #24]
  401c3c:	add	x0, x0, #0x10
  401c40:	mov	x1, #0x8                   	// #8
  401c44:	bl	4018d8 <ALIGN_TO>
  401c48:	str	x0, [sp, #24]
  401c4c:	ldr	x1, [sp, #24]
  401c50:	adrp	x0, 403000 <run+0x23c>
  401c54:	add	x0, x0, #0x6b0
  401c58:	ldr	x0, [x0]
  401c5c:	cmp	x1, x0
  401c60:	b.cc	401c24 <static_destruct+0x38>  // b.lo, b.ul, b.last
  401c64:	b	401c6c <static_destruct+0x80>
  401c68:	nop
  401c6c:	ldp	x29, x30, [sp], #32
  401c70:	ret

0000000000401c74 <strv_freep>:
  401c74:	stp	x29, x30, [sp, #-32]!
  401c78:	mov	x29, sp
  401c7c:	str	x0, [sp, #24]
  401c80:	ldr	x0, [sp, #24]
  401c84:	ldr	x0, [x0]
  401c88:	cmp	x0, #0x0
  401c8c:	b.eq	401c9c <strv_freep+0x28>  // b.none
  401c90:	ldr	x0, [sp, #24]
  401c94:	ldr	x0, [x0]
  401c98:	bl	401570 <strv_free@plt>
  401c9c:	nop
  401ca0:	ldp	x29, x30, [sp], #32
  401ca4:	ret

0000000000401ca8 <strv_isempty>:
  401ca8:	sub	sp, sp, #0x10
  401cac:	str	x0, [sp, #8]
  401cb0:	ldr	x0, [sp, #8]
  401cb4:	cmp	x0, #0x0
  401cb8:	b.eq	401ccc <strv_isempty+0x24>  // b.none
  401cbc:	ldr	x0, [sp, #8]
  401cc0:	ldr	x0, [x0]
  401cc4:	cmp	x0, #0x0
  401cc8:	b.ne	401cd4 <strv_isempty+0x2c>  // b.any
  401ccc:	mov	w0, #0x1                   	// #1
  401cd0:	b	401cd8 <strv_isempty+0x30>
  401cd4:	mov	w0, #0x0                   	// #0
  401cd8:	and	w0, w0, #0x1
  401cdc:	and	w0, w0, #0xff
  401ce0:	add	sp, sp, #0x10
  401ce4:	ret

0000000000401ce8 <__unique_prefix_static_destructor_wrapper4>:
  401ce8:	stp	x29, x30, [sp, #-48]!
  401cec:	mov	x29, sp
  401cf0:	str	x0, [sp, #24]
  401cf4:	ldr	x0, [sp, #24]
  401cf8:	str	x0, [sp, #40]
  401cfc:	ldr	x0, [sp, #40]
  401d00:	bl	401c74 <strv_freep>
  401d04:	nop
  401d08:	ldp	x29, x30, [sp], #48
  401d0c:	ret

0000000000401d10 <option_free>:
  401d10:	stp	x29, x30, [sp, #-32]!
  401d14:	mov	x29, sp
  401d18:	str	x0, [sp, #24]
  401d1c:	ldr	x0, [sp, #24]
  401d20:	cmp	x0, #0x0
  401d24:	b.ne	401d30 <option_free+0x20>  // b.any
  401d28:	mov	x0, #0x0                   	// #0
  401d2c:	b	401d50 <option_free+0x40>
  401d30:	ldr	x0, [sp, #24]
  401d34:	ldr	x0, [x0]
  401d38:	bl	4016a0 <free@plt>
  401d3c:	ldr	x0, [sp, #24]
  401d40:	ldr	x0, [x0, #8]
  401d44:	bl	4016a0 <free@plt>
  401d48:	ldr	x0, [sp, #24]
  401d4c:	bl	40195c <mfree>
  401d50:	ldp	x29, x30, [sp], #32
  401d54:	ret

0000000000401d58 <option_freep>:
  401d58:	stp	x29, x30, [sp, #-32]!
  401d5c:	mov	x29, sp
  401d60:	str	x0, [sp, #24]
  401d64:	ldr	x0, [sp, #24]
  401d68:	ldr	x0, [x0]
  401d6c:	cmp	x0, #0x0
  401d70:	b.eq	401d80 <option_freep+0x28>  // b.none
  401d74:	ldr	x0, [sp, #24]
  401d78:	ldr	x0, [x0]
  401d7c:	bl	401d10 <option_free>
  401d80:	nop
  401d84:	ldp	x29, x30, [sp], #32
  401d88:	ret

0000000000401d8c <__unique_prefix_static_free_wrapper5>:
  401d8c:	stp	x29, x30, [sp, #-48]!
  401d90:	mov	x29, sp
  401d94:	str	x0, [sp, #24]
  401d98:	ldr	x0, [sp, #24]
  401d9c:	str	x0, [sp, #40]
  401da0:	ldr	x0, [sp, #40]
  401da4:	bl	401d10 <option_free>
  401da8:	nop
  401dac:	ldp	x29, x30, [sp], #48
  401db0:	ret

0000000000401db4 <option_new>:
  401db4:	stp	x29, x30, [sp, #-112]!
  401db8:	mov	x29, sp
  401dbc:	stp	x19, x20, [sp, #16]
  401dc0:	str	x0, [sp, #56]
  401dc4:	str	x1, [sp, #48]
  401dc8:	strb	w2, [sp, #47]
  401dcc:	adrp	x0, 414000 <__FRAME_END__+0x10220>
  401dd0:	add	x0, x0, #0xc38
  401dd4:	ldr	x1, [x0]
  401dd8:	str	x1, [sp, #104]
  401ddc:	mov	x1, #0x0                   	// #0
  401de0:	str	xzr, [sp, #80]
  401de4:	ldr	x0, [sp, #56]
  401de8:	cmp	x0, #0x0
  401dec:	cset	w0, eq  // eq = none
  401df0:	and	w0, w0, #0xff
  401df4:	and	x0, x0, #0xff
  401df8:	cmp	x0, #0x0
  401dfc:	b.eq	401e28 <option_new+0x74>  // b.none
  401e00:	adrp	x0, 403000 <run+0x23c>
  401e04:	add	x1, x0, #0x27b
  401e08:	adrp	x0, 403000 <run+0x23c>
  401e0c:	add	x4, x0, #0x6d8
  401e10:	mov	w3, #0x3a                  	// #58
  401e14:	mov	x2, x1
  401e18:	adrp	x0, 403000 <run+0x23c>
  401e1c:	add	x1, x0, #0x290
  401e20:	mov	w0, #0x0                   	// #0
  401e24:	bl	4014d0 <log_assert_failed_realm@plt>
  401e28:	ldr	x0, [sp, #48]
  401e2c:	cmp	x0, #0x0
  401e30:	cset	w0, eq  // eq = none
  401e34:	and	w0, w0, #0xff
  401e38:	and	x0, x0, #0xff
  401e3c:	cmp	x0, #0x0
  401e40:	b.eq	401e6c <option_new+0xb8>  // b.none
  401e44:	adrp	x0, 403000 <run+0x23c>
  401e48:	add	x1, x0, #0x27b
  401e4c:	adrp	x0, 403000 <run+0x23c>
  401e50:	add	x4, x0, #0x6d8
  401e54:	mov	w3, #0x3b                  	// #59
  401e58:	mov	x2, x1
  401e5c:	adrp	x0, 403000 <run+0x23c>
  401e60:	add	x1, x0, #0x298
  401e64:	mov	w0, #0x0                   	// #0
  401e68:	bl	4014d0 <log_assert_failed_realm@plt>
  401e6c:	mov	x1, #0x1                   	// #1
  401e70:	mov	x0, #0x18                  	// #24
  401e74:	bl	401a1c <malloc_multiply>
  401e78:	str	x0, [sp, #80]
  401e7c:	ldr	x0, [sp, #80]
  401e80:	cmp	x0, #0x0
  401e84:	b.ne	401e90 <option_new+0xdc>  // b.any
  401e88:	mov	x19, #0x0                   	// #0
  401e8c:	b	401ef4 <option_new+0x140>
  401e90:	ldr	x19, [sp, #80]
  401e94:	ldr	x0, [sp, #56]
  401e98:	bl	401670 <strdup@plt>
  401e9c:	mov	x20, x0
  401ea0:	ldr	x0, [sp, #48]
  401ea4:	bl	401670 <strdup@plt>
  401ea8:	str	x20, [x19]
  401eac:	str	x0, [x19, #8]
  401eb0:	ldrb	w0, [sp, #47]
  401eb4:	strb	w0, [x19, #16]
  401eb8:	ldr	x0, [sp, #80]
  401ebc:	ldr	x0, [x0]
  401ec0:	cmp	x0, #0x0
  401ec4:	b.eq	401ed8 <option_new+0x124>  // b.none
  401ec8:	ldr	x0, [sp, #80]
  401ecc:	ldr	x0, [x0, #8]
  401ed0:	cmp	x0, #0x0
  401ed4:	b.ne	401ee0 <option_new+0x12c>  // b.any
  401ed8:	mov	x19, #0x0                   	// #0
  401edc:	b	401ef4 <option_new+0x140>
  401ee0:	ldr	x0, [sp, #80]
  401ee4:	str	x0, [sp, #72]
  401ee8:	str	xzr, [sp, #80]
  401eec:	ldr	x19, [sp, #72]
  401ef0:	nop
  401ef4:	add	x0, sp, #0x50
  401ef8:	bl	401d58 <option_freep>
  401efc:	mov	x1, x19
  401f00:	adrp	x0, 414000 <__FRAME_END__+0x10220>
  401f04:	add	x0, x0, #0xc38
  401f08:	ldr	x2, [sp, #104]
  401f0c:	ldr	x0, [x0]
  401f10:	eor	x0, x2, x0
  401f14:	cmp	x0, #0x0
  401f18:	b.eq	401f20 <option_new+0x16c>  // b.none
  401f1c:	bl	4015a0 <__stack_chk_fail@plt>
  401f20:	mov	x0, x1
  401f24:	ldp	x19, x20, [sp, #16]
  401f28:	ldp	x29, x30, [sp], #112
  401f2c:	ret

0000000000401f30 <apply_all>:
  401f30:	stp	x29, x30, [sp, #-112]!
  401f34:	mov	x29, sp
  401f38:	str	x0, [sp, #24]
  401f3c:	adrp	x0, 414000 <__FRAME_END__+0x10220>
  401f40:	add	x0, x0, #0xc38
  401f44:	ldr	x1, [x0]
  401f48:	str	x1, [sp, #104]
  401f4c:	mov	x1, #0x0                   	// #0
  401f50:	str	wzr, [sp, #48]
  401f54:	mov	w0, #0xfffffffe            	// #-2
  401f58:	str	w0, [sp, #88]
  401f5c:	str	xzr, [sp, #96]
  401f60:	b	402138 <apply_all+0x208>
  401f64:	ldr	x0, [sp, #80]
  401f68:	ldr	x2, [x0]
  401f6c:	ldr	x0, [sp, #80]
  401f70:	ldr	x0, [x0, #8]
  401f74:	mov	x1, x0
  401f78:	mov	x0, x2
  401f7c:	bl	4014f0 <sysctl_write@plt>
  401f80:	str	w0, [sp, #52]
  401f84:	ldr	w0, [sp, #52]
  401f88:	cmp	w0, #0x0
  401f8c:	b.ge	402138 <apply_all+0x208>  // b.tcont
  401f90:	strb	wzr, [sp, #47]
  401f94:	ldr	w0, [sp, #52]
  401f98:	add	w0, w0, #0x1e
  401f9c:	cmp	w0, #0x1d
  401fa0:	cset	w1, hi  // hi = pmore
  401fa4:	and	w1, w1, #0xff
  401fa8:	cmp	w1, #0x0
  401fac:	b.ne	401fe0 <apply_all+0xb0>  // b.any
  401fb0:	mov	x1, #0x1                   	// #1
  401fb4:	lsl	x1, x1, x0
  401fb8:	mov	x0, #0x1                   	// #1
  401fbc:	movk	x0, #0x3002, lsl #16
  401fc0:	and	x0, x1, x0
  401fc4:	cmp	x0, #0x0
  401fc8:	cset	w0, ne  // ne = any
  401fcc:	and	w0, w0, #0xff
  401fd0:	cmp	w0, #0x0
  401fd4:	b.eq	401fe0 <apply_all+0xb0>  // b.none
  401fd8:	mov	w0, #0x1                   	// #1
  401fdc:	strb	w0, [sp, #47]
  401fe0:	nop
  401fe4:	ldrb	w0, [sp, #47]
  401fe8:	cmp	w0, #0x0
  401fec:	b.ne	402000 <apply_all+0xd0>  // b.any
  401ff0:	ldr	x0, [sp, #80]
  401ff4:	ldrb	w0, [x0, #16]
  401ff8:	cmp	w0, #0x0
  401ffc:	b.eq	402094 <apply_all+0x164>  // b.none
  402000:	mov	w0, #0x5                   	// #5
  402004:	str	w0, [sp, #68]
  402008:	ldr	w0, [sp, #52]
  40200c:	str	w0, [sp, #72]
  402010:	str	wzr, [sp, #76]
  402014:	ldr	w0, [sp, #76]
  402018:	bl	4016f0 <log_get_max_level_realm@plt>
  40201c:	mov	w1, w0
  402020:	ldr	w0, [sp, #68]
  402024:	and	w0, w0, #0x7
  402028:	cmp	w1, w0
  40202c:	b.lt	402088 <apply_all+0x158>  // b.tstop
  402030:	ldr	w0, [sp, #76]
  402034:	lsl	w1, w0, #10
  402038:	ldr	w0, [sp, #68]
  40203c:	orr	w8, w1, w0
  402040:	adrp	x0, 403000 <run+0x23c>
  402044:	add	x1, x0, #0x27b
  402048:	ldr	x0, [sp, #80]
  40204c:	ldr	x2, [x0, #8]
  402050:	ldr	x0, [sp, #80]
  402054:	ldr	x0, [x0]
  402058:	mov	x7, x0
  40205c:	mov	x6, x2
  402060:	adrp	x0, 403000 <run+0x23c>
  402064:	add	x5, x0, #0x2a0
  402068:	adrp	x0, 403000 <run+0x23c>
  40206c:	add	x4, x0, #0x6e8
  402070:	mov	w3, #0x5e                  	// #94
  402074:	mov	x2, x1
  402078:	ldr	w1, [sp, #72]
  40207c:	mov	w0, w8
  402080:	bl	401610 <log_internal_realm@plt>
  402084:	b	402138 <apply_all+0x208>
  402088:	ldr	w0, [sp, #72]
  40208c:	cmp	w0, #0x0
  402090:	b	402138 <apply_all+0x208>
  402094:	mov	w0, #0x3                   	// #3
  402098:	str	w0, [sp, #56]
  40209c:	ldr	w0, [sp, #52]
  4020a0:	str	w0, [sp, #60]
  4020a4:	str	wzr, [sp, #64]
  4020a8:	ldr	w0, [sp, #64]
  4020ac:	bl	4016f0 <log_get_max_level_realm@plt>
  4020b0:	mov	w1, w0
  4020b4:	ldr	w0, [sp, #56]
  4020b8:	and	w0, w0, #0x7
  4020bc:	cmp	w1, w0
  4020c0:	b.lt	40211c <apply_all+0x1ec>  // b.tstop
  4020c4:	ldr	w0, [sp, #64]
  4020c8:	lsl	w1, w0, #10
  4020cc:	ldr	w0, [sp, #56]
  4020d0:	orr	w8, w1, w0
  4020d4:	adrp	x0, 403000 <run+0x23c>
  4020d8:	add	x1, x0, #0x27b
  4020dc:	ldr	x0, [sp, #80]
  4020e0:	ldr	x2, [x0, #8]
  4020e4:	ldr	x0, [sp, #80]
  4020e8:	ldr	x0, [x0]
  4020ec:	mov	x7, x0
  4020f0:	mov	x6, x2
  4020f4:	adrp	x0, 403000 <run+0x23c>
  4020f8:	add	x5, x0, #0x2d0
  4020fc:	adrp	x0, 403000 <run+0x23c>
  402100:	add	x4, x0, #0x6e8
  402104:	mov	w3, #0x60                  	// #96
  402108:	mov	x2, x1
  40210c:	ldr	w1, [sp, #60]
  402110:	mov	w0, w8
  402114:	bl	401610 <log_internal_realm@plt>
  402118:	b	402124 <apply_all+0x1f4>
  40211c:	ldr	w0, [sp, #60]
  402120:	cmp	w0, #0x0
  402124:	ldr	w0, [sp, #48]
  402128:	cmp	w0, #0x0
  40212c:	b.ne	402138 <apply_all+0x208>  // b.any
  402130:	ldr	w0, [sp, #52]
  402134:	str	w0, [sp, #48]
  402138:	add	x1, sp, #0x50
  40213c:	add	x0, sp, #0x58
  402140:	mov	x3, #0x0                   	// #0
  402144:	mov	x2, x1
  402148:	mov	x1, x0
  40214c:	ldr	x0, [sp, #24]
  402150:	bl	401b40 <ordered_hashmap_iterate>
  402154:	and	w0, w0, #0xff
  402158:	cmp	w0, #0x0
  40215c:	b.ne	401f64 <apply_all+0x34>  // b.any
  402160:	ldr	w0, [sp, #48]
  402164:	mov	w1, w0
  402168:	adrp	x0, 414000 <__FRAME_END__+0x10220>
  40216c:	add	x0, x0, #0xc38
  402170:	ldr	x2, [sp, #104]
  402174:	ldr	x0, [x0]
  402178:	eor	x0, x2, x0
  40217c:	cmp	x0, #0x0
  402180:	b.eq	402188 <apply_all+0x258>  // b.none
  402184:	bl	4015a0 <__stack_chk_fail@plt>
  402188:	mov	w0, w1
  40218c:	ldp	x29, x30, [sp], #112
  402190:	ret

0000000000402194 <test_prefix>:
  402194:	stp	x29, x30, [sp, #-48]!
  402198:	mov	x29, sp
  40219c:	str	x0, [sp, #24]
  4021a0:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4021a4:	add	x0, x0, #0x28
  4021a8:	ldr	x0, [x0]
  4021ac:	bl	401ca8 <strv_isempty>
  4021b0:	and	w0, w0, #0xff
  4021b4:	cmp	w0, #0x0
  4021b8:	b.eq	4021c4 <test_prefix+0x30>  // b.none
  4021bc:	mov	w0, #0x1                   	// #1
  4021c0:	b	402254 <test_prefix+0xc0>
  4021c4:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4021c8:	add	x0, x0, #0x28
  4021cc:	ldr	x0, [x0]
  4021d0:	str	x0, [sp, #32]
  4021d4:	b	402234 <test_prefix+0xa0>
  4021d8:	ldr	x0, [sp, #32]
  4021dc:	ldr	x2, [x0]
  4021e0:	adrp	x0, 403000 <run+0x23c>
  4021e4:	add	x1, x0, #0x2f0
  4021e8:	mov	x0, x2
  4021ec:	bl	401560 <path_startswith@plt>
  4021f0:	str	x0, [sp, #40]
  4021f4:	ldr	x0, [sp, #40]
  4021f8:	cmp	x0, #0x0
  4021fc:	b.ne	40220c <test_prefix+0x78>  // b.any
  402200:	ldr	x0, [sp, #32]
  402204:	ldr	x0, [x0]
  402208:	str	x0, [sp, #40]
  40220c:	ldr	x1, [sp, #40]
  402210:	ldr	x0, [sp, #24]
  402214:	bl	401560 <path_startswith@plt>
  402218:	cmp	x0, #0x0
  40221c:	b.eq	402228 <test_prefix+0x94>  // b.none
  402220:	mov	w0, #0x1                   	// #1
  402224:	b	402254 <test_prefix+0xc0>
  402228:	ldr	x0, [sp, #32]
  40222c:	add	x0, x0, #0x8
  402230:	str	x0, [sp, #32]
  402234:	ldr	x0, [sp, #32]
  402238:	cmp	x0, #0x0
  40223c:	b.eq	402250 <test_prefix+0xbc>  // b.none
  402240:	ldr	x0, [sp, #32]
  402244:	ldr	x0, [x0]
  402248:	cmp	x0, #0x0
  40224c:	b.ne	4021d8 <test_prefix+0x44>  // b.any
  402250:	mov	w0, #0x0                   	// #0
  402254:	ldp	x29, x30, [sp], #48
  402258:	ret

000000000040225c <parse_file>:
  40225c:	sub	sp, sp, #0x120
  402260:	stp	x29, x30, [sp, #16]
  402264:	add	x29, sp, #0x10
  402268:	stp	x19, x20, [sp, #32]
  40226c:	str	x0, [sp, #72]
  402270:	str	x1, [sp, #64]
  402274:	strb	w2, [sp, #63]
  402278:	adrp	x0, 414000 <__FRAME_END__+0x10220>
  40227c:	add	x0, x0, #0xc38
  402280:	ldr	x1, [x0]
  402284:	str	x1, [sp, #280]
  402288:	mov	x1, #0x0                   	// #0
  40228c:	str	xzr, [sp, #176]
  402290:	str	wzr, [sp, #96]
  402294:	ldr	x0, [sp, #64]
  402298:	cmp	x0, #0x0
  40229c:	cset	w0, eq  // eq = none
  4022a0:	and	w0, w0, #0xff
  4022a4:	and	x0, x0, #0xff
  4022a8:	cmp	x0, #0x0
  4022ac:	b.eq	4022d8 <parse_file+0x7c>  // b.none
  4022b0:	adrp	x0, 403000 <run+0x23c>
  4022b4:	add	x1, x0, #0x27b
  4022b8:	adrp	x0, 403000 <run+0x23c>
  4022bc:	add	x4, x0, #0x6f8
  4022c0:	mov	w3, #0x82                  	// #130
  4022c4:	mov	x2, x1
  4022c8:	adrp	x0, 403000 <run+0x23c>
  4022cc:	add	x1, x0, #0x300
  4022d0:	mov	w0, #0x0                   	// #0
  4022d4:	bl	4014d0 <log_assert_failed_realm@plt>
  4022d8:	adrp	x0, 403000 <run+0x23c>
  4022dc:	add	x1, x0, #0x408
  4022e0:	add	x0, sp, #0xe8
  4022e4:	ldp	x2, x3, [x1]
  4022e8:	stp	x2, x3, [x0]
  4022ec:	ldp	x2, x3, [x1, #16]
  4022f0:	stp	x2, x3, [x0, #16]
  4022f4:	ldp	x2, x3, [x1, #32]
  4022f8:	stp	x2, x3, [x0, #32]
  4022fc:	add	x1, sp, #0xb0
  402300:	add	x0, sp, #0xe8
  402304:	mov	x4, x1
  402308:	mov	x3, x0
  40230c:	mov	x2, #0x0                   	// #0
  402310:	adrp	x0, 403000 <run+0x23c>
  402314:	add	x1, x0, #0x308
  402318:	ldr	x0, [sp, #64]
  40231c:	bl	401500 <search_and_fopen@plt>
  402320:	str	w0, [sp, #100]
  402324:	ldr	w0, [sp, #100]
  402328:	cmp	w0, #0x0
  40232c:	b.ge	4023e0 <parse_file+0x184>  // b.tcont
  402330:	ldrb	w0, [sp, #63]
  402334:	cmp	w0, #0x0
  402338:	b.eq	402350 <parse_file+0xf4>  // b.none
  40233c:	ldr	w0, [sp, #100]
  402340:	cmn	w0, #0x2
  402344:	b.ne	402350 <parse_file+0xf4>  // b.any
  402348:	mov	w20, #0x0                   	// #0
  40234c:	b	402964 <parse_file+0x708>
  402350:	mov	w0, #0x3                   	// #3
  402354:	str	w0, [sp, #164]
  402358:	ldr	w0, [sp, #100]
  40235c:	str	w0, [sp, #168]
  402360:	str	wzr, [sp, #172]
  402364:	ldr	w0, [sp, #172]
  402368:	bl	4016f0 <log_get_max_level_realm@plt>
  40236c:	mov	w1, w0
  402370:	ldr	w0, [sp, #164]
  402374:	and	w0, w0, #0x7
  402378:	cmp	w1, w0
  40237c:	b.lt	4023c8 <parse_file+0x16c>  // b.tstop
  402380:	ldr	w0, [sp, #172]
  402384:	lsl	w1, w0, #10
  402388:	ldr	w0, [sp, #164]
  40238c:	orr	w7, w1, w0
  402390:	adrp	x0, 403000 <run+0x23c>
  402394:	add	x1, x0, #0x27b
  402398:	ldr	x6, [sp, #64]
  40239c:	adrp	x0, 403000 <run+0x23c>
  4023a0:	add	x5, x0, #0x310
  4023a4:	adrp	x0, 403000 <run+0x23c>
  4023a8:	add	x4, x0, #0x708
  4023ac:	mov	w3, #0x89                  	// #137
  4023b0:	mov	x2, x1
  4023b4:	ldr	w1, [sp, #168]
  4023b8:	mov	w0, w7
  4023bc:	bl	401610 <log_internal_realm@plt>
  4023c0:	mov	w20, w0
  4023c4:	b	402964 <parse_file+0x708>
  4023c8:	ldr	w0, [sp, #168]
  4023cc:	cmp	w0, #0x0
  4023d0:	cneg	w0, w0, lt  // lt = tstop
  4023d4:	and	w0, w0, #0xff
  4023d8:	neg	w20, w0
  4023dc:	b	402964 <parse_file+0x708>
  4023e0:	mov	w0, #0x7                   	// #7
  4023e4:	str	w0, [sp, #104]
  4023e8:	str	wzr, [sp, #108]
  4023ec:	str	wzr, [sp, #112]
  4023f0:	ldr	w0, [sp, #112]
  4023f4:	bl	4016f0 <log_get_max_level_realm@plt>
  4023f8:	mov	w1, w0
  4023fc:	ldr	w0, [sp, #104]
  402400:	and	w0, w0, #0x7
  402404:	cmp	w1, w0
  402408:	b.lt	402450 <parse_file+0x1f4>  // b.tstop
  40240c:	ldr	w0, [sp, #112]
  402410:	lsl	w1, w0, #10
  402414:	ldr	w0, [sp, #104]
  402418:	orr	w7, w1, w0
  40241c:	adrp	x0, 403000 <run+0x23c>
  402420:	add	x1, x0, #0x27b
  402424:	ldr	x6, [sp, #64]
  402428:	adrp	x0, 403000 <run+0x23c>
  40242c:	add	x5, x0, #0x338
  402430:	adrp	x0, 403000 <run+0x23c>
  402434:	add	x4, x0, #0x708
  402438:	mov	w3, #0x8c                  	// #140
  40243c:	mov	x2, x1
  402440:	ldr	w1, [sp, #108]
  402444:	mov	w0, w7
  402448:	bl	401610 <log_internal_realm@plt>
  40244c:	b	402458 <parse_file+0x1fc>
  402450:	ldr	w0, [sp, #108]
  402454:	cmp	w0, #0x0
  402458:	str	xzr, [sp, #184]
  40245c:	str	xzr, [sp, #192]
  402460:	ldr	x0, [sp, #176]
  402464:	add	x1, sp, #0xc0
  402468:	mov	x2, x1
  40246c:	mov	x1, #0x100000              	// #1048576
  402470:	bl	40192c <read_line>
  402474:	str	w0, [sp, #116]
  402478:	ldr	w0, [sp, #116]
  40247c:	cmp	w0, #0x0
  402480:	b.ne	40248c <parse_file+0x230>  // b.any
  402484:	mov	w19, #0x0                   	// #0
  402488:	b	4028e4 <parse_file+0x688>
  40248c:	ldr	w0, [sp, #116]
  402490:	cmp	w0, #0x0
  402494:	b.ge	40252c <parse_file+0x2d0>  // b.tcont
  402498:	mov	w0, #0x3                   	// #3
  40249c:	str	w0, [sp, #152]
  4024a0:	ldr	w0, [sp, #116]
  4024a4:	str	w0, [sp, #156]
  4024a8:	str	wzr, [sp, #160]
  4024ac:	ldr	w0, [sp, #160]
  4024b0:	bl	4016f0 <log_get_max_level_realm@plt>
  4024b4:	mov	w1, w0
  4024b8:	ldr	w0, [sp, #152]
  4024bc:	and	w0, w0, #0x7
  4024c0:	cmp	w1, w0
  4024c4:	b.lt	402510 <parse_file+0x2b4>  // b.tstop
  4024c8:	ldr	w0, [sp, #160]
  4024cc:	lsl	w1, w0, #10
  4024d0:	ldr	w0, [sp, #152]
  4024d4:	orr	w7, w1, w0
  4024d8:	adrp	x0, 403000 <run+0x23c>
  4024dc:	add	x1, x0, #0x27b
  4024e0:	ldr	x6, [sp, #64]
  4024e4:	adrp	x0, 403000 <run+0x23c>
  4024e8:	add	x5, x0, #0x348
  4024ec:	adrp	x0, 403000 <run+0x23c>
  4024f0:	add	x4, x0, #0x708
  4024f4:	mov	w3, #0x99                  	// #153
  4024f8:	mov	x2, x1
  4024fc:	ldr	w1, [sp, #156]
  402500:	mov	w0, w7
  402504:	bl	401610 <log_internal_realm@plt>
  402508:	mov	w20, w0
  40250c:	b	402524 <parse_file+0x2c8>
  402510:	ldr	w0, [sp, #156]
  402514:	cmp	w0, #0x0
  402518:	cneg	w0, w0, lt  // lt = tstop
  40251c:	and	w0, w0, #0xff
  402520:	neg	w20, w0
  402524:	mov	w19, #0x1                   	// #1
  402528:	b	4028e4 <parse_file+0x688>
  40252c:	ldr	w0, [sp, #96]
  402530:	add	w0, w0, #0x1
  402534:	str	w0, [sp, #96]
  402538:	ldr	x0, [sp, #192]
  40253c:	bl	401690 <strstrip@plt>
  402540:	str	x0, [sp, #200]
  402544:	ldr	x0, [sp, #200]
  402548:	bl	401bac <isempty>
  40254c:	and	w0, w0, #0xff
  402550:	cmp	w0, #0x0
  402554:	b.eq	402560 <parse_file+0x304>  // b.none
  402558:	mov	w19, #0x2                   	// #2
  40255c:	b	4028e4 <parse_file+0x688>
  402560:	ldr	x0, [sp, #200]
  402564:	ldrb	w0, [x0]
  402568:	mov	w1, w0
  40256c:	adrp	x0, 403000 <run+0x23c>
  402570:	add	x0, x0, #0x370
  402574:	bl	401680 <strchr@plt>
  402578:	cmp	x0, #0x0
  40257c:	b.eq	402588 <parse_file+0x32c>  // b.none
  402580:	mov	w19, #0x2                   	// #2
  402584:	b	4028e4 <parse_file+0x688>
  402588:	mov	w1, #0x3d                  	// #61
  40258c:	ldr	x0, [sp, #200]
  402590:	bl	401680 <strchr@plt>
  402594:	str	x0, [sp, #208]
  402598:	ldr	x0, [sp, #208]
  40259c:	cmp	x0, #0x0
  4025a0:	b.ne	402638 <parse_file+0x3dc>  // b.any
  4025a4:	mov	w0, #0x4                   	// #4
  4025a8:	str	w0, [sp, #144]
  4025ac:	str	wzr, [sp, #148]
  4025b0:	mov	w0, #0x0                   	// #0
  4025b4:	bl	4016f0 <log_get_max_level_realm@plt>
  4025b8:	mov	w1, w0
  4025bc:	ldr	w0, [sp, #144]
  4025c0:	and	w0, w0, #0x7
  4025c4:	cmp	w1, w0
  4025c8:	b.lt	402614 <parse_file+0x3b8>  // b.tstop
  4025cc:	adrp	x0, 403000 <run+0x23c>
  4025d0:	add	x1, x0, #0x27b
  4025d4:	ldr	x0, [sp, #200]
  4025d8:	str	x0, [sp, #8]
  4025dc:	adrp	x0, 403000 <run+0x23c>
  4025e0:	add	x0, x0, #0x378
  4025e4:	str	x0, [sp]
  4025e8:	adrp	x0, 403000 <run+0x23c>
  4025ec:	add	x7, x0, #0x708
  4025f0:	mov	w6, #0xa6                  	// #166
  4025f4:	mov	x5, x1
  4025f8:	ldr	w4, [sp, #148]
  4025fc:	ldr	w3, [sp, #96]
  402600:	ldr	x2, [sp, #64]
  402604:	ldr	w1, [sp, #144]
  402608:	mov	x0, #0x0                   	// #0
  40260c:	bl	401640 <log_syntax_internal@plt>
  402610:	b	40261c <parse_file+0x3c0>
  402614:	ldr	w0, [sp, #148]
  402618:	cmp	w0, #0x0
  40261c:	ldr	w0, [sp, #100]
  402620:	cmp	w0, #0x0
  402624:	b.ne	402630 <parse_file+0x3d4>  // b.any
  402628:	mov	w0, #0xffffffea            	// #-22
  40262c:	str	w0, [sp, #100]
  402630:	mov	w19, #0x2                   	// #2
  402634:	b	4028e4 <parse_file+0x688>
  402638:	ldr	x0, [sp, #208]
  40263c:	strb	wzr, [x0]
  402640:	ldr	x0, [sp, #208]
  402644:	add	x0, x0, #0x1
  402648:	str	x0, [sp, #208]
  40264c:	ldr	x0, [sp, #200]
  402650:	bl	401690 <strstrip@plt>
  402654:	str	x0, [sp, #200]
  402658:	ldr	x0, [sp, #200]
  40265c:	ldrb	w0, [x0]
  402660:	cmp	w0, #0x2d
  402664:	cset	w0, eq  // eq = none
  402668:	strb	w0, [sp, #95]
  40266c:	ldrb	w0, [sp, #95]
  402670:	cmp	w0, #0x0
  402674:	b.eq	402684 <parse_file+0x428>  // b.none
  402678:	ldr	x0, [sp, #200]
  40267c:	add	x0, x0, #0x1
  402680:	str	x0, [sp, #200]
  402684:	ldr	x0, [sp, #200]
  402688:	bl	4015d0 <sysctl_normalize@plt>
  40268c:	str	x0, [sp, #200]
  402690:	ldr	x0, [sp, #208]
  402694:	bl	401690 <strstrip@plt>
  402698:	str	x0, [sp, #208]
  40269c:	ldr	x0, [sp, #200]
  4026a0:	bl	402194 <test_prefix>
  4026a4:	and	w0, w0, #0xff
  4026a8:	eor	w0, w0, #0x1
  4026ac:	and	w0, w0, #0xff
  4026b0:	cmp	w0, #0x0
  4026b4:	b.eq	4026c0 <parse_file+0x464>  // b.none
  4026b8:	mov	w19, #0x2                   	// #2
  4026bc:	b	4028e4 <parse_file+0x688>
  4026c0:	ldr	x1, [sp, #200]
  4026c4:	ldr	x0, [sp, #72]
  4026c8:	bl	401af8 <ordered_hashmap_get>
  4026cc:	str	x0, [sp, #216]
  4026d0:	ldr	x0, [sp, #216]
  4026d4:	cmp	x0, #0x0
  4026d8:	b.eq	4027cc <parse_file+0x570>  // b.none
  4026dc:	ldr	x0, [sp, #216]
  4026e0:	ldr	x0, [x0, #8]
  4026e4:	mov	x1, x0
  4026e8:	ldr	x0, [sp, #208]
  4026ec:	bl	401650 <strcmp@plt>
  4026f0:	cmp	w0, #0x0
  4026f4:	b.ne	402738 <parse_file+0x4dc>  // b.any
  4026f8:	ldr	x0, [sp, #216]
  4026fc:	ldrb	w0, [x0, #16]
  402700:	cmp	w0, #0x0
  402704:	b.ne	402714 <parse_file+0x4b8>  // b.any
  402708:	ldrb	w0, [sp, #95]
  40270c:	cmp	w0, #0x0
  402710:	b.eq	40271c <parse_file+0x4c0>  // b.none
  402714:	mov	w0, #0x1                   	// #1
  402718:	b	402720 <parse_file+0x4c4>
  40271c:	mov	w0, #0x0                   	// #0
  402720:	and	w0, w0, #0x1
  402724:	and	w1, w0, #0xff
  402728:	ldr	x0, [sp, #216]
  40272c:	strb	w1, [x0, #16]
  402730:	mov	w19, #0x2                   	// #2
  402734:	b	4028e4 <parse_file+0x688>
  402738:	mov	w0, #0x7                   	// #7
  40273c:	str	w0, [sp, #120]
  402740:	str	wzr, [sp, #124]
  402744:	str	wzr, [sp, #128]
  402748:	ldr	w0, [sp, #128]
  40274c:	bl	4016f0 <log_get_max_level_realm@plt>
  402750:	mov	w1, w0
  402754:	ldr	w0, [sp, #120]
  402758:	and	w0, w0, #0x7
  40275c:	cmp	w1, w0
  402760:	b.lt	4027b4 <parse_file+0x558>  // b.tstop
  402764:	ldr	w0, [sp, #128]
  402768:	lsl	w1, w0, #10
  40276c:	ldr	w0, [sp, #120]
  402770:	orr	w8, w1, w0
  402774:	adrp	x0, 403000 <run+0x23c>
  402778:	add	x1, x0, #0x27b
  40277c:	ldr	w0, [sp, #96]
  402780:	str	w0, [sp]
  402784:	ldr	x7, [sp, #64]
  402788:	ldr	x6, [sp, #200]
  40278c:	adrp	x0, 403000 <run+0x23c>
  402790:	add	x5, x0, #0x3a0
  402794:	adrp	x0, 403000 <run+0x23c>
  402798:	add	x4, x0, #0x708
  40279c:	mov	w3, #0xc1                  	// #193
  4027a0:	mov	x2, x1
  4027a4:	ldr	w1, [sp, #124]
  4027a8:	mov	w0, w8
  4027ac:	bl	401610 <log_internal_realm@plt>
  4027b0:	b	4027bc <parse_file+0x560>
  4027b4:	ldr	w0, [sp, #124]
  4027b8:	cmp	w0, #0x0
  4027bc:	ldr	x1, [sp, #200]
  4027c0:	ldr	x0, [sp, #72]
  4027c4:	bl	401b1c <ordered_hashmap_remove>
  4027c8:	bl	401d10 <option_free>
  4027cc:	ldrb	w2, [sp, #95]
  4027d0:	ldr	x1, [sp, #208]
  4027d4:	ldr	x0, [sp, #200]
  4027d8:	bl	401db4 <option_new>
  4027dc:	str	x0, [sp, #184]
  4027e0:	ldr	x0, [sp, #184]
  4027e4:	cmp	x0, #0x0
  4027e8:	b.ne	402814 <parse_file+0x5b8>  // b.any
  4027ec:	adrp	x0, 403000 <run+0x23c>
  4027f0:	add	x1, x0, #0x27b
  4027f4:	adrp	x0, 403000 <run+0x23c>
  4027f8:	add	x3, x0, #0x708
  4027fc:	mov	w2, #0xc7                  	// #199
  402800:	mov	w0, #0x0                   	// #0
  402804:	bl	4016e0 <log_oom_internal@plt>
  402808:	mov	w20, w0
  40280c:	mov	w19, #0x1                   	// #1
  402810:	b	4028e4 <parse_file+0x688>
  402814:	ldr	x0, [sp, #184]
  402818:	ldr	x0, [x0]
  40281c:	ldr	x1, [sp, #184]
  402820:	mov	x2, x1
  402824:	mov	x1, x0
  402828:	ldr	x0, [sp, #72]
  40282c:	bl	401acc <ordered_hashmap_put>
  402830:	str	w0, [sp, #116]
  402834:	ldr	w0, [sp, #116]
  402838:	cmp	w0, #0x0
  40283c:	b.ge	4028d4 <parse_file+0x678>  // b.tcont
  402840:	mov	w0, #0x3                   	// #3
  402844:	str	w0, [sp, #132]
  402848:	ldr	w0, [sp, #116]
  40284c:	str	w0, [sp, #136]
  402850:	str	wzr, [sp, #140]
  402854:	ldr	w0, [sp, #140]
  402858:	bl	4016f0 <log_get_max_level_realm@plt>
  40285c:	mov	w1, w0
  402860:	ldr	w0, [sp, #132]
  402864:	and	w0, w0, #0x7
  402868:	cmp	w1, w0
  40286c:	b.lt	4028b8 <parse_file+0x65c>  // b.tstop
  402870:	ldr	w0, [sp, #140]
  402874:	lsl	w1, w0, #10
  402878:	ldr	w0, [sp, #132]
  40287c:	orr	w7, w1, w0
  402880:	adrp	x0, 403000 <run+0x23c>
  402884:	add	x1, x0, #0x27b
  402888:	ldr	x6, [sp, #200]
  40288c:	adrp	x0, 403000 <run+0x23c>
  402890:	add	x5, x0, #0x3d8
  402894:	adrp	x0, 403000 <run+0x23c>
  402898:	add	x4, x0, #0x708
  40289c:	mov	w3, #0xcb                  	// #203
  4028a0:	mov	x2, x1
  4028a4:	ldr	w1, [sp, #136]
  4028a8:	mov	w0, w7
  4028ac:	bl	401610 <log_internal_realm@plt>
  4028b0:	mov	w20, w0
  4028b4:	b	4028cc <parse_file+0x670>
  4028b8:	ldr	w0, [sp, #136]
  4028bc:	cmp	w0, #0x0
  4028c0:	cneg	w0, w0, lt  // lt = tstop
  4028c4:	and	w0, w0, #0xff
  4028c8:	neg	w20, w0
  4028cc:	mov	w19, #0x1                   	// #1
  4028d0:	b	4028e4 <parse_file+0x688>
  4028d4:	ldr	x0, [sp, #184]
  4028d8:	str	x0, [sp, #224]
  4028dc:	str	xzr, [sp, #184]
  4028e0:	mov	w19, #0x3                   	// #3
  4028e4:	add	x0, sp, #0xc0
  4028e8:	bl	40197c <freep>
  4028ec:	cmp	w19, #0x3
  4028f0:	b.eq	402928 <parse_file+0x6cc>  // b.none
  4028f4:	cmp	w19, #0x3
  4028f8:	b.gt	402920 <parse_file+0x6c4>
  4028fc:	cmp	w19, #0x0
  402900:	b.eq	402910 <parse_file+0x6b4>  // b.none
  402904:	cmp	w19, #0x1
  402908:	b.eq	402918 <parse_file+0x6bc>  // b.none
  40290c:	b	402920 <parse_file+0x6c4>
  402910:	mov	w19, #0x0                   	// #0
  402914:	b	40292c <parse_file+0x6d0>
  402918:	mov	w19, #0x1                   	// #1
  40291c:	b	40292c <parse_file+0x6d0>
  402920:	mov	w19, #0x2                   	// #2
  402924:	b	40292c <parse_file+0x6d0>
  402928:	mov	w19, #0x3                   	// #3
  40292c:	add	x0, sp, #0xb8
  402930:	bl	401d58 <option_freep>
  402934:	cmp	w19, #0x3
  402938:	b.eq	402960 <parse_file+0x704>  // b.none
  40293c:	cmp	w19, #0x3
  402940:	b.gt	402458 <parse_file+0x1fc>
  402944:	cmp	w19, #0x0
  402948:	b.eq	402958 <parse_file+0x6fc>  // b.none
  40294c:	cmp	w19, #0x1
  402950:	b.eq	402964 <parse_file+0x708>  // b.none
  402954:	b	402960 <parse_file+0x704>
  402958:	ldr	w20, [sp, #100]
  40295c:	b	402964 <parse_file+0x708>
  402960:	b	402458 <parse_file+0x1fc>
  402964:	add	x0, sp, #0xb0
  402968:	bl	401908 <fclosep>
  40296c:	mov	w1, w20
  402970:	adrp	x0, 414000 <__FRAME_END__+0x10220>
  402974:	add	x0, x0, #0xc38
  402978:	ldr	x2, [sp, #280]
  40297c:	ldr	x0, [x0]
  402980:	eor	x0, x2, x0
  402984:	cmp	x0, #0x0
  402988:	b.eq	402990 <parse_file+0x734>  // b.none
  40298c:	bl	4015a0 <__stack_chk_fail@plt>
  402990:	mov	w0, w1
  402994:	ldp	x19, x20, [sp, #32]
  402998:	ldp	x29, x30, [sp, #16]
  40299c:	add	sp, sp, #0x120
  4029a0:	ret

00000000004029a4 <help>:
  4029a4:	stp	x29, x30, [sp, #-64]!
  4029a8:	mov	x29, sp
  4029ac:	str	x19, [sp, #16]
  4029b0:	adrp	x0, 414000 <__FRAME_END__+0x10220>
  4029b4:	add	x0, x0, #0xc38
  4029b8:	ldr	x1, [x0]
  4029bc:	str	x1, [sp, #56]
  4029c0:	mov	x1, #0x0                   	// #0
  4029c4:	str	xzr, [sp, #48]
  4029c8:	add	x0, sp, #0x30
  4029cc:	mov	x2, x0
  4029d0:	adrp	x0, 403000 <run+0x23c>
  4029d4:	add	x1, x0, #0x438
  4029d8:	adrp	x0, 403000 <run+0x23c>
  4029dc:	add	x0, x0, #0x440
  4029e0:	bl	401590 <terminal_urlify_man@plt>
  4029e4:	str	w0, [sp, #44]
  4029e8:	ldr	w0, [sp, #44]
  4029ec:	cmp	w0, #0x0
  4029f0:	b.ge	402a18 <help+0x74>  // b.tcont
  4029f4:	adrp	x0, 403000 <run+0x23c>
  4029f8:	add	x1, x0, #0x27b
  4029fc:	adrp	x0, 403000 <run+0x23c>
  402a00:	add	x3, x0, #0x718
  402a04:	mov	w2, #0xd9                  	// #217
  402a08:	mov	w0, #0x0                   	// #0
  402a0c:	bl	4016e0 <log_oom_internal@plt>
  402a10:	mov	w19, w0
  402a14:	b	402a40 <help+0x9c>
  402a18:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402a1c:	add	x0, x0, #0x8
  402a20:	ldr	x0, [x0]
  402a24:	ldr	x1, [sp, #48]
  402a28:	mov	x2, x1
  402a2c:	mov	x1, x0
  402a30:	adrp	x0, 403000 <run+0x23c>
  402a34:	add	x0, x0, #0x458
  402a38:	bl	4016c0 <printf@plt>
  402a3c:	mov	w19, #0x0                   	// #0
  402a40:	add	x0, sp, #0x30
  402a44:	bl	40197c <freep>
  402a48:	mov	w1, w19
  402a4c:	adrp	x0, 414000 <__FRAME_END__+0x10220>
  402a50:	add	x0, x0, #0xc38
  402a54:	ldr	x2, [sp, #56]
  402a58:	ldr	x0, [x0]
  402a5c:	eor	x0, x2, x0
  402a60:	cmp	x0, #0x0
  402a64:	b.eq	402a6c <help+0xc8>  // b.none
  402a68:	bl	4015a0 <__stack_chk_fail@plt>
  402a6c:	mov	w0, w1
  402a70:	ldr	x19, [sp, #16]
  402a74:	ldp	x29, x30, [sp], #64
  402a78:	ret

0000000000402a7c <parse_argv>:
  402a7c:	stp	x29, x30, [sp, #-64]!
  402a80:	mov	x29, sp
  402a84:	str	w0, [sp, #28]
  402a88:	str	x1, [sp, #16]
  402a8c:	ldr	w0, [sp, #28]
  402a90:	lsr	w0, w0, #31
  402a94:	and	w0, w0, #0xff
  402a98:	and	x0, x0, #0xff
  402a9c:	cmp	x0, #0x0
  402aa0:	b.eq	402acc <parse_argv+0x50>  // b.none
  402aa4:	adrp	x0, 403000 <run+0x23c>
  402aa8:	add	x1, x0, #0x27b
  402aac:	adrp	x0, 403000 <run+0x23c>
  402ab0:	add	x4, x0, #0x720
  402ab4:	mov	w3, #0xfe                  	// #254
  402ab8:	mov	x2, x1
  402abc:	adrp	x0, 403000 <run+0x23c>
  402ac0:	add	x1, x0, #0x5c0
  402ac4:	mov	w0, #0x0                   	// #0
  402ac8:	bl	4014d0 <log_assert_failed_realm@plt>
  402acc:	ldr	x0, [sp, #16]
  402ad0:	cmp	x0, #0x0
  402ad4:	cset	w0, eq  // eq = none
  402ad8:	and	w0, w0, #0xff
  402adc:	and	x0, x0, #0xff
  402ae0:	cmp	x0, #0x0
  402ae4:	b.eq	402cd0 <parse_argv+0x254>  // b.none
  402ae8:	adrp	x0, 403000 <run+0x23c>
  402aec:	add	x1, x0, #0x27b
  402af0:	adrp	x0, 403000 <run+0x23c>
  402af4:	add	x4, x0, #0x720
  402af8:	mov	w3, #0xff                  	// #255
  402afc:	mov	x2, x1
  402b00:	adrp	x0, 403000 <run+0x23c>
  402b04:	add	x1, x0, #0x5d0
  402b08:	mov	w0, #0x0                   	// #0
  402b0c:	bl	4014d0 <log_assert_failed_realm@plt>
  402b10:	ldr	w0, [sp, #40]
  402b14:	cmp	w0, #0x103
  402b18:	b.eq	402c80 <parse_argv+0x204>  // b.none
  402b1c:	ldr	w0, [sp, #40]
  402b20:	cmp	w0, #0x103
  402b24:	b.gt	402ca8 <parse_argv+0x22c>
  402b28:	ldr	w0, [sp, #40]
  402b2c:	cmp	w0, #0x102
  402b30:	b.eq	402bac <parse_argv+0x130>  // b.none
  402b34:	ldr	w0, [sp, #40]
  402b38:	cmp	w0, #0x102
  402b3c:	b.gt	402ca8 <parse_argv+0x22c>
  402b40:	ldr	w0, [sp, #40]
  402b44:	cmp	w0, #0x101
  402b48:	b.eq	402b98 <parse_argv+0x11c>  // b.none
  402b4c:	ldr	w0, [sp, #40]
  402b50:	cmp	w0, #0x101
  402b54:	b.gt	402ca8 <parse_argv+0x22c>
  402b58:	ldr	w0, [sp, #40]
  402b5c:	cmp	w0, #0x100
  402b60:	b.eq	402b90 <parse_argv+0x114>  // b.none
  402b64:	ldr	w0, [sp, #40]
  402b68:	cmp	w0, #0x100
  402b6c:	b.gt	402ca8 <parse_argv+0x22c>
  402b70:	ldr	w0, [sp, #40]
  402b74:	cmp	w0, #0x3f
  402b78:	b.eq	402ca0 <parse_argv+0x224>  // b.none
  402b7c:	ldr	w0, [sp, #40]
  402b80:	cmp	w0, #0x68
  402b84:	b.ne	402ca8 <parse_argv+0x22c>  // b.any
  402b88:	bl	4029a4 <help>
  402b8c:	b	402dbc <parse_argv+0x340>
  402b90:	bl	4015e0 <version@plt>
  402b94:	b	402dbc <parse_argv+0x340>
  402b98:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402b9c:	add	x0, x0, #0x30
  402ba0:	mov	w1, #0x1                   	// #1
  402ba4:	strb	w1, [x0]
  402ba8:	b	402cd0 <parse_argv+0x254>
  402bac:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402bb0:	add	x0, x0, #0x18
  402bb4:	ldr	x0, [x0]
  402bb8:	bl	4015d0 <sysctl_normalize@plt>
  402bbc:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402bc0:	add	x0, x0, #0x18
  402bc4:	ldr	x2, [x0]
  402bc8:	adrp	x0, 403000 <run+0x23c>
  402bcc:	add	x1, x0, #0x5d8
  402bd0:	mov	x0, x2
  402bd4:	bl	401560 <path_startswith@plt>
  402bd8:	cmp	x0, #0x0
  402bdc:	b.eq	402bf8 <parse_argv+0x17c>  // b.none
  402be0:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402be4:	add	x0, x0, #0x18
  402be8:	ldr	x0, [x0]
  402bec:	bl	401670 <strdup@plt>
  402bf0:	str	x0, [sp, #56]
  402bf4:	b	402c1c <parse_argv+0x1a0>
  402bf8:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402bfc:	add	x0, x0, #0x18
  402c00:	ldr	x0, [x0]
  402c04:	mov	x2, #0xffffffffffffffff    	// #-1
  402c08:	mov	x1, x0
  402c0c:	adrp	x0, 403000 <run+0x23c>
  402c10:	add	x0, x0, #0x5d8
  402c14:	bl	4015b0 <path_join_internal@plt>
  402c18:	str	x0, [sp, #56]
  402c1c:	ldr	x0, [sp, #56]
  402c20:	cmp	x0, #0x0
  402c24:	b.ne	402c48 <parse_argv+0x1cc>  // b.any
  402c28:	adrp	x0, 403000 <run+0x23c>
  402c2c:	add	x1, x0, #0x27b
  402c30:	adrp	x0, 403000 <run+0x23c>
  402c34:	add	x3, x0, #0x730
  402c38:	mov	w2, #0x11d                 	// #285
  402c3c:	mov	w0, #0x0                   	// #0
  402c40:	bl	4016e0 <log_oom_internal@plt>
  402c44:	b	402dbc <parse_argv+0x340>
  402c48:	ldr	x1, [sp, #56]
  402c4c:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402c50:	add	x0, x0, #0x28
  402c54:	bl	401550 <strv_consume@plt>
  402c58:	cmp	w0, #0x0
  402c5c:	b.ge	402cd0 <parse_argv+0x254>  // b.tcont
  402c60:	adrp	x0, 403000 <run+0x23c>
  402c64:	add	x1, x0, #0x27b
  402c68:	adrp	x0, 403000 <run+0x23c>
  402c6c:	add	x3, x0, #0x730
  402c70:	mov	w2, #0x120                 	// #288
  402c74:	mov	w0, #0x0                   	// #0
  402c78:	bl	4016e0 <log_oom_internal@plt>
  402c7c:	b	402dbc <parse_argv+0x340>
  402c80:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402c84:	add	x0, x0, #0x34
  402c88:	ldr	w0, [x0]
  402c8c:	orr	w1, w0, #0x1
  402c90:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402c94:	add	x0, x0, #0x34
  402c98:	str	w1, [x0]
  402c9c:	b	402cd0 <parse_argv+0x254>
  402ca0:	mov	w0, #0xffffffea            	// #-22
  402ca4:	b	402dbc <parse_argv+0x340>
  402ca8:	adrp	x0, 403000 <run+0x23c>
  402cac:	add	x1, x0, #0x27b
  402cb0:	adrp	x0, 403000 <run+0x23c>
  402cb4:	add	x4, x0, #0x720
  402cb8:	mov	w3, #0x12d                 	// #301
  402cbc:	mov	x2, x1
  402cc0:	adrp	x0, 403000 <run+0x23c>
  402cc4:	add	x1, x0, #0x5e8
  402cc8:	mov	w0, #0x0                   	// #0
  402ccc:	bl	401510 <log_assert_failed_unreachable_realm@plt>
  402cd0:	mov	x4, #0x0                   	// #0
  402cd4:	adrp	x0, 403000 <run+0x23c>
  402cd8:	add	x3, x0, #0x740
  402cdc:	adrp	x0, 403000 <run+0x23c>
  402ce0:	add	x2, x0, #0x600
  402ce4:	ldr	x1, [sp, #16]
  402ce8:	ldr	w0, [sp, #28]
  402cec:	bl	4014e0 <getopt_long@plt>
  402cf0:	str	w0, [sp, #40]
  402cf4:	ldr	w0, [sp, #40]
  402cf8:	cmp	w0, #0x0
  402cfc:	b.ge	402b10 <parse_argv+0x94>  // b.tcont
  402d00:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402d04:	add	x0, x0, #0x30
  402d08:	ldrb	w0, [x0]
  402d0c:	cmp	w0, #0x0
  402d10:	b.eq	402db8 <parse_argv+0x33c>  // b.none
  402d14:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402d18:	add	x0, x0, #0x10
  402d1c:	ldr	w0, [x0]
  402d20:	ldr	w1, [sp, #28]
  402d24:	cmp	w1, w0
  402d28:	b.le	402db8 <parse_argv+0x33c>
  402d2c:	mov	w0, #0x3                   	// #3
  402d30:	str	w0, [sp, #44]
  402d34:	mov	w0, #0x16                  	// #22
  402d38:	movk	w0, #0x4000, lsl #16
  402d3c:	str	w0, [sp, #48]
  402d40:	str	wzr, [sp, #52]
  402d44:	ldr	w0, [sp, #52]
  402d48:	bl	4016f0 <log_get_max_level_realm@plt>
  402d4c:	mov	w1, w0
  402d50:	ldr	w0, [sp, #44]
  402d54:	and	w0, w0, #0x7
  402d58:	cmp	w1, w0
  402d5c:	b.lt	402da0 <parse_argv+0x324>  // b.tstop
  402d60:	ldr	w0, [sp, #52]
  402d64:	lsl	w1, w0, #10
  402d68:	ldr	w0, [sp, #44]
  402d6c:	orr	w6, w1, w0
  402d70:	adrp	x0, 403000 <run+0x23c>
  402d74:	add	x1, x0, #0x27b
  402d78:	adrp	x0, 403000 <run+0x23c>
  402d7c:	add	x5, x0, #0x608
  402d80:	adrp	x0, 403000 <run+0x23c>
  402d84:	add	x4, x0, #0x730
  402d88:	mov	w3, #0x131                 	// #305
  402d8c:	mov	x2, x1
  402d90:	ldr	w1, [sp, #48]
  402d94:	mov	w0, w6
  402d98:	bl	401610 <log_internal_realm@plt>
  402d9c:	b	402dbc <parse_argv+0x340>
  402da0:	ldr	w0, [sp, #48]
  402da4:	cmp	w0, #0x0
  402da8:	cneg	w0, w0, lt  // lt = tstop
  402dac:	and	w0, w0, #0xff
  402db0:	neg	w0, w0
  402db4:	b	402dbc <parse_argv+0x340>
  402db8:	mov	w0, #0x1                   	// #1
  402dbc:	ldp	x29, x30, [sp], #64
  402dc0:	ret

0000000000402dc4 <run>:
  402dc4:	stp	x29, x30, [sp, #-160]!
  402dc8:	mov	x29, sp
  402dcc:	stp	x19, x20, [sp, #16]
  402dd0:	str	w0, [sp, #44]
  402dd4:	str	x1, [sp, #32]
  402dd8:	adrp	x0, 414000 <__FRAME_END__+0x10220>
  402ddc:	add	x0, x0, #0xc38
  402de0:	ldr	x1, [x0]
  402de4:	str	x1, [sp, #152]
  402de8:	mov	x1, #0x0                   	// #0
  402dec:	str	xzr, [sp, #80]
  402df0:	ldr	x1, [sp, #32]
  402df4:	ldr	w0, [sp, #44]
  402df8:	bl	402a7c <parse_argv>
  402dfc:	str	w0, [sp, #56]
  402e00:	ldr	w0, [sp, #56]
  402e04:	cmp	w0, #0x0
  402e08:	b.gt	402e14 <run+0x50>
  402e0c:	ldr	w19, [sp, #56]
  402e10:	b	4030e4 <run+0x320>
  402e14:	bl	4014c0 <log_setup_service@plt>
  402e18:	mov	w0, #0x12                  	// #18
  402e1c:	bl	401520 <umask@plt>
  402e20:	adrp	x0, 403000 <run+0x23c>
  402e24:	add	x0, x0, #0x6b8
  402e28:	bl	4014a0 <internal_ordered_hashmap_new@plt>
  402e2c:	str	x0, [sp, #80]
  402e30:	ldr	x0, [sp, #80]
  402e34:	cmp	x0, #0x0
  402e38:	b.ne	402e60 <run+0x9c>  // b.any
  402e3c:	adrp	x0, 403000 <run+0x23c>
  402e40:	add	x1, x0, #0x27b
  402e44:	adrp	x0, 403000 <run+0x23c>
  402e48:	add	x3, x0, #0x800
  402e4c:	mov	w2, #0x145                 	// #325
  402e50:	mov	w0, #0x0                   	// #0
  402e54:	bl	4016e0 <log_oom_internal@plt>
  402e58:	mov	w19, w0
  402e5c:	b	4030e4 <run+0x320>
  402e60:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402e64:	add	x0, x0, #0x10
  402e68:	ldr	w0, [x0]
  402e6c:	ldr	w1, [sp, #44]
  402e70:	cmp	w1, w0
  402e74:	b.le	402efc <run+0x138>
  402e78:	str	wzr, [sp, #56]
  402e7c:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402e80:	add	x0, x0, #0x10
  402e84:	ldr	w0, [x0]
  402e88:	str	w0, [sp, #60]
  402e8c:	b	402ee8 <run+0x124>
  402e90:	ldr	x3, [sp, #80]
  402e94:	ldrsw	x0, [sp, #60]
  402e98:	lsl	x0, x0, #3
  402e9c:	ldr	x1, [sp, #32]
  402ea0:	add	x0, x1, x0
  402ea4:	ldr	x0, [x0]
  402ea8:	mov	w2, #0x0                   	// #0
  402eac:	mov	x1, x0
  402eb0:	mov	x0, x3
  402eb4:	bl	40225c <parse_file>
  402eb8:	str	w0, [sp, #64]
  402ebc:	ldr	w0, [sp, #64]
  402ec0:	cmp	w0, #0x0
  402ec4:	b.ge	402edc <run+0x118>  // b.tcont
  402ec8:	ldr	w0, [sp, #56]
  402ecc:	cmp	w0, #0x0
  402ed0:	b.ne	402edc <run+0x118>  // b.any
  402ed4:	ldr	w0, [sp, #64]
  402ed8:	str	w0, [sp, #56]
  402edc:	ldr	w0, [sp, #60]
  402ee0:	add	w0, w0, #0x1
  402ee4:	str	w0, [sp, #60]
  402ee8:	ldr	w1, [sp, #60]
  402eec:	ldr	w0, [sp, #44]
  402ef0:	cmp	w1, w0
  402ef4:	b.lt	402e90 <run+0xcc>  // b.tstop
  402ef8:	b	4030b4 <run+0x2f0>
  402efc:	str	xzr, [sp, #88]
  402f00:	adrp	x0, 403000 <run+0x23c>
  402f04:	add	x1, x0, #0x408
  402f08:	add	x0, sp, #0x68
  402f0c:	ldp	x2, x3, [x1]
  402f10:	stp	x2, x3, [x0]
  402f14:	ldp	x2, x3, [x1, #16]
  402f18:	stp	x2, x3, [x0, #16]
  402f1c:	ldp	x2, x3, [x1, #32]
  402f20:	stp	x2, x3, [x0, #32]
  402f24:	add	x0, sp, #0x68
  402f28:	add	x5, sp, #0x58
  402f2c:	mov	x4, x0
  402f30:	mov	w3, #0x0                   	// #0
  402f34:	mov	x2, #0x0                   	// #0
  402f38:	adrp	x0, 403000 <run+0x23c>
  402f3c:	add	x1, x0, #0x640
  402f40:	mov	x0, x5
  402f44:	bl	4016d0 <conf_files_list_strv@plt>
  402f48:	str	w0, [sp, #56]
  402f4c:	ldr	w0, [sp, #56]
  402f50:	cmp	w0, #0x0
  402f54:	b.ge	402fe8 <run+0x224>  // b.tcont
  402f58:	mov	w0, #0x3                   	// #3
  402f5c:	str	w0, [sp, #68]
  402f60:	ldr	w0, [sp, #56]
  402f64:	str	w0, [sp, #72]
  402f68:	str	wzr, [sp, #76]
  402f6c:	ldr	w0, [sp, #76]
  402f70:	bl	4016f0 <log_get_max_level_realm@plt>
  402f74:	mov	w1, w0
  402f78:	ldr	w0, [sp, #68]
  402f7c:	and	w0, w0, #0x7
  402f80:	cmp	w1, w0
  402f84:	b.lt	402fcc <run+0x208>  // b.tstop
  402f88:	ldr	w0, [sp, #76]
  402f8c:	lsl	w1, w0, #10
  402f90:	ldr	w0, [sp, #68]
  402f94:	orr	w6, w1, w0
  402f98:	adrp	x0, 403000 <run+0x23c>
  402f9c:	add	x1, x0, #0x27b
  402fa0:	adrp	x0, 403000 <run+0x23c>
  402fa4:	add	x5, x0, #0x648
  402fa8:	adrp	x0, 403000 <run+0x23c>
  402fac:	add	x4, x0, #0x800
  402fb0:	mov	w3, #0x157                 	// #343
  402fb4:	mov	x2, x1
  402fb8:	ldr	w1, [sp, #72]
  402fbc:	mov	w0, w6
  402fc0:	bl	401610 <log_internal_realm@plt>
  402fc4:	mov	w19, w0
  402fc8:	b	402fe0 <run+0x21c>
  402fcc:	ldr	w0, [sp, #72]
  402fd0:	cmp	w0, #0x0
  402fd4:	cneg	w0, w0, lt  // lt = tstop
  402fd8:	and	w0, w0, #0xff
  402fdc:	neg	w19, w0
  402fe0:	mov	w20, #0x0                   	// #0
  402fe4:	b	4030a4 <run+0x2e0>
  402fe8:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402fec:	add	x0, x0, #0x30
  402ff0:	ldrb	w0, [x0]
  402ff4:	cmp	w0, #0x0
  402ff8:	b.eq	40302c <run+0x268>  // b.none
  402ffc:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  403000:	add	x0, x0, #0x34
  403004:	ldr	w0, [x0]
  403008:	bl	401580 <pager_open@plt>
  40300c:	ldr	x0, [sp, #88]
  403010:	mov	w2, #0x0                   	// #0
  403014:	mov	x1, x0
  403018:	mov	x0, #0x0                   	// #0
  40301c:	bl	401700 <cat_files@plt>
  403020:	mov	w19, w0
  403024:	mov	w20, #0x0                   	// #0
  403028:	b	4030a4 <run+0x2e0>
  40302c:	ldr	x0, [sp, #88]
  403030:	str	x0, [sp, #96]
  403034:	b	403084 <run+0x2c0>
  403038:	ldr	x3, [sp, #80]
  40303c:	ldr	x0, [sp, #96]
  403040:	ldr	x0, [x0]
  403044:	mov	w2, #0x1                   	// #1
  403048:	mov	x1, x0
  40304c:	mov	x0, x3
  403050:	bl	40225c <parse_file>
  403054:	str	w0, [sp, #64]
  403058:	ldr	w0, [sp, #64]
  40305c:	cmp	w0, #0x0
  403060:	b.ge	403078 <run+0x2b4>  // b.tcont
  403064:	ldr	w0, [sp, #56]
  403068:	cmp	w0, #0x0
  40306c:	b.ne	403078 <run+0x2b4>  // b.any
  403070:	ldr	w0, [sp, #64]
  403074:	str	w0, [sp, #56]
  403078:	ldr	x0, [sp, #96]
  40307c:	add	x0, x0, #0x8
  403080:	str	x0, [sp, #96]
  403084:	ldr	x0, [sp, #96]
  403088:	cmp	x0, #0x0
  40308c:	b.eq	4030a0 <run+0x2dc>  // b.none
  403090:	ldr	x0, [sp, #96]
  403094:	ldr	x0, [x0]
  403098:	cmp	x0, #0x0
  40309c:	b.ne	403038 <run+0x274>  // b.any
  4030a0:	mov	w20, #0x1                   	// #1
  4030a4:	add	x0, sp, #0x58
  4030a8:	bl	401c74 <strv_freep>
  4030ac:	cmp	w20, #0x1
  4030b0:	b.ne	4030e4 <run+0x320>  // b.any
  4030b4:	ldr	x0, [sp, #80]
  4030b8:	bl	401f30 <apply_all>
  4030bc:	str	w0, [sp, #64]
  4030c0:	ldr	w0, [sp, #64]
  4030c4:	cmp	w0, #0x0
  4030c8:	b.ge	4030e0 <run+0x31c>  // b.tcont
  4030cc:	ldr	w0, [sp, #56]
  4030d0:	cmp	w0, #0x0
  4030d4:	b.ne	4030e0 <run+0x31c>  // b.any
  4030d8:	ldr	w0, [sp, #64]
  4030dc:	str	w0, [sp, #56]
  4030e0:	ldr	w19, [sp, #56]
  4030e4:	add	x0, sp, #0x50
  4030e8:	bl	401b78 <ordered_hashmap_freep>
  4030ec:	mov	w1, w19
  4030f0:	adrp	x0, 414000 <__FRAME_END__+0x10220>
  4030f4:	add	x0, x0, #0xc38
  4030f8:	ldr	x2, [sp, #152]
  4030fc:	ldr	x0, [x0]
  403100:	eor	x0, x2, x0
  403104:	cmp	x0, #0x0
  403108:	b.eq	403110 <run+0x34c>  // b.none
  40310c:	bl	4015a0 <__stack_chk_fail@plt>
  403110:	mov	w0, w1
  403114:	ldp	x19, x20, [sp, #16]
  403118:	ldp	x29, x30, [sp], #160
  40311c:	ret

0000000000403120 <main>:
  403120:	stp	x29, x30, [sp, #-48]!
  403124:	mov	x29, sp
  403128:	str	w0, [sp, #28]
  40312c:	str	x1, [sp, #16]
  403130:	ldr	x1, [sp, #16]
  403134:	ldr	w0, [sp, #28]
  403138:	bl	401a70 <save_argc_argv>
  40313c:	ldr	x1, [sp, #16]
  403140:	ldr	w0, [sp, #28]
  403144:	bl	402dc4 <run>
  403148:	str	w0, [sp, #44]
  40314c:	bl	4015c0 <ask_password_agent_close@plt>
  403150:	bl	4014b0 <polkit_agent_close@plt>
  403154:	bl	4015f0 <pager_close@plt>
  403158:	bl	4016b0 <mac_selinux_finish@plt>
  40315c:	bl	401bec <static_destruct>
  403160:	ldr	w0, [sp, #44]
  403164:	lsr	w0, w0, #31
  403168:	ldp	x29, x30, [sp], #48
  40316c:	ret

0000000000403170 <__libc_csu_init>:
  403170:	stp	x29, x30, [sp, #-64]!
  403174:	mov	x29, sp
  403178:	stp	x19, x20, [sp, #16]
  40317c:	adrp	x20, 414000 <__FRAME_END__+0x10220>
  403180:	add	x20, x20, #0xc30
  403184:	stp	x21, x22, [sp, #32]
  403188:	adrp	x21, 414000 <__FRAME_END__+0x10220>
  40318c:	add	x21, x21, #0xc28
  403190:	sub	x20, x20, x21
  403194:	mov	w22, w0
  403198:	stp	x23, x24, [sp, #48]
  40319c:	mov	x23, x1
  4031a0:	mov	x24, x2
  4031a4:	bl	401408 <_init>
  4031a8:	cmp	xzr, x20, asr #3
  4031ac:	b.eq	4031d8 <__libc_csu_init+0x68>  // b.none
  4031b0:	asr	x20, x20, #3
  4031b4:	mov	x19, #0x0                   	// #0
  4031b8:	ldr	x3, [x21, x19, lsl #3]
  4031bc:	mov	x2, x24
  4031c0:	add	x19, x19, #0x1
  4031c4:	mov	x1, x23
  4031c8:	mov	w0, w22
  4031cc:	blr	x3
  4031d0:	cmp	x20, x19
  4031d4:	b.ne	4031b8 <__libc_csu_init+0x48>  // b.any
  4031d8:	ldp	x19, x20, [sp, #16]
  4031dc:	ldp	x21, x22, [sp, #32]
  4031e0:	ldp	x23, x24, [sp, #48]
  4031e4:	ldp	x29, x30, [sp], #64
  4031e8:	ret
  4031ec:	nop

00000000004031f0 <__libc_csu_fini>:
  4031f0:	ret

Disassembly of section .fini:

00000000004031f4 <_fini>:
  4031f4:	stp	x29, x30, [sp, #-16]!
  4031f8:	mov	x29, sp
  4031fc:	ldp	x29, x30, [sp], #16
  403200:	ret
