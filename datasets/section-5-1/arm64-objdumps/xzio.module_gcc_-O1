
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//xzio.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_xzio_close>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x19, x0
      10:	ldr	x20, [x0, #80]
      14:	ldr	x0, [x20, #56]
      18:	bl	350c <xz_dec_end>
      1c:	ldr	x0, [x20]
      20:	bl	0 <grub_file_close>
      24:	mov	x0, x20
      28:	bl	0 <grub_free>
      2c:	str	xzr, [x19, #8]
      30:	str	xzr, [x19]
      34:	adrp	x0, 0 <grub_xzio_close>
      38:	ldr	x0, [x0]
      3c:	ldr	w0, [x0]
      40:	ldp	x19, x20, [sp, #16]
      44:	ldp	x29, x30, [sp], #32
      48:	ret
      4c:	nop
	...

0000000000000058 <read_vli>:
      58:	stp	x29, x30, [sp, #-64]!
      5c:	mov	x29, sp
      60:	stp	x19, x20, [sp, #16]
      64:	str	x21, [sp, #32]
      68:	mov	x21, x0
      6c:	mov	x20, x1
      70:	mov	x2, #0x9                   	// #9
      74:	add	x1, sp, #0x30
      78:	bl	0 <grub_file_read>
      7c:	tbnz	x0, #63, 130 <read_vli+0xd8>
      80:	mov	x19, x0
      84:	cbz	x0, 108 <read_vli+0xb0>
      88:	cmp	x0, #0x9
      8c:	mov	x6, #0x9                   	// #9
      90:	csel	x6, x0, x6, ls  // ls = plast
      94:	ldrb	w1, [sp, #48]
      98:	and	x2, x1, #0x7f
      9c:	str	x2, [x20]
      a0:	tbz	w1, #7, f4 <read_vli+0x9c>
      a4:	cmp	x0, #0x1
      a8:	b.ls	fc <read_vli+0xa4>  // b.plast
      ac:	add	x5, sp, #0x31
      b0:	mov	w4, #0x7                   	// #7
      b4:	mov	x19, #0x1                   	// #1
      b8:	ldrb	w1, [x5]
      bc:	cbz	w1, 104 <read_vli+0xac>
      c0:	and	x2, x1, #0x7f
      c4:	lsl	x3, x2, x4
      c8:	ldr	x2, [x20]
      cc:	orr	x2, x2, x3
      d0:	str	x2, [x20]
      d4:	add	x19, x19, #0x1
      d8:	tbz	w1, #7, 108 <read_vli+0xb0>
      dc:	add	x5, x5, #0x1
      e0:	add	w4, w4, #0x7
      e4:	cmp	x6, x19
      e8:	b.hi	b8 <read_vli+0x60>  // b.pmore
      ec:	mov	x19, #0x0                   	// #0
      f0:	b	108 <read_vli+0xb0>
      f4:	mov	x19, #0x1                   	// #1
      f8:	b	108 <read_vli+0xb0>
      fc:	mov	x19, #0x0                   	// #0
     100:	b	108 <read_vli+0xb0>
     104:	mov	x19, #0x0                   	// #0
     108:	ldr	x1, [x21, #24]
     10c:	sub	x1, x1, x0
     110:	add	x1, x1, x19
     114:	mov	x0, x21
     118:	bl	0 <grub_file_seek>
     11c:	mov	x0, x19
     120:	ldp	x19, x20, [sp, #16]
     124:	ldr	x21, [sp, #32]
     128:	ldp	x29, x30, [sp], #64
     12c:	ret
     130:	mov	x0, #0xffffffffffffffff    	// #-1
     134:	b	120 <read_vli+0xc8>

0000000000000138 <grub_xzio_read>:
     138:	stp	x29, x30, [sp, #-128]!
     13c:	mov	x29, sp
     140:	stp	x19, x20, [sp, #16]
     144:	stp	x21, x22, [sp, #32]
     148:	stp	x23, x24, [sp, #48]
     14c:	stp	x25, x26, [sp, #64]
     150:	stp	x27, x28, [sp, #80]
     154:	mov	x25, x0
     158:	mov	x27, x1
     15c:	mov	x24, x2
     160:	ldr	x19, [x0, #80]
     164:	ldr	x1, [x0, #24]
     168:	ldr	x0, [x19, #16448]
     16c:	cmp	x1, x0
     170:	b.cc	198 <grub_xzio_read+0x60>  // b.lo, b.ul, b.last
     174:	ldr	x21, [x19, #16448]
     178:	mov	x23, #0x0                   	// #0
     17c:	mov	x26, #0x2000                	// #8192
     180:	mov	x28, #0x2001                	// #8193
     184:	add	x0, x19, #0x40
     188:	str	x0, [sp, #120]
     18c:	add	x0, x19, #0x8
     190:	str	x0, [sp, #112]
     194:	b	23c <grub_xzio_read+0x104>
     198:	ldr	x0, [x19, #56]
     19c:	bl	28a4 <xz_dec_reset>
     1a0:	str	xzr, [x19, #16448]
     1a4:	str	xzr, [x19, #40]
     1a8:	str	xzr, [x19, #16]
     1ac:	str	xzr, [x19, #24]
     1b0:	mov	x1, #0x0                   	// #0
     1b4:	ldr	x0, [x19]
     1b8:	bl	0 <grub_file_seek>
     1bc:	b	174 <grub_xzio_read+0x3c>
     1c0:	mov	x2, x26
     1c4:	ldr	x1, [sp, #120]
     1c8:	ldr	x0, [x19]
     1cc:	bl	0 <grub_file_read>
     1d0:	tbnz	x0, #63, 2d4 <grub_xzio_read+0x19c>
     1d4:	str	x0, [x19, #24]
     1d8:	str	xzr, [x19, #16]
     1dc:	b	270 <grub_xzio_read+0x138>
     1e0:	adrp	x0, 0 <grub_xzio_close>
     1e4:	ldr	x1, [x0]
     1e8:	mov	w0, #0x1a                  	// #26
     1ec:	bl	0 <grub_error>
     1f0:	mov	x23, #0xffffffffffffffff    	// #-1
     1f4:	b	2b4 <grub_xzio_read+0x17c>
     1f8:	ldr	x0, [sp, #104]
     1fc:	add	x22, x0, x22
     200:	sub	x23, x21, x22
     204:	sub	x22, x22, x21
     208:	add	x1, x1, x22
     20c:	ldr	x0, [x19, #32]
     210:	mov	x2, x23
     214:	add	x1, x0, x1
     218:	mov	x0, x27
     21c:	bl	0 <grub_memmove>
     220:	add	x24, x24, x22
     224:	add	x27, x27, x23
     228:	ldr	x0, [sp, #104]
     22c:	add	x23, x0, x23
     230:	str	xzr, [x19, #40]
     234:	cmp	w20, #0x1
     238:	b.eq	2a4 <grub_xzio_read+0x16c>  // b.none
     23c:	cbz	x24, 2a4 <grub_xzio_read+0x16c>
     240:	str	x23, [sp, #104]
     244:	ldr	x0, [x25, #24]
     248:	add	x0, x24, x0
     24c:	sub	x1, x23, x21
     250:	add	x0, x0, x1
     254:	cmp	x0, x28
     258:	csel	x0, x0, x26, cc  // cc = lo, ul, last
     25c:	str	x0, [x19, #48]
     260:	ldr	x1, [x19, #16]
     264:	ldr	x0, [x19, #24]
     268:	cmp	x1, x0
     26c:	b.eq	1c0 <grub_xzio_read+0x88>  // b.none
     270:	ldr	x1, [sp, #112]
     274:	ldr	x0, [x19, #56]
     278:	bl	2940 <xz_dec_run>
     27c:	mov	w20, w0
     280:	sub	w0, w0, #0x2
     284:	cmp	w0, #0x4
     288:	b.ls	1e0 <grub_xzio_read+0xa8>  // b.plast
     28c:	ldr	x1, [x19, #40]
     290:	add	x21, x21, x1
     294:	ldr	x22, [x25, #24]
     298:	cmp	x22, x21
     29c:	b.hi	230 <grub_xzio_read+0xf8>  // b.pmore
     2a0:	b	1f8 <grub_xzio_read+0xc0>
     2a4:	tbnz	x23, #63, 2b4 <grub_xzio_read+0x17c>
     2a8:	ldr	x0, [x25, #24]
     2ac:	add	x0, x0, x23
     2b0:	str	x0, [x19, #16448]
     2b4:	mov	x0, x23
     2b8:	ldp	x19, x20, [sp, #16]
     2bc:	ldp	x21, x22, [sp, #32]
     2c0:	ldp	x23, x24, [sp, #48]
     2c4:	ldp	x25, x26, [sp, #64]
     2c8:	ldp	x27, x28, [sp, #80]
     2cc:	ldp	x29, x30, [sp], #128
     2d0:	ret
     2d4:	mov	x23, #0xffffffffffffffff    	// #-1
     2d8:	b	2b4 <grub_xzio_read+0x17c>
     2dc:	nop
	...

00000000000002e8 <grub_xzio_open>:
     2e8:	stp	x29, x30, [sp, #-96]!
     2ec:	mov	x29, sp
     2f0:	stp	x19, x20, [sp, #16]
     2f4:	mov	x20, x0
     2f8:	tbz	w1, #17, 30c <grub_xzio_open+0x24>
     2fc:	mov	x0, x20
     300:	ldp	x19, x20, [sp, #16]
     304:	ldp	x29, x30, [sp], #96
     308:	ret
     30c:	stp	x21, x22, [sp, #32]
     310:	mov	x0, #0x68                  	// #104
     314:	bl	0 <grub_zalloc>
     318:	mov	x21, x0
     31c:	cbz	x0, 584 <grub_xzio_open+0x29c>
     320:	mov	x0, #0x4048                	// #16456
     324:	bl	0 <grub_zalloc>
     328:	mov	x19, x0
     32c:	cbz	x0, 3f0 <grub_xzio_open+0x108>
     330:	str	x20, [x0]
     334:	ldr	x0, [x20, #8]
     338:	str	x0, [x21, #8]
     33c:	str	x19, [x21, #80]
     340:	adrp	x0, 0 <grub_xzio_close>
     344:	ldr	x0, [x0]
     348:	str	x0, [x21, #16]
     34c:	mov	x0, #0xffffffffffffffff    	// #-1
     350:	str	x0, [x21, #64]
     354:	mov	w0, #0x1                   	// #1
     358:	str	w0, [x21, #72]
     35c:	ldr	x0, [x19]
     360:	ldr	x1, [x0, #24]
     364:	cbnz	x1, 404 <grub_xzio_open+0x11c>
     368:	mov	w0, #0x10000               	// #65536
     36c:	bl	3488 <xz_dec_init>
     370:	mov	x22, x0
     374:	str	x0, [x19, #56]
     378:	cbz	x0, 410 <grub_xzio_open+0x128>
     37c:	add	x0, x19, #0x40
     380:	str	x0, [x19, #8]
     384:	add	x0, x19, #0x2, lsl #12
     388:	add	x0, x0, #0x40
     38c:	str	x0, [x19, #32]
     390:	mov	x0, #0x2000                	// #8192
     394:	str	x0, [x19, #48]
     398:	ldr	x22, [x21, #80]
     39c:	mov	x1, x22
     3a0:	ldr	x0, [x1], #64
     3a4:	mov	x2, #0xc                   	// #12
     3a8:	bl	0 <grub_file_read>
     3ac:	str	x0, [x22, #24]
     3b0:	cmp	x0, #0xc
     3b4:	b.eq	42c <grub_xzio_open+0x144>  // b.none
     3b8:	adrp	x0, 0 <grub_xzio_close>
     3bc:	ldr	x0, [x0]
     3c0:	str	wzr, [x0]
     3c4:	mov	x1, #0x0                   	// #0
     3c8:	mov	x0, x20
     3cc:	bl	0 <grub_file_seek>
     3d0:	ldr	x0, [x19, #56]
     3d4:	bl	350c <xz_dec_end>
     3d8:	mov	x0, x19
     3dc:	bl	0 <grub_free>
     3e0:	mov	x0, x21
     3e4:	bl	0 <grub_free>
     3e8:	ldp	x21, x22, [sp, #32]
     3ec:	b	2fc <grub_xzio_open+0x14>
     3f0:	mov	x0, x21
     3f4:	bl	0 <grub_free>
     3f8:	mov	x20, x19
     3fc:	ldp	x21, x22, [sp, #32]
     400:	b	2fc <grub_xzio_open+0x14>
     404:	mov	x1, #0x0                   	// #0
     408:	bl	0 <grub_file_seek>
     40c:	b	368 <grub_xzio_open+0x80>
     410:	mov	x0, x21
     414:	bl	0 <grub_free>
     418:	mov	x0, x19
     41c:	bl	0 <grub_free>
     420:	mov	x20, x22
     424:	ldp	x21, x22, [sp, #32]
     428:	b	2fc <grub_xzio_open+0x14>
     42c:	add	x1, x22, #0x8
     430:	ldr	x0, [x22, #56]
     434:	bl	2940 <xz_dec_run>
     438:	cbnz	w0, 3b8 <grub_xzio_open+0xd0>
     43c:	ldr	x22, [x21, #80]
     440:	ldr	x0, [x22]
     444:	ldr	x1, [x0, #64]
     448:	sub	x1, x1, #0x2
     44c:	bl	0 <grub_file_seek>
     450:	mov	x2, #0x2                   	// #2
     454:	add	x1, sp, #0x48
     458:	ldr	x0, [x22]
     45c:	bl	0 <grub_file_read>
     460:	cmp	x0, #0x2
     464:	b.ne	3b8 <grub_xzio_open+0xd0>  // b.any
     468:	mov	x2, #0x2                   	// #2
     46c:	adrp	x0, 0 <grub_xzio_close>
     470:	ldr	x1, [x0]
     474:	add	x0, sp, #0x48
     478:	bl	0 <grub_memcmp>
     47c:	cbnz	w0, 3b8 <grub_xzio_open+0xd0>
     480:	ldr	x0, [x22]
     484:	ldr	x1, [x0, #64]
     488:	sub	x1, x1, #0x8
     48c:	bl	0 <grub_file_seek>
     490:	mov	x2, #0x4                   	// #4
     494:	add	x1, sp, #0x4c
     498:	ldr	x0, [x22]
     49c:	bl	0 <grub_file_read>
     4a0:	cmp	x0, #0x4
     4a4:	b.ne	3b8 <grub_xzio_open+0xd0>  // b.any
     4a8:	ldr	w1, [sp, #76]
     4ac:	add	w1, w1, #0x1
     4b0:	lsl	w1, w1, #2
     4b4:	str	w1, [sp, #76]
     4b8:	ldr	x0, [x22]
     4bc:	mov	x2, #0xfffffffffffffff4    	// #-12
     4c0:	sub	x1, x2, w1, uxtw
     4c4:	ldr	x2, [x0, #64]
     4c8:	add	x1, x1, x2
     4cc:	bl	0 <grub_file_seek>
     4d0:	mov	x2, #0x1                   	// #1
     4d4:	add	x1, sp, #0x47
     4d8:	ldr	x0, [x22]
     4dc:	bl	0 <grub_file_read>
     4e0:	cmp	x0, #0x1
     4e4:	b.eq	4f0 <grub_xzio_open+0x208>  // b.none
     4e8:	ldrb	w0, [sp, #71]
     4ec:	cbnz	w0, 3b8 <grub_xzio_open+0xd0>
     4f0:	add	x1, sp, #0x58
     4f4:	ldr	x0, [x22]
     4f8:	bl	58 <read_vli>
     4fc:	cmp	x0, #0x0
     500:	b.le	3b8 <grub_xzio_open+0xd0>
     504:	str	x23, [sp, #48]
     508:	ldr	x23, [sp, #88]
     50c:	cbz	x23, 554 <grub_xzio_open+0x26c>
     510:	mov	x23, #0x0                   	// #0
     514:	add	x1, sp, #0x50
     518:	ldr	x0, [x22]
     51c:	bl	58 <read_vli>
     520:	cmp	x0, #0x0
     524:	b.le	574 <grub_xzio_open+0x28c>
     528:	add	x1, sp, #0x50
     52c:	ldr	x0, [x22]
     530:	bl	58 <read_vli>
     534:	cmp	x0, #0x0
     538:	b.le	57c <grub_xzio_open+0x294>
     53c:	ldr	x0, [sp, #80]
     540:	add	x23, x23, x0
     544:	ldr	x0, [sp, #88]
     548:	sub	x0, x0, #0x1
     54c:	str	x0, [sp, #88]
     550:	cbnz	x0, 514 <grub_xzio_open+0x22c>
     554:	str	x23, [x21, #64]
     558:	mov	x1, #0xc                   	// #12
     55c:	ldr	x0, [x22]
     560:	bl	0 <grub_file_seek>
     564:	mov	x20, x21
     568:	ldp	x21, x22, [sp, #32]
     56c:	ldr	x23, [sp, #48]
     570:	b	2fc <grub_xzio_open+0x14>
     574:	ldr	x23, [sp, #48]
     578:	b	3b8 <grub_xzio_open+0xd0>
     57c:	ldr	x23, [sp, #48]
     580:	b	3b8 <grub_xzio_open+0xd0>
     584:	mov	x20, x0
     588:	ldp	x21, x22, [sp, #32]
     58c:	b	2fc <grub_xzio_open+0x14>
	...

00000000000005a8 <grub_mod_init>:
     5a8:	adrp	x0, 0 <grub_xzio_close>
     5ac:	ldr	x0, [x0]
     5b0:	adrp	x1, 0 <grub_xzio_close>
     5b4:	ldr	x1, [x1]
     5b8:	str	x1, [x0, #16]
     5bc:	ret
	...

00000000000005d0 <grub_mod_fini>:
     5d0:	adrp	x0, 0 <grub_xzio_close>
     5d4:	ldr	x0, [x0]
     5d8:	str	xzr, [x0, #16]
     5dc:	ret
	...

00000000000005e8 <bcj_x86>:
     5e8:	mov	x6, x0
     5ec:	mov	x0, #0x0                   	// #0
     5f0:	cmp	x2, #0x4
     5f4:	b.ls	7a0 <bcj_x86+0x1b8>  // b.plast
     5f8:	ldr	w4, [x6, #16]
     5fc:	sub	x5, x2, #0x4
     600:	mov	x2, #0xffffffffffffffff    	// #-1
     604:	mov	x0, #0x0                   	// #0
     608:	mov	w9, #0xfffffffb            	// #-5
     60c:	adrp	x7, 0 <grub_xzio_close>
     610:	mov	w10, #0x18                  	// #24
     614:	mov	w12, #0x20                  	// #32
     618:	mov	w11, #0x1                   	// #1
     61c:	mov	w8, #0x0                   	// #0
     620:	b	658 <bcj_x86+0x70>
     624:	mov	w4, w8
     628:	add	x14, x0, #0x4
     62c:	ldrb	w2, [x1, x14]
     630:	sub	w2, w2, #0x1
     634:	and	w2, w2, #0xff
     638:	cmp	w2, #0xfd
     63c:	b.hi	6c8 <bcj_x86+0xe0>  // b.pmore
     640:	lsl	w2, w4, #1
     644:	orr	w4, w2, #0x1
     648:	mov	x2, x0
     64c:	add	x0, x0, #0x1
     650:	cmp	x5, x0
     654:	b.ls	788 <bcj_x86+0x1a0>  // b.plast
     658:	ldrb	w3, [x1, x0]
     65c:	and	w3, w3, #0xfe
     660:	cmp	w3, #0xe8
     664:	b.ne	64c <bcj_x86+0x64>  // b.any
     668:	sub	x2, x0, x2
     66c:	cmp	x2, #0x3
     670:	b.hi	624 <bcj_x86+0x3c>  // b.pmore
     674:	sub	w2, w2, #0x1
     678:	lsl	w2, w4, w2
     67c:	ands	w4, w2, #0x7
     680:	b.eq	628 <bcj_x86+0x40>  // b.none
     684:	ldr	x2, [x7]
     688:	mov	w13, w4
     68c:	ldrb	w14, [x2, w4, uxtw]
     690:	add	x3, x0, #0x4
     694:	sub	x3, x3, x14
     698:	ldrb	w3, [x1, x3]
     69c:	add	x2, x2, #0x8
     6a0:	ldr	w2, [x2, x13, lsl #2]
     6a4:	cbz	w2, 6b8 <bcj_x86+0xd0>
     6a8:	sub	w3, w3, #0x1
     6ac:	and	w3, w3, #0xff
     6b0:	cmp	w3, #0xfd
     6b4:	b.ls	628 <bcj_x86+0x40>  // b.plast
     6b8:	lsl	w2, w4, #1
     6bc:	orr	w4, w2, #0x1
     6c0:	mov	x2, x0
     6c4:	b	64c <bcj_x86+0x64>
     6c8:	add	x16, x0, #0x1
     6cc:	add	x15, x1, x16
     6d0:	ldr	w17, [x6, #12]
     6d4:	add	w17, w17, w0
     6d8:	sub	w17, w9, w17
     6dc:	ldrb	w2, [x15, #1]
     6e0:	ldrb	w3, [x15, #2]
     6e4:	lsl	w3, w3, #16
     6e8:	orr	w2, w3, w2, lsl #8
     6ec:	ldrb	w3, [x15, #3]
     6f0:	ldrb	w13, [x1, x16]
     6f4:	orr	w3, w13, w3, lsl #24
     6f8:	orr	w2, w2, w3
     6fc:	add	w2, w2, w17
     700:	cbz	w4, 750 <bcj_x86+0x168>
     704:	ldr	x3, [x7]
     708:	ldrb	w3, [x3, w4, uxtw]
     70c:	lsl	w3, w3, #3
     710:	sub	w18, w10, w3
     714:	lsr	w13, w2, w18
     718:	sub	w13, w13, #0x1
     71c:	and	w13, w13, #0xff
     720:	cmp	w13, #0xfd
     724:	b.ls	750 <bcj_x86+0x168>  // b.plast
     728:	sub	w13, w12, w3
     72c:	lsl	w13, w11, w13
     730:	sub	w13, w13, #0x1
     734:	eor	w2, w13, w2
     738:	add	w2, w17, w2
     73c:	lsr	w3, w2, w18
     740:	sub	w3, w3, #0x1
     744:	and	w3, w3, #0xff
     748:	cmp	w3, #0xfd
     74c:	b.hi	734 <bcj_x86+0x14c>  // b.pmore
     750:	and	w3, w2, #0x1ffffff
     754:	and	w2, w2, #0x1000000
     758:	neg	w2, w2
     75c:	orr	w2, w2, w3
     760:	strb	w2, [x1, x16]
     764:	lsr	w3, w2, #8
     768:	strb	w3, [x15, #1]
     76c:	lsr	w3, w2, #16
     770:	strb	w3, [x15, #2]
     774:	lsr	w2, w2, #24
     778:	strb	w2, [x15, #3]
     77c:	mov	x2, x0
     780:	mov	x0, x14
     784:	b	64c <bcj_x86+0x64>
     788:	sub	x2, x0, x2
     78c:	sub	w1, w2, #0x1
     790:	lsl	w4, w4, w1
     794:	cmp	x2, #0x4
     798:	csel	w2, w4, wzr, cc  // cc = lo, ul, last
     79c:	str	w2, [x6, #16]
     7a0:	ret
     7a4:	nop
	...

00000000000007b0 <bcj_powerpc>:
     7b0:	cmp	x2, #0x3
     7b4:	b.ls	858 <bcj_powerpc+0xa8>  // b.plast
     7b8:	mov	x8, x1
     7bc:	sub	x6, x2, #0x4
     7c0:	and	x7, x6, #0xfffffffffffffffc
     7c4:	add	x2, x1, #0x4
     7c8:	add	x7, x7, x2
     7cc:	mov	w5, #0x1                   	// #1
     7d0:	movk	w5, #0x4800, lsl #16
     7d4:	b	7e4 <bcj_powerpc+0x34>
     7d8:	add	x1, x1, #0x4
     7dc:	cmp	x1, x7
     7e0:	b.eq	84c <bcj_powerpc+0x9c>  // b.none
     7e4:	ldrb	w2, [x1, #1]
     7e8:	ldrb	w3, [x1, #2]
     7ec:	lsl	w3, w3, #8
     7f0:	orr	w2, w3, w2, lsl #16
     7f4:	ldrb	w3, [x1]
     7f8:	ldrb	w4, [x1, #3]
     7fc:	orr	w3, w4, w3, lsl #24
     800:	orr	w2, w2, w3
     804:	and	w3, w3, #0xfc000003
     808:	cmp	w3, w5
     80c:	b.ne	7d8 <bcj_powerpc+0x28>  // b.any
     810:	and	w2, w2, #0x3fffffc
     814:	sub	w3, w1, w8
     818:	ldr	w4, [x0, #12]
     81c:	add	w3, w3, w4
     820:	sub	w2, w2, w3
     824:	and	w2, w2, #0x3fffffc
     828:	orr	w2, w2, w5
     82c:	lsr	w3, w2, #24
     830:	strb	w3, [x1]
     834:	lsr	w3, w2, #16
     838:	strb	w3, [x1, #1]
     83c:	lsr	w3, w2, #8
     840:	strb	w3, [x1, #2]
     844:	strb	w2, [x1, #3]
     848:	b	7d8 <bcj_powerpc+0x28>
     84c:	and	x0, x6, #0xfffffffffffffffc
     850:	add	x0, x0, #0x4
     854:	ret
     858:	mov	x0, #0x0                   	// #0
     85c:	b	854 <bcj_powerpc+0xa4>

0000000000000860 <bcj_ia64>:
     860:	cmp	x2, #0xf
     864:	b.ls	9a4 <bcj_ia64+0x144>  // b.plast
     868:	stp	x29, x30, [sp, #-32]!
     86c:	mov	x29, sp
     870:	str	x19, [sp, #16]
     874:	mov	x13, x0
     878:	mov	x0, #0x10                  	// #16
     87c:	adrp	x12, 0 <grub_xzio_close>
     880:	sub	x11, x1, #0x10
     884:	mov	x15, #0xffff000000001fff    	// #-281474976702465
     888:	movk	x15, #0xffee, lsl #32
     88c:	mov	w14, #0x1                   	// #1
     890:	b	97c <bcj_ia64+0x11c>
     894:	add	w9, w9, #0x1
     898:	add	w8, w8, #0x29
     89c:	cmp	w8, #0x80
     8a0:	b.eq	96c <bcj_ia64+0x10c>  // b.none
     8a4:	lsr	w3, w10, w9
     8a8:	tbz	w3, #0, 894 <bcj_ia64+0x34>
     8ac:	and	w17, w8, #0x7
     8b0:	mov	x5, #0x0                   	// #0
     8b4:	mov	x3, #0x0                   	// #0
     8b8:	lsr	w7, w8, #3
     8bc:	add	x7, x7, x16
     8c0:	add	x7, x1, x7
     8c4:	ldrb	w4, [x7, x3]
     8c8:	lsl	w6, w3, #3
     8cc:	lsl	x4, x4, x6
     8d0:	orr	x5, x5, x4
     8d4:	add	x3, x3, #0x1
     8d8:	cmp	x3, #0x6
     8dc:	b.ne	8c4 <bcj_ia64+0x64>  // b.any
     8e0:	lsr	x3, x5, x17
     8e4:	ubfx	x4, x3, #37, #4
     8e8:	cmp	x4, #0x5
     8ec:	b.ne	894 <bcj_ia64+0x34>  // b.any
     8f0:	ubfx	x4, x3, #9, #3
     8f4:	tst	x3, #0xe00
     8f8:	b.ne	894 <bcj_ia64+0x34>  // b.any
     8fc:	ubfx	x19, x3, #13, #20
     900:	lsr	x6, x3, #36
     904:	ubfiz	w6, w6, #20, #1
     908:	orr	w6, w6, w19
     90c:	lsl	w6, w6, #4
     910:	ldr	w19, [x13, #12]
     914:	add	w19, w18, w19
     918:	sub	w6, w6, w19
     91c:	and	x3, x3, x15
     920:	lsr	w6, w6, #4
     924:	lsl	w19, w14, w17
     928:	sub	w19, w19, #0x1
     92c:	sxtw	x19, w19
     930:	and	x19, x19, x5
     934:	ubfiz	x30, x6, #13, #20
     938:	lsl	x5, x6, #16
     93c:	and	x5, x5, #0x1000000000
     940:	orr	x5, x30, x5
     944:	orr	x3, x5, x3
     948:	lsl	x5, x3, x17
     94c:	orr	x5, x5, x19
     950:	lsl	w3, w4, #3
     954:	lsr	x3, x5, x3
     958:	strb	w3, [x7, x4]
     95c:	add	x4, x4, #0x1
     960:	cmp	x4, #0x6
     964:	b.ne	950 <bcj_ia64+0xf0>  // b.any
     968:	b	894 <bcj_ia64+0x34>
     96c:	add	x3, x0, #0x10
     970:	cmp	x3, x2
     974:	b.hi	9ac <bcj_ia64+0x14c>  // b.pmore
     978:	mov	x0, x3
     97c:	sub	x16, x0, #0x10
     980:	ldr	x3, [x12]
     984:	add	x3, x3, #0x28
     988:	ldrb	w4, [x11, x0]
     98c:	and	w4, w4, #0x1f
     990:	ldrb	w10, [x3, w4, sxtw]
     994:	mov	w8, #0x5                   	// #5
     998:	mov	w9, #0x0                   	// #0
     99c:	sub	w18, w0, #0x10
     9a0:	b	8a4 <bcj_ia64+0x44>
     9a4:	mov	x0, #0x0                   	// #0
     9a8:	ret
     9ac:	ldr	x19, [sp, #16]
     9b0:	ldp	x29, x30, [sp], #32
     9b4:	ret
	...

00000000000009c0 <bcj_arm>:
     9c0:	mov	x5, x0
     9c4:	cmp	x2, #0x3
     9c8:	b.ls	a44 <bcj_arm+0x84>  // b.plast
     9cc:	mov	x0, #0x4                   	// #4
     9d0:	mov	w6, #0xfffffff8            	// #-8
     9d4:	b	9ec <bcj_arm+0x2c>
     9d8:	add	x3, x0, #0x4
     9dc:	add	x1, x1, #0x4
     9e0:	cmp	x3, x2
     9e4:	b.hi	a48 <bcj_arm+0x88>  // b.pmore
     9e8:	mov	x0, x3
     9ec:	ldrb	w3, [x1, #3]
     9f0:	cmp	w3, #0xeb
     9f4:	b.ne	9d8 <bcj_arm+0x18>  // b.any
     9f8:	ldrb	w3, [x1, #1]
     9fc:	ldrb	w4, [x1, #2]
     a00:	lsl	w4, w4, #16
     a04:	orr	w3, w4, w3, lsl #8
     a08:	ldrb	w4, [x1]
     a0c:	orr	w3, w3, w4
     a10:	lsl	w3, w3, #2
     a14:	sub	w4, w0, #0x4
     a18:	sub	w4, w3, w4
     a1c:	ldr	w3, [x5, #12]
     a20:	sub	w3, w6, w3
     a24:	add	w3, w3, w4
     a28:	lsr	w4, w3, #2
     a2c:	strb	w4, [x1]
     a30:	lsr	w4, w3, #10
     a34:	strb	w4, [x1, #1]
     a38:	lsr	w3, w3, #18
     a3c:	strb	w3, [x1, #2]
     a40:	b	9d8 <bcj_arm+0x18>
     a44:	mov	x0, #0x0                   	// #0
     a48:	ret

0000000000000a4c <bcj_armthumb>:
     a4c:	mov	x9, x0
     a50:	cmp	x2, #0x3
     a54:	b.ls	b00 <bcj_armthumb+0xb4>  // b.plast
     a58:	mov	x0, #0x0                   	// #0
     a5c:	mov	w10, #0xfffffffc            	// #-4
     a60:	b	a74 <bcj_armthumb+0x28>
     a64:	add	x0, x3, #0x2
     a68:	add	x3, x3, #0x6
     a6c:	cmp	x3, x2
     a70:	b.hi	b04 <bcj_armthumb+0xb8>  // b.pmore
     a74:	add	x5, x0, #0x1
     a78:	ldrb	w4, [x1, x5]
     a7c:	and	w6, w4, #0xf8
     a80:	mov	x3, x0
     a84:	cmp	w6, #0xf0
     a88:	b.ne	a64 <bcj_armthumb+0x18>  // b.any
     a8c:	add	x7, x0, #0x3
     a90:	ldrb	w6, [x1, x7]
     a94:	and	w8, w6, #0xf8
     a98:	cmp	w8, #0xf8
     a9c:	b.ne	a64 <bcj_armthumb+0x18>  // b.any
     aa0:	add	x3, x0, #0x2
     aa4:	ubfiz	w4, w4, #19, #3
     aa8:	ubfiz	w6, w6, #8, #3
     aac:	orr	w4, w4, w6
     ab0:	ldrb	w6, [x1, x0]
     ab4:	ldrb	w8, [x1, x3]
     ab8:	orr	w6, w8, w6, lsl #11
     abc:	orr	w4, w4, w6
     ac0:	lsl	w4, w4, #1
     ac4:	sub	w4, w4, w0
     ac8:	ldr	w6, [x9, #12]
     acc:	sub	w6, w10, w6
     ad0:	add	w4, w6, w4
     ad4:	ubfx	x6, x4, #20, #3
     ad8:	orr	w6, w6, #0xfffffff0
     adc:	strb	w6, [x1, x5]
     ae0:	lsr	w5, w4, #12
     ae4:	strb	w5, [x1, x0]
     ae8:	lsr	w0, w4, #9
     aec:	orr	w0, w0, #0xfffffff8
     af0:	strb	w0, [x1, x7]
     af4:	lsr	w4, w4, #1
     af8:	strb	w4, [x1, x3]
     afc:	b	a64 <bcj_armthumb+0x18>
     b00:	mov	x0, #0x0                   	// #0
     b04:	ret

0000000000000b08 <bcj_sparc>:
     b08:	mov	x7, x0
     b0c:	cmp	x2, #0x3
     b10:	b.ls	bb4 <bcj_sparc+0xac>  // b.plast
     b14:	mov	x0, #0x4                   	// #4
     b18:	mov	w6, #0x1ff                 	// #511
     b1c:	mov	w8, #0x40000000            	// #1073741824
     b20:	b	b38 <bcj_sparc+0x30>
     b24:	add	x3, x0, #0x4
     b28:	add	x1, x1, #0x4
     b2c:	cmp	x3, x2
     b30:	b.hi	bb8 <bcj_sparc+0xb0>  // b.pmore
     b34:	mov	x0, x3
     b38:	ldrb	w3, [x1, #1]
     b3c:	ldrb	w4, [x1, #2]
     b40:	lsl	w4, w4, #8
     b44:	orr	w3, w4, w3, lsl #16
     b48:	ldrb	w4, [x1]
     b4c:	ldrb	w5, [x1, #3]
     b50:	orr	w4, w5, w4, lsl #24
     b54:	orr	w3, w3, w4
     b58:	lsr	w4, w3, #22
     b5c:	cmp	w4, #0x100
     b60:	ccmp	w4, w6, #0x4, ne  // ne = any
     b64:	b.ne	b24 <bcj_sparc+0x1c>  // b.any
     b68:	lsl	w3, w3, #2
     b6c:	sub	w4, w0, #0x4
     b70:	ldr	w5, [x7, #12]
     b74:	add	w4, w4, w5
     b78:	sub	w3, w3, w4
     b7c:	lsr	w3, w3, #2
     b80:	and	w4, w3, #0x400000
     b84:	sub	w4, w8, w4
     b88:	and	w3, w3, #0x3fffff
     b8c:	orr	w3, w4, w3
     b90:	orr	w3, w3, #0x40000000
     b94:	lsr	w4, w3, #24
     b98:	strb	w4, [x1]
     b9c:	lsr	w4, w3, #16
     ba0:	strb	w4, [x1, #1]
     ba4:	lsr	w4, w3, #8
     ba8:	strb	w4, [x1, #2]
     bac:	strb	w3, [x1, #3]
     bb0:	b	b24 <bcj_sparc+0x1c>
     bb4:	mov	x0, #0x0                   	// #0
     bb8:	ret

0000000000000bbc <bcj_apply>:
     bbc:	stp	x29, x30, [sp, #-32]!
     bc0:	mov	x29, sp
     bc4:	stp	x19, x20, [sp, #16]
     bc8:	mov	x19, x0
     bcc:	mov	x20, x2
     bd0:	ldr	x2, [x2]
     bd4:	add	x1, x1, x2
     bd8:	sub	x2, x3, x2
     bdc:	ldr	w4, [x0]
     be0:	cmp	w4, #0x7
     be4:	b.eq	c64 <bcj_apply+0xa8>  // b.none
     be8:	b.hi	c3c <bcj_apply+0x80>  // b.pmore
     bec:	cmp	w4, #0x5
     bf0:	b.eq	c5c <bcj_apply+0xa0>  // b.none
     bf4:	cmp	w4, #0x6
     bf8:	b.ne	c04 <bcj_apply+0x48>  // b.any
     bfc:	bl	860 <bcj_ia64>
     c00:	b	c18 <bcj_apply+0x5c>
     c04:	mov	x0, #0x0                   	// #0
     c08:	cmp	w4, #0x4
     c0c:	b.ne	c18 <bcj_apply+0x5c>  // b.any
     c10:	mov	x0, x19
     c14:	bl	5e8 <bcj_x86>
     c18:	ldr	x1, [x20]
     c1c:	add	x1, x1, x0
     c20:	str	x1, [x20]
     c24:	ldr	w1, [x19, #12]
     c28:	add	w0, w1, w0
     c2c:	str	w0, [x19, #12]
     c30:	ldp	x19, x20, [sp, #16]
     c34:	ldp	x29, x30, [sp], #32
     c38:	ret
     c3c:	cmp	w4, #0x8
     c40:	b.eq	c6c <bcj_apply+0xb0>  // b.none
     c44:	mov	x0, #0x0                   	// #0
     c48:	cmp	w4, #0x9
     c4c:	b.ne	c18 <bcj_apply+0x5c>  // b.any
     c50:	mov	x0, x19
     c54:	bl	b08 <bcj_sparc>
     c58:	b	c18 <bcj_apply+0x5c>
     c5c:	bl	7b0 <bcj_powerpc>
     c60:	b	c18 <bcj_apply+0x5c>
     c64:	bl	9c0 <bcj_arm>
     c68:	b	c18 <bcj_apply+0x5c>
     c6c:	bl	a4c <bcj_armthumb>
     c70:	b	c18 <bcj_apply+0x5c>

0000000000000c74 <bcj_flush>:
     c74:	stp	x29, x30, [sp, #-48]!
     c78:	mov	x29, sp
     c7c:	stp	x19, x20, [sp, #16]
     c80:	stp	x21, x22, [sp, #32]
     c84:	mov	x21, x0
     c88:	mov	x20, x1
     c8c:	ldr	x0, [x1, #32]
     c90:	ldr	x19, [x1, #40]
     c94:	sub	x19, x19, x0
     c98:	ldr	x1, [x21, #48]
     c9c:	cmp	x19, x1
     ca0:	csel	x19, x19, x1, ls  // ls = plast
     ca4:	add	x22, x21, #0x40
     ca8:	ldr	x3, [x20, #24]
     cac:	mov	x2, x19
     cb0:	mov	x1, x22
     cb4:	add	x0, x3, x0
     cb8:	bl	0 <grub_memmove>
     cbc:	ldr	x0, [x20, #32]
     cc0:	add	x0, x0, x19
     cc4:	str	x0, [x20, #32]
     cc8:	ldr	x0, [x21, #48]
     ccc:	sub	x0, x0, x19
     cd0:	str	x0, [x21, #48]
     cd4:	ldr	x2, [x21, #56]
     cd8:	sub	x2, x2, x19
     cdc:	str	x2, [x21, #56]
     ce0:	add	x1, x22, x19
     ce4:	mov	x0, x22
     ce8:	bl	0 <grub_memmove>
     cec:	ldp	x19, x20, [sp, #16]
     cf0:	ldp	x21, x22, [sp, #32]
     cf4:	ldp	x29, x30, [sp], #48
     cf8:	ret

0000000000000cfc <xz_dec_bcj_run>:
     cfc:	stp	x29, x30, [sp, #-64]!
     d00:	mov	x29, sp
     d04:	stp	x19, x20, [sp, #16]
     d08:	stp	x21, x22, [sp, #32]
     d0c:	mov	x19, x0
     d10:	mov	x21, x1
     d14:	mov	x20, x2
     d18:	ldr	x0, [x0, #48]
     d1c:	cbnz	x0, d54 <xz_dec_bcj_run+0x58>
     d20:	ldr	x2, [x19, #56]
     d24:	ldr	x0, [x20, #32]
     d28:	ldr	x3, [x20, #40]
     d2c:	sub	x3, x3, x0
     d30:	cmp	x2, x3
     d34:	b.cc	d7c <xz_dec_bcj_run+0x80>  // b.lo, b.ul, b.last
     d38:	ldr	x0, [x19, #56]
     d3c:	cbnz	x0, e20 <xz_dec_bcj_run+0x124>
     d40:	ldr	w0, [x19, #4]
     d44:	ldp	x19, x20, [sp, #16]
     d48:	ldp	x21, x22, [sp, #32]
     d4c:	ldp	x29, x30, [sp], #64
     d50:	ret
     d54:	mov	x1, x2
     d58:	mov	x0, x19
     d5c:	bl	c74 <bcj_flush>
     d60:	ldr	x1, [x19, #48]
     d64:	mov	w0, #0x0                   	// #0
     d68:	cbnz	x1, d44 <xz_dec_bcj_run+0x48>
     d6c:	ldr	w0, [x19, #4]
     d70:	cmp	w0, #0x1
     d74:	b.ne	d20 <xz_dec_bcj_run+0x24>  // b.any
     d78:	b	d44 <xz_dec_bcj_run+0x48>
     d7c:	str	x0, [sp, #56]
     d80:	add	x22, x19, #0x40
     d84:	ldr	x3, [x20, #24]
     d88:	mov	x1, x22
     d8c:	add	x0, x3, x0
     d90:	bl	0 <grub_memmove>
     d94:	ldr	x0, [x20, #32]
     d98:	ldr	x1, [x19, #56]
     d9c:	add	x0, x0, x1
     da0:	str	x0, [x20, #32]
     da4:	mov	x1, x20
     da8:	mov	x0, x21
     dac:	bl	1bcc <xz_dec_lzma2_run>
     db0:	str	w0, [x19, #4]
     db4:	cmp	w0, #0x1
     db8:	b.eq	dc8 <xz_dec_bcj_run+0xcc>  // b.none
     dbc:	cbnz	w0, d44 <xz_dec_bcj_run+0x48>
     dc0:	ldr	w1, [x19, #8]
     dc4:	cbnz	w1, d44 <xz_dec_bcj_run+0x48>
     dc8:	ldr	x3, [x20, #32]
     dcc:	add	x2, sp, #0x38
     dd0:	ldr	x1, [x20, #24]
     dd4:	mov	x0, x19
     dd8:	bl	bbc <bcj_apply>
     ddc:	ldr	w0, [x19, #4]
     de0:	cmp	w0, #0x1
     de4:	b.eq	d44 <xz_dec_bcj_run+0x48>  // b.none
     de8:	ldr	x1, [x20, #32]
     dec:	ldr	x0, [sp, #56]
     df0:	sub	x2, x1, x0
     df4:	str	x2, [x19, #56]
     df8:	ldr	x2, [x20, #32]
     dfc:	add	x0, x0, x2
     e00:	sub	x0, x0, x1
     e04:	str	x0, [x20, #32]
     e08:	ldr	x1, [x20, #24]
     e0c:	ldr	x2, [x19, #56]
     e10:	add	x1, x1, x0
     e14:	mov	x0, x22
     e18:	bl	0 <grub_memmove>
     e1c:	b	d38 <xz_dec_bcj_run+0x3c>
     e20:	ldr	x0, [x20, #24]
     e24:	str	x0, [x19, #24]
     e28:	ldr	x0, [x20, #32]
     e2c:	str	x0, [x19, #32]
     e30:	ldr	x0, [x20, #40]
     e34:	str	x0, [x19, #40]
     e38:	add	x22, x19, #0x40
     e3c:	str	x22, [x20, #24]
     e40:	ldr	x0, [x19, #56]
     e44:	str	x0, [x20, #32]
     e48:	mov	x0, #0x10                  	// #16
     e4c:	str	x0, [x20, #40]
     e50:	mov	x1, x20
     e54:	mov	x0, x21
     e58:	bl	1bcc <xz_dec_lzma2_run>
     e5c:	str	w0, [x19, #4]
     e60:	ldr	x0, [x20, #32]
     e64:	str	x0, [x19, #56]
     e68:	ldr	x0, [x19, #24]
     e6c:	str	x0, [x20, #24]
     e70:	ldr	x0, [x19, #32]
     e74:	str	x0, [x20, #32]
     e78:	ldr	x0, [x19, #40]
     e7c:	str	x0, [x20, #40]
     e80:	ldr	w0, [x19, #4]
     e84:	cmp	w0, #0x1
     e88:	b.hi	d44 <xz_dec_bcj_run+0x48>  // b.pmore
     e8c:	ldr	x3, [x19, #56]
     e90:	add	x2, x19, #0x30
     e94:	mov	x1, x22
     e98:	mov	x0, x19
     e9c:	bl	bbc <bcj_apply>
     ea0:	ldr	w0, [x19, #4]
     ea4:	cmp	w0, #0x1
     ea8:	b.eq	ec8 <xz_dec_bcj_run+0x1cc>  // b.none
     eac:	mov	x1, x20
     eb0:	mov	x0, x19
     eb4:	bl	c74 <bcj_flush>
     eb8:	ldr	x1, [x19, #48]
     ebc:	mov	w0, #0x0                   	// #0
     ec0:	cbz	x1, d40 <xz_dec_bcj_run+0x44>
     ec4:	b	d44 <xz_dec_bcj_run+0x48>
     ec8:	ldr	x0, [x19, #56]
     ecc:	str	x0, [x19, #48]
     ed0:	b	eac <xz_dec_bcj_run+0x1b0>

0000000000000ed4 <xz_dec_bcj_create>:
     ed4:	stp	x29, x30, [sp, #-32]!
     ed8:	mov	x29, sp
     edc:	str	x19, [sp, #16]
     ee0:	mov	w19, w0
     ee4:	mov	x0, #0x50                  	// #80
     ee8:	bl	0 <grub_malloc>
     eec:	cbz	x0, ef4 <xz_dec_bcj_create+0x20>
     ef0:	str	w19, [x0, #8]
     ef4:	ldr	x19, [sp, #16]
     ef8:	ldp	x29, x30, [sp], #32
     efc:	ret

0000000000000f00 <xz_dec_bcj_reset>:
     f00:	and	w1, w1, #0xff
     f04:	sub	w2, w1, #0x4
     f08:	cmp	w2, #0x5
     f0c:	b.hi	f30 <xz_dec_bcj_reset+0x30>  // b.pmore
     f10:	str	w1, [x0]
     f14:	str	wzr, [x0, #4]
     f18:	str	wzr, [x0, #12]
     f1c:	str	wzr, [x0, #16]
     f20:	str	xzr, [x0, #48]
     f24:	str	xzr, [x0, #56]
     f28:	mov	w0, #0x0                   	// #0
     f2c:	ret
     f30:	mov	w0, #0x4                   	// #4
     f34:	b	f2c <xz_dec_bcj_reset+0x2c>

0000000000000f38 <dict_repeat>:
     f38:	mov	x3, x0
     f3c:	mov	w5, w2
     f40:	ldr	x0, [x0, #24]
     f44:	cmp	x0, w2, uxtw
     f48:	b.ls	ff0 <dict_repeat+0xb8>  // b.plast
     f4c:	ldr	w4, [x3, #48]
     f50:	mov	w0, #0x0                   	// #0
     f54:	cmp	w4, w2
     f58:	b.ls	ff4 <dict_repeat+0xbc>  // b.plast
     f5c:	ldr	w4, [x1]
     f60:	ldr	x0, [x3, #32]
     f64:	ldr	x2, [x3, #16]
     f68:	sub	x0, x0, x2
     f6c:	mov	w2, w4
     f70:	cmp	x0, x2
     f74:	csel	x0, x0, x2, ls  // ls = plast
     f78:	mov	w2, w0
     f7c:	sub	w0, w4, w0
     f80:	str	w0, [x1]
     f84:	ldr	x1, [x3, #16]
     f88:	sub	x0, x1, #0x1
     f8c:	sub	x0, x0, x5
     f90:	cmp	x5, x1
     f94:	b.cc	fa0 <dict_repeat+0x68>  // b.lo, b.ul, b.last
     f98:	ldr	x1, [x3, #40]
     f9c:	add	x0, x0, x1
     fa0:	mov	x7, #0x0                   	// #0
     fa4:	ldr	x5, [x3]
     fa8:	add	x1, x0, #0x1
     fac:	ldr	x4, [x3, #16]
     fb0:	add	x6, x4, #0x1
     fb4:	str	x6, [x3, #16]
     fb8:	ldrb	w0, [x5, x0]
     fbc:	strb	w0, [x5, x4]
     fc0:	ldr	x0, [x3, #40]
     fc4:	cmp	x0, x1
     fc8:	csel	x0, x1, x7, ne  // ne = any
     fcc:	subs	w2, w2, #0x1
     fd0:	b.ne	fa4 <dict_repeat+0x6c>  // b.any
     fd4:	ldr	x1, [x3, #16]
     fd8:	ldr	x2, [x3, #24]
     fdc:	mov	w0, #0x1                   	// #1
     fe0:	cmp	x2, x1
     fe4:	b.cs	ff4 <dict_repeat+0xbc>  // b.hs, b.nlast
     fe8:	str	x1, [x3, #24]
     fec:	b	ff4 <dict_repeat+0xbc>
     ff0:	mov	w0, #0x0                   	// #0
     ff4:	ret

0000000000000ff8 <lzma_len>:
     ff8:	ldr	w3, [x0, #152]
     ffc:	mov	w4, #0xffffff              	// #16777215
    1000:	cmp	w3, w4
    1004:	b.hi	1030 <lzma_len+0x38>  // b.pmore
    1008:	lsl	w3, w3, #8
    100c:	str	w3, [x0, #152]
    1010:	ldr	w3, [x0, #156]
    1014:	ldr	x6, [x0, #168]
    1018:	ldr	x5, [x0, #176]
    101c:	add	x7, x5, #0x1
    1020:	str	x7, [x0, #176]
    1024:	ldrb	w5, [x6, x5]
    1028:	add	w3, w5, w3, lsl #8
    102c:	str	w3, [x0, #156]
    1030:	ldr	w5, [x0, #152]
    1034:	lsr	w3, w5, #11
    1038:	ldrh	w4, [x1]
    103c:	mul	w3, w3, w4
    1040:	ldr	w4, [x0, #156]
    1044:	cmp	w3, w4
    1048:	b.ls	108c <lzma_len+0x94>  // b.plast
    104c:	str	w3, [x0, #152]
    1050:	ldrh	w4, [x1]
    1054:	mov	w3, #0x800                 	// #2048
    1058:	sub	w3, w3, w4
    105c:	add	w3, w4, w3, asr #5
    1060:	strh	w3, [x1]
    1064:	ubfiz	x2, x2, #4, #32
    1068:	add	x2, x2, #0x4
    106c:	add	x6, x1, x2
    1070:	mov	w1, #0x2                   	// #2
    1074:	str	w1, [x0, #224]
    1078:	mov	w7, #0x8                   	// #8
    107c:	mov	w2, #0x1                   	// #1
    1080:	mov	w8, #0xffffff              	// #16777215
    1084:	mov	w11, #0x800                 	// #2048
    1088:	b	1180 <lzma_len+0x188>
    108c:	sub	w5, w5, w3
    1090:	str	w5, [x0, #152]
    1094:	sub	w3, w4, w3
    1098:	str	w3, [x0, #156]
    109c:	ldrh	w3, [x1]
    10a0:	sub	w3, w3, w3, lsr #5
    10a4:	strh	w3, [x1]
    10a8:	ldr	w3, [x0, #152]
    10ac:	mov	w4, #0xffffff              	// #16777215
    10b0:	cmp	w3, w4
    10b4:	b.hi	10e0 <lzma_len+0xe8>  // b.pmore
    10b8:	lsl	w3, w3, #8
    10bc:	str	w3, [x0, #152]
    10c0:	ldr	w3, [x0, #156]
    10c4:	ldr	x6, [x0, #168]
    10c8:	ldr	x5, [x0, #176]
    10cc:	add	x7, x5, #0x1
    10d0:	str	x7, [x0, #176]
    10d4:	ldrb	w5, [x6, x5]
    10d8:	add	w3, w5, w3, lsl #8
    10dc:	str	w3, [x0, #156]
    10e0:	ldr	w5, [x0, #152]
    10e4:	lsr	w3, w5, #11
    10e8:	ldrh	w4, [x1, #2]
    10ec:	mul	w3, w3, w4
    10f0:	ldr	w4, [x0, #156]
    10f4:	cmp	w3, w4
    10f8:	b.ls	1130 <lzma_len+0x138>  // b.plast
    10fc:	str	w3, [x0, #152]
    1100:	ldrh	w4, [x1, #2]
    1104:	mov	w3, #0x800                 	// #2048
    1108:	sub	w3, w3, w4
    110c:	add	w3, w4, w3, asr #5
    1110:	strh	w3, [x1, #2]
    1114:	ubfiz	x2, x2, #4, #32
    1118:	add	x2, x2, #0x104
    111c:	add	x6, x1, x2
    1120:	mov	w1, #0xa                   	// #10
    1124:	str	w1, [x0, #224]
    1128:	mov	w7, #0x8                   	// #8
    112c:	b	107c <lzma_len+0x84>
    1130:	sub	w5, w5, w3
    1134:	str	w5, [x0, #152]
    1138:	sub	w3, w4, w3
    113c:	str	w3, [x0, #156]
    1140:	ldrh	w2, [x1, #2]
    1144:	sub	w2, w2, w2, lsr #5
    1148:	strh	w2, [x1, #2]
    114c:	add	x6, x1, #0x204
    1150:	mov	w1, #0x12                  	// #18
    1154:	str	w1, [x0, #224]
    1158:	mov	w7, #0x100                 	// #256
    115c:	b	107c <lzma_len+0x84>
    1160:	str	w1, [x0, #152]
    1164:	ldrh	w4, [x3]
    1168:	sub	w1, w11, w4
    116c:	add	w1, w4, w1, asr #5
    1170:	strh	w1, [x3]
    1174:	lsl	w2, w2, #1
    1178:	cmp	w7, w2
    117c:	b.ls	11fc <lzma_len+0x204>  // b.plast
    1180:	add	x3, x6, w2, uxtw #1
    1184:	ldr	w1, [x0, #152]
    1188:	cmp	w1, w8
    118c:	b.hi	11b8 <lzma_len+0x1c0>  // b.pmore
    1190:	lsl	w1, w1, #8
    1194:	str	w1, [x0, #152]
    1198:	ldr	w1, [x0, #156]
    119c:	ldr	x9, [x0, #168]
    11a0:	ldr	x5, [x0, #176]
    11a4:	add	x10, x5, #0x1
    11a8:	str	x10, [x0, #176]
    11ac:	ldrb	w5, [x9, x5]
    11b0:	add	w1, w5, w1, lsl #8
    11b4:	str	w1, [x0, #156]
    11b8:	ldr	w5, [x0, #152]
    11bc:	lsr	w1, w5, #11
    11c0:	ldrh	w4, [x3]
    11c4:	mul	w1, w1, w4
    11c8:	ldr	w4, [x0, #156]
    11cc:	cmp	w1, w4
    11d0:	b.hi	1160 <lzma_len+0x168>  // b.pmore
    11d4:	sub	w5, w5, w1
    11d8:	str	w5, [x0, #152]
    11dc:	sub	w1, w4, w1
    11e0:	str	w1, [x0, #156]
    11e4:	ldrh	w1, [x3]
    11e8:	sub	w1, w1, w1, lsr #5
    11ec:	strh	w1, [x3]
    11f0:	lsl	w2, w2, #1
    11f4:	add	w2, w2, #0x1
    11f8:	b	1178 <lzma_len+0x180>
    11fc:	ldr	w1, [x0, #224]
    1200:	sub	w7, w1, w7
    1204:	add	w2, w7, w2
    1208:	str	w2, [x0, #224]
    120c:	ret

0000000000001210 <lzma_main>:
    1210:	stp	x29, x30, [sp, #-48]!
    1214:	mov	x29, sp
    1218:	stp	x19, x20, [sp, #16]
    121c:	mov	x19, x0
    1220:	ldr	x6, [x0, #112]
    1224:	ldr	x0, [x0, #128]
    1228:	cmp	x6, x0
    122c:	b.cs	1b78 <lzma_main+0x968>  // b.hs, b.nlast
    1230:	stp	x21, x22, [sp, #32]
    1234:	ldr	w0, [x19, #224]
    1238:	cbz	w0, 1260 <lzma_main+0x50>
    123c:	add	x20, x19, #0x60
    1240:	ldr	w2, [x19, #208]
    1244:	add	x1, x19, #0xe0
    1248:	mov	x0, x20
    124c:	bl	f38 <dict_repeat>
    1250:	ldr	x6, [x19, #112]
    1254:	ldr	x0, [x19, #128]
    1258:	cmp	x6, x0
    125c:	b.cs	1270 <lzma_main+0x60>  // b.hs, b.nlast
    1260:	mov	w20, #0xffffff              	// #16777215
    1264:	mov	w21, #0x800                 	// #2048
    1268:	mov	w22, #0x1                   	// #1
    126c:	b	1978 <lzma_main+0x768>
    1270:	ldp	x21, x22, [sp, #32]
    1274:	b	1b78 <lzma_main+0x968>
    1278:	ldr	x1, [x19, #136]
    127c:	sub	x1, x1, #0x1
    1280:	b	1a08 <lzma_main+0x7f8>
    1284:	sub	w5, w5, w2
    1288:	str	w5, [x19, #152]
    128c:	sub	w2, w4, w2
    1290:	str	w2, [x19, #156]
    1294:	ldrh	w2, [x1, x3]
    1298:	sub	w2, w2, w2, lsr #5
    129c:	strh	w2, [x1, x3]
    12a0:	lsl	w0, w0, #1
    12a4:	add	w0, w0, #0x1
    12a8:	cmp	w0, #0xff
    12ac:	b.hi	1410 <lzma_main+0x200>  // b.pmore
    12b0:	ubfiz	x3, x0, #1, #32
    12b4:	ldr	w4, [x19, #152]
    12b8:	cmp	w4, w20
    12bc:	b.hi	12e8 <lzma_main+0xd8>  // b.pmore
    12c0:	lsl	w4, w4, #8
    12c4:	str	w4, [x19, #152]
    12c8:	ldr	w4, [x19, #156]
    12cc:	ldr	x6, [x19, #168]
    12d0:	ldr	x5, [x19, #176]
    12d4:	add	x7, x5, #0x1
    12d8:	str	x7, [x19, #176]
    12dc:	ldrb	w5, [x6, x5]
    12e0:	add	w4, w5, w4, lsl #8
    12e4:	str	w4, [x19, #156]
    12e8:	ldr	w5, [x19, #152]
    12ec:	lsr	w2, w5, #11
    12f0:	ldrh	w4, [x1, x3]
    12f4:	mul	w2, w2, w4
    12f8:	ldr	w4, [x19, #156]
    12fc:	cmp	w2, w4
    1300:	b.ls	1284 <lzma_main+0x74>  // b.plast
    1304:	str	w2, [x19, #152]
    1308:	ldrh	w4, [x1, x3]
    130c:	sub	w2, w21, w4
    1310:	add	w2, w4, w2, asr #5
    1314:	strh	w2, [x1, x3]
    1318:	lsl	w0, w0, #1
    131c:	b	12a8 <lzma_main+0x98>
    1320:	ldr	w2, [x19, #208]
    1324:	mvn	x0, x2
    1328:	add	x0, x0, x6
    132c:	cmp	x2, x6
    1330:	b.cc	133c <lzma_main+0x12c>  // b.lo, b.ul, b.last
    1334:	ldr	x2, [x19, #136]
    1338:	add	x0, x0, x2
    133c:	mov	w8, #0x0                   	// #0
    1340:	cbz	x4, 134c <lzma_main+0x13c>
    1344:	ldr	x2, [x19, #96]
    1348:	ldrb	w8, [x2, x0]
    134c:	lsl	w8, w8, #1
    1350:	mov	w4, #0x100                 	// #256
    1354:	mov	w0, #0x1                   	// #1
    1358:	b	138c <lzma_main+0x17c>
    135c:	sub	w6, w6, w3
    1360:	str	w6, [x19, #152]
    1364:	sub	w3, w5, w3
    1368:	str	w3, [x19, #156]
    136c:	ldrh	w3, [x1, x2]
    1370:	sub	w3, w3, w3, lsr #5
    1374:	strh	w3, [x1, x2]
    1378:	lsl	w0, w0, #1
    137c:	add	w0, w0, #0x1
    1380:	mov	w4, w7
    1384:	cmp	w0, #0xff
    1388:	b.hi	1410 <lzma_main+0x200>  // b.pmore
    138c:	and	w7, w8, w4
    1390:	lsl	w8, w8, #1
    1394:	add	w2, w4, w0
    1398:	add	w2, w2, w7
    139c:	lsl	x2, x2, #1
    13a0:	ldr	w5, [x19, #152]
    13a4:	cmp	w5, w20
    13a8:	b.hi	13d4 <lzma_main+0x1c4>  // b.pmore
    13ac:	lsl	w5, w5, #8
    13b0:	str	w5, [x19, #152]
    13b4:	ldr	w5, [x19, #156]
    13b8:	ldr	x9, [x19, #168]
    13bc:	ldr	x6, [x19, #176]
    13c0:	add	x10, x6, #0x1
    13c4:	str	x10, [x19, #176]
    13c8:	ldrb	w6, [x9, x6]
    13cc:	add	w5, w6, w5, lsl #8
    13d0:	str	w5, [x19, #156]
    13d4:	ldr	w6, [x19, #152]
    13d8:	lsr	w3, w6, #11
    13dc:	ldrh	w5, [x1, x2]
    13e0:	mul	w3, w3, w5
    13e4:	ldr	w5, [x19, #156]
    13e8:	cmp	w3, w5
    13ec:	b.ls	135c <lzma_main+0x14c>  // b.plast
    13f0:	str	w3, [x19, #152]
    13f4:	ldrh	w5, [x1, x2]
    13f8:	sub	w3, w21, w5
    13fc:	add	w3, w5, w3, asr #5
    1400:	strh	w3, [x1, x2]
    1404:	lsl	w0, w0, #1
    1408:	bic	w4, w4, w7
    140c:	b	1384 <lzma_main+0x174>
    1410:	ldr	x3, [x19, #96]
    1414:	ldr	x2, [x19, #112]
    1418:	add	x4, x2, #0x1
    141c:	str	x4, [x19, #112]
    1420:	strb	w0, [x3, x2]
    1424:	ldr	x0, [x19, #112]
    1428:	ldr	x1, [x19, #120]
    142c:	cmp	x1, x0
    1430:	b.cs	1438 <lzma_main+0x228>  // b.hs, b.nlast
    1434:	str	x0, [x19, #120]
    1438:	ldr	w0, [x19, #204]
    143c:	cmp	w0, #0x3
    1440:	b.hi	144c <lzma_main+0x23c>  // b.pmore
    1444:	str	wzr, [x19, #204]
    1448:	b	1968 <lzma_main+0x758>
    144c:	sub	w2, w0, #0x6
    1450:	sub	w1, w0, #0x3
    1454:	cmp	w0, #0xa
    1458:	csel	w0, w1, w2, cc  // cc = lo, ul, last
    145c:	str	w0, [x19, #204]
    1460:	b	1968 <lzma_main+0x758>
    1464:	sub	w4, w4, w1
    1468:	str	w4, [x19, #152]
    146c:	sub	w1, w5, w1
    1470:	str	w1, [x19, #156]
    1474:	sub	w3, w3, w3, lsr #5
    1478:	strh	w3, [x0, #228]
    147c:	cmp	w4, w20
    1480:	b.hi	14a8 <lzma_main+0x298>  // b.pmore
    1484:	lsl	w4, w4, #8
    1488:	str	w4, [x19, #152]
    148c:	ldr	x5, [x19, #168]
    1490:	ldr	x4, [x19, #176]
    1494:	add	x6, x4, #0x1
    1498:	str	x6, [x19, #176]
    149c:	ldrb	w5, [x5, x4]
    14a0:	add	w1, w5, w1, lsl #8
    14a4:	str	w1, [x19, #156]
    14a8:	ldr	w5, [x19, #152]
    14ac:	add	x1, x19, x8, lsl #1
    14b0:	ldrh	w4, [x1, #612]
    14b4:	lsr	w3, w5, #11
    14b8:	mul	w3, w3, w4
    14bc:	ldr	w6, [x19, #156]
    14c0:	cmp	w3, w6
    14c4:	b.ls	1818 <lzma_main+0x608>  // b.plast
    14c8:	str	w3, [x19, #152]
    14cc:	sub	w0, w21, w4
    14d0:	add	w4, w4, w0, asr #5
    14d4:	strh	w4, [x1, #612]
    14d8:	cmp	w7, #0x7
    14dc:	mov	w0, #0x7                   	// #7
    14e0:	mov	w1, #0xa                   	// #10
    14e4:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    14e8:	str	w0, [x19, #204]
    14ec:	ldr	w0, [x19, #216]
    14f0:	str	w0, [x19, #220]
    14f4:	ldr	w0, [x19, #212]
    14f8:	str	w0, [x19, #216]
    14fc:	ldr	w0, [x19, #208]
    1500:	str	w0, [x19, #212]
    1504:	add	x1, x19, #0x748
    1508:	mov	x0, x19
    150c:	bl	ff8 <lzma_len>
    1510:	ldr	w0, [x19, #224]
    1514:	cmp	w0, #0x5
    1518:	mov	w5, #0x5                   	// #5
    151c:	csel	w5, w0, w5, ls  // ls = plast
    1520:	sub	w5, w5, #0x2
    1524:	lsl	x5, x5, #7
    1528:	add	x5, x5, #0x444
    152c:	mov	w0, #0x1                   	// #1
    1530:	b	1560 <lzma_main+0x350>
    1534:	sub	w4, w4, w1
    1538:	str	w4, [x19, #152]
    153c:	sub	w1, w3, w1
    1540:	str	w1, [x19, #156]
    1544:	ldrh	w1, [x19, x2]
    1548:	sub	w1, w1, w1, lsr #5
    154c:	strh	w1, [x19, x2]
    1550:	lsl	w0, w0, #1
    1554:	add	w0, w0, #0x1
    1558:	cmp	w0, #0x3f
    155c:	b.hi	15d0 <lzma_main+0x3c0>  // b.pmore
    1560:	add	x2, x5, w0, uxtw #1
    1564:	ldr	w3, [x19, #152]
    1568:	cmp	w3, w20
    156c:	b.hi	1598 <lzma_main+0x388>  // b.pmore
    1570:	lsl	w3, w3, #8
    1574:	str	w3, [x19, #152]
    1578:	ldr	w3, [x19, #156]
    157c:	ldr	x6, [x19, #168]
    1580:	ldr	x4, [x19, #176]
    1584:	add	x7, x4, #0x1
    1588:	str	x7, [x19, #176]
    158c:	ldrb	w4, [x6, x4]
    1590:	add	w3, w4, w3, lsl #8
    1594:	str	w3, [x19, #156]
    1598:	ldr	w4, [x19, #152]
    159c:	lsr	w1, w4, #11
    15a0:	ldrh	w3, [x19, x2]
    15a4:	mul	w1, w1, w3
    15a8:	ldr	w3, [x19, #156]
    15ac:	cmp	w1, w3
    15b0:	b.ls	1534 <lzma_main+0x324>  // b.plast
    15b4:	str	w1, [x19, #152]
    15b8:	ldrh	w3, [x19, x2]
    15bc:	sub	w1, w21, w3
    15c0:	add	w1, w3, w1, asr #5
    15c4:	strh	w1, [x19, x2]
    15c8:	lsl	w0, w0, #1
    15cc:	b	1558 <lzma_main+0x348>
    15d0:	sub	w0, w0, #0x40
    15d4:	cmp	w0, #0x3
    15d8:	b.hi	15e4 <lzma_main+0x3d4>  // b.pmore
    15dc:	str	w0, [x19, #208]
    15e0:	b	1954 <lzma_main+0x744>
    15e4:	lsr	w3, w0, #1
    15e8:	and	w1, w0, #0x1
    15ec:	add	w1, w1, #0x2
    15f0:	cmp	w0, #0xd
    15f4:	b.hi	16d4 <lzma_main+0x4c4>  // b.pmore
    15f8:	sub	w3, w3, #0x1
    15fc:	lsl	w1, w1, w3
    1600:	str	w1, [x19, #208]
    1604:	add	x5, x19, #0x644
    1608:	mov	w1, w1
    160c:	sub	x0, x1, w0, uxtw
    1610:	lsl	x0, x0, #1
    1614:	sub	x8, x0, #0x2
    1618:	mov	w7, #0x0                   	// #0
    161c:	mov	w6, #0x1                   	// #1
    1620:	b	1664 <lzma_main+0x454>
    1624:	sub	w2, w2, w0
    1628:	str	w2, [x19, #152]
    162c:	sub	w0, w1, w0
    1630:	str	w0, [x19, #156]
    1634:	ldrh	w0, [x5, x4]
    1638:	sub	w0, w0, w0, lsr #5
    163c:	strh	w0, [x5, x4]
    1640:	lsl	w6, w6, #1
    1644:	add	w6, w6, #0x1
    1648:	lsl	w0, w22, w7
    164c:	ldr	w1, [x19, #208]
    1650:	add	w0, w1, w0
    1654:	str	w0, [x19, #208]
    1658:	add	w7, w7, #0x1
    165c:	cmp	w3, w7
    1660:	b.eq	1954 <lzma_main+0x744>  // b.none
    1664:	add	x4, x8, w6, uxtw #1
    1668:	ldr	w0, [x19, #152]
    166c:	cmp	w0, w20
    1670:	b.hi	169c <lzma_main+0x48c>  // b.pmore
    1674:	lsl	w0, w0, #8
    1678:	str	w0, [x19, #152]
    167c:	ldr	w0, [x19, #156]
    1680:	ldr	x9, [x19, #168]
    1684:	ldr	x2, [x19, #176]
    1688:	add	x10, x2, #0x1
    168c:	str	x10, [x19, #176]
    1690:	ldrb	w2, [x9, x2]
    1694:	add	w0, w2, w0, lsl #8
    1698:	str	w0, [x19, #156]
    169c:	ldr	w2, [x19, #152]
    16a0:	lsr	w0, w2, #11
    16a4:	ldrh	w1, [x5, x4]
    16a8:	mul	w0, w0, w1
    16ac:	ldr	w1, [x19, #156]
    16b0:	cmp	w0, w1
    16b4:	b.ls	1624 <lzma_main+0x414>  // b.plast
    16b8:	str	w0, [x19, #152]
    16bc:	ldrh	w1, [x5, x4]
    16c0:	sub	w0, w21, w1
    16c4:	add	w0, w1, w0, asr #5
    16c8:	strh	w0, [x5, x4]
    16cc:	lsl	w6, w6, #1
    16d0:	b	1658 <lzma_main+0x448>
    16d4:	str	w1, [x19, #208]
    16d8:	sub	w2, w3, #0x5
    16dc:	b	171c <lzma_main+0x50c>
    16e0:	ldr	w0, [x19, #152]
    16e4:	lsr	w0, w0, #1
    16e8:	str	w0, [x19, #152]
    16ec:	ldr	w1, [x19, #156]
    16f0:	sub	w1, w1, w0
    16f4:	asr	w3, w1, #31
    16f8:	and	w0, w0, w3
    16fc:	add	w0, w0, w1
    1700:	str	w0, [x19, #156]
    1704:	ldr	w0, [x19, #208]
    1708:	add	w0, w3, w0, lsl #1
    170c:	add	w0, w0, #0x1
    1710:	str	w0, [x19, #208]
    1714:	subs	w2, w2, #0x1
    1718:	b.eq	1754 <lzma_main+0x544>  // b.none
    171c:	ldr	w0, [x19, #152]
    1720:	cmp	w0, w20
    1724:	b.hi	16e0 <lzma_main+0x4d0>  // b.pmore
    1728:	lsl	w0, w0, #8
    172c:	str	w0, [x19, #152]
    1730:	ldr	w0, [x19, #156]
    1734:	ldr	x4, [x19, #168]
    1738:	ldr	x3, [x19, #176]
    173c:	add	x5, x3, #0x1
    1740:	str	x5, [x19, #176]
    1744:	ldrb	w3, [x4, x3]
    1748:	add	w0, w3, w0, lsl #8
    174c:	str	w0, [x19, #156]
    1750:	b	16e0 <lzma_main+0x4d0>
    1754:	lsl	w0, w0, #4
    1758:	str	w0, [x19, #208]
    175c:	add	x6, x19, #0x728
    1760:	mov	w1, #0x1                   	// #1
    1764:	b	17a8 <lzma_main+0x598>
    1768:	sub	w5, w5, w0
    176c:	str	w5, [x19, #152]
    1770:	sub	w0, w4, w0
    1774:	str	w0, [x19, #156]
    1778:	ldrh	w0, [x6, x3]
    177c:	sub	w0, w0, w0, lsr #5
    1780:	strh	w0, [x6, x3]
    1784:	lsl	w1, w1, #1
    1788:	add	w1, w1, #0x1
    178c:	lsl	w0, w22, w2
    1790:	ldr	w3, [x19, #208]
    1794:	add	w0, w3, w0
    1798:	str	w0, [x19, #208]
    179c:	add	w2, w2, #0x1
    17a0:	cmp	w2, #0x4
    17a4:	b.eq	1954 <lzma_main+0x744>  // b.none
    17a8:	ubfiz	x3, x1, #1, #32
    17ac:	ldr	w0, [x19, #152]
    17b0:	cmp	w0, w20
    17b4:	b.hi	17e0 <lzma_main+0x5d0>  // b.pmore
    17b8:	lsl	w0, w0, #8
    17bc:	str	w0, [x19, #152]
    17c0:	ldr	w0, [x19, #156]
    17c4:	ldr	x7, [x19, #168]
    17c8:	ldr	x5, [x19, #176]
    17cc:	add	x8, x5, #0x1
    17d0:	str	x8, [x19, #176]
    17d4:	ldrb	w5, [x7, x5]
    17d8:	add	w0, w5, w0, lsl #8
    17dc:	str	w0, [x19, #156]
    17e0:	ldr	w5, [x19, #152]
    17e4:	lsr	w0, w5, #11
    17e8:	ldrh	w4, [x6, x3]
    17ec:	mul	w0, w0, w4
    17f0:	ldr	w4, [x19, #156]
    17f4:	cmp	w0, w4
    17f8:	b.ls	1768 <lzma_main+0x558>  // b.plast
    17fc:	str	w0, [x19, #152]
    1800:	ldrh	w4, [x6, x3]
    1804:	sub	w0, w21, w4
    1808:	add	w0, w4, w0, asr #5
    180c:	strh	w0, [x6, x3]
    1810:	lsl	w1, w1, #1
    1814:	b	179c <lzma_main+0x58c>
    1818:	sub	w5, w5, w3
    181c:	str	w5, [x19, #152]
    1820:	sub	w3, w6, w3
    1824:	str	w3, [x19, #156]
    1828:	sub	w4, w4, w4, lsr #5
    182c:	strh	w4, [x1, #612]
    1830:	cmp	w5, w20
    1834:	b.hi	185c <lzma_main+0x64c>  // b.pmore
    1838:	lsl	w5, w5, #8
    183c:	str	w5, [x19, #152]
    1840:	ldr	x6, [x19, #168]
    1844:	ldr	x5, [x19, #176]
    1848:	add	x8, x5, #0x1
    184c:	str	x8, [x19, #176]
    1850:	ldrb	w6, [x6, x5]
    1854:	add	w3, w6, w3, lsl #8
    1858:	str	w3, [x19, #156]
    185c:	ldr	w6, [x19, #152]
    1860:	ldrh	w5, [x1, #636]
    1864:	lsr	w3, w6, #11
    1868:	mul	w3, w3, w5
    186c:	ldr	w4, [x19, #156]
    1870:	cmp	w3, w4
    1874:	b.ls	18d8 <lzma_main+0x6c8>  // b.plast
    1878:	str	w3, [x19, #152]
    187c:	sub	w6, w21, w5
    1880:	add	w5, w5, w6, asr #5
    1884:	strh	w5, [x1, #636]
    1888:	cmp	w3, w20
    188c:	b.ls	1a58 <lzma_main+0x848>  // b.plast
    1890:	ldr	w5, [x19, #152]
    1894:	ldrh	w3, [x0, #708]
    1898:	lsr	w1, w5, #11
    189c:	mul	w1, w1, w3
    18a0:	ldr	w4, [x19, #156]
    18a4:	cmp	w1, w4
    18a8:	b.ls	1a80 <lzma_main+0x870>  // b.plast
    18ac:	str	w1, [x19, #152]
    18b0:	sub	w1, w21, w3
    18b4:	add	w3, w3, w1, asr #5
    18b8:	strh	w3, [x0, #708]
    18bc:	cmp	w7, #0x7
    18c0:	mov	w0, #0x9                   	// #9
    18c4:	mov	w1, #0xb                   	// #11
    18c8:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    18cc:	str	w0, [x19, #204]
    18d0:	str	w22, [x19, #224]
    18d4:	b	1954 <lzma_main+0x744>
    18d8:	sub	w6, w6, w3
    18dc:	str	w6, [x19, #152]
    18e0:	sub	w3, w4, w3
    18e4:	str	w3, [x19, #156]
    18e8:	sub	w5, w5, w5, lsr #5
    18ec:	strh	w5, [x1, #636]
    18f0:	cmp	w6, w20
    18f4:	b.ls	1a9c <lzma_main+0x88c>  // b.plast
    18f8:	ldr	w4, [x19, #152]
    18fc:	ldrh	w3, [x1, #660]
    1900:	lsr	w0, w4, #11
    1904:	mul	w0, w0, w3
    1908:	ldr	w5, [x19, #156]
    190c:	cmp	w0, w5
    1910:	b.ls	1ac4 <lzma_main+0x8b4>  // b.plast
    1914:	str	w0, [x19, #152]
    1918:	sub	w0, w21, w3
    191c:	add	w3, w3, w0, asr #5
    1920:	strh	w3, [x1, #660]
    1924:	ldr	w0, [x19, #212]
    1928:	ldr	w1, [x19, #208]
    192c:	str	w1, [x19, #212]
    1930:	str	w0, [x19, #208]
    1934:	cmp	w7, #0x7
    1938:	mov	w0, #0x8                   	// #8
    193c:	mov	w1, #0xb                   	// #11
    1940:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    1944:	str	w0, [x19, #204]
    1948:	add	x1, x19, #0xb4c
    194c:	mov	x0, x19
    1950:	bl	ff8 <lzma_len>
    1954:	ldr	w2, [x19, #208]
    1958:	add	x1, x19, #0xe0
    195c:	add	x0, x19, #0x60
    1960:	bl	f38 <dict_repeat>
    1964:	cbz	w0, 1bc4 <lzma_main+0x9b4>
    1968:	ldr	x6, [x19, #112]
    196c:	ldr	x0, [x19, #128]
    1970:	cmp	x6, x0
    1974:	b.cs	1b6c <lzma_main+0x95c>  // b.hs, b.nlast
    1978:	ldr	x1, [x19, #176]
    197c:	ldr	x0, [x19, #184]
    1980:	cmp	x1, x0
    1984:	b.hi	1b74 <lzma_main+0x964>  // b.pmore
    1988:	ldr	w2, [x19, #200]
    198c:	and	w2, w2, w6
    1990:	ldr	w7, [x19, #204]
    1994:	ldr	w0, [x19, #152]
    1998:	cmp	w0, w20
    199c:	b.hi	19c4 <lzma_main+0x7b4>  // b.pmore
    19a0:	lsl	w0, w0, #8
    19a4:	str	w0, [x19, #152]
    19a8:	ldr	w0, [x19, #156]
    19ac:	ldr	x4, [x19, #168]
    19b0:	add	x5, x1, #0x1
    19b4:	str	x5, [x19, #176]
    19b8:	ldrb	w1, [x4, x1]
    19bc:	add	w0, w1, w0, lsl #8
    19c0:	str	w0, [x19, #156]
    19c4:	ldr	w4, [x19, #152]
    19c8:	mov	w8, w7
    19cc:	ubfiz	x0, x7, #4, #32
    19d0:	add	x0, x0, w2, uxtw
    19d4:	add	x0, x19, x0, lsl #1
    19d8:	ldrh	w3, [x0, #228]
    19dc:	lsr	w1, w4, #11
    19e0:	mul	w1, w1, w3
    19e4:	ldr	w5, [x19, #156]
    19e8:	cmp	w1, w5
    19ec:	b.ls	1464 <lzma_main+0x254>  // b.plast
    19f0:	str	w1, [x19, #152]
    19f4:	sub	w1, w21, w3
    19f8:	add	w3, w3, w1, asr #5
    19fc:	strh	w3, [x0, #228]
    1a00:	cbz	x6, 1278 <lzma_main+0x68>
    1a04:	sub	x1, x6, #0x1
    1a08:	ldr	x4, [x19, #120]
    1a0c:	mov	w0, #0x0                   	// #0
    1a10:	cbz	x4, 1a1c <lzma_main+0x80c>
    1a14:	ldr	x0, [x19, #96]
    1a18:	ldrb	w0, [x0, x1]
    1a1c:	ldr	w3, [x19, #192]
    1a20:	ldr	w1, [x19, #196]
    1a24:	and	x1, x1, x6
    1a28:	lsl	x2, x1, x3
    1a2c:	mov	w1, #0x8                   	// #8
    1a30:	sub	w1, w1, w3
    1a34:	lsr	w1, w0, w1
    1a38:	add	w1, w1, w2
    1a3c:	add	x1, x1, x1, lsl #1
    1a40:	add	x1, x19, x1, lsl #9
    1a44:	add	x1, x1, #0xf50
    1a48:	cmp	w7, #0x6
    1a4c:	b.hi	1320 <lzma_main+0x110>  // b.pmore
    1a50:	mov	w0, #0x1                   	// #1
    1a54:	b	12b0 <lzma_main+0xa0>
    1a58:	lsl	w3, w3, #8
    1a5c:	str	w3, [x19, #152]
    1a60:	ldr	x5, [x19, #168]
    1a64:	ldr	x3, [x19, #176]
    1a68:	add	x6, x3, #0x1
    1a6c:	str	x6, [x19, #176]
    1a70:	ldrb	w3, [x5, x3]
    1a74:	add	w4, w3, w4, lsl #8
    1a78:	str	w4, [x19, #156]
    1a7c:	b	1890 <lzma_main+0x680>
    1a80:	sub	w5, w5, w1
    1a84:	str	w5, [x19, #152]
    1a88:	sub	w1, w4, w1
    1a8c:	str	w1, [x19, #156]
    1a90:	sub	w3, w3, w3, lsr #5
    1a94:	strh	w3, [x0, #708]
    1a98:	b	1934 <lzma_main+0x724>
    1a9c:	lsl	w6, w6, #8
    1aa0:	str	w6, [x19, #152]
    1aa4:	ldr	x5, [x19, #168]
    1aa8:	ldr	x4, [x19, #176]
    1aac:	add	x6, x4, #0x1
    1ab0:	str	x6, [x19, #176]
    1ab4:	ldrb	w4, [x5, x4]
    1ab8:	add	w3, w4, w3, lsl #8
    1abc:	str	w3, [x19, #156]
    1ac0:	b	18f8 <lzma_main+0x6e8>
    1ac4:	sub	w4, w4, w0
    1ac8:	str	w4, [x19, #152]
    1acc:	sub	w0, w5, w0
    1ad0:	str	w0, [x19, #156]
    1ad4:	sub	w3, w3, w3, lsr #5
    1ad8:	strh	w3, [x1, #660]
    1adc:	cmp	w4, w20
    1ae0:	b.hi	1b08 <lzma_main+0x8f8>  // b.pmore
    1ae4:	lsl	w4, w4, #8
    1ae8:	str	w4, [x19, #152]
    1aec:	ldr	x5, [x19, #168]
    1af0:	ldr	x4, [x19, #176]
    1af4:	add	x6, x4, #0x1
    1af8:	str	x6, [x19, #176]
    1afc:	ldrb	w4, [x5, x4]
    1b00:	add	w0, w4, w0, lsl #8
    1b04:	str	w0, [x19, #156]
    1b08:	ldr	w5, [x19, #152]
    1b0c:	ldrh	w3, [x1, #684]
    1b10:	lsr	w0, w5, #11
    1b14:	mul	w0, w0, w3
    1b18:	ldr	w4, [x19, #156]
    1b1c:	cmp	w0, w4
    1b20:	b.ls	1b44 <lzma_main+0x934>  // b.plast
    1b24:	str	w0, [x19, #152]
    1b28:	sub	w0, w21, w3
    1b2c:	add	w3, w3, w0, asr #5
    1b30:	strh	w3, [x1, #684]
    1b34:	ldr	w0, [x19, #216]
    1b38:	ldr	w1, [x19, #212]
    1b3c:	str	w1, [x19, #216]
    1b40:	b	1928 <lzma_main+0x718>
    1b44:	sub	w5, w5, w0
    1b48:	str	w5, [x19, #152]
    1b4c:	sub	w0, w4, w0
    1b50:	str	w0, [x19, #156]
    1b54:	sub	w3, w3, w3, lsr #5
    1b58:	strh	w3, [x1, #684]
    1b5c:	ldr	w0, [x19, #220]
    1b60:	ldr	w1, [x19, #216]
    1b64:	str	w1, [x19, #220]
    1b68:	b	1b38 <lzma_main+0x928>
    1b6c:	ldp	x21, x22, [sp, #32]
    1b70:	b	1b78 <lzma_main+0x968>
    1b74:	ldp	x21, x22, [sp, #32]
    1b78:	ldr	w1, [x19, #152]
    1b7c:	mov	w0, #0x1                   	// #1
    1b80:	mov	w2, #0xffffff              	// #16777215
    1b84:	cmp	w1, w2
    1b88:	b.hi	1bb8 <lzma_main+0x9a8>  // b.pmore
    1b8c:	lsl	w1, w1, #8
    1b90:	str	w1, [x19, #152]
    1b94:	ldr	w1, [x19, #156]
    1b98:	ldr	x3, [x19, #168]
    1b9c:	ldr	x2, [x19, #176]
    1ba0:	add	x4, x2, #0x1
    1ba4:	str	x4, [x19, #176]
    1ba8:	ldrb	w2, [x3, x2]
    1bac:	add	w1, w2, w1, lsl #8
    1bb0:	str	w1, [x19, #156]
    1bb4:	mov	w0, #0x1                   	// #1
    1bb8:	ldp	x19, x20, [sp, #16]
    1bbc:	ldp	x29, x30, [sp], #48
    1bc0:	ret
    1bc4:	ldp	x21, x22, [sp, #32]
    1bc8:	b	1bb8 <lzma_main+0x9a8>

0000000000001bcc <xz_dec_lzma2_run>:
    1bcc:	stp	x29, x30, [sp, #-96]!
    1bd0:	mov	x29, sp
    1bd4:	stp	x19, x20, [sp, #16]
    1bd8:	stp	x21, x22, [sp, #32]
    1bdc:	stp	x23, x24, [sp, #48]
    1be0:	stp	x25, x26, [sp, #64]
    1be4:	str	x27, [sp, #80]
    1be8:	mov	x20, x0
    1bec:	mov	x19, x1
    1bf0:	mov	w24, #0x7                   	// #7
    1bf4:	mov	w25, #0x1                   	// #1
    1bf8:	add	x23, x0, #0x6, lsl #12
    1bfc:	add	x23, x23, #0xf50
    1c00:	mov	w22, #0x400                 	// #1024
    1c04:	b	2138 <xz_dec_lzma2_run+0x56c>
    1c08:	ldr	w0, [x20]
    1c0c:	cmp	w0, #0x4
    1c10:	b.eq	1f20 <xz_dec_lzma2_run+0x354>  // b.none
    1c14:	cmp	w0, #0x4
    1c18:	b.hi	1c84 <xz_dec_lzma2_run+0xb8>  // b.pmore
    1c1c:	cmp	w0, #0x2
    1c20:	b.eq	1ef4 <xz_dec_lzma2_run+0x328>  // b.none
    1c24:	cmp	w0, #0x2
    1c28:	b.ls	1c50 <xz_dec_lzma2_run+0x84>  // b.plast
    1c2c:	ldr	x0, [x19]
    1c30:	add	x2, x1, #0x1
    1c34:	str	x2, [x19, #8]
    1c38:	ldrb	w0, [x0, x1]
    1c3c:	lsl	w0, w0, #8
    1c40:	str	w0, [x20, #12]
    1c44:	mov	w0, #0x4                   	// #4
    1c48:	str	w0, [x20]
    1c4c:	b	2138 <xz_dec_lzma2_run+0x56c>
    1c50:	cbz	w0, 1dec <xz_dec_lzma2_run+0x220>
    1c54:	cmp	w0, #0x1
    1c58:	b.ne	2140 <xz_dec_lzma2_run+0x574>  // b.any
    1c5c:	ldr	x0, [x19]
    1c60:	add	x2, x1, #0x1
    1c64:	str	x2, [x19, #8]
    1c68:	ldrb	w0, [x0, x1]
    1c6c:	ldr	w1, [x20, #8]
    1c70:	add	w0, w1, w0, lsl #8
    1c74:	str	w0, [x20, #8]
    1c78:	mov	w0, #0x2                   	// #2
    1c7c:	str	w0, [x20]
    1c80:	b	2138 <xz_dec_lzma2_run+0x56c>
    1c84:	cmp	w0, #0x6
    1c88:	b.eq	1f4c <xz_dec_lzma2_run+0x380>  // b.none
    1c8c:	b.ls	1cac <xz_dec_lzma2_run+0xe0>  // b.plast
    1c90:	cmp	w0, #0x7
    1c94:	b.eq	2154 <xz_dec_lzma2_run+0x588>  // b.none
    1c98:	cmp	w0, #0x8
    1c9c:	b.ne	2140 <xz_dec_lzma2_run+0x574>  // b.any
    1ca0:	ldr	w2, [x20, #12]
    1ca4:	cbnz	w2, 22c0 <xz_dec_lzma2_run+0x6f4>
    1ca8:	b	2370 <xz_dec_lzma2_run+0x7a4>
    1cac:	cmp	w0, #0x5
    1cb0:	b.ne	2140 <xz_dec_lzma2_run+0x574>  // b.any
    1cb4:	ldr	x2, [x19]
    1cb8:	add	x3, x1, #0x1
    1cbc:	str	x3, [x19, #8]
    1cc0:	ldrb	w1, [x2, x1]
    1cc4:	cmp	w1, #0xe0
    1cc8:	b.hi	23ac <xz_dec_lzma2_run+0x7e0>  // b.pmore
    1ccc:	str	wzr, [x20, #200]
    1cd0:	cmp	w1, #0x2c
    1cd4:	b.ls	1cf4 <xz_dec_lzma2_run+0x128>  // b.plast
    1cd8:	mov	w2, #0x0                   	// #0
    1cdc:	sub	w1, w1, #0x2d
    1ce0:	and	w1, w1, #0xff
    1ce4:	add	w2, w2, #0x1
    1ce8:	cmp	w1, #0x2c
    1cec:	b.hi	1cdc <xz_dec_lzma2_run+0x110>  // b.pmore
    1cf0:	str	w2, [x20, #200]
    1cf4:	ldr	w2, [x20, #200]
    1cf8:	lsl	w2, w25, w2
    1cfc:	sub	w2, w2, #0x1
    1d00:	str	w2, [x20, #200]
    1d04:	str	wzr, [x20, #196]
    1d08:	cmp	w1, #0x8
    1d0c:	b.ls	1d30 <xz_dec_lzma2_run+0x164>  // b.plast
    1d10:	mov	w2, #0x1                   	// #1
    1d14:	sub	w1, w1, #0x9
    1d18:	and	w1, w1, #0xff
    1d1c:	mov	w3, w2
    1d20:	add	w2, w2, #0x1
    1d24:	cmp	w1, #0x8
    1d28:	b.hi	1d14 <xz_dec_lzma2_run+0x148>  // b.pmore
    1d2c:	str	w3, [x20, #196]
    1d30:	str	w1, [x20, #192]
    1d34:	ldr	w2, [x20, #196]
    1d38:	add	w1, w1, w2
    1d3c:	cmp	w1, #0x4
    1d40:	b.hi	23ac <xz_dec_lzma2_run+0x7e0>  // b.pmore
    1d44:	lsl	w1, w25, w2
    1d48:	sub	w1, w1, #0x1
    1d4c:	str	w1, [x20, #196]
    1d50:	str	wzr, [x20, #204]
    1d54:	str	wzr, [x20, #208]
    1d58:	str	wzr, [x20, #212]
    1d5c:	str	wzr, [x20, #216]
    1d60:	str	wzr, [x20, #220]
    1d64:	add	x1, x20, #0xe4
    1d68:	strh	w22, [x1], #2
    1d6c:	cmp	x1, x23
    1d70:	b.ne	1d68 <xz_dec_lzma2_run+0x19c>  // b.any
    1d74:	mov	w2, #0xffffffff            	// #-1
    1d78:	str	w2, [x20, #152]
    1d7c:	str	wzr, [x20, #156]
    1d80:	mov	w2, #0x5                   	// #5
    1d84:	str	w2, [x20, #160]
    1d88:	mov	w1, #0x6                   	// #6
    1d8c:	str	w1, [x20]
    1d90:	ldr	w1, [x20, #12]
    1d94:	cmp	w1, #0x4
    1d98:	b.ls	23ac <xz_dec_lzma2_run+0x7e0>  // b.plast
    1d9c:	ldr	x2, [x19, #8]
    1da0:	ldr	x0, [x19, #16]
    1da4:	cmp	x2, x0
    1da8:	b.eq	23a8 <xz_dec_lzma2_run+0x7dc>  // b.none
    1dac:	ldr	w0, [x20, #156]
    1db0:	ldr	x3, [x19]
    1db4:	add	x4, x2, #0x1
    1db8:	str	x4, [x19, #8]
    1dbc:	ldrb	w2, [x3, x2]
    1dc0:	add	w0, w2, w0, lsl #8
    1dc4:	str	w0, [x20, #156]
    1dc8:	ldr	w0, [x20, #160]
    1dcc:	sub	w0, w0, #0x1
    1dd0:	str	w0, [x20, #160]
    1dd4:	cbnz	w0, 1d9c <xz_dec_lzma2_run+0x1d0>
    1dd8:	ldr	w0, [x20, #12]
    1ddc:	sub	w0, w0, #0x5
    1de0:	str	w0, [x20, #12]
    1de4:	str	w24, [x20]
    1de8:	b	2154 <xz_dec_lzma2_run+0x588>
    1dec:	ldr	x0, [x19]
    1df0:	add	x2, x1, #0x1
    1df4:	str	x2, [x19, #8]
    1df8:	ldrb	w0, [x0, x1]
    1dfc:	cmp	w0, #0xdf
    1e00:	ccmp	w0, #0x1, #0x4, ls  // ls = plast
    1e04:	b.eq	1e3c <xz_dec_lzma2_run+0x270>  // b.none
    1e08:	ldr	w1, [x20, #16]
    1e0c:	cbnz	w1, 2380 <xz_dec_lzma2_run+0x7b4>
    1e10:	cmp	w0, #0x7f
    1e14:	b.ls	1ed4 <xz_dec_lzma2_run+0x308>  // b.plast
    1e18:	ubfiz	w1, w0, #16, #5
    1e1c:	str	w1, [x20, #8]
    1e20:	str	w25, [x20]
    1e24:	cmp	w0, #0xbf
    1e28:	b.ls	1e80 <xz_dec_lzma2_run+0x2b4>  // b.plast
    1e2c:	str	wzr, [x20, #20]
    1e30:	mov	w0, #0x5                   	// #5
    1e34:	str	w0, [x20, #4]
    1e38:	b	2138 <xz_dec_lzma2_run+0x56c>
    1e3c:	str	w25, [x20, #20]
    1e40:	str	wzr, [x20, #16]
    1e44:	ldr	w1, [x20, #148]
    1e48:	cbnz	w1, 1e6c <xz_dec_lzma2_run+0x2a0>
    1e4c:	ldr	x1, [x19, #24]
    1e50:	ldr	x2, [x19, #32]
    1e54:	add	x1, x1, x2
    1e58:	str	x1, [x20, #96]
    1e5c:	ldr	x1, [x19, #40]
    1e60:	ldr	x2, [x19, #32]
    1e64:	sub	x1, x1, x2
    1e68:	str	x1, [x20, #136]
    1e6c:	str	xzr, [x20, #104]
    1e70:	str	xzr, [x20, #112]
    1e74:	str	xzr, [x20, #128]
    1e78:	str	xzr, [x20, #120]
    1e7c:	b	1e10 <xz_dec_lzma2_run+0x244>
    1e80:	ldr	w1, [x20, #20]
    1e84:	cbnz	w1, 2388 <xz_dec_lzma2_run+0x7bc>
    1e88:	mov	w1, #0x6                   	// #6
    1e8c:	str	w1, [x20, #4]
    1e90:	cmp	w0, #0x9f
    1e94:	b.ls	2138 <xz_dec_lzma2_run+0x56c>  // b.plast
    1e98:	str	wzr, [x20, #204]
    1e9c:	str	wzr, [x20, #208]
    1ea0:	str	wzr, [x20, #212]
    1ea4:	str	wzr, [x20, #216]
    1ea8:	str	wzr, [x20, #220]
    1eac:	add	x0, x20, #0xe4
    1eb0:	strh	w22, [x0], #2
    1eb4:	cmp	x23, x0
    1eb8:	b.ne	1eb0 <xz_dec_lzma2_run+0x2e4>  // b.any
    1ebc:	mov	w1, #0xffffffff            	// #-1
    1ec0:	str	w1, [x20, #152]
    1ec4:	str	wzr, [x20, #156]
    1ec8:	mov	w1, #0x5                   	// #5
    1ecc:	str	w1, [x20, #160]
    1ed0:	b	2138 <xz_dec_lzma2_run+0x56c>
    1ed4:	cbz	w0, 2390 <xz_dec_lzma2_run+0x7c4>
    1ed8:	cmp	w0, #0x2
    1edc:	b.hi	2398 <xz_dec_lzma2_run+0x7cc>  // b.pmore
    1ee0:	mov	w0, #0x3                   	// #3
    1ee4:	str	w0, [x20]
    1ee8:	mov	w0, #0x8                   	// #8
    1eec:	str	w0, [x20, #4]
    1ef0:	b	2138 <xz_dec_lzma2_run+0x56c>
    1ef4:	ldr	x0, [x19]
    1ef8:	add	x2, x1, #0x1
    1efc:	str	x2, [x19, #8]
    1f00:	ldrb	w0, [x0, x1]
    1f04:	ldr	w1, [x20, #8]
    1f08:	add	w1, w1, #0x1
    1f0c:	add	w0, w0, w1
    1f10:	str	w0, [x20, #8]
    1f14:	mov	w0, #0x3                   	// #3
    1f18:	str	w0, [x20]
    1f1c:	b	2138 <xz_dec_lzma2_run+0x56c>
    1f20:	ldr	x0, [x19]
    1f24:	add	x2, x1, #0x1
    1f28:	str	x2, [x19, #8]
    1f2c:	ldrb	w0, [x0, x1]
    1f30:	ldr	w1, [x20, #12]
    1f34:	add	w1, w1, #0x1
    1f38:	add	w0, w0, w1
    1f3c:	str	w0, [x20, #12]
    1f40:	ldr	w0, [x20, #4]
    1f44:	str	w0, [x20]
    1f48:	b	2138 <xz_dec_lzma2_run+0x56c>
    1f4c:	ldr	w0, [x20, #12]
    1f50:	cmp	w0, #0x4
    1f54:	b.ls	23a0 <xz_dec_lzma2_run+0x7d4>  // b.plast
    1f58:	ldr	w0, [x20, #160]
    1f5c:	cbnz	w0, 1d9c <xz_dec_lzma2_run+0x1d0>
    1f60:	b	1dd8 <xz_dec_lzma2_run+0x20c>
    1f64:	ldr	x4, [x19, #16]
    1f68:	sub	x4, x4, x1
    1f6c:	mov	w2, #0x2a                  	// #42
    1f70:	sub	w3, w2, w0
    1f74:	ldr	w2, [x20, #12]
    1f78:	sub	w2, w2, w0
    1f7c:	cmp	w2, w3
    1f80:	csel	w21, w2, w3, ls  // ls = plast
    1f84:	csel	w2, w2, w3, ls  // ls = plast
    1f88:	cmp	x4, x2
    1f8c:	csel	w21, w21, w4, cs  // cs = hs, nlast
    1f90:	add	x26, x20, #0x1c
    1f94:	mov	w27, w21
    1f98:	ldr	x3, [x19]
    1f9c:	mov	x2, x27
    1fa0:	add	x1, x3, x1
    1fa4:	add	x0, x26, w0, uxtw
    1fa8:	bl	0 <grub_memmove>
    1fac:	ldr	w1, [x20, #24]
    1fb0:	add	w0, w21, w1
    1fb4:	ldr	w2, [x20, #12]
    1fb8:	cmp	w0, w2
    1fbc:	b.eq	2028 <xz_dec_lzma2_run+0x45c>  // b.none
    1fc0:	cmp	w0, #0x14
    1fc4:	b.ls	2050 <xz_dec_lzma2_run+0x484>  // b.plast
    1fc8:	sub	w0, w0, #0x15
    1fcc:	str	x0, [x20, #184]
    1fd0:	str	x26, [x20, #168]
    1fd4:	str	xzr, [x20, #176]
    1fd8:	mov	x0, x20
    1fdc:	bl	1210 <lzma_main>
    1fe0:	cbz	w0, 21fc <xz_dec_lzma2_run+0x630>
    1fe4:	ldr	x1, [x20, #176]
    1fe8:	ldr	w0, [x20, #24]
    1fec:	add	w21, w21, w0
    1ff0:	cmp	x1, x21
    1ff4:	b.hi	21fc <xz_dec_lzma2_run+0x630>  // b.pmore
    1ff8:	ldr	w2, [x20, #12]
    1ffc:	sub	w2, w2, w1
    2000:	str	w2, [x20, #12]
    2004:	mov	w2, w0
    2008:	cmp	x1, w0, uxtw
    200c:	b.cc	2064 <xz_dec_lzma2_run+0x498>  // b.lo, b.ul, b.last
    2010:	ldr	x0, [x19, #8]
    2014:	add	x1, x1, x0
    2018:	sub	x1, x1, x2
    201c:	str	x1, [x19, #8]
    2020:	str	wzr, [x20, #24]
    2024:	b	219c <xz_dec_lzma2_run+0x5d0>
    2028:	add	x0, x27, w1, uxtw
    202c:	mov	x2, #0x3f                  	// #63
    2030:	sub	x2, x2, x0
    2034:	mov	w1, #0x0                   	// #0
    2038:	add	x0, x26, x0
    203c:	bl	0 <grub_memset>
    2040:	ldr	w0, [x20, #24]
    2044:	add	w0, w21, w0
    2048:	str	x0, [x20, #184]
    204c:	b	1fd0 <xz_dec_lzma2_run+0x404>
    2050:	str	w0, [x20, #24]
    2054:	ldr	x0, [x19, #8]
    2058:	add	x27, x0, x27
    205c:	str	x27, [x19, #8]
    2060:	b	20a8 <xz_dec_lzma2_run+0x4dc>
    2064:	sub	w0, w0, w1
    2068:	str	w0, [x20, #24]
    206c:	mov	w2, w0
    2070:	add	x1, x26, x1
    2074:	mov	x0, x26
    2078:	bl	0 <grub_memmove>
    207c:	b	20a8 <xz_dec_lzma2_run+0x4dc>
    2080:	ldr	x1, [x19, #16]
    2084:	sub	x1, x1, #0x15
    2088:	b	21d4 <xz_dec_lzma2_run+0x608>
    208c:	sub	w0, w0, w2
    2090:	str	w0, [x20, #12]
    2094:	str	x1, [x19, #8]
    2098:	ldr	x0, [x19, #16]
    209c:	sub	x0, x0, x1
    20a0:	cmp	x0, #0x14
    20a4:	b.ls	2204 <xz_dec_lzma2_run+0x638>  // b.plast
    20a8:	ldr	x2, [x20, #112]
    20ac:	ldr	x1, [x20, #104]
    20b0:	sub	x21, x2, x1
    20b4:	ldr	w0, [x20, #148]
    20b8:	cbz	w0, 20e4 <xz_dec_lzma2_run+0x518>
    20bc:	ldr	x0, [x20, #136]
    20c0:	cmp	x2, x0
    20c4:	b.eq	2238 <xz_dec_lzma2_run+0x66c>  // b.none
    20c8:	ldr	x4, [x20, #96]
    20cc:	ldr	x3, [x19, #24]
    20d0:	ldr	x0, [x19, #32]
    20d4:	mov	x2, x21
    20d8:	add	x1, x4, x1
    20dc:	add	x0, x3, x0
    20e0:	bl	0 <grub_memmove>
    20e4:	ldr	x1, [x20, #112]
    20e8:	str	x1, [x20, #104]
    20ec:	ldr	x0, [x19, #32]
    20f0:	add	x0, x0, x21
    20f4:	str	x0, [x19, #32]
    20f8:	ldr	w2, [x20, #8]
    20fc:	sub	w2, w2, w21
    2100:	str	w2, [x20, #8]
    2104:	cbnz	w2, 2240 <xz_dec_lzma2_run+0x674>
    2108:	ldr	w0, [x20, #12]
    210c:	cbnz	w0, 23c8 <xz_dec_lzma2_run+0x7fc>
    2110:	ldr	w0, [x20, #224]
    2114:	cbnz	w0, 23d0 <xz_dec_lzma2_run+0x804>
    2118:	ldr	w0, [x20, #156]
    211c:	cbnz	w0, 23d8 <xz_dec_lzma2_run+0x80c>
    2120:	mov	w1, #0xffffffff            	// #-1
    2124:	str	w1, [x20, #152]
    2128:	str	wzr, [x20, #156]
    212c:	mov	w1, #0x5                   	// #5
    2130:	str	w1, [x20, #160]
    2134:	str	wzr, [x20]
    2138:	ldr	x1, [x19, #8]
    213c:	ldr	x2, [x19, #16]
    2140:	cmp	x1, x2
    2144:	b.cc	1c08 <xz_dec_lzma2_run+0x3c>  // b.lo, b.ul, b.last
    2148:	ldr	w0, [x20]
    214c:	cmp	w0, #0x7
    2150:	b.ne	2378 <xz_dec_lzma2_run+0x7ac>  // b.any
    2154:	ldr	x0, [x19, #40]
    2158:	ldr	x1, [x19, #32]
    215c:	sub	x0, x0, x1
    2160:	ldr	w1, [x20, #8]
    2164:	cmp	x0, x1
    2168:	csel	x0, x0, x1, ls  // ls = plast
    216c:	ldr	x1, [x20, #136]
    2170:	ldr	x2, [x20, #112]
    2174:	sub	x3, x1, x2
    2178:	add	x2, x0, x2
    217c:	cmp	x0, x3
    2180:	csel	x1, x2, x1, cc  // cc = lo, ul, last
    2184:	str	x1, [x20, #128]
    2188:	ldr	x1, [x19, #8]
    218c:	ldr	w0, [x20, #24]
    2190:	cbnz	w0, 1f64 <xz_dec_lzma2_run+0x398>
    2194:	ldr	w21, [x20, #12]
    2198:	cbz	w21, 1f90 <xz_dec_lzma2_run+0x3c4>
    219c:	ldr	x1, [x19, #8]
    21a0:	ldr	x0, [x19, #16]
    21a4:	sub	x0, x0, x1
    21a8:	cmp	x0, #0x14
    21ac:	b.ls	2204 <xz_dec_lzma2_run+0x638>  // b.plast
    21b0:	ldr	x1, [x19]
    21b4:	str	x1, [x20, #168]
    21b8:	ldr	x2, [x19, #8]
    21bc:	str	x2, [x20, #176]
    21c0:	ldr	w1, [x20, #12]
    21c4:	add	w3, w1, #0x15
    21c8:	cmp	x0, x3
    21cc:	b.cc	2080 <xz_dec_lzma2_run+0x4b4>  // b.lo, b.ul, b.last
    21d0:	add	x1, x2, w1, uxtw
    21d4:	str	x1, [x20, #184]
    21d8:	mov	x0, x20
    21dc:	bl	1210 <lzma_main>
    21e0:	cbz	w0, 21fc <xz_dec_lzma2_run+0x630>
    21e4:	ldr	x1, [x20, #176]
    21e8:	ldr	x0, [x19, #8]
    21ec:	sub	x2, x1, x0
    21f0:	ldr	w0, [x20, #12]
    21f4:	cmp	x2, w0, uxtw
    21f8:	b.ls	208c <xz_dec_lzma2_run+0x4c0>  // b.plast
    21fc:	mov	w0, #0x5                   	// #5
    2200:	b	23ac <xz_dec_lzma2_run+0x7e0>
    2204:	ldr	w21, [x20, #12]
    2208:	cmp	x21, x0
    220c:	csel	x21, x21, x0, ls  // ls = plast
    2210:	ldr	x0, [x19]
    2214:	mov	x2, x21
    2218:	add	x1, x0, x1
    221c:	add	x0, x20, #0x1c
    2220:	bl	0 <grub_memmove>
    2224:	str	w21, [x20, #24]
    2228:	ldr	x0, [x19, #8]
    222c:	add	x0, x0, x21
    2230:	str	x0, [x19, #8]
    2234:	b	20a8 <xz_dec_lzma2_run+0x4dc>
    2238:	str	xzr, [x20, #112]
    223c:	b	20c8 <xz_dec_lzma2_run+0x4fc>
    2240:	ldr	x1, [x19, #32]
    2244:	ldr	x0, [x19, #40]
    2248:	cmp	x1, x0
    224c:	b.eq	23e0 <xz_dec_lzma2_run+0x814>  // b.none
    2250:	ldr	x1, [x19, #8]
    2254:	ldr	x0, [x19, #16]
    2258:	cmp	x1, x0
    225c:	b.ne	2138 <xz_dec_lzma2_run+0x56c>  // b.any
    2260:	ldr	w1, [x20, #24]
    2264:	ldr	w0, [x20, #12]
    2268:	cmp	w1, w0
    226c:	b.cs	2138 <xz_dec_lzma2_run+0x56c>  // b.hs, b.nlast
    2270:	mov	w0, #0x0                   	// #0
    2274:	b	23ac <xz_dec_lzma2_run+0x7e0>
    2278:	ldr	x4, [x19]
    227c:	ldr	x1, [x19, #8]
    2280:	ldr	x3, [x19, #24]
    2284:	ldr	x0, [x19, #32]
    2288:	mov	x2, x21
    228c:	add	x1, x4, x1
    2290:	add	x0, x3, x0
    2294:	bl	0 <grub_memmove>
    2298:	ldr	x1, [x20, #112]
    229c:	str	x1, [x20, #104]
    22a0:	ldr	x0, [x19, #32]
    22a4:	add	x0, x0, x21
    22a8:	str	x0, [x19, #32]
    22ac:	ldr	x0, [x19, #8]
    22b0:	add	x21, x0, x21
    22b4:	str	x21, [x19, #8]
    22b8:	ldr	w2, [x20, #12]
    22bc:	cbz	w2, 2370 <xz_dec_lzma2_run+0x7a4>
    22c0:	ldr	x4, [x19, #8]
    22c4:	ldr	x3, [x19, #16]
    22c8:	cmp	x3, x4
    22cc:	b.ls	236c <xz_dec_lzma2_run+0x7a0>  // b.plast
    22d0:	ldr	x5, [x19, #32]
    22d4:	ldr	x1, [x19, #40]
    22d8:	cmp	x1, x5
    22dc:	b.ls	236c <xz_dec_lzma2_run+0x7a0>  // b.plast
    22e0:	ldr	x0, [x20, #112]
    22e4:	ldr	x21, [x20, #136]
    22e8:	sub	x21, x21, x0
    22ec:	mov	w6, w2
    22f0:	cmp	x21, x6
    22f4:	csel	x21, x21, x6, ls  // ls = plast
    22f8:	sub	x1, x1, x5
    22fc:	sub	x3, x3, x4
    2300:	cmp	x1, x3
    2304:	csel	x1, x1, x3, ls  // ls = plast
    2308:	cmp	x21, x1
    230c:	csel	x21, x21, x1, ls  // ls = plast
    2310:	sub	w2, w2, w21
    2314:	str	w2, [x20, #12]
    2318:	ldr	x4, [x19]
    231c:	ldr	x1, [x19, #8]
    2320:	ldr	x3, [x20, #96]
    2324:	mov	x2, x21
    2328:	add	x1, x4, x1
    232c:	add	x0, x3, x0
    2330:	bl	0 <grub_memmove>
    2334:	ldr	x0, [x20, #112]
    2338:	add	x0, x21, x0
    233c:	str	x0, [x20, #112]
    2340:	ldr	x1, [x20, #120]
    2344:	cmp	x0, x1
    2348:	b.ls	2350 <xz_dec_lzma2_run+0x784>  // b.plast
    234c:	str	x0, [x20, #120]
    2350:	ldr	w1, [x20, #148]
    2354:	cbz	w1, 2298 <xz_dec_lzma2_run+0x6cc>
    2358:	ldr	x1, [x20, #136]
    235c:	cmp	x0, x1
    2360:	b.ne	2278 <xz_dec_lzma2_run+0x6ac>  // b.any
    2364:	str	xzr, [x20, #112]
    2368:	b	2278 <xz_dec_lzma2_run+0x6ac>
    236c:	cbnz	w2, 23e8 <xz_dec_lzma2_run+0x81c>
    2370:	str	wzr, [x20]
    2374:	b	2138 <xz_dec_lzma2_run+0x56c>
    2378:	mov	w0, #0x0                   	// #0
    237c:	b	23ac <xz_dec_lzma2_run+0x7e0>
    2380:	mov	w0, #0x5                   	// #5
    2384:	b	23ac <xz_dec_lzma2_run+0x7e0>
    2388:	mov	w0, #0x5                   	// #5
    238c:	b	23ac <xz_dec_lzma2_run+0x7e0>
    2390:	mov	w0, #0x1                   	// #1
    2394:	b	23ac <xz_dec_lzma2_run+0x7e0>
    2398:	mov	w0, #0x5                   	// #5
    239c:	b	23ac <xz_dec_lzma2_run+0x7e0>
    23a0:	mov	w0, #0x5                   	// #5
    23a4:	b	23ac <xz_dec_lzma2_run+0x7e0>
    23a8:	mov	w0, #0x0                   	// #0
    23ac:	ldp	x19, x20, [sp, #16]
    23b0:	ldp	x21, x22, [sp, #32]
    23b4:	ldp	x23, x24, [sp, #48]
    23b8:	ldp	x25, x26, [sp, #64]
    23bc:	ldr	x27, [sp, #80]
    23c0:	ldp	x29, x30, [sp], #96
    23c4:	ret
    23c8:	mov	w0, #0x5                   	// #5
    23cc:	b	23ac <xz_dec_lzma2_run+0x7e0>
    23d0:	mov	w0, #0x5                   	// #5
    23d4:	b	23ac <xz_dec_lzma2_run+0x7e0>
    23d8:	mov	w0, #0x5                   	// #5
    23dc:	b	23ac <xz_dec_lzma2_run+0x7e0>
    23e0:	mov	w0, #0x0                   	// #0
    23e4:	b	23ac <xz_dec_lzma2_run+0x7e0>
    23e8:	mov	w0, #0x0                   	// #0
    23ec:	b	23ac <xz_dec_lzma2_run+0x7e0>

00000000000023f0 <xz_dec_lzma2_create>:
    23f0:	stp	x29, x30, [sp, #-48]!
    23f4:	mov	x29, sp
    23f8:	stp	x19, x20, [sp, #16]
    23fc:	mov	w19, w0
    2400:	mov	w0, #0xc0000000            	// #-1073741824
    2404:	mov	x20, #0x0                   	// #0
    2408:	cmp	w19, w0
    240c:	b.hi	2428 <xz_dec_lzma2_create+0x38>  // b.pmore
    2410:	mov	x0, #0x6f50                	// #28496
    2414:	bl	0 <grub_malloc>
    2418:	mov	x20, x0
    241c:	cbz	x0, 2428 <xz_dec_lzma2_create+0x38>
    2420:	cbnz	w19, 2438 <xz_dec_lzma2_create+0x48>
    2424:	str	w19, [x20, #148]
    2428:	mov	x0, x20
    242c:	ldp	x19, x20, [sp, #16]
    2430:	ldp	x29, x30, [sp], #48
    2434:	ret
    2438:	str	x21, [sp, #32]
    243c:	mov	w0, w19
    2440:	bl	0 <grub_malloc>
    2444:	mov	x21, x0
    2448:	str	x0, [x20, #96]
    244c:	cbz	x0, 2458 <xz_dec_lzma2_create+0x68>
    2450:	ldr	x21, [sp, #32]
    2454:	b	2424 <xz_dec_lzma2_create+0x34>
    2458:	mov	x0, x20
    245c:	bl	0 <grub_free>
    2460:	mov	x20, x21
    2464:	ldr	x21, [sp, #32]
    2468:	b	2428 <xz_dec_lzma2_create+0x38>

000000000000246c <xz_dec_lzma2_reset>:
    246c:	and	w1, w1, #0xff
    2470:	cmp	w1, #0x1e
    2474:	b.hi	24fc <xz_dec_lzma2_reset+0x90>  // b.pmore
    2478:	stp	x29, x30, [sp, #-32]!
    247c:	mov	x29, sp
    2480:	str	x19, [sp, #16]
    2484:	mov	x19, x0
    2488:	and	w0, w1, #0x1
    248c:	add	w0, w0, #0x2
    2490:	lsr	w1, w1, #1
    2494:	add	w1, w1, #0xb
    2498:	lsl	w1, w0, w1
    249c:	str	w1, [x19, #144]
    24a0:	ldr	w0, [x19, #148]
    24a4:	cmp	w0, #0x0
    24a8:	ccmp	w1, w0, #0x0, ne  // ne = any
    24ac:	b.hi	24dc <xz_dec_lzma2_reset+0x70>  // b.pmore
    24b0:	ldr	w0, [x19, #144]
    24b4:	str	x0, [x19, #136]
    24b8:	str	wzr, [x19, #224]
    24bc:	str	wzr, [x19]
    24c0:	mov	w0, #0x1                   	// #1
    24c4:	str	w0, [x19, #16]
    24c8:	str	wzr, [x19, #24]
    24cc:	mov	w0, #0x0                   	// #0
    24d0:	ldr	x19, [sp, #16]
    24d4:	ldp	x29, x30, [sp], #32
    24d8:	ret
    24dc:	mov	w1, w1
    24e0:	ldr	x0, [x19, #96]
    24e4:	bl	0 <grub_realloc>
    24e8:	cbz	x0, 2504 <xz_dec_lzma2_reset+0x98>
    24ec:	str	x0, [x19, #96]
    24f0:	ldr	w0, [x19, #144]
    24f4:	str	w0, [x19, #148]
    24f8:	b	24b0 <xz_dec_lzma2_reset+0x44>
    24fc:	mov	w0, #0x4                   	// #4
    2500:	ret
    2504:	mov	w0, #0x2                   	// #2
    2508:	b	24d0 <xz_dec_lzma2_reset+0x64>

000000000000250c <xz_dec_lzma2_end>:
    250c:	stp	x29, x30, [sp, #-32]!
    2510:	mov	x29, sp
    2514:	str	x19, [sp, #16]
    2518:	mov	x19, x0
    251c:	ldr	w0, [x0, #148]
    2520:	cbnz	w0, 2538 <xz_dec_lzma2_end+0x2c>
    2524:	mov	x0, x19
    2528:	bl	0 <grub_free>
    252c:	ldr	x19, [sp, #16]
    2530:	ldp	x29, x30, [sp], #32
    2534:	ret
    2538:	ldr	x0, [x19, #96]
    253c:	bl	0 <grub_free>
    2540:	b	2524 <xz_dec_lzma2_end+0x18>
    2544:	nop

0000000000002548 <dec_vli>:
    2548:	mov	x5, x0
    254c:	ldr	w0, [x0, #4]
    2550:	cbnz	w0, 2558 <dec_vli+0x10>
    2554:	str	xzr, [x5, #8]
    2558:	ldr	x4, [x2]
    255c:	cmp	x4, x3
    2560:	b.cs	25c0 <dec_vli+0x78>  // b.hs, b.nlast
    2564:	ldrb	w7, [x1, x4]
    2568:	add	x4, x4, #0x1
    256c:	str	x4, [x2]
    2570:	ldr	w4, [x5, #4]
    2574:	and	x0, x7, #0x7f
    2578:	lsl	x6, x0, x4
    257c:	ldr	x0, [x5, #8]
    2580:	orr	x0, x0, x6
    2584:	str	x0, [x5, #8]
    2588:	tbz	w7, #7, 25a4 <dec_vli+0x5c>
    258c:	add	w4, w4, #0x7
    2590:	str	w4, [x5, #4]
    2594:	cmp	w4, #0x3f
    2598:	b.ne	2558 <dec_vli+0x10>  // b.any
    259c:	mov	w0, #0x5                   	// #5
    25a0:	b	25c4 <dec_vli+0x7c>
    25a4:	cmp	w4, #0x0
    25a8:	mov	w0, #0x5                   	// #5
    25ac:	ccmp	w7, #0x0, #0x0, ne  // ne = any
    25b0:	b.eq	25c4 <dec_vli+0x7c>  // b.none
    25b4:	str	wzr, [x5, #4]
    25b8:	mov	w0, #0x1                   	// #1
    25bc:	b	25c4 <dec_vli+0x7c>
    25c0:	mov	w0, #0x0                   	// #0
    25c4:	ret

00000000000025c8 <index_update>:
    25c8:	stp	x29, x30, [sp, #-48]!
    25cc:	mov	x29, sp
    25d0:	stp	x19, x20, [sp, #16]
    25d4:	str	x21, [sp, #32]
    25d8:	mov	x19, x0
    25dc:	mov	x21, x1
    25e0:	ldr	x1, [x0, #16]
    25e4:	ldr	x20, [x21, #8]
    25e8:	sub	x20, x20, x1
    25ec:	ldr	x0, [x0, #240]
    25f0:	add	x0, x0, x20
    25f4:	str	x0, [x19, #240]
    25f8:	ldr	x0, [x19, #120]
    25fc:	cbz	x0, 2618 <index_update+0x50>
    2600:	ldr	x4, [x21]
    2604:	ldr	x3, [x0, #48]
    2608:	mov	x2, x20
    260c:	add	x1, x4, x1
    2610:	ldr	x0, [x19, #104]
    2614:	blr	x3
    2618:	ldr	x0, [x19, #128]
    261c:	cbz	x0, 263c <index_update+0x74>
    2620:	ldr	x4, [x21]
    2624:	ldr	x1, [x19, #16]
    2628:	ldr	x3, [x0, #48]
    262c:	mov	x2, x20
    2630:	add	x1, x4, x1
    2634:	ldr	x0, [x19, #112]
    2638:	blr	x3
    263c:	ldp	x19, x20, [sp, #16]
    2640:	ldr	x21, [sp, #32]
    2644:	ldp	x29, x30, [sp], #48
    2648:	ret

000000000000264c <hash_validate>:
    264c:	stp	x29, x30, [sp, #-64]!
    2650:	mov	x29, sp
    2654:	stp	x19, x20, [sp, #16]
    2658:	stp	x21, x22, [sp, #32]
    265c:	str	x23, [sp, #48]
    2660:	mov	x19, x0
    2664:	mov	x20, x1
    2668:	mov	w21, w2
    266c:	cbz	w2, 26a8 <hash_validate+0x5c>
    2670:	ldr	x22, [x0, #128]
    2674:	ldr	x23, [x0, #112]
    2678:	ldr	w0, [x19, #96]
    267c:	cmp	w0, #0x0
    2680:	ccmp	x22, #0x0, #0x4, eq  // eq = none
    2684:	b.ne	26b4 <hash_validate+0x68>  // b.any
    2688:	ldr	x2, [x20, #8]
    268c:	ldr	x1, [x20, #16]
    2690:	mov	w0, #0x0                   	// #0
    2694:	cmp	x2, x1
    2698:	b.eq	27c0 <hash_validate+0x174>  // b.none
    269c:	cbz	w21, 27f8 <hash_validate+0x1ac>
    26a0:	mov	x2, #0x20                  	// #32
    26a4:	b	2778 <hash_validate+0x12c>
    26a8:	ldr	x22, [x0, #120]
    26ac:	ldr	x23, [x0, #104]
    26b0:	b	2678 <hash_validate+0x2c>
    26b4:	ldr	x0, [x22, #32]
    26b8:	cmp	x0, #0x40
    26bc:	b.hi	2688 <hash_validate+0x3c>  // b.pmore
    26c0:	ldr	x1, [x22, #56]
    26c4:	mov	x0, x23
    26c8:	blr	x1
    26cc:	ldr	x1, [x22, #64]
    26d0:	mov	x0, x23
    26d4:	blr	x1
    26d8:	ldr	x2, [x22, #32]
    26dc:	mov	x1, x0
    26e0:	add	x0, x19, #0x20
    26e4:	bl	0 <grub_memmove>
    26e8:	mov	w0, #0x1                   	// #1
    26ec:	str	w0, [x19, #96]
    26f0:	ldrb	w0, [x19, #136]
    26f4:	cmp	w21, #0x0
    26f8:	ccmp	w0, #0x1, #0x4, eq  // eq = none
    26fc:	b.ne	27e4 <hash_validate+0x198>  // b.any
    2700:	ldrb	w0, [x19, #32]
    2704:	ldrb	w1, [x19, #35]
    2708:	strb	w1, [x19, #32]
    270c:	strb	w0, [x19, #35]
    2710:	ldrb	w0, [x19, #33]
    2714:	ldrb	w1, [x19, #34]
    2718:	strb	w1, [x19, #33]
    271c:	strb	w0, [x19, #34]
    2720:	b	2688 <hash_validate+0x3c>
    2724:	ldr	x0, [x19, #144]
    2728:	lsl	x0, x0, #3
    272c:	cmp	x1, x0
    2730:	b.cs	278c <hash_validate+0x140>  // b.hs, b.nlast
    2734:	ldr	x3, [x20, #8]
    2738:	ldr	x0, [x20, #16]
    273c:	cmp	x3, x0
    2740:	b.eq	27d4 <hash_validate+0x188>  // b.none
    2744:	cbz	x22, 2764 <hash_validate+0x118>
    2748:	lsr	w4, w4, #3
    274c:	add	x4, x19, x4
    2750:	ldr	x0, [x20]
    2754:	ldrb	w1, [x4, #32]
    2758:	ldrb	w0, [x0, x3]
    275c:	cmp	w1, w0
    2760:	b.ne	27dc <hash_validate+0x190>  // b.any
    2764:	add	x3, x3, #0x1
    2768:	str	x3, [x20, #8]
    276c:	ldr	w0, [x19, #4]
    2770:	add	w0, w0, #0x8
    2774:	str	w0, [x19, #4]
    2778:	ldr	w4, [x19, #4]
    277c:	mov	w1, w4
    2780:	mov	x0, x2
    2784:	cbnz	w21, 272c <hash_validate+0xe0>
    2788:	b	2724 <hash_validate+0xd8>
    278c:	ldr	x0, [x19, #120]
    2790:	cbz	x0, 27a0 <hash_validate+0x154>
    2794:	ldr	x1, [x0, #40]
    2798:	ldr	x0, [x19, #104]
    279c:	blr	x1
    27a0:	ldr	x0, [x19, #128]
    27a4:	cbz	x0, 27b4 <hash_validate+0x168>
    27a8:	ldr	x1, [x0, #40]
    27ac:	ldr	x0, [x19, #112]
    27b0:	blr	x1
    27b4:	str	wzr, [x19, #96]
    27b8:	str	wzr, [x19, #4]
    27bc:	mov	w0, #0x1                   	// #1
    27c0:	ldp	x19, x20, [sp, #16]
    27c4:	ldp	x21, x22, [sp, #32]
    27c8:	ldr	x23, [sp, #48]
    27cc:	ldp	x29, x30, [sp], #64
    27d0:	ret
    27d4:	mov	w0, #0x0                   	// #0
    27d8:	b	27c0 <hash_validate+0x174>
    27dc:	mov	w0, #0x5                   	// #5
    27e0:	b	27c0 <hash_validate+0x174>
    27e4:	ldr	x2, [x20, #8]
    27e8:	ldr	x1, [x20, #16]
    27ec:	mov	w0, #0x0                   	// #0
    27f0:	cmp	x2, x1
    27f4:	b.eq	27c0 <hash_validate+0x174>  // b.none
    27f8:	ldr	x0, [x19, #144]
    27fc:	cbnz	x0, 26a0 <hash_validate+0x54>
    2800:	ldr	w0, [x19, #4]
    2804:	add	w0, w0, #0x8
    2808:	str	w0, [x19, #4]
    280c:	b	26a0 <hash_validate+0x54>

0000000000002810 <fill_temp>:
    2810:	stp	x29, x30, [sp, #-48]!
    2814:	mov	x29, sp
    2818:	stp	x19, x20, [sp, #16]
    281c:	str	x21, [sp, #32]
    2820:	mov	x20, x0
    2824:	mov	x21, x1
    2828:	ldr	x0, [x0, #280]
    282c:	ldr	x1, [x1, #8]
    2830:	ldr	x19, [x20, #288]
    2834:	sub	x19, x19, x0
    2838:	ldr	x2, [x21, #16]
    283c:	sub	x2, x2, x1
    2840:	cmp	x19, x2
    2844:	csel	x19, x19, x2, ls  // ls = plast
    2848:	ldr	x4, [x21]
    284c:	add	x3, x20, #0x128
    2850:	mov	x2, x19
    2854:	add	x1, x4, x1
    2858:	add	x0, x3, x0
    285c:	bl	0 <grub_memmove>
    2860:	ldr	x0, [x21, #8]
    2864:	add	x0, x0, x19
    2868:	str	x0, [x21, #8]
    286c:	ldr	x0, [x20, #280]
    2870:	add	x19, x19, x0
    2874:	str	x19, [x20, #280]
    2878:	ldr	x0, [x20, #288]
    287c:	cmp	x19, x0
    2880:	b.eq	2898 <fill_temp+0x88>  // b.none
    2884:	mov	w0, #0x0                   	// #0
    2888:	ldp	x19, x20, [sp, #16]
    288c:	ldr	x21, [sp, #32]
    2890:	ldp	x29, x30, [sp], #48
    2894:	ret
    2898:	str	xzr, [x20, #280]
    289c:	mov	w0, #0x1                   	// #1
    28a0:	b	2888 <fill_temp+0x78>

00000000000028a4 <xz_dec_reset>:
    28a4:	stp	x29, x30, [sp, #-32]!
    28a8:	mov	x29, sp
    28ac:	stp	x19, x20, [sp, #16]
    28b0:	mov	x19, x0
    28b4:	str	wzr, [x0]
    28b8:	str	wzr, [x0, #156]
    28bc:	str	wzr, [x0, #4]
    28c0:	ldr	x20, [x0, #224]
    28c4:	mov	x2, #0x30                  	// #48
    28c8:	mov	w1, #0x0                   	// #0
    28cc:	add	x0, x0, #0xb8
    28d0:	bl	0 <grub_memset>
    28d4:	str	x20, [x19, #224]
    28d8:	ldr	x20, [x19, #272]
    28dc:	mov	x2, #0x30                  	// #48
    28e0:	mov	w1, #0x0                   	// #0
    28e4:	add	x0, x19, #0xe8
    28e8:	bl	0 <grub_memset>
    28ec:	str	x20, [x19, #272]
    28f0:	str	xzr, [x19, #280]
    28f4:	mov	x0, #0xc                   	// #12
    28f8:	str	x0, [x19, #288]
    28fc:	ldr	x0, [x19, #120]
    2900:	cbz	x0, 2930 <xz_dec_reset+0x8c>
    2904:	ldr	x1, [x0, #40]
    2908:	ldr	x0, [x19, #104]
    290c:	blr	x1
    2910:	ldr	x0, [x19, #120]
    2914:	ldr	x1, [x0, #40]
    2918:	ldr	x0, [x19, #272]
    291c:	blr	x1
    2920:	ldr	x0, [x19, #120]
    2924:	ldr	x1, [x0, #40]
    2928:	ldr	x0, [x19, #224]
    292c:	blr	x1
    2930:	str	wzr, [x19, #96]
    2934:	ldp	x19, x20, [sp, #16]
    2938:	ldp	x29, x30, [sp], #32
    293c:	ret

0000000000002940 <xz_dec_run>:
    2940:	stp	x29, x30, [sp, #-112]!
    2944:	mov	x29, sp
    2948:	stp	x19, x20, [sp, #16]
    294c:	stp	x21, x22, [sp, #32]
    2950:	stp	x23, x24, [sp, #48]
    2954:	stp	x25, x26, [sp, #64]
    2958:	stp	x27, x28, [sp, #80]
    295c:	mov	x19, x0
    2960:	mov	x20, x1
    2964:	ldr	w0, [x0, #152]
    2968:	cbnz	w0, 2a18 <xz_dec_run+0xd8>
    296c:	ldr	x22, [x20, #8]
    2970:	ldr	x23, [x20, #32]
    2974:	str	x22, [x19, #16]
    2978:	mov	w25, #0x5                   	// #5
    297c:	mov	w24, #0x4                   	// #4
    2980:	add	x26, x19, #0xd0
    2984:	ldr	w0, [x19]
    2988:	cmp	w0, #0x5
    298c:	b.eq	29f0 <xz_dec_run+0xb0>  // b.none
    2990:	b.hi	2a64 <xz_dec_run+0x124>  // b.pmore
    2994:	cmp	w0, #0x2
    2998:	b.eq	2d64 <xz_dec_run+0x424>  // b.none
    299c:	b.ls	2a24 <xz_dec_run+0xe4>  // b.plast
    29a0:	cmp	w0, #0x3
    29a4:	b.eq	2f7c <xz_dec_run+0x63c>  // b.none
    29a8:	ldr	x0, [x19, #184]
    29ac:	tst	x0, #0x3
    29b0:	b.eq	29ec <xz_dec_run+0xac>  // b.none
    29b4:	ldr	x0, [x20, #8]
    29b8:	ldr	x1, [x20, #16]
    29bc:	cmp	x0, x1
    29c0:	b.eq	337c <xz_dec_run+0xa3c>  // b.none
    29c4:	ldr	x1, [x20]
    29c8:	add	x2, x0, #0x1
    29cc:	str	x2, [x20, #8]
    29d0:	ldrb	w0, [x1, x0]
    29d4:	cbnz	w0, 3450 <xz_dec_run+0xb10>
    29d8:	ldr	x0, [x19, #184]
    29dc:	add	x0, x0, #0x1
    29e0:	str	x0, [x19, #184]
    29e4:	tst	x0, #0x3
    29e8:	b.ne	29b4 <xz_dec_run+0x74>  // b.any
    29ec:	str	w25, [x19]
    29f0:	mov	w2, #0x0                   	// #0
    29f4:	mov	x1, x20
    29f8:	mov	x0, x19
    29fc:	bl	264c <hash_validate>
    2a00:	mov	w21, w0
    2a04:	cmp	w0, #0x1
    2a08:	b.ne	3044 <xz_dec_run+0x704>  // b.any
    2a0c:	mov	w0, #0x1                   	// #1
    2a10:	str	w0, [x19]
    2a14:	b	2984 <xz_dec_run+0x44>
    2a18:	mov	x0, x19
    2a1c:	bl	28a4 <xz_dec_reset>
    2a20:	b	296c <xz_dec_run+0x2c>
    2a24:	cbz	w0, 2b3c <xz_dec_run+0x1fc>
    2a28:	cmp	w0, #0x1
    2a2c:	b.ne	2988 <xz_dec_run+0x48>  // b.any
    2a30:	ldr	x0, [x20, #8]
    2a34:	ldr	x1, [x20, #16]
    2a38:	cmp	x0, x1
    2a3c:	b.eq	2a88 <xz_dec_run+0x148>  // b.none
    2a40:	ldr	x1, [x20]
    2a44:	ldrb	w1, [x1, x0]
    2a48:	cbnz	w1, 2d44 <xz_dec_run+0x404>
    2a4c:	add	x1, x0, #0x1
    2a50:	str	x1, [x20, #8]
    2a54:	str	x0, [x19, #16]
    2a58:	mov	w0, #0x6                   	// #6
    2a5c:	str	w0, [x19]
    2a60:	b	2984 <xz_dec_run+0x44>
    2a64:	cmp	w0, #0x8
    2a68:	b.eq	325c <xz_dec_run+0x91c>  // b.none
    2a6c:	b.ls	2ac4 <xz_dec_run+0x184>  // b.plast
    2a70:	cmp	w0, #0x9
    2a74:	b.ne	2988 <xz_dec_run+0x48>  // b.any
    2a78:	mov	x1, x20
    2a7c:	mov	x0, x19
    2a80:	bl	2810 <fill_temp>
    2a84:	cbnz	w0, 328c <xz_dec_run+0x94c>
    2a88:	ldr	w0, [x19, #152]
    2a8c:	cbnz	w0, 3384 <xz_dec_run+0xa44>
    2a90:	ldr	x0, [x20, #8]
    2a94:	mov	w21, #0x0                   	// #0
    2a98:	cmp	x0, x22
    2a9c:	b.eq	3354 <xz_dec_run+0xa14>  // b.none
    2aa0:	str	wzr, [x19, #156]
    2aa4:	mov	w0, w21
    2aa8:	ldp	x19, x20, [sp, #16]
    2aac:	ldp	x21, x22, [sp, #32]
    2ab0:	ldp	x23, x24, [sp, #48]
    2ab4:	ldp	x25, x26, [sp, #64]
    2ab8:	ldp	x27, x28, [sp, #80]
    2abc:	ldp	x29, x30, [sp], #112
    2ac0:	ret
    2ac4:	cmp	w0, #0x6
    2ac8:	b.eq	2b24 <xz_dec_run+0x1e4>  // b.none
    2acc:	cmp	w0, #0x7
    2ad0:	b.ne	2988 <xz_dec_run+0x48>  // b.any
    2ad4:	ldr	x1, [x20, #8]
    2ad8:	ldr	x0, [x19, #240]
    2adc:	add	x0, x1, x0
    2ae0:	ldr	x2, [x19, #16]
    2ae4:	sub	x0, x0, x2
    2ae8:	tst	x0, #0x3
    2aec:	b.eq	31c8 <xz_dec_run+0x888>  // b.none
    2af0:	ldr	x0, [x20, #16]
    2af4:	cmp	x0, x1
    2af8:	b.eq	31b8 <xz_dec_run+0x878>  // b.none
    2afc:	ldr	x0, [x20]
    2b00:	add	x2, x1, #0x1
    2b04:	str	x2, [x20, #8]
    2b08:	ldrb	w0, [x0, x1]
    2b0c:	cbz	w0, 2ad4 <xz_dec_run+0x194>
    2b10:	ldr	w0, [x19, #152]
    2b14:	mov	w21, #0x5                   	// #5
    2b18:	cbz	w0, 2aa0 <xz_dec_run+0x160>
    2b1c:	mov	w21, #0x5                   	// #5
    2b20:	b	3398 <xz_dec_run+0xa58>
    2b24:	add	x24, x20, #0x8
    2b28:	mov	w26, #0x2                   	// #2
    2b2c:	mov	w25, #0x1                   	// #1
    2b30:	add	x28, x19, #0x100
    2b34:	mov	x27, #0x10                  	// #16
    2b38:	b	3124 <xz_dec_run+0x7e4>
    2b3c:	mov	x1, x20
    2b40:	mov	x0, x19
    2b44:	bl	2810 <fill_temp>
    2b48:	cbz	w0, 2a88 <xz_dec_run+0x148>
    2b4c:	mov	x2, #0x6                   	// #6
    2b50:	adrp	x0, 0 <grub_xzio_close>
    2b54:	ldr	x1, [x0]
    2b58:	add	x0, x19, #0x128
    2b5c:	bl	0 <grub_memcmp>
    2b60:	cbnz	w0, 340c <xz_dec_run+0xacc>
    2b64:	adrp	x0, 0 <grub_xzio_close>
    2b68:	ldr	x0, [x0]
    2b6c:	bl	0 <grub_crypto_lookup_md_by_name>
    2b70:	str	x0, [x19, #128]
    2b74:	cbz	x0, 2bd4 <xz_dec_run+0x294>
    2b78:	ldr	x1, [x0, #32]
    2b7c:	cmp	x1, #0x4
    2b80:	b.eq	2b8c <xz_dec_run+0x24c>  // b.none
    2b84:	mov	w21, #0x5                   	// #5
    2b88:	b	3410 <xz_dec_run+0xad0>
    2b8c:	mov	x3, #0x2                   	// #2
    2b90:	add	x2, x19, #0x12e
    2b94:	add	x1, sp, #0x68
    2b98:	bl	0 <grub_crypto_hash>
    2b9c:	ldrb	w0, [x19, #307]
    2ba0:	strb	w0, [sp, #96]
    2ba4:	ldrb	w0, [x19, #306]
    2ba8:	strb	w0, [sp, #97]
    2bac:	ldrb	w0, [x19, #305]
    2bb0:	strb	w0, [sp, #98]
    2bb4:	ldrb	w0, [x19, #304]
    2bb8:	strb	w0, [sp, #99]
    2bbc:	ldr	x0, [x19, #128]
    2bc0:	ldr	x2, [x0, #32]
    2bc4:	add	x1, sp, #0x68
    2bc8:	add	x0, sp, #0x60
    2bcc:	bl	0 <grub_memcmp>
    2bd0:	cbnz	w0, 2b84 <xz_dec_run+0x244>
    2bd4:	ldrb	w0, [x19, #302]
    2bd8:	cbnz	w0, 341c <xz_dec_run+0xadc>
    2bdc:	ldrb	w0, [x19, #303]
    2be0:	cmp	w0, #0xa
    2be4:	b.hi	3424 <xz_dec_run+0xae4>  // b.pmore
    2be8:	adrp	x1, 0 <grub_xzio_close>
    2bec:	ldr	x1, [x1]
    2bf0:	add	x1, x1, w0, sxtw #4
    2bf4:	ldr	x1, [x1, #8]
    2bf8:	cmp	x1, #0x0
    2bfc:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    2c00:	b.ne	342c <xz_dec_run+0xaec>  // b.any
    2c04:	strb	w0, [x19, #136]
    2c08:	ldr	x0, [x19, #128]
    2c0c:	cbz	x0, 2c2c <xz_dec_run+0x2ec>
    2c10:	ldr	x0, [x0, #72]
    2c14:	bl	0 <grub_malloc>
    2c18:	str	x0, [x19, #112]
    2c1c:	cbz	x0, 3434 <xz_dec_run+0xaf4>
    2c20:	ldr	x1, [x19, #128]
    2c24:	ldr	x1, [x1, #40]
    2c28:	blr	x1
    2c2c:	ldrb	w0, [x19, #303]
    2c30:	cbnz	w0, 2c4c <xz_dec_run+0x30c>
    2c34:	str	xzr, [x19, #120]
    2c38:	str	xzr, [x19, #144]
    2c3c:	str	wzr, [x19, #96]
    2c40:	mov	w0, #0x1                   	// #1
    2c44:	str	w0, [x19]
    2c48:	b	2a30 <xz_dec_run+0xf0>
    2c4c:	adrp	x1, 0 <grub_xzio_close>
    2c50:	ldr	x1, [x1]
    2c54:	add	x1, x1, #0x8
    2c58:	sbfiz	x0, x0, #4, #32
    2c5c:	add	x2, x1, x0
    2c60:	ldr	x2, [x2, #8]
    2c64:	str	x2, [x19, #144]
    2c68:	ldr	x0, [x1, x0]
    2c6c:	bl	0 <grub_crypto_lookup_md_by_name>
    2c70:	str	x0, [x19, #120]
    2c74:	cbz	x0, 2c3c <xz_dec_run+0x2fc>
    2c78:	ldr	x2, [x0, #32]
    2c7c:	ldr	x1, [x19, #144]
    2c80:	cmp	x2, x1
    2c84:	b.eq	2c90 <xz_dec_run+0x350>  // b.none
    2c88:	mov	w21, #0x4                   	// #4
    2c8c:	b	3410 <xz_dec_run+0xad0>
    2c90:	ldr	x0, [x0, #72]
    2c94:	bl	0 <grub_malloc>
    2c98:	str	x0, [x19, #104]
    2c9c:	cbz	x0, 2cfc <xz_dec_run+0x3bc>
    2ca0:	ldr	x0, [x19, #120]
    2ca4:	ldr	x0, [x0, #72]
    2ca8:	bl	0 <grub_malloc>
    2cac:	str	x0, [x19, #272]
    2cb0:	cbz	x0, 2d0c <xz_dec_run+0x3cc>
    2cb4:	ldr	x0, [x19, #120]
    2cb8:	ldr	x0, [x0, #72]
    2cbc:	bl	0 <grub_malloc>
    2cc0:	str	x0, [x19, #224]
    2cc4:	cbz	x0, 2d24 <xz_dec_run+0x3e4>
    2cc8:	ldr	x0, [x19, #120]
    2ccc:	ldr	x1, [x0, #40]
    2cd0:	ldr	x0, [x19, #104]
    2cd4:	blr	x1
    2cd8:	ldr	x0, [x19, #120]
    2cdc:	ldr	x1, [x0, #40]
    2ce0:	ldr	x0, [x19, #272]
    2ce4:	blr	x1
    2ce8:	ldr	x0, [x19, #120]
    2cec:	ldr	x1, [x0, #40]
    2cf0:	ldr	x0, [x19, #224]
    2cf4:	blr	x1
    2cf8:	b	2c3c <xz_dec_run+0x2fc>
    2cfc:	ldr	x0, [x19, #112]
    2d00:	bl	0 <grub_free>
    2d04:	mov	w21, #0x2                   	// #2
    2d08:	b	3410 <xz_dec_run+0xad0>
    2d0c:	ldr	x0, [x19, #104]
    2d10:	bl	0 <grub_free>
    2d14:	ldr	x0, [x19, #112]
    2d18:	bl	0 <grub_free>
    2d1c:	mov	w21, #0x2                   	// #2
    2d20:	b	3410 <xz_dec_run+0xad0>
    2d24:	ldr	x0, [x19, #272]
    2d28:	bl	0 <grub_free>
    2d2c:	ldr	x0, [x19, #104]
    2d30:	bl	0 <grub_free>
    2d34:	ldr	x0, [x19, #112]
    2d38:	bl	0 <grub_free>
    2d3c:	mov	w21, #0x2                   	// #2
    2d40:	b	3410 <xz_dec_run+0xad0>
    2d44:	add	w1, w1, #0x1
    2d48:	lsl	w1, w1, #2
    2d4c:	str	w1, [x19, #176]
    2d50:	mov	w1, w1
    2d54:	str	x1, [x19, #288]
    2d58:	str	xzr, [x19, #280]
    2d5c:	mov	w0, #0x2                   	// #2
    2d60:	str	w0, [x19]
    2d64:	mov	x1, x20
    2d68:	mov	x0, x19
    2d6c:	bl	2810 <fill_temp>
    2d70:	cbz	w0, 337c <xz_dec_run+0xa3c>
    2d74:	ldr	x3, [x19, #288]
    2d78:	sub	x3, x3, #0x4
    2d7c:	str	x3, [x19, #288]
    2d80:	ldr	x0, [x19, #128]
    2d84:	cbz	x0, 2df4 <xz_dec_run+0x4b4>
    2d88:	ldr	x1, [x0, #32]
    2d8c:	cmp	x1, #0x4
    2d90:	b.eq	2da8 <xz_dec_run+0x468>  // b.none
    2d94:	mov	w21, #0x5                   	// #5
    2d98:	ldr	w0, [x19, #152]
    2d9c:	cbz	w0, 2aa0 <xz_dec_run+0x160>
    2da0:	cbz	w21, 3384 <xz_dec_run+0xa44>
    2da4:	b	3460 <xz_dec_run+0xb20>
    2da8:	add	x2, x19, #0x128
    2dac:	add	x1, sp, #0x68
    2db0:	bl	0 <grub_crypto_hash>
    2db4:	ldr	x0, [x19, #288]
    2db8:	add	x0, x19, x0
    2dbc:	ldrb	w1, [x0, #296]
    2dc0:	strb	w1, [sp, #99]
    2dc4:	ldrb	w1, [x0, #297]
    2dc8:	strb	w1, [sp, #98]
    2dcc:	ldrb	w1, [x0, #298]
    2dd0:	strb	w1, [sp, #97]
    2dd4:	ldrb	w0, [x0, #299]
    2dd8:	strb	w0, [sp, #96]
    2ddc:	ldr	x0, [x19, #128]
    2de0:	ldr	x2, [x0, #32]
    2de4:	add	x1, sp, #0x68
    2de8:	add	x0, sp, #0x60
    2dec:	bl	0 <grub_memcmp>
    2df0:	cbnz	w0, 2d94 <xz_dec_run+0x454>
    2df4:	mov	x0, #0x2                   	// #2
    2df8:	str	x0, [x19, #280]
    2dfc:	ldrb	w0, [x19, #297]
    2e00:	tst	w0, #0x3e
    2e04:	b.ne	33c4 <xz_dec_run+0xa84>  // b.any
    2e08:	tbnz	w0, #6, 2f18 <xz_dec_run+0x5d8>
    2e0c:	mov	x0, #0xffffffffffffffff    	// #-1
    2e10:	str	x0, [x19, #160]
    2e14:	ldrsb	w0, [x19, #297]
    2e18:	tbnz	w0, #31, 2f40 <xz_dec_run+0x600>
    2e1c:	mov	x0, #0xffffffffffffffff    	// #-1
    2e20:	str	x0, [x19, #168]
    2e24:	ldrb	w0, [x19, #297]
    2e28:	and	w0, w0, #0x1
    2e2c:	str	w0, [x19, #1336]
    2e30:	cbz	w0, 2e80 <xz_dec_run+0x540>
    2e34:	ldr	x0, [x19, #280]
    2e38:	ldr	x1, [x19, #288]
    2e3c:	sub	x1, x1, x0
    2e40:	cmp	x1, #0x1
    2e44:	b.ls	33dc <xz_dec_run+0xa9c>  // b.plast
    2e48:	add	x1, x0, #0x1
    2e4c:	str	x1, [x19, #280]
    2e50:	add	x0, x19, x0
    2e54:	ldrb	w1, [x0, #296]
    2e58:	ldr	x0, [x19, #1328]
    2e5c:	bl	f00 <xz_dec_bcj_reset>
    2e60:	mov	w21, w0
    2e64:	cbnz	w0, 2d98 <xz_dec_run+0x458>
    2e68:	ldr	x0, [x19, #280]
    2e6c:	add	x1, x0, #0x1
    2e70:	str	x1, [x19, #280]
    2e74:	add	x0, x19, x0
    2e78:	ldrb	w0, [x0, #296]
    2e7c:	cbnz	w0, 33e4 <xz_dec_run+0xaa4>
    2e80:	ldr	x2, [x19, #288]
    2e84:	ldr	x0, [x19, #280]
    2e88:	sub	x1, x2, x0
    2e8c:	cmp	x1, #0x1
    2e90:	b.ls	33ec <xz_dec_run+0xaac>  // b.plast
    2e94:	add	x1, x0, #0x1
    2e98:	str	x1, [x19, #280]
    2e9c:	add	x3, x19, x0
    2ea0:	ldrb	w3, [x3, #296]
    2ea4:	cmp	w3, #0x21
    2ea8:	b.ne	33f4 <xz_dec_run+0xab4>  // b.any
    2eac:	add	x3, x0, #0x2
    2eb0:	str	x3, [x19, #280]
    2eb4:	add	x1, x19, x1
    2eb8:	ldrb	w1, [x1, #296]
    2ebc:	cmp	w1, #0x1
    2ec0:	b.ne	33fc <xz_dec_run+0xabc>  // b.any
    2ec4:	cmp	x2, x3
    2ec8:	b.eq	3404 <xz_dec_run+0xac4>  // b.none
    2ecc:	add	x0, x0, #0x3
    2ed0:	str	x0, [x19, #280]
    2ed4:	add	x3, x19, x3
    2ed8:	ldrb	w1, [x3, #296]
    2edc:	ldr	x0, [x19, #1320]
    2ee0:	bl	246c <xz_dec_lzma2_reset>
    2ee4:	mov	w21, w0
    2ee8:	cbnz	w0, 2d98 <xz_dec_run+0x458>
    2eec:	ldr	x2, [x19, #288]
    2ef0:	ldr	x0, [x19, #280]
    2ef4:	cmp	x0, x2
    2ef8:	b.cs	2f68 <xz_dec_run+0x628>  // b.hs, b.nlast
    2efc:	add	x1, x0, #0x1
    2f00:	str	x1, [x19, #280]
    2f04:	add	x0, x19, x0
    2f08:	ldrb	w0, [x0, #296]
    2f0c:	cbz	w0, 2ef0 <xz_dec_run+0x5b0>
    2f10:	mov	w21, #0x4                   	// #4
    2f14:	b	2d98 <xz_dec_run+0x458>
    2f18:	ldr	x3, [x19, #288]
    2f1c:	add	x2, x19, #0x118
    2f20:	add	x1, x19, #0x128
    2f24:	mov	x0, x19
    2f28:	bl	2548 <dec_vli>
    2f2c:	cmp	w0, #0x1
    2f30:	b.ne	33cc <xz_dec_run+0xa8c>  // b.any
    2f34:	ldr	x0, [x19, #8]
    2f38:	str	x0, [x19, #160]
    2f3c:	b	2e14 <xz_dec_run+0x4d4>
    2f40:	ldr	x3, [x19, #288]
    2f44:	add	x2, x19, #0x118
    2f48:	add	x1, x19, #0x128
    2f4c:	mov	x0, x19
    2f50:	bl	2548 <dec_vli>
    2f54:	cmp	w0, #0x1
    2f58:	b.ne	33d4 <xz_dec_run+0xa94>  // b.any
    2f5c:	ldr	x0, [x19, #8]
    2f60:	str	x0, [x19, #168]
    2f64:	b	2e24 <xz_dec_run+0x4e4>
    2f68:	str	xzr, [x19, #280]
    2f6c:	str	xzr, [x19, #184]
    2f70:	str	xzr, [x19, #192]
    2f74:	mov	w0, #0x3                   	// #3
    2f78:	str	w0, [x19]
    2f7c:	ldr	x0, [x20, #8]
    2f80:	str	x0, [x19, #16]
    2f84:	ldr	x0, [x20, #32]
    2f88:	str	x0, [x19, #24]
    2f8c:	ldr	w0, [x19, #1336]
    2f90:	cbz	w0, 3054 <xz_dec_run+0x714>
    2f94:	mov	x2, x20
    2f98:	ldr	x1, [x19, #1320]
    2f9c:	ldr	x0, [x19, #1328]
    2fa0:	bl	cfc <xz_dec_bcj_run>
    2fa4:	mov	w21, w0
    2fa8:	ldr	x0, [x19, #184]
    2fac:	ldr	x1, [x20, #8]
    2fb0:	add	x0, x0, x1
    2fb4:	ldr	x1, [x19, #16]
    2fb8:	sub	x0, x0, x1
    2fbc:	str	x0, [x19, #184]
    2fc0:	ldr	x1, [x19, #24]
    2fc4:	ldr	x2, [x19, #192]
    2fc8:	ldr	x3, [x20, #32]
    2fcc:	add	x2, x2, x3
    2fd0:	sub	x2, x2, x1
    2fd4:	str	x2, [x19, #192]
    2fd8:	ldr	x3, [x19, #160]
    2fdc:	cmp	x0, x3
    2fe0:	b.hi	33a4 <xz_dec_run+0xa64>  // b.pmore
    2fe4:	ldr	x0, [x19, #168]
    2fe8:	cmp	x2, x0
    2fec:	b.hi	33ac <xz_dec_run+0xa6c>  // b.pmore
    2ff0:	ldr	x0, [x19, #120]
    2ff4:	cbz	x0, 3014 <xz_dec_run+0x6d4>
    2ff8:	ldr	x2, [x20, #32]
    2ffc:	ldr	x4, [x20, #24]
    3000:	ldr	x3, [x0, #48]
    3004:	sub	x2, x2, x1
    3008:	add	x1, x4, x1
    300c:	ldr	x0, [x19, #104]
    3010:	blr	x3
    3014:	ldr	x0, [x19, #128]
    3018:	cbz	x0, 303c <xz_dec_run+0x6fc>
    301c:	ldr	x1, [x19, #24]
    3020:	ldr	x2, [x20, #32]
    3024:	ldr	x4, [x20, #24]
    3028:	ldr	x3, [x0, #48]
    302c:	sub	x2, x2, x1
    3030:	add	x1, x4, x1
    3034:	ldr	x0, [x19, #112]
    3038:	blr	x3
    303c:	cmp	w21, #0x1
    3040:	b.eq	3068 <xz_dec_run+0x728>  // b.none
    3044:	ldr	w0, [x19, #152]
    3048:	cbnz	w0, 2da0 <xz_dec_run+0x460>
    304c:	cbz	w21, 2a90 <xz_dec_run+0x150>
    3050:	b	2aa0 <xz_dec_run+0x160>
    3054:	mov	x1, x20
    3058:	ldr	x0, [x19, #1320]
    305c:	bl	1bcc <xz_dec_lzma2_run>
    3060:	mov	w21, w0
    3064:	b	2fa8 <xz_dec_run+0x668>
    3068:	ldr	x0, [x19, #160]
    306c:	cmn	x0, #0x1
    3070:	b.eq	3080 <xz_dec_run+0x740>  // b.none
    3074:	ldr	x1, [x19, #184]
    3078:	cmp	x0, x1
    307c:	b.ne	33b4 <xz_dec_run+0xa74>  // b.any
    3080:	ldr	x0, [x19, #168]
    3084:	cmn	x0, #0x1
    3088:	b.eq	3098 <xz_dec_run+0x758>  // b.none
    308c:	ldr	x1, [x19, #192]
    3090:	cmp	x0, x1
    3094:	b.ne	33bc <xz_dec_run+0xa7c>  // b.any
    3098:	ldr	w0, [x19, #176]
    309c:	ldr	x1, [x19, #144]
    30a0:	add	x0, x0, x1
    30a4:	ldr	x1, [x19, #208]
    30a8:	ldr	x2, [x19, #184]
    30ac:	add	x1, x1, x2
    30b0:	add	x0, x0, x1
    30b4:	str	x0, [x19, #208]
    30b8:	ldr	x0, [x19, #216]
    30bc:	ldr	x1, [x19, #192]
    30c0:	add	x0, x0, x1
    30c4:	str	x0, [x19, #216]
    30c8:	ldr	x0, [x19, #120]
    30cc:	cbz	x0, 30e4 <xz_dec_run+0x7a4>
    30d0:	ldr	x3, [x0, #48]
    30d4:	mov	x2, #0x10                  	// #16
    30d8:	mov	x1, x26
    30dc:	ldr	x0, [x19, #224]
    30e0:	blr	x3
    30e4:	ldr	x0, [x19, #200]
    30e8:	add	x0, x0, #0x1
    30ec:	str	x0, [x19, #200]
    30f0:	str	w24, [x19]
    30f4:	b	29a8 <xz_dec_run+0x68>
    30f8:	mov	x1, x20
    30fc:	mov	x0, x19
    3100:	bl	25c8 <index_update>
    3104:	b	3044 <xz_dec_run+0x704>
    3108:	ldr	x0, [x19, #256]
    310c:	ldr	x1, [x19, #8]
    3110:	add	x0, x0, x1
    3114:	str	x0, [x19, #256]
    3118:	str	w26, [x19, #232]
    311c:	ldr	x0, [x19, #248]
    3120:	cbz	x0, 343c <xz_dec_run+0xafc>
    3124:	ldr	x3, [x20, #16]
    3128:	mov	x2, x24
    312c:	ldr	x1, [x20]
    3130:	mov	x0, x19
    3134:	bl	2548 <dec_vli>
    3138:	mov	w21, w0
    313c:	cmp	w0, #0x1
    3140:	b.ne	30f8 <xz_dec_run+0x7b8>  // b.any
    3144:	ldr	w0, [x19, #232]
    3148:	cmp	w0, #0x1
    314c:	b.eq	3108 <xz_dec_run+0x7c8>  // b.none
    3150:	cmp	w0, #0x2
    3154:	b.eq	3178 <xz_dec_run+0x838>  // b.none
    3158:	cbnz	w0, 311c <xz_dec_run+0x7dc>
    315c:	ldr	x0, [x19, #8]
    3160:	str	x0, [x19, #248]
    3164:	ldr	x1, [x19, #200]
    3168:	cmp	x0, x1
    316c:	b.ne	3448 <xz_dec_run+0xb08>  // b.any
    3170:	str	w25, [x19, #232]
    3174:	b	311c <xz_dec_run+0x7dc>
    3178:	ldr	x0, [x19, #264]
    317c:	ldr	x1, [x19, #8]
    3180:	add	x0, x0, x1
    3184:	str	x0, [x19, #264]
    3188:	ldr	x0, [x19, #120]
    318c:	cbz	x0, 31a4 <xz_dec_run+0x864>
    3190:	ldr	x3, [x0, #48]
    3194:	mov	x2, x27
    3198:	mov	x1, x28
    319c:	ldr	x0, [x19, #272]
    31a0:	blr	x3
    31a4:	ldr	x0, [x19, #248]
    31a8:	sub	x0, x0, #0x1
    31ac:	str	x0, [x19, #248]
    31b0:	str	w25, [x19, #232]
    31b4:	b	311c <xz_dec_run+0x7dc>
    31b8:	mov	x1, x20
    31bc:	mov	x0, x19
    31c0:	bl	25c8 <index_update>
    31c4:	b	2a88 <xz_dec_run+0x148>
    31c8:	mov	x1, x20
    31cc:	mov	x0, x19
    31d0:	bl	25c8 <index_update>
    31d4:	ldr	x0, [x19, #120]
    31d8:	cbz	x0, 3254 <xz_dec_run+0x914>
    31dc:	ldr	x1, [x0, #56]
    31e0:	ldr	x0, [x19, #224]
    31e4:	blr	x1
    31e8:	ldr	x0, [x19, #120]
    31ec:	ldr	x1, [x0, #56]
    31f0:	ldr	x0, [x19, #272]
    31f4:	blr	x1
    31f8:	ldr	x1, [x19, #208]
    31fc:	ldr	x0, [x19, #256]
    3200:	cmp	x1, x0
    3204:	b.ne	2b10 <xz_dec_run+0x1d0>  // b.any
    3208:	ldr	x1, [x19, #216]
    320c:	ldr	x0, [x19, #264]
    3210:	cmp	x1, x0
    3214:	b.ne	2b10 <xz_dec_run+0x1d0>  // b.any
    3218:	ldr	x0, [x19, #120]
    321c:	ldr	x1, [x0, #64]
    3220:	ldr	x0, [x19, #224]
    3224:	blr	x1
    3228:	mov	x21, x0
    322c:	ldr	x0, [x19, #120]
    3230:	ldr	x1, [x0, #64]
    3234:	ldr	x0, [x19, #272]
    3238:	blr	x1
    323c:	ldr	x1, [x19, #120]
    3240:	ldr	x2, [x1, #32]
    3244:	mov	x1, x0
    3248:	mov	x0, x21
    324c:	bl	0 <grub_memcmp>
    3250:	cbnz	w0, 2b10 <xz_dec_run+0x1d0>
    3254:	mov	w0, #0x8                   	// #8
    3258:	str	w0, [x19]
    325c:	mov	w2, #0x1                   	// #1
    3260:	mov	x1, x20
    3264:	mov	x0, x19
    3268:	bl	264c <hash_validate>
    326c:	mov	w21, w0
    3270:	cmp	w0, #0x1
    3274:	b.ne	3044 <xz_dec_run+0x704>  // b.any
    3278:	mov	x0, #0xc                   	// #12
    327c:	str	x0, [x19, #288]
    3280:	mov	w0, #0x9                   	// #9
    3284:	str	w0, [x19]
    3288:	b	2a78 <xz_dec_run+0x138>
    328c:	mov	x2, #0x2                   	// #2
    3290:	adrp	x0, 0 <grub_xzio_close>
    3294:	ldr	x1, [x0]
    3298:	add	x0, x19, #0x132
    329c:	bl	0 <grub_memcmp>
    32a0:	cbnz	w0, 2b10 <xz_dec_run+0x1d0>
    32a4:	ldr	x0, [x19, #128]
    32a8:	cbz	x0, 3300 <xz_dec_run+0x9c0>
    32ac:	ldr	x1, [x0, #32]
    32b0:	cmp	x1, #0x4
    32b4:	b.ne	2b10 <xz_dec_run+0x1d0>  // b.any
    32b8:	mov	x3, #0x6                   	// #6
    32bc:	add	x2, x19, #0x12c
    32c0:	add	x1, sp, #0x68
    32c4:	bl	0 <grub_crypto_hash>
    32c8:	ldrb	w0, [x19, #299]
    32cc:	strb	w0, [sp, #96]
    32d0:	ldrb	w0, [x19, #298]
    32d4:	strb	w0, [sp, #97]
    32d8:	ldrb	w0, [x19, #297]
    32dc:	strb	w0, [sp, #98]
    32e0:	ldrb	w0, [x19, #296]
    32e4:	strb	w0, [sp, #99]
    32e8:	ldr	x0, [x19, #128]
    32ec:	ldr	x2, [x0, #32]
    32f0:	add	x1, sp, #0x68
    32f4:	add	x0, sp, #0x60
    32f8:	bl	0 <grub_memcmp>
    32fc:	cbnz	w0, 2b10 <xz_dec_run+0x1d0>
    3300:	ldr	x2, [x19, #240]
    3304:	ldrb	w0, [x19, #301]
    3308:	ldrb	w1, [x19, #302]
    330c:	lsl	w1, w1, #16
    3310:	orr	w0, w1, w0, lsl #8
    3314:	ldrb	w1, [x19, #303]
    3318:	ldrb	w3, [x19, #300]
    331c:	orr	w1, w3, w1, lsl #24
    3320:	orr	w0, w0, w1
    3324:	cmp	x0, x2, lsr #2
    3328:	b.ne	2b10 <xz_dec_run+0x1d0>  // b.any
    332c:	ldrb	w0, [x19, #304]
    3330:	cbnz	w0, 2b10 <xz_dec_run+0x1d0>
    3334:	ldrb	w1, [x19, #305]
    3338:	ldrb	w0, [x19, #136]
    333c:	cmp	w1, w0
    3340:	b.ne	2b10 <xz_dec_run+0x1d0>  // b.any
    3344:	ldr	w0, [x19, #152]
    3348:	mov	w21, #0x1                   	// #1
    334c:	cbz	w0, 2aa0 <xz_dec_run+0x160>
    3350:	b	2aa4 <xz_dec_run+0x164>
    3354:	ldr	x0, [x20, #32]
    3358:	cmp	x0, x23
    335c:	b.ne	2aa0 <xz_dec_run+0x160>  // b.any
    3360:	ldr	w21, [x19, #156]
    3364:	cmp	w21, #0x0
    3368:	mov	w0, #0x6                   	// #6
    336c:	csel	w21, w21, w0, eq  // eq = none
    3370:	mov	w0, #0x1                   	// #1
    3374:	str	w0, [x19, #156]
    3378:	b	2aa4 <xz_dec_run+0x164>
    337c:	ldr	w0, [x19, #152]
    3380:	cbz	w0, 2a90 <xz_dec_run+0x150>
    3384:	ldr	x1, [x20, #8]
    3388:	ldr	x0, [x20, #16]
    338c:	cmp	x1, x0
    3390:	cset	w0, ne  // ne = any
    3394:	add	w21, w0, #0x5
    3398:	str	x22, [x20, #8]
    339c:	str	x23, [x20, #32]
    33a0:	b	2aa4 <xz_dec_run+0x164>
    33a4:	mov	w21, #0x5                   	// #5
    33a8:	b	3044 <xz_dec_run+0x704>
    33ac:	mov	w21, #0x5                   	// #5
    33b0:	b	3044 <xz_dec_run+0x704>
    33b4:	mov	w21, #0x5                   	// #5
    33b8:	b	3044 <xz_dec_run+0x704>
    33bc:	mov	w21, #0x5                   	// #5
    33c0:	b	3044 <xz_dec_run+0x704>
    33c4:	mov	w21, #0x4                   	// #4
    33c8:	b	2d98 <xz_dec_run+0x458>
    33cc:	mov	w21, #0x5                   	// #5
    33d0:	b	2d98 <xz_dec_run+0x458>
    33d4:	mov	w21, #0x5                   	// #5
    33d8:	b	2d98 <xz_dec_run+0x458>
    33dc:	mov	w21, #0x4                   	// #4
    33e0:	b	2d98 <xz_dec_run+0x458>
    33e4:	mov	w21, #0x4                   	// #4
    33e8:	b	2d98 <xz_dec_run+0x458>
    33ec:	mov	w21, #0x5                   	// #5
    33f0:	b	2d98 <xz_dec_run+0x458>
    33f4:	mov	w21, #0x4                   	// #4
    33f8:	b	2d98 <xz_dec_run+0x458>
    33fc:	mov	w21, #0x4                   	// #4
    3400:	b	2d98 <xz_dec_run+0x458>
    3404:	mov	w21, #0x5                   	// #5
    3408:	b	2d98 <xz_dec_run+0x458>
    340c:	mov	w21, #0x3                   	// #3
    3410:	ldr	w0, [x19, #152]
    3414:	cbnz	w0, 3398 <xz_dec_run+0xa58>
    3418:	b	2aa0 <xz_dec_run+0x160>
    341c:	mov	w21, #0x4                   	// #4
    3420:	b	3410 <xz_dec_run+0xad0>
    3424:	mov	w21, #0x4                   	// #4
    3428:	b	3410 <xz_dec_run+0xad0>
    342c:	mov	w21, #0x4                   	// #4
    3430:	b	3410 <xz_dec_run+0xad0>
    3434:	mov	w21, #0x2                   	// #2
    3438:	b	3410 <xz_dec_run+0xad0>
    343c:	mov	w0, #0x7                   	// #7
    3440:	str	w0, [x19]
    3444:	b	2ad4 <xz_dec_run+0x194>
    3448:	mov	w21, #0x5                   	// #5
    344c:	b	3044 <xz_dec_run+0x704>
    3450:	ldr	w0, [x19, #152]
    3454:	mov	w21, #0x5                   	// #5
    3458:	cbz	w0, 2aa0 <xz_dec_run+0x160>
    345c:	mov	w21, #0x5                   	// #5
    3460:	cmp	w21, #0x1
    3464:	b.eq	2aa4 <xz_dec_run+0x164>  // b.none
    3468:	b	3398 <xz_dec_run+0xa58>
    346c:	nop
	...

0000000000003488 <xz_dec_init>:
    3488:	stp	x29, x30, [sp, #-32]!
    348c:	mov	x29, sp
    3490:	stp	x19, x20, [sp, #16]
    3494:	mov	w20, w0
    3498:	mov	x0, #0x540                 	// #1344
    349c:	bl	0 <grub_malloc>
    34a0:	mov	x19, x0
    34a4:	cbz	x0, 34e4 <xz_dec_init+0x5c>
    34a8:	mov	x2, #0x540                 	// #1344
    34ac:	mov	w1, #0x0                   	// #0
    34b0:	bl	0 <grub_memset>
    34b4:	cmp	w20, #0x0
    34b8:	cset	w0, eq  // eq = none
    34bc:	str	w0, [x19, #152]
    34c0:	bl	ed4 <xz_dec_bcj_create>
    34c4:	str	x0, [x19, #1328]
    34c8:	cbz	x0, 34fc <xz_dec_init+0x74>
    34cc:	mov	w0, w20
    34d0:	bl	23f0 <xz_dec_lzma2_create>
    34d4:	str	x0, [x19, #1320]
    34d8:	cbz	x0, 34f4 <xz_dec_init+0x6c>
    34dc:	mov	x0, x19
    34e0:	bl	28a4 <xz_dec_reset>
    34e4:	mov	x0, x19
    34e8:	ldp	x19, x20, [sp, #16]
    34ec:	ldp	x29, x30, [sp], #32
    34f0:	ret
    34f4:	ldr	x0, [x19, #1328]
    34f8:	bl	0 <grub_free>
    34fc:	mov	x0, x19
    3500:	bl	0 <grub_free>
    3504:	mov	x19, #0x0                   	// #0
    3508:	b	34e4 <xz_dec_init+0x5c>

000000000000350c <xz_dec_end>:
    350c:	cbz	x0, 3564 <xz_dec_end+0x58>
    3510:	stp	x29, x30, [sp, #-32]!
    3514:	mov	x29, sp
    3518:	str	x19, [sp, #16]
    351c:	mov	x19, x0
    3520:	ldr	x0, [x0, #1320]
    3524:	bl	250c <xz_dec_lzma2_end>
    3528:	ldr	x0, [x19, #272]
    352c:	bl	0 <grub_free>
    3530:	ldr	x0, [x19, #224]
    3534:	bl	0 <grub_free>
    3538:	ldr	x0, [x19, #104]
    353c:	bl	0 <grub_free>
    3540:	ldr	x0, [x19, #112]
    3544:	bl	0 <grub_free>
    3548:	ldr	x0, [x19, #1328]
    354c:	bl	0 <grub_free>
    3550:	mov	x0, x19
    3554:	bl	0 <grub_free>
    3558:	ldr	x19, [sp, #16]
    355c:	ldp	x29, x30, [sp], #32
    3560:	ret
    3564:	ret
