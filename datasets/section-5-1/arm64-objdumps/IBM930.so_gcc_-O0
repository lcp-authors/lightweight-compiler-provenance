
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//IBM930.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 26000 <gconv@@Base+0x25740>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xd8>:
     760:	adrp	x0, 26000 <gconv@@Base+0x25740>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 27000 <gconv@@Base+0x26740>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 27000 <gconv@@Base+0x26740>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 26000 <gconv@@Base+0x25740>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 27000 <gconv@@Base+0x26740>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 27000 <gconv@@Base+0x26740>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 26000 <gconv@@Base+0x25740>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 27000 <gconv@@Base+0x26740>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 26000 <gconv@@Base+0x25740>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 27000 <gconv@@Base+0x26740>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop

0000000000000838 <gconv_init@@Base>:
     838:	stp	x29, x30, [sp, #-32]!
     83c:	mov	x29, sp
     840:	stp	x19, x20, [sp, #16]
     844:	mov	x19, x0
     848:	adrp	x20, 2000 <gconv@@Base+0x1740>
     84c:	ldr	x0, [x0, #24]
     850:	add	x20, x20, #0x120
     854:	mov	x1, x20
     858:	bl	730 <strcmp@plt>
     85c:	cbnz	w0, 88c <gconv_init@@Base+0x54>
     860:	mov	x1, #0x1                   	// #1
     864:	mov	x0, #0x400000004           	// #17179869188
     868:	movk	x1, #0x2, lsl #32
     86c:	stp	x1, x0, [x19, #72]
     870:	str	xzr, [x19, #96]
     874:	mov	w1, #0x1                   	// #1
     878:	mov	w0, #0x0                   	// #0
     87c:	str	w1, [x19, #88]
     880:	ldp	x19, x20, [sp, #16]
     884:	ldp	x29, x30, [sp], #32
     888:	ret
     88c:	ldr	x0, [x19, #32]
     890:	mov	x1, x20
     894:	bl	730 <strcmp@plt>
     898:	cbnz	w0, 8b8 <gconv_init@@Base+0x80>
     89c:	mov	x1, #0x1                   	// #1
     8a0:	mov	x0, #0xffffffffffffffff    	// #-1
     8a4:	mov	x2, #0x400000004           	// #17179869188
     8a8:	movk	x1, #0x3, lsl #32
     8ac:	stp	x2, x1, [x19, #72]
     8b0:	str	x0, [x19, #96]
     8b4:	b	874 <gconv_init@@Base+0x3c>
     8b8:	mov	w0, #0x1                   	// #1
     8bc:	b	880 <gconv_init@@Base+0x48>

00000000000008c0 <gconv@@Base>:
     8c0:	stp	x29, x30, [sp, #-256]!
     8c4:	mov	x13, x0
     8c8:	mov	x9, x2
     8cc:	mov	x29, sp
     8d0:	stp	x21, x22, [sp, #32]
     8d4:	mov	x21, x1
     8d8:	adrp	x1, 26000 <gconv@@Base+0x25740>
     8dc:	stp	x19, x20, [sp, #16]
     8e0:	mov	x14, x4
     8e4:	ldr	w19, [x21, #16]
     8e8:	ldr	x1, [x1, #4056]
     8ec:	stp	x25, x26, [sp, #64]
     8f0:	mov	x20, x3
     8f4:	ldr	x0, [x1]
     8f8:	str	x0, [sp, #248]
     8fc:	mov	x0, #0x0                   	// #0
     900:	stp	x27, x28, [sp, #80]
     904:	add	x0, x21, #0x30
     908:	str	x0, [sp, #152]
     90c:	mov	w27, w7
     910:	mov	x26, x5
     914:	add	x28, x13, #0x68
     918:	mov	w7, w19
     91c:	and	w1, w19, #0x1
     920:	mov	x25, #0x0                   	// #0
     924:	tbnz	w19, #0, 944 <gconv@@Base+0x84>
     928:	ldr	x0, [x13, #104]
     92c:	ldr	x25, [x28, #40]
     930:	cbz	x0, 944 <gconv@@Base+0x84>
     934:	adrp	x0, 26000 <gconv@@Base+0x25740>
     938:	ldr	x0, [x0, #4040]
     93c:	ldr	x0, [x0]
     940:	eor	x25, x25, x0
     944:	cbnz	w6, 14bc <gconv@@Base+0xbfc>
     948:	cmp	x14, #0x0
     94c:	add	x0, sp, #0xd0
     950:	ldr	x10, [x21, #32]
     954:	csel	x1, x21, x14, eq  // eq = none
     958:	cmp	x26, #0x0
     95c:	stp	x23, x24, [sp, #48]
     960:	csel	x0, x0, xzr, ne  // ne = any
     964:	ldr	w11, [x10]
     968:	ldr	x24, [x1]
     96c:	str	x0, [sp, #176]
     970:	str	xzr, [sp, #208]
     974:	ldr	x23, [x9]
     978:	ldr	x22, [x21, #8]
     97c:	cbnz	w27, e24 <gconv@@Base+0x564>
     980:	str	w27, [sp, #144]
     984:	mov	x27, x13
     988:	adrp	x15, 2000 <gconv@@Base+0x1740>
     98c:	add	x0, x15, #0x2f0
     990:	add	x18, x0, #0x320
     994:	str	x0, [sp, #184]
     998:	add	x0, sp, #0xe8
     99c:	str	x0, [sp, #192]
     9a0:	ldr	x0, [x27, #96]
     9a4:	str	x14, [sp, #128]
     9a8:	stp	x26, x28, [sp, #160]
     9ac:	mov	w26, w11
     9b0:	mov	x28, x24
     9b4:	and	w12, w26, #0xfffffff8
     9b8:	mov	x24, x10
     9bc:	cbz	x0, b4c <gconv@@Base+0x28c>
     9c0:	stp	x23, x28, [sp, #224]
     9c4:	mov	x19, x28
     9c8:	cmp	x20, x23
     9cc:	b.eq	15c0 <gconv@@Base+0xd00>  // b.none
     9d0:	mov	w5, w12
     9d4:	mov	x0, x23
     9d8:	add	x3, sp, #0xe0
     9dc:	mov	w8, #0x4                   	// #4
     9e0:	add	x1, x0, #0x4
     9e4:	cmp	x20, x1
     9e8:	b.cc	d0c <gconv@@Base+0x44c>  // b.lo, b.ul, b.last
     9ec:	cmp	x22, x19
     9f0:	b.ls	cd8 <gconv@@Base+0x418>  // b.plast
     9f4:	ldr	w6, [x0]
     9f8:	mov	w0, #0xfffe                	// #65534
     9fc:	cmp	w6, w0
     a00:	b.hi	d18 <gconv@@Base+0x458>  // b.pmore
     a04:	mov	w1, w6
     a08:	cmp	w6, #0xa5
     a0c:	mov	x2, x18
     a10:	mov	w10, #0xaf                  	// #175
     a14:	b.hi	a24 <gconv@@Base+0x164>  // b.pmore
     a18:	b	a44 <gconv@@Base+0x184>
     a1c:	ldrh	w10, [x0, #10]
     a20:	mov	x2, x0
     a24:	cmp	w6, w10
     a28:	add	x0, x2, #0x8
     a2c:	b.hi	a1c <gconv@@Base+0x15c>  // b.pmore
     a30:	ldrh	w0, [x0]
     a34:	cmp	w6, w0
     a38:	b.cc	d48 <gconv@@Base+0x488>  // b.lo, b.ul, b.last
     a3c:	ldr	w1, [x2, #12]
     a40:	add	w1, w6, w1
     a44:	add	x0, x15, #0x2f0
     a48:	cmp	w6, #0x0
     a4c:	add	x0, x0, #0x5f8
     a50:	ldrb	w1, [x0, w1, uxtw]
     a54:	ccmp	w1, #0x0, #0x0, ne  // ne = any
     a58:	b.eq	13e4 <gconv@@Base+0xb24>  // b.none
     a5c:	cmp	w5, #0x40
     a60:	add	x0, x19, #0x1
     a64:	b.eq	cac <gconv@@Base+0x3ec>  // b.none
     a68:	cmp	x22, x0
     a6c:	b.cc	cd8 <gconv@@Base+0x418>  // b.lo, b.ul, b.last
     a70:	str	x0, [sp, #232]
     a74:	cmp	w6, #0x7e
     a78:	b.eq	ce4 <gconv@@Base+0x424>  // b.none
     a7c:	cmp	w6, #0x5c
     a80:	b.eq	cf0 <gconv@@Base+0x430>  // b.none
     a84:	strb	w1, [x19]
     a88:	ldp	x0, x19, [sp, #224]
     a8c:	add	x0, x0, #0x4
     a90:	str	x0, [sp, #224]
     a94:	cmp	x20, x0
     a98:	b.ne	9e0 <gconv@@Base+0x120>  // b.any
     a9c:	nop
     aa0:	str	x0, [x9]
     aa4:	ldr	x0, [sp, #128]
     aa8:	str	w5, [x24]
     aac:	cbnz	x0, c70 <gconv@@Base+0x3b0>
     ab0:	ldp	w1, w0, [x21, #16]
     ab4:	add	w0, w0, #0x1
     ab8:	str	w0, [x21, #20]
     abc:	tbnz	w1, #0, 1104 <gconv@@Base+0x844>
     ac0:	str	w12, [sp, #136]
     ac4:	cmp	x28, x19
     ac8:	b.cs	1134 <gconv@@Base+0x874>  // b.hs, b.nlast
     acc:	ldr	x1, [x21]
     ad0:	mov	x0, x25
     ad4:	stp	x9, x18, [sp, #104]
     ad8:	str	w8, [sp, #120]
     adc:	str	x1, [sp, #216]
     ae0:	bl	740 <_dl_mcount_wrapper_check@plt>
     ae4:	ldp	x1, x5, [sp, #152]
     ae8:	mov	x3, x19
     aec:	ldr	w7, [sp, #144]
     af0:	add	x2, sp, #0xd8
     af4:	ldr	x0, [sp, #168]
     af8:	mov	w6, #0x0                   	// #0
     afc:	mov	x4, #0x0                   	// #0
     b00:	blr	x25
     b04:	mov	w7, w0
     b08:	ldr	w8, [sp, #120]
     b0c:	cmp	w0, #0x4
     b10:	adrp	x15, 2000 <gconv@@Base+0x1740>
     b14:	ldp	x9, x18, [sp, #104]
     b18:	b.eq	cfc <gconv@@Base+0x43c>  // b.none
     b1c:	ldr	x8, [sp, #216]
     b20:	ldr	w12, [sp, #136]
     b24:	cmp	x8, x19
     b28:	b.ne	fbc <gconv@@Base+0x6fc>  // b.any
     b2c:	cbnz	w7, 15b4 <gconv@@Base+0xcf4>
     b30:	ldr	x0, [x27, #96]
     b34:	ldr	w26, [x24]
     b38:	ldr	w7, [x21, #16]
     b3c:	and	w12, w26, #0xfffffff8
     b40:	ldr	x23, [x9]
     b44:	ldr	x28, [x21]
     b48:	cbnz	x0, 9c0 <gconv@@Base+0x100>
     b4c:	cmp	x20, x23
     b50:	b.eq	18e8 <gconv@@Base+0x1028>  // b.none
     b54:	add	x4, x28, #0x4
     b58:	cmp	x22, x4
     b5c:	b.cc	1428 <gconv@@Base+0xb68>  // b.lo, b.ul, b.last
     b60:	ldr	x0, [sp, #184]
     b64:	and	w30, w7, #0x2
     b68:	mov	w5, w12
     b6c:	adrp	x7, 10000 <gconv@@Base+0xf740>
     b70:	mov	x2, x23
     b74:	add	x7, x7, #0x9f0
     b78:	mov	x19, x28
     b7c:	add	x6, x0, #0x3f8
     b80:	mov	w8, #0x4                   	// #4
     b84:	mov	w16, #0x4040                	// #16448
     b88:	mov	w17, #0xffff                	// #65535
     b8c:	b	bc4 <gconv@@Base+0x304>
     b90:	mov	w1, w0
     b94:	ldrh	w1, [x6, x1, lsl #1]
     b98:	cmp	w1, #0x0
     b9c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
     ba0:	b.ne	13c0 <gconv@@Base+0xb00>  // b.any
     ba4:	add	x2, x2, #0x1
     ba8:	str	w1, [x19]
     bac:	mov	x19, x4
     bb0:	cmp	x20, x2
     bb4:	b.eq	c5c <gconv@@Base+0x39c>  // b.none
     bb8:	add	x4, x19, #0x4
     bbc:	cmp	x22, x4
     bc0:	b.cc	e08 <gconv@@Base+0x548>  // b.lo, b.ul, b.last
     bc4:	ldrb	w0, [x2]
     bc8:	cmp	w0, #0xe
     bcc:	b.eq	dfc <gconv@@Base+0x53c>  // b.none
     bd0:	cmp	w0, #0xf
     bd4:	b.eq	e18 <gconv@@Base+0x558>  // b.none
     bd8:	cbz	w5, b90 <gconv@@Base+0x2d0>
     bdc:	cmp	w5, #0x40
     be0:	b.ne	20cc <gconv@@Base+0x180c>  // b.any
     be4:	add	x1, x2, #0x1
     be8:	cmp	x20, x1
     bec:	b.ls	1410 <gconv@@Base+0xb50>  // b.plast
     bf0:	ldrb	w1, [x2, #1]
     bf4:	add	w1, w1, w0, lsl #8
     bf8:	add	x0, x15, #0x2f0
     bfc:	cmp	w1, w16
     c00:	b.ls	1420 <gconv@@Base+0xb60>  // b.plast
     c04:	mov	w3, #0x4158                	// #16728
     c08:	b	c10 <gconv@@Base+0x350>
     c0c:	ldrh	w3, [x0, #10]
     c10:	add	x0, x0, #0x8
     c14:	cmp	w1, w3
     c18:	b.hi	c0c <gconv@@Base+0x34c>  // b.pmore
     c1c:	ldrh	w3, [x0]
     c20:	cmp	w3, w17
     c24:	b.eq	113c <gconv@@Base+0x87c>  // b.none
     c28:	cmp	w1, w3
     c2c:	b.cc	113c <gconv@@Base+0x87c>  // b.lo, b.ul, b.last
     c30:	ldr	w0, [x0, #4]
     c34:	add	w0, w1, w0
     c38:	ldrh	w0, [x7, x0, lsl #1]
     c3c:	cmp	w0, #0x0
     c40:	ccmp	w1, #0x0, #0x4, eq  // eq = none
     c44:	b.ne	113c <gconv@@Base+0x87c>  // b.any
     c48:	str	w0, [x19]
     c4c:	add	x2, x2, #0x2
     c50:	mov	x19, x4
     c54:	cmp	x20, x2
     c58:	b.ne	bb8 <gconv@@Base+0x2f8>  // b.any
     c5c:	str	x2, [x9]
     c60:	str	w5, [x24]
     c64:	nop
     c68:	ldr	x0, [sp, #128]
     c6c:	cbz	x0, ab0 <gconv@@Base+0x1f0>
     c70:	ldp	x23, x24, [sp, #48]
     c74:	str	x19, [x0]
     c78:	adrp	x0, 26000 <gconv@@Base+0x25740>
     c7c:	ldr	x0, [x0, #4056]
     c80:	ldr	x1, [sp, #248]
     c84:	ldr	x0, [x0]
     c88:	eor	x0, x1, x0
     c8c:	cbnz	x0, 20c4 <gconv@@Base+0x1804>
     c90:	mov	w0, w8
     c94:	ldp	x19, x20, [sp, #16]
     c98:	ldp	x21, x22, [sp, #32]
     c9c:	ldp	x25, x26, [sp, #64]
     ca0:	ldp	x27, x28, [sp, #80]
     ca4:	ldp	x29, x30, [sp], #256
     ca8:	ret
     cac:	cmp	x22, x0
     cb0:	b.cc	cd8 <gconv@@Base+0x418>  // b.lo, b.ul, b.last
     cb4:	str	x0, [sp, #232]
     cb8:	mov	w0, #0xf                   	// #15
     cbc:	strb	w0, [x19]
     cc0:	mov	w5, #0x0                   	// #0
     cc4:	ldr	x19, [sp, #232]
     cc8:	add	x0, x19, #0x1
     ccc:	cmp	x22, x0
     cd0:	b.cs	a70 <gconv@@Base+0x1b0>  // b.hs, b.nlast
     cd4:	nop
     cd8:	mov	w8, #0x5                   	// #5
     cdc:	ldr	x0, [sp, #224]
     ce0:	b	aa0 <gconv@@Base+0x1e0>
     ce4:	mov	w0, #0xffffffa1            	// #-95
     ce8:	strb	w0, [x19]
     cec:	b	a88 <gconv@@Base+0x1c8>
     cf0:	mov	w0, #0x5b                  	// #91
     cf4:	strb	w0, [x19]
     cf8:	b	a88 <gconv@@Base+0x1c8>
     cfc:	mov	w7, w8
     d00:	cmp	w8, #0x5
     d04:	b.ne	b2c <gconv@@Base+0x26c>  // b.any
     d08:	b	b30 <gconv@@Base+0x270>
     d0c:	mov	w8, #0x7                   	// #7
     d10:	ldr	x0, [sp, #224]
     d14:	b	aa0 <gconv@@Base+0x1e0>
     d18:	mov	w0, #0x1c00                	// #7168
     d1c:	cmp	w0, w6, lsr #7
     d20:	b.eq	1404 <gconv@@Base+0xb44>  // b.none
     d24:	ldr	x0, [sp, #176]
     d28:	cbz	x0, 1b44 <gconv@@Base+0x1284>
     d2c:	str	w5, [x24]
     d30:	ldr	w0, [x21, #16]
     d34:	tbnz	w0, #3, 1158 <gconv@@Base+0x898>
     d38:	ldr	x0, [sp, #224]
     d3c:	tbnz	w7, #1, 11d4 <gconv@@Base+0x914>
     d40:	mov	w8, #0x6                   	// #6
     d44:	b	aa0 <gconv@@Base+0x1e0>
     d48:	adrp	x1, 8000 <gconv@@Base+0x7740>
     d4c:	cmp	w6, #0xa8
     d50:	add	x1, x1, #0x578
     d54:	mov	w2, #0xb1                  	// #177
     d58:	b.hi	d68 <gconv@@Base+0x4a8>  // b.pmore
     d5c:	b	155c <gconv@@Base+0xc9c>
     d60:	ldrh	w2, [x0, #10]
     d64:	mov	x1, x0
     d68:	cmp	w6, w2
     d6c:	add	x0, x1, #0x8
     d70:	b.hi	d60 <gconv@@Base+0x4a0>  // b.pmore
     d74:	ldrh	w1, [x1, #8]
     d78:	cmp	w6, w1
     d7c:	b.cc	1444 <gconv@@Base+0xb84>  // b.lo, b.ul, b.last
     d80:	ldr	w0, [x0, #4]
     d84:	adrp	x1, 2000 <gconv@@Base+0x1740>
     d88:	add	x1, x1, #0xa38
     d8c:	cmp	w6, #0x0
     d90:	add	w0, w6, w0
     d94:	lsl	x0, x0, #1
     d98:	add	x2, x0, x1
     d9c:	ldrb	w0, [x0, x1]
     da0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     da4:	b.eq	1444 <gconv@@Base+0xb84>  // b.none
     da8:	cbnz	w5, dcc <gconv@@Base+0x50c>
     dac:	add	x1, x19, #0x1
     db0:	cmp	x22, x1
     db4:	b.cc	cd8 <gconv@@Base+0x418>  // b.lo, b.ul, b.last
     db8:	str	x1, [sp, #232]
     dbc:	mov	w1, #0xe                   	// #14
     dc0:	strb	w1, [x19]
     dc4:	mov	w5, #0x40                  	// #64
     dc8:	ldr	x19, [sp, #232]
     dcc:	add	x1, x19, #0x2
     dd0:	cmp	x22, x1
     dd4:	b.cc	cd8 <gconv@@Base+0x418>  // b.lo, b.ul, b.last
     dd8:	add	x1, x19, #0x1
     ddc:	str	x1, [sp, #232]
     de0:	strb	w0, [x19]
     de4:	ldr	x0, [sp, #232]
     de8:	ldrb	w1, [x2, #1]
     dec:	add	x2, x0, #0x1
     df0:	str	x2, [sp, #232]
     df4:	strb	w1, [x0]
     df8:	b	a88 <gconv@@Base+0x1c8>
     dfc:	add	x2, x2, #0x1
     e00:	mov	w5, #0x40                  	// #64
     e04:	b	bb0 <gconv@@Base+0x2f0>
     e08:	str	x2, [x9]
     e0c:	mov	w8, #0x5                   	// #5
     e10:	str	w5, [x24]
     e14:	b	c68 <gconv@@Base+0x3a8>
     e18:	add	x2, x2, #0x1
     e1c:	mov	w5, #0x0                   	// #0
     e20:	b	bb0 <gconv@@Base+0x2f0>
     e24:	ands	w0, w11, #0x7
     e28:	b.eq	980 <gconv@@Base+0xc0>  // b.none
     e2c:	cbnz	x14, 20ec <gconv@@Base+0x182c>
     e30:	ldr	x1, [x13, #96]
     e34:	and	w5, w11, #0xfffffff8
     e38:	mov	w3, w0
     e3c:	cbz	x1, 11f4 <gconv@@Base+0x934>
     e40:	stp	x23, x24, [sp, #224]
     e44:	cmp	w0, #0x4
     e48:	b.hi	1ef8 <gconv@@Base+0x1638>  // b.pmore
     e4c:	mov	w12, w0
     e50:	cbz	w0, 18bc <gconv@@Base+0xffc>
     e54:	add	x7, sp, #0xf0
     e58:	add	x6, x10, #0x3
     e5c:	mov	x0, #0x1                   	// #1
     e60:	add	x1, x7, x0
     e64:	ldrb	w4, [x6, x0]
     e68:	cmp	x0, x12
     e6c:	add	x0, x0, #0x1
     e70:	sturb	w4, [x1, #-1]
     e74:	b.ne	e60 <gconv@@Base+0x5a0>  // b.any
     e78:	mov	x0, #0x4                   	// #4
     e7c:	sub	x0, x0, x12
     e80:	add	x0, x23, x0
     e84:	cmp	x20, x0
     e88:	b.cc	18fc <gconv@@Base+0x103c>  // b.lo, b.ul, b.last
     e8c:	add	x0, x23, #0x1
     e90:	add	x7, sp, #0xf0
     e94:	cmp	x24, x22
     e98:	b.cs	176c <gconv@@Base+0xeac>  // b.hs, b.nlast
     e9c:	add	x12, x12, #0x1
     ea0:	str	x0, [sp, #224]
     ea4:	add	x4, x7, x12
     ea8:	cmp	x12, #0x3
     eac:	ldurb	w1, [x0, #-1]
     eb0:	ccmp	x20, x0, #0x0, ls  // ls = plast
     eb4:	add	x0, x0, #0x1
     eb8:	sturb	w1, [x4, #-1]
     ebc:	b.hi	e9c <gconv@@Base+0x5dc>  // b.pmore
     ec0:	ldr	w1, [sp, #240]
     ec4:	mov	w0, #0xfffe                	// #65534
     ec8:	str	x7, [sp, #224]
     ecc:	cmp	w1, w0
     ed0:	b.hi	1ae0 <gconv@@Base+0x1220>  // b.pmore
     ed4:	mov	w3, w1
     ed8:	cmp	w1, #0xa5
     edc:	adrp	x2, 2000 <gconv@@Base+0x1740>
     ee0:	b.ls	f20 <gconv@@Base+0x660>  // b.plast
     ee4:	adrp	x2, 2000 <gconv@@Base+0x1740>
     ee8:	add	x3, x2, #0x2f0
     eec:	add	x3, x3, #0x320
     ef0:	mov	w6, #0xaf                  	// #175
     ef4:	b	f00 <gconv@@Base+0x640>
     ef8:	ldrh	w6, [x0, #10]
     efc:	mov	x3, x0
     f00:	cmp	w1, w6
     f04:	add	x0, x3, #0x8
     f08:	b.hi	ef8 <gconv@@Base+0x638>  // b.pmore
     f0c:	ldrh	w0, [x0]
     f10:	cmp	w1, w0
     f14:	b.cc	1a30 <gconv@@Base+0x1170>  // b.lo, b.ul, b.last
     f18:	ldr	w3, [x3, #12]
     f1c:	add	w3, w1, w3
     f20:	add	x0, x2, #0x2f0
     f24:	add	x0, x0, #0x5f8
     f28:	ldrb	w3, [x0, w3, uxtw]
     f2c:	cmp	w3, #0x0
     f30:	ccmp	w1, #0x0, #0x4, eq  // eq = none
     f34:	b.ne	1bf4 <gconv@@Base+0x1334>  // b.any
     f38:	cmp	w5, #0x40
     f3c:	add	x0, x24, #0x1
     f40:	b.eq	173c <gconv@@Base+0xe7c>  // b.none
     f44:	cmp	x22, x0
     f48:	b.cc	176c <gconv@@Base+0xeac>  // b.lo, b.ul, b.last
     f4c:	mov	x2, x24
     f50:	str	x0, [sp, #232]
     f54:	cmp	w1, #0x7e
     f58:	b.eq	1688 <gconv@@Base+0xdc8>  // b.none
     f5c:	cmp	w1, #0x5c
     f60:	b.eq	194c <gconv@@Base+0x108c>  // b.none
     f64:	strb	w3, [x2]
     f68:	ldr	x0, [sp, #224]
     f6c:	add	x0, x0, #0x4
     f70:	str	x0, [sp, #224]
     f74:	cmp	x0, x7
     f78:	b.eq	193c <gconv@@Base+0x107c>  // b.none
     f7c:	ldr	w11, [x10]
     f80:	sub	x7, x0, x7
     f84:	and	w3, w11, #0x7
     f88:	mov	w0, w3
     f8c:	cmp	x0, x7
     f90:	b.ge	1e00 <gconv@@Base+0x1540>  // b.tcont
     f94:	ldr	x23, [x9]
     f98:	sub	x0, x7, x0
     f9c:	and	w1, w11, #0xfffffff8
     fa0:	ldr	w7, [x21, #16]
     fa4:	add	x23, x23, x0
     fa8:	str	x23, [x9]
     fac:	mov	w11, w1
     fb0:	ldr	x24, [sp, #232]
     fb4:	str	w1, [x10]
     fb8:	b	980 <gconv@@Base+0xc0>
     fbc:	str	x23, [x9]
     fc0:	ldr	x0, [x27, #96]
     fc4:	str	w26, [x24]
     fc8:	cbz	x0, 12b8 <gconv@@Base+0x9f8>
     fcc:	stp	x23, x28, [sp, #224]
     fd0:	cmp	x20, x23
     fd4:	ldr	w19, [x21, #16]
     fd8:	b.eq	1c14 <gconv@@Base+0x1354>  // b.none
     fdc:	add	x26, sp, #0xe0
     fe0:	mov	x30, x28
     fe4:	mov	x3, x26
     fe8:	str	x25, [sp, #104]
     fec:	ldr	x26, [sp, #176]
     ff0:	mov	x25, x21
     ff4:	mov	x21, x8
     ff8:	str	x28, [sp, #120]
     ffc:	mov	x28, x9
    1000:	str	x22, [sp, #136]
    1004:	mov	x22, x27
    1008:	mov	x27, x18
    100c:	mov	w5, #0x4                   	// #4
    1010:	str	w7, [sp, #112]
    1014:	add	x0, x23, #0x4
    1018:	cmp	x20, x0
    101c:	b.cc	1778 <gconv@@Base+0xeb8>  // b.lo, b.ul, b.last
    1020:	cmp	x21, x30
    1024:	b.ls	1564 <gconv@@Base+0xca4>  // b.plast
    1028:	ldr	w7, [x23]
    102c:	mov	w2, #0xfffe                	// #65534
    1030:	cmp	w7, w2
    1034:	b.hi	17b0 <gconv@@Base+0xef0>  // b.pmore
    1038:	mov	w0, w7
    103c:	cmp	w7, #0xa5
    1040:	mov	x2, x27
    1044:	mov	w10, #0xaf                  	// #175
    1048:	b.hi	1058 <gconv@@Base+0x798>  // b.pmore
    104c:	b	1078 <gconv@@Base+0x7b8>
    1050:	ldrh	w10, [x0, #10]
    1054:	mov	x2, x0
    1058:	cmp	w7, w10
    105c:	add	x0, x2, #0x8
    1060:	b.hi	1050 <gconv@@Base+0x790>  // b.pmore
    1064:	ldrh	w0, [x0]
    1068:	cmp	w7, w0
    106c:	b.cc	1808 <gconv@@Base+0xf48>  // b.lo, b.ul, b.last
    1070:	ldr	w0, [x2, #12]
    1074:	add	w0, w7, w0
    1078:	add	x2, x15, #0x2f0
    107c:	add	x2, x2, #0x5f8
    1080:	ldrb	w2, [x2, w0, uxtw]
    1084:	cmp	w2, #0x0
    1088:	ccmp	w7, #0x0, #0x4, eq  // eq = none
    108c:	b.ne	1bb8 <gconv@@Base+0x12f8>  // b.any
    1090:	cmp	w12, #0x40
    1094:	add	x0, x30, #0x1
    1098:	b.eq	1524 <gconv@@Base+0xc64>  // b.none
    109c:	cmp	x21, x0
    10a0:	b.cc	1564 <gconv@@Base+0xca4>  // b.lo, b.ul, b.last
    10a4:	str	x0, [sp, #232]
    10a8:	cmp	w7, #0x7e
    10ac:	b.eq	1548 <gconv@@Base+0xc88>  // b.none
    10b0:	cmp	w7, #0x5c
    10b4:	b.eq	15d0 <gconv@@Base+0xd10>  // b.none
    10b8:	strb	w2, [x30]
    10bc:	ldp	x23, x30, [sp, #224]
    10c0:	add	x23, x23, #0x4
    10c4:	str	x23, [sp, #224]
    10c8:	cmp	x20, x23
    10cc:	b.ne	1014 <gconv@@Base+0x754>  // b.any
    10d0:	mov	x9, x28
    10d4:	mov	x21, x25
    10d8:	mov	x18, x27
    10dc:	ldr	w7, [sp, #112]
    10e0:	mov	x27, x22
    10e4:	sxtw	x1, w5
    10e8:	str	x20, [x9]
    10ec:	ldr	x25, [sp, #104]
    10f0:	ldr	x28, [sp, #120]
    10f4:	ldr	x22, [sp, #136]
    10f8:	ldr	x8, [sp, #216]
    10fc:	str	w12, [x24]
    1100:	b	15e8 <gconv@@Base+0xd28>
    1104:	ldr	x26, [sp, #160]
    1108:	ldr	x1, [sp, #208]
    110c:	ldr	x0, [x26]
    1110:	str	x19, [x21]
    1114:	ldr	w27, [sp, #144]
    1118:	add	x0, x0, x1
    111c:	str	x0, [x26]
    1120:	cmp	w27, #0x0
    1124:	ccmp	w8, #0x7, #0x0, ne  // ne = any
    1128:	b.eq	1694 <gconv@@Base+0xdd4>  // b.none
    112c:	ldp	x23, x24, [sp, #48]
    1130:	b	c78 <gconv@@Base+0x3b8>
    1134:	mov	w7, w8
    1138:	b	b2c <gconv@@Base+0x26c>
    113c:	ldr	x1, [sp, #176]
    1140:	cbz	x1, 1148 <gconv@@Base+0x888>
    1144:	cbnz	w30, 11bc <gconv@@Base+0x8fc>
    1148:	str	x2, [x9]
    114c:	mov	w8, #0x6                   	// #6
    1150:	str	w5, [x24]
    1154:	b	c68 <gconv@@Base+0x3a8>
    1158:	ldr	x2, [x9]
    115c:	mov	x4, x20
    1160:	ldr	x6, [sp, #176]
    1164:	mov	x1, x21
    1168:	ldr	x5, [sp, #192]
    116c:	mov	x0, x27
    1170:	stp	x3, x9, [sp, #104]
    1174:	str	w7, [sp, #120]
    1178:	str	w12, [sp, #136]
    117c:	str	x18, [sp, #200]
    1180:	bl	700 <__gconv_transliterate@plt>
    1184:	ldr	w5, [x24]
    1188:	mov	w8, w0
    118c:	ldr	w7, [sp, #120]
    1190:	cmp	w0, #0x6
    1194:	ldr	w12, [sp, #136]
    1198:	and	w5, w5, #0xfffffff8
    119c:	adrp	x15, 2000 <gconv@@Base+0x1740>
    11a0:	ldp	x3, x9, [sp, #104]
    11a4:	ldr	x18, [sp, #200]
    11a8:	b.eq	1554 <gconv@@Base+0xc94>  // b.none
    11ac:	cmp	w0, #0x5
    11b0:	ldp	x0, x19, [sp, #224]
    11b4:	b.ne	a94 <gconv@@Base+0x1d4>  // b.any
    11b8:	b	aa0 <gconv@@Base+0x1e0>
    11bc:	ldr	x0, [x1]
    11c0:	add	x2, x2, #0x2
    11c4:	mov	w8, #0x6                   	// #6
    11c8:	add	x0, x0, #0x1
    11cc:	str	x0, [x1]
    11d0:	b	bb0 <gconv@@Base+0x2f0>
    11d4:	ldr	x2, [sp, #176]
    11d8:	add	x0, x0, #0x4
    11dc:	mov	w8, #0x6                   	// #6
    11e0:	str	x0, [sp, #224]
    11e4:	ldr	x1, [x2]
    11e8:	add	x1, x1, #0x1
    11ec:	str	x1, [x2]
    11f0:	b	a94 <gconv@@Base+0x1d4>
    11f4:	cmp	w0, #0x4
    11f8:	b.hi	1de0 <gconv@@Base+0x1520>  // b.pmore
    11fc:	add	x4, x24, #0x4
    1200:	cbz	w0, 163c <gconv@@Base+0xd7c>
    1204:	ldrb	w1, [x10, #4]
    1208:	tst	w11, #0x6
    120c:	strb	w1, [sp, #240]
    1210:	mov	x1, #0x1                   	// #1
    1214:	b.eq	1224 <gconv@@Base+0x964>  // b.none
    1218:	ldrb	w2, [x10, #5]
    121c:	mov	x1, #0x2                   	// #2
    1220:	strb	w2, [sp, #241]
    1224:	cmp	x22, x4
    1228:	b.cc	176c <gconv@@Base+0xeac>  // b.lo, b.ul, b.last
    122c:	add	x7, sp, #0xf0
    1230:	ldrb	w2, [x23]
    1234:	add	x8, x1, #0x1
    1238:	strb	w2, [x7, x1]
    123c:	ldrb	w6, [sp, #240]
    1240:	sub	w1, w6, #0xe
    1244:	and	w1, w1, #0xff
    1248:	cmp	w1, #0x1
    124c:	b.ls	1d58 <gconv@@Base+0x1498>  // b.plast
    1250:	cbnz	w5, 1958 <gconv@@Base+0x1098>
    1254:	adrp	x2, 2000 <gconv@@Base+0x1740>
    1258:	add	x0, x2, #0x2f0
    125c:	add	x0, x0, #0x3f8
    1260:	mov	w1, w6
    1264:	cmp	w6, #0x0
    1268:	ldrh	w0, [x0, x1, lsl #1]
    126c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1270:	b.eq	1dbc <gconv@@Base+0x14fc>  // b.none
    1274:	str	w0, [x24]
    1278:	mov	x24, x4
    127c:	mov	x1, #0x1                   	// #1
    1280:	ldr	w11, [x10]
    1284:	and	w3, w11, #0x7
    1288:	mov	w2, w3
    128c:	cmp	x2, x1
    1290:	b.ge	1d58 <gconv@@Base+0x1498>  // b.tcont
    1294:	ldr	w19, [x21, #16]
    1298:	and	w5, w11, #0xfffffff8
    129c:	sub	x1, x1, x2
    12a0:	mov	w11, w5
    12a4:	add	x23, x23, x1
    12a8:	str	x23, [x9]
    12ac:	mov	w7, w19
    12b0:	str	w5, [x10]
    12b4:	b	980 <gconv@@Base+0xc0>
    12b8:	ldr	w5, [x21, #16]
    12bc:	cmp	x20, x23
    12c0:	b.eq	1c14 <gconv@@Base+0x1354>  // b.none
    12c4:	add	x4, x28, #0x4
    12c8:	mov	x30, x28
    12cc:	cmp	x8, x4
    12d0:	mov	x1, #0x4                   	// #4
    12d4:	b.cc	1ce4 <gconv@@Base+0x1424>  // b.lo, b.ul, b.last
    12d8:	ldp	x10, x0, [sp, #176]
    12dc:	adrp	x11, 10000 <gconv@@Base+0xf740>
    12e0:	and	w5, w5, #0x2
    12e4:	add	x11, x11, #0x9f0
    12e8:	mov	w16, #0x4040                	// #16448
    12ec:	mov	w17, #0xffff                	// #65535
    12f0:	add	x6, x0, #0x3f8
    12f4:	b	132c <gconv@@Base+0xa6c>
    12f8:	mov	w2, w0
    12fc:	cmp	w0, #0x0
    1300:	ldrh	w0, [x6, x2, lsl #1]
    1304:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1308:	b.eq	1b24 <gconv@@Base+0x1264>  // b.none
    130c:	add	x23, x23, #0x1
    1310:	str	w0, [x30]
    1314:	mov	x30, x4
    1318:	cmp	x20, x23
    131c:	b.eq	15e0 <gconv@@Base+0xd20>  // b.none
    1320:	add	x4, x30, #0x4
    1324:	cmp	x8, x4
    1328:	b.cc	18c8 <gconv@@Base+0x1008>  // b.lo, b.ul, b.last
    132c:	ldrb	w0, [x23]
    1330:	cmp	w0, #0xe
    1334:	b.eq	18dc <gconv@@Base+0x101c>  // b.none
    1338:	cmp	w0, #0xf
    133c:	b.eq	18d0 <gconv@@Base+0x1010>  // b.none
    1340:	cbz	w12, 12f8 <gconv@@Base+0xa38>
    1344:	cmp	w12, #0x40
    1348:	b.ne	20cc <gconv@@Base+0x180c>  // b.any
    134c:	add	x2, x23, #0x1
    1350:	cmp	x20, x2
    1354:	b.ls	1d50 <gconv@@Base+0x1490>  // b.plast
    1358:	ldrb	w2, [x23, #1]
    135c:	add	w2, w2, w0, lsl #8
    1360:	add	x0, x15, #0x2f0
    1364:	cmp	w2, w16
    1368:	b.ls	1d48 <gconv@@Base+0x1488>  // b.plast
    136c:	mov	w3, #0x4158                	// #16728
    1370:	b	1378 <gconv@@Base+0xab8>
    1374:	ldrh	w3, [x0, #10]
    1378:	add	x0, x0, #0x8
    137c:	cmp	w2, w3
    1380:	b.hi	1374 <gconv@@Base+0xab4>  // b.pmore
    1384:	ldrh	w3, [x0]
    1388:	cmp	w3, w17
    138c:	b.eq	16e8 <gconv@@Base+0xe28>  // b.none
    1390:	cmp	w2, w3
    1394:	b.cc	16e8 <gconv@@Base+0xe28>  // b.lo, b.ul, b.last
    1398:	ldr	w0, [x0, #4]
    139c:	add	w0, w2, w0
    13a0:	ldrh	w0, [x11, x0, lsl #1]
    13a4:	cmp	w0, #0x0
    13a8:	ccmp	w2, #0x0, #0x4, eq  // eq = none
    13ac:	b.ne	16e8 <gconv@@Base+0xe28>  // b.any
    13b0:	add	x23, x23, #0x2
    13b4:	str	w0, [x30]
    13b8:	mov	x30, x4
    13bc:	b	1318 <gconv@@Base+0xa58>
    13c0:	ldr	x1, [sp, #176]
    13c4:	cbz	x1, 1148 <gconv@@Base+0x888>
    13c8:	cbz	w30, 1148 <gconv@@Base+0x888>
    13cc:	ldr	x0, [x1]
    13d0:	add	x2, x2, #0x1
    13d4:	mov	w8, #0x6                   	// #6
    13d8:	add	x0, x0, #0x1
    13dc:	str	x0, [x1]
    13e0:	b	bb0 <gconv@@Base+0x2f0>
    13e4:	adrp	x1, 8000 <gconv@@Base+0x7740>
    13e8:	cmp	w6, #0xa8
    13ec:	add	x1, x1, #0x578
    13f0:	mov	w2, #0xb1                  	// #177
    13f4:	b.hi	d68 <gconv@@Base+0x4a8>  // b.pmore
    13f8:	mov	x0, x1
    13fc:	mov	w1, #0xa6                  	// #166
    1400:	b	d78 <gconv@@Base+0x4b8>
    1404:	mov	x0, x1
    1408:	str	x1, [sp, #224]
    140c:	b	a94 <gconv@@Base+0x1d4>
    1410:	str	x2, [x9]
    1414:	mov	w8, #0x7                   	// #7
    1418:	str	w5, [x24]
    141c:	b	c68 <gconv@@Base+0x3a8>
    1420:	mov	w3, #0x4040                	// #16448
    1424:	b	c28 <gconv@@Base+0x368>
    1428:	mov	x2, x23
    142c:	str	x2, [x9]
    1430:	mov	w5, w12
    1434:	mov	x19, x28
    1438:	mov	w8, #0x5                   	// #5
    143c:	str	w5, [x24]
    1440:	b	c68 <gconv@@Base+0x3a8>
    1444:	ldr	x0, [sp, #176]
    1448:	cbz	x0, 1b44 <gconv@@Base+0x1284>
    144c:	str	w5, [x24]
    1450:	ldr	w0, [x21, #16]
    1454:	tbz	w0, #3, d38 <gconv@@Base+0x478>
    1458:	ldr	x2, [x9]
    145c:	mov	x4, x20
    1460:	ldr	x6, [sp, #176]
    1464:	mov	x1, x21
    1468:	ldr	x5, [sp, #192]
    146c:	mov	x0, x27
    1470:	stp	x3, x9, [sp, #104]
    1474:	str	w7, [sp, #120]
    1478:	str	w12, [sp, #136]
    147c:	str	x18, [sp, #200]
    1480:	bl	700 <__gconv_transliterate@plt>
    1484:	ldr	w5, [x24]
    1488:	mov	w8, w0
    148c:	ldr	w7, [sp, #120]
    1490:	cmp	w0, #0x6
    1494:	ldr	w12, [sp, #136]
    1498:	and	w5, w5, #0xfffffff8
    149c:	adrp	x15, 2000 <gconv@@Base+0x1740>
    14a0:	ldp	x3, x9, [sp, #104]
    14a4:	ldr	x18, [sp, #200]
    14a8:	b.eq	1554 <gconv@@Base+0xc94>  // b.none
    14ac:	cmp	w0, #0x5
    14b0:	ldp	x0, x19, [sp, #224]
    14b4:	b.ne	a94 <gconv@@Base+0x1d4>  // b.any
    14b8:	b	aa0 <gconv@@Base+0x1e0>
    14bc:	cbnz	x14, 1d78 <gconv@@Base+0x14b8>
    14c0:	cmp	w6, #0x1
    14c4:	ldr	x22, [x21, #32]
    14c8:	b.ne	1708 <gconv@@Base+0xe48>  // b.any
    14cc:	ldr	w19, [x22]
    14d0:	ldr	x2, [x21]
    14d4:	tst	w19, #0xfffffff8
    14d8:	b.eq	1604 <gconv@@Base+0xd44>  // b.none
    14dc:	ldr	x0, [x13, #96]
    14e0:	cbz	x0, 15fc <gconv@@Base+0xd3c>
    14e4:	ldr	x0, [x21, #8]
    14e8:	cmp	x2, x0
    14ec:	b.cs	2078 <gconv@@Base+0x17b8>  // b.hs, b.nlast
    14f0:	mov	x20, x2
    14f4:	mov	w0, #0xf                   	// #15
    14f8:	strb	w0, [x20], #1
    14fc:	ldr	x1, [x21, #32]
    1500:	ldr	w3, [x21, #16]
    1504:	ldr	w0, [x1]
    1508:	and	w0, w0, #0x7
    150c:	str	w0, [x1]
    1510:	tbz	w3, #0, 1cf8 <gconv@@Base+0x1438>
    1514:	mov	x2, x20
    1518:	mov	w8, #0x0                   	// #0
    151c:	str	x2, [x21]
    1520:	b	c78 <gconv@@Base+0x3b8>
    1524:	cmp	x21, x0
    1528:	b.cc	19f4 <gconv@@Base+0x1134>  // b.lo, b.ul, b.last
    152c:	str	x0, [sp, #232]
    1530:	mov	w0, #0xf                   	// #15
    1534:	strb	w0, [x30]
    1538:	mov	w12, #0x0                   	// #0
    153c:	ldr	x30, [sp, #232]
    1540:	add	x0, x30, #0x1
    1544:	b	109c <gconv@@Base+0x7dc>
    1548:	mov	w0, #0xffffffa1            	// #-95
    154c:	strb	w0, [x30]
    1550:	b	10bc <gconv@@Base+0x7fc>
    1554:	ldr	x19, [sp, #232]
    1558:	b	d38 <gconv@@Base+0x478>
    155c:	mov	x0, x1
    1560:	b	d80 <gconv@@Base+0x4c0>
    1564:	mov	x9, x28
    1568:	mov	x21, x25
    156c:	ldr	x0, [sp, #224]
    1570:	mov	x18, x27
    1574:	str	x0, [x9]
    1578:	mov	x27, x22
    157c:	ldr	x0, [sp, #216]
    1580:	str	w12, [x24]
    1584:	ldr	w7, [sp, #112]
    1588:	cmp	x0, x30
    158c:	ldr	x25, [sp, #104]
    1590:	ldr	x28, [sp, #120]
    1594:	ldr	x22, [sp, #136]
    1598:	b.ne	17e8 <gconv@@Base+0xf28>  // b.any
    159c:	cmp	x28, x30
    15a0:	b.ne	b2c <gconv@@Base+0x26c>  // b.any
    15a4:	ldr	w0, [x21, #20]
    15a8:	sub	w0, w0, #0x1
    15ac:	str	w0, [x21, #20]
    15b0:	b	b2c <gconv@@Base+0x26c>
    15b4:	ldr	w27, [sp, #144]
    15b8:	mov	w8, w7
    15bc:	b	1120 <gconv@@Base+0x860>
    15c0:	mov	x0, x20
    15c4:	mov	w5, w12
    15c8:	mov	w8, #0x4                   	// #4
    15cc:	b	aa0 <gconv@@Base+0x1e0>
    15d0:	mov	w0, #0x5b                  	// #91
    15d4:	strb	w0, [x30]
    15d8:	b	10bc <gconv@@Base+0x7fc>
    15dc:	mov	x1, #0x6                   	// #6
    15e0:	str	x23, [x9]
    15e4:	str	w12, [x24]
    15e8:	cmp	x30, x8
    15ec:	b.ne	17e8 <gconv@@Base+0xf28>  // b.any
    15f0:	cmp	x1, #0x5
    15f4:	b.eq	159c <gconv@@Base+0xcdc>  // b.none
    15f8:	b	1790 <gconv@@Base+0xed0>
    15fc:	and	w19, w19, #0x7
    1600:	str	w19, [x22]
    1604:	cbnz	w1, 1518 <gconv@@Base+0xc58>
    1608:	mov	x0, x25
    160c:	bl	740 <_dl_mcount_wrapper_check@plt>
    1610:	ldr	x1, [sp, #152]
    1614:	mov	w7, w27
    1618:	mov	x5, x26
    161c:	mov	x0, x28
    1620:	mov	w6, #0x1                   	// #1
    1624:	mov	x4, #0x0                   	// #0
    1628:	mov	x3, #0x0                   	// #0
    162c:	mov	x2, #0x0                   	// #0
    1630:	blr	x25
    1634:	mov	w8, w0
    1638:	b	c78 <gconv@@Base+0x3b8>
    163c:	cmp	x22, x4
    1640:	b.cc	176c <gconv@@Base+0xeac>  // b.lo, b.ul, b.last
    1644:	mov	x2, x23
    1648:	add	x7, sp, #0xf0
    164c:	mov	x1, #0x0                   	// #0
    1650:	ldrb	w6, [x2], #1
    1654:	add	x8, x1, #0x1
    1658:	strb	w6, [x7, x1]
    165c:	cmp	x8, #0x1
    1660:	ccmp	x20, x2, #0x0, ls  // ls = plast
    1664:	mov	x1, #0x1                   	// #1
    1668:	b.hi	1650 <gconv@@Base+0xd90>  // b.pmore
    166c:	ldrb	w6, [sp, #240]
    1670:	mov	x2, #0x0                   	// #0
    1674:	sub	w12, w6, #0xe
    1678:	and	w12, w12, #0xff
    167c:	cmp	w12, #0x1
    1680:	b.ls	129c <gconv@@Base+0x9dc>  // b.plast
    1684:	b	1250 <gconv@@Base+0x990>
    1688:	mov	w0, #0xffffffa1            	// #-95
    168c:	strb	w0, [x2]
    1690:	b	f68 <gconv@@Base+0x6a8>
    1694:	ldr	x0, [x9]
    1698:	sub	x1, x20, x0
    169c:	cmp	x1, #0x3
    16a0:	b.gt	1e98 <gconv@@Base+0x15d8>
    16a4:	ldr	x2, [x21, #32]
    16a8:	cmp	x0, x20
    16ac:	add	x0, x0, #0x1
    16b0:	add	x3, x2, #0x4
    16b4:	b.cs	1e90 <gconv@@Base+0x15d0>  // b.hs, b.nlast
    16b8:	str	x0, [x9]
    16bc:	cmp	x20, x0
    16c0:	add	x0, x0, #0x1
    16c4:	ldurb	w4, [x0, #-2]
    16c8:	strb	w4, [x3], #1
    16cc:	b.ne	16b8 <gconv@@Base+0xdf8>  // b.any
    16d0:	ldr	w0, [x2]
    16d4:	ldp	x23, x24, [sp, #48]
    16d8:	and	w0, w0, #0xfffffff8
    16dc:	orr	w0, w0, w1
    16e0:	str	w0, [x2]
    16e4:	b	c78 <gconv@@Base+0x3b8>
    16e8:	cbz	x10, 15dc <gconv@@Base+0xd1c>
    16ec:	cbz	w5, 15dc <gconv@@Base+0xd1c>
    16f0:	ldr	x0, [x10]
    16f4:	add	x23, x23, #0x2
    16f8:	mov	x1, #0x6                   	// #6
    16fc:	add	x0, x0, #0x1
    1700:	str	x0, [x10]
    1704:	b	1318 <gconv@@Base+0xa58>
    1708:	str	xzr, [x22]
    170c:	mov	w8, #0x0                   	// #0
    1710:	ldr	w0, [x21, #16]
    1714:	tbnz	w0, #0, c78 <gconv@@Base+0x3b8>
    1718:	mov	x0, x25
    171c:	str	w6, [sp, #104]
    1720:	bl	740 <_dl_mcount_wrapper_check@plt>
    1724:	ldr	w6, [sp, #104]
    1728:	mov	w7, w27
    172c:	mov	x5, x26
    1730:	mov	x0, x28
    1734:	ldr	x1, [sp, #152]
    1738:	b	1624 <gconv@@Base+0xd64>
    173c:	cmp	x22, x0
    1740:	b.cc	176c <gconv@@Base+0xeac>  // b.lo, b.ul, b.last
    1744:	str	x0, [sp, #232]
    1748:	mov	w0, #0xf                   	// #15
    174c:	strb	w0, [x24]
    1750:	ldr	x2, [sp, #232]
    1754:	add	x0, x2, #0x1
    1758:	cmp	x22, x0
    175c:	b.cs	f50 <gconv@@Base+0x690>  // b.hs, b.nlast
    1760:	ldr	x0, [sp, #224]
    1764:	cmp	x0, x7
    1768:	b.ne	f7c <gconv@@Base+0x6bc>  // b.any
    176c:	mov	w8, #0x5                   	// #5
    1770:	ldp	x23, x24, [sp, #48]
    1774:	b	c78 <gconv@@Base+0x3b8>
    1778:	ldr	x0, [sp, #224]
    177c:	str	x0, [x28]
    1780:	ldr	x0, [sp, #216]
    1784:	str	w12, [x24]
    1788:	cmp	x30, x0
    178c:	b.ne	17e8 <gconv@@Base+0xf28>  // b.any
    1790:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1794:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1798:	adrp	x0, 2000 <gconv@@Base+0x1740>
    179c:	add	x3, x3, #0x2e8
    17a0:	add	x1, x1, #0x130
    17a4:	add	x0, x0, #0x270
    17a8:	mov	w2, #0x2eb                 	// #747
    17ac:	bl	750 <__assert_fail@plt>
    17b0:	mov	w2, #0x1c00                	// #7168
    17b4:	cmp	w2, w7, lsr #7
    17b8:	b.eq	1cc0 <gconv@@Base+0x1400>  // b.none
    17bc:	cbz	x26, 1778 <gconv@@Base+0xeb8>
    17c0:	str	w12, [x24]
    17c4:	ldr	w0, [x25, #16]
    17c8:	tbnz	w0, #3, 1b50 <gconv@@Base+0x1290>
    17cc:	ldr	x23, [sp, #224]
    17d0:	tbnz	w19, #1, 1b9c <gconv@@Base+0x12dc>
    17d4:	str	x23, [x28]
    17d8:	ldr	x0, [sp, #216]
    17dc:	str	w12, [x24]
    17e0:	cmp	x0, x30
    17e4:	b.eq	1790 <gconv@@Base+0xed0>  // b.none
    17e8:	adrp	x3, 2000 <gconv@@Base+0x1740>
    17ec:	adrp	x1, 2000 <gconv@@Base+0x1740>
    17f0:	adrp	x0, 2000 <gconv@@Base+0x1740>
    17f4:	add	x3, x3, #0x2e8
    17f8:	add	x1, x1, #0x130
    17fc:	add	x0, x0, #0x258
    1800:	mov	w2, #0x2ea                 	// #746
    1804:	bl	750 <__assert_fail@plt>
    1808:	adrp	x0, 8000 <gconv@@Base+0x7740>
    180c:	cmp	w7, #0xa8
    1810:	add	x0, x0, #0x578
    1814:	mov	w4, #0xb1                  	// #177
    1818:	b.hi	1828 <gconv@@Base+0xf68>  // b.pmore
    181c:	b	1cb8 <gconv@@Base+0x13f8>
    1820:	ldrh	w4, [x2, #10]
    1824:	mov	x0, x2
    1828:	cmp	w7, w4
    182c:	add	x2, x0, #0x8
    1830:	b.hi	1820 <gconv@@Base+0xf60>  // b.pmore
    1834:	ldrh	w0, [x0, #8]
    1838:	cmp	w7, w0
    183c:	b.cc	1c28 <gconv@@Base+0x1368>  // b.lo, b.ul, b.last
    1840:	ldr	w0, [x2, #4]
    1844:	adrp	x2, 2000 <gconv@@Base+0x1740>
    1848:	add	x2, x2, #0xa38
    184c:	cmp	w7, #0x0
    1850:	add	w0, w7, w0
    1854:	lsl	x0, x0, #1
    1858:	add	x4, x0, x2
    185c:	ldrb	w0, [x0, x2]
    1860:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1864:	b.eq	1c28 <gconv@@Base+0x1368>  // b.none
    1868:	cbnz	w12, 188c <gconv@@Base+0xfcc>
    186c:	add	x2, x30, #0x1
    1870:	cmp	x21, x2
    1874:	b.cc	1e10 <gconv@@Base+0x1550>  // b.lo, b.ul, b.last
    1878:	str	x2, [sp, #232]
    187c:	mov	w2, #0xe                   	// #14
    1880:	strb	w2, [x30]
    1884:	mov	w12, #0x40                  	// #64
    1888:	ldr	x30, [sp, #232]
    188c:	add	x2, x30, #0x2
    1890:	cmp	x21, x2
    1894:	b.cc	19f4 <gconv@@Base+0x1134>  // b.lo, b.ul, b.last
    1898:	add	x2, x30, #0x1
    189c:	str	x2, [sp, #232]
    18a0:	strb	w0, [x30]
    18a4:	ldr	x0, [sp, #232]
    18a8:	ldrb	w2, [x4, #1]
    18ac:	add	x4, x0, #0x1
    18b0:	str	x4, [sp, #232]
    18b4:	strb	w2, [x0]
    18b8:	b	10bc <gconv@@Base+0x7fc>
    18bc:	mov	x0, #0x4                   	// #4
    18c0:	mov	x12, #0x0                   	// #0
    18c4:	b	e80 <gconv@@Base+0x5c0>
    18c8:	mov	x1, #0x5                   	// #5
    18cc:	b	15e0 <gconv@@Base+0xd20>
    18d0:	add	x23, x23, #0x1
    18d4:	mov	w12, #0x0                   	// #0
    18d8:	b	1318 <gconv@@Base+0xa58>
    18dc:	add	x23, x23, #0x1
    18e0:	mov	w12, #0x40                  	// #64
    18e4:	b	1318 <gconv@@Base+0xa58>
    18e8:	mov	x2, x20
    18ec:	mov	x19, x28
    18f0:	mov	w5, w12
    18f4:	mov	w8, #0x4                   	// #4
    18f8:	b	c5c <gconv@@Base+0x39c>
    18fc:	str	x20, [x9]
    1900:	cmp	x23, x20
    1904:	b.cs	192c <gconv@@Base+0x106c>  // b.hs, b.nlast
    1908:	add	x23, x23, #0x1
    190c:	add	x10, x10, x12
    1910:	str	x23, [sp, #224]
    1914:	cmp	x20, x23
    1918:	add	x10, x10, #0x1
    191c:	add	x23, x23, #0x1
    1920:	ldurb	w0, [x23, #-2]
    1924:	strb	w0, [x10, #3]
    1928:	b.ne	1910 <gconv@@Base+0x1050>  // b.any
    192c:	mov	w8, #0x7                   	// #7
    1930:	ldp	x23, x24, [sp, #48]
    1934:	b	c78 <gconv@@Base+0x3b8>
    1938:	cbnz	w8, 112c <gconv@@Base+0x86c>
    193c:	ldr	w11, [x10]
    1940:	ldr	w7, [x21, #16]
    1944:	ldr	x23, [x9]
    1948:	b	980 <gconv@@Base+0xc0>
    194c:	mov	w0, #0x5b                  	// #91
    1950:	strb	w0, [x2]
    1954:	b	f68 <gconv@@Base+0x6a8>
    1958:	cmp	w5, #0x40
    195c:	b.ne	1d9c <gconv@@Base+0x14dc>  // b.any
    1960:	add	x1, x7, x8
    1964:	add	x2, x7, #0x1
    1968:	cmp	x1, x2
    196c:	b.ls	1e4c <gconv@@Base+0x158c>  // b.plast
    1970:	ldrb	w0, [sp, #241]
    1974:	mov	w1, #0x4040                	// #16448
    1978:	adrp	x2, 2000 <gconv@@Base+0x1740>
    197c:	add	x2, x2, #0x2f0
    1980:	add	w0, w0, w6, lsl #8
    1984:	cmp	w0, w1
    1988:	b.ls	19b4 <gconv@@Base+0x10f4>  // b.plast
    198c:	mov	w1, #0x4158                	// #16728
    1990:	b	1998 <gconv@@Base+0x10d8>
    1994:	ldrh	w1, [x2, #10]
    1998:	add	x2, x2, #0x8
    199c:	cmp	w0, w1
    19a0:	b.hi	1994 <gconv@@Base+0x10d4>  // b.pmore
    19a4:	ldrh	w1, [x2]
    19a8:	mov	w5, #0xffff                	// #65535
    19ac:	cmp	w1, w5
    19b0:	b.eq	1ccc <gconv@@Base+0x140c>  // b.none
    19b4:	cmp	w0, w1
    19b8:	b.cc	1ccc <gconv@@Base+0x140c>  // b.lo, b.ul, b.last
    19bc:	ldr	w2, [x2, #4]
    19c0:	cmp	w0, #0x0
    19c4:	adrp	x1, 10000 <gconv@@Base+0xf740>
    19c8:	add	x1, x1, #0x9f0
    19cc:	add	w0, w0, w2
    19d0:	ldrh	w0, [x1, x0, lsl #1]
    19d4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    19d8:	b.eq	1ccc <gconv@@Base+0x140c>  // b.none
    19dc:	str	w0, [x24]
    19e0:	mov	x1, #0x2                   	// #2
    19e4:	mov	x24, x4
    19e8:	ldr	w11, [x10]
    19ec:	and	w3, w11, #0x7
    19f0:	b	1288 <gconv@@Base+0x9c8>
    19f4:	mov	x9, x28
    19f8:	mov	x21, x25
    19fc:	ldr	x0, [sp, #224]
    1a00:	mov	x18, x27
    1a04:	str	x0, [x9]
    1a08:	mov	x27, x22
    1a0c:	ldr	x0, [sp, #216]
    1a10:	str	w12, [x24]
    1a14:	ldr	w7, [sp, #112]
    1a18:	cmp	x30, x0
    1a1c:	ldr	x25, [sp, #104]
    1a20:	ldr	x28, [sp, #120]
    1a24:	ldr	x22, [sp, #136]
    1a28:	b.eq	159c <gconv@@Base+0xcdc>  // b.none
    1a2c:	b	17e8 <gconv@@Base+0xf28>
    1a30:	adrp	x0, 8000 <gconv@@Base+0x7740>
    1a34:	cmp	w1, #0xa8
    1a38:	add	x0, x0, #0x578
    1a3c:	mov	w3, #0xb1                  	// #177
    1a40:	b.hi	1a50 <gconv@@Base+0x1190>  // b.pmore
    1a44:	b	20bc <gconv@@Base+0x17fc>
    1a48:	ldrh	w3, [x2, #10]
    1a4c:	mov	x0, x2
    1a50:	cmp	w1, w3
    1a54:	add	x2, x0, #0x8
    1a58:	b.hi	1a48 <gconv@@Base+0x1188>  // b.pmore
    1a5c:	ldrh	w0, [x0, #8]
    1a60:	cmp	w1, w0
    1a64:	b.cc	1ff4 <gconv@@Base+0x1734>  // b.lo, b.ul, b.last
    1a68:	ldr	w0, [x2, #4]
    1a6c:	adrp	x2, 2000 <gconv@@Base+0x1740>
    1a70:	add	x2, x2, #0xa38
    1a74:	add	w0, w1, w0
    1a78:	lsl	x0, x0, #1
    1a7c:	add	x3, x0, x2
    1a80:	ldrb	w2, [x0, x2]
    1a84:	cmp	w2, #0x0
    1a88:	ccmp	w1, #0x0, #0x4, eq  // eq = none
    1a8c:	b.ne	1ff4 <gconv@@Base+0x1734>  // b.any
    1a90:	cbnz	w5, 1be0 <gconv@@Base+0x1320>
    1a94:	add	x0, x24, #0x1
    1a98:	cmp	x22, x0
    1a9c:	b.cc	176c <gconv@@Base+0xeac>  // b.lo, b.ul, b.last
    1aa0:	str	x0, [sp, #232]
    1aa4:	mov	w0, #0xe                   	// #14
    1aa8:	strb	w0, [x24]
    1aac:	ldr	x0, [sp, #232]
    1ab0:	add	x1, x0, #0x2
    1ab4:	cmp	x22, x1
    1ab8:	b.cc	1760 <gconv@@Base+0xea0>  // b.lo, b.ul, b.last
    1abc:	add	x1, x0, #0x1
    1ac0:	str	x1, [sp, #232]
    1ac4:	strb	w2, [x0]
    1ac8:	ldr	x0, [sp, #232]
    1acc:	ldrb	w1, [x3, #1]
    1ad0:	add	x2, x0, #0x1
    1ad4:	str	x2, [sp, #232]
    1ad8:	strb	w1, [x0]
    1adc:	b	f68 <gconv@@Base+0x6a8>
    1ae0:	mov	w0, #0x1c00                	// #7168
    1ae4:	cmp	w0, w1, lsr #7
    1ae8:	b.eq	2034 <gconv@@Base+0x1774>  // b.none
    1aec:	ldr	x0, [sp, #176]
    1af0:	cbz	x0, 1cd8 <gconv@@Base+0x1418>
    1af4:	str	w5, [x10]
    1af8:	ldr	w0, [x21, #16]
    1afc:	tbnz	w0, #3, 1f08 <gconv@@Base+0x1648>
    1b00:	tbz	w19, #1, 1cd8 <gconv@@Base+0x1418>
    1b04:	ldr	x3, [sp, #176]
    1b08:	add	x2, x7, #0x4
    1b0c:	mov	x0, x2
    1b10:	str	x2, [sp, #224]
    1b14:	ldr	x1, [x3]
    1b18:	add	x1, x1, #0x1
    1b1c:	str	x1, [x3]
    1b20:	b	f7c <gconv@@Base+0x6bc>
    1b24:	cbz	x10, 15dc <gconv@@Base+0xd1c>
    1b28:	cbz	w5, 15dc <gconv@@Base+0xd1c>
    1b2c:	ldr	x0, [x10]
    1b30:	add	x23, x23, #0x1
    1b34:	mov	x1, #0x6                   	// #6
    1b38:	add	x0, x0, #0x1
    1b3c:	str	x0, [x10]
    1b40:	b	1318 <gconv@@Base+0xa58>
    1b44:	mov	w8, #0x6                   	// #6
    1b48:	ldr	x0, [sp, #224]
    1b4c:	b	aa0 <gconv@@Base+0x1e0>
    1b50:	ldr	x2, [x28]
    1b54:	mov	x6, x26
    1b58:	ldr	x5, [sp, #192]
    1b5c:	mov	x4, x20
    1b60:	mov	x1, x25
    1b64:	mov	x0, x22
    1b68:	str	x3, [sp, #200]
    1b6c:	bl	700 <__gconv_transliterate@plt>
    1b70:	mov	w5, w0
    1b74:	ldr	w12, [x24]
    1b78:	cmp	w0, #0x6
    1b7c:	adrp	x15, 2000 <gconv@@Base+0x1740>
    1b80:	and	w12, w12, #0xfffffff8
    1b84:	ldr	x3, [sp, #200]
    1b88:	b.eq	1bd8 <gconv@@Base+0x1318>  // b.none
    1b8c:	cmp	w0, #0x5
    1b90:	b.eq	2080 <gconv@@Base+0x17c0>  // b.none
    1b94:	ldp	x23, x30, [sp, #224]
    1b98:	b	10c8 <gconv@@Base+0x808>
    1b9c:	ldr	x0, [x26]
    1ba0:	add	x23, x23, #0x4
    1ba4:	mov	w5, #0x6                   	// #6
    1ba8:	str	x23, [sp, #224]
    1bac:	add	x0, x0, #0x1
    1bb0:	str	x0, [x26]
    1bb4:	b	10c8 <gconv@@Base+0x808>
    1bb8:	adrp	x0, 8000 <gconv@@Base+0x7740>
    1bbc:	cmp	w7, #0xa8
    1bc0:	add	x0, x0, #0x578
    1bc4:	mov	w4, #0xb1                  	// #177
    1bc8:	b.hi	1828 <gconv@@Base+0xf68>  // b.pmore
    1bcc:	mov	x2, x0
    1bd0:	mov	w0, #0xa6                  	// #166
    1bd4:	b	1838 <gconv@@Base+0xf78>
    1bd8:	ldr	x30, [sp, #232]
    1bdc:	b	17cc <gconv@@Base+0xf0c>
    1be0:	add	x0, x24, #0x2
    1be4:	cmp	x22, x0
    1be8:	b.cc	176c <gconv@@Base+0xeac>  // b.lo, b.ul, b.last
    1bec:	mov	x0, x24
    1bf0:	b	1abc <gconv@@Base+0x11fc>
    1bf4:	adrp	x0, 8000 <gconv@@Base+0x7740>
    1bf8:	cmp	w1, #0xa8
    1bfc:	add	x0, x0, #0x578
    1c00:	mov	w3, #0xb1                  	// #177
    1c04:	b.hi	1a50 <gconv@@Base+0x1190>  // b.pmore
    1c08:	mov	x2, x0
    1c0c:	mov	w0, #0xa6                  	// #166
    1c10:	b	1a60 <gconv@@Base+0x11a0>
    1c14:	str	x20, [x9]
    1c18:	cmp	x8, x28
    1c1c:	str	w12, [x24]
    1c20:	b.eq	1790 <gconv@@Base+0xed0>  // b.none
    1c24:	b	17e8 <gconv@@Base+0xf28>
    1c28:	cbz	x26, 1778 <gconv@@Base+0xeb8>
    1c2c:	str	w12, [x24]
    1c30:	ldr	w0, [x25, #16]
    1c34:	tbz	w0, #3, 17cc <gconv@@Base+0xf0c>
    1c38:	ldr	x2, [x28]
    1c3c:	mov	x6, x26
    1c40:	ldr	x5, [sp, #192]
    1c44:	mov	x4, x20
    1c48:	mov	x1, x25
    1c4c:	mov	x0, x22
    1c50:	str	x3, [sp, #200]
    1c54:	bl	700 <__gconv_transliterate@plt>
    1c58:	mov	w5, w0
    1c5c:	ldr	w12, [x24]
    1c60:	cmp	w0, #0x6
    1c64:	adrp	x15, 2000 <gconv@@Base+0x1740>
    1c68:	and	w12, w12, #0xfffffff8
    1c6c:	ldr	x3, [sp, #200]
    1c70:	b.eq	1bd8 <gconv@@Base+0x1318>  // b.none
    1c74:	cmp	w0, #0x5
    1c78:	ldp	x23, x30, [sp, #224]
    1c7c:	b.ne	10c8 <gconv@@Base+0x808>  // b.any
    1c80:	mov	x9, x28
    1c84:	mov	x21, x25
    1c88:	ldr	x0, [sp, #216]
    1c8c:	mov	x18, x27
    1c90:	str	x23, [x9]
    1c94:	mov	x27, x22
    1c98:	str	w12, [x24]
    1c9c:	cmp	x30, x0
    1ca0:	ldr	w7, [sp, #112]
    1ca4:	ldr	x25, [sp, #104]
    1ca8:	ldr	x28, [sp, #120]
    1cac:	ldr	x22, [sp, #136]
    1cb0:	b.eq	159c <gconv@@Base+0xcdc>  // b.none
    1cb4:	b	17e8 <gconv@@Base+0xf28>
    1cb8:	mov	x2, x0
    1cbc:	b	1840 <gconv@@Base+0xf80>
    1cc0:	mov	x23, x0
    1cc4:	str	x0, [sp, #224]
    1cc8:	b	10c8 <gconv@@Base+0x808>
    1ccc:	ldr	x0, [sp, #176]
    1cd0:	cbz	x0, 1cd8 <gconv@@Base+0x1418>
    1cd4:	tbnz	w19, #1, 2044 <gconv@@Base+0x1784>
    1cd8:	mov	w8, #0x6                   	// #6
    1cdc:	ldp	x23, x24, [sp, #48]
    1ce0:	b	c78 <gconv@@Base+0x3b8>
    1ce4:	str	x23, [x9]
    1ce8:	cmp	x8, x28
    1cec:	str	w12, [x24]
    1cf0:	b.eq	15a4 <gconv@@Base+0xce4>  // b.none
    1cf4:	b	17e8 <gconv@@Base+0xf28>
    1cf8:	mov	x0, x25
    1cfc:	str	x2, [sp, #232]
    1d00:	bl	740 <_dl_mcount_wrapper_check@plt>
    1d04:	ldr	x1, [sp, #152]
    1d08:	mov	w7, w27
    1d0c:	mov	x5, x26
    1d10:	mov	x3, x20
    1d14:	add	x2, sp, #0xe8
    1d18:	mov	x0, x28
    1d1c:	mov	w6, #0x0                   	// #0
    1d20:	mov	x4, #0x0                   	// #0
    1d24:	blr	x25
    1d28:	mov	w8, w0
    1d2c:	cmp	w0, #0x4
    1d30:	b.eq	1608 <gconv@@Base+0xd48>  // b.none
    1d34:	ldr	x0, [sp, #232]
    1d38:	cmp	x0, x20
    1d3c:	b.ne	206c <gconv@@Base+0x17ac>  // b.any
    1d40:	cbnz	w8, c78 <gconv@@Base+0x3b8>
    1d44:	b	1608 <gconv@@Base+0xd48>
    1d48:	mov	w3, #0x4040                	// #16448
    1d4c:	b	1390 <gconv@@Base+0xad0>
    1d50:	mov	x1, #0x7                   	// #7
    1d54:	b	15e0 <gconv@@Base+0xd20>
    1d58:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1d5c:	add	x3, x3, #0x2d0
    1d60:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1d64:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1d68:	add	x1, x1, #0x160
    1d6c:	add	x0, x0, #0x1b0
    1d70:	mov	w2, #0x1c9                 	// #457
    1d74:	bl	750 <__assert_fail@plt>
    1d78:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1d7c:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1d80:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1d84:	add	x3, x3, #0x2e8
    1d88:	add	x1, x1, #0x130
    1d8c:	add	x0, x0, #0x148
    1d90:	mov	w2, #0x1a4                 	// #420
    1d94:	stp	x23, x24, [sp, #48]
    1d98:	bl	750 <__assert_fail@plt>
    1d9c:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1da0:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1da4:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1da8:	add	x3, x3, #0x2d0
    1dac:	add	x1, x1, #0x160
    1db0:	add	x0, x0, #0x1a0
    1db4:	mov	w2, #0x1be                 	// #446
    1db8:	bl	750 <__assert_fail@plt>
    1dbc:	ldr	x0, [sp, #176]
    1dc0:	cbz	x0, 1cd8 <gconv@@Base+0x1418>
    1dc4:	tbz	w19, #1, 1cd8 <gconv@@Base+0x1418>
    1dc8:	mov	x2, x0
    1dcc:	mov	x1, #0x1                   	// #1
    1dd0:	ldr	x0, [x0]
    1dd4:	add	x0, x0, x1
    1dd8:	str	x0, [x2]
    1ddc:	b	1288 <gconv@@Base+0x9c8>
    1de0:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1de4:	add	x3, x3, #0x2d0
    1de8:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1dec:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1df0:	add	x1, x1, #0x160
    1df4:	add	x0, x0, #0x170
    1df8:	mov	w2, #0x18b                 	// #395
    1dfc:	bl	750 <__assert_fail@plt>
    1e00:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1e04:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1e08:	add	x3, x3, #0x2b8
    1e0c:	b	1d64 <gconv@@Base+0x14a4>
    1e10:	mov	x9, x28
    1e14:	mov	x21, x25
    1e18:	ldr	x0, [sp, #224]
    1e1c:	mov	x18, x27
    1e20:	str	x0, [x9]
    1e24:	mov	x27, x22
    1e28:	ldr	x0, [sp, #216]
    1e2c:	str	wzr, [x24]
    1e30:	ldr	w7, [sp, #112]
    1e34:	cmp	x30, x0
    1e38:	ldr	x25, [sp, #104]
    1e3c:	ldr	x28, [sp, #120]
    1e40:	ldr	x22, [sp, #136]
    1e44:	b.eq	159c <gconv@@Base+0xcdc>  // b.none
    1e48:	b	17e8 <gconv@@Base+0xf28>
    1e4c:	add	x7, x7, #0x2
    1e50:	cmp	x1, x7
    1e54:	b.eq	1ed8 <gconv@@Base+0x1618>  // b.none
    1e58:	mov	w0, w0
    1e5c:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1e60:	sub	x0, x8, x0
    1e64:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1e68:	add	x23, x23, x0
    1e6c:	str	x23, [x9]
    1e70:	add	x3, x3, #0x2d0
    1e74:	add	x1, x1, #0x160
    1e78:	cmp	x8, #0x40
    1e7c:	b.le	1ec8 <gconv@@Base+0x1608>
    1e80:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1e84:	mov	w2, #0x1e6                 	// #486
    1e88:	add	x0, x0, #0x228
    1e8c:	bl	750 <__assert_fail@plt>
    1e90:	mov	w1, #0x0                   	// #0
    1e94:	b	16d0 <gconv@@Base+0xe10>
    1e98:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1e9c:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1ea0:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1ea4:	add	x3, x3, #0x2e8
    1ea8:	add	x1, x1, #0x130
    1eac:	add	x0, x0, #0x290
    1eb0:	mov	w2, #0x31e                 	// #798
    1eb4:	bl	750 <__assert_fail@plt>
    1eb8:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1ebc:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1ec0:	add	x3, x3, #0x2b8
    1ec4:	add	x1, x1, #0x160
    1ec8:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1ecc:	mov	w2, #0x1e5                 	// #485
    1ed0:	add	x0, x0, #0x200
    1ed4:	bl	750 <__assert_fail@plt>
    1ed8:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1edc:	add	x3, x3, #0x2d0
    1ee0:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1ee4:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1ee8:	add	x1, x1, #0x160
    1eec:	add	x0, x0, #0x1d8
    1ef0:	mov	w2, #0x1db                 	// #475
    1ef4:	bl	750 <__assert_fail@plt>
    1ef8:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1efc:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1f00:	add	x3, x3, #0x2b8
    1f04:	b	1dec <gconv@@Base+0x152c>
    1f08:	ldr	x6, [sp, #176]
    1f0c:	mov	x0, x13
    1f10:	mov	x2, x23
    1f14:	add	x5, sp, #0xe8
    1f18:	add	x3, sp, #0xe0
    1f1c:	mov	x1, x21
    1f20:	stp	x13, x4, [sp, #104]
    1f24:	stp	x10, x12, [sp, #120]
    1f28:	stp	x9, x14, [sp, #136]
    1f2c:	str	x7, [sp, #160]
    1f30:	bl	700 <__gconv_transliterate@plt>
    1f34:	mov	w8, w0
    1f38:	cmp	w0, #0x6
    1f3c:	ldp	x13, x4, [sp, #104]
    1f40:	ldp	x10, x12, [sp, #120]
    1f44:	ldp	x9, x14, [sp, #136]
    1f48:	ldr	x7, [sp, #160]
    1f4c:	ldr	x0, [sp, #224]
    1f50:	b.eq	1fd0 <gconv@@Base+0x1710>  // b.none
    1f54:	cmp	x0, x7
    1f58:	b.ne	f7c <gconv@@Base+0x6bc>  // b.any
    1f5c:	cmp	w8, #0x7
    1f60:	b.ne	1938 <gconv@@Base+0x1078>  // b.any
    1f64:	add	x0, x7, #0x4
    1f68:	cmp	x4, x0
    1f6c:	b.eq	205c <gconv@@Base+0x179c>  // b.none
    1f70:	ldr	w0, [x10]
    1f74:	ldr	x1, [x9]
    1f78:	and	x2, x0, #0x7
    1f7c:	sub	x2, x12, x2
    1f80:	and	w0, w0, #0xfffffff8
    1f84:	add	x1, x1, x2
    1f88:	str	x1, [x9]
    1f8c:	cmp	x12, w0, sxtw
    1f90:	b.le	1eb8 <gconv@@Base+0x15f8>
    1f94:	cmp	x12, #0x4
    1f98:	b.hi	1fe0 <gconv@@Base+0x1720>  // b.pmore
    1f9c:	orr	w0, w0, w12
    1fa0:	str	w0, [x10]
    1fa4:	cmp	x4, x7
    1fa8:	b.ls	192c <gconv@@Base+0x106c>  // b.plast
    1fac:	add	x7, x7, #0x1
    1fb0:	add	x10, x10, #0x4
    1fb4:	str	x7, [sp, #224]
    1fb8:	cmp	x4, x7
    1fbc:	add	x7, x7, #0x1
    1fc0:	ldurb	w0, [x7, #-2]
    1fc4:	strb	w0, [x10], #1
    1fc8:	b.ne	1fb4 <gconv@@Base+0x16f4>  // b.any
    1fcc:	b	192c <gconv@@Base+0x106c>
    1fd0:	tbnz	w19, #1, 2010 <gconv@@Base+0x1750>
    1fd4:	cmp	x0, x7
    1fd8:	b.ne	f7c <gconv@@Base+0x6bc>  // b.any
    1fdc:	b	1cd8 <gconv@@Base+0x1418>
    1fe0:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1fe4:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1fe8:	add	x3, x3, #0x2b8
    1fec:	add	x1, x1, #0x160
    1ff0:	b	1e80 <gconv@@Base+0x15c0>
    1ff4:	ldr	x0, [sp, #176]
    1ff8:	cbz	x0, 1cd8 <gconv@@Base+0x1418>
    1ffc:	str	w5, [x10]
    2000:	ldr	w0, [x21, #16]
    2004:	tbnz	w0, #3, 1f08 <gconv@@Base+0x1648>
    2008:	tbz	w19, #1, 1cd8 <gconv@@Base+0x1418>
    200c:	ldr	x0, [sp, #224]
    2010:	add	x0, x0, #0x4
    2014:	ldr	x2, [sp, #176]
    2018:	str	x0, [sp, #224]
    201c:	cmp	x0, x7
    2020:	ldr	x1, [x2]
    2024:	add	x1, x1, #0x1
    2028:	str	x1, [x2]
    202c:	b.ne	f7c <gconv@@Base+0x6bc>  // b.any
    2030:	b	1cd8 <gconv@@Base+0x1418>
    2034:	add	x0, x7, #0x4
    2038:	mov	x7, #0x4                   	// #4
    203c:	str	x0, [sp, #224]
    2040:	b	f88 <gconv@@Base+0x6c8>
    2044:	mov	x2, x0
    2048:	mov	x1, #0x2                   	// #2
    204c:	ldr	x0, [x0]
    2050:	add	x0, x0, #0x1
    2054:	str	x0, [x2]
    2058:	b	1288 <gconv@@Base+0x9c8>
    205c:	adrp	x3, 2000 <gconv@@Base+0x1740>
    2060:	adrp	x1, 2000 <gconv@@Base+0x1740>
    2064:	add	x3, x3, #0x2b8
    2068:	b	1ee4 <gconv@@Base+0x1624>
    206c:	str	w19, [x22]
    2070:	cbnz	w8, c78 <gconv@@Base+0x3b8>
    2074:	b	1608 <gconv@@Base+0xd48>
    2078:	mov	w8, #0x5                   	// #5
    207c:	b	c78 <gconv@@Base+0x3b8>
    2080:	mov	x9, x28
    2084:	mov	x21, x25
    2088:	ldp	x30, x0, [sp, #216]
    208c:	mov	x18, x27
    2090:	str	x0, [x9]
    2094:	mov	x27, x22
    2098:	ldr	x0, [sp, #232]
    209c:	str	w12, [x24]
    20a0:	ldr	w7, [sp, #112]
    20a4:	cmp	x0, x30
    20a8:	ldr	x25, [sp, #104]
    20ac:	ldr	x28, [sp, #120]
    20b0:	ldr	x22, [sp, #136]
    20b4:	b.eq	159c <gconv@@Base+0xcdc>  // b.none
    20b8:	b	17e8 <gconv@@Base+0xf28>
    20bc:	mov	x2, x0
    20c0:	b	1a68 <gconv@@Base+0x11a8>
    20c4:	stp	x23, x24, [sp, #48]
    20c8:	bl	710 <__stack_chk_fail@plt>
    20cc:	adrp	x3, 2000 <gconv@@Base+0x1740>
    20d0:	adrp	x1, 2000 <gconv@@Base+0x1740>
    20d4:	adrp	x0, 2000 <gconv@@Base+0x1740>
    20d8:	add	x3, x3, #0x2a8
    20dc:	add	x1, x1, #0x160
    20e0:	add	x0, x0, #0x1a0
    20e4:	mov	w2, #0x150                 	// #336
    20e8:	bl	750 <__assert_fail@plt>
    20ec:	adrp	x3, 2000 <gconv@@Base+0x1740>
    20f0:	adrp	x1, 2000 <gconv@@Base+0x1740>
    20f4:	adrp	x0, 2000 <gconv@@Base+0x1740>
    20f8:	add	x3, x3, #0x2e8
    20fc:	add	x1, x1, #0x130
    2100:	add	x0, x0, #0x148
    2104:	mov	w2, #0x234                 	// #564
    2108:	bl	750 <__assert_fail@plt>

Disassembly of section .fini:

000000000000210c <.fini>:
    210c:	stp	x29, x30, [sp, #-16]!
    2110:	mov	x29, sp
    2114:	ldp	x29, x30, [sp], #16
    2118:	ret
