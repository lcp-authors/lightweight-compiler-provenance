
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//linux.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_swap_bytes64>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	rev	x0, x0
      10:	add	sp, sp, #0x10
      14:	ret

0000000000000018 <grub_utf8_process>:
      18:	sub	sp, sp, #0x20
      1c:	strb	w0, [sp, #31]
      20:	str	x1, [sp, #16]
      24:	str	x2, [sp, #8]
      28:	ldr	x0, [sp, #8]
      2c:	ldr	w0, [x0]
      30:	cmp	w0, #0x0
      34:	b.eq	fc <grub_utf8_process+0xe4>  // b.none
      38:	ldrb	w0, [sp, #31]
      3c:	and	w0, w0, #0xc0
      40:	cmp	w0, #0x80
      44:	b.eq	58 <grub_utf8_process+0x40>  // b.none
      48:	ldr	x0, [sp, #8]
      4c:	str	wzr, [x0]
      50:	mov	w0, #0x0                   	// #0
      54:	b	1e4 <grub_utf8_process+0x1cc>
      58:	ldr	x0, [sp, #16]
      5c:	ldr	w0, [x0]
      60:	lsl	w1, w0, #6
      64:	ldr	x0, [sp, #16]
      68:	str	w1, [x0]
      6c:	ldr	x0, [sp, #16]
      70:	ldr	w1, [x0]
      74:	ldrb	w0, [sp, #31]
      78:	and	w0, w0, #0x3f
      7c:	orr	w1, w1, w0
      80:	ldr	x0, [sp, #16]
      84:	str	w1, [x0]
      88:	ldr	x0, [sp, #8]
      8c:	ldr	w0, [x0]
      90:	sub	w1, w0, #0x1
      94:	ldr	x0, [sp, #8]
      98:	str	w1, [x0]
      9c:	ldr	x0, [sp, #8]
      a0:	ldr	w0, [x0]
      a4:	cmp	w0, #0x1
      a8:	b.ne	bc <grub_utf8_process+0xa4>  // b.any
      ac:	ldr	x0, [sp, #16]
      b0:	ldr	w0, [x0]
      b4:	cmp	w0, #0x1f
      b8:	b.ls	dc <grub_utf8_process+0xc4>  // b.plast
      bc:	ldr	x0, [sp, #8]
      c0:	ldr	w0, [x0]
      c4:	cmp	w0, #0x2
      c8:	b.ne	f4 <grub_utf8_process+0xdc>  // b.any
      cc:	ldr	x0, [sp, #16]
      d0:	ldr	w0, [x0]
      d4:	cmp	w0, #0xf
      d8:	b.hi	f4 <grub_utf8_process+0xdc>  // b.pmore
      dc:	ldr	x0, [sp, #16]
      e0:	str	wzr, [x0]
      e4:	ldr	x0, [sp, #8]
      e8:	str	wzr, [x0]
      ec:	mov	w0, #0x0                   	// #0
      f0:	b	1e4 <grub_utf8_process+0x1cc>
      f4:	mov	w0, #0x1                   	// #1
      f8:	b	1e4 <grub_utf8_process+0x1cc>
      fc:	ldrsb	w0, [sp, #31]
     100:	cmp	w0, #0x0
     104:	b.lt	11c <grub_utf8_process+0x104>  // b.tstop
     108:	ldrb	w1, [sp, #31]
     10c:	ldr	x0, [sp, #16]
     110:	str	w1, [x0]
     114:	mov	w0, #0x1                   	// #1
     118:	b	1e4 <grub_utf8_process+0x1cc>
     11c:	ldrb	w0, [sp, #31]
     120:	and	w0, w0, #0xe0
     124:	cmp	w0, #0xc0
     128:	b.ne	178 <grub_utf8_process+0x160>  // b.any
     12c:	ldr	x0, [sp, #8]
     130:	mov	w1, #0x1                   	// #1
     134:	str	w1, [x0]
     138:	ldrb	w0, [sp, #31]
     13c:	and	w1, w0, #0x1f
     140:	ldr	x0, [sp, #16]
     144:	str	w1, [x0]
     148:	ldr	x0, [sp, #16]
     14c:	ldr	w0, [x0]
     150:	cmp	w0, #0x1
     154:	b.hi	170 <grub_utf8_process+0x158>  // b.pmore
     158:	ldr	x0, [sp, #8]
     15c:	str	wzr, [x0]
     160:	ldr	x0, [sp, #16]
     164:	str	wzr, [x0]
     168:	mov	w0, #0x0                   	// #0
     16c:	b	1e4 <grub_utf8_process+0x1cc>
     170:	mov	w0, #0x1                   	// #1
     174:	b	1e4 <grub_utf8_process+0x1cc>
     178:	ldrb	w0, [sp, #31]
     17c:	and	w0, w0, #0xf0
     180:	cmp	w0, #0xe0
     184:	b.ne	1ac <grub_utf8_process+0x194>  // b.any
     188:	ldr	x0, [sp, #8]
     18c:	mov	w1, #0x2                   	// #2
     190:	str	w1, [x0]
     194:	ldrb	w0, [sp, #31]
     198:	and	w1, w0, #0xf
     19c:	ldr	x0, [sp, #16]
     1a0:	str	w1, [x0]
     1a4:	mov	w0, #0x1                   	// #1
     1a8:	b	1e4 <grub_utf8_process+0x1cc>
     1ac:	ldrb	w0, [sp, #31]
     1b0:	and	w0, w0, #0xf8
     1b4:	cmp	w0, #0xf0
     1b8:	b.ne	1e0 <grub_utf8_process+0x1c8>  // b.any
     1bc:	ldr	x0, [sp, #8]
     1c0:	mov	w1, #0x3                   	// #3
     1c4:	str	w1, [x0]
     1c8:	ldrb	w0, [sp, #31]
     1cc:	and	w1, w0, #0x7
     1d0:	ldr	x0, [sp, #16]
     1d4:	str	w1, [x0]
     1d8:	mov	w0, #0x1                   	// #1
     1dc:	b	1e4 <grub_utf8_process+0x1cc>
     1e0:	mov	w0, #0x0                   	// #0
     1e4:	add	sp, sp, #0x20
     1e8:	ret

00000000000001ec <grub_utf8_to_utf16>:
     1ec:	stp	x29, x30, [sp, #-96]!
     1f0:	mov	x29, sp
     1f4:	str	x0, [sp, #56]
     1f8:	str	x1, [sp, #48]
     1fc:	str	x2, [sp, #40]
     200:	str	x3, [sp, #32]
     204:	str	x4, [sp, #24]
     208:	ldr	x0, [sp, #56]
     20c:	str	x0, [sp, #88]
     210:	str	wzr, [sp, #80]
     214:	str	wzr, [sp, #76]
     218:	ldr	x0, [sp, #24]
     21c:	cmp	x0, #0x0
     220:	b.eq	384 <grub_utf8_to_utf16+0x198>  // b.none
     224:	ldr	x0, [sp, #24]
     228:	ldr	x1, [sp, #40]
     22c:	str	x1, [x0]
     230:	b	384 <grub_utf8_to_utf16+0x198>
     234:	ldr	w0, [sp, #80]
     238:	str	w0, [sp, #84]
     23c:	ldr	x0, [sp, #32]
     240:	cmn	x0, #0x1
     244:	b.eq	254 <grub_utf8_to_utf16+0x68>  // b.none
     248:	ldr	x0, [sp, #32]
     24c:	sub	x0, x0, #0x1
     250:	str	x0, [sp, #32]
     254:	ldr	x0, [sp, #40]
     258:	add	x1, x0, #0x1
     25c:	str	x1, [sp, #40]
     260:	ldrb	w3, [x0]
     264:	add	x1, sp, #0x50
     268:	add	x0, sp, #0x4c
     26c:	mov	x2, x1
     270:	mov	x1, x0
     274:	mov	w0, w3
     278:	bl	18 <grub_utf8_process>
     27c:	cmp	w0, #0x0
     280:	b.ne	2a8 <grub_utf8_to_utf16+0xbc>  // b.any
     284:	mov	w0, #0x3f                  	// #63
     288:	str	w0, [sp, #76]
     28c:	str	wzr, [sp, #80]
     290:	ldr	w0, [sp, #84]
     294:	cmp	w0, #0x0
     298:	b.eq	2a8 <grub_utf8_to_utf16+0xbc>  // b.none
     29c:	ldr	x0, [sp, #40]
     2a0:	sub	x0, x0, #0x1
     2a4:	str	x0, [sp, #40]
     2a8:	ldr	w0, [sp, #80]
     2ac:	cmp	w0, #0x0
     2b0:	b.eq	2b8 <grub_utf8_to_utf16+0xcc>  // b.none
     2b4:	b	384 <grub_utf8_to_utf16+0x198>
     2b8:	ldr	w0, [sp, #76]
     2bc:	cmp	w0, #0x0
     2c0:	b.eq	3a0 <grub_utf8_to_utf16+0x1b4>  // b.none
     2c4:	ldr	x0, [sp, #48]
     2c8:	cmp	x0, #0x1
     2cc:	b.hi	2e0 <grub_utf8_to_utf16+0xf4>  // b.pmore
     2d0:	ldr	w1, [sp, #76]
     2d4:	mov	w0, #0xffff                	// #65535
     2d8:	cmp	w1, w0
     2dc:	b.hi	3a8 <grub_utf8_to_utf16+0x1bc>  // b.pmore
     2e0:	ldr	w1, [sp, #76]
     2e4:	mov	w0, #0xffff                	// #65535
     2e8:	cmp	w1, w0
     2ec:	b.ls	360 <grub_utf8_to_utf16+0x174>  // b.plast
     2f0:	ldr	w0, [sp, #76]
     2f4:	sub	w0, w0, #0x10, lsl #12
     2f8:	lsr	w0, w0, #10
     2fc:	and	w0, w0, #0xffff
     300:	and	w0, w0, #0x3ff
     304:	and	w2, w0, #0xffff
     308:	ldr	x0, [sp, #88]
     30c:	add	x1, x0, #0x2
     310:	str	x1, [sp, #88]
     314:	mov	w1, #0xffffd800            	// #-10240
     318:	orr	w1, w2, w1
     31c:	and	w1, w1, #0xffff
     320:	strh	w1, [x0]
     324:	ldr	w0, [sp, #76]
     328:	and	w0, w0, #0xffff
     32c:	and	w0, w0, #0x3ff
     330:	and	w2, w0, #0xffff
     334:	ldr	x0, [sp, #88]
     338:	add	x1, x0, #0x2
     33c:	str	x1, [sp, #88]
     340:	mov	w1, #0xffffdc00            	// #-9216
     344:	orr	w1, w2, w1
     348:	and	w1, w1, #0xffff
     34c:	strh	w1, [x0]
     350:	ldr	x0, [sp, #48]
     354:	sub	x0, x0, #0x2
     358:	str	x0, [sp, #48]
     35c:	b	384 <grub_utf8_to_utf16+0x198>
     360:	ldr	w2, [sp, #76]
     364:	ldr	x0, [sp, #88]
     368:	add	x1, x0, #0x2
     36c:	str	x1, [sp, #88]
     370:	and	w1, w2, #0xffff
     374:	strh	w1, [x0]
     378:	ldr	x0, [sp, #48]
     37c:	sub	x0, x0, #0x1
     380:	str	x0, [sp, #48]
     384:	ldr	x0, [sp, #32]
     388:	cmp	x0, #0x0
     38c:	b.eq	3ac <grub_utf8_to_utf16+0x1c0>  // b.none
     390:	ldr	x0, [sp, #48]
     394:	cmp	x0, #0x0
     398:	b.ne	234 <grub_utf8_to_utf16+0x48>  // b.any
     39c:	b	3ac <grub_utf8_to_utf16+0x1c0>
     3a0:	nop
     3a4:	b	3ac <grub_utf8_to_utf16+0x1c0>
     3a8:	nop
     3ac:	ldr	x0, [sp, #24]
     3b0:	cmp	x0, #0x0
     3b4:	b.eq	3c4 <grub_utf8_to_utf16+0x1d8>  // b.none
     3b8:	ldr	x0, [sp, #24]
     3bc:	ldr	x1, [sp, #40]
     3c0:	str	x1, [x0]
     3c4:	ldr	x1, [sp, #88]
     3c8:	ldr	x0, [sp, #56]
     3cc:	sub	x0, x1, x0
     3d0:	asr	x0, x0, #1
     3d4:	ldp	x29, x30, [sp], #96
     3d8:	ret

00000000000003dc <grub_memcpy>:
     3dc:	stp	x29, x30, [sp, #-48]!
     3e0:	mov	x29, sp
     3e4:	str	x0, [sp, #40]
     3e8:	str	x1, [sp, #32]
     3ec:	str	x2, [sp, #24]
     3f0:	ldr	x2, [sp, #24]
     3f4:	ldr	x1, [sp, #32]
     3f8:	ldr	x0, [sp, #40]
     3fc:	bl	0 <grub_memmove>
     400:	ldp	x29, x30, [sp], #48
     404:	ret

0000000000000408 <grub_register_command>:
     408:	stp	x29, x30, [sp, #-48]!
     40c:	mov	x29, sp
     410:	str	x0, [sp, #40]
     414:	str	x1, [sp, #32]
     418:	str	x2, [sp, #24]
     41c:	str	x3, [sp, #16]
     420:	mov	w4, #0x0                   	// #0
     424:	ldr	x3, [sp, #16]
     428:	ldr	x2, [sp, #24]
     42c:	ldr	x1, [sp, #32]
     430:	ldr	x0, [sp, #40]
     434:	bl	0 <grub_register_command_prio>
     438:	ldp	x29, x30, [sp], #48
     43c:	ret

0000000000000440 <grub_file_size>:
     440:	sub	sp, sp, #0x10
     444:	str	x0, [sp, #8]
     448:	ldr	x0, [sp, #8]
     44c:	ldr	x0, [x0, #64]
     450:	add	sp, sp, #0x10
     454:	ret

0000000000000458 <grub_arch_efi_linux_check_image>:
     458:	stp	x29, x30, [sp, #-32]!
     45c:	mov	x29, sp
     460:	str	x0, [sp, #24]
     464:	ldr	x0, [sp, #24]
     468:	ldr	w1, [x0, #56]
     46c:	mov	w0, #0x5241                	// #21057
     470:	movk	w0, #0x644d, lsl #16
     474:	cmp	w1, w0
     478:	b.eq	494 <grub_arch_efi_linux_check_image+0x3c>  // b.none
     47c:	adrp	x0, 0 <grub_swap_bytes64>
     480:	add	x0, x0, #0x0
     484:	ldr	x1, [x0]
     488:	mov	w0, #0x15                  	// #21
     48c:	bl	0 <grub_error>
     490:	b	52c <grub_arch_efi_linux_check_image+0xd4>
     494:	ldr	x0, [sp, #24]
     498:	ldr	w0, [x0]
     49c:	and	w1, w0, #0xffff
     4a0:	mov	w0, #0x5a4d                	// #23117
     4a4:	cmp	w1, w0
     4a8:	b.eq	4c4 <grub_arch_efi_linux_check_image+0x6c>  // b.none
     4ac:	adrp	x0, 0 <grub_swap_bytes64>
     4b0:	add	x0, x0, #0x0
     4b4:	ldr	x1, [x0]
     4b8:	mov	w0, #0x18                  	// #24
     4bc:	bl	0 <grub_error>
     4c0:	b	52c <grub_arch_efi_linux_check_image+0xd4>
     4c4:	adrp	x0, 0 <grub_swap_bytes64>
     4c8:	add	x0, x0, #0x0
     4cc:	ldr	x3, [x0]
     4d0:	adrp	x0, 0 <grub_swap_bytes64>
     4d4:	add	x0, x0, #0x0
     4d8:	ldr	x2, [x0]
     4dc:	mov	w1, #0x3d                  	// #61
     4e0:	adrp	x0, 0 <grub_swap_bytes64>
     4e4:	add	x0, x0, #0x0
     4e8:	ldr	x0, [x0]
     4ec:	bl	0 <grub_real_dprintf>
     4f0:	ldr	x0, [sp, #24]
     4f4:	ldr	w0, [x0, #60]
     4f8:	mov	w4, w0
     4fc:	adrp	x0, 0 <grub_swap_bytes64>
     500:	add	x0, x0, #0x0
     504:	ldr	x3, [x0]
     508:	adrp	x0, 0 <grub_swap_bytes64>
     50c:	add	x0, x0, #0x0
     510:	ldr	x2, [x0]
     514:	mov	w1, #0x3e                  	// #62
     518:	adrp	x0, 0 <grub_swap_bytes64>
     51c:	add	x0, x0, #0x0
     520:	ldr	x0, [x0]
     524:	bl	0 <grub_real_dprintf>
     528:	mov	w0, #0x0                   	// #0
     52c:	ldp	x29, x30, [sp], #32
     530:	ret
     534:	nop
	...

0000000000000568 <finalize_params_linux>:
     568:	stp	x29, x30, [sp, #-64]!
     56c:	mov	x29, sp
     570:	mov	x0, #0x400                 	// #1024
     574:	bl	0 <grub_fdt_load>
     578:	str	x0, [sp, #48]
     57c:	ldr	x0, [sp, #48]
     580:	cmp	x0, #0x0
     584:	b.eq	71c <finalize_params_linux+0x1b4>  // b.none
     588:	adrp	x0, 0 <grub_swap_bytes64>
     58c:	add	x0, x0, #0x0
     590:	ldr	x2, [x0]
     594:	mov	w1, #0x0                   	// #0
     598:	ldr	x0, [sp, #48]
     59c:	bl	0 <grub_fdt_find_subnode>
     5a0:	str	w0, [sp, #60]
     5a4:	ldr	w0, [sp, #60]
     5a8:	cmp	w0, #0x0
     5ac:	b.ge	5cc <finalize_params_linux+0x64>  // b.tcont
     5b0:	adrp	x0, 0 <grub_swap_bytes64>
     5b4:	add	x0, x0, #0x0
     5b8:	ldr	x2, [x0]
     5bc:	mov	w1, #0x0                   	// #0
     5c0:	ldr	x0, [sp, #48]
     5c4:	bl	0 <grub_fdt_add_subnode>
     5c8:	str	w0, [sp, #60]
     5cc:	ldr	w0, [sp, #60]
     5d0:	cmp	w0, #0x0
     5d4:	b.le	724 <finalize_params_linux+0x1bc>
     5d8:	adrp	x0, 0 <grub_swap_bytes64>
     5dc:	add	x0, x0, #0x0
     5e0:	ldr	x0, [x0]
     5e4:	ldr	x0, [x0]
     5e8:	cmp	x0, #0x0
     5ec:	b.eq	708 <finalize_params_linux+0x1a0>  // b.none
     5f0:	adrp	x0, 0 <grub_swap_bytes64>
     5f4:	add	x0, x0, #0x0
     5f8:	ldr	x0, [x0]
     5fc:	ldr	x1, [x0]
     600:	adrp	x0, 0 <grub_swap_bytes64>
     604:	add	x0, x0, #0x0
     608:	ldr	x0, [x0]
     60c:	ldr	x0, [x0]
     610:	cmp	x1, x0
     614:	b.ls	708 <finalize_params_linux+0x1a0>  // b.plast
     618:	adrp	x0, 0 <grub_swap_bytes64>
     61c:	add	x0, x0, #0x0
     620:	ldr	x0, [x0]
     624:	ldr	x0, [x0]
     628:	mov	x1, x0
     62c:	adrp	x0, 0 <grub_swap_bytes64>
     630:	add	x0, x0, #0x0
     634:	ldr	x0, [x0]
     638:	ldr	x0, [x0]
     63c:	mov	x5, x0
     640:	mov	x4, x1
     644:	adrp	x0, 0 <grub_swap_bytes64>
     648:	add	x0, x0, #0x0
     64c:	ldr	x3, [x0]
     650:	adrp	x0, 0 <grub_swap_bytes64>
     654:	add	x0, x0, #0x0
     658:	ldr	x2, [x0]
     65c:	mov	w1, #0x59                  	// #89
     660:	adrp	x0, 0 <grub_swap_bytes64>
     664:	add	x0, x0, #0x0
     668:	ldr	x0, [x0]
     66c:	bl	0 <grub_real_dprintf>
     670:	adrp	x0, 0 <grub_swap_bytes64>
     674:	add	x0, x0, #0x0
     678:	ldr	x0, [x0]
     67c:	ldr	x0, [x0]
     680:	bl	0 <grub_swap_bytes64>
     684:	str	x0, [sp, #32]
     688:	ldr	w1, [sp, #60]
     68c:	add	x0, sp, #0x20
     690:	mov	w4, #0x8                   	// #8
     694:	mov	x3, x0
     698:	adrp	x0, 0 <grub_swap_bytes64>
     69c:	add	x0, x0, #0x0
     6a0:	ldr	x2, [x0]
     6a4:	ldr	x0, [sp, #48]
     6a8:	bl	0 <grub_fdt_set_prop>
     6ac:	str	w0, [sp, #44]
     6b0:	ldr	w0, [sp, #44]
     6b4:	cmp	w0, #0x0
     6b8:	b.ne	72c <finalize_params_linux+0x1c4>  // b.any
     6bc:	adrp	x0, 0 <grub_swap_bytes64>
     6c0:	add	x0, x0, #0x0
     6c4:	ldr	x0, [x0]
     6c8:	ldr	x0, [x0]
     6cc:	bl	0 <grub_swap_bytes64>
     6d0:	str	x0, [sp, #24]
     6d4:	ldr	w1, [sp, #60]
     6d8:	add	x0, sp, #0x18
     6dc:	mov	w4, #0x8                   	// #8
     6e0:	mov	x3, x0
     6e4:	adrp	x0, 0 <grub_swap_bytes64>
     6e8:	add	x0, x0, #0x0
     6ec:	ldr	x2, [x0]
     6f0:	ldr	x0, [sp, #48]
     6f4:	bl	0 <grub_fdt_set_prop>
     6f8:	str	w0, [sp, #44]
     6fc:	ldr	w0, [sp, #44]
     700:	cmp	w0, #0x0
     704:	b.ne	734 <finalize_params_linux+0x1cc>  // b.any
     708:	bl	0 <grub_fdt_install>
     70c:	cmp	w0, #0x0
     710:	b.ne	73c <finalize_params_linux+0x1d4>  // b.any
     714:	mov	w0, #0x0                   	// #0
     718:	b	758 <finalize_params_linux+0x1f0>
     71c:	nop
     720:	b	740 <finalize_params_linux+0x1d8>
     724:	nop
     728:	b	740 <finalize_params_linux+0x1d8>
     72c:	nop
     730:	b	740 <finalize_params_linux+0x1d8>
     734:	nop
     738:	b	740 <finalize_params_linux+0x1d8>
     73c:	nop
     740:	bl	0 <grub_fdt_unload>
     744:	adrp	x0, 0 <grub_swap_bytes64>
     748:	add	x0, x0, #0x0
     74c:	ldr	x1, [x0]
     750:	mov	w0, #0x15                  	// #21
     754:	bl	0 <grub_error>
     758:	ldp	x29, x30, [sp], #64
     75c:	ret
	...

00000000000007a8 <grub_arch_efi_linux_boot_image>:
     7a8:	stp	x29, x30, [sp, #-96]!
     7ac:	mov	x29, sp
     7b0:	str	x0, [sp, #40]
     7b4:	str	x1, [sp, #32]
     7b8:	str	x2, [sp, #24]
     7bc:	mov	x0, #0x30                  	// #48
     7c0:	bl	0 <grub_malloc>
     7c4:	str	x0, [sp, #88]
     7c8:	ldr	x0, [sp, #88]
     7cc:	cmp	x0, #0x0
     7d0:	b.ne	7e8 <grub_arch_efi_linux_boot_image+0x40>  // b.any
     7d4:	adrp	x0, 0 <grub_swap_bytes64>
     7d8:	add	x0, x0, #0x0
     7dc:	ldr	x0, [x0]
     7e0:	ldr	w0, [x0]
     7e4:	b	a50 <grub_arch_efi_linux_boot_image+0x2a8>
     7e8:	ldr	x0, [sp, #88]
     7ec:	mov	w1, #0x1                   	// #1
     7f0:	strb	w1, [x0]
     7f4:	ldr	x0, [sp, #88]
     7f8:	mov	w1, #0x3                   	// #3
     7fc:	strb	w1, [x0, #1]
     800:	ldr	x0, [sp, #88]
     804:	mov	w1, #0x18                  	// #24
     808:	strh	w1, [x0, #2]
     80c:	ldr	x0, [sp, #88]
     810:	mov	w1, #0x2                   	// #2
     814:	str	w1, [x0, #4]
     818:	ldr	x0, [sp, #88]
     81c:	ldr	x1, [sp, #40]
     820:	str	x1, [x0, #8]
     824:	ldr	x1, [sp, #40]
     828:	ldr	x0, [sp, #32]
     82c:	add	x1, x1, x0
     830:	ldr	x0, [sp, #88]
     834:	str	x1, [x0, #16]
     838:	ldr	x0, [sp, #88]
     83c:	add	x0, x0, #0x18
     840:	mov	w1, #0x7f                  	// #127
     844:	strb	w1, [x0]
     848:	ldr	x0, [sp, #88]
     84c:	add	x0, x0, #0x18
     850:	mov	w1, #0xffffffff            	// #-1
     854:	strb	w1, [x0, #1]
     858:	ldr	x0, [sp, #88]
     85c:	add	x0, x0, #0x18
     860:	mov	w1, #0x4                   	// #4
     864:	strh	w1, [x0, #2]
     868:	adrp	x0, 0 <grub_swap_bytes64>
     86c:	add	x0, x0, #0x0
     870:	ldr	x0, [x0]
     874:	ldr	x0, [x0]
     878:	ldr	x0, [x0, #96]
     87c:	str	x0, [sp, #80]
     880:	ldr	x0, [sp, #80]
     884:	ldr	x6, [x0, #200]
     888:	adrp	x0, 0 <grub_swap_bytes64>
     88c:	add	x0, x0, #0x0
     890:	ldr	x0, [x0]
     894:	ldr	x0, [x0]
     898:	ldr	x1, [sp, #40]
     89c:	add	x2, sp, #0x30
     8a0:	mov	x5, x2
     8a4:	ldr	x4, [sp, #32]
     8a8:	mov	x3, x1
     8ac:	ldr	x2, [sp, #88]
     8b0:	mov	x1, x0
     8b4:	mov	w0, #0x0                   	// #0
     8b8:	blr	x6
     8bc:	str	x0, [sp, #72]
     8c0:	ldr	x0, [sp, #72]
     8c4:	cmp	x0, #0x0
     8c8:	b.eq	8e4 <grub_arch_efi_linux_boot_image+0x13c>  // b.none
     8cc:	adrp	x0, 0 <grub_swap_bytes64>
     8d0:	add	x0, x0, #0x0
     8d4:	ldr	x1, [x0]
     8d8:	mov	w0, #0x15                  	// #21
     8dc:	bl	0 <grub_error>
     8e0:	b	a50 <grub_arch_efi_linux_boot_image+0x2a8>
     8e4:	ldr	x4, [sp, #24]
     8e8:	adrp	x0, 0 <grub_swap_bytes64>
     8ec:	add	x0, x0, #0x0
     8f0:	ldr	x3, [x0]
     8f4:	adrp	x0, 0 <grub_swap_bytes64>
     8f8:	add	x0, x0, #0x0
     8fc:	ldr	x2, [x0]
     900:	mov	w1, #0x90                  	// #144
     904:	adrp	x0, 0 <grub_swap_bytes64>
     908:	add	x0, x0, #0x0
     90c:	ldr	x0, [x0]
     910:	bl	0 <grub_real_dprintf>
     914:	ldr	x0, [sp, #48]
     918:	bl	0 <grub_efi_get_loaded_image>
     91c:	str	x0, [sp, #64]
     920:	ldr	x0, [sp, #24]
     924:	bl	0 <grub_strlen>
     928:	add	x0, x0, #0x1
     92c:	lsl	w0, w0, #1
     930:	str	w0, [sp, #60]
     934:	ldr	w1, [sp, #60]
     938:	ldr	x0, [sp, #64]
     93c:	str	w1, [x0, #48]
     940:	ldr	x0, [sp, #64]
     944:	ldr	w0, [x0, #48]
     948:	add	w0, w0, #0xfff
     94c:	lsr	w0, w0, #12
     950:	mov	w0, w0
     954:	bl	0 <grub_efi_allocate_any_pages>
     958:	mov	x1, x0
     95c:	ldr	x0, [sp, #64]
     960:	str	x1, [x0, #56]
     964:	ldr	x0, [sp, #64]
     968:	ldr	x0, [x0, #56]
     96c:	cmp	x0, #0x0
     970:	b.ne	988 <grub_arch_efi_linux_boot_image+0x1e0>  // b.any
     974:	adrp	x0, 0 <grub_swap_bytes64>
     978:	add	x0, x0, #0x0
     97c:	ldr	x0, [x0]
     980:	ldr	w0, [x0]
     984:	b	a50 <grub_arch_efi_linux_boot_image+0x2a8>
     988:	ldr	x0, [sp, #64]
     98c:	ldr	x0, [x0, #56]
     990:	ldrsw	x1, [sp, #60]
     994:	ldrsw	x2, [sp, #60]
     998:	mov	x4, #0x0                   	// #0
     99c:	mov	x3, x2
     9a0:	ldr	x2, [sp, #24]
     9a4:	bl	1ec <grub_utf8_to_utf16>
     9a8:	lsl	w1, w0, #1
     9ac:	ldr	x0, [sp, #64]
     9b0:	str	w1, [x0, #48]
     9b4:	ldr	x0, [sp, #48]
     9b8:	mov	x4, x0
     9bc:	adrp	x0, 0 <grub_swap_bytes64>
     9c0:	add	x0, x0, #0x0
     9c4:	ldr	x3, [x0]
     9c8:	adrp	x0, 0 <grub_swap_bytes64>
     9cc:	add	x0, x0, #0x0
     9d0:	ldr	x2, [x0]
     9d4:	mov	w1, #0x9f                  	// #159
     9d8:	adrp	x0, 0 <grub_swap_bytes64>
     9dc:	add	x0, x0, #0x0
     9e0:	ldr	x0, [x0]
     9e4:	bl	0 <grub_real_dprintf>
     9e8:	ldr	x0, [sp, #80]
     9ec:	ldr	x3, [x0, #208]
     9f0:	ldr	x0, [sp, #48]
     9f4:	mov	x2, #0x0                   	// #0
     9f8:	mov	x1, #0x0                   	// #0
     9fc:	blr	x3
     a00:	str	x0, [sp, #72]
     a04:	ldr	x0, [sp, #80]
     a08:	ldr	x1, [x0, #224]
     a0c:	ldr	x0, [sp, #48]
     a10:	blr	x1
     a14:	ldr	x0, [sp, #64]
     a18:	ldr	x0, [x0, #56]
     a1c:	mov	x2, x0
     a20:	ldr	x0, [sp, #64]
     a24:	ldr	w0, [x0, #48]
     a28:	add	w0, w0, #0xfff
     a2c:	lsr	w0, w0, #12
     a30:	mov	w0, w0
     a34:	mov	x1, x0
     a38:	mov	x0, x2
     a3c:	bl	0 <grub_efi_free_pages>
     a40:	adrp	x0, 0 <grub_swap_bytes64>
     a44:	add	x0, x0, #0x0
     a48:	ldr	x0, [x0]
     a4c:	ldr	w0, [x0]
     a50:	ldp	x29, x30, [sp], #96
     a54:	ret
	...

0000000000000a98 <grub_linux_boot>:
     a98:	stp	x29, x30, [sp, #-16]!
     a9c:	mov	x29, sp
     aa0:	bl	568 <finalize_params_linux>
     aa4:	cmp	w0, #0x0
     aa8:	b.eq	ac0 <grub_linux_boot+0x28>  // b.none
     aac:	adrp	x0, 0 <grub_swap_bytes64>
     ab0:	add	x0, x0, #0x0
     ab4:	ldr	x0, [x0]
     ab8:	ldr	w0, [x0]
     abc:	b	b00 <grub_linux_boot+0x68>
     ac0:	adrp	x0, 0 <grub_swap_bytes64>
     ac4:	add	x0, x0, #0x0
     ac8:	ldr	x0, [x0]
     acc:	ldr	x0, [x0]
     ad0:	mov	x3, x0
     ad4:	adrp	x0, 0 <grub_swap_bytes64>
     ad8:	add	x0, x0, #0x0
     adc:	ldr	x0, [x0]
     ae0:	ldr	x1, [x0]
     ae4:	adrp	x0, 0 <grub_swap_bytes64>
     ae8:	add	x0, x0, #0x0
     aec:	ldr	x0, [x0]
     af0:	ldr	x0, [x0]
     af4:	mov	x2, x0
     af8:	mov	x0, x3
     afc:	bl	7a8 <grub_arch_efi_linux_boot_image>
     b00:	ldp	x29, x30, [sp], #16
     b04:	ret
	...

0000000000000b28 <grub_linux_unload>:
     b28:	stp	x29, x30, [sp, #-16]!
     b2c:	mov	x29, sp
     b30:	adrp	x0, 0 <grub_swap_bytes64>
     b34:	add	x0, x0, #0x0
     b38:	ldr	x0, [x0]
     b3c:	ldr	x0, [x0]
     b40:	bl	0 <grub_dl_unref>
     b44:	adrp	x0, 0 <grub_swap_bytes64>
     b48:	add	x0, x0, #0x0
     b4c:	ldr	x0, [x0]
     b50:	str	wzr, [x0]
     b54:	adrp	x0, 0 <grub_swap_bytes64>
     b58:	add	x0, x0, #0x0
     b5c:	ldr	x0, [x0]
     b60:	ldr	x0, [x0]
     b64:	cmp	x0, #0x0
     b68:	b.eq	bb4 <grub_linux_unload+0x8c>  // b.none
     b6c:	adrp	x0, 0 <grub_swap_bytes64>
     b70:	add	x0, x0, #0x0
     b74:	ldr	x0, [x0]
     b78:	ldr	x2, [x0]
     b7c:	adrp	x0, 0 <grub_swap_bytes64>
     b80:	add	x0, x0, #0x0
     b84:	ldr	x0, [x0]
     b88:	ldr	x1, [x0]
     b8c:	adrp	x0, 0 <grub_swap_bytes64>
     b90:	add	x0, x0, #0x0
     b94:	ldr	x0, [x0]
     b98:	ldr	x0, [x0]
     b9c:	sub	x0, x1, x0
     ba0:	add	x0, x0, #0xfff
     ba4:	lsr	x0, x0, #12
     ba8:	mov	x1, x0
     bac:	mov	x0, x2
     bb0:	bl	0 <grub_efi_free_pages>
     bb4:	adrp	x0, 0 <grub_swap_bytes64>
     bb8:	add	x0, x0, #0x0
     bbc:	ldr	x0, [x0]
     bc0:	str	xzr, [x0]
     bc4:	adrp	x0, 0 <grub_swap_bytes64>
     bc8:	add	x0, x0, #0x0
     bcc:	ldr	x0, [x0]
     bd0:	ldr	x1, [x0]
     bd4:	adrp	x0, 0 <grub_swap_bytes64>
     bd8:	add	x0, x0, #0x0
     bdc:	ldr	x0, [x0]
     be0:	str	x1, [x0]
     be4:	adrp	x0, 0 <grub_swap_bytes64>
     be8:	add	x0, x0, #0x0
     bec:	ldr	x0, [x0]
     bf0:	ldr	x0, [x0]
     bf4:	bl	0 <grub_free>
     bf8:	adrp	x0, 0 <grub_swap_bytes64>
     bfc:	add	x0, x0, #0x0
     c00:	ldr	x0, [x0]
     c04:	ldr	x0, [x0]
     c08:	cmp	x0, #0x0
     c0c:	b.eq	c48 <grub_linux_unload+0x120>  // b.none
     c10:	adrp	x0, 0 <grub_swap_bytes64>
     c14:	add	x0, x0, #0x0
     c18:	ldr	x0, [x0]
     c1c:	ldr	x0, [x0]
     c20:	mov	x2, x0
     c24:	adrp	x0, 0 <grub_swap_bytes64>
     c28:	add	x0, x0, #0x0
     c2c:	ldr	x0, [x0]
     c30:	ldr	x0, [x0]
     c34:	add	x0, x0, #0xfff
     c38:	lsr	x0, x0, #12
     c3c:	mov	x1, x0
     c40:	mov	x0, x2
     c44:	bl	0 <grub_efi_free_pages>
     c48:	bl	0 <grub_fdt_unload>
     c4c:	mov	w0, #0x0                   	// #0
     c50:	ldp	x29, x30, [sp], #16
     c54:	ret
	...

0000000000000c90 <allocate_initrd_mem>:
     c90:	stp	x29, x30, [sp, #-48]!
     c94:	mov	x29, sp
     c98:	str	w0, [sp, #28]
     c9c:	add	x0, sp, #0x28
     ca0:	bl	0 <grub_efi_get_ram_base>
     ca4:	cmp	w0, #0x0
     ca8:	b.eq	cb4 <allocate_initrd_mem+0x24>  // b.none
     cac:	mov	x0, #0x0                   	// #0
     cb0:	b	cd8 <allocate_initrd_mem+0x48>
     cb4:	ldr	x1, [sp, #40]
     cb8:	mov	x0, #0x7ffffffff           	// #34359738367
     cbc:	add	x0, x1, x0
     cc0:	str	x0, [sp, #40]
     cc4:	ldr	x0, [sp, #40]
     cc8:	ldrsw	x1, [sp, #28]
     ccc:	mov	w3, #0x2                   	// #2
     cd0:	mov	w2, #0x1                   	// #1
     cd4:	bl	0 <grub_efi_allocate_pages_real>
     cd8:	ldp	x29, x30, [sp], #48
     cdc:	ret

0000000000000ce0 <grub_cmd_initrd>:
     ce0:	stp	x29, x30, [sp, #-96]!
     ce4:	mov	x29, sp
     ce8:	str	x0, [sp, #40]
     cec:	str	w1, [sp, #36]
     cf0:	str	x2, [sp, #24]
     cf4:	str	wzr, [sp, #48]
     cf8:	str	xzr, [sp, #56]
     cfc:	str	xzr, [sp, #64]
     d00:	str	xzr, [sp, #80]
     d04:	ldr	w0, [sp, #36]
     d08:	cmp	w0, #0x0
     d0c:	b.ne	d28 <grub_cmd_initrd+0x48>  // b.any
     d10:	adrp	x0, 0 <grub_swap_bytes64>
     d14:	add	x0, x0, #0x0
     d18:	ldr	x1, [x0]
     d1c:	mov	w0, #0x12                  	// #18
     d20:	bl	0 <grub_error>
     d24:	b	e94 <grub_cmd_initrd+0x1b4>
     d28:	adrp	x0, 0 <grub_swap_bytes64>
     d2c:	add	x0, x0, #0x0
     d30:	ldr	x0, [x0]
     d34:	ldr	w0, [x0]
     d38:	cmp	w0, #0x0
     d3c:	b.ne	d58 <grub_cmd_initrd+0x78>  // b.any
     d40:	adrp	x0, 0 <grub_swap_bytes64>
     d44:	add	x0, x0, #0x0
     d48:	ldr	x1, [x0]
     d4c:	mov	w0, #0x12                  	// #18
     d50:	bl	0 <grub_error>
     d54:	b	e94 <grub_cmd_initrd+0x1b4>
     d58:	add	x0, sp, #0x30
     d5c:	mov	x2, x0
     d60:	ldr	x1, [sp, #24]
     d64:	ldr	w0, [sp, #36]
     d68:	bl	1b58 <grub_initrd_init>
     d6c:	cmp	w0, #0x0
     d70:	b.ne	e88 <grub_cmd_initrd+0x1a8>  // b.any
     d74:	add	x0, sp, #0x30
     d78:	bl	1f90 <grub_get_initrd_size>
     d7c:	str	w0, [sp, #76]
     d80:	adrp	x0, 0 <grub_swap_bytes64>
     d84:	add	x0, x0, #0x0
     d88:	ldr	x3, [x0]
     d8c:	adrp	x0, 0 <grub_swap_bytes64>
     d90:	add	x0, x0, #0x0
     d94:	ldr	x2, [x0]
     d98:	mov	w1, #0x102                 	// #258
     d9c:	adrp	x0, 0 <grub_swap_bytes64>
     da0:	add	x0, x0, #0x0
     da4:	ldr	x0, [x0]
     da8:	bl	0 <grub_real_dprintf>
     dac:	ldr	w0, [sp, #76]
     db0:	add	w0, w0, #0xfff
     db4:	asr	w0, w0, #12
     db8:	str	w0, [sp, #92]
     dbc:	ldr	w0, [sp, #92]
     dc0:	bl	c90 <allocate_initrd_mem>
     dc4:	str	x0, [sp, #80]
     dc8:	ldr	x0, [sp, #80]
     dcc:	cmp	x0, #0x0
     dd0:	b.ne	dec <grub_cmd_initrd+0x10c>  // b.any
     dd4:	adrp	x0, 0 <grub_swap_bytes64>
     dd8:	add	x0, x0, #0x0
     ddc:	ldr	x1, [x0]
     de0:	mov	w0, #0x3                   	// #3
     de4:	bl	0 <grub_error>
     de8:	b	e94 <grub_cmd_initrd+0x1b4>
     dec:	add	x0, sp, #0x30
     df0:	ldr	x2, [sp, #80]
     df4:	ldr	x1, [sp, #24]
     df8:	bl	2060 <grub_initrd_load>
     dfc:	cmp	w0, #0x0
     e00:	b.ne	e90 <grub_cmd_initrd+0x1b0>  // b.any
     e04:	ldr	x1, [sp, #80]
     e08:	adrp	x0, 0 <grub_swap_bytes64>
     e0c:	add	x0, x0, #0x0
     e10:	ldr	x0, [x0]
     e14:	str	x1, [x0]
     e18:	ldrsw	x1, [sp, #76]
     e1c:	adrp	x0, 0 <grub_swap_bytes64>
     e20:	add	x0, x0, #0x0
     e24:	ldr	x0, [x0]
     e28:	ldr	x0, [x0]
     e2c:	add	x1, x1, x0
     e30:	adrp	x0, 0 <grub_swap_bytes64>
     e34:	add	x0, x0, #0x0
     e38:	ldr	x0, [x0]
     e3c:	str	x1, [x0]
     e40:	adrp	x0, 0 <grub_swap_bytes64>
     e44:	add	x0, x0, #0x0
     e48:	ldr	x0, [x0]
     e4c:	ldr	x0, [x0]
     e50:	ldr	w5, [sp, #76]
     e54:	mov	x4, x0
     e58:	adrp	x0, 0 <grub_swap_bytes64>
     e5c:	add	x0, x0, #0x0
     e60:	ldr	x3, [x0]
     e64:	adrp	x0, 0 <grub_swap_bytes64>
     e68:	add	x0, x0, #0x0
     e6c:	ldr	x2, [x0]
     e70:	mov	w1, #0x112                 	// #274
     e74:	adrp	x0, 0 <grub_swap_bytes64>
     e78:	add	x0, x0, #0x0
     e7c:	ldr	x0, [x0]
     e80:	bl	0 <grub_real_dprintf>
     e84:	b	e94 <grub_cmd_initrd+0x1b4>
     e88:	nop
     e8c:	b	e94 <grub_cmd_initrd+0x1b4>
     e90:	nop
     e94:	add	x0, sp, #0x30
     e98:	bl	1fa8 <grub_initrd_close>
     e9c:	ldr	x0, [sp, #80]
     ea0:	cmp	x0, #0x0
     ea4:	b.eq	ecc <grub_cmd_initrd+0x1ec>  // b.none
     ea8:	adrp	x0, 0 <grub_swap_bytes64>
     eac:	add	x0, x0, #0x0
     eb0:	ldr	x0, [x0]
     eb4:	ldr	x0, [x0]
     eb8:	cmp	x0, #0x0
     ebc:	b.ne	ecc <grub_cmd_initrd+0x1ec>  // b.any
     ec0:	ldr	x0, [sp, #80]
     ec4:	ldrsw	x1, [sp, #92]
     ec8:	bl	0 <grub_efi_free_pages>
     ecc:	adrp	x0, 0 <grub_swap_bytes64>
     ed0:	add	x0, x0, #0x0
     ed4:	ldr	x0, [x0]
     ed8:	ldr	w0, [x0]
     edc:	ldp	x29, x30, [sp], #96
     ee0:	ret
     ee4:	nop
	...

0000000000000f40 <grub_cmd_linux>:
     f40:	stp	x29, x30, [sp, #-128]!
     f44:	mov	x29, sp
     f48:	str	x0, [sp, #40]
     f4c:	str	w1, [sp, #36]
     f50:	str	x2, [sp, #24]
     f54:	str	xzr, [sp, #120]
     f58:	adrp	x0, 0 <grub_swap_bytes64>
     f5c:	add	x0, x0, #0x0
     f60:	ldr	x0, [x0]
     f64:	ldr	x0, [x0]
     f68:	bl	0 <grub_dl_ref>
     f6c:	ldr	w0, [sp, #36]
     f70:	cmp	w0, #0x0
     f74:	b.ne	f90 <grub_cmd_linux+0x50>  // b.any
     f78:	adrp	x0, 0 <grub_swap_bytes64>
     f7c:	add	x0, x0, #0x0
     f80:	ldr	x1, [x0]
     f84:	mov	w0, #0x12                  	// #18
     f88:	bl	0 <grub_error>
     f8c:	b	1330 <grub_cmd_linux+0x3f0>
     f90:	ldr	x0, [sp, #24]
     f94:	ldr	x0, [x0]
     f98:	mov	w1, #0x3                   	// #3
     f9c:	bl	0 <grub_file_open>
     fa0:	str	x0, [sp, #120]
     fa4:	ldr	x0, [sp, #120]
     fa8:	cmp	x0, #0x0
     fac:	b.eq	130c <grub_cmd_linux+0x3cc>  // b.none
     fb0:	ldr	x0, [sp, #120]
     fb4:	bl	440 <grub_file_size>
     fb8:	mov	x1, x0
     fbc:	adrp	x0, 0 <grub_swap_bytes64>
     fc0:	add	x0, x0, #0x0
     fc4:	ldr	x0, [x0]
     fc8:	str	x1, [x0]
     fcc:	add	x0, sp, #0x30
     fd0:	mov	x2, #0x40                  	// #64
     fd4:	mov	x1, x0
     fd8:	ldr	x0, [sp, #120]
     fdc:	bl	0 <grub_file_read>
     fe0:	cmp	x0, #0x3f
     fe4:	b.gt	ffc <grub_cmd_linux+0xbc>
     fe8:	adrp	x0, 0 <grub_swap_bytes64>
     fec:	add	x0, x0, #0x0
     ff0:	ldr	x0, [x0]
     ff4:	ldr	w0, [x0]
     ff8:	b	143c <grub_cmd_linux+0x4fc>
     ffc:	add	x0, sp, #0x30
    1000:	bl	458 <grub_arch_efi_linux_check_image>
    1004:	cmp	w0, #0x0
    1008:	b.ne	1314 <grub_cmd_linux+0x3d4>  // b.any
    100c:	bl	0 <grub_loader_unset>
    1010:	adrp	x0, 0 <grub_swap_bytes64>
    1014:	add	x0, x0, #0x0
    1018:	ldr	x0, [x0]
    101c:	ldr	x0, [x0]
    1020:	mov	x4, x0
    1024:	adrp	x0, 0 <grub_swap_bytes64>
    1028:	add	x0, x0, #0x0
    102c:	ldr	x3, [x0]
    1030:	adrp	x0, 0 <grub_swap_bytes64>
    1034:	add	x0, x0, #0x0
    1038:	ldr	x2, [x0]
    103c:	mov	w1, #0x13b                 	// #315
    1040:	adrp	x0, 0 <grub_swap_bytes64>
    1044:	add	x0, x0, #0x0
    1048:	ldr	x0, [x0]
    104c:	bl	0 <grub_real_dprintf>
    1050:	adrp	x0, 0 <grub_swap_bytes64>
    1054:	add	x0, x0, #0x0
    1058:	ldr	x0, [x0]
    105c:	ldr	x0, [x0]
    1060:	add	x0, x0, #0xfff
    1064:	lsr	x0, x0, #12
    1068:	bl	0 <grub_efi_allocate_any_pages>
    106c:	mov	x1, x0
    1070:	adrp	x0, 0 <grub_swap_bytes64>
    1074:	add	x0, x0, #0x0
    1078:	ldr	x0, [x0]
    107c:	str	x1, [x0]
    1080:	adrp	x0, 0 <grub_swap_bytes64>
    1084:	add	x0, x0, #0x0
    1088:	ldr	x0, [x0]
    108c:	ldr	x0, [x0]
    1090:	add	x0, x0, #0xfff
    1094:	lsr	x0, x0, #12
    1098:	mov	x4, x0
    109c:	adrp	x0, 0 <grub_swap_bytes64>
    10a0:	add	x0, x0, #0x0
    10a4:	ldr	x3, [x0]
    10a8:	adrp	x0, 0 <grub_swap_bytes64>
    10ac:	add	x0, x0, #0x0
    10b0:	ldr	x2, [x0]
    10b4:	mov	w1, #0x13d                 	// #317
    10b8:	adrp	x0, 0 <grub_swap_bytes64>
    10bc:	add	x0, x0, #0x0
    10c0:	ldr	x0, [x0]
    10c4:	bl	0 <grub_real_dprintf>
    10c8:	adrp	x0, 0 <grub_swap_bytes64>
    10cc:	add	x0, x0, #0x0
    10d0:	ldr	x0, [x0]
    10d4:	ldr	x0, [x0]
    10d8:	cmp	x0, #0x0
    10dc:	b.ne	10f8 <grub_cmd_linux+0x1b8>  // b.any
    10e0:	adrp	x0, 0 <grub_swap_bytes64>
    10e4:	add	x0, x0, #0x0
    10e8:	ldr	x1, [x0]
    10ec:	mov	w0, #0x3                   	// #3
    10f0:	bl	0 <grub_error>
    10f4:	b	1330 <grub_cmd_linux+0x3f0>
    10f8:	mov	x1, #0x0                   	// #0
    10fc:	ldr	x0, [sp, #120]
    1100:	bl	0 <grub_file_seek>
    1104:	adrp	x0, 0 <grub_swap_bytes64>
    1108:	add	x0, x0, #0x0
    110c:	ldr	x0, [x0]
    1110:	ldr	x1, [x0]
    1114:	adrp	x0, 0 <grub_swap_bytes64>
    1118:	add	x0, x0, #0x0
    111c:	ldr	x0, [x0]
    1120:	ldr	x0, [x0]
    1124:	mov	x2, x0
    1128:	ldr	x0, [sp, #120]
    112c:	bl	0 <grub_file_read>
    1130:	mov	x1, x0
    1134:	adrp	x0, 0 <grub_swap_bytes64>
    1138:	add	x0, x0, #0x0
    113c:	ldr	x0, [x0]
    1140:	ldr	x0, [x0]
    1144:	cmp	x1, x0
    1148:	b.ge	1188 <grub_cmd_linux+0x248>  // b.tcont
    114c:	adrp	x0, 0 <grub_swap_bytes64>
    1150:	add	x0, x0, #0x0
    1154:	ldr	x0, [x0]
    1158:	ldr	w0, [x0]
    115c:	cmp	w0, #0x0
    1160:	b.ne	131c <grub_cmd_linux+0x3dc>  // b.any
    1164:	ldr	x0, [sp, #24]
    1168:	ldr	x0, [x0]
    116c:	mov	x2, x0
    1170:	adrp	x0, 0 <grub_swap_bytes64>
    1174:	add	x0, x0, #0x0
    1178:	ldr	x1, [x0]
    117c:	mov	w0, #0x15                  	// #21
    1180:	bl	0 <grub_error>
    1184:	b	131c <grub_cmd_linux+0x3dc>
    1188:	adrp	x0, 0 <grub_swap_bytes64>
    118c:	add	x0, x0, #0x0
    1190:	ldr	x0, [x0]
    1194:	ldr	x0, [x0]
    1198:	mov	x4, x0
    119c:	adrp	x0, 0 <grub_swap_bytes64>
    11a0:	add	x0, x0, #0x0
    11a4:	ldr	x3, [x0]
    11a8:	adrp	x0, 0 <grub_swap_bytes64>
    11ac:	add	x0, x0, #0x0
    11b0:	ldr	x2, [x0]
    11b4:	mov	w1, #0x14e                 	// #334
    11b8:	adrp	x0, 0 <grub_swap_bytes64>
    11bc:	add	x0, x0, #0x0
    11c0:	ldr	x0, [x0]
    11c4:	bl	0 <grub_real_dprintf>
    11c8:	ldr	x1, [sp, #24]
    11cc:	ldr	w0, [sp, #36]
    11d0:	bl	247c <grub_loader_cmdline_size>
    11d4:	add	w1, w0, #0xc
    11d8:	adrp	x0, 0 <grub_swap_bytes64>
    11dc:	add	x0, x0, #0x0
    11e0:	ldr	x0, [x0]
    11e4:	str	w1, [x0]
    11e8:	adrp	x0, 0 <grub_swap_bytes64>
    11ec:	add	x0, x0, #0x0
    11f0:	ldr	x0, [x0]
    11f4:	ldr	w0, [x0]
    11f8:	mov	w0, w0
    11fc:	bl	0 <grub_malloc>
    1200:	mov	x1, x0
    1204:	adrp	x0, 0 <grub_swap_bytes64>
    1208:	add	x0, x0, #0x0
    120c:	ldr	x0, [x0]
    1210:	str	x1, [x0]
    1214:	adrp	x0, 0 <grub_swap_bytes64>
    1218:	add	x0, x0, #0x0
    121c:	ldr	x0, [x0]
    1220:	ldr	x0, [x0]
    1224:	cmp	x0, #0x0
    1228:	b.ne	1244 <grub_cmd_linux+0x304>  // b.any
    122c:	adrp	x0, 0 <grub_swap_bytes64>
    1230:	add	x0, x0, #0x0
    1234:	ldr	x1, [x0]
    1238:	mov	w0, #0x3                   	// #3
    123c:	bl	0 <grub_error>
    1240:	b	1330 <grub_cmd_linux+0x3f0>
    1244:	adrp	x0, 0 <grub_swap_bytes64>
    1248:	add	x0, x0, #0x0
    124c:	ldr	x0, [x0]
    1250:	ldr	x3, [x0]
    1254:	mov	x2, #0xc                   	// #12
    1258:	adrp	x0, 0 <grub_swap_bytes64>
    125c:	add	x0, x0, #0x0
    1260:	ldr	x1, [x0]
    1264:	mov	x0, x3
    1268:	bl	3dc <grub_memcpy>
    126c:	adrp	x0, 0 <grub_swap_bytes64>
    1270:	add	x0, x0, #0x0
    1274:	ldr	x0, [x0]
    1278:	ldr	x0, [x0]
    127c:	add	x1, x0, #0xb
    1280:	adrp	x0, 0 <grub_swap_bytes64>
    1284:	add	x0, x0, #0x0
    1288:	ldr	x0, [x0]
    128c:	ldr	w0, [x0]
    1290:	mov	w0, w0
    1294:	mov	w4, #0x0                   	// #0
    1298:	mov	x3, x0
    129c:	mov	x2, x1
    12a0:	ldr	x1, [sp, #24]
    12a4:	ldr	w0, [sp, #36]
    12a8:	bl	250c <grub_create_loader_cmdline>
    12ac:	str	w0, [sp, #116]
    12b0:	ldr	w0, [sp, #116]
    12b4:	cmp	w0, #0x0
    12b8:	b.ne	1324 <grub_cmd_linux+0x3e4>  // b.any
    12bc:	adrp	x0, 0 <grub_swap_bytes64>
    12c0:	add	x0, x0, #0x0
    12c4:	ldr	x0, [x0]
    12c8:	ldr	w0, [x0]
    12cc:	cmp	w0, #0x0
    12d0:	b.ne	132c <grub_cmd_linux+0x3ec>  // b.any
    12d4:	mov	w2, #0x0                   	// #0
    12d8:	adrp	x0, 0 <grub_swap_bytes64>
    12dc:	add	x0, x0, #0x0
    12e0:	ldr	x1, [x0]
    12e4:	adrp	x0, 0 <grub_swap_bytes64>
    12e8:	add	x0, x0, #0x0
    12ec:	ldr	x0, [x0]
    12f0:	bl	0 <grub_loader_set>
    12f4:	adrp	x0, 0 <grub_swap_bytes64>
    12f8:	add	x0, x0, #0x0
    12fc:	ldr	x0, [x0]
    1300:	mov	w1, #0x1                   	// #1
    1304:	str	w1, [x0]
    1308:	b	1330 <grub_cmd_linux+0x3f0>
    130c:	nop
    1310:	b	1330 <grub_cmd_linux+0x3f0>
    1314:	nop
    1318:	b	1330 <grub_cmd_linux+0x3f0>
    131c:	nop
    1320:	b	1330 <grub_cmd_linux+0x3f0>
    1324:	nop
    1328:	b	1330 <grub_cmd_linux+0x3f0>
    132c:	nop
    1330:	ldr	x0, [sp, #120]
    1334:	cmp	x0, #0x0
    1338:	b.eq	1344 <grub_cmd_linux+0x404>  // b.none
    133c:	ldr	x0, [sp, #120]
    1340:	bl	0 <grub_file_close>
    1344:	adrp	x0, 0 <grub_swap_bytes64>
    1348:	add	x0, x0, #0x0
    134c:	ldr	x0, [x0]
    1350:	ldr	w0, [x0]
    1354:	cmp	w0, #0x0
    1358:	b.eq	1380 <grub_cmd_linux+0x440>  // b.none
    135c:	adrp	x0, 0 <grub_swap_bytes64>
    1360:	add	x0, x0, #0x0
    1364:	ldr	x0, [x0]
    1368:	ldr	x0, [x0]
    136c:	bl	0 <grub_dl_unref>
    1370:	adrp	x0, 0 <grub_swap_bytes64>
    1374:	add	x0, x0, #0x0
    1378:	ldr	x0, [x0]
    137c:	str	wzr, [x0]
    1380:	adrp	x0, 0 <grub_swap_bytes64>
    1384:	add	x0, x0, #0x0
    1388:	ldr	x0, [x0]
    138c:	ldr	x0, [x0]
    1390:	cmp	x0, #0x0
    1394:	b.eq	13c4 <grub_cmd_linux+0x484>  // b.none
    1398:	adrp	x0, 0 <grub_swap_bytes64>
    139c:	add	x0, x0, #0x0
    13a0:	ldr	x0, [x0]
    13a4:	ldr	w0, [x0]
    13a8:	cmp	w0, #0x0
    13ac:	b.ne	13c4 <grub_cmd_linux+0x484>  // b.any
    13b0:	adrp	x0, 0 <grub_swap_bytes64>
    13b4:	add	x0, x0, #0x0
    13b8:	ldr	x0, [x0]
    13bc:	ldr	x0, [x0]
    13c0:	bl	0 <grub_free>
    13c4:	adrp	x0, 0 <grub_swap_bytes64>
    13c8:	add	x0, x0, #0x0
    13cc:	ldr	x0, [x0]
    13d0:	ldr	x0, [x0]
    13d4:	cmp	x0, #0x0
    13d8:	b.eq	142c <grub_cmd_linux+0x4ec>  // b.none
    13dc:	adrp	x0, 0 <grub_swap_bytes64>
    13e0:	add	x0, x0, #0x0
    13e4:	ldr	x0, [x0]
    13e8:	ldr	w0, [x0]
    13ec:	cmp	w0, #0x0
    13f0:	b.ne	142c <grub_cmd_linux+0x4ec>  // b.any
    13f4:	adrp	x0, 0 <grub_swap_bytes64>
    13f8:	add	x0, x0, #0x0
    13fc:	ldr	x0, [x0]
    1400:	ldr	x0, [x0]
    1404:	mov	x2, x0
    1408:	adrp	x0, 0 <grub_swap_bytes64>
    140c:	add	x0, x0, #0x0
    1410:	ldr	x0, [x0]
    1414:	ldr	x0, [x0]
    1418:	add	x0, x0, #0xfff
    141c:	lsr	x0, x0, #12
    1420:	mov	x1, x0
    1424:	mov	x0, x2
    1428:	bl	0 <grub_efi_free_pages>
    142c:	adrp	x0, 0 <grub_swap_bytes64>
    1430:	add	x0, x0, #0x0
    1434:	ldr	x0, [x0]
    1438:	ldr	w0, [x0]
    143c:	ldp	x29, x30, [sp], #128
    1440:	ret
    1444:	nop
	...

00000000000014d8 <grub_mod_init>:
    14d8:	stp	x29, x30, [sp, #-32]!
    14dc:	mov	x29, sp
    14e0:	str	x0, [sp, #24]
    14e4:	adrp	x0, 0 <grub_swap_bytes64>
    14e8:	add	x0, x0, #0x0
    14ec:	ldr	x3, [x0]
    14f0:	mov	x2, #0x0                   	// #0
    14f4:	adrp	x0, 0 <grub_swap_bytes64>
    14f8:	add	x0, x0, #0x0
    14fc:	ldr	x1, [x0]
    1500:	adrp	x0, 0 <grub_swap_bytes64>
    1504:	add	x0, x0, #0x0
    1508:	ldr	x0, [x0]
    150c:	bl	408 <grub_register_command>
    1510:	mov	x1, x0
    1514:	adrp	x0, 0 <grub_swap_bytes64>
    1518:	add	x0, x0, #0x0
    151c:	ldr	x0, [x0]
    1520:	str	x1, [x0]
    1524:	adrp	x0, 0 <grub_swap_bytes64>
    1528:	add	x0, x0, #0x0
    152c:	ldr	x3, [x0]
    1530:	mov	x2, #0x0                   	// #0
    1534:	adrp	x0, 0 <grub_swap_bytes64>
    1538:	add	x0, x0, #0x0
    153c:	ldr	x1, [x0]
    1540:	adrp	x0, 0 <grub_swap_bytes64>
    1544:	add	x0, x0, #0x0
    1548:	ldr	x0, [x0]
    154c:	bl	408 <grub_register_command>
    1550:	mov	x1, x0
    1554:	adrp	x0, 0 <grub_swap_bytes64>
    1558:	add	x0, x0, #0x0
    155c:	ldr	x0, [x0]
    1560:	str	x1, [x0]
    1564:	adrp	x0, 0 <grub_swap_bytes64>
    1568:	add	x0, x0, #0x0
    156c:	ldr	x0, [x0]
    1570:	ldr	x1, [sp, #24]
    1574:	str	x1, [x0]
    1578:	nop
    157c:	ldp	x29, x30, [sp], #32
    1580:	ret
    1584:	nop
	...

00000000000015d0 <grub_mod_fini>:
    15d0:	stp	x29, x30, [sp, #-16]!
    15d4:	mov	x29, sp
    15d8:	adrp	x0, 0 <grub_swap_bytes64>
    15dc:	add	x0, x0, #0x0
    15e0:	ldr	x0, [x0]
    15e4:	ldr	x0, [x0]
    15e8:	bl	0 <grub_unregister_command>
    15ec:	adrp	x0, 0 <grub_swap_bytes64>
    15f0:	add	x0, x0, #0x0
    15f4:	ldr	x0, [x0]
    15f8:	ldr	x0, [x0]
    15fc:	bl	0 <grub_unregister_command>
    1600:	nop
    1604:	ldp	x29, x30, [sp], #16
    1608:	ret
    160c:	nop
	...

0000000000001620 <grub_file_size>:
    1620:	sub	sp, sp, #0x10
    1624:	str	x0, [sp, #8]
    1628:	ldr	x0, [sp, #8]
    162c:	ldr	x0, [x0, #64]
    1630:	add	sp, sp, #0x10
    1634:	ret

0000000000001638 <grub_memcpy>:
    1638:	stp	x29, x30, [sp, #-48]!
    163c:	mov	x29, sp
    1640:	str	x0, [sp, #40]
    1644:	str	x1, [sp, #32]
    1648:	str	x2, [sp, #24]
    164c:	ldr	x2, [sp, #24]
    1650:	ldr	x1, [sp, #32]
    1654:	ldr	x0, [sp, #40]
    1658:	bl	0 <grub_memmove>
    165c:	ldp	x29, x30, [sp], #48
    1660:	ret

0000000000001664 <hex>:
    1664:	sub	sp, sp, #0x10
    1668:	strb	w0, [sp, #15]
    166c:	ldrb	w0, [sp, #15]
    1670:	cmp	w0, #0x9
    1674:	b.hi	1688 <hex+0x24>  // b.pmore
    1678:	ldrb	w0, [sp, #15]
    167c:	add	w0, w0, #0x30
    1680:	and	w0, w0, #0xff
    1684:	b	1694 <hex+0x30>
    1688:	ldrb	w0, [sp, #15]
    168c:	add	w0, w0, #0x57
    1690:	and	w0, w0, #0xff
    1694:	add	sp, sp, #0x10
    1698:	ret

000000000000169c <set_field>:
    169c:	stp	x29, x30, [sp, #-64]!
    16a0:	mov	x29, sp
    16a4:	str	x19, [sp, #16]
    16a8:	str	x0, [sp, #40]
    16ac:	str	w1, [sp, #36]
    16b0:	ldr	x0, [sp, #40]
    16b4:	str	x0, [sp, #48]
    16b8:	mov	w0, #0x1c                  	// #28
    16bc:	str	w0, [sp, #60]
    16c0:	b	1704 <set_field+0x68>
    16c4:	ldr	w0, [sp, #60]
    16c8:	ldr	w1, [sp, #36]
    16cc:	lsr	w0, w1, w0
    16d0:	and	w0, w0, #0xff
    16d4:	and	w0, w0, #0xf
    16d8:	and	w1, w0, #0xff
    16dc:	ldr	x19, [sp, #48]
    16e0:	add	x0, x19, #0x1
    16e4:	str	x0, [sp, #48]
    16e8:	mov	w0, w1
    16ec:	bl	1664 <hex>
    16f0:	and	w0, w0, #0xff
    16f4:	strb	w0, [x19]
    16f8:	ldr	w0, [sp, #60]
    16fc:	sub	w0, w0, #0x4
    1700:	str	w0, [sp, #60]
    1704:	ldr	w0, [sp, #60]
    1708:	cmp	w0, #0x0
    170c:	b.ge	16c4 <set_field+0x28>  // b.tcont
    1710:	nop
    1714:	nop
    1718:	ldr	x19, [sp, #16]
    171c:	ldp	x29, x30, [sp], #64
    1720:	ret

0000000000001724 <make_header>:
    1724:	stp	x29, x30, [sp, #-96]!
    1728:	mov	x29, sp
    172c:	str	x0, [sp, #56]
    1730:	str	x1, [sp, #48]
    1734:	str	x2, [sp, #40]
    1738:	str	w3, [sp, #36]
    173c:	str	x4, [sp, #24]
    1740:	ldr	x0, [sp, #56]
    1744:	str	x0, [sp, #88]
    1748:	str	xzr, [sp, #80]
    174c:	ldr	x3, [sp, #88]
    1750:	mov	x2, #0x6                   	// #6
    1754:	adrp	x0, 0 <grub_swap_bytes64>
    1758:	add	x0, x0, #0x0
    175c:	ldr	x1, [x0]
    1760:	mov	x0, x3
    1764:	bl	1638 <grub_memcpy>
    1768:	ldr	x0, [sp, #88]
    176c:	add	x0, x0, #0x6
    1770:	mov	w1, #0x0                   	// #0
    1774:	bl	169c <set_field>
    1778:	ldr	x0, [sp, #88]
    177c:	add	x0, x0, #0xe
    1780:	ldr	w1, [sp, #36]
    1784:	bl	169c <set_field>
    1788:	ldr	x0, [sp, #88]
    178c:	add	x0, x0, #0x16
    1790:	mov	w1, #0x0                   	// #0
    1794:	bl	169c <set_field>
    1798:	ldr	x0, [sp, #88]
    179c:	add	x0, x0, #0x1e
    17a0:	mov	w1, #0x0                   	// #0
    17a4:	bl	169c <set_field>
    17a8:	ldr	x0, [sp, #88]
    17ac:	add	x0, x0, #0x26
    17b0:	mov	w1, #0x1                   	// #1
    17b4:	bl	169c <set_field>
    17b8:	ldr	x0, [sp, #88]
    17bc:	add	x0, x0, #0x2e
    17c0:	mov	w1, #0x0                   	// #0
    17c4:	bl	169c <set_field>
    17c8:	ldr	x0, [sp, #88]
    17cc:	add	x0, x0, #0x36
    17d0:	ldr	x1, [sp, #24]
    17d4:	bl	169c <set_field>
    17d8:	ldr	x0, [sp, #88]
    17dc:	add	x0, x0, #0x3e
    17e0:	mov	w1, #0x0                   	// #0
    17e4:	bl	169c <set_field>
    17e8:	ldr	x0, [sp, #88]
    17ec:	add	x0, x0, #0x46
    17f0:	mov	w1, #0x0                   	// #0
    17f4:	bl	169c <set_field>
    17f8:	ldr	x0, [sp, #88]
    17fc:	add	x0, x0, #0x4e
    1800:	mov	w1, #0x0                   	// #0
    1804:	bl	169c <set_field>
    1808:	ldr	x0, [sp, #88]
    180c:	add	x0, x0, #0x56
    1810:	mov	w1, #0x0                   	// #0
    1814:	bl	169c <set_field>
    1818:	ldr	x0, [sp, #88]
    181c:	add	x0, x0, #0x5e
    1820:	ldr	x1, [sp, #40]
    1824:	bl	169c <set_field>
    1828:	ldr	x0, [sp, #88]
    182c:	add	x0, x0, #0x66
    1830:	mov	w1, #0x0                   	// #0
    1834:	bl	169c <set_field>
    1838:	ldr	x0, [sp, #56]
    183c:	str	x0, [sp, #72]
    1840:	ldr	x0, [sp, #56]
    1844:	add	x0, x0, #0x6e
    1848:	str	x0, [sp, #56]
    184c:	ldr	x2, [sp, #40]
    1850:	ldr	x1, [sp, #48]
    1854:	ldr	x0, [sp, #56]
    1858:	bl	1638 <grub_memcpy>
    185c:	ldr	x1, [sp, #56]
    1860:	ldr	x0, [sp, #40]
    1864:	add	x0, x1, x0
    1868:	str	x0, [sp, #56]
    186c:	ldr	x1, [sp, #72]
    1870:	ldr	x0, [sp, #56]
    1874:	sub	x0, x1, x0
    1878:	and	x0, x0, #0x3
    187c:	str	x0, [sp, #80]
    1880:	ldr	x2, [sp, #80]
    1884:	mov	w1, #0x0                   	// #0
    1888:	ldr	x0, [sp, #56]
    188c:	bl	0 <grub_memset>
    1890:	ldr	x1, [sp, #56]
    1894:	ldr	x0, [sp, #80]
    1898:	add	x0, x1, x0
    189c:	str	x0, [sp, #56]
    18a0:	ldr	x0, [sp, #56]
    18a4:	ldp	x29, x30, [sp], #96
    18a8:	ret
    18ac:	nop
	...

00000000000018b8 <free_dir>:
    18b8:	stp	x29, x30, [sp, #-32]!
    18bc:	mov	x29, sp
    18c0:	str	x0, [sp, #24]
    18c4:	ldr	x0, [sp, #24]
    18c8:	cmp	x0, #0x0
    18cc:	b.eq	1900 <free_dir+0x48>  // b.none
    18d0:	ldr	x0, [sp, #24]
    18d4:	ldr	x0, [x0, #8]
    18d8:	bl	18b8 <free_dir>
    18dc:	ldr	x0, [sp, #24]
    18e0:	ldr	x0, [x0, #16]
    18e4:	bl	18b8 <free_dir>
    18e8:	ldr	x0, [sp, #24]
    18ec:	ldr	x0, [x0]
    18f0:	bl	0 <grub_free>
    18f4:	ldr	x0, [sp, #24]
    18f8:	bl	0 <grub_free>
    18fc:	b	1904 <free_dir+0x4c>
    1900:	nop
    1904:	ldp	x29, x30, [sp], #32
    1908:	ret

000000000000190c <insert_dir>:
    190c:	stp	x29, x30, [sp, #-96]!
    1910:	mov	x29, sp
    1914:	str	x0, [sp, #40]
    1918:	str	x1, [sp, #32]
    191c:	str	x2, [sp, #24]
    1920:	ldr	x0, [sp, #32]
    1924:	str	x0, [sp, #56]
    1928:	ldr	x0, [sp, #40]
    192c:	str	x0, [sp, #72]
    1930:	str	xzr, [sp, #64]
    1934:	ldr	x0, [sp, #72]
    1938:	str	x0, [sp, #80]
    193c:	b	194c <insert_dir+0x40>
    1940:	ldr	x0, [sp, #80]
    1944:	add	x0, x0, #0x1
    1948:	str	x0, [sp, #80]
    194c:	ldr	x0, [sp, #80]
    1950:	ldrb	w0, [x0]
    1954:	cmp	w0, #0x2f
    1958:	b.eq	1940 <insert_dir+0x34>  // b.none
    195c:	ldr	x0, [sp, #80]
    1960:	str	x0, [sp, #72]
    1964:	b	1974 <insert_dir+0x68>
    1968:	ldr	x0, [sp, #72]
    196c:	add	x0, x0, #0x1
    1970:	str	x0, [sp, #72]
    1974:	ldr	x0, [sp, #72]
    1978:	ldrb	w0, [x0]
    197c:	cmp	w0, #0x0
    1980:	b.eq	1994 <insert_dir+0x88>  // b.none
    1984:	ldr	x0, [sp, #72]
    1988:	ldrb	w0, [x0]
    198c:	cmp	w0, #0x2f
    1990:	b.ne	1968 <insert_dir+0x5c>  // b.any
    1994:	ldr	x0, [sp, #72]
    1998:	ldrb	w0, [x0]
    199c:	cmp	w0, #0x0
    19a0:	b.eq	1b30 <insert_dir+0x224>  // b.none
    19a4:	ldr	x0, [sp, #32]
    19a8:	ldr	x0, [x0]
    19ac:	str	x0, [sp, #88]
    19b0:	b	1a10 <insert_dir+0x104>
    19b4:	ldr	x0, [sp, #88]
    19b8:	ldr	x3, [x0]
    19bc:	ldr	x1, [sp, #72]
    19c0:	ldr	x0, [sp, #80]
    19c4:	sub	x0, x1, x0
    19c8:	mov	x2, x0
    19cc:	ldr	x1, [sp, #80]
    19d0:	mov	x0, x3
    19d4:	bl	0 <grub_memcmp>
    19d8:	cmp	w0, #0x0
    19dc:	b.eq	1a04 <insert_dir+0xf8>  // b.none
    19e0:	ldr	x0, [sp, #88]
    19e4:	ldr	x0, [x0]
    19e8:	ldr	x2, [sp, #72]
    19ec:	ldr	x1, [sp, #80]
    19f0:	sub	x1, x2, x1
    19f4:	add	x0, x0, x1
    19f8:	ldrb	w0, [x0]
    19fc:	cmp	w0, #0x0
    1a00:	b.eq	1a20 <insert_dir+0x114>  // b.none
    1a04:	ldr	x0, [sp, #88]
    1a08:	ldr	x0, [x0, #8]
    1a0c:	str	x0, [sp, #88]
    1a10:	ldr	x0, [sp, #88]
    1a14:	cmp	x0, #0x0
    1a18:	b.ne	19b4 <insert_dir+0xa8>  // b.any
    1a1c:	b	1a24 <insert_dir+0x118>
    1a20:	nop
    1a24:	ldr	x0, [sp, #88]
    1a28:	cmp	x0, #0x0
    1a2c:	b.ne	1b20 <insert_dir+0x214>  // b.any
    1a30:	mov	x0, #0x18                  	// #24
    1a34:	bl	0 <grub_zalloc>
    1a38:	str	x0, [sp, #48]
    1a3c:	ldr	x0, [sp, #48]
    1a40:	cmp	x0, #0x0
    1a44:	b.ne	1a50 <insert_dir+0x144>  // b.any
    1a48:	mov	x0, #0x0                   	// #0
    1a4c:	b	1b38 <insert_dir+0x22c>
    1a50:	ldr	x0, [sp, #56]
    1a54:	ldr	x1, [x0]
    1a58:	ldr	x0, [sp, #48]
    1a5c:	str	x1, [x0, #8]
    1a60:	ldr	x1, [sp, #72]
    1a64:	ldr	x0, [sp, #80]
    1a68:	sub	x0, x1, x0
    1a6c:	mov	x1, x0
    1a70:	ldr	x0, [sp, #80]
    1a74:	bl	0 <grub_strndup>
    1a78:	mov	x1, x0
    1a7c:	ldr	x0, [sp, #48]
    1a80:	str	x1, [x0]
    1a84:	ldr	x0, [sp, #24]
    1a88:	cmp	x0, #0x0
    1a8c:	b.eq	1aec <insert_dir+0x1e0>  // b.none
    1a90:	ldr	x5, [sp, #72]
    1a94:	ldr	x4, [sp, #40]
    1a98:	adrp	x0, 0 <grub_swap_bytes64>
    1a9c:	add	x0, x0, #0x0
    1aa0:	ldr	x3, [x0]
    1aa4:	adrp	x0, 0 <grub_swap_bytes64>
    1aa8:	add	x0, x0, #0x0
    1aac:	ldr	x2, [x0]
    1ab0:	mov	w1, #0x81                  	// #129
    1ab4:	adrp	x0, 0 <grub_swap_bytes64>
    1ab8:	add	x0, x0, #0x0
    1abc:	ldr	x0, [x0]
    1ac0:	bl	0 <grub_real_dprintf>
    1ac4:	ldr	x1, [sp, #72]
    1ac8:	ldr	x0, [sp, #40]
    1acc:	sub	x0, x1, x0
    1ad0:	mov	x4, #0x0                   	// #0
    1ad4:	mov	w3, #0x41ff                	// #16895
    1ad8:	mov	x2, x0
    1adc:	ldr	x1, [sp, #40]
    1ae0:	ldr	x0, [sp, #24]
    1ae4:	bl	1724 <make_header>
    1ae8:	str	x0, [sp, #24]
    1aec:	ldr	x1, [sp, #72]
    1af0:	ldr	x0, [sp, #40]
    1af4:	sub	x0, x1, x0
    1af8:	add	x0, x0, #0x71
    1afc:	and	x0, x0, #0xfffffffffffffffc
    1b00:	ldr	x1, [sp, #64]
    1b04:	add	x0, x1, x0
    1b08:	str	x0, [sp, #64]
    1b0c:	ldr	x0, [sp, #56]
    1b10:	ldr	x1, [sp, #48]
    1b14:	str	x1, [x0]
    1b18:	ldr	x0, [sp, #48]
    1b1c:	str	x0, [sp, #88]
    1b20:	ldr	x0, [sp, #88]
    1b24:	add	x0, x0, #0x8
    1b28:	str	x0, [sp, #32]
    1b2c:	b	1934 <insert_dir+0x28>
    1b30:	nop
    1b34:	ldr	x0, [sp, #64]
    1b38:	ldp	x29, x30, [sp], #96
    1b3c:	ret
	...

0000000000001b58 <grub_initrd_init>:
    1b58:	stp	x29, x30, [sp, #-112]!
    1b5c:	mov	x29, sp
    1b60:	str	x19, [sp, #16]
    1b64:	str	w0, [sp, #60]
    1b68:	str	x1, [sp, #48]
    1b6c:	str	x2, [sp, #40]
    1b70:	str	wzr, [sp, #104]
    1b74:	str	xzr, [sp, #72]
    1b78:	ldr	x0, [sp, #40]
    1b7c:	str	wzr, [x0]
    1b80:	ldr	x0, [sp, #40]
    1b84:	str	xzr, [x0, #8]
    1b88:	ldrsw	x1, [sp, #60]
    1b8c:	mov	x0, x1
    1b90:	lsl	x0, x0, #1
    1b94:	add	x0, x0, x1
    1b98:	lsl	x0, x0, #3
    1b9c:	bl	0 <grub_zalloc>
    1ba0:	mov	x1, x0
    1ba4:	ldr	x0, [sp, #40]
    1ba8:	str	x1, [x0, #8]
    1bac:	ldr	x0, [sp, #40]
    1bb0:	ldr	x0, [x0, #8]
    1bb4:	cmp	x0, #0x0
    1bb8:	b.ne	1bd0 <grub_initrd_init+0x78>  // b.any
    1bbc:	adrp	x0, 0 <grub_swap_bytes64>
    1bc0:	add	x0, x0, #0x0
    1bc4:	ldr	x0, [x0]
    1bc8:	ldr	w0, [x0]
    1bcc:	b	1f74 <grub_initrd_init+0x41c>
    1bd0:	ldr	x0, [sp, #40]
    1bd4:	str	xzr, [x0, #16]
    1bd8:	str	wzr, [sp, #108]
    1bdc:	b	1f1c <grub_initrd_init+0x3c4>
    1be0:	ldrsw	x0, [sp, #108]
    1be4:	lsl	x0, x0, #3
    1be8:	ldr	x1, [sp, #48]
    1bec:	add	x0, x1, x0
    1bf0:	ldr	x0, [x0]
    1bf4:	str	x0, [sp, #96]
    1bf8:	ldr	x0, [sp, #40]
    1bfc:	ldr	x0, [x0, #16]
    1c00:	add	x0, x0, #0x3
    1c04:	and	x1, x0, #0xfffffffffffffffc
    1c08:	ldr	x0, [sp, #40]
    1c0c:	str	x1, [x0, #16]
    1c10:	ldrsw	x0, [sp, #108]
    1c14:	lsl	x0, x0, #3
    1c18:	ldr	x1, [sp, #48]
    1c1c:	add	x0, x1, x0
    1c20:	ldr	x3, [x0]
    1c24:	mov	x2, #0x5                   	// #5
    1c28:	adrp	x0, 0 <grub_swap_bytes64>
    1c2c:	add	x0, x0, #0x0
    1c30:	ldr	x1, [x0]
    1c34:	mov	x0, x3
    1c38:	bl	0 <grub_memcmp>
    1c3c:	cmp	w0, #0x0
    1c40:	b.ne	1dc8 <grub_initrd_init+0x270>  // b.any
    1c44:	ldrsw	x0, [sp, #108]
    1c48:	lsl	x0, x0, #3
    1c4c:	ldr	x1, [sp, #48]
    1c50:	add	x0, x1, x0
    1c54:	ldr	x0, [x0]
    1c58:	add	x0, x0, #0x5
    1c5c:	str	x0, [sp, #88]
    1c60:	b	1c70 <grub_initrd_init+0x118>
    1c64:	ldr	x0, [sp, #88]
    1c68:	add	x0, x0, #0x1
    1c6c:	str	x0, [sp, #88]
    1c70:	ldr	x0, [sp, #88]
    1c74:	ldrb	w0, [x0]
    1c78:	cmp	w0, #0x2f
    1c7c:	b.eq	1c64 <grub_initrd_init+0x10c>  // b.none
    1c80:	mov	w1, #0x3a                  	// #58
    1c84:	ldr	x0, [sp, #88]
    1c88:	bl	0 <grub_strchr>
    1c8c:	str	x0, [sp, #80]
    1c90:	ldr	x0, [sp, #80]
    1c94:	cmp	x0, #0x0
    1c98:	b.eq	1df8 <grub_initrd_init+0x2a0>  // b.none
    1c9c:	ldr	x1, [sp, #80]
    1ca0:	ldr	x0, [sp, #88]
    1ca4:	sub	x0, x1, x0
    1ca8:	mov	x3, x0
    1cac:	ldr	x0, [sp, #40]
    1cb0:	ldr	x2, [x0, #8]
    1cb4:	ldrsw	x1, [sp, #108]
    1cb8:	mov	x0, x1
    1cbc:	lsl	x0, x0, #1
    1cc0:	add	x0, x0, x1
    1cc4:	lsl	x0, x0, #3
    1cc8:	add	x19, x2, x0
    1ccc:	mov	x1, x3
    1cd0:	ldr	x0, [sp, #88]
    1cd4:	bl	0 <grub_strndup>
    1cd8:	str	x0, [x19, #8]
    1cdc:	ldr	x0, [sp, #40]
    1ce0:	ldr	x2, [x0, #8]
    1ce4:	ldrsw	x1, [sp, #108]
    1ce8:	mov	x0, x1
    1cec:	lsl	x0, x0, #1
    1cf0:	add	x0, x0, x1
    1cf4:	lsl	x0, x0, #3
    1cf8:	add	x0, x2, x0
    1cfc:	ldr	x0, [x0, #8]
    1d00:	cmp	x0, #0x0
    1d04:	b.ne	1d24 <grub_initrd_init+0x1cc>  // b.any
    1d08:	ldr	x0, [sp, #40]
    1d0c:	bl	1fa8 <grub_initrd_close>
    1d10:	adrp	x0, 0 <grub_swap_bytes64>
    1d14:	add	x0, x0, #0x0
    1d18:	ldr	x0, [x0]
    1d1c:	ldr	w0, [x0]
    1d20:	b	1f74 <grub_initrd_init+0x41c>
    1d24:	ldr	x0, [sp, #40]
    1d28:	ldr	x2, [x0, #8]
    1d2c:	ldrsw	x1, [sp, #108]
    1d30:	mov	x0, x1
    1d34:	lsl	x0, x0, #1
    1d38:	add	x0, x0, x1
    1d3c:	lsl	x0, x0, #3
    1d40:	add	x0, x2, x0
    1d44:	ldr	x0, [x0, #8]
    1d48:	bl	0 <grub_strlen>
    1d4c:	add	x0, x0, #0x71
    1d50:	and	x1, x0, #0xfffffffffffffffc
    1d54:	ldr	x0, [sp, #40]
    1d58:	ldr	x0, [x0, #16]
    1d5c:	add	x1, x1, x0
    1d60:	ldr	x0, [sp, #40]
    1d64:	str	x1, [x0, #16]
    1d68:	ldr	x0, [sp, #40]
    1d6c:	ldr	x2, [x0, #8]
    1d70:	ldrsw	x1, [sp, #108]
    1d74:	mov	x0, x1
    1d78:	lsl	x0, x0, #1
    1d7c:	add	x0, x0, x1
    1d80:	lsl	x0, x0, #3
    1d84:	add	x0, x2, x0
    1d88:	ldr	x0, [x0, #8]
    1d8c:	add	x1, sp, #0x48
    1d90:	mov	x2, #0x0                   	// #0
    1d94:	bl	190c <insert_dir>
    1d98:	mov	x1, x0
    1d9c:	ldr	x0, [sp, #40]
    1da0:	ldr	x0, [x0, #16]
    1da4:	add	x1, x1, x0
    1da8:	ldr	x0, [sp, #40]
    1dac:	str	x1, [x0, #16]
    1db0:	mov	w0, #0x1                   	// #1
    1db4:	str	w0, [sp, #104]
    1db8:	ldr	x0, [sp, #80]
    1dbc:	add	x0, x0, #0x1
    1dc0:	str	x0, [sp, #96]
    1dc4:	b	1df8 <grub_initrd_init+0x2a0>
    1dc8:	ldr	w0, [sp, #104]
    1dcc:	cmp	w0, #0x0
    1dd0:	b.eq	1df8 <grub_initrd_init+0x2a0>  // b.none
    1dd4:	ldr	x0, [sp, #40]
    1dd8:	ldr	x0, [x0, #16]
    1ddc:	add	x1, x0, #0x78
    1de0:	ldr	x0, [sp, #40]
    1de4:	str	x1, [x0, #16]
    1de8:	ldr	x0, [sp, #72]
    1dec:	bl	18b8 <free_dir>
    1df0:	str	xzr, [sp, #72]
    1df4:	str	wzr, [sp, #104]
    1df8:	ldr	x0, [sp, #40]
    1dfc:	ldr	x2, [x0, #8]
    1e00:	ldrsw	x1, [sp, #108]
    1e04:	mov	x0, x1
    1e08:	lsl	x0, x0, #1
    1e0c:	add	x0, x0, x1
    1e10:	lsl	x0, x0, #3
    1e14:	add	x19, x2, x0
    1e18:	mov	w1, #0x4                   	// #4
    1e1c:	movk	w1, #0x2, lsl #16
    1e20:	ldr	x0, [sp, #96]
    1e24:	bl	0 <grub_file_open>
    1e28:	str	x0, [x19]
    1e2c:	ldr	x0, [sp, #40]
    1e30:	ldr	x2, [x0, #8]
    1e34:	ldrsw	x1, [sp, #108]
    1e38:	mov	x0, x1
    1e3c:	lsl	x0, x0, #1
    1e40:	add	x0, x0, x1
    1e44:	lsl	x0, x0, #3
    1e48:	add	x0, x2, x0
    1e4c:	ldr	x0, [x0]
    1e50:	cmp	x0, #0x0
    1e54:	b.ne	1e74 <grub_initrd_init+0x31c>  // b.any
    1e58:	ldr	x0, [sp, #40]
    1e5c:	bl	1fa8 <grub_initrd_close>
    1e60:	adrp	x0, 0 <grub_swap_bytes64>
    1e64:	add	x0, x0, #0x0
    1e68:	ldr	x0, [x0]
    1e6c:	ldr	w0, [x0]
    1e70:	b	1f74 <grub_initrd_init+0x41c>
    1e74:	ldr	x0, [sp, #40]
    1e78:	ldr	w0, [x0]
    1e7c:	add	w1, w0, #0x1
    1e80:	ldr	x0, [sp, #40]
    1e84:	str	w1, [x0]
    1e88:	ldr	x0, [sp, #40]
    1e8c:	ldr	x2, [x0, #8]
    1e90:	ldrsw	x1, [sp, #108]
    1e94:	mov	x0, x1
    1e98:	lsl	x0, x0, #1
    1e9c:	add	x0, x0, x1
    1ea0:	lsl	x0, x0, #3
    1ea4:	add	x0, x2, x0
    1ea8:	ldr	x3, [x0]
    1eac:	ldr	x0, [sp, #40]
    1eb0:	ldr	x2, [x0, #8]
    1eb4:	ldrsw	x1, [sp, #108]
    1eb8:	mov	x0, x1
    1ebc:	lsl	x0, x0, #1
    1ec0:	add	x0, x0, x1
    1ec4:	lsl	x0, x0, #3
    1ec8:	add	x19, x2, x0
    1ecc:	mov	x0, x3
    1ed0:	bl	1620 <grub_file_size>
    1ed4:	str	x0, [x19, #16]
    1ed8:	ldr	x0, [sp, #40]
    1edc:	ldr	x2, [x0, #16]
    1ee0:	ldr	x0, [sp, #40]
    1ee4:	ldr	x3, [x0, #8]
    1ee8:	ldrsw	x1, [sp, #108]
    1eec:	mov	x0, x1
    1ef0:	lsl	x0, x0, #1
    1ef4:	add	x0, x0, x1
    1ef8:	lsl	x0, x0, #3
    1efc:	add	x0, x3, x0
    1f00:	ldr	x0, [x0, #16]
    1f04:	add	x1, x2, x0
    1f08:	ldr	x0, [sp, #40]
    1f0c:	str	x1, [x0, #16]
    1f10:	ldr	w0, [sp, #108]
    1f14:	add	w0, w0, #0x1
    1f18:	str	w0, [sp, #108]
    1f1c:	ldr	w1, [sp, #108]
    1f20:	ldr	w0, [sp, #60]
    1f24:	cmp	w1, w0
    1f28:	b.lt	1be0 <grub_initrd_init+0x88>  // b.tstop
    1f2c:	ldr	w0, [sp, #104]
    1f30:	cmp	w0, #0x0
    1f34:	b.eq	1f70 <grub_initrd_init+0x418>  // b.none
    1f38:	ldr	x0, [sp, #40]
    1f3c:	ldr	x0, [x0, #16]
    1f40:	add	x0, x0, #0x3
    1f44:	and	x1, x0, #0xfffffffffffffffc
    1f48:	ldr	x0, [sp, #40]
    1f4c:	str	x1, [x0, #16]
    1f50:	ldr	x0, [sp, #40]
    1f54:	ldr	x0, [x0, #16]
    1f58:	add	x1, x0, #0x78
    1f5c:	ldr	x0, [sp, #40]
    1f60:	str	x1, [x0, #16]
    1f64:	ldr	x0, [sp, #72]
    1f68:	bl	18b8 <free_dir>
    1f6c:	str	xzr, [sp, #72]
    1f70:	mov	w0, #0x0                   	// #0
    1f74:	ldr	x19, [sp, #16]
    1f78:	ldp	x29, x30, [sp], #112
    1f7c:	ret
	...

0000000000001f90 <grub_get_initrd_size>:
    1f90:	sub	sp, sp, #0x10
    1f94:	str	x0, [sp, #8]
    1f98:	ldr	x0, [sp, #8]
    1f9c:	ldr	x0, [x0, #16]
    1fa0:	add	sp, sp, #0x10
    1fa4:	ret

0000000000001fa8 <grub_initrd_close>:
    1fa8:	stp	x29, x30, [sp, #-48]!
    1fac:	mov	x29, sp
    1fb0:	str	x0, [sp, #24]
    1fb4:	ldr	x0, [sp, #24]
    1fb8:	ldr	x0, [x0, #8]
    1fbc:	cmp	x0, #0x0
    1fc0:	b.eq	2054 <grub_initrd_close+0xac>  // b.none
    1fc4:	str	wzr, [sp, #44]
    1fc8:	b	2028 <grub_initrd_close+0x80>
    1fcc:	ldr	x0, [sp, #24]
    1fd0:	ldr	x2, [x0, #8]
    1fd4:	ldrsw	x1, [sp, #44]
    1fd8:	mov	x0, x1
    1fdc:	lsl	x0, x0, #1
    1fe0:	add	x0, x0, x1
    1fe4:	lsl	x0, x0, #3
    1fe8:	add	x0, x2, x0
    1fec:	ldr	x0, [x0, #8]
    1ff0:	bl	0 <grub_free>
    1ff4:	ldr	x0, [sp, #24]
    1ff8:	ldr	x2, [x0, #8]
    1ffc:	ldrsw	x1, [sp, #44]
    2000:	mov	x0, x1
    2004:	lsl	x0, x0, #1
    2008:	add	x0, x0, x1
    200c:	lsl	x0, x0, #3
    2010:	add	x0, x2, x0
    2014:	ldr	x0, [x0]
    2018:	bl	0 <grub_file_close>
    201c:	ldr	w0, [sp, #44]
    2020:	add	w0, w0, #0x1
    2024:	str	w0, [sp, #44]
    2028:	ldr	x0, [sp, #24]
    202c:	ldr	w0, [x0]
    2030:	ldr	w1, [sp, #44]
    2034:	cmp	w1, w0
    2038:	b.lt	1fcc <grub_initrd_close+0x24>  // b.tstop
    203c:	ldr	x0, [sp, #24]
    2040:	ldr	x0, [x0, #8]
    2044:	bl	0 <grub_free>
    2048:	ldr	x0, [sp, #24]
    204c:	str	xzr, [x0, #8]
    2050:	b	2058 <grub_initrd_close+0xb0>
    2054:	nop
    2058:	ldp	x29, x30, [sp], #48
    205c:	ret

0000000000002060 <grub_initrd_load>:
    2060:	stp	x29, x30, [sp, #-96]!
    2064:	mov	x29, sp
    2068:	str	x19, [sp, #16]
    206c:	str	x0, [sp, #56]
    2070:	str	x1, [sp, #48]
    2074:	str	x2, [sp, #40]
    2078:	ldr	x0, [sp, #40]
    207c:	str	x0, [sp, #88]
    2080:	str	wzr, [sp, #80]
    2084:	str	xzr, [sp, #64]
    2088:	str	xzr, [sp, #72]
    208c:	str	wzr, [sp, #84]
    2090:	b	22f8 <grub_initrd_load+0x298>
    2094:	ldr	x0, [sp, #72]
    2098:	neg	x0, x0
    209c:	and	x0, x0, #0x3
    20a0:	mov	x2, x0
    20a4:	mov	w1, #0x0                   	// #0
    20a8:	ldr	x0, [sp, #88]
    20ac:	bl	0 <grub_memset>
    20b0:	ldr	x0, [sp, #72]
    20b4:	neg	x0, x0
    20b8:	and	x0, x0, #0x3
    20bc:	ldr	x1, [sp, #88]
    20c0:	add	x0, x1, x0
    20c4:	str	x0, [sp, #88]
    20c8:	ldr	x0, [sp, #56]
    20cc:	ldr	x2, [x0, #8]
    20d0:	ldrsw	x1, [sp, #84]
    20d4:	mov	x0, x1
    20d8:	lsl	x0, x0, #1
    20dc:	add	x0, x0, x1
    20e0:	lsl	x0, x0, #3
    20e4:	add	x0, x2, x0
    20e8:	ldr	x0, [x0, #8]
    20ec:	cmp	x0, #0x0
    20f0:	b.eq	21d0 <grub_initrd_load+0x170>  // b.none
    20f4:	ldr	x0, [sp, #56]
    20f8:	ldr	x2, [x0, #8]
    20fc:	ldrsw	x1, [sp, #84]
    2100:	mov	x0, x1
    2104:	lsl	x0, x0, #1
    2108:	add	x0, x0, x1
    210c:	lsl	x0, x0, #3
    2110:	add	x0, x2, x0
    2114:	ldr	x0, [x0, #8]
    2118:	add	x1, sp, #0x40
    211c:	ldr	x2, [sp, #88]
    2120:	bl	190c <insert_dir>
    2124:	mov	x1, x0
    2128:	ldr	x0, [sp, #88]
    212c:	add	x0, x0, x1
    2130:	str	x0, [sp, #88]
    2134:	ldr	x0, [sp, #56]
    2138:	ldr	x2, [x0, #8]
    213c:	ldrsw	x1, [sp, #84]
    2140:	mov	x0, x1
    2144:	lsl	x0, x0, #1
    2148:	add	x0, x0, x1
    214c:	lsl	x0, x0, #3
    2150:	add	x0, x2, x0
    2154:	ldr	x19, [x0, #8]
    2158:	ldr	x0, [sp, #56]
    215c:	ldr	x2, [x0, #8]
    2160:	ldrsw	x1, [sp, #84]
    2164:	mov	x0, x1
    2168:	lsl	x0, x0, #1
    216c:	add	x0, x0, x1
    2170:	lsl	x0, x0, #3
    2174:	add	x0, x2, x0
    2178:	ldr	x0, [x0, #8]
    217c:	bl	0 <grub_strlen>
    2180:	mov	x5, x0
    2184:	ldr	x0, [sp, #56]
    2188:	ldr	x2, [x0, #8]
    218c:	ldrsw	x1, [sp, #84]
    2190:	mov	x0, x1
    2194:	lsl	x0, x0, #1
    2198:	add	x0, x0, x1
    219c:	lsl	x0, x0, #3
    21a0:	add	x0, x2, x0
    21a4:	ldr	x0, [x0, #16]
    21a8:	mov	x4, x0
    21ac:	mov	w3, #0x81ff                	// #33279
    21b0:	mov	x2, x5
    21b4:	mov	x1, x19
    21b8:	ldr	x0, [sp, #88]
    21bc:	bl	1724 <make_header>
    21c0:	str	x0, [sp, #88]
    21c4:	mov	w0, #0x1                   	// #1
    21c8:	str	w0, [sp, #80]
    21cc:	b	2210 <grub_initrd_load+0x1b0>
    21d0:	ldr	w0, [sp, #80]
    21d4:	cmp	w0, #0x0
    21d8:	b.eq	2210 <grub_initrd_load+0x1b0>  // b.none
    21dc:	mov	x4, #0x0                   	// #0
    21e0:	mov	w3, #0x0                   	// #0
    21e4:	mov	x2, #0xa                   	// #10
    21e8:	adrp	x0, 0 <grub_swap_bytes64>
    21ec:	add	x0, x0, #0x0
    21f0:	ldr	x1, [x0]
    21f4:	ldr	x0, [sp, #88]
    21f8:	bl	1724 <make_header>
    21fc:	str	x0, [sp, #88]
    2200:	ldr	x0, [sp, #64]
    2204:	bl	18b8 <free_dir>
    2208:	str	xzr, [sp, #64]
    220c:	str	wzr, [sp, #80]
    2210:	ldr	x0, [sp, #56]
    2214:	ldr	x2, [x0, #8]
    2218:	ldrsw	x1, [sp, #84]
    221c:	mov	x0, x1
    2220:	lsl	x0, x0, #1
    2224:	add	x0, x0, x1
    2228:	lsl	x0, x0, #3
    222c:	add	x0, x2, x0
    2230:	ldr	x0, [x0, #16]
    2234:	str	x0, [sp, #72]
    2238:	ldr	x0, [sp, #56]
    223c:	ldr	x2, [x0, #8]
    2240:	ldrsw	x1, [sp, #84]
    2244:	mov	x0, x1
    2248:	lsl	x0, x0, #1
    224c:	add	x0, x0, x1
    2250:	lsl	x0, x0, #3
    2254:	add	x0, x2, x0
    2258:	ldr	x0, [x0]
    225c:	ldr	x1, [sp, #72]
    2260:	mov	x2, x1
    2264:	ldr	x1, [sp, #88]
    2268:	bl	0 <grub_file_read>
    226c:	mov	x1, x0
    2270:	ldr	x0, [sp, #72]
    2274:	cmp	x0, x1
    2278:	b.eq	22dc <grub_initrd_load+0x27c>  // b.none
    227c:	adrp	x0, 0 <grub_swap_bytes64>
    2280:	add	x0, x0, #0x0
    2284:	ldr	x0, [x0]
    2288:	ldr	w0, [x0]
    228c:	cmp	w0, #0x0
    2290:	b.ne	22c0 <grub_initrd_load+0x260>  // b.any
    2294:	ldrsw	x0, [sp, #84]
    2298:	lsl	x0, x0, #3
    229c:	ldr	x1, [sp, #48]
    22a0:	add	x0, x1, x0
    22a4:	ldr	x0, [x0]
    22a8:	mov	x2, x0
    22ac:	adrp	x0, 0 <grub_swap_bytes64>
    22b0:	add	x0, x0, #0x0
    22b4:	ldr	x1, [x0]
    22b8:	mov	w0, #0x6                   	// #6
    22bc:	bl	0 <grub_error>
    22c0:	ldr	x0, [sp, #56]
    22c4:	bl	1fa8 <grub_initrd_close>
    22c8:	adrp	x0, 0 <grub_swap_bytes64>
    22cc:	add	x0, x0, #0x0
    22d0:	ldr	x0, [x0]
    22d4:	ldr	w0, [x0]
    22d8:	b	2380 <grub_initrd_load+0x320>
    22dc:	ldr	x0, [sp, #72]
    22e0:	ldr	x1, [sp, #88]
    22e4:	add	x0, x1, x0
    22e8:	str	x0, [sp, #88]
    22ec:	ldr	w0, [sp, #84]
    22f0:	add	w0, w0, #0x1
    22f4:	str	w0, [sp, #84]
    22f8:	ldr	x0, [sp, #56]
    22fc:	ldr	w0, [x0]
    2300:	ldr	w1, [sp, #84]
    2304:	cmp	w1, w0
    2308:	b.lt	2094 <grub_initrd_load+0x34>  // b.tstop
    230c:	ldr	w0, [sp, #80]
    2310:	cmp	w0, #0x0
    2314:	b.eq	2370 <grub_initrd_load+0x310>  // b.none
    2318:	ldr	x0, [sp, #72]
    231c:	neg	x0, x0
    2320:	and	x0, x0, #0x3
    2324:	mov	x2, x0
    2328:	mov	w1, #0x0                   	// #0
    232c:	ldr	x0, [sp, #88]
    2330:	bl	0 <grub_memset>
    2334:	ldr	x0, [sp, #72]
    2338:	neg	x0, x0
    233c:	and	x0, x0, #0x3
    2340:	ldr	x1, [sp, #88]
    2344:	add	x0, x1, x0
    2348:	str	x0, [sp, #88]
    234c:	mov	x4, #0x0                   	// #0
    2350:	mov	w3, #0x0                   	// #0
    2354:	mov	x2, #0xa                   	// #10
    2358:	adrp	x0, 0 <grub_swap_bytes64>
    235c:	add	x0, x0, #0x0
    2360:	ldr	x1, [x0]
    2364:	ldr	x0, [sp, #88]
    2368:	bl	1724 <make_header>
    236c:	str	x0, [sp, #88]
    2370:	ldr	x0, [sp, #64]
    2374:	bl	18b8 <free_dir>
    2378:	str	xzr, [sp, #64]
    237c:	mov	w0, #0x0                   	// #0
    2380:	ldr	x19, [sp, #16]
    2384:	ldp	x29, x30, [sp], #96
    2388:	ret
    238c:	nop
	...

00000000000023a8 <check_arg>:
    23a8:	sub	sp, sp, #0x20
    23ac:	str	x0, [sp, #8]
    23b0:	str	x1, [sp]
    23b4:	str	wzr, [sp, #28]
    23b8:	str	wzr, [sp, #24]
    23bc:	b	2430 <check_arg+0x88>
    23c0:	ldr	x0, [sp, #8]
    23c4:	ldrb	w0, [x0]
    23c8:	cmp	w0, #0x5c
    23cc:	b.eq	23f0 <check_arg+0x48>  // b.none
    23d0:	ldr	x0, [sp, #8]
    23d4:	ldrb	w0, [x0]
    23d8:	cmp	w0, #0x27
    23dc:	b.eq	23f0 <check_arg+0x48>  // b.none
    23e0:	ldr	x0, [sp, #8]
    23e4:	ldrb	w0, [x0]
    23e8:	cmp	w0, #0x22
    23ec:	b.ne	2400 <check_arg+0x58>  // b.any
    23f0:	ldr	w0, [sp, #24]
    23f4:	add	w0, w0, #0x1
    23f8:	str	w0, [sp, #24]
    23fc:	b	2418 <check_arg+0x70>
    2400:	ldr	x0, [sp, #8]
    2404:	ldrb	w0, [x0]
    2408:	cmp	w0, #0x20
    240c:	b.ne	2418 <check_arg+0x70>  // b.any
    2410:	mov	w0, #0x1                   	// #1
    2414:	str	w0, [sp, #28]
    2418:	ldr	w0, [sp, #24]
    241c:	add	w0, w0, #0x1
    2420:	str	w0, [sp, #24]
    2424:	ldr	x0, [sp, #8]
    2428:	add	x0, x0, #0x1
    242c:	str	x0, [sp, #8]
    2430:	ldr	x0, [sp, #8]
    2434:	ldrb	w0, [x0]
    2438:	cmp	w0, #0x0
    243c:	b.ne	23c0 <check_arg+0x18>  // b.any
    2440:	ldr	w0, [sp, #28]
    2444:	cmp	w0, #0x0
    2448:	b.eq	2458 <check_arg+0xb0>  // b.none
    244c:	ldr	w0, [sp, #24]
    2450:	add	w0, w0, #0x2
    2454:	str	w0, [sp, #24]
    2458:	ldr	x0, [sp]
    245c:	cmp	x0, #0x0
    2460:	b.eq	2470 <check_arg+0xc8>  // b.none
    2464:	ldr	x0, [sp]
    2468:	ldr	w1, [sp, #28]
    246c:	str	w1, [x0]
    2470:	ldr	w0, [sp, #24]
    2474:	add	sp, sp, #0x20
    2478:	ret

000000000000247c <grub_loader_cmdline_size>:
    247c:	stp	x29, x30, [sp, #-48]!
    2480:	mov	x29, sp
    2484:	str	w0, [sp, #28]
    2488:	str	x1, [sp, #16]
    248c:	str	wzr, [sp, #40]
    2490:	str	wzr, [sp, #44]
    2494:	b	24dc <grub_loader_cmdline_size+0x60>
    2498:	ldrsw	x0, [sp, #44]
    249c:	lsl	x0, x0, #3
    24a0:	ldr	x1, [sp, #16]
    24a4:	add	x0, x1, x0
    24a8:	ldr	x0, [x0]
    24ac:	mov	x1, #0x0                   	// #0
    24b0:	bl	23a8 <check_arg>
    24b4:	mov	w1, w0
    24b8:	ldr	w0, [sp, #40]
    24bc:	add	w0, w0, w1
    24c0:	str	w0, [sp, #40]
    24c4:	ldr	w0, [sp, #40]
    24c8:	add	w0, w0, #0x1
    24cc:	str	w0, [sp, #40]
    24d0:	ldr	w0, [sp, #44]
    24d4:	add	w0, w0, #0x1
    24d8:	str	w0, [sp, #44]
    24dc:	ldr	w1, [sp, #44]
    24e0:	ldr	w0, [sp, #28]
    24e4:	cmp	w1, w0
    24e8:	b.lt	2498 <grub_loader_cmdline_size+0x1c>  // b.tstop
    24ec:	ldr	w0, [sp, #40]
    24f0:	cmp	w0, #0x0
    24f4:	b.ne	2500 <grub_loader_cmdline_size+0x84>  // b.any
    24f8:	mov	w0, #0x1                   	// #1
    24fc:	str	w0, [sp, #40]
    2500:	ldr	w0, [sp, #40]
    2504:	ldp	x29, x30, [sp], #48
    2508:	ret

000000000000250c <grub_create_loader_cmdline>:
    250c:	stp	x29, x30, [sp, #-80]!
    2510:	mov	x29, sp
    2514:	str	w0, [sp, #44]
    2518:	str	x1, [sp, #32]
    251c:	str	x2, [sp, #24]
    2520:	str	x3, [sp, #16]
    2524:	str	w4, [sp, #40]
    2528:	ldr	x0, [sp, #24]
    252c:	str	x0, [sp, #56]
    2530:	str	wzr, [sp, #76]
    2534:	b	2678 <grub_create_loader_cmdline+0x16c>
    2538:	ldrsw	x0, [sp, #76]
    253c:	lsl	x0, x0, #3
    2540:	ldr	x1, [sp, #32]
    2544:	add	x0, x1, x0
    2548:	ldr	x0, [x0]
    254c:	str	x0, [sp, #64]
    2550:	ldrsw	x0, [sp, #76]
    2554:	lsl	x0, x0, #3
    2558:	ldr	x1, [sp, #32]
    255c:	add	x0, x1, x0
    2560:	ldr	x0, [x0]
    2564:	add	x1, sp, #0x30
    2568:	bl	23a8 <check_arg>
    256c:	str	w0, [sp, #52]
    2570:	ldr	w0, [sp, #52]
    2574:	add	w0, w0, #0x1
    2578:	str	w0, [sp, #52]
    257c:	ldr	w0, [sp, #52]
    2580:	ldr	x1, [sp, #16]
    2584:	cmp	x1, x0
    2588:	b.cc	268c <grub_create_loader_cmdline+0x180>  // b.lo, b.ul, b.last
    258c:	ldr	w0, [sp, #52]
    2590:	ldr	x1, [sp, #16]
    2594:	sub	x0, x1, x0
    2598:	str	x0, [sp, #16]
    259c:	ldr	w0, [sp, #48]
    25a0:	cmp	w0, #0x0
    25a4:	b.eq	2628 <grub_create_loader_cmdline+0x11c>  // b.none
    25a8:	ldr	x0, [sp, #24]
    25ac:	add	x1, x0, #0x1
    25b0:	str	x1, [sp, #24]
    25b4:	mov	w1, #0x22                  	// #34
    25b8:	strb	w1, [x0]
    25bc:	b	2628 <grub_create_loader_cmdline+0x11c>
    25c0:	ldr	x0, [sp, #64]
    25c4:	ldrb	w0, [x0]
    25c8:	cmp	w0, #0x5c
    25cc:	b.eq	25f0 <grub_create_loader_cmdline+0xe4>  // b.none
    25d0:	ldr	x0, [sp, #64]
    25d4:	ldrb	w0, [x0]
    25d8:	cmp	w0, #0x27
    25dc:	b.eq	25f0 <grub_create_loader_cmdline+0xe4>  // b.none
    25e0:	ldr	x0, [sp, #64]
    25e4:	ldrb	w0, [x0]
    25e8:	cmp	w0, #0x22
    25ec:	b.ne	2604 <grub_create_loader_cmdline+0xf8>  // b.any
    25f0:	ldr	x0, [sp, #24]
    25f4:	add	x1, x0, #0x1
    25f8:	str	x1, [sp, #24]
    25fc:	mov	w1, #0x5c                  	// #92
    2600:	strb	w1, [x0]
    2604:	ldr	x0, [sp, #24]
    2608:	add	x1, x0, #0x1
    260c:	str	x1, [sp, #24]
    2610:	ldr	x1, [sp, #64]
    2614:	ldrb	w1, [x1]
    2618:	strb	w1, [x0]
    261c:	ldr	x0, [sp, #64]
    2620:	add	x0, x0, #0x1
    2624:	str	x0, [sp, #64]
    2628:	ldr	x0, [sp, #64]
    262c:	ldrb	w0, [x0]
    2630:	cmp	w0, #0x0
    2634:	b.ne	25c0 <grub_create_loader_cmdline+0xb4>  // b.any
    2638:	ldr	w0, [sp, #48]
    263c:	cmp	w0, #0x0
    2640:	b.eq	2658 <grub_create_loader_cmdline+0x14c>  // b.none
    2644:	ldr	x0, [sp, #24]
    2648:	add	x1, x0, #0x1
    264c:	str	x1, [sp, #24]
    2650:	mov	w1, #0x22                  	// #34
    2654:	strb	w1, [x0]
    2658:	ldr	x0, [sp, #24]
    265c:	add	x1, x0, #0x1
    2660:	str	x1, [sp, #24]
    2664:	mov	w1, #0x20                  	// #32
    2668:	strb	w1, [x0]
    266c:	ldr	w0, [sp, #76]
    2670:	add	w0, w0, #0x1
    2674:	str	w0, [sp, #76]
    2678:	ldr	w1, [sp, #76]
    267c:	ldr	w0, [sp, #44]
    2680:	cmp	w1, w0
    2684:	b.lt	2538 <grub_create_loader_cmdline+0x2c>  // b.tstop
    2688:	b	2690 <grub_create_loader_cmdline+0x184>
    268c:	nop
    2690:	ldr	w0, [sp, #76]
    2694:	cmp	w0, #0x0
    2698:	b.eq	26a8 <grub_create_loader_cmdline+0x19c>  // b.none
    269c:	ldr	x0, [sp, #24]
    26a0:	sub	x0, x0, #0x1
    26a4:	str	x0, [sp, #24]
    26a8:	ldr	x0, [sp, #24]
    26ac:	strb	wzr, [x0]
    26b0:	ldr	w1, [sp, #40]
    26b4:	ldr	x0, [sp, #56]
    26b8:	bl	0 <grub_verify_string>
    26bc:	ldp	x29, x30, [sp], #80
    26c0:	ret
