
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-modules-load_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401170 <_init>:
  401170:	stp	x29, x30, [sp, #-16]!
  401174:	mov	x29, sp
  401178:	bl	401888 <call_weak_fn>
  40117c:	ldp	x29, x30, [sp], #16
  401180:	ret

Disassembly of section .plt:

0000000000401190 <.plt>:
  401190:	stp	x16, x30, [sp, #-16]!
  401194:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401198:	ldr	x17, [x16, #3776]
  40119c:	add	x16, x16, #0xec0
  4011a0:	br	x17
  4011a4:	nop
  4011a8:	nop
  4011ac:	nop

00000000004011b0 <safe_fclose@plt>:
  4011b0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4011b4:	ldr	x17, [x16, #3784]
  4011b8:	add	x16, x16, #0xec8
  4011bc:	br	x17

00000000004011c0 <read_line_full@plt>:
  4011c0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4011c4:	ldr	x17, [x16, #3792]
  4011c8:	add	x16, x16, #0xed0
  4011cc:	br	x17

00000000004011d0 <__libc_start_main@plt>:
  4011d0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4011d4:	ldr	x17, [x16, #3800]
  4011d8:	add	x16, x16, #0xed8
  4011dc:	br	x17

00000000004011e0 <strv_extend_strv@plt>:
  4011e0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4011e4:	ldr	x17, [x16, #3808]
  4011e8:	add	x16, x16, #0xee0
  4011ec:	br	x17

00000000004011f0 <__gmon_start__@plt>:
  4011f0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4011f4:	ldr	x17, [x16, #3816]
  4011f8:	add	x16, x16, #0xee8
  4011fc:	br	x17

0000000000401200 <polkit_agent_close@plt>:
  401200:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401204:	ldr	x17, [x16, #3824]
  401208:	add	x16, x16, #0xef0
  40120c:	br	x17

0000000000401210 <strv_split_full@plt>:
  401210:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401214:	ldr	x17, [x16, #3832]
  401218:	add	x16, x16, #0xef8
  40121c:	br	x17

0000000000401220 <proc_cmdline_key_streq@plt>:
  401220:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401224:	ldr	x17, [x16, #3840]
  401228:	add	x16, x16, #0xf00
  40122c:	br	x17

0000000000401230 <kmod_new@plt>:
  401230:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401234:	ldr	x17, [x16, #3848]
  401238:	add	x16, x16, #0xf08
  40123c:	br	x17

0000000000401240 <kmod_set_log_fn@plt>:
  401240:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401244:	ldr	x17, [x16, #3856]
  401248:	add	x16, x16, #0xf10
  40124c:	br	x17

0000000000401250 <log_setup_service@plt>:
  401250:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401254:	ldr	x17, [x16, #3864]
  401258:	add	x16, x16, #0xf18
  40125c:	br	x17

0000000000401260 <log_assert_failed_realm@plt>:
  401260:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401264:	ldr	x17, [x16, #3872]
  401268:	add	x16, x16, #0xf20
  40126c:	br	x17

0000000000401270 <getopt_long@plt>:
  401270:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401274:	ldr	x17, [x16, #3880]
  401278:	add	x16, x16, #0xf28
  40127c:	br	x17

0000000000401280 <log_assert_failed_unreachable_realm@plt>:
  401280:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401284:	ldr	x17, [x16, #3888]
  401288:	add	x16, x16, #0xf30
  40128c:	br	x17

0000000000401290 <umask@plt>:
  401290:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401294:	ldr	x17, [x16, #3896]
  401298:	add	x16, x16, #0xf38
  40129c:	br	x17

00000000004012a0 <abort@plt>:
  4012a0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4012a4:	ldr	x17, [x16, #3904]
  4012a8:	add	x16, x16, #0xf40
  4012ac:	br	x17

00000000004012b0 <kmod_unref@plt>:
  4012b0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4012b4:	ldr	x17, [x16, #3912]
  4012b8:	add	x16, x16, #0xf48
  4012bc:	br	x17

00000000004012c0 <strv_free@plt>:
  4012c0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4012c4:	ldr	x17, [x16, #3920]
  4012c8:	add	x16, x16, #0xf50
  4012cc:	br	x17

00000000004012d0 <module_load_and_warn@plt>:
  4012d0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4012d4:	ldr	x17, [x16, #3928]
  4012d8:	add	x16, x16, #0xf58
  4012dc:	br	x17

00000000004012e0 <terminal_urlify_man@plt>:
  4012e0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4012e4:	ldr	x17, [x16, #3936]
  4012e8:	add	x16, x16, #0xf60
  4012ec:	br	x17

00000000004012f0 <__stack_chk_fail@plt>:
  4012f0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4012f4:	ldr	x17, [x16, #3944]
  4012f8:	add	x16, x16, #0xf68
  4012fc:	br	x17

0000000000401300 <conf_files_list_nulstr@plt>:
  401300:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401304:	ldr	x17, [x16, #3952]
  401308:	add	x16, x16, #0xf70
  40130c:	br	x17

0000000000401310 <ask_password_agent_close@plt>:
  401310:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401314:	ldr	x17, [x16, #3960]
  401318:	add	x16, x16, #0xf78
  40131c:	br	x17

0000000000401320 <version@plt>:
  401320:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401324:	ldr	x17, [x16, #3968]
  401328:	add	x16, x16, #0xf80
  40132c:	br	x17

0000000000401330 <pager_close@plt>:
  401330:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401334:	ldr	x17, [x16, #3976]
  401338:	add	x16, x16, #0xf88
  40133c:	br	x17

0000000000401340 <log_internal_realm@plt>:
  401340:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401344:	ldr	x17, [x16, #3984]
  401348:	add	x16, x16, #0xf90
  40134c:	br	x17

0000000000401350 <strchr@plt>:
  401350:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401354:	ldr	x17, [x16, #3992]
  401358:	add	x16, x16, #0xf98
  40135c:	br	x17

0000000000401360 <proc_cmdline_parse@plt>:
  401360:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401364:	ldr	x17, [x16, #4000]
  401368:	add	x16, x16, #0xfa0
  40136c:	br	x17

0000000000401370 <log_internalv_realm@plt>:
  401370:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401374:	ldr	x17, [x16, #4008]
  401378:	add	x16, x16, #0xfa8
  40137c:	br	x17

0000000000401380 <strstrip@plt>:
  401380:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401384:	ldr	x17, [x16, #4016]
  401388:	add	x16, x16, #0xfb0
  40138c:	br	x17

0000000000401390 <free@plt>:
  401390:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  401394:	ldr	x17, [x16, #4024]
  401398:	add	x16, x16, #0xfb8
  40139c:	br	x17

00000000004013a0 <search_and_fopen_nulstr@plt>:
  4013a0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4013a4:	ldr	x17, [x16, #4032]
  4013a8:	add	x16, x16, #0xfc0
  4013ac:	br	x17

00000000004013b0 <mac_selinux_finish@plt>:
  4013b0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4013b4:	ldr	x17, [x16, #4040]
  4013b8:	add	x16, x16, #0xfc8
  4013bc:	br	x17

00000000004013c0 <printf@plt>:
  4013c0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4013c4:	ldr	x17, [x16, #4048]
  4013c8:	add	x16, x16, #0xfd0
  4013cc:	br	x17

00000000004013d0 <kmod_load_resources@plt>:
  4013d0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4013d4:	ldr	x17, [x16, #4056]
  4013d8:	add	x16, x16, #0xfd8
  4013dc:	br	x17

00000000004013e0 <log_oom_internal@plt>:
  4013e0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4013e4:	ldr	x17, [x16, #4064]
  4013e8:	add	x16, x16, #0xfe0
  4013ec:	br	x17

00000000004013f0 <log_get_max_level_realm@plt>:
  4013f0:	adrp	x16, 412000 <__FRAME_END__+0xfbf0>
  4013f4:	ldr	x17, [x16, #4072]
  4013f8:	add	x16, x16, #0xfe8
  4013fc:	br	x17

Disassembly of section .text:

0000000000401400 <main>:
  401400:	stp	x29, x30, [sp, #-80]!
  401404:	adrp	x3, 413000 <saved_argv@@SD_SHARED>
  401408:	adrp	x2, 413000 <saved_argv@@SD_SHARED>
  40140c:	mov	x29, sp
  401410:	stp	x21, x22, [sp, #32]
  401414:	adrp	x22, 412000 <__FRAME_END__+0xfbf0>
  401418:	add	x22, x22, #0xc68
  40141c:	ldr	x4, [x22]
  401420:	str	x4, [sp, #72]
  401424:	mov	x4, #0x0                   	// #0
  401428:	str	w0, [x3, #24]
  40142c:	str	x1, [x2]
  401430:	stp	x19, x20, [sp, #16]
  401434:	stp	x23, x24, [sp, #48]
  401438:	tbnz	w0, #31, 401728 <main+0x328>
  40143c:	mov	x19, x1
  401440:	cbz	x1, 40174c <main+0x34c>
  401444:	adrp	x3, 402000 <_fini+0x254>
  401448:	adrp	x2, 401000 <_init-0x170>
  40144c:	mov	w23, w0
  401450:	add	x3, x3, #0x1a8
  401454:	add	x2, x2, #0xff8
  401458:	mov	x4, #0x0                   	// #0
  40145c:	bl	401270 <getopt_long@plt>
  401460:	tbnz	w0, #31, 401484 <main+0x84>
  401464:	cmp	w0, #0x68
  401468:	b.eq	4016c8 <main+0x2c8>  // b.none
  40146c:	cmp	w0, #0x100
  401470:	b.ne	40160c <main+0x20c>  // b.any
  401474:	bl	401320 <version@plt>
  401478:	mov	w20, w0
  40147c:	cmp	w20, #0x0
  401480:	b.le	40159c <main+0x19c>
  401484:	bl	401250 <log_setup_service@plt>
  401488:	mov	w0, #0x12                  	// #18
  40148c:	bl	401290 <umask@plt>
  401490:	mov	w2, #0x1                   	// #1
  401494:	adrp	x0, 401000 <_init-0x170>
  401498:	mov	x1, #0x0                   	// #0
  40149c:	add	x0, x0, #0xc10
  4014a0:	bl	401360 <proc_cmdline_parse@plt>
  4014a4:	mov	w20, w0
  4014a8:	tbnz	w0, #31, 40168c <main+0x28c>
  4014ac:	mov	x1, #0x0                   	// #0
  4014b0:	mov	x0, #0x0                   	// #0
  4014b4:	bl	401230 <kmod_new@plt>
  4014b8:	mov	x21, x0
  4014bc:	cbz	x0, 401710 <main+0x310>
  4014c0:	bl	4013d0 <kmod_load_resources@plt>
  4014c4:	mov	x0, x21
  4014c8:	adrp	x1, 401000 <_init-0x170>
  4014cc:	mov	x2, #0x0                   	// #0
  4014d0:	add	x1, x1, #0x958
  4014d4:	bl	401240 <kmod_set_log_fn@plt>
  4014d8:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4014dc:	ldr	w0, [x0, #16]
  4014e0:	cmp	w23, w0
  4014e4:	b.gt	401640 <main+0x240>
  4014e8:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4014ec:	str	xzr, [sp, #64]
  4014f0:	ldr	x19, [x0, #32]
  4014f4:	cbz	x19, 401820 <main+0x420>
  4014f8:	ldr	x1, [x19]
  4014fc:	mov	w20, #0x0                   	// #0
  401500:	cbz	x1, 401530 <main+0x130>
  401504:	nop
  401508:	mov	x0, x21
  40150c:	mov	w2, #0x1                   	// #1
  401510:	bl	4012d0 <module_load_and_warn@plt>
  401514:	cmn	w0, #0x2
  401518:	b.eq	401528 <main+0x128>  // b.none
  40151c:	cmp	w0, #0x0
  401520:	ccmp	w20, #0x0, #0x0, lt  // lt = tstop
  401524:	csel	w20, w20, w0, ne  // ne = any
  401528:	ldr	x1, [x19, #8]!
  40152c:	cbnz	x1, 401508 <main+0x108>
  401530:	add	x0, sp, #0x40
  401534:	adrp	x4, 402000 <_fini+0x254>
  401538:	adrp	x1, 402000 <_fini+0x254>
  40153c:	add	x4, x4, #0x130
  401540:	add	x1, x1, #0x60
  401544:	mov	w3, #0x0                   	// #0
  401548:	mov	x2, #0x0                   	// #0
  40154c:	bl	401300 <conf_files_list_nulstr@plt>
  401550:	mov	w19, w0
  401554:	tbnz	w0, #31, 4017a0 <main+0x3a0>
  401558:	ldr	x19, [sp, #64]
  40155c:	cbz	x19, 401594 <main+0x194>
  401560:	ldr	x1, [x19]
  401564:	cbz	x1, 401828 <main+0x428>
  401568:	mov	x0, x21
  40156c:	mov	w2, #0x1                   	// #1
  401570:	bl	401990 <apply_file>
  401574:	cmp	w0, #0x0
  401578:	ldr	x1, [x19, #8]!
  40157c:	ccmp	w20, #0x0, #0x0, lt  // lt = tstop
  401580:	csel	w20, w20, w0, ne  // ne = any
  401584:	cbnz	x1, 401568 <main+0x168>
  401588:	ldr	x0, [sp, #64]
  40158c:	cbz	x0, 401594 <main+0x194>
  401590:	bl	4012c0 <strv_free@plt>
  401594:	mov	x0, x21
  401598:	bl	4012b0 <kmod_unref@plt>
  40159c:	bl	401310 <ask_password_agent_close@plt>
  4015a0:	bl	401200 <polkit_agent_close@plt>
  4015a4:	bl	401330 <pager_close@plt>
  4015a8:	bl	4013b0 <mac_selinux_finish@plt>
  4015ac:	adrp	x0, 402000 <_fini+0x254>
  4015b0:	ldr	x19, [x0, #168]
  4015b4:	cbz	x19, 4015e4 <main+0x1e4>
  4015b8:	adrp	x0, 402000 <_fini+0x254>
  4015bc:	add	x19, x19, #0x7
  4015c0:	and	x19, x19, #0xfffffffffffffff8
  4015c4:	ldr	x21, [x0, #176]
  4015c8:	cmp	x19, x21
  4015cc:	b.cs	4015e4 <main+0x1e4>  // b.hs, b.nlast
  4015d0:	ldp	x0, x1, [x19]
  4015d4:	add	x19, x19, #0x10
  4015d8:	blr	x1
  4015dc:	cmp	x19, x21
  4015e0:	b.cc	4015d0 <main+0x1d0>  // b.lo, b.ul, b.last
  4015e4:	lsr	w0, w20, #31
  4015e8:	ldr	x2, [sp, #72]
  4015ec:	ldr	x1, [x22]
  4015f0:	eor	x1, x2, x1
  4015f4:	cbnz	x1, 401834 <main+0x434>
  4015f8:	ldp	x19, x20, [sp, #16]
  4015fc:	ldp	x21, x22, [sp, #32]
  401600:	ldp	x23, x24, [sp, #48]
  401604:	ldp	x29, x30, [sp], #80
  401608:	ret
  40160c:	cmp	w0, #0x3f
  401610:	b.eq	401638 <main+0x238>  // b.none
  401614:	adrp	x4, 402000 <_fini+0x254>
  401618:	adrp	x1, 401000 <_init-0x170>
  40161c:	adrp	x2, 401000 <_init-0x170>
  401620:	add	x4, x4, #0xc8
  401624:	add	x1, x1, #0xfe0
  401628:	add	x2, x2, #0xdd3
  40162c:	mov	w3, #0x9b                  	// #155
  401630:	mov	w0, #0x0                   	// #0
  401634:	bl	401280 <log_assert_failed_unreachable_realm@plt>
  401638:	mov	w20, #0xffffffea            	// #-22
  40163c:	b	40159c <main+0x19c>
  401640:	sxtw	x1, w0
  401644:	mvn	w24, w0
  401648:	add	w24, w24, w23
  40164c:	add	x23, x1, #0x1
  401650:	add	x24, x24, x23
  401654:	mov	w20, #0x0                   	// #0
  401658:	b	401660 <main+0x260>
  40165c:	add	x23, x23, #0x1
  401660:	ldr	x1, [x19, x1, lsl #3]
  401664:	mov	x0, x21
  401668:	mov	w2, #0x0                   	// #0
  40166c:	bl	401990 <apply_file>
  401670:	cmp	w0, #0x0
  401674:	ccmp	w20, #0x0, #0x0, lt  // lt = tstop
  401678:	mov	x1, x23
  40167c:	csel	w20, w20, w0, ne  // ne = any
  401680:	cmp	x24, x23
  401684:	b.ne	40165c <main+0x25c>  // b.any
  401688:	b	401594 <main+0x194>
  40168c:	mov	w0, #0x0                   	// #0
  401690:	bl	4013f0 <log_get_max_level_realm@plt>
  401694:	cmp	w0, #0x3
  401698:	b.le	4014ac <main+0xac>
  40169c:	mov	w1, w20
  4016a0:	adrp	x5, 402000 <_fini+0x254>
  4016a4:	adrp	x4, 402000 <_fini+0x254>
  4016a8:	add	x5, x5, #0x0
  4016ac:	add	x4, x4, #0x100
  4016b0:	adrp	x2, 401000 <_init-0x170>
  4016b4:	mov	w3, #0xaf                  	// #175
  4016b8:	add	x2, x2, #0xdd3
  4016bc:	mov	w0, #0x4                   	// #4
  4016c0:	bl	401340 <log_internal_realm@plt>
  4016c4:	b	4014ac <main+0xac>
  4016c8:	adrp	x1, 401000 <_init-0x170>
  4016cc:	adrp	x0, 401000 <_init-0x170>
  4016d0:	add	x1, x1, #0xef0
  4016d4:	add	x0, x0, #0xef8
  4016d8:	add	x2, sp, #0x40
  4016dc:	str	xzr, [sp, #64]
  4016e0:	bl	4012e0 <terminal_urlify_man@plt>
  4016e4:	tbnz	w0, #31, 4017c8 <main+0x3c8>
  4016e8:	adrp	x1, 413000 <saved_argv@@SD_SHARED>
  4016ec:	adrp	x0, 401000 <_init-0x170>
  4016f0:	ldr	x2, [sp, #64]
  4016f4:	add	x0, x0, #0xf18
  4016f8:	ldr	x1, [x1, #8]
  4016fc:	mov	w20, #0x0                   	// #0
  401700:	bl	4013c0 <printf@plt>
  401704:	ldr	x0, [sp, #64]
  401708:	bl	401390 <free@plt>
  40170c:	b	40159c <main+0x19c>
  401710:	mov	w0, #0x0                   	// #0
  401714:	bl	4013f0 <log_get_max_level_realm@plt>
  401718:	cmp	w0, #0x2
  40171c:	b.gt	401770 <main+0x370>
  401720:	mov	w20, #0xfffffff4            	// #-12
  401724:	b	40159c <main+0x19c>
  401728:	adrp	x4, 402000 <_fini+0x254>
  40172c:	adrp	x1, 401000 <_init-0x170>
  401730:	adrp	x2, 401000 <_init-0x170>
  401734:	add	x4, x4, #0xc8
  401738:	add	x1, x1, #0xed8
  40173c:	add	x2, x2, #0xdd3
  401740:	mov	w3, #0x8b                  	// #139
  401744:	mov	w0, #0x0                   	// #0
  401748:	bl	401260 <log_assert_failed_realm@plt>
  40174c:	adrp	x4, 402000 <_fini+0x254>
  401750:	adrp	x1, 401000 <_init-0x170>
  401754:	adrp	x2, 401000 <_init-0x170>
  401758:	add	x4, x4, #0xc8
  40175c:	add	x1, x1, #0xee8
  401760:	add	x2, x2, #0xdd3
  401764:	mov	w3, #0x8c                  	// #140
  401768:	mov	w0, #0x0                   	// #0
  40176c:	bl	401260 <log_assert_failed_realm@plt>
  401770:	adrp	x5, 402000 <_fini+0x254>
  401774:	adrp	x4, 402000 <_fini+0x254>
  401778:	add	x5, x5, #0x38
  40177c:	add	x4, x4, #0x100
  401780:	adrp	x2, 401000 <_init-0x170>
  401784:	mov	w3, #0xb3                  	// #179
  401788:	add	x2, x2, #0xdd3
  40178c:	mov	w1, #0x0                   	// #0
  401790:	mov	w20, #0xfffffff4            	// #-12
  401794:	mov	w0, #0x3                   	// #3
  401798:	bl	401340 <log_internal_realm@plt>
  40179c:	b	40159c <main+0x19c>
  4017a0:	mov	w0, #0x0                   	// #0
  4017a4:	bl	4013f0 <log_get_max_level_realm@plt>
  4017a8:	cmp	w0, #0x2
  4017ac:	b.gt	4017f4 <main+0x3f4>
  4017b0:	ldr	x0, [sp, #64]
  4017b4:	cmp	w20, #0x0
  4017b8:	csel	w20, w20, w19, ne  // ne = any
  4017bc:	cbz	x0, 401594 <main+0x194>
  4017c0:	bl	4012c0 <strv_free@plt>
  4017c4:	b	401594 <main+0x194>
  4017c8:	mov	w2, #0x70                  	// #112
  4017cc:	adrp	x3, 402000 <_fini+0x254>
  4017d0:	adrp	x1, 401000 <_init-0x170>
  4017d4:	add	x3, x3, #0xf8
  4017d8:	add	x1, x1, #0xdd3
  4017dc:	mov	w0, #0x0                   	// #0
  4017e0:	bl	4013e0 <log_oom_internal@plt>
  4017e4:	mov	w20, w0
  4017e8:	ldr	x0, [sp, #64]
  4017ec:	bl	401390 <free@plt>
  4017f0:	b	40147c <main+0x7c>
  4017f4:	mov	w1, w19
  4017f8:	adrp	x5, 402000 <_fini+0x254>
  4017fc:	adrp	x4, 402000 <_fini+0x254>
  401800:	add	x5, x5, #0x68
  401804:	add	x4, x4, #0x100
  401808:	adrp	x2, 401000 <_init-0x170>
  40180c:	mov	w3, #0xd3                  	// #211
  401810:	add	x2, x2, #0xdd3
  401814:	mov	w0, #0x3                   	// #3
  401818:	bl	401340 <log_internal_realm@plt>
  40181c:	b	4017b0 <main+0x3b0>
  401820:	mov	w20, #0x0                   	// #0
  401824:	b	401530 <main+0x130>
  401828:	mov	x0, x19
  40182c:	bl	4012c0 <strv_free@plt>
  401830:	b	401594 <main+0x194>
  401834:	bl	4012f0 <__stack_chk_fail@plt>

0000000000401838 <_start>:
  401838:	mov	x29, #0x0                   	// #0
  40183c:	mov	x30, #0x0                   	// #0
  401840:	mov	x5, x0
  401844:	ldr	x1, [sp]
  401848:	add	x2, sp, #0x8
  40184c:	mov	x6, sp
  401850:	movz	x0, #0x0, lsl #48
  401854:	movk	x0, #0x0, lsl #32
  401858:	movk	x0, #0x40, lsl #16
  40185c:	movk	x0, #0x1400
  401860:	movz	x3, #0x0, lsl #48
  401864:	movk	x3, #0x0, lsl #32
  401868:	movk	x3, #0x40, lsl #16
  40186c:	movk	x3, #0x1d28
  401870:	movz	x4, #0x0, lsl #48
  401874:	movk	x4, #0x0, lsl #32
  401878:	movk	x4, #0x40, lsl #16
  40187c:	movk	x4, #0x1da8
  401880:	bl	4011d0 <__libc_start_main@plt>
  401884:	bl	4012a0 <abort@plt>

0000000000401888 <call_weak_fn>:
  401888:	adrp	x0, 412000 <__FRAME_END__+0xfbf0>
  40188c:	ldr	x0, [x0, #4088]
  401890:	cbz	x0, 401898 <call_weak_fn+0x10>
  401894:	b	4011f0 <__gmon_start__@plt>
  401898:	ret
  40189c:	nop

00000000004018a0 <deregister_tm_clones>:
  4018a0:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4018a4:	add	x0, x0, #0x0
  4018a8:	adrp	x1, 413000 <saved_argv@@SD_SHARED>
  4018ac:	add	x1, x1, #0x0
  4018b0:	cmp	x1, x0
  4018b4:	b.eq	4018cc <deregister_tm_clones+0x2c>  // b.none
  4018b8:	adrp	x1, 401000 <_init-0x170>
  4018bc:	ldr	x1, [x1, #3520]
  4018c0:	cbz	x1, 4018cc <deregister_tm_clones+0x2c>
  4018c4:	mov	x16, x1
  4018c8:	br	x16
  4018cc:	ret

00000000004018d0 <register_tm_clones>:
  4018d0:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4018d4:	add	x0, x0, #0x0
  4018d8:	adrp	x1, 413000 <saved_argv@@SD_SHARED>
  4018dc:	add	x1, x1, #0x0
  4018e0:	sub	x1, x1, x0
  4018e4:	lsr	x2, x1, #63
  4018e8:	add	x1, x2, x1, asr #3
  4018ec:	cmp	xzr, x1, asr #1
  4018f0:	asr	x1, x1, #1
  4018f4:	b.eq	40190c <register_tm_clones+0x3c>  // b.none
  4018f8:	adrp	x2, 401000 <_init-0x170>
  4018fc:	ldr	x2, [x2, #3528]
  401900:	cbz	x2, 40190c <register_tm_clones+0x3c>
  401904:	mov	x16, x2
  401908:	br	x16
  40190c:	ret

0000000000401910 <__do_global_dtors_aux>:
  401910:	stp	x29, x30, [sp, #-32]!
  401914:	mov	x29, sp
  401918:	str	x19, [sp, #16]
  40191c:	adrp	x19, 413000 <saved_argv@@SD_SHARED>
  401920:	ldrb	w0, [x19, #28]
  401924:	cbnz	w0, 401934 <__do_global_dtors_aux+0x24>
  401928:	bl	4018a0 <deregister_tm_clones>
  40192c:	mov	w0, #0x1                   	// #1
  401930:	strb	w0, [x19, #28]
  401934:	ldr	x19, [sp, #16]
  401938:	ldp	x29, x30, [sp], #32
  40193c:	ret

0000000000401940 <frame_dummy>:
  401940:	b	4018d0 <register_tm_clones>
  401944:	nop

0000000000401948 <__unique_prefix_static_destructor_wrapper0>:
  401948:	ldr	x0, [x0]
  40194c:	cbz	x0, 401954 <__unique_prefix_static_destructor_wrapper0+0xc>
  401950:	b	4012c0 <strv_free@plt>
  401954:	ret

0000000000401958 <systemd_kmod_log>:
  401958:	mov	x7, x6
  40195c:	stp	x29, x30, [sp, #-48]!
  401960:	mov	w0, w1
  401964:	mov	x29, sp
  401968:	ldp	x8, x9, [x7]
  40196c:	stp	x8, x9, [sp, #16]
  401970:	add	x6, sp, #0x10
  401974:	ldp	x8, x9, [x7, #16]
  401978:	mov	w1, #0x0                   	// #0
  40197c:	stp	x8, x9, [sp, #32]
  401980:	bl	401370 <log_internalv_realm@plt>
  401984:	ldp	x29, x30, [sp], #48
  401988:	ret
  40198c:	nop

0000000000401990 <apply_file>:
  401990:	stp	x29, x30, [sp, #-96]!
  401994:	mov	x29, sp
  401998:	stp	x21, x22, [sp, #32]
  40199c:	adrp	x22, 412000 <__FRAME_END__+0xfbf0>
  4019a0:	add	x22, x22, #0xc68
  4019a4:	ldr	x3, [x22]
  4019a8:	str	x3, [sp, #88]
  4019ac:	mov	x3, #0x0                   	// #0
  4019b0:	stp	x19, x20, [sp, #16]
  4019b4:	stp	x23, x24, [sp, #48]
  4019b8:	str	xzr, [sp, #72]
  4019bc:	cbz	x0, 401b8c <apply_file+0x1fc>
  4019c0:	mov	x21, x1
  4019c4:	cbz	x1, 401bb0 <apply_file+0x220>
  4019c8:	mov	x23, x0
  4019cc:	and	w19, w2, #0xff
  4019d0:	add	x4, sp, #0x48
  4019d4:	mov	x0, x21
  4019d8:	adrp	x3, 402000 <_fini+0x254>
  4019dc:	adrp	x1, 401000 <_init-0x170>
  4019e0:	add	x3, x3, #0x130
  4019e4:	add	x1, x1, #0xe08
  4019e8:	mov	x2, #0x0                   	// #0
  4019ec:	bl	4013a0 <search_and_fopen_nulstr@plt>
  4019f0:	mov	w20, w0
  4019f4:	tbnz	w0, #31, 401a98 <apply_file+0x108>
  4019f8:	mov	w0, #0x0                   	// #0
  4019fc:	bl	4013f0 <log_get_max_level_realm@plt>
  401a00:	cmp	w0, #0x6
  401a04:	b.gt	401b5c <apply_file+0x1cc>
  401a08:	adrp	x24, 401000 <_init-0x170>
  401a0c:	add	x24, x24, #0xe58
  401a10:	b	401a1c <apply_file+0x8c>
  401a14:	ldr	x0, [sp, #80]
  401a18:	bl	401390 <free@plt>
  401a1c:	ldr	x0, [sp, #72]
  401a20:	add	x3, sp, #0x50
  401a24:	mov	w2, #0x0                   	// #0
  401a28:	mov	x1, #0x100000              	// #1048576
  401a2c:	str	xzr, [sp, #80]
  401a30:	bl	4011c0 <read_line_full@plt>
  401a34:	mov	w19, w0
  401a38:	cmp	w0, #0x0
  401a3c:	b.lt	401ac4 <apply_file+0x134>  // b.tstop
  401a40:	ldr	x0, [sp, #80]
  401a44:	b.eq	401aec <apply_file+0x15c>  // b.none
  401a48:	bl	401380 <strstrip@plt>
  401a4c:	mov	x19, x0
  401a50:	cbz	x0, 401a14 <apply_file+0x84>
  401a54:	ldrb	w1, [x0]
  401a58:	cbz	w1, 401a14 <apply_file+0x84>
  401a5c:	mov	x0, x24
  401a60:	bl	401350 <strchr@plt>
  401a64:	cbnz	x0, 401a14 <apply_file+0x84>
  401a68:	mov	x1, x19
  401a6c:	mov	x0, x23
  401a70:	mov	w2, #0x1                   	// #1
  401a74:	bl	4012d0 <module_load_and_warn@plt>
  401a78:	cmn	w0, #0x2
  401a7c:	b.eq	401a14 <apply_file+0x84>  // b.none
  401a80:	cmp	w0, #0x0
  401a84:	ccmp	w20, #0x0, #0x1, lt  // lt = tstop
  401a88:	csel	w20, w20, w0, lt  // lt = tstop
  401a8c:	ldr	x0, [sp, #80]
  401a90:	bl	401390 <free@plt>
  401a94:	b	401a1c <apply_file+0x8c>
  401a98:	cmp	w19, #0x0
  401a9c:	ccmn	w0, #0x2, #0x0, ne  // ne = any
  401aa0:	b.eq	401b20 <apply_file+0x190>  // b.none
  401aa4:	mov	w0, #0x0                   	// #0
  401aa8:	bl	4013f0 <log_get_max_level_realm@plt>
  401aac:	cmp	w0, #0x2
  401ab0:	b.gt	401bd4 <apply_file+0x244>
  401ab4:	neg	w19, w20
  401ab8:	and	w19, w19, #0xff
  401abc:	neg	w20, w19
  401ac0:	b	401af0 <apply_file+0x160>
  401ac4:	mov	w0, #0x0                   	// #0
  401ac8:	bl	4013f0 <log_get_max_level_realm@plt>
  401acc:	cmp	w0, #0x2
  401ad0:	b.gt	401b28 <apply_file+0x198>
  401ad4:	neg	w19, w19
  401ad8:	and	w19, w19, #0xff
  401adc:	neg	w20, w19
  401ae0:	ldr	x0, [sp, #80]
  401ae4:	bl	401390 <free@plt>
  401ae8:	b	401af0 <apply_file+0x160>
  401aec:	bl	401390 <free@plt>
  401af0:	ldr	x0, [sp, #72]
  401af4:	bl	4011b0 <safe_fclose@plt>
  401af8:	ldr	x1, [sp, #88]
  401afc:	ldr	x0, [x22]
  401b00:	eor	x0, x1, x0
  401b04:	cbnz	x0, 401c08 <apply_file+0x278>
  401b08:	mov	w0, w20
  401b0c:	ldp	x19, x20, [sp, #16]
  401b10:	ldp	x21, x22, [sp, #32]
  401b14:	ldp	x23, x24, [sp, #48]
  401b18:	ldp	x29, x30, [sp], #96
  401b1c:	ret
  401b20:	mov	w20, #0x0                   	// #0
  401b24:	b	401af0 <apply_file+0x160>
  401b28:	mov	x6, x21
  401b2c:	mov	w1, w19
  401b30:	adrp	x5, 401000 <_init-0x170>
  401b34:	adrp	x4, 402000 <_fini+0x254>
  401b38:	add	x5, x5, #0xe38
  401b3c:	add	x4, x4, #0xe8
  401b40:	adrp	x2, 401000 <_init-0x170>
  401b44:	mov	w3, #0x56                  	// #86
  401b48:	add	x2, x2, #0xdd3
  401b4c:	mov	w0, #0x3                   	// #3
  401b50:	bl	401340 <log_internal_realm@plt>
  401b54:	mov	w20, w0
  401b58:	b	401ae0 <apply_file+0x150>
  401b5c:	mov	x6, x21
  401b60:	adrp	x5, 401000 <_init-0x170>
  401b64:	adrp	x4, 402000 <_fini+0x254>
  401b68:	add	x5, x5, #0xe28
  401b6c:	add	x4, x4, #0xe8
  401b70:	adrp	x2, 401000 <_init-0x170>
  401b74:	mov	w3, #0x4e                  	// #78
  401b78:	add	x2, x2, #0xdd3
  401b7c:	mov	w1, #0x0                   	// #0
  401b80:	mov	w0, #0x7                   	// #7
  401b84:	bl	401340 <log_internal_realm@plt>
  401b88:	b	401a08 <apply_file+0x78>
  401b8c:	adrp	x4, 402000 <_fini+0x254>
  401b90:	adrp	x1, 401000 <_init-0x170>
  401b94:	adrp	x2, 401000 <_init-0x170>
  401b98:	add	x4, x4, #0xb8
  401b9c:	add	x1, x1, #0xdf8
  401ba0:	add	x2, x2, #0xdd3
  401ba4:	mov	w3, #0x43                  	// #67
  401ba8:	mov	w0, #0x0                   	// #0
  401bac:	bl	401260 <log_assert_failed_realm@plt>
  401bb0:	adrp	x4, 402000 <_fini+0x254>
  401bb4:	adrp	x1, 401000 <_init-0x170>
  401bb8:	adrp	x2, 401000 <_init-0x170>
  401bbc:	add	x4, x4, #0xb8
  401bc0:	add	x1, x1, #0xe00
  401bc4:	add	x2, x2, #0xdd3
  401bc8:	mov	w3, #0x44                  	// #68
  401bcc:	mov	w0, #0x0                   	// #0
  401bd0:	bl	401260 <log_assert_failed_realm@plt>
  401bd4:	mov	w1, w20
  401bd8:	mov	x6, x21
  401bdc:	adrp	x5, 401000 <_init-0x170>
  401be0:	adrp	x4, 402000 <_fini+0x254>
  401be4:	add	x5, x5, #0xe10
  401be8:	add	x4, x4, #0xe8
  401bec:	adrp	x2, 401000 <_init-0x170>
  401bf0:	mov	w3, #0x4b                  	// #75
  401bf4:	add	x2, x2, #0xdd3
  401bf8:	mov	w0, #0x3                   	// #3
  401bfc:	bl	401340 <log_internal_realm@plt>
  401c00:	mov	w20, w0
  401c04:	b	401af0 <apply_file+0x160>
  401c08:	bl	4012f0 <__stack_chk_fail@plt>
  401c0c:	nop

0000000000401c10 <parse_proc_cmdline_item>:
  401c10:	stp	x29, x30, [sp, #-32]!
  401c14:	mov	x29, sp
  401c18:	stp	x19, x20, [sp, #16]
  401c1c:	mov	x19, x1
  401c20:	mov	x20, x0
  401c24:	adrp	x1, 401000 <_init-0x170>
  401c28:	add	x1, x1, #0xe60
  401c2c:	bl	401220 <proc_cmdline_key_streq@plt>
  401c30:	tst	w0, #0xff
  401c34:	b.ne	401c4c <parse_proc_cmdline_item+0x3c>  // b.any
  401c38:	mov	w19, #0x0                   	// #0
  401c3c:	mov	w0, w19
  401c40:	ldp	x19, x20, [sp, #16]
  401c44:	ldp	x29, x30, [sp], #32
  401c48:	ret
  401c4c:	cbz	x19, 401c94 <parse_proc_cmdline_item+0x84>
  401c50:	mov	x0, x19
  401c54:	adrp	x1, 401000 <_init-0x170>
  401c58:	mov	w2, #0x0                   	// #0
  401c5c:	add	x1, x1, #0xe70
  401c60:	bl	401210 <strv_split_full@plt>
  401c64:	mov	x20, x0
  401c68:	cbz	x0, 401d00 <parse_proc_cmdline_item+0xf0>
  401c6c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401c70:	mov	x1, x20
  401c74:	add	x0, x0, #0x20
  401c78:	mov	w2, #0x1                   	// #1
  401c7c:	mov	w19, #0x0                   	// #0
  401c80:	bl	4011e0 <strv_extend_strv@plt>
  401c84:	tbnz	w0, #31, 401cd8 <parse_proc_cmdline_item+0xc8>
  401c88:	mov	x0, x20
  401c8c:	bl	4012c0 <strv_free@plt>
  401c90:	b	401c3c <parse_proc_cmdline_item+0x2c>
  401c94:	mov	w0, #0x0                   	// #0
  401c98:	mov	w19, #0x0                   	// #0
  401c9c:	bl	4013f0 <log_get_max_level_realm@plt>
  401ca0:	cmp	w0, #0x3
  401ca4:	b.le	401c3c <parse_proc_cmdline_item+0x2c>
  401ca8:	mov	x6, x20
  401cac:	adrp	x5, 401000 <_init-0x170>
  401cb0:	adrp	x4, 402000 <_fini+0x254>
  401cb4:	add	x5, x5, #0xe78
  401cb8:	add	x4, x4, #0x108
  401cbc:	adrp	x2, 401000 <_init-0x170>
  401cc0:	mov	w3, #0x21                  	// #33
  401cc4:	add	x2, x2, #0xebb
  401cc8:	mov	w1, #0x0                   	// #0
  401ccc:	mov	w0, #0x4                   	// #4
  401cd0:	bl	401340 <log_internal_realm@plt>
  401cd4:	b	401c3c <parse_proc_cmdline_item+0x2c>
  401cd8:	adrp	x3, 402000 <_fini+0x254>
  401cdc:	adrp	x1, 401000 <_init-0x170>
  401ce0:	add	x3, x3, #0xd8
  401ce4:	add	x1, x1, #0xdd3
  401ce8:	mov	w2, #0x2a                  	// #42
  401cec:	mov	w0, #0x0                   	// #0
  401cf0:	bl	4013e0 <log_oom_internal@plt>
  401cf4:	cmp	w0, #0x0
  401cf8:	csel	w19, w0, wzr, le
  401cfc:	b	401c88 <parse_proc_cmdline_item+0x78>
  401d00:	adrp	x3, 402000 <_fini+0x254>
  401d04:	adrp	x1, 401000 <_init-0x170>
  401d08:	add	x3, x3, #0xd8
  401d0c:	add	x1, x1, #0xdd3
  401d10:	mov	w2, #0x27                  	// #39
  401d14:	mov	w0, #0x0                   	// #0
  401d18:	bl	4013e0 <log_oom_internal@plt>
  401d1c:	cmp	w0, #0x0
  401d20:	csel	w19, w0, wzr, le
  401d24:	b	401c3c <parse_proc_cmdline_item+0x2c>

0000000000401d28 <__libc_csu_init>:
  401d28:	stp	x29, x30, [sp, #-64]!
  401d2c:	mov	x29, sp
  401d30:	stp	x19, x20, [sp, #16]
  401d34:	adrp	x20, 412000 <__FRAME_END__+0xfbf0>
  401d38:	add	x20, x20, #0xc60
  401d3c:	stp	x21, x22, [sp, #32]
  401d40:	adrp	x21, 412000 <__FRAME_END__+0xfbf0>
  401d44:	add	x21, x21, #0xc58
  401d48:	sub	x20, x20, x21
  401d4c:	mov	w22, w0
  401d50:	stp	x23, x24, [sp, #48]
  401d54:	mov	x23, x1
  401d58:	mov	x24, x2
  401d5c:	bl	401170 <_init>
  401d60:	cmp	xzr, x20, asr #3
  401d64:	b.eq	401d90 <__libc_csu_init+0x68>  // b.none
  401d68:	asr	x20, x20, #3
  401d6c:	mov	x19, #0x0                   	// #0
  401d70:	ldr	x3, [x21, x19, lsl #3]
  401d74:	mov	x2, x24
  401d78:	add	x19, x19, #0x1
  401d7c:	mov	x1, x23
  401d80:	mov	w0, w22
  401d84:	blr	x3
  401d88:	cmp	x20, x19
  401d8c:	b.ne	401d70 <__libc_csu_init+0x48>  // b.any
  401d90:	ldp	x19, x20, [sp, #16]
  401d94:	ldp	x21, x22, [sp, #32]
  401d98:	ldp	x23, x24, [sp, #48]
  401d9c:	ldp	x29, x30, [sp], #64
  401da0:	ret
  401da4:	nop

0000000000401da8 <__libc_csu_fini>:
  401da8:	ret

Disassembly of section .fini:

0000000000401dac <_fini>:
  401dac:	stp	x29, x30, [sp, #-16]!
  401db0:	mov	x29, sp
  401db4:	ldp	x29, x30, [sp], #16
  401db8:	ret
