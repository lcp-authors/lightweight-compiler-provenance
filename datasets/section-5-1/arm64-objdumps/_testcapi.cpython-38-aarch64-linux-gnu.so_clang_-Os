
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_testcapi.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000008218 <.init>:
    8218:	stp	x29, x30, [sp, #-16]!
    821c:	mov	x29, sp
    8220:	bl	90b0 <PyObject_Calloc@plt+0x10>
    8224:	ldp	x29, x30, [sp], #16
    8228:	ret

Disassembly of section .plt:

0000000000008230 <memcpy@plt-0x20>:
    8230:	stp	x16, x30, [sp, #-16]!
    8234:	adrp	x16, 26000 <PyInit__testcapi@@Base+0x1ce44>
    8238:	ldr	x17, [x16, #4088]
    823c:	add	x16, x16, #0xff8
    8240:	br	x17
    8244:	nop
    8248:	nop
    824c:	nop

0000000000008250 <memcpy@plt>:
    8250:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8254:	ldr	x17, [x16]
    8258:	add	x16, x16, #0x0
    825c:	br	x17

0000000000008260 <PyUnicode_FromFormat@plt>:
    8260:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8264:	ldr	x17, [x16, #8]
    8268:	add	x16, x16, #0x8
    826c:	br	x17

0000000000008270 <PyNumber_Negative@plt>:
    8270:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8274:	ldr	x17, [x16, #16]
    8278:	add	x16, x16, #0x10
    827c:	br	x17

0000000000008280 <PyMarshal_ReadLastObjectFromFile@plt>:
    8280:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8284:	ldr	x17, [x16, #24]
    8288:	add	x16, x16, #0x18
    828c:	br	x17

0000000000008290 <PyMapping_Items@plt>:
    8290:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8294:	ldr	x17, [x16, #32]
    8298:	add	x16, x16, #0x20
    829c:	br	x17

00000000000082a0 <PyList_New@plt>:
    82a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    82a4:	ldr	x17, [x16, #40]
    82a8:	add	x16, x16, #0x28
    82ac:	br	x17

00000000000082b0 <PyMarshal_ReadLongFromFile@plt>:
    82b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    82b4:	ldr	x17, [x16, #48]
    82b8:	add	x16, x16, #0x30
    82bc:	br	x17

00000000000082c0 <_PyUnicode_Ready@plt>:
    82c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    82c4:	ldr	x17, [x16, #56]
    82c8:	add	x16, x16, #0x38
    82cc:	br	x17

00000000000082d0 <PyUnicode_AsWideChar@plt>:
    82d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    82d4:	ldr	x17, [x16, #64]
    82d8:	add	x16, x16, #0x40
    82dc:	br	x17

00000000000082e0 <PyLong_AsLongLongAndOverflow@plt>:
    82e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    82e4:	ldr	x17, [x16, #72]
    82e8:	add	x16, x16, #0x48
    82ec:	br	x17

00000000000082f0 <PyErr_GetExcInfo@plt>:
    82f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    82f4:	ldr	x17, [x16, #80]
    82f8:	add	x16, x16, #0x50
    82fc:	br	x17

0000000000008300 <strlen@plt>:
    8300:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8304:	ldr	x17, [x16, #88]
    8308:	add	x16, x16, #0x58
    830c:	br	x17

0000000000008310 <PyTraceMalloc_Untrack@plt>:
    8310:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8314:	ldr	x17, [x16, #96]
    8318:	add	x16, x16, #0x60
    831c:	br	x17

0000000000008320 <PyModule_AddIntConstant@plt>:
    8320:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8324:	ldr	x17, [x16, #104]
    8328:	add	x16, x16, #0x68
    832c:	br	x17

0000000000008330 <raise@plt>:
    8330:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8334:	ldr	x17, [x16, #112]
    8338:	add	x16, x16, #0x70
    833c:	br	x17

0000000000008340 <_Py_EncodeLocaleEx@plt>:
    8340:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8344:	ldr	x17, [x16, #120]
    8348:	add	x16, x16, #0x78
    834c:	br	x17

0000000000008350 <PyThread_tss_create@plt>:
    8350:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8354:	ldr	x17, [x16, #128]
    8358:	add	x16, x16, #0x80
    835c:	br	x17

0000000000008360 <PyGILState_Release@plt>:
    8360:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8364:	ldr	x17, [x16, #136]
    8368:	add	x16, x16, #0x88
    836c:	br	x17

0000000000008370 <_PyBytes_Resize@plt>:
    8370:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8374:	ldr	x17, [x16, #144]
    8378:	add	x16, x16, #0x90
    837c:	br	x17

0000000000008380 <PyErr_Restore@plt>:
    8380:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8384:	ldr	x17, [x16, #152]
    8388:	add	x16, x16, #0x98
    838c:	br	x17

0000000000008390 <PyNumber_Lshift@plt>:
    8390:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8394:	ldr	x17, [x16, #160]
    8398:	add	x16, x16, #0xa0
    839c:	br	x17

00000000000083a0 <PyThread_tss_free@plt>:
    83a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    83a4:	ldr	x17, [x16, #168]
    83a8:	add	x16, x16, #0xa8
    83ac:	br	x17

00000000000083b0 <PyEval_RestoreThread@plt>:
    83b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    83b4:	ldr	x17, [x16, #176]
    83b8:	add	x16, x16, #0xb0
    83bc:	br	x17

00000000000083c0 <_Py_GetErrorHandler@plt>:
    83c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    83c4:	ldr	x17, [x16, #184]
    83c8:	add	x16, x16, #0xb8
    83cc:	br	x17

00000000000083d0 <PyMem_Free@plt>:
    83d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    83d4:	ldr	x17, [x16, #192]
    83d8:	add	x16, x16, #0xc0
    83dc:	br	x17

00000000000083e0 <_PyObject_IsFreed@plt>:
    83e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    83e4:	ldr	x17, [x16, #200]
    83e8:	add	x16, x16, #0xc8
    83ec:	br	x17

00000000000083f0 <PyCapsule_SetName@plt>:
    83f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    83f4:	ldr	x17, [x16, #208]
    83f8:	add	x16, x16, #0xd0
    83fc:	br	x17

0000000000008400 <PyUnicode_FromWideChar@plt>:
    8400:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8404:	ldr	x17, [x16, #216]
    8408:	add	x16, x16, #0xd8
    840c:	br	x17

0000000000008410 <PyErr_SetFromErrno@plt>:
    8410:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8414:	ldr	x17, [x16, #224]
    8418:	add	x16, x16, #0xe0
    841c:	br	x17

0000000000008420 <_PyTime_ObjectToTimeval@plt>:
    8420:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8424:	ldr	x17, [x16, #232]
    8428:	add	x16, x16, #0xe8
    842c:	br	x17

0000000000008430 <PyCFunction_NewEx@plt>:
    8430:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8434:	ldr	x17, [x16, #240]
    8438:	add	x16, x16, #0xf0
    843c:	br	x17

0000000000008440 <PyCapsule_GetName@plt>:
    8440:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8444:	ldr	x17, [x16, #248]
    8448:	add	x16, x16, #0xf8
    844c:	br	x17

0000000000008450 <PyLong_FromUnsignedLongLong@plt>:
    8450:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8454:	ldr	x17, [x16, #256]
    8458:	add	x16, x16, #0x100
    845c:	br	x17

0000000000008460 <PyThread_start_new_thread@plt>:
    8460:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8464:	ldr	x17, [x16, #264]
    8468:	add	x16, x16, #0x108
    846c:	br	x17

0000000000008470 <PyBuffer_Release@plt>:
    8470:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8474:	ldr	x17, [x16, #272]
    8478:	add	x16, x16, #0x110
    847c:	br	x17

0000000000008480 <PyLong_AsUnsignedLongLong@plt>:
    8480:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8484:	ldr	x17, [x16, #280]
    8488:	add	x16, x16, #0x118
    848c:	br	x17

0000000000008490 <PyNumber_Add@plt>:
    8490:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8494:	ldr	x17, [x16, #288]
    8498:	add	x16, x16, #0x120
    849c:	br	x17

00000000000084a0 <PyObject_GetAttrString@plt>:
    84a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    84a4:	ldr	x17, [x16, #296]
    84a8:	add	x16, x16, #0x128
    84ac:	br	x17

00000000000084b0 <ftell@plt>:
    84b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    84b4:	ldr	x17, [x16, #304]
    84b8:	add	x16, x16, #0x130
    84bc:	br	x17

00000000000084c0 <__cxa_finalize@plt>:
    84c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    84c4:	ldr	x17, [x16, #312]
    84c8:	add	x16, x16, #0x138
    84cc:	br	x17

00000000000084d0 <PyMem_RawMalloc@plt>:
    84d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    84d4:	ldr	x17, [x16, #320]
    84d8:	add	x16, x16, #0x140
    84dc:	br	x17

00000000000084e0 <sprintf@plt>:
    84e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    84e4:	ldr	x17, [x16, #328]
    84e8:	add	x16, x16, #0x148
    84ec:	br	x17

00000000000084f0 <PyLong_AsUnsignedLongLongMask@plt>:
    84f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    84f4:	ldr	x17, [x16, #336]
    84f8:	add	x16, x16, #0x150
    84fc:	br	x17

0000000000008500 <PyBytes_FromStringAndSize@plt>:
    8500:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8504:	ldr	x17, [x16, #344]
    8508:	add	x16, x16, #0x158
    850c:	br	x17

0000000000008510 <PyObject_SetAttrString@plt>:
    8510:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8514:	ldr	x17, [x16, #352]
    8518:	add	x16, x16, #0x160
    851c:	br	x17

0000000000008520 <PyThread_tss_is_created@plt>:
    8520:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8524:	ldr	x17, [x16, #360]
    8528:	add	x16, x16, #0x168
    852c:	br	x17

0000000000008530 <PyMapping_Keys@plt>:
    8530:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8534:	ldr	x17, [x16, #368]
    8538:	add	x16, x16, #0x170
    853c:	br	x17

0000000000008540 <Py_EndInterpreter@plt>:
    8540:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8544:	ldr	x17, [x16, #376]
    8548:	add	x16, x16, #0x178
    854c:	br	x17

0000000000008550 <PyThread_exit_thread@plt>:
    8550:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8554:	ldr	x17, [x16, #384]
    8558:	add	x16, x16, #0x180
    855c:	br	x17

0000000000008560 <_Py_Dealloc@plt>:
    8560:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8564:	ldr	x17, [x16, #392]
    8568:	add	x16, x16, #0x188
    856c:	br	x17

0000000000008570 <PyErr_NoMemory@plt>:
    8570:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8574:	ldr	x17, [x16, #400]
    8578:	add	x16, x16, #0x190
    857c:	br	x17

0000000000008580 <PyErr_SetObject@plt>:
    8580:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8584:	ldr	x17, [x16, #408]
    8588:	add	x16, x16, #0x198
    858c:	br	x17

0000000000008590 <PyObject_GC_Del@plt>:
    8590:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8594:	ldr	x17, [x16, #416]
    8598:	add	x16, x16, #0x1a0
    859c:	br	x17

00000000000085a0 <PyType_GetSlot@plt>:
    85a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    85a4:	ldr	x17, [x16, #424]
    85a8:	add	x16, x16, #0x1a8
    85ac:	br	x17

00000000000085b0 <_PyLong_Sign@plt>:
    85b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    85b4:	ldr	x17, [x16, #432]
    85b8:	add	x16, x16, #0x1b0
    85bc:	br	x17

00000000000085c0 <PyMarshal_WriteLongToFile@plt>:
    85c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    85c4:	ldr	x17, [x16, #440]
    85c8:	add	x16, x16, #0x1b8
    85cc:	br	x17

00000000000085d0 <PyErr_NewExceptionWithDoc@plt>:
    85d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    85d4:	ldr	x17, [x16, #448]
    85d8:	add	x16, x16, #0x1c0
    85dc:	br	x17

00000000000085e0 <PyThread_acquire_lock@plt>:
    85e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    85e4:	ldr	x17, [x16, #456]
    85e8:	add	x16, x16, #0x1c8
    85ec:	br	x17

00000000000085f0 <_PyLong_NumBits@plt>:
    85f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    85f4:	ldr	x17, [x16, #464]
    85f8:	add	x16, x16, #0x1d0
    85fc:	br	x17

0000000000008600 <PyObject_Str@plt>:
    8600:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8604:	ldr	x17, [x16, #472]
    8608:	add	x16, x16, #0x1d8
    860c:	br	x17

0000000000008610 <PyUnicode_FSConverter@plt>:
    8610:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8614:	ldr	x17, [x16, #480]
    8618:	add	x16, x16, #0x1e0
    861c:	br	x17

0000000000008620 <_PyGen_Send@plt>:
    8620:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8624:	ldr	x17, [x16, #488]
    8628:	add	x16, x16, #0x1e8
    862c:	br	x17

0000000000008630 <PyUnicode_CopyCharacters@plt>:
    8630:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8634:	ldr	x17, [x16, #496]
    8638:	add	x16, x16, #0x1f0
    863c:	br	x17

0000000000008640 <fclose@plt>:
    8640:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8644:	ldr	x17, [x16, #504]
    8648:	add	x16, x16, #0x1f8
    864c:	br	x17

0000000000008650 <_PyErr_SetKeyError@plt>:
    8650:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8654:	ldr	x17, [x16, #512]
    8658:	add	x16, x16, #0x200
    865c:	br	x17

0000000000008660 <malloc@plt>:
    8660:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8664:	ldr	x17, [x16, #520]
    8668:	add	x16, x16, #0x208
    866c:	br	x17

0000000000008670 <PyErr_SetString@plt>:
    8670:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8674:	ldr	x17, [x16, #528]
    8678:	add	x16, x16, #0x210
    867c:	br	x17

0000000000008680 <_PyObject_FastCallDict@plt>:
    8680:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8684:	ldr	x17, [x16, #536]
    8688:	add	x16, x16, #0x218
    868c:	br	x17

0000000000008690 <_PyTime_AsSecondsDouble@plt>:
    8690:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8694:	ldr	x17, [x16, #544]
    8698:	add	x16, x16, #0x220
    869c:	br	x17

00000000000086a0 <PyMethod_New@plt>:
    86a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    86a4:	ldr	x17, [x16, #552]
    86a8:	add	x16, x16, #0x228
    86ac:	br	x17

00000000000086b0 <PyException_GetTraceback@plt>:
    86b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    86b4:	ldr	x17, [x16, #560]
    86b8:	add	x16, x16, #0x230
    86bc:	br	x17

00000000000086c0 <PyObject_Malloc@plt>:
    86c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    86c4:	ldr	x17, [x16, #568]
    86c8:	add	x16, x16, #0x238
    86cc:	br	x17

00000000000086d0 <_PyTime_AsNanosecondsObject@plt>:
    86d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    86d4:	ldr	x17, [x16, #576]
    86d8:	add	x16, x16, #0x240
    86dc:	br	x17

00000000000086e0 <PyGILState_Ensure@plt>:
    86e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    86e4:	ldr	x17, [x16, #584]
    86e8:	add	x16, x16, #0x248
    86ec:	br	x17

00000000000086f0 <_PyObject_LookupSpecial@plt>:
    86f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    86f4:	ldr	x17, [x16, #592]
    86f8:	add	x16, x16, #0x250
    86fc:	br	x17

0000000000008700 <PyMem_SetAllocator@plt>:
    8700:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8704:	ldr	x17, [x16, #600]
    8708:	add	x16, x16, #0x258
    870c:	br	x17

0000000000008710 <_PyArg_UnpackStack@plt>:
    8710:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8714:	ldr	x17, [x16, #608]
    8718:	add	x16, x16, #0x260
    871c:	br	x17

0000000000008720 <PyErr_Print@plt>:
    8720:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8724:	ldr	x17, [x16, #616]
    8728:	add	x16, x16, #0x268
    872c:	br	x17

0000000000008730 <PyTraceMalloc_Track@plt>:
    8730:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8734:	ldr	x17, [x16, #624]
    8738:	add	x16, x16, #0x270
    873c:	br	x17

0000000000008740 <PyMem_Realloc@plt>:
    8740:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8744:	ldr	x17, [x16, #632]
    8748:	add	x16, x16, #0x278
    874c:	br	x17

0000000000008750 <PyErr_SetNone@plt>:
    8750:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8754:	ldr	x17, [x16, #640]
    8758:	add	x16, x16, #0x280
    875c:	br	x17

0000000000008760 <PyErr_ExceptionMatches@plt>:
    8760:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8764:	ldr	x17, [x16, #648]
    8768:	add	x16, x16, #0x288
    876c:	br	x17

0000000000008770 <memset@plt>:
    8770:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8774:	ldr	x17, [x16, #656]
    8778:	add	x16, x16, #0x290
    877c:	br	x17

0000000000008780 <gettimeofday@plt>:
    8780:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8784:	ldr	x17, [x16, #664]
    8788:	add	x16, x16, #0x298
    878c:	br	x17

0000000000008790 <Py_NewInterpreter@plt>:
    8790:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8794:	ldr	x17, [x16, #672]
    8798:	add	x16, x16, #0x2a0
    879c:	br	x17

00000000000087a0 <_Py_DecodeLocaleEx@plt>:
    87a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    87a4:	ldr	x17, [x16, #680]
    87a8:	add	x16, x16, #0x2a8
    87ac:	br	x17

00000000000087b0 <_PyTime_FromSecondsObject@plt>:
    87b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    87b4:	ldr	x17, [x16, #688]
    87b8:	add	x16, x16, #0x2b0
    87bc:	br	x17

00000000000087c0 <PyObject_Free@plt>:
    87c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    87c4:	ldr	x17, [x16, #696]
    87c8:	add	x16, x16, #0x2b8
    87cc:	br	x17

00000000000087d0 <_PyTime_AsMilliseconds@plt>:
    87d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    87d4:	ldr	x17, [x16, #704]
    87d8:	add	x16, x16, #0x2c0
    87dc:	br	x17

00000000000087e0 <PyLong_AsVoidPtr@plt>:
    87e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    87e4:	ldr	x17, [x16, #712]
    87e8:	add	x16, x16, #0x2c8
    87ec:	br	x17

00000000000087f0 <PyLong_FromSsize_t@plt>:
    87f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    87f4:	ldr	x17, [x16, #720]
    87f8:	add	x16, x16, #0x2d0
    87fc:	br	x17

0000000000008800 <PyFloat_FromDouble@plt>:
    8800:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8804:	ldr	x17, [x16, #728]
    8808:	add	x16, x16, #0x2d8
    880c:	br	x17

0000000000008810 <_PyArg_Parse_SizeT@plt>:
    8810:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8814:	ldr	x17, [x16, #736]
    8818:	add	x16, x16, #0x2e0
    881c:	br	x17

0000000000008820 <PyCapsule_Import@plt>:
    8820:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8824:	ldr	x17, [x16, #744]
    8828:	add	x16, x16, #0x2e8
    882c:	br	x17

0000000000008830 <PyType_Ready@plt>:
    8830:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8834:	ldr	x17, [x16, #752]
    8838:	add	x16, x16, #0x2f0
    883c:	br	x17

0000000000008840 <PyLong_FromLong@plt>:
    8840:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8844:	ldr	x17, [x16, #760]
    8848:	add	x16, x16, #0x2f8
    884c:	br	x17

0000000000008850 <PyLong_AsSsize_t@plt>:
    8850:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8854:	ldr	x17, [x16, #768]
    8858:	add	x16, x16, #0x300
    885c:	br	x17

0000000000008860 <PyOS_string_to_double@plt>:
    8860:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8864:	ldr	x17, [x16, #776]
    8868:	add	x16, x16, #0x308
    886c:	br	x17

0000000000008870 <PyBuffer_FillInfo@plt>:
    8870:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8874:	ldr	x17, [x16, #784]
    8878:	add	x16, x16, #0x310
    887c:	br	x17

0000000000008880 <PyLong_FromVoidPtr@plt>:
    8880:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8884:	ldr	x17, [x16, #792]
    8888:	add	x16, x16, #0x318
    888c:	br	x17

0000000000008890 <PyUnicode_FromUnicode@plt>:
    8890:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8894:	ldr	x17, [x16, #800]
    8898:	add	x16, x16, #0x320
    889c:	br	x17

00000000000088a0 <PyErr_NewException@plt>:
    88a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    88a4:	ldr	x17, [x16, #808]
    88a8:	add	x16, x16, #0x328
    88ac:	br	x17

00000000000088b0 <PyCodec_IncrementalDecoder@plt>:
    88b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    88b4:	ldr	x17, [x16, #816]
    88b8:	add	x16, x16, #0x330
    88bc:	br	x17

00000000000088c0 <PyErr_Clear@plt>:
    88c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    88c4:	ldr	x17, [x16, #824]
    88c8:	add	x16, x16, #0x338
    88cc:	br	x17

00000000000088d0 <PyBool_FromLong@plt>:
    88d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    88d4:	ldr	x17, [x16, #832]
    88d8:	add	x16, x16, #0x340
    88dc:	br	x17

00000000000088e0 <Py_AddPendingCall@plt>:
    88e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    88e4:	ldr	x17, [x16, #840]
    88e8:	add	x16, x16, #0x348
    88ec:	br	x17

00000000000088f0 <PyLong_AsUnsignedLongMask@plt>:
    88f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    88f4:	ldr	x17, [x16, #848]
    88f8:	add	x16, x16, #0x350
    88fc:	br	x17

0000000000008900 <__gmon_start__@plt>:
    8900:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8904:	ldr	x17, [x16, #856]
    8908:	add	x16, x16, #0x358
    890c:	br	x17

0000000000008910 <PyUnicode_AsUnicode@plt>:
    8910:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8914:	ldr	x17, [x16, #864]
    8918:	add	x16, x16, #0x360
    891c:	br	x17

0000000000008920 <PyTuple_New@plt>:
    8920:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8924:	ldr	x17, [x16, #872]
    8928:	add	x16, x16, #0x368
    892c:	br	x17

0000000000008930 <PyLong_AsSize_t@plt>:
    8930:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8934:	ldr	x17, [x16, #880]
    8938:	add	x16, x16, #0x370
    893c:	br	x17

0000000000008940 <PyThreadState_Get@plt>:
    8940:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8944:	ldr	x17, [x16, #888]
    8948:	add	x16, x16, #0x378
    894c:	br	x17

0000000000008950 <PyLong_AsLongAndOverflow@plt>:
    8950:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8954:	ldr	x17, [x16, #896]
    8958:	add	x16, x16, #0x380
    895c:	br	x17

0000000000008960 <PyArg_UnpackTuple@plt>:
    8960:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8964:	ldr	x17, [x16, #904]
    8968:	add	x16, x16, #0x388
    896c:	br	x17

0000000000008970 <PyBytes_FromString@plt>:
    8970:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8974:	ldr	x17, [x16, #912]
    8978:	add	x16, x16, #0x390
    897c:	br	x17

0000000000008980 <PyErr_Occurred@plt>:
    8980:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8984:	ldr	x17, [x16, #920]
    8988:	add	x16, x16, #0x398
    898c:	br	x17

0000000000008990 <PyModule_Create2@plt>:
    8990:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8994:	ldr	x17, [x16, #928]
    8998:	add	x16, x16, #0x3a0
    899c:	br	x17

00000000000089a0 <PyLong_AsLong@plt>:
    89a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    89a4:	ldr	x17, [x16, #936]
    89a8:	add	x16, x16, #0x3a8
    89ac:	br	x17

00000000000089b0 <PyImport_ImportModule@plt>:
    89b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    89b4:	ldr	x17, [x16, #944]
    89b8:	add	x16, x16, #0x3b0
    89bc:	br	x17

00000000000089c0 <_PyErr_WriteUnraisableMsg@plt>:
    89c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    89c4:	ldr	x17, [x16, #952]
    89c8:	add	x16, x16, #0x3b8
    89cc:	br	x17

00000000000089d0 <_PyDict_GetItem_KnownHash@plt>:
    89d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    89d4:	ldr	x17, [x16, #960]
    89d8:	add	x16, x16, #0x3c0
    89dc:	br	x17

00000000000089e0 <PyObject_CallObject@plt>:
    89e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    89e4:	ldr	x17, [x16, #968]
    89e8:	add	x16, x16, #0x3c8
    89ec:	br	x17

00000000000089f0 <PyState_FindModule@plt>:
    89f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    89f4:	ldr	x17, [x16, #976]
    89f8:	add	x16, x16, #0x3d0
    89fc:	br	x17

0000000000008a00 <PyUnicode_AsUCS4@plt>:
    8a00:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a04:	ldr	x17, [x16, #984]
    8a08:	add	x16, x16, #0x3d8
    8a0c:	br	x17

0000000000008a10 <PyMem_RawFree@plt>:
    8a10:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a14:	ldr	x17, [x16, #992]
    8a18:	add	x16, x16, #0x3e0
    8a1c:	br	x17

0000000000008a20 <PyList_Reverse@plt>:
    8a20:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a24:	ldr	x17, [x16, #1000]
    8a28:	add	x16, x16, #0x3e8
    8a2c:	br	x17

0000000000008a30 <_PyUnicode_EqualToASCIIString@plt>:
    8a30:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a34:	ldr	x17, [x16, #1008]
    8a38:	add	x16, x16, #0x3f0
    8a3c:	br	x17

0000000000008a40 <_PyTime_AsTimespec@plt>:
    8a40:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a44:	ldr	x17, [x16, #1016]
    8a48:	add	x16, x16, #0x3f8
    8a4c:	br	x17

0000000000008a50 <PyCapsule_SetDestructor@plt>:
    8a50:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a54:	ldr	x17, [x16, #1024]
    8a58:	add	x16, x16, #0x400
    8a5c:	br	x17

0000000000008a60 <PyCodec_IncrementalEncoder@plt>:
    8a60:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a64:	ldr	x17, [x16, #1032]
    8a68:	add	x16, x16, #0x408
    8a6c:	br	x17

0000000000008a70 <_PyArg_ParseTuple_SizeT@plt>:
    8a70:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a74:	ldr	x17, [x16, #1040]
    8a78:	add	x16, x16, #0x410
    8a7c:	br	x17

0000000000008a80 <_Py_CheckFunctionResult@plt>:
    8a80:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a84:	ldr	x17, [x16, #1048]
    8a88:	add	x16, x16, #0x418
    8a8c:	br	x17

0000000000008a90 <PyUnicode_CompareWithASCIIString@plt>:
    8a90:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a94:	ldr	x17, [x16, #1056]
    8a98:	add	x16, x16, #0x420
    8a9c:	br	x17

0000000000008aa0 <free@plt>:
    8aa0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8aa4:	ldr	x17, [x16, #1064]
    8aa8:	add	x16, x16, #0x428
    8aac:	br	x17

0000000000008ab0 <Py_FatalError@plt>:
    8ab0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ab4:	ldr	x17, [x16, #1072]
    8ab8:	add	x16, x16, #0x430
    8abc:	br	x17

0000000000008ac0 <PyMarshal_WriteObjectToFile@plt>:
    8ac0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ac4:	ldr	x17, [x16, #1080]
    8ac8:	add	x16, x16, #0x438
    8acc:	br	x17

0000000000008ad0 <PyThread_allocate_lock@plt>:
    8ad0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ad4:	ldr	x17, [x16, #1088]
    8ad8:	add	x16, x16, #0x440
    8adc:	br	x17

0000000000008ae0 <PyObject_Realloc@plt>:
    8ae0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ae4:	ldr	x17, [x16, #1096]
    8ae8:	add	x16, x16, #0x448
    8aec:	br	x17

0000000000008af0 <PyUnicode_EncodeDecimal@plt>:
    8af0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8af4:	ldr	x17, [x16, #1104]
    8af8:	add	x16, x16, #0x450
    8afc:	br	x17

0000000000008b00 <PyObject_Hash@plt>:
    8b00:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b04:	ldr	x17, [x16, #1112]
    8b08:	add	x16, x16, #0x458
    8b0c:	br	x17

0000000000008b10 <_PyTime_ObjectToTimespec@plt>:
    8b10:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b14:	ldr	x17, [x16, #1120]
    8b18:	add	x16, x16, #0x460
    8b1c:	br	x17

0000000000008b20 <_PyTraceMalloc_GetTraceback@plt>:
    8b20:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b24:	ldr	x17, [x16, #1128]
    8b28:	add	x16, x16, #0x468
    8b2c:	br	x17

0000000000008b30 <PyUnicode_Compare@plt>:
    8b30:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b34:	ldr	x17, [x16, #1136]
    8b38:	add	x16, x16, #0x470
    8b3c:	br	x17

0000000000008b40 <Py_IncRef@plt>:
    8b40:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b44:	ldr	x17, [x16, #1144]
    8b48:	add	x16, x16, #0x478
    8b4c:	br	x17

0000000000008b50 <PyCapsule_GetContext@plt>:
    8b50:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b54:	ldr	x17, [x16, #1152]
    8b58:	add	x16, x16, #0x480
    8b5c:	br	x17

0000000000008b60 <PyNumber_Rshift@plt>:
    8b60:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b64:	ldr	x17, [x16, #1160]
    8b68:	add	x16, x16, #0x488
    8b6c:	br	x17

0000000000008b70 <PyMem_GetAllocator@plt>:
    8b70:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b74:	ldr	x17, [x16, #1168]
    8b78:	add	x16, x16, #0x490
    8b7c:	br	x17

0000000000008b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    8b80:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b84:	ldr	x17, [x16, #1176]
    8b88:	add	x16, x16, #0x498
    8b8c:	br	x17

0000000000008b90 <PyThread_release_lock@plt>:
    8b90:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b94:	ldr	x17, [x16, #1184]
    8b98:	add	x16, x16, #0x4a0
    8b9c:	br	x17

0000000000008ba0 <PyThread_tss_alloc@plt>:
    8ba0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ba4:	ldr	x17, [x16, #1192]
    8ba8:	add	x16, x16, #0x4a8
    8bac:	br	x17

0000000000008bb0 <PyVectorcall_Call@plt>:
    8bb0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8bb4:	ldr	x17, [x16, #1200]
    8bb8:	add	x16, x16, #0x4b0
    8bbc:	br	x17

0000000000008bc0 <_PyTime_ObjectToTime_t@plt>:
    8bc0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8bc4:	ldr	x17, [x16, #1208]
    8bc8:	add	x16, x16, #0x4b8
    8bcc:	br	x17

0000000000008bd0 <PyLong_AsDouble@plt>:
    8bd0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8bd4:	ldr	x17, [x16, #1216]
    8bd8:	add	x16, x16, #0x4c0
    8bdc:	br	x17

0000000000008be0 <Py_DecRef@plt>:
    8be0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8be4:	ldr	x17, [x16, #1224]
    8be8:	add	x16, x16, #0x4c8
    8bec:	br	x17

0000000000008bf0 <PyUnicode_FromKindAndData@plt>:
    8bf0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8bf4:	ldr	x17, [x16, #1232]
    8bf8:	add	x16, x16, #0x4d0
    8bfc:	br	x17

0000000000008c00 <PyThread_tss_set@plt>:
    8c00:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c04:	ldr	x17, [x16, #1240]
    8c08:	add	x16, x16, #0x4d8
    8c0c:	br	x17

0000000000008c10 <_PyTraceMalloc_NewReference@plt>:
    8c10:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c14:	ldr	x17, [x16, #1248]
    8c18:	add	x16, x16, #0x4e0
    8c1c:	br	x17

0000000000008c20 <PyDict_New@plt>:
    8c20:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c24:	ldr	x17, [x16, #1256]
    8c28:	add	x16, x16, #0x4e8
    8c2c:	br	x17

0000000000008c30 <PyCallable_Check@plt>:
    8c30:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c34:	ldr	x17, [x16, #1264]
    8c38:	add	x16, x16, #0x4f0
    8c3c:	br	x17

0000000000008c40 <PyObject_GetBuffer@plt>:
    8c40:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c44:	ldr	x17, [x16, #1272]
    8c48:	add	x16, x16, #0x4f8
    8c4c:	br	x17

0000000000008c50 <PyLong_AsUnsignedLong@plt>:
    8c50:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c54:	ldr	x17, [x16, #1280]
    8c58:	add	x16, x16, #0x500
    8c5c:	br	x17

0000000000008c60 <PyDict_Next@plt>:
    8c60:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c64:	ldr	x17, [x16, #1288]
    8c68:	add	x16, x16, #0x508
    8c6c:	br	x17

0000000000008c70 <PyUnicode_AsWideCharString@plt>:
    8c70:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c74:	ldr	x17, [x16, #1296]
    8c78:	add	x16, x16, #0x510
    8c7c:	br	x17

0000000000008c80 <PyLong_FromUnsignedLong@plt>:
    8c80:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c84:	ldr	x17, [x16, #1304]
    8c88:	add	x16, x16, #0x518
    8c8c:	br	x17

0000000000008c90 <PyUnicode_Fill@plt>:
    8c90:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c94:	ldr	x17, [x16, #1312]
    8c98:	add	x16, x16, #0x520
    8c9c:	br	x17

0000000000008ca0 <PyUnicode_AsUTF8@plt>:
    8ca0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ca4:	ldr	x17, [x16, #1320]
    8ca8:	add	x16, x16, #0x528
    8cac:	br	x17

0000000000008cb0 <strcpy@plt>:
    8cb0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8cb4:	ldr	x17, [x16, #1328]
    8cb8:	add	x16, x16, #0x530
    8cbc:	br	x17

0000000000008cc0 <PyBuffer_FromContiguous@plt>:
    8cc0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8cc4:	ldr	x17, [x16, #1336]
    8cc8:	add	x16, x16, #0x538
    8ccc:	br	x17

0000000000008cd0 <fopen64@plt>:
    8cd0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8cd4:	ldr	x17, [x16, #1344]
    8cd8:	add	x16, x16, #0x540
    8cdc:	br	x17

0000000000008ce0 <PyErr_Fetch@plt>:
    8ce0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ce4:	ldr	x17, [x16, #1352]
    8ce8:	add	x16, x16, #0x548
    8cec:	br	x17

0000000000008cf0 <_PyObject_New@plt>:
    8cf0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8cf4:	ldr	x17, [x16, #1360]
    8cf8:	add	x16, x16, #0x550
    8cfc:	br	x17

0000000000008d00 <PyCapsule_SetPointer@plt>:
    8d00:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d04:	ldr	x17, [x16, #1368]
    8d08:	add	x16, x16, #0x558
    8d0c:	br	x17

0000000000008d10 <PyUnicode_FromString@plt>:
    8d10:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d14:	ldr	x17, [x16, #1376]
    8d18:	add	x16, x16, #0x560
    8d1c:	br	x17

0000000000008d20 <PyState_AddModule@plt>:
    8d20:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d24:	ldr	x17, [x16, #1384]
    8d28:	add	x16, x16, #0x568
    8d2c:	br	x17

0000000000008d30 <PyMem_RawCalloc@plt>:
    8d30:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d34:	ldr	x17, [x16, #1392]
    8d38:	add	x16, x16, #0x570
    8d3c:	br	x17

0000000000008d40 <PyMarshal_ReadObjectFromFile@plt>:
    8d40:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d44:	ldr	x17, [x16, #1400]
    8d48:	add	x16, x16, #0x578
    8d4c:	br	x17

0000000000008d50 <PyEval_SaveThread@plt>:
    8d50:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d54:	ldr	x17, [x16, #1408]
    8d58:	add	x16, x16, #0x580
    8d5c:	br	x17

0000000000008d60 <PyModule_AddObject@plt>:
    8d60:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d64:	ldr	x17, [x16, #1416]
    8d68:	add	x16, x16, #0x588
    8d6c:	br	x17

0000000000008d70 <_PyTime_AsMicroseconds@plt>:
    8d70:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d74:	ldr	x17, [x16, #1424]
    8d78:	add	x16, x16, #0x590
    8d7c:	br	x17

0000000000008d80 <PyDict_SetItem@plt>:
    8d80:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d84:	ldr	x17, [x16, #1432]
    8d88:	add	x16, x16, #0x598
    8d8c:	br	x17

0000000000008d90 <PyThread_tss_delete@plt>:
    8d90:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d94:	ldr	x17, [x16, #1440]
    8d98:	add	x16, x16, #0x5a0
    8d9c:	br	x17

0000000000008da0 <_PyContext_NewHamtForTests@plt>:
    8da0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8da4:	ldr	x17, [x16, #1448]
    8da8:	add	x16, x16, #0x5a8
    8dac:	br	x17

0000000000008db0 <PyObject_Repr@plt>:
    8db0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8db4:	ldr	x17, [x16, #1456]
    8db8:	add	x16, x16, #0x5b0
    8dbc:	br	x17

0000000000008dc0 <PyMapping_Values@plt>:
    8dc0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8dc4:	ldr	x17, [x16, #1464]
    8dc8:	add	x16, x16, #0x5b8
    8dcc:	br	x17

0000000000008dd0 <_PyTime_AsTimeval@plt>:
    8dd0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8dd4:	ldr	x17, [x16, #1472]
    8dd8:	add	x16, x16, #0x5c0
    8ddc:	br	x17

0000000000008de0 <_PyMem_GetCurrentAllocatorName@plt>:
    8de0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8de4:	ldr	x17, [x16, #1480]
    8de8:	add	x16, x16, #0x5c8
    8dec:	br	x17

0000000000008df0 <PyLong_AsLongLong@plt>:
    8df0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8df4:	ldr	x17, [x16, #1488]
    8df8:	add	x16, x16, #0x5d0
    8dfc:	br	x17

0000000000008e00 <_PyTime_FromSeconds@plt>:
    8e00:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e04:	ldr	x17, [x16, #1496]
    8e08:	add	x16, x16, #0x5d8
    8e0c:	br	x17

0000000000008e10 <PyCapsule_New@plt>:
    8e10:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e14:	ldr	x17, [x16, #1504]
    8e18:	add	x16, x16, #0x5e0
    8e1c:	br	x17

0000000000008e20 <PyType_IsSubtype@plt>:
    8e20:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e24:	ldr	x17, [x16, #1512]
    8e28:	add	x16, x16, #0x5e8
    8e2c:	br	x17

0000000000008e30 <PyErr_Display@plt>:
    8e30:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e34:	ldr	x17, [x16, #1520]
    8e38:	add	x16, x16, #0x5f0
    8e3c:	br	x17

0000000000008e40 <PyStructSequence_NewType@plt>:
    8e40:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e44:	ldr	x17, [x16, #1528]
    8e48:	add	x16, x16, #0x5f8
    8e4c:	br	x17

0000000000008e50 <PyUnicode_Decode@plt>:
    8e50:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e54:	ldr	x17, [x16, #1536]
    8e58:	add	x16, x16, #0x600
    8e5c:	br	x17

0000000000008e60 <PyErr_Format@plt>:
    8e60:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e64:	ldr	x17, [x16, #1544]
    8e68:	add	x16, x16, #0x608
    8e6c:	br	x17

0000000000008e70 <PyCapsule_GetPointer@plt>:
    8e70:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e74:	ldr	x17, [x16, #1552]
    8e78:	add	x16, x16, #0x610
    8e7c:	br	x17

0000000000008e80 <_PyTime_FromNanosecondsObject@plt>:
    8e80:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e84:	ldr	x17, [x16, #1560]
    8e88:	add	x16, x16, #0x618
    8e8c:	br	x17

0000000000008e90 <PyComplex_FromCComplex@plt>:
    8e90:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e94:	ldr	x17, [x16, #1568]
    8e98:	add	x16, x16, #0x620
    8e9c:	br	x17

0000000000008ea0 <_Py_BuildValue_SizeT@plt>:
    8ea0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ea4:	ldr	x17, [x16, #1576]
    8ea8:	add	x16, x16, #0x628
    8eac:	br	x17

0000000000008eb0 <PyUnicode_FromStringAndSize@plt>:
    8eb0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8eb4:	ldr	x17, [x16, #1584]
    8eb8:	add	x16, x16, #0x630
    8ebc:	br	x17

0000000000008ec0 <PyCapsule_GetDestructor@plt>:
    8ec0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ec4:	ldr	x17, [x16, #1592]
    8ec8:	add	x16, x16, #0x638
    8ecc:	br	x17

0000000000008ed0 <PyRun_SimpleStringFlags@plt>:
    8ed0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ed4:	ldr	x17, [x16, #1600]
    8ed8:	add	x16, x16, #0x640
    8edc:	br	x17

0000000000008ee0 <PyTraceBack_Print@plt>:
    8ee0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ee4:	ldr	x17, [x16, #1608]
    8ee8:	add	x16, x16, #0x648
    8eec:	br	x17

0000000000008ef0 <PyLong_FromLongLong@plt>:
    8ef0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ef4:	ldr	x17, [x16, #1616]
    8ef8:	add	x16, x16, #0x650
    8efc:	br	x17

0000000000008f00 <_PyObject_MakeTpCall@plt>:
    8f00:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f04:	ldr	x17, [x16, #1624]
    8f08:	add	x16, x16, #0x658
    8f0c:	br	x17

0000000000008f10 <PyThread_tss_get@plt>:
    8f10:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f14:	ldr	x17, [x16, #1632]
    8f18:	add	x16, x16, #0x660
    8f1c:	br	x17

0000000000008f20 <PyMem_Calloc@plt>:
    8f20:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f24:	ldr	x17, [x16, #1640]
    8f28:	add	x16, x16, #0x668
    8f2c:	br	x17

0000000000008f30 <printf@plt>:
    8f30:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f34:	ldr	x17, [x16, #1648]
    8f38:	add	x16, x16, #0x670
    8f3c:	br	x17

0000000000008f40 <__errno_location@plt>:
    8f40:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f44:	ldr	x17, [x16, #1656]
    8f48:	add	x16, x16, #0x678
    8f4c:	br	x17

0000000000008f50 <PyType_FromSpecWithBases@plt>:
    8f50:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f54:	ldr	x17, [x16, #1664]
    8f58:	add	x16, x16, #0x680
    8f5c:	br	x17

0000000000008f60 <PyMarshal_ReadShortFromFile@plt>:
    8f60:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f64:	ldr	x17, [x16, #1672]
    8f68:	add	x16, x16, #0x688
    8f6c:	br	x17

0000000000008f70 <PyEval_InitThreads@plt>:
    8f70:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f74:	ldr	x17, [x16, #1680]
    8f78:	add	x16, x16, #0x690
    8f7c:	br	x17

0000000000008f80 <PyCapsule_SetContext@plt>:
    8f80:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f84:	ldr	x17, [x16, #1688]
    8f88:	add	x16, x16, #0x698
    8f8c:	br	x17

0000000000008f90 <PyLong_FromString@plt>:
    8f90:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f94:	ldr	x17, [x16, #1696]
    8f98:	add	x16, x16, #0x6a0
    8f9c:	br	x17

0000000000008fa0 <PyErr_SetExcInfo@plt>:
    8fa0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8fa4:	ldr	x17, [x16, #1704]
    8fa8:	add	x16, x16, #0x6a8
    8fac:	br	x17

0000000000008fb0 <PyUnicode_FindChar@plt>:
    8fb0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8fb4:	ldr	x17, [x16, #1712]
    8fb8:	add	x16, x16, #0x6b0
    8fbc:	br	x17

0000000000008fc0 <PyMem_Malloc@plt>:
    8fc0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8fc4:	ldr	x17, [x16, #1720]
    8fc8:	add	x16, x16, #0x6b8
    8fcc:	br	x17

0000000000008fd0 <PyThreadState_Swap@plt>:
    8fd0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8fd4:	ldr	x17, [x16, #1728]
    8fd8:	add	x16, x16, #0x6c0
    8fdc:	br	x17

0000000000008fe0 <PyNumber_Subtract@plt>:
    8fe0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8fe4:	ldr	x17, [x16, #1736]
    8fe8:	add	x16, x16, #0x6c8
    8fec:	br	x17

0000000000008ff0 <PyType_FromSpec@plt>:
    8ff0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ff4:	ldr	x17, [x16, #1744]
    8ff8:	add	x16, x16, #0x6d0
    8ffc:	br	x17

0000000000009000 <_PyLong_FromTime_t@plt>:
    9000:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9004:	ldr	x17, [x16, #1752]
    9008:	add	x16, x16, #0x6d8
    900c:	br	x17

0000000000009010 <PyUnicode_New@plt>:
    9010:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9014:	ldr	x17, [x16, #1760]
    9018:	add	x16, x16, #0x6e0
    901c:	br	x17

0000000000009020 <PyUnicode_TransformDecimalToASCII@plt>:
    9020:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9024:	ldr	x17, [x16, #1768]
    9028:	add	x16, x16, #0x6e8
    902c:	br	x17

0000000000009030 <PyThread_free_lock@plt>:
    9030:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9034:	ldr	x17, [x16, #1776]
    9038:	add	x16, x16, #0x6f0
    903c:	br	x17

0000000000009040 <PyTuple_Pack@plt>:
    9040:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9044:	ldr	x17, [x16, #1784]
    9048:	add	x16, x16, #0x6f8
    904c:	br	x17

0000000000009050 <PyMemoryView_FromBuffer@plt>:
    9050:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9054:	ldr	x17, [x16, #1792]
    9058:	add	x16, x16, #0x700
    905c:	br	x17

0000000000009060 <PyCode_NewEmpty@plt>:
    9060:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9064:	ldr	x17, [x16, #1800]
    9068:	add	x16, x16, #0x708
    906c:	br	x17

0000000000009070 <PyObject_GC_UnTrack@plt>:
    9070:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9074:	ldr	x17, [x16, #1808]
    9078:	add	x16, x16, #0x710
    907c:	br	x17

0000000000009080 <PyErr_WriteUnraisable@plt>:
    9080:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9084:	ldr	x17, [x16, #1816]
    9088:	add	x16, x16, #0x718
    908c:	br	x17

0000000000009090 <PyMem_RawRealloc@plt>:
    9090:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9094:	ldr	x17, [x16, #1824]
    9098:	add	x16, x16, #0x720
    909c:	br	x17

00000000000090a0 <PyObject_Calloc@plt>:
    90a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    90a4:	ldr	x17, [x16, #1832]
    90a8:	add	x16, x16, #0x728
    90ac:	br	x17

Disassembly of section .text:

00000000000090b0 <MyList_dealloc@@Base-0xd4>:
    90b0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    90b4:	ldr	x0, [x0, #3992]
    90b8:	cbz	x0, 90c0 <PyObject_Calloc@plt+0x20>
    90bc:	b	8900 <__gmon_start__@plt>
    90c0:	ret
    90c4:	nop
    90c8:	adrp	x0, 2a000 <PyInit__testcapi@@Base+0x20e44>
    90cc:	add	x0, x0, #0xdb8
    90d0:	adrp	x1, 2a000 <PyInit__testcapi@@Base+0x20e44>
    90d4:	add	x1, x1, #0xdb8
    90d8:	cmp	x1, x0
    90dc:	b.eq	90f4 <PyObject_Calloc@plt+0x54>  // b.none
    90e0:	adrp	x1, 26000 <PyInit__testcapi@@Base+0x1ce44>
    90e4:	ldr	x1, [x1, #3856]
    90e8:	cbz	x1, 90f4 <PyObject_Calloc@plt+0x54>
    90ec:	mov	x16, x1
    90f0:	br	x16
    90f4:	ret
    90f8:	adrp	x0, 2a000 <PyInit__testcapi@@Base+0x20e44>
    90fc:	add	x0, x0, #0xdb8
    9100:	adrp	x1, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9104:	add	x1, x1, #0xdb8
    9108:	sub	x1, x1, x0
    910c:	lsr	x2, x1, #63
    9110:	add	x1, x2, x1, asr #3
    9114:	cmp	xzr, x1, asr #1
    9118:	asr	x1, x1, #1
    911c:	b.eq	9134 <PyObject_Calloc@plt+0x94>  // b.none
    9120:	adrp	x2, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9124:	ldr	x2, [x2, #4056]
    9128:	cbz	x2, 9134 <PyObject_Calloc@plt+0x94>
    912c:	mov	x16, x2
    9130:	br	x16
    9134:	ret
    9138:	stp	x29, x30, [sp, #-32]!
    913c:	mov	x29, sp
    9140:	str	x19, [sp, #16]
    9144:	adrp	x19, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9148:	ldrb	w0, [x19, #3512]
    914c:	cbnz	w0, 9174 <PyObject_Calloc@plt+0xd4>
    9150:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9154:	ldr	x0, [x0, #3888]
    9158:	cbz	x0, 9168 <PyObject_Calloc@plt+0xc8>
    915c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9160:	ldr	x0, [x0, #1840]
    9164:	bl	84c0 <__cxa_finalize@plt>
    9168:	bl	90c8 <PyObject_Calloc@plt+0x28>
    916c:	mov	w0, #0x1                   	// #1
    9170:	strb	w0, [x19, #3512]
    9174:	ldr	x19, [sp, #16]
    9178:	ldp	x29, x30, [sp], #32
    917c:	ret
    9180:	b	90f8 <PyObject_Calloc@plt+0x58>

0000000000009184 <MyList_dealloc@@Base>:
    9184:	stp	x29, x30, [sp, #-16]!
    9188:	mov	x29, sp
    918c:	ldr	w8, [x0, #40]
    9190:	cbnz	w8, 91b0 <MyList_dealloc@@Base+0x2c>
    9194:	mov	w8, #0x1                   	// #1
    9198:	str	w8, [x0, #40]
    919c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    91a0:	ldr	x8, [x8, #4064]
    91a4:	ldr	x1, [x8, #48]
    91a8:	ldp	x29, x30, [sp], #16
    91ac:	br	x1
    91b0:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e44>
    91b4:	add	x0, x0, #0x3fe
    91b8:	bl	8ab0 <Py_FatalError@plt>

00000000000091bc <PyInit__testcapi@@Base>:
    91bc:	stp	x29, x30, [sp, #-48]!
    91c0:	str	x21, [sp, #16]
    91c4:	stp	x20, x19, [sp, #32]
    91c8:	mov	x29, sp
    91cc:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    91d0:	add	x0, x0, #0x738
    91d4:	mov	w1, #0x3f5                 	// #1013
    91d8:	bl	8990 <PyModule_Create2@plt>
    91dc:	mov	x19, x0
    91e0:	cbz	x0, 98a8 <PyInit__testcapi@@Base+0x6ec>
    91e4:	adrp	x2, 27000 <PyInit__testcapi@@Base+0x1de44>
    91e8:	add	x2, x2, #0x940
    91ec:	adrp	x10, 26000 <PyInit__testcapi@@Base+0x1ce44>
    91f0:	ldr	x9, [x2]
    91f4:	ldr	x10, [x10, #4008]
    91f8:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    91fc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9200:	add	x1, x1, #0x420
    9204:	str	x10, [x8, #1960]
    9208:	add	x8, x9, #0x1
    920c:	mov	x0, x19
    9210:	stp	x8, x10, [x2]
    9214:	bl	8d60 <PyModule_AddObject@plt>
    9218:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de44>
    921c:	add	x20, x20, #0xae0
    9220:	mov	x0, x20
    9224:	bl	8830 <PyType_Ready@plt>
    9228:	tbnz	w0, #31, 98a4 <PyInit__testcapi@@Base+0x6e8>
    922c:	ldr	x8, [x20]
    9230:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9234:	add	x1, x1, #0x438
    9238:	mov	x0, x19
    923c:	add	x8, x8, #0x1
    9240:	mov	x2, x20
    9244:	str	x8, [x20]
    9248:	bl	8d60 <PyModule_AddObject@plt>
    924c:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de44>
    9250:	add	x20, x20, #0xc80
    9254:	mov	x0, x20
    9258:	bl	8830 <PyType_Ready@plt>
    925c:	tbnz	w0, #31, 98a4 <PyInit__testcapi@@Base+0x6e8>
    9260:	ldr	x8, [x20]
    9264:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9268:	add	x1, x1, #0x443
    926c:	mov	x0, x19
    9270:	add	x8, x8, #0x1
    9274:	mov	x2, x20
    9278:	str	x8, [x20]
    927c:	bl	8d60 <PyModule_AddObject@plt>
    9280:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de44>
    9284:	add	x20, x20, #0xe20
    9288:	mov	x0, x20
    928c:	bl	8830 <PyType_Ready@plt>
    9290:	tbnz	w0, #31, 98a4 <PyInit__testcapi@@Base+0x6e8>
    9294:	ldr	x8, [x20]
    9298:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    929c:	add	x1, x1, #0x44c
    92a0:	mov	x0, x19
    92a4:	add	x8, x8, #0x1
    92a8:	mov	x2, x20
    92ac:	str	x8, [x20]
    92b0:	bl	8d60 <PyModule_AddObject@plt>
    92b4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    92b8:	ldr	x8, [x8, #4064]
    92bc:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de44>
    92c0:	add	x20, x20, #0xfc0
    92c4:	mov	x0, x20
    92c8:	str	x8, [x20, #256]
    92cc:	bl	8830 <PyType_Ready@plt>
    92d0:	tbnz	w0, #31, 98a4 <PyInit__testcapi@@Base+0x6e8>
    92d4:	ldr	x8, [x20]
    92d8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    92dc:	add	x1, x1, #0x456
    92e0:	mov	x0, x19
    92e4:	add	x8, x8, #0x1
    92e8:	mov	x2, x20
    92ec:	str	x8, [x20]
    92f0:	bl	8d60 <PyModule_AddObject@plt>
    92f4:	str	xzr, [x20, #408]
    92f8:	adrp	x20, 28000 <PyInit__testcapi@@Base+0x1ee44>
    92fc:	add	x20, x20, #0x160
    9300:	mov	x0, x20
    9304:	bl	8830 <PyType_Ready@plt>
    9308:	tbnz	w0, #31, 98a4 <PyInit__testcapi@@Base+0x6e8>
    930c:	ldr	x8, [x20]
    9310:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9314:	add	x1, x1, #0x45d
    9318:	mov	x0, x19
    931c:	add	x8, x8, #0x1
    9320:	mov	x2, x20
    9324:	str	x8, [x20]
    9328:	bl	8d60 <PyModule_AddObject@plt>
    932c:	adrp	x21, 28000 <PyInit__testcapi@@Base+0x1ee44>
    9330:	add	x21, x21, #0x300
    9334:	mov	x0, x21
    9338:	str	x20, [x21, #256]
    933c:	bl	8830 <PyType_Ready@plt>
    9340:	tbnz	w0, #31, 98a4 <PyInit__testcapi@@Base+0x6e8>
    9344:	ldr	x8, [x21]
    9348:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    934c:	add	x1, x1, #0x472
    9350:	mov	x0, x19
    9354:	add	x8, x8, #0x1
    9358:	mov	x2, x21
    935c:	str	x8, [x21]
    9360:	bl	8d60 <PyModule_AddObject@plt>
    9364:	adrp	x21, 28000 <PyInit__testcapi@@Base+0x1ee44>
    9368:	add	x21, x21, #0x4a0
    936c:	mov	x0, x21
    9370:	str	x20, [x21, #256]
    9374:	bl	8830 <PyType_Ready@plt>
    9378:	tbnz	w0, #31, 98a4 <PyInit__testcapi@@Base+0x6e8>
    937c:	ldr	x8, [x21]
    9380:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9384:	add	x1, x1, #0x48a
    9388:	mov	x0, x19
    938c:	add	x8, x8, #0x1
    9390:	mov	x2, x21
    9394:	str	x8, [x21]
    9398:	bl	8d60 <PyModule_AddObject@plt>
    939c:	adrp	x21, 28000 <PyInit__testcapi@@Base+0x1ee44>
    93a0:	add	x21, x21, #0x640
    93a4:	mov	x0, x21
    93a8:	str	x20, [x21, #256]
    93ac:	bl	8830 <PyType_Ready@plt>
    93b0:	tbnz	w0, #31, 98a4 <PyInit__testcapi@@Base+0x6e8>
    93b4:	ldr	x8, [x21]
    93b8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    93bc:	add	x1, x1, #0x4a1
    93c0:	mov	x0, x19
    93c4:	add	x8, x8, #0x1
    93c8:	mov	x2, x21
    93cc:	str	x8, [x21]
    93d0:	bl	8d60 <PyModule_AddObject@plt>
    93d4:	adrp	x20, 28000 <PyInit__testcapi@@Base+0x1ee44>
    93d8:	add	x20, x20, #0x7e0
    93dc:	mov	x0, x20
    93e0:	bl	8830 <PyType_Ready@plt>
    93e4:	tbnz	w0, #31, 98a4 <PyInit__testcapi@@Base+0x6e8>
    93e8:	ldr	x8, [x20]
    93ec:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    93f0:	add	x1, x1, #0x4b3
    93f4:	mov	x0, x19
    93f8:	add	x8, x8, #0x1
    93fc:	mov	x2, x20
    9400:	str	x8, [x20]
    9404:	bl	8d60 <PyModule_AddObject@plt>
    9408:	adrp	x20, 28000 <PyInit__testcapi@@Base+0x1ee44>
    940c:	add	x20, x20, #0x980
    9410:	mov	x0, x20
    9414:	bl	8830 <PyType_Ready@plt>
    9418:	tbnz	w0, #31, 98a4 <PyInit__testcapi@@Base+0x6e8>
    941c:	ldr	x8, [x20]
    9420:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9424:	add	x1, x1, #0x4c0
    9428:	mov	x0, x19
    942c:	add	x8, x8, #0x1
    9430:	mov	x2, x20
    9434:	str	x8, [x20]
    9438:	bl	8d60 <PyModule_AddObject@plt>
    943c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9440:	ldr	x8, [x8, #3936]
    9444:	adrp	x20, 28000 <PyInit__testcapi@@Base+0x1ee44>
    9448:	add	x20, x20, #0xb20
    944c:	mov	x0, x20
    9450:	ldr	x8, [x8]
    9454:	str	x8, [x20, #256]
    9458:	bl	8830 <PyType_Ready@plt>
    945c:	tbnz	w0, #31, 98a4 <PyInit__testcapi@@Base+0x6e8>
    9460:	ldr	x8, [x20]
    9464:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9468:	add	x1, x1, #0x4c8
    946c:	mov	x0, x19
    9470:	add	x8, x8, #0x1
    9474:	mov	x2, x20
    9478:	str	x8, [x20]
    947c:	bl	8d60 <PyModule_AddObject@plt>
    9480:	mov	w0, #0xff                  	// #255
    9484:	bl	8840 <PyLong_FromLong@plt>
    9488:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    948c:	mov	x2, x0
    9490:	add	x1, x1, #0x4eb
    9494:	mov	x0, x19
    9498:	bl	8d60 <PyModule_AddObject@plt>
    949c:	mov	x0, xzr
    94a0:	bl	8840 <PyLong_FromLong@plt>
    94a4:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    94a8:	mov	x2, x0
    94ac:	add	x1, x1, #0x4e1
    94b0:	mov	x0, x19
    94b4:	bl	8d60 <PyModule_AddObject@plt>
    94b8:	mov	w0, #0xff                  	// #255
    94bc:	bl	8840 <PyLong_FromLong@plt>
    94c0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    94c4:	mov	x2, x0
    94c8:	add	x1, x1, #0x4ea
    94cc:	mov	x0, x19
    94d0:	bl	8d60 <PyModule_AddObject@plt>
    94d4:	mov	w0, #0x7fff                	// #32767
    94d8:	bl	8840 <PyLong_FromLong@plt>
    94dc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    94e0:	mov	x2, x0
    94e4:	add	x1, x1, #0x4fe
    94e8:	mov	x0, x19
    94ec:	bl	8d60 <PyModule_AddObject@plt>
    94f0:	mov	x0, #0xffffffffffff8000    	// #-32768
    94f4:	bl	8840 <PyLong_FromLong@plt>
    94f8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    94fc:	mov	x2, x0
    9500:	add	x1, x1, #0x4f4
    9504:	mov	x0, x19
    9508:	bl	8d60 <PyModule_AddObject@plt>
    950c:	mov	w0, #0xffff                	// #65535
    9510:	bl	8840 <PyLong_FromLong@plt>
    9514:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9518:	mov	x2, x0
    951c:	add	x1, x1, #0x4fd
    9520:	mov	x0, x19
    9524:	bl	8d60 <PyModule_AddObject@plt>
    9528:	mov	w0, #0x7fffffff            	// #2147483647
    952c:	bl	8840 <PyLong_FromLong@plt>
    9530:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9534:	mov	x2, x0
    9538:	add	x1, x1, #0x510
    953c:	mov	x0, x19
    9540:	bl	8d60 <PyModule_AddObject@plt>
    9544:	mov	x0, #0xffffffff80000000    	// #-2147483648
    9548:	bl	8840 <PyLong_FromLong@plt>
    954c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9550:	mov	x2, x0
    9554:	add	x1, x1, #0x507
    9558:	mov	x0, x19
    955c:	bl	8d60 <PyModule_AddObject@plt>
    9560:	mov	w0, #0xffffffff            	// #-1
    9564:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    9568:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    956c:	mov	x2, x0
    9570:	add	x1, x1, #0x50f
    9574:	mov	x0, x19
    9578:	bl	8d60 <PyModule_AddObject@plt>
    957c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    9580:	bl	8840 <PyLong_FromLong@plt>
    9584:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9588:	mov	x2, x0
    958c:	add	x1, x1, #0x988
    9590:	mov	x0, x19
    9594:	bl	8d60 <PyModule_AddObject@plt>
    9598:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    959c:	bl	8840 <PyLong_FromLong@plt>
    95a0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    95a4:	mov	x2, x0
    95a8:	add	x1, x1, #0x9a7
    95ac:	mov	x0, x19
    95b0:	bl	8d60 <PyModule_AddObject@plt>
    95b4:	mov	x0, #0xffffffffffffffff    	// #-1
    95b8:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    95bc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    95c0:	mov	x2, x0
    95c4:	add	x1, x1, #0x518
    95c8:	mov	x0, x19
    95cc:	bl	8d60 <PyModule_AddObject@plt>
    95d0:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
    95d4:	ldr	d0, [x8, #3312]
    95d8:	bl	8800 <PyFloat_FromDouble@plt>
    95dc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    95e0:	mov	x2, x0
    95e4:	add	x1, x1, #0x522
    95e8:	mov	x0, x19
    95ec:	bl	8d60 <PyModule_AddObject@plt>
    95f0:	mov	x8, #0x3810000000000000    	// #4039728865751334912
    95f4:	fmov	d0, x8
    95f8:	bl	8800 <PyFloat_FromDouble@plt>
    95fc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9600:	mov	x2, x0
    9604:	add	x1, x1, #0x52a
    9608:	mov	x0, x19
    960c:	bl	8d60 <PyModule_AddObject@plt>
    9610:	mov	x8, #0x7fefffffffffffff    	// #9218868437227405311
    9614:	fmov	d0, x8
    9618:	bl	8800 <PyFloat_FromDouble@plt>
    961c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9620:	mov	x2, x0
    9624:	add	x1, x1, #0x532
    9628:	mov	x0, x19
    962c:	bl	8d60 <PyModule_AddObject@plt>
    9630:	mov	x8, #0x10000000000000      	// #4503599627370496
    9634:	fmov	d0, x8
    9638:	bl	8800 <PyFloat_FromDouble@plt>
    963c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9640:	mov	x2, x0
    9644:	add	x1, x1, #0x53a
    9648:	mov	x0, x19
    964c:	bl	8d60 <PyModule_AddObject@plt>
    9650:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    9654:	bl	8ef0 <PyLong_FromLongLong@plt>
    9658:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    965c:	mov	x2, x0
    9660:	add	x1, x1, #0x543
    9664:	mov	x0, x19
    9668:	bl	8d60 <PyModule_AddObject@plt>
    966c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    9670:	bl	8ef0 <PyLong_FromLongLong@plt>
    9674:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    9678:	mov	x2, x0
    967c:	add	x1, x1, #0x536
    9680:	mov	x0, x19
    9684:	bl	8d60 <PyModule_AddObject@plt>
    9688:	mov	x0, #0xffffffffffffffff    	// #-1
    968c:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
    9690:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9694:	mov	x2, x0
    9698:	add	x1, x1, #0x542
    969c:	mov	x0, x19
    96a0:	bl	8d60 <PyModule_AddObject@plt>
    96a4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    96a8:	bl	87f0 <PyLong_FromSsize_t@plt>
    96ac:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    96b0:	mov	x2, x0
    96b4:	add	x1, x1, #0x54d
    96b8:	mov	x0, x19
    96bc:	bl	8d60 <PyModule_AddObject@plt>
    96c0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    96c4:	bl	87f0 <PyLong_FromSsize_t@plt>
    96c8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    96cc:	mov	x2, x0
    96d0:	add	x1, x1, #0x55c
    96d4:	mov	x0, x19
    96d8:	bl	8d60 <PyModule_AddObject@plt>
    96dc:	mov	w0, #0x10                  	// #16
    96e0:	bl	87f0 <PyLong_FromSsize_t@plt>
    96e4:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    96e8:	mov	x2, x0
    96ec:	add	x1, x1, #0x56b
    96f0:	mov	x0, x19
    96f4:	bl	8d60 <PyModule_AddObject@plt>
    96f8:	mov	w0, #0x8                   	// #8
    96fc:	bl	87f0 <PyLong_FromSsize_t@plt>
    9700:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9704:	mov	x2, x0
    9708:	add	x1, x1, #0x57c
    970c:	mov	x0, x19
    9710:	bl	8d60 <PyModule_AddObject@plt>
    9714:	adrp	x2, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9718:	ldr	x2, [x2, #3912]
    971c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9720:	add	x1, x1, #0x58a
    9724:	mov	x0, x19
    9728:	ldr	x8, [x2]
    972c:	add	x8, x8, #0x1
    9730:	str	x8, [x2]
    9734:	bl	8d60 <PyModule_AddObject@plt>
    9738:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    973c:	add	x1, x1, #0x599
    9740:	mov	w2, #0x3                   	// #3
    9744:	mov	x0, x19
    9748:	bl	8320 <PyModule_AddIntConstant@plt>
    974c:	adrp	x2, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9750:	ldr	x2, [x2, #4032]
    9754:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9758:	add	x1, x1, #0x5aa
    975c:	mov	x0, x19
    9760:	ldr	x8, [x2]
    9764:	add	x8, x8, #0x1
    9768:	str	x8, [x2]
    976c:	bl	8d60 <PyModule_AddObject@plt>
    9770:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e44>
    9774:	add	x0, x0, #0x5b8
    9778:	mov	x1, xzr
    977c:	mov	x2, xzr
    9780:	bl	88a0 <PyErr_NewException@plt>
    9784:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9788:	str	x0, [x8, #3520]
    978c:	ldr	x8, [x0]
    9790:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    9794:	mov	x2, x0
    9798:	add	x1, x1, #0xd5f
    979c:	add	x8, x8, #0x1
    97a0:	str	x8, [x0]
    97a4:	mov	x0, x19
    97a8:	bl	8d60 <PyModule_AddObject@plt>
    97ac:	adrp	x0, 28000 <PyInit__testcapi@@Base+0x1ee44>
    97b0:	add	x0, x0, #0xcc0
    97b4:	bl	8ff0 <PyType_FromSpec@plt>
    97b8:	cbz	x0, 98a4 <PyInit__testcapi@@Base+0x6e8>
    97bc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    97c0:	mov	x2, x0
    97c4:	add	x1, x1, #0x275
    97c8:	mov	x0, x19
    97cc:	bl	8d60 <PyModule_AddObject@plt>
    97d0:	adrp	x0, 28000 <PyInit__testcapi@@Base+0x1ee44>
    97d4:	add	x0, x0, #0xce0
    97d8:	bl	8ff0 <PyType_FromSpec@plt>
    97dc:	cbz	x0, 98a4 <PyInit__testcapi@@Base+0x6e8>
    97e0:	mov	x1, x0
    97e4:	mov	w0, #0x1                   	// #1
    97e8:	bl	9040 <PyTuple_Pack@plt>
    97ec:	cbz	x0, 98a4 <PyInit__testcapi@@Base+0x6e8>
    97f0:	mov	x21, x0
    97f4:	adrp	x0, 28000 <PyInit__testcapi@@Base+0x1ee44>
    97f8:	add	x0, x0, #0xd00
    97fc:	mov	x1, x21
    9800:	bl	8f50 <PyType_FromSpecWithBases@plt>
    9804:	cbz	x0, 98a4 <PyInit__testcapi@@Base+0x6e8>
    9808:	ldr	x8, [x21]
    980c:	mov	x20, x0
    9810:	subs	x8, x8, #0x1
    9814:	str	x8, [x21]
    9818:	b.ne	9824 <PyInit__testcapi@@Base+0x668>  // b.any
    981c:	mov	x0, x21
    9820:	bl	8560 <_Py_Dealloc@plt>
    9824:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    9828:	add	x1, x1, #0x29f
    982c:	mov	x0, x19
    9830:	mov	x2, x20
    9834:	bl	8d60 <PyModule_AddObject@plt>
    9838:	mov	w0, #0x1                   	// #1
    983c:	mov	x1, x20
    9840:	bl	9040 <PyTuple_Pack@plt>
    9844:	cbz	x0, 98a4 <PyInit__testcapi@@Base+0x6e8>
    9848:	mov	x20, x0
    984c:	adrp	x0, 28000 <PyInit__testcapi@@Base+0x1ee44>
    9850:	add	x0, x0, #0xd20
    9854:	mov	x1, x20
    9858:	bl	8f50 <PyType_FromSpecWithBases@plt>
    985c:	cbz	x0, 98a4 <PyInit__testcapi@@Base+0x6e8>
    9860:	ldr	x8, [x20]
    9864:	mov	x21, x0
    9868:	subs	x8, x8, #0x1
    986c:	str	x8, [x20]
    9870:	b.ne	987c <PyInit__testcapi@@Base+0x6c0>  // b.any
    9874:	mov	x0, x20
    9878:	bl	8560 <_Py_Dealloc@plt>
    987c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    9880:	add	x1, x1, #0x2c2
    9884:	mov	x0, x19
    9888:	mov	x2, x21
    988c:	bl	8d60 <PyModule_AddObject@plt>
    9890:	adrp	x1, 27000 <PyInit__testcapi@@Base+0x1de44>
    9894:	add	x1, x1, #0x738
    9898:	mov	x0, x19
    989c:	bl	8d20 <PyState_AddModule@plt>
    98a0:	b	98a8 <PyInit__testcapi@@Base+0x6ec>
    98a4:	mov	x19, xzr
    98a8:	mov	x0, x19
    98ac:	ldp	x20, x19, [sp, #32]
    98b0:	ldr	x21, [sp, #16]
    98b4:	ldp	x29, x30, [sp], #48
    98b8:	ret
    98bc:	sub	sp, sp, #0x30
    98c0:	stp	x29, x30, [sp, #16]
    98c4:	stp	x20, x19, [sp, #32]
    98c8:	add	x29, sp, #0x10
    98cc:	mov	x0, x1
    98d0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    98d4:	add	x1, x1, #0x2cd
    98d8:	add	x2, sp, #0x8
    98dc:	add	x3, sp, #0x4
    98e0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    98e4:	cbz	w0, 9950 <PyInit__testcapi@@Base+0x794>
    98e8:	ldrsw	x0, [sp, #4]
    98ec:	bl	8920 <PyTuple_New@plt>
    98f0:	cbz	x0, 9950 <PyInit__testcapi@@Base+0x794>
    98f4:	ldr	w8, [sp, #4]
    98f8:	mov	x19, x0
    98fc:	cmp	w8, #0x1
    9900:	b.lt	992c <PyInit__testcapi@@Base+0x770>  // b.tstop
    9904:	mov	w20, #0x3                   	// #3
    9908:	sub	x0, x20, #0x3
    990c:	bl	8840 <PyLong_FromLong@plt>
    9910:	cbz	x0, 9938 <PyInit__testcapi@@Base+0x77c>
    9914:	str	x0, [x19, x20, lsl #3]
    9918:	ldrsw	x8, [sp, #4]
    991c:	sub	x9, x20, #0x2
    9920:	add	x20, x20, #0x1
    9924:	cmp	x9, x8
    9928:	b.lt	9908 <PyInit__testcapi@@Base+0x74c>  // b.tstop
    992c:	ldr	x0, [sp, #8]
    9930:	mov	x1, x19
    9934:	bl	8580 <PyErr_SetObject@plt>
    9938:	ldr	x8, [x19]
    993c:	subs	x8, x8, #0x1
    9940:	str	x8, [x19]
    9944:	b.ne	9950 <PyInit__testcapi@@Base+0x794>  // b.any
    9948:	mov	x0, x19
    994c:	bl	8560 <_Py_Dealloc@plt>
    9950:	ldp	x20, x19, [sp, #32]
    9954:	ldp	x29, x30, [sp, #16]
    9958:	mov	x0, xzr
    995c:	add	sp, sp, #0x30
    9960:	ret
    9964:	stp	x29, x30, [sp, #-16]!
    9968:	mov	x29, sp
    996c:	bl	8570 <PyErr_NoMemory@plt>
    9970:	mov	x0, xzr
    9974:	ldp	x29, x30, [sp], #16
    9978:	ret
    997c:	stp	x29, x30, [sp, #-32]!
    9980:	str	x19, [sp, #16]
    9984:	mov	x29, sp
    9988:	mov	x0, x1
    998c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9990:	add	x1, x1, #0x2e0
    9994:	add	x2, x29, #0x1c
    9998:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    999c:	cbz	w0, 99c4 <PyInit__testcapi@@Base+0x808>
    99a0:	ldr	w19, [x29, #28]
    99a4:	bl	8f40 <__errno_location@plt>
    99a8:	str	w19, [x0]
    99ac:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    99b0:	ldr	x0, [x0, #4016]
    99b4:	ldr	x8, [x0]
    99b8:	add	x8, x8, #0x1
    99bc:	str	x8, [x0]
    99c0:	b	99c8 <PyInit__testcapi@@Base+0x80c>
    99c4:	mov	x0, xzr
    99c8:	ldr	x19, [sp, #16]
    99cc:	ldp	x29, x30, [sp], #32
    99d0:	ret
    99d4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    99d8:	ldr	x0, [x0, #4016]
    99dc:	ldr	x8, [x0]
    99e0:	add	x8, x8, #0x1
    99e4:	str	x8, [x0]
    99e8:	ret
    99ec:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    99f0:	ldr	x0, [x0, #4016]
    99f4:	ldr	x8, [x0]
    99f8:	add	x8, x8, #0x1
    99fc:	str	x8, [x0]
    9a00:	ret
    9a04:	stp	x29, x30, [sp, #-32]!
    9a08:	str	x19, [sp, #16]
    9a0c:	mov	x29, sp
    9a10:	adrp	x19, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9a14:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9a18:	ldr	x10, [x19, #3528]
    9a1c:	ldr	w8, [x9, #3536]
    9a20:	cbz	x10, 9a48 <PyInit__testcapi@@Base+0x88c>
    9a24:	cbnz	w8, 9a68 <PyInit__testcapi@@Base+0x8ac>
    9a28:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9a2c:	ldr	x8, [x8, #4024]
    9a30:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9a34:	add	x1, x1, #0x2ec
    9a38:	ldr	x0, [x8]
    9a3c:	bl	8670 <PyErr_SetString@plt>
    9a40:	mov	x0, xzr
    9a44:	b	9a7c <PyInit__testcapi@@Base+0x8c0>
    9a48:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    9a4c:	add	w8, w8, #0x1
    9a50:	add	x0, x0, #0x310
    9a54:	mov	w1, wzr
    9a58:	str	w8, [x9, #3536]
    9a5c:	bl	8820 <PyCapsule_Import@plt>
    9a60:	str	x0, [x19, #3528]
    9a64:	cbz	x0, 9a7c <PyInit__testcapi@@Base+0x8c0>
    9a68:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9a6c:	ldr	x0, [x0, #4016]
    9a70:	ldr	x8, [x0]
    9a74:	add	x8, x8, #0x1
    9a78:	str	x8, [x0]
    9a7c:	ldr	x19, [sp, #16]
    9a80:	ldp	x29, x30, [sp], #32
    9a84:	ret
    9a88:	sub	sp, sp, #0x20
    9a8c:	stp	x29, x30, [sp, #16]
    9a90:	add	x29, sp, #0x10
    9a94:	mov	x0, x1
    9a98:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9a9c:	add	x1, x1, #0x327
    9aa0:	add	x2, sp, #0x8
    9aa4:	add	x3, sp, #0x4
    9aa8:	str	wzr, [sp, #4]
    9aac:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9ab0:	cbz	w0, 9adc <PyInit__testcapi@@Base+0x920>
    9ab4:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9ab8:	ldr	x8, [sp, #8]
    9abc:	ldr	x9, [x9, #3528]
    9ac0:	ldr	w10, [sp, #4]
    9ac4:	ldr	x0, [x8, #8]
    9ac8:	ldr	x1, [x9]
    9acc:	cbz	w10, 9ae4 <PyInit__testcapi@@Base+0x928>
    9ad0:	cmp	x0, x1
    9ad4:	b.ne	9b00 <PyInit__testcapi@@Base+0x944>  // b.any
    9ad8:	b	9af4 <PyInit__testcapi@@Base+0x938>
    9adc:	mov	x0, xzr
    9ae0:	b	9b14 <PyInit__testcapi@@Base+0x958>
    9ae4:	cmp	x0, x1
    9ae8:	b.eq	9af4 <PyInit__testcapi@@Base+0x938>  // b.none
    9aec:	bl	8e20 <PyType_IsSubtype@plt>
    9af0:	cbz	w0, 9b00 <PyInit__testcapi@@Base+0x944>
    9af4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9af8:	ldr	x0, [x0, #4032]
    9afc:	b	9b08 <PyInit__testcapi@@Base+0x94c>
    9b00:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9b04:	ldr	x0, [x0, #3984]
    9b08:	ldr	x8, [x0]
    9b0c:	add	x8, x8, #0x1
    9b10:	str	x8, [x0]
    9b14:	ldp	x29, x30, [sp, #16]
    9b18:	add	sp, sp, #0x20
    9b1c:	ret
    9b20:	sub	sp, sp, #0x20
    9b24:	stp	x29, x30, [sp, #16]
    9b28:	add	x29, sp, #0x10
    9b2c:	mov	x0, x1
    9b30:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9b34:	add	x1, x1, #0x327
    9b38:	add	x2, sp, #0x8
    9b3c:	add	x3, sp, #0x4
    9b40:	str	wzr, [sp, #4]
    9b44:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9b48:	cbz	w0, 9b74 <PyInit__testcapi@@Base+0x9b8>
    9b4c:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9b50:	ldr	x8, [sp, #8]
    9b54:	ldr	x9, [x9, #3528]
    9b58:	ldr	w10, [sp, #4]
    9b5c:	ldr	x0, [x8, #8]
    9b60:	ldr	x1, [x9, #16]
    9b64:	cbz	w10, 9b7c <PyInit__testcapi@@Base+0x9c0>
    9b68:	cmp	x0, x1
    9b6c:	b.ne	9b98 <PyInit__testcapi@@Base+0x9dc>  // b.any
    9b70:	b	9b8c <PyInit__testcapi@@Base+0x9d0>
    9b74:	mov	x0, xzr
    9b78:	b	9bac <PyInit__testcapi@@Base+0x9f0>
    9b7c:	cmp	x0, x1
    9b80:	b.eq	9b8c <PyInit__testcapi@@Base+0x9d0>  // b.none
    9b84:	bl	8e20 <PyType_IsSubtype@plt>
    9b88:	cbz	w0, 9b98 <PyInit__testcapi@@Base+0x9dc>
    9b8c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9b90:	ldr	x0, [x0, #4032]
    9b94:	b	9ba0 <PyInit__testcapi@@Base+0x9e4>
    9b98:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9b9c:	ldr	x0, [x0, #3984]
    9ba0:	ldr	x8, [x0]
    9ba4:	add	x8, x8, #0x1
    9ba8:	str	x8, [x0]
    9bac:	ldp	x29, x30, [sp, #16]
    9bb0:	add	sp, sp, #0x20
    9bb4:	ret
    9bb8:	sub	sp, sp, #0x20
    9bbc:	stp	x29, x30, [sp, #16]
    9bc0:	add	x29, sp, #0x10
    9bc4:	mov	x0, x1
    9bc8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9bcc:	add	x1, x1, #0x327
    9bd0:	add	x2, sp, #0x8
    9bd4:	add	x3, sp, #0x4
    9bd8:	str	wzr, [sp, #4]
    9bdc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9be0:	cbz	w0, 9c0c <PyInit__testcapi@@Base+0xa50>
    9be4:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9be8:	ldr	x8, [sp, #8]
    9bec:	ldr	x9, [x9, #3528]
    9bf0:	ldr	w10, [sp, #4]
    9bf4:	ldr	x0, [x8, #8]
    9bf8:	ldr	x1, [x9, #8]
    9bfc:	cbz	w10, 9c14 <PyInit__testcapi@@Base+0xa58>
    9c00:	cmp	x0, x1
    9c04:	b.ne	9c30 <PyInit__testcapi@@Base+0xa74>  // b.any
    9c08:	b	9c24 <PyInit__testcapi@@Base+0xa68>
    9c0c:	mov	x0, xzr
    9c10:	b	9c44 <PyInit__testcapi@@Base+0xa88>
    9c14:	cmp	x0, x1
    9c18:	b.eq	9c24 <PyInit__testcapi@@Base+0xa68>  // b.none
    9c1c:	bl	8e20 <PyType_IsSubtype@plt>
    9c20:	cbz	w0, 9c30 <PyInit__testcapi@@Base+0xa74>
    9c24:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9c28:	ldr	x0, [x0, #4032]
    9c2c:	b	9c38 <PyInit__testcapi@@Base+0xa7c>
    9c30:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9c34:	ldr	x0, [x0, #3984]
    9c38:	ldr	x8, [x0]
    9c3c:	add	x8, x8, #0x1
    9c40:	str	x8, [x0]
    9c44:	ldp	x29, x30, [sp, #16]
    9c48:	add	sp, sp, #0x20
    9c4c:	ret
    9c50:	sub	sp, sp, #0x20
    9c54:	stp	x29, x30, [sp, #16]
    9c58:	add	x29, sp, #0x10
    9c5c:	mov	x0, x1
    9c60:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9c64:	add	x1, x1, #0x327
    9c68:	add	x2, sp, #0x8
    9c6c:	add	x3, sp, #0x4
    9c70:	str	wzr, [sp, #4]
    9c74:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9c78:	cbz	w0, 9ca4 <PyInit__testcapi@@Base+0xae8>
    9c7c:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9c80:	ldr	x8, [sp, #8]
    9c84:	ldr	x9, [x9, #3528]
    9c88:	ldr	w10, [sp, #4]
    9c8c:	ldr	x0, [x8, #8]
    9c90:	ldr	x1, [x9, #24]
    9c94:	cbz	w10, 9cac <PyInit__testcapi@@Base+0xaf0>
    9c98:	cmp	x0, x1
    9c9c:	b.ne	9cc8 <PyInit__testcapi@@Base+0xb0c>  // b.any
    9ca0:	b	9cbc <PyInit__testcapi@@Base+0xb00>
    9ca4:	mov	x0, xzr
    9ca8:	b	9cdc <PyInit__testcapi@@Base+0xb20>
    9cac:	cmp	x0, x1
    9cb0:	b.eq	9cbc <PyInit__testcapi@@Base+0xb00>  // b.none
    9cb4:	bl	8e20 <PyType_IsSubtype@plt>
    9cb8:	cbz	w0, 9cc8 <PyInit__testcapi@@Base+0xb0c>
    9cbc:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9cc0:	ldr	x0, [x0, #4032]
    9cc4:	b	9cd0 <PyInit__testcapi@@Base+0xb14>
    9cc8:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9ccc:	ldr	x0, [x0, #3984]
    9cd0:	ldr	x8, [x0]
    9cd4:	add	x8, x8, #0x1
    9cd8:	str	x8, [x0]
    9cdc:	ldp	x29, x30, [sp, #16]
    9ce0:	add	sp, sp, #0x20
    9ce4:	ret
    9ce8:	sub	sp, sp, #0x20
    9cec:	stp	x29, x30, [sp, #16]
    9cf0:	add	x29, sp, #0x10
    9cf4:	mov	x0, x1
    9cf8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9cfc:	add	x1, x1, #0x327
    9d00:	add	x2, sp, #0x8
    9d04:	add	x3, sp, #0x4
    9d08:	str	wzr, [sp, #4]
    9d0c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9d10:	cbz	w0, 9d3c <PyInit__testcapi@@Base+0xb80>
    9d14:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9d18:	ldr	x8, [sp, #8]
    9d1c:	ldr	x9, [x9, #3528]
    9d20:	ldr	w10, [sp, #4]
    9d24:	ldr	x0, [x8, #8]
    9d28:	ldr	x1, [x9, #32]
    9d2c:	cbz	w10, 9d44 <PyInit__testcapi@@Base+0xb88>
    9d30:	cmp	x0, x1
    9d34:	b.ne	9d60 <PyInit__testcapi@@Base+0xba4>  // b.any
    9d38:	b	9d54 <PyInit__testcapi@@Base+0xb98>
    9d3c:	mov	x0, xzr
    9d40:	b	9d74 <PyInit__testcapi@@Base+0xbb8>
    9d44:	cmp	x0, x1
    9d48:	b.eq	9d54 <PyInit__testcapi@@Base+0xb98>  // b.none
    9d4c:	bl	8e20 <PyType_IsSubtype@plt>
    9d50:	cbz	w0, 9d60 <PyInit__testcapi@@Base+0xba4>
    9d54:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9d58:	ldr	x0, [x0, #4032]
    9d5c:	b	9d68 <PyInit__testcapi@@Base+0xbac>
    9d60:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9d64:	ldr	x0, [x0, #3984]
    9d68:	ldr	x8, [x0]
    9d6c:	add	x8, x8, #0x1
    9d70:	str	x8, [x0]
    9d74:	ldp	x29, x30, [sp, #16]
    9d78:	add	sp, sp, #0x20
    9d7c:	ret
    9d80:	stp	x29, x30, [sp, #-64]!
    9d84:	str	x23, [sp, #16]
    9d88:	stp	x22, x21, [sp, #32]
    9d8c:	stp	x20, x19, [sp, #48]
    9d90:	mov	x29, sp
    9d94:	adrp	x22, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9d98:	ldr	x8, [x22, #3528]
    9d9c:	mov	w1, #0xffffb9b0            	// #-18000
    9da0:	mov	w3, #0x1                   	// #1
    9da4:	mov	w0, wzr
    9da8:	ldr	x9, [x8, #72]
    9dac:	ldr	x4, [x8, #24]
    9db0:	mov	w2, wzr
    9db4:	blr	x9
    9db8:	mov	x19, x0
    9dbc:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    9dc0:	add	x0, x0, #0x32b
    9dc4:	bl	8d10 <PyUnicode_FromString@plt>
    9dc8:	ldr	x8, [x22, #3528]
    9dcc:	mov	x20, x0
    9dd0:	mov	x0, x19
    9dd4:	mov	x1, x20
    9dd8:	ldr	x8, [x8, #80]
    9ddc:	blr	x8
    9de0:	ldr	x8, [x22, #3528]
    9de4:	mov	x21, x0
    9de8:	mov	x0, x19
    9dec:	mov	x1, x20
    9df0:	ldr	x8, [x8, #80]
    9df4:	blr	x8
    9df8:	ldr	x8, [x22, #3528]
    9dfc:	mov	x22, x0
    9e00:	mov	x0, x19
    9e04:	mov	x1, xzr
    9e08:	ldr	x8, [x8, #80]
    9e0c:	blr	x8
    9e10:	mov	x23, x0
    9e14:	mov	x0, x19
    9e18:	bl	8be0 <Py_DecRef@plt>
    9e1c:	mov	x0, x20
    9e20:	bl	8be0 <Py_DecRef@plt>
    9e24:	mov	w0, #0x3                   	// #3
    9e28:	bl	8920 <PyTuple_New@plt>
    9e2c:	stp	x21, x22, [x0, #24]
    9e30:	str	x23, [x0, #40]
    9e34:	ldp	x20, x19, [sp, #48]
    9e38:	ldp	x22, x21, [sp, #32]
    9e3c:	ldr	x23, [sp, #16]
    9e40:	ldp	x29, x30, [sp], #64
    9e44:	ret
    9e48:	stp	x29, x30, [sp, #-64]!
    9e4c:	str	x23, [sp, #16]
    9e50:	stp	x22, x21, [sp, #32]
    9e54:	stp	x20, x19, [sp, #48]
    9e58:	mov	x29, sp
    9e5c:	adrp	x22, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9e60:	ldr	x8, [x22, #3528]
    9e64:	mov	w3, #0x1                   	// #1
    9e68:	mov	w0, wzr
    9e6c:	mov	w1, wzr
    9e70:	ldr	x9, [x8, #72]
    9e74:	ldr	x4, [x8, #24]
    9e78:	mov	w2, wzr
    9e7c:	blr	x9
    9e80:	mov	x19, x0
    9e84:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e44>
    9e88:	add	x0, x0, #0x63
    9e8c:	bl	8d10 <PyUnicode_FromString@plt>
    9e90:	ldr	x8, [x22, #3528]
    9e94:	mov	x20, x0
    9e98:	mov	x0, x19
    9e9c:	mov	x1, xzr
    9ea0:	ldr	x8, [x8, #80]
    9ea4:	blr	x8
    9ea8:	ldr	x8, [x22, #3528]
    9eac:	mov	x21, x0
    9eb0:	mov	x0, x19
    9eb4:	mov	x1, xzr
    9eb8:	ldr	x8, [x8, #80]
    9ebc:	blr	x8
    9ec0:	ldr	x8, [x22, #3528]
    9ec4:	mov	x22, x0
    9ec8:	mov	x0, x19
    9ecc:	mov	x1, x20
    9ed0:	ldr	x8, [x8, #80]
    9ed4:	blr	x8
    9ed8:	mov	x23, x0
    9edc:	mov	x0, x19
    9ee0:	bl	8be0 <Py_DecRef@plt>
    9ee4:	mov	x0, x20
    9ee8:	bl	8be0 <Py_DecRef@plt>
    9eec:	mov	w0, #0x3                   	// #3
    9ef0:	bl	8920 <PyTuple_New@plt>
    9ef4:	stp	x21, x22, [x0, #24]
    9ef8:	str	x23, [x0, #40]
    9efc:	ldp	x20, x19, [sp, #48]
    9f00:	ldp	x22, x21, [sp, #32]
    9f04:	ldr	x23, [sp, #16]
    9f08:	ldp	x29, x30, [sp], #64
    9f0c:	ret
    9f10:	sub	sp, sp, #0x20
    9f14:	stp	x29, x30, [sp, #16]
    9f18:	add	x29, sp, #0x10
    9f1c:	mov	x0, x1
    9f20:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9f24:	add	x1, x1, #0x328
    9f28:	sub	x2, x29, #0x4
    9f2c:	stur	wzr, [x29, #-4]
    9f30:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9f34:	cbz	w0, 9f54 <PyInit__testcapi@@Base+0xd98>
    9f38:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9f3c:	ldr	x8, [x8, #3528]
    9f40:	ldr	x0, [x8, #40]
    9f44:	ldr	x8, [x0]
    9f48:	add	x8, x8, #0x1
    9f4c:	str	x8, [x0]
    9f50:	b	9f58 <PyInit__testcapi@@Base+0xd9c>
    9f54:	mov	x0, xzr
    9f58:	ldp	x29, x30, [sp, #16]
    9f5c:	add	sp, sp, #0x20
    9f60:	ret
    9f64:	sub	sp, sp, #0x20
    9f68:	stp	x29, x30, [sp, #16]
    9f6c:	add	x29, sp, #0x10
    9f70:	mov	x0, x1
    9f74:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9f78:	add	x1, x1, #0x32f
    9f7c:	sub	x2, x29, #0x4
    9f80:	add	x3, sp, #0x8
    9f84:	add	x4, sp, #0x4
    9f88:	mov	x5, sp
    9f8c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9f90:	cbz	w0, 9fb4 <PyInit__testcapi@@Base+0xdf8>
    9f94:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9f98:	ldr	x8, [x8, #3528]
    9f9c:	ldp	w1, w0, [sp, #4]
    9fa0:	ldr	w2, [sp]
    9fa4:	ldr	x9, [x8, #48]
    9fa8:	ldr	x3, [x8]
    9fac:	blr	x9
    9fb0:	b	9fb8 <PyInit__testcapi@@Base+0xdfc>
    9fb4:	mov	x0, xzr
    9fb8:	ldp	x29, x30, [sp, #16]
    9fbc:	add	sp, sp, #0x20
    9fc0:	ret
    9fc4:	sub	sp, sp, #0x40
    9fc8:	stp	x29, x30, [sp, #48]
    9fcc:	add	x29, sp, #0x30
    9fd0:	mov	x0, x1
    9fd4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9fd8:	add	x8, sp, #0x10
    9fdc:	add	x9, sp, #0x14
    9fe0:	add	x1, x1, #0x334
    9fe4:	sub	x2, x29, #0x4
    9fe8:	sub	x3, x29, #0x8
    9fec:	sub	x4, x29, #0xc
    9ff0:	sub	x5, x29, #0x10
    9ff4:	sub	x6, x29, #0x14
    9ff8:	add	x7, sp, #0x18
    9ffc:	stp	x9, x8, [sp]
    a000:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a004:	cbz	w0, a03c <PyInit__testcapi@@Base+0xe80>
    a008:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a00c:	ldr	x8, [x8, #3528]
    a010:	adrp	x7, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a014:	ldp	w1, w0, [x29, #-12]
    a018:	ldp	w3, w2, [x29, #-20]
    a01c:	ldp	w5, w4, [sp, #20]
    a020:	ldr	w6, [sp, #16]
    a024:	ldr	x9, [x8, #56]
    a028:	ldr	x8, [x8, #8]
    a02c:	ldr	x7, [x7, #4016]
    a030:	str	x8, [sp]
    a034:	blr	x9
    a038:	b	a040 <PyInit__testcapi@@Base+0xe84>
    a03c:	mov	x0, xzr
    a040:	ldp	x29, x30, [sp, #48]
    a044:	add	sp, sp, #0x40
    a048:	ret
    a04c:	sub	sp, sp, #0x50
    a050:	stp	x29, x30, [sp, #64]
    a054:	add	x29, sp, #0x40
    a058:	mov	x0, x1
    a05c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a060:	add	x8, sp, #0x1c
    a064:	add	x9, sp, #0x20
    a068:	sub	x10, x29, #0x1c
    a06c:	add	x1, x1, #0x33d
    a070:	sub	x2, x29, #0x4
    a074:	sub	x3, x29, #0x8
    a078:	sub	x4, x29, #0xc
    a07c:	sub	x5, x29, #0x10
    a080:	sub	x6, x29, #0x14
    a084:	sub	x7, x29, #0x18
    a088:	stp	x9, x8, [sp, #8]
    a08c:	str	x10, [sp]
    a090:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a094:	cbz	w0, a0d0 <PyInit__testcapi@@Base+0xf14>
    a098:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a09c:	ldr	x8, [x8, #3528]
    a0a0:	adrp	x7, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a0a4:	ldp	w1, w0, [x29, #-12]
    a0a8:	ldp	w3, w2, [x29, #-20]
    a0ac:	ldr	x10, [x8, #104]
    a0b0:	ldr	x8, [x8, #8]
    a0b4:	ldp	w5, w4, [x29, #-28]
    a0b8:	ldp	w9, w6, [sp, #28]
    a0bc:	str	x8, [sp, #8]
    a0c0:	ldr	x7, [x7, #4016]
    a0c4:	str	w9, [sp]
    a0c8:	blr	x10
    a0cc:	b	a0d4 <PyInit__testcapi@@Base+0xf18>
    a0d0:	mov	x0, xzr
    a0d4:	ldp	x29, x30, [sp, #64]
    a0d8:	add	sp, sp, #0x50
    a0dc:	ret
    a0e0:	sub	sp, sp, #0x30
    a0e4:	stp	x29, x30, [sp, #32]
    a0e8:	add	x29, sp, #0x20
    a0ec:	mov	x0, x1
    a0f0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a0f4:	add	x1, x1, #0x347
    a0f8:	sub	x2, x29, #0x4
    a0fc:	sub	x3, x29, #0x8
    a100:	sub	x4, x29, #0xc
    a104:	add	x5, sp, #0x10
    a108:	add	x6, sp, #0xc
    a10c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a110:	cbz	w0, a13c <PyInit__testcapi@@Base+0xf80>
    a114:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a118:	ldr	x8, [x8, #3528]
    a11c:	adrp	x4, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a120:	ldp	w1, w0, [x29, #-12]
    a124:	ldp	w3, w2, [sp, #12]
    a128:	ldr	x9, [x8, #64]
    a12c:	ldr	x5, [x8, #16]
    a130:	ldr	x4, [x4, #4016]
    a134:	blr	x9
    a138:	b	a140 <PyInit__testcapi@@Base+0xf84>
    a13c:	mov	x0, xzr
    a140:	ldp	x29, x30, [sp, #32]
    a144:	add	sp, sp, #0x30
    a148:	ret
    a14c:	sub	sp, sp, #0x30
    a150:	stp	x29, x30, [sp, #32]
    a154:	add	x29, sp, #0x20
    a158:	mov	x0, x1
    a15c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a160:	add	x1, x1, #0x34d
    a164:	sub	x2, x29, #0x4
    a168:	sub	x3, x29, #0x8
    a16c:	sub	x4, x29, #0xc
    a170:	add	x5, sp, #0x10
    a174:	add	x6, sp, #0xc
    a178:	add	x7, sp, #0x8
    a17c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a180:	cbz	w0, a1b0 <PyInit__testcapi@@Base+0xff4>
    a184:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a188:	ldr	x8, [x8, #3528]
    a18c:	adrp	x4, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a190:	ldp	w1, w0, [x29, #-12]
    a194:	ldp	w3, w2, [sp, #12]
    a198:	ldr	w5, [sp, #8]
    a19c:	ldr	x9, [x8, #112]
    a1a0:	ldr	x6, [x8, #16]
    a1a4:	ldr	x4, [x4, #4016]
    a1a8:	blr	x9
    a1ac:	b	a1b4 <PyInit__testcapi@@Base+0xff8>
    a1b0:	mov	x0, xzr
    a1b4:	ldp	x29, x30, [sp, #32]
    a1b8:	add	sp, sp, #0x30
    a1bc:	ret
    a1c0:	sub	sp, sp, #0x20
    a1c4:	stp	x29, x30, [sp, #16]
    a1c8:	add	x29, sp, #0x10
    a1cc:	mov	x0, x1
    a1d0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a1d4:	add	x1, x1, #0x32f
    a1d8:	sub	x2, x29, #0x4
    a1dc:	add	x3, sp, #0x8
    a1e0:	add	x4, sp, #0x4
    a1e4:	mov	x5, sp
    a1e8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a1ec:	cbz	w0, a214 <PyInit__testcapi@@Base+0x1058>
    a1f0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a1f4:	ldr	x8, [x8, #3528]
    a1f8:	ldp	w1, w0, [sp, #4]
    a1fc:	ldr	w2, [sp]
    a200:	mov	w3, #0x1                   	// #1
    a204:	ldr	x9, [x8, #72]
    a208:	ldr	x4, [x8, #24]
    a20c:	blr	x9
    a210:	b	a218 <PyInit__testcapi@@Base+0x105c>
    a214:	mov	x0, xzr
    a218:	ldp	x29, x30, [sp, #16]
    a21c:	add	sp, sp, #0x20
    a220:	ret
    a224:	sub	sp, sp, #0x30
    a228:	stp	x29, x30, [sp, #16]
    a22c:	stp	x20, x19, [sp, #32]
    a230:	add	x29, sp, #0x10
    a234:	mov	x0, x1
    a238:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a23c:	add	x1, x1, #0x327
    a240:	add	x2, sp, #0x8
    a244:	add	x3, sp, #0x4
    a248:	str	xzr, [sp, #8]
    a24c:	str	wzr, [sp, #4]
    a250:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a254:	cbz	w0, a2a4 <PyInit__testcapi@@Base+0x10e8>
    a258:	ldr	x1, [sp, #8]
    a25c:	mov	w0, #0x1                   	// #1
    a260:	bl	9040 <PyTuple_Pack@plt>
    a264:	cbz	x0, a2a4 <PyInit__testcapi@@Base+0x10e8>
    a268:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a26c:	ldr	x8, [x8, #3528]
    a270:	mov	x19, x0
    a274:	mov	x1, x19
    a278:	ldr	x9, [x8, #96]
    a27c:	ldr	x0, [x8]
    a280:	blr	x9
    a284:	ldr	x8, [x19]
    a288:	mov	x20, x0
    a28c:	subs	x8, x8, #0x1
    a290:	str	x8, [x19]
    a294:	b.ne	a2a8 <PyInit__testcapi@@Base+0x10ec>  // b.any
    a298:	mov	x0, x19
    a29c:	bl	8560 <_Py_Dealloc@plt>
    a2a0:	b	a2a8 <PyInit__testcapi@@Base+0x10ec>
    a2a4:	mov	x20, xzr
    a2a8:	mov	x0, x20
    a2ac:	ldp	x20, x19, [sp, #32]
    a2b0:	ldp	x29, x30, [sp, #16]
    a2b4:	add	sp, sp, #0x30
    a2b8:	ret
    a2bc:	sub	sp, sp, #0x40
    a2c0:	stp	x29, x30, [sp, #32]
    a2c4:	stp	x20, x19, [sp, #48]
    a2c8:	add	x29, sp, #0x20
    a2cc:	stur	xzr, [x29, #-8]
    a2d0:	str	xzr, [sp, #16]
    a2d4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a2d8:	ldr	x8, [x8, #4016]
    a2dc:	mov	x0, x1
    a2e0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a2e4:	add	x1, x1, #0x354
    a2e8:	add	x2, sp, #0x10
    a2ec:	add	x3, sp, #0x8
    a2f0:	sub	x4, x29, #0x8
    a2f4:	sub	x5, x29, #0x4
    a2f8:	str	x8, [sp, #8]
    a2fc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a300:	cbz	w0, a36c <PyInit__testcapi@@Base+0x11b0>
    a304:	ldur	w8, [x29, #-8]
    a308:	ldr	x1, [sp, #16]
    a30c:	cbz	w8, a320 <PyInit__testcapi@@Base+0x1164>
    a310:	ldr	x2, [sp, #8]
    a314:	mov	w0, #0x2                   	// #2
    a318:	bl	9040 <PyTuple_Pack@plt>
    a31c:	b	a328 <PyInit__testcapi@@Base+0x116c>
    a320:	mov	w0, #0x1                   	// #1
    a324:	bl	9040 <PyTuple_Pack@plt>
    a328:	mov	x19, x0
    a32c:	cbz	x0, a36c <PyInit__testcapi@@Base+0x11b0>
    a330:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a334:	ldr	x8, [x8, #3528]
    a338:	mov	x1, x19
    a33c:	mov	x2, xzr
    a340:	ldr	x9, [x8, #88]
    a344:	ldr	x0, [x8, #8]
    a348:	blr	x9
    a34c:	ldr	x8, [x19]
    a350:	mov	x20, x0
    a354:	subs	x8, x8, #0x1
    a358:	str	x8, [x19]
    a35c:	b.ne	a370 <PyInit__testcapi@@Base+0x11b4>  // b.any
    a360:	mov	x0, x19
    a364:	bl	8560 <_Py_Dealloc@plt>
    a368:	b	a370 <PyInit__testcapi@@Base+0x11b4>
    a36c:	mov	x20, xzr
    a370:	mov	x0, x20
    a374:	ldp	x20, x19, [sp, #48]
    a378:	ldp	x29, x30, [sp, #32]
    a37c:	add	sp, sp, #0x40
    a380:	ret
    a384:	stp	x29, x30, [sp, #-48]!
    a388:	str	x21, [sp, #16]
    a38c:	stp	x20, x19, [sp, #32]
    a390:	mov	x29, sp
    a394:	mov	w0, #0x1e                  	// #30
    a398:	bl	82a0 <PyList_New@plt>
    a39c:	cbz	x0, a460 <PyInit__testcapi@@Base+0x12a4>
    a3a0:	mov	x19, x0
    a3a4:	mov	x20, xzr
    a3a8:	mov	x0, x20
    a3ac:	bl	8840 <PyLong_FromLong@plt>
    a3b0:	cbz	x0, a444 <PyInit__testcapi@@Base+0x1288>
    a3b4:	ldr	x8, [x19, #24]
    a3b8:	str	x0, [x8, x20, lsl #3]
    a3bc:	add	x20, x20, #0x1
    a3c0:	cmp	x20, #0x1e
    a3c4:	b.ne	a3a8 <PyInit__testcapi@@Base+0x11ec>  // b.any
    a3c8:	mov	x0, x19
    a3cc:	bl	8a20 <PyList_Reverse@plt>
    a3d0:	cbnz	w0, a444 <PyInit__testcapi@@Base+0x1288>
    a3d4:	mov	x20, xzr
    a3d8:	mov	w21, #0x1d                  	// #29
    a3dc:	ldr	x8, [x19, #24]
    a3e0:	ldr	x0, [x8, x20]
    a3e4:	bl	89a0 <PyLong_AsLong@plt>
    a3e8:	cmp	x21, x0
    a3ec:	b.ne	a430 <PyInit__testcapi@@Base+0x1274>  // b.any
    a3f0:	sub	x21, x21, #0x1
    a3f4:	cmn	x21, #0x1
    a3f8:	add	x20, x20, #0x8
    a3fc:	b.ne	a3dc <PyInit__testcapi@@Base+0x1220>  // b.any
    a400:	ldr	x8, [x19]
    a404:	subs	x8, x8, #0x1
    a408:	str	x8, [x19]
    a40c:	b.ne	a418 <PyInit__testcapi@@Base+0x125c>  // b.any
    a410:	mov	x0, x19
    a414:	bl	8560 <_Py_Dealloc@plt>
    a418:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a41c:	ldr	x0, [x0, #4016]
    a420:	ldr	x8, [x0]
    a424:	add	x8, x8, #0x1
    a428:	str	x8, [x0]
    a42c:	b	a460 <PyInit__testcapi@@Base+0x12a4>
    a430:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a434:	ldr	x0, [x8, #3520]
    a438:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a43c:	add	x1, x1, #0x35a
    a440:	bl	8670 <PyErr_SetString@plt>
    a444:	ldr	x8, [x19]
    a448:	subs	x8, x8, #0x1
    a44c:	str	x8, [x19]
    a450:	b.ne	a45c <PyInit__testcapi@@Base+0x12a0>  // b.any
    a454:	mov	x0, x19
    a458:	bl	8560 <_Py_Dealloc@plt>
    a45c:	mov	x0, xzr
    a460:	ldp	x20, x19, [sp, #32]
    a464:	ldr	x21, [sp, #16]
    a468:	ldp	x29, x30, [sp], #48
    a46c:	ret
    a470:	sub	sp, sp, #0x50
    a474:	stp	x29, x30, [sp, #16]
    a478:	str	x23, [sp, #32]
    a47c:	stp	x22, x21, [sp, #48]
    a480:	stp	x20, x19, [sp, #64]
    a484:	add	x29, sp, #0x10
    a488:	mov	x23, xzr
    a48c:	str	xzr, [x29, #24]
    a490:	bl	8c20 <PyDict_New@plt>
    a494:	cbz	x0, a5b0 <PyInit__testcapi@@Base+0x13f4>
    a498:	mov	x19, x0
    a49c:	mov	x22, x23
    a4a0:	cbz	x23, a4fc <PyInit__testcapi@@Base+0x1340>
    a4a4:	mov	x20, xzr
    a4a8:	mov	x0, x20
    a4ac:	bl	8840 <PyLong_FromLong@plt>
    a4b0:	mov	x21, x0
    a4b4:	cbz	x0, a5a8 <PyInit__testcapi@@Base+0x13ec>
    a4b8:	mov	x0, x19
    a4bc:	mov	x1, x21
    a4c0:	mov	x2, x21
    a4c4:	bl	8d80 <PyDict_SetItem@plt>
    a4c8:	ldr	x8, [x21]
    a4cc:	mov	w22, w0
    a4d0:	subs	x8, x8, #0x1
    a4d4:	str	x8, [x21]
    a4d8:	b.ne	a4e4 <PyInit__testcapi@@Base+0x1328>  // b.any
    a4dc:	mov	x0, x21
    a4e0:	bl	8560 <_Py_Dealloc@plt>
    a4e4:	tbnz	w22, #31, a5a8 <PyInit__testcapi@@Base+0x13ec>
    a4e8:	add	x20, x20, #0x1
    a4ec:	cmp	x23, x20
    a4f0:	b.ne	a4a8 <PyInit__testcapi@@Base+0x12ec>  // b.any
    a4f4:	mov	x22, x23
    a4f8:	str	x21, [sp, #8]
    a4fc:	add	x1, x29, #0x18
    a500:	mov	x2, sp
    a504:	add	x3, sp, #0x8
    a508:	mov	x0, x19
    a50c:	bl	8c60 <PyDict_Next@plt>
    a510:	cbz	w0, a568 <PyInit__testcapi@@Base+0x13ac>
    a514:	ldr	x0, [sp, #8]
    a518:	bl	89a0 <PyLong_AsLong@plt>
    a51c:	add	w8, w0, #0x1
    a520:	sxtw	x0, w8
    a524:	bl	8840 <PyLong_FromLong@plt>
    a528:	cbz	x0, a5ac <PyInit__testcapi@@Base+0x13f0>
    a52c:	ldr	x1, [sp]
    a530:	mov	x20, x0
    a534:	mov	x0, x19
    a538:	mov	x2, x20
    a53c:	bl	8d80 <PyDict_SetItem@plt>
    a540:	ldr	x8, [x20]
    a544:	mov	w21, w0
    a548:	subs	x8, x8, #0x1
    a54c:	str	x8, [x20]
    a550:	b.ne	a55c <PyInit__testcapi@@Base+0x13a0>  // b.any
    a554:	mov	x0, x20
    a558:	bl	8560 <_Py_Dealloc@plt>
    a55c:	sub	x22, x22, #0x1
    a560:	tbz	w21, #31, a4fc <PyInit__testcapi@@Base+0x1340>
    a564:	b	a5ac <PyInit__testcapi@@Base+0x13f0>
    a568:	ldr	x8, [x19]
    a56c:	subs	x8, x8, #0x1
    a570:	str	x8, [x19]
    a574:	b.ne	a580 <PyInit__testcapi@@Base+0x13c4>  // b.any
    a578:	mov	x0, x19
    a57c:	bl	8560 <_Py_Dealloc@plt>
    a580:	cbnz	x22, a5c8 <PyInit__testcapi@@Base+0x140c>
    a584:	add	x23, x23, #0x1
    a588:	cmp	x23, #0xc8
    a58c:	b.ne	a48c <PyInit__testcapi@@Base+0x12d0>  // b.any
    a590:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a594:	ldr	x0, [x0, #4016]
    a598:	ldr	x8, [x0]
    a59c:	add	x8, x8, #0x1
    a5a0:	str	x8, [x0]
    a5a4:	b	a5b0 <PyInit__testcapi@@Base+0x13f4>
    a5a8:	str	x21, [sp, #8]
    a5ac:	mov	x0, xzr
    a5b0:	ldp	x20, x19, [sp, #64]
    a5b4:	ldp	x22, x21, [sp, #48]
    a5b8:	ldr	x23, [sp, #32]
    a5bc:	ldp	x29, x30, [sp, #16]
    a5c0:	add	sp, sp, #0x50
    a5c4:	ret
    a5c8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a5cc:	ldr	x0, [x8, #3520]
    a5d0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a5d4:	add	x1, x1, #0x37c
    a5d8:	bl	8670 <PyErr_SetString@plt>
    a5dc:	b	a5ac <PyInit__testcapi@@Base+0x13f0>
    a5e0:	sub	sp, sp, #0x30
    a5e4:	stp	x29, x30, [sp, #32]
    a5e8:	add	x29, sp, #0x20
    a5ec:	mov	x0, x1
    a5f0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a5f4:	add	x1, x1, #0x3ac
    a5f8:	sub	x2, x29, #0x8
    a5fc:	add	x3, sp, #0x10
    a600:	add	x4, sp, #0x8
    a604:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a608:	cbz	w0, a63c <PyInit__testcapi@@Base+0x1480>
    a60c:	ldur	x0, [x29, #-8]
    a610:	ldp	x2, x1, [sp, #8]
    a614:	bl	89d0 <_PyDict_GetItem_KnownHash@plt>
    a618:	cbz	x0, a62c <PyInit__testcapi@@Base+0x1470>
    a61c:	ldr	x8, [x0]
    a620:	add	x8, x8, #0x1
    a624:	str	x8, [x0]
    a628:	b	a640 <PyInit__testcapi@@Base+0x1484>
    a62c:	bl	8980 <PyErr_Occurred@plt>
    a630:	cbnz	x0, a63c <PyInit__testcapi@@Base+0x1480>
    a634:	ldr	x0, [sp, #16]
    a638:	bl	8650 <_PyErr_SetKeyError@plt>
    a63c:	mov	x0, xzr
    a640:	ldp	x29, x30, [sp, #32]
    a644:	add	sp, sp, #0x30
    a648:	ret
    a64c:	stp	x29, x30, [sp, #-16]!
    a650:	mov	x29, sp
    a654:	ldr	x8, [x1, #8]
    a658:	ldrb	w9, [x8, #171]
    a65c:	tbnz	w9, #5, a688 <PyInit__testcapi@@Base+0x14cc>
    a660:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a664:	ldr	x9, [x9, #3952]
    a668:	ldr	x2, [x8, #24]
    a66c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a670:	add	x1, x1, #0x3c7
    a674:	ldr	x0, [x9]
    a678:	bl	8e60 <PyErr_Format@plt>
    a67c:	mov	x0, xzr
    a680:	ldp	x29, x30, [sp], #16
    a684:	ret
    a688:	ldr	x8, [x1, #40]
    a68c:	cmp	x8, #0x0
    a690:	cset	w0, ne  // ne = any
    a694:	ldp	x29, x30, [sp], #16
    a698:	b	88d0 <PyBool_FromLong@plt>
    a69c:	stp	x29, x30, [sp, #-32]!
    a6a0:	stp	x20, x19, [sp, #16]
    a6a4:	mov	x29, sp
    a6a8:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de44>
    a6ac:	ldr	x8, [x20, #2216]
    a6b0:	cbz	x8, a6cc <PyInit__testcapi@@Base+0x1510>
    a6b4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a6b8:	ldr	x0, [x0, #4016]
    a6bc:	ldr	x8, [x0]
    a6c0:	add	x8, x8, #0x1
    a6c4:	str	x8, [x0]
    a6c8:	b	a734 <PyInit__testcapi@@Base+0x1578>
    a6cc:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    a6d0:	add	x0, x0, #0x7a0
    a6d4:	bl	8cf0 <_PyObject_New@plt>
    a6d8:	cbz	x0, a718 <PyInit__testcapi@@Base+0x155c>
    a6dc:	ldr	x8, [x20, #2216]
    a6e0:	mov	x19, x0
    a6e4:	cbz	x8, a740 <PyInit__testcapi@@Base+0x1584>
    a6e8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a6ec:	ldr	x0, [x8, #3520]
    a6f0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a6f4:	add	x1, x1, #0x430
    a6f8:	bl	8670 <PyErr_SetString@plt>
    a6fc:	ldr	x8, [x19]
    a700:	subs	x8, x8, #0x1
    a704:	str	x8, [x19]
    a708:	b.ne	a730 <PyInit__testcapi@@Base+0x1574>  // b.any
    a70c:	mov	x0, x19
    a710:	bl	8560 <_Py_Dealloc@plt>
    a714:	b	a730 <PyInit__testcapi@@Base+0x1574>
    a718:	bl	88c0 <PyErr_Clear@plt>
    a71c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a720:	ldr	x0, [x8, #3520]
    a724:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a728:	add	x1, x1, #0x3fc
    a72c:	bl	8670 <PyErr_SetString@plt>
    a730:	mov	x0, xzr
    a734:	ldp	x20, x19, [sp, #16]
    a738:	ldp	x29, x30, [sp], #32
    a73c:	ret
    a740:	mov	x0, x19
    a744:	bl	8b00 <PyObject_Hash@plt>
    a748:	cmn	x0, #0x1
    a74c:	b.eq	a788 <PyInit__testcapi@@Base+0x15cc>  // b.none
    a750:	ldr	x8, [x20, #2216]
    a754:	cbz	x8, a7a8 <PyInit__testcapi@@Base+0x15ec>
    a758:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a75c:	ldr	x9, [x9, #4008]
    a760:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    a764:	ldr	x8, [x8, #2072]
    a768:	ldr	x9, [x9, #120]
    a76c:	cmp	x8, x9
    a770:	b.eq	a7bc <PyInit__testcapi@@Base+0x1600>  // b.none
    a774:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a778:	ldr	x0, [x8, #3520]
    a77c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a780:	add	x1, x1, #0x4d3
    a784:	b	a6f8 <PyInit__testcapi@@Base+0x153c>
    a788:	bl	8980 <PyErr_Occurred@plt>
    a78c:	cbz	x0, a750 <PyInit__testcapi@@Base+0x1594>
    a790:	bl	88c0 <PyErr_Clear@plt>
    a794:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a798:	ldr	x0, [x8, #3520]
    a79c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a7a0:	add	x1, x1, #0x466
    a7a4:	b	a6f8 <PyInit__testcapi@@Base+0x153c>
    a7a8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a7ac:	ldr	x0, [x8, #3520]
    a7b0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a7b4:	add	x1, x1, #0x498
    a7b8:	b	a6f8 <PyInit__testcapi@@Base+0x153c>
    a7bc:	ldr	x8, [x19]
    a7c0:	subs	x8, x8, #0x1
    a7c4:	str	x8, [x19]
    a7c8:	b.ne	a6b4 <PyInit__testcapi@@Base+0x14f8>  // b.any
    a7cc:	mov	x0, x19
    a7d0:	bl	8560 <_Py_Dealloc@plt>
    a7d4:	b	a6b4 <PyInit__testcapi@@Base+0x14f8>
    a7d8:	stp	x29, x30, [sp, #-80]!
    a7dc:	stp	x26, x25, [sp, #16]
    a7e0:	stp	x24, x23, [sp, #32]
    a7e4:	stp	x22, x21, [sp, #48]
    a7e8:	stp	x20, x19, [sp, #64]
    a7ec:	mov	x29, sp
    a7f0:	mov	w24, #0xaaab                	// #43691
    a7f4:	mov	w22, wzr
    a7f8:	mov	w23, #0x1                   	// #1
    a7fc:	movk	w24, #0xaaaa, lsl #16
    a800:	mov	w25, wzr
    a804:	neg	x26, x23
    a808:	umull	x8, w25, w24
    a80c:	lsr	x8, x8, #33
    a810:	add	w8, w8, w8, lsl #1
    a814:	cmp	w25, #0x3
    a818:	mvn	w8, w8
    a81c:	csel	x9, x23, x26, cc  // cc = lo, ul, last
    a820:	add	w8, w8, w25
    a824:	add	x19, x9, w8, sxtw
    a828:	mov	x0, x19
    a82c:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    a830:	cbz	x0, a924 <PyInit__testcapi@@Base+0x1768>
    a834:	mov	x20, x0
    a838:	bl	8c50 <PyLong_AsUnsignedLong@plt>
    a83c:	mov	x21, x0
    a840:	cmn	x0, #0x1
    a844:	b.ne	a850 <PyInit__testcapi@@Base+0x1694>  // b.any
    a848:	bl	8980 <PyErr_Occurred@plt>
    a84c:	cbnz	x0, a9b4 <PyInit__testcapi@@Base+0x17f8>
    a850:	cmp	x21, x19
    a854:	b.ne	a948 <PyInit__testcapi@@Base+0x178c>  // b.any
    a858:	ldr	x8, [x20]
    a85c:	subs	x8, x8, #0x1
    a860:	str	x8, [x20]
    a864:	b.ne	a870 <PyInit__testcapi@@Base+0x16b4>  // b.any
    a868:	mov	x0, x20
    a86c:	bl	8560 <_Py_Dealloc@plt>
    a870:	mov	x0, x19
    a874:	bl	8840 <PyLong_FromLong@plt>
    a878:	cbz	x0, a96c <PyInit__testcapi@@Base+0x17b0>
    a87c:	mov	x20, x0
    a880:	bl	89a0 <PyLong_AsLong@plt>
    a884:	mov	x21, x0
    a888:	cmn	x0, #0x1
    a88c:	b.ne	a898 <PyInit__testcapi@@Base+0x16dc>  // b.any
    a890:	bl	8980 <PyErr_Occurred@plt>
    a894:	cbnz	x0, a9d8 <PyInit__testcapi@@Base+0x181c>
    a898:	cmp	x21, x19
    a89c:	b.ne	a990 <PyInit__testcapi@@Base+0x17d4>  // b.any
    a8a0:	ldr	x8, [x20]
    a8a4:	subs	x8, x8, #0x1
    a8a8:	str	x8, [x20]
    a8ac:	b.ne	a8b8 <PyInit__testcapi@@Base+0x16fc>  // b.any
    a8b0:	mov	x0, x20
    a8b4:	bl	8560 <_Py_Dealloc@plt>
    a8b8:	add	w25, w25, #0x1
    a8bc:	cmp	w25, #0x6
    a8c0:	b.ne	a808 <PyInit__testcapi@@Base+0x164c>  // b.any
    a8c4:	add	w22, w22, #0x1
    a8c8:	cmp	w22, #0x41
    a8cc:	lsl	x23, x23, #1
    a8d0:	b.ne	a800 <PyInit__testcapi@@Base+0x1644>  // b.any
    a8d4:	mov	w0, #0x1                   	// #1
    a8d8:	bl	8840 <PyLong_FromLong@plt>
    a8dc:	mov	x19, x0
    a8e0:	cbz	x0, aa1c <PyInit__testcapi@@Base+0x1860>
    a8e4:	mov	x0, x19
    a8e8:	bl	8270 <PyNumber_Negative@plt>
    a8ec:	cbz	x0, acbc <PyInit__testcapi@@Base+0x1b00>
    a8f0:	mov	x20, x0
    a8f4:	bl	8c50 <PyLong_AsUnsignedLong@plt>
    a8f8:	cmn	x0, #0x1
    a8fc:	b.eq	aa44 <PyInit__testcapi@@Base+0x1888>  // b.none
    a900:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a904:	ldr	x0, [x8, #3520]
    a908:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a90c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a910:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a914:	add	x1, x1, #0x842
    a918:	add	x2, x2, #0x7d8
    a91c:	add	x3, x3, #0x5ab
    a920:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    a924:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a928:	ldr	x0, [x8, #3520]
    a92c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a930:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a934:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a938:	add	x1, x1, #0x842
    a93c:	add	x2, x2, #0x7d8
    a940:	add	x3, x3, #0x508
    a944:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    a948:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a94c:	ldr	x0, [x8, #3520]
    a950:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a954:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a958:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a95c:	add	x1, x1, #0x842
    a960:	add	x2, x2, #0x7d8
    a964:	add	x3, x3, #0x546
    a968:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    a96c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a970:	ldr	x0, [x8, #3520]
    a974:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a978:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a97c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a980:	add	x1, x1, #0x842
    a984:	add	x2, x2, #0x7d8
    a988:	add	x3, x3, #0x50a
    a98c:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    a990:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a994:	ldr	x0, [x8, #3520]
    a998:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a99c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a9a0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a9a4:	add	x1, x1, #0x842
    a9a8:	add	x2, x2, #0x7d8
    a9ac:	add	x3, x3, #0x548
    a9b0:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    a9b4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a9b8:	ldr	x0, [x8, #3520]
    a9bc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a9c0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a9c4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a9c8:	add	x1, x1, #0x842
    a9cc:	add	x2, x2, #0x7d8
    a9d0:	add	x3, x3, #0x528
    a9d4:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    a9d8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a9dc:	ldr	x0, [x8, #3520]
    a9e0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a9e4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a9e8:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a9ec:	add	x1, x1, #0x842
    a9f0:	add	x2, x2, #0x7d8
    a9f4:	add	x3, x3, #0x52a
    a9f8:	bl	8e60 <PyErr_Format@plt>
    a9fc:	mov	x19, xzr
    aa00:	mov	x0, x19
    aa04:	ldp	x20, x19, [sp, #64]
    aa08:	ldp	x22, x21, [sp, #48]
    aa0c:	ldp	x24, x23, [sp, #32]
    aa10:	ldp	x26, x25, [sp, #16]
    aa14:	ldp	x29, x30, [sp], #80
    aa18:	ret
    aa1c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    aa20:	ldr	x0, [x8, #3520]
    aa24:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    aa28:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    aa2c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    aa30:	add	x1, x1, #0x842
    aa34:	add	x2, x2, #0x7d8
    aa38:	add	x3, x3, #0x55f
    aa3c:	bl	8e60 <PyErr_Format@plt>
    aa40:	b	aa00 <PyInit__testcapi@@Base+0x1844>
    aa44:	bl	8980 <PyErr_Occurred@plt>
    aa48:	cbz	x0, a900 <PyInit__testcapi@@Base+0x1744>
    aa4c:	adrp	x22, 26000 <PyInit__testcapi@@Base+0x1ce44>
    aa50:	ldr	x22, [x22, #4000]
    aa54:	ldr	x0, [x22]
    aa58:	bl	8760 <PyErr_ExceptionMatches@plt>
    aa5c:	cbz	w0, aaec <PyInit__testcapi@@Base+0x1930>
    aa60:	bl	88c0 <PyErr_Clear@plt>
    aa64:	ldr	x8, [x20]
    aa68:	subs	x8, x8, #0x1
    aa6c:	str	x8, [x20]
    aa70:	b.ne	aa7c <PyInit__testcapi@@Base+0x18c0>  // b.any
    aa74:	mov	x0, x20
    aa78:	bl	8560 <_Py_Dealloc@plt>
    aa7c:	mov	w0, #0x40                  	// #64
    aa80:	bl	8840 <PyLong_FromLong@plt>
    aa84:	cbz	x0, ab10 <PyInit__testcapi@@Base+0x1954>
    aa88:	mov	x21, x0
    aa8c:	mov	x0, x19
    aa90:	mov	x1, x21
    aa94:	bl	8390 <PyNumber_Lshift@plt>
    aa98:	ldr	x8, [x21]
    aa9c:	mov	x20, x0
    aaa0:	subs	x8, x8, #0x1
    aaa4:	str	x8, [x21]
    aaa8:	b.ne	aab4 <PyInit__testcapi@@Base+0x18f8>  // b.any
    aaac:	mov	x0, x21
    aab0:	bl	8560 <_Py_Dealloc@plt>
    aab4:	cbz	x20, ab34 <PyInit__testcapi@@Base+0x1978>
    aab8:	mov	x0, x20
    aabc:	bl	8c50 <PyLong_AsUnsignedLong@plt>
    aac0:	cmn	x0, #0x1
    aac4:	b.eq	ab58 <PyInit__testcapi@@Base+0x199c>  // b.none
    aac8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    aacc:	ldr	x0, [x8, #3520]
    aad0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    aad4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    aad8:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    aadc:	add	x1, x1, #0x842
    aae0:	add	x2, x2, #0x7d8
    aae4:	add	x3, x3, #0x63c
    aae8:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    aaec:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    aaf0:	ldr	x0, [x8, #3520]
    aaf4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    aaf8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    aafc:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ab00:	add	x1, x1, #0x842
    ab04:	add	x2, x2, #0x7d8
    ab08:	add	x3, x3, #0x5d4
    ab0c:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    ab10:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ab14:	ldr	x0, [x8, #3520]
    ab18:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ab1c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ab20:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ab24:	add	x1, x1, #0x842
    ab28:	add	x2, x2, #0x7d8
    ab2c:	add	x3, x3, #0x55f
    ab30:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    ab34:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ab38:	ldr	x0, [x8, #3520]
    ab3c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ab40:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ab44:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ab48:	add	x1, x1, #0x842
    ab4c:	add	x2, x2, #0x7d8
    ab50:	add	x3, x3, #0x617
    ab54:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    ab58:	bl	8980 <PyErr_Occurred@plt>
    ab5c:	cbz	x0, aac8 <PyInit__testcapi@@Base+0x190c>
    ab60:	ldr	x0, [x22]
    ab64:	mov	x23, x22
    ab68:	bl	8760 <PyErr_ExceptionMatches@plt>
    ab6c:	cbz	w0, abd4 <PyInit__testcapi@@Base+0x1a18>
    ab70:	bl	88c0 <PyErr_Clear@plt>
    ab74:	mov	x0, x20
    ab78:	mov	x1, x19
    ab7c:	bl	8b60 <PyNumber_Rshift@plt>
    ab80:	ldr	x8, [x20]
    ab84:	mov	x21, x0
    ab88:	subs	x8, x8, #0x1
    ab8c:	str	x8, [x20]
    ab90:	b.ne	ab9c <PyInit__testcapi@@Base+0x19e0>  // b.any
    ab94:	mov	x0, x20
    ab98:	bl	8560 <_Py_Dealloc@plt>
    ab9c:	cbz	x21, abf8 <PyInit__testcapi@@Base+0x1a3c>
    aba0:	mov	x0, x21
    aba4:	bl	89a0 <PyLong_AsLong@plt>
    aba8:	cmn	x0, #0x1
    abac:	b.eq	ac1c <PyInit__testcapi@@Base+0x1a60>  // b.none
    abb0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    abb4:	ldr	x0, [x8, #3520]
    abb8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    abbc:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    abc0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    abc4:	add	x1, x1, #0x842
    abc8:	add	x2, x2, #0x7d8
    abcc:	add	x3, x3, #0x6d9
    abd0:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    abd4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    abd8:	ldr	x0, [x8, #3520]
    abdc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    abe0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    abe4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    abe8:	add	x1, x1, #0x842
    abec:	add	x2, x2, #0x7d8
    abf0:	add	x3, x3, #0x66b
    abf4:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    abf8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    abfc:	ldr	x0, [x8, #3520]
    ac00:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ac04:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ac08:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ac0c:	add	x1, x1, #0x842
    ac10:	add	x2, x2, #0x7d8
    ac14:	add	x3, x3, #0x6b4
    ac18:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    ac1c:	bl	8980 <PyErr_Occurred@plt>
    ac20:	cbz	x0, abb0 <PyInit__testcapi@@Base+0x19f4>
    ac24:	ldr	x0, [x23]
    ac28:	bl	8760 <PyErr_ExceptionMatches@plt>
    ac2c:	cbz	w0, ace0 <PyInit__testcapi@@Base+0x1b24>
    ac30:	bl	88c0 <PyErr_Clear@plt>
    ac34:	mov	x0, x21
    ac38:	bl	8270 <PyNumber_Negative@plt>
    ac3c:	ldr	x8, [x21]
    ac40:	mov	x22, x0
    ac44:	subs	x8, x8, #0x1
    ac48:	str	x8, [x21]
    ac4c:	b.ne	ac58 <PyInit__testcapi@@Base+0x1a9c>  // b.any
    ac50:	mov	x0, x21
    ac54:	bl	8560 <_Py_Dealloc@plt>
    ac58:	cbz	x22, acbc <PyInit__testcapi@@Base+0x1b00>
    ac5c:	mov	x0, x22
    ac60:	mov	x1, x19
    ac64:	bl	8fe0 <PyNumber_Subtract@plt>
    ac68:	ldr	x8, [x22]
    ac6c:	mov	x20, x0
    ac70:	subs	x8, x8, #0x1
    ac74:	str	x8, [x22]
    ac78:	b.ne	ac84 <PyInit__testcapi@@Base+0x1ac8>  // b.any
    ac7c:	mov	x0, x22
    ac80:	bl	8560 <_Py_Dealloc@plt>
    ac84:	cbz	x20, ad04 <PyInit__testcapi@@Base+0x1b48>
    ac88:	mov	x0, x20
    ac8c:	bl	89a0 <PyLong_AsLong@plt>
    ac90:	cmn	x0, #0x1
    ac94:	b.eq	ad28 <PyInit__testcapi@@Base+0x1b6c>  // b.none
    ac98:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ac9c:	ldr	x0, [x8, #3520]
    aca0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    aca4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    aca8:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    acac:	add	x1, x1, #0x842
    acb0:	add	x2, x2, #0x7d8
    acb4:	add	x3, x3, #0x770
    acb8:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    acbc:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    acc0:	ldr	x0, [x8, #3520]
    acc4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    acc8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    accc:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    acd0:	add	x1, x1, #0x842
    acd4:	add	x2, x2, #0x7d8
    acd8:	add	x3, x3, #0x584
    acdc:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    ace0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ace4:	ldr	x0, [x8, #3520]
    ace8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    acec:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    acf0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    acf4:	add	x1, x1, #0x842
    acf8:	add	x2, x2, #0x7d8
    acfc:	add	x3, x3, #0x704
    ad00:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    ad04:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ad08:	ldr	x0, [x8, #3520]
    ad0c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ad10:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ad14:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ad18:	add	x1, x1, #0x842
    ad1c:	add	x2, x2, #0x7d8
    ad20:	add	x3, x3, #0x749
    ad24:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    ad28:	bl	8980 <PyErr_Occurred@plt>
    ad2c:	cbz	x0, ac98 <PyInit__testcapi@@Base+0x1adc>
    ad30:	ldr	x0, [x23]
    ad34:	bl	8760 <PyErr_ExceptionMatches@plt>
    ad38:	cbz	w0, adb4 <PyInit__testcapi@@Base+0x1bf8>
    ad3c:	bl	88c0 <PyErr_Clear@plt>
    ad40:	ldr	x8, [x20]
    ad44:	subs	x8, x8, #0x1
    ad48:	str	x8, [x20]
    ad4c:	b.ne	ad58 <PyInit__testcapi@@Base+0x1b9c>  // b.any
    ad50:	mov	x0, x20
    ad54:	bl	8560 <_Py_Dealloc@plt>
    ad58:	ldr	x8, [x19]
    ad5c:	subs	x8, x8, #0x1
    ad60:	str	x8, [x19]
    ad64:	b.ne	ad70 <PyInit__testcapi@@Base+0x1bb4>  // b.any
    ad68:	mov	x0, x19
    ad6c:	bl	8560 <_Py_Dealloc@plt>
    ad70:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ad74:	ldr	x0, [x0, #4016]
    ad78:	ldr	x8, [x0]
    ad7c:	add	x8, x8, #0x1
    ad80:	str	x8, [x0]
    ad84:	bl	89a0 <PyLong_AsLong@plt>
    ad88:	cmn	x0, #0x1
    ad8c:	b.eq	add8 <PyInit__testcapi@@Base+0x1c1c>  // b.none
    ad90:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ad94:	ldr	x0, [x8, #3520]
    ad98:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ad9c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ada0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ada4:	add	x1, x1, #0x842
    ada8:	add	x2, x2, #0x7d8
    adac:	add	x3, x3, #0x7e6
    adb0:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    adb4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    adb8:	ldr	x0, [x8, #3520]
    adbc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    adc0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    adc4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    adc8:	add	x1, x1, #0x842
    adcc:	add	x2, x2, #0x7d8
    add0:	add	x3, x3, #0x79e
    add4:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    add8:	bl	8980 <PyErr_Occurred@plt>
    addc:	cbz	x0, ad90 <PyInit__testcapi@@Base+0x1bd4>
    ade0:	adrp	x20, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ade4:	ldr	x20, [x20, #3952]
    ade8:	ldr	x0, [x20]
    adec:	bl	8760 <PyErr_ExceptionMatches@plt>
    adf0:	cbz	w0, ae50 <PyInit__testcapi@@Base+0x1c94>
    adf4:	bl	88c0 <PyErr_Clear@plt>
    adf8:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    adfc:	ldr	x19, [x19, #4016]
    ae00:	mov	x0, x19
    ae04:	bl	8c50 <PyLong_AsUnsignedLong@plt>
    ae08:	cmn	x0, #0x1
    ae0c:	b.ne	ad90 <PyInit__testcapi@@Base+0x1bd4>  // b.any
    ae10:	bl	8980 <PyErr_Occurred@plt>
    ae14:	cbz	x0, ad90 <PyInit__testcapi@@Base+0x1bd4>
    ae18:	ldr	x0, [x20]
    ae1c:	bl	8760 <PyErr_ExceptionMatches@plt>
    ae20:	cbz	w0, ae50 <PyInit__testcapi@@Base+0x1c94>
    ae24:	bl	88c0 <PyErr_Clear@plt>
    ae28:	ldr	x8, [x19]
    ae2c:	subs	x8, x8, #0x1
    ae30:	str	x8, [x19]
    ae34:	b.ne	ae44 <PyInit__testcapi@@Base+0x1c88>  // b.any
    ae38:	mov	x0, x19
    ae3c:	bl	8560 <_Py_Dealloc@plt>
    ae40:	ldr	x8, [x19]
    ae44:	add	x8, x8, #0x1
    ae48:	str	x8, [x19]
    ae4c:	b	aa00 <PyInit__testcapi@@Base+0x1844>
    ae50:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ae54:	ldr	x0, [x8, #3520]
    ae58:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ae5c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ae60:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ae64:	add	x1, x1, #0x842
    ae68:	add	x2, x2, #0x7d8
    ae6c:	add	x3, x3, #0x809
    ae70:	b	a9f8 <PyInit__testcapi@@Base+0x183c>
    ae74:	stp	x29, x30, [sp, #-32]!
    ae78:	str	x19, [sp, #16]
    ae7c:	mov	x29, sp
    ae80:	mov	x0, xzr
    ae84:	bl	8840 <PyLong_FromLong@plt>
    ae88:	ldr	x8, [x0]
    ae8c:	cmp	x0, #0x0
    ae90:	mov	w9, #0x1                   	// #1
    ae94:	cinc	x9, x9, ne  // ne = any
    ae98:	add	x8, x8, x9
    ae9c:	mov	x19, x0
    aea0:	subs	x8, x8, #0x1
    aea4:	str	x8, [x0]
    aea8:	b.ne	aeb8 <PyInit__testcapi@@Base+0x1cfc>  // b.any
    aeac:	mov	x0, x19
    aeb0:	bl	8560 <_Py_Dealloc@plt>
    aeb4:	ldr	x8, [x19]
    aeb8:	subs	x8, x8, #0x1
    aebc:	str	x8, [x19]
    aec0:	b.ne	aed0 <PyInit__testcapi@@Base+0x1d14>  // b.any
    aec4:	mov	x0, x19
    aec8:	bl	8560 <_Py_Dealloc@plt>
    aecc:	ldr	x8, [x19]
    aed0:	subs	x8, x8, #0x1
    aed4:	str	x8, [x19]
    aed8:	b.ne	aee4 <PyInit__testcapi@@Base+0x1d28>  // b.any
    aedc:	mov	x0, x19
    aee0:	bl	8560 <_Py_Dealloc@plt>
    aee4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    aee8:	ldr	x0, [x0, #4016]
    aeec:	ldr	x19, [sp, #16]
    aef0:	ldr	x8, [x0]
    aef4:	add	x8, x8, #0x1
    aef8:	str	x8, [x0]
    aefc:	ldp	x29, x30, [sp], #32
    af00:	ret
    af04:	stp	x29, x30, [sp, #-32]!
    af08:	str	x19, [sp, #16]
    af0c:	mov	x29, sp
    af10:	mov	x0, xzr
    af14:	bl	8840 <PyLong_FromLong@plt>
    af18:	ldr	x8, [x0]
    af1c:	mov	x19, x0
    af20:	adds	x8, x8, #0x1
    af24:	str	x8, [x0]
    af28:	b.cc	af38 <PyInit__testcapi@@Base+0x1d7c>  // b.lo, b.ul, b.last
    af2c:	mov	x0, x19
    af30:	bl	8560 <_Py_Dealloc@plt>
    af34:	ldr	x8, [x19]
    af38:	subs	x8, x8, #0x1
    af3c:	str	x8, [x19]
    af40:	b.ne	af50 <PyInit__testcapi@@Base+0x1d94>  // b.any
    af44:	mov	x0, x19
    af48:	bl	8560 <_Py_Dealloc@plt>
    af4c:	ldr	x8, [x19]
    af50:	subs	x8, x8, #0x1
    af54:	str	x8, [x19]
    af58:	b.ne	af64 <PyInit__testcapi@@Base+0x1da8>  // b.any
    af5c:	mov	x0, x19
    af60:	bl	8560 <_Py_Dealloc@plt>
    af64:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    af68:	ldr	x0, [x0, #4016]
    af6c:	ldr	x19, [sp, #16]
    af70:	ldr	x8, [x0]
    af74:	add	x8, x8, #0x1
    af78:	str	x8, [x0]
    af7c:	ldp	x29, x30, [sp], #32
    af80:	ret
    af84:	stp	x29, x30, [sp, #-16]!
    af88:	mov	x29, sp
    af8c:	mov	x0, xzr
    af90:	bl	8840 <PyLong_FromLong@plt>
    af94:	cbz	x0, afac <PyInit__testcapi@@Base+0x1df0>
    af98:	ldr	x8, [x0]
    af9c:	subs	x8, x8, #0x1
    afa0:	str	x8, [x0]
    afa4:	b.ne	afac <PyInit__testcapi@@Base+0x1df0>  // b.any
    afa8:	bl	8560 <_Py_Dealloc@plt>
    afac:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    afb0:	ldr	x0, [x0, #4016]
    afb4:	ldr	x8, [x0]
    afb8:	add	x8, x8, #0x1
    afbc:	str	x8, [x0]
    afc0:	ldp	x29, x30, [sp], #16
    afc4:	ret
    afc8:	stp	x29, x30, [sp, #-16]!
    afcc:	mov	x29, sp
    afd0:	mov	x0, xzr
    afd4:	bl	8840 <PyLong_FromLong@plt>
    afd8:	ldr	x8, [x0]
    afdc:	subs	x8, x8, #0x1
    afe0:	str	x8, [x0]
    afe4:	b.ne	afec <PyInit__testcapi@@Base+0x1e30>  // b.any
    afe8:	bl	8560 <_Py_Dealloc@plt>
    afec:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    aff0:	ldr	x0, [x0, #4016]
    aff4:	ldr	x8, [x0]
    aff8:	add	x8, x8, #0x1
    affc:	str	x8, [x0]
    b000:	ldp	x29, x30, [sp], #16
    b004:	ret
    b008:	sub	sp, sp, #0x60
    b00c:	stp	x29, x30, [sp, #80]
    b010:	add	x29, sp, #0x50
    b014:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae44>
    b018:	adrp	x9, 14000 <PyInit__testcapi@@Base+0xae44>
    b01c:	add	x8, x8, #0x849
    b020:	add	x9, x9, #0x84d
    b024:	stp	x8, x9, [sp]
    b028:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae44>
    b02c:	adrp	x9, 14000 <PyInit__testcapi@@Base+0xae44>
    b030:	add	x8, x8, #0x869
    b034:	add	x9, x9, #0x87e
    b038:	adrp	x10, 14000 <PyInit__testcapi@@Base+0xae44>
    b03c:	stp	x8, x9, [x29, #-32]
    b040:	mov	x8, sp
    b044:	add	x10, x10, #0x857
    b048:	stur	x8, [x29, #-16]
    b04c:	mov	w8, #0x1                   	// #1
    b050:	sub	x0, x29, #0x20
    b054:	stp	xzr, xzr, [sp, #32]
    b058:	stp	xzr, x10, [sp, #16]
    b05c:	stur	w8, [x29, #-8]
    b060:	bl	8e40 <PyStructSequence_NewType@plt>
    b064:	ldr	x8, [x0]
    b068:	subs	x8, x8, #0x1
    b06c:	str	x8, [x0]
    b070:	b.ne	b078 <PyInit__testcapi@@Base+0x1ebc>  // b.any
    b074:	bl	8560 <_Py_Dealloc@plt>
    b078:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b07c:	ldr	x0, [x0, #4016]
    b080:	ldp	x29, x30, [sp, #80]
    b084:	ldr	x8, [x0]
    b088:	add	x8, x8, #0x1
    b08c:	str	x8, [x0]
    b090:	add	sp, sp, #0x60
    b094:	ret
    b098:	stp	x29, x30, [sp, #-32]!
    b09c:	str	x19, [sp, #16]
    b0a0:	mov	x29, sp
    b0a4:	mov	x0, xzr
    b0a8:	bl	8840 <PyLong_FromLong@plt>
    b0ac:	mov	x19, x0
    b0b0:	bl	8b40 <Py_IncRef@plt>
    b0b4:	mov	x0, x19
    b0b8:	bl	8be0 <Py_DecRef@plt>
    b0bc:	mov	x0, x19
    b0c0:	bl	8be0 <Py_DecRef@plt>
    b0c4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b0c8:	ldr	x0, [x0, #4016]
    b0cc:	ldr	x19, [sp, #16]
    b0d0:	ldr	x8, [x0]
    b0d4:	add	x8, x8, #0x1
    b0d8:	str	x8, [x0]
    b0dc:	ldp	x29, x30, [sp], #32
    b0e0:	ret
    b0e4:	stp	x29, x30, [sp, #-48]!
    b0e8:	str	x21, [sp, #16]
    b0ec:	stp	x20, x19, [sp, #32]
    b0f0:	mov	x29, sp
    b0f4:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    b0f8:	add	x0, x0, #0x8e9
    b0fc:	mov	w2, #0x10                  	// #16
    b100:	mov	x1, xzr
    b104:	bl	8f90 <PyLong_FromString@plt>
    b108:	cbz	x0, b178 <PyInit__testcapi@@Base+0x1fbc>
    b10c:	mov	w8, #0x4d2                 	// #1234
    b110:	add	x1, x29, #0x1c
    b114:	mov	x19, x0
    b118:	str	w8, [x29, #28]
    b11c:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b120:	ldr	x8, [x19]
    b124:	mov	x20, x0
    b128:	subs	x8, x8, #0x1
    b12c:	str	x8, [x19]
    b130:	b.ne	b13c <PyInit__testcapi@@Base+0x1f80>  // b.any
    b134:	mov	x0, x19
    b138:	bl	8560 <_Py_Dealloc@plt>
    b13c:	cmn	x20, #0x1
    b140:	b.eq	b16c <PyInit__testcapi@@Base+0x1fb0>  // b.none
    b144:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b148:	ldr	x0, [x8, #3520]
    b14c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b150:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b154:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b158:	add	x1, x1, #0x842
    b15c:	add	x2, x2, #0x882
    b160:	add	x3, x3, #0x8af
    b164:	bl	8e60 <PyErr_Format@plt>
    b168:	b	b174 <PyInit__testcapi@@Base+0x1fb8>
    b16c:	bl	8980 <PyErr_Occurred@plt>
    b170:	cbz	x0, b188 <PyInit__testcapi@@Base+0x1fcc>
    b174:	mov	x0, xzr
    b178:	ldp	x20, x19, [sp, #32]
    b17c:	ldr	x21, [sp, #16]
    b180:	ldp	x29, x30, [sp], #48
    b184:	ret
    b188:	ldr	w8, [x29, #28]
    b18c:	cmp	w8, #0x1
    b190:	b.ne	b2c8 <PyInit__testcapi@@Base+0x210c>  // b.any
    b194:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    b198:	bl	8840 <PyLong_FromLong@plt>
    b19c:	cbz	x0, b178 <PyInit__testcapi@@Base+0x1fbc>
    b1a0:	mov	x19, x0
    b1a4:	mov	w0, #0x1                   	// #1
    b1a8:	bl	8840 <PyLong_FromLong@plt>
    b1ac:	cbz	x0, b41c <PyInit__testcapi@@Base+0x2260>
    b1b0:	mov	x21, x0
    b1b4:	mov	x0, x19
    b1b8:	mov	x1, x21
    b1bc:	bl	8490 <PyNumber_Add@plt>
    b1c0:	ldr	x8, [x21]
    b1c4:	mov	x20, x0
    b1c8:	subs	x8, x8, #0x1
    b1cc:	str	x8, [x21]
    b1d0:	b.ne	b1dc <PyInit__testcapi@@Base+0x2020>  // b.any
    b1d4:	mov	x0, x21
    b1d8:	bl	8560 <_Py_Dealloc@plt>
    b1dc:	ldr	x8, [x19]
    b1e0:	subs	x8, x8, #0x1
    b1e4:	str	x8, [x19]
    b1e8:	b.ne	b1f4 <PyInit__testcapi@@Base+0x2038>  // b.any
    b1ec:	mov	x0, x19
    b1f0:	bl	8560 <_Py_Dealloc@plt>
    b1f4:	cbz	x20, b174 <PyInit__testcapi@@Base+0x1fb8>
    b1f8:	add	x1, x29, #0x1c
    b1fc:	mov	x0, x20
    b200:	str	wzr, [x29, #28]
    b204:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b208:	ldr	x8, [x20]
    b20c:	mov	x19, x0
    b210:	subs	x8, x8, #0x1
    b214:	str	x8, [x20]
    b218:	b.ne	b224 <PyInit__testcapi@@Base+0x2068>  // b.any
    b21c:	mov	x0, x20
    b220:	bl	8560 <_Py_Dealloc@plt>
    b224:	cmn	x19, #0x1
    b228:	b.ne	b144 <PyInit__testcapi@@Base+0x1f88>  // b.any
    b22c:	bl	8980 <PyErr_Occurred@plt>
    b230:	cbnz	x0, b174 <PyInit__testcapi@@Base+0x1fb8>
    b234:	ldr	w8, [x29, #28]
    b238:	cmp	w8, #0x1
    b23c:	b.ne	b2c8 <PyInit__testcapi@@Base+0x210c>  // b.any
    b240:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    b244:	add	x0, x0, #0x8e8
    b248:	mov	w2, #0x10                  	// #16
    b24c:	mov	x1, xzr
    b250:	bl	8f90 <PyLong_FromString@plt>
    b254:	cbz	x0, b178 <PyInit__testcapi@@Base+0x1fbc>
    b258:	mov	w8, #0x4d2                 	// #1234
    b25c:	add	x1, x29, #0x1c
    b260:	mov	x19, x0
    b264:	str	w8, [x29, #28]
    b268:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b26c:	ldr	x8, [x19]
    b270:	mov	x20, x0
    b274:	subs	x8, x8, #0x1
    b278:	str	x8, [x19]
    b27c:	b.ne	b288 <PyInit__testcapi@@Base+0x20cc>  // b.any
    b280:	mov	x0, x19
    b284:	bl	8560 <_Py_Dealloc@plt>
    b288:	cmn	x20, #0x1
    b28c:	b.ne	b144 <PyInit__testcapi@@Base+0x1f88>  // b.any
    b290:	bl	8980 <PyErr_Occurred@plt>
    b294:	cbnz	x0, b174 <PyInit__testcapi@@Base+0x1fb8>
    b298:	ldr	w8, [x29, #28]
    b29c:	cmn	w8, #0x1
    b2a0:	b.eq	b2ec <PyInit__testcapi@@Base+0x2130>  // b.none
    b2a4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b2a8:	ldr	x0, [x8, #3520]
    b2ac:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b2b0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b2b4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b2b8:	add	x1, x1, #0x842
    b2bc:	add	x2, x2, #0x882
    b2c0:	add	x3, x3, #0x902
    b2c4:	b	b164 <PyInit__testcapi@@Base+0x1fa8>
    b2c8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b2cc:	ldr	x0, [x8, #3520]
    b2d0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b2d4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b2d8:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b2dc:	add	x1, x1, #0x842
    b2e0:	add	x2, x2, #0x882
    b2e4:	add	x3, x3, #0x8ce
    b2e8:	b	b164 <PyInit__testcapi@@Base+0x1fa8>
    b2ec:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    b2f0:	bl	8840 <PyLong_FromLong@plt>
    b2f4:	cbz	x0, b178 <PyInit__testcapi@@Base+0x1fbc>
    b2f8:	mov	x19, x0
    b2fc:	mov	w0, #0x1                   	// #1
    b300:	bl	8840 <PyLong_FromLong@plt>
    b304:	cbz	x0, b41c <PyInit__testcapi@@Base+0x2260>
    b308:	mov	x21, x0
    b30c:	mov	x0, x19
    b310:	mov	x1, x21
    b314:	bl	8fe0 <PyNumber_Subtract@plt>
    b318:	ldr	x8, [x21]
    b31c:	mov	x20, x0
    b320:	subs	x8, x8, #0x1
    b324:	str	x8, [x21]
    b328:	b.ne	b334 <PyInit__testcapi@@Base+0x2178>  // b.any
    b32c:	mov	x0, x21
    b330:	bl	8560 <_Py_Dealloc@plt>
    b334:	ldr	x8, [x19]
    b338:	subs	x8, x8, #0x1
    b33c:	str	x8, [x19]
    b340:	b.ne	b34c <PyInit__testcapi@@Base+0x2190>  // b.any
    b344:	mov	x0, x19
    b348:	bl	8560 <_Py_Dealloc@plt>
    b34c:	cbz	x20, b174 <PyInit__testcapi@@Base+0x1fb8>
    b350:	add	x1, x29, #0x1c
    b354:	mov	x0, x20
    b358:	str	wzr, [x29, #28]
    b35c:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b360:	ldr	x8, [x20]
    b364:	mov	x19, x0
    b368:	subs	x8, x8, #0x1
    b36c:	str	x8, [x20]
    b370:	b.ne	b37c <PyInit__testcapi@@Base+0x21c0>  // b.any
    b374:	mov	x0, x20
    b378:	bl	8560 <_Py_Dealloc@plt>
    b37c:	cmn	x19, #0x1
    b380:	b.ne	b144 <PyInit__testcapi@@Base+0x1f88>  // b.any
    b384:	bl	8980 <PyErr_Occurred@plt>
    b388:	cbnz	x0, b174 <PyInit__testcapi@@Base+0x1fb8>
    b38c:	ldr	w8, [x29, #28]
    b390:	cmn	w8, #0x1
    b394:	b.ne	b2a4 <PyInit__testcapi@@Base+0x20e8>  // b.any
    b398:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    b39c:	add	x0, x0, #0x952
    b3a0:	mov	w2, #0x10                  	// #16
    b3a4:	mov	x1, xzr
    b3a8:	bl	8f90 <PyLong_FromString@plt>
    b3ac:	cbz	x0, b178 <PyInit__testcapi@@Base+0x1fbc>
    b3b0:	mov	w8, #0x4d2                 	// #1234
    b3b4:	add	x1, x29, #0x1c
    b3b8:	mov	x19, x0
    b3bc:	str	w8, [x29, #28]
    b3c0:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b3c4:	ldr	x8, [x19]
    b3c8:	mov	x20, x0
    b3cc:	subs	x8, x8, #0x1
    b3d0:	str	x8, [x19]
    b3d4:	b.ne	b3e0 <PyInit__testcapi@@Base+0x2224>  // b.any
    b3d8:	mov	x0, x19
    b3dc:	bl	8560 <_Py_Dealloc@plt>
    b3e0:	cmp	x20, #0xff
    b3e4:	b.eq	b438 <PyInit__testcapi@@Base+0x227c>  // b.none
    b3e8:	cmn	x20, #0x1
    b3ec:	b.ne	b3f8 <PyInit__testcapi@@Base+0x223c>  // b.any
    b3f0:	bl	8980 <PyErr_Occurred@plt>
    b3f4:	cbnz	x0, b174 <PyInit__testcapi@@Base+0x1fb8>
    b3f8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b3fc:	ldr	x0, [x8, #3520]
    b400:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b404:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b408:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b40c:	add	x1, x1, #0x842
    b410:	add	x2, x2, #0x882
    b414:	add	x3, x3, #0x91d
    b418:	b	b164 <PyInit__testcapi@@Base+0x1fa8>
    b41c:	ldr	x8, [x19]
    b420:	subs	x8, x8, #0x1
    b424:	str	x8, [x19]
    b428:	b.ne	b174 <PyInit__testcapi@@Base+0x1fb8>  // b.any
    b42c:	mov	x0, x19
    b430:	bl	8560 <_Py_Dealloc@plt>
    b434:	b	b174 <PyInit__testcapi@@Base+0x1fb8>
    b438:	ldr	w8, [x29, #28]
    b43c:	cbz	w8, b464 <PyInit__testcapi@@Base+0x22a8>
    b440:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b444:	ldr	x0, [x8, #3520]
    b448:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b44c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b450:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b454:	add	x1, x1, #0x842
    b458:	add	x2, x2, #0x882
    b45c:	add	x3, x3, #0x938
    b460:	b	b164 <PyInit__testcapi@@Base+0x1fa8>
    b464:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    b468:	add	x0, x0, #0x951
    b46c:	mov	w2, #0x10                  	// #16
    b470:	mov	x1, xzr
    b474:	bl	8f90 <PyLong_FromString@plt>
    b478:	cbz	x0, b178 <PyInit__testcapi@@Base+0x1fbc>
    b47c:	add	x1, x29, #0x1c
    b480:	mov	x19, x0
    b484:	str	wzr, [x29, #28]
    b488:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b48c:	ldr	x8, [x19]
    b490:	mov	x20, x0
    b494:	subs	x8, x8, #0x1
    b498:	str	x8, [x19]
    b49c:	b.ne	b4a8 <PyInit__testcapi@@Base+0x22ec>  // b.any
    b4a0:	mov	x0, x19
    b4a4:	bl	8560 <_Py_Dealloc@plt>
    b4a8:	cmn	x20, #0xff
    b4ac:	b.ne	b3e8 <PyInit__testcapi@@Base+0x222c>  // b.any
    b4b0:	ldr	w8, [x29, #28]
    b4b4:	cbz	w8, b4dc <PyInit__testcapi@@Base+0x2320>
    b4b8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b4bc:	ldr	x0, [x8, #3520]
    b4c0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b4c4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b4c8:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b4cc:	add	x1, x1, #0x842
    b4d0:	add	x2, x2, #0x882
    b4d4:	add	x3, x3, #0x955
    b4d8:	b	b164 <PyInit__testcapi@@Base+0x1fa8>
    b4dc:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    b4e0:	bl	8840 <PyLong_FromLong@plt>
    b4e4:	cbz	x0, b178 <PyInit__testcapi@@Base+0x1fbc>
    b4e8:	mov	w8, #0x4d2                 	// #1234
    b4ec:	add	x1, x29, #0x1c
    b4f0:	mov	x19, x0
    b4f4:	str	w8, [x29, #28]
    b4f8:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b4fc:	ldr	x8, [x19]
    b500:	mov	x20, x0
    b504:	subs	x8, x8, #0x1
    b508:	str	x8, [x19]
    b50c:	b.ne	b518 <PyInit__testcapi@@Base+0x235c>  // b.any
    b510:	mov	x0, x19
    b514:	bl	8560 <_Py_Dealloc@plt>
    b518:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    b51c:	cmp	x20, x8
    b520:	b.eq	b558 <PyInit__testcapi@@Base+0x239c>  // b.none
    b524:	cmn	x20, #0x1
    b528:	b.ne	b534 <PyInit__testcapi@@Base+0x2378>  // b.any
    b52c:	bl	8980 <PyErr_Occurred@plt>
    b530:	cbnz	x0, b174 <PyInit__testcapi@@Base+0x1fb8>
    b534:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b538:	ldr	x0, [x8, #3520]
    b53c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b540:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b544:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b548:	add	x1, x1, #0x842
    b54c:	add	x2, x2, #0x882
    b550:	add	x3, x3, #0x972
    b554:	b	b164 <PyInit__testcapi@@Base+0x1fa8>
    b558:	ldr	w8, [x29, #28]
    b55c:	cbnz	w8, b440 <PyInit__testcapi@@Base+0x2284>
    b560:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    b564:	bl	8840 <PyLong_FromLong@plt>
    b568:	cbz	x0, b178 <PyInit__testcapi@@Base+0x1fbc>
    b56c:	add	x1, x29, #0x1c
    b570:	mov	x19, x0
    b574:	str	wzr, [x29, #28]
    b578:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b57c:	ldr	x8, [x19]
    b580:	mov	x20, x0
    b584:	subs	x8, x8, #0x1
    b588:	str	x8, [x19]
    b58c:	b.ne	b598 <PyInit__testcapi@@Base+0x23dc>  // b.any
    b590:	mov	x0, x19
    b594:	bl	8560 <_Py_Dealloc@plt>
    b598:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    b59c:	cmp	x20, x8
    b5a0:	b.eq	b5d8 <PyInit__testcapi@@Base+0x241c>  // b.none
    b5a4:	cmn	x20, #0x1
    b5a8:	b.ne	b5b4 <PyInit__testcapi@@Base+0x23f8>  // b.any
    b5ac:	bl	8980 <PyErr_Occurred@plt>
    b5b0:	cbnz	x0, b174 <PyInit__testcapi@@Base+0x1fb8>
    b5b4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b5b8:	ldr	x0, [x8, #3520]
    b5bc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b5c0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b5c4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b5c8:	add	x1, x1, #0x842
    b5cc:	add	x2, x2, #0x882
    b5d0:	add	x3, x3, #0x991
    b5d4:	b	b164 <PyInit__testcapi@@Base+0x1fa8>
    b5d8:	ldr	w8, [x29, #28]
    b5dc:	cbnz	w8, b440 <PyInit__testcapi@@Base+0x2284>
    b5e0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b5e4:	ldr	x0, [x0, #4016]
    b5e8:	ldr	x8, [x0]
    b5ec:	add	x8, x8, #0x1
    b5f0:	str	x8, [x0]
    b5f4:	b	b178 <PyInit__testcapi@@Base+0x1fbc>
    b5f8:	stp	x29, x30, [sp, #-16]!
    b5fc:	mov	x29, sp
    b600:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b604:	ldr	x0, [x0, #4016]
    b608:	ldr	x8, [x0]
    b60c:	add	x8, x8, #0x1
    b610:	str	x8, [x0]
    b614:	bl	8bd0 <PyLong_AsDouble@plt>
    b618:	fmov	d1, #-1.000000000000000000e+00
    b61c:	fcmp	d0, d1
    b620:	b.eq	b654 <PyInit__testcapi@@Base+0x2498>  // b.none
    b624:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b628:	ldr	x0, [x8, #3520]
    b62c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b630:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b634:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b638:	add	x1, x1, #0x842
    b63c:	add	x2, x2, #0x899
    b640:	add	x3, x3, #0x9b0
    b644:	bl	8e60 <PyErr_Format@plt>
    b648:	mov	x0, xzr
    b64c:	ldp	x29, x30, [sp], #16
    b650:	ret
    b654:	bl	8980 <PyErr_Occurred@plt>
    b658:	cbz	x0, b624 <PyInit__testcapi@@Base+0x2468>
    b65c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b660:	ldr	x8, [x8, #3952]
    b664:	ldr	x0, [x8]
    b668:	bl	8760 <PyErr_ExceptionMatches@plt>
    b66c:	cbz	w0, b680 <PyInit__testcapi@@Base+0x24c4>
    b670:	bl	88c0 <PyErr_Clear@plt>
    b674:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b678:	ldr	x0, [x0, #4016]
    b67c:	b	b64c <PyInit__testcapi@@Base+0x2490>
    b680:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b684:	ldr	x0, [x8, #3520]
    b688:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b68c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b690:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b694:	add	x1, x1, #0x842
    b698:	add	x2, x2, #0x899
    b69c:	add	x3, x3, #0x9d6
    b6a0:	b	b644 <PyInit__testcapi@@Base+0x2488>
    b6a4:	stp	x29, x30, [sp, #-32]!
    b6a8:	str	x19, [sp, #16]
    b6ac:	mov	x29, sp
    b6b0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b6b4:	ldr	x0, [x0, #4016]
    b6b8:	ldr	x8, [x0]
    b6bc:	add	x8, x8, #0x1
    b6c0:	str	x8, [x0]
    b6c4:	bl	8930 <PyLong_AsSize_t@plt>
    b6c8:	cmn	x0, #0x1
    b6cc:	b.eq	b704 <PyInit__testcapi@@Base+0x2548>  // b.none
    b6d0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b6d4:	ldr	x0, [x8, #3520]
    b6d8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b6dc:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b6e0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b6e4:	add	x1, x1, #0x842
    b6e8:	add	x2, x2, #0x8ad
    b6ec:	add	x3, x3, #0xa12
    b6f0:	bl	8e60 <PyErr_Format@plt>
    b6f4:	mov	x0, xzr
    b6f8:	ldr	x19, [sp, #16]
    b6fc:	ldp	x29, x30, [sp], #32
    b700:	ret
    b704:	bl	8980 <PyErr_Occurred@plt>
    b708:	cbz	x0, b6d0 <PyInit__testcapi@@Base+0x2514>
    b70c:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b710:	ldr	x19, [x19, #3952]
    b714:	ldr	x0, [x19]
    b718:	bl	8760 <PyErr_ExceptionMatches@plt>
    b71c:	cbz	w0, b75c <PyInit__testcapi@@Base+0x25a0>
    b720:	bl	88c0 <PyErr_Clear@plt>
    b724:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b728:	ldr	x0, [x0, #4016]
    b72c:	bl	8850 <PyLong_AsSsize_t@plt>
    b730:	cmn	x0, #0x1
    b734:	b.eq	b780 <PyInit__testcapi@@Base+0x25c4>  // b.none
    b738:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b73c:	ldr	x0, [x8, #3520]
    b740:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b744:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b748:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b74c:	add	x1, x1, #0x842
    b750:	add	x2, x2, #0x8ad
    b754:	add	x3, x3, #0xa74
    b758:	b	b6f0 <PyInit__testcapi@@Base+0x2534>
    b75c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b760:	ldr	x0, [x8, #3520]
    b764:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b768:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b76c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b770:	add	x1, x1, #0x842
    b774:	add	x2, x2, #0x8ad
    b778:	add	x3, x3, #0xa38
    b77c:	b	b6f0 <PyInit__testcapi@@Base+0x2534>
    b780:	bl	8980 <PyErr_Occurred@plt>
    b784:	cbz	x0, b738 <PyInit__testcapi@@Base+0x257c>
    b788:	ldr	x0, [x19]
    b78c:	bl	8760 <PyErr_ExceptionMatches@plt>
    b790:	cbz	w0, b7a4 <PyInit__testcapi@@Base+0x25e8>
    b794:	bl	88c0 <PyErr_Clear@plt>
    b798:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b79c:	ldr	x0, [x0, #4016]
    b7a0:	b	b6f8 <PyInit__testcapi@@Base+0x253c>
    b7a4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b7a8:	ldr	x0, [x8, #3520]
    b7ac:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b7b0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b7b4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b7b8:	add	x1, x1, #0x842
    b7bc:	add	x2, x2, #0x8ad
    b7c0:	add	x3, x3, #0xa9b
    b7c4:	b	b6f0 <PyInit__testcapi@@Base+0x2534>
    b7c8:	stp	x29, x30, [sp, #-16]!
    b7cc:	mov	x29, sp
    b7d0:	mov	x0, xzr
    b7d4:	bl	84f0 <PyLong_AsUnsignedLongLongMask@plt>
    b7d8:	cmn	x0, #0x1
    b7dc:	b.eq	b810 <PyInit__testcapi@@Base+0x2654>  // b.none
    b7e0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b7e4:	ldr	x0, [x8, #3520]
    b7e8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b7ec:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b7f0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b7f4:	add	x1, x1, #0x842
    b7f8:	add	x2, x2, #0x8c1
    b7fc:	add	x3, x3, #0xad8
    b800:	bl	8e60 <PyErr_Format@plt>
    b804:	mov	x0, xzr
    b808:	ldp	x29, x30, [sp], #16
    b80c:	ret
    b810:	bl	8980 <PyErr_Occurred@plt>
    b814:	cbz	x0, b7e0 <PyInit__testcapi@@Base+0x2624>
    b818:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b81c:	ldr	x8, [x8, #3848]
    b820:	ldr	x0, [x8]
    b824:	bl	8760 <PyErr_ExceptionMatches@plt>
    b828:	cbz	w0, b848 <PyInit__testcapi@@Base+0x268c>
    b82c:	bl	88c0 <PyErr_Clear@plt>
    b830:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b834:	ldr	x0, [x0, #4016]
    b838:	ldr	x8, [x0]
    b83c:	add	x8, x8, #0x1
    b840:	str	x8, [x0]
    b844:	b	b808 <PyInit__testcapi@@Base+0x264c>
    b848:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b84c:	ldr	x0, [x8, #3520]
    b850:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b854:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b858:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b85c:	add	x1, x1, #0x842
    b860:	add	x2, x2, #0x8c1
    b864:	add	x3, x3, #0xb0c
    b868:	b	b800 <PyInit__testcapi@@Base+0x2644>
    b86c:	stp	x29, x30, [sp, #-64]!
    b870:	str	x23, [sp, #16]
    b874:	stp	x22, x21, [sp, #32]
    b878:	stp	x20, x19, [sp, #48]
    b87c:	mov	x29, sp
    b880:	adrp	x23, 13000 <PyInit__testcapi@@Base+0x9e44>
    b884:	mov	x22, xzr
    b888:	add	x23, x23, #0x68
    b88c:	ldr	x0, [x23, x22]
    b890:	bl	8840 <PyLong_FromLong@plt>
    b894:	cbz	x0, b954 <PyInit__testcapi@@Base+0x2798>
    b898:	mov	x19, x0
    b89c:	bl	85f0 <_PyLong_NumBits@plt>
    b8a0:	mov	x20, x0
    b8a4:	mov	x0, x19
    b8a8:	bl	85b0 <_PyLong_Sign@plt>
    b8ac:	ldr	x8, [x19]
    b8b0:	mov	w21, w0
    b8b4:	subs	x8, x8, #0x1
    b8b8:	str	x8, [x19]
    b8bc:	b.ne	b8c8 <PyInit__testcapi@@Base+0x270c>  // b.any
    b8c0:	mov	x0, x19
    b8c4:	bl	8560 <_Py_Dealloc@plt>
    b8c8:	add	x8, x23, x22
    b8cc:	ldr	x9, [x8, #8]
    b8d0:	cmp	x20, x9
    b8d4:	b.ne	b908 <PyInit__testcapi@@Base+0x274c>  // b.any
    b8d8:	ldr	w8, [x8, #16]
    b8dc:	cmp	w21, w8
    b8e0:	b.ne	b92c <PyInit__testcapi@@Base+0x2770>  // b.any
    b8e4:	add	x22, x22, #0x18
    b8e8:	cmp	x22, #0x168
    b8ec:	b.ne	b88c <PyInit__testcapi@@Base+0x26d0>  // b.any
    b8f0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b8f4:	ldr	x0, [x0, #4016]
    b8f8:	ldr	x8, [x0]
    b8fc:	add	x8, x8, #0x1
    b900:	str	x8, [x0]
    b904:	b	b954 <PyInit__testcapi@@Base+0x2798>
    b908:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b90c:	ldr	x0, [x8, #3520]
    b910:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b914:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b918:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b91c:	add	x1, x1, #0x842
    b920:	add	x2, x2, #0x8e6
    b924:	add	x3, x3, #0xb58
    b928:	b	b94c <PyInit__testcapi@@Base+0x2790>
    b92c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b930:	ldr	x0, [x8, #3520]
    b934:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b938:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b93c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b940:	add	x1, x1, #0x842
    b944:	add	x2, x2, #0x8e6
    b948:	add	x3, x3, #0xb79
    b94c:	bl	8e60 <PyErr_Format@plt>
    b950:	mov	x0, xzr
    b954:	ldp	x20, x19, [sp, #48]
    b958:	ldp	x22, x21, [sp, #32]
    b95c:	ldr	x23, [sp, #16]
    b960:	ldp	x29, x30, [sp], #64
    b964:	ret
    b968:	sub	sp, sp, #0x30
    b96c:	stp	x29, x30, [sp, #16]
    b970:	stp	x20, x19, [sp, #32]
    b974:	add	x29, sp, #0x10
    b978:	mov	w0, #0x1                   	// #1
    b97c:	bl	8920 <PyTuple_New@plt>
    b980:	cbz	x0, b9dc <PyInit__testcapi@@Base+0x2820>
    b984:	mov	x19, x0
    b988:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    b98c:	add	x0, x0, #0x8e9
    b990:	mov	w2, #0x10                  	// #16
    b994:	mov	x1, xzr
    b998:	bl	8f90 <PyLong_FromString@plt>
    b99c:	cbz	x0, b9dc <PyInit__testcapi@@Base+0x2820>
    b9a0:	mov	x20, x0
    b9a4:	bl	88f0 <PyLong_AsUnsignedLongMask@plt>
    b9a8:	cmn	x0, #0x1
    b9ac:	str	x0, [sp, #8]
    b9b0:	b.eq	b9ec <PyInit__testcapi@@Base+0x2830>  // b.none
    b9b4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b9b8:	ldr	x0, [x8, #3520]
    b9bc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b9c0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b9c4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b9c8:	add	x1, x1, #0x842
    b9cc:	add	x2, x2, #0xbdf
    b9d0:	add	x3, x3, #0xb97
    b9d4:	bl	8e60 <PyErr_Format@plt>
    b9d8:	mov	x0, xzr
    b9dc:	ldp	x20, x19, [sp, #32]
    b9e0:	ldp	x29, x30, [sp, #16]
    b9e4:	add	sp, sp, #0x30
    b9e8:	ret
    b9ec:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b9f0:	add	x1, x1, #0xbdd
    b9f4:	add	x2, sp, #0x8
    b9f8:	mov	x0, x19
    b9fc:	str	x20, [x19, #24]
    ba00:	str	xzr, [sp, #8]
    ba04:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ba08:	cbz	w0, b9d8 <PyInit__testcapi@@Base+0x281c>
    ba0c:	ldr	x8, [sp, #8]
    ba10:	cmn	x8, #0x1
    ba14:	b.eq	ba3c <PyInit__testcapi@@Base+0x2880>  // b.none
    ba18:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ba1c:	ldr	x0, [x8, #3520]
    ba20:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ba24:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    ba28:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ba2c:	add	x1, x1, #0x842
    ba30:	add	x2, x2, #0xbdf
    ba34:	add	x3, x3, #0xbeb
    ba38:	b	b9d4 <PyInit__testcapi@@Base+0x2818>
    ba3c:	ldr	x8, [x20]
    ba40:	subs	x8, x8, #0x1
    ba44:	str	x8, [x20]
    ba48:	b.ne	ba54 <PyInit__testcapi@@Base+0x2898>  // b.any
    ba4c:	mov	x0, x20
    ba50:	bl	8560 <_Py_Dealloc@plt>
    ba54:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    ba58:	add	x0, x0, #0xc1c
    ba5c:	mov	w2, #0x10                  	// #16
    ba60:	mov	x1, xzr
    ba64:	bl	8f90 <PyLong_FromString@plt>
    ba68:	cbz	x0, b9dc <PyInit__testcapi@@Base+0x2820>
    ba6c:	mov	x20, x0
    ba70:	bl	88f0 <PyLong_AsUnsignedLongMask@plt>
    ba74:	cmn	x0, #0x42
    ba78:	str	x0, [sp, #8]
    ba7c:	b.ne	badc <PyInit__testcapi@@Base+0x2920>  // b.any
    ba80:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ba84:	add	x1, x1, #0xbdd
    ba88:	add	x2, sp, #0x8
    ba8c:	mov	x0, x19
    ba90:	str	x20, [x19, #24]
    ba94:	str	xzr, [sp, #8]
    ba98:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ba9c:	cbz	w0, b9d8 <PyInit__testcapi@@Base+0x281c>
    baa0:	ldr	x8, [sp, #8]
    baa4:	cmn	x8, #0x42
    baa8:	b.ne	bb00 <PyInit__testcapi@@Base+0x2944>  // b.any
    baac:	ldr	x8, [x19]
    bab0:	subs	x8, x8, #0x1
    bab4:	str	x8, [x19]
    bab8:	b.ne	bac4 <PyInit__testcapi@@Base+0x2908>  // b.any
    babc:	mov	x0, x19
    bac0:	bl	8560 <_Py_Dealloc@plt>
    bac4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    bac8:	ldr	x0, [x0, #4016]
    bacc:	ldr	x8, [x0]
    bad0:	add	x8, x8, #0x1
    bad4:	str	x8, [x0]
    bad8:	b	b9dc <PyInit__testcapi@@Base+0x2820>
    badc:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    bae0:	ldr	x0, [x8, #3520]
    bae4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bae8:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    baec:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    baf0:	add	x1, x1, #0x842
    baf4:	add	x2, x2, #0xbdf
    baf8:	add	x3, x3, #0xc38
    bafc:	b	b9d4 <PyInit__testcapi@@Base+0x2818>
    bb00:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    bb04:	ldr	x0, [x8, #3520]
    bb08:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bb0c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bb10:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    bb14:	add	x1, x1, #0x842
    bb18:	add	x2, x2, #0xbdf
    bb1c:	add	x3, x3, #0xc81
    bb20:	b	b9d4 <PyInit__testcapi@@Base+0x2818>
    bb24:	stp	x29, x30, [sp, #-48]!
    bb28:	str	x21, [sp, #16]
    bb2c:	stp	x20, x19, [sp, #32]
    bb30:	mov	x29, sp
    bb34:	mov	x0, xzr
    bb38:	bl	8920 <PyTuple_New@plt>
    bb3c:	cbz	x0, bc10 <PyInit__testcapi@@Base+0x2a54>
    bb40:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bb44:	add	x1, x1, #0xcb5
    bb48:	mov	x19, x0
    bb4c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    bb50:	cbz	w0, bbb0 <PyInit__testcapi@@Base+0x29f4>
    bb54:	bl	8c20 <PyDict_New@plt>
    bb58:	cbz	x0, bbcc <PyInit__testcapi@@Base+0x2a10>
    bb5c:	mov	x20, x0
    bb60:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bb64:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
    bb68:	add	x2, x2, #0xcb5
    bb6c:	add	x3, x3, #0xdd8
    bb70:	mov	x0, x19
    bb74:	mov	x1, x20
    bb78:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    bb7c:	ldr	x8, [x19]
    bb80:	mov	w21, w0
    bb84:	subs	x8, x8, #0x1
    bb88:	str	x8, [x19]
    bb8c:	b.ne	bb98 <PyInit__testcapi@@Base+0x29dc>  // b.any
    bb90:	mov	x0, x19
    bb94:	bl	8560 <_Py_Dealloc@plt>
    bb98:	ldr	x8, [x20]
    bb9c:	subs	x8, x8, #0x1
    bba0:	str	x8, [x20]
    bba4:	b.eq	bbe8 <PyInit__testcapi@@Base+0x2a2c>  // b.none
    bba8:	cbnz	w21, bbf4 <PyInit__testcapi@@Base+0x2a38>
    bbac:	b	bc0c <PyInit__testcapi@@Base+0x2a50>
    bbb0:	ldr	x8, [x19]
    bbb4:	subs	x8, x8, #0x1
    bbb8:	str	x8, [x19]
    bbbc:	b.ne	bc0c <PyInit__testcapi@@Base+0x2a50>  // b.any
    bbc0:	mov	x0, x19
    bbc4:	bl	8560 <_Py_Dealloc@plt>
    bbc8:	b	bc0c <PyInit__testcapi@@Base+0x2a50>
    bbcc:	ldr	x8, [x19]
    bbd0:	subs	x8, x8, #0x1
    bbd4:	str	x8, [x19]
    bbd8:	b.ne	bbf4 <PyInit__testcapi@@Base+0x2a38>  // b.any
    bbdc:	mov	x0, x19
    bbe0:	bl	8560 <_Py_Dealloc@plt>
    bbe4:	b	bbf4 <PyInit__testcapi@@Base+0x2a38>
    bbe8:	mov	x0, x20
    bbec:	bl	8560 <_Py_Dealloc@plt>
    bbf0:	cbz	w21, bc0c <PyInit__testcapi@@Base+0x2a50>
    bbf4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    bbf8:	ldr	x0, [x0, #4016]
    bbfc:	ldr	x8, [x0]
    bc00:	add	x8, x8, #0x1
    bc04:	str	x8, [x0]
    bc08:	b	bc10 <PyInit__testcapi@@Base+0x2a54>
    bc0c:	mov	x0, xzr
    bc10:	ldp	x20, x19, [sp, #32]
    bc14:	ldr	x21, [sp, #16]
    bc18:	ldp	x29, x30, [sp], #48
    bc1c:	ret
    bc20:	stp	x29, x30, [sp, #-80]!
    bc24:	stp	x28, x25, [sp, #16]
    bc28:	stp	x24, x23, [sp, #32]
    bc2c:	stp	x22, x21, [sp, #48]
    bc30:	stp	x20, x19, [sp, #64]
    bc34:	mov	x29, sp
    bc38:	sub	sp, sp, #0x1d0
    bc3c:	mov	x0, x1
    bc40:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bc44:	add	x1, x1, #0xccb
    bc48:	sub	x2, x29, #0x8
    bc4c:	sub	x3, x29, #0x10
    bc50:	sub	x4, x29, #0x18
    bc54:	sub	x5, x29, #0x20
    bc58:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    bc5c:	cbz	w0, bca0 <PyInit__testcapi@@Base+0x2ae4>
    bc60:	ldur	x19, [x29, #-32]
    bc64:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    bc68:	ldr	x8, [x19, #8]
    bc6c:	ldr	x9, [x9, #4064]
    bc70:	cmp	x8, x9
    bc74:	b.eq	bca8 <PyInit__testcapi@@Base+0x2aec>  // b.none
    bc78:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    bc7c:	ldr	x9, [x9, #3872]
    bc80:	cmp	x8, x9
    bc84:	b.eq	bca8 <PyInit__testcapi@@Base+0x2aec>  // b.none
    bc88:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    bc8c:	ldr	x8, [x8, #3944]
    bc90:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bc94:	add	x1, x1, #0xce9
    bc98:	ldr	x0, [x8]
    bc9c:	bl	8670 <PyErr_SetString@plt>
    bca0:	mov	x19, xzr
    bca4:	b	be1c <PyInit__testcapi@@Base+0x2c60>
    bca8:	add	x0, sp, #0x20
    bcac:	mov	w2, #0x100                 	// #256
    bcb0:	mov	w1, wzr
    bcb4:	bl	8770 <memset@plt>
    bcb8:	movi	v0.2d, #0x0
    bcbc:	stp	q0, q0, [x29, #-176]
    bcc0:	stp	q0, q0, [x29, #-144]
    bcc4:	stp	q0, q0, [x29, #-112]
    bcc8:	stp	q0, q0, [x29, #-80]
    bccc:	stur	xzr, [x29, #-48]
    bcd0:	ldr	x8, [x19, #16]
    bcd4:	cmp	x8, #0x8
    bcd8:	b.le	bcf8 <PyInit__testcapi@@Base+0x2b3c>
    bcdc:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    bce0:	ldr	x8, [x8, #3944]
    bce4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bce8:	add	x1, x1, #0xd2d
    bcec:	ldr	x0, [x8]
    bcf0:	bl	8670 <PyErr_SetString@plt>
    bcf4:	b	bde8 <PyInit__testcapi@@Base+0x2c2c>
    bcf8:	cmp	x8, #0x1
    bcfc:	b.lt	bd74 <PyInit__testcapi@@Base+0x2bb8>  // b.tstop
    bd00:	mov	w9, #0x1                   	// #1
    bd04:	mov	x21, xzr
    bd08:	mov	x20, xzr
    bd0c:	mov	x22, xzr
    bd10:	sub	x23, x29, #0xb0
    bd14:	sub	x24, x9, x8
    bd18:	sub	x25, x29, #0x70
    bd1c:	ldr	x8, [x19, #8]
    bd20:	ldrb	w8, [x8, #171]
    bd24:	tbnz	w8, #1, bd34 <PyInit__testcapi@@Base+0x2b78>
    bd28:	add	x8, x19, x21
    bd2c:	add	x8, x8, #0x18
    bd30:	b	bd3c <PyInit__testcapi@@Base+0x2b80>
    bd34:	ldr	x8, [x19, #24]
    bd38:	add	x8, x8, x22, lsl #3
    bd3c:	ldr	x0, [x8]
    bd40:	add	x1, x23, x21
    bd44:	bl	8610 <PyUnicode_FSConverter@plt>
    bd48:	cbz	w0, bdcc <PyInit__testcapi@@Base+0x2c10>
    bd4c:	ldr	x8, [x23, x21]
    bd50:	cmp	x24, x20
    bd54:	add	x8, x8, #0x20
    bd58:	str	x8, [x25, x21]
    bd5c:	b.eq	bd74 <PyInit__testcapi@@Base+0x2bb8>  // b.none
    bd60:	ldur	x19, [x29, #-32]
    bd64:	add	x22, x22, #0x1
    bd68:	sub	x20, x20, #0x1
    bd6c:	add	x21, x21, #0x8
    bd70:	b	bd1c <PyInit__testcapi@@Base+0x2b60>
    bd74:	ldp	x1, x0, [x29, #-16]
    bd78:	ldur	x2, [x29, #-24]
    bd7c:	add	x8, sp, #0x20
    bd80:	add	x5, x8, #0x20
    bd84:	add	x6, x8, #0x40
    bd88:	add	x7, x8, #0x60
    bd8c:	add	x9, x8, #0x80
    bd90:	add	x10, x8, #0xa0
    bd94:	add	x11, x8, #0xc0
    bd98:	add	x8, x8, #0xe0
    bd9c:	sub	x3, x29, #0x70
    bda0:	add	x4, sp, #0x20
    bda4:	stp	x11, x8, [sp, #16]
    bda8:	stp	x9, x10, [sp]
    bdac:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    bdb0:	cbz	w0, bde8 <PyInit__testcapi@@Base+0x2c2c>
    bdb4:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    bdb8:	ldr	x19, [x19, #4016]
    bdbc:	ldr	x8, [x19]
    bdc0:	add	x8, x8, #0x1
    bdc4:	str	x8, [x19]
    bdc8:	b	bdec <PyInit__testcapi@@Base+0x2c30>
    bdcc:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    bdd0:	ldr	x8, [x8, #3944]
    bdd4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bdd8:	neg	x2, x20
    bddc:	add	x1, x1, #0xd69
    bde0:	ldr	x0, [x8]
    bde4:	bl	8e60 <PyErr_Format@plt>
    bde8:	mov	x19, xzr
    bdec:	mov	x20, xzr
    bdf0:	sub	x21, x29, #0xb0
    bdf4:	ldr	x0, [x21, x20]
    bdf8:	cbz	x0, be10 <PyInit__testcapi@@Base+0x2c54>
    bdfc:	ldr	x8, [x0]
    be00:	subs	x8, x8, #0x1
    be04:	str	x8, [x0]
    be08:	b.ne	be10 <PyInit__testcapi@@Base+0x2c54>  // b.any
    be0c:	bl	8560 <_Py_Dealloc@plt>
    be10:	add	x20, x20, #0x8
    be14:	cmp	x20, #0x40
    be18:	b.ne	bdf4 <PyInit__testcapi@@Base+0x2c38>  // b.any
    be1c:	mov	x0, x19
    be20:	add	sp, sp, #0x1d0
    be24:	ldp	x20, x19, [sp, #64]
    be28:	ldp	x22, x21, [sp, #48]
    be2c:	ldp	x24, x23, [sp, #32]
    be30:	ldp	x28, x25, [sp, #16]
    be34:	ldp	x29, x30, [sp], #80
    be38:	ret
    be3c:	stp	x29, x30, [sp, #-48]!
    be40:	str	x21, [sp, #16]
    be44:	stp	x20, x19, [sp, #32]
    be48:	mov	x29, sp
    be4c:	mov	x0, xzr
    be50:	bl	8600 <PyObject_Str@plt>
    be54:	mov	x21, x0
    be58:	mov	x0, xzr
    be5c:	bl	8600 <PyObject_Str@plt>
    be60:	mov	x19, x0
    be64:	mov	w0, #0x2                   	// #2
    be68:	mov	x1, x21
    be6c:	mov	x2, x19
    be70:	bl	9040 <PyTuple_Pack@plt>
    be74:	mov	x20, x0
    be78:	cbz	x21, be8c <PyInit__testcapi@@Base+0x2cd0>
    be7c:	ldr	x8, [x21]
    be80:	subs	x8, x8, #0x1
    be84:	str	x8, [x21]
    be88:	b.eq	beac <PyInit__testcapi@@Base+0x2cf0>  // b.none
    be8c:	cbz	x19, beb8 <PyInit__testcapi@@Base+0x2cfc>
    be90:	ldr	x8, [x19]
    be94:	subs	x8, x8, #0x1
    be98:	str	x8, [x19]
    be9c:	b.ne	beb8 <PyInit__testcapi@@Base+0x2cfc>  // b.any
    bea0:	mov	x0, x19
    bea4:	bl	8560 <_Py_Dealloc@plt>
    bea8:	b	beb8 <PyInit__testcapi@@Base+0x2cfc>
    beac:	mov	x0, x21
    beb0:	bl	8560 <_Py_Dealloc@plt>
    beb4:	cbnz	x19, be90 <PyInit__testcapi@@Base+0x2cd4>
    beb8:	mov	x0, x20
    bebc:	ldp	x20, x19, [sp, #32]
    bec0:	ldr	x21, [sp, #16]
    bec4:	ldp	x29, x30, [sp], #48
    bec8:	ret
    becc:	stp	x29, x30, [sp, #-32]!
    bed0:	stp	x20, x19, [sp, #16]
    bed4:	mov	x29, sp
    bed8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    bedc:	add	x0, x0, #0xdb4
    bee0:	mov	w1, #0x1                   	// #1
    bee4:	bl	8260 <PyUnicode_FromFormat@plt>
    bee8:	cbz	x0, c188 <PyInit__testcapi@@Base+0x2fcc>
    beec:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bef0:	add	x1, x1, #0x8e6
    bef4:	mov	x19, x0
    bef8:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    befc:	cbz	w0, c0f0 <PyInit__testcapi@@Base+0x2f34>
    bf00:	ldr	x8, [x19]
    bf04:	subs	x8, x8, #0x1
    bf08:	str	x8, [x19]
    bf0c:	b.ne	bf18 <PyInit__testcapi@@Base+0x2d5c>  // b.any
    bf10:	mov	x0, x19
    bf14:	bl	8560 <_Py_Dealloc@plt>
    bf18:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    bf1c:	add	x0, x0, #0xdc6
    bf20:	mov	w1, #0x1                   	// #1
    bf24:	bl	8260 <PyUnicode_FromFormat@plt>
    bf28:	cbz	x0, c188 <PyInit__testcapi@@Base+0x2fcc>
    bf2c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bf30:	add	x1, x1, #0x8e6
    bf34:	mov	x19, x0
    bf38:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    bf3c:	cbz	w0, c0fc <PyInit__testcapi@@Base+0x2f40>
    bf40:	ldr	x8, [x19]
    bf44:	subs	x8, x8, #0x1
    bf48:	str	x8, [x19]
    bf4c:	b.ne	bf58 <PyInit__testcapi@@Base+0x2d9c>  // b.any
    bf50:	mov	x0, x19
    bf54:	bl	8560 <_Py_Dealloc@plt>
    bf58:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    bf5c:	add	x0, x0, #0xdda
    bf60:	mov	w1, #0x1                   	// #1
    bf64:	bl	8260 <PyUnicode_FromFormat@plt>
    bf68:	cbz	x0, c188 <PyInit__testcapi@@Base+0x2fcc>
    bf6c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bf70:	add	x1, x1, #0x8e6
    bf74:	mov	x19, x0
    bf78:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    bf7c:	cbz	w0, c108 <PyInit__testcapi@@Base+0x2f4c>
    bf80:	ldr	x8, [x19]
    bf84:	subs	x8, x8, #0x1
    bf88:	str	x8, [x19]
    bf8c:	b.ne	bf98 <PyInit__testcapi@@Base+0x2ddc>  // b.any
    bf90:	mov	x0, x19
    bf94:	bl	8560 <_Py_Dealloc@plt>
    bf98:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    bf9c:	add	x0, x0, #0xdee
    bfa0:	mov	w1, #0x1                   	// #1
    bfa4:	bl	8260 <PyUnicode_FromFormat@plt>
    bfa8:	cbz	x0, c188 <PyInit__testcapi@@Base+0x2fcc>
    bfac:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bfb0:	add	x1, x1, #0x8e6
    bfb4:	mov	x19, x0
    bfb8:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    bfbc:	cbz	w0, c114 <PyInit__testcapi@@Base+0x2f58>
    bfc0:	ldr	x8, [x19]
    bfc4:	subs	x8, x8, #0x1
    bfc8:	str	x8, [x19]
    bfcc:	b.ne	bfd8 <PyInit__testcapi@@Base+0x2e1c>  // b.any
    bfd0:	mov	x0, x19
    bfd4:	bl	8560 <_Py_Dealloc@plt>
    bfd8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    bfdc:	add	x0, x0, #0xe00
    bfe0:	mov	w1, #0x1                   	// #1
    bfe4:	bl	8260 <PyUnicode_FromFormat@plt>
    bfe8:	cbz	x0, c188 <PyInit__testcapi@@Base+0x2fcc>
    bfec:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bff0:	add	x1, x1, #0x8e6
    bff4:	mov	x19, x0
    bff8:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    bffc:	cbz	w0, c120 <PyInit__testcapi@@Base+0x2f64>
    c000:	ldr	x8, [x19]
    c004:	subs	x8, x8, #0x1
    c008:	str	x8, [x19]
    c00c:	b.ne	c018 <PyInit__testcapi@@Base+0x2e5c>  // b.any
    c010:	mov	x0, x19
    c014:	bl	8560 <_Py_Dealloc@plt>
    c018:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    c01c:	add	x0, x0, #0xe14
    c020:	mov	w1, #0x1                   	// #1
    c024:	bl	8260 <PyUnicode_FromFormat@plt>
    c028:	cbz	x0, c188 <PyInit__testcapi@@Base+0x2fcc>
    c02c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c030:	add	x1, x1, #0x8e6
    c034:	mov	x19, x0
    c038:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c03c:	cbz	w0, c12c <PyInit__testcapi@@Base+0x2f70>
    c040:	ldr	x8, [x19]
    c044:	subs	x8, x8, #0x1
    c048:	str	x8, [x19]
    c04c:	b.ne	c058 <PyInit__testcapi@@Base+0x2e9c>  // b.any
    c050:	mov	x0, x19
    c054:	bl	8560 <_Py_Dealloc@plt>
    c058:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    c05c:	add	x0, x0, #0xe28
    c060:	mov	w1, #0x1                   	// #1
    c064:	bl	8260 <PyUnicode_FromFormat@plt>
    c068:	cbz	x0, c188 <PyInit__testcapi@@Base+0x2fcc>
    c06c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c070:	add	x1, x1, #0x8e6
    c074:	mov	x19, x0
    c078:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c07c:	cbz	w0, c138 <PyInit__testcapi@@Base+0x2f7c>
    c080:	ldr	x8, [x19]
    c084:	subs	x8, x8, #0x1
    c088:	str	x8, [x19]
    c08c:	b.ne	c098 <PyInit__testcapi@@Base+0x2edc>  // b.any
    c090:	mov	x0, x19
    c094:	bl	8560 <_Py_Dealloc@plt>
    c098:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    c09c:	add	x0, x0, #0xe3e
    c0a0:	mov	w1, #0x1                   	// #1
    c0a4:	bl	8260 <PyUnicode_FromFormat@plt>
    c0a8:	cbz	x0, c188 <PyInit__testcapi@@Base+0x2fcc>
    c0ac:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c0b0:	add	x1, x1, #0x8e6
    c0b4:	mov	x19, x0
    c0b8:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c0bc:	cbz	w0, c144 <PyInit__testcapi@@Base+0x2f88>
    c0c0:	ldr	x8, [x19]
    c0c4:	subs	x8, x8, #0x1
    c0c8:	str	x8, [x19]
    c0cc:	b.ne	c0d8 <PyInit__testcapi@@Base+0x2f1c>  // b.any
    c0d0:	mov	x0, x19
    c0d4:	bl	8560 <_Py_Dealloc@plt>
    c0d8:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c0dc:	ldr	x0, [x0, #4016]
    c0e0:	ldr	x8, [x0]
    c0e4:	add	x8, x8, #0x1
    c0e8:	str	x8, [x0]
    c0ec:	b	c188 <PyInit__testcapi@@Base+0x2fcc>
    c0f0:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae44>
    c0f4:	add	x20, x20, #0xdb7
    c0f8:	b	c14c <PyInit__testcapi@@Base+0x2f90>
    c0fc:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae44>
    c100:	add	x20, x20, #0xdca
    c104:	b	c14c <PyInit__testcapi@@Base+0x2f90>
    c108:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae44>
    c10c:	add	x20, x20, #0xdde
    c110:	b	c14c <PyInit__testcapi@@Base+0x2f90>
    c114:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae44>
    c118:	add	x20, x20, #0xdf1
    c11c:	b	c14c <PyInit__testcapi@@Base+0x2f90>
    c120:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae44>
    c124:	add	x20, x20, #0xe04
    c128:	b	c14c <PyInit__testcapi@@Base+0x2f90>
    c12c:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae44>
    c130:	add	x20, x20, #0xe18
    c134:	b	c14c <PyInit__testcapi@@Base+0x2f90>
    c138:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae44>
    c13c:	add	x20, x20, #0xe2d
    c140:	b	c14c <PyInit__testcapi@@Base+0x2f90>
    c144:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae44>
    c148:	add	x20, x20, #0xe43
    c14c:	ldr	x8, [x19]
    c150:	subs	x8, x8, #0x1
    c154:	str	x8, [x19]
    c158:	b.ne	c164 <PyInit__testcapi@@Base+0x2fa8>  // b.any
    c15c:	mov	x0, x19
    c160:	bl	8560 <_Py_Dealloc@plt>
    c164:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c168:	ldr	x0, [x8, #3520]
    c16c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c170:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    c174:	add	x1, x1, #0x842
    c178:	add	x2, x2, #0x90a
    c17c:	mov	x3, x20
    c180:	bl	8e60 <PyErr_Format@plt>
    c184:	mov	x0, xzr
    c188:	ldp	x20, x19, [sp, #16]
    c18c:	ldp	x29, x30, [sp], #32
    c190:	ret
    c194:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c198:	ldr	x0, [x0, #4016]
    c19c:	ldr	x8, [x0]
    c1a0:	add	x8, x8, #0x1
    c1a4:	str	x8, [x0]
    c1a8:	ret
    c1ac:	stp	d9, d8, [sp, #-48]!
    c1b0:	stp	x29, x30, [sp, #16]
    c1b4:	str	x19, [sp, #32]
    c1b8:	mov	x29, sp
    c1bc:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    c1c0:	add	x0, x0, #0xf1f
    c1c4:	mov	x1, xzr
    c1c8:	mov	x2, xzr
    c1cc:	bl	8860 <PyOS_string_to_double@plt>
    c1d0:	fmov	d9, #-1.000000000000000000e+00
    c1d4:	mov	v8.16b, v0.16b
    c1d8:	fcmp	d0, d9
    c1dc:	b.ne	c1e8 <PyInit__testcapi@@Base+0x302c>  // b.any
    c1e0:	bl	8980 <PyErr_Occurred@plt>
    c1e4:	cbnz	x0, c21c <PyInit__testcapi@@Base+0x3060>
    c1e8:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
    c1ec:	ldr	d0, [x8, #3320]
    c1f0:	fcmp	d8, d0
    c1f4:	b.eq	c230 <PyInit__testcapi@@Base+0x3074>  // b.none
    c1f8:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    c1fc:	add	x3, x3, #0xe54
    c200:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c204:	ldr	x0, [x8, #3520]
    c208:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c20c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    c210:	add	x1, x1, #0x842
    c214:	add	x2, x2, #0x959
    c218:	bl	8e60 <PyErr_Format@plt>
    c21c:	mov	x0, xzr
    c220:	ldr	x19, [sp, #32]
    c224:	ldp	x29, x30, [sp, #16]
    c228:	ldp	d9, d8, [sp], #48
    c22c:	ret
    c230:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    c234:	add	x0, x0, #0xe76
    c238:	mov	x1, xzr
    c23c:	mov	x2, xzr
    c240:	bl	8860 <PyOS_string_to_double@plt>
    c244:	mov	v8.16b, v0.16b
    c248:	fcmp	d0, d9
    c24c:	b.ne	c258 <PyInit__testcapi@@Base+0x309c>  // b.any
    c250:	bl	8980 <PyErr_Occurred@plt>
    c254:	cbnz	x0, c21c <PyInit__testcapi@@Base+0x3060>
    c258:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
    c25c:	ldr	d0, [x8, #3328]
    c260:	fcmp	d8, d0
    c264:	b.eq	c274 <PyInit__testcapi@@Base+0x30b8>  // b.none
    c268:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    c26c:	add	x3, x3, #0xe7c
    c270:	b	c200 <PyInit__testcapi@@Base+0x3044>
    c274:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    c278:	add	x0, x0, #0xea0
    c27c:	mov	x1, xzr
    c280:	mov	x2, xzr
    c284:	bl	8860 <PyOS_string_to_double@plt>
    c288:	mov	v8.16b, v0.16b
    c28c:	fcmp	d0, d9
    c290:	b.ne	c29c <PyInit__testcapi@@Base+0x30e0>  // b.any
    c294:	bl	8980 <PyErr_Occurred@plt>
    c298:	cbnz	x0, c21c <PyInit__testcapi@@Base+0x3060>
    c29c:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
    c2a0:	ldr	d0, [x8, #3336]
    c2a4:	fcmp	d8, d0
    c2a8:	b.eq	c2b8 <PyInit__testcapi@@Base+0x30fc>  // b.none
    c2ac:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    c2b0:	add	x3, x3, #0xea6
    c2b4:	b	c200 <PyInit__testcapi@@Base+0x3044>
    c2b8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    c2bc:	add	x0, x0, #0xeca
    c2c0:	mov	x1, xzr
    c2c4:	mov	x2, xzr
    c2c8:	bl	8860 <PyOS_string_to_double@plt>
    c2cc:	mov	v8.16b, v0.16b
    c2d0:	fcmp	d0, d9
    c2d4:	b.ne	c2e0 <PyInit__testcapi@@Base+0x3124>  // b.any
    c2d8:	bl	8980 <PyErr_Occurred@plt>
    c2dc:	cbnz	x0, c21c <PyInit__testcapi@@Base+0x3060>
    c2e0:	fmov	d0, #1.000000000000000000e+00
    c2e4:	fcmp	d8, d0
    c2e8:	b.eq	c2f8 <PyInit__testcapi@@Base+0x313c>  // b.none
    c2ec:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    c2f0:	add	x3, x3, #0xed0
    c2f4:	b	c200 <PyInit__testcapi@@Base+0x3044>
    c2f8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    c2fc:	add	x0, x0, #0xef4
    c300:	mov	x1, xzr
    c304:	mov	x2, xzr
    c308:	bl	8860 <PyOS_string_to_double@plt>
    c30c:	mov	v8.16b, v0.16b
    c310:	fcmp	d0, d9
    c314:	b.ne	c320 <PyInit__testcapi@@Base+0x3164>  // b.any
    c318:	bl	8980 <PyErr_Occurred@plt>
    c31c:	cbnz	x0, c21c <PyInit__testcapi@@Base+0x3060>
    c320:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
    c324:	ldr	d0, [x8, #3344]
    c328:	fcmp	d8, d0
    c32c:	b.eq	c33c <PyInit__testcapi@@Base+0x3180>  // b.none
    c330:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    c334:	add	x3, x3, #0xefa
    c338:	b	c200 <PyInit__testcapi@@Base+0x3044>
    c33c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    c340:	add	x0, x0, #0xf1e
    c344:	mov	x1, xzr
    c348:	mov	x2, xzr
    c34c:	bl	8860 <PyOS_string_to_double@plt>
    c350:	fcmp	d0, d9
    c354:	b.ne	c460 <PyInit__testcapi@@Base+0x32a4>  // b.any
    c358:	bl	8980 <PyErr_Occurred@plt>
    c35c:	cbz	x0, c460 <PyInit__testcapi@@Base+0x32a4>
    c360:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c364:	ldr	x19, [x19, #3944]
    c368:	ldr	x0, [x19]
    c36c:	bl	8760 <PyErr_ExceptionMatches@plt>
    c370:	cbz	w0, c21c <PyInit__testcapi@@Base+0x3060>
    c374:	bl	88c0 <PyErr_Clear@plt>
    c378:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    c37c:	add	x0, x0, #0xf4e
    c380:	mov	x1, xzr
    c384:	mov	x2, xzr
    c388:	bl	8860 <PyOS_string_to_double@plt>
    c38c:	fcmp	d0, d9
    c390:	b.ne	c46c <PyInit__testcapi@@Base+0x32b0>  // b.any
    c394:	bl	8980 <PyErr_Occurred@plt>
    c398:	cbz	x0, c46c <PyInit__testcapi@@Base+0x32b0>
    c39c:	ldr	x0, [x19]
    c3a0:	bl	8760 <PyErr_ExceptionMatches@plt>
    c3a4:	cbz	w0, c21c <PyInit__testcapi@@Base+0x3060>
    c3a8:	bl	88c0 <PyErr_Clear@plt>
    c3ac:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    c3b0:	add	x0, x0, #0xf7e
    c3b4:	mov	x1, xzr
    c3b8:	mov	x2, xzr
    c3bc:	bl	8860 <PyOS_string_to_double@plt>
    c3c0:	fcmp	d0, d9
    c3c4:	b.ne	c478 <PyInit__testcapi@@Base+0x32bc>  // b.any
    c3c8:	bl	8980 <PyErr_Occurred@plt>
    c3cc:	cbz	x0, c478 <PyInit__testcapi@@Base+0x32bc>
    c3d0:	ldr	x0, [x19]
    c3d4:	bl	8760 <PyErr_ExceptionMatches@plt>
    c3d8:	cbz	w0, c21c <PyInit__testcapi@@Base+0x3060>
    c3dc:	bl	88c0 <PyErr_Clear@plt>
    c3e0:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    c3e4:	add	x0, x0, #0xfb0
    c3e8:	mov	x1, xzr
    c3ec:	mov	x2, xzr
    c3f0:	bl	8860 <PyOS_string_to_double@plt>
    c3f4:	fcmp	d0, d9
    c3f8:	b.ne	c484 <PyInit__testcapi@@Base+0x32c8>  // b.any
    c3fc:	bl	8980 <PyErr_Occurred@plt>
    c400:	cbz	x0, c484 <PyInit__testcapi@@Base+0x32c8>
    c404:	ldr	x0, [x19]
    c408:	bl	8760 <PyErr_ExceptionMatches@plt>
    c40c:	cbz	w0, c21c <PyInit__testcapi@@Base+0x3060>
    c410:	bl	88c0 <PyErr_Clear@plt>
    c414:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    c418:	add	x0, x0, #0xfdc
    c41c:	mov	x1, xzr
    c420:	mov	x2, xzr
    c424:	bl	8860 <PyOS_string_to_double@plt>
    c428:	fcmp	d0, d9
    c42c:	b.ne	c490 <PyInit__testcapi@@Base+0x32d4>  // b.any
    c430:	bl	8980 <PyErr_Occurred@plt>
    c434:	cbz	x0, c490 <PyInit__testcapi@@Base+0x32d4>
    c438:	ldr	x0, [x19]
    c43c:	bl	8760 <PyErr_ExceptionMatches@plt>
    c440:	cbz	w0, c21c <PyInit__testcapi@@Base+0x3060>
    c444:	bl	88c0 <PyErr_Clear@plt>
    c448:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c44c:	ldr	x0, [x0, #4016]
    c450:	ldr	x8, [x0]
    c454:	add	x8, x8, #0x1
    c458:	str	x8, [x0]
    c45c:	b	c220 <PyInit__testcapi@@Base+0x3064>
    c460:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    c464:	add	x3, x3, #0xf23
    c468:	b	c200 <PyInit__testcapi@@Base+0x3044>
    c46c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    c470:	add	x3, x3, #0xf53
    c474:	b	c200 <PyInit__testcapi@@Base+0x3044>
    c478:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    c47c:	add	x3, x3, #0xf84
    c480:	b	c200 <PyInit__testcapi@@Base+0x3044>
    c484:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    c488:	add	x3, x3, #0xfb3
    c48c:	b	c200 <PyInit__testcapi@@Base+0x3044>
    c490:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    c494:	add	x3, x3, #0xfe3
    c498:	b	c200 <PyInit__testcapi@@Base+0x3044>
    c49c:	stp	x29, x30, [sp, #-32]!
    c4a0:	stp	x20, x19, [sp, #16]
    c4a4:	mov	x29, sp
    c4a8:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e44>
    c4ac:	add	x0, x0, #0x1d0
    c4b0:	mov	w1, #0x4                   	// #4
    c4b4:	bl	8eb0 <PyUnicode_FromStringAndSize@plt>
    c4b8:	cbz	x0, c520 <PyInit__testcapi@@Base+0x3364>
    c4bc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c4c0:	add	x1, x1, #0x10
    c4c4:	mov	x19, x0
    c4c8:	bl	8a90 <PyUnicode_CompareWithASCIIString@plt>
    c4cc:	ldr	x8, [x19]
    c4d0:	mov	w20, w0
    c4d4:	subs	x8, x8, #0x1
    c4d8:	str	x8, [x19]
    c4dc:	b.eq	c4fc <PyInit__testcapi@@Base+0x3340>  // b.none
    c4e0:	cbz	w20, c508 <PyInit__testcapi@@Base+0x334c>
    c4e4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c4e8:	ldr	x0, [x0, #4016]
    c4ec:	ldr	x8, [x0]
    c4f0:	add	x8, x8, #0x1
    c4f4:	str	x8, [x0]
    c4f8:	b	c520 <PyInit__testcapi@@Base+0x3364>
    c4fc:	mov	x0, x19
    c500:	bl	8560 <_Py_Dealloc@plt>
    c504:	cbnz	w20, c4e4 <PyInit__testcapi@@Base+0x3328>
    c508:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c50c:	ldr	x0, [x8, #3520]
    c510:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c514:	add	x1, x1, #0x14
    c518:	bl	8670 <PyErr_SetString@plt>
    c51c:	mov	x0, xzr
    c520:	ldp	x20, x19, [sp, #16]
    c524:	ldp	x29, x30, [sp], #32
    c528:	ret
    c52c:	sub	sp, sp, #0xa0
    c530:	stp	x29, x30, [sp, #96]
    c534:	stp	x24, x23, [sp, #112]
    c538:	stp	x22, x21, [sp, #128]
    c53c:	stp	x20, x19, [sp, #144]
    c540:	add	x29, sp, #0x60
    c544:	adrp	x1, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c548:	add	x1, x1, #0xcc0
    c54c:	mov	x0, sp
    c550:	mov	w2, #0x60                  	// #96
    c554:	bl	8250 <memcpy@plt>
    c558:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c55c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c560:	adrp	x2, 11000 <PyInit__testcapi@@Base+0x7e44>
    c564:	add	x0, x0, #0x25b
    c568:	add	x1, x1, #0x26b
    c56c:	add	x2, x2, #0xbdc
    c570:	bl	8e10 <PyCapsule_New@plt>
    c574:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c578:	add	x1, x1, #0x315
    c57c:	mov	x20, x0
    c580:	bl	8f80 <PyCapsule_SetContext@plt>
    c584:	mov	x0, x20
    c588:	bl	11bdc <PyInit__testcapi@@Base+0x8a20>
    c58c:	adrp	x23, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c590:	ldr	x19, [x23, #3552]
    c594:	cbnz	x19, c680 <PyInit__testcapi@@Base+0x34c4>
    c598:	adrp	x22, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c59c:	ldr	w8, [x22, #3560]
    c5a0:	cbz	w8, c678 <PyInit__testcapi@@Base+0x34bc>
    c5a4:	str	wzr, [x22, #3560]
    c5a8:	ldr	x8, [x20]
    c5ac:	subs	x8, x8, #0x1
    c5b0:	str	x8, [x20]
    c5b4:	b.eq	c6bc <PyInit__testcapi@@Base+0x3500>  // b.none
    c5b8:	ldr	w8, [x22, #3560]
    c5bc:	cbz	w8, c678 <PyInit__testcapi@@Base+0x34bc>
    c5c0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c5c4:	add	x1, x1, #0x9a
    c5c8:	mov	x0, sp
    c5cc:	mov	x2, xzr
    c5d0:	str	wzr, [x22, #3560]
    c5d4:	bl	8e10 <PyCapsule_New@plt>
    c5d8:	adrp	x21, 15000 <PyInit__testcapi@@Base+0xbe44>
    c5dc:	add	x21, x21, #0x25b
    c5e0:	mov	x1, x21
    c5e4:	mov	x20, x0
    c5e8:	bl	8d00 <PyCapsule_SetPointer@plt>
    c5ec:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c5f0:	add	x1, x1, #0x26b
    c5f4:	mov	x0, x20
    c5f8:	bl	83f0 <PyCapsule_SetName@plt>
    c5fc:	adrp	x1, 11000 <PyInit__testcapi@@Base+0x7e44>
    c600:	add	x1, x1, #0xbdc
    c604:	mov	x0, x20
    c608:	bl	8a50 <PyCapsule_SetDestructor@plt>
    c60c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c610:	add	x1, x1, #0x315
    c614:	mov	x0, x20
    c618:	bl	8f80 <PyCapsule_SetContext@plt>
    c61c:	mov	x0, x20
    c620:	bl	11bdc <PyInit__testcapi@@Base+0x8a20>
    c624:	ldr	x19, [x23, #3552]
    c628:	cbnz	x19, c680 <PyInit__testcapi@@Base+0x34c4>
    c62c:	ldr	w8, [x22, #3560]
    c630:	cbz	w8, c678 <PyInit__testcapi@@Base+0x34bc>
    c634:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c638:	add	x1, x1, #0xa2
    c63c:	mov	x0, x20
    c640:	str	wzr, [x22, #3560]
    c644:	bl	8e70 <PyCapsule_GetPointer@plt>
    c648:	mov	x19, x0
    c64c:	bl	8980 <PyErr_Occurred@plt>
    c650:	cbz	x0, c6d0 <PyInit__testcapi@@Base+0x3514>
    c654:	bl	88c0 <PyErr_Clear@plt>
    c658:	cbz	x19, c6dc <PyInit__testcapi@@Base+0x3520>
    c65c:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
    c660:	adrp	x9, 15000 <PyInit__testcapi@@Base+0xbe44>
    c664:	add	x8, x8, #0x12a
    c668:	add	x9, x9, #0xe6
    c66c:	cmp	x19, x21
    c670:	csel	x19, x9, x8, eq  // eq = none
    c674:	b	c680 <PyInit__testcapi@@Base+0x34c4>
    c678:	adrp	x19, 15000 <PyInit__testcapi@@Base+0xbe44>
    c67c:	add	x19, x19, #0x83
    c680:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c684:	ldr	x0, [x8, #3520]
    c688:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c68c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    c690:	add	x1, x1, #0x842
    c694:	add	x2, x2, #0x98f
    c698:	mov	x3, x19
    c69c:	bl	8e60 <PyErr_Format@plt>
    c6a0:	mov	x0, xzr
    c6a4:	ldp	x20, x19, [sp, #144]
    c6a8:	ldp	x22, x21, [sp, #128]
    c6ac:	ldp	x24, x23, [sp, #112]
    c6b0:	ldp	x29, x30, [sp, #96]
    c6b4:	add	sp, sp, #0xa0
    c6b8:	ret
    c6bc:	mov	x0, x20
    c6c0:	bl	8560 <_Py_Dealloc@plt>
    c6c4:	ldr	x19, [x23, #3552]
    c6c8:	cbnz	x19, c680 <PyInit__testcapi@@Base+0x34c4>
    c6cc:	b	c5b8 <PyInit__testcapi@@Base+0x33fc>
    c6d0:	adrp	x19, 15000 <PyInit__testcapi@@Base+0xbe44>
    c6d4:	add	x19, x19, #0xb1
    c6d8:	b	c680 <PyInit__testcapi@@Base+0x34c4>
    c6dc:	mov	x0, x20
    c6e0:	mov	x1, xzr
    c6e4:	bl	8a50 <PyCapsule_SetDestructor@plt>
    c6e8:	ldr	x8, [x20]
    c6ec:	subs	x8, x8, #0x1
    c6f0:	str	x8, [x20]
    c6f4:	b.ne	c700 <PyInit__testcapi@@Base+0x3544>  // b.any
    c6f8:	mov	x0, x20
    c6fc:	bl	8560 <_Py_Dealloc@plt>
    c700:	ldr	w8, [x22, #3560]
    c704:	cbz	w8, c714 <PyInit__testcapi@@Base+0x3558>
    c708:	adrp	x19, 15000 <PyInit__testcapi@@Base+0xbe44>
    c70c:	add	x19, x19, #0x16e
    c710:	b	c680 <PyInit__testcapi@@Base+0x34c4>
    c714:	ldr	x0, [sp, #8]
    c718:	cbz	x0, c7c0 <PyInit__testcapi@@Base+0x3604>
    c71c:	mov	x8, sp
    c720:	adrp	x20, 15000 <PyInit__testcapi@@Base+0xbe44>
    c724:	add	x24, x8, #0x10
    c728:	add	x20, x20, #0x1ef
    c72c:	bl	89b0 <PyImport_ImportModule@plt>
    c730:	cbz	x0, c7b0 <PyInit__testcapi@@Base+0x35f4>
    c734:	mov	x19, x0
    c738:	ldur	x0, [x24, #-16]
    c73c:	mov	w1, wzr
    c740:	bl	8820 <PyCapsule_Import@plt>
    c744:	cbz	x0, c7d8 <PyInit__testcapi@@Base+0x361c>
    c748:	ldr	x1, [x24]
    c74c:	mov	x21, x0
    c750:	mov	x0, x19
    c754:	bl	84a0 <PyObject_GetAttrString@plt>
    c758:	cbz	x0, c810 <PyInit__testcapi@@Base+0x3654>
    c75c:	mov	x1, x20
    c760:	mov	x22, x0
    c764:	bl	8e70 <PyCapsule_GetPointer@plt>
    c768:	mov	x23, x0
    c76c:	bl	8980 <PyErr_Occurred@plt>
    c770:	cbz	x0, c82c <PyInit__testcapi@@Base+0x3670>
    c774:	bl	88c0 <PyErr_Clear@plt>
    c778:	cbnz	x23, c87c <PyInit__testcapi@@Base+0x36c0>
    c77c:	ldr	x8, [x22]
    c780:	subs	x8, x8, #0x1
    c784:	str	x8, [x22]
    c788:	b.ne	c794 <PyInit__testcapi@@Base+0x35d8>  // b.any
    c78c:	mov	x0, x22
    c790:	bl	8560 <_Py_Dealloc@plt>
    c794:	ldr	x8, [x19]
    c798:	subs	x8, x8, #0x1
    c79c:	str	x8, [x19]
    c7a0:	b.ne	c7b4 <PyInit__testcapi@@Base+0x35f8>  // b.any
    c7a4:	mov	x0, x19
    c7a8:	bl	8560 <_Py_Dealloc@plt>
    c7ac:	b	c7b4 <PyInit__testcapi@@Base+0x35f8>
    c7b0:	bl	88c0 <PyErr_Clear@plt>
    c7b4:	ldr	x0, [x24, #16]
    c7b8:	add	x24, x24, #0x18
    c7bc:	cbnz	x0, c72c <PyInit__testcapi@@Base+0x3570>
    c7c0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c7c4:	ldr	x0, [x0, #4016]
    c7c8:	ldr	x8, [x0]
    c7cc:	add	x8, x8, #0x1
    c7d0:	str	x8, [x0]
    c7d4:	b	c6a4 <PyInit__testcapi@@Base+0x34e8>
    c7d8:	ldr	x8, [x19]
    c7dc:	subs	x8, x8, #0x1
    c7e0:	str	x8, [x19]
    c7e4:	b.ne	c7f0 <PyInit__testcapi@@Base+0x3634>  // b.any
    c7e8:	mov	x0, x19
    c7ec:	bl	8560 <_Py_Dealloc@plt>
    c7f0:	ldp	x3, x4, [x24, #-8]
    c7f4:	adrp	x19, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c7f8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c7fc:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    c800:	add	x19, x19, #0xdec
    c804:	add	x1, x1, #0x19e
    c808:	add	x2, x2, #0x1be
    c80c:	b	c8dc <PyInit__testcapi@@Base+0x3720>
    c810:	ldr	x8, [x19]
    c814:	subs	x8, x8, #0x1
    c818:	str	x8, [x19]
    c81c:	b.ne	c6a0 <PyInit__testcapi@@Base+0x34e4>  // b.any
    c820:	mov	x0, x19
    c824:	bl	8560 <_Py_Dealloc@plt>
    c828:	b	c6a0 <PyInit__testcapi@@Base+0x34e4>
    c82c:	ldr	x8, [x22]
    c830:	subs	x8, x8, #0x1
    c834:	str	x8, [x22]
    c838:	b.ne	c844 <PyInit__testcapi@@Base+0x3688>  // b.any
    c83c:	mov	x0, x22
    c840:	bl	8560 <_Py_Dealloc@plt>
    c844:	ldr	x8, [x19]
    c848:	subs	x8, x8, #0x1
    c84c:	str	x8, [x19]
    c850:	b.ne	c85c <PyInit__testcapi@@Base+0x36a0>  // b.any
    c854:	mov	x0, x19
    c858:	bl	8560 <_Py_Dealloc@plt>
    c85c:	ldp	x3, x4, [x24, #-8]
    c860:	adrp	x19, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c864:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c868:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    c86c:	add	x19, x19, #0xdec
    c870:	add	x1, x1, #0x19e
    c874:	add	x2, x2, #0xb1
    c878:	b	c8dc <PyInit__testcapi@@Base+0x3720>
    c87c:	ldr	x8, [x19]
    c880:	subs	x8, x8, #0x1
    c884:	str	x8, [x19]
    c888:	b.ne	c894 <PyInit__testcapi@@Base+0x36d8>  // b.any
    c88c:	mov	x0, x19
    c890:	bl	8560 <_Py_Dealloc@plt>
    c894:	ldr	x8, [x22]
    c898:	subs	x8, x8, #0x1
    c89c:	str	x8, [x22]
    c8a0:	b.ne	c8ac <PyInit__testcapi@@Base+0x36f0>  // b.any
    c8a4:	mov	x0, x22
    c8a8:	bl	8560 <_Py_Dealloc@plt>
    c8ac:	ldp	x3, x4, [x24, #-8]
    c8b0:	adrp	x19, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c8b4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c8b8:	add	x19, x19, #0xdec
    c8bc:	add	x1, x1, #0x19e
    c8c0:	cmp	x23, x21
    c8c4:	b.eq	c8d4 <PyInit__testcapi@@Base+0x3718>  // b.none
    c8c8:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    c8cc:	add	x2, x2, #0x12a
    c8d0:	b	c8dc <PyInit__testcapi@@Base+0x3720>
    c8d4:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    c8d8:	add	x2, x2, #0x217
    c8dc:	mov	x0, x19
    c8e0:	bl	84e0 <sprintf@plt>
    c8e4:	b	c680 <PyInit__testcapi@@Base+0x34c4>
    c8e8:	sub	sp, sp, #0xc0
    c8ec:	stp	x29, x30, [sp, #176]
    c8f0:	add	x29, sp, #0xb0
    c8f4:	movi	v0.2d, #0xffffffffffffffff
    c8f8:	adrp	x9, 13000 <PyInit__testcapi@@Base+0x9e44>
    c8fc:	add	x9, x9, #0x1d8
    c900:	stp	q0, q0, [x29, #-48]
    c904:	movi	v0.2s, #0x1
    c908:	mov	w8, #0xffffffff            	// #-1
    c90c:	str	d0, [sp, #32]
    c910:	ldr	q0, [x9]
    c914:	stur	w8, [x29, #-16]
    c918:	mov	w8, #0x5                   	// #5
    c91c:	str	x8, [sp, #88]
    c920:	mov	w8, #0x8                   	// #8
    c924:	stp	xzr, x8, [sp, #72]
    c928:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
    c92c:	ldr	w9, [x9, #16]
    c930:	stur	q0, [x29, #-80]
    c934:	ldr	q0, [x8, #3360]
    c938:	add	x8, sp, #0x58
    c93c:	stp	xzr, x8, [sp, #40]
    c940:	sub	x8, x29, #0x30
    c944:	stur	w9, [x29, #-64]
    c948:	add	x9, sp, #0x50
    c94c:	mov	x0, sp
    c950:	sub	x1, x29, #0x50
    c954:	mov	w2, #0x14                  	// #20
    c958:	mov	w3, #0x43                  	// #67
    c95c:	stp	x8, xzr, [sp]
    c960:	str	q0, [sp, #16]
    c964:	stp	x9, xzr, [sp, #56]
    c968:	bl	8cc0 <PyBuffer_FromContiguous@plt>
    c96c:	ldr	x8, [sp]
    c970:	mov	x9, xzr
    c974:	ldr	w10, [x8]
    c978:	cmp	x9, x10
    c97c:	b.ne	c9f8 <PyInit__testcapi@@Base+0x383c>  // b.any
    c980:	add	x9, x9, #0x1
    c984:	cmp	x9, #0x5
    c988:	add	x8, x8, #0x8
    c98c:	b.ne	c974 <PyInit__testcapi@@Base+0x37b8>  // b.any
    c990:	ldr	x9, [sp, #56]
    c994:	sub	x8, x29, #0x30
    c998:	add	x8, x8, #0x20
    c99c:	str	x8, [sp]
    c9a0:	mov	x8, #0xfffffffffffffff8    	// #-8
    c9a4:	str	x8, [x9]
    c9a8:	ldr	x2, [sp, #16]
    c9ac:	mov	x0, sp
    c9b0:	sub	x1, x29, #0x50
    c9b4:	mov	w3, #0x43                  	// #67
    c9b8:	bl	8cc0 <PyBuffer_FromContiguous@plt>
    c9bc:	ldr	x8, [sp]
    c9c0:	mov	x9, xzr
    c9c4:	ldr	w10, [x8]
    c9c8:	cmp	x9, x10
    c9cc:	b.ne	c9f8 <PyInit__testcapi@@Base+0x383c>  // b.any
    c9d0:	add	x9, x9, #0x1
    c9d4:	cmp	x9, #0x5
    c9d8:	sub	x8, x8, #0x8
    c9dc:	b.ne	c9c4 <PyInit__testcapi@@Base+0x3808>  // b.any
    c9e0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c9e4:	ldr	x0, [x0, #4016]
    c9e8:	ldr	x8, [x0]
    c9ec:	add	x8, x8, #0x1
    c9f0:	str	x8, [x0]
    c9f4:	b	ca10 <PyInit__testcapi@@Base+0x3854>
    c9f8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c9fc:	ldr	x0, [x8, #3520]
    ca00:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ca04:	add	x1, x1, #0x325
    ca08:	bl	8670 <PyErr_SetString@plt>
    ca0c:	mov	x0, xzr
    ca10:	ldp	x29, x30, [sp, #176]
    ca14:	add	sp, sp, #0xc0
    ca18:	ret
    ca1c:	stp	x29, x30, [sp, #-48]!
    ca20:	str	x21, [sp, #16]
    ca24:	stp	x20, x19, [sp, #32]
    ca28:	mov	x29, sp
    ca2c:	add	x2, x29, #0x18
    ca30:	mov	w3, #0x1                   	// #1
    ca34:	mov	x0, xzr
    ca38:	mov	x1, xzr
    ca3c:	mov	w4, wzr
    ca40:	mov	w5, wzr
    ca44:	bl	8870 <PyBuffer_FillInfo@plt>
    ca48:	mov	w19, w0
    ca4c:	bl	8980 <PyErr_Occurred@plt>
    ca50:	cbz	x0, caf8 <PyInit__testcapi@@Base+0x393c>
    ca54:	adrp	x21, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ca58:	ldr	x21, [x21, #3896]
    ca5c:	ldr	x0, [x21]
    ca60:	bl	8760 <PyErr_ExceptionMatches@plt>
    ca64:	mov	w20, w0
    ca68:	bl	88c0 <PyErr_Clear@plt>
    ca6c:	cmn	w19, #0x1
    ca70:	b.ne	cafc <PyInit__testcapi@@Base+0x3940>  // b.any
    ca74:	cbz	w20, cafc <PyInit__testcapi@@Base+0x3940>
    ca78:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ca7c:	ldr	x0, [x0, #3864]
    ca80:	mov	x1, xzr
    ca84:	ldr	x8, [x0, #304]
    ca88:	blr	x8
    ca8c:	cbz	x0, cb14 <PyInit__testcapi@@Base+0x3958>
    ca90:	mov	x1, xzr
    ca94:	mov	w2, wzr
    ca98:	mov	x20, x0
    ca9c:	bl	8c40 <PyObject_GetBuffer@plt>
    caa0:	ldr	x8, [x20]
    caa4:	mov	w19, w0
    caa8:	subs	x8, x8, #0x1
    caac:	str	x8, [x20]
    cab0:	b.ne	cabc <PyInit__testcapi@@Base+0x3900>  // b.any
    cab4:	mov	x0, x20
    cab8:	bl	8560 <_Py_Dealloc@plt>
    cabc:	bl	8980 <PyErr_Occurred@plt>
    cac0:	cbz	x0, caf8 <PyInit__testcapi@@Base+0x393c>
    cac4:	ldr	x0, [x21]
    cac8:	bl	8760 <PyErr_ExceptionMatches@plt>
    cacc:	mov	w20, w0
    cad0:	bl	88c0 <PyErr_Clear@plt>
    cad4:	cmn	w19, #0x1
    cad8:	b.ne	cafc <PyInit__testcapi@@Base+0x3940>  // b.any
    cadc:	cbz	w20, cafc <PyInit__testcapi@@Base+0x3940>
    cae0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    cae4:	ldr	x0, [x0, #4016]
    cae8:	ldr	x8, [x0]
    caec:	add	x8, x8, #0x1
    caf0:	str	x8, [x0]
    caf4:	b	cb14 <PyInit__testcapi@@Base+0x3958>
    caf8:	bl	88c0 <PyErr_Clear@plt>
    cafc:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    cb00:	ldr	x0, [x8, #3520]
    cb04:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    cb08:	add	x1, x1, #0x34c
    cb0c:	bl	8670 <PyErr_SetString@plt>
    cb10:	mov	x0, xzr
    cb14:	ldp	x20, x19, [sp, #32]
    cb18:	ldr	x21, [sp, #16]
    cb1c:	ldp	x29, x30, [sp], #48
    cb20:	ret
    cb24:	stp	x29, x30, [sp, #-16]!
    cb28:	mov	x29, sp
    cb2c:	mov	x0, x1
    cb30:	mov	x1, xzr
    cb34:	mov	w2, wzr
    cb38:	bl	8c40 <PyObject_GetBuffer@plt>
    cb3c:	tbnz	w0, #31, cb58 <PyInit__testcapi@@Base+0x399c>
    cb40:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    cb44:	ldr	x0, [x0, #4016]
    cb48:	ldr	x8, [x0]
    cb4c:	add	x8, x8, #0x1
    cb50:	str	x8, [x0]
    cb54:	b	cb5c <PyInit__testcapi@@Base+0x39a0>
    cb58:	mov	x0, xzr
    cb5c:	ldp	x29, x30, [sp], #16
    cb60:	ret
    cb64:	stp	x29, x30, [sp, #-32]!
    cb68:	str	x19, [sp, #16]
    cb6c:	mov	x29, sp
    cb70:	mov	x0, xzr
    cb74:	bl	82a0 <PyList_New@plt>
    cb78:	cbz	x0, cc74 <PyInit__testcapi@@Base+0x3ab8>
    cb7c:	ldr	x8, [x0]
    cb80:	mov	x19, x0
    cb84:	mov	x1, x19
    cb88:	add	x8, x8, #0x1
    cb8c:	str	x8, [x0]
    cb90:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    cb94:	add	x0, x0, #0x3cd
    cb98:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    cb9c:	cbz	x0, cc74 <PyInit__testcapi@@Base+0x3ab8>
    cba0:	cmp	x0, x19
    cba4:	b.eq	cbcc <PyInit__testcapi@@Base+0x3a10>  // b.none
    cba8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    cbac:	ldr	x0, [x8, #3520]
    cbb0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    cbb4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    cbb8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    cbbc:	add	x1, x1, #0x842
    cbc0:	add	x2, x2, #0x9ec
    cbc4:	add	x3, x3, #0x377
    cbc8:	b	cc6c <PyInit__testcapi@@Base+0x3ab0>
    cbcc:	ldr	x8, [x19]
    cbd0:	cmp	x8, #0x2
    cbd4:	b.ne	cc4c <PyInit__testcapi@@Base+0x3a90>  // b.any
    cbd8:	mov	x0, x19
    cbdc:	str	xzr, [x19]
    cbe0:	bl	8560 <_Py_Dealloc@plt>
    cbe4:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    cbe8:	add	x0, x0, #0x3cb
    cbec:	bl	11ca0 <PyInit__testcapi@@Base+0x8ae4>
    cbf0:	tbnz	w0, #31, cc70 <PyInit__testcapi@@Base+0x3ab4>
    cbf4:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    cbf8:	add	x0, x0, #0x3cf
    cbfc:	bl	11ca0 <PyInit__testcapi@@Base+0x8ae4>
    cc00:	tbnz	w0, #31, cc70 <PyInit__testcapi@@Base+0x3ab4>
    cc04:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    cc08:	add	x0, x0, #0x3d5
    cc0c:	bl	11ca0 <PyInit__testcapi@@Base+0x8ae4>
    cc10:	tbnz	w0, #31, cc70 <PyInit__testcapi@@Base+0x3ab4>
    cc14:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    cc18:	add	x0, x0, #0x3db
    cc1c:	bl	11ca0 <PyInit__testcapi@@Base+0x8ae4>
    cc20:	tbnz	w0, #31, cc70 <PyInit__testcapi@@Base+0x3ab4>
    cc24:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    cc28:	add	x0, x0, #0x3e1
    cc2c:	bl	11ca0 <PyInit__testcapi@@Base+0x8ae4>
    cc30:	tbnz	w0, #31, cc70 <PyInit__testcapi@@Base+0x3ab4>
    cc34:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    cc38:	ldr	x0, [x0, #4016]
    cc3c:	ldr	x8, [x0]
    cc40:	add	x8, x8, #0x1
    cc44:	str	x8, [x0]
    cc48:	b	cc74 <PyInit__testcapi@@Base+0x3ab8>
    cc4c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    cc50:	ldr	x0, [x8, #3520]
    cc54:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    cc58:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    cc5c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    cc60:	add	x1, x1, #0x842
    cc64:	add	x2, x2, #0x9ec
    cc68:	add	x3, x3, #0x3a0
    cc6c:	bl	8e60 <PyErr_Format@plt>
    cc70:	mov	x0, xzr
    cc74:	ldr	x19, [sp, #16]
    cc78:	ldp	x29, x30, [sp], #32
    cc7c:	ret
    cc80:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    cc84:	ldr	x8, [x8, #4016]
    cc88:	cmp	x1, #0x0
    cc8c:	csel	x0, x8, x1, eq  // eq = none
    cc90:	ldr	x8, [x0]
    cc94:	add	x8, x8, #0x1
    cc98:	str	x8, [x0]
    cc9c:	ret
    cca0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    cca4:	ldr	x8, [x8, #4016]
    cca8:	cmp	x2, #0x0
    ccac:	csel	x0, x8, x2, eq  // eq = none
    ccb0:	ldr	x8, [x0]
    ccb4:	add	x8, x8, #0x1
    ccb8:	str	x8, [x0]
    ccbc:	ret
    ccc0:	sub	sp, sp, #0x20
    ccc4:	stp	x29, x30, [sp, #16]
    ccc8:	add	x29, sp, #0x10
    cccc:	mov	x0, x1
    ccd0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ccd4:	add	x1, x1, #0x4b4
    ccd8:	sub	x2, x29, #0x4
    ccdc:	add	x3, sp, #0x8
    cce0:	add	x4, sp, #0x4
    cce4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cce8:	cbz	w0, cd04 <PyInit__testcapi@@Base+0x3b48>
    ccec:	ldur	w1, [x29, #-4]
    ccf0:	ldp	w3, w2, [sp, #4]
    ccf4:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    ccf8:	add	x0, x0, #0x4da
    ccfc:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    cd00:	b	cd08 <PyInit__testcapi@@Base+0x3b4c>
    cd04:	mov	x0, xzr
    cd08:	ldp	x29, x30, [sp, #16]
    cd0c:	add	sp, sp, #0x20
    cd10:	ret
    cd14:	sub	sp, sp, #0x70
    cd18:	stp	x29, x30, [sp, #96]
    cd1c:	add	x29, sp, #0x60
    cd20:	mov	x8, x2
    cd24:	mov	x9, #0xffffffffffffffff    	// #-1
    cd28:	add	x10, sp, #0x30
    cd2c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    cd30:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
    cd34:	mov	x0, x1
    cd38:	movi	v0.2d, #0xffffffffffffffff
    cd3c:	str	x9, [sp, #80]
    cd40:	add	x9, x10, #0x10
    cd44:	add	x11, x10, #0x20
    cd48:	orr	x5, x10, #0x4
    cd4c:	orr	x6, x10, #0x8
    cd50:	orr	x7, x10, #0xc
    cd54:	add	x12, x10, #0x14
    cd58:	add	x13, x10, #0x18
    cd5c:	add	x14, x10, #0x1c
    cd60:	add	x10, x10, #0x24
    cd64:	add	x2, x2, #0x1ec
    cd68:	add	x3, x3, #0x540
    cd6c:	add	x4, sp, #0x30
    cd70:	mov	x1, x8
    cd74:	stp	q0, q0, [sp, #48]
    cd78:	stp	x11, x10, [sp, #32]
    cd7c:	stp	x13, x14, [sp, #16]
    cd80:	stp	x9, x12, [sp]
    cd84:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    cd88:	cbz	w0, cdbc <PyInit__testcapi@@Base+0x3c00>
    cd8c:	ldp	w1, w2, [sp, #48]
    cd90:	ldp	w3, w4, [sp, #56]
    cd94:	ldp	w5, w6, [sp, #64]
    cd98:	ldp	w7, w8, [sp, #72]
    cd9c:	ldp	w9, w10, [sp, #80]
    cda0:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    cda4:	add	x0, x0, #0x4d3
    cda8:	str	w8, [sp]
    cdac:	str	w10, [sp, #16]
    cdb0:	str	w9, [sp, #8]
    cdb4:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    cdb8:	b	cdc0 <PyInit__testcapi@@Base+0x3c04>
    cdbc:	mov	x0, xzr
    cdc0:	ldp	x29, x30, [sp, #96]
    cdc4:	add	sp, sp, #0x70
    cdc8:	ret
    cdcc:	sub	sp, sp, #0x20
    cdd0:	stp	x29, x30, [sp, #16]
    cdd4:	add	x29, sp, #0x10
    cdd8:	mov	x8, x2
    cddc:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    cde0:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
    cde4:	mov	x0, x1
    cde8:	mov	w9, #0xffffffff            	// #-1
    cdec:	add	x2, x2, #0x4e7
    cdf0:	add	x3, x3, #0x570
    cdf4:	sub	x4, x29, #0x4
    cdf8:	add	x5, sp, #0x8
    cdfc:	add	x6, sp, #0x4
    ce00:	mov	x1, x8
    ce04:	stur	w9, [x29, #-4]
    ce08:	stp	w9, w9, [sp, #4]
    ce0c:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    ce10:	cbz	w0, ce2c <PyInit__testcapi@@Base+0x3c70>
    ce14:	ldur	w1, [x29, #-4]
    ce18:	ldp	w3, w2, [sp, #4]
    ce1c:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    ce20:	add	x0, x0, #0x4da
    ce24:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    ce28:	b	ce30 <PyInit__testcapi@@Base+0x3c74>
    ce2c:	mov	x0, xzr
    ce30:	ldp	x29, x30, [sp, #16]
    ce34:	add	sp, sp, #0x20
    ce38:	ret
    ce3c:	sub	sp, sp, #0x20
    ce40:	stp	x29, x30, [sp, #16]
    ce44:	add	x29, sp, #0x10
    ce48:	mov	x8, x2
    ce4c:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    ce50:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ce54:	mov	x0, x1
    ce58:	mov	w9, #0xffffffff            	// #-1
    ce5c:	add	x2, x2, #0x4f5
    ce60:	add	x3, x3, #0x590
    ce64:	sub	x4, x29, #0x4
    ce68:	add	x5, sp, #0x8
    ce6c:	add	x6, sp, #0x4
    ce70:	mov	x1, x8
    ce74:	stur	w9, [x29, #-4]
    ce78:	stp	w9, w9, [sp, #4]
    ce7c:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    ce80:	cbz	w0, ce9c <PyInit__testcapi@@Base+0x3ce0>
    ce84:	ldur	w1, [x29, #-4]
    ce88:	ldp	w3, w2, [sp, #4]
    ce8c:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    ce90:	add	x0, x0, #0x4da
    ce94:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    ce98:	b	cea0 <PyInit__testcapi@@Base+0x3ce4>
    ce9c:	mov	x0, xzr
    cea0:	ldp	x29, x30, [sp, #16]
    cea4:	add	sp, sp, #0x20
    cea8:	ret
    ceac:	sub	sp, sp, #0x20
    ceb0:	stp	x29, x30, [sp, #16]
    ceb4:	add	x29, sp, #0x10
    ceb8:	mov	x0, x1
    cebc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    cec0:	add	x1, x1, #0xa73
    cec4:	sub	x2, x29, #0x4
    cec8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cecc:	cbz	w0, cedc <PyInit__testcapi@@Base+0x3d20>
    ced0:	ldurb	w0, [x29, #-4]
    ced4:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    ced8:	b	cee0 <PyInit__testcapi@@Base+0x3d24>
    cedc:	mov	x0, xzr
    cee0:	ldp	x29, x30, [sp, #16]
    cee4:	add	sp, sp, #0x20
    cee8:	ret
    ceec:	sub	sp, sp, #0x20
    cef0:	stp	x29, x30, [sp, #16]
    cef4:	add	x29, sp, #0x10
    cef8:	mov	x0, x1
    cefc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    cf00:	add	x1, x1, #0xa7d
    cf04:	sub	x2, x29, #0x4
    cf08:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cf0c:	cbz	w0, cf1c <PyInit__testcapi@@Base+0x3d60>
    cf10:	ldurb	w0, [x29, #-4]
    cf14:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    cf18:	b	cf20 <PyInit__testcapi@@Base+0x3d64>
    cf1c:	mov	x0, xzr
    cf20:	ldp	x29, x30, [sp, #16]
    cf24:	add	sp, sp, #0x20
    cf28:	ret
    cf2c:	sub	sp, sp, #0x20
    cf30:	stp	x29, x30, [sp, #16]
    cf34:	add	x29, sp, #0x10
    cf38:	mov	x0, x1
    cf3c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    cf40:	add	x1, x1, #0xa87
    cf44:	sub	x2, x29, #0x4
    cf48:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cf4c:	cbz	w0, cf5c <PyInit__testcapi@@Base+0x3da0>
    cf50:	ldursh	x0, [x29, #-4]
    cf54:	bl	8840 <PyLong_FromLong@plt>
    cf58:	b	cf60 <PyInit__testcapi@@Base+0x3da4>
    cf5c:	mov	x0, xzr
    cf60:	ldp	x29, x30, [sp, #16]
    cf64:	add	sp, sp, #0x20
    cf68:	ret
    cf6c:	sub	sp, sp, #0x20
    cf70:	stp	x29, x30, [sp, #16]
    cf74:	add	x29, sp, #0x10
    cf78:	mov	x0, x1
    cf7c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    cf80:	add	x1, x1, #0xa91
    cf84:	sub	x2, x29, #0x4
    cf88:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cf8c:	cbz	w0, cf9c <PyInit__testcapi@@Base+0x3de0>
    cf90:	ldurh	w0, [x29, #-4]
    cf94:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    cf98:	b	cfa0 <PyInit__testcapi@@Base+0x3de4>
    cf9c:	mov	x0, xzr
    cfa0:	ldp	x29, x30, [sp, #16]
    cfa4:	add	sp, sp, #0x20
    cfa8:	ret
    cfac:	sub	sp, sp, #0x20
    cfb0:	stp	x29, x30, [sp, #16]
    cfb4:	add	x29, sp, #0x10
    cfb8:	mov	x0, x1
    cfbc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    cfc0:	add	x1, x1, #0x62
    cfc4:	sub	x2, x29, #0x4
    cfc8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cfcc:	cbz	w0, cfdc <PyInit__testcapi@@Base+0x3e20>
    cfd0:	ldur	w0, [x29, #-4]
    cfd4:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    cfd8:	b	cfe0 <PyInit__testcapi@@Base+0x3e24>
    cfdc:	mov	x0, xzr
    cfe0:	ldp	x29, x30, [sp, #16]
    cfe4:	add	sp, sp, #0x20
    cfe8:	ret
    cfec:	sub	sp, sp, #0x20
    cff0:	stp	x29, x30, [sp, #16]
    cff4:	add	x29, sp, #0x10
    cff8:	mov	x0, x1
    cffc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    d000:	add	x1, x1, #0xaa5
    d004:	add	x2, sp, #0x8
    d008:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d00c:	cbz	w0, d01c <PyInit__testcapi@@Base+0x3e60>
    d010:	ldr	x0, [sp, #8]
    d014:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    d018:	b	d020 <PyInit__testcapi@@Base+0x3e64>
    d01c:	mov	x0, xzr
    d020:	ldp	x29, x30, [sp, #16]
    d024:	add	sp, sp, #0x20
    d028:	ret
    d02c:	sub	sp, sp, #0x20
    d030:	stp	x29, x30, [sp, #16]
    d034:	add	x29, sp, #0x10
    d038:	mov	x0, x1
    d03c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    d040:	add	x1, x1, #0x4eb
    d044:	sub	x2, x29, #0x4
    d048:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d04c:	cbz	w0, d05c <PyInit__testcapi@@Base+0x3ea0>
    d050:	ldursw	x0, [x29, #-4]
    d054:	bl	8840 <PyLong_FromLong@plt>
    d058:	b	d060 <PyInit__testcapi@@Base+0x3ea4>
    d05c:	mov	x0, xzr
    d060:	ldp	x29, x30, [sp, #16]
    d064:	add	sp, sp, #0x20
    d068:	ret
    d06c:	sub	sp, sp, #0x20
    d070:	stp	x29, x30, [sp, #16]
    d074:	add	x29, sp, #0x10
    d078:	mov	x0, x1
    d07c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    d080:	add	x1, x1, #0x9fb
    d084:	add	x2, sp, #0x8
    d088:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d08c:	cbz	w0, d09c <PyInit__testcapi@@Base+0x3ee0>
    d090:	ldr	x0, [sp, #8]
    d094:	bl	8840 <PyLong_FromLong@plt>
    d098:	b	d0a0 <PyInit__testcapi@@Base+0x3ee4>
    d09c:	mov	x0, xzr
    d0a0:	ldp	x29, x30, [sp, #16]
    d0a4:	add	sp, sp, #0x20
    d0a8:	ret
    d0ac:	sub	sp, sp, #0x20
    d0b0:	stp	x29, x30, [sp, #16]
    d0b4:	add	x29, sp, #0x10
    d0b8:	mov	x0, x1
    d0bc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    d0c0:	add	x1, x1, #0x852
    d0c4:	add	x2, sp, #0x8
    d0c8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d0cc:	cbz	w0, d0dc <PyInit__testcapi@@Base+0x3f20>
    d0d0:	ldr	x0, [sp, #8]
    d0d4:	bl	87f0 <PyLong_FromSsize_t@plt>
    d0d8:	b	d0e0 <PyInit__testcapi@@Base+0x3f24>
    d0dc:	mov	x0, xzr
    d0e0:	ldp	x29, x30, [sp, #16]
    d0e4:	add	sp, sp, #0x20
    d0e8:	ret
    d0ec:	sub	sp, sp, #0x20
    d0f0:	stp	x29, x30, [sp, #16]
    d0f4:	add	x29, sp, #0x10
    d0f8:	mov	x0, x1
    d0fc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    d100:	add	x1, x1, #0xacd
    d104:	sub	x2, x29, #0x4
    d108:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d10c:	cbz	w0, d11c <PyInit__testcapi@@Base+0x3f60>
    d110:	ldursw	x0, [x29, #-4]
    d114:	bl	8840 <PyLong_FromLong@plt>
    d118:	b	d120 <PyInit__testcapi@@Base+0x3f64>
    d11c:	mov	x0, xzr
    d120:	ldp	x29, x30, [sp, #16]
    d124:	add	sp, sp, #0x20
    d128:	ret
    d12c:	sub	sp, sp, #0x20
    d130:	stp	x29, x30, [sp, #16]
    d134:	add	x29, sp, #0x10
    d138:	mov	x0, x1
    d13c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    d140:	add	x1, x1, #0xacc
    d144:	add	x2, sp, #0x8
    d148:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d14c:	cbz	w0, d15c <PyInit__testcapi@@Base+0x3fa0>
    d150:	ldr	x0, [sp, #8]
    d154:	bl	8ef0 <PyLong_FromLongLong@plt>
    d158:	b	d160 <PyInit__testcapi@@Base+0x3fa4>
    d15c:	mov	x0, xzr
    d160:	ldp	x29, x30, [sp, #16]
    d164:	add	sp, sp, #0x20
    d168:	ret
    d16c:	sub	sp, sp, #0x20
    d170:	stp	x29, x30, [sp, #16]
    d174:	add	x29, sp, #0x10
    d178:	mov	x0, x1
    d17c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    d180:	add	x1, x1, #0xae1
    d184:	add	x2, sp, #0x8
    d188:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d18c:	cbz	w0, d19c <PyInit__testcapi@@Base+0x3fe0>
    d190:	ldr	x0, [sp, #8]
    d194:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
    d198:	b	d1a0 <PyInit__testcapi@@Base+0x3fe4>
    d19c:	mov	x0, xzr
    d1a0:	ldp	x29, x30, [sp, #16]
    d1a4:	add	sp, sp, #0x20
    d1a8:	ret
    d1ac:	stp	x29, x30, [sp, #-80]!
    d1b0:	stp	x26, x25, [sp, #16]
    d1b4:	stp	x24, x23, [sp, #32]
    d1b8:	stp	x22, x21, [sp, #48]
    d1bc:	stp	x20, x19, [sp, #64]
    d1c0:	mov	x29, sp
    d1c4:	mov	w24, #0xaaab                	// #43691
    d1c8:	mov	w22, wzr
    d1cc:	mov	w23, #0x1                   	// #1
    d1d0:	movk	w24, #0xaaaa, lsl #16
    d1d4:	mov	w25, wzr
    d1d8:	neg	x26, x23
    d1dc:	umull	x8, w25, w24
    d1e0:	lsr	x8, x8, #33
    d1e4:	add	w8, w8, w8, lsl #1
    d1e8:	cmp	w25, #0x3
    d1ec:	mvn	w8, w8
    d1f0:	csel	x9, x23, x26, cc  // cc = lo, ul, last
    d1f4:	add	w8, w8, w25
    d1f8:	add	x19, x9, w8, sxtw
    d1fc:	mov	x0, x19
    d200:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
    d204:	cbz	x0, d2f8 <PyInit__testcapi@@Base+0x413c>
    d208:	mov	x20, x0
    d20c:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
    d210:	mov	x21, x0
    d214:	cmn	x0, #0x1
    d218:	b.ne	d224 <PyInit__testcapi@@Base+0x4068>  // b.any
    d21c:	bl	8980 <PyErr_Occurred@plt>
    d220:	cbnz	x0, d388 <PyInit__testcapi@@Base+0x41cc>
    d224:	cmp	x21, x19
    d228:	b.ne	d31c <PyInit__testcapi@@Base+0x4160>  // b.any
    d22c:	ldr	x8, [x20]
    d230:	subs	x8, x8, #0x1
    d234:	str	x8, [x20]
    d238:	b.ne	d244 <PyInit__testcapi@@Base+0x4088>  // b.any
    d23c:	mov	x0, x20
    d240:	bl	8560 <_Py_Dealloc@plt>
    d244:	mov	x0, x19
    d248:	bl	8ef0 <PyLong_FromLongLong@plt>
    d24c:	cbz	x0, d340 <PyInit__testcapi@@Base+0x4184>
    d250:	mov	x20, x0
    d254:	bl	8df0 <PyLong_AsLongLong@plt>
    d258:	mov	x21, x0
    d25c:	cmn	x0, #0x1
    d260:	b.ne	d26c <PyInit__testcapi@@Base+0x40b0>  // b.any
    d264:	bl	8980 <PyErr_Occurred@plt>
    d268:	cbnz	x0, d3ac <PyInit__testcapi@@Base+0x41f0>
    d26c:	cmp	x21, x19
    d270:	b.ne	d364 <PyInit__testcapi@@Base+0x41a8>  // b.any
    d274:	ldr	x8, [x20]
    d278:	subs	x8, x8, #0x1
    d27c:	str	x8, [x20]
    d280:	b.ne	d28c <PyInit__testcapi@@Base+0x40d0>  // b.any
    d284:	mov	x0, x20
    d288:	bl	8560 <_Py_Dealloc@plt>
    d28c:	add	w25, w25, #0x1
    d290:	cmp	w25, #0x6
    d294:	b.ne	d1dc <PyInit__testcapi@@Base+0x4020>  // b.any
    d298:	add	w22, w22, #0x1
    d29c:	cmp	w22, #0x41
    d2a0:	lsl	x23, x23, #1
    d2a4:	b.ne	d1d4 <PyInit__testcapi@@Base+0x4018>  // b.any
    d2a8:	mov	w0, #0x1                   	// #1
    d2ac:	bl	8840 <PyLong_FromLong@plt>
    d2b0:	mov	x19, x0
    d2b4:	cbz	x0, d3f0 <PyInit__testcapi@@Base+0x4234>
    d2b8:	mov	x0, x19
    d2bc:	bl	8270 <PyNumber_Negative@plt>
    d2c0:	cbz	x0, d690 <PyInit__testcapi@@Base+0x44d4>
    d2c4:	mov	x20, x0
    d2c8:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
    d2cc:	cmn	x0, #0x1
    d2d0:	b.eq	d418 <PyInit__testcapi@@Base+0x425c>  // b.none
    d2d4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d2d8:	ldr	x0, [x8, #3520]
    d2dc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d2e0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d2e4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d2e8:	add	x1, x1, #0x842
    d2ec:	add	x2, x2, #0xae3
    d2f0:	add	x3, x3, #0x5ab
    d2f4:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d2f8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d2fc:	ldr	x0, [x8, #3520]
    d300:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d304:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d308:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d30c:	add	x1, x1, #0x842
    d310:	add	x2, x2, #0xae3
    d314:	add	x3, x3, #0x508
    d318:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d31c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d320:	ldr	x0, [x8, #3520]
    d324:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d328:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d32c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d330:	add	x1, x1, #0x842
    d334:	add	x2, x2, #0xae3
    d338:	add	x3, x3, #0x546
    d33c:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d340:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d344:	ldr	x0, [x8, #3520]
    d348:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d34c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d350:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d354:	add	x1, x1, #0x842
    d358:	add	x2, x2, #0xae3
    d35c:	add	x3, x3, #0x50a
    d360:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d364:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d368:	ldr	x0, [x8, #3520]
    d36c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d370:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d374:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d378:	add	x1, x1, #0x842
    d37c:	add	x2, x2, #0xae3
    d380:	add	x3, x3, #0x548
    d384:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d388:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d38c:	ldr	x0, [x8, #3520]
    d390:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d394:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d398:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d39c:	add	x1, x1, #0x842
    d3a0:	add	x2, x2, #0xae3
    d3a4:	add	x3, x3, #0x528
    d3a8:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d3ac:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d3b0:	ldr	x0, [x8, #3520]
    d3b4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d3b8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d3bc:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d3c0:	add	x1, x1, #0x842
    d3c4:	add	x2, x2, #0xae3
    d3c8:	add	x3, x3, #0x52a
    d3cc:	bl	8e60 <PyErr_Format@plt>
    d3d0:	mov	x19, xzr
    d3d4:	mov	x0, x19
    d3d8:	ldp	x20, x19, [sp, #64]
    d3dc:	ldp	x22, x21, [sp, #48]
    d3e0:	ldp	x24, x23, [sp, #32]
    d3e4:	ldp	x26, x25, [sp, #16]
    d3e8:	ldp	x29, x30, [sp], #80
    d3ec:	ret
    d3f0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d3f4:	ldr	x0, [x8, #3520]
    d3f8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d3fc:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d400:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d404:	add	x1, x1, #0x842
    d408:	add	x2, x2, #0xae3
    d40c:	add	x3, x3, #0x55f
    d410:	bl	8e60 <PyErr_Format@plt>
    d414:	b	d3d4 <PyInit__testcapi@@Base+0x4218>
    d418:	bl	8980 <PyErr_Occurred@plt>
    d41c:	cbz	x0, d2d4 <PyInit__testcapi@@Base+0x4118>
    d420:	adrp	x22, 26000 <PyInit__testcapi@@Base+0x1ce44>
    d424:	ldr	x22, [x22, #4000]
    d428:	ldr	x0, [x22]
    d42c:	bl	8760 <PyErr_ExceptionMatches@plt>
    d430:	cbz	w0, d4c0 <PyInit__testcapi@@Base+0x4304>
    d434:	bl	88c0 <PyErr_Clear@plt>
    d438:	ldr	x8, [x20]
    d43c:	subs	x8, x8, #0x1
    d440:	str	x8, [x20]
    d444:	b.ne	d450 <PyInit__testcapi@@Base+0x4294>  // b.any
    d448:	mov	x0, x20
    d44c:	bl	8560 <_Py_Dealloc@plt>
    d450:	mov	w0, #0x40                  	// #64
    d454:	bl	8840 <PyLong_FromLong@plt>
    d458:	cbz	x0, d4e4 <PyInit__testcapi@@Base+0x4328>
    d45c:	mov	x21, x0
    d460:	mov	x0, x19
    d464:	mov	x1, x21
    d468:	bl	8390 <PyNumber_Lshift@plt>
    d46c:	ldr	x8, [x21]
    d470:	mov	x20, x0
    d474:	subs	x8, x8, #0x1
    d478:	str	x8, [x21]
    d47c:	b.ne	d488 <PyInit__testcapi@@Base+0x42cc>  // b.any
    d480:	mov	x0, x21
    d484:	bl	8560 <_Py_Dealloc@plt>
    d488:	cbz	x20, d508 <PyInit__testcapi@@Base+0x434c>
    d48c:	mov	x0, x20
    d490:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
    d494:	cmn	x0, #0x1
    d498:	b.eq	d52c <PyInit__testcapi@@Base+0x4370>  // b.none
    d49c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d4a0:	ldr	x0, [x8, #3520]
    d4a4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d4a8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d4ac:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d4b0:	add	x1, x1, #0x842
    d4b4:	add	x2, x2, #0xae3
    d4b8:	add	x3, x3, #0x63c
    d4bc:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d4c0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d4c4:	ldr	x0, [x8, #3520]
    d4c8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d4cc:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d4d0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d4d4:	add	x1, x1, #0x842
    d4d8:	add	x2, x2, #0xae3
    d4dc:	add	x3, x3, #0x5d4
    d4e0:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d4e4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d4e8:	ldr	x0, [x8, #3520]
    d4ec:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d4f0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d4f4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d4f8:	add	x1, x1, #0x842
    d4fc:	add	x2, x2, #0xae3
    d500:	add	x3, x3, #0x55f
    d504:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d508:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d50c:	ldr	x0, [x8, #3520]
    d510:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d514:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d518:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d51c:	add	x1, x1, #0x842
    d520:	add	x2, x2, #0xae3
    d524:	add	x3, x3, #0x617
    d528:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d52c:	bl	8980 <PyErr_Occurred@plt>
    d530:	cbz	x0, d49c <PyInit__testcapi@@Base+0x42e0>
    d534:	ldr	x0, [x22]
    d538:	mov	x23, x22
    d53c:	bl	8760 <PyErr_ExceptionMatches@plt>
    d540:	cbz	w0, d5a8 <PyInit__testcapi@@Base+0x43ec>
    d544:	bl	88c0 <PyErr_Clear@plt>
    d548:	mov	x0, x20
    d54c:	mov	x1, x19
    d550:	bl	8b60 <PyNumber_Rshift@plt>
    d554:	ldr	x8, [x20]
    d558:	mov	x21, x0
    d55c:	subs	x8, x8, #0x1
    d560:	str	x8, [x20]
    d564:	b.ne	d570 <PyInit__testcapi@@Base+0x43b4>  // b.any
    d568:	mov	x0, x20
    d56c:	bl	8560 <_Py_Dealloc@plt>
    d570:	cbz	x21, d5cc <PyInit__testcapi@@Base+0x4410>
    d574:	mov	x0, x21
    d578:	bl	8df0 <PyLong_AsLongLong@plt>
    d57c:	cmn	x0, #0x1
    d580:	b.eq	d5f0 <PyInit__testcapi@@Base+0x4434>  // b.none
    d584:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d588:	ldr	x0, [x8, #3520]
    d58c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d590:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d594:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d598:	add	x1, x1, #0x842
    d59c:	add	x2, x2, #0xae3
    d5a0:	add	x3, x3, #0x6d9
    d5a4:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d5a8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d5ac:	ldr	x0, [x8, #3520]
    d5b0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d5b4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d5b8:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d5bc:	add	x1, x1, #0x842
    d5c0:	add	x2, x2, #0xae3
    d5c4:	add	x3, x3, #0x66b
    d5c8:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d5cc:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d5d0:	ldr	x0, [x8, #3520]
    d5d4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d5d8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d5dc:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d5e0:	add	x1, x1, #0x842
    d5e4:	add	x2, x2, #0xae3
    d5e8:	add	x3, x3, #0x6b4
    d5ec:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d5f0:	bl	8980 <PyErr_Occurred@plt>
    d5f4:	cbz	x0, d584 <PyInit__testcapi@@Base+0x43c8>
    d5f8:	ldr	x0, [x23]
    d5fc:	bl	8760 <PyErr_ExceptionMatches@plt>
    d600:	cbz	w0, d6b4 <PyInit__testcapi@@Base+0x44f8>
    d604:	bl	88c0 <PyErr_Clear@plt>
    d608:	mov	x0, x21
    d60c:	bl	8270 <PyNumber_Negative@plt>
    d610:	ldr	x8, [x21]
    d614:	mov	x22, x0
    d618:	subs	x8, x8, #0x1
    d61c:	str	x8, [x21]
    d620:	b.ne	d62c <PyInit__testcapi@@Base+0x4470>  // b.any
    d624:	mov	x0, x21
    d628:	bl	8560 <_Py_Dealloc@plt>
    d62c:	cbz	x22, d690 <PyInit__testcapi@@Base+0x44d4>
    d630:	mov	x0, x22
    d634:	mov	x1, x19
    d638:	bl	8fe0 <PyNumber_Subtract@plt>
    d63c:	ldr	x8, [x22]
    d640:	mov	x20, x0
    d644:	subs	x8, x8, #0x1
    d648:	str	x8, [x22]
    d64c:	b.ne	d658 <PyInit__testcapi@@Base+0x449c>  // b.any
    d650:	mov	x0, x22
    d654:	bl	8560 <_Py_Dealloc@plt>
    d658:	cbz	x20, d6d8 <PyInit__testcapi@@Base+0x451c>
    d65c:	mov	x0, x20
    d660:	bl	8df0 <PyLong_AsLongLong@plt>
    d664:	cmn	x0, #0x1
    d668:	b.eq	d6fc <PyInit__testcapi@@Base+0x4540>  // b.none
    d66c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d670:	ldr	x0, [x8, #3520]
    d674:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d678:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d67c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d680:	add	x1, x1, #0x842
    d684:	add	x2, x2, #0xae3
    d688:	add	x3, x3, #0x770
    d68c:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d690:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d694:	ldr	x0, [x8, #3520]
    d698:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d69c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d6a0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d6a4:	add	x1, x1, #0x842
    d6a8:	add	x2, x2, #0xae3
    d6ac:	add	x3, x3, #0x584
    d6b0:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d6b4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d6b8:	ldr	x0, [x8, #3520]
    d6bc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d6c0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d6c4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d6c8:	add	x1, x1, #0x842
    d6cc:	add	x2, x2, #0xae3
    d6d0:	add	x3, x3, #0x704
    d6d4:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d6d8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d6dc:	ldr	x0, [x8, #3520]
    d6e0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d6e4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d6e8:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d6ec:	add	x1, x1, #0x842
    d6f0:	add	x2, x2, #0xae3
    d6f4:	add	x3, x3, #0x749
    d6f8:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d6fc:	bl	8980 <PyErr_Occurred@plt>
    d700:	cbz	x0, d66c <PyInit__testcapi@@Base+0x44b0>
    d704:	ldr	x0, [x23]
    d708:	bl	8760 <PyErr_ExceptionMatches@plt>
    d70c:	cbz	w0, d788 <PyInit__testcapi@@Base+0x45cc>
    d710:	bl	88c0 <PyErr_Clear@plt>
    d714:	ldr	x8, [x20]
    d718:	subs	x8, x8, #0x1
    d71c:	str	x8, [x20]
    d720:	b.ne	d72c <PyInit__testcapi@@Base+0x4570>  // b.any
    d724:	mov	x0, x20
    d728:	bl	8560 <_Py_Dealloc@plt>
    d72c:	ldr	x8, [x19]
    d730:	subs	x8, x8, #0x1
    d734:	str	x8, [x19]
    d738:	b.ne	d744 <PyInit__testcapi@@Base+0x4588>  // b.any
    d73c:	mov	x0, x19
    d740:	bl	8560 <_Py_Dealloc@plt>
    d744:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    d748:	ldr	x0, [x0, #4016]
    d74c:	ldr	x8, [x0]
    d750:	add	x8, x8, #0x1
    d754:	str	x8, [x0]
    d758:	bl	8df0 <PyLong_AsLongLong@plt>
    d75c:	cmn	x0, #0x1
    d760:	b.eq	d7ac <PyInit__testcapi@@Base+0x45f0>  // b.none
    d764:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d768:	ldr	x0, [x8, #3520]
    d76c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d770:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d774:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d778:	add	x1, x1, #0x842
    d77c:	add	x2, x2, #0xae3
    d780:	add	x3, x3, #0x7e6
    d784:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d788:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d78c:	ldr	x0, [x8, #3520]
    d790:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d794:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d798:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d79c:	add	x1, x1, #0x842
    d7a0:	add	x2, x2, #0xae3
    d7a4:	add	x3, x3, #0x79e
    d7a8:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d7ac:	bl	8980 <PyErr_Occurred@plt>
    d7b0:	cbz	x0, d764 <PyInit__testcapi@@Base+0x45a8>
    d7b4:	adrp	x20, 26000 <PyInit__testcapi@@Base+0x1ce44>
    d7b8:	ldr	x20, [x20, #3952]
    d7bc:	ldr	x0, [x20]
    d7c0:	bl	8760 <PyErr_ExceptionMatches@plt>
    d7c4:	cbz	w0, d824 <PyInit__testcapi@@Base+0x4668>
    d7c8:	bl	88c0 <PyErr_Clear@plt>
    d7cc:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    d7d0:	ldr	x19, [x19, #4016]
    d7d4:	mov	x0, x19
    d7d8:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
    d7dc:	cmn	x0, #0x1
    d7e0:	b.ne	d764 <PyInit__testcapi@@Base+0x45a8>  // b.any
    d7e4:	bl	8980 <PyErr_Occurred@plt>
    d7e8:	cbz	x0, d764 <PyInit__testcapi@@Base+0x45a8>
    d7ec:	ldr	x0, [x20]
    d7f0:	bl	8760 <PyErr_ExceptionMatches@plt>
    d7f4:	cbz	w0, d824 <PyInit__testcapi@@Base+0x4668>
    d7f8:	bl	88c0 <PyErr_Clear@plt>
    d7fc:	ldr	x8, [x19]
    d800:	subs	x8, x8, #0x1
    d804:	str	x8, [x19]
    d808:	b.ne	d818 <PyInit__testcapi@@Base+0x465c>  // b.any
    d80c:	mov	x0, x19
    d810:	bl	8560 <_Py_Dealloc@plt>
    d814:	ldr	x8, [x19]
    d818:	add	x8, x8, #0x1
    d81c:	str	x8, [x19]
    d820:	b	d3d4 <PyInit__testcapi@@Base+0x4218>
    d824:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d828:	ldr	x0, [x8, #3520]
    d82c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d830:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d834:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d838:	add	x1, x1, #0x842
    d83c:	add	x2, x2, #0xae3
    d840:	add	x3, x3, #0x809
    d844:	b	d3cc <PyInit__testcapi@@Base+0x4210>
    d848:	stp	x29, x30, [sp, #-48]!
    d84c:	str	x21, [sp, #16]
    d850:	stp	x20, x19, [sp, #32]
    d854:	mov	x29, sp
    d858:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    d85c:	add	x0, x0, #0x8e9
    d860:	mov	w2, #0x10                  	// #16
    d864:	mov	x1, xzr
    d868:	bl	8f90 <PyLong_FromString@plt>
    d86c:	cbz	x0, d8dc <PyInit__testcapi@@Base+0x4720>
    d870:	mov	w8, #0x4d2                 	// #1234
    d874:	add	x1, x29, #0x1c
    d878:	mov	x19, x0
    d87c:	str	w8, [x29, #28]
    d880:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    d884:	ldr	x8, [x19]
    d888:	mov	x20, x0
    d88c:	subs	x8, x8, #0x1
    d890:	str	x8, [x19]
    d894:	b.ne	d8a0 <PyInit__testcapi@@Base+0x46e4>  // b.any
    d898:	mov	x0, x19
    d89c:	bl	8560 <_Py_Dealloc@plt>
    d8a0:	cmn	x20, #0x1
    d8a4:	b.eq	d8d0 <PyInit__testcapi@@Base+0x4714>  // b.none
    d8a8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d8ac:	ldr	x0, [x8, #3520]
    d8b0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d8b4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d8b8:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d8bc:	add	x1, x1, #0x842
    d8c0:	add	x2, x2, #0xaf5
    d8c4:	add	x3, x3, #0x8af
    d8c8:	bl	8e60 <PyErr_Format@plt>
    d8cc:	b	d8d8 <PyInit__testcapi@@Base+0x471c>
    d8d0:	bl	8980 <PyErr_Occurred@plt>
    d8d4:	cbz	x0, d8ec <PyInit__testcapi@@Base+0x4730>
    d8d8:	mov	x0, xzr
    d8dc:	ldp	x20, x19, [sp, #32]
    d8e0:	ldr	x21, [sp, #16]
    d8e4:	ldp	x29, x30, [sp], #48
    d8e8:	ret
    d8ec:	ldr	w8, [x29, #28]
    d8f0:	cmp	w8, #0x1
    d8f4:	b.ne	da2c <PyInit__testcapi@@Base+0x4870>  // b.any
    d8f8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    d8fc:	bl	8ef0 <PyLong_FromLongLong@plt>
    d900:	cbz	x0, d8dc <PyInit__testcapi@@Base+0x4720>
    d904:	mov	x19, x0
    d908:	mov	w0, #0x1                   	// #1
    d90c:	bl	8840 <PyLong_FromLong@plt>
    d910:	cbz	x0, db80 <PyInit__testcapi@@Base+0x49c4>
    d914:	mov	x21, x0
    d918:	mov	x0, x19
    d91c:	mov	x1, x21
    d920:	bl	8490 <PyNumber_Add@plt>
    d924:	ldr	x8, [x21]
    d928:	mov	x20, x0
    d92c:	subs	x8, x8, #0x1
    d930:	str	x8, [x21]
    d934:	b.ne	d940 <PyInit__testcapi@@Base+0x4784>  // b.any
    d938:	mov	x0, x21
    d93c:	bl	8560 <_Py_Dealloc@plt>
    d940:	ldr	x8, [x19]
    d944:	subs	x8, x8, #0x1
    d948:	str	x8, [x19]
    d94c:	b.ne	d958 <PyInit__testcapi@@Base+0x479c>  // b.any
    d950:	mov	x0, x19
    d954:	bl	8560 <_Py_Dealloc@plt>
    d958:	cbz	x20, d8d8 <PyInit__testcapi@@Base+0x471c>
    d95c:	add	x1, x29, #0x1c
    d960:	mov	x0, x20
    d964:	str	wzr, [x29, #28]
    d968:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    d96c:	ldr	x8, [x20]
    d970:	mov	x19, x0
    d974:	subs	x8, x8, #0x1
    d978:	str	x8, [x20]
    d97c:	b.ne	d988 <PyInit__testcapi@@Base+0x47cc>  // b.any
    d980:	mov	x0, x20
    d984:	bl	8560 <_Py_Dealloc@plt>
    d988:	cmn	x19, #0x1
    d98c:	b.ne	d8a8 <PyInit__testcapi@@Base+0x46ec>  // b.any
    d990:	bl	8980 <PyErr_Occurred@plt>
    d994:	cbnz	x0, d8d8 <PyInit__testcapi@@Base+0x471c>
    d998:	ldr	w8, [x29, #28]
    d99c:	cmp	w8, #0x1
    d9a0:	b.ne	da2c <PyInit__testcapi@@Base+0x4870>  // b.any
    d9a4:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    d9a8:	add	x0, x0, #0x8e8
    d9ac:	mov	w2, #0x10                  	// #16
    d9b0:	mov	x1, xzr
    d9b4:	bl	8f90 <PyLong_FromString@plt>
    d9b8:	cbz	x0, d8dc <PyInit__testcapi@@Base+0x4720>
    d9bc:	mov	w8, #0x4d2                 	// #1234
    d9c0:	add	x1, x29, #0x1c
    d9c4:	mov	x19, x0
    d9c8:	str	w8, [x29, #28]
    d9cc:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    d9d0:	ldr	x8, [x19]
    d9d4:	mov	x20, x0
    d9d8:	subs	x8, x8, #0x1
    d9dc:	str	x8, [x19]
    d9e0:	b.ne	d9ec <PyInit__testcapi@@Base+0x4830>  // b.any
    d9e4:	mov	x0, x19
    d9e8:	bl	8560 <_Py_Dealloc@plt>
    d9ec:	cmn	x20, #0x1
    d9f0:	b.ne	d8a8 <PyInit__testcapi@@Base+0x46ec>  // b.any
    d9f4:	bl	8980 <PyErr_Occurred@plt>
    d9f8:	cbnz	x0, d8d8 <PyInit__testcapi@@Base+0x471c>
    d9fc:	ldr	w8, [x29, #28]
    da00:	cmn	w8, #0x1
    da04:	b.eq	da50 <PyInit__testcapi@@Base+0x4894>  // b.none
    da08:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    da0c:	ldr	x0, [x8, #3520]
    da10:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    da14:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    da18:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    da1c:	add	x1, x1, #0x842
    da20:	add	x2, x2, #0xaf5
    da24:	add	x3, x3, #0x902
    da28:	b	d8c8 <PyInit__testcapi@@Base+0x470c>
    da2c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    da30:	ldr	x0, [x8, #3520]
    da34:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    da38:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    da3c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    da40:	add	x1, x1, #0x842
    da44:	add	x2, x2, #0xaf5
    da48:	add	x3, x3, #0x8ce
    da4c:	b	d8c8 <PyInit__testcapi@@Base+0x470c>
    da50:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    da54:	bl	8ef0 <PyLong_FromLongLong@plt>
    da58:	cbz	x0, d8dc <PyInit__testcapi@@Base+0x4720>
    da5c:	mov	x19, x0
    da60:	mov	w0, #0x1                   	// #1
    da64:	bl	8840 <PyLong_FromLong@plt>
    da68:	cbz	x0, db80 <PyInit__testcapi@@Base+0x49c4>
    da6c:	mov	x21, x0
    da70:	mov	x0, x19
    da74:	mov	x1, x21
    da78:	bl	8fe0 <PyNumber_Subtract@plt>
    da7c:	ldr	x8, [x21]
    da80:	mov	x20, x0
    da84:	subs	x8, x8, #0x1
    da88:	str	x8, [x21]
    da8c:	b.ne	da98 <PyInit__testcapi@@Base+0x48dc>  // b.any
    da90:	mov	x0, x21
    da94:	bl	8560 <_Py_Dealloc@plt>
    da98:	ldr	x8, [x19]
    da9c:	subs	x8, x8, #0x1
    daa0:	str	x8, [x19]
    daa4:	b.ne	dab0 <PyInit__testcapi@@Base+0x48f4>  // b.any
    daa8:	mov	x0, x19
    daac:	bl	8560 <_Py_Dealloc@plt>
    dab0:	cbz	x20, d8d8 <PyInit__testcapi@@Base+0x471c>
    dab4:	add	x1, x29, #0x1c
    dab8:	mov	x0, x20
    dabc:	str	wzr, [x29, #28]
    dac0:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    dac4:	ldr	x8, [x20]
    dac8:	mov	x19, x0
    dacc:	subs	x8, x8, #0x1
    dad0:	str	x8, [x20]
    dad4:	b.ne	dae0 <PyInit__testcapi@@Base+0x4924>  // b.any
    dad8:	mov	x0, x20
    dadc:	bl	8560 <_Py_Dealloc@plt>
    dae0:	cmn	x19, #0x1
    dae4:	b.ne	d8a8 <PyInit__testcapi@@Base+0x46ec>  // b.any
    dae8:	bl	8980 <PyErr_Occurred@plt>
    daec:	cbnz	x0, d8d8 <PyInit__testcapi@@Base+0x471c>
    daf0:	ldr	w8, [x29, #28]
    daf4:	cmn	w8, #0x1
    daf8:	b.ne	da08 <PyInit__testcapi@@Base+0x484c>  // b.any
    dafc:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    db00:	add	x0, x0, #0x952
    db04:	mov	w2, #0x10                  	// #16
    db08:	mov	x1, xzr
    db0c:	bl	8f90 <PyLong_FromString@plt>
    db10:	cbz	x0, d8dc <PyInit__testcapi@@Base+0x4720>
    db14:	mov	w8, #0x4d2                 	// #1234
    db18:	add	x1, x29, #0x1c
    db1c:	mov	x19, x0
    db20:	str	w8, [x29, #28]
    db24:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    db28:	ldr	x8, [x19]
    db2c:	mov	x20, x0
    db30:	subs	x8, x8, #0x1
    db34:	str	x8, [x19]
    db38:	b.ne	db44 <PyInit__testcapi@@Base+0x4988>  // b.any
    db3c:	mov	x0, x19
    db40:	bl	8560 <_Py_Dealloc@plt>
    db44:	cmp	x20, #0xff
    db48:	b.eq	db9c <PyInit__testcapi@@Base+0x49e0>  // b.none
    db4c:	cmn	x20, #0x1
    db50:	b.ne	db5c <PyInit__testcapi@@Base+0x49a0>  // b.any
    db54:	bl	8980 <PyErr_Occurred@plt>
    db58:	cbnz	x0, d8d8 <PyInit__testcapi@@Base+0x471c>
    db5c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    db60:	ldr	x0, [x8, #3520]
    db64:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    db68:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    db6c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    db70:	add	x1, x1, #0x842
    db74:	add	x2, x2, #0xaf5
    db78:	add	x3, x3, #0x91d
    db7c:	b	d8c8 <PyInit__testcapi@@Base+0x470c>
    db80:	ldr	x8, [x19]
    db84:	subs	x8, x8, #0x1
    db88:	str	x8, [x19]
    db8c:	b.ne	d8d8 <PyInit__testcapi@@Base+0x471c>  // b.any
    db90:	mov	x0, x19
    db94:	bl	8560 <_Py_Dealloc@plt>
    db98:	b	d8d8 <PyInit__testcapi@@Base+0x471c>
    db9c:	ldr	w8, [x29, #28]
    dba0:	cbz	w8, dbc8 <PyInit__testcapi@@Base+0x4a0c>
    dba4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    dba8:	ldr	x0, [x8, #3520]
    dbac:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    dbb0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    dbb4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    dbb8:	add	x1, x1, #0x842
    dbbc:	add	x2, x2, #0xaf5
    dbc0:	add	x3, x3, #0x938
    dbc4:	b	d8c8 <PyInit__testcapi@@Base+0x470c>
    dbc8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    dbcc:	add	x0, x0, #0x951
    dbd0:	mov	w2, #0x10                  	// #16
    dbd4:	mov	x1, xzr
    dbd8:	bl	8f90 <PyLong_FromString@plt>
    dbdc:	cbz	x0, d8dc <PyInit__testcapi@@Base+0x4720>
    dbe0:	add	x1, x29, #0x1c
    dbe4:	mov	x19, x0
    dbe8:	str	wzr, [x29, #28]
    dbec:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    dbf0:	ldr	x8, [x19]
    dbf4:	mov	x20, x0
    dbf8:	subs	x8, x8, #0x1
    dbfc:	str	x8, [x19]
    dc00:	b.ne	dc0c <PyInit__testcapi@@Base+0x4a50>  // b.any
    dc04:	mov	x0, x19
    dc08:	bl	8560 <_Py_Dealloc@plt>
    dc0c:	cmn	x20, #0xff
    dc10:	b.ne	db4c <PyInit__testcapi@@Base+0x4990>  // b.any
    dc14:	ldr	w8, [x29, #28]
    dc18:	cbz	w8, dc40 <PyInit__testcapi@@Base+0x4a84>
    dc1c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    dc20:	ldr	x0, [x8, #3520]
    dc24:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    dc28:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    dc2c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    dc30:	add	x1, x1, #0x842
    dc34:	add	x2, x2, #0xaf5
    dc38:	add	x3, x3, #0x955
    dc3c:	b	d8c8 <PyInit__testcapi@@Base+0x470c>
    dc40:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    dc44:	bl	8ef0 <PyLong_FromLongLong@plt>
    dc48:	cbz	x0, d8dc <PyInit__testcapi@@Base+0x4720>
    dc4c:	mov	w8, #0x4d2                 	// #1234
    dc50:	add	x1, x29, #0x1c
    dc54:	mov	x19, x0
    dc58:	str	w8, [x29, #28]
    dc5c:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    dc60:	ldr	x8, [x19]
    dc64:	mov	x20, x0
    dc68:	subs	x8, x8, #0x1
    dc6c:	str	x8, [x19]
    dc70:	b.ne	dc7c <PyInit__testcapi@@Base+0x4ac0>  // b.any
    dc74:	mov	x0, x19
    dc78:	bl	8560 <_Py_Dealloc@plt>
    dc7c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    dc80:	cmp	x20, x8
    dc84:	b.eq	dcbc <PyInit__testcapi@@Base+0x4b00>  // b.none
    dc88:	cmn	x20, #0x1
    dc8c:	b.ne	dc98 <PyInit__testcapi@@Base+0x4adc>  // b.any
    dc90:	bl	8980 <PyErr_Occurred@plt>
    dc94:	cbnz	x0, d8d8 <PyInit__testcapi@@Base+0x471c>
    dc98:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    dc9c:	ldr	x0, [x8, #3520]
    dca0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    dca4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    dca8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    dcac:	add	x1, x1, #0x842
    dcb0:	add	x2, x2, #0xaf5
    dcb4:	add	x3, x3, #0x4fa
    dcb8:	b	d8c8 <PyInit__testcapi@@Base+0x470c>
    dcbc:	ldr	w8, [x29, #28]
    dcc0:	cbnz	w8, dba4 <PyInit__testcapi@@Base+0x49e8>
    dcc4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    dcc8:	bl	8ef0 <PyLong_FromLongLong@plt>
    dccc:	cbz	x0, d8dc <PyInit__testcapi@@Base+0x4720>
    dcd0:	add	x1, x29, #0x1c
    dcd4:	mov	x19, x0
    dcd8:	str	wzr, [x29, #28]
    dcdc:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    dce0:	ldr	x8, [x19]
    dce4:	mov	x20, x0
    dce8:	subs	x8, x8, #0x1
    dcec:	str	x8, [x19]
    dcf0:	b.ne	dcfc <PyInit__testcapi@@Base+0x4b40>  // b.any
    dcf4:	mov	x0, x19
    dcf8:	bl	8560 <_Py_Dealloc@plt>
    dcfc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    dd00:	cmp	x20, x8
    dd04:	b.eq	dd3c <PyInit__testcapi@@Base+0x4b80>  // b.none
    dd08:	cmn	x20, #0x1
    dd0c:	b.ne	dd18 <PyInit__testcapi@@Base+0x4b5c>  // b.any
    dd10:	bl	8980 <PyErr_Occurred@plt>
    dd14:	cbnz	x0, d8d8 <PyInit__testcapi@@Base+0x471c>
    dd18:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    dd1c:	ldr	x0, [x8, #3520]
    dd20:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    dd24:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    dd28:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    dd2c:	add	x1, x1, #0x842
    dd30:	add	x2, x2, #0xaf5
    dd34:	add	x3, x3, #0x51d
    dd38:	b	d8c8 <PyInit__testcapi@@Base+0x470c>
    dd3c:	ldr	w8, [x29, #28]
    dd40:	cbnz	w8, dba4 <PyInit__testcapi@@Base+0x49e8>
    dd44:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    dd48:	ldr	x0, [x0, #4016]
    dd4c:	ldr	x8, [x0]
    dd50:	add	x8, x8, #0x1
    dd54:	str	x8, [x0]
    dd58:	b	d8dc <PyInit__testcapi@@Base+0x4720>
    dd5c:	sub	sp, sp, #0x30
    dd60:	stp	x29, x30, [sp, #16]
    dd64:	stp	x20, x19, [sp, #32]
    dd68:	add	x29, sp, #0x10
    dd6c:	mov	w0, #0x1                   	// #1
    dd70:	bl	8920 <PyTuple_New@plt>
    dd74:	cbz	x0, de68 <PyInit__testcapi@@Base+0x4cac>
    dd78:	mov	x19, x0
    dd7c:	mov	w0, #0x2a                  	// #42
    dd80:	bl	8840 <PyLong_FromLong@plt>
    dd84:	cbz	x0, de68 <PyInit__testcapi@@Base+0x4cac>
    dd88:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    dd8c:	mov	x20, x0
    dd90:	str	x0, [x19, #24]
    dd94:	mov	x8, #0xffffffffffffffff    	// #-1
    dd98:	add	x1, x1, #0x540
    dd9c:	add	x2, sp, #0x8
    dda0:	mov	x0, x19
    dda4:	str	x8, [sp, #8]
    dda8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ddac:	cbz	w0, de64 <PyInit__testcapi@@Base+0x4ca8>
    ddb0:	ldr	x8, [sp, #8]
    ddb4:	cmp	x8, #0x2a
    ddb8:	b.ne	de40 <PyInit__testcapi@@Base+0x4c84>  // b.any
    ddbc:	ldr	x8, [x20]
    ddc0:	subs	x8, x8, #0x1
    ddc4:	str	x8, [x20]
    ddc8:	b.ne	ddd4 <PyInit__testcapi@@Base+0x4c18>  // b.any
    ddcc:	mov	x0, x20
    ddd0:	bl	8560 <_Py_Dealloc@plt>
    ddd4:	mov	w0, #0x2a                  	// #42
    ddd8:	bl	8840 <PyLong_FromLong@plt>
    dddc:	cbz	x0, de68 <PyInit__testcapi@@Base+0x4cac>
    dde0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    dde4:	str	x0, [x19, #24]
    dde8:	mov	x8, #0xffffffffffffffff    	// #-1
    ddec:	add	x1, x1, #0x540
    ddf0:	add	x2, sp, #0x8
    ddf4:	mov	x0, x19
    ddf8:	str	x8, [sp, #8]
    ddfc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    de00:	cbz	w0, de64 <PyInit__testcapi@@Base+0x4ca8>
    de04:	ldr	x8, [sp, #8]
    de08:	cmp	x8, #0x2a
    de0c:	b.ne	de78 <PyInit__testcapi@@Base+0x4cbc>  // b.any
    de10:	ldr	x8, [x19]
    de14:	subs	x8, x8, #0x1
    de18:	str	x8, [x19]
    de1c:	b.ne	de28 <PyInit__testcapi@@Base+0x4c6c>  // b.any
    de20:	mov	x0, x19
    de24:	bl	8560 <_Py_Dealloc@plt>
    de28:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    de2c:	ldr	x0, [x0, #4016]
    de30:	ldr	x8, [x0]
    de34:	add	x8, x8, #0x1
    de38:	str	x8, [x0]
    de3c:	b	de68 <PyInit__testcapi@@Base+0x4cac>
    de40:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    de44:	ldr	x0, [x8, #3520]
    de48:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    de4c:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    de50:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    de54:	add	x1, x1, #0x842
    de58:	add	x2, x2, #0x542
    de5c:	add	x3, x3, #0x54e
    de60:	bl	8e60 <PyErr_Format@plt>
    de64:	mov	x0, xzr
    de68:	ldp	x20, x19, [sp, #32]
    de6c:	ldp	x29, x30, [sp, #16]
    de70:	add	sp, sp, #0x30
    de74:	ret
    de78:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    de7c:	ldr	x0, [x8, #3520]
    de80:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    de84:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    de88:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    de8c:	add	x1, x1, #0x842
    de90:	add	x2, x2, #0x542
    de94:	add	x3, x3, #0x576
    de98:	b	de60 <PyInit__testcapi@@Base+0x4ca4>
    de9c:	sub	sp, sp, #0x20
    dea0:	stp	x29, x30, [sp, #16]
    dea4:	add	x29, sp, #0x10
    dea8:	mov	x0, x1
    deac:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    deb0:	add	x1, x1, #0xb19
    deb4:	sub	x2, x29, #0x4
    deb8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    debc:	cbz	w0, ded0 <PyInit__testcapi@@Base+0x4d14>
    dec0:	ldur	s0, [x29, #-4]
    dec4:	fcvt	d0, s0
    dec8:	bl	8800 <PyFloat_FromDouble@plt>
    decc:	b	ded4 <PyInit__testcapi@@Base+0x4d18>
    ded0:	mov	x0, xzr
    ded4:	ldp	x29, x30, [sp, #16]
    ded8:	add	sp, sp, #0x20
    dedc:	ret
    dee0:	sub	sp, sp, #0x20
    dee4:	stp	x29, x30, [sp, #16]
    dee8:	add	x29, sp, #0x10
    deec:	mov	x0, x1
    def0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    def4:	add	x1, x1, #0xdb5
    def8:	add	x2, sp, #0x8
    defc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    df00:	cbz	w0, df10 <PyInit__testcapi@@Base+0x4d54>
    df04:	ldr	d0, [sp, #8]
    df08:	bl	8800 <PyFloat_FromDouble@plt>
    df0c:	b	df14 <PyInit__testcapi@@Base+0x4d58>
    df10:	mov	x0, xzr
    df14:	ldp	x29, x30, [sp, #16]
    df18:	add	sp, sp, #0x20
    df1c:	ret
    df20:	sub	sp, sp, #0x20
    df24:	stp	x29, x30, [sp, #16]
    df28:	add	x29, sp, #0x10
    df2c:	mov	x0, x1
    df30:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    df34:	add	x1, x1, #0x57a
    df38:	mov	x2, sp
    df3c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    df40:	cbz	w0, df50 <PyInit__testcapi@@Base+0x4d94>
    df44:	ldp	d0, d1, [sp]
    df48:	bl	8e90 <PyComplex_FromCComplex@plt>
    df4c:	b	df54 <PyInit__testcapi@@Base+0x4d98>
    df50:	mov	x0, xzr
    df54:	ldp	x29, x30, [sp, #16]
    df58:	add	sp, sp, #0x20
    df5c:	ret
    df60:	sub	sp, sp, #0x20
    df64:	stp	x29, x30, [sp, #16]
    df68:	add	x29, sp, #0x10
    df6c:	mov	x0, x1
    df70:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    df74:	add	x1, x1, #0xb37
    df78:	add	x2, sp, #0x8
    df7c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    df80:	cbz	w0, df98 <PyInit__testcapi@@Base+0x4ddc>
    df84:	ldr	x0, [sp, #8]
    df88:	ldr	x8, [x0]
    df8c:	add	x8, x8, #0x1
    df90:	str	x8, [x0]
    df94:	b	df9c <PyInit__testcapi@@Base+0x4de0>
    df98:	mov	x0, xzr
    df9c:	ldp	x29, x30, [sp, #16]
    dfa0:	add	sp, sp, #0x20
    dfa4:	ret
    dfa8:	sub	sp, sp, #0x20
    dfac:	stp	x29, x30, [sp, #16]
    dfb0:	add	x29, sp, #0x10
    dfb4:	mov	x0, x1
    dfb8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    dfbc:	add	x1, x1, #0xb41
    dfc0:	add	x2, sp, #0x8
    dfc4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    dfc8:	cbz	w0, dfe0 <PyInit__testcapi@@Base+0x4e24>
    dfcc:	ldr	x0, [sp, #8]
    dfd0:	ldr	x8, [x0]
    dfd4:	add	x8, x8, #0x1
    dfd8:	str	x8, [x0]
    dfdc:	b	dfe4 <PyInit__testcapi@@Base+0x4e28>
    dfe0:	mov	x0, xzr
    dfe4:	ldp	x29, x30, [sp, #16]
    dfe8:	add	sp, sp, #0x20
    dfec:	ret
    dff0:	sub	sp, sp, #0x20
    dff4:	stp	x29, x30, [sp, #16]
    dff8:	add	x29, sp, #0x10
    dffc:	mov	x0, x1
    e000:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e004:	add	x1, x1, #0xb4b
    e008:	add	x2, sp, #0x8
    e00c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e010:	cbz	w0, e028 <PyInit__testcapi@@Base+0x4e6c>
    e014:	ldr	x0, [sp, #8]
    e018:	ldr	x8, [x0]
    e01c:	add	x8, x8, #0x1
    e020:	str	x8, [x0]
    e024:	b	e02c <PyInit__testcapi@@Base+0x4e70>
    e028:	mov	x0, xzr
    e02c:	ldp	x29, x30, [sp, #16]
    e030:	add	sp, sp, #0x20
    e034:	ret
    e038:	sub	sp, sp, #0x20
    e03c:	stp	x29, x30, [sp, #16]
    e040:	add	x29, sp, #0x10
    e044:	mov	x0, x1
    e048:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e04c:	add	x1, x1, #0xb55
    e050:	sub	x2, x29, #0x4
    e054:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e058:	cbz	w0, e068 <PyInit__testcapi@@Base+0x4eac>
    e05c:	ldurb	w0, [x29, #-4]
    e060:	bl	8840 <PyLong_FromLong@plt>
    e064:	b	e06c <PyInit__testcapi@@Base+0x4eb0>
    e068:	mov	x0, xzr
    e06c:	ldp	x29, x30, [sp, #16]
    e070:	add	sp, sp, #0x20
    e074:	ret
    e078:	sub	sp, sp, #0x20
    e07c:	stp	x29, x30, [sp, #16]
    e080:	add	x29, sp, #0x10
    e084:	mov	x0, x1
    e088:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e08c:	add	x1, x1, #0x5b6
    e090:	sub	x2, x29, #0x4
    e094:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e098:	cbz	w0, e0a8 <PyInit__testcapi@@Base+0x4eec>
    e09c:	ldursw	x0, [x29, #-4]
    e0a0:	bl	8840 <PyLong_FromLong@plt>
    e0a4:	b	e0ac <PyInit__testcapi@@Base+0x4ef0>
    e0a8:	mov	x0, xzr
    e0ac:	ldp	x29, x30, [sp, #16]
    e0b0:	add	sp, sp, #0x20
    e0b4:	ret
    e0b8:	sub	sp, sp, #0x20
    e0bc:	stp	x29, x30, [sp, #16]
    e0c0:	add	x29, sp, #0x10
    e0c4:	mov	x0, x1
    e0c8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    e0cc:	add	x1, x1, #0x847
    e0d0:	add	x2, sp, #0x8
    e0d4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e0d8:	cbz	w0, e0e8 <PyInit__testcapi@@Base+0x4f2c>
    e0dc:	ldr	x0, [sp, #8]
    e0e0:	bl	8970 <PyBytes_FromString@plt>
    e0e4:	b	e0ec <PyInit__testcapi@@Base+0x4f30>
    e0e8:	mov	x0, xzr
    e0ec:	ldp	x29, x30, [sp, #16]
    e0f0:	add	sp, sp, #0x20
    e0f4:	ret
    e0f8:	sub	sp, sp, #0x70
    e0fc:	stp	x29, x30, [sp, #80]
    e100:	str	x19, [sp, #96]
    e104:	add	x29, sp, #0x50
    e108:	mov	x0, x1
    e10c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e110:	add	x1, x1, #0x59d
    e114:	mov	x2, sp
    e118:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e11c:	cbz	w0, e13c <PyInit__testcapi@@Base+0x4f80>
    e120:	ldr	x0, [sp]
    e124:	ldr	x1, [sp, #16]
    e128:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e12c:	mov	x19, x0
    e130:	mov	x0, sp
    e134:	bl	8470 <PyBuffer_Release@plt>
    e138:	b	e140 <PyInit__testcapi@@Base+0x4f84>
    e13c:	mov	x19, xzr
    e140:	mov	x0, x19
    e144:	ldr	x19, [sp, #96]
    e148:	ldp	x29, x30, [sp, #80]
    e14c:	add	sp, sp, #0x70
    e150:	ret
    e154:	sub	sp, sp, #0x20
    e158:	stp	x29, x30, [sp, #16]
    e15c:	add	x29, sp, #0x10
    e160:	mov	x0, x1
    e164:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e168:	add	x1, x1, #0x5ce
    e16c:	add	x2, sp, #0x8
    e170:	mov	x3, sp
    e174:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e178:	cbz	w0, e188 <PyInit__testcapi@@Base+0x4fcc>
    e17c:	ldp	x1, x0, [sp]
    e180:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e184:	b	e18c <PyInit__testcapi@@Base+0x4fd0>
    e188:	mov	x0, xzr
    e18c:	ldp	x29, x30, [sp, #16]
    e190:	add	sp, sp, #0x20
    e194:	ret
    e198:	sub	sp, sp, #0x20
    e19c:	stp	x29, x30, [sp, #16]
    e1a0:	add	x29, sp, #0x10
    e1a4:	mov	x0, x1
    e1a8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e1ac:	add	x1, x1, #0xb91
    e1b0:	add	x2, sp, #0x8
    e1b4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e1b8:	cbz	w0, e1cc <PyInit__testcapi@@Base+0x5010>
    e1bc:	ldr	x0, [sp, #8]
    e1c0:	cbz	x0, e1d4 <PyInit__testcapi@@Base+0x5018>
    e1c4:	bl	8970 <PyBytes_FromString@plt>
    e1c8:	b	e1e8 <PyInit__testcapi@@Base+0x502c>
    e1cc:	mov	x0, xzr
    e1d0:	b	e1e8 <PyInit__testcapi@@Base+0x502c>
    e1d4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e1d8:	ldr	x0, [x0, #4016]
    e1dc:	ldr	x8, [x0]
    e1e0:	add	x8, x8, #0x1
    e1e4:	str	x8, [x0]
    e1e8:	ldp	x29, x30, [sp, #16]
    e1ec:	add	sp, sp, #0x20
    e1f0:	ret
    e1f4:	sub	sp, sp, #0x70
    e1f8:	stp	x29, x30, [sp, #80]
    e1fc:	str	x19, [sp, #96]
    e200:	add	x29, sp, #0x50
    e204:	mov	x0, x1
    e208:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e20c:	add	x1, x1, #0x5a0
    e210:	mov	x2, sp
    e214:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e218:	cbz	w0, e234 <PyInit__testcapi@@Base+0x5078>
    e21c:	ldr	x0, [sp]
    e220:	cbz	x0, e23c <PyInit__testcapi@@Base+0x5080>
    e224:	ldr	x1, [sp, #16]
    e228:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e22c:	mov	x19, x0
    e230:	b	e250 <PyInit__testcapi@@Base+0x5094>
    e234:	mov	x19, xzr
    e238:	b	e258 <PyInit__testcapi@@Base+0x509c>
    e23c:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e240:	ldr	x19, [x19, #4016]
    e244:	ldr	x8, [x19]
    e248:	add	x8, x8, #0x1
    e24c:	str	x8, [x19]
    e250:	mov	x0, sp
    e254:	bl	8470 <PyBuffer_Release@plt>
    e258:	mov	x0, x19
    e25c:	ldr	x19, [sp, #96]
    e260:	ldp	x29, x30, [sp, #80]
    e264:	add	sp, sp, #0x70
    e268:	ret
    e26c:	sub	sp, sp, #0x20
    e270:	stp	x29, x30, [sp, #16]
    e274:	add	x29, sp, #0x10
    e278:	mov	x0, x1
    e27c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e280:	add	x1, x1, #0x5a3
    e284:	add	x2, sp, #0x8
    e288:	mov	x3, sp
    e28c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e290:	cbz	w0, e2a8 <PyInit__testcapi@@Base+0x50ec>
    e294:	ldr	x0, [sp, #8]
    e298:	cbz	x0, e2b0 <PyInit__testcapi@@Base+0x50f4>
    e29c:	ldr	x1, [sp]
    e2a0:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e2a4:	b	e2c4 <PyInit__testcapi@@Base+0x5108>
    e2a8:	mov	x0, xzr
    e2ac:	b	e2c4 <PyInit__testcapi@@Base+0x5108>
    e2b0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e2b4:	ldr	x0, [x0, #4016]
    e2b8:	ldr	x8, [x0]
    e2bc:	add	x8, x8, #0x1
    e2c0:	str	x8, [x0]
    e2c4:	ldp	x29, x30, [sp, #16]
    e2c8:	add	sp, sp, #0x20
    e2cc:	ret
    e2d0:	sub	sp, sp, #0x20
    e2d4:	stp	x29, x30, [sp, #16]
    e2d8:	add	x29, sp, #0x10
    e2dc:	mov	x0, x1
    e2e0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e2e4:	add	x1, x1, #0xbb9
    e2e8:	add	x2, sp, #0x8
    e2ec:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e2f0:	cbz	w0, e300 <PyInit__testcapi@@Base+0x5144>
    e2f4:	ldr	x0, [sp, #8]
    e2f8:	bl	8970 <PyBytes_FromString@plt>
    e2fc:	b	e304 <PyInit__testcapi@@Base+0x5148>
    e300:	mov	x0, xzr
    e304:	ldp	x29, x30, [sp, #16]
    e308:	add	sp, sp, #0x20
    e30c:	ret
    e310:	sub	sp, sp, #0x70
    e314:	stp	x29, x30, [sp, #80]
    e318:	str	x19, [sp, #96]
    e31c:	add	x29, sp, #0x50
    e320:	mov	x0, x1
    e324:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e328:	add	x1, x1, #0x5a6
    e32c:	mov	x2, sp
    e330:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e334:	cbz	w0, e354 <PyInit__testcapi@@Base+0x5198>
    e338:	ldr	x0, [sp]
    e33c:	ldr	x1, [sp, #16]
    e340:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e344:	mov	x19, x0
    e348:	mov	x0, sp
    e34c:	bl	8470 <PyBuffer_Release@plt>
    e350:	b	e358 <PyInit__testcapi@@Base+0x519c>
    e354:	mov	x19, xzr
    e358:	mov	x0, x19
    e35c:	ldr	x19, [sp, #96]
    e360:	ldp	x29, x30, [sp, #80]
    e364:	add	sp, sp, #0x70
    e368:	ret
    e36c:	sub	sp, sp, #0x20
    e370:	stp	x29, x30, [sp, #16]
    e374:	add	x29, sp, #0x10
    e378:	mov	x0, x1
    e37c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e380:	add	x1, x1, #0x5a9
    e384:	add	x2, sp, #0x8
    e388:	mov	x3, sp
    e38c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e390:	cbz	w0, e3a0 <PyInit__testcapi@@Base+0x51e4>
    e394:	ldp	x1, x0, [sp]
    e398:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e39c:	b	e3a4 <PyInit__testcapi@@Base+0x51e8>
    e3a0:	mov	x0, xzr
    e3a4:	ldp	x29, x30, [sp, #16]
    e3a8:	add	sp, sp, #0x20
    e3ac:	ret
    e3b0:	sub	sp, sp, #0x20
    e3b4:	stp	x29, x30, [sp, #16]
    e3b8:	add	x29, sp, #0x10
    e3bc:	mov	x0, x1
    e3c0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    e3c4:	add	x1, x1, #0xdef
    e3c8:	add	x2, sp, #0x8
    e3cc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e3d0:	cbz	w0, e3e4 <PyInit__testcapi@@Base+0x5228>
    e3d4:	ldr	x0, [sp, #8]
    e3d8:	mov	x1, #0xffffffffffffffff    	// #-1
    e3dc:	bl	8400 <PyUnicode_FromWideChar@plt>
    e3e0:	b	e3e8 <PyInit__testcapi@@Base+0x522c>
    e3e4:	mov	x0, xzr
    e3e8:	ldp	x29, x30, [sp, #16]
    e3ec:	add	sp, sp, #0x20
    e3f0:	ret
    e3f4:	sub	sp, sp, #0x20
    e3f8:	stp	x29, x30, [sp, #16]
    e3fc:	add	x29, sp, #0x10
    e400:	mov	x0, x1
    e404:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e408:	add	x1, x1, #0x5ac
    e40c:	add	x2, sp, #0x8
    e410:	mov	x3, sp
    e414:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e418:	cbz	w0, e428 <PyInit__testcapi@@Base+0x526c>
    e41c:	ldp	x1, x0, [sp]
    e420:	bl	8400 <PyUnicode_FromWideChar@plt>
    e424:	b	e42c <PyInit__testcapi@@Base+0x5270>
    e428:	mov	x0, xzr
    e42c:	ldp	x29, x30, [sp, #16]
    e430:	add	sp, sp, #0x20
    e434:	ret
    e438:	sub	sp, sp, #0x20
    e43c:	stp	x29, x30, [sp, #16]
    e440:	add	x29, sp, #0x10
    e444:	mov	x0, x1
    e448:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e44c:	add	x1, x1, #0xbfa
    e450:	add	x2, sp, #0x8
    e454:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e458:	cbz	w0, e470 <PyInit__testcapi@@Base+0x52b4>
    e45c:	ldr	x0, [sp, #8]
    e460:	cbz	x0, e478 <PyInit__testcapi@@Base+0x52bc>
    e464:	mov	x1, #0xffffffffffffffff    	// #-1
    e468:	bl	8400 <PyUnicode_FromWideChar@plt>
    e46c:	b	e48c <PyInit__testcapi@@Base+0x52d0>
    e470:	mov	x0, xzr
    e474:	b	e48c <PyInit__testcapi@@Base+0x52d0>
    e478:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e47c:	ldr	x0, [x0, #4016]
    e480:	ldr	x8, [x0]
    e484:	add	x8, x8, #0x1
    e488:	str	x8, [x0]
    e48c:	ldp	x29, x30, [sp, #16]
    e490:	add	sp, sp, #0x20
    e494:	ret
    e498:	sub	sp, sp, #0x20
    e49c:	stp	x29, x30, [sp, #16]
    e4a0:	add	x29, sp, #0x10
    e4a4:	mov	x0, x1
    e4a8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e4ac:	add	x1, x1, #0x5af
    e4b0:	add	x2, sp, #0x8
    e4b4:	mov	x3, sp
    e4b8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e4bc:	cbz	w0, e4d4 <PyInit__testcapi@@Base+0x5318>
    e4c0:	ldr	x0, [sp, #8]
    e4c4:	cbz	x0, e4dc <PyInit__testcapi@@Base+0x5320>
    e4c8:	ldr	x1, [sp]
    e4cc:	bl	8400 <PyUnicode_FromWideChar@plt>
    e4d0:	b	e4f0 <PyInit__testcapi@@Base+0x5334>
    e4d4:	mov	x0, xzr
    e4d8:	b	e4f0 <PyInit__testcapi@@Base+0x5334>
    e4dc:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e4e0:	ldr	x0, [x0, #4016]
    e4e4:	ldr	x8, [x0]
    e4e8:	add	x8, x8, #0x1
    e4ec:	str	x8, [x0]
    e4f0:	ldp	x29, x30, [sp, #16]
    e4f4:	add	sp, sp, #0x20
    e4f8:	ret
    e4fc:	sub	sp, sp, #0x70
    e500:	stp	x29, x30, [sp, #80]
    e504:	str	x19, [sp, #96]
    e508:	add	x29, sp, #0x50
    e50c:	mov	x0, x1
    e510:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e514:	add	x1, x1, #0x5b2
    e518:	mov	x2, sp
    e51c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e520:	cbz	w0, e568 <PyInit__testcapi@@Base+0x53ac>
    e524:	ldr	x1, [sp, #16]
    e528:	cmp	x1, #0x2
    e52c:	b.lt	e550 <PyInit__testcapi@@Base+0x5394>  // b.tstop
    e530:	ldr	x8, [sp]
    e534:	mov	w9, #0x5b                  	// #91
    e538:	strb	w9, [x8]
    e53c:	ldr	x9, [sp, #16]
    e540:	add	x8, x9, x8
    e544:	mov	w9, #0x5d                  	// #93
    e548:	sturb	w9, [x8, #-1]
    e54c:	ldr	x1, [sp, #16]
    e550:	ldr	x0, [sp]
    e554:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e558:	mov	x19, x0
    e55c:	mov	x0, sp
    e560:	bl	8470 <PyBuffer_Release@plt>
    e564:	b	e56c <PyInit__testcapi@@Base+0x53b0>
    e568:	mov	x19, xzr
    e56c:	mov	x0, x19
    e570:	ldr	x19, [sp, #96]
    e574:	ldp	x29, x30, [sp, #80]
    e578:	add	sp, sp, #0x70
    e57c:	ret
    e580:	sub	sp, sp, #0x30
    e584:	stp	x29, x30, [sp, #16]
    e588:	str	x19, [sp, #32]
    e58c:	add	x29, sp, #0x10
    e590:	mov	x0, x1
    e594:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e598:	add	x1, x1, #0x5c4
    e59c:	add	x2, x29, #0x18
    e5a0:	add	x3, sp, #0x8
    e5a4:	str	xzr, [sp, #8]
    e5a8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e5ac:	cbz	w0, e5e8 <PyInit__testcapi@@Base+0x542c>
    e5b0:	ldr	x0, [x29, #24]
    e5b4:	ldr	x2, [sp, #8]
    e5b8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e5bc:	add	x1, x1, #0xc13
    e5c0:	mov	x3, sp
    e5c4:	bl	8810 <_PyArg_Parse_SizeT@plt>
    e5c8:	cbz	w0, e5e8 <PyInit__testcapi@@Base+0x542c>
    e5cc:	ldr	x0, [sp]
    e5d0:	bl	8970 <PyBytes_FromString@plt>
    e5d4:	ldr	x8, [sp]
    e5d8:	mov	x19, x0
    e5dc:	mov	x0, x8
    e5e0:	bl	83d0 <PyMem_Free@plt>
    e5e4:	b	e5ec <PyInit__testcapi@@Base+0x5430>
    e5e8:	mov	x19, xzr
    e5ec:	mov	x0, x19
    e5f0:	ldr	x19, [sp, #32]
    e5f4:	ldp	x29, x30, [sp, #16]
    e5f8:	add	sp, sp, #0x30
    e5fc:	ret
    e600:	sub	sp, sp, #0x30
    e604:	stp	x29, x30, [sp, #16]
    e608:	str	x19, [sp, #32]
    e60c:	add	x29, sp, #0x10
    e610:	mov	x0, x1
    e614:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e618:	add	x1, x1, #0x5c4
    e61c:	add	x2, x29, #0x18
    e620:	add	x3, sp, #0x8
    e624:	str	xzr, [sp, #8]
    e628:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e62c:	cbz	w0, e668 <PyInit__testcapi@@Base+0x54ac>
    e630:	ldr	x0, [x29, #24]
    e634:	ldr	x2, [sp, #8]
    e638:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e63c:	add	x1, x1, #0x49e
    e640:	mov	x3, sp
    e644:	bl	8810 <_PyArg_Parse_SizeT@plt>
    e648:	cbz	w0, e668 <PyInit__testcapi@@Base+0x54ac>
    e64c:	ldr	x0, [sp]
    e650:	bl	8970 <PyBytes_FromString@plt>
    e654:	ldr	x8, [sp]
    e658:	mov	x19, x0
    e65c:	mov	x0, x8
    e660:	bl	83d0 <PyMem_Free@plt>
    e664:	b	e66c <PyInit__testcapi@@Base+0x54b0>
    e668:	mov	x19, xzr
    e66c:	mov	x0, x19
    e670:	ldr	x19, [sp, #32]
    e674:	ldp	x29, x30, [sp, #16]
    e678:	add	sp, sp, #0x30
    e67c:	ret
    e680:	sub	sp, sp, #0x40
    e684:	stp	x29, x30, [sp, #32]
    e688:	str	x19, [sp, #48]
    e68c:	add	x29, sp, #0x20
    e690:	mov	x0, x1
    e694:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e698:	add	x1, x1, #0x5c8
    e69c:	add	x2, x29, #0x18
    e6a0:	sub	x3, x29, #0x8
    e6a4:	add	x4, sp, #0x10
    e6a8:	stur	xzr, [x29, #-8]
    e6ac:	stp	xzr, xzr, [sp, #8]
    e6b0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e6b4:	cbz	w0, e71c <PyInit__testcapi@@Base+0x5560>
    e6b8:	ldr	x9, [sp, #16]
    e6bc:	cbz	x9, e6dc <PyInit__testcapi@@Base+0x5520>
    e6c0:	ldr	x8, [x9, #16]
    e6c4:	cbz	x8, e6d0 <PyInit__testcapi@@Base+0x5514>
    e6c8:	ldr	x9, [x9, #40]
    e6cc:	b	e6d8 <PyInit__testcapi@@Base+0x551c>
    e6d0:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e6d4:	ldr	x9, [x9, #3904]
    e6d8:	stp	x8, x9, [sp]
    e6dc:	ldr	x0, [x29, #24]
    e6e0:	ldur	x2, [x29, #-8]
    e6e4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e6e8:	add	x1, x1, #0x5cd
    e6ec:	add	x3, sp, #0x8
    e6f0:	mov	x4, sp
    e6f4:	bl	8810 <_PyArg_Parse_SizeT@plt>
    e6f8:	cbz	w0, e71c <PyInit__testcapi@@Base+0x5560>
    e6fc:	ldp	x1, x0, [sp]
    e700:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e704:	ldr	x8, [sp, #16]
    e708:	mov	x19, x0
    e70c:	cbnz	x8, e720 <PyInit__testcapi@@Base+0x5564>
    e710:	ldr	x0, [sp, #8]
    e714:	bl	83d0 <PyMem_Free@plt>
    e718:	b	e720 <PyInit__testcapi@@Base+0x5564>
    e71c:	mov	x19, xzr
    e720:	mov	x0, x19
    e724:	ldr	x19, [sp, #48]
    e728:	ldp	x29, x30, [sp, #32]
    e72c:	add	sp, sp, #0x40
    e730:	ret
    e734:	sub	sp, sp, #0x40
    e738:	stp	x29, x30, [sp, #32]
    e73c:	str	x19, [sp, #48]
    e740:	add	x29, sp, #0x20
    e744:	mov	x0, x1
    e748:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e74c:	add	x1, x1, #0x5c8
    e750:	add	x2, x29, #0x18
    e754:	sub	x3, x29, #0x8
    e758:	add	x4, sp, #0x10
    e75c:	stur	xzr, [x29, #-8]
    e760:	stp	xzr, xzr, [sp, #8]
    e764:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e768:	cbz	w0, e7d0 <PyInit__testcapi@@Base+0x5614>
    e76c:	ldr	x9, [sp, #16]
    e770:	cbz	x9, e790 <PyInit__testcapi@@Base+0x55d4>
    e774:	ldr	x8, [x9, #16]
    e778:	cbz	x8, e784 <PyInit__testcapi@@Base+0x55c8>
    e77c:	ldr	x9, [x9, #40]
    e780:	b	e78c <PyInit__testcapi@@Base+0x55d0>
    e784:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e788:	ldr	x9, [x9, #3904]
    e78c:	stp	x8, x9, [sp]
    e790:	ldr	x0, [x29, #24]
    e794:	ldur	x2, [x29, #-8]
    e798:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e79c:	add	x1, x1, #0x5d1
    e7a0:	add	x3, sp, #0x8
    e7a4:	mov	x4, sp
    e7a8:	bl	8810 <_PyArg_Parse_SizeT@plt>
    e7ac:	cbz	w0, e7d0 <PyInit__testcapi@@Base+0x5614>
    e7b0:	ldp	x1, x0, [sp]
    e7b4:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e7b8:	ldr	x8, [sp, #16]
    e7bc:	mov	x19, x0
    e7c0:	cbnz	x8, e7d4 <PyInit__testcapi@@Base+0x5618>
    e7c4:	ldr	x0, [sp, #8]
    e7c8:	bl	83d0 <PyMem_Free@plt>
    e7cc:	b	e7d4 <PyInit__testcapi@@Base+0x5618>
    e7d0:	mov	x19, xzr
    e7d4:	mov	x0, x19
    e7d8:	ldr	x19, [sp, #48]
    e7dc:	ldp	x29, x30, [sp, #32]
    e7e0:	add	sp, sp, #0x40
    e7e4:	ret
    e7e8:	sub	sp, sp, #0x20
    e7ec:	stp	x29, x30, [sp, #16]
    e7f0:	add	x29, sp, #0x10
    e7f4:	mov	x0, x1
    e7f8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e7fc:	add	x1, x1, #0x5d5
    e800:	add	x2, sp, #0x8
    e804:	mov	x3, sp
    e808:	str	xzr, [sp]
    e80c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e810:	cbz	w0, e820 <PyInit__testcapi@@Base+0x5664>
    e814:	ldp	x1, x0, [sp]
    e818:	bl	8a60 <PyCodec_IncrementalEncoder@plt>
    e81c:	b	e824 <PyInit__testcapi@@Base+0x5668>
    e820:	mov	x0, xzr
    e824:	ldp	x29, x30, [sp, #16]
    e828:	add	sp, sp, #0x20
    e82c:	ret
    e830:	sub	sp, sp, #0x20
    e834:	stp	x29, x30, [sp, #16]
    e838:	add	x29, sp, #0x10
    e83c:	mov	x0, x1
    e840:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e844:	add	x1, x1, #0x5f1
    e848:	add	x2, sp, #0x8
    e84c:	mov	x3, sp
    e850:	str	xzr, [sp]
    e854:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e858:	cbz	w0, e868 <PyInit__testcapi@@Base+0x56ac>
    e85c:	ldp	x1, x0, [sp]
    e860:	bl	88b0 <PyCodec_IncrementalDecoder@plt>
    e864:	b	e86c <PyInit__testcapi@@Base+0x56b0>
    e868:	mov	x0, xzr
    e86c:	ldp	x29, x30, [sp, #16]
    e870:	add	sp, sp, #0x20
    e874:	ret
    e878:	stp	x29, x30, [sp, #-32]!
    e87c:	str	x19, [sp, #16]
    e880:	mov	x29, sp
    e884:	mov	w0, #0x1                   	// #1
    e888:	bl	8920 <PyTuple_New@plt>
    e88c:	cbz	x0, e91c <PyInit__testcapi@@Base+0x5760>
    e890:	mov	x19, x0
    e894:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    e898:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    e89c:	add	x0, x0, #0x60d
    e8a0:	add	x2, x2, #0x612
    e8a4:	mov	w1, #0x4                   	// #4
    e8a8:	mov	x3, xzr
    e8ac:	bl	8e50 <PyUnicode_Decode@plt>
    e8b0:	cbz	x0, e91c <PyInit__testcapi@@Base+0x5760>
    e8b4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e8b8:	str	x0, [x19, #24]
    e8bc:	add	x1, x1, #0x61a
    e8c0:	add	x2, x29, #0x18
    e8c4:	mov	x0, x19
    e8c8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e8cc:	cbz	w0, e918 <PyInit__testcapi@@Base+0x575c>
    e8d0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e8d4:	add	x1, x1, #0x629
    e8d8:	add	x2, x29, #0x18
    e8dc:	mov	x0, x19
    e8e0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e8e4:	cbz	w0, e918 <PyInit__testcapi@@Base+0x575c>
    e8e8:	ldr	x8, [x19]
    e8ec:	subs	x8, x8, #0x1
    e8f0:	str	x8, [x19]
    e8f4:	b.ne	e900 <PyInit__testcapi@@Base+0x5744>  // b.any
    e8f8:	mov	x0, x19
    e8fc:	bl	8560 <_Py_Dealloc@plt>
    e900:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e904:	ldr	x0, [x0, #4016]
    e908:	ldr	x8, [x0]
    e90c:	add	x8, x8, #0x1
    e910:	str	x8, [x0]
    e914:	b	e91c <PyInit__testcapi@@Base+0x5760>
    e918:	mov	x0, xzr
    e91c:	ldr	x19, [sp, #16]
    e920:	ldp	x29, x30, [sp], #32
    e924:	ret
    e928:	sub	sp, sp, #0x40
    e92c:	stp	x29, x30, [sp, #16]
    e930:	str	x21, [sp, #32]
    e934:	stp	x20, x19, [sp, #48]
    e938:	add	x29, sp, #0x10
    e93c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e940:	ldr	x8, [x8, #3880]
    e944:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    e948:	mov	w0, #0x1                   	// #1
    e94c:	ldrb	w8, [x8, #25]
    e950:	str	w8, [x9, #3820]
    e954:	bl	8920 <PyTuple_New@plt>
    e958:	cbz	x0, eab0 <PyInit__testcapi@@Base+0x58f4>
    e95c:	mov	x19, x0
    e960:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    e964:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    e968:	add	x0, x0, #0x638
    e96c:	add	x2, x2, #0x989
    e970:	mov	w1, #0x4                   	// #4
    e974:	mov	x3, xzr
    e978:	bl	8e50 <PyUnicode_Decode@plt>
    e97c:	cbz	x0, eab0 <PyInit__testcapi@@Base+0x58f4>
    e980:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e984:	mov	x20, x0
    e988:	str	x0, [x19, #24]
    e98c:	add	x1, x1, #0x63d
    e990:	add	x2, x29, #0x18
    e994:	mov	x0, x19
    e998:	str	xzr, [x29, #24]
    e99c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e9a0:	cbz	w0, eaac <PyInit__testcapi@@Base+0x58f0>
    e9a4:	ldr	x0, [x20, #40]
    e9a8:	ldr	x21, [x29, #24]
    e9ac:	cbnz	x0, e9b8 <PyInit__testcapi@@Base+0x57fc>
    e9b0:	mov	x0, x20
    e9b4:	bl	8910 <PyUnicode_AsUnicode@plt>
    e9b8:	cmp	x21, x0
    e9bc:	b.eq	e9e4 <PyInit__testcapi@@Base+0x5828>  // b.none
    e9c0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    e9c4:	ldr	x0, [x8, #3520]
    e9c8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    e9cc:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    e9d0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e9d4:	add	x1, x1, #0x842
    e9d8:	add	x2, x2, #0x676
    e9dc:	add	x3, x3, #0x64b
    e9e0:	b	eaa8 <PyInit__testcapi@@Base+0x58ec>
    e9e4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e9e8:	add	x1, x1, #0x673
    e9ec:	add	x2, x29, #0x18
    e9f0:	add	x3, sp, #0x8
    e9f4:	mov	x0, x19
    e9f8:	str	xzr, [x29, #24]
    e9fc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ea00:	cbz	w0, eaac <PyInit__testcapi@@Base+0x58f0>
    ea04:	ldr	x0, [x20, #40]
    ea08:	ldr	x21, [x29, #24]
    ea0c:	cbnz	x0, ea18 <PyInit__testcapi@@Base+0x585c>
    ea10:	mov	x0, x20
    ea14:	bl	8910 <PyUnicode_AsUnicode@plt>
    ea18:	cmp	x21, x0
    ea1c:	b.ne	ea88 <PyInit__testcapi@@Base+0x58cc>  // b.any
    ea20:	ldr	x8, [x20, #40]
    ea24:	ldr	x21, [sp, #8]
    ea28:	cbnz	x8, ea34 <PyInit__testcapi@@Base+0x5878>
    ea2c:	mov	x0, x20
    ea30:	bl	8910 <PyUnicode_AsUnicode@plt>
    ea34:	ldr	w8, [x20, #32]
    ea38:	mov	w9, #0x60                  	// #96
    ea3c:	mov	w10, #0x40                  	// #64
    ea40:	bics	wzr, w9, w8
    ea44:	mov	w8, #0x10                  	// #16
    ea48:	csel	x8, x8, x10, eq  // eq = none
    ea4c:	ldr	x8, [x20, x8]
    ea50:	cmp	x21, x8
    ea54:	b.ne	ea88 <PyInit__testcapi@@Base+0x58cc>  // b.any
    ea58:	ldr	x8, [x19]
    ea5c:	subs	x8, x8, #0x1
    ea60:	str	x8, [x19]
    ea64:	b.ne	ea70 <PyInit__testcapi@@Base+0x58b4>  // b.any
    ea68:	mov	x0, x19
    ea6c:	bl	8560 <_Py_Dealloc@plt>
    ea70:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ea74:	ldr	x0, [x0, #4016]
    ea78:	ldr	x8, [x0]
    ea7c:	add	x8, x8, #0x1
    ea80:	str	x8, [x0]
    ea84:	b	eab0 <PyInit__testcapi@@Base+0x58f4>
    ea88:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ea8c:	ldr	x0, [x8, #3520]
    ea90:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ea94:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    ea98:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ea9c:	add	x1, x1, #0x842
    eaa0:	add	x2, x2, #0x676
    eaa4:	add	x3, x3, #0x682
    eaa8:	bl	8e60 <PyErr_Format@plt>
    eaac:	mov	x0, xzr
    eab0:	ldp	x20, x19, [sp, #48]
    eab4:	ldr	x21, [sp, #32]
    eab8:	ldp	x29, x30, [sp, #16]
    eabc:	add	sp, sp, #0x40
    eac0:	ret
    eac4:	sub	sp, sp, #0x50
    eac8:	stp	x29, x30, [sp, #32]
    eacc:	stp	x22, x21, [sp, #48]
    ead0:	stp	x20, x19, [sp, #64]
    ead4:	add	x29, sp, #0x20
    ead8:	mov	w0, #0x2                   	// #2
    eadc:	bl	8920 <PyTuple_New@plt>
    eae0:	cbz	x0, eca8 <PyInit__testcapi@@Base+0x5aec>
    eae4:	mov	x20, x0
    eae8:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    eaec:	add	x0, x0, #0x638
    eaf0:	bl	8d10 <PyUnicode_FromString@plt>
    eaf4:	str	x0, [x20, #24]
    eaf8:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    eafc:	ldr	x19, [x19, #4016]
    eb00:	mov	x21, x0
    eb04:	ldr	x8, [x19]
    eb08:	add	x8, x8, #0x1
    eb0c:	str	x8, [x19]
    eb10:	str	x19, [x20, #32]
    eb14:	stur	xzr, [x29, #-8]
    eb18:	ldr	x0, [x0, #40]
    eb1c:	cbnz	x0, eb28 <PyInit__testcapi@@Base+0x596c>
    eb20:	mov	x0, x21
    eb24:	bl	8910 <PyUnicode_AsUnicode@plt>
    eb28:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    eb2c:	str	x0, [sp, #16]
    eb30:	add	x1, x1, #0x6ac
    eb34:	sub	x2, x29, #0x8
    eb38:	add	x3, sp, #0x10
    eb3c:	mov	x0, x20
    eb40:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    eb44:	cbz	w0, eca8 <PyInit__testcapi@@Base+0x5aec>
    eb48:	ldr	x0, [x21, #40]
    eb4c:	ldur	x22, [x29, #-8]
    eb50:	cbnz	x0, eb5c <PyInit__testcapi@@Base+0x59a0>
    eb54:	mov	x0, x21
    eb58:	bl	8910 <PyUnicode_AsUnicode@plt>
    eb5c:	cmp	x22, x0
    eb60:	b.eq	eb88 <PyInit__testcapi@@Base+0x59cc>  // b.none
    eb64:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    eb68:	ldr	x0, [x8, #3520]
    eb6c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    eb70:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    eb74:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    eb78:	add	x1, x1, #0x842
    eb7c:	add	x2, x2, #0x70c
    eb80:	add	x3, x3, #0x6bb
    eb84:	b	eca4 <PyInit__testcapi@@Base+0x5ae8>
    eb88:	ldr	x8, [sp, #16]
    eb8c:	cbz	x8, ebb4 <PyInit__testcapi@@Base+0x59f8>
    eb90:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    eb94:	ldr	x0, [x8, #3520]
    eb98:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    eb9c:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    eba0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    eba4:	add	x1, x1, #0x842
    eba8:	add	x2, x2, #0x70c
    ebac:	add	x3, x3, #0x6e2
    ebb0:	b	eca4 <PyInit__testcapi@@Base+0x5ae8>
    ebb4:	stur	xzr, [x29, #-8]
    ebb8:	ldr	x0, [x21, #40]
    ebbc:	cbnz	x0, ebc8 <PyInit__testcapi@@Base+0x5a0c>
    ebc0:	mov	x0, x21
    ebc4:	bl	8910 <PyUnicode_AsUnicode@plt>
    ebc8:	mov	x8, #0xffffffffffffffff    	// #-1
    ebcc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ebd0:	stp	x8, x0, [sp, #8]
    ebd4:	add	x1, x1, #0x707
    ebd8:	sub	x2, x29, #0x8
    ebdc:	add	x3, sp, #0x8
    ebe0:	add	x4, sp, #0x10
    ebe4:	mov	x5, sp
    ebe8:	mov	x0, x20
    ebec:	str	x8, [sp]
    ebf0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ebf4:	cbz	w0, eca8 <PyInit__testcapi@@Base+0x5aec>
    ebf8:	ldr	x0, [x21, #40]
    ebfc:	ldur	x22, [x29, #-8]
    ec00:	cbnz	x0, ec0c <PyInit__testcapi@@Base+0x5a50>
    ec04:	mov	x0, x21
    ec08:	bl	8910 <PyUnicode_AsUnicode@plt>
    ec0c:	cmp	x22, x0
    ec10:	b.ne	ec84 <PyInit__testcapi@@Base+0x5ac8>  // b.any
    ec14:	ldr	x8, [x21, #40]
    ec18:	ldr	x22, [sp, #8]
    ec1c:	cbnz	x8, ec28 <PyInit__testcapi@@Base+0x5a6c>
    ec20:	mov	x0, x21
    ec24:	bl	8910 <PyUnicode_AsUnicode@plt>
    ec28:	ldr	w8, [x21, #32]
    ec2c:	mov	w9, #0x60                  	// #96
    ec30:	mov	w10, #0x40                  	// #64
    ec34:	bics	wzr, w9, w8
    ec38:	mov	w8, #0x10                  	// #16
    ec3c:	csel	x8, x8, x10, eq  // eq = none
    ec40:	ldr	x8, [x21, x8]
    ec44:	cmp	x22, x8
    ec48:	b.ne	ec84 <PyInit__testcapi@@Base+0x5ac8>  // b.any
    ec4c:	ldr	x8, [sp, #16]
    ec50:	cbnz	x8, ecc4 <PyInit__testcapi@@Base+0x5b08>
    ec54:	ldr	x8, [sp]
    ec58:	cbnz	x8, ecc4 <PyInit__testcapi@@Base+0x5b08>
    ec5c:	ldr	x8, [x20]
    ec60:	subs	x8, x8, #0x1
    ec64:	str	x8, [x20]
    ec68:	b.ne	ec74 <PyInit__testcapi@@Base+0x5ab8>  // b.any
    ec6c:	mov	x0, x20
    ec70:	bl	8560 <_Py_Dealloc@plt>
    ec74:	ldr	x8, [x19]
    ec78:	add	x8, x8, #0x1
    ec7c:	str	x8, [x19]
    ec80:	b	ecac <PyInit__testcapi@@Base+0x5af0>
    ec84:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ec88:	ldr	x0, [x8, #3520]
    ec8c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ec90:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    ec94:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ec98:	add	x1, x1, #0x842
    ec9c:	add	x2, x2, #0x70c
    eca0:	add	x3, x3, #0x718
    eca4:	bl	8e60 <PyErr_Format@plt>
    eca8:	mov	x19, xzr
    ecac:	mov	x0, x19
    ecb0:	ldp	x20, x19, [sp, #64]
    ecb4:	ldp	x22, x21, [sp, #48]
    ecb8:	ldp	x29, x30, [sp, #32]
    ecbc:	add	sp, sp, #0x50
    ecc0:	ret
    ecc4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ecc8:	ldr	x0, [x8, #3520]
    eccc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ecd0:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    ecd4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ecd8:	add	x1, x1, #0x842
    ecdc:	add	x2, x2, #0x70c
    ece0:	add	x3, x3, #0x741
    ece4:	b	eca4 <PyInit__testcapi@@Base+0x5ae8>
    ece8:	sub	sp, sp, #0x40
    ecec:	stp	x29, x30, [sp, #16]
    ecf0:	str	x21, [sp, #32]
    ecf4:	stp	x20, x19, [sp, #48]
    ecf8:	add	x29, sp, #0x10
    ecfc:	mov	w8, #0xabcd                	// #43981
    ed00:	movk	w8, #0x10, lsl #16
    ed04:	mov	w9, #0x110000              	// #1114112
    ed08:	add	x0, x29, #0x18
    ed0c:	mov	w1, #0x1                   	// #1
    ed10:	str	x8, [x29, #24]
    ed14:	stur	w9, [x29, #-4]
    ed18:	bl	8400 <PyUnicode_FromWideChar@plt>
    ed1c:	cbz	x0, ee24 <PyInit__testcapi@@Base+0x5c68>
    ed20:	mov	x20, x0
    ed24:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    ed28:	add	x0, x0, #0x769
    ed2c:	bl	8d10 <PyUnicode_FromString@plt>
    ed30:	cbz	x0, edb0 <PyInit__testcapi@@Base+0x5bf4>
    ed34:	ldr	x8, [x20, #16]
    ed38:	ldr	x9, [x0, #16]
    ed3c:	mov	x19, x0
    ed40:	cmp	x8, x9
    ed44:	b.ne	edcc <PyInit__testcapi@@Base+0x5c10>  // b.any
    ed48:	mov	x0, x20
    ed4c:	mov	x1, x19
    ed50:	bl	8b30 <PyUnicode_Compare@plt>
    ed54:	ldr	x8, [x20]
    ed58:	mov	w21, w0
    ed5c:	subs	x8, x8, #0x1
    ed60:	str	x8, [x20]
    ed64:	b.ne	ed70 <PyInit__testcapi@@Base+0x5bb4>  // b.any
    ed68:	mov	x0, x20
    ed6c:	bl	8560 <_Py_Dealloc@plt>
    ed70:	ldr	x8, [x19]
    ed74:	subs	x8, x8, #0x1
    ed78:	str	x8, [x19]
    ed7c:	b.eq	ee38 <PyInit__testcapi@@Base+0x5c7c>  // b.none
    ed80:	cbz	w21, ee44 <PyInit__testcapi@@Base+0x5c88>
    ed84:	bl	8980 <PyErr_Occurred@plt>
    ed88:	cbnz	x0, ee20 <PyInit__testcapi@@Base+0x5c64>
    ed8c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ed90:	ldr	x0, [x8, #3520]
    ed94:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ed98:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ed9c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    eda0:	add	x1, x1, #0x842
    eda4:	add	x2, x2, #0xc7f
    eda8:	add	x3, x3, #0x7a0
    edac:	b	ee1c <PyInit__testcapi@@Base+0x5c60>
    edb0:	ldr	x8, [x20]
    edb4:	subs	x8, x8, #0x1
    edb8:	str	x8, [x20]
    edbc:	b.ne	ee20 <PyInit__testcapi@@Base+0x5c64>  // b.any
    edc0:	mov	x0, x20
    edc4:	bl	8560 <_Py_Dealloc@plt>
    edc8:	b	ee20 <PyInit__testcapi@@Base+0x5c64>
    edcc:	ldr	x8, [x20]
    edd0:	subs	x8, x8, #0x1
    edd4:	str	x8, [x20]
    edd8:	b.ne	ede4 <PyInit__testcapi@@Base+0x5c28>  // b.any
    eddc:	mov	x0, x20
    ede0:	bl	8560 <_Py_Dealloc@plt>
    ede4:	ldr	x8, [x19]
    ede8:	subs	x8, x8, #0x1
    edec:	str	x8, [x19]
    edf0:	b.ne	edfc <PyInit__testcapi@@Base+0x5c40>  // b.any
    edf4:	mov	x0, x19
    edf8:	bl	8560 <_Py_Dealloc@plt>
    edfc:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ee00:	ldr	x0, [x8, #3520]
    ee04:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ee08:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ee0c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ee10:	add	x1, x1, #0x842
    ee14:	add	x2, x2, #0xc7f
    ee18:	add	x3, x3, #0x76e
    ee1c:	bl	8e60 <PyErr_Format@plt>
    ee20:	mov	x0, xzr
    ee24:	ldp	x20, x19, [sp, #48]
    ee28:	ldr	x21, [sp, #32]
    ee2c:	ldp	x29, x30, [sp, #16]
    ee30:	add	sp, sp, #0x40
    ee34:	ret
    ee38:	mov	x0, x19
    ee3c:	bl	8560 <_Py_Dealloc@plt>
    ee40:	cbnz	w21, ed84 <PyInit__testcapi@@Base+0x5bc8>
    ee44:	sub	x0, x29, #0x4
    ee48:	mov	w1, #0x1                   	// #1
    ee4c:	bl	8400 <PyUnicode_FromWideChar@plt>
    ee50:	cbz	x0, ee78 <PyInit__testcapi@@Base+0x5cbc>
    ee54:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ee58:	ldr	x0, [x8, #3520]
    ee5c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ee60:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ee64:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ee68:	add	x1, x1, #0x842
    ee6c:	add	x2, x2, #0xc7f
    ee70:	add	x3, x3, #0x7ca
    ee74:	b	ee1c <PyInit__testcapi@@Base+0x5c60>
    ee78:	bl	88c0 <PyErr_Clear@plt>
    ee7c:	sub	x0, x29, #0x4
    ee80:	mov	w1, #0x1                   	// #1
    ee84:	bl	8890 <PyUnicode_FromUnicode@plt>
    ee88:	cbz	x0, eeb0 <PyInit__testcapi@@Base+0x5cf4>
    ee8c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ee90:	ldr	x0, [x8, #3520]
    ee94:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ee98:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ee9c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    eea0:	add	x1, x1, #0x842
    eea4:	add	x2, x2, #0xc7f
    eea8:	add	x3, x3, #0x7ff
    eeac:	b	ee1c <PyInit__testcapi@@Base+0x5c60>
    eeb0:	bl	88c0 <PyErr_Clear@plt>
    eeb4:	mov	w1, #0x1                   	// #1
    eeb8:	mov	x0, xzr
    eebc:	bl	8890 <PyUnicode_FromUnicode@plt>
    eec0:	cbz	x0, ee24 <PyInit__testcapi@@Base+0x5c68>
    eec4:	mov	x19, x0
    eec8:	ldr	x0, [x0, #40]
    eecc:	ldur	w20, [x29, #-4]
    eed0:	cbnz	x0, eedc <PyInit__testcapi@@Base+0x5d20>
    eed4:	mov	x0, x19
    eed8:	bl	8910 <PyUnicode_AsUnicode@plt>
    eedc:	str	w20, [x0]
    eee0:	mov	x0, x19
    eee4:	bl	82c0 <_PyUnicode_Ready@plt>
    eee8:	ldr	x8, [x19]
    eeec:	mov	w20, w0
    eef0:	subs	x8, x8, #0x1
    eef4:	str	x8, [x19]
    eef8:	b.ne	ef04 <PyInit__testcapi@@Base+0x5d48>  // b.any
    eefc:	mov	x0, x19
    ef00:	bl	8560 <_Py_Dealloc@plt>
    ef04:	tbnz	w20, #31, ef2c <PyInit__testcapi@@Base+0x5d70>
    ef08:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ef0c:	ldr	x0, [x8, #3520]
    ef10:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ef14:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ef18:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ef1c:	add	x1, x1, #0x842
    ef20:	add	x2, x2, #0xc7f
    ef24:	add	x3, x3, #0x833
    ef28:	b	ee1c <PyInit__testcapi@@Base+0x5c60>
    ef2c:	bl	88c0 <PyErr_Clear@plt>
    ef30:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ef34:	ldr	x0, [x0, #4016]
    ef38:	ldr	x8, [x0]
    ef3c:	add	x8, x8, #0x1
    ef40:	str	x8, [x0]
    ef44:	b	ee24 <PyInit__testcapi@@Base+0x5c68>
    ef48:	sub	sp, sp, #0x40
    ef4c:	stp	x29, x30, [sp, #16]
    ef50:	str	x21, [sp, #32]
    ef54:	stp	x20, x19, [sp, #48]
    ef58:	add	x29, sp, #0x10
    ef5c:	mov	x0, x1
    ef60:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ef64:	add	x1, x1, #0x851
    ef68:	add	x2, x29, #0x18
    ef6c:	add	x3, sp, #0x8
    ef70:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ef74:	cbz	w0, f000 <PyInit__testcapi@@Base+0x5e44>
    ef78:	ldr	x8, [sp, #8]
    ef7c:	lsr	x9, x8, #61
    ef80:	cbnz	x9, eff0 <PyInit__testcapi@@Base+0x5e34>
    ef84:	lsl	x0, x8, #2
    ef88:	bl	8fc0 <PyMem_Malloc@plt>
    ef8c:	cbz	x0, eff0 <PyInit__testcapi@@Base+0x5e34>
    ef90:	mov	x19, x0
    ef94:	ldr	x0, [x29, #24]
    ef98:	ldr	x2, [sp, #8]
    ef9c:	mov	x1, x19
    efa0:	bl	82d0 <PyUnicode_AsWideChar@plt>
    efa4:	cmn	x0, #0x1
    efa8:	b.eq	eff8 <PyInit__testcapi@@Base+0x5e3c>  // b.none
    efac:	ldr	x8, [sp, #8]
    efb0:	mov	x20, x0
    efb4:	cmp	x0, x8
    efb8:	cinc	x1, x0, lt  // lt = tstop
    efbc:	mov	x0, x19
    efc0:	str	x1, [sp, #8]
    efc4:	bl	8400 <PyUnicode_FromWideChar@plt>
    efc8:	mov	x21, x0
    efcc:	mov	x0, x19
    efd0:	bl	83d0 <PyMem_Free@plt>
    efd4:	cbz	x21, f000 <PyInit__testcapi@@Base+0x5e44>
    efd8:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    efdc:	add	x0, x0, #0x854
    efe0:	mov	x1, x21
    efe4:	mov	x2, x20
    efe8:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    efec:	b	f004 <PyInit__testcapi@@Base+0x5e48>
    eff0:	bl	8570 <PyErr_NoMemory@plt>
    eff4:	b	f004 <PyInit__testcapi@@Base+0x5e48>
    eff8:	mov	x0, x19
    effc:	bl	83d0 <PyMem_Free@plt>
    f000:	mov	x0, xzr
    f004:	ldp	x20, x19, [sp, #48]
    f008:	ldr	x21, [sp, #32]
    f00c:	ldp	x29, x30, [sp, #16]
    f010:	add	sp, sp, #0x40
    f014:	ret
    f018:	sub	sp, sp, #0x30
    f01c:	stp	x29, x30, [sp, #16]
    f020:	stp	x20, x19, [sp, #32]
    f024:	add	x29, sp, #0x10
    f028:	mov	x0, x1
    f02c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    f030:	add	x1, x1, #0xb4b
    f034:	add	x2, sp, #0x8
    f038:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f03c:	cbz	w0, f088 <PyInit__testcapi@@Base+0x5ecc>
    f040:	ldr	x0, [sp, #8]
    f044:	mov	x1, sp
    f048:	bl	8c70 <PyUnicode_AsWideCharString@plt>
    f04c:	cbz	x0, f08c <PyInit__testcapi@@Base+0x5ed0>
    f050:	ldr	x8, [sp]
    f054:	mov	x19, x0
    f058:	add	x1, x8, #0x1
    f05c:	bl	8400 <PyUnicode_FromWideChar@plt>
    f060:	mov	x20, x0
    f064:	mov	x0, x19
    f068:	bl	83d0 <PyMem_Free@plt>
    f06c:	cbz	x20, f088 <PyInit__testcapi@@Base+0x5ecc>
    f070:	ldr	x2, [sp]
    f074:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    f078:	add	x0, x0, #0x854
    f07c:	mov	x1, x20
    f080:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    f084:	b	f08c <PyInit__testcapi@@Base+0x5ed0>
    f088:	mov	x0, xzr
    f08c:	ldp	x20, x19, [sp, #32]
    f090:	ldp	x29, x30, [sp, #16]
    f094:	add	sp, sp, #0x30
    f098:	ret
    f09c:	sub	sp, sp, #0x40
    f0a0:	stp	x29, x30, [sp, #16]
    f0a4:	str	x21, [sp, #32]
    f0a8:	stp	x20, x19, [sp, #48]
    f0ac:	add	x29, sp, #0x10
    f0b0:	mov	x0, x1
    f0b4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f0b8:	add	x1, x1, #0x859
    f0bc:	add	x2, x29, #0x18
    f0c0:	mov	x3, sp
    f0c4:	sub	x4, x29, #0x4
    f0c8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f0cc:	cbz	w0, f158 <PyInit__testcapi@@Base+0x5f9c>
    f0d0:	ldr	x8, [sp]
    f0d4:	add	x19, x8, #0x1
    f0d8:	lsr	x8, x19, #61
    f0dc:	cbnz	x8, f144 <PyInit__testcapi@@Base+0x5f88>
    f0e0:	lsl	x21, x19, #2
    f0e4:	mov	x0, x21
    f0e8:	bl	8fc0 <PyMem_Malloc@plt>
    f0ec:	cbz	x0, f144 <PyInit__testcapi@@Base+0x5f88>
    f0f0:	mov	w1, wzr
    f0f4:	mov	x2, x21
    f0f8:	mov	x20, x0
    f0fc:	bl	8770 <memset@plt>
    f100:	ldr	x8, [sp]
    f104:	mov	w9, #0xffff                	// #65535
    f108:	mov	x1, x20
    f10c:	mov	x2, x19
    f110:	str	w9, [x20, x8, lsl #2]
    f114:	ldr	x0, [x29, #24]
    f118:	ldur	w3, [x29, #-4]
    f11c:	bl	8a00 <PyUnicode_AsUCS4@plt>
    f120:	cbz	x0, f150 <PyInit__testcapi@@Base+0x5f94>
    f124:	mov	w0, #0x4                   	// #4
    f128:	mov	x1, x20
    f12c:	mov	x2, x19
    f130:	bl	8bf0 <PyUnicode_FromKindAndData@plt>
    f134:	mov	x19, x0
    f138:	mov	x0, x20
    f13c:	bl	83d0 <PyMem_Free@plt>
    f140:	b	f15c <PyInit__testcapi@@Base+0x5fa0>
    f144:	bl	8570 <PyErr_NoMemory@plt>
    f148:	mov	x19, x0
    f14c:	b	f15c <PyInit__testcapi@@Base+0x5fa0>
    f150:	mov	x0, x20
    f154:	bl	83d0 <PyMem_Free@plt>
    f158:	mov	x19, xzr
    f15c:	mov	x0, x19
    f160:	ldp	x20, x19, [sp, #48]
    f164:	ldr	x21, [sp, #32]
    f168:	ldp	x29, x30, [sp, #16]
    f16c:	add	sp, sp, #0x40
    f170:	ret
    f174:	sub	sp, sp, #0x30
    f178:	stp	x29, x30, [sp, #32]
    f17c:	add	x29, sp, #0x20
    f180:	mov	x0, x1
    f184:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f188:	add	x1, x1, #0x86c
    f18c:	sub	x2, x29, #0x8
    f190:	add	x3, sp, #0x10
    f194:	add	x4, sp, #0x8
    f198:	mov	x5, sp
    f19c:	sub	x6, x29, #0xc
    f1a0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f1a4:	cbz	w0, f1c4 <PyInit__testcapi@@Base+0x6008>
    f1a8:	ldur	x0, [x29, #-8]
    f1ac:	ldr	w1, [sp, #16]
    f1b0:	ldp	x3, x2, [sp]
    f1b4:	ldur	w4, [x29, #-12]
    f1b8:	bl	8fb0 <PyUnicode_FindChar@plt>
    f1bc:	cmn	x0, #0x2
    f1c0:	b.ne	f1cc <PyInit__testcapi@@Base+0x6010>  // b.any
    f1c4:	mov	x0, xzr
    f1c8:	b	f1d0 <PyInit__testcapi@@Base+0x6014>
    f1cc:	bl	87f0 <PyLong_FromSsize_t@plt>
    f1d0:	ldp	x29, x30, [sp, #32]
    f1d4:	add	sp, sp, #0x30
    f1d8:	ret
    f1dc:	sub	sp, sp, #0x40
    f1e0:	stp	x29, x30, [sp, #32]
    f1e4:	str	x19, [sp, #48]
    f1e8:	add	x29, sp, #0x20
    f1ec:	mov	x0, x1
    f1f0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f1f4:	add	x1, x1, #0x883
    f1f8:	sub	x2, x29, #0x8
    f1fc:	add	x3, sp, #0x8
    f200:	add	x4, x29, #0x18
    f204:	add	x5, sp, #0x10
    f208:	mov	x6, sp
    f20c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f210:	cbz	w0, f2b8 <PyInit__testcapi@@Base+0x60fc>
    f214:	ldur	x9, [x29, #-8]
    f218:	ldr	w8, [x9, #32]
    f21c:	ldr	x0, [x9, #16]
    f220:	tbnz	w8, #6, f238 <PyInit__testcapi@@Base+0x607c>
    f224:	ubfx	w8, w8, #2, #3
    f228:	cmp	w8, #0x1
    f22c:	b.ne	f240 <PyInit__testcapi@@Base+0x6084>  // b.any
    f230:	mov	w1, #0xff                  	// #255
    f234:	b	f250 <PyInit__testcapi@@Base+0x6094>
    f238:	mov	w1, #0x7f                  	// #127
    f23c:	b	f250 <PyInit__testcapi@@Base+0x6094>
    f240:	cmp	w8, #0x2
    f244:	mov	w8, #0x10ffff              	// #1114111
    f248:	mov	w9, #0xffff                	// #65535
    f24c:	csel	w1, w9, w8, eq  // eq = none
    f250:	bl	9010 <PyUnicode_New@plt>
    f254:	cbz	x0, f2bc <PyInit__testcapi@@Base+0x6100>
    f258:	ldr	x2, [x0, #16]
    f25c:	mov	x1, xzr
    f260:	mov	w3, wzr
    f264:	mov	x19, x0
    f268:	bl	8c90 <PyUnicode_Fill@plt>
    f26c:	tbnz	x0, #63, f2a0 <PyInit__testcapi@@Base+0x60e4>
    f270:	ldp	x1, x3, [sp, #8]
    f274:	ldr	x2, [x29, #24]
    f278:	ldr	x4, [sp]
    f27c:	mov	x0, x19
    f280:	bl	8630 <PyUnicode_CopyCharacters@plt>
    f284:	tbnz	x0, #63, f2a0 <PyInit__testcapi@@Base+0x60e4>
    f288:	mov	x2, x0
    f28c:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    f290:	add	x0, x0, #0x854
    f294:	mov	x1, x19
    f298:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    f29c:	b	f2bc <PyInit__testcapi@@Base+0x6100>
    f2a0:	ldr	x8, [x19]
    f2a4:	subs	x8, x8, #0x1
    f2a8:	str	x8, [x19]
    f2ac:	b.ne	f2b8 <PyInit__testcapi@@Base+0x60fc>  // b.any
    f2b0:	mov	x0, x19
    f2b4:	bl	8560 <_Py_Dealloc@plt>
    f2b8:	mov	x0, xzr
    f2bc:	ldr	x19, [sp, #48]
    f2c0:	ldp	x29, x30, [sp, #32]
    f2c4:	add	sp, sp, #0x40
    f2c8:	ret
    f2cc:	sub	sp, sp, #0x40
    f2d0:	stp	x29, x30, [sp, #32]
    f2d4:	stp	x20, x19, [sp, #48]
    f2d8:	add	x29, sp, #0x20
    f2dc:	mov	x0, x1
    f2e0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f2e4:	add	x1, x1, #0x8a0
    f2e8:	sub	x2, x29, #0x8
    f2ec:	add	x3, sp, #0x10
    f2f0:	add	x4, sp, #0x8
    f2f4:	str	xzr, [sp, #8]
    f2f8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f2fc:	cbz	w0, f374 <PyInit__testcapi@@Base+0x61b8>
    f300:	ldr	x8, [sp, #16]
    f304:	mov	x0, xzr
    f308:	lsl	x9, x8, #3
    f30c:	sub	x1, x9, x8
    f310:	bl	8500 <PyBytes_FromStringAndSize@plt>
    f314:	str	x0, [sp]
    f318:	cbz	x0, f378 <PyInit__testcapi@@Base+0x61bc>
    f31c:	mov	x19, x0
    f320:	ldur	x0, [x29, #-8]
    f324:	ldp	x3, x1, [sp, #8]
    f328:	add	x20, x19, #0x20
    f32c:	mov	x2, x20
    f330:	bl	8af0 <PyUnicode_EncodeDecimal@plt>
    f334:	tbnz	w0, #31, f35c <PyInit__testcapi@@Base+0x61a0>
    f338:	mov	x0, x20
    f33c:	bl	8300 <strlen@plt>
    f340:	mov	x1, x0
    f344:	mov	x0, sp
    f348:	bl	8370 <_PyBytes_Resize@plt>
    f34c:	ldr	x8, [sp]
    f350:	cmp	w0, #0x0
    f354:	csel	x0, xzr, x8, lt  // lt = tstop
    f358:	b	f378 <PyInit__testcapi@@Base+0x61bc>
    f35c:	ldr	x8, [x19]
    f360:	subs	x8, x8, #0x1
    f364:	str	x8, [x19]
    f368:	b.ne	f374 <PyInit__testcapi@@Base+0x61b8>  // b.any
    f36c:	mov	x0, x19
    f370:	bl	8560 <_Py_Dealloc@plt>
    f374:	mov	x0, xzr
    f378:	ldp	x20, x19, [sp, #48]
    f37c:	ldp	x29, x30, [sp, #32]
    f380:	add	sp, sp, #0x40
    f384:	ret
    f388:	sub	sp, sp, #0x20
    f38c:	stp	x29, x30, [sp, #16]
    f390:	add	x29, sp, #0x10
    f394:	mov	x0, x1
    f398:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f39c:	add	x1, x1, #0x8a0
    f3a0:	add	x2, sp, #0x8
    f3a4:	mov	x3, sp
    f3a8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f3ac:	cbz	w0, f3bc <PyInit__testcapi@@Base+0x6200>
    f3b0:	ldp	x1, x0, [sp]
    f3b4:	bl	9020 <PyUnicode_TransformDecimalToASCII@plt>
    f3b8:	b	f3c0 <PyInit__testcapi@@Base+0x6204>
    f3bc:	mov	x0, xzr
    f3c0:	ldp	x29, x30, [sp, #16]
    f3c4:	add	sp, sp, #0x20
    f3c8:	ret
    f3cc:	sub	sp, sp, #0x30
    f3d0:	stp	x29, x30, [sp, #16]
    f3d4:	str	x19, [sp, #32]
    f3d8:	add	x29, sp, #0x10
    f3dc:	mov	x0, x1
    f3e0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f3e4:	add	x1, x1, #0x5ac
    f3e8:	add	x2, x29, #0x18
    f3ec:	add	x3, sp, #0x8
    f3f0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f3f4:	cbz	w0, f430 <PyInit__testcapi@@Base+0x6274>
    f3f8:	ldr	x1, [sp, #8]
    f3fc:	mov	x0, xzr
    f400:	bl	8890 <PyUnicode_FromUnicode@plt>
    f404:	mov	x19, x0
    f408:	cbz	x0, f434 <PyInit__testcapi@@Base+0x6278>
    f40c:	ldr	x0, [x19, #40]
    f410:	cbnz	x0, f41c <PyInit__testcapi@@Base+0x6260>
    f414:	mov	x0, x19
    f418:	bl	8910 <PyUnicode_AsUnicode@plt>
    f41c:	ldr	x8, [sp, #8]
    f420:	ldr	x1, [x29, #24]
    f424:	lsl	x2, x8, #2
    f428:	bl	8250 <memcpy@plt>
    f42c:	b	f434 <PyInit__testcapi@@Base+0x6278>
    f430:	mov	x19, xzr
    f434:	mov	x0, x19
    f438:	ldr	x19, [sp, #32]
    f43c:	ldp	x29, x30, [sp, #16]
    f440:	add	sp, sp, #0x30
    f444:	ret
    f448:	stp	x29, x30, [sp, #-64]!
    f44c:	str	x23, [sp, #16]
    f450:	stp	x22, x21, [sp, #32]
    f454:	stp	x20, x19, [sp, #48]
    f458:	mov	x29, sp
    f45c:	mov	x0, x1
    f460:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f464:	add	x1, x1, #0x8a5
    f468:	add	x2, x29, #0x18
    f46c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f470:	cbz	w0, f574 <PyInit__testcapi@@Base+0x63b8>
    f474:	ldr	x0, [x29, #24]
    f478:	bl	8c30 <PyCallable_Check@plt>
    f47c:	cbz	w0, f550 <PyInit__testcapi@@Base+0x6394>
    f480:	bl	8f70 <PyEval_InitThreads@plt>
    f484:	bl	8ad0 <PyThread_allocate_lock@plt>
    f488:	adrp	x22, 2a000 <PyInit__testcapi@@Base+0x20e44>
    f48c:	str	x0, [x22, #3824]
    f490:	cbz	x0, f58c <PyInit__testcapi@@Base+0x63d0>
    f494:	mov	w1, #0x1                   	// #1
    f498:	bl	85e0 <PyThread_acquire_lock@plt>
    f49c:	ldr	x1, [x29, #24]
    f4a0:	adrp	x19, 11000 <PyInit__testcapi@@Base+0x7e44>
    f4a4:	add	x19, x19, #0xde4
    f4a8:	mov	x0, x19
    f4ac:	bl	8460 <PyThread_start_new_thread@plt>
    f4b0:	ldr	x0, [x29, #24]
    f4b4:	bl	11e00 <PyInit__testcapi@@Base+0x8c44>
    f4b8:	mov	w20, w0
    f4bc:	bl	8d50 <PyEval_SaveThread@plt>
    f4c0:	ldr	x8, [x29, #24]
    f4c4:	mov	x21, x0
    f4c8:	mov	x0, x8
    f4cc:	bl	11e00 <PyInit__testcapi@@Base+0x8c44>
    f4d0:	ldr	x8, [x22, #3824]
    f4d4:	and	w23, w20, w0
    f4d8:	mov	w1, #0x1                   	// #1
    f4dc:	mov	x0, x8
    f4e0:	bl	85e0 <PyThread_acquire_lock@plt>
    f4e4:	mov	x0, x21
    f4e8:	bl	83b0 <PyEval_RestoreThread@plt>
    f4ec:	bl	8d50 <PyEval_SaveThread@plt>
    f4f0:	ldr	x1, [x29, #24]
    f4f4:	mov	x20, x0
    f4f8:	mov	x0, x19
    f4fc:	bl	8460 <PyThread_start_new_thread@plt>
    f500:	ldr	x0, [x29, #24]
    f504:	bl	11e00 <PyInit__testcapi@@Base+0x8c44>
    f508:	ldr	x8, [x22, #3824]
    f50c:	and	w19, w23, w0
    f510:	mov	w1, #0x1                   	// #1
    f514:	mov	x0, x8
    f518:	bl	85e0 <PyThread_acquire_lock@plt>
    f51c:	mov	x0, x20
    f520:	bl	83b0 <PyEval_RestoreThread@plt>
    f524:	ldr	x0, [x22, #3824]
    f528:	bl	8b90 <PyThread_release_lock@plt>
    f52c:	ldr	x0, [x22, #3824]
    f530:	bl	9030 <PyThread_free_lock@plt>
    f534:	tbz	w19, #0, f574 <PyInit__testcapi@@Base+0x63b8>
    f538:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    f53c:	ldr	x0, [x0, #4016]
    f540:	ldr	x8, [x0]
    f544:	add	x8, x8, #0x1
    f548:	str	x8, [x0]
    f54c:	b	f578 <PyInit__testcapi@@Base+0x63bc>
    f550:	ldr	x8, [x29, #24]
    f554:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    f558:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f55c:	add	x1, x1, #0x8b9
    f560:	ldr	x8, [x8, #8]
    f564:	ldr	x9, [x9, #3952]
    f568:	ldr	x2, [x8, #24]
    f56c:	ldr	x0, [x9]
    f570:	bl	8e60 <PyErr_Format@plt>
    f574:	mov	x0, xzr
    f578:	ldp	x20, x19, [sp, #48]
    f57c:	ldp	x22, x21, [sp, #32]
    f580:	ldr	x23, [sp, #16]
    f584:	ldp	x29, x30, [sp], #64
    f588:	ret
    f58c:	bl	8570 <PyErr_NoMemory@plt>
    f590:	b	f578 <PyInit__testcapi@@Base+0x63bc>
    f594:	sub	sp, sp, #0x30
    f598:	stp	x29, x30, [sp, #16]
    f59c:	stp	x20, x19, [sp, #32]
    f5a0:	add	x29, sp, #0x10
    f5a4:	mov	x0, x1
    f5a8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f5ac:	add	x1, x1, #0xd66
    f5b0:	add	x2, sp, #0x8
    f5b4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f5b8:	cbz	w0, f600 <PyInit__testcapi@@Base+0x6444>
    f5bc:	ldr	x8, [sp, #8]
    f5c0:	ldr	x9, [x8]
    f5c4:	add	x9, x9, #0x1
    f5c8:	str	x9, [x8]
    f5cc:	bl	8d50 <PyEval_SaveThread@plt>
    f5d0:	ldr	x1, [sp, #8]
    f5d4:	mov	x19, x0
    f5d8:	adrp	x0, 11000 <PyInit__testcapi@@Base+0x7e44>
    f5dc:	add	x0, x0, #0xea4
    f5e0:	bl	88e0 <Py_AddPendingCall@plt>
    f5e4:	mov	w20, w0
    f5e8:	mov	x0, x19
    f5ec:	bl	83b0 <PyEval_RestoreThread@plt>
    f5f0:	tbnz	w20, #31, f608 <PyInit__testcapi@@Base+0x644c>
    f5f4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    f5f8:	ldr	x0, [x0, #4032]
    f5fc:	b	f628 <PyInit__testcapi@@Base+0x646c>
    f600:	mov	x0, xzr
    f604:	b	f634 <PyInit__testcapi@@Base+0x6478>
    f608:	ldr	x0, [sp, #8]
    f60c:	ldr	x8, [x0]
    f610:	subs	x8, x8, #0x1
    f614:	str	x8, [x0]
    f618:	b.ne	f620 <PyInit__testcapi@@Base+0x6464>  // b.any
    f61c:	bl	8560 <_Py_Dealloc@plt>
    f620:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    f624:	ldr	x0, [x0, #3984]
    f628:	ldr	x8, [x0]
    f62c:	add	x8, x8, #0x1
    f630:	str	x8, [x0]
    f634:	ldp	x20, x19, [sp, #32]
    f638:	ldp	x29, x30, [sp, #16]
    f63c:	add	sp, sp, #0x30
    f640:	ret
    f644:	sub	sp, sp, #0x60
    f648:	stp	x29, x30, [sp, #32]
    f64c:	str	x23, [sp, #48]
    f650:	stp	x22, x21, [sp, #64]
    f654:	stp	x20, x19, [sp, #80]
    f658:	add	x29, sp, #0x20
    f65c:	add	x0, sp, #0x10
    f660:	mov	x1, xzr
    f664:	bl	8780 <gettimeofday@plt>
    f668:	mov	w20, wzr
    f66c:	mov	w21, #0x4e20                	// #20000
    f670:	mov	x19, xzr
    f674:	mov	x0, x19
    f678:	bl	8840 <PyLong_FromLong@plt>
    f67c:	ldr	x8, [x0]
    f680:	subs	x8, x8, #0x1
    f684:	str	x8, [x0]
    f688:	b.ne	f690 <PyInit__testcapi@@Base+0x64d4>  // b.any
    f68c:	bl	8560 <_Py_Dealloc@plt>
    f690:	add	x19, x19, #0x1
    f694:	cmp	x19, #0x3e8
    f698:	b.ne	f674 <PyInit__testcapi@@Base+0x64b8>  // b.any
    f69c:	add	w20, w20, #0x1
    f6a0:	cmp	w20, w21
    f6a4:	b.ne	f670 <PyInit__testcapi@@Base+0x64b4>  // b.any
    f6a8:	mov	w20, #0x4240                	// #16960
    f6ac:	mov	x0, sp
    f6b0:	mov	x1, xzr
    f6b4:	movk	w20, #0xf, lsl #16
    f6b8:	bl	8780 <gettimeofday@plt>
    f6bc:	ldp	q1, q0, [sp]
    f6c0:	sub	v0.2d, v1.2d, v0.2d
    f6c4:	mov	x3, v0.d[1]
    f6c8:	fmov	x2, d0
    f6cc:	str	q0, [sp]
    f6d0:	tbz	x3, #63, f6e0 <PyInit__testcapi@@Base+0x6524>
    f6d4:	sub	x2, x2, #0x1
    f6d8:	add	x3, x3, x20
    f6dc:	stp	x2, x3, [sp]
    f6e0:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    f6e4:	add	x0, x0, #0x8d5
    f6e8:	mov	w1, #0x1                   	// #1
    f6ec:	bl	8f30 <printf@plt>
    f6f0:	add	x0, sp, #0x10
    f6f4:	mov	x1, xzr
    f6f8:	bl	8780 <gettimeofday@plt>
    f6fc:	mov	w19, wzr
    f700:	mov	w21, #0x4e20                	// #20000
    f704:	mov	x22, xzr
    f708:	add	x0, x22, x20
    f70c:	bl	8840 <PyLong_FromLong@plt>
    f710:	ldr	x8, [x0]
    f714:	subs	x8, x8, #0x1
    f718:	str	x8, [x0]
    f71c:	b.ne	f724 <PyInit__testcapi@@Base+0x6568>  // b.any
    f720:	bl	8560 <_Py_Dealloc@plt>
    f724:	add	x22, x22, #0x1
    f728:	cmp	x22, #0x3e8
    f72c:	b.ne	f708 <PyInit__testcapi@@Base+0x654c>  // b.any
    f730:	add	w19, w19, #0x1
    f734:	cmp	w19, w21
    f738:	b.ne	f704 <PyInit__testcapi@@Base+0x6548>  // b.any
    f73c:	mov	x0, sp
    f740:	mov	x1, xzr
    f744:	bl	8780 <gettimeofday@plt>
    f748:	ldp	q1, q0, [sp]
    f74c:	sub	v0.2d, v1.2d, v0.2d
    f750:	mov	x3, v0.d[1]
    f754:	fmov	x2, d0
    f758:	str	q0, [sp]
    f75c:	tbz	x3, #63, f76c <PyInit__testcapi@@Base+0x65b0>
    f760:	sub	x2, x2, #0x1
    f764:	add	x3, x3, x20
    f768:	stp	x2, x3, [sp]
    f76c:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    f770:	add	x0, x0, #0x8d5
    f774:	mov	w1, #0x2                   	// #2
    f778:	bl	8f30 <printf@plt>
    f77c:	mov	w0, #0x1f40                	// #8000
    f780:	bl	8660 <malloc@plt>
    f784:	cbz	x0, fb18 <PyInit__testcapi@@Base+0x695c>
    f788:	mov	x19, x0
    f78c:	add	x0, sp, #0x10
    f790:	mov	x1, xzr
    f794:	bl	8780 <gettimeofday@plt>
    f798:	mov	w21, wzr
    f79c:	mov	w22, #0x4e20                	// #20000
    f7a0:	mov	x23, xzr
    f7a4:	add	x0, x23, x20
    f7a8:	bl	8840 <PyLong_FromLong@plt>
    f7ac:	str	x0, [x19, x23, lsl #3]
    f7b0:	add	x23, x23, #0x1
    f7b4:	cmp	x23, #0x3e8
    f7b8:	b.ne	f7a4 <PyInit__testcapi@@Base+0x65e8>  // b.any
    f7bc:	mov	x23, xzr
    f7c0:	ldr	x0, [x19, x23, lsl #3]
    f7c4:	ldr	x8, [x0]
    f7c8:	subs	x8, x8, #0x1
    f7cc:	str	x8, [x0]
    f7d0:	b.ne	f7d8 <PyInit__testcapi@@Base+0x661c>  // b.any
    f7d4:	bl	8560 <_Py_Dealloc@plt>
    f7d8:	add	x23, x23, #0x1
    f7dc:	cmp	x23, #0x3e8
    f7e0:	b.ne	f7c0 <PyInit__testcapi@@Base+0x6604>  // b.any
    f7e4:	add	w21, w21, #0x1
    f7e8:	cmp	w21, w22
    f7ec:	b.ne	f7a0 <PyInit__testcapi@@Base+0x65e4>  // b.any
    f7f0:	mov	x0, sp
    f7f4:	mov	x1, xzr
    f7f8:	bl	8780 <gettimeofday@plt>
    f7fc:	ldp	q1, q0, [sp]
    f800:	sub	v0.2d, v1.2d, v0.2d
    f804:	mov	x3, v0.d[1]
    f808:	fmov	x2, d0
    f80c:	str	q0, [sp]
    f810:	tbz	x3, #63, f820 <PyInit__testcapi@@Base+0x6664>
    f814:	sub	x2, x2, #0x1
    f818:	add	x3, x3, x20
    f81c:	stp	x2, x3, [sp]
    f820:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    f824:	mov	w21, #0x1200                	// #4608
    f828:	add	x0, x0, #0x8d5
    f82c:	mov	w1, #0x3                   	// #3
    f830:	movk	w21, #0x7a, lsl #16
    f834:	bl	8f30 <printf@plt>
    f838:	mov	x0, x19
    f83c:	bl	8aa0 <free@plt>
    f840:	mov	w0, #0x1200                	// #4608
    f844:	movk	w0, #0x7a, lsl #16
    f848:	bl	8660 <malloc@plt>
    f84c:	cbz	x0, fb18 <PyInit__testcapi@@Base+0x695c>
    f850:	mov	x19, x0
    f854:	add	x0, sp, #0x10
    f858:	mov	x1, xzr
    f85c:	bl	8780 <gettimeofday@plt>
    f860:	mov	w22, wzr
    f864:	mov	x23, xzr
    f868:	add	x0, x23, x20
    f86c:	bl	8840 <PyLong_FromLong@plt>
    f870:	str	x0, [x19, x23, lsl #3]
    f874:	add	x23, x23, #0x1
    f878:	cmp	x20, x23
    f87c:	b.ne	f868 <PyInit__testcapi@@Base+0x66ac>  // b.any
    f880:	mov	x23, xzr
    f884:	ldr	x0, [x19, x23]
    f888:	ldr	x8, [x0]
    f88c:	subs	x8, x8, #0x1
    f890:	str	x8, [x0]
    f894:	b.ne	f89c <PyInit__testcapi@@Base+0x66e0>  // b.any
    f898:	bl	8560 <_Py_Dealloc@plt>
    f89c:	add	x23, x23, #0x8
    f8a0:	cmp	x21, x23
    f8a4:	b.ne	f884 <PyInit__testcapi@@Base+0x66c8>  // b.any
    f8a8:	add	w22, w22, #0x1
    f8ac:	cmp	w22, #0x14
    f8b0:	b.ne	f864 <PyInit__testcapi@@Base+0x66a8>  // b.any
    f8b4:	mov	x0, sp
    f8b8:	mov	x1, xzr
    f8bc:	bl	8780 <gettimeofday@plt>
    f8c0:	ldp	q1, q0, [sp]
    f8c4:	sub	v0.2d, v1.2d, v0.2d
    f8c8:	mov	x3, v0.d[1]
    f8cc:	fmov	x2, d0
    f8d0:	str	q0, [sp]
    f8d4:	tbz	x3, #63, f8e4 <PyInit__testcapi@@Base+0x6728>
    f8d8:	sub	x2, x2, #0x1
    f8dc:	add	x3, x3, x20
    f8e0:	stp	x2, x3, [sp]
    f8e4:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    f8e8:	add	x0, x0, #0x8d5
    f8ec:	mov	w1, #0x4                   	// #4
    f8f0:	bl	8f30 <printf@plt>
    f8f4:	mov	x0, x19
    f8f8:	bl	8aa0 <free@plt>
    f8fc:	mov	w0, #0x1200                	// #4608
    f900:	movk	w0, #0x7a, lsl #16
    f904:	bl	8660 <malloc@plt>
    f908:	cbz	x0, fb18 <PyInit__testcapi@@Base+0x695c>
    f90c:	mov	x19, x0
    f910:	add	x0, sp, #0x10
    f914:	mov	x1, xzr
    f918:	bl	8780 <gettimeofday@plt>
    f91c:	mov	w22, wzr
    f920:	mov	x23, xzr
    f924:	add	x0, x23, #0x3e8
    f928:	bl	8840 <PyLong_FromLong@plt>
    f92c:	str	x0, [x19, x23, lsl #3]
    f930:	add	x23, x23, #0x1
    f934:	cmp	x20, x23
    f938:	b.ne	f924 <PyInit__testcapi@@Base+0x6768>  // b.any
    f93c:	mov	x23, xzr
    f940:	ldr	x0, [x19, x23]
    f944:	ldr	x8, [x0]
    f948:	subs	x8, x8, #0x1
    f94c:	str	x8, [x0]
    f950:	b.ne	f958 <PyInit__testcapi@@Base+0x679c>  // b.any
    f954:	bl	8560 <_Py_Dealloc@plt>
    f958:	add	x23, x23, #0x8
    f95c:	cmp	x21, x23
    f960:	b.ne	f940 <PyInit__testcapi@@Base+0x6784>  // b.any
    f964:	add	w22, w22, #0x1
    f968:	cmp	w22, #0xa
    f96c:	b.ne	f920 <PyInit__testcapi@@Base+0x6764>  // b.any
    f970:	mov	x0, sp
    f974:	mov	x1, xzr
    f978:	bl	8780 <gettimeofday@plt>
    f97c:	ldp	q1, q0, [sp]
    f980:	sub	v0.2d, v1.2d, v0.2d
    f984:	mov	x3, v0.d[1]
    f988:	fmov	x2, d0
    f98c:	str	q0, [sp]
    f990:	tbz	x3, #63, f9a0 <PyInit__testcapi@@Base+0x67e4>
    f994:	sub	x2, x2, #0x1
    f998:	add	x3, x3, x20
    f99c:	stp	x2, x3, [sp]
    f9a0:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    f9a4:	mov	w21, #0x9680                	// #38528
    f9a8:	add	x0, x0, #0x8d5
    f9ac:	mov	w1, #0x5                   	// #5
    f9b0:	movk	w21, #0x98, lsl #16
    f9b4:	bl	8f30 <printf@plt>
    f9b8:	mov	x0, x19
    f9bc:	bl	8aa0 <free@plt>
    f9c0:	mov	w0, #0x1                   	// #1
    f9c4:	bl	8840 <PyLong_FromLong@plt>
    f9c8:	mov	x19, x0
    f9cc:	add	x0, sp, #0x10
    f9d0:	mov	x1, xzr
    f9d4:	bl	8780 <gettimeofday@plt>
    f9d8:	mov	w22, #0x9680                	// #38528
    f9dc:	movk	w22, #0x98, lsl #16
    f9e0:	mov	x0, x19
    f9e4:	mov	x1, x19
    f9e8:	bl	8490 <PyNumber_Add@plt>
    f9ec:	ldr	x8, [x0]
    f9f0:	subs	x8, x8, #0x1
    f9f4:	str	x8, [x0]
    f9f8:	b.ne	fa00 <PyInit__testcapi@@Base+0x6844>  // b.any
    f9fc:	bl	8560 <_Py_Dealloc@plt>
    fa00:	subs	w22, w22, #0x1
    fa04:	b.ne	f9e0 <PyInit__testcapi@@Base+0x6824>  // b.any
    fa08:	mov	x0, sp
    fa0c:	mov	x1, xzr
    fa10:	bl	8780 <gettimeofday@plt>
    fa14:	ldr	x8, [x19]
    fa18:	subs	x8, x8, #0x1
    fa1c:	str	x8, [x19]
    fa20:	b.ne	fa2c <PyInit__testcapi@@Base+0x6870>  // b.any
    fa24:	mov	x0, x19
    fa28:	bl	8560 <_Py_Dealloc@plt>
    fa2c:	ldp	q1, q0, [sp]
    fa30:	sub	v0.2d, v1.2d, v0.2d
    fa34:	mov	x3, v0.d[1]
    fa38:	fmov	x2, d0
    fa3c:	str	q0, [sp]
    fa40:	tbz	x3, #63, fa50 <PyInit__testcapi@@Base+0x6894>
    fa44:	sub	x2, x2, #0x1
    fa48:	add	x3, x3, x20
    fa4c:	stp	x2, x3, [sp]
    fa50:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    fa54:	add	x0, x0, #0x8d5
    fa58:	mov	w1, #0x6                   	// #6
    fa5c:	bl	8f30 <printf@plt>
    fa60:	mov	w0, #0x3e8                 	// #1000
    fa64:	bl	8840 <PyLong_FromLong@plt>
    fa68:	cbz	x0, fb1c <PyInit__testcapi@@Base+0x6960>
    fa6c:	mov	x19, x0
    fa70:	add	x0, sp, #0x10
    fa74:	mov	x1, xzr
    fa78:	bl	8780 <gettimeofday@plt>
    fa7c:	mov	x0, x19
    fa80:	mov	x1, x19
    fa84:	bl	8490 <PyNumber_Add@plt>
    fa88:	cbz	x0, faa0 <PyInit__testcapi@@Base+0x68e4>
    fa8c:	ldr	x8, [x0]
    fa90:	subs	x8, x8, #0x1
    fa94:	str	x8, [x0]
    fa98:	b.ne	faa0 <PyInit__testcapi@@Base+0x68e4>  // b.any
    fa9c:	bl	8560 <_Py_Dealloc@plt>
    faa0:	subs	w21, w21, #0x1
    faa4:	b.ne	fa7c <PyInit__testcapi@@Base+0x68c0>  // b.any
    faa8:	mov	x0, sp
    faac:	mov	x1, xzr
    fab0:	bl	8780 <gettimeofday@plt>
    fab4:	ldr	x8, [x19]
    fab8:	subs	x8, x8, #0x1
    fabc:	str	x8, [x19]
    fac0:	b.ne	facc <PyInit__testcapi@@Base+0x6910>  // b.any
    fac4:	mov	x0, x19
    fac8:	bl	8560 <_Py_Dealloc@plt>
    facc:	ldp	q1, q0, [sp]
    fad0:	sub	v0.2d, v1.2d, v0.2d
    fad4:	mov	x3, v0.d[1]
    fad8:	fmov	x2, d0
    fadc:	str	q0, [sp]
    fae0:	tbz	x3, #63, faf0 <PyInit__testcapi@@Base+0x6934>
    fae4:	sub	x2, x2, #0x1
    fae8:	add	x3, x3, x20
    faec:	stp	x2, x3, [sp]
    faf0:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    faf4:	add	x0, x0, #0x8d5
    faf8:	mov	w1, #0x7                   	// #7
    fafc:	bl	8f30 <printf@plt>
    fb00:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    fb04:	ldr	x0, [x0, #4016]
    fb08:	ldr	x8, [x0]
    fb0c:	add	x8, x8, #0x1
    fb10:	str	x8, [x0]
    fb14:	b	fb1c <PyInit__testcapi@@Base+0x6960>
    fb18:	bl	8570 <PyErr_NoMemory@plt>
    fb1c:	ldp	x20, x19, [sp, #80]
    fb20:	ldp	x22, x21, [sp, #64]
    fb24:	ldr	x23, [sp, #48]
    fb28:	ldp	x29, x30, [sp, #32]
    fb2c:	add	sp, sp, #0x60
    fb30:	ret
    fb34:	sub	sp, sp, #0x20
    fb38:	stp	x29, x30, [sp, #16]
    fb3c:	add	x29, sp, #0x10
    fb40:	mov	x0, x1
    fb44:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    fb48:	add	x1, x1, #0x8e8
    fb4c:	mov	x2, sp
    fb50:	add	x3, sp, #0x8
    fb54:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fb58:	cbz	w0, fb80 <PyInit__testcapi@@Base+0x69c4>
    fb5c:	ldp	x0, x1, [sp]
    fb60:	bl	8ee0 <PyTraceBack_Print@plt>
    fb64:	tbnz	w0, #31, fb80 <PyInit__testcapi@@Base+0x69c4>
    fb68:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    fb6c:	ldr	x0, [x0, #4016]
    fb70:	ldr	x8, [x0]
    fb74:	add	x8, x8, #0x1
    fb78:	str	x8, [x0]
    fb7c:	b	fb84 <PyInit__testcapi@@Base+0x69c8>
    fb80:	mov	x0, xzr
    fb84:	ldp	x29, x30, [sp, #16]
    fb88:	add	sp, sp, #0x20
    fb8c:	ret
    fb90:	stp	x29, x30, [sp, #-32]!
    fb94:	str	x19, [sp, #16]
    fb98:	mov	x29, sp
    fb9c:	mov	x0, x1
    fba0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    fba4:	add	x1, x1, #0x8fb
    fba8:	add	x2, x29, #0x18
    fbac:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fbb0:	cbz	w0, fbdc <PyInit__testcapi@@Base+0x6a20>
    fbb4:	ldr	x0, [x29, #24]
    fbb8:	ldr	x8, [x0, #8]
    fbbc:	ldrb	w8, [x8, #171]
    fbc0:	tbnz	w8, #6, fbe4 <PyInit__testcapi@@Base+0x6a28>
    fbc4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    fbc8:	ldr	x8, [x8, #3952]
    fbcc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    fbd0:	add	x1, x1, #0x90d
    fbd4:	ldr	x0, [x8]
    fbd8:	bl	8e60 <PyErr_Format@plt>
    fbdc:	mov	x0, xzr
    fbe0:	b	fc30 <PyInit__testcapi@@Base+0x6a74>
    fbe4:	bl	86b0 <PyException_GetTraceback@plt>
    fbe8:	ldr	x1, [x29, #24]
    fbec:	mov	x19, x0
    fbf0:	mov	x2, x19
    fbf4:	ldr	x8, [x1, #8]
    fbf8:	mov	x0, x8
    fbfc:	bl	8e30 <PyErr_Display@plt>
    fc00:	cbz	x19, fc1c <PyInit__testcapi@@Base+0x6a60>
    fc04:	ldr	x8, [x19]
    fc08:	subs	x8, x8, #0x1
    fc0c:	str	x8, [x19]
    fc10:	b.ne	fc1c <PyInit__testcapi@@Base+0x6a60>  // b.any
    fc14:	mov	x0, x19
    fc18:	bl	8560 <_Py_Dealloc@plt>
    fc1c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    fc20:	ldr	x0, [x0, #4016]
    fc24:	ldr	x8, [x0]
    fc28:	add	x8, x8, #0x1
    fc2c:	str	x8, [x0]
    fc30:	ldr	x19, [sp, #16]
    fc34:	ldp	x29, x30, [sp], #32
    fc38:	ret
    fc3c:	sub	sp, sp, #0x50
    fc40:	stp	x29, x30, [sp, #48]
    fc44:	str	x19, [sp, #64]
    fc48:	add	x29, sp, #0x30
    fc4c:	mov	x0, x1
    fc50:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    fc54:	add	x1, x1, #0x92f
    fc58:	add	x2, x29, #0x18
    fc5c:	sub	x3, x29, #0x8
    fc60:	sub	x4, x29, #0x10
    fc64:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fc68:	cbz	w0, fd40 <PyInit__testcapi@@Base+0x6b84>
    fc6c:	add	x0, sp, #0x18
    fc70:	add	x1, sp, #0x10
    fc74:	add	x2, sp, #0x8
    fc78:	bl	82f0 <PyErr_GetExcInfo@plt>
    fc7c:	ldr	x0, [x29, #24]
    fc80:	ldr	x8, [x0]
    fc84:	add	x8, x8, #0x1
    fc88:	str	x8, [x0]
    fc8c:	ldur	x1, [x29, #-8]
    fc90:	ldr	x8, [x1]
    fc94:	add	x8, x8, #0x1
    fc98:	str	x8, [x1]
    fc9c:	ldur	x2, [x29, #-16]
    fca0:	ldr	x8, [x2]
    fca4:	add	x8, x8, #0x1
    fca8:	str	x8, [x2]
    fcac:	bl	8fa0 <PyErr_SetExcInfo@plt>
    fcb0:	ldp	x10, x8, [sp, #16]
    fcb4:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    fcb8:	ldr	x9, [x9, #4016]
    fcbc:	ldr	x11, [sp, #8]
    fcc0:	cmp	x8, #0x0
    fcc4:	mov	w0, #0x3                   	// #3
    fcc8:	csel	x1, x9, x8, eq  // eq = none
    fccc:	cmp	x10, #0x0
    fcd0:	csel	x2, x9, x10, eq  // eq = none
    fcd4:	cmp	x11, #0x0
    fcd8:	csel	x3, x9, x11, eq  // eq = none
    fcdc:	bl	9040 <PyTuple_Pack@plt>
    fce0:	ldr	x8, [sp, #24]
    fce4:	mov	x19, x0
    fce8:	cbz	x8, fd04 <PyInit__testcapi@@Base+0x6b48>
    fcec:	ldr	x9, [x8]
    fcf0:	subs	x9, x9, #0x1
    fcf4:	str	x9, [x8]
    fcf8:	b.ne	fd04 <PyInit__testcapi@@Base+0x6b48>  // b.any
    fcfc:	mov	x0, x8
    fd00:	bl	8560 <_Py_Dealloc@plt>
    fd04:	ldr	x0, [sp, #16]
    fd08:	cbz	x0, fd20 <PyInit__testcapi@@Base+0x6b64>
    fd0c:	ldr	x8, [x0]
    fd10:	subs	x8, x8, #0x1
    fd14:	str	x8, [x0]
    fd18:	b.ne	fd20 <PyInit__testcapi@@Base+0x6b64>  // b.any
    fd1c:	bl	8560 <_Py_Dealloc@plt>
    fd20:	ldr	x0, [sp, #8]
    fd24:	cbz	x0, fd44 <PyInit__testcapi@@Base+0x6b88>
    fd28:	ldr	x8, [x0]
    fd2c:	subs	x8, x8, #0x1
    fd30:	str	x8, [x0]
    fd34:	b.ne	fd44 <PyInit__testcapi@@Base+0x6b88>  // b.any
    fd38:	bl	8560 <_Py_Dealloc@plt>
    fd3c:	b	fd44 <PyInit__testcapi@@Base+0x6b88>
    fd40:	mov	x19, xzr
    fd44:	mov	x0, x19
    fd48:	ldr	x19, [sp, #64]
    fd4c:	ldp	x29, x30, [sp, #48]
    fd50:	add	sp, sp, #0x50
    fd54:	ret
    fd58:	stp	x29, x30, [sp, #-32]!
    fd5c:	stp	x20, x19, [sp, #16]
    fd60:	mov	x29, sp
    fd64:	adrp	x5, 2a000 <PyInit__testcapi@@Base+0x20e44>
    fd68:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
    fd6c:	add	x5, x5, #0xef8
    fd70:	add	x3, x3, #0xf00
    fd74:	str	xzr, [x5]
    fd78:	str	xzr, [x3]
    fd7c:	adrp	x2, 26000 <PyInit__testcapi@@Base+0x1ce44>
    fd80:	ldr	x2, [x2, #3920]
    fd84:	mov	x0, x1
    fd88:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    fd8c:	adrp	x4, 11000 <PyInit__testcapi@@Base+0x7e44>
    fd90:	add	x1, x1, #0x945
    fd94:	add	x4, x4, #0xf5c
    fd98:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fd9c:	cbz	w0, fdb8 <PyInit__testcapi@@Base+0x6bfc>
    fda0:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    fda4:	ldr	x19, [x19, #4016]
    fda8:	ldr	x8, [x19]
    fdac:	add	x8, x8, #0x1
    fdb0:	str	x8, [x19]
    fdb4:	b	fdf4 <PyInit__testcapi@@Base+0x6c38>
    fdb8:	adrp	x20, 2a000 <PyInit__testcapi@@Base+0x20e44>
    fdbc:	ldr	x8, [x20, #3832]
    fdc0:	cbz	x8, fdf0 <PyInit__testcapi@@Base+0x6c34>
    fdc4:	ldr	x0, [x8]
    fdc8:	bl	87f0 <PyLong_FromSsize_t@plt>
    fdcc:	mov	x19, x0
    fdd0:	ldr	x0, [x20, #3832]
    fdd4:	ldr	x8, [x0]
    fdd8:	subs	x8, x8, #0x1
    fddc:	str	x8, [x0]
    fde0:	b.ne	fde8 <PyInit__testcapi@@Base+0x6c2c>  // b.any
    fde4:	bl	8560 <_Py_Dealloc@plt>
    fde8:	bl	88c0 <PyErr_Clear@plt>
    fdec:	b	fdf4 <PyInit__testcapi@@Base+0x6c38>
    fdf0:	mov	x19, xzr
    fdf4:	mov	x0, x19
    fdf8:	ldp	x20, x19, [sp, #16]
    fdfc:	ldp	x29, x30, [sp], #32
    fe00:	ret
    fe04:	sub	sp, sp, #0x30
    fe08:	stp	x29, x30, [sp, #32]
    fe0c:	add	x29, sp, #0x20
    fe10:	mov	x0, x1
    fe14:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    fe18:	add	x1, x1, #0x94a
    fe1c:	sub	x2, x29, #0x8
    fe20:	add	x3, sp, #0x10
    fe24:	add	x4, sp, #0xc
    fe28:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fe2c:	cbz	w0, fe44 <PyInit__testcapi@@Base+0x6c88>
    fe30:	ldur	x0, [x29, #-8]
    fe34:	ldr	x1, [sp, #16]
    fe38:	ldr	w2, [sp, #12]
    fe3c:	bl	9060 <PyCode_NewEmpty@plt>
    fe40:	b	fe48 <PyInit__testcapi@@Base+0x6c8c>
    fe44:	mov	x0, xzr
    fe48:	ldp	x29, x30, [sp, #32]
    fe4c:	add	sp, sp, #0x30
    fe50:	ret
    fe54:	sub	sp, sp, #0x30
    fe58:	stp	x29, x30, [sp, #32]
    fe5c:	add	x29, sp, #0x20
    fe60:	mov	x8, x2
    fe64:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    fe68:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
    fe6c:	mov	x0, x1
    fe70:	add	x2, x2, #0x961
    fe74:	add	x3, x3, #0x5b0
    fe78:	sub	x4, x29, #0x8
    fe7c:	add	x5, sp, #0x10
    fe80:	add	x6, sp, #0x8
    fe84:	mov	x7, sp
    fe88:	mov	x1, x8
    fe8c:	stp	xzr, xzr, [sp, #8]
    fe90:	str	xzr, [sp]
    fe94:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    fe98:	cbz	w0, feb0 <PyInit__testcapi@@Base+0x6cf4>
    fe9c:	ldur	x0, [x29, #-8]
    fea0:	ldp	x2, x1, [sp, #8]
    fea4:	ldr	x3, [sp]
    fea8:	bl	85d0 <PyErr_NewExceptionWithDoc@plt>
    feac:	b	feb4 <PyInit__testcapi@@Base+0x6cf8>
    feb0:	mov	x0, xzr
    feb4:	ldp	x29, x30, [sp, #32]
    feb8:	add	sp, sp, #0x30
    febc:	ret
    fec0:	sub	sp, sp, #0x60
    fec4:	stp	x29, x30, [sp, #80]
    fec8:	add	x29, sp, #0x50
    fecc:	mov	x0, sp
    fed0:	mov	w3, #0x1                   	// #1
    fed4:	mov	w4, #0x1                   	// #1
    fed8:	mov	w5, #0x11c                 	// #284
    fedc:	mov	x1, xzr
    fee0:	mov	x2, xzr
    fee4:	bl	8870 <PyBuffer_FillInfo@plt>
    fee8:	tbnz	w0, #31, fef8 <PyInit__testcapi@@Base+0x6d3c>
    feec:	mov	x0, sp
    fef0:	bl	9050 <PyMemoryView_FromBuffer@plt>
    fef4:	b	fefc <PyInit__testcapi@@Base+0x6d40>
    fef8:	mov	x0, xzr
    fefc:	ldp	x29, x30, [sp, #80]
    ff00:	add	sp, sp, #0x60
    ff04:	ret
    ff08:	stp	x29, x30, [sp, #-32]!
    ff0c:	str	x19, [sp, #16]
    ff10:	mov	x29, sp
    ff14:	bl	8d50 <PyEval_SaveThread@plt>
    ff18:	mov	x19, x0
    ff1c:	bl	8940 <PyThreadState_Get@plt>
    ff20:	mov	x0, x19
    ff24:	bl	83b0 <PyEval_RestoreThread@plt>
    ff28:	ldr	x19, [sp, #16]
    ff2c:	mov	x0, xzr
    ff30:	ldp	x29, x30, [sp], #32
    ff34:	ret
    ff38:	stp	x29, x30, [sp, #-48]!
    ff3c:	str	x21, [sp, #16]
    ff40:	stp	x20, x19, [sp, #32]
    ff44:	mov	x29, sp
    ff48:	mov	x0, x1
    ff4c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ff50:	add	x1, x1, #0x97f
    ff54:	add	x2, x29, #0x18
    ff58:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ff5c:	cbz	w0, ffc8 <PyInit__testcapi@@Base+0x6e0c>
    ff60:	bl	8940 <PyThreadState_Get@plt>
    ff64:	mov	x19, x0
    ff68:	mov	x0, xzr
    ff6c:	bl	8fd0 <PyThreadState_Swap@plt>
    ff70:	bl	8790 <Py_NewInterpreter@plt>
    ff74:	cbz	x0, ffa8 <PyInit__testcapi@@Base+0x6dec>
    ff78:	mov	x20, x0
    ff7c:	ldr	x0, [x29, #24]
    ff80:	mov	x1, xzr
    ff84:	bl	8ed0 <PyRun_SimpleStringFlags@plt>
    ff88:	mov	w21, w0
    ff8c:	mov	x0, x20
    ff90:	bl	8540 <Py_EndInterpreter@plt>
    ff94:	mov	x0, x19
    ff98:	bl	8fd0 <PyThreadState_Swap@plt>
    ff9c:	sxtw	x0, w21
    ffa0:	bl	8840 <PyLong_FromLong@plt>
    ffa4:	b	ffcc <PyInit__testcapi@@Base+0x6e10>
    ffa8:	mov	x0, x19
    ffac:	bl	8fd0 <PyThreadState_Swap@plt>
    ffb0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ffb4:	ldr	x8, [x8, #3928]
    ffb8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ffbc:	add	x1, x1, #0x992
    ffc0:	ldr	x0, [x8]
    ffc4:	bl	8670 <PyErr_SetString@plt>
    ffc8:	mov	x0, xzr
    ffcc:	ldp	x20, x19, [sp, #32]
    ffd0:	ldr	x21, [sp, #16]
    ffd4:	ldp	x29, x30, [sp], #48
    ffd8:	ret
    ffdc:	sub	sp, sp, #0x30
    ffe0:	stp	x29, x30, [sp, #32]
    ffe4:	add	x29, sp, #0x20
    ffe8:	mov	x0, x1
    ffec:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    fff0:	add	x1, x1, #0x9b2
    fff4:	sub	x2, x29, #0x8
    fff8:	add	x3, sp, #0xc
    fffc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10000:	cbz	w0, 1004c <PyInit__testcapi@@Base+0x6e90>
   10004:	ldr	w2, [sp, #12]
   10008:	cmp	w2, #0x4
   1000c:	b.cc	1002c <PyInit__testcapi@@Base+0x6e70>  // b.lo, b.ul, b.last
   10010:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10014:	ldr	x8, [x8, #3944]
   10018:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1001c:	add	x1, x1, #0x9cd
   10020:	ldr	x0, [x8]
   10024:	bl	8670 <PyErr_SetString@plt>
   10028:	b	1004c <PyInit__testcapi@@Base+0x6e90>
   1002c:	ldur	x0, [x29, #-8]
   10030:	add	x1, sp, #0x10
   10034:	bl	8bc0 <_PyTime_ObjectToTime_t@plt>
   10038:	cmn	w0, #0x1
   1003c:	b.eq	1004c <PyInit__testcapi@@Base+0x6e90>  // b.none
   10040:	ldr	x0, [sp, #16]
   10044:	bl	9000 <_PyLong_FromTime_t@plt>
   10048:	b	10050 <PyInit__testcapi@@Base+0x6e94>
   1004c:	mov	x0, xzr
   10050:	ldp	x29, x30, [sp, #32]
   10054:	add	sp, sp, #0x30
   10058:	ret
   1005c:	sub	sp, sp, #0x30
   10060:	stp	x29, x30, [sp, #32]
   10064:	add	x29, sp, #0x20
   10068:	mov	x0, x1
   1006c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10070:	add	x1, x1, #0x9de
   10074:	sub	x2, x29, #0x8
   10078:	add	x3, sp, #0x4
   1007c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10080:	cbz	w0, 100e4 <PyInit__testcapi@@Base+0x6f28>
   10084:	ldr	w3, [sp, #4]
   10088:	cmp	w3, #0x4
   1008c:	b.cc	100ac <PyInit__testcapi@@Base+0x6ef0>  // b.lo, b.ul, b.last
   10090:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10094:	ldr	x8, [x8, #3944]
   10098:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1009c:	add	x1, x1, #0x9cd
   100a0:	ldr	x0, [x8]
   100a4:	bl	8670 <PyErr_SetString@plt>
   100a8:	b	100e4 <PyInit__testcapi@@Base+0x6f28>
   100ac:	ldur	x0, [x29, #-8]
   100b0:	add	x1, sp, #0x10
   100b4:	add	x2, sp, #0x8
   100b8:	bl	8420 <_PyTime_ObjectToTimeval@plt>
   100bc:	cmn	w0, #0x1
   100c0:	b.eq	100e4 <PyInit__testcapi@@Base+0x6f28>  // b.none
   100c4:	ldr	x0, [sp, #16]
   100c8:	bl	9000 <_PyLong_FromTime_t@plt>
   100cc:	ldr	x2, [sp, #8]
   100d0:	mov	x1, x0
   100d4:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   100d8:	add	x0, x0, #0x9fa
   100dc:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   100e0:	b	100e8 <PyInit__testcapi@@Base+0x6f2c>
   100e4:	mov	x0, xzr
   100e8:	ldp	x29, x30, [sp, #32]
   100ec:	add	sp, sp, #0x30
   100f0:	ret
   100f4:	sub	sp, sp, #0x30
   100f8:	stp	x29, x30, [sp, #32]
   100fc:	add	x29, sp, #0x20
   10100:	mov	x0, x1
   10104:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10108:	add	x1, x1, #0x9fd
   1010c:	sub	x2, x29, #0x8
   10110:	add	x3, sp, #0x4
   10114:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10118:	cbz	w0, 1017c <PyInit__testcapi@@Base+0x6fc0>
   1011c:	ldr	w3, [sp, #4]
   10120:	cmp	w3, #0x4
   10124:	b.cc	10144 <PyInit__testcapi@@Base+0x6f88>  // b.lo, b.ul, b.last
   10128:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   1012c:	ldr	x8, [x8, #3944]
   10130:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10134:	add	x1, x1, #0x9cd
   10138:	ldr	x0, [x8]
   1013c:	bl	8670 <PyErr_SetString@plt>
   10140:	b	1017c <PyInit__testcapi@@Base+0x6fc0>
   10144:	ldur	x0, [x29, #-8]
   10148:	add	x1, sp, #0x10
   1014c:	add	x2, sp, #0x8
   10150:	bl	8b10 <_PyTime_ObjectToTimespec@plt>
   10154:	cmn	w0, #0x1
   10158:	b.eq	1017c <PyInit__testcapi@@Base+0x6fc0>  // b.none
   1015c:	ldr	x0, [sp, #16]
   10160:	bl	9000 <_PyLong_FromTime_t@plt>
   10164:	ldr	x2, [sp, #8]
   10168:	mov	x1, x0
   1016c:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   10170:	add	x0, x0, #0x9fa
   10174:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   10178:	b	10180 <PyInit__testcapi@@Base+0x6fc4>
   1017c:	mov	x0, xzr
   10180:	ldp	x29, x30, [sp, #32]
   10184:	add	sp, sp, #0x30
   10188:	ret
   1018c:	sub	sp, sp, #0x20
   10190:	stp	x29, x30, [sp, #16]
   10194:	add	x29, sp, #0x10
   10198:	mov	x0, x1
   1019c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   101a0:	add	x1, x1, #0xa1a
   101a4:	add	x2, sp, #0x8
   101a8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   101ac:	cbz	w0, 101e0 <PyInit__testcapi@@Base+0x7024>
   101b0:	ldr	x2, [sp, #8]
   101b4:	ldr	x8, [x2, #8]
   101b8:	ldr	w8, [x8, #168]
   101bc:	tbz	w8, #31, 101c8 <PyInit__testcapi@@Base+0x700c>
   101c0:	ldrb	w8, [x2, #169]
   101c4:	tbnz	w8, #1, 101f4 <PyInit__testcapi@@Base+0x7038>
   101c8:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   101cc:	ldr	x8, [x8, #3952]
   101d0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   101d4:	add	x1, x1, #0xa28
   101d8:	ldr	x0, [x8]
   101dc:	bl	8e60 <PyErr_Format@plt>
   101e0:	mov	x2, xzr
   101e4:	ldp	x29, x30, [sp, #16]
   101e8:	mov	x0, x2
   101ec:	add	sp, sp, #0x20
   101f0:	ret
   101f4:	ldr	x8, [x2]
   101f8:	adrp	x9, 11000 <PyInit__testcapi@@Base+0x7e44>
   101fc:	add	x9, x9, #0xf80
   10200:	str	x9, [x2, #376]
   10204:	add	x8, x8, #0x1
   10208:	str	x8, [x2]
   1020c:	b	101e4 <PyInit__testcapi@@Base+0x7028>
   10210:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   10214:	add	x8, x8, #0x5f0
   10218:	mov	x1, x0
   1021c:	mov	x0, x8
   10220:	mov	x2, xzr
   10224:	b	8430 <PyCFunction_NewEx@plt>
   10228:	stp	x29, x30, [sp, #-16]!
   1022c:	mov	x29, sp
   10230:	mov	x0, xzr
   10234:	bl	84d0 <PyMem_RawMalloc@plt>
   10238:	cbz	x0, 102b4 <PyInit__testcapi@@Base+0x70f8>
   1023c:	bl	8a10 <PyMem_RawFree@plt>
   10240:	mov	x0, xzr
   10244:	mov	x1, xzr
   10248:	bl	8d30 <PyMem_RawCalloc@plt>
   1024c:	cbz	x0, 102c8 <PyInit__testcapi@@Base+0x710c>
   10250:	bl	8a10 <PyMem_RawFree@plt>
   10254:	mov	x0, xzr
   10258:	bl	8fc0 <PyMem_Malloc@plt>
   1025c:	cbz	x0, 102dc <PyInit__testcapi@@Base+0x7120>
   10260:	bl	83d0 <PyMem_Free@plt>
   10264:	mov	x0, xzr
   10268:	mov	x1, xzr
   1026c:	bl	8f20 <PyMem_Calloc@plt>
   10270:	cbz	x0, 102f0 <PyInit__testcapi@@Base+0x7134>
   10274:	bl	83d0 <PyMem_Free@plt>
   10278:	mov	x0, xzr
   1027c:	bl	86c0 <PyObject_Malloc@plt>
   10280:	cbz	x0, 10304 <PyInit__testcapi@@Base+0x7148>
   10284:	bl	87c0 <PyObject_Free@plt>
   10288:	mov	x0, xzr
   1028c:	mov	x1, xzr
   10290:	bl	90a0 <PyObject_Calloc@plt>
   10294:	cbz	x0, 10318 <PyInit__testcapi@@Base+0x715c>
   10298:	bl	87c0 <PyObject_Free@plt>
   1029c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   102a0:	ldr	x0, [x0, #4016]
   102a4:	ldr	x8, [x0]
   102a8:	add	x8, x8, #0x1
   102ac:	str	x8, [x0]
   102b0:	b	10334 <PyInit__testcapi@@Base+0x7178>
   102b4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   102b8:	ldr	x8, [x8, #3928]
   102bc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   102c0:	add	x1, x1, #0xa4e
   102c4:	b	10328 <PyInit__testcapi@@Base+0x716c>
   102c8:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   102cc:	ldr	x8, [x8, #3928]
   102d0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   102d4:	add	x1, x1, #0xa6e
   102d8:	b	10328 <PyInit__testcapi@@Base+0x716c>
   102dc:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   102e0:	ldr	x8, [x8, #3928]
   102e4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   102e8:	add	x1, x1, #0xa91
   102ec:	b	10328 <PyInit__testcapi@@Base+0x716c>
   102f0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   102f4:	ldr	x8, [x8, #3928]
   102f8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   102fc:	add	x1, x1, #0xaae
   10300:	b	10328 <PyInit__testcapi@@Base+0x716c>
   10304:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10308:	ldr	x8, [x8, #3928]
   1030c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10310:	add	x1, x1, #0xace
   10314:	b	10328 <PyInit__testcapi@@Base+0x716c>
   10318:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   1031c:	ldr	x8, [x8, #3928]
   10320:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10324:	add	x1, x1, #0xaee
   10328:	ldr	x0, [x8]
   1032c:	bl	8670 <PyErr_SetString@plt>
   10330:	mov	x0, xzr
   10334:	ldp	x29, x30, [sp], #16
   10338:	ret
   1033c:	mov	w0, wzr
   10340:	b	1209c <PyInit__testcapi@@Base+0x8ee0>
   10344:	mov	w0, #0x1                   	// #1
   10348:	b	1209c <PyInit__testcapi@@Base+0x8ee0>
   1034c:	mov	w0, #0x2                   	// #2
   10350:	b	1209c <PyInit__testcapi@@Base+0x8ee0>
   10354:	sub	sp, sp, #0x60
   10358:	stp	x29, x30, [sp, #48]
   1035c:	str	x21, [sp, #64]
   10360:	stp	x20, x19, [sp, #80]
   10364:	add	x29, sp, #0x30
   10368:	adrp	x2, 2a000 <PyInit__testcapi@@Base+0x20e44>
   1036c:	add	x2, x2, #0xf08
   10370:	mov	x0, x1
   10374:	mov	x3, x2
   10378:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1037c:	str	xzr, [x2, #8]
   10380:	str	wzr, [x3, #4]!
   10384:	add	x1, x1, #0xc00
   10388:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1038c:	cbz	w0, 1044c <PyInit__testcapi@@Base+0x7290>
   10390:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   10394:	ldr	w8, [x8, #3864]
   10398:	cbnz	w8, 10434 <PyInit__testcapi@@Base+0x7278>
   1039c:	adrp	x21, 2a000 <PyInit__testcapi@@Base+0x20e44>
   103a0:	add	x21, x21, #0xf18
   103a4:	mov	w8, #0x1                   	// #1
   103a8:	mov	x19, x21
   103ac:	adrp	x9, 12000 <PyInit__testcapi@@Base+0x8e44>
   103b0:	adrp	x10, 12000 <PyInit__testcapi@@Base+0x8e44>
   103b4:	adrp	x11, 12000 <PyInit__testcapi@@Base+0x8e44>
   103b8:	adrp	x12, 12000 <PyInit__testcapi@@Base+0x8e44>
   103bc:	str	w8, [x19], #8
   103c0:	add	x9, x9, #0x43c
   103c4:	add	x10, x10, #0x484
   103c8:	add	x11, x11, #0x4d0
   103cc:	add	x12, x12, #0x51c
   103d0:	mov	w0, wzr
   103d4:	mov	x1, x19
   103d8:	stp	x9, x10, [sp, #16]
   103dc:	stp	x11, x12, [sp, #32]
   103e0:	bl	8b70 <PyMem_GetAllocator@plt>
   103e4:	add	x20, x21, #0x30
   103e8:	mov	w0, #0x1                   	// #1
   103ec:	mov	x1, x20
   103f0:	bl	8b70 <PyMem_GetAllocator@plt>
   103f4:	add	x21, x21, #0x58
   103f8:	mov	w0, #0x2                   	// #2
   103fc:	mov	x1, x21
   10400:	bl	8b70 <PyMem_GetAllocator@plt>
   10404:	add	x1, sp, #0x8
   10408:	mov	w0, wzr
   1040c:	str	x19, [sp, #8]
   10410:	bl	8700 <PyMem_SetAllocator@plt>
   10414:	add	x1, sp, #0x8
   10418:	mov	w0, #0x1                   	// #1
   1041c:	str	x20, [sp, #8]
   10420:	bl	8700 <PyMem_SetAllocator@plt>
   10424:	add	x1, sp, #0x8
   10428:	mov	w0, #0x2                   	// #2
   1042c:	str	x21, [sp, #8]
   10430:	bl	8700 <PyMem_SetAllocator@plt>
   10434:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10438:	ldr	x0, [x0, #4016]
   1043c:	ldr	x8, [x0]
   10440:	add	x8, x8, #0x1
   10444:	str	x8, [x0]
   10448:	b	10450 <PyInit__testcapi@@Base+0x7294>
   1044c:	mov	x0, xzr
   10450:	ldp	x20, x19, [sp, #80]
   10454:	ldr	x21, [sp, #64]
   10458:	ldp	x29, x30, [sp, #48]
   1045c:	add	sp, sp, #0x60
   10460:	ret
   10464:	stp	x29, x30, [sp, #-32]!
   10468:	str	x19, [sp, #16]
   1046c:	mov	x29, sp
   10470:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   10474:	ldr	w8, [x8, #3864]
   10478:	cbz	w8, 104ac <PyInit__testcapi@@Base+0x72f0>
   1047c:	adrp	x19, 2a000 <PyInit__testcapi@@Base+0x20e44>
   10480:	add	x19, x19, #0xf18
   10484:	mov	x1, x19
   10488:	str	wzr, [x1], #8
   1048c:	mov	w0, wzr
   10490:	bl	8700 <PyMem_SetAllocator@plt>
   10494:	add	x1, x19, #0x30
   10498:	mov	w0, #0x1                   	// #1
   1049c:	bl	8700 <PyMem_SetAllocator@plt>
   104a0:	add	x1, x19, #0x58
   104a4:	mov	w0, #0x2                   	// #2
   104a8:	bl	8700 <PyMem_SetAllocator@plt>
   104ac:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   104b0:	ldr	x0, [x0, #4016]
   104b4:	ldr	x19, [sp, #16]
   104b8:	ldr	x8, [x0]
   104bc:	add	x8, x8, #0x1
   104c0:	str	x8, [x0]
   104c4:	ldp	x29, x30, [sp], #32
   104c8:	ret
   104cc:	sub	sp, sp, #0x50
   104d0:	stp	x29, x30, [sp, #32]
   104d4:	str	x21, [sp, #48]
   104d8:	stp	x20, x19, [sp, #64]
   104dc:	add	x29, sp, #0x20
   104e0:	mov	x19, x1
   104e4:	bl	8f70 <PyEval_InitThreads@plt>
   104e8:	bl	8ad0 <PyThread_allocate_lock@plt>
   104ec:	mov	x20, x0
   104f0:	str	x0, [sp, #8]
   104f4:	bl	8ad0 <PyThread_allocate_lock@plt>
   104f8:	stp	x0, xzr, [sp, #16]
   104fc:	cbz	x0, 1059c <PyInit__testcapi@@Base+0x73e0>
   10500:	cbz	x20, 1059c <PyInit__testcapi@@Base+0x73e0>
   10504:	ldr	x8, [x19]
   10508:	mov	x21, x0
   1050c:	mov	w1, #0x1                   	// #1
   10510:	mov	x0, x20
   10514:	add	x8, x8, #0x1
   10518:	str	x8, [x19]
   1051c:	str	x19, [sp, #24]
   10520:	bl	85e0 <PyThread_acquire_lock@plt>
   10524:	mov	w1, #0x1                   	// #1
   10528:	mov	x0, x21
   1052c:	bl	85e0 <PyThread_acquire_lock@plt>
   10530:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e44>
   10534:	add	x0, x0, #0x528
   10538:	add	x1, sp, #0x8
   1053c:	bl	8460 <PyThread_start_new_thread@plt>
   10540:	cmn	x0, #0x1
   10544:	b.eq	105b8 <PyInit__testcapi@@Base+0x73fc>  // b.none
   10548:	ldr	x0, [sp, #8]
   1054c:	mov	w1, #0x1                   	// #1
   10550:	bl	85e0 <PyThread_acquire_lock@plt>
   10554:	ldr	x0, [sp, #8]
   10558:	bl	8b90 <PyThread_release_lock@plt>
   1055c:	bl	8d50 <PyEval_SaveThread@plt>
   10560:	ldr	x8, [sp, #16]
   10564:	mov	x19, x0
   10568:	mov	w1, #0x1                   	// #1
   1056c:	mov	x0, x8
   10570:	bl	85e0 <PyThread_acquire_lock@plt>
   10574:	ldr	x0, [sp, #16]
   10578:	bl	8b90 <PyThread_release_lock@plt>
   1057c:	mov	x0, x19
   10580:	bl	83b0 <PyEval_RestoreThread@plt>
   10584:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10588:	ldr	x19, [x19, #4016]
   1058c:	ldr	x8, [x19]
   10590:	add	x8, x8, #0x1
   10594:	str	x8, [x19]
   10598:	b	105e4 <PyInit__testcapi@@Base+0x7428>
   1059c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   105a0:	ldr	x8, [x8, #3928]
   105a4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   105a8:	add	x1, x1, #0xc04
   105ac:	ldr	x0, [x8]
   105b0:	bl	8670 <PyErr_SetString@plt>
   105b4:	b	105e0 <PyInit__testcapi@@Base+0x7424>
   105b8:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   105bc:	ldr	x8, [x8, #3928]
   105c0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   105c4:	add	x1, x1, #0xc1c
   105c8:	ldr	x0, [x8]
   105cc:	bl	8670 <PyErr_SetString@plt>
   105d0:	ldr	x0, [sp, #8]
   105d4:	bl	8b90 <PyThread_release_lock@plt>
   105d8:	ldr	x0, [sp, #16]
   105dc:	bl	8b90 <PyThread_release_lock@plt>
   105e0:	mov	x19, xzr
   105e4:	ldr	x0, [sp, #24]
   105e8:	cbz	x0, 10604 <PyInit__testcapi@@Base+0x7448>
   105ec:	str	xzr, [sp, #24]
   105f0:	ldr	x8, [x0]
   105f4:	subs	x8, x8, #0x1
   105f8:	str	x8, [x0]
   105fc:	b.ne	10604 <PyInit__testcapi@@Base+0x7448>  // b.any
   10600:	bl	8560 <_Py_Dealloc@plt>
   10604:	ldr	x0, [sp, #8]
   10608:	cbz	x0, 10610 <PyInit__testcapi@@Base+0x7454>
   1060c:	bl	9030 <PyThread_free_lock@plt>
   10610:	ldr	x0, [sp, #16]
   10614:	cbz	x0, 1061c <PyInit__testcapi@@Base+0x7460>
   10618:	bl	9030 <PyThread_free_lock@plt>
   1061c:	mov	x0, x19
   10620:	ldp	x20, x19, [sp, #64]
   10624:	ldr	x21, [sp, #48]
   10628:	ldp	x29, x30, [sp, #32]
   1062c:	add	sp, sp, #0x50
   10630:	ret
   10634:	sub	sp, sp, #0x30
   10638:	stp	x29, x30, [sp, #16]
   1063c:	str	x19, [sp, #32]
   10640:	add	x29, sp, #0x10
   10644:	mov	x0, x1
   10648:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1064c:	add	x1, x1, #0xc37
   10650:	add	x2, x29, #0x18
   10654:	add	x3, sp, #0x8
   10658:	add	x4, sp, #0x4
   1065c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10660:	cbz	w0, 106c4 <PyInit__testcapi@@Base+0x7508>
   10664:	ldr	x0, [sp, #8]
   10668:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1066c:	add	x1, x1, #0xc58
   10670:	bl	8cd0 <fopen64@plt>
   10674:	cbz	x0, 106b4 <PyInit__testcapi@@Base+0x74f8>
   10678:	mov	x19, x0
   1067c:	ldr	x0, [x29, #24]
   10680:	ldr	w2, [sp, #4]
   10684:	mov	x1, x19
   10688:	bl	85c0 <PyMarshal_WriteLongToFile@plt>
   1068c:	mov	x0, x19
   10690:	bl	8640 <fclose@plt>
   10694:	bl	8980 <PyErr_Occurred@plt>
   10698:	cbnz	x0, 106c4 <PyInit__testcapi@@Base+0x7508>
   1069c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   106a0:	ldr	x0, [x0, #4016]
   106a4:	ldr	x8, [x0]
   106a8:	add	x8, x8, #0x1
   106ac:	str	x8, [x0]
   106b0:	b	106c8 <PyInit__testcapi@@Base+0x750c>
   106b4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   106b8:	ldr	x8, [x8, #3976]
   106bc:	ldr	x0, [x8]
   106c0:	bl	8410 <PyErr_SetFromErrno@plt>
   106c4:	mov	x0, xzr
   106c8:	ldr	x19, [sp, #32]
   106cc:	ldp	x29, x30, [sp, #16]
   106d0:	add	sp, sp, #0x30
   106d4:	ret
   106d8:	sub	sp, sp, #0x30
   106dc:	stp	x29, x30, [sp, #16]
   106e0:	str	x19, [sp, #32]
   106e4:	add	x29, sp, #0x10
   106e8:	mov	x0, x1
   106ec:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   106f0:	add	x1, x1, #0xc5b
   106f4:	add	x2, x29, #0x18
   106f8:	add	x3, sp, #0x8
   106fc:	add	x4, sp, #0x4
   10700:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10704:	cbz	w0, 10768 <PyInit__testcapi@@Base+0x75ac>
   10708:	ldr	x0, [sp, #8]
   1070c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10710:	add	x1, x1, #0xc58
   10714:	bl	8cd0 <fopen64@plt>
   10718:	cbz	x0, 10758 <PyInit__testcapi@@Base+0x759c>
   1071c:	mov	x19, x0
   10720:	ldr	x0, [x29, #24]
   10724:	ldr	w2, [sp, #4]
   10728:	mov	x1, x19
   1072c:	bl	8ac0 <PyMarshal_WriteObjectToFile@plt>
   10730:	mov	x0, x19
   10734:	bl	8640 <fclose@plt>
   10738:	bl	8980 <PyErr_Occurred@plt>
   1073c:	cbnz	x0, 10768 <PyInit__testcapi@@Base+0x75ac>
   10740:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10744:	ldr	x0, [x0, #4016]
   10748:	ldr	x8, [x0]
   1074c:	add	x8, x8, #0x1
   10750:	str	x8, [x0]
   10754:	b	1076c <PyInit__testcapi@@Base+0x75b0>
   10758:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   1075c:	ldr	x8, [x8, #3976]
   10760:	ldr	x0, [x8]
   10764:	bl	8410 <PyErr_SetFromErrno@plt>
   10768:	mov	x0, xzr
   1076c:	ldr	x19, [sp, #32]
   10770:	ldp	x29, x30, [sp, #16]
   10774:	add	sp, sp, #0x30
   10778:	ret
   1077c:	stp	x29, x30, [sp, #-48]!
   10780:	str	x21, [sp, #16]
   10784:	stp	x20, x19, [sp, #32]
   10788:	mov	x29, sp
   1078c:	mov	x0, x1
   10790:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10794:	add	x1, x1, #0xc7e
   10798:	add	x2, x29, #0x18
   1079c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   107a0:	cbz	w0, 10808 <PyInit__testcapi@@Base+0x764c>
   107a4:	ldr	x0, [x29, #24]
   107a8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   107ac:	add	x1, x1, #0xc9f
   107b0:	bl	8cd0 <fopen64@plt>
   107b4:	cbz	x0, 107f8 <PyInit__testcapi@@Base+0x763c>
   107b8:	mov	x21, x0
   107bc:	bl	8f60 <PyMarshal_ReadShortFromFile@plt>
   107c0:	mov	w19, w0
   107c4:	mov	x0, x21
   107c8:	bl	84b0 <ftell@plt>
   107cc:	mov	x20, x0
   107d0:	mov	x0, x21
   107d4:	bl	8640 <fclose@plt>
   107d8:	bl	8980 <PyErr_Occurred@plt>
   107dc:	cbnz	x0, 10808 <PyInit__testcapi@@Base+0x764c>
   107e0:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   107e4:	add	x0, x0, #0x84e
   107e8:	mov	w1, w19
   107ec:	mov	x2, x20
   107f0:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   107f4:	b	1080c <PyInit__testcapi@@Base+0x7650>
   107f8:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   107fc:	ldr	x8, [x8, #3976]
   10800:	ldr	x0, [x8]
   10804:	bl	8410 <PyErr_SetFromErrno@plt>
   10808:	mov	x0, xzr
   1080c:	ldp	x20, x19, [sp, #32]
   10810:	ldr	x21, [sp, #16]
   10814:	ldp	x29, x30, [sp], #48
   10818:	ret
   1081c:	stp	x29, x30, [sp, #-48]!
   10820:	str	x21, [sp, #16]
   10824:	stp	x20, x19, [sp, #32]
   10828:	mov	x29, sp
   1082c:	mov	x0, x1
   10830:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10834:	add	x1, x1, #0xca2
   10838:	add	x2, x29, #0x18
   1083c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10840:	cbz	w0, 108a8 <PyInit__testcapi@@Base+0x76ec>
   10844:	ldr	x0, [x29, #24]
   10848:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1084c:	add	x1, x1, #0xc9f
   10850:	bl	8cd0 <fopen64@plt>
   10854:	cbz	x0, 10898 <PyInit__testcapi@@Base+0x76dc>
   10858:	mov	x21, x0
   1085c:	bl	82b0 <PyMarshal_ReadLongFromFile@plt>
   10860:	mov	x19, x0
   10864:	mov	x0, x21
   10868:	bl	84b0 <ftell@plt>
   1086c:	mov	x20, x0
   10870:	mov	x0, x21
   10874:	bl	8640 <fclose@plt>
   10878:	bl	8980 <PyErr_Occurred@plt>
   1087c:	cbnz	x0, 108a8 <PyInit__testcapi@@Base+0x76ec>
   10880:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
   10884:	add	x0, x0, #0x21f
   10888:	mov	x1, x19
   1088c:	mov	x2, x20
   10890:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   10894:	b	108ac <PyInit__testcapi@@Base+0x76f0>
   10898:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   1089c:	ldr	x8, [x8, #3976]
   108a0:	ldr	x0, [x8]
   108a4:	bl	8410 <PyErr_SetFromErrno@plt>
   108a8:	mov	x0, xzr
   108ac:	ldp	x20, x19, [sp, #32]
   108b0:	ldr	x21, [sp, #16]
   108b4:	ldp	x29, x30, [sp], #48
   108b8:	ret
   108bc:	stp	x29, x30, [sp, #-48]!
   108c0:	str	x21, [sp, #16]
   108c4:	stp	x20, x19, [sp, #32]
   108c8:	mov	x29, sp
   108cc:	mov	x0, x1
   108d0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   108d4:	add	x1, x1, #0xcc2
   108d8:	add	x2, x29, #0x18
   108dc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   108e0:	cbz	w0, 10940 <PyInit__testcapi@@Base+0x7784>
   108e4:	ldr	x0, [x29, #24]
   108e8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   108ec:	add	x1, x1, #0xc9f
   108f0:	bl	8cd0 <fopen64@plt>
   108f4:	cbz	x0, 10930 <PyInit__testcapi@@Base+0x7774>
   108f8:	mov	x19, x0
   108fc:	bl	8280 <PyMarshal_ReadLastObjectFromFile@plt>
   10900:	mov	x20, x0
   10904:	mov	x0, x19
   10908:	bl	84b0 <ftell@plt>
   1090c:	mov	x21, x0
   10910:	mov	x0, x19
   10914:	bl	8640 <fclose@plt>
   10918:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   1091c:	add	x0, x0, #0x9fa
   10920:	mov	x1, x20
   10924:	mov	x2, x21
   10928:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   1092c:	b	10944 <PyInit__testcapi@@Base+0x7788>
   10930:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10934:	ldr	x8, [x8, #3976]
   10938:	ldr	x0, [x8]
   1093c:	bl	8410 <PyErr_SetFromErrno@plt>
   10940:	mov	x0, xzr
   10944:	ldp	x20, x19, [sp, #32]
   10948:	ldr	x21, [sp, #16]
   1094c:	ldp	x29, x30, [sp], #48
   10950:	ret
   10954:	stp	x29, x30, [sp, #-48]!
   10958:	str	x21, [sp, #16]
   1095c:	stp	x20, x19, [sp, #32]
   10960:	mov	x29, sp
   10964:	mov	x0, x1
   10968:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1096c:	add	x1, x1, #0xce9
   10970:	add	x2, x29, #0x18
   10974:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10978:	cbz	w0, 109d8 <PyInit__testcapi@@Base+0x781c>
   1097c:	ldr	x0, [x29, #24]
   10980:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10984:	add	x1, x1, #0xc9f
   10988:	bl	8cd0 <fopen64@plt>
   1098c:	cbz	x0, 109c8 <PyInit__testcapi@@Base+0x780c>
   10990:	mov	x19, x0
   10994:	bl	8d40 <PyMarshal_ReadObjectFromFile@plt>
   10998:	mov	x20, x0
   1099c:	mov	x0, x19
   109a0:	bl	84b0 <ftell@plt>
   109a4:	mov	x21, x0
   109a8:	mov	x0, x19
   109ac:	bl	8640 <fclose@plt>
   109b0:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   109b4:	add	x0, x0, #0x9fa
   109b8:	mov	x1, x20
   109bc:	mov	x2, x21
   109c0:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   109c4:	b	109dc <PyInit__testcapi@@Base+0x7820>
   109c8:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   109cc:	ldr	x8, [x8, #3976]
   109d0:	ldr	x0, [x8]
   109d4:	bl	8410 <PyErr_SetFromErrno@plt>
   109d8:	mov	x0, xzr
   109dc:	ldp	x20, x19, [sp, #32]
   109e0:	ldr	x21, [sp, #16]
   109e4:	ldp	x29, x30, [sp], #48
   109e8:	ret
   109ec:	stp	x29, x30, [sp, #-16]!
   109f0:	mov	x29, sp
   109f4:	bl	88c0 <PyErr_Clear@plt>
   109f8:	mov	x0, xzr
   109fc:	ldp	x29, x30, [sp], #16
   10a00:	ret
   10a04:	stp	x29, x30, [sp, #-16]!
   10a08:	mov	x29, sp
   10a0c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10a10:	ldr	x8, [x8, #3944]
   10a14:	ldr	x0, [x8]
   10a18:	bl	8750 <PyErr_SetNone@plt>
   10a1c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10a20:	ldr	x0, [x0, #4016]
   10a24:	ldr	x8, [x0]
   10a28:	add	x8, x8, #0x1
   10a2c:	str	x8, [x0]
   10a30:	ldp	x29, x30, [sp], #16
   10a34:	ret
   10a38:	sub	sp, sp, #0x20
   10a3c:	stp	x29, x30, [sp, #16]
   10a40:	add	x29, sp, #0x10
   10a44:	mov	x0, x1
   10a48:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10a4c:	add	x1, x1, #0x4eb
   10a50:	sub	x2, x29, #0x4
   10a54:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10a58:	cbz	w0, 10a6c <PyInit__testcapi@@Base+0x78b0>
   10a5c:	ldur	w0, [x29, #-4]
   10a60:	bl	8e00 <_PyTime_FromSeconds@plt>
   10a64:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
   10a68:	b	10a70 <PyInit__testcapi@@Base+0x78b4>
   10a6c:	mov	x0, xzr
   10a70:	ldp	x29, x30, [sp, #16]
   10a74:	add	sp, sp, #0x20
   10a78:	ret
   10a7c:	sub	sp, sp, #0x30
   10a80:	stp	x29, x30, [sp, #32]
   10a84:	add	x29, sp, #0x20
   10a88:	mov	x0, x1
   10a8c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10a90:	add	x1, x1, #0xd0b
   10a94:	sub	x2, x29, #0x8
   10a98:	sub	x3, x29, #0xc
   10a9c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10aa0:	cbz	w0, 10aec <PyInit__testcapi@@Base+0x7930>
   10aa4:	ldur	w2, [x29, #-12]
   10aa8:	cmp	w2, #0x4
   10aac:	b.cc	10acc <PyInit__testcapi@@Base+0x7910>  // b.lo, b.ul, b.last
   10ab0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10ab4:	ldr	x8, [x8, #3944]
   10ab8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10abc:	add	x1, x1, #0x9cd
   10ac0:	ldr	x0, [x8]
   10ac4:	bl	8670 <PyErr_SetString@plt>
   10ac8:	b	10aec <PyInit__testcapi@@Base+0x7930>
   10acc:	ldur	x1, [x29, #-8]
   10ad0:	add	x0, sp, #0x8
   10ad4:	bl	87b0 <_PyTime_FromSecondsObject@plt>
   10ad8:	cmn	w0, #0x1
   10adc:	b.eq	10aec <PyInit__testcapi@@Base+0x7930>  // b.none
   10ae0:	ldr	x0, [sp, #8]
   10ae4:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
   10ae8:	b	10af0 <PyInit__testcapi@@Base+0x7934>
   10aec:	mov	x0, xzr
   10af0:	ldp	x29, x30, [sp, #32]
   10af4:	add	sp, sp, #0x30
   10af8:	ret
   10afc:	sub	sp, sp, #0x20
   10b00:	stp	x29, x30, [sp, #16]
   10b04:	add	x29, sp, #0x10
   10b08:	mov	x0, x1
   10b0c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10b10:	add	x1, x1, #0xd66
   10b14:	add	x2, sp, #0x8
   10b18:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10b1c:	cbz	w0, 10b40 <PyInit__testcapi@@Base+0x7984>
   10b20:	ldr	x1, [sp, #8]
   10b24:	mov	x0, sp
   10b28:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   10b2c:	tbnz	w0, #31, 10b40 <PyInit__testcapi@@Base+0x7984>
   10b30:	ldr	x0, [sp]
   10b34:	bl	8690 <_PyTime_AsSecondsDouble@plt>
   10b38:	bl	8800 <PyFloat_FromDouble@plt>
   10b3c:	b	10b44 <PyInit__testcapi@@Base+0x7988>
   10b40:	mov	x0, xzr
   10b44:	ldp	x29, x30, [sp, #16]
   10b48:	add	sp, sp, #0x20
   10b4c:	ret
   10b50:	sub	sp, sp, #0x40
   10b54:	stp	x29, x30, [sp, #48]
   10b58:	add	x29, sp, #0x30
   10b5c:	mov	x0, x1
   10b60:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10b64:	add	x1, x1, #0xd0b
   10b68:	sub	x2, x29, #0x8
   10b6c:	sub	x3, x29, #0xc
   10b70:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10b74:	cbz	w0, 10be8 <PyInit__testcapi@@Base+0x7a2c>
   10b78:	ldur	w8, [x29, #-12]
   10b7c:	cmp	w8, #0x4
   10b80:	b.cc	10ba0 <PyInit__testcapi@@Base+0x79e4>  // b.lo, b.ul, b.last
   10b84:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10b88:	ldr	x8, [x8, #3944]
   10b8c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10b90:	add	x1, x1, #0x9cd
   10b94:	ldr	x0, [x8]
   10b98:	bl	8670 <PyErr_SetString@plt>
   10b9c:	b	10be8 <PyInit__testcapi@@Base+0x7a2c>
   10ba0:	ldur	x1, [x29, #-8]
   10ba4:	add	x0, sp, #0x18
   10ba8:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   10bac:	tbnz	w0, #31, 10be8 <PyInit__testcapi@@Base+0x7a2c>
   10bb0:	ldr	x0, [sp, #24]
   10bb4:	ldur	w2, [x29, #-12]
   10bb8:	add	x1, sp, #0x8
   10bbc:	bl	8dd0 <_PyTime_AsTimeval@plt>
   10bc0:	tbnz	w0, #31, 10be8 <PyInit__testcapi@@Base+0x7a2c>
   10bc4:	ldr	x0, [sp, #8]
   10bc8:	bl	8ef0 <PyLong_FromLongLong@plt>
   10bcc:	cbz	x0, 10bec <PyInit__testcapi@@Base+0x7a30>
   10bd0:	ldr	x2, [sp, #16]
   10bd4:	mov	x1, x0
   10bd8:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   10bdc:	add	x0, x0, #0x9fa
   10be0:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   10be4:	b	10bec <PyInit__testcapi@@Base+0x7a30>
   10be8:	mov	x0, xzr
   10bec:	ldp	x29, x30, [sp, #48]
   10bf0:	add	sp, sp, #0x40
   10bf4:	ret
   10bf8:	sub	sp, sp, #0x30
   10bfc:	stp	x29, x30, [sp, #32]
   10c00:	add	x29, sp, #0x20
   10c04:	mov	x0, x1
   10c08:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10c0c:	add	x1, x1, #0xd66
   10c10:	sub	x2, x29, #0x8
   10c14:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10c18:	cbz	w0, 10c60 <PyInit__testcapi@@Base+0x7aa4>
   10c1c:	ldur	x1, [x29, #-8]
   10c20:	add	x0, sp, #0x10
   10c24:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   10c28:	tbnz	w0, #31, 10c60 <PyInit__testcapi@@Base+0x7aa4>
   10c2c:	ldr	x0, [sp, #16]
   10c30:	mov	x1, sp
   10c34:	bl	8a40 <_PyTime_AsTimespec@plt>
   10c38:	cmn	w0, #0x1
   10c3c:	b.eq	10c60 <PyInit__testcapi@@Base+0x7aa4>  // b.none
   10c40:	ldr	x0, [sp]
   10c44:	bl	9000 <_PyLong_FromTime_t@plt>
   10c48:	ldr	x2, [sp, #8]
   10c4c:	mov	x1, x0
   10c50:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   10c54:	add	x0, x0, #0x9fa
   10c58:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   10c5c:	b	10c64 <PyInit__testcapi@@Base+0x7aa8>
   10c60:	mov	x0, xzr
   10c64:	ldp	x29, x30, [sp, #32]
   10c68:	add	sp, sp, #0x30
   10c6c:	ret
   10c70:	sub	sp, sp, #0x30
   10c74:	stp	x29, x30, [sp, #32]
   10c78:	add	x29, sp, #0x20
   10c7c:	mov	x0, x1
   10c80:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10c84:	add	x1, x1, #0xd0b
   10c88:	sub	x2, x29, #0x8
   10c8c:	sub	x3, x29, #0xc
   10c90:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10c94:	cbz	w0, 10ccc <PyInit__testcapi@@Base+0x7b10>
   10c98:	ldur	x1, [x29, #-8]
   10c9c:	add	x0, sp, #0x8
   10ca0:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   10ca4:	tbnz	w0, #31, 10ccc <PyInit__testcapi@@Base+0x7b10>
   10ca8:	ldur	w1, [x29, #-12]
   10cac:	cmp	w1, #0x4
   10cb0:	b.cc	10cd4 <PyInit__testcapi@@Base+0x7b18>  // b.lo, b.ul, b.last
   10cb4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10cb8:	ldr	x8, [x8, #3944]
   10cbc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10cc0:	add	x1, x1, #0x9cd
   10cc4:	ldr	x0, [x8]
   10cc8:	bl	8670 <PyErr_SetString@plt>
   10ccc:	mov	x0, xzr
   10cd0:	b	10ce0 <PyInit__testcapi@@Base+0x7b24>
   10cd4:	ldr	x0, [sp, #8]
   10cd8:	bl	87d0 <_PyTime_AsMilliseconds@plt>
   10cdc:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
   10ce0:	ldp	x29, x30, [sp, #32]
   10ce4:	add	sp, sp, #0x30
   10ce8:	ret
   10cec:	sub	sp, sp, #0x30
   10cf0:	stp	x29, x30, [sp, #32]
   10cf4:	add	x29, sp, #0x20
   10cf8:	mov	x0, x1
   10cfc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10d00:	add	x1, x1, #0xd0b
   10d04:	sub	x2, x29, #0x8
   10d08:	sub	x3, x29, #0xc
   10d0c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10d10:	cbz	w0, 10d48 <PyInit__testcapi@@Base+0x7b8c>
   10d14:	ldur	x1, [x29, #-8]
   10d18:	add	x0, sp, #0x8
   10d1c:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   10d20:	tbnz	w0, #31, 10d48 <PyInit__testcapi@@Base+0x7b8c>
   10d24:	ldur	w1, [x29, #-12]
   10d28:	cmp	w1, #0x4
   10d2c:	b.cc	10d50 <PyInit__testcapi@@Base+0x7b94>  // b.lo, b.ul, b.last
   10d30:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10d34:	ldr	x8, [x8, #3944]
   10d38:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10d3c:	add	x1, x1, #0x9cd
   10d40:	ldr	x0, [x8]
   10d44:	bl	8670 <PyErr_SetString@plt>
   10d48:	mov	x0, xzr
   10d4c:	b	10d5c <PyInit__testcapi@@Base+0x7ba0>
   10d50:	ldr	x0, [sp, #8]
   10d54:	bl	8d70 <_PyTime_AsMicroseconds@plt>
   10d58:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
   10d5c:	ldp	x29, x30, [sp, #32]
   10d60:	add	sp, sp, #0x30
   10d64:	ret
   10d68:	stp	x29, x30, [sp, #-16]!
   10d6c:	mov	x29, sp
   10d70:	bl	8940 <PyThreadState_Get@plt>
   10d74:	ldr	w8, [x0, #32]
   10d78:	sub	w8, w8, #0x1
   10d7c:	sxtw	x0, w8
   10d80:	ldp	x29, x30, [sp], #16
   10d84:	b	8840 <PyLong_FromLong@plt>
   10d88:	stp	x29, x30, [sp, #-16]!
   10d8c:	mov	x29, sp
   10d90:	mov	w0, #0x10                  	// #16
   10d94:	bl	8fc0 <PyMem_Malloc@plt>
   10d98:	cbz	x0, 10dc0 <PyInit__testcapi@@Base+0x7c04>
   10d9c:	mov	w8, #0x78                  	// #120
   10da0:	strb	w8, [x0, #16]
   10da4:	bl	83d0 <PyMem_Free@plt>
   10da8:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10dac:	ldr	x0, [x0, #4016]
   10db0:	ldr	x8, [x0]
   10db4:	add	x8, x8, #0x1
   10db8:	str	x8, [x0]
   10dbc:	b	10dc8 <PyInit__testcapi@@Base+0x7c0c>
   10dc0:	bl	8570 <PyErr_NoMemory@plt>
   10dc4:	mov	x0, xzr
   10dc8:	ldp	x29, x30, [sp], #16
   10dcc:	ret
   10dd0:	stp	x29, x30, [sp, #-16]!
   10dd4:	mov	x29, sp
   10dd8:	mov	w0, #0x10                  	// #16
   10ddc:	bl	8fc0 <PyMem_Malloc@plt>
   10de0:	bl	8a10 <PyMem_RawFree@plt>
   10de4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10de8:	ldr	x0, [x0, #4016]
   10dec:	ldr	x8, [x0]
   10df0:	add	x8, x8, #0x1
   10df4:	str	x8, [x0]
   10df8:	ldp	x29, x30, [sp], #16
   10dfc:	ret
   10e00:	stp	x29, x30, [sp, #-32]!
   10e04:	stp	x20, x19, [sp, #16]
   10e08:	mov	x29, sp
   10e0c:	bl	8d50 <PyEval_SaveThread@plt>
   10e10:	mov	x19, x0
   10e14:	mov	w0, #0xa                   	// #10
   10e18:	bl	8fc0 <PyMem_Malloc@plt>
   10e1c:	mov	x20, x0
   10e20:	mov	x0, x19
   10e24:	bl	83b0 <PyEval_RestoreThread@plt>
   10e28:	mov	x0, x20
   10e2c:	bl	83d0 <PyMem_Free@plt>
   10e30:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10e34:	ldr	x0, [x0, #4016]
   10e38:	ldp	x20, x19, [sp, #16]
   10e3c:	ldr	x8, [x0]
   10e40:	add	x8, x8, #0x1
   10e44:	str	x8, [x0]
   10e48:	ldp	x29, x30, [sp], #32
   10e4c:	ret
   10e50:	stp	x29, x30, [sp, #-16]!
   10e54:	mov	x29, sp
   10e58:	bl	8de0 <_PyMem_GetCurrentAllocatorName@plt>
   10e5c:	cbz	x0, 10e68 <PyInit__testcapi@@Base+0x7cac>
   10e60:	ldp	x29, x30, [sp], #16
   10e64:	b	8d10 <PyUnicode_FromString@plt>
   10e68:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10e6c:	ldr	x8, [x8, #3928]
   10e70:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10e74:	add	x1, x1, #0xd0e
   10e78:	ldr	x0, [x8]
   10e7c:	bl	8670 <PyErr_SetString@plt>
   10e80:	mov	x0, xzr
   10e84:	ldp	x29, x30, [sp], #16
   10e88:	ret
   10e8c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
   10e90:	add	x0, x0, #0xc2
   10e94:	mov	x1, xzr
   10e98:	b	12600 <PyInit__testcapi@@Base+0x9444>
   10e9c:	stp	x29, x30, [sp, #-16]!
   10ea0:	mov	x29, sp
   10ea4:	mov	w0, #0x10                  	// #16
   10ea8:	bl	86c0 <PyObject_Malloc@plt>
   10eac:	cbz	x0, 10ecc <PyInit__testcapi@@Base+0x7d10>
   10eb0:	mov	x1, x0
   10eb4:	mov	w8, #0x1                   	// #1
   10eb8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
   10ebc:	add	x0, x0, #0xdf
   10ec0:	str	x8, [x1]
   10ec4:	ldp	x29, x30, [sp], #16
   10ec8:	b	12600 <PyInit__testcapi@@Base+0x9444>
   10ecc:	ldp	x29, x30, [sp], #16
   10ed0:	ret
   10ed4:	stp	x29, x30, [sp, #-16]!
   10ed8:	mov	x29, sp
   10edc:	mov	w0, #0x8                   	// #8
   10ee0:	bl	86c0 <PyObject_Malloc@plt>
   10ee4:	cbz	x0, 10f04 <PyInit__testcapi@@Base+0x7d48>
   10ee8:	mov	x1, x0
   10eec:	mov	w8, #0x1                   	// #1
   10ef0:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
   10ef4:	add	x0, x0, #0x105
   10ef8:	str	x8, [x1]
   10efc:	ldp	x29, x30, [sp], #16
   10f00:	b	12600 <PyInit__testcapi@@Base+0x9444>
   10f04:	ldp	x29, x30, [sp], #16
   10f08:	ret
   10f0c:	stp	x29, x30, [sp, #-32]!
   10f10:	str	x19, [sp, #16]
   10f14:	mov	x29, sp
   10f18:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10f1c:	ldr	x8, [x8, #4048]
   10f20:	ldr	x9, [x8, #8]
   10f24:	ldrb	w10, [x9, #169]
   10f28:	tbz	w10, #3, 10f68 <PyInit__testcapi@@Base+0x7dac>
   10f2c:	ldr	x9, [x9, #56]
   10f30:	ldr	x8, [x8, x9]
   10f34:	cbz	x8, 10f68 <PyInit__testcapi@@Base+0x7dac>
   10f38:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10f3c:	ldr	x19, [x19, #4048]
   10f40:	mov	x1, xzr
   10f44:	mov	x2, xzr
   10f48:	mov	x3, xzr
   10f4c:	mov	x0, x19
   10f50:	blr	x8
   10f54:	mov	x1, x0
   10f58:	mov	x0, x19
   10f5c:	mov	x2, xzr
   10f60:	bl	8a80 <_Py_CheckFunctionResult@plt>
   10f64:	b	10f80 <PyInit__testcapi@@Base+0x7dc4>
   10f68:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10f6c:	ldr	x0, [x0, #4048]
   10f70:	mov	x1, xzr
   10f74:	mov	x2, xzr
   10f78:	mov	x3, xzr
   10f7c:	bl	8f00 <_PyObject_MakeTpCall@plt>
   10f80:	mov	x19, x0
   10f84:	cbz	x0, 10fb8 <PyInit__testcapi@@Base+0x7dfc>
   10f88:	ldr	x8, [x19, #8]
   10f8c:	mov	x0, x19
   10f90:	ldr	x8, [x8, #48]
   10f94:	blr	x8
   10f98:	mov	w8, #0x1                   	// #1
   10f9c:	str	x8, [x19]
   10fa0:	mov	x1, x19
   10fa4:	ldr	x19, [sp, #16]
   10fa8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
   10fac:	add	x0, x0, #0x12d
   10fb0:	ldp	x29, x30, [sp], #32
   10fb4:	b	12600 <PyInit__testcapi@@Base+0x9444>
   10fb8:	ldr	x19, [sp, #16]
   10fbc:	mov	x0, xzr
   10fc0:	ldp	x29, x30, [sp], #32
   10fc4:	ret
   10fc8:	stp	x29, x30, [sp, #-32]!
   10fcc:	stp	x20, x19, [sp, #16]
   10fd0:	mov	x29, sp
   10fd4:	bl	8d50 <PyEval_SaveThread@plt>
   10fd8:	mov	x19, x0
   10fdc:	mov	w0, #0xa                   	// #10
   10fe0:	bl	86c0 <PyObject_Malloc@plt>
   10fe4:	mov	x20, x0
   10fe8:	mov	x0, x19
   10fec:	bl	83b0 <PyEval_RestoreThread@plt>
   10ff0:	mov	x0, x20
   10ff4:	bl	87c0 <PyObject_Free@plt>
   10ff8:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10ffc:	ldr	x0, [x0, #4016]
   11000:	ldp	x20, x19, [sp, #16]
   11004:	ldr	x8, [x0]
   11008:	add	x8, x8, #0x1
   1100c:	str	x8, [x0]
   11010:	ldp	x29, x30, [sp], #32
   11014:	ret
   11018:	sub	sp, sp, #0x40
   1101c:	stp	x29, x30, [sp, #32]
   11020:	stp	x20, x19, [sp, #48]
   11024:	add	x29, sp, #0x20
   11028:	mov	x0, x1
   1102c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11030:	add	x1, x1, #0xd45
   11034:	sub	x2, x29, #0x4
   11038:	add	x3, sp, #0x10
   1103c:	add	x4, sp, #0x8
   11040:	add	x5, sp, #0x4
   11044:	str	wzr, [sp, #4]
   11048:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1104c:	cbz	w0, 11064 <PyInit__testcapi@@Base+0x7ea8>
   11050:	ldr	x0, [sp, #16]
   11054:	bl	87e0 <PyLong_AsVoidPtr@plt>
   11058:	mov	x19, x0
   1105c:	bl	8980 <PyErr_Occurred@plt>
   11060:	cbz	x0, 11078 <PyInit__testcapi@@Base+0x7ebc>
   11064:	mov	x0, xzr
   11068:	ldp	x20, x19, [sp, #48]
   1106c:	ldp	x29, x30, [sp, #32]
   11070:	add	sp, sp, #0x40
   11074:	ret
   11078:	ldr	w8, [sp, #4]
   1107c:	cbz	w8, 110c4 <PyInit__testcapi@@Base+0x7f08>
   11080:	bl	8d50 <PyEval_SaveThread@plt>
   11084:	ldur	w8, [x29, #-4]
   11088:	ldr	x2, [sp, #8]
   1108c:	mov	x20, x0
   11090:	mov	x1, x19
   11094:	mov	w0, w8
   11098:	bl	8730 <PyTraceMalloc_Track@plt>
   1109c:	mov	w19, w0
   110a0:	mov	x0, x20
   110a4:	bl	83b0 <PyEval_RestoreThread@plt>
   110a8:	tbnz	w19, #31, 110dc <PyInit__testcapi@@Base+0x7f20>
   110ac:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   110b0:	ldr	x0, [x0, #4016]
   110b4:	ldr	x8, [x0]
   110b8:	add	x8, x8, #0x1
   110bc:	str	x8, [x0]
   110c0:	b	11068 <PyInit__testcapi@@Base+0x7eac>
   110c4:	ldur	w0, [x29, #-4]
   110c8:	ldr	x2, [sp, #8]
   110cc:	mov	x1, x19
   110d0:	bl	8730 <PyTraceMalloc_Track@plt>
   110d4:	mov	w19, w0
   110d8:	tbz	w19, #31, 110ac <PyInit__testcapi@@Base+0x7ef0>
   110dc:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   110e0:	ldr	x8, [x8, #3928]
   110e4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   110e8:	add	x1, x1, #0xd4b
   110ec:	ldr	x0, [x8]
   110f0:	bl	8670 <PyErr_SetString@plt>
   110f4:	b	11064 <PyInit__testcapi@@Base+0x7ea8>
   110f8:	sub	sp, sp, #0x30
   110fc:	stp	x29, x30, [sp, #16]
   11100:	str	x19, [sp, #32]
   11104:	add	x29, sp, #0x10
   11108:	mov	x0, x1
   1110c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11110:	add	x1, x1, #0xd65
   11114:	add	x2, x29, #0x1c
   11118:	add	x3, sp, #0x8
   1111c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11120:	cbz	w0, 11138 <PyInit__testcapi@@Base+0x7f7c>
   11124:	ldr	x0, [sp, #8]
   11128:	bl	87e0 <PyLong_AsVoidPtr@plt>
   1112c:	mov	x19, x0
   11130:	bl	8980 <PyErr_Occurred@plt>
   11134:	cbz	x0, 1114c <PyInit__testcapi@@Base+0x7f90>
   11138:	mov	x0, xzr
   1113c:	ldr	x19, [sp, #32]
   11140:	ldp	x29, x30, [sp, #16]
   11144:	add	sp, sp, #0x30
   11148:	ret
   1114c:	ldr	w0, [x29, #28]
   11150:	mov	x1, x19
   11154:	bl	8310 <PyTraceMalloc_Untrack@plt>
   11158:	tbnz	w0, #31, 11174 <PyInit__testcapi@@Base+0x7fb8>
   1115c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11160:	ldr	x0, [x0, #4016]
   11164:	ldr	x8, [x0]
   11168:	add	x8, x8, #0x1
   1116c:	str	x8, [x0]
   11170:	b	1113c <PyInit__testcapi@@Base+0x7f80>
   11174:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11178:	ldr	x8, [x8, #3928]
   1117c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11180:	add	x1, x1, #0xd68
   11184:	ldr	x0, [x8]
   11188:	bl	8670 <PyErr_SetString@plt>
   1118c:	b	11138 <PyInit__testcapi@@Base+0x7f7c>
   11190:	sub	sp, sp, #0x30
   11194:	stp	x29, x30, [sp, #16]
   11198:	str	x19, [sp, #32]
   1119c:	add	x29, sp, #0x10
   111a0:	mov	x0, x1
   111a4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   111a8:	add	x1, x1, #0xd65
   111ac:	add	x2, x29, #0x1c
   111b0:	add	x3, sp, #0x8
   111b4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   111b8:	cbz	w0, 111d0 <PyInit__testcapi@@Base+0x8014>
   111bc:	ldr	x0, [sp, #8]
   111c0:	bl	87e0 <PyLong_AsVoidPtr@plt>
   111c4:	mov	x19, x0
   111c8:	bl	8980 <PyErr_Occurred@plt>
   111cc:	cbz	x0, 111d8 <PyInit__testcapi@@Base+0x801c>
   111d0:	mov	x0, xzr
   111d4:	b	111e4 <PyInit__testcapi@@Base+0x8028>
   111d8:	ldr	w0, [x29, #28]
   111dc:	mov	x1, x19
   111e0:	bl	8b20 <_PyTraceMalloc_GetTraceback@plt>
   111e4:	ldr	x19, [sp, #32]
   111e8:	ldp	x29, x30, [sp, #16]
   111ec:	add	sp, sp, #0x30
   111f0:	ret
   111f4:	sub	sp, sp, #0x20
   111f8:	stp	x29, x30, [sp, #16]
   111fc:	add	x29, sp, #0x10
   11200:	adrp	x2, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11204:	ldr	x2, [x2, #4040]
   11208:	mov	x0, x1
   1120c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11210:	add	x1, x1, #0xd84
   11214:	add	x3, sp, #0x8
   11218:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1121c:	cbz	w0, 11230 <PyInit__testcapi@@Base+0x8074>
   11220:	ldr	x8, [sp, #8]
   11224:	ldr	x0, [x8, #24]
   11228:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
   1122c:	b	11234 <PyInit__testcapi@@Base+0x8078>
   11230:	mov	x0, xzr
   11234:	ldp	x29, x30, [sp, #16]
   11238:	add	sp, sp, #0x20
   1123c:	ret
   11240:	sub	sp, sp, #0x20
   11244:	stp	x29, x30, [sp, #16]
   11248:	add	x29, sp, #0x10
   1124c:	adrp	x2, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11250:	ldr	x2, [x2, #3960]
   11254:	mov	x0, x1
   11258:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1125c:	add	x1, x1, #0xd84
   11260:	add	x3, sp, #0x8
   11264:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11268:	cbz	w0, 11288 <PyInit__testcapi@@Base+0x80cc>
   1126c:	mov	w0, #0x2                   	// #2
   11270:	bl	8330 <raise@plt>
   11274:	adrp	x1, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11278:	ldr	x0, [sp, #8]
   1127c:	ldr	x1, [x1, #4016]
   11280:	bl	8620 <_PyGen_Send@plt>
   11284:	b	1128c <PyInit__testcapi@@Base+0x80d0>
   11288:	mov	x0, xzr
   1128c:	ldp	x29, x30, [sp, #16]
   11290:	add	sp, sp, #0x20
   11294:	ret
   11298:	sub	sp, sp, #0x30
   1129c:	stp	x29, x30, [sp, #16]
   112a0:	str	x19, [sp, #32]
   112a4:	add	x29, sp, #0x10
   112a8:	mov	x0, x1
   112ac:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   112b0:	add	x1, x1, #0xda5
   112b4:	add	x2, x29, #0x18
   112b8:	add	x3, sp, #0x8
   112bc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   112c0:	cbz	w0, 112fc <PyInit__testcapi@@Base+0x8140>
   112c4:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
   112c8:	ldr	x8, [sp, #8]
   112cc:	ldr	x9, [x9, #4016]
   112d0:	cmp	x8, x9
   112d4:	b.eq	11304 <PyInit__testcapi@@Base+0x8148>  // b.none
   112d8:	ldr	x9, [x8, #8]
   112dc:	ldrb	w9, [x9, #171]
   112e0:	tbnz	w9, #2, 11310 <PyInit__testcapi@@Base+0x8154>
   112e4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   112e8:	ldr	x8, [x8, #3952]
   112ec:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   112f0:	add	x1, x1, #0xd87
   112f4:	ldr	x0, [x8]
   112f8:	bl	8670 <PyErr_SetString@plt>
   112fc:	mov	x0, xzr
   11300:	b	11364 <PyInit__testcapi@@Base+0x81a8>
   11304:	mov	x1, xzr
   11308:	mov	x2, xzr
   1130c:	b	11318 <PyInit__testcapi@@Base+0x815c>
   11310:	ldr	x2, [x8, #16]
   11314:	add	x1, x8, #0x18
   11318:	ldr	x19, [x29, #24]
   1131c:	ldr	x8, [x19, #8]
   11320:	ldrb	w9, [x8, #169]
   11324:	tbz	w9, #3, 11354 <PyInit__testcapi@@Base+0x8198>
   11328:	ldr	x8, [x8, #56]
   1132c:	ldr	x8, [x19, x8]
   11330:	cbz	x8, 11354 <PyInit__testcapi@@Base+0x8198>
   11334:	mov	x0, x19
   11338:	mov	x3, xzr
   1133c:	blr	x8
   11340:	mov	x1, x0
   11344:	mov	x0, x19
   11348:	mov	x2, xzr
   1134c:	bl	8a80 <_Py_CheckFunctionResult@plt>
   11350:	b	11364 <PyInit__testcapi@@Base+0x81a8>
   11354:	and	x2, x2, #0x7fffffffffffffff
   11358:	mov	x0, x19
   1135c:	mov	x3, xzr
   11360:	bl	8f00 <_PyObject_MakeTpCall@plt>
   11364:	ldr	x19, [sp, #32]
   11368:	ldp	x29, x30, [sp, #16]
   1136c:	add	sp, sp, #0x30
   11370:	ret
   11374:	sub	sp, sp, #0x30
   11378:	stp	x29, x30, [sp, #32]
   1137c:	add	x29, sp, #0x20
   11380:	mov	x0, x1
   11384:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11388:	add	x1, x1, #0xda4
   1138c:	sub	x2, x29, #0x8
   11390:	add	x3, sp, #0x10
   11394:	add	x4, sp, #0x8
   11398:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1139c:	cbz	w0, 11418 <PyInit__testcapi@@Base+0x825c>
   113a0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   113a4:	ldr	x9, [sp, #16]
   113a8:	ldr	x8, [x8, #4016]
   113ac:	cmp	x9, x8
   113b0:	b.eq	113d4 <PyInit__testcapi@@Base+0x8218>  // b.none
   113b4:	ldr	x10, [x9, #8]
   113b8:	ldrb	w10, [x10, #171]
   113bc:	tbnz	w10, #2, 113e0 <PyInit__testcapi@@Base+0x8224>
   113c0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   113c4:	ldr	x8, [x8, #3952]
   113c8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   113cc:	add	x1, x1, #0xd87
   113d0:	b	11410 <PyInit__testcapi@@Base+0x8254>
   113d4:	mov	x1, xzr
   113d8:	mov	x2, xzr
   113dc:	b	113e8 <PyInit__testcapi@@Base+0x822c>
   113e0:	ldr	x2, [x9, #16]
   113e4:	add	x1, x9, #0x18
   113e8:	ldr	x3, [sp, #8]
   113ec:	cmp	x3, x8
   113f0:	b.eq	11420 <PyInit__testcapi@@Base+0x8264>  // b.none
   113f4:	ldr	x8, [x3, #8]
   113f8:	ldrb	w8, [x8, #171]
   113fc:	tbnz	w8, #5, 11428 <PyInit__testcapi@@Base+0x826c>
   11400:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11404:	ldr	x8, [x8, #3952]
   11408:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1140c:	add	x1, x1, #0xda8
   11410:	ldr	x0, [x8]
   11414:	bl	8670 <PyErr_SetString@plt>
   11418:	mov	x0, xzr
   1141c:	b	11430 <PyInit__testcapi@@Base+0x8274>
   11420:	mov	x3, xzr
   11424:	str	xzr, [sp, #8]
   11428:	ldur	x0, [x29, #-8]
   1142c:	bl	8680 <_PyObject_FastCallDict@plt>
   11430:	ldp	x29, x30, [sp, #32]
   11434:	add	sp, sp, #0x30
   11438:	ret
   1143c:	sub	sp, sp, #0x30
   11440:	stp	x29, x30, [sp, #16]
   11444:	str	x19, [sp, #32]
   11448:	add	x29, sp, #0x10
   1144c:	mov	x0, x1
   11450:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11454:	add	x1, x1, #0xda4
   11458:	add	x2, x29, #0x18
   1145c:	add	x3, sp, #0x8
   11460:	mov	x4, sp
   11464:	str	xzr, [sp]
   11468:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1146c:	cbz	w0, 11514 <PyInit__testcapi@@Base+0x8358>
   11470:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11474:	ldr	x9, [sp, #8]
   11478:	ldr	x8, [x8, #4016]
   1147c:	cmp	x9, x8
   11480:	b.eq	114a4 <PyInit__testcapi@@Base+0x82e8>  // b.none
   11484:	ldr	x10, [x9, #8]
   11488:	ldrb	w10, [x10, #171]
   1148c:	tbnz	w10, #2, 114b0 <PyInit__testcapi@@Base+0x82f4>
   11490:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11494:	ldr	x8, [x8, #3952]
   11498:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1149c:	add	x1, x1, #0xd87
   114a0:	b	1150c <PyInit__testcapi@@Base+0x8350>
   114a4:	mov	x1, xzr
   114a8:	mov	x2, xzr
   114ac:	b	114b8 <PyInit__testcapi@@Base+0x82fc>
   114b0:	ldr	x2, [x9, #16]
   114b4:	add	x1, x9, #0x18
   114b8:	ldr	x3, [sp]
   114bc:	cmp	x3, x8
   114c0:	b.eq	114e4 <PyInit__testcapi@@Base+0x8328>  // b.none
   114c4:	ldr	x8, [x3, #8]
   114c8:	ldrb	w8, [x8, #171]
   114cc:	tbnz	w8, #2, 114f0 <PyInit__testcapi@@Base+0x8334>
   114d0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   114d4:	ldr	x8, [x8, #3952]
   114d8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   114dc:	add	x1, x1, #0xde0
   114e0:	b	1150c <PyInit__testcapi@@Base+0x8350>
   114e4:	mov	x3, xzr
   114e8:	str	xzr, [sp]
   114ec:	b	11528 <PyInit__testcapi@@Base+0x836c>
   114f0:	ldr	x8, [x3, #16]
   114f4:	subs	x2, x2, x8
   114f8:	b.ge	11528 <PyInit__testcapi@@Base+0x836c>  // b.tcont
   114fc:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11500:	ldr	x8, [x8, #3944]
   11504:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11508:	add	x1, x1, #0xdc7
   1150c:	ldr	x0, [x8]
   11510:	bl	8670 <PyErr_SetString@plt>
   11514:	mov	x0, xzr
   11518:	ldr	x19, [sp, #32]
   1151c:	ldp	x29, x30, [sp, #16]
   11520:	add	sp, sp, #0x30
   11524:	ret
   11528:	ldr	x19, [x29, #24]
   1152c:	ldr	x8, [x19, #8]
   11530:	ldrb	w9, [x8, #169]
   11534:	tbz	w9, #3, 11560 <PyInit__testcapi@@Base+0x83a4>
   11538:	ldr	x8, [x8, #56]
   1153c:	ldr	x8, [x19, x8]
   11540:	cbz	x8, 11560 <PyInit__testcapi@@Base+0x83a4>
   11544:	mov	x0, x19
   11548:	blr	x8
   1154c:	mov	x1, x0
   11550:	mov	x0, x19
   11554:	mov	x2, xzr
   11558:	bl	8a80 <_Py_CheckFunctionResult@plt>
   1155c:	b	11518 <PyInit__testcapi@@Base+0x835c>
   11560:	and	x2, x2, #0x7fffffffffffffff
   11564:	mov	x0, x19
   11568:	bl	8f00 <_PyObject_MakeTpCall@plt>
   1156c:	b	11518 <PyInit__testcapi@@Base+0x835c>
   11570:	sub	sp, sp, #0x30
   11574:	stp	x29, x30, [sp, #32]
   11578:	add	x29, sp, #0x20
   1157c:	mov	x0, x1
   11580:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11584:	add	x1, x1, #0xe00
   11588:	sub	x2, x29, #0x8
   1158c:	add	x3, sp, #0x10
   11590:	add	x4, sp, #0x8
   11594:	str	xzr, [sp, #8]
   11598:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1159c:	cbz	w0, 115f0 <PyInit__testcapi@@Base+0x8434>
   115a0:	ldr	x1, [sp, #16]
   115a4:	ldr	x8, [x1, #8]
   115a8:	ldrb	w8, [x8, #171]
   115ac:	tbnz	w8, #2, 115c4 <PyInit__testcapi@@Base+0x8408>
   115b0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   115b4:	ldr	x8, [x8, #3952]
   115b8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   115bc:	add	x1, x1, #0xe05
   115c0:	b	115e8 <PyInit__testcapi@@Base+0x842c>
   115c4:	ldr	x2, [sp, #8]
   115c8:	cbz	x2, 115f8 <PyInit__testcapi@@Base+0x843c>
   115cc:	ldr	x8, [x2, #8]
   115d0:	ldrb	w8, [x8, #171]
   115d4:	tbnz	w8, #5, 115f8 <PyInit__testcapi@@Base+0x843c>
   115d8:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   115dc:	ldr	x8, [x8, #3952]
   115e0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   115e4:	add	x1, x1, #0xe1a
   115e8:	ldr	x0, [x8]
   115ec:	bl	8670 <PyErr_SetString@plt>
   115f0:	mov	x0, xzr
   115f4:	b	11600 <PyInit__testcapi@@Base+0x8444>
   115f8:	ldur	x0, [x29, #-8]
   115fc:	bl	8bb0 <PyVectorcall_Call@plt>
   11600:	ldp	x29, x30, [sp, #32]
   11604:	add	sp, sp, #0x30
   11608:	ret
   1160c:	sub	sp, sp, #0x20
   11610:	stp	x29, x30, [sp, #16]
   11614:	add	x29, sp, #0x10
   11618:	mov	w8, #0x5                   	// #5
   1161c:	sub	x0, x29, #0x4
   11620:	stur	w8, [x29, #-4]
   11624:	bl	8880 <PyLong_FromVoidPtr@plt>
   11628:	ldp	x29, x30, [sp, #16]
   1162c:	add	sp, sp, #0x20
   11630:	ret
   11634:	sub	sp, sp, #0x20
   11638:	stp	x29, x30, [sp, #16]
   1163c:	add	x29, sp, #0x10
   11640:	mov	x0, x1
   11644:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11648:	add	x1, x1, #0x4eb
   1164c:	sub	x2, x29, #0x4
   11650:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11654:	cbz	w0, 11670 <PyInit__testcapi@@Base+0x84b4>
   11658:	ldur	w8, [x29, #-4]
   1165c:	mov	w9, #0x7f                  	// #127
   11660:	bfi	w9, w8, #8, #24
   11664:	sxtw	x0, w9
   11668:	bl	8840 <PyLong_FromLong@plt>
   1166c:	b	11674 <PyInit__testcapi@@Base+0x84b8>
   11670:	mov	x0, xzr
   11674:	ldp	x29, x30, [sp, #16]
   11678:	add	sp, sp, #0x20
   1167c:	ret
   11680:	mov	x0, x1
   11684:	b	8530 <PyMapping_Keys@plt>
   11688:	mov	x0, x1
   1168c:	b	8dc0 <PyMapping_Values@plt>
   11690:	mov	x0, x1
   11694:	b	8290 <PyMapping_Items@plt>
   11698:	stp	x29, x30, [sp, #-32]!
   1169c:	str	x19, [sp, #16]
   116a0:	mov	x29, sp
   116a4:	add	x0, x29, #0x18
   116a8:	str	xzr, [x29, #24]
   116ac:	bl	8520 <PyThread_tss_is_created@plt>
   116b0:	cbz	w0, 116dc <PyInit__testcapi@@Base+0x8520>
   116b4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   116b8:	ldr	x0, [x8, #3520]
   116bc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   116c0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   116c4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
   116c8:	add	x1, x1, #0x842
   116cc:	add	x2, x2, #0x271
   116d0:	add	x3, x3, #0xe30
   116d4:	bl	8e60 <PyErr_Format@plt>
   116d8:	b	11700 <PyInit__testcapi@@Base+0x8544>
   116dc:	add	x0, x29, #0x18
   116e0:	bl	8350 <PyThread_tss_create@plt>
   116e4:	cbz	w0, 11710 <PyInit__testcapi@@Base+0x8554>
   116e8:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   116ec:	ldr	x8, [x8, #3928]
   116f0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   116f4:	add	x1, x1, #0xe67
   116f8:	ldr	x0, [x8]
   116fc:	bl	8670 <PyErr_SetString@plt>
   11700:	mov	x0, xzr
   11704:	ldr	x19, [sp, #16]
   11708:	ldp	x29, x30, [sp], #32
   1170c:	ret
   11710:	add	x0, x29, #0x18
   11714:	bl	8520 <PyThread_tss_is_created@plt>
   11718:	cbz	w0, 1174c <PyInit__testcapi@@Base+0x8590>
   1171c:	add	x0, x29, #0x18
   11720:	bl	8350 <PyThread_tss_create@plt>
   11724:	cbz	w0, 11770 <PyInit__testcapi@@Base+0x85b4>
   11728:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   1172c:	ldr	x0, [x8, #3520]
   11730:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   11734:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   11738:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
   1173c:	add	x1, x1, #0x842
   11740:	add	x2, x2, #0x271
   11744:	add	x3, x3, #0xecc
   11748:	b	116d4 <PyInit__testcapi@@Base+0x8518>
   1174c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11750:	ldr	x0, [x8, #3520]
   11754:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   11758:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   1175c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
   11760:	add	x1, x1, #0x842
   11764:	add	x2, x2, #0x271
   11768:	add	x3, x3, #0xe82
   1176c:	b	116d4 <PyInit__testcapi@@Base+0x8518>
   11770:	add	x0, x29, #0x18
   11774:	mov	x1, xzr
   11778:	bl	8c00 <PyThread_tss_set@plt>
   1177c:	add	x0, x29, #0x18
   11780:	bl	8520 <PyThread_tss_is_created@plt>
   11784:	cbz	w0, 117d4 <PyInit__testcapi@@Base+0x8618>
   11788:	add	x0, x29, #0x18
   1178c:	bl	8f10 <PyThread_tss_get@plt>
   11790:	add	x0, x29, #0x18
   11794:	bl	8520 <PyThread_tss_is_created@plt>
   11798:	cbz	w0, 117f8 <PyInit__testcapi@@Base+0x863c>
   1179c:	add	x0, x29, #0x18
   117a0:	bl	8d90 <PyThread_tss_delete@plt>
   117a4:	add	x0, x29, #0x18
   117a8:	bl	8520 <PyThread_tss_is_created@plt>
   117ac:	cbz	w0, 1181c <PyInit__testcapi@@Base+0x8660>
   117b0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   117b4:	ldr	x0, [x8, #3520]
   117b8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   117bc:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   117c0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
   117c4:	add	x1, x1, #0x842
   117c8:	add	x2, x2, #0x271
   117cc:	add	x3, x3, #0xfc3
   117d0:	b	116d4 <PyInit__testcapi@@Base+0x8518>
   117d4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   117d8:	ldr	x0, [x8, #3520]
   117dc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   117e0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   117e4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
   117e8:	add	x1, x1, #0x842
   117ec:	add	x2, x2, #0x271
   117f0:	add	x3, x3, #0xf0d
   117f4:	b	116d4 <PyInit__testcapi@@Base+0x8518>
   117f8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   117fc:	ldr	x0, [x8, #3520]
   11800:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   11804:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   11808:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
   1180c:	add	x1, x1, #0x842
   11810:	add	x2, x2, #0x271
   11814:	add	x3, x3, #0xf6b
   11818:	b	116d4 <PyInit__testcapi@@Base+0x8518>
   1181c:	bl	8ba0 <PyThread_tss_alloc@plt>
   11820:	cbz	x0, 11854 <PyInit__testcapi@@Base+0x8698>
   11824:	mov	x19, x0
   11828:	bl	8520 <PyThread_tss_is_created@plt>
   1182c:	cbz	w0, 11868 <PyInit__testcapi@@Base+0x86ac>
   11830:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11834:	ldr	x0, [x8, #3520]
   11838:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   1183c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   11840:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
   11844:	add	x1, x1, #0x842
   11848:	add	x2, x2, #0x271
   1184c:	add	x3, x3, #0x28
   11850:	b	116d4 <PyInit__testcapi@@Base+0x8518>
   11854:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11858:	ldr	x8, [x8, #3928]
   1185c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11860:	add	x1, x1, #0xe
   11864:	b	116f8 <PyInit__testcapi@@Base+0x853c>
   11868:	mov	x0, x19
   1186c:	bl	83a0 <PyThread_tss_free@plt>
   11870:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11874:	ldr	x0, [x0, #4016]
   11878:	ldr	x8, [x0]
   1187c:	add	x8, x8, #0x1
   11880:	str	x8, [x0]
   11884:	b	11704 <PyInit__testcapi@@Base+0x8548>
   11888:	b	8da0 <_PyContext_NewHamtForTests@plt>
   1188c:	sub	sp, sp, #0x30
   11890:	stp	x29, x30, [sp, #32]
   11894:	add	x29, sp, #0x20
   11898:	mov	x8, x2
   1189c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   118a0:	mov	x0, x1
   118a4:	add	x2, x2, #0x292
   118a8:	sub	x5, x29, #0x8
   118ac:	add	x6, sp, #0x10
   118b0:	add	x7, sp, #0x8
   118b4:	mov	w3, #0x3                   	// #3
   118b8:	mov	w4, #0x3                   	// #3
   118bc:	mov	x1, x8
   118c0:	bl	8710 <_PyArg_UnpackStack@plt>
   118c4:	cbz	w0, 118f8 <PyInit__testcapi@@Base+0x873c>
   118c8:	ldr	x0, [sp, #8]
   118cc:	mov	x1, xzr
   118d0:	bl	89e0 <PyObject_CallObject@plt>
   118d4:	cbz	x0, 118fc <PyInit__testcapi@@Base+0x8740>
   118d8:	ldr	x8, [x0]
   118dc:	subs	x8, x8, #0x1
   118e0:	str	x8, [x0]
   118e4:	b.ne	118ec <PyInit__testcapi@@Base+0x8730>  // b.any
   118e8:	bl	8560 <_Py_Dealloc@plt>
   118ec:	ldur	x0, [x29, #-8]
   118f0:	bl	8db0 <PyObject_Repr@plt>
   118f4:	b	118fc <PyInit__testcapi@@Base+0x8740>
   118f8:	mov	x0, xzr
   118fc:	ldp	x29, x30, [sp, #32]
   11900:	add	sp, sp, #0x30
   11904:	ret
   11908:	sub	sp, sp, #0x50
   1190c:	stp	x29, x30, [sp, #48]
   11910:	stp	x20, x19, [sp, #64]
   11914:	add	x29, sp, #0x30
   11918:	mov	x0, x1
   1191c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11920:	add	x1, x1, #0x61
   11924:	sub	x2, x29, #0x8
   11928:	sub	x3, x29, #0xc
   1192c:	add	x4, sp, #0x18
   11930:	stur	wzr, [x29, #-12]
   11934:	str	xzr, [sp, #24]
   11938:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1193c:	cbz	w0, 11a04 <PyInit__testcapi@@Base+0x8848>
   11940:	ldur	x0, [x29, #-8]
   11944:	mov	x1, xzr
   11948:	bl	8c70 <PyUnicode_AsWideCharString@plt>
   1194c:	mov	x19, x0
   11950:	cbz	x0, 11a08 <PyInit__testcapi@@Base+0x884c>
   11954:	ldr	x0, [sp, #24]
   11958:	bl	83c0 <_Py_GetErrorHandler@plt>
   1195c:	ldur	w4, [x29, #-12]
   11960:	mov	w5, w0
   11964:	add	x1, sp, #0x10
   11968:	add	x2, sp, #0x8
   1196c:	mov	x3, sp
   11970:	mov	x0, x19
   11974:	str	xzr, [sp, #16]
   11978:	str	xzr, [sp]
   1197c:	bl	8340 <_Py_EncodeLocaleEx@plt>
   11980:	mov	w20, w0
   11984:	mov	x0, x19
   11988:	bl	83d0 <PyMem_Free@plt>
   1198c:	add	w8, w20, #0x3
   11990:	cmp	w8, #0x3
   11994:	b.hi	119c4 <PyInit__testcapi@@Base+0x8808>  // b.pmore
   11998:	adrp	x9, 12000 <PyInit__testcapi@@Base+0x8e44>
   1199c:	add	x9, x9, #0xd30
   119a0:	adr	x10, 119b0 <PyInit__testcapi@@Base+0x87f4>
   119a4:	ldrb	w11, [x9, x8]
   119a8:	add	x10, x10, x11, lsl #2
   119ac:	br	x10
   119b0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   119b4:	ldr	x8, [x8, #3944]
   119b8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   119bc:	add	x1, x1, #0x87
   119c0:	b	119d4 <PyInit__testcapi@@Base+0x8818>
   119c4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   119c8:	ldr	x8, [x8, #3944]
   119cc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   119d0:	add	x1, x1, #0xa1
   119d4:	ldr	x0, [x8]
   119d8:	bl	8670 <PyErr_SetString@plt>
   119dc:	b	11a04 <PyInit__testcapi@@Base+0x8848>
   119e0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   119e4:	ldr	x8, [x8, #3928]
   119e8:	ldp	x3, x2, [sp]
   119ec:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   119f0:	add	x1, x1, #0x66
   119f4:	ldr	x0, [x8]
   119f8:	bl	8e60 <PyErr_Format@plt>
   119fc:	b	11a04 <PyInit__testcapi@@Base+0x8848>
   11a00:	bl	8570 <PyErr_NoMemory@plt>
   11a04:	mov	x19, xzr
   11a08:	mov	x0, x19
   11a0c:	ldp	x20, x19, [sp, #64]
   11a10:	ldp	x29, x30, [sp, #48]
   11a14:	add	sp, sp, #0x50
   11a18:	ret
   11a1c:	ldr	x0, [sp, #16]
   11a20:	bl	8970 <PyBytes_FromString@plt>
   11a24:	ldr	x8, [sp, #16]
   11a28:	mov	x19, x0
   11a2c:	mov	x0, x8
   11a30:	bl	8a10 <PyMem_RawFree@plt>
   11a34:	b	11a08 <PyInit__testcapi@@Base+0x884c>
   11a38:	sub	sp, sp, #0x50
   11a3c:	stp	x29, x30, [sp, #48]
   11a40:	str	x19, [sp, #64]
   11a44:	add	x29, sp, #0x30
   11a48:	mov	x0, x1
   11a4c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11a50:	add	x1, x1, #0xb3
   11a54:	add	x2, x29, #0x18
   11a58:	sub	x3, x29, #0x4
   11a5c:	sub	x4, x29, #0x10
   11a60:	stur	wzr, [x29, #-4]
   11a64:	stur	xzr, [x29, #-16]
   11a68:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11a6c:	cbz	w0, 11b14 <PyInit__testcapi@@Base+0x8958>
   11a70:	ldur	x0, [x29, #-16]
   11a74:	bl	83c0 <_Py_GetErrorHandler@plt>
   11a78:	mov	w5, w0
   11a7c:	ldr	x0, [x29, #24]
   11a80:	ldur	w4, [x29, #-4]
   11a84:	add	x1, sp, #0x18
   11a88:	add	x2, sp, #0x10
   11a8c:	add	x3, sp, #0x8
   11a90:	stp	xzr, xzr, [sp, #16]
   11a94:	str	xzr, [sp, #8]
   11a98:	bl	87a0 <_Py_DecodeLocaleEx@plt>
   11a9c:	add	w8, w0, #0x3
   11aa0:	cmp	w8, #0x3
   11aa4:	b.hi	11ad4 <PyInit__testcapi@@Base+0x8918>  // b.pmore
   11aa8:	adrp	x9, 12000 <PyInit__testcapi@@Base+0x8e44>
   11aac:	add	x9, x9, #0xd34
   11ab0:	adr	x10, 11ac0 <PyInit__testcapi@@Base+0x8904>
   11ab4:	ldrb	w11, [x9, x8]
   11ab8:	add	x10, x10, x11, lsl #2
   11abc:	br	x10
   11ac0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11ac4:	ldr	x8, [x8, #3944]
   11ac8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11acc:	add	x1, x1, #0x87
   11ad0:	b	11ae4 <PyInit__testcapi@@Base+0x8928>
   11ad4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11ad8:	ldr	x8, [x8, #3944]
   11adc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11ae0:	add	x1, x1, #0xa1
   11ae4:	ldr	x0, [x8]
   11ae8:	bl	8670 <PyErr_SetString@plt>
   11aec:	b	11b14 <PyInit__testcapi@@Base+0x8958>
   11af0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11af4:	ldr	x8, [x8, #3928]
   11af8:	ldp	x3, x2, [sp, #8]
   11afc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11b00:	add	x1, x1, #0xb8
   11b04:	ldr	x0, [x8]
   11b08:	bl	8e60 <PyErr_Format@plt>
   11b0c:	b	11b14 <PyInit__testcapi@@Base+0x8958>
   11b10:	bl	8570 <PyErr_NoMemory@plt>
   11b14:	mov	x19, xzr
   11b18:	mov	x0, x19
   11b1c:	ldr	x19, [sp, #64]
   11b20:	ldp	x29, x30, [sp, #48]
   11b24:	add	sp, sp, #0x50
   11b28:	ret
   11b2c:	ldp	x1, x0, [sp, #16]
   11b30:	bl	8400 <PyUnicode_FromWideChar@plt>
   11b34:	ldr	x8, [sp, #24]
   11b38:	mov	x19, x0
   11b3c:	mov	x0, x8
   11b40:	bl	8a10 <PyMem_RawFree@plt>
   11b44:	b	11b18 <PyInit__testcapi@@Base+0x895c>
   11b48:	sub	sp, sp, #0x40
   11b4c:	stp	x29, x30, [sp, #32]
   11b50:	stp	x20, x19, [sp, #48]
   11b54:	add	x29, sp, #0x20
   11b58:	mov	x0, x1
   11b5c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11b60:	add	x1, x1, #0xda4
   11b64:	sub	x2, x29, #0x8
   11b68:	add	x3, sp, #0x10
   11b6c:	add	x4, sp, #0x8
   11b70:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11b74:	cbz	w0, 11b98 <PyInit__testcapi@@Base+0x89dc>
   11b78:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11b7c:	ldr	x0, [sp, #16]
   11b80:	ldr	x19, [x19, #4016]
   11b84:	cmp	x0, x19
   11b88:	b.eq	11ba0 <PyInit__testcapi@@Base+0x89e4>  // b.none
   11b8c:	bl	8ca0 <PyUnicode_AsUTF8@plt>
   11b90:	mov	x20, x0
   11b94:	cbnz	x0, 11ba4 <PyInit__testcapi@@Base+0x89e8>
   11b98:	mov	x19, xzr
   11b9c:	b	11bc8 <PyInit__testcapi@@Base+0x8a0c>
   11ba0:	mov	x20, xzr
   11ba4:	ldur	x1, [x29, #-8]
   11ba8:	ldr	x0, [x1, #8]
   11bac:	bl	8580 <PyErr_SetObject@plt>
   11bb0:	ldr	x1, [sp, #8]
   11bb4:	mov	x0, x20
   11bb8:	bl	89c0 <_PyErr_WriteUnraisableMsg@plt>
   11bbc:	ldr	x8, [x19]
   11bc0:	add	x8, x8, #0x1
   11bc4:	str	x8, [x19]
   11bc8:	mov	x0, x19
   11bcc:	ldp	x20, x19, [sp, #48]
   11bd0:	ldp	x29, x30, [sp, #32]
   11bd4:	add	sp, sp, #0x40
   11bd8:	ret
   11bdc:	stp	x29, x30, [sp, #-32]!
   11be0:	str	x19, [sp, #16]
   11be4:	mov	x29, sp
   11be8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11bec:	ldr	w9, [x8, #3560]
   11bf0:	mov	x19, x0
   11bf4:	add	w9, w9, #0x1
   11bf8:	str	w9, [x8, #3560]
   11bfc:	bl	8b50 <PyCapsule_GetContext@plt>
   11c00:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   11c04:	add	x8, x8, #0x315
   11c08:	cmp	x0, x8
   11c0c:	b.eq	11c1c <PyInit__testcapi@@Base+0x8a60>  // b.none
   11c10:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   11c14:	add	x8, x8, #0x278
   11c18:	b	11c8c <PyInit__testcapi@@Base+0x8ad0>
   11c1c:	mov	x0, x19
   11c20:	bl	8ec0 <PyCapsule_GetDestructor@plt>
   11c24:	adrp	x8, 11000 <PyInit__testcapi@@Base+0x7e44>
   11c28:	add	x8, x8, #0xbdc
   11c2c:	cmp	x0, x8
   11c30:	b.eq	11c40 <PyInit__testcapi@@Base+0x8a84>  // b.none
   11c34:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   11c38:	add	x8, x8, #0x29d
   11c3c:	b	11c8c <PyInit__testcapi@@Base+0x8ad0>
   11c40:	mov	x0, x19
   11c44:	bl	8440 <PyCapsule_GetName@plt>
   11c48:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   11c4c:	add	x8, x8, #0x26b
   11c50:	cmp	x0, x8
   11c54:	b.eq	11c64 <PyInit__testcapi@@Base+0x8aa8>  // b.none
   11c58:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   11c5c:	add	x8, x8, #0x2ce
   11c60:	b	11c8c <PyInit__testcapi@@Base+0x8ad0>
   11c64:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11c68:	add	x1, x1, #0x26b
   11c6c:	mov	x0, x19
   11c70:	bl	8e70 <PyCapsule_GetPointer@plt>
   11c74:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   11c78:	add	x8, x8, #0x25b
   11c7c:	cmp	x0, x8
   11c80:	b.eq	11c94 <PyInit__testcapi@@Base+0x8ad8>  // b.none
   11c84:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   11c88:	add	x8, x8, #0x2f0
   11c8c:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11c90:	str	x8, [x9, #3552]
   11c94:	ldr	x19, [sp, #16]
   11c98:	ldp	x29, x30, [sp], #32
   11c9c:	ret
   11ca0:	stp	x29, x30, [sp, #-32]!
   11ca4:	stp	x20, x19, [sp, #16]
   11ca8:	mov	x29, sp
   11cac:	mov	x19, x0
   11cb0:	mov	x0, xzr
   11cb4:	bl	82a0 <PyList_New@plt>
   11cb8:	cbz	x0, 11d58 <PyInit__testcapi@@Base+0x8b9c>
   11cbc:	ldr	x8, [x0]
   11cc0:	mov	x20, x0
   11cc4:	adrp	x1, 11000 <PyInit__testcapi@@Base+0x7e44>
   11cc8:	add	x1, x1, #0xda8
   11ccc:	add	x8, x8, #0x1
   11cd0:	str	x8, [x0]
   11cd4:	mov	x0, x19
   11cd8:	mov	x2, xzr
   11cdc:	mov	x3, x20
   11ce0:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   11ce4:	cbz	x0, 11d58 <PyInit__testcapi@@Base+0x8b9c>
   11ce8:	ldr	x8, [x0]
   11cec:	subs	x8, x8, #0x1
   11cf0:	str	x8, [x0]
   11cf4:	b.ne	11cfc <PyInit__testcapi@@Base+0x8b40>  // b.any
   11cf8:	bl	8560 <_Py_Dealloc@plt>
   11cfc:	ldr	x8, [x20]
   11d00:	cmp	x8, #0x1
   11d04:	b.ne	11d40 <PyInit__testcapi@@Base+0x8b84>  // b.any
   11d08:	adrp	x1, 11000 <PyInit__testcapi@@Base+0x7e44>
   11d0c:	mov	w8, #0x2                   	// #2
   11d10:	add	x1, x1, #0xdc0
   11d14:	mov	x0, x19
   11d18:	mov	x2, xzr
   11d1c:	mov	x3, x20
   11d20:	str	x8, [x20]
   11d24:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   11d28:	cbz	x0, 11d68 <PyInit__testcapi@@Base+0x8bac>
   11d2c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11d30:	ldr	x0, [x8, #3520]
   11d34:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11d38:	add	x1, x1, #0x437
   11d3c:	b	11d50 <PyInit__testcapi@@Base+0x8b94>
   11d40:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11d44:	ldr	x0, [x8, #3520]
   11d48:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11d4c:	add	x1, x1, #0x3ed
   11d50:	mov	x2, x19
   11d54:	bl	8e60 <PyErr_Format@plt>
   11d58:	mov	w0, #0xffffffff            	// #-1
   11d5c:	ldp	x20, x19, [sp, #16]
   11d60:	ldp	x29, x30, [sp], #32
   11d64:	ret
   11d68:	bl	8980 <PyErr_Occurred@plt>
   11d6c:	cbz	x0, 11d2c <PyInit__testcapi@@Base+0x8b70>
   11d70:	bl	88c0 <PyErr_Clear@plt>
   11d74:	ldr	x8, [x20]
   11d78:	cmp	x8, #0x1
   11d7c:	b.ne	11d94 <PyInit__testcapi@@Base+0x8bd8>  // b.any
   11d80:	mov	x0, x20
   11d84:	str	xzr, [x20]
   11d88:	bl	8560 <_Py_Dealloc@plt>
   11d8c:	mov	w0, wzr
   11d90:	b	11d5c <PyInit__testcapi@@Base+0x8ba0>
   11d94:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11d98:	ldr	x0, [x8, #3520]
   11d9c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11da0:	add	x1, x1, #0x46e
   11da4:	b	11d50 <PyInit__testcapi@@Base+0x8b94>
   11da8:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11dac:	ldr	x0, [x0, #4016]
   11db0:	ldr	x8, [x0]
   11db4:	add	x8, x8, #0x1
   11db8:	str	x8, [x0]
   11dbc:	ret
   11dc0:	stp	x29, x30, [sp, #-16]!
   11dc4:	mov	x29, sp
   11dc8:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11dcc:	ldr	x8, [x8, #3944]
   11dd0:	ldr	x0, [x8]
   11dd4:	bl	8750 <PyErr_SetNone@plt>
   11dd8:	mov	x0, xzr
   11ddc:	ldp	x29, x30, [sp], #16
   11de0:	ret
   11de4:	stp	x29, x30, [sp, #-16]!
   11de8:	mov	x29, sp
   11dec:	bl	11e00 <PyInit__testcapi@@Base+0x8c44>
   11df0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11df4:	ldr	x0, [x8, #3824]
   11df8:	ldp	x29, x30, [sp], #16
   11dfc:	b	8b90 <PyThread_release_lock@plt>
   11e00:	stp	x29, x30, [sp, #-32]!
   11e04:	stp	x20, x19, [sp, #16]
   11e08:	mov	x29, sp
   11e0c:	mov	x20, x0
   11e10:	bl	86e0 <PyGILState_Ensure@plt>
   11e14:	ldr	x8, [x20, #8]
   11e18:	mov	w19, w0
   11e1c:	ldrb	w9, [x8, #169]
   11e20:	tbz	w9, #3, 11e58 <PyInit__testcapi@@Base+0x8c9c>
   11e24:	ldr	x8, [x8, #56]
   11e28:	ldr	x8, [x20, x8]
   11e2c:	cbz	x8, 11e58 <PyInit__testcapi@@Base+0x8c9c>
   11e30:	mov	x0, x20
   11e34:	mov	x1, xzr
   11e38:	mov	x2, xzr
   11e3c:	mov	x3, xzr
   11e40:	blr	x8
   11e44:	mov	x1, x0
   11e48:	mov	x0, x20
   11e4c:	mov	x2, xzr
   11e50:	bl	8a80 <_Py_CheckFunctionResult@plt>
   11e54:	b	11e6c <PyInit__testcapi@@Base+0x8cb0>
   11e58:	mov	x0, x20
   11e5c:	mov	x1, xzr
   11e60:	mov	x2, xzr
   11e64:	mov	x3, xzr
   11e68:	bl	8f00 <_PyObject_MakeTpCall@plt>
   11e6c:	cmp	x0, #0x0
   11e70:	cset	w20, ne  // ne = any
   11e74:	cbz	x0, 11e8c <PyInit__testcapi@@Base+0x8cd0>
   11e78:	ldr	x8, [x0]
   11e7c:	subs	x8, x8, #0x1
   11e80:	str	x8, [x0]
   11e84:	b.ne	11e8c <PyInit__testcapi@@Base+0x8cd0>  // b.any
   11e88:	bl	8560 <_Py_Dealloc@plt>
   11e8c:	mov	w0, w19
   11e90:	bl	8360 <PyGILState_Release@plt>
   11e94:	mov	w0, w20
   11e98:	ldp	x20, x19, [sp, #16]
   11e9c:	ldp	x29, x30, [sp], #32
   11ea0:	ret
   11ea4:	stp	x29, x30, [sp, #-32]!
   11ea8:	stp	x20, x19, [sp, #16]
   11eac:	mov	x29, sp
   11eb0:	ldr	x8, [x0, #8]
   11eb4:	mov	x19, x0
   11eb8:	ldrb	w9, [x8, #169]
   11ebc:	tbz	w9, #3, 11ef4 <PyInit__testcapi@@Base+0x8d38>
   11ec0:	ldr	x8, [x8, #56]
   11ec4:	ldr	x8, [x19, x8]
   11ec8:	cbz	x8, 11ef4 <PyInit__testcapi@@Base+0x8d38>
   11ecc:	mov	x0, x19
   11ed0:	mov	x1, xzr
   11ed4:	mov	x2, xzr
   11ed8:	mov	x3, xzr
   11edc:	blr	x8
   11ee0:	mov	x1, x0
   11ee4:	mov	x0, x19
   11ee8:	mov	x2, xzr
   11eec:	bl	8a80 <_Py_CheckFunctionResult@plt>
   11ef0:	b	11f08 <PyInit__testcapi@@Base+0x8d4c>
   11ef4:	mov	x0, x19
   11ef8:	mov	x1, xzr
   11efc:	mov	x2, xzr
   11f00:	mov	x3, xzr
   11f04:	bl	8f00 <_PyObject_MakeTpCall@plt>
   11f08:	ldr	x8, [x19]
   11f0c:	mov	x20, x0
   11f10:	subs	x8, x8, #0x1
   11f14:	str	x8, [x19]
   11f18:	b.eq	11f24 <PyInit__testcapi@@Base+0x8d68>  // b.none
   11f1c:	cbnz	x20, 11f30 <PyInit__testcapi@@Base+0x8d74>
   11f20:	b	11f48 <PyInit__testcapi@@Base+0x8d8c>
   11f24:	mov	x0, x19
   11f28:	bl	8560 <_Py_Dealloc@plt>
   11f2c:	cbz	x20, 11f48 <PyInit__testcapi@@Base+0x8d8c>
   11f30:	ldr	x8, [x20]
   11f34:	subs	x8, x8, #0x1
   11f38:	str	x8, [x20]
   11f3c:	b.ne	11f48 <PyInit__testcapi@@Base+0x8d8c>  // b.any
   11f40:	mov	x0, x20
   11f44:	bl	8560 <_Py_Dealloc@plt>
   11f48:	cmp	x20, #0x0
   11f4c:	ldp	x20, x19, [sp, #16]
   11f50:	csetm	w0, eq  // eq = none
   11f54:	ldp	x29, x30, [sp], #32
   11f58:	ret
   11f5c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11f60:	ldr	x8, [x8, #3840]
   11f64:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11f68:	mov	w0, wzr
   11f6c:	str	x8, [x9, #3832]
   11f70:	ldr	x9, [x8]
   11f74:	add	x9, x9, #0x1
   11f78:	str	x9, [x8]
   11f7c:	ret
   11f80:	sub	sp, sp, #0x40
   11f84:	stp	x29, x30, [sp, #32]
   11f88:	stp	x20, x19, [sp, #48]
   11f8c:	add	x29, sp, #0x20
   11f90:	mov	w8, #0x1                   	// #1
   11f94:	mov	x19, x0
   11f98:	str	x8, [x0]
   11f9c:	sub	x0, x29, #0x8
   11fa0:	add	x1, sp, #0x10
   11fa4:	add	x2, sp, #0x8
   11fa8:	bl	8ce0 <PyErr_Fetch@plt>
   11fac:	adrp	x1, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11fb0:	add	x1, x1, #0x5d8
   11fb4:	mov	x0, x19
   11fb8:	bl	86f0 <_PyObject_LookupSpecial@plt>
   11fbc:	cbz	x0, 12054 <PyInit__testcapi@@Base+0x8e98>
   11fc0:	ldr	x8, [x0, #8]
   11fc4:	mov	x20, x0
   11fc8:	ldrb	w9, [x8, #169]
   11fcc:	tbz	w9, #3, 12010 <PyInit__testcapi@@Base+0x8e54>
   11fd0:	ldr	x8, [x8, #56]
   11fd4:	ldr	x8, [x20, x8]
   11fd8:	cbz	x8, 12010 <PyInit__testcapi@@Base+0x8e54>
   11fdc:	mov	x0, x20
   11fe0:	mov	x1, xzr
   11fe4:	mov	x2, xzr
   11fe8:	mov	x3, xzr
   11fec:	blr	x8
   11ff0:	mov	x1, x0
   11ff4:	mov	x0, x20
   11ff8:	mov	x2, xzr
   11ffc:	bl	8a80 <_Py_CheckFunctionResult@plt>
   12000:	cbnz	x0, 12028 <PyInit__testcapi@@Base+0x8e6c>
   12004:	mov	x0, x20
   12008:	bl	9080 <PyErr_WriteUnraisable@plt>
   1200c:	b	1203c <PyInit__testcapi@@Base+0x8e80>
   12010:	mov	x0, x20
   12014:	mov	x1, xzr
   12018:	mov	x2, xzr
   1201c:	mov	x3, xzr
   12020:	bl	8f00 <_PyObject_MakeTpCall@plt>
   12024:	cbz	x0, 12004 <PyInit__testcapi@@Base+0x8e48>
   12028:	ldr	x8, [x0]
   1202c:	subs	x8, x8, #0x1
   12030:	str	x8, [x0]
   12034:	b.ne	1203c <PyInit__testcapi@@Base+0x8e80>  // b.any
   12038:	bl	8560 <_Py_Dealloc@plt>
   1203c:	ldr	x8, [x20]
   12040:	subs	x8, x8, #0x1
   12044:	str	x8, [x20]
   12048:	b.ne	12054 <PyInit__testcapi@@Base+0x8e98>  // b.any
   1204c:	mov	x0, x20
   12050:	bl	8560 <_Py_Dealloc@plt>
   12054:	ldur	x0, [x29, #-8]
   12058:	ldp	x2, x1, [sp, #8]
   1205c:	bl	8380 <PyErr_Restore@plt>
   12060:	ldr	x8, [x19]
   12064:	subs	x20, x8, #0x1
   12068:	str	x20, [x19]
   1206c:	b.eq	1208c <PyInit__testcapi@@Base+0x8ed0>  // b.none
   12070:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   12074:	ldr	x8, [x8, #3968]
   12078:	ldr	w8, [x8, #4]
   1207c:	cbz	w8, 12088 <PyInit__testcapi@@Base+0x8ecc>
   12080:	mov	x0, x19
   12084:	bl	8c10 <_PyTraceMalloc_NewReference@plt>
   12088:	str	x20, [x19]
   1208c:	ldp	x20, x19, [sp, #48]
   12090:	ldp	x29, x30, [sp, #32]
   12094:	add	sp, sp, #0x40
   12098:	ret
   1209c:	sub	sp, sp, #0xc0
   120a0:	stp	x29, x30, [sp, #144]
   120a4:	str	x21, [sp, #160]
   120a8:	stp	x20, x19, [sp, #176]
   120ac:	add	x29, sp, #0x90
   120b0:	adrp	x9, 12000 <PyInit__testcapi@@Base+0x8e44>
   120b4:	add	x8, sp, #0x30
   120b8:	add	x9, x9, #0x3e4
   120bc:	adrp	x10, 12000 <PyInit__testcapi@@Base+0x8e44>
   120c0:	stp	x8, x9, [sp, #8]
   120c4:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
   120c8:	add	x10, x10, #0x3f8
   120cc:	add	x8, x8, #0x410
   120d0:	stp	x10, x8, [sp, #24]
   120d4:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
   120d8:	movi	v0.2d, #0x0
   120dc:	add	x8, x8, #0x428
   120e0:	add	x1, sp, #0x30
   120e4:	mov	w19, w0
   120e8:	stp	q0, q0, [sp, #48]
   120ec:	stp	q0, q0, [sp, #80]
   120f0:	stp	q0, q0, [sp, #112]
   120f4:	str	x8, [sp, #40]
   120f8:	bl	8b70 <PyMem_GetAllocator@plt>
   120fc:	add	x1, sp, #0x8
   12100:	mov	w0, w19
   12104:	bl	8700 <PyMem_SetAllocator@plt>
   12108:	cmp	w19, #0x2
   1210c:	str	xzr, [sp, #136]
   12110:	b.eq	1212c <PyInit__testcapi@@Base+0x8f70>  // b.none
   12114:	cmp	w19, #0x1
   12118:	b.eq	12138 <PyInit__testcapi@@Base+0x8f7c>  // b.none
   1211c:	cbnz	w19, 12164 <PyInit__testcapi@@Base+0x8fa8>
   12120:	mov	w0, #0x2a                  	// #42
   12124:	bl	84d0 <PyMem_RawMalloc@plt>
   12128:	b	12140 <PyInit__testcapi@@Base+0x8f84>
   1212c:	mov	w0, #0x2a                  	// #42
   12130:	bl	86c0 <PyObject_Malloc@plt>
   12134:	b	12140 <PyInit__testcapi@@Base+0x8f84>
   12138:	mov	w0, #0x2a                  	// #42
   1213c:	bl	8fc0 <PyMem_Malloc@plt>
   12140:	mov	x20, x0
   12144:	cbz	x0, 12164 <PyInit__testcapi@@Base+0x8fa8>
   12148:	ldr	x8, [sp, #136]
   1214c:	add	x9, sp, #0x30
   12150:	cmp	x8, x9
   12154:	b.eq	121a4 <PyInit__testcapi@@Base+0x8fe8>  // b.none
   12158:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1215c:	add	x1, x1, #0xb1f
   12160:	b	1216c <PyInit__testcapi@@Base+0x8fb0>
   12164:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12168:	add	x1, x1, #0xb11
   1216c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   12170:	ldr	x8, [x8, #3928]
   12174:	ldr	x0, [x8]
   12178:	bl	8670 <PyErr_SetString@plt>
   1217c:	mov	x20, xzr
   12180:	add	x1, sp, #0x30
   12184:	mov	w0, w19
   12188:	bl	8700 <PyMem_SetAllocator@plt>
   1218c:	mov	x0, x20
   12190:	ldp	x20, x19, [sp, #176]
   12194:	ldr	x21, [sp, #160]
   12198:	ldp	x29, x30, [sp, #144]
   1219c:	add	sp, sp, #0xc0
   121a0:	ret
   121a4:	ldr	x8, [sp, #88]
   121a8:	str	xzr, [sp, #136]
   121ac:	cmp	x8, #0x2a
   121b0:	b.ne	121d8 <PyInit__testcapi@@Base+0x901c>  // b.any
   121b4:	cmp	w19, #0x2
   121b8:	b.eq	121e4 <PyInit__testcapi@@Base+0x9028>  // b.none
   121bc:	cmp	w19, #0x1
   121c0:	b.eq	121f4 <PyInit__testcapi@@Base+0x9038>  // b.none
   121c4:	cbnz	w19, 12224 <PyInit__testcapi@@Base+0x9068>
   121c8:	mov	w1, #0xc8                  	// #200
   121cc:	mov	x0, x20
   121d0:	bl	9090 <PyMem_RawRealloc@plt>
   121d4:	b	12200 <PyInit__testcapi@@Base+0x9044>
   121d8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   121dc:	add	x1, x1, #0xb34
   121e0:	b	1216c <PyInit__testcapi@@Base+0x8fb0>
   121e4:	mov	w1, #0xc8                  	// #200
   121e8:	mov	x0, x20
   121ec:	bl	8ae0 <PyObject_Realloc@plt>
   121f0:	b	12200 <PyInit__testcapi@@Base+0x9044>
   121f4:	mov	w1, #0xc8                  	// #200
   121f8:	mov	x0, x20
   121fc:	bl	8740 <PyMem_Realloc@plt>
   12200:	mov	x21, x0
   12204:	cbz	x0, 12224 <PyInit__testcapi@@Base+0x9068>
   12208:	ldr	x8, [sp, #136]
   1220c:	add	x9, sp, #0x30
   12210:	cmp	x8, x9
   12214:	b.eq	12230 <PyInit__testcapi@@Base+0x9074>  // b.none
   12218:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1221c:	add	x1, x1, #0xb57
   12220:	b	1216c <PyInit__testcapi@@Base+0x8fb0>
   12224:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12228:	add	x1, x1, #0xb48
   1222c:	b	1216c <PyInit__testcapi@@Base+0x8fb0>
   12230:	ldr	x8, [sp, #112]
   12234:	str	xzr, [sp, #136]
   12238:	cmp	x8, x20
   1223c:	b.ne	1226c <PyInit__testcapi@@Base+0x90b0>  // b.any
   12240:	ldr	x8, [sp, #120]
   12244:	cmp	x8, #0xc8
   12248:	b.ne	1226c <PyInit__testcapi@@Base+0x90b0>  // b.any
   1224c:	cmp	w19, #0x2
   12250:	b.eq	12278 <PyInit__testcapi@@Base+0x90bc>  // b.none
   12254:	cmp	w19, #0x1
   12258:	b.eq	12284 <PyInit__testcapi@@Base+0x90c8>  // b.none
   1225c:	cbnz	w19, 1228c <PyInit__testcapi@@Base+0x90d0>
   12260:	mov	x0, x21
   12264:	bl	8a10 <PyMem_RawFree@plt>
   12268:	b	1228c <PyInit__testcapi@@Base+0x90d0>
   1226c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12270:	add	x1, x1, #0xb6d
   12274:	b	1216c <PyInit__testcapi@@Base+0x8fb0>
   12278:	mov	x0, x21
   1227c:	bl	87c0 <PyObject_Free@plt>
   12280:	b	1228c <PyInit__testcapi@@Base+0x90d0>
   12284:	mov	x0, x21
   12288:	bl	83d0 <PyMem_Free@plt>
   1228c:	ldr	x8, [sp, #136]
   12290:	add	x9, sp, #0x30
   12294:	cmp	x8, x9
   12298:	b.eq	122a8 <PyInit__testcapi@@Base+0x90ec>  // b.none
   1229c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   122a0:	add	x1, x1, #0xbd1
   122a4:	b	1216c <PyInit__testcapi@@Base+0x8fb0>
   122a8:	ldr	x8, [sp, #128]
   122ac:	str	xzr, [sp, #136]
   122b0:	cmp	x8, x21
   122b4:	b.eq	122c4 <PyInit__testcapi@@Base+0x9108>  // b.none
   122b8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   122bc:	add	x1, x1, #0xbeb
   122c0:	b	1216c <PyInit__testcapi@@Base+0x8fb0>
   122c4:	cmp	w19, #0x2
   122c8:	b.eq	122e8 <PyInit__testcapi@@Base+0x912c>  // b.none
   122cc:	cmp	w19, #0x1
   122d0:	b.eq	122f8 <PyInit__testcapi@@Base+0x913c>  // b.none
   122d4:	cbnz	w19, 12328 <PyInit__testcapi@@Base+0x916c>
   122d8:	mov	w0, #0x2                   	// #2
   122dc:	mov	w1, #0x5                   	// #5
   122e0:	bl	8d30 <PyMem_RawCalloc@plt>
   122e4:	b	12304 <PyInit__testcapi@@Base+0x9148>
   122e8:	mov	w0, #0x2                   	// #2
   122ec:	mov	w1, #0x5                   	// #5
   122f0:	bl	90a0 <PyObject_Calloc@plt>
   122f4:	b	12304 <PyInit__testcapi@@Base+0x9148>
   122f8:	mov	w0, #0x2                   	// #2
   122fc:	mov	w1, #0x5                   	// #5
   12300:	bl	8f20 <PyMem_Calloc@plt>
   12304:	mov	x20, x0
   12308:	cbz	x0, 12328 <PyInit__testcapi@@Base+0x916c>
   1230c:	ldr	x8, [sp, #136]
   12310:	add	x9, sp, #0x30
   12314:	cmp	x8, x9
   12318:	b.eq	12334 <PyInit__testcapi@@Base+0x9178>  // b.none
   1231c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12320:	add	x1, x1, #0xb96
   12324:	b	1216c <PyInit__testcapi@@Base+0x8fb0>
   12328:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1232c:	add	x1, x1, #0xb88
   12330:	b	1216c <PyInit__testcapi@@Base+0x8fb0>
   12334:	ldr	x8, [sp, #96]
   12338:	str	xzr, [sp, #136]
   1233c:	cmp	x8, #0x2
   12340:	b.ne	12374 <PyInit__testcapi@@Base+0x91b8>  // b.any
   12344:	ldr	x8, [sp, #104]
   12348:	cmp	x8, #0x5
   1234c:	b.ne	12374 <PyInit__testcapi@@Base+0x91b8>  // b.any
   12350:	cmp	w19, #0x2
   12354:	str	xzr, [sp, #128]
   12358:	b.eq	12380 <PyInit__testcapi@@Base+0x91c4>  // b.none
   1235c:	cmp	w19, #0x1
   12360:	b.eq	1238c <PyInit__testcapi@@Base+0x91d0>  // b.none
   12364:	cbnz	w19, 12394 <PyInit__testcapi@@Base+0x91d8>
   12368:	mov	x0, x20
   1236c:	bl	8a10 <PyMem_RawFree@plt>
   12370:	b	12394 <PyInit__testcapi@@Base+0x91d8>
   12374:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12378:	add	x1, x1, #0xbab
   1237c:	b	1216c <PyInit__testcapi@@Base+0x8fb0>
   12380:	mov	x0, x20
   12384:	bl	87c0 <PyObject_Free@plt>
   12388:	b	12394 <PyInit__testcapi@@Base+0x91d8>
   1238c:	mov	x0, x20
   12390:	bl	83d0 <PyMem_Free@plt>
   12394:	ldr	x8, [sp, #136]
   12398:	add	x9, sp, #0x30
   1239c:	cmp	x8, x9
   123a0:	b.eq	123b0 <PyInit__testcapi@@Base+0x91f4>  // b.none
   123a4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   123a8:	add	x1, x1, #0xbca
   123ac:	b	1216c <PyInit__testcapi@@Base+0x8fb0>
   123b0:	ldr	x8, [sp, #128]
   123b4:	str	xzr, [sp, #136]
   123b8:	cmp	x8, x20
   123bc:	b.eq	123cc <PyInit__testcapi@@Base+0x9210>  // b.none
   123c0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   123c4:	add	x1, x1, #0xbe4
   123c8:	b	1216c <PyInit__testcapi@@Base+0x8fb0>
   123cc:	adrp	x20, 26000 <PyInit__testcapi@@Base+0x1ce44>
   123d0:	ldr	x20, [x20, #4016]
   123d4:	ldr	x8, [x20]
   123d8:	add	x8, x8, #0x1
   123dc:	str	x8, [x20]
   123e0:	b	12180 <PyInit__testcapi@@Base+0x8fc4>
   123e4:	ldp	x8, x2, [x0]
   123e8:	str	x0, [x0, #88]
   123ec:	str	x1, [x0, #40]
   123f0:	mov	x0, x8
   123f4:	br	x2
   123f8:	ldr	x8, [x0]
   123fc:	ldr	x3, [x0, #16]
   12400:	str	x0, [x0, #88]
   12404:	stp	x1, x2, [x0, #48]
   12408:	mov	x0, x8
   1240c:	br	x3
   12410:	ldr	x8, [x0]
   12414:	ldr	x3, [x0, #24]
   12418:	str	x0, [x0, #88]
   1241c:	stp	x1, x2, [x0, #64]
   12420:	mov	x0, x8
   12424:	br	x3
   12428:	ldr	x8, [x0]
   1242c:	ldr	x2, [x0, #32]
   12430:	stp	x1, x0, [x0, #80]
   12434:	mov	x0, x8
   12438:	br	x2
   1243c:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   12440:	add	x9, x9, #0xf08
   12444:	ldr	x8, [x9, #8]
   12448:	ldrsw	x10, [x9]
   1244c:	add	x8, x8, #0x1
   12450:	cmp	x8, x10
   12454:	str	x8, [x9, #8]
   12458:	b.le	12474 <PyInit__testcapi@@Base+0x92b8>
   1245c:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   12460:	ldrsw	x9, [x9, #3852]
   12464:	cmp	w9, #0x1
   12468:	b.lt	1247c <PyInit__testcapi@@Base+0x92c0>  // b.tstop
   1246c:	cmp	x8, x9
   12470:	b.le	1247c <PyInit__testcapi@@Base+0x92c0>
   12474:	ldp	x0, x2, [x0]
   12478:	br	x2
   1247c:	mov	x0, xzr
   12480:	ret
   12484:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   12488:	add	x9, x9, #0xf08
   1248c:	ldr	x8, [x9, #8]
   12490:	ldrsw	x10, [x9]
   12494:	add	x8, x8, #0x1
   12498:	cmp	x8, x10
   1249c:	str	x8, [x9, #8]
   124a0:	b.le	124bc <PyInit__testcapi@@Base+0x9300>
   124a4:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   124a8:	ldrsw	x9, [x9, #3852]
   124ac:	cmp	w9, #0x1
   124b0:	b.lt	124c8 <PyInit__testcapi@@Base+0x930c>  // b.tstop
   124b4:	cmp	x8, x9
   124b8:	b.le	124c8 <PyInit__testcapi@@Base+0x930c>
   124bc:	ldr	x3, [x0, #16]
   124c0:	ldr	x0, [x0]
   124c4:	br	x3
   124c8:	mov	x0, xzr
   124cc:	ret
   124d0:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   124d4:	add	x9, x9, #0xf08
   124d8:	ldr	x8, [x9, #8]
   124dc:	ldrsw	x10, [x9]
   124e0:	add	x8, x8, #0x1
   124e4:	cmp	x8, x10
   124e8:	str	x8, [x9, #8]
   124ec:	b.le	12508 <PyInit__testcapi@@Base+0x934c>
   124f0:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   124f4:	ldrsw	x9, [x9, #3852]
   124f8:	cmp	w9, #0x1
   124fc:	b.lt	12514 <PyInit__testcapi@@Base+0x9358>  // b.tstop
   12500:	cmp	x8, x9
   12504:	b.le	12514 <PyInit__testcapi@@Base+0x9358>
   12508:	ldr	x3, [x0, #24]
   1250c:	ldr	x0, [x0]
   12510:	br	x3
   12514:	mov	x0, xzr
   12518:	ret
   1251c:	ldr	x2, [x0, #32]
   12520:	ldr	x0, [x0]
   12524:	br	x2
   12528:	stp	x29, x30, [sp, #-48]!
   1252c:	str	x21, [sp, #16]
   12530:	stp	x20, x19, [sp, #32]
   12534:	mov	x29, sp
   12538:	mov	x19, x0
   1253c:	ldr	x0, [x0]
   12540:	bl	8b90 <PyThread_release_lock@plt>
   12544:	bl	86e0 <PyGILState_Ensure@plt>
   12548:	ldr	x21, [x19, #16]
   1254c:	mov	w20, w0
   12550:	ldr	x8, [x21, #8]
   12554:	ldrb	w9, [x8, #169]
   12558:	tbz	w9, #3, 12568 <PyInit__testcapi@@Base+0x93ac>
   1255c:	ldr	x8, [x8, #56]
   12560:	ldr	x8, [x21, x8]
   12564:	cbnz	x8, 12580 <PyInit__testcapi@@Base+0x93c4>
   12568:	mov	x0, x21
   1256c:	mov	x1, xzr
   12570:	mov	x2, xzr
   12574:	mov	x3, xzr
   12578:	bl	8f00 <_PyObject_MakeTpCall@plt>
   1257c:	b	125a4 <PyInit__testcapi@@Base+0x93e8>
   12580:	mov	x0, x21
   12584:	mov	x1, xzr
   12588:	mov	x2, xzr
   1258c:	mov	x3, xzr
   12590:	blr	x8
   12594:	mov	x1, x0
   12598:	mov	x0, x21
   1259c:	mov	x2, xzr
   125a0:	bl	8a80 <_Py_CheckFunctionResult@plt>
   125a4:	mov	x21, x0
   125a8:	ldr	x0, [x19, #16]
   125ac:	cbz	x0, 125c8 <PyInit__testcapi@@Base+0x940c>
   125b0:	str	xzr, [x19, #16]
   125b4:	ldr	x8, [x0]
   125b8:	subs	x8, x8, #0x1
   125bc:	str	x8, [x0]
   125c0:	b.ne	125c8 <PyInit__testcapi@@Base+0x940c>  // b.any
   125c4:	bl	8560 <_Py_Dealloc@plt>
   125c8:	cbnz	x21, 125d4 <PyInit__testcapi@@Base+0x9418>
   125cc:	bl	8720 <PyErr_Print@plt>
   125d0:	b	125ec <PyInit__testcapi@@Base+0x9430>
   125d4:	ldr	x8, [x21]
   125d8:	subs	x8, x8, #0x1
   125dc:	str	x8, [x21]
   125e0:	b.ne	125ec <PyInit__testcapi@@Base+0x9430>  // b.any
   125e4:	mov	x0, x21
   125e8:	bl	8560 <_Py_Dealloc@plt>
   125ec:	mov	w0, w20
   125f0:	bl	8360 <PyGILState_Release@plt>
   125f4:	ldr	x0, [x19, #8]
   125f8:	bl	8b90 <PyThread_release_lock@plt>
   125fc:	bl	8550 <PyThread_exit_thread@plt>
   12600:	stp	x29, x30, [sp, #-32]!
   12604:	str	x19, [sp, #16]
   12608:	mov	x29, sp
   1260c:	mov	x19, x0
   12610:	mov	x0, x1
   12614:	bl	83e0 <_PyObject_IsFreed@plt>
   12618:	cbz	w0, 12634 <PyInit__testcapi@@Base+0x9478>
   1261c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   12620:	ldr	x0, [x0, #4016]
   12624:	ldr	x8, [x0]
   12628:	add	x8, x8, #0x1
   1262c:	str	x8, [x0]
   12630:	b	12658 <PyInit__testcapi@@Base+0x949c>
   12634:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   12638:	ldr	x0, [x8, #3520]
   1263c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   12640:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
   12644:	add	x1, x1, #0x842
   12648:	add	x3, x3, #0xd29
   1264c:	mov	x2, x19
   12650:	bl	8e60 <PyErr_Format@plt>
   12654:	mov	x0, xzr
   12658:	ldr	x19, [sp, #16]
   1265c:	ldp	x29, x30, [sp], #32
   12660:	ret
   12664:	b	87c0 <PyObject_Free@plt>
   12668:	sub	sp, sp, #0xa0
   1266c:	stp	x29, x30, [sp, #112]
   12670:	str	x21, [sp, #128]
   12674:	stp	x20, x19, [sp, #144]
   12678:	add	x29, sp, #0x70
   1267c:	mov	x20, x2
   12680:	mov	x21, x1
   12684:	str	xzr, [x29, #24]
   12688:	stur	xzr, [x29, #-8]
   1268c:	bl	8cf0 <_PyObject_New@plt>
   12690:	mov	x19, x0
   12694:	cbz	x0, 127a0 <PyInit__testcapi@@Base+0x95e4>
   12698:	movi	v0.2d, #0x0
   1269c:	mov	x4, x19
   126a0:	str	q0, [x4, #16]!
   126a4:	mov	x11, x4
   126a8:	mov	x8, x4
   126ac:	mov	x9, x4
   126b0:	mov	x10, x4
   126b4:	str	q0, [x11, #64]!
   126b8:	add	x17, x4, #0x48
   126bc:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
   126c0:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
   126c4:	add	x5, x4, #0x1
   126c8:	add	x6, x4, #0x2
   126cc:	add	x7, x4, #0x4
   126d0:	add	x12, x4, #0x6
   126d4:	add	x13, x4, #0x8
   126d8:	add	x14, x4, #0xc
   126dc:	add	x15, x4, #0x18
   126e0:	add	x16, x4, #0x28
   126e4:	str	q0, [x8, #16]!
   126e8:	str	q0, [x9, #32]!
   126ec:	str	q0, [x10, #48]!
   126f0:	stp	x11, x17, [sp, #80]
   126f4:	sub	x11, x29, #0x8
   126f8:	add	x17, x29, #0x18
   126fc:	add	x2, x2, #0x200
   12700:	add	x3, x3, #0x890
   12704:	mov	x0, x21
   12708:	mov	x1, x20
   1270c:	stp	x16, x10, [sp, #48]
   12710:	stp	x15, x9, [sp, #32]
   12714:	stp	x14, x8, [sp, #16]
   12718:	stp	x17, x11, [sp, #64]
   1271c:	stp	x12, x13, [sp]
   12720:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
   12724:	cbz	w0, 12770 <PyInit__testcapi@@Base+0x95b4>
   12728:	ldr	x1, [x29, #24]
   1272c:	cbz	x1, 12790 <PyInit__testcapi@@Base+0x95d4>
   12730:	ldur	x8, [x29, #-8]
   12734:	cmp	x8, #0x6
   12738:	b.lt	12798 <PyInit__testcapi@@Base+0x95dc>  // b.tstop
   1273c:	ldr	x8, [x19]
   12740:	subs	x8, x8, #0x1
   12744:	str	x8, [x19]
   12748:	b.ne	12754 <PyInit__testcapi@@Base+0x9598>  // b.any
   1274c:	mov	x0, x19
   12750:	bl	8560 <_Py_Dealloc@plt>
   12754:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   12758:	ldr	x8, [x8, #3944]
   1275c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12760:	add	x1, x1, #0x19d
   12764:	ldr	x0, [x8]
   12768:	bl	8670 <PyErr_SetString@plt>
   1276c:	b	12788 <PyInit__testcapi@@Base+0x95cc>
   12770:	ldr	x8, [x19]
   12774:	subs	x8, x8, #0x1
   12778:	str	x8, [x19]
   1277c:	b.ne	12788 <PyInit__testcapi@@Base+0x95cc>  // b.any
   12780:	mov	x0, x19
   12784:	bl	8560 <_Py_Dealloc@plt>
   12788:	mov	x19, xzr
   1278c:	b	127a0 <PyInit__testcapi@@Base+0x95e4>
   12790:	strb	wzr, [x19, #72]
   12794:	b	127a0 <PyInit__testcapi@@Base+0x95e4>
   12798:	add	x0, x19, #0x48
   1279c:	bl	8cb0 <strcpy@plt>
   127a0:	mov	x0, x19
   127a4:	ldp	x20, x19, [sp, #144]
   127a8:	ldr	x21, [sp, #128]
   127ac:	ldp	x29, x30, [sp, #112]
   127b0:	add	sp, sp, #0xa0
   127b4:	ret
   127b8:	ldr	x8, [x0, #8]
   127bc:	ldr	x1, [x8, #320]
   127c0:	br	x1
   127c4:	adrp	x8, 16000 <PyInit__testcapi@@Base+0xce44>
   127c8:	mov	x3, x1
   127cc:	add	x8, x8, #0x1d9
   127d0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   127d4:	add	x1, x1, #0x1e0
   127d8:	mov	x2, x0
   127dc:	mov	x0, x8
   127e0:	b	8ea0 <_Py_BuildValue_SizeT@plt>
   127e4:	adrp	x8, 16000 <PyInit__testcapi@@Base+0xce44>
   127e8:	mov	x3, x1
   127ec:	add	x8, x8, #0x1d9
   127f0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   127f4:	add	x1, x1, #0x1df
   127f8:	mov	x2, x0
   127fc:	mov	x0, x8
   12800:	b	8ea0 <_Py_BuildValue_SizeT@plt>
   12804:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   12808:	add	x0, x0, #0xda5
   1280c:	b	8ea0 <_Py_BuildValue_SizeT@plt>
   12810:	stp	x29, x30, [sp, #-32]!
   12814:	str	x19, [sp, #16]
   12818:	mov	x29, sp
   1281c:	mov	x19, x0
   12820:	ldr	x0, [x0, #16]
   12824:	cbz	x0, 12840 <PyInit__testcapi@@Base+0x9684>
   12828:	str	xzr, [x19, #16]
   1282c:	ldr	x8, [x0]
   12830:	subs	x8, x8, #0x1
   12834:	str	x8, [x0]
   12838:	b.ne	12840 <PyInit__testcapi@@Base+0x9684>  // b.any
   1283c:	bl	8560 <_Py_Dealloc@plt>
   12840:	ldr	x8, [x19, #8]
   12844:	mov	x0, x19
   12848:	ldr	x19, [sp, #16]
   1284c:	ldr	x1, [x8, #320]
   12850:	ldp	x29, x30, [sp], #32
   12854:	br	x1
   12858:	stp	x29, x30, [sp, #-32]!
   1285c:	str	x19, [sp, #16]
   12860:	mov	x29, sp
   12864:	mov	x8, x1
   12868:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   1286c:	mov	x19, x0
   12870:	add	x1, x1, #0x205
   12874:	add	x4, x29, #0x18
   12878:	mov	w2, #0x1                   	// #1
   1287c:	mov	w3, #0x1                   	// #1
   12880:	mov	x0, x8
   12884:	bl	8960 <PyArg_UnpackTuple@plt>
   12888:	cbz	w0, 128b8 <PyInit__testcapi@@Base+0x96fc>
   1288c:	ldr	x8, [x19, #304]
   12890:	mov	x0, x19
   12894:	mov	x1, xzr
   12898:	blr	x8
   1289c:	cbz	x0, 128bc <PyInit__testcapi@@Base+0x9700>
   128a0:	ldr	x8, [x29, #24]
   128a4:	ldr	x9, [x8]
   128a8:	add	x9, x9, #0x1
   128ac:	str	x9, [x8]
   128b0:	str	x8, [x0, #16]
   128b4:	b	128bc <PyInit__testcapi@@Base+0x9700>
   128b8:	mov	x0, xzr
   128bc:	ldr	x19, [sp, #16]
   128c0:	ldp	x29, x30, [sp], #32
   128c4:	ret
   128c8:	ldr	x0, [x0, #16]
   128cc:	ldr	x8, [x0]
   128d0:	add	x8, x8, #0x1
   128d4:	str	x8, [x0]
   128d8:	ret
   128dc:	stp	x29, x30, [sp, #-16]!
   128e0:	mov	x29, sp
   128e4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   128e8:	ldr	x8, [x8, #4064]
   128ec:	ldr	x8, [x8, #312]
   128f0:	blr	x8
   128f4:	str	wzr, [x0, #40]
   128f8:	ldp	x29, x30, [sp], #16
   128fc:	ret
   12900:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   12904:	ldr	x8, [x8, #4016]
   12908:	cmp	x1, x8
   1290c:	b.eq	12918 <PyInit__testcapi@@Base+0x975c>  // b.none
   12910:	cbz	x1, 12918 <PyInit__testcapi@@Base+0x975c>
   12914:	b	86a0 <PyMethod_New@plt>
   12918:	ldr	x8, [x0]
   1291c:	add	x8, x8, #0x1
   12920:	str	x8, [x0]
   12924:	ret
   12928:	stp	x29, x30, [sp, #-16]!
   1292c:	mov	x29, sp
   12930:	ldr	x8, [x0, #304]
   12934:	mov	x1, xzr
   12938:	blr	x8
   1293c:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
   12940:	add	x8, x8, #0x950
   12944:	str	x8, [x0, #16]
   12948:	ldp	x29, x30, [sp], #16
   1294c:	ret
   12950:	ldr	x8, [x0, #16]
   12954:	cmp	x8, #0x0
   12958:	cset	w0, ne  // ne = any
   1295c:	b	88d0 <PyBool_FromLong@plt>
   12960:	ldr	x8, [x1]
   12964:	mov	x0, x1
   12968:	add	x8, x8, #0x1
   1296c:	str	x8, [x1]
   12970:	ret
   12974:	ldr	x8, [x0]
   12978:	add	x8, x8, #0x1
   1297c:	str	x8, [x0]
   12980:	ret
   12984:	stp	x29, x30, [sp, #-16]!
   12988:	mov	x29, sp
   1298c:	bl	8cf0 <_PyObject_New@plt>
   12990:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
   12994:	add	x8, x8, #0x950
   12998:	stp	xzr, x8, [x0, #16]
   1299c:	ldp	x29, x30, [sp], #16
   129a0:	ret
   129a4:	stp	x29, x30, [sp, #-32]!
   129a8:	str	x19, [sp, #16]
   129ac:	mov	x29, sp
   129b0:	mov	x19, x0
   129b4:	ldr	x0, [x0, #16]
   129b8:	cbz	x0, 129d4 <PyInit__testcapi@@Base+0x9818>
   129bc:	str	xzr, [x19, #16]
   129c0:	ldr	x8, [x0]
   129c4:	subs	x8, x8, #0x1
   129c8:	str	x8, [x0]
   129cc:	b.ne	129d4 <PyInit__testcapi@@Base+0x9818>  // b.any
   129d0:	bl	8560 <_Py_Dealloc@plt>
   129d4:	ldr	x8, [x19, #8]
   129d8:	mov	x0, x19
   129dc:	ldr	x19, [sp, #16]
   129e0:	ldr	x1, [x8, #320]
   129e4:	ldp	x29, x30, [sp], #32
   129e8:	br	x1
   129ec:	ldr	x1, [x0, #16]
   129f0:	mov	w0, #0x1                   	// #1
   129f4:	b	9040 <PyTuple_Pack@plt>
   129f8:	stp	x29, x30, [sp, #-32]!
   129fc:	str	x19, [sp, #16]
   12a00:	mov	x29, sp
   12a04:	adrp	x0, 28000 <PyInit__testcapi@@Base+0x1ee44>
   12a08:	add	x0, x0, #0x7e0
   12a0c:	mov	x19, x1
   12a10:	bl	8cf0 <_PyObject_New@plt>
   12a14:	cbz	x0, 12a28 <PyInit__testcapi@@Base+0x986c>
   12a18:	ldr	x8, [x19]
   12a1c:	add	x8, x8, #0x1
   12a20:	str	x8, [x19]
   12a24:	str	x19, [x0, #16]
   12a28:	ldr	x19, [sp, #16]
   12a2c:	ldp	x29, x30, [sp], #32
   12a30:	ret
   12a34:	stp	x29, x30, [sp, #-16]!
   12a38:	mov	x29, sp
   12a3c:	adrp	x0, 28000 <PyInit__testcapi@@Base+0x1ee44>
   12a40:	add	x0, x0, #0xb20
   12a44:	ldr	x8, [x0]
   12a48:	mov	x1, xzr
   12a4c:	add	x8, x8, #0x1
   12a50:	str	x8, [x0]
   12a54:	bl	8580 <PyErr_SetObject@plt>
   12a58:	mov	w0, #0xffffffff            	// #-1
   12a5c:	ldp	x29, x30, [sp], #16
   12a60:	ret
   12a64:	mov	w8, #0xa                   	// #10
   12a68:	str	w8, [x0, #16]
   12a6c:	mov	w0, wzr
   12a70:	ret
   12a74:	stp	x29, x30, [sp, #-32]!
   12a78:	stp	x20, x19, [sp, #16]
   12a7c:	mov	x29, sp
   12a80:	ldr	x19, [x0, #8]
   12a84:	mov	x20, x0
   12a88:	bl	9070 <PyObject_GC_UnTrack@plt>
   12a8c:	mov	x0, x20
   12a90:	bl	8590 <PyObject_GC_Del@plt>
   12a94:	ldr	x8, [x19]
   12a98:	subs	x8, x8, #0x1
   12a9c:	str	x8, [x19]
   12aa0:	b.eq	12ab0 <PyInit__testcapi@@Base+0x98f4>  // b.none
   12aa4:	ldp	x20, x19, [sp, #16]
   12aa8:	ldp	x29, x30, [sp], #32
   12aac:	ret
   12ab0:	mov	x0, x19
   12ab4:	ldp	x20, x19, [sp, #16]
   12ab8:	ldp	x29, x30, [sp], #32
   12abc:	b	8560 <_Py_Dealloc@plt>
   12ac0:	stp	x29, x30, [sp, #-32]!
   12ac4:	str	x19, [sp, #16]
   12ac8:	mov	x29, sp
   12acc:	ldr	x19, [x0, #8]
   12ad0:	bl	87c0 <PyObject_Free@plt>
   12ad4:	ldr	x8, [x19]
   12ad8:	subs	x8, x8, #0x1
   12adc:	str	x8, [x19]
   12ae0:	b.eq	12af0 <PyInit__testcapi@@Base+0x9934>  // b.none
   12ae4:	ldr	x19, [sp, #16]
   12ae8:	ldp	x29, x30, [sp], #32
   12aec:	ret
   12af0:	mov	x0, x19
   12af4:	ldr	x19, [sp, #16]
   12af8:	ldp	x29, x30, [sp], #32
   12afc:	b	8560 <_Py_Dealloc@plt>
   12b00:	mov	w8, #0xa                   	// #10
   12b04:	mov	w9, #0x14                  	// #20
   12b08:	str	w8, [x0, #16]
   12b0c:	str	w9, [x0, #24]
   12b10:	mov	w0, wzr
   12b14:	ret
   12b18:	stp	x29, x30, [sp, #-48]!
   12b1c:	str	x21, [sp, #16]
   12b20:	stp	x20, x19, [sp, #32]
   12b24:	mov	x29, sp
   12b28:	mov	x20, x0
   12b2c:	ldr	x0, [x0, #8]
   12b30:	mov	x21, x1
   12b34:	mov	w1, #0x30                  	// #48
   12b38:	mov	x19, x2
   12b3c:	bl	85a0 <PyType_GetSlot@plt>
   12b40:	mov	w1, #0x3c                  	// #60
   12b44:	bl	85a0 <PyType_GetSlot@plt>
   12b48:	mov	x8, x0
   12b4c:	mov	x0, x20
   12b50:	mov	x1, x21
   12b54:	mov	x2, x19
   12b58:	blr	x8
   12b5c:	ldp	x20, x19, [sp, #32]
   12b60:	ldr	x21, [sp, #16]
   12b64:	mov	w0, wzr
   12b68:	ldp	x29, x30, [sp], #48
   12b6c:	ret
   12b70:	sub	sp, sp, #0x40
   12b74:	stp	x29, x30, [sp, #16]
   12b78:	str	x21, [sp, #32]
   12b7c:	stp	x20, x19, [sp, #48]
   12b80:	add	x29, sp, #0x10
   12b84:	mov	x21, x0
   12b88:	add	x0, x29, #0x18
   12b8c:	add	x1, sp, #0x8
   12b90:	mov	x2, sp
   12b94:	bl	8ce0 <PyErr_Fetch@plt>
   12b98:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   12b9c:	add	x0, x0, #0x738
   12ba0:	bl	89f0 <PyState_FindModule@plt>
   12ba4:	cbz	x0, 12cb8 <PyInit__testcapi@@Base+0x9afc>
   12ba8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12bac:	add	x1, x1, #0x2c2
   12bb0:	mov	x19, x0
   12bb4:	bl	84a0 <PyObject_GetAttrString@plt>
   12bb8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12bbc:	mov	x20, x0
   12bc0:	add	x1, x1, #0x29f
   12bc4:	mov	x0, x19
   12bc8:	bl	84a0 <PyObject_GetAttrString@plt>
   12bcc:	mov	x19, x0
   12bd0:	cbz	x20, 12c58 <PyInit__testcapi@@Base+0x9a9c>
   12bd4:	cbz	x19, 12c58 <PyInit__testcapi@@Base+0x9a9c>
   12bd8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12bdc:	add	x1, x1, #0x2e1
   12be0:	mov	x0, x21
   12be4:	mov	x2, x19
   12be8:	bl	8510 <PyObject_SetAttrString@plt>
   12bec:	tbnz	w0, #31, 12c64 <PyInit__testcapi@@Base+0x9aa8>
   12bf0:	ldr	x0, [x20]
   12bf4:	bl	87f0 <PyLong_FromSsize_t@plt>
   12bf8:	mov	x21, x0
   12bfc:	cbz	x0, 12c68 <PyInit__testcapi@@Base+0x9aac>
   12c00:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12c04:	add	x1, x1, #0x2eb
   12c08:	mov	x0, x20
   12c0c:	mov	x2, x21
   12c10:	bl	8510 <PyObject_SetAttrString@plt>
   12c14:	tbnz	w0, #31, 12c68 <PyInit__testcapi@@Base+0x9aac>
   12c18:	ldr	x8, [x21]
   12c1c:	subs	x8, x8, #0x1
   12c20:	str	x8, [x21]
   12c24:	b.ne	12c30 <PyInit__testcapi@@Base+0x9a74>  // b.any
   12c28:	mov	x0, x21
   12c2c:	bl	8560 <_Py_Dealloc@plt>
   12c30:	ldr	x0, [x19]
   12c34:	bl	87f0 <PyLong_FromSsize_t@plt>
   12c38:	mov	x21, x0
   12c3c:	cbz	x0, 12c68 <PyInit__testcapi@@Base+0x9aac>
   12c40:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12c44:	add	x1, x1, #0x2eb
   12c48:	mov	x0, x19
   12c4c:	mov	x2, x21
   12c50:	bl	8510 <PyObject_SetAttrString@plt>
   12c54:	b	12c68 <PyInit__testcapi@@Base+0x9aac>
   12c58:	mov	x21, xzr
   12c5c:	cbnz	x20, 12c68 <PyInit__testcapi@@Base+0x9aac>
   12c60:	b	12c80 <PyInit__testcapi@@Base+0x9ac4>
   12c64:	mov	x21, xzr
   12c68:	ldr	x8, [x20]
   12c6c:	subs	x8, x8, #0x1
   12c70:	str	x8, [x20]
   12c74:	b.ne	12c80 <PyInit__testcapi@@Base+0x9ac4>  // b.any
   12c78:	mov	x0, x20
   12c7c:	bl	8560 <_Py_Dealloc@plt>
   12c80:	cbz	x19, 12c9c <PyInit__testcapi@@Base+0x9ae0>
   12c84:	ldr	x8, [x19]
   12c88:	subs	x8, x8, #0x1
   12c8c:	str	x8, [x19]
   12c90:	b.ne	12c9c <PyInit__testcapi@@Base+0x9ae0>  // b.any
   12c94:	mov	x0, x19
   12c98:	bl	8560 <_Py_Dealloc@plt>
   12c9c:	cbz	x21, 12cb8 <PyInit__testcapi@@Base+0x9afc>
   12ca0:	ldr	x8, [x21]
   12ca4:	subs	x8, x8, #0x1
   12ca8:	str	x8, [x21]
   12cac:	b.ne	12cb8 <PyInit__testcapi@@Base+0x9afc>  // b.any
   12cb0:	mov	x0, x21
   12cb4:	bl	8560 <_Py_Dealloc@plt>
   12cb8:	ldr	x0, [x29, #24]
   12cbc:	ldp	x2, x1, [sp]
   12cc0:	bl	8380 <PyErr_Restore@plt>
   12cc4:	ldp	x20, x19, [sp, #48]
   12cc8:	ldr	x21, [sp, #32]
   12ccc:	ldp	x29, x30, [sp, #16]
   12cd0:	add	sp, sp, #0x40
   12cd4:	ret

Disassembly of section .fini:

0000000000012cd8 <.fini>:
   12cd8:	stp	x29, x30, [sp, #-16]!
   12cdc:	mov	x29, sp
   12ce0:	ldp	x29, x30, [sp], #16
   12ce4:	ret
