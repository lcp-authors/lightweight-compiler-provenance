In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMBitstreamReader.a_clang_-Os:

BitstreamReader.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>:
       0:	sub	sp, sp, #0xd0
       4:	stp	x29, x30, [sp, #144]
       8:	str	x23, [sp, #160]
       c:	stp	x22, x21, [sp, #176]
      10:	stp	x20, x19, [sp, #192]
      14:	add	x29, sp, #0x90
      18:	mov	x20, x0
      1c:	mov	x19, x8
      20:	ldr	w8, [x20, #36]
      24:	mov	w22, w1
      28:	add	x0, x0, #0x40
      2c:	add	x9, sp, #0x30
      30:	add	x1, sp, #0x30
      34:	mov	x21, x2
      38:	stp	xzr, xzr, [sp, #64]
      3c:	add	x23, x9, #0x8
      40:	str	w8, [sp, #48]
      44:	str	xzr, [sp, #56]
      48:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
      4c:	mov	x0, x23
      50:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
      54:	ldr	w8, [x20, #72]
      58:	cbz	w8, 2ac <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2ac>
      5c:	mov	x23, x20
      60:	ldr	q0, [x23, #40]!
      64:	ldr	x9, [x23, #24]
      68:	add	x8, x9, x8, lsl #5
      6c:	ldur	q1, [x8, #-24]
      70:	stur	q0, [x8, #-24]
      74:	ldr	x9, [x23, #16]
      78:	ldur	x10, [x8, #-8]
      7c:	stur	x9, [x8, #-8]
      80:	ldr	x0, [x23, #296]
      84:	str	q1, [x23]
      88:	str	x10, [x23, #16]
      8c:	cbz	x0, ac <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xac>
      90:	mov	w1, w22
      94:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
      98:	cbz	x0, ac <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xac>
      9c:	ldr	x1, [x20, #48]
      a0:	ldp	x2, x3, [x0, #8]
      a4:	mov	x0, x23
      a8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
      ac:	mov	x8, sp
      b0:	mov	w1, #0x4                   	// #4
      b4:	mov	x0, x20
      b8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
      bc:	ldrb	w9, [sp, #8]
      c0:	ubfiz	w10, w9, #1, #1
      c4:	and	w8, w9, #0xfffffffd
      c8:	orr	w10, w10, w8
      cc:	strb	w10, [sp, #8]
      d0:	tbnz	w9, #0, 19c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x19c>
      d4:	mov	x0, sp
      d8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
      dc:	ldr	w22, [x0]
      e0:	cmp	w22, #0x41
      e4:	str	w22, [x20, #36]
      e8:	b.cc	1b4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1b4>  // b.lo, b.ul, b.last
      ec:	bl	0 <_ZNSt3_V216generic_categoryEv>
      f0:	mov	w8, #0x54                  	// #84
      f4:	sturb	wzr, [x29, #-32]
      f8:	mov	w10, #0x1                   	// #1
      fc:	stp	xzr, xzr, [sp, #64]
     100:	str	w22, [sp, #32]
     104:	adrp	x11, 0 <_ZTVN4llvm18raw_string_ostreamE>
     108:	ldr	x11, [x11]
     10c:	stp	x8, x0, [x29, #-16]
     110:	str	w10, [sp, #80]
     114:	adrp	x10, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     118:	ldr	x10, [x10]
     11c:	sub	x9, x29, #0x30
     120:	adrp	x8, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     124:	add	x11, x11, #0x10
     128:	add	x8, x8, #0x0
     12c:	stp	x11, xzr, [sp, #48]
     130:	mov	w11, #0x40                  	// #64
     134:	str	x9, [sp, #88]
     138:	add	x20, x9, #0x10
     13c:	add	x9, x10, #0x10
     140:	add	x0, sp, #0x30
     144:	add	x1, sp, #0x10
     148:	stp	x20, xzr, [x29, #-48]
     14c:	stp	x9, x8, [sp, #16]
     150:	str	x11, [sp, #40]
     154:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     158:	ldr	x8, [sp, #72]
     15c:	ldr	x9, [sp, #56]
     160:	cmp	x8, x9
     164:	b.eq	170 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x170>  // b.none
     168:	add	x0, sp, #0x30
     16c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     170:	ldr	x0, [sp, #88]
     174:	sub	x1, x29, #0x10
     178:	mov	x8, x19
     17c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     180:	add	x0, sp, #0x30
     184:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     188:	ldur	x0, [x29, #-48]
     18c:	cmp	x0, x20
     190:	b.eq	28c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x28c>  // b.none
     194:	bl	0 <_ZdlPv>
     198:	b	28c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x28c>
     19c:	ldr	x9, [sp]
     1a0:	strb	w8, [sp, #8]
     1a4:	str	xzr, [sp]
     1a8:	orr	x8, x9, #0x1
     1ac:	str	x8, [x19]
     1b0:	b	28c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x28c>
     1b4:	ldr	w8, [x20, #32]
     1b8:	subs	w8, w8, #0x20
     1bc:	b.cc	1d4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1d4>  // b.lo, b.ul, b.last
     1c0:	ldr	x9, [x20, #24]
     1c4:	lsr	x8, x9, x8
     1c8:	str	x8, [x20, #24]
     1cc:	mov	w8, #0x20                  	// #32
     1d0:	b	1d8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1d8>
     1d4:	mov	w8, wzr
     1d8:	str	w8, [x20, #32]
     1dc:	add	x8, sp, #0x30
     1e0:	mov	w1, #0x20                  	// #32
     1e4:	mov	x0, x20
     1e8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     1ec:	ldrb	w9, [sp, #56]
     1f0:	ubfiz	w10, w9, #1, #1
     1f4:	and	w8, w9, #0xfffffffd
     1f8:	orr	w10, w10, w8
     1fc:	strb	w10, [sp, #56]
     200:	tbnz	w9, #0, 23c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x23c>
     204:	add	x0, sp, #0x30
     208:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     20c:	cbz	x21, 218 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x218>
     210:	ldr	x8, [x0]
     214:	str	w8, [x21]
     218:	ldr	w8, [x20, #36]
     21c:	cbz	w8, 254 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x254>
     220:	ldr	w8, [x20, #32]
     224:	cbnz	w8, 234 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x234>
     228:	ldp	x8, x9, [x20, #8]
     22c:	cmp	x8, x9
     230:	b.ls	268 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x268>  // b.plast
     234:	mov	w8, #0x1                   	// #1
     238:	b	24c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x24c>
     23c:	ldr	x9, [sp, #48]
     240:	strb	w8, [sp, #56]
     244:	str	xzr, [sp, #48]
     248:	orr	x8, x9, #0x1
     24c:	str	x8, [x19]
     250:	b	284 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x284>
     254:	bl	0 <_ZNSt3_V216generic_categoryEv>
     258:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     25c:	mov	x1, x0
     260:	add	x2, x2, #0x0
     264:	b	278 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x278>
     268:	bl	0 <_ZNSt3_V216generic_categoryEv>
     26c:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     270:	mov	x1, x0
     274:	add	x2, x2, #0x0
     278:	mov	w0, #0x54                  	// #84
     27c:	mov	x8, x19
     280:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     284:	add	x0, sp, #0x30
     288:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     28c:	mov	x0, sp
     290:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     294:	ldp	x20, x19, [sp, #192]
     298:	ldp	x22, x21, [sp, #176]
     29c:	ldr	x23, [sp, #160]
     2a0:	ldp	x29, x30, [sp, #144]
     2a4:	add	sp, sp, #0xd0
     2a8:	ret
     2ac:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     2b0:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     2b4:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     2b8:	add	x0, x0, #0x0
     2bc:	add	x1, x1, #0x0
     2c0:	add	x3, x3, #0x0
     2c4:	mov	w2, #0xa7                  	// #167
     2c8:	bl	0 <__assert_fail>

00000000000002cc <_ZN4llvm15BitstreamCursor10skipRecordEj>:
     2cc:	sub	sp, sp, #0xe0
     2d0:	stp	x29, x30, [sp, #128]
     2d4:	str	x27, [sp, #144]
     2d8:	stp	x26, x25, [sp, #160]
     2dc:	stp	x24, x23, [sp, #176]
     2e0:	stp	x22, x21, [sp, #192]
     2e4:	stp	x20, x19, [sp, #208]
     2e8:	add	x29, sp, #0x80
     2ec:	mov	x20, x0
     2f0:	cmp	w1, #0x3
     2f4:	mov	x19, x8
     2f8:	b.ne	3b8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xec>  // b.any
     2fc:	sub	x8, x29, #0x10
     300:	mov	w1, #0x6                   	// #6
     304:	mov	x0, x20
     308:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     30c:	ldurb	w9, [x29, #-8]
     310:	ubfiz	w10, w9, #1, #1
     314:	and	w8, w9, #0xfffffffd
     318:	orr	w10, w10, w8
     31c:	sturb	w10, [x29, #-8]
     320:	tbnz	w9, #0, 440 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x174>
     324:	sub	x0, x29, #0x10
     328:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     32c:	ldr	w21, [x0]
     330:	sub	x8, x29, #0x20
     334:	mov	w1, #0x6                   	// #6
     338:	mov	x0, x20
     33c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     340:	ldurb	w22, [x29, #-24]
     344:	sub	x0, x29, #0x20
     348:	ubfiz	w8, w22, #1, #1
     34c:	and	w9, w22, #0xfffffffd
     350:	orr	w8, w8, w9
     354:	sturb	w8, [x29, #-24]
     358:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     35c:	tbnz	w22, #0, 8d8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x60c>
     360:	ldr	w22, [x0]
     364:	cbz	w22, 3a0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd4>
     368:	sub	x8, x29, #0x30
     36c:	mov	w1, #0x6                   	// #6
     370:	mov	x0, x20
     374:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     378:	ldurb	w9, [x29, #-40]
     37c:	ubfiz	w10, w9, #1, #1
     380:	and	w8, w9, #0xfffffffd
     384:	orr	w10, w10, w8
     388:	sturb	w10, [x29, #-40]
     38c:	tbnz	w9, #0, 958 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x68c>
     390:	sub	x0, x29, #0x30
     394:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     398:	subs	w22, w22, #0x1
     39c:	b.ne	368 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x9c>  // b.any
     3a0:	ldrb	w8, [x19, #8]
     3a4:	str	w21, [x19]
     3a8:	and	w8, w8, #0xfc
     3ac:	orr	w8, w8, #0x2
     3b0:	strb	w8, [x19, #8]
     3b4:	b	984 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6b8>
     3b8:	ldp	x8, x10, [x20, #40]
     3bc:	sub	w9, w1, #0x4
     3c0:	sub	x10, x10, x8
     3c4:	cmp	x9, x10, asr #4
     3c8:	b.cs	a08 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x73c>  // b.hs, b.nlast
     3cc:	lsl	x9, x9, #4
     3d0:	ldr	x22, [x8, x9]
     3d4:	ldr	w24, [x22, #8]
     3d8:	cbz	w24, 8b8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5ec>
     3dc:	ldr	x21, [x22]
     3e0:	ldrb	w8, [x21, #8]
     3e4:	tbnz	w8, #0, 470 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1a4>
     3e8:	mov	x0, x21
     3ec:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     3f0:	cmp	w0, #0x3
     3f4:	b.eq	408 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x13c>  // b.none
     3f8:	mov	x0, x21
     3fc:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     400:	cmp	w0, #0x5
     404:	b.ne	8f4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x628>  // b.any
     408:	bl	0 <_ZNSt3_V216generic_categoryEv>
     40c:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     410:	mov	x1, x0
     414:	add	x2, x2, #0x0
     418:	add	x8, sp, #0x40
     41c:	mov	w0, #0x54                  	// #84
     420:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     424:	add	x1, sp, #0x40
     428:	mov	x0, x19
     42c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     430:	ldr	x8, [sp, #64]
     434:	cbz	x8, 994 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6c8>
     438:	add	x0, sp, #0x40
     43c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     440:	ldur	x9, [x29, #-16]
     444:	sturb	w8, [x29, #-8]
     448:	add	x1, x29, #0x18
     44c:	mov	x0, x19
     450:	orr	x8, x9, #0x1
     454:	stur	xzr, [x29, #-16]
     458:	str	x8, [x29, #24]
     45c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     460:	ldr	x8, [x29, #24]
     464:	cbz	x8, 98c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6c0>
     468:	add	x0, x29, #0x18
     46c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     470:	ldr	x23, [x21]
     474:	cmp	w24, #0x2
     478:	b.cc	940 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x674>  // b.lo, b.ul, b.last
     47c:	mov	w25, #0x1                   	// #1
     480:	ldr	x8, [x22]
     484:	add	x21, x8, w25, uxtw #4
     488:	ldrb	w8, [x21, #8]
     48c:	tbnz	w8, #0, 8a0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5d4>
     490:	mov	x0, x21
     494:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     498:	cmp	w0, #0x3
     49c:	b.eq	4b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1e4>  // b.none
     4a0:	mov	x0, x21
     4a4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     4a8:	cmp	w0, #0x5
     4ac:	b.ne	600 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x334>  // b.any
     4b0:	mov	x0, x21
     4b4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     4b8:	cmp	w0, #0x3
     4bc:	b.ne	59c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x2d0>  // b.any
     4c0:	sub	x8, x29, #0x10
     4c4:	mov	w1, #0x6                   	// #6
     4c8:	mov	x0, x20
     4cc:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     4d0:	ldurb	w9, [x29, #-8]
     4d4:	ubfiz	w10, w9, #1, #1
     4d8:	and	w8, w9, #0xfffffffd
     4dc:	orr	w10, w10, w8
     4e0:	sturb	w10, [x29, #-8]
     4e4:	tbnz	w9, #0, 630 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x364>
     4e8:	sub	x0, x29, #0x10
     4ec:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     4f0:	add	w8, w25, #0x2
     4f4:	cmp	w8, w24
     4f8:	b.ne	a14 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x748>  // b.any
     4fc:	ldr	w8, [x22, #8]
     500:	add	w25, w25, #0x1
     504:	cmp	w8, w25
     508:	b.ls	8b8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5ec>  // b.plast
     50c:	ldr	x8, [x22]
     510:	ldr	w26, [x0]
     514:	add	x21, x8, w25, uxtw #4
     518:	mov	x0, x21
     51c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     520:	cmp	w0, #0x1
     524:	b.eq	7b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x4e4>  // b.none
     528:	cmp	w0, #0x2
     52c:	b.eq	754 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x488>  // b.none
     530:	cmp	w0, #0x4
     534:	b.ne	a34 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x768>  // b.any
     538:	ldr	x8, [x20, #16]
     53c:	ldr	w9, [x20, #32]
     540:	add	w10, w26, w26, lsl #1
     544:	lsl	w10, w10, #1
     548:	add	x8, x10, x8, lsl #3
     54c:	sub	x1, x8, x9
     550:	sub	x8, x29, #0x20
     554:	mov	x0, x20
     558:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     55c:	ldur	x9, [x29, #-32]
     560:	tst	x9, #0xfffffffffffffffe
     564:	and	x10, x9, #0xfffffffffffffffe
     568:	cset	w8, ne  // ne = any
     56c:	orr	x8, x10, x8
     570:	stur	x8, [x29, #-32]
     574:	cbz	x10, 838 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x56c>
     578:	orr	x8, x9, #0x1
     57c:	add	x1, sp, #0x10
     580:	mov	x0, x19
     584:	str	x8, [sp, #16]
     588:	stur	xzr, [x29, #-32]
     58c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     590:	ldr	x8, [sp, #16]
     594:	cbz	x8, 828 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x55c>
     598:	b	a54 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x788>
     59c:	mov	x0, x21
     5a0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     5a4:	cmp	w0, #0x5
     5a8:	b.ne	9e8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x71c>  // b.any
     5ac:	sub	x8, x29, #0x10
     5b0:	mov	w1, #0x6                   	// #6
     5b4:	mov	x0, x20
     5b8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     5bc:	ldurb	w9, [x29, #-8]
     5c0:	ubfiz	w10, w9, #1, #1
     5c4:	and	w8, w9, #0xfffffffd
     5c8:	orr	w10, w10, w8
     5cc:	sturb	w10, [x29, #-8]
     5d0:	tbnz	w9, #0, 65c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x390>
     5d4:	sub	x0, x29, #0x10
     5d8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     5dc:	ldr	w9, [x20, #32]
     5e0:	ldr	w8, [x0]
     5e4:	subs	w9, w9, #0x20
     5e8:	b.cc	6c4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3f8>  // b.lo, b.ul, b.last
     5ec:	ldr	x10, [x20, #24]
     5f0:	lsr	x9, x10, x9
     5f4:	str	x9, [x20, #24]
     5f8:	mov	w9, #0x20                  	// #32
     5fc:	b	6c8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3fc>
     600:	sub	x8, x29, #0x10
     604:	mov	x0, x20
     608:	mov	x1, x21
     60c:	bl	ad4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     610:	ldurb	w9, [x29, #-8]
     614:	ubfiz	w10, w9, #1, #1
     618:	and	w8, w9, #0xfffffffd
     61c:	orr	w10, w10, w8
     620:	sturb	w10, [x29, #-8]
     624:	tbnz	w9, #0, 688 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3bc>
     628:	mov	w21, #0x7                   	// #7
     62c:	b	6b4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3e8>
     630:	ldur	x9, [x29, #-16]
     634:	sturb	w8, [x29, #-8]
     638:	add	x1, sp, #0x28
     63c:	mov	x0, x19
     640:	orr	x8, x9, #0x1
     644:	stur	xzr, [x29, #-16]
     648:	str	x8, [sp, #40]
     64c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     650:	ldr	x8, [sp, #40]
     654:	cbz	x8, 888 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5bc>
     658:	b	a44 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x778>
     65c:	ldur	x9, [x29, #-16]
     660:	sturb	w8, [x29, #-8]
     664:	add	x1, sp, #0x8
     668:	mov	x0, x19
     66c:	orr	x8, x9, #0x1
     670:	stur	xzr, [x29, #-16]
     674:	str	x8, [sp, #8]
     678:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     67c:	ldr	x8, [sp, #8]
     680:	cbz	x8, 888 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5bc>
     684:	b	a5c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x790>
     688:	ldur	x9, [x29, #-16]
     68c:	sturb	w8, [x29, #-8]
     690:	add	x1, sp, #0x30
     694:	mov	x0, x19
     698:	orr	x8, x9, #0x1
     69c:	stur	xzr, [x29, #-16]
     6a0:	str	x8, [sp, #48]
     6a4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     6a8:	ldr	x8, [sp, #48]
     6ac:	cbnz	x8, a64 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x798>
     6b0:	mov	w21, #0x1                   	// #1
     6b4:	sub	x0, x29, #0x10
     6b8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     6bc:	cbnz	w21, 898 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5cc>
     6c0:	b	8a0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5d4>
     6c4:	mov	w9, wzr
     6c8:	lsl	w11, w8, #3
     6cc:	ldp	x8, x10, [x20, #8]
     6d0:	add	w11, w11, #0x18
     6d4:	and	w11, w11, #0xffffffe0
     6d8:	str	w9, [x20, #32]
     6dc:	lsl	x10, x10, #3
     6e0:	sub	x10, x10, x9
     6e4:	add	x1, x10, x11
     6e8:	cmp	x8, x1, lsr #3
     6ec:	b.cs	6fc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x430>  // b.hs, b.nlast
     6f0:	str	x8, [x20, #16]
     6f4:	mov	w21, #0x5                   	// #5
     6f8:	b	88c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5c0>
     6fc:	sub	x8, x29, #0x20
     700:	mov	x0, x20
     704:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     708:	ldur	x9, [x29, #-32]
     70c:	tst	x9, #0xfffffffffffffffe
     710:	and	x10, x9, #0xfffffffffffffffe
     714:	cset	w8, ne  // ne = any
     718:	orr	x8, x10, x8
     71c:	stur	x8, [x29, #-32]
     720:	cbz	x10, 84c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x580>
     724:	orr	x8, x9, #0x1
     728:	mov	x1, sp
     72c:	mov	x0, x19
     730:	str	x8, [sp]
     734:	stur	xzr, [x29, #-32]
     738:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     73c:	ldr	x8, [sp]
     740:	cbnz	x8, a6c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7a0>
     744:	ldur	x8, [x29, #-32]
     748:	mov	w21, #0x1                   	// #1
     74c:	cbz	x8, 88c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5c0>
     750:	b	a4c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x780>
     754:	mov	x0, x21
     758:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     75c:	and	x8, x0, #0xffffffff
     760:	cmp	x8, #0x40
     764:	b.hi	a74 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7a8>  // b.pmore
     768:	cbz	w26, 844 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x578>
     76c:	mov	x0, x21
     770:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     774:	mov	x1, x0
     778:	sub	x8, x29, #0x20
     77c:	mov	x0, x20
     780:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     784:	ldurb	w9, [x29, #-24]
     788:	ubfiz	w10, w9, #1, #1
     78c:	and	w8, w9, #0xfffffffd
     790:	orr	w10, w10, w8
     794:	sturb	w10, [x29, #-24]
     798:	tbnz	w9, #0, 858 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x58c>
     79c:	sub	x0, x29, #0x20
     7a0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     7a4:	subs	w26, w26, #0x1
     7a8:	b.ne	76c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x4a0>  // b.any
     7ac:	b	844 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x578>
     7b0:	mov	x0, x21
     7b4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     7b8:	and	x8, x0, #0xffffffff
     7bc:	cmp	x8, #0x41
     7c0:	b.cs	a94 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7c8>  // b.hs, b.nlast
     7c4:	ldr	x8, [x20, #16]
     7c8:	ldr	w9, [x20, #32]
     7cc:	mov	x0, x21
     7d0:	lsl	x8, x8, #3
     7d4:	sub	x27, x8, x9
     7d8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     7dc:	madd	x1, x0, x26, x27
     7e0:	sub	x8, x29, #0x20
     7e4:	mov	x0, x20
     7e8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     7ec:	ldur	x9, [x29, #-32]
     7f0:	tst	x9, #0xfffffffffffffffe
     7f4:	and	x10, x9, #0xfffffffffffffffe
     7f8:	cset	w8, ne  // ne = any
     7fc:	orr	x8, x10, x8
     800:	stur	x8, [x29, #-32]
     804:	cbz	x10, 838 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x56c>
     808:	orr	x8, x9, #0x1
     80c:	add	x1, sp, #0x20
     810:	mov	x0, x19
     814:	str	x8, [sp, #32]
     818:	stur	xzr, [x29, #-32]
     81c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     820:	ldr	x8, [sp, #32]
     824:	cbnz	x8, ab4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7e8>
     828:	ldur	x8, [x29, #-32]
     82c:	mov	w9, #0x1                   	// #1
     830:	cbz	x8, 840 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x574>
     834:	b	a4c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x780>
     838:	mov	w9, wzr
     83c:	cbnz	x8, a4c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x780>
     840:	cbnz	w9, 888 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5bc>
     844:	mov	w21, #0x7                   	// #7
     848:	b	88c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5c0>
     84c:	mov	w21, wzr
     850:	cbz	x8, 88c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5c0>
     854:	b	a4c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x780>
     858:	ldur	x9, [x29, #-32]
     85c:	sturb	w8, [x29, #-24]
     860:	add	x1, sp, #0x18
     864:	mov	x0, x19
     868:	orr	x8, x9, #0x1
     86c:	stur	xzr, [x29, #-32]
     870:	str	x8, [sp, #24]
     874:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     878:	ldr	x8, [sp, #24]
     87c:	cbnz	x8, abc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7f0>
     880:	sub	x0, x29, #0x20
     884:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     888:	mov	w21, #0x1                   	// #1
     88c:	sub	x0, x29, #0x10
     890:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     894:	cbz	w21, 8a0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5d4>
     898:	cmp	w21, #0x7
     89c:	b.ne	938 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x66c>  // b.any
     8a0:	add	w25, w25, #0x1
     8a4:	cmp	w25, w24
     8a8:	b.cs	940 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x674>  // b.hs, b.nlast
     8ac:	ldr	w8, [x22, #8]
     8b0:	cmp	w8, w25
     8b4:	b.hi	480 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1b4>  // b.pmore
     8b8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     8bc:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     8c0:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     8c4:	add	x0, x0, #0x0
     8c8:	add	x1, x1, #0x0
     8cc:	add	x3, x3, #0x0
     8d0:	mov	w2, #0x99                  	// #153
     8d4:	bl	0 <__assert_fail>
     8d8:	ldrb	w8, [x19, #8]
     8dc:	and	w8, w8, #0xfc
     8e0:	orr	w8, w8, #0x2
     8e4:	strb	w8, [x19, #8]
     8e8:	ldr	w8, [x0]
     8ec:	str	w8, [x19]
     8f0:	b	984 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6b8>
     8f4:	sub	x8, x29, #0x10
     8f8:	mov	x0, x20
     8fc:	mov	x1, x21
     900:	bl	ad4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     904:	ldurb	w9, [x29, #-8]
     908:	ubfiz	w10, w9, #1, #1
     90c:	and	w8, w9, #0xfffffffd
     910:	orr	w10, w10, w8
     914:	sturb	w10, [x29, #-8]
     918:	tbnz	w9, #0, 9b4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6e8>
     91c:	sub	x0, x29, #0x10
     920:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     924:	ldr	x23, [x0]
     928:	sub	x0, x29, #0x10
     92c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     930:	ldr	w24, [x22, #8]
     934:	b	474 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1a8>
     938:	cmp	w21, #0x5
     93c:	b.ne	994 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6c8>  // b.any
     940:	ldrb	w8, [x19, #8]
     944:	str	w23, [x19]
     948:	and	w8, w8, #0xfc
     94c:	orr	w8, w8, #0x2
     950:	strb	w8, [x19, #8]
     954:	b	994 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6c8>
     958:	ldur	x9, [x29, #-48]
     95c:	sturb	w8, [x29, #-40]
     960:	sub	x1, x29, #0x38
     964:	mov	x0, x19
     968:	orr	x8, x9, #0x1
     96c:	stp	x8, xzr, [x29, #-56]
     970:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     974:	ldur	x8, [x29, #-56]
     978:	cbnz	x8, ac4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7f8>
     97c:	sub	x0, x29, #0x30
     980:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     984:	sub	x0, x29, #0x20
     988:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     98c:	sub	x0, x29, #0x10
     990:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     994:	ldp	x20, x19, [sp, #208]
     998:	ldp	x22, x21, [sp, #192]
     99c:	ldp	x24, x23, [sp, #176]
     9a0:	ldp	x26, x25, [sp, #160]
     9a4:	ldr	x27, [sp, #144]
     9a8:	ldp	x29, x30, [sp, #128]
     9ac:	add	sp, sp, #0xe0
     9b0:	ret
     9b4:	ldur	x9, [x29, #-16]
     9b8:	sturb	w8, [x29, #-8]
     9bc:	add	x1, sp, #0x38
     9c0:	mov	x0, x19
     9c4:	orr	x8, x9, #0x1
     9c8:	stur	xzr, [x29, #-16]
     9cc:	str	x8, [sp, #56]
     9d0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     9d4:	ldr	x8, [sp, #56]
     9d8:	cbnz	x8, acc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x800>
     9dc:	sub	x0, x29, #0x10
     9e0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     9e4:	b	994 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6c8>
     9e8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     9ec:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     9f0:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     9f4:	add	x0, x0, #0x0
     9f8:	add	x1, x1, #0x0
     9fc:	add	x3, x3, #0x0
     a00:	mov	w2, #0xb4                  	// #180
     a04:	bl	0 <__assert_fail>
     a08:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     a0c:	add	x0, x0, #0x0
     a10:	b	a3c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x770>
     a14:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     a18:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     a1c:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     a20:	add	x0, x0, #0x0
     a24:	add	x1, x1, #0x0
     a28:	add	x3, x3, #0x0
     a2c:	mov	w2, #0x95                  	// #149
     a30:	bl	0 <__assert_fail>
     a34:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     a38:	add	x0, x0, #0x0
     a3c:	mov	w1, #0x1                   	// #1
     a40:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     a44:	add	x0, sp, #0x28
     a48:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     a4c:	sub	x0, x29, #0x20
     a50:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     a54:	add	x0, sp, #0x10
     a58:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     a5c:	add	x0, sp, #0x8
     a60:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     a64:	add	x0, sp, #0x30
     a68:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     a6c:	mov	x0, sp
     a70:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     a74:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     a78:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     a7c:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     a80:	add	x0, x0, #0x0
     a84:	add	x1, x1, #0x0
     a88:	add	x3, x3, #0x0
     a8c:	mov	w2, #0xa4                  	// #164
     a90:	bl	0 <__assert_fail>
     a94:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     a98:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     a9c:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     aa0:	add	x0, x0, #0x0
     aa4:	add	x1, x1, #0x0
     aa8:	add	x3, x3, #0x0
     aac:	mov	w2, #0x9e                  	// #158
     ab0:	bl	0 <__assert_fail>
     ab4:	add	x0, sp, #0x20
     ab8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     abc:	add	x0, sp, #0x18
     ac0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     ac4:	sub	x0, x29, #0x38
     ac8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     acc:	add	x0, sp, #0x38
     ad0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000ad4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>:
     ad4:	sub	sp, sp, #0x50
     ad8:	stp	x29, x30, [sp, #32]
     adc:	str	x21, [sp, #48]
     ae0:	stp	x20, x19, [sp, #64]
     ae4:	add	x29, sp, #0x20
     ae8:	ldrb	w9, [x1, #8]
     aec:	tbnz	w9, #0, c70 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x19c>
     af0:	mov	x20, x0
     af4:	mov	x0, x1
     af8:	mov	x21, x1
     afc:	mov	x19, x8
     b00:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b04:	sub	w8, w0, #0x1
     b08:	cmp	w8, #0x4
     b0c:	b.hi	c90 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1bc>  // b.pmore
     b10:	adrp	x9, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b14:	add	x9, x9, #0x0
     b18:	adr	x10, b28 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x54>
     b1c:	ldrb	w11, [x9, x8]
     b20:	add	x10, x10, x11, lsl #2
     b24:	br	x10
     b28:	mov	x0, x21
     b2c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b30:	and	x8, x0, #0xffffffff
     b34:	cmp	x8, #0x41
     b38:	b.cs	ca8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1d4>  // b.hs, b.nlast
     b3c:	mov	x0, x21
     b40:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b44:	mov	x1, x0
     b48:	mov	x8, x19
     b4c:	mov	x0, x20
     b50:	ldp	x20, x19, [sp, #64]
     b54:	ldr	x21, [sp, #48]
     b58:	ldp	x29, x30, [sp, #32]
     b5c:	add	sp, sp, #0x50
     b60:	b	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b64:	mov	x0, x21
     b68:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b6c:	and	x8, x0, #0xffffffff
     b70:	cmp	x8, #0x41
     b74:	b.cs	cc8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1f4>  // b.hs, b.nlast
     b78:	mov	x0, x21
     b7c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b80:	mov	x1, x0
     b84:	mov	x8, x19
     b88:	mov	x0, x20
     b8c:	ldp	x20, x19, [sp, #64]
     b90:	ldr	x21, [sp, #48]
     b94:	ldp	x29, x30, [sp, #32]
     b98:	add	sp, sp, #0x50
     b9c:	b	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ba0:	mov	x8, sp
     ba4:	mov	w1, #0x6                   	// #6
     ba8:	mov	x0, x20
     bac:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     bb0:	add	x0, sp, #0x10
     bb4:	mov	x1, sp
     bb8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     bbc:	mov	x0, sp
     bc0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     bc4:	ldrb	w9, [sp, #24]
     bc8:	ubfiz	w10, w9, #1, #1
     bcc:	and	w8, w9, #0xfffffffd
     bd0:	orr	w10, w10, w8
     bd4:	strb	w10, [sp, #24]
     bd8:	tbnz	w9, #0, c14 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x140>
     bdc:	add	x0, sp, #0x10
     be0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     be4:	ldr	w8, [x0]
     be8:	cmp	w8, #0x40
     bec:	b.cs	ce8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x214>  // b.hs, b.nlast
     bf0:	ldrb	w9, [x19, #8]
     bf4:	adrp	x10, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     bf8:	add	x10, x10, #0x0
     bfc:	ldrb	w8, [x10, x8]
     c00:	and	w9, w9, #0xfc
     c04:	orr	w9, w9, #0x2
     c08:	strb	w9, [x19, #8]
     c0c:	str	x8, [x19]
     c10:	b	c3c <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x168>
     c14:	ldr	x9, [sp, #16]
     c18:	strb	w8, [sp, #24]
     c1c:	add	x1, x29, #0x18
     c20:	mov	x0, x19
     c24:	orr	x8, x9, #0x1
     c28:	str	xzr, [sp, #16]
     c2c:	str	x8, [x29, #24]
     c30:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c34:	ldr	x8, [x29, #24]
     c38:	cbnz	x8, d08 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x234>
     c3c:	add	x0, sp, #0x10
     c40:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c44:	ldp	x20, x19, [sp, #64]
     c48:	ldr	x21, [sp, #48]
     c4c:	ldp	x29, x30, [sp, #32]
     c50:	add	sp, sp, #0x50
     c54:	ret
     c58:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c5c:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c60:	add	x0, x0, #0x0
     c64:	add	x1, x1, #0x0
     c68:	mov	w2, #0x4b                  	// #75
     c6c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     c70:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c74:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c78:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c7c:	add	x0, x0, #0x0
     c80:	add	x1, x1, #0x0
     c84:	add	x3, x3, #0x0
     c88:	mov	w2, #0x45                  	// #69
     c8c:	bl	0 <__assert_fail>
     c90:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c94:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c98:	add	x0, x0, #0x0
     c9c:	add	x1, x1, #0x0
     ca0:	mov	w2, #0x58                  	// #88
     ca4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     ca8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     cac:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     cb0:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     cb4:	add	x0, x0, #0x0
     cb8:	add	x1, x1, #0x0
     cbc:	add	x3, x3, #0x0
     cc0:	mov	w2, #0x4d                  	// #77
     cc4:	bl	0 <__assert_fail>
     cc8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ccc:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     cd0:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     cd4:	add	x0, x0, #0x0
     cd8:	add	x1, x1, #0x0
     cdc:	add	x3, x3, #0x0
     ce0:	mov	w2, #0x50                  	// #80
     ce4:	bl	0 <__assert_fail>
     ce8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     cec:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     cf0:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     cf4:	add	x0, x0, #0x0
     cf8:	add	x1, x1, #0x0
     cfc:	add	x3, x3, #0x0
     d00:	mov	w2, #0x9d                  	// #157
     d04:	bl	0 <__assert_fail>
     d08:	add	x0, x29, #0x18
     d0c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000d10 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>:
     d10:	sub	sp, sp, #0xf0
     d14:	stp	x29, x30, [sp, #144]
     d18:	stp	x28, x27, [sp, #160]
     d1c:	stp	x26, x25, [sp, #176]
     d20:	stp	x24, x23, [sp, #192]
     d24:	stp	x22, x21, [sp, #208]
     d28:	stp	x20, x19, [sp, #224]
     d2c:	add	x29, sp, #0x90
     d30:	mov	x20, x2
     d34:	mov	x21, x0
     d38:	cmp	w1, #0x3
     d3c:	mov	x19, x8
     d40:	b.ne	e14 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x104>  // b.any
     d44:	sub	x8, x29, #0x10
     d48:	mov	w1, #0x6                   	// #6
     d4c:	mov	x0, x21
     d50:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d54:	ldurb	w9, [x29, #-8]
     d58:	ubfiz	w10, w9, #1, #1
     d5c:	and	w8, w9, #0xfffffffd
     d60:	orr	w10, w10, w8
     d64:	sturb	w10, [x29, #-8]
     d68:	tbnz	w9, #0, eb0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1a0>
     d6c:	sub	x0, x29, #0x10
     d70:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d74:	ldr	w22, [x0]
     d78:	sub	x8, x29, #0x28
     d7c:	mov	w1, #0x6                   	// #6
     d80:	mov	x0, x21
     d84:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d88:	ldurb	w9, [x29, #-32]
     d8c:	ubfiz	w10, w9, #1, #1
     d90:	and	w8, w9, #0xfffffffd
     d94:	orr	w10, w10, w8
     d98:	sturb	w10, [x29, #-32]
     d9c:	tbnz	w9, #0, 13d4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6c4>
     da0:	sub	x0, x29, #0x28
     da4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     da8:	ldr	w23, [x0]
     dac:	cbz	w23, dfc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xec>
     db0:	sub	x8, x29, #0x40
     db4:	mov	w1, #0x6                   	// #6
     db8:	mov	x0, x21
     dbc:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     dc0:	ldurb	w9, [x29, #-56]
     dc4:	ubfiz	w10, w9, #1, #1
     dc8:	and	w8, w9, #0xfffffffd
     dcc:	orr	w10, w10, w8
     dd0:	sturb	w10, [x29, #-56]
     dd4:	tbnz	w9, #0, 1440 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x730>
     dd8:	sub	x0, x29, #0x40
     ddc:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     de0:	mov	x1, x0
     de4:	mov	x0, x20
     de8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     dec:	sub	x0, x29, #0x40
     df0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     df4:	subs	w23, w23, #0x1
     df8:	b.ne	db0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa0>  // b.any
     dfc:	ldrb	w8, [x19, #8]
     e00:	str	w22, [x19]
     e04:	and	w8, w8, #0xfc
     e08:	orr	w8, w8, #0x2
     e0c:	strb	w8, [x19, #8]
     e10:	b	1470 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x760>
     e14:	ldp	x8, x10, [x21, #40]
     e18:	sub	w9, w1, #0x4
     e1c:	sub	x10, x10, x8
     e20:	cmp	x9, x10, asr #4
     e24:	b.cs	1544 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x834>  // b.hs, b.nlast
     e28:	lsl	x9, x9, #4
     e2c:	ldr	x24, [x8, x9]
     e30:	ldr	w26, [x24, #8]
     e34:	cbz	w26, 1550 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x840>
     e38:	ldr	x23, [x24]
     e3c:	mov	x22, x3
     e40:	ldrb	w8, [x23, #8]
     e44:	tbnz	w8, #0, edc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1cc>
     e48:	mov	x0, x23
     e4c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     e50:	cmp	w0, #0x3
     e54:	b.eq	1570 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x860>  // b.none
     e58:	mov	x0, x23
     e5c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     e60:	cmp	w0, #0x5
     e64:	b.eq	1570 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x860>  // b.none
     e68:	sub	x8, x29, #0x10
     e6c:	mov	x0, x21
     e70:	mov	x1, x23
     e74:	bl	ad4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e78:	ldurb	w9, [x29, #-8]
     e7c:	ubfiz	w10, w9, #1, #1
     e80:	and	w8, w9, #0xfffffffd
     e84:	orr	w10, w10, w8
     e88:	sturb	w10, [x29, #-8]
     e8c:	tbnz	w9, #0, 1400 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6f0>
     e90:	sub	x0, x29, #0x10
     e94:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     e98:	ldr	x8, [x0]
     e9c:	sub	x0, x29, #0x10
     ea0:	str	x8, [sp]
     ea4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ea8:	ldr	w26, [x24, #8]
     eac:	b	ee4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1d4>
     eb0:	ldur	x9, [x29, #-16]
     eb4:	sturb	w8, [x29, #-8]
     eb8:	sub	x1, x29, #0x18
     ebc:	mov	x0, x19
     ec0:	orr	x8, x9, #0x1
     ec4:	stp	x8, xzr, [x29, #-24]
     ec8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ecc:	ldur	x8, [x29, #-24]
     ed0:	cbz	x8, 1478 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x768>
     ed4:	sub	x0, x29, #0x18
     ed8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     edc:	ldr	x8, [x23]
     ee0:	str	x8, [sp]
     ee4:	cmp	w26, #0x1
     ee8:	b.ne	f08 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1f8>  // b.any
     eec:	ldrb	w8, [x19, #8]
     ef0:	and	w8, w8, #0xfc
     ef4:	orr	w8, w8, #0x2
     ef8:	strb	w8, [x19, #8]
     efc:	ldr	x8, [sp]
     f00:	str	w8, [x19]
     f04:	b	1480 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x770>
     f08:	cbz	w26, 14d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7c0>
     f0c:	mov	w27, #0x1                   	// #1
     f10:	ldr	x8, [x24]
     f14:	add	x23, x8, w27, uxtw #4
     f18:	ldrb	w8, [x23, #8]
     f1c:	tbnz	w8, #0, 1044 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x334>
     f20:	mov	x0, x23
     f24:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     f28:	cmp	w0, #0x3
     f2c:	b.eq	f40 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x230>  // b.none
     f30:	mov	x0, x23
     f34:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     f38:	cmp	w0, #0x5
     f3c:	b.ne	10c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3b0>  // b.any
     f40:	mov	x0, x23
     f44:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     f48:	cmp	w0, #0x3
     f4c:	b.ne	105c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x34c>  // b.any
     f50:	sub	x8, x29, #0x10
     f54:	mov	w1, #0x6                   	// #6
     f58:	mov	x0, x21
     f5c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     f60:	ldurb	w9, [x29, #-8]
     f64:	ubfiz	w10, w9, #1, #1
     f68:	and	w8, w9, #0xfffffffd
     f6c:	orr	w10, w10, w8
     f70:	sturb	w10, [x29, #-8]
     f74:	tbnz	w9, #0, 1108 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3f8>
     f78:	sub	x0, x29, #0x10
     f7c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     f80:	add	w8, w27, #0x2
     f84:	cmp	w8, w26
     f88:	b.ne	1530 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x820>  // b.any
     f8c:	ldr	w8, [x24, #8]
     f90:	add	w27, w27, #0x1
     f94:	cmp	w8, w27
     f98:	b.ls	14d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7c0>  // b.plast
     f9c:	ldr	x8, [x24]
     fa0:	add	x23, x8, w27, uxtw #4
     fa4:	ldrb	w8, [x23, #8]
     fa8:	tbnz	w8, #0, 157c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x86c>
     fac:	ldr	w25, [x0]
     fb0:	mov	x0, x23
     fb4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     fb8:	cmp	w0, #0x1
     fbc:	b.eq	1264 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x554>  // b.none
     fc0:	cmp	w0, #0x2
     fc4:	b.eq	1208 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4f8>  // b.none
     fc8:	cmp	w0, #0x4
     fcc:	b.ne	1588 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x878>  // b.any
     fd0:	cbz	w25, 12bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5ac>
     fd4:	sub	x8, x29, #0x28
     fd8:	mov	w1, #0x6                   	// #6
     fdc:	mov	x0, x21
     fe0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     fe4:	ldurb	w9, [x29, #-32]
     fe8:	ubfiz	w10, w9, #1, #1
     fec:	and	w8, w9, #0xfffffffd
     ff0:	orr	w10, w10, w8
     ff4:	sturb	w10, [x29, #-32]
     ff8:	tbnz	w9, #0, 1340 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x630>
     ffc:	sub	x0, x29, #0x28
    1000:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1004:	ldr	x8, [x0]
    1008:	cmp	w8, #0x40
    100c:	b.cs	14f0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7e0>  // b.hs, b.nlast
    1010:	adrp	x9, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1014:	and	x8, x8, #0xffffffff
    1018:	add	x9, x9, #0x0
    101c:	ldrb	w8, [x9, x8]
    1020:	sub	x1, x29, #0x40
    1024:	mov	x0, x20
    1028:	stur	x8, [x29, #-64]
    102c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1030:	sub	x0, x29, #0x28
    1034:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1038:	subs	w25, w25, #0x1
    103c:	b.ne	fd4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x2c4>  // b.any
    1040:	b	12bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5ac>
    1044:	ldr	x8, [x23]
    1048:	sub	x1, x29, #0x10
    104c:	mov	x0, x20
    1050:	stur	x8, [x29, #-16]
    1054:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1058:	b	1388 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x678>
    105c:	mov	x0, x23
    1060:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1064:	cmp	w0, #0x5
    1068:	b.ne	1510 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x800>  // b.any
    106c:	sub	x8, x29, #0x10
    1070:	mov	w1, #0x6                   	// #6
    1074:	mov	x0, x21
    1078:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    107c:	ldurb	w9, [x29, #-8]
    1080:	ubfiz	w10, w9, #1, #1
    1084:	and	w8, w9, #0xfffffffd
    1088:	orr	w10, w10, w8
    108c:	sturb	w10, [x29, #-8]
    1090:	tbnz	w9, #0, 1134 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x424>
    1094:	sub	x0, x29, #0x10
    1098:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    109c:	ldr	w8, [x21, #32]
    10a0:	ldr	w23, [x0]
    10a4:	subs	w8, w8, #0x20
    10a8:	b.cc	1160 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x450>  // b.lo, b.ul, b.last
    10ac:	ldr	x9, [x21, #24]
    10b0:	lsr	x8, x9, x8
    10b4:	str	x8, [x21, #24]
    10b8:	mov	w8, #0x20                  	// #32
    10bc:	b	1164 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x454>
    10c0:	sub	x8, x29, #0x10
    10c4:	mov	x0, x21
    10c8:	mov	x1, x23
    10cc:	bl	ad4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    10d0:	ldurb	w9, [x29, #-8]
    10d4:	ubfiz	w10, w9, #1, #1
    10d8:	and	w8, w9, #0xfffffffd
    10dc:	orr	w10, w10, w8
    10e0:	sturb	w10, [x29, #-8]
    10e4:	tbnz	w9, #0, 14a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x790>
    10e8:	sub	x0, x29, #0x10
    10ec:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    10f0:	mov	x1, x0
    10f4:	mov	x0, x20
    10f8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    10fc:	sub	x0, x29, #0x10
    1100:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1104:	b	1388 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x678>
    1108:	ldur	x9, [x29, #-16]
    110c:	sturb	w8, [x29, #-8]
    1110:	add	x1, sp, #0x30
    1114:	mov	x0, x19
    1118:	orr	x8, x9, #0x1
    111c:	stur	xzr, [x29, #-16]
    1120:	str	x8, [sp, #48]
    1124:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1128:	ldr	x8, [sp, #48]
    112c:	cbz	x8, 1370 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x660>
    1130:	b	153c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x82c>
    1134:	ldur	x9, [x29, #-16]
    1138:	sturb	w8, [x29, #-8]
    113c:	add	x1, sp, #0x10
    1140:	mov	x0, x19
    1144:	orr	x8, x9, #0x1
    1148:	stur	xzr, [x29, #-16]
    114c:	str	x8, [sp, #16]
    1150:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1154:	ldr	x8, [sp, #16]
    1158:	cbz	x8, 1370 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x660>
    115c:	b	1598 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x888>
    1160:	mov	w8, wzr
    1164:	ldp	x11, x9, [x21, #8]
    1168:	lsl	w10, w23, #3
    116c:	add	w10, w10, #0x18
    1170:	str	w8, [x21, #32]
    1174:	lsl	x9, x9, #3
    1178:	sub	x25, x9, x8
    117c:	and	w9, w10, #0xffffffe0
    1180:	add	x1, x25, x9
    1184:	cmp	x11, x1, lsr #3
    1188:	b.cs	11b0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4a0>  // b.hs, b.nlast
    118c:	sub	x2, x29, #0x28
    1190:	mov	x0, x20
    1194:	mov	x1, x23
    1198:	stur	xzr, [x29, #-40]
    119c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    11a0:	ldr	x8, [x21, #8]
    11a4:	mov	w25, #0x5                   	// #5
    11a8:	str	x8, [x21, #16]
    11ac:	b	1374 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x664>
    11b0:	sub	x8, x29, #0x28
    11b4:	mov	x0, x21
    11b8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    11bc:	ldur	x9, [x29, #-40]
    11c0:	tst	x9, #0xfffffffffffffffe
    11c4:	and	x10, x9, #0xfffffffffffffffe
    11c8:	cset	w8, ne  // ne = any
    11cc:	orr	x8, x10, x8
    11d0:	stur	x8, [x29, #-40]
    11d4:	cbz	x10, 12c4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5b4>
    11d8:	orr	x8, x9, #0x1
    11dc:	add	x1, sp, #0x8
    11e0:	mov	x0, x19
    11e4:	str	x8, [sp, #8]
    11e8:	stur	xzr, [x29, #-40]
    11ec:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    11f0:	ldr	x8, [sp, #8]
    11f4:	cbnz	x8, 15a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x890>
    11f8:	ldur	x8, [x29, #-40]
    11fc:	mov	w9, #0x1                   	// #1
    1200:	cbz	x8, 12cc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5bc>
    1204:	b	15a8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x898>
    1208:	cbz	w25, 12bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5ac>
    120c:	mov	x0, x23
    1210:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1214:	mov	x1, x0
    1218:	sub	x8, x29, #0x28
    121c:	mov	x0, x21
    1220:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1224:	ldurb	w9, [x29, #-32]
    1228:	ubfiz	w10, w9, #1, #1
    122c:	and	w8, w9, #0xfffffffd
    1230:	orr	w10, w10, w8
    1234:	sturb	w10, [x29, #-32]
    1238:	tbnz	w9, #0, 12e8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5d8>
    123c:	sub	x0, x29, #0x28
    1240:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1244:	mov	x1, x0
    1248:	mov	x0, x20
    124c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1250:	sub	x0, x29, #0x28
    1254:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1258:	subs	w25, w25, #0x1
    125c:	b.ne	120c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4fc>  // b.any
    1260:	b	12bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5ac>
    1264:	cbz	w25, 12bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5ac>
    1268:	mov	x0, x23
    126c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1270:	mov	x1, x0
    1274:	sub	x8, x29, #0x28
    1278:	mov	x0, x21
    127c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1280:	ldurb	w9, [x29, #-32]
    1284:	ubfiz	w10, w9, #1, #1
    1288:	and	w8, w9, #0xfffffffd
    128c:	orr	w10, w10, w8
    1290:	sturb	w10, [x29, #-32]
    1294:	tbnz	w9, #0, 1314 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x604>
    1298:	sub	x0, x29, #0x28
    129c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    12a0:	mov	x1, x0
    12a4:	mov	x0, x20
    12a8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    12ac:	sub	x0, x29, #0x28
    12b0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    12b4:	subs	w25, w25, #0x1
    12b8:	b.ne	1268 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x558>  // b.any
    12bc:	mov	w25, #0x7                   	// #7
    12c0:	b	1374 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x664>
    12c4:	mov	w9, wzr
    12c8:	cbnz	x8, 15a8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x898>
    12cc:	cbnz	w9, 1370 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x660>
    12d0:	ldr	x8, [x21]
    12d4:	add	x28, x8, x25, lsr #3
    12d8:	cbz	x22, 13a4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x694>
    12dc:	mov	w25, wzr
    12e0:	stp	x28, x23, [x22]
    12e4:	b	1374 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x664>
    12e8:	ldur	x9, [x29, #-40]
    12ec:	sturb	w8, [x29, #-32]
    12f0:	add	x1, sp, #0x20
    12f4:	mov	x0, x19
    12f8:	orr	x8, x9, #0x1
    12fc:	stur	xzr, [x29, #-40]
    1300:	str	x8, [sp, #32]
    1304:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1308:	ldr	x8, [sp, #32]
    130c:	cbz	x8, 1368 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x658>
    1310:	b	15b0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8a0>
    1314:	ldur	x9, [x29, #-40]
    1318:	sturb	w8, [x29, #-32]
    131c:	add	x1, sp, #0x28
    1320:	mov	x0, x19
    1324:	orr	x8, x9, #0x1
    1328:	stur	xzr, [x29, #-40]
    132c:	str	x8, [sp, #40]
    1330:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1334:	ldr	x8, [sp, #40]
    1338:	cbz	x8, 1368 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x658>
    133c:	b	15b8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8a8>
    1340:	ldur	x9, [x29, #-40]
    1344:	sturb	w8, [x29, #-32]
    1348:	add	x1, sp, #0x18
    134c:	mov	x0, x19
    1350:	orr	x8, x9, #0x1
    1354:	stur	xzr, [x29, #-40]
    1358:	str	x8, [sp, #24]
    135c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1360:	ldr	x8, [sp, #24]
    1364:	cbnz	x8, 15c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8b0>
    1368:	sub	x0, x29, #0x28
    136c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1370:	mov	w25, #0x1                   	// #1
    1374:	sub	x0, x29, #0x10
    1378:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    137c:	cbz	w25, 1388 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x678>
    1380:	cmp	w25, #0x7
    1384:	b.ne	1434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x724>  // b.any
    1388:	add	w27, w27, #0x1
    138c:	cmp	w27, w26
    1390:	b.eq	eec <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1dc>  // b.none
    1394:	ldr	w8, [x24, #8]
    1398:	cmp	w8, w27
    139c:	b.hi	f10 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x200>  // b.pmore
    13a0:	b	14d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7c0>
    13a4:	cbz	w23, 13cc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6bc>
    13a8:	ldrb	w8, [x28], #1
    13ac:	sub	x1, x29, #0x28
    13b0:	mov	x0, x20
    13b4:	stur	x8, [x29, #-40]
    13b8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    13bc:	subs	w23, w23, #0x1
    13c0:	mov	w25, wzr
    13c4:	b.ne	13a8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x698>  // b.any
    13c8:	b	1374 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x664>
    13cc:	mov	w25, wzr
    13d0:	b	1374 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x664>
    13d4:	ldur	x9, [x29, #-40]
    13d8:	sturb	w8, [x29, #-32]
    13dc:	sub	x1, x29, #0x30
    13e0:	mov	x0, x19
    13e4:	orr	x8, x9, #0x1
    13e8:	stp	x8, xzr, [x29, #-48]
    13ec:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    13f0:	ldur	x8, [x29, #-48]
    13f4:	cbz	x8, 1470 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x760>
    13f8:	sub	x0, x29, #0x30
    13fc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1400:	ldur	x9, [x29, #-16]
    1404:	sturb	w8, [x29, #-8]
    1408:	add	x1, sp, #0x40
    140c:	mov	x0, x19
    1410:	orr	x8, x9, #0x1
    1414:	stur	xzr, [x29, #-16]
    1418:	str	x8, [sp, #64]
    141c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1420:	ldr	x8, [sp, #64]
    1424:	cbnz	x8, 15c8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8b8>
    1428:	sub	x0, x29, #0x10
    142c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1430:	b	1480 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x770>
    1434:	cmp	w25, #0x5
    1438:	b.eq	eec <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1dc>  // b.none
    143c:	b	1480 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x770>
    1440:	ldur	x9, [x29, #-64]
    1444:	sturb	w8, [x29, #-56]
    1448:	add	x1, sp, #0x48
    144c:	mov	x0, x19
    1450:	orr	x8, x9, #0x1
    1454:	stur	xzr, [x29, #-64]
    1458:	str	x8, [sp, #72]
    145c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1460:	ldr	x8, [sp, #72]
    1464:	cbnz	x8, 15d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8c0>
    1468:	sub	x0, x29, #0x40
    146c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1470:	sub	x0, x29, #0x28
    1474:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1478:	sub	x0, x29, #0x10
    147c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1480:	ldp	x20, x19, [sp, #224]
    1484:	ldp	x22, x21, [sp, #208]
    1488:	ldp	x24, x23, [sp, #192]
    148c:	ldp	x26, x25, [sp, #176]
    1490:	ldp	x28, x27, [sp, #160]
    1494:	ldp	x29, x30, [sp, #144]
    1498:	add	sp, sp, #0xf0
    149c:	ret
    14a0:	ldur	x9, [x29, #-16]
    14a4:	sturb	w8, [x29, #-8]
    14a8:	add	x1, sp, #0x38
    14ac:	mov	x0, x19
    14b0:	orr	x8, x9, #0x1
    14b4:	stur	xzr, [x29, #-16]
    14b8:	str	x8, [sp, #56]
    14bc:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    14c0:	ldr	x8, [sp, #56]
    14c4:	cbz	x8, 1428 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x718>
    14c8:	add	x0, sp, #0x38
    14cc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    14d0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    14d4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    14d8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    14dc:	add	x0, x0, #0x0
    14e0:	add	x1, x1, #0x0
    14e4:	add	x3, x3, #0x0
    14e8:	mov	w2, #0x99                  	// #153
    14ec:	bl	0 <__assert_fail>
    14f0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    14f4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    14f8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    14fc:	add	x0, x0, #0x0
    1500:	add	x1, x1, #0x0
    1504:	add	x3, x3, #0x0
    1508:	mov	w2, #0x9d                  	// #157
    150c:	bl	0 <__assert_fail>
    1510:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1514:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1518:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    151c:	add	x0, x0, #0x0
    1520:	add	x1, x1, #0x0
    1524:	add	x3, x3, #0x0
    1528:	mov	w2, #0x131                 	// #305
    152c:	bl	0 <__assert_fail>
    1530:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1534:	add	x0, x0, #0x0
    1538:	b	1590 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x880>
    153c:	add	x0, sp, #0x30
    1540:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1544:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1548:	add	x0, x0, #0x0
    154c:	b	1590 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x880>
    1550:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1554:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1558:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    155c:	add	x0, x0, #0x0
    1560:	add	x1, x1, #0x0
    1564:	add	x3, x3, #0x0
    1568:	mov	w2, #0xe5                  	// #229
    156c:	bl	0 <__assert_fail>
    1570:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1574:	add	x0, x0, #0x0
    1578:	b	1590 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x880>
    157c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1580:	add	x0, x0, #0x0
    1584:	b	1590 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x880>
    1588:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    158c:	add	x0, x0, #0x0
    1590:	mov	w1, #0x1                   	// #1
    1594:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1598:	add	x0, sp, #0x10
    159c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    15a0:	add	x0, sp, #0x8
    15a4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    15a8:	sub	x0, x29, #0x28
    15ac:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    15b0:	add	x0, sp, #0x20
    15b4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    15b8:	add	x0, sp, #0x28
    15bc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    15c0:	add	x0, sp, #0x18
    15c4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    15c8:	add	x0, sp, #0x40
    15cc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    15d0:	add	x0, sp, #0x48
    15d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

00000000000015d8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>:
    15d8:	sub	sp, sp, #0xa0
    15dc:	stp	x29, x30, [sp, #96]
    15e0:	str	x23, [sp, #112]
    15e4:	stp	x22, x21, [sp, #128]
    15e8:	stp	x20, x19, [sp, #144]
    15ec:	add	x29, sp, #0x60
    15f0:	mov	x20, x0
    15f4:	mov	w0, #0x220                 	// #544
    15f8:	mov	x19, x8
    15fc:	bl	0 <_Znwm>
    1600:	adrp	x8, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1604:	ldr	x8, [x8]
    1608:	movi	v0.2s, #0x1
    160c:	add	x22, x0, #0x20
    1610:	mov	x21, x0
    1614:	add	x8, x8, #0x10
    1618:	str	d0, [x0, #8]
    161c:	str	x8, [x0]
    1620:	mov	w2, #0x200                 	// #512
    1624:	mov	x0, x22
    1628:	mov	w1, wzr
    162c:	bl	0 <memset>
    1630:	adrp	x8, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1634:	ldr	d0, [x8]
    1638:	mov	x23, x21
    163c:	str	x22, [x23, #16]!
    1640:	sub	x8, x29, #0x20
    1644:	mov	w1, #0x5                   	// #5
    1648:	mov	x0, x20
    164c:	str	d0, [x21, #24]
    1650:	stp	x23, x21, [x29, #-16]
    1654:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1658:	ldurb	w9, [x29, #-24]
    165c:	ubfiz	w10, w9, #1, #1
    1660:	and	w8, w9, #0xfffffffd
    1664:	orr	w10, w10, w8
    1668:	sturb	w10, [x29, #-24]
    166c:	tbnz	w9, #0, 188c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2b4>
    1670:	sub	x0, x29, #0x20
    1674:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1678:	ldr	w22, [x0]
    167c:	cbz	w22, 18c4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2ec>
    1680:	add	x8, sp, #0x30
    1684:	mov	w1, #0x1                   	// #1
    1688:	mov	x0, x20
    168c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1690:	ldrb	w9, [sp, #56]
    1694:	ubfiz	w10, w9, #1, #1
    1698:	and	w8, w9, #0xfffffffd
    169c:	orr	w10, w10, w8
    16a0:	strb	w10, [sp, #56]
    16a4:	tbnz	w9, #0, 18a0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2c8>
    16a8:	add	x0, sp, #0x30
    16ac:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    16b0:	ldr	x8, [x0]
    16b4:	cbz	x8, 1714 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x13c>
    16b8:	add	x8, sp, #0x20
    16bc:	mov	w1, #0x8                   	// #8
    16c0:	mov	x0, x20
    16c4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    16c8:	ldrb	w9, [sp, #40]
    16cc:	ubfiz	w10, w9, #1, #1
    16d0:	and	w8, w9, #0xfffffffd
    16d4:	orr	w10, w10, w8
    16d8:	strb	w10, [sp, #40]
    16dc:	tbnz	w9, #0, 177c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1a4>
    16e0:	ldur	x21, [x29, #-16]
    16e4:	add	x0, sp, #0x20
    16e8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    16ec:	ldr	x8, [x0]
    16f0:	ldrb	w9, [sp, #24]
    16f4:	add	x1, sp, #0x10
    16f8:	mov	x0, x21
    16fc:	str	x8, [sp, #16]
    1700:	orr	w8, w9, #0x1
    1704:	strb	w8, [sp, #24]
    1708:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    170c:	mov	w21, #0x4                   	// #4
    1710:	b	1794 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1bc>
    1714:	add	x8, sp, #0x20
    1718:	mov	w1, #0x3                   	// #3
    171c:	mov	x0, x20
    1720:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1724:	ldrb	w9, [sp, #40]
    1728:	ubfiz	w10, w9, #1, #1
    172c:	and	w8, w9, #0xfffffffd
    1730:	orr	w10, w10, w8
    1734:	strb	w10, [sp, #40]
    1738:	tbnz	w9, #0, 177c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1a4>
    173c:	add	x0, sp, #0x20
    1740:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1744:	ldr	x21, [x0]
    1748:	sub	w8, w21, #0x3
    174c:	cmp	w8, #0x3
    1750:	b.cs	17bc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1e4>  // b.hs, b.nlast
    1754:	ldrb	w8, [sp, #24]
    1758:	ldur	x0, [x29, #-16]
    175c:	add	x1, sp, #0x10
    1760:	str	xzr, [sp, #16]
    1764:	and	w8, w8, #0xf0
    1768:	bfi	w8, w21, #1, #3
    176c:	strb	w8, [sp, #24]
    1770:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1774:	mov	w21, wzr
    1778:	b	1794 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1bc>
    177c:	ldr	x9, [sp, #32]
    1780:	strb	w8, [sp, #40]
    1784:	str	xzr, [sp, #32]
    1788:	mov	w21, #0x1                   	// #1
    178c:	orr	x8, x9, #0x1
    1790:	str	x8, [x19]
    1794:	add	x0, sp, #0x20
    1798:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    179c:	add	x0, sp, #0x30
    17a0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    17a4:	orr	w8, w21, #0x4
    17a8:	cmp	w8, #0x4
    17ac:	b.ne	18e0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x308>  // b.any
    17b0:	subs	w22, w22, #0x1
    17b4:	b.ne	1680 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xa8>  // b.any
    17b8:	b	18c0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2e8>
    17bc:	sub	w23, w21, #0x1
    17c0:	cmp	w23, #0x2
    17c4:	b.cs	190c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x334>  // b.hs, b.nlast
    17c8:	add	x8, sp, #0x10
    17cc:	mov	w1, #0x5                   	// #5
    17d0:	mov	x0, x20
    17d4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    17d8:	ldrb	w9, [sp, #24]
    17dc:	ubfiz	w10, w9, #1, #1
    17e0:	and	w8, w9, #0xfffffffd
    17e4:	orr	w10, w10, w8
    17e8:	strb	w10, [sp, #24]
    17ec:	tbnz	w9, #0, 182c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x254>
    17f0:	add	x0, sp, #0x10
    17f4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    17f8:	ldr	x8, [x0]
    17fc:	cmp	w23, #0x1
    1800:	b.hi	1848 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x270>  // b.pmore
    1804:	cbnz	x8, 1848 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x270>
    1808:	ldrb	w8, [sp, #8]
    180c:	ldur	x0, [x29, #-16]
    1810:	mov	x1, sp
    1814:	str	xzr, [sp]
    1818:	orr	w8, w8, #0x1
    181c:	strb	w8, [sp, #8]
    1820:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1824:	mov	w21, #0x4                   	// #4
    1828:	b	187c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2a4>
    182c:	ldr	x9, [sp, #16]
    1830:	strb	w8, [sp, #24]
    1834:	str	xzr, [sp, #16]
    1838:	mov	w21, #0x1                   	// #1
    183c:	orr	x8, x9, #0x1
    1840:	str	x8, [x19]
    1844:	b	187c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2a4>
    1848:	cmp	w23, #0x1
    184c:	b.hi	1858 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x280>  // b.pmore
    1850:	cmp	x8, #0x41
    1854:	b.cs	1918 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x340>  // b.hs, b.nlast
    1858:	ldrb	w9, [sp, #8]
    185c:	ldur	x0, [x29, #-16]
    1860:	str	x8, [sp]
    1864:	mov	x1, sp
    1868:	and	w8, w9, #0xf0
    186c:	bfi	w8, w21, #1, #3
    1870:	strb	w8, [sp, #8]
    1874:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1878:	mov	w21, wzr
    187c:	add	x0, sp, #0x10
    1880:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1884:	cbnz	w21, 1794 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1bc>
    1888:	b	1774 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x19c>
    188c:	ldur	x9, [x29, #-32]
    1890:	sturb	w8, [x29, #-24]
    1894:	stur	xzr, [x29, #-32]
    1898:	orr	x8, x9, #0x1
    189c:	b	18dc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x304>
    18a0:	ldr	x9, [sp, #48]
    18a4:	strb	w8, [sp, #56]
    18a8:	add	x0, sp, #0x30
    18ac:	str	xzr, [sp, #48]
    18b0:	orr	x8, x9, #0x1
    18b4:	str	x8, [x19]
    18b8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18bc:	b	18e0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x308>
    18c0:	ldur	x23, [x29, #-16]
    18c4:	ldr	w8, [x23, #8]
    18c8:	cbz	w8, 1924 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x34c>
    18cc:	add	x0, x20, #0x28
    18d0:	sub	x1, x29, #0x10
    18d4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18d8:	mov	w8, #0x1                   	// #1
    18dc:	str	x8, [x19]
    18e0:	sub	x0, x29, #0x20
    18e4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18e8:	ldur	x0, [x29, #-8]
    18ec:	cbz	x0, 18f4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x31c>
    18f0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18f4:	ldp	x20, x19, [sp, #144]
    18f8:	ldp	x22, x21, [sp, #128]
    18fc:	ldr	x23, [sp, #112]
    1900:	ldp	x29, x30, [sp, #96]
    1904:	add	sp, sp, #0xa0
    1908:	ret
    190c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1910:	add	x0, x0, #0x0
    1914:	b	192c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x354>
    1918:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    191c:	add	x0, x0, #0x0
    1920:	b	192c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x354>
    1924:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1928:	add	x0, x0, #0x0
    192c:	mov	w1, #0x1                   	// #1
    1930:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000001934 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb>:
    1934:	stp	x29, x30, [sp, #-96]!
    1938:	stp	x28, x27, [sp, #16]
    193c:	stp	x26, x25, [sp, #32]
    1940:	stp	x24, x23, [sp, #48]
    1944:	stp	x22, x21, [sp, #64]
    1948:	stp	x20, x19, [sp, #80]
    194c:	mov	x29, sp
    1950:	sub	sp, sp, #0x2c0
    1954:	mov	w20, w1
    1958:	mov	x19, x8
    195c:	add	x8, sp, #0x80
    1960:	mov	w1, wzr
    1964:	mov	x2, xzr
    1968:	mov	x21, x0
    196c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1970:	ldr	x8, [sp, #128]
    1974:	tst	x8, #0xfffffffffffffffe
    1978:	and	x10, x8, #0xfffffffffffffffe
    197c:	cset	w9, ne  // ne = any
    1980:	orr	x9, x10, x9
    1984:	str	x9, [sp, #128]
    1988:	cbz	x10, 19b8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x84>
    198c:	orr	x8, x8, #0x1
    1990:	sub	x1, x29, #0x10
    1994:	mov	x0, x19
    1998:	stur	x8, [x29, #-16]
    199c:	str	xzr, [sp, #128]
    19a0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    19a4:	ldur	x8, [x29, #-16]
    19a8:	cbnz	x8, 1de4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4b0>
    19ac:	ldr	x8, [sp, #128]
    19b0:	cbz	x8, 1cf4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3c0>
    19b4:	b	1dd4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4a0>
    19b8:	cbnz	x9, 1dd4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4a0>
    19bc:	adrp	x8, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    19c0:	ldr	d0, [x8]
    19c4:	add	x8, sp, #0x80
    19c8:	add	x8, x8, #0x10
    19cc:	str	x8, [sp, #128]
    19d0:	add	x8, sp, #0x70
    19d4:	mov	w1, #0x2                   	// #2
    19d8:	mov	x0, x21
    19dc:	stp	xzr, xzr, [x29, #-48]
    19e0:	stur	xzr, [x29, #-32]
    19e4:	str	d0, [sp, #136]
    19e8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    19ec:	ldrb	w8, [sp, #120]
    19f0:	ubfiz	w10, w8, #1, #1
    19f4:	and	w9, w8, #0xfffffffd
    19f8:	orr	w10, w10, w9
    19fc:	strb	w10, [sp, #120]
    1a00:	tbnz	w8, #0, 1c98 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x364>
    1a04:	add	x8, sp, #0x28
    1a08:	mov	x9, sp
    1a0c:	mov	x23, xzr
    1a10:	add	x25, x8, #0x10
    1a14:	add	x22, x9, #0x8
    1a18:	add	x26, x9, #0x18
    1a1c:	add	x27, x9, #0x10
    1a20:	add	x0, sp, #0x70
    1a24:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1a28:	ldr	w8, [x0]
    1a2c:	cmp	w8, #0x2
    1a30:	b.eq	1d14 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3e0>  // b.none
    1a34:	cmp	w8, #0x1
    1a38:	b.eq	1d80 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x44c>  // b.none
    1a3c:	cbz	w8, 1d14 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3e0>
    1a40:	ldr	w1, [x0, #4]
    1a44:	cmp	w1, #0x2
    1a48:	b.ne	1aa8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x174>  // b.any
    1a4c:	cbz	x23, 1d14 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3e0>
    1a50:	mov	x8, sp
    1a54:	mov	x0, x21
    1a58:	bl	15d8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>
    1a5c:	ldr	x9, [sp]
    1a60:	tst	x9, #0xfffffffffffffffe
    1a64:	and	x10, x9, #0xfffffffffffffffe
    1a68:	cset	w8, ne  // ne = any
    1a6c:	orr	x8, x10, x8
    1a70:	str	x8, [sp]
    1a74:	cbz	x10, 1b1c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1e8>
    1a78:	orr	x8, x9, #0x1
    1a7c:	add	x1, sp, #0x60
    1a80:	mov	x0, x19
    1a84:	str	x8, [sp, #96]
    1a88:	str	xzr, [sp]
    1a8c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1a90:	ldr	x8, [sp, #96]
    1a94:	cbnz	x8, 1dec <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4b8>
    1a98:	ldr	x8, [sp]
    1a9c:	mov	w9, #0x1                   	// #1
    1aa0:	cbz	x8, 1b24 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1f0>
    1aa4:	b	1ddc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4a8>
    1aa8:	add	x8, sp, #0x50
    1aac:	add	x2, sp, #0x80
    1ab0:	mov	x0, x21
    1ab4:	mov	x3, xzr
    1ab8:	str	wzr, [sp, #136]
    1abc:	bl	d10 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>
    1ac0:	ldrb	w9, [sp, #88]
    1ac4:	ubfiz	w10, w9, #1, #1
    1ac8:	and	w8, w9, #0xfffffffd
    1acc:	orr	w10, w10, w8
    1ad0:	strb	w10, [sp, #88]
    1ad4:	tbnz	w9, #0, 1d30 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3fc>
    1ad8:	add	x0, sp, #0x50
    1adc:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1ae0:	ldr	w8, [x0]
    1ae4:	cmp	w8, #0x3
    1ae8:	b.eq	1ba0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x26c>  // b.none
    1aec:	cmp	w8, #0x2
    1af0:	b.eq	1b54 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x220>  // b.none
    1af4:	cmp	w8, #0x1
    1af8:	b.ne	1c40 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x30c>  // b.any
    1afc:	ldr	w8, [sp, #136]
    1b00:	cbz	w8, 1d5c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x428>
    1b04:	ldr	x8, [sp, #128]
    1b08:	sub	x0, x29, #0x30
    1b0c:	ldr	w1, [x8]
    1b10:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1b14:	mov	x23, x0
    1b18:	b	1c40 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x30c>
    1b1c:	mov	w9, wzr
    1b20:	cbnz	x8, 1ddc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4a8>
    1b24:	cbnz	w9, 1ccc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x398>
    1b28:	ldr	x8, [x21, #48]
    1b2c:	add	x0, x23, #0x8
    1b30:	sub	x1, x8, #0x10
    1b34:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1b38:	ldr	x8, [x21, #48]
    1b3c:	sub	x9, x8, #0x10
    1b40:	str	x9, [x21, #48]
    1b44:	ldur	x0, [x8, #-8]
    1b48:	cbz	x0, 1c48 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x314>
    1b4c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1b50:	b	1c48 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x314>
    1b54:	cbz	x23, 1d5c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x428>
    1b58:	tbz	w20, #0, 1c40 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x30c>
    1b5c:	ldr	w8, [sp, #136]
    1b60:	stp	x27, xzr, [sp]
    1b64:	strb	wzr, [sp, #16]
    1b68:	cbz	w8, 1c7c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x348>
    1b6c:	mov	x24, xzr
    1b70:	sub	x28, x8, #0x1
    1b74:	ldr	x8, [sp, #128]
    1b78:	mov	x0, sp
    1b7c:	ldr	x1, [x8, x24, lsl #3]
    1b80:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
    1b84:	cmp	x28, x24
    1b88:	b.eq	1c7c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x348>  // b.none
    1b8c:	ldr	w8, [sp, #136]
    1b90:	add	x24, x24, #0x1
    1b94:	cmp	x24, x8
    1b98:	b.cc	1b74 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x240>  // b.lo, b.ul, b.last
    1b9c:	b	1db4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x480>
    1ba0:	cbz	x23, 1d5c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x428>
    1ba4:	tbz	w20, #0, 1c40 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x30c>
    1ba8:	ldr	w24, [sp, #136]
    1bac:	stp	x25, xzr, [sp, #40]
    1bb0:	strb	wzr, [sp, #56]
    1bb4:	cmp	w24, #0x1
    1bb8:	b.eq	1bf0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2bc>  // b.none
    1bbc:	mov	w8, w24
    1bc0:	mov	w28, #0x1                   	// #1
    1bc4:	cmp	x28, w8, uxtw
    1bc8:	b.cs	1db4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x480>  // b.hs, b.nlast
    1bcc:	ldr	x8, [sp, #128]
    1bd0:	add	x0, sp, #0x28
    1bd4:	ldr	x1, [x8, x28, lsl #3]
    1bd8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
    1bdc:	ldr	w8, [sp, #136]
    1be0:	add	x28, x28, #0x1
    1be4:	cmp	w24, w28
    1be8:	b.ne	1bc4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x290>  // b.any
    1bec:	cbz	w8, 1db4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x480>
    1bf0:	ldr	x8, [sp, #128]
    1bf4:	ldp	x1, x9, [sp, #40]
    1bf8:	mov	x0, x22
    1bfc:	add	x24, x23, #0x40
    1c00:	ldr	x8, [x8]
    1c04:	add	x2, x1, x9
    1c08:	str	x26, [sp, #8]
    1c0c:	str	w8, [sp]
    1c10:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1c14:	mov	x1, sp
    1c18:	mov	x0, x24
    1c1c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1c20:	ldr	x0, [sp, #8]
    1c24:	cmp	x0, x26
    1c28:	b.eq	1c30 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2fc>  // b.none
    1c2c:	bl	0 <_ZdlPv>
    1c30:	ldr	x0, [sp, #40]
    1c34:	cmp	x0, x25
    1c38:	b.eq	1c40 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x30c>  // b.none
    1c3c:	bl	0 <_ZdlPv>
    1c40:	add	x0, sp, #0x50
    1c44:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1c48:	add	x0, sp, #0x70
    1c4c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1c50:	add	x8, sp, #0x70
    1c54:	mov	w1, #0x2                   	// #2
    1c58:	mov	x0, x21
    1c5c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1c60:	ldrb	w8, [sp, #120]
    1c64:	ubfiz	w10, w8, #1, #1
    1c68:	and	w9, w8, #0xfffffffd
    1c6c:	orr	w10, w10, w9
    1c70:	strb	w10, [sp, #120]
    1c74:	tbz	w8, #0, 1a20 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xec>
    1c78:	b	1c98 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x364>
    1c7c:	add	x0, x23, #0x20
    1c80:	mov	x1, sp
    1c84:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
    1c88:	ldr	x0, [sp]
    1c8c:	cmp	x0, x27
    1c90:	b.ne	1c3c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x308>  // b.any
    1c94:	b	1c40 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x30c>
    1c98:	strb	w9, [sp, #120]
    1c9c:	tbnz	w8, #0, 1ca8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x374>
    1ca0:	mov	w8, #0x1                   	// #1
    1ca4:	b	1cb4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x380>
    1ca8:	ldr	x8, [sp, #112]
    1cac:	str	xzr, [sp, #112]
    1cb0:	orr	x8, x8, #0x1
    1cb4:	add	x1, sp, #0x68
    1cb8:	mov	x0, x19
    1cbc:	str	x8, [sp, #104]
    1cc0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1cc4:	ldr	x8, [sp, #104]
    1cc8:	cbnz	x8, 1df4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4c0>
    1ccc:	add	x0, sp, #0x70
    1cd0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1cd4:	ldr	x0, [sp, #128]
    1cd8:	add	x8, sp, #0x80
    1cdc:	add	x8, x8, #0x10
    1ce0:	cmp	x0, x8
    1ce4:	b.eq	1cec <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3b8>  // b.none
    1ce8:	bl	0 <free>
    1cec:	sub	x0, x29, #0x30
    1cf0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1cf4:	add	sp, sp, #0x2c0
    1cf8:	ldp	x20, x19, [sp, #80]
    1cfc:	ldp	x22, x21, [sp, #64]
    1d00:	ldp	x24, x23, [sp, #48]
    1d04:	ldp	x26, x25, [sp, #32]
    1d08:	ldp	x28, x27, [sp, #16]
    1d0c:	ldp	x29, x30, [sp], #96
    1d10:	ret
    1d14:	ldrb	w8, [x19, #32]
    1d18:	strb	wzr, [x19]
    1d1c:	strb	wzr, [x19, #24]
    1d20:	and	w8, w8, #0xfc
    1d24:	orr	w8, w8, #0x2
    1d28:	strb	w8, [x19, #32]
    1d2c:	b	1ccc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x398>
    1d30:	ldr	x9, [sp, #80]
    1d34:	strb	w8, [sp, #88]
    1d38:	add	x1, sp, #0x48
    1d3c:	mov	x0, x19
    1d40:	orr	x8, x9, #0x1
    1d44:	stp	x8, xzr, [sp, #72]
    1d48:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1d4c:	ldr	x8, [sp, #72]
    1d50:	cbz	x8, 1d74 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x440>
    1d54:	add	x0, sp, #0x48
    1d58:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1d5c:	ldrb	w8, [x19, #32]
    1d60:	strb	wzr, [x19]
    1d64:	strb	wzr, [x19, #24]
    1d68:	and	w8, w8, #0xfc
    1d6c:	orr	w8, w8, #0x2
    1d70:	strb	w8, [x19, #32]
    1d74:	add	x0, sp, #0x50
    1d78:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1d7c:	b	1ccc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x398>
    1d80:	ldrb	w8, [x19, #32]
    1d84:	ldur	q0, [x29, #-48]
    1d88:	ldur	x9, [x29, #-32]
    1d8c:	mov	w10, #0x1                   	// #1
    1d90:	and	w8, w8, #0xfc
    1d94:	orr	w8, w8, #0x2
    1d98:	stp	xzr, xzr, [x29, #-48]
    1d9c:	stur	xzr, [x29, #-32]
    1da0:	str	q0, [x19]
    1da4:	str	x9, [x19, #16]
    1da8:	strb	w8, [x19, #32]
    1dac:	strb	w10, [x19, #24]
    1db0:	b	1ccc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x398>
    1db4:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1db8:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1dbc:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1dc0:	add	x0, x0, #0x0
    1dc4:	add	x1, x1, #0x0
    1dc8:	add	x3, x3, #0x0
    1dcc:	mov	w2, #0x95                  	// #149
    1dd0:	bl	0 <__assert_fail>
    1dd4:	add	x0, sp, #0x80
    1dd8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1ddc:	mov	x0, sp
    1de0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1de4:	sub	x0, x29, #0x10
    1de8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1dec:	add	x0, sp, #0x60
    1df0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1df4:	add	x0, sp, #0x68
    1df8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE9push_backEOS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE9push_backEOS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	6c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE9push_backEOS2_+0x6c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	w10, [x20]
  28:	mov	w8, w8
  2c:	add	x8, x9, x8, lsl #5
  30:	str	w10, [x8]
  34:	ldur	q0, [x20, #8]
  38:	stur	q0, [x8, #8]
  3c:	ldr	x9, [x20, #24]
  40:	str	x9, [x8, #24]
  44:	stp	xzr, xzr, [x20, #8]
  48:	str	xzr, [x20, #24]
  4c:	ldp	w8, w9, [x19, #8]
  50:	cmp	w8, w9
  54:	b.cs	80 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE9push_backEOS2_+0x80>  // b.hs, b.nlast
  58:	add	w8, w8, #0x1
  5c:	str	w8, [x19, #8]
  60:	ldp	x20, x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret
  6c:	mov	x0, x19
  70:	mov	x1, xzr
  74:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE9push_backEOS2_>
  78:	ldr	w8, [x19, #8]
  7c:	b	20 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE9push_backEOS2_+0x20>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE9push_backEOS2_>
  84:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE9push_backEOS2_>
  88:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE9push_backEOS2_>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x43                  	// #67
  9c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm18BitstreamBlockInfo12getBlockInfoEj:

0000000000000000 <_ZNK4llvm18BitstreamBlockInfo12getBlockInfoEj>:
   0:	ldp	x8, x9, [x0]
   4:	cmp	x8, x9
   8:	b.eq	20 <_ZNK4llvm18BitstreamBlockInfo12getBlockInfoEj+0x20>  // b.none
   c:	mov	x0, x9
  10:	ldr	w10, [x0, #-88]!
  14:	cmp	w10, w1
  18:	b.ne	20 <_ZNK4llvm18BitstreamBlockInfo12getBlockInfoEj+0x20>  // b.any
  1c:	ret
  20:	sub	x9, x9, x8
  24:	mov	w10, #0x8ba3                	// #35747
  28:	lsr	x9, x9, #3
  2c:	movk	w10, #0xba2e, lsl #16
  30:	mul	w9, w9, w10
  34:	cbz	w9, 5c <_ZNK4llvm18BitstreamBlockInfo12getBlockInfoEj+0x5c>
  38:	mov	w10, wzr
  3c:	mov	w11, #0x58                  	// #88
  40:	umaddl	x0, w10, w11, x8
  44:	ldr	w12, [x0]
  48:	cmp	w12, w1
  4c:	b.eq	1c <_ZNK4llvm18BitstreamBlockInfo12getBlockInfoEj+0x1c>  // b.none
  50:	add	w10, w10, #0x1
  54:	cmp	w9, w10
  58:	b.ne	40 <_ZNK4llvm18BitstreamBlockInfo12getBlockInfoEj+0x40>  // b.any
  5c:	mov	x0, xzr
  60:	ret

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor7ReadVBREj:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x26, x25, [sp, #64]
   c:	stp	x24, x23, [sp, #80]
  10:	stp	x22, x21, [sp, #96]
  14:	stp	x20, x19, [sp, #112]
  18:	add	x29, sp, #0x30
  1c:	mov	x19, x8
  20:	add	x8, sp, #0x10
  24:	mov	w20, w1
  28:	mov	x21, x0
  2c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  30:	sub	x0, x29, #0x10
  34:	add	x1, sp, #0x10
  38:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  3c:	add	x0, sp, #0x10
  40:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  44:	ldurb	w8, [x29, #-8]
  48:	ubfiz	w9, w8, #1, #1
  4c:	and	w10, w8, #0xfffffffd
  50:	orr	w9, w9, w10
  54:	sturb	w9, [x29, #-8]
  58:	tbnz	w8, #0, 114 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x114>
  5c:	sub	x0, x29, #0x10
  60:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  64:	ldr	w8, [x0]
  68:	sub	w22, w20, #0x1
  6c:	mov	w9, #0x1                   	// #1
  70:	lsl	w23, w9, w22
  74:	tst	w8, w23
  78:	b.eq	124 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x124>  // b.none
  7c:	sub	w25, w23, #0x1
  80:	and	w24, w8, w25
  84:	mov	w26, w22
  88:	mov	x8, sp
  8c:	mov	x0, x21
  90:	mov	w1, w20
  94:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  98:	add	x0, sp, #0x10
  9c:	mov	x1, sp
  a0:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  a4:	sub	x0, x29, #0x10
  a8:	add	x1, sp, #0x10
  ac:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  b0:	add	x0, sp, #0x10
  b4:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  b8:	mov	x0, sp
  bc:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  c0:	ldurb	w8, [x29, #-8]
  c4:	ubfiz	w9, w8, #1, #1
  c8:	and	w10, w8, #0xfffffffd
  cc:	orr	w9, w9, w10
  d0:	sturb	w9, [x29, #-8]
  d4:	tbnz	w8, #0, 114 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x114>
  d8:	sub	x0, x29, #0x10
  dc:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  e0:	ldr	w8, [x0]
  e4:	and	w9, w8, w25
  e8:	tst	w8, w23
  ec:	lsl	w8, w9, w26
  f0:	orr	w24, w8, w24
  f4:	add	w26, w26, w22
  f8:	b.ne	88 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x88>  // b.any
  fc:	ldrb	w8, [x19, #8]
 100:	str	w24, [x19]
 104:	and	w8, w8, #0xfc
 108:	orr	w8, w8, #0x2
 10c:	strb	w8, [x19, #8]
 110:	b	138 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x138>
 114:	sub	x1, x29, #0x10
 118:	mov	x0, x19
 11c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 120:	b	138 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x138>
 124:	ldrb	w9, [x19, #8]
 128:	str	w8, [x19]
 12c:	and	w9, w9, #0xfc
 130:	orr	w9, w9, #0x2
 134:	strb	w9, [x19, #8]
 138:	sub	x0, x29, #0x10
 13c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 140:	ldp	x20, x19, [sp, #112]
 144:	ldp	x22, x21, [sp, #96]
 148:	ldp	x24, x23, [sp, #80]
 14c:	ldp	x26, x25, [sp, #64]
 150:	ldp	x29, x30, [sp, #48]
 154:	add	sp, sp, #0x80
 158:	ret

Disassembly of section .text._ZN4llvm8ExpectedIjE3getEv:

0000000000000000 <_ZN4llvm8ExpectedIjE3getEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	tbnz	w8, #1, 1c <_ZN4llvm8ExpectedIjE3getEv+0x1c>
  10:	tbnz	w8, #0, 20 <_ZN4llvm8ExpectedIjE3getEv+0x20>
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	bl	0 <_ZN4llvm8ExpectedIjE3getEv>
  20:	adrp	x0, 0 <_ZN4llvm8ExpectedIjE3getEv>
  24:	adrp	x1, 0 <_ZN4llvm8ExpectedIjE3getEv>
  28:	adrp	x3, 0 <_ZN4llvm8ExpectedIjE3getEv>
  2c:	add	x0, x0, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x3, x3, #0x0
  38:	mov	w2, #0x272                 	// #626
  3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor4ReadEj:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>:
   0:	sub	sp, sp, #0xd0
   4:	stp	x29, x30, [sp, #144]
   8:	stp	x24, x23, [sp, #160]
   c:	stp	x22, x21, [sp, #176]
  10:	stp	x20, x19, [sp, #192]
  14:	add	x29, sp, #0x90
  18:	sub	w9, w1, #0x1
  1c:	cmp	w9, #0x3f
  20:	b.hi	1f0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x1f0>  // b.pmore
  24:	ldr	w22, [x0, #32]
  28:	mov	w21, w1
  2c:	mov	x20, x0
  30:	mov	x19, x8
  34:	cmp	w22, w1
  38:	b.cs	48 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x48>  // b.hs, b.nlast
  3c:	cbz	w22, 84 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x84>
  40:	ldr	x23, [x20, #24]
  44:	b	88 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x88>
  48:	ldr	x8, [x20, #24]
  4c:	sub	w10, w22, w21
  50:	str	w10, [x20, #32]
  54:	neg	w9, w21
  58:	lsr	x10, x8, x21
  5c:	str	x10, [x20, #24]
  60:	ldrb	w10, [x19, #8]
  64:	mov	x11, #0xffffffffffffffff    	// #-1
  68:	lsr	x9, x11, x9
  6c:	and	x8, x8, x9
  70:	and	w9, w10, #0xfc
  74:	orr	w9, w9, #0x2
  78:	strb	w9, [x19, #8]
  7c:	str	x8, [x19]
  80:	b	1a8 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x1a8>
  84:	mov	x23, xzr
  88:	add	x8, sp, #0x30
  8c:	mov	x0, x20
  90:	bl	0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
  94:	ldr	x8, [sp, #48]
  98:	tst	x8, #0xfffffffffffffffe
  9c:	and	x10, x8, #0xfffffffffffffffe
  a0:	cset	w9, ne  // ne = any
  a4:	orr	x9, x10, x9
  a8:	str	x9, [sp, #48]
  ac:	cbz	x10, dc <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xdc>
  b0:	orr	x8, x8, #0x1
  b4:	add	x1, sp, #0x10
  b8:	mov	x0, x19
  bc:	str	x8, [sp, #16]
  c0:	str	xzr, [sp, #48]
  c4:	bl	0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
  c8:	ldr	x8, [sp, #16]
  cc:	cbnz	x8, 218 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x218>
  d0:	ldr	x8, [sp, #48]
  d4:	cbz	x8, 1a8 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x1a8>
  d8:	b	210 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x210>
  dc:	cbnz	x9, 210 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x210>
  e0:	ldr	w24, [x20, #32]
  e4:	sub	w21, w21, w22
  e8:	subs	w8, w24, w21
  ec:	b.cs	1c0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x1c0>  // b.hs, b.nlast
  f0:	bl	0 <_ZNSt3_V216generic_categoryEv>
  f4:	mov	w8, #0x5                   	// #5
  f8:	sturb	wzr, [x29, #-32]
  fc:	stp	xzr, xzr, [sp, #64]
 100:	stp	x8, x0, [x29, #-16]
 104:	adrp	x8, 0 <_ZTVN4llvm18raw_string_ostreamE>
 108:	ldr	x8, [x8]
 10c:	mov	w10, #0x1                   	// #1
 110:	str	w10, [sp, #80]
 114:	sub	x9, x29, #0x30
 118:	add	x8, x8, #0x10
 11c:	stp	x8, xzr, [sp, #48]
 120:	adrp	x8, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 124:	ldr	x8, [x8]
 128:	adrp	x10, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 12c:	add	x10, x10, #0x0
 130:	add	x20, x9, #0x10
 134:	add	x8, x8, #0x10
 138:	add	x0, sp, #0x30
 13c:	add	x1, sp, #0x18
 140:	str	x9, [sp, #88]
 144:	stp	x20, xzr, [x29, #-48]
 148:	stp	x8, x10, [sp, #24]
 14c:	stp	w21, w24, [sp, #40]
 150:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 154:	ldr	x8, [sp, #72]
 158:	ldr	x9, [sp, #56]
 15c:	cmp	x8, x9
 160:	b.eq	16c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x16c>  // b.none
 164:	add	x0, sp, #0x30
 168:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 16c:	ldr	x0, [sp, #88]
 170:	add	x8, sp, #0x8
 174:	sub	x1, x29, #0x10
 178:	bl	0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 17c:	add	x0, sp, #0x30
 180:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 184:	ldur	x0, [x29, #-48]
 188:	cmp	x0, x20
 18c:	b.eq	194 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x194>  // b.none
 190:	bl	0 <_ZdlPv>
 194:	add	x1, sp, #0x8
 198:	mov	x0, x19
 19c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1a0:	ldr	x8, [sp, #8]
 1a4:	cbnz	x8, 220 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x220>
 1a8:	ldp	x20, x19, [sp, #192]
 1ac:	ldp	x22, x21, [sp, #176]
 1b0:	ldp	x24, x23, [sp, #160]
 1b4:	ldp	x29, x30, [sp, #144]
 1b8:	add	sp, sp, #0xd0
 1bc:	ret
 1c0:	ldr	x9, [x20, #24]
 1c4:	neg	w10, w21
 1c8:	mov	x11, #0xffffffffffffffff    	// #-1
 1cc:	str	w8, [x20, #32]
 1d0:	lsr	x8, x11, x10
 1d4:	lsr	x10, x9, x21
 1d8:	str	x10, [x20, #24]
 1dc:	ldrb	w10, [x19, #8]
 1e0:	and	x8, x9, x8
 1e4:	lsl	x8, x8, x22
 1e8:	orr	x8, x8, x23
 1ec:	b	70 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x70>
 1f0:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1f4:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1f8:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1fc:	add	x0, x0, #0x0
 200:	add	x1, x1, #0x0
 204:	add	x3, x3, #0x0
 208:	mov	w2, #0xc1                  	// #193
 20c:	bl	0 <__assert_fail>
 210:	add	x0, sp, #0x30
 214:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 218:	add	x0, sp, #0x10
 21c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 220:	add	x0, sp, #0x8
 224:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm8ExpectedImE3getEv:

0000000000000000 <_ZN4llvm8ExpectedImE3getEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	tbnz	w8, #1, 1c <_ZN4llvm8ExpectedImE3getEv+0x1c>
  10:	tbnz	w8, #0, 20 <_ZN4llvm8ExpectedImE3getEv+0x20>
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	bl	0 <_ZN4llvm8ExpectedImE3getEv>
  20:	adrp	x0, 0 <_ZN4llvm8ExpectedImE3getEv>
  24:	adrp	x1, 0 <_ZN4llvm8ExpectedImE3getEv>
  28:	adrp	x3, 0 <_ZN4llvm8ExpectedImE3getEv>
  2c:	add	x0, x0, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x3, x3, #0x0
  38:	mov	w2, #0x272                 	// #626
  3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedImED2Ev:

0000000000000000 <_ZN4llvm8ExpectedImED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	mov	x19, x0
  14:	tbnz	w8, #1, 40 <_ZN4llvm8ExpectedImED2Ev+0x40>
  18:	tbz	w8, #0, 34 <_ZN4llvm8ExpectedImED2Ev+0x34>
  1c:	ldr	x0, [x19]
  20:	cbz	x0, 30 <_ZN4llvm8ExpectedImED2Ev+0x30>
  24:	ldr	x8, [x0]
  28:	ldr	x8, [x8, #8]
  2c:	blr	x8
  30:	str	xzr, [x19]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm8ExpectedImED2Ev>

Disassembly of section .text._ZN4llvm8ExpectedIjED2Ev:

0000000000000000 <_ZN4llvm8ExpectedIjED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	mov	x19, x0
  14:	tbnz	w8, #1, 40 <_ZN4llvm8ExpectedIjED2Ev+0x40>
  18:	tbz	w8, #0, 34 <_ZN4llvm8ExpectedIjED2Ev+0x34>
  1c:	ldr	x0, [x19]
  20:	cbz	x0, 30 <_ZN4llvm8ExpectedIjED2Ev+0x30>
  24:	ldr	x8, [x0]
  28:	ldr	x8, [x8, #8]
  2c:	blr	x8
  30:	str	xzr, [x19]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm8ExpectedIjED2Ev>

Disassembly of section .text._ZN4llvm8ExpectedIjEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	orr	w8, w8, #0x3
  10:	strb	w8, [x0, #8]
  14:	ldr	x9, [x1]
  18:	tst	x9, #0xfffffffffffffffe
  1c:	and	x8, x9, #0xfffffffffffffffe
  20:	cset	w9, ne  // ne = any
  24:	orr	x9, x8, x9
  28:	str	x9, [x1]
  2c:	cbz	x8, 48 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE+0x48>
  30:	ldrb	w9, [x0, #8]
  34:	tbz	w9, #0, 68 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE+0x68>
  38:	str	x8, [x0]
  3c:	str	xzr, [x1]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>
  4c:	adrp	x1, 0 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>
  50:	adrp	x3, 0 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x1ce                 	// #462
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>
  6c:	adrp	x1, 0 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>
  70:	adrp	x3, 0 <_ZN4llvm8ExpectedIjEC2ENS_5ErrorE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x27c                 	// #636
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x26, x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	mov	x19, x8
  20:	add	x8, sp, #0x10
  24:	mov	w20, w1
  28:	mov	x21, x0
  2c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  30:	ldrb	w8, [sp, #24]
  34:	ubfiz	w9, w8, #1, #1
  38:	and	w10, w8, #0xfffffffd
  3c:	orr	w9, w9, w10
  40:	strb	w9, [sp, #24]
  44:	tbnz	w8, #0, ec <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0xec>
  48:	add	x0, sp, #0x10
  4c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  50:	ldr	x8, [x0]
  54:	sub	w22, w20, #0x1
  58:	mov	w9, #0x1                   	// #1
  5c:	lsl	w23, w9, w22
  60:	tst	w23, w8
  64:	b.eq	fc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0xfc>  // b.none
  68:	sub	w25, w23, #0x1
  6c:	and	w24, w25, w8
  70:	mov	w26, w22
  74:	mov	x8, sp
  78:	mov	x0, x21
  7c:	mov	w1, w20
  80:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  84:	add	x0, sp, #0x10
  88:	mov	x1, sp
  8c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  90:	mov	x0, sp
  94:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  98:	ldrb	w8, [sp, #24]
  9c:	ubfiz	w9, w8, #1, #1
  a0:	and	w10, w8, #0xfffffffd
  a4:	orr	w9, w9, w10
  a8:	strb	w9, [sp, #24]
  ac:	tbnz	w8, #0, ec <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0xec>
  b0:	add	x0, sp, #0x10
  b4:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  b8:	ldr	w8, [x0]
  bc:	and	w9, w25, w8
  c0:	tst	w23, w8
  c4:	lsl	x8, x9, x26
  c8:	orr	x24, x8, x24
  cc:	add	w26, w26, w22
  d0:	b.ne	74 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x74>  // b.any
  d4:	ldrb	w8, [x19, #8]
  d8:	str	x24, [x19]
  dc:	and	w8, w8, #0xfc
  e0:	orr	w8, w8, #0x2
  e4:	strb	w8, [x19, #8]
  e8:	b	114 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x114>
  ec:	add	x1, sp, #0x10
  f0:	mov	x0, x19
  f4:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  f8:	b	114 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x114>
  fc:	ldrb	w9, [x19, #8]
 100:	and	x8, x8, #0xffffffff
 104:	str	x8, [x19]
 108:	and	w9, w9, #0xfc
 10c:	orr	w9, w9, #0x2
 110:	strb	w9, [x19, #8]
 114:	add	x0, sp, #0x10
 118:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 11c:	ldp	x20, x19, [sp, #96]
 120:	ldp	x22, x21, [sp, #80]
 124:	ldp	x24, x23, [sp, #64]
 128:	ldp	x26, x25, [sp, #48]
 12c:	ldp	x29, x30, [sp, #32]
 130:	add	sp, sp, #0x70
 134:	ret

Disassembly of section .text._ZNK4llvm15BitCodeAbbrevOp11getEncodingEv:

0000000000000000 <_ZNK4llvm15BitCodeAbbrevOp11getEncodingEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	tbnz	w8, #0, 1c <_ZNK4llvm15BitCodeAbbrevOp11getEncodingEv+0x1c>
  10:	ubfx	w0, w8, #1, #3
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	adrp	x0, 0 <_ZNK4llvm15BitCodeAbbrevOp11getEncodingEv>
  20:	adrp	x1, 0 <_ZNK4llvm15BitCodeAbbrevOp11getEncodingEv>
  24:	adrp	x3, 0 <_ZNK4llvm15BitCodeAbbrevOp11getEncodingEv>
  28:	add	x0, x0, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x3, x3, #0x0
  34:	mov	w2, #0x77                  	// #119
  38:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv:

0000000000000000 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	tbnz	w8, #0, 30 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv+0x30>
  14:	mov	x19, x0
  18:	bl	0 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv>
  1c:	tbz	w0, #0, 30 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv+0x30>
  20:	ldr	x0, [x19]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	adrp	x0, 0 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv>
  34:	adrp	x1, 0 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv>
  38:	adrp	x3, 0 <_ZNK4llvm15BitCodeAbbrevOp15getEncodingDataEv>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x3, x3, #0x0
  48:	mov	w2, #0x79                  	// #121
  4c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor9JumpToBitEm:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	str	x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	x10, [x0, #8]
  14:	lsr	x9, x1, #3
  18:	and	x9, x9, #0x1ffffffffffffff8
  1c:	cmp	x10, x9
  20:	b.cc	98 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x98>  // b.lo, b.ul, b.last
  24:	mov	x19, x8
  28:	and	w1, w1, #0x3f
  2c:	str	x9, [x0, #16]
  30:	str	wzr, [x0, #32]
  34:	cbz	w1, 60 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x60>
  38:	mov	x8, sp
  3c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  40:	ldrb	w9, [sp, #8]
  44:	ubfiz	w10, w9, #1, #1
  48:	and	w8, w9, #0xfffffffd
  4c:	orr	w10, w10, w8
  50:	strb	w10, [sp, #8]
  54:	tbnz	w9, #0, 6c <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x6c>
  58:	mov	w8, #0x1                   	// #1
  5c:	b	7c <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x7c>
  60:	mov	w8, #0x1                   	// #1
  64:	str	x8, [x19]
  68:	b	88 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x88>
  6c:	ldr	x9, [sp]
  70:	strb	w8, [sp, #8]
  74:	str	xzr, [sp]
  78:	orr	x8, x9, #0x1
  7c:	mov	x0, sp
  80:	str	x8, [x19]
  84:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  88:	ldr	x19, [sp, #32]
  8c:	ldp	x29, x30, [sp, #16]
  90:	add	sp, sp, #0x30
  94:	ret
  98:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  9c:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  a0:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x85                  	// #133
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6appendEmRKm:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6appendEmRKm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	w8, w9, [x0, #8]
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	mov	x21, x2
  20:	sub	x9, x9, x8
  24:	cmp	x9, x1
  28:	b.cs	48 <_ZN4llvm15SmallVectorImplImE6appendEmRKm+0x48>  // b.hs, b.nlast
  2c:	add	x2, x8, x20
  30:	add	x1, x19, #0x10
  34:	mov	w3, #0x8                   	// #8
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  40:	ldr	w8, [x19, #8]
  44:	b	4c <_ZN4llvm15SmallVectorImplImE6appendEmRKm+0x4c>
  48:	cbz	x20, 68 <_ZN4llvm15SmallVectorImplImE6appendEmRKm+0x68>
  4c:	ldr	x10, [x19]
  50:	ldr	x9, [x21]
  54:	mov	x11, x20
  58:	add	x10, x10, x8, lsl #3
  5c:	subs	x11, x11, #0x1
  60:	str	x9, [x10], #8
  64:	b.ne	5c <_ZN4llvm15SmallVectorImplImE6appendEmRKm+0x5c>  // b.any
  68:	ldr	w9, [x19, #12]
  6c:	add	x8, x8, x20
  70:	cmp	x8, x9
  74:	b.hi	8c <_ZN4llvm15SmallVectorImplImE6appendEmRKm+0x8c>  // b.pmore
  78:	str	w8, [x19, #8]
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret
  8c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6appendEmRKm>
  90:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6appendEmRKm>
  94:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6appendEmRKm>
  98:	add	x0, x0, #0x0
  9c:	add	x1, x1, #0x0
  a0:	add	x3, x3, #0x0
  a4:	mov	w2, #0x43                  	// #67
  a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEEC2ENS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #32]
   c:	orr	w8, w8, #0x3
  10:	strb	w8, [x0, #32]
  14:	ldr	x9, [x1]
  18:	tst	x9, #0xfffffffffffffffe
  1c:	and	x8, x9, #0xfffffffffffffffe
  20:	cset	w9, ne  // ne = any
  24:	orr	x9, x8, x9
  28:	str	x9, [x1]
  2c:	cbz	x8, 48 <_ZN4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEEC2ENS_5ErrorE+0x48>
  30:	ldrb	w9, [x0, #32]
  34:	tbz	w9, #0, 68 <_ZN4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEEC2ENS_5ErrorE+0x68>
  38:	str	x8, [x0]
  3c:	str	xzr, [x1]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEEC2ENS_5ErrorE>
  4c:	adrp	x1, 0 <_ZN4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEEC2ENS_5ErrorE>
  50:	adrp	x3, 0 <_ZN4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEEC2ENS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x1ce                 	// #462
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZN4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEEC2ENS_5ErrorE>
  6c:	adrp	x1, 0 <_ZN4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEEC2ENS_5ErrorE>
  70:	adrp	x3, 0 <_ZN4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEEC2ENS_5ErrorE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x27c                 	// #636
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj:

0000000000000000 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x22, x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	w19, w1
  18:	mov	x20, x0
  1c:	mov	x21, x8
  20:	add	x8, sp, #0x10
  24:	mov	x0, x20
  28:	mov	w1, w19
  2c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  30:	ldrb	w8, [sp, #24]
  34:	ubfiz	w9, w8, #1, #1
  38:	and	w10, w8, #0xfffffffd
  3c:	orr	w9, w9, w10
  40:	strb	w9, [sp, #24]
  44:	tbnz	w8, #0, b0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb0>
  48:	add	x0, sp, #0x10
  4c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  50:	ldr	x8, [x0]
  54:	cmp	w8, #0x2
  58:	b.ne	c4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc4>  // b.any
  5c:	add	x8, sp, #0x8
  60:	mov	x0, x20
  64:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  68:	ldr	x9, [sp, #8]
  6c:	tst	x9, #0xfffffffffffffffe
  70:	and	x10, x9, #0xfffffffffffffffe
  74:	cset	w8, ne  // ne = any
  78:	orr	x8, x10, x8
  7c:	str	x8, [sp, #8]
  80:	cbz	x10, e0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xe0>
  84:	orr	x8, x9, #0x1
  88:	mov	x1, sp
  8c:	mov	x0, x21
  90:	stp	x8, xzr, [sp]
  94:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  98:	ldr	x8, [sp]
  9c:	cbnz	x8, 110 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x110>
  a0:	ldr	x8, [sp, #8]
  a4:	mov	w22, #0x1                   	// #1
  a8:	cbz	x8, e8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xe8>
  ac:	b	108 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x108>
  b0:	add	x1, sp, #0x10
  b4:	mov	x0, x21
  b8:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  bc:	mov	w22, #0x1                   	// #1
  c0:	b	e8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xe8>
  c4:	ldrb	w9, [x21, #8]
  c8:	str	x8, [x21]
  cc:	mov	w22, #0x1                   	// #1
  d0:	and	w8, w9, #0xfc
  d4:	orr	w8, w8, #0x2
  d8:	strb	w8, [x21, #8]
  dc:	b	e8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xe8>
  e0:	mov	w22, wzr
  e4:	cbnz	x8, 108 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x108>
  e8:	add	x0, sp, #0x10
  ec:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  f0:	cbz	w22, 20 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x20>
  f4:	ldp	x20, x19, [sp, #64]
  f8:	ldp	x22, x21, [sp, #48]
  fc:	ldp	x29, x30, [sp, #32]
 100:	add	sp, sp, #0x50
 104:	ret
 108:	add	x0, sp, #0x8
 10c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 110:	mov	x0, sp
 114:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm8ExpectedINS_14BitstreamEntryEE3getEv:

0000000000000000 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE3getEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	tbnz	w8, #1, 1c <_ZN4llvm8ExpectedINS_14BitstreamEntryEE3getEv+0x1c>
  10:	tbnz	w8, #0, 20 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE3getEv+0x20>
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	bl	0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE3getEv>
  20:	adrp	x0, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE3getEv>
  24:	adrp	x1, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE3getEv>
  28:	adrp	x3, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE3getEv>
  2c:	add	x0, x0, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x3, x3, #0x0
  38:	mov	w2, #0x272                 	// #626
  3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm18BitstreamBlockInfo20getOrCreateBlockInfoEj:

0000000000000000 <_ZN4llvm18BitstreamBlockInfo20getOrCreateBlockInfoEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w19, w1
  10:	mov	x20, x0
  14:	bl	0 <_ZN4llvm18BitstreamBlockInfo20getOrCreateBlockInfoEj>
  18:	cbnz	x0, 2c <_ZN4llvm18BitstreamBlockInfo20getOrCreateBlockInfoEj+0x2c>
  1c:	mov	x0, x20
  20:	bl	0 <_ZN4llvm18BitstreamBlockInfo20getOrCreateBlockInfoEj>
  24:	ldr	x0, [x20, #8]
  28:	str	w19, [x0, #-88]!
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm8ExpectedINS_14BitstreamEntryEED2Ev:

0000000000000000 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	mov	x19, x0
  14:	tbnz	w8, #1, 40 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED2Ev+0x40>
  18:	tbz	w8, #0, 34 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED2Ev+0x34>
  1c:	ldr	x0, [x19]
  20:	cbz	x0, 30 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED2Ev+0x30>
  24:	ldr	x8, [x0]
  28:	ldr	x8, [x8, #8]
  2c:	blr	x8
  30:	str	xzr, [x19]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED2Ev>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	3c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev+0x3c>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19, #8]
  24:	cbz	x0, 2c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev+0x2c>
  28:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev>
  2c:	add	x19, x19, #0x10
  30:	cmp	x21, x19
  34:	b.ne	20 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev+0x20>  // b.any
  38:	ldr	x19, [x20]
  3c:	cbz	x19, 54 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EED2Ev+0x54>
  40:	mov	x0, x19
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZdlPv>
  54:	ldp	x20, x19, [sp, #32]
  58:	ldr	x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	ret

Disassembly of section .text._ZN4llvm8ExpectedIjE13moveConstructImEEvONS0_IT_EE:

0000000000000000 <_ZN4llvm8ExpectedIjE13moveConstructImEEvONS0_IT_EE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	ldrb	w9, [x1, #8]
  10:	and	w8, w8, #0xfc
  14:	bfxil	w8, w9, #0, #1
  18:	orr	w8, w8, #0x2
  1c:	strb	w8, [x0, #8]
  20:	ldrb	w8, [x1, #8]
  24:	and	w9, w8, #0xfffffffd
  28:	strb	w9, [x1, #8]
  2c:	ldrb	w9, [x0, #8]
  30:	tbnz	w9, #0, 44 <_ZN4llvm8ExpectedIjE13moveConstructImEEvONS0_IT_EE+0x44>
  34:	tbnz	w8, #0, 5c <_ZN4llvm8ExpectedIjE13moveConstructImEEvONS0_IT_EE+0x5c>
  38:	ldr	x8, [x1]
  3c:	str	w8, [x0]
  40:	b	54 <_ZN4llvm8ExpectedIjE13moveConstructImEEvONS0_IT_EE+0x54>
  44:	tbz	w8, #0, 7c <_ZN4llvm8ExpectedIjE13moveConstructImEEvONS0_IT_EE+0x7c>
  48:	ldr	x8, [x1]
  4c:	str	xzr, [x1]
  50:	str	x8, [x0]
  54:	ldp	x29, x30, [sp], #16
  58:	ret
  5c:	adrp	x0, 0 <_ZN4llvm8ExpectedIjE13moveConstructImEEvONS0_IT_EE>
  60:	adrp	x1, 0 <_ZN4llvm8ExpectedIjE13moveConstructImEEvONS0_IT_EE>
  64:	adrp	x3, 0 <_ZN4llvm8ExpectedIjE13moveConstructImEEvONS0_IT_EE>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x272                 	// #626
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZN4llvm8ExpectedIjE13moveConstructImEEvONS0_IT_EE>
  80:	adrp	x1, 0 <_ZN4llvm8ExpectedIjE13moveConstructImEEvONS0_IT_EE>
  84:	adrp	x3, 0 <_ZN4llvm8ExpectedIjE13moveConstructImEEvONS0_IT_EE>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x27c                 	// #636
  98:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedIjE13moveConstructIjEEvONS0_IT_EE:

0000000000000000 <_ZN4llvm8ExpectedIjE13moveConstructIjEEvONS0_IT_EE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	ldrb	w9, [x1, #8]
  10:	and	w8, w8, #0xfc
  14:	bfxil	w8, w9, #0, #1
  18:	orr	w8, w8, #0x2
  1c:	strb	w8, [x0, #8]
  20:	ldrb	w8, [x1, #8]
  24:	and	w9, w8, #0xfffffffd
  28:	strb	w9, [x1, #8]
  2c:	ldrb	w9, [x0, #8]
  30:	tbnz	w9, #0, 44 <_ZN4llvm8ExpectedIjE13moveConstructIjEEvONS0_IT_EE+0x44>
  34:	tbnz	w8, #0, 5c <_ZN4llvm8ExpectedIjE13moveConstructIjEEvONS0_IT_EE+0x5c>
  38:	ldr	w8, [x1]
  3c:	str	w8, [x0]
  40:	b	54 <_ZN4llvm8ExpectedIjE13moveConstructIjEEvONS0_IT_EE+0x54>
  44:	tbz	w8, #0, 7c <_ZN4llvm8ExpectedIjE13moveConstructIjEEvONS0_IT_EE+0x7c>
  48:	ldr	x8, [x1]
  4c:	str	xzr, [x1]
  50:	str	x8, [x0]
  54:	ldp	x29, x30, [sp], #16
  58:	ret
  5c:	adrp	x0, 0 <_ZN4llvm8ExpectedIjE13moveConstructIjEEvONS0_IT_EE>
  60:	adrp	x1, 0 <_ZN4llvm8ExpectedIjE13moveConstructIjEEvONS0_IT_EE>
  64:	adrp	x3, 0 <_ZN4llvm8ExpectedIjE13moveConstructIjEEvONS0_IT_EE>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x272                 	// #626
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZN4llvm8ExpectedIjE13moveConstructIjEEvONS0_IT_EE>
  80:	adrp	x1, 0 <_ZN4llvm8ExpectedIjE13moveConstructIjEEvONS0_IT_EE>
  84:	adrp	x3, 0 <_ZN4llvm8ExpectedIjE13moveConstructIjEEvONS0_IT_EE>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x27c                 	// #636
  98:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE:

0000000000000000 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	mov	x19, x0
  14:	tbnz	w8, #1, 4c <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0x4c>
  18:	mov	x20, x1
  1c:	cmp	x19, x1
  20:	b.eq	40 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0x40>  // b.none
  24:	mov	x0, x19
  28:	bl	0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  2c:	mov	x0, x19
  30:	mov	x1, x20
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>

Disassembly of section .text._ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	mov	w2, #0x3a                  	// #58
  20:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  24:	ldrb	w20, [x19, #8]
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	tbnz	w20, #0, 44 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x44>
  30:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  34:	add	x1, x1, #0x0
  38:	mov	w2, #0x83                  	// #131
  3c:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  40:	bl	0 <abort>
  44:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  48:	add	x1, x1, #0x0
  4c:	mov	w2, #0x27                  	// #39
  50:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  54:	ldrb	w8, [x19, #8]
  58:	tbnz	w8, #0, 7c <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x7c>
  5c:	adrp	x0, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  60:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  64:	adrp	x3, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x281                 	// #641
  78:	bl	0 <__assert_fail>
  7c:	ldr	x19, [x19]
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	ldr	x8, [x19]
  88:	mov	x1, x0
  8c:	mov	x0, x19
  90:	ldr	x8, [x8, #16]
  94:	blr	x8
  98:	bl	0 <abort>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor11fillCurWordEv:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #128]
   8:	stp	x22, x21, [sp, #144]
   c:	stp	x20, x19, [sp, #160]
  10:	add	x29, sp, #0x80
  14:	ldp	x21, x20, [x0, #8]
  18:	mov	x19, x8
  1c:	subs	x9, x21, x20
  20:	b.ls	74 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x74>  // b.plast
  24:	ldr	x8, [x0]
  28:	add	x10, x20, #0x8
  2c:	cmp	x21, x10
  30:	add	x8, x8, x20
  34:	b.cs	11c <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x11c>  // b.hs, b.nlast
  38:	str	xzr, [x0, #24]
  3c:	cbz	w9, 128 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x128>
  40:	and	x12, x9, #0xffffffff
  44:	mov	x10, xzr
  48:	mov	x11, xzr
  4c:	lsl	x12, x12, #3
  50:	ldrb	w13, [x8], #1
  54:	and	x14, x10, #0xfffffff8
  58:	add	x10, x10, #0x8
  5c:	cmp	x12, x10
  60:	lsl	x13, x13, x14
  64:	orr	x11, x13, x11
  68:	str	x11, [x0, #24]
  6c:	b.ne	50 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x50>  // b.any
  70:	b	128 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x128>
  74:	bl	0 <_ZNSt3_V216generic_categoryEv>
  78:	mov	w8, #0x5                   	// #5
  7c:	sturb	wzr, [x29, #-32]
  80:	stp	xzr, xzr, [sp, #48]
  84:	stp	x8, x0, [x29, #-16]
  88:	adrp	x8, 0 <_ZTVN4llvm18raw_string_ostreamE>
  8c:	ldr	x8, [x8]
  90:	mov	w10, #0x1                   	// #1
  94:	str	w10, [sp, #64]
  98:	sub	x9, x29, #0x30
  9c:	add	x8, x8, #0x10
  a0:	stp	x8, xzr, [sp, #32]
  a4:	adrp	x8, 0 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv>
  a8:	ldr	x8, [x8]
  ac:	adrp	x10, 0 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv>
  b0:	add	x10, x10, #0x0
  b4:	add	x22, x9, #0x10
  b8:	add	x8, x8, #0x10
  bc:	add	x0, sp, #0x20
  c0:	mov	x1, sp
  c4:	str	x9, [sp, #72]
  c8:	stp	x22, xzr, [x29, #-48]
  cc:	stp	x8, x10, [sp]
  d0:	stp	x21, x20, [sp, #16]
  d4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
  d8:	ldr	x8, [sp, #56]
  dc:	ldr	x9, [sp, #40]
  e0:	cmp	x8, x9
  e4:	b.eq	f0 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0xf0>  // b.none
  e8:	add	x0, sp, #0x20
  ec:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  f0:	ldr	x0, [sp, #72]
  f4:	sub	x1, x29, #0x10
  f8:	mov	x8, x19
  fc:	bl	0 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv>
 100:	add	x0, sp, #0x20
 104:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 108:	ldur	x0, [x29, #-48]
 10c:	cmp	x0, x22
 110:	b.eq	140 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x140>  // b.none
 114:	bl	0 <_ZdlPv>
 118:	b	140 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x140>
 11c:	ldr	x8, [x8]
 120:	mov	w9, #0x8                   	// #8
 124:	str	x8, [x0, #24]
 128:	add	x8, x20, w9, uxtw
 12c:	lsl	w9, w9, #3
 130:	mov	w10, #0x1                   	// #1
 134:	str	x8, [x0, #16]
 138:	str	w9, [x0, #32]
 13c:	str	x10, [x19]
 140:	ldp	x20, x19, [sp, #160]
 144:	ldp	x22, x21, [sp, #144]
 148:	ldp	x29, x30, [sp, #128]
 14c:	add	sp, sp, #0xb0
 150:	ret

Disassembly of section .text._ZN4llvm8ExpectedImEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedImEC2ENS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	orr	w8, w8, #0x3
  10:	strb	w8, [x0, #8]
  14:	ldr	x9, [x1]
  18:	tst	x9, #0xfffffffffffffffe
  1c:	and	x8, x9, #0xfffffffffffffffe
  20:	cset	w9, ne  // ne = any
  24:	orr	x9, x8, x9
  28:	str	x9, [x1]
  2c:	cbz	x8, 48 <_ZN4llvm8ExpectedImEC2ENS_5ErrorE+0x48>
  30:	ldrb	w9, [x0, #8]
  34:	tbz	w9, #0, 68 <_ZN4llvm8ExpectedImEC2ENS_5ErrorE+0x68>
  38:	str	x8, [x0]
  3c:	str	xzr, [x1]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm8ExpectedImEC2ENS_5ErrorE>
  4c:	adrp	x1, 0 <_ZN4llvm8ExpectedImEC2ENS_5ErrorE>
  50:	adrp	x3, 0 <_ZN4llvm8ExpectedImEC2ENS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x1ce                 	// #462
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZN4llvm8ExpectedImEC2ENS_5ErrorE>
  6c:	adrp	x1, 0 <_ZN4llvm8ExpectedImEC2ENS_5ErrorE>
  70:	adrp	x3, 0 <_ZN4llvm8ExpectedImEC2ENS_5ErrorE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x27c                 	// #636
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10make_errorINS_11StringErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10error_codeEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_11StringErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10error_codeEEENS_5ErrorEDpOT0_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x22, x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	x20, x0
  18:	mov	w0, #0x40                  	// #64
  1c:	mov	x19, x1
  20:	mov	x21, x8
  24:	bl	0 <_Znwm>
  28:	mov	x22, x0
  2c:	add	x0, sp, #0x8
  30:	mov	x1, x20
  34:	bl	0 <_ZN4llvm10make_errorINS_11StringErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10error_codeEEENS_5ErrorEDpOT0_>
  38:	ldp	x2, x3, [x19]
  3c:	add	x1, sp, #0x8
  40:	mov	x0, x22
  44:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
  48:	orr	x8, x22, #0x1
  4c:	str	x8, [x21]
  50:	ldp	x20, x19, [sp, #64]
  54:	ldp	x22, x21, [sp, #48]
  58:	ldp	x29, x30, [sp, #32]
  5c:	add	sp, sp, #0x50
  60:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJmmEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmmEE7snprintEPcj>:
   0:	ldr	x8, [x0, #8]
   4:	ldp	x4, x3, [x0, #16]
   8:	mov	w9, w2
   c:	mov	x0, x1
  10:	mov	x1, x9
  14:	mov	x2, x8
  18:	b	0 <snprintf>

Disassembly of section .text._ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x104                 	// #260
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x11b                 	// #283
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJjjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJjjEE7snprintEPcj>:
   0:	ldr	x8, [x0, #8]
   4:	ldp	w4, w3, [x0, #16]
   8:	mov	w9, w2
   c:	mov	x0, x1
  10:	mov	x1, x9
  14:	mov	x2, x8
  18:	b	0 <snprintf>

Disassembly of section .text._ZN4llvm8ExpectedImE13moveConstructImEEvONS0_IT_EE:

0000000000000000 <_ZN4llvm8ExpectedImE13moveConstructImEEvONS0_IT_EE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	ldrb	w9, [x1, #8]
  10:	and	w8, w8, #0xfc
  14:	bfxil	w8, w9, #0, #1
  18:	orr	w8, w8, #0x2
  1c:	strb	w8, [x0, #8]
  20:	ldrb	w8, [x1, #8]
  24:	and	w9, w8, #0xfffffffd
  28:	strb	w9, [x1, #8]
  2c:	ldrb	w9, [x0, #8]
  30:	tbnz	w9, #0, 40 <_ZN4llvm8ExpectedImE13moveConstructImEEvONS0_IT_EE+0x40>
  34:	tbnz	w8, #0, 58 <_ZN4llvm8ExpectedImE13moveConstructImEEvONS0_IT_EE+0x58>
  38:	ldr	x8, [x1]
  3c:	b	4c <_ZN4llvm8ExpectedImE13moveConstructImEEvONS0_IT_EE+0x4c>
  40:	tbz	w8, #0, 78 <_ZN4llvm8ExpectedImE13moveConstructImEEvONS0_IT_EE+0x78>
  44:	ldr	x8, [x1]
  48:	str	xzr, [x1]
  4c:	str	x8, [x0]
  50:	ldp	x29, x30, [sp], #16
  54:	ret
  58:	adrp	x0, 0 <_ZN4llvm8ExpectedImE13moveConstructImEEvONS0_IT_EE>
  5c:	adrp	x1, 0 <_ZN4llvm8ExpectedImE13moveConstructImEEvONS0_IT_EE>
  60:	adrp	x3, 0 <_ZN4llvm8ExpectedImE13moveConstructImEEvONS0_IT_EE>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x272                 	// #626
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZN4llvm8ExpectedImE13moveConstructImEEvONS0_IT_EE>
  7c:	adrp	x1, 0 <_ZN4llvm8ExpectedImE13moveConstructImEEvONS0_IT_EE>
  80:	adrp	x3, 0 <_ZN4llvm8ExpectedImE13moveConstructImEEvONS0_IT_EE>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x27c                 	// #636
  94:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE:

0000000000000000 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	mov	x19, x0
  14:	tbnz	w8, #1, 4c <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x4c>
  18:	mov	x20, x1
  1c:	cmp	x19, x1
  20:	b.eq	40 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x40>  // b.none
  24:	mov	x0, x19
  28:	bl	0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  2c:	mov	x0, x19
  30:	mov	x1, x20
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>

Disassembly of section .text._ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	mov	w2, #0x3a                  	// #58
  20:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  24:	ldrb	w20, [x19, #8]
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	tbnz	w20, #0, 44 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x44>
  30:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  34:	add	x1, x1, #0x0
  38:	mov	w2, #0x83                  	// #131
  3c:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  40:	bl	0 <abort>
  44:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  48:	add	x1, x1, #0x0
  4c:	mov	w2, #0x27                  	// #39
  50:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  54:	ldrb	w8, [x19, #8]
  58:	tbnz	w8, #0, 7c <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x7c>
  5c:	adrp	x0, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  60:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  64:	adrp	x3, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x281                 	// #641
  78:	bl	0 <__assert_fail>
  7c:	ldr	x19, [x19]
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	ldr	x8, [x19]
  88:	mov	x1, x0
  8c:	mov	x0, x19
  90:	ldr	x8, [x8, #16]
  94:	blr	x8
  98:	bl	0 <abort>

Disassembly of section .text._ZNK4llvm15BitCodeAbbrevOp15hasEncodingDataEv:

0000000000000000 <_ZNK4llvm15BitCodeAbbrevOp15hasEncodingDataEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZNK4llvm15BitCodeAbbrevOp15hasEncodingDataEv>
   c:	sub	w8, w0, #0x1
  10:	cmp	w8, #0x5
  14:	b.cs	2c <_ZNK4llvm15BitCodeAbbrevOp15hasEncodingDataEv+0x2c>  // b.hs, b.nlast
  18:	mov	w9, #0x3                   	// #3
  1c:	lsr	w8, w9, w8
  20:	and	w0, w8, #0x1
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x0, 0 <_ZNK4llvm15BitCodeAbbrevOp15hasEncodingDataEv>
  30:	add	x0, x0, #0x0
  34:	mov	w1, #0x1                   	// #1
  38:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	q0, [x20]
  28:	str	q0, [x9, w8, uxtw #4]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x10                  	// #16
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitCodeAbbrevOpELb1EE9push_backERKS1_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv:

0000000000000000 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x20, 0 <__pthread_key_create>
  14:	ldr	x20, [x20]
  18:	mov	x19, x0
  1c:	add	x8, x0, #0x8
  20:	cbz	x20, 38 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x38>
  24:	ldaxr	w9, [x8]
  28:	sub	w10, w9, #0x1
  2c:	stlxr	w11, w10, [x8]
  30:	cbnz	w11, 24 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x24>
  34:	b	44 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x44>
  38:	ldr	w9, [x8]
  3c:	sub	w10, w9, #0x1
  40:	str	w10, [x8]
  44:	cmp	w9, #0x1
  48:	b.ne	a8 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0xa8>  // b.any
  4c:	mov	x21, x19
  50:	ldr	x8, [x21], #12
  54:	mov	x0, x19
  58:	ldr	x8, [x8, #16]
  5c:	blr	x8
  60:	cbz	x20, 78 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x78>
  64:	ldaxr	w8, [x21]
  68:	sub	w9, w8, #0x1
  6c:	stlxr	w10, w9, [x21]
  70:	cbnz	w10, 64 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x64>
  74:	b	84 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x84>
  78:	ldr	w8, [x21]
  7c:	sub	w9, w8, #0x1
  80:	str	w9, [x21]
  84:	cmp	w8, #0x1
  88:	b.ne	a8 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0xa8>  // b.any
  8c:	ldr	x8, [x19]
  90:	mov	x0, x19
  94:	ldp	x20, x19, [sp, #32]
  98:	ldr	x21, [sp, #16]
  9c:	ldr	x1, [x8, #24]
  a0:	ldp	x29, x30, [sp], #48
  a4:	br	x1
  a8:	ldp	x20, x19, [sp, #32]
  ac:	ldr	x21, [sp, #16]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret

Disassembly of section .text._ZN4llvm15BitstreamCursor7advanceEj:

0000000000000000 <_ZN4llvm15BitstreamCursor7advanceEj>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	str	x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	mov	w20, w1
  1c:	mov	x21, x0
  20:	mov	x19, x8
  24:	mov	w22, #0x1                   	// #1
  28:	ldr	w8, [x21, #32]
  2c:	cbnz	w8, 3c <_ZN4llvm15BitstreamCursor7advanceEj+0x3c>
  30:	ldp	x8, x9, [x21, #8]
  34:	cmp	x8, x9
  38:	b.ls	210 <_ZN4llvm15BitstreamCursor7advanceEj+0x210>  // b.plast
  3c:	sub	x8, x29, #0x10
  40:	mov	x0, x21
  44:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
  48:	ldurb	w9, [x29, #-8]
  4c:	ubfiz	w10, w9, #1, #1
  50:	and	w8, w9, #0xfffffffd
  54:	orr	w10, w10, w8
  58:	sturb	w10, [x29, #-8]
  5c:	tbnz	w9, #0, a0 <_ZN4llvm15BitstreamCursor7advanceEj+0xa0>
  60:	sub	x0, x29, #0x10
  64:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
  68:	ldr	w8, [x0]
  6c:	cmp	w8, #0x2
  70:	b.eq	120 <_ZN4llvm15BitstreamCursor7advanceEj+0x120>  // b.none
  74:	cmp	w8, #0x1
  78:	b.eq	cc <_ZN4llvm15BitstreamCursor7advanceEj+0xcc>  // b.none
  7c:	cbnz	w8, 17c <_ZN4llvm15BitstreamCursor7advanceEj+0x17c>
  80:	tbnz	w20, #0, 19c <_ZN4llvm15BitstreamCursor7advanceEj+0x19c>
  84:	mov	x0, x21
  88:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
  8c:	tbz	w0, #0, 19c <_ZN4llvm15BitstreamCursor7advanceEj+0x19c>
  90:	ldrb	w8, [x19, #8]
  94:	str	xzr, [x19]
  98:	and	w8, w8, #0xfc
  9c:	b	190 <_ZN4llvm15BitstreamCursor7advanceEj+0x190>
  a0:	ldur	x9, [x29, #-16]
  a4:	sturb	w8, [x29, #-8]
  a8:	add	x1, x29, #0x18
  ac:	mov	x0, x19
  b0:	orr	x8, x9, #0x1
  b4:	stur	xzr, [x29, #-16]
  b8:	str	x8, [x29, #24]
  bc:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
  c0:	ldr	x8, [x29, #24]
  c4:	cbz	x8, 1e4 <_ZN4llvm15BitstreamCursor7advanceEj+0x1e4>
  c8:	b	23c <_ZN4llvm15BitstreamCursor7advanceEj+0x23c>
  cc:	add	x8, sp, #0x10
  d0:	mov	w1, #0x8                   	// #8
  d4:	mov	x0, x21
  d8:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
  dc:	ldrb	w9, [sp, #24]
  e0:	ubfiz	w10, w9, #1, #1
  e4:	and	w8, w9, #0xfffffffd
  e8:	orr	w10, w10, w8
  ec:	strb	w10, [sp, #24]
  f0:	tbnz	w9, #0, 1b8 <_ZN4llvm15BitstreamCursor7advanceEj+0x1b8>
  f4:	add	x0, sp, #0x10
  f8:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
  fc:	ldr	w8, [x0]
 100:	ldrb	w9, [x19, #8]
 104:	mov	w10, #0x2                   	// #2
 108:	bfi	x10, x8, #32, #32
 10c:	and	w8, w9, #0xfc
 110:	orr	w8, w8, #0x2
 114:	strb	w8, [x19, #8]
 118:	str	x10, [x19]
 11c:	b	1dc <_ZN4llvm15BitstreamCursor7advanceEj+0x1dc>
 120:	tbnz	w20, #1, 17c <_ZN4llvm15BitstreamCursor7advanceEj+0x17c>
 124:	add	x8, sp, #0x10
 128:	mov	x0, x21
 12c:	bl	15d8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>
 130:	ldr	x9, [sp, #16]
 134:	tst	x9, #0xfffffffffffffffe
 138:	and	x10, x9, #0xfffffffffffffffe
 13c:	cset	w8, ne  // ne = any
 140:	orr	x8, x10, x8
 144:	str	x8, [sp, #16]
 148:	cbz	x10, 1fc <_ZN4llvm15BitstreamCursor7advanceEj+0x1fc>
 14c:	orr	x8, x9, #0x1
 150:	mov	x1, sp
 154:	mov	x0, x19
 158:	str	x8, [sp]
 15c:	str	xzr, [sp, #16]
 160:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 164:	ldr	x8, [sp]
 168:	cbnz	x8, 244 <_ZN4llvm15BitstreamCursor7advanceEj+0x244>
 16c:	ldr	x8, [sp, #16]
 170:	mov	w9, #0x1                   	// #1
 174:	cbz	x8, 204 <_ZN4llvm15BitstreamCursor7advanceEj+0x204>
 178:	b	254 <_ZN4llvm15BitstreamCursor7advanceEj+0x254>
 17c:	ldrb	w9, [x19, #8]
 180:	mov	w10, #0x3                   	// #3
 184:	bfi	x10, x8, #32, #32
 188:	str	x10, [x19]
 18c:	and	w8, w9, #0xfc
 190:	orr	w8, w8, #0x2
 194:	strb	w8, [x19, #8]
 198:	b	1e4 <_ZN4llvm15BitstreamCursor7advanceEj+0x1e4>
 19c:	ldrb	w8, [x19, #8]
 1a0:	mov	w23, #0x1                   	// #1
 1a4:	str	x23, [x19]
 1a8:	and	w8, w8, #0xfc
 1ac:	orr	w8, w8, #0x2
 1b0:	strb	w8, [x19, #8]
 1b4:	b	1e8 <_ZN4llvm15BitstreamCursor7advanceEj+0x1e8>
 1b8:	ldr	x9, [sp, #16]
 1bc:	strb	w8, [sp, #24]
 1c0:	add	x1, sp, #0x8
 1c4:	mov	x0, x19
 1c8:	orr	x8, x9, #0x1
 1cc:	stp	x8, xzr, [sp, #8]
 1d0:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 1d4:	ldr	x8, [sp, #8]
 1d8:	cbnz	x8, 24c <_ZN4llvm15BitstreamCursor7advanceEj+0x24c>
 1dc:	add	x0, sp, #0x10
 1e0:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 1e4:	mov	w23, #0x1                   	// #1
 1e8:	sub	x0, x29, #0x10
 1ec:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 1f0:	cmp	w23, #0x1
 1f4:	b.ne	28 <_ZN4llvm15BitstreamCursor7advanceEj+0x28>  // b.any
 1f8:	b	224 <_ZN4llvm15BitstreamCursor7advanceEj+0x224>
 1fc:	mov	w9, wzr
 200:	cbnz	x8, 254 <_ZN4llvm15BitstreamCursor7advanceEj+0x254>
 204:	cmp	w9, #0x0
 208:	cinc	w23, w22, eq  // eq = none
 20c:	b	1e8 <_ZN4llvm15BitstreamCursor7advanceEj+0x1e8>
 210:	ldrb	w8, [x19, #8]
 214:	str	xzr, [x19]
 218:	and	w8, w8, #0xfc
 21c:	orr	w8, w8, #0x2
 220:	strb	w8, [x19, #8]
 224:	ldp	x20, x19, [sp, #96]
 228:	ldp	x22, x21, [sp, #80]
 22c:	ldr	x23, [sp, #64]
 230:	ldp	x29, x30, [sp, #48]
 234:	add	sp, sp, #0x70
 238:	ret
 23c:	add	x0, x29, #0x18
 240:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 244:	mov	x0, sp
 248:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 24c:	add	x0, sp, #0x8
 250:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 254:	add	x0, sp, #0x10
 258:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm15BitstreamCursor9SkipBlockEv:

0000000000000000 <_ZN4llvm15BitstreamCursor9SkipBlockEv>:
   0:	sub	sp, sp, #0xc0
   4:	stp	x29, x30, [sp, #144]
   8:	stp	x22, x21, [sp, #160]
   c:	stp	x20, x19, [sp, #176]
  10:	add	x29, sp, #0x90
  14:	mov	x19, x8
  18:	add	x8, sp, #0x30
  1c:	mov	w1, #0x4                   	// #4
  20:	mov	x20, x0
  24:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
  28:	ldrb	w9, [sp, #56]
  2c:	ubfiz	w10, w9, #1, #1
  30:	and	w8, w9, #0xfffffffd
  34:	orr	w10, w10, w8
  38:	strb	w10, [sp, #56]
  3c:	tbnz	w9, #0, 68 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x68>
  40:	add	x0, sp, #0x30
  44:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
  48:	ldr	w8, [x20, #32]
  4c:	subs	w8, w8, #0x20
  50:	b.cc	84 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x84>  // b.lo, b.ul, b.last
  54:	ldr	x9, [x20, #24]
  58:	lsr	x8, x9, x8
  5c:	str	x8, [x20, #24]
  60:	mov	w8, #0x20                  	// #32
  64:	b	88 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x88>
  68:	ldr	x9, [sp, #48]
  6c:	strb	w8, [sp, #56]
  70:	str	xzr, [sp, #48]
  74:	add	x0, sp, #0x30
  78:	orr	x8, x9, #0x1
  7c:	str	x8, [x19]
  80:	b	120 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x120>
  84:	mov	w8, wzr
  88:	str	w8, [x20, #32]
  8c:	add	x8, sp, #0x30
  90:	mov	w1, #0x20                  	// #32
  94:	mov	x0, x20
  98:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
  9c:	mov	x0, sp
  a0:	add	x1, sp, #0x30
  a4:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
  a8:	add	x0, sp, #0x30
  ac:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
  b0:	ldrb	w9, [sp, #8]
  b4:	ubfiz	w10, w9, #1, #1
  b8:	and	w8, w9, #0xfffffffd
  bc:	orr	w10, w10, w8
  c0:	strb	w10, [sp, #8]
  c4:	tbnz	w9, #0, 108 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x108>
  c8:	mov	x0, sp
  cc:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
  d0:	ldr	w8, [x0]
  d4:	ldr	w9, [x20, #32]
  d8:	ldp	x10, x11, [x20, #8]
  dc:	cbnz	w9, 138 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x138>
  e0:	cmp	x10, x11
  e4:	b.hi	138 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x138>  // b.pmore
  e8:	bl	0 <_ZNSt3_V216generic_categoryEv>
  ec:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
  f0:	mov	x1, x0
  f4:	add	x2, x2, #0x0
  f8:	mov	w0, #0x54                  	// #84
  fc:	mov	x8, x19
 100:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
 104:	b	11c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x11c>
 108:	ldr	x9, [sp]
 10c:	strb	w8, [sp, #8]
 110:	str	xzr, [sp]
 114:	orr	x8, x9, #0x1
 118:	str	x8, [x19]
 11c:	mov	x0, sp
 120:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 124:	ldp	x20, x19, [sp, #176]
 128:	ldp	x22, x21, [sp, #160]
 12c:	ldp	x29, x30, [sp, #144]
 130:	add	sp, sp, #0xc0
 134:	ret
 138:	lsl	x11, x11, #3
 13c:	sub	x22, x11, x9
 140:	add	x21, x22, x8, lsl #5
 144:	cmp	x10, x21, lsr #3
 148:	b.cs	1f4 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x1f4>  // b.hs, b.nlast
 14c:	bl	0 <_ZNSt3_V216generic_categoryEv>
 150:	mov	w8, #0x54                  	// #84
 154:	sturb	wzr, [x29, #-32]
 158:	stp	xzr, xzr, [sp, #64]
 15c:	stp	x8, x0, [x29, #-16]
 160:	adrp	x8, 0 <_ZTVN4llvm18raw_string_ostreamE>
 164:	ldr	x8, [x8]
 168:	mov	w10, #0x1                   	// #1
 16c:	str	w10, [sp, #80]
 170:	sub	x9, x29, #0x30
 174:	add	x8, x8, #0x10
 178:	stp	x8, xzr, [sp, #48]
 17c:	adrp	x8, 0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 180:	ldr	x8, [x8]
 184:	adrp	x10, 0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 188:	add	x10, x10, #0x0
 18c:	add	x20, x9, #0x10
 190:	add	x8, x8, #0x10
 194:	add	x0, sp, #0x30
 198:	add	x1, sp, #0x10
 19c:	str	x9, [sp, #88]
 1a0:	stp	x20, xzr, [x29, #-48]
 1a4:	stp	x8, x10, [sp, #16]
 1a8:	stp	x22, x21, [sp, #32]
 1ac:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 1b0:	ldr	x8, [sp, #72]
 1b4:	ldr	x9, [sp, #56]
 1b8:	cmp	x8, x9
 1bc:	b.eq	1c8 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x1c8>  // b.none
 1c0:	add	x0, sp, #0x30
 1c4:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 1c8:	ldr	x0, [sp, #88]
 1cc:	sub	x1, x29, #0x10
 1d0:	mov	x8, x19
 1d4:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 1d8:	add	x0, sp, #0x30
 1dc:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 1e0:	ldur	x0, [x29, #-48]
 1e4:	cmp	x0, x20
 1e8:	b.eq	11c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x11c>  // b.none
 1ec:	bl	0 <_ZdlPv>
 1f0:	b	11c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x11c>
 1f4:	mov	x8, x19
 1f8:	mov	x0, x20
 1fc:	mov	x1, x21
 200:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 204:	ldr	x9, [x19]
 208:	tst	x9, #0xfffffffffffffffe
 20c:	and	x8, x9, #0xfffffffffffffffe
 210:	cset	w9, ne  // ne = any
 214:	orr	x9, x8, x9
 218:	str	x9, [x19]
 21c:	cbnz	x8, 224 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x224>
 220:	cbnz	x9, 230 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x230>
 224:	cbnz	x8, 11c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x11c>
 228:	mov	w8, #0x1                   	// #1
 22c:	b	118 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x118>
 230:	mov	x0, x19
 234:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm8ExpectedINS_14BitstreamEntryEEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedINS_14BitstreamEntryEEC2ENS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	orr	w8, w8, #0x3
  10:	strb	w8, [x0, #8]
  14:	ldr	x9, [x1]
  18:	tst	x9, #0xfffffffffffffffe
  1c:	and	x8, x9, #0xfffffffffffffffe
  20:	cset	w9, ne  // ne = any
  24:	orr	x9, x8, x9
  28:	str	x9, [x1]
  2c:	cbz	x8, 48 <_ZN4llvm8ExpectedINS_14BitstreamEntryEEC2ENS_5ErrorE+0x48>
  30:	ldrb	w9, [x0, #8]
  34:	tbz	w9, #0, 68 <_ZN4llvm8ExpectedINS_14BitstreamEntryEEC2ENS_5ErrorE+0x68>
  38:	str	x8, [x0]
  3c:	str	xzr, [x1]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEEC2ENS_5ErrorE>
  4c:	adrp	x1, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEEC2ENS_5ErrorE>
  50:	adrp	x3, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEEC2ENS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x1ce                 	// #462
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEEC2ENS_5ErrorE>
  6c:	adrp	x1, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEEC2ENS_5ErrorE>
  70:	adrp	x3, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEEC2ENS_5ErrorE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x27c                 	// #636
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamCursor8ReadCodeEv:

0000000000000000 <_ZN4llvm15BitstreamCursor8ReadCodeEv>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	str	x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w1, [x0, #36]
  14:	mov	x19, x8
  18:	mov	x8, sp
  1c:	bl	0 <_ZN4llvm15BitstreamCursor8ReadCodeEv>
  20:	mov	x1, sp
  24:	mov	x0, x19
  28:	bl	0 <_ZN4llvm15BitstreamCursor8ReadCodeEv>
  2c:	mov	x0, sp
  30:	bl	0 <_ZN4llvm15BitstreamCursor8ReadCodeEv>
  34:	ldr	x19, [sp, #32]
  38:	ldp	x29, x30, [sp, #16]
  3c:	add	sp, sp, #0x30
  40:	ret

Disassembly of section .text._ZN4llvm15BitstreamCursor12ReadBlockEndEv:

0000000000000000 <_ZN4llvm15BitstreamCursor12ReadBlockEndEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #72]
   c:	cbz	w8, 30 <_ZN4llvm15BitstreamCursor12ReadBlockEndEv+0x30>
  10:	ldr	w8, [x0, #32]
  14:	subs	w8, w8, #0x20
  18:	b.cc	38 <_ZN4llvm15BitstreamCursor12ReadBlockEndEv+0x38>  // b.lo, b.ul, b.last
  1c:	ldr	x9, [x0, #24]
  20:	lsr	x8, x9, x8
  24:	str	x8, [x0, #24]
  28:	mov	w8, #0x20                  	// #32
  2c:	b	3c <_ZN4llvm15BitstreamCursor12ReadBlockEndEv+0x3c>
  30:	mov	w0, #0x1                   	// #1
  34:	b	48 <_ZN4llvm15BitstreamCursor12ReadBlockEndEv+0x48>
  38:	mov	w8, wzr
  3c:	str	w8, [x0, #32]
  40:	bl	0 <_ZN4llvm15BitstreamCursor12ReadBlockEndEv>
  44:	mov	w0, wzr
  48:	ldp	x29, x30, [sp], #16
  4c:	ret

Disassembly of section .text._ZN4llvm15BitstreamCursor13popBlockScopeEv:

0000000000000000 <_ZN4llvm15BitstreamCursor13popBlockScopeEv>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	str	x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	ldr	w8, [x0, #72]
  14:	cbz	w8, 70 <_ZN4llvm15BitstreamCursor13popBlockScopeEv+0x70>
  18:	ldp	x10, x9, [x0, #56]
  1c:	ldur	q1, [x0, #40]
  20:	add	x19, x0, #0x40
  24:	add	x8, x9, x8, lsl #5
  28:	ldur	w9, [x8, #-32]
  2c:	str	w9, [x0, #36]
  30:	ldur	q0, [x8, #-24]
  34:	stur	q0, [x0, #40]
  38:	ldur	x9, [x8, #-8]
  3c:	str	x9, [x0, #56]
  40:	mov	x0, sp
  44:	str	q1, [sp]
  48:	str	x10, [sp, #16]
  4c:	stp	xzr, xzr, [x8, #-24]
  50:	stur	xzr, [x8, #-8]
  54:	bl	0 <_ZN4llvm15BitstreamCursor13popBlockScopeEv>
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm15BitstreamCursor13popBlockScopeEv>
  60:	ldr	x19, [sp, #48]
  64:	ldp	x29, x30, [sp, #32]
  68:	add	sp, sp, #0x40
  6c:	ret
  70:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13popBlockScopeEv>
  74:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13popBlockScopeEv>
  78:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13popBlockScopeEv>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0xa7                  	// #167
  8c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	w8, w10, [x0, #8]
   c:	sub	x9, x8, #0x1
  10:	cmp	x9, x10
  14:	b.hi	38 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x38>  // b.pmore
  18:	ldr	x8, [x0]
  1c:	and	x10, x9, #0xffffffff
  20:	str	w9, [x0, #8]
  24:	add	x8, x8, x10, lsl #5
  28:	add	x8, x8, #0x8
  2c:	mov	x0, x8
  30:	ldp	x29, x30, [sp], #16
  34:	b	0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv>
  38:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv>
  3c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv>
  40:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x43                  	// #67
  54:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedINS_14BitstreamEntryEE13moveConstructIS1_EEvONS0_IT_EE:

0000000000000000 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE13moveConstructIS1_EEvONS0_IT_EE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	ldrb	w9, [x1, #8]
  10:	and	w8, w8, #0xfc
  14:	bfxil	w8, w9, #0, #1
  18:	orr	w8, w8, #0x2
  1c:	strb	w8, [x0, #8]
  20:	ldrb	w8, [x1, #8]
  24:	and	w9, w8, #0xfffffffd
  28:	strb	w9, [x1, #8]
  2c:	ldrb	w9, [x0, #8]
  30:	tbnz	w9, #0, 40 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE13moveConstructIS1_EEvONS0_IT_EE+0x40>
  34:	tbnz	w8, #0, 58 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE13moveConstructIS1_EEvONS0_IT_EE+0x58>
  38:	ldr	x8, [x1]
  3c:	b	4c <_ZN4llvm8ExpectedINS_14BitstreamEntryEE13moveConstructIS1_EEvONS0_IT_EE+0x4c>
  40:	tbz	w8, #0, 78 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE13moveConstructIS1_EEvONS0_IT_EE+0x78>
  44:	ldr	x8, [x1]
  48:	str	xzr, [x1]
  4c:	str	x8, [x0]
  50:	ldp	x29, x30, [sp], #16
  54:	ret
  58:	adrp	x0, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE13moveConstructIS1_EEvONS0_IT_EE>
  5c:	adrp	x1, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE13moveConstructIS1_EEvONS0_IT_EE>
  60:	adrp	x3, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE13moveConstructIS1_EEvONS0_IT_EE>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x272                 	// #626
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE13moveConstructIS1_EEvONS0_IT_EE>
  7c:	adrp	x1, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE13moveConstructIS1_EEvONS0_IT_EE>
  80:	adrp	x3, 0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE13moveConstructIS1_EEvONS0_IT_EE>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x27c                 	// #636
  94:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE12emplace_backIJEEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE12emplace_backIJEEEvDpOT_>:
   0:	ldp	x1, x8, [x0, #8]
   4:	cmp	x1, x8
   8:	b.eq	40 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE12emplace_backIJEEEvDpOT_+0x40>  // b.none
   c:	movi	v0.2d, #0x0
  10:	mov	x8, x1
  14:	stp	q0, q0, [x1, #16]
  18:	str	q0, [x8, #48]!
  1c:	str	q0, [x1]
  20:	stp	x8, xzr, [x1, #32]
  24:	strb	wzr, [x8]
  28:	stp	xzr, xzr, [x1, #72]
  2c:	str	xzr, [x1, #64]
  30:	ldr	x8, [x0, #8]
  34:	add	x8, x8, #0x58
  38:	str	x8, [x0, #8]
  3c:	ret
  40:	b	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE12emplace_backIJEEEvDpOT_>

Disassembly of section .text._ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	adrp	x2, 0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  20:	mov	x23, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  34:	ldp	x21, x24, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  48:	subs	x8, x23, x21
  4c:	add	x8, x0, x8
  50:	movi	v0.2d, #0x0
  54:	mov	x9, x8
  58:	stp	q0, q0, [x8, #16]
  5c:	str	q0, [x9, #48]!
  60:	mov	x22, x0
  64:	str	q0, [x8]
  68:	stp	x9, xzr, [x8, #32]
  6c:	strb	wzr, [x9]
  70:	stp	xzr, xzr, [x8, #72]
  74:	str	xzr, [x8, #64]
  78:	mov	x8, x0
  7c:	b.eq	138 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x138>  // b.none
  80:	mov	x9, x22
  84:	mov	x8, x21
  88:	ldr	w10, [x8]
  8c:	mov	x25, x9
  90:	add	x26, x25, #0x30
  94:	add	x27, x8, #0x30
  98:	str	w10, [x9]
  9c:	ldur	q0, [x8, #8]
  a0:	stur	q0, [x9, #8]
  a4:	ldr	x9, [x8, #24]
  a8:	str	x9, [x25, #24]
  ac:	stp	xzr, xzr, [x8, #8]
  b0:	str	xzr, [x8, #24]
  b4:	str	x26, [x25, #32]
  b8:	ldr	x9, [x8, #32]
  bc:	cmp	x9, x27
  c0:	b.eq	d4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd4>  // b.none
  c4:	str	x9, [x25, #32]
  c8:	ldr	x8, [x8, #48]
  cc:	str	x8, [x25, #48]
  d0:	b	dc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xdc>
  d4:	ldr	q0, [x9]
  d8:	str	q0, [x25, #48]
  dc:	ldur	x8, [x27, #-8]
  e0:	mov	x0, x27
  e4:	stur	x8, [x26, #-8]
  e8:	stp	x27, xzr, [x27, #-16]
  ec:	strb	wzr, [x27]
  f0:	ldr	q0, [x0, #16]!
  f4:	str	q0, [x26, #16]
  f8:	ldr	x8, [x27, #32]
  fc:	str	x8, [x26, #32]
 100:	str	xzr, [x0]
 104:	stp	xzr, xzr, [x27, #24]
 108:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 10c:	ldur	x0, [x27, #-16]
 110:	cmp	x0, x27
 114:	b.eq	11c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x11c>  // b.none
 118:	bl	0 <_ZdlPv>
 11c:	sub	x0, x27, #0x28
 120:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 124:	add	x8, x27, #0x28
 128:	cmp	x8, x23
 12c:	add	x9, x26, #0x28
 130:	b.ne	88 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x88>  // b.any
 134:	add	x8, x25, #0x58
 138:	cmp	x24, x23
 13c:	add	x26, x8, #0x58
 140:	b.eq	1f4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1f4>  // b.none
 144:	ldr	w8, [x23]
 148:	mov	x25, x26
 14c:	add	x27, x23, #0x30
 150:	str	w8, [x26]
 154:	ldur	q0, [x23, #8]
 158:	stur	q0, [x26, #8]
 15c:	ldr	x8, [x23, #24]
 160:	add	x26, x26, #0x30
 164:	str	x8, [x25, #24]
 168:	stp	xzr, xzr, [x23, #8]
 16c:	str	xzr, [x23, #24]
 170:	str	x26, [x25, #32]
 174:	ldr	x8, [x23, #32]
 178:	cmp	x8, x27
 17c:	b.eq	190 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x190>  // b.none
 180:	str	x8, [x25, #32]
 184:	ldr	x8, [x23, #48]
 188:	str	x8, [x25, #48]
 18c:	b	198 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x198>
 190:	ldr	q0, [x8]
 194:	str	q0, [x25, #48]
 198:	ldur	x8, [x27, #-8]
 19c:	mov	x0, x27
 1a0:	stur	x8, [x26, #-8]
 1a4:	stp	x27, xzr, [x27, #-16]
 1a8:	strb	wzr, [x27]
 1ac:	ldr	q0, [x0, #16]!
 1b0:	str	q0, [x26, #16]
 1b4:	ldr	x8, [x27, #32]
 1b8:	str	x8, [x26, #32]
 1bc:	str	xzr, [x0]
 1c0:	stp	xzr, xzr, [x27, #24]
 1c4:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 1c8:	ldur	x0, [x27, #-16]
 1cc:	cmp	x0, x27
 1d0:	b.eq	1d8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1d8>  // b.none
 1d4:	bl	0 <_ZdlPv>
 1d8:	sub	x0, x27, #0x28
 1dc:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 1e0:	add	x23, x27, #0x28
 1e4:	cmp	x23, x24
 1e8:	add	x26, x26, #0x28
 1ec:	b.ne	144 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x144>  // b.any
 1f0:	add	x26, x25, #0x58
 1f4:	cbz	x21, 200 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x200>
 1f8:	mov	x0, x21
 1fc:	bl	0 <_ZdlPv>
 200:	mov	w8, #0x58                  	// #88
 204:	madd	x8, x20, x8, x22
 208:	stp	x22, x26, [x19]
 20c:	str	x8, [x19, #16]
 210:	ldp	x20, x19, [sp, #80]
 214:	ldp	x22, x21, [sp, #64]
 218:	ldp	x24, x23, [sp, #48]
 21c:	ldp	x26, x25, [sp, #32]
 220:	ldr	x27, [sp, #16]
 224:	ldp	x29, x30, [sp], #96
 228:	ret

Disassembly of section .text._ZNKSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x10, x9, [x0]
   c:	mov	x8, #0x745d                	// #29789
  10:	movk	x8, #0x45d1, lsl #16
  14:	movk	x8, #0x5d17, lsl #32
  18:	sub	x9, x9, x10
  1c:	mov	x10, #0x8ba3                	// #35747
  20:	movk	x10, #0xba2e, lsl #16
  24:	movk	x10, #0xa2e8, lsl #32
  28:	asr	x9, x9, #3
  2c:	movk	x10, #0x2e8b, lsl #48
  30:	movk	x8, #0x174, lsl #48
  34:	mul	x9, x9, x10
  38:	sub	x10, x8, x9
  3c:	cmp	x10, x1
  40:	b.cc	70 <_ZNKSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE12_M_check_lenEmPKc+0x70>  // b.lo, b.ul, b.last
  44:	cmp	x9, x1
  48:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  4c:	adds	x9, x10, x9
  50:	cset	w10, cs  // cs = hs, nlast
  54:	cmp	x9, x8
  58:	cset	w11, hi  // hi = pmore
  5c:	orr	w10, w10, w11
  60:	cmp	w10, #0x0
  64:	csel	x0, x8, x9, ne  // ne = any
  68:	ldp	x29, x30, [sp], #16
  6c:	ret
  70:	mov	x0, x2
  74:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE11_M_allocateEm>:
   0:	cbz	x1, 28 <_ZNSt12_Vector_baseIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE11_M_allocateEm+0x28>
   4:	mov	x8, #0x745e                	// #29790
   8:	movk	x8, #0x45d1, lsl #16
   c:	movk	x8, #0x5d17, lsl #32
  10:	movk	x8, #0x174, lsl #48
  14:	cmp	x1, x8
  18:	b.cs	30 <_ZNSt12_Vector_baseIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE11_M_allocateEm+0x30>  // b.hs, b.nlast
  1c:	mov	w8, #0x58                  	// #88
  20:	mul	x0, x1, x8
  24:	b	0 <_Znwm>
  28:	mov	x0, xzr
  2c:	ret
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:

0000000000000000 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	44 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev+0x44>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19, #8]
  24:	add	x8, x19, #0x18
  28:	cmp	x8, x0
  2c:	b.eq	34 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	add	x19, x19, #0x28
  38:	cmp	x21, x19
  3c:	b.ne	20 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev+0x20>  // b.any
  40:	ldr	x19, [x20]
  44:	cbz	x19, 5c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev+0x5c>
  48:	mov	x0, x19
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZdlPv>
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldr	x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	54 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EED2Ev+0x54>  // b.none
  1c:	mov	x20, x0
  20:	add	x0, x19, #0x40
  24:	add	x22, x19, #0x30
  28:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EED2Ev>
  2c:	ldr	x0, [x19, #32]
  30:	cmp	x22, x0
  34:	b.eq	3c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EED2Ev+0x3c>  // b.none
  38:	bl	0 <_ZdlPv>
  3c:	add	x0, x19, #0x8
  40:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EED2Ev>
  44:	add	x19, x19, #0x58
  48:	cmp	x21, x19
  4c:	b.ne	20 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EED2Ev+0x20>  // b.any
  50:	ldr	x19, [x20]
  54:	cbz	x19, 6c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EED2Ev+0x6c>
  58:	mov	x0, x19
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x22, x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	b	0 <_ZdlPv>
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldp	x22, x21, [sp, #16]
  74:	ldp	x29, x30, [sp], #48
  78:	ret

Disassembly of section .text._ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	mov	w2, #0x3a                  	// #58
  20:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  24:	ldrb	w20, [x19, #8]
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	tbnz	w20, #0, 44 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x44>
  30:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  34:	add	x1, x1, #0x0
  38:	mov	w2, #0x83                  	// #131
  3c:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  40:	bl	0 <abort>
  44:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  48:	add	x1, x1, #0x0
  4c:	mov	w2, #0x27                  	// #39
  50:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  54:	ldrb	w8, [x19, #8]
  58:	tbnz	w8, #0, 7c <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x7c>
  5c:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  60:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  64:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x281                 	// #641
  78:	bl	0 <__assert_fail>
  7c:	ldr	x19, [x19]
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	ldr	x8, [x19]
  88:	mov	x1, x0
  8c:	mov	x0, x19
  90:	ldr	x8, [x8, #16]
  94:	blr	x8
  98:	bl	0 <abort>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  6c:	lsl	x0, x21, #5
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, 124 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x124>
  c4:	add	x8, x0, x8, lsl #5
  c8:	mov	x9, x20
  cc:	ldr	w10, [x0]
  d0:	str	w10, [x9]
  d4:	ldur	q0, [x0, #8]
  d8:	stur	q0, [x9, #8]
  dc:	ldr	x10, [x0, #24]
  e0:	str	x10, [x9, #24]
  e4:	stp	xzr, xzr, [x0, #8]
  e8:	str	xzr, [x0, #24]
  ec:	add	x0, x0, #0x20
  f0:	cmp	x0, x8
  f4:	add	x9, x9, #0x20
  f8:	b.ne	cc <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xcc>  // b.any
  fc:	ldr	w8, [x19, #8]
 100:	ldr	x0, [x19]
 104:	cbz	w8, 124 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x124>
 108:	sub	x22, x0, #0x18
 10c:	lsl	x23, x8, #5
 110:	add	x0, x22, x23
 114:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
 118:	subs	x23, x23, #0x20
 11c:	b.ne	110 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x110>  // b.any
 120:	ldr	x0, [x19]
 124:	add	x8, x19, #0x10
 128:	cmp	x0, x8
 12c:	b.eq	134 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x134>  // b.none
 130:	bl	0 <free>
 134:	str	x20, [x19]
 138:	str	w21, [x19, #12]
 13c:	ldp	x20, x19, [sp, #48]
 140:	ldp	x22, x21, [sp, #32]
 144:	ldr	x23, [sp, #16]
 148:	ldp	x29, x30, [sp], #64
 14c:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	cmp	x2, x3
  1c:	b.eq	328 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x328>  // b.none
  20:	ldp	x23, x8, [x0, #8]
  24:	sub	x24, x3, x2
  28:	mov	x19, x1
  2c:	asr	x1, x24, #4
  30:	sub	x8, x8, x23
  34:	mov	x22, x3
  38:	mov	x20, x2
  3c:	mov	x21, x0
  40:	cmp	x1, x8, asr #4
  44:	b.ls	174 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x174>  // b.plast
  48:	adrp	x2, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>
  4c:	add	x2, x2, #0x0
  50:	mov	x0, x21
  54:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>
  58:	mov	x23, x0
  5c:	mov	x0, x21
  60:	mov	x1, x23
  64:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>
  68:	ldr	x8, [x21]
  6c:	mov	x24, x0
  70:	mov	x25, x0
  74:	cmp	x8, x19
  78:	b.eq	9c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x9c>  // b.none
  7c:	mov	x25, x24
  80:	str	xzr, [x25, #8]
  84:	ldr	q0, [x8]
  88:	str	xzr, [x8, #8]
  8c:	str	q0, [x25], #16
  90:	str	xzr, [x8], #16
  94:	cmp	x8, x19
  98:	b.ne	80 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x80>  // b.any
  9c:	adrp	x8, 0 <__pthread_key_create>
  a0:	ldr	x8, [x8]
  a4:	ldr	x9, [x20]
  a8:	str	x9, [x25]
  ac:	ldr	x9, [x20, #8]
  b0:	str	x9, [x25, #8]
  b4:	cbz	x9, e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xe0>
  b8:	add	x9, x9, #0x8
  bc:	cbz	x8, d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xd4>
  c0:	ldaxr	w10, [x9]
  c4:	add	w10, w10, #0x1
  c8:	stlxr	w11, w10, [x9]
  cc:	cbnz	w11, c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xc0>
  d0:	b	e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xe0>
  d4:	ldr	w10, [x9]
  d8:	add	w10, w10, #0x1
  dc:	str	w10, [x9]
  e0:	add	x20, x20, #0x10
  e4:	cmp	x20, x22
  e8:	add	x25, x25, #0x10
  ec:	b.ne	a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xa4>  // b.any
  f0:	ldr	x20, [x21, #8]
  f4:	cmp	x20, x19
  f8:	b.eq	130 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x130>  // b.none
  fc:	mov	x8, xzr
 100:	add	x9, x25, x8
 104:	add	x10, x19, x8
 108:	str	xzr, [x9, #8]
 10c:	ldr	q0, [x10]
 110:	add	x11, x10, #0x10
 114:	cmp	x11, x20
 118:	add	x8, x8, #0x10
 11c:	str	xzr, [x10, #8]
 120:	str	q0, [x9]
 124:	str	xzr, [x10]
 128:	b.ne	100 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x100>  // b.any
 12c:	add	x25, x25, x8
 130:	ldr	x19, [x21]
 134:	cmp	x19, x20
 138:	b.eq	158 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x158>  // b.none
 13c:	ldr	x0, [x19, #8]
 140:	cbz	x0, 148 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x148>
 144:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>
 148:	add	x19, x19, #0x10
 14c:	cmp	x20, x19
 150:	b.ne	13c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x13c>  // b.any
 154:	ldr	x20, [x21]
 158:	cbz	x20, 164 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x164>
 15c:	mov	x0, x20
 160:	bl	0 <_ZdlPv>
 164:	add	x8, x24, x23, lsl #4
 168:	stp	x24, x25, [x21]
 16c:	str	x8, [x21, #16]
 170:	b	328 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x328>
 174:	sub	x8, x23, x19
 178:	cmp	x1, x8, asr #4
 17c:	b.cs	238 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x238>  // b.hs, b.nlast
 180:	sub	x8, x23, x1, lsl #4
 184:	cbz	x24, 1b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1b8>
 188:	mov	x9, xzr
 18c:	neg	x10, x1, lsl #4
 190:	add	x12, x23, x9
 194:	add	x11, x8, x9
 198:	str	xzr, [x12, #8]
 19c:	ldr	q0, [x11]
 1a0:	add	x9, x9, #0x10
 1a4:	cmn	x10, x9
 1a8:	str	xzr, [x11, #8]
 1ac:	str	q0, [x12]
 1b0:	str	xzr, [x11]
 1b4:	b.ne	190 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x190>  // b.any
 1b8:	sub	x8, x8, x19
 1bc:	add	x9, x23, x1, lsl #4
 1c0:	cmp	x8, #0x1
 1c4:	str	x9, [x21, #8]
 1c8:	b.lt	204 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x204>  // b.tstop
 1cc:	lsr	x8, x8, #4
 1d0:	add	x21, x8, #0x1
 1d4:	neg	x22, x1, lsl #4
 1d8:	add	x8, x23, x22
 1dc:	ldp	x9, x10, [x8, #-16]
 1e0:	stp	xzr, xzr, [x8, #-16]
 1e4:	str	x9, [x23, #-16]!
 1e8:	ldr	x0, [x23, #8]
 1ec:	str	x10, [x23, #8]
 1f0:	cbz	x0, 1f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1f8>
 1f4:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>
 1f8:	sub	x21, x21, #0x1
 1fc:	cmp	x21, #0x1
 200:	b.gt	1d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1d8>
 204:	cmp	x24, #0x1
 208:	b.lt	328 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x328>  // b.tstop
 20c:	lsr	x8, x24, #4
 210:	add	x21, x8, #0x1
 214:	add	x1, x20, #0x8
 218:	ldr	x8, [x20], #16
 21c:	add	x0, x19, #0x8
 220:	str	x8, [x19], #16
 224:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>
 228:	sub	x21, x21, #0x1
 22c:	cmp	x21, #0x1
 230:	b.gt	214 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x214>
 234:	b	328 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x328>
 238:	asr	x9, x8, #4
 23c:	add	x8, x20, x9, lsl #4
 240:	cmp	x8, x22
 244:	b.eq	2ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2ac>  // b.none
 248:	adrp	x10, 0 <__pthread_key_create>
 24c:	ldr	x10, [x10]
 250:	mov	x11, x23
 254:	mov	x12, x8
 258:	ldr	x13, [x12]
 25c:	str	x13, [x11]
 260:	ldr	x13, [x12, #8]
 264:	str	x13, [x11, #8]
 268:	cbz	x13, 294 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x294>
 26c:	add	x13, x13, #0x8
 270:	cbz	x10, 288 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x288>
 274:	ldaxr	w14, [x13]
 278:	add	w14, w14, #0x1
 27c:	stlxr	w15, w14, [x13]
 280:	cbnz	w15, 274 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x274>
 284:	b	294 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x294>
 288:	ldr	w14, [x13]
 28c:	add	w14, w14, #0x1
 290:	str	w14, [x13]
 294:	add	x12, x12, #0x10
 298:	cmp	x12, x22
 29c:	add	x11, x11, #0x10
 2a0:	b.ne	258 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x258>  // b.any
 2a4:	ldr	x10, [x21, #8]
 2a8:	b	2b0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2b0>
 2ac:	mov	x10, x23
 2b0:	sub	x9, x1, x9
 2b4:	add	x9, x10, x9, lsl #4
 2b8:	cmp	x23, x19
 2bc:	str	x9, [x21, #8]
 2c0:	b.eq	2ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2ec>  // b.none
 2c4:	add	x9, x9, #0x8
 2c8:	mov	x11, x19
 2cc:	str	xzr, [x9]
 2d0:	ldr	q0, [x11]
 2d4:	str	xzr, [x11, #8]
 2d8:	stur	q0, [x9, #-8]
 2dc:	str	xzr, [x11], #16
 2e0:	cmp	x11, x23
 2e4:	add	x9, x9, #0x10
 2e8:	b.ne	2cc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2cc>  // b.any
 2ec:	sub	x8, x8, x20
 2f0:	add	x9, x10, x1, lsl #4
 2f4:	cmp	x8, #0x1
 2f8:	str	x9, [x21, #8]
 2fc:	b.lt	328 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x328>  // b.tstop
 300:	lsr	x8, x8, #4
 304:	add	x21, x8, #0x1
 308:	add	x1, x20, #0x8
 30c:	ldr	x8, [x20], #16
 310:	add	x0, x19, #0x8
 314:	str	x8, [x19], #16
 318:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>
 31c:	sub	x21, x21, #0x1
 320:	cmp	x21, #0x1
 324:	b.gt	308 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x308>
 328:	ldp	x20, x19, [sp, #64]
 32c:	ldp	x22, x21, [sp, #48]
 330:	ldp	x24, x23, [sp, #32]
 334:	ldr	x25, [sp, #16]
 338:	ldp	x29, x30, [sp], #80
 33c:	ret

Disassembly of section .text._ZNKSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  14:	sub	x10, x8, x9, asr #4
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #4
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #59
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #59
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #4
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_:

0000000000000000 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x20, [x1]
  14:	ldr	x0, [x0]
  18:	cmp	x20, x0
  1c:	b.eq	54 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x54>  // b.none
  20:	cbz	x20, 48 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x48>
  24:	adrp	x9, 0 <__pthread_key_create>
  28:	ldr	x9, [x9]
  2c:	add	x8, x20, #0x8
  30:	cbz	x9, 64 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x64>
  34:	ldaxr	w9, [x8]
  38:	add	w9, w9, #0x1
  3c:	stlxr	w10, w9, [x8]
  40:	cbnz	w10, 34 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x34>
  44:	ldr	x0, [x19]
  48:	cbz	x0, 50 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x50>
  4c:	bl	0 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_>
  50:	str	x20, [x19]
  54:	mov	x0, x19
  58:	ldp	x20, x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret
  64:	ldr	w9, [x8]
  68:	add	w9, w9, #0x1
  6c:	str	w9, [x8]
  70:	cbnz	x0, 4c <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x4c>
  74:	b	50 <_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_+0x50>

Disassembly of section .text._ZNK4llvm13format_objectIJmjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmjEE7snprintEPcj>:
   0:	ldr	x8, [x0, #8]
   4:	ldr	x3, [x0, #24]
   8:	ldr	w4, [x0, #16]
   c:	mov	w9, w2
  10:	mov	x0, x1
  14:	mov	x1, x9
  18:	mov	x2, x8
  1c:	b	0 <snprintf>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev>:
   0:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>:
   0:	mov	x8, x0
   4:	ldr	x0, [x0, #16]
   8:	add	x8, x8, #0x20
   c:	cmp	x0, x8
  10:	b.eq	18 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x18>  // b.none
  14:	b	0 <free>
  18:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv>:
   0:	cbz	x0, 8 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv+0x8>
   4:	b	0 <_ZdlPv>
   8:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>
  10:	ldr	x8, [x8]
  14:	mov	x19, x0
  18:	cmp	x1, x8
  1c:	b.eq	2c <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x2c>  // b.none
  20:	mov	x0, x1
  24:	bl	0 <_ZNSt19_Sp_make_shared_tag5_S_eqERKSt9type_info>
  28:	tbz	w0, #0, 34 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x34>
  2c:	add	x0, x19, #0x10
  30:	b	38 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x38>
  34:	mov	x0, xzr
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>:
   0:	ldp	x8, x9, [x0, #8]
   4:	mov	x2, x1
   8:	cmp	x8, x9
   c:	b.eq	30 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_+0x30>  // b.none
  10:	str	xzr, [x8, #8]
  14:	ldr	q0, [x2]
  18:	add	x9, x8, #0x10
  1c:	str	xzr, [x2, #8]
  20:	str	q0, [x8]
  24:	str	xzr, [x2]
  28:	str	x9, [x0, #8]
  2c:	ret
  30:	mov	x1, x8
  34:	b	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x23, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  20:	mov	x24, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  34:	ldp	x21, x25, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	sub	x26, x24, x21
  48:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  4c:	add	x8, x0, x26
  50:	str	xzr, [x8, #8]
  54:	ldr	q0, [x23]
  58:	mov	x22, x0
  5c:	mov	x0, x21
  60:	mov	x1, x24
  64:	mov	x2, x22
  68:	mov	x3, x19
  6c:	str	xzr, [x23, #8]
  70:	str	q0, [x8]
  74:	str	xzr, [x23]
  78:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  7c:	add	x2, x0, #0x10
  80:	mov	x0, x24
  84:	mov	x1, x25
  88:	mov	x3, x19
  8c:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  90:	mov	x23, x0
  94:	cbz	x21, a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xa0>
  98:	mov	x0, x21
  9c:	bl	0 <_ZdlPv>
  a0:	add	x8, x22, x20, lsl #4
  a4:	stp	x22, x23, [x19]
  a8:	str	x8, [x19, #16]
  ac:	ldp	x20, x19, [sp, #64]
  b0:	ldp	x22, x21, [sp, #48]
  b4:	ldp	x24, x23, [sp, #32]
  b8:	ldp	x26, x25, [sp, #16]
  bc:	ldp	x29, x30, [sp], #80
  c0:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cmp	x0, x1
  14:	mov	x19, x2
  18:	b.eq	54 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE+0x54>  // b.none
  1c:	mov	x20, x1
  20:	mov	x21, x0
  24:	str	xzr, [x19, #8]
  28:	ldr	q0, [x21]
  2c:	str	xzr, [x21, #8]
  30:	str	q0, [x19]
  34:	ldr	x0, [x21, #8]
  38:	str	xzr, [x21]
  3c:	cbz	x0, 44 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE+0x44>
  40:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE>
  44:	add	x21, x21, #0x10
  48:	cmp	x21, x20
  4c:	add	x19, x19, #0x10
  50:	b.ne	24 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE+0x24>  // b.any
  54:	mov	x0, x19
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12emplace_backIJS7_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12emplace_backIJS7_EEEvDpOT_>:
   0:	ldp	x8, x9, [x0, #8]
   4:	mov	x2, x1
   8:	cmp	x8, x9
   c:	b.eq	40 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12emplace_backIJS7_EEEvDpOT_+0x40>  // b.none
  10:	ldr	w9, [x2]
  14:	add	x10, x8, #0x18
  18:	str	x10, [x8, #8]
  1c:	str	w9, [x8]
  20:	ldr	x11, [x2, #8]
  24:	add	x9, x2, #0x18
  28:	cmp	x11, x9
  2c:	b.eq	48 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12emplace_backIJS7_EEEvDpOT_+0x48>  // b.none
  30:	str	x11, [x8, #8]
  34:	ldr	x10, [x2, #24]
  38:	str	x10, [x8, #24]
  3c:	b	50 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12emplace_backIJS7_EEEvDpOT_+0x50>
  40:	mov	x1, x8
  44:	b	0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12emplace_backIJS7_EEEvDpOT_>
  48:	ldr	q0, [x11]
  4c:	str	q0, [x10]
  50:	ldr	x10, [x2, #16]
  54:	str	x10, [x8, #16]
  58:	stp	x9, xzr, [x2, #8]
  5c:	strb	wzr, [x2, #24]
  60:	ldr	x8, [x0, #8]
  64:	add	x8, x8, #0x28
  68:	str	x8, [x0, #8]
  6c:	ret

Disassembly of section .text._ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x24, x2
  20:	adrp	x2, 0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>
  24:	mov	x23, x1
  28:	add	x2, x2, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	mov	x19, x0
  34:	bl	0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>
  38:	ldp	x21, x25, [x19]
  3c:	mov	x20, x0
  40:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
  44:	movk	x9, #0xcccd
  48:	sub	x27, x23, x21
  4c:	asr	x8, x27, #3
  50:	mov	x0, x19
  54:	mov	x1, x20
  58:	mul	x26, x8, x9
  5c:	bl	0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>
  60:	ldr	w8, [x24]
  64:	add	x10, x0, x27
  68:	mov	x9, x10
  6c:	mov	x22, x0
  70:	str	w8, [x9], #24
  74:	str	x9, [x10, #8]!
  78:	ldr	x11, [x24, #8]
  7c:	add	x8, x24, #0x18
  80:	cmp	x11, x8
  84:	b.eq	a0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xa0>  // b.none
  88:	str	x11, [x10]
  8c:	ldr	x9, [x24, #24]
  90:	mov	w10, #0x28                  	// #40
  94:	madd	x10, x26, x10, x22
  98:	str	x9, [x10, #24]
  9c:	b	a8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xa8>
  a0:	ldr	q0, [x11]
  a4:	str	q0, [x9]
  a8:	ldr	x9, [x24, #16]
  ac:	mov	w10, #0x28                  	// #40
  b0:	madd	x10, x26, x10, x22
  b4:	cmp	x21, x23
  b8:	str	x9, [x10, #16]
  bc:	stp	x8, xzr, [x24, #8]
  c0:	mov	x8, x22
  c4:	strb	wzr, [x24, #24]
  c8:	b.eq	134 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x134>  // b.none
  cc:	mov	x9, x22
  d0:	mov	x11, x21
  d4:	ldr	w10, [x11]
  d8:	mov	x8, x9
  dc:	add	x9, x9, #0x18
  e0:	str	x9, [x8, #8]
  e4:	str	w10, [x8]
  e8:	ldr	x12, [x11, #8]
  ec:	add	x10, x11, #0x18
  f0:	cmp	x12, x10
  f4:	b.eq	108 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x108>  // b.none
  f8:	str	x12, [x8, #8]
  fc:	ldr	x11, [x11, #24]
 100:	str	x11, [x8, #24]
 104:	b	110 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x110>
 108:	ldr	q0, [x12]
 10c:	stur	q0, [x8, #24]
 110:	ldur	x12, [x10, #-8]
 114:	add	x11, x10, #0x10
 118:	cmp	x11, x23
 11c:	add	x9, x9, #0x10
 120:	str	x12, [x8, #16]
 124:	stp	x10, xzr, [x10, #-16]
 128:	strb	wzr, [x10]
 12c:	b.ne	d4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xd4>  // b.any
 130:	add	x8, x8, #0x28
 134:	cmp	x25, x23
 138:	add	x24, x8, #0x28
 13c:	b.eq	1a0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1a0>  // b.none
 140:	ldr	w10, [x23]
 144:	add	x9, x24, #0x18
 148:	str	x9, [x24, #8]
 14c:	mov	x8, x24
 150:	str	w10, [x24]
 154:	ldr	x11, [x23, #8]
 158:	add	x10, x23, #0x18
 15c:	cmp	x11, x10
 160:	b.eq	174 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x174>  // b.none
 164:	str	x11, [x8, #8]
 168:	ldr	x11, [x23, #24]
 16c:	str	x11, [x8, #24]
 170:	b	17c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x17c>
 174:	ldr	q0, [x11]
 178:	stur	q0, [x8, #24]
 17c:	ldur	x11, [x10, #-8]
 180:	add	x23, x10, #0x10
 184:	cmp	x23, x25
 188:	add	x24, x9, #0x10
 18c:	str	x11, [x8, #16]
 190:	stp	x10, xzr, [x10, #-16]
 194:	strb	wzr, [x10]
 198:	b.ne	140 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x140>  // b.any
 19c:	add	x24, x8, #0x28
 1a0:	cbz	x21, 1ac <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1ac>
 1a4:	mov	x0, x21
 1a8:	bl	0 <_ZdlPv>
 1ac:	mov	w8, #0x28                  	// #40
 1b0:	madd	x8, x20, x8, x22
 1b4:	stp	x22, x24, [x19]
 1b8:	str	x8, [x19, #16]
 1bc:	ldp	x20, x19, [sp, #80]
 1c0:	ldp	x22, x21, [sp, #64]
 1c4:	ldp	x24, x23, [sp, #48]
 1c8:	ldp	x26, x25, [sp, #32]
 1cc:	ldr	x27, [sp, #16]
 1d0:	ldp	x29, x30, [sp], #96
 1d4:	ret

Disassembly of section .text._ZNKSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x10, x9, [x0]
   c:	mov	x8, #0x3333333333333333    	// #3689348814741910323
  10:	movk	x8, #0x333, lsl #48
  14:	sub	x9, x9, x10
  18:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  1c:	asr	x9, x9, #3
  20:	movk	x10, #0xcccd
  24:	mul	x9, x9, x10
  28:	sub	x10, x8, x9
  2c:	cmp	x10, x1
  30:	b.cc	60 <_ZNKSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_M_check_lenEmPKc+0x60>  // b.lo, b.ul, b.last
  34:	cmp	x9, x1
  38:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  3c:	adds	x9, x10, x9
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x9, x8
  48:	cset	w11, hi  // hi = pmore
  4c:	orr	w10, w10, w11
  50:	cmp	w10, #0x0
  54:	csel	x0, x8, x9, ne  // ne = any
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	mov	x0, x2
  64:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE11_M_allocateEm>:
   0:	cbz	x1, 24 <_ZNSt12_Vector_baseISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE11_M_allocateEm+0x24>
   4:	mov	x8, #0x3333333333333333    	// #3689348814741910323
   8:	movk	x8, #0x3334
   c:	movk	x8, #0x333, lsl #48
  10:	cmp	x1, x8
  14:	b.cs	2c <_ZNSt12_Vector_baseISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE11_M_allocateEm+0x2c>  // b.hs, b.nlast
  18:	add	x8, x1, x1, lsl #2
  1c:	lsl	x0, x8, #3
  20:	b	0 <_Znwm>
  24:	mov	x0, xzr
  28:	ret
  2c:	stp	x29, x30, [sp, #-16]!
  30:	mov	x29, sp
  34:	bl	0 <_ZSt17__throw_bad_allocv>
