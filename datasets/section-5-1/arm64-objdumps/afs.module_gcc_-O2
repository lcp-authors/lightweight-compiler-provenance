
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//afs.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_bfs_close>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	mov	x29, sp
       8:	ldr	x0, [x0, #80]
       c:	bl	0 <grub_free>
      10:	mov	w0, #0x0                   	// #0
      14:	ldp	x29, x30, [sp], #16
      18:	ret
      1c:	nop

0000000000000020 <find_file>:
      20:	stp	x29, x30, [sp, #-336]!
      24:	mov	x29, sp
      28:	stp	x19, x20, [sp, #16]
      2c:	mov	x19, x2
      30:	mov	x20, x1
      34:	mov	x2, #0xf0                  	// #240
      38:	mov	w1, #0x0                   	// #0
      3c:	stp	x21, x22, [sp, #32]
      40:	mov	x22, x3
      44:	mov	x21, x0
      48:	add	x0, sp, #0x60
      4c:	stp	x23, x24, [sp, #48]
      50:	mov	w23, w4
      54:	bl	0 <memset>
      58:	add	x24, sp, #0x50
      5c:	ldr	w2, [x19, #44]
      60:	mov	x0, x20
      64:	ldrh	w6, [x19, #120]
      68:	add	x4, x24, #0x10
      6c:	ldr	w5, [x19, #76]
      70:	sub	w2, w2, #0x9
      74:	ldr	w1, [x19, #116]
      78:	mov	x3, #0xec                  	// #236
      7c:	sub	w5, w5, #0x9
      80:	lsl	x6, x6, x2
      84:	mov	x2, #0x0                   	// #0
      88:	stp	x20, x19, [sp, #80]
      8c:	lsl	w1, w1, w5
      90:	add	x1, x1, x6
      94:	bl	0 <grub_disk_read>
      98:	mov	w19, w0
      9c:	cbz	w0, b8 <find_file+0x98>
      a0:	mov	w0, w19
      a4:	ldp	x19, x20, [sp, #16]
      a8:	ldp	x21, x22, [sp, #32]
      ac:	ldp	x23, x24, [sp, #48]
      b0:	ldp	x29, x30, [sp], #336
      b4:	ret
      b8:	adrp	x2, 0 <grub_bfs_close>
      bc:	adrp	x1, 0 <grub_bfs_close>
      c0:	mov	w5, w23
      c4:	mov	x0, x21
      c8:	ldr	x4, [x2]
      cc:	add	x2, sp, #0x48
      d0:	ldr	x3, [x1]
      d4:	mov	x1, x24
      d8:	bl	0 <grub_fshelp_find_file_lookup>
      dc:	mov	w19, w0
      e0:	cbz	w0, 10c <find_file+0xec>
      e4:	ldr	x0, [sp, #72]
      e8:	cmp	x0, x24
      ec:	b.eq	a0 <find_file+0x80>  // b.none
      f0:	bl	0 <grub_free>
      f4:	mov	w0, w19
      f8:	ldp	x19, x20, [sp, #16]
      fc:	ldp	x21, x22, [sp, #32]
     100:	ldp	x23, x24, [sp, #48]
     104:	ldp	x29, x30, [sp], #336
     108:	ret
     10c:	ldr	x1, [sp, #72]
     110:	mov	x0, x22
     114:	mov	x2, #0xec                  	// #236
     118:	add	x1, x1, #0x10
     11c:	bl	0 <grub_memmove>
     120:	b	e4 <find_file+0xc4>
     124:	nop
	...

0000000000000138 <grub_bfs_dir_iter>:
     138:	stp	x29, x30, [sp, #-288]!
     13c:	mov	x3, #0xec                  	// #236
     140:	mov	x29, sp
     144:	stp	x19, x20, [sp, #16]
     148:	mov	x19, x2
     14c:	mov	x20, x0
     150:	add	x4, sp, #0x30
     154:	mov	x2, #0x0                   	// #0
     158:	ldr	x6, [x19]
     15c:	ldr	w5, [x19, #68]
     160:	ldr	x0, [x6]
     164:	sub	w5, w5, #0x9
     168:	lsl	x1, x1, x5
     16c:	bl	0 <grub_disk_read>
     170:	cbnz	w0, 1d8 <grub_bfs_dir_iter+0xa0>
     174:	ldrb	w3, [sp, #32]
     178:	mov	x1, #0x4240                	// #16960
     17c:	ldr	x0, [sp, #88]
     180:	orr	w3, w3, #0x2
     184:	movk	x1, #0xf, lsl #16
     188:	mov	x2, #0x0                   	// #0
     18c:	strb	w3, [sp, #32]
     190:	bl	0 <grub_divmod64>
     194:	mov	x4, x0
     198:	ldr	w2, [sp, #68]
     19c:	add	x1, sp, #0x20
     1a0:	ldrb	w3, [sp, #32]
     1a4:	mov	x0, x20
     1a8:	and	w2, w2, #0xe000
     1ac:	str	w4, [sp, #36]
     1b0:	cmp	w2, #0x4, lsl #12
     1b4:	cset	w2, eq  // eq = none
     1b8:	ldr	x4, [x19, #8]
     1bc:	bfxil	w3, w2, #0, #1
     1c0:	ldr	x2, [x19, #16]
     1c4:	strb	w3, [sp, #32]
     1c8:	blr	x4
     1cc:	ldp	x19, x20, [sp, #16]
     1d0:	ldp	x29, x30, [sp], #288
     1d4:	ret
     1d8:	bl	0 <grub_print_error>
     1dc:	mov	w0, #0x0                   	// #0
     1e0:	ldp	x19, x20, [sp, #16]
     1e4:	ldp	x29, x30, [sp], #288
     1e8:	ret
     1ec:	nop

00000000000001f0 <mount>:
     1f0:	stp	x29, x30, [sp, #-32]!
     1f4:	mov	x4, x1
     1f8:	mov	x3, #0x7c                  	// #124
     1fc:	mov	x29, sp
     200:	mov	x2, #0x0                   	// #0
     204:	str	x19, [sp, #16]
     208:	mov	x19, x1
     20c:	mov	x1, #0x2                   	// #2
     210:	bl	0 <grub_disk_read>
     214:	cmp	w0, #0xb
     218:	b.eq	27c <mount+0x8c>  // b.none
     21c:	cbnz	w0, 294 <mount+0xa4>
     220:	ldr	w2, [x19, #32]
     224:	mov	w1, #0x5331                	// #21297
     228:	movk	w1, #0x4146, lsl #16
     22c:	cmp	w2, w1
     230:	b.ne	27c <mount+0x8c>  // b.any
     234:	ldr	w2, [x19, #68]
     238:	mov	w1, #0x1031                	// #4145
     23c:	movk	w1, #0xdd12, lsl #16
     240:	cmp	w2, w1
     244:	b.ne	27c <mount+0x8c>  // b.any
     248:	ldr	w2, [x19, #112]
     24c:	mov	w1, #0x830e                	// #33550
     250:	movk	w1, #0x15b6, lsl #16
     254:	cmp	w2, w1
     258:	b.ne	27c <mount+0x8c>  // b.any
     25c:	ldr	w1, [x19, #40]
     260:	cbz	w1, 27c <mount+0x8c>
     264:	ldr	w3, [x19, #44]
     268:	mov	w2, #0x1                   	// #1
     26c:	lsl	w2, w2, w3
     270:	cmp	w2, w1
     274:	ccmp	w3, #0x8, #0x0, eq  // eq = none
     278:	b.hi	294 <mount+0xa4>  // b.pmore
     27c:	adrp	x1, 0 <grub_bfs_close>
     280:	mov	w0, #0x9                   	// #9
     284:	ldr	x19, [sp, #16]
     288:	ldp	x29, x30, [sp], #32
     28c:	ldr	x1, [x1]
     290:	b	0 <grub_error>
     294:	ldr	x19, [sp, #16]
     298:	ldp	x29, x30, [sp], #32
     29c:	ret
	...

00000000000002a8 <grub_bfs_label>:
     2a8:	stp	x29, x30, [sp, #-160]!
     2ac:	mov	x29, sp
     2b0:	stp	x19, x20, [sp, #16]
     2b4:	mov	x20, x1
     2b8:	add	x1, sp, #0x20
     2bc:	ldr	x0, [x0]
     2c0:	str	xzr, [x20]
     2c4:	bl	1f0 <mount>
     2c8:	mov	w19, w0
     2cc:	cbnz	w0, 2e0 <grub_bfs_label+0x38>
     2d0:	add	x0, sp, #0x20
     2d4:	mov	x1, #0x20                  	// #32
     2d8:	bl	0 <grub_strndup>
     2dc:	str	x0, [x20]
     2e0:	mov	w0, w19
     2e4:	ldp	x19, x20, [sp, #16]
     2e8:	ldp	x29, x30, [sp], #160
     2ec:	ret

00000000000002f0 <grub_bfs_open>:
     2f0:	stp	x29, x30, [sp, #-416]!
     2f4:	mov	x29, sp
     2f8:	stp	x19, x20, [sp, #16]
     2fc:	mov	x20, x0
     300:	ldr	x0, [x0, #8]
     304:	ldr	x0, [x0]
     308:	str	x21, [sp, #32]
     30c:	mov	x21, x1
     310:	add	x1, sp, #0x30
     314:	bl	1f0 <mount>
     318:	mov	w19, w0
     31c:	cbz	w0, 334 <grub_bfs_open+0x44>
     320:	mov	w0, w19
     324:	ldp	x19, x20, [sp, #16]
     328:	ldr	x21, [sp, #32]
     32c:	ldp	x29, x30, [sp], #416
     330:	ret
     334:	ldr	x1, [x20, #8]
     338:	mov	x0, x21
     33c:	add	x3, sp, #0xb0
     340:	add	x2, sp, #0x30
     344:	mov	w4, #0x1                   	// #1
     348:	ldr	x1, [x1]
     34c:	bl	20 <find_file>
     350:	mov	w19, w0
     354:	cbnz	w0, 320 <grub_bfs_open+0x30>
     358:	mov	x0, #0x168                 	// #360
     35c:	bl	0 <grub_zalloc>
     360:	mov	x21, x0
     364:	cbz	x0, 3a8 <grub_bfs_open+0xb8>
     368:	add	x1, sp, #0x30
     36c:	mov	x2, #0x7c                  	// #124
     370:	bl	0 <memcpy>
     374:	add	x1, sp, #0xb0
     378:	add	x0, x21, #0x7c
     37c:	mov	x2, #0xec                  	// #236
     380:	bl	0 <grub_memmove>
     384:	add	x0, sp, #0x200
     388:	str	x21, [x20, #80]
     38c:	ldr	x21, [sp, #32]
     390:	ldur	x0, [x0, #-124]
     394:	str	x0, [x20, #64]
     398:	mov	w0, w19
     39c:	ldp	x19, x20, [sp, #16]
     3a0:	ldp	x29, x30, [sp], #416
     3a4:	ret
     3a8:	adrp	x0, 0 <grub_bfs_close>
     3ac:	ldr	x0, [x0]
     3b0:	ldr	w19, [x0]
     3b4:	b	320 <grub_bfs_open+0x30>
	...

00000000000003c0 <read_bfs_file>:
     3c0:	stp	x29, x30, [sp, #-144]!
     3c4:	mov	x29, sp
     3c8:	stp	x6, x7, [sp, #96]
     3cc:	cbz	x5, 6f8 <read_bfs_file+0x338>
     3d0:	stp	x27, x28, [sp, #80]
     3d4:	mov	x28, x0
     3d8:	ldur	x0, [x2, #212]
     3dc:	stp	x19, x20, [sp, #16]
     3e0:	mov	x19, x3
     3e4:	stp	x21, x22, [sp, #32]
     3e8:	mov	x20, x5
     3ec:	mov	x22, x2
     3f0:	stp	x23, x24, [sp, #48]
     3f4:	mov	x23, x1
     3f8:	add	x1, x5, x3
     3fc:	cmp	x1, x0
     400:	b.hi	8ac <read_bfs_file+0x4ec>  // b.pmore
     404:	ldur	x21, [x2, #172]
     408:	stp	x25, x26, [sp, #64]
     40c:	ldr	w3, [x23, #44]
     410:	mov	x27, x4
     414:	lsl	x21, x21, x3
     418:	cmp	x19, x21
     41c:	b.cs	4e0 <read_bfs_file+0x120>  // b.hs, b.nlast
     420:	add	x21, x2, #0x4c
     424:	add	x26, x2, #0xac
     428:	mov	x24, #0x0                   	// #0
     42c:	b	43c <read_bfs_file+0x7c>
     430:	add	x21, x21, #0x8
     434:	cmp	x26, x21
     438:	b.eq	4d0 <read_bfs_file+0x110>  // b.none
     43c:	ldrh	w0, [x21, #6]
     440:	mov	x2, x24
     444:	lsl	x0, x0, x3
     448:	add	x24, x24, x0
     44c:	cmp	x24, x19
     450:	b.ls	430 <read_bfs_file+0x70>  // b.plast
     454:	ldr	w4, [x23, #76]
     458:	sub	x25, x24, x19
     45c:	ldr	x5, [sp, #96]
     460:	cmp	x25, x20
     464:	ldrh	w1, [x21, #4]
     468:	sub	w4, w4, #0x9
     46c:	ldr	w0, [x21]
     470:	sub	w3, w3, #0x9
     474:	str	x5, [x28, #48]
     478:	csel	x25, x25, x20, ls  // ls = plast
     47c:	ldr	x5, [sp, #104]
     480:	str	x5, [x28, #56]
     484:	lsl	w0, w0, w4
     488:	sub	x2, x19, x2
     48c:	lsl	x1, x1, x3
     490:	mov	x4, x27
     494:	add	x1, x0, x1
     498:	mov	x3, x25
     49c:	mov	x0, x28
     4a0:	bl	0 <grub_disk_read>
     4a4:	str	xzr, [x28, #48]
     4a8:	mov	w5, w0
     4ac:	subs	x20, x20, x25
     4b0:	cbnz	w0, 838 <read_bfs_file+0x478>
     4b4:	add	x19, x19, x25
     4b8:	add	x27, x27, x25
     4bc:	b.eq	6e4 <read_bfs_file+0x324>  // b.none
     4c0:	add	x21, x21, #0x8
     4c4:	ldr	w3, [x23, #44]
     4c8:	cmp	x26, x21
     4cc:	b.ne	43c <read_bfs_file+0x7c>  // b.any
     4d0:	ldur	x21, [x22, #172]
     4d4:	lsl	x21, x21, x3
     4d8:	cmp	x21, x19
     4dc:	b.hi	858 <read_bfs_file+0x498>  // b.pmore
     4e0:	ldur	x0, [x22, #188]
     4e4:	mov	w1, w3
     4e8:	lsl	x0, x0, x3
     4ec:	cmp	x0, x19
     4f0:	b.hi	708 <read_bfs_file+0x348>  // b.pmore
     4f4:	ldrh	w26, [x22, #202]
     4f8:	sub	w1, w1, #0x3
     4fc:	lsl	x0, x26, x1
     500:	str	x0, [sp, #136]
     504:	lsl	x21, x0, #3
     508:	mov	x0, x21
     50c:	bl	0 <grub_malloc>
     510:	mov	x25, x0
     514:	cbz	x0, 888 <read_bfs_file+0x4c8>
     518:	ldr	w0, [x23, #44]
     51c:	mov	w24, #0x1                   	// #1
     520:	add	w0, w0, #0x2
     524:	lsl	w0, w24, w0
     528:	sxtw	x0, w0
     52c:	bl	0 <grub_malloc>
     530:	mov	x26, x0
     534:	cbz	x0, 880 <read_bfs_file+0x4c0>
     538:	ldr	w7, [x23, #76]
     53c:	mov	x3, x21
     540:	ldr	w5, [x22, #196]
     544:	mov	x4, x25
     548:	ldr	w11, [x23, #44]
     54c:	sub	w7, w7, #0x9
     550:	ldrh	w1, [x22, #200]
     554:	mov	x0, x28
     558:	sub	w11, w11, #0x9
     55c:	lsl	w5, w5, w7
     560:	mov	x2, #0x0                   	// #0
     564:	lsl	x1, x1, x11
     568:	add	x1, x5, x1
     56c:	bl	0 <grub_disk_read>
     570:	mov	w5, w0
     574:	mov	x0, #0xffffffffffffffff    	// #-1
     578:	str	x0, [sp, #120]
     57c:	mov	x6, #0x0                   	// #0
     580:	cbnz	w5, 914 <read_bfs_file+0x554>
     584:	nop
     588:	ldr	w0, [x23, #44]
     58c:	mov	x4, x26
     590:	ldur	x3, [x22, #188]
     594:	add	w14, w0, #0x2
     598:	sub	w12, w0, #0x1
     59c:	sub	w13, w0, #0x3
     5a0:	lsl	w11, w24, w14
     5a4:	sub	w1, w0, #0x9
     5a8:	sub	w11, w11, #0x1
     5ac:	lsl	w0, w0, #1
     5b0:	add	w5, w0, #0x1
     5b4:	sub	x3, x19, x3
     5b8:	sxtw	x21, w11
     5bc:	lsl	w12, w24, w12
     5c0:	and	x11, x21, x3
     5c4:	lsr	x14, x3, x14
     5c8:	sub	w16, w12, #0x1
     5cc:	lsr	x3, x3, x5
     5d0:	ldr	x5, [sp, #136]
     5d4:	sxtw	x16, w16
     5d8:	sxtw	x15, w12
     5dc:	mov	x0, x28
     5e0:	cmp	x5, x3
     5e4:	and	x21, x14, x16
     5e8:	lsl	x5, x3, #3
     5ec:	mov	x2, #0x0                   	// #0
     5f0:	b.cc	930 <read_bfs_file+0x570>  // b.lo, b.ul, b.last
     5f4:	ldr	x7, [sp, #120]
     5f8:	add	x16, x25, x5
     5fc:	cmp	x3, x7
     600:	b.eq	650 <read_bfs_file+0x290>  // b.none
     604:	ldrh	w7, [x16, #6]
     608:	ldr	w14, [x23, #76]
     60c:	ldr	w5, [x25, x5]
     610:	lsl	x6, x7, x13
     614:	sub	w14, w14, #0x9
     618:	cmp	x6, w12, uxtw
     61c:	str	x11, [sp, #128]
     620:	csel	x6, x15, x6, hi  // hi = pmore
     624:	stp	x6, x3, [sp, #112]
     628:	ldrh	w3, [x16, #4]
     62c:	lsl	w5, w5, w14
     630:	lsl	x1, x3, x1
     634:	lsl	x3, x6, #3
     638:	add	x1, x5, x1
     63c:	bl	0 <grub_disk_read>
     640:	mov	w5, w0
     644:	ldr	x6, [sp, #112]
     648:	ldr	x11, [sp, #128]
     64c:	cbnz	w0, 914 <read_bfs_file+0x554>
     650:	lsl	x5, x21, #3
     654:	mov	x4, x27
     658:	add	x1, x26, x5
     65c:	mov	x2, x11
     660:	mov	x0, x28
     664:	cmp	x21, x6
     668:	b.hi	930 <read_bfs_file+0x570>  // b.pmore
     66c:	ldr	w3, [x23, #44]
     670:	ldr	w12, [x23, #76]
     674:	add	w21, w3, #0x2
     678:	ldr	w5, [x26, x5]
     67c:	str	x6, [sp, #112]
     680:	sub	w12, w12, #0x9
     684:	lsl	w21, w24, w21
     688:	ldrh	w1, [x1, #4]
     68c:	sxtw	x21, w21
     690:	lsl	w5, w5, w12
     694:	ldr	x6, [sp, #96]
     698:	sub	x21, x21, x11
     69c:	str	x6, [x28, #48]
     6a0:	cmp	x21, x20
     6a4:	ldr	x6, [sp, #104]
     6a8:	sub	w3, w3, #0x9
     6ac:	str	x6, [x28, #56]
     6b0:	csel	x21, x21, x20, ls  // ls = plast
     6b4:	lsl	x1, x1, x3
     6b8:	mov	x3, x21
     6bc:	add	x1, x5, x1
     6c0:	bl	0 <grub_disk_read>
     6c4:	str	xzr, [x28, #48]
     6c8:	add	x19, x19, x21
     6cc:	add	x27, x27, x21
     6d0:	mov	w5, w0
     6d4:	ldr	x6, [sp, #112]
     6d8:	cbnz	w0, 914 <read_bfs_file+0x554>
     6dc:	subs	x20, x20, x21
     6e0:	b.ne	588 <read_bfs_file+0x1c8>  // b.any
     6e4:	ldp	x19, x20, [sp, #16]
     6e8:	ldp	x21, x22, [sp, #32]
     6ec:	ldp	x23, x24, [sp, #48]
     6f0:	ldp	x25, x26, [sp, #64]
     6f4:	ldp	x27, x28, [sp, #80]
     6f8:	mov	w5, #0x0                   	// #0
     6fc:	mov	w0, w5
     700:	ldp	x29, x30, [sp], #144
     704:	ret
     708:	ldrh	w0, [x22, #186]
     70c:	sub	w3, w3, #0x3
     710:	lsl	x8, x0, x3
     714:	str	x8, [sp, #112]
     718:	lsl	x24, x8, #3
     71c:	mov	x0, x24
     720:	bl	0 <grub_malloc>
     724:	mov	x26, x0
     728:	ldr	x8, [sp, #112]
     72c:	cbz	x0, 888 <read_bfs_file+0x4c8>
     730:	ldr	w6, [x23, #76]
     734:	mov	x4, x0
     738:	ldr	w5, [x22, #180]
     73c:	mov	x3, x24
     740:	ldr	w7, [x23, #44]
     744:	sub	w6, w6, #0x9
     748:	ldrh	w1, [x22, #184]
     74c:	mov	x0, x28
     750:	sub	w7, w7, #0x9
     754:	lsl	w5, w5, w6
     758:	mov	x2, #0x0                   	// #0
     75c:	str	x8, [sp, #112]
     760:	lsl	x1, x1, x7
     764:	add	x1, x5, x1
     768:	bl	0 <grub_disk_read>
     76c:	ldr	x8, [sp, #112]
     770:	cbz	x8, 8d0 <read_bfs_file+0x510>
     774:	mov	w24, #0x0                   	// #0
     778:	mov	x4, #0x0                   	// #0
     77c:	b	78c <read_bfs_file+0x3cc>
     780:	cmp	x8, w24, uxtw
     784:	mov	w4, w24
     788:	b.ls	8d0 <read_bfs_file+0x510>  // b.plast
     78c:	lsl	x4, x4, #3
     790:	ldr	w3, [x23, #44]
     794:	add	x0, x26, x4
     798:	mov	x2, x21
     79c:	add	w24, w24, #0x1
     7a0:	ldrh	w1, [x0, #6]
     7a4:	lsl	x1, x1, x3
     7a8:	add	x21, x21, x1
     7ac:	cmp	x21, x19
     7b0:	b.ls	780 <read_bfs_file+0x3c0>  // b.plast
     7b4:	ldr	w5, [x23, #76]
     7b8:	sub	x25, x21, x19
     7bc:	ldrh	w1, [x0, #4]
     7c0:	cmp	x25, x20
     7c4:	ldr	w0, [x26, x4]
     7c8:	sub	w4, w5, #0x9
     7cc:	ldr	x5, [sp, #96]
     7d0:	str	x5, [x28, #48]
     7d4:	ldr	x5, [sp, #104]
     7d8:	sub	w3, w3, #0x9
     7dc:	str	x5, [x28, #56]
     7e0:	csel	x25, x25, x20, ls  // ls = plast
     7e4:	lsl	w0, w0, w4
     7e8:	sub	x2, x19, x2
     7ec:	lsl	x1, x1, x3
     7f0:	mov	x4, x27
     7f4:	add	x1, x0, x1
     7f8:	mov	x3, x25
     7fc:	mov	x0, x28
     800:	str	x8, [sp, #112]
     804:	bl	0 <grub_disk_read>
     808:	str	xzr, [x28, #48]
     80c:	mov	w5, w0
     810:	subs	x20, x20, x25
     814:	ldr	x8, [sp, #112]
     818:	cbnz	w0, 828 <read_bfs_file+0x468>
     81c:	add	x19, x19, x25
     820:	add	x27, x27, x25
     824:	b.ne	780 <read_bfs_file+0x3c0>  // b.any
     828:	mov	x0, x26
     82c:	str	w5, [sp, #96]
     830:	bl	0 <grub_free>
     834:	ldr	w5, [sp, #96]
     838:	ldp	x19, x20, [sp, #16]
     83c:	ldp	x21, x22, [sp, #32]
     840:	ldp	x23, x24, [sp, #48]
     844:	ldp	x25, x26, [sp, #64]
     848:	ldp	x27, x28, [sp, #80]
     84c:	mov	w0, w5
     850:	ldp	x29, x30, [sp], #144
     854:	ret
     858:	adrp	x1, 0 <grub_bfs_close>
     85c:	mov	w0, #0x9                   	// #9
     860:	ldr	x1, [x1]
     864:	ldp	x19, x20, [sp, #16]
     868:	ldp	x21, x22, [sp, #32]
     86c:	ldp	x23, x24, [sp, #48]
     870:	ldp	x25, x26, [sp, #64]
     874:	ldp	x27, x28, [sp, #80]
     878:	ldp	x29, x30, [sp], #144
     87c:	b	0 <grub_error>
     880:	mov	x0, x25
     884:	bl	0 <grub_free>
     888:	adrp	x0, 0 <grub_bfs_close>
     88c:	ldp	x19, x20, [sp, #16]
     890:	ldr	x0, [x0]
     894:	ldp	x21, x22, [sp, #32]
     898:	ldr	w5, [x0]
     89c:	ldp	x23, x24, [sp, #48]
     8a0:	ldp	x25, x26, [sp, #64]
     8a4:	ldp	x27, x28, [sp, #80]
     8a8:	b	84c <read_bfs_file+0x48c>
     8ac:	adrp	x1, 0 <grub_bfs_close>
     8b0:	mov	w0, #0xb                   	// #11
     8b4:	ldp	x19, x20, [sp, #16]
     8b8:	ldr	x1, [x1]
     8bc:	ldp	x21, x22, [sp, #32]
     8c0:	ldp	x23, x24, [sp, #48]
     8c4:	ldp	x27, x28, [sp, #80]
     8c8:	ldp	x29, x30, [sp], #144
     8cc:	b	0 <grub_error>
     8d0:	mov	x0, x26
     8d4:	bl	0 <grub_free>
     8d8:	ldur	x0, [x22, #188]
     8dc:	ldr	w1, [x23, #44]
     8e0:	lsl	x0, x0, x1
     8e4:	cmp	x0, x19
     8e8:	b.ls	4f4 <read_bfs_file+0x134>  // b.plast
     8ec:	adrp	x1, 0 <grub_bfs_close>
     8f0:	mov	w0, #0x9                   	// #9
     8f4:	ldp	x19, x20, [sp, #16]
     8f8:	ldr	x1, [x1]
     8fc:	ldp	x21, x22, [sp, #32]
     900:	ldp	x23, x24, [sp, #48]
     904:	ldp	x25, x26, [sp, #64]
     908:	ldp	x27, x28, [sp, #80]
     90c:	ldp	x29, x30, [sp], #144
     910:	b	0 <grub_error>
     914:	mov	x0, x25
     918:	str	w5, [sp, #96]
     91c:	bl	0 <grub_free>
     920:	mov	x0, x26
     924:	bl	0 <grub_free>
     928:	ldr	w5, [sp, #96]
     92c:	b	838 <read_bfs_file+0x478>
     930:	mov	x0, x25
     934:	bl	0 <grub_free>
     938:	mov	x0, x26
     93c:	bl	0 <grub_free>
     940:	adrp	x1, 0 <grub_bfs_close>
     944:	mov	w0, #0x9                   	// #9
     948:	ldr	x1, [x1]
     94c:	b	864 <read_bfs_file+0x4a4>
	...

0000000000000978 <grub_bfs_read>:
     978:	stp	x29, x30, [sp, #-32]!
     97c:	mov	x8, x0
     980:	mov	x4, x1
     984:	mov	x29, sp
     988:	ldr	x0, [x0, #8]
     98c:	mov	x5, x2
     990:	ldp	x1, x6, [x8, #80]
     994:	ldr	x0, [x0]
     998:	ldr	x3, [x8, #24]
     99c:	ldr	x7, [x8, #96]
     9a0:	str	x19, [sp, #16]
     9a4:	mov	x19, x2
     9a8:	add	x2, x1, #0x7c
     9ac:	bl	3c0 <read_bfs_file>
     9b0:	cmp	w0, #0x0
     9b4:	csinv	x0, x19, xzr, eq  // eq = none
     9b8:	ldr	x19, [sp, #16]
     9bc:	ldp	x29, x30, [sp], #32
     9c0:	ret
     9c4:	nop

00000000000009c8 <read_symlink>:
     9c8:	stp	x29, x30, [sp, #-48]!
     9cc:	mov	x29, sp
     9d0:	str	x21, [sp, #32]
     9d4:	ldur	x21, [x0, #228]
     9d8:	stp	x19, x20, [sp, #16]
     9dc:	mov	x20, x0
     9e0:	add	x0, x21, #0x1
     9e4:	bl	0 <grub_malloc>
     9e8:	mov	x19, x0
     9ec:	cbz	x0, a18 <read_symlink+0x50>
     9f0:	mov	x4, x0
     9f4:	add	x2, x20, #0x10
     9f8:	ldp	x0, x1, [x20]
     9fc:	mov	x5, x21
     a00:	mov	x7, #0x0                   	// #0
     a04:	mov	x6, #0x0                   	// #0
     a08:	mov	x3, #0x0                   	// #0
     a0c:	bl	3c0 <read_bfs_file>
     a10:	cbnz	w0, a2c <read_symlink+0x64>
     a14:	strb	wzr, [x19, x21]
     a18:	mov	x0, x19
     a1c:	ldp	x19, x20, [sp, #16]
     a20:	ldr	x21, [sp, #32]
     a24:	ldp	x29, x30, [sp], #48
     a28:	ret
     a2c:	mov	x0, x19
     a30:	mov	x19, #0x0                   	// #0
     a34:	bl	0 <grub_free>
     a38:	b	a18 <read_symlink+0x50>
     a3c:	nop

0000000000000a40 <read_b_node>:
     a40:	stp	x29, x30, [sp, #-128]!
     a44:	mov	x29, sp
     a48:	stp	x19, x20, [sp, #16]
     a4c:	mov	x20, x7
     a50:	stp	x21, x22, [sp, #32]
     a54:	mov	x22, x5
     a58:	mov	x21, x6
     a5c:	stp	x23, x24, [sp, #48]
     a60:	mov	x23, x4
     a64:	mov	x24, x0
     a68:	stp	x25, x26, [sp, #64]
     a6c:	mov	x25, x1
     a70:	mov	x26, x2
     a74:	stp	x27, x28, [sp, #80]
     a78:	mov	x27, x3
     a7c:	str	xzr, [x4]
     a80:	add	x4, sp, #0x60
     a84:	str	xzr, [x5]
     a88:	mov	x5, #0x20                  	// #32
     a8c:	str	xzr, [x6]
     a90:	mov	x6, #0x0                   	// #0
     a94:	str	xzr, [x7]
     a98:	mov	x7, #0x0                   	// #0
     a9c:	bl	3c0 <read_bfs_file>
     aa0:	mov	w19, w0
     aa4:	cbz	w0, ac8 <read_b_node+0x88>
     aa8:	mov	w0, w19
     aac:	ldp	x19, x20, [sp, #16]
     ab0:	ldp	x21, x22, [sp, #32]
     ab4:	ldp	x23, x24, [sp, #48]
     ab8:	ldp	x25, x26, [sp, #64]
     abc:	ldp	x27, x28, [sp, #80]
     ac0:	ldp	x29, x30, [sp], #128
     ac4:	ret
     ac8:	ldp	w19, w5, [sp, #120]
     acc:	mov	w0, #0xa                   	// #10
     ad0:	add	x5, x5, #0x23
     ad4:	and	x5, x5, #0xfffffffffffffffc
     ad8:	umaddl	x19, w19, w0, x5
     adc:	mov	x0, x19
     ae0:	bl	0 <grub_malloc>
     ae4:	mov	x28, x0
     ae8:	cbz	x0, b60 <read_b_node+0x120>
     aec:	mov	x5, x19
     af0:	mov	x3, x27
     af4:	mov	x2, x26
     af8:	mov	x1, x25
     afc:	mov	x0, x24
     b00:	mov	x4, x28
     b04:	mov	x7, #0x0                   	// #0
     b08:	mov	x6, #0x0                   	// #0
     b0c:	bl	3c0 <read_bfs_file>
     b10:	mov	w19, w0
     b14:	cbnz	w0, b8c <read_b_node+0x14c>
     b18:	ldp	w0, w4, [sp, #120]
     b1c:	str	x28, [x23]
     b20:	add	x1, x28, #0x20
     b24:	str	x1, [x22]
     b28:	add	x4, x4, #0x23
     b2c:	and	x4, x4, #0xfffffffffffffffc
     b30:	add	x28, x28, x4
     b34:	str	x28, [x21]
     b38:	add	x28, x28, x0, lsl #1
     b3c:	str	x28, [x20]
     b40:	mov	w0, w19
     b44:	ldp	x19, x20, [sp, #16]
     b48:	ldp	x21, x22, [sp, #32]
     b4c:	ldp	x23, x24, [sp, #48]
     b50:	ldp	x25, x26, [sp, #64]
     b54:	ldp	x27, x28, [sp, #80]
     b58:	ldp	x29, x30, [sp], #128
     b5c:	ret
     b60:	adrp	x0, 0 <grub_bfs_close>
     b64:	ldp	x21, x22, [sp, #32]
     b68:	ldr	x0, [x0]
     b6c:	ldp	x23, x24, [sp, #48]
     b70:	ldr	w19, [x0]
     b74:	ldp	x25, x26, [sp, #64]
     b78:	mov	w0, w19
     b7c:	ldp	x19, x20, [sp, #16]
     b80:	ldp	x27, x28, [sp, #80]
     b84:	ldp	x29, x30, [sp], #128
     b88:	ret
     b8c:	mov	x0, x28
     b90:	bl	0 <grub_free>
     b94:	b	aa8 <read_b_node+0x68>
	...

0000000000000ba0 <lookup_file>:
     ba0:	stp	x29, x30, [sp, #-160]!
     ba4:	mov	x7, #0x0                   	// #0
     ba8:	mov	x6, #0x0                   	// #0
     bac:	mov	x29, sp
     bb0:	stp	x23, x24, [sp, #48]
     bb4:	add	x4, sp, #0x80
     bb8:	mov	x5, #0x20                  	// #32
     bbc:	ldp	x23, x24, [x0]
     bc0:	stp	x25, x26, [sp, #64]
     bc4:	add	x26, x0, #0x10
     bc8:	stp	x19, x20, [sp, #16]
     bcc:	mov	x19, x0
     bd0:	mov	x20, x1
     bd4:	stp	x21, x22, [sp, #32]
     bd8:	mov	x21, x2
     bdc:	mov	x22, x3
     be0:	mov	x2, x26
     be4:	mov	x0, x23
     be8:	mov	x1, x24
     bec:	mov	x3, #0x0                   	// #0
     bf0:	bl	3c0 <read_bfs_file>
     bf4:	cbnz	w0, d48 <lookup_file+0x1a8>
     bf8:	stp	x27, x28, [sp, #80]
     bfc:	mov	w25, #0x1                   	// #1
     c00:	ldr	w27, [sp, #140]
     c04:	ldur	x28, [sp, #132]
     c08:	sub	w27, w27, #0x1
     c0c:	mov	x3, x28
     c10:	add	x7, sp, #0x78
     c14:	add	x6, sp, #0x70
     c18:	add	x5, sp, #0x68
     c1c:	add	x4, sp, #0x60
     c20:	mov	x2, x26
     c24:	mov	x1, x24
     c28:	mov	x0, x23
     c2c:	bl	a40 <read_b_node>
     c30:	cbnz	w0, d44 <lookup_file+0x1a4>
     c34:	ldr	x0, [sp, #96]
     c38:	ldr	w9, [x0, #24]
     c3c:	cbz	w9, d24 <lookup_file+0x184>
     c40:	mov	w1, #0x0                   	// #0
     c44:	nop
     c48:	mov	w7, w1
     c4c:	add	w1, w1, #0x1
     c50:	lsr	w6, w9, w1
     c54:	cbnz	w6, c48 <lookup_file+0xa8>
     c58:	ldp	x8, x11, [sp, #104]
     c5c:	b	c6c <lookup_file+0xcc>
     c60:	sub	w7, w7, #0x1
     c64:	cmn	w7, #0x1
     c68:	b.eq	d04 <lookup_file+0x164>  // b.none
     c6c:	lsl	w3, w25, w7
     c70:	orr	w3, w3, w6
     c74:	cmp	w9, w3
     c78:	b.ls	c60 <lookup_file+0xc0>  // b.plast
     c7c:	sub	w5, w3, #0x1
     c80:	ldrh	w4, [x11, w3, uxtw #1]
     c84:	ldr	w2, [x0, #28]
     c88:	mov	w10, w3
     c8c:	ldrb	w1, [x20]
     c90:	ldrh	w5, [x11, x5, lsl #1]
     c94:	cmp	w2, w4
     c98:	and	w2, w2, #0xffff
     c9c:	csel	w4, w2, w4, ls  // ls = plast
     ca0:	sub	w4, w4, w5
     ca4:	add	x5, x8, w5, uxth
     ca8:	sxtw	x4, w4
     cac:	cbz	w1, dfc <lookup_file+0x25c>
     cb0:	mov	x12, x20
     cb4:	cbnz	x4, cc8 <lookup_file+0x128>
     cb8:	b	d60 <lookup_file+0x1c0>
     cbc:	ldrb	w1, [x12, #1]!
     cc0:	cbz	w1, dfc <lookup_file+0x25c>
     cc4:	cbz	x4, d60 <lookup_file+0x1c0>
     cc8:	ldrb	w2, [x5]
     ccc:	sub	x4, x4, #0x1
     cd0:	add	x5, x5, #0x1
     cd4:	cmp	w2, w1
     cd8:	b.eq	cbc <lookup_file+0x11c>  // b.none
     cdc:	sxtb	w1, w1
     ce0:	sxtb	w2, w2
     ce4:	sub	w1, w2, w1
     ce8:	orr	w2, w1, w27
     cec:	cbz	w2, d74 <lookup_file+0x1d4>
     cf0:	cmp	w1, #0x0
     cf4:	sub	w7, w7, #0x1
     cf8:	csel	w6, w6, w3, gt
     cfc:	cmn	w7, #0x1
     d00:	b.ne	c6c <lookup_file+0xcc>  // b.any
     d04:	cbz	w6, e78 <lookup_file+0x2d8>
     d08:	cbz	w27, d18 <lookup_file+0x178>
     d0c:	add	w6, w6, #0x1
     d10:	cmp	w9, w6
     d14:	b.hi	e64 <lookup_file+0x2c4>  // b.pmore
     d18:	ldr	x28, [x0, #16]
     d1c:	cmn	x28, #0x1
     d20:	b.ne	e18 <lookup_file+0x278>  // b.any
     d24:	bl	0 <grub_free>
     d28:	mov	x23, #0x0                   	// #0
     d2c:	adrp	x1, 0 <grub_bfs_close>
     d30:	mov	x2, x20
     d34:	mov	w0, #0x5                   	// #5
     d38:	ldr	x1, [x1]
     d3c:	bl	0 <grub_error>
     d40:	cbz	w0, d80 <lookup_file+0x1e0>
     d44:	ldp	x27, x28, [sp, #80]
     d48:	ldp	x19, x20, [sp, #16]
     d4c:	ldp	x21, x22, [sp, #32]
     d50:	ldp	x23, x24, [sp, #48]
     d54:	ldp	x25, x26, [sp, #64]
     d58:	ldp	x29, x30, [sp], #160
     d5c:	ret
     d60:	sxtb	w1, w1
     d64:	mov	w2, #0x0                   	// #0
     d68:	sub	w1, w2, w1
     d6c:	orr	w2, w1, w27
     d70:	cbnz	w2, cf0 <lookup_file+0x150>
     d74:	ldr	x1, [sp, #120]
     d78:	ldr	x23, [x1, x10, lsl #3]
     d7c:	bl	0 <grub_free>
     d80:	mov	x0, #0x100                 	// #256
     d84:	bl	0 <grub_malloc>
     d88:	str	x0, [x21]
     d8c:	cbz	x0, e2c <lookup_file+0x28c>
     d90:	ldp	x1, x2, [x19]
     d94:	stp	x1, x2, [x0]
     d98:	add	x20, x0, #0x10
     d9c:	ldp	x0, x1, [x19]
     da0:	mov	x4, x20
     da4:	mov	x3, #0xec                  	// #236
     da8:	mov	x2, #0x0                   	// #0
     dac:	ldr	w1, [x1, #44]
     db0:	sub	w1, w1, #0x9
     db4:	lsl	x1, x23, x1
     db8:	bl	0 <grub_disk_read>
     dbc:	cbnz	w0, e24 <lookup_file+0x284>
     dc0:	ldr	w1, [x20, #20]
     dc4:	and	w1, w1, #0xe000
     dc8:	cmp	w1, #0x4, lsl #12
     dcc:	b.eq	e54 <lookup_file+0x2b4>  // b.none
     dd0:	cmp	w1, #0xa, lsl #12
     dd4:	mov	w1, #0x3                   	// #3
     dd8:	csinc	w1, w1, wzr, eq  // eq = none
     ddc:	ldp	x27, x28, [sp, #80]
     de0:	str	w1, [x22]
     de4:	ldp	x19, x20, [sp, #16]
     de8:	ldp	x21, x22, [sp, #32]
     dec:	ldp	x23, x24, [sp, #48]
     df0:	ldp	x25, x26, [sp, #64]
     df4:	ldp	x29, x30, [sp], #160
     df8:	ret
     dfc:	cbz	x4, e0c <lookup_file+0x26c>
     e00:	ldrb	w2, [x5]
     e04:	mov	w1, #0x0                   	// #0
     e08:	b	ce0 <lookup_file+0x140>
     e0c:	cbz	w27, d74 <lookup_file+0x1d4>
     e10:	mov	w6, w3
     e14:	b	c60 <lookup_file+0xc0>
     e18:	sub	w27, w27, #0x1
     e1c:	bl	0 <grub_free>
     e20:	b	c0c <lookup_file+0x6c>
     e24:	ldr	x0, [x21]
     e28:	bl	0 <grub_free>
     e2c:	adrp	x0, 0 <grub_bfs_close>
     e30:	ldp	x19, x20, [sp, #16]
     e34:	ldr	x0, [x0]
     e38:	ldp	x21, x22, [sp, #32]
     e3c:	ldr	w0, [x0]
     e40:	ldp	x23, x24, [sp, #48]
     e44:	ldp	x25, x26, [sp, #64]
     e48:	ldp	x27, x28, [sp, #80]
     e4c:	ldp	x29, x30, [sp], #160
     e50:	ret
     e54:	mov	w1, #0x2                   	// #2
     e58:	ldp	x27, x28, [sp, #80]
     e5c:	str	w1, [x22]
     e60:	b	d48 <lookup_file+0x1a8>
     e64:	ldr	x1, [sp, #120]
     e68:	sub	w27, w27, #0x1
     e6c:	ldr	x28, [x1, w6, uxtw #3]
     e70:	bl	0 <grub_free>
     e74:	b	c0c <lookup_file+0x6c>
     e78:	ldrh	w1, [x11]
     e7c:	ldr	w3, [x0, #28]
     e80:	ldrb	w2, [x20]
     e84:	cmp	w3, w1
     e88:	and	w3, w3, #0xffff
     e8c:	csel	w1, w3, w1, ls  // ls = plast
     e90:	and	x1, x1, #0xffff
     e94:	cbz	w2, f0c <lookup_file+0x36c>
     e98:	mov	x4, x20
     e9c:	cbnz	x1, eb0 <lookup_file+0x310>
     ea0:	b	f1c <lookup_file+0x37c>
     ea4:	ldrb	w2, [x4, #1]!
     ea8:	cbz	w2, f0c <lookup_file+0x36c>
     eac:	cbz	x1, f1c <lookup_file+0x37c>
     eb0:	ldrb	w3, [x8]
     eb4:	sub	x1, x1, #0x1
     eb8:	add	x8, x8, #0x1
     ebc:	cmp	w3, w2
     ec0:	b.eq	ea4 <lookup_file+0x304>  // b.none
     ec4:	sxtb	w2, w2
     ec8:	sxtb	w3, w3
     ecc:	sub	w2, w3, w2
     ed0:	orr	w1, w27, w2
     ed4:	cbz	w1, f4c <lookup_file+0x3ac>
     ed8:	cmp	w27, #0x0
     edc:	cset	w1, ne  // ne = any
     ee0:	cmp	w2, #0x0
     ee4:	ccmp	w1, #0x0, #0x4, gt
     ee8:	b.ne	f38 <lookup_file+0x398>  // b.any
     eec:	cmp	w1, #0x0
     ef0:	ccmp	w9, #0x1, #0x0, ne  // ne = any
     ef4:	b.ls	d18 <lookup_file+0x178>  // b.plast
     ef8:	ldr	x1, [sp, #120]
     efc:	sub	w27, w27, #0x1
     f00:	ldr	x28, [x1, #8]
     f04:	bl	0 <grub_free>
     f08:	b	c0c <lookup_file+0x6c>
     f0c:	cbz	x1, f2c <lookup_file+0x38c>
     f10:	ldrb	w3, [x8]
     f14:	mov	w2, #0x0                   	// #0
     f18:	b	ec8 <lookup_file+0x328>
     f1c:	sxtb	w2, w2
     f20:	neg	w2, w2
     f24:	orr	w1, w27, w2
     f28:	b	ed4 <lookup_file+0x334>
     f2c:	cbz	w27, f4c <lookup_file+0x3ac>
     f30:	mov	w1, #0x1                   	// #1
     f34:	b	eec <lookup_file+0x34c>
     f38:	ldr	x1, [sp, #120]
     f3c:	sub	w27, w27, #0x1
     f40:	ldr	x28, [x1]
     f44:	bl	0 <grub_free>
     f48:	b	c0c <lookup_file+0x6c>
     f4c:	ldr	x1, [sp, #120]
     f50:	ldr	x23, [x1]
     f54:	bl	0 <grub_free>
     f58:	b	d80 <lookup_file+0x1e0>
     f5c:	nop
	...

0000000000000f70 <grub_bfs_dir>:
     f70:	sub	sp, sp, #0x230
     f74:	stp	x29, x30, [sp]
     f78:	mov	x29, sp
     f7c:	stp	x19, x20, [sp, #16]
     f80:	mov	x19, x0
     f84:	add	x20, sp, #0xc0
     f88:	ldr	x0, [x0]
     f8c:	stp	x21, x22, [sp, #32]
     f90:	mov	x21, x1
     f94:	mov	x1, x20
     f98:	stp	x19, x2, [sp, #168]
     f9c:	str	x3, [sp, #184]
     fa0:	stp	xzr, xzr, [sp, #192]
     fa4:	stp	xzr, xzr, [sp, #208]
     fa8:	stp	xzr, xzr, [sp, #224]
     fac:	stp	xzr, xzr, [sp, #240]
     fb0:	stp	xzr, xzr, [sp, #256]
     fb4:	stp	xzr, xzr, [sp, #272]
     fb8:	stp	xzr, xzr, [sp, #288]
     fbc:	stp	xzr, xzr, [sp, #304]
     fc0:	bl	1f0 <mount>
     fc4:	cbz	w0, fdc <grub_bfs_dir+0x6c>
     fc8:	ldp	x29, x30, [sp]
     fcc:	ldp	x19, x20, [sp, #16]
     fd0:	ldp	x21, x22, [sp, #32]
     fd4:	add	sp, sp, #0x230
     fd8:	ret
     fdc:	ldr	x1, [x19]
     fe0:	mov	x0, x21
     fe4:	add	x3, sp, #0x140
     fe8:	mov	x2, x20
     fec:	mov	w4, #0x2                   	// #2
     ff0:	bl	20 <find_file>
     ff4:	cbnz	w0, fc8 <grub_bfs_dir+0x58>
     ff8:	ldr	x21, [x19]
     ffc:	add	x4, sp, #0x68
    1000:	add	x2, sp, #0x140
    1004:	mov	x1, x20
    1008:	mov	x0, x21
    100c:	mov	x7, #0x0                   	// #0
    1010:	mov	x6, #0x0                   	// #0
    1014:	mov	x5, #0x20                  	// #32
    1018:	mov	x3, #0x0                   	// #0
    101c:	bl	3c0 <read_bfs_file>
    1020:	cbnz	w0, 10d0 <grub_bfs_dir+0x160>
    1024:	stp	x23, x24, [sp, #48]
    1028:	add	x22, sp, #0x88
    102c:	ldr	w23, [sp, #116]
    1030:	stp	x25, x26, [sp, #64]
    1034:	add	x24, sp, #0x60
    1038:	cmp	w23, #0x1
    103c:	sub	w23, w23, #0x2
    1040:	ldur	x25, [sp, #108]
    1044:	b.eq	10f0 <grub_bfs_dir+0x180>  // b.none
    1048:	add	x22, sp, #0x88
    104c:	mov	x19, #0x0                   	// #0
    1050:	b	10a0 <grub_bfs_dir+0x130>
    1054:	ldp	w1, w0, [sp, #160]
    1058:	add	x4, sp, #0x60
    105c:	add	x2, sp, #0x140
    1060:	mov	x24, x4
    1064:	add	x0, x0, #0x23
    1068:	mov	x7, #0x0                   	// #0
    106c:	and	x0, x0, #0xfffffffffffffffc
    1070:	mov	x6, #0x0                   	// #0
    1074:	add	x0, x0, w1, uxtw #1
    1078:	mov	x5, #0x8                   	// #8
    107c:	add	x3, x0, x25
    1080:	mov	x1, x20
    1084:	mov	x0, x21
    1088:	bl	3c0 <read_bfs_file>
    108c:	cbnz	w0, 10c8 <grub_bfs_dir+0x158>
    1090:	cmp	x19, x23
    1094:	add	x19, x19, #0x1
    1098:	ldr	x25, [sp, #96]
    109c:	b.eq	10f0 <grub_bfs_dir+0x180>  // b.none
    10a0:	mov	x4, x22
    10a4:	mov	x3, x25
    10a8:	add	x2, sp, #0x140
    10ac:	mov	x1, x20
    10b0:	mov	x0, x21
    10b4:	mov	x7, #0x0                   	// #0
    10b8:	mov	x6, #0x0                   	// #0
    10bc:	mov	x5, #0x20                  	// #32
    10c0:	bl	3c0 <read_bfs_file>
    10c4:	cbz	w0, 1054 <grub_bfs_dir+0xe4>
    10c8:	ldp	x23, x24, [sp, #48]
    10cc:	ldp	x25, x26, [sp, #64]
    10d0:	adrp	x0, 0 <grub_bfs_close>
    10d4:	ldp	x29, x30, [sp]
    10d8:	ldr	x0, [x0]
    10dc:	ldp	x19, x20, [sp, #16]
    10e0:	ldr	w0, [x0]
    10e4:	ldp	x21, x22, [sp, #32]
    10e8:	add	sp, sp, #0x230
    10ec:	ret
    10f0:	add	x26, sp, #0xc0
    10f4:	mov	x3, x25
    10f8:	mov	x7, x22
    10fc:	mov	x6, x24
    1100:	add	x5, sp, #0x58
    1104:	add	x4, sp, #0x50
    1108:	add	x2, sp, #0x140
    110c:	mov	x1, x26
    1110:	mov	x0, x21
    1114:	bl	a40 <read_b_node>
    1118:	mov	w20, w0
    111c:	cbnz	w0, 10c8 <grub_bfs_dir+0x158>
    1120:	ldr	x0, [sp, #80]
    1124:	ldr	w1, [x0, #24]
    1128:	cbz	w1, 11a8 <grub_bfs_dir+0x238>
    112c:	mov	w4, #0x0                   	// #0
    1130:	b	114c <grub_bfs_dir+0x1dc>
    1134:	ldr	x0, [sp, #88]
    1138:	strb	w25, [x0, x23]
    113c:	ldr	x0, [sp, #80]
    1140:	ldr	w1, [x0, #24]
    1144:	cmp	w20, w1
    1148:	b.cs	11a8 <grub_bfs_dir+0x238>  // b.hs, b.nlast
    114c:	ldp	x1, x5, [sp, #88]
    1150:	add	x2, sp, #0xa8
    1154:	ldr	w3, [x0, #28]
    1158:	and	w0, w3, #0xffff
    115c:	ldrh	w19, [x5, w20, uxtw #1]
    1160:	cmp	w3, w19
    1164:	csel	w19, w0, w19, ls  // ls = plast
    1168:	and	x23, x19, #0xffff
    116c:	ldrb	w25, [x1, x23]
    1170:	strb	wzr, [x1, x23]
    1174:	ldr	x1, [sp, #136]
    1178:	ldr	x0, [sp, #88]
    117c:	ldr	x1, [x1, w20, uxtw #3]
    1180:	add	w20, w20, #0x1
    1184:	add	x0, x0, w4, uxth
    1188:	bl	138 <grub_bfs_dir_iter>
    118c:	mov	w4, w19
    1190:	cbz	w0, 1134 <grub_bfs_dir+0x1c4>
    1194:	ldr	x0, [sp, #80]
    1198:	bl	0 <grub_free>
    119c:	ldp	x23, x24, [sp, #48]
    11a0:	ldp	x25, x26, [sp, #64]
    11a4:	b	10d0 <grub_bfs_dir+0x160>
    11a8:	ldr	x25, [x0, #8]
    11ac:	bl	0 <grub_free>
    11b0:	cmn	x25, #0x1
    11b4:	b.ne	10f4 <grub_bfs_dir+0x184>  // b.any
    11b8:	b	10c8 <grub_bfs_dir+0x158>
    11bc:	nop
	...

00000000000011c8 <grub_mod_init>:
    11c8:	adrp	x1, 0 <grub_bfs_close>
    11cc:	adrp	x0, 0 <grub_bfs_close>
    11d0:	ldr	x1, [x1]
    11d4:	ldr	x0, [x0]
    11d8:	b	0 <grub_list_push>
    11dc:	nop
	...

00000000000011f0 <grub_mod_fini>:
    11f0:	adrp	x0, 0 <grub_bfs_close>
    11f4:	ldr	x0, [x0]
    11f8:	b	0 <grub_list_remove>
    11fc:	nop
	...
