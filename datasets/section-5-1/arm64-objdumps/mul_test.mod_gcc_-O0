
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mul_test.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x310>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	str	x0, [sp, #40]
  10:	str	x1, [sp, #32]
  14:	ldr	x1, [sp, #40]
  18:	ldr	x0, [sp, #32]
  1c:	mul	x0, x1, x0
  20:	str	x0, [sp, #56]
  24:	str	xzr, [sp, #72]
  28:	str	wzr, [sp, #68]
  2c:	b	74 <grub_mod_init-0x29c>
  30:	ldr	w0, [sp, #68]
  34:	mov	x1, #0x1                   	// #1
  38:	lsl	x0, x1, x0
  3c:	mov	x1, x0
  40:	ldr	x0, [sp, #40]
  44:	and	x0, x1, x0
  48:	cmp	x0, #0x0
  4c:	b.eq	68 <grub_mod_init-0x2a8>  // b.none
  50:	ldr	w0, [sp, #68]
  54:	ldr	x1, [sp, #32]
  58:	lsl	x0, x1, x0
  5c:	ldr	x1, [sp, #72]
  60:	add	x0, x1, x0
  64:	str	x0, [sp, #72]
  68:	ldr	w0, [sp, #68]
  6c:	add	w0, w0, #0x1
  70:	str	w0, [sp, #68]
  74:	ldr	w0, [sp, #68]
  78:	cmp	w0, #0x3f
  7c:	b.le	30 <grub_mod_init-0x2e0>
  80:	ldr	x1, [sp, #40]
  84:	ldr	x0, [sp, #32]
  88:	mul	x0, x1, x0
  8c:	str	x0, [sp, #48]
  90:	ldr	x1, [sp, #56]
  94:	ldr	x0, [sp, #72]
  98:	cmp	x1, x0
  9c:	cset	w0, eq  // eq = none
  a0:	and	w0, w0, #0xff
  a4:	mov	w8, w0
  a8:	ldr	x2, [sp, #40]
  ac:	ldr	x3, [sp, #32]
  b0:	ldr	x0, [sp, #72]
  b4:	ldr	x1, [sp, #56]
  b8:	str	x1, [sp, #8]
  bc:	str	x0, [sp]
  c0:	mov	x7, x3
  c4:	mov	x6, x2
  c8:	adrp	x0, 0 <grub_mod_init-0x310>
  cc:	add	x0, x0, #0x0
  d0:	ldr	x5, [x0]
  d4:	adrp	x0, 0 <grub_mod_init-0x310>
  d8:	add	x0, x0, #0x0
  dc:	ldr	x4, [x0]
  e0:	mov	w3, #0x2a                  	// #42
  e4:	adrp	x0, 0 <grub_mod_init-0x310>
  e8:	add	x0, x0, #0x0
  ec:	ldr	x2, [x0]
  f0:	adrp	x0, 0 <grub_mod_init-0x310>
  f4:	add	x0, x0, #0x0
  f8:	ldr	x1, [x0]
  fc:	mov	w0, w8
 100:	bl	0 <grub_test_assert_helper>
 104:	ldr	x1, [sp, #48]
 108:	ldr	x0, [sp, #72]
 10c:	cmp	x1, x0
 110:	cset	w0, eq  // eq = none
 114:	and	w0, w0, #0xff
 118:	mov	w8, w0
 11c:	ldr	x2, [sp, #40]
 120:	ldr	x3, [sp, #32]
 124:	ldr	x0, [sp, #72]
 128:	ldr	x1, [sp, #48]
 12c:	str	x1, [sp, #8]
 130:	str	x0, [sp]
 134:	mov	x7, x3
 138:	mov	x6, x2
 13c:	adrp	x0, 0 <grub_mod_init-0x310>
 140:	add	x0, x0, #0x0
 144:	ldr	x5, [x0]
 148:	adrp	x0, 0 <grub_mod_init-0x310>
 14c:	add	x0, x0, #0x0
 150:	ldr	x4, [x0]
 154:	mov	w3, #0x2d                  	// #45
 158:	adrp	x0, 0 <grub_mod_init-0x310>
 15c:	add	x0, x0, #0x0
 160:	ldr	x2, [x0]
 164:	adrp	x0, 0 <grub_mod_init-0x310>
 168:	add	x0, x0, #0x0
 16c:	ldr	x1, [x0]
 170:	mov	w0, w8
 174:	bl	0 <grub_test_assert_helper>
 178:	nop
 17c:	ldp	x29, x30, [sp, #16]
 180:	add	sp, sp, #0x50
 184:	ret
	...
 1b8:	stp	x29, x30, [sp, #-48]!
 1bc:	mov	x29, sp
 1c0:	mov	x0, #0x194                 	// #404
 1c4:	str	x0, [sp, #40]
 1c8:	mov	x0, #0x7                   	// #7
 1cc:	str	x0, [sp, #32]
 1d0:	str	xzr, [sp, #24]
 1d4:	b	228 <grub_mod_init-0xe8>
 1d8:	adrp	x0, 0 <grub_mod_init-0x310>
 1dc:	add	x0, x0, #0x0
 1e0:	ldr	x1, [x0]
 1e4:	ldr	x0, [sp, #24]
 1e8:	lsl	x0, x0, #4
 1ec:	add	x0, x1, x0
 1f0:	ldr	x2, [x0]
 1f4:	adrp	x0, 0 <grub_mod_init-0x310>
 1f8:	add	x0, x0, #0x0
 1fc:	ldr	x1, [x0]
 200:	ldr	x0, [sp, #24]
 204:	lsl	x0, x0, #4
 208:	add	x0, x1, x0
 20c:	ldr	x0, [x0, #8]
 210:	mov	x1, x0
 214:	mov	x0, x2
 218:	bl	0 <grub_mod_init-0x310>
 21c:	ldr	x0, [sp, #24]
 220:	add	x0, x0, #0x1
 224:	str	x0, [sp, #24]
 228:	ldr	x0, [sp, #24]
 22c:	cmp	x0, #0x4
 230:	b.ls	1d8 <grub_mod_init-0x138>  // b.plast
 234:	str	xzr, [sp, #24]
 238:	b	2e4 <grub_mod_init-0x2c>
 23c:	ldr	x1, [sp, #40]
 240:	mov	x0, x1
 244:	lsl	x0, x0, #4
 248:	add	x2, x0, x1
 24c:	ldr	x1, [sp, #32]
 250:	mov	x0, x1
 254:	lsl	x0, x0, #1
 258:	add	x0, x0, x1
 25c:	lsl	x0, x0, #2
 260:	add	x0, x0, x1
 264:	add	x0, x2, x0
 268:	str	x0, [sp, #40]
 26c:	ldr	x1, [sp, #40]
 270:	mov	x0, x1
 274:	lsl	x0, x0, #1
 278:	add	x0, x0, x1
 27c:	lsl	x0, x0, #3
 280:	sub	x2, x0, x1
 284:	ldr	x1, [sp, #32]
 288:	mov	x0, x1
 28c:	lsl	x0, x0, #3
 290:	sub	x0, x0, x1
 294:	lsl	x0, x0, #2
 298:	add	x0, x0, x1
 29c:	add	x0, x2, x0
 2a0:	str	x0, [sp, #32]
 2a4:	ldr	x0, [sp, #32]
 2a8:	cmp	x0, #0x0
 2ac:	b.ne	2b8 <grub_mod_init-0x58>  // b.any
 2b0:	mov	x0, #0x1                   	// #1
 2b4:	str	x0, [sp, #32]
 2b8:	ldr	x0, [sp, #40]
 2bc:	cmp	x0, #0x0
 2c0:	b.ne	2cc <grub_mod_init-0x44>  // b.any
 2c4:	mov	x0, #0x1                   	// #1
 2c8:	str	x0, [sp, #40]
 2cc:	ldr	x1, [sp, #32]
 2d0:	ldr	x0, [sp, #40]
 2d4:	bl	0 <grub_mod_init-0x310>
 2d8:	ldr	x0, [sp, #24]
 2dc:	add	x0, x0, #0x1
 2e0:	str	x0, [sp, #24]
 2e4:	ldr	x1, [sp, #24]
 2e8:	mov	x0, #0x9c3f                	// #39999
 2ec:	cmp	x1, x0
 2f0:	b.ls	23c <grub_mod_init-0xd4>  // b.plast
 2f4:	nop
 2f8:	nop
 2fc:	ldp	x29, x30, [sp], #48
 300:	ret
 304:	nop
	...

0000000000000310 <grub_mod_init>:
 310:	stp	x29, x30, [sp, #-32]!
 314:	mov	x29, sp
 318:	str	x0, [sp, #24]
 31c:	adrp	x0, 0 <grub_mod_init-0x310>
 320:	add	x0, x0, #0x0
 324:	ldr	x1, [x0]
 328:	adrp	x0, 0 <grub_mod_init-0x310>
 32c:	add	x0, x0, #0x0
 330:	ldr	x0, [x0]
 334:	bl	0 <grub_test_register>
 338:	nop
 33c:	ldp	x29, x30, [sp], #32
 340:	ret
 344:	nop
	...

0000000000000358 <grub_mod_fini>:
 358:	stp	x29, x30, [sp, #-16]!
 35c:	mov	x29, sp
 360:	adrp	x0, 0 <grub_mod_init-0x310>
 364:	add	x0, x0, #0x0
 368:	ldr	x0, [x0]
 36c:	bl	0 <grub_test_unregister>
 370:	nop
 374:	ldp	x29, x30, [sp], #16
 378:	ret
 37c:	nop
	...
