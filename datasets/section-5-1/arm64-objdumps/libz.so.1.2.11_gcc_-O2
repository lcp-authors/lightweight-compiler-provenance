
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libz.so.1.2.11_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002368 <.init>:
    2368:	stp	x29, x30, [sp, #-16]!
    236c:	mov	x29, sp
    2370:	bl	2670 <adler32_z@plt+0x10>
    2374:	ldp	x29, x30, [sp], #16
    2378:	ret

Disassembly of section .plt:

0000000000002380 <memcpy@plt-0x20>:
    2380:	stp	x16, x30, [sp, #-16]!
    2384:	adrp	x16, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    2388:	ldr	x17, [x16, #4088]
    238c:	add	x16, x16, #0xff8
    2390:	br	x17
    2394:	nop
    2398:	nop
    239c:	nop

00000000000023a0 <memcpy@plt>:
    23a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16]
    23a8:	add	x16, x16, #0x0
    23ac:	br	x17

00000000000023b0 <crc32_z@plt>:
    23b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #8]
    23b8:	add	x16, x16, #0x8
    23bc:	br	x17

00000000000023c0 <gzvprintf@plt>:
    23c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #16]
    23c8:	add	x16, x16, #0x10
    23cc:	br	x17

00000000000023d0 <gzseek64@plt>:
    23d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #24]
    23d8:	add	x16, x16, #0x18
    23dc:	br	x17

00000000000023e0 <strlen@plt>:
    23e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #32]
    23e8:	add	x16, x16, #0x20
    23ec:	br	x17

00000000000023f0 <inflate@plt>:
    23f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #40]
    23f8:	add	x16, x16, #0x28
    23fc:	br	x17

0000000000002400 <gzclose_r@plt>:
    2400:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #48]
    2408:	add	x16, x16, #0x30
    240c:	br	x17

0000000000002410 <gzgetc@plt>:
    2410:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #56]
    2418:	add	x16, x16, #0x38
    241c:	br	x17

0000000000002420 <__cxa_finalize@plt>:
    2420:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #64]
    2428:	add	x16, x16, #0x40
    242c:	br	x17

0000000000002430 <crc32@plt>:
    2430:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #72]
    2438:	add	x16, x16, #0x48
    243c:	br	x17

0000000000002440 <inflateResetKeep@plt>:
    2440:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #80]
    2448:	add	x16, x16, #0x50
    244c:	br	x17

0000000000002450 <snprintf@plt>:
    2450:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #88]
    2458:	add	x16, x16, #0x58
    245c:	br	x17

0000000000002460 <malloc@plt>:
    2460:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #96]
    2468:	add	x16, x16, #0x60
    246c:	br	x17

0000000000002470 <open@plt>:
    2470:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #104]
    2478:	add	x16, x16, #0x68
    247c:	br	x17

0000000000002480 <deflateReset@plt>:
    2480:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #112]
    2488:	add	x16, x16, #0x70
    248c:	br	x17

0000000000002490 <deflate@plt>:
    2490:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #120]
    2498:	add	x16, x16, #0x78
    249c:	br	x17

00000000000024a0 <memset@plt>:
    24a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #128]
    24a8:	add	x16, x16, #0x80
    24ac:	br	x17

00000000000024b0 <lseek64@plt>:
    24b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #136]
    24b8:	add	x16, x16, #0x88
    24bc:	br	x17

00000000000024c0 <gztell64@plt>:
    24c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #144]
    24c8:	add	x16, x16, #0x90
    24cc:	br	x17

00000000000024d0 <deflateInit2_@plt>:
    24d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #152]
    24d8:	add	x16, x16, #0x98
    24dc:	br	x17

00000000000024e0 <deflateParams@plt>:
    24e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #160]
    24e8:	add	x16, x16, #0xa0
    24ec:	br	x17

00000000000024f0 <deflateInit_@plt>:
    24f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #168]
    24f8:	add	x16, x16, #0xa8
    24fc:	br	x17

0000000000002500 <strerror@plt>:
    2500:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #176]
    2508:	add	x16, x16, #0xb0
    250c:	br	x17

0000000000002510 <close@plt>:
    2510:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #184]
    2518:	add	x16, x16, #0xb8
    251c:	br	x17

0000000000002520 <__gmon_start__@plt>:
    2520:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #192]
    2528:	add	x16, x16, #0xc0
    252c:	br	x17

0000000000002530 <write@plt>:
    2530:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #200]
    2538:	add	x16, x16, #0xc8
    253c:	br	x17

0000000000002540 <uncompress2@plt>:
    2540:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #208]
    2548:	add	x16, x16, #0xd0
    254c:	br	x17

0000000000002550 <inflateEnd@plt>:
    2550:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #216]
    2558:	add	x16, x16, #0xd8
    255c:	br	x17

0000000000002560 <adler32@plt>:
    2560:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #224]
    2568:	add	x16, x16, #0xe0
    256c:	br	x17

0000000000002570 <free@plt>:
    2570:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #232]
    2578:	add	x16, x16, #0xe8
    257c:	br	x17

0000000000002580 <gzclose_w@plt>:
    2580:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #240]
    2588:	add	x16, x16, #0xf0
    258c:	br	x17

0000000000002590 <deflateEnd@plt>:
    2590:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #248]
    2598:	add	x16, x16, #0xf8
    259c:	br	x17

00000000000025a0 <gzrewind@plt>:
    25a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #256]
    25a8:	add	x16, x16, #0x100
    25ac:	br	x17

00000000000025b0 <gzoffset64@plt>:
    25b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #264]
    25b8:	add	x16, x16, #0x108
    25bc:	br	x17

00000000000025c0 <inflateInit_@plt>:
    25c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #272]
    25c8:	add	x16, x16, #0x110
    25cc:	br	x17

00000000000025d0 <compress2@plt>:
    25d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #280]
    25d8:	add	x16, x16, #0x118
    25dc:	br	x17

00000000000025e0 <read@plt>:
    25e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #288]
    25e8:	add	x16, x16, #0x120
    25ec:	br	x17

00000000000025f0 <memchr@plt>:
    25f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #296]
    25f8:	add	x16, x16, #0x128
    25fc:	br	x17

0000000000002600 <inflateInit2_@plt>:
    2600:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #304]
    2608:	add	x16, x16, #0x130
    260c:	br	x17

0000000000002610 <inflateReset@plt>:
    2610:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #312]
    2618:	add	x16, x16, #0x138
    261c:	br	x17

0000000000002620 <vsnprintf@plt>:
    2620:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #320]
    2628:	add	x16, x16, #0x140
    262c:	br	x17

0000000000002630 <deflateResetKeep@plt>:
    2630:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #328]
    2638:	add	x16, x16, #0x148
    263c:	br	x17

0000000000002640 <inflateReset2@plt>:
    2640:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #336]
    2648:	add	x16, x16, #0x150
    264c:	br	x17

0000000000002650 <__errno_location@plt>:
    2650:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2654:	ldr	x17, [x16, #344]
    2658:	add	x16, x16, #0x158
    265c:	br	x17

0000000000002660 <adler32_z@plt>:
    2660:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2664:	ldr	x17, [x16, #352]
    2668:	add	x16, x16, #0x160
    266c:	br	x17

Disassembly of section .text:

0000000000002670 <adler32_z@@ZLIB_1.2.9-0x1c0>:
    2670:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    2674:	ldr	x0, [x0, #4048]
    2678:	cbz	x0, 2680 <adler32_z@plt+0x20>
    267c:	b	2520 <__gmon_start__@plt>
    2680:	ret
    2684:	nop
    2688:	adrp	x0, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x16788>
    268c:	add	x0, x0, #0x170
    2690:	adrp	x1, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x16788>
    2694:	add	x1, x1, #0x170
    2698:	cmp	x1, x0
    269c:	b.eq	26b4 <adler32_z@plt+0x54>  // b.none
    26a0:	adrp	x1, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    26a4:	ldr	x1, [x1, #4032]
    26a8:	cbz	x1, 26b4 <adler32_z@plt+0x54>
    26ac:	mov	x16, x1
    26b0:	br	x16
    26b4:	ret
    26b8:	adrp	x0, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x16788>
    26bc:	add	x0, x0, #0x170
    26c0:	adrp	x1, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x16788>
    26c4:	add	x1, x1, #0x170
    26c8:	sub	x1, x1, x0
    26cc:	lsr	x2, x1, #63
    26d0:	add	x1, x2, x1, asr #3
    26d4:	cmp	xzr, x1, asr #1
    26d8:	asr	x1, x1, #1
    26dc:	b.eq	26f4 <adler32_z@plt+0x94>  // b.none
    26e0:	adrp	x2, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    26e4:	ldr	x2, [x2, #4064]
    26e8:	cbz	x2, 26f4 <adler32_z@plt+0x94>
    26ec:	mov	x16, x2
    26f0:	br	x16
    26f4:	ret
    26f8:	stp	x29, x30, [sp, #-32]!
    26fc:	mov	x29, sp
    2700:	str	x19, [sp, #16]
    2704:	adrp	x19, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x16788>
    2708:	ldrb	w0, [x19, #368]
    270c:	cbnz	w0, 2734 <adler32_z@plt+0xd4>
    2710:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    2714:	ldr	x0, [x0, #4040]
    2718:	cbz	x0, 2728 <adler32_z@plt+0xc8>
    271c:	adrp	x0, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x16788>
    2720:	ldr	x0, [x0, #360]
    2724:	bl	2420 <__cxa_finalize@plt>
    2728:	bl	2688 <adler32_z@plt+0x28>
    272c:	mov	w0, #0x1                   	// #1
    2730:	strb	w0, [x19, #368]
    2734:	ldr	x19, [sp, #16]
    2738:	ldp	x29, x30, [sp], #32
    273c:	ret
    2740:	b	26b8 <adler32_z@plt+0x58>
    2744:	nop
    2748:	tbnz	x2, #63, 2824 <adler32_z@plt+0x1c4>
    274c:	mov	x3, #0xe2e7                	// #58087
    2750:	and	x4, x0, #0xffff
    2754:	movk	x3, #0x8697, lsl #16
    2758:	mov	x5, #0xc5cd                	// #50637
    275c:	movk	x3, #0x8070, lsl #32
    2760:	movk	x5, #0xd2f, lsl #16
    2764:	movk	x3, #0x8007, lsl #48
    2768:	movk	x5, #0xe1, lsl #32
    276c:	movk	x5, #0xf, lsl #48
    2770:	lsr	w6, w1, #16
    2774:	smulh	x3, x2, x3
    2778:	adds	x1, x4, w1, uxth
    277c:	lsr	w0, w0, #16
    2780:	add	x3, x3, x2
    2784:	add	x0, x0, x6
    2788:	mov	x6, #0xfff0                	// #65520
    278c:	asr	x3, x3, #15
    2790:	sub	x3, x3, x2, asr #63
    2794:	lsl	x7, x3, #12
    2798:	sub	x7, x7, x3
    279c:	add	x3, x3, x7, lsl #4
    27a0:	sub	x3, x2, x3
    27a4:	mul	x2, x3, x4
    27a8:	umulh	x5, x2, x5
    27ac:	sub	x4, x2, x5
    27b0:	add	x4, x5, x4, lsr #1
    27b4:	lsr	x4, x4, #15
    27b8:	lsl	x5, x4, #12
    27bc:	sub	x5, x5, x4
    27c0:	add	x4, x4, x5, lsl #4
    27c4:	sub	x2, x2, x4
    27c8:	mov	x4, #0xfff1                	// #65521
    27cc:	sub	x3, x2, x3
    27d0:	add	x3, x0, x3
    27d4:	add	x0, x3, x4
    27d8:	b.eq	27f4 <adler32_z@plt+0x194>  // b.none
    27dc:	sub	x6, x1, #0x1
    27e0:	mov	x2, #0xffffffffffff000e    	// #-65522
    27e4:	add	x1, x1, x2
    27e8:	mov	x2, #0xfff0                	// #65520
    27ec:	cmp	x6, x2
    27f0:	csel	x6, x1, x6, hi  // hi = pmore
    27f4:	mov	x2, #0xffe1                	// #65505
    27f8:	mov	x1, #0xffffffffffff000f    	// #-65521
    27fc:	movk	x2, #0x1, lsl #16
    2800:	add	x3, x3, x1
    2804:	cmp	x0, x2
    2808:	mov	x2, #0xfff0                	// #65520
    280c:	csel	x0, x3, x0, hi  // hi = pmore
    2810:	add	x1, x0, x1
    2814:	cmp	x0, x2
    2818:	csel	x0, x1, x0, hi  // hi = pmore
    281c:	orr	x0, x6, x0, lsl #16
    2820:	ret
    2824:	mov	x0, #0xffffffff            	// #4294967295
    2828:	ret
    282c:	nop

0000000000002830 <adler32_z@@ZLIB_1.2.9>:
    2830:	mov	x10, x2
    2834:	cmp	x2, #0x1
    2838:	lsr	w8, w0, #16
    283c:	mov	x2, x1
    2840:	and	x1, x0, #0xffff
    2844:	b.eq	2a2c <adler32_z@@ZLIB_1.2.9+0x1fc>  // b.none
    2848:	cbz	x2, 2bd0 <adler32_z@@ZLIB_1.2.9+0x3a0>
    284c:	cmp	x10, #0xf
    2850:	b.ls	29c4 <adler32_z@@ZLIB_1.2.9+0x194>  // b.plast
    2854:	stp	x29, x30, [sp, #-32]!
    2858:	mov	x14, #0x15af                	// #5551
    285c:	mov	x15, #0x15b0                	// #5552
    2860:	mov	x29, sp
    2864:	cmp	x10, x14
    2868:	add	x9, x2, x15
    286c:	b.ls	2a6c <adler32_z@@ZLIB_1.2.9+0x23c>  // b.plast
    2870:	mov	x12, #0xc5cd                	// #50637
    2874:	mov	x13, #0xffffffffffffea50    	// #-5552
    2878:	movk	x12, #0xd2f, lsl #16
    287c:	str	x19, [sp, #16]
    2880:	movk	x12, #0xe1, lsl #32
    2884:	movk	x12, #0xf, lsl #48
    2888:	mov	x11, x10
    288c:	add	x2, x9, x13
    2890:	add	x10, x10, x13
    2894:	nop
    2898:	ldrb	w4, [x2]
    289c:	add	x2, x2, #0x10
    28a0:	ldurb	w16, [x2, #-15]
    28a4:	add	x4, x4, x1
    28a8:	ldurb	w0, [x2, #-14]
    28ac:	add	x16, x16, x4
    28b0:	ldurb	w1, [x2, #-13]
    28b4:	add	x0, x0, x16
    28b8:	ldurb	w7, [x2, #-12]
    28bc:	add	x1, x1, x0
    28c0:	ldurb	w18, [x2, #-11]
    28c4:	add	x7, x7, x1
    28c8:	ldurb	w3, [x2, #-10]
    28cc:	add	x18, x18, x7
    28d0:	ldurb	w19, [x2, #-9]
    28d4:	add	x3, x3, x18
    28d8:	ldurb	w6, [x2, #-8]
    28dc:	add	x19, x19, x3
    28e0:	ldurb	w30, [x2, #-7]
    28e4:	add	x6, x6, x19
    28e8:	ldurb	w5, [x2, #-6]
    28ec:	add	x30, x30, x6
    28f0:	ldurb	w17, [x2, #-5]
    28f4:	add	x16, x4, x16
    28f8:	add	x1, x0, x1
    28fc:	ldurb	w4, [x2, #-4]
    2900:	add	x5, x5, x30
    2904:	add	x1, x1, x16
    2908:	add	x18, x7, x18
    290c:	add	x16, x17, x5
    2910:	ldurb	w7, [x2, #-3]
    2914:	add	x0, x3, x19
    2918:	add	x4, x4, x16
    291c:	ldurb	w3, [x2, #-2]
    2920:	add	x1, x1, x18
    2924:	add	x1, x1, x0
    2928:	add	x7, x7, x4
    292c:	add	x0, x6, x30
    2930:	ldurb	w6, [x2, #-1]
    2934:	add	x0, x1, x0
    2938:	add	x3, x3, x7
    293c:	add	x5, x5, x16
    2940:	add	x4, x4, x7
    2944:	add	x0, x0, x5
    2948:	add	x1, x6, x3
    294c:	add	x0, x0, x4
    2950:	add	x3, x3, x1
    2954:	add	x0, x0, x3
    2958:	cmp	x2, x9
    295c:	add	x8, x8, x0
    2960:	b.ne	2898 <adler32_z@@ZLIB_1.2.9+0x68>  // b.any
    2964:	umulh	x5, x1, x12
    2968:	cmp	x10, x14
    296c:	umulh	x4, x8, x12
    2970:	add	x9, x2, x15
    2974:	sub	x3, x1, x5
    2978:	sub	x0, x8, x4
    297c:	add	x3, x5, x3, lsr #1
    2980:	add	x0, x4, x0, lsr #1
    2984:	lsr	x3, x3, #15
    2988:	lsr	x0, x0, #15
    298c:	lsl	x5, x3, #12
    2990:	lsl	x4, x0, #12
    2994:	sub	x5, x5, x3
    2998:	sub	x4, x4, x0
    299c:	add	x3, x3, x5, lsl #4
    29a0:	add	x0, x0, x4, lsl #4
    29a4:	sub	x1, x1, x3
    29a8:	sub	x8, x8, x0
    29ac:	b.hi	2888 <adler32_z@@ZLIB_1.2.9+0x58>  // b.pmore
    29b0:	cbnz	x10, 2a60 <adler32_z@@ZLIB_1.2.9+0x230>
    29b4:	orr	x0, x1, x8, lsl #16
    29b8:	ldr	x19, [sp, #16]
    29bc:	ldp	x29, x30, [sp], #32
    29c0:	ret
    29c4:	cbz	x10, 29e0 <adler32_z@@ZLIB_1.2.9+0x1b0>
    29c8:	add	x10, x2, x10
    29cc:	ldrb	w0, [x2], #1
    29d0:	add	x1, x1, x0
    29d4:	cmp	x2, x10
    29d8:	add	x8, x8, x1
    29dc:	b.ne	29cc <adler32_z@@ZLIB_1.2.9+0x19c>  // b.any
    29e0:	mov	x0, #0xc5cd                	// #50637
    29e4:	mov	x2, #0xfff0                	// #65520
    29e8:	movk	x0, #0xd2f, lsl #16
    29ec:	cmp	x1, x2
    29f0:	movk	x0, #0xe1, lsl #32
    29f4:	mov	x3, #0xffffffffffff000f    	// #-65521
    29f8:	movk	x0, #0xf, lsl #48
    29fc:	add	x3, x1, x3
    2a00:	csel	x1, x3, x1, hi  // hi = pmore
    2a04:	umulh	x2, x8, x0
    2a08:	sub	x0, x8, x2
    2a0c:	add	x0, x2, x0, lsr #1
    2a10:	lsr	x2, x0, #15
    2a14:	lsl	x0, x2, #12
    2a18:	sub	x0, x0, x2
    2a1c:	add	x0, x2, x0, lsl #4
    2a20:	sub	x8, x8, x0
    2a24:	orr	x0, x1, x8, lsl #16
    2a28:	ret
    2a2c:	ldrb	w0, [x2]
    2a30:	mov	x3, #0xfff0                	// #65520
    2a34:	mov	x2, #0xffffffffffff000f    	// #-65521
    2a38:	add	x1, x0, x1
    2a3c:	add	x0, x1, x2
    2a40:	cmp	x1, x3
    2a44:	csel	x1, x0, x1, hi  // hi = pmore
    2a48:	add	x8, x1, x8
    2a4c:	add	x2, x8, x2
    2a50:	cmp	x8, x3
    2a54:	csel	x8, x2, x8, hi  // hi = pmore
    2a58:	orr	x0, x1, x8, lsl #16
    2a5c:	ret
    2a60:	cmp	x10, #0xf
    2a64:	b.ls	2bd8 <adler32_z@@ZLIB_1.2.9+0x3a8>  // b.plast
    2a68:	ldr	x19, [sp, #16]
    2a6c:	sub	x7, x10, #0x10
    2a70:	lsr	x7, x7, #4
    2a74:	add	x9, x7, #0x1
    2a78:	add	x9, x2, x9, lsl #4
    2a7c:	ldrb	w5, [x2]
    2a80:	add	x2, x2, #0x10
    2a84:	ldurb	w11, [x2, #-15]
    2a88:	add	x5, x5, x1
    2a8c:	ldurb	w0, [x2, #-14]
    2a90:	add	x11, x11, x5
    2a94:	ldurb	w16, [x2, #-13]
    2a98:	add	x0, x0, x11
    2a9c:	ldurb	w4, [x2, #-12]
    2aa0:	ldurb	w15, [x2, #-11]
    2aa4:	add	x16, x16, x0
    2aa8:	ldurb	w3, [x2, #-10]
    2aac:	add	x4, x4, x16
    2ab0:	ldurb	w14, [x2, #-9]
    2ab4:	add	x15, x15, x4
    2ab8:	add	x3, x3, x15
    2abc:	ldurb	w1, [x2, #-8]
    2ac0:	add	x14, x14, x3
    2ac4:	ldurb	w13, [x2, #-7]
    2ac8:	ldurb	w6, [x2, #-6]
    2acc:	add	x1, x1, x14
    2ad0:	ldurb	w12, [x2, #-5]
    2ad4:	add	x13, x13, x1
    2ad8:	add	x11, x5, x11
    2adc:	add	x6, x6, x13
    2ae0:	ldurb	w5, [x2, #-4]
    2ae4:	add	x0, x0, x16
    2ae8:	add	x0, x0, x11
    2aec:	add	x4, x4, x15
    2af0:	ldurb	w11, [x2, #-3]
    2af4:	add	x12, x12, x6
    2af8:	add	x0, x0, x4
    2afc:	add	x5, x5, x12
    2b00:	add	x4, x3, x14
    2b04:	ldurb	w3, [x2, #-2]
    2b08:	add	x0, x0, x4
    2b0c:	add	x1, x1, x13
    2b10:	ldurb	w4, [x2, #-1]
    2b14:	add	x11, x11, x5
    2b18:	add	x0, x0, x1
    2b1c:	add	x3, x3, x11
    2b20:	add	x6, x6, x12
    2b24:	add	x5, x5, x11
    2b28:	add	x0, x0, x6
    2b2c:	add	x1, x4, x3
    2b30:	add	x0, x0, x5
    2b34:	add	x3, x3, x1
    2b38:	add	x0, x0, x3
    2b3c:	cmp	x2, x9
    2b40:	add	x8, x8, x0
    2b44:	b.ne	2a7c <adler32_z@@ZLIB_1.2.9+0x24c>  // b.any
    2b48:	sub	x11, x10, #0x11
    2b4c:	tst	x10, #0xf
    2b50:	sub	x7, x11, x7, lsl #4
    2b54:	b.eq	2b74 <adler32_z@@ZLIB_1.2.9+0x344>  // b.none
    2b58:	add	x7, x7, #0x1
    2b5c:	add	x0, x9, x7
    2b60:	ldrb	w2, [x9], #1
    2b64:	add	x1, x1, x2
    2b68:	cmp	x9, x0
    2b6c:	add	x8, x8, x1
    2b70:	b.ne	2b60 <adler32_z@@ZLIB_1.2.9+0x330>  // b.any
    2b74:	mov	x0, #0xc5cd                	// #50637
    2b78:	movk	x0, #0xd2f, lsl #16
    2b7c:	movk	x0, #0xe1, lsl #32
    2b80:	movk	x0, #0xf, lsl #48
    2b84:	ldp	x29, x30, [sp], #32
    2b88:	umulh	x3, x8, x0
    2b8c:	umulh	x4, x1, x0
    2b90:	sub	x0, x8, x3
    2b94:	sub	x2, x1, x4
    2b98:	add	x0, x3, x0, lsr #1
    2b9c:	add	x2, x4, x2, lsr #1
    2ba0:	lsr	x0, x0, #15
    2ba4:	lsr	x2, x2, #15
    2ba8:	lsl	x3, x0, #12
    2bac:	lsl	x4, x2, #12
    2bb0:	sub	x3, x3, x0
    2bb4:	sub	x4, x4, x2
    2bb8:	add	x0, x0, x3, lsl #4
    2bbc:	add	x2, x2, x4, lsl #4
    2bc0:	sub	x8, x8, x0
    2bc4:	sub	x1, x1, x2
    2bc8:	orr	x0, x1, x8, lsl #16
    2bcc:	ret
    2bd0:	mov	x0, #0x1                   	// #1
    2bd4:	ret
    2bd8:	mov	x0, #0xffffffffffffea4f    	// #-5553
    2bdc:	mov	x9, x2
    2be0:	add	x7, x11, x0
    2be4:	ldr	x19, [sp, #16]
    2be8:	b	2b58 <adler32_z@@ZLIB_1.2.9+0x328>
    2bec:	nop

0000000000002bf0 <adler32@@Base>:
    2bf0:	mov	w2, w2
    2bf4:	b	2660 <adler32_z@plt>

0000000000002bf8 <adler32_combine@@ZLIB_1.2.2>:
    2bf8:	b	2748 <adler32_z@plt+0xe8>
    2bfc:	nop

0000000000002c00 <adler32_combine64@@ZLIB_1.2.3.3>:
    2c00:	b	2748 <adler32_z@plt+0xe8>
    2c04:	nop
    2c08:	cmp	x2, #0x0
    2c0c:	mov	x8, x0
    2c10:	b.le	2e70 <adler32_combine64@@ZLIB_1.2.3.3+0x270>
    2c14:	sub	sp, sp, #0x200
    2c18:	mov	x9, x2
    2c1c:	add	x6, sp, #0x100
    2c20:	mov	x10, x1
    2c24:	mov	x3, #0x8320                	// #33568
    2c28:	add	x2, sp, #0x200
    2c2c:	add	x1, x6, #0x8
    2c30:	movk	x3, #0xedb8, lsl #16
    2c34:	mov	x0, #0x1                   	// #1
    2c38:	str	x3, [sp, #256]
    2c3c:	nop
    2c40:	str	x0, [x1], #8
    2c44:	lsl	x0, x0, #1
    2c48:	cmp	x1, x2
    2c4c:	b.ne	2c40 <adler32_combine64@@ZLIB_1.2.3.3+0x40>  // b.any
    2c50:	mov	x0, #0x8320                	// #33568
    2c54:	mov	x7, sp
    2c58:	mov	x5, #0x1                   	// #1
    2c5c:	movk	x0, #0xedb8, lsl #16
    2c60:	mov	x4, #0x8                   	// #8
    2c64:	cbz	x0, 2cac <adler32_combine64@@ZLIB_1.2.3.3+0xac>
    2c68:	mov	x1, x6
    2c6c:	mov	x2, #0x0                   	// #0
    2c70:	tbz	w0, #0, 2c7c <adler32_combine64@@ZLIB_1.2.3.3+0x7c>
    2c74:	ldr	x3, [x1]
    2c78:	eor	x2, x2, x3
    2c7c:	lsr	x0, x0, #1
    2c80:	add	x1, x1, #0x8
    2c84:	cbnz	x0, 2c70 <adler32_combine64@@ZLIB_1.2.3.3+0x70>
    2c88:	add	x4, x7, x4
    2c8c:	add	x5, x5, #0x1
    2c90:	cmp	x5, #0x21
    2c94:	stur	x2, [x4, #-8]
    2c98:	b.eq	2cc4 <adler32_combine64@@ZLIB_1.2.3.3+0xc4>  // b.none
    2c9c:	lsl	x4, x5, #3
    2ca0:	add	x0, x6, x4
    2ca4:	ldur	x0, [x0, #-8]
    2ca8:	cbnz	x0, 2c68 <adler32_combine64@@ZLIB_1.2.3.3+0x68>
    2cac:	add	x4, x7, x4
    2cb0:	mov	x2, #0x0                   	// #0
    2cb4:	add	x5, x5, #0x1
    2cb8:	cmp	x5, #0x21
    2cbc:	stur	x2, [x4, #-8]
    2cc0:	b.ne	2c9c <adler32_combine64@@ZLIB_1.2.3.3+0x9c>  // b.any
    2cc4:	mov	x5, #0x1                   	// #1
    2cc8:	lsl	x4, x5, #3
    2ccc:	add	x0, x7, x4
    2cd0:	ldur	x0, [x0, #-8]
    2cd4:	cbz	x0, 2dfc <adler32_combine64@@ZLIB_1.2.3.3+0x1fc>
    2cd8:	mov	x1, x7
    2cdc:	mov	x2, #0x0                   	// #0
    2ce0:	tbz	w0, #0, 2cec <adler32_combine64@@ZLIB_1.2.3.3+0xec>
    2ce4:	ldr	x3, [x1]
    2ce8:	eor	x2, x2, x3
    2cec:	lsr	x0, x0, #1
    2cf0:	add	x1, x1, #0x8
    2cf4:	cbnz	x0, 2ce0 <adler32_combine64@@ZLIB_1.2.3.3+0xe0>
    2cf8:	add	x4, x6, x4
    2cfc:	add	x5, x5, #0x1
    2d00:	cmp	x5, #0x21
    2d04:	stur	x2, [x4, #-8]
    2d08:	b.ne	2cc8 <adler32_combine64@@ZLIB_1.2.3.3+0xc8>  // b.any
    2d0c:	mov	x5, #0x1                   	// #1
    2d10:	lsl	x4, x5, #3
    2d14:	add	x0, x6, x4
    2d18:	ldur	x0, [x0, #-8]
    2d1c:	cbz	x0, 2dc4 <adler32_combine64@@ZLIB_1.2.3.3+0x1c4>
    2d20:	mov	x1, x6
    2d24:	mov	x2, #0x0                   	// #0
    2d28:	tbz	w0, #0, 2d34 <adler32_combine64@@ZLIB_1.2.3.3+0x134>
    2d2c:	ldr	x3, [x1]
    2d30:	eor	x2, x2, x3
    2d34:	lsr	x0, x0, #1
    2d38:	add	x1, x1, #0x8
    2d3c:	cbnz	x0, 2d28 <adler32_combine64@@ZLIB_1.2.3.3+0x128>
    2d40:	add	x4, x7, x4
    2d44:	add	x5, x5, #0x1
    2d48:	cmp	x5, #0x21
    2d4c:	stur	x2, [x4, #-8]
    2d50:	b.ne	2d10 <adler32_combine64@@ZLIB_1.2.3.3+0x110>  // b.any
    2d54:	tbnz	w9, #0, 2e44 <adler32_combine64@@ZLIB_1.2.3.3+0x244>
    2d58:	cmp	xzr, x9, asr #1
    2d5c:	asr	x11, x9, #1
    2d60:	b.eq	2db8 <adler32_combine64@@ZLIB_1.2.3.3+0x1b8>  // b.none
    2d64:	mov	x5, #0x1                   	// #1
    2d68:	lsl	x4, x5, #3
    2d6c:	add	x0, x7, x4
    2d70:	ldur	x0, [x0, #-8]
    2d74:	cbz	x0, 2de0 <adler32_combine64@@ZLIB_1.2.3.3+0x1e0>
    2d78:	mov	x1, x7
    2d7c:	mov	x2, #0x0                   	// #0
    2d80:	tbz	w0, #0, 2d8c <adler32_combine64@@ZLIB_1.2.3.3+0x18c>
    2d84:	ldr	x3, [x1]
    2d88:	eor	x2, x2, x3
    2d8c:	lsr	x0, x0, #1
    2d90:	add	x1, x1, #0x8
    2d94:	cbnz	x0, 2d80 <adler32_combine64@@ZLIB_1.2.3.3+0x180>
    2d98:	add	x4, x6, x4
    2d9c:	add	x5, x5, #0x1
    2da0:	cmp	x5, #0x21
    2da4:	stur	x2, [x4, #-8]
    2da8:	b.ne	2d68 <adler32_combine64@@ZLIB_1.2.3.3+0x168>  // b.any
    2dac:	tbnz	w11, #0, 2e18 <adler32_combine64@@ZLIB_1.2.3.3+0x218>
    2db0:	asr	x9, x9, #2
    2db4:	cbnz	x9, 2d0c <adler32_combine64@@ZLIB_1.2.3.3+0x10c>
    2db8:	eor	x0, x8, x10
    2dbc:	add	sp, sp, #0x200
    2dc0:	ret
    2dc4:	add	x4, x7, x4
    2dc8:	mov	x2, #0x0                   	// #0
    2dcc:	add	x5, x5, #0x1
    2dd0:	cmp	x5, #0x21
    2dd4:	stur	x2, [x4, #-8]
    2dd8:	b.ne	2d10 <adler32_combine64@@ZLIB_1.2.3.3+0x110>  // b.any
    2ddc:	b	2d54 <adler32_combine64@@ZLIB_1.2.3.3+0x154>
    2de0:	add	x4, x6, x4
    2de4:	mov	x2, #0x0                   	// #0
    2de8:	add	x5, x5, #0x1
    2dec:	cmp	x5, #0x21
    2df0:	stur	x2, [x4, #-8]
    2df4:	b.ne	2d68 <adler32_combine64@@ZLIB_1.2.3.3+0x168>  // b.any
    2df8:	b	2dac <adler32_combine64@@ZLIB_1.2.3.3+0x1ac>
    2dfc:	add	x4, x6, x4
    2e00:	mov	x2, #0x0                   	// #0
    2e04:	add	x5, x5, #0x1
    2e08:	cmp	x5, #0x21
    2e0c:	stur	x2, [x4, #-8]
    2e10:	b.ne	2cc8 <adler32_combine64@@ZLIB_1.2.3.3+0xc8>  // b.any
    2e14:	b	2d0c <adler32_combine64@@ZLIB_1.2.3.3+0x10c>
    2e18:	cbz	x8, 2db0 <adler32_combine64@@ZLIB_1.2.3.3+0x1b0>
    2e1c:	mov	x1, x6
    2e20:	mov	x0, x8
    2e24:	mov	x8, #0x0                   	// #0
    2e28:	tbz	w0, #0, 2e34 <adler32_combine64@@ZLIB_1.2.3.3+0x234>
    2e2c:	ldr	x2, [x1]
    2e30:	eor	x8, x8, x2
    2e34:	lsr	x0, x0, #1
    2e38:	add	x1, x1, #0x8
    2e3c:	cbnz	x0, 2e28 <adler32_combine64@@ZLIB_1.2.3.3+0x228>
    2e40:	b	2db0 <adler32_combine64@@ZLIB_1.2.3.3+0x1b0>
    2e44:	cbz	x8, 2d58 <adler32_combine64@@ZLIB_1.2.3.3+0x158>
    2e48:	mov	x1, x7
    2e4c:	mov	x0, x8
    2e50:	mov	x8, #0x0                   	// #0
    2e54:	tbz	w0, #0, 2e60 <adler32_combine64@@ZLIB_1.2.3.3+0x260>
    2e58:	ldr	x2, [x1]
    2e5c:	eor	x8, x8, x2
    2e60:	lsr	x0, x0, #1
    2e64:	add	x1, x1, #0x8
    2e68:	cbnz	x0, 2e54 <adler32_combine64@@ZLIB_1.2.3.3+0x254>
    2e6c:	b	2d58 <adler32_combine64@@ZLIB_1.2.3.3+0x158>
    2e70:	ret
    2e74:	nop

0000000000002e78 <get_crc_table@@Base>:
    2e78:	adrp	x0, e000 <gzclose_r@@ZLIB_1.2.3.5+0x448>
    2e7c:	add	x0, x0, #0x960
    2e80:	ret
    2e84:	nop

0000000000002e88 <crc32_z@@ZLIB_1.2.9>:
    2e88:	cbz	x1, 3184 <crc32_z@@ZLIB_1.2.9+0x2fc>
    2e8c:	mov	w3, w0
    2e90:	mvn	w4, w0
    2e94:	cbz	x2, 2ed4 <crc32_z@@ZLIB_1.2.9+0x4c>
    2e98:	tst	x1, #0x3
    2e9c:	b.eq	2edc <crc32_z@@ZLIB_1.2.9+0x54>  // b.none
    2ea0:	adrp	x3, e000 <gzclose_r@@ZLIB_1.2.3.5+0x448>
    2ea4:	add	x3, x3, #0x960
    2ea8:	b	2eb4 <crc32_z@@ZLIB_1.2.9+0x2c>
    2eac:	tst	x1, #0x3
    2eb0:	b.eq	2edc <crc32_z@@ZLIB_1.2.9+0x54>  // b.none
    2eb4:	ldrb	w0, [x1], #1
    2eb8:	subs	x2, x2, #0x1
    2ebc:	eor	w0, w0, w4
    2ec0:	and	x0, x0, #0xff
    2ec4:	ldr	w0, [x3, x0, lsl #2]
    2ec8:	eor	w4, w0, w4, lsr #8
    2ecc:	b.ne	2eac <crc32_z@@ZLIB_1.2.9+0x24>  // b.any
    2ed0:	mvn	w3, w4
    2ed4:	mov	w0, w3
    2ed8:	ret
    2edc:	cmp	x2, #0x1f
    2ee0:	b.ls	30e4 <crc32_z@@ZLIB_1.2.9+0x25c>  // b.plast
    2ee4:	sub	x7, x2, #0x20
    2ee8:	adrp	x3, e000 <gzclose_r@@ZLIB_1.2.3.5+0x448>
    2eec:	and	x7, x7, #0xffffffffffffffe0
    2ef0:	add	x3, x3, #0x960
    2ef4:	add	x7, x7, #0x20
    2ef8:	add	x7, x1, x7
    2efc:	nop
    2f00:	ldp	w0, w8, [x1]
    2f04:	ldp	w13, w5, [x1, #8]
    2f08:	eor	w4, w4, w0
    2f0c:	ldp	w12, w11, [x1, #16]
    2f10:	ubfx	x6, x4, #8, #8
    2f14:	ubfx	x0, x4, #16, #8
    2f18:	add	x10, x3, w4, uxtb #2
    2f1c:	add	x6, x6, #0x200
    2f20:	add	x0, x0, #0x100
    2f24:	lsr	w4, w4, #24
    2f28:	add	x1, x1, #0x20
    2f2c:	ldr	w9, [x3, x6, lsl #2]
    2f30:	ldr	w4, [x3, x4, lsl #2]
    2f34:	ldr	w6, [x3, x0, lsl #2]
    2f38:	ldr	w0, [x10, #3072]
    2f3c:	eor	w9, w9, w6
    2f40:	ldur	w10, [x1, #-8]
    2f44:	eor	w0, w0, w4
    2f48:	cmp	x1, x7
    2f4c:	eor	w9, w9, w0
    2f50:	eor	w9, w9, w8
    2f54:	ubfx	x4, x9, #8, #8
    2f58:	ubfx	x0, x9, #16, #8
    2f5c:	add	x4, x4, #0x200
    2f60:	add	x0, x0, #0x100
    2f64:	add	x14, x3, w9, uxtb #2
    2f68:	lsr	w9, w9, #24
    2f6c:	ldr	w6, [x3, x0, lsl #2]
    2f70:	ldr	w8, [x3, x4, lsl #2]
    2f74:	ldr	w0, [x14, #3072]
    2f78:	ldr	w4, [x3, x9, lsl #2]
    2f7c:	eor	w8, w8, w6
    2f80:	eor	w0, w0, w4
    2f84:	eor	w8, w8, w0
    2f88:	eor	w8, w8, w13
    2f8c:	ubfx	x4, x8, #8, #8
    2f90:	ubfx	x0, x8, #16, #8
    2f94:	add	x4, x4, #0x200
    2f98:	add	x0, x0, #0x100
    2f9c:	add	x13, x3, w8, uxtb #2
    2fa0:	lsr	w8, w8, #24
    2fa4:	ldr	w9, [x3, x0, lsl #2]
    2fa8:	ldr	w6, [x3, x4, lsl #2]
    2fac:	ldr	w0, [x13, #3072]
    2fb0:	ldr	w4, [x3, x8, lsl #2]
    2fb4:	eor	w6, w6, w9
    2fb8:	eor	w0, w0, w4
    2fbc:	eor	w6, w6, w0
    2fc0:	eor	w6, w6, w5
    2fc4:	ubfx	x4, x6, #8, #8
    2fc8:	ubfx	x0, x6, #16, #8
    2fcc:	add	x9, x3, w6, uxtb #2
    2fd0:	add	x4, x4, #0x200
    2fd4:	add	x0, x0, #0x100
    2fd8:	lsr	w6, w6, #24
    2fdc:	ldr	w5, [x3, x4, lsl #2]
    2fe0:	ldr	w8, [x3, x0, lsl #2]
    2fe4:	ldr	w4, [x3, x6, lsl #2]
    2fe8:	ldr	w0, [x9, #3072]
    2fec:	eor	w5, w5, w8
    2ff0:	eor	w0, w0, w4
    2ff4:	eor	w5, w5, w0
    2ff8:	eor	w5, w5, w12
    2ffc:	ubfx	x4, x5, #8, #8
    3000:	ubfx	x0, x5, #16, #8
    3004:	add	x8, x3, w5, uxtb #2
    3008:	add	x0, x0, #0x100
    300c:	add	x4, x4, #0x200
    3010:	lsr	w5, w5, #24
    3014:	ldr	w6, [x3, x0, lsl #2]
    3018:	ldr	w5, [x3, x5, lsl #2]
    301c:	ldr	w0, [x8, #3072]
    3020:	ldr	w4, [x3, x4, lsl #2]
    3024:	eor	w0, w0, w5
    3028:	eor	w4, w4, w6
    302c:	eor	w4, w4, w0
    3030:	eor	w4, w4, w11
    3034:	ubfx	x0, x4, #8, #8
    3038:	ubfx	x5, x4, #16, #8
    303c:	add	x8, x3, w4, uxtb #2
    3040:	add	x5, x5, #0x100
    3044:	lsr	w4, w4, #24
    3048:	add	x0, x0, #0x200
    304c:	ldr	w6, [x3, x5, lsl #2]
    3050:	ldr	w0, [x3, x0, lsl #2]
    3054:	ldr	w5, [x3, x4, lsl #2]
    3058:	ldr	w4, [x8, #3072]
    305c:	eor	w0, w0, w6
    3060:	eor	w4, w4, w5
    3064:	eor	w0, w0, w4
    3068:	eor	w0, w0, w10
    306c:	ubfx	x6, x0, #8, #8
    3070:	ubfx	x5, x0, #16, #8
    3074:	add	x8, x3, w0, uxtb #2
    3078:	lsr	w4, w0, #24
    307c:	add	x6, x6, #0x200
    3080:	add	x5, x5, #0x100
    3084:	ldr	w0, [x3, x6, lsl #2]
    3088:	ldr	w5, [x3, x5, lsl #2]
    308c:	ldr	w6, [x3, x4, lsl #2]
    3090:	ldr	w4, [x8, #3072]
    3094:	eor	w0, w0, w5
    3098:	ldur	w5, [x1, #-4]
    309c:	eor	w4, w4, w6
    30a0:	eor	w0, w0, w4
    30a4:	eor	w0, w0, w5
    30a8:	ubfx	x4, x0, #8, #8
    30ac:	ubfx	x5, x0, #16, #8
    30b0:	add	x5, x5, #0x100
    30b4:	add	x9, x3, w0, uxtb #2
    30b8:	add	x4, x4, #0x200
    30bc:	lsr	w0, w0, #24
    30c0:	ldr	w8, [x3, x5, lsl #2]
    30c4:	ldr	w4, [x3, x4, lsl #2]
    30c8:	ldr	w6, [x3, x0, lsl #2]
    30cc:	ldr	w5, [x9, #3072]
    30d0:	eor	w0, w4, w8
    30d4:	eor	w4, w5, w6
    30d8:	eor	w4, w4, w0
    30dc:	b.ne	2f00 <crc32_z@@ZLIB_1.2.9+0x78>  // b.any
    30e0:	and	x2, x2, #0x1f
    30e4:	cmp	x2, #0x3
    30e8:	b.ls	318c <crc32_z@@ZLIB_1.2.9+0x304>  // b.plast
    30ec:	sub	x5, x2, #0x4
    30f0:	adrp	x3, e000 <gzclose_r@@ZLIB_1.2.3.5+0x448>
    30f4:	and	x5, x5, #0xfffffffffffffffc
    30f8:	add	x3, x3, #0x960
    30fc:	add	x5, x5, #0x4
    3100:	add	x5, x1, x5
    3104:	nop
    3108:	ldr	w0, [x1], #4
    310c:	eor	w4, w4, w0
    3110:	cmp	x1, x5
    3114:	ubfx	x6, x4, #8, #8
    3118:	ubfx	x0, x4, #16, #8
    311c:	add	x0, x0, #0x100
    3120:	add	x9, x3, w4, uxtb #2
    3124:	add	x6, x6, #0x200
    3128:	lsr	w4, w4, #24
    312c:	ldr	w8, [x3, x0, lsl #2]
    3130:	ldr	w7, [x3, x4, lsl #2]
    3134:	ldr	w6, [x3, x6, lsl #2]
    3138:	ldr	w0, [x9, #3072]
    313c:	eor	w4, w6, w8
    3140:	eor	w0, w0, w7
    3144:	eor	w4, w4, w0
    3148:	b.ne	3108 <crc32_z@@ZLIB_1.2.9+0x280>  // b.any
    314c:	and	x2, x2, #0x3
    3150:	cbz	x2, 2ed0 <crc32_z@@ZLIB_1.2.9+0x48>
    3154:	adrp	x3, e000 <gzclose_r@@ZLIB_1.2.3.5+0x448>
    3158:	add	x2, x5, x2
    315c:	add	x3, x3, #0x960
    3160:	ldrb	w0, [x5], #1
    3164:	eor	w0, w0, w4
    3168:	cmp	x5, x2
    316c:	and	x0, x0, #0xff
    3170:	ldr	w0, [x3, x0, lsl #2]
    3174:	eor	w4, w0, w4, lsr #8
    3178:	b.ne	3160 <crc32_z@@ZLIB_1.2.9+0x2d8>  // b.any
    317c:	mvn	w3, w4
    3180:	b	2ed4 <crc32_z@@ZLIB_1.2.9+0x4c>
    3184:	mov	x0, #0x0                   	// #0
    3188:	ret
    318c:	mov	x5, x1
    3190:	b	3150 <crc32_z@@ZLIB_1.2.9+0x2c8>
    3194:	nop

0000000000003198 <crc32@@Base>:
    3198:	mov	w2, w2
    319c:	b	23b0 <crc32_z@plt>

00000000000031a0 <crc32_combine@@ZLIB_1.2.2>:
    31a0:	b	2c08 <adler32_combine64@@ZLIB_1.2.3.3+0x8>
    31a4:	nop

00000000000031a8 <crc32_combine64@@ZLIB_1.2.3.3>:
    31a8:	b	2c08 <adler32_combine64@@ZLIB_1.2.3.3+0x8>
    31ac:	nop
    31b0:	ldr	w2, [x0, #132]
    31b4:	ldr	x1, [x0, #120]
    31b8:	sub	w5, w2, #0x1
    31bc:	mvn	x5, x5
    31c0:	ldr	w3, [x0, #80]
    31c4:	add	x2, x1, w2, uxtw #1
    31c8:	add	x5, x2, x5, lsl #1
    31cc:	nop
    31d0:	ldrh	w4, [x2, #-2]!
    31d4:	sub	w1, w4, w3
    31d8:	cmp	w3, w4
    31dc:	and	w1, w1, #0xffff
    31e0:	csel	w1, w1, wzr, ls  // ls = plast
    31e4:	strh	w1, [x2]
    31e8:	cmp	x2, x5
    31ec:	b.ne	31d0 <crc32_combine64@@ZLIB_1.2.3.3+0x28>  // b.any
    31f0:	ldr	x1, [x0, #112]
    31f4:	sub	w4, w3, #0x1
    31f8:	mvn	x4, x4
    31fc:	add	x1, x1, w3, uxtw #1
    3200:	add	x4, x1, x4, lsl #1
    3204:	nop
    3208:	ldrh	w2, [x1, #-2]!
    320c:	sub	w0, w2, w3
    3210:	cmp	w3, w2
    3214:	and	w0, w0, #0xffff
    3218:	csel	w0, w0, wzr, ls  // ls = plast
    321c:	strh	w0, [x1]
    3220:	cmp	x1, x4
    3224:	b.ne	3208 <crc32_combine64@@ZLIB_1.2.3.3+0x60>  // b.any
    3228:	ret
    322c:	nop
    3230:	ldp	w16, w7, [x0, #180]
    3234:	mov	w18, #0x102                 	// #258
    3238:	ldr	w2, [x0, #172]
    323c:	ldr	x8, [x0, #96]
    3240:	mov	w14, w2
    3244:	ldr	w3, [x0, #80]
    3248:	add	w9, w2, #0x106
    324c:	ldp	w5, w17, [x0, #204]
    3250:	add	x13, x8, x14
    3254:	ldr	w6, [x0, #188]
    3258:	sub	w10, w3, #0x106
    325c:	cmp	w2, w10
    3260:	sub	w9, w9, w3
    3264:	add	x4, x13, w7, sxtw
    3268:	csel	w9, w9, wzr, hi  // hi = pmore
    326c:	lsr	w2, w6, #2
    3270:	cmp	w7, w5
    3274:	csel	w6, w2, w6, cs  // cs = hs, nlast
    3278:	add	x14, x14, #0x102
    327c:	cmp	w16, w17
    3280:	ldr	w12, [x0, #88]
    3284:	ldurb	w15, [x4, #-1]
    3288:	csel	w17, w17, w16, cs  // cs = hs, nlast
    328c:	ldrb	w10, [x13, w7, sxtw]
    3290:	add	x14, x8, x14
    3294:	ldr	x11, [x0, #112]
    3298:	b	32b4 <crc32_combine64@@ZLIB_1.2.3.3+0x10c>
    329c:	and	w1, w1, w12
    32a0:	ldrh	w1, [x11, x1, lsl #1]
    32a4:	cmp	w9, w1
    32a8:	b.cs	33c8 <crc32_combine64@@ZLIB_1.2.3.3+0x220>  // b.hs, b.nlast
    32ac:	subs	w6, w6, #0x1
    32b0:	b.eq	33c8 <crc32_combine64@@ZLIB_1.2.3.3+0x220>  // b.none
    32b4:	mov	w4, w1
    32b8:	sxtw	x3, w7
    32bc:	add	x2, x8, x4
    32c0:	ldrb	w5, [x2, w7, sxtw]
    32c4:	cmp	w5, w10
    32c8:	b.ne	329c <crc32_combine64@@ZLIB_1.2.3.3+0xf4>  // b.any
    32cc:	add	x3, x2, x3
    32d0:	ldurb	w3, [x3, #-1]
    32d4:	cmp	w3, w15
    32d8:	b.ne	329c <crc32_combine64@@ZLIB_1.2.3.3+0xf4>  // b.any
    32dc:	ldrb	w4, [x8, x4]
    32e0:	ldrb	w3, [x13]
    32e4:	cmp	w4, w3
    32e8:	b.ne	329c <crc32_combine64@@ZLIB_1.2.3.3+0xf4>  // b.any
    32ec:	ldrb	w4, [x2, #1]
    32f0:	ldrb	w3, [x13, #1]
    32f4:	cmp	w4, w3
    32f8:	b.ne	329c <crc32_combine64@@ZLIB_1.2.3.3+0xf4>  // b.any
    32fc:	add	x2, x2, #0x2
    3300:	add	x3, x13, #0x2
    3304:	nop
    3308:	ldrb	w5, [x3, #1]
    330c:	ldrb	w4, [x2, #1]
    3310:	cmp	w5, w4
    3314:	b.ne	33d4 <crc32_combine64@@ZLIB_1.2.3.3+0x22c>  // b.any
    3318:	ldrb	w5, [x3, #2]
    331c:	ldrb	w4, [x2, #2]
    3320:	cmp	w5, w4
    3324:	b.ne	33dc <crc32_combine64@@ZLIB_1.2.3.3+0x234>  // b.any
    3328:	ldrb	w5, [x3, #3]
    332c:	ldrb	w4, [x2, #3]
    3330:	cmp	w5, w4
    3334:	b.ne	33e4 <crc32_combine64@@ZLIB_1.2.3.3+0x23c>  // b.any
    3338:	ldrb	w5, [x3, #4]
    333c:	ldrb	w4, [x2, #4]
    3340:	cmp	w5, w4
    3344:	b.ne	33ec <crc32_combine64@@ZLIB_1.2.3.3+0x244>  // b.any
    3348:	ldrb	w5, [x3, #5]
    334c:	ldrb	w4, [x2, #5]
    3350:	cmp	w5, w4
    3354:	b.ne	33fc <crc32_combine64@@ZLIB_1.2.3.3+0x254>  // b.any
    3358:	ldrb	w5, [x3, #6]
    335c:	ldrb	w4, [x2, #6]
    3360:	cmp	w5, w4
    3364:	b.ne	33f4 <crc32_combine64@@ZLIB_1.2.3.3+0x24c>  // b.any
    3368:	ldrb	w5, [x3, #7]
    336c:	ldrb	w4, [x2, #7]
    3370:	cmp	w5, w4
    3374:	b.ne	3404 <crc32_combine64@@ZLIB_1.2.3.3+0x25c>  // b.any
    3378:	ldrb	w5, [x3, #8]!
    337c:	ldrb	w4, [x2, #8]!
    3380:	cmp	w5, w4
    3384:	ccmp	x14, x3, #0x0, eq  // eq = none
    3388:	b.hi	3308 <crc32_combine64@@ZLIB_1.2.3.3+0x160>  // b.pmore
    338c:	sub	x3, x14, x3
    3390:	sub	w3, w18, w3
    3394:	cmp	w7, w3
    3398:	b.ge	329c <crc32_combine64@@ZLIB_1.2.3.3+0xf4>  // b.tcont
    339c:	str	w1, [x0, #176]
    33a0:	cmp	w3, w17
    33a4:	b.ge	340c <crc32_combine64@@ZLIB_1.2.3.3+0x264>  // b.tcont
    33a8:	and	w1, w1, w12
    33ac:	add	x2, x13, w3, sxtw
    33b0:	ldrb	w10, [x13, w3, sxtw]
    33b4:	mov	w7, w3
    33b8:	ldrh	w1, [x11, x1, lsl #1]
    33bc:	ldurb	w15, [x2, #-1]
    33c0:	cmp	w9, w1
    33c4:	b.cc	32ac <crc32_combine64@@ZLIB_1.2.3.3+0x104>  // b.lo, b.ul, b.last
    33c8:	cmp	w7, w16
    33cc:	csel	w0, w7, w16, ls  // ls = plast
    33d0:	ret
    33d4:	add	x3, x3, #0x1
    33d8:	b	338c <crc32_combine64@@ZLIB_1.2.3.3+0x1e4>
    33dc:	add	x3, x3, #0x2
    33e0:	b	338c <crc32_combine64@@ZLIB_1.2.3.3+0x1e4>
    33e4:	add	x3, x3, #0x3
    33e8:	b	338c <crc32_combine64@@ZLIB_1.2.3.3+0x1e4>
    33ec:	add	x3, x3, #0x4
    33f0:	b	338c <crc32_combine64@@ZLIB_1.2.3.3+0x1e4>
    33f4:	add	x3, x3, #0x6
    33f8:	b	338c <crc32_combine64@@ZLIB_1.2.3.3+0x1e4>
    33fc:	add	x3, x3, #0x5
    3400:	b	338c <crc32_combine64@@ZLIB_1.2.3.3+0x1e4>
    3404:	add	x3, x3, #0x7
    3408:	b	338c <crc32_combine64@@ZLIB_1.2.3.3+0x1e4>
    340c:	mov	w7, w3
    3410:	b	33c8 <crc32_combine64@@ZLIB_1.2.3.3+0x220>
    3414:	nop
    3418:	stp	x29, x30, [sp, #-48]!
    341c:	mov	x29, sp
    3420:	stp	x19, x20, [sp, #16]
    3424:	mov	x20, x0
    3428:	ldr	w0, [x0, #8]
    342c:	cmp	w0, w2
    3430:	csel	w19, w0, w2, ls  // ls = plast
    3434:	cbnz	w19, 3448 <crc32_combine64@@ZLIB_1.2.3.3+0x2a0>
    3438:	mov	w0, w19
    343c:	ldp	x19, x20, [sp, #16]
    3440:	ldp	x29, x30, [sp], #48
    3444:	ret
    3448:	mov	x3, x1
    344c:	sub	w0, w0, w19
    3450:	ldr	x1, [x20]
    3454:	str	x21, [sp, #32]
    3458:	str	w0, [x20, #8]
    345c:	mov	w21, w19
    3460:	mov	x0, x3
    3464:	mov	x2, x21
    3468:	bl	23a0 <memcpy@plt>
    346c:	mov	x3, x0
    3470:	ldr	x0, [x20, #56]
    3474:	ldr	w0, [x0, #48]
    3478:	cmp	w0, #0x1
    347c:	b.eq	34b4 <crc32_combine64@@ZLIB_1.2.3.3+0x30c>  // b.none
    3480:	cmp	w0, #0x2
    3484:	b.eq	34cc <crc32_combine64@@ZLIB_1.2.3.3+0x324>  // b.none
    3488:	ldr	x0, [x20]
    348c:	ldr	x2, [x20, #16]
    3490:	add	x0, x0, x21
    3494:	add	x2, x2, x21
    3498:	ldr	x21, [sp, #32]
    349c:	str	x0, [x20]
    34a0:	str	x2, [x20, #16]
    34a4:	mov	w0, w19
    34a8:	ldp	x19, x20, [sp, #16]
    34ac:	ldp	x29, x30, [sp], #48
    34b0:	ret
    34b4:	ldr	x0, [x20, #96]
    34b8:	mov	x1, x3
    34bc:	mov	w2, w19
    34c0:	bl	2560 <adler32@plt>
    34c4:	str	x0, [x20, #96]
    34c8:	b	3488 <crc32_combine64@@ZLIB_1.2.3.3+0x2e0>
    34cc:	ldr	x0, [x20, #96]
    34d0:	mov	x1, x3
    34d4:	mov	w2, w19
    34d8:	bl	2430 <crc32@plt>
    34dc:	str	x0, [x20, #96]
    34e0:	b	3488 <crc32_combine64@@ZLIB_1.2.3.3+0x2e0>
    34e4:	nop
    34e8:	stp	x29, x30, [sp, #-64]!
    34ec:	mov	x29, sp
    34f0:	stp	x19, x20, [sp, #16]
    34f4:	mov	x19, x0
    34f8:	ldr	w20, [x0, #80]
    34fc:	ldr	w4, [x0, #180]
    3500:	mov	w0, w20
    3504:	stp	x21, x22, [sp, #32]
    3508:	sub	w21, w20, #0x106
    350c:	mov	w22, w20
    3510:	str	x23, [sp, #48]
    3514:	b	3574 <crc32_combine64@@ZLIB_1.2.3.3+0x3cc>
    3518:	ldr	x0, [x19]
    351c:	ldr	w1, [x0, #8]
    3520:	cbz	w1, 35e0 <crc32_combine64@@ZLIB_1.2.3.3+0x438>
    3524:	ldr	w4, [x19, #180]
    3528:	mov	w2, w23
    352c:	ldr	w3, [x19, #172]
    3530:	ldr	x1, [x19, #96]
    3534:	add	x3, x3, x4
    3538:	add	x1, x1, x3
    353c:	bl	3418 <crc32_combine64@@ZLIB_1.2.3.3+0x270>
    3540:	ldr	w2, [x19, #180]
    3544:	ldr	w1, [x19, #5932]
    3548:	add	w4, w0, w2
    354c:	str	w4, [x19, #180]
    3550:	add	w0, w4, w1
    3554:	cmp	w0, #0x2
    3558:	b.hi	3624 <crc32_combine64@@ZLIB_1.2.3.3+0x47c>  // b.pmore
    355c:	cmp	w4, #0x105
    3560:	b.hi	35e0 <crc32_combine64@@ZLIB_1.2.3.3+0x438>  // b.pmore
    3564:	ldr	x0, [x19]
    3568:	ldr	w0, [x0, #8]
    356c:	cbz	w0, 35e0 <crc32_combine64@@ZLIB_1.2.3.3+0x438>
    3570:	ldr	w0, [x19, #80]
    3574:	ldr	x1, [x19, #104]
    3578:	add	w0, w21, w0
    357c:	ldr	w2, [x19, #172]
    3580:	sub	w23, w1, w2
    3584:	cmp	w2, w0
    3588:	sub	w23, w23, w4
    358c:	add	w2, w2, w20
    3590:	b.cc	3518 <crc32_combine64@@ZLIB_1.2.3.3+0x370>  // b.lo, b.ul, b.last
    3594:	ldr	x0, [x19, #96]
    3598:	sub	w4, w4, w1
    359c:	add	w2, w4, w2
    35a0:	add	w23, w23, w20
    35a4:	add	x1, x0, x22
    35a8:	bl	23a0 <memcpy@plt>
    35ac:	ldp	w2, w1, [x19, #172]
    35b0:	mov	x0, x19
    35b4:	ldr	x3, [x19, #152]
    35b8:	sub	w1, w1, w20
    35bc:	sub	w2, w2, w20
    35c0:	stp	w2, w1, [x19, #172]
    35c4:	sub	x3, x3, x22
    35c8:	str	x3, [x19, #152]
    35cc:	bl	31b0 <crc32_combine64@@ZLIB_1.2.3.3+0x8>
    35d0:	ldr	x0, [x19]
    35d4:	ldr	w1, [x0, #8]
    35d8:	cbnz	w1, 3524 <crc32_combine64@@ZLIB_1.2.3.3+0x37c>
    35dc:	nop
    35e0:	ldr	x1, [x19, #104]
    35e4:	ldr	x0, [x19, #5944]
    35e8:	cmp	x0, x1
    35ec:	b.cs	3610 <crc32_combine64@@ZLIB_1.2.3.3+0x468>  // b.hs, b.nlast
    35f0:	ldr	w20, [x19, #172]
    35f4:	ldr	w21, [x19, #180]
    35f8:	add	x21, x20, x21
    35fc:	cmp	x0, x21
    3600:	b.cc	36b8 <crc32_combine64@@ZLIB_1.2.3.3+0x510>  // b.lo, b.ul, b.last
    3604:	add	x2, x21, #0x102
    3608:	cmp	x0, x2
    360c:	b.cc	36f8 <crc32_combine64@@ZLIB_1.2.3.3+0x550>  // b.lo, b.ul, b.last
    3610:	ldp	x19, x20, [sp, #16]
    3614:	ldp	x21, x22, [sp, #32]
    3618:	ldr	x23, [sp, #48]
    361c:	ldp	x29, x30, [sp], #64
    3620:	ret
    3624:	ldr	w9, [x19, #172]
    3628:	ldr	x10, [x19, #96]
    362c:	sub	w1, w9, w1
    3630:	add	w0, w1, #0x1
    3634:	ldp	w7, w8, [x19, #140]
    3638:	ldrb	w2, [x10, w1, uxtw]
    363c:	str	w2, [x19, #128]
    3640:	ldrb	w0, [x10, w0, uxtw]
    3644:	lsl	w2, w2, w8
    3648:	eor	w0, w0, w2
    364c:	and	w0, w0, w7
    3650:	str	w0, [x19, #128]
    3654:	b	36a8 <crc32_combine64@@ZLIB_1.2.3.3+0x500>
    3658:	ldr	w2, [x19, #128]
    365c:	ldrb	w3, [x10, w0, uxtw]
    3660:	ldp	x6, x5, [x19, #112]
    3664:	lsl	w2, w2, w8
    3668:	eor	w3, w3, w2
    366c:	ldr	w0, [x19, #88]
    3670:	and	w3, w3, w7
    3674:	str	w3, [x19, #128]
    3678:	and	w0, w1, w0
    367c:	ubfiz	x2, x3, #1, #32
    3680:	ldrh	w3, [x5, x2]
    3684:	strh	w3, [x6, x0, lsl #1]
    3688:	strh	w1, [x5, x2]
    368c:	add	w1, w1, #0x1
    3690:	sub	w0, w4, w1
    3694:	sub	w2, w9, w1
    3698:	str	w2, [x19, #5932]
    369c:	add	w0, w0, w9
    36a0:	cmp	w0, #0x2
    36a4:	b.ls	355c <crc32_combine64@@ZLIB_1.2.3.3+0x3b4>  // b.plast
    36a8:	add	w0, w1, #0x2
    36ac:	cmp	w1, w9
    36b0:	b.ne	3658 <crc32_combine64@@ZLIB_1.2.3.3+0x4b0>  // b.any
    36b4:	b	355c <crc32_combine64@@ZLIB_1.2.3.3+0x3b4>
    36b8:	sub	x20, x1, x21
    36bc:	mov	x2, #0x102                 	// #258
    36c0:	cmp	x20, x2
    36c4:	mov	w1, #0x0                   	// #0
    36c8:	ldr	x0, [x19, #96]
    36cc:	csel	x20, x20, x2, ls  // ls = plast
    36d0:	mov	x2, x20
    36d4:	add	x20, x20, x21
    36d8:	add	x0, x0, x21
    36dc:	bl	24a0 <memset@plt>
    36e0:	str	x20, [x19, #5944]
    36e4:	ldp	x19, x20, [sp, #16]
    36e8:	ldp	x21, x22, [sp, #32]
    36ec:	ldr	x23, [sp, #48]
    36f0:	ldp	x29, x30, [sp], #64
    36f4:	ret
    36f8:	sub	x2, x21, x0
    36fc:	sub	x20, x1, x0
    3700:	add	x2, x2, #0x102
    3704:	mov	w1, #0x0                   	// #0
    3708:	ldr	x3, [x19, #96]
    370c:	cmp	x20, x2
    3710:	csel	x20, x20, x2, ls  // ls = plast
    3714:	mov	w2, w20
    3718:	add	x0, x3, x0
    371c:	bl	24a0 <memset@plt>
    3720:	ldr	x0, [x19, #5944]
    3724:	ldp	x21, x22, [sp, #32]
    3728:	add	x20, x0, x20
    372c:	str	x20, [x19, #5944]
    3730:	ldp	x19, x20, [sp, #16]
    3734:	ldr	x23, [sp, #48]
    3738:	ldp	x29, x30, [sp], #64
    373c:	ret
    3740:	stp	x29, x30, [sp, #-48]!
    3744:	mov	x29, sp
    3748:	stp	x21, x22, [sp, #32]
    374c:	ldr	x21, [x0, #56]
    3750:	stp	x19, x20, [sp, #16]
    3754:	mov	x19, x0
    3758:	mov	x0, x21
    375c:	bl	bad8 <inflateCodesUsed@@ZLIB_1.2.9+0x17e8>
    3760:	ldr	x20, [x21, #40]
    3764:	ldr	w0, [x19, #32]
    3768:	cmp	w0, w20
    376c:	csel	w20, w0, w20, ls  // ls = plast
    3770:	cbnz	w20, 3784 <crc32_combine64@@ZLIB_1.2.3.3+0x5dc>
    3774:	ldp	x19, x20, [sp, #16]
    3778:	ldp	x21, x22, [sp, #32]
    377c:	ldp	x29, x30, [sp], #48
    3780:	ret
    3784:	ldr	x0, [x19, #24]
    3788:	mov	w22, w20
    378c:	ldr	x1, [x21, #32]
    3790:	mov	x2, x22
    3794:	bl	23a0 <memcpy@plt>
    3798:	ldr	x2, [x19, #24]
    379c:	ldr	x3, [x21, #32]
    37a0:	add	x2, x2, x22
    37a4:	ldr	x1, [x19, #40]
    37a8:	str	x2, [x19, #24]
    37ac:	ldr	w0, [x19, #32]
    37b0:	add	x3, x3, x22
    37b4:	ldr	x2, [x21, #40]
    37b8:	str	x3, [x21, #32]
    37bc:	add	x1, x1, x22
    37c0:	sub	w0, w0, w20
    37c4:	str	w0, [x19, #32]
    37c8:	sub	x22, x2, x22
    37cc:	str	x1, [x19, #40]
    37d0:	str	x22, [x21, #40]
    37d4:	cbnz	x22, 3774 <crc32_combine64@@ZLIB_1.2.3.3+0x5cc>
    37d8:	ldr	x0, [x21, #16]
    37dc:	str	x0, [x21, #32]
    37e0:	ldp	x19, x20, [sp, #16]
    37e4:	ldp	x21, x22, [sp, #32]
    37e8:	ldp	x29, x30, [sp], #48
    37ec:	ret
    37f0:	stp	x29, x30, [sp, #-64]!
    37f4:	mov	x29, sp
    37f8:	ldr	w3, [x0, #180]
    37fc:	stp	x19, x20, [sp, #16]
    3800:	mov	x19, x0
    3804:	mov	w20, #0x1                   	// #1
    3808:	stp	x21, x22, [sp, #32]
    380c:	adrp	x22, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    3810:	mov	w21, w1
    3814:	add	x22, x22, #0x68
    3818:	str	x23, [sp, #48]
    381c:	adrp	x23, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    3820:	add	x23, x23, #0xe78
    3824:	nop
    3828:	cmp	w3, #0x105
    382c:	b.ls	3970 <crc32_combine64@@ZLIB_1.2.3.3+0x7c8>  // b.plast
    3830:	ldr	w3, [x19, #160]
    3834:	ldp	w2, w4, [x19, #172]
    3838:	add	w5, w2, #0x2
    383c:	ldr	x0, [x19, #96]
    3840:	mov	w8, #0x2                   	// #2
    3844:	ldr	w1, [x19, #128]
    3848:	ldr	w6, [x19, #144]
    384c:	ldrb	w0, [x0, w5, uxtw]
    3850:	ldr	w5, [x19, #140]
    3854:	lsl	w1, w1, w6
    3858:	eor	w0, w0, w1
    385c:	ldp	x9, x7, [x19, #112]
    3860:	and	w0, w0, w5
    3864:	ldr	w5, [x19, #88]
    3868:	ubfiz	x6, x0, #1, #32
    386c:	and	w5, w2, w5
    3870:	ldrh	w1, [x7, x6]
    3874:	str	w0, [x19, #128]
    3878:	strh	w1, [x9, x5, lsl #1]
    387c:	strh	w2, [x7, x6]
    3880:	stp	w8, w4, [x19, #160]
    3884:	str	w3, [x19, #184]
    3888:	cbz	w1, 38b0 <crc32_combine64@@ZLIB_1.2.3.3+0x708>
    388c:	ldr	w0, [x19, #192]
    3890:	cmp	w0, w3
    3894:	b.ls	38b0 <crc32_combine64@@ZLIB_1.2.3.3+0x708>  // b.plast
    3898:	ldr	w0, [x19, #80]
    389c:	sub	w4, w2, w1
    38a0:	sub	w0, w0, #0x106
    38a4:	cmp	w4, w0
    38a8:	b.ls	3ba4 <crc32_combine64@@ZLIB_1.2.3.3+0x9fc>  // b.plast
    38ac:	nop
    38b0:	cmp	w3, #0x2
    38b4:	b.ls	38c4 <crc32_combine64@@ZLIB_1.2.3.3+0x71c>  // b.plast
    38b8:	ldr	w0, [x19, #160]
    38bc:	cmp	w0, w3
    38c0:	b.ls	3a28 <crc32_combine64@@ZLIB_1.2.3.3+0x880>  // b.plast
    38c4:	ldr	w0, [x19, #168]
    38c8:	cbz	w0, 3954 <crc32_combine64@@ZLIB_1.2.3.3+0x7ac>
    38cc:	ldr	x3, [x19, #96]
    38d0:	sub	w2, w2, #0x1
    38d4:	ldr	w0, [x19, #5900]
    38d8:	ldr	x1, [x19, #5904]
    38dc:	add	w4, w0, #0x1
    38e0:	ldrb	w2, [x3, w2, uxtw]
    38e4:	ldr	x3, [x19, #5888]
    38e8:	strh	wzr, [x1, w0, uxtw #1]
    38ec:	add	x1, x19, w2, uxtb #2
    38f0:	str	w4, [x19, #5900]
    38f4:	strb	w2, [x3, w0, uxtw]
    38f8:	ldrh	w0, [x1, #212]
    38fc:	add	w0, w0, #0x1
    3900:	strh	w0, [x1, #212]
    3904:	ldr	w0, [x19, #5896]
    3908:	ldr	w1, [x19, #5900]
    390c:	sub	w0, w0, #0x1
    3910:	cmp	w1, w0
    3914:	b.eq	39ac <crc32_combine64@@ZLIB_1.2.3.3+0x804>  // b.none
    3918:	ldr	x1, [x19]
    391c:	ldr	w0, [x19, #172]
    3920:	ldr	w3, [x19, #180]
    3924:	ldr	w1, [x1, #32]
    3928:	add	w0, w0, #0x1
    392c:	sub	w3, w3, #0x1
    3930:	str	w0, [x19, #172]
    3934:	str	w3, [x19, #180]
    3938:	cbnz	w1, 3828 <crc32_combine64@@ZLIB_1.2.3.3+0x680>
    393c:	mov	w0, #0x0                   	// #0
    3940:	ldp	x19, x20, [sp, #16]
    3944:	ldp	x21, x22, [sp, #32]
    3948:	ldr	x23, [sp, #48]
    394c:	ldp	x29, x30, [sp], #64
    3950:	ret
    3954:	ldr	w3, [x19, #180]
    3958:	add	w2, w2, #0x1
    395c:	stp	w20, w2, [x19, #168]
    3960:	sub	w3, w3, #0x1
    3964:	str	w3, [x19, #180]
    3968:	cmp	w3, #0x105
    396c:	b.hi	3830 <crc32_combine64@@ZLIB_1.2.3.3+0x688>  // b.pmore
    3970:	mov	x0, x19
    3974:	bl	34e8 <crc32_combine64@@ZLIB_1.2.3.3+0x340>
    3978:	ldr	w0, [x19, #180]
    397c:	cmp	w0, #0x105
    3980:	b.hi	3830 <crc32_combine64@@ZLIB_1.2.3.3+0x688>  // b.pmore
    3984:	cbz	w21, 393c <crc32_combine64@@ZLIB_1.2.3.3+0x794>
    3988:	cbz	w0, 3bc4 <crc32_combine64@@ZLIB_1.2.3.3+0xa1c>
    398c:	ldr	w3, [x19, #160]
    3990:	cmp	w0, #0x2
    3994:	ldp	w2, w4, [x19, #172]
    3998:	b.hi	3838 <crc32_combine64@@ZLIB_1.2.3.3+0x690>  // b.pmore
    399c:	mov	w0, #0x2                   	// #2
    39a0:	stp	w0, w4, [x19, #160]
    39a4:	str	w3, [x19, #184]
    39a8:	b	38b0 <crc32_combine64@@ZLIB_1.2.3.3+0x708>
    39ac:	ldr	x2, [x19, #152]
    39b0:	mov	x1, #0x0                   	// #0
    39b4:	tbnz	x2, #63, 39c0 <crc32_combine64@@ZLIB_1.2.3.3+0x818>
    39b8:	ldr	x1, [x19, #96]
    39bc:	add	x1, x1, w2, uxtw
    39c0:	ldr	w4, [x19, #172]
    39c4:	mov	x0, x19
    39c8:	mov	w3, #0x0                   	// #0
    39cc:	sub	x2, x4, x2
    39d0:	bl	bbc0 <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
    39d4:	ldr	w1, [x19, #172]
    39d8:	ldr	x0, [x19]
    39dc:	str	x1, [x19, #152]
    39e0:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    39e4:	b	3918 <crc32_combine64@@ZLIB_1.2.3.3+0x770>
    39e8:	ldr	w1, [x19, #200]
    39ec:	ldr	w2, [x19, #172]
    39f0:	ldr	w3, [x19, #184]
    39f4:	cmp	w1, #0x1
    39f8:	b.eq	3a14 <crc32_combine64@@ZLIB_1.2.3.3+0x86c>  // b.none
    39fc:	cmp	w0, #0x3
    3a00:	b.ne	38b0 <crc32_combine64@@ZLIB_1.2.3.3+0x708>  // b.any
    3a04:	ldr	w0, [x19, #176]
    3a08:	sub	w0, w2, w0
    3a0c:	cmp	w0, #0x1, lsl #12
    3a10:	b.ls	38b0 <crc32_combine64@@ZLIB_1.2.3.3+0x708>  // b.plast
    3a14:	mov	w0, #0x2                   	// #2
    3a18:	str	w0, [x19, #160]
    3a1c:	cmp	w3, w0
    3a20:	b.ls	38c4 <crc32_combine64@@ZLIB_1.2.3.3+0x71c>  // b.plast
    3a24:	nop
    3a28:	sub	w3, w3, #0x3
    3a2c:	ldr	w5, [x19, #5900]
    3a30:	and	w3, w3, #0xff
    3a34:	ldr	w0, [x19, #164]
    3a38:	ldr	x8, [x19, #5904]
    3a3c:	sub	w0, w2, w0
    3a40:	ldrb	w1, [x23, w3, sxtw]
    3a44:	and	w0, w0, #0xffff
    3a48:	ldr	x6, [x19, #5888]
    3a4c:	sub	w9, w0, #0x1
    3a50:	ldr	w4, [x19, #180]
    3a54:	add	x1, x19, x1, lsl #2
    3a58:	strh	w9, [x8, w5, uxtw #1]
    3a5c:	add	w7, w5, #0x1
    3a60:	str	w7, [x19, #5900]
    3a64:	sub	w0, w0, #0x2
    3a68:	strb	w3, [x6, w5, uxtw]
    3a6c:	and	w0, w0, #0xffff
    3a70:	sub	w4, w4, #0x3
    3a74:	cmp	w0, #0xff
    3a78:	ldrh	w3, [x1, #1240]
    3a7c:	add	w2, w4, w2
    3a80:	add	w3, w3, #0x1
    3a84:	strh	w3, [x1, #1240]
    3a88:	b.ls	3a94 <crc32_combine64@@ZLIB_1.2.3.3+0x8ec>  // b.plast
    3a8c:	lsr	w0, w0, #7
    3a90:	add	w0, w0, #0x100
    3a94:	ldrb	w0, [x22, w0, sxtw]
    3a98:	mov	w10, #0xfffffffe            	// #-2
    3a9c:	add	x0, x19, w0, sxtw #2
    3aa0:	ldrh	w1, [x0, #2504]
    3aa4:	add	w1, w1, #0x1
    3aa8:	strh	w1, [x0, #2504]
    3aac:	ldp	w3, w1, [x19, #180]
    3ab0:	ldr	w6, [x19, #172]
    3ab4:	ldr	w13, [x19, #5896]
    3ab8:	add	w3, w3, #0x1
    3abc:	add	w0, w6, #0x1
    3ac0:	ldr	w14, [x19, #5900]
    3ac4:	add	w6, w1, w6
    3ac8:	sub	w13, w13, #0x1
    3acc:	sub	w9, w6, #0x1
    3ad0:	sub	w3, w3, w1
    3ad4:	add	w1, w1, w10
    3ad8:	stp	w3, w1, [x19, #180]
    3adc:	nop
    3ae0:	str	w0, [x19, #172]
    3ae4:	sub	w4, w10, w0
    3ae8:	add	w7, w0, #0x2
    3aec:	add	w4, w4, w6
    3af0:	cmp	w2, w0
    3af4:	b.cc	3b38 <crc32_combine64@@ZLIB_1.2.3.3+0x990>  // b.lo, b.ul, b.last
    3af8:	ldr	x1, [x19, #96]
    3afc:	ldr	w5, [x19, #128]
    3b00:	ldr	w8, [x19, #144]
    3b04:	ldrb	w1, [x1, w7, uxtw]
    3b08:	ldr	w7, [x19, #140]
    3b0c:	lsl	w5, w5, w8
    3b10:	eor	w1, w1, w5
    3b14:	ldp	x11, x8, [x19, #112]
    3b18:	and	w1, w1, w7
    3b1c:	ldr	w5, [x19, #88]
    3b20:	ubfiz	x7, x1, #1, #32
    3b24:	and	w5, w0, w5
    3b28:	ldrh	w12, [x8, x7]
    3b2c:	str	w1, [x19, #128]
    3b30:	strh	w12, [x11, x5, lsl #1]
    3b34:	strh	w0, [x8, x7]
    3b38:	str	w4, [x19, #184]
    3b3c:	add	w0, w0, #0x1
    3b40:	cmp	w9, w0
    3b44:	b.ne	3ae0 <crc32_combine64@@ZLIB_1.2.3.3+0x938>  // b.any
    3b48:	mov	w0, #0x2                   	// #2
    3b4c:	str	w0, [x19, #160]
    3b50:	stp	wzr, w9, [x19, #168]
    3b54:	cmp	w14, w13
    3b58:	b.ne	3828 <crc32_combine64@@ZLIB_1.2.3.3+0x680>  // b.any
    3b5c:	ldr	x2, [x19, #152]
    3b60:	mov	x1, #0x0                   	// #0
    3b64:	tbnz	x2, #63, 3b70 <crc32_combine64@@ZLIB_1.2.3.3+0x9c8>
    3b68:	ldr	x1, [x19, #96]
    3b6c:	add	x1, x1, w2, uxtw
    3b70:	sub	x2, x9, x2
    3b74:	mov	x0, x19
    3b78:	mov	w3, #0x0                   	// #0
    3b7c:	bl	bbc0 <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
    3b80:	ldr	w1, [x19, #172]
    3b84:	ldr	x0, [x19]
    3b88:	str	x1, [x19, #152]
    3b8c:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    3b90:	ldr	x0, [x19]
    3b94:	ldr	w0, [x0, #32]
    3b98:	cbz	w0, 393c <crc32_combine64@@ZLIB_1.2.3.3+0x794>
    3b9c:	ldr	w3, [x19, #180]
    3ba0:	b	3828 <crc32_combine64@@ZLIB_1.2.3.3+0x680>
    3ba4:	mov	x0, x19
    3ba8:	bl	3230 <crc32_combine64@@ZLIB_1.2.3.3+0x88>
    3bac:	str	w0, [x19, #160]
    3bb0:	cmp	w0, #0x5
    3bb4:	b.ls	39e8 <crc32_combine64@@ZLIB_1.2.3.3+0x840>  // b.plast
    3bb8:	ldr	w2, [x19, #172]
    3bbc:	ldr	w3, [x19, #184]
    3bc0:	b	38b0 <crc32_combine64@@ZLIB_1.2.3.3+0x708>
    3bc4:	ldp	w0, w3, [x19, #168]
    3bc8:	cbnz	w0, 3c4c <crc32_combine64@@ZLIB_1.2.3.3+0xaa4>
    3bcc:	cmp	w3, #0x2
    3bd0:	mov	w0, #0x2                   	// #2
    3bd4:	csel	w0, w3, w0, ls  // ls = plast
    3bd8:	str	w0, [x19, #5932]
    3bdc:	cmp	w21, #0x4
    3be0:	b.eq	3ca4 <crc32_combine64@@ZLIB_1.2.3.3+0xafc>  // b.none
    3be4:	ldr	w1, [x19, #5900]
    3be8:	mov	w0, #0x1                   	// #1
    3bec:	cbz	w1, 3940 <crc32_combine64@@ZLIB_1.2.3.3+0x798>
    3bf0:	ldr	x2, [x19, #152]
    3bf4:	mov	x1, #0x0                   	// #0
    3bf8:	tbnz	x2, #63, 3c04 <crc32_combine64@@ZLIB_1.2.3.3+0xa5c>
    3bfc:	ldr	x1, [x19, #96]
    3c00:	add	x1, x1, w2, uxtw
    3c04:	mov	w3, w3
    3c08:	mov	x0, x19
    3c0c:	sub	x2, x3, x2
    3c10:	mov	w3, #0x0                   	// #0
    3c14:	bl	bbc0 <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
    3c18:	ldr	w1, [x19, #172]
    3c1c:	ldr	x0, [x19]
    3c20:	str	x1, [x19, #152]
    3c24:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    3c28:	ldr	x0, [x19]
    3c2c:	ldp	x19, x20, [sp, #16]
    3c30:	ldr	w0, [x0, #32]
    3c34:	ldp	x21, x22, [sp, #32]
    3c38:	cmp	w0, #0x0
    3c3c:	cset	w0, ne  // ne = any
    3c40:	ldr	x23, [sp, #48]
    3c44:	ldp	x29, x30, [sp], #64
    3c48:	ret
    3c4c:	ldr	x2, [x19, #96]
    3c50:	sub	w3, w3, #0x1
    3c54:	ldr	w0, [x19, #5900]
    3c58:	ldr	x1, [x19, #5904]
    3c5c:	add	w4, w0, #0x1
    3c60:	ldrb	w2, [x2, w3, uxtw]
    3c64:	ldr	x3, [x19, #5888]
    3c68:	strh	wzr, [x1, w0, uxtw #1]
    3c6c:	add	x1, x19, w2, uxtb #2
    3c70:	str	w4, [x19, #5900]
    3c74:	strb	w2, [x3, w0, uxtw]
    3c78:	ldrh	w0, [x1, #212]
    3c7c:	add	w0, w0, #0x1
    3c80:	strh	w0, [x1, #212]
    3c84:	mov	w0, #0x2                   	// #2
    3c88:	str	wzr, [x19, #168]
    3c8c:	ldr	w3, [x19, #172]
    3c90:	cmp	w3, #0x2
    3c94:	csel	w0, w3, w0, ls  // ls = plast
    3c98:	str	w0, [x19, #5932]
    3c9c:	cmp	w21, #0x4
    3ca0:	b.ne	3be4 <crc32_combine64@@ZLIB_1.2.3.3+0xa3c>  // b.any
    3ca4:	ldr	x2, [x19, #152]
    3ca8:	mov	x1, #0x0                   	// #0
    3cac:	tbnz	x2, #63, 3cb8 <crc32_combine64@@ZLIB_1.2.3.3+0xb10>
    3cb0:	ldr	x1, [x19, #96]
    3cb4:	add	x1, x1, w2, uxtw
    3cb8:	mov	w3, w3
    3cbc:	mov	x0, x19
    3cc0:	sub	x2, x3, x2
    3cc4:	mov	w3, #0x1                   	// #1
    3cc8:	bl	bbc0 <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
    3ccc:	ldr	w1, [x19, #172]
    3cd0:	ldr	x0, [x19]
    3cd4:	str	x1, [x19, #152]
    3cd8:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    3cdc:	ldr	x0, [x19]
    3ce0:	ldp	x19, x20, [sp, #16]
    3ce4:	ldr	w0, [x0, #32]
    3ce8:	ldp	x21, x22, [sp, #32]
    3cec:	cmp	w0, #0x0
    3cf0:	cset	w0, ne  // ne = any
    3cf4:	add	w0, w0, #0x2
    3cf8:	ldr	x23, [sp, #48]
    3cfc:	ldp	x29, x30, [sp], #64
    3d00:	ret
    3d04:	nop
    3d08:	stp	x29, x30, [sp, #-48]!
    3d0c:	mov	x29, sp
    3d10:	stp	x19, x20, [sp, #16]
    3d14:	adrp	x20, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    3d18:	mov	x19, x0
    3d1c:	add	x20, x20, #0xe78
    3d20:	stp	x21, x22, [sp, #32]
    3d24:	adrp	x21, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    3d28:	mov	w22, w1
    3d2c:	add	x21, x21, #0x68
    3d30:	ldr	w1, [x19, #180]
    3d34:	nop
    3d38:	cmp	w1, #0x105
    3d3c:	b.ls	3ee8 <crc32_combine64@@ZLIB_1.2.3.3+0xd40>  // b.plast
    3d40:	ldr	w3, [x19, #172]
    3d44:	ldr	x0, [x19, #96]
    3d48:	add	w2, w3, #0x2
    3d4c:	ldr	w1, [x19, #128]
    3d50:	ldr	w4, [x19, #144]
    3d54:	ldrb	w0, [x0, w2, uxtw]
    3d58:	ldr	w2, [x19, #140]
    3d5c:	lsl	w1, w1, w4
    3d60:	eor	w0, w0, w1
    3d64:	ldp	x6, x5, [x19, #112]
    3d68:	and	w0, w0, w2
    3d6c:	ldr	w2, [x19, #88]
    3d70:	ubfiz	x4, x0, #1, #32
    3d74:	and	w2, w3, w2
    3d78:	ldrh	w1, [x5, x4]
    3d7c:	str	w0, [x19, #128]
    3d80:	strh	w1, [x6, x2, lsl #1]
    3d84:	strh	w3, [x5, x4]
    3d88:	cbz	w1, 3da0 <crc32_combine64@@ZLIB_1.2.3.3+0xbf8>
    3d8c:	ldr	w0, [x19, #80]
    3d90:	sub	w2, w3, w1
    3d94:	sub	w0, w0, #0x106
    3d98:	cmp	w2, w0
    3d9c:	b.ls	3f14 <crc32_combine64@@ZLIB_1.2.3.3+0xd6c>  // b.plast
    3da0:	ldr	w2, [x19, #5900]
    3da4:	ldr	w0, [x19, #160]
    3da8:	add	w5, w2, #0x1
    3dac:	cmp	w0, #0x2
    3db0:	ubfiz	x6, x2, #1, #32
    3db4:	ldr	x4, [x19, #5888]
    3db8:	ldr	x7, [x19, #5904]
    3dbc:	b.ls	3f40 <crc32_combine64@@ZLIB_1.2.3.3+0xd98>  // b.plast
    3dc0:	sub	w1, w0, #0x3
    3dc4:	ldr	w0, [x19, #176]
    3dc8:	and	w1, w1, #0xff
    3dcc:	sub	w0, w3, w0
    3dd0:	and	w0, w0, #0xffff
    3dd4:	strh	w0, [x7, x6]
    3dd8:	ldrb	w3, [x20, w1, sxtw]
    3ddc:	sub	w0, w0, #0x1
    3de0:	str	w5, [x19, #5900]
    3de4:	and	w0, w0, #0xffff
    3de8:	strb	w1, [x4, w2, uxtw]
    3dec:	cmp	w0, #0xff
    3df0:	add	x1, x19, x3, lsl #2
    3df4:	ldrh	w2, [x1, #1240]
    3df8:	add	w2, w2, #0x1
    3dfc:	strh	w2, [x1, #1240]
    3e00:	b.ls	3e0c <crc32_combine64@@ZLIB_1.2.3.3+0xc64>  // b.plast
    3e04:	lsr	w0, w0, #7
    3e08:	add	w0, w0, #0x100
    3e0c:	ldrb	w0, [x21, w0, sxtw]
    3e10:	add	x0, x19, w0, sxtw #2
    3e14:	ldrh	w1, [x0, #2504]
    3e18:	add	w1, w1, #0x1
    3e1c:	strh	w1, [x0, #2504]
    3e20:	ldr	w0, [x19, #5896]
    3e24:	ldr	w2, [x19, #160]
    3e28:	ldr	w1, [x19, #180]
    3e2c:	sub	w0, w0, #0x1
    3e30:	ldr	w4, [x19, #5900]
    3e34:	ldr	w3, [x19, #192]
    3e38:	sub	w1, w1, w2
    3e3c:	cmp	w0, w4
    3e40:	ldr	w0, [x19, #172]
    3e44:	str	w1, [x19, #180]
    3e48:	cset	w6, eq  // eq = none
    3e4c:	cmp	w2, w3
    3e50:	add	w3, w2, w0
    3e54:	ldp	w8, w9, [x19, #140]
    3e58:	ccmp	w1, #0x2, #0x0, ls  // ls = plast
    3e5c:	ldr	x7, [x19, #96]
    3e60:	b.hi	3f98 <crc32_combine64@@ZLIB_1.2.3.3+0xdf0>  // b.pmore
    3e64:	str	wzr, [x19, #160]
    3e68:	add	w0, w3, #0x1
    3e6c:	str	w3, [x19, #172]
    3e70:	ldrb	w2, [x7, w3, uxtw]
    3e74:	str	w2, [x19, #128]
    3e78:	ldrb	w0, [x7, w0, uxtw]
    3e7c:	lsl	w2, w2, w9
    3e80:	eor	w0, w0, w2
    3e84:	and	w0, w0, w8
    3e88:	str	w0, [x19, #128]
    3e8c:	cbz	w6, 3d38 <crc32_combine64@@ZLIB_1.2.3.3+0xb90>
    3e90:	ldr	x2, [x19, #152]
    3e94:	mov	x1, #0x0                   	// #0
    3e98:	tbnz	x2, #63, 3ea4 <crc32_combine64@@ZLIB_1.2.3.3+0xcfc>
    3e9c:	ldr	x1, [x19, #96]
    3ea0:	add	x1, x1, w2, uxtw
    3ea4:	ldr	w4, [x19, #172]
    3ea8:	mov	x0, x19
    3eac:	mov	w3, #0x0                   	// #0
    3eb0:	sub	x2, x4, x2
    3eb4:	bl	bbc0 <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
    3eb8:	ldr	w1, [x19, #172]
    3ebc:	ldr	x0, [x19]
    3ec0:	str	x1, [x19, #152]
    3ec4:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    3ec8:	ldr	x0, [x19]
    3ecc:	ldr	w0, [x0, #32]
    3ed0:	cbnz	w0, 3d30 <crc32_combine64@@ZLIB_1.2.3.3+0xb88>
    3ed4:	mov	w0, #0x0                   	// #0
    3ed8:	ldp	x19, x20, [sp, #16]
    3edc:	ldp	x21, x22, [sp, #32]
    3ee0:	ldp	x29, x30, [sp], #48
    3ee4:	ret
    3ee8:	mov	x0, x19
    3eec:	bl	34e8 <crc32_combine64@@ZLIB_1.2.3.3+0x340>
    3ef0:	ldr	w0, [x19, #180]
    3ef4:	cmp	w0, #0x105
    3ef8:	b.hi	3d40 <crc32_combine64@@ZLIB_1.2.3.3+0xb98>  // b.pmore
    3efc:	cbz	w22, 3ed4 <crc32_combine64@@ZLIB_1.2.3.3+0xd2c>
    3f00:	cbz	w0, 4004 <crc32_combine64@@ZLIB_1.2.3.3+0xe5c>
    3f04:	ldr	w3, [x19, #172]
    3f08:	cmp	w0, #0x2
    3f0c:	b.ls	3da0 <crc32_combine64@@ZLIB_1.2.3.3+0xbf8>  // b.plast
    3f10:	b	3d44 <crc32_combine64@@ZLIB_1.2.3.3+0xb9c>
    3f14:	mov	x0, x19
    3f18:	bl	3230 <crc32_combine64@@ZLIB_1.2.3.3+0x88>
    3f1c:	ldr	w2, [x19, #5900]
    3f20:	cmp	w0, #0x2
    3f24:	str	w0, [x19, #160]
    3f28:	ldr	w3, [x19, #172]
    3f2c:	add	w5, w2, #0x1
    3f30:	ubfiz	x6, x2, #1, #32
    3f34:	ldr	x4, [x19, #5888]
    3f38:	ldr	x7, [x19, #5904]
    3f3c:	b.hi	3dc0 <crc32_combine64@@ZLIB_1.2.3.3+0xc18>  // b.pmore
    3f40:	ldr	x0, [x19, #96]
    3f44:	ldrb	w0, [x0, w3, uxtw]
    3f48:	strh	wzr, [x7, x6]
    3f4c:	str	w5, [x19, #5900]
    3f50:	add	x1, x19, w0, uxtb #2
    3f54:	strb	w0, [x4, w2, uxtw]
    3f58:	ldrh	w0, [x1, #212]
    3f5c:	add	w0, w0, #0x1
    3f60:	strh	w0, [x1, #212]
    3f64:	ldr	w1, [x19, #5896]
    3f68:	ldr	w2, [x19, #5900]
    3f6c:	sub	w1, w1, #0x1
    3f70:	ldr	w0, [x19, #172]
    3f74:	cmp	w1, w2
    3f78:	ldr	w1, [x19, #180]
    3f7c:	add	w0, w0, #0x1
    3f80:	str	w0, [x19, #172]
    3f84:	sub	w1, w1, #0x1
    3f88:	str	w1, [x19, #180]
    3f8c:	cset	w6, eq  // eq = none
    3f90:	cbz	w6, 3d38 <crc32_combine64@@ZLIB_1.2.3.3+0xb90>
    3f94:	b	3e90 <crc32_combine64@@ZLIB_1.2.3.3+0xce8>
    3f98:	ldp	x13, x10, [x19, #112]
    3f9c:	sub	w2, w2, #0x1
    3fa0:	ldr	w14, [x19, #88]
    3fa4:	add	w0, w0, #0x1
    3fa8:	str	w2, [x19, #160]
    3fac:	ldr	w2, [x19, #128]
    3fb0:	add	w5, w0, #0x2
    3fb4:	str	w0, [x19, #172]
    3fb8:	lsl	w2, w2, w9
    3fbc:	and	w11, w14, w0
    3fc0:	mvn	w4, w0
    3fc4:	ldrb	w5, [x7, w5, uxtw]
    3fc8:	add	w4, w4, w3
    3fcc:	eor	w2, w5, w2
    3fd0:	and	w2, w2, w8
    3fd4:	ubfiz	x5, x2, #1, #32
    3fd8:	ldrh	w12, [x10, x5]
    3fdc:	str	w2, [x19, #128]
    3fe0:	strh	w12, [x13, x11, lsl #1]
    3fe4:	strh	w0, [x10, x5]
    3fe8:	add	w0, w0, #0x1
    3fec:	str	w4, [x19, #160]
    3ff0:	cmp	w0, w3
    3ff4:	b.ne	3fb0 <crc32_combine64@@ZLIB_1.2.3.3+0xe08>  // b.any
    3ff8:	str	w0, [x19, #172]
    3ffc:	cbz	w6, 3d38 <crc32_combine64@@ZLIB_1.2.3.3+0xb90>
    4000:	b	3e90 <crc32_combine64@@ZLIB_1.2.3.3+0xce8>
    4004:	ldr	w3, [x19, #172]
    4008:	mov	w0, #0x2                   	// #2
    400c:	cmp	w3, w0
    4010:	csel	w0, w3, w0, ls  // ls = plast
    4014:	str	w0, [x19, #5932]
    4018:	cmp	w22, #0x4
    401c:	b.eq	4084 <crc32_combine64@@ZLIB_1.2.3.3+0xedc>  // b.none
    4020:	ldr	w1, [x19, #5900]
    4024:	mov	w0, #0x1                   	// #1
    4028:	cbz	w1, 40d0 <crc32_combine64@@ZLIB_1.2.3.3+0xf28>
    402c:	ldr	x2, [x19, #152]
    4030:	mov	x1, #0x0                   	// #0
    4034:	tbnz	x2, #63, 4040 <crc32_combine64@@ZLIB_1.2.3.3+0xe98>
    4038:	ldr	x1, [x19, #96]
    403c:	add	x1, x1, w2, uxtw
    4040:	mov	w3, w3
    4044:	mov	x0, x19
    4048:	sub	x2, x3, x2
    404c:	mov	w3, #0x0                   	// #0
    4050:	bl	bbc0 <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
    4054:	ldr	w1, [x19, #172]
    4058:	ldr	x0, [x19]
    405c:	str	x1, [x19, #152]
    4060:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    4064:	ldr	x0, [x19]
    4068:	ldp	x19, x20, [sp, #16]
    406c:	ldr	w0, [x0, #32]
    4070:	ldp	x21, x22, [sp, #32]
    4074:	cmp	w0, #0x0
    4078:	cset	w0, ne  // ne = any
    407c:	ldp	x29, x30, [sp], #48
    4080:	ret
    4084:	ldr	x2, [x19, #152]
    4088:	mov	x1, #0x0                   	// #0
    408c:	tbnz	x2, #63, 4098 <crc32_combine64@@ZLIB_1.2.3.3+0xef0>
    4090:	ldr	x1, [x19, #96]
    4094:	add	x1, x1, w2, uxtw
    4098:	mov	w3, w3
    409c:	mov	x0, x19
    40a0:	sub	x2, x3, x2
    40a4:	mov	w3, #0x1                   	// #1
    40a8:	bl	bbc0 <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
    40ac:	ldr	w1, [x19, #172]
    40b0:	ldr	x0, [x19]
    40b4:	str	x1, [x19, #152]
    40b8:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    40bc:	ldr	x0, [x19]
    40c0:	ldr	w0, [x0, #32]
    40c4:	cmp	w0, #0x0
    40c8:	cset	w0, ne  // ne = any
    40cc:	add	w0, w0, #0x2
    40d0:	ldp	x19, x20, [sp, #16]
    40d4:	ldp	x21, x22, [sp, #32]
    40d8:	ldp	x29, x30, [sp], #48
    40dc:	ret
    40e0:	stp	x29, x30, [sp, #-96]!
    40e4:	mov	x29, sp
    40e8:	stp	x19, x20, [sp, #16]
    40ec:	mov	x19, x0
    40f0:	stp	x21, x22, [sp, #32]
    40f4:	mov	w22, w1
    40f8:	ldr	w1, [x0, #80]
    40fc:	ldr	x0, [x0]
    4100:	stp	x23, x24, [sp, #48]
    4104:	mov	w24, #0xffff                	// #65535
    4108:	ldr	x23, [x19, #24]
    410c:	stp	x25, x26, [sp, #64]
    4110:	ldr	w26, [x0, #8]
    4114:	sub	x23, x23, #0x5
    4118:	mov	x25, #0xfffe                	// #65534
    411c:	cmp	x23, x1
    4120:	mov	w2, w26
    4124:	csel	x23, x23, x1, ls  // ls = plast
    4128:	stp	x27, x28, [sp, #80]
    412c:	nop
    4130:	ldr	w1, [x19, #5940]
    4134:	ldr	w20, [x0, #32]
    4138:	add	w1, w1, #0x2a
    413c:	asr	w3, w1, #3
    4140:	cmp	w20, w1, asr #3
    4144:	b.cc	4424 <crc32_combine64@@ZLIB_1.2.3.3+0x127c>  // b.lo, b.ul, b.last
    4148:	ldr	x4, [x19, #152]
    414c:	sub	w20, w20, w3
    4150:	ldr	w21, [x19, #172]
    4154:	sub	w3, w21, w4
    4158:	sub	w21, w21, w4
    415c:	add	x3, x3, w2, uxtw
    4160:	add	w4, w21, w2
    4164:	cmp	x3, x25
    4168:	csel	w1, w4, w24, ls  // ls = plast
    416c:	cmp	w1, w20
    4170:	csel	w20, w1, w20, ls  // ls = plast
    4174:	cmp	w20, w23
    4178:	b.cs	4194 <crc32_combine64@@ZLIB_1.2.3.3+0xfec>  // b.hs, b.nlast
    417c:	cmp	w20, #0x0
    4180:	ccmp	w22, #0x4, #0x4, eq  // eq = none
    4184:	ccmp	w22, #0x0, #0x4, eq  // eq = none
    4188:	b.eq	4424 <crc32_combine64@@ZLIB_1.2.3.3+0x127c>  // b.none
    418c:	cmp	w20, w4
    4190:	b.ne	4424 <crc32_combine64@@ZLIB_1.2.3.3+0x127c>  // b.any
    4194:	cmp	w22, #0x4
    4198:	mov	w27, #0x0                   	// #0
    419c:	b.ne	41ac <crc32_combine64@@ZLIB_1.2.3.3+0x1004>  // b.any
    41a0:	add	w2, w21, w2
    41a4:	cmp	w2, w20
    41a8:	cset	w27, eq  // eq = none
    41ac:	mov	w3, w27
    41b0:	mov	x0, x19
    41b4:	mov	x2, #0x0                   	// #0
    41b8:	mov	x1, #0x0                   	// #0
    41bc:	bl	b9a0 <inflateCodesUsed@@ZLIB_1.2.9+0x16b0>
    41c0:	ldr	x3, [x19, #16]
    41c4:	and	w1, w20, #0xff
    41c8:	ldr	x5, [x19, #40]
    41cc:	mvn	w4, w1
    41d0:	lsr	w2, w20, #8
    41d4:	mvn	w0, w20
    41d8:	add	x3, x3, x5
    41dc:	lsr	w0, w0, #8
    41e0:	sturb	w1, [x3, #-4]
    41e4:	ldr	x1, [x19, #16]
    41e8:	ldr	x3, [x19, #40]
    41ec:	add	x1, x1, x3
    41f0:	sturb	w2, [x1, #-3]
    41f4:	ldr	x1, [x19, #16]
    41f8:	ldr	x2, [x19, #40]
    41fc:	add	x1, x1, x2
    4200:	sturb	w4, [x1, #-2]
    4204:	ldr	x1, [x19, #16]
    4208:	ldr	x2, [x19, #40]
    420c:	add	x1, x1, x2
    4210:	sturb	w0, [x1, #-1]
    4214:	ldr	x0, [x19]
    4218:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    421c:	ldr	x0, [x19]
    4220:	cbnz	w21, 4388 <crc32_combine64@@ZLIB_1.2.3.3+0x11e0>
    4224:	cbnz	w20, 43e8 <crc32_combine64@@ZLIB_1.2.3.3+0x1240>
    4228:	ldr	w2, [x0, #8]
    422c:	cbz	w27, 4130 <crc32_combine64@@ZLIB_1.2.3.3+0xf88>
    4230:	subs	w26, w26, w2
    4234:	mov	w23, #0x1                   	// #1
    4238:	b.eq	4430 <crc32_combine64@@ZLIB_1.2.3.3+0x1288>  // b.none
    423c:	ldr	w1, [x19, #80]
    4240:	ldr	x3, [x19, #96]
    4244:	cmp	w1, w26
    4248:	b.ls	4510 <crc32_combine64@@ZLIB_1.2.3.3+0x1368>  // b.plast
    424c:	ldr	w4, [x19, #172]
    4250:	mov	w20, w26
    4254:	ldr	x2, [x19, #104]
    4258:	mov	w5, w4
    425c:	sub	x2, x2, x5
    4260:	cmp	x2, w26, uxtw
    4264:	b.ls	45c0 <crc32_combine64@@ZLIB_1.2.3.3+0x1418>  // b.plast
    4268:	ldr	x1, [x0]
    426c:	mov	x2, x20
    4270:	add	x0, x3, x5
    4274:	sub	x1, x1, x20
    4278:	bl	23a0 <memcpy@plt>
    427c:	ldr	w3, [x19, #172]
    4280:	ldr	w2, [x19, #80]
    4284:	add	w3, w26, w3
    4288:	str	w3, [x19, #172]
    428c:	ldr	w0, [x19, #5932]
    4290:	mov	w5, w3
    4294:	str	x5, [x19, #152]
    4298:	mov	x6, x5
    429c:	sub	w2, w2, w0
    42a0:	cmp	w2, w26
    42a4:	csel	w2, w2, w26, ls  // ls = plast
    42a8:	add	w2, w2, w0
    42ac:	str	w2, [x19, #5932]
    42b0:	ldr	x0, [x19, #5944]
    42b4:	cmp	x0, x5
    42b8:	b.cc	4448 <crc32_combine64@@ZLIB_1.2.3.3+0x12a0>  // b.lo, b.ul, b.last
    42bc:	cbnz	w23, 4450 <crc32_combine64@@ZLIB_1.2.3.3+0x12a8>
    42c0:	ldr	x0, [x19]
    42c4:	tst	w22, #0xfffffffb
    42c8:	ldr	w2, [x0, #8]
    42cc:	b.eq	42d4 <crc32_combine64@@ZLIB_1.2.3.3+0x112c>  // b.none
    42d0:	cbz	w2, 44fc <crc32_combine64@@ZLIB_1.2.3.3+0x1354>
    42d4:	ldr	x20, [x19, #104]
    42d8:	sub	w20, w20, #0x1
    42dc:	sub	w20, w20, w3
    42e0:	cmp	w20, w2
    42e4:	b.cs	42fc <crc32_combine64@@ZLIB_1.2.3.3+0x1154>  // b.hs, b.nlast
    42e8:	ldr	x4, [x19, #152]
    42ec:	ldr	w5, [x19, #80]
    42f0:	mov	w1, w5
    42f4:	cmp	x4, w5, uxtw
    42f8:	b.ge	4574 <crc32_combine64@@ZLIB_1.2.3.3+0x13cc>  // b.tcont
    42fc:	cmp	w20, w2
    4300:	csel	w20, w20, w2, ls  // ls = plast
    4304:	cbnz	w20, 44d4 <crc32_combine64@@ZLIB_1.2.3.3+0x132c>
    4308:	ldr	x4, [x19, #152]
    430c:	ldr	x0, [x19, #5944]
    4310:	cmp	x0, x6
    4314:	b.cs	431c <crc32_combine64@@ZLIB_1.2.3.3+0x1174>  // b.hs, b.nlast
    4318:	str	x6, [x19, #5944]
    431c:	ldr	w1, [x19, #5940]
    4320:	mov	x5, #0xffff                	// #65535
    4324:	ldr	x0, [x19, #24]
    4328:	add	w1, w1, #0x2a
    432c:	ldr	w2, [x19, #80]
    4330:	sub	w3, w3, w4
    4334:	asr	w1, w1, #3
    4338:	sub	x0, x0, x1
    433c:	cmp	x0, x5
    4340:	csel	x0, x0, x5, ls  // ls = plast
    4344:	cmp	w2, w0
    4348:	mov	w1, w0
    434c:	csel	w2, w2, w0, ls  // ls = plast
    4350:	cmp	w2, w3
    4354:	b.ls	4474 <crc32_combine64@@ZLIB_1.2.3.3+0x12cc>  // b.plast
    4358:	cmp	w3, #0x0
    435c:	ccmp	w22, #0x4, #0x4, eq  // eq = none
    4360:	ccmp	w22, #0x0, #0x4, eq  // eq = none
    4364:	b.ne	45f0 <crc32_combine64@@ZLIB_1.2.3.3+0x1448>  // b.any
    4368:	mov	w0, w23
    436c:	ldp	x19, x20, [sp, #16]
    4370:	ldp	x21, x22, [sp, #32]
    4374:	ldp	x23, x24, [sp, #48]
    4378:	ldp	x25, x26, [sp, #64]
    437c:	ldp	x27, x28, [sp, #80]
    4380:	ldp	x29, x30, [sp], #96
    4384:	ret
    4388:	ldr	x0, [x0, #24]
    438c:	cmp	w20, w21
    4390:	ldr	x3, [x19, #96]
    4394:	csel	w28, w20, w21, ls  // ls = plast
    4398:	ldr	x1, [x19, #152]
    439c:	csel	w21, w20, w21, ls  // ls = plast
    43a0:	mov	x2, x28
    43a4:	sub	w20, w20, w21
    43a8:	add	x1, x3, x1
    43ac:	bl	23a0 <memcpy@plt>
    43b0:	ldr	x0, [x19]
    43b4:	ldr	x4, [x19, #152]
    43b8:	ldr	x3, [x0, #24]
    43bc:	add	x4, x4, x28
    43c0:	ldr	x2, [x0, #40]
    43c4:	add	x5, x3, x28
    43c8:	ldr	w3, [x0, #32]
    43cc:	add	x2, x2, x28
    43d0:	str	x5, [x0, #24]
    43d4:	sub	w21, w3, w21
    43d8:	str	w21, [x0, #32]
    43dc:	str	x2, [x0, #40]
    43e0:	str	x4, [x19, #152]
    43e4:	cbz	w20, 4228 <crc32_combine64@@ZLIB_1.2.3.3+0x1080>
    43e8:	ldr	x1, [x0, #24]
    43ec:	mov	w2, w20
    43f0:	bl	3418 <crc32_combine64@@ZLIB_1.2.3.3+0x270>
    43f4:	ldr	x0, [x19]
    43f8:	mov	w4, w20
    43fc:	ldr	x3, [x0, #24]
    4400:	ldr	x1, [x0, #40]
    4404:	add	x3, x3, x4
    4408:	ldr	w2, [x0, #32]
    440c:	add	x1, x1, x4
    4410:	str	x3, [x0, #24]
    4414:	sub	w20, w2, w20
    4418:	str	w20, [x0, #32]
    441c:	str	x1, [x0, #40]
    4420:	b	4228 <crc32_combine64@@ZLIB_1.2.3.3+0x1080>
    4424:	subs	w26, w26, w2
    4428:	mov	w23, #0x0                   	// #0
    442c:	b.ne	423c <crc32_combine64@@ZLIB_1.2.3.3+0x1094>  // b.any
    4430:	ldr	w3, [x19, #172]
    4434:	ldr	x0, [x19, #5944]
    4438:	mov	w5, w3
    443c:	mov	x6, x5
    4440:	cmp	x0, x5
    4444:	b.cs	42bc <crc32_combine64@@ZLIB_1.2.3.3+0x1114>  // b.hs, b.nlast
    4448:	str	x5, [x19, #5944]
    444c:	cbz	w23, 42c0 <crc32_combine64@@ZLIB_1.2.3.3+0x1118>
    4450:	mov	w23, #0x3                   	// #3
    4454:	mov	w0, w23
    4458:	ldp	x19, x20, [sp, #16]
    445c:	ldp	x21, x22, [sp, #32]
    4460:	ldp	x23, x24, [sp, #48]
    4464:	ldp	x25, x26, [sp, #64]
    4468:	ldp	x27, x28, [sp, #80]
    446c:	ldp	x29, x30, [sp], #96
    4470:	ret
    4474:	cmp	w0, w3
    4478:	csel	w0, w0, w3, ls  // ls = plast
    447c:	cmp	w22, #0x4
    4480:	b.eq	453c <crc32_combine64@@ZLIB_1.2.3.3+0x1394>  // b.none
    4484:	ldr	x1, [x19, #96]
    4488:	mov	w20, w0
    448c:	mov	x2, x20
    4490:	mov	x0, x19
    4494:	add	x1, x1, x4
    4498:	mov	w3, #0x0                   	// #0
    449c:	bl	b9a0 <inflateCodesUsed@@ZLIB_1.2.9+0x16b0>
    44a0:	ldr	x1, [x19, #152]
    44a4:	ldr	x0, [x19]
    44a8:	add	x1, x1, x20
    44ac:	str	x1, [x19, #152]
    44b0:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    44b4:	mov	w0, w23
    44b8:	ldp	x19, x20, [sp, #16]
    44bc:	ldp	x21, x22, [sp, #32]
    44c0:	ldp	x23, x24, [sp, #48]
    44c4:	ldp	x25, x26, [sp, #64]
    44c8:	ldp	x27, x28, [sp, #80]
    44cc:	ldp	x29, x30, [sp], #96
    44d0:	ret
    44d4:	ldr	x1, [x19, #96]
    44d8:	mov	w2, w20
    44dc:	add	x1, x1, x6
    44e0:	bl	3418 <crc32_combine64@@ZLIB_1.2.3.3+0x270>
    44e4:	ldr	w3, [x19, #172]
    44e8:	ldr	x4, [x19, #152]
    44ec:	add	w6, w20, w3
    44f0:	mov	x3, x6
    44f4:	str	w6, [x19, #172]
    44f8:	b	430c <crc32_combine64@@ZLIB_1.2.3.3+0x1164>
    44fc:	ldr	x4, [x19, #152]
    4500:	cmp	x5, x4
    4504:	b.ne	430c <crc32_combine64@@ZLIB_1.2.3.3+0x1164>  // b.any
    4508:	mov	w23, #0x1                   	// #1
    450c:	b	4368 <crc32_combine64@@ZLIB_1.2.3.3+0x11c0>
    4510:	ldr	x0, [x0]
    4514:	mov	w2, #0x2                   	// #2
    4518:	str	w2, [x19, #5928]
    451c:	mov	w2, w1
    4520:	sub	x1, x0, x2
    4524:	mov	x0, x3
    4528:	bl	23a0 <memcpy@plt>
    452c:	ldr	w3, [x19, #80]
    4530:	str	w3, [x19, #172]
    4534:	mov	w2, w3
    4538:	b	428c <crc32_combine64@@ZLIB_1.2.3.3+0x10e4>
    453c:	ldr	x2, [x19]
    4540:	ldr	w2, [x2, #8]
    4544:	cmp	w2, #0x0
    4548:	ccmp	w1, w3, #0x0, eq  // eq = none
    454c:	b.cc	4484 <crc32_combine64@@ZLIB_1.2.3.3+0x12dc>  // b.lo, b.ul, b.last
    4550:	ldr	x1, [x19, #96]
    4554:	mov	w20, w0
    4558:	mov	x2, x20
    455c:	mov	x0, x19
    4560:	add	x1, x1, x4
    4564:	mov	w3, #0x1                   	// #1
    4568:	mov	w23, #0x2                   	// #2
    456c:	bl	b9a0 <inflateCodesUsed@@ZLIB_1.2.9+0x16b0>
    4570:	b	44a0 <crc32_combine64@@ZLIB_1.2.3.3+0x12f8>
    4574:	ldr	x0, [x19, #96]
    4578:	sub	x4, x4, x1
    457c:	sub	w2, w3, w5
    4580:	str	x4, [x19, #152]
    4584:	str	w2, [x19, #172]
    4588:	add	x1, x0, x1
    458c:	bl	23a0 <memcpy@plt>
    4590:	ldr	w0, [x19, #5928]
    4594:	cmp	w0, #0x1
    4598:	b.hi	45a4 <crc32_combine64@@ZLIB_1.2.3.3+0x13fc>  // b.pmore
    459c:	add	w0, w0, #0x1
    45a0:	str	w0, [x19, #5928]
    45a4:	ldr	x0, [x19]
    45a8:	ldr	w1, [x19, #80]
    45ac:	ldr	w3, [x19, #172]
    45b0:	ldr	w2, [x0, #8]
    45b4:	add	w20, w20, w1
    45b8:	mov	w6, w3
    45bc:	b	42fc <crc32_combine64@@ZLIB_1.2.3.3+0x1154>
    45c0:	sub	w2, w4, w1
    45c4:	str	w2, [x19, #172]
    45c8:	add	x1, x3, w1, uxtw
    45cc:	mov	x0, x3
    45d0:	bl	23a0 <memcpy@plt>
    45d4:	ldr	w0, [x19, #5928]
    45d8:	ldr	w5, [x19, #172]
    45dc:	cmp	w0, #0x1
    45e0:	b.ls	4618 <crc32_combine64@@ZLIB_1.2.3.3+0x1470>  // b.plast
    45e4:	ldr	x0, [x19]
    45e8:	ldr	x3, [x19, #96]
    45ec:	b	4268 <crc32_combine64@@ZLIB_1.2.3.3+0x10c0>
    45f0:	ldr	x0, [x19]
    45f4:	ldr	w0, [x0, #8]
    45f8:	cmp	w0, #0x0
    45fc:	ccmp	w1, w3, #0x0, eq  // eq = none
    4600:	b.cc	4368 <crc32_combine64@@ZLIB_1.2.3.3+0x11c0>  // b.lo, b.ul, b.last
    4604:	cmp	w1, w3
    4608:	csel	w0, w1, w3, ls  // ls = plast
    460c:	cmp	w22, #0x4
    4610:	b.ne	4484 <crc32_combine64@@ZLIB_1.2.3.3+0x12dc>  // b.any
    4614:	b	4550 <crc32_combine64@@ZLIB_1.2.3.3+0x13a8>
    4618:	add	w1, w0, #0x1
    461c:	str	w1, [x19, #5928]
    4620:	ldr	x0, [x19]
    4624:	ldr	x3, [x19, #96]
    4628:	b	4268 <crc32_combine64@@ZLIB_1.2.3.3+0x10c0>
    462c:	nop
    4630:	ldr	x2, [x0, #56]
    4634:	mov	x1, x0
    4638:	cbz	x2, 4694 <crc32_combine64@@ZLIB_1.2.3.3+0x14ec>
    463c:	ldr	x3, [x2]
    4640:	mov	w0, #0x1                   	// #1
    4644:	cmp	x1, x3
    4648:	b.eq	4650 <crc32_combine64@@ZLIB_1.2.3.3+0x14a8>  // b.none
    464c:	ret
    4650:	ldr	w1, [x2, #8]
    4654:	mov	w0, #0x45                  	// #69
    4658:	mov	w4, #0x5b                  	// #91
    465c:	mov	w3, #0x29a                 	// #666
    4660:	cmp	w1, #0x2a
    4664:	sub	w2, w1, #0x39
    4668:	ccmp	w1, w0, #0x4, ne  // ne = any
    466c:	cset	w0, ne  // ne = any
    4670:	cmp	w1, #0x67
    4674:	ccmp	w1, w4, #0x4, ne  // ne = any
    4678:	csel	w0, w0, wzr, ne  // ne = any
    467c:	cmp	w1, #0x71
    4680:	ccmp	w1, w3, #0x4, ne  // ne = any
    4684:	csel	w0, w0, wzr, ne  // ne = any
    4688:	tst	w2, #0xffffffef
    468c:	csel	w0, w0, wzr, ne  // ne = any
    4690:	ret
    4694:	mov	w0, #0x1                   	// #1
    4698:	ret
    469c:	nop

00000000000046a0 <deflateSetDictionary@@Base>:
    46a0:	cbz	x0, 488c <deflateSetDictionary@@Base+0x1ec>
    46a4:	stp	x29, x30, [sp, #-64]!
    46a8:	mov	x29, sp
    46ac:	stp	x19, x20, [sp, #16]
    46b0:	mov	x20, x1
    46b4:	mov	x19, x0
    46b8:	ldr	x1, [x0, #64]
    46bc:	cbz	x1, 4808 <deflateSetDictionary@@Base+0x168>
    46c0:	ldr	x1, [x0, #72]
    46c4:	cbz	x1, 4808 <deflateSetDictionary@@Base+0x168>
    46c8:	stp	x21, x22, [sp, #32]
    46cc:	mov	w22, w2
    46d0:	bl	4630 <crc32_combine64@@ZLIB_1.2.3.3+0x1488>
    46d4:	cmp	x20, #0x0
    46d8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    46dc:	b.ne	48b0 <deflateSetDictionary@@Base+0x210>  // b.any
    46e0:	stp	x23, x24, [sp, #48]
    46e4:	ldr	x24, [x19, #56]
    46e8:	ldr	w21, [x24, #48]
    46ec:	cmp	w21, #0x2
    46f0:	b.eq	48a0 <deflateSetDictionary@@Base+0x200>  // b.none
    46f4:	cmp	w21, #0x1
    46f8:	b.eq	4818 <deflateSetDictionary@@Base+0x178>  // b.none
    46fc:	ldr	w0, [x24, #180]
    4700:	cbnz	w0, 48a0 <deflateSetDictionary@@Base+0x200>
    4704:	ldr	w1, [x24, #80]
    4708:	str	wzr, [x24, #48]
    470c:	cmp	w1, w22
    4710:	b.hi	4854 <deflateSetDictionary@@Base+0x1b4>  // b.pmore
    4714:	cbz	w21, 485c <deflateSetDictionary@@Base+0x1bc>
    4718:	sub	w22, w22, w1
    471c:	add	x20, x20, x22
    4720:	ldr	w22, [x19, #8]
    4724:	mov	x0, x24
    4728:	str	w1, [x19, #8]
    472c:	ldr	x23, [x19]
    4730:	str	x20, [x19]
    4734:	bl	34e8 <crc32_combine64@@ZLIB_1.2.3.3+0x340>
    4738:	ldr	w3, [x24, #180]
    473c:	cmp	w3, #0x2
    4740:	b.ls	47bc <deflateSetDictionary@@Base+0x11c>  // b.plast
    4744:	mov	w20, #0x2                   	// #2
    4748:	ldr	w1, [x24, #172]
    474c:	ldp	x9, x4, [x24, #112]
    4750:	sub	w6, w1, #0x2
    4754:	ldr	w11, [x24, #88]
    4758:	add	w6, w6, w3
    475c:	ldr	w2, [x24, #128]
    4760:	ldp	w8, w7, [x24, #140]
    4764:	ldr	x10, [x24, #96]
    4768:	add	w0, w1, #0x2
    476c:	lsl	w2, w2, w7
    4770:	and	w5, w11, w1
    4774:	ldrb	w3, [x10, w0, uxtw]
    4778:	eor	w2, w3, w2
    477c:	and	w2, w2, w8
    4780:	ubfiz	x0, x2, #1, #32
    4784:	ldrh	w3, [x4, x0]
    4788:	str	w2, [x24, #128]
    478c:	strh	w3, [x9, x5, lsl #1]
    4790:	strh	w1, [x4, x0]
    4794:	add	w1, w1, #0x1
    4798:	cmp	w1, w6
    479c:	b.ne	4768 <deflateSetDictionary@@Base+0xc8>  // b.any
    47a0:	str	w1, [x24, #172]
    47a4:	mov	x0, x24
    47a8:	str	w20, [x24, #180]
    47ac:	bl	34e8 <crc32_combine64@@ZLIB_1.2.3.3+0x340>
    47b0:	ldr	w3, [x24, #180]
    47b4:	cmp	w3, #0x2
    47b8:	b.hi	4748 <deflateSetDictionary@@Base+0xa8>  // b.pmore
    47bc:	ldr	w0, [x24, #172]
    47c0:	mov	w2, #0x2                   	// #2
    47c4:	mov	x1, #0x200000000           	// #8589934592
    47c8:	str	w2, [x24, #160]
    47cc:	add	w2, w3, w0
    47d0:	str	x2, [x24, #152]
    47d4:	str	wzr, [x24, #168]
    47d8:	mov	w0, #0x0                   	// #0
    47dc:	str	w2, [x24, #172]
    47e0:	stur	x1, [x24, #180]
    47e4:	str	w3, [x24, #5932]
    47e8:	str	x23, [x19]
    47ec:	str	w22, [x19, #8]
    47f0:	str	w21, [x24, #48]
    47f4:	ldp	x21, x22, [sp, #32]
    47f8:	ldp	x23, x24, [sp, #48]
    47fc:	ldp	x19, x20, [sp, #16]
    4800:	ldp	x29, x30, [sp], #64
    4804:	ret
    4808:	mov	w0, #0xfffffffe            	// #-2
    480c:	ldp	x19, x20, [sp, #16]
    4810:	ldp	x29, x30, [sp], #64
    4814:	ret
    4818:	ldr	w0, [x24, #8]
    481c:	cmp	w0, #0x2a
    4820:	b.ne	48a0 <deflateSetDictionary@@Base+0x200>  // b.any
    4824:	ldr	w1, [x24, #180]
    4828:	mov	w0, #0xfffffffe            	// #-2
    482c:	cbnz	w1, 4894 <deflateSetDictionary@@Base+0x1f4>
    4830:	ldr	x0, [x19, #96]
    4834:	mov	x1, x20
    4838:	mov	w2, w22
    483c:	bl	2560 <adler32@plt>
    4840:	ldr	w1, [x24, #80]
    4844:	str	x0, [x19, #96]
    4848:	str	wzr, [x24, #48]
    484c:	cmp	w22, w1
    4850:	b.cs	4718 <deflateSetDictionary@@Base+0x78>  // b.hs, b.nlast
    4854:	mov	w1, w22
    4858:	b	4720 <deflateSetDictionary@@Base+0x80>
    485c:	ldr	w2, [x24, #132]
    4860:	mov	w1, #0x0                   	// #0
    4864:	ldr	x0, [x24, #120]
    4868:	sub	w2, w2, #0x1
    486c:	lsl	x2, x2, #1
    4870:	strh	wzr, [x0, x2]
    4874:	bl	24a0 <memset@plt>
    4878:	str	xzr, [x24, #152]
    487c:	ldr	w1, [x24, #80]
    4880:	str	wzr, [x24, #172]
    4884:	str	wzr, [x24, #5932]
    4888:	b	4718 <deflateSetDictionary@@Base+0x78>
    488c:	mov	w0, #0xfffffffe            	// #-2
    4890:	ret
    4894:	ldp	x21, x22, [sp, #32]
    4898:	ldp	x23, x24, [sp, #48]
    489c:	b	47fc <deflateSetDictionary@@Base+0x15c>
    48a0:	mov	w0, #0xfffffffe            	// #-2
    48a4:	ldp	x21, x22, [sp, #32]
    48a8:	ldp	x23, x24, [sp, #48]
    48ac:	b	47fc <deflateSetDictionary@@Base+0x15c>
    48b0:	mov	w0, #0xfffffffe            	// #-2
    48b4:	ldp	x21, x22, [sp, #32]
    48b8:	b	47fc <deflateSetDictionary@@Base+0x15c>
    48bc:	nop

00000000000048c0 <deflateGetDictionary@@ZLIB_1.2.9>:
    48c0:	stp	x29, x30, [sp, #-48]!
    48c4:	mov	x29, sp
    48c8:	stp	x19, x20, [sp, #16]
    48cc:	cbz	x0, 4940 <deflateGetDictionary@@ZLIB_1.2.9+0x80>
    48d0:	mov	x6, x1
    48d4:	mov	x5, x0
    48d8:	ldr	x1, [x0, #64]
    48dc:	cbz	x1, 4940 <deflateGetDictionary@@ZLIB_1.2.9+0x80>
    48e0:	ldr	x1, [x0, #72]
    48e4:	cbz	x1, 4940 <deflateGetDictionary@@ZLIB_1.2.9+0x80>
    48e8:	mov	x19, x2
    48ec:	bl	4630 <crc32_combine64@@ZLIB_1.2.3.3+0x1488>
    48f0:	mov	w20, w0
    48f4:	cbnz	w0, 4940 <deflateGetDictionary@@ZLIB_1.2.9+0x80>
    48f8:	ldr	x0, [x5, #56]
    48fc:	ldr	w3, [x0, #172]
    4900:	ldr	w2, [x0, #180]
    4904:	str	x21, [sp, #32]
    4908:	ldr	w21, [x0, #80]
    490c:	add	w1, w3, w2
    4910:	cmp	w21, w1
    4914:	csel	w21, w21, w1, ls  // ls = plast
    4918:	cmp	x6, #0x0
    491c:	ccmp	w21, #0x0, #0x4, ne  // ne = any
    4920:	b.ne	4954 <deflateGetDictionary@@ZLIB_1.2.9+0x94>  // b.any
    4924:	cbz	x19, 4978 <deflateGetDictionary@@ZLIB_1.2.9+0xb8>
    4928:	str	w21, [x19]
    492c:	mov	w0, w20
    4930:	ldp	x19, x20, [sp, #16]
    4934:	ldr	x21, [sp, #32]
    4938:	ldp	x29, x30, [sp], #48
    493c:	ret
    4940:	mov	w20, #0xfffffffe            	// #-2
    4944:	mov	w0, w20
    4948:	ldp	x19, x20, [sp, #16]
    494c:	ldp	x29, x30, [sp], #48
    4950:	ret
    4954:	mov	w4, w2
    4958:	mov	w2, w21
    495c:	add	x3, x4, w3, uxtw
    4960:	sub	x3, x3, x2
    4964:	ldr	x1, [x0, #96]
    4968:	mov	x0, x6
    496c:	add	x1, x1, x3
    4970:	bl	23a0 <memcpy@plt>
    4974:	cbnz	x19, 4928 <deflateGetDictionary@@ZLIB_1.2.9+0x68>
    4978:	mov	w0, w20
    497c:	ldp	x19, x20, [sp, #16]
    4980:	ldr	x21, [sp, #32]
    4984:	ldp	x29, x30, [sp], #48
    4988:	ret
    498c:	nop

0000000000004990 <deflateResetKeep@@ZLIB_1.2.5.2>:
    4990:	stp	x29, x30, [sp, #-48]!
    4994:	mov	x29, sp
    4998:	str	x21, [sp, #32]
    499c:	cbz	x0, 4a7c <deflateResetKeep@@ZLIB_1.2.5.2+0xec>
    49a0:	ldr	x1, [x0, #64]
    49a4:	stp	x19, x20, [sp, #16]
    49a8:	mov	x19, x0
    49ac:	cbz	x1, 4a48 <deflateResetKeep@@ZLIB_1.2.5.2+0xb8>
    49b0:	ldr	x1, [x0, #72]
    49b4:	cbz	x1, 4a48 <deflateResetKeep@@ZLIB_1.2.5.2+0xb8>
    49b8:	bl	4630 <crc32_combine64@@ZLIB_1.2.3.3+0x1488>
    49bc:	mov	w21, w0
    49c0:	cbnz	w0, 4a48 <deflateResetKeep@@ZLIB_1.2.5.2+0xb8>
    49c4:	ldr	x20, [x19, #56]
    49c8:	mov	w1, #0x2                   	// #2
    49cc:	ldr	w0, [x20, #48]
    49d0:	str	xzr, [x19, #16]
    49d4:	stp	xzr, xzr, [x19, #40]
    49d8:	str	w1, [x19, #88]
    49dc:	ldr	x1, [x20, #16]
    49e0:	stp	x1, xzr, [x20, #32]
    49e4:	tbnz	w0, #31, 4a30 <deflateResetKeep@@ZLIB_1.2.5.2+0xa0>
    49e8:	cmp	w0, #0x2
    49ec:	b.eq	4a60 <deflateResetKeep@@ZLIB_1.2.5.2+0xd0>  // b.none
    49f0:	cbnz	w0, 4a40 <deflateResetKeep@@ZLIB_1.2.5.2+0xb0>
    49f4:	mov	w0, #0x71                  	// #113
    49f8:	str	w0, [x20, #8]
    49fc:	mov	w2, #0x0                   	// #0
    4a00:	mov	x1, #0x0                   	// #0
    4a04:	mov	x0, #0x0                   	// #0
    4a08:	bl	2560 <adler32@plt>
    4a0c:	str	x0, [x19, #96]
    4a10:	mov	x0, x20
    4a14:	str	wzr, [x20, #76]
    4a18:	bl	b908 <inflateCodesUsed@@ZLIB_1.2.9+0x1618>
    4a1c:	mov	w0, w21
    4a20:	ldp	x19, x20, [sp, #16]
    4a24:	ldr	x21, [sp, #32]
    4a28:	ldp	x29, x30, [sp], #48
    4a2c:	ret
    4a30:	neg	w1, w0
    4a34:	str	w1, [x20, #48]
    4a38:	cmn	w0, #0x2
    4a3c:	b.eq	4a60 <deflateResetKeep@@ZLIB_1.2.5.2+0xd0>  // b.none
    4a40:	mov	w0, #0x2a                  	// #42
    4a44:	b	49f8 <deflateResetKeep@@ZLIB_1.2.5.2+0x68>
    4a48:	mov	w21, #0xfffffffe            	// #-2
    4a4c:	mov	w0, w21
    4a50:	ldp	x19, x20, [sp, #16]
    4a54:	ldr	x21, [sp, #32]
    4a58:	ldp	x29, x30, [sp], #48
    4a5c:	ret
    4a60:	mov	w0, #0x39                  	// #57
    4a64:	str	w0, [x20, #8]
    4a68:	mov	w2, #0x0                   	// #0
    4a6c:	mov	x1, #0x0                   	// #0
    4a70:	mov	x0, #0x0                   	// #0
    4a74:	bl	2430 <crc32@plt>
    4a78:	b	4a0c <deflateResetKeep@@ZLIB_1.2.5.2+0x7c>
    4a7c:	mov	w21, #0xfffffffe            	// #-2
    4a80:	mov	w0, w21
    4a84:	ldr	x21, [sp, #32]
    4a88:	ldp	x29, x30, [sp], #48
    4a8c:	ret

0000000000004a90 <deflateReset@@Base>:
    4a90:	stp	x29, x30, [sp, #-32]!
    4a94:	mov	x29, sp
    4a98:	stp	x19, x20, [sp, #16]
    4a9c:	mov	x19, x0
    4aa0:	bl	2630 <deflateResetKeep@plt>
    4aa4:	mov	w20, w0
    4aa8:	cbz	w0, 4abc <deflateReset@@Base+0x2c>
    4aac:	mov	w0, w20
    4ab0:	ldp	x19, x20, [sp, #16]
    4ab4:	ldp	x29, x30, [sp], #32
    4ab8:	ret
    4abc:	ldr	x19, [x19, #56]
    4ac0:	mov	w1, #0x0                   	// #0
    4ac4:	ldr	w2, [x19, #132]
    4ac8:	ldr	w3, [x19, #80]
    4acc:	sub	w2, w2, #0x1
    4ad0:	ldr	x0, [x19, #120]
    4ad4:	lsl	x2, x2, #1
    4ad8:	lsl	x3, x3, #1
    4adc:	str	x3, [x19, #104]
    4ae0:	strh	wzr, [x0, x2]
    4ae4:	bl	24a0 <memset@plt>
    4ae8:	str	wzr, [x19, #128]
    4aec:	ldrsw	x0, [x19, #196]
    4af0:	adrp	x1, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    4af4:	add	x1, x1, #0xc68
    4af8:	mov	w3, #0x2                   	// #2
    4afc:	str	w3, [x19, #160]
    4b00:	mov	x4, #0x200000000           	// #8589934592
    4b04:	lsl	x0, x0, #4
    4b08:	str	xzr, [x19, #152]
    4b0c:	add	x2, x1, x0
    4b10:	str	xzr, [x19, #168]
    4b14:	stur	x4, [x19, #180]
    4b18:	ldrh	w1, [x1, x0]
    4b1c:	ldrh	w3, [x2, #2]
    4b20:	ldrh	w0, [x2, #4]
    4b24:	ldrh	w2, [x2, #6]
    4b28:	stp	w2, w3, [x19, #188]
    4b2c:	stp	w1, w0, [x19, #204]
    4b30:	mov	w0, w20
    4b34:	str	wzr, [x19, #5932]
    4b38:	ldp	x19, x20, [sp, #16]
    4b3c:	ldp	x29, x30, [sp], #32
    4b40:	ret
    4b44:	nop

0000000000004b48 <deflateSetHeader@@ZLIB_1.2.2>:
    4b48:	cbz	x0, 4b90 <deflateSetHeader@@ZLIB_1.2.2+0x48>
    4b4c:	mov	x6, x1
    4b50:	mov	x5, x0
    4b54:	ldr	x1, [x0, #64]
    4b58:	cbz	x1, 4b90 <deflateSetHeader@@ZLIB_1.2.2+0x48>
    4b5c:	ldr	x1, [x0, #72]
    4b60:	cbz	x1, 4b90 <deflateSetHeader@@ZLIB_1.2.2+0x48>
    4b64:	stp	x29, x30, [sp, #-16]!
    4b68:	mov	x29, sp
    4b6c:	bl	4630 <crc32_combine64@@ZLIB_1.2.3.3+0x1488>
    4b70:	cbnz	w0, 4b98 <deflateSetHeader@@ZLIB_1.2.2+0x50>
    4b74:	ldr	x1, [x5, #56]
    4b78:	ldr	w2, [x1, #48]
    4b7c:	cmp	w2, #0x2
    4b80:	b.ne	4b98 <deflateSetHeader@@ZLIB_1.2.2+0x50>  // b.any
    4b84:	str	x6, [x1, #56]
    4b88:	ldp	x29, x30, [sp], #16
    4b8c:	ret
    4b90:	mov	w0, #0xfffffffe            	// #-2
    4b94:	ret
    4b98:	mov	w0, #0xfffffffe            	// #-2
    4b9c:	b	4b88 <deflateSetHeader@@ZLIB_1.2.2+0x40>

0000000000004ba0 <deflatePending@@ZLIB_1.2.5.1>:
    4ba0:	cbz	x0, 4bf8 <deflatePending@@ZLIB_1.2.5.1+0x58>
    4ba4:	mov	x7, x1
    4ba8:	mov	x5, x0
    4bac:	ldr	x1, [x0, #64]
    4bb0:	cbz	x1, 4bf8 <deflatePending@@ZLIB_1.2.5.1+0x58>
    4bb4:	ldr	x1, [x0, #72]
    4bb8:	cbz	x1, 4bf8 <deflatePending@@ZLIB_1.2.5.1+0x58>
    4bbc:	mov	x6, x2
    4bc0:	stp	x29, x30, [sp, #-16]!
    4bc4:	mov	x29, sp
    4bc8:	bl	4630 <crc32_combine64@@ZLIB_1.2.3.3+0x1488>
    4bcc:	cbnz	w0, 4c00 <deflatePending@@ZLIB_1.2.5.1+0x60>
    4bd0:	cbz	x7, 4be0 <deflatePending@@ZLIB_1.2.5.1+0x40>
    4bd4:	ldr	x1, [x5, #56]
    4bd8:	ldr	x1, [x1, #40]
    4bdc:	str	w1, [x7]
    4be0:	cbz	x6, 4bf0 <deflatePending@@ZLIB_1.2.5.1+0x50>
    4be4:	ldr	x1, [x5, #56]
    4be8:	ldr	w1, [x1, #5940]
    4bec:	str	w1, [x6]
    4bf0:	ldp	x29, x30, [sp], #16
    4bf4:	ret
    4bf8:	mov	w0, #0xfffffffe            	// #-2
    4bfc:	ret
    4c00:	mov	w0, #0xfffffffe            	// #-2
    4c04:	b	4bf0 <deflatePending@@ZLIB_1.2.5.1+0x50>

0000000000004c08 <deflatePrime@@ZLIB_1.2.0.8>:
    4c08:	stp	x29, x30, [sp, #-64]!
    4c0c:	mov	x29, sp
    4c10:	stp	x19, x20, [sp, #16]
    4c14:	cbz	x0, 4cc8 <deflatePrime@@ZLIB_1.2.0.8+0xc0>
    4c18:	mov	w20, w1
    4c1c:	mov	x5, x0
    4c20:	ldr	x1, [x0, #64]
    4c24:	cbz	x1, 4cc8 <deflatePrime@@ZLIB_1.2.0.8+0xc0>
    4c28:	ldr	x1, [x0, #72]
    4c2c:	cbz	x1, 4cc8 <deflatePrime@@ZLIB_1.2.0.8+0xc0>
    4c30:	stp	x23, x24, [sp, #48]
    4c34:	mov	w24, w2
    4c38:	bl	4630 <crc32_combine64@@ZLIB_1.2.3.3+0x1488>
    4c3c:	cbnz	w0, 4ce8 <deflatePrime@@ZLIB_1.2.0.8+0xe0>
    4c40:	ldr	x23, [x5, #56]
    4c44:	ldr	x0, [x23, #32]
    4c48:	ldr	x1, [x23, #5904]
    4c4c:	add	x0, x0, #0x2
    4c50:	cmp	x1, x0
    4c54:	b.cc	4cdc <deflatePrime@@ZLIB_1.2.0.8+0xd4>  // b.lo, b.ul, b.last
    4c58:	stp	x21, x22, [sp, #32]
    4c5c:	mov	w22, #0x10                  	// #16
    4c60:	mov	w21, #0x1                   	// #1
    4c64:	nop
    4c68:	ldr	w1, [x23, #5940]
    4c6c:	mov	x0, x23
    4c70:	ldrh	w2, [x23, #5936]
    4c74:	sub	w19, w22, w1
    4c78:	cmp	w20, w19
    4c7c:	csel	w19, w20, w19, le
    4c80:	add	w3, w1, w19
    4c84:	str	w3, [x23, #5940]
    4c88:	lsl	w3, w21, w19
    4c8c:	sub	w3, w3, #0x1
    4c90:	and	w3, w3, w24
    4c94:	asr	w24, w24, w19
    4c98:	lsl	w3, w3, w1
    4c9c:	orr	w3, w3, w2
    4ca0:	strh	w3, [x23, #5936]
    4ca4:	bl	bad8 <inflateCodesUsed@@ZLIB_1.2.9+0x17e8>
    4ca8:	subs	w20, w20, w19
    4cac:	b.ne	4c68 <deflatePrime@@ZLIB_1.2.0.8+0x60>  // b.any
    4cb0:	ldp	x21, x22, [sp, #32]
    4cb4:	ldp	x23, x24, [sp, #48]
    4cb8:	mov	w0, w20
    4cbc:	ldp	x19, x20, [sp, #16]
    4cc0:	ldp	x29, x30, [sp], #64
    4cc4:	ret
    4cc8:	mov	w20, #0xfffffffe            	// #-2
    4ccc:	mov	w0, w20
    4cd0:	ldp	x19, x20, [sp, #16]
    4cd4:	ldp	x29, x30, [sp], #64
    4cd8:	ret
    4cdc:	mov	w20, #0xfffffffb            	// #-5
    4ce0:	ldp	x23, x24, [sp, #48]
    4ce4:	b	4cb8 <deflatePrime@@ZLIB_1.2.0.8+0xb0>
    4ce8:	mov	w20, #0xfffffffe            	// #-2
    4cec:	ldp	x23, x24, [sp, #48]
    4cf0:	b	4cb8 <deflatePrime@@ZLIB_1.2.0.8+0xb0>
    4cf4:	nop

0000000000004cf8 <deflateTune@@ZLIB_1.2.2.3>:
    4cf8:	cbz	x0, 4d44 <deflateTune@@ZLIB_1.2.2.3+0x4c>
    4cfc:	mov	w7, w1
    4d00:	mov	x5, x0
    4d04:	ldr	x1, [x0, #64]
    4d08:	cbz	x1, 4d44 <deflateTune@@ZLIB_1.2.2.3+0x4c>
    4d0c:	ldr	x1, [x0, #72]
    4d10:	cbz	x1, 4d44 <deflateTune@@ZLIB_1.2.2.3+0x4c>
    4d14:	mov	w8, w2
    4d18:	mov	w6, w3
    4d1c:	mov	w9, w4
    4d20:	stp	x29, x30, [sp, #-16]!
    4d24:	mov	x29, sp
    4d28:	bl	4630 <crc32_combine64@@ZLIB_1.2.3.3+0x1488>
    4d2c:	cbnz	w0, 4d4c <deflateTune@@ZLIB_1.2.2.3+0x54>
    4d30:	ldr	x1, [x5, #56]
    4d34:	stp	w9, w8, [x1, #188]
    4d38:	stp	w7, w6, [x1, #204]
    4d3c:	ldp	x29, x30, [sp], #16
    4d40:	ret
    4d44:	mov	w0, #0xfffffffe            	// #-2
    4d48:	ret
    4d4c:	mov	w0, #0xfffffffe            	// #-2
    4d50:	b	4d3c <deflateTune@@ZLIB_1.2.2.3+0x44>
    4d54:	nop

0000000000004d58 <deflateBound@@ZLIB_1.2.0>:
    4d58:	add	x8, x1, #0x7
    4d5c:	add	x2, x1, #0x3f
    4d60:	mov	x7, x1
    4d64:	lsr	x1, x8, #3
    4d68:	add	x2, x1, x2, lsr #6
    4d6c:	add	x6, x2, x7
    4d70:	cbz	x0, 4e08 <deflateBound@@ZLIB_1.2.0+0xb0>
    4d74:	ldr	x1, [x0, #64]
    4d78:	mov	x5, x0
    4d7c:	cbz	x1, 4e08 <deflateBound@@ZLIB_1.2.0+0xb0>
    4d80:	ldr	x1, [x0, #72]
    4d84:	cbz	x1, 4e08 <deflateBound@@ZLIB_1.2.0+0xb0>
    4d88:	stp	x29, x30, [sp, #-16]!
    4d8c:	mov	x29, sp
    4d90:	bl	4630 <crc32_combine64@@ZLIB_1.2.3.3+0x1488>
    4d94:	cbnz	w0, 4dec <deflateBound@@ZLIB_1.2.0+0x94>
    4d98:	ldr	x1, [x5, #56]
    4d9c:	ldr	w0, [x1, #48]
    4da0:	cmp	w0, #0x1
    4da4:	b.eq	4e80 <deflateBound@@ZLIB_1.2.0+0x128>  // b.none
    4da8:	cmp	w0, #0x2
    4dac:	b.eq	4e10 <deflateBound@@ZLIB_1.2.0+0xb8>  // b.none
    4db0:	cmp	w0, #0x0
    4db4:	mov	x2, #0x6                   	// #6
    4db8:	csel	x2, x2, xzr, ne  // ne = any
    4dbc:	ldr	w0, [x1, #84]
    4dc0:	cmp	w0, #0xf
    4dc4:	b.ne	4df8 <deflateBound@@ZLIB_1.2.0+0xa0>  // b.any
    4dc8:	ldr	w0, [x1, #136]
    4dcc:	cmp	w0, #0xf
    4dd0:	b.ne	4df8 <deflateBound@@ZLIB_1.2.0+0xa0>  // b.any
    4dd4:	lsr	x0, x7, #25
    4dd8:	add	x8, x8, x7, lsr #12
    4ddc:	add	x0, x0, x7, lsr #14
    4de0:	add	x0, x0, x8
    4de4:	add	x0, x0, x2
    4de8:	b	4df0 <deflateBound@@ZLIB_1.2.0+0x98>
    4dec:	add	x0, x6, #0xb
    4df0:	ldp	x29, x30, [sp], #16
    4df4:	ret
    4df8:	add	x0, x6, #0x5
    4dfc:	add	x0, x0, x2
    4e00:	ldp	x29, x30, [sp], #16
    4e04:	ret
    4e08:	add	x0, x6, #0xb
    4e0c:	ret
    4e10:	ldr	x4, [x1, #56]
    4e14:	mov	x2, #0x12                  	// #18
    4e18:	cbz	x4, 4dbc <deflateBound@@ZLIB_1.2.0+0x64>
    4e1c:	ldr	x0, [x4, #24]
    4e20:	cbz	x0, 4e30 <deflateBound@@ZLIB_1.2.0+0xd8>
    4e24:	ldr	w3, [x4, #32]
    4e28:	add	w3, w3, #0x2
    4e2c:	add	x2, x3, x2
    4e30:	ldr	x3, [x4, #40]
    4e34:	cbz	x3, 4e4c <deflateBound@@ZLIB_1.2.0+0xf4>
    4e38:	mvn	x0, x2
    4e3c:	add	x3, x3, x0
    4e40:	add	x2, x2, #0x1
    4e44:	ldrb	w0, [x3, x2]
    4e48:	cbnz	w0, 4e40 <deflateBound@@ZLIB_1.2.0+0xe8>
    4e4c:	ldr	x3, [x4, #56]
    4e50:	cbz	x3, 4e6c <deflateBound@@ZLIB_1.2.0+0x114>
    4e54:	mvn	x0, x2
    4e58:	add	x3, x3, x0
    4e5c:	nop
    4e60:	add	x2, x2, #0x1
    4e64:	ldrb	w0, [x3, x2]
    4e68:	cbnz	w0, 4e60 <deflateBound@@ZLIB_1.2.0+0x108>
    4e6c:	ldr	w3, [x4, #68]
    4e70:	add	x0, x2, #0x2
    4e74:	cmp	w3, #0x0
    4e78:	csel	x2, x0, x2, ne  // ne = any
    4e7c:	b	4dbc <deflateBound@@ZLIB_1.2.0+0x64>
    4e80:	ldr	w0, [x1, #172]
    4e84:	mov	x3, #0xa                   	// #10
    4e88:	mov	x2, #0x6                   	// #6
    4e8c:	cmp	w0, #0x0
    4e90:	csel	x2, x3, x2, ne  // ne = any
    4e94:	b	4dbc <deflateBound@@ZLIB_1.2.0+0x64>

0000000000004e98 <deflate@@Base>:
    4e98:	stp	x29, x30, [sp, #-96]!
    4e9c:	mov	x29, sp
    4ea0:	stp	x21, x22, [sp, #32]
    4ea4:	cbz	x0, 54e4 <deflate@@Base+0x64c>
    4ea8:	mov	w21, w1
    4eac:	stp	x19, x20, [sp, #16]
    4eb0:	mov	x20, x0
    4eb4:	ldr	x1, [x0, #64]
    4eb8:	cbz	x1, 51a8 <deflate@@Base+0x310>
    4ebc:	ldr	x1, [x0, #72]
    4ec0:	cbz	x1, 51a8 <deflate@@Base+0x310>
    4ec4:	bl	4630 <crc32_combine64@@ZLIB_1.2.3.3+0x1488>
    4ec8:	mov	w22, w0
    4ecc:	cbnz	w0, 51a8 <deflate@@Base+0x310>
    4ed0:	cmp	w21, #0x5
    4ed4:	b.hi	51a8 <deflate@@Base+0x310>  // b.pmore
    4ed8:	ldr	x0, [x20, #24]
    4edc:	ldr	x19, [x20, #56]
    4ee0:	cbz	x0, 518c <deflate@@Base+0x2f4>
    4ee4:	ldr	w1, [x20, #8]
    4ee8:	cbnz	w1, 5184 <deflate@@Base+0x2ec>
    4eec:	ldr	w0, [x19, #8]
    4ef0:	cmp	w21, #0x4
    4ef4:	cset	w2, ne  // ne = any
    4ef8:	cmp	w0, #0x29a
    4efc:	ccmp	w2, #0x0, #0x4, eq  // eq = none
    4f00:	b.ne	518c <deflate@@Base+0x2f4>  // b.any
    4f04:	ldr	w3, [x20, #32]
    4f08:	cbz	w3, 5e80 <deflate@@Base+0xfe8>
    4f0c:	ldr	x3, [x19, #40]
    4f10:	ldr	w4, [x19, #76]
    4f14:	str	w21, [x19, #76]
    4f18:	cbnz	x3, 5214 <deflate@@Base+0x37c>
    4f1c:	cbz	w1, 51c0 <deflate@@Base+0x328>
    4f20:	cmp	w0, #0x29a
    4f24:	b.eq	5e80 <deflate@@Base+0xfe8>  // b.none
    4f28:	cmp	w0, #0x2a
    4f2c:	b.ne	504c <deflate@@Base+0x1b4>  // b.any
    4f30:	ldr	w0, [x19, #84]
    4f34:	ldr	w1, [x19, #200]
    4f38:	lsl	w0, w0, #12
    4f3c:	cmp	w1, #0x1
    4f40:	mov	w1, #0xffff8800            	// #-30720
    4f44:	add	w0, w0, w1
    4f48:	b.le	597c <deflate@@Base+0xae4>
    4f4c:	ldr	w3, [x19, #172]
    4f50:	orr	w2, w0, #0x20
    4f54:	mov	w1, #0x1085                	// #4229
    4f58:	cmp	w3, #0x0
    4f5c:	movk	w1, #0x842, lsl #16
    4f60:	csel	w0, w2, w0, ne  // ne = any
    4f64:	ldr	x3, [x19, #16]
    4f68:	umull	x1, w0, w1
    4f6c:	ldr	x2, [x19, #40]
    4f70:	lsr	x1, x1, #32
    4f74:	sub	w0, w0, w1
    4f78:	add	x4, x2, #0x1
    4f7c:	str	x4, [x19, #40]
    4f80:	add	w0, w1, w0, lsr #1
    4f84:	lsr	w0, w0, #4
    4f88:	lsl	w1, w0, #5
    4f8c:	sub	w0, w1, w0
    4f90:	add	w0, w0, #0x1f
    4f94:	lsr	w1, w0, #8
    4f98:	strb	w1, [x3, x2]
    4f9c:	ldr	x2, [x19, #16]
    4fa0:	ldr	x1, [x19, #40]
    4fa4:	add	x3, x1, #0x1
    4fa8:	str	x3, [x19, #40]
    4fac:	strb	w0, [x2, x1]
    4fb0:	ldr	w0, [x19, #172]
    4fb4:	cbz	w0, 501c <deflate@@Base+0x184>
    4fb8:	ldr	x0, [x20, #96]
    4fbc:	ldr	x2, [x19, #16]
    4fc0:	ldr	x1, [x19, #40]
    4fc4:	lsr	x0, x0, #16
    4fc8:	add	x3, x1, #0x1
    4fcc:	str	x3, [x19, #40]
    4fd0:	lsr	w3, w0, #8
    4fd4:	strb	w3, [x2, x1]
    4fd8:	ldr	x2, [x19, #16]
    4fdc:	ldr	x1, [x19, #40]
    4fe0:	add	x3, x1, #0x1
    4fe4:	str	x3, [x19, #40]
    4fe8:	strb	w0, [x2, x1]
    4fec:	ldr	x2, [x19, #16]
    4ff0:	ldr	x0, [x19, #40]
    4ff4:	ldrh	w1, [x20, #96]
    4ff8:	add	x3, x0, #0x1
    4ffc:	str	x3, [x19, #40]
    5000:	lsr	w3, w1, #8
    5004:	strb	w3, [x2, x0]
    5008:	ldr	x2, [x19, #16]
    500c:	ldr	x0, [x19, #40]
    5010:	add	x3, x0, #0x1
    5014:	str	x3, [x19, #40]
    5018:	strb	w1, [x2, x0]
    501c:	mov	w2, #0x0                   	// #0
    5020:	mov	x1, #0x0                   	// #0
    5024:	mov	x0, #0x0                   	// #0
    5028:	bl	2560 <adler32@plt>
    502c:	str	x0, [x20, #96]
    5030:	mov	w0, #0x71                  	// #113
    5034:	str	w0, [x19, #8]
    5038:	mov	x0, x20
    503c:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    5040:	ldr	x0, [x19, #40]
    5044:	cbnz	x0, 53a0 <deflate@@Base+0x508>
    5048:	ldr	w0, [x19, #8]
    504c:	cmp	w0, #0x39
    5050:	b.eq	54f8 <deflate@@Base+0x660>  // b.none
    5054:	cmp	w0, #0x45
    5058:	b.eq	5948 <deflate@@Base+0xab0>  // b.none
    505c:	cmp	w0, #0x49
    5060:	b.eq	5b88 <deflate@@Base+0xcf0>  // b.none
    5064:	cmp	w0, #0x5b
    5068:	b.eq	5e54 <deflate@@Base+0xfbc>  // b.none
    506c:	cmp	w0, #0x67
    5070:	b.eq	5b44 <deflate@@Base+0xcac>  // b.none
    5074:	ldr	w1, [x20, #8]
    5078:	cbz	w1, 51f8 <deflate@@Base+0x360>
    507c:	ldr	w0, [x19, #196]
    5080:	cbz	w0, 5950 <deflate@@Base+0xab8>
    5084:	ldr	w1, [x19, #200]
    5088:	cmp	w1, #0x2
    508c:	b.eq	52d8 <deflate@@Base+0x440>  // b.none
    5090:	cmp	w1, #0x3
    5094:	b.eq	53bc <deflate@@Base+0x524>  // b.none
    5098:	adrp	x2, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    509c:	add	x2, x2, #0xc68
    50a0:	add	x2, x2, w0, sxtw #4
    50a4:	mov	w1, w21
    50a8:	mov	x0, x19
    50ac:	ldr	x2, [x2, #8]
    50b0:	blr	x2
    50b4:	sub	w1, w0, #0x2
    50b8:	and	w2, w0, #0xfffffffd
    50bc:	cmp	w1, #0x1
    50c0:	b.hi	5358 <deflate@@Base+0x4c0>  // b.pmore
    50c4:	mov	w0, #0x29a                 	// #666
    50c8:	str	w0, [x19, #8]
    50cc:	cbz	w2, 54c8 <deflate@@Base+0x630>
    50d0:	cmp	w21, #0x4
    50d4:	b.ne	54d0 <deflate@@Base+0x638>  // b.any
    50d8:	ldr	w0, [x19, #48]
    50dc:	mov	w22, #0x1                   	// #1
    50e0:	cmp	w0, #0x0
    50e4:	b.le	54d0 <deflate@@Base+0x638>
    50e8:	ldr	x1, [x19, #40]
    50ec:	cmp	w0, #0x2
    50f0:	ldr	x2, [x19, #16]
    50f4:	add	x3, x1, #0x1
    50f8:	ldr	x0, [x20, #96]
    50fc:	b.eq	5a5c <deflate@@Base+0xbc4>  // b.none
    5100:	lsr	x0, x0, #16
    5104:	str	x3, [x19, #40]
    5108:	lsr	w3, w0, #8
    510c:	strb	w3, [x2, x1]
    5110:	ldr	x2, [x19, #16]
    5114:	ldr	x1, [x19, #40]
    5118:	add	x3, x1, #0x1
    511c:	str	x3, [x19, #40]
    5120:	strb	w0, [x2, x1]
    5124:	ldr	x2, [x19, #16]
    5128:	ldr	x0, [x19, #40]
    512c:	ldrh	w1, [x20, #96]
    5130:	add	x3, x0, #0x1
    5134:	str	x3, [x19, #40]
    5138:	lsr	w3, w1, #8
    513c:	strb	w3, [x2, x0]
    5140:	ldr	x2, [x19, #16]
    5144:	ldr	x0, [x19, #40]
    5148:	add	x3, x0, #0x1
    514c:	str	x3, [x19, #40]
    5150:	strb	w1, [x2, x0]
    5154:	mov	x0, x20
    5158:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    515c:	ldr	w0, [x19, #48]
    5160:	cmp	w0, #0x0
    5164:	b.le	5170 <deflate@@Base+0x2d8>
    5168:	neg	w0, w0
    516c:	str	w0, [x19, #48]
    5170:	ldr	x0, [x19, #40]
    5174:	ldp	x19, x20, [sp, #16]
    5178:	cmp	x0, #0x0
    517c:	cset	w22, eq  // eq = none
    5180:	b	51b0 <deflate@@Base+0x318>
    5184:	ldr	x0, [x20]
    5188:	cbnz	x0, 4eec <deflate@@Base+0x54>
    518c:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    5190:	mov	w22, #0xfffffffe            	// #-2
    5194:	ldr	x0, [x0, #4056]
    5198:	ldr	x0, [x0, #32]
    519c:	str	x0, [x20, #48]
    51a0:	ldp	x19, x20, [sp, #16]
    51a4:	b	51b0 <deflate@@Base+0x318>
    51a8:	ldp	x19, x20, [sp, #16]
    51ac:	mov	w22, #0xfffffffe            	// #-2
    51b0:	mov	w0, w22
    51b4:	ldp	x21, x22, [sp, #32]
    51b8:	ldp	x29, x30, [sp], #96
    51bc:	ret
    51c0:	cmp	w21, #0x5
    51c4:	lsl	w3, w4, #1
    51c8:	lsl	w1, w21, #1
    51cc:	sub	w5, w3, #0x9
    51d0:	csinc	w1, w1, wzr, ne  // ne = any
    51d4:	cmp	w4, #0x4
    51d8:	csel	w3, w5, w3, gt
    51dc:	cmp	w2, #0x0
    51e0:	ccmp	w1, w3, #0x0, ne  // ne = any
    51e4:	b.le	5e80 <deflate@@Base+0xfe8>
    51e8:	cmp	w0, #0x29a
    51ec:	b.ne	4f28 <deflate@@Base+0x90>  // b.any
    51f0:	ldr	w1, [x20, #8]
    51f4:	cbnz	w1, 5e80 <deflate@@Base+0xfe8>
    51f8:	ldr	w2, [x19, #180]
    51fc:	cbnz	w2, 507c <deflate@@Base+0x1e4>
    5200:	cbz	w21, 54d0 <deflate@@Base+0x638>
    5204:	ldr	w0, [x19, #8]
    5208:	cmp	w0, #0x29a
    520c:	b.ne	507c <deflate@@Base+0x1e4>  // b.any
    5210:	b	50d0 <deflate@@Base+0x238>
    5214:	mov	x0, x20
    5218:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    521c:	ldr	w0, [x20, #32]
    5220:	cbz	w0, 53a0 <deflate@@Base+0x508>
    5224:	ldr	w0, [x19, #8]
    5228:	b	51e8 <deflate@@Base+0x350>
    522c:	cbz	w2, 52e0 <deflate@@Base+0x448>
    5230:	ldr	w2, [x19, #172]
    5234:	ldr	x3, [x19, #96]
    5238:	str	wzr, [x19, #160]
    523c:	ldr	w0, [x19, #5900]
    5240:	ldr	x1, [x19, #5904]
    5244:	add	w4, w0, #0x1
    5248:	ldrb	w2, [x3, x2]
    524c:	ldr	x3, [x19, #5888]
    5250:	strh	wzr, [x1, w0, uxtw #1]
    5254:	add	x1, x19, w2, uxtb #2
    5258:	str	w4, [x19, #5900]
    525c:	strb	w2, [x3, w0, uxtw]
    5260:	ldrh	w0, [x1, #212]
    5264:	add	w0, w0, #0x1
    5268:	strh	w0, [x1, #212]
    526c:	ldr	w0, [x19, #172]
    5270:	ldr	w2, [x19, #180]
    5274:	ldr	w1, [x19, #5896]
    5278:	add	w0, w0, #0x1
    527c:	ldr	w3, [x19, #5900]
    5280:	sub	w2, w2, #0x1
    5284:	str	w0, [x19, #172]
    5288:	sub	w1, w1, #0x1
    528c:	str	w2, [x19, #180]
    5290:	cmp	w3, w1
    5294:	b.ne	522c <deflate@@Base+0x394>  // b.any
    5298:	ldr	x2, [x19, #152]
    529c:	mov	x1, #0x0                   	// #0
    52a0:	tbnz	x2, #63, 52ac <deflate@@Base+0x414>
    52a4:	ldr	x1, [x19, #96]
    52a8:	add	x1, x1, w2, uxtw
    52ac:	sub	x2, x0, x2
    52b0:	mov	w3, #0x0                   	// #0
    52b4:	mov	x0, x19
    52b8:	bl	bbc0 <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
    52bc:	ldr	w1, [x19, #172]
    52c0:	ldr	x0, [x19]
    52c4:	str	x1, [x19, #152]
    52c8:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    52cc:	ldr	x0, [x19]
    52d0:	ldr	w0, [x0, #32]
    52d4:	cbz	w0, 54c8 <deflate@@Base+0x630>
    52d8:	ldr	w2, [x19, #180]
    52dc:	cbnz	w2, 5230 <deflate@@Base+0x398>
    52e0:	mov	x0, x19
    52e4:	bl	34e8 <crc32_combine64@@ZLIB_1.2.3.3+0x340>
    52e8:	ldr	w0, [x19, #180]
    52ec:	cbnz	w0, 5230 <deflate@@Base+0x398>
    52f0:	cbz	w21, 54c8 <deflate@@Base+0x630>
    52f4:	str	wzr, [x19, #5932]
    52f8:	cmp	w21, #0x4
    52fc:	b.eq	5ebc <deflate@@Base+0x1024>  // b.none
    5300:	ldr	w0, [x19, #5900]
    5304:	cbz	w0, 5364 <deflate@@Base+0x4cc>
    5308:	ldr	x2, [x19, #152]
    530c:	mov	x1, #0x0                   	// #0
    5310:	tbnz	x2, #63, 531c <deflate@@Base+0x484>
    5314:	ldr	x1, [x19, #96]
    5318:	add	x1, x1, w2, uxtw
    531c:	ldr	w4, [x19, #172]
    5320:	mov	x0, x19
    5324:	mov	w3, #0x0                   	// #0
    5328:	sub	x2, x4, x2
    532c:	bl	bbc0 <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
    5330:	ldr	w1, [x19, #172]
    5334:	ldr	x0, [x19]
    5338:	str	x1, [x19, #152]
    533c:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    5340:	ldr	x0, [x19]
    5344:	ldr	w0, [x0, #32]
    5348:	cmp	w0, #0x0
    534c:	cset	w0, ne  // ne = any
    5350:	mov	w2, w0
    5354:	nop
    5358:	cbz	w2, 54c8 <deflate@@Base+0x630>
    535c:	cmp	w0, #0x1
    5360:	b.ne	50d0 <deflate@@Base+0x238>  // b.any
    5364:	cmp	w21, #0x1
    5368:	b.eq	5b50 <deflate@@Base+0xcb8>  // b.none
    536c:	cmp	w21, #0x5
    5370:	b.eq	5b58 <deflate@@Base+0xcc0>  // b.none
    5374:	mov	x0, x19
    5378:	mov	w3, #0x0                   	// #0
    537c:	mov	x2, #0x0                   	// #0
    5380:	mov	x1, #0x0                   	// #0
    5384:	bl	b9a0 <inflateCodesUsed@@ZLIB_1.2.9+0x16b0>
    5388:	cmp	w21, #0x3
    538c:	b.eq	5f70 <deflate@@Base+0x10d8>  // b.none
    5390:	mov	x0, x20
    5394:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    5398:	ldr	w0, [x20, #32]
    539c:	cbnz	w0, 50d0 <deflate@@Base+0x238>
    53a0:	mov	w0, #0xffffffff            	// #-1
    53a4:	str	w0, [x19, #76]
    53a8:	mov	w0, w22
    53ac:	ldp	x19, x20, [sp, #16]
    53b0:	ldp	x21, x22, [sp, #32]
    53b4:	ldp	x29, x30, [sp], #96
    53b8:	ret
    53bc:	stp	x23, x24, [sp, #48]
    53c0:	adrp	x24, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    53c4:	adrp	x23, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    53c8:	add	x24, x24, #0xe78
    53cc:	add	x23, x23, #0x68
    53d0:	stp	x25, x26, [sp, #64]
    53d4:	ldr	w2, [x19, #180]
    53d8:	mov	w25, #0x102                 	// #258
    53dc:	nop
    53e0:	cmp	w2, #0x102
    53e4:	b.ls	5c64 <deflate@@Base+0xdcc>  // b.plast
    53e8:	ldr	w0, [x19, #172]
    53ec:	ldr	x1, [x19, #96]
    53f0:	mov	w3, w0
    53f4:	str	wzr, [x19, #160]
    53f8:	cbz	w0, 5418 <deflate@@Base+0x580>
    53fc:	sub	x0, x3, #0x1
    5400:	add	x4, x1, x0
    5404:	ldrb	w5, [x1, x0]
    5408:	ldrb	w0, [x4, #1]
    540c:	cmp	w0, w5
    5410:	b.eq	5c9c <deflate@@Base+0xe04>  // b.none
    5414:	nop
    5418:	ldr	w0, [x19, #5900]
    541c:	ldr	x5, [x19, #5904]
    5420:	add	w4, w0, #0x1
    5424:	ldrb	w2, [x1, x3]
    5428:	ldr	x3, [x19, #5888]
    542c:	strh	wzr, [x5, w0, uxtw #1]
    5430:	add	x1, x19, w2, uxtb #2
    5434:	str	w4, [x19, #5900]
    5438:	strb	w2, [x3, w0, uxtw]
    543c:	ldrh	w0, [x1, #212]
    5440:	add	w0, w0, #0x1
    5444:	strh	w0, [x1, #212]
    5448:	ldr	w1, [x19, #5896]
    544c:	ldr	w2, [x19, #5900]
    5450:	sub	w1, w1, #0x1
    5454:	ldr	w0, [x19, #172]
    5458:	cmp	w1, w2
    545c:	ldr	w2, [x19, #180]
    5460:	cset	w1, eq  // eq = none
    5464:	add	w0, w0, #0x1
    5468:	sub	w2, w2, #0x1
    546c:	str	w0, [x19, #172]
    5470:	str	w2, [x19, #180]
    5474:	cbz	w1, 53e0 <deflate@@Base+0x548>
    5478:	ldr	x2, [x19, #152]
    547c:	mov	x1, #0x0                   	// #0
    5480:	tbnz	x2, #63, 548c <deflate@@Base+0x5f4>
    5484:	ldr	x1, [x19, #96]
    5488:	add	x1, x1, w2, uxtw
    548c:	ldr	w4, [x19, #172]
    5490:	mov	x0, x19
    5494:	mov	w3, #0x0                   	// #0
    5498:	sub	x2, x4, x2
    549c:	bl	bbc0 <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
    54a0:	ldr	w1, [x19, #172]
    54a4:	ldr	x0, [x19]
    54a8:	str	x1, [x19, #152]
    54ac:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    54b0:	ldr	x0, [x19]
    54b4:	ldr	w0, [x0, #32]
    54b8:	cbnz	w0, 53d4 <deflate@@Base+0x53c>
    54bc:	ldp	x23, x24, [sp, #48]
    54c0:	ldp	x25, x26, [sp, #64]
    54c4:	nop
    54c8:	ldr	w0, [x20, #32]
    54cc:	cbz	w0, 53a0 <deflate@@Base+0x508>
    54d0:	mov	w0, w22
    54d4:	ldp	x19, x20, [sp, #16]
    54d8:	ldp	x21, x22, [sp, #32]
    54dc:	ldp	x29, x30, [sp], #96
    54e0:	ret
    54e4:	mov	w22, #0xfffffffe            	// #-2
    54e8:	mov	w0, w22
    54ec:	ldp	x21, x22, [sp, #32]
    54f0:	ldp	x29, x30, [sp], #96
    54f4:	ret
    54f8:	mov	w2, #0x0                   	// #0
    54fc:	mov	x1, #0x0                   	// #0
    5500:	mov	x0, #0x0                   	// #0
    5504:	bl	2430 <crc32@plt>
    5508:	ldr	x1, [x19, #16]
    550c:	str	x0, [x20, #96]
    5510:	ldr	x0, [x19, #40]
    5514:	mov	w4, #0x1f                  	// #31
    5518:	mov	w3, #0xffffff8b            	// #-117
    551c:	mov	w2, #0x8                   	// #8
    5520:	add	x5, x0, #0x1
    5524:	str	x5, [x19, #40]
    5528:	strb	w4, [x1, x0]
    552c:	ldr	x1, [x19, #16]
    5530:	ldr	x0, [x19, #40]
    5534:	add	x4, x0, #0x1
    5538:	str	x4, [x19, #40]
    553c:	strb	w3, [x1, x0]
    5540:	ldr	x1, [x19, #16]
    5544:	ldr	x0, [x19, #40]
    5548:	add	x3, x0, #0x1
    554c:	str	x3, [x19, #40]
    5550:	strb	w2, [x1, x0]
    5554:	ldr	x1, [x19, #56]
    5558:	cbz	x1, 5b90 <deflate@@Base+0xcf8>
    555c:	ldr	w0, [x1]
    5560:	mov	w3, #0x2                   	// #2
    5564:	ldr	w5, [x1, #68]
    5568:	cmp	w0, #0x0
    556c:	ldr	x2, [x1, #24]
    5570:	cset	w0, ne  // ne = any
    5574:	add	w4, w0, w3
    5578:	cmp	w5, #0x0
    557c:	csel	w0, w0, w4, eq  // eq = none
    5580:	cmp	x2, #0x0
    5584:	cset	w2, ne  // ne = any
    5588:	ldr	x5, [x1, #40]
    558c:	lsl	w2, w2, #2
    5590:	add	w4, w2, #0x8
    5594:	cmp	x5, #0x0
    5598:	csel	w2, w4, w2, ne  // ne = any
    559c:	ldr	x5, [x19, #16]
    55a0:	add	w0, w0, w2
    55a4:	ldr	x4, [x19, #40]
    55a8:	add	w2, w0, #0x10
    55ac:	ldr	x6, [x1, #56]
    55b0:	and	w1, w2, #0xff
    55b4:	add	x2, x4, #0x1
    55b8:	str	x2, [x19, #40]
    55bc:	cmp	x6, #0x0
    55c0:	csel	w0, w0, w1, eq  // eq = none
    55c4:	strb	w0, [x5, x4]
    55c8:	ldr	x2, [x19, #56]
    55cc:	ldr	x1, [x19, #16]
    55d0:	ldr	x0, [x19, #40]
    55d4:	ldr	x2, [x2, #8]
    55d8:	add	x4, x0, #0x1
    55dc:	str	x4, [x19, #40]
    55e0:	strb	w2, [x1, x0]
    55e4:	ldr	x0, [x19, #56]
    55e8:	ldr	x2, [x19, #16]
    55ec:	ldr	x0, [x0, #8]
    55f0:	ldr	x1, [x19, #40]
    55f4:	lsr	x0, x0, #8
    55f8:	add	x4, x1, #0x1
    55fc:	str	x4, [x19, #40]
    5600:	strb	w0, [x2, x1]
    5604:	ldr	x0, [x19, #56]
    5608:	ldr	x2, [x19, #16]
    560c:	ldr	x0, [x0, #8]
    5610:	ldr	x1, [x19, #40]
    5614:	lsr	x0, x0, #16
    5618:	add	x4, x1, #0x1
    561c:	str	x4, [x19, #40]
    5620:	strb	w0, [x2, x1]
    5624:	ldr	x0, [x19, #56]
    5628:	ldr	x2, [x19, #16]
    562c:	ldr	x0, [x0, #8]
    5630:	ldr	x1, [x19, #40]
    5634:	lsr	x0, x0, #24
    5638:	add	x4, x1, #0x1
    563c:	str	x4, [x19, #40]
    5640:	strb	w0, [x2, x1]
    5644:	ldr	w0, [x19, #196]
    5648:	cmp	w0, #0x9
    564c:	b.eq	5664 <deflate@@Base+0x7cc>  // b.none
    5650:	ldr	w1, [x19, #200]
    5654:	cmp	w1, #0x1
    5658:	ccmp	w0, #0x1, #0x4, le
    565c:	cset	w3, le
    5660:	lsl	w3, w3, #2
    5664:	ldr	x1, [x19, #16]
    5668:	ldr	x0, [x19, #40]
    566c:	add	x2, x0, #0x1
    5670:	str	x2, [x19, #40]
    5674:	strb	w3, [x1, x0]
    5678:	ldr	x2, [x19, #56]
    567c:	ldr	x1, [x19, #16]
    5680:	ldr	x0, [x19, #40]
    5684:	ldr	w2, [x2, #20]
    5688:	add	x3, x0, #0x1
    568c:	str	x3, [x19, #40]
    5690:	strb	w2, [x1, x0]
    5694:	ldr	x3, [x19, #56]
    5698:	ldr	x0, [x3, #24]
    569c:	cbz	x0, 56dc <deflate@@Base+0x844>
    56a0:	ldr	x1, [x19, #16]
    56a4:	ldr	x0, [x19, #40]
    56a8:	ldr	w2, [x3, #32]
    56ac:	add	x3, x0, #0x1
    56b0:	str	x3, [x19, #40]
    56b4:	strb	w2, [x1, x0]
    56b8:	ldr	x0, [x19, #56]
    56bc:	ldr	x2, [x19, #16]
    56c0:	ldr	x1, [x19, #40]
    56c4:	ldr	w0, [x0, #32]
    56c8:	add	x3, x1, #0x1
    56cc:	str	x3, [x19, #40]
    56d0:	lsr	w0, w0, #8
    56d4:	strb	w0, [x2, x1]
    56d8:	ldr	x3, [x19, #56]
    56dc:	ldr	w0, [x3, #68]
    56e0:	cbnz	w0, 5b28 <deflate@@Base+0xc90>
    56e4:	mov	w0, #0x45                  	// #69
    56e8:	str	w0, [x19, #8]
    56ec:	str	xzr, [x19, #64]
    56f0:	ldr	x4, [x3, #24]
    56f4:	cbz	x4, 5804 <deflate@@Base+0x96c>
    56f8:	ldr	x1, [x19, #64]
    56fc:	stp	x23, x24, [sp, #48]
    5700:	stp	x25, x26, [sp, #64]
    5704:	ldrh	w25, [x3, #32]
    5708:	ldr	x23, [x19, #40]
    570c:	sub	w24, w25, w1
    5710:	ldr	x3, [x19, #24]
    5714:	add	x0, x23, x24
    5718:	sub	w25, w25, w1
    571c:	cmp	x0, x3
    5720:	b.ls	57c4 <deflate@@Base+0x92c>  // b.plast
    5724:	str	x27, [sp, #80]
    5728:	b	5768 <deflate@@Base+0x8d0>
    572c:	ldr	x2, [x19, #64]
    5730:	mov	x0, x20
    5734:	add	x2, x2, x27
    5738:	str	x2, [x19, #64]
    573c:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    5740:	ldr	x23, [x19, #40]
    5744:	sub	w3, w26, w24
    5748:	add	w24, w25, w3
    574c:	mov	x25, x24
    5750:	cbnz	x23, 5b64 <deflate@@Base+0xccc>
    5754:	ldp	x0, x1, [x19, #56]
    5758:	ldr	x3, [x19, #24]
    575c:	cmp	x3, w24, uxtw
    5760:	ldr	x4, [x0, #24]
    5764:	b.cs	57c0 <deflate@@Base+0x928>  // b.hs, b.nlast
    5768:	ldr	x0, [x19, #16]
    576c:	sub	w27, w3, w23
    5770:	mov	x2, x27
    5774:	add	x1, x4, x1
    5778:	mov	w24, w3
    577c:	add	x0, x0, x23
    5780:	bl	23a0 <memcpy@plt>
    5784:	mov	w26, w23
    5788:	ldr	x0, [x19, #56]
    578c:	ldr	x2, [x19, #24]
    5790:	ldr	w0, [x0, #68]
    5794:	str	x2, [x19, #40]
    5798:	cmp	w0, #0x0
    579c:	ccmp	x2, x23, #0x0, ne  // ne = any
    57a0:	b.ls	572c <deflate@@Base+0x894>  // b.plast
    57a4:	ldr	x0, [x20, #96]
    57a8:	sub	w2, w2, w23
    57ac:	ldr	x1, [x19, #16]
    57b0:	add	x1, x1, x23
    57b4:	bl	2430 <crc32@plt>
    57b8:	str	x0, [x20, #96]
    57bc:	b	572c <deflate@@Base+0x894>
    57c0:	ldr	x27, [sp, #80]
    57c4:	mov	x2, x24
    57c8:	ldr	x0, [x19, #16]
    57cc:	add	x1, x4, x1
    57d0:	add	x0, x0, x23
    57d4:	bl	23a0 <memcpy@plt>
    57d8:	ldr	x3, [x19, #56]
    57dc:	ldr	x2, [x19, #40]
    57e0:	ldr	w0, [x3, #68]
    57e4:	add	x2, x24, x2
    57e8:	str	x2, [x19, #40]
    57ec:	cmp	w0, #0x0
    57f0:	ccmp	x2, x23, #0x0, ne  // ne = any
    57f4:	b.hi	5e9c <deflate@@Base+0x1004>  // b.pmore
    57f8:	ldp	x23, x24, [sp, #48]
    57fc:	ldp	x25, x26, [sp, #64]
    5800:	str	xzr, [x19, #64]
    5804:	mov	w0, #0x49                  	// #73
    5808:	str	w0, [x19, #8]
    580c:	ldr	x0, [x3, #40]
    5810:	cbz	x0, 58c4 <deflate@@Base+0xa2c>
    5814:	ldr	x1, [x19, #40]
    5818:	mov	x2, x1
    581c:	b	5850 <deflate@@Base+0x9b8>
    5820:	ldr	x0, [x19, #64]
    5824:	add	x4, x2, #0x1
    5828:	ldr	x5, [x3, #40]
    582c:	add	x3, x0, #0x1
    5830:	str	x3, [x19, #64]
    5834:	ldr	x3, [x19, #16]
    5838:	ldrb	w0, [x5, x0]
    583c:	str	x4, [x19, #40]
    5840:	strb	w0, [x3, x2]
    5844:	cbz	w0, 5888 <deflate@@Base+0x9f0>
    5848:	ldr	x2, [x19, #40]
    584c:	ldr	x3, [x19, #56]
    5850:	ldr	x0, [x19, #24]
    5854:	cmp	x0, x2
    5858:	b.ne	5820 <deflate@@Base+0x988>  // b.any
    585c:	ldr	w0, [x3, #68]
    5860:	cmp	w0, #0x0
    5864:	ccmp	x1, x2, #0x2, ne  // ne = any
    5868:	b.cc	5960 <deflate@@Base+0xac8>  // b.lo, b.ul, b.last
    586c:	mov	x0, x20
    5870:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    5874:	ldr	x2, [x19, #40]
    5878:	mov	x1, #0x0                   	// #0
    587c:	cbnz	x2, 53a0 <deflate@@Base+0x508>
    5880:	ldr	x3, [x19, #56]
    5884:	b	5820 <deflate@@Base+0x988>
    5888:	ldr	x3, [x19, #56]
    588c:	ldr	w0, [x3, #68]
    5890:	cbz	w0, 58c0 <deflate@@Base+0xa28>
    5894:	ldr	x2, [x19, #40]
    5898:	cmp	x2, x1
    589c:	b.ls	58c0 <deflate@@Base+0xa28>  // b.plast
    58a0:	ldr	x3, [x19, #16]
    58a4:	sub	w2, w2, w1
    58a8:	ldr	x0, [x20, #96]
    58ac:	add	x1, x3, x1
    58b0:	bl	2430 <crc32@plt>
    58b4:	ldr	x3, [x19, #56]
    58b8:	str	x0, [x20, #96]
    58bc:	nop
    58c0:	str	xzr, [x19, #64]
    58c4:	mov	w0, #0x5b                  	// #91
    58c8:	str	w0, [x19, #8]
    58cc:	ldr	x0, [x3, #56]
    58d0:	cbz	x0, 5b80 <deflate@@Base+0xce8>
    58d4:	ldr	x1, [x19, #40]
    58d8:	mov	x2, x1
    58dc:	b	5910 <deflate@@Base+0xa78>
    58e0:	ldr	x0, [x19, #64]
    58e4:	add	x4, x2, #0x1
    58e8:	ldr	x5, [x3, #56]
    58ec:	add	x3, x0, #0x1
    58f0:	str	x3, [x19, #64]
    58f4:	ldr	x3, [x19, #16]
    58f8:	ldrb	w0, [x5, x0]
    58fc:	str	x4, [x19, #40]
    5900:	strb	w0, [x3, x2]
    5904:	cbz	w0, 59b4 <deflate@@Base+0xb1c>
    5908:	ldr	x2, [x19, #40]
    590c:	ldr	x3, [x19, #56]
    5910:	ldr	x0, [x19, #24]
    5914:	cmp	x0, x2
    5918:	b.ne	58e0 <deflate@@Base+0xa48>  // b.any
    591c:	ldr	w0, [x3, #68]
    5920:	cmp	w0, #0x0
    5924:	ccmp	x1, x2, #0x2, ne  // ne = any
    5928:	b.cc	5998 <deflate@@Base+0xb00>  // b.lo, b.ul, b.last
    592c:	mov	x0, x20
    5930:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    5934:	ldr	x2, [x19, #40]
    5938:	mov	x1, #0x0                   	// #0
    593c:	cbnz	x2, 53a0 <deflate@@Base+0x508>
    5940:	ldr	x3, [x19, #56]
    5944:	b	58e0 <deflate@@Base+0xa48>
    5948:	ldr	x3, [x19, #56]
    594c:	b	56f0 <deflate@@Base+0x858>
    5950:	mov	w1, w21
    5954:	mov	x0, x19
    5958:	bl	40e0 <crc32_combine64@@ZLIB_1.2.3.3+0xf38>
    595c:	b	50b4 <deflate@@Base+0x21c>
    5960:	ldr	x3, [x19, #16]
    5964:	sub	w2, w2, w1
    5968:	ldr	x0, [x20, #96]
    596c:	add	x1, x3, x1
    5970:	bl	2430 <crc32@plt>
    5974:	str	x0, [x20, #96]
    5978:	b	586c <deflate@@Base+0x9d4>
    597c:	ldr	w1, [x19, #196]
    5980:	cmp	w1, #0x1
    5984:	b.le	4f4c <deflate@@Base+0xb4>
    5988:	cmp	w1, #0x5
    598c:	b.gt	5dd4 <deflate@@Base+0xf3c>
    5990:	orr	w0, w0, #0x40
    5994:	b	4f4c <deflate@@Base+0xb4>
    5998:	ldr	x3, [x19, #16]
    599c:	sub	w2, w2, w1
    59a0:	ldr	x0, [x20, #96]
    59a4:	add	x1, x3, x1
    59a8:	bl	2430 <crc32@plt>
    59ac:	str	x0, [x20, #96]
    59b0:	b	592c <deflate@@Base+0xa94>
    59b4:	ldr	x0, [x19, #56]
    59b8:	ldr	w0, [x0, #68]
    59bc:	cbz	w0, 5a40 <deflate@@Base+0xba8>
    59c0:	ldr	x2, [x19, #40]
    59c4:	cmp	x2, x1
    59c8:	b.hi	5e5c <deflate@@Base+0xfc4>  // b.pmore
    59cc:	mov	w1, #0x67                  	// #103
    59d0:	str	w1, [x19, #8]
    59d4:	cbz	w0, 5a40 <deflate@@Base+0xba8>
    59d8:	ldr	x0, [x19, #40]
    59dc:	ldr	x1, [x19, #24]
    59e0:	add	x2, x0, #0x2
    59e4:	cmp	x2, x1
    59e8:	b.ls	59fc <deflate@@Base+0xb64>  // b.plast
    59ec:	mov	x0, x20
    59f0:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    59f4:	ldr	x0, [x19, #40]
    59f8:	cbnz	x0, 53a0 <deflate@@Base+0x508>
    59fc:	ldr	x1, [x19, #16]
    5a00:	add	x3, x0, #0x1
    5a04:	ldr	x2, [x20, #96]
    5a08:	str	x3, [x19, #40]
    5a0c:	strb	w2, [x1, x0]
    5a10:	mov	w2, #0x0                   	// #0
    5a14:	mov	x1, #0x0                   	// #0
    5a18:	mov	x0, #0x0                   	// #0
    5a1c:	ldr	x3, [x20, #96]
    5a20:	ldr	x5, [x19, #16]
    5a24:	ldr	x4, [x19, #40]
    5a28:	lsr	x3, x3, #8
    5a2c:	add	x6, x4, #0x1
    5a30:	str	x6, [x19, #40]
    5a34:	strb	w3, [x5, x4]
    5a38:	bl	2430 <crc32@plt>
    5a3c:	str	x0, [x20, #96]
    5a40:	mov	w0, #0x71                  	// #113
    5a44:	str	w0, [x19, #8]
    5a48:	mov	x0, x20
    5a4c:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    5a50:	ldr	x0, [x19, #40]
    5a54:	cbz	x0, 5074 <deflate@@Base+0x1dc>
    5a58:	b	53a0 <deflate@@Base+0x508>
    5a5c:	str	x3, [x19, #40]
    5a60:	strb	w0, [x2, x1]
    5a64:	ldr	x2, [x19, #16]
    5a68:	ldr	x1, [x19, #40]
    5a6c:	ldr	x0, [x20, #96]
    5a70:	add	x3, x1, #0x1
    5a74:	str	x3, [x19, #40]
    5a78:	lsr	x0, x0, #8
    5a7c:	strb	w0, [x2, x1]
    5a80:	ldr	x2, [x19, #16]
    5a84:	ldr	x1, [x19, #40]
    5a88:	ldr	x0, [x20, #96]
    5a8c:	add	x3, x1, #0x1
    5a90:	str	x3, [x19, #40]
    5a94:	lsr	x0, x0, #16
    5a98:	strb	w0, [x2, x1]
    5a9c:	ldr	x2, [x19, #16]
    5aa0:	ldr	x1, [x19, #40]
    5aa4:	ldr	x0, [x20, #96]
    5aa8:	add	x3, x1, #0x1
    5aac:	str	x3, [x19, #40]
    5ab0:	lsr	x0, x0, #24
    5ab4:	strb	w0, [x2, x1]
    5ab8:	ldr	x1, [x19, #16]
    5abc:	ldr	x0, [x19, #40]
    5ac0:	ldr	x2, [x20, #16]
    5ac4:	add	x3, x0, #0x1
    5ac8:	str	x3, [x19, #40]
    5acc:	strb	w2, [x1, x0]
    5ad0:	ldr	x0, [x20, #16]
    5ad4:	ldr	x2, [x19, #16]
    5ad8:	ldr	x1, [x19, #40]
    5adc:	lsr	x0, x0, #8
    5ae0:	add	x3, x1, #0x1
    5ae4:	str	x3, [x19, #40]
    5ae8:	strb	w0, [x2, x1]
    5aec:	ldr	x0, [x20, #16]
    5af0:	ldr	x2, [x19, #16]
    5af4:	ldr	x1, [x19, #40]
    5af8:	lsr	x0, x0, #16
    5afc:	add	x3, x1, #0x1
    5b00:	str	x3, [x19, #40]
    5b04:	strb	w0, [x2, x1]
    5b08:	ldr	x0, [x20, #16]
    5b0c:	ldr	x2, [x19, #16]
    5b10:	ldr	x1, [x19, #40]
    5b14:	lsr	x0, x0, #24
    5b18:	add	x3, x1, #0x1
    5b1c:	str	x3, [x19, #40]
    5b20:	strb	w0, [x2, x1]
    5b24:	b	5154 <deflate@@Base+0x2bc>
    5b28:	ldr	w2, [x19, #40]
    5b2c:	ldr	x1, [x19, #16]
    5b30:	ldr	x0, [x20, #96]
    5b34:	bl	2430 <crc32@plt>
    5b38:	ldr	x3, [x19, #56]
    5b3c:	str	x0, [x20, #96]
    5b40:	b	56e4 <deflate@@Base+0x84c>
    5b44:	ldr	x0, [x19, #56]
    5b48:	ldr	w0, [x0, #68]
    5b4c:	b	59d4 <deflate@@Base+0xb3c>
    5b50:	mov	x0, x19
    5b54:	bl	bae0 <inflateCodesUsed@@ZLIB_1.2.9+0x17f0>
    5b58:	mov	x0, x20
    5b5c:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    5b60:	b	54c8 <deflate@@Base+0x630>
    5b64:	mov	w0, #0xffffffff            	// #-1
    5b68:	ldp	x23, x24, [sp, #48]
    5b6c:	ldp	x25, x26, [sp, #64]
    5b70:	ldr	x27, [sp, #80]
    5b74:	str	w0, [x19, #76]
    5b78:	ldp	x19, x20, [sp, #16]
    5b7c:	b	51b0 <deflate@@Base+0x318>
    5b80:	ldr	w0, [x3, #68]
    5b84:	b	59cc <deflate@@Base+0xb34>
    5b88:	ldr	x3, [x19, #56]
    5b8c:	b	580c <deflate@@Base+0x974>
    5b90:	ldr	x2, [x19, #16]
    5b94:	mov	w1, #0x2                   	// #2
    5b98:	ldr	x0, [x19, #40]
    5b9c:	add	x3, x0, #0x1
    5ba0:	str	x3, [x19, #40]
    5ba4:	strb	wzr, [x2, x0]
    5ba8:	ldr	x2, [x19, #16]
    5bac:	ldr	x0, [x19, #40]
    5bb0:	add	x3, x0, #0x1
    5bb4:	str	x3, [x19, #40]
    5bb8:	strb	wzr, [x2, x0]
    5bbc:	ldr	x2, [x19, #16]
    5bc0:	ldr	x0, [x19, #40]
    5bc4:	add	x3, x0, #0x1
    5bc8:	str	x3, [x19, #40]
    5bcc:	strb	wzr, [x2, x0]
    5bd0:	ldr	x2, [x19, #16]
    5bd4:	ldr	x0, [x19, #40]
    5bd8:	add	x3, x0, #0x1
    5bdc:	str	x3, [x19, #40]
    5be0:	strb	wzr, [x2, x0]
    5be4:	ldr	x2, [x19, #16]
    5be8:	ldr	x0, [x19, #40]
    5bec:	add	x3, x0, #0x1
    5bf0:	str	x3, [x19, #40]
    5bf4:	strb	wzr, [x2, x0]
    5bf8:	ldr	w0, [x19, #196]
    5bfc:	cmp	w0, #0x9
    5c00:	b.eq	5c18 <deflate@@Base+0xd80>  // b.none
    5c04:	ldr	w1, [x19, #200]
    5c08:	cmp	w1, #0x1
    5c0c:	ccmp	w0, #0x1, #0x4, le
    5c10:	cset	w1, le
    5c14:	lsl	w1, w1, #2
    5c18:	ldr	x5, [x19, #16]
    5c1c:	mov	w4, #0x3                   	// #3
    5c20:	ldr	x2, [x19, #40]
    5c24:	mov	w3, #0x71                  	// #113
    5c28:	mov	x0, x20
    5c2c:	add	x6, x2, #0x1
    5c30:	str	x6, [x19, #40]
    5c34:	strb	w1, [x5, x2]
    5c38:	ldr	x2, [x19, #16]
    5c3c:	ldr	x1, [x19, #40]
    5c40:	add	x5, x1, #0x1
    5c44:	str	x5, [x19, #40]
    5c48:	strb	w4, [x2, x1]
    5c4c:	str	w3, [x19, #8]
    5c50:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    5c54:	ldr	x0, [x19, #40]
    5c58:	cbnz	x0, 53a0 <deflate@@Base+0x508>
    5c5c:	ldr	w0, [x19, #8]
    5c60:	b	5054 <deflate@@Base+0x1bc>
    5c64:	mov	x0, x19
    5c68:	bl	34e8 <crc32_combine64@@ZLIB_1.2.3.3+0x340>
    5c6c:	ldr	w2, [x19, #180]
    5c70:	cmp	w2, #0x102
    5c74:	b.hi	53e8 <deflate@@Base+0x550>  // b.pmore
    5c78:	cbz	w21, 54bc <deflate@@Base+0x624>
    5c7c:	cbz	w2, 5de8 <deflate@@Base+0xf50>
    5c80:	ldr	w0, [x19, #172]
    5c84:	cmp	w2, #0x2
    5c88:	str	wzr, [x19, #160]
    5c8c:	mov	w3, w0
    5c90:	ldr	x1, [x19, #96]
    5c94:	b.ls	5418 <deflate@@Base+0x580>  // b.plast
    5c98:	b	53f8 <deflate@@Base+0x560>
    5c9c:	ldrb	w0, [x4, #2]
    5ca0:	cmp	w0, w5
    5ca4:	b.ne	5418 <deflate@@Base+0x580>  // b.any
    5ca8:	ldrb	w0, [x4, #3]
    5cac:	cmp	w0, w5
    5cb0:	b.ne	5418 <deflate@@Base+0x580>  // b.any
    5cb4:	add	x0, x3, #0x102
    5cb8:	add	x4, x4, #0x3
    5cbc:	add	x0, x1, x0
    5cc0:	ldrb	w6, [x4, #1]
    5cc4:	cmp	w6, w5
    5cc8:	b.ne	5fdc <deflate@@Base+0x1144>  // b.any
    5ccc:	ldrb	w6, [x4, #2]
    5cd0:	cmp	w6, w5
    5cd4:	b.ne	5fd4 <deflate@@Base+0x113c>  // b.any
    5cd8:	ldrb	w6, [x4, #3]
    5cdc:	cmp	w6, w5
    5ce0:	b.ne	5fcc <deflate@@Base+0x1134>  // b.any
    5ce4:	ldrb	w6, [x4, #4]
    5ce8:	cmp	w6, w5
    5cec:	b.ne	5fc4 <deflate@@Base+0x112c>  // b.any
    5cf0:	ldrb	w6, [x4, #5]
    5cf4:	cmp	w6, w5
    5cf8:	b.ne	5ff4 <deflate@@Base+0x115c>  // b.any
    5cfc:	ldrb	w6, [x4, #6]
    5d00:	cmp	w6, w5
    5d04:	b.ne	5fec <deflate@@Base+0x1154>  // b.any
    5d08:	ldrb	w6, [x4, #7]
    5d0c:	cmp	w6, w5
    5d10:	b.ne	5fe4 <deflate@@Base+0x114c>  // b.any
    5d14:	ldrb	w6, [x4, #8]!
    5d18:	cmp	w6, w5
    5d1c:	ccmp	x0, x4, #0x0, eq  // eq = none
    5d20:	b.hi	5cc0 <deflate@@Base+0xe28>  // b.pmore
    5d24:	sub	x0, x0, x4
    5d28:	sub	w0, w25, w0
    5d2c:	str	w0, [x19, #160]
    5d30:	cmp	w0, w2
    5d34:	b.ls	5dc8 <deflate@@Base+0xf30>  // b.plast
    5d38:	mov	w0, w2
    5d3c:	str	w2, [x19, #160]
    5d40:	sub	w0, w0, #0x3
    5d44:	ldr	w3, [x19, #5900]
    5d48:	and	w0, w0, #0xff
    5d4c:	mov	w6, #0x1                   	// #1
    5d50:	ldr	x5, [x19, #5904]
    5d54:	add	w1, w3, #0x1
    5d58:	ldrb	w2, [x24, w0, sxtw]
    5d5c:	ldr	x4, [x19, #5888]
    5d60:	strh	w6, [x5, w3, uxtw #1]
    5d64:	add	x2, x19, x2, lsl #2
    5d68:	str	w1, [x19, #5900]
    5d6c:	ldrb	w1, [x23]
    5d70:	strb	w0, [x4, w3, uxtw]
    5d74:	ldrh	w3, [x2, #1240]
    5d78:	add	x0, x19, x1, lsl #2
    5d7c:	add	w1, w3, #0x1
    5d80:	strh	w1, [x2, #1240]
    5d84:	ldrh	w1, [x0, #2504]
    5d88:	add	w1, w1, #0x1
    5d8c:	strh	w1, [x0, #2504]
    5d90:	ldr	w1, [x19, #5896]
    5d94:	ldr	w2, [x19, #5900]
    5d98:	sub	w1, w1, #0x1
    5d9c:	ldr	w3, [x19, #160]
    5da0:	ldr	w0, [x19, #172]
    5da4:	cmp	w1, w2
    5da8:	ldr	w2, [x19, #180]
    5dac:	cset	w1, eq  // eq = none
    5db0:	add	w0, w0, w3
    5db4:	str	wzr, [x19, #160]
    5db8:	sub	w2, w2, w3
    5dbc:	str	w0, [x19, #172]
    5dc0:	str	w2, [x19, #180]
    5dc4:	b	5474 <deflate@@Base+0x5dc>
    5dc8:	cmp	w0, #0x2
    5dcc:	b.hi	5d40 <deflate@@Base+0xea8>  // b.pmore
    5dd0:	b	5418 <deflate@@Base+0x580>
    5dd4:	cmp	w1, #0x6
    5dd8:	orr	w1, w0, #0x80
    5ddc:	orr	w0, w0, #0xc0
    5de0:	csel	w0, w0, w1, ne  // ne = any
    5de4:	b	4f4c <deflate@@Base+0xb4>
    5de8:	str	wzr, [x19, #5932]
    5dec:	cmp	w21, #0x4
    5df0:	b.eq	5f0c <deflate@@Base+0x1074>  // b.none
    5df4:	ldr	w0, [x19, #5900]
    5df8:	cbz	w0, 5f64 <deflate@@Base+0x10cc>
    5dfc:	ldr	x2, [x19, #152]
    5e00:	mov	x1, #0x0                   	// #0
    5e04:	tbnz	x2, #63, 5e10 <deflate@@Base+0xf78>
    5e08:	ldr	x1, [x19, #96]
    5e0c:	add	x1, x1, w2, uxtw
    5e10:	ldr	w4, [x19, #172]
    5e14:	mov	x0, x19
    5e18:	mov	w3, #0x0                   	// #0
    5e1c:	sub	x2, x4, x2
    5e20:	bl	bbc0 <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
    5e24:	ldr	w1, [x19, #172]
    5e28:	ldr	x0, [x19]
    5e2c:	str	x1, [x19, #152]
    5e30:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    5e34:	ldr	x0, [x19]
    5e38:	ldp	x23, x24, [sp, #48]
    5e3c:	ldr	w0, [x0, #32]
    5e40:	ldp	x25, x26, [sp, #64]
    5e44:	cmp	w0, #0x0
    5e48:	cset	w0, ne  // ne = any
    5e4c:	mov	w2, w0
    5e50:	b	5358 <deflate@@Base+0x4c0>
    5e54:	ldr	x3, [x19, #56]
    5e58:	b	58cc <deflate@@Base+0xa34>
    5e5c:	ldr	x3, [x19, #16]
    5e60:	sub	w2, w2, w1
    5e64:	ldr	x0, [x20, #96]
    5e68:	add	x1, x3, x1
    5e6c:	bl	2430 <crc32@plt>
    5e70:	str	x0, [x20, #96]
    5e74:	ldr	x0, [x19, #56]
    5e78:	ldr	w0, [x0, #68]
    5e7c:	b	59cc <deflate@@Base+0xb34>
    5e80:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    5e84:	mov	w22, #0xfffffffb            	// #-5
    5e88:	ldr	x0, [x0, #4056]
    5e8c:	ldr	x0, [x0, #56]
    5e90:	str	x0, [x20, #48]
    5e94:	ldp	x19, x20, [sp, #16]
    5e98:	b	51b0 <deflate@@Base+0x318>
    5e9c:	ldr	x0, [x20, #96]
    5ea0:	sub	w2, w2, w23
    5ea4:	ldr	x1, [x19, #16]
    5ea8:	add	x1, x1, x23
    5eac:	bl	2430 <crc32@plt>
    5eb0:	ldr	x3, [x19, #56]
    5eb4:	str	x0, [x20, #96]
    5eb8:	b	57f8 <deflate@@Base+0x960>
    5ebc:	ldr	x2, [x19, #152]
    5ec0:	mov	x1, #0x0                   	// #0
    5ec4:	tbnz	x2, #63, 5ed0 <deflate@@Base+0x1038>
    5ec8:	ldr	x1, [x19, #96]
    5ecc:	add	x1, x1, w2, uxtw
    5ed0:	ldr	w4, [x19, #172]
    5ed4:	mov	x0, x19
    5ed8:	mov	w3, #0x1                   	// #1
    5edc:	sub	x2, x4, x2
    5ee0:	bl	bbc0 <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
    5ee4:	ldr	w1, [x19, #172]
    5ee8:	ldr	x0, [x19]
    5eec:	str	x1, [x19, #152]
    5ef0:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    5ef4:	ldr	x0, [x19]
    5ef8:	ldr	w0, [x0, #32]
    5efc:	cbnz	w0, 5fa4 <deflate@@Base+0x110c>
    5f00:	mov	w0, #0x29a                 	// #666
    5f04:	str	w0, [x19, #8]
    5f08:	b	54c8 <deflate@@Base+0x630>
    5f0c:	ldr	x2, [x19, #152]
    5f10:	mov	x1, #0x0                   	// #0
    5f14:	tbnz	x2, #63, 5f20 <deflate@@Base+0x1088>
    5f18:	ldr	x1, [x19, #96]
    5f1c:	add	x1, x1, w2, uxtw
    5f20:	ldr	w4, [x19, #172]
    5f24:	mov	x0, x19
    5f28:	mov	w3, #0x1                   	// #1
    5f2c:	sub	x2, x4, x2
    5f30:	bl	bbc0 <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
    5f34:	ldr	w1, [x19, #172]
    5f38:	ldr	x0, [x19]
    5f3c:	str	x1, [x19, #152]
    5f40:	bl	3740 <crc32_combine64@@ZLIB_1.2.3.3+0x598>
    5f44:	ldr	x0, [x19]
    5f48:	ldr	w0, [x0, #32]
    5f4c:	cbnz	w0, 5fb0 <deflate@@Base+0x1118>
    5f50:	mov	w0, #0x29a                 	// #666
    5f54:	ldp	x23, x24, [sp, #48]
    5f58:	ldp	x25, x26, [sp, #64]
    5f5c:	str	w0, [x19, #8]
    5f60:	b	54c8 <deflate@@Base+0x630>
    5f64:	ldp	x23, x24, [sp, #48]
    5f68:	ldp	x25, x26, [sp, #64]
    5f6c:	b	5364 <deflate@@Base+0x4cc>
    5f70:	ldr	w2, [x19, #132]
    5f74:	mov	w1, #0x0                   	// #0
    5f78:	ldr	x0, [x19, #120]
    5f7c:	sub	w2, w2, #0x1
    5f80:	lsl	x2, x2, #1
    5f84:	strh	wzr, [x0, x2]
    5f88:	bl	24a0 <memset@plt>
    5f8c:	ldr	w0, [x19, #180]
    5f90:	cbnz	w0, 5b58 <deflate@@Base+0xcc0>
    5f94:	str	xzr, [x19, #152]
    5f98:	str	wzr, [x19, #172]
    5f9c:	str	wzr, [x19, #5932]
    5fa0:	b	5b58 <deflate@@Base+0xcc0>
    5fa4:	mov	w0, #0x29a                 	// #666
    5fa8:	str	w0, [x19, #8]
    5fac:	b	50d8 <deflate@@Base+0x240>
    5fb0:	mov	w0, #0x29a                 	// #666
    5fb4:	ldp	x23, x24, [sp, #48]
    5fb8:	ldp	x25, x26, [sp, #64]
    5fbc:	str	w0, [x19, #8]
    5fc0:	b	50d8 <deflate@@Base+0x240>
    5fc4:	add	x4, x4, #0x4
    5fc8:	b	5d24 <deflate@@Base+0xe8c>
    5fcc:	add	x4, x4, #0x3
    5fd0:	b	5d24 <deflate@@Base+0xe8c>
    5fd4:	add	x4, x4, #0x2
    5fd8:	b	5d24 <deflate@@Base+0xe8c>
    5fdc:	add	x4, x4, #0x1
    5fe0:	b	5d24 <deflate@@Base+0xe8c>
    5fe4:	add	x4, x4, #0x7
    5fe8:	b	5d24 <deflate@@Base+0xe8c>
    5fec:	add	x4, x4, #0x6
    5ff0:	b	5d24 <deflate@@Base+0xe8c>
    5ff4:	add	x4, x4, #0x5
    5ff8:	b	5d24 <deflate@@Base+0xe8c>
    5ffc:	nop

0000000000006000 <deflateParams@@Base>:
    6000:	stp	x29, x30, [sp, #-64]!
    6004:	mov	x29, sp
    6008:	stp	x21, x22, [sp, #32]
    600c:	cbz	x0, 60fc <deflateParams@@Base+0xfc>
    6010:	stp	x19, x20, [sp, #16]
    6014:	mov	w20, w1
    6018:	mov	x19, x0
    601c:	ldr	x1, [x0, #64]
    6020:	cbz	x1, 60f8 <deflateParams@@Base+0xf8>
    6024:	ldr	x1, [x0, #72]
    6028:	cbz	x1, 60f8 <deflateParams@@Base+0xf8>
    602c:	str	x23, [sp, #48]
    6030:	mov	w23, w2
    6034:	bl	4630 <crc32_combine64@@ZLIB_1.2.3.3+0x1488>
    6038:	mov	w22, w0
    603c:	cbnz	w0, 6168 <deflateParams@@Base+0x168>
    6040:	cmn	w20, #0x1
    6044:	ldr	x21, [x19, #56]
    6048:	b.eq	6110 <deflateParams@@Base+0x110>  // b.none
    604c:	cmp	w20, #0x9
    6050:	cset	w0, hi  // hi = pmore
    6054:	cmp	w0, #0x0
    6058:	ccmp	w23, #0x4, #0x2, eq  // eq = none
    605c:	b.hi	6168 <deflateParams@@Base+0x168>  // b.pmore
    6060:	ldp	w0, w1, [x21, #196]
    6064:	cmp	w1, w23
    6068:	b.eq	611c <deflateParams@@Base+0x11c>  // b.none
    606c:	ldr	x1, [x21, #5944]
    6070:	cbnz	x1, 6144 <deflateParams@@Base+0x144>
    6074:	cmp	w20, w0
    6078:	b.eq	60dc <deflateParams@@Base+0xdc>  // b.none
    607c:	cbnz	w0, 60b0 <deflateParams@@Base+0xb0>
    6080:	ldr	w0, [x21, #5928]
    6084:	cbz	w0, 60b0 <deflateParams@@Base+0xb0>
    6088:	cmp	w0, #0x1
    608c:	b.eq	6178 <deflateParams@@Base+0x178>  // b.none
    6090:	ldr	w2, [x21, #132]
    6094:	ldr	x0, [x21, #120]
    6098:	sub	w2, w2, #0x1
    609c:	lsl	x2, x2, #1
    60a0:	strh	wzr, [x0, x2]
    60a4:	mov	w1, #0x0                   	// #0
    60a8:	bl	24a0 <memset@plt>
    60ac:	str	wzr, [x21, #5928]
    60b0:	sbfiz	x2, x20, #4, #32
    60b4:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    60b8:	add	x0, x0, #0xc68
    60bc:	str	w20, [x21, #196]
    60c0:	add	x1, x0, x2
    60c4:	ldrh	w2, [x0, x2]
    60c8:	ldrh	w3, [x1, #2]
    60cc:	ldrh	w0, [x1, #4]
    60d0:	ldrh	w1, [x1, #6]
    60d4:	stp	w1, w3, [x21, #188]
    60d8:	stp	w2, w0, [x21, #204]
    60dc:	ldp	x19, x20, [sp, #16]
    60e0:	str	w23, [x21, #200]
    60e4:	ldr	x23, [sp, #48]
    60e8:	mov	w0, w22
    60ec:	ldp	x21, x22, [sp, #32]
    60f0:	ldp	x29, x30, [sp], #64
    60f4:	ret
    60f8:	ldp	x19, x20, [sp, #16]
    60fc:	mov	w22, #0xfffffffe            	// #-2
    6100:	mov	w0, w22
    6104:	ldp	x21, x22, [sp, #32]
    6108:	ldp	x29, x30, [sp], #64
    610c:	ret
    6110:	mov	w0, #0x0                   	// #0
    6114:	mov	w20, #0x6                   	// #6
    6118:	b	6054 <deflateParams@@Base+0x54>
    611c:	adrp	x1, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    6120:	add	x1, x1, #0xc68
    6124:	add	x2, x1, w20, sxtw #4
    6128:	add	x1, x1, w0, sxtw #4
    612c:	ldr	x2, [x2, #8]
    6130:	ldr	x1, [x1, #8]
    6134:	cmp	x2, x1
    6138:	b.eq	6074 <deflateParams@@Base+0x74>  // b.none
    613c:	ldr	x1, [x21, #5944]
    6140:	cbz	x1, 6074 <deflateParams@@Base+0x74>
    6144:	mov	x0, x19
    6148:	mov	w1, #0x5                   	// #5
    614c:	bl	2490 <deflate@plt>
    6150:	cmn	w0, #0x2
    6154:	b.eq	6168 <deflateParams@@Base+0x168>  // b.none
    6158:	ldr	w0, [x19, #32]
    615c:	cbz	w0, 6194 <deflateParams@@Base+0x194>
    6160:	ldr	w0, [x21, #196]
    6164:	b	6074 <deflateParams@@Base+0x74>
    6168:	mov	w22, #0xfffffffe            	// #-2
    616c:	ldp	x19, x20, [sp, #16]
    6170:	ldr	x23, [sp, #48]
    6174:	b	6100 <deflateParams@@Base+0x100>
    6178:	mov	x0, x21
    617c:	bl	31b0 <crc32_combine64@@ZLIB_1.2.3.3+0x8>
    6180:	ldr	w2, [x21, #132]
    6184:	ldr	x0, [x21, #120]
    6188:	sub	w2, w2, #0x1
    618c:	lsl	x2, x2, #1
    6190:	b	60a4 <deflateParams@@Base+0xa4>
    6194:	mov	w22, #0xfffffffb            	// #-5
    6198:	ldp	x19, x20, [sp, #16]
    619c:	ldr	x23, [sp, #48]
    61a0:	b	60e8 <deflateParams@@Base+0xe8>
    61a4:	nop

00000000000061a8 <deflateEnd@@Base>:
    61a8:	cbz	x0, 6264 <deflateEnd@@Base+0xbc>
    61ac:	stp	x29, x30, [sp, #-32]!
    61b0:	mov	x29, sp
    61b4:	ldr	x1, [x0, #64]
    61b8:	stp	x19, x20, [sp, #16]
    61bc:	mov	x19, x0
    61c0:	cbz	x1, 6254 <deflateEnd@@Base+0xac>
    61c4:	ldr	x5, [x0, #72]
    61c8:	cbz	x5, 6254 <deflateEnd@@Base+0xac>
    61cc:	bl	4630 <crc32_combine64@@ZLIB_1.2.3.3+0x1488>
    61d0:	cbnz	w0, 6254 <deflateEnd@@Base+0xac>
    61d4:	ldr	x2, [x19, #56]
    61d8:	ldr	x0, [x19, #80]
    61dc:	ldr	x1, [x2, #16]
    61e0:	ldr	w20, [x2, #8]
    61e4:	cbz	x1, 61f4 <deflateEnd@@Base+0x4c>
    61e8:	blr	x5
    61ec:	ldp	x5, x0, [x19, #72]
    61f0:	ldr	x2, [x19, #56]
    61f4:	ldr	x1, [x2, #120]
    61f8:	cbz	x1, 6208 <deflateEnd@@Base+0x60>
    61fc:	blr	x5
    6200:	ldp	x5, x0, [x19, #72]
    6204:	ldr	x2, [x19, #56]
    6208:	ldr	x1, [x2, #112]
    620c:	cbz	x1, 621c <deflateEnd@@Base+0x74>
    6210:	blr	x5
    6214:	ldp	x5, x0, [x19, #72]
    6218:	ldr	x2, [x19, #56]
    621c:	ldr	x1, [x2, #96]
    6220:	cbz	x1, 6230 <deflateEnd@@Base+0x88>
    6224:	blr	x5
    6228:	ldp	x5, x0, [x19, #72]
    622c:	ldr	x2, [x19, #56]
    6230:	mov	x1, x2
    6234:	blr	x5
    6238:	str	xzr, [x19, #56]
    623c:	cmp	w20, #0x71
    6240:	mov	w0, #0xfffffffd            	// #-3
    6244:	csel	w0, wzr, w0, ne  // ne = any
    6248:	ldp	x19, x20, [sp, #16]
    624c:	ldp	x29, x30, [sp], #32
    6250:	ret
    6254:	mov	w0, #0xfffffffe            	// #-2
    6258:	ldp	x19, x20, [sp, #16]
    625c:	ldp	x29, x30, [sp], #32
    6260:	ret
    6264:	mov	w0, #0xfffffffe            	// #-2
    6268:	ret
    626c:	nop

0000000000006270 <deflateInit2_@@Base>:
    6270:	cbz	x6, 64fc <deflateInit2_@@Base+0x28c>
    6274:	stp	x29, x30, [sp, #-80]!
    6278:	mov	x29, sp
    627c:	stp	x19, x20, [sp, #16]
    6280:	mov	x20, x0
    6284:	mov	w0, #0x70                  	// #112
    6288:	stp	x23, x24, [sp, #48]
    628c:	mov	w24, w1
    6290:	ldrb	w1, [x6]
    6294:	cmp	w1, #0x31
    6298:	ccmp	w7, w0, #0x0, eq  // eq = none
    629c:	b.ne	64c4 <deflateInit2_@@Base+0x254>  // b.any
    62a0:	cbz	x20, 64b0 <deflateInit2_@@Base+0x240>
    62a4:	ldr	x0, [x20, #64]
    62a8:	stp	x21, x22, [sp, #32]
    62ac:	mov	w23, w5
    62b0:	stp	x25, x26, [sp, #64]
    62b4:	mov	w21, w3
    62b8:	mov	w22, w4
    62bc:	str	xzr, [x20, #48]
    62c0:	cbz	x0, 6494 <deflateInit2_@@Base+0x224>
    62c4:	ldr	x0, [x20, #72]
    62c8:	cbz	x0, 6484 <deflateInit2_@@Base+0x214>
    62cc:	cmn	w24, #0x1
    62d0:	mov	w0, #0x6                   	// #6
    62d4:	csel	w24, w24, w0, ne  // ne = any
    62d8:	tbnz	w21, #31, 6478 <deflateInit2_@@Base+0x208>
    62dc:	cmp	w21, #0xf
    62e0:	mov	w26, #0x1                   	// #1
    62e4:	b.gt	646c <deflateInit2_@@Base+0x1fc>
    62e8:	sub	w0, w22, #0x1
    62ec:	cmp	w0, #0x8
    62f0:	b.hi	64a8 <deflateInit2_@@Base+0x238>  // b.pmore
    62f4:	sub	w0, w21, #0x8
    62f8:	cmp	w0, #0x7
    62fc:	ccmp	w2, #0x8, #0x0, ls  // ls = plast
    6300:	b.ne	64a8 <deflateInit2_@@Base+0x238>  // b.any
    6304:	cmp	w24, #0x9
    6308:	ccmp	w23, #0x4, #0x2, ls  // ls = plast
    630c:	b.hi	64a8 <deflateInit2_@@Base+0x238>  // b.pmore
    6310:	cmp	w21, #0x8
    6314:	ccmp	w26, #0x1, #0x4, eq  // eq = none
    6318:	b.ne	64a8 <deflateInit2_@@Base+0x238>  // b.any
    631c:	ldr	x3, [x20, #64]
    6320:	cmp	w21, #0x8
    6324:	ldr	x0, [x20, #80]
    6328:	mov	w1, #0x9                   	// #9
    632c:	mov	w2, #0x1740                	// #5952
    6330:	csel	w21, w21, w1, ne  // ne = any
    6334:	mov	w1, #0x1                   	// #1
    6338:	blr	x3
    633c:	mov	x19, x0
    6340:	cbz	x0, 6504 <deflateInit2_@@Base+0x294>
    6344:	add	w3, w22, #0x9
    6348:	mov	w0, #0xaaab                	// #43691
    634c:	movk	w0, #0xaaaa, lsl #16
    6350:	add	w4, w22, #0x7
    6354:	mov	w25, #0x1                   	// #1
    6358:	str	x19, [x20, #56]
    635c:	umull	x3, w3, w0
    6360:	lsl	w5, w25, w4
    6364:	ldr	x6, [x20, #64]
    6368:	sub	w7, w5, #0x1
    636c:	ldr	x0, [x20, #80]
    6370:	lsl	w1, w25, w21
    6374:	lsr	x3, x3, #33
    6378:	sub	w8, w1, #0x1
    637c:	mov	w2, #0x2a                  	// #42
    6380:	str	x20, [x19]
    6384:	str	w2, [x19, #8]
    6388:	mov	w2, #0x2                   	// #2
    638c:	str	w26, [x19, #48]
    6390:	add	w22, w22, #0x6
    6394:	str	xzr, [x19, #56]
    6398:	stp	w1, w21, [x19, #80]
    639c:	str	w8, [x19, #88]
    63a0:	stp	w5, w4, [x19, #132]
    63a4:	stp	w7, w3, [x19, #140]
    63a8:	blr	x6
    63ac:	ldr	w1, [x19, #80]
    63b0:	mov	w2, #0x2                   	// #2
    63b4:	ldr	x3, [x20, #64]
    63b8:	str	x0, [x19, #96]
    63bc:	ldr	x0, [x20, #80]
    63c0:	blr	x3
    63c4:	ldr	w1, [x19, #132]
    63c8:	mov	w2, #0x2                   	// #2
    63cc:	ldr	x3, [x20, #64]
    63d0:	str	x0, [x19, #112]
    63d4:	ldr	x0, [x20, #80]
    63d8:	blr	x3
    63dc:	ldr	x3, [x20, #64]
    63e0:	str	x0, [x19, #120]
    63e4:	ldr	x0, [x20, #80]
    63e8:	lsl	w1, w25, w22
    63ec:	str	w1, [x19, #5896]
    63f0:	mov	w2, #0x4                   	// #4
    63f4:	str	xzr, [x19, #5944]
    63f8:	blr	x3
    63fc:	ldr	w3, [x19, #5896]
    6400:	ldr	x1, [x19, #96]
    6404:	ubfiz	x2, x3, #2, #32
    6408:	stp	x0, x2, [x19, #16]
    640c:	mov	w2, w3
    6410:	cbz	x1, 64cc <deflateInit2_@@Base+0x25c>
    6414:	ldr	x1, [x19, #112]
    6418:	cbz	x1, 64cc <deflateInit2_@@Base+0x25c>
    641c:	ldr	x1, [x19, #120]
    6420:	cmp	x1, #0x0
    6424:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    6428:	b.eq	64cc <deflateInit2_@@Base+0x25c>  // b.none
    642c:	and	x3, x3, #0xfffffffe
    6430:	add	x2, x2, x2, lsl #1
    6434:	add	x3, x0, x3
    6438:	add	x2, x0, x2
    643c:	mov	w0, #0x8                   	// #8
    6440:	strb	w0, [x19, #72]
    6444:	mov	x0, x20
    6448:	ldp	x21, x22, [sp, #32]
    644c:	ldp	x25, x26, [sp, #64]
    6450:	stp	w24, w23, [x19, #196]
    6454:	str	x2, [x19, #5888]
    6458:	str	x3, [x19, #5904]
    645c:	ldp	x19, x20, [sp, #16]
    6460:	ldp	x23, x24, [sp, #48]
    6464:	ldp	x29, x30, [sp], #80
    6468:	b	2480 <deflateReset@plt>
    646c:	sub	w21, w21, #0x10
    6470:	mov	w26, #0x2                   	// #2
    6474:	b	62e8 <deflateInit2_@@Base+0x78>
    6478:	neg	w21, w21
    647c:	mov	w26, #0x0                   	// #0
    6480:	b	62e8 <deflateInit2_@@Base+0x78>
    6484:	adrp	x0, c000 <inflateCodesUsed@@ZLIB_1.2.9+0x1d10>
    6488:	add	x0, x0, #0x300
    648c:	str	x0, [x20, #72]
    6490:	b	62cc <deflateInit2_@@Base+0x5c>
    6494:	adrp	x0, c000 <inflateCodesUsed@@ZLIB_1.2.9+0x1d10>
    6498:	add	x0, x0, #0x2f8
    649c:	str	x0, [x20, #64]
    64a0:	str	xzr, [x20, #80]
    64a4:	b	62c4 <deflateInit2_@@Base+0x54>
    64a8:	ldp	x21, x22, [sp, #32]
    64ac:	ldp	x25, x26, [sp, #64]
    64b0:	mov	w0, #0xfffffffe            	// #-2
    64b4:	ldp	x19, x20, [sp, #16]
    64b8:	ldp	x23, x24, [sp, #48]
    64bc:	ldp	x29, x30, [sp], #80
    64c0:	ret
    64c4:	mov	w0, #0xfffffffa            	// #-6
    64c8:	b	64b4 <deflateInit2_@@Base+0x244>
    64cc:	adrp	x1, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    64d0:	mov	w0, #0x29a                 	// #666
    64d4:	str	w0, [x19, #8]
    64d8:	mov	x0, x20
    64dc:	ldr	x1, [x1, #4056]
    64e0:	ldr	x1, [x1, #48]
    64e4:	str	x1, [x20, #48]
    64e8:	bl	2590 <deflateEnd@plt>
    64ec:	mov	w0, #0xfffffffc            	// #-4
    64f0:	ldp	x21, x22, [sp, #32]
    64f4:	ldp	x25, x26, [sp, #64]
    64f8:	b	64b4 <deflateInit2_@@Base+0x244>
    64fc:	mov	w0, #0xfffffffa            	// #-6
    6500:	ret
    6504:	mov	w0, #0xfffffffc            	// #-4
    6508:	ldp	x21, x22, [sp, #32]
    650c:	ldp	x25, x26, [sp, #64]
    6510:	b	64b4 <deflateInit2_@@Base+0x244>
    6514:	nop

0000000000006518 <deflateInit_@@Base>:
    6518:	mov	x6, x2
    651c:	mov	w7, w3
    6520:	mov	w4, #0x8                   	// #8
    6524:	mov	w5, #0x0                   	// #0
    6528:	mov	w2, w4
    652c:	mov	w3, #0xf                   	// #15
    6530:	b	24d0 <deflateInit2_@plt>
    6534:	nop

0000000000006538 <deflateCopy@@Base>:
    6538:	cbz	x1, 6710 <deflateCopy@@Base+0x1d8>
    653c:	ldr	x6, [x1, #64]
    6540:	mov	x5, x1
    6544:	cbz	x6, 6710 <deflateCopy@@Base+0x1d8>
    6548:	stp	x29, x30, [sp, #-48]!
    654c:	mov	x29, sp
    6550:	stp	x21, x22, [sp, #32]
    6554:	mov	x21, x0
    6558:	ldr	x0, [x1, #72]
    655c:	cbz	x0, 6718 <deflateCopy@@Base+0x1e0>
    6560:	mov	x0, x1
    6564:	bl	4630 <crc32_combine64@@ZLIB_1.2.3.3+0x1488>
    6568:	cmp	w0, #0x0
    656c:	ccmp	x21, #0x0, #0x4, eq  // eq = none
    6570:	b.eq	6718 <deflateCopy@@Base+0x1e0>  // b.none
    6574:	stp	x19, x20, [sp, #16]
    6578:	mov	w2, #0x1740                	// #5952
    657c:	ldp	x0, x1, [x5]
    6580:	ldr	x22, [x5, #56]
    6584:	stp	x0, x1, [x21]
    6588:	mov	w1, #0x1                   	// #1
    658c:	ldp	x8, x9, [x5, #16]
    6590:	stp	x8, x9, [x21, #16]
    6594:	ldp	x8, x9, [x5, #32]
    6598:	stp	x8, x9, [x21, #32]
    659c:	ldp	x8, x9, [x5, #48]
    65a0:	stp	x8, x9, [x21, #48]
    65a4:	ldp	x8, x9, [x5, #64]
    65a8:	stp	x8, x9, [x21, #64]
    65ac:	ldp	x8, x9, [x5, #80]
    65b0:	stp	x8, x9, [x21, #80]
    65b4:	ldp	x4, x5, [x5, #96]
    65b8:	stp	x4, x5, [x21, #96]
    65bc:	ldr	x0, [x21, #80]
    65c0:	blr	x6
    65c4:	mov	x19, x0
    65c8:	cbz	x0, 673c <deflateCopy@@Base+0x204>
    65cc:	str	x0, [x21, #56]
    65d0:	mov	x1, x22
    65d4:	mov	x2, #0x1740                	// #5952
    65d8:	bl	23a0 <memcpy@plt>
    65dc:	ldr	w1, [x19, #80]
    65e0:	mov	w2, #0x2                   	// #2
    65e4:	ldr	x3, [x21, #64]
    65e8:	ldr	x0, [x21, #80]
    65ec:	str	x21, [x19]
    65f0:	blr	x3
    65f4:	ldr	w1, [x19, #80]
    65f8:	mov	w2, #0x2                   	// #2
    65fc:	ldr	x3, [x21, #64]
    6600:	str	x0, [x19, #96]
    6604:	ldr	x0, [x21, #80]
    6608:	blr	x3
    660c:	ldr	w1, [x19, #132]
    6610:	mov	w2, #0x2                   	// #2
    6614:	ldr	x3, [x21, #64]
    6618:	str	x0, [x19, #112]
    661c:	ldr	x0, [x21, #80]
    6620:	blr	x3
    6624:	ldr	w1, [x19, #5896]
    6628:	mov	w2, #0x4                   	// #4
    662c:	ldr	x3, [x21, #64]
    6630:	str	x0, [x19, #120]
    6634:	ldr	x0, [x21, #80]
    6638:	blr	x3
    663c:	mov	x20, x0
    6640:	ldr	x0, [x19, #96]
    6644:	str	x20, [x19, #16]
    6648:	cbz	x0, 6728 <deflateCopy@@Base+0x1f0>
    664c:	ldr	x1, [x19, #112]
    6650:	cbz	x1, 6728 <deflateCopy@@Base+0x1f0>
    6654:	ldr	x1, [x19, #120]
    6658:	cmp	x1, #0x0
    665c:	ccmp	x20, #0x0, #0x4, ne  // ne = any
    6660:	b.eq	6728 <deflateCopy@@Base+0x1f0>  // b.none
    6664:	ldr	x1, [x22, #96]
    6668:	ldr	w2, [x19, #80]
    666c:	lsl	w2, w2, #1
    6670:	bl	23a0 <memcpy@plt>
    6674:	ldr	x0, [x19, #112]
    6678:	ldr	x1, [x22, #112]
    667c:	ldr	w2, [x19, #80]
    6680:	lsl	x2, x2, #1
    6684:	bl	23a0 <memcpy@plt>
    6688:	ldr	x0, [x19, #120]
    668c:	ldr	x1, [x22, #120]
    6690:	ldr	w2, [x19, #132]
    6694:	lsl	x2, x2, #1
    6698:	bl	23a0 <memcpy@plt>
    669c:	ldr	w2, [x19, #24]
    66a0:	ldr	x0, [x19, #16]
    66a4:	ldr	x1, [x22, #16]
    66a8:	bl	23a0 <memcpy@plt>
    66ac:	ldr	w1, [x19, #5896]
    66b0:	ldr	x4, [x22, #16]
    66b4:	and	x0, x1, #0xfffffffe
    66b8:	ldr	x3, [x22, #32]
    66bc:	ubfiz	x5, x1, #1, #32
    66c0:	ldr	x2, [x19, #16]
    66c4:	add	x20, x20, x0
    66c8:	sub	x3, x3, x4
    66cc:	add	x1, x5, w1, uxtw
    66d0:	add	x1, x2, x1
    66d4:	add	x5, x19, #0xd4
    66d8:	add	x2, x2, x3
    66dc:	add	x4, x19, #0x9c8
    66e0:	add	x3, x19, #0xabc
    66e4:	str	x2, [x19, #32]
    66e8:	str	x5, [x19, #2904]
    66ec:	mov	w0, #0x0                   	// #0
    66f0:	str	x4, [x19, #2928]
    66f4:	str	x3, [x19, #2952]
    66f8:	str	x1, [x19, #5888]
    66fc:	str	x20, [x19, #5904]
    6700:	ldp	x19, x20, [sp, #16]
    6704:	ldp	x21, x22, [sp, #32]
    6708:	ldp	x29, x30, [sp], #48
    670c:	ret
    6710:	mov	w0, #0xfffffffe            	// #-2
    6714:	ret
    6718:	mov	w0, #0xfffffffe            	// #-2
    671c:	ldp	x21, x22, [sp, #32]
    6720:	ldp	x29, x30, [sp], #48
    6724:	ret
    6728:	mov	x0, x21
    672c:	bl	2590 <deflateEnd@plt>
    6730:	mov	w0, #0xfffffffc            	// #-4
    6734:	ldp	x19, x20, [sp, #16]
    6738:	b	6704 <deflateCopy@@Base+0x1cc>
    673c:	mov	w0, #0xfffffffc            	// #-4
    6740:	ldp	x19, x20, [sp, #16]
    6744:	b	6704 <deflateCopy@@Base+0x1cc>

0000000000006748 <inflateBackInit_@@ZLIB_1.2.0>:
    6748:	cbz	x3, 6834 <inflateBackInit_@@ZLIB_1.2.0+0xec>
    674c:	stp	x29, x30, [sp, #-48]!
    6750:	mov	x29, sp
    6754:	stp	x19, x20, [sp, #16]
    6758:	mov	w20, w1
    675c:	mov	x19, x0
    6760:	ldrb	w1, [x3]
    6764:	mov	w0, #0x70                  	// #112
    6768:	cmp	w1, #0x31
    676c:	ccmp	w4, w0, #0x0, eq  // eq = none
    6770:	b.ne	6820 <inflateBackInit_@@ZLIB_1.2.0+0xd8>  // b.any
    6774:	str	x21, [sp, #32]
    6778:	cmp	x19, #0x0
    677c:	mov	x21, x2
    6780:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    6784:	b.eq	6828 <inflateBackInit_@@ZLIB_1.2.0+0xe0>  // b.none
    6788:	sub	w0, w20, #0x8
    678c:	cmp	w0, #0x7
    6790:	b.hi	6828 <inflateBackInit_@@ZLIB_1.2.0+0xe0>  // b.pmore
    6794:	ldr	x3, [x19, #64]
    6798:	str	xzr, [x19, #48]
    679c:	cbz	x3, 67f0 <inflateBackInit_@@ZLIB_1.2.0+0xa8>
    67a0:	ldr	x1, [x19, #72]
    67a4:	ldr	x0, [x19, #80]
    67a8:	cbz	x1, 6810 <inflateBackInit_@@ZLIB_1.2.0+0xc8>
    67ac:	mov	w2, #0x1bf8                	// #7160
    67b0:	mov	w1, #0x1                   	// #1
    67b4:	blr	x3
    67b8:	mov	x3, x0
    67bc:	cbz	x0, 683c <inflateBackInit_@@ZLIB_1.2.0+0xf4>
    67c0:	str	x3, [x19, #56]
    67c4:	mov	w1, #0x1                   	// #1
    67c8:	stp	xzr, x21, [x3, #64]
    67cc:	lsl	w1, w1, w20
    67d0:	mov	w2, #0x8000                	// #32768
    67d4:	ldr	x21, [sp, #32]
    67d8:	mov	w0, #0x0                   	// #0
    67dc:	str	w2, [x3, #28]
    67e0:	stp	w20, w1, [x3, #56]
    67e4:	ldp	x19, x20, [sp, #16]
    67e8:	ldp	x29, x30, [sp], #48
    67ec:	ret
    67f0:	adrp	x1, c000 <inflateCodesUsed@@ZLIB_1.2.9+0x1d10>
    67f4:	add	x1, x1, #0x2f8
    67f8:	mov	x3, x1
    67fc:	str	x1, [x19, #64]
    6800:	ldr	x1, [x19, #72]
    6804:	str	xzr, [x19, #80]
    6808:	mov	x0, #0x0                   	// #0
    680c:	cbnz	x1, 67ac <inflateBackInit_@@ZLIB_1.2.0+0x64>
    6810:	adrp	x1, c000 <inflateCodesUsed@@ZLIB_1.2.9+0x1d10>
    6814:	add	x1, x1, #0x300
    6818:	str	x1, [x19, #72]
    681c:	b	67ac <inflateBackInit_@@ZLIB_1.2.0+0x64>
    6820:	mov	w0, #0xfffffffa            	// #-6
    6824:	b	67e4 <inflateBackInit_@@ZLIB_1.2.0+0x9c>
    6828:	mov	w0, #0xfffffffe            	// #-2
    682c:	ldr	x21, [sp, #32]
    6830:	b	67e4 <inflateBackInit_@@ZLIB_1.2.0+0x9c>
    6834:	mov	w0, #0xfffffffa            	// #-6
    6838:	ret
    683c:	mov	w0, #0xfffffffc            	// #-4
    6840:	ldr	x21, [sp, #32]
    6844:	b	67e4 <inflateBackInit_@@ZLIB_1.2.0+0x9c>

0000000000006848 <inflateBack@@ZLIB_1.2.0>:
    6848:	stp	x29, x30, [sp, #-208]!
    684c:	mov	x29, sp
    6850:	stp	x3, x4, [sp, #112]
    6854:	cbz	x0, 7138 <inflateBack@@ZLIB_1.2.0+0x8f0>
    6858:	stp	x23, x24, [sp, #48]
    685c:	ldr	x23, [x0, #56]
    6860:	stp	x25, x26, [sp, #64]
    6864:	mov	x25, x0
    6868:	cbz	x23, 7128 <inflateBack@@ZLIB_1.2.0+0x8e0>
    686c:	stp	x19, x20, [sp, #16]
    6870:	mov	x0, #0x3f3f                	// #16191
    6874:	mov	x19, x1
    6878:	stp	x21, x22, [sp, #32]
    687c:	mov	x24, x2
    6880:	mov	w22, #0x0                   	// #0
    6884:	stp	x27, x28, [sp, #80]
    6888:	str	xzr, [x25, #48]
    688c:	str	x0, [x23, #8]
    6890:	str	wzr, [x23, #64]
    6894:	ldr	x0, [x25]
    6898:	str	x0, [sp, #200]
    689c:	cbz	x0, 68a4 <inflateBack@@ZLIB_1.2.0+0x5c>
    68a0:	ldr	w22, [x25, #8]
    68a4:	adrp	x21, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    68a8:	add	x0, x21, #0xb00
    68ac:	ldr	w20, [x23, #60]
    68b0:	add	x21, sp, #0xc8
    68b4:	str	x0, [sp, #136]
    68b8:	add	x0, x0, #0x880
    68bc:	str	x0, [sp, #128]
    68c0:	mov	w1, #0x3f3f                	// #16191
    68c4:	ldr	x0, [x23, #72]
    68c8:	mov	w27, #0x0                   	// #0
    68cc:	mov	x28, #0x0                   	// #0
    68d0:	str	x0, [sp, #104]
    68d4:	mov	w0, #0x3f48                	// #16200
    68d8:	cmp	w1, w0
    68dc:	b.eq	6998 <inflateBack@@ZLIB_1.2.0+0x150>  // b.none
    68e0:	b.hi	6a3c <inflateBack@@ZLIB_1.2.0+0x1f4>  // b.pmore
    68e4:	mov	w0, #0x3f41                	// #16193
    68e8:	cmp	w1, w0
    68ec:	b.eq	6ab8 <inflateBack@@ZLIB_1.2.0+0x270>  // b.none
    68f0:	mov	w0, #0x3f44                	// #16196
    68f4:	cmp	w1, w0
    68f8:	b.eq	6938 <inflateBack@@ZLIB_1.2.0+0xf0>  // b.none
    68fc:	b	6a0c <inflateBack@@ZLIB_1.2.0+0x1c4>
    6900:	mov	x1, x21
    6904:	mov	x0, x24
    6908:	cbnz	w22, 6918 <inflateBack@@ZLIB_1.2.0+0xd0>
    690c:	blr	x19
    6910:	mov	w22, w0
    6914:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    6918:	ldr	x0, [sp, #200]
    691c:	sub	w22, w22, #0x1
    6920:	add	x1, x0, #0x1
    6924:	str	x1, [sp, #200]
    6928:	ldrb	w0, [x0]
    692c:	lsl	x0, x0, x27
    6930:	add	w27, w27, #0x8
    6934:	add	x28, x28, x0
    6938:	cmp	w27, #0xd
    693c:	b.ls	6900 <inflateBack@@ZLIB_1.2.0+0xb8>  // b.plast
    6940:	and	w1, w28, #0x1f
    6944:	ubfx	w0, w28, #5, #5
    6948:	ubfx	w2, w28, #10, #4
    694c:	add	w1, w1, #0x101
    6950:	add	w0, w0, #0x1
    6954:	add	w2, w2, #0x4
    6958:	stp	w2, w1, [x23, #128]
    695c:	cmp	w1, #0x11e
    6960:	str	w0, [x23, #136]
    6964:	sub	w27, w27, #0xe
    6968:	ccmp	w0, #0x1e, #0x2, ls  // ls = plast
    696c:	lsr	x28, x28, #14
    6970:	b.ls	6d60 <inflateBack@@ZLIB_1.2.0+0x518>  // b.plast
    6974:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    6978:	add	x0, x0, #0x9e0
    697c:	str	x0, [x25, #48]
    6980:	mov	w0, #0x3f51                	// #16209
    6984:	str	w0, [x23, #8]
    6988:	mov	w1, w0
    698c:	mov	w0, #0x3f48                	// #16200
    6990:	cmp	w1, w0
    6994:	b.ne	68e0 <inflateBack@@ZLIB_1.2.0+0x98>  // b.any
    6998:	cmp	w20, #0x101
    699c:	ccmp	w22, #0x5, #0x0, hi  // hi = pmore
    69a0:	b.ls	6c00 <inflateBack@@ZLIB_1.2.0+0x3b8>  // b.plast
    69a4:	ldr	x0, [sp, #200]
    69a8:	ldr	w1, [x23, #60]
    69ac:	str	x0, [x25]
    69b0:	ldr	x0, [sp, #104]
    69b4:	str	w22, [x25, #8]
    69b8:	str	x0, [x25, #24]
    69bc:	str	w20, [x25, #32]
    69c0:	ldr	w0, [x23, #64]
    69c4:	str	x28, [x23, #80]
    69c8:	str	w27, [x23, #88]
    69cc:	cmp	w0, w1
    69d0:	b.cs	69dc <inflateBack@@ZLIB_1.2.0+0x194>  // b.hs, b.nlast
    69d4:	sub	w20, w1, w20
    69d8:	str	w20, [x23, #64]
    69dc:	mov	x0, x25
    69e0:	bl	7748 <inflateBackEnd@@ZLIB_1.2.0+0x50>
    69e4:	ldr	x0, [x25]
    69e8:	str	x0, [sp, #200]
    69ec:	ldr	x0, [x25, #24]
    69f0:	str	x0, [sp, #104]
    69f4:	ldr	w1, [x23, #8]
    69f8:	ldr	w27, [x23, #88]
    69fc:	ldr	w22, [x25, #8]
    6a00:	ldr	w20, [x25, #32]
    6a04:	ldr	x28, [x23, #80]
    6a08:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    6a0c:	mov	w0, #0x3f3f                	// #16191
    6a10:	cmp	w1, w0
    6a14:	b.ne	6aac <inflateBack@@ZLIB_1.2.0+0x264>  // b.any
    6a18:	ldr	w0, [x23, #12]
    6a1c:	cbz	w0, 6b84 <inflateBack@@ZLIB_1.2.0+0x33c>
    6a20:	and	w0, w27, #0x7
    6a24:	mov	w2, #0x3f50                	// #16208
    6a28:	and	w27, w27, #0xfffffff8
    6a2c:	mov	w1, w2
    6a30:	lsr	x28, x28, x0
    6a34:	str	w2, [x23, #8]
    6a38:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    6a3c:	mov	w0, #0x3f50                	// #16208
    6a40:	cmp	w1, w0
    6a44:	b.eq	6a80 <inflateBack@@ZLIB_1.2.0+0x238>  // b.none
    6a48:	mov	w0, #0x3f51                	// #16209
    6a4c:	cmp	w1, w0
    6a50:	b.ne	6aac <inflateBack@@ZLIB_1.2.0+0x264>  // b.any
    6a54:	ldr	x1, [sp, #200]
    6a58:	mov	w0, #0xfffffffd            	// #-3
    6a5c:	ldp	x19, x20, [sp, #16]
    6a60:	ldp	x23, x24, [sp, #48]
    6a64:	ldp	x27, x28, [sp, #80]
    6a68:	str	x1, [x25]
    6a6c:	str	w22, [x25, #8]
    6a70:	ldp	x21, x22, [sp, #32]
    6a74:	ldp	x25, x26, [sp, #64]
    6a78:	ldp	x29, x30, [sp], #208
    6a7c:	ret
    6a80:	ldr	w2, [x23, #60]
    6a84:	cmp	w2, w20
    6a88:	b.ls	6b78 <inflateBack@@ZLIB_1.2.0+0x330>  // b.plast
    6a8c:	ldp	x3, x0, [sp, #112]
    6a90:	sub	w2, w2, w20
    6a94:	ldr	x1, [x23, #72]
    6a98:	blr	x3
    6a9c:	cbz	w0, 6b78 <inflateBack@@ZLIB_1.2.0+0x330>
    6aa0:	mov	w0, #0xfffffffb            	// #-5
    6aa4:	ldr	x1, [sp, #200]
    6aa8:	b	6a5c <inflateBack@@ZLIB_1.2.0+0x214>
    6aac:	mov	w0, #0xfffffffe            	// #-2
    6ab0:	ldr	x1, [sp, #200]
    6ab4:	b	6a5c <inflateBack@@ZLIB_1.2.0+0x214>
    6ab8:	and	w0, w27, #0x7
    6abc:	and	w27, w27, #0xfffffff8
    6ac0:	cmp	w27, #0x1f
    6ac4:	lsr	x28, x28, x0
    6ac8:	b.hi	6b10 <inflateBack@@ZLIB_1.2.0+0x2c8>  // b.pmore
    6acc:	nop
    6ad0:	mov	x1, x21
    6ad4:	mov	x0, x24
    6ad8:	cbnz	w22, 6ae8 <inflateBack@@ZLIB_1.2.0+0x2a0>
    6adc:	blr	x19
    6ae0:	mov	w22, w0
    6ae4:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    6ae8:	ldr	x0, [sp, #200]
    6aec:	sub	w22, w22, #0x1
    6af0:	add	x1, x0, #0x1
    6af4:	str	x1, [sp, #200]
    6af8:	ldrb	w0, [x0]
    6afc:	lsl	x0, x0, x27
    6b00:	add	w27, w27, #0x8
    6b04:	add	x28, x28, x0
    6b08:	cmp	w27, #0x1f
    6b0c:	b.ls	6ad0 <inflateBack@@ZLIB_1.2.0+0x288>  // b.plast
    6b10:	lsr	x0, x28, #16
    6b14:	and	x1, x28, #0xffff
    6b18:	eor	x0, x0, #0xffff
    6b1c:	cmp	x0, w28, uxth
    6b20:	b.eq	6b40 <inflateBack@@ZLIB_1.2.0+0x2f8>  // b.none
    6b24:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    6b28:	add	x0, x0, #0x9c0
    6b2c:	str	x0, [x25, #48]
    6b30:	mov	w0, #0x3f51                	// #16209
    6b34:	mov	w1, w0
    6b38:	str	w0, [x23, #8]
    6b3c:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    6b40:	str	w1, [x23, #92]
    6b44:	mov	w26, w1
    6b48:	cbz	x1, 6d48 <inflateBack@@ZLIB_1.2.0+0x500>
    6b4c:	nop
    6b50:	mov	x1, x21
    6b54:	mov	x0, x24
    6b58:	cbnz	w22, 6cd0 <inflateBack@@ZLIB_1.2.0+0x488>
    6b5c:	blr	x19
    6b60:	mov	w22, w0
    6b64:	cbnz	w0, 6cd0 <inflateBack@@ZLIB_1.2.0+0x488>
    6b68:	mov	x1, #0x0                   	// #0
    6b6c:	mov	w0, #0xfffffffb            	// #-5
    6b70:	mov	w22, #0x0                   	// #0
    6b74:	b	6a5c <inflateBack@@ZLIB_1.2.0+0x214>
    6b78:	mov	w0, #0x1                   	// #1
    6b7c:	ldr	x1, [sp, #200]
    6b80:	b	6a5c <inflateBack@@ZLIB_1.2.0+0x214>
    6b84:	cmp	w27, #0x2
    6b88:	b.hi	6bc4 <inflateBack@@ZLIB_1.2.0+0x37c>  // b.pmore
    6b8c:	cbnz	w22, 6ba4 <inflateBack@@ZLIB_1.2.0+0x35c>
    6b90:	mov	x1, x21
    6b94:	mov	x0, x24
    6b98:	blr	x19
    6b9c:	mov	w22, w0
    6ba0:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    6ba4:	ldr	x0, [sp, #200]
    6ba8:	sub	w22, w22, #0x1
    6bac:	add	x1, x0, #0x1
    6bb0:	str	x1, [sp, #200]
    6bb4:	ldrb	w0, [x0]
    6bb8:	lsl	x0, x0, x27
    6bbc:	add	w27, w27, #0x8
    6bc0:	add	x28, x28, x0
    6bc4:	and	w0, w28, #0x1
    6bc8:	str	w0, [x23, #12]
    6bcc:	ubfx	w0, w28, #1, #2
    6bd0:	cmp	w0, #0x2
    6bd4:	b.eq	6cc0 <inflateBack@@ZLIB_1.2.0+0x478>  // b.none
    6bd8:	cmp	w0, #0x3
    6bdc:	b.eq	6ef0 <inflateBack@@ZLIB_1.2.0+0x6a8>  // b.none
    6be0:	cmp	w0, #0x1
    6be4:	b.eq	6ec8 <inflateBack@@ZLIB_1.2.0+0x680>  // b.none
    6be8:	mov	w0, #0x3f41                	// #16193
    6bec:	mov	w1, w0
    6bf0:	str	w0, [x23, #8]
    6bf4:	lsr	x28, x28, #3
    6bf8:	sub	w27, w27, #0x3
    6bfc:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    6c00:	ldr	w3, [x23, #120]
    6c04:	mov	w1, #0xffffffff            	// #-1
    6c08:	ldr	x2, [x23, #104]
    6c0c:	lsl	w0, w1, w3
    6c10:	bic	w0, w28, w0
    6c14:	lsl	x0, x0, #2
    6c18:	add	x4, x2, x0
    6c1c:	ldrb	w26, [x4, #1]
    6c20:	cmp	w27, w26
    6c24:	b.cs	7140 <inflateBack@@ZLIB_1.2.0+0x8f8>  // b.hs, b.nlast
    6c28:	mov	w5, w1
    6c2c:	nop
    6c30:	mov	x1, x21
    6c34:	mov	x0, x24
    6c38:	cbnz	w22, 6c54 <inflateBack@@ZLIB_1.2.0+0x40c>
    6c3c:	blr	x19
    6c40:	mov	w22, w0
    6c44:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    6c48:	ldr	w3, [x23, #120]
    6c4c:	mov	w5, #0xffffffff            	// #-1
    6c50:	ldr	x2, [x23, #104]
    6c54:	lsl	w0, w5, w3
    6c58:	ldr	x1, [sp, #200]
    6c5c:	sub	w22, w22, #0x1
    6c60:	add	x4, x1, #0x1
    6c64:	str	x4, [sp, #200]
    6c68:	ldrb	w1, [x1]
    6c6c:	lsl	x1, x1, x27
    6c70:	add	x28, x28, x1
    6c74:	bic	w0, w28, w0
    6c78:	add	w27, w27, #0x8
    6c7c:	add	x0, x2, x0, lsl #2
    6c80:	ldrb	w26, [x0, #1]
    6c84:	cmp	w26, w27
    6c88:	b.hi	6c30 <inflateBack@@ZLIB_1.2.0+0x3e8>  // b.pmore
    6c8c:	ldrb	w1, [x0]
    6c90:	ldrh	w5, [x0, #2]
    6c94:	cbz	w1, 6e74 <inflateBack@@ZLIB_1.2.0+0x62c>
    6c98:	tst	w1, #0xf0
    6c9c:	b.eq	6f2c <inflateBack@@ZLIB_1.2.0+0x6e4>  // b.none
    6ca0:	sub	w27, w27, w26
    6ca4:	lsr	x28, x28, x26
    6ca8:	str	w5, [x23, #92]
    6cac:	tbz	w1, #5, 6f0c <inflateBack@@ZLIB_1.2.0+0x6c4>
    6cb0:	mov	w0, #0x3f3f                	// #16191
    6cb4:	mov	w1, w0
    6cb8:	str	w0, [x23, #8]
    6cbc:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    6cc0:	mov	w0, #0x3f44                	// #16196
    6cc4:	mov	w1, w0
    6cc8:	str	w0, [x23, #8]
    6ccc:	b	6bf4 <inflateBack@@ZLIB_1.2.0+0x3ac>
    6cd0:	cbnz	w20, 6cf4 <inflateBack@@ZLIB_1.2.0+0x4ac>
    6cd4:	ldp	x3, x0, [sp, #112]
    6cd8:	ldr	x1, [x23, #72]
    6cdc:	str	x1, [sp, #104]
    6ce0:	ldr	w20, [x23, #60]
    6ce4:	str	w20, [x23, #64]
    6ce8:	mov	w2, w20
    6cec:	blr	x3
    6cf0:	cbnz	w0, 6aa0 <inflateBack@@ZLIB_1.2.0+0x258>
    6cf4:	cmp	w22, w20
    6cf8:	csel	w27, w22, w20, ls  // ls = plast
    6cfc:	ldr	x0, [sp, #104]
    6d00:	cmp	w27, w26
    6d04:	ldr	x1, [sp, #200]
    6d08:	csel	w28, w27, w26, ls  // ls = plast
    6d0c:	mov	x2, x28
    6d10:	csel	w27, w27, w26, ls  // ls = plast
    6d14:	sub	w22, w22, w27
    6d18:	sub	w20, w20, w27
    6d1c:	bl	23a0 <memcpy@plt>
    6d20:	ldr	w26, [x23, #92]
    6d24:	ldr	x0, [sp, #200]
    6d28:	sub	w26, w26, w27
    6d2c:	str	w26, [x23, #92]
    6d30:	add	x0, x0, x28
    6d34:	str	x0, [sp, #200]
    6d38:	ldr	x0, [sp, #104]
    6d3c:	add	x0, x0, x28
    6d40:	str	x0, [sp, #104]
    6d44:	cbnz	w26, 6b50 <inflateBack@@ZLIB_1.2.0+0x308>
    6d48:	mov	w0, #0x3f3f                	// #16191
    6d4c:	mov	w27, #0x0                   	// #0
    6d50:	mov	w1, w0
    6d54:	mov	x28, #0x0                   	// #0
    6d58:	str	w0, [x23, #8]
    6d5c:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    6d60:	str	wzr, [x23, #140]
    6d64:	mov	x1, x21
    6d68:	mov	x0, x24
    6d6c:	cmp	w27, #0x2
    6d70:	b.hi	6da4 <inflateBack@@ZLIB_1.2.0+0x55c>  // b.pmore
    6d74:	cbnz	w22, 6d84 <inflateBack@@ZLIB_1.2.0+0x53c>
    6d78:	blr	x19
    6d7c:	mov	w22, w0
    6d80:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    6d84:	ldr	x0, [sp, #200]
    6d88:	sub	w22, w22, #0x1
    6d8c:	add	x1, x0, #0x1
    6d90:	str	x1, [sp, #200]
    6d94:	ldrb	w0, [x0]
    6d98:	lsl	x0, x0, x27
    6d9c:	add	w27, w27, #0x8
    6da0:	add	x28, x28, x0
    6da4:	ldr	w0, [x23, #140]
    6da8:	and	w1, w28, #0x7
    6dac:	ldr	w3, [x23, #128]
    6db0:	sub	w27, w27, #0x3
    6db4:	add	w2, w0, #0x1
    6db8:	str	w2, [x23, #140]
    6dbc:	cmp	w2, w3
    6dc0:	lsr	x28, x28, #3
    6dc4:	ldr	x3, [sp, #128]
    6dc8:	ldrh	w0, [x3, w0, uxtw #1]
    6dcc:	add	x0, x23, x0, lsl #1
    6dd0:	strh	w1, [x0, #152]
    6dd4:	b.cc	6d64 <inflateBack@@ZLIB_1.2.0+0x51c>  // b.lo, b.ul, b.last
    6dd8:	cmp	w2, #0x12
    6ddc:	b.hi	6e14 <inflateBack@@ZLIB_1.2.0+0x5cc>  // b.pmore
    6de0:	ldr	x0, [sp, #128]
    6de4:	mov	w3, #0x12                  	// #18
    6de8:	sub	w3, w3, w2
    6dec:	add	x4, x0, w2, uxtw #1
    6df0:	mov	x0, #0x0                   	// #0
    6df4:	ldrh	w1, [x4, x0, lsl #1]
    6df8:	cmp	x3, x0
    6dfc:	add	x0, x0, #0x1
    6e00:	add	x1, x23, x1, lsl #1
    6e04:	strh	wzr, [x1, #152]
    6e08:	b.ne	6df4 <inflateBack@@ZLIB_1.2.0+0x5ac>  // b.any
    6e0c:	mov	w0, #0x13                  	// #19
    6e10:	str	w0, [x23, #140]
    6e14:	add	x2, x23, #0x558
    6e18:	mov	w0, #0x7                   	// #7
    6e1c:	str	x2, [x23, #104]
    6e20:	add	x1, x23, #0x98
    6e24:	str	w0, [x23, #120]
    6e28:	add	x0, x23, #0x318
    6e2c:	str	x2, [x23, #144]
    6e30:	add	x3, x23, #0x90
    6e34:	add	x4, x23, #0x78
    6e38:	mov	x5, x0
    6e3c:	stp	x1, x3, [sp, #144]
    6e40:	stp	x0, x2, [sp, #160]
    6e44:	mov	w2, #0x13                  	// #19
    6e48:	mov	w0, #0x0                   	// #0
    6e4c:	str	x4, [sp, #176]
    6e50:	bl	a348 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    6e54:	cbz	w0, 7360 <inflateBack@@ZLIB_1.2.0+0xb18>
    6e58:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    6e5c:	add	x0, x0, #0xa08
    6e60:	str	x0, [x25, #48]
    6e64:	mov	w0, #0x3f51                	// #16209
    6e68:	mov	w1, w0
    6e6c:	str	w0, [x23, #8]
    6e70:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    6e74:	sub	w27, w27, w26
    6e78:	lsr	x28, x28, x26
    6e7c:	str	w5, [x23, #92]
    6e80:	cbnz	w20, 6ea4 <inflateBack@@ZLIB_1.2.0+0x65c>
    6e84:	ldp	x3, x0, [sp, #112]
    6e88:	ldr	x1, [x23, #72]
    6e8c:	str	x1, [sp, #104]
    6e90:	ldr	w20, [x23, #60]
    6e94:	str	w20, [x23, #64]
    6e98:	mov	w2, w20
    6e9c:	blr	x3
    6ea0:	cbnz	w0, 6aa0 <inflateBack@@ZLIB_1.2.0+0x258>
    6ea4:	ldr	x2, [sp, #104]
    6ea8:	mov	w0, #0x3f48                	// #16200
    6eac:	ldr	w3, [x23, #92]
    6eb0:	sub	w20, w20, #0x1
    6eb4:	mov	w1, w0
    6eb8:	strb	w3, [x2], #1
    6ebc:	str	w0, [x23, #8]
    6ec0:	str	x2, [sp, #104]
    6ec4:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    6ec8:	ldr	x4, [sp, #136]
    6ecc:	mov	x3, #0x9                   	// #9
    6ed0:	mov	w2, #0x3f48                	// #16200
    6ed4:	movk	x3, #0x5, lsl #32
    6ed8:	add	x0, x4, #0x800
    6edc:	mov	w1, w2
    6ee0:	str	w2, [x23, #8]
    6ee4:	stp	x4, x0, [x23, #104]
    6ee8:	str	x3, [x23, #120]
    6eec:	b	6bf4 <inflateBack@@ZLIB_1.2.0+0x3ac>
    6ef0:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    6ef4:	add	x0, x0, #0x9a8
    6ef8:	str	x0, [x25, #48]
    6efc:	mov	w2, #0x3f51                	// #16209
    6f00:	mov	w1, w2
    6f04:	str	w2, [x23, #8]
    6f08:	b	6bf4 <inflateBack@@ZLIB_1.2.0+0x3ac>
    6f0c:	tbz	w1, #6, 6ff0 <inflateBack@@ZLIB_1.2.0+0x7a8>
    6f10:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    6f14:	add	x0, x0, #0xaa8
    6f18:	str	x0, [x25, #48]
    6f1c:	mov	w0, #0x3f51                	// #16209
    6f20:	mov	w1, w0
    6f24:	str	w0, [x23, #8]
    6f28:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    6f2c:	add	w1, w1, w26
    6f30:	mov	w0, #0xffffffff            	// #-1
    6f34:	lsl	w1, w0, w1
    6f38:	bic	w0, w28, w1
    6f3c:	mvn	w6, w1
    6f40:	lsr	w0, w0, w26
    6f44:	add	w0, w0, w5
    6f48:	lsl	x0, x0, #2
    6f4c:	add	x4, x2, x0
    6f50:	ldrb	w3, [x4, #1]
    6f54:	add	w1, w3, w26
    6f58:	cmp	w1, w27
    6f5c:	b.ls	75a4 <inflateBack@@ZLIB_1.2.0+0xd5c>  // b.plast
    6f60:	mov	x1, x21
    6f64:	mov	x0, x24
    6f68:	cbnz	w22, 6f8c <inflateBack@@ZLIB_1.2.0+0x744>
    6f6c:	str	w5, [sp, #144]
    6f70:	str	w6, [sp, #152]
    6f74:	blr	x19
    6f78:	mov	w22, w0
    6f7c:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    6f80:	ldr	w5, [sp, #144]
    6f84:	ldr	w6, [sp, #152]
    6f88:	ldr	x2, [x23, #104]
    6f8c:	sub	w22, w22, #0x1
    6f90:	ldr	x0, [sp, #200]
    6f94:	add	x1, x0, #0x1
    6f98:	str	x1, [sp, #200]
    6f9c:	ldrb	w0, [x0]
    6fa0:	lsl	x0, x0, x27
    6fa4:	add	x28, x28, x0
    6fa8:	and	w0, w6, w28
    6fac:	add	w27, w27, #0x8
    6fb0:	lsr	w0, w0, w26
    6fb4:	add	w0, w0, w5
    6fb8:	add	x0, x2, x0, lsl #2
    6fbc:	ldrb	w3, [x0, #1]
    6fc0:	add	w1, w3, w26
    6fc4:	cmp	w1, w27
    6fc8:	b.hi	6f60 <inflateBack@@ZLIB_1.2.0+0x718>  // b.pmore
    6fcc:	ldrb	w1, [x0]
    6fd0:	ldrh	w0, [x0, #2]
    6fd4:	str	w0, [x23, #92]
    6fd8:	sub	w7, w27, w26
    6fdc:	lsr	x8, x28, x26
    6fe0:	sub	w27, w7, w3
    6fe4:	lsr	x28, x8, x3
    6fe8:	cbnz	w1, 6cac <inflateBack@@ZLIB_1.2.0+0x464>
    6fec:	b	6e80 <inflateBack@@ZLIB_1.2.0+0x638>
    6ff0:	and	w1, w1, #0xf
    6ff4:	str	w1, [x23, #100]
    6ff8:	cbnz	w1, 70fc <inflateBack@@ZLIB_1.2.0+0x8b4>
    6ffc:	ldr	w4, [x23, #124]
    7000:	mov	w26, #0xffffffff            	// #-1
    7004:	ldr	x2, [x23, #112]
    7008:	lsl	w0, w26, w4
    700c:	bic	w0, w28, w0
    7010:	lsl	x0, x0, #2
    7014:	add	x5, x2, x0
    7018:	ldrb	w1, [x5, #1]
    701c:	cmp	w1, w27
    7020:	mov	w7, w1
    7024:	b.ls	7590 <inflateBack@@ZLIB_1.2.0+0xd48>  // b.plast
    7028:	mov	x1, x21
    702c:	mov	x0, x24
    7030:	cbnz	w22, 7048 <inflateBack@@ZLIB_1.2.0+0x800>
    7034:	blr	x19
    7038:	mov	w22, w0
    703c:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    7040:	ldr	w4, [x23, #124]
    7044:	ldr	x2, [x23, #112]
    7048:	lsl	w0, w26, w4
    704c:	ldr	x1, [sp, #200]
    7050:	sub	w22, w22, #0x1
    7054:	add	x3, x1, #0x1
    7058:	str	x3, [sp, #200]
    705c:	ldrb	w1, [x1]
    7060:	lsl	x1, x1, x27
    7064:	add	x28, x28, x1
    7068:	bic	w0, w28, w0
    706c:	add	w27, w27, #0x8
    7070:	add	x0, x2, x0, lsl #2
    7074:	ldrb	w1, [x0, #1]
    7078:	cmp	w1, w27
    707c:	mov	w7, w1
    7080:	b.hi	7028 <inflateBack@@ZLIB_1.2.0+0x7e0>  // b.pmore
    7084:	ldrb	w3, [x0]
    7088:	ldrh	w26, [x0, #2]
    708c:	tst	w3, #0xf0
    7090:	mov	w6, w1
    7094:	b.eq	72a4 <inflateBack@@ZLIB_1.2.0+0xa5c>  // b.none
    7098:	sub	w27, w27, w1
    709c:	lsr	x28, x28, x1
    70a0:	tbz	w3, #6, 714c <inflateBack@@ZLIB_1.2.0+0x904>
    70a4:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    70a8:	add	x0, x0, #0xac8
    70ac:	str	x0, [x25, #48]
    70b0:	mov	w0, #0x3f51                	// #16209
    70b4:	mov	w1, w0
    70b8:	str	w0, [x23, #8]
    70bc:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    70c0:	mov	x1, x21
    70c4:	mov	x0, x24
    70c8:	cbnz	w22, 70d8 <inflateBack@@ZLIB_1.2.0+0x890>
    70cc:	blr	x19
    70d0:	mov	w22, w0
    70d4:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    70d8:	ldr	x0, [sp, #200]
    70dc:	sub	w22, w22, #0x1
    70e0:	ldr	w1, [x23, #100]
    70e4:	add	x2, x0, #0x1
    70e8:	str	x2, [sp, #200]
    70ec:	ldrb	w0, [x0]
    70f0:	lsl	x0, x0, x27
    70f4:	add	w27, w27, #0x8
    70f8:	add	x28, x28, x0
    70fc:	cmp	w1, w27
    7100:	b.hi	70c0 <inflateBack@@ZLIB_1.2.0+0x878>  // b.pmore
    7104:	ldr	w2, [x23, #92]
    7108:	mov	w0, #0xffffffff            	// #-1
    710c:	lsl	w0, w0, w1
    7110:	bic	w0, w28, w0
    7114:	add	w0, w2, w0
    7118:	sub	w27, w27, w1
    711c:	lsr	x28, x28, x1
    7120:	str	w0, [x23, #92]
    7124:	b	6ffc <inflateBack@@ZLIB_1.2.0+0x7b4>
    7128:	mov	w0, #0xfffffffe            	// #-2
    712c:	ldp	x23, x24, [sp, #48]
    7130:	ldp	x25, x26, [sp, #64]
    7134:	b	6a78 <inflateBack@@ZLIB_1.2.0+0x230>
    7138:	mov	w0, #0xfffffffe            	// #-2
    713c:	b	6a78 <inflateBack@@ZLIB_1.2.0+0x230>
    7140:	ldrb	w1, [x2, x0]
    7144:	ldrh	w5, [x4, #2]
    7148:	b	6c94 <inflateBack@@ZLIB_1.2.0+0x44c>
    714c:	and	w0, w3, #0xf
    7150:	stp	w26, w0, [x23, #96]
    7154:	cbnz	w0, 71c8 <inflateBack@@ZLIB_1.2.0+0x980>
    7158:	ldp	w2, w0, [x23, #60]
    715c:	cmp	w2, w0
    7160:	csel	w0, w20, wzr, hi  // hi = pmore
    7164:	sub	w0, w2, w0
    7168:	cmp	w0, w26
    716c:	b.cs	7208 <inflateBack@@ZLIB_1.2.0+0x9c0>  // b.hs, b.nlast
    7170:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    7174:	add	x0, x0, #0xae0
    7178:	str	x0, [x25, #48]
    717c:	mov	w0, #0x3f51                	// #16209
    7180:	mov	w1, w0
    7184:	str	w0, [x23, #8]
    7188:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    718c:	mov	x1, x21
    7190:	mov	x0, x24
    7194:	cbnz	w22, 71a4 <inflateBack@@ZLIB_1.2.0+0x95c>
    7198:	blr	x19
    719c:	mov	w22, w0
    71a0:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    71a4:	ldr	x1, [sp, #200]
    71a8:	sub	w22, w22, #0x1
    71ac:	ldr	w0, [x23, #100]
    71b0:	add	x2, x1, #0x1
    71b4:	str	x2, [sp, #200]
    71b8:	ldrb	w1, [x1]
    71bc:	lsl	x1, x1, x27
    71c0:	add	w27, w27, #0x8
    71c4:	add	x28, x28, x1
    71c8:	cmp	w0, w27
    71cc:	b.hi	718c <inflateBack@@ZLIB_1.2.0+0x944>  // b.pmore
    71d0:	ldr	w1, [x23, #96]
    71d4:	mov	w26, #0xffffffff            	// #-1
    71d8:	lsl	w26, w26, w0
    71dc:	bic	w26, w28, w26
    71e0:	add	w26, w26, w1
    71e4:	sub	w27, w27, w0
    71e8:	lsr	x28, x28, x0
    71ec:	str	w26, [x23, #96]
    71f0:	b	7158 <inflateBack@@ZLIB_1.2.0+0x910>
    71f4:	ldr	w0, [x23, #92]
    71f8:	add	x1, x6, x5
    71fc:	str	x1, [sp, #104]
    7200:	cbz	w0, 759c <inflateBack@@ZLIB_1.2.0+0xd54>
    7204:	ldr	w2, [x23, #60]
    7208:	mov	w26, w2
    720c:	cbnz	w20, 7234 <inflateBack@@ZLIB_1.2.0+0x9ec>
    7210:	ldr	x0, [x23, #72]
    7214:	str	w2, [x23, #64]
    7218:	mov	x1, x0
    721c:	str	x1, [sp, #104]
    7220:	ldp	x3, x0, [sp, #112]
    7224:	blr	x3
    7228:	cbnz	w0, 6aa0 <inflateBack@@ZLIB_1.2.0+0x258>
    722c:	mov	w20, w26
    7230:	ldr	w26, [x23, #60]
    7234:	ldr	w3, [x23, #96]
    7238:	sub	w0, w26, w3
    723c:	cmp	w20, w0
    7240:	b.ls	7294 <inflateBack@@ZLIB_1.2.0+0xa4c>  // b.plast
    7244:	ldr	x2, [sp, #104]
    7248:	add	w1, w3, w20
    724c:	sub	w1, w1, w26
    7250:	add	x3, x2, w0, uxtw
    7254:	ldr	w2, [x23, #92]
    7258:	mov	x0, #0x0                   	// #0
    725c:	cmp	w2, w1
    7260:	csel	w1, w2, w1, ls  // ls = plast
    7264:	sub	w4, w1, #0x1
    7268:	sub	w20, w20, w1
    726c:	add	x5, x4, #0x1
    7270:	sub	w1, w2, w1
    7274:	str	w1, [x23, #92]
    7278:	ldr	x6, [sp, #104]
    727c:	cmp	x4, x0
    7280:	ldrb	w2, [x3, x0]
    7284:	strb	w2, [x6, x0]
    7288:	add	x0, x0, #0x1
    728c:	b.ne	7278 <inflateBack@@ZLIB_1.2.0+0xa30>  // b.any
    7290:	b	71f4 <inflateBack@@ZLIB_1.2.0+0x9ac>
    7294:	ldr	x0, [sp, #104]
    7298:	mov	w1, w20
    729c:	sub	x3, x0, w3, uxtw
    72a0:	b	7254 <inflateBack@@ZLIB_1.2.0+0xa0c>
    72a4:	add	w0, w3, w1
    72a8:	mov	w3, #0xffffffff            	// #-1
    72ac:	lsl	w3, w3, w0
    72b0:	bic	w0, w28, w3
    72b4:	mvn	w3, w3
    72b8:	lsr	w0, w0, w1
    72bc:	add	w0, w0, w26
    72c0:	add	x4, x2, x0, lsl #2
    72c4:	lsl	x0, x0, #2
    72c8:	ldrb	w1, [x4, #1]
    72cc:	add	w5, w1, w6
    72d0:	cmp	w5, w27
    72d4:	b.ls	75b0 <inflateBack@@ZLIB_1.2.0+0xd68>  // b.plast
    72d8:	mov	x1, x21
    72dc:	mov	x0, x24
    72e0:	cbnz	w22, 730c <inflateBack@@ZLIB_1.2.0+0xac4>
    72e4:	str	w3, [sp, #144]
    72e8:	str	w7, [sp, #152]
    72ec:	str	w6, [sp, #160]
    72f0:	blr	x19
    72f4:	mov	w22, w0
    72f8:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    72fc:	ldr	w3, [sp, #144]
    7300:	ldr	w7, [sp, #152]
    7304:	ldr	w6, [sp, #160]
    7308:	ldr	x2, [x23, #112]
    730c:	sub	w22, w22, #0x1
    7310:	ldr	x0, [sp, #200]
    7314:	add	x1, x0, #0x1
    7318:	str	x1, [sp, #200]
    731c:	ldrb	w0, [x0]
    7320:	lsl	x0, x0, x27
    7324:	add	x28, x28, x0
    7328:	and	w0, w3, w28
    732c:	add	w27, w27, #0x8
    7330:	lsr	w0, w0, w6
    7334:	add	w0, w0, w26
    7338:	add	x0, x2, x0, lsl #2
    733c:	ldrb	w1, [x0, #1]
    7340:	add	w4, w1, w6
    7344:	cmp	w4, w27
    7348:	b.hi	72d8 <inflateBack@@ZLIB_1.2.0+0xa90>  // b.pmore
    734c:	ldrb	w3, [x0]
    7350:	ldrh	w26, [x0, #2]
    7354:	sub	w27, w27, w7
    7358:	lsr	x28, x28, x6
    735c:	b	7098 <inflateBack@@ZLIB_1.2.0+0x850>
    7360:	ldp	w2, w3, [x23, #132]
    7364:	str	wzr, [x23, #140]
    7368:	cmn	w2, w3
    736c:	b.eq	7428 <inflateBack@@ZLIB_1.2.0+0xbe0>  // b.none
    7370:	mov	w26, #0xffffffff            	// #-1
    7374:	ldr	w3, [x23, #120]
    7378:	ldr	x2, [x23, #104]
    737c:	lsl	w0, w26, w3
    7380:	bic	w0, w28, w0
    7384:	add	x0, x2, x0, lsl #2
    7388:	ldrb	w4, [x0, #1]
    738c:	cmp	w4, w27
    7390:	b.ls	73ec <inflateBack@@ZLIB_1.2.0+0xba4>  // b.plast
    7394:	mov	x1, x21
    7398:	mov	x0, x24
    739c:	cbnz	w22, 73b4 <inflateBack@@ZLIB_1.2.0+0xb6c>
    73a0:	blr	x19
    73a4:	mov	w22, w0
    73a8:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    73ac:	ldr	w3, [x23, #120]
    73b0:	ldr	x2, [x23, #104]
    73b4:	lsl	w0, w26, w3
    73b8:	ldr	x1, [sp, #200]
    73bc:	sub	w22, w22, #0x1
    73c0:	add	x4, x1, #0x1
    73c4:	str	x4, [sp, #200]
    73c8:	ldrb	w1, [x1]
    73cc:	lsl	x1, x1, x27
    73d0:	add	x28, x28, x1
    73d4:	bic	w0, w28, w0
    73d8:	add	w27, w27, #0x8
    73dc:	add	x0, x2, x0, lsl #2
    73e0:	ldrb	w4, [x0, #1]
    73e4:	cmp	w4, w27
    73e8:	b.hi	7394 <inflateBack@@ZLIB_1.2.0+0xb4c>  // b.pmore
    73ec:	ldrh	w1, [x0, #2]
    73f0:	cmp	w1, #0xf
    73f4:	b.hi	7458 <inflateBack@@ZLIB_1.2.0+0xc10>  // b.pmore
    73f8:	ldr	w0, [x23, #140]
    73fc:	sub	w27, w27, w4
    7400:	lsr	x28, x28, x4
    7404:	mov	w4, w0
    7408:	add	w0, w0, #0x1
    740c:	str	w0, [x23, #140]
    7410:	add	x4, x23, w4, uxtw #1
    7414:	ldp	w2, w3, [x23, #132]
    7418:	strh	w1, [x4, #152]
    741c:	add	w2, w2, w3
    7420:	cmp	w0, w2
    7424:	b.cc	7374 <inflateBack@@ZLIB_1.2.0+0xb2c>  // b.lo, b.ul, b.last
    7428:	ldr	w1, [x23, #8]
    742c:	mov	w26, #0x3f51                	// #16209
    7430:	cmp	w1, w26
    7434:	b.eq	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>  // b.none
    7438:	ldrh	w0, [x23, #664]
    743c:	cbnz	w0, 765c <inflateBack@@ZLIB_1.2.0+0xe14>
    7440:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    7444:	add	x0, x0, #0xa48
    7448:	str	x0, [x25, #48]
    744c:	mov	w1, w26
    7450:	str	w26, [x23, #8]
    7454:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    7458:	cmp	w1, #0x10
    745c:	b.eq	75d8 <inflateBack@@ZLIB_1.2.0+0xd90>  // b.none
    7460:	cmp	w1, #0x11
    7464:	b.eq	7514 <inflateBack@@ZLIB_1.2.0+0xccc>  // b.none
    7468:	add	w2, w4, #0x7
    746c:	cmp	w2, w27
    7470:	b.ls	74bc <inflateBack@@ZLIB_1.2.0+0xc74>  // b.plast
    7474:	mov	x1, x21
    7478:	mov	x0, x24
    747c:	cbnz	w22, 7494 <inflateBack@@ZLIB_1.2.0+0xc4c>
    7480:	stp	w4, w2, [sp, #184]
    7484:	blr	x19
    7488:	mov	w22, w0
    748c:	ldp	w4, w2, [sp, #184]
    7490:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    7494:	ldr	x0, [sp, #200]
    7498:	sub	w22, w22, #0x1
    749c:	add	x1, x0, #0x1
    74a0:	str	x1, [sp, #200]
    74a4:	ldrb	w0, [x0]
    74a8:	lsl	x0, x0, x27
    74ac:	add	w27, w27, #0x8
    74b0:	add	x28, x28, x0
    74b4:	cmp	w27, w2
    74b8:	b.cc	7474 <inflateBack@@ZLIB_1.2.0+0xc2c>  // b.lo, b.ul, b.last
    74bc:	lsr	x8, x28, x4
    74c0:	sub	w7, w27, w4
    74c4:	and	w1, w8, #0x7f
    74c8:	ldr	w0, [x23, #140]
    74cc:	sub	w27, w7, #0x7
    74d0:	add	w1, w1, #0xb
    74d4:	lsr	x28, x8, #7
    74d8:	mov	w4, #0x0                   	// #0
    74dc:	ldp	w2, w3, [x23, #132]
    74e0:	add	w1, w0, w1
    74e4:	add	w5, w2, w3
    74e8:	cmp	w1, w5
    74ec:	b.hi	75bc <inflateBack@@ZLIB_1.2.0+0xd74>  // b.pmore
    74f0:	and	w4, w4, #0xffff
    74f4:	add	x5, x23, w0, uxtw #1
    74f8:	add	w0, w0, #0x1
    74fc:	cmp	w1, w0
    7500:	strh	w4, [x5, #152]
    7504:	b.ne	74f4 <inflateBack@@ZLIB_1.2.0+0xcac>  // b.any
    7508:	mov	w0, w1
    750c:	str	w1, [x23, #140]
    7510:	b	741c <inflateBack@@ZLIB_1.2.0+0xbd4>
    7514:	add	w2, w4, #0x3
    7518:	cmp	w2, w27
    751c:	b.ls	7568 <inflateBack@@ZLIB_1.2.0+0xd20>  // b.plast
    7520:	mov	x1, x21
    7524:	mov	x0, x24
    7528:	cbnz	w22, 7540 <inflateBack@@ZLIB_1.2.0+0xcf8>
    752c:	stp	w4, w2, [sp, #184]
    7530:	blr	x19
    7534:	mov	w22, w0
    7538:	ldp	w4, w2, [sp, #184]
    753c:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    7540:	ldr	x0, [sp, #200]
    7544:	sub	w22, w22, #0x1
    7548:	add	x1, x0, #0x1
    754c:	str	x1, [sp, #200]
    7550:	ldrb	w0, [x0]
    7554:	lsl	x0, x0, x27
    7558:	add	w27, w27, #0x8
    755c:	add	x28, x28, x0
    7560:	cmp	w27, w2
    7564:	b.cc	7520 <inflateBack@@ZLIB_1.2.0+0xcd8>  // b.lo, b.ul, b.last
    7568:	lsr	x8, x28, x4
    756c:	mov	w0, #0xfffffffd            	// #-3
    7570:	and	w1, w8, #0x7
    7574:	sub	w4, w0, w4
    7578:	add	w27, w27, w4
    757c:	ldr	w0, [x23, #140]
    7580:	add	w1, w1, #0x3
    7584:	lsr	x28, x8, #3
    7588:	mov	w4, #0x0                   	// #0
    758c:	b	74dc <inflateBack@@ZLIB_1.2.0+0xc94>
    7590:	ldrb	w3, [x2, x0]
    7594:	ldrh	w26, [x5, #2]
    7598:	b	708c <inflateBack@@ZLIB_1.2.0+0x844>
    759c:	ldr	w1, [x23, #8]
    75a0:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    75a4:	ldrb	w1, [x2, x0]
    75a8:	ldrh	w0, [x4, #2]
    75ac:	b	6fd4 <inflateBack@@ZLIB_1.2.0+0x78c>
    75b0:	ldrb	w3, [x2, x0]
    75b4:	ldrh	w26, [x4, #2]
    75b8:	b	7354 <inflateBack@@ZLIB_1.2.0+0xb0c>
    75bc:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    75c0:	add	x0, x0, #0xa28
    75c4:	str	x0, [x25, #48]
    75c8:	mov	w1, #0x3f51                	// #16209
    75cc:	mov	w0, #0x3f51                	// #16209
    75d0:	str	w0, [x23, #8]
    75d4:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    75d8:	add	w2, w4, #0x2
    75dc:	cmp	w2, w27
    75e0:	b.ls	762c <inflateBack@@ZLIB_1.2.0+0xde4>  // b.plast
    75e4:	mov	x1, x21
    75e8:	mov	x0, x24
    75ec:	cbnz	w22, 7604 <inflateBack@@ZLIB_1.2.0+0xdbc>
    75f0:	stp	w4, w2, [sp, #184]
    75f4:	blr	x19
    75f8:	mov	w22, w0
    75fc:	ldp	w4, w2, [sp, #184]
    7600:	cbz	w0, 6b68 <inflateBack@@ZLIB_1.2.0+0x320>
    7604:	ldr	x0, [sp, #200]
    7608:	sub	w22, w22, #0x1
    760c:	add	x1, x0, #0x1
    7610:	str	x1, [sp, #200]
    7614:	ldrb	w0, [x0]
    7618:	lsl	x0, x0, x27
    761c:	add	w27, w27, #0x8
    7620:	add	x28, x28, x0
    7624:	cmp	w27, w2
    7628:	b.cc	75e4 <inflateBack@@ZLIB_1.2.0+0xd9c>  // b.lo, b.ul, b.last
    762c:	ldr	w0, [x23, #140]
    7630:	sub	w27, w27, w4
    7634:	lsr	x28, x28, x4
    7638:	cbz	w0, 75bc <inflateBack@@ZLIB_1.2.0+0xd74>
    763c:	sub	w2, w0, #0x1
    7640:	and	w1, w28, #0x3
    7644:	sub	w27, w27, #0x2
    7648:	add	w1, w1, #0x3
    764c:	add	x2, x23, x2, lsl #1
    7650:	lsr	x28, x28, #2
    7654:	ldrh	w4, [x2, #152]
    7658:	b	74dc <inflateBack@@ZLIB_1.2.0+0xc94>
    765c:	ldp	x3, x5, [sp, #152]
    7660:	mov	w0, #0x9                   	// #9
    7664:	ldp	x1, x4, [sp, #168]
    7668:	str	x1, [x23, #104]
    766c:	ldr	w2, [x23, #132]
    7670:	str	x1, [x23, #144]
    7674:	ldr	x1, [sp, #144]
    7678:	str	w0, [x23, #120]
    767c:	mov	w0, #0x1                   	// #1
    7680:	bl	a348 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    7684:	cbz	w0, 76a0 <inflateBack@@ZLIB_1.2.0+0xe58>
    7688:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    768c:	add	x0, x0, #0xa70
    7690:	str	x0, [x25, #48]
    7694:	mov	w1, w26
    7698:	str	w26, [x23, #8]
    769c:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    76a0:	ldp	x6, x3, [sp, #144]
    76a4:	mov	x4, x23
    76a8:	ldp	w1, w2, [x23, #132]
    76ac:	ldr	x0, [x23, #144]
    76b0:	str	x0, [x23, #112]
    76b4:	ldr	x5, [sp, #160]
    76b8:	mov	w0, #0x6                   	// #6
    76bc:	str	w0, [x4, #124]!
    76c0:	add	x1, x6, x1, lsl #1
    76c4:	mov	w0, #0x2                   	// #2
    76c8:	bl	a348 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    76cc:	cbz	w0, 76e8 <inflateBack@@ZLIB_1.2.0+0xea0>
    76d0:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    76d4:	add	x0, x0, #0xa90
    76d8:	str	x0, [x25, #48]
    76dc:	mov	w1, w26
    76e0:	str	w26, [x23, #8]
    76e4:	b	68d4 <inflateBack@@ZLIB_1.2.0+0x8c>
    76e8:	mov	w0, #0x3f48                	// #16200
    76ec:	str	w0, [x23, #8]
    76f0:	b	6998 <inflateBack@@ZLIB_1.2.0+0x150>
    76f4:	nop

00000000000076f8 <inflateBackEnd@@ZLIB_1.2.0>:
    76f8:	cbz	x0, 7740 <inflateBackEnd@@ZLIB_1.2.0+0x48>
    76fc:	stp	x29, x30, [sp, #-32]!
    7700:	mov	x29, sp
    7704:	ldr	x1, [x0, #56]
    7708:	str	x19, [sp, #16]
    770c:	mov	x19, x0
    7710:	cbz	x1, 7738 <inflateBackEnd@@ZLIB_1.2.0+0x40>
    7714:	ldr	x2, [x0, #72]
    7718:	cbz	x2, 7738 <inflateBackEnd@@ZLIB_1.2.0+0x40>
    771c:	ldr	x0, [x0, #80]
    7720:	blr	x2
    7724:	str	xzr, [x19, #56]
    7728:	mov	w0, #0x0                   	// #0
    772c:	ldr	x19, [sp, #16]
    7730:	ldp	x29, x30, [sp], #32
    7734:	ret
    7738:	mov	w0, #0xfffffffe            	// #-2
    773c:	b	772c <inflateBackEnd@@ZLIB_1.2.0+0x34>
    7740:	mov	w0, #0xfffffffe            	// #-2
    7744:	ret
    7748:	stp	x29, x30, [sp, #-96]!
    774c:	mov	w13, #0x1                   	// #1
    7750:	mov	w30, #0xffffffff            	// #-1
    7754:	mov	x29, sp
    7758:	ldr	x9, [x0, #56]
    775c:	stp	x19, x20, [sp, #16]
    7760:	ldr	w11, [x0, #32]
    7764:	ldr	w12, [x0, #8]
    7768:	mov	w7, w13
    776c:	ldp	w2, w14, [x9, #120]
    7770:	sub	w1, w1, w11
    7774:	ldr	w16, [x9, #68]
    7778:	sub	w12, w12, #0x5
    777c:	ldp	w17, w20, [x9, #60]
    7780:	sub	w11, w11, #0x101
    7784:	ldr	x8, [x0]
    7788:	add	w18, w16, w30
    778c:	ldr	x6, [x0, #24]
    7790:	lsl	w14, w13, w14
    7794:	ldp	x19, x3, [x9, #72]
    7798:	lsl	w13, w13, w2
    779c:	ldp	x5, x10, [x9, #104]
    77a0:	add	x12, x8, x12
    77a4:	ldr	w4, [x9, #88]
    77a8:	sub	x15, x6, x1
    77ac:	add	x11, x6, x11
    77b0:	add	w14, w14, w30
    77b4:	add	w13, w13, w30
    77b8:	stp	x21, x22, [sp, #32]
    77bc:	add	x22, x18, #0x1
    77c0:	add	w21, w17, w16
    77c4:	stp	x23, x24, [sp, #48]
    77c8:	cmp	w4, #0xe
    77cc:	b.hi	77f4 <inflateBackEnd@@ZLIB_1.2.0+0xfc>  // b.pmore
    77d0:	ldrb	w1, [x8, #1]
    77d4:	add	w23, w4, #0x8
    77d8:	ldrb	w2, [x8]
    77dc:	add	x8, x8, #0x2
    77e0:	lsl	x1, x1, x23
    77e4:	lsl	x2, x2, x4
    77e8:	add	x1, x1, x2
    77ec:	add	x3, x3, x1
    77f0:	add	w4, w4, #0x10
    77f4:	and	x1, x3, x13
    77f8:	b	7814 <inflateBackEnd@@ZLIB_1.2.0+0x11c>
    77fc:	tbnz	w1, #4, 78bc <inflateBackEnd@@ZLIB_1.2.0+0x1c4>
    7800:	tbnz	w1, #6, 7a0c <inflateBackEnd@@ZLIB_1.2.0+0x314>
    7804:	lsl	w1, w7, w1
    7808:	sub	w1, w1, #0x1
    780c:	and	x1, x1, x3
    7810:	add	x1, x1, w24, uxth
    7814:	lsl	x1, x1, #2
    7818:	add	x23, x5, x1
    781c:	ldrb	w1, [x5, x1]
    7820:	ldrb	w2, [x23, #1]
    7824:	ldrh	w24, [x23, #2]
    7828:	sub	w4, w4, w2
    782c:	lsr	x3, x3, x2
    7830:	cbnz	w1, 77fc <inflateBackEnd@@ZLIB_1.2.0+0x104>
    7834:	strb	w24, [x6], #1
    7838:	cmp	x8, x12
    783c:	ccmp	x6, x11, #0x2, cc  // cc = lo, ul, last
    7840:	b.cc	77c8 <inflateBackEnd@@ZLIB_1.2.0+0xd0>  // b.lo, b.ul, b.last
    7844:	lsr	w1, w4, #3
    7848:	sub	x7, x11, x6
    784c:	sub	x8, x8, x1
    7850:	and	w4, w4, #0x7
    7854:	sub	x1, x12, x8
    7858:	sub	w5, w12, w8
    785c:	cmp	x12, x8
    7860:	add	w1, w1, #0x5
    7864:	sub	w2, w11, w6
    7868:	add	w5, w5, #0x5
    786c:	csel	w5, w5, w1, ls  // ls = plast
    7870:	add	w7, w7, #0x101
    7874:	cmp	x6, x11
    7878:	add	w2, w2, #0x101
    787c:	mov	w1, #0x1                   	// #1
    7880:	csel	w2, w2, w7, cs  // cs = hs, nlast
    7884:	lsl	w1, w1, w4
    7888:	sub	w1, w1, #0x1
    788c:	str	x8, [x0]
    7890:	and	x3, x1, x3
    7894:	str	w5, [x0, #8]
    7898:	str	x6, [x0, #24]
    789c:	str	w2, [x0, #32]
    78a0:	ldp	x19, x20, [sp, #16]
    78a4:	ldp	x21, x22, [sp, #32]
    78a8:	ldp	x23, x24, [sp, #48]
    78ac:	str	x3, [x9, #80]
    78b0:	str	w4, [x9, #88]
    78b4:	ldp	x29, x30, [sp], #96
    78b8:	ret
    78bc:	ands	w2, w1, #0xf
    78c0:	mov	w23, w24
    78c4:	b.eq	78f4 <inflateBackEnd@@ZLIB_1.2.0+0x1fc>  // b.none
    78c8:	cmp	w2, w4
    78cc:	b.ls	78e0 <inflateBackEnd@@ZLIB_1.2.0+0x1e8>  // b.plast
    78d0:	ldrb	w1, [x8], #1
    78d4:	lsl	x1, x1, x4
    78d8:	add	w4, w4, #0x8
    78dc:	add	x3, x3, x1
    78e0:	lsl	w23, w30, w2
    78e4:	bic	w23, w3, w23
    78e8:	sub	w4, w4, w2
    78ec:	add	w23, w24, w23
    78f0:	lsr	x3, x3, x2
    78f4:	cmp	w4, #0xe
    78f8:	b.ls	7a1c <inflateBackEnd@@ZLIB_1.2.0+0x324>  // b.plast
    78fc:	and	x1, x14, x3
    7900:	b	7918 <inflateBackEnd@@ZLIB_1.2.0+0x220>
    7904:	tbnz	w1, #6, 7a5c <inflateBackEnd@@ZLIB_1.2.0+0x364>
    7908:	lsl	w1, w7, w1
    790c:	sub	w1, w1, #0x1
    7910:	and	x1, x1, x3
    7914:	add	x1, x1, w24, uxth
    7918:	lsl	x1, x1, #2
    791c:	add	x24, x10, x1
    7920:	ldrb	w1, [x10, x1]
    7924:	ldrb	w2, [x24, #1]
    7928:	ldrh	w24, [x24, #2]
    792c:	sub	w4, w4, w2
    7930:	lsr	x3, x3, x2
    7934:	tbz	w1, #4, 7904 <inflateBackEnd@@ZLIB_1.2.0+0x20c>
    7938:	stp	x25, x26, [sp, #64]
    793c:	and	w2, w1, #0xf
    7940:	cmp	w2, w4
    7944:	b.ls	7968 <inflateBackEnd@@ZLIB_1.2.0+0x270>  // b.plast
    7948:	ldrb	w1, [x8]
    794c:	add	w25, w4, #0x8
    7950:	cmp	w2, w25
    7954:	lsl	x1, x1, x4
    7958:	add	x3, x3, x1
    795c:	b.hi	7b20 <inflateBackEnd@@ZLIB_1.2.0+0x428>  // b.pmore
    7960:	add	x8, x8, #0x1
    7964:	mov	w4, w25
    7968:	lsl	w1, w30, w2
    796c:	bic	w1, w3, w1
    7970:	add	w24, w1, w24
    7974:	sub	x1, x6, x15
    7978:	sub	w4, w4, w2
    797c:	cmp	w24, w1
    7980:	lsr	x3, x3, x2
    7984:	b.ls	7ad8 <inflateBackEnd@@ZLIB_1.2.0+0x3e0>  // b.plast
    7988:	sub	w25, w24, w1
    798c:	cmp	w20, w25
    7990:	b.cs	799c <inflateBackEnd@@ZLIB_1.2.0+0x2a4>  // b.hs, b.nlast
    7994:	ldr	w2, [x9, #7144]
    7998:	cbnz	w2, 7b98 <inflateBackEnd@@ZLIB_1.2.0+0x4a0>
    799c:	sub	w2, w1, w24
    79a0:	cbnz	w16, 7a74 <inflateBackEnd@@ZLIB_1.2.0+0x37c>
    79a4:	add	w1, w17, w2
    79a8:	cmp	w23, w25
    79ac:	add	x1, x19, x1
    79b0:	b.hi	7bc8 <inflateBackEnd@@ZLIB_1.2.0+0x4d0>  // b.pmore
    79b4:	cmp	w23, #0x2
    79b8:	b.ls	79ec <inflateBackEnd@@ZLIB_1.2.0+0x2f4>  // b.plast
    79bc:	nop
    79c0:	ldrb	w2, [x1]
    79c4:	add	x1, x1, #0x3
    79c8:	strb	w2, [x6]
    79cc:	add	x6, x6, #0x3
    79d0:	sub	w23, w23, #0x3
    79d4:	ldurb	w2, [x1, #-2]
    79d8:	cmp	w23, #0x2
    79dc:	sturb	w2, [x6, #-2]
    79e0:	ldurb	w2, [x1, #-1]
    79e4:	sturb	w2, [x6, #-1]
    79e8:	b.hi	79c0 <inflateBackEnd@@ZLIB_1.2.0+0x2c8>  // b.pmore
    79ec:	cbz	w23, 7b18 <inflateBackEnd@@ZLIB_1.2.0+0x420>
    79f0:	ldrb	w2, [x1]
    79f4:	cmp	w23, #0x2
    79f8:	strb	w2, [x6]
    79fc:	b.eq	7bb4 <inflateBackEnd@@ZLIB_1.2.0+0x4bc>  // b.none
    7a00:	add	x6, x6, #0x1
    7a04:	ldp	x25, x26, [sp, #64]
    7a08:	b	7838 <inflateBackEnd@@ZLIB_1.2.0+0x140>
    7a0c:	tbz	w1, #5, 7a44 <inflateBackEnd@@ZLIB_1.2.0+0x34c>
    7a10:	mov	w1, #0x3f3f                	// #16191
    7a14:	str	w1, [x9, #8]
    7a18:	b	7844 <inflateBackEnd@@ZLIB_1.2.0+0x14c>
    7a1c:	ldrb	w1, [x8, #1]
    7a20:	add	w24, w4, #0x8
    7a24:	ldrb	w2, [x8]
    7a28:	add	x8, x8, #0x2
    7a2c:	lsl	x1, x1, x24
    7a30:	lsl	x2, x2, x4
    7a34:	add	x1, x1, x2
    7a38:	add	x3, x3, x1
    7a3c:	add	w4, w4, #0x10
    7a40:	b	78fc <inflateBackEnd@@ZLIB_1.2.0+0x204>
    7a44:	adrp	x1, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    7a48:	add	x1, x1, #0xaa8
    7a4c:	str	x1, [x0, #48]
    7a50:	mov	w1, #0x3f51                	// #16209
    7a54:	str	w1, [x9, #8]
    7a58:	b	7844 <inflateBackEnd@@ZLIB_1.2.0+0x14c>
    7a5c:	adrp	x1, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    7a60:	add	x1, x1, #0xac8
    7a64:	str	x1, [x0, #48]
    7a68:	mov	w1, #0x3f51                	// #16209
    7a6c:	str	w1, [x9, #8]
    7a70:	b	7844 <inflateBackEnd@@ZLIB_1.2.0+0x14c>
    7a74:	cmp	w16, w25
    7a78:	b.cs	7b38 <inflateBackEnd@@ZLIB_1.2.0+0x440>  // b.hs, b.nlast
    7a7c:	sub	w25, w25, w16
    7a80:	add	w1, w21, w2
    7a84:	cmp	w23, w25
    7a88:	add	x1, x19, x1
    7a8c:	b.ls	79b4 <inflateBackEnd@@ZLIB_1.2.0+0x2bc>  // b.plast
    7a90:	add	w23, w23, w16
    7a94:	stp	x27, x28, [sp, #80]
    7a98:	mov	w27, w25
    7a9c:	add	w23, w23, w2
    7aa0:	mov	x2, #0x0                   	// #0
    7aa4:	ldrb	w26, [x1, x2]
    7aa8:	strb	w26, [x6, x2]
    7aac:	add	x2, x2, #0x1
    7ab0:	cmp	x27, x2
    7ab4:	b.ne	7aa4 <inflateBackEnd@@ZLIB_1.2.0+0x3ac>  // b.any
    7ab8:	sub	w25, w25, #0x1
    7abc:	cmp	w16, w23
    7ac0:	add	x2, x25, #0x1
    7ac4:	mov	x1, x19
    7ac8:	add	x6, x6, x2
    7acc:	b.cc	7c0c <inflateBackEnd@@ZLIB_1.2.0+0x514>  // b.lo, b.ul, b.last
    7ad0:	ldp	x27, x28, [sp, #80]
    7ad4:	b	79b4 <inflateBackEnd@@ZLIB_1.2.0+0x2bc>
    7ad8:	sub	x1, x6, w24, uxtw
    7adc:	nop
    7ae0:	ldrb	w2, [x1]
    7ae4:	mov	x25, x1
    7ae8:	strb	w2, [x6]
    7aec:	add	x1, x1, #0x3
    7af0:	mov	x24, x6
    7af4:	add	x6, x6, #0x3
    7af8:	ldurb	w2, [x1, #-2]
    7afc:	sub	w23, w23, #0x3
    7b00:	sturb	w2, [x6, #-2]
    7b04:	cmp	w23, #0x2
    7b08:	ldurb	w2, [x1, #-1]
    7b0c:	sturb	w2, [x6, #-1]
    7b10:	b.hi	7ae0 <inflateBackEnd@@ZLIB_1.2.0+0x3e8>  // b.pmore
    7b14:	cbnz	w23, 7b80 <inflateBackEnd@@ZLIB_1.2.0+0x488>
    7b18:	ldp	x25, x26, [sp, #64]
    7b1c:	b	7838 <inflateBackEnd@@ZLIB_1.2.0+0x140>
    7b20:	ldrb	w1, [x8, #1]
    7b24:	add	w4, w4, #0x10
    7b28:	add	x8, x8, #0x2
    7b2c:	lsl	x25, x1, x25
    7b30:	add	x3, x3, x25
    7b34:	b	7968 <inflateBackEnd@@ZLIB_1.2.0+0x270>
    7b38:	add	w1, w16, w2
    7b3c:	cmp	w23, w25
    7b40:	add	x1, x19, x1
    7b44:	b.ls	79b4 <inflateBackEnd@@ZLIB_1.2.0+0x2bc>  // b.plast
    7b48:	sub	w25, w25, #0x1
    7b4c:	stp	x27, x28, [sp, #80]
    7b50:	add	x28, x25, #0x1
    7b54:	add	w23, w23, w2
    7b58:	mov	x2, #0x0                   	// #0
    7b5c:	ldrb	w27, [x1, x2]
    7b60:	cmp	x25, x2
    7b64:	strb	w27, [x6, x2]
    7b68:	add	x2, x2, #0x1
    7b6c:	b.ne	7b5c <inflateBackEnd@@ZLIB_1.2.0+0x464>  // b.any
    7b70:	add	x6, x6, x28
    7b74:	sub	x1, x6, w24, uxtw
    7b78:	ldp	x27, x28, [sp, #80]
    7b7c:	b	79b4 <inflateBackEnd@@ZLIB_1.2.0+0x2bc>
    7b80:	ldrb	w1, [x25, #3]
    7b84:	strb	w1, [x24, #3]
    7b88:	b.eq	7bf8 <inflateBackEnd@@ZLIB_1.2.0+0x500>  // b.none
    7b8c:	add	x6, x24, #0x4
    7b90:	ldp	x25, x26, [sp, #64]
    7b94:	b	7838 <inflateBackEnd@@ZLIB_1.2.0+0x140>
    7b98:	adrp	x1, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    7b9c:	add	x1, x1, #0xae0
    7ba0:	str	x1, [x0, #48]
    7ba4:	mov	w1, #0x3f51                	// #16209
    7ba8:	ldp	x25, x26, [sp, #64]
    7bac:	str	w1, [x9, #8]
    7bb0:	b	7844 <inflateBackEnd@@ZLIB_1.2.0+0x14c>
    7bb4:	ldrb	w1, [x1, #1]
    7bb8:	add	x6, x6, #0x2
    7bbc:	sturb	w1, [x6, #-1]
    7bc0:	ldp	x25, x26, [sp, #64]
    7bc4:	b	7838 <inflateBackEnd@@ZLIB_1.2.0+0x140>
    7bc8:	stp	x27, x28, [sp, #80]
    7bcc:	sub	w27, w25, #0x1
    7bd0:	add	x28, x27, #0x1
    7bd4:	add	w23, w23, w2
    7bd8:	mov	x2, #0x0                   	// #0
    7bdc:	nop
    7be0:	ldrb	w26, [x1, x2]
    7be4:	cmp	x27, x2
    7be8:	strb	w26, [x6, x2]
    7bec:	add	x2, x2, #0x1
    7bf0:	b.ne	7be0 <inflateBackEnd@@ZLIB_1.2.0+0x4e8>  // b.any
    7bf4:	b	7b70 <inflateBackEnd@@ZLIB_1.2.0+0x478>
    7bf8:	ldrb	w1, [x25, #4]
    7bfc:	add	x6, x24, #0x5
    7c00:	strb	w1, [x24, #4]
    7c04:	ldp	x25, x26, [sp, #64]
    7c08:	b	7838 <inflateBackEnd@@ZLIB_1.2.0+0x140>
    7c0c:	sub	w23, w23, w16
    7c10:	mov	x1, #0x0                   	// #0
    7c14:	ldrb	w25, [x19, x1]
    7c18:	cmp	x18, x1
    7c1c:	strb	w25, [x6, x1]
    7c20:	add	x1, x1, #0x1
    7c24:	b.ne	7c14 <inflateBackEnd@@ZLIB_1.2.0+0x51c>  // b.any
    7c28:	add	x6, x6, x22
    7c2c:	sub	x1, x6, w24, uxtw
    7c30:	ldp	x27, x28, [sp, #80]
    7c34:	b	79b4 <inflateBackEnd@@ZLIB_1.2.0+0x2bc>
    7c38:	stp	x29, x30, [sp, #-48]!
    7c3c:	mov	x3, x0
    7c40:	mov	x29, sp
    7c44:	stp	x19, x20, [sp, #16]
    7c48:	mov	w20, w2
    7c4c:	ldr	x19, [x0, #56]
    7c50:	stp	x21, x22, [sp, #32]
    7c54:	mov	x21, x1
    7c58:	ldr	x0, [x19, #72]
    7c5c:	cbz	x0, 7d10 <inflateBackEnd@@ZLIB_1.2.0+0x618>
    7c60:	ldr	w3, [x19, #60]
    7c64:	cbnz	w3, 7c7c <inflateBackEnd@@ZLIB_1.2.0+0x584>
    7c68:	ldr	w2, [x19, #56]
    7c6c:	mov	w3, #0x1                   	// #1
    7c70:	str	xzr, [x19, #64]
    7c74:	lsl	w3, w3, w2
    7c78:	str	w3, [x19, #60]
    7c7c:	cmp	w20, w3
    7c80:	b.cc	7cac <inflateBackEnd@@ZLIB_1.2.0+0x5b4>  // b.lo, b.ul, b.last
    7c84:	mov	w2, w3
    7c88:	sub	x1, x21, x2
    7c8c:	bl	23a0 <memcpy@plt>
    7c90:	ldr	w1, [x19, #60]
    7c94:	mov	w0, #0x0                   	// #0
    7c98:	stp	w1, wzr, [x19, #64]
    7c9c:	ldp	x19, x20, [sp, #16]
    7ca0:	ldp	x21, x22, [sp, #32]
    7ca4:	ldp	x29, x30, [sp], #48
    7ca8:	ret
    7cac:	ldr	w2, [x19, #68]
    7cb0:	sub	x1, x21, w20, uxtw
    7cb4:	sub	w3, w3, w2
    7cb8:	cmp	w20, w3
    7cbc:	add	x0, x0, w2, uxtw
    7cc0:	csel	w22, w20, w3, ls  // ls = plast
    7cc4:	csel	w2, w20, w3, ls  // ls = plast
    7cc8:	bl	23a0 <memcpy@plt>
    7ccc:	subs	w20, w20, w22
    7cd0:	b.ne	7d3c <inflateBackEnd@@ZLIB_1.2.0+0x644>  // b.any
    7cd4:	ldp	w3, w2, [x19, #60]
    7cd8:	mov	w0, #0x0                   	// #0
    7cdc:	ldr	w1, [x19, #68]
    7ce0:	add	w1, w22, w1
    7ce4:	cmp	w1, w3
    7ce8:	csel	w1, w1, wzr, ne  // ne = any
    7cec:	str	w1, [x19, #68]
    7cf0:	cmp	w3, w2
    7cf4:	b.ls	7c9c <inflateBackEnd@@ZLIB_1.2.0+0x5a4>  // b.plast
    7cf8:	add	w22, w2, w22
    7cfc:	str	w22, [x19, #64]
    7d00:	ldp	x19, x20, [sp, #16]
    7d04:	ldp	x21, x22, [sp, #32]
    7d08:	ldp	x29, x30, [sp], #48
    7d0c:	ret
    7d10:	ldr	x4, [x3, #64]
    7d14:	mov	w22, #0x1                   	// #1
    7d18:	ldr	x0, [x3, #80]
    7d1c:	mov	w2, w22
    7d20:	ldr	w1, [x19, #56]
    7d24:	lsl	w1, w22, w1
    7d28:	blr	x4
    7d2c:	str	x0, [x19, #72]
    7d30:	cbnz	x0, 7c60 <inflateBackEnd@@ZLIB_1.2.0+0x568>
    7d34:	mov	w0, w22
    7d38:	b	7c9c <inflateBackEnd@@ZLIB_1.2.0+0x5a4>
    7d3c:	ldr	x0, [x19, #72]
    7d40:	mov	w2, w20
    7d44:	sub	x1, x21, x2
    7d48:	bl	23a0 <memcpy@plt>
    7d4c:	ldr	w1, [x19, #60]
    7d50:	mov	w0, #0x0                   	// #0
    7d54:	stp	w1, w20, [x19, #64]
    7d58:	ldp	x19, x20, [sp, #16]
    7d5c:	ldp	x21, x22, [sp, #32]
    7d60:	ldp	x29, x30, [sp], #48
    7d64:	ret
    7d68:	ldr	x2, [x0, #56]
    7d6c:	mov	x1, x0
    7d70:	cbz	x2, 7da0 <inflateBackEnd@@ZLIB_1.2.0+0x6a8>
    7d74:	ldr	x3, [x2]
    7d78:	mov	w0, #0x1                   	// #1
    7d7c:	cmp	x1, x3
    7d80:	b.eq	7d88 <inflateBackEnd@@ZLIB_1.2.0+0x690>  // b.none
    7d84:	ret
    7d88:	ldr	w0, [x2, #8]
    7d8c:	mov	w1, #0xffffc0cc            	// #-16180
    7d90:	add	w0, w0, w1
    7d94:	cmp	w0, #0x1f
    7d98:	cset	w0, hi  // hi = pmore
    7d9c:	ret
    7da0:	mov	w0, #0x1                   	// #1
    7da4:	ret

0000000000007da8 <inflateResetKeep@@ZLIB_1.2.5.2>:
    7da8:	cbz	x0, 7e30 <inflateResetKeep@@ZLIB_1.2.5.2+0x88>
    7dac:	ldr	x1, [x0, #64]
    7db0:	mov	x4, x0
    7db4:	cbz	x1, 7e30 <inflateResetKeep@@ZLIB_1.2.5.2+0x88>
    7db8:	ldr	x1, [x0, #72]
    7dbc:	cbz	x1, 7e30 <inflateResetKeep@@ZLIB_1.2.5.2+0x88>
    7dc0:	stp	x29, x30, [sp, #-16]!
    7dc4:	mov	x29, sp
    7dc8:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    7dcc:	cbnz	w0, 7e38 <inflateResetKeep@@ZLIB_1.2.5.2+0x90>
    7dd0:	ldr	x1, [x4, #56]
    7dd4:	ldr	w2, [x1, #16]
    7dd8:	str	xzr, [x1, #40]
    7ddc:	str	xzr, [x4, #16]
    7de0:	stp	xzr, xzr, [x4, #40]
    7de4:	cbnz	w2, 7e24 <inflateResetKeep@@ZLIB_1.2.5.2+0x7c>
    7de8:	add	x2, x1, #0x558
    7dec:	mov	x5, #0x3f34                	// #16180
    7df0:	mov	w4, #0x8000                	// #32768
    7df4:	mov	x3, #0xffffffff00000001    	// #-4294967295
    7df8:	str	x5, [x1, #8]
    7dfc:	str	wzr, [x1, #20]
    7e00:	str	w4, [x1, #28]
    7e04:	str	xzr, [x1, #48]
    7e08:	str	xzr, [x1, #80]
    7e0c:	str	wzr, [x1, #88]
    7e10:	stp	x2, x2, [x1, #104]
    7e14:	str	x2, [x1, #144]
    7e18:	str	x3, [x1, #7144]
    7e1c:	ldp	x29, x30, [sp], #16
    7e20:	ret
    7e24:	and	x2, x2, #0x1
    7e28:	str	x2, [x4, #96]
    7e2c:	b	7de8 <inflateResetKeep@@ZLIB_1.2.5.2+0x40>
    7e30:	mov	w0, #0xfffffffe            	// #-2
    7e34:	ret
    7e38:	mov	w0, #0xfffffffe            	// #-2
    7e3c:	b	7e1c <inflateResetKeep@@ZLIB_1.2.5.2+0x74>

0000000000007e40 <inflateReset@@Base>:
    7e40:	cbz	x0, 7e8c <inflateReset@@Base+0x4c>
    7e44:	ldr	x1, [x0, #64]
    7e48:	mov	x4, x0
    7e4c:	cbz	x1, 7e8c <inflateReset@@Base+0x4c>
    7e50:	ldr	x1, [x0, #72]
    7e54:	cbz	x1, 7e8c <inflateReset@@Base+0x4c>
    7e58:	stp	x29, x30, [sp, #-16]!
    7e5c:	mov	x29, sp
    7e60:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    7e64:	cbnz	w0, 7e80 <inflateReset@@Base+0x40>
    7e68:	ldr	x1, [x4, #56]
    7e6c:	mov	x0, x4
    7e70:	str	wzr, [x1, #60]
    7e74:	str	xzr, [x1, #64]
    7e78:	ldp	x29, x30, [sp], #16
    7e7c:	b	2440 <inflateResetKeep@plt>
    7e80:	mov	w0, #0xfffffffe            	// #-2
    7e84:	ldp	x29, x30, [sp], #16
    7e88:	ret
    7e8c:	mov	w0, #0xfffffffe            	// #-2
    7e90:	ret
    7e94:	nop

0000000000007e98 <inflateReset2@@ZLIB_1.2.3.4>:
    7e98:	cbz	x0, 7f54 <inflateReset2@@ZLIB_1.2.3.4+0xbc>
    7e9c:	stp	x29, x30, [sp, #-48]!
    7ea0:	mov	x29, sp
    7ea4:	stp	x19, x20, [sp, #16]
    7ea8:	mov	w19, w1
    7eac:	mov	x20, x0
    7eb0:	ldr	x1, [x0, #64]
    7eb4:	cbz	x1, 7f44 <inflateReset2@@ZLIB_1.2.3.4+0xac>
    7eb8:	ldr	x4, [x0, #72]
    7ebc:	cbz	x4, 7f44 <inflateReset2@@ZLIB_1.2.3.4+0xac>
    7ec0:	stp	x21, x22, [sp, #32]
    7ec4:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    7ec8:	mov	w21, w0
    7ecc:	cbnz	w0, 7f40 <inflateReset2@@ZLIB_1.2.3.4+0xa8>
    7ed0:	ldr	x22, [x20, #56]
    7ed4:	tbnz	w19, #31, 7f38 <inflateReset2@@ZLIB_1.2.3.4+0xa0>
    7ed8:	asr	w21, w19, #4
    7edc:	cmp	w19, #0x30
    7ee0:	and	w0, w19, #0xf
    7ee4:	add	w21, w21, #0x5
    7ee8:	csel	w19, w0, w19, lt  // lt = tstop
    7eec:	cmp	w19, #0x0
    7ef0:	sub	w0, w19, #0x8
    7ef4:	ccmp	w0, #0x7, #0x0, ne  // ne = any
    7ef8:	b.hi	7f40 <inflateReset2@@ZLIB_1.2.3.4+0xa8>  // b.pmore
    7efc:	ldr	x1, [x22, #72]
    7f00:	cbz	x1, 7f1c <inflateReset2@@ZLIB_1.2.3.4+0x84>
    7f04:	ldr	w0, [x22, #56]
    7f08:	cmp	w19, w0
    7f0c:	b.eq	7f1c <inflateReset2@@ZLIB_1.2.3.4+0x84>  // b.none
    7f10:	ldr	x0, [x20, #80]
    7f14:	blr	x4
    7f18:	str	xzr, [x22, #72]
    7f1c:	str	w21, [x22, #16]
    7f20:	mov	x0, x20
    7f24:	str	w19, [x22, #56]
    7f28:	ldp	x19, x20, [sp, #16]
    7f2c:	ldp	x21, x22, [sp, #32]
    7f30:	ldp	x29, x30, [sp], #48
    7f34:	b	2610 <inflateReset@plt>
    7f38:	neg	w19, w19
    7f3c:	b	7eec <inflateReset2@@ZLIB_1.2.3.4+0x54>
    7f40:	ldp	x21, x22, [sp, #32]
    7f44:	mov	w0, #0xfffffffe            	// #-2
    7f48:	ldp	x19, x20, [sp, #16]
    7f4c:	ldp	x29, x30, [sp], #48
    7f50:	ret
    7f54:	mov	w0, #0xfffffffe            	// #-2
    7f58:	ret
    7f5c:	nop

0000000000007f60 <inflateInit2_@@Base>:
    7f60:	stp	x29, x30, [sp, #-48]!
    7f64:	mov	x29, sp
    7f68:	str	x21, [sp, #32]
    7f6c:	cbz	x2, 8064 <inflateInit2_@@Base+0x104>
    7f70:	stp	x19, x20, [sp, #16]
    7f74:	mov	w21, w1
    7f78:	mov	x19, x0
    7f7c:	ldrb	w1, [x2]
    7f80:	mov	w0, #0x70                  	// #112
    7f84:	cmp	w1, #0x31
    7f88:	ccmp	w3, w0, #0x0, eq  // eq = none
    7f8c:	b.ne	804c <inflateInit2_@@Base+0xec>  // b.any
    7f90:	cbz	x19, 806c <inflateInit2_@@Base+0x10c>
    7f94:	ldr	x3, [x19, #64]
    7f98:	str	xzr, [x19, #48]
    7f9c:	cbz	x3, 8030 <inflateInit2_@@Base+0xd0>
    7fa0:	ldr	x0, [x19, #80]
    7fa4:	ldr	x1, [x19, #72]
    7fa8:	cbz	x1, 8020 <inflateInit2_@@Base+0xc0>
    7fac:	mov	w2, #0x1bf8                	// #7160
    7fb0:	mov	w1, #0x1                   	// #1
    7fb4:	blr	x3
    7fb8:	mov	x20, x0
    7fbc:	cbz	x0, 8058 <inflateInit2_@@Base+0xf8>
    7fc0:	str	x20, [x19, #56]
    7fc4:	mov	w0, #0x3f34                	// #16180
    7fc8:	str	x19, [x20]
    7fcc:	mov	w1, w21
    7fd0:	str	w0, [x20, #8]
    7fd4:	mov	x0, x19
    7fd8:	str	xzr, [x20, #72]
    7fdc:	bl	2640 <inflateReset2@plt>
    7fe0:	mov	w21, w0
    7fe4:	cbnz	w0, 7ffc <inflateInit2_@@Base+0x9c>
    7fe8:	ldp	x19, x20, [sp, #16]
    7fec:	mov	w0, w21
    7ff0:	ldr	x21, [sp, #32]
    7ff4:	ldp	x29, x30, [sp], #48
    7ff8:	ret
    7ffc:	ldp	x2, x0, [x19, #72]
    8000:	mov	x1, x20
    8004:	blr	x2
    8008:	str	xzr, [x19, #56]
    800c:	mov	w0, w21
    8010:	ldp	x19, x20, [sp, #16]
    8014:	ldr	x21, [sp, #32]
    8018:	ldp	x29, x30, [sp], #48
    801c:	ret
    8020:	adrp	x1, c000 <inflateCodesUsed@@ZLIB_1.2.9+0x1d10>
    8024:	add	x1, x1, #0x300
    8028:	str	x1, [x19, #72]
    802c:	b	7fac <inflateInit2_@@Base+0x4c>
    8030:	adrp	x1, c000 <inflateCodesUsed@@ZLIB_1.2.9+0x1d10>
    8034:	add	x1, x1, #0x2f8
    8038:	mov	x3, x1
    803c:	mov	x0, #0x0                   	// #0
    8040:	str	x1, [x19, #64]
    8044:	str	xzr, [x19, #80]
    8048:	b	7fa4 <inflateInit2_@@Base+0x44>
    804c:	mov	w21, #0xfffffffa            	// #-6
    8050:	ldp	x19, x20, [sp, #16]
    8054:	b	7fec <inflateInit2_@@Base+0x8c>
    8058:	mov	w21, #0xfffffffc            	// #-4
    805c:	ldp	x19, x20, [sp, #16]
    8060:	b	7fec <inflateInit2_@@Base+0x8c>
    8064:	mov	w21, #0xfffffffa            	// #-6
    8068:	b	7fec <inflateInit2_@@Base+0x8c>
    806c:	mov	w21, #0xfffffffe            	// #-2
    8070:	ldp	x19, x20, [sp, #16]
    8074:	b	7fec <inflateInit2_@@Base+0x8c>

0000000000008078 <inflateInit_@@Base>:
    8078:	mov	w3, w2
    807c:	mov	x2, x1
    8080:	mov	w1, #0xf                   	// #15
    8084:	b	2600 <inflateInit2_@plt>

0000000000008088 <inflatePrime@@ZLIB_1.2.2.4>:
    8088:	cbz	x0, 8104 <inflatePrime@@ZLIB_1.2.2.4+0x7c>
    808c:	mov	w5, w1
    8090:	mov	x4, x0
    8094:	ldr	x1, [x0, #64]
    8098:	cbz	x1, 8104 <inflatePrime@@ZLIB_1.2.2.4+0x7c>
    809c:	ldr	x1, [x0, #72]
    80a0:	cbz	x1, 8104 <inflatePrime@@ZLIB_1.2.2.4+0x7c>
    80a4:	mov	w6, w2
    80a8:	stp	x29, x30, [sp, #-16]!
    80ac:	mov	x29, sp
    80b0:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    80b4:	cbnz	w0, 811c <inflatePrime@@ZLIB_1.2.2.4+0x94>
    80b8:	ldr	x2, [x4, #56]
    80bc:	tbnz	w5, #31, 810c <inflatePrime@@ZLIB_1.2.2.4+0x84>
    80c0:	cmp	w5, #0x10
    80c4:	b.gt	811c <inflatePrime@@ZLIB_1.2.2.4+0x94>
    80c8:	ldr	w4, [x2, #88]
    80cc:	add	w1, w5, w4
    80d0:	cmp	w1, #0x20
    80d4:	b.hi	811c <inflatePrime@@ZLIB_1.2.2.4+0x94>  // b.pmore
    80d8:	mov	x3, #0x1                   	// #1
    80dc:	str	w1, [x2, #88]
    80e0:	lsl	x5, x3, x5
    80e4:	sub	w5, w5, #0x1
    80e8:	ldr	x3, [x2, #80]
    80ec:	and	w1, w5, w6
    80f0:	lsl	w1, w1, w4
    80f4:	add	x1, x3, x1
    80f8:	str	x1, [x2, #80]
    80fc:	ldp	x29, x30, [sp], #16
    8100:	ret
    8104:	mov	w0, #0xfffffffe            	// #-2
    8108:	ret
    810c:	str	xzr, [x2, #80]
    8110:	str	wzr, [x2, #88]
    8114:	ldp	x29, x30, [sp], #16
    8118:	ret
    811c:	mov	w0, #0xfffffffe            	// #-2
    8120:	b	80fc <inflatePrime@@ZLIB_1.2.2.4+0x74>
    8124:	nop

0000000000008128 <inflate@@Base>:
    8128:	stp	x29, x30, [sp, #-176]!
    812c:	mov	x29, sp
    8130:	stp	x25, x26, [sp, #64]
    8134:	cbz	x0, 8a70 <inflate@@Base+0x948>
    8138:	mov	w26, w1
    813c:	stp	x23, x24, [sp, #48]
    8140:	mov	x24, x0
    8144:	ldr	x1, [x0, #64]
    8148:	cbz	x1, 8770 <inflate@@Base+0x648>
    814c:	ldr	x1, [x0, #72]
    8150:	cbz	x1, 8770 <inflate@@Base+0x648>
    8154:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    8158:	mov	w25, w0
    815c:	cbnz	w0, 8770 <inflate@@Base+0x648>
    8160:	ldr	x7, [x24, #24]
    8164:	cbz	x7, 8770 <inflate@@Base+0x648>
    8168:	stp	x21, x22, [sp, #32]
    816c:	ldr	x21, [x24]
    8170:	stp	x27, x28, [sp, #80]
    8174:	ldr	w28, [x24, #8]
    8178:	cbz	x21, 87d4 <inflate@@Base+0x6ac>
    817c:	ldr	x23, [x24, #56]
    8180:	stp	x19, x20, [sp, #16]
    8184:	mov	w1, #0x3f3f                	// #16191
    8188:	ldr	w0, [x23, #8]
    818c:	cmp	w0, w1
    8190:	b.eq	87c4 <inflate@@Base+0x69c>  // b.none
    8194:	ldr	w9, [x24, #32]
    8198:	adrp	x10, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    819c:	ldr	w19, [x23, #88]
    81a0:	add	x27, x10, #0x4a0
    81a4:	ldr	x22, [x23, #80]
    81a8:	mov	w20, w28
    81ac:	mov	w8, w9
    81b0:	add	x1, x27, #0x880
    81b4:	str	x1, [sp, #104]
    81b8:	mov	w1, #0xffffc0cc            	// #-16180
    81bc:	add	w0, w0, w1
    81c0:	cmp	w0, #0x1e
    81c4:	b.ls	81e0 <inflate@@Base+0xb8>  // b.plast
    81c8:	mov	w25, #0xfffffffe            	// #-2
    81cc:	ldp	x19, x20, [sp, #16]
    81d0:	ldp	x21, x22, [sp, #32]
    81d4:	ldp	x23, x24, [sp, #48]
    81d8:	ldp	x27, x28, [sp, #80]
    81dc:	b	8760 <inflate@@Base+0x638>
    81e0:	adrp	x1, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    81e4:	add	x1, x1, #0x460
    81e8:	ldrh	w0, [x1, w0, uxtw #1]
    81ec:	adr	x1, 81f8 <inflate@@Base+0xd0>
    81f0:	add	x0, x1, w0, sxth #2
    81f4:	br	x0
    81f8:	cbz	w20, 867c <inflate@@Base+0x554>
    81fc:	ldrb	w0, [x21], #1
    8200:	sub	w20, w20, #0x1
    8204:	lsl	x0, x0, x19
    8208:	add	w19, w19, #0x8
    820c:	add	x22, x22, x0
    8210:	cmp	w19, #0xd
    8214:	b.ls	81f8 <inflate@@Base+0xd0>  // b.plast
    8218:	and	w1, w22, #0x1f
    821c:	ubfx	w0, w22, #5, #5
    8220:	ubfx	w2, w22, #10, #4
    8224:	add	w1, w1, #0x101
    8228:	add	w0, w0, #0x1
    822c:	add	w2, w2, #0x4
    8230:	stp	w2, w1, [x23, #128]
    8234:	cmp	w1, #0x11e
    8238:	str	w0, [x23, #136]
    823c:	sub	w19, w19, #0xe
    8240:	ccmp	w0, #0x1e, #0x2, ls  // ls = plast
    8244:	lsr	x22, x22, #14
    8248:	b.ls	9680 <inflate@@Base+0x1558>  // b.plast
    824c:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    8250:	add	x0, x0, #0x9e0
    8254:	str	x0, [x24, #48]
    8258:	mov	w0, #0x3f51                	// #16209
    825c:	str	w0, [x23, #8]
    8260:	b	89ac <inflate@@Base+0x884>
    8264:	ldr	x1, [x23, #48]
    8268:	cbz	x1, 8274 <inflate@@Base+0x14c>
    826c:	ubfx	w2, w22, #8, #1
    8270:	str	w2, [x1]
    8274:	tbz	w0, #9, 8280 <inflate@@Base+0x158>
    8278:	ldr	w0, [x23, #16]
    827c:	tbnz	w0, #2, 9910 <inflate@@Base+0x17e8>
    8280:	mov	w0, #0x3f36                	// #16182
    8284:	mov	x22, #0x0                   	// #0
    8288:	mov	w19, #0x0                   	// #0
    828c:	str	w0, [x23, #8]
    8290:	cbz	w20, 867c <inflate@@Base+0x554>
    8294:	ldrb	w0, [x21], #1
    8298:	sub	w20, w20, #0x1
    829c:	lsl	x0, x0, x19
    82a0:	add	w19, w19, #0x8
    82a4:	add	x22, x22, x0
    82a8:	cmp	w19, #0x1f
    82ac:	b.ls	8290 <inflate@@Base+0x168>  // b.plast
    82b0:	ldr	x0, [x23, #48]
    82b4:	cbz	x0, 82bc <inflate@@Base+0x194>
    82b8:	str	x22, [x0, #8]
    82bc:	ldr	w0, [x23, #24]
    82c0:	tbz	w0, #9, 82cc <inflate@@Base+0x1a4>
    82c4:	ldr	w0, [x23, #16]
    82c8:	tbnz	w0, #2, 9618 <inflate@@Base+0x14f0>
    82cc:	mov	w0, #0x3f37                	// #16183
    82d0:	mov	x22, #0x0                   	// #0
    82d4:	mov	w19, #0x0                   	// #0
    82d8:	str	w0, [x23, #8]
    82dc:	nop
    82e0:	cbz	w20, 867c <inflate@@Base+0x554>
    82e4:	ldrb	w0, [x21], #1
    82e8:	sub	w20, w20, #0x1
    82ec:	lsl	x0, x0, x19
    82f0:	add	w19, w19, #0x8
    82f4:	add	x22, x22, x0
    82f8:	cmp	w19, #0xf
    82fc:	b.ls	82e0 <inflate@@Base+0x1b8>  // b.plast
    8300:	ldr	x0, [x23, #48]
    8304:	cbz	x0, 8314 <inflate@@Base+0x1ec>
    8308:	and	w2, w22, #0xff
    830c:	lsr	x1, x22, #8
    8310:	stp	w2, w1, [x0, #16]
    8314:	ldr	w2, [x23, #24]
    8318:	mov	w1, w2
    831c:	tbz	w2, #9, 8328 <inflate@@Base+0x200>
    8320:	ldr	w0, [x23, #16]
    8324:	tbnz	w0, #2, 94b4 <inflate@@Base+0x138c>
    8328:	mov	w0, #0x3f38                	// #16184
    832c:	str	w0, [x23, #8]
    8330:	tbnz	w2, #10, 93f0 <inflate@@Base+0x12c8>
    8334:	mov	w19, #0x0                   	// #0
    8338:	mov	x22, #0x0                   	// #0
    833c:	ldr	x2, [x23, #48]
    8340:	mov	w0, #0x0                   	// #0
    8344:	cbz	x2, 834c <inflate@@Base+0x224>
    8348:	str	xzr, [x2, #24]
    834c:	mov	w2, #0x3f39                	// #16185
    8350:	str	w2, [x23, #8]
    8354:	cbz	w0, 83fc <inflate@@Base+0x2d4>
    8358:	ldr	w3, [x23, #92]
    835c:	cmp	w20, w3
    8360:	csel	w4, w20, w3, ls  // ls = plast
    8364:	cbz	w4, 83f4 <inflate@@Base+0x2cc>
    8368:	ldr	x2, [x23, #48]
    836c:	mov	w5, w4
    8370:	cbz	x2, 83d4 <inflate@@Base+0x2ac>
    8374:	ldr	x0, [x2, #24]
    8378:	cbz	x0, 83d4 <inflate@@Base+0x2ac>
    837c:	ldp	w11, w2, [x2, #32]
    8380:	mov	x1, x21
    8384:	str	x5, [sp, #112]
    8388:	sub	w12, w11, w3
    838c:	str	w4, [sp, #120]
    8390:	add	w12, w4, w12
    8394:	str	x7, [sp, #128]
    8398:	cmp	w12, w2
    839c:	add	w2, w2, w3
    83a0:	sub	w3, w11, w3
    83a4:	sub	w2, w2, w11
    83a8:	csel	x2, x2, x5, hi  // hi = pmore
    83ac:	add	x0, x0, x3
    83b0:	str	w8, [sp, #136]
    83b4:	str	w9, [sp, #144]
    83b8:	bl	23a0 <memcpy@plt>
    83bc:	ldr	w1, [x23, #24]
    83c0:	ldr	w4, [sp, #120]
    83c4:	ldr	w8, [sp, #136]
    83c8:	ldr	w9, [sp, #144]
    83cc:	ldr	x5, [sp, #112]
    83d0:	ldr	x7, [sp, #128]
    83d4:	tbz	w1, #9, 83e0 <inflate@@Base+0x2b8>
    83d8:	ldr	w0, [x23, #16]
    83dc:	tbnz	w0, #2, 95ac <inflate@@Base+0x1484>
    83e0:	ldr	w3, [x23, #92]
    83e4:	sub	w20, w20, w4
    83e8:	add	x21, x21, x5
    83ec:	sub	w3, w3, w4
    83f0:	str	w3, [x23, #92]
    83f4:	cbnz	w3, 867c <inflate@@Base+0x554>
    83f8:	ldr	w1, [x23, #24]
    83fc:	mov	w0, #0x3f3a                	// #16186
    8400:	str	w0, [x23, #8]
    8404:	str	wzr, [x23, #92]
    8408:	tbnz	w1, #11, 9250 <inflate@@Base+0x1128>
    840c:	ldr	x0, [x23, #48]
    8410:	cbz	x0, 8418 <inflate@@Base+0x2f0>
    8414:	str	xzr, [x0, #40]
    8418:	mov	w0, #0x3f3b                	// #16187
    841c:	str	w0, [x23, #8]
    8420:	str	wzr, [x23, #92]
    8424:	tbnz	w1, #12, 91d8 <inflate@@Base+0x10b0>
    8428:	ldr	x0, [x23, #48]
    842c:	cbz	x0, 8434 <inflate@@Base+0x30c>
    8430:	str	xzr, [x0, #56]
    8434:	mov	w0, #0x3f3c                	// #16188
    8438:	str	w0, [x23, #8]
    843c:	tbnz	w1, #9, 8ffc <inflate@@Base+0xed4>
    8440:	ldr	x0, [x23, #48]
    8444:	cbz	x0, 8454 <inflate@@Base+0x32c>
    8448:	ubfx	x1, x1, #9, #1
    844c:	mov	w2, #0x1                   	// #1
    8450:	stp	w1, w2, [x0, #68]
    8454:	mov	x1, #0x0                   	// #0
    8458:	mov	w2, #0x0                   	// #0
    845c:	mov	x0, #0x0                   	// #0
    8460:	str	x7, [sp, #112]
    8464:	str	w8, [sp, #120]
    8468:	str	w9, [sp, #128]
    846c:	bl	2430 <crc32@plt>
    8470:	str	x0, [x23, #32]
    8474:	mov	w1, #0x3f3f                	// #16191
    8478:	str	x0, [x24, #96]
    847c:	ldr	w8, [sp, #120]
    8480:	ldr	w9, [sp, #128]
    8484:	str	w1, [x23, #8]
    8488:	ldr	x7, [sp, #112]
    848c:	b	8540 <inflate@@Base+0x418>
    8490:	mov	w0, #0x3f3d                	// #16189
    8494:	mov	x22, #0x0                   	// #0
    8498:	mov	w19, #0x0                   	// #0
    849c:	str	w0, [x23, #8]
    84a0:	cbz	w20, 867c <inflate@@Base+0x554>
    84a4:	ldrb	w0, [x21], #1
    84a8:	sub	w20, w20, #0x1
    84ac:	lsl	x0, x0, x19
    84b0:	add	w19, w19, #0x8
    84b4:	add	x22, x22, x0
    84b8:	cmp	w19, #0x1f
    84bc:	b.ls	84a0 <inflate@@Base+0x378>  // b.plast
    84c0:	lsr	x0, x22, #8
    84c4:	lsl	x1, x22, #8
    84c8:	and	x2, x0, #0xff00
    84cc:	and	x1, x1, #0xff0000
    84d0:	lsr	w0, w22, #24
    84d4:	lsl	w22, w22, #24
    84d8:	add	x1, x1, x22
    84dc:	orr	x0, x0, x2
    84e0:	add	x0, x0, x1
    84e4:	str	x0, [x23, #32]
    84e8:	str	x0, [x24, #96]
    84ec:	mov	w19, #0x0                   	// #0
    84f0:	mov	w0, #0x3f3e                	// #16190
    84f4:	mov	x22, #0x0                   	// #0
    84f8:	str	w0, [x23, #8]
    84fc:	ldr	w0, [x23, #20]
    8500:	cbz	w0, 97fc <inflate@@Base+0x16d4>
    8504:	mov	x1, #0x0                   	// #0
    8508:	mov	w2, #0x0                   	// #0
    850c:	mov	x0, #0x0                   	// #0
    8510:	str	x7, [sp, #112]
    8514:	str	w8, [sp, #120]
    8518:	str	w9, [sp, #128]
    851c:	bl	2560 <adler32@plt>
    8520:	ldr	w8, [sp, #120]
    8524:	mov	w1, #0x3f3f                	// #16191
    8528:	ldr	w9, [sp, #128]
    852c:	str	x0, [x23, #32]
    8530:	ldr	x7, [sp, #112]
    8534:	str	x0, [x24, #96]
    8538:	str	w1, [x23, #8]
    853c:	nop
    8540:	sub	w0, w26, #0x5
    8544:	cmp	w0, #0x1
    8548:	b.ls	867c <inflate@@Base+0x554>  // b.plast
    854c:	ldr	w0, [x23, #12]
    8550:	cbz	w0, 90e8 <inflate@@Base+0xfc0>
    8554:	and	w0, w19, #0x7
    8558:	and	w19, w19, #0xfffffff8
    855c:	mov	w1, #0x3f4e                	// #16206
    8560:	str	w1, [x23, #8]
    8564:	lsr	x22, x22, x0
    8568:	ldr	w1, [x23, #16]
    856c:	cbnz	w1, 8804 <inflate@@Base+0x6dc>
    8570:	mov	w0, #0x3f4f                	// #16207
    8574:	str	w0, [x23, #8]
    8578:	cbz	w1, 966c <inflate@@Base+0x1544>
    857c:	ldr	w0, [x23, #24]
    8580:	cbnz	w0, 85a0 <inflate@@Base+0x478>
    8584:	b	966c <inflate@@Base+0x1544>
    8588:	cbz	w20, 867c <inflate@@Base+0x554>
    858c:	ldrb	w0, [x21], #1
    8590:	sub	w20, w20, #0x1
    8594:	lsl	x0, x0, x19
    8598:	add	w19, w19, #0x8
    859c:	add	x22, x22, x0
    85a0:	cmp	w19, #0x1f
    85a4:	b.ls	8588 <inflate@@Base+0x460>  // b.plast
    85a8:	ldr	w0, [x23, #40]
    85ac:	cmp	x22, x0
    85b0:	b.eq	9664 <inflate@@Base+0x153c>  // b.none
    85b4:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    85b8:	add	x0, x0, #0x448
    85bc:	str	x0, [x24, #48]
    85c0:	mov	w0, #0x3f51                	// #16209
    85c4:	str	w0, [x23, #8]
    85c8:	b	89ac <inflate@@Base+0x884>
    85cc:	ldr	w0, [x23, #56]
    85d0:	cbnz	w0, 85dc <inflate@@Base+0x4b4>
    85d4:	mov	w0, #0xf                   	// #15
    85d8:	str	w0, [x23, #56]
    85dc:	mov	w2, #0x0                   	// #0
    85e0:	mov	x1, #0x0                   	// #0
    85e4:	mov	x0, #0x0                   	// #0
    85e8:	str	x7, [sp, #112]
    85ec:	str	w8, [sp, #120]
    85f0:	mov	w19, #0x0                   	// #0
    85f4:	str	w9, [sp, #128]
    85f8:	bl	2430 <crc32@plt>
    85fc:	mov	w3, #0xffff8b1f            	// #-29921
    8600:	str	x0, [x23, #32]
    8604:	add	x1, sp, #0xa8
    8608:	mov	w2, #0x2                   	// #2
    860c:	strh	w3, [sp, #168]
    8610:	bl	2430 <crc32@plt>
    8614:	ldr	w8, [sp, #120]
    8618:	mov	w1, #0x3f35                	// #16181
    861c:	ldr	w9, [sp, #128]
    8620:	mov	x22, #0x0                   	// #0
    8624:	ldr	x7, [sp, #112]
    8628:	str	w1, [x23, #8]
    862c:	str	x0, [x23, #32]
    8630:	cbz	w20, 867c <inflate@@Base+0x554>
    8634:	ldrb	w0, [x21], #1
    8638:	sub	w20, w20, #0x1
    863c:	lsl	x0, x0, x19
    8640:	add	w19, w19, #0x8
    8644:	add	x22, x22, x0
    8648:	cmp	w19, #0xf
    864c:	b.ls	8630 <inflate@@Base+0x508>  // b.plast
    8650:	str	w22, [x23, #24]
    8654:	and	w0, w22, #0xff
    8658:	cmp	w0, #0x8
    865c:	mov	w0, w22
    8660:	b.eq	9458 <inflate@@Base+0x1330>  // b.none
    8664:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    8668:	add	x0, x0, #0x3c0
    866c:	str	x0, [x24, #48]
    8670:	mov	w0, #0x3f51                	// #16209
    8674:	str	w0, [x23, #8]
    8678:	b	89ac <inflate@@Base+0x884>
    867c:	sub	w27, w9, w8
    8680:	ldr	w0, [x23, #60]
    8684:	str	x21, [x24]
    8688:	str	w20, [x24, #8]
    868c:	str	x7, [x24, #24]
    8690:	str	w8, [x24, #32]
    8694:	str	x22, [x23, #80]
    8698:	str	w19, [x23, #88]
    869c:	cbnz	w0, 8798 <inflate@@Base+0x670>
    86a0:	cmp	w9, w8
    86a4:	b.eq	86b8 <inflate@@Base+0x590>  // b.none
    86a8:	ldr	w0, [x23, #8]
    86ac:	mov	w1, #0x3f50                	// #16208
    86b0:	cmp	w0, w1
    86b4:	b.ls	8788 <inflate@@Base+0x660>  // b.plast
    86b8:	ldr	x3, [x24, #16]
    86bc:	sub	w4, w28, w20
    86c0:	ldr	x2, [x24, #40]
    86c4:	mov	w1, w27
    86c8:	ldr	x0, [x23, #40]
    86cc:	add	x3, x3, x4
    86d0:	ldr	w4, [x23, #16]
    86d4:	add	x2, x2, x1
    86d8:	str	x3, [x24, #16]
    86dc:	add	x0, x0, x1
    86e0:	str	x2, [x24, #40]
    86e4:	sub	w20, w28, w20
    86e8:	str	x0, [x23, #40]
    86ec:	tst	x4, #0x4
    86f0:	ccmp	w27, #0x0, #0x4, ne  // ne = any
    86f4:	b.ne	8abc <inflate@@Base+0x994>  // b.any
    86f8:	ldp	w1, w3, [x23, #8]
    86fc:	mov	w2, #0x3f3f                	// #16191
    8700:	ldr	w0, [x23, #88]
    8704:	cmp	w3, #0x0
    8708:	add	w3, w0, #0x40
    870c:	csel	w0, w3, w0, ne  // ne = any
    8710:	cmp	w1, w2
    8714:	b.eq	8a84 <inflate@@Base+0x95c>  // b.none
    8718:	mov	w2, #0x3f47                	// #16199
    871c:	cmp	w1, w2
    8720:	mov	w3, #0x3f42                	// #16194
    8724:	add	w2, w0, #0x100
    8728:	ccmp	w1, w3, #0x4, ne  // ne = any
    872c:	orr	w20, w20, w27
    8730:	csel	w0, w2, w0, eq  // eq = none
    8734:	str	w0, [x24, #88]
    8738:	cmp	w20, #0x0
    873c:	ccmp	w26, #0x4, #0x4, ne  // ne = any
    8740:	b.ne	8a9c <inflate@@Base+0x974>  // b.any
    8744:	ldp	x19, x20, [sp, #16]
    8748:	cmp	w25, #0x0
    874c:	ldp	x21, x22, [sp, #32]
    8750:	mov	w0, #0xfffffffb            	// #-5
    8754:	ldp	x23, x24, [sp, #48]
    8758:	csel	w25, w25, w0, ne  // ne = any
    875c:	ldp	x27, x28, [sp, #80]
    8760:	mov	w0, w25
    8764:	ldp	x25, x26, [sp, #64]
    8768:	ldp	x29, x30, [sp], #176
    876c:	ret
    8770:	mov	w25, #0xfffffffe            	// #-2
    8774:	mov	w0, w25
    8778:	ldp	x23, x24, [sp, #48]
    877c:	ldp	x25, x26, [sp, #64]
    8780:	ldp	x29, x30, [sp], #176
    8784:	ret
    8788:	mov	w1, #0x3f4d                	// #16205
    878c:	cmp	w0, w1
    8790:	ccmp	w26, #0x4, #0x0, hi  // hi = pmore
    8794:	b.eq	86b8 <inflate@@Base+0x590>  // b.none
    8798:	mov	w2, w27
    879c:	mov	x1, x7
    87a0:	mov	x0, x24
    87a4:	str	w9, [sp, #104]
    87a8:	bl	7c38 <inflateBackEnd@@ZLIB_1.2.0+0x540>
    87ac:	cbnz	w0, 96ec <inflate@@Base+0x15c4>
    87b0:	ldr	w27, [x24, #32]
    87b4:	ldr	w9, [sp, #104]
    87b8:	ldr	w20, [x24, #8]
    87bc:	sub	w27, w9, w27
    87c0:	b	86b8 <inflate@@Base+0x590>
    87c4:	mov	w1, #0x3f40                	// #16192
    87c8:	mov	w0, w1
    87cc:	str	w1, [x23, #8]
    87d0:	b	8194 <inflate@@Base+0x6c>
    87d4:	cbz	w28, 817c <inflate@@Base+0x54>
    87d8:	mov	w25, #0xfffffffe            	// #-2
    87dc:	ldp	x21, x22, [sp, #32]
    87e0:	ldp	x23, x24, [sp, #48]
    87e4:	ldp	x27, x28, [sp, #80]
    87e8:	b	8760 <inflate@@Base+0x638>
    87ec:	cbz	w20, 867c <inflate@@Base+0x554>
    87f0:	ldrb	w0, [x21], #1
    87f4:	sub	w20, w20, #0x1
    87f8:	lsl	x0, x0, x19
    87fc:	add	w19, w19, #0x8
    8800:	add	x22, x22, x0
    8804:	cmp	w19, #0x1f
    8808:	b.ls	87ec <inflate@@Base+0x6c4>  // b.plast
    880c:	ldr	x2, [x24, #40]
    8810:	sub	w3, w9, w8
    8814:	ldr	x0, [x23, #40]
    8818:	add	x2, x2, x3
    881c:	str	x2, [x24, #40]
    8820:	sub	w2, w9, w8
    8824:	add	x0, x0, x3
    8828:	str	x0, [x23, #40]
    882c:	ands	w0, w1, #0x4
    8830:	ccmp	w2, #0x0, #0x4, ne  // ne = any
    8834:	b.ne	919c <inflate@@Base+0x1074>  // b.any
    8838:	cbz	w0, 9608 <inflate@@Base+0x14e0>
    883c:	ldr	w2, [x23, #24]
    8840:	mov	x0, x22
    8844:	cbnz	w2, 886c <inflate@@Base+0x744>
    8848:	lsr	x2, x22, #8
    884c:	lsl	x0, x22, #8
    8850:	and	x3, x2, #0xff00
    8854:	and	x0, x0, #0xff0000
    8858:	lsl	w4, w22, #24
    885c:	lsr	w2, w22, #24
    8860:	add	x0, x0, x4
    8864:	orr	x2, x2, x3
    8868:	add	x0, x0, x2
    886c:	ldr	x2, [x23, #32]
    8870:	cmp	x2, x0
    8874:	b.eq	9608 <inflate@@Base+0x14e0>  // b.none
    8878:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    887c:	add	x0, x0, #0x430
    8880:	str	x0, [x24, #48]
    8884:	mov	w9, w8
    8888:	mov	w0, #0x3f51                	// #16209
    888c:	str	w0, [x23, #8]
    8890:	b	89ac <inflate@@Base+0x884>
    8894:	sub	w19, w19, w0
    8898:	lsr	x22, x22, x0
    889c:	str	w1, [x23, #92]
    88a0:	str	w0, [x23, #7148]
    88a4:	mov	w0, #0x3f4d                	// #16205
    88a8:	str	w0, [x23, #8]
    88ac:	cbz	w8, 970c <inflate@@Base+0x15e4>
    88b0:	ldr	w1, [x23, #92]
    88b4:	sub	w8, w8, #0x1
    88b8:	strb	w1, [x7], #1
    88bc:	mov	w0, #0x3f48                	// #16200
    88c0:	str	w0, [x23, #8]
    88c4:	cmp	w8, #0x101
    88c8:	ccmp	w20, #0x5, #0x0, hi  // hi = pmore
    88cc:	b.ls	8aec <inflate@@Base+0x9c4>  // b.plast
    88d0:	str	x21, [x24]
    88d4:	mov	w1, w9
    88d8:	str	w20, [x24, #8]
    88dc:	mov	x0, x24
    88e0:	str	x7, [x24, #24]
    88e4:	str	w8, [x24, #32]
    88e8:	str	x22, [x23, #80]
    88ec:	str	w19, [x23, #88]
    88f0:	str	w9, [sp, #112]
    88f4:	bl	7748 <inflateBackEnd@@ZLIB_1.2.0+0x50>
    88f8:	ldr	w19, [x23, #88]
    88fc:	ldr	w0, [x23, #8]
    8900:	mov	w1, #0x3f3f                	// #16191
    8904:	ldr	w20, [x24, #8]
    8908:	ldr	w8, [x24, #32]
    890c:	cmp	w0, w1
    8910:	ldr	w9, [sp, #112]
    8914:	ldr	x21, [x24]
    8918:	ldr	x7, [x24, #24]
    891c:	ldr	x22, [x23, #80]
    8920:	b.ne	81b8 <inflate@@Base+0x90>  // b.any
    8924:	mov	w0, #0xffffffff            	// #-1
    8928:	str	w0, [x23, #7148]
    892c:	b	8540 <inflate@@Base+0x418>
    8930:	mov	w0, #0x3f47                	// #16199
    8934:	str	w0, [x23, #8]
    8938:	cmp	w26, #0x6
    893c:	b.eq	956c <inflate@@Base+0x1444>  // b.none
    8940:	mov	w0, #0x3f48                	// #16200
    8944:	str	w0, [x23, #8]
    8948:	b	88c4 <inflate@@Base+0x79c>
    894c:	and	w3, w3, #0xf
    8950:	mov	w0, #0x3f4b                	// #16203
    8954:	str	w0, [x23, #8]
    8958:	stp	w1, w3, [x23, #96]
    895c:	cbnz	w3, 9060 <inflate@@Base+0xf38>
    8960:	mov	w0, #0x3f4c                	// #16204
    8964:	str	w0, [x23, #8]
    8968:	cbz	w8, 970c <inflate@@Base+0x15e4>
    896c:	ldr	w1, [x23, #96]
    8970:	sub	w0, w9, w8
    8974:	cmp	w1, w0
    8978:	b.ls	92bc <inflate@@Base+0x1194>  // b.plast
    897c:	ldr	w2, [x23, #64]
    8980:	add	w1, w1, w8
    8984:	sub	w0, w1, w9
    8988:	cmp	w2, w0
    898c:	b.cs	8b94 <inflate@@Base+0xa6c>  // b.hs, b.nlast
    8990:	ldr	w2, [x23, #7144]
    8994:	cbz	w2, 8b94 <inflate@@Base+0xa6c>
    8998:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    899c:	add	x0, x0, #0xae0
    89a0:	str	x0, [x24, #48]
    89a4:	mov	w0, #0x3f51                	// #16209
    89a8:	str	w0, [x23, #8]
    89ac:	sub	w27, w9, w8
    89b0:	mov	w25, #0xfffffffd            	// #-3
    89b4:	b	8680 <inflate@@Base+0x558>
    89b8:	and	w3, w3, #0xf
    89bc:	mov	w0, #0x3f49                	// #16201
    89c0:	str	w0, [x23, #8]
    89c4:	str	w3, [x23, #100]
    89c8:	cbnz	w3, 8e44 <inflate@@Base+0xd1c>
    89cc:	ldr	w0, [x23, #92]
    89d0:	mov	w1, #0x3f4a                	// #16202
    89d4:	str	w1, [x23, #8]
    89d8:	str	w0, [x23, #7152]
    89dc:	ldr	w0, [x23, #124]
    89e0:	mov	w4, #0xffffffff            	// #-1
    89e4:	ldr	x2, [x23, #112]
    89e8:	lsl	w4, w4, w0
    89ec:	bic	w0, w22, w4
    89f0:	mvn	w4, w4
    89f4:	b	8a14 <inflate@@Base+0x8ec>
    89f8:	cbz	w20, 867c <inflate@@Base+0x554>
    89fc:	ldrb	w0, [x21], #1
    8a00:	sub	w20, w20, #0x1
    8a04:	lsl	x0, x0, x19
    8a08:	add	x22, x22, x0
    8a0c:	and	w0, w4, w22
    8a10:	add	w19, w19, #0x8
    8a14:	lsl	x0, x0, #2
    8a18:	add	x1, x2, x0
    8a1c:	ldrb	w3, [x2, x0]
    8a20:	ldrb	w0, [x1, #1]
    8a24:	ldrh	w1, [x1, #2]
    8a28:	cmp	w0, w19
    8a2c:	mov	w5, w0
    8a30:	b.hi	89f8 <inflate@@Base+0x8d0>  // b.pmore
    8a34:	tst	w3, #0xf0
    8a38:	mov	w4, w0
    8a3c:	b.eq	9378 <inflate@@Base+0x1250>  // b.none
    8a40:	ldr	w2, [x23, #7148]
    8a44:	add	w2, w0, w2
    8a48:	str	w2, [x23, #7148]
    8a4c:	sub	w19, w19, w0
    8a50:	lsr	x22, x22, x0
    8a54:	tbz	w3, #6, 894c <inflate@@Base+0x824>
    8a58:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    8a5c:	add	x0, x0, #0xac8
    8a60:	str	x0, [x24, #48]
    8a64:	mov	w0, #0x3f51                	// #16209
    8a68:	str	w0, [x23, #8]
    8a6c:	b	89ac <inflate@@Base+0x884>
    8a70:	mov	w25, #0xfffffffe            	// #-2
    8a74:	mov	w0, w25
    8a78:	ldp	x25, x26, [sp, #64]
    8a7c:	ldp	x29, x30, [sp], #176
    8a80:	ret
    8a84:	add	w0, w0, #0x80
    8a88:	orr	w20, w20, w27
    8a8c:	str	w0, [x24, #88]
    8a90:	cmp	w20, #0x0
    8a94:	ccmp	w26, #0x4, #0x4, ne  // ne = any
    8a98:	b.eq	8744 <inflate@@Base+0x61c>  // b.none
    8a9c:	mov	w0, w25
    8aa0:	ldp	x19, x20, [sp, #16]
    8aa4:	ldp	x21, x22, [sp, #32]
    8aa8:	ldp	x23, x24, [sp, #48]
    8aac:	ldp	x25, x26, [sp, #64]
    8ab0:	ldp	x27, x28, [sp, #80]
    8ab4:	ldp	x29, x30, [sp], #176
    8ab8:	ret
    8abc:	ldr	w3, [x23, #24]
    8ac0:	ldr	x2, [x24, #24]
    8ac4:	ldr	x0, [x23, #32]
    8ac8:	sub	x1, x2, x1
    8acc:	mov	w2, w27
    8ad0:	cbz	w3, 8ae4 <inflate@@Base+0x9bc>
    8ad4:	bl	2430 <crc32@plt>
    8ad8:	str	x0, [x23, #32]
    8adc:	str	x0, [x24, #96]
    8ae0:	b	86f8 <inflate@@Base+0x5d0>
    8ae4:	bl	2560 <adler32@plt>
    8ae8:	b	8ad8 <inflate@@Base+0x9b0>
    8aec:	ldr	w0, [x23, #120]
    8af0:	mov	w4, #0xffffffff            	// #-1
    8af4:	ldr	x2, [x23, #104]
    8af8:	lsl	w4, w4, w0
    8afc:	bic	w0, w22, w4
    8b00:	mvn	w4, w4
    8b04:	lsl	x0, x0, #2
    8b08:	add	x1, x2, x0
    8b0c:	ldrb	w3, [x2, x0]
    8b10:	ldrb	w0, [x1, #1]
    8b14:	ldrh	w1, [x1, #2]
    8b18:	str	wzr, [x23, #7148]
    8b1c:	cmp	w19, w0
    8b20:	b.cs	8b60 <inflate@@Base+0xa38>  // b.hs, b.nlast
    8b24:	nop
    8b28:	cbz	w20, 867c <inflate@@Base+0x554>
    8b2c:	ldrb	w0, [x21], #1
    8b30:	sub	w20, w20, #0x1
    8b34:	lsl	x0, x0, x19
    8b38:	add	x22, x22, x0
    8b3c:	and	w0, w4, w22
    8b40:	add	w19, w19, #0x8
    8b44:	lsl	x0, x0, #2
    8b48:	add	x1, x2, x0
    8b4c:	ldrb	w3, [x2, x0]
    8b50:	ldrb	w0, [x1, #1]
    8b54:	ldrh	w1, [x1, #2]
    8b58:	cmp	w0, w19
    8b5c:	b.hi	8b28 <inflate@@Base+0xa00>  // b.pmore
    8b60:	cbz	w3, 8894 <inflate@@Base+0x76c>
    8b64:	tst	w3, #0xf0
    8b68:	b.eq	9714 <inflate@@Base+0x15ec>  // b.none
    8b6c:	sub	w19, w19, w0
    8b70:	lsr	x22, x22, x0
    8b74:	str	w1, [x23, #92]
    8b78:	str	w0, [x23, #7148]
    8b7c:	tbz	w3, #5, 95ec <inflate@@Base+0x14c4>
    8b80:	mov	w0, #0xffffffff            	// #-1
    8b84:	mov	w1, #0x3f3f                	// #16191
    8b88:	str	w1, [x23, #8]
    8b8c:	str	w0, [x23, #7148]
    8b90:	b	8540 <inflate@@Base+0x418>
    8b94:	ldr	w2, [x23, #68]
    8b98:	sub	w3, w9, w1
    8b9c:	ldr	x1, [x23, #72]
    8ba0:	cmp	w2, w0
    8ba4:	b.cs	936c <inflate@@Base+0x1244>  // b.hs, b.nlast
    8ba8:	ldr	w4, [x23, #60]
    8bac:	sub	w0, w0, w2
    8bb0:	add	w2, w2, w4
    8bb4:	add	w2, w2, w3
    8bb8:	add	x1, x1, x2
    8bbc:	ldr	w3, [x23, #92]
    8bc0:	cmp	w3, w0
    8bc4:	csel	w2, w3, w0, ls  // ls = plast
    8bc8:	cmp	w2, w8
    8bcc:	mov	x0, #0x0                   	// #0
    8bd0:	csel	w2, w2, w8, ls  // ls = plast
    8bd4:	sub	w4, w2, #0x1
    8bd8:	sub	w8, w8, w2
    8bdc:	add	x5, x4, #0x1
    8be0:	sub	w2, w3, w2
    8be4:	str	w2, [x23, #92]
    8be8:	ldrb	w3, [x1, x0]
    8bec:	cmp	x0, x4
    8bf0:	strb	w3, [x7, x0]
    8bf4:	add	x0, x0, #0x1
    8bf8:	b.ne	8be8 <inflate@@Base+0xac0>  // b.any
    8bfc:	ldr	w0, [x23, #92]
    8c00:	add	x7, x7, x5
    8c04:	cbz	w0, 8940 <inflate@@Base+0x818>
    8c08:	ldr	w0, [x23, #8]
    8c0c:	b	81b8 <inflate@@Base+0x90>
    8c10:	ldr	w1, [x23, #16]
    8c14:	cbnz	w1, 8c3c <inflate@@Base+0xb14>
    8c18:	mov	w0, #0x3f40                	// #16192
    8c1c:	str	w0, [x23, #8]
    8c20:	b	854c <inflate@@Base+0x424>
    8c24:	cbz	w20, 867c <inflate@@Base+0x554>
    8c28:	ldrb	w0, [x21], #1
    8c2c:	sub	w20, w20, #0x1
    8c30:	lsl	x0, x0, x19
    8c34:	add	w19, w19, #0x8
    8c38:	add	x22, x22, x0
    8c3c:	cmp	w19, #0xf
    8c40:	b.ls	8c24 <inflate@@Base+0xafc>  // b.plast
    8c44:	tst	x1, #0x2
    8c48:	mov	x0, #0x8b1f                	// #35615
    8c4c:	ccmp	x22, x0, #0x0, ne  // ne = any
    8c50:	b.eq	85cc <inflate@@Base+0x4a4>  // b.none
    8c54:	ldr	x0, [x23, #48]
    8c58:	str	wzr, [x23, #24]
    8c5c:	cbz	x0, 8c68 <inflate@@Base+0xb40>
    8c60:	mov	w2, #0xffffffff            	// #-1
    8c64:	str	w2, [x0, #72]
    8c68:	tbz	w1, #0, 964c <inflate@@Base+0x1524>
    8c6c:	mov	x0, #0x4211                	// #16913
    8c70:	ubfiz	x1, x22, #8, #8
    8c74:	movk	x0, #0x2108, lsl #16
    8c78:	add	x1, x1, x22, lsr #8
    8c7c:	movk	x0, #0x1084, lsl #32
    8c80:	movk	x0, #0x842, lsl #48
    8c84:	umulh	x2, x1, x0
    8c88:	sub	x0, x1, x2
    8c8c:	add	x0, x2, x0, lsr #1
    8c90:	lsr	x0, x0, #4
    8c94:	lsl	x2, x0, #5
    8c98:	sub	x0, x2, x0
    8c9c:	cmp	x1, x0
    8ca0:	b.ne	964c <inflate@@Base+0x1524>  // b.any
    8ca4:	and	w0, w22, #0xf
    8ca8:	cmp	w0, #0x8
    8cac:	b.ne	8664 <inflate@@Base+0x53c>  // b.any
    8cb0:	ldr	w1, [x23, #56]
    8cb4:	lsr	x22, x22, #4
    8cb8:	and	w0, w22, #0xf
    8cbc:	sub	w19, w19, #0x4
    8cc0:	add	w0, w0, #0x8
    8cc4:	cbnz	w1, 9894 <inflate@@Base+0x176c>
    8cc8:	str	w0, [x23, #56]
    8ccc:	cmp	w0, #0xf
    8cd0:	b.ls	98a4 <inflate@@Base+0x177c>  // b.plast
    8cd4:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    8cd8:	add	x0, x0, #0x3e0
    8cdc:	str	x0, [x24, #48]
    8ce0:	mov	w0, #0x3f51                	// #16209
    8ce4:	str	w0, [x23, #8]
    8ce8:	b	89ac <inflate@@Base+0x884>
    8cec:	ldr	w2, [x23, #24]
    8cf0:	mov	w1, w2
    8cf4:	tbz	w2, #10, 833c <inflate@@Base+0x214>
    8cf8:	cmp	w19, #0xf
    8cfc:	b.hi	90b8 <inflate@@Base+0xf90>  // b.pmore
    8d00:	cbz	w20, 867c <inflate@@Base+0x554>
    8d04:	ldrb	w0, [x21], #1
    8d08:	sub	w20, w20, #0x1
    8d0c:	lsl	x0, x0, x19
    8d10:	add	w19, w19, #0x8
    8d14:	add	x22, x22, x0
    8d18:	b	8cf8 <inflate@@Base+0xbd0>
    8d1c:	ldr	w1, [x23, #24]
    8d20:	and	w0, w1, #0x400
    8d24:	b	8354 <inflate@@Base+0x22c>
    8d28:	ldr	w2, [x23, #128]
    8d2c:	ldr	w1, [x23, #140]
    8d30:	cmp	w1, w2
    8d34:	b.cs	8d84 <inflate@@Base+0xc5c>  // b.hs, b.nlast
    8d38:	cmp	w19, #0x2
    8d3c:	b.hi	8d58 <inflate@@Base+0xc30>  // b.pmore
    8d40:	cbz	w20, 867c <inflate@@Base+0x554>
    8d44:	ldrb	w0, [x21], #1
    8d48:	sub	w20, w20, #0x1
    8d4c:	lsl	x0, x0, x19
    8d50:	add	w19, w19, #0x8
    8d54:	add	x22, x22, x0
    8d58:	ldr	x0, [sp, #104]
    8d5c:	and	w3, w22, #0x7
    8d60:	sub	w19, w19, #0x3
    8d64:	lsr	x22, x22, #3
    8d68:	ldrh	w0, [x0, w1, uxtw #1]
    8d6c:	add	w1, w1, #0x1
    8d70:	str	w1, [x23, #140]
    8d74:	cmp	w1, w2
    8d78:	add	x0, x23, x0, lsl #1
    8d7c:	strh	w3, [x0, #152]
    8d80:	b.cc	8d38 <inflate@@Base+0xc10>  // b.lo, b.ul, b.last
    8d84:	cmp	w1, #0x12
    8d88:	b.hi	8dc0 <inflate@@Base+0xc98>  // b.pmore
    8d8c:	ldr	x0, [sp, #104]
    8d90:	mov	w3, #0x12                  	// #18
    8d94:	sub	w3, w3, w1
    8d98:	add	x4, x0, w1, uxtw #1
    8d9c:	mov	x0, #0x0                   	// #0
    8da0:	ldrh	w1, [x4, x0, lsl #1]
    8da4:	cmp	x3, x0
    8da8:	add	x0, x0, #0x1
    8dac:	add	x1, x23, x1, lsl #1
    8db0:	strh	wzr, [x1, #152]
    8db4:	b.ne	8da0 <inflate@@Base+0xc78>  // b.any
    8db8:	mov	w0, #0x13                  	// #19
    8dbc:	str	w0, [x23, #140]
    8dc0:	add	x0, x23, #0x558
    8dc4:	mov	w1, #0x7                   	// #7
    8dc8:	str	x0, [x23, #104]
    8dcc:	add	x5, x23, #0x318
    8dd0:	str	w1, [x23, #120]
    8dd4:	add	x4, x23, #0x78
    8dd8:	str	x0, [x23, #144]
    8ddc:	add	x3, x23, #0x90
    8de0:	add	x1, x23, #0x98
    8de4:	mov	w2, #0x13                  	// #19
    8de8:	mov	w0, #0x0                   	// #0
    8dec:	str	x7, [sp, #112]
    8df0:	str	w8, [sp, #120]
    8df4:	str	w9, [sp, #128]
    8df8:	bl	a348 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    8dfc:	ldr	w8, [sp, #120]
    8e00:	ldr	w9, [sp, #128]
    8e04:	ldr	x7, [sp, #112]
    8e08:	cbz	w0, 97d4 <inflate@@Base+0x16ac>
    8e0c:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    8e10:	add	x0, x0, #0xa08
    8e14:	str	x0, [x24, #48]
    8e18:	mov	w0, #0x3f51                	// #16209
    8e1c:	str	w0, [x23, #8]
    8e20:	b	89ac <inflate@@Base+0x884>
    8e24:	ldr	w3, [x23, #100]
    8e28:	b	89c8 <inflate@@Base+0x8a0>
    8e2c:	cbz	w20, 867c <inflate@@Base+0x554>
    8e30:	ldrb	w0, [x21], #1
    8e34:	sub	w20, w20, #0x1
    8e38:	lsl	x0, x0, x19
    8e3c:	add	w19, w19, #0x8
    8e40:	add	x22, x22, x0
    8e44:	cmp	w19, w3
    8e48:	b.cc	8e2c <inflate@@Base+0xd04>  // b.lo, b.ul, b.last
    8e4c:	ldr	w2, [x23, #92]
    8e50:	mov	w0, #0xffffffff            	// #-1
    8e54:	ldr	w1, [x23, #7148]
    8e58:	lsl	w0, w0, w3
    8e5c:	bic	w0, w22, w0
    8e60:	sub	w19, w19, w3
    8e64:	add	w0, w0, w2
    8e68:	lsr	x22, x22, x3
    8e6c:	add	w3, w1, w3
    8e70:	str	w0, [x23, #92]
    8e74:	str	w3, [x23, #7148]
    8e78:	b	89d0 <inflate@@Base+0x8a8>
    8e7c:	ldr	w1, [x23, #16]
    8e80:	b	8578 <inflate@@Base+0x450>
    8e84:	sub	w27, w9, w8
    8e88:	mov	w25, #0x1                   	// #1
    8e8c:	b	8680 <inflate@@Base+0x558>
    8e90:	ldr	w0, [x23, #92]
    8e94:	mov	w1, #0x3f43                	// #16195
    8e98:	str	w1, [x23, #8]
    8e9c:	cbz	w0, 9244 <inflate@@Base+0x111c>
    8ea0:	cmp	w20, w0
    8ea4:	csel	w0, w20, w0, ls  // ls = plast
    8ea8:	cmp	w0, w8
    8eac:	csel	w3, w0, w8, ls  // ls = plast
    8eb0:	cbz	w3, 867c <inflate@@Base+0x554>
    8eb4:	mov	w2, w3
    8eb8:	mov	x1, x21
    8ebc:	mov	x0, x7
    8ec0:	str	x2, [sp, #112]
    8ec4:	str	w3, [sp, #120]
    8ec8:	str	w8, [sp, #128]
    8ecc:	str	w9, [sp, #136]
    8ed0:	bl	23a0 <memcpy@plt>
    8ed4:	ldr	w3, [sp, #120]
    8ed8:	mov	x7, x0
    8edc:	ldr	w0, [x23, #92]
    8ee0:	ldr	x2, [sp, #112]
    8ee4:	sub	w0, w0, w3
    8ee8:	ldr	w8, [sp, #128]
    8eec:	sub	w20, w20, w3
    8ef0:	ldr	w9, [sp, #136]
    8ef4:	add	x21, x21, x2
    8ef8:	sub	w8, w8, w3
    8efc:	add	x7, x7, x2
    8f00:	str	w0, [x23, #92]
    8f04:	ldr	w0, [x23, #8]
    8f08:	b	81b8 <inflate@@Base+0x90>
    8f0c:	ldr	w5, [x23, #140]
    8f10:	ldp	w2, w11, [x23, #132]
    8f14:	add	w11, w2, w11
    8f18:	cmp	w11, w5
    8f1c:	b.ls	8fb0 <inflate@@Base+0xe88>  // b.plast
    8f20:	ldr	w0, [x23, #120]
    8f24:	mov	w3, #0xffffffff            	// #-1
    8f28:	ldr	x4, [x23, #104]
    8f2c:	mov	w13, #0xfffffffd            	// #-3
    8f30:	lsl	w3, w3, w0
    8f34:	mvn	w3, w3
    8f38:	mov	w12, #0xfffffff9            	// #-7
    8f3c:	and	w0, w3, w22
    8f40:	add	x0, x4, x0, lsl #2
    8f44:	ldrb	w1, [x0, #1]
    8f48:	ldrh	w0, [x0, #2]
    8f4c:	cmp	w19, w1
    8f50:	b.cs	8f88 <inflate@@Base+0xe60>  // b.hs, b.nlast
    8f54:	nop
    8f58:	cbz	w20, 867c <inflate@@Base+0x554>
    8f5c:	ldrb	w0, [x21], #1
    8f60:	sub	w20, w20, #0x1
    8f64:	lsl	x0, x0, x19
    8f68:	add	x22, x22, x0
    8f6c:	and	w0, w3, w22
    8f70:	add	w19, w19, #0x8
    8f74:	add	x0, x4, x0, lsl #2
    8f78:	ldrb	w1, [x0, #1]
    8f7c:	ldrh	w0, [x0, #2]
    8f80:	cmp	w1, w19
    8f84:	b.hi	8f58 <inflate@@Base+0xe30>  // b.pmore
    8f88:	cmp	w0, #0xf
    8f8c:	b.hi	92d8 <inflate@@Base+0x11b0>  // b.pmore
    8f90:	add	x14, x23, w5, uxtw #1
    8f94:	sub	w19, w19, w1
    8f98:	add	w5, w5, #0x1
    8f9c:	str	w5, [x23, #140]
    8fa0:	lsr	x22, x22, x1
    8fa4:	strh	w0, [x14, #152]
    8fa8:	cmp	w11, w5
    8fac:	b.hi	8f3c <inflate@@Base+0xe14>  // b.pmore
    8fb0:	ldr	w0, [x23, #8]
    8fb4:	mov	w11, #0x3f51                	// #16209
    8fb8:	cmp	w0, w11
    8fbc:	b.eq	89ac <inflate@@Base+0x884>  // b.none
    8fc0:	ldrh	w0, [x23, #664]
    8fc4:	cbnz	w0, 982c <inflate@@Base+0x1704>
    8fc8:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    8fcc:	add	x0, x0, #0xa48
    8fd0:	str	x0, [x24, #48]
    8fd4:	str	w11, [x23, #8]
    8fd8:	b	89ac <inflate@@Base+0x884>
    8fdc:	ldr	w1, [x23, #24]
    8fe0:	b	8424 <inflate@@Base+0x2fc>
    8fe4:	cbz	w20, 867c <inflate@@Base+0x554>
    8fe8:	ldrb	w0, [x21], #1
    8fec:	sub	w20, w20, #0x1
    8ff0:	lsl	x0, x0, x19
    8ff4:	add	w19, w19, #0x8
    8ff8:	add	x22, x22, x0
    8ffc:	cmp	w19, #0xf
    9000:	b.ls	8fe4 <inflate@@Base+0xebc>  // b.plast
    9004:	ldr	w0, [x23, #16]
    9008:	tbz	w0, #2, 92cc <inflate@@Base+0x11a4>
    900c:	ldrh	w0, [x23, #32]
    9010:	cmp	x0, x22
    9014:	b.eq	92cc <inflate@@Base+0x11a4>  // b.none
    9018:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    901c:	add	x0, x0, #0x418
    9020:	str	x0, [x24, #48]
    9024:	mov	w0, #0x3f51                	// #16209
    9028:	str	w0, [x23, #8]
    902c:	b	89ac <inflate@@Base+0x884>
    9030:	ldr	w0, [x23, #92]
    9034:	b	8e9c <inflate@@Base+0xd74>
    9038:	ldr	w1, [x23, #24]
    903c:	b	8408 <inflate@@Base+0x2e0>
    9040:	ldr	w3, [x23, #100]
    9044:	b	895c <inflate@@Base+0x834>
    9048:	cbz	w20, 867c <inflate@@Base+0x554>
    904c:	ldrb	w0, [x21], #1
    9050:	sub	w20, w20, #0x1
    9054:	lsl	x0, x0, x19
    9058:	add	w19, w19, #0x8
    905c:	add	x22, x22, x0
    9060:	cmp	w19, w3
    9064:	b.cc	9048 <inflate@@Base+0xf20>  // b.lo, b.ul, b.last
    9068:	ldr	w2, [x23, #96]
    906c:	mov	w0, #0xffffffff            	// #-1
    9070:	ldr	w1, [x23, #7148]
    9074:	lsl	w0, w0, w3
    9078:	bic	w0, w22, w0
    907c:	sub	w19, w19, w3
    9080:	add	w0, w2, w0
    9084:	lsr	x22, x22, x3
    9088:	add	w3, w1, w3
    908c:	str	w0, [x23, #96]
    9090:	str	w3, [x23, #7148]
    9094:	b	8960 <inflate@@Base+0x838>
    9098:	ldr	w1, [x23, #24]
    909c:	b	843c <inflate@@Base+0x314>
    90a0:	mov	w25, #0xfffffffc            	// #-4
    90a4:	ldp	x19, x20, [sp, #16]
    90a8:	ldp	x21, x22, [sp, #32]
    90ac:	ldp	x23, x24, [sp, #48]
    90b0:	ldp	x27, x28, [sp, #80]
    90b4:	b	8760 <inflate@@Base+0x638>
    90b8:	ldr	x0, [x23, #48]
    90bc:	str	w22, [x23, #92]
    90c0:	cbz	x0, 90c8 <inflate@@Base+0xfa0>
    90c4:	str	w22, [x0, #32]
    90c8:	tbz	w2, #9, 90d4 <inflate@@Base+0xfac>
    90cc:	ldr	w0, [x23, #16]
    90d0:	tbnz	w0, #2, 9790 <inflate@@Base+0x1668>
    90d4:	mov	w1, w2
    90d8:	and	w0, w2, #0x400
    90dc:	mov	w19, #0x0                   	// #0
    90e0:	mov	x22, #0x0                   	// #0
    90e4:	b	834c <inflate@@Base+0x224>
    90e8:	cmp	w19, #0x2
    90ec:	b.hi	9108 <inflate@@Base+0xfe0>  // b.pmore
    90f0:	cbz	w20, 956c <inflate@@Base+0x1444>
    90f4:	ldrb	w0, [x21], #1
    90f8:	sub	w20, w20, #0x1
    90fc:	lsl	x0, x0, x19
    9100:	add	w19, w19, #0x8
    9104:	add	x22, x22, x0
    9108:	and	w0, w22, #0x1
    910c:	str	w0, [x23, #12]
    9110:	ubfx	w0, w22, #1, #2
    9114:	cmp	w0, #0x2
    9118:	b.eq	9598 <inflate@@Base+0x1470>  // b.none
    911c:	cmp	w0, #0x3
    9120:	b.eq	9578 <inflate@@Base+0x1450>  // b.none
    9124:	cmp	w0, #0x1
    9128:	b.eq	9540 <inflate@@Base+0x1418>  // b.none
    912c:	lsr	x22, x22, #3
    9130:	sub	w19, w19, #0x3
    9134:	mov	w0, #0x3f41                	// #16193
    9138:	str	w0, [x23, #8]
    913c:	and	w0, w19, #0x7
    9140:	and	w19, w19, #0xfffffff8
    9144:	cmp	w19, #0x1f
    9148:	lsr	x22, x22, x0
    914c:	b.hi	9170 <inflate@@Base+0x1048>  // b.pmore
    9150:	cbz	w20, 867c <inflate@@Base+0x554>
    9154:	ldrb	w0, [x21], #1
    9158:	sub	w20, w20, #0x1
    915c:	lsl	x0, x0, x19
    9160:	add	w19, w19, #0x8
    9164:	add	x22, x22, x0
    9168:	cmp	w19, #0x1f
    916c:	b.ls	9150 <inflate@@Base+0x1028>  // b.plast
    9170:	lsr	x1, x22, #16
    9174:	and	x0, x22, #0xffff
    9178:	eor	x1, x1, #0xffff
    917c:	cmp	x1, w22, uxth
    9180:	b.eq	9438 <inflate@@Base+0x1310>  // b.none
    9184:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    9188:	add	x0, x0, #0x9c0
    918c:	str	x0, [x24, #48]
    9190:	mov	w0, #0x3f51                	// #16209
    9194:	str	w0, [x23, #8]
    9198:	b	89ac <inflate@@Base+0x884>
    919c:	ldr	w4, [x23, #24]
    91a0:	sub	x1, x7, x3
    91a4:	str	x7, [sp, #104]
    91a8:	str	w8, [sp, #112]
    91ac:	ldr	x0, [x23, #32]
    91b0:	cbz	w4, 97e8 <inflate@@Base+0x16c0>
    91b4:	bl	2430 <crc32@plt>
    91b8:	mov	x2, x0
    91bc:	ldr	w8, [sp, #112]
    91c0:	ldr	x7, [sp, #104]
    91c4:	str	x2, [x23, #32]
    91c8:	ldr	w1, [x23, #16]
    91cc:	str	x2, [x24, #96]
    91d0:	and	w0, w1, #0x4
    91d4:	b	8838 <inflate@@Base+0x710>
    91d8:	cbz	w20, 867c <inflate@@Base+0x554>
    91dc:	mov	w2, #0x0                   	// #0
    91e0:	ldr	x1, [x23, #48]
    91e4:	ldrb	w3, [x21, w2, uxtw]
    91e8:	add	w2, w2, #0x1
    91ec:	cbz	x1, 9214 <inflate@@Base+0x10ec>
    91f0:	ldr	x0, [x1, #56]
    91f4:	cbz	x0, 9214 <inflate@@Base+0x10ec>
    91f8:	ldr	w4, [x1, #64]
    91fc:	ldr	w1, [x23, #92]
    9200:	cmp	w1, w4
    9204:	b.cs	9214 <inflate@@Base+0x10ec>  // b.hs, b.nlast
    9208:	add	w4, w1, #0x1
    920c:	str	w4, [x23, #92]
    9210:	strb	w3, [x0, w1, uxtw]
    9214:	cmp	w3, #0x0
    9218:	ccmp	w20, w2, #0x0, ne  // ne = any
    921c:	b.hi	91e0 <inflate@@Base+0x10b8>  // b.pmore
    9220:	ldr	w0, [x23, #24]
    9224:	tbz	w0, #9, 9230 <inflate@@Base+0x1108>
    9228:	ldr	w0, [x23, #16]
    922c:	tbnz	w0, #2, 93fc <inflate@@Base+0x12d4>
    9230:	add	x21, x21, w2, uxtw
    9234:	sub	w20, w20, w2
    9238:	cbnz	w3, 867c <inflate@@Base+0x554>
    923c:	ldr	w1, [x23, #24]
    9240:	b	8434 <inflate@@Base+0x30c>
    9244:	mov	w0, #0x3f3f                	// #16191
    9248:	str	w0, [x23, #8]
    924c:	b	8540 <inflate@@Base+0x418>
    9250:	cbz	w20, 867c <inflate@@Base+0x554>
    9254:	mov	w2, #0x0                   	// #0
    9258:	ldr	x1, [x23, #48]
    925c:	ldrb	w3, [x21, w2, uxtw]
    9260:	add	w2, w2, #0x1
    9264:	cbz	x1, 928c <inflate@@Base+0x1164>
    9268:	ldr	x0, [x1, #40]
    926c:	cbz	x0, 928c <inflate@@Base+0x1164>
    9270:	ldr	w4, [x1, #48]
    9274:	ldr	w1, [x23, #92]
    9278:	cmp	w1, w4
    927c:	b.cs	928c <inflate@@Base+0x1164>  // b.hs, b.nlast
    9280:	add	w4, w1, #0x1
    9284:	str	w4, [x23, #92]
    9288:	strb	w3, [x0, w1, uxtw]
    928c:	cmp	w3, #0x0
    9290:	ccmp	w20, w2, #0x0, ne  // ne = any
    9294:	b.hi	9258 <inflate@@Base+0x1130>  // b.pmore
    9298:	ldr	w0, [x23, #24]
    929c:	tbz	w0, #9, 92a8 <inflate@@Base+0x1180>
    92a0:	ldr	w0, [x23, #16]
    92a4:	tbnz	w0, #2, 9478 <inflate@@Base+0x1350>
    92a8:	add	x21, x21, w2, uxtw
    92ac:	sub	w20, w20, w2
    92b0:	cbnz	w3, 867c <inflate@@Base+0x554>
    92b4:	ldr	w1, [x23, #24]
    92b8:	b	8418 <inflate@@Base+0x2f0>
    92bc:	ldr	w2, [x23, #92]
    92c0:	sub	x1, x7, w1, uxtw
    92c4:	mov	w3, w2
    92c8:	b	8bc8 <inflate@@Base+0xaa0>
    92cc:	mov	w19, #0x0                   	// #0
    92d0:	mov	x22, #0x0                   	// #0
    92d4:	b	8440 <inflate@@Base+0x318>
    92d8:	cmp	w0, #0x10
    92dc:	b.eq	9694 <inflate@@Base+0x156c>  // b.none
    92e0:	cmp	w0, #0x11
    92e4:	b.eq	94f0 <inflate@@Base+0x13c8>  // b.none
    92e8:	add	w14, w1, #0x7
    92ec:	cmp	w14, w19
    92f0:	b.ls	9318 <inflate@@Base+0x11f0>  // b.plast
    92f4:	nop
    92f8:	cbz	w20, 867c <inflate@@Base+0x554>
    92fc:	ldrb	w0, [x21], #1
    9300:	sub	w20, w20, #0x1
    9304:	lsl	x0, x0, x19
    9308:	add	w19, w19, #0x8
    930c:	add	x22, x22, x0
    9310:	cmp	w14, w19
    9314:	b.hi	92f8 <inflate@@Base+0x11d0>  // b.pmore
    9318:	lsr	x22, x22, x1
    931c:	sub	w1, w12, w1
    9320:	and	w0, w22, #0x7f
    9324:	add	w19, w19, w1
    9328:	lsr	x22, x22, #7
    932c:	add	w1, w0, #0xb
    9330:	mov	w14, #0x0                   	// #0
    9334:	add	w5, w1, w5
    9338:	cmp	w5, w11
    933c:	b.hi	98f8 <inflate@@Base+0x17d0>  // b.pmore
    9340:	ldr	w0, [x23, #140]
    9344:	and	w14, w14, #0xffff
    9348:	add	w5, w0, w1
    934c:	nop
    9350:	add	x1, x23, w0, uxtw #1
    9354:	add	w0, w0, #0x1
    9358:	cmp	w5, w0
    935c:	strh	w14, [x1, #152]
    9360:	b.ne	9350 <inflate@@Base+0x1228>  // b.any
    9364:	str	w5, [x23, #140]
    9368:	b	8fa8 <inflate@@Base+0xe80>
    936c:	add	w2, w2, w3
    9370:	add	x1, x1, x2
    9374:	b	8bbc <inflate@@Base+0xa94>
    9378:	add	w3, w3, w0
    937c:	mov	w11, #0xffffffff            	// #-1
    9380:	mov	w12, w1
    9384:	lsl	w11, w11, w3
    9388:	bic	w1, w22, w11
    938c:	mvn	w11, w11
    9390:	lsr	w0, w1, w0
    9394:	b	93b8 <inflate@@Base+0x1290>
    9398:	cbz	w20, 867c <inflate@@Base+0x554>
    939c:	ldrb	w0, [x21], #1
    93a0:	sub	w20, w20, #0x1
    93a4:	lsl	x0, x0, x19
    93a8:	add	x22, x22, x0
    93ac:	and	w0, w11, w22
    93b0:	add	w19, w19, #0x8
    93b4:	lsr	w0, w0, w4
    93b8:	add	w0, w0, w12
    93bc:	lsl	x0, x0, #2
    93c0:	add	x1, x2, x0
    93c4:	ldrb	w3, [x2, x0]
    93c8:	ldrb	w0, [x1, #1]
    93cc:	ldrh	w1, [x1, #2]
    93d0:	add	w13, w0, w4
    93d4:	cmp	w13, w19
    93d8:	b.hi	9398 <inflate@@Base+0x1270>  // b.pmore
    93dc:	ldr	w2, [x23, #7148]
    93e0:	sub	w19, w19, w5
    93e4:	lsr	x22, x22, x4
    93e8:	add	w2, w4, w2
    93ec:	b	8a44 <inflate@@Base+0x91c>
    93f0:	mov	x22, #0x0                   	// #0
    93f4:	mov	w19, #0x0                   	// #0
    93f8:	b	8d00 <inflate@@Base+0xbd8>
    93fc:	ldr	x0, [x23, #32]
    9400:	mov	x1, x21
    9404:	str	w2, [sp, #112]
    9408:	str	x7, [sp, #120]
    940c:	str	w3, [sp, #128]
    9410:	str	w8, [sp, #136]
    9414:	str	w9, [sp, #144]
    9418:	bl	2430 <crc32@plt>
    941c:	ldr	w2, [sp, #112]
    9420:	ldr	w3, [sp, #128]
    9424:	ldr	w8, [sp, #136]
    9428:	ldr	w9, [sp, #144]
    942c:	str	x0, [x23, #32]
    9430:	ldr	x7, [sp, #120]
    9434:	b	9230 <inflate@@Base+0x1108>
    9438:	mov	w1, #0x3f42                	// #16194
    943c:	str	w1, [x23, #8]
    9440:	str	w0, [x23, #92]
    9444:	cmp	w26, #0x6
    9448:	b.eq	999c <inflate@@Base+0x1874>  // b.none
    944c:	mov	w19, #0x0                   	// #0
    9450:	mov	x22, #0x0                   	// #0
    9454:	b	8e94 <inflate@@Base+0xd6c>
    9458:	tst	x22, #0xe000
    945c:	b.eq	8264 <inflate@@Base+0x13c>  // b.none
    9460:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    9464:	add	x0, x0, #0x3f8
    9468:	str	x0, [x24, #48]
    946c:	mov	w0, #0x3f51                	// #16209
    9470:	str	w0, [x23, #8]
    9474:	b	89ac <inflate@@Base+0x884>
    9478:	ldr	x0, [x23, #32]
    947c:	mov	x1, x21
    9480:	str	w2, [sp, #112]
    9484:	str	x7, [sp, #120]
    9488:	str	w3, [sp, #128]
    948c:	str	w8, [sp, #136]
    9490:	str	w9, [sp, #144]
    9494:	bl	2430 <crc32@plt>
    9498:	ldr	w2, [sp, #112]
    949c:	ldr	w3, [sp, #128]
    94a0:	ldr	w8, [sp, #136]
    94a4:	ldr	w9, [sp, #144]
    94a8:	str	x0, [x23, #32]
    94ac:	ldr	x7, [sp, #120]
    94b0:	b	92a8 <inflate@@Base+0x1180>
    94b4:	ldr	x0, [x23, #32]
    94b8:	add	x1, sp, #0xa8
    94bc:	mov	w2, #0x2                   	// #2
    94c0:	str	x7, [sp, #112]
    94c4:	str	w8, [sp, #120]
    94c8:	str	w9, [sp, #128]
    94cc:	strh	w22, [sp, #168]
    94d0:	bl	2430 <crc32@plt>
    94d4:	ldr	w2, [x23, #24]
    94d8:	ldr	w8, [sp, #120]
    94dc:	ldr	w9, [sp, #128]
    94e0:	mov	w1, w2
    94e4:	str	x0, [x23, #32]
    94e8:	ldr	x7, [sp, #112]
    94ec:	b	8328 <inflate@@Base+0x200>
    94f0:	add	w14, w1, #0x3
    94f4:	cmp	w19, w14
    94f8:	b.cs	9520 <inflate@@Base+0x13f8>  // b.hs, b.nlast
    94fc:	nop
    9500:	cbz	w20, 867c <inflate@@Base+0x554>
    9504:	ldrb	w0, [x21], #1
    9508:	sub	w20, w20, #0x1
    950c:	lsl	x0, x0, x19
    9510:	add	w19, w19, #0x8
    9514:	add	x22, x22, x0
    9518:	cmp	w19, w14
    951c:	b.cc	9500 <inflate@@Base+0x13d8>  // b.lo, b.ul, b.last
    9520:	lsr	x22, x22, x1
    9524:	sub	w1, w13, w1
    9528:	and	w0, w22, #0x7
    952c:	add	w19, w19, w1
    9530:	lsr	x22, x22, #3
    9534:	add	w1, w0, #0x3
    9538:	mov	w14, #0x0                   	// #0
    953c:	b	9334 <inflate@@Base+0x120c>
    9540:	mov	x1, #0x9                   	// #9
    9544:	add	x0, x27, #0x800
    9548:	movk	x1, #0x5, lsl #32
    954c:	mov	w2, #0x3f47                	// #16199
    9550:	str	w2, [x23, #8]
    9554:	lsr	x22, x22, #3
    9558:	stp	x27, x0, [x23, #104]
    955c:	sub	w19, w19, #0x3
    9560:	cmp	w26, #0x6
    9564:	str	x1, [x23, #120]
    9568:	b.ne	8940 <inflate@@Base+0x818>  // b.any
    956c:	sub	w27, w9, w8
    9570:	mov	w25, #0x0                   	// #0
    9574:	b	8680 <inflate@@Base+0x558>
    9578:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    957c:	add	x0, x0, #0x9a8
    9580:	str	x0, [x24, #48]
    9584:	lsr	x22, x22, #3
    9588:	mov	w0, #0x3f51                	// #16209
    958c:	sub	w19, w19, #0x3
    9590:	str	w0, [x23, #8]
    9594:	b	89ac <inflate@@Base+0x884>
    9598:	mov	w0, #0x3f44                	// #16196
    959c:	lsr	x22, x22, #3
    95a0:	sub	w19, w19, #0x3
    95a4:	str	w0, [x23, #8]
    95a8:	b	8210 <inflate@@Base+0xe8>
    95ac:	ldr	x0, [x23, #32]
    95b0:	mov	w2, w4
    95b4:	mov	x1, x21
    95b8:	str	w4, [sp, #112]
    95bc:	str	x7, [sp, #120]
    95c0:	str	w8, [sp, #128]
    95c4:	str	w9, [sp, #136]
    95c8:	str	x5, [sp, #144]
    95cc:	bl	2430 <crc32@plt>
    95d0:	ldr	w4, [sp, #112]
    95d4:	ldr	w8, [sp, #128]
    95d8:	ldr	w9, [sp, #136]
    95dc:	str	x0, [x23, #32]
    95e0:	ldr	x7, [sp, #120]
    95e4:	ldr	x5, [sp, #144]
    95e8:	b	83e0 <inflate@@Base+0x2b8>
    95ec:	tbz	w3, #6, 89b8 <inflate@@Base+0x890>
    95f0:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    95f4:	add	x0, x0, #0xaa8
    95f8:	str	x0, [x24, #48]
    95fc:	mov	w0, #0x3f51                	// #16209
    9600:	str	w0, [x23, #8]
    9604:	b	89ac <inflate@@Base+0x884>
    9608:	mov	w9, w8
    960c:	mov	w19, #0x0                   	// #0
    9610:	mov	x22, #0x0                   	// #0
    9614:	b	8570 <inflate@@Base+0x448>
    9618:	ldr	x0, [x23, #32]
    961c:	add	x1, sp, #0xa8
    9620:	mov	w2, #0x4                   	// #4
    9624:	str	x7, [sp, #112]
    9628:	str	w8, [sp, #120]
    962c:	str	w9, [sp, #128]
    9630:	str	w22, [sp, #168]
    9634:	bl	2430 <crc32@plt>
    9638:	ldr	w8, [sp, #120]
    963c:	ldr	w9, [sp, #128]
    9640:	str	x0, [x23, #32]
    9644:	ldr	x7, [sp, #112]
    9648:	b	82cc <inflate@@Base+0x1a4>
    964c:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    9650:	add	x0, x0, #0x3a8
    9654:	str	x0, [x24, #48]
    9658:	mov	w0, #0x3f51                	// #16209
    965c:	str	w0, [x23, #8]
    9660:	b	89ac <inflate@@Base+0x884>
    9664:	mov	w19, #0x0                   	// #0
    9668:	mov	x22, #0x0                   	// #0
    966c:	mov	w0, #0x3f50                	// #16208
    9670:	sub	w27, w9, w8
    9674:	mov	w25, #0x1                   	// #1
    9678:	str	w0, [x23, #8]
    967c:	b	8680 <inflate@@Base+0x558>
    9680:	mov	w0, #0x3f45                	// #16197
    9684:	mov	w1, #0x0                   	// #0
    9688:	str	w0, [x23, #8]
    968c:	str	wzr, [x23, #140]
    9690:	b	8d38 <inflate@@Base+0xc10>
    9694:	add	w14, w1, #0x2
    9698:	cmp	w19, w14
    969c:	b.cs	96c0 <inflate@@Base+0x1598>  // b.hs, b.nlast
    96a0:	cbz	w20, 867c <inflate@@Base+0x554>
    96a4:	ldrb	w0, [x21], #1
    96a8:	sub	w20, w20, #0x1
    96ac:	lsl	x0, x0, x19
    96b0:	add	w19, w19, #0x8
    96b4:	add	x22, x22, x0
    96b8:	cmp	w19, w14
    96bc:	b.cc	96a0 <inflate@@Base+0x1578>  // b.lo, b.ul, b.last
    96c0:	sub	w19, w19, w1
    96c4:	lsr	x22, x22, x1
    96c8:	cbz	w5, 98f8 <inflate@@Base+0x17d0>
    96cc:	sub	w0, w5, #0x1
    96d0:	and	w1, w22, #0x3
    96d4:	sub	w19, w19, #0x2
    96d8:	add	w1, w1, #0x3
    96dc:	add	x0, x23, x0, lsl #1
    96e0:	lsr	x22, x22, #2
    96e4:	ldrh	w14, [x0, #152]
    96e8:	b	9334 <inflate@@Base+0x120c>
    96ec:	mov	w0, #0x3f52                	// #16210
    96f0:	mov	w25, #0xfffffffc            	// #-4
    96f4:	ldp	x19, x20, [sp, #16]
    96f8:	ldp	x21, x22, [sp, #32]
    96fc:	ldp	x27, x28, [sp, #80]
    9700:	str	w0, [x23, #8]
    9704:	ldp	x23, x24, [sp, #48]
    9708:	b	8760 <inflate@@Base+0x638>
    970c:	mov	w27, w9
    9710:	b	8680 <inflate@@Base+0x558>
    9714:	add	w3, w3, w0
    9718:	mov	w11, #0xffffffff            	// #-1
    971c:	lsl	w11, w11, w3
    9720:	bic	w3, w22, w11
    9724:	mvn	w11, w11
    9728:	b	9748 <inflate@@Base+0x1620>
    972c:	cbz	w20, 867c <inflate@@Base+0x554>
    9730:	ldrb	w3, [x21], #1
    9734:	sub	w20, w20, #0x1
    9738:	lsl	x3, x3, x19
    973c:	add	x22, x22, x3
    9740:	and	w3, w11, w22
    9744:	add	w19, w19, #0x8
    9748:	lsr	w3, w3, w0
    974c:	add	w3, w3, w1
    9750:	lsl	x3, x3, #2
    9754:	add	x4, x2, x3
    9758:	ldrb	w3, [x2, x3]
    975c:	ldrb	w5, [x4, #1]
    9760:	ldrh	w12, [x4, #2]
    9764:	add	w4, w5, w0
    9768:	cmp	w4, w19
    976c:	b.hi	972c <inflate@@Base+0x1604>  // b.pmore
    9770:	str	w12, [x23, #92]
    9774:	sub	w19, w19, w0
    9778:	str	w4, [x23, #7148]
    977c:	lsr	x22, x22, x0
    9780:	sub	w19, w19, w5
    9784:	lsr	x22, x22, x5
    9788:	cbnz	w3, 8b7c <inflate@@Base+0xa54>
    978c:	b	88a4 <inflate@@Base+0x77c>
    9790:	ldr	x0, [x23, #32]
    9794:	add	x1, sp, #0xa8
    9798:	mov	w2, #0x2                   	// #2
    979c:	str	x7, [sp, #112]
    97a0:	str	w8, [sp, #120]
    97a4:	mov	w19, #0x0                   	// #0
    97a8:	str	w9, [sp, #128]
    97ac:	strh	w22, [sp, #168]
    97b0:	bl	2430 <crc32@plt>
    97b4:	ldr	w1, [x23, #24]
    97b8:	mov	x22, #0x0                   	// #0
    97bc:	ldr	w8, [sp, #120]
    97c0:	ldr	w9, [sp, #128]
    97c4:	str	x0, [x23, #32]
    97c8:	and	w0, w1, #0x400
    97cc:	ldr	x7, [sp, #112]
    97d0:	b	834c <inflate@@Base+0x224>
    97d4:	mov	w0, #0x3f46                	// #16198
    97d8:	mov	w5, #0x0                   	// #0
    97dc:	str	w0, [x23, #8]
    97e0:	str	wzr, [x23, #140]
    97e4:	b	8f10 <inflate@@Base+0xde8>
    97e8:	bl	2560 <adler32@plt>
    97ec:	mov	x2, x0
    97f0:	ldr	w8, [sp, #112]
    97f4:	ldr	x7, [sp, #104]
    97f8:	b	91c4 <inflate@@Base+0x109c>
    97fc:	ldp	x27, x28, [sp, #80]
    9800:	str	x21, [x24]
    9804:	str	w20, [x24, #8]
    9808:	mov	w25, #0x2                   	// #2
    980c:	str	x7, [x24, #24]
    9810:	str	w8, [x24, #32]
    9814:	str	x22, [x23, #80]
    9818:	str	w19, [x23, #88]
    981c:	ldp	x19, x20, [sp, #16]
    9820:	ldp	x21, x22, [sp, #32]
    9824:	ldp	x23, x24, [sp, #48]
    9828:	b	8760 <inflate@@Base+0x638>
    982c:	add	x0, x23, #0x558
    9830:	mov	w3, #0x9                   	// #9
    9834:	str	x0, [x23, #104]
    9838:	add	x1, x23, #0x98
    983c:	str	w3, [x23, #120]
    9840:	add	x5, x23, #0x318
    9844:	str	x0, [x23, #144]
    9848:	add	x3, x23, #0x90
    984c:	add	x4, x23, #0x78
    9850:	mov	w0, #0x1                   	// #1
    9854:	stp	x5, x3, [sp, #112]
    9858:	stp	x1, x7, [sp, #128]
    985c:	str	w8, [sp, #144]
    9860:	str	w9, [sp, #156]
    9864:	bl	a348 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    9868:	ldr	w8, [sp, #144]
    986c:	mov	w11, #0x3f51                	// #16209
    9870:	ldr	w9, [sp, #156]
    9874:	ldp	x5, x3, [sp, #112]
    9878:	ldp	x1, x7, [sp, #128]
    987c:	cbz	w0, 9944 <inflate@@Base+0x181c>
    9880:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    9884:	add	x0, x0, #0xa70
    9888:	str	x0, [x24, #48]
    988c:	str	w11, [x23, #8]
    9890:	b	89ac <inflate@@Base+0x884>
    9894:	cmp	w0, #0xf
    9898:	b.hi	8cd4 <inflate@@Base+0xbac>  // b.pmore
    989c:	cmp	w1, w0
    98a0:	b.cc	8cd4 <inflate@@Base+0xbac>  // b.lo, b.ul, b.last
    98a4:	mov	w1, #0x1                   	// #1
    98a8:	mov	w2, #0x0                   	// #0
    98ac:	lsl	w0, w1, w0
    98b0:	str	w0, [x23, #28]
    98b4:	mov	x1, #0x0                   	// #0
    98b8:	mov	x0, #0x0                   	// #0
    98bc:	str	x7, [sp, #112]
    98c0:	str	w8, [sp, #120]
    98c4:	str	w9, [sp, #128]
    98c8:	bl	2560 <adler32@plt>
    98cc:	str	x0, [x23, #32]
    98d0:	ands	x22, x22, #0x200
    98d4:	str	x0, [x24, #96]
    98d8:	ldr	w8, [sp, #120]
    98dc:	ldr	w9, [sp, #128]
    98e0:	ldr	x7, [sp, #112]
    98e4:	b.ne	8490 <inflate@@Base+0x368>  // b.any
    98e8:	mov	w0, #0x3f3f                	// #16191
    98ec:	mov	w19, #0x0                   	// #0
    98f0:	str	w0, [x23, #8]
    98f4:	b	8540 <inflate@@Base+0x418>
    98f8:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    98fc:	add	x0, x0, #0xa28
    9900:	str	x0, [x24, #48]
    9904:	mov	w0, #0x3f51                	// #16209
    9908:	str	w0, [x23, #8]
    990c:	b	89ac <inflate@@Base+0x884>
    9910:	ldr	x0, [x23, #32]
    9914:	add	x1, sp, #0xa8
    9918:	mov	w2, #0x2                   	// #2
    991c:	str	x7, [sp, #112]
    9920:	str	w8, [sp, #120]
    9924:	str	w9, [sp, #128]
    9928:	strh	w22, [sp, #168]
    992c:	bl	2430 <crc32@plt>
    9930:	ldr	w8, [sp, #120]
    9934:	ldr	w9, [sp, #128]
    9938:	str	x0, [x23, #32]
    993c:	ldr	x7, [sp, #112]
    9940:	b	8280 <inflate@@Base+0x158>
    9944:	mov	x4, x23
    9948:	str	x7, [sp, #112]
    994c:	ldp	w12, w2, [x23, #132]
    9950:	str	w8, [sp, #120]
    9954:	ldr	x0, [x23, #144]
    9958:	str	x0, [x23, #112]
    995c:	mov	w0, #0x6                   	// #6
    9960:	str	w0, [x4, #124]!
    9964:	add	x1, x1, x12, lsl #1
    9968:	mov	w0, #0x2                   	// #2
    996c:	str	w9, [sp, #128]
    9970:	bl	a348 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    9974:	ldr	w8, [sp, #120]
    9978:	ldr	w9, [sp, #128]
    997c:	ldr	x7, [sp, #112]
    9980:	cbz	w0, 8930 <inflate@@Base+0x808>
    9984:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x1788>
    9988:	add	x0, x0, #0xa90
    998c:	str	x0, [x24, #48]
    9990:	mov	w11, #0x3f51                	// #16209
    9994:	str	w11, [x23, #8]
    9998:	b	89ac <inflate@@Base+0x884>
    999c:	sub	w27, w9, w8
    99a0:	mov	w19, #0x0                   	// #0
    99a4:	mov	x22, #0x0                   	// #0
    99a8:	b	8680 <inflate@@Base+0x558>
    99ac:	nop

00000000000099b0 <inflateEnd@@Base>:
    99b0:	stp	x29, x30, [sp, #-32]!
    99b4:	mov	x29, sp
    99b8:	stp	x19, x20, [sp, #16]
    99bc:	cbz	x0, 9a18 <inflateEnd@@Base+0x68>
    99c0:	ldr	x1, [x0, #64]
    99c4:	mov	x19, x0
    99c8:	cbz	x1, 9a18 <inflateEnd@@Base+0x68>
    99cc:	ldr	x4, [x0, #72]
    99d0:	cbz	x4, 9a18 <inflateEnd@@Base+0x68>
    99d4:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    99d8:	mov	w20, w0
    99dc:	cbnz	w0, 9a18 <inflateEnd@@Base+0x68>
    99e0:	ldr	x1, [x19, #56]
    99e4:	ldr	x0, [x19, #80]
    99e8:	ldr	x2, [x1, #72]
    99ec:	cbz	x2, 9a00 <inflateEnd@@Base+0x50>
    99f0:	mov	x1, x2
    99f4:	blr	x4
    99f8:	ldp	x4, x0, [x19, #72]
    99fc:	ldr	x1, [x19, #56]
    9a00:	blr	x4
    9a04:	str	xzr, [x19, #56]
    9a08:	mov	w0, w20
    9a0c:	ldp	x19, x20, [sp, #16]
    9a10:	ldp	x29, x30, [sp], #32
    9a14:	ret
    9a18:	mov	w20, #0xfffffffe            	// #-2
    9a1c:	mov	w0, w20
    9a20:	ldp	x19, x20, [sp, #16]
    9a24:	ldp	x29, x30, [sp], #32
    9a28:	ret
    9a2c:	nop

0000000000009a30 <inflateGetDictionary@@ZLIB_1.2.7.1>:
    9a30:	stp	x29, x30, [sp, #-48]!
    9a34:	mov	x29, sp
    9a38:	stp	x21, x22, [sp, #32]
    9a3c:	cbz	x0, 9b00 <inflateGetDictionary@@ZLIB_1.2.7.1+0xd0>
    9a40:	stp	x19, x20, [sp, #16]
    9a44:	mov	x20, x1
    9a48:	mov	x4, x0
    9a4c:	ldr	x1, [x0, #64]
    9a50:	cbz	x1, 9aa0 <inflateGetDictionary@@ZLIB_1.2.7.1+0x70>
    9a54:	ldr	x1, [x0, #72]
    9a58:	cbz	x1, 9aa0 <inflateGetDictionary@@ZLIB_1.2.7.1+0x70>
    9a5c:	mov	x19, x2
    9a60:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    9a64:	mov	w21, w0
    9a68:	cbnz	w0, 9aa0 <inflateGetDictionary@@ZLIB_1.2.7.1+0x70>
    9a6c:	ldr	x22, [x4, #56]
    9a70:	ldr	w2, [x22, #64]
    9a74:	cmp	w2, #0x0
    9a78:	ccmp	x20, #0x0, #0x4, ne  // ne = any
    9a7c:	b.ne	9acc <inflateGetDictionary@@ZLIB_1.2.7.1+0x9c>  // b.any
    9a80:	cbz	x19, 9ab8 <inflateGetDictionary@@ZLIB_1.2.7.1+0x88>
    9a84:	ldr	w0, [x22, #64]
    9a88:	str	w0, [x19]
    9a8c:	mov	w0, w21
    9a90:	ldp	x19, x20, [sp, #16]
    9a94:	ldp	x21, x22, [sp, #32]
    9a98:	ldp	x29, x30, [sp], #48
    9a9c:	ret
    9aa0:	mov	w21, #0xfffffffe            	// #-2
    9aa4:	mov	w0, w21
    9aa8:	ldp	x19, x20, [sp, #16]
    9aac:	ldp	x21, x22, [sp, #32]
    9ab0:	ldp	x29, x30, [sp], #48
    9ab4:	ret
    9ab8:	mov	w0, w21
    9abc:	ldp	x19, x20, [sp, #16]
    9ac0:	ldp	x21, x22, [sp, #32]
    9ac4:	ldp	x29, x30, [sp], #48
    9ac8:	ret
    9acc:	ldr	x3, [x22, #72]
    9ad0:	mov	x0, x20
    9ad4:	ldr	w1, [x22, #68]
    9ad8:	sub	w2, w2, w1
    9adc:	add	x1, x3, w1, uxtw
    9ae0:	bl	23a0 <memcpy@plt>
    9ae4:	ldp	w0, w2, [x22, #64]
    9ae8:	ldr	x1, [x22, #72]
    9aec:	sub	x0, x0, x2
    9af0:	add	x0, x20, x0
    9af4:	bl	23a0 <memcpy@plt>
    9af8:	cbnz	x19, 9a84 <inflateGetDictionary@@ZLIB_1.2.7.1+0x54>
    9afc:	b	9ab8 <inflateGetDictionary@@ZLIB_1.2.7.1+0x88>
    9b00:	mov	w21, #0xfffffffe            	// #-2
    9b04:	mov	w0, w21
    9b08:	ldp	x21, x22, [sp, #32]
    9b0c:	ldp	x29, x30, [sp], #48
    9b10:	ret
    9b14:	nop

0000000000009b18 <inflateSetDictionary@@Base>:
    9b18:	cbz	x0, 9be8 <inflateSetDictionary@@Base+0xd0>
    9b1c:	stp	x29, x30, [sp, #-48]!
    9b20:	mov	x29, sp
    9b24:	stp	x21, x22, [sp, #32]
    9b28:	mov	x21, x1
    9b2c:	ldr	x1, [x0, #64]
    9b30:	stp	x19, x20, [sp, #16]
    9b34:	mov	x19, x0
    9b38:	cbz	x1, 9bd4 <inflateSetDictionary@@Base+0xbc>
    9b3c:	ldr	x1, [x0, #72]
    9b40:	cbz	x1, 9bd4 <inflateSetDictionary@@Base+0xbc>
    9b44:	mov	w20, w2
    9b48:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    9b4c:	cbnz	w0, 9bd4 <inflateSetDictionary@@Base+0xbc>
    9b50:	ldr	x22, [x19, #56]
    9b54:	ldr	w1, [x22, #16]
    9b58:	ldr	w0, [x22, #8]
    9b5c:	cbnz	w1, 9b98 <inflateSetDictionary@@Base+0x80>
    9b60:	mov	w1, #0x3f3e                	// #16190
    9b64:	cmp	w0, w1
    9b68:	b.eq	9ba4 <inflateSetDictionary@@Base+0x8c>  // b.none
    9b6c:	add	x1, x21, w20, uxtw
    9b70:	mov	w2, w20
    9b74:	mov	x0, x19
    9b78:	bl	7c38 <inflateBackEnd@@ZLIB_1.2.0+0x540>
    9b7c:	cbnz	w0, 9bf0 <inflateSetDictionary@@Base+0xd8>
    9b80:	mov	w1, #0x1                   	// #1
    9b84:	str	w1, [x22, #20]
    9b88:	ldp	x19, x20, [sp, #16]
    9b8c:	ldp	x21, x22, [sp, #32]
    9b90:	ldp	x29, x30, [sp], #48
    9b94:	ret
    9b98:	mov	w1, #0x3f3e                	// #16190
    9b9c:	cmp	w0, w1
    9ba0:	b.ne	9bd4 <inflateSetDictionary@@Base+0xbc>  // b.any
    9ba4:	mov	w2, #0x0                   	// #0
    9ba8:	mov	x1, #0x0                   	// #0
    9bac:	mov	x0, #0x0                   	// #0
    9bb0:	bl	2560 <adler32@plt>
    9bb4:	mov	x1, x21
    9bb8:	mov	w2, w20
    9bbc:	bl	2560 <adler32@plt>
    9bc0:	ldr	x1, [x22, #32]
    9bc4:	cmp	x1, x0
    9bc8:	b.eq	9b6c <inflateSetDictionary@@Base+0x54>  // b.none
    9bcc:	mov	w0, #0xfffffffd            	// #-3
    9bd0:	b	9b88 <inflateSetDictionary@@Base+0x70>
    9bd4:	mov	w0, #0xfffffffe            	// #-2
    9bd8:	ldp	x19, x20, [sp, #16]
    9bdc:	ldp	x21, x22, [sp, #32]
    9be0:	ldp	x29, x30, [sp], #48
    9be4:	ret
    9be8:	mov	w0, #0xfffffffe            	// #-2
    9bec:	ret
    9bf0:	mov	w1, #0x3f52                	// #16210
    9bf4:	mov	w0, #0xfffffffc            	// #-4
    9bf8:	str	w1, [x22, #8]
    9bfc:	b	9b88 <inflateSetDictionary@@Base+0x70>

0000000000009c00 <inflateGetHeader@@ZLIB_1.2.2>:
    9c00:	cbz	x0, 9c48 <inflateGetHeader@@ZLIB_1.2.2+0x48>
    9c04:	mov	x5, x1
    9c08:	mov	x4, x0
    9c0c:	ldr	x1, [x0, #64]
    9c10:	cbz	x1, 9c48 <inflateGetHeader@@ZLIB_1.2.2+0x48>
    9c14:	ldr	x1, [x0, #72]
    9c18:	cbz	x1, 9c48 <inflateGetHeader@@ZLIB_1.2.2+0x48>
    9c1c:	stp	x29, x30, [sp, #-16]!
    9c20:	mov	x29, sp
    9c24:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    9c28:	cbnz	w0, 9c50 <inflateGetHeader@@ZLIB_1.2.2+0x50>
    9c2c:	ldr	x1, [x4, #56]
    9c30:	ldr	w2, [x1, #16]
    9c34:	tbz	w2, #1, 9c50 <inflateGetHeader@@ZLIB_1.2.2+0x50>
    9c38:	str	x5, [x1, #48]
    9c3c:	str	wzr, [x5, #72]
    9c40:	ldp	x29, x30, [sp], #16
    9c44:	ret
    9c48:	mov	w0, #0xfffffffe            	// #-2
    9c4c:	ret
    9c50:	mov	w0, #0xfffffffe            	// #-2
    9c54:	b	9c40 <inflateGetHeader@@ZLIB_1.2.2+0x40>

0000000000009c58 <inflateSync@@Base>:
    9c58:	stp	x29, x30, [sp, #-80]!
    9c5c:	mov	x29, sp
    9c60:	stp	x21, x22, [sp, #32]
    9c64:	cbz	x0, 9ed4 <inflateSync@@Base+0x27c>
    9c68:	ldr	x1, [x0, #64]
    9c6c:	stp	x19, x20, [sp, #16]
    9c70:	mov	x19, x0
    9c74:	cbz	x1, 9eac <inflateSync@@Base+0x254>
    9c78:	ldr	x1, [x0, #72]
    9c7c:	cbz	x1, 9eac <inflateSync@@Base+0x254>
    9c80:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    9c84:	mov	w21, w0
    9c88:	cbnz	w0, 9eac <inflateSync@@Base+0x254>
    9c8c:	ldr	w6, [x19, #8]
    9c90:	ldr	x20, [x19, #56]
    9c94:	cbnz	w6, 9e54 <inflateSync@@Base+0x1fc>
    9c98:	ldr	w1, [x20, #88]
    9c9c:	cmp	w1, #0x7
    9ca0:	b.ls	9f04 <inflateSync@@Base+0x2ac>  // b.plast
    9ca4:	ldr	w2, [x20, #8]
    9ca8:	mov	w0, #0x3f53                	// #16211
    9cac:	ldr	x7, [x19]
    9cb0:	cmp	w2, w0
    9cb4:	b.eq	9ee8 <inflateSync@@Base+0x290>  // b.none
    9cb8:	ldr	x2, [x20, #80]
    9cbc:	and	w3, w1, #0x7
    9cc0:	and	w1, w1, #0xfffffff8
    9cc4:	str	w0, [x20, #8]
    9cc8:	lsl	x2, x2, x3
    9ccc:	sub	w1, w1, #0x8
    9cd0:	add	x3, sp, #0x48
    9cd4:	mov	w0, w1
    9cd8:	mov	x4, x3
    9cdc:	nop
    9ce0:	strb	w2, [x4], #1
    9ce4:	sub	w0, w0, #0x8
    9ce8:	cmn	w0, #0x8
    9cec:	lsr	x2, x2, #8
    9cf0:	b.ne	9ce0 <inflateSync@@Base+0x88>  // b.any
    9cf4:	lsr	w6, w1, #3
    9cf8:	mov	w4, #0x0                   	// #0
    9cfc:	add	w6, w6, #0x1
    9d00:	mov	w1, #0x0                   	// #0
    9d04:	mov	w0, #0xff                  	// #255
    9d08:	mov	w8, #0x4                   	// #4
    9d0c:	str	x2, [x20, #80]
    9d10:	str	wzr, [x20, #88]
    9d14:	b	9d40 <inflateSync@@Base+0xe8>
    9d18:	sub	w1, w8, w1
    9d1c:	mov	w2, #0x1                   	// #1
    9d20:	cmp	w1, #0x3
    9d24:	cbnz	w5, 9e9c <inflateSync@@Base+0x244>
    9d28:	cset	w2, ls  // ls = plast
    9d2c:	add	w4, w4, #0x1
    9d30:	cmp	w2, #0x0
    9d34:	ccmp	w4, w6, #0x2, ne  // ne = any
    9d38:	add	x3, x3, #0x1
    9d3c:	b.cs	9d74 <inflateSync@@Base+0x11c>  // b.hs, b.nlast
    9d40:	cmp	w1, #0x2
    9d44:	ldrb	w5, [x3]
    9d48:	csel	w2, wzr, w0, cc  // cc = lo, ul, last
    9d4c:	cmp	w5, w2
    9d50:	b.ne	9d18 <inflateSync@@Base+0xc0>  // b.any
    9d54:	add	w1, w1, #0x1
    9d58:	add	w4, w4, #0x1
    9d5c:	cmp	w1, #0x3
    9d60:	add	x3, x3, #0x1
    9d64:	cset	w2, ls  // ls = plast
    9d68:	cmp	w2, #0x0
    9d6c:	ccmp	w4, w6, #0x2, ne  // ne = any
    9d70:	b.cc	9d40 <inflateSync@@Base+0xe8>  // b.lo, b.ul, b.last
    9d74:	str	w1, [x20, #140]
    9d78:	ldr	w6, [x19, #8]
    9d7c:	cmp	w6, #0x0
    9d80:	csel	w4, w2, wzr, ne  // ne = any
    9d84:	cbz	w4, 9f10 <inflateSync@@Base+0x2b8>
    9d88:	mov	w2, #0x0                   	// #0
    9d8c:	mov	w8, #0xff                  	// #255
    9d90:	mov	w0, #0x4                   	// #4
    9d94:	b	9dbc <inflateSync@@Base+0x164>
    9d98:	sub	w1, w0, w1
    9d9c:	mov	w5, w4
    9da0:	cmp	w1, #0x3
    9da4:	cbnz	w3, 9ea4 <inflateSync@@Base+0x24c>
    9da8:	cset	w5, ls  // ls = plast
    9dac:	add	w2, w2, #0x1
    9db0:	cmp	w5, #0x0
    9db4:	ccmp	w2, w6, #0x2, ne  // ne = any
    9db8:	b.cs	9dec <inflateSync@@Base+0x194>  // b.hs, b.nlast
    9dbc:	cmp	w1, #0x2
    9dc0:	ldrb	w3, [x7, w2, uxtw]
    9dc4:	csel	w5, wzr, w8, cc  // cc = lo, ul, last
    9dc8:	cmp	w3, w5
    9dcc:	b.ne	9d98 <inflateSync@@Base+0x140>  // b.any
    9dd0:	add	w1, w1, #0x1
    9dd4:	add	w2, w2, #0x1
    9dd8:	cmp	w1, #0x3
    9ddc:	cset	w5, ls  // ls = plast
    9de0:	cmp	w5, #0x0
    9de4:	ccmp	w2, w6, #0x2, ne  // ne = any
    9de8:	b.cc	9dbc <inflateSync@@Base+0x164>  // b.lo, b.ul, b.last
    9dec:	mov	w22, w2
    9df0:	add	x7, x7, x22
    9df4:	str	w1, [x20, #140]
    9df8:	cmp	w1, #0x4
    9dfc:	ldr	x1, [x19, #16]
    9e00:	str	x7, [x19]
    9e04:	ldr	w0, [x19, #8]
    9e08:	add	x22, x22, x1
    9e0c:	str	x22, [x19, #16]
    9e10:	sub	w2, w0, w2
    9e14:	str	w2, [x19, #8]
    9e18:	b.ne	9ef8 <inflateSync@@Base+0x2a0>  // b.any
    9e1c:	str	x23, [sp, #48]
    9e20:	mov	x0, x19
    9e24:	ldr	x23, [x19, #40]
    9e28:	bl	2610 <inflateReset@plt>
    9e2c:	str	x22, [x19, #16]
    9e30:	mov	w0, #0x3f3f                	// #16191
    9e34:	str	x23, [x19, #40]
    9e38:	ldr	x23, [sp, #48]
    9e3c:	str	w0, [x20, #8]
    9e40:	ldp	x19, x20, [sp, #16]
    9e44:	mov	w0, w21
    9e48:	ldp	x21, x22, [sp, #32]
    9e4c:	ldp	x29, x30, [sp], #80
    9e50:	ret
    9e54:	ldr	w1, [x20, #8]
    9e58:	mov	w0, #0x3f53                	// #16211
    9e5c:	ldr	x7, [x19]
    9e60:	cmp	w1, w0
    9e64:	b.eq	9ec4 <inflateSync@@Base+0x26c>  // b.none
    9e68:	ldr	w1, [x20, #88]
    9e6c:	ldr	x2, [x20, #80]
    9e70:	str	w0, [x20, #8]
    9e74:	and	w0, w1, #0x7
    9e78:	and	w1, w1, #0xfffffff8
    9e7c:	str	w1, [x20, #88]
    9e80:	cmp	w1, #0x7
    9e84:	lsl	x2, x2, x0
    9e88:	str	x2, [x20, #80]
    9e8c:	b.hi	9ccc <inflateSync@@Base+0x74>  // b.pmore
    9e90:	mov	w2, #0x1                   	// #1
    9e94:	mov	w1, #0x0                   	// #0
    9e98:	b	9d74 <inflateSync@@Base+0x11c>
    9e9c:	mov	w1, #0x0                   	// #0
    9ea0:	b	9d2c <inflateSync@@Base+0xd4>
    9ea4:	mov	w1, #0x0                   	// #0
    9ea8:	b	9dac <inflateSync@@Base+0x154>
    9eac:	mov	w21, #0xfffffffe            	// #-2
    9eb0:	mov	w0, w21
    9eb4:	ldp	x19, x20, [sp, #16]
    9eb8:	ldp	x21, x22, [sp, #32]
    9ebc:	ldp	x29, x30, [sp], #80
    9ec0:	ret
    9ec4:	ldr	w1, [x20, #140]
    9ec8:	cmp	w1, #0x3
    9ecc:	cset	w2, ls  // ls = plast
    9ed0:	b	9d7c <inflateSync@@Base+0x124>
    9ed4:	mov	w21, #0xfffffffe            	// #-2
    9ed8:	mov	w0, w21
    9edc:	ldp	x21, x22, [sp, #32]
    9ee0:	ldp	x29, x30, [sp], #80
    9ee4:	ret
    9ee8:	ldr	w1, [x20, #140]
    9eec:	mov	w2, #0x0                   	// #0
    9ef0:	mov	x22, #0x0                   	// #0
    9ef4:	b	9df4 <inflateSync@@Base+0x19c>
    9ef8:	mov	w21, #0xfffffffd            	// #-3
    9efc:	ldp	x19, x20, [sp, #16]
    9f00:	b	9e44 <inflateSync@@Base+0x1ec>
    9f04:	mov	w21, #0xfffffffb            	// #-5
    9f08:	ldp	x19, x20, [sp, #16]
    9f0c:	b	9e44 <inflateSync@@Base+0x1ec>
    9f10:	mov	x22, #0x0                   	// #0
    9f14:	mov	w2, #0x0                   	// #0
    9f18:	b	9df4 <inflateSync@@Base+0x19c>
    9f1c:	nop

0000000000009f20 <inflateSyncPoint@@Base>:
    9f20:	cbz	x0, 9f64 <inflateSyncPoint@@Base+0x44>
    9f24:	ldr	x1, [x0, #64]
    9f28:	mov	x4, x0
    9f2c:	cbz	x1, 9f64 <inflateSyncPoint@@Base+0x44>
    9f30:	ldr	x1, [x0, #72]
    9f34:	cbz	x1, 9f64 <inflateSyncPoint@@Base+0x44>
    9f38:	stp	x29, x30, [sp, #-16]!
    9f3c:	mov	x29, sp
    9f40:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    9f44:	cbnz	w0, 9f80 <inflateSyncPoint@@Base+0x60>
    9f48:	ldr	x1, [x4, #56]
    9f4c:	mov	w2, #0x3f41                	// #16193
    9f50:	ldr	w3, [x1, #8]
    9f54:	cmp	w3, w2
    9f58:	b.eq	9f6c <inflateSyncPoint@@Base+0x4c>  // b.none
    9f5c:	ldp	x29, x30, [sp], #16
    9f60:	ret
    9f64:	mov	w0, #0xfffffffe            	// #-2
    9f68:	ret
    9f6c:	ldr	w0, [x1, #88]
    9f70:	ldp	x29, x30, [sp], #16
    9f74:	cmp	w0, #0x0
    9f78:	cset	w0, eq  // eq = none
    9f7c:	ret
    9f80:	mov	w0, #0xfffffffe            	// #-2
    9f84:	b	9f5c <inflateSyncPoint@@Base+0x3c>

0000000000009f88 <inflateCopy@@ZLIB_1.2.0>:
    9f88:	cbz	x1, a16c <inflateCopy@@ZLIB_1.2.0+0x1e4>
    9f8c:	stp	x29, x30, [sp, #-64]!
    9f90:	mov	x29, sp
    9f94:	ldr	x4, [x1, #64]
    9f98:	stp	x19, x20, [sp, #16]
    9f9c:	mov	x19, x1
    9fa0:	cbz	x4, a0b8 <inflateCopy@@ZLIB_1.2.0+0x130>
    9fa4:	mov	x20, x0
    9fa8:	ldr	x0, [x1, #72]
    9fac:	cbz	x0, a0b8 <inflateCopy@@ZLIB_1.2.0+0x130>
    9fb0:	mov	x0, x1
    9fb4:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    9fb8:	cmp	x20, #0x0
    9fbc:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    9fc0:	b.ne	a0b8 <inflateCopy@@ZLIB_1.2.0+0x130>  // b.any
    9fc4:	ldr	x0, [x19, #80]
    9fc8:	stp	x21, x22, [sp, #32]
    9fcc:	mov	w2, #0x1bf8                	// #7160
    9fd0:	str	x23, [sp, #48]
    9fd4:	mov	w1, #0x1                   	// #1
    9fd8:	ldr	x23, [x19, #56]
    9fdc:	blr	x4
    9fe0:	mov	x21, x0
    9fe4:	cbz	x0, a188 <inflateCopy@@ZLIB_1.2.0+0x200>
    9fe8:	ldr	x22, [x23, #72]
    9fec:	cbz	x22, a0c8 <inflateCopy@@ZLIB_1.2.0+0x140>
    9ff0:	ldr	x3, [x19, #64]
    9ff4:	mov	w2, #0x1                   	// #1
    9ff8:	ldr	x0, [x19, #80]
    9ffc:	ldr	w1, [x23, #56]
    a000:	lsl	w1, w2, w1
    a004:	blr	x3
    a008:	mov	x22, x0
    a00c:	cbz	x0, a198 <inflateCopy@@ZLIB_1.2.0+0x210>
    a010:	ldp	x0, x1, [x19]
    a014:	stp	x0, x1, [x20]
    a018:	mov	x2, #0x1bf8                	// #7160
    a01c:	ldp	x0, x1, [x19, #16]
    a020:	stp	x0, x1, [x20, #16]
    a024:	ldp	x4, x5, [x19, #32]
    a028:	stp	x4, x5, [x20, #32]
    a02c:	mov	x1, x23
    a030:	ldp	x4, x5, [x19, #48]
    a034:	stp	x4, x5, [x20, #48]
    a038:	mov	x0, x21
    a03c:	ldp	x4, x5, [x19, #64]
    a040:	stp	x4, x5, [x20, #64]
    a044:	ldp	x4, x5, [x19, #80]
    a048:	stp	x4, x5, [x20, #80]
    a04c:	ldp	x4, x5, [x19, #96]
    a050:	stp	x4, x5, [x20, #96]
    a054:	bl	23a0 <memcpy@plt>
    a058:	ldr	x2, [x23, #104]
    a05c:	str	x20, [x21]
    a060:	add	x0, x23, #0x558
    a064:	add	x1, x21, #0x558
    a068:	cmp	x2, x0
    a06c:	b.cs	a128 <inflateCopy@@ZLIB_1.2.0+0x1a0>  // b.hs, b.nlast
    a070:	ldr	x2, [x23, #144]
    a074:	sub	x0, x2, x0
    a078:	add	x1, x1, x0
    a07c:	str	x1, [x21, #144]
    a080:	ldr	x1, [x23, #72]
    a084:	mov	w3, #0x1                   	// #1
    a088:	ldr	w2, [x23, #56]
    a08c:	mov	x0, x22
    a090:	lsl	w2, w3, w2
    a094:	bl	23a0 <memcpy@plt>
    a098:	ldr	x23, [sp, #48]
    a09c:	str	x22, [x21, #72]
    a0a0:	str	x21, [x20, #56]
    a0a4:	mov	w0, #0x0                   	// #0
    a0a8:	ldp	x21, x22, [sp, #32]
    a0ac:	ldp	x19, x20, [sp, #16]
    a0b0:	ldp	x29, x30, [sp], #64
    a0b4:	ret
    a0b8:	mov	w0, #0xfffffffe            	// #-2
    a0bc:	ldp	x19, x20, [sp, #16]
    a0c0:	ldp	x29, x30, [sp], #64
    a0c4:	ret
    a0c8:	ldp	x2, x3, [x19]
    a0cc:	stp	x2, x3, [x20]
    a0d0:	mov	x1, x23
    a0d4:	ldp	x4, x5, [x19, #16]
    a0d8:	stp	x4, x5, [x20, #16]
    a0dc:	mov	x2, #0x1bf8                	// #7160
    a0e0:	ldp	x4, x5, [x19, #32]
    a0e4:	stp	x4, x5, [x20, #32]
    a0e8:	ldp	x4, x5, [x19, #48]
    a0ec:	stp	x4, x5, [x20, #48]
    a0f0:	ldp	x4, x5, [x19, #64]
    a0f4:	stp	x4, x5, [x20, #64]
    a0f8:	ldp	x4, x5, [x19, #80]
    a0fc:	stp	x4, x5, [x20, #80]
    a100:	ldp	x4, x5, [x19, #96]
    a104:	stp	x4, x5, [x20, #96]
    a108:	bl	23a0 <memcpy@plt>
    a10c:	ldr	x2, [x23, #104]
    a110:	str	x20, [x21]
    a114:	add	x0, x23, #0x558
    a118:	add	x1, x21, #0x558
    a11c:	cmp	x2, x0
    a120:	b.cc	a174 <inflateCopy@@ZLIB_1.2.0+0x1ec>  // b.lo, b.ul, b.last
    a124:	nop
    a128:	mov	x3, #0x1be4                	// #7140
    a12c:	add	x3, x23, x3
    a130:	cmp	x2, x3
    a134:	b.hi	a154 <inflateCopy@@ZLIB_1.2.0+0x1cc>  // b.pmore
    a138:	ldr	x3, [x23, #112]
    a13c:	sub	x2, x2, x0
    a140:	add	x2, x1, x2
    a144:	str	x2, [x21, #104]
    a148:	sub	x2, x3, x0
    a14c:	add	x2, x1, x2
    a150:	str	x2, [x21, #112]
    a154:	ldr	x2, [x23, #144]
    a158:	sub	x0, x2, x0
    a15c:	add	x1, x1, x0
    a160:	str	x1, [x21, #144]
    a164:	cbz	x22, a098 <inflateCopy@@ZLIB_1.2.0+0x110>
    a168:	b	a080 <inflateCopy@@ZLIB_1.2.0+0xf8>
    a16c:	mov	w0, #0xfffffffe            	// #-2
    a170:	ret
    a174:	ldr	x2, [x23, #144]
    a178:	sub	x0, x2, x0
    a17c:	add	x1, x1, x0
    a180:	str	x1, [x21, #144]
    a184:	b	a098 <inflateCopy@@ZLIB_1.2.0+0x110>
    a188:	mov	w0, #0xfffffffc            	// #-4
    a18c:	ldp	x21, x22, [sp, #32]
    a190:	ldr	x23, [sp, #48]
    a194:	b	a0ac <inflateCopy@@ZLIB_1.2.0+0x124>
    a198:	ldp	x2, x0, [x19, #72]
    a19c:	mov	x1, x21
    a1a0:	blr	x2
    a1a4:	mov	w0, #0xfffffffc            	// #-4
    a1a8:	ldp	x21, x22, [sp, #32]
    a1ac:	ldr	x23, [sp, #48]
    a1b0:	b	a0ac <inflateCopy@@ZLIB_1.2.0+0x124>
    a1b4:	nop

000000000000a1b8 <inflateUndermine@@ZLIB_1.2.3.3>:
    a1b8:	cbz	x0, a200 <inflateUndermine@@ZLIB_1.2.3.3+0x48>
    a1bc:	ldr	x1, [x0, #64]
    a1c0:	mov	x4, x0
    a1c4:	cbz	x1, a200 <inflateUndermine@@ZLIB_1.2.3.3+0x48>
    a1c8:	ldr	x1, [x0, #72]
    a1cc:	cbz	x1, a200 <inflateUndermine@@ZLIB_1.2.3.3+0x48>
    a1d0:	stp	x29, x30, [sp, #-16]!
    a1d4:	mov	x29, sp
    a1d8:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    a1dc:	mov	w1, w0
    a1e0:	mov	w0, #0xfffffffe            	// #-2
    a1e4:	cbnz	w1, a1f8 <inflateUndermine@@ZLIB_1.2.3.3+0x40>
    a1e8:	ldr	x1, [x4, #56]
    a1ec:	mov	w2, #0x1                   	// #1
    a1f0:	mov	w0, #0xfffffffd            	// #-3
    a1f4:	str	w2, [x1, #7144]
    a1f8:	ldp	x29, x30, [sp], #16
    a1fc:	ret
    a200:	mov	w0, #0xfffffffe            	// #-2
    a204:	ret

000000000000a208 <inflateValidate@@ZLIB_1.2.9>:
    a208:	cbz	x0, a258 <inflateValidate@@ZLIB_1.2.9+0x50>
    a20c:	mov	w5, w1
    a210:	mov	x4, x0
    a214:	ldr	x1, [x0, #64]
    a218:	cbz	x1, a258 <inflateValidate@@ZLIB_1.2.9+0x50>
    a21c:	ldr	x1, [x0, #72]
    a220:	cbz	x1, a258 <inflateValidate@@ZLIB_1.2.9+0x50>
    a224:	stp	x29, x30, [sp, #-16]!
    a228:	mov	x29, sp
    a22c:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    a230:	cbnz	w0, a260 <inflateValidate@@ZLIB_1.2.9+0x58>
    a234:	ldr	x2, [x4, #56]
    a238:	cmp	w5, #0x0
    a23c:	ldr	w1, [x2, #16]
    a240:	and	w3, w1, #0xfffffffb
    a244:	orr	w1, w1, #0x4
    a248:	csel	w1, w1, w3, ne  // ne = any
    a24c:	str	w1, [x2, #16]
    a250:	ldp	x29, x30, [sp], #16
    a254:	ret
    a258:	mov	w0, #0xfffffffe            	// #-2
    a25c:	ret
    a260:	mov	w0, #0xfffffffe            	// #-2
    a264:	b	a250 <inflateValidate@@ZLIB_1.2.9+0x48>

000000000000a268 <inflateMark@@ZLIB_1.2.3.4>:
    a268:	cbz	x0, a2d0 <inflateMark@@ZLIB_1.2.3.4+0x68>
    a26c:	ldr	x1, [x0, #64]
    a270:	mov	x4, x0
    a274:	cbz	x1, a2d0 <inflateMark@@ZLIB_1.2.3.4+0x68>
    a278:	ldr	x1, [x0, #72]
    a27c:	cbz	x1, a2d0 <inflateMark@@ZLIB_1.2.3.4+0x68>
    a280:	stp	x29, x30, [sp, #-16]!
    a284:	mov	x29, sp
    a288:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    a28c:	cbnz	w0, a2e8 <inflateMark@@ZLIB_1.2.3.4+0x80>
    a290:	ldr	x1, [x4, #56]
    a294:	mov	w3, #0x3f43                	// #16195
    a298:	ldrsw	x0, [x1, #7148]
    a29c:	ldr	w2, [x1, #8]
    a2a0:	lsl	x0, x0, #16
    a2a4:	cmp	w2, w3
    a2a8:	b.eq	a2d8 <inflateMark@@ZLIB_1.2.3.4+0x70>  // b.none
    a2ac:	mov	w3, #0x3f4c                	// #16204
    a2b0:	cmp	w2, w3
    a2b4:	b.ne	a2c8 <inflateMark@@ZLIB_1.2.3.4+0x60>  // b.any
    a2b8:	ldr	w2, [x1, #92]
    a2bc:	ldr	w1, [x1, #7152]
    a2c0:	sub	w1, w1, w2
    a2c4:	add	x0, x0, x1
    a2c8:	ldp	x29, x30, [sp], #16
    a2cc:	ret
    a2d0:	mov	x0, #0xffffffffffff0000    	// #-65536
    a2d4:	ret
    a2d8:	ldr	w1, [x1, #92]
    a2dc:	ldp	x29, x30, [sp], #16
    a2e0:	add	x0, x0, x1
    a2e4:	ret
    a2e8:	mov	x0, #0xffffffffffff0000    	// #-65536
    a2ec:	b	a2c8 <inflateMark@@ZLIB_1.2.3.4+0x60>

000000000000a2f0 <inflateCodesUsed@@ZLIB_1.2.9>:
    a2f0:	cbz	x0, a33c <inflateCodesUsed@@ZLIB_1.2.9+0x4c>
    a2f4:	ldr	x1, [x0, #64]
    a2f8:	mov	x4, x0
    a2fc:	cbz	x1, a33c <inflateCodesUsed@@ZLIB_1.2.9+0x4c>
    a300:	ldr	x1, [x0, #72]
    a304:	cbz	x1, a33c <inflateCodesUsed@@ZLIB_1.2.9+0x4c>
    a308:	stp	x29, x30, [sp, #-16]!
    a30c:	mov	x29, sp
    a310:	bl	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x670>
    a314:	mov	w1, w0
    a318:	mov	x0, #0xffffffffffffffff    	// #-1
    a31c:	cbnz	w1, a334 <inflateCodesUsed@@ZLIB_1.2.9+0x44>
    a320:	ldr	x1, [x4, #56]
    a324:	add	x2, x1, #0x558
    a328:	ldr	x0, [x1, #144]
    a32c:	sub	x0, x0, x2
    a330:	asr	x0, x0, #2
    a334:	ldp	x29, x30, [sp], #16
    a338:	ret
    a33c:	mov	x0, #0xffffffffffffffff    	// #-1
    a340:	ret
    a344:	nop
    a348:	stp	x29, x30, [sp, #-176]!
    a34c:	mov	w10, w0
    a350:	add	x16, sp, #0x70
    a354:	mov	x29, sp
    a358:	mov	x6, x16
    a35c:	add	x9, x16, #0x20
    a360:	strh	wzr, [x6], #2
    a364:	cmp	x9, x6
    a368:	b.ne	a360 <inflateCodesUsed@@ZLIB_1.2.9+0x70>  // b.any
    a36c:	cbz	w2, a39c <inflateCodesUsed@@ZLIB_1.2.9+0xac>
    a370:	sub	w0, w2, #0x1
    a374:	add	x7, x1, #0x2
    a378:	mov	x8, x1
    a37c:	add	x0, x7, w0, uxtw #1
    a380:	ldrh	w6, [x8], #2
    a384:	cmp	x0, x8
    a388:	lsl	x6, x6, #1
    a38c:	ldrh	w7, [x16, x6]
    a390:	add	w7, w7, #0x1
    a394:	strh	w7, [x16, x6]
    a398:	b.ne	a380 <inflateCodesUsed@@ZLIB_1.2.9+0x90>  // b.any
    a39c:	add	x6, x16, #0x1e
    a3a0:	mov	w11, #0xf                   	// #15
    a3a4:	nop
    a3a8:	ldrh	w0, [x6]
    a3ac:	sub	x6, x6, #0x2
    a3b0:	cbnz	w0, a3e8 <inflateCodesUsed@@ZLIB_1.2.9+0xf8>
    a3b4:	subs	w11, w11, #0x1
    a3b8:	b.ne	a3a8 <inflateCodesUsed@@ZLIB_1.2.9+0xb8>  // b.any
    a3bc:	ldr	x2, [x3]
    a3c0:	mov	w5, #0x140                 	// #320
    a3c4:	mov	w6, #0x1                   	// #1
    a3c8:	mov	w0, #0x0                   	// #0
    a3cc:	mov	x1, x2
    a3d0:	str	w5, [x1], #8
    a3d4:	str	x1, [x3]
    a3d8:	str	w5, [x2, #4]
    a3dc:	str	w6, [x4]
    a3e0:	ldp	x29, x30, [sp], #176
    a3e4:	ret
    a3e8:	cmp	w11, #0x1
    a3ec:	add	x6, x16, #0x2
    a3f0:	mov	w13, #0x1                   	// #1
    a3f4:	b.ne	a408 <inflateCodesUsed@@ZLIB_1.2.9+0x118>  // b.any
    a3f8:	b	a790 <inflateCodesUsed@@ZLIB_1.2.9+0x4a0>
    a3fc:	add	w13, w13, #0x1
    a400:	cmp	w13, w11
    a404:	b.eq	a414 <inflateCodesUsed@@ZLIB_1.2.9+0x124>  // b.none
    a408:	ldrh	w0, [x6]
    a40c:	add	x6, x6, #0x2
    a410:	cbz	w0, a3fc <inflateCodesUsed@@ZLIB_1.2.9+0x10c>
    a414:	mov	w6, #0x1                   	// #1
    a418:	add	x7, x16, #0x2
    a41c:	mov	w0, w6
    a420:	ldrh	w6, [x7]
    a424:	lsl	w0, w0, #1
    a428:	add	x7, x7, #0x2
    a42c:	subs	w0, w0, w6
    a430:	b.mi	a510 <inflateCodesUsed@@ZLIB_1.2.9+0x220>  // b.first
    a434:	cmp	x9, x7
    a438:	b.ne	a420 <inflateCodesUsed@@ZLIB_1.2.9+0x130>  // b.any
    a43c:	cbz	w0, a450 <inflateCodesUsed@@ZLIB_1.2.9+0x160>
    a440:	cmp	w10, #0x0
    a444:	mov	w0, #0xffffffff            	// #-1
    a448:	ccmp	w11, #0x1, #0x0, ne  // ne = any
    a44c:	b.ne	a3e0 <inflateCodesUsed@@ZLIB_1.2.9+0xf0>  // b.any
    a450:	ldr	w12, [x4]
    a454:	add	x9, sp, #0x90
    a458:	mov	x8, #0x0                   	// #0
    a45c:	mov	w6, #0x0                   	// #0
    a460:	stp	x21, x22, [sp, #32]
    a464:	stp	x23, x24, [sp, #48]
    a468:	stp	x27, x28, [sp, #80]
    a46c:	strh	wzr, [sp, #146]
    a470:	add	x7, x16, x8
    a474:	add	x0, x9, x8
    a478:	add	x8, x8, #0x2
    a47c:	cmp	x8, #0x1c
    a480:	ldrh	w7, [x7, #2]
    a484:	add	w6, w6, w7
    a488:	and	w6, w6, #0xffff
    a48c:	strh	w6, [x0, #4]
    a490:	b.ne	a470 <inflateCodesUsed@@ZLIB_1.2.9+0x180>  // b.any
    a494:	mov	x0, #0x0                   	// #0
    a498:	cbz	w2, a4cc <inflateCodesUsed@@ZLIB_1.2.9+0x1dc>
    a49c:	nop
    a4a0:	ldrh	w6, [x1, x0, lsl #1]
    a4a4:	sbfiz	x7, x6, #1, #32
    a4a8:	cbz	w6, a4c0 <inflateCodesUsed@@ZLIB_1.2.9+0x1d0>
    a4ac:	ldrh	w6, [x9, x7]
    a4b0:	add	w8, w6, #0x1
    a4b4:	strh	w8, [x9, x7]
    a4b8:	ubfiz	x6, x6, #1, #16
    a4bc:	strh	w0, [x5, x6]
    a4c0:	add	x0, x0, #0x1
    a4c4:	cmp	w2, w0
    a4c8:	b.hi	a4a0 <inflateCodesUsed@@ZLIB_1.2.9+0x1b0>  // b.pmore
    a4cc:	cmp	w12, w11
    a4d0:	mov	w0, #0x1                   	// #1
    a4d4:	csel	w12, w12, w11, ls  // ls = plast
    a4d8:	cmp	w13, w12
    a4dc:	csel	w21, w13, w12, cs  // cs = hs, nlast
    a4e0:	lsl	w23, w0, w21
    a4e4:	cbz	w10, a550 <inflateCodesUsed@@ZLIB_1.2.9+0x260>
    a4e8:	cmp	w10, w0
    a4ec:	b.ne	a51c <inflateCodesUsed@@ZLIB_1.2.9+0x22c>  // b.any
    a4f0:	cmp	w23, #0x354
    a4f4:	b.ls	a798 <inflateCodesUsed@@ZLIB_1.2.9+0x4a8>  // b.plast
    a4f8:	mov	w0, #0x1                   	// #1
    a4fc:	ldp	x21, x22, [sp, #32]
    a500:	ldp	x23, x24, [sp, #48]
    a504:	ldp	x27, x28, [sp, #80]
    a508:	ldp	x29, x30, [sp], #176
    a50c:	ret
    a510:	mov	w0, #0xffffffff            	// #-1
    a514:	ldp	x29, x30, [sp], #176
    a518:	ret
    a51c:	cmp	w10, #0x2
    a520:	cset	w0, eq  // eq = none
    a524:	cmp	w23, #0x250
    a528:	mov	w2, w0
    a52c:	ccmp	w0, #0x0, #0x4, hi  // hi = pmore
    a530:	b.ne	a4f8 <inflateCodesUsed@@ZLIB_1.2.9+0x208>  // b.any
    a534:	adrp	x28, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    a538:	add	x28, x28, #0xd48
    a53c:	add	x27, x28, #0x40
    a540:	mov	w22, #0x0                   	// #0
    a544:	stp	x19, x20, [sp, #16]
    a548:	stp	x25, x26, [sp, #64]
    a54c:	b	a568 <inflateCodesUsed@@ZLIB_1.2.9+0x278>
    a550:	mov	x28, x5
    a554:	mov	x27, x5
    a558:	mov	w22, #0x14                  	// #20
    a55c:	mov	w2, #0x0                   	// #0
    a560:	stp	x19, x20, [sp, #16]
    a564:	stp	x25, x26, [sp, #64]
    a568:	cmp	w10, #0x1
    a56c:	cset	w0, eq  // eq = none
    a570:	ldr	x25, [x3]
    a574:	sub	w26, w23, #0x1
    a578:	mov	w17, w21
    a57c:	mov	w15, w0
    a580:	mov	w20, w2
    a584:	mov	w6, w13
    a588:	mov	x7, x25
    a58c:	mov	w24, #0xffffffff            	// #-1
    a590:	mov	w8, #0x0                   	// #0
    a594:	mov	w18, #0x0                   	// #0
    a598:	mov	w30, #0x0                   	// #0
    a59c:	mov	w19, #0x1                   	// #1
    a5a0:	stp	x3, x4, [sp, #96]
    a5a4:	nop
    a5a8:	ldrh	w4, [x5, w30, uxtw #1]
    a5ac:	and	w14, w6, #0xff
    a5b0:	mov	w9, #0x0                   	// #0
    a5b4:	add	w0, w4, #0x1
    a5b8:	cmp	w0, w22
    a5bc:	b.cc	a5d8 <inflateCodesUsed@@ZLIB_1.2.9+0x2e8>  // b.lo, b.ul, b.last
    a5c0:	cmp	w4, w22
    a5c4:	b.cc	a730 <inflateCodesUsed@@ZLIB_1.2.9+0x440>  // b.lo, b.ul, b.last
    a5c8:	sub	w0, w4, w22
    a5cc:	lsl	x0, x0, #1
    a5d0:	ldrb	w9, [x28, x0]
    a5d4:	ldrh	w4, [x27, x0]
    a5d8:	lsl	w12, w19, w17
    a5dc:	mov	w2, w12
    a5e0:	lsl	w6, w19, w6
    a5e4:	lsr	w10, w8, w18
    a5e8:	sub	w2, w2, w6
    a5ec:	add	w0, w10, w2
    a5f0:	lsl	x0, x0, #2
    a5f4:	add	x3, x7, x0
    a5f8:	strb	w9, [x7, x0]
    a5fc:	strb	w14, [x3, #1]
    a600:	strh	w4, [x3, #2]
    a604:	cbnz	w2, a5e8 <inflateCodesUsed@@ZLIB_1.2.9+0x2f8>
    a608:	sub	w0, w13, #0x1
    a60c:	lsl	w0, w19, w0
    a610:	tst	w8, w0
    a614:	b.eq	a624 <inflateCodesUsed@@ZLIB_1.2.9+0x334>  // b.none
    a618:	lsr	w0, w0, #1
    a61c:	tst	w8, w0
    a620:	b.ne	a618 <inflateCodesUsed@@ZLIB_1.2.9+0x328>  // b.any
    a624:	ubfiz	x3, x13, #1, #32
    a628:	sub	w2, w0, #0x1
    a62c:	and	w8, w2, w8
    a630:	cmp	w0, #0x0
    a634:	add	w8, w0, w8
    a638:	add	w30, w30, #0x1
    a63c:	ldrh	w2, [x16, x3]
    a640:	csel	w0, w8, w0, ne  // ne = any
    a644:	sub	w2, w2, #0x1
    a648:	and	w2, w2, #0xffff
    a64c:	strh	w2, [x16, x3]
    a650:	cbnz	w2, a664 <inflateCodesUsed@@ZLIB_1.2.9+0x374>
    a654:	cmp	w13, w11
    a658:	b.eq	a73c <inflateCodesUsed@@ZLIB_1.2.9+0x44c>  // b.none
    a65c:	ldrh	w2, [x5, w30, uxtw #1]
    a660:	ldrh	w13, [x1, x2, lsl #1]
    a664:	sub	w6, w13, w18
    a668:	cmp	w13, w21
    a66c:	b.ls	a680 <inflateCodesUsed@@ZLIB_1.2.9+0x390>  // b.plast
    a670:	and	w4, w26, w0
    a674:	sub	w6, w13, w18
    a678:	cmp	w4, w24
    a67c:	b.ne	a688 <inflateCodesUsed@@ZLIB_1.2.9+0x398>  // b.any
    a680:	mov	w8, w0
    a684:	b	a5a8 <inflateCodesUsed@@ZLIB_1.2.9+0x2b8>
    a688:	cmp	w18, #0x0
    a68c:	add	x7, x7, w12, uxtw #2
    a690:	csel	w18, w18, w21, ne  // ne = any
    a694:	cmp	w13, w11
    a698:	sub	w17, w13, w18
    a69c:	mov	w6, w17
    a6a0:	lsl	w2, w19, w17
    a6a4:	b.cs	a6e8 <inflateCodesUsed@@ZLIB_1.2.9+0x3f8>  // b.hs, b.nlast
    a6a8:	ldrh	w3, [x16, w13, uxtw #1]
    a6ac:	sub	w2, w2, w3
    a6b0:	cmp	w2, #0x0
    a6b4:	b.le	a6e8 <inflateCodesUsed@@ZLIB_1.2.9+0x3f8>
    a6b8:	add	w3, w13, #0x1
    a6bc:	add	x3, x16, x3, lsl #1
    a6c0:	b	a6d4 <inflateCodesUsed@@ZLIB_1.2.9+0x3e4>
    a6c4:	ldrh	w8, [x3], #2
    a6c8:	sub	w2, w2, w8
    a6cc:	cmp	w2, #0x0
    a6d0:	b.le	a6e8 <inflateCodesUsed@@ZLIB_1.2.9+0x3f8>
    a6d4:	add	w17, w17, #0x1
    a6d8:	lsl	w2, w2, #1
    a6dc:	add	w8, w18, w17
    a6e0:	cmp	w8, w11
    a6e4:	b.cc	a6c4 <inflateCodesUsed@@ZLIB_1.2.9+0x3d4>  // b.lo, b.ul, b.last
    a6e8:	lsl	w2, w19, w17
    a6ec:	add	w23, w23, w2
    a6f0:	cmp	w23, #0x354
    a6f4:	ccmp	w15, #0x0, #0x4, hi  // hi = pmore
    a6f8:	b.ne	a784 <inflateCodesUsed@@ZLIB_1.2.9+0x494>  // b.any
    a6fc:	cmp	w23, #0x250
    a700:	ccmp	w20, #0x0, #0x4, hi  // hi = pmore
    a704:	b.ne	a784 <inflateCodesUsed@@ZLIB_1.2.9+0x494>  // b.any
    a708:	ubfiz	x8, x4, #2, #32
    a70c:	sub	x2, x7, x25
    a710:	add	x3, x25, x8
    a714:	mov	w24, w4
    a718:	asr	x2, x2, #2
    a71c:	strb	w17, [x25, x8]
    a720:	mov	w8, w0
    a724:	strb	w21, [x3, #1]
    a728:	strh	w2, [x3, #2]
    a72c:	b	a5a8 <inflateCodesUsed@@ZLIB_1.2.9+0x2b8>
    a730:	mov	w4, #0x0                   	// #0
    a734:	mov	w9, #0x60                  	// #96
    a738:	b	a5d8 <inflateCodesUsed@@ZLIB_1.2.9+0x2e8>
    a73c:	ldp	x3, x4, [sp, #96]
    a740:	cbz	w0, a75c <inflateCodesUsed@@ZLIB_1.2.9+0x46c>
    a744:	ubfiz	x0, x0, #2, #32
    a748:	mov	w2, #0x40                  	// #64
    a74c:	add	x1, x7, x0
    a750:	strb	w2, [x7, x0]
    a754:	strb	w14, [x1, #1]
    a758:	strh	wzr, [x1, #2]
    a75c:	add	x23, x25, w23, uxtw #2
    a760:	mov	w0, #0x0                   	// #0
    a764:	ldp	x19, x20, [sp, #16]
    a768:	ldp	x25, x26, [sp, #64]
    a76c:	ldp	x27, x28, [sp, #80]
    a770:	str	x23, [x3]
    a774:	ldp	x23, x24, [sp, #48]
    a778:	str	w21, [x4]
    a77c:	ldp	x21, x22, [sp, #32]
    a780:	b	a3e0 <inflateCodesUsed@@ZLIB_1.2.9+0xf0>
    a784:	ldp	x19, x20, [sp, #16]
    a788:	ldp	x25, x26, [sp, #64]
    a78c:	b	a4f8 <inflateCodesUsed@@ZLIB_1.2.9+0x208>
    a790:	mov	w13, w11
    a794:	b	a414 <inflateCodesUsed@@ZLIB_1.2.9+0x124>
    a798:	adrp	x27, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    a79c:	add	x27, x27, #0xd48
    a7a0:	add	x28, x27, #0x80
    a7a4:	mov	w0, w10
    a7a8:	add	x27, x27, #0xc0
    a7ac:	mov	w22, #0x101                 	// #257
    a7b0:	mov	w2, #0x0                   	// #0
    a7b4:	stp	x19, x20, [sp, #16]
    a7b8:	stp	x25, x26, [sp, #64]
    a7bc:	b	a570 <inflateCodesUsed@@ZLIB_1.2.9+0x280>
    a7c0:	sxtw	x4, w2
    a7c4:	ldr	w8, [x0, #5300]
    a7c8:	add	x3, x4, #0x2f0
    a7cc:	lsl	w5, w2, #1
    a7d0:	cmp	w8, w2, lsl #1
    a7d4:	ldr	w14, [x0, x3, lsl #2]
    a7d8:	b.lt	a874 <inflateCodesUsed@@ZLIB_1.2.9+0x584>  // b.tstop
    a7dc:	sbfiz	x2, x14, #2, #32
    a7e0:	add	x13, x0, w14, sxtw
    a7e4:	add	x13, x13, #0x1, lsl #12
    a7e8:	ldrh	w11, [x1, x2]
    a7ec:	b	a808 <inflateCodesUsed@@ZLIB_1.2.9+0x518>
    a7f0:	add	x4, x4, #0x2f0
    a7f4:	cmp	w8, w2, lsl #1
    a7f8:	lsl	w5, w2, #1
    a7fc:	str	w3, [x0, x4, lsl #2]
    a800:	sxtw	x4, w2
    a804:	b.lt	a874 <inflateCodesUsed@@ZLIB_1.2.9+0x584>  // b.tstop
    a808:	add	x7, x0, w5, sxtw #2
    a80c:	mov	w2, w5
    a810:	cmp	w8, w5
    a814:	ldr	w3, [x7, #3008]
    a818:	sbfiz	x6, x3, #2, #32
    a81c:	sxtw	x9, w3
    a820:	ldrh	w6, [x1, x6]
    a824:	b.le	a850 <inflateCodesUsed@@ZLIB_1.2.9+0x560>
    a828:	ldr	w7, [x7, #3012]
    a82c:	add	w2, w5, #0x1
    a830:	sbfiz	x10, x7, #2, #32
    a834:	sxtw	x12, w7
    a838:	ldrh	w10, [x1, x10]
    a83c:	cmp	w10, w6
    a840:	b.cc	a880 <inflateCodesUsed@@ZLIB_1.2.9+0x590>  // b.lo, b.ul, b.last
    a844:	b.eq	a88c <inflateCodesUsed@@ZLIB_1.2.9+0x59c>  // b.none
    a848:	mov	w2, w5
    a84c:	nop
    a850:	cmp	w11, w6
    a854:	b.cc	a874 <inflateCodesUsed@@ZLIB_1.2.9+0x584>  // b.lo, b.ul, b.last
    a858:	b.ne	a7f0 <inflateCodesUsed@@ZLIB_1.2.9+0x500>  // b.any
    a85c:	add	x5, x0, w3, sxtw
    a860:	ldrb	w6, [x13, #1212]
    a864:	add	x5, x5, #0x1, lsl #12
    a868:	ldrb	w5, [x5, #1212]
    a86c:	cmp	w6, w5
    a870:	b.hi	a7f0 <inflateCodesUsed@@ZLIB_1.2.9+0x500>  // b.pmore
    a874:	add	x4, x4, #0x2f0
    a878:	str	w14, [x0, x4, lsl #2]
    a87c:	ret
    a880:	mov	w6, w10
    a884:	mov	w3, w7
    a888:	b	a850 <inflateCodesUsed@@ZLIB_1.2.9+0x560>
    a88c:	add	x12, x0, x12
    a890:	add	x9, x0, x9
    a894:	add	x12, x12, #0x1, lsl #12
    a898:	add	x9, x9, #0x1, lsl #12
    a89c:	ldrb	w10, [x12, #1212]
    a8a0:	ldrb	w9, [x9, #1212]
    a8a4:	cmp	w10, w9
    a8a8:	csel	w3, w3, w7, hi  // hi = pmore
    a8ac:	csel	w2, w5, w2, hi  // hi = pmore
    a8b0:	b	a850 <inflateCodesUsed@@ZLIB_1.2.9+0x560>
    a8b4:	nop
    a8b8:	stp	x29, x30, [sp, #-80]!
    a8bc:	mov	x5, #0x1400                	// #5120
    a8c0:	add	x3, x0, x5
    a8c4:	mov	x29, sp
    a8c8:	ldr	x2, [x1, #16]
    a8cc:	stp	x19, x20, [sp, #16]
    a8d0:	mov	x4, #0x23d00000000         	// #2461016260608
    a8d4:	ldr	w19, [x2, #20]
    a8d8:	ldr	x7, [x2]
    a8dc:	str	x21, [sp, #32]
    a8e0:	mov	x21, x1
    a8e4:	cmp	w19, #0x0
    a8e8:	ldr	x1, [x1]
    a8ec:	stur	x4, [x3, #180]
    a8f0:	b.le	ad84 <inflateCodesUsed@@ZLIB_1.2.9+0xa94>
    a8f4:	mov	x4, #0x14bc                	// #5308
    a8f8:	mov	x3, x1
    a8fc:	add	x20, x0, x4
    a900:	mov	x2, #0x0                   	// #0
    a904:	mov	w15, #0x0                   	// #0
    a908:	mov	w18, #0xffffffff            	// #-1
    a90c:	b	a938 <inflateCodesUsed@@ZLIB_1.2.9+0x648>
    a910:	add	w15, w15, #0x1
    a914:	str	w15, [x0, #5300]
    a918:	mov	w18, w2
    a91c:	add	x3, x3, #0x4
    a920:	add	x4, x0, w15, sxtw #2
    a924:	str	w2, [x4, #3008]
    a928:	strb	wzr, [x20, x2]
    a92c:	add	x2, x2, #0x1
    a930:	cmp	w19, w2
    a934:	b.le	a954 <inflateCodesUsed@@ZLIB_1.2.9+0x664>
    a938:	ldrh	w4, [x3]
    a93c:	cbnz	w4, a910 <inflateCodesUsed@@ZLIB_1.2.9+0x620>
    a940:	strh	wzr, [x3, #2]
    a944:	add	x2, x2, #0x1
    a948:	add	x3, x3, #0x4
    a94c:	cmp	w19, w2
    a950:	b.gt	a938 <inflateCodesUsed@@ZLIB_1.2.9+0x648>
    a954:	cmp	w15, #0x1
    a958:	b.gt	a9f8 <inflateCodesUsed@@ZLIB_1.2.9+0x708>
    a95c:	ldr	x10, [x0, #5912]
    a960:	sxtw	x3, w15
    a964:	add	x9, x0, #0xbc4
    a968:	mov	w8, #0x1                   	// #1
    a96c:	nop
    a970:	mov	x6, x1
    a974:	cmp	w18, #0x1
    a978:	mov	w5, #0x0                   	// #0
    a97c:	mov	x2, #0x0                   	// #0
    a980:	b.gt	a994 <inflateCodesUsed@@ZLIB_1.2.9+0x6a4>
    a984:	add	w18, w18, #0x1
    a988:	mov	w5, w18
    a98c:	sbfiz	x2, x18, #2, #32
    a990:	add	x6, x1, x2
    a994:	add	x4, x0, w5, sxtw
    a998:	str	w5, [x9, x3, lsl #2]
    a99c:	add	x4, x4, #0x1, lsl #12
    a9a0:	strh	w8, [x6]
    a9a4:	add	x3, x3, #0x1
    a9a8:	add	x2, x7, x2
    a9ac:	cmp	w3, #0x1
    a9b0:	strb	wzr, [x4, #1212]
    a9b4:	cbz	x7, a9c8 <inflateCodesUsed@@ZLIB_1.2.9+0x6d8>
    a9b8:	ldr	x4, [x0, #5920]
    a9bc:	ldrh	w2, [x2, #2]
    a9c0:	sub	x2, x4, x2
    a9c4:	str	x2, [x0, #5920]
    a9c8:	b.le	a970 <inflateCodesUsed@@ZLIB_1.2.9+0x680>
    a9cc:	cmp	w15, #0x1
    a9d0:	mov	w2, #0x1                   	// #1
    a9d4:	sub	w2, w2, w15
    a9d8:	sub	x3, x10, #0x1
    a9dc:	csel	w4, w2, wzr, le
    a9e0:	add	w15, w15, #0x1
    a9e4:	csneg	x2, xzr, x2, gt
    a9e8:	add	w15, w4, w15
    a9ec:	add	x2, x2, x3
    a9f0:	str	w15, [x0, #5300]
    a9f4:	str	x2, [x0, #5912]
    a9f8:	asr	w15, w15, #1
    a9fc:	str	w18, [x21, #8]
    aa00:	mov	w2, w15
    aa04:	bl	a7c0 <inflateCodesUsed@@ZLIB_1.2.9+0x4d0>
    aa08:	subs	w15, w15, #0x1
    aa0c:	b.ne	aa00 <inflateCodesUsed@@ZLIB_1.2.9+0x710>  // b.any
    aa10:	ldr	w2, [x0, #5300]
    aa14:	sxtw	x15, w19
    aa18:	add	x3, x0, w2, sxtw #2
    aa1c:	ldr	w19, [x0, #3012]
    aa20:	sub	w2, w2, #0x1
    aa24:	ldr	w3, [x3, #3008]
    aa28:	str	w3, [x0, #3012]
    aa2c:	str	w2, [x0, #5300]
    aa30:	mov	w2, #0x1                   	// #1
    aa34:	bl	a7c0 <inflateCodesUsed@@ZLIB_1.2.9+0x4d0>
    aa38:	ldr	w2, [x0, #5304]
    aa3c:	ldr	w5, [x0, #3012]
    aa40:	sbfiz	x7, x19, #2, #32
    aa44:	sub	w6, w2, #0x2
    aa48:	lsl	x11, x15, #2
    aa4c:	add	x2, x0, w2, sxtw #2
    aa50:	add	x4, x0, w19, sxtw
    aa54:	sbfiz	x8, x5, #2, #32
    aa58:	add	x3, x0, w5, sxtw
    aa5c:	add	x10, x1, x8
    aa60:	add	x4, x4, #0x1, lsl #12
    aa64:	str	w19, [x2, #3004]
    aa68:	add	x3, x3, #0x1, lsl #12
    aa6c:	str	w6, [x0, #5304]
    aa70:	add	x9, x1, x7
    aa74:	str	w5, [x2, #3000]
    aa78:	mov	w2, #0x1                   	// #1
    aa7c:	and	w6, w15, #0xffff
    aa80:	ldrh	w5, [x1, x7]
    aa84:	ldrh	w8, [x1, x8]
    aa88:	add	w5, w5, w8
    aa8c:	strh	w5, [x1, x11]
    aa90:	ldrb	w7, [x4, #1212]
    aa94:	ldrb	w5, [x3, #1212]
    aa98:	add	w4, w7, w2
    aa9c:	add	w3, w5, w2
    aaa0:	cmp	w7, w5
    aaa4:	and	w4, w4, #0xff
    aaa8:	and	w3, w3, #0xff
    aaac:	csel	w3, w3, w4, cc  // cc = lo, ul, last
    aab0:	strb	w3, [x20, x15]
    aab4:	strh	w6, [x10, #2]
    aab8:	strh	w6, [x9, #2]
    aabc:	str	w15, [x0, #3012]
    aac0:	add	x15, x15, #0x1
    aac4:	bl	a7c0 <inflateCodesUsed@@ZLIB_1.2.9+0x4d0>
    aac8:	ldr	w2, [x0, #5300]
    aacc:	cmp	w2, #0x1
    aad0:	b.gt	aa18 <inflateCodesUsed@@ZLIB_1.2.9+0x728>
    aad4:	ldr	w3, [x0, #5304]
    aad8:	add	x8, x0, #0xba0
    aadc:	ldr	x4, [x21, #16]
    aae0:	sub	w7, w3, #0x1
    aae4:	ldr	w10, [x21, #8]
    aae8:	mov	x2, x8
    aaec:	add	x11, x0, w7, sxtw #2
    aaf0:	add	x9, x0, #0xbc0
    aaf4:	ldr	w16, [x4, #16]
    aaf8:	ldr	w6, [x4, #24]
    aafc:	ldp	x14, x15, [x4]
    ab00:	ldr	w4, [x0, #3012]
    ab04:	ldr	x5, [x21]
    ab08:	str	w7, [x0, #5304]
    ab0c:	str	w4, [x11, #3008]
    ab10:	strh	wzr, [x2], #2
    ab14:	cmp	x9, x2
    ab18:	b.ne	ab10 <inflateCodesUsed@@ZLIB_1.2.9+0x820>  // b.any
    ab1c:	add	x4, x5, w4, sxtw #2
    ab20:	cmp	w3, #0x23c
    ab24:	mov	w11, #0x0                   	// #0
    ab28:	sxtw	x3, w3
    ab2c:	strh	wzr, [x4, #2]
    ab30:	b.gt	ac60 <inflateCodesUsed@@ZLIB_1.2.9+0x970>
    ab34:	nop
    ab38:	ldr	w4, [x9, x3, lsl #2]
    ab3c:	mov	w13, #0x0                   	// #0
    ab40:	add	x3, x3, #0x1
    ab44:	sbfiz	x7, x4, #2, #32
    ab48:	add	x12, x5, x7
    ab4c:	add	x17, x14, x7
    ab50:	ldrh	w2, [x12, #2]
    ab54:	add	x2, x5, x2, lsl #2
    ab58:	ldrh	w2, [x2, #2]
    ab5c:	add	w2, w2, #0x1
    ab60:	cmp	w6, w2
    ab64:	b.ge	ab70 <inflateCodesUsed@@ZLIB_1.2.9+0x880>  // b.tcont
    ab68:	add	w11, w11, #0x1
    ab6c:	mov	w2, w6
    ab70:	strh	w2, [x12, #2]
    ab74:	cmp	w10, w4
    ab78:	add	x12, x0, w2, sxtw #1
    ab7c:	b.lt	abc8 <inflateCodesUsed@@ZLIB_1.2.9+0x8d8>  // b.tstop
    ab80:	sub	w19, w4, w16
    ab84:	cmp	w16, w4
    ab88:	ldrh	w4, [x12, #2976]
    ab8c:	add	w4, w4, #0x1
    ab90:	strh	w4, [x12, #2976]
    ab94:	b.gt	aba0 <inflateCodesUsed@@ZLIB_1.2.9+0x8b0>
    ab98:	ldr	w13, [x15, w19, sxtw #2]
    ab9c:	add	w2, w2, w13
    aba0:	ldrh	w4, [x5, x7]
    aba4:	ldr	x7, [x0, #5912]
    aba8:	umaddl	x2, w2, w4, x7
    abac:	str	x2, [x0, #5912]
    abb0:	cbz	x14, abc8 <inflateCodesUsed@@ZLIB_1.2.9+0x8d8>
    abb4:	ldrh	w2, [x17, #2]
    abb8:	ldr	x7, [x0, #5920]
    abbc:	add	w2, w2, w13
    abc0:	umaddl	x2, w2, w4, x7
    abc4:	str	x2, [x0, #5920]
    abc8:	cmp	w3, #0x23c
    abcc:	b.le	ab38 <inflateCodesUsed@@ZLIB_1.2.9+0x848>
    abd0:	cbz	w11, ac60 <inflateCodesUsed@@ZLIB_1.2.9+0x970>
    abd4:	sxtw	x12, w6
    abd8:	sub	w15, w11, #0x1
    abdc:	add	x16, x12, #0x5ce
    abe0:	and	w15, w15, #0xfffffffe
    abe4:	add	x14, x0, x12, lsl #1
    abe8:	sub	w7, w11, #0x2
    abec:	add	x16, x0, x16, lsl #1
    abf0:	sub	w15, w7, w15
    abf4:	sub	w13, w6, #0x1
    abf8:	ldrh	w3, [x14, #2974]
    abfc:	cbnz	w3, ac54 <inflateCodesUsed@@ZLIB_1.2.9+0x964>
    ac00:	mov	x11, x16
    ac04:	mov	w2, w13
    ac08:	ldrh	w3, [x11], #-2
    ac0c:	mov	w4, w2
    ac10:	sub	w2, w2, #0x1
    ac14:	cbz	w3, ac08 <inflateCodesUsed@@ZLIB_1.2.9+0x918>
    ac18:	add	x2, x0, w2, sxtw #1
    ac1c:	add	x4, x0, w4, sxtw #1
    ac20:	sub	w3, w3, #0x1
    ac24:	cmp	w7, w15
    ac28:	strh	w3, [x2, #2976]
    ac2c:	ldrh	w2, [x4, #2976]
    ac30:	add	w2, w2, #0x2
    ac34:	strh	w2, [x4, #2976]
    ac38:	ldrh	w2, [x14, #2976]
    ac3c:	sub	w2, w2, #0x1
    ac40:	strh	w2, [x14, #2976]
    ac44:	b.eq	ad08 <inflateCodesUsed@@ZLIB_1.2.9+0xa18>  // b.none
    ac48:	ldrh	w3, [x14, #2974]
    ac4c:	sub	w7, w7, #0x2
    ac50:	cbz	w3, ac00 <inflateCodesUsed@@ZLIB_1.2.9+0x910>
    ac54:	mov	w4, w6
    ac58:	mov	w2, w13
    ac5c:	b	ac18 <inflateCodesUsed@@ZLIB_1.2.9+0x928>
    ac60:	add	x6, sp, #0x30
    ac64:	mov	x2, #0x0                   	// #0
    ac68:	mov	w0, #0x0                   	// #0
    ac6c:	nop
    ac70:	ldrh	w4, [x8, x2]
    ac74:	add	x3, x6, x2
    ac78:	add	x2, x2, #0x2
    ac7c:	add	w0, w4, w0
    ac80:	cmp	x2, #0x1e
    ac84:	lsl	w0, w0, #1
    ac88:	strh	w0, [x3, #2]
    ac8c:	b.ne	ac70 <inflateCodesUsed@@ZLIB_1.2.9+0x980>  // b.any
    ac90:	cmn	w18, #0x1
    ac94:	b.eq	acf8 <inflateCodesUsed@@ZLIB_1.2.9+0xa08>  // b.none
    ac98:	add	x0, x1, #0x4
    ac9c:	add	x18, x0, w18, sxtw #2
    aca0:	b	acb0 <inflateCodesUsed@@ZLIB_1.2.9+0x9c0>
    aca4:	add	x1, x1, #0x4
    aca8:	cmp	x18, x1
    acac:	b.eq	acf8 <inflateCodesUsed@@ZLIB_1.2.9+0xa08>  // b.none
    acb0:	ldrh	w0, [x1, #2]
    acb4:	cbz	w0, aca4 <inflateCodesUsed@@ZLIB_1.2.9+0x9b4>
    acb8:	sbfiz	x2, x0, #1, #32
    acbc:	mov	w4, #0x0                   	// #0
    acc0:	ldrh	w5, [x6, x2]
    acc4:	mov	w3, w5
    acc8:	add	w5, w5, #0x1
    accc:	strh	w5, [x6, x2]
    acd0:	and	w2, w3, #0x1
    acd4:	subs	w0, w0, #0x1
    acd8:	orr	w2, w2, w4
    acdc:	lsr	w3, w3, #1
    ace0:	lsl	w4, w2, #1
    ace4:	b.ne	acd0 <inflateCodesUsed@@ZLIB_1.2.9+0x9e0>  // b.any
    ace8:	strh	w2, [x1]
    acec:	add	x1, x1, #0x4
    acf0:	cmp	x18, x1
    acf4:	b.ne	acb0 <inflateCodesUsed@@ZLIB_1.2.9+0x9c0>  // b.any
    acf8:	ldp	x19, x20, [sp, #16]
    acfc:	ldr	x21, [sp, #32]
    ad00:	ldp	x29, x30, [sp], #80
    ad04:	ret
    ad08:	cbz	w6, ac60 <inflateCodesUsed@@ZLIB_1.2.9+0x970>
    ad0c:	mov	w14, #0x23d                 	// #573
    ad10:	ldrh	w7, [x8, x12, lsl #1]
    ad14:	cbz	w7, ad68 <inflateCodesUsed@@ZLIB_1.2.9+0xa78>
    ad18:	sub	w3, w14, #0x1
    ad1c:	sxtw	x3, w3
    ad20:	ldr	w4, [x9, x3, lsl #2]
    ad24:	mov	w14, w3
    ad28:	cmp	w10, w4
    ad2c:	b.lt	ad7c <inflateCodesUsed@@ZLIB_1.2.9+0xa8c>  // b.tstop
    ad30:	sbfiz	x4, x4, #2, #32
    ad34:	sub	x3, x3, #0x1
    ad38:	add	x11, x5, x4
    ad3c:	ldrh	w2, [x11, #2]
    ad40:	cmp	w2, w6
    ad44:	b.eq	ad60 <inflateCodesUsed@@ZLIB_1.2.9+0xa70>  // b.none
    ad48:	ldrh	w15, [x5, x4]
    ad4c:	sub	x2, x12, w2, uxth
    ad50:	ldr	x4, [x0, #5912]
    ad54:	madd	x2, x2, x15, x4
    ad58:	str	x2, [x0, #5912]
    ad5c:	strh	w6, [x11, #2]
    ad60:	subs	w7, w7, #0x1
    ad64:	b.ne	ad20 <inflateCodesUsed@@ZLIB_1.2.9+0xa30>  // b.any
    ad68:	sub	x12, x12, #0x1
    ad6c:	mov	w6, w13
    ad70:	cbz	w13, ac60 <inflateCodesUsed@@ZLIB_1.2.9+0x970>
    ad74:	sub	w13, w13, #0x1
    ad78:	b	ad10 <inflateCodesUsed@@ZLIB_1.2.9+0xa20>
    ad7c:	sub	x3, x3, #0x1
    ad80:	b	ad20 <inflateCodesUsed@@ZLIB_1.2.9+0xa30>
    ad84:	mov	x2, #0x14bc                	// #5308
    ad88:	mov	w18, #0xffffffff            	// #-1
    ad8c:	add	x20, x0, x2
    ad90:	mov	w15, #0x0                   	// #0
    ad94:	b	a95c <inflateCodesUsed@@ZLIB_1.2.9+0x66c>
    ad98:	ldrh	w4, [x1, #2]
    ad9c:	add	x6, x1, w2, sxtw #2
    ada0:	mov	w8, #0xffffffff            	// #-1
    ada4:	mov	w3, #0x3                   	// #3
    ada8:	cmp	w4, #0x0
    adac:	mov	w7, #0x4                   	// #4
    adb0:	strh	w8, [x6, #6]
    adb4:	csel	w7, w7, w3, ne  // ne = any
    adb8:	mov	w5, #0x7                   	// #7
    adbc:	mov	w3, #0x8a                  	// #138
    adc0:	csel	w5, w5, w3, ne  // ne = any
    adc4:	tbnz	w2, #31, ae34 <inflateCodesUsed@@ZLIB_1.2.9+0xb44>
    adc8:	add	x6, x1, #0xa
    adcc:	add	x3, x1, #0x6
    add0:	add	x6, x6, w2, sxtw #2
    add4:	mov	w1, #0x0                   	// #0
    add8:	mov	w8, #0xffffffff            	// #-1
    addc:	nop
    ade0:	add	w1, w1, #0x1
    ade4:	mov	w2, w4
    ade8:	cmp	w1, w5
    adec:	ldrh	w4, [x3]
    adf0:	b.ge	ae38 <inflateCodesUsed@@ZLIB_1.2.9+0xb48>  // b.tcont
    adf4:	cmp	w4, w2
    adf8:	b.eq	ae28 <inflateCodesUsed@@ZLIB_1.2.9+0xb38>  // b.none
    adfc:	cmp	w1, w7
    ae00:	b.ge	ae38 <inflateCodesUsed@@ZLIB_1.2.9+0xb48>  // b.tcont
    ae04:	add	x5, x0, w2, sxtw #2
    ae08:	ldrh	w7, [x5, #2748]
    ae0c:	add	w1, w1, w7
    ae10:	strh	w1, [x5, #2748]
    ae14:	cbz	w4, ae80 <inflateCodesUsed@@ZLIB_1.2.9+0xb90>
    ae18:	mov	w8, w2
    ae1c:	mov	w7, #0x4                   	// #4
    ae20:	mov	w5, #0x7                   	// #7
    ae24:	mov	w1, #0x0                   	// #0
    ae28:	add	x3, x3, #0x4
    ae2c:	cmp	x6, x3
    ae30:	b.ne	ade0 <inflateCodesUsed@@ZLIB_1.2.9+0xaf0>  // b.any
    ae34:	ret
    ae38:	cbz	w2, ae94 <inflateCodesUsed@@ZLIB_1.2.9+0xba4>
    ae3c:	cmp	w2, w8
    ae40:	b.eq	ae54 <inflateCodesUsed@@ZLIB_1.2.9+0xb64>  // b.none
    ae44:	add	x5, x0, w2, sxtw #2
    ae48:	ldrh	w1, [x5, #2748]
    ae4c:	add	w1, w1, #0x1
    ae50:	strh	w1, [x5, #2748]
    ae54:	ldrh	w1, [x0, #2812]
    ae58:	add	w1, w1, #0x1
    ae5c:	strh	w1, [x0, #2812]
    ae60:	cbz	w4, ae80 <inflateCodesUsed@@ZLIB_1.2.9+0xb90>
    ae64:	cmp	w4, w2
    ae68:	b.ne	ae18 <inflateCodesUsed@@ZLIB_1.2.9+0xb28>  // b.any
    ae6c:	mov	w8, w4
    ae70:	mov	w7, #0x3                   	// #3
    ae74:	mov	w5, #0x6                   	// #6
    ae78:	mov	w1, #0x0                   	// #0
    ae7c:	b	ae28 <inflateCodesUsed@@ZLIB_1.2.9+0xb38>
    ae80:	mov	w8, w2
    ae84:	mov	w7, #0x3                   	// #3
    ae88:	mov	w5, #0x8a                  	// #138
    ae8c:	mov	w1, #0x0                   	// #0
    ae90:	b	ae28 <inflateCodesUsed@@ZLIB_1.2.9+0xb38>
    ae94:	cmp	w1, #0xa
    ae98:	b.gt	aeac <inflateCodesUsed@@ZLIB_1.2.9+0xbbc>
    ae9c:	ldrh	w1, [x0, #2816]
    aea0:	add	w1, w1, #0x1
    aea4:	strh	w1, [x0, #2816]
    aea8:	b	ae60 <inflateCodesUsed@@ZLIB_1.2.9+0xb70>
    aeac:	ldrh	w1, [x0, #2820]
    aeb0:	add	w1, w1, #0x1
    aeb4:	strh	w1, [x0, #2820]
    aeb8:	b	ae60 <inflateCodesUsed@@ZLIB_1.2.9+0xb70>
    aebc:	nop
    aec0:	ldrh	w10, [x1, #2]
    aec4:	mov	w8, #0x4                   	// #4
    aec8:	mov	w4, #0x3                   	// #3
    aecc:	mov	w5, #0x7                   	// #7
    aed0:	cmp	w10, #0x0
    aed4:	mov	w3, #0x8a                  	// #138
    aed8:	csel	w8, w8, w4, ne  // ne = any
    aedc:	csel	w5, w5, w3, ne  // ne = any
    aee0:	tbnz	w2, #31, afe4 <inflateCodesUsed@@ZLIB_1.2.9+0xcf4>
    aee4:	add	x12, x1, #0xa
    aee8:	add	x7, x1, #0x6
    aeec:	add	x12, x12, w2, sxtw #2
    aef0:	mov	w4, #0x0                   	// #0
    aef4:	mov	w9, #0xffffffff            	// #-1
    aef8:	mov	w6, #0x10                  	// #16
    aefc:	nop
    af00:	add	w3, w4, #0x1
    af04:	mov	w11, w10
    af08:	cmp	w3, w5
    af0c:	ldrh	w10, [x7]
    af10:	b.ge	afe8 <inflateCodesUsed@@ZLIB_1.2.9+0xcf8>  // b.tcont
    af14:	cmp	w10, w11
    af18:	b.eq	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x10ac>  // b.none
    af1c:	cmp	w3, w8
    af20:	b.ge	afe8 <inflateCodesUsed@@ZLIB_1.2.9+0xcf8>  // b.tcont
    af24:	add	x8, x0, w11, sxtw #2
    af28:	b	af80 <inflateCodesUsed@@ZLIB_1.2.9+0xc90>
    af2c:	strh	w1, [x0, #5936]
    af30:	subs	w3, w3, #0x1
    af34:	ldr	x9, [x0, #16]
    af38:	ldr	x1, [x0, #40]
    af3c:	add	x13, x1, #0x1
    af40:	str	x13, [x0, #40]
    af44:	strb	w4, [x9, x1]
    af48:	ldr	x9, [x0, #16]
    af4c:	ldr	x4, [x0, #40]
    af50:	ldrh	w1, [x0, #5936]
    af54:	add	x13, x4, #0x1
    af58:	str	x13, [x0, #40]
    af5c:	lsr	w1, w1, #8
    af60:	strb	w1, [x9, x4]
    af64:	ldr	w1, [x0, #5940]
    af68:	sub	w4, w6, w1
    af6c:	add	w2, w2, w1
    af70:	str	w2, [x0, #5940]
    af74:	asr	w5, w5, w4
    af78:	strh	w5, [x0, #5936]
    af7c:	b.eq	afc4 <inflateCodesUsed@@ZLIB_1.2.9+0xcd4>  // b.none
    af80:	ldr	w4, [x0, #5940]
    af84:	ldrh	w5, [x8, #2748]
    af88:	ldrh	w9, [x0, #5936]
    af8c:	ldrh	w2, [x8, #2750]
    af90:	lsl	w1, w5, w4
    af94:	orr	w1, w1, w9
    af98:	sub	w9, w6, w2
    af9c:	add	w13, w4, w2
    afa0:	cmp	w4, w9
    afa4:	sub	w2, w2, #0x10
    afa8:	sxth	w4, w1
    afac:	and	w1, w1, #0xffff
    afb0:	b.gt	af2c <inflateCodesUsed@@ZLIB_1.2.9+0xc3c>
    afb4:	strh	w1, [x0, #5936]
    afb8:	subs	w3, w3, #0x1
    afbc:	str	w13, [x0, #5940]
    afc0:	b.ne	af80 <inflateCodesUsed@@ZLIB_1.2.9+0xc90>  // b.any
    afc4:	cbnz	w10, b164 <inflateCodesUsed@@ZLIB_1.2.9+0xe74>
    afc8:	add	x7, x7, #0x4
    afcc:	mov	w9, w11
    afd0:	cmp	x12, x7
    afd4:	mov	w8, #0x3                   	// #3
    afd8:	mov	w5, #0x8a                  	// #138
    afdc:	mov	w4, #0x0                   	// #0
    afe0:	b.ne	af00 <inflateCodesUsed@@ZLIB_1.2.9+0xc10>  // b.any
    afe4:	ret
    afe8:	ldrh	w1, [x0, #5936]
    afec:	ldr	w2, [x0, #5940]
    aff0:	cbz	w11, b184 <inflateCodesUsed@@ZLIB_1.2.9+0xe94>
    aff4:	sxth	w1, w1
    aff8:	cmp	w11, w9
    affc:	b.eq	b07c <inflateCodesUsed@@ZLIB_1.2.9+0xd8c>  // b.none
    b000:	add	x3, x0, w11, sxtw #2
    b004:	ldrh	w8, [x3, #2748]
    b008:	ldrh	w5, [x3, #2750]
    b00c:	lsl	w3, w8, w2
    b010:	orr	w1, w1, w3
    b014:	sub	w3, w6, w5
    b018:	and	w9, w1, #0xffff
    b01c:	cmp	w3, w2
    b020:	sxth	w1, w1
    b024:	b.ge	b38c <inflateCodesUsed@@ZLIB_1.2.9+0x109c>  // b.tcont
    b028:	ldr	x13, [x0, #16]
    b02c:	mov	w3, w4
    b030:	ldr	x2, [x0, #40]
    b034:	strh	w9, [x0, #5936]
    b038:	sub	w5, w5, #0x10
    b03c:	add	x4, x2, #0x1
    b040:	str	x4, [x0, #40]
    b044:	strb	w1, [x13, x2]
    b048:	ldr	x4, [x0, #16]
    b04c:	ldr	x2, [x0, #40]
    b050:	ldrh	w1, [x0, #5936]
    b054:	add	x9, x2, #0x1
    b058:	str	x9, [x0, #40]
    b05c:	lsr	w1, w1, #8
    b060:	strb	w1, [x4, x2]
    b064:	ldr	w2, [x0, #5940]
    b068:	sub	w1, w6, w2
    b06c:	add	w2, w5, w2
    b070:	str	w2, [x0, #5940]
    b074:	asr	w1, w8, w1
    b078:	sxth	w1, w1
    b07c:	ldrh	w5, [x0, #2812]
    b080:	ldrh	w4, [x0, #2814]
    b084:	lsl	w8, w5, w2
    b088:	orr	w1, w1, w8
    b08c:	sub	w8, w6, w4
    b090:	and	w9, w1, #0xffff
    b094:	cmp	w8, w2
    b098:	sxth	w1, w1
    b09c:	b.ge	b268 <inflateCodesUsed@@ZLIB_1.2.9+0xf78>  // b.tcont
    b0a0:	ldr	x13, [x0, #16]
    b0a4:	sub	w2, w4, #0x10
    b0a8:	ldr	x8, [x0, #40]
    b0ac:	strh	w9, [x0, #5936]
    b0b0:	sub	w3, w3, #0x3
    b0b4:	add	x4, x8, #0x1
    b0b8:	str	x4, [x0, #40]
    b0bc:	strb	w1, [x13, x8]
    b0c0:	ldr	x8, [x0, #16]
    b0c4:	ldr	x4, [x0, #40]
    b0c8:	ldrh	w1, [x0, #5936]
    b0cc:	add	x9, x4, #0x1
    b0d0:	str	x9, [x0, #40]
    b0d4:	lsr	w1, w1, #8
    b0d8:	strb	w1, [x8, x4]
    b0dc:	ldr	w1, [x0, #5940]
    b0e0:	sub	w4, w6, w1
    b0e4:	add	w2, w2, w1
    b0e8:	str	w2, [x0, #5940]
    b0ec:	cmp	w2, #0xe
    b0f0:	asr	w1, w5, w4
    b0f4:	sxth	w1, w1
    b0f8:	b.le	b27c <inflateCodesUsed@@ZLIB_1.2.9+0xf8c>
    b0fc:	and	w3, w3, #0xffff
    b100:	ldr	x5, [x0, #16]
    b104:	lsl	w2, w3, w2
    b108:	ldr	x4, [x0, #40]
    b10c:	orr	w1, w1, w2
    b110:	add	x2, x4, #0x1
    b114:	sxth	w1, w1
    b118:	str	x2, [x0, #40]
    b11c:	strh	w1, [x0, #5936]
    b120:	strb	w1, [x5, x4]
    b124:	ldr	x4, [x0, #16]
    b128:	ldr	x2, [x0, #40]
    b12c:	ldrh	w1, [x0, #5936]
    b130:	add	x5, x2, #0x1
    b134:	str	x5, [x0, #40]
    b138:	lsr	w1, w1, #8
    b13c:	strb	w1, [x4, x2]
    b140:	ldr	w1, [x0, #5940]
    b144:	sub	w2, w6, w1
    b148:	sub	w1, w1, #0xe
    b14c:	str	w1, [x0, #5940]
    b150:	asr	w3, w3, w2
    b154:	strh	w3, [x0, #5936]
    b158:	cbz	w10, afc8 <inflateCodesUsed@@ZLIB_1.2.9+0xcd8>
    b15c:	cmp	w10, w11
    b160:	b.eq	b378 <inflateCodesUsed@@ZLIB_1.2.9+0x1088>  // b.none
    b164:	mov	w9, w11
    b168:	mov	w8, #0x4                   	// #4
    b16c:	mov	w5, #0x7                   	// #7
    b170:	mov	w4, #0x0                   	// #0
    b174:	add	x7, x7, #0x4
    b178:	cmp	x12, x7
    b17c:	b.ne	af00 <inflateCodesUsed@@ZLIB_1.2.9+0xc10>  // b.any
    b180:	ret
    b184:	cmp	w3, #0xa
    b188:	b.gt	b298 <inflateCodesUsed@@ZLIB_1.2.9+0xfa8>
    b18c:	ldrh	w8, [x0, #2818]
    b190:	ldrh	w5, [x0, #2816]
    b194:	sub	w9, w6, w8
    b198:	cmp	w9, w2
    b19c:	b.ge	b3a4 <inflateCodesUsed@@ZLIB_1.2.9+0x10b4>  // b.tcont
    b1a0:	ldr	x13, [x0, #16]
    b1a4:	lsl	w2, w5, w2
    b1a8:	ldr	x9, [x0, #40]
    b1ac:	orr	w1, w2, w1
    b1b0:	sub	w2, w8, #0x10
    b1b4:	sxth	w1, w1
    b1b8:	add	x8, x9, #0x1
    b1bc:	str	x8, [x0, #40]
    b1c0:	strh	w1, [x0, #5936]
    b1c4:	strb	w1, [x13, x9]
    b1c8:	ldr	x9, [x0, #16]
    b1cc:	ldr	x8, [x0, #40]
    b1d0:	ldrh	w1, [x0, #5936]
    b1d4:	add	x13, x8, #0x1
    b1d8:	str	x13, [x0, #40]
    b1dc:	lsr	w1, w1, #8
    b1e0:	strb	w1, [x9, x8]
    b1e4:	ldr	w1, [x0, #5940]
    b1e8:	sub	w8, w6, w1
    b1ec:	add	w2, w2, w1
    b1f0:	str	w2, [x0, #5940]
    b1f4:	cmp	w2, #0xd
    b1f8:	asr	w5, w5, w8
    b1fc:	sxth	w1, w5
    b200:	b.le	b3c0 <inflateCodesUsed@@ZLIB_1.2.9+0x10d0>
    b204:	sub	w4, w4, #0x2
    b208:	and	w4, w4, #0xffff
    b20c:	ldr	x5, [x0, #16]
    b210:	lsl	w2, w4, w2
    b214:	ldr	x3, [x0, #40]
    b218:	orr	w1, w1, w2
    b21c:	add	x2, x3, #0x1
    b220:	sxth	w1, w1
    b224:	str	x2, [x0, #40]
    b228:	strh	w1, [x0, #5936]
    b22c:	strb	w1, [x5, x3]
    b230:	ldr	x3, [x0, #16]
    b234:	ldr	x2, [x0, #40]
    b238:	ldrh	w1, [x0, #5936]
    b23c:	add	x5, x2, #0x1
    b240:	str	x5, [x0, #40]
    b244:	lsr	w1, w1, #8
    b248:	strb	w1, [x3, x2]
    b24c:	ldr	w1, [x0, #5940]
    b250:	sub	w2, w6, w1
    b254:	sub	w1, w1, #0xd
    b258:	str	w1, [x0, #5940]
    b25c:	asr	w4, w4, w2
    b260:	strh	w4, [x0, #5936]
    b264:	b	b158 <inflateCodesUsed@@ZLIB_1.2.9+0xe68>
    b268:	add	w2, w4, w2
    b26c:	str	w2, [x0, #5940]
    b270:	sub	w3, w3, #0x3
    b274:	cmp	w2, #0xe
    b278:	b.gt	b0fc <inflateCodesUsed@@ZLIB_1.2.9+0xe0c>
    b27c:	add	w4, w2, #0x2
    b280:	and	w3, w3, #0xffff
    b284:	str	w4, [x0, #5940]
    b288:	lsl	w2, w3, w2
    b28c:	orr	w1, w1, w2
    b290:	strh	w1, [x0, #5936]
    b294:	b	b158 <inflateCodesUsed@@ZLIB_1.2.9+0xe68>
    b298:	ldrh	w9, [x0, #2820]
    b29c:	ldrh	w8, [x0, #2822]
    b2a0:	lsl	w5, w9, w2
    b2a4:	orr	w1, w5, w1
    b2a8:	sub	w5, w6, w8
    b2ac:	and	w13, w1, #0xffff
    b2b0:	cmp	w5, w2
    b2b4:	sxth	w1, w1
    b2b8:	b.ge	b3d8 <inflateCodesUsed@@ZLIB_1.2.9+0x10e8>  // b.tcont
    b2bc:	ldr	x14, [x0, #16]
    b2c0:	sub	w2, w8, #0x10
    b2c4:	ldr	x5, [x0, #40]
    b2c8:	strh	w13, [x0, #5936]
    b2cc:	add	x8, x5, #0x1
    b2d0:	str	x8, [x0, #40]
    b2d4:	strb	w1, [x14, x5]
    b2d8:	ldr	x8, [x0, #16]
    b2dc:	ldr	x5, [x0, #40]
    b2e0:	ldrh	w1, [x0, #5936]
    b2e4:	add	x13, x5, #0x1
    b2e8:	str	x13, [x0, #40]
    b2ec:	lsr	w1, w1, #8
    b2f0:	strb	w1, [x8, x5]
    b2f4:	ldr	w1, [x0, #5940]
    b2f8:	sub	w5, w6, w1
    b2fc:	add	w2, w2, w1
    b300:	str	w2, [x0, #5940]
    b304:	asr	w1, w9, w5
    b308:	sxth	w1, w1
    b30c:	cmp	w2, #0x9
    b310:	b.le	b3cc <inflateCodesUsed@@ZLIB_1.2.9+0x10dc>
    b314:	sub	w4, w4, #0xa
    b318:	and	w4, w4, #0xffff
    b31c:	ldr	x5, [x0, #16]
    b320:	lsl	w2, w4, w2
    b324:	ldr	x3, [x0, #40]
    b328:	orr	w1, w1, w2
    b32c:	add	x2, x3, #0x1
    b330:	sxth	w1, w1
    b334:	str	x2, [x0, #40]
    b338:	strh	w1, [x0, #5936]
    b33c:	strb	w1, [x5, x3]
    b340:	ldr	x3, [x0, #16]
    b344:	ldr	x2, [x0, #40]
    b348:	ldrh	w1, [x0, #5936]
    b34c:	add	x5, x2, #0x1
    b350:	str	x5, [x0, #40]
    b354:	lsr	w1, w1, #8
    b358:	strb	w1, [x3, x2]
    b35c:	ldr	w1, [x0, #5940]
    b360:	sub	w2, w6, w1
    b364:	sub	w1, w1, #0x9
    b368:	str	w1, [x0, #5940]
    b36c:	asr	w4, w4, w2
    b370:	strh	w4, [x0, #5936]
    b374:	b	b158 <inflateCodesUsed@@ZLIB_1.2.9+0xe68>
    b378:	mov	w9, w10
    b37c:	mov	w8, #0x3                   	// #3
    b380:	mov	w5, #0x6                   	// #6
    b384:	mov	w4, #0x0                   	// #0
    b388:	b	b174 <inflateCodesUsed@@ZLIB_1.2.9+0xe84>
    b38c:	add	w2, w2, w5
    b390:	mov	w3, w4
    b394:	str	w2, [x0, #5940]
    b398:	b	b07c <inflateCodesUsed@@ZLIB_1.2.9+0xd8c>
    b39c:	mov	w4, w3
    b3a0:	b	b174 <inflateCodesUsed@@ZLIB_1.2.9+0xe84>
    b3a4:	lsl	w5, w5, w2
    b3a8:	add	w2, w8, w2
    b3ac:	orr	w1, w5, w1
    b3b0:	str	w2, [x0, #5940]
    b3b4:	cmp	w2, #0xd
    b3b8:	sxth	w1, w1
    b3bc:	b.gt	b204 <inflateCodesUsed@@ZLIB_1.2.9+0xf14>
    b3c0:	sub	w3, w3, #0x3
    b3c4:	add	w4, w2, #0x3
    b3c8:	b	b280 <inflateCodesUsed@@ZLIB_1.2.9+0xf90>
    b3cc:	sub	w3, w3, #0xb
    b3d0:	add	w4, w2, #0x7
    b3d4:	b	b280 <inflateCodesUsed@@ZLIB_1.2.9+0xf90>
    b3d8:	add	w2, w8, w2
    b3dc:	str	w2, [x0, #5940]
    b3e0:	b	b30c <inflateCodesUsed@@ZLIB_1.2.9+0x101c>
    b3e4:	nop
    b3e8:	stp	x29, x30, [sp, #-16]!
    b3ec:	mov	x29, sp
    b3f0:	ldr	w6, [x0, #5900]
    b3f4:	ldrh	w5, [x0, #5936]
    b3f8:	ldr	w7, [x0, #5940]
    b3fc:	sxth	w3, w5
    b400:	cbz	w6, b690 <inflateCodesUsed@@ZLIB_1.2.9+0x13a0>
    b404:	adrp	x10, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    b408:	add	x10, x10, #0xe78
    b40c:	add	x13, x10, #0x100
    b410:	add	x12, x10, #0x3f0
    b414:	add	x15, x10, #0x468
    b418:	add	x11, x10, #0x1f0
    b41c:	add	x14, x10, #0x178
    b420:	mov	w8, #0x0                   	// #0
    b424:	mov	w9, #0x10                  	// #16
    b428:	b	b4bc <inflateCodesUsed@@ZLIB_1.2.9+0x11cc>
    b42c:	ubfiz	x4, x4, #2, #8
    b430:	add	x5, x1, x4
    b434:	ldrh	w17, [x1, x4]
    b438:	ldrh	w16, [x5, #2]
    b43c:	lsl	w4, w17, w7
    b440:	orr	w3, w3, w4
    b444:	sub	w4, w9, w16
    b448:	and	w5, w3, #0xffff
    b44c:	cmp	w4, w7
    b450:	sxth	w3, w3
    b454:	b.ge	b71c <inflateCodesUsed@@ZLIB_1.2.9+0x142c>  // b.tcont
    b458:	ldr	x6, [x0, #16]
    b45c:	strh	w5, [x0, #5936]
    b460:	ldr	x4, [x0, #40]
    b464:	sub	w16, w16, #0x10
    b468:	add	x5, x4, #0x1
    b46c:	str	x5, [x0, #40]
    b470:	strb	w3, [x6, x4]
    b474:	ldr	x5, [x0, #16]
    b478:	ldr	x4, [x0, #40]
    b47c:	ldrh	w3, [x0, #5936]
    b480:	add	x6, x4, #0x1
    b484:	str	x6, [x0, #40]
    b488:	lsr	w3, w3, #8
    b48c:	strb	w3, [x5, x4]
    b490:	ldr	w7, [x0, #5940]
    b494:	ldr	w6, [x0, #5900]
    b498:	sub	w3, w9, w7
    b49c:	add	w7, w16, w7
    b4a0:	str	w7, [x0, #5940]
    b4a4:	asr	w3, w17, w3
    b4a8:	and	w5, w3, #0xffff
    b4ac:	sxth	w3, w3
    b4b0:	strh	w5, [x0, #5936]
    b4b4:	cmp	w6, w8
    b4b8:	b.ls	b690 <inflateCodesUsed@@ZLIB_1.2.9+0x13a0>  // b.plast
    b4bc:	ldr	x16, [x0, #5904]
    b4c0:	mov	w4, w8
    b4c4:	ldr	x17, [x0, #5888]
    b4c8:	sxth	w3, w5
    b4cc:	ldrh	w16, [x16, w8, uxtw #1]
    b4d0:	add	w8, w8, #0x1
    b4d4:	ldrb	w4, [x17, x4]
    b4d8:	cbz	w16, b42c <inflateCodesUsed@@ZLIB_1.2.9+0x113c>
    b4dc:	ldrb	w5, [x10, w4, sxtw]
    b4e0:	add	w6, w5, #0x101
    b4e4:	ubfiz	x6, x6, #2, #10
    b4e8:	add	x18, x1, x6
    b4ec:	ldrh	w17, [x1, x6]
    b4f0:	ldrh	w6, [x18, #2]
    b4f4:	lsl	w18, w17, w7
    b4f8:	orr	w3, w3, w18
    b4fc:	sub	w18, w9, w6
    b500:	and	w30, w3, #0xffff
    b504:	cmp	w18, w7
    b508:	sxth	w3, w3
    b50c:	b.ge	b710 <inflateCodesUsed@@ZLIB_1.2.9+0x1420>  // b.tcont
    b510:	ldr	x18, [x0, #40]
    b514:	sub	w7, w6, #0x10
    b518:	strh	w30, [x0, #5936]
    b51c:	add	x6, x18, #0x1
    b520:	str	x6, [x0, #40]
    b524:	ldr	x6, [x0, #16]
    b528:	strb	w3, [x6, x18]
    b52c:	ldr	x18, [x0, #16]
    b530:	ldr	x6, [x0, #40]
    b534:	ldrh	w3, [x0, #5936]
    b538:	add	x30, x6, #0x1
    b53c:	str	x30, [x0, #40]
    b540:	lsr	w3, w3, #8
    b544:	strb	w3, [x18, x6]
    b548:	ldr	w6, [x0, #5940]
    b54c:	sub	w3, w9, w6
    b550:	add	w7, w7, w6
    b554:	str	w7, [x0, #5940]
    b558:	asr	w3, w17, w3
    b55c:	sxth	w3, w3
    b560:	ldr	w6, [x13, x5, lsl #2]
    b564:	cbz	w6, b5e0 <inflateCodesUsed@@ZLIB_1.2.9+0x12f0>
    b568:	ldr	w5, [x14, x5, lsl #2]
    b56c:	sub	w17, w9, w6
    b570:	cmp	w17, w7
    b574:	sub	w4, w4, w5
    b578:	and	w4, w4, #0xffff
    b57c:	lsl	w5, w4, w7
    b580:	orr	w3, w3, w5
    b584:	and	w5, w3, #0xffff
    b588:	sxth	w3, w3
    b58c:	b.ge	b7e8 <inflateCodesUsed@@ZLIB_1.2.9+0x14f8>  // b.tcont
    b590:	strh	w5, [x0, #5936]
    b594:	sub	w6, w6, #0x10
    b598:	ldr	x7, [x0, #16]
    b59c:	ldr	x5, [x0, #40]
    b5a0:	add	x17, x5, #0x1
    b5a4:	str	x17, [x0, #40]
    b5a8:	strb	w3, [x7, x5]
    b5ac:	ldr	x7, [x0, #16]
    b5b0:	ldr	x5, [x0, #40]
    b5b4:	ldrh	w3, [x0, #5936]
    b5b8:	add	x17, x5, #0x1
    b5bc:	str	x17, [x0, #40]
    b5c0:	lsr	w3, w3, #8
    b5c4:	strb	w3, [x7, x5]
    b5c8:	ldr	w7, [x0, #5940]
    b5cc:	sub	w3, w9, w7
    b5d0:	add	w7, w6, w7
    b5d4:	str	w7, [x0, #5940]
    b5d8:	asr	w3, w4, w3
    b5dc:	sxth	w3, w3
    b5e0:	sub	w4, w16, #0x1
    b5e4:	cmp	w4, #0xff
    b5e8:	b.hi	b7c4 <inflateCodesUsed@@ZLIB_1.2.9+0x14d4>  // b.pmore
    b5ec:	ldrb	w6, [x11, w4, uxtw]
    b5f0:	ubfiz	x5, x6, #2, #8
    b5f4:	mov	w18, w6
    b5f8:	add	x6, x2, x5
    b5fc:	ldrh	w17, [x2, x5]
    b600:	ldrh	w6, [x6, #2]
    b604:	lsl	w5, w17, w7
    b608:	orr	w3, w3, w5
    b60c:	sub	w16, w9, w6
    b610:	and	w5, w3, #0xffff
    b614:	cmp	w16, w7
    b618:	sxth	w3, w3
    b61c:	b.ge	b7b4 <inflateCodesUsed@@ZLIB_1.2.9+0x14c4>  // b.tcont
    b620:	strh	w5, [x0, #5936]
    b624:	sub	w7, w6, #0x10
    b628:	ldr	x16, [x0, #16]
    b62c:	ldr	x5, [x0, #40]
    b630:	add	x6, x5, #0x1
    b634:	str	x6, [x0, #40]
    b638:	strb	w3, [x16, x5]
    b63c:	ldr	x6, [x0, #16]
    b640:	ldr	x5, [x0, #40]
    b644:	ldrh	w3, [x0, #5936]
    b648:	add	x16, x5, #0x1
    b64c:	str	x16, [x0, #40]
    b650:	lsr	w3, w3, #8
    b654:	strb	w3, [x6, x5]
    b658:	ldr	w5, [x0, #5940]
    b65c:	sub	w3, w9, w5
    b660:	add	w7, w7, w5
    b664:	str	w7, [x0, #5940]
    b668:	asr	w3, w17, w3
    b66c:	and	w5, w3, #0xffff
    b670:	sxth	w3, w3
    b674:	strh	w5, [x0, #5936]
    b678:	ldr	w17, [x12, x18, lsl #2]
    b67c:	cbnz	w17, b72c <inflateCodesUsed@@ZLIB_1.2.9+0x143c>
    b680:	ldr	w6, [x0, #5900]
    b684:	cmp	w6, w8
    b688:	b.hi	b4bc <inflateCodesUsed@@ZLIB_1.2.9+0x11cc>  // b.pmore
    b68c:	nop
    b690:	ldrh	w2, [x1, #1024]
    b694:	mov	w4, #0x10                  	// #16
    b698:	ldrh	w1, [x1, #1026]
    b69c:	lsl	w5, w2, w7
    b6a0:	orr	w3, w3, w5
    b6a4:	sub	w6, w4, w1
    b6a8:	and	w5, w3, #0xffff
    b6ac:	cmp	w6, w7
    b6b0:	sxth	w3, w3
    b6b4:	b.ge	b7f4 <inflateCodesUsed@@ZLIB_1.2.9+0x1504>  // b.tcont
    b6b8:	strh	w5, [x0, #5936]
    b6bc:	sub	w1, w1, #0x10
    b6c0:	ldr	x6, [x0, #16]
    b6c4:	ldr	x5, [x0, #40]
    b6c8:	add	x7, x5, #0x1
    b6cc:	str	x7, [x0, #40]
    b6d0:	strb	w3, [x6, x5]
    b6d4:	ldr	x6, [x0, #16]
    b6d8:	ldr	x5, [x0, #40]
    b6dc:	ldrh	w3, [x0, #5936]
    b6e0:	add	x7, x5, #0x1
    b6e4:	str	x7, [x0, #40]
    b6e8:	lsr	w3, w3, #8
    b6ec:	strb	w3, [x6, x5]
    b6f0:	ldr	w3, [x0, #5940]
    b6f4:	ldp	x29, x30, [sp], #16
    b6f8:	sub	w4, w4, w3
    b6fc:	add	w1, w1, w3
    b700:	str	w1, [x0, #5940]
    b704:	asr	w2, w2, w4
    b708:	strh	w2, [x0, #5936]
    b70c:	ret
    b710:	add	w7, w6, w7
    b714:	str	w7, [x0, #5940]
    b718:	b	b560 <inflateCodesUsed@@ZLIB_1.2.9+0x1270>
    b71c:	add	w7, w7, w16
    b720:	strh	w5, [x0, #5936]
    b724:	str	w7, [x0, #5940]
    b728:	b	b4b4 <inflateCodesUsed@@ZLIB_1.2.9+0x11c4>
    b72c:	ldr	w5, [x15, x18, lsl #2]
    b730:	sub	w6, w9, w17
    b734:	cmp	w6, w7
    b738:	sub	w4, w4, w5
    b73c:	and	w4, w4, #0xffff
    b740:	lsl	w5, w4, w7
    b744:	orr	w3, w3, w5
    b748:	and	w5, w3, #0xffff
    b74c:	sxth	w3, w3
    b750:	b.ge	b7d4 <inflateCodesUsed@@ZLIB_1.2.9+0x14e4>  // b.tcont
    b754:	strh	w5, [x0, #5936]
    b758:	sub	w17, w17, #0x10
    b75c:	ldr	x6, [x0, #16]
    b760:	ldr	x5, [x0, #40]
    b764:	add	x7, x5, #0x1
    b768:	str	x7, [x0, #40]
    b76c:	strb	w3, [x6, x5]
    b770:	ldr	x6, [x0, #16]
    b774:	ldr	x5, [x0, #40]
    b778:	ldrh	w3, [x0, #5936]
    b77c:	add	x7, x5, #0x1
    b780:	str	x7, [x0, #40]
    b784:	lsr	w3, w3, #8
    b788:	strb	w3, [x6, x5]
    b78c:	ldr	w7, [x0, #5940]
    b790:	ldr	w6, [x0, #5900]
    b794:	sub	w3, w9, w7
    b798:	add	w7, w17, w7
    b79c:	str	w7, [x0, #5940]
    b7a0:	asr	w4, w4, w3
    b7a4:	and	w5, w4, #0xffff
    b7a8:	sxth	w3, w4
    b7ac:	strh	w5, [x0, #5936]
    b7b0:	b	b4b4 <inflateCodesUsed@@ZLIB_1.2.9+0x11c4>
    b7b4:	add	w7, w6, w7
    b7b8:	strh	w5, [x0, #5936]
    b7bc:	str	w7, [x0, #5940]
    b7c0:	b	b678 <inflateCodesUsed@@ZLIB_1.2.9+0x1388>
    b7c4:	lsr	w5, w4, #7
    b7c8:	add	w5, w5, #0x100
    b7cc:	ldrb	w6, [x11, w5, uxtw]
    b7d0:	b	b5f0 <inflateCodesUsed@@ZLIB_1.2.9+0x1300>
    b7d4:	add	w7, w7, w17
    b7d8:	ldr	w6, [x0, #5900]
    b7dc:	strh	w5, [x0, #5936]
    b7e0:	str	w7, [x0, #5940]
    b7e4:	b	b4b4 <inflateCodesUsed@@ZLIB_1.2.9+0x11c4>
    b7e8:	add	w7, w7, w6
    b7ec:	str	w7, [x0, #5940]
    b7f0:	b	b5e0 <inflateCodesUsed@@ZLIB_1.2.9+0x12f0>
    b7f4:	add	w7, w1, w7
    b7f8:	strh	w5, [x0, #5936]
    b7fc:	ldp	x29, x30, [sp], #16
    b800:	str	w7, [x0, #5940]
    b804:	ret
    b808:	ldr	w1, [x0, #5940]
    b80c:	cmp	w1, #0x8
    b810:	b.le	b854 <inflateCodesUsed@@ZLIB_1.2.9+0x1564>
    b814:	ldr	x2, [x0, #16]
    b818:	ldr	x1, [x0, #40]
    b81c:	ldrh	w3, [x0, #5936]
    b820:	add	x4, x1, #0x1
    b824:	str	x4, [x0, #40]
    b828:	strb	w3, [x2, x1]
    b82c:	ldr	x3, [x0, #16]
    b830:	ldr	x2, [x0, #40]
    b834:	ldrh	w1, [x0, #5936]
    b838:	add	x4, x2, #0x1
    b83c:	str	x4, [x0, #40]
    b840:	lsr	w1, w1, #8
    b844:	strb	w1, [x3, x2]
    b848:	strh	wzr, [x0, #5936]
    b84c:	str	wzr, [x0, #5940]
    b850:	ret
    b854:	cmp	w1, #0x0
    b858:	b.le	b848 <inflateCodesUsed@@ZLIB_1.2.9+0x1558>
    b85c:	ldr	x2, [x0, #16]
    b860:	ldr	x1, [x0, #40]
    b864:	ldrh	w3, [x0, #5936]
    b868:	add	x4, x1, #0x1
    b86c:	str	x4, [x0, #40]
    b870:	strb	w3, [x2, x1]
    b874:	strh	wzr, [x0, #5936]
    b878:	str	wzr, [x0, #5940]
    b87c:	ret
    b880:	ldr	w1, [x0, #5940]
    b884:	cmp	w1, #0x10
    b888:	b.eq	b8c8 <inflateCodesUsed@@ZLIB_1.2.9+0x15d8>  // b.none
    b88c:	cmp	w1, #0x7
    b890:	b.le	b8c4 <inflateCodesUsed@@ZLIB_1.2.9+0x15d4>
    b894:	ldr	x2, [x0, #16]
    b898:	ldr	x1, [x0, #40]
    b89c:	ldrh	w3, [x0, #5936]
    b8a0:	add	x4, x1, #0x1
    b8a4:	str	x4, [x0, #40]
    b8a8:	strb	w3, [x2, x1]
    b8ac:	ldrh	w2, [x0, #5936]
    b8b0:	ldr	w1, [x0, #5940]
    b8b4:	lsr	w2, w2, #8
    b8b8:	sub	w1, w1, #0x8
    b8bc:	strh	w2, [x0, #5936]
    b8c0:	str	w1, [x0, #5940]
    b8c4:	ret
    b8c8:	ldr	x2, [x0, #16]
    b8cc:	ldr	x1, [x0, #40]
    b8d0:	ldrh	w3, [x0, #5936]
    b8d4:	add	x4, x1, #0x1
    b8d8:	str	x4, [x0, #40]
    b8dc:	strb	w3, [x2, x1]
    b8e0:	ldr	x3, [x0, #16]
    b8e4:	ldr	x2, [x0, #40]
    b8e8:	ldrh	w1, [x0, #5936]
    b8ec:	add	x4, x2, #0x1
    b8f0:	str	x4, [x0, #40]
    b8f4:	lsr	w1, w1, #8
    b8f8:	strb	w1, [x3, x2]
    b8fc:	strh	wzr, [x0, #5936]
    b900:	str	wzr, [x0, #5940]
    b904:	ret
    b908:	add	x6, x0, #0xd4
    b90c:	str	x6, [x0, #2904]
    b910:	mov	x1, x6
    b914:	add	x6, x0, #0xb68
    b918:	adrp	x5, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    b91c:	add	x5, x5, #0xd08
    b920:	strh	wzr, [x0, #5936]
    b924:	add	x8, x5, #0x20
    b928:	add	x3, x0, #0x9c8
    b92c:	add	x4, x0, #0xabc
    b930:	add	x2, x0, #0x54c
    b934:	stp	x5, x3, [x6]
    b938:	add	x7, x5, #0x40
    b93c:	stp	x8, x4, [x6, #24]
    b940:	str	x7, [x0, #2968]
    b944:	str	wzr, [x0, #5940]
    b948:	strh	wzr, [x1], #4
    b94c:	cmp	x1, x2
    b950:	b.ne	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x1658>  // b.any
    b954:	mov	x1, x3
    b958:	add	x2, x0, #0xa40
    b95c:	nop
    b960:	strh	wzr, [x1], #4
    b964:	cmp	x1, x2
    b968:	b.ne	b960 <inflateCodesUsed@@ZLIB_1.2.9+0x1670>  // b.any
    b96c:	mov	x1, x4
    b970:	add	x2, x0, #0xb08
    b974:	nop
    b978:	strh	wzr, [x1], #4
    b97c:	cmp	x1, x2
    b980:	b.ne	b978 <inflateCodesUsed@@ZLIB_1.2.9+0x1688>  // b.any
    b984:	mov	w1, #0x1                   	// #1
    b988:	strh	w1, [x0, #1236]
    b98c:	str	wzr, [x0, #5900]
    b990:	str	xzr, [x0, #5912]
    b994:	str	xzr, [x0, #5920]
    b998:	str	wzr, [x0, #5928]
    b99c:	ret
    b9a0:	stp	x29, x30, [sp, #-32]!
    b9a4:	and	w3, w3, #0xffff
    b9a8:	mov	x5, x1
    b9ac:	mov	x29, sp
    b9b0:	stp	x19, x20, [sp, #16]
    b9b4:	mov	x20, x2
    b9b8:	ldr	w2, [x0, #5940]
    b9bc:	ldrh	w1, [x0, #5936]
    b9c0:	mov	x19, x0
    b9c4:	cmp	w2, #0xd
    b9c8:	lsl	w0, w3, w2
    b9cc:	orr	w0, w0, w1
    b9d0:	and	w1, w0, #0xffff
    b9d4:	b.le	bac8 <inflateCodesUsed@@ZLIB_1.2.9+0x17d8>
    b9d8:	ldr	x4, [x19, #16]
    b9dc:	strh	w1, [x19, #5936]
    b9e0:	ldr	x2, [x19, #40]
    b9e4:	sxth	w0, w0
    b9e8:	mov	w1, #0x10                  	// #16
    b9ec:	add	x6, x2, #0x1
    b9f0:	str	x6, [x19, #40]
    b9f4:	strb	w0, [x4, x2]
    b9f8:	ldr	x4, [x19, #16]
    b9fc:	ldr	x2, [x19, #40]
    ba00:	ldrh	w0, [x19, #5936]
    ba04:	add	x6, x2, #0x1
    ba08:	str	x6, [x19, #40]
    ba0c:	lsr	w0, w0, #8
    ba10:	strb	w0, [x4, x2]
    ba14:	ldr	w0, [x19, #5940]
    ba18:	sub	w1, w1, w0
    ba1c:	sub	w0, w0, #0xd
    ba20:	str	w0, [x19, #5940]
    ba24:	asr	w3, w3, w1
    ba28:	strh	w3, [x19, #5936]
    ba2c:	mov	x0, x19
    ba30:	bl	b808 <inflateCodesUsed@@ZLIB_1.2.9+0x1518>
    ba34:	ldr	x3, [x19, #16]
    ba38:	and	w2, w20, #0xff
    ba3c:	ldr	x1, [x19, #40]
    ba40:	ubfx	w7, w20, #8, #8
    ba44:	mvn	w6, w2
    ba48:	mvn	w0, w20
    ba4c:	add	x4, x1, #0x1
    ba50:	str	x4, [x19, #40]
    ba54:	strb	w2, [x3, x1]
    ba58:	mov	x1, x5
    ba5c:	ubfx	x0, x0, #8, #8
    ba60:	mov	x2, x20
    ba64:	ldr	x4, [x19, #16]
    ba68:	ldr	x3, [x19, #40]
    ba6c:	add	x5, x3, #0x1
    ba70:	str	x5, [x19, #40]
    ba74:	strb	w7, [x4, x3]
    ba78:	ldr	x4, [x19, #16]
    ba7c:	ldr	x3, [x19, #40]
    ba80:	add	x5, x3, #0x1
    ba84:	str	x5, [x19, #40]
    ba88:	strb	w6, [x4, x3]
    ba8c:	ldr	x4, [x19, #16]
    ba90:	ldr	x3, [x19, #40]
    ba94:	add	x5, x3, #0x1
    ba98:	str	x5, [x19, #40]
    ba9c:	strb	w0, [x4, x3]
    baa0:	ldr	x3, [x19, #16]
    baa4:	ldr	x0, [x19, #40]
    baa8:	add	x0, x3, x0
    baac:	bl	23a0 <memcpy@plt>
    bab0:	ldr	x2, [x19, #40]
    bab4:	add	x2, x2, x20
    bab8:	str	x2, [x19, #40]
    babc:	ldp	x19, x20, [sp, #16]
    bac0:	ldp	x29, x30, [sp], #32
    bac4:	ret
    bac8:	add	w2, w2, #0x3
    bacc:	strh	w1, [x19, #5936]
    bad0:	str	w2, [x19, #5940]
    bad4:	b	ba2c <inflateCodesUsed@@ZLIB_1.2.9+0x173c>
    bad8:	b	b880 <inflateCodesUsed@@ZLIB_1.2.9+0x1590>
    badc:	nop
    bae0:	ldr	w1, [x0, #5940]
    bae4:	mov	w3, #0x2                   	// #2
    bae8:	ldrh	w4, [x0, #5936]
    baec:	cmp	w1, #0xd
    baf0:	lsl	w2, w3, w1
    baf4:	orr	w2, w2, w4
    baf8:	and	w4, w2, #0xffff
    bafc:	sxth	w2, w2
    bb00:	b.le	bbb0 <inflateCodesUsed@@ZLIB_1.2.9+0x18c0>
    bb04:	ldr	x5, [x0, #16]
    bb08:	strh	w4, [x0, #5936]
    bb0c:	ldr	x1, [x0, #40]
    bb10:	mov	w4, #0x10                  	// #16
    bb14:	add	x6, x1, #0x1
    bb18:	str	x6, [x0, #40]
    bb1c:	strb	w2, [x5, x1]
    bb20:	ldr	x5, [x0, #16]
    bb24:	ldr	x2, [x0, #40]
    bb28:	ldrh	w1, [x0, #5936]
    bb2c:	add	x6, x2, #0x1
    bb30:	str	x6, [x0, #40]
    bb34:	lsr	w1, w1, #8
    bb38:	strb	w1, [x5, x2]
    bb3c:	ldr	w1, [x0, #5940]
    bb40:	sub	w2, w4, w1
    bb44:	sub	w1, w1, #0xd
    bb48:	str	w1, [x0, #5940]
    bb4c:	asr	w3, w3, w2
    bb50:	strh	w3, [x0, #5936]
    bb54:	cmp	w1, #0x9
    bb58:	b.le	bba4 <inflateCodesUsed@@ZLIB_1.2.9+0x18b4>
    bb5c:	ldr	x2, [x0, #16]
    bb60:	ldr	x1, [x0, #40]
    bb64:	ldrh	w3, [x0, #5936]
    bb68:	add	x4, x1, #0x1
    bb6c:	str	x4, [x0, #40]
    bb70:	strb	w3, [x2, x1]
    bb74:	ldr	x3, [x0, #16]
    bb78:	ldr	x2, [x0, #40]
    bb7c:	ldrh	w1, [x0, #5936]
    bb80:	add	x4, x2, #0x1
    bb84:	str	x4, [x0, #40]
    bb88:	lsr	w1, w1, #8
    bb8c:	strb	w1, [x3, x2]
    bb90:	strh	wzr, [x0, #5936]
    bb94:	ldr	w1, [x0, #5940]
    bb98:	sub	w1, w1, #0x9
    bb9c:	str	w1, [x0, #5940]
    bba0:	b	b880 <inflateCodesUsed@@ZLIB_1.2.9+0x1590>
    bba4:	add	w1, w1, #0x7
    bba8:	str	w1, [x0, #5940]
    bbac:	b	b880 <inflateCodesUsed@@ZLIB_1.2.9+0x1590>
    bbb0:	add	w1, w1, #0x3
    bbb4:	strh	w4, [x0, #5936]
    bbb8:	str	w1, [x0, #5940]
    bbbc:	b	bb54 <inflateCodesUsed@@ZLIB_1.2.9+0x1864>
    bbc0:	stp	x29, x30, [sp, #-80]!
    bbc4:	cmp	x1, #0x0
    bbc8:	mov	x29, sp
    bbcc:	stp	x19, x20, [sp, #16]
    bbd0:	stp	x21, x22, [sp, #32]
    bbd4:	mov	x21, x0
    bbd8:	ldr	w0, [x0, #196]
    bbdc:	stp	x23, x24, [sp, #48]
    bbe0:	mov	w22, w3
    bbe4:	mov	x24, x1
    bbe8:	stp	x25, x26, [sp, #64]
    bbec:	mov	x23, x2
    bbf0:	cset	w26, ne  // ne = any
    bbf4:	add	x25, x2, #0x4
    bbf8:	cmp	w0, #0x0
    bbfc:	b.le	bfa4 <inflateCodesUsed@@ZLIB_1.2.9+0x1cb4>
    bc00:	mov	x19, x21
    bc04:	ldr	x2, [x19], #212
    bc08:	ldr	w0, [x2, #88]
    bc0c:	cmp	w0, #0x2
    bc10:	b.eq	bf34 <inflateCodesUsed@@ZLIB_1.2.9+0x1c44>  // b.none
    bc14:	add	x1, x21, #0xb58
    bc18:	mov	x0, x21
    bc1c:	bl	a8b8 <inflateCodesUsed@@ZLIB_1.2.9+0x5c8>
    bc20:	add	x20, x21, #0x9c8
    bc24:	add	x1, x21, #0xb70
    bc28:	mov	x0, x21
    bc2c:	bl	a8b8 <inflateCodesUsed@@ZLIB_1.2.9+0x5c8>
    bc30:	ldr	w2, [x21, #2912]
    bc34:	mov	x0, x21
    bc38:	mov	x1, x19
    bc3c:	bl	ad98 <inflateCodesUsed@@ZLIB_1.2.9+0xaa8>
    bc40:	ldr	w2, [x21, #2936]
    bc44:	mov	x1, x20
    bc48:	bl	ad98 <inflateCodesUsed@@ZLIB_1.2.9+0xaa8>
    bc4c:	add	x1, x21, #0xb88
    bc50:	bl	a8b8 <inflateCodesUsed@@ZLIB_1.2.9+0x5c8>
    bc54:	adrp	x5, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    bc58:	add	x5, x5, #0xe78
    bc5c:	add	x5, x5, #0x4e0
    bc60:	mov	x0, #0x12                  	// #18
    bc64:	mov	w4, #0xf                   	// #15
    bc68:	b	bc70 <inflateCodesUsed@@ZLIB_1.2.9+0x1980>
    bc6c:	ldrb	w4, [x0, x5]
    bc70:	add	x4, x21, w4, sxtw #2
    bc74:	sxtw	x3, w0
    bc78:	sub	x0, x0, #0x1
    bc7c:	cmp	x0, #0x2
    bc80:	ldrh	w4, [x4, #2750]
    bc84:	cbnz	w4, c0e4 <inflateCodesUsed@@ZLIB_1.2.9+0x1df4>
    bc88:	b.ne	bc6c <inflateCodesUsed@@ZLIB_1.2.9+0x197c>  // b.any
    bc8c:	sxtw	x3, w0
    bc90:	mov	x1, #0x9                   	// #9
    bc94:	ldr	x0, [x21, #5912]
    bc98:	ldr	x2, [x21, #5920]
    bc9c:	add	x0, x0, #0xe
    bca0:	add	x0, x0, x1
    bca4:	str	x0, [x21, #5912]
    bca8:	add	x2, x2, #0xa
    bcac:	add	x0, x0, #0xa
    bcb0:	lsr	x2, x2, #3
    bcb4:	lsr	x4, x0, #3
    bcb8:	cmp	x4, x2
    bcbc:	csel	x0, x4, x2, ls  // ls = plast
    bcc0:	cmp	w26, #0x0
    bcc4:	ccmp	x0, x25, #0x0, ne  // ne = any
    bcc8:	b.cs	c0f4 <inflateCodesUsed@@ZLIB_1.2.9+0x1e04>  // b.hs, b.nlast
    bccc:	ldr	w1, [x21, #200]
    bcd0:	ldrsh	w0, [x21, #5936]
    bcd4:	cmp	w1, #0x4
    bcd8:	ldr	w1, [x21, #5940]
    bcdc:	ccmp	x4, x2, #0x2, ne  // ne = any
    bce0:	b.cs	bfcc <inflateCodesUsed@@ZLIB_1.2.9+0x1cdc>  // b.hs, b.nlast
    bce4:	add	w2, w22, #0x4
    bce8:	cmp	w1, #0xd
    bcec:	b.gt	c128 <inflateCodesUsed@@ZLIB_1.2.9+0x1e38>
    bcf0:	and	w2, w2, #0xffff
    bcf4:	add	w4, w1, #0x3
    bcf8:	str	w4, [x21, #5940]
    bcfc:	cmp	w4, #0xb
    bd00:	lsl	w1, w2, w1
    bd04:	ldr	w2, [x21, #2912]
    bd08:	orr	w0, w0, w1
    bd0c:	ldr	w15, [x21, #2936]
    bd10:	sub	w5, w2, #0x100
    bd14:	sxth	w0, w0
    bd18:	b.le	c19c <inflateCodesUsed@@ZLIB_1.2.9+0x1eac>
    bd1c:	and	w5, w5, #0xffff
    bd20:	mov	w6, #0x10                  	// #16
    bd24:	ldr	x7, [x21, #16]
    bd28:	lsl	w4, w5, w4
    bd2c:	ldr	x1, [x21, #40]
    bd30:	orr	w0, w0, w4
    bd34:	add	x4, x1, #0x1
    bd38:	sxth	w0, w0
    bd3c:	str	x4, [x21, #40]
    bd40:	strh	w0, [x21, #5936]
    bd44:	strb	w0, [x7, x1]
    bd48:	ldr	x4, [x21, #16]
    bd4c:	ldr	x1, [x21, #40]
    bd50:	ldrh	w0, [x21, #5936]
    bd54:	add	x7, x1, #0x1
    bd58:	str	x7, [x21, #40]
    bd5c:	lsr	w0, w0, #8
    bd60:	strb	w0, [x4, x1]
    bd64:	ldr	w1, [x21, #5940]
    bd68:	sub	w0, w6, w1
    bd6c:	sub	w1, w1, #0xb
    bd70:	str	w1, [x21, #5940]
    bd74:	cmp	w1, #0xb
    bd78:	asr	w0, w5, w0
    bd7c:	sxth	w0, w0
    bd80:	b.le	c1bc <inflateCodesUsed@@ZLIB_1.2.9+0x1ecc>
    bd84:	and	w5, w15, #0xffff
    bd88:	mov	w6, #0x10                  	// #16
    bd8c:	ldr	x7, [x21, #16]
    bd90:	lsl	w1, w5, w1
    bd94:	ldr	x4, [x21, #40]
    bd98:	orr	w0, w0, w1
    bd9c:	add	x1, x4, #0x1
    bda0:	sxth	w0, w0
    bda4:	str	x1, [x21, #40]
    bda8:	strh	w0, [x21, #5936]
    bdac:	strb	w0, [x7, x4]
    bdb0:	ldr	x4, [x21, #16]
    bdb4:	ldr	x1, [x21, #40]
    bdb8:	ldrh	w0, [x21, #5936]
    bdbc:	add	x7, x1, #0x1
    bdc0:	str	x7, [x21, #40]
    bdc4:	lsr	w0, w0, #8
    bdc8:	strb	w0, [x4, x1]
    bdcc:	ldr	w4, [x21, #5940]
    bdd0:	sub	w1, w6, w4
    bdd4:	sub	w4, w4, #0xb
    bdd8:	str	w4, [x21, #5940]
    bddc:	cmp	w4, #0xc
    bde0:	asr	w1, w5, w1
    bde4:	sub	w5, w3, #0x3
    bde8:	sxth	w1, w1
    bdec:	b.le	c1e0 <inflateCodesUsed@@ZLIB_1.2.9+0x1ef0>
    bdf0:	and	w5, w5, #0xffff
    bdf4:	mov	w6, #0x10                  	// #16
    bdf8:	ldr	x7, [x21, #16]
    bdfc:	lsl	w0, w5, w4
    be00:	ldr	x4, [x21, #40]
    be04:	orr	w0, w1, w0
    be08:	add	x1, x4, #0x1
    be0c:	sxth	w0, w0
    be10:	str	x1, [x21, #40]
    be14:	strh	w0, [x21, #5936]
    be18:	strb	w0, [x7, x4]
    be1c:	ldr	x4, [x21, #16]
    be20:	ldr	x1, [x21, #40]
    be24:	ldrh	w0, [x21, #5936]
    be28:	add	x7, x1, #0x1
    be2c:	str	x7, [x21, #40]
    be30:	lsr	w0, w0, #8
    be34:	strb	w0, [x4, x1]
    be38:	ldr	w0, [x21, #5940]
    be3c:	sub	w4, w6, w0
    be40:	sub	w0, w0, #0xc
    be44:	str	w0, [x21, #5940]
    be48:	asr	w4, w5, w4
    be4c:	and	w4, w4, #0xffff
    be50:	adrp	x6, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    be54:	add	x6, x6, #0xe78
    be58:	mov	w1, #0x10                  	// #16
    be5c:	add	x6, x6, #0x4e0
    be60:	mov	w8, w1
    be64:	mov	x5, #0x0                   	// #0
    be68:	b	bed4 <inflateCodesUsed@@ZLIB_1.2.9+0x1be4>
    be6c:	strh	w4, [x21, #5936]
    be70:	cmp	x3, x5
    be74:	ldr	x7, [x21, #16]
    be78:	ldr	x4, [x21, #40]
    be7c:	add	x9, x4, #0x1
    be80:	str	x9, [x21, #40]
    be84:	strb	w0, [x7, x4]
    be88:	ldr	x7, [x21, #16]
    be8c:	ldr	x4, [x21, #40]
    be90:	ldrh	w0, [x21, #5936]
    be94:	add	x9, x4, #0x1
    be98:	str	x9, [x21, #40]
    be9c:	lsr	w0, w0, #8
    bea0:	strb	w0, [x7, x4]
    bea4:	ldr	w0, [x21, #5940]
    bea8:	sub	w4, w8, w0
    beac:	sub	w0, w0, #0xd
    beb0:	str	w0, [x21, #5940]
    beb4:	add	x0, x5, #0x1
    beb8:	asr	w1, w1, w4
    bebc:	strh	w1, [x21, #5936]
    bec0:	b.eq	bf0c <inflateCodesUsed@@ZLIB_1.2.9+0x1c1c>  // b.none
    bec4:	ldrb	w1, [x0, x6]
    bec8:	mov	x5, x0
    becc:	ldrh	w4, [x21, #5936]
    bed0:	ldr	w0, [x21, #5940]
    bed4:	add	x1, x21, w1, sxtw #2
    bed8:	add	w7, w0, #0x3
    bedc:	cmp	w0, #0xd
    bee0:	ldrh	w1, [x1, #2750]
    bee4:	lsl	w0, w1, w0
    bee8:	orr	w0, w0, w4
    beec:	and	w4, w0, #0xffff
    bef0:	sxth	w0, w0
    bef4:	b.gt	be6c <inflateCodesUsed@@ZLIB_1.2.9+0x1b7c>
    bef8:	strh	w4, [x21, #5936]
    befc:	cmp	x3, x5
    bf00:	str	w7, [x21, #5940]
    bf04:	add	x0, x5, #0x1
    bf08:	b.ne	bec4 <inflateCodesUsed@@ZLIB_1.2.9+0x1bd4>  // b.any
    bf0c:	mov	x1, x19
    bf10:	mov	x0, x21
    bf14:	bl	aec0 <inflateCodesUsed@@ZLIB_1.2.9+0xbd0>
    bf18:	mov	w2, w15
    bf1c:	mov	x1, x20
    bf20:	bl	aec0 <inflateCodesUsed@@ZLIB_1.2.9+0xbd0>
    bf24:	mov	x2, x20
    bf28:	mov	x1, x19
    bf2c:	bl	b3e8 <inflateCodesUsed@@ZLIB_1.2.9+0x10f8>
    bf30:	b	c050 <inflateCodesUsed@@ZLIB_1.2.9+0x1d60>
    bf34:	mov	x4, #0xc07f                	// #49279
    bf38:	mov	x0, x19
    bf3c:	add	x3, x21, #0x154
    bf40:	movk	x4, #0xf3ff, lsl #16
    bf44:	nop
    bf48:	tbz	w4, #0, bf54 <inflateCodesUsed@@ZLIB_1.2.9+0x1c64>
    bf4c:	ldrh	w1, [x0]
    bf50:	cbnz	w1, c1fc <inflateCodesUsed@@ZLIB_1.2.9+0x1f0c>
    bf54:	add	x0, x0, #0x4
    bf58:	lsr	x4, x4, #1
    bf5c:	cmp	x3, x0
    bf60:	b.ne	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0x1c58>  // b.any
    bf64:	ldr	x1, [x21, #248]
    bf68:	mov	w0, #0x1                   	// #1
    bf6c:	tst	x1, #0xffff0000ffff
    bf70:	b.ne	bf9c <inflateCodesUsed@@ZLIB_1.2.9+0x1cac>  // b.any
    bf74:	ldrh	w1, [x21, #264]
    bf78:	cbnz	w1, bf9c <inflateCodesUsed@@ZLIB_1.2.9+0x1cac>
    bf7c:	add	x1, x21, #0x4d4
    bf80:	b	bf88 <inflateCodesUsed@@ZLIB_1.2.9+0x1c98>
    bf84:	b.eq	bf9c <inflateCodesUsed@@ZLIB_1.2.9+0x1cac>  // b.none
    bf88:	ldrh	w0, [x3]
    bf8c:	add	x3, x3, #0x4
    bf90:	cmp	x1, x3
    bf94:	cbz	w0, bf84 <inflateCodesUsed@@ZLIB_1.2.9+0x1c94>
    bf98:	mov	w0, #0x1                   	// #1
    bf9c:	str	w0, [x2, #88]
    bfa0:	b	bc14 <inflateCodesUsed@@ZLIB_1.2.9+0x1924>
    bfa4:	cmp	w26, #0x0
    bfa8:	add	x0, x2, #0x5
    bfac:	ccmp	x0, x25, #0x0, ne  // ne = any
    bfb0:	add	x19, x21, #0xd4
    bfb4:	add	x20, x21, #0x9c8
    bfb8:	b.cs	c0f4 <inflateCodesUsed@@ZLIB_1.2.9+0x1e04>  // b.hs, b.nlast
    bfbc:	ldrsh	w0, [x21, #5936]
    bfc0:	add	x19, x21, #0xd4
    bfc4:	ldr	w1, [x21, #5940]
    bfc8:	add	x20, x21, #0x9c8
    bfcc:	add	w2, w22, #0x2
    bfd0:	cmp	w1, #0xd
    bfd4:	b.le	c10c <inflateCodesUsed@@ZLIB_1.2.9+0x1e1c>
    bfd8:	and	w2, w2, #0xffff
    bfdc:	mov	w3, #0x10                  	// #16
    bfe0:	ldr	x5, [x21, #16]
    bfe4:	lsl	w1, w2, w1
    bfe8:	ldr	x4, [x21, #40]
    bfec:	orr	w0, w0, w1
    bff0:	add	x1, x4, #0x1
    bff4:	sxth	w0, w0
    bff8:	str	x1, [x21, #40]
    bffc:	strh	w0, [x21, #5936]
    c000:	strb	w0, [x5, x4]
    c004:	ldr	x4, [x21, #16]
    c008:	ldr	x1, [x21, #40]
    c00c:	ldrh	w0, [x21, #5936]
    c010:	add	x5, x1, #0x1
    c014:	str	x5, [x21, #40]
    c018:	lsr	w0, w0, #8
    c01c:	strb	w0, [x4, x1]
    c020:	ldr	w0, [x21, #5940]
    c024:	sub	w1, w3, w0
    c028:	sub	w0, w0, #0xd
    c02c:	str	w0, [x21, #5940]
    c030:	asr	w2, w2, w1
    c034:	strh	w2, [x21, #5936]
    c038:	adrp	x1, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    c03c:	add	x1, x1, #0xe78
    c040:	add	x2, x1, #0x4f8
    c044:	mov	x0, x21
    c048:	add	x1, x1, #0x570
    c04c:	bl	b3e8 <inflateCodesUsed@@ZLIB_1.2.9+0x10f8>
    c050:	mov	x1, x19
    c054:	add	x2, x21, #0x54c
    c058:	strh	wzr, [x1], #4
    c05c:	cmp	x2, x1
    c060:	b.ne	c058 <inflateCodesUsed@@ZLIB_1.2.9+0x1d68>  // b.any
    c064:	mov	x1, x20
    c068:	add	x0, x21, #0xa40
    c06c:	nop
    c070:	strh	wzr, [x1], #4
    c074:	cmp	x0, x1
    c078:	b.ne	c070 <inflateCodesUsed@@ZLIB_1.2.9+0x1d80>  // b.any
    c07c:	add	x0, x21, #0xabc
    c080:	add	x1, x21, #0xb08
    c084:	nop
    c088:	strh	wzr, [x0], #4
    c08c:	cmp	x1, x0
    c090:	b.ne	c088 <inflateCodesUsed@@ZLIB_1.2.9+0x1d98>  // b.any
    c094:	mov	w0, #0x1                   	// #1
    c098:	strh	w0, [x21, #1236]
    c09c:	str	wzr, [x21, #5900]
    c0a0:	str	xzr, [x21, #5912]
    c0a4:	str	xzr, [x21, #5920]
    c0a8:	str	wzr, [x21, #5928]
    c0ac:	cbnz	w22, c0c8 <inflateCodesUsed@@ZLIB_1.2.9+0x1dd8>
    c0b0:	ldp	x19, x20, [sp, #16]
    c0b4:	ldp	x21, x22, [sp, #32]
    c0b8:	ldp	x23, x24, [sp, #48]
    c0bc:	ldp	x25, x26, [sp, #64]
    c0c0:	ldp	x29, x30, [sp], #80
    c0c4:	ret
    c0c8:	mov	x0, x21
    c0cc:	ldp	x19, x20, [sp, #16]
    c0d0:	ldp	x21, x22, [sp, #32]
    c0d4:	ldp	x23, x24, [sp, #48]
    c0d8:	ldp	x25, x26, [sp, #64]
    c0dc:	ldp	x29, x30, [sp], #80
    c0e0:	b	b808 <inflateCodesUsed@@ZLIB_1.2.9+0x1518>
    c0e4:	sxtw	x0, w3
    c0e8:	add	x0, x0, #0x1
    c0ec:	add	x1, x0, x0, lsl #1
    c0f0:	b	bc94 <inflateCodesUsed@@ZLIB_1.2.9+0x19a4>
    c0f4:	mov	x2, x23
    c0f8:	mov	x1, x24
    c0fc:	mov	w3, w22
    c100:	mov	x0, x21
    c104:	bl	b9a0 <inflateCodesUsed@@ZLIB_1.2.9+0x16b0>
    c108:	b	c050 <inflateCodesUsed@@ZLIB_1.2.9+0x1d60>
    c10c:	and	w2, w2, #0xffff
    c110:	add	w3, w1, #0x3
    c114:	str	w3, [x21, #5940]
    c118:	lsl	w1, w2, w1
    c11c:	orr	w0, w0, w1
    c120:	strh	w0, [x21, #5936]
    c124:	b	c038 <inflateCodesUsed@@ZLIB_1.2.9+0x1d48>
    c128:	and	w2, w2, #0xffff
    c12c:	mov	w5, #0x10                  	// #16
    c130:	ldr	x6, [x21, #16]
    c134:	lsl	w1, w2, w1
    c138:	ldr	x4, [x21, #40]
    c13c:	orr	w0, w0, w1
    c140:	add	x1, x4, #0x1
    c144:	sxth	w0, w0
    c148:	str	x1, [x21, #40]
    c14c:	strh	w0, [x21, #5936]
    c150:	strb	w0, [x6, x4]
    c154:	ldr	x4, [x21, #16]
    c158:	ldr	x1, [x21, #40]
    c15c:	ldrh	w0, [x21, #5936]
    c160:	add	x6, x1, #0x1
    c164:	str	x6, [x21, #40]
    c168:	lsr	w0, w0, #8
    c16c:	strb	w0, [x4, x1]
    c170:	ldr	w4, [x21, #5940]
    c174:	ldr	w15, [x21, #2936]
    c178:	sub	w0, w5, w4
    c17c:	sub	w4, w4, #0xd
    c180:	str	w4, [x21, #5940]
    c184:	cmp	w4, #0xb
    c188:	asr	w0, w2, w0
    c18c:	ldr	w2, [x21, #2912]
    c190:	sxth	w0, w0
    c194:	sub	w5, w2, #0x100
    c198:	b.gt	bd1c <inflateCodesUsed@@ZLIB_1.2.9+0x1a2c>
    c19c:	and	w5, w5, #0xffff
    c1a0:	add	w1, w4, #0x5
    c1a4:	str	w1, [x21, #5940]
    c1a8:	cmp	w1, #0xb
    c1ac:	lsl	w4, w5, w4
    c1b0:	orr	w0, w0, w4
    c1b4:	sxth	w0, w0
    c1b8:	b.gt	bd84 <inflateCodesUsed@@ZLIB_1.2.9+0x1a94>
    c1bc:	and	w5, w15, #0xffff
    c1c0:	add	w4, w1, #0x5
    c1c4:	str	w4, [x21, #5940]
    c1c8:	cmp	w4, #0xc
    c1cc:	lsl	w1, w5, w1
    c1d0:	orr	w0, w0, w1
    c1d4:	sub	w5, w3, #0x3
    c1d8:	sxth	w1, w0
    c1dc:	b.gt	bdf0 <inflateCodesUsed@@ZLIB_1.2.9+0x1b00>
    c1e0:	and	w5, w5, #0xffff
    c1e4:	add	w0, w4, #0x4
    c1e8:	str	w0, [x21, #5940]
    c1ec:	lsl	w4, w5, w4
    c1f0:	orr	w1, w1, w4
    c1f4:	and	w4, w1, #0xffff
    c1f8:	b	be50 <inflateCodesUsed@@ZLIB_1.2.9+0x1b60>
    c1fc:	mov	w0, #0x0                   	// #0
    c200:	str	w0, [x2, #88]
    c204:	b	bc14 <inflateCodesUsed@@ZLIB_1.2.9+0x1924>
    c208:	ldr	w3, [x0, #5900]
    c20c:	ldr	x6, [x0, #5904]
    c210:	add	w5, w3, #0x1
    c214:	ldr	x4, [x0, #5888]
    c218:	strh	w1, [x6, w3, uxtw #1]
    c21c:	str	w5, [x0, #5900]
    c220:	strb	w2, [x4, w3, uxtw]
    c224:	cbnz	w1, c250 <inflateCodesUsed@@ZLIB_1.2.9+0x1f60>
    c228:	add	x2, x0, w2, uxtw #2
    c22c:	ldrh	w1, [x2, #212]
    c230:	add	w1, w1, #0x1
    c234:	strh	w1, [x2, #212]
    c238:	ldr	w1, [x0, #5896]
    c23c:	ldr	w2, [x0, #5900]
    c240:	sub	w0, w1, #0x1
    c244:	cmp	w0, w2
    c248:	cset	w0, eq  // eq = none
    c24c:	ret
    c250:	adrp	x3, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x2788>
    c254:	add	x3, x3, #0xe78
    c258:	ldr	w4, [x0, #5928]
    c25c:	sub	w1, w1, #0x1
    c260:	cmp	w1, #0xff
    c264:	ldrb	w2, [x3, w2, uxtw]
    c268:	add	w4, w4, #0x1
    c26c:	str	w4, [x0, #5928]
    c270:	add	x2, x0, x2, lsl #2
    c274:	ldrh	w4, [x2, #1240]
    c278:	add	w4, w4, #0x1
    c27c:	strh	w4, [x2, #1240]
    c280:	b.ls	c2bc <inflateCodesUsed@@ZLIB_1.2.9+0x1fcc>  // b.plast
    c284:	lsr	w1, w1, #7
    c288:	add	x3, x3, #0x1f0
    c28c:	add	w1, w1, #0x100
    c290:	ldrb	w1, [x3, w1, uxtw]
    c294:	add	x1, x0, w1, sxtw #2
    c298:	ldrh	w2, [x1, #2504]
    c29c:	add	w2, w2, #0x1
    c2a0:	strh	w2, [x1, #2504]
    c2a4:	ldr	w1, [x0, #5896]
    c2a8:	ldr	w2, [x0, #5900]
    c2ac:	sub	w0, w1, #0x1
    c2b0:	cmp	w0, w2
    c2b4:	cset	w0, eq  // eq = none
    c2b8:	ret
    c2bc:	add	x3, x3, #0x1f0
    c2c0:	ldrb	w1, [x3, w1, uxtw]
    c2c4:	b	c294 <inflateCodesUsed@@ZLIB_1.2.9+0x1fa4>

000000000000c2c8 <zlibVersion@@Base>:
    c2c8:	adrp	x0, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    c2cc:	add	x0, x0, #0x8b8
    c2d0:	ret
    c2d4:	nop

000000000000c2d8 <zlibCompileFlags@@ZLIB_1.2.0.2>:
    c2d8:	mov	x0, #0xa9                  	// #169
    c2dc:	ret

000000000000c2e0 <zError@@Base>:
    c2e0:	adrp	x1, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x15788>
    c2e4:	mov	w2, #0x2                   	// #2
    c2e8:	sub	w2, w2, w0
    c2ec:	ldr	x1, [x1, #4056]
    c2f0:	ldr	x0, [x1, w2, sxtw #3]
    c2f4:	ret
    c2f8:	mul	w0, w1, w2
    c2fc:	b	2460 <malloc@plt>
    c300:	mov	x0, x1
    c304:	b	2570 <free@plt>

000000000000c308 <compress2@@Base>:
    c308:	stp	x29, x30, [sp, #-192]!
    c30c:	mov	x29, sp
    c310:	stp	x23, x24, [sp, #48]
    c314:	mov	x23, x1
    c318:	mov	x24, x2
    c31c:	stp	x19, x20, [sp, #16]
    c320:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    c324:	mov	x19, x0
    c328:	stp	x21, x22, [sp, #32]
    c32c:	mov	x20, x3
    c330:	mov	w1, w4
    c334:	ldr	x22, [x23]
    c338:	str	x25, [sp, #64]
    c33c:	str	xzr, [x23]
    c340:	add	x25, sp, #0x50
    c344:	add	x2, x2, #0x8b8
    c348:	mov	x0, x25
    c34c:	mov	w3, #0x70                  	// #112
    c350:	stp	xzr, xzr, [sp, #144]
    c354:	str	xzr, [sp, #160]
    c358:	bl	24f0 <deflateInit_@plt>
    c35c:	cbnz	w0, c3e8 <compress2@@Base+0xe0>
    c360:	mov	w1, #0x0                   	// #0
    c364:	mov	w3, #0x0                   	// #0
    c368:	mov	x21, #0xffffffff            	// #4294967295
    c36c:	str	x24, [sp, #80]
    c370:	str	wzr, [sp, #88]
    c374:	str	x19, [sp, #104]
    c378:	str	wzr, [sp, #112]
    c37c:	nop
    c380:	cmp	x22, x21
    c384:	mov	x0, x25
    c388:	csel	x4, x22, x21, ls  // ls = plast
    c38c:	cmp	x20, x21
    c390:	csel	x2, x20, x21, ls  // ls = plast
    c394:	cbnz	w3, c3a0 <compress2@@Base+0x98>
    c398:	sub	x22, x22, x4
    c39c:	str	w4, [sp, #112]
    c3a0:	cbnz	w1, c3ac <compress2@@Base+0xa4>
    c3a4:	sub	x20, x20, x2
    c3a8:	str	w2, [sp, #88]
    c3ac:	cmp	x20, #0x0
    c3b0:	cset	w1, eq  // eq = none
    c3b4:	lsl	w1, w1, #2
    c3b8:	bl	2490 <deflate@plt>
    c3bc:	mov	w19, w0
    c3c0:	cbnz	w0, c3d0 <compress2@@Base+0xc8>
    c3c4:	ldr	w1, [sp, #88]
    c3c8:	ldr	w3, [sp, #112]
    c3cc:	b	c380 <compress2@@Base+0x78>
    c3d0:	ldr	x0, [sp, #120]
    c3d4:	str	x0, [x23]
    c3d8:	mov	x0, x25
    c3dc:	bl	2590 <deflateEnd@plt>
    c3e0:	cmp	w19, #0x1
    c3e4:	csel	w0, wzr, w19, eq  // eq = none
    c3e8:	ldp	x19, x20, [sp, #16]
    c3ec:	ldp	x21, x22, [sp, #32]
    c3f0:	ldp	x23, x24, [sp, #48]
    c3f4:	ldr	x25, [sp, #64]
    c3f8:	ldp	x29, x30, [sp], #192
    c3fc:	ret

000000000000c400 <compress@@Base>:
    c400:	mov	w4, #0xffffffff            	// #-1
    c404:	b	25d0 <compress2@plt>

000000000000c408 <compressBound@@ZLIB_1.2.0>:
    c408:	lsr	x1, x0, #14
    c40c:	add	x2, x0, #0xd
    c410:	add	x1, x1, x0, lsr #12
    c414:	add	x1, x1, x2
    c418:	add	x0, x1, x0, lsr #25
    c41c:	ret

000000000000c420 <uncompress2@@ZLIB_1.2.9>:
    c420:	stp	x29, x30, [sp, #-224]!
    c424:	mov	x29, sp
    c428:	stp	x23, x24, [sp, #48]
    c42c:	mov	x24, x3
    c430:	mov	x3, x2
    c434:	stp	x21, x22, [sp, #32]
    c438:	ldr	x21, [x1]
    c43c:	stp	x25, x26, [sp, #64]
    c440:	mov	x25, x1
    c444:	ldr	x22, [x24]
    c448:	str	x27, [sp, #80]
    c44c:	cbz	x21, c550 <uncompress2@@ZLIB_1.2.9+0x130>
    c450:	mov	x26, x0
    c454:	str	xzr, [x1]
    c458:	add	x27, sp, #0x70
    c45c:	adrp	x1, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    c460:	mov	x0, x27
    c464:	add	x1, x1, #0x8b8
    c468:	mov	w2, #0x70                  	// #112
    c46c:	str	x3, [sp, #112]
    c470:	str	wzr, [sp, #120]
    c474:	stp	xzr, xzr, [sp, #176]
    c478:	str	xzr, [sp, #192]
    c47c:	bl	25c0 <inflateInit_@plt>
    c480:	mov	w23, w0
    c484:	cbnz	w0, c534 <uncompress2@@ZLIB_1.2.9+0x114>
    c488:	mov	w2, #0x0                   	// #0
    c48c:	stp	x19, x20, [sp, #16]
    c490:	mov	x20, #0xffffffff            	// #4294967295
    c494:	str	x26, [sp, #136]
    c498:	str	wzr, [sp, #144]
    c49c:	b	c4a4 <uncompress2@@ZLIB_1.2.9+0x84>
    c4a0:	ldr	w2, [sp, #144]
    c4a4:	cmp	x21, x20
    c4a8:	mov	x0, x27
    c4ac:	csel	x4, x21, x20, ls  // ls = plast
    c4b0:	cmp	x22, x20
    c4b4:	csel	x3, x22, x20, ls  // ls = plast
    c4b8:	mov	w1, #0x0                   	// #0
    c4bc:	cbnz	w2, c4c8 <uncompress2@@ZLIB_1.2.9+0xa8>
    c4c0:	sub	x21, x21, x4
    c4c4:	str	w4, [sp, #144]
    c4c8:	ldr	w2, [sp, #120]
    c4cc:	cbnz	w2, c4d8 <uncompress2@@ZLIB_1.2.9+0xb8>
    c4d0:	sub	x22, x22, x3
    c4d4:	str	w3, [sp, #120]
    c4d8:	bl	23f0 <inflate@plt>
    c4dc:	mov	w19, w0
    c4e0:	cbz	w0, c4a0 <uncompress2@@ZLIB_1.2.9+0x80>
    c4e4:	ldr	x0, [x24]
    c4e8:	add	x1, sp, #0x68
    c4ec:	ldr	w2, [sp, #120]
    c4f0:	cmp	x26, x1
    c4f4:	ldr	x1, [sp, #152]
    c4f8:	sub	x0, x0, x2
    c4fc:	sub	x22, x0, x22
    c500:	str	x22, [x24]
    c504:	b.eq	c55c <uncompress2@@ZLIB_1.2.9+0x13c>  // b.none
    c508:	str	x1, [x25]
    c50c:	mov	x0, x27
    c510:	bl	2550 <inflateEnd@plt>
    c514:	cmp	w19, #0x1
    c518:	b.eq	c530 <uncompress2@@ZLIB_1.2.9+0x110>  // b.none
    c51c:	cmp	w19, #0x2
    c520:	b.eq	c570 <uncompress2@@ZLIB_1.2.9+0x150>  // b.none
    c524:	mov	w23, w19
    c528:	cmn	w19, #0x5
    c52c:	b.eq	c57c <uncompress2@@ZLIB_1.2.9+0x15c>  // b.none
    c530:	ldp	x19, x20, [sp, #16]
    c534:	mov	w0, w23
    c538:	ldp	x21, x22, [sp, #32]
    c53c:	ldp	x23, x24, [sp, #48]
    c540:	ldp	x25, x26, [sp, #64]
    c544:	ldr	x27, [sp, #80]
    c548:	ldp	x29, x30, [sp], #224
    c54c:	ret
    c550:	add	x26, sp, #0x68
    c554:	mov	x21, #0x1                   	// #1
    c558:	b	c458 <uncompress2@@ZLIB_1.2.9+0x38>
    c55c:	cmp	x1, #0x0
    c560:	ccmn	w19, #0x5, #0x0, ne  // ne = any
    c564:	b.ne	c50c <uncompress2@@ZLIB_1.2.9+0xec>  // b.any
    c568:	mov	x0, x27
    c56c:	bl	2550 <inflateEnd@plt>
    c570:	mov	w23, #0xfffffffd            	// #-3
    c574:	ldp	x19, x20, [sp, #16]
    c578:	b	c534 <uncompress2@@ZLIB_1.2.9+0x114>
    c57c:	ldr	w0, [sp, #144]
    c580:	cmn	x0, x21
    c584:	b.ne	c570 <uncompress2@@ZLIB_1.2.9+0x150>  // b.any
    c588:	ldp	x19, x20, [sp, #16]
    c58c:	b	c534 <uncompress2@@ZLIB_1.2.9+0x114>

000000000000c590 <uncompress@@Base>:
    c590:	stp	x29, x30, [sp, #-32]!
    c594:	mov	x29, sp
    c598:	str	x3, [sp, #24]
    c59c:	add	x3, sp, #0x18
    c5a0:	bl	2540 <uncompress2@plt>
    c5a4:	ldp	x29, x30, [sp], #32
    c5a8:	ret
    c5ac:	nop

000000000000c5b0 <gzclose@@Base>:
    c5b0:	cbz	x0, c5cc <gzclose@@Base+0x1c>
    c5b4:	ldr	w2, [x0, #24]
    c5b8:	mov	w1, #0x1c4f                	// #7247
    c5bc:	cmp	w2, w1
    c5c0:	b.eq	c5c8 <gzclose@@Base+0x18>  // b.none
    c5c4:	b	2580 <gzclose_w@plt>
    c5c8:	b	2400 <gzclose_r@plt>
    c5cc:	mov	w0, #0xfffffffe            	// #-2
    c5d0:	ret
    c5d4:	nop

000000000000c5d8 <gzbuffer@@ZLIB_1.2.3.5>:
    c5d8:	mov	x2, x0
    c5dc:	cbz	x0, c61c <gzbuffer@@ZLIB_1.2.3.5+0x44>
    c5e0:	ldr	w0, [x0, #24]
    c5e4:	mov	w4, #0x1c4f                	// #7247
    c5e8:	mov	w3, #0x79b1                	// #31153
    c5ec:	cmp	w0, w4
    c5f0:	ccmp	w0, w3, #0x4, ne  // ne = any
    c5f4:	b.ne	c61c <gzbuffer@@ZLIB_1.2.3.5+0x44>  // b.any
    c5f8:	ldr	w0, [x2, #40]
    c5fc:	cbnz	w0, c61c <gzbuffer@@ZLIB_1.2.3.5+0x44>
    c600:	cmp	w1, w1, lsl #1
    c604:	b.hi	c61c <gzbuffer@@ZLIB_1.2.3.5+0x44>  // b.pmore
    c608:	cmp	w1, #0x2
    c60c:	mov	w3, #0x2                   	// #2
    c610:	csel	w1, w1, w3, cs  // cs = hs, nlast
    c614:	str	w1, [x2, #44]
    c618:	ret
    c61c:	mov	w0, #0xffffffff            	// #-1
    c620:	ret
    c624:	nop

000000000000c628 <gztell64@@ZLIB_1.2.3.3>:
    c628:	mov	x1, x0
    c62c:	cbz	x0, c660 <gztell64@@ZLIB_1.2.3.3+0x38>
    c630:	ldr	w0, [x0, #24]
    c634:	mov	w3, #0x1c4f                	// #7247
    c638:	mov	w2, #0x79b1                	// #31153
    c63c:	cmp	w0, w3
    c640:	ccmp	w0, w2, #0x4, ne  // ne = any
    c644:	b.ne	c660 <gztell64@@ZLIB_1.2.3.3+0x38>  // b.any
    c648:	ldr	w2, [x1, #104]
    c64c:	ldr	x0, [x1, #16]
    c650:	cbz	w2, c65c <gztell64@@ZLIB_1.2.3.3+0x34>
    c654:	ldr	x1, [x1, #96]
    c658:	add	x0, x0, x1
    c65c:	ret
    c660:	mov	x0, #0xffffffffffffffff    	// #-1
    c664:	ret

000000000000c668 <gztell@@Base>:
    c668:	b	24c0 <gztell64@plt>
    c66c:	nop

000000000000c670 <gzoffset64@@ZLIB_1.2.3.5>:
    c670:	cbz	x0, c6dc <gzoffset64@@ZLIB_1.2.3.5+0x6c>
    c674:	stp	x29, x30, [sp, #-32]!
    c678:	mov	w1, #0x79b1                	// #31153
    c67c:	mov	x29, sp
    c680:	stp	x19, x20, [sp, #16]
    c684:	mov	x19, x0
    c688:	ldr	w0, [x0, #24]
    c68c:	mov	w20, #0x1c4f                	// #7247
    c690:	cmp	w0, w20
    c694:	ccmp	w0, w1, #0x4, ne  // ne = any
    c698:	b.ne	c6d4 <gzoffset64@@ZLIB_1.2.3.5+0x64>  // b.any
    c69c:	ldr	w0, [x19, #28]
    c6a0:	mov	w2, #0x1                   	// #1
    c6a4:	mov	x1, #0x0                   	// #0
    c6a8:	bl	24b0 <lseek64@plt>
    c6ac:	cmn	x0, #0x1
    c6b0:	b.eq	c6d4 <gzoffset64@@ZLIB_1.2.3.5+0x64>  // b.none
    c6b4:	ldr	w1, [x19, #24]
    c6b8:	cmp	w1, w20
    c6bc:	b.ne	c6c8 <gzoffset64@@ZLIB_1.2.3.5+0x58>  // b.any
    c6c0:	ldr	w1, [x19, #128]
    c6c4:	sub	x0, x0, x1
    c6c8:	ldp	x19, x20, [sp, #16]
    c6cc:	ldp	x29, x30, [sp], #32
    c6d0:	ret
    c6d4:	mov	x0, #0xffffffffffffffff    	// #-1
    c6d8:	b	c6c8 <gzoffset64@@ZLIB_1.2.3.5+0x58>
    c6dc:	mov	x0, #0xffffffffffffffff    	// #-1
    c6e0:	ret
    c6e4:	nop

000000000000c6e8 <gzoffset@@ZLIB_1.2.3.5>:
    c6e8:	b	25b0 <gzoffset64@plt>
    c6ec:	nop

000000000000c6f0 <gzeof@@Base>:
    c6f0:	mov	x1, x0
    c6f4:	cbz	x0, c718 <gzeof@@Base+0x28>
    c6f8:	ldr	w3, [x1, #24]
    c6fc:	mov	w2, #0x1c4f                	// #7247
    c700:	mov	w0, #0x0                   	// #0
    c704:	cmp	w3, w2
    c708:	b.eq	c710 <gzeof@@Base+0x20>  // b.none
    c70c:	ret
    c710:	ldr	w0, [x1, #84]
    c714:	ret
    c718:	mov	w0, #0x0                   	// #0
    c71c:	ret

000000000000c720 <gzerror@@Base>:
    c720:	cbz	x0, c778 <gzerror@@Base+0x58>
    c724:	ldr	w2, [x0, #24]
    c728:	mov	w4, #0x1c4f                	// #7247
    c72c:	mov	w3, #0x79b1                	// #31153
    c730:	cmp	w2, w4
    c734:	ccmp	w2, w3, #0x4, ne  // ne = any
    c738:	b.ne	c778 <gzerror@@Base+0x58>  // b.any
    c73c:	ldr	w2, [x0, #108]
    c740:	cbz	x1, c74c <gzerror@@Base+0x2c>
    c744:	str	w2, [x1]
    c748:	ldr	w2, [x0, #108]
    c74c:	cmn	w2, #0x4
    c750:	b.eq	c76c <gzerror@@Base+0x4c>  // b.none
    c754:	ldr	x0, [x0, #112]
    c758:	adrp	x1, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    c75c:	add	x1, x1, #0xa18
    c760:	cmp	x0, #0x0
    c764:	csel	x0, x1, x0, eq  // eq = none
    c768:	ret
    c76c:	adrp	x0, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    c770:	add	x0, x0, #0x950
    c774:	ret
    c778:	mov	x0, #0x0                   	// #0
    c77c:	ret
    c780:	stp	x29, x30, [sp, #-48]!
    c784:	mov	x29, sp
    c788:	stp	x19, x20, [sp, #16]
    c78c:	mov	x19, x0
    c790:	mov	w20, w1
    c794:	ldr	x0, [x0, #112]
    c798:	stp	x21, x22, [sp, #32]
    c79c:	mov	x21, x2
    c7a0:	cbz	x0, c7b4 <gzerror@@Base+0x94>
    c7a4:	ldr	w1, [x19, #108]
    c7a8:	cmn	w1, #0x4
    c7ac:	b.ne	c84c <gzerror@@Base+0x12c>  // b.any
    c7b0:	str	xzr, [x19, #112]
    c7b4:	cmp	w20, #0x0
    c7b8:	ccmn	w20, #0x5, #0x4, ne  // ne = any
    c7bc:	b.eq	c7c4 <gzerror@@Base+0xa4>  // b.none
    c7c0:	str	wzr, [x19]
    c7c4:	str	w20, [x19, #108]
    c7c8:	cmp	x21, #0x0
    c7cc:	ccmn	w20, #0x4, #0x4, ne  // ne = any
    c7d0:	b.eq	c85c <gzerror@@Base+0x13c>  // b.none
    c7d4:	ldr	x22, [x19, #32]
    c7d8:	mov	x0, x22
    c7dc:	bl	23e0 <strlen@plt>
    c7e0:	mov	x20, x0
    c7e4:	mov	x0, x21
    c7e8:	bl	23e0 <strlen@plt>
    c7ec:	add	x0, x20, x0
    c7f0:	add	x0, x0, #0x3
    c7f4:	bl	2460 <malloc@plt>
    c7f8:	str	x0, [x19, #112]
    c7fc:	mov	x20, x0
    c800:	cbz	x0, c854 <gzerror@@Base+0x134>
    c804:	mov	x0, x22
    c808:	bl	23e0 <strlen@plt>
    c80c:	mov	x19, x0
    c810:	mov	x0, x21
    c814:	bl	23e0 <strlen@plt>
    c818:	add	x1, x19, x0
    c81c:	mov	x5, x21
    c820:	mov	x3, x22
    c824:	mov	x0, x20
    c828:	add	x1, x1, #0x3
    c82c:	ldp	x19, x20, [sp, #16]
    c830:	adrp	x4, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    c834:	ldp	x21, x22, [sp, #32]
    c838:	add	x4, x4, #0x960
    c83c:	ldp	x29, x30, [sp], #48
    c840:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    c844:	add	x2, x2, #0x968
    c848:	b	2450 <snprintf@plt>
    c84c:	bl	2570 <free@plt>
    c850:	b	c7b0 <gzerror@@Base+0x90>
    c854:	mov	w0, #0xfffffffc            	// #-4
    c858:	str	w0, [x19, #108]
    c85c:	ldp	x19, x20, [sp, #16]
    c860:	ldp	x21, x22, [sp, #32]
    c864:	ldp	x29, x30, [sp], #48
    c868:	ret
    c86c:	nop
    c870:	stp	x29, x30, [sp, #-64]!
    c874:	mov	x29, sp
    c878:	stp	x19, x20, [sp, #16]
    c87c:	cbz	x0, cae4 <gzerror@@Base+0x3c4>
    c880:	mov	x20, x2
    c884:	stp	x21, x22, [sp, #32]
    c888:	mov	w22, w1
    c88c:	stp	x23, x24, [sp, #48]
    c890:	mov	x24, x0
    c894:	mov	x0, #0xe8                  	// #232
    c898:	bl	2460 <malloc@plt>
    c89c:	mov	x19, x0
    c8a0:	cbz	x0, cadc <gzerror@@Base+0x3bc>
    c8a4:	ldrb	w4, [x20]
    c8a8:	mov	x1, #0x200000000000        	// #35184372088832
    c8ac:	mov	x0, #0xffffffff            	// #4294967295
    c8b0:	str	wzr, [x19, #24]
    c8b4:	str	x1, [x19, #40]
    c8b8:	mov	w21, #0x0                   	// #0
    c8bc:	str	wzr, [x19, #64]
    c8c0:	mov	w23, #0x0                   	// #0
    c8c4:	str	x0, [x19, #88]
    c8c8:	str	xzr, [x19, #112]
    c8cc:	cbz	w4, ca88 <gzerror@@Base+0x368>
    c8d0:	mov	w8, #0x1c4f                	// #7247
    c8d4:	mov	w7, #0x79b1                	// #31153
    c8d8:	mov	w6, #0x1                   	// #1
    c8dc:	mov	w3, #0x2                   	// #2
    c8e0:	mov	w1, #0x3                   	// #3
    c8e4:	mov	w0, #0x4                   	// #4
    c8e8:	b	c8f8 <gzerror@@Base+0x1d8>
    c8ec:	str	w5, [x19, #88]
    c8f0:	ldrb	w4, [x20, #1]!
    c8f4:	cbz	w4, c940 <gzerror@@Base+0x220>
    c8f8:	sub	w5, w4, #0x30
    c8fc:	and	w2, w5, #0xff
    c900:	cmp	w2, #0x9
    c904:	b.ls	c8ec <gzerror@@Base+0x1cc>  // b.plast
    c908:	cmp	w4, #0x65
    c90c:	b.eq	cad4 <gzerror@@Base+0x3b4>  // b.none
    c910:	b.hi	ca30 <gzerror@@Base+0x310>  // b.pmore
    c914:	cmp	w4, #0x52
    c918:	b.eq	cacc <gzerror@@Base+0x3ac>  // b.none
    c91c:	b.ls	ca50 <gzerror@@Base+0x330>  // b.plast
    c920:	cmp	w4, #0x54
    c924:	b.eq	cabc <gzerror@@Base+0x39c>  // b.none
    c928:	cmp	w4, #0x61
    c92c:	b.ne	c8f0 <gzerror@@Base+0x1d0>  // b.any
    c930:	ldrb	w4, [x20, #1]!
    c934:	str	w6, [x19, #24]
    c938:	cbnz	w4, c8f8 <gzerror@@Base+0x1d8>
    c93c:	nop
    c940:	ldr	w0, [x19, #24]
    c944:	cbz	w0, ca88 <gzerror@@Base+0x368>
    c948:	mov	w1, #0x1c4f                	// #7247
    c94c:	cmp	w0, w1
    c950:	b.ne	c964 <gzerror@@Base+0x244>  // b.any
    c954:	ldr	w0, [x19, #64]
    c958:	cbnz	w0, ca88 <gzerror@@Base+0x368>
    c95c:	mov	w0, #0x1                   	// #1
    c960:	str	w0, [x19, #64]
    c964:	mov	x0, x24
    c968:	bl	23e0 <strlen@plt>
    c96c:	add	x20, x0, #0x1
    c970:	mov	x0, x20
    c974:	bl	2460 <malloc@plt>
    c978:	str	x0, [x19, #32]
    c97c:	cbz	x0, ca88 <gzerror@@Base+0x368>
    c980:	mov	x1, x20
    c984:	mov	x3, x24
    c988:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    c98c:	add	x2, x2, #0x970
    c990:	bl	2450 <snprintf@plt>
    c994:	ldr	w0, [x19, #24]
    c998:	cmp	w23, #0x0
    c99c:	mov	w2, #0x80000               	// #524288
    c9a0:	mov	w1, #0x1c4f                	// #7247
    c9a4:	csel	w23, w23, w2, eq  // eq = none
    c9a8:	cmp	w0, w1
    c9ac:	b.eq	c9dc <gzerror@@Base+0x2bc>  // b.none
    c9b0:	cmp	w21, #0x0
    c9b4:	mov	w2, #0x79b1                	// #31153
    c9b8:	mov	w1, #0xc1                  	// #193
    c9bc:	mov	w3, #0x41                  	// #65
    c9c0:	csel	w1, w1, w3, ne  // ne = any
    c9c4:	cmp	w0, w2
    c9c8:	orr	w23, w23, w1
    c9cc:	mov	w2, #0x200                 	// #512
    c9d0:	mov	w1, #0x400                 	// #1024
    c9d4:	csel	w1, w1, w2, ne  // ne = any
    c9d8:	orr	w23, w23, w1
    c9dc:	tbnz	w22, #31, caf8 <gzerror@@Base+0x3d8>
    c9e0:	str	w22, [x19, #28]
    c9e4:	cmp	w0, #0x1
    c9e8:	b.eq	cb60 <gzerror@@Base+0x440>  // b.none
    c9ec:	mov	w1, #0x1c4f                	// #7247
    c9f0:	cmp	w0, w1
    c9f4:	b.eq	cb20 <gzerror@@Base+0x400>  // b.none
    c9f8:	str	wzr, [x19]
    c9fc:	str	wzr, [x19, #104]
    ca00:	mov	x0, x19
    ca04:	mov	x2, #0x0                   	// #0
    ca08:	mov	w1, #0x0                   	// #0
    ca0c:	bl	c780 <gzerror@@Base+0x60>
    ca10:	ldp	x21, x22, [sp, #32]
    ca14:	mov	x0, x19
    ca18:	ldp	x23, x24, [sp, #48]
    ca1c:	str	xzr, [x19, #16]
    ca20:	str	wzr, [x19, #128]
    ca24:	ldp	x19, x20, [sp, #16]
    ca28:	ldp	x29, x30, [sp], #64
    ca2c:	ret
    ca30:	cmp	w4, #0x72
    ca34:	b.eq	cac4 <gzerror@@Base+0x3a4>  // b.none
    ca38:	b.ls	ca68 <gzerror@@Base+0x348>  // b.plast
    ca3c:	cmp	w4, #0x77
    ca40:	b.eq	cab4 <gzerror@@Base+0x394>  // b.none
    ca44:	cmp	w4, #0x78
    ca48:	csel	w21, w21, w6, ne  // ne = any
    ca4c:	b	c8f0 <gzerror@@Base+0x1d0>
    ca50:	cmp	w4, #0x2b
    ca54:	b.eq	ca88 <gzerror@@Base+0x368>  // b.none
    ca58:	cmp	w4, #0x46
    ca5c:	b.ne	c8f0 <gzerror@@Base+0x1d0>  // b.any
    ca60:	str	w0, [x19, #92]
    ca64:	b	c8f0 <gzerror@@Base+0x1d0>
    ca68:	cmp	w4, #0x66
    ca6c:	b.eq	caac <gzerror@@Base+0x38c>  // b.none
    ca70:	cmp	w4, #0x68
    ca74:	b.ne	c8f0 <gzerror@@Base+0x1d0>  // b.any
    ca78:	str	w3, [x19, #92]
    ca7c:	b	c8f0 <gzerror@@Base+0x1d0>
    ca80:	ldr	x0, [x19, #32]
    ca84:	bl	2570 <free@plt>
    ca88:	mov	x0, x19
    ca8c:	mov	x19, #0x0                   	// #0
    ca90:	bl	2570 <free@plt>
    ca94:	mov	x0, x19
    ca98:	ldp	x19, x20, [sp, #16]
    ca9c:	ldp	x21, x22, [sp, #32]
    caa0:	ldp	x23, x24, [sp, #48]
    caa4:	ldp	x29, x30, [sp], #64
    caa8:	ret
    caac:	str	w6, [x19, #92]
    cab0:	b	c8f0 <gzerror@@Base+0x1d0>
    cab4:	str	w7, [x19, #24]
    cab8:	b	c8f0 <gzerror@@Base+0x1d0>
    cabc:	str	w6, [x19, #64]
    cac0:	b	c8f0 <gzerror@@Base+0x1d0>
    cac4:	str	w8, [x19, #24]
    cac8:	b	c8f0 <gzerror@@Base+0x1d0>
    cacc:	str	w1, [x19, #92]
    cad0:	b	c8f0 <gzerror@@Base+0x1d0>
    cad4:	mov	w23, #0x1                   	// #1
    cad8:	b	c8f0 <gzerror@@Base+0x1d0>
    cadc:	ldp	x21, x22, [sp, #32]
    cae0:	ldp	x23, x24, [sp, #48]
    cae4:	mov	x19, #0x0                   	// #0
    cae8:	mov	x0, x19
    caec:	ldp	x19, x20, [sp, #16]
    caf0:	ldp	x29, x30, [sp], #64
    caf4:	ret
    caf8:	mov	w1, w23
    cafc:	mov	x0, x24
    cb00:	mov	w2, #0x1b6                 	// #438
    cb04:	bl	2470 <open@plt>
    cb08:	str	w0, [x19, #28]
    cb0c:	mov	w22, w0
    cb10:	cmn	w0, #0x1
    cb14:	b.eq	ca80 <gzerror@@Base+0x360>  // b.none
    cb18:	ldr	w0, [x19, #24]
    cb1c:	b	c9e4 <gzerror@@Base+0x2c4>
    cb20:	ldr	w0, [x19, #28]
    cb24:	mov	x1, #0x0                   	// #0
    cb28:	mov	w2, #0x1                   	// #1
    cb2c:	bl	24b0 <lseek64@plt>
    cb30:	str	x0, [x19, #72]
    cb34:	ldr	w1, [x19, #24]
    cb38:	cmn	x0, #0x1
    cb3c:	b.ne	cb44 <gzerror@@Base+0x424>  // b.any
    cb40:	str	xzr, [x19, #72]
    cb44:	str	wzr, [x19]
    cb48:	mov	w0, #0x1c4f                	// #7247
    cb4c:	cmp	w1, w0
    cb50:	b.ne	c9fc <gzerror@@Base+0x2dc>  // b.any
    cb54:	str	wzr, [x19, #68]
    cb58:	str	xzr, [x19, #80]
    cb5c:	b	c9fc <gzerror@@Base+0x2dc>
    cb60:	mov	w0, w22
    cb64:	mov	w2, #0x2                   	// #2
    cb68:	mov	x1, #0x0                   	// #0
    cb6c:	bl	24b0 <lseek64@plt>
    cb70:	mov	w0, #0x79b1                	// #31153
    cb74:	str	wzr, [x19]
    cb78:	str	w0, [x19, #24]
    cb7c:	b	c9fc <gzerror@@Base+0x2dc>

000000000000cb80 <gzopen64@@ZLIB_1.2.3.3>:
    cb80:	mov	x2, x1
    cb84:	mov	w1, #0xffffffff            	// #-1
    cb88:	b	c870 <gzerror@@Base+0x150>
    cb8c:	nop

000000000000cb90 <gzopen@@Base>:
    cb90:	b	cb80 <gzopen64@@ZLIB_1.2.3.3>
    cb94:	nop

000000000000cb98 <gzdopen@@Base>:
    cb98:	stp	x29, x30, [sp, #-48]!
    cb9c:	cmn	w0, #0x1
    cba0:	mov	x29, sp
    cba4:	stp	x19, x20, [sp, #16]
    cba8:	b.eq	cc10 <gzdopen@@Base+0x78>  // b.none
    cbac:	mov	w19, w0
    cbb0:	mov	x0, #0x13                  	// #19
    cbb4:	str	x21, [sp, #32]
    cbb8:	mov	x21, x1
    cbbc:	bl	2460 <malloc@plt>
    cbc0:	mov	x20, x0
    cbc4:	cbz	x0, cc0c <gzdopen@@Base+0x74>
    cbc8:	mov	w3, w19
    cbcc:	mov	x1, #0x13                  	// #19
    cbd0:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    cbd4:	add	x2, x2, #0x978
    cbd8:	bl	2450 <snprintf@plt>
    cbdc:	mov	x2, x21
    cbe0:	mov	w1, w19
    cbe4:	mov	x0, x20
    cbe8:	bl	c870 <gzerror@@Base+0x150>
    cbec:	mov	x19, x0
    cbf0:	mov	x0, x20
    cbf4:	bl	2570 <free@plt>
    cbf8:	mov	x0, x19
    cbfc:	ldp	x19, x20, [sp, #16]
    cc00:	ldr	x21, [sp, #32]
    cc04:	ldp	x29, x30, [sp], #48
    cc08:	ret
    cc0c:	ldr	x21, [sp, #32]
    cc10:	mov	x19, #0x0                   	// #0
    cc14:	mov	x0, x19
    cc18:	ldp	x19, x20, [sp, #16]
    cc1c:	ldp	x29, x30, [sp], #48
    cc20:	ret
    cc24:	nop

000000000000cc28 <gzclearerr@@ZLIB_1.2.0.2>:
    cc28:	cbz	x0, cc58 <gzclearerr@@ZLIB_1.2.0.2+0x30>
    cc2c:	ldr	w1, [x0, #24]
    cc30:	mov	w2, #0x1c4f                	// #7247
    cc34:	mov	w3, #0x79b1                	// #31153
    cc38:	cmp	w1, w2
    cc3c:	ccmp	w1, w3, #0x4, ne  // ne = any
    cc40:	b.ne	cc58 <gzclearerr@@ZLIB_1.2.0.2+0x30>  // b.any
    cc44:	cmp	w1, w2
    cc48:	b.eq	cc5c <gzclearerr@@ZLIB_1.2.0.2+0x34>  // b.none
    cc4c:	mov	x2, #0x0                   	// #0
    cc50:	mov	w1, #0x0                   	// #0
    cc54:	b	c780 <gzerror@@Base+0x60>
    cc58:	ret
    cc5c:	str	xzr, [x0, #80]
    cc60:	mov	x2, #0x0                   	// #0
    cc64:	mov	w1, #0x0                   	// #0
    cc68:	b	c780 <gzerror@@Base+0x60>
    cc6c:	nop

000000000000cc70 <gzrewind@@Base>:
    cc70:	cbz	x0, cd08 <gzrewind@@Base+0x98>
    cc74:	stp	x29, x30, [sp, #-32]!
    cc78:	mov	x29, sp
    cc7c:	stp	x19, x20, [sp, #16]
    cc80:	mov	x19, x0
    cc84:	mov	w0, #0x1c4f                	// #7247
    cc88:	ldr	w20, [x19, #24]
    cc8c:	cmp	w20, w0
    cc90:	b.ne	cd00 <gzrewind@@Base+0x90>  // b.any
    cc94:	ldr	w0, [x19, #108]
    cc98:	cmp	w0, #0x0
    cc9c:	ccmn	w0, #0x5, #0x4, ne  // ne = any
    cca0:	b.ne	cd00 <gzrewind@@Base+0x90>  // b.any
    cca4:	ldr	w0, [x19, #28]
    cca8:	mov	w2, #0x0                   	// #0
    ccac:	ldr	x1, [x19, #72]
    ccb0:	bl	24b0 <lseek64@plt>
    ccb4:	cmn	x0, #0x1
    ccb8:	b.eq	cd00 <gzrewind@@Base+0x90>  // b.none
    ccbc:	ldr	w0, [x19, #24]
    ccc0:	str	wzr, [x19]
    ccc4:	cmp	w0, w20
    ccc8:	b.ne	ccd4 <gzrewind@@Base+0x64>  // b.any
    cccc:	str	wzr, [x19, #68]
    ccd0:	str	xzr, [x19, #80]
    ccd4:	str	wzr, [x19, #104]
    ccd8:	mov	x0, x19
    ccdc:	mov	x2, #0x0                   	// #0
    cce0:	mov	w1, #0x0                   	// #0
    cce4:	bl	c780 <gzerror@@Base+0x60>
    cce8:	str	xzr, [x19, #16]
    ccec:	mov	w0, #0x0                   	// #0
    ccf0:	str	wzr, [x19, #128]
    ccf4:	ldp	x19, x20, [sp, #16]
    ccf8:	ldp	x29, x30, [sp], #32
    ccfc:	ret
    cd00:	mov	w0, #0xffffffff            	// #-1
    cd04:	b	ccf4 <gzrewind@@Base+0x84>
    cd08:	mov	w0, #0xffffffff            	// #-1
    cd0c:	ret

000000000000cd10 <gzseek64@@ZLIB_1.2.3.3>:
    cd10:	cbz	x0, cea0 <gzseek64@@ZLIB_1.2.3.3+0x190>
    cd14:	stp	x29, x30, [sp, #-48]!
    cd18:	mov	x29, sp
    cd1c:	stp	x19, x20, [sp, #16]
    cd20:	mov	x19, x0
    cd24:	mov	x20, x1
    cd28:	str	x21, [sp, #32]
    cd2c:	mov	w1, #0x1c4f                	// #7247
    cd30:	ldr	w21, [x19, #24]
    cd34:	mov	w0, #0x79b1                	// #31153
    cd38:	cmp	w21, w1
    cd3c:	ccmp	w21, w0, #0x4, ne  // ne = any
    cd40:	b.ne	ce50 <gzseek64@@ZLIB_1.2.3.3+0x140>  // b.any
    cd44:	ldr	w0, [x19, #108]
    cd48:	cmp	w0, #0x0
    cd4c:	ccmn	w0, #0x5, #0x4, ne  // ne = any
    cd50:	b.ne	ce50 <gzseek64@@ZLIB_1.2.3.3+0x140>  // b.any
    cd54:	cmp	w2, #0x1
    cd58:	b.hi	ce50 <gzseek64@@ZLIB_1.2.3.3+0x140>  // b.pmore
    cd5c:	cbz	w2, cdac <gzseek64@@ZLIB_1.2.3.3+0x9c>
    cd60:	ldr	w0, [x19, #104]
    cd64:	cbz	w0, cd70 <gzseek64@@ZLIB_1.2.3.3+0x60>
    cd68:	ldr	x0, [x19, #96]
    cd6c:	add	x20, x20, x0
    cd70:	str	wzr, [x19, #104]
    cd74:	mov	w0, #0x1c4f                	// #7247
    cd78:	cmp	w21, w0
    cd7c:	b.eq	cdc4 <gzseek64@@ZLIB_1.2.3.3+0xb4>  // b.none
    cd80:	tbnz	x20, #63, ce50 <gzseek64@@ZLIB_1.2.3.3+0x140>
    cd84:	ldr	x0, [x19, #16]
    cd88:	cbz	x20, cd98 <gzseek64@@ZLIB_1.2.3.3+0x88>
    cd8c:	mov	w1, #0x1                   	// #1
    cd90:	str	x20, [x19, #96]
    cd94:	str	w1, [x19, #104]
    cd98:	add	x0, x20, x0
    cd9c:	ldp	x19, x20, [sp, #16]
    cda0:	ldr	x21, [sp, #32]
    cda4:	ldp	x29, x30, [sp], #48
    cda8:	ret
    cdac:	ldr	x0, [x19, #16]
    cdb0:	str	wzr, [x19, #104]
    cdb4:	sub	x20, x20, x0
    cdb8:	mov	w0, #0x1c4f                	// #7247
    cdbc:	cmp	w21, w0
    cdc0:	b.ne	cd80 <gzseek64@@ZLIB_1.2.3.3+0x70>  // b.any
    cdc4:	ldr	w2, [x19, #68]
    cdc8:	ldr	x0, [x19, #16]
    cdcc:	cmp	w2, #0x1
    cdd0:	b.eq	ce40 <gzseek64@@ZLIB_1.2.3.3+0x130>  // b.none
    cdd4:	tbz	x20, #63, ce00 <gzseek64@@ZLIB_1.2.3.3+0xf0>
    cdd8:	adds	x20, x20, x0
    cddc:	b.mi	ce50 <gzseek64@@ZLIB_1.2.3.3+0x140>  // b.first
    cde0:	mov	x0, x19
    cde4:	bl	25a0 <gzrewind@plt>
    cde8:	cmn	w0, #0x1
    cdec:	b.eq	ce50 <gzseek64@@ZLIB_1.2.3.3+0x140>  // b.none
    cdf0:	ldr	w1, [x19, #24]
    cdf4:	ldr	x0, [x19, #16]
    cdf8:	cmp	w1, w21
    cdfc:	b.ne	cd88 <gzseek64@@ZLIB_1.2.3.3+0x78>  // b.any
    ce00:	ldr	w2, [x19]
    ce04:	mov	w4, #0x0                   	// #0
    ce08:	mov	w1, w2
    ce0c:	cmp	x1, x20
    ce10:	mov	x3, x1
    ce14:	b.le	ce24 <gzseek64@@ZLIB_1.2.3.3+0x114>
    ce18:	sub	w4, w2, w20
    ce1c:	mov	x3, x20
    ce20:	mov	w1, w20
    ce24:	ldr	x2, [x19, #8]
    ce28:	add	x0, x0, x3
    ce2c:	sub	x20, x20, x3
    ce30:	str	w4, [x19]
    ce34:	add	x1, x2, x1
    ce38:	stp	x1, x0, [x19, #8]
    ce3c:	b	cd88 <gzseek64@@ZLIB_1.2.3.3+0x78>
    ce40:	cmn	x20, x0
    ce44:	b.pl	ce58 <gzseek64@@ZLIB_1.2.3.3+0x148>  // b.nfrst
    ce48:	tbz	x20, #63, ce00 <gzseek64@@ZLIB_1.2.3.3+0xf0>
    ce4c:	nop
    ce50:	mov	x0, #0xffffffffffffffff    	// #-1
    ce54:	b	cd9c <gzseek64@@ZLIB_1.2.3.3+0x8c>
    ce58:	ldr	w0, [x19, #28]
    ce5c:	ldr	w1, [x19]
    ce60:	sub	x1, x20, x1
    ce64:	bl	24b0 <lseek64@plt>
    ce68:	cmn	x0, #0x1
    ce6c:	b.eq	ce50 <gzseek64@@ZLIB_1.2.3.3+0x140>  // b.none
    ce70:	str	wzr, [x19]
    ce74:	mov	x0, x19
    ce78:	str	xzr, [x19, #80]
    ce7c:	mov	x2, #0x0                   	// #0
    ce80:	str	wzr, [x19, #104]
    ce84:	mov	w1, #0x0                   	// #0
    ce88:	bl	c780 <gzerror@@Base+0x60>
    ce8c:	str	wzr, [x19, #128]
    ce90:	ldr	x0, [x19, #16]
    ce94:	add	x0, x20, x0
    ce98:	str	x0, [x19, #16]
    ce9c:	b	cd9c <gzseek64@@ZLIB_1.2.3.3+0x8c>
    cea0:	mov	x0, #0xffffffffffffffff    	// #-1
    cea4:	ret

000000000000cea8 <gzseek@@Base>:
    cea8:	b	23d0 <gzseek64@plt>
    ceac:	nop
    ceb0:	stp	x29, x30, [sp, #-64]!
    ceb4:	mov	x29, sp
    ceb8:	str	wzr, [x3]
    cebc:	stp	x19, x20, [sp, #16]
    cec0:	mov	x19, x3
    cec4:	mov	w20, w2
    cec8:	stp	x21, x22, [sp, #32]
    cecc:	mov	x22, x1
    ced0:	mov	x21, x0
    ced4:	mov	w1, #0x0                   	// #0
    ced8:	str	x23, [sp, #48]
    cedc:	mov	w23, #0x40000000            	// #1073741824
    cee0:	b	cef8 <gzseek@@Base+0x50>
    cee4:	ldr	w1, [x19]
    cee8:	add	w1, w1, w0
    ceec:	str	w1, [x19]
    cef0:	cmp	w1, w20
    cef4:	b.cs	cf40 <gzseek@@Base+0x98>  // b.hs, b.nlast
    cef8:	sub	w2, w20, w1
    cefc:	ldr	w0, [x21, #28]
    cf00:	cmp	w2, w23
    cf04:	add	x1, x22, w1, uxtw
    cf08:	csel	w2, w2, w23, ls  // ls = plast
    cf0c:	bl	25e0 <read@plt>
    cf10:	cmp	w0, #0x0
    cf14:	mov	w1, w0
    cf18:	b.gt	cee4 <gzseek@@Base+0x3c>
    cf1c:	cbnz	w0, cf5c <gzseek@@Base+0xb4>
    cf20:	mov	w0, #0x1                   	// #1
    cf24:	str	w0, [x21, #80]
    cf28:	mov	w0, w1
    cf2c:	ldp	x19, x20, [sp, #16]
    cf30:	ldp	x21, x22, [sp, #32]
    cf34:	ldr	x23, [sp, #48]
    cf38:	ldp	x29, x30, [sp], #64
    cf3c:	ret
    cf40:	mov	w1, #0x0                   	// #0
    cf44:	mov	w0, w1
    cf48:	ldp	x19, x20, [sp, #16]
    cf4c:	ldp	x21, x22, [sp, #32]
    cf50:	ldr	x23, [sp, #48]
    cf54:	ldp	x29, x30, [sp], #64
    cf58:	ret
    cf5c:	bl	2650 <__errno_location@plt>
    cf60:	ldr	w0, [x0]
    cf64:	bl	2500 <strerror@plt>
    cf68:	mov	x2, x0
    cf6c:	mov	w1, #0xffffffff            	// #-1
    cf70:	mov	x0, x21
    cf74:	bl	c780 <gzerror@@Base+0x60>
    cf78:	mov	w1, #0xffffffff            	// #-1
    cf7c:	b	cf28 <gzseek@@Base+0x80>
    cf80:	stp	x29, x30, [sp, #-64]!
    cf84:	mov	x29, sp
    cf88:	stp	x19, x20, [sp, #16]
    cf8c:	mov	x19, x0
    cf90:	ldr	w0, [x0, #108]
    cf94:	cmp	w0, #0x0
    cf98:	ccmn	w0, #0x5, #0x4, ne  // ne = any
    cf9c:	b.ne	d044 <gzseek@@Base+0x19c>  // b.any
    cfa0:	ldr	w20, [x19, #80]
    cfa4:	cbnz	w20, d030 <gzseek@@Base+0x188>
    cfa8:	ldr	x1, [x19, #48]
    cfac:	str	x21, [sp, #32]
    cfb0:	add	x21, x19, #0x78
    cfb4:	ldr	w2, [x21, #8]
    cfb8:	cbz	w2, cfe4 <gzseek@@Base+0x13c>
    cfbc:	ldr	x5, [x19, #120]
    cfc0:	sub	w0, w2, #0x1
    cfc4:	mov	x2, #0x0                   	// #0
    cfc8:	ldrb	w4, [x5, x2]
    cfcc:	cmp	x0, x2
    cfd0:	strb	w4, [x1, x2]
    cfd4:	add	x2, x2, #0x1
    cfd8:	b.ne	cfc8 <gzseek@@Base+0x120>  // b.any
    cfdc:	ldr	w2, [x21, #8]
    cfe0:	ldr	x1, [x19, #48]
    cfe4:	add	x1, x1, w2, uxtw
    cfe8:	ldr	w4, [x19, #40]
    cfec:	add	x3, sp, #0x3c
    cff0:	mov	x0, x19
    cff4:	sub	w2, w4, w2
    cff8:	bl	ceb0 <gzseek@@Base+0x8>
    cffc:	cmn	w0, #0x1
    d000:	b.eq	d04c <gzseek@@Base+0x1a4>  // b.none
    d004:	ldr	w0, [x21, #8]
    d008:	ldr	w2, [sp, #60]
    d00c:	ldr	x1, [x19, #48]
    d010:	add	w0, w0, w2
    d014:	str	w0, [x21, #8]
    d018:	mov	w0, w20
    d01c:	ldr	x21, [sp, #32]
    d020:	str	x1, [x19, #120]
    d024:	ldp	x19, x20, [sp, #16]
    d028:	ldp	x29, x30, [sp], #64
    d02c:	ret
    d030:	mov	w20, #0x0                   	// #0
    d034:	mov	w0, w20
    d038:	ldp	x19, x20, [sp, #16]
    d03c:	ldp	x29, x30, [sp], #64
    d040:	ret
    d044:	mov	w20, #0xffffffff            	// #-1
    d048:	b	d034 <gzseek@@Base+0x18c>
    d04c:	mov	w20, w0
    d050:	ldr	x21, [sp, #32]
    d054:	b	d034 <gzseek@@Base+0x18c>
    d058:	stp	x29, x30, [sp, #-48]!
    d05c:	mov	x29, sp
    d060:	stp	x19, x20, [sp, #16]
    d064:	mov	x19, x0
    d068:	add	x20, x0, #0x78
    d06c:	ldr	w0, [x0, #40]
    d070:	cbz	w0, d120 <gzseek@@Base+0x278>
    d074:	ldr	w2, [x20, #8]
    d078:	cmp	w2, #0x1
    d07c:	b.ls	d0b8 <gzseek@@Base+0x210>  // b.plast
    d080:	ldr	x1, [x19, #120]
    d084:	ldrb	w0, [x1]
    d088:	cmp	w0, #0x1f
    d08c:	b.eq	d188 <gzseek@@Base+0x2e0>  // b.none
    d090:	ldr	w0, [x19, #64]
    d094:	cbnz	w0, d0ec <gzseek@@Base+0x244>
    d098:	str	wzr, [x20, #8]
    d09c:	mov	w1, #0x1                   	// #1
    d0a0:	str	wzr, [x19]
    d0a4:	mov	w0, #0x0                   	// #0
    d0a8:	str	w1, [x19, #80]
    d0ac:	ldp	x19, x20, [sp, #16]
    d0b0:	ldp	x29, x30, [sp], #48
    d0b4:	ret
    d0b8:	mov	x0, x19
    d0bc:	bl	cf80 <gzseek@@Base+0xd8>
    d0c0:	cmn	w0, #0x1
    d0c4:	b.eq	d114 <gzseek@@Base+0x26c>  // b.none
    d0c8:	ldr	w2, [x20, #8]
    d0cc:	mov	w0, #0x0                   	// #0
    d0d0:	cbz	w2, d114 <gzseek@@Base+0x26c>
    d0d4:	cmp	w2, #0x1
    d0d8:	b.hi	d080 <gzseek@@Base+0x1d8>  // b.pmore
    d0dc:	ldr	w0, [x19, #64]
    d0e0:	cbz	w0, d098 <gzseek@@Base+0x1f0>
    d0e4:	ldr	x1, [x19, #120]
    d0e8:	mov	w2, #0x1                   	// #1
    d0ec:	ldr	x0, [x19, #56]
    d0f0:	str	x0, [x19, #8]
    d0f4:	mov	w2, w2
    d0f8:	bl	23a0 <memcpy@plt>
    d0fc:	ldr	w0, [x20, #8]
    d100:	mov	x1, #0x100000001           	// #4294967297
    d104:	str	w0, [x19]
    d108:	str	wzr, [x20, #8]
    d10c:	mov	w0, #0x0                   	// #0
    d110:	str	x1, [x19, #64]
    d114:	ldp	x19, x20, [sp, #16]
    d118:	ldp	x29, x30, [sp], #48
    d11c:	ret
    d120:	stp	x21, x22, [sp, #32]
    d124:	ldr	w22, [x19, #44]
    d128:	mov	w0, w22
    d12c:	bl	2460 <malloc@plt>
    d130:	mov	x21, x0
    d134:	str	x21, [x19, #48]
    d138:	lsl	w0, w22, #1
    d13c:	bl	2460 <malloc@plt>
    d140:	str	x0, [x19, #56]
    d144:	cmp	x21, #0x0
    d148:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    d14c:	b.eq	d1e0 <gzseek@@Base+0x338>  // b.none
    d150:	str	w22, [x19, #40]
    d154:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    d158:	str	xzr, [x19, #120]
    d15c:	add	x2, x2, #0x8b8
    d160:	str	wzr, [x19, #128]
    d164:	mov	x0, x20
    d168:	stp	xzr, xzr, [x19, #184]
    d16c:	mov	w3, #0x70                  	// #112
    d170:	mov	w1, #0x1f                  	// #31
    d174:	str	xzr, [x19, #200]
    d178:	bl	2600 <inflateInit2_@plt>
    d17c:	cbnz	w0, d1ac <gzseek@@Base+0x304>
    d180:	ldp	x21, x22, [sp, #32]
    d184:	b	d074 <gzseek@@Base+0x1cc>
    d188:	ldrb	w0, [x1, #1]
    d18c:	cmp	w0, #0x8b
    d190:	b.ne	d090 <gzseek@@Base+0x1e8>  // b.any
    d194:	mov	x0, x20
    d198:	bl	2610 <inflateReset@plt>
    d19c:	mov	x1, #0x200000000           	// #8589934592
    d1a0:	mov	w0, #0x0                   	// #0
    d1a4:	str	x1, [x19, #64]
    d1a8:	b	d114 <gzseek@@Base+0x26c>
    d1ac:	ldr	x0, [x19, #56]
    d1b0:	bl	2570 <free@plt>
    d1b4:	ldr	x0, [x19, #48]
    d1b8:	bl	2570 <free@plt>
    d1bc:	str	wzr, [x19, #40]
    d1c0:	mov	x0, x19
    d1c4:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    d1c8:	mov	w1, #0xfffffffc            	// #-4
    d1cc:	add	x2, x2, #0x950
    d1d0:	bl	c780 <gzerror@@Base+0x60>
    d1d4:	mov	w0, #0xffffffff            	// #-1
    d1d8:	ldp	x21, x22, [sp, #32]
    d1dc:	b	d114 <gzseek@@Base+0x26c>
    d1e0:	bl	2570 <free@plt>
    d1e4:	mov	x0, x21
    d1e8:	bl	2570 <free@plt>
    d1ec:	mov	x0, x19
    d1f0:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    d1f4:	mov	w1, #0xfffffffc            	// #-4
    d1f8:	add	x2, x2, #0x950
    d1fc:	bl	c780 <gzerror@@Base+0x60>
    d200:	mov	w0, #0xffffffff            	// #-1
    d204:	ldp	x21, x22, [sp, #32]
    d208:	b	d114 <gzseek@@Base+0x26c>
    d20c:	nop
    d210:	stp	x29, x30, [sp, #-48]!
    d214:	mov	x29, sp
    d218:	stp	x19, x20, [sp, #16]
    d21c:	add	x19, x0, #0x78
    d220:	mov	x20, x0
    d224:	str	x21, [sp, #32]
    d228:	ldr	w21, [x19, #32]
    d22c:	b	d268 <gzseek@@Base+0x3c0>
    d230:	mov	w1, #0x0                   	// #0
    d234:	mov	x0, x19
    d238:	bl	23f0 <inflate@plt>
    d23c:	add	w1, w0, #0x2
    d240:	tst	w1, #0xfffffffb
    d244:	b.eq	d2c8 <gzseek@@Base+0x420>  // b.none
    d248:	cmn	w0, #0x4
    d24c:	b.eq	d2f0 <gzseek@@Base+0x448>  // b.none
    d250:	cmn	w0, #0x3
    d254:	b.eq	d318 <gzseek@@Base+0x470>  // b.none
    d258:	ldr	w1, [x19, #32]
    d25c:	cmp	w0, #0x1
    d260:	cbz	w1, d34c <gzseek@@Base+0x4a4>
    d264:	b.eq	d37c <gzseek@@Base+0x4d4>  // b.none
    d268:	ldr	w1, [x19, #8]
    d26c:	cbnz	w1, d230 <gzseek@@Base+0x388>
    d270:	mov	x0, x20
    d274:	bl	cf80 <gzseek@@Base+0xd8>
    d278:	cmn	w0, #0x1
    d27c:	b.eq	d2b8 <gzseek@@Base+0x410>  // b.none
    d280:	ldr	w0, [x19, #8]
    d284:	cbnz	w0, d230 <gzseek@@Base+0x388>
    d288:	mov	x0, x20
    d28c:	mov	w1, #0xfffffffb            	// #-5
    d290:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    d294:	add	x2, x2, #0x998
    d298:	bl	c780 <gzerror@@Base+0x60>
    d29c:	ldr	w0, [x19, #32]
    d2a0:	ldr	x1, [x19, #24]
    d2a4:	sub	w21, w21, w0
    d2a8:	mov	w0, #0x0                   	// #0
    d2ac:	str	w21, [x20]
    d2b0:	sub	x21, x1, w21, uxtw
    d2b4:	str	x21, [x20, #8]
    d2b8:	ldp	x19, x20, [sp, #16]
    d2bc:	ldr	x21, [sp, #32]
    d2c0:	ldp	x29, x30, [sp], #48
    d2c4:	ret
    d2c8:	mov	x0, x20
    d2cc:	mov	w1, #0xfffffffe            	// #-2
    d2d0:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    d2d4:	add	x2, x2, #0x9b0
    d2d8:	bl	c780 <gzerror@@Base+0x60>
    d2dc:	mov	w0, #0xffffffff            	// #-1
    d2e0:	ldp	x19, x20, [sp, #16]
    d2e4:	ldr	x21, [sp, #32]
    d2e8:	ldp	x29, x30, [sp], #48
    d2ec:	ret
    d2f0:	mov	w1, w0
    d2f4:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    d2f8:	mov	x0, x20
    d2fc:	add	x2, x2, #0x950
    d300:	bl	c780 <gzerror@@Base+0x60>
    d304:	mov	w0, #0xffffffff            	// #-1
    d308:	ldp	x19, x20, [sp, #16]
    d30c:	ldr	x21, [sp, #32]
    d310:	ldp	x29, x30, [sp], #48
    d314:	ret
    d318:	ldr	x3, [x19, #48]
    d31c:	adrp	x1, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    d320:	add	x2, x1, #0x980
    d324:	mov	w1, w0
    d328:	cmp	x3, #0x0
    d32c:	mov	x0, x20
    d330:	csel	x2, x2, x3, eq  // eq = none
    d334:	bl	c780 <gzerror@@Base+0x60>
    d338:	mov	w0, #0xffffffff            	// #-1
    d33c:	ldp	x19, x20, [sp, #16]
    d340:	ldr	x21, [sp, #32]
    d344:	ldp	x29, x30, [sp], #48
    d348:	ret
    d34c:	ldr	x1, [x19, #24]
    d350:	str	w21, [x20]
    d354:	mov	w0, #0x0                   	// #0
    d358:	sub	x1, x1, w21, uxtw
    d35c:	str	x1, [x20, #8]
    d360:	b.ne	d2b8 <gzseek@@Base+0x410>  // b.any
    d364:	mov	w0, #0x0                   	// #0
    d368:	str	wzr, [x20, #68]
    d36c:	ldp	x19, x20, [sp, #16]
    d370:	ldr	x21, [sp, #32]
    d374:	ldp	x29, x30, [sp], #48
    d378:	ret
    d37c:	ldr	x0, [x19, #24]
    d380:	sub	w1, w21, w1
    d384:	str	w1, [x20]
    d388:	str	wzr, [x20, #68]
    d38c:	sub	x1, x0, w1, uxtw
    d390:	mov	w0, #0x0                   	// #0
    d394:	str	x1, [x20, #8]
    d398:	b	d36c <gzseek@@Base+0x4c4>
    d39c:	nop
    d3a0:	stp	x29, x30, [sp, #-32]!
    d3a4:	mov	x29, sp
    d3a8:	str	x19, [sp, #16]
    d3ac:	mov	x19, x0
    d3b0:	ldr	w0, [x19, #68]
    d3b4:	cmp	w0, #0x1
    d3b8:	b.eq	d3e8 <gzseek@@Base+0x540>  // b.none
    d3bc:	cmp	w0, #0x2
    d3c0:	b.eq	d440 <gzseek@@Base+0x598>  // b.none
    d3c4:	cbz	w0, d420 <gzseek@@Base+0x578>
    d3c8:	ldr	w0, [x19]
    d3cc:	cbnz	w0, d3e0 <gzseek@@Base+0x538>
    d3d0:	ldr	w0, [x19, #80]
    d3d4:	cbz	w0, d3b0 <gzseek@@Base+0x508>
    d3d8:	ldr	w0, [x19, #128]
    d3dc:	cbnz	w0, d3b0 <gzseek@@Base+0x508>
    d3e0:	mov	w0, #0x0                   	// #0
    d3e4:	b	d414 <gzseek@@Base+0x56c>
    d3e8:	ldr	x1, [x19, #56]
    d3ec:	mov	x3, x19
    d3f0:	ldr	w2, [x19, #40]
    d3f4:	mov	x0, x19
    d3f8:	lsl	w2, w2, #1
    d3fc:	bl	ceb0 <gzseek@@Base+0x8>
    d400:	cmn	w0, #0x1
    d404:	b.eq	d464 <gzseek@@Base+0x5bc>  // b.none
    d408:	ldr	x1, [x19, #56]
    d40c:	mov	w0, #0x0                   	// #0
    d410:	str	x1, [x19, #8]
    d414:	ldr	x19, [sp, #16]
    d418:	ldp	x29, x30, [sp], #32
    d41c:	ret
    d420:	mov	x0, x19
    d424:	bl	d058 <gzseek@@Base+0x1b0>
    d428:	cmn	w0, #0x1
    d42c:	b.eq	d464 <gzseek@@Base+0x5bc>  // b.none
    d430:	ldr	w0, [x19, #68]
    d434:	cbnz	w0, d3c8 <gzseek@@Base+0x520>
    d438:	mov	w0, #0x0                   	// #0
    d43c:	b	d414 <gzseek@@Base+0x56c>
    d440:	ldr	w2, [x19, #40]
    d444:	mov	x0, x19
    d448:	ldr	x3, [x19, #56]
    d44c:	str	x3, [x19, #144]
    d450:	lsl	w2, w2, #1
    d454:	str	w2, [x19, #152]
    d458:	bl	d210 <gzseek@@Base+0x368>
    d45c:	cmn	w0, #0x1
    d460:	b.ne	d3c8 <gzseek@@Base+0x520>  // b.any
    d464:	mov	w0, #0xffffffff            	// #-1
    d468:	b	d414 <gzseek@@Base+0x56c>
    d46c:	nop
    d470:	stp	x29, x30, [sp, #-32]!
    d474:	mov	x29, sp
    d478:	stp	x19, x20, [sp, #16]
    d47c:	mov	x19, x0
    d480:	mov	x20, x1
    d484:	cbz	x1, d4d0 <gzseek@@Base+0x628>
    d488:	ldr	w1, [x19]
    d48c:	mov	x0, x19
    d490:	mov	w4, #0x0                   	// #0
    d494:	mov	w2, w1
    d498:	mov	x3, x2
    d49c:	cmp	x2, x20
    d4a0:	cbz	w1, d4e0 <gzseek@@Base+0x638>
    d4a4:	b.le	d4b4 <gzseek@@Base+0x60c>
    d4a8:	sub	w4, w1, w20
    d4ac:	and	x3, x20, #0xffffffff
    d4b0:	mov	w2, w20
    d4b4:	ldp	x1, x0, [x19, #8]
    d4b8:	subs	x20, x20, x3
    d4bc:	str	w4, [x19]
    d4c0:	add	x2, x1, x2
    d4c4:	add	x3, x0, x3
    d4c8:	stp	x2, x3, [x19, #8]
    d4cc:	b.ne	d488 <gzseek@@Base+0x5e0>  // b.any
    d4d0:	mov	w0, #0x0                   	// #0
    d4d4:	ldp	x19, x20, [sp, #16]
    d4d8:	ldp	x29, x30, [sp], #32
    d4dc:	ret
    d4e0:	ldr	w1, [x19, #80]
    d4e4:	cbz	w1, d4f0 <gzseek@@Base+0x648>
    d4e8:	ldr	w1, [x19, #128]
    d4ec:	cbz	w1, d4d0 <gzseek@@Base+0x628>
    d4f0:	bl	d3a0 <gzseek@@Base+0x4f8>
    d4f4:	cmn	w0, #0x1
    d4f8:	b.ne	d488 <gzseek@@Base+0x5e0>  // b.any
    d4fc:	ldp	x19, x20, [sp, #16]
    d500:	ldp	x29, x30, [sp], #32
    d504:	ret
    d508:	stp	x29, x30, [sp, #-112]!
    d50c:	mov	x29, sp
    d510:	str	x27, [sp, #80]
    d514:	cbz	x2, d6a0 <gzseek@@Base+0x7f8>
    d518:	stp	x23, x24, [sp, #48]
    d51c:	mov	x23, x1
    d520:	ldr	w1, [x0, #104]
    d524:	stp	x19, x20, [sp, #16]
    d528:	mov	x19, x0
    d52c:	stp	x21, x22, [sp, #32]
    d530:	mov	x22, x2
    d534:	cbnz	w1, d680 <gzseek@@Base+0x7d8>
    d538:	stp	x25, x26, [sp, #64]
    d53c:	add	x26, sp, #0x6c
    d540:	mov	x27, #0x0                   	// #0
    d544:	mov	x25, #0xfffffffe            	// #4294967294
    d548:	mov	w24, #0xffffffff            	// #-1
    d54c:	nop
    d550:	ldr	w2, [x19]
    d554:	cmp	x22, x25
    d558:	csel	w0, w22, w24, ls  // ls = plast
    d55c:	str	w0, [sp, #108]
    d560:	cbz	w2, d5d4 <gzseek@@Base+0x72c>
    d564:	mov	w21, w0
    d568:	cmp	w2, w0
    d56c:	b.cs	d578 <gzseek@@Base+0x6d0>  // b.hs, b.nlast
    d570:	mov	w21, w2
    d574:	str	w2, [sp, #108]
    d578:	ldr	x1, [x19, #8]
    d57c:	mov	w20, w21
    d580:	mov	x2, x20
    d584:	mov	x0, x23
    d588:	bl	23a0 <memcpy@plt>
    d58c:	ldr	x0, [x19, #8]
    d590:	ldr	w1, [x19]
    d594:	add	x0, x0, x20
    d598:	str	x0, [x19, #8]
    d59c:	sub	w21, w1, w21
    d5a0:	str	w21, [x19]
    d5a4:	ldr	x2, [x19, #16]
    d5a8:	add	x23, x23, x20
    d5ac:	add	x27, x27, x20
    d5b0:	subs	x22, x22, x20
    d5b4:	add	x2, x2, x20
    d5b8:	str	x2, [x19, #16]
    d5bc:	b.ne	d550 <gzseek@@Base+0x6a8>  // b.any
    d5c0:	ldp	x19, x20, [sp, #16]
    d5c4:	ldp	x21, x22, [sp, #32]
    d5c8:	ldp	x23, x24, [sp, #48]
    d5cc:	ldp	x25, x26, [sp, #64]
    d5d0:	b	d650 <gzseek@@Base+0x7a8>
    d5d4:	ldr	w0, [x19, #80]
    d5d8:	cbz	w0, d5e4 <gzseek@@Base+0x73c>
    d5dc:	ldr	w0, [x19, #128]
    d5e0:	cbz	w0, d6b4 <gzseek@@Base+0x80c>
    d5e4:	ldr	w0, [x19, #68]
    d5e8:	cbz	w0, d62c <gzseek@@Base+0x784>
    d5ec:	ldr	w1, [x19, #40]
    d5f0:	ldr	w2, [sp, #108]
    d5f4:	cmp	w2, w1, lsl #1
    d5f8:	b.cc	d62c <gzseek@@Base+0x784>  // b.lo, b.ul, b.last
    d5fc:	cmp	w0, #0x1
    d600:	b.eq	d660 <gzseek@@Base+0x7b8>  // b.none
    d604:	str	x23, [x19, #144]
    d608:	mov	x0, x19
    d60c:	str	w2, [x19, #152]
    d610:	bl	d210 <gzseek@@Base+0x368>
    d614:	cmn	w0, #0x1
    d618:	b.eq	d63c <gzseek@@Base+0x794>  // b.none
    d61c:	ldr	w21, [x19]
    d620:	str	wzr, [x19]
    d624:	mov	w20, w21
    d628:	b	d5a4 <gzseek@@Base+0x6fc>
    d62c:	mov	x0, x19
    d630:	bl	d3a0 <gzseek@@Base+0x4f8>
    d634:	cmn	w0, #0x1
    d638:	b.ne	d550 <gzseek@@Base+0x6a8>  // b.any
    d63c:	ldp	x19, x20, [sp, #16]
    d640:	mov	x27, #0x0                   	// #0
    d644:	ldp	x21, x22, [sp, #32]
    d648:	ldp	x23, x24, [sp, #48]
    d64c:	ldp	x25, x26, [sp, #64]
    d650:	mov	x0, x27
    d654:	ldr	x27, [sp, #80]
    d658:	ldp	x29, x30, [sp], #112
    d65c:	ret
    d660:	mov	x3, x26
    d664:	mov	x1, x23
    d668:	mov	x0, x19
    d66c:	bl	ceb0 <gzseek@@Base+0x8>
    d670:	cmn	w0, #0x1
    d674:	b.eq	d63c <gzseek@@Base+0x794>  // b.none
    d678:	ldr	w20, [sp, #108]
    d67c:	b	d5a4 <gzseek@@Base+0x6fc>
    d680:	ldr	x1, [x0, #96]
    d684:	str	wzr, [x0, #104]
    d688:	bl	d470 <gzseek@@Base+0x5c8>
    d68c:	cmn	w0, #0x1
    d690:	b.ne	d538 <gzseek@@Base+0x690>  // b.any
    d694:	ldp	x19, x20, [sp, #16]
    d698:	ldp	x21, x22, [sp, #32]
    d69c:	ldp	x23, x24, [sp, #48]
    d6a0:	mov	x27, #0x0                   	// #0
    d6a4:	mov	x0, x27
    d6a8:	ldr	x27, [sp, #80]
    d6ac:	ldp	x29, x30, [sp], #112
    d6b0:	ret
    d6b4:	mov	w0, #0x1                   	// #1
    d6b8:	ldp	x21, x22, [sp, #32]
    d6bc:	ldp	x23, x24, [sp, #48]
    d6c0:	ldp	x25, x26, [sp, #64]
    d6c4:	str	w0, [x19, #84]
    d6c8:	ldp	x19, x20, [sp, #16]
    d6cc:	b	d650 <gzseek@@Base+0x7a8>

000000000000d6d0 <gzread@@Base>:
    d6d0:	cbz	x0, d748 <gzread@@Base+0x78>
    d6d4:	stp	x29, x30, [sp, #-32]!
    d6d8:	mov	w3, #0x1c4f                	// #7247
    d6dc:	mov	x29, sp
    d6e0:	ldr	w4, [x0, #24]
    d6e4:	str	x19, [sp, #16]
    d6e8:	mov	x19, x0
    d6ec:	cmp	w4, w3
    d6f0:	b.ne	d740 <gzread@@Base+0x70>  // b.any
    d6f4:	ldr	w3, [x0, #108]
    d6f8:	cmp	w3, #0x0
    d6fc:	ccmn	w3, #0x5, #0x4, ne  // ne = any
    d700:	b.ne	d740 <gzread@@Base+0x70>  // b.any
    d704:	tbnz	w2, #31, d730 <gzread@@Base+0x60>
    d708:	mov	w2, w2
    d70c:	bl	d508 <gzseek@@Base+0x660>
    d710:	cbnz	w0, d724 <gzread@@Base+0x54>
    d714:	ldr	w1, [x19, #108]
    d718:	cmp	w1, #0x0
    d71c:	ccmn	w1, #0x5, #0x4, ne  // ne = any
    d720:	b.ne	d740 <gzread@@Base+0x70>  // b.any
    d724:	ldr	x19, [sp, #16]
    d728:	ldp	x29, x30, [sp], #32
    d72c:	ret
    d730:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    d734:	mov	w1, #0xfffffffe            	// #-2
    d738:	add	x2, x2, #0x9d8
    d73c:	bl	c780 <gzerror@@Base+0x60>
    d740:	mov	w0, #0xffffffff            	// #-1
    d744:	b	d724 <gzread@@Base+0x54>
    d748:	mov	w0, #0xffffffff            	// #-1
    d74c:	ret

000000000000d750 <gzfread@@ZLIB_1.2.9>:
    d750:	cbz	x3, d7c4 <gzfread@@ZLIB_1.2.9+0x74>
    d754:	stp	x29, x30, [sp, #-32]!
    d758:	mov	x4, x0
    d75c:	mov	x0, #0x0                   	// #0
    d760:	mov	x29, sp
    d764:	ldr	w5, [x3, #24]
    d768:	str	x19, [sp, #16]
    d76c:	mov	x19, x1
    d770:	mov	w1, #0x1c4f                	// #7247
    d774:	cmp	w5, w1
    d778:	b.ne	d7b8 <gzfread@@ZLIB_1.2.9+0x68>  // b.any
    d77c:	ldr	w1, [x3, #108]
    d780:	cmp	w1, #0x0
    d784:	ccmn	w1, #0x5, #0x4, ne  // ne = any
    d788:	b.ne	d7b8 <gzfread@@ZLIB_1.2.9+0x68>  // b.any
    d78c:	cbz	x19, d7b8 <gzfread@@ZLIB_1.2.9+0x68>
    d790:	mul	x0, x2, x19
    d794:	udiv	x1, x0, x19
    d798:	cmp	x1, x2
    d79c:	b.ne	d7cc <gzfread@@ZLIB_1.2.9+0x7c>  // b.any
    d7a0:	cbz	x0, d7b8 <gzfread@@ZLIB_1.2.9+0x68>
    d7a4:	mov	x2, x0
    d7a8:	mov	x1, x4
    d7ac:	mov	x0, x3
    d7b0:	bl	d508 <gzseek@@Base+0x660>
    d7b4:	udiv	x0, x0, x19
    d7b8:	ldr	x19, [sp, #16]
    d7bc:	ldp	x29, x30, [sp], #32
    d7c0:	ret
    d7c4:	mov	x0, #0x0                   	// #0
    d7c8:	ret
    d7cc:	mov	x0, x3
    d7d0:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    d7d4:	mov	w1, #0xfffffffe            	// #-2
    d7d8:	add	x2, x2, #0x9f8
    d7dc:	bl	c780 <gzerror@@Base+0x60>
    d7e0:	mov	x0, #0x0                   	// #0
    d7e4:	b	d7b8 <gzfread@@ZLIB_1.2.9+0x68>

000000000000d7e8 <gzgetc@@Base>:
    d7e8:	cbz	x0, d860 <gzgetc@@Base+0x78>
    d7ec:	ldr	w3, [x0, #24]
    d7f0:	mov	w2, #0x1c4f                	// #7247
    d7f4:	mov	x1, x0
    d7f8:	cmp	w3, w2
    d7fc:	b.ne	d860 <gzgetc@@Base+0x78>  // b.any
    d800:	ldr	w2, [x0, #108]
    d804:	cmp	w2, #0x0
    d808:	ccmn	w2, #0x5, #0x4, ne  // ne = any
    d80c:	b.ne	d860 <gzgetc@@Base+0x78>  // b.any
    d810:	ldr	w2, [x0]
    d814:	cbz	w2, d838 <gzgetc@@Base+0x50>
    d818:	ldp	x3, x0, [x0, #8]
    d81c:	sub	w2, w2, #0x1
    d820:	str	w2, [x1]
    d824:	add	x4, x3, #0x1
    d828:	add	x0, x0, #0x1
    d82c:	stp	x4, x0, [x1, #8]
    d830:	ldrb	w0, [x3]
    d834:	ret
    d838:	stp	x29, x30, [sp, #-32]!
    d83c:	mov	x2, #0x1                   	// #1
    d840:	mov	x29, sp
    d844:	add	x1, sp, #0x18
    d848:	bl	d508 <gzseek@@Base+0x660>
    d84c:	cmp	w0, #0x0
    d850:	b.le	d868 <gzgetc@@Base+0x80>
    d854:	ldrb	w0, [sp, #24]
    d858:	ldp	x29, x30, [sp], #32
    d85c:	ret
    d860:	mov	w0, #0xffffffff            	// #-1
    d864:	ret
    d868:	mov	w0, #0xffffffff            	// #-1
    d86c:	b	d858 <gzgetc@@Base+0x70>

000000000000d870 <gzgetc_@@ZLIB_1.2.5.2>:
    d870:	b	2410 <gzgetc@plt>
    d874:	nop

000000000000d878 <gzungetc@@ZLIB_1.2.0.2>:
    d878:	cbz	x1, d9c0 <gzungetc@@ZLIB_1.2.0.2+0x148>
    d87c:	stp	x29, x30, [sp, #-32]!
    d880:	mov	x29, sp
    d884:	stp	x19, x20, [sp, #16]
    d888:	mov	x19, x1
    d88c:	ldr	w1, [x1, #24]
    d890:	mov	w20, w0
    d894:	mov	w0, #0x1c4f                	// #7247
    d898:	cmp	w1, w0
    d89c:	b.ne	d930 <gzungetc@@ZLIB_1.2.0.2+0xb8>  // b.any
    d8a0:	ldr	w0, [x19, #108]
    d8a4:	cmp	w0, #0x0
    d8a8:	ccmn	w0, #0x5, #0x4, ne  // ne = any
    d8ac:	b.ne	d930 <gzungetc@@ZLIB_1.2.0.2+0xb8>  // b.any
    d8b0:	ldr	w0, [x19, #104]
    d8b4:	cbnz	w0, d918 <gzungetc@@ZLIB_1.2.0.2+0xa0>
    d8b8:	tbnz	w20, #31, d930 <gzungetc@@ZLIB_1.2.0.2+0xb8>
    d8bc:	ldr	w3, [x19]
    d8c0:	ldr	w0, [x19, #40]
    d8c4:	lsl	w0, w0, #1
    d8c8:	cbz	w3, d938 <gzungetc@@ZLIB_1.2.0.2+0xc0>
    d8cc:	cmp	w3, w0
    d8d0:	b.eq	d9a4 <gzungetc@@ZLIB_1.2.0.2+0x12c>  // b.none
    d8d4:	ldr	x1, [x19, #8]
    d8d8:	ldr	x4, [x19, #56]
    d8dc:	cmp	x1, x4
    d8e0:	b.eq	d974 <gzungetc@@ZLIB_1.2.0.2+0xfc>  // b.none
    d8e4:	sub	x2, x1, #0x1
    d8e8:	add	w3, w3, #0x1
    d8ec:	str	w3, [x19]
    d8f0:	mov	w0, w20
    d8f4:	str	x2, [x19, #8]
    d8f8:	sturb	w20, [x1, #-1]
    d8fc:	str	wzr, [x19, #84]
    d900:	ldr	x1, [x19, #16]
    d904:	sub	x1, x1, #0x1
    d908:	str	x1, [x19, #16]
    d90c:	ldp	x19, x20, [sp, #16]
    d910:	ldp	x29, x30, [sp], #32
    d914:	ret
    d918:	ldr	x1, [x19, #96]
    d91c:	str	wzr, [x19, #104]
    d920:	mov	x0, x19
    d924:	bl	d470 <gzseek@@Base+0x5c8>
    d928:	cmn	w0, #0x1
    d92c:	b.ne	d8b8 <gzungetc@@ZLIB_1.2.0.2+0x40>  // b.any
    d930:	mov	w0, #0xffffffff            	// #-1
    d934:	b	d90c <gzungetc@@ZLIB_1.2.0.2+0x94>
    d938:	ldr	x2, [x19, #56]
    d93c:	sub	x1, x0, #0x1
    d940:	mov	w3, #0x1                   	// #1
    d944:	str	w3, [x19]
    d948:	add	x3, x2, x1
    d94c:	str	x3, [x19, #8]
    d950:	strb	w20, [x2, x1]
    d954:	mov	w0, w20
    d958:	str	wzr, [x19, #84]
    d95c:	ldr	x1, [x19, #16]
    d960:	sub	x1, x1, #0x1
    d964:	str	x1, [x19, #16]
    d968:	ldp	x19, x20, [sp, #16]
    d96c:	ldp	x29, x30, [sp], #32
    d970:	ret
    d974:	add	x2, x1, w3, uxtw
    d978:	add	x1, x1, w0, uxtw
    d97c:	cmp	x4, x2
    d980:	b.cs	d8e4 <gzungetc@@ZLIB_1.2.0.2+0x6c>  // b.hs, b.nlast
    d984:	nop
    d988:	ldrb	w0, [x2, #-1]!
    d98c:	strb	w0, [x1, #-1]!
    d990:	ldr	x0, [x19, #56]
    d994:	cmp	x0, x2
    d998:	b.cc	d988 <gzungetc@@ZLIB_1.2.0.2+0x110>  // b.lo, b.ul, b.last
    d99c:	ldr	w3, [x19]
    d9a0:	b	d8e4 <gzungetc@@ZLIB_1.2.0.2+0x6c>
    d9a4:	mov	x0, x19
    d9a8:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    d9ac:	mov	w1, #0xfffffffd            	// #-3
    d9b0:	add	x2, x2, #0xa20
    d9b4:	bl	c780 <gzerror@@Base+0x60>
    d9b8:	mov	w0, #0xffffffff            	// #-1
    d9bc:	b	d90c <gzungetc@@ZLIB_1.2.0.2+0x94>
    d9c0:	mov	w0, #0xffffffff            	// #-1
    d9c4:	ret

000000000000d9c8 <gzgets@@Base>:
    d9c8:	cmp	x1, #0x0
    d9cc:	ccmp	w2, #0x0, #0x4, ne  // ne = any
    d9d0:	ccmp	x0, #0x0, #0x4, gt
    d9d4:	b.eq	db3c <gzgets@@Base+0x174>  // b.none
    d9d8:	stp	x29, x30, [sp, #-80]!
    d9dc:	mov	x29, sp
    d9e0:	stp	x19, x20, [sp, #16]
    d9e4:	mov	x19, x0
    d9e8:	stp	x21, x22, [sp, #32]
    d9ec:	mov	w21, w2
    d9f0:	ldr	w2, [x0, #24]
    d9f4:	mov	x22, x1
    d9f8:	mov	w1, #0x1c4f                	// #7247
    d9fc:	cmp	w2, w1
    da00:	b.ne	dac8 <gzgets@@Base+0x100>  // b.any
    da04:	ldr	w1, [x0, #108]
    da08:	cmp	w1, #0x0
    da0c:	ccmn	w1, #0x5, #0x4, ne  // ne = any
    da10:	b.ne	dac8 <gzgets@@Base+0x100>  // b.any
    da14:	ldr	w1, [x0, #104]
    da18:	cbnz	w1, db44 <gzgets@@Base+0x17c>
    da1c:	subs	w21, w21, #0x1
    da20:	b.eq	dac8 <gzgets@@Base+0x100>  // b.none
    da24:	ldr	w3, [x19]
    da28:	stp	x23, x24, [sp, #48]
    da2c:	mov	x24, x22
    da30:	str	x25, [sp, #64]
    da34:	cbz	w3, db18 <gzgets@@Base+0x150>
    da38:	cmp	w21, w3
    da3c:	mov	w1, #0xa                   	// #10
    da40:	ldr	x25, [x19, #8]
    da44:	csel	w23, w21, w3, ls  // ls = plast
    da48:	csel	w20, w21, w3, ls  // ls = plast
    da4c:	mov	x2, x23
    da50:	mov	x0, x25
    da54:	bl	25f0 <memchr@plt>
    da58:	cbz	x0, dadc <gzgets@@Base+0x114>
    da5c:	sub	x0, x0, x25
    da60:	mov	x1, x25
    da64:	add	w21, w0, #0x1
    da68:	add	w20, w0, #0x1
    da6c:	mov	x2, x21
    da70:	mov	x0, x24
    da74:	bl	23a0 <memcpy@plt>
    da78:	add	x24, x24, x21
    da7c:	ldp	x1, x2, [x19, #8]
    da80:	ldr	w0, [x19]
    da84:	sub	w0, w0, w20
    da88:	str	w0, [x19]
    da8c:	add	x1, x1, x21
    da90:	add	x2, x2, x21
    da94:	stp	x1, x2, [x19, #8]
    da98:	cmp	x24, x22
    da9c:	b.eq	dac0 <gzgets@@Base+0xf8>  // b.none
    daa0:	strb	wzr, [x24]
    daa4:	mov	x0, x22
    daa8:	ldp	x19, x20, [sp, #16]
    daac:	ldp	x21, x22, [sp, #32]
    dab0:	ldp	x23, x24, [sp, #48]
    dab4:	ldr	x25, [sp, #64]
    dab8:	ldp	x29, x30, [sp], #80
    dabc:	ret
    dac0:	ldp	x23, x24, [sp, #48]
    dac4:	ldr	x25, [sp, #64]
    dac8:	mov	x0, #0x0                   	// #0
    dacc:	ldp	x19, x20, [sp, #16]
    dad0:	ldp	x21, x22, [sp, #32]
    dad4:	ldp	x29, x30, [sp], #80
    dad8:	ret
    dadc:	mov	x2, x23
    dae0:	mov	x0, x24
    dae4:	mov	x1, x25
    dae8:	bl	23a0 <memcpy@plt>
    daec:	ldp	x0, x2, [x19, #8]
    daf0:	add	x24, x24, x23
    daf4:	ldr	w3, [x19]
    daf8:	subs	w21, w21, w20
    dafc:	sub	w3, w3, w20
    db00:	str	w3, [x19]
    db04:	add	x0, x0, x23
    db08:	add	x2, x2, x23
    db0c:	stp	x0, x2, [x19, #8]
    db10:	b.eq	da98 <gzgets@@Base+0xd0>  // b.none
    db14:	cbnz	w3, da38 <gzgets@@Base+0x70>
    db18:	mov	x0, x19
    db1c:	bl	d3a0 <gzseek@@Base+0x4f8>
    db20:	cmn	w0, #0x1
    db24:	b.eq	dac0 <gzgets@@Base+0xf8>  // b.none
    db28:	ldr	w3, [x19]
    db2c:	cbnz	w3, da38 <gzgets@@Base+0x70>
    db30:	mov	w0, #0x1                   	// #1
    db34:	str	w0, [x19, #84]
    db38:	b	da98 <gzgets@@Base+0xd0>
    db3c:	mov	x0, #0x0                   	// #0
    db40:	ret
    db44:	ldr	x1, [x0, #96]
    db48:	str	wzr, [x0, #104]
    db4c:	bl	d470 <gzseek@@Base+0x5c8>
    db50:	cmn	w0, #0x1
    db54:	b.ne	da1c <gzgets@@Base+0x54>  // b.any
    db58:	b	dac8 <gzgets@@Base+0x100>
    db5c:	nop

000000000000db60 <gzdirect@@ZLIB_1.2.2.3>:
    db60:	cbz	x0, dbac <gzdirect@@ZLIB_1.2.2.3+0x4c>
    db64:	stp	x29, x30, [sp, #-32]!
    db68:	mov	w1, #0x1c4f                	// #7247
    db6c:	mov	x29, sp
    db70:	ldr	w2, [x0, #24]
    db74:	str	x19, [sp, #16]
    db78:	mov	x19, x0
    db7c:	cmp	w2, w1
    db80:	b.eq	db94 <gzdirect@@ZLIB_1.2.2.3+0x34>  // b.none
    db84:	ldr	w0, [x19, #64]
    db88:	ldr	x19, [sp, #16]
    db8c:	ldp	x29, x30, [sp], #32
    db90:	ret
    db94:	ldr	w1, [x0, #68]
    db98:	cbnz	w1, db84 <gzdirect@@ZLIB_1.2.2.3+0x24>
    db9c:	ldr	w1, [x0]
    dba0:	cbnz	w1, db84 <gzdirect@@ZLIB_1.2.2.3+0x24>
    dba4:	bl	d058 <gzseek@@Base+0x1b0>
    dba8:	b	db84 <gzdirect@@ZLIB_1.2.2.3+0x24>
    dbac:	mov	w0, #0x0                   	// #0
    dbb0:	ret
    dbb4:	nop

000000000000dbb8 <gzclose_r@@ZLIB_1.2.3.5>:
    dbb8:	stp	x29, x30, [sp, #-48]!
    dbbc:	mov	x29, sp
    dbc0:	stp	x19, x20, [sp, #16]
    dbc4:	cbz	x0, dc58 <gzclose_r@@ZLIB_1.2.3.5+0xa0>
    dbc8:	mov	x19, x0
    dbcc:	mov	w0, #0x1c4f                	// #7247
    dbd0:	ldr	w1, [x19, #24]
    dbd4:	cmp	w1, w0
    dbd8:	b.ne	dc58 <gzclose_r@@ZLIB_1.2.3.5+0xa0>  // b.any
    dbdc:	ldr	w0, [x19, #40]
    dbe0:	str	x21, [sp, #32]
    dbe4:	cbnz	w0, dc3c <gzclose_r@@ZLIB_1.2.3.5+0x84>
    dbe8:	ldr	w20, [x19, #108]
    dbec:	mov	x2, #0x0                   	// #0
    dbf0:	mov	w1, #0x0                   	// #0
    dbf4:	mov	x0, x19
    dbf8:	cmn	w20, #0x5
    dbfc:	csel	w20, w20, wzr, eq  // eq = none
    dc00:	bl	c780 <gzerror@@Base+0x60>
    dc04:	ldr	x0, [x19, #32]
    dc08:	bl	2570 <free@plt>
    dc0c:	ldr	w0, [x19, #28]
    dc10:	bl	2510 <close@plt>
    dc14:	mov	w21, w0
    dc18:	mov	x0, x19
    dc1c:	bl	2570 <free@plt>
    dc20:	cmp	w21, #0x0
    dc24:	ldr	x21, [sp, #32]
    dc28:	csinv	w20, w20, wzr, eq  // eq = none
    dc2c:	mov	w0, w20
    dc30:	ldp	x19, x20, [sp, #16]
    dc34:	ldp	x29, x30, [sp], #48
    dc38:	ret
    dc3c:	add	x0, x19, #0x78
    dc40:	bl	2550 <inflateEnd@plt>
    dc44:	ldr	x0, [x19, #56]
    dc48:	bl	2570 <free@plt>
    dc4c:	ldr	x0, [x19, #48]
    dc50:	bl	2570 <free@plt>
    dc54:	b	dbe8 <gzclose_r@@ZLIB_1.2.3.5+0x30>
    dc58:	mov	w20, #0xfffffffe            	// #-2
    dc5c:	b	dc2c <gzclose_r@@ZLIB_1.2.3.5+0x74>
    dc60:	stp	x29, x30, [sp, #-48]!
    dc64:	mov	x29, sp
    dc68:	stp	x19, x20, [sp, #16]
    dc6c:	mov	x19, x0
    dc70:	str	x21, [sp, #32]
    dc74:	ldr	w21, [x0, #44]
    dc78:	lsl	w0, w21, #1
    dc7c:	bl	2460 <malloc@plt>
    dc80:	str	x0, [x19, #48]
    dc84:	cbz	x0, dd58 <gzclose_r@@ZLIB_1.2.3.5+0x1a0>
    dc88:	mov	x20, x0
    dc8c:	ldr	w0, [x19, #64]
    dc90:	cbz	w0, dcac <gzclose_r@@ZLIB_1.2.3.5+0xf4>
    dc94:	mov	w0, #0x0                   	// #0
    dc98:	str	w21, [x19, #40]
    dc9c:	ldp	x19, x20, [sp, #16]
    dca0:	ldr	x21, [sp, #32]
    dca4:	ldp	x29, x30, [sp], #48
    dca8:	ret
    dcac:	mov	w0, w21
    dcb0:	bl	2460 <malloc@plt>
    dcb4:	str	x0, [x19, #56]
    dcb8:	cbz	x0, dd50 <gzclose_r@@ZLIB_1.2.3.5+0x198>
    dcbc:	add	x20, x19, #0x78
    dcc0:	adrp	x6, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    dcc4:	ldp	w1, w5, [x19, #88]
    dcc8:	mov	w4, #0x8                   	// #8
    dccc:	stp	xzr, xzr, [x20, #64]
    dcd0:	mov	x0, x20
    dcd4:	add	x6, x6, #0x8b8
    dcd8:	str	xzr, [x20, #80]
    dcdc:	mov	w2, w4
    dce0:	mov	w7, #0x70                  	// #112
    dce4:	mov	w3, #0x1f                  	// #31
    dce8:	bl	24d0 <deflateInit2_@plt>
    dcec:	cbnz	w0, dd24 <gzclose_r@@ZLIB_1.2.3.5+0x16c>
    dcf0:	ldr	w0, [x19, #64]
    dcf4:	ldr	w2, [x19, #44]
    dcf8:	str	w2, [x19, #40]
    dcfc:	str	xzr, [x19, #120]
    dd00:	cbnz	w0, dd74 <gzclose_r@@ZLIB_1.2.3.5+0x1bc>
    dd04:	ldr	x1, [x19, #56]
    dd08:	str	x1, [x20, #24]
    dd0c:	str	w2, [x20, #32]
    dd10:	str	x1, [x19, #8]
    dd14:	ldp	x19, x20, [sp, #16]
    dd18:	ldr	x21, [sp, #32]
    dd1c:	ldp	x29, x30, [sp], #48
    dd20:	ret
    dd24:	ldr	x0, [x19, #56]
    dd28:	bl	2570 <free@plt>
    dd2c:	ldr	x0, [x19, #48]
    dd30:	bl	2570 <free@plt>
    dd34:	mov	x0, x19
    dd38:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    dd3c:	mov	w1, #0xfffffffc            	// #-4
    dd40:	add	x2, x2, #0x950
    dd44:	bl	c780 <gzerror@@Base+0x60>
    dd48:	mov	w0, #0xffffffff            	// #-1
    dd4c:	b	dc9c <gzclose_r@@ZLIB_1.2.3.5+0xe4>
    dd50:	mov	x0, x20
    dd54:	bl	2570 <free@plt>
    dd58:	mov	x0, x19
    dd5c:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    dd60:	mov	w1, #0xfffffffc            	// #-4
    dd64:	add	x2, x2, #0x950
    dd68:	bl	c780 <gzerror@@Base+0x60>
    dd6c:	mov	w0, #0xffffffff            	// #-1
    dd70:	b	dc9c <gzclose_r@@ZLIB_1.2.3.5+0xe4>
    dd74:	mov	w0, #0x0                   	// #0
    dd78:	b	dc9c <gzclose_r@@ZLIB_1.2.3.5+0xe4>
    dd7c:	nop
    dd80:	stp	x29, x30, [sp, #-64]!
    dd84:	mov	x29, sp
    dd88:	stp	x21, x22, [sp, #32]
    dd8c:	mov	w22, w1
    dd90:	ldr	w1, [x0, #40]
    dd94:	stp	x19, x20, [sp, #16]
    dd98:	mov	x19, x0
    dd9c:	stp	x23, x24, [sp, #48]
    dda0:	cbz	w1, df48 <gzclose_r@@ZLIB_1.2.3.5+0x390>
    dda4:	ldr	w23, [x19, #64]
    dda8:	cbz	w23, de2c <gzclose_r@@ZLIB_1.2.3.5+0x274>
    ddac:	ldr	w2, [x19, #128]
    ddb0:	add	x20, x19, #0x78
    ddb4:	cbz	w2, de7c <gzclose_r@@ZLIB_1.2.3.5+0x2c4>
    ddb8:	mov	w21, #0x40000000            	// #1073741824
    ddbc:	ldr	x1, [x19, #120]
    ddc0:	b	dde0 <gzclose_r@@ZLIB_1.2.3.5+0x228>
    ddc4:	ldr	x1, [x20]
    ddc8:	ldr	w2, [x20, #8]
    ddcc:	add	x1, x1, w0, sxtw
    ddd0:	sub	w2, w2, w0
    ddd4:	str	x1, [x20]
    ddd8:	str	w2, [x20, #8]
    dddc:	cbz	w2, de7c <gzclose_r@@ZLIB_1.2.3.5+0x2c4>
    dde0:	ldr	w0, [x19, #28]
    dde4:	cmp	w2, w21
    dde8:	csel	w2, w2, w21, ls  // ls = plast
    ddec:	bl	2530 <write@plt>
    ddf0:	tbz	w0, #31, ddc4 <gzclose_r@@ZLIB_1.2.3.5+0x20c>
    ddf4:	bl	2650 <__errno_location@plt>
    ddf8:	ldr	w0, [x0]
    ddfc:	mov	w23, #0xffffffff            	// #-1
    de00:	bl	2500 <strerror@plt>
    de04:	mov	x2, x0
    de08:	mov	w1, w23
    de0c:	mov	x0, x19
    de10:	bl	c780 <gzerror@@Base+0x60>
    de14:	mov	w0, w23
    de18:	ldp	x19, x20, [sp, #16]
    de1c:	ldp	x21, x22, [sp, #32]
    de20:	ldp	x23, x24, [sp, #48]
    de24:	ldp	x29, x30, [sp], #64
    de28:	ret
    de2c:	ldr	w3, [x19, #152]
    de30:	add	x20, x19, #0x78
    de34:	mov	w0, #0x0                   	// #0
    de38:	mov	x21, #0x40000000            	// #1073741824
    de3c:	cbz	w3, df34 <gzclose_r@@ZLIB_1.2.3.5+0x37c>
    de40:	cbz	w22, de50 <gzclose_r@@ZLIB_1.2.3.5+0x298>
    de44:	cmp	w22, #0x4
    de48:	ccmp	w0, #0x1, #0x4, eq  // eq = none
    de4c:	b.eq	de98 <gzclose_r@@ZLIB_1.2.3.5+0x2e0>  // b.none
    de50:	mov	w24, w3
    de54:	mov	w1, w22
    de58:	mov	x0, x20
    de5c:	bl	2490 <deflate@plt>
    de60:	cmn	w0, #0x2
    de64:	b.eq	df5c <gzclose_r@@ZLIB_1.2.3.5+0x3a4>  // b.none
    de68:	ldr	w3, [x20, #32]
    de6c:	cmp	w3, w24
    de70:	b.ne	de3c <gzclose_r@@ZLIB_1.2.3.5+0x284>  // b.any
    de74:	cmp	w22, #0x4
    de78:	b.eq	df78 <gzclose_r@@ZLIB_1.2.3.5+0x3c0>  // b.none
    de7c:	mov	w23, #0x0                   	// #0
    de80:	mov	w0, w23
    de84:	ldp	x19, x20, [sp, #16]
    de88:	ldp	x21, x22, [sp, #32]
    de8c:	ldp	x23, x24, [sp, #48]
    de90:	ldp	x29, x30, [sp], #64
    de94:	ret
    de98:	ldr	x1, [x19, #8]
    de9c:	ldr	x2, [x20, #24]
    dea0:	cmp	x2, x1
    dea4:	b.ls	de50 <gzclose_r@@ZLIB_1.2.3.5+0x298>  // b.plast
    dea8:	sub	x2, x2, x1
    deac:	ldr	w0, [x19, #28]
    deb0:	cmp	x2, x21
    deb4:	csel	x2, x2, x21, le
    deb8:	mov	w2, w2
    debc:	bl	2530 <write@plt>
    dec0:	tbnz	w0, #31, ddf4 <gzclose_r@@ZLIB_1.2.3.5+0x23c>
    dec4:	ldr	x1, [x19, #8]
    dec8:	ldr	x2, [x20, #24]
    decc:	add	x1, x1, w0, sxtw
    ded0:	str	x1, [x19, #8]
    ded4:	cmp	x1, x2
    ded8:	b.cs	df14 <gzclose_r@@ZLIB_1.2.3.5+0x35c>  // b.hs, b.nlast
    dedc:	nop
    dee0:	sub	x2, x2, x1
    dee4:	ldr	w0, [x19, #28]
    dee8:	cmp	x2, x21
    deec:	csel	x2, x2, x21, le
    def0:	mov	w2, w2
    def4:	bl	2530 <write@plt>
    def8:	tbnz	w0, #31, ddf4 <gzclose_r@@ZLIB_1.2.3.5+0x23c>
    defc:	ldr	x1, [x19, #8]
    df00:	ldr	x2, [x20, #24]
    df04:	add	x1, x1, w0, sxtw
    df08:	str	x1, [x19, #8]
    df0c:	cmp	x1, x2
    df10:	b.cc	dee0 <gzclose_r@@ZLIB_1.2.3.5+0x328>  // b.lo, b.ul, b.last
    df14:	ldr	w24, [x20, #32]
    df18:	cbnz	w24, de54 <gzclose_r@@ZLIB_1.2.3.5+0x29c>
    df1c:	ldr	w24, [x19, #40]
    df20:	ldr	x0, [x19, #56]
    df24:	str	x0, [x20, #24]
    df28:	str	w24, [x20, #32]
    df2c:	str	x0, [x19, #8]
    df30:	b	de54 <gzclose_r@@ZLIB_1.2.3.5+0x29c>
    df34:	ldr	x1, [x19, #8]
    df38:	ldr	x2, [x20, #24]
    df3c:	cmp	x2, x1
    df40:	b.hi	dee0 <gzclose_r@@ZLIB_1.2.3.5+0x328>  // b.pmore
    df44:	b	df1c <gzclose_r@@ZLIB_1.2.3.5+0x364>
    df48:	bl	dc60 <gzclose_r@@ZLIB_1.2.3.5+0xa8>
    df4c:	mov	w23, w0
    df50:	cmn	w0, #0x1
    df54:	b.ne	dda4 <gzclose_r@@ZLIB_1.2.3.5+0x1ec>  // b.any
    df58:	b	de14 <gzclose_r@@ZLIB_1.2.3.5+0x25c>
    df5c:	mov	w1, w0
    df60:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    df64:	mov	x0, x19
    df68:	add	x2, x2, #0xa40
    df6c:	mov	w23, #0xffffffff            	// #-1
    df70:	bl	c780 <gzerror@@Base+0x60>
    df74:	b	de14 <gzclose_r@@ZLIB_1.2.3.5+0x25c>
    df78:	mov	x0, x20
    df7c:	bl	2480 <deflateReset@plt>
    df80:	b	de14 <gzclose_r@@ZLIB_1.2.3.5+0x25c>
    df84:	nop
    df88:	stp	x29, x30, [sp, #-64]!
    df8c:	mov	x29, sp
    df90:	str	x23, [sp, #48]
    df94:	add	x23, x0, #0x78
    df98:	stp	x19, x20, [sp, #16]
    df9c:	mov	x20, x1
    dfa0:	mov	x19, x0
    dfa4:	ldr	w1, [x23, #8]
    dfa8:	cbnz	w1, e054 <gzclose_r@@ZLIB_1.2.3.5+0x49c>
    dfac:	mov	w1, #0x1                   	// #1
    dfb0:	cbz	x20, e028 <gzclose_r@@ZLIB_1.2.3.5+0x470>
    dfb4:	stp	x21, x22, [sp, #32]
    dfb8:	b	dff0 <gzclose_r@@ZLIB_1.2.3.5+0x438>
    dfbc:	ldr	x2, [x19, #16]
    dfc0:	str	x0, [x23]
    dfc4:	str	w21, [x23, #8]
    dfc8:	mov	x0, x19
    dfcc:	add	x2, x2, x22
    dfd0:	str	x2, [x19, #16]
    dfd4:	mov	w1, #0x0                   	// #0
    dfd8:	bl	dd80 <gzclose_r@@ZLIB_1.2.3.5+0x1c8>
    dfdc:	cmn	w0, #0x1
    dfe0:	b.eq	e03c <gzclose_r@@ZLIB_1.2.3.5+0x484>  // b.none
    dfe4:	subs	x20, x20, x22
    dfe8:	mov	w1, #0x0                   	// #0
    dfec:	b.eq	e024 <gzclose_r@@ZLIB_1.2.3.5+0x46c>  // b.none
    dff0:	ldr	w21, [x19, #40]
    dff4:	mov	w22, w21
    dff8:	cmp	x20, w21, uxtw
    dffc:	b.ge	e008 <gzclose_r@@ZLIB_1.2.3.5+0x450>  // b.tcont
    e000:	mov	w21, w20
    e004:	and	x22, x20, #0xffffffff
    e008:	ldr	x0, [x19, #48]
    e00c:	cbz	w1, dfbc <gzclose_r@@ZLIB_1.2.3.5+0x404>
    e010:	mov	w2, w21
    e014:	mov	w1, #0x0                   	// #0
    e018:	bl	24a0 <memset@plt>
    e01c:	ldr	x0, [x19, #48]
    e020:	b	dfbc <gzclose_r@@ZLIB_1.2.3.5+0x404>
    e024:	ldp	x21, x22, [sp, #32]
    e028:	mov	w0, #0x0                   	// #0
    e02c:	ldp	x19, x20, [sp, #16]
    e030:	ldr	x23, [sp, #48]
    e034:	ldp	x29, x30, [sp], #64
    e038:	ret
    e03c:	ldp	x21, x22, [sp, #32]
    e040:	mov	w0, #0xffffffff            	// #-1
    e044:	ldp	x19, x20, [sp, #16]
    e048:	ldr	x23, [sp, #48]
    e04c:	ldp	x29, x30, [sp], #64
    e050:	ret
    e054:	mov	w1, #0x0                   	// #0
    e058:	bl	dd80 <gzclose_r@@ZLIB_1.2.3.5+0x1c8>
    e05c:	cmn	w0, #0x1
    e060:	b.ne	dfac <gzclose_r@@ZLIB_1.2.3.5+0x3f4>  // b.any
    e064:	mov	w0, #0xffffffff            	// #-1
    e068:	b	e044 <gzclose_r@@ZLIB_1.2.3.5+0x48c>
    e06c:	nop
    e070:	stp	x29, x30, [sp, #-80]!
    e074:	mov	x29, sp
    e078:	stp	x23, x24, [sp, #48]
    e07c:	cbz	x2, e1b0 <gzclose_r@@ZLIB_1.2.3.5+0x5f8>
    e080:	mov	x23, x1
    e084:	ldr	w1, [x0, #40]
    e088:	stp	x19, x20, [sp, #16]
    e08c:	mov	x24, x2
    e090:	mov	x19, x0
    e094:	cbz	w1, e1c4 <gzclose_r@@ZLIB_1.2.3.5+0x60c>
    e098:	ldr	w0, [x19, #104]
    e09c:	cbnz	w0, e1d8 <gzclose_r@@ZLIB_1.2.3.5+0x620>
    e0a0:	ldr	w20, [x19, #40]
    e0a4:	ldr	w3, [x19, #128]
    e0a8:	cmp	x24, w20, uxtw
    e0ac:	b.cs	e140 <gzclose_r@@ZLIB_1.2.3.5+0x588>  // b.hs, b.nlast
    e0b0:	stp	x21, x22, [sp, #32]
    e0b4:	mov	x21, x24
    e0b8:	str	x25, [sp, #64]
    e0bc:	nop
    e0c0:	ldr	x2, [x19, #48]
    e0c4:	cbz	w3, e204 <gzclose_r@@ZLIB_1.2.3.5+0x64c>
    e0c8:	ldr	x0, [x19, #120]
    e0cc:	add	x3, x0, w3, uxtw
    e0d0:	sub	x0, x3, x2
    e0d4:	mov	x1, x23
    e0d8:	sub	w25, w20, w0
    e0dc:	sub	w20, w20, w0
    e0e0:	cmp	x25, x21
    e0e4:	add	x0, x2, w0, uxtw
    e0e8:	mov	x22, x25
    e0ec:	b.ls	e0fc <gzclose_r@@ZLIB_1.2.3.5+0x544>  // b.plast
    e0f0:	mov	w25, w21
    e0f4:	and	x22, x21, #0xffffffff
    e0f8:	mov	x20, x25
    e0fc:	mov	x2, x22
    e100:	bl	23a0 <memcpy@plt>
    e104:	ldr	x0, [x19, #16]
    e108:	subs	x21, x21, x22
    e10c:	ldr	w1, [x19, #128]
    e110:	add	x25, x0, x25
    e114:	str	x25, [x19, #16]
    e118:	add	w20, w1, w20
    e11c:	str	w20, [x19, #128]
    e120:	b.ne	e210 <gzclose_r@@ZLIB_1.2.3.5+0x658>  // b.any
    e124:	mov	x0, x24
    e128:	ldp	x19, x20, [sp, #16]
    e12c:	ldp	x21, x22, [sp, #32]
    e130:	ldp	x23, x24, [sp, #48]
    e134:	ldr	x25, [sp, #64]
    e138:	ldp	x29, x30, [sp], #80
    e13c:	ret
    e140:	cbz	w3, e158 <gzclose_r@@ZLIB_1.2.3.5+0x5a0>
    e144:	mov	x0, x19
    e148:	mov	w1, #0x0                   	// #0
    e14c:	bl	dd80 <gzclose_r@@ZLIB_1.2.3.5+0x1c8>
    e150:	cmn	w0, #0x1
    e154:	b.eq	e1d0 <gzclose_r@@ZLIB_1.2.3.5+0x618>  // b.none
    e158:	mov	x20, x24
    e15c:	stp	x21, x22, [sp, #32]
    e160:	mov	x22, #0xfffffffe            	// #4294967294
    e164:	str	x25, [sp, #64]
    e168:	mov	x21, #0xffffffff            	// #4294967295
    e16c:	mov	w25, #0xffffffff            	// #-1
    e170:	str	x23, [x19, #120]
    e174:	nop
    e178:	mov	x0, x19
    e17c:	cmp	x20, x22
    e180:	mov	w1, #0x0                   	// #0
    e184:	ldr	x2, [x19, #16]
    e188:	b.hi	e234 <gzclose_r@@ZLIB_1.2.3.5+0x67c>  // b.pmore
    e18c:	str	w20, [x19, #128]
    e190:	add	x20, x2, x20
    e194:	str	x20, [x19, #16]
    e198:	bl	dd80 <gzclose_r@@ZLIB_1.2.3.5+0x1c8>
    e19c:	cmn	w0, #0x1
    e1a0:	b.ne	e124 <gzclose_r@@ZLIB_1.2.3.5+0x56c>  // b.any
    e1a4:	ldp	x19, x20, [sp, #16]
    e1a8:	ldp	x21, x22, [sp, #32]
    e1ac:	ldr	x25, [sp, #64]
    e1b0:	mov	x24, #0x0                   	// #0
    e1b4:	mov	x0, x24
    e1b8:	ldp	x23, x24, [sp, #48]
    e1bc:	ldp	x29, x30, [sp], #80
    e1c0:	ret
    e1c4:	bl	dc60 <gzclose_r@@ZLIB_1.2.3.5+0xa8>
    e1c8:	cmn	w0, #0x1
    e1cc:	b.ne	e098 <gzclose_r@@ZLIB_1.2.3.5+0x4e0>  // b.any
    e1d0:	ldp	x19, x20, [sp, #16]
    e1d4:	b	e1b0 <gzclose_r@@ZLIB_1.2.3.5+0x5f8>
    e1d8:	ldr	x1, [x19, #96]
    e1dc:	str	wzr, [x19, #104]
    e1e0:	mov	x0, x19
    e1e4:	bl	df88 <gzclose_r@@ZLIB_1.2.3.5+0x3d0>
    e1e8:	cmn	w0, #0x1
    e1ec:	b.eq	e1d0 <gzclose_r@@ZLIB_1.2.3.5+0x618>  // b.none
    e1f0:	ldr	w20, [x19, #40]
    e1f4:	ldr	w3, [x19, #128]
    e1f8:	cmp	x24, w20, uxtw
    e1fc:	b.cc	e0b0 <gzclose_r@@ZLIB_1.2.3.5+0x4f8>  // b.lo, b.ul, b.last
    e200:	b	e140 <gzclose_r@@ZLIB_1.2.3.5+0x588>
    e204:	mov	x0, x2
    e208:	str	x2, [x19, #120]
    e20c:	b	e0cc <gzclose_r@@ZLIB_1.2.3.5+0x514>
    e210:	mov	x0, x19
    e214:	mov	w1, #0x0                   	// #0
    e218:	bl	dd80 <gzclose_r@@ZLIB_1.2.3.5+0x1c8>
    e21c:	cmn	w0, #0x1
    e220:	b.eq	e1a4 <gzclose_r@@ZLIB_1.2.3.5+0x5ec>  // b.none
    e224:	ldr	w20, [x19, #40]
    e228:	add	x23, x23, x22
    e22c:	ldr	w3, [x19, #128]
    e230:	b	e0c0 <gzclose_r@@ZLIB_1.2.3.5+0x508>
    e234:	add	x2, x2, x21
    e238:	str	x2, [x19, #16]
    e23c:	str	w25, [x19, #128]
    e240:	bl	dd80 <gzclose_r@@ZLIB_1.2.3.5+0x1c8>
    e244:	cmn	w0, #0x1
    e248:	b.eq	e1a4 <gzclose_r@@ZLIB_1.2.3.5+0x5ec>  // b.none
    e24c:	subs	x20, x20, x21
    e250:	b.ne	e178 <gzclose_r@@ZLIB_1.2.3.5+0x5c0>  // b.any
    e254:	b	e124 <gzclose_r@@ZLIB_1.2.3.5+0x56c>

000000000000e258 <gzwrite@@Base>:
    e258:	stp	x29, x30, [sp, #-32]!
    e25c:	mov	x29, sp
    e260:	str	x19, [sp, #16]
    e264:	cbz	x0, e2a4 <gzwrite@@Base+0x4c>
    e268:	ldr	w5, [x0, #24]
    e26c:	mov	w4, #0x79b1                	// #31153
    e270:	mov	w19, #0x0                   	// #0
    e274:	cmp	w5, w4
    e278:	b.ne	e294 <gzwrite@@Base+0x3c>  // b.any
    e27c:	ldr	w19, [x0, #108]
    e280:	cbnz	w19, e2a4 <gzwrite@@Base+0x4c>
    e284:	tbnz	w2, #31, e2b8 <gzwrite@@Base+0x60>
    e288:	mov	w2, w2
    e28c:	bl	e070 <gzclose_r@@ZLIB_1.2.3.5+0x4b8>
    e290:	mov	w19, w0
    e294:	mov	w0, w19
    e298:	ldr	x19, [sp, #16]
    e29c:	ldp	x29, x30, [sp], #32
    e2a0:	ret
    e2a4:	mov	w19, #0x0                   	// #0
    e2a8:	mov	w0, w19
    e2ac:	ldr	x19, [sp, #16]
    e2b0:	ldp	x29, x30, [sp], #32
    e2b4:	ret
    e2b8:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    e2bc:	mov	w1, #0xfffffffd            	// #-3
    e2c0:	add	x2, x2, #0xa68
    e2c4:	bl	c780 <gzerror@@Base+0x60>
    e2c8:	b	e294 <gzwrite@@Base+0x3c>
    e2cc:	nop

000000000000e2d0 <gzfwrite@@ZLIB_1.2.9>:
    e2d0:	cbz	x3, e33c <gzfwrite@@ZLIB_1.2.9+0x6c>
    e2d4:	stp	x29, x30, [sp, #-32]!
    e2d8:	mov	x4, x0
    e2dc:	mov	x0, #0x0                   	// #0
    e2e0:	mov	x29, sp
    e2e4:	ldr	w5, [x3, #24]
    e2e8:	str	x19, [sp, #16]
    e2ec:	mov	x19, x1
    e2f0:	mov	w1, #0x79b1                	// #31153
    e2f4:	cmp	w5, w1
    e2f8:	b.ne	e330 <gzfwrite@@ZLIB_1.2.9+0x60>  // b.any
    e2fc:	ldr	w1, [x3, #108]
    e300:	cbnz	w1, e330 <gzfwrite@@ZLIB_1.2.9+0x60>
    e304:	cbz	x19, e330 <gzfwrite@@ZLIB_1.2.9+0x60>
    e308:	mul	x0, x2, x19
    e30c:	udiv	x1, x0, x19
    e310:	cmp	x1, x2
    e314:	b.ne	e344 <gzfwrite@@ZLIB_1.2.9+0x74>  // b.any
    e318:	cbz	x0, e330 <gzfwrite@@ZLIB_1.2.9+0x60>
    e31c:	mov	x2, x0
    e320:	mov	x1, x4
    e324:	mov	x0, x3
    e328:	bl	e070 <gzclose_r@@ZLIB_1.2.3.5+0x4b8>
    e32c:	udiv	x0, x0, x19
    e330:	ldr	x19, [sp, #16]
    e334:	ldp	x29, x30, [sp], #32
    e338:	ret
    e33c:	mov	x0, #0x0                   	// #0
    e340:	ret
    e344:	mov	x0, x3
    e348:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x3788>
    e34c:	mov	w1, #0xfffffffe            	// #-2
    e350:	add	x2, x2, #0x9f8
    e354:	bl	c780 <gzerror@@Base+0x60>
    e358:	mov	x0, #0x0                   	// #0
    e35c:	b	e330 <gzfwrite@@ZLIB_1.2.9+0x60>

000000000000e360 <gzputc@@Base>:
    e360:	cbz	x0, e448 <gzputc@@Base+0xe8>
    e364:	stp	x29, x30, [sp, #-48]!
    e368:	mov	x29, sp
    e36c:	ldr	w2, [x0, #24]
    e370:	stp	x19, x20, [sp, #16]
    e374:	mov	w20, w1
    e378:	mov	x19, x0
    e37c:	mov	w1, #0x79b1                	// #31153
    e380:	cmp	w2, w1
    e384:	b.ne	e440 <gzputc@@Base+0xe0>  // b.any
    e388:	ldr	w1, [x0, #108]
    e38c:	cbnz	w1, e440 <gzputc@@Base+0xe0>
    e390:	ldr	w1, [x0, #104]
    e394:	cbnz	w1, e42c <gzputc@@Base+0xcc>
    e398:	ldr	w1, [x19, #40]
    e39c:	and	w3, w20, #0xff
    e3a0:	cbz	w1, e3f4 <gzputc@@Base+0x94>
    e3a4:	ldr	w0, [x19, #128]
    e3a8:	add	x4, x19, #0x78
    e3ac:	ldr	x2, [x19, #48]
    e3b0:	cbz	w0, e420 <gzputc@@Base+0xc0>
    e3b4:	ldr	x5, [x19, #120]
    e3b8:	add	x0, x5, w0, uxtw
    e3bc:	sub	x0, x0, x2
    e3c0:	cmp	w1, w0
    e3c4:	b.ls	e3f4 <gzputc@@Base+0x94>  // b.plast
    e3c8:	strb	w3, [x2, w0, uxtw]
    e3cc:	and	w0, w20, #0xff
    e3d0:	ldr	w2, [x4, #8]
    e3d4:	ldr	x1, [x19, #16]
    e3d8:	add	w2, w2, #0x1
    e3dc:	str	w2, [x4, #8]
    e3e0:	add	x1, x1, #0x1
    e3e4:	str	x1, [x19, #16]
    e3e8:	ldp	x19, x20, [sp, #16]
    e3ec:	ldp	x29, x30, [sp], #48
    e3f0:	ret
    e3f4:	mov	x0, x19
    e3f8:	add	x1, sp, #0x28
    e3fc:	mov	x2, #0x1                   	// #1
    e400:	strb	w3, [sp, #40]
    e404:	bl	e070 <gzclose_r@@ZLIB_1.2.3.5+0x4b8>
    e408:	cmp	x0, #0x1
    e40c:	b.ne	e440 <gzputc@@Base+0xe0>  // b.any
    e410:	and	w0, w20, #0xff
    e414:	ldp	x19, x20, [sp, #16]
    e418:	ldp	x29, x30, [sp], #48
    e41c:	ret
    e420:	mov	x5, x2
    e424:	str	x2, [x19, #120]
    e428:	b	e3b8 <gzputc@@Base+0x58>
    e42c:	ldr	x1, [x0, #96]
    e430:	str	wzr, [x0, #104]
    e434:	bl	df88 <gzclose_r@@ZLIB_1.2.3.5+0x3d0>
    e438:	cmn	w0, #0x1
    e43c:	b.ne	e398 <gzputc@@Base+0x38>  // b.any
    e440:	mov	w0, #0xffffffff            	// #-1
    e444:	b	e414 <gzputc@@Base+0xb4>
    e448:	mov	w0, #0xffffffff            	// #-1
    e44c:	ret

000000000000e450 <gzputs@@Base>:
    e450:	cbz	x0, e4bc <gzputs@@Base+0x6c>
    e454:	stp	x29, x30, [sp, #-32]!
    e458:	mov	x29, sp
    e45c:	stp	x19, x20, [sp, #16]
    e460:	mov	x19, x0
    e464:	mov	x20, x1
    e468:	mov	w0, #0x79b1                	// #31153
    e46c:	ldr	w1, [x19, #24]
    e470:	cmp	w1, w0
    e474:	b.ne	e4b4 <gzputs@@Base+0x64>  // b.any
    e478:	ldr	w0, [x19, #108]
    e47c:	cbnz	w0, e4b4 <gzputs@@Base+0x64>
    e480:	mov	x0, x20
    e484:	bl	23e0 <strlen@plt>
    e488:	mov	x1, x20
    e48c:	mov	x20, x0
    e490:	mov	x2, x20
    e494:	mov	x0, x19
    e498:	bl	e070 <gzclose_r@@ZLIB_1.2.3.5+0x4b8>
    e49c:	cmp	w0, #0x0
    e4a0:	ccmp	x20, #0x0, #0x4, eq  // eq = none
    e4a4:	b.ne	e4b4 <gzputs@@Base+0x64>  // b.any
    e4a8:	ldp	x19, x20, [sp, #16]
    e4ac:	ldp	x29, x30, [sp], #32
    e4b0:	ret
    e4b4:	mov	w0, #0xffffffff            	// #-1
    e4b8:	b	e4a8 <gzputs@@Base+0x58>
    e4bc:	mov	w0, #0xffffffff            	// #-1
    e4c0:	ret
    e4c4:	nop

000000000000e4c8 <gzvprintf@@ZLIB_1.2.7.1>:
    e4c8:	stp	x29, x30, [sp, #-96]!
    e4cc:	mov	x29, sp
    e4d0:	stp	x19, x20, [sp, #16]
    e4d4:	cbz	x0, e67c <gzvprintf@@ZLIB_1.2.7.1+0x1b4>
    e4d8:	mov	x20, x2
    e4dc:	ldr	w2, [x0, #24]
    e4e0:	stp	x21, x22, [sp, #32]
    e4e4:	mov	x19, x0
    e4e8:	mov	x22, x1
    e4ec:	mov	w1, #0x79b1                	// #31153
    e4f0:	cmp	w2, w1
    e4f4:	b.ne	e660 <gzvprintf@@ZLIB_1.2.7.1+0x198>  // b.any
    e4f8:	ldr	w1, [x0, #108]
    e4fc:	cbnz	w1, e660 <gzvprintf@@ZLIB_1.2.7.1+0x198>
    e500:	ldr	w1, [x0, #40]
    e504:	cbz	w1, e5bc <gzvprintf@@ZLIB_1.2.7.1+0xf4>
    e508:	ldr	w0, [x19, #104]
    e50c:	cbnz	w0, e5fc <gzvprintf@@ZLIB_1.2.7.1+0x134>
    e510:	str	x23, [sp, #48]
    e514:	add	x23, x19, #0x78
    e518:	ldr	w21, [x23, #8]
    e51c:	cbz	w21, e5b0 <gzvprintf@@ZLIB_1.2.7.1+0xe8>
    e520:	ldr	x1, [x19, #120]
    e524:	add	x21, x1, w21, uxtw
    e528:	ldr	w0, [x19, #40]
    e52c:	mov	x2, x22
    e530:	ldp	x6, x7, [x20]
    e534:	sub	w0, w0, #0x1
    e538:	ldp	x4, x5, [x20, #16]
    e53c:	add	x3, sp, #0x40
    e540:	strb	wzr, [x21, w0, uxtw]
    e544:	mov	x0, x21
    e548:	stp	x6, x7, [sp, #64]
    e54c:	ldr	w1, [x19, #40]
    e550:	stp	x4, x5, [sp, #80]
    e554:	bl	2620 <vsnprintf@plt>
    e558:	mov	w20, w0
    e55c:	cbz	w0, e598 <gzvprintf@@ZLIB_1.2.7.1+0xd0>
    e560:	ldr	w22, [x19, #40]
    e564:	cmp	w22, w0
    e568:	b.ls	e5e0 <gzvprintf@@ZLIB_1.2.7.1+0x118>  // b.plast
    e56c:	sub	w0, w22, #0x1
    e570:	ldrb	w0, [x21, w0, uxtw]
    e574:	cbnz	w0, e5e0 <gzvprintf@@ZLIB_1.2.7.1+0x118>
    e578:	ldr	x0, [x19, #16]
    e57c:	ldr	w21, [x23, #8]
    e580:	add	w21, w20, w21
    e584:	str	w21, [x23, #8]
    e588:	add	x0, x0, w20, sxtw
    e58c:	str	x0, [x19, #16]
    e590:	cmp	w22, w21
    e594:	b.ls	e618 <gzvprintf@@ZLIB_1.2.7.1+0x150>  // b.plast
    e598:	ldp	x21, x22, [sp, #32]
    e59c:	ldr	x23, [sp, #48]
    e5a0:	mov	w0, w20
    e5a4:	ldp	x19, x20, [sp, #16]
    e5a8:	ldp	x29, x30, [sp], #96
    e5ac:	ret
    e5b0:	ldr	x1, [x19, #48]
    e5b4:	str	x1, [x19, #120]
    e5b8:	b	e524 <gzvprintf@@ZLIB_1.2.7.1+0x5c>
    e5bc:	bl	dc60 <gzclose_r@@ZLIB_1.2.3.5+0xa8>
    e5c0:	cmn	w0, #0x1
    e5c4:	b.ne	e508 <gzvprintf@@ZLIB_1.2.7.1+0x40>  // b.any
    e5c8:	ldr	w20, [x19, #108]
    e5cc:	ldp	x21, x22, [sp, #32]
    e5d0:	mov	w0, w20
    e5d4:	ldp	x19, x20, [sp, #16]
    e5d8:	ldp	x29, x30, [sp], #96
    e5dc:	ret
    e5e0:	mov	w20, #0x0                   	// #0
    e5e4:	mov	w0, w20
    e5e8:	ldp	x19, x20, [sp, #16]
    e5ec:	ldp	x21, x22, [sp, #32]
    e5f0:	ldr	x23, [sp, #48]
    e5f4:	ldp	x29, x30, [sp], #96
    e5f8:	ret
    e5fc:	ldr	x1, [x19, #96]
    e600:	str	wzr, [x19, #104]
    e604:	mov	x0, x19
    e608:	bl	df88 <gzclose_r@@ZLIB_1.2.3.5+0x3d0>
    e60c:	cmn	w0, #0x1
    e610:	b.ne	e510 <gzvprintf@@ZLIB_1.2.7.1+0x48>  // b.any
    e614:	b	e5c8 <gzvprintf@@ZLIB_1.2.7.1+0x100>
    e618:	str	w22, [x23, #8]
    e61c:	mov	x0, x19
    e620:	mov	w1, #0x0                   	// #0
    e624:	bl	dd80 <gzclose_r@@ZLIB_1.2.3.5+0x1c8>
    e628:	cmn	w0, #0x1
    e62c:	b.eq	e66c <gzvprintf@@ZLIB_1.2.7.1+0x1a4>  // b.none
    e630:	ldr	x0, [x19, #48]
    e634:	sub	w2, w21, w22
    e638:	ldr	w1, [x19, #40]
    e63c:	sub	w22, w21, w22
    e640:	add	x1, x0, x1
    e644:	bl	23a0 <memcpy@plt>
    e648:	ldr	x0, [x19, #48]
    e64c:	str	x0, [x19, #120]
    e650:	str	w22, [x23, #8]
    e654:	ldp	x21, x22, [sp, #32]
    e658:	ldr	x23, [sp, #48]
    e65c:	b	e5a0 <gzvprintf@@ZLIB_1.2.7.1+0xd8>
    e660:	mov	w20, #0xfffffffe            	// #-2
    e664:	ldp	x21, x22, [sp, #32]
    e668:	b	e5a0 <gzvprintf@@ZLIB_1.2.7.1+0xd8>
    e66c:	ldr	w20, [x19, #108]
    e670:	ldp	x21, x22, [sp, #32]
    e674:	ldr	x23, [sp, #48]
    e678:	b	e5a0 <gzvprintf@@ZLIB_1.2.7.1+0xd8>
    e67c:	mov	w20, #0xfffffffe            	// #-2
    e680:	b	e5a0 <gzvprintf@@ZLIB_1.2.7.1+0xd8>
    e684:	nop

000000000000e688 <gzprintf@@Base>:
    e688:	stp	x29, x30, [sp, #-256]!
    e68c:	mov	w9, #0xffffffd0            	// #-48
    e690:	mov	w8, #0xffffff80            	// #-128
    e694:	mov	x29, sp
    e698:	add	x10, sp, #0xd0
    e69c:	add	x11, sp, #0x100
    e6a0:	stp	x11, x11, [sp, #48]
    e6a4:	str	x10, [sp, #64]
    e6a8:	stp	w9, w8, [sp, #72]
    e6ac:	ldp	x10, x11, [sp, #48]
    e6b0:	stp	x10, x11, [sp, #16]
    e6b4:	ldp	x8, x9, [sp, #64]
    e6b8:	stp	x8, x9, [sp, #32]
    e6bc:	str	q0, [sp, #80]
    e6c0:	str	q1, [sp, #96]
    e6c4:	str	q2, [sp, #112]
    e6c8:	str	q3, [sp, #128]
    e6cc:	str	q4, [sp, #144]
    e6d0:	str	q5, [sp, #160]
    e6d4:	str	q6, [sp, #176]
    e6d8:	str	q7, [sp, #192]
    e6dc:	stp	x2, x3, [sp, #208]
    e6e0:	add	x2, sp, #0x10
    e6e4:	stp	x4, x5, [sp, #224]
    e6e8:	stp	x6, x7, [sp, #240]
    e6ec:	bl	23c0 <gzvprintf@plt>
    e6f0:	ldp	x29, x30, [sp], #256
    e6f4:	ret

000000000000e6f8 <gzflush@@Base>:
    e6f8:	cbz	x0, e770 <gzflush@@Base+0x78>
    e6fc:	stp	x29, x30, [sp, #-32]!
    e700:	mov	x29, sp
    e704:	ldr	w2, [x0, #24]
    e708:	stp	x19, x20, [sp, #16]
    e70c:	mov	w20, w1
    e710:	mov	x19, x0
    e714:	mov	w1, #0x79b1                	// #31153
    e718:	cmp	w2, w1
    e71c:	b.ne	e768 <gzflush@@Base+0x70>  // b.any
    e720:	ldr	w1, [x0, #108]
    e724:	cbnz	w1, e768 <gzflush@@Base+0x70>
    e728:	cmp	w20, #0x4
    e72c:	b.hi	e768 <gzflush@@Base+0x70>  // b.pmore
    e730:	ldr	w1, [x0, #104]
    e734:	cbz	w1, e74c <gzflush@@Base+0x54>
    e738:	ldr	x1, [x0, #96]
    e73c:	str	wzr, [x0, #104]
    e740:	bl	df88 <gzclose_r@@ZLIB_1.2.3.5+0x3d0>
    e744:	cmn	w0, #0x1
    e748:	b.eq	e758 <gzflush@@Base+0x60>  // b.none
    e74c:	mov	w1, w20
    e750:	mov	x0, x19
    e754:	bl	dd80 <gzclose_r@@ZLIB_1.2.3.5+0x1c8>
    e758:	ldr	w0, [x19, #108]
    e75c:	ldp	x19, x20, [sp, #16]
    e760:	ldp	x29, x30, [sp], #32
    e764:	ret
    e768:	mov	w0, #0xfffffffe            	// #-2
    e76c:	b	e75c <gzflush@@Base+0x64>
    e770:	mov	w0, #0xfffffffe            	// #-2
    e774:	ret

000000000000e778 <gzsetparams@@Base>:
    e778:	stp	x29, x30, [sp, #-64]!
    e77c:	mov	x29, sp
    e780:	stp	x21, x22, [sp, #32]
    e784:	cbz	x0, e870 <gzsetparams@@Base+0xf8>
    e788:	stp	x19, x20, [sp, #16]
    e78c:	mov	x19, x0
    e790:	mov	w20, w1
    e794:	mov	w0, #0x79b1                	// #31153
    e798:	ldr	w1, [x19, #24]
    e79c:	cmp	w1, w0
    e7a0:	b.ne	e864 <gzsetparams@@Base+0xec>  // b.any
    e7a4:	ldr	w22, [x19, #108]
    e7a8:	cbnz	w22, e864 <gzsetparams@@Base+0xec>
    e7ac:	ldr	w0, [x19, #88]
    e7b0:	mov	w21, w2
    e7b4:	cmp	w0, w20
    e7b8:	b.eq	e81c <gzsetparams@@Base+0xa4>  // b.none
    e7bc:	ldr	w0, [x19, #104]
    e7c0:	cbnz	w0, e830 <gzsetparams@@Base+0xb8>
    e7c4:	ldr	w0, [x19, #40]
    e7c8:	cbz	w0, e804 <gzsetparams@@Base+0x8c>
    e7cc:	str	x23, [sp, #48]
    e7d0:	add	x23, x19, #0x78
    e7d4:	ldr	w0, [x23, #8]
    e7d8:	cbz	w0, e7f0 <gzsetparams@@Base+0x78>
    e7dc:	mov	x0, x19
    e7e0:	mov	w1, #0x5                   	// #5
    e7e4:	bl	dd80 <gzclose_r@@ZLIB_1.2.3.5+0x1c8>
    e7e8:	cmn	w0, #0x1
    e7ec:	b.eq	e854 <gzsetparams@@Base+0xdc>  // b.none
    e7f0:	mov	x0, x23
    e7f4:	mov	w2, w21
    e7f8:	mov	w1, w20
    e7fc:	bl	24e0 <deflateParams@plt>
    e800:	ldr	x23, [sp, #48]
    e804:	stp	w20, w21, [x19, #88]
    e808:	ldp	x19, x20, [sp, #16]
    e80c:	mov	w0, w22
    e810:	ldp	x21, x22, [sp, #32]
    e814:	ldp	x29, x30, [sp], #64
    e818:	ret
    e81c:	ldr	w0, [x19, #92]
    e820:	cmp	w0, w2
    e824:	b.ne	e7bc <gzsetparams@@Base+0x44>  // b.any
    e828:	ldp	x19, x20, [sp, #16]
    e82c:	b	e80c <gzsetparams@@Base+0x94>
    e830:	ldr	x1, [x19, #96]
    e834:	str	wzr, [x19, #104]
    e838:	mov	x0, x19
    e83c:	bl	df88 <gzclose_r@@ZLIB_1.2.3.5+0x3d0>
    e840:	cmn	w0, #0x1
    e844:	b.ne	e7c4 <gzsetparams@@Base+0x4c>  // b.any
    e848:	ldr	w22, [x19, #108]
    e84c:	ldp	x19, x20, [sp, #16]
    e850:	b	e80c <gzsetparams@@Base+0x94>
    e854:	ldr	w22, [x19, #108]
    e858:	ldp	x19, x20, [sp, #16]
    e85c:	ldr	x23, [sp, #48]
    e860:	b	e80c <gzsetparams@@Base+0x94>
    e864:	mov	w22, #0xfffffffe            	// #-2
    e868:	ldp	x19, x20, [sp, #16]
    e86c:	b	e80c <gzsetparams@@Base+0x94>
    e870:	mov	w22, #0xfffffffe            	// #-2
    e874:	b	e80c <gzsetparams@@Base+0x94>

000000000000e878 <gzclose_w@@ZLIB_1.2.3.5>:
    e878:	stp	x29, x30, [sp, #-32]!
    e87c:	mov	x29, sp
    e880:	stp	x19, x20, [sp, #16]
    e884:	cbz	x0, e948 <gzclose_w@@ZLIB_1.2.3.5+0xd0>
    e888:	ldr	w2, [x0, #24]
    e88c:	mov	w1, #0x79b1                	// #31153
    e890:	mov	x19, x0
    e894:	cmp	w2, w1
    e898:	b.ne	e948 <gzclose_w@@ZLIB_1.2.3.5+0xd0>  // b.any
    e89c:	ldr	w1, [x0, #104]
    e8a0:	cbnz	w1, e918 <gzclose_w@@ZLIB_1.2.3.5+0xa0>
    e8a4:	mov	w20, #0x0                   	// #0
    e8a8:	mov	x0, x19
    e8ac:	mov	w1, #0x4                   	// #4
    e8b0:	bl	dd80 <gzclose_r@@ZLIB_1.2.3.5+0x1c8>
    e8b4:	cmn	w0, #0x1
    e8b8:	b.ne	e8c0 <gzclose_w@@ZLIB_1.2.3.5+0x48>  // b.any
    e8bc:	ldr	w20, [x19, #108]
    e8c0:	ldr	w0, [x19, #40]
    e8c4:	cbz	w0, e8d8 <gzclose_w@@ZLIB_1.2.3.5+0x60>
    e8c8:	ldr	w0, [x19, #64]
    e8cc:	cbz	w0, e934 <gzclose_w@@ZLIB_1.2.3.5+0xbc>
    e8d0:	ldr	x0, [x19, #48]
    e8d4:	bl	2570 <free@plt>
    e8d8:	mov	x2, #0x0                   	// #0
    e8dc:	mov	w1, #0x0                   	// #0
    e8e0:	mov	x0, x19
    e8e4:	bl	c780 <gzerror@@Base+0x60>
    e8e8:	ldr	x0, [x19, #32]
    e8ec:	bl	2570 <free@plt>
    e8f0:	ldr	w0, [x19, #28]
    e8f4:	bl	2510 <close@plt>
    e8f8:	cmn	w0, #0x1
    e8fc:	csinv	w20, w20, wzr, ne  // ne = any
    e900:	mov	x0, x19
    e904:	bl	2570 <free@plt>
    e908:	mov	w0, w20
    e90c:	ldp	x19, x20, [sp, #16]
    e910:	ldp	x29, x30, [sp], #32
    e914:	ret
    e918:	ldr	x1, [x0, #96]
    e91c:	str	wzr, [x0, #104]
    e920:	bl	df88 <gzclose_r@@ZLIB_1.2.3.5+0x3d0>
    e924:	cmn	w0, #0x1
    e928:	b.ne	e8a4 <gzclose_w@@ZLIB_1.2.3.5+0x2c>  // b.any
    e92c:	ldr	w20, [x19, #108]
    e930:	b	e8a8 <gzclose_w@@ZLIB_1.2.3.5+0x30>
    e934:	add	x0, x19, #0x78
    e938:	bl	2590 <deflateEnd@plt>
    e93c:	ldr	x0, [x19, #56]
    e940:	bl	2570 <free@plt>
    e944:	b	e8d0 <gzclose_w@@ZLIB_1.2.3.5+0x58>
    e948:	mov	w20, #0xfffffffe            	// #-2
    e94c:	b	e908 <gzclose_w@@ZLIB_1.2.3.5+0x90>

Disassembly of section .fini:

000000000000e950 <.fini>:
    e950:	stp	x29, x30, [sp, #-16]!
    e954:	mov	x29, sp
    e958:	ldp	x29, x30, [sp], #16
    e95c:	ret
