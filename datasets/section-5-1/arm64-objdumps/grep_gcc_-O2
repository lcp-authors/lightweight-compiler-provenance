
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//grep_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402250 <.init>:
  402250:	stp	x29, x30, [sp, #-16]!
  402254:	mov	x29, sp
  402258:	bl	403f30 <wcrtomb@plt+0x1610>
  40225c:	ldp	x29, x30, [sp], #16
  402260:	ret

Disassembly of section .plt:

0000000000402270 <mbrtowc@plt-0x20>:
  402270:	stp	x16, x30, [sp, #-16]!
  402274:	adrp	x16, 43d000 <_obstack_memory_used@@Base+0x25f38>
  402278:	ldr	x17, [x16, #4088]
  40227c:	add	x16, x16, #0xff8
  402280:	br	x17
  402284:	nop
  402288:	nop
  40228c:	nop

0000000000402290 <mbrtowc@plt>:
  402290:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402294:	ldr	x17, [x16]
  402298:	add	x16, x16, #0x0
  40229c:	br	x17

00000000004022a0 <memcpy@plt>:
  4022a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4022a4:	ldr	x17, [x16, #8]
  4022a8:	add	x16, x16, #0x8
  4022ac:	br	x17

00000000004022b0 <sigaltstack@plt>:
  4022b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4022b4:	ldr	x17, [x16, #16]
  4022b8:	add	x16, x16, #0x10
  4022bc:	br	x17

00000000004022c0 <memmove@plt>:
  4022c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4022c4:	ldr	x17, [x16, #24]
  4022c8:	add	x16, x16, #0x18
  4022cc:	br	x17

00000000004022d0 <isalpha@plt>:
  4022d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4022d4:	ldr	x17, [x16, #32]
  4022d8:	add	x16, x16, #0x20
  4022dc:	br	x17

00000000004022e0 <_exit@plt>:
  4022e0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4022e4:	ldr	x17, [x16, #40]
  4022e8:	add	x16, x16, #0x28
  4022ec:	br	x17

00000000004022f0 <fwrite_unlocked@plt>:
  4022f0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4022f4:	ldr	x17, [x16, #48]
  4022f8:	add	x16, x16, #0x30
  4022fc:	br	x17

0000000000402300 <strlen@plt>:
  402300:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402304:	ldr	x17, [x16, #56]
  402308:	add	x16, x16, #0x38
  40230c:	br	x17

0000000000402310 <fputs@plt>:
  402310:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402314:	ldr	x17, [x16, #64]
  402318:	add	x16, x16, #0x40
  40231c:	br	x17

0000000000402320 <exit@plt>:
  402320:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402324:	ldr	x17, [x16, #72]
  402328:	add	x16, x16, #0x48
  40232c:	br	x17

0000000000402330 <error@plt>:
  402330:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402334:	ldr	x17, [x16, #80]
  402338:	add	x16, x16, #0x50
  40233c:	br	x17

0000000000402340 <fchdir@plt>:
  402340:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402344:	ldr	x17, [x16, #88]
  402348:	add	x16, x16, #0x58
  40234c:	br	x17

0000000000402350 <wctype@plt>:
  402350:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402354:	ldr	x17, [x16, #96]
  402358:	add	x16, x16, #0x60
  40235c:	br	x17

0000000000402360 <__cxa_atexit@plt>:
  402360:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402364:	ldr	x17, [x16, #104]
  402368:	add	x16, x16, #0x68
  40236c:	br	x17

0000000000402370 <iswcntrl@plt>:
  402370:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402374:	ldr	x17, [x16, #112]
  402378:	add	x16, x16, #0x70
  40237c:	br	x17

0000000000402380 <qsort@plt>:
  402380:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402384:	ldr	x17, [x16, #120]
  402388:	add	x16, x16, #0x78
  40238c:	br	x17

0000000000402390 <isblank@plt>:
  402390:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402394:	ldr	x17, [x16, #128]
  402398:	add	x16, x16, #0x80
  40239c:	br	x17

00000000004023a0 <lseek@plt>:
  4023a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #136]
  4023a8:	add	x16, x16, #0x88
  4023ac:	br	x17

00000000004023b0 <__fpending@plt>:
  4023b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #144]
  4023b8:	add	x16, x16, #0x90
  4023bc:	br	x17

00000000004023c0 <__ctype_tolower_loc@plt>:
  4023c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #152]
  4023c8:	add	x16, x16, #0x98
  4023cc:	br	x17

00000000004023d0 <stpcpy@plt>:
  4023d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #160]
  4023d8:	add	x16, x16, #0xa0
  4023dc:	br	x17

00000000004023e0 <fclose@plt>:
  4023e0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #168]
  4023e8:	add	x16, x16, #0xa8
  4023ec:	br	x17

00000000004023f0 <wctob@plt>:
  4023f0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #176]
  4023f8:	add	x16, x16, #0xb0
  4023fc:	br	x17

0000000000402400 <nl_langinfo@plt>:
  402400:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #184]
  402408:	add	x16, x16, #0xb8
  40240c:	br	x17

0000000000402410 <fopen@plt>:
  402410:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #192]
  402418:	add	x16, x16, #0xc0
  40241c:	br	x17

0000000000402420 <isspace@plt>:
  402420:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #200]
  402428:	add	x16, x16, #0xc8
  40242c:	br	x17

0000000000402430 <iswctype@plt>:
  402430:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #208]
  402438:	add	x16, x16, #0xd0
  40243c:	br	x17

0000000000402440 <malloc@plt>:
  402440:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #216]
  402448:	add	x16, x16, #0xd8
  40244c:	br	x17

0000000000402450 <wcwidth@plt>:
  402450:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #224]
  402458:	add	x16, x16, #0xe0
  40245c:	br	x17

0000000000402460 <open@plt>:
  402460:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #232]
  402468:	add	x16, x16, #0xe8
  40246c:	br	x17

0000000000402470 <splice@plt>:
  402470:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #240]
  402478:	add	x16, x16, #0xf0
  40247c:	br	x17

0000000000402480 <islower@plt>:
  402480:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #248]
  402488:	add	x16, x16, #0xf8
  40248c:	br	x17

0000000000402490 <isxdigit@plt>:
  402490:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #256]
  402498:	add	x16, x16, #0x100
  40249c:	br	x17

00000000004024a0 <__strtol_internal@plt>:
  4024a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #264]
  4024a8:	add	x16, x16, #0x108
  4024ac:	br	x17

00000000004024b0 <sigemptyset@plt>:
  4024b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #272]
  4024b8:	add	x16, x16, #0x110
  4024bc:	br	x17

00000000004024c0 <strncmp@plt>:
  4024c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #280]
  4024c8:	add	x16, x16, #0x118
  4024cc:	br	x17

00000000004024d0 <bindtextdomain@plt>:
  4024d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #288]
  4024d8:	add	x16, x16, #0x120
  4024dc:	br	x17

00000000004024e0 <isdigit@plt>:
  4024e0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #296]
  4024e8:	add	x16, x16, #0x128
  4024ec:	br	x17

00000000004024f0 <__libc_start_main@plt>:
  4024f0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #304]
  4024f8:	add	x16, x16, #0x130
  4024fc:	br	x17

0000000000402500 <fstatfs@plt>:
  402500:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #312]
  402508:	add	x16, x16, #0x138
  40250c:	br	x17

0000000000402510 <memset@plt>:
  402510:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #320]
  402518:	add	x16, x16, #0x140
  40251c:	br	x17

0000000000402520 <calloc@plt>:
  402520:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #328]
  402528:	add	x16, x16, #0x148
  40252c:	br	x17

0000000000402530 <isupper@plt>:
  402530:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #336]
  402538:	add	x16, x16, #0x150
  40253c:	br	x17

0000000000402540 <readdir@plt>:
  402540:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #344]
  402548:	add	x16, x16, #0x158
  40254c:	br	x17

0000000000402550 <realloc@plt>:
  402550:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #352]
  402558:	add	x16, x16, #0x160
  40255c:	br	x17

0000000000402560 <__ctype_toupper_loc@plt>:
  402560:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #360]
  402568:	add	x16, x16, #0x168
  40256c:	br	x17

0000000000402570 <closedir@plt>:
  402570:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #368]
  402578:	add	x16, x16, #0x170
  40257c:	br	x17

0000000000402580 <close@plt>:
  402580:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #376]
  402588:	add	x16, x16, #0x178
  40258c:	br	x17

0000000000402590 <sigaction@plt>:
  402590:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #384]
  402598:	add	x16, x16, #0x180
  40259c:	br	x17

00000000004025a0 <strrchr@plt>:
  4025a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #392]
  4025a8:	add	x16, x16, #0x188
  4025ac:	br	x17

00000000004025b0 <__gmon_start__@plt>:
  4025b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #400]
  4025b8:	add	x16, x16, #0x190
  4025bc:	br	x17

00000000004025c0 <fdopendir@plt>:
  4025c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #408]
  4025c8:	add	x16, x16, #0x198
  4025cc:	br	x17

00000000004025d0 <write@plt>:
  4025d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #416]
  4025d8:	add	x16, x16, #0x1a0
  4025dc:	br	x17

00000000004025e0 <btowc@plt>:
  4025e0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #424]
  4025e8:	add	x16, x16, #0x1a8
  4025ec:	br	x17

00000000004025f0 <abort@plt>:
  4025f0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #432]
  4025f8:	add	x16, x16, #0x1b0
  4025fc:	br	x17

0000000000402600 <iscntrl@plt>:
  402600:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #440]
  402608:	add	x16, x16, #0x1b8
  40260c:	br	x17

0000000000402610 <mbsinit@plt>:
  402610:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #448]
  402618:	add	x16, x16, #0x1c0
  40261c:	br	x17

0000000000402620 <__overflow@plt>:
  402620:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #456]
  402628:	add	x16, x16, #0x1c8
  40262c:	br	x17

0000000000402630 <ispunct@plt>:
  402630:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #464]
  402638:	add	x16, x16, #0x1d0
  40263c:	br	x17

0000000000402640 <puts@plt>:
  402640:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #472]
  402648:	add	x16, x16, #0x1d8
  40264c:	br	x17

0000000000402650 <fread_unlocked@plt>:
  402650:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #480]
  402658:	add	x16, x16, #0x1e0
  40265c:	br	x17

0000000000402660 <memcmp@plt>:
  402660:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #488]
  402668:	add	x16, x16, #0x1e8
  40266c:	br	x17

0000000000402670 <textdomain@plt>:
  402670:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #496]
  402678:	add	x16, x16, #0x1f0
  40267c:	br	x17

0000000000402680 <getopt_long@plt>:
  402680:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #504]
  402688:	add	x16, x16, #0x1f8
  40268c:	br	x17

0000000000402690 <strcmp@plt>:
  402690:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #512]
  402698:	add	x16, x16, #0x200
  40269c:	br	x17

00000000004026a0 <__ctype_b_loc@plt>:
  4026a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #520]
  4026a8:	add	x16, x16, #0x208
  4026ac:	br	x17

00000000004026b0 <free@plt>:
  4026b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #528]
  4026b8:	add	x16, x16, #0x210
  4026bc:	br	x17

00000000004026c0 <__ctype_get_mb_cur_max@plt>:
  4026c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #536]
  4026c8:	add	x16, x16, #0x218
  4026cc:	br	x17

00000000004026d0 <mempcpy@plt>:
  4026d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #544]
  4026d8:	add	x16, x16, #0x220
  4026dc:	br	x17

00000000004026e0 <strchr@plt>:
  4026e0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #552]
  4026e8:	add	x16, x16, #0x228
  4026ec:	br	x17

00000000004026f0 <memrchr@plt>:
  4026f0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #560]
  4026f8:	add	x16, x16, #0x230
  4026fc:	br	x17

0000000000402700 <fnmatch@plt>:
  402700:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #568]
  402708:	add	x16, x16, #0x238
  40270c:	br	x17

0000000000402710 <fflush_unlocked@plt>:
  402710:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #576]
  402718:	add	x16, x16, #0x240
  40271c:	br	x17

0000000000402720 <fcntl@plt>:
  402720:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #584]
  402728:	add	x16, x16, #0x248
  40272c:	br	x17

0000000000402730 <strcpy@plt>:
  402730:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #592]
  402738:	add	x16, x16, #0x250
  40273c:	br	x17

0000000000402740 <dirfd@plt>:
  402740:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #600]
  402748:	add	x16, x16, #0x258
  40274c:	br	x17

0000000000402750 <__lxstat@plt>:
  402750:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #608]
  402758:	add	x16, x16, #0x260
  40275c:	br	x17

0000000000402760 <read@plt>:
  402760:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #616]
  402768:	add	x16, x16, #0x268
  40276c:	br	x17

0000000000402770 <memchr@plt>:
  402770:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #624]
  402778:	add	x16, x16, #0x270
  40277c:	br	x17

0000000000402780 <isatty@plt>:
  402780:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #632]
  402788:	add	x16, x16, #0x278
  40278c:	br	x17

0000000000402790 <sysconf@plt>:
  402790:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #640]
  402798:	add	x16, x16, #0x280
  40279c:	br	x17

00000000004027a0 <fputc_unlocked@plt>:
  4027a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #648]
  4027a8:	add	x16, x16, #0x288
  4027ac:	br	x17

00000000004027b0 <isgraph@plt>:
  4027b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #656]
  4027b8:	add	x16, x16, #0x290
  4027bc:	br	x17

00000000004027c0 <iswalnum@plt>:
  4027c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #664]
  4027c8:	add	x16, x16, #0x298
  4027cc:	br	x17

00000000004027d0 <__fxstat@plt>:
  4027d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #672]
  4027d8:	add	x16, x16, #0x2a0
  4027dc:	br	x17

00000000004027e0 <strstr@plt>:
  4027e0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #680]
  4027e8:	add	x16, x16, #0x2a8
  4027ec:	br	x17

00000000004027f0 <dcgettext@plt>:
  4027f0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #688]
  4027f8:	add	x16, x16, #0x2b0
  4027fc:	br	x17

0000000000402800 <fputs_unlocked@plt>:
  402800:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #696]
  402808:	add	x16, x16, #0x2b8
  40280c:	br	x17

0000000000402810 <strcoll@plt>:
  402810:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #704]
  402818:	add	x16, x16, #0x2c0
  40281c:	br	x17

0000000000402820 <isalnum@plt>:
  402820:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #712]
  402828:	add	x16, x16, #0x2c8
  40282c:	br	x17

0000000000402830 <towupper@plt>:
  402830:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #720]
  402838:	add	x16, x16, #0x2d0
  40283c:	br	x17

0000000000402840 <iswprint@plt>:
  402840:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #728]
  402848:	add	x16, x16, #0x2d8
  40284c:	br	x17

0000000000402850 <vfprintf@plt>:
  402850:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #736]
  402858:	add	x16, x16, #0x2e0
  40285c:	br	x17

0000000000402860 <openat@plt>:
  402860:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #744]
  402868:	add	x16, x16, #0x2e8
  40286c:	br	x17

0000000000402870 <printf@plt>:
  402870:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #752]
  402878:	add	x16, x16, #0x2f0
  40287c:	br	x17

0000000000402880 <__assert_fail@plt>:
  402880:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #760]
  402888:	add	x16, x16, #0x2f8
  40288c:	br	x17

0000000000402890 <__errno_location@plt>:
  402890:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #768]
  402898:	add	x16, x16, #0x300
  40289c:	br	x17

00000000004028a0 <getenv@plt>:
  4028a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #776]
  4028a8:	add	x16, x16, #0x308
  4028ac:	br	x17

00000000004028b0 <__xstat@plt>:
  4028b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #784]
  4028b8:	add	x16, x16, #0x310
  4028bc:	br	x17

00000000004028c0 <towlower@plt>:
  4028c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #792]
  4028c8:	add	x16, x16, #0x318
  4028cc:	br	x17

00000000004028d0 <fprintf@plt>:
  4028d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #800]
  4028d8:	add	x16, x16, #0x320
  4028dc:	br	x17

00000000004028e0 <__uflow@plt>:
  4028e0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #808]
  4028e8:	add	x16, x16, #0x328
  4028ec:	br	x17

00000000004028f0 <isprint@plt>:
  4028f0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #816]
  4028f8:	add	x16, x16, #0x330
  4028fc:	br	x17

0000000000402900 <setlocale@plt>:
  402900:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #824]
  402908:	add	x16, x16, #0x338
  40290c:	br	x17

0000000000402910 <__fxstatat@plt>:
  402910:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #832]
  402918:	add	x16, x16, #0x340
  40291c:	br	x17

0000000000402920 <wcrtomb@plt>:
  402920:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #840]
  402928:	add	x16, x16, #0x348
  40292c:	br	x17

Disassembly of section .text:

0000000000402930 <_obstack_begin@@Base-0x14588>:
  402930:	stp	x29, x30, [sp, #-464]!
  402934:	adrp	x6, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402938:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xef38>
  40293c:	mov	x29, sp
  402940:	add	x5, x2, #0x9e8
  402944:	stp	x25, x26, [sp, #64]
  402948:	mov	w26, w0
  40294c:	mov	w0, #0x2                   	// #2
  402950:	str	w0, [x6, #976]
  402954:	adrp	x6, 442000 <__progname@@GLIBC_2.17+0x3b98>
  402958:	str	x1, [sp, #120]
  40295c:	mov	x1, x5
  402960:	str	x5, [sp, #136]
  402964:	mov	w5, #0xa                   	// #10
  402968:	strb	w5, [x6, #2264]
  40296c:	adrp	x5, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402970:	add	x5, x5, #0x478
  402974:	mov	x2, #0xffffffffffffffff    	// #-1
  402978:	mov	w4, #0xffffffff            	// #-1
  40297c:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  402980:	stp	x19, x20, [sp, #16]
  402984:	mov	w0, #0x6                   	// #6
  402988:	stp	x21, x22, [sp, #32]
  40298c:	stp	x23, x24, [sp, #48]
  402990:	stp	x27, x28, [sp, #80]
  402994:	str	w4, [x5, #148]
  402998:	strb	wzr, [x5, #170]
  40299c:	stp	xzr, xzr, [sp, #176]
  4029a0:	stp	xzr, x2, [sp, #192]
  4029a4:	str	x2, [x5, #232]
  4029a8:	str	x2, [x5, #248]
  4029ac:	str	x3, [x5, #320]
  4029b0:	bl	402900 <setlocale@plt>
  4029b4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  4029b8:	add	x1, x1, #0x2d8
  4029bc:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xdf38>
  4029c0:	add	x0, x0, #0x2f0
  4029c4:	mov	x19, x0
  4029c8:	str	x0, [sp, #144]
  4029cc:	bl	4024d0 <bindtextdomain@plt>
  4029d0:	mov	x0, x19
  4029d4:	bl	402670 <textdomain@plt>
  4029d8:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4029dc:	add	x0, x0, #0x8e0
  4029e0:	bl	40f828 <wcrtomb@plt+0xcf08>
  4029e4:	adrp	x0, 405000 <wcrtomb@plt+0x26e0>
  4029e8:	add	x0, x0, #0x68
  4029ec:	bl	424178 <_obstack_memory_used@@Base+0xd0b0>
  4029f0:	mov	x0, #0x0                   	// #0
  4029f4:	bl	409d20 <wcrtomb@plt+0x7400>
  4029f8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xdf38>
  4029fc:	add	x0, x0, #0x2f8
  402a00:	bl	4028a0 <getenv@plt>
  402a04:	cbz	x0, 40377c <wcrtomb@plt+0xe5c>
  402a08:	ldrb	w1, [x0]
  402a0c:	mov	x19, x0
  402a10:	str	wzr, [sp, #156]
  402a14:	cbnz	w1, 403664 <wcrtomb@plt+0xd44>
  402a18:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402a1c:	mov	w28, w26
  402a20:	adrp	x20, 425000 <_obstack_memory_used@@Base+0xdf38>
  402a24:	adrp	x22, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402a28:	mov	w21, #0x0                   	// #0
  402a2c:	add	x20, x20, #0xa50
  402a30:	add	x22, x22, #0x360
  402a34:	add	x19, sp, #0x150
  402a38:	mov	w26, w21
  402a3c:	add	x23, x0, #0x450
  402a40:	mov	w0, #0xffffffff            	// #-1
  402a44:	str	w0, [sp, #132]
  402a48:	str	wzr, [sp, #152]
  402a4c:	ldr	w0, [x23]
  402a50:	mov	x25, x19
  402a54:	add	x3, x20, #0x230
  402a58:	add	x2, x20, #0x890
  402a5c:	mov	w27, w0
  402a60:	mov	w21, #0x0                   	// #0
  402a64:	str	w0, [sp, #112]
  402a68:	ldr	x1, [sp, #120]
  402a6c:	mov	w0, w28
  402a70:	mov	x4, #0x0                   	// #0
  402a74:	stp	x2, x3, [sp, #96]
  402a78:	bl	402680 <getopt_long@plt>
  402a7c:	mov	w24, w0
  402a80:	sub	w0, w0, #0x30
  402a84:	cmp	w0, #0x9
  402a88:	b.hi	402abc <wcrtomb@plt+0x19c>  // b.pmore
  402a8c:	ldr	w1, [x22, #96]
  402a90:	cmp	w21, #0x0
  402a94:	mov	x0, x19
  402a98:	ccmp	w1, w27, #0x0, ne  // ne = any
  402a9c:	ldp	x2, x3, [sp, #96]
  402aa0:	b.eq	403174 <wcrtomb@plt+0x854>  // b.none
  402aa4:	mov	x25, x0
  402aa8:	mov	w21, #0x1                   	// #1
  402aac:	str	w27, [x22, #96]
  402ab0:	ldr	w27, [x23]
  402ab4:	strb	w24, [x25], #1
  402ab8:	b	402a68 <wcrtomb@plt+0x148>
  402abc:	cmp	x25, x19
  402ac0:	b.eq	402ad4 <wcrtomb@plt+0x1b4>  // b.none
  402ac4:	strb	wzr, [x25]
  402ac8:	add	x1, sp, #0xc8
  402acc:	mov	x0, x19
  402ad0:	bl	405638 <wcrtomb@plt+0x2d18>
  402ad4:	cmn	w24, #0x1
  402ad8:	b.eq	4031a4 <wcrtomb@plt+0x884>  // b.none
  402adc:	cmp	w24, #0x109
  402ae0:	b.hi	403c7c <wcrtomb@plt+0x135c>  // b.pmore
  402ae4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xdf38>
  402ae8:	add	x0, x0, #0x838
  402aec:	ldrh	w0, [x0, w24, uxtw #1]
  402af0:	adr	x1, 402afc <wcrtomb@plt+0x1dc>
  402af4:	add	x0, x1, w0, sxth #2
  402af8:	br	x0
  402afc:	mov	w26, #0xffffffff            	// #-1
  402b00:	b	402a4c <wcrtomb@plt+0x12c>
  402b04:	mov	w26, #0x1                   	// #1
  402b08:	b	402a4c <wcrtomb@plt+0x12c>
  402b0c:	mov	w0, #0x30a                 	// #778
  402b10:	str	w0, [x22, #92]
  402b14:	ldr	w0, [sp, #112]
  402b18:	str	w0, [sp, #152]
  402b1c:	mov	w0, #0x3                   	// #3
  402b20:	str	w0, [x22, #88]
  402b24:	b	402a4c <wcrtomb@plt+0x12c>
  402b28:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  402b2c:	mov	x0, x21
  402b30:	add	x1, x1, #0x3c0
  402b34:	bl	402690 <strcmp@plt>
  402b38:	cbnz	w0, 402b50 <wcrtomb@plt+0x230>
  402b3c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402b40:	add	x1, x1, #0x478
  402b44:	mov	w0, #0x1                   	// #1
  402b48:	str	w0, [x1, #132]
  402b4c:	b	402a4c <wcrtomb@plt+0x12c>
  402b50:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  402b54:	mov	x0, x21
  402b58:	add	x1, x1, #0x3c8
  402b5c:	bl	402690 <strcmp@plt>
  402b60:	cbnz	w0, 403e9c <wcrtomb@plt+0x157c>
  402b64:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402b68:	add	x1, x1, #0x478
  402b6c:	mov	w0, #0x2                   	// #2
  402b70:	str	w0, [x1, #132]
  402b74:	b	402a4c <wcrtomb@plt+0x12c>
  402b78:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402b7c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402b80:	add	x21, x20, #0x200
  402b84:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xdf38>
  402b88:	ldr	x5, [x2, #968]
  402b8c:	mov	x3, x21
  402b90:	ldr	x1, [x1, #1096]
  402b94:	add	x0, x0, #0x388
  402b98:	add	x2, x20, #0x210
  402b9c:	mov	x4, #0x4                   	// #4
  402ba0:	bl	409b98 <wcrtomb@plt+0x7278>
  402ba4:	ldr	w0, [x21, x0, lsl #2]
  402ba8:	ldr	w1, [sp, #112]
  402bac:	cmp	w0, #0x3
  402bb0:	str	w0, [x22, #88]
  402bb4:	ldr	w0, [sp, #152]
  402bb8:	csel	w0, w0, w1, ne  // ne = any
  402bbc:	str	w0, [sp, #152]
  402bc0:	b	402a4c <wcrtomb@plt+0x12c>
  402bc4:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402bc8:	add	x1, x1, #0x478
  402bcc:	mov	w0, #0x1                   	// #1
  402bd0:	strb	w0, [x1, #457]
  402bd4:	b	402a4c <wcrtomb@plt+0x12c>
  402bd8:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402bdc:	add	x1, x1, #0x478
  402be0:	mov	w0, #0x1                   	// #1
  402be4:	strb	w0, [x1, #153]
  402be8:	b	402a4c <wcrtomb@plt+0x12c>
  402bec:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402bf0:	add	x1, x1, #0x478
  402bf4:	mov	w0, #0x2                   	// #2
  402bf8:	str	w0, [x1, #312]
  402bfc:	b	402a4c <wcrtomb@plt+0x12c>
  402c00:	ldr	w1, [sp, #132]
  402c04:	adrp	x0, 424000 <_obstack_memory_used@@Base+0xcf38>
  402c08:	add	x0, x0, #0x290
  402c0c:	bl	404f90 <wcrtomb@plt+0x2670>
  402c10:	str	w0, [sp, #132]
  402c14:	b	402a4c <wcrtomb@plt+0x12c>
  402c18:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402c1c:	add	x0, x0, #0x478
  402c20:	str	wzr, [x0, #148]
  402c24:	b	402a4c <wcrtomb@plt+0x12c>
  402c28:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402c2c:	ldr	w1, [sp, #132]
  402c30:	ldr	x0, [x0, #1096]
  402c34:	bl	404f90 <wcrtomb@plt+0x2670>
  402c38:	str	w0, [sp, #132]
  402c3c:	b	402a4c <wcrtomb@plt+0x12c>
  402c40:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402c44:	add	x1, x1, #0x478
  402c48:	mov	w0, #0x1                   	// #1
  402c4c:	strb	w0, [x1, #460]
  402c50:	b	402a4c <wcrtomb@plt+0x12c>
  402c54:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402c58:	add	x1, x1, #0x478
  402c5c:	mov	w0, #0x1                   	// #1
  402c60:	strb	w0, [x1, #168]
  402c64:	b	402a4c <wcrtomb@plt+0x12c>
  402c68:	ldr	w1, [sp, #132]
  402c6c:	ldr	x0, [sp, #144]
  402c70:	bl	404f90 <wcrtomb@plt+0x2670>
  402c74:	str	w0, [sp, #132]
  402c78:	b	402a4c <wcrtomb@plt+0x12c>
  402c7c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402c80:	add	x1, x1, #0x478
  402c84:	mov	w0, #0x1                   	// #1
  402c88:	strb	w0, [x1, #16]
  402c8c:	b	402a4c <wcrtomb@plt+0x12c>
  402c90:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402c94:	add	x1, x1, #0x478
  402c98:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402c9c:	str	wzr, [x0, #976]
  402ca0:	mov	w0, #0x1                   	// #1
  402ca4:	strb	w0, [x1, #265]
  402ca8:	b	402a4c <wcrtomb@plt+0x12c>
  402cac:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402cb0:	add	x1, x1, #0x478
  402cb4:	mov	w0, #0x1                   	// #1
  402cb8:	strb	w0, [x1, #170]
  402cbc:	b	402a4c <wcrtomb@plt+0x12c>
  402cc0:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402cc4:	add	x1, x1, #0x478
  402cc8:	mov	w0, #0x1                   	// #1
  402ccc:	strb	w0, [x1, #152]
  402cd0:	b	402a4c <wcrtomb@plt+0x12c>
  402cd4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402cd8:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402cdc:	ldr	x4, [sp, #136]
  402ce0:	add	x1, x1, #0x478
  402ce4:	ldr	x0, [x0, #1096]
  402ce8:	add	x3, x1, #0x140
  402cec:	mov	w2, #0xa                   	// #10
  402cf0:	mov	x1, #0x0                   	// #0
  402cf4:	bl	414308 <wcrtomb@plt+0x119e8>
  402cf8:	cmp	w0, #0x1
  402cfc:	b.ls	402a4c <wcrtomb@plt+0x12c>  // b.plast
  402d00:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  402d04:	mov	w2, #0x5                   	// #5
  402d08:	add	x1, x1, #0x3a0
  402d0c:	b	403ea8 <wcrtomb@plt+0x1588>
  402d10:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402d14:	add	x1, x1, #0x478
  402d18:	mov	w0, #0x1                   	// #1
  402d1c:	str	w0, [x1, #312]
  402d20:	b	402a4c <wcrtomb@plt+0x12c>
  402d24:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  402d28:	mov	w1, #0x1                   	// #1
  402d2c:	strb	w1, [x0, #3558]
  402d30:	b	402a4c <wcrtomb@plt+0x12c>
  402d34:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402d38:	add	x0, x0, #0x478
  402d3c:	ldr	x0, [x0, #272]
  402d40:	cbz	x0, 403b4c <wcrtomb@plt+0x122c>
  402d44:	adrp	x27, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402d48:	cmp	w24, #0x106
  402d4c:	mov	w3, #0x70000000            	// #1879048192
  402d50:	mov	w2, #0x10000000            	// #268435456
  402d54:	ldr	x1, [x27, #1096]
  402d58:	mov	w21, #0x30000000            	// #805306368
  402d5c:	csel	w21, w21, w2, eq  // eq = none
  402d60:	mov	w2, #0x50000000            	// #1342177280
  402d64:	csel	w2, w3, w2, eq  // eq = none
  402d68:	add	x25, x27, #0x448
  402d6c:	bl	410268 <wcrtomb@plt+0xd948>
  402d70:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402d74:	add	x0, x0, #0x478
  402d78:	ldr	x0, [x0, #280]
  402d7c:	cbz	x0, 403b74 <wcrtomb@plt+0x1254>
  402d80:	ldr	x1, [x25]
  402d84:	mov	w2, w21
  402d88:	bl	410268 <wcrtomb@plt+0xd948>
  402d8c:	b	402a4c <wcrtomb@plt+0x12c>
  402d90:	adrp	x27, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402d94:	add	x25, x27, #0x448
  402d98:	ldr	x0, [x27, #1096]
  402d9c:	bl	40fa38 <wcrtomb@plt+0xd118>
  402da0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402da4:	add	x0, x0, #0x478
  402da8:	ldr	x0, [x0, #288]
  402dac:	cbz	x0, 403b88 <wcrtomb@plt+0x1268>
  402db0:	ldr	x1, [x25]
  402db4:	mov	w2, #0x50000000            	// #1342177280
  402db8:	bl	410268 <wcrtomb@plt+0xd948>
  402dbc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402dc0:	add	x0, x0, #0x478
  402dc4:	ldr	x0, [x0, #296]
  402dc8:	cbz	x0, 403b60 <wcrtomb@plt+0x1240>
  402dcc:	ldr	x1, [x25]
  402dd0:	mov	w2, #0x10000000            	// #268435456
  402dd4:	bl	410268 <wcrtomb@plt+0xd948>
  402dd8:	b	402a4c <wcrtomb@plt+0x12c>
  402ddc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402de0:	ldr	x21, [x0, #1096]
  402de4:	cbz	x21, 403784 <wcrtomb@plt+0xe64>
  402de8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  402dec:	mov	x0, x21
  402df0:	add	x1, x1, #0x3f8
  402df4:	bl	409df0 <wcrtomb@plt+0x74d0>
  402df8:	cbnz	w0, 403580 <wcrtomb@plt+0xc60>
  402dfc:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402e00:	add	x1, x1, #0x478
  402e04:	mov	w0, #0x1                   	// #1
  402e08:	str	w0, [x1]
  402e0c:	b	402a4c <wcrtomb@plt+0x12c>
  402e10:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402e14:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  402e18:	add	x1, x1, #0x3b8
  402e1c:	ldr	x21, [x0, #1096]
  402e20:	mov	x0, x21
  402e24:	bl	402690 <strcmp@plt>
  402e28:	cbnz	w0, 402b28 <wcrtomb@plt+0x208>
  402e2c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402e30:	add	x0, x0, #0x478
  402e34:	str	wzr, [x0, #132]
  402e38:	b	402a4c <wcrtomb@plt+0x12c>
  402e3c:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  402e40:	strb	wzr, [x0, #2264]
  402e44:	b	402a4c <wcrtomb@plt+0x12c>
  402e48:	bl	4094c0 <wcrtomb@plt+0x6ba0>
  402e4c:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  402e50:	mov	w1, #0x1                   	// #1
  402e54:	strb	w1, [x0, #3556]
  402e58:	b	402a4c <wcrtomb@plt+0x12c>
  402e5c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402e60:	add	x1, x1, #0x478
  402e64:	mov	w0, #0x1                   	// #1
  402e68:	strb	w0, [x1, #171]
  402e6c:	b	402a4c <wcrtomb@plt+0x12c>
  402e70:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  402e74:	mov	w1, #0x1                   	// #1
  402e78:	strb	w1, [x0, #3557]
  402e7c:	b	402a4c <wcrtomb@plt+0x12c>
  402e80:	adrp	x27, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402e84:	add	x25, x27, #0x448
  402e88:	ldr	x0, [x27, #1096]
  402e8c:	ldrb	w1, [x0]
  402e90:	cmp	w1, #0x2d
  402e94:	b.ne	40315c <wcrtomb@plt+0x83c>  // b.any
  402e98:	ldrb	w1, [x0, #1]
  402e9c:	cbnz	w1, 40315c <wcrtomb@plt+0x83c>
  402ea0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402ea4:	ldr	x24, [x0, #1120]
  402ea8:	ldr	x21, [sp, #184]
  402eac:	mov	x1, x21
  402eb0:	b	402edc <wcrtomb@plt+0x5bc>
  402eb4:	sub	x2, x2, #0x1
  402eb8:	add	x0, x0, x1
  402ebc:	sub	x2, x2, x1
  402ec0:	mov	x3, x24
  402ec4:	mov	x1, #0x1                   	// #1
  402ec8:	bl	402650 <fread_unlocked@plt>
  402ecc:	cbz	x0, 402f1c <wcrtomb@plt+0x5fc>
  402ed0:	ldr	x1, [sp, #184]
  402ed4:	add	x1, x0, x1
  402ed8:	str	x1, [sp, #184]
  402edc:	ldr	x2, [sp, #192]
  402ee0:	add	x3, x1, #0x1
  402ee4:	ldr	x0, [sp, #176]
  402ee8:	cmp	x3, x2
  402eec:	b.cc	402eb4 <wcrtomb@plt+0x594>  // b.lo, b.ul, b.last
  402ef0:	add	x1, sp, #0xc0
  402ef4:	bl	4141c8 <wcrtomb@plt+0x118a8>
  402ef8:	ldp	x1, x2, [sp, #184]
  402efc:	mov	x3, x24
  402f00:	str	x0, [sp, #176]
  402f04:	sub	x2, x2, #0x1
  402f08:	add	x0, x0, x1
  402f0c:	sub	x2, x2, x1
  402f10:	mov	x1, #0x1                   	// #1
  402f14:	bl	402650 <fread_unlocked@plt>
  402f18:	cbnz	x0, 402ed0 <wcrtomb@plt+0x5b0>
  402f1c:	ldr	w0, [x24]
  402f20:	tbnz	w0, #5, 403140 <wcrtomb@plt+0x820>
  402f24:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402f28:	ldr	x0, [x0, #1120]
  402f2c:	cmp	x0, x24
  402f30:	b.eq	402f3c <wcrtomb@plt+0x61c>  // b.none
  402f34:	mov	x0, x24
  402f38:	bl	4023e0 <fclose@plt>
  402f3c:	ldp	x0, x1, [sp, #176]
  402f40:	cmp	x1, x21
  402f44:	b.eq	402f6c <wcrtomb@plt+0x64c>  // b.none
  402f48:	add	x2, x0, x1
  402f4c:	ldurb	w2, [x2, #-1]
  402f50:	cmp	w2, #0xa
  402f54:	b.eq	402f6c <wcrtomb@plt+0x64c>  // b.none
  402f58:	add	x2, x1, #0x1
  402f5c:	str	x2, [sp, #184]
  402f60:	mov	w2, #0xa                   	// #10
  402f64:	strb	w2, [x0, x1]
  402f68:	ldp	x0, x1, [sp, #176]
  402f6c:	sub	x1, x1, x21
  402f70:	ldr	x2, [x25]
  402f74:	add	x0, x0, x21
  402f78:	bl	405080 <wcrtomb@plt+0x2760>
  402f7c:	b	402a4c <wcrtomb@plt+0x12c>
  402f80:	adrp	x25, 43e000 <_obstack_memory_used@@Base+0x26f38>
  402f84:	ldr	x27, [x25, #1096]
  402f88:	mov	x0, x27
  402f8c:	bl	402300 <strlen@plt>
  402f90:	mov	x21, x0
  402f94:	ldp	x24, x0, [sp, #184]
  402f98:	add	x2, x24, #0x1
  402f9c:	add	x2, x2, x21
  402fa0:	cmp	x2, x0
  402fa4:	ldr	x0, [sp, #176]
  402fa8:	b.hi	40375c <wcrtomb@plt+0xe3c>  // b.pmore
  402fac:	mov	x1, x27
  402fb0:	mov	x2, x21
  402fb4:	add	x0, x0, x24
  402fb8:	bl	4022a0 <memcpy@plt>
  402fbc:	ldp	x3, x0, [sp, #176]
  402fc0:	mov	w4, #0xa                   	// #10
  402fc4:	ldr	x2, [sp, #136]
  402fc8:	add	x0, x21, x0
  402fcc:	add	x1, x0, #0x1
  402fd0:	str	x1, [sp, #184]
  402fd4:	add	x1, x21, #0x1
  402fd8:	strb	w4, [x3, x0]
  402fdc:	ldr	x0, [sp, #176]
  402fe0:	add	x0, x0, x24
  402fe4:	bl	405080 <wcrtomb@plt+0x2760>
  402fe8:	b	402a4c <wcrtomb@plt+0x12c>
  402fec:	ldr	w1, [sp, #132]
  402ff0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xdf38>
  402ff4:	add	x0, x0, #0x380
  402ff8:	bl	404f90 <wcrtomb@plt+0x2670>
  402ffc:	str	w0, [sp, #132]
  403000:	b	402a4c <wcrtomb@plt+0x12c>
  403004:	ldr	w1, [sp, #132]
  403008:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xdf38>
  40300c:	add	x0, x0, #0x378
  403010:	bl	404f90 <wcrtomb@plt+0x2670>
  403014:	str	w0, [sp, #132]
  403018:	b	402a4c <wcrtomb@plt+0x12c>
  40301c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403020:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  403024:	add	x1, x1, #0x350
  403028:	ldr	x21, [x0, #1096]
  40302c:	mov	x0, x21
  403030:	bl	402690 <strcmp@plt>
  403034:	cbnz	w0, 403558 <wcrtomb@plt+0xc38>
  403038:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40303c:	add	x1, x1, #0x478
  403040:	mov	w0, #0x1                   	// #1
  403044:	str	w0, [x1, #304]
  403048:	b	402a4c <wcrtomb@plt+0x12c>
  40304c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403050:	add	x1, sp, #0xc8
  403054:	ldr	x0, [x0, #1096]
  403058:	bl	405638 <wcrtomb@plt+0x2d18>
  40305c:	b	402a4c <wcrtomb@plt+0x12c>
  403060:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403064:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403068:	add	x1, x1, #0x478
  40306c:	ldr	x0, [x0, #1096]
  403070:	add	x1, x1, #0xe8
  403074:	bl	405638 <wcrtomb@plt+0x2d18>
  403078:	b	402a4c <wcrtomb@plt+0x12c>
  40307c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403080:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403084:	add	x1, x1, #0x478
  403088:	ldr	x0, [x0, #1096]
  40308c:	add	x1, x1, #0xf8
  403090:	bl	405638 <wcrtomb@plt+0x2d18>
  403094:	b	402a4c <wcrtomb@plt+0x12c>
  403098:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  40309c:	strb	wzr, [x0, #3558]
  4030a0:	b	402a4c <wcrtomb@plt+0x12c>
  4030a4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4030a8:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4030ac:	add	x1, x1, #0x478
  4030b0:	ldr	x0, [x0, #1096]
  4030b4:	str	x0, [x1, #472]
  4030b8:	b	402a4c <wcrtomb@plt+0x12c>
  4030bc:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4030c0:	add	x1, x1, #0x478
  4030c4:	mov	w0, #0x1                   	// #1
  4030c8:	strb	w0, [x1, #192]
  4030cc:	b	402a4c <wcrtomb@plt+0x12c>
  4030d0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4030d4:	ldr	x0, [x0, #1096]
  4030d8:	str	x0, [x22, #80]
  4030dc:	b	402a4c <wcrtomb@plt+0x12c>
  4030e0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4030e4:	add	x0, x0, #0x478
  4030e8:	ldr	x1, [x0, #272]
  4030ec:	cbz	x1, 403b9c <wcrtomb@plt+0x127c>
  4030f0:	adrp	x27, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4030f4:	adrp	x21, 410000 <wcrtomb@plt+0xd6e0>
  4030f8:	add	x21, x21, #0x268
  4030fc:	add	x25, x27, #0x448
  403100:	ldr	x2, [x27, #1096]
  403104:	mov	x0, x21
  403108:	mov	w4, #0xa                   	// #10
  40310c:	mov	w3, #0x50000000            	// #1342177280
  403110:	bl	410788 <wcrtomb@plt+0xde68>
  403114:	cbnz	w0, 403140 <wcrtomb@plt+0x820>
  403118:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40311c:	add	x0, x0, #0x478
  403120:	ldr	x1, [x0, #280]
  403124:	cbz	x1, 403b34 <wcrtomb@plt+0x1214>
  403128:	ldr	x2, [x25]
  40312c:	mov	x0, x21
  403130:	mov	w4, #0xa                   	// #10
  403134:	mov	w3, #0x10000000            	// #268435456
  403138:	bl	410788 <wcrtomb@plt+0xde68>
  40313c:	cbz	w0, 402a4c <wcrtomb@plt+0x12c>
  403140:	bl	402890 <__errno_location@plt>
  403144:	ldr	w1, [x0]
  403148:	ldr	x3, [x27, #1096]
  40314c:	adrp	x2, 424000 <_obstack_memory_used@@Base+0xcf38>
  403150:	mov	w0, #0x2                   	// #2
  403154:	add	x2, x2, #0x1b8
  403158:	bl	402330 <error@plt>
  40315c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  403160:	add	x1, x1, #0x398
  403164:	bl	402410 <fopen@plt>
  403168:	mov	x24, x0
  40316c:	cbnz	x0, 402ea8 <wcrtomb@plt+0x588>
  403170:	b	403140 <wcrtomb@plt+0x820>
  403174:	ldrb	w0, [sp, #336]
  403178:	add	x1, x19, #0x15
  40317c:	cmp	w0, #0x30
  403180:	cset	x0, eq  // eq = none
  403184:	sub	x0, x25, x0
  403188:	cmp	x0, x1
  40318c:	b.ne	402aa4 <wcrtomb@plt+0x184>  // b.any
  403190:	mov	w1, #0x2e2e                	// #11822
  403194:	add	x25, x19, #0x18
  403198:	movk	w1, #0x2e, lsl #16
  40319c:	str	w1, [x0]
  4031a0:	b	402ac4 <wcrtomb@plt+0x1a4>
  4031a4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4031a8:	add	x0, x0, #0x478
  4031ac:	mov	w21, w26
  4031b0:	mov	w26, w28
  4031b4:	ldrb	w0, [x0, #460]
  4031b8:	cbnz	w0, 403a58 <wcrtomb@plt+0x1138>
  4031bc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4031c0:	add	x0, x0, #0x478
  4031c4:	ldr	w0, [x0, #464]
  4031c8:	cbnz	w0, 403ec4 <wcrtomb@plt+0x15a4>
  4031cc:	ldr	x0, [sp, #176]
  4031d0:	cbz	x0, 40390c <wcrtomb@plt+0xfec>
  4031d4:	ldr	x0, [sp, #184]
  4031d8:	cbz	x0, 403634 <wcrtomb@plt+0xd14>
  4031dc:	sub	x0, x0, #0x1
  4031e0:	str	x0, [sp, #184]
  4031e4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4031e8:	add	x0, x0, #0x478
  4031ec:	ldrb	w22, [x0, #265]
  4031f0:	cbz	w22, 4037a4 <wcrtomb@plt+0xe84>
  4031f4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4031f8:	add	x0, x0, #0x478
  4031fc:	mov	w22, #0x0                   	// #0
  403200:	str	wzr, [x0, #312]
  403204:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403208:	add	x1, x1, #0x478
  40320c:	mov	w0, #0x1                   	// #1
  403210:	strb	w0, [x1, #264]
  403214:	strb	wzr, [x1, #457]
  403218:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40321c:	add	x0, x0, #0x478
  403220:	ldr	x1, [x0, #248]
  403224:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403228:	add	x0, x0, #0x478
  40322c:	ldrb	w2, [x0, #264]
  403230:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403234:	add	x0, x0, #0x478
  403238:	ldrb	w0, [x0, #457]
  40323c:	orr	w0, w0, w2
  403240:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403244:	add	x2, x2, #0x478
  403248:	strb	w0, [x2, #224]
  40324c:	tbz	x1, #63, 403258 <wcrtomb@plt+0x938>
  403250:	ldr	x0, [sp, #200]
  403254:	str	x0, [x2, #248]
  403258:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40325c:	add	x0, x0, #0x478
  403260:	ldr	x0, [x0, #232]
  403264:	tbz	x0, #63, 403278 <wcrtomb@plt+0x958>
  403268:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40326c:	add	x1, x1, #0x478
  403270:	ldr	x0, [sp, #200]
  403274:	str	x0, [x1, #232]
  403278:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40327c:	add	x0, x0, #0x478
  403280:	ldr	x0, [x0, #320]
  403284:	cbz	x0, 403740 <wcrtomb@plt+0xe20>
  403288:	ldr	x0, [sp, #184]
  40328c:	cbz	x0, 403718 <wcrtomb@plt+0xdf8>
  403290:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403294:	ldr	w0, [x0, #1144]
  403298:	cmp	w0, #0x2
  40329c:	b.eq	403a28 <wcrtomb@plt+0x1108>  // b.none
  4032a0:	bl	4149e8 <wcrtomb@plt+0x120c8>
  4032a4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4032a8:	ldr	w0, [x0, #1144]
  4032ac:	cbnz	w0, 403aa4 <wcrtomb@plt+0x1184>
  4032b0:	mov	x0, #0x1                   	// #1
  4032b4:	adrp	x4, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4032b8:	mov	w1, w0
  4032bc:	add	x4, x4, #0x8e3
  4032c0:	mov	w2, #0x0                   	// #0
  4032c4:	b	4032d4 <wcrtomb@plt+0x9b4>
  4032c8:	add	x0, x0, #0x1
  4032cc:	cmp	x0, #0x100
  4032d0:	b.eq	403310 <wcrtomb@plt+0x9f0>  // b.none
  4032d4:	ldrsb	w3, [x4, x0]
  4032d8:	tst	w2, w0
  4032dc:	ccmp	w3, #0x1, #0x4, eq  // eq = none
  4032e0:	b.eq	4032c8 <wcrtomb@plt+0x9a8>  // b.none
  4032e4:	nop
  4032e8:	mov	w3, w1
  4032ec:	lsl	w1, w1, #1
  4032f0:	cmp	w1, w0
  4032f4:	b.le	4032e8 <wcrtomb@plt+0x9c8>
  4032f8:	orr	w2, w3, w2
  4032fc:	add	x0, x0, #0x1
  403300:	mov	w1, w3
  403304:	and	w2, w2, #0xff
  403308:	cmp	x0, #0x100
  40330c:	b.ne	4032d4 <wcrtomb@plt+0x9b4>  // b.any
  403310:	and	x0, x2, #0xff
  403314:	mov	x1, #0x101010101010101     	// #72340172838076673
  403318:	mul	x0, x0, x1
  40331c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403320:	add	x1, x1, #0x478
  403324:	str	x0, [x1, #136]
  403328:	ldr	w0, [sp, #132]
  40332c:	tbnz	w0, #31, 403810 <wcrtomb@plt+0xef0>
  403330:	cmp	w0, #0x2
  403334:	b.eq	403c2c <wcrtomb@plt+0x130c>  // b.none
  403338:	ldr	w0, [sp, #132]
  40333c:	cmp	w0, #0x1
  403340:	b.le	403814 <wcrtomb@plt+0xef4>
  403344:	ldr	w0, [sp, #132]
  403348:	adrp	x5, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40334c:	add	x5, x5, #0x478
  403350:	sbfiz	x3, x0, #5, #32
  403354:	add	x3, x20, x3
  403358:	ldp	x0, x1, [sp, #176]
  40335c:	ldrsw	x2, [x3, #12]
  403360:	ldp	x4, x3, [x3, #16]
  403364:	str	x3, [x5, #184]
  403368:	blr	x4
  40336c:	strb	wzr, [sp, #168]
  403370:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403374:	add	x1, x1, #0x478
  403378:	adrp	x6, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40337c:	add	x6, x6, #0x478
  403380:	strb	wzr, [sp, #170]
  403384:	mov	x2, #0x1                   	// #1
  403388:	ldr	x5, [x1, #184]
  40338c:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3b98>
  403390:	mov	x3, x19
  403394:	mov	x4, #0x0                   	// #0
  403398:	ldrb	w1, [x1, #2264]
  40339c:	strb	w1, [sp, #169]
  4033a0:	add	x1, sp, #0xa9
  4033a4:	str	x0, [x6, #176]
  4033a8:	blr	x5
  4033ac:	cmp	x0, #0x0
  4033b0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4033b4:	add	x0, x0, #0x478
  4033b8:	cset	w2, eq  // eq = none
  4033bc:	ldrb	w1, [x0, #171]
  4033c0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4033c4:	cmp	w2, w1
  4033c8:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4033cc:	add	x2, x2, #0x478
  4033d0:	ldr	w0, [x0, #1104]
  4033d4:	cset	w1, eq  // eq = none
  4033d8:	cmp	w21, #0x0
  4033dc:	sub	w26, w26, w0
  4033e0:	strb	w1, [x2, #458]
  4033e4:	ccmp	w26, #0x1, #0x0, eq  // eq = none
  4033e8:	b.gt	403798 <wcrtomb@plt+0xe78>
  4033ec:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4033f0:	ldr	w0, [x0, #952]
  4033f4:	cmp	w0, #0x3
  4033f8:	csetm	w1, eq  // eq = none
  4033fc:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403400:	add	x2, x2, #0x478
  403404:	mov	w0, #0x1e                  	// #30
  403408:	str	w1, [x2, #144]
  40340c:	bl	402790 <sysconf@plt>
  403410:	mov	x1, #0xfffffffffffffffa    	// #-6
  403414:	sub	x2, x0, #0x1
  403418:	movk	x1, #0x7fff, lsl #48
  40341c:	cmp	x2, x1
  403420:	b.hi	403edc <wcrtomb@plt+0x15bc>  // b.pmore
  403424:	adrp	x3, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403428:	add	x3, x3, #0x478
  40342c:	mov	x4, #0x18000               	// #98304
  403430:	add	x2, x0, #0x8
  403434:	add	x1, x0, x4
  403438:	str	x0, [x3, #96]
  40343c:	udiv	x3, x4, x0
  403440:	msub	x0, x3, x0, x4
  403444:	cmp	x0, #0x0
  403448:	sub	x0, x1, x0
  40344c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403450:	add	x1, x1, #0x478
  403454:	csel	x0, x0, x4, ne  // ne = any
  403458:	add	x0, x2, x0
  40345c:	str	x0, [x1, #88]
  403460:	bl	414080 <wcrtomb@plt+0x11760>
  403464:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403468:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40346c:	add	x1, x1, #0x360
  403470:	add	x2, x2, #0x478
  403474:	str	x0, [x2, #80]
  403478:	ldr	w0, [x1, #92]
  40347c:	tbz	w0, #1, 403488 <wcrtomb@plt+0xb68>
  403480:	ldr	w0, [x2, #304]
  403484:	cbz	w0, 40397c <wcrtomb@plt+0x105c>
  403488:	cmp	w26, #0x0
  40348c:	b.le	4037f4 <wcrtomb@plt+0xed4>
  403490:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403494:	ldrsw	x20, [x0, #1104]
  403498:	ldr	x0, [sp, #120]
  40349c:	add	x20, x0, x20, lsl #3
  4034a0:	mov	w19, #0x1                   	// #1
  4034a4:	ldr	x1, [x20]
  4034a8:	b	4034e8 <wcrtomb@plt+0xbc8>
  4034ac:	ldrb	w0, [x1, #1]
  4034b0:	cbnz	w0, 4034f8 <wcrtomb@plt+0xbd8>
  4034b4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4034b8:	add	x0, x0, #0x478
  4034bc:	adrp	x3, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4034c0:	add	x3, x3, #0x478
  4034c4:	mov	w1, #0x1                   	// #1
  4034c8:	ldr	x2, [x0, #472]
  4034cc:	mov	w0, #0x0                   	// #0
  4034d0:	str	x2, [x3, #8]
  4034d4:	bl	406408 <wcrtomb@plt+0x3ae8>
  4034d8:	and	w0, w0, #0xff
  4034dc:	ldr	x1, [x20]
  4034e0:	and	w19, w19, w0
  4034e4:	cbz	x1, 403524 <wcrtomb@plt+0xc04>
  4034e8:	ldrb	w0, [x1]
  4034ec:	add	x20, x20, #0x8
  4034f0:	cmp	w0, #0x2d
  4034f4:	b.eq	4034ac <wcrtomb@plt+0xb8c>  // b.none
  4034f8:	adrp	x4, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4034fc:	add	x4, x4, #0x478
  403500:	mov	w3, #0x1                   	// #1
  403504:	mov	w0, #0xffffff9c            	// #-100
  403508:	mov	w2, w3
  40350c:	str	x1, [x4, #8]
  403510:	bl	407178 <wcrtomb@plt+0x4858>
  403514:	ldr	x1, [x20]
  403518:	and	w0, w0, #0xff
  40351c:	and	w19, w19, w0
  403520:	cbnz	x1, 4034e8 <wcrtomb@plt+0xbc8>
  403524:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403528:	add	x0, x0, #0x478
  40352c:	ldrb	w1, [x0, #17]
  403530:	mov	w0, #0x2                   	// #2
  403534:	cmp	w1, #0x0
  403538:	csel	w0, w19, w0, eq  // eq = none
  40353c:	ldp	x19, x20, [sp, #16]
  403540:	ldp	x21, x22, [sp, #32]
  403544:	ldp	x23, x24, [sp, #48]
  403548:	ldp	x25, x26, [sp, #64]
  40354c:	ldp	x27, x28, [sp, #80]
  403550:	ldp	x29, x30, [sp], #464
  403554:	ret
  403558:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  40355c:	mov	x0, x21
  403560:	add	x1, x1, #0x358
  403564:	bl	402690 <strcmp@plt>
  403568:	cbnz	w0, 403ecc <wcrtomb@plt+0x15ac>
  40356c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403570:	add	x1, x1, #0x478
  403574:	mov	w0, #0x2                   	// #2
  403578:	str	w0, [x1, #304]
  40357c:	b	402a4c <wcrtomb@plt+0x12c>
  403580:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  403584:	mov	x0, x21
  403588:	add	x1, x1, #0x400
  40358c:	bl	409df0 <wcrtomb@plt+0x74d0>
  403590:	cbz	w0, 402dfc <wcrtomb@plt+0x4dc>
  403594:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  403598:	mov	x0, x21
  40359c:	add	x1, x1, #0x408
  4035a0:	bl	409df0 <wcrtomb@plt+0x74d0>
  4035a4:	cbz	w0, 402dfc <wcrtomb@plt+0x4dc>
  4035a8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  4035ac:	mov	x0, x21
  4035b0:	add	x1, x1, #0x410
  4035b4:	bl	409df0 <wcrtomb@plt+0x74d0>
  4035b8:	cbz	w0, 403990 <wcrtomb@plt+0x1070>
  4035bc:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  4035c0:	mov	x0, x21
  4035c4:	add	x1, x1, #0x418
  4035c8:	bl	409df0 <wcrtomb@plt+0x74d0>
  4035cc:	cbz	w0, 403990 <wcrtomb@plt+0x1070>
  4035d0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  4035d4:	mov	x0, x21
  4035d8:	add	x1, x1, #0x420
  4035dc:	bl	409df0 <wcrtomb@plt+0x74d0>
  4035e0:	cbz	w0, 403990 <wcrtomb@plt+0x1070>
  4035e4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  4035e8:	mov	x0, x21
  4035ec:	add	x1, x1, #0x428
  4035f0:	bl	409df0 <wcrtomb@plt+0x74d0>
  4035f4:	cbz	w0, 403784 <wcrtomb@plt+0xe64>
  4035f8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  4035fc:	mov	x0, x21
  403600:	add	x1, x1, #0x430
  403604:	bl	409df0 <wcrtomb@plt+0x74d0>
  403608:	cbz	w0, 403784 <wcrtomb@plt+0xe64>
  40360c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  403610:	mov	x0, x21
  403614:	add	x1, x1, #0x438
  403618:	bl	409df0 <wcrtomb@plt+0x74d0>
  40361c:	cbz	w0, 403784 <wcrtomb@plt+0xe64>
  403620:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403624:	add	x1, x1, #0x478
  403628:	mov	w0, #0x1                   	// #1
  40362c:	str	w0, [x1, #464]
  403630:	b	402a4c <wcrtomb@plt+0x12c>
  403634:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3b98>
  403638:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40363c:	add	x0, x0, #0x478
  403640:	adrp	x2, 442000 <__progname@@GLIBC_2.17+0x3b98>
  403644:	strb	wzr, [x1, #3557]
  403648:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40364c:	add	x1, x1, #0x478
  403650:	strb	wzr, [x2, #3556]
  403654:	ldrb	w0, [x0, #171]
  403658:	eor	w0, w0, #0x1
  40365c:	strb	w0, [x1, #171]
  403660:	b	4031e4 <wcrtomb@plt+0x8c4>
  403664:	bl	402300 <strlen@plt>
  403668:	add	x0, x0, #0x1
  40366c:	bl	414080 <wcrtomb@plt+0x11760>
  403670:	mov	x22, x0
  403674:	mov	x1, x22
  403678:	mov	x0, x19
  40367c:	mov	x2, #0x0                   	// #0
  403680:	bl	404e08 <wcrtomb@plt+0x24e8>
  403684:	mov	w1, #0x7fffffff            	// #2147483647
  403688:	sub	w1, w1, w26
  40368c:	mov	x20, x0
  403690:	cmp	x0, w1, sxtw
  403694:	b.hi	403ec0 <wcrtomb@plt+0x15a0>  // b.pmore
  403698:	sxtw	x0, w26
  40369c:	add	w26, w26, w20
  4036a0:	add	x0, x0, #0x1
  4036a4:	add	x0, x0, x20
  4036a8:	ldr	x21, [sp, #120]
  4036ac:	lsl	x0, x0, #3
  4036b0:	bl	414080 <wcrtomb@plt+0x11760>
  4036b4:	mov	x25, x0
  4036b8:	mov	x2, x25
  4036bc:	mov	x1, x22
  4036c0:	ldr	x3, [x21], #8
  4036c4:	mov	x0, x19
  4036c8:	str	x3, [x2], #8
  4036cc:	bl	404e08 <wcrtomb@plt+0x24e8>
  4036d0:	add	x2, x2, x0, lsl #3
  4036d4:	mov	x1, #0x0                   	// #0
  4036d8:	ldr	x0, [x21, x1]
  4036dc:	str	x0, [x2, x1]
  4036e0:	add	x1, x1, #0x8
  4036e4:	cbnz	x0, 4036d8 <wcrtomb@plt+0xdb8>
  4036e8:	str	w20, [sp, #156]
  4036ec:	cbz	x20, 403778 <wcrtomb@plt+0xe58>
  4036f0:	mov	w2, #0x5                   	// #5
  4036f4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  4036f8:	add	x1, x1, #0x308
  4036fc:	bl	4027f0 <dcgettext@plt>
  403700:	mov	w1, #0x0                   	// #0
  403704:	mov	x2, x0
  403708:	mov	w0, #0x0                   	// #0
  40370c:	str	x25, [sp, #120]
  403710:	bl	402330 <error@plt>
  403714:	b	402a18 <wcrtomb@plt+0xf8>
  403718:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40371c:	add	x0, x0, #0x478
  403720:	ldrb	w0, [x0, #171]
  403724:	cbz	w0, 403290 <wcrtomb@plt+0x970>
  403728:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  40372c:	ldrb	w0, [x0, #3557]
  403730:	cbnz	w0, 403290 <wcrtomb@plt+0x970>
  403734:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  403738:	ldrb	w0, [x0, #3556]
  40373c:	cbnz	w0, 403290 <wcrtomb@plt+0x970>
  403740:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403744:	add	x0, x0, #0x478
  403748:	ldr	w0, [x0, #312]
  40374c:	cmp	w0, #0x2
  403750:	b.eq	403290 <wcrtomb@plt+0x970>  // b.none
  403754:	mov	w0, #0x1                   	// #1
  403758:	b	40353c <wcrtomb@plt+0xc1c>
  40375c:	add	x1, sp, #0xc0
  403760:	str	x2, [sp, #192]
  403764:	bl	4141c8 <wcrtomb@plt+0x118a8>
  403768:	str	x0, [sp, #176]
  40376c:	ldr	x27, [x25, #1096]
  403770:	ldr	x24, [sp, #184]
  403774:	b	402fac <wcrtomb@plt+0x68c>
  403778:	str	x25, [sp, #120]
  40377c:	str	wzr, [sp, #156]
  403780:	b	402a18 <wcrtomb@plt+0xf8>
  403784:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403788:	add	x1, x1, #0x478
  40378c:	mov	w0, #0x2                   	// #2
  403790:	str	w0, [x1]
  403794:	b	402a4c <wcrtomb@plt+0x12c>
  403798:	mvn	w1, w21
  40379c:	lsr	w1, w1, #31
  4037a0:	b	4033fc <wcrtomb@plt+0xadc>
  4037a4:	add	x2, sp, #0xd0
  4037a8:	mov	w1, #0x1                   	// #1
  4037ac:	mov	w0, #0x0                   	// #0
  4037b0:	bl	4027d0 <__fxstat@plt>
  4037b4:	cbnz	w0, 4037d0 <wcrtomb@plt+0xeb0>
  4037b8:	ldr	w1, [sp, #224]
  4037bc:	and	w1, w1, #0xf000
  4037c0:	cmp	w1, #0x8, lsl #12
  4037c4:	b.eq	403cf4 <wcrtomb@plt+0x13d4>  // b.none
  4037c8:	cmp	w1, #0x2, lsl #12
  4037cc:	b.eq	403ca4 <wcrtomb@plt+0x1384>  // b.none
  4037d0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4037d4:	add	x0, x0, #0x478
  4037d8:	ldrb	w0, [x0, #459]
  4037dc:	cbnz	w0, 403204 <wcrtomb@plt+0x8e4>
  4037e0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4037e4:	add	x0, x0, #0x478
  4037e8:	ldr	w0, [x0, #312]
  4037ec:	cbz	w0, 403218 <wcrtomb@plt+0x8f8>
  4037f0:	b	403204 <wcrtomb@plt+0x8e4>
  4037f4:	ldr	w0, [x1, #88]
  4037f8:	cmp	w0, #0x3
  4037fc:	ldp	w0, w1, [sp, #152]
  403800:	ccmp	w0, w1, #0x4, eq  // eq = none
  403804:	b.gt	403c84 <wcrtomb@plt+0x1364>
  403808:	add	x20, x20, #0x1f0
  40380c:	b	4034a0 <wcrtomb@plt+0xb80>
  403810:	str	wzr, [sp, #132]
  403814:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403818:	add	x0, x0, #0x478
  40381c:	ldr	x0, [x0, #48]
  403820:	cmp	x0, #0x1
  403824:	b.ls	403344 <wcrtomb@plt+0xa24>  // b.plast
  403828:	ldp	x25, x23, [sp, #176]
  40382c:	mov	x28, #0x400                 	// #1024
  403830:	mov	x22, #0x2                   	// #2
  403834:	movk	x28, #0x80, lsl #32
  403838:	movk	x22, #0x6000, lsl #48
  40383c:	movk	x28, #0x13fe, lsl #48
  403840:	add	x0, x23, #0x1
  403844:	bl	414080 <wcrtomb@plt+0x11760>
  403848:	mov	x4, #0x11                  	// #17
  40384c:	mov	x3, x0
  403850:	movk	x4, #0x220, lsl #16
  403854:	mov	x27, x25
  403858:	movk	x4, #0x14, lsl #32
  40385c:	stp	x0, x25, [sp, #104]
  403860:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  403864:	mov	x25, x3
  403868:	add	x24, x0, #0xde6
  40386c:	movk	x4, #0x220, lsl #48
  403870:	str	xzr, [sp, #336]
  403874:	cbz	x23, 403e60 <wcrtomb@plt+0x1540>
  403878:	ldrb	w2, [x27]
  40387c:	cmp	w2, #0x5b
  403880:	b.eq	4039b0 <wcrtomb@plt+0x1090>  // b.none
  403884:	b.hi	4039bc <wcrtomb@plt+0x109c>  // b.pmore
  403888:	cmp	w2, #0x2e
  40388c:	b.hi	4039a0 <wcrtomb@plt+0x1080>  // b.pmore
  403890:	cmp	w2, #0x23
  403894:	b.ls	4038b8 <wcrtomb@plt+0xf98>  // b.plast
  403898:	mov	x0, #0x1                   	// #1
  40389c:	mov	x1, #0x441000000000        	// #74835510165504
  4038a0:	lsl	x0, x0, x2
  4038a4:	tst	x0, x1
  4038a8:	b.ne	4039b0 <wcrtomb@plt+0x1090>  // b.any
  4038ac:	mov	x1, #0x90000000000         	// #9895604649984
  4038b0:	tst	x0, x1
  4038b4:	b.ne	4039a8 <wcrtomb@plt+0x1088>  // b.any
  4038b8:	ldrb	w0, [x27]
  4038bc:	adrp	x2, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4038c0:	ldrb	w1, [x24]
  4038c4:	add	x2, x2, #0x8e0
  4038c8:	add	x0, x2, x0
  4038cc:	ldrsb	x2, [x0, #3]
  4038d0:	cbz	w1, 403c64 <wcrtomb@plt+0x1344>
  4038d4:	tbnz	w2, #31, 403dcc <wcrtomb@plt+0x14ac>
  4038d8:	mov	x0, x25
  4038dc:	mov	x1, x27
  4038e0:	str	x2, [sp, #96]
  4038e4:	bl	4026d0 <mempcpy@plt>
  4038e8:	mov	x4, #0x11                  	// #17
  4038ec:	mov	x25, x0
  4038f0:	ldr	x2, [sp, #96]
  4038f4:	movk	x4, #0x220, lsl #16
  4038f8:	movk	x4, #0x14, lsl #32
  4038fc:	sub	x23, x23, x2
  403900:	add	x27, x27, x2
  403904:	movk	x4, #0x220, lsl #48
  403908:	b	403874 <wcrtomb@plt+0xf54>
  40390c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403910:	ldr	w22, [x0, #1104]
  403914:	cmp	w22, w28
  403918:	b.ge	403c7c <wcrtomb@plt+0x135c>  // b.tcont
  40391c:	ldr	x0, [sp, #120]
  403920:	ldr	x23, [x0, w22, sxtw #3]
  403924:	add	w22, w22, #0x1
  403928:	mov	x0, x23
  40392c:	bl	402300 <strlen@plt>
  403930:	mov	x2, x0
  403934:	adrp	x3, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403938:	add	x1, x2, #0x1
  40393c:	mov	x0, x23
  403940:	str	w22, [x3, #1104]
  403944:	str	x2, [sp, #184]
  403948:	bl	414258 <wcrtomb@plt+0x11938>
  40394c:	ldr	x2, [sp, #136]
  403950:	str	x0, [sp, #176]
  403954:	ldr	x1, [sp, #184]
  403958:	bl	405080 <wcrtomb@plt+0x2760>
  40395c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403960:	add	x0, x0, #0x478
  403964:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403968:	add	x1, x1, #0x478
  40396c:	ldr	x0, [x0, #48]
  403970:	add	x0, x0, #0x1
  403974:	str	x0, [x1, #48]
  403978:	b	4031e4 <wcrtomb@plt+0x8c4>
  40397c:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403980:	add	x2, x2, #0x478
  403984:	mov	w0, #0x1                   	// #1
  403988:	str	w0, [x2, #304]
  40398c:	b	403488 <wcrtomb@plt+0xb68>
  403990:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403994:	add	x0, x0, #0x478
  403998:	str	wzr, [x0]
  40399c:	b	402a4c <wcrtomb@plt+0x12c>
  4039a0:	cmp	w2, #0x3f
  4039a4:	b.ne	4038b8 <wcrtomb@plt+0xf98>  // b.any
  4039a8:	ldr	w0, [sp, #132]
  4039ac:	cbz	w0, 4038b8 <wcrtomb@plt+0xf98>
  4039b0:	ldr	x0, [sp, #104]
  4039b4:	bl	4026b0 <free@plt>
  4039b8:	b	403344 <wcrtomb@plt+0xa24>
  4039bc:	cmp	w2, #0x5c
  4039c0:	b.ne	403a0c <wcrtomb@plt+0x10ec>  // b.any
  4039c4:	cmp	x23, #0x1
  4039c8:	b.ls	403c9c <wcrtomb@plt+0x137c>  // b.plast
  4039cc:	ldrb	w1, [x27, #1]
  4039d0:	cmp	w1, #0x3c
  4039d4:	b.ls	403d9c <wcrtomb@plt+0x147c>  // b.plast
  4039d8:	sub	w0, w1, #0x3e
  4039dc:	and	w1, w0, #0xff
  4039e0:	cmp	w1, #0x3e
  4039e4:	b.hi	403a00 <wcrtomb@plt+0x10e0>  // b.pmore
  4039e8:	mov	x0, #0x1                   	// #1
  4039ec:	lsl	x0, x0, x1
  4039f0:	tst	x0, x4
  4039f4:	b.ne	4039b0 <wcrtomb@plt+0x1090>  // b.any
  4039f8:	tst	x0, x22
  4039fc:	b.ne	403dc0 <wcrtomb@plt+0x14a0>  // b.any
  403a00:	add	x27, x27, #0x1
  403a04:	sub	x23, x23, #0x1
  403a08:	b	4038b8 <wcrtomb@plt+0xf98>
  403a0c:	cmp	w2, #0x5e
  403a10:	b.eq	4039b0 <wcrtomb@plt+0x1090>  // b.none
  403a14:	sub	w0, w2, #0x7b
  403a18:	and	w0, w0, #0xff
  403a1c:	cmp	w0, #0x1
  403a20:	b.hi	4038b8 <wcrtomb@plt+0xf98>  // b.pmore
  403a24:	b	4039a8 <wcrtomb@plt+0x1088>
  403a28:	cbnz	w22, 403a3c <wcrtomb@plt+0x111c>
  403a2c:	mov	w0, #0x0                   	// #0
  403a30:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403a34:	str	w0, [x1, #1144]
  403a38:	b	4032a0 <wcrtomb@plt+0x980>
  403a3c:	bl	4149a8 <wcrtomb@plt+0x12088>
  403a40:	cbz	w0, 403a2c <wcrtomb@plt+0x110c>
  403a44:	mov	w0, #0x1                   	// #1
  403a48:	bl	402780 <isatty@plt>
  403a4c:	cmp	w0, #0x0
  403a50:	cset	w0, ne  // ne = any
  403a54:	b	403a30 <wcrtomb@plt+0x1110>
  403a58:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403a5c:	ldr	x19, [x0, #1112]
  403a60:	bl	410858 <wcrtomb@plt+0xdf38>
  403a64:	mov	x4, #0x0                   	// #0
  403a68:	mov	x1, x0
  403a6c:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xdf38>
  403a70:	mov	x0, x19
  403a74:	add	x3, x3, #0x440
  403a78:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xdf38>
  403a7c:	add	x2, x2, #0x448
  403a80:	bl	413f38 <wcrtomb@plt+0x11618>
  403a84:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  403a88:	add	x1, x1, #0x458
  403a8c:	mov	w2, #0x5                   	// #5
  403a90:	mov	x0, #0x0                   	// #0
  403a94:	bl	4027f0 <dcgettext@plt>
  403a98:	bl	402640 <puts@plt>
  403a9c:	mov	w0, #0x0                   	// #0
  403aa0:	b	40353c <wcrtomb@plt+0xc1c>
  403aa4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xdf38>
  403aa8:	add	x0, x0, #0x4c8
  403aac:	bl	4028a0 <getenv@plt>
  403ab0:	cbz	x0, 403acc <wcrtomb@plt+0x11ac>
  403ab4:	ldrb	w1, [x0]
  403ab8:	cbz	w1, 403acc <wcrtomb@plt+0x11ac>
  403abc:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403ac0:	add	x2, x1, #0x360
  403ac4:	str	x0, [x1, #864]
  403ac8:	str	x0, [x2, #8]
  403acc:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xdf38>
  403ad0:	add	x0, x0, #0x4d8
  403ad4:	bl	4028a0 <getenv@plt>
  403ad8:	cbz	x0, 4032b0 <wcrtomb@plt+0x990>
  403adc:	ldrb	w1, [x0]
  403ae0:	cbz	w1, 4032b0 <wcrtomb@plt+0x990>
  403ae4:	bl	414288 <wcrtomb@plt+0x11968>
  403ae8:	mov	x28, x0
  403aec:	add	x23, x28, #0x1
  403af0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xdf38>
  403af4:	add	x24, x0, #0x2d0
  403af8:	mov	x25, #0x0                   	// #0
  403afc:	ldurb	w27, [x23, #-1]
  403b00:	cmp	w27, #0x3a
  403b04:	ccmp	w27, #0x0, #0x4, ne  // ne = any
  403b08:	b.eq	403bb4 <wcrtomb@plt+0x1294>  // b.none
  403b0c:	cmp	w27, #0x3d
  403b10:	b.eq	403c0c <wcrtomb@plt+0x12ec>  // b.none
  403b14:	cbz	x25, 403b2c <wcrtomb@plt+0x120c>
  403b18:	cmp	w27, #0x3b
  403b1c:	b.eq	403b2c <wcrtomb@plt+0x120c>  // b.none
  403b20:	sub	w27, w27, #0x30
  403b24:	cmp	w27, #0x9
  403b28:	b.hi	4032b0 <wcrtomb@plt+0x990>  // b.pmore
  403b2c:	add	x23, x23, #0x1
  403b30:	b	403afc <wcrtomb@plt+0x11dc>
  403b34:	bl	40ff00 <wcrtomb@plt+0xd5e0>
  403b38:	mov	x1, x0
  403b3c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403b40:	add	x0, x0, #0x478
  403b44:	str	x1, [x0, #280]
  403b48:	b	403128 <wcrtomb@plt+0x808>
  403b4c:	bl	40ff00 <wcrtomb@plt+0xd5e0>
  403b50:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403b54:	add	x1, x1, #0x478
  403b58:	str	x0, [x1, #272]
  403b5c:	b	402d44 <wcrtomb@plt+0x424>
  403b60:	bl	40ff00 <wcrtomb@plt+0xd5e0>
  403b64:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403b68:	add	x1, x1, #0x478
  403b6c:	str	x0, [x1, #296]
  403b70:	b	402dcc <wcrtomb@plt+0x4ac>
  403b74:	bl	40ff00 <wcrtomb@plt+0xd5e0>
  403b78:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403b7c:	add	x1, x1, #0x478
  403b80:	str	x0, [x1, #280]
  403b84:	b	402d80 <wcrtomb@plt+0x460>
  403b88:	bl	40ff00 <wcrtomb@plt+0xd5e0>
  403b8c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403b90:	add	x1, x1, #0x478
  403b94:	str	x0, [x1, #288]
  403b98:	b	402db0 <wcrtomb@plt+0x490>
  403b9c:	bl	40ff00 <wcrtomb@plt+0xd5e0>
  403ba0:	mov	x1, x0
  403ba4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403ba8:	add	x0, x0, #0x478
  403bac:	str	x1, [x0, #272]
  403bb0:	b	4030f0 <wcrtomb@plt+0x7d0>
  403bb4:	add	x22, x20, #0xc0
  403bb8:	mov	x0, x24
  403bbc:	sturb	wzr, [x23, #-1]
  403bc0:	b	403bcc <wcrtomb@plt+0x12ac>
  403bc4:	ldr	x0, [x22, #24]!
  403bc8:	cbz	x0, 403bd8 <wcrtomb@plt+0x12b8>
  403bcc:	mov	x1, x28
  403bd0:	bl	402690 <strcmp@plt>
  403bd4:	cbnz	w0, 403bc4 <wcrtomb@plt+0x12a4>
  403bd8:	ldr	x0, [x22, #8]
  403bdc:	cmp	x25, #0x0
  403be0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  403be4:	b.eq	403bec <wcrtomb@plt+0x12cc>  // b.none
  403be8:	str	x25, [x0]
  403bec:	ldr	x0, [x22, #16]
  403bf0:	cbz	x0, 403bf8 <wcrtomb@plt+0x12d8>
  403bf4:	blr	x0
  403bf8:	cbz	w27, 4032b0 <wcrtomb@plt+0x990>
  403bfc:	mov	x28, x23
  403c00:	mov	x25, #0x0                   	// #0
  403c04:	add	x23, x23, #0x1
  403c08:	b	403afc <wcrtomb@plt+0x11dc>
  403c0c:	cmp	x25, #0x0
  403c10:	sub	x0, x23, #0x1
  403c14:	ccmp	x0, x28, #0x4, eq  // eq = none
  403c18:	b.eq	4032b0 <wcrtomb@plt+0x990>  // b.none
  403c1c:	mov	x25, x23
  403c20:	add	x23, x23, #0x1
  403c24:	sturb	wzr, [x23, #-2]
  403c28:	b	403afc <wcrtomb@plt+0x11dc>
  403c2c:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  403c30:	ldrb	w0, [x0, #2272]
  403c34:	cbnz	w0, 403d44 <wcrtomb@plt+0x1424>
  403c38:	ldr	x0, [x1, #48]
  403c3c:	cmp	x0, #0x1
  403c40:	b.ne	403344 <wcrtomb@plt+0xa24>  // b.any
  403c44:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  403c48:	ldrb	w0, [x0, #3556]
  403c4c:	cbz	w0, 403344 <wcrtomb@plt+0xa24>
  403c50:	add	x1, sp, #0xb8
  403c54:	add	x0, sp, #0xb0
  403c58:	str	wzr, [sp, #132]
  403c5c:	bl	407490 <wcrtomb@plt+0x4b70>
  403c60:	b	403344 <wcrtomb@plt+0xa24>
  403c64:	sxtb	x2, w2
  403c68:	cmn	x2, #0x2
  403c6c:	b.eq	403e48 <wcrtomb@plt+0x1528>  // b.none
  403c70:	cmp	x2, #0x10
  403c74:	b.ls	4038d8 <wcrtomb@plt+0xfb8>  // b.plast
  403c78:	b	4039b0 <wcrtomb@plt+0x1090>
  403c7c:	mov	w0, #0x2                   	// #2
  403c80:	bl	407290 <wcrtomb@plt+0x4970>
  403c84:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403c88:	add	x1, x1, #0x478
  403c8c:	mov	w0, #0x1                   	// #1
  403c90:	add	x20, x20, #0x1e0
  403c94:	strb	w0, [x1, #308]
  403c98:	b	4034a0 <wcrtomb@plt+0xb80>
  403c9c:	mov	x23, #0x1                   	// #1
  403ca0:	b	4038b8 <wcrtomb@plt+0xf98>
  403ca4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  403ca8:	mov	x2, x19
  403cac:	add	x1, x1, #0x4b8
  403cb0:	bl	4028b0 <__xstat@plt>
  403cb4:	cbnz	w0, 403cc8 <wcrtomb@plt+0x13a8>
  403cb8:	ldr	x1, [sp, #216]
  403cbc:	ldr	x0, [sp, #344]
  403cc0:	cmp	x1, x0
  403cc4:	b.eq	403cd0 <wcrtomb@plt+0x13b0>  // b.none
  403cc8:	mov	w22, #0x1                   	// #1
  403ccc:	b	4037d0 <wcrtomb@plt+0xeb0>
  403cd0:	ldr	x1, [sp, #208]
  403cd4:	ldr	x0, [sp, #336]
  403cd8:	cmp	x1, x0
  403cdc:	b.ne	403cc8 <wcrtomb@plt+0x13a8>  // b.any
  403ce0:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403ce4:	add	x1, x1, #0x478
  403ce8:	mov	w0, #0x1                   	// #1
  403cec:	strb	w0, [x1, #459]
  403cf0:	b	4037d0 <wcrtomb@plt+0xeb0>
  403cf4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403cf8:	add	x0, x0, #0x478
  403cfc:	add	x0, x0, #0x148
  403d00:	ldp	x4, x5, [sp, #208]
  403d04:	ldp	x2, x3, [sp, #224]
  403d08:	stp	x4, x5, [x0]
  403d0c:	stp	x2, x3, [x0, #16]
  403d10:	ldp	x4, x5, [sp, #240]
  403d14:	stp	x4, x5, [x0, #32]
  403d18:	ldp	x2, x3, [sp, #256]
  403d1c:	stp	x2, x3, [x0, #48]
  403d20:	ldp	x4, x5, [sp, #272]
  403d24:	stp	x4, x5, [x0, #64]
  403d28:	ldp	x2, x3, [sp, #288]
  403d2c:	stp	x2, x3, [x0, #80]
  403d30:	ldp	x4, x5, [sp, #304]
  403d34:	stp	x4, x5, [x0, #96]
  403d38:	ldp	x2, x3, [sp, #320]
  403d3c:	stp	x2, x3, [x0, #112]
  403d40:	b	4037d0 <wcrtomb@plt+0xeb0>
  403d44:	mov	x22, #0x0                   	// #0
  403d48:	str	xzr, [sp, #336]
  403d4c:	ldp	x23, x27, [sp, #176]
  403d50:	b	403d60 <wcrtomb@plt+0x1440>
  403d54:	cmn	x1, #0x3
  403d58:	b.hi	403c50 <wcrtomb@plt+0x1330>  // b.pmore
  403d5c:	add	x22, x22, x1
  403d60:	cmp	x27, x22
  403d64:	b.ls	403de8 <wcrtomb@plt+0x14c8>  // b.plast
  403d68:	ldrb	w1, [x23, x22]
  403d6c:	adrp	x2, 442000 <__progname@@GLIBC_2.17+0x3b98>
  403d70:	add	x2, x2, #0x8e0
  403d74:	add	x0, x23, x22
  403d78:	add	x1, x2, x1
  403d7c:	ldrsb	x1, [x1, #3]
  403d80:	cmn	x1, #0x2
  403d84:	b.ne	403d54 <wcrtomb@plt+0x1434>  // b.any
  403d88:	sub	x1, x27, x22
  403d8c:	mov	x2, x19
  403d90:	bl	416cd0 <wcrtomb@plt+0x143b0>
  403d94:	mov	x1, x0
  403d98:	b	403d54 <wcrtomb@plt+0x1434>
  403d9c:	cmp	w1, #0x9
  403da0:	b.ls	403a00 <wcrtomb@plt+0x10e0>  // b.plast
  403da4:	mov	x0, #0x1                   	// #1
  403da8:	lsl	x0, x0, x1
  403dac:	tst	x0, x28
  403db0:	b.ne	4039b0 <wcrtomb@plt+0x1090>  // b.any
  403db4:	mov	x1, #0x90000000000         	// #9895604649984
  403db8:	tst	x0, x1
  403dbc:	b.eq	403a00 <wcrtomb@plt+0x10e0>  // b.none
  403dc0:	ldr	w0, [sp, #132]
  403dc4:	cbnz	w0, 403a00 <wcrtomb@plt+0x10e0>
  403dc8:	b	4039b0 <wcrtomb@plt+0x1090>
  403dcc:	mov	x2, x19
  403dd0:	mov	x1, x23
  403dd4:	mov	x0, x27
  403dd8:	bl	4056b0 <wcrtomb@plt+0x2d90>
  403ddc:	sxtw	x2, w0
  403de0:	tbz	w2, #31, 4038d8 <wcrtomb@plt+0xfb8>
  403de4:	b	4039b0 <wcrtomb@plt+0x1090>
  403de8:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  403dec:	ldrb	w0, [x0, #3558]
  403df0:	cbz	w0, 403344 <wcrtomb@plt+0xa24>
  403df4:	ldp	x27, x23, [sp, #176]
  403df8:	mov	x22, #0x0                   	// #0
  403dfc:	str	xzr, [sp, #336]
  403e00:	cmp	x22, x23
  403e04:	b.cs	403344 <wcrtomb@plt+0xa24>  // b.hs, b.nlast
  403e08:	ldrb	w1, [x27, x22]
  403e0c:	adrp	x2, 442000 <__progname@@GLIBC_2.17+0x3b98>
  403e10:	add	x2, x2, #0x8e0
  403e14:	add	x0, x27, x22
  403e18:	add	x1, x2, x1
  403e1c:	ldrsb	w1, [x1, #3]
  403e20:	tbnz	w1, #31, 403e2c <wcrtomb@plt+0x150c>
  403e24:	add	x22, x22, w1, sxtw
  403e28:	b	403e00 <wcrtomb@plt+0x14e0>
  403e2c:	sub	x1, x23, x22
  403e30:	mov	x2, x19
  403e34:	bl	4056b0 <wcrtomb@plt+0x2d90>
  403e38:	mov	w1, w0
  403e3c:	tbnz	w0, #31, 403c50 <wcrtomb@plt+0x1330>
  403e40:	add	x22, x22, w1, sxtw
  403e44:	b	403e00 <wcrtomb@plt+0x14e0>
  403e48:	mov	x2, x19
  403e4c:	mov	x1, x23
  403e50:	mov	x0, x27
  403e54:	bl	416cd0 <wcrtomb@plt+0x143b0>
  403e58:	mov	x2, x0
  403e5c:	b	403c70 <wcrtomb@plt+0x1350>
  403e60:	mov	x3, x25
  403e64:	ldp	x1, x25, [sp, #104]
  403e68:	ldr	x0, [sp, #184]
  403e6c:	sub	x2, x3, x1
  403e70:	cmp	x0, x2
  403e74:	b.eq	403e90 <wcrtomb@plt+0x1570>  // b.none
  403e78:	mov	w3, #0x2                   	// #2
  403e7c:	mov	x0, x25
  403e80:	str	w3, [sp, #132]
  403e84:	str	x2, [sp, #184]
  403e88:	bl	4022a0 <memcpy@plt>
  403e8c:	b	4039b0 <wcrtomb@plt+0x1090>
  403e90:	mov	w0, #0x2                   	// #2
  403e94:	str	w0, [sp, #132]
  403e98:	b	4039b0 <wcrtomb@plt+0x1090>
  403e9c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  403ea0:	add	x1, x1, #0x3d8
  403ea4:	mov	w2, #0x5                   	// #5
  403ea8:	mov	x0, #0x0                   	// #0
  403eac:	bl	4027f0 <dcgettext@plt>
  403eb0:	mov	w1, #0x0                   	// #0
  403eb4:	mov	x2, x0
  403eb8:	mov	w0, #0x2                   	// #2
  403ebc:	bl	402330 <error@plt>
  403ec0:	bl	4142c0 <wcrtomb@plt+0x119a0>
  403ec4:	mov	w0, #0x0                   	// #0
  403ec8:	bl	407290 <wcrtomb@plt+0x4970>
  403ecc:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  403ed0:	mov	w2, #0x5                   	// #5
  403ed4:	add	x1, x1, #0x360
  403ed8:	b	403ea8 <wcrtomb@plt+0x1588>
  403edc:	bl	4025f0 <abort@plt>
  403ee0:	mov	x29, #0x0                   	// #0
  403ee4:	mov	x30, #0x0                   	// #0
  403ee8:	mov	x5, x0
  403eec:	ldr	x1, [sp]
  403ef0:	add	x2, sp, #0x8
  403ef4:	mov	x6, sp
  403ef8:	movz	x0, #0x0, lsl #48
  403efc:	movk	x0, #0x0, lsl #32
  403f00:	movk	x0, #0x40, lsl #16
  403f04:	movk	x0, #0x2930
  403f08:	movz	x3, #0x0, lsl #48
  403f0c:	movk	x3, #0x0, lsl #32
  403f10:	movk	x3, #0x42, lsl #16
  403f14:	movk	x3, #0x40f0
  403f18:	movz	x4, #0x0, lsl #48
  403f1c:	movk	x4, #0x0, lsl #32
  403f20:	movk	x4, #0x42, lsl #16
  403f24:	movk	x4, #0x4170
  403f28:	bl	4024f0 <__libc_start_main@plt>
  403f2c:	bl	4025f0 <abort@plt>
  403f30:	adrp	x0, 43d000 <_obstack_memory_used@@Base+0x25f38>
  403f34:	ldr	x0, [x0, #4064]
  403f38:	cbz	x0, 403f40 <wcrtomb@plt+0x1620>
  403f3c:	b	4025b0 <__gmon_start__@plt>
  403f40:	ret
  403f44:	nop
  403f48:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403f4c:	add	x0, x0, #0x438
  403f50:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403f54:	add	x1, x1, #0x438
  403f58:	cmp	x1, x0
  403f5c:	b.eq	403f74 <wcrtomb@plt+0x1654>  // b.none
  403f60:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  403f64:	ldr	x1, [x1, #416]
  403f68:	cbz	x1, 403f74 <wcrtomb@plt+0x1654>
  403f6c:	mov	x16, x1
  403f70:	br	x16
  403f74:	ret
  403f78:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403f7c:	add	x0, x0, #0x438
  403f80:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403f84:	add	x1, x1, #0x438
  403f88:	sub	x1, x1, x0
  403f8c:	lsr	x2, x1, #63
  403f90:	add	x1, x2, x1, asr #3
  403f94:	cmp	xzr, x1, asr #1
  403f98:	asr	x1, x1, #1
  403f9c:	b.eq	403fb4 <wcrtomb@plt+0x1694>  // b.none
  403fa0:	adrp	x2, 424000 <_obstack_memory_used@@Base+0xcf38>
  403fa4:	ldr	x2, [x2, #424]
  403fa8:	cbz	x2, 403fb4 <wcrtomb@plt+0x1694>
  403fac:	mov	x16, x2
  403fb0:	br	x16
  403fb4:	ret
  403fb8:	stp	x29, x30, [sp, #-32]!
  403fbc:	mov	x29, sp
  403fc0:	str	x19, [sp, #16]
  403fc4:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x26f38>
  403fc8:	ldrb	w0, [x19, #1136]
  403fcc:	cbnz	w0, 403fdc <wcrtomb@plt+0x16bc>
  403fd0:	bl	403f48 <wcrtomb@plt+0x1628>
  403fd4:	mov	w0, #0x1                   	// #1
  403fd8:	strb	w0, [x19, #1136]
  403fdc:	ldr	x19, [sp, #16]
  403fe0:	ldp	x29, x30, [sp], #32
  403fe4:	ret
  403fe8:	b	403f78 <wcrtomb@plt+0x1658>
  403fec:	nop
  403ff0:	stp	x29, x30, [sp, #-128]!
  403ff4:	tst	w5, #0xff
  403ff8:	mov	x29, sp
  403ffc:	stp	x19, x20, [sp, #16]
  404000:	mov	x19, x4
  404004:	stp	x21, x22, [sp, #32]
  404008:	mov	x21, x1
  40400c:	mov	x22, x2
  404010:	b.ne	404094 <wcrtomb@plt+0x1774>  // b.any
  404014:	ldr	x1, [x0]
  404018:	lsl	x3, x3, #6
  40401c:	adrp	x2, 442000 <__progname@@GLIBC_2.17+0x3b98>
  404020:	mov	x0, #0x0                   	// #0
  404024:	add	x20, x1, x3
  404028:	ldrb	w2, [x2, #3558]
  40402c:	str	xzr, [x1, x3]
  404030:	str	xzr, [x20, #8]
  404034:	cbnz	w2, 404040 <wcrtomb@plt+0x1720>
  404038:	mov	x0, #0x100                 	// #256
  40403c:	bl	414080 <wcrtomb@plt+0x11760>
  404040:	stp	x0, xzr, [x20, #32]
  404044:	mov	x2, x20
  404048:	mov	x1, x22
  40404c:	mov	x0, x21
  404050:	bl	423090 <_obstack_memory_used@@Base+0xbfc8>
  404054:	mov	x20, x0
  404058:	cbz	x0, 4040bc <wcrtomb@plt+0x179c>
  40405c:	str	x19, [sp, #56]
  404060:	cmn	x19, #0x1
  404064:	b.ne	4040d0 <wcrtomb@plt+0x17b0>  // b.any
  404068:	mov	x3, x20
  40406c:	mov	w1, #0x0                   	// #0
  404070:	mov	w0, #0x0                   	// #0
  404074:	adrp	x2, 424000 <_obstack_memory_used@@Base+0xcf38>
  404078:	add	x2, x2, #0x1b8
  40407c:	bl	402330 <error@plt>
  404080:	mov	w0, #0x0                   	// #0
  404084:	ldp	x19, x20, [sp, #16]
  404088:	ldp	x21, x22, [sp, #32]
  40408c:	ldp	x29, x30, [sp], #128
  404090:	ret
  404094:	add	x20, sp, #0x40
  404098:	mov	x0, #0x0                   	// #0
  40409c:	mov	x2, x20
  4040a0:	mov	x1, x22
  4040a4:	stp	xzr, xzr, [sp, #64]
  4040a8:	stp	x0, xzr, [x20, #32]
  4040ac:	mov	x0, x21
  4040b0:	bl	423090 <_obstack_memory_used@@Base+0xbfc8>
  4040b4:	mov	x20, x0
  4040b8:	cbnz	x0, 40405c <wcrtomb@plt+0x173c>
  4040bc:	mov	w0, #0x1                   	// #1
  4040c0:	ldp	x19, x20, [sp, #16]
  4040c4:	ldp	x21, x22, [sp, #32]
  4040c8:	ldp	x29, x30, [sp], #128
  4040cc:	ret
  4040d0:	add	x0, x19, #0x1
  4040d4:	add	x1, sp, #0x38
  4040d8:	bl	407218 <wcrtomb@plt+0x48f8>
  4040dc:	mov	x3, x0
  4040e0:	ldrb	w0, [x0]
  4040e4:	cbz	w0, 404068 <wcrtomb@plt+0x1748>
  4040e8:	ldr	x4, [sp, #56]
  4040ec:	mov	x5, x20
  4040f0:	mov	w1, #0x0                   	// #0
  4040f4:	mov	w0, #0x0                   	// #0
  4040f8:	adrp	x2, 424000 <_obstack_memory_used@@Base+0xcf38>
  4040fc:	add	x2, x2, #0x1b0
  404100:	bl	402330 <error@plt>
  404104:	mov	w0, #0x0                   	// #0
  404108:	ldp	x19, x20, [sp, #16]
  40410c:	ldp	x21, x22, [sp, #32]
  404110:	ldp	x29, x30, [sp], #128
  404114:	ret
  404118:	stp	x29, x30, [sp, #-16]!
  40411c:	mov	x3, x0
  404120:	adrp	x2, 424000 <_obstack_memory_used@@Base+0xcf38>
  404124:	mov	x29, sp
  404128:	add	x2, x2, #0x1b8
  40412c:	mov	w1, #0x0                   	// #0
  404130:	mov	w0, #0x2                   	// #2
  404134:	bl	402330 <error@plt>
  404138:	stp	x29, x30, [sp, #-32]!
  40413c:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  404140:	mov	x29, sp
  404144:	str	x19, [sp, #16]
  404148:	mov	x19, x0
  40414c:	add	x0, x1, #0x1c0
  404150:	bl	4028a0 <getenv@plt>
  404154:	cbz	x0, 404164 <wcrtomb@plt+0x1844>
  404158:	ldr	x19, [sp, #16]
  40415c:	ldp	x29, x30, [sp], #32
  404160:	ret
  404164:	mov	x0, x19
  404168:	bl	404118 <wcrtomb@plt+0x17f8>
  40416c:	nop
  404170:	stp	x29, x30, [sp, #-176]!
  404174:	mov	x3, x1
  404178:	mov	x1, #0x48                  	// #72
  40417c:	mov	x29, sp
  404180:	stp	x19, x20, [sp, #16]
  404184:	mov	x20, x2
  404188:	stp	x21, x22, [sp, #32]
  40418c:	mov	x22, x0
  404190:	adrp	x21, 442000 <__progname@@GLIBC_2.17+0x3b98>
  404194:	stp	x23, x24, [sp, #48]
  404198:	mov	x23, x3
  40419c:	mov	w24, #0x5c                  	// #92
  4041a0:	stp	x25, x26, [sp, #64]
  4041a4:	mov	x25, x0
  4041a8:	stp	x27, x28, [sp, #80]
  4041ac:	mov	x28, #0x1                   	// #1
  4041b0:	mov	x27, #0x0                   	// #0
  4041b4:	stp	x3, x0, [sp, #136]
  4041b8:	mov	x0, #0x1                   	// #1
  4041bc:	bl	414218 <wcrtomb@plt+0x118f8>
  4041c0:	mov	x19, x0
  4041c4:	bl	40f600 <wcrtomb@plt+0xcce0>
  4041c8:	adrp	x2, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4041cc:	mov	x4, x20
  4041d0:	orr	x1, x20, #0x400000
  4041d4:	add	x20, x21, #0x8e0
  4041d8:	ldrb	w2, [x2, #3558]
  4041dc:	str	x0, [x19, #8]
  4041e0:	add	x0, x22, x23
  4041e4:	cmp	w2, #0x0
  4041e8:	stp	x22, x0, [sp, #112]
  4041ec:	csel	x23, x1, x4, ne  // ne = any
  4041f0:	mov	x0, x23
  4041f4:	str	x23, [sp, #152]
  4041f8:	bl	423110 <_obstack_memory_used@@Base+0xc048>
  4041fc:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  404200:	mov	x2, x23
  404204:	mov	x23, #0x5555555555555555    	// #6148914691236517205
  404208:	ldrb	w1, [x0, #2264]
  40420c:	movk	x23, #0x155, lsl #48
  404210:	ldr	x0, [x19, #8]
  404214:	cmp	w1, #0x0
  404218:	cset	w3, eq  // eq = none
  40421c:	mov	x1, x20
  404220:	lsl	w3, w3, #1
  404224:	bl	40f608 <wcrtomb@plt+0xcce8>
  404228:	ldrb	w1, [x20, #2]
  40422c:	mov	x0, #0x40                  	// #64
  404230:	ldrb	w2, [x21, #2272]
  404234:	mov	x21, #0x0                   	// #0
  404238:	str	xzr, [sp, #128]
  40423c:	eor	w20, w2, #0x1
  404240:	orr	w20, w20, w1
  404244:	and	w20, w20, #0xff
  404248:	bl	414080 <wcrtomb@plt+0x11760>
  40424c:	cmp	w20, #0x0
  404250:	mov	w1, #0x100                 	// #256
  404254:	csel	w24, w24, w1, ne  // ne = any
  404258:	add	x0, x0, #0x40
  40425c:	stp	x0, xzr, [x19, #16]
  404260:	str	wzr, [sp, #96]
  404264:	str	xzr, [sp, #168]
  404268:	ldr	x0, [sp, #120]
  40426c:	mov	w1, #0xa                   	// #10
  404270:	sub	x26, x0, x25
  404274:	mov	x0, x25
  404278:	mov	x2, x26
  40427c:	bl	402770 <memchr@plt>
  404280:	mov	x22, x0
  404284:	cbz	x0, 404290 <wcrtomb@plt+0x1970>
  404288:	sub	x26, x0, x25
  40428c:	add	x22, x0, #0x1
  404290:	subs	x0, x26, #0x1
  404294:	mov	w20, #0x0                   	// #0
  404298:	b.mi	404300 <wcrtomb@plt+0x19e0>  // b.first
  40429c:	add	x20, x25, x0
  4042a0:	mov	x0, x25
  4042a4:	nop
  4042a8:	mov	w1, #0x5c                  	// #92
  4042ac:	sub	x2, x20, x0
  4042b0:	bl	402770 <memchr@plt>
  4042b4:	mov	x1, x0
  4042b8:	cbz	x0, 4042fc <wcrtomb@plt+0x19dc>
  4042bc:	ldrb	w2, [x1, #1]
  4042c0:	sub	w0, w2, #0x31
  4042c4:	and	w0, w0, #0xff
  4042c8:	cmp	w0, #0x8
  4042cc:	b.ls	4043b0 <wcrtomb@plt+0x1a90>  // b.plast
  4042d0:	cmp	w2, w24
  4042d4:	add	x0, x1, #0x1
  4042d8:	b.ne	4042a8 <wcrtomb@plt+0x1988>  // b.any
  4042dc:	cmp	x20, x0
  4042e0:	b.eq	4042fc <wcrtomb@plt+0x19dc>  // b.none
  4042e4:	add	x0, x1, #0x2
  4042e8:	mov	w1, #0x5c                  	// #92
  4042ec:	sub	x2, x20, x0
  4042f0:	bl	402770 <memchr@plt>
  4042f4:	mov	x1, x0
  4042f8:	cbnz	x0, 4042bc <wcrtomb@plt+0x199c>
  4042fc:	mov	w20, #0x0                   	// #0
  404300:	ldr	x3, [x19, #24]
  404304:	add	x0, x3, #0x1
  404308:	cmp	x0, x28
  40430c:	b.cc	404358 <wcrtomb@plt+0x1a38>  // b.lo, b.ul, b.last
  404310:	ldr	x0, [x19, #16]
  404314:	cmp	x28, x23
  404318:	sub	x0, x0, #0x40
  40431c:	b.cc	40432c <wcrtomb@plt+0x1a0c>  // b.lo, b.ul, b.last
  404320:	b	404740 <wcrtomb@plt+0x1e20>
  404324:	cmp	x28, x23
  404328:	b.cs	404740 <wcrtomb@plt+0x1e20>  // b.hs, b.nlast
  40432c:	lsr	x1, x28, #1
  404330:	add	x1, x1, #0x1
  404334:	add	x28, x28, x1
  404338:	lsl	x1, x28, #6
  40433c:	bl	4140e0 <wcrtomb@plt+0x117c0>
  404340:	ldr	x3, [x19, #24]
  404344:	add	x1, x0, #0x40
  404348:	str	x1, [x19, #16]
  40434c:	add	x1, x3, #0x1
  404350:	cmp	x1, x28
  404354:	b.cs	404324 <wcrtomb@plt+0x1a04>  // b.hs, b.nlast
  404358:	add	x7, x19, #0x10
  40435c:	mov	x4, x27
  404360:	mov	x0, x7
  404364:	mov	x2, x26
  404368:	mov	x1, x25
  40436c:	eor	w5, w20, #0x1
  404370:	str	x7, [sp, #104]
  404374:	bl	403ff0 <wcrtomb@plt+0x16d0>
  404378:	tst	w0, #0xff
  40437c:	ldr	w0, [sp, #96]
  404380:	add	x27, x27, #0x1
  404384:	csinc	w0, w0, wzr, ne  // ne = any
  404388:	str	w0, [sp, #96]
  40438c:	ldr	x7, [sp, #104]
  404390:	cbz	w20, 4043a4 <wcrtomb@plt+0x1a84>
  404394:	ldr	x0, [x19, #24]
  404398:	str	x22, [sp, #112]
  40439c:	add	x0, x0, #0x1
  4043a0:	str	x0, [x19, #24]
  4043a4:	cbz	x22, 404410 <wcrtomb@plt+0x1af0>
  4043a8:	mov	x25, x22
  4043ac:	b	404268 <wcrtomb@plt+0x1948>
  4043b0:	ldr	x1, [sp, #112]
  4043b4:	cmp	x25, x1
  4043b8:	b.ls	40474c <wcrtomb@plt+0x1e2c>  // b.plast
  4043bc:	ldr	x2, [sp, #128]
  4043c0:	sub	x1, x25, x1
  4043c4:	ldr	x0, [sp, #168]
  4043c8:	str	x1, [sp, #104]
  4043cc:	add	x20, x2, x1
  4043d0:	cmp	x20, x0
  4043d4:	b.ls	4043f4 <wcrtomb@plt+0x1ad4>  // b.plast
  4043d8:	mov	x0, x21
  4043dc:	add	x1, sp, #0xa8
  4043e0:	bl	4141c8 <wcrtomb@plt+0x118a8>
  4043e4:	mov	x21, x0
  4043e8:	ldr	x1, [sp, #168]
  4043ec:	cmp	x1, x20
  4043f0:	b.cc	4043d8 <wcrtomb@plt+0x1ab8>  // b.lo, b.ul, b.last
  4043f4:	ldp	x2, x1, [sp, #104]
  4043f8:	ldr	x0, [sp, #128]
  4043fc:	str	x20, [sp, #128]
  404400:	mov	w20, #0x1                   	// #1
  404404:	add	x0, x21, x0
  404408:	bl	4022a0 <memcpy@plt>
  40440c:	b	404300 <wcrtomb@plt+0x19e0>
  404410:	ldr	w0, [sp, #96]
  404414:	cbnz	w0, 404744 <wcrtomb@plt+0x1e24>
  404418:	ldr	x0, [sp, #112]
  40441c:	cbz	x0, 404434 <wcrtomb@plt+0x1b14>
  404420:	ldr	x1, [sp, #144]
  404424:	cmp	x0, x1
  404428:	b.hi	40468c <wcrtomb@plt+0x1d6c>  // b.pmore
  40442c:	ldp	x0, x21, [sp, #136]
  404430:	str	x0, [sp, #128]
  404434:	cbz	x21, 404480 <wcrtomb@plt+0x1b60>
  404438:	ldp	x1, x6, [x19, #16]
  40443c:	mov	x0, x7
  404440:	ldr	x2, [sp, #128]
  404444:	mov	w5, #0x0                   	// #0
  404448:	mov	x4, #0xffffffffffffffff    	// #-1
  40444c:	mov	x3, #0x0                   	// #0
  404450:	sub	x7, x1, #0x40
  404454:	add	x6, x6, #0x1
  404458:	mov	x1, x21
  40445c:	stp	x7, x6, [x19, #16]
  404460:	bl	403ff0 <wcrtomb@plt+0x16d0>
  404464:	tst	w0, #0xff
  404468:	b.eq	404754 <wcrtomb@plt+0x1e34>  // b.none
  40446c:	ldr	x0, [sp, #144]
  404470:	cmp	x21, x0
  404474:	b.eq	404480 <wcrtomb@plt+0x1b60>  // b.none
  404478:	mov	x0, x21
  40447c:	bl	4026b0 <free@plt>
  404480:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  404484:	adrp	x21, 442000 <__progname@@GLIBC_2.17+0x3b98>
  404488:	ldrb	w0, [x0, #3556]
  40448c:	cbnz	w0, 40453c <wcrtomb@plt+0x1c1c>
  404490:	ldrb	w0, [x21, #3557]
  404494:	ldr	x20, [sp, #144]
  404498:	cbnz	w0, 40453c <wcrtomb@plt+0x1c1c>
  40449c:	ldr	x2, [x19, #8]
  4044a0:	mov	x0, x20
  4044a4:	ldr	x1, [sp, #136]
  4044a8:	bl	40e650 <wcrtomb@plt+0xbd30>
  4044ac:	ldr	x0, [x19, #8]
  4044b0:	bl	40ec40 <wcrtomb@plt+0xc320>
  4044b4:	mov	x20, x0
  4044b8:	cbz	x0, 404500 <wcrtomb@plt+0x1be0>
  4044bc:	mov	x21, x0
  4044c0:	mov	w0, #0x0                   	// #0
  4044c4:	bl	409528 <wcrtomb@plt+0x6c08>
  4044c8:	mov	x23, x0
  4044cc:	ldrb	w0, [x21], #3
  4044d0:	str	x23, [x19]
  4044d4:	cbnz	w0, 4045b4 <wcrtomb@plt+0x1c94>
  4044d8:	mov	x0, x21
  4044dc:	bl	402300 <strlen@plt>
  4044e0:	mov	x1, x21
  4044e4:	mov	x2, x0
  4044e8:	mov	x0, x23
  4044ec:	bl	408968 <wcrtomb@plt+0x6048>
  4044f0:	ldr	x0, [x19]
  4044f4:	bl	408df0 <wcrtomb@plt+0x64d0>
  4044f8:	mov	x0, x20
  4044fc:	bl	40f5f8 <wcrtomb@plt+0xccd8>
  404500:	ldr	x2, [x19, #8]
  404504:	mov	w3, #0x1                   	// #1
  404508:	mov	x1, #0x0                   	// #0
  40450c:	mov	x0, #0x0                   	// #0
  404510:	bl	40e8d8 <wcrtomb@plt+0xbfb8>
  404514:	mov	x0, x22
  404518:	bl	4026b0 <free@plt>
  40451c:	mov	x0, x19
  404520:	ldp	x19, x20, [sp, #16]
  404524:	ldp	x21, x22, [sp, #32]
  404528:	ldp	x23, x24, [sp, #48]
  40452c:	ldp	x25, x26, [sp, #64]
  404530:	ldp	x27, x28, [sp, #80]
  404534:	ldp	x29, x30, [sp], #176
  404538:	ret
  40453c:	ldr	x0, [sp, #136]
  404540:	add	x0, x0, #0x2d
  404544:	bl	414080 <wcrtomb@plt+0x11760>
  404548:	ldrb	w2, [x21, #3557]
  40454c:	mov	x20, x0
  404550:	ldr	x1, [sp, #152]
  404554:	and	x1, x1, #0x2000
  404558:	cbz	w2, 404644 <wcrtomb@plt+0x1d24>
  40455c:	cbz	x1, 4046cc <wcrtomb@plt+0x1dac>
  404560:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  404564:	add	x1, x1, #0x1d0
  404568:	ldrh	w2, [x1]
  40456c:	ldrb	w1, [x1, #2]
  404570:	strh	w2, [x0]
  404574:	strb	w1, [x0, #2]
  404578:	bl	402300 <strlen@plt>
  40457c:	ldp	x2, x1, [sp, #136]
  404580:	add	x21, x2, x0
  404584:	add	x0, x20, x0
  404588:	bl	4022a0 <memcpy@plt>
  40458c:	add	x22, x20, x21
  404590:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  404594:	add	x1, x1, #0x208
  404598:	mov	x0, x22
  40459c:	bl	4023d0 <stpcpy@plt>
  4045a0:	sub	x0, x0, x22
  4045a4:	mov	x22, x20
  4045a8:	add	x0, x0, x21
  4045ac:	str	x0, [sp, #136]
  4045b0:	b	40449c <wcrtomb@plt+0x1b7c>
  4045b4:	ldr	x1, [x19, #56]
  4045b8:	mov	x0, x21
  4045bc:	add	x1, x1, #0x1
  4045c0:	str	x1, [x19, #56]
  4045c4:	bl	402300 <strlen@plt>
  4045c8:	ldrb	w24, [x20, #2]
  4045cc:	ldrb	w1, [x20, #1]
  4045d0:	mov	x25, x0
  4045d4:	add	x1, x1, x0
  4045d8:	add	x24, x1, x24
  4045dc:	mov	x0, x24
  4045e0:	bl	414080 <wcrtomb@plt+0x11760>
  4045e4:	mov	x23, x0
  4045e8:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4045ec:	ldrb	w3, [x19, #64]
  4045f0:	mov	x2, x25
  4045f4:	ldrb	w26, [x1, #2264]
  4045f8:	mov	x1, x21
  4045fc:	strb	w26, [x0]
  404600:	ldrb	w0, [x20, #1]
  404604:	orr	w3, w0, w3
  404608:	strb	w3, [x19, #64]
  40460c:	add	x3, x23, w0, uxtb
  404610:	mov	x0, x3
  404614:	bl	4022a0 <memcpy@plt>
  404618:	mov	x3, x0
  40461c:	ldrb	w0, [x20, #2]
  404620:	cbz	w0, 404628 <wcrtomb@plt+0x1d08>
  404624:	strb	w26, [x3, x25]
  404628:	ldr	x0, [x19]
  40462c:	mov	x2, x24
  404630:	mov	x1, x23
  404634:	bl	408968 <wcrtomb@plt+0x6048>
  404638:	mov	x0, x23
  40463c:	bl	4026b0 <free@plt>
  404640:	b	4044f0 <wcrtomb@plt+0x1bd0>
  404644:	cbnz	x1, 404704 <wcrtomb@plt+0x1de4>
  404648:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  40464c:	add	x1, x1, #0x1d8
  404650:	ldp	x2, x3, [x1]
  404654:	stp	x2, x3, [x0]
  404658:	ldur	x1, [x1, #15]
  40465c:	stur	x1, [x0, #15]
  404660:	bl	402300 <strlen@plt>
  404664:	mov	x21, x0
  404668:	ldp	x2, x1, [sp, #136]
  40466c:	add	x0, x20, x0
  404670:	add	x21, x2, x21
  404674:	bl	4022a0 <memcpy@plt>
  404678:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  40467c:	add	x1, x1, #0x208
  404680:	add	x22, x20, x21
  404684:	add	x1, x1, #0x28
  404688:	b	404598 <wcrtomb@plt+0x1c78>
  40468c:	ldp	x24, x0, [sp, #112]
  404690:	str	x7, [sp, #96]
  404694:	ldr	x25, [sp, #128]
  404698:	sub	x20, x0, x24
  40469c:	mov	x0, x21
  4046a0:	add	x23, x25, x20
  4046a4:	mov	x1, x23
  4046a8:	bl	4140e0 <wcrtomb@plt+0x117c0>
  4046ac:	mov	x2, x20
  4046b0:	mov	x21, x0
  4046b4:	mov	x1, x24
  4046b8:	add	x0, x0, x25
  4046bc:	str	x23, [sp, #128]
  4046c0:	bl	4022a0 <memcpy@plt>
  4046c4:	ldr	x7, [sp, #96]
  4046c8:	b	404434 <wcrtomb@plt+0x1b14>
  4046cc:	mov	w1, #0x5c5e                	// #23646
  4046d0:	movk	w1, #0x28, lsl #16
  4046d4:	str	w1, [x0]
  4046d8:	bl	402300 <strlen@plt>
  4046dc:	mov	x21, x0
  4046e0:	ldp	x2, x1, [sp, #136]
  4046e4:	add	x0, x20, x0
  4046e8:	add	x21, x2, x21
  4046ec:	bl	4022a0 <memcpy@plt>
  4046f0:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  4046f4:	add	x1, x1, #0x208
  4046f8:	add	x22, x20, x21
  4046fc:	add	x1, x1, #0x20
  404700:	b	404598 <wcrtomb@plt+0x1c78>
  404704:	adrp	x3, 424000 <_obstack_memory_used@@Base+0xcf38>
  404708:	add	x3, x3, #0x1f0
  40470c:	ldp	x2, x1, [sp, #136]
  404710:	add	x0, x0, #0x12
  404714:	ldp	x4, x5, [x3]
  404718:	stp	x4, x5, [x20]
  40471c:	ldur	w3, [x3, #15]
  404720:	stur	w3, [x20, #15]
  404724:	add	x21, x2, #0x12
  404728:	add	x22, x20, x21
  40472c:	bl	4022a0 <memcpy@plt>
  404730:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  404734:	add	x1, x1, #0x208
  404738:	add	x1, x1, #0x8
  40473c:	b	404598 <wcrtomb@plt+0x1c78>
  404740:	bl	4142c0 <wcrtomb@plt+0x119a0>
  404744:	mov	w0, #0x2                   	// #2
  404748:	bl	402320 <exit@plt>
  40474c:	mov	w20, #0x1                   	// #1
  404750:	b	404300 <wcrtomb@plt+0x19e0>
  404754:	bl	4025f0 <abort@plt>
  404758:	stp	x29, x30, [sp, #-272]!
  40475c:	mov	x29, sp
  404760:	stp	x21, x22, [sp, #32]
  404764:	ldr	x21, [x0, #8]
  404768:	stp	x19, x20, [sp, #16]
  40476c:	mov	x20, x1
  404770:	mov	x19, x2
  404774:	stp	x25, x26, [sp, #64]
  404778:	mov	x26, x0
  40477c:	mov	x0, x21
  404780:	stp	x27, x28, [sp, #80]
  404784:	adrp	x28, 442000 <__progname@@GLIBC_2.17+0x3b98>
  404788:	str	x4, [sp, #96]
  40478c:	str	x1, [sp, #192]
  404790:	str	x3, [sp, #216]
  404794:	bl	40e758 <wcrtomb@plt+0xbe38>
  404798:	mov	x1, x0
  40479c:	mov	x0, x21
  4047a0:	str	x1, [sp, #200]
  4047a4:	bl	40e760 <wcrtomb@plt+0xbe40>
  4047a8:	and	w0, w0, #0xff
  4047ac:	str	w0, [sp, #212]
  4047b0:	add	x2, x20, x19
  4047b4:	ldrb	w0, [x28, #2264]
  4047b8:	cmp	x20, x2
  4047bc:	str	x20, [sp, #128]
  4047c0:	str	x2, [sp, #168]
  4047c4:	str	w0, [sp, #208]
  4047c8:	str	x20, [sp, #232]
  4047cc:	b.cs	404ae4 <wcrtomb@plt+0x21c4>  // b.hs, b.nlast
  4047d0:	add	x28, x28, #0x8d8
  4047d4:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4047d8:	add	x0, x0, #0xde5
  4047dc:	stp	x23, x24, [sp, #48]
  4047e0:	str	x0, [sp, #112]
  4047e4:	nop
  4047e8:	ldr	x0, [sp, #96]
  4047ec:	cbnz	x0, 404900 <wcrtomb@plt+0x1fe0>
  4047f0:	ldr	x0, [x26]
  4047f4:	strb	wzr, [sp, #231]
  4047f8:	str	xzr, [sp, #240]
  4047fc:	cbz	x0, 404c00 <wcrtomb@plt+0x22e0>
  404800:	ldr	x3, [sp, #128]
  404804:	mov	w4, #0x1                   	// #1
  404808:	ldr	x2, [sp, #168]
  40480c:	ldrb	w1, [x26, #64]
  404810:	sub	x19, x2, x3
  404814:	add	x2, x1, x19
  404818:	sub	x1, x3, x1
  40481c:	add	x3, sp, #0xf8
  404820:	bl	409388 <wcrtomb@plt+0x6a68>
  404824:	mov	x20, x0
  404828:	tbnz	x0, #63, 404db4 <wcrtomb@plt+0x2494>
  40482c:	ldr	w1, [sp, #208]
  404830:	ldr	x25, [sp, #128]
  404834:	ldr	x24, [sp, #192]
  404838:	add	x21, x25, x0
  40483c:	sub	x2, x21, x24
  404840:	mov	x0, x24
  404844:	bl	4026f0 <memrchr@plt>
  404848:	cmp	x0, #0x0
  40484c:	csinc	x27, x24, x0, eq  // eq = none
  404850:	ldr	w0, [sp, #212]
  404854:	ldr	x23, [x26, #56]
  404858:	cmp	w0, #0x0
  40485c:	ldr	x22, [sp, #248]
  404860:	ccmp	x22, x23, #0x1, ne  // ne = any
  404864:	b.lt	404d04 <wcrtomb@plt+0x23e4>  // b.tstop
  404868:	sub	x0, x21, x27
  40486c:	mov	x1, #0x10                  	// #16
  404870:	cmp	x0, x1
  404874:	csel	x0, x0, x1, ge  // ge = tcont
  404878:	cmp	x0, x20, asr #2
  40487c:	b.lt	404be4 <wcrtomb@plt+0x22c4>  // b.tstop
  404880:	cmp	x0, x19, asr #2
  404884:	b.ge	404bfc <wcrtomb@plt+0x22dc>  // b.tcont
  404888:	ldr	x1, [sp, #168]
  40488c:	add	x0, x25, x0, lsl #2
  404890:	sub	x2, x1, x0
  404894:	ldr	w1, [sp, #208]
  404898:	bl	402770 <memchr@plt>
  40489c:	cbz	x0, 404bfc <wcrtomb@plt+0x22dc>
  4048a0:	add	x19, x0, #0x1
  4048a4:	cmp	x22, x23
  4048a8:	b.ge	404d28 <wcrtomb@plt+0x2408>  // b.tcont
  4048ac:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4048b0:	add	x1, x0, #0x8e0
  4048b4:	ldrb	w0, [x0, #2272]
  4048b8:	ldrb	w1, [x1, #2]
  4048bc:	eor	w0, w0, #0x1
  4048c0:	orr	w0, w0, w1
  4048c4:	tst	w0, #0xff
  4048c8:	b.ne	404da0 <wcrtomb@plt+0x2480>  // b.any
  4048cc:	ldr	x0, [sp, #232]
  4048d0:	cmp	x0, x27
  4048d4:	b.cc	404d50 <wcrtomb@plt+0x2430>  // b.lo, b.ul, b.last
  4048d8:	ldr	x3, [sp, #168]
  4048dc:	mov	x2, x21
  4048e0:	add	x0, sp, #0xe8
  4048e4:	mov	x1, #0x0                   	// #0
  4048e8:	bl	409620 <wcrtomb@plt+0x6d00>
  4048ec:	str	x19, [sp, #128]
  4048f0:	cbz	x0, 404da4 <wcrtomb@plt+0x2484>
  4048f4:	add	x21, sp, #0xf0
  4048f8:	ldr	x1, [sp, #232]
  4048fc:	b	404c84 <wcrtomb@plt+0x2364>
  404900:	ldr	x0, [x26, #24]
  404904:	cbz	x0, 404ae0 <wcrtomb@plt+0x21c0>
  404908:	ldr	x0, [sp, #96]
  40490c:	str	x0, [sp, #160]
  404910:	ldr	x0, [sp, #168]
  404914:	ldr	x27, [sp, #128]
  404918:	str	x0, [sp, #128]
  40491c:	ldr	x1, [sp, #128]
  404920:	mov	x25, #0x0                   	// #0
  404924:	ldr	x3, [sp, #160]
  404928:	sub	x0, x1, x27
  40492c:	sub	x22, x0, #0x1
  404930:	add	x21, x26, #0x20
  404934:	sub	x2, x1, x3
  404938:	stp	x2, x0, [sp, #176]
  40493c:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  404940:	add	x0, x0, #0xde4
  404944:	str	x0, [sp, #104]
  404948:	sub	x0, x1, #0x1
  40494c:	str	x0, [sp, #136]
  404950:	mov	x0, x26
  404954:	sub	x24, x3, x27
  404958:	mov	x26, x27
  40495c:	sub	x20, x2, #0x1
  404960:	mov	x27, x25
  404964:	mov	x23, x1
  404968:	mov	x25, x0
  40496c:	str	xzr, [sp, #120]
  404970:	ldr	x0, [x25, #16]
  404974:	lsl	x19, x27, #6
  404978:	ldrb	w1, [x28]
  40497c:	mov	x5, x21
  404980:	add	x0, x0, x19
  404984:	mov	x4, x20
  404988:	cmp	w1, #0xa
  40498c:	mov	x3, x24
  404990:	cset	w1, eq  // eq = none
  404994:	mov	x2, x22
  404998:	ldrb	w6, [x0, #56]
  40499c:	and	w6, w6, #0x3f
  4049a0:	orr	w1, w6, w1, lsl #7
  4049a4:	strb	w1, [x0, #56]
  4049a8:	mov	x1, x26
  4049ac:	bl	423938 <_obstack_memory_used@@Base+0xc870>
  4049b0:	cmn	x0, #0x1
  4049b4:	b.lt	404d94 <wcrtomb@plt+0x2474>  // b.tstop
  4049b8:	b.eq	404ab0 <wcrtomb@plt+0x2190>  // b.none
  4049bc:	add	x5, x26, x0
  4049c0:	cmp	x23, x5
  4049c4:	b.cc	404ab0 <wcrtomb@plt+0x2190>  // b.lo, b.ul, b.last
  4049c8:	ldr	x1, [x25, #48]
  4049cc:	ldr	x3, [x1]
  4049d0:	sub	x3, x3, x0
  4049d4:	ldr	x0, [sp, #96]
  4049d8:	cbz	x0, 404b00 <wcrtomb@plt+0x21e0>
  4049dc:	ldr	x0, [sp, #104]
  4049e0:	ldrb	w0, [x0]
  4049e4:	cbz	w0, 404b28 <wcrtomb@plt+0x2208>
  4049e8:	ldr	x0, [sp, #112]
  4049ec:	ldrb	w0, [x0]
  4049f0:	cbnz	w0, 404b44 <wcrtomb@plt+0x2224>
  4049f4:	stp	x24, x20, [sp, #144]
  4049f8:	mov	x24, x22
  4049fc:	mov	x20, x26
  404a00:	mov	x22, x21
  404a04:	mov	x26, x25
  404a08:	mov	x21, x19
  404a0c:	mov	x25, x5
  404a10:	mov	x19, x3
  404a14:	ldr	x1, [sp, #136]
  404a18:	add	x0, x25, x19
  404a1c:	bl	4097f0 <wcrtomb@plt+0x6ed0>
  404a20:	cbnz	x0, 404a38 <wcrtomb@plt+0x2118>
  404a24:	ldr	x2, [sp, #136]
  404a28:	mov	x1, x25
  404a2c:	mov	x0, x20
  404a30:	bl	4097f8 <wcrtomb@plt+0x6ed8>
  404a34:	cbz	x0, 404d58 <wcrtomb@plt+0x2438>
  404a38:	cbnz	x19, 404b98 <wcrtomb@plt+0x2278>
  404a3c:	ldr	x0, [sp, #136]
  404a40:	cmp	x0, x25
  404a44:	b.eq	404a9c <wcrtomb@plt+0x217c>  // b.none
  404a48:	ldr	x0, [x26, #16]
  404a4c:	add	x3, x25, #0x1
  404a50:	ldr	x1, [sp, #128]
  404a54:	add	x0, x0, x21
  404a58:	mov	x5, x22
  404a5c:	mov	x2, x24
  404a60:	sub	x4, x1, x3
  404a64:	sub	x3, x3, x20
  404a68:	ldrb	w8, [x0, #56]
  404a6c:	sub	x4, x4, #0x1
  404a70:	mov	x1, x20
  404a74:	and	w8, w8, #0xffffffbf
  404a78:	strb	w8, [x0, #56]
  404a7c:	bl	423938 <_obstack_memory_used@@Base+0xc870>
  404a80:	tbnz	x0, #63, 404d78 <wcrtomb@plt+0x2458>
  404a84:	ldr	x1, [x26, #48]
  404a88:	add	x25, x20, x0
  404a8c:	ldr	x19, [x1]
  404a90:	sub	x19, x19, x0
  404a94:	cmp	x23, x25
  404a98:	b.cs	404a14 <wcrtomb@plt+0x20f4>  // b.hs, b.nlast
  404a9c:	mov	x21, x22
  404aa0:	mov	x25, x26
  404aa4:	mov	x22, x24
  404aa8:	mov	x26, x20
  404aac:	ldp	x24, x20, [sp, #144]
  404ab0:	add	x27, x27, #0x1
  404ab4:	ldr	x0, [x25, #24]
  404ab8:	cmp	x0, x27
  404abc:	b.hi	404970 <wcrtomb@plt+0x2050>  // b.pmore
  404ac0:	ldr	x0, [sp, #128]
  404ac4:	mov	x26, x25
  404ac8:	cmp	x23, x0
  404acc:	b.cc	404d98 <wcrtomb@plt+0x2478>  // b.lo, b.ul, b.last
  404ad0:	ldr	x0, [sp, #128]
  404ad4:	ldr	x1, [sp, #168]
  404ad8:	cmp	x0, x1
  404adc:	b.cc	4047e8 <wcrtomb@plt+0x1ec8>  // b.lo, b.ul, b.last
  404ae0:	ldp	x23, x24, [sp, #48]
  404ae4:	mov	x0, #0xffffffffffffffff    	// #-1
  404ae8:	ldp	x19, x20, [sp, #16]
  404aec:	ldp	x21, x22, [sp, #32]
  404af0:	ldp	x25, x26, [sp, #64]
  404af4:	ldp	x27, x28, [sp, #80]
  404af8:	ldp	x29, x30, [sp], #272
  404afc:	ret
  404b00:	ldr	x0, [sp, #112]
  404b04:	ldrb	w0, [x0]
  404b08:	cbnz	w0, 404b44 <wcrtomb@plt+0x2224>
  404b0c:	ldr	x0, [sp, #104]
  404b10:	ldrb	w0, [x0]
  404b14:	cbnz	w0, 4049f4 <wcrtomb@plt+0x20d4>
  404b18:	ldr	x5, [sp, #160]
  404b1c:	ldr	x3, [sp, #176]
  404b20:	ldr	x0, [sp, #96]
  404b24:	cbz	x0, 404b50 <wcrtomb@plt+0x2230>
  404b28:	cmp	x23, x5
  404b2c:	b.hi	404b8c <wcrtomb@plt+0x226c>  // b.pmore
  404b30:	ldr	x0, [sp, #120]
  404b34:	ccmp	x0, x3, #0x2, eq  // eq = none
  404b38:	csel	x0, x0, x3, cs  // cs = hs, nlast
  404b3c:	str	x0, [sp, #120]
  404b40:	b	404ab0 <wcrtomb@plt+0x2190>
  404b44:	cmp	x3, x20
  404b48:	b.ne	404ab0 <wcrtomb@plt+0x2190>  // b.any
  404b4c:	b	404b18 <wcrtomb@plt+0x21f8>
  404b50:	mov	x27, x26
  404b54:	ldr	x0, [sp, #184]
  404b58:	str	x0, [sp, #120]
  404b5c:	ldr	x0, [sp, #192]
  404b60:	ldr	x1, [sp, #216]
  404b64:	sub	x0, x27, x0
  404b68:	ldr	x2, [sp, #120]
  404b6c:	ldp	x23, x24, [sp, #48]
  404b70:	str	x2, [x1]
  404b74:	ldp	x19, x20, [sp, #16]
  404b78:	ldp	x21, x22, [sp, #32]
  404b7c:	ldp	x25, x26, [sp, #64]
  404b80:	ldp	x27, x28, [sp, #80]
  404b84:	ldp	x29, x30, [sp], #272
  404b88:	ret
  404b8c:	mov	x23, x5
  404b90:	str	x3, [sp, #120]
  404b94:	b	404ab0 <wcrtomb@plt+0x2190>
  404b98:	ldr	x0, [x26, #16]
  404b9c:	sub	x2, x19, #0x1
  404ba0:	ldr	x1, [sp, #160]
  404ba4:	add	x0, x0, x21
  404ba8:	add	x2, x25, x2
  404bac:	mov	x4, x22
  404bb0:	sub	x2, x2, x1
  404bb4:	sub	x3, x25, x20
  404bb8:	ldrb	w8, [x0, #56]
  404bbc:	mov	x1, x20
  404bc0:	orr	w8, w8, #0x40
  404bc4:	strb	w8, [x0, #56]
  404bc8:	bl	423920 <_obstack_memory_used@@Base+0xc858>
  404bcc:	mov	x19, x0
  404bd0:	cmn	x0, #0x1
  404bd4:	b.lt	404d94 <wcrtomb@plt+0x2474>  // b.tstop
  404bd8:	cmp	x0, #0x0
  404bdc:	b.gt	404a94 <wcrtomb@plt+0x2174>
  404be0:	b	404a3c <wcrtomb@plt+0x211c>
  404be4:	ldr	x1, [sp, #168]
  404be8:	mov	x0, x21
  404bec:	sub	x2, x1, x0
  404bf0:	ldr	w1, [sp, #208]
  404bf4:	bl	402770 <memchr@plt>
  404bf8:	cbnz	x0, 4048a0 <wcrtomb@plt+0x1f80>
  404bfc:	str	x27, [sp, #128]
  404c00:	ldr	x0, [sp, #200]
  404c04:	ldr	x19, [sp, #168]
  404c08:	cbz	x0, 404d34 <wcrtomb@plt+0x2414>
  404c0c:	ldr	x1, [sp, #128]
  404c10:	add	x21, sp, #0xf0
  404c14:	mov	x4, x21
  404c18:	mov	x2, x19
  404c1c:	mov	x5, #0x0                   	// #0
  404c20:	mov	w3, #0x0                   	// #0
  404c24:	bl	40e748 <wcrtomb@plt+0xbe28>
  404c28:	cmp	x0, #0x0
  404c2c:	mov	x20, x0
  404c30:	ccmp	x19, x0, #0x4, ne  // ne = any
  404c34:	b.eq	404d48 <wcrtomb@plt+0x2428>  // b.none
  404c38:	ldr	x0, [sp, #240]
  404c3c:	cbz	x0, 404c58 <wcrtomb@plt+0x2338>
  404c40:	ldr	w1, [sp, #208]
  404c44:	ldr	x0, [sp, #192]
  404c48:	sub	x2, x20, x0
  404c4c:	bl	4026f0 <memrchr@plt>
  404c50:	add	x0, x0, #0x1
  404c54:	str	x0, [sp, #128]
  404c58:	ldr	w1, [sp, #208]
  404c5c:	mov	x0, x20
  404c60:	ldr	x19, [sp, #168]
  404c64:	sub	x2, x19, x20
  404c68:	bl	402770 <memchr@plt>
  404c6c:	ldr	x1, [sp, #128]
  404c70:	cmp	x0, #0x0
  404c74:	csinc	x0, x19, x0, eq  // eq = none
  404c78:	str	x0, [sp, #128]
  404c7c:	mov	x27, x1
  404c80:	str	xzr, [sp, #240]
  404c84:	ldr	x0, [x26, #8]
  404c88:	mov	x4, x21
  404c8c:	ldr	x20, [sp, #128]
  404c90:	add	x5, sp, #0xe7
  404c94:	mov	w3, #0x0                   	// #0
  404c98:	mov	x2, x20
  404c9c:	bl	40e748 <wcrtomb@plt+0xbe28>
  404ca0:	cmp	x0, #0x0
  404ca4:	mov	x19, x0
  404ca8:	ccmp	x20, x0, #0x4, ne  // ne = any
  404cac:	b.eq	404ad0 <wcrtomb@plt+0x21b0>  // b.none
  404cb0:	ldr	x0, [sp, #240]
  404cb4:	cbz	x0, 404ccc <wcrtomb@plt+0x23ac>
  404cb8:	ldr	w1, [sp, #208]
  404cbc:	ldr	x0, [sp, #192]
  404cc0:	sub	x2, x19, x0
  404cc4:	bl	4026f0 <memrchr@plt>
  404cc8:	add	x27, x0, #0x1
  404ccc:	ldr	w1, [sp, #208]
  404cd0:	mov	x0, x19
  404cd4:	ldr	x20, [sp, #168]
  404cd8:	sub	x2, x20, x19
  404cdc:	bl	402770 <memchr@plt>
  404ce0:	ldrb	w1, [sp, #231]
  404ce4:	cmp	x0, #0x0
  404ce8:	csinc	x0, x20, x0, eq  // eq = none
  404cec:	str	x0, [sp, #128]
  404cf0:	cbz	w1, 404da4 <wcrtomb@plt+0x2484>
  404cf4:	ldr	x0, [x26, #24]
  404cf8:	str	x27, [sp, #160]
  404cfc:	cbnz	x0, 40491c <wcrtomb@plt+0x1ffc>
  404d00:	b	404ad0 <wcrtomb@plt+0x21b0>
  404d04:	ldr	w1, [sp, #208]
  404d08:	ldr	x0, [sp, #168]
  404d0c:	sub	x2, x0, x21
  404d10:	mov	x0, x21
  404d14:	bl	402770 <memchr@plt>
  404d18:	cbnz	x0, 4048a0 <wcrtomb@plt+0x1f80>
  404d1c:	cmp	x22, x23
  404d20:	ldr	x19, [sp, #168]
  404d24:	b.lt	4048ac <wcrtomb@plt+0x1f8c>  // b.tstop
  404d28:	ldr	x0, [sp, #200]
  404d2c:	str	x27, [sp, #128]
  404d30:	cbnz	x0, 404c0c <wcrtomb@plt+0x22ec>
  404d34:	ldr	x1, [sp, #128]
  404d38:	add	x21, sp, #0xf0
  404d3c:	str	x19, [sp, #128]
  404d40:	mov	x27, x1
  404d44:	b	404c84 <wcrtomb@plt+0x2364>
  404d48:	str	x19, [sp, #128]
  404d4c:	b	404ad0 <wcrtomb@plt+0x21b0>
  404d50:	str	x27, [sp, #232]
  404d54:	b	4048d8 <wcrtomb@plt+0x1fb8>
  404d58:	mov	x5, x25
  404d5c:	mov	x21, x22
  404d60:	mov	x25, x26
  404d64:	mov	x22, x24
  404d68:	mov	x26, x20
  404d6c:	mov	x3, x19
  404d70:	ldp	x24, x20, [sp, #144]
  404d74:	b	404b20 <wcrtomb@plt+0x2200>
  404d78:	mov	x21, x22
  404d7c:	mov	x25, x26
  404d80:	mov	x22, x24
  404d84:	mov	x26, x20
  404d88:	cmn	x0, #0x1
  404d8c:	ldp	x24, x20, [sp, #144]
  404d90:	b.eq	404ab0 <wcrtomb@plt+0x2190>  // b.none
  404d94:	bl	4142c0 <wcrtomb@plt+0x119a0>
  404d98:	mov	x27, x23
  404d9c:	b	404b5c <wcrtomb@plt+0x223c>
  404da0:	str	x19, [sp, #128]
  404da4:	ldr	x0, [sp, #128]
  404da8:	sub	x0, x0, x27
  404dac:	str	x0, [sp, #184]
  404db0:	b	404b54 <wcrtomb@plt+0x2234>
  404db4:	mov	x0, #0xffffffffffffffff    	// #-1
  404db8:	ldp	x23, x24, [sp, #48]
  404dbc:	b	404b74 <wcrtomb@plt+0x2254>
  404dc0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  404dc4:	add	x1, x0, #0x360
  404dc8:	ldr	x1, [x1, #8]
  404dcc:	str	x1, [x0, #864]
  404dd0:	ret
  404dd4:	nop
  404dd8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  404ddc:	mov	w1, #0xffffffff            	// #-1
  404de0:	str	w1, [x0, #1144]
  404de4:	ret
  404de8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  404dec:	add	x0, x0, #0x360
  404df0:	adrp	x2, 424000 <_obstack_memory_used@@Base+0xcf38>
  404df4:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  404df8:	add	x2, x2, #0x248
  404dfc:	add	x1, x1, #0x250
  404e00:	stp	x2, x1, [x0, #16]
  404e04:	ret
  404e08:	mov	x4, x0
  404e0c:	mov	x0, #0x0                   	// #0
  404e10:	ldrb	w3, [x4]
  404e14:	cmp	w3, #0xd
  404e18:	b.hi	404e2c <wcrtomb@plt+0x250c>  // b.pmore
  404e1c:	cmp	w3, #0x8
  404e20:	b.hi	404ea8 <wcrtomb@plt+0x2588>  // b.pmore
  404e24:	cbnz	w3, 404e34 <wcrtomb@plt+0x2514>
  404e28:	ret
  404e2c:	cmp	w3, #0x20
  404e30:	b.eq	404ea8 <wcrtomb@plt+0x2588>  // b.none
  404e34:	cbz	x2, 404e40 <wcrtomb@plt+0x2520>
  404e38:	str	x1, [x2, x0, lsl #3]
  404e3c:	ldrb	w3, [x4]
  404e40:	mov	x5, x1
  404e44:	cmp	w3, #0x5c
  404e48:	mov	x1, x5
  404e4c:	add	x0, x0, #0x1
  404e50:	add	x6, x4, #0x1
  404e54:	strb	w3, [x1], #1
  404e58:	ldrb	w3, [x4, #1]
  404e5c:	b.eq	404e94 <wcrtomb@plt+0x2574>  // b.none
  404e60:	mov	x4, x6
  404e64:	cmp	w3, #0xd
  404e68:	cbz	w3, 404eb0 <wcrtomb@plt+0x2590>
  404e6c:	b.hi	404ecc <wcrtomb@plt+0x25ac>  // b.pmore
  404e70:	cmp	w3, #0x8
  404e74:	b.hi	404ec0 <wcrtomb@plt+0x25a0>  // b.pmore
  404e78:	mov	x5, x1
  404e7c:	mov	x1, x5
  404e80:	cmp	w3, #0x5c
  404e84:	add	x6, x4, #0x1
  404e88:	strb	w3, [x1], #1
  404e8c:	ldrb	w3, [x4, #1]
  404e90:	b.ne	404e60 <wcrtomb@plt+0x2540>  // b.any
  404e94:	cbz	w3, 404eb8 <wcrtomb@plt+0x2598>
  404e98:	sturb	w3, [x1, #-1]
  404e9c:	add	x4, x4, #0x2
  404ea0:	ldrb	w3, [x4]
  404ea4:	b	404e64 <wcrtomb@plt+0x2544>
  404ea8:	add	x4, x4, #0x1
  404eac:	b	404e10 <wcrtomb@plt+0x24f0>
  404eb0:	mov	x6, x4
  404eb4:	nop
  404eb8:	mov	x4, x6
  404ebc:	nop
  404ec0:	add	x1, x5, #0x2
  404ec4:	strb	wzr, [x5, #1]
  404ec8:	b	404e10 <wcrtomb@plt+0x24f0>
  404ecc:	cmp	w3, #0x20
  404ed0:	b.eq	404ec0 <wcrtomb@plt+0x25a0>  // b.none
  404ed4:	mov	x5, x1
  404ed8:	b	404e7c <wcrtomb@plt+0x255c>
  404edc:	nop
  404ee0:	stp	x29, x30, [sp, #-32]!
  404ee4:	mov	x29, sp
  404ee8:	str	x19, [sp, #16]
  404eec:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x26f38>
  404ef0:	add	x19, x19, #0x478
  404ef4:	ldr	x0, [x19, #8]
  404ef8:	cbz	x0, 404f08 <wcrtomb@plt+0x25e8>
  404efc:	ldr	x19, [sp, #16]
  404f00:	ldp	x29, x30, [sp], #32
  404f04:	ret
  404f08:	mov	w2, #0x5                   	// #5
  404f0c:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  404f10:	add	x1, x1, #0x258
  404f14:	bl	4027f0 <dcgettext@plt>
  404f18:	str	x0, [x19, #8]
  404f1c:	ldr	x19, [sp, #16]
  404f20:	ldp	x29, x30, [sp], #32
  404f24:	ret
  404f28:	stp	x29, x30, [sp, #-32]!
  404f2c:	mov	x29, sp
  404f30:	stp	x19, x20, [sp, #16]
  404f34:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x26f38>
  404f38:	add	x19, x19, #0x478
  404f3c:	mov	w20, w0
  404f40:	ldrb	w0, [x19, #16]
  404f44:	cbz	w0, 404f5c <wcrtomb@plt+0x263c>
  404f48:	mov	w0, #0x1                   	// #1
  404f4c:	strb	w0, [x19, #17]
  404f50:	ldp	x19, x20, [sp, #16]
  404f54:	ldp	x29, x30, [sp], #32
  404f58:	ret
  404f5c:	bl	404ee0 <wcrtomb@plt+0x25c0>
  404f60:	mov	x3, x0
  404f64:	mov	w1, w20
  404f68:	mov	w0, #0x0                   	// #0
  404f6c:	adrp	x2, 424000 <_obstack_memory_used@@Base+0xcf38>
  404f70:	add	x2, x2, #0x1b8
  404f74:	bl	402330 <error@plt>
  404f78:	mov	w0, #0x1                   	// #1
  404f7c:	strb	w0, [x19, #17]
  404f80:	ldp	x19, x20, [sp, #16]
  404f84:	ldp	x29, x30, [sp], #32
  404f88:	ret
  404f8c:	nop
  404f90:	stp	x29, x30, [sp, #-48]!
  404f94:	mov	x29, sp
  404f98:	stp	x19, x20, [sp, #16]
  404f9c:	adrp	x19, 425000 <_obstack_memory_used@@Base+0xdf38>
  404fa0:	add	x19, x19, #0xa50
  404fa4:	stp	x21, x22, [sp, #32]
  404fa8:	mov	x21, x0
  404fac:	mov	w22, w1
  404fb0:	mov	w20, #0x0                   	// #0
  404fb4:	mov	x1, x19
  404fb8:	mov	x0, x21
  404fbc:	bl	402690 <strcmp@plt>
  404fc0:	cbz	w0, 405034 <wcrtomb@plt+0x2714>
  404fc4:	add	w20, w20, #0x1
  404fc8:	add	x19, x19, #0x20
  404fcc:	cmp	w20, #0x6
  404fd0:	b.ne	404fb4 <wcrtomb@plt+0x2694>  // b.any
  404fd4:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  404fd8:	mov	x0, x21
  404fdc:	add	x1, x1, #0x290
  404fe0:	bl	402690 <strcmp@plt>
  404fe4:	cbnz	w0, 40500c <wcrtomb@plt+0x26ec>
  404fe8:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  404fec:	add	x1, x1, #0x298
  404ff0:	mov	w2, #0x5                   	// #5
  404ff4:	mov	x0, #0x0                   	// #0
  404ff8:	bl	4027f0 <dcgettext@plt>
  404ffc:	mov	w1, #0x0                   	// #0
  405000:	mov	x2, x0
  405004:	mov	w0, #0x2                   	// #2
  405008:	bl	402330 <error@plt>
  40500c:	mov	w2, #0x5                   	// #5
  405010:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  405014:	mov	x0, #0x0                   	// #0
  405018:	add	x1, x1, #0x2d8
  40501c:	bl	4027f0 <dcgettext@plt>
  405020:	mov	x2, x0
  405024:	mov	x3, x21
  405028:	mov	w1, #0x0                   	// #0
  40502c:	mov	w0, #0x2                   	// #2
  405030:	bl	402330 <error@plt>
  405034:	cmp	w22, #0x0
  405038:	ccmp	w20, w22, #0x4, ge  // ge = tcont
  40503c:	b.ne	405054 <wcrtomb@plt+0x2734>  // b.any
  405040:	mov	w0, w20
  405044:	ldp	x19, x20, [sp, #16]
  405048:	ldp	x21, x22, [sp, #32]
  40504c:	ldp	x29, x30, [sp], #48
  405050:	ret
  405054:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  405058:	mov	w2, #0x5                   	// #5
  40505c:	add	x1, x1, #0x270
  405060:	b	404ff4 <wcrtomb@plt+0x26d4>
  405064:	nop
  405068:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40506c:	ldr	w0, [x0, #1164]
  405070:	cbz	w0, 405078 <wcrtomb@plt+0x2758>
  405074:	ret
  405078:	b	409e88 <wcrtomb@plt+0x7568>
  40507c:	nop
  405080:	stp	x29, x30, [sp, #-64]!
  405084:	mov	x29, sp
  405088:	stp	x21, x22, [sp, #32]
  40508c:	adrp	x22, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405090:	add	x22, x22, #0x478
  405094:	stp	x19, x20, [sp, #16]
  405098:	mov	x21, x1
  40509c:	mov	x19, x0
  4050a0:	ldp	x4, x3, [x22, #24]
  4050a4:	stp	x23, x24, [sp, #48]
  4050a8:	mov	x24, x2
  4050ac:	ldr	x0, [x22, #40]
  4050b0:	cmp	x4, x3
  4050b4:	b.ls	40511c <wcrtomb@plt+0x27fc>  // b.plast
  4050b8:	lsl	x1, x3, #4
  4050bc:	add	x3, x3, #0x1
  4050c0:	add	x2, x0, x1
  4050c4:	str	x3, [x22, #32]
  4050c8:	ldr	x23, [x22, #48]
  4050cc:	add	x21, x19, x21
  4050d0:	mov	x20, #0x0                   	// #0
  4050d4:	add	x3, x23, #0x1
  4050d8:	str	x3, [x2, #8]
  4050dc:	str	x24, [x0, x1]
  4050e0:	b	4050ec <wcrtomb@plt+0x27cc>
  4050e4:	add	x19, x0, #0x1
  4050e8:	add	x20, x20, #0x1
  4050ec:	sub	x2, x21, x19
  4050f0:	mov	x0, x19
  4050f4:	mov	w1, #0xa                   	// #10
  4050f8:	bl	402770 <memchr@plt>
  4050fc:	cbnz	x0, 4050e4 <wcrtomb@plt+0x27c4>
  405100:	add	x20, x23, x20
  405104:	str	x20, [x22, #48]
  405108:	ldp	x19, x20, [sp, #16]
  40510c:	ldp	x21, x22, [sp, #32]
  405110:	ldp	x23, x24, [sp, #48]
  405114:	ldp	x29, x30, [sp], #64
  405118:	ret
  40511c:	cbz	x0, 405150 <wcrtomb@plt+0x2830>
  405120:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  405124:	movk	x1, #0x555, lsl #48
  405128:	cmp	x4, x1
  40512c:	b.cs	405168 <wcrtomb@plt+0x2848>  // b.hs, b.nlast
  405130:	add	x1, x4, #0x1
  405134:	add	x4, x1, x4, lsr #1
  405138:	lsl	x1, x4, #4
  40513c:	str	x4, [x22, #24]
  405140:	bl	4140e0 <wcrtomb@plt+0x117c0>
  405144:	str	x0, [x22, #40]
  405148:	ldr	x3, [x22, #32]
  40514c:	b	4050b8 <wcrtomb@plt+0x2798>
  405150:	cbz	x4, 40516c <wcrtomb@plt+0x284c>
  405154:	cmp	xzr, x4, lsr #60
  405158:	lsl	x1, x4, #4
  40515c:	cset	x2, ne  // ne = any
  405160:	tbnz	x4, #59, 405168 <wcrtomb@plt+0x2848>
  405164:	cbz	x2, 40513c <wcrtomb@plt+0x281c>
  405168:	bl	4142c0 <wcrtomb@plt+0x119a0>
  40516c:	mov	x1, #0x80                  	// #128
  405170:	mov	x4, #0x8                   	// #8
  405174:	b	40513c <wcrtomb@plt+0x281c>
  405178:	stp	x29, x30, [sp, #-272]!
  40517c:	adrp	x8, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405180:	mov	x10, x0
  405184:	mov	x29, sp
  405188:	add	x12, sp, #0x110
  40518c:	mov	w9, #0xffffffc8            	// #-56
  405190:	ldr	x0, [x8, #1112]
  405194:	add	x11, sp, #0xd0
  405198:	mov	w8, #0xffffff80            	// #-128
  40519c:	stp	x12, x12, [sp, #48]
  4051a0:	str	x11, [sp, #64]
  4051a4:	stp	w9, w8, [sp, #72]
  4051a8:	ldp	x12, x13, [sp, #48]
  4051ac:	stp	x12, x13, [sp, #16]
  4051b0:	ldp	x8, x9, [sp, #64]
  4051b4:	stp	x8, x9, [sp, #32]
  4051b8:	str	q0, [sp, #80]
  4051bc:	str	q1, [sp, #96]
  4051c0:	str	q2, [sp, #112]
  4051c4:	str	q3, [sp, #128]
  4051c8:	str	q4, [sp, #144]
  4051cc:	str	q5, [sp, #160]
  4051d0:	str	q6, [sp, #176]
  4051d4:	str	q7, [sp, #192]
  4051d8:	stp	x1, x2, [sp, #216]
  4051dc:	mov	x1, x10
  4051e0:	add	x2, sp, #0x10
  4051e4:	stp	x3, x4, [sp, #232]
  4051e8:	stp	x5, x6, [sp, #248]
  4051ec:	str	x7, [sp, #264]
  4051f0:	bl	402850 <vfprintf@plt>
  4051f4:	tbz	w0, #31, 405208 <wcrtomb@plt+0x28e8>
  4051f8:	bl	402890 <__errno_location@plt>
  4051fc:	ldr	w0, [x0]
  405200:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405204:	str	w0, [x1, #1164]
  405208:	ldp	x29, x30, [sp], #272
  40520c:	ret
  405210:	stp	x29, x30, [sp, #-16]!
  405214:	mov	w2, #0x5                   	// #5
  405218:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  40521c:	mov	x29, sp
  405220:	add	x1, x1, #0x2f0
  405224:	mov	x0, #0x0                   	// #0
  405228:	bl	4027f0 <dcgettext@plt>
  40522c:	mov	x2, x0
  405230:	mov	w1, #0x0                   	// #0
  405234:	mov	w0, #0x2                   	// #2
  405238:	bl	402330 <error@plt>
  40523c:	nop
  405240:	stp	x29, x30, [sp, #-64]!
  405244:	mov	x29, sp
  405248:	stp	x21, x22, [sp, #32]
  40524c:	adrp	x22, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405250:	add	x22, x22, #0x478
  405254:	stp	x19, x20, [sp, #16]
  405258:	mov	x19, x0
  40525c:	ldr	x0, [x22, #56]
  405260:	str	x23, [sp, #48]
  405264:	ldr	x23, [x22, #64]
  405268:	cmp	x0, x19
  40526c:	b.cs	4052a8 <wcrtomb@plt+0x2988>  // b.hs, b.nlast
  405270:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3b98>
  405274:	mov	x20, #0x0                   	// #0
  405278:	ldrb	w21, [x1, #2264]
  40527c:	b	405290 <wcrtomb@plt+0x2970>
  405280:	add	x0, x0, #0x1
  405284:	add	x20, x20, #0x1
  405288:	cmp	x19, x0
  40528c:	b.ls	4052a0 <wcrtomb@plt+0x2980>  // b.plast
  405290:	sub	x2, x19, x0
  405294:	mov	w1, w21
  405298:	bl	402770 <memchr@plt>
  40529c:	cbnz	x0, 405280 <wcrtomb@plt+0x2960>
  4052a0:	adds	x23, x20, x23
  4052a4:	b.cs	4052c0 <wcrtomb@plt+0x29a0>  // b.hs, b.nlast
  4052a8:	stp	x19, x23, [x22, #56]
  4052ac:	ldp	x19, x20, [sp, #16]
  4052b0:	ldp	x21, x22, [sp, #32]
  4052b4:	ldr	x23, [sp, #48]
  4052b8:	ldp	x29, x30, [sp], #64
  4052bc:	ret
  4052c0:	bl	405210 <wcrtomb@plt+0x28f0>
  4052c4:	nop
  4052c8:	stp	x29, x30, [sp, #-112]!
  4052cc:	mov	x29, sp
  4052d0:	stp	x19, x20, [sp, #16]
  4052d4:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4052d8:	add	x19, x19, #0x478
  4052dc:	stp	x23, x24, [sp, #48]
  4052e0:	ldp	x2, x23, [x19, #88]
  4052e4:	stp	x25, x26, [sp, #64]
  4052e8:	ldp	x26, x24, [x19, #72]
  4052ec:	stp	x21, x22, [sp, #32]
  4052f0:	mov	x21, x1
  4052f4:	sub	x3, x2, #0x8
  4052f8:	stp	x27, x28, [sp, #80]
  4052fc:	add	x27, x24, x3
  405300:	sub	x1, x26, x0
  405304:	sub	x20, x27, x26
  405308:	cmp	x20, x23
  40530c:	b.cc	405474 <wcrtomb@plt+0x2b54>  // b.lo, b.ul, b.last
  405310:	str	x1, [x19, #104]
  405314:	udiv	x0, x20, x23
  405318:	ldr	w25, [x19, #120]
  40531c:	mov	w22, #0x1                   	// #1
  405320:	msub	x23, x0, x23, x20
  405324:	sub	x20, x20, x23
  405328:	mov	w0, w25
  40532c:	mov	x2, x20
  405330:	mov	x1, x26
  405334:	bl	413a30 <wcrtomb@plt+0x11110>
  405338:	cmn	x0, #0x1
  40533c:	b.eq	405418 <wcrtomb@plt+0x2af8>  // b.none
  405340:	ldr	x24, [x19, #112]
  405344:	cmp	x0, #0x0
  405348:	ldrb	w1, [x19, #124]
  40534c:	cset	w2, eq  // eq = none
  405350:	add	x24, x0, x24
  405354:	str	x24, [x19, #112]
  405358:	eor	w1, w1, #0x1
  40535c:	add	x4, x26, x0
  405360:	orr	w2, w2, w1
  405364:	ands	w2, w2, #0xff
  405368:	b.ne	405394 <wcrtomb@plt+0x2a74>  // b.any
  40536c:	cmp	x26, x4
  405370:	b.cs	4053bc <wcrtomb@plt+0x2a9c>  // b.hs, b.nlast
  405374:	mov	x2, x26
  405378:	b	405388 <wcrtomb@plt+0x2a68>
  40537c:	add	x2, x2, #0x1
  405380:	cmp	x2, x4
  405384:	b.eq	4053bc <wcrtomb@plt+0x2a9c>  // b.none
  405388:	ldrb	w3, [x2]
  40538c:	cbz	w3, 40537c <wcrtomb@plt+0x2a5c>
  405390:	mov	w2, #0x1                   	// #1
  405394:	str	xzr, [x4]
  405398:	mov	w0, w2
  40539c:	str	x4, [x19, #72]
  4053a0:	ldp	x19, x20, [sp, #16]
  4053a4:	ldp	x21, x22, [sp, #32]
  4053a8:	ldp	x23, x24, [sp, #48]
  4053ac:	ldp	x25, x26, [sp, #64]
  4053b0:	ldp	x27, x28, [sp, #80]
  4053b4:	ldp	x29, x30, [sp], #112
  4053b8:	ret
  4053bc:	ldr	x1, [x19, #64]
  4053c0:	adds	x23, x1, x0
  4053c4:	b.cs	4055c8 <wcrtomb@plt+0x2ca8>  // b.hs, b.nlast
  4053c8:	ldrb	w0, [x19, #125]
  4053cc:	str	x23, [x19, #64]
  4053d0:	ldr	w25, [x19, #120]
  4053d4:	cbnz	w0, 405328 <wcrtomb@plt+0x2a08>
  4053d8:	mov	x1, x24
  4053dc:	mov	w0, w25
  4053e0:	mov	w2, #0x3                   	// #3
  4053e4:	bl	4023a0 <lseek@plt>
  4053e8:	tbnz	x0, #63, 405424 <wcrtomb@plt+0x2b04>
  4053ec:	sub	x24, x0, x24
  4053f0:	adds	x24, x24, x23
  4053f4:	b.cs	4055c8 <wcrtomb@plt+0x2ca8>  // b.hs, b.nlast
  4053f8:	mov	x2, x20
  4053fc:	mov	x1, x26
  405400:	str	x24, [x19, #64]
  405404:	str	x0, [x19, #112]
  405408:	mov	w0, w25
  40540c:	bl	413a30 <wcrtomb@plt+0x11110>
  405410:	cmn	x0, #0x1
  405414:	b.ne	405340 <wcrtomb@plt+0x2a20>  // b.any
  405418:	mov	x4, x26
  40541c:	mov	w2, #0x0                   	// #0
  405420:	b	405394 <wcrtomb@plt+0x2a74>
  405424:	bl	402890 <__errno_location@plt>
  405428:	ldr	w0, [x0]
  40542c:	cmp	w0, #0x6
  405430:	b.eq	40543c <wcrtomb@plt+0x2b1c>  // b.none
  405434:	strb	w22, [x19, #125]
  405438:	b	405328 <wcrtomb@plt+0x2a08>
  40543c:	ldr	w0, [x21, #16]
  405440:	and	w0, w0, #0xf000
  405444:	cmp	w0, #0x8, lsl #12
  405448:	b.ne	405434 <wcrtomb@plt+0x2b14>  // b.any
  40544c:	ldr	x0, [x21, #48]
  405450:	cmp	x24, x0
  405454:	b.ge	405434 <wcrtomb@plt+0x2b14>  // b.tcont
  405458:	mov	w0, w25
  40545c:	mov	w2, #0x2                   	// #2
  405460:	mov	x1, #0x0                   	// #0
  405464:	bl	4023a0 <lseek@plt>
  405468:	tbz	x0, #63, 4053ec <wcrtomb@plt+0x2acc>
  40546c:	strb	w22, [x19, #125]
  405470:	b	405328 <wcrtomb@plt+0x2a08>
  405474:	sub	x3, x3, x23
  405478:	add	x5, x23, x0
  40547c:	mov	x22, x0
  405480:	add	x28, x0, #0x1
  405484:	neg	x25, x0
  405488:	cmp	x5, x3
  40548c:	b.ls	4054bc <wcrtomb@plt+0x2b9c>  // b.plast
  405490:	mov	x4, #0xfffffffffffffff7    	// #-9
  405494:	sub	x4, x4, x23
  405498:	cmp	x3, x4, lsr #1
  40549c:	lsr	x4, x4, #1
  4054a0:	b.ls	4054b0 <wcrtomb@plt+0x2b90>  // b.plast
  4054a4:	b	4055cc <wcrtomb@plt+0x2cac>
  4054a8:	cmp	x4, x3
  4054ac:	b.cc	4055cc <wcrtomb@plt+0x2cac>  // b.lo, b.ul, b.last
  4054b0:	lsl	x3, x3, #1
  4054b4:	cmp	x5, x3
  4054b8:	b.hi	4054a8 <wcrtomb@plt+0x2b88>  // b.pmore
  4054bc:	ldr	w0, [x21, #16]
  4054c0:	and	w0, w0, #0xf000
  4054c4:	cmp	w0, #0x8, lsl #12
  4054c8:	b.eq	4055a0 <wcrtomb@plt+0x2c80>  // b.none
  4054cc:	add	x0, x23, #0x8
  4054d0:	add	x0, x0, x3
  4054d4:	cmp	x2, x0
  4054d8:	b.cc	405518 <wcrtomb@plt+0x2bf8>  // b.lo, b.ul, b.last
  4054dc:	add	x26, x24, x28
  4054e0:	mov	x20, x24
  4054e4:	udiv	x0, x26, x23
  4054e8:	msub	x0, x0, x23, x26
  4054ec:	cbnz	x0, 405558 <wcrtomb@plt+0x2c38>
  4054f0:	add	x24, x24, #0x1
  4054f4:	mov	x2, x22
  4054f8:	mov	x0, x24
  4054fc:	str	x24, [x19, #104]
  405500:	bl	4022c0 <memmove@plt>
  405504:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  405508:	ldrb	w0, [x0, #2264]
  40550c:	sturb	w0, [x24, #-1]
  405510:	sub	x20, x27, x26
  405514:	b	405314 <wcrtomb@plt+0x29f4>
  405518:	str	x0, [x19, #88]
  40551c:	str	x1, [sp, #104]
  405520:	bl	414080 <wcrtomb@plt+0x11760>
  405524:	ldr	x23, [x19, #96]
  405528:	add	x26, x0, x28
  40552c:	mov	x2, x0
  405530:	ldp	x20, x3, [x19, #80]
  405534:	udiv	x0, x26, x23
  405538:	ldr	x1, [sp, #104]
  40553c:	msub	x0, x0, x23, x26
  405540:	sub	x1, x1, x24
  405544:	sub	x3, x3, #0x8
  405548:	add	x1, x20, x1
  40554c:	mov	x24, x2
  405550:	add	x27, x2, x3
  405554:	cbz	x0, 405564 <wcrtomb@plt+0x2c44>
  405558:	sub	x26, x23, x0
  40555c:	add	x26, x26, x28
  405560:	add	x26, x24, x26
  405564:	add	x25, x26, x25
  405568:	mov	x2, x22
  40556c:	mov	x0, x25
  405570:	str	x25, [x19, #104]
  405574:	bl	4022c0 <memmove@plt>
  405578:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  40557c:	cmp	x24, x20
  405580:	ldrb	w0, [x0, #2264]
  405584:	sturb	w0, [x25, #-1]
  405588:	b.eq	405510 <wcrtomb@plt+0x2bf0>  // b.none
  40558c:	mov	x0, x20
  405590:	sub	x20, x27, x26
  405594:	bl	4026b0 <free@plt>
  405598:	str	x24, [x19, #80]
  40559c:	b	405314 <wcrtomb@plt+0x29f4>
  4055a0:	ldr	x0, [x21, #48]
  4055a4:	ldr	x4, [x19, #112]
  4055a8:	subs	x0, x0, x4
  4055ac:	add	x4, x0, x22
  4055b0:	ccmp	x0, x4, #0x0, pl  // pl = nfrst
  4055b4:	b.gt	4054cc <wcrtomb@plt+0x2bac>
  4055b8:	cmp	x4, x5
  4055bc:	ccmp	x4, x3, #0x2, cs  // cs = hs, nlast
  4055c0:	csel	x3, x3, x4, cs  // cs = hs, nlast
  4055c4:	b	4054cc <wcrtomb@plt+0x2bac>
  4055c8:	bl	405210 <wcrtomb@plt+0x28f0>
  4055cc:	bl	4142c0 <wcrtomb@plt+0x119a0>
  4055d0:	stp	x29, x30, [sp, #-16]!
  4055d4:	mov	x29, sp
  4055d8:	bl	402890 <__errno_location@plt>
  4055dc:	ldr	w0, [x0]
  4055e0:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4055e4:	ldp	x29, x30, [sp], #16
  4055e8:	str	w0, [x1, #1164]
  4055ec:	ret
  4055f0:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4055f4:	mov	w1, w0
  4055f8:	ldr	x0, [x2, #1112]
  4055fc:	ldp	x2, x3, [x0, #40]
  405600:	cmp	x2, x3
  405604:	b.cs	405618 <wcrtomb@plt+0x2cf8>  // b.hs, b.nlast
  405608:	add	x3, x2, #0x1
  40560c:	str	x3, [x0, #40]
  405610:	strb	w1, [x2]
  405614:	ret
  405618:	stp	x29, x30, [sp, #-16]!
  40561c:	mov	x29, sp
  405620:	bl	402620 <__overflow@plt>
  405624:	tbz	w0, #31, 405630 <wcrtomb@plt+0x2d10>
  405628:	ldp	x29, x30, [sp], #16
  40562c:	b	4055d0 <wcrtomb@plt+0x2cb0>
  405630:	ldp	x29, x30, [sp], #16
  405634:	ret
  405638:	stp	x29, x30, [sp, #-32]!
  40563c:	mov	x3, x1
  405640:	adrp	x4, 426000 <_obstack_memory_used@@Base+0xef38>
  405644:	mov	x29, sp
  405648:	add	x4, x4, #0x9e8
  40564c:	mov	w2, #0xa                   	// #10
  405650:	stp	x19, x20, [sp, #16]
  405654:	mov	x19, x1
  405658:	mov	x20, x0
  40565c:	mov	x1, #0x0                   	// #0
  405660:	bl	414308 <wcrtomb@plt+0x119e8>
  405664:	cmp	w0, #0x1
  405668:	b.hi	405680 <wcrtomb@plt+0x2d60>  // b.pmore
  40566c:	ldr	x0, [x19]
  405670:	tbnz	x0, #63, 405680 <wcrtomb@plt+0x2d60>
  405674:	ldp	x19, x20, [sp, #16]
  405678:	ldp	x29, x30, [sp], #32
  40567c:	ret
  405680:	mov	w2, #0x5                   	// #5
  405684:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  405688:	mov	x0, #0x0                   	// #0
  40568c:	add	x1, x1, #0x310
  405690:	bl	4027f0 <dcgettext@plt>
  405694:	mov	x4, x0
  405698:	adrp	x2, 424000 <_obstack_memory_used@@Base+0xcf38>
  40569c:	mov	x3, x20
  4056a0:	add	x2, x2, #0x330
  4056a4:	mov	w1, #0x0                   	// #0
  4056a8:	mov	w0, #0x2                   	// #2
  4056ac:	bl	402330 <error@plt>
  4056b0:	stp	x29, x30, [sp, #-192]!
  4056b4:	mov	x3, x2
  4056b8:	mov	x2, x1
  4056bc:	mov	x29, sp
  4056c0:	mov	x1, x0
  4056c4:	stp	x21, x22, [sp, #32]
  4056c8:	mov	x21, x0
  4056cc:	add	x0, sp, #0x3c
  4056d0:	bl	416cf8 <wcrtomb@plt+0x143d8>
  4056d4:	cmp	x0, #0x10
  4056d8:	b.hi	405740 <wcrtomb@plt+0x2e20>  // b.pmore
  4056dc:	mov	x22, x0
  4056e0:	ldr	w0, [sp, #60]
  4056e4:	add	x1, sp, #0x40
  4056e8:	bl	40f958 <wcrtomb@plt+0xd038>
  4056ec:	cbnz	w0, 405740 <wcrtomb@plt+0x2e20>
  4056f0:	stp	x19, x20, [sp, #16]
  4056f4:	sub	w19, w22, #0x1
  4056f8:	sxtw	x19, w19
  4056fc:	b	405720 <wcrtomb@plt+0x2e00>
  405700:	ldrb	w20, [x21, x19]
  405704:	bl	402560 <__ctype_toupper_loc@plt>
  405708:	ldr	x1, [x0]
  40570c:	mov	w2, w20
  405710:	sub	x19, x19, #0x1
  405714:	ldr	w1, [x1, x2, lsl #2]
  405718:	cmp	w1, w20
  40571c:	b.ne	40573c <wcrtomb@plt+0x2e1c>  // b.any
  405720:	cmp	w19, #0x0
  405724:	b.gt	405700 <wcrtomb@plt+0x2de0>
  405728:	mov	w0, w22
  40572c:	ldp	x19, x20, [sp, #16]
  405730:	ldp	x21, x22, [sp, #32]
  405734:	ldp	x29, x30, [sp], #192
  405738:	ret
  40573c:	ldp	x19, x20, [sp, #16]
  405740:	mov	w22, #0xffffffff            	// #-1
  405744:	mov	w0, w22
  405748:	ldp	x21, x22, [sp, #32]
  40574c:	ldp	x29, x30, [sp], #192
  405750:	ret
  405754:	nop
  405758:	stp	x29, x30, [sp, #-16]!
  40575c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405760:	mov	x29, sp
  405764:	ldr	x1, [x1, #1112]
  405768:	bl	402800 <fputs_unlocked@plt>
  40576c:	tbnz	w0, #31, 405778 <wcrtomb@plt+0x2e58>
  405770:	ldp	x29, x30, [sp], #16
  405774:	ret
  405778:	ldp	x29, x30, [sp], #16
  40577c:	b	4055d0 <wcrtomb@plt+0x2cb0>
  405780:	stp	x29, x30, [sp, #-16]!
  405784:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405788:	mov	x29, sp
  40578c:	ldr	x0, [x0, #1112]
  405790:	bl	402710 <fflush_unlocked@plt>
  405794:	cbz	w0, 4057a0 <wcrtomb@plt+0x2e80>
  405798:	ldp	x29, x30, [sp], #16
  40579c:	b	4055d0 <wcrtomb@plt+0x2cb0>
  4057a0:	ldp	x29, x30, [sp], #16
  4057a4:	ret
  4057a8:	stp	x29, x30, [sp, #-32]!
  4057ac:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4057b0:	mov	x29, sp
  4057b4:	ldr	x3, [x2, #1112]
  4057b8:	str	x19, [sp, #16]
  4057bc:	mov	x19, x1
  4057c0:	mov	x1, #0x1                   	// #1
  4057c4:	mov	x2, x19
  4057c8:	bl	4022f0 <fwrite_unlocked@plt>
  4057cc:	cmp	x19, x0
  4057d0:	b.eq	4057e4 <wcrtomb@plt+0x2ec4>  // b.none
  4057d4:	bl	402890 <__errno_location@plt>
  4057d8:	ldr	w0, [x0]
  4057dc:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4057e0:	str	w0, [x1, #1164]
  4057e4:	ldr	x19, [sp, #16]
  4057e8:	ldp	x29, x30, [sp], #32
  4057ec:	ret
  4057f0:	ldrb	w0, [x0]
  4057f4:	cbnz	w0, 4057fc <wcrtomb@plt+0x2edc>
  4057f8:	ret
  4057fc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405800:	ldr	x0, [x0, #888]
  405804:	b	4149f8 <wcrtomb@plt+0x120d8>
  405808:	mov	x1, x0
  40580c:	ldrb	w0, [x0]
  405810:	cbnz	w0, 405818 <wcrtomb@plt+0x2ef8>
  405814:	ret
  405818:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40581c:	ldr	x0, [x0, #880]
  405820:	b	4149f0 <wcrtomb@plt+0x120d0>
  405824:	nop
  405828:	stp	x29, x30, [sp, #-32]!
  40582c:	mov	x29, sp
  405830:	stp	x19, x20, [sp, #16]
  405834:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405838:	and	w20, w0, #0xff
  40583c:	ldr	w0, [x19, #1144]
  405840:	cbz	w0, 405850 <wcrtomb@plt+0x2f30>
  405844:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405848:	ldr	x0, [x0, #896]
  40584c:	bl	405808 <wcrtomb@plt+0x2ee8>
  405850:	mov	w0, w20
  405854:	bl	4055f0 <wcrtomb@plt+0x2cd0>
  405858:	ldr	w0, [x19, #1144]
  40585c:	cbz	w0, 405874 <wcrtomb@plt+0x2f54>
  405860:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405864:	ldp	x19, x20, [sp, #16]
  405868:	ldp	x29, x30, [sp], #32
  40586c:	ldr	x0, [x0, #896]
  405870:	b	4057f0 <wcrtomb@plt+0x2ed0>
  405874:	ldp	x19, x20, [sp, #16]
  405878:	ldp	x29, x30, [sp], #32
  40587c:	ret
  405880:	stp	x29, x30, [sp, #-32]!
  405884:	mov	x29, sp
  405888:	str	x19, [sp, #16]
  40588c:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405890:	ldr	w0, [x19, #1144]
  405894:	cbz	w0, 4058a4 <wcrtomb@plt+0x2f84>
  405898:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40589c:	ldr	x0, [x0, #904]
  4058a0:	bl	405808 <wcrtomb@plt+0x2ee8>
  4058a4:	bl	404ee0 <wcrtomb@plt+0x25c0>
  4058a8:	bl	405758 <wcrtomb@plt+0x2e38>
  4058ac:	ldr	w0, [x19, #1144]
  4058b0:	cbz	w0, 4058c8 <wcrtomb@plt+0x2fa8>
  4058b4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4058b8:	ldr	x19, [sp, #16]
  4058bc:	ldp	x29, x30, [sp], #32
  4058c0:	ldr	x0, [x0, #904]
  4058c4:	b	4057f0 <wcrtomb@plt+0x2ed0>
  4058c8:	ldr	x19, [sp, #16]
  4058cc:	ldp	x29, x30, [sp], #32
  4058d0:	ret
  4058d4:	nop
  4058d8:	stp	x29, x30, [sp, #-48]!
  4058dc:	mov	x29, sp
  4058e0:	stp	x19, x20, [sp, #16]
  4058e4:	adrp	x20, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4058e8:	mov	x19, x1
  4058ec:	str	x21, [sp, #32]
  4058f0:	mov	x21, x0
  4058f4:	ldr	w0, [x20, #1144]
  4058f8:	cbz	w0, 405904 <wcrtomb@plt+0x2fe4>
  4058fc:	mov	x0, x1
  405900:	bl	405808 <wcrtomb@plt+0x2ee8>
  405904:	add	x1, x20, #0x478
  405908:	mov	x2, x21
  40590c:	adrp	x0, 424000 <_obstack_memory_used@@Base+0xcf38>
  405910:	add	x0, x0, #0x338
  405914:	ldr	w1, [x1, #128]
  405918:	bl	405178 <wcrtomb@plt+0x2858>
  40591c:	ldr	w0, [x20, #1144]
  405920:	cbz	w0, 405938 <wcrtomb@plt+0x3018>
  405924:	mov	x0, x19
  405928:	ldp	x19, x20, [sp, #16]
  40592c:	ldr	x21, [sp, #32]
  405930:	ldp	x29, x30, [sp], #48
  405934:	b	4057f0 <wcrtomb@plt+0x2ed0>
  405938:	ldp	x19, x20, [sp, #16]
  40593c:	ldr	x21, [sp, #32]
  405940:	ldp	x29, x30, [sp], #48
  405944:	ret
  405948:	stp	x29, x30, [sp, #-96]!
  40594c:	mov	x29, sp
  405950:	stp	x19, x20, [sp, #16]
  405954:	adrp	x20, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405958:	add	x20, x20, #0x478
  40595c:	stp	x21, x22, [sp, #32]
  405960:	mov	x21, x0
  405964:	mov	x22, x1
  405968:	ldr	w0, [x20, #132]
  40596c:	stp	x23, x24, [sp, #48]
  405970:	mov	x23, x2
  405974:	cmp	w0, #0x1
  405978:	stp	x25, x26, [sp, #64]
  40597c:	and	w25, w3, #0xff
  405980:	b.ne	405a48 <wcrtomb@plt+0x3128>  // b.any
  405984:	ldr	w0, [x20, #144]
  405988:	cbnz	w0, 405b04 <wcrtomb@plt+0x31e4>
  40598c:	ldrb	w0, [x20, #152]
  405990:	cbz	w0, 4059b8 <wcrtomb@plt+0x3098>
  405994:	ldr	x0, [x20, #56]
  405998:	cmp	x0, x23
  40599c:	b.cc	405b1c <wcrtomb@plt+0x31fc>  // b.lo, b.ul, b.last
  4059a0:	ldr	x0, [x20, #64]
  4059a4:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4059a8:	ldr	x1, [x1, #912]
  4059ac:	bl	4058d8 <wcrtomb@plt+0x2fb8>
  4059b0:	mov	w0, w25
  4059b4:	bl	405828 <wcrtomb@plt+0x2f08>
  4059b8:	ldrb	w0, [x20, #153]
  4059bc:	cbz	w0, 4059e8 <wcrtomb@plt+0x30c8>
  4059c0:	ldr	x1, [x20, #104]
  4059c4:	ldr	x0, [x20, #160]
  4059c8:	sub	x21, x21, x1
  4059cc:	adds	x0, x0, x21
  4059d0:	b.cs	405b6c <wcrtomb@plt+0x324c>  // b.hs, b.nlast
  4059d4:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4059d8:	ldr	x1, [x1, #920]
  4059dc:	bl	4058d8 <wcrtomb@plt+0x2fb8>
  4059e0:	mov	w0, w25
  4059e4:	bl	405828 <wcrtomb@plt+0x2f08>
  4059e8:	ldrb	w0, [x20, #168]
  4059ec:	cbnz	w0, 405a0c <wcrtomb@plt+0x30ec>
  4059f0:	mov	w0, #0x1                   	// #1
  4059f4:	ldp	x19, x20, [sp, #16]
  4059f8:	ldp	x21, x22, [sp, #32]
  4059fc:	ldp	x23, x24, [sp, #48]
  405a00:	ldp	x25, x26, [sp, #64]
  405a04:	ldp	x29, x30, [sp], #96
  405a08:	ret
  405a0c:	ldrb	w1, [x20, #152]
  405a10:	ldrb	w3, [x20, #153]
  405a14:	ldr	w2, [x20, #144]
  405a18:	orr	w1, w1, w3
  405a1c:	and	w1, w1, #0xff
  405a20:	orr	w1, w1, w2
  405a24:	cmp	w1, #0x0
  405a28:	cset	w19, ne  // ne = any
  405a2c:	cmp	x22, #0x0
  405a30:	csel	w19, w19, wzr, ne  // ne = any
  405a34:	cbz	w19, 4059f4 <wcrtomb@plt+0x30d4>
  405a38:	mov	w0, #0x9                   	// #9
  405a3c:	bl	4055f0 <wcrtomb@plt+0x2cd0>
  405a40:	mov	w0, w19
  405a44:	b	4059f4 <wcrtomb@plt+0x30d4>
  405a48:	ldr	x3, [x20, #136]
  405a4c:	cbz	x3, 405984 <wcrtomb@plt+0x3064>
  405a50:	ldrb	w24, [x21, x1]
  405a54:	mov	w0, #0xffffffff            	// #-1
  405a58:	add	x26, x21, x1
  405a5c:	mov	x19, x21
  405a60:	strb	w0, [x21, x1]
  405a64:	str	xzr, [sp, #88]
  405a68:	b	405a7c <wcrtomb@plt+0x315c>
  405a6c:	ldrb	w0, [x19]
  405a70:	tst	x0, x3
  405a74:	b.ne	405a9c <wcrtomb@plt+0x317c>  // b.any
  405a78:	add	x19, x19, #0x1
  405a7c:	tst	x19, #0x7
  405a80:	b.ne	405a6c <wcrtomb@plt+0x314c>  // b.any
  405a84:	ldr	x0, [x19]
  405a88:	tst	x3, x0
  405a8c:	b.eq	405ae8 <wcrtomb@plt+0x31c8>  // b.none
  405a90:	ldrb	w0, [x19]
  405a94:	tst	x0, x3
  405a98:	b.eq	405ac8 <wcrtomb@plt+0x31a8>  // b.none
  405a9c:	cmp	x26, x19
  405aa0:	b.ls	405ae0 <wcrtomb@plt+0x31c0>  // b.plast
  405aa4:	add	x2, sp, #0x58
  405aa8:	sub	x1, x26, x19
  405aac:	mov	x0, x19
  405ab0:	bl	416cd0 <wcrtomb@plt+0x143b0>
  405ab4:	cmn	x0, #0x3
  405ab8:	b.hi	405b44 <wcrtomb@plt+0x3224>  // b.pmore
  405abc:	add	x19, x19, x0
  405ac0:	ldr	x3, [x20, #136]
  405ac4:	b	405a7c <wcrtomb@plt+0x315c>
  405ac8:	ldrb	w0, [x19, #1]!
  405acc:	tst	x0, x3
  405ad0:	b.eq	405ac8 <wcrtomb@plt+0x31a8>  // b.none
  405ad4:	cmp	x26, x19
  405ad8:	b.hi	405aa4 <wcrtomb@plt+0x3184>  // b.pmore
  405adc:	nop
  405ae0:	strb	w24, [x21, x22]
  405ae4:	b	405984 <wcrtomb@plt+0x3064>
  405ae8:	ldr	x0, [x19, #8]!
  405aec:	tst	x3, x0
  405af0:	b.ne	405a90 <wcrtomb@plt+0x3170>  // b.any
  405af4:	ldr	x0, [x19, #8]!
  405af8:	tst	x3, x0
  405afc:	b.ne	405a90 <wcrtomb@plt+0x3170>  // b.any
  405b00:	b	405ae8 <wcrtomb@plt+0x31c8>
  405b04:	bl	405880 <wcrtomb@plt+0x2f60>
  405b08:	ldr	w0, [x20, #148]
  405b0c:	cbz	w0, 405b38 <wcrtomb@plt+0x3218>
  405b10:	mov	w0, w25
  405b14:	bl	405828 <wcrtomb@plt+0x2f08>
  405b18:	b	40598c <wcrtomb@plt+0x306c>
  405b1c:	mov	x0, x21
  405b20:	bl	405240 <wcrtomb@plt+0x2920>
  405b24:	ldr	x0, [x20, #64]
  405b28:	adds	x0, x0, #0x1
  405b2c:	b.cs	405b6c <wcrtomb@plt+0x324c>  // b.hs, b.nlast
  405b30:	stp	x23, x0, [x20, #56]
  405b34:	b	4059a4 <wcrtomb@plt+0x3084>
  405b38:	mov	w0, #0x0                   	// #0
  405b3c:	bl	4055f0 <wcrtomb@plt+0x2cd0>
  405b40:	b	40598c <wcrtomb@plt+0x306c>
  405b44:	mov	w1, #0x1                   	// #1
  405b48:	strb	w24, [x21, x22]
  405b4c:	strb	w1, [x20, #169]
  405b50:	mov	w0, #0x0                   	// #0
  405b54:	ldp	x19, x20, [sp, #16]
  405b58:	ldp	x21, x22, [sp, #32]
  405b5c:	ldp	x23, x24, [sp, #48]
  405b60:	ldp	x25, x26, [sp, #64]
  405b64:	ldp	x29, x30, [sp], #96
  405b68:	ret
  405b6c:	bl	405210 <wcrtomb@plt+0x28f0>
  405b70:	stp	x29, x30, [sp, #-128]!
  405b74:	mov	x29, sp
  405b78:	stp	x19, x20, [sp, #16]
  405b7c:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405b80:	mov	x20, x1
  405b84:	stp	x27, x28, [sp, #80]
  405b88:	add	x28, x19, #0x478
  405b8c:	stp	x21, x22, [sp, #32]
  405b90:	and	w22, w2, #0xff
  405b94:	ldrb	w1, [x28, #170]
  405b98:	mov	x21, x0
  405b9c:	cbz	w1, 405d24 <wcrtomb@plt+0x3404>
  405ba0:	stp	x23, x24, [sp, #48]
  405ba4:	ldr	w2, [x19, #1144]
  405ba8:	cmp	w22, #0x3a
  405bac:	ldrb	w3, [x28, #171]
  405bb0:	cset	w4, eq  // eq = none
  405bb4:	cmp	w2, #0x0
  405bb8:	eor	w0, w4, w3
  405bbc:	and	w0, w1, w0
  405bc0:	cbnz	w2, 405c08 <wcrtomb@plt+0x32e8>
  405bc4:	cbnz	w0, 405d4c <wcrtomb@plt+0x342c>
  405bc8:	cmp	x21, x20
  405bcc:	eor	w1, w1, #0x1
  405bd0:	cset	w0, cc  // cc = lo, ul, last
  405bd4:	tst	w0, w1
  405bd8:	b.ne	405c84 <wcrtomb@plt+0x3364>  // b.any
  405bdc:	ldrb	w0, [x28, #192]
  405be0:	cbnz	w0, 405c98 <wcrtomb@plt+0x3378>
  405be4:	ldr	w19, [x28, #20]
  405be8:	cbnz	w19, 405f20 <wcrtomb@plt+0x3600>
  405bec:	ldp	x23, x24, [sp, #48]
  405bf0:	str	x20, [x28, #200]
  405bf4:	ldp	x19, x20, [sp, #16]
  405bf8:	ldp	x21, x22, [sp, #32]
  405bfc:	ldp	x27, x28, [sp, #80]
  405c00:	ldp	x29, x30, [sp], #128
  405c04:	ret
  405c08:	ccmp	w3, #0x0, #0x4, lt  // lt = tstop
  405c0c:	cset	w2, ne  // ne = any
  405c10:	cmp	w2, w4
  405c14:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405c18:	add	x6, x2, #0x360
  405c1c:	b.eq	405ebc <wcrtomb@plt+0x359c>  // b.none
  405c20:	ldr	x24, [x6, #64]
  405c24:	cmp	w22, #0x3a
  405c28:	b.eq	405eb4 <wcrtomb@plt+0x3594>  // b.none
  405c2c:	ldr	x23, [x2, #864]
  405c30:	cbnz	w0, 405d54 <wcrtomb@plt+0x3434>
  405c34:	ldrb	w0, [x24]
  405c38:	cbnz	w0, 405ca0 <wcrtomb@plt+0x3380>
  405c3c:	ldrb	w0, [x23]
  405c40:	cbz	w0, 405bc8 <wcrtomb@plt+0x32a8>
  405c44:	cmp	w4, w3
  405c48:	b.eq	405c60 <wcrtomb@plt+0x3340>  // b.none
  405c4c:	cmp	x20, x21
  405c50:	b.hi	405d5c <wcrtomb@plt+0x343c>  // b.pmore
  405c54:	nop
  405c58:	cbz	x21, 405edc <wcrtomb@plt+0x35bc>
  405c5c:	ldrb	w1, [x28, #170]
  405c60:	cbnz	w1, 405bdc <wcrtomb@plt+0x32bc>
  405c64:	ldrb	w0, [x24]
  405c68:	cbnz	w0, 405cb0 <wcrtomb@plt+0x3390>
  405c6c:	ldrb	w1, [x28, #170]
  405c70:	cmp	x21, x20
  405c74:	eor	w1, w1, #0x1
  405c78:	cset	w0, cc  // cc = lo, ul, last
  405c7c:	tst	w0, w1
  405c80:	b.eq	405bdc <wcrtomb@plt+0x32bc>  // b.none
  405c84:	mov	x0, x21
  405c88:	sub	x1, x20, x21
  405c8c:	bl	4057a8 <wcrtomb@plt+0x2e88>
  405c90:	ldrb	w0, [x28, #192]
  405c94:	cbz	w0, 405be4 <wcrtomb@plt+0x32c4>
  405c98:	bl	405780 <wcrtomb@plt+0x2e60>
  405c9c:	b	405be4 <wcrtomb@plt+0x32c4>
  405ca0:	cmp	w4, w3
  405ca4:	b.eq	405c60 <wcrtomb@plt+0x3340>  // b.none
  405ca8:	ldrb	w0, [x23]
  405cac:	cbnz	w0, 405c4c <wcrtomb@plt+0x332c>
  405cb0:	cmp	x20, x21
  405cb4:	mov	x19, x20
  405cb8:	b.ls	405ce8 <wcrtomb@plt+0x33c8>  // b.plast
  405cbc:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3b98>
  405cc0:	ldurb	w2, [x20, #-1]
  405cc4:	mov	x0, #0x0                   	// #0
  405cc8:	ldrb	w1, [x1, #2264]
  405ccc:	cmp	w2, w1
  405cd0:	b.eq	405ef0 <wcrtomb@plt+0x35d0>  // b.none
  405cd4:	mvn	x0, x0
  405cd8:	add	x1, x20, x0
  405cdc:	ldrb	w0, [x20, x0]
  405ce0:	cmp	w0, #0xd
  405ce4:	csel	x19, x1, x19, eq  // eq = none
  405ce8:	subs	x23, x19, x21
  405cec:	b.eq	405c6c <wcrtomb@plt+0x334c>  // b.none
  405cf0:	adrp	x22, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405cf4:	add	x22, x22, #0x360
  405cf8:	mov	x1, x24
  405cfc:	ldr	x0, [x22, #16]
  405d00:	bl	4149f0 <wcrtomb@plt+0x120d0>
  405d04:	mov	x0, x21
  405d08:	mov	x1, x23
  405d0c:	bl	4057a8 <wcrtomb@plt+0x2e88>
  405d10:	ldrb	w0, [x24]
  405d14:	cbnz	w0, 405f04 <wcrtomb@plt+0x35e4>
  405d18:	ldrb	w1, [x28, #170]
  405d1c:	mov	x21, x19
  405d20:	b	405bc8 <wcrtomb@plt+0x32a8>
  405d24:	sub	x1, x20, x0
  405d28:	mov	w3, w22
  405d2c:	sub	x1, x1, #0x1
  405d30:	mov	x2, x20
  405d34:	bl	405948 <wcrtomb@plt+0x3028>
  405d38:	tst	w0, #0xff
  405d3c:	b.eq	405bf4 <wcrtomb@plt+0x32d4>  // b.none
  405d40:	ldrb	w1, [x28, #170]
  405d44:	stp	x23, x24, [sp, #48]
  405d48:	b	405ba4 <wcrtomb@plt+0x3284>
  405d4c:	mov	x23, #0x0                   	// #0
  405d50:	mov	x24, #0x0                   	// #0
  405d54:	cmp	x20, x21
  405d58:	b.ls	405f18 <wcrtomb@plt+0x35f8>  // b.plast
  405d5c:	adrp	x27, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405d60:	stp	x25, x26, [sp, #64]
  405d64:	adrp	x25, 442000 <__progname@@GLIBC_2.17+0x3b98>
  405d68:	add	x0, x25, #0x8d8
  405d6c:	sub	x26, x20, x21
  405d70:	mov	x22, #0x0                   	// #0
  405d74:	mov	w25, #0x2d                  	// #45
  405d78:	str	x0, [sp, #96]
  405d7c:	add	x0, x27, #0x360
  405d80:	mov	x27, x21
  405d84:	str	x0, [sp, #104]
  405d88:	b	405dac <wcrtomb@plt+0x348c>
  405d8c:	cmp	x22, #0x0
  405d90:	mov	x0, #0x1                   	// #1
  405d94:	csel	x22, x22, x27, ne  // ne = any
  405d98:	mov	x4, x0
  405d9c:	str	x0, [sp, #120]
  405da0:	add	x27, x19, x4
  405da4:	cmp	x20, x27
  405da8:	b.ls	405e80 <wcrtomb@plt+0x3560>  // b.plast
  405dac:	ldp	x0, x6, [x28, #176]
  405db0:	mov	x4, x27
  405db4:	add	x3, sp, #0x78
  405db8:	mov	x2, x26
  405dbc:	mov	x1, x21
  405dc0:	blr	x6
  405dc4:	cmn	x0, #0x1
  405dc8:	b.eq	405e80 <wcrtomb@plt+0x3560>  // b.none
  405dcc:	add	x19, x21, x0
  405dd0:	cmp	x20, x19
  405dd4:	b.eq	405e80 <wcrtomb@plt+0x3560>  // b.none
  405dd8:	ldr	x1, [sp, #120]
  405ddc:	cbz	x1, 405d8c <wcrtomb@plt+0x346c>
  405de0:	ldrb	w0, [x28, #170]
  405de4:	cbz	w0, 405e5c <wcrtomb@plt+0x353c>
  405de8:	ldrb	w0, [x28, #171]
  405dec:	mov	x2, x20
  405df0:	mov	w3, #0x3a                  	// #58
  405df4:	cmp	w0, #0x0
  405df8:	mov	x0, x19
  405dfc:	csel	w3, w25, w3, ne  // ne = any
  405e00:	bl	405948 <wcrtomb@plt+0x3028>
  405e04:	tst	w0, #0xff
  405e08:	b.eq	405ee4 <wcrtomb@plt+0x35c4>  // b.none
  405e0c:	ldr	w0, [x28]
  405e10:	cbz	w0, 405e1c <wcrtomb@plt+0x34fc>
  405e14:	mov	x0, x23
  405e18:	bl	405808 <wcrtomb@plt+0x2ee8>
  405e1c:	ldr	x1, [sp, #120]
  405e20:	mov	x0, x19
  405e24:	bl	4057a8 <wcrtomb@plt+0x2e88>
  405e28:	ldr	w0, [x28]
  405e2c:	cbz	w0, 405e38 <wcrtomb@plt+0x3518>
  405e30:	mov	x0, x23
  405e34:	bl	4057f0 <wcrtomb@plt+0x2ed0>
  405e38:	ldrb	w0, [x28, #170]
  405e3c:	cbnz	w0, 405e48 <wcrtomb@plt+0x3528>
  405e40:	ldr	x4, [sp, #120]
  405e44:	b	405da0 <wcrtomb@plt+0x3480>
  405e48:	ldr	x0, [sp, #96]
  405e4c:	ldrb	w0, [x0]
  405e50:	bl	4055f0 <wcrtomb@plt+0x2cd0>
  405e54:	ldr	x4, [sp, #120]
  405e58:	b	405da0 <wcrtomb@plt+0x3480>
  405e5c:	ldrb	w0, [x24]
  405e60:	cbnz	w0, 405ea0 <wcrtomb@plt+0x3580>
  405e64:	cmp	x22, #0x0
  405e68:	csel	x22, x22, x27, ne  // ne = any
  405e6c:	sub	x1, x19, x22
  405e70:	mov	x0, x22
  405e74:	mov	x22, #0x0                   	// #0
  405e78:	bl	4057a8 <wcrtomb@plt+0x2e88>
  405e7c:	b	405e0c <wcrtomb@plt+0x34ec>
  405e80:	ldrb	w0, [x28, #170]
  405e84:	cbnz	w0, 405ec4 <wcrtomb@plt+0x35a4>
  405e88:	cbz	x22, 405ed0 <wcrtomb@plt+0x35b0>
  405e8c:	ldrb	w0, [x24]
  405e90:	mov	x21, x22
  405e94:	ldp	x25, x26, [sp, #64]
  405e98:	cbz	w0, 405c6c <wcrtomb@plt+0x334c>
  405e9c:	b	405cb0 <wcrtomb@plt+0x3390>
  405ea0:	ldr	x0, [sp, #104]
  405ea4:	mov	x1, x24
  405ea8:	ldr	x0, [x0, #16]
  405eac:	bl	4149f0 <wcrtomb@plt+0x120d0>
  405eb0:	b	405e64 <wcrtomb@plt+0x3544>
  405eb4:	ldr	x23, [x6, #8]
  405eb8:	b	405c30 <wcrtomb@plt+0x3310>
  405ebc:	ldr	x24, [x6, #72]
  405ec0:	b	405c24 <wcrtomb@plt+0x3304>
  405ec4:	mov	x21, x20
  405ec8:	ldp	x25, x26, [sp, #64]
  405ecc:	b	405c58 <wcrtomb@plt+0x3338>
  405ed0:	mov	x21, x27
  405ed4:	ldp	x25, x26, [sp, #64]
  405ed8:	b	405c58 <wcrtomb@plt+0x3338>
  405edc:	ldp	x23, x24, [sp, #48]
  405ee0:	b	405bf4 <wcrtomb@plt+0x32d4>
  405ee4:	ldp	x23, x24, [sp, #48]
  405ee8:	ldp	x25, x26, [sp, #64]
  405eec:	b	405bf4 <wcrtomb@plt+0x32d4>
  405ef0:	sub	x19, x20, #0x1
  405ef4:	cmp	x19, x21
  405ef8:	b.ls	405ce8 <wcrtomb@plt+0x33c8>  // b.plast
  405efc:	mov	x0, #0x1                   	// #1
  405f00:	b	405cd4 <wcrtomb@plt+0x33b4>
  405f04:	ldr	x0, [x22, #24]
  405f08:	mov	x21, x19
  405f0c:	bl	4149f8 <wcrtomb@plt+0x120d8>
  405f10:	ldrb	w1, [x28, #170]
  405f14:	b	405c70 <wcrtomb@plt+0x3350>
  405f18:	mov	x21, x20
  405f1c:	b	405c58 <wcrtomb@plt+0x3338>
  405f20:	mov	w2, #0x5                   	// #5
  405f24:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  405f28:	mov	x0, #0x0                   	// #0
  405f2c:	add	x1, x1, #0x340
  405f30:	stp	x25, x26, [sp, #64]
  405f34:	bl	4027f0 <dcgettext@plt>
  405f38:	mov	w1, w19
  405f3c:	mov	x2, x0
  405f40:	mov	w0, #0x2                   	// #2
  405f44:	bl	402330 <error@plt>
  405f48:	stp	x29, x30, [sp, #-48]!
  405f4c:	mov	x29, sp
  405f50:	stp	x19, x20, [sp, #16]
  405f54:	adrp	x20, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405f58:	add	x20, x20, #0x478
  405f5c:	stp	x21, x22, [sp, #32]
  405f60:	mov	x21, x0
  405f64:	ldr	x0, [x20, #200]
  405f68:	cbz	x0, 405fd4 <wcrtomb@plt+0x36b4>
  405f6c:	ldr	x0, [x20, #208]
  405f70:	adrp	x22, 442000 <__progname@@GLIBC_2.17+0x3b98>
  405f74:	add	x22, x22, #0x8d8
  405f78:	cmp	x0, #0x0
  405f7c:	b.gt	405fb0 <wcrtomb@plt+0x3690>
  405f80:	b	405fc4 <wcrtomb@plt+0x36a4>
  405f84:	ldrb	w1, [x22]
  405f88:	bl	402770 <memchr@plt>
  405f8c:	add	x1, x0, #0x1
  405f90:	mov	w2, #0x2d                  	// #45
  405f94:	mov	x0, x19
  405f98:	bl	405b70 <wcrtomb@plt+0x3250>
  405f9c:	ldr	x1, [x20, #208]
  405fa0:	sub	x1, x1, #0x1
  405fa4:	str	x1, [x20, #208]
  405fa8:	cmp	x1, #0x0
  405fac:	b.le	405fc4 <wcrtomb@plt+0x36a4>
  405fb0:	ldr	x19, [x20, #200]
  405fb4:	sub	x2, x21, x19
  405fb8:	mov	x0, x19
  405fbc:	cmp	x19, x21
  405fc0:	b.cc	405f84 <wcrtomb@plt+0x3664>  // b.lo, b.ul, b.last
  405fc4:	ldp	x19, x20, [sp, #16]
  405fc8:	ldp	x21, x22, [sp, #32]
  405fcc:	ldp	x29, x30, [sp], #48
  405fd0:	ret
  405fd4:	ldr	x0, [x20, #104]
  405fd8:	str	x0, [x20, #200]
  405fdc:	b	405f6c <wcrtomb@plt+0x364c>
  405fe0:	stp	x29, x30, [sp, #-144]!
  405fe4:	adrp	x5, 43e000 <_obstack_memory_used@@Base+0x26f38>
  405fe8:	cmp	x0, x1
  405fec:	mov	x29, sp
  405ff0:	stp	x27, x28, [sp, #80]
  405ff4:	add	x27, x5, #0x478
  405ff8:	stp	x21, x22, [sp, #32]
  405ffc:	mov	x21, x0
  406000:	ldr	x0, [x27, #216]
  406004:	str	x0, [sp, #120]
  406008:	b.cs	4063d4 <wcrtomb@plt+0x3ab4>  // b.hs, b.nlast
  40600c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  406010:	add	x0, x0, #0x360
  406014:	stp	x23, x24, [sp, #48]
  406018:	mov	x24, x1
  40601c:	stp	x19, x20, [sp, #16]
  406020:	stp	x25, x26, [sp, #64]
  406024:	adrp	x25, 442000 <__progname@@GLIBC_2.17+0x3b98>
  406028:	str	x0, [sp, #112]
  40602c:	add	x0, x25, #0x8d8
  406030:	str	x0, [sp, #104]
  406034:	nop
  406038:	ldp	x0, x6, [x27, #176]
  40603c:	add	x3, sp, #0x88
  406040:	sub	x2, x24, x21
  406044:	mov	x1, x21
  406048:	mov	x4, #0x0                   	// #0
  40604c:	blr	x6
  406050:	cmn	x0, #0x1
  406054:	b.eq	4060f4 <wcrtomb@plt+0x37d4>  // b.none
  406058:	ldrb	w1, [x27, #171]
  40605c:	add	x23, x21, x0
  406060:	ldr	x20, [sp, #136]
  406064:	add	x20, x23, x20
  406068:	cbnz	w1, 4062fc <wcrtomb@plt+0x39dc>
  40606c:	cmp	x24, x23
  406070:	b.eq	4063bc <wcrtomb@plt+0x3a9c>  // b.none
  406074:	ldrb	w0, [x27, #224]
  406078:	mov	x21, x20
  40607c:	ldr	x1, [sp, #104]
  406080:	ldrb	w22, [x1]
  406084:	cbnz	w0, 40626c <wcrtomb@plt+0x394c>
  406088:	ldr	x0, [x27, #208]
  40608c:	cmp	x0, #0x0
  406090:	b.gt	40630c <wcrtomb@plt+0x39ec>
  406094:	ldr	x3, [x27, #200]
  406098:	mov	x4, x3
  40609c:	cbz	x3, 406394 <wcrtomb@plt+0x3a74>
  4060a0:	ldr	x2, [x27, #232]
  4060a4:	cmp	x2, #0x0
  4060a8:	b.le	406328 <wcrtomb@plt+0x3a08>
  4060ac:	mov	x19, x23
  4060b0:	mov	x0, #0x0                   	// #0
  4060b4:	b	4060c4 <wcrtomb@plt+0x37a4>
  4060b8:	add	x0, x0, #0x1
  4060bc:	cmp	x0, x2
  4060c0:	b.eq	406210 <wcrtomb@plt+0x38f0>  // b.none
  4060c4:	cmp	x4, x19
  4060c8:	b.cs	4060b8 <wcrtomb@plt+0x3798>  // b.hs, b.nlast
  4060cc:	nop
  4060d0:	ldurb	w1, [x19, #-2]
  4060d4:	sub	x19, x19, #0x1
  4060d8:	cmp	w1, w22
  4060dc:	b.eq	4060b8 <wcrtomb@plt+0x3798>  // b.none
  4060e0:	ldurb	w1, [x19, #-2]
  4060e4:	sub	x19, x19, #0x1
  4060e8:	cmp	w1, w22
  4060ec:	b.ne	4060d0 <wcrtomb@plt+0x37b0>  // b.any
  4060f0:	b	4060b8 <wcrtomb@plt+0x3798>
  4060f4:	ldrb	w0, [x27, #171]
  4060f8:	cbz	w0, 4063bc <wcrtomb@plt+0x3a9c>
  4060fc:	str	xzr, [sp, #136]
  406100:	cmp	x24, x21
  406104:	b.ls	4061e8 <wcrtomb@plt+0x38c8>  // b.plast
  406108:	mov	x0, x24
  40610c:	mov	x20, x24
  406110:	ldrb	w1, [x27, #224]
  406114:	mov	x19, x21
  406118:	ldr	x2, [sp, #104]
  40611c:	ldrb	w22, [x2]
  406120:	cbz	w1, 40639c <wcrtomb@plt+0x3a7c>
  406124:	ldrb	w26, [x27, #171]
  406128:	mov	x21, x0
  40612c:	ldr	x28, [x27, #216]
  406130:	cbz	w26, 406270 <wcrtomb@plt+0x3950>
  406134:	cmp	x20, x19
  406138:	mov	x23, #0x0                   	// #0
  40613c:	b.hi	406154 <wcrtomb@plt+0x3834>  // b.pmore
  406140:	b	4061a0 <wcrtomb@plt+0x3880>
  406144:	add	x23, x23, #0x1
  406148:	cmp	x20, x25
  40614c:	b.ls	406198 <wcrtomb@plt+0x3878>  // b.plast
  406150:	mov	x19, x25
  406154:	cmp	x23, x28
  406158:	b.ge	4062f4 <wcrtomb@plt+0x39d4>  // b.tcont
  40615c:	sub	x2, x20, x19
  406160:	mov	w1, w22
  406164:	mov	x0, x19
  406168:	bl	402770 <memchr@plt>
  40616c:	add	x25, x0, #0x1
  406170:	cbnz	w26, 406144 <wcrtomb@plt+0x3824>
  406174:	mov	x0, x19
  406178:	mov	x1, x25
  40617c:	mov	w2, #0x3a                  	// #58
  406180:	bl	405b70 <wcrtomb@plt+0x3250>
  406184:	add	x23, x23, #0x1
  406188:	ldrb	w26, [x27, #224]
  40618c:	cmp	x20, x25
  406190:	ldr	x28, [x27, #216]
  406194:	b.hi	406150 <wcrtomb@plt+0x3830>  // b.pmore
  406198:	sub	x28, x28, x23
  40619c:	mov	x19, x25
  4061a0:	ldr	x2, [x27, #72]
  4061a4:	mov	x0, #0x0                   	// #0
  4061a8:	ldr	x1, [x27, #112]
  4061ac:	sub	x19, x2, x19
  4061b0:	sub	x19, x1, x19
  4061b4:	str	x19, [x27, #256]
  4061b8:	cbnz	w26, 4061c8 <wcrtomb@plt+0x38a8>
  4061bc:	ldr	x0, [x27, #248]
  4061c0:	cmp	x0, #0x0
  4061c4:	csel	x0, x0, xzr, ge  // ge = tcont
  4061c8:	stp	x0, x28, [x27, #208]
  4061cc:	mov	w0, #0x1                   	// #1
  4061d0:	strb	w0, [x27, #240]
  4061d4:	cbz	x28, 4062a0 <wcrtomb@plt+0x3980>
  4061d8:	ldrb	w0, [x27, #264]
  4061dc:	cbnz	w0, 4062a0 <wcrtomb@plt+0x3980>
  4061e0:	cmp	x24, x21
  4061e4:	b.hi	406038 <wcrtomb@plt+0x3718>  // b.pmore
  4061e8:	ldr	x1, [sp, #120]
  4061ec:	ldr	x0, [x27, #216]
  4061f0:	ldp	x19, x20, [sp, #16]
  4061f4:	sub	x0, x1, x0
  4061f8:	ldp	x21, x22, [sp, #32]
  4061fc:	ldp	x23, x24, [sp, #48]
  406200:	ldp	x25, x26, [sp, #64]
  406204:	ldp	x27, x28, [sp, #80]
  406208:	ldp	x29, x30, [sp], #144
  40620c:	ret
  406210:	cmp	x3, x19
  406214:	ldrb	w0, [x27, #240]
  406218:	cset	w1, ne  // ne = any
  40621c:	tst	w1, w0
  406220:	b.eq	406250 <wcrtomb@plt+0x3930>  // b.none
  406224:	b	4063c4 <wcrtomb@plt+0x3aa4>
  406228:	mov	w1, w22
  40622c:	sub	x2, x23, x19
  406230:	mov	x0, x19
  406234:	bl	402770 <memchr@plt>
  406238:	mov	x1, x0
  40623c:	mov	x0, x19
  406240:	add	x19, x1, #0x1
  406244:	mov	w2, #0x2d                  	// #45
  406248:	mov	x1, x19
  40624c:	bl	405b70 <wcrtomb@plt+0x3250>
  406250:	cmp	x19, x23
  406254:	b.cc	406228 <wcrtomb@plt+0x3908>  // b.lo, b.ul, b.last
  406258:	ldrb	w0, [x27, #171]
  40625c:	ldrb	w26, [x27, #224]
  406260:	cbz	w0, 4062cc <wcrtomb@plt+0x39ac>
  406264:	ldr	x28, [x27, #216]
  406268:	b	406134 <wcrtomb@plt+0x3814>
  40626c:	ldr	x28, [x27, #216]
  406270:	sub	x28, x28, #0x1
  406274:	ldr	x2, [x27, #72]
  406278:	mov	x0, #0x0                   	// #0
  40627c:	ldr	x1, [x27, #112]
  406280:	sub	x20, x2, x20
  406284:	stp	x0, x28, [x27, #208]
  406288:	mov	w0, #0x1                   	// #1
  40628c:	sub	x20, x1, x20
  406290:	strb	w0, [x27, #240]
  406294:	str	x20, [x27, #256]
  406298:	cbnz	x28, 4061d8 <wcrtomb@plt+0x38b8>
  40629c:	nop
  4062a0:	ldrb	w0, [x27, #265]
  4062a4:	cbnz	w0, 4063e8 <wcrtomb@plt+0x3ac8>
  4062a8:	ldp	x19, x20, [sp, #16]
  4062ac:	ldp	x23, x24, [sp, #48]
  4062b0:	ldp	x25, x26, [sp, #64]
  4062b4:	ldr	x0, [sp, #120]
  4062b8:	sub	x0, x0, x28
  4062bc:	ldp	x21, x22, [sp, #32]
  4062c0:	ldp	x27, x28, [sp, #80]
  4062c4:	ldp	x29, x30, [sp], #144
  4062c8:	ret
  4062cc:	cbnz	w26, 4063a8 <wcrtomb@plt+0x3a88>
  4062d0:	mov	x0, x23
  4062d4:	mov	x1, x20
  4062d8:	mov	w2, #0x3a                  	// #58
  4062dc:	bl	405b70 <wcrtomb@plt+0x3250>
  4062e0:	ldr	x3, [x27, #216]
  4062e4:	mov	x19, x20
  4062e8:	ldrb	w26, [x27, #224]
  4062ec:	sub	x28, x3, #0x1
  4062f0:	b	4061a0 <wcrtomb@plt+0x3880>
  4062f4:	sub	x28, x28, x23
  4062f8:	b	4061a0 <wcrtomb@plt+0x3880>
  4062fc:	cmp	x23, x21
  406300:	b.hi	4063dc <wcrtomb@plt+0x3abc>  // b.pmore
  406304:	mov	x21, x20
  406308:	b	4061e0 <wcrtomb@plt+0x38c0>
  40630c:	mov	x0, x23
  406310:	bl	405f48 <wcrtomb@plt+0x3628>
  406314:	ldrb	w0, [x27, #224]
  406318:	cbz	w0, 406094 <wcrtomb@plt+0x3774>
  40631c:	mov	x19, x23
  406320:	mov	x0, x21
  406324:	b	406124 <wcrtomb@plt+0x3804>
  406328:	b.eq	406334 <wcrtomb@plt+0x3a14>  // b.none
  40632c:	ldr	x0, [x27, #248]
  406330:	tbnz	x0, #63, 4063b4 <wcrtomb@plt+0x3a94>
  406334:	cmp	x3, x23
  406338:	ldrb	w0, [x27, #240]
  40633c:	cset	w1, ne  // ne = any
  406340:	tst	w1, w0
  406344:	b.eq	4063b4 <wcrtomb@plt+0x3a94>  // b.none
  406348:	ldr	x0, [sp, #112]
  40634c:	mov	x19, x23
  406350:	ldr	x0, [x0, #80]
  406354:	cbz	x0, 406258 <wcrtomb@plt+0x3938>
  406358:	ldr	w1, [x27]
  40635c:	cbz	w1, 406370 <wcrtomb@plt+0x3a50>
  406360:	ldr	x25, [sp, #112]
  406364:	ldr	x0, [x25, #32]
  406368:	bl	405808 <wcrtomb@plt+0x2ee8>
  40636c:	ldr	x0, [x25, #80]
  406370:	bl	405758 <wcrtomb@plt+0x2e38>
  406374:	ldr	w0, [x27]
  406378:	cbz	w0, 406388 <wcrtomb@plt+0x3a68>
  40637c:	ldr	x0, [sp, #112]
  406380:	ldr	x0, [x0, #32]
  406384:	bl	4057f0 <wcrtomb@plt+0x2ed0>
  406388:	mov	w0, #0xa                   	// #10
  40638c:	bl	4055f0 <wcrtomb@plt+0x2cd0>
  406390:	b	406250 <wcrtomb@plt+0x3930>
  406394:	ldr	x4, [x27, #104]
  406398:	b	4060a0 <wcrtomb@plt+0x3780>
  40639c:	mov	x23, x21
  4063a0:	mov	x21, x0
  4063a4:	b	406088 <wcrtomb@plt+0x3768>
  4063a8:	ldr	x3, [x27, #216]
  4063ac:	sub	x28, x3, #0x1
  4063b0:	b	406274 <wcrtomb@plt+0x3954>
  4063b4:	mov	x19, x23
  4063b8:	b	406258 <wcrtomb@plt+0x3938>
  4063bc:	ldr	x28, [x27, #216]
  4063c0:	b	4062a8 <wcrtomb@plt+0x3988>
  4063c4:	ldr	x0, [sp, #112]
  4063c8:	ldr	x0, [x0, #80]
  4063cc:	cbz	x0, 406250 <wcrtomb@plt+0x3930>
  4063d0:	b	406358 <wcrtomb@plt+0x3a38>
  4063d4:	mov	x0, #0x0                   	// #0
  4063d8:	b	4062bc <wcrtomb@plt+0x399c>
  4063dc:	mov	x0, x20
  4063e0:	mov	x20, x23
  4063e4:	b	406110 <wcrtomb@plt+0x37f0>
  4063e8:	ldrb	w0, [x27, #17]
  4063ec:	cbz	w0, 4063fc <wcrtomb@plt+0x3adc>
  4063f0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4063f4:	ldr	w0, [x0, #976]
  4063f8:	bl	402320 <exit@plt>
  4063fc:	mov	w0, #0x0                   	// #0
  406400:	bl	402320 <exit@plt>
  406404:	nop
  406408:	stp	x29, x30, [sp, #-416]!
  40640c:	mov	x29, sp
  406410:	add	x2, sp, #0xa0
  406414:	stp	x19, x20, [sp, #16]
  406418:	mov	w19, w0
  40641c:	stp	x21, x22, [sp, #32]
  406420:	and	w22, w1, #0xff
  406424:	mov	w1, w0
  406428:	mov	w0, #0x0                   	// #0
  40642c:	bl	4027d0 <__fxstat@plt>
  406430:	cbnz	w0, 406a4c <wcrtomb@plt+0x412c>
  406434:	stp	x23, x24, [sp, #48]
  406438:	adrp	x6, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40643c:	mov	w21, w0
  406440:	stp	x27, x28, [sp, #80]
  406444:	add	x28, x6, #0x478
  406448:	cbnz	w19, 406618 <wcrtomb@plt+0x3cf8>
  40644c:	ldr	w0, [x28, #144]
  406450:	tbnz	w0, #31, 406e30 <wcrtomb@plt+0x4510>
  406454:	ldrb	w0, [x28, #224]
  406458:	str	w0, [sp, #136]
  40645c:	cbnz	w0, 406468 <wcrtomb@plt+0x3b48>
  406460:	ldr	w0, [x28, #312]
  406464:	cbz	w0, 406a60 <wcrtomb@plt+0x4140>
  406468:	ldr	x1, [x28, #80]
  40646c:	adrp	x2, 442000 <__progname@@GLIBC_2.17+0x3b98>
  406470:	ldr	x4, [x28, #96]
  406474:	add	x0, x1, #0x1
  406478:	ldrb	w20, [x2, #2264]
  40647c:	add	x3, x4, #0x1
  406480:	ldrb	w5, [x28, #264]
  406484:	udiv	x2, x0, x4
  406488:	str	w19, [x28, #120]
  40648c:	str	w5, [sp, #140]
  406490:	msub	x2, x2, x4, x0
  406494:	sub	x3, x3, x2
  406498:	cmp	x2, #0x0
  40649c:	add	x1, x1, x3
  4064a0:	csel	x0, x0, x1, eq  // eq = none
  4064a4:	str	x0, [x28, #72]
  4064a8:	str	x0, [x28, #104]
  4064ac:	sturb	w20, [x0, #-1]
  4064b0:	cbz	w19, 406b9c <wcrtomb@plt+0x427c>
  4064b4:	str	xzr, [x28, #112]
  4064b8:	strb	wzr, [x28, #125]
  4064bc:	strb	wzr, [x28, #456]
  4064c0:	ldrb	w0, [x28, #458]
  4064c4:	cmp	w20, #0x0
  4064c8:	cset	w2, eq  // eq = none
  4064cc:	add	x1, sp, #0xa0
  4064d0:	ldr	x3, [x28, #320]
  4064d4:	and	w2, w2, w0
  4064d8:	mov	x0, #0x0                   	// #0
  4064dc:	str	xzr, [x28, #64]
  4064e0:	strb	w2, [x28, #124]
  4064e4:	str	xzr, [x28, #160]
  4064e8:	strb	wzr, [x28, #169]
  4064ec:	stp	xzr, xzr, [x28, #200]
  4064f0:	str	x3, [x28, #216]
  4064f4:	str	xzr, [x28, #256]
  4064f8:	bl	4052c8 <wcrtomb@plt+0x29a8>
  4064fc:	ands	w0, w0, #0xff
  406500:	str	w0, [sp, #132]
  406504:	b.eq	406e48 <wcrtomb@plt+0x4528>  // b.none
  406508:	ldrb	w0, [x28, #168]
  40650c:	stp	x25, x26, [sp, #64]
  406510:	str	wzr, [x28, #128]
  406514:	cbnz	w0, 406abc <wcrtomb@plt+0x419c>
  406518:	ldr	w0, [sp, #132]
  40651c:	cmp	w20, #0x0
  406520:	mov	x22, #0xffffffffffffffff    	// #-1
  406524:	mov	w24, #0x0                   	// #0
  406528:	mov	x23, #0x0                   	// #0
  40652c:	mov	x21, #0x0                   	// #0
  406530:	str	xzr, [sp, #104]
  406534:	str	w0, [sp, #124]
  406538:	cset	w0, ne  // ne = any
  40653c:	str	w0, [sp, #128]
  406540:	ldr	w0, [sp, #128]
  406544:	cmp	x22, #0x0
  406548:	ldr	x25, [x28, #72]
  40654c:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
  406550:	ldr	x27, [x28, #104]
  406554:	b.eq	4065b8 <wcrtomb@plt+0x3c98>  // b.none
  406558:	ldr	w26, [x28, #132]
  40655c:	cmp	w26, #0x1
  406560:	b.eq	4065b8 <wcrtomb@plt+0x3c98>  // b.none
  406564:	sub	x1, x25, x27
  406568:	strb	wzr, [x25]
  40656c:	mov	x0, x27
  406570:	str	x1, [sp, #112]
  406574:	bl	402300 <strlen@plt>
  406578:	ldr	x1, [sp, #112]
  40657c:	cmp	x1, x0
  406580:	b.eq	4069c0 <wcrtomb@plt+0x40a0>  // b.none
  406584:	ldrb	w0, [x28, #457]
  406588:	cmp	w26, #0x2
  40658c:	b.eq	406fa8 <wcrtomb@plt+0x4688>  // b.none
  406590:	cbnz	w0, 4065a0 <wcrtomb@plt+0x3c80>
  406594:	mov	w0, #0x1                   	// #1
  406598:	strb	w0, [x28, #224]
  40659c:	strb	w0, [x28, #264]
  4065a0:	ldr	x25, [x28, #72]
  4065a4:	mov	x22, x21
  4065a8:	ldr	x27, [x28, #104]
  4065ac:	mov	w24, w20
  4065b0:	ldrb	w0, [x28, #458]
  4065b4:	strb	w0, [x28, #124]
  4065b8:	ldr	x0, [x28, #200]
  4065bc:	str	x27, [x28, #56]
  4065c0:	cbz	x0, 4065c8 <wcrtomb@plt+0x3ca8>
  4065c4:	str	x27, [x28, #200]
  4065c8:	add	x3, x27, x23
  4065cc:	cmp	x3, x25
  4065d0:	b.eq	406d48 <wcrtomb@plt+0x4428>  // b.none
  4065d4:	cbz	w24, 406774 <wcrtomb@plt+0x3e54>
  4065d8:	mov	x23, x3
  4065dc:	nop
  4065e0:	strb	wzr, [x25]
  4065e4:	mov	x0, x23
  4065e8:	str	x3, [sp, #112]
  4065ec:	bl	402300 <strlen@plt>
  4065f0:	strb	w24, [x25]
  4065f4:	add	x23, x23, x0
  4065f8:	cmp	x23, x25
  4065fc:	ldr	x3, [sp, #112]
  406600:	b.eq	406774 <wcrtomb@plt+0x3e54>  // b.none
  406604:	nop
  406608:	strb	w24, [x23], #1
  40660c:	ldrb	w0, [x23]
  406610:	cbz	w0, 406608 <wcrtomb@plt+0x3ce8>
  406614:	b	4065e0 <wcrtomb@plt+0x3cc0>
  406618:	ldr	w0, [x28, #304]
  40661c:	cmp	w0, #0x2
  406620:	b.eq	406698 <wcrtomb@plt+0x3d78>  // b.none
  406624:	cmp	w0, #0x0
  406628:	eor	w0, w22, #0x1
  40662c:	cset	w1, eq  // eq = none
  406630:	tst	w1, w0
  406634:	b.eq	4066c0 <wcrtomb@plt+0x3da0>  // b.none
  406638:	ldr	w0, [sp, #176]
  40663c:	mov	w1, #0xb000                	// #45056
  406640:	mov	w3, #0xc000                	// #49152
  406644:	mov	w2, #0x1000                	// #4096
  406648:	and	w1, w0, w1
  40664c:	and	w0, w0, #0xf000
  406650:	cmp	w1, #0x2, lsl #12
  406654:	ccmp	w0, w3, #0x4, ne  // ne = any
  406658:	ccmp	w0, w2, #0x4, ne  // ne = any
  40665c:	b.ne	406d8c <wcrtomb@plt+0x446c>  // b.any
  406660:	ldp	x23, x24, [sp, #48]
  406664:	mov	w20, #0x1                   	// #1
  406668:	ldp	x27, x28, [sp, #80]
  40666c:	mov	w0, w19
  406670:	bl	402580 <close@plt>
  406674:	cbz	w0, 406968 <wcrtomb@plt+0x4048>
  406678:	bl	402890 <__errno_location@plt>
  40667c:	ldr	w0, [x0]
  406680:	bl	404f28 <wcrtomb@plt+0x2608>
  406684:	mov	w0, w20
  406688:	ldp	x19, x20, [sp, #16]
  40668c:	ldp	x21, x22, [sp, #32]
  406690:	ldp	x29, x30, [sp], #416
  406694:	ret
  406698:	ldr	w0, [sp, #176]
  40669c:	mov	w1, #0xb000                	// #45056
  4066a0:	mov	w3, #0xc000                	// #49152
  4066a4:	mov	w2, #0x1000                	// #4096
  4066a8:	and	w1, w0, w1
  4066ac:	and	w0, w0, #0xf000
  4066b0:	cmp	w1, #0x2, lsl #12
  4066b4:	ccmp	w0, w3, #0x4, ne  // ne = any
  4066b8:	ccmp	w0, w2, #0x4, ne  // ne = any
  4066bc:	b.eq	406660 <wcrtomb@plt+0x3d40>  // b.none
  4066c0:	cbz	w22, 406d8c <wcrtomb@plt+0x446c>
  4066c4:	ldr	w0, [sp, #176]
  4066c8:	and	w0, w0, #0xf000
  4066cc:	cmp	w0, #0x4, lsl #12
  4066d0:	b.ne	406af4 <wcrtomb@plt+0x41d4>  // b.any
  4066d4:	adrp	x23, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4066d8:	add	x23, x23, #0x360
  4066dc:	ldr	w0, [x23, #88]
  4066e0:	cmp	w0, #0x4
  4066e4:	b.eq	406660 <wcrtomb@plt+0x3d40>  // b.none
  4066e8:	ldrb	w0, [x28, #308]
  4066ec:	cbnz	w0, 406714 <wcrtomb@plt+0x3df4>
  4066f0:	add	x0, x28, #0x120
  4066f4:	ldr	x0, [x0, #8]
  4066f8:	cbz	x0, 40670c <wcrtomb@plt+0x3dec>
  4066fc:	ldr	x1, [x28, #8]
  406700:	bl	4100d0 <wcrtomb@plt+0xd7b0>
  406704:	tst	w0, #0xff
  406708:	b.ne	406660 <wcrtomb@plt+0x3d40>  // b.any
  40670c:	adrp	x23, 43e000 <_obstack_memory_used@@Base+0x26f38>
  406710:	add	x23, x23, #0x360
  406714:	ldr	w0, [x28, #144]
  406718:	tbnz	w0, #31, 406d9c <wcrtomb@plt+0x447c>
  40671c:	ldr	w0, [x23, #88]
  406720:	cmp	w0, #0x3
  406724:	b.eq	406bdc <wcrtomb@plt+0x42bc>  // b.none
  406728:	cmp	w0, #0x4
  40672c:	b.eq	406d78 <wcrtomb@plt+0x4458>  // b.none
  406730:	ldr	w0, [x28, #304]
  406734:	cmp	w0, #0x2
  406738:	b.eq	406748 <wcrtomb@plt+0x3e28>  // b.none
  40673c:	cmp	w0, #0x0
  406740:	ccmp	w22, #0x0, #0x0, eq  // eq = none
  406744:	b.ne	406454 <wcrtomb@plt+0x3b34>  // b.any
  406748:	ldr	w0, [sp, #176]
  40674c:	mov	w1, #0xb000                	// #45056
  406750:	mov	w3, #0xc000                	// #49152
  406754:	mov	w2, #0x1000                	// #4096
  406758:	and	w1, w0, w1
  40675c:	and	w0, w0, #0xf000
  406760:	cmp	w1, #0x2, lsl #12
  406764:	ccmp	w0, w3, #0x4, ne  // ne = any
  406768:	ccmp	w0, w2, #0x4, ne  // ne = any
  40676c:	b.eq	406660 <wcrtomb@plt+0x3d40>  // b.none
  406770:	b	406454 <wcrtomb@plt+0x3b34>
  406774:	ldurb	w23, [x3, #-1]
  406778:	sub	x2, x25, x3
  40677c:	sturb	w20, [x3, #-1]
  406780:	sub	x0, x3, #0x1
  406784:	add	x2, x2, #0x1
  406788:	mov	w1, w20
  40678c:	str	x3, [sp, #112]
  406790:	bl	4026f0 <memrchr@plt>
  406794:	add	x26, x0, #0x1
  406798:	ldp	x0, x3, [sp, #104]
  40679c:	sturb	w23, [x3, #-1]
  4067a0:	cmp	x3, x26
  4067a4:	sub	x0, x3, x0
  4067a8:	b.eq	40697c <wcrtomb@plt+0x405c>  // b.none
  4067ac:	sub	x1, x25, x26
  4067b0:	str	x1, [sp, #104]
  4067b4:	cmp	x26, x0
  4067b8:	b.ls	4067f8 <wcrtomb@plt+0x3ed8>  // b.plast
  4067bc:	ldr	x1, [x28, #216]
  4067c0:	cbnz	x1, 406998 <wcrtomb@plt+0x4078>
  4067c4:	ldr	x0, [x28, #208]
  4067c8:	cbz	x0, 4069b8 <wcrtomb@plt+0x4098>
  4067cc:	mov	x0, x26
  4067d0:	bl	405f48 <wcrtomb@plt+0x3628>
  4067d4:	ldp	x1, x0, [x28, #208]
  4067d8:	orr	x0, x0, x1
  4067dc:	cbz	x0, 4069b8 <wcrtomb@plt+0x4098>
  4067e0:	ldrb	w0, [x28, #264]
  4067e4:	cbz	w0, 4067f8 <wcrtomb@plt+0x3ed8>
  4067e8:	cmp	x22, #0x0
  4067ec:	csel	x0, x22, xzr, ge  // ge = tcont
  4067f0:	cmp	x21, x0
  4067f4:	b.gt	4069b8 <wcrtomb@plt+0x4098>
  4067f8:	ldr	x2, [x28, #232]
  4067fc:	ldr	x1, [x28, #200]
  406800:	cmp	x2, #0x0
  406804:	b.le	406840 <wcrtomb@plt+0x3f20>
  406808:	ldr	x3, [x28, #104]
  40680c:	mov	x0, #0x0                   	// #0
  406810:	cmp	x3, x26
  406814:	b.cs	406840 <wcrtomb@plt+0x3f20>  // b.hs, b.nlast
  406818:	cmp	x1, x26
  40681c:	b.eq	40684c <wcrtomb@plt+0x3f2c>  // b.none
  406820:	add	x0, x0, #0x1
  406824:	nop
  406828:	ldurb	w5, [x26, #-2]
  40682c:	sub	x26, x26, #0x1
  406830:	cmp	w5, w20
  406834:	b.ne	406828 <wcrtomb@plt+0x3f08>  // b.any
  406838:	cmp	x0, x2
  40683c:	b.ne	406810 <wcrtomb@plt+0x3ef0>  // b.any
  406840:	cmp	x26, x1
  406844:	b.eq	40684c <wcrtomb@plt+0x3f2c>  // b.none
  406848:	str	xzr, [x28, #200]
  40684c:	ldrb	w0, [x28, #153]
  406850:	sub	x23, x25, x26
  406854:	cbz	w0, 40687c <wcrtomb@plt+0x3f5c>
  406858:	ldr	x0, [x28, #72]
  40685c:	ldr	x2, [x28, #104]
  406860:	ldr	x1, [x28, #160]
  406864:	sub	x0, x0, x2
  406868:	add	x0, x0, x1
  40686c:	sub	x0, x0, x23
  406870:	cmp	x1, x0
  406874:	b.hi	407134 <wcrtomb@plt+0x4814>  // b.pmore
  406878:	str	x0, [x28, #160]
  40687c:	ldrb	w0, [x28, #152]
  406880:	cbnz	w0, 40698c <wcrtomb@plt+0x406c>
  406884:	add	x1, sp, #0xa0
  406888:	mov	x0, x23
  40688c:	bl	4052c8 <wcrtomb@plt+0x29a8>
  406890:	str	wzr, [sp, #124]
  406894:	tst	w0, #0xff
  406898:	b.ne	406540 <wcrtomb@plt+0x3c20>  // b.any
  40689c:	bl	402890 <__errno_location@plt>
  4068a0:	ldr	w0, [x0]
  4068a4:	str	wzr, [sp, #132]
  4068a8:	bl	404f28 <wcrtomb@plt+0x2608>
  4068ac:	ldr	w0, [sp, #136]
  4068b0:	cmp	x21, #0x0
  4068b4:	ldrb	w1, [sp, #140]
  4068b8:	cset	w23, ne  // ne = any
  4068bc:	strb	w0, [x28, #224]
  4068c0:	strb	w1, [x28, #264]
  4068c4:	cbnz	w0, 40690c <wcrtomb@plt+0x3fec>
  4068c8:	ldrb	w0, [x28, #169]
  4068cc:	cbnz	w0, 4068dc <wcrtomb@plt+0x3fbc>
  4068d0:	cmp	x22, #0x0
  4068d4:	ccmp	x22, x21, #0x0, ge  // ge = tcont
  4068d8:	b.ge	40690c <wcrtomb@plt+0x3fec>  // b.tcont
  4068dc:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  4068e0:	add	x1, x1, #0x3a8
  4068e4:	mov	w2, #0x5                   	// #5
  4068e8:	mov	x0, #0x0                   	// #0
  4068ec:	bl	4027f0 <dcgettext@plt>
  4068f0:	mov	x20, x0
  4068f4:	bl	404ee0 <wcrtomb@plt+0x25c0>
  4068f8:	mov	x1, x0
  4068fc:	mov	x0, x20
  406900:	bl	405178 <wcrtomb@plt+0x2858>
  406904:	ldrb	w0, [x28, #192]
  406908:	cbnz	w0, 406e70 <wcrtomb@plt+0x4550>
  40690c:	ldp	x25, x26, [sp, #64]
  406910:	ldrb	w0, [x28, #457]
  406914:	cbz	w0, 406938 <wcrtomb@plt+0x4018>
  406918:	ldr	w0, [x28, #144]
  40691c:	cbnz	w0, 406e18 <wcrtomb@plt+0x44f8>
  406920:	mov	x1, x21
  406924:	adrp	x0, 424000 <_obstack_memory_used@@Base+0xcf38>
  406928:	add	x0, x0, #0x3c0
  40692c:	bl	405178 <wcrtomb@plt+0x2858>
  406930:	ldrb	w0, [x28, #192]
  406934:	cbnz	w0, 406e10 <wcrtomb@plt+0x44f0>
  406938:	ldr	w0, [x28, #312]
  40693c:	cmp	w0, #0x2
  406940:	cset	w1, ne  // ne = any
  406944:	eor	w20, w1, w23
  406948:	cbz	w0, 406afc <wcrtomb@plt+0x41dc>
  40694c:	ldrb	w0, [x28, #459]
  406950:	cbnz	w0, 406afc <wcrtomb@plt+0x41dc>
  406954:	cmp	w1, w23
  406958:	b.eq	406f78 <wcrtomb@plt+0x4658>  // b.none
  40695c:	ldp	x23, x24, [sp, #48]
  406960:	ldp	x27, x28, [sp, #80]
  406964:	cbnz	w19, 40666c <wcrtomb@plt+0x3d4c>
  406968:	mov	w0, w20
  40696c:	ldp	x19, x20, [sp, #16]
  406970:	ldp	x21, x22, [sp, #32]
  406974:	ldp	x29, x30, [sp], #416
  406978:	ret
  40697c:	sub	x1, x25, x0
  406980:	mov	x26, x0
  406984:	str	x1, [sp, #104]
  406988:	b	4067f8 <wcrtomb@plt+0x3ed8>
  40698c:	mov	x0, x26
  406990:	bl	405240 <wcrtomb@plt+0x2920>
  406994:	b	406884 <wcrtomb@plt+0x3f64>
  406998:	mov	x1, x26
  40699c:	bl	405fe0 <wcrtomb@plt+0x36c0>
  4069a0:	ldr	x1, [x28, #208]
  4069a4:	add	x21, x21, x0
  4069a8:	cbnz	x1, 4067cc <wcrtomb@plt+0x3eac>
  4069ac:	ldr	x0, [x28, #216]
  4069b0:	cbnz	x0, 4067e0 <wcrtomb@plt+0x3ec0>
  4069b4:	nop
  4069b8:	str	wzr, [sp, #132]
  4069bc:	b	4068ac <wcrtomb@plt+0x3f8c>
  4069c0:	ldr	w0, [sp, #124]
  4069c4:	cbz	w0, 4065b8 <wcrtomb@plt+0x3c98>
  4069c8:	ldrb	w0, [x28, #456]
  4069cc:	cbnz	w0, 4065b8 <wcrtomb@plt+0x3c98>
  4069d0:	ldr	w0, [sp, #176]
  4069d4:	and	w0, w0, #0xf000
  4069d8:	cmp	w0, #0x8, lsl #12
  4069dc:	b.ne	4065b8 <wcrtomb@plt+0x3c98>  // b.any
  4069e0:	ldr	x0, [sp, #208]
  4069e4:	cmp	x1, x0
  4069e8:	b.cs	4065b8 <wcrtomb@plt+0x3c98>  // b.hs, b.nlast
  4069ec:	cbnz	w19, 406a08 <wcrtomb@plt+0x40e8>
  4069f0:	mov	x1, #0x0                   	// #0
  4069f4:	mov	w2, #0x1                   	// #1
  4069f8:	mov	w0, #0x0                   	// #0
  4069fc:	bl	4023a0 <lseek@plt>
  406a00:	mov	x1, x0
  406a04:	tbnz	x0, #63, 4065b8 <wcrtomb@plt+0x3c98>
  406a08:	mov	w0, w19
  406a0c:	mov	w2, #0x4                   	// #4
  406a10:	str	x1, [sp, #112]
  406a14:	bl	4023a0 <lseek@plt>
  406a18:	mov	x26, x0
  406a1c:	tbnz	x0, #63, 4065b8 <wcrtomb@plt+0x3c98>
  406a20:	ldr	x1, [sp, #112]
  406a24:	mov	w0, w19
  406a28:	mov	w2, #0x0                   	// #0
  406a2c:	bl	4023a0 <lseek@plt>
  406a30:	tbnz	x0, #63, 407114 <wcrtomb@plt+0x47f4>
  406a34:	ldr	x0, [sp, #208]
  406a38:	cmp	x26, x0
  406a3c:	b.lt	4070d8 <wcrtomb@plt+0x47b8>  // b.tstop
  406a40:	ldr	x25, [x28, #72]
  406a44:	ldr	x27, [x28, #104]
  406a48:	b	4065b8 <wcrtomb@plt+0x3c98>
  406a4c:	bl	402890 <__errno_location@plt>
  406a50:	ldr	w0, [x0]
  406a54:	mov	w20, #0x1                   	// #1
  406a58:	bl	404f28 <wcrtomb@plt+0x2608>
  406a5c:	b	406964 <wcrtomb@plt+0x4044>
  406a60:	ldr	x0, [x28, #320]
  406a64:	cmp	x0, #0x1
  406a68:	b.le	406468 <wcrtomb@plt+0x3b48>
  406a6c:	ldr	w0, [sp, #176]
  406a70:	and	w0, w0, #0xf000
  406a74:	cmp	w0, #0x8, lsl #12
  406a78:	b.ne	406468 <wcrtomb@plt+0x3b48>  // b.any
  406a7c:	ldr	x1, [sp, #168]
  406a80:	ldr	x0, [x28, #336]
  406a84:	cmp	x1, x0
  406a88:	b.ne	406468 <wcrtomb@plt+0x3b48>  // b.any
  406a8c:	ldr	x1, [sp, #160]
  406a90:	ldr	x0, [x28, #328]
  406a94:	cmp	x1, x0
  406a98:	b.ne	406468 <wcrtomb@plt+0x3b48>  // b.any
  406a9c:	ldrb	w0, [x28, #16]
  406aa0:	cbz	w0, 407138 <wcrtomb@plt+0x4818>
  406aa4:	mov	w0, #0x1                   	// #1
  406aa8:	mov	w20, #0x1                   	// #1
  406aac:	strb	w0, [x28, #17]
  406ab0:	ldp	x23, x24, [sp, #48]
  406ab4:	ldp	x27, x28, [sp, #80]
  406ab8:	b	406964 <wcrtomb@plt+0x4044>
  406abc:	ldr	w1, [sp, #176]
  406ac0:	mov	x0, #0xffffffffffffffff    	// #-1
  406ac4:	and	w1, w1, #0xf000
  406ac8:	cmp	w1, #0x8, lsl #12
  406acc:	b.eq	406f2c <wcrtomb@plt+0x460c>  // b.none
  406ad0:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
  406ad4:	movk	x2, #0xcccd
  406ad8:	umulh	x1, x0, x2
  406adc:	cmp	x0, #0x9
  406ae0:	add	w21, w21, #0x1
  406ae4:	lsr	x0, x1, #3
  406ae8:	b.hi	406ad8 <wcrtomb@plt+0x41b8>  // b.pmore
  406aec:	str	w21, [x28, #128]
  406af0:	b	406518 <wcrtomb@plt+0x3bf8>
  406af4:	add	x0, x28, #0x110
  406af8:	b	4066f4 <wcrtomb@plt+0x3dd4>
  406afc:	cbnz	w19, 406b84 <wcrtomb@plt+0x4264>
  406b00:	ldr	x0, [x28, #216]
  406b04:	cbz	x0, 406db4 <wcrtomb@plt+0x4494>
  406b08:	ldr	w0, [sp, #132]
  406b0c:	cbnz	w0, 406b68 <wcrtomb@plt+0x4248>
  406b10:	ldrb	w0, [x28, #456]
  406b14:	cbnz	w0, 406b3c <wcrtomb@plt+0x421c>
  406b18:	mov	w2, #0x2                   	// #2
  406b1c:	mov	x1, #0x0                   	// #0
  406b20:	mov	w0, #0x0                   	// #0
  406b24:	bl	4023a0 <lseek@plt>
  406b28:	tbz	x0, #63, 406b68 <wcrtomb@plt+0x4248>
  406b2c:	bl	402890 <__errno_location@plt>
  406b30:	ldr	w0, [x0]
  406b34:	cmp	w0, #0x16
  406b38:	b.eq	406b68 <wcrtomb@plt+0x4248>  // b.none
  406b3c:	ldr	w0, [sp, #176]
  406b40:	and	w0, w0, #0xf000
  406b44:	cmp	w0, #0x1, lsl #12
  406b48:	b.ne	406b58 <wcrtomb@plt+0x4238>  // b.any
  406b4c:	b	40705c <wcrtomb@plt+0x473c>
  406b50:	cmn	x0, #0x1
  406b54:	b.eq	406de0 <wcrtomb@plt+0x44c0>  // b.none
  406b58:	ldp	x1, x2, [x28, #80]
  406b5c:	mov	w0, #0x0                   	// #0
  406b60:	bl	413a30 <wcrtomb@plt+0x11110>
  406b64:	cbnz	x0, 406b50 <wcrtomb@plt+0x4230>
  406b68:	mov	w0, w20
  406b6c:	ldp	x19, x20, [sp, #16]
  406b70:	ldp	x21, x22, [sp, #32]
  406b74:	ldp	x23, x24, [sp, #48]
  406b78:	ldp	x27, x28, [sp, #80]
  406b7c:	ldp	x29, x30, [sp], #416
  406b80:	ret
  406b84:	mov	w0, w19
  406b88:	ldp	x23, x24, [sp, #48]
  406b8c:	ldp	x27, x28, [sp, #80]
  406b90:	bl	402580 <close@plt>
  406b94:	cbz	w0, 406968 <wcrtomb@plt+0x4048>
  406b98:	b	406678 <wcrtomb@plt+0x3d58>
  406b9c:	mov	x1, #0x0                   	// #0
  406ba0:	mov	w2, #0x1                   	// #1
  406ba4:	mov	w0, #0x0                   	// #0
  406ba8:	bl	4023a0 <lseek@plt>
  406bac:	lsr	x1, x0, #63
  406bb0:	str	x0, [x28, #112]
  406bb4:	and	w1, w1, #0xff
  406bb8:	strb	w1, [x28, #125]
  406bbc:	strb	w1, [x28, #456]
  406bc0:	tbz	x0, #63, 4064c0 <wcrtomb@plt+0x3ba0>
  406bc4:	bl	402890 <__errno_location@plt>
  406bc8:	ldr	w0, [x0]
  406bcc:	cmp	w0, #0x1d
  406bd0:	b.ne	406df8 <wcrtomb@plt+0x44d8>  // b.any
  406bd4:	str	xzr, [x28, #112]
  406bd8:	b	4064c0 <wcrtomb@plt+0x3ba0>
  406bdc:	ldr	w0, [sp, #176]
  406be0:	and	w0, w0, #0xf000
  406be4:	cmp	w0, #0x4, lsl #12
  406be8:	b.ne	406730 <wcrtomb@plt+0x3e10>  // b.any
  406bec:	ldr	w2, [x23, #92]
  406bf0:	eor	w1, w22, #0xfffffffe
  406bf4:	mov	w0, w19
  406bf8:	stp	x25, x26, [sp, #64]
  406bfc:	and	w19, w1, w2
  406c00:	bl	402580 <close@plt>
  406c04:	cbnz	w0, 4070a8 <wcrtomb@plt+0x4788>
  406c08:	ldr	x3, [x28, #8]
  406c0c:	mov	w1, w19
  406c10:	add	x0, sp, #0x90
  406c14:	mov	x2, #0x0                   	// #0
  406c18:	mov	w20, #0x1                   	// #1
  406c1c:	stp	x3, xzr, [sp, #144]
  406c20:	bl	415f08 <wcrtomb@plt+0x135e8>
  406c24:	mov	x24, x0
  406c28:	cbz	x0, 407170 <wcrtomb@plt+0x4850>
  406c2c:	adrp	x26, 424000 <_obstack_memory_used@@Base+0xcf38>
  406c30:	adrp	x25, 424000 <_obstack_memory_used@@Base+0xcf38>
  406c34:	add	x26, x26, #0x350
  406c38:	add	x25, x25, #0x360
  406c3c:	nop
  406c40:	mov	x0, x24
  406c44:	bl	416418 <wcrtomb@plt+0x13af8>
  406c48:	mov	x19, x0
  406c4c:	cbz	x0, 406fd0 <wcrtomb@plt+0x46b0>
  406c50:	ldr	x0, [x19, #88]
  406c54:	ldrh	w1, [x19, #108]
  406c58:	cmp	x0, #0x0
  406c5c:	cset	w21, eq  // eq = none
  406c60:	cmp	w1, #0x6
  406c64:	and	w21, w22, w21
  406c68:	b.eq	406c40 <wcrtomb@plt+0x4320>  // b.none
  406c6c:	cbz	w21, 406f44 <wcrtomb@plt+0x4624>
  406c70:	ldrb	w2, [x28, #308]
  406c74:	ldr	x0, [x19, #56]
  406c78:	str	x0, [x28, #8]
  406c7c:	cbz	w2, 406c90 <wcrtomb@plt+0x4370>
  406c80:	ldrb	w2, [x0, #1]
  406c84:	cbz	w2, 406c90 <wcrtomb@plt+0x4370>
  406c88:	add	x0, x0, #0x2
  406c8c:	str	x0, [x28, #8]
  406c90:	ldr	w0, [x24, #72]
  406c94:	tbnz	w0, #1, 406f20 <wcrtomb@plt+0x4600>
  406c98:	and	w27, w0, w21
  406c9c:	mov	w0, w27
  406ca0:	cmp	w1, #0x7
  406ca4:	b.eq	406ee0 <wcrtomb@plt+0x45c0>  // b.none
  406ca8:	b.hi	406e90 <wcrtomb@plt+0x4570>  // b.pmore
  406cac:	cmp	w1, #0x2
  406cb0:	b.eq	406ffc <wcrtomb@plt+0x46dc>  // b.none
  406cb4:	b.ls	406eb0 <wcrtomb@plt+0x4590>  // b.plast
  406cb8:	cmp	w1, #0x3
  406cbc:	b.ne	406ed8 <wcrtomb@plt+0x45b8>  // b.any
  406cc0:	ldr	w1, [x28, #304]
  406cc4:	cmp	w1, #0x2
  406cc8:	b.eq	406cdc <wcrtomb@plt+0x43bc>  // b.none
  406ccc:	cmp	w1, #0x0
  406cd0:	eor	w1, w21, #0x1
  406cd4:	csel	w1, w1, wzr, eq  // eq = none
  406cd8:	cbz	w1, 406d2c <wcrtomb@plt+0x440c>
  406cdc:	ldr	w1, [x19, #136]
  406ce0:	cbnz	w1, 406d08 <wcrtomb@plt+0x43e8>
  406ce4:	ldr	w1, [x24, #44]
  406ce8:	eor	w0, w0, #0x1
  406cec:	ldr	x2, [x19, #48]
  406cf0:	lsl	w4, w0, #8
  406cf4:	add	x3, sp, #0x120
  406cf8:	mov	w0, #0x0                   	// #0
  406cfc:	bl	402910 <__fxstatat@plt>
  406d00:	cbnz	w0, 407124 <wcrtomb@plt+0x4804>
  406d04:	ldr	w1, [sp, #304]
  406d08:	mov	w0, #0xb000                	// #45056
  406d0c:	and	w0, w1, w0
  406d10:	cmp	w0, #0x2, lsl #12
  406d14:	and	w1, w1, #0xf000
  406d18:	mov	w0, #0xc000                	// #49152
  406d1c:	ccmp	w1, w0, #0x4, ne  // ne = any
  406d20:	mov	w0, #0x1000                	// #4096
  406d24:	ccmp	w1, w0, #0x4, ne  // ne = any
  406d28:	b.eq	406c40 <wcrtomb@plt+0x4320>  // b.none
  406d2c:	ldr	w0, [x24, #44]
  406d30:	mov	w3, w21
  406d34:	ldr	x1, [x19, #48]
  406d38:	mov	w2, w27
  406d3c:	bl	407178 <wcrtomb@plt+0x4858>
  406d40:	and	w20, w20, w0
  406d44:	b	406c40 <wcrtomb@plt+0x4320>
  406d48:	ldr	x0, [sp, #104]
  406d4c:	cbz	x0, 4068ac <wcrtomb@plt+0x3f8c>
  406d50:	ldr	x0, [x28, #216]
  406d54:	add	x1, x25, #0x1
  406d58:	strb	w20, [x25]
  406d5c:	str	x1, [x28, #72]
  406d60:	cbnz	x0, 406e78 <wcrtomb@plt+0x4558>
  406d64:	ldr	x0, [x28, #208]
  406d68:	cbz	x0, 4068ac <wcrtomb@plt+0x3f8c>
  406d6c:	ldr	x0, [x28, #72]
  406d70:	bl	405f48 <wcrtomb@plt+0x3628>
  406d74:	b	4068ac <wcrtomb@plt+0x3f8c>
  406d78:	ldr	w0, [sp, #176]
  406d7c:	and	w0, w0, #0xf000
  406d80:	cmp	w0, #0x4, lsl #12
  406d84:	b.ne	406730 <wcrtomb@plt+0x3e10>  // b.any
  406d88:	b	406660 <wcrtomb@plt+0x3d40>
  406d8c:	ldr	w0, [x28, #144]
  406d90:	adrp	x23, 43e000 <_obstack_memory_used@@Base+0x26f38>
  406d94:	add	x23, x23, #0x360
  406d98:	tbz	w0, #31, 40671c <wcrtomb@plt+0x3dfc>
  406d9c:	ldr	w0, [sp, #176]
  406da0:	and	w0, w0, #0xf000
  406da4:	cmp	w0, #0x4, lsl #12
  406da8:	cset	w0, eq  // eq = none
  406dac:	str	w0, [x28, #144]
  406db0:	b	40671c <wcrtomb@plt+0x3dfc>
  406db4:	ldr	x0, [x28, #112]
  406db8:	ldr	x1, [x28, #256]
  406dbc:	cmp	x0, x1
  406dc0:	b.eq	406b68 <wcrtomb@plt+0x4248>  // b.none
  406dc4:	ldrb	w0, [x28, #456]
  406dc8:	cbnz	w0, 406b68 <wcrtomb@plt+0x4248>
  406dcc:	mov	w2, #0x0                   	// #0
  406dd0:	bl	4023a0 <lseek@plt>
  406dd4:	lsr	x0, x0, #63
  406dd8:	and	w0, w0, #0xff
  406ddc:	cbz	w0, 406b68 <wcrtomb@plt+0x4248>
  406de0:	bl	402890 <__errno_location@plt>
  406de4:	ldr	w0, [x0]
  406de8:	bl	404f28 <wcrtomb@plt+0x2608>
  406dec:	ldp	x23, x24, [sp, #48]
  406df0:	ldp	x27, x28, [sp, #80]
  406df4:	b	406968 <wcrtomb@plt+0x4048>
  406df8:	bl	404f28 <wcrtomb@plt+0x2608>
  406dfc:	mov	w23, #0x0                   	// #0
  406e00:	ldrb	w0, [x28, #457]
  406e04:	mov	x21, #0x0                   	// #0
  406e08:	str	wzr, [sp, #132]
  406e0c:	b	406914 <wcrtomb@plt+0x3ff4>
  406e10:	bl	405780 <wcrtomb@plt+0x2e60>
  406e14:	b	406938 <wcrtomb@plt+0x4018>
  406e18:	bl	405880 <wcrtomb@plt+0x2f60>
  406e1c:	ldr	w0, [x28, #148]
  406e20:	cbz	w0, 406e64 <wcrtomb@plt+0x4544>
  406e24:	mov	w0, #0x3a                  	// #58
  406e28:	bl	405828 <wcrtomb@plt+0x2f08>
  406e2c:	b	406920 <wcrtomb@plt+0x4000>
  406e30:	ldr	w0, [sp, #176]
  406e34:	and	w0, w0, #0xf000
  406e38:	cmp	w0, #0x4, lsl #12
  406e3c:	cset	w0, eq  // eq = none
  406e40:	str	w0, [x28, #144]
  406e44:	b	406454 <wcrtomb@plt+0x3b34>
  406e48:	bl	402890 <__errno_location@plt>
  406e4c:	ldr	w0, [x0]
  406e50:	mov	w23, #0x0                   	// #0
  406e54:	mov	x21, #0x0                   	// #0
  406e58:	bl	404f28 <wcrtomb@plt+0x2608>
  406e5c:	ldrb	w0, [x28, #457]
  406e60:	b	406914 <wcrtomb@plt+0x3ff4>
  406e64:	mov	w0, #0x0                   	// #0
  406e68:	bl	4055f0 <wcrtomb@plt+0x2cd0>
  406e6c:	b	406920 <wcrtomb@plt+0x4000>
  406e70:	bl	405780 <wcrtomb@plt+0x2e60>
  406e74:	b	40690c <wcrtomb@plt+0x3fec>
  406e78:	ldr	x0, [sp, #104]
  406e7c:	sub	x0, x23, x0
  406e80:	add	x0, x27, x0
  406e84:	bl	405fe0 <wcrtomb@plt+0x36c0>
  406e88:	add	x21, x21, x0
  406e8c:	b	406d64 <wcrtomb@plt+0x4444>
  406e90:	cmp	w1, #0xc
  406e94:	b.eq	406c40 <wcrtomb@plt+0x4320>  // b.none
  406e98:	b.ls	406eec <wcrtomb@plt+0x45cc>  // b.plast
  406e9c:	cmp	w1, #0xd
  406ea0:	b.eq	406d2c <wcrtomb@plt+0x440c>  // b.none
  406ea4:	cmp	w1, #0xe
  406ea8:	b.eq	406c40 <wcrtomb@plt+0x4320>  // b.none
  406eac:	bl	4025f0 <abort@plt>
  406eb0:	cmp	w1, #0x1
  406eb4:	b.ne	406eac <wcrtomb@plt+0x458c>  // b.any
  406eb8:	ldr	w0, [x23, #88]
  406ebc:	cmp	w0, #0x3
  406ec0:	b.eq	406c40 <wcrtomb@plt+0x4320>  // b.none
  406ec4:	mov	x1, x19
  406ec8:	mov	x0, x24
  406ecc:	mov	w2, #0x4                   	// #4
  406ed0:	bl	416b10 <wcrtomb@plt+0x141f0>
  406ed4:	b	406d2c <wcrtomb@plt+0x440c>
  406ed8:	cmp	w1, #0x4
  406edc:	b.ne	406eac <wcrtomb@plt+0x458c>  // b.any
  406ee0:	ldr	w0, [x19, #64]
  406ee4:	bl	404f28 <wcrtomb@plt+0x2608>
  406ee8:	b	406c40 <wcrtomb@plt+0x4320>
  406eec:	cmp	w1, #0xa
  406ef0:	b.eq	406ee0 <wcrtomb@plt+0x45c0>  // b.none
  406ef4:	cmp	w1, #0xb
  406ef8:	b.eq	406cc0 <wcrtomb@plt+0x43a0>  // b.none
  406efc:	cmp	w1, #0x8
  406f00:	b.ne	406eac <wcrtomb@plt+0x458c>  // b.any
  406f04:	ldr	w0, [x24, #44]
  406f08:	mov	w3, w21
  406f0c:	ldr	x1, [x19, #48]
  406f10:	mov	w2, w27
  406f14:	bl	407178 <wcrtomb@plt+0x4858>
  406f18:	and	w20, w20, w0
  406f1c:	b	406c40 <wcrtomb@plt+0x4320>
  406f20:	mov	w27, #0x1                   	// #1
  406f24:	mov	w0, w27
  406f28:	b	406ca0 <wcrtomb@plt+0x4380>
  406f2c:	ldrb	w1, [x28, #152]
  406f30:	ldr	x0, [sp, #208]
  406f34:	cbz	w1, 406ad0 <wcrtomb@plt+0x41b0>
  406f38:	cmn	x0, #0x1
  406f3c:	cinc	x0, x0, ne  // ne = any
  406f40:	b	406ad0 <wcrtomb@plt+0x41b0>
  406f44:	sub	w0, w1, #0x1
  406f48:	and	w0, w0, #0xffff
  406f4c:	cmp	w0, #0x1
  406f50:	ccmp	w1, #0x4, #0x4, hi  // hi = pmore
  406f54:	b.eq	406fbc <wcrtomb@plt+0x469c>  // b.none
  406f58:	ldr	x0, [x28, #272]
  406f5c:	cbz	x0, 406c70 <wcrtomb@plt+0x4350>
  406f60:	add	x1, x19, #0xf8
  406f64:	bl	4100d0 <wcrtomb@plt+0xd7b0>
  406f68:	tst	w0, #0xff
  406f6c:	b.ne	407048 <wcrtomb@plt+0x4728>  // b.any
  406f70:	ldrh	w1, [x19, #108]
  406f74:	b	406c70 <wcrtomb@plt+0x4350>
  406f78:	bl	405880 <wcrtomb@plt+0x2f60>
  406f7c:	ldr	w1, [x28, #148]
  406f80:	mov	w0, #0xa                   	// #10
  406f84:	and	w0, w1, w0
  406f88:	bl	4055f0 <wcrtomb@plt+0x2cd0>
  406f8c:	ldrb	w20, [x28, #192]
  406f90:	cbz	w20, 40695c <wcrtomb@plt+0x403c>
  406f94:	bl	405780 <wcrtomb@plt+0x2e60>
  406f98:	mov	w20, #0x0                   	// #0
  406f9c:	ldp	x23, x24, [sp, #48]
  406fa0:	ldp	x27, x28, [sp, #80]
  406fa4:	b	406964 <wcrtomb@plt+0x4044>
  406fa8:	mov	w23, #0x0                   	// #0
  406fac:	mov	x21, #0x0                   	// #0
  406fb0:	str	wzr, [sp, #132]
  406fb4:	ldp	x25, x26, [sp, #64]
  406fb8:	b	406914 <wcrtomb@plt+0x3ff4>
  406fbc:	ldr	w0, [x23, #88]
  406fc0:	cmp	w0, #0x4
  406fc4:	b.eq	407048 <wcrtomb@plt+0x4728>  // b.none
  406fc8:	ldr	x0, [x28, #288]
  406fcc:	b	406f5c <wcrtomb@plt+0x463c>
  406fd0:	bl	402890 <__errno_location@plt>
  406fd4:	mov	x19, x0
  406fd8:	ldr	w0, [x0]
  406fdc:	cbnz	w0, 4070d0 <wcrtomb@plt+0x47b0>
  406fe0:	mov	x0, x24
  406fe4:	bl	4162a8 <wcrtomb@plt+0x13988>
  406fe8:	cbnz	w0, 4070b8 <wcrtomb@plt+0x4798>
  406fec:	ldp	x23, x24, [sp, #48]
  406ff0:	ldp	x25, x26, [sp, #64]
  406ff4:	ldp	x27, x28, [sp, #80]
  406ff8:	b	406968 <wcrtomb@plt+0x4048>
  406ffc:	ldrb	w0, [x28, #16]
  407000:	cbnz	w0, 406c40 <wcrtomb@plt+0x4320>
  407004:	mov	x1, x26
  407008:	mov	w2, #0x5                   	// #5
  40700c:	mov	x0, #0x0                   	// #0
  407010:	bl	4027f0 <dcgettext@plt>
  407014:	ldr	x21, [x28, #8]
  407018:	mov	x19, x0
  40701c:	mov	x1, x25
  407020:	mov	w2, #0x5                   	// #5
  407024:	mov	x0, #0x0                   	// #0
  407028:	bl	4027f0 <dcgettext@plt>
  40702c:	mov	x3, x21
  407030:	mov	x4, x0
  407034:	mov	x2, x19
  407038:	mov	w1, #0x0                   	// #0
  40703c:	mov	w0, #0x0                   	// #0
  407040:	bl	402330 <error@plt>
  407044:	b	406c40 <wcrtomb@plt+0x4320>
  407048:	mov	x1, x19
  40704c:	mov	x0, x24
  407050:	mov	w2, #0x4                   	// #4
  407054:	bl	416b10 <wcrtomb@plt+0x141f0>
  407058:	b	406c40 <wcrtomb@plt+0x4320>
  40705c:	ldrb	w0, [x28, #459]
  407060:	cbz	w0, 406b58 <wcrtomb@plt+0x4238>
  407064:	mov	w5, #0x1                   	// #1
  407068:	mov	x4, #0x18000               	// #98304
  40706c:	mov	w2, w5
  407070:	mov	x3, #0x0                   	// #0
  407074:	mov	x1, #0x0                   	// #0
  407078:	mov	w0, #0x0                   	// #0
  40707c:	bl	402470 <splice@plt>
  407080:	mov	x19, x0
  407084:	cmp	x0, #0x0
  407088:	b.ge	4070e0 <wcrtomb@plt+0x47c0>  // b.tcont
  40708c:	bl	402890 <__errno_location@plt>
  407090:	ldr	w0, [x0]
  407094:	cmp	w0, #0x16
  407098:	b.eq	406b58 <wcrtomb@plt+0x4238>  // b.none
  40709c:	cmp	x19, #0x0
  4070a0:	cset	w0, ne  // ne = any
  4070a4:	b	406ddc <wcrtomb@plt+0x44bc>
  4070a8:	bl	402890 <__errno_location@plt>
  4070ac:	ldr	w0, [x0]
  4070b0:	bl	404f28 <wcrtomb@plt+0x2608>
  4070b4:	b	406c08 <wcrtomb@plt+0x42e8>
  4070b8:	ldr	w0, [x19]
  4070bc:	bl	404f28 <wcrtomb@plt+0x2608>
  4070c0:	ldp	x23, x24, [sp, #48]
  4070c4:	ldp	x25, x26, [sp, #64]
  4070c8:	ldp	x27, x28, [sp, #80]
  4070cc:	b	406968 <wcrtomb@plt+0x4048>
  4070d0:	bl	404f28 <wcrtomb@plt+0x2608>
  4070d4:	b	406fe0 <wcrtomb@plt+0x46c0>
  4070d8:	ldr	w26, [x28, #132]
  4070dc:	b	406584 <wcrtomb@plt+0x3c64>
  4070e0:	b.eq	40709c <wcrtomb@plt+0x477c>  // b.none
  4070e4:	nop
  4070e8:	mov	w5, #0x1                   	// #1
  4070ec:	mov	x4, #0x18000               	// #98304
  4070f0:	mov	w2, w5
  4070f4:	mov	x3, #0x0                   	// #0
  4070f8:	mov	x1, #0x0                   	// #0
  4070fc:	mov	w0, #0x0                   	// #0
  407100:	bl	402470 <splice@plt>
  407104:	mov	x19, x0
  407108:	cmp	x0, #0x0
  40710c:	b.gt	4070e8 <wcrtomb@plt+0x47c8>
  407110:	b	40709c <wcrtomb@plt+0x477c>
  407114:	bl	402890 <__errno_location@plt>
  407118:	ldr	w0, [x0]
  40711c:	bl	404f28 <wcrtomb@plt+0x2608>
  407120:	b	406a34 <wcrtomb@plt+0x4114>
  407124:	bl	402890 <__errno_location@plt>
  407128:	ldr	w0, [x0]
  40712c:	bl	404f28 <wcrtomb@plt+0x2608>
  407130:	b	406c40 <wcrtomb@plt+0x4320>
  407134:	bl	405210 <wcrtomb@plt+0x28f0>
  407138:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  40713c:	add	x1, x1, #0x380
  407140:	mov	w2, #0x5                   	// #5
  407144:	mov	x0, #0x0                   	// #0
  407148:	bl	4027f0 <dcgettext@plt>
  40714c:	mov	x20, x0
  407150:	bl	404ee0 <wcrtomb@plt+0x25c0>
  407154:	bl	413a10 <wcrtomb@plt+0x110f0>
  407158:	mov	x3, x0
  40715c:	mov	x2, x20
  407160:	mov	w1, #0x0                   	// #0
  407164:	mov	w0, #0x0                   	// #0
  407168:	bl	402330 <error@plt>
  40716c:	b	406aa4 <wcrtomb@plt+0x4184>
  407170:	bl	4142c0 <wcrtomb@plt+0x119a0>
  407174:	nop
  407178:	stp	x29, x30, [sp, #-32]!
  40717c:	adrp	x4, 43e000 <_obstack_memory_used@@Base+0x26f38>
  407180:	mov	x29, sp
  407184:	ldr	w4, [x4, #1448]
  407188:	stp	x19, x20, [sp, #16]
  40718c:	ands	w19, w2, #0xff
  407190:	and	w20, w3, #0xff
  407194:	mov	w2, #0x100                 	// #256
  407198:	mov	w3, #0x8100                	// #33024
  40719c:	csel	w2, w2, w3, ne  // ne = any
  4071a0:	cmp	w4, #0x2
  4071a4:	b.eq	4071d4 <wcrtomb@plt+0x48b4>  // b.none
  4071a8:	cmp	w4, #0x0
  4071ac:	eor	w4, w20, #0x1
  4071b0:	cset	w3, eq  // eq = none
  4071b4:	tst	w3, w4
  4071b8:	b.ne	4071d4 <wcrtomb@plt+0x48b4>  // b.any
  4071bc:	bl	411fb8 <wcrtomb@plt+0xf698>
  4071c0:	tbnz	w0, #31, 4071e0 <wcrtomb@plt+0x48c0>
  4071c4:	mov	w1, w20
  4071c8:	ldp	x19, x20, [sp, #16]
  4071cc:	ldp	x29, x30, [sp], #32
  4071d0:	b	406408 <wcrtomb@plt+0x3ae8>
  4071d4:	orr	w2, w2, #0x800
  4071d8:	bl	411fb8 <wcrtomb@plt+0xf698>
  4071dc:	tbz	w0, #31, 4071c4 <wcrtomb@plt+0x48a4>
  4071e0:	bl	402890 <__errno_location@plt>
  4071e4:	ldr	w0, [x0]
  4071e8:	cbnz	w19, 407200 <wcrtomb@plt+0x48e0>
  4071ec:	cmp	w0, #0x28
  4071f0:	cset	w1, eq  // eq = none
  4071f4:	cmp	w0, #0x1f
  4071f8:	csinc	w1, w1, wzr, ne  // ne = any
  4071fc:	cbnz	w1, 407208 <wcrtomb@plt+0x48e8>
  407200:	bl	404f28 <wcrtomb@plt+0x2608>
  407204:	mov	w1, #0x1                   	// #1
  407208:	mov	w0, w1
  40720c:	ldp	x19, x20, [sp, #16]
  407210:	ldp	x29, x30, [sp], #32
  407214:	ret
  407218:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x26f38>
  40721c:	add	x2, x2, #0x478
  407220:	ldp	x5, x7, [x2, #32]
  407224:	cmp	x5, #0x1
  407228:	b.ls	407260 <wcrtomb@plt+0x4940>  // b.plast
  40722c:	add	x6, x7, #0x8
  407230:	mov	x2, #0x10                  	// #16
  407234:	mov	x3, #0x1                   	// #1
  407238:	b	407248 <wcrtomb@plt+0x4928>
  40723c:	add	x2, x2, #0x10
  407240:	cmp	x3, x5
  407244:	b.eq	407274 <wcrtomb@plt+0x4954>  // b.none
  407248:	ldr	x4, [x6, x2]
  40724c:	add	x3, x3, #0x1
  407250:	cmp	x4, x0
  407254:	b.ls	40723c <wcrtomb@plt+0x491c>  // b.plast
  407258:	sub	x2, x2, #0x10
  40725c:	add	x7, x7, x2
  407260:	add	x2, x0, #0x1
  407264:	ldp	x0, x3, [x7]
  407268:	sub	x2, x2, x3
  40726c:	str	x2, [x1]
  407270:	ret
  407274:	add	x7, x7, x3, lsl #4
  407278:	add	x2, x0, #0x1
  40727c:	sub	x7, x7, #0x10
  407280:	ldp	x0, x3, [x7]
  407284:	sub	x2, x2, x3
  407288:	str	x2, [x1]
  40728c:	ret
  407290:	stp	x29, x30, [sp, #-48]!
  407294:	mov	x29, sp
  407298:	stp	x19, x20, [sp, #16]
  40729c:	mov	w19, w0
  4072a0:	stp	x21, x22, [sp, #32]
  4072a4:	cbz	w0, 407314 <wcrtomb@plt+0x49f4>
  4072a8:	adrp	x21, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4072ac:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  4072b0:	add	x1, x1, #0x3c8
  4072b4:	mov	w2, #0x5                   	// #5
  4072b8:	ldr	x22, [x21, #1088]
  4072bc:	mov	x0, #0x0                   	// #0
  4072c0:	bl	4027f0 <dcgettext@plt>
  4072c4:	mov	x20, x0
  4072c8:	bl	410858 <wcrtomb@plt+0xdf38>
  4072cc:	mov	x2, x0
  4072d0:	mov	x1, x20
  4072d4:	mov	x0, x22
  4072d8:	bl	4028d0 <fprintf@plt>
  4072dc:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  4072e0:	add	x1, x1, #0x3f8
  4072e4:	mov	w2, #0x5                   	// #5
  4072e8:	mov	x0, #0x0                   	// #0
  4072ec:	ldr	x21, [x21, #1088]
  4072f0:	bl	4027f0 <dcgettext@plt>
  4072f4:	mov	x20, x0
  4072f8:	bl	410858 <wcrtomb@plt+0xdf38>
  4072fc:	mov	x1, x20
  407300:	mov	x2, x0
  407304:	mov	x0, x21
  407308:	bl	4028d0 <fprintf@plt>
  40730c:	mov	w0, w19
  407310:	bl	402320 <exit@plt>
  407314:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  407318:	add	x1, x1, #0x3c8
  40731c:	mov	w2, #0x5                   	// #5
  407320:	mov	x0, #0x0                   	// #0
  407324:	bl	4027f0 <dcgettext@plt>
  407328:	mov	x20, x0
  40732c:	bl	410858 <wcrtomb@plt+0xdf38>
  407330:	mov	x1, x0
  407334:	mov	x0, x20
  407338:	bl	402870 <printf@plt>
  40733c:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  407340:	add	x1, x1, #0x420
  407344:	mov	w2, #0x5                   	// #5
  407348:	mov	x0, #0x0                   	// #0
  40734c:	bl	4027f0 <dcgettext@plt>
  407350:	bl	402870 <printf@plt>
  407354:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  407358:	add	x1, x1, #0x448
  40735c:	mov	w2, #0x5                   	// #5
  407360:	mov	x0, #0x0                   	// #0
  407364:	bl	4027f0 <dcgettext@plt>
  407368:	mov	x20, x0
  40736c:	bl	410858 <wcrtomb@plt+0xdf38>
  407370:	mov	x1, x0
  407374:	mov	x0, x20
  407378:	bl	402870 <printf@plt>
  40737c:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  407380:	add	x1, x1, #0x4e0
  407384:	mov	w2, #0x5                   	// #5
  407388:	mov	x0, #0x0                   	// #0
  40738c:	bl	4027f0 <dcgettext@plt>
  407390:	bl	402870 <printf@plt>
  407394:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  407398:	add	x1, x1, #0x5e0
  40739c:	mov	w2, #0x5                   	// #5
  4073a0:	mov	x0, #0x0                   	// #0
  4073a4:	bl	4027f0 <dcgettext@plt>
  4073a8:	bl	402870 <printf@plt>
  4073ac:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  4073b0:	add	x1, x1, #0x788
  4073b4:	mov	w2, #0x5                   	// #5
  4073b8:	mov	x0, #0x0                   	// #0
  4073bc:	bl	4027f0 <dcgettext@plt>
  4073c0:	bl	402870 <printf@plt>
  4073c4:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  4073c8:	add	x1, x1, #0x880
  4073cc:	mov	w2, #0x5                   	// #5
  4073d0:	mov	x0, #0x0                   	// #0
  4073d4:	bl	4027f0 <dcgettext@plt>
  4073d8:	bl	402870 <printf@plt>
  4073dc:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  4073e0:	add	x1, x1, #0xa58
  4073e4:	mov	w2, #0x5                   	// #5
  4073e8:	mov	x0, #0x0                   	// #0
  4073ec:	bl	4027f0 <dcgettext@plt>
  4073f0:	bl	402870 <printf@plt>
  4073f4:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  4073f8:	add	x1, x1, #0xba0
  4073fc:	mov	w2, #0x5                   	// #5
  407400:	mov	x0, #0x0                   	// #0
  407404:	bl	4027f0 <dcgettext@plt>
  407408:	bl	402870 <printf@plt>
  40740c:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  407410:	add	x1, x1, #0xd58
  407414:	mov	w2, #0x5                   	// #5
  407418:	mov	x0, #0x0                   	// #0
  40741c:	bl	4027f0 <dcgettext@plt>
  407420:	bl	402870 <printf@plt>
  407424:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  407428:	add	x1, x1, #0xe70
  40742c:	mov	w2, #0x5                   	// #5
  407430:	mov	x0, #0x0                   	// #0
  407434:	bl	4027f0 <dcgettext@plt>
  407438:	bl	402870 <printf@plt>
  40743c:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  407440:	add	x1, x1, #0xfc8
  407444:	mov	w2, #0x5                   	// #5
  407448:	mov	x0, #0x0                   	// #0
  40744c:	bl	4027f0 <dcgettext@plt>
  407450:	bl	402870 <printf@plt>
  407454:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  407458:	add	x1, x1, #0x98
  40745c:	mov	w2, #0x5                   	// #5
  407460:	mov	x0, #0x0                   	// #0
  407464:	bl	4027f0 <dcgettext@plt>
  407468:	bl	402870 <printf@plt>
  40746c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  407470:	add	x1, x1, #0x1c0
  407474:	mov	w2, #0x5                   	// #5
  407478:	mov	x0, #0x0                   	// #0
  40747c:	bl	4027f0 <dcgettext@plt>
  407480:	bl	402870 <printf@plt>
  407484:	bl	413ff8 <wcrtomb@plt+0x116d8>
  407488:	b	40730c <wcrtomb@plt+0x49ec>
  40748c:	nop
  407490:	stp	x29, x30, [sp, #-112]!
  407494:	mov	x29, sp
  407498:	stp	x25, x26, [sp, #64]
  40749c:	mov	x25, x1
  4074a0:	ldr	x26, [x1]
  4074a4:	stp	x27, x28, [sp, #80]
  4074a8:	str	xzr, [sp, #104]
  4074ac:	adds	x1, x26, #0x1
  4074b0:	cset	x2, mi  // mi = first
  4074b4:	ldr	x27, [x0]
  4074b8:	tbnz	x1, #62, 4075f4 <wcrtomb@plt+0x4cd4>
  4074bc:	cbnz	x2, 4075f4 <wcrtomb@plt+0x4cd4>
  4074c0:	stp	x23, x24, [sp, #48]
  4074c4:	mov	x23, x0
  4074c8:	lsl	x0, x1, #1
  4074cc:	bl	414080 <wcrtomb@plt+0x11760>
  4074d0:	mov	x24, x0
  4074d4:	cbz	x26, 40758c <wcrtomb@plt+0x4c6c>
  4074d8:	stp	x21, x22, [sp, #32]
  4074dc:	mov	x21, #0x441                 	// #1089
  4074e0:	mov	x28, x0
  4074e4:	mov	x22, #0x1                   	// #1
  4074e8:	movk	x21, #0x580, lsl #48
  4074ec:	stp	x19, x20, [sp, #16]
  4074f0:	adrp	x20, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4074f4:	add	x20, x20, #0x8e0
  4074f8:	b	407524 <wcrtomb@plt+0x4c04>
  4074fc:	cmp	x19, #0x1
  407500:	b.eq	407544 <wcrtomb@plt+0x4c24>  // b.none
  407504:	sub	x26, x26, x19
  407508:	mov	x0, x28
  40750c:	mov	x1, x27
  407510:	mov	x2, x19
  407514:	add	x27, x27, x19
  407518:	bl	4026d0 <mempcpy@plt>
  40751c:	mov	x28, x0
  407520:	cbz	x26, 407580 <wcrtomb@plt+0x4c60>
  407524:	ldrb	w0, [x27]
  407528:	add	x0, x20, x0
  40752c:	ldrsb	x19, [x0, #3]
  407530:	cmn	x19, #0x2
  407534:	b.eq	4075b0 <wcrtomb@plt+0x4c90>  // b.none
  407538:	cmn	x19, #0x1
  40753c:	b.ne	4074fc <wcrtomb@plt+0x4bdc>  // b.any
  407540:	str	xzr, [sp, #104]
  407544:	ldrb	w0, [x27]
  407548:	add	x1, x28, #0x1
  40754c:	sub	w2, w0, #0x24
  407550:	and	w2, w2, #0xff
  407554:	cmp	w2, #0x3a
  407558:	b.hi	407568 <wcrtomb@plt+0x4c48>  // b.pmore
  40755c:	lsl	x2, x22, x2
  407560:	tst	x2, x21
  407564:	b.ne	4075d8 <wcrtomb@plt+0x4cb8>  // b.any
  407568:	strb	w0, [x28]
  40756c:	mov	x19, #0x1                   	// #1
  407570:	sub	x26, x26, #0x1
  407574:	mov	x28, x1
  407578:	add	x27, x27, x19
  40757c:	cbnz	x26, 407524 <wcrtomb@plt+0x4c04>
  407580:	ldp	x19, x20, [sp, #16]
  407584:	sub	x26, x28, x24
  407588:	ldp	x21, x22, [sp, #32]
  40758c:	ldr	x0, [x23]
  407590:	bl	4026b0 <free@plt>
  407594:	ldp	x27, x28, [sp, #80]
  407598:	str	x24, [x23]
  40759c:	ldp	x23, x24, [sp, #48]
  4075a0:	str	x26, [x25]
  4075a4:	ldp	x25, x26, [sp, #64]
  4075a8:	ldp	x29, x30, [sp], #112
  4075ac:	ret
  4075b0:	add	x2, sp, #0x68
  4075b4:	mov	x1, x26
  4075b8:	mov	x0, x27
  4075bc:	bl	416cd0 <wcrtomb@plt+0x143b0>
  4075c0:	mov	x19, x0
  4075c4:	cmn	x0, #0x2
  4075c8:	b.ne	407538 <wcrtomb@plt+0x4c18>  // b.any
  4075cc:	mov	x19, x26
  4075d0:	mov	x26, #0x0                   	// #0
  4075d4:	b	407508 <wcrtomb@plt+0x4be8>
  4075d8:	mov	x2, x28
  4075dc:	mov	w0, #0x5c                  	// #92
  4075e0:	mov	x28, x1
  4075e4:	strb	w0, [x2], #2
  4075e8:	ldrb	w0, [x27]
  4075ec:	mov	x1, x2
  4075f0:	b	407568 <wcrtomb@plt+0x4c48>
  4075f4:	stp	x19, x20, [sp, #16]
  4075f8:	stp	x21, x22, [sp, #32]
  4075fc:	stp	x23, x24, [sp, #48]
  407600:	bl	4142c0 <wcrtomb@plt+0x119a0>
  407604:	nop
  407608:	sub	sp, sp, #0x210
  40760c:	stp	x29, x30, [sp]
  407610:	mov	x29, sp
  407614:	stp	x25, x26, [sp, #64]
  407618:	mov	x25, x0
  40761c:	mov	w0, #0x1                   	// #1
  407620:	stp	x19, x20, [sp, #16]
  407624:	stp	x21, x22, [sp, #32]
  407628:	mov	x21, #0x0                   	// #0
  40762c:	stp	x23, x24, [sp, #48]
  407630:	adrp	x23, 442000 <__progname@@GLIBC_2.17+0x3b98>
  407634:	adrp	x24, 442000 <__progname@@GLIBC_2.17+0x3b98>
  407638:	add	x23, x23, #0xde5
  40763c:	add	x24, x24, #0x8d8
  407640:	stp	x27, x28, [sp, #80]
  407644:	mov	x27, x1
  407648:	mov	x28, x25
  40764c:	stp	x1, xzr, [sp, #104]
  407650:	bl	409528 <wcrtomb@plt+0x6c08>
  407654:	mov	x22, x0
  407658:	mov	x2, x27
  40765c:	mov	x0, x28
  407660:	mov	w1, #0xa                   	// #10
  407664:	bl	402770 <memchr@plt>
  407668:	mov	x20, x27
  40766c:	mov	x19, x0
  407670:	ldrb	w0, [x23]
  407674:	cbz	x19, 4076bc <wcrtomb@plt+0x4d9c>
  407678:	sub	x2, x19, x28
  40767c:	add	x19, x19, #0x1
  407680:	add	x1, x2, #0x1
  407684:	sub	x27, x27, x1
  407688:	cbnz	w0, 40770c <wcrtomb@plt+0x4dec>
  40768c:	mov	x1, x28
  407690:	mov	x0, x22
  407694:	mov	x28, x19
  407698:	bl	408968 <wcrtomb@plt+0x6048>
  40769c:	mov	x2, x27
  4076a0:	mov	x0, x28
  4076a4:	mov	w1, #0xa                   	// #10
  4076a8:	bl	402770 <memchr@plt>
  4076ac:	mov	x20, x27
  4076b0:	mov	x19, x0
  4076b4:	ldrb	w0, [x23]
  4076b8:	cbnz	x19, 407678 <wcrtomb@plt+0x4d58>
  4076bc:	cbz	w0, 407768 <wcrtomb@plt+0x4e48>
  4076c0:	add	x26, x27, #0x2
  4076c4:	mov	x27, #0x0                   	// #0
  4076c8:	ldr	x0, [sp, #112]
  4076cc:	cmp	x26, x0
  4076d0:	b.hi	407740 <wcrtomb@plt+0x4e20>  // b.pmore
  4076d4:	mov	x2, x20
  4076d8:	mov	x1, x28
  4076dc:	add	x0, x21, #0x1
  4076e0:	add	x20, x21, x20
  4076e4:	bl	4022a0 <memcpy@plt>
  4076e8:	ldrb	w4, [x24]
  4076ec:	mov	x2, x26
  4076f0:	strb	w4, [x20, #1]
  4076f4:	mov	x1, x21
  4076f8:	mov	x0, x22
  4076fc:	bl	408968 <wcrtomb@plt+0x6048>
  407700:	cbz	x19, 407778 <wcrtomb@plt+0x4e58>
  407704:	mov	x28, x19
  407708:	b	407658 <wcrtomb@plt+0x4d38>
  40770c:	ldrb	w0, [x24]
  407710:	add	x26, x2, #0x2
  407714:	mov	x20, x2
  407718:	cmp	w0, #0xa
  40771c:	b.ne	4076c8 <wcrtomb@plt+0x4da8>  // b.any
  407720:	cmp	x28, x25
  407724:	b.ls	4076c8 <wcrtomb@plt+0x4da8>  // b.plast
  407728:	sub	x1, x28, #0x1
  40772c:	mov	x2, x26
  407730:	mov	x0, x22
  407734:	mov	x28, x19
  407738:	bl	408968 <wcrtomb@plt+0x6048>
  40773c:	b	407658 <wcrtomb@plt+0x4d38>
  407740:	mov	x0, x21
  407744:	bl	4026b0 <free@plt>
  407748:	add	x1, sp, #0x70
  40774c:	mov	x0, #0x0                   	// #0
  407750:	str	x26, [sp, #112]
  407754:	bl	4141c8 <wcrtomb@plt+0x118a8>
  407758:	ldrb	w1, [x24]
  40775c:	mov	x21, x0
  407760:	strb	w1, [x0]
  407764:	b	4076d4 <wcrtomb@plt+0x4db4>
  407768:	mov	x2, x27
  40776c:	mov	x1, x28
  407770:	mov	x0, x22
  407774:	bl	408968 <wcrtomb@plt+0x6048>
  407778:	mov	x0, x21
  40777c:	bl	4026b0 <free@plt>
  407780:	mov	x0, x22
  407784:	bl	408de8 <wcrtomb@plt+0x64c8>
  407788:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3b98>
  40778c:	mov	x24, x0
  407790:	ldrb	w0, [x1, #3558]
  407794:	cbz	w0, 407870 <wcrtomb@plt+0x4f50>
  407798:	ldr	x3, [sp, #104]
  40779c:	add	x0, sp, #0x120
  4077a0:	mov	x2, #0xf0                  	// #240
  4077a4:	mov	w1, #0x0                   	// #0
  4077a8:	add	x23, x25, x3
  4077ac:	str	xzr, [sp, #120]
  4077b0:	stp	xzr, xzr, [sp, #272]
  4077b4:	bl	402510 <memset@plt>
  4077b8:	mov	x19, x25
  4077bc:	add	x21, sp, #0x110
  4077c0:	cmp	x25, x23
  4077c4:	b.cs	407870 <wcrtomb@plt+0x4f50>  // b.hs, b.nlast
  4077c8:	adrp	x27, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4077cc:	add	x27, x27, #0x8e0
  4077d0:	b	4077e0 <wcrtomb@plt+0x4ec0>
  4077d4:	add	x19, x19, #0x1
  4077d8:	cmp	x19, x23
  4077dc:	b.eq	407870 <wcrtomb@plt+0x4f50>  // b.none
  4077e0:	ldrb	w2, [x19]
  4077e4:	mov	x0, x2
  4077e8:	ldrb	w1, [x21, w2, sxtw]
  4077ec:	cbnz	w1, 4077d4 <wcrtomb@plt+0x4eb4>
  4077f0:	add	x2, x27, x2, lsl #2
  4077f4:	mov	w3, #0x1                   	// #1
  4077f8:	strb	w3, [x21, w0, sxtw]
  4077fc:	add	x1, sp, #0x90
  407800:	ldr	w0, [x2, #260]
  407804:	bl	40f958 <wcrtomb@plt+0xd038>
  407808:	cmp	w0, #0x0
  40780c:	b.le	4077d4 <wcrtomb@plt+0x4eb4>
  407810:	sxtw	x20, w0
  407814:	sub	w28, w0, #0x2
  407818:	sub	x20, x20, #0x3
  40781c:	sub	w0, w0, #0x1
  407820:	sub	x20, x20, x0
  407824:	sxtw	x28, w28
  407828:	add	x0, sp, #0x90
  40782c:	add	x2, sp, #0x78
  407830:	add	x1, x0, x28, lsl #2
  407834:	add	x0, sp, #0x80
  407838:	sub	x28, x28, #0x1
  40783c:	ldr	w1, [x1, #4]
  407840:	bl	402920 <wcrtomb@plt>
  407844:	cmp	w0, #0x1
  407848:	add	x1, sp, #0x80
  40784c:	b.le	40785c <wcrtomb@plt+0x4f3c>
  407850:	sxtw	x2, w0
  407854:	mov	x0, x22
  407858:	bl	408968 <wcrtomb@plt+0x6048>
  40785c:	cmp	x20, x28
  407860:	b.ne	407828 <wcrtomb@plt+0x4f08>  // b.any
  407864:	add	x19, x19, #0x1
  407868:	cmp	x19, x23
  40786c:	b.ne	4077e0 <wcrtomb@plt+0x4ec0>  // b.any
  407870:	mov	x0, x22
  407874:	bl	408df0 <wcrtomb@plt+0x64d0>
  407878:	mov	x0, #0x28                  	// #40
  40787c:	bl	414080 <wcrtomb@plt+0x11760>
  407880:	ldr	x2, [sp, #104]
  407884:	ldp	x29, x30, [sp]
  407888:	ldp	x19, x20, [sp, #16]
  40788c:	ldp	x27, x28, [sp, #80]
  407890:	stp	x22, x24, [x0]
  407894:	stp	x25, x2, [x0, #16]
  407898:	str	xzr, [x0, #32]
  40789c:	ldp	x21, x22, [sp, #32]
  4078a0:	ldp	x23, x24, [sp, #48]
  4078a4:	ldp	x25, x26, [sp, #64]
  4078a8:	add	sp, sp, #0x210
  4078ac:	ret
  4078b0:	stp	x29, x30, [sp, #-192]!
  4078b4:	adrp	x5, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4078b8:	mov	x29, sp
  4078bc:	stp	x23, x24, [sp, #48]
  4078c0:	adrp	x23, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4078c4:	stp	x25, x26, [sp, #64]
  4078c8:	mov	x25, x0
  4078cc:	ldrb	w0, [x23, #3557]
  4078d0:	stp	x1, x2, [sp, #120]
  4078d4:	ldrb	w1, [x5, #2264]
  4078d8:	stp	x19, x20, [sp, #16]
  4078dc:	stp	x21, x22, [sp, #32]
  4078e0:	mov	x21, x4
  4078e4:	str	w1, [sp, #116]
  4078e8:	str	x3, [sp, #136]
  4078ec:	ldr	x22, [x25]
  4078f0:	cbnz	w0, 407b0c <wcrtomb@plt+0x51ec>
  4078f4:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4078f8:	add	x4, x1, #0x8e0
  4078fc:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3b98>
  407900:	cmp	x21, #0x0
  407904:	ldrb	w2, [x1, #2272]
  407908:	cset	w26, ne  // ne = any
  40790c:	ldrb	w24, [x4, #2]
  407910:	ldrb	w1, [x3, #3556]
  407914:	eor	w24, w24, #0x1
  407918:	and	w24, w24, w2
  40791c:	and	w24, w24, #0xff
  407920:	orr	w1, w24, w1
  407924:	orr	w26, w26, w1
  407928:	and	w1, w26, #0xff
  40792c:	str	w1, [sp, #112]
  407930:	ldp	x1, x2, [sp, #120]
  407934:	cmp	x21, #0x0
  407938:	csel	x19, x21, x1, ne  // ne = any
  40793c:	str	x19, [sp, #152]
  407940:	add	x20, x1, x2
  407944:	cmp	x20, x19
  407948:	b.cc	407a64 <wcrtomb@plt+0x5144>  // b.lo, b.ul, b.last
  40794c:	ldrb	w4, [sp, #112]
  407950:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3b98>
  407954:	stp	x27, x28, [sp, #80]
  407958:	adrp	x27, 442000 <__progname@@GLIBC_2.17+0x3b98>
  40795c:	add	x2, x27, #0xde4
  407960:	add	x1, x1, #0x8e0
  407964:	stp	x2, x1, [sp, #96]
  407968:	sub	x2, x20, x19
  40796c:	sub	x1, x19, w0, uxtb
  407970:	add	x2, x2, w0, uxtb
  407974:	add	x3, sp, #0xa8
  407978:	mov	x0, x22
  40797c:	bl	409388 <wcrtomb@plt+0x6a68>
  407980:	tbnz	x0, #63, 407a60 <wcrtomb@plt+0x5140>
  407984:	nop
  407988:	ldr	x3, [sp, #184]
  40798c:	ldrb	w4, [x23, #3557]
  407990:	ldr	x2, [x25, #8]
  407994:	ldr	x1, [sp, #168]
  407998:	sub	x26, x3, w4, uxtb #1
  40799c:	cmp	x2, x1
  4079a0:	b.le	407bf4 <wcrtomb@plt+0x52d4>
  4079a4:	str	xzr, [sp, #160]
  4079a8:	add	x19, x19, x0
  4079ac:	cbnz	w24, 407aec <wcrtomb@plt+0x51cc>
  4079b0:	ldr	x0, [sp, #96]
  4079b4:	cmp	x21, #0x0
  4079b8:	cset	w2, ne  // ne = any
  4079bc:	ldrb	w0, [x0]
  4079c0:	eor	w1, w0, #0x1
  4079c4:	tst	w2, w1
  4079c8:	b.ne	407c30 <wcrtomb@plt+0x5310>  // b.any
  4079cc:	ldrb	w1, [x23, #3557]
  4079d0:	cbnz	w1, 407c40 <wcrtomb@plt+0x5320>
  4079d4:	cbz	w0, 407b4c <wcrtomb@plt+0x522c>
  4079d8:	ldr	x0, [sp, #160]
  4079dc:	cbnz	x0, 407ad4 <wcrtomb@plt+0x51b4>
  4079e0:	ldr	w1, [sp, #116]
  4079e4:	ldr	x27, [sp, #152]
  4079e8:	sub	x2, x19, x27
  4079ec:	mov	x0, x27
  4079f0:	bl	4026f0 <memrchr@plt>
  4079f4:	cbz	x0, 407a00 <wcrtomb@plt+0x50e0>
  4079f8:	add	x27, x0, #0x1
  4079fc:	str	x27, [sp, #152]
  407a00:	mov	x0, x27
  407a04:	mov	x2, x20
  407a08:	mov	x1, x19
  407a0c:	bl	4097f8 <wcrtomb@plt+0x6ed8>
  407a10:	cmp	x0, #0x0
  407a14:	cset	w0, eq  // eq = none
  407a18:	cbnz	w0, 407ab4 <wcrtomb@plt+0x5194>
  407a1c:	mov	x0, x19
  407a20:	mov	x1, x20
  407a24:	bl	4097e8 <wcrtomb@plt+0x6ec8>
  407a28:	add	x19, x19, x0
  407a2c:	str	x19, [sp, #152]
  407a30:	add	x19, x19, #0x1
  407a34:	cmp	x20, x19
  407a38:	b.cc	407a60 <wcrtomb@plt+0x5140>  // b.lo, b.ul, b.last
  407a3c:	ldrb	w4, [sp, #112]
  407a40:	sub	x2, x20, x19
  407a44:	ldrb	w0, [x23, #3557]
  407a48:	add	x3, sp, #0xa8
  407a4c:	sub	x1, x19, w0, uxtb
  407a50:	add	x2, x2, w0, uxtb
  407a54:	mov	x0, x22
  407a58:	bl	409388 <wcrtomb@plt+0x6a68>
  407a5c:	tbz	x0, #63, 407988 <wcrtomb@plt+0x5068>
  407a60:	ldp	x27, x28, [sp, #80]
  407a64:	mov	x19, #0xffffffffffffffff    	// #-1
  407a68:	mov	x0, x19
  407a6c:	ldp	x19, x20, [sp, #16]
  407a70:	ldp	x21, x22, [sp, #32]
  407a74:	ldp	x23, x24, [sp, #48]
  407a78:	ldp	x25, x26, [sp, #64]
  407a7c:	ldp	x29, x30, [sp], #192
  407a80:	ret
  407a84:	ldr	x0, [sp, #104]
  407a88:	ldrb	w0, [x0]
  407a8c:	cbz	w0, 407b98 <wcrtomb@plt+0x5278>
  407a90:	cbz	x26, 407a1c <wcrtomb@plt+0x50fc>
  407a94:	sub	x2, x26, #0x1
  407a98:	add	x3, sp, #0xa8
  407a9c:	mov	x1, x19
  407aa0:	mov	x0, x22
  407aa4:	mov	w4, #0x1                   	// #1
  407aa8:	bl	409388 <wcrtomb@plt+0x6a68>
  407aac:	cbnz	x0, 407a1c <wcrtomb@plt+0x50fc>
  407ab0:	ldr	x26, [sp, #184]
  407ab4:	add	x28, x19, x26
  407ab8:	mov	x27, x26
  407abc:	mov	x1, x20
  407ac0:	mov	x0, x28
  407ac4:	bl	4097f0 <wcrtomb@plt+0x6ed0>
  407ac8:	cbz	x0, 407b18 <wcrtomb@plt+0x51f8>
  407acc:	cbnz	x21, 407a90 <wcrtomb@plt+0x5170>
  407ad0:	b	407a84 <wcrtomb@plt+0x5164>
  407ad4:	sub	x0, x19, x0
  407ad8:	mov	x1, x20
  407adc:	bl	4097f0 <wcrtomb@plt+0x6ed0>
  407ae0:	cmp	x0, #0x0
  407ae4:	cset	w0, eq  // eq = none
  407ae8:	b	407a18 <wcrtomb@plt+0x50f8>
  407aec:	mov	x3, x20
  407af0:	mov	x2, x19
  407af4:	add	x1, sp, #0xa0
  407af8:	add	x0, sp, #0x98
  407afc:	bl	409620 <wcrtomb@plt+0x6d00>
  407b00:	cbz	x0, 4079b0 <wcrtomb@plt+0x5090>
  407b04:	ldr	x19, [sp, #152]
  407b08:	b	407a34 <wcrtomb@plt+0x5114>
  407b0c:	mov	w24, #0x0                   	// #0
  407b10:	str	wzr, [sp, #112]
  407b14:	b	407930 <wcrtomb@plt+0x5010>
  407b18:	ldr	x0, [sp, #120]
  407b1c:	sub	x19, x19, x0
  407b20:	cbz	x21, 407b58 <wcrtomb@plt+0x5238>
  407b24:	ldr	x0, [sp, #136]
  407b28:	ldp	x21, x22, [sp, #32]
  407b2c:	str	x27, [x0]
  407b30:	mov	x0, x19
  407b34:	ldp	x19, x20, [sp, #16]
  407b38:	ldp	x23, x24, [sp, #48]
  407b3c:	ldp	x25, x26, [sp, #64]
  407b40:	ldp	x27, x28, [sp, #80]
  407b44:	ldp	x29, x30, [sp], #192
  407b48:	ret
  407b4c:	ldr	x0, [sp, #120]
  407b50:	add	x28, x19, x26
  407b54:	sub	x19, x19, x0
  407b58:	ldr	w1, [sp, #116]
  407b5c:	sub	x2, x20, x28
  407b60:	mov	x0, x28
  407b64:	bl	402770 <memchr@plt>
  407b68:	cmp	x0, #0x0
  407b6c:	csinc	x20, x20, x0, eq  // eq = none
  407b70:	ldr	w1, [sp, #116]
  407b74:	mov	x2, x19
  407b78:	ldr	x19, [sp, #120]
  407b7c:	mov	x0, x19
  407b80:	bl	4026f0 <memrchr@plt>
  407b84:	cbz	x0, 407be4 <wcrtomb@plt+0x52c4>
  407b88:	add	x0, x0, #0x1
  407b8c:	sub	x19, x0, x19
  407b90:	sub	x27, x20, x0
  407b94:	b	407b24 <wcrtomb@plt+0x5204>
  407b98:	ldr	x26, [x25, #32]
  407b9c:	cbz	x26, 407c54 <wcrtomb@plt+0x5334>
  407ba0:	ldr	w1, [sp, #116]
  407ba4:	sub	x2, x20, x28
  407ba8:	mov	x0, x28
  407bac:	bl	402770 <memchr@plt>
  407bb0:	mov	x5, x0
  407bb4:	ldr	x3, [sp, #136]
  407bb8:	cmp	x5, #0x0
  407bbc:	mov	x0, x26
  407bc0:	csinc	x26, x20, x5, eq  // eq = none
  407bc4:	mov	x1, x19
  407bc8:	sub	x2, x26, x19
  407bcc:	mov	x4, #0x0                   	// #0
  407bd0:	bl	404758 <wcrtomb@plt+0x1e38>
  407bd4:	cmn	x0, #0x1
  407bd8:	b.ne	407ca0 <wcrtomb@plt+0x5380>  // b.any
  407bdc:	sub	x19, x26, #0x1
  407be0:	b	407a1c <wcrtomb@plt+0x50fc>
  407be4:	ldr	x0, [sp, #120]
  407be8:	mov	x19, #0x0                   	// #0
  407bec:	sub	x27, x20, x0
  407bf0:	b	407b24 <wcrtomb@plt+0x5204>
  407bf4:	ldr	x0, [x25, #32]
  407bf8:	cbz	x0, 407c7c <wcrtomb@plt+0x535c>
  407bfc:	ldp	x1, x2, [sp, #120]
  407c00:	mov	x4, x21
  407c04:	ldr	x3, [sp, #136]
  407c08:	bl	404758 <wcrtomb@plt+0x1e38>
  407c0c:	mov	x19, x0
  407c10:	mov	x0, x19
  407c14:	ldp	x19, x20, [sp, #16]
  407c18:	ldp	x21, x22, [sp, #32]
  407c1c:	ldp	x23, x24, [sp, #48]
  407c20:	ldp	x25, x26, [sp, #64]
  407c24:	ldp	x27, x28, [sp, #80]
  407c28:	ldp	x29, x30, [sp], #192
  407c2c:	ret
  407c30:	ldr	x0, [sp, #120]
  407c34:	mov	x27, x26
  407c38:	sub	x19, x19, x0
  407c3c:	b	407b24 <wcrtomb@plt+0x5204>
  407c40:	ldr	x0, [sp, #120]
  407c44:	cmp	x21, #0x0
  407c48:	cinc	x27, x26, eq  // eq = none
  407c4c:	sub	x19, x19, x0
  407c50:	b	407b24 <wcrtomb@plt+0x5204>
  407c54:	add	x1, x25, #0x18
  407c58:	add	x0, x25, #0x10
  407c5c:	bl	407490 <wcrtomb@plt+0x4b70>
  407c60:	ldp	x0, x1, [x25, #16]
  407c64:	mov	x2, #0xa46                 	// #2630
  407c68:	movk	x2, #0x1, lsl #16
  407c6c:	bl	404170 <wcrtomb@plt+0x1850>
  407c70:	mov	x26, x0
  407c74:	str	x0, [x25, #32]
  407c78:	b	407ba0 <wcrtomb@plt+0x5280>
  407c7c:	add	x1, x25, #0x18
  407c80:	add	x0, x25, #0x10
  407c84:	bl	407490 <wcrtomb@plt+0x4b70>
  407c88:	ldp	x0, x1, [x25, #16]
  407c8c:	mov	x2, #0xa46                 	// #2630
  407c90:	movk	x2, #0x1, lsl #16
  407c94:	bl	404170 <wcrtomb@plt+0x1850>
  407c98:	str	x0, [x25, #32]
  407c9c:	b	407bfc <wcrtomb@plt+0x52dc>
  407ca0:	ldr	x0, [sp, #120]
  407ca4:	mov	x20, x26
  407ca8:	sub	x19, x19, x0
  407cac:	b	407b70 <wcrtomb@plt+0x5250>
  407cb0:	cbz	x0, 407d6c <wcrtomb@plt+0x544c>
  407cb4:	stp	x29, x30, [sp, #-48]!
  407cb8:	mov	x29, sp
  407cbc:	stp	x19, x20, [sp, #16]
  407cc0:	mov	x20, x0
  407cc4:	mov	x19, x1
  407cc8:	ldr	x0, [x0]
  407ccc:	stp	x21, x22, [sp, #32]
  407cd0:	and	w22, w3, #0xff
  407cd4:	mov	x21, x2
  407cd8:	mov	w3, w22
  407cdc:	bl	407cb0 <wcrtomb@plt+0x5390>
  407ce0:	ldr	x0, [x20, #8]
  407ce4:	mov	w3, w22
  407ce8:	mov	x2, x21
  407cec:	mov	x1, x19
  407cf0:	bl	407cb0 <wcrtomb@plt+0x5390>
  407cf4:	cbz	x19, 407d54 <wcrtomb@plt+0x5434>
  407cf8:	ldr	x3, [x19, #8]
  407cfc:	cbz	x3, 407d4c <wcrtomb@plt+0x542c>
  407d00:	ldrb	w5, [x20, #24]
  407d04:	b	407d14 <wcrtomb@plt+0x53f4>
  407d08:	ldp	x4, x3, [x3]
  407d0c:	csel	x3, x3, x4, cs  // cs = hs, nlast
  407d10:	cbz	x3, 407d4c <wcrtomb@plt+0x542c>
  407d14:	ldrb	w4, [x3, #24]
  407d18:	cmp	w5, w4
  407d1c:	b.ne	407d08 <wcrtomb@plt+0x53e8>  // b.any
  407d20:	ldr	x0, [x20, #16]
  407d24:	ldr	x1, [x3, #16]
  407d28:	str	x1, [x0, #32]
  407d2c:	cbnz	w22, 407d5c <wcrtomb@plt+0x543c>
  407d30:	ldr	x1, [x1]
  407d34:	cbz	x1, 407d5c <wcrtomb@plt+0x543c>
  407d38:	ldr	x1, [x0]
  407d3c:	cbnz	x1, 407d5c <wcrtomb@plt+0x543c>
  407d40:	mov	x1, #0xffffffffffffffff    	// #-1
  407d44:	str	x1, [x0]
  407d48:	b	407d5c <wcrtomb@plt+0x543c>
  407d4c:	ldr	x19, [x19, #32]
  407d50:	cbnz	x19, 407cf8 <wcrtomb@plt+0x53d8>
  407d54:	ldr	x0, [x20, #16]
  407d58:	str	x21, [x0, #32]
  407d5c:	ldp	x19, x20, [sp, #16]
  407d60:	ldp	x21, x22, [sp, #32]
  407d64:	ldp	x29, x30, [sp], #48
  407d68:	ret
  407d6c:	ret
  407d70:	cbz	x0, 407dcc <wcrtomb@plt+0x54ac>
  407d74:	stp	x29, x30, [sp, #-48]!
  407d78:	mov	x29, sp
  407d7c:	stp	x19, x20, [sp, #16]
  407d80:	mov	x19, x0
  407d84:	mov	x20, x2
  407d88:	ldr	x0, [x0]
  407d8c:	str	x21, [sp, #32]
  407d90:	mov	x21, x1
  407d94:	bl	407d70 <wcrtomb@plt+0x5450>
  407d98:	ldr	x0, [x19, #8]
  407d9c:	mov	x1, x21
  407da0:	mov	x2, x20
  407da4:	bl	407d70 <wcrtomb@plt+0x5450>
  407da8:	ldrb	w0, [x19, #24]
  407dac:	ldrb	w1, [x20, x0]
  407db0:	cmp	x1, x21
  407db4:	b.le	407dbc <wcrtomb@plt+0x549c>
  407db8:	strb	w21, [x20, x0]
  407dbc:	ldp	x19, x20, [sp, #16]
  407dc0:	ldr	x21, [sp, #32]
  407dc4:	ldp	x29, x30, [sp], #48
  407dc8:	ret
  407dcc:	ret
  407dd0:	cbz	x1, 407e4c <wcrtomb@plt+0x552c>
  407dd4:	stp	x29, x30, [sp, #-32]!
  407dd8:	mov	x29, sp
  407ddc:	stp	x19, x20, [sp, #16]
  407de0:	mov	x20, x1
  407de4:	mov	x19, x0
  407de8:	ldr	x1, [x1]
  407dec:	bl	407dd0 <wcrtomb@plt+0x54b0>
  407df0:	ands	w0, w0, #0xff
  407df4:	b.eq	407e30 <wcrtomb@plt+0x5510>  // b.none
  407df8:	ldr	x1, [x20, #8]
  407dfc:	mov	x0, x19
  407e00:	bl	407dd0 <wcrtomb@plt+0x54b0>
  407e04:	ands	w0, w0, #0xff
  407e08:	b.eq	407e30 <wcrtomb@plt+0x5510>  // b.none
  407e0c:	cbz	x19, 407e3c <wcrtomb@plt+0x551c>
  407e10:	ldrb	w2, [x20, #24]
  407e14:	b	407e24 <wcrtomb@plt+0x5504>
  407e18:	ldp	x1, x19, [x19]
  407e1c:	csel	x19, x19, x1, cs  // cs = hs, nlast
  407e20:	cbz	x19, 407e3c <wcrtomb@plt+0x551c>
  407e24:	ldrb	w1, [x19, #24]
  407e28:	cmp	w2, w1
  407e2c:	b.ne	407e18 <wcrtomb@plt+0x54f8>  // b.any
  407e30:	ldp	x19, x20, [sp, #16]
  407e34:	ldp	x29, x30, [sp], #32
  407e38:	ret
  407e3c:	mov	w0, #0x0                   	// #0
  407e40:	ldp	x19, x20, [sp, #16]
  407e44:	ldp	x29, x30, [sp], #32
  407e48:	ret
  407e4c:	mov	w0, #0x1                   	// #1
  407e50:	ret
  407e54:	nop
  407e58:	cbz	x0, 407e9c <wcrtomb@plt+0x557c>
  407e5c:	stp	x29, x30, [sp, #-32]!
  407e60:	mov	x29, sp
  407e64:	stp	x19, x20, [sp, #16]
  407e68:	mov	x19, x0
  407e6c:	mov	x20, x1
  407e70:	ldr	x0, [x0]
  407e74:	bl	407e58 <wcrtomb@plt+0x5538>
  407e78:	ldr	x0, [x19, #8]
  407e7c:	mov	x1, x20
  407e80:	bl	407e58 <wcrtomb@plt+0x5538>
  407e84:	ldrb	w0, [x19, #24]
  407e88:	ldr	x1, [x19, #16]
  407e8c:	str	x1, [x20, x0, lsl #3]
  407e90:	ldp	x19, x20, [sp, #16]
  407e94:	ldp	x29, x30, [sp], #32
  407e98:	ret
  407e9c:	ret
  407ea0:	ldr	w5, [x2, #2452]
  407ea4:	mov	x4, x0
  407ea8:	add	x3, x0, x1
  407eac:	tbz	w5, #31, 407ed0 <wcrtomb@plt+0x55b0>
  407eb0:	b	407ee0 <wcrtomb@plt+0x55c0>
  407eb4:	ldrb	w0, [x4]
  407eb8:	add	x0, x2, x0, lsl #3
  407ebc:	ldr	x0, [x0, #376]
  407ec0:	cbnz	x0, 407f08 <wcrtomb@plt+0x55e8>
  407ec4:	add	x4, x4, #0x1
  407ec8:	tst	x4, #0xf
  407ecc:	b.eq	407f10 <wcrtomb@plt+0x55f0>  // b.none
  407ed0:	cmp	x4, x3
  407ed4:	b.cc	407eb4 <wcrtomb@plt+0x5594>  // b.lo, b.ul, b.last
  407ed8:	mov	x0, #0x0                   	// #0
  407edc:	ret
  407ee0:	cmp	x0, x3
  407ee4:	b.cc	407ef8 <wcrtomb@plt+0x55d8>  // b.lo, b.ul, b.last
  407ee8:	b	407ed8 <wcrtomb@plt+0x55b8>
  407eec:	add	x4, x4, #0x1
  407ef0:	cmp	x3, x4
  407ef4:	b.eq	407edc <wcrtomb@plt+0x55bc>  // b.none
  407ef8:	ldrb	w0, [x4]
  407efc:	add	x0, x2, x0, lsl #3
  407f00:	ldr	x0, [x0, #376]
  407f04:	cbz	x0, 407eec <wcrtomb@plt+0x55cc>
  407f08:	mov	x0, x4
  407f0c:	ret
  407f10:	ldr	w1, [x2, #2448]
  407f14:	sub	x3, x3, x4
  407f18:	mov	x0, x4
  407f1c:	mov	w2, w5
  407f20:	b	411e98 <wcrtomb@plt+0xf578>
  407f24:	nop
  407f28:	stp	x29, x30, [sp, #-32]!
  407f2c:	mov	x29, sp
  407f30:	stp	x19, x20, [sp, #16]
  407f34:	mov	x19, x0
  407f38:	mov	x20, x1
  407f3c:	ldr	x0, [x0]
  407f40:	cbz	x0, 407f48 <wcrtomb@plt+0x5628>
  407f44:	bl	407f28 <wcrtomb@plt+0x5608>
  407f48:	ldr	x0, [x19, #8]
  407f4c:	cbz	x0, 407f58 <wcrtomb@plt+0x5638>
  407f50:	mov	x1, x20
  407f54:	bl	407f28 <wcrtomb@plt+0x5608>
  407f58:	ldr	x1, [x20]
  407f5c:	ldr	x0, [x19, #16]
  407f60:	str	x0, [x1, #24]
  407f64:	str	x0, [x20]
  407f68:	ldp	x19, x20, [sp, #16]
  407f6c:	ldp	x29, x30, [sp], #32
  407f70:	ret
  407f74:	nop
  407f78:	stp	x29, x30, [sp, #-112]!
  407f7c:	mov	x29, sp
  407f80:	stp	x19, x20, [sp, #16]
  407f84:	ldr	x20, [x0, #104]
  407f88:	cbz	x20, 40812c <wcrtomb@plt+0x580c>
  407f8c:	stp	x23, x24, [sp, #48]
  407f90:	cmp	x2, x20
  407f94:	mov	x23, x2
  407f98:	b.lt	408124 <wcrtomb@plt+0x5804>  // b.tstop
  407f9c:	stp	x27, x28, [sp, #80]
  407fa0:	mov	x24, x0
  407fa4:	mov	x27, x1
  407fa8:	cmp	x20, #0x1
  407fac:	b.eq	4083b4 <wcrtomb@plt+0x5a94>  // b.none
  407fb0:	mov	x0, #0xc                   	// #12
  407fb4:	add	x3, x1, x20
  407fb8:	stp	x21, x22, [sp, #32]
  407fbc:	add	x28, x27, x23
  407fc0:	mul	x2, x20, x0
  407fc4:	smulh	x1, x20, x0
  407fc8:	stp	x25, x26, [sp, #64]
  407fcc:	add	x22, x24, #0x78
  407fd0:	ldr	x21, [x24, #2424]
  407fd4:	cmp	x1, x2, asr #63
  407fd8:	cset	w1, eq  // eq = none
  407fdc:	cmp	x2, x23
  407fe0:	cset	w2, lt  // lt = tstop
  407fe4:	ldurb	w0, [x3, #-1]
  407fe8:	ldrb	w25, [x24, #2448]
  407fec:	tst	w2, w1
  407ff0:	ldrb	w26, [x24, #2456]
  407ff4:	add	x21, x21, x20
  407ff8:	ldr	x19, [x24, #2440]
  407ffc:	b.ne	408188 <wcrtomb@plt+0x5868>  // b.any
  408000:	and	x0, x0, #0xff
  408004:	ldrb	w6, [x22, x0]
  408008:	sub	x0, x28, x3
  40800c:	sxtw	x1, w6
  408010:	cmp	x0, w6, sxtw
  408014:	b.lt	40813c <wcrtomb@plt+0x581c>  // b.tstop
  408018:	add	x3, x3, x1
  40801c:	ldurb	w0, [x3, #-1]
  408020:	ldrb	w6, [x22, x0]
  408024:	cbnz	w6, 408008 <wcrtomb@plt+0x56e8>
  408028:	mov	x4, x20
  40802c:	mov	x7, #0x0                   	// #0
  408030:	b	40806c <wcrtomb@plt+0x574c>
  408034:	mov	x0, #0x0                   	// #0
  408038:	mov	x2, #0x2                   	// #2
  40803c:	ldr	x1, [x24, #2432]
  408040:	ldr	x4, [x1, x0]
  408044:	add	x3, x3, x4
  408048:	cmp	x28, x3
  40804c:	b.cc	408008 <wcrtomb@plt+0x56e8>  // b.lo, b.ul, b.last
  408050:	ldurb	w5, [x3, #-1]
  408054:	cbz	x19, 408060 <wcrtomb@plt+0x5740>
  408058:	and	x5, x5, #0xff
  40805c:	ldrb	w5, [x19, x5]
  408060:	cmp	w25, w5
  408064:	b.ne	408008 <wcrtomb@plt+0x56e8>  // b.any
  408068:	sub	x7, x2, #0x1
  40806c:	ldurb	w2, [x3, #-2]
  408070:	cbz	x19, 40807c <wcrtomb@plt+0x575c>
  408074:	and	x2, x2, #0xff
  408078:	ldrb	w2, [x19, x2]
  40807c:	cmp	w26, w2
  408080:	b.ne	408034 <wcrtomb@plt+0x5714>  // b.any
  408084:	mov	x5, #0xfffffffffffffffd    	// #-3
  408088:	mov	x2, #0x2                   	// #2
  40808c:	b	4080b8 <wcrtomb@plt+0x5798>
  408090:	ldrb	w0, [x3, x5]
  408094:	ldrb	w1, [x21, x5]
  408098:	cbz	x19, 4080ac <wcrtomb@plt+0x578c>
  40809c:	and	x0, x0, #0xff
  4080a0:	and	x1, x1, #0xff
  4080a4:	ldrb	w0, [x19, x0]
  4080a8:	ldrb	w1, [x19, x1]
  4080ac:	sub	x5, x5, #0x1
  4080b0:	cmp	w1, w0
  4080b4:	b.ne	408118 <wcrtomb@plt+0x57f8>  // b.any
  4080b8:	add	x2, x2, #0x1
  4080bc:	cmp	x2, x4
  4080c0:	b.le	408090 <wcrtomb@plt+0x5770>
  4080c4:	add	x4, x4, x7
  4080c8:	add	x2, x4, #0x1
  4080cc:	cmp	x20, x2
  4080d0:	b.lt	408160 <wcrtomb@plt+0x5840>  // b.tstop
  4080d4:	mvn	x4, x4
  4080d8:	b	4080e8 <wcrtomb@plt+0x57c8>
  4080dc:	add	x2, x2, #0x1
  4080e0:	cmp	x20, x2
  4080e4:	b.lt	408160 <wcrtomb@plt+0x5840>  // b.tstop
  4080e8:	ldrb	w5, [x3, x4]
  4080ec:	ldrb	w0, [x21, x4]
  4080f0:	cbz	x19, 408104 <wcrtomb@plt+0x57e4>
  4080f4:	and	x5, x5, #0xff
  4080f8:	and	x0, x0, #0xff
  4080fc:	ldrb	w5, [x19, x5]
  408100:	ldrb	w0, [x19, x0]
  408104:	sub	x4, x4, #0x1
  408108:	cmp	w0, w5
  40810c:	b.eq	4080dc <wcrtomb@plt+0x57bc>  // b.none
  408110:	cmp	x2, x20
  408114:	b.gt	408160 <wcrtomb@plt+0x5840>
  408118:	lsl	x0, x2, #3
  40811c:	sub	x0, x0, #0x10
  408120:	b	40803c <wcrtomb@plt+0x571c>
  408124:	ldp	x23, x24, [sp, #48]
  408128:	mov	x20, #0xffffffffffffffff    	// #-1
  40812c:	mov	x0, x20
  408130:	ldp	x19, x20, [sp, #16]
  408134:	ldp	x29, x30, [sp], #112
  408138:	ret
  40813c:	mov	x20, #0xffffffffffffffff    	// #-1
  408140:	mov	x0, x20
  408144:	ldp	x19, x20, [sp, #16]
  408148:	ldp	x21, x22, [sp, #32]
  40814c:	ldp	x23, x24, [sp, #48]
  408150:	ldp	x25, x26, [sp, #64]
  408154:	ldp	x27, x28, [sp, #80]
  408158:	ldp	x29, x30, [sp], #112
  40815c:	ret
  408160:	sub	x20, x3, x20
  408164:	sub	x20, x20, x27
  408168:	mov	x0, x20
  40816c:	ldp	x19, x20, [sp, #16]
  408170:	ldp	x21, x22, [sp, #32]
  408174:	ldp	x23, x24, [sp, #48]
  408178:	ldp	x25, x26, [sp, #64]
  40817c:	ldp	x27, x28, [sp, #80]
  408180:	ldp	x29, x30, [sp], #112
  408184:	ret
  408188:	add	x6, x20, x20, lsl #1
  40818c:	str	x28, [sp, #104]
  408190:	mov	x1, x3
  408194:	lsl	x6, x6, #2
  408198:	sub	x6, x6, x20
  40819c:	sub	x6, x23, x6
  4081a0:	add	x6, x27, x6
  4081a4:	cmp	x3, x6
  4081a8:	b.hi	408000 <wcrtomb@plt+0x56e0>  // b.pmore
  4081ac:	nop
  4081b0:	and	x0, x0, #0xff
  4081b4:	ldrb	w3, [x22, x0]
  4081b8:	add	x3, x1, x3
  4081bc:	ldurb	w0, [x3, #-1]
  4081c0:	ldrb	w0, [x22, x0]
  4081c4:	add	x3, x3, w0, uxtb
  4081c8:	cbz	w0, 408270 <wcrtomb@plt+0x5950>
  4081cc:	ldurb	w0, [x3, #-1]
  4081d0:	ldrb	w0, [x22, x0]
  4081d4:	add	x3, x3, x0
  4081d8:	ldurb	w0, [x3, #-1]
  4081dc:	ldrb	w0, [x22, x0]
  4081e0:	add	x3, x3, x0
  4081e4:	ldurb	w0, [x3, #-1]
  4081e8:	ldrb	w0, [x22, x0]
  4081ec:	add	x3, x3, w0, uxtb
  4081f0:	cbz	w0, 408270 <wcrtomb@plt+0x5950>
  4081f4:	ldurb	w0, [x3, #-1]
  4081f8:	ldrb	w0, [x22, x0]
  4081fc:	add	x3, x3, x0
  408200:	ldurb	w0, [x3, #-1]
  408204:	ldrb	w0, [x22, x0]
  408208:	add	x3, x3, x0
  40820c:	ldurb	w0, [x3, #-1]
  408210:	ldrb	w0, [x22, x0]
  408214:	add	x3, x3, w0, uxtb
  408218:	cbz	w0, 408270 <wcrtomb@plt+0x5950>
  40821c:	ldurb	w0, [x3, #-1]
  408220:	ldrb	w0, [x22, x0]
  408224:	add	x3, x3, x0
  408228:	ldurb	w0, [x3, #-1]
  40822c:	ldrb	w0, [x22, x0]
  408230:	add	x3, x3, x0
  408234:	sub	x1, x3, x1
  408238:	cmp	x1, #0x7f
  40823c:	b.gt	4083e8 <wcrtomb@plt+0x5ac8>
  408240:	ldr	x28, [sp, #104]
  408244:	sub	x0, x3, #0x1
  408248:	mov	x2, x24
  40824c:	str	x6, [sp, #96]
  408250:	sub	x1, x28, x0
  408254:	bl	407ea0 <wcrtomb@plt+0x5580>
  408258:	cbz	x0, 40813c <wcrtomb@plt+0x581c>
  40825c:	ldr	x6, [sp, #96]
  408260:	add	x3, x0, #0x1
  408264:	cmp	x3, x6
  408268:	b.cs	4083f0 <wcrtomb@plt+0x5ad0>  // b.hs, b.nlast
  40826c:	nop
  408270:	mov	x5, x20
  408274:	mov	x8, #0x0                   	// #0
  408278:	b	4082b8 <wcrtomb@plt+0x5998>
  40827c:	ldr	x1, [x24, #2432]
  408280:	mov	x0, #0x0                   	// #0
  408284:	mov	x4, #0x2                   	// #2
  408288:	ldr	x5, [x1, x0]
  40828c:	add	x3, x3, x5
  408290:	cmp	x6, x3
  408294:	ldurb	w0, [x3, #-1]
  408298:	b.cc	408388 <wcrtomb@plt+0x5a68>  // b.lo, b.ul, b.last
  40829c:	mov	w1, w0
  4082a0:	cbz	x19, 4082ac <wcrtomb@plt+0x598c>
  4082a4:	and	x1, x0, #0xff
  4082a8:	ldrb	w1, [x19, x1]
  4082ac:	cmp	w25, w1
  4082b0:	b.ne	408390 <wcrtomb@plt+0x5a70>  // b.any
  4082b4:	sub	x8, x4, #0x1
  4082b8:	ldurb	w0, [x3, #-2]
  4082bc:	cbz	x19, 4082c8 <wcrtomb@plt+0x59a8>
  4082c0:	and	x0, x0, #0xff
  4082c4:	ldrb	w0, [x19, x0]
  4082c8:	cmp	w26, w0
  4082cc:	b.ne	40827c <wcrtomb@plt+0x595c>  // b.any
  4082d0:	mov	x2, #0xfffffffffffffffd    	// #-3
  4082d4:	mov	x4, #0x2                   	// #2
  4082d8:	b	408304 <wcrtomb@plt+0x59e4>
  4082dc:	ldrb	w0, [x3, x2]
  4082e0:	ldrb	w1, [x21, x2]
  4082e4:	cbz	x19, 4082f8 <wcrtomb@plt+0x59d8>
  4082e8:	and	x0, x0, #0xff
  4082ec:	and	x1, x1, #0xff
  4082f0:	ldrb	w0, [x19, x0]
  4082f4:	ldrb	w1, [x19, x1]
  4082f8:	sub	x2, x2, #0x1
  4082fc:	cmp	w1, w0
  408300:	b.ne	408364 <wcrtomb@plt+0x5a44>  // b.any
  408304:	add	x4, x4, #0x1
  408308:	cmp	x4, x5
  40830c:	b.le	4082dc <wcrtomb@plt+0x59bc>
  408310:	add	x5, x5, x8
  408314:	add	x4, x5, #0x1
  408318:	cmp	x20, x4
  40831c:	b.lt	408160 <wcrtomb@plt+0x5840>  // b.tstop
  408320:	mvn	x5, x5
  408324:	b	408334 <wcrtomb@plt+0x5a14>
  408328:	add	x4, x4, #0x1
  40832c:	cmp	x20, x4
  408330:	b.lt	408160 <wcrtomb@plt+0x5840>  // b.tstop
  408334:	ldrb	w0, [x3, x5]
  408338:	ldrb	w1, [x21, x5]
  40833c:	cbz	x19, 408350 <wcrtomb@plt+0x5a30>
  408340:	and	x0, x0, #0xff
  408344:	and	x1, x1, #0xff
  408348:	ldrb	w0, [x19, x0]
  40834c:	ldrb	w1, [x19, x1]
  408350:	sub	x5, x5, #0x1
  408354:	cmp	w1, w0
  408358:	b.eq	408328 <wcrtomb@plt+0x5a08>  // b.none
  40835c:	cmp	x20, x4
  408360:	b.lt	408160 <wcrtomb@plt+0x5840>  // b.tstop
  408364:	lsl	x0, x4, #3
  408368:	ldr	x1, [x24, #2432]
  40836c:	sub	x0, x0, #0x10
  408370:	ldr	x5, [x1, x0]
  408374:	add	x3, x3, x5
  408378:	cmp	x6, x3
  40837c:	ldurb	w0, [x3, #-1]
  408380:	b.cs	40829c <wcrtomb@plt+0x597c>  // b.hs, b.nlast
  408384:	nop
  408388:	add	x28, x27, x23
  40838c:	b	408000 <wcrtomb@plt+0x56e0>
  408390:	and	x0, x0, #0xff
  408394:	ldrb	w1, [x22, x0]
  408398:	add	x1, x3, x1
  40839c:	ldurb	w0, [x1, #-1]
  4083a0:	cmp	x1, x6
  4083a4:	b.ls	4081b0 <wcrtomb@plt+0x5890>  // b.plast
  4083a8:	add	x28, x27, x23
  4083ac:	mov	x3, x1
  4083b0:	b	408000 <wcrtomb@plt+0x56e0>
  4083b4:	mov	x2, x0
  4083b8:	mov	x1, x23
  4083bc:	mov	x0, x27
  4083c0:	bl	407ea0 <wcrtomb@plt+0x5580>
  4083c4:	sub	x20, x0, x27
  4083c8:	cmp	x0, #0x0
  4083cc:	csinv	x20, x20, xzr, ne  // ne = any
  4083d0:	mov	x0, x20
  4083d4:	ldp	x19, x20, [sp, #16]
  4083d8:	ldp	x23, x24, [sp, #48]
  4083dc:	ldp	x27, x28, [sp, #80]
  4083e0:	ldp	x29, x30, [sp], #112
  4083e4:	ret
  4083e8:	mov	x1, x3
  4083ec:	b	40839c <wcrtomb@plt+0x5a7c>
  4083f0:	ldrb	w0, [x0]
  4083f4:	b	408000 <wcrtomb@plt+0x56e0>
  4083f8:	stp	x29, x30, [sp, #-32]!
  4083fc:	mov	x29, sp
  408400:	stp	x19, x20, [sp, #16]
  408404:	mov	x19, x3
  408408:	mov	x20, x0
  40840c:	bl	407f78 <wcrtomb@plt+0x5658>
  408410:	tbnz	x0, #63, 408420 <wcrtomb@plt+0x5b00>
  408414:	ldr	x1, [x20, #104]
  408418:	stp	xzr, x0, [x19]
  40841c:	str	x1, [x19, #16]
  408420:	ldp	x19, x20, [sp, #16]
  408424:	ldp	x29, x30, [sp], #32
  408428:	ret
  40842c:	nop
  408430:	stp	x29, x30, [sp, #-80]!
  408434:	mov	x29, sp
  408438:	stp	x23, x24, [sp, #48]
  40843c:	and	w24, w4, #0xff
  408440:	ldr	x23, [x0, #2440]
  408444:	stp	x21, x22, [sp, #32]
  408448:	mov	x21, x0
  40844c:	ldr	x0, [x0, #104]
  408450:	stp	x19, x20, [sp, #16]
  408454:	mov	x22, x3
  408458:	mov	x20, x1
  40845c:	cmp	x2, x0
  408460:	cbz	x23, 408610 <wcrtomb@plt+0x5cf0>
  408464:	b.lt	408784 <wcrtomb@plt+0x5e64>  // b.tstop
  408468:	ldr	x5, [x21, #96]
  40846c:	add	x19, x1, x2
  408470:	ldr	x1, [x5]
  408474:	cbz	x1, 408520 <wcrtomb@plt+0x5c00>
  408478:	mov	x7, x20
  40847c:	mov	x6, x5
  408480:	cmn	x1, #0x1
  408484:	b.ne	408498 <wcrtomb@plt+0x5b78>  // b.any
  408488:	ldr	x6, [x6, #32]
  40848c:	ldr	x0, [x6]
  408490:	cmn	x0, #0x1
  408494:	b.eq	408488 <wcrtomb@plt+0x5b68>  // b.none
  408498:	ldr	x2, [x6, #40]
  40849c:	sub	x0, x7, x2
  4084a0:	cbz	w24, 4084f8 <wcrtomb@plt+0x5bd8>
  4084a4:	cmp	x19, x7
  4084a8:	b.ls	4084f8 <wcrtomb@plt+0x5bd8>  // b.plast
  4084ac:	nop
  4084b0:	ldrb	w1, [x7]
  4084b4:	ldrb	w1, [x23, x1]
  4084b8:	ldr	x2, [x5, #8]
  4084bc:	cbnz	x2, 4084d0 <wcrtomb@plt+0x5bb0>
  4084c0:	b	4085dc <wcrtomb@plt+0x5cbc>
  4084c4:	ldp	x3, x2, [x2]
  4084c8:	csel	x2, x2, x3, cs  // cs = hs, nlast
  4084cc:	cbz	x2, 4085dc <wcrtomb@plt+0x5cbc>
  4084d0:	ldrb	w3, [x2, #24]
  4084d4:	cmp	w1, w3
  4084d8:	b.ne	4084c4 <wcrtomb@plt+0x5ba4>  // b.any
  4084dc:	ldr	x5, [x2, #16]
  4084e0:	add	x7, x7, #0x1
  4084e4:	ldr	x1, [x5]
  4084e8:	cbnz	x1, 4086d0 <wcrtomb@plt+0x5db0>
  4084ec:	cmp	x19, x7
  4084f0:	b.ne	4084b0 <wcrtomb@plt+0x5b90>  // b.any
  4084f4:	ldr	x2, [x6, #40]
  4084f8:	sub	x0, x0, x20
  4084fc:	ldr	x1, [x6]
  408500:	str	x2, [x22, #16]
  408504:	lsr	x1, x1, #1
  408508:	stp	x1, x0, [x22]
  40850c:	ldp	x19, x20, [sp, #16]
  408510:	ldp	x21, x22, [sp, #32]
  408514:	ldp	x23, x24, [sp, #48]
  408518:	ldp	x29, x30, [sp], #80
  40851c:	ret
  408520:	str	x25, [sp, #64]
  408524:	mov	x0, x20
  408528:	ldr	w25, [x21, #2448]
  40852c:	tbnz	w25, #31, 4085bc <wcrtomb@plt+0x5c9c>
  408530:	mov	x2, x21
  408534:	sub	x1, x19, x0
  408538:	bl	407ea0 <wcrtomb@plt+0x5580>
  40853c:	cbz	x0, 4085a0 <wcrtomb@plt+0x5c80>
  408540:	ldrb	w1, [x0], #1
  408544:	ldrb	w1, [x23, x1]
  408548:	add	x1, x21, x1, lsl #3
  40854c:	ldr	x5, [x1, #376]
  408550:	ldr	x1, [x5]
  408554:	cbnz	x1, 408800 <wcrtomb@plt+0x5ee0>
  408558:	cmp	x19, x0
  40855c:	b.ls	4085a0 <wcrtomb@plt+0x5c80>  // b.plast
  408560:	mov	x7, x0
  408564:	ldrb	w1, [x0], #1
  408568:	ldr	x2, [x5, #8]
  40856c:	ldrb	w3, [x23, x1]
  408570:	b	408580 <wcrtomb@plt+0x5c60>
  408574:	ldp	x1, x2, [x2]
  408578:	csel	x2, x2, x1, cs  // cs = hs, nlast
  40857c:	cbz	x2, 4085f8 <wcrtomb@plt+0x5cd8>
  408580:	ldrb	w1, [x2, #24]
  408584:	cmp	w3, w1
  408588:	b.ne	408574 <wcrtomb@plt+0x5c54>  // b.any
  40858c:	ldr	x5, [x2, #16]
  408590:	ldr	x1, [x5]
  408594:	cbnz	x1, 408800 <wcrtomb@plt+0x5ee0>
  408598:	cmp	x19, x0
  40859c:	b.ne	408560 <wcrtomb@plt+0x5c40>  // b.any
  4085a0:	mov	x0, #0xffffffffffffffff    	// #-1
  4085a4:	ldp	x19, x20, [sp, #16]
  4085a8:	ldp	x21, x22, [sp, #32]
  4085ac:	ldp	x23, x24, [sp, #48]
  4085b0:	ldr	x25, [sp, #64]
  4085b4:	ldp	x29, x30, [sp], #80
  4085b8:	ret
  4085bc:	ldrb	w1, [x0], #1
  4085c0:	cmp	x19, x0
  4085c4:	ldrb	w1, [x23, x1]
  4085c8:	add	x1, x21, x1, lsl #3
  4085cc:	ldr	x5, [x1, #376]
  4085d0:	cbnz	x5, 408550 <wcrtomb@plt+0x5c30>
  4085d4:	b.hi	4085bc <wcrtomb@plt+0x5c9c>  // b.pmore
  4085d8:	b	4085a0 <wcrtomb@plt+0x5c80>
  4085dc:	ldr	x5, [x5, #32]
  4085e0:	ldr	x2, [x6, #40]
  4085e4:	cbz	x5, 4084f8 <wcrtomb@plt+0x5bd8>
  4085e8:	ldr	x3, [x5, #40]
  4085ec:	cmp	x3, x2
  4085f0:	b.ge	4084b8 <wcrtomb@plt+0x5b98>  // b.tcont
  4085f4:	b	4084f8 <wcrtomb@plt+0x5bd8>
  4085f8:	ldr	x5, [x5, #32]
  4085fc:	cbz	x5, 4087e0 <wcrtomb@plt+0x5ec0>
  408600:	ldr	x1, [x5]
  408604:	cbnz	x1, 4087f8 <wcrtomb@plt+0x5ed8>
  408608:	ldr	x2, [x5, #8]
  40860c:	b	408580 <wcrtomb@plt+0x5c60>
  408610:	b.lt	408784 <wcrtomb@plt+0x5e64>  // b.tstop
  408614:	ldr	x5, [x21, #96]
  408618:	add	x19, x1, x2
  40861c:	ldr	x1, [x5]
  408620:	cbz	x1, 40870c <wcrtomb@plt+0x5dec>
  408624:	mov	x3, x20
  408628:	cmn	x1, #0x1
  40862c:	mov	x1, x5
  408630:	b.ne	408648 <wcrtomb@plt+0x5d28>  // b.any
  408634:	nop
  408638:	ldr	x1, [x1, #32]
  40863c:	ldr	x0, [x1]
  408640:	cmn	x0, #0x1
  408644:	b.eq	408638 <wcrtomb@plt+0x5d18>  // b.none
  408648:	ldr	x2, [x1, #40]
  40864c:	sub	x0, x3, x2
  408650:	cbz	w24, 4086a8 <wcrtomb@plt+0x5d88>
  408654:	cmp	x19, x3
  408658:	b.ls	4086a8 <wcrtomb@plt+0x5d88>  // b.plast
  40865c:	nop
  408660:	ldrb	w4, [x3]
  408664:	nop
  408668:	ldr	x2, [x5, #8]
  40866c:	cbnz	x2, 408680 <wcrtomb@plt+0x5d60>
  408670:	b	4087ac <wcrtomb@plt+0x5e8c>
  408674:	ldp	x6, x2, [x2]
  408678:	csel	x2, x2, x6, cs  // cs = hs, nlast
  40867c:	cbz	x2, 4087ac <wcrtomb@plt+0x5e8c>
  408680:	ldrb	w6, [x2, #24]
  408684:	cmp	w4, w6
  408688:	b.ne	408674 <wcrtomb@plt+0x5d54>  // b.any
  40868c:	ldr	x5, [x2, #16]
  408690:	add	x3, x3, #0x1
  408694:	ldr	x2, [x5]
  408698:	cbnz	x2, 40880c <wcrtomb@plt+0x5eec>
  40869c:	cmp	x19, x3
  4086a0:	b.ne	408660 <wcrtomb@plt+0x5d40>  // b.any
  4086a4:	ldr	x2, [x1, #40]
  4086a8:	sub	x0, x0, x20
  4086ac:	ldr	x1, [x1]
  4086b0:	str	x2, [x22, #16]
  4086b4:	ldp	x19, x20, [sp, #16]
  4086b8:	lsr	x1, x1, #1
  4086bc:	stp	x1, x0, [x22]
  4086c0:	ldp	x21, x22, [sp, #32]
  4086c4:	ldp	x23, x24, [sp, #48]
  4086c8:	ldp	x29, x30, [sp], #80
  4086cc:	ret
  4086d0:	cmn	x1, #0x1
  4086d4:	mov	x2, x5
  4086d8:	b.ne	4086f0 <wcrtomb@plt+0x5dd0>  // b.any
  4086dc:	nop
  4086e0:	ldr	x2, [x2, #32]
  4086e4:	ldr	x1, [x2]
  4086e8:	cmn	x1, #0x1
  4086ec:	b.eq	4086e0 <wcrtomb@plt+0x5dc0>  // b.none
  4086f0:	ldr	x3, [x2, #40]
  4086f4:	sub	x3, x7, x3
  4086f8:	cmp	x3, x0
  4086fc:	csel	x1, x0, x3, hi  // hi = pmore
  408700:	csel	x6, x6, x2, hi  // hi = pmore
  408704:	mov	x0, x1
  408708:	b	4084ec <wcrtomb@plt+0x5bcc>
  40870c:	ldr	w23, [x21, #2448]
  408710:	mov	x0, x20
  408714:	tbnz	w23, #31, 40878c <wcrtomb@plt+0x5e6c>
  408718:	mov	x2, x21
  40871c:	sub	x1, x19, x0
  408720:	bl	407ea0 <wcrtomb@plt+0x5580>
  408724:	cbz	x0, 408784 <wcrtomb@plt+0x5e64>
  408728:	ldrb	w1, [x0], #1
  40872c:	add	x1, x21, x1, lsl #3
  408730:	ldr	x5, [x1, #376]
  408734:	ldr	x1, [x5]
  408738:	cbnz	x1, 408860 <wcrtomb@plt+0x5f40>
  40873c:	cmp	x19, x0
  408740:	b.ls	408784 <wcrtomb@plt+0x5e64>  // b.plast
  408744:	nop
  408748:	mov	x3, x0
  40874c:	ldrb	w4, [x0], #1
  408750:	ldr	x2, [x5, #8]
  408754:	b	408764 <wcrtomb@plt+0x5e44>
  408758:	ldp	x1, x2, [x2]
  40875c:	csel	x2, x2, x1, cs  // cs = hs, nlast
  408760:	cbz	x2, 4087c8 <wcrtomb@plt+0x5ea8>
  408764:	ldrb	w1, [x2, #24]
  408768:	cmp	w4, w1
  40876c:	b.ne	408758 <wcrtomb@plt+0x5e38>  // b.any
  408770:	ldr	x5, [x2, #16]
  408774:	ldr	x1, [x5]
  408778:	cbnz	x1, 408860 <wcrtomb@plt+0x5f40>
  40877c:	cmp	x19, x0
  408780:	b.ne	408748 <wcrtomb@plt+0x5e28>  // b.any
  408784:	mov	x0, #0xffffffffffffffff    	// #-1
  408788:	b	40850c <wcrtomb@plt+0x5bec>
  40878c:	ldrb	w1, [x0], #1
  408790:	cmp	x19, x0
  408794:	add	x1, x21, x1, lsl #3
  408798:	ldr	x5, [x1, #376]
  40879c:	cbnz	x5, 408734 <wcrtomb@plt+0x5e14>
  4087a0:	b.hi	40878c <wcrtomb@plt+0x5e6c>  // b.pmore
  4087a4:	mov	x0, #0xffffffffffffffff    	// #-1
  4087a8:	b	40850c <wcrtomb@plt+0x5bec>
  4087ac:	ldr	x5, [x5, #32]
  4087b0:	ldr	x2, [x1, #40]
  4087b4:	cbz	x5, 4086a8 <wcrtomb@plt+0x5d88>
  4087b8:	ldr	x6, [x5, #40]
  4087bc:	cmp	x6, x2
  4087c0:	b.ge	408668 <wcrtomb@plt+0x5d48>  // b.tcont
  4087c4:	b	4086a8 <wcrtomb@plt+0x5d88>
  4087c8:	ldr	x5, [x5, #32]
  4087cc:	cbz	x5, 408844 <wcrtomb@plt+0x5f24>
  4087d0:	ldr	x1, [x5]
  4087d4:	cbnz	x1, 408628 <wcrtomb@plt+0x5d08>
  4087d8:	ldr	x2, [x5, #8]
  4087dc:	b	408764 <wcrtomb@plt+0x5e44>
  4087e0:	add	x3, x21, w3, sxtw #3
  4087e4:	ldr	x5, [x3, #376]
  4087e8:	cbnz	x5, 408590 <wcrtomb@plt+0x5c70>
  4087ec:	cmp	x19, x0
  4087f0:	b.hi	40852c <wcrtomb@plt+0x5c0c>  // b.pmore
  4087f4:	b	4085a0 <wcrtomb@plt+0x5c80>
  4087f8:	ldr	x25, [sp, #64]
  4087fc:	b	40847c <wcrtomb@plt+0x5b5c>
  408800:	mov	x7, x0
  408804:	ldr	x25, [sp, #64]
  408808:	b	40847c <wcrtomb@plt+0x5b5c>
  40880c:	cmn	x2, #0x1
  408810:	mov	x2, x5
  408814:	b.ne	408828 <wcrtomb@plt+0x5f08>  // b.any
  408818:	ldr	x2, [x2, #32]
  40881c:	ldr	x4, [x2]
  408820:	cmn	x4, #0x1
  408824:	b.eq	408818 <wcrtomb@plt+0x5ef8>  // b.none
  408828:	ldr	x4, [x2, #40]
  40882c:	sub	x4, x3, x4
  408830:	cmp	x4, x0
  408834:	csel	x6, x0, x4, hi  // hi = pmore
  408838:	csel	x1, x1, x2, hi  // hi = pmore
  40883c:	mov	x0, x6
  408840:	b	40869c <wcrtomb@plt+0x5d7c>
  408844:	add	x4, x21, w4, sxtw #3
  408848:	ldr	x5, [x4, #376]
  40884c:	cbnz	x5, 408774 <wcrtomb@plt+0x5e54>
  408850:	cmp	x19, x0
  408854:	b.hi	408714 <wcrtomb@plt+0x5df4>  // b.pmore
  408858:	mov	x0, #0xffffffffffffffff    	// #-1
  40885c:	b	40850c <wcrtomb@plt+0x5bec>
  408860:	mov	x3, x0
  408864:	b	408628 <wcrtomb@plt+0x5d08>
  408868:	stp	x29, x30, [sp, #-32]!
  40886c:	mov	x29, sp
  408870:	stp	x19, x20, [sp, #16]
  408874:	mov	x20, x0
  408878:	mov	x0, #0x9a8                 	// #2472
  40887c:	bl	414080 <wcrtomb@plt+0x11760>
  408880:	mov	x19, x0
  408884:	mov	x2, #0x0                   	// #0
  408888:	mov	x1, #0x0                   	// #0
  40888c:	adrp	x4, 402000 <mbrtowc@plt-0x290>
  408890:	adrp	x3, 414000 <wcrtomb@plt+0x116e0>
  408894:	add	x4, x4, #0x6b0
  408898:	add	x3, x3, #0x80
  40889c:	bl	416eb8 <_obstack_begin@@Base>
  4088a0:	str	xzr, [x19, #88]
  4088a4:	ldp	x1, x0, [x19, #24]
  4088a8:	sub	x2, x0, x1
  4088ac:	cmp	x2, #0x3f
  4088b0:	b.ls	408938 <wcrtomb@plt+0x6018>  // b.plast
  4088b4:	add	x2, x1, #0x40
  4088b8:	ldr	x1, [x19, #16]
  4088bc:	cmp	x2, x1
  4088c0:	b.eq	408958 <wcrtomb@plt+0x6038>  // b.none
  4088c4:	ldr	x3, [x19, #48]
  4088c8:	ldr	x4, [x19, #8]
  4088cc:	add	x2, x2, x3
  4088d0:	bic	x2, x2, x3
  4088d4:	str	x2, [x19, #24]
  4088d8:	sub	x3, x2, x4
  4088dc:	sub	x4, x0, x4
  4088e0:	cmp	x3, x4
  4088e4:	b.ls	4088f0 <wcrtomb@plt+0x5fd0>  // b.plast
  4088e8:	mov	x2, x0
  4088ec:	str	x0, [x19, #24]
  4088f0:	str	x2, [x19, #16]
  4088f4:	mov	x0, x19
  4088f8:	str	x1, [x19, #96]
  4088fc:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  408900:	stp	xzr, xzr, [x1]
  408904:	mov	x3, #0xffffffffffffffff    	// #-1
  408908:	adrp	x2, 408000 <wcrtomb@plt+0x56e0>
  40890c:	stp	xzr, xzr, [x1, #16]
  408910:	add	x2, x2, #0x430
  408914:	stp	xzr, xzr, [x1, #32]
  408918:	str	xzr, [x1, #48]
  40891c:	stp	x4, x3, [x19, #104]
  408920:	str	xzr, [x19, #2424]
  408924:	str	x20, [x19, #2440]
  408928:	str	x2, [x19, #2464]
  40892c:	ldp	x19, x20, [sp, #16]
  408930:	ldp	x29, x30, [sp], #32
  408934:	ret
  408938:	mov	x0, x19
  40893c:	mov	x1, #0x40                  	// #64
  408940:	bl	416ee8 <_obstack_newchunk@@Base>
  408944:	ldp	x1, x0, [x19, #24]
  408948:	add	x2, x1, #0x40
  40894c:	ldr	x1, [x19, #16]
  408950:	cmp	x2, x1
  408954:	b.ne	4088c4 <wcrtomb@plt+0x5fa4>  // b.any
  408958:	ldrb	w3, [x19, #80]
  40895c:	orr	w3, w3, #0x2
  408960:	strb	w3, [x19, #80]
  408964:	b	4088c4 <wcrtomb@plt+0x5fa4>
  408968:	stp	x29, x30, [sp, #-272]!
  40896c:	adrp	x6, 408000 <wcrtomb@plt+0x56e0>
  408970:	add	x6, x6, #0x3f8
  408974:	mov	x29, sp
  408978:	ldr	x7, [x0, #2464]
  40897c:	stp	x27, x28, [sp, #80]
  408980:	mov	x27, x0
  408984:	stp	x23, x24, [sp, #48]
  408988:	add	x0, x1, x2
  40898c:	cmp	x7, x6
  408990:	csel	x24, x0, x1, eq  // eq = none
  408994:	ldr	x8, [x27, #96]
  408998:	ldr	x28, [x27, #2440]
  40899c:	cbz	x2, 408c04 <wcrtomb@plt+0x62e4>
  4089a0:	stp	x21, x22, [sp, #32]
  4089a4:	add	x22, sp, #0xb0
  4089a8:	add	x21, sp, #0x80
  4089ac:	stp	x25, x26, [sp, #64]
  4089b0:	sub	x26, x2, #0x1
  4089b4:	mov	w25, #0x1                   	// #1
  4089b8:	stp	x19, x20, [sp, #16]
  4089bc:	cmp	x7, x6
  4089c0:	b.eq	408c70 <wcrtomb@plt+0x6350>  // b.none
  4089c4:	nop
  4089c8:	ldrb	w20, [x24], #1
  4089cc:	cbz	x28, 4089d8 <wcrtomb@plt+0x60b8>
  4089d0:	and	x20, x20, #0xff
  4089d4:	ldrb	w20, [x28, x20]
  4089d8:	mov	x23, x8
  4089dc:	str	wzr, [sp, #128]
  4089e0:	mov	x3, #0x2                   	// #2
  4089e4:	mov	x19, #0x0                   	// #0
  4089e8:	ldr	x2, [x23, #8]!
  4089ec:	str	x23, [sp, #176]
  4089f0:	cbnz	x2, 408a08 <wcrtomb@plt+0x60e8>
  4089f4:	b	408a44 <wcrtomb@plt+0x6124>
  4089f8:	ldr	x2, [x2]
  4089fc:	stur	wzr, [x4, #-4]
  408a00:	add	x3, x3, #0x1
  408a04:	cbz	x2, 408a38 <wcrtomb@plt+0x6118>
  408a08:	ldrb	w4, [x2, #24]
  408a0c:	cmp	w4, w20
  408a10:	b.eq	408c58 <wcrtomb@plt+0x6338>  // b.none
  408a14:	add	x4, x22, x3, lsl #3
  408a18:	mov	x5, x3
  408a1c:	stur	x2, [x4, #-8]
  408a20:	add	x4, x21, x3, lsl #2
  408a24:	b.hi	4089f8 <wcrtomb@plt+0x60d8>  // b.pmore
  408a28:	ldr	x2, [x2, #8]
  408a2c:	stur	w25, [x4, #-4]
  408a30:	add	x3, x3, #0x1
  408a34:	cbnz	x2, 408a08 <wcrtomb@plt+0x60e8>
  408a38:	sub	x19, x5, #0x1
  408a3c:	ldr	w2, [x21, x19, lsl #2]
  408a40:	ldr	x23, [x22, x19, lsl #3]
  408a44:	ldp	x0, x1, [x27, #24]
  408a48:	sub	x3, x1, x0
  408a4c:	cmp	x3, #0x1f
  408a50:	b.ls	408d24 <wcrtomb@plt+0x6404>  // b.plast
  408a54:	ldr	x4, [x27, #16]
  408a58:	add	x0, x0, #0x20
  408a5c:	cmp	x0, x4
  408a60:	b.eq	408d5c <wcrtomb@plt+0x643c>  // b.none
  408a64:	ldr	x9, [x27, #48]
  408a68:	ldr	x5, [x27, #8]
  408a6c:	add	x0, x0, x9
  408a70:	bic	x0, x0, x9
  408a74:	str	x0, [x27, #24]
  408a78:	sub	x3, x0, x5
  408a7c:	sub	x10, x1, x5
  408a80:	cmp	x3, x10
  408a84:	mvn	x11, x9
  408a88:	b.ls	408ca0 <wcrtomb@plt+0x6380>  // b.plast
  408a8c:	stp	x1, x1, [x27, #16]
  408a90:	stp	xzr, xzr, [x4]
  408a94:	mov	x0, x27
  408a98:	mov	x1, #0x40                  	// #64
  408a9c:	stp	x7, x4, [sp, #96]
  408aa0:	str	x8, [sp, #112]
  408aa4:	str	w2, [sp, #124]
  408aa8:	bl	416ee8 <_obstack_newchunk@@Base>
  408aac:	ldp	x0, x1, [x27, #24]
  408ab0:	adrp	x2, 408000 <wcrtomb@plt+0x56e0>
  408ab4:	ldp	x5, x3, [x27, #8]
  408ab8:	add	x6, x2, #0x3f8
  408abc:	ldr	x9, [x27, #48]
  408ac0:	add	x0, x0, #0x40
  408ac4:	ldr	w2, [sp, #124]
  408ac8:	mvn	x11, x9
  408acc:	sub	x10, x1, x5
  408ad0:	cmp	x0, x3
  408ad4:	ldp	x7, x4, [sp, #96]
  408ad8:	ldr	x8, [sp, #112]
  408adc:	b.eq	408cc4 <wcrtomb@plt+0x63a4>  // b.none
  408ae0:	add	x0, x0, x9
  408ae4:	and	x0, x0, x11
  408ae8:	sub	x5, x0, x5
  408aec:	cmp	x5, x10
  408af0:	b.hi	408ce4 <wcrtomb@plt+0x63c4>  // b.pmore
  408af4:	mov	x1, x0
  408af8:	str	x0, [x27, #24]
  408afc:	ldr	x0, [x8, #40]
  408b00:	str	x1, [x27, #16]
  408b04:	str	x3, [x4, #16]
  408b08:	add	x0, x0, #0x1
  408b0c:	stp	xzr, xzr, [x3]
  408b10:	stp	x8, xzr, [x3, #16]
  408b14:	stp	xzr, x0, [x3, #32]
  408b18:	str	xzr, [x3, #48]
  408b1c:	strb	w20, [x4, #24]
  408b20:	strb	wzr, [x4, #25]
  408b24:	cbnz	w2, 408cec <wcrtomb@plt+0x63cc>
  408b28:	str	x4, [x23]
  408b2c:	cbz	x19, 408c98 <wcrtomb@plt+0x6378>
  408b30:	mov	x5, x19
  408b34:	mov	w4, #0xff                  	// #255
  408b38:	b	408b64 <wcrtomb@plt+0x6244>
  408b3c:	cmp	w2, #0x0
  408b40:	csel	w0, w4, w25, eq  // eq = none
  408b44:	strb	w0, [x23, #25]
  408b48:	cmp	x5, #0x1
  408b4c:	b.eq	408c98 <wcrtomb@plt+0x6378>  // b.none
  408b50:	add	x1, x21, x5, lsl #2
  408b54:	add	x0, x22, x5, lsl #3
  408b58:	sub	x5, x5, #0x1
  408b5c:	ldur	w2, [x1, #-4]
  408b60:	ldur	x23, [x0, #-8]
  408b64:	ldrb	w0, [x23, #25]
  408b68:	cbz	w0, 408b3c <wcrtomb@plt+0x621c>
  408b6c:	cbnz	w2, 408c7c <wcrtomb@plt+0x635c>
  408b70:	sub	w0, w0, #0x1
  408b74:	and	w0, w0, #0xff
  408b78:	strb	w0, [x23, #25]
  408b7c:	cbz	w0, 408c98 <wcrtomb@plt+0x6378>
  408b80:	cmp	w0, #0x2
  408b84:	b.ne	408cf4 <wcrtomb@plt+0x63d4>  // b.any
  408b88:	add	x0, x5, #0x1
  408b8c:	ldr	w0, [x21, x0, lsl #2]
  408b90:	cbnz	w0, 408d6c <wcrtomb@plt+0x644c>
  408b94:	ldr	x1, [x23, #8]
  408b98:	ldr	x0, [x1]
  408b9c:	ldp	x4, x2, [x0]
  408ba0:	str	x23, [x0]
  408ba4:	str	x4, [x23, #8]
  408ba8:	str	x1, [x0, #8]
  408bac:	str	x2, [x1]
  408bb0:	ldrb	w2, [x0, #25]
  408bb4:	cmp	w2, #0x1
  408bb8:	csetm	w2, eq  // eq = none
  408bbc:	strb	w2, [x23, #25]
  408bc0:	ldrb	w2, [x0, #25]
  408bc4:	cmp	w2, #0xff
  408bc8:	cset	w2, eq  // eq = none
  408bcc:	strb	w2, [x1, #25]
  408bd0:	strb	wzr, [x0, #25]
  408bd4:	sub	x5, x5, #0x1
  408bd8:	mov	x8, x3
  408bdc:	ldr	w2, [x21, x5, lsl #2]
  408be0:	ldr	x1, [x22, x5, lsl #3]
  408be4:	cbnz	w2, 408d90 <wcrtomb@plt+0x6470>
  408be8:	str	x0, [x1]
  408bec:	sub	x26, x26, #0x1
  408bf0:	cmn	x26, #0x1
  408bf4:	b.ne	4089bc <wcrtomb@plt+0x609c>  // b.any
  408bf8:	ldp	x19, x20, [sp, #16]
  408bfc:	ldp	x21, x22, [sp, #32]
  408c00:	ldp	x25, x26, [sp, #64]
  408c04:	ldr	x1, [x8]
  408c08:	ldr	x0, [x27, #88]
  408c0c:	cbnz	x1, 408c1c <wcrtomb@plt+0x62fc>
  408c10:	lsl	x1, x0, #1
  408c14:	add	x1, x1, #0x1
  408c18:	str	x1, [x8]
  408c1c:	ldr	x1, [x8, #40]
  408c20:	add	x0, x0, #0x1
  408c24:	ldr	x2, [x27, #104]
  408c28:	str	x0, [x27, #88]
  408c2c:	cmp	x1, x2
  408c30:	b.ge	408c38 <wcrtomb@plt+0x6318>  // b.tcont
  408c34:	str	x1, [x27, #104]
  408c38:	ldr	x0, [x27, #112]
  408c3c:	cmp	x1, x0
  408c40:	b.le	408c48 <wcrtomb@plt+0x6328>
  408c44:	str	x1, [x27, #112]
  408c48:	ldp	x23, x24, [sp, #48]
  408c4c:	ldp	x27, x28, [sp, #80]
  408c50:	ldp	x29, x30, [sp], #272
  408c54:	ret
  408c58:	ldr	x8, [x2, #16]
  408c5c:	sub	x26, x26, #0x1
  408c60:	cmn	x26, #0x1
  408c64:	b.eq	408bf8 <wcrtomb@plt+0x62d8>  // b.none
  408c68:	cmp	x7, x6
  408c6c:	b.ne	4089c8 <wcrtomb@plt+0x60a8>  // b.any
  408c70:	ldurb	w20, [x24, #-1]
  408c74:	sub	x24, x24, #0x1
  408c78:	b	4089cc <wcrtomb@plt+0x60ac>
  408c7c:	cmp	w2, #0x1
  408c80:	b.ne	408c98 <wcrtomb@plt+0x6378>  // b.any
  408c84:	add	w0, w0, #0x1
  408c88:	and	w0, w0, #0xff
  408c8c:	strb	w0, [x23, #25]
  408c90:	cbnz	w0, 408b80 <wcrtomb@plt+0x6260>
  408c94:	nop
  408c98:	mov	x8, x3
  408c9c:	b	408c5c <wcrtomb@plt+0x633c>
  408ca0:	str	x0, [x27, #16]
  408ca4:	sub	x3, x1, x0
  408ca8:	stp	xzr, xzr, [x4]
  408cac:	cmp	x3, #0x3f
  408cb0:	mov	x3, x0
  408cb4:	b.ls	408a94 <wcrtomb@plt+0x6174>  // b.plast
  408cb8:	add	x0, x0, #0x40
  408cbc:	cmp	x0, x3
  408cc0:	b.ne	408ae0 <wcrtomb@plt+0x61c0>  // b.any
  408cc4:	ldrb	w12, [x27, #80]
  408cc8:	add	x0, x0, x9
  408ccc:	and	x0, x0, x11
  408cd0:	orr	w12, w12, #0x2
  408cd4:	strb	w12, [x27, #80]
  408cd8:	sub	x5, x0, x5
  408cdc:	cmp	x5, x10
  408ce0:	b.ls	408af4 <wcrtomb@plt+0x61d4>  // b.plast
  408ce4:	str	x1, [x27, #24]
  408ce8:	b	408afc <wcrtomb@plt+0x61dc>
  408cec:	str	x4, [x23, #8]
  408cf0:	b	408b2c <wcrtomb@plt+0x620c>
  408cf4:	cmp	w0, #0xfe
  408cf8:	b.ne	408de4 <wcrtomb@plt+0x64c4>  // b.any
  408cfc:	add	x0, x5, #0x1
  408d00:	ldr	w0, [x21, x0, lsl #2]
  408d04:	cbnz	w0, 408d98 <wcrtomb@plt+0x6478>
  408d08:	ldr	x0, [x23]
  408d0c:	ldr	x1, [x0, #8]
  408d10:	str	x23, [x0, #8]
  408d14:	str	x1, [x23]
  408d18:	strb	wzr, [x23, #25]
  408d1c:	strb	wzr, [x0, #25]
  408d20:	b	408bd4 <wcrtomb@plt+0x62b4>
  408d24:	mov	x0, x27
  408d28:	mov	x1, #0x20                  	// #32
  408d2c:	stp	x7, x8, [sp, #96]
  408d30:	str	w2, [sp, #112]
  408d34:	bl	416ee8 <_obstack_newchunk@@Base>
  408d38:	ldp	x0, x1, [x27, #24]
  408d3c:	adrp	x2, 408000 <wcrtomb@plt+0x56e0>
  408d40:	ldr	x4, [x27, #16]
  408d44:	add	x6, x2, #0x3f8
  408d48:	ldr	w2, [sp, #112]
  408d4c:	ldp	x7, x8, [sp, #96]
  408d50:	add	x0, x0, #0x20
  408d54:	cmp	x0, x4
  408d58:	b.ne	408a64 <wcrtomb@plt+0x6144>  // b.any
  408d5c:	ldrb	w3, [x27, #80]
  408d60:	orr	w3, w3, #0x2
  408d64:	strb	w3, [x27, #80]
  408d68:	b	408a64 <wcrtomb@plt+0x6144>
  408d6c:	cmp	w0, #0x1
  408d70:	b.ne	408de4 <wcrtomb@plt+0x64c4>  // b.any
  408d74:	ldr	x0, [x23, #8]
  408d78:	ldr	x1, [x0]
  408d7c:	str	x23, [x0]
  408d80:	str	x1, [x23, #8]
  408d84:	strb	wzr, [x23, #25]
  408d88:	strb	wzr, [x0, #25]
  408d8c:	b	408bd4 <wcrtomb@plt+0x62b4>
  408d90:	str	x0, [x1, #8]
  408d94:	b	408c5c <wcrtomb@plt+0x633c>
  408d98:	cmp	w0, #0x1
  408d9c:	b.ne	408de4 <wcrtomb@plt+0x64c4>  // b.any
  408da0:	ldr	x1, [x23]
  408da4:	ldr	x0, [x1, #8]
  408da8:	ldp	x4, x2, [x0]
  408dac:	str	x1, [x0]
  408db0:	str	x4, [x1, #8]
  408db4:	str	x23, [x0, #8]
  408db8:	str	x2, [x23]
  408dbc:	ldrb	w2, [x0, #25]
  408dc0:	cmp	w2, #0x1
  408dc4:	csetm	w2, eq  // eq = none
  408dc8:	strb	w2, [x1, #25]
  408dcc:	ldrb	w1, [x0, #25]
  408dd0:	cmp	w1, #0xff
  408dd4:	cset	w1, eq  // eq = none
  408dd8:	strb	w1, [x23, #25]
  408ddc:	strb	wzr, [x0, #25]
  408de0:	b	408bd4 <wcrtomb@plt+0x62b4>
  408de4:	bl	4025f0 <abort@plt>
  408de8:	ldr	x0, [x0, #88]
  408dec:	ret
  408df0:	sub	sp, sp, #0x950
  408df4:	stp	x29, x30, [sp]
  408df8:	mov	x29, sp
  408dfc:	stp	x19, x20, [sp, #16]
  408e00:	mov	x20, x0
  408e04:	add	x0, x0, #0x78
  408e08:	stp	x21, x22, [sp, #32]
  408e0c:	ldr	x19, [x20, #2440]
  408e10:	stp	x23, x24, [sp, #48]
  408e14:	add	x23, sp, #0x50
  408e18:	ldr	x21, [x20, #88]
  408e1c:	cmp	x19, #0x0
  408e20:	csel	x23, x23, x0, ne  // ne = any
  408e24:	cmp	x21, #0x1
  408e28:	cset	w22, eq  // eq = none
  408e2c:	b.eq	4091c0 <wcrtomb@plt+0x68a0>  // b.none
  408e30:	ldr	x1, [x20, #104]
  408e34:	mov	x3, #0xff                  	// #255
  408e38:	mov	x0, x23
  408e3c:	mov	x2, #0x100                 	// #256
  408e40:	cmp	x1, x3
  408e44:	csel	x1, x1, x3, le
  408e48:	bl	402510 <memset@plt>
  408e4c:	ldr	x6, [x20, #96]
  408e50:	str	x6, [sp, #72]
  408e54:	cbnz	x6, 408e64 <wcrtomb@plt+0x6544>
  408e58:	b	408f1c <wcrtomb@plt+0x65fc>
  408e5c:	ldr	x6, [x6, #24]
  408e60:	cbz	x6, 408f14 <wcrtomb@plt+0x65f4>
  408e64:	ldr	x0, [x6, #8]
  408e68:	cbz	x0, 408e78 <wcrtomb@plt+0x6558>
  408e6c:	add	x1, sp, #0x48
  408e70:	bl	407f28 <wcrtomb@plt+0x5608>
  408e74:	ldr	x0, [x6, #8]
  408e78:	mov	x2, x23
  408e7c:	ldr	x1, [x6, #40]
  408e80:	bl	407d70 <wcrtomb@plt+0x5450>
  408e84:	ldr	x0, [x6, #8]
  408e88:	mov	w3, w22
  408e8c:	ldr	x1, [x6, #32]
  408e90:	ldr	x2, [x20, #96]
  408e94:	bl	407cb0 <wcrtomb@plt+0x5390>
  408e98:	cmp	x21, #0x1
  408e9c:	b.ne	408e5c <wcrtomb@plt+0x653c>  // b.any
  408ea0:	ldr	x3, [x6, #32]
  408ea4:	ldr	x0, [x20, #104]
  408ea8:	stp	x0, x0, [x6, #48]
  408eac:	cbz	x3, 408e5c <wcrtomb@plt+0x653c>
  408eb0:	ldp	x5, x4, [x6]
  408eb4:	nop
  408eb8:	mov	x1, x4
  408ebc:	ldr	x0, [x3, #8]
  408ec0:	bl	407dd0 <wcrtomb@plt+0x54b0>
  408ec4:	tst	w0, #0xff
  408ec8:	b.ne	408ee4 <wcrtomb@plt+0x65c4>  // b.any
  408ecc:	ldp	x2, x1, [x3, #40]
  408ed0:	ldr	x0, [x6, #40]
  408ed4:	sub	x0, x0, x2
  408ed8:	cmp	x0, x1
  408edc:	b.ge	408ee4 <wcrtomb@plt+0x65c4>  // b.tcont
  408ee0:	str	x0, [x3, #48]
  408ee4:	cbz	x5, 408f04 <wcrtomb@plt+0x65e4>
  408ee8:	ldr	x2, [x3, #40]
  408eec:	ldr	x0, [x6, #40]
  408ef0:	ldr	x1, [x3, #56]
  408ef4:	sub	x0, x0, x2
  408ef8:	cmp	x1, x0
  408efc:	b.le	408f04 <wcrtomb@plt+0x65e4>
  408f00:	str	x0, [x3, #56]
  408f04:	ldr	x3, [x3, #32]
  408f08:	cbnz	x3, 408eb8 <wcrtomb@plt+0x6598>
  408f0c:	ldr	x6, [x6, #24]
  408f10:	cbnz	x6, 408e64 <wcrtomb@plt+0x6544>
  408f14:	cmp	x21, #0x1
  408f18:	b.eq	409024 <wcrtomb@plt+0x6704>  // b.none
  408f1c:	add	x24, sp, #0x150
  408f20:	add	x22, x20, #0x178
  408f24:	cbz	x19, 409070 <wcrtomb@plt+0x6750>
  408f28:	mov	x2, #0x800                 	// #2048
  408f2c:	mov	w1, #0x0                   	// #0
  408f30:	mov	x0, x24
  408f34:	bl	402510 <memset@plt>
  408f38:	ldr	x0, [x20, #96]
  408f3c:	mov	x1, x24
  408f40:	ldr	x0, [x0, #8]
  408f44:	bl	407e58 <wcrtomb@plt+0x5538>
  408f48:	mov	w6, #0xffffffff            	// #-1
  408f4c:	mov	w4, #0xfffffffe            	// #-2
  408f50:	mov	w7, w6
  408f54:	mov	x1, #0x0                   	// #0
  408f58:	b	408fa0 <wcrtomb@plt+0x6680>
  408f5c:	ldrb	w3, [x19, x1]
  408f60:	mov	x2, x3
  408f64:	ldr	x3, [x24, x3, lsl #3]
  408f68:	str	x3, [x22, x1, lsl #3]
  408f6c:	cmn	w4, #0x2
  408f70:	cbz	x3, 408f94 <wcrtomb@plt+0x6674>
  408f74:	b.eq	408fb4 <wcrtomb@plt+0x6694>  // b.none
  408f78:	sxtw	x0, w2
  408f7c:	cmp	w2, w4
  408f80:	b.eq	409018 <wcrtomb@plt+0x66f8>  // b.none
  408f84:	cmp	w4, w6
  408f88:	ccmp	x0, x1, #0x0, eq  // eq = none
  408f8c:	csel	w4, w4, w7, eq  // eq = none
  408f90:	csel	w6, w5, w6, eq  // eq = none
  408f94:	add	x1, x1, #0x1
  408f98:	cmp	x1, #0x100
  408f9c:	b.eq	408fc8 <wcrtomb@plt+0x66a8>  // b.none
  408fa0:	mov	w5, w1
  408fa4:	cbnz	x19, 408f5c <wcrtomb@plt+0x663c>
  408fa8:	mov	w2, w1
  408fac:	ldr	x3, [x22, x1, lsl #3]
  408fb0:	b	408f6c <wcrtomb@plt+0x664c>
  408fb4:	add	x1, x1, #0x1
  408fb8:	mov	w6, w5
  408fbc:	mov	w4, w2
  408fc0:	cmp	x1, #0x100
  408fc4:	b.ne	408fa0 <wcrtomb@plt+0x6680>  // b.any
  408fc8:	str	w4, [x20, #2448]
  408fcc:	cmp	x21, #0x1
  408fd0:	str	w6, [x20, #2452]
  408fd4:	b.eq	40907c <wcrtomb@plt+0x675c>  // b.none
  408fd8:	add	x20, x20, #0x78
  408fdc:	mov	x0, #0x0                   	// #0
  408fe0:	cbz	x19, 409000 <wcrtomb@plt+0x66e0>
  408fe4:	nop
  408fe8:	ldrb	w1, [x19, x0]
  408fec:	ldrb	w1, [x23, x1]
  408ff0:	strb	w1, [x20, x0]
  408ff4:	add	x0, x0, #0x1
  408ff8:	cmp	x0, #0x100
  408ffc:	b.ne	408fe8 <wcrtomb@plt+0x66c8>  // b.any
  409000:	ldp	x29, x30, [sp]
  409004:	ldp	x19, x20, [sp, #16]
  409008:	ldp	x21, x22, [sp, #32]
  40900c:	ldp	x23, x24, [sp, #48]
  409010:	add	sp, sp, #0x950
  409014:	ret
  409018:	cmp	w4, w6
  40901c:	csel	w6, w5, w7, eq  // eq = none
  409020:	b	408f94 <wcrtomb@plt+0x6674>
  409024:	ldr	x6, [x20, #96]
  409028:	ldr	x0, [x6, #24]
  40902c:	cbz	x0, 408f1c <wcrtomb@plt+0x65fc>
  409030:	ldr	x2, [x0, #16]
  409034:	ldr	x1, [x0, #56]
  409038:	ldr	x2, [x2, #56]
  40903c:	cmp	x1, x2
  409040:	b.le	40904c <wcrtomb@plt+0x672c>
  409044:	mov	x1, x2
  409048:	str	x2, [x0, #56]
  40904c:	ldr	x2, [x0, #48]
  409050:	cmp	x2, x1
  409054:	b.le	40905c <wcrtomb@plt+0x673c>
  409058:	str	x1, [x0, #48]
  40905c:	ldr	x0, [x0, #24]
  409060:	cbnz	x0, 409030 <wcrtomb@plt+0x6710>
  409064:	add	x24, sp, #0x150
  409068:	add	x22, x20, #0x178
  40906c:	cbnz	x19, 408f28 <wcrtomb@plt+0x6608>
  409070:	add	x22, x20, #0x178
  409074:	mov	x24, x22
  409078:	b	408f28 <wcrtomb@plt+0x6608>
  40907c:	ldp	x0, x5, [x20, #24]
  409080:	ldr	x1, [x20, #104]
  409084:	mov	x21, x1
  409088:	sub	x2, x5, x0
  40908c:	cmp	x1, x2
  409090:	b.hi	409358 <wcrtomb@plt+0x6a38>  // b.pmore
  409094:	ldr	x3, [x20, #16]
  409098:	add	x0, x0, x21
  40909c:	cmp	x0, x3
  4090a0:	b.eq	409378 <wcrtomb@plt+0x6a58>  // b.none
  4090a4:	ldr	x2, [x20, #48]
  4090a8:	ldr	x4, [x20, #8]
  4090ac:	add	x0, x0, x2
  4090b0:	bic	x0, x0, x2
  4090b4:	str	x0, [x20, #24]
  4090b8:	sub	x2, x0, x4
  4090bc:	sub	x4, x5, x4
  4090c0:	cmp	x2, x4
  4090c4:	b.hi	4092e8 <wcrtomb@plt+0x69c8>  // b.pmore
  4090c8:	str	x0, [x20, #16]
  4090cc:	subs	x0, x1, #0x1
  4090d0:	str	x3, [x20, #2424]
  4090d4:	ldr	x2, [x20, #96]
  4090d8:	b.pl	4090e4 <wcrtomb@plt+0x67c4>  // b.nfrst
  4090dc:	b	409104 <wcrtomb@plt+0x67e4>
  4090e0:	ldr	x3, [x20, #2424]
  4090e4:	ldr	x1, [x2, #8]
  4090e8:	ldrb	w1, [x1, #24]
  4090ec:	strb	w1, [x3, x0]
  4090f0:	sub	x0, x0, #0x1
  4090f4:	cmn	x0, #0x1
  4090f8:	ldr	x2, [x2, #24]
  4090fc:	b.ne	4090e0 <wcrtomb@plt+0x67c0>  // b.any
  409100:	ldr	x1, [x20, #104]
  409104:	cmp	x1, #0x1
  409108:	b.le	408fd8 <wcrtomb@plt+0x66b8>
  40910c:	ldp	x0, x5, [x20, #24]
  409110:	sub	x2, x1, #0x1
  409114:	lsl	x21, x2, #3
  409118:	sub	x3, x5, x0
  40911c:	cmp	x3, x2, lsl #3
  409120:	b.cc	409300 <wcrtomb@plt+0x69e0>  // b.lo, b.ul, b.last
  409124:	ldr	x4, [x20, #16]
  409128:	add	x0, x0, x21
  40912c:	cmp	x0, x4
  409130:	b.eq	409318 <wcrtomb@plt+0x69f8>  // b.none
  409134:	ldr	x2, [x20, #48]
  409138:	ldr	x3, [x20, #8]
  40913c:	add	x0, x0, x2
  409140:	bic	x0, x0, x2
  409144:	str	x0, [x20, #24]
  409148:	sub	x2, x0, x3
  40914c:	sub	x3, x5, x3
  409150:	cmp	x2, x3
  409154:	b.ls	409160 <wcrtomb@plt+0x6840>  // b.plast
  409158:	mov	x0, x5
  40915c:	str	x5, [x20, #24]
  409160:	ldr	x2, [x20, #96]
  409164:	cmp	x1, #0x1
  409168:	ldr	x2, [x2, #24]
  40916c:	str	x0, [x20, #16]
  409170:	str	x4, [x20, #2432]
  409174:	b.le	4091a0 <wcrtomb@plt+0x6880>
  409178:	mov	x0, #0x0                   	// #0
  40917c:	nop
  409180:	ldr	x1, [x2, #48]
  409184:	ldr	x2, [x2, #24]
  409188:	str	x1, [x4, x0, lsl #3]
  40918c:	add	x0, x0, #0x1
  409190:	ldr	x1, [x20, #104]
  409194:	sub	x3, x1, #0x1
  409198:	cmp	x3, x0
  40919c:	b.gt	409180 <wcrtomb@plt+0x6860>
  4091a0:	ldr	x0, [x20, #2424]
  4091a4:	add	x0, x0, x1
  4091a8:	ldurb	w0, [x0, #-2]
  4091ac:	cbz	x19, 4091b8 <wcrtomb@plt+0x6898>
  4091b0:	and	x0, x0, #0xff
  4091b4:	ldrb	w0, [x19, x0]
  4091b8:	strb	w0, [x20, #2456]
  4091bc:	b	408fd8 <wcrtomb@plt+0x66b8>
  4091c0:	ldr	x2, [x20, #96]
  4091c4:	str	x2, [sp, #72]
  4091c8:	cbz	x2, 4091e8 <wcrtomb@plt+0x68c8>
  4091cc:	nop
  4091d0:	ldr	x0, [x2, #8]
  4091d4:	add	x1, sp, #0x48
  4091d8:	cbz	x0, 4091e0 <wcrtomb@plt+0x68c0>
  4091dc:	bl	407f28 <wcrtomb@plt+0x5608>
  4091e0:	ldr	x2, [x2, #24]
  4091e4:	cbnz	x2, 4091d0 <wcrtomb@plt+0x68b0>
  4091e8:	ldp	x0, x5, [x20, #24]
  4091ec:	ldr	x1, [x20, #104]
  4091f0:	mov	x24, x1
  4091f4:	sub	x2, x5, x0
  4091f8:	cmp	x1, x2
  4091fc:	b.hi	409328 <wcrtomb@plt+0x6a08>  // b.pmore
  409200:	ldr	x2, [x20, #16]
  409204:	add	x0, x0, x24
  409208:	cmp	x0, x2
  40920c:	b.eq	409348 <wcrtomb@plt+0x6a28>  // b.none
  409210:	ldr	x3, [x20, #48]
  409214:	ldr	x4, [x20, #8]
  409218:	add	x0, x0, x3
  40921c:	bic	x0, x0, x3
  409220:	str	x0, [x20, #24]
  409224:	sub	x3, x0, x4
  409228:	sub	x4, x5, x4
  40922c:	cmp	x3, x4
  409230:	b.hi	4092f4 <wcrtomb@plt+0x69d4>  // b.pmore
  409234:	str	x0, [x20, #16]
  409238:	cmp	x1, #0x0
  40923c:	str	x2, [x20, #2424]
  409240:	ldr	x1, [x20, #96]
  409244:	b.le	409274 <wcrtomb@plt+0x6954>
  409248:	mov	x0, #0x0                   	// #0
  40924c:	b	409254 <wcrtomb@plt+0x6934>
  409250:	ldr	x2, [x20, #2424]
  409254:	ldr	x3, [x1, #8]
  409258:	ldrb	w3, [x3, #24]
  40925c:	strb	w3, [x2, x0]
  409260:	add	x0, x0, #0x1
  409264:	ldr	x2, [x20, #104]
  409268:	ldr	x1, [x1, #24]
  40926c:	cmp	x2, x0
  409270:	b.gt	409250 <wcrtomb@plt+0x6930>
  409274:	ldr	x0, [x20, #2440]
  409278:	bl	408868 <wcrtomb@plt+0x5f48>
  40927c:	mov	x24, x0
  409280:	ldr	x2, [x20, #104]
  409284:	adrp	x3, 408000 <wcrtomb@plt+0x56e0>
  409288:	ldr	x1, [x20, #2424]
  40928c:	add	x3, x3, #0x3f8
  409290:	str	x3, [x0, #2464]
  409294:	bl	408968 <wcrtomb@plt+0x6048>
  409298:	mov	x0, x20
  40929c:	mov	x1, #0x0                   	// #0
  4092a0:	bl	417038 <_obstack_free@@Base>
  4092a4:	mov	x1, x24
  4092a8:	mov	x2, #0x9a8                 	// #2472
  4092ac:	mov	x0, x20
  4092b0:	bl	4022a0 <memcpy@plt>
  4092b4:	mov	x0, x24
  4092b8:	bl	4026b0 <free@plt>
  4092bc:	ldr	x1, [x20, #104]
  4092c0:	mov	x3, #0xff                  	// #255
  4092c4:	mov	x0, x23
  4092c8:	mov	x2, #0x100                 	// #256
  4092cc:	cmp	x1, x3
  4092d0:	csel	x1, x1, x3, le
  4092d4:	bl	402510 <memset@plt>
  4092d8:	ldr	x6, [x20, #96]
  4092dc:	str	x6, [sp, #72]
  4092e0:	cbnz	x6, 408e64 <wcrtomb@plt+0x6544>
  4092e4:	b	409028 <wcrtomb@plt+0x6708>
  4092e8:	mov	x0, x5
  4092ec:	str	x5, [x20, #24]
  4092f0:	b	4090c8 <wcrtomb@plt+0x67a8>
  4092f4:	mov	x0, x5
  4092f8:	str	x5, [x20, #24]
  4092fc:	b	409234 <wcrtomb@plt+0x6914>
  409300:	mov	x1, x21
  409304:	mov	x0, x20
  409308:	bl	416ee8 <_obstack_newchunk@@Base>
  40930c:	ldp	x0, x5, [x20, #24]
  409310:	ldr	x1, [x20, #104]
  409314:	b	409124 <wcrtomb@plt+0x6804>
  409318:	ldrb	w2, [x20, #80]
  40931c:	orr	w2, w2, #0x2
  409320:	strb	w2, [x20, #80]
  409324:	b	409134 <wcrtomb@plt+0x6814>
  409328:	mov	x0, x20
  40932c:	bl	416ee8 <_obstack_newchunk@@Base>
  409330:	ldp	x0, x5, [x20, #24]
  409334:	ldr	x2, [x20, #16]
  409338:	ldr	x1, [x20, #104]
  40933c:	add	x0, x0, x24
  409340:	cmp	x0, x2
  409344:	b.ne	409210 <wcrtomb@plt+0x68f0>  // b.any
  409348:	ldrb	w3, [x20, #80]
  40934c:	orr	w3, w3, #0x2
  409350:	strb	w3, [x20, #80]
  409354:	b	409210 <wcrtomb@plt+0x68f0>
  409358:	mov	x0, x20
  40935c:	bl	416ee8 <_obstack_newchunk@@Base>
  409360:	ldp	x0, x5, [x20, #24]
  409364:	ldr	x3, [x20, #16]
  409368:	ldr	x1, [x20, #104]
  40936c:	add	x0, x0, x21
  409370:	cmp	x0, x3
  409374:	b.ne	4090a4 <wcrtomb@plt+0x6784>  // b.any
  409378:	ldrb	w2, [x20, #80]
  40937c:	orr	w2, w2, #0x2
  409380:	strb	w2, [x20, #80]
  409384:	b	4090a4 <wcrtomb@plt+0x6784>
  409388:	ldr	x5, [x0, #2464]
  40938c:	mov	x16, x5
  409390:	br	x16
  409394:	nop
  409398:	stp	x29, x30, [sp, #-32]!
  40939c:	mov	x1, #0x0                   	// #0
  4093a0:	mov	x29, sp
  4093a4:	str	x19, [sp, #16]
  4093a8:	mov	x19, x0
  4093ac:	bl	417038 <_obstack_free@@Base>
  4093b0:	mov	x0, x19
  4093b4:	ldr	x19, [sp, #16]
  4093b8:	ldp	x29, x30, [sp], #32
  4093bc:	b	4026b0 <free@plt>
  4093c0:	stp	x29, x30, [sp, #-96]!
  4093c4:	mov	x29, sp
  4093c8:	stp	x21, x22, [sp, #32]
  4093cc:	adrp	x22, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4093d0:	adrp	x21, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4093d4:	add	x22, x22, #0x658
  4093d8:	add	x21, x21, #0x8e0
  4093dc:	stp	x23, x24, [sp, #48]
  4093e0:	mov	x24, x0
  4093e4:	and	w23, w2, #0xff
  4093e8:	str	x25, [sp, #64]
  4093ec:	sub	x25, x1, x0
  4093f0:	stp	x19, x20, [sp, #16]
  4093f4:	mov	x19, #0x0                   	// #0
  4093f8:	str	xzr, [sp, #88]
  4093fc:	nop
  409400:	sub	x2, x25, x19
  409404:	add	x3, sp, #0x58
  409408:	add	x0, sp, #0x54
  40940c:	cmp	x19, x25
  409410:	b.cs	409434 <wcrtomb@plt+0x6b14>  // b.hs, b.nlast
  409414:	ldrb	w4, [x24, x19]
  409418:	add	x1, x24, x19
  40941c:	mov	x5, x4
  409420:	add	x4, x21, x4
  409424:	ldrb	w5, [x22, w5, sxtw]
  409428:	cbz	w5, 409450 <wcrtomb@plt+0x6b30>
  40942c:	add	x19, x19, #0x1
  409430:	cbnz	w23, 409400 <wcrtomb@plt+0x6ae0>
  409434:	mov	x0, x19
  409438:	ldp	x19, x20, [sp, #16]
  40943c:	ldp	x21, x22, [sp, #32]
  409440:	ldp	x23, x24, [sp, #48]
  409444:	ldr	x25, [sp, #64]
  409448:	ldp	x29, x30, [sp], #96
  40944c:	ret
  409450:	ldrsb	w4, [x4, #3]
  409454:	cmn	w4, #0x2
  409458:	b.ne	409434 <wcrtomb@plt+0x6b14>  // b.any
  40945c:	str	wzr, [sp, #84]
  409460:	bl	416cf8 <wcrtomb@plt+0x143d8>
  409464:	mov	x20, x0
  409468:	ldr	w0, [sp, #84]
  40946c:	cmp	w0, #0x5f
  409470:	b.eq	40947c <wcrtomb@plt+0x6b5c>  // b.none
  409474:	bl	4027c0 <iswalnum@plt>
  409478:	cbz	w0, 409434 <wcrtomb@plt+0x6b14>
  40947c:	add	x19, x19, x20
  409480:	cmp	x20, #0x0
  409484:	cinc	x19, x19, eq  // eq = none
  409488:	cbnz	w23, 409400 <wcrtomb@plt+0x6ae0>
  40948c:	b	409434 <wcrtomb@plt+0x6b14>
  409490:	ret
  409494:	nop
  409498:	ldrb	w4, [x0]
  40949c:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4094a0:	add	x3, x3, #0x8e0
  4094a4:	add	x3, x3, x4
  4094a8:	ldrsb	x3, [x3, #3]
  4094ac:	cmn	x3, #0x2
  4094b0:	b.eq	4094bc <wcrtomb@plt+0x6b9c>  // b.none
  4094b4:	mov	x0, x3
  4094b8:	ret
  4094bc:	b	416cd0 <wcrtomb@plt+0x143b0>
  4094c0:	stp	x29, x30, [sp, #-48]!
  4094c4:	mov	x29, sp
  4094c8:	stp	x19, x20, [sp, #16]
  4094cc:	adrp	x20, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4094d0:	add	x20, x20, #0x658
  4094d4:	str	x21, [sp, #32]
  4094d8:	adrp	x21, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4094dc:	add	x21, x21, #0x9e4
  4094e0:	mov	x19, #0x0                   	// #0
  4094e4:	nop
  4094e8:	ldr	w0, [x21, x19, lsl #2]
  4094ec:	mov	w1, #0x1                   	// #1
  4094f0:	cmp	w0, #0x5f
  4094f4:	b.eq	409504 <wcrtomb@plt+0x6be4>  // b.none
  4094f8:	bl	4027c0 <iswalnum@plt>
  4094fc:	cmp	w0, #0x0
  409500:	cset	w1, ne  // ne = any
  409504:	strb	w1, [x20, x19]
  409508:	add	x19, x19, #0x1
  40950c:	cmp	x19, #0x100
  409510:	b.ne	4094e8 <wcrtomb@plt+0x6bc8>  // b.any
  409514:	ldp	x19, x20, [sp, #16]
  409518:	ldr	x21, [sp, #32]
  40951c:	ldp	x29, x30, [sp], #48
  409520:	ret
  409524:	nop
  409528:	stp	x29, x30, [sp, #-64]!
  40952c:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3b98>
  409530:	mov	x29, sp
  409534:	stp	x19, x20, [sp, #16]
  409538:	and	w19, w0, #0xff
  40953c:	ldrb	w0, [x1, #3558]
  409540:	stp	x21, x22, [sp, #32]
  409544:	cbz	w0, 4095c8 <wcrtomb@plt+0x6ca8>
  409548:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  40954c:	cmp	w19, #0x0
  409550:	ccmp	x0, #0x1, #0x4, eq  // eq = none
  409554:	b.ne	4095c8 <wcrtomb@plt+0x6ca8>  // b.any
  409558:	mov	x0, #0x100                 	// #256
  40955c:	bl	414080 <wcrtomb@plt+0x11760>
  409560:	mov	x21, x0
  409564:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  409568:	cmp	x0, #0x1
  40956c:	b.eq	4095e4 <wcrtomb@plt+0x6cc4>  // b.none
  409570:	adrp	x22, 442000 <__progname@@GLIBC_2.17+0x3b98>
  409574:	mov	x19, #0x0                   	// #0
  409578:	add	x22, x22, #0x9e4
  40957c:	b	4095a8 <wcrtomb@plt+0x6c88>
  409580:	mov	w1, w0
  409584:	mov	x0, x2
  409588:	add	x2, sp, #0x38
  40958c:	str	xzr, [sp, #56]
  409590:	bl	402920 <wcrtomb@plt>
  409594:	cmp	x0, #0x1
  409598:	b.ne	40961c <wcrtomb@plt+0x6cfc>  // b.any
  40959c:	add	x19, x19, #0x1
  4095a0:	cmp	x19, #0x100
  4095a4:	b.eq	4095cc <wcrtomb@plt+0x6cac>  // b.none
  4095a8:	ldr	w20, [x22, x19, lsl #2]
  4095ac:	mov	w0, w20
  4095b0:	bl	402830 <towupper@plt>
  4095b4:	add	x2, x21, x19
  4095b8:	cmp	w20, w0
  4095bc:	b.ne	409580 <wcrtomb@plt+0x6c60>  // b.any
  4095c0:	strb	w19, [x21, x19]
  4095c4:	b	40959c <wcrtomb@plt+0x6c7c>
  4095c8:	mov	x21, #0x0                   	// #0
  4095cc:	mov	x0, x21
  4095d0:	bl	408868 <wcrtomb@plt+0x5f48>
  4095d4:	ldp	x19, x20, [sp, #16]
  4095d8:	ldp	x21, x22, [sp, #32]
  4095dc:	ldp	x29, x30, [sp], #64
  4095e0:	ret
  4095e4:	bl	402560 <__ctype_toupper_loc@plt>
  4095e8:	ldr	x2, [x0]
  4095ec:	mov	x1, #0x0                   	// #0
  4095f0:	ldr	w0, [x2, x1, lsl #2]
  4095f4:	strb	w0, [x21, x1]
  4095f8:	add	x1, x1, #0x1
  4095fc:	cmp	x1, #0x100
  409600:	b.ne	4095f0 <wcrtomb@plt+0x6cd0>  // b.any
  409604:	mov	x0, x21
  409608:	bl	408868 <wcrtomb@plt+0x5f48>
  40960c:	ldp	x19, x20, [sp, #16]
  409610:	ldp	x21, x22, [sp, #32]
  409614:	ldp	x29, x30, [sp], #64
  409618:	ret
  40961c:	bl	4025f0 <abort@plt>
  409620:	stp	x29, x30, [sp, #-96]!
  409624:	mov	x29, sp
  409628:	stp	x19, x20, [sp, #16]
  40962c:	mov	x20, x2
  409630:	ldr	x19, [x0]
  409634:	cmp	x19, x2
  409638:	b.cs	40975c <wcrtomb@plt+0x6e3c>  // b.hs, b.nlast
  40963c:	stp	x21, x22, [sp, #32]
  409640:	adrp	x21, 442000 <__progname@@GLIBC_2.17+0x3b98>
  409644:	add	x21, x21, #0x8e0
  409648:	stp	x23, x24, [sp, #48]
  40964c:	mov	x24, x0
  409650:	mov	x22, x1
  409654:	ldrb	w0, [x21, #2]
  409658:	mov	x23, x3
  40965c:	cbnz	w0, 4096d4 <wcrtomb@plt+0x6db4>
  409660:	str	xzr, [sp, #88]
  409664:	b	409678 <wcrtomb@plt+0x6d58>
  409668:	add	x4, x19, x0
  40966c:	cmp	x20, x4
  409670:	b.ls	4096a8 <wcrtomb@plt+0x6d88>  // b.plast
  409674:	mov	x19, x4
  409678:	ldrb	w4, [x19]
  40967c:	add	x4, x21, x4
  409680:	ldrsb	x0, [x4, #3]
  409684:	cmn	x0, #0x2
  409688:	b.eq	409748 <wcrtomb@plt+0x6e28>  // b.none
  40968c:	cmn	x0, #0x3
  409690:	b.ls	409668 <wcrtomb@plt+0x6d48>  // b.plast
  409694:	str	xzr, [sp, #88]
  409698:	mov	x0, #0x1                   	// #1
  40969c:	add	x4, x19, x0
  4096a0:	cmp	x20, x4
  4096a4:	b.hi	409674 <wcrtomb@plt+0x6d54>  // b.pmore
  4096a8:	str	x4, [x24]
  4096ac:	cbz	x22, 4096b4 <wcrtomb@plt+0x6d94>
  4096b0:	str	x0, [x22]
  4096b4:	sub	x0, x20, x19
  4096b8:	cmp	x20, x4
  4096bc:	b.eq	409730 <wcrtomb@plt+0x6e10>  // b.none
  4096c0:	ldp	x19, x20, [sp, #16]
  4096c4:	ldp	x21, x22, [sp, #32]
  4096c8:	ldp	x23, x24, [sp, #48]
  4096cc:	ldp	x29, x30, [sp], #96
  4096d0:	ret
  4096d4:	cmp	x2, x3
  4096d8:	b.cs	409720 <wcrtomb@plt+0x6e00>  // b.hs, b.nlast
  4096dc:	ldrb	w0, [x2]
  4096e0:	and	w0, w0, #0xc0
  4096e4:	cmp	w0, #0x80
  4096e8:	b.ne	409720 <wcrtomb@plt+0x6e00>  // b.any
  4096ec:	ldurb	w0, [x2, #-1]
  4096f0:	and	w0, w0, #0xc0
  4096f4:	cmp	w0, #0x80
  4096f8:	b.ne	4097b4 <wcrtomb@plt+0x6e94>  // b.any
  4096fc:	ldurb	w0, [x2, #-2]
  409700:	and	w0, w0, #0xc0
  409704:	cmp	w0, #0x80
  409708:	b.ne	4097a8 <wcrtomb@plt+0x6e88>  // b.any
  40970c:	ldurb	w0, [x2, #-3]
  409710:	and	w0, w0, #0xc0
  409714:	cmp	w0, #0x80
  409718:	b.ne	40976c <wcrtomb@plt+0x6e4c>  // b.any
  40971c:	nop
  409720:	str	x20, [x24]
  409724:	mov	x4, x20
  409728:	mov	x0, #0x1                   	// #1
  40972c:	cbnz	x22, 4096b0 <wcrtomb@plt+0x6d90>
  409730:	mov	x0, #0x0                   	// #0
  409734:	ldp	x19, x20, [sp, #16]
  409738:	ldp	x21, x22, [sp, #32]
  40973c:	ldp	x23, x24, [sp, #48]
  409740:	ldp	x29, x30, [sp], #96
  409744:	ret
  409748:	add	x2, sp, #0x58
  40974c:	sub	x1, x23, x19
  409750:	mov	x0, x19
  409754:	bl	416cd0 <wcrtomb@plt+0x143b0>
  409758:	b	40968c <wcrtomb@plt+0x6d6c>
  40975c:	sub	x0, x2, x19
  409760:	ldp	x19, x20, [sp, #16]
  409764:	ldp	x29, x30, [sp], #96
  409768:	ret
  40976c:	stp	x25, x26, [sp, #64]
  409770:	mov	x25, #0x3                   	// #3
  409774:	sub	x26, x20, x25
  409778:	str	xzr, [sp, #88]
  40977c:	ldrb	w0, [x26]
  409780:	add	x21, x21, x0
  409784:	ldrsb	x0, [x21, #3]
  409788:	cmn	x0, #0x2
  40978c:	b.eq	4097d0 <wcrtomb@plt+0x6eb0>  // b.none
  409790:	cmp	x25, x0
  409794:	mov	x4, x20
  409798:	ccmn	x0, #0x3, #0x2, cc  // cc = lo, ul, last
  40979c:	b.ls	4097c0 <wcrtomb@plt+0x6ea0>  // b.plast
  4097a0:	ldp	x25, x26, [sp, #64]
  4097a4:	b	4096a8 <wcrtomb@plt+0x6d88>
  4097a8:	stp	x25, x26, [sp, #64]
  4097ac:	mov	x25, #0x2                   	// #2
  4097b0:	b	409774 <wcrtomb@plt+0x6e54>
  4097b4:	stp	x25, x26, [sp, #64]
  4097b8:	mov	x25, #0x1                   	// #1
  4097bc:	b	409774 <wcrtomb@plt+0x6e54>
  4097c0:	add	x4, x26, x0
  4097c4:	mov	x19, x26
  4097c8:	ldp	x25, x26, [sp, #64]
  4097cc:	b	4096a8 <wcrtomb@plt+0x6d88>
  4097d0:	sub	x1, x23, x26
  4097d4:	add	x2, sp, #0x58
  4097d8:	mov	x0, x26
  4097dc:	bl	416cd0 <wcrtomb@plt+0x143b0>
  4097e0:	b	409790 <wcrtomb@plt+0x6e70>
  4097e4:	nop
  4097e8:	mov	w2, #0x1                   	// #1
  4097ec:	b	4093c0 <wcrtomb@plt+0x6aa0>
  4097f0:	mov	w2, #0x0                   	// #0
  4097f4:	b	4093c0 <wcrtomb@plt+0x6aa0>
  4097f8:	cmp	x0, x1
  4097fc:	b.eq	409890 <wcrtomb@plt+0x6f70>  // b.none
  409800:	stp	x29, x30, [sp, #-48]!
  409804:	mov	x4, x0
  409808:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  40980c:	mov	x29, sp
  409810:	stp	x19, x20, [sp, #16]
  409814:	mov	x20, x2
  409818:	add	x2, x0, #0x8e0
  40981c:	ldrb	w0, [x0, #2272]
  409820:	ldurb	w3, [x1, #-1]
  409824:	cbz	w0, 409840 <wcrtomb@plt+0x6f20>
  409828:	ldrb	w0, [x2, #2]
  40982c:	cbz	w0, 409858 <wcrtomb@plt+0x6f38>
  409830:	add	x2, x2, w3, sxtw
  409834:	ldrsb	w0, [x2, #3]
  409838:	cmn	w0, #0x2
  40983c:	b.eq	409858 <wcrtomb@plt+0x6f38>  // b.none
  409840:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  409844:	add	x0, x0, #0x658
  409848:	ldp	x19, x20, [sp, #16]
  40984c:	ldrb	w0, [x0, w3, sxtw]
  409850:	ldp	x29, x30, [sp], #48
  409854:	ret
  409858:	mov	x3, x20
  40985c:	sub	x19, x1, #0x1
  409860:	mov	x2, x19
  409864:	add	x0, sp, #0x28
  409868:	mov	x1, #0x0                   	// #0
  40986c:	str	x4, [sp, #40]
  409870:	bl	409620 <wcrtomb@plt+0x6d00>
  409874:	sub	x0, x19, x0
  409878:	mov	x1, x20
  40987c:	mov	w2, #0x0                   	// #0
  409880:	bl	4093c0 <wcrtomb@plt+0x6aa0>
  409884:	ldp	x19, x20, [sp, #16]
  409888:	ldp	x29, x30, [sp], #48
  40988c:	ret
  409890:	mov	x0, #0x0                   	// #0
  409894:	ret
  409898:	mov	w0, #0x1                   	// #1
  40989c:	b	407290 <wcrtomb@plt+0x4970>
  4098a0:	stp	x29, x30, [sp, #-96]!
  4098a4:	mov	x29, sp
  4098a8:	stp	x23, x24, [sp, #48]
  4098ac:	mov	x24, x1
  4098b0:	stp	x21, x22, [sp, #32]
  4098b4:	mov	x21, x3
  4098b8:	stp	x25, x26, [sp, #64]
  4098bc:	mov	x26, x2
  4098c0:	mov	x25, x0
  4098c4:	stp	x27, x28, [sp, #80]
  4098c8:	bl	402300 <strlen@plt>
  4098cc:	ldr	x28, [x24]
  4098d0:	cbz	x28, 4099c0 <wcrtomb@plt+0x70a0>
  4098d4:	mov	x22, x0
  4098d8:	mov	w27, #0x0                   	// #0
  4098dc:	mov	x23, #0xffffffffffffffff    	// #-1
  4098e0:	stp	x19, x20, [sp, #16]
  4098e4:	mov	x20, x26
  4098e8:	mov	x19, #0x0                   	// #0
  4098ec:	b	409910 <wcrtomb@plt+0x6ff0>
  4098f0:	cbz	x26, 409994 <wcrtomb@plt+0x7074>
  4098f4:	bl	402660 <memcmp@plt>
  4098f8:	cmp	w0, #0x0
  4098fc:	csinc	w27, w27, wzr, eq  // eq = none
  409900:	add	x19, x19, #0x1
  409904:	add	x20, x20, x21
  409908:	ldr	x28, [x24, x19, lsl #3]
  40990c:	cbz	x28, 409968 <wcrtomb@plt+0x7048>
  409910:	mov	x1, x25
  409914:	mov	x2, x22
  409918:	mov	x0, x28
  40991c:	bl	4024c0 <strncmp@plt>
  409920:	mov	w1, w0
  409924:	mov	x0, x28
  409928:	cbnz	w1, 409900 <wcrtomb@plt+0x6fe0>
  40992c:	bl	402300 <strlen@plt>
  409930:	mov	x3, x0
  409934:	mov	x2, x21
  409938:	madd	x0, x23, x21, x26
  40993c:	mov	x1, x20
  409940:	cmp	x3, x22
  409944:	b.eq	40999c <wcrtomb@plt+0x707c>  // b.none
  409948:	cmn	x23, #0x1
  40994c:	b.ne	4098f0 <wcrtomb@plt+0x6fd0>  // b.any
  409950:	mov	x23, x19
  409954:	add	x19, x19, #0x1
  409958:	add	x20, x20, x21
  40995c:	ldr	x28, [x24, x19, lsl #3]
  409960:	cbnz	x28, 409910 <wcrtomb@plt+0x6ff0>
  409964:	nop
  409968:	ldp	x19, x20, [sp, #16]
  40996c:	cmp	w27, #0x0
  409970:	mov	x0, #0xfffffffffffffffe    	// #-2
  409974:	csel	x23, x23, x0, eq  // eq = none
  409978:	mov	x0, x23
  40997c:	ldp	x21, x22, [sp, #32]
  409980:	ldp	x23, x24, [sp, #48]
  409984:	ldp	x25, x26, [sp, #64]
  409988:	ldp	x27, x28, [sp, #80]
  40998c:	ldp	x29, x30, [sp], #96
  409990:	ret
  409994:	mov	w27, #0x1                   	// #1
  409998:	b	409900 <wcrtomb@plt+0x6fe0>
  40999c:	mov	x23, x19
  4099a0:	mov	x0, x23
  4099a4:	ldp	x19, x20, [sp, #16]
  4099a8:	ldp	x21, x22, [sp, #32]
  4099ac:	ldp	x23, x24, [sp, #48]
  4099b0:	ldp	x25, x26, [sp, #64]
  4099b4:	ldp	x27, x28, [sp, #80]
  4099b8:	ldp	x29, x30, [sp], #96
  4099bc:	ret
  4099c0:	mov	x23, #0xffffffffffffffff    	// #-1
  4099c4:	b	409978 <wcrtomb@plt+0x7058>
  4099c8:	stp	x29, x30, [sp, #-48]!
  4099cc:	cmn	x2, #0x1
  4099d0:	mov	x29, sp
  4099d4:	stp	x19, x20, [sp, #16]
  4099d8:	mov	x20, x0
  4099dc:	str	x21, [sp, #32]
  4099e0:	mov	x21, x1
  4099e4:	b.eq	409a44 <wcrtomb@plt+0x7124>  // b.none
  4099e8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  4099ec:	mov	w2, #0x5                   	// #5
  4099f0:	add	x1, x1, #0x348
  4099f4:	mov	x0, #0x0                   	// #0
  4099f8:	bl	4027f0 <dcgettext@plt>
  4099fc:	mov	x19, x0
  409a00:	mov	x2, x21
  409a04:	mov	w1, #0x8                   	// #8
  409a08:	mov	w0, #0x0                   	// #0
  409a0c:	bl	413738 <wcrtomb@plt+0x10e18>
  409a10:	mov	x1, x20
  409a14:	mov	x20, x0
  409a18:	mov	w0, #0x1                   	// #1
  409a1c:	bl	4139f8 <wcrtomb@plt+0x110d8>
  409a20:	mov	x3, x20
  409a24:	mov	x2, x19
  409a28:	ldp	x19, x20, [sp, #16]
  409a2c:	mov	x4, x0
  409a30:	ldr	x21, [sp, #32]
  409a34:	mov	w1, #0x0                   	// #0
  409a38:	ldp	x29, x30, [sp], #48
  409a3c:	mov	w0, #0x0                   	// #0
  409a40:	b	402330 <error@plt>
  409a44:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  409a48:	mov	w2, #0x5                   	// #5
  409a4c:	add	x1, x1, #0x328
  409a50:	mov	x0, #0x0                   	// #0
  409a54:	bl	4027f0 <dcgettext@plt>
  409a58:	mov	x19, x0
  409a5c:	b	409a00 <wcrtomb@plt+0x70e0>
  409a60:	stp	x29, x30, [sp, #-112]!
  409a64:	mov	x29, sp
  409a68:	stp	x19, x20, [sp, #16]
  409a6c:	mov	x20, x1
  409a70:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  409a74:	add	x1, x1, #0x368
  409a78:	stp	x21, x22, [sp, #32]
  409a7c:	mov	x22, x2
  409a80:	mov	w2, #0x5                   	// #5
  409a84:	stp	x23, x24, [sp, #48]
  409a88:	mov	x24, x0
  409a8c:	mov	x0, #0x0                   	// #0
  409a90:	bl	4027f0 <dcgettext@plt>
  409a94:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  409a98:	ldr	x1, [x1, #1088]
  409a9c:	bl	402800 <fputs_unlocked@plt>
  409aa0:	ldr	x21, [x24]
  409aa4:	cbz	x21, 409b20 <wcrtomb@plt+0x7200>
  409aa8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  409aac:	stp	x25, x26, [sp, #64]
  409ab0:	add	x25, x0, #0x440
  409ab4:	stp	x27, x28, [sp, #80]
  409ab8:	adrp	x27, 426000 <_obstack_memory_used@@Base+0xef38>
  409abc:	adrp	x28, 426000 <_obstack_memory_used@@Base+0xef38>
  409ac0:	add	x27, x27, #0x380
  409ac4:	add	x28, x28, #0x388
  409ac8:	mov	x23, #0x0                   	// #0
  409acc:	mov	x19, #0x0                   	// #0
  409ad0:	cbz	x19, 409ae8 <wcrtomb@plt+0x71c8>
  409ad4:	mov	x2, x22
  409ad8:	mov	x1, x20
  409adc:	mov	x0, x23
  409ae0:	bl	402660 <memcmp@plt>
  409ae4:	cbz	w0, 409b58 <wcrtomb@plt+0x7238>
  409ae8:	ldr	x26, [x25]
  409aec:	mov	x0, x21
  409af0:	bl	413a10 <wcrtomb@plt+0x110f0>
  409af4:	mov	x23, x20
  409af8:	mov	x2, x0
  409afc:	mov	x1, x27
  409b00:	mov	x0, x26
  409b04:	bl	4028d0 <fprintf@plt>
  409b08:	add	x19, x19, #0x1
  409b0c:	add	x20, x20, x22
  409b10:	ldr	x21, [x24, x19, lsl #3]
  409b14:	cbnz	x21, 409ad0 <wcrtomb@plt+0x71b0>
  409b18:	ldp	x25, x26, [sp, #64]
  409b1c:	ldp	x27, x28, [sp, #80]
  409b20:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  409b24:	ldr	x0, [x0, #1088]
  409b28:	ldp	x1, x2, [x0, #40]
  409b2c:	cmp	x1, x2
  409b30:	b.cs	409b80 <wcrtomb@plt+0x7260>  // b.hs, b.nlast
  409b34:	add	x2, x1, #0x1
  409b38:	str	x2, [x0, #40]
  409b3c:	mov	w0, #0xa                   	// #10
  409b40:	strb	w0, [x1]
  409b44:	ldp	x19, x20, [sp, #16]
  409b48:	ldp	x21, x22, [sp, #32]
  409b4c:	ldp	x23, x24, [sp, #48]
  409b50:	ldp	x29, x30, [sp], #112
  409b54:	ret
  409b58:	ldr	x3, [x25]
  409b5c:	mov	x0, x21
  409b60:	str	x3, [sp, #104]
  409b64:	bl	413a10 <wcrtomb@plt+0x110f0>
  409b68:	mov	x2, x0
  409b6c:	ldr	x3, [sp, #104]
  409b70:	mov	x1, x28
  409b74:	mov	x0, x3
  409b78:	bl	4028d0 <fprintf@plt>
  409b7c:	b	409b08 <wcrtomb@plt+0x71e8>
  409b80:	ldp	x19, x20, [sp, #16]
  409b84:	mov	w1, #0xa                   	// #10
  409b88:	ldp	x21, x22, [sp, #32]
  409b8c:	ldp	x23, x24, [sp, #48]
  409b90:	ldp	x29, x30, [sp], #112
  409b94:	b	402620 <__overflow@plt>
  409b98:	stp	x29, x30, [sp, #-64]!
  409b9c:	mov	x29, sp
  409ba0:	stp	x19, x20, [sp, #16]
  409ba4:	mov	x19, x2
  409ba8:	mov	x20, x3
  409bac:	stp	x21, x22, [sp, #32]
  409bb0:	mov	x22, x1
  409bb4:	mov	x21, x4
  409bb8:	mov	x3, x4
  409bbc:	mov	x2, x20
  409bc0:	mov	x1, x19
  409bc4:	stp	x23, x24, [sp, #48]
  409bc8:	mov	x24, x0
  409bcc:	mov	x23, x5
  409bd0:	mov	x0, x22
  409bd4:	bl	4098a0 <wcrtomb@plt+0x6f80>
  409bd8:	tbnz	x0, #63, 409bf0 <wcrtomb@plt+0x72d0>
  409bdc:	ldp	x19, x20, [sp, #16]
  409be0:	ldp	x21, x22, [sp, #32]
  409be4:	ldp	x23, x24, [sp, #48]
  409be8:	ldp	x29, x30, [sp], #64
  409bec:	ret
  409bf0:	mov	x2, x0
  409bf4:	mov	x1, x22
  409bf8:	mov	x0, x24
  409bfc:	bl	4099c8 <wcrtomb@plt+0x70a8>
  409c00:	mov	x0, x19
  409c04:	mov	x2, x21
  409c08:	mov	x1, x20
  409c0c:	bl	409a60 <wcrtomb@plt+0x7140>
  409c10:	blr	x23
  409c14:	mov	x0, #0xffffffffffffffff    	// #-1
  409c18:	b	409bdc <wcrtomb@plt+0x72bc>
  409c1c:	nop
  409c20:	stp	x29, x30, [sp, #-64]!
  409c24:	mov	x29, sp
  409c28:	stp	x21, x22, [sp, #32]
  409c2c:	ldr	x22, [x1]
  409c30:	cbz	x22, 409c78 <wcrtomb@plt+0x7358>
  409c34:	mov	x21, x3
  409c38:	stp	x19, x20, [sp, #16]
  409c3c:	mov	x19, x2
  409c40:	add	x20, x1, #0x8
  409c44:	str	x23, [sp, #48]
  409c48:	mov	x23, x0
  409c4c:	b	409c5c <wcrtomb@plt+0x733c>
  409c50:	ldr	x22, [x20], #8
  409c54:	add	x19, x19, x21
  409c58:	cbz	x22, 409c70 <wcrtomb@plt+0x7350>
  409c5c:	mov	x2, x21
  409c60:	mov	x1, x19
  409c64:	mov	x0, x23
  409c68:	bl	402660 <memcmp@plt>
  409c6c:	cbnz	w0, 409c50 <wcrtomb@plt+0x7330>
  409c70:	ldp	x19, x20, [sp, #16]
  409c74:	ldr	x23, [sp, #48]
  409c78:	mov	x0, x22
  409c7c:	ldp	x21, x22, [sp, #32]
  409c80:	ldp	x29, x30, [sp], #64
  409c84:	ret
  409c88:	ret
  409c8c:	nop
  409c90:	stp	x29, x30, [sp, #-48]!
  409c94:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  409c98:	mov	w0, #0x0                   	// #0
  409c9c:	mov	x29, sp
  409ca0:	stp	x19, x20, [sp, #16]
  409ca4:	add	x19, x1, #0x760
  409ca8:	ldr	x1, [x1, #1888]
  409cac:	str	x21, [sp, #32]
  409cb0:	blr	x1
  409cb4:	ldr	x20, [x19, #8]
  409cb8:	ldr	x21, [x19, #16]
  409cbc:	ldr	x0, [x19, #16]
  409cc0:	bl	402300 <strlen@plt>
  409cc4:	mov	x2, x0
  409cc8:	mov	x1, x21
  409ccc:	mov	w0, #0x2                   	// #2
  409cd0:	bl	4025d0 <write@plt>
  409cd4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  409cd8:	add	x1, x1, #0x390
  409cdc:	mov	x2, #0x2                   	// #2
  409ce0:	mov	w0, w2
  409ce4:	bl	4025d0 <write@plt>
  409ce8:	mov	x0, x20
  409cec:	bl	402300 <strlen@plt>
  409cf0:	mov	x1, x20
  409cf4:	mov	x2, x0
  409cf8:	mov	w0, #0x2                   	// #2
  409cfc:	bl	4025d0 <write@plt>
  409d00:	mov	x2, #0x1                   	// #1
  409d04:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  409d08:	mov	w0, #0x2                   	// #2
  409d0c:	add	x1, x1, #0x3f0
  409d10:	bl	4025d0 <write@plt>
  409d14:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  409d18:	ldr	w0, [x0, #976]
  409d1c:	bl	4022e0 <_exit@plt>
  409d20:	stp	x29, x30, [sp, #-208]!
  409d24:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x26f38>
  409d28:	add	x2, x2, #0x780
  409d2c:	mov	x3, #0x4000                	// #16384
  409d30:	mov	x29, sp
  409d34:	mov	x1, #0x0                   	// #0
  409d38:	stp	x19, x20, [sp, #16]
  409d3c:	mov	x19, x0
  409d40:	add	x0, sp, #0x20
  409d44:	str	x2, [sp, #32]
  409d48:	str	wzr, [sp, #40]
  409d4c:	str	x3, [sp, #48]
  409d50:	bl	4022b0 <sigaltstack@plt>
  409d54:	cbnz	w0, 409de4 <wcrtomb@plt+0x74c4>
  409d58:	cmp	x19, #0x0
  409d5c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  409d60:	adrp	x0, 409000 <wcrtomb@plt+0x66e0>
  409d64:	add	x0, x0, #0xc88
  409d68:	csel	x19, x0, x19, eq  // eq = none
  409d6c:	add	x20, x1, #0x760
  409d70:	str	x19, [x1, #1888]
  409d74:	mov	w2, #0x5                   	// #5
  409d78:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  409d7c:	mov	x0, #0x0                   	// #0
  409d80:	add	x1, x1, #0x398
  409d84:	bl	4027f0 <dcgettext@plt>
  409d88:	mov	x3, x0
  409d8c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  409d90:	add	x1, x1, #0x3a8
  409d94:	mov	w2, #0x5                   	// #5
  409d98:	mov	x0, #0x0                   	// #0
  409d9c:	str	x3, [x20, #24]
  409da0:	bl	4027f0 <dcgettext@plt>
  409da4:	str	x0, [x20, #8]
  409da8:	bl	410858 <wcrtomb@plt+0xdf38>
  409dac:	mov	x1, x0
  409db0:	add	x0, sp, #0x40
  409db4:	str	x1, [x20, #16]
  409db8:	bl	4024b0 <sigemptyset@plt>
  409dbc:	adrp	x3, 409000 <wcrtomb@plt+0x66e0>
  409dc0:	mov	w4, #0x4                   	// #4
  409dc4:	add	x3, x3, #0xc90
  409dc8:	movk	w4, #0xc800, lsl #16
  409dcc:	add	x1, sp, #0x38
  409dd0:	mov	x2, #0x0                   	// #0
  409dd4:	mov	w0, #0xb                   	// #11
  409dd8:	str	x3, [sp, #56]
  409ddc:	str	w4, [sp, #192]
  409de0:	bl	402590 <sigaction@plt>
  409de4:	ldp	x19, x20, [sp, #16]
  409de8:	ldp	x29, x30, [sp], #208
  409dec:	ret
  409df0:	cmp	x0, x1
  409df4:	b.eq	409e5c <wcrtomb@plt+0x753c>  // b.none
  409df8:	mov	x4, #0x0                   	// #0
  409dfc:	nop
  409e00:	ldrb	w3, [x0, x4]
  409e04:	ldrb	w2, [x1, x4]
  409e08:	sub	w6, w3, #0x41
  409e0c:	mov	w5, w3
  409e10:	cmp	w6, #0x19
  409e14:	sub	w7, w2, #0x41
  409e18:	mov	w6, w2
  409e1c:	b.hi	409e50 <wcrtomb@plt+0x7530>  // b.pmore
  409e20:	add	w5, w3, #0x20
  409e24:	cmp	w7, #0x19
  409e28:	and	w3, w5, #0xff
  409e2c:	b.hi	409e3c <wcrtomb@plt+0x751c>  // b.pmore
  409e30:	add	w6, w2, #0x20
  409e34:	and	w2, w6, #0xff
  409e38:	cbz	w5, 409e48 <wcrtomb@plt+0x7528>
  409e3c:	add	x4, x4, #0x1
  409e40:	cmp	w3, w2
  409e44:	b.eq	409e00 <wcrtomb@plt+0x74e0>  // b.none
  409e48:	sub	w0, w5, w6
  409e4c:	ret
  409e50:	cmp	w7, #0x19
  409e54:	b.hi	409e38 <wcrtomb@plt+0x7518>  // b.pmore
  409e58:	b	409e30 <wcrtomb@plt+0x7510>
  409e5c:	mov	w0, #0x0                   	// #0
  409e60:	ret
  409e64:	nop
  409e68:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3b98>
  409e6c:	str	x0, [x1, #1920]
  409e70:	ret
  409e74:	nop
  409e78:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3b98>
  409e7c:	strb	w0, [x1, #1928]
  409e80:	ret
  409e84:	nop
  409e88:	stp	x29, x30, [sp, #-48]!
  409e8c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  409e90:	mov	x29, sp
  409e94:	ldr	x0, [x0, #1112]
  409e98:	bl	4239d8 <_obstack_memory_used@@Base+0xc910>
  409e9c:	cbz	w0, 409ed4 <wcrtomb@plt+0x75b4>
  409ea0:	stp	x19, x20, [sp, #16]
  409ea4:	adrp	x20, 442000 <__progname@@GLIBC_2.17+0x3b98>
  409ea8:	add	x0, x20, #0x780
  409eac:	str	x21, [sp, #32]
  409eb0:	ldrb	w21, [x0, #8]
  409eb4:	bl	402890 <__errno_location@plt>
  409eb8:	mov	x19, x0
  409ebc:	cbz	w21, 409eec <wcrtomb@plt+0x75cc>
  409ec0:	ldr	w0, [x0]
  409ec4:	cmp	w0, #0x20
  409ec8:	b.ne	409eec <wcrtomb@plt+0x75cc>  // b.any
  409ecc:	ldp	x19, x20, [sp, #16]
  409ed0:	ldr	x21, [sp, #32]
  409ed4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  409ed8:	ldr	x0, [x0, #1088]
  409edc:	bl	4239d8 <_obstack_memory_used@@Base+0xc910>
  409ee0:	cbnz	w0, 409f40 <wcrtomb@plt+0x7620>
  409ee4:	ldp	x29, x30, [sp], #48
  409ee8:	ret
  409eec:	mov	w2, #0x5                   	// #5
  409ef0:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xcf38>
  409ef4:	mov	x0, #0x0                   	// #0
  409ef8:	add	x1, x1, #0x340
  409efc:	bl	4027f0 <dcgettext@plt>
  409f00:	ldr	x2, [x20, #1920]
  409f04:	mov	x20, x0
  409f08:	cbz	x2, 409f4c <wcrtomb@plt+0x762c>
  409f0c:	ldr	w19, [x19]
  409f10:	mov	x0, x2
  409f14:	bl	413880 <wcrtomb@plt+0x10f60>
  409f18:	mov	x3, x0
  409f1c:	adrp	x2, 424000 <_obstack_memory_used@@Base+0xcf38>
  409f20:	mov	w1, w19
  409f24:	mov	x4, x20
  409f28:	add	x2, x2, #0x330
  409f2c:	mov	w0, #0x0                   	// #0
  409f30:	bl	402330 <error@plt>
  409f34:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  409f38:	ldr	w0, [x0, #976]
  409f3c:	bl	4022e0 <_exit@plt>
  409f40:	stp	x19, x20, [sp, #16]
  409f44:	str	x21, [sp, #32]
  409f48:	b	409f34 <wcrtomb@plt+0x7614>
  409f4c:	ldr	w1, [x19]
  409f50:	mov	x3, x0
  409f54:	adrp	x2, 424000 <_obstack_memory_used@@Base+0xcf38>
  409f58:	mov	w0, #0x0                   	// #0
  409f5c:	add	x2, x2, #0x1b8
  409f60:	bl	402330 <error@plt>
  409f64:	b	409f34 <wcrtomb@plt+0x7614>
  409f68:	stp	x29, x30, [sp, #-48]!
  409f6c:	mov	x29, sp
  409f70:	stp	x21, x22, [sp, #32]
  409f74:	mov	x21, #0x0                   	// #0
  409f78:	ldr	x22, [x0, #144]
  409f7c:	stp	x19, x20, [sp, #16]
  409f80:	mov	x20, x0
  409f84:	add	x0, x22, x1, lsl #3
  409f88:	ldur	x2, [x0, #-8]
  409f8c:	sub	x3, x2, #0x105
  409f90:	cmp	x2, #0x103
  409f94:	b.gt	409fb4 <wcrtomb@plt+0x7694>
  409f98:	cmp	x2, #0x100
  409f9c:	b.gt	409fdc <wcrtomb@plt+0x76bc>
  409fa0:	add	x0, x21, #0x1
  409fa4:	ldp	x19, x20, [sp, #16]
  409fa8:	ldp	x21, x22, [sp, #32]
  409fac:	ldp	x29, x30, [sp], #48
  409fb0:	ret
  409fb4:	sub	x19, x1, #0x1
  409fb8:	mov	x0, x20
  409fbc:	mov	x1, x19
  409fc0:	cmp	x3, #0x1
  409fc4:	b.hi	409fa0 <wcrtomb@plt+0x7680>  // b.pmore
  409fc8:	bl	409f68 <wcrtomb@plt+0x7648>
  409fcc:	add	x2, x0, #0x1
  409fd0:	sub	x1, x19, x0
  409fd4:	add	x21, x21, x2
  409fd8:	b	409f84 <wcrtomb@plt+0x7664>
  409fdc:	sub	x1, x1, #0x1
  409fe0:	add	x21, x21, #0x1
  409fe4:	b	409f84 <wcrtomb@plt+0x7664>
  409fe8:	ldr	x2, [x0]
  409fec:	mov	w3, #0xffffffff            	// #-1
  409ff0:	ldr	x1, [x1]
  409ff4:	cmp	x2, x1
  409ff8:	cset	w0, gt
  409ffc:	csel	w0, w0, w3, ge  // ge = tcont
  40a000:	ret
  40a004:	nop
  40a008:	mov	x0, x1
  40a00c:	mov	w1, #0x1                   	// #1
  40a010:	strb	w1, [x5]
  40a014:	ret
  40a018:	stp	x29, x30, [sp, #-64]!
  40a01c:	mov	x29, sp
  40a020:	stp	x19, x20, [sp, #16]
  40a024:	mov	x19, x3
  40a028:	mov	x20, x0
  40a02c:	str	x21, [sp, #32]
  40a030:	ldrb	w3, [x1]
  40a034:	add	x3, x19, x3, lsl #2
  40a038:	ldr	w21, [x3, #1308]
  40a03c:	cmn	w21, #0x1
  40a040:	b.eq	40a05c <wcrtomb@plt+0x773c>  // b.none
  40a044:	str	w21, [x20]
  40a048:	mov	w0, #0x1                   	// #1
  40a04c:	ldp	x19, x20, [sp, #16]
  40a050:	ldr	x21, [sp, #32]
  40a054:	ldp	x29, x30, [sp], #64
  40a058:	ret
  40a05c:	add	x3, x19, #0x110
  40a060:	add	x0, sp, #0x3c
  40a064:	bl	416cf8 <wcrtomb@plt+0x143d8>
  40a068:	sub	x1, x0, #0x1
  40a06c:	cmn	x1, #0x4
  40a070:	b.hi	40a08c <wcrtomb@plt+0x776c>  // b.pmore
  40a074:	ldr	w1, [sp, #60]
  40a078:	str	w1, [x20]
  40a07c:	ldp	x19, x20, [sp, #16]
  40a080:	ldr	x21, [sp, #32]
  40a084:	ldp	x29, x30, [sp], #64
  40a088:	ret
  40a08c:	str	xzr, [x19, #272]
  40a090:	b	40a044 <wcrtomb@plt+0x7724>
  40a094:	nop
  40a098:	mov	x3, x0
  40a09c:	stp	x29, x30, [sp, #-32]!
  40a0a0:	mov	x29, sp
  40a0a4:	ldp	x1, x2, [x3, #32]
  40a0a8:	str	x19, [sp, #16]
  40a0ac:	mov	x19, x0
  40a0b0:	add	x0, x0, #0x48
  40a0b4:	bl	40a018 <wcrtomb@plt+0x76f8>
  40a0b8:	sxtw	x1, w0
  40a0bc:	cmp	w1, #0x1
  40a0c0:	b.ne	40a0e8 <wcrtomb@plt+0x77c8>  // b.any
  40a0c4:	ldr	x2, [x19, #32]
  40a0c8:	ldrb	w0, [x2]
  40a0cc:	ldr	x3, [x19, #40]
  40a0d0:	add	x2, x2, x1
  40a0d4:	sub	x1, x3, x1
  40a0d8:	stp	x2, x1, [x19, #32]
  40a0dc:	ldr	x19, [sp, #16]
  40a0e0:	ldp	x29, x30, [sp], #32
  40a0e4:	ret
  40a0e8:	mov	w0, #0xffffffff            	// #-1
  40a0ec:	ldr	x2, [x19, #32]
  40a0f0:	b	40a0cc <wcrtomb@plt+0x77ac>
  40a0f4:	nop
  40a0f8:	stp	x29, x30, [sp, #-32]!
  40a0fc:	mov	x29, sp
  40a100:	ldr	x6, [x1]
  40a104:	stp	x19, x20, [sp, #16]
  40a108:	mov	x20, x1
  40a10c:	asr	x19, x6, #1
  40a110:	adds	x19, x6, x19
  40a114:	b.vs	40a1b4 <wcrtomb@plt+0x7894>
  40a118:	cmn	x3, #0x1
  40a11c:	b.eq	40a128 <wcrtomb@plt+0x7808>  // b.none
  40a120:	cmp	x19, x3
  40a124:	csel	x19, x19, x3, le
  40a128:	mul	x1, x19, x4
  40a12c:	smulh	x5, x19, x4
  40a130:	cmp	x5, x1, asr #63
  40a134:	b.ne	40a1a8 <wcrtomb@plt+0x7888>  // b.any
  40a138:	cmp	x1, #0x7f
  40a13c:	b.le	40a18c <wcrtomb@plt+0x786c>
  40a140:	cbz	x0, 40a1a0 <wcrtomb@plt+0x7880>
  40a144:	nop
  40a148:	sub	x5, x19, x6
  40a14c:	cmp	x5, x2
  40a150:	b.ge	40a178 <wcrtomb@plt+0x7858>  // b.tcont
  40a154:	adds	x19, x6, x2
  40a158:	b.vs	40a1b0 <wcrtomb@plt+0x7890>
  40a15c:	cmp	x19, x3
  40a160:	ccmn	x3, #0x1, #0x4, gt
  40a164:	b.ne	40a1b0 <wcrtomb@plt+0x7890>  // b.any
  40a168:	mul	x1, x19, x4
  40a16c:	smulh	x4, x19, x4
  40a170:	cmp	x4, x1, asr #63
  40a174:	b.ne	40a1b0 <wcrtomb@plt+0x7890>  // b.any
  40a178:	bl	4140e0 <wcrtomb@plt+0x117c0>
  40a17c:	str	x19, [x20]
  40a180:	ldp	x19, x20, [sp, #16]
  40a184:	ldp	x29, x30, [sp], #32
  40a188:	ret
  40a18c:	mov	x5, #0x80                  	// #128
  40a190:	udiv	x19, x5, x4
  40a194:	msub	x1, x19, x4, x5
  40a198:	sub	x1, x5, x1
  40a19c:	cbnz	x0, 40a148 <wcrtomb@plt+0x7828>
  40a1a0:	str	xzr, [x20]
  40a1a4:	b	40a148 <wcrtomb@plt+0x7828>
  40a1a8:	mov	x5, #0x7fffffffffffffff    	// #9223372036854775807
  40a1ac:	b	40a190 <wcrtomb@plt+0x7870>
  40a1b0:	bl	4142c0 <wcrtomb@plt+0x119a0>
  40a1b4:	cmn	x3, #0x1
  40a1b8:	b.eq	40a1a8 <wcrtomb@plt+0x7888>  // b.none
  40a1bc:	mov	x19, x3
  40a1c0:	b	40a128 <wcrtomb@plt+0x7808>
  40a1c4:	nop
  40a1c8:	stp	x29, x30, [sp, #-48]!
  40a1cc:	mov	x29, sp
  40a1d0:	stp	x19, x20, [sp, #16]
  40a1d4:	mov	x19, x0
  40a1d8:	mov	x20, x1
  40a1dc:	ldp	x1, x0, [x0, #152]
  40a1e0:	str	x21, [sp, #32]
  40a1e4:	and	w21, w2, #0xff
  40a1e8:	cmp	x0, x1
  40a1ec:	b.eq	40a2a0 <wcrtomb@plt+0x7980>  // b.none
  40a1f0:	ldrb	w0, [x19, #1048]
  40a1f4:	cbz	w0, 40a270 <wcrtomb@plt+0x7950>
  40a1f8:	ldr	x0, [x19, #280]
  40a1fc:	strb	w21, [x0, x1]
  40a200:	ldr	x0, [x19, #144]
  40a204:	cmp	x20, #0x106
  40a208:	ldr	x1, [x19, #152]
  40a20c:	add	x2, x1, #0x1
  40a210:	str	x2, [x19, #152]
  40a214:	str	x20, [x0, x1, lsl #3]
  40a218:	b.gt	40a288 <wcrtomb@plt+0x7968>
  40a21c:	cmp	x20, #0x104
  40a220:	b.gt	40a2e0 <wcrtomb@plt+0x79c0>
  40a224:	cmp	x20, #0x100
  40a228:	b.eq	40a244 <wcrtomb@plt+0x7924>  // b.none
  40a22c:	sub	x20, x20, #0x101
  40a230:	cmp	x20, #0x2
  40a234:	b.ls	40a298 <wcrtomb@plt+0x7978>  // b.plast
  40a238:	ldr	x0, [x19, #176]
  40a23c:	add	x0, x0, #0x1
  40a240:	str	x0, [x19, #176]
  40a244:	ldr	x0, [x19, #136]
  40a248:	add	x0, x0, #0x1
  40a24c:	str	x0, [x19, #136]
  40a250:	ldr	x1, [x19, #168]
  40a254:	cmp	x1, x0
  40a258:	b.ge	40a260 <wcrtomb@plt+0x7940>  // b.tcont
  40a25c:	str	x0, [x19, #168]
  40a260:	ldp	x19, x20, [sp, #16]
  40a264:	ldr	x21, [sp, #32]
  40a268:	ldp	x29, x30, [sp], #48
  40a26c:	ret
  40a270:	ldr	x0, [x19, #144]
  40a274:	add	x2, x1, #0x1
  40a278:	str	x2, [x19, #152]
  40a27c:	cmp	x20, #0x106
  40a280:	str	x20, [x0, x1, lsl #3]
  40a284:	b.le	40a21c <wcrtomb@plt+0x78fc>
  40a288:	cmp	x20, #0x112
  40a28c:	b.ne	40a238 <wcrtomb@plt+0x7918>  // b.any
  40a290:	strb	wzr, [x19, #192]
  40a294:	b	40a238 <wcrtomb@plt+0x7918>
  40a298:	ldr	x0, [x19, #136]
  40a29c:	b	40a250 <wcrtomb@plt+0x7930>
  40a2a0:	ldr	x0, [x19, #144]
  40a2a4:	add	x1, x19, #0xa0
  40a2a8:	mov	x4, #0x8                   	// #8
  40a2ac:	mov	x3, #0xffffffffffffffff    	// #-1
  40a2b0:	mov	x2, #0x1                   	// #1
  40a2b4:	bl	40a0f8 <wcrtomb@plt+0x77d8>
  40a2b8:	str	x0, [x19, #144]
  40a2bc:	ldrb	w1, [x19, #1048]
  40a2c0:	cbz	w1, 40a204 <wcrtomb@plt+0x78e4>
  40a2c4:	ldr	x1, [x19, #160]
  40a2c8:	ldr	x0, [x19, #280]
  40a2cc:	tbnz	x1, #63, 40a2f0 <wcrtomb@plt+0x79d0>
  40a2d0:	bl	4140e0 <wcrtomb@plt+0x117c0>
  40a2d4:	str	x0, [x19, #280]
  40a2d8:	ldr	x1, [x19, #152]
  40a2dc:	b	40a1f0 <wcrtomb@plt+0x78d0>
  40a2e0:	ldr	x0, [x19, #136]
  40a2e4:	sub	x0, x0, #0x1
  40a2e8:	str	x0, [x19, #136]
  40a2ec:	b	40a250 <wcrtomb@plt+0x7930>
  40a2f0:	bl	4142c0 <wcrtomb@plt+0x119a0>
  40a2f4:	nop
  40a2f8:	stp	x29, x30, [sp, #-64]!
  40a2fc:	mov	x29, sp
  40a300:	stp	x19, x20, [sp, #16]
  40a304:	ldr	x2, [x0, #304]
  40a308:	ldr	x19, [x0, #352]
  40a30c:	cmp	x2, x19
  40a310:	b.le	40a42c <wcrtomb@plt+0x7b0c>
  40a314:	mov	x20, x0
  40a318:	stp	x21, x22, [sp, #32]
  40a31c:	mov	x5, #0x0                   	// #0
  40a320:	ldr	x0, [x0, #368]
  40a324:	cbz	x0, 40a330 <wcrtomb@plt+0x7a10>
  40a328:	sub	x0, x0, #0x10
  40a32c:	add	x5, x19, #0x2
  40a330:	add	x1, sp, #0x38
  40a334:	sub	x2, x2, x19
  40a338:	mov	x4, #0x8                   	// #8
  40a33c:	mov	x3, #0xffffffffffffffff    	// #-1
  40a340:	str	x5, [sp, #56]
  40a344:	bl	40a0f8 <wcrtomb@plt+0x77d8>
  40a348:	ldr	x22, [sp, #56]
  40a34c:	mov	x1, x0
  40a350:	str	xzr, [x0, #8]
  40a354:	sub	x22, x22, #0x2
  40a358:	str	xzr, [x1], #16
  40a35c:	cmp	xzr, x22, lsr #61
  40a360:	str	x22, [x20, #352]
  40a364:	str	x1, [x20, #368]
  40a368:	lsl	x21, x22, #3
  40a36c:	cset	x1, ne  // ne = any
  40a370:	ldr	x0, [x20, #376]
  40a374:	tbnz	x22, #60, 40a440 <wcrtomb@plt+0x7b20>
  40a378:	cbnz	x1, 40a440 <wcrtomb@plt+0x7b20>
  40a37c:	mov	x1, x21
  40a380:	bl	4140e0 <wcrtomb@plt+0x117c0>
  40a384:	str	x0, [x20, #376]
  40a388:	ldr	x0, [x20, #384]
  40a38c:	tbnz	x22, #63, 40a440 <wcrtomb@plt+0x7b20>
  40a390:	mov	x1, x22
  40a394:	bl	4140e0 <wcrtomb@plt+0x117c0>
  40a398:	mov	x1, x0
  40a39c:	str	x1, [x20, #384]
  40a3a0:	ldr	x0, [x20, #392]
  40a3a4:	mov	x1, x21
  40a3a8:	bl	4140e0 <wcrtomb@plt+0x117c0>
  40a3ac:	str	x0, [x20, #392]
  40a3b0:	ldrb	w1, [x20, #1048]
  40a3b4:	cbz	w1, 40a3f0 <wcrtomb@plt+0x7ad0>
  40a3b8:	ldr	x2, [sp, #56]
  40a3bc:	ldr	x0, [x20, #432]
  40a3c0:	lsl	x1, x2, #3
  40a3c4:	cmp	x0, #0x0
  40a3c8:	sub	x3, x0, #0x10
  40a3cc:	csel	x0, x3, x0, ne  // ne = any
  40a3d0:	cmp	xzr, x2, lsr #61
  40a3d4:	cset	x3, ne  // ne = any
  40a3d8:	tbnz	x2, #60, 40a440 <wcrtomb@plt+0x7b20>
  40a3dc:	cbnz	x3, 40a440 <wcrtomb@plt+0x7b20>
  40a3e0:	bl	4140e0 <wcrtomb@plt+0x117c0>
  40a3e4:	cbz	x19, 40a438 <wcrtomb@plt+0x7b18>
  40a3e8:	add	x0, x0, #0x10
  40a3ec:	str	x0, [x20, #432]
  40a3f0:	cmp	x22, x19
  40a3f4:	b.le	40a428 <wcrtomb@plt+0x7b08>
  40a3f8:	ldp	x2, x0, [x20, #368]
  40a3fc:	lsl	x1, x19, #3
  40a400:	ldrb	w3, [x20, #1048]
  40a404:	nop
  40a408:	str	xzr, [x2, x1]
  40a40c:	str	xzr, [x0, x1]
  40a410:	cbz	w3, 40a41c <wcrtomb@plt+0x7afc>
  40a414:	ldr	x4, [x20, #432]
  40a418:	str	xzr, [x4, x1]
  40a41c:	add	x1, x1, #0x8
  40a420:	cmp	x21, x1
  40a424:	b.ne	40a408 <wcrtomb@plt+0x7ae8>  // b.any
  40a428:	ldp	x21, x22, [sp, #32]
  40a42c:	ldp	x19, x20, [sp, #16]
  40a430:	ldp	x29, x30, [sp], #64
  40a434:	ret
  40a438:	stp	xzr, xzr, [x0]
  40a43c:	b	40a3e8 <wcrtomb@plt+0x7ac8>
  40a440:	bl	4142c0 <wcrtomb@plt+0x119a0>
  40a444:	nop
  40a448:	stp	x29, x30, [sp, #-32]!
  40a44c:	mov	x29, sp
  40a450:	stp	x19, x20, [sp, #16]
  40a454:	mov	w19, w0
  40a458:	mov	x20, x1
  40a45c:	bl	402560 <__ctype_toupper_loc@plt>
  40a460:	add	w1, w19, #0x80
  40a464:	cmp	w1, #0x17f
  40a468:	ldr	x5, [x0]
  40a46c:	b.hi	40a474 <wcrtomb@plt+0x7b54>  // b.pmore
  40a470:	ldr	w19, [x5, w19, sxtw #2]
  40a474:	mov	x2, #0x0                   	// #0
  40a478:	mov	x1, #0x1                   	// #1
  40a47c:	nop
  40a480:	ldr	w3, [x5, x2, lsl #2]
  40a484:	cmp	w19, w3
  40a488:	b.ne	40a4a0 <wcrtomb@plt+0x7b80>  // b.any
  40a48c:	lsr	w0, w2, #6
  40a490:	lsl	x3, x1, x2
  40a494:	ldr	x4, [x20, x0, lsl #3]
  40a498:	orr	x3, x4, x3
  40a49c:	str	x3, [x20, x0, lsl #3]
  40a4a0:	add	x2, x2, #0x1
  40a4a4:	cmp	x2, #0x100
  40a4a8:	b.ne	40a480 <wcrtomb@plt+0x7b60>  // b.any
  40a4ac:	ldp	x19, x20, [sp, #16]
  40a4b0:	ldp	x29, x30, [sp], #32
  40a4b4:	ret
  40a4b8:	stp	x29, x30, [sp, #-96]!
  40a4bc:	mov	x29, sp
  40a4c0:	add	x2, sp, #0x48
  40a4c4:	stp	x19, x20, [sp, #16]
  40a4c8:	mov	x20, x0
  40a4cc:	add	x0, sp, #0x50
  40a4d0:	str	xzr, [sp, #72]
  40a4d4:	bl	402920 <wcrtomb@plt>
  40a4d8:	cmn	x0, #0x1
  40a4dc:	b.eq	40a564 <wcrtomb@plt+0x7c44>  // b.none
  40a4e0:	stp	x21, x22, [sp, #32]
  40a4e4:	cmp	w0, #0x1
  40a4e8:	ldrb	w1, [sp, #80]
  40a4ec:	str	x23, [sp, #48]
  40a4f0:	mov	x22, x0
  40a4f4:	mov	w23, w0
  40a4f8:	b.eq	40a584 <wcrtomb@plt+0x7c64>  // b.none
  40a4fc:	mov	x0, x20
  40a500:	mov	w2, #0x1                   	// #1
  40a504:	bl	40a1c8 <wcrtomb@plt+0x78a8>
  40a508:	cmp	w22, #0x1
  40a50c:	b.le	40a550 <wcrtomb@plt+0x7c30>
  40a510:	sub	w22, w22, #0x1
  40a514:	add	x21, sp, #0x51
  40a518:	mov	w19, #0x1                   	// #1
  40a51c:	nop
  40a520:	cmp	w22, w19
  40a524:	ldrb	w1, [x21], #1
  40a528:	cset	w2, eq  // eq = none
  40a52c:	mov	x0, x20
  40a530:	add	w19, w19, #0x1
  40a534:	ubfiz	w2, w2, #1, #7
  40a538:	bl	40a1c8 <wcrtomb@plt+0x78a8>
  40a53c:	mov	x0, x20
  40a540:	mov	x1, #0x105                 	// #261
  40a544:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40a548:	cmp	w23, w19
  40a54c:	b.ne	40a520 <wcrtomb@plt+0x7c00>  // b.any
  40a550:	ldp	x21, x22, [sp, #32]
  40a554:	ldr	x23, [sp, #48]
  40a558:	ldp	x19, x20, [sp, #16]
  40a55c:	ldp	x29, x30, [sp], #96
  40a560:	ret
  40a564:	mov	x0, x20
  40a568:	mov	w2, #0x3                   	// #3
  40a56c:	mov	x1, #0x0                   	// #0
  40a570:	strb	wzr, [sp, #80]
  40a574:	bl	40a1c8 <wcrtomb@plt+0x78a8>
  40a578:	ldp	x19, x20, [sp, #16]
  40a57c:	ldp	x29, x30, [sp], #96
  40a580:	ret
  40a584:	mov	x0, x20
  40a588:	mov	w2, #0x3                   	// #3
  40a58c:	bl	40a1c8 <wcrtomb@plt+0x78a8>
  40a590:	ldp	x21, x22, [sp, #32]
  40a594:	ldr	x23, [sp, #48]
  40a598:	b	40a558 <wcrtomb@plt+0x7c38>
  40a59c:	nop
  40a5a0:	stp	x29, x30, [sp, #-32]!
  40a5a4:	mov	x29, sp
  40a5a8:	ldrb	w2, [x0, #1048]
  40a5ac:	stp	x19, x20, [sp, #16]
  40a5b0:	mov	x19, x0
  40a5b4:	cmp	x1, #0x113
  40a5b8:	cset	w0, eq  // eq = none
  40a5bc:	tst	w0, w2
  40a5c0:	b.eq	40a644 <wcrtomb@plt+0x7d24>  // b.none
  40a5c4:	ldr	x0, [x19, #104]
  40a5c8:	cmp	x0, #0x0
  40a5cc:	b.le	40a664 <wcrtomb@plt+0x7d44>
  40a5d0:	ldr	x1, [x19, #96]
  40a5d4:	mov	x0, x19
  40a5d8:	mov	x20, #0x0                   	// #0
  40a5dc:	add	x20, x20, #0x1
  40a5e0:	ldr	w1, [x1]
  40a5e4:	bl	40a4b8 <wcrtomb@plt+0x7b98>
  40a5e8:	ldr	x1, [x19, #104]
  40a5ec:	mov	x0, x19
  40a5f0:	cmp	x1, x20
  40a5f4:	b.le	40a624 <wcrtomb@plt+0x7d04>
  40a5f8:	ldr	x1, [x19, #96]
  40a5fc:	ldr	w1, [x1, x20, lsl #2]
  40a600:	add	x20, x20, #0x1
  40a604:	bl	40a4b8 <wcrtomb@plt+0x7b98>
  40a608:	mov	x0, x19
  40a60c:	mov	x1, #0x106                 	// #262
  40a610:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40a614:	ldr	x1, [x19, #104]
  40a618:	mov	x0, x19
  40a61c:	cmp	x1, x20
  40a620:	b.gt	40a5f8 <wcrtomb@plt+0x7cd8>
  40a624:	ldr	x1, [x19, #80]
  40a628:	str	xzr, [x19, #104]
  40a62c:	cmn	x1, #0x1
  40a630:	b.eq	40a658 <wcrtomb@plt+0x7d38>  // b.none
  40a634:	add	x1, x1, #0x114
  40a638:	mov	x0, x19
  40a63c:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40a640:	mov	x1, #0x106                 	// #262
  40a644:	mov	x0, x19
  40a648:	mov	w2, #0x3                   	// #3
  40a64c:	ldp	x19, x20, [sp, #16]
  40a650:	ldp	x29, x30, [sp], #32
  40a654:	b	40a1c8 <wcrtomb@plt+0x78a8>
  40a658:	ldp	x19, x20, [sp, #16]
  40a65c:	ldp	x29, x30, [sp], #32
  40a660:	ret
  40a664:	ldr	x1, [x19, #80]
  40a668:	str	xzr, [x19, #104]
  40a66c:	cmn	x1, #0x1
  40a670:	b.eq	40a658 <wcrtomb@plt+0x7d38>  // b.none
  40a674:	add	x1, x1, #0x114
  40a678:	b	40a5b4 <wcrtomb@plt+0x7c94>
  40a67c:	nop
  40a680:	stp	x29, x30, [sp, #-48]!
  40a684:	mov	x29, sp
  40a688:	stp	x19, x20, [sp, #16]
  40a68c:	mov	x19, x0
  40a690:	mov	x0, x1
  40a694:	stp	x21, x22, [sp, #32]
  40a698:	mov	x21, x1
  40a69c:	bl	402300 <strlen@plt>
  40a6a0:	cbz	x0, 40a6d8 <wcrtomb@plt+0x7db8>
  40a6a4:	mov	x20, x0
  40a6a8:	mov	x0, x19
  40a6ac:	bl	402300 <strlen@plt>
  40a6b0:	mov	x22, x0
  40a6b4:	add	x1, x22, x20
  40a6b8:	mov	x0, x19
  40a6bc:	add	x1, x1, #0x1
  40a6c0:	bl	4140e0 <wcrtomb@plt+0x117c0>
  40a6c4:	add	x2, x20, #0x1
  40a6c8:	mov	x19, x0
  40a6cc:	mov	x1, x21
  40a6d0:	add	x0, x0, x22
  40a6d4:	bl	4022a0 <memcpy@plt>
  40a6d8:	mov	x0, x19
  40a6dc:	ldp	x19, x20, [sp, #16]
  40a6e0:	ldp	x21, x22, [sp, #32]
  40a6e4:	ldp	x29, x30, [sp], #48
  40a6e8:	ret
  40a6ec:	nop
  40a6f0:	stp	x29, x30, [sp, #-32]!
  40a6f4:	mov	x29, sp
  40a6f8:	stp	x19, x20, [sp, #16]
  40a6fc:	mov	x20, x0
  40a700:	ldr	x19, [x0]
  40a704:	ldr	x0, [x19]
  40a708:	cbz	x0, 40a720 <wcrtomb@plt+0x7e00>
  40a70c:	nop
  40a710:	bl	4026b0 <free@plt>
  40a714:	ldr	x0, [x19, #8]!
  40a718:	cbnz	x0, 40a710 <wcrtomb@plt+0x7df0>
  40a71c:	ldr	x19, [x20]
  40a720:	mov	x0, x19
  40a724:	bl	4026b0 <free@plt>
  40a728:	ldr	x0, [x20, #8]
  40a72c:	bl	4026b0 <free@plt>
  40a730:	ldr	x0, [x20, #16]
  40a734:	bl	4026b0 <free@plt>
  40a738:	ldr	x0, [x20, #24]
  40a73c:	bl	4026b0 <free@plt>
  40a740:	mov	x0, x20
  40a744:	ldp	x19, x20, [sp, #16]
  40a748:	ldp	x29, x30, [sp], #32
  40a74c:	b	4026b0 <free@plt>
  40a750:	stp	x29, x30, [sp, #-32]!
  40a754:	cmp	xzr, x1, lsr #60
  40a758:	mov	x29, sp
  40a75c:	stp	x19, x20, [sp, #16]
  40a760:	mov	x19, x1
  40a764:	mov	x20, x0
  40a768:	lsl	x0, x1, #4
  40a76c:	cset	x1, ne  // ne = any
  40a770:	tbnz	x19, #59, 40a790 <wcrtomb@plt+0x7e70>
  40a774:	cbnz	x1, 40a790 <wcrtomb@plt+0x7e70>
  40a778:	bl	414080 <wcrtomb@plt+0x11760>
  40a77c:	stp	x0, xzr, [x20]
  40a780:	str	x19, [x20, #16]
  40a784:	ldp	x19, x20, [sp, #16]
  40a788:	ldp	x29, x30, [sp], #32
  40a78c:	ret
  40a790:	bl	4142c0 <wcrtomb@plt+0x119a0>
  40a794:	nop
  40a798:	stp	x29, x30, [sp, #-48]!
  40a79c:	mov	x29, sp
  40a7a0:	stp	x19, x20, [sp, #16]
  40a7a4:	mov	x20, x1
  40a7a8:	str	x21, [sp, #32]
  40a7ac:	mov	x21, x0
  40a7b0:	mov	x0, #0x30                  	// #48
  40a7b4:	bl	414080 <wcrtomb@plt+0x11760>
  40a7b8:	mov	x19, x0
  40a7bc:	mov	x0, #0x8                   	// #8
  40a7c0:	bl	414250 <wcrtomb@plt+0x11930>
  40a7c4:	mov	x1, x0
  40a7c8:	mov	x0, x20
  40a7cc:	str	x1, [x19]
  40a7d0:	bl	414250 <wcrtomb@plt+0x11930>
  40a7d4:	mov	x1, x0
  40a7d8:	str	x1, [x19, #8]
  40a7dc:	mov	x0, x20
  40a7e0:	bl	414250 <wcrtomb@plt+0x11930>
  40a7e4:	mov	x1, x0
  40a7e8:	str	x1, [x19, #16]
  40a7ec:	mov	x0, x20
  40a7f0:	bl	414250 <wcrtomb@plt+0x11930>
  40a7f4:	mov	x1, x0
  40a7f8:	str	x1, [x19, #24]
  40a7fc:	mov	x0, x19
  40a800:	strh	wzr, [x19, #32]
  40a804:	str	x21, [x19, #40]
  40a808:	ldp	x19, x20, [sp, #16]
  40a80c:	ldr	x21, [sp, #32]
  40a810:	ldp	x29, x30, [sp], #48
  40a814:	ret
  40a818:	stp	x29, x30, [sp, #-64]!
  40a81c:	mov	x29, sp
  40a820:	stp	x19, x20, [sp, #16]
  40a824:	mov	x20, x0
  40a828:	mov	x19, x2
  40a82c:	add	x0, x2, #0x1
  40a830:	stp	x21, x22, [sp, #32]
  40a834:	mov	x21, x1
  40a838:	stp	x23, x24, [sp, #48]
  40a83c:	bl	414080 <wcrtomb@plt+0x11760>
  40a840:	mov	x1, x21
  40a844:	mov	x2, x19
  40a848:	bl	4022a0 <memcpy@plt>
  40a84c:	ldr	x21, [x20]
  40a850:	strb	wzr, [x0, x19]
  40a854:	mov	x23, x0
  40a858:	cbz	x21, 40a938 <wcrtomb@plt+0x8018>
  40a85c:	mov	x0, x21
  40a860:	mov	x19, #0x0                   	// #0
  40a864:	b	40a874 <wcrtomb@plt+0x7f54>
  40a868:	add	x19, x19, #0x1
  40a86c:	ldr	x0, [x20, x19, lsl #3]
  40a870:	cbz	x0, 40a8a0 <wcrtomb@plt+0x7f80>
  40a874:	mov	x1, x23
  40a878:	bl	4027e0 <strstr@plt>
  40a87c:	cbz	x0, 40a868 <wcrtomb@plt+0x7f48>
  40a880:	mov	x0, x23
  40a884:	bl	4026b0 <free@plt>
  40a888:	mov	x0, x20
  40a88c:	ldp	x19, x20, [sp, #16]
  40a890:	ldp	x21, x22, [sp, #32]
  40a894:	ldp	x23, x24, [sp, #48]
  40a898:	ldp	x29, x30, [sp], #64
  40a89c:	ret
  40a8a0:	mov	x24, x20
  40a8a4:	mov	x22, #0x0                   	// #0
  40a8a8:	b	40a8d8 <wcrtomb@plt+0x7fb8>
  40a8ac:	mov	x0, x21
  40a8b0:	sub	x19, x19, #0x1
  40a8b4:	bl	4026b0 <free@plt>
  40a8b8:	cmp	x19, x22
  40a8bc:	b.eq	40a8f8 <wcrtomb@plt+0x7fd8>  // b.none
  40a8c0:	ldr	x0, [x20, x19, lsl #3]
  40a8c4:	str	x0, [x24]
  40a8c8:	str	xzr, [x20, x19, lsl #3]
  40a8cc:	add	x24, x20, x22, lsl #3
  40a8d0:	ldr	x21, [x20, x22, lsl #3]
  40a8d4:	cbz	x21, 40a8f8 <wcrtomb@plt+0x7fd8>
  40a8d8:	mov	x1, x21
  40a8dc:	mov	x0, x23
  40a8e0:	bl	4027e0 <strstr@plt>
  40a8e4:	cbnz	x0, 40a8ac <wcrtomb@plt+0x7f8c>
  40a8e8:	add	x22, x22, #0x1
  40a8ec:	add	x24, x20, x22, lsl #3
  40a8f0:	ldr	x21, [x20, x22, lsl #3]
  40a8f4:	cbnz	x21, 40a8d8 <wcrtomb@plt+0x7fb8>
  40a8f8:	add	x0, x19, #0x2
  40a8fc:	cmp	xzr, x0, lsr #61
  40a900:	lsl	x1, x0, #3
  40a904:	cset	x2, ne  // ne = any
  40a908:	tbnz	x0, #60, 40a944 <wcrtomb@plt+0x8024>
  40a90c:	cbnz	x2, 40a944 <wcrtomb@plt+0x8024>
  40a910:	mov	x0, x20
  40a914:	bl	4140e0 <wcrtomb@plt+0x117c0>
  40a918:	add	x1, x0, x19, lsl #3
  40a91c:	str	x23, [x0, x19, lsl #3]
  40a920:	ldp	x19, x20, [sp, #16]
  40a924:	str	xzr, [x1, #8]
  40a928:	ldp	x21, x22, [sp, #32]
  40a92c:	ldp	x23, x24, [sp, #48]
  40a930:	ldp	x29, x30, [sp], #64
  40a934:	ret
  40a938:	mov	x19, #0x0                   	// #0
  40a93c:	mov	x1, #0x10                  	// #16
  40a940:	b	40a910 <wcrtomb@plt+0x7ff0>
  40a944:	bl	4142c0 <wcrtomb@plt+0x119a0>
  40a948:	stp	x29, x30, [sp, #-48]!
  40a94c:	mov	x29, sp
  40a950:	stp	x19, x20, [sp, #16]
  40a954:	mov	x19, x0
  40a958:	ldr	x20, [x1]
  40a95c:	cbz	x20, 40a990 <wcrtomb@plt+0x8070>
  40a960:	str	x21, [sp, #32]
  40a964:	mov	x21, x1
  40a968:	mov	x0, x20
  40a96c:	bl	402300 <strlen@plt>
  40a970:	mov	x1, x20
  40a974:	mov	x2, x0
  40a978:	mov	x0, x19
  40a97c:	bl	40a818 <wcrtomb@plt+0x7ef8>
  40a980:	ldr	x20, [x21, #8]!
  40a984:	mov	x19, x0
  40a988:	cbnz	x20, 40a968 <wcrtomb@plt+0x8048>
  40a98c:	ldr	x21, [sp, #32]
  40a990:	mov	x0, x19
  40a994:	ldp	x19, x20, [sp, #16]
  40a998:	ldp	x29, x30, [sp], #48
  40a99c:	ret
  40a9a0:	ldr	x8, [x2]
  40a9a4:	cmp	x8, #0x0
  40a9a8:	b.le	40aa1c <wcrtomb@plt+0x80fc>
  40a9ac:	mov	x6, x8
  40a9b0:	mov	x5, #0x0                   	// #0
  40a9b4:	b	40a9c4 <wcrtomb@plt+0x80a4>
  40a9b8:	add	x5, x3, #0x1
  40a9bc:	cmp	x5, x6
  40a9c0:	b.ge	40aa1c <wcrtomb@plt+0x80fc>  // b.tcont
  40a9c4:	add	x3, x6, x5
  40a9c8:	asr	x3, x3, #1
  40a9cc:	lsl	x4, x3, #4
  40a9d0:	add	x7, x1, x4
  40a9d4:	ldr	x4, [x1, x4]
  40a9d8:	cmp	x4, x0
  40a9dc:	b.lt	40a9b8 <wcrtomb@plt+0x8098>  // b.tstop
  40a9e0:	mov	x6, x3
  40a9e4:	b.ne	40a9bc <wcrtomb@plt+0x809c>  // b.any
  40a9e8:	add	x4, x3, #0x1
  40a9ec:	ldr	w0, [x7, #8]
  40a9f0:	cmp	x8, x4
  40a9f4:	b.le	40aa14 <wcrtomb@plt+0x80f4>
  40a9f8:	sub	x1, x1, #0x10
  40a9fc:	add	x1, x1, x8, lsl #4
  40aa00:	ldp	x4, x5, [x7, #16]
  40aa04:	stp	x4, x5, [x7], #16
  40aa08:	cmp	x7, x1
  40aa0c:	b.ne	40aa00 <wcrtomb@plt+0x80e0>  // b.any
  40aa10:	sub	x3, x8, #0x1
  40aa14:	str	x3, [x2]
  40aa18:	ret
  40aa1c:	mov	w0, #0x0                   	// #0
  40aa20:	ret
  40aa24:	nop
  40aa28:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40aa2c:	add	x1, x1, #0x3b8
  40aa30:	stp	x29, x30, [sp, #-16]!
  40aa34:	mov	w2, #0x5                   	// #5
  40aa38:	mov	x0, #0x0                   	// #0
  40aa3c:	mov	x29, sp
  40aa40:	bl	4027f0 <dcgettext@plt>
  40aa44:	bl	404118 <wcrtomb@plt+0x17f8>
  40aa48:	stp	x29, x30, [sp, #-48]!
  40aa4c:	mov	x29, sp
  40aa50:	stp	x19, x20, [sp, #16]
  40aa54:	mov	x20, x0
  40aa58:	ldrb	w0, [x0, #1048]
  40aa5c:	stp	x21, x22, [sp, #32]
  40aa60:	mov	x21, x2
  40aa64:	cbnz	w0, 40aaac <wcrtomb@plt+0x818c>
  40aa68:	lsl	x19, x1, #3
  40aa6c:	cmp	x2, #0x0
  40aa70:	mov	x22, #0x0                   	// #0
  40aa74:	b.le	40aa9c <wcrtomb@plt+0x817c>
  40aa78:	ldr	x1, [x20, #144]
  40aa7c:	add	x22, x22, #0x1
  40aa80:	mov	x0, x20
  40aa84:	mov	w2, #0x3                   	// #3
  40aa88:	ldr	x1, [x1, x19]
  40aa8c:	add	x19, x19, #0x8
  40aa90:	bl	40a1c8 <wcrtomb@plt+0x78a8>
  40aa94:	cmp	x21, x22
  40aa98:	b.ne	40aa78 <wcrtomb@plt+0x8158>  // b.any
  40aa9c:	ldp	x19, x20, [sp, #16]
  40aaa0:	ldp	x21, x22, [sp, #32]
  40aaa4:	ldp	x29, x30, [sp], #48
  40aaa8:	ret
  40aaac:	cmp	x2, #0x0
  40aab0:	b.le	40aa9c <wcrtomb@plt+0x817c>
  40aab4:	mov	x19, x1
  40aab8:	add	x21, x2, x1
  40aabc:	nop
  40aac0:	ldr	x1, [x20, #144]
  40aac4:	mov	x0, x20
  40aac8:	ldr	x2, [x20, #280]
  40aacc:	ldr	x1, [x1, x19, lsl #3]
  40aad0:	ldrb	w2, [x2, x19]
  40aad4:	add	x19, x19, #0x1
  40aad8:	bl	40a1c8 <wcrtomb@plt+0x78a8>
  40aadc:	cmp	x21, x19
  40aae0:	b.ne	40aac0 <wcrtomb@plt+0x81a0>  // b.any
  40aae4:	ldp	x19, x20, [sp, #16]
  40aae8:	ldp	x21, x22, [sp, #32]
  40aaec:	ldp	x29, x30, [sp], #48
  40aaf0:	ret
  40aaf4:	nop
  40aaf8:	stp	x29, x30, [sp, #-48]!
  40aafc:	mov	x29, sp
  40ab00:	stp	x19, x20, [sp, #16]
  40ab04:	mov	x19, x2
  40ab08:	ldr	x2, [x1]
  40ab0c:	str	x21, [sp, #32]
  40ab10:	mov	x21, x0
  40ab14:	ldr	x0, [x19, #16]
  40ab18:	cmp	x0, x2
  40ab1c:	b.lt	40ab38 <wcrtomb@plt+0x8218>  // b.tstop
  40ab20:	str	x2, [x19, #8]
  40ab24:	cbnz	x2, 40ab74 <wcrtomb@plt+0x8254>
  40ab28:	ldp	x19, x20, [sp, #16]
  40ab2c:	ldr	x21, [sp, #32]
  40ab30:	ldp	x29, x30, [sp], #48
  40ab34:	ret
  40ab38:	ldr	x0, [x19]
  40ab3c:	mov	x20, x1
  40ab40:	bl	4026b0 <free@plt>
  40ab44:	mov	x1, x19
  40ab48:	mov	x4, #0x10                  	// #16
  40ab4c:	ldr	x5, [x20]
  40ab50:	mov	x3, #0xffffffffffffffff    	// #-1
  40ab54:	ldr	x2, [x1, #16]!
  40ab58:	mov	x0, #0x0                   	// #0
  40ab5c:	sub	x2, x5, x2
  40ab60:	bl	40a0f8 <wcrtomb@plt+0x77d8>
  40ab64:	ldr	x2, [x20]
  40ab68:	str	x0, [x19]
  40ab6c:	str	x2, [x19, #8]
  40ab70:	cbz	x2, 40ab28 <wcrtomb@plt+0x8208>
  40ab74:	ldr	x0, [x19]
  40ab78:	lsl	x2, x2, #4
  40ab7c:	ldr	x1, [x21]
  40ab80:	ldp	x19, x20, [sp, #16]
  40ab84:	ldr	x21, [sp, #32]
  40ab88:	ldp	x29, x30, [sp], #48
  40ab8c:	b	4022a0 <memcpy@plt>
  40ab90:	stp	x29, x30, [sp, #-80]!
  40ab94:	mov	x29, sp
  40ab98:	stp	x21, x22, [sp, #32]
  40ab9c:	mov	x22, x0
  40aba0:	stp	x23, x24, [sp, #48]
  40aba4:	mov	x24, x1
  40aba8:	mov	w23, w2
  40abac:	ldr	x1, [x1, #8]
  40abb0:	stp	x19, x20, [sp, #16]
  40abb4:	stp	x25, x26, [sp, #64]
  40abb8:	cmp	x1, #0x0
  40abbc:	ldr	x0, [x0, #296]
  40abc0:	ldr	x7, [x22, #304]
  40abc4:	b.le	40ade4 <wcrtomb@plt+0x84c4>
  40abc8:	ldr	x9, [x24]
  40abcc:	mov	x20, #0x0                   	// #0
  40abd0:	mov	x3, x9
  40abd4:	add	x5, x9, x1, lsl #4
  40abd8:	ldr	w4, [x3, #8]
  40abdc:	ldr	x2, [x3], #16
  40abe0:	add	x4, x4, x2
  40abe4:	cmp	x5, x3
  40abe8:	eor	x20, x20, x4
  40abec:	b.ne	40abd8 <wcrtomb@plt+0x82b8>  // b.any
  40abf0:	cmp	x7, #0x0
  40abf4:	mov	x26, #0x0                   	// #0
  40abf8:	mov	x19, #0x0                   	// #0
  40abfc:	b.le	40accc <wcrtomb@plt+0x83ac>
  40ac00:	mov	x4, x0
  40ac04:	mov	x19, #0x0                   	// #0
  40ac08:	b	40ac1c <wcrtomb@plt+0x82fc>
  40ac0c:	add	x19, x19, #0x1
  40ac10:	add	x4, x4, #0x50
  40ac14:	cmp	x19, x7
  40ac18:	b.ge	40acb8 <wcrtomb@plt+0x8398>  // b.tcont
  40ac1c:	ldr	x3, [x4]
  40ac20:	cmp	x3, x20
  40ac24:	b.ne	40ac0c <wcrtomb@plt+0x82ec>  // b.any
  40ac28:	ldr	x2, [x4, #16]
  40ac2c:	cmp	x2, x1
  40ac30:	b.ne	40ac0c <wcrtomb@plt+0x82ec>  // b.any
  40ac34:	ldrb	w2, [x4, #32]
  40ac38:	cmp	w2, w23
  40ac3c:	b.ne	40ac0c <wcrtomb@plt+0x82ec>  // b.any
  40ac40:	cmp	x1, #0x0
  40ac44:	b.le	40ae10 <wcrtomb@plt+0x84f0>
  40ac48:	ldr	x9, [x24]
  40ac4c:	mov	x3, #0x0                   	// #0
  40ac50:	ldr	x8, [x4, #8]
  40ac54:	add	x11, x9, #0x8
  40ac58:	mov	x5, #0x0                   	// #0
  40ac5c:	add	x10, x8, #0x8
  40ac60:	b	40ac84 <wcrtomb@plt+0x8364>
  40ac64:	ldr	x6, [x9, x3]
  40ac68:	ldr	x2, [x8, x3]
  40ac6c:	add	x3, x3, #0x10
  40ac70:	cmp	x6, x2
  40ac74:	b.ne	40ac94 <wcrtomb@plt+0x8374>  // b.any
  40ac78:	add	x5, x5, #0x1
  40ac7c:	cmp	x5, x1
  40ac80:	b.eq	40ac9c <wcrtomb@plt+0x837c>  // b.none
  40ac84:	ldr	w2, [x11, x3]
  40ac88:	ldr	w6, [x10, x3]
  40ac8c:	cmp	w2, w6
  40ac90:	b.eq	40ac64 <wcrtomb@plt+0x8344>  // b.none
  40ac94:	cmp	x5, x1
  40ac98:	b.ne	40ac0c <wcrtomb@plt+0x82ec>  // b.any
  40ac9c:	mov	x0, x19
  40aca0:	ldp	x19, x20, [sp, #16]
  40aca4:	ldp	x21, x22, [sp, #32]
  40aca8:	ldp	x23, x24, [sp, #48]
  40acac:	ldp	x25, x26, [sp, #64]
  40acb0:	ldp	x29, x30, [sp], #80
  40acb4:	ret
  40acb8:	add	x26, x19, x19, lsl #2
  40acbc:	cmp	x1, #0x0
  40acc0:	lsl	x26, x26, #4
  40acc4:	b.le	40ae04 <wcrtomb@plt+0x84e4>
  40acc8:	ldr	x9, [x24]
  40accc:	mov	x5, #0x0                   	// #0
  40acd0:	mov	x25, #0x0                   	// #0
  40acd4:	mov	w6, #0x0                   	// #0
  40acd8:	mov	w11, #0x1ff                 	// #511
  40acdc:	ldr	x10, [x22, #336]
  40ace0:	b	40ad0c <wcrtomb@plt+0x83ec>
  40ace4:	orr	w4, w4, w3
  40ace8:	and	w4, w4, w23
  40acec:	tst	x4, #0x7
  40acf0:	csel	w6, w8, w6, ne  // ne = any
  40acf4:	cbnz	x25, 40ad00 <wcrtomb@plt+0x83e0>
  40acf8:	ldr	x3, [x22, #144]
  40acfc:	ldr	x25, [x3, x2, lsl #3]
  40ad00:	add	x5, x5, #0x1
  40ad04:	cmp	x5, x1
  40ad08:	b.ge	40ad44 <wcrtomb@plt+0x8424>  // b.tcont
  40ad0c:	lsl	x2, x5, #4
  40ad10:	ldr	x2, [x9, x2]
  40ad14:	ldr	w3, [x10, x2, lsl #2]
  40ad18:	orr	w8, w6, w3
  40ad1c:	asr	w4, w3, #6
  40ad20:	orr	w4, w4, w3, asr #3
  40ad24:	cbnz	w3, 40ace4 <wcrtomb@plt+0x83c4>
  40ad28:	ldr	x3, [x22, #144]
  40ad2c:	add	x5, x5, #0x1
  40ad30:	ldr	x2, [x3, x2, lsl #3]
  40ad34:	cmp	x2, #0x112
  40ad38:	csel	w6, w6, w11, ne  // ne = any
  40ad3c:	cmp	x5, x1
  40ad40:	b.lt	40ad0c <wcrtomb@plt+0x83ec>  // b.tstop
  40ad44:	and	w21, w6, #0xffff
  40ad48:	ldr	x2, [x22, #312]
  40ad4c:	cmp	x2, x7
  40ad50:	b.le	40adc8 <wcrtomb@plt+0x84a8>
  40ad54:	add	x2, x0, x26
  40ad58:	str	x0, [x22, #296]
  40ad5c:	str	x20, [x0, x26]
  40ad60:	add	x0, x2, #0x8
  40ad64:	bl	40a750 <wcrtomb@plt+0x7e30>
  40ad68:	ldr	x2, [x22, #296]
  40ad6c:	add	x1, x24, #0x8
  40ad70:	mov	x0, x24
  40ad74:	add	x2, x2, x26
  40ad78:	add	x2, x2, #0x8
  40ad7c:	bl	40aaf8 <wcrtomb@plt+0x81d8>
  40ad80:	ldr	x0, [x22, #296]
  40ad84:	mov	x2, #0xffffffffffffffff    	// #-1
  40ad88:	add	x0, x0, x26
  40ad8c:	strb	w23, [x0, #32]
  40ad90:	strh	w21, [x0, #34]
  40ad94:	ldr	x1, [x22, #304]
  40ad98:	stp	x25, xzr, [x0, #40]
  40ad9c:	str	xzr, [x0, #56]
  40ada0:	add	x1, x1, #0x1
  40ada4:	str	x2, [x0, #72]
  40ada8:	mov	x0, x19
  40adac:	str	x1, [x22, #304]
  40adb0:	ldp	x19, x20, [sp, #16]
  40adb4:	ldp	x21, x22, [sp, #32]
  40adb8:	ldp	x23, x24, [sp, #48]
  40adbc:	ldp	x25, x26, [sp, #64]
  40adc0:	ldp	x29, x30, [sp], #80
  40adc4:	ret
  40adc8:	add	x1, x22, #0x138
  40adcc:	mov	x4, #0x50                  	// #80
  40add0:	mov	x3, #0xffffffffffffffff    	// #-1
  40add4:	mov	x2, #0x1                   	// #1
  40add8:	bl	40a0f8 <wcrtomb@plt+0x77d8>
  40addc:	ldr	x1, [x24, #8]
  40ade0:	b	40ad54 <wcrtomb@plt+0x8434>
  40ade4:	cmp	x7, #0x0
  40ade8:	mov	x20, #0x0                   	// #0
  40adec:	b.gt	40ac00 <wcrtomb@plt+0x82e0>
  40adf0:	mov	w21, #0x0                   	// #0
  40adf4:	mov	x26, #0x0                   	// #0
  40adf8:	mov	x19, #0x0                   	// #0
  40adfc:	mov	x25, #0x0                   	// #0
  40ae00:	b	40ad48 <wcrtomb@plt+0x8428>
  40ae04:	mov	w21, #0x0                   	// #0
  40ae08:	mov	x25, #0x0                   	// #0
  40ae0c:	b	40ad48 <wcrtomb@plt+0x8428>
  40ae10:	mov	x5, #0x0                   	// #0
  40ae14:	b	40ac94 <wcrtomb@plt+0x8374>
  40ae18:	stp	x29, x30, [sp, #-64]!
  40ae1c:	mov	x29, sp
  40ae20:	stp	x19, x20, [sp, #16]
  40ae24:	mov	x20, x3
  40ae28:	mov	x19, x5
  40ae2c:	stp	x21, x22, [sp, #32]
  40ae30:	mov	x21, x1
  40ae34:	mov	w22, w4
  40ae38:	ldr	x3, [x1]
  40ae3c:	stp	x23, x24, [sp, #48]
  40ae40:	mov	x24, x0
  40ae44:	ldr	x1, [x5, #16]
  40ae48:	mov	x23, x2
  40ae4c:	ldr	x0, [x20]
  40ae50:	sub	x1, x1, x3
  40ae54:	cmp	x1, x0
  40ae58:	b.lt	40af58 <wcrtomb@plt+0x8638>  // b.tstop
  40ae5c:	str	xzr, [x19, #8]
  40ae60:	mov	x5, #0x0                   	// #0
  40ae64:	mov	x7, #0x0                   	// #0
  40ae68:	ldr	x9, [x20]
  40ae6c:	ldr	x10, [x21]
  40ae70:	cmp	x7, x10
  40ae74:	b.lt	40aec8 <wcrtomb@plt+0x85a8>  // b.tstop
  40ae78:	cmp	x5, x9
  40ae7c:	b.ge	40af44 <wcrtomb@plt+0x8624>  // b.tcont
  40ae80:	ldr	x6, [x23]
  40ae84:	add	x6, x6, x5, lsl #4
  40ae88:	ldr	w8, [x6, #8]
  40ae8c:	ands	w8, w22, w8
  40ae90:	b.eq	40aebc <wcrtomb@plt+0x859c>  // b.none
  40ae94:	ldp	x1, x0, [x19]
  40ae98:	ldr	x4, [x6]
  40ae9c:	add	x3, x0, #0x1
  40aea0:	lsl	x0, x0, #4
  40aea4:	add	x2, x1, x0
  40aea8:	str	x4, [x1, x0]
  40aeac:	str	x3, [x19, #8]
  40aeb0:	ldr	x9, [x20]
  40aeb4:	ldr	x10, [x21]
  40aeb8:	str	w8, [x2, #8]
  40aebc:	add	x5, x5, #0x1
  40aec0:	cmp	x7, x10
  40aec4:	b.ge	40ae78 <wcrtomb@plt+0x8558>  // b.tcont
  40aec8:	ldr	x11, [x24]
  40aecc:	lsl	x6, x7, #4
  40aed0:	cmp	x5, x9
  40aed4:	mov	w1, #0x0                   	// #0
  40aed8:	add	x2, x11, x6
  40aedc:	ldr	x0, [x11, x6]
  40aee0:	b.lt	40af18 <wcrtomb@plt+0x85f8>  // b.tstop
  40aee4:	ldp	x9, x6, [x19]
  40aee8:	add	x7, x7, #0x1
  40aeec:	ldr	w8, [x2, #8]
  40aef0:	orr	w8, w8, w1
  40aef4:	add	x3, x6, #0x1
  40aef8:	lsl	x6, x6, #4
  40aefc:	add	x2, x9, x6
  40af00:	str	x0, [x9, x6]
  40af04:	str	x3, [x19, #8]
  40af08:	ldr	x9, [x20]
  40af0c:	ldr	x10, [x21]
  40af10:	str	w8, [x2, #8]
  40af14:	b	40ae70 <wcrtomb@plt+0x8550>
  40af18:	ldr	x4, [x23]
  40af1c:	lsl	x3, x5, #4
  40af20:	add	x6, x4, x3
  40af24:	ldr	x3, [x4, x3]
  40af28:	cmp	x3, x0
  40af2c:	b.lt	40ae88 <wcrtomb@plt+0x8568>  // b.tstop
  40af30:	b.ne	40aee4 <wcrtomb@plt+0x85c4>  // b.any
  40af34:	ldr	w8, [x6, #8]
  40af38:	add	x5, x5, #0x1
  40af3c:	and	w1, w22, w8
  40af40:	b	40aee4 <wcrtomb@plt+0x85c4>
  40af44:	ldp	x19, x20, [sp, #16]
  40af48:	ldp	x21, x22, [sp, #32]
  40af4c:	ldp	x23, x24, [sp, #48]
  40af50:	ldp	x29, x30, [sp], #64
  40af54:	ret
  40af58:	ldr	x0, [x5]
  40af5c:	bl	4026b0 <free@plt>
  40af60:	mov	x1, x19
  40af64:	mov	x4, #0x10                  	// #16
  40af68:	ldr	x0, [x21]
  40af6c:	mov	x3, #0xffffffffffffffff    	// #-1
  40af70:	str	x0, [x1, #16]!
  40af74:	mov	x0, #0x0                   	// #0
  40af78:	ldr	x2, [x20]
  40af7c:	bl	40a0f8 <wcrtomb@plt+0x77d8>
  40af80:	str	x0, [x19]
  40af84:	b	40ae5c <wcrtomb@plt+0x853c>
  40af88:	stp	x29, x30, [sp, #-32]!
  40af8c:	mov	x29, sp
  40af90:	stp	x19, x20, [sp, #16]
  40af94:	mov	x20, x0
  40af98:	ldr	x0, [x0, #280]
  40af9c:	bl	4026b0 <free@plt>
  40afa0:	ldr	x0, [x20, #96]
  40afa4:	bl	4026b0 <free@plt>
  40afa8:	ldr	x0, [x20, #408]
  40afac:	bl	4026b0 <free@plt>
  40afb0:	ldr	x0, [x20, #432]
  40afb4:	cbz	x0, 40aff4 <wcrtomb@plt+0x86d4>
  40afb8:	ldr	x1, [x20, #352]
  40afbc:	tbnz	x1, #63, 40afe4 <wcrtomb@plt+0x86c4>
  40afc0:	mov	x19, #0xffffffffffffffff    	// #-1
  40afc4:	nop
  40afc8:	ldr	x0, [x0, x19, lsl #3]
  40afcc:	add	x19, x19, #0x1
  40afd0:	bl	4026b0 <free@plt>
  40afd4:	ldr	x0, [x20, #352]
  40afd8:	cmp	x19, x0
  40afdc:	ldr	x0, [x20, #432]
  40afe0:	b.lt	40afc8 <wcrtomb@plt+0x86a8>  // b.tstop
  40afe4:	ldp	x19, x20, [sp, #16]
  40afe8:	sub	x0, x0, #0x10
  40afec:	ldp	x29, x30, [sp], #32
  40aff0:	b	4026b0 <free@plt>
  40aff4:	ldp	x19, x20, [sp, #16]
  40aff8:	ldp	x29, x30, [sp], #32
  40affc:	ret
  40b000:	stp	x29, x30, [sp, #-48]!
  40b004:	mov	x29, sp
  40b008:	stp	x19, x20, [sp, #16]
  40b00c:	mov	x19, x2
  40b010:	mov	x20, x1
  40b014:	ldr	x2, [x2, #8]
  40b018:	ldr	x1, [x19, #16]
  40b01c:	str	x21, [sp, #32]
  40b020:	mov	x21, x0
  40b024:	cmp	x2, x1
  40b028:	ldr	x0, [x19]
  40b02c:	b.lt	40b048 <wcrtomb@plt+0x8728>  // b.tstop
  40b030:	mov	x4, #0x10                  	// #16
  40b034:	mov	x2, #0x1                   	// #1
  40b038:	add	x1, x19, x4
  40b03c:	mov	x3, #0xffffffffffffffff    	// #-1
  40b040:	bl	40a0f8 <wcrtomb@plt+0x77d8>
  40b044:	ldr	x2, [x19, #8]
  40b048:	add	x1, x0, x2, lsl #4
  40b04c:	add	x2, x2, #0x1
  40b050:	stp	x0, x2, [x19]
  40b054:	stp	x21, x20, [x1]
  40b058:	ldp	x19, x20, [sp, #16]
  40b05c:	ldr	x21, [sp, #32]
  40b060:	ldp	x29, x30, [sp], #48
  40b064:	ret
  40b068:	stp	x29, x30, [sp, #-64]!
  40b06c:	mov	x29, sp
  40b070:	stp	x19, x20, [sp, #16]
  40b074:	stp	x21, x22, [sp, #32]
  40b078:	mov	x21, x0
  40b07c:	ldp	x0, x20, [x2]
  40b080:	stp	x23, x24, [sp, #48]
  40b084:	mov	x23, x2
  40b088:	mov	x24, x1
  40b08c:	cmp	x20, #0x0
  40b090:	b.le	40b16c <wcrtomb@plt+0x884c>
  40b094:	mov	x5, x20
  40b098:	mov	x19, #0x0                   	// #0
  40b09c:	b	40b0ac <wcrtomb@plt+0x878c>
  40b0a0:	add	x19, x3, #0x1
  40b0a4:	cmp	x5, x19
  40b0a8:	b.le	40b0f0 <wcrtomb@plt+0x87d0>
  40b0ac:	add	x3, x5, x19
  40b0b0:	asr	x3, x3, #1
  40b0b4:	lsl	x4, x3, #4
  40b0b8:	add	x6, x0, x4
  40b0bc:	ldr	x4, [x0, x4]
  40b0c0:	cmp	x4, x21
  40b0c4:	b.lt	40b0a0 <wcrtomb@plt+0x8780>  // b.tstop
  40b0c8:	mov	x5, x3
  40b0cc:	b.ne	40b0a4 <wcrtomb@plt+0x8784>  // b.any
  40b0d0:	ldr	w1, [x6, #8]
  40b0d4:	ldp	x19, x20, [sp, #16]
  40b0d8:	orr	w1, w1, w24
  40b0dc:	str	w1, [x6, #8]
  40b0e0:	ldp	x21, x22, [sp, #32]
  40b0e4:	ldp	x23, x24, [sp, #48]
  40b0e8:	ldp	x29, x30, [sp], #64
  40b0ec:	ret
  40b0f0:	ldr	x1, [x23, #16]
  40b0f4:	lsl	x22, x19, #4
  40b0f8:	mov	x5, x20
  40b0fc:	cmp	x20, x1
  40b100:	b.ge	40b150 <wcrtomb@plt+0x8830>  // b.tcont
  40b104:	str	x0, [x23]
  40b108:	add	x4, x0, x22
  40b10c:	cmp	x20, x19
  40b110:	b.le	40b130 <wcrtomb@plt+0x8810>
  40b114:	add	x3, x0, x20, lsl #4
  40b118:	add	x19, x0, x19, lsl #4
  40b11c:	nop
  40b120:	ldp	x0, x1, [x3, #-16]
  40b124:	stp	x0, x1, [x3], #-16
  40b128:	cmp	x19, x3
  40b12c:	b.ne	40b120 <wcrtomb@plt+0x8800>  // b.any
  40b130:	stp	x21, x24, [x4]
  40b134:	add	x5, x5, #0x1
  40b138:	str	x5, [x23, #8]
  40b13c:	ldp	x19, x20, [sp, #16]
  40b140:	ldp	x21, x22, [sp, #32]
  40b144:	ldp	x23, x24, [sp, #48]
  40b148:	ldp	x29, x30, [sp], #64
  40b14c:	ret
  40b150:	add	x1, x23, #0x10
  40b154:	mov	x4, #0x10                  	// #16
  40b158:	mov	x3, #0xffffffffffffffff    	// #-1
  40b15c:	mov	x2, #0x1                   	// #1
  40b160:	bl	40a0f8 <wcrtomb@plt+0x77d8>
  40b164:	ldr	x5, [x23, #8]
  40b168:	b	40b104 <wcrtomb@plt+0x87e4>
  40b16c:	ldr	x1, [x2, #16]
  40b170:	cmp	x20, x1
  40b174:	b.ge	40b184 <wcrtomb@plt+0x8864>  // b.tcont
  40b178:	mov	x5, x20
  40b17c:	mov	x4, x0
  40b180:	b	40b130 <wcrtomb@plt+0x8810>
  40b184:	add	x1, x2, #0x10
  40b188:	mov	x22, #0x0                   	// #0
  40b18c:	mov	x19, #0x0                   	// #0
  40b190:	b	40b154 <wcrtomb@plt+0x8834>
  40b194:	nop
  40b198:	stp	x29, x30, [sp, #-272]!
  40b19c:	mov	x29, sp
  40b1a0:	stp	x19, x20, [sp, #16]
  40b1a4:	and	w20, w1, #0xff
  40b1a8:	ldr	x1, [x0, #176]
  40b1ac:	stp	x21, x22, [sp, #32]
  40b1b0:	stp	x23, x24, [sp, #48]
  40b1b4:	cmp	xzr, x1, lsr #59
  40b1b8:	stp	x25, x26, [sp, #64]
  40b1bc:	cset	x2, ne  // ne = any
  40b1c0:	stp	x27, x28, [sp, #80]
  40b1c4:	tbnz	x1, #58, 40bdd0 <wcrtomb@plt+0x94b0>
  40b1c8:	cbnz	x2, 40bdd0 <wcrtomb@plt+0x94b0>
  40b1cc:	mov	x21, x0
  40b1d0:	lsl	x0, x1, #5
  40b1d4:	bl	414080 <wcrtomb@plt+0x11760>
  40b1d8:	mov	x22, #0x18                  	// #24
  40b1dc:	mov	x25, x0
  40b1e0:	str	x25, [sp, #160]
  40b1e4:	ldp	x1, x3, [x21, #168]
  40b1e8:	mov	x23, #0x1                   	// #1
  40b1ec:	umulh	x2, x1, x22
  40b1f0:	add	x27, x25, x3, lsl #4
  40b1f4:	mul	x0, x1, x22
  40b1f8:	cmp	x2, #0x0
  40b1fc:	cset	x7, ne  // ne = any
  40b200:	cmp	x0, #0x0
  40b204:	csel	x28, x7, x23, ge  // ge = tcont
  40b208:	cbnz	x28, 40bdd0 <wcrtomb@plt+0x94b0>
  40b20c:	add	x1, x1, x1, lsl #1
  40b210:	mov	x19, #0x0                   	// #0
  40b214:	lsl	x0, x1, #3
  40b218:	bl	414080 <wcrtomb@plt+0x11760>
  40b21c:	mov	x24, x0
  40b220:	mov	x1, #0x105                 	// #261
  40b224:	mov	x0, x21
  40b228:	str	x24, [sp, #152]
  40b22c:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40b230:	ldr	x1, [x21, #176]
  40b234:	strb	w20, [x21, #328]
  40b238:	add	x0, sp, #0xe0
  40b23c:	bl	40a750 <wcrtomb@plt+0x7e30>
  40b240:	ldr	x0, [x21, #152]
  40b244:	mov	x1, x22
  40b248:	bl	414218 <wcrtomb@plt+0x118f8>
  40b24c:	str	x0, [x21, #320]
  40b250:	ldr	x1, [x21, #152]
  40b254:	cmp	x1, #0x0
  40b258:	b.le	40b308 <wcrtomb@plt+0x89e8>
  40b25c:	add	x20, sp, #0xd0
  40b260:	str	x23, [sp, #136]
  40b264:	str	x28, [sp, #168]
  40b268:	mov	x28, x21
  40b26c:	mov	x21, x19
  40b270:	b	40b2a4 <wcrtomb@plt+0x8984>
  40b274:	cmp	x0, #0x101
  40b278:	b.gt	40b9ac <wcrtomb@plt+0x908c>
  40b27c:	cmp	x0, #0x100
  40b280:	b.eq	40b998 <wcrtomb@plt+0x9078>  // b.none
  40b284:	cmp	x0, #0x101
  40b288:	b.ne	40b960 <wcrtomb@plt+0x9040>  // b.any
  40b28c:	sub	x22, x24, #0x18
  40b290:	mov	w0, #0x1                   	// #1
  40b294:	strb	w0, [x22]
  40b298:	add	x21, x21, #0x1
  40b29c:	cmp	x1, x21
  40b2a0:	b.le	40b300 <wcrtomb@plt+0x89e0>
  40b2a4:	ldr	x2, [x28, #144]
  40b2a8:	lsl	x23, x21, #3
  40b2ac:	ldr	x0, [x2, x21, lsl #3]
  40b2b0:	cmp	x0, #0x103
  40b2b4:	b.le	40b274 <wcrtomb@plt+0x8954>
  40b2b8:	cmp	x0, #0x105
  40b2bc:	b.eq	40ba30 <wcrtomb@plt+0x9110>  // b.none
  40b2c0:	cmp	x0, #0x106
  40b2c4:	b.ne	40b960 <wcrtomb@plt+0x9040>  // b.any
  40b2c8:	ldp	x3, x0, [x24, #-40]
  40b2cc:	add	x21, x21, #0x1
  40b2d0:	ldp	x2, x5, [x24, #-16]
  40b2d4:	cmp	x1, x21
  40b2d8:	ldurb	w4, [x24, #-24]
  40b2dc:	add	x3, x3, x2
  40b2e0:	ldurb	w2, [x24, #-48]
  40b2e4:	add	x0, x0, x5
  40b2e8:	stp	x3, x0, [x24, #-40]
  40b2ec:	orr	w2, w2, w4
  40b2f0:	sturb	w2, [x24, #-48]
  40b2f4:	sub	x24, x24, #0x18
  40b2f8:	b.gt	40b2a4 <wcrtomb@plt+0x8984>
  40b2fc:	nop
  40b300:	mov	x21, x28
  40b304:	ldr	x28, [sp, #168]
  40b308:	add	x0, sp, #0xf8
  40b30c:	ldr	x1, [x21, #176]
  40b310:	add	x20, x0, #0x8
  40b314:	adrp	x19, 426000 <_obstack_memory_used@@Base+0xef38>
  40b318:	mov	x22, #0x0                   	// #0
  40b31c:	add	x19, x19, #0x658
  40b320:	mov	x23, #0x0                   	// #0
  40b324:	bl	40a750 <wcrtomb@plt+0x7e30>
  40b328:	ldr	x1, [x21, #152]
  40b32c:	cmp	x1, #0x0
  40b330:	b.le	40b374 <wcrtomb@plt+0x8a54>
  40b334:	nop
  40b338:	ldr	x0, [x21, #320]
  40b33c:	add	x0, x0, x23
  40b340:	ldr	x2, [x0, #8]
  40b344:	cmp	x2, #0x0
  40b348:	b.le	40b364 <wcrtomb@plt+0x8a44>
  40b34c:	ldr	x2, [x21, #144]
  40b350:	ldr	x2, [x2, x22, lsl #3]
  40b354:	cmp	x2, #0x10a
  40b358:	sub	x3, x2, #0x100
  40b35c:	ccmp	x3, #0x11, #0x2, ne  // ne = any
  40b360:	b.ls	40bce8 <wcrtomb@plt+0x93c8>  // b.plast
  40b364:	add	x22, x22, #0x1
  40b368:	add	x23, x23, #0x18
  40b36c:	cmp	x22, x1
  40b370:	b.lt	40b338 <wcrtomb@plt+0x8a18>  // b.tstop
  40b374:	ldr	x0, [sp, #248]
  40b378:	bl	4026b0 <free@plt>
  40b37c:	ldr	x0, [x21, #152]
  40b380:	bl	414250 <wcrtomb@plt+0x11930>
  40b384:	mov	x19, x0
  40b388:	ldr	x8, [x21, #152]
  40b38c:	cmp	x8, #0x0
  40b390:	b.le	40b408 <wcrtomb@plt+0x8ae8>
  40b394:	ldr	x4, [x21, #320]
  40b398:	mov	w5, #0x8                   	// #8
  40b39c:	nop
  40b3a0:	ldr	x3, [x4, #8]
  40b3a4:	cmp	x3, #0x0
  40b3a8:	b.le	40b3f8 <wcrtomb@plt+0x8ad8>
  40b3ac:	ldr	x1, [x4]
  40b3b0:	add	x3, x1, x3, lsl #4
  40b3b4:	b	40b3d4 <wcrtomb@plt+0x8ab4>
  40b3b8:	ldrb	w0, [x19, x2]
  40b3bc:	b.ge	40bb30 <wcrtomb@plt+0x9210>  // b.tcont
  40b3c0:	orr	w0, w0, #0x2
  40b3c4:	strb	w0, [x19, x2]
  40b3c8:	add	x1, x1, #0x10
  40b3cc:	cmp	x3, x1
  40b3d0:	b.eq	40b3f8 <wcrtomb@plt+0x8ad8>  // b.none
  40b3d4:	ldr	x2, [x1]
  40b3d8:	cmp	x2, x28
  40b3dc:	b.ne	40b3b8 <wcrtomb@plt+0x8a98>  // b.any
  40b3e0:	ldrb	w0, [x19, x28]
  40b3e4:	add	x1, x1, #0x10
  40b3e8:	cmp	x3, x1
  40b3ec:	orr	w0, w0, #0x1
  40b3f0:	strb	w0, [x19, x28]
  40b3f4:	b.ne	40b3d4 <wcrtomb@plt+0x8ab4>  // b.any
  40b3f8:	add	x28, x28, #0x1
  40b3fc:	add	x4, x4, #0x18
  40b400:	cmp	x28, x8
  40b404:	b.ne	40b3a0 <wcrtomb@plt+0x8a80>  // b.any
  40b408:	ldrb	w20, [x19]
  40b40c:	add	x0, sp, #0xf8
  40b410:	ldr	x1, [x21, #176]
  40b414:	orr	w20, w20, #0x10
  40b418:	strb	w20, [x19]
  40b41c:	bl	40a750 <wcrtomb@plt+0x7e30>
  40b420:	ldr	x1, [x21, #152]
  40b424:	cmp	xzr, x1, lsr #62
  40b428:	lsl	x0, x1, #2
  40b42c:	cset	x2, ne  // ne = any
  40b430:	tbnz	x1, #61, 40bdd0 <wcrtomb@plt+0x94b0>
  40b434:	cbnz	x2, 40bdd0 <wcrtomb@plt+0x94b0>
  40b438:	bl	414080 <wcrtomb@plt+0x11760>
  40b43c:	str	x0, [x21, #336]
  40b440:	ldr	x1, [x21, #152]
  40b444:	cmp	x1, #0x0
  40b448:	b.le	40b544 <wcrtomb@plt+0x8c24>
  40b44c:	add	x0, sp, #0x100
  40b450:	str	x0, [sp, #168]
  40b454:	mov	x23, #0x0                   	// #0
  40b458:	mov	x27, x19
  40b45c:	mov	x26, x23
  40b460:	mov	x25, x21
  40b464:	tbnz	w20, #4, 40b47c <wcrtomb@plt+0x8b5c>
  40b468:	add	x26, x26, #0x1
  40b46c:	cmp	x26, x1
  40b470:	b.ge	40b53c <wcrtomb@plt+0x8c1c>  // b.tcont
  40b474:	ldrb	w20, [x27, x26]
  40b478:	tbz	w20, #4, 40b468 <wcrtomb@plt+0x8b48>
  40b47c:	ldr	x2, [x25, #320]
  40b480:	add	x21, x26, x26, lsl #1
  40b484:	ldr	x0, [x25, #336]
  40b488:	lsl	x3, x26, #2
  40b48c:	add	x21, x2, x21, lsl #3
  40b490:	stp	x2, x3, [sp, #136]
  40b494:	mov	x28, #0x0                   	// #0
  40b498:	str	wzr, [x0, x26, lsl #2]
  40b49c:	ldr	x10, [x21, #8]
  40b4a0:	cmp	x10, #0x0
  40b4a4:	b.le	40b52c <wcrtomb@plt+0x8c0c>
  40b4a8:	mov	x20, #0x0                   	// #0
  40b4ac:	b	40b4e0 <wcrtomb@plt+0x8bc0>
  40b4b0:	ldrb	w24, [x27, x23]
  40b4b4:	tst	w24, #0x6
  40b4b8:	b.eq	40bb44 <wcrtomb@plt+0x9224>  // b.none
  40b4bc:	add	x0, x0, x28, lsl #4
  40b4c0:	add	x28, x28, #0x1
  40b4c4:	ldp	x2, x3, [x3]
  40b4c8:	orr	w24, w24, #0x10
  40b4cc:	stp	x2, x3, [x0]
  40b4d0:	strb	w24, [x27, x23]
  40b4d4:	add	x20, x20, #0x1
  40b4d8:	cmp	x20, x10
  40b4dc:	b.ge	40b528 <wcrtomb@plt+0x8c08>  // b.tcont
  40b4e0:	ldr	x0, [x21]
  40b4e4:	lsl	x22, x20, #4
  40b4e8:	add	x3, x0, x22
  40b4ec:	ldr	w1, [x3, #8]
  40b4f0:	cbz	w1, 40b4d4 <wcrtomb@plt+0x8bb4>
  40b4f4:	ldr	x23, [x0, x22]
  40b4f8:	ldr	x4, [x25, #144]
  40b4fc:	ldr	x5, [x4, x23, lsl #3]
  40b500:	tbz	x5, #63, 40b4b0 <wcrtomb@plt+0x8b90>
  40b504:	ldr	x3, [sp, #144]
  40b508:	add	x20, x20, #0x1
  40b50c:	ldr	x2, [x25, #336]
  40b510:	cmp	x20, x10
  40b514:	ldr	w0, [x2, x3]
  40b518:	orr	w1, w0, w1
  40b51c:	str	w1, [x2, x3]
  40b520:	b.lt	40b4e0 <wcrtomb@plt+0x8bc0>  // b.tstop
  40b524:	nop
  40b528:	ldr	x1, [x25, #152]
  40b52c:	str	x28, [x21, #8]
  40b530:	add	x26, x26, #0x1
  40b534:	cmp	x26, x1
  40b538:	b.lt	40b474 <wcrtomb@plt+0x8b54>  // b.tstop
  40b53c:	mov	x19, x27
  40b540:	mov	x21, x25
  40b544:	cmp	xzr, x1, lsr #61
  40b548:	lsl	x0, x1, #3
  40b54c:	cset	x2, ne  // ne = any
  40b550:	tbnz	x1, #60, 40bdd0 <wcrtomb@plt+0x94b0>
  40b554:	cbnz	x2, 40bdd0 <wcrtomb@plt+0x94b0>
  40b558:	bl	414080 <wcrtomb@plt+0x11760>
  40b55c:	mov	x20, x0
  40b560:	ldr	x1, [x21, #152]
  40b564:	str	xzr, [x0], #8
  40b568:	mov	x2, #0xffffffffffffffff    	// #-1
  40b56c:	cmp	x1, #0x1
  40b570:	add	x1, x20, x1, lsl #3
  40b574:	b.le	40b584 <wcrtomb@plt+0x8c64>
  40b578:	str	x2, [x0], #8
  40b57c:	cmp	x1, x0
  40b580:	b.ne	40b578 <wcrtomb@plt+0x8c58>  // b.any
  40b584:	ldr	x1, [x21, #176]
  40b588:	cmp	xzr, x1, lsr #61
  40b58c:	lsl	x0, x1, #3
  40b590:	cset	x2, ne  // ne = any
  40b594:	tbnz	x1, #60, 40bdd0 <wcrtomb@plt+0x94b0>
  40b598:	cbnz	x2, 40bdd0 <wcrtomb@plt+0x94b0>
  40b59c:	bl	414080 <wcrtomb@plt+0x11760>
  40b5a0:	mov	x28, x0
  40b5a4:	ldr	x1, [x21, #176]
  40b5a8:	mov	x2, #0x18                  	// #24
  40b5ac:	umulh	x0, x1, x2
  40b5b0:	mul	x2, x1, x2
  40b5b4:	cmp	x0, #0x0
  40b5b8:	cset	x0, ne  // ne = any
  40b5bc:	tbnz	x2, #63, 40bdd0 <wcrtomb@plt+0x94b0>
  40b5c0:	cbnz	x0, 40bdd0 <wcrtomb@plt+0x94b0>
  40b5c4:	add	x1, x1, x1, lsl #1
  40b5c8:	lsl	x0, x1, #3
  40b5cc:	bl	414080 <wcrtomb@plt+0x11760>
  40b5d0:	mov	x22, x0
  40b5d4:	ldr	x1, [x21, #176]
  40b5d8:	cmp	xzr, x1, lsr #62
  40b5dc:	lsl	x0, x1, #2
  40b5e0:	cset	x24, ne  // ne = any
  40b5e4:	cmp	x0, #0x0
  40b5e8:	csinc	x24, x24, xzr, ge  // ge = tcont
  40b5ec:	cbnz	x24, 40bdd0 <wcrtomb@plt+0x94b0>
  40b5f0:	bl	414080 <wcrtomb@plt+0x11760>
  40b5f4:	mov	x27, x0
  40b5f8:	ldrb	w1, [x21, #1048]
  40b5fc:	cbnz	w1, 40bc64 <wcrtomb@plt+0x9344>
  40b600:	ldr	x0, [x21, #152]
  40b604:	mov	x26, #0x0                   	// #0
  40b608:	ldr	x1, [x21, #320]
  40b60c:	cmp	x0, #0x0
  40b610:	b.le	40bc84 <wcrtomb@plt+0x9364>
  40b614:	adrp	x0, 409000 <wcrtomb@plt+0x66e0>
  40b618:	mov	x25, #0x0                   	// #0
  40b61c:	add	x0, x0, #0xfe8
  40b620:	mov	x23, #0x1                   	// #1
  40b624:	stp	x0, x19, [sp, #104]
  40b628:	str	x24, [sp, #120]
  40b62c:	nop
  40b630:	add	x19, x25, x25, lsl #1
  40b634:	ldr	x2, [x20, x25, lsl #3]
  40b638:	lsl	x24, x19, #3
  40b63c:	add	x3, x1, x24
  40b640:	cmn	x2, #0x1
  40b644:	ldr	x0, [x1, x19, lsl #3]
  40b648:	b.eq	40bc8c <wcrtomb@plt+0x936c>  // b.none
  40b64c:	ldr	x4, [x21, #144]
  40b650:	add	x1, x2, x2, lsl #1
  40b654:	ldr	x6, [x21, #336]
  40b658:	add	x1, x22, x1, lsl #3
  40b65c:	ldr	x4, [x4, x25, lsl #3]
  40b660:	str	x4, [x28, x2, lsl #3]
  40b664:	ldp	x4, x5, [x3]
  40b668:	stp	x4, x5, [x1]
  40b66c:	ldr	w5, [x6, x25, lsl #2]
  40b670:	ldr	x4, [x3, #16]
  40b674:	str	w5, [x27, x2, lsl #2]
  40b678:	str	x4, [x1, #16]
  40b67c:	cbz	x26, 40b68c <wcrtomb@plt+0x8d6c>
  40b680:	ldr	x1, [x21, #280]
  40b684:	ldrb	w1, [x1, x25]
  40b688:	strb	w1, [x26, x2]
  40b68c:	ldr	x1, [x3, #8]
  40b690:	cmp	x1, #0x0
  40b694:	b.le	40b6c8 <wcrtomb@plt+0x8da8>
  40b698:	mov	x2, x0
  40b69c:	add	x5, x0, x1, lsl #4
  40b6a0:	ldr	x4, [x2]
  40b6a4:	ldr	x3, [x20, x4, lsl #3]
  40b6a8:	cmn	x3, #0x1
  40b6ac:	b.ne	40b6bc <wcrtomb@plt+0x8d9c>  // b.any
  40b6b0:	mov	x3, x23
  40b6b4:	str	x23, [x20, x4, lsl #3]
  40b6b8:	add	x23, x23, #0x1
  40b6bc:	str	x3, [x2], #16
  40b6c0:	cmp	x5, x2
  40b6c4:	b.ne	40b6a0 <wcrtomb@plt+0x8d80>  // b.any
  40b6c8:	ldr	x3, [sp, #104]
  40b6cc:	mov	x2, #0x10                  	// #16
  40b6d0:	bl	402380 <qsort@plt>
  40b6d4:	ldr	x1, [x21, #320]
  40b6d8:	add	x25, x25, #0x1
  40b6dc:	ldr	x0, [x21, #152]
  40b6e0:	cmp	x25, x0
  40b6e4:	b.lt	40b630 <wcrtomb@plt+0x8d10>  // b.tstop
  40b6e8:	ldp	x19, x24, [sp, #112]
  40b6ec:	mov	x0, #0x0                   	// #0
  40b6f0:	b	40b6f8 <wcrtomb@plt+0x8dd8>
  40b6f4:	ldr	x1, [x21, #320]
  40b6f8:	add	x2, x22, x0
  40b6fc:	ldr	x4, [x21, #144]
  40b700:	add	x1, x1, x0
  40b704:	ldr	x3, [x21, #336]
  40b708:	ldr	x5, [x28, x24, lsl #3]
  40b70c:	str	x5, [x4, x24, lsl #3]
  40b710:	ldp	x4, x5, [x2]
  40b714:	stp	x4, x5, [x1]
  40b718:	ldr	w6, [x27, x24, lsl #2]
  40b71c:	ldr	x2, [x2, #16]
  40b720:	str	x2, [x1, #16]
  40b724:	str	w6, [x3, x24, lsl #2]
  40b728:	cbz	x26, 40b738 <wcrtomb@plt+0x8e18>
  40b72c:	ldr	x1, [x21, #280]
  40b730:	ldrb	w2, [x26, x24]
  40b734:	strb	w2, [x1, x24]
  40b738:	add	x24, x24, #0x1
  40b73c:	add	x0, x0, #0x18
  40b740:	cmp	x24, x23
  40b744:	b.ne	40b6f4 <wcrtomb@plt+0x8dd4>  // b.any
  40b748:	str	x24, [x21, #152]
  40b74c:	mov	x0, x28
  40b750:	str	x24, [x21, #176]
  40b754:	mov	x23, #0x0                   	// #0
  40b758:	mov	x24, #0x1                   	// #1
  40b75c:	bl	4026b0 <free@plt>
  40b760:	mov	x0, x22
  40b764:	bl	4026b0 <free@plt>
  40b768:	mov	x0, x27
  40b76c:	bl	4026b0 <free@plt>
  40b770:	mov	x0, x26
  40b774:	bl	4026b0 <free@plt>
  40b778:	mov	x0, x20
  40b77c:	bl	4026b0 <free@plt>
  40b780:	ldr	x0, [sp, #248]
  40b784:	bl	4026b0 <free@plt>
  40b788:	mov	x0, x19
  40b78c:	bl	4026b0 <free@plt>
  40b790:	mov	x0, #0x1ff                 	// #511
  40b794:	bfxil	x23, x0, #0, #32
  40b798:	mov	x0, #0x10                  	// #16
  40b79c:	bl	414080 <wcrtomb@plt+0x11760>
  40b7a0:	mov	x3, x0
  40b7a4:	mov	x1, x23
  40b7a8:	mov	x0, #0x0                   	// #0
  40b7ac:	add	x2, sp, #0xc8
  40b7b0:	stp	x3, xzr, [sp, #200]
  40b7b4:	str	x24, [sp, #216]
  40b7b8:	bl	40b000 <wcrtomb@plt+0x86e0>
  40b7bc:	ldr	x0, [x21, #152]
  40b7c0:	cmp	xzr, x0, lsr #62
  40b7c4:	lsl	x0, x0, #2
  40b7c8:	cset	x19, ne  // ne = any
  40b7cc:	cmp	x0, #0x0
  40b7d0:	csel	x19, x19, x24, ge  // ge = tcont
  40b7d4:	cbnz	x19, 40bdd0 <wcrtomb@plt+0x94b0>
  40b7d8:	bl	414080 <wcrtomb@plt+0x11760>
  40b7dc:	str	x0, [x21, #344]
  40b7e0:	ldr	x9, [x21, #152]
  40b7e4:	cmp	x9, #0x0
  40b7e8:	b.le	40b89c <wcrtomb@plt+0x8f7c>
  40b7ec:	ldr	x7, [x21, #320]
  40b7f0:	mov	w3, #0x49                  	// #73
  40b7f4:	ldr	x8, [x21, #336]
  40b7f8:	mov	w10, #0x4                   	// #4
  40b7fc:	nop
  40b800:	str	wzr, [x0, x19, lsl #2]
  40b804:	ldr	w1, [x8, x19, lsl #2]
  40b808:	eor	w1, w1, w1, asr #2
  40b80c:	ands	w1, w1, w3
  40b810:	csel	w1, w1, w10, eq  // eq = none
  40b814:	str	w1, [x0, x19, lsl #2]
  40b818:	ldr	w2, [x8, x19, lsl #2]
  40b81c:	eor	w2, w2, w2, asr #1
  40b820:	tst	w2, w3
  40b824:	b.eq	40b830 <wcrtomb@plt+0x8f10>  // b.none
  40b828:	orr	w1, w1, #0x2
  40b82c:	str	w1, [x0, x19, lsl #2]
  40b830:	ldr	x5, [x7, #8]
  40b834:	cmp	x5, #0x0
  40b838:	b.le	40b88c <wcrtomb@plt+0x8f6c>
  40b83c:	ldr	x2, [x7]
  40b840:	add	x5, x2, x5, lsl #4
  40b844:	nop
  40b848:	ldr	w1, [x2, #8]
  40b84c:	eor	w4, w1, w1, asr #2
  40b850:	tst	w4, w3
  40b854:	b.eq	40b868 <wcrtomb@plt+0x8f48>  // b.none
  40b858:	ldr	w1, [x0, x19, lsl #2]
  40b85c:	orr	w1, w1, #0x4
  40b860:	str	w1, [x0, x19, lsl #2]
  40b864:	ldr	w1, [x2, #8]
  40b868:	eor	w1, w1, w1, asr #1
  40b86c:	tst	w1, w3
  40b870:	b.eq	40b880 <wcrtomb@plt+0x8f60>  // b.none
  40b874:	ldr	w1, [x0, x19, lsl #2]
  40b878:	orr	w1, w1, #0x2
  40b87c:	str	w1, [x0, x19, lsl #2]
  40b880:	add	x2, x2, #0x10
  40b884:	cmp	x5, x2
  40b888:	b.ne	40b848 <wcrtomb@plt+0x8f28>  // b.any
  40b88c:	add	x19, x19, #0x1
  40b890:	add	x7, x7, #0x18
  40b894:	cmp	x19, x9
  40b898:	b.ne	40b800 <wcrtomb@plt+0x8ee0>  // b.any
  40b89c:	ldp	x1, x4, [sp, #200]
  40b8a0:	cmp	x4, #0x0
  40b8a4:	b.le	40bdb0 <wcrtomb@plt+0x9490>
  40b8a8:	add	x4, x1, x4, lsl #4
  40b8ac:	mov	w2, #0x0                   	// #0
  40b8b0:	ldr	x3, [x1], #16
  40b8b4:	cmp	x1, x4
  40b8b8:	ldr	w3, [x0, x3, lsl #2]
  40b8bc:	orr	w2, w2, w3
  40b8c0:	b.ne	40b8b0 <wcrtomb@plt+0x8f90>  // b.any
  40b8c4:	eor	w20, w2, #0x7
  40b8c8:	and	w19, w2, #0x2
  40b8cc:	tbz	w2, #2, 40b8e0 <wcrtomb@plt+0x8fc0>
  40b8d0:	add	x1, sp, #0xc8
  40b8d4:	mov	x0, x21
  40b8d8:	mov	w2, #0x4                   	// #4
  40b8dc:	bl	40ab90 <wcrtomb@plt+0x8270>
  40b8e0:	add	x1, sp, #0xc8
  40b8e4:	mov	w2, w20
  40b8e8:	mov	x0, x21
  40b8ec:	bl	40ab90 <wcrtomb@plt+0x8270>
  40b8f0:	mov	w1, w0
  40b8f4:	str	w0, [x21, #364]
  40b8f8:	sxtw	x0, w0
  40b8fc:	str	x0, [x21, #400]
  40b900:	cbz	w19, 40b918 <wcrtomb@plt+0x8ff8>
  40b904:	add	x1, sp, #0xc8
  40b908:	mov	x0, x21
  40b90c:	mov	w2, #0x2                   	// #2
  40b910:	bl	40ab90 <wcrtomb@plt+0x8270>
  40b914:	mov	w1, w0
  40b918:	ldr	x0, [sp, #160]
  40b91c:	add	w1, w1, #0x1
  40b920:	str	wzr, [x21, #360]
  40b924:	str	w1, [x21, #364]
  40b928:	bl	4026b0 <free@plt>
  40b92c:	ldr	x0, [sp, #152]
  40b930:	bl	4026b0 <free@plt>
  40b934:	ldr	x0, [sp, #224]
  40b938:	bl	4026b0 <free@plt>
  40b93c:	ldr	x0, [sp, #200]
  40b940:	bl	4026b0 <free@plt>
  40b944:	ldp	x19, x20, [sp, #16]
  40b948:	ldp	x21, x22, [sp, #32]
  40b94c:	ldp	x23, x24, [sp, #48]
  40b950:	ldp	x25, x26, [sp, #64]
  40b954:	ldp	x27, x28, [sp, #80]
  40b958:	ldp	x29, x30, [sp], #272
  40b95c:	ret
  40b960:	cmp	x0, #0x112
  40b964:	str	x21, [x27]
  40b968:	cset	w0, eq  // eq = none
  40b96c:	str	x21, [x25]
  40b970:	mov	w2, #0x1ff                 	// #511
  40b974:	strb	w0, [x24]
  40b978:	str	w2, [x27, #8]
  40b97c:	add	x25, x25, #0x10
  40b980:	ldr	x0, [sp, #136]
  40b984:	add	x27, x27, #0x10
  40b988:	stur	w2, [x25, #-8]
  40b98c:	stp	x0, x0, [x24, #8]
  40b990:	add	x24, x24, #0x18
  40b994:	b	40b298 <wcrtomb@plt+0x8978>
  40b998:	mov	w0, #0x1                   	// #1
  40b99c:	strb	w0, [x24]
  40b9a0:	stp	xzr, xzr, [x24, #8]
  40b9a4:	add	x24, x24, #0x18
  40b9a8:	b	40b298 <wcrtomb@plt+0x8978>
  40b9ac:	ldp	x0, x19, [x24, #-16]
  40b9b0:	str	x0, [sp, #208]
  40b9b4:	sub	x22, x24, #0x18
  40b9b8:	add	x26, sp, #0xe8
  40b9bc:	sub	x0, x25, x0, lsl #4
  40b9c0:	str	x0, [sp, #200]
  40b9c4:	cmp	x19, #0x0
  40b9c8:	sub	x19, x27, x19, lsl #4
  40b9cc:	b.le	40bda8 <wcrtomb@plt+0x9488>
  40b9d0:	ldr	x2, [x19]
  40b9d4:	add	x5, sp, #0xe0
  40b9d8:	ldr	x3, [x28, #320]
  40b9dc:	mov	x1, x20
  40b9e0:	add	x2, x2, x2, lsl #1
  40b9e4:	add	x0, sp, #0xc8
  40b9e8:	mov	w4, #0xffffffff            	// #-1
  40b9ec:	add	x2, x3, x2, lsl #3
  40b9f0:	add	x3, x2, #0x8
  40b9f4:	bl	40ae18 <wcrtomb@plt+0x84f8>
  40b9f8:	ldr	x3, [x19], #16
  40b9fc:	mov	x1, x26
  40ba00:	ldr	x2, [x28, #320]
  40ba04:	add	x0, sp, #0xe0
  40ba08:	add	x3, x3, x3, lsl #1
  40ba0c:	add	x2, x2, x3, lsl #3
  40ba10:	bl	40aaf8 <wcrtomb@plt+0x81d8>
  40ba14:	cmp	x27, x19
  40ba18:	b.ne	40b9d0 <wcrtomb@plt+0x90b0>  // b.any
  40ba1c:	ldp	x0, x1, [x28, #144]
  40ba20:	ldr	x0, [x0, x23]
  40ba24:	cmp	x0, #0x103
  40ba28:	b.eq	40b298 <wcrtomb@plt+0x8978>  // b.none
  40ba2c:	b	40b290 <wcrtomb@plt+0x8970>
  40ba30:	ldp	x2, x3, [x24, #-16]
  40ba34:	str	x2, [sp, #144]
  40ba38:	ldur	x0, [x24, #-32]
  40ba3c:	stp	x3, x0, [sp, #120]
  40ba40:	sub	x22, x24, #0x18
  40ba44:	cmp	x0, #0x0
  40ba48:	str	x2, [sp, #208]
  40ba4c:	lsl	x26, x0, #4
  40ba50:	lsl	x0, x3, #4
  40ba54:	str	x0, [sp, #176]
  40ba58:	add	x0, x0, x26
  40ba5c:	sub	x0, x27, x0
  40ba60:	sub	x3, x24, #0x30
  40ba64:	sub	x2, x25, x2, lsl #4
  40ba68:	stp	x3, x2, [sp, #104]
  40ba6c:	add	x24, sp, #0xe8
  40ba70:	str	x0, [sp, #184]
  40ba74:	mov	x19, x0
  40ba78:	str	x2, [sp, #200]
  40ba7c:	add	x23, x26, x0
  40ba80:	b.le	40bad8 <wcrtomb@plt+0x91b8>
  40ba84:	nop
  40ba88:	ldr	x2, [x19]
  40ba8c:	add	x5, sp, #0xe0
  40ba90:	ldr	x3, [x28, #320]
  40ba94:	mov	x1, x20
  40ba98:	add	x2, x2, x2, lsl #1
  40ba9c:	add	x0, sp, #0xc8
  40baa0:	mov	w4, #0xffffffff            	// #-1
  40baa4:	add	x2, x3, x2, lsl #3
  40baa8:	add	x3, x2, #0x8
  40baac:	bl	40ae18 <wcrtomb@plt+0x84f8>
  40bab0:	ldr	x3, [x19], #16
  40bab4:	mov	x1, x24
  40bab8:	ldr	x2, [x28, #320]
  40babc:	add	x0, sp, #0xe0
  40bac0:	add	x3, x3, x3, lsl #1
  40bac4:	add	x2, x2, x3, lsl #3
  40bac8:	bl	40aaf8 <wcrtomb@plt+0x81d8>
  40bacc:	cmp	x23, x19
  40bad0:	b.ne	40ba88 <wcrtomb@plt+0x9168>  // b.any
  40bad4:	ldr	x1, [x28, #152]
  40bad8:	ldr	x0, [sp, #104]
  40badc:	ldrb	w9, [x0]
  40bae0:	cbz	w9, 40bafc <wcrtomb@plt+0x91dc>
  40bae4:	ldr	x2, [sp, #104]
  40bae8:	str	x25, [sp, #112]
  40baec:	ldr	x3, [sp, #144]
  40baf0:	ldr	x0, [x2, #8]
  40baf4:	add	x0, x0, x3
  40baf8:	str	x0, [x2, #8]
  40bafc:	ldrb	w8, [x22]
  40bb00:	cbz	w8, 40bca4 <wcrtomb@plt+0x9384>
  40bb04:	ldp	x0, x2, [sp, #120]
  40bb08:	add	x0, x0, x2
  40bb0c:	ldr	x2, [sp, #104]
  40bb10:	str	x0, [x2, #16]
  40bb14:	cmp	w9, #0x0
  40bb18:	mov	x24, x22
  40bb1c:	ccmp	w8, #0x0, #0x4, ne  // ne = any
  40bb20:	ldp	x2, x25, [sp, #104]
  40bb24:	cset	w0, ne  // ne = any
  40bb28:	strb	w0, [x2]
  40bb2c:	b	40b298 <wcrtomb@plt+0x8978>
  40bb30:	ands	w0, w0, #0x8
  40bb34:	orr	w0, w0, #0x4
  40bb38:	csel	w0, w5, w0, eq  // eq = none
  40bb3c:	strb	w0, [x19, x2]
  40bb40:	b	40b3c8 <wcrtomb@plt+0x8aa8>
  40bb44:	cbz	x28, 40b4bc <wcrtomb@plt+0x8b9c>
  40bb48:	mov	x2, x0
  40bb4c:	mov	x19, #0x0                   	// #0
  40bb50:	ldr	w9, [x2, #8]
  40bb54:	cmp	w1, w9
  40bb58:	b.ne	40bbf8 <wcrtomb@plt+0x92d8>  // b.any
  40bb5c:	ldr	x9, [x2]
  40bb60:	ldrb	w11, [x27, x9]
  40bb64:	tst	w11, #0x6
  40bb68:	b.ne	40bbf8 <wcrtomb@plt+0x92d8>  // b.any
  40bb6c:	ldr	x12, [x4, x9, lsl #3]
  40bb70:	cmp	x5, x12
  40bb74:	b.ne	40bbf8 <wcrtomb@plt+0x92d8>  // b.any
  40bb78:	eor	w11, w24, w11
  40bb7c:	tbnz	w11, #0, 40bbf8 <wcrtomb@plt+0x92d8>
  40bb80:	ldr	x1, [sp, #136]
  40bb84:	add	x0, x23, x23, lsl #1
  40bb88:	add	x10, x1, x0, lsl #3
  40bb8c:	tbnz	w24, #0, 40bc48 <wcrtomb@plt+0x9328>
  40bb90:	ldr	x1, [sp, #136]
  40bb94:	add	x9, x9, x9, lsl #1
  40bb98:	ldr	x0, [x10, #8]
  40bb9c:	add	x2, x1, x9, lsl #3
  40bba0:	cmp	x0, #0x3
  40bba4:	b.gt	40bc18 <wcrtomb@plt+0x92f8>
  40bba8:	cmp	x0, #0x0
  40bbac:	b.le	40bbe8 <wcrtomb@plt+0x92c8>
  40bbb0:	mov	x3, #0x0                   	// #0
  40bbb4:	nop
  40bbb8:	ldr	x0, [x10]
  40bbbc:	add	x0, x0, x3, lsl #4
  40bbc0:	add	x3, x3, #0x1
  40bbc4:	stp	x3, x2, [sp, #104]
  40bbc8:	ldp	x0, x1, [x0]
  40bbcc:	stp	x10, x3, [sp, #120]
  40bbd0:	bl	40b068 <wcrtomb@plt+0x8748>
  40bbd4:	ldr	x10, [sp, #120]
  40bbd8:	ldp	x3, x2, [sp, #104]
  40bbdc:	ldr	x0, [x10, #8]
  40bbe0:	cmp	x3, x0
  40bbe4:	b.lt	40bbb8 <wcrtomb@plt+0x9298>  // b.tstop
  40bbe8:	cmp	x28, x19
  40bbec:	b.le	40bc0c <wcrtomb@plt+0x92ec>
  40bbf0:	ldr	x10, [x21, #8]
  40bbf4:	b	40b4d4 <wcrtomb@plt+0x8bb4>
  40bbf8:	add	x19, x19, #0x1
  40bbfc:	add	x2, x2, #0x10
  40bc00:	cmp	x19, x28
  40bc04:	b.ne	40bb50 <wcrtomb@plt+0x9230>  // b.any
  40bc08:	b	40b4bc <wcrtomb@plt+0x8b9c>
  40bc0c:	ldp	x0, x10, [x21]
  40bc10:	add	x3, x0, x22
  40bc14:	b	40b4bc <wcrtomb@plt+0x8b9c>
  40bc18:	add	x3, x2, #0x8
  40bc1c:	add	x1, x10, #0x8
  40bc20:	mov	x0, x10
  40bc24:	add	x5, sp, #0xf8
  40bc28:	mov	w4, #0xffffffff            	// #-1
  40bc2c:	str	x2, [sp, #104]
  40bc30:	bl	40ae18 <wcrtomb@plt+0x84f8>
  40bc34:	ldr	x2, [sp, #104]
  40bc38:	add	x0, sp, #0xf8
  40bc3c:	ldr	x1, [sp, #168]
  40bc40:	bl	40aaf8 <wcrtomb@plt+0x81d8>
  40bc44:	b	40bbe8 <wcrtomb@plt+0x92c8>
  40bc48:	ldr	x1, [x1, x0, lsl #3]
  40bc4c:	add	x2, x10, #0x8
  40bc50:	mov	x0, x23
  40bc54:	str	x10, [sp, #104]
  40bc58:	bl	40a9a0 <wcrtomb@plt+0x8080>
  40bc5c:	ldr	x10, [sp, #104]
  40bc60:	b	40bb90 <wcrtomb@plt+0x9270>
  40bc64:	ldr	x0, [x21, #176]
  40bc68:	tbnz	x0, #63, 40bdd0 <wcrtomb@plt+0x94b0>
  40bc6c:	bl	414080 <wcrtomb@plt+0x11760>
  40bc70:	mov	x26, x0
  40bc74:	ldr	x0, [x21, #152]
  40bc78:	ldr	x1, [x21, #320]
  40bc7c:	cmp	x0, #0x0
  40bc80:	b.gt	40b614 <wcrtomb@plt+0x8cf4>
  40bc84:	mov	x23, #0x1                   	// #1
  40bc88:	b	40b6ec <wcrtomb@plt+0x8dcc>
  40bc8c:	bl	4026b0 <free@plt>
  40bc90:	ldr	x1, [x21, #320]
  40bc94:	add	x5, x1, x24
  40bc98:	str	xzr, [x1, x19, lsl #3]
  40bc9c:	str	xzr, [x5, #8]
  40bca0:	b	40b6d8 <wcrtomb@plt+0x8db8>
  40bca4:	ldr	x2, [sp, #120]
  40bca8:	ldr	x0, [sp, #184]
  40bcac:	cmp	x2, #0x0
  40bcb0:	ldr	x2, [sp, #176]
  40bcb4:	add	x2, x0, x2
  40bcb8:	b.le	40bcd4 <wcrtomb@plt+0x93b4>
  40bcbc:	nop
  40bcc0:	add	x3, x0, x26
  40bcc4:	ldp	x4, x5, [x3]
  40bcc8:	stp	x4, x5, [x0], #16
  40bccc:	cmp	x2, x0
  40bcd0:	b.ne	40bcc0 <wcrtomb@plt+0x93a0>  // b.any
  40bcd4:	ldr	x0, [sp, #104]
  40bcd8:	sub	x27, x27, x26
  40bcdc:	ldr	x2, [sp, #120]
  40bce0:	str	x2, [x0, #16]
  40bce4:	b	40bb14 <wcrtomb@plt+0x91f4>
  40bce8:	sub	x2, x2, #0x10c
  40bcec:	mov	w24, #0x1ff                 	// #511
  40bcf0:	cmp	x2, #0x5
  40bcf4:	b.hi	40bcfc <wcrtomb@plt+0x93dc>  // b.pmore
  40bcf8:	ldr	w24, [x19, x2, lsl #2]
  40bcfc:	mov	x2, x0
  40bd00:	mov	x0, x22
  40bd04:	ldr	x1, [x2], #8
  40bd08:	bl	40a9a0 <wcrtomb@plt+0x8080>
  40bd0c:	ldr	x1, [x21, #152]
  40bd10:	cmp	x1, #0x0
  40bd14:	b.le	40b374 <wcrtomb@plt+0x8a54>
  40bd18:	mov	x25, #0x0                   	// #0
  40bd1c:	b	40bd2c <wcrtomb@plt+0x940c>
  40bd20:	add	x25, x25, #0x1
  40bd24:	cmp	x25, x1
  40bd28:	b.ge	40b364 <wcrtomb@plt+0x8a44>  // b.tcont
  40bd2c:	cmp	x25, x22
  40bd30:	b.eq	40bd20 <wcrtomb@plt+0x9400>  // b.none
  40bd34:	ldr	x26, [x21, #320]
  40bd38:	add	x0, x25, x25, lsl #1
  40bd3c:	add	x27, x26, x0, lsl #3
  40bd40:	ldr	x2, [x27, #8]
  40bd44:	cmp	x2, #0x0
  40bd48:	b.le	40bd20 <wcrtomb@plt+0x9400>
  40bd4c:	ldr	x1, [x26, x0, lsl #3]
  40bd50:	add	x2, x27, #0x8
  40bd54:	mov	x0, x22
  40bd58:	bl	40a9a0 <wcrtomb@plt+0x8080>
  40bd5c:	ands	w4, w24, w0
  40bd60:	b.ne	40bd6c <wcrtomb@plt+0x944c>  // b.any
  40bd64:	ldr	x1, [x21, #152]
  40bd68:	b	40bd20 <wcrtomb@plt+0x9400>
  40bd6c:	mov	x1, x2
  40bd70:	mov	x0, x27
  40bd74:	add	x2, sp, #0xf8
  40bd78:	str	w4, [sp, #104]
  40bd7c:	bl	40aaf8 <wcrtomb@plt+0x81d8>
  40bd80:	add	x26, x26, x23
  40bd84:	ldr	w4, [sp, #104]
  40bd88:	mov	x1, x20
  40bd8c:	mov	x5, x27
  40bd90:	add	x3, x26, #0x8
  40bd94:	mov	x2, x26
  40bd98:	add	x0, sp, #0xf8
  40bd9c:	bl	40ae18 <wcrtomb@plt+0x84f8>
  40bda0:	ldr	x1, [x21, #152]
  40bda4:	b	40bd20 <wcrtomb@plt+0x9400>
  40bda8:	ldr	x0, [x2, x23]
  40bdac:	b	40ba24 <wcrtomb@plt+0x9104>
  40bdb0:	add	x1, sp, #0xc8
  40bdb4:	mov	x0, x21
  40bdb8:	mov	w2, #0x7                   	// #7
  40bdbc:	bl	40ab90 <wcrtomb@plt+0x8270>
  40bdc0:	mov	w1, w0
  40bdc4:	sxtw	x0, w0
  40bdc8:	str	x0, [x21, #400]
  40bdcc:	b	40b918 <wcrtomb@plt+0x8ff8>
  40bdd0:	bl	4142c0 <wcrtomb@plt+0x119a0>
  40bdd4:	nop
  40bdd8:	stp	x29, x30, [sp, #-256]!
  40bddc:	mov	x29, sp
  40bde0:	stp	x21, x22, [sp, #32]
  40bde4:	mov	x22, x0
  40bde8:	and	w0, w2, #0xff
  40bdec:	stp	x19, x20, [sp, #16]
  40bdf0:	add	x20, x22, x22, lsl #2
  40bdf4:	ldr	x2, [x1, #296]
  40bdf8:	lsl	x20, x20, #4
  40bdfc:	stp	x25, x26, [sp, #64]
  40be00:	mov	x26, x1
  40be04:	add	x2, x2, x20
  40be08:	str	w0, [sp, #116]
  40be0c:	ldp	x0, x1, [x1, #368]
  40be10:	stp	x23, x24, [sp, #48]
  40be14:	ldrh	w2, [x2, #34]
  40be18:	stp	x27, x28, [sp, #80]
  40be1c:	cmp	w2, #0x0
  40be20:	csel	x1, x1, x0, ne  // ne = any
  40be24:	add	x24, x1, x22, lsl #3
  40be28:	ldr	x21, [x1, x22, lsl #3]
  40be2c:	cbz	x21, 40c510 <wcrtomb@plt+0x9bf0>
  40be30:	ldr	x0, [x26, #384]
  40be34:	strb	wzr, [x0, x22]
  40be38:	ldr	x0, [x26, #296]
  40be3c:	add	x0, x0, x20
  40be40:	ldrb	w1, [x0, #32]
  40be44:	ldrh	w0, [x0, #34]
  40be48:	and	w2, w1, w0, lsr #6
  40be4c:	tst	x2, #0x7
  40be50:	b.eq	40be74 <wcrtomb@plt+0x9554>  // b.none
  40be54:	ldr	x1, [x26, #384]
  40be58:	ldrb	w0, [x1, x22]
  40be5c:	orr	w0, w0, #0x4
  40be60:	strb	w0, [x1, x22]
  40be64:	ldr	x0, [x26, #296]
  40be68:	add	x0, x0, x20
  40be6c:	ldrb	w1, [x0, #32]
  40be70:	ldrh	w0, [x0, #34]
  40be74:	and	w2, w1, w0, lsr #3
  40be78:	tst	x2, #0x7
  40be7c:	b.eq	40bea0 <wcrtomb@plt+0x9580>  // b.none
  40be80:	ldr	x1, [x26, #384]
  40be84:	ldrb	w0, [x1, x22]
  40be88:	orr	w0, w0, #0x2
  40be8c:	strb	w0, [x1, x22]
  40be90:	ldr	x0, [x26, #296]
  40be94:	add	x0, x0, x20
  40be98:	ldrb	w1, [x0, #32]
  40be9c:	ldrh	w0, [x0, #34]
  40bea0:	and	w0, w0, #0x7
  40bea4:	tst	w0, w1
  40bea8:	b.eq	40bebc <wcrtomb@plt+0x959c>  // b.none
  40beac:	ldr	x1, [x26, #384]
  40beb0:	ldrb	w0, [x1, x22]
  40beb4:	orr	w0, w0, #0x1
  40beb8:	strb	w0, [x1, x22]
  40bebc:	ldr	x1, [x26, #176]
  40bec0:	add	x0, sp, #0x90
  40bec4:	bl	40a750 <wcrtomb@plt+0x7e30>
  40bec8:	ldr	x0, [x26, #296]
  40becc:	add	x0, x0, x20
  40bed0:	ldr	x1, [x0, #16]
  40bed4:	cmp	x1, #0x0
  40bed8:	b.le	40bf60 <wcrtomb@plt+0x9640>
  40bedc:	ldr	x1, [x26, #320]
  40bee0:	mov	x24, #0x0                   	// #0
  40bee4:	nop
  40bee8:	ldr	x2, [x0, #8]
  40beec:	lsl	x19, x24, #4
  40bef0:	mov	x25, #0x0                   	// #0
  40bef4:	ldr	x2, [x2, x19]
  40bef8:	add	x2, x2, x2, lsl #1
  40befc:	add	x2, x1, x2, lsl #3
  40bf00:	ldr	x3, [x2, #8]
  40bf04:	cmp	x3, #0x0
  40bf08:	b.le	40bf50 <wcrtomb@plt+0x9630>
  40bf0c:	nop
  40bf10:	ldr	x0, [x2]
  40bf14:	add	x2, sp, #0x90
  40bf18:	add	x0, x0, x25, lsl #4
  40bf1c:	add	x25, x25, #0x1
  40bf20:	ldp	x0, x1, [x0]
  40bf24:	bl	40b068 <wcrtomb@plt+0x8748>
  40bf28:	ldr	x0, [x26, #296]
  40bf2c:	ldr	x1, [x26, #320]
  40bf30:	add	x0, x0, x20
  40bf34:	ldr	x2, [x0, #8]
  40bf38:	ldr	x2, [x2, x19]
  40bf3c:	add	x2, x2, x2, lsl #1
  40bf40:	add	x2, x1, x2, lsl #3
  40bf44:	ldr	x3, [x2, #8]
  40bf48:	cmp	x3, x25
  40bf4c:	b.gt	40bf10 <wcrtomb@plt+0x95f0>
  40bf50:	ldr	x2, [x0, #16]
  40bf54:	add	x24, x24, #0x1
  40bf58:	cmp	x2, x24
  40bf5c:	b.gt	40bee8 <wcrtomb@plt+0x95c8>
  40bf60:	ldr	x1, [x26, #176]
  40bf64:	add	x0, sp, #0xa8
  40bf68:	mov	x19, #0xffffffffffffffff    	// #-1
  40bf6c:	bl	40a750 <wcrtomb@plt+0x7e30>
  40bf70:	stp	x19, x19, [sp, #192]
  40bf74:	ldr	x9, [sp, #152]
  40bf78:	stp	x19, x19, [sp, #208]
  40bf7c:	cmp	x9, #0x0
  40bf80:	b.le	40c5c0 <wcrtomb@plt+0x9ca0>
  40bf84:	ldr	w0, [sp, #116]
  40bf88:	add	x24, sp, #0xc0
  40bf8c:	add	x25, x24, #0x20
  40bf90:	add	x27, sp, #0xe0
  40bf94:	mov	x28, #0x0                   	// #0
  40bf98:	ubfx	x23, x0, #6, #2
  40bf9c:	and	w0, w0, #0x3f
  40bfa0:	str	w0, [sp, #112]
  40bfa4:	nop
  40bfa8:	ldr	x2, [sp, #144]
  40bfac:	lsl	x0, x28, #4
  40bfb0:	ldr	x7, [x26, #144]
  40bfb4:	add	x1, x2, x0
  40bfb8:	ldr	x0, [x2, x0]
  40bfbc:	ldp	x4, x5, [x1]
  40bfc0:	ldr	x0, [x7, x0, lsl #3]
  40bfc4:	ldr	w7, [x1, #8]
  40bfc8:	cmp	x0, #0xff
  40bfcc:	b.ls	40c0ec <wcrtomb@plt+0x97cc>  // b.plast
  40bfd0:	cmp	x0, #0x113
  40bfd4:	b.le	40c15c <wcrtomb@plt+0x983c>
  40bfd8:	ldr	x1, [x26]
  40bfdc:	add	x0, x1, x0, lsl #5
  40bfe0:	mov	x1, #0xffffffffffffdd80    	// #-8832
  40bfe4:	add	x0, x0, x1
  40bfe8:	ldrb	w1, [sp, #112]
  40bfec:	ld1	{v0.16b, v1.16b}, [x0]
  40bff0:	st1	{v0.16b, v1.16b}, [x27]
  40bff4:	ldr	x0, [x27, x23, lsl #3]
  40bff8:	lsr	x0, x0, x1
  40bffc:	and	w8, w0, #0x1
  40c000:	tbz	w0, #0, 40c110 <wcrtomb@plt+0x97f0>
  40c004:	cmp	w7, #0x1ff
  40c008:	ldr	x0, [x27]
  40c00c:	b.ne	40c20c <wcrtomb@plt+0x98ec>  // b.any
  40c010:	mov	x1, x24
  40c014:	and	x19, x19, x0
  40c018:	mov	x2, x27
  40c01c:	add	x2, x2, #0x8
  40c020:	str	x19, [x1], #8
  40c024:	cmp	x25, x1
  40c028:	b.eq	40c048 <wcrtomb@plt+0x9728>  // b.none
  40c02c:	ldr	x19, [x1]
  40c030:	add	x2, x2, #0x8
  40c034:	ldur	x0, [x2, #-8]
  40c038:	and	x19, x19, x0
  40c03c:	str	x19, [x1], #8
  40c040:	cmp	x25, x1
  40c044:	b.ne	40c02c <wcrtomb@plt+0x970c>  // b.any
  40c048:	mov	x0, x4
  40c04c:	mov	x1, x5
  40c050:	add	x2, sp, #0xa8
  40c054:	bl	40b000 <wcrtomb@plt+0x86e0>
  40c058:	ldr	x9, [sp, #152]
  40c05c:	ldr	x19, [x24]
  40c060:	add	x28, x28, #0x1
  40c064:	cmp	x9, x28
  40c068:	b.gt	40bfa8 <wcrtomb@plt+0x9688>
  40c06c:	ldr	x1, [x26, #176]
  40c070:	mov	x0, x27
  40c074:	bl	40a750 <wcrtomb@plt+0x7e30>
  40c078:	ldr	x4, [sp, #176]
  40c07c:	ldrb	w0, [x26, #328]
  40c080:	cmp	x4, #0x0
  40c084:	b.le	40c4f4 <wcrtomb@plt+0x9bd4>
  40c088:	cbnz	w0, 40c350 <wcrtomb@plt+0x9a30>
  40c08c:	ldr	x1, [sp, #168]
  40c090:	mov	x5, x19
  40c094:	add	x9, x26, #0x3f0
  40c098:	add	x10, x26, #0x3d0
  40c09c:	mov	x2, #0x0                   	// #0
  40c0a0:	mov	w0, #0x0                   	// #0
  40c0a4:	ldr	x3, [x9, x2]
  40c0a8:	orr	w7, w0, #0x4
  40c0ac:	ldr	x6, [x10, x2]
  40c0b0:	tst	x3, x5
  40c0b4:	csel	w0, w7, w0, ne  // ne = any
  40c0b8:	add	x8, x24, x2
  40c0bc:	tst	x6, x5
  40c0c0:	orr	w7, w0, #0x2
  40c0c4:	csel	w0, w7, w0, ne  // ne = any
  40c0c8:	orr	x3, x3, x6
  40c0cc:	bics	xzr, x5, x3
  40c0d0:	orr	w3, w0, #0x1
  40c0d4:	csel	w0, w3, w0, ne  // ne = any
  40c0d8:	cmp	x2, #0x18
  40c0dc:	b.eq	40c3bc <wcrtomb@plt+0x9a9c>  // b.none
  40c0e0:	add	x2, x2, #0x8
  40c0e4:	ldr	x5, [x8, #8]
  40c0e8:	b	40c0a4 <wcrtomb@plt+0x9784>
  40c0ec:	lsr	w1, w0, #6
  40c0f0:	ldrb	w3, [sp, #116]
  40c0f4:	mov	x8, #0x1                   	// #1
  40c0f8:	stp	xzr, xzr, [x27]
  40c0fc:	lsl	x2, x8, x0
  40c100:	stp	xzr, xzr, [x27, #16]
  40c104:	cmp	x0, w3, uxtb
  40c108:	str	x2, [x27, x1, lsl #3]
  40c10c:	b.eq	40c004 <wcrtomb@plt+0x96e4>  // b.none
  40c110:	cmp	w7, #0x1ff
  40c114:	mov	w8, #0x0                   	// #0
  40c118:	ldr	x0, [x27]
  40c11c:	b.ne	40c20c <wcrtomb@plt+0x98ec>  // b.any
  40c120:	mov	x1, x24
  40c124:	bic	x19, x19, x0
  40c128:	mov	x2, x27
  40c12c:	add	x2, x2, #0x8
  40c130:	str	x19, [x1], #8
  40c134:	cmp	x25, x1
  40c138:	b.eq	40c05c <wcrtomb@plt+0x973c>  // b.none
  40c13c:	ldr	x19, [x1]
  40c140:	add	x2, x2, #0x8
  40c144:	ldur	x0, [x2, #-8]
  40c148:	bic	x19, x19, x0
  40c14c:	str	x19, [x1], #8
  40c150:	cmp	x25, x1
  40c154:	b.ne	40c13c <wcrtomb@plt+0x981c>  // b.any
  40c158:	b	40c05c <wcrtomb@plt+0x973c>
  40c15c:	cmp	x0, #0x10a
  40c160:	b.ne	40c060 <wcrtomb@plt+0x9740>  // b.any
  40c164:	ldr	x1, [x26]
  40c168:	ldr	x0, [x26, #24]
  40c16c:	ldr	x2, [x26, #296]
  40c170:	add	x0, x1, x0, lsl #5
  40c174:	add	x2, x2, x20
  40c178:	ld1	{v0.16b, v1.16b}, [x0]
  40c17c:	st1	{v0.16b, v1.16b}, [x27]
  40c180:	ldrb	w0, [x2, #32]
  40c184:	ldr	x8, [x27, x23, lsl #3]
  40c188:	and	w0, w0, w7
  40c18c:	tst	x0, #0x7
  40c190:	ldrb	w0, [sp, #112]
  40c194:	lsr	x8, x8, x0
  40c198:	and	w8, w8, #0x1
  40c19c:	b.eq	40c200 <wcrtomb@plt+0x98e0>  // b.none
  40c1a0:	ldr	x0, [x2, #56]
  40c1a4:	cbnz	x0, 40c1e0 <wcrtomb@plt+0x98c0>
  40c1a8:	mov	x0, #0x10                  	// #16
  40c1ac:	str	x2, [sp, #96]
  40c1b0:	stp	w7, w8, [sp, #120]
  40c1b4:	stp	x4, x5, [sp, #128]
  40c1b8:	bl	414080 <wcrtomb@plt+0x11760>
  40c1bc:	ldr	x2, [sp, #96]
  40c1c0:	ldp	x4, x5, [sp, #128]
  40c1c4:	add	x1, x2, #0x30
  40c1c8:	ldr	x9, [x26, #296]
  40c1cc:	stp	x0, xzr, [x2, #48]
  40c1d0:	mov	x0, #0x1                   	// #1
  40c1d4:	ldp	w7, w8, [sp, #120]
  40c1d8:	add	x2, x9, x20
  40c1dc:	str	x0, [x1, #16]
  40c1e0:	mov	x0, x4
  40c1e4:	mov	x1, x5
  40c1e8:	add	x2, x2, #0x30
  40c1ec:	stp	x4, x5, [sp, #96]
  40c1f0:	stp	w7, w8, [sp, #120]
  40c1f4:	bl	40b068 <wcrtomb@plt+0x8748>
  40c1f8:	ldp	x4, x5, [sp, #96]
  40c1fc:	ldp	w7, w8, [sp, #120]
  40c200:	cmp	w7, #0x1ff
  40c204:	ldr	x0, [x27]
  40c208:	b.eq	40c264 <wcrtomb@plt+0x9944>  // b.none
  40c20c:	ldr	x1, [x26, #296]
  40c210:	add	x1, x1, x20
  40c214:	ldrb	w1, [x1, #32]
  40c218:	and	w2, w1, w7, asr #6
  40c21c:	tst	x2, #0x7
  40c220:	b.eq	40c310 <wcrtomb@plt+0x99f0>  // b.none
  40c224:	and	w2, w1, w7, asr #3
  40c228:	tst	x2, #0x7
  40c22c:	b.eq	40c2d0 <wcrtomb@plt+0x99b0>  // b.none
  40c230:	and	w1, w1, w7
  40c234:	tst	x1, #0x7
  40c238:	b.eq	40c278 <wcrtomb@plt+0x9958>  // b.none
  40c23c:	ldp	x1, x7, [x27, #8]
  40c240:	ldr	x2, [x27, #24]
  40c244:	orr	x2, x0, x2
  40c248:	orr	x1, x1, x7
  40c24c:	orr	x1, x1, x2
  40c250:	cbz	x1, 40c270 <wcrtomb@plt+0x9950>
  40c254:	ldr	x1, [x27, x23, lsl #3]
  40c258:	ldrb	w2, [sp, #112]
  40c25c:	lsr	x1, x1, x2
  40c260:	tbz	w1, #0, 40c268 <wcrtomb@plt+0x9948>
  40c264:	cbnz	w8, 40c010 <wcrtomb@plt+0x96f0>
  40c268:	ldr	x9, [sp, #152]
  40c26c:	b	40c120 <wcrtomb@plt+0x9800>
  40c270:	ldr	x9, [sp, #152]
  40c274:	b	40c060 <wcrtomb@plt+0x9740>
  40c278:	ldr	x1, [x26, #976]
  40c27c:	mov	x7, x27
  40c280:	ldr	x10, [x26, #1008]
  40c284:	add	x2, x26, #0x3d0
  40c288:	add	x9, x26, #0x3f0
  40c28c:	add	x2, x2, #0x8
  40c290:	orr	x1, x1, x10
  40c294:	cmp	x9, x2
  40c298:	and	x0, x1, x0
  40c29c:	str	x0, [x7], #8
  40c2a0:	b.eq	40c2c8 <wcrtomb@plt+0x99a8>  // b.none
  40c2a4:	ldr	x1, [x2]
  40c2a8:	add	x2, x2, #0x8
  40c2ac:	ldr	x10, [x2, #24]
  40c2b0:	cmp	x9, x2
  40c2b4:	ldr	x0, [x7]
  40c2b8:	orr	x1, x1, x10
  40c2bc:	and	x0, x1, x0
  40c2c0:	str	x0, [x7], #8
  40c2c4:	b.ne	40c2a4 <wcrtomb@plt+0x9984>  // b.any
  40c2c8:	ldr	x0, [x27]
  40c2cc:	b	40c23c <wcrtomb@plt+0x991c>
  40c2d0:	add	x10, x26, #0x3d0
  40c2d4:	mov	x11, x27
  40c2d8:	add	x9, x26, #0x3f0
  40c2dc:	ldr	x2, [x10], #8
  40c2e0:	bic	x0, x0, x2
  40c2e4:	str	x0, [x11], #8
  40c2e8:	cmp	x9, x10
  40c2ec:	b.eq	40c308 <wcrtomb@plt+0x99e8>  // b.none
  40c2f0:	ldr	x0, [x11]
  40c2f4:	ldr	x2, [x10], #8
  40c2f8:	bic	x0, x0, x2
  40c2fc:	str	x0, [x11], #8
  40c300:	cmp	x9, x10
  40c304:	b.ne	40c2f0 <wcrtomb@plt+0x99d0>  // b.any
  40c308:	ldr	x0, [x27]
  40c30c:	b	40c230 <wcrtomb@plt+0x9910>
  40c310:	add	x9, x26, #0x3f0
  40c314:	mov	x10, x27
  40c318:	add	x11, x26, #0x410
  40c31c:	ldr	x2, [x9], #8
  40c320:	bic	x0, x0, x2
  40c324:	str	x0, [x10], #8
  40c328:	cmp	x11, x9
  40c32c:	b.eq	40c348 <wcrtomb@plt+0x9a28>  // b.none
  40c330:	ldr	x0, [x10]
  40c334:	ldr	x2, [x9], #8
  40c338:	bic	x0, x0, x2
  40c33c:	str	x0, [x10], #8
  40c340:	cmp	x11, x9
  40c344:	b.ne	40c330 <wcrtomb@plt+0x9a10>  // b.any
  40c348:	ldr	x0, [x27]
  40c34c:	b	40c224 <wcrtomb@plt+0x9904>
  40c350:	ldrb	w0, [x26, #1048]
  40c354:	cbz	w0, 40c384 <wcrtomb@plt+0x9a64>
  40c358:	ldr	x1, [sp, #168]
  40c35c:	mov	x0, #0x0                   	// #0
  40c360:	ldr	x3, [x26, #280]
  40c364:	nop
  40c368:	lsl	x2, x0, #4
  40c36c:	add	x0, x0, #0x1
  40c370:	ldr	x2, [x1, x2]
  40c374:	ldrb	w2, [x3, x2]
  40c378:	tbz	w2, #0, 40c090 <wcrtomb@plt+0x9770>
  40c37c:	cmp	x4, x0
  40c380:	b.ne	40c368 <wcrtomb@plt+0x9a48>  // b.any
  40c384:	ldr	x0, [x26, #296]
  40c388:	mov	x5, x27
  40c38c:	add	x3, sp, #0xb0
  40c390:	mov	w4, #0xffffffff            	// #-1
  40c394:	add	x1, x0, #0x10
  40c398:	add	x2, sp, #0xa8
  40c39c:	add	x0, x0, #0x8
  40c3a0:	bl	40ae18 <wcrtomb@plt+0x84f8>
  40c3a4:	add	x1, x27, #0x8
  40c3a8:	add	x2, sp, #0xa8
  40c3ac:	mov	x0, x27
  40c3b0:	bl	40aaf8 <wcrtomb@plt+0x81d8>
  40c3b4:	ldp	x1, x4, [sp, #168]
  40c3b8:	b	40c090 <wcrtomb@plt+0x9770>
  40c3bc:	cmp	x4, #0x0
  40c3c0:	b.le	40c5cc <wcrtomb@plt+0x9cac>
  40c3c4:	ldr	x5, [x26, #344]
  40c3c8:	add	x4, x1, x4, lsl #4
  40c3cc:	mov	w2, #0x0                   	// #0
  40c3d0:	ldr	x3, [x1], #16
  40c3d4:	cmp	x4, x1
  40c3d8:	ldr	w3, [x5, x3, lsl #2]
  40c3dc:	orr	w2, w2, w3
  40c3e0:	b.ne	40c3d0 <wcrtomb@plt+0x9ab0>  // b.any
  40c3e4:	and	w1, w2, w0
  40c3e8:	bics	wzr, w0, w2
  40c3ec:	and	w27, w1, #0x4
  40c3f0:	and	w28, w1, #0x2
  40c3f4:	mov	x20, #0xffffffffffffffff    	// #-1
  40c3f8:	b.ne	40c5a8 <wcrtomb@plt+0x9c88>  // b.any
  40c3fc:	mov	x25, x20
  40c400:	cbz	w27, 40c418 <wcrtomb@plt+0x9af8>
  40c404:	add	x1, sp, #0xa8
  40c408:	mov	x0, x26
  40c40c:	mov	w2, #0x4                   	// #4
  40c410:	bl	40ab90 <wcrtomb@plt+0x8270>
  40c414:	mov	x25, x0
  40c418:	mov	x27, x20
  40c41c:	cbz	w28, 40c434 <wcrtomb@plt+0x9b14>
  40c420:	add	x1, sp, #0xa8
  40c424:	mov	x0, x26
  40c428:	mov	w2, #0x2                   	// #2
  40c42c:	bl	40ab90 <wcrtomb@plt+0x8270>
  40c430:	mov	x27, x0
  40c434:	mov	x0, x26
  40c438:	bl	40a2f8 <wcrtomb@plt+0x79d8>
  40c43c:	add	x1, x26, #0x1cc
  40c440:	mov	x2, #0x0                   	// #0
  40c444:	b	40c468 <wcrtomb@plt+0x9b48>
  40c448:	cmp	w0, #0x4
  40c44c:	csel	x0, x20, x25, ne  // ne = any
  40c450:	str	x0, [x21, x2, lsl #3]
  40c454:	add	x2, x2, #0x1
  40c458:	cmp	x2, #0x100
  40c45c:	b.eq	40c48c <wcrtomb@plt+0x9b6c>  // b.none
  40c460:	lsr	w0, w2, #6
  40c464:	ldr	x19, [x24, x0, lsl #3]
  40c468:	lsr	x19, x19, x2
  40c46c:	tbz	w19, #0, 40c454 <wcrtomb@plt+0x9b34>
  40c470:	ldrb	w0, [x1, x2]
  40c474:	cmp	w0, #0x2
  40c478:	b.ne	40c448 <wcrtomb@plt+0x9b28>  // b.any
  40c47c:	str	x27, [x21, x2, lsl #3]
  40c480:	add	x2, x2, #0x1
  40c484:	cmp	x2, #0x100
  40c488:	b.ne	40c460 <wcrtomb@plt+0x9b40>  // b.any
  40c48c:	ldr	x0, [sp, #168]
  40c490:	bl	4026b0 <free@plt>
  40c494:	ldr	x0, [sp, #144]
  40c498:	bl	4026b0 <free@plt>
  40c49c:	ldr	x0, [sp, #224]
  40c4a0:	bl	4026b0 <free@plt>
  40c4a4:	ldrb	w0, [x26, #459]
  40c4a8:	ubfx	x1, x0, #6, #2
  40c4ac:	ldr	x1, [x24, x1, lsl #3]
  40c4b0:	lsr	x1, x1, x0
  40c4b4:	tbz	w1, #0, 40c4d0 <wcrtomb@plt+0x9bb0>
  40c4b8:	ldr	x2, [x26, #392]
  40c4bc:	mov	x1, #0xffffffffffffffff    	// #-1
  40c4c0:	ldr	x0, [x21, x0, lsl #3]
  40c4c4:	str	x0, [x2, x22, lsl #3]
  40c4c8:	ldrb	w0, [x26, #459]
  40c4cc:	str	x1, [x21, x0, lsl #3]
  40c4d0:	ldr	w23, [sp, #116]
  40c4d4:	ldp	x19, x20, [sp, #16]
  40c4d8:	ldp	x25, x26, [sp, #64]
  40c4dc:	ldr	x0, [x21, x23, lsl #3]
  40c4e0:	ldp	x21, x22, [sp, #32]
  40c4e4:	ldp	x23, x24, [sp, #48]
  40c4e8:	ldp	x27, x28, [sp, #80]
  40c4ec:	ldp	x29, x30, [sp], #256
  40c4f0:	ret
  40c4f4:	cbz	w0, 40c550 <wcrtomb@plt+0x9c30>
  40c4f8:	ldr	w27, [x26, #364]
  40c4fc:	mov	x25, #0x0                   	// #0
  40c500:	ldr	x20, [x26, #400]
  40c504:	sub	w27, w27, #0x1
  40c508:	sxtw	x27, w27
  40c50c:	b	40c43c <wcrtomb@plt+0x9b1c>
  40c510:	ldr	w1, [x26, #360]
  40c514:	cmp	w1, #0x3ff
  40c518:	b.gt	40c560 <wcrtomb@plt+0x9c40>
  40c51c:	add	w1, w1, #0x1
  40c520:	str	w1, [x26, #360]
  40c524:	mov	x0, #0x800                 	// #2048
  40c528:	bl	414080 <wcrtomb@plt+0x11760>
  40c52c:	mov	x21, x0
  40c530:	add	x1, x0, #0x800
  40c534:	mov	x2, #0xfffffffffffffffe    	// #-2
  40c538:	str	x0, [x24]
  40c53c:	nop
  40c540:	str	x2, [x0], #8
  40c544:	cmp	x1, x0
  40c548:	b.ne	40c540 <wcrtomb@plt+0x9c20>  // b.any
  40c54c:	b	40be30 <wcrtomb@plt+0x9510>
  40c550:	mov	x27, #0xffffffffffffffff    	// #-1
  40c554:	mov	x25, x27
  40c558:	mov	x20, x27
  40c55c:	b	40c43c <wcrtomb@plt+0x9b1c>
  40c560:	ldr	x1, [x26, #352]
  40c564:	ldrsw	x19, [x26, #364]
  40c568:	cmp	x1, x19
  40c56c:	b.le	40c5a0 <wcrtomb@plt+0x9c80>
  40c570:	ldr	x0, [x0, x19, lsl #3]
  40c574:	bl	4026b0 <free@plt>
  40c578:	ldr	x0, [x26, #376]
  40c57c:	ldr	x0, [x0, x19, lsl #3]
  40c580:	bl	4026b0 <free@plt>
  40c584:	ldp	x0, x1, [x26, #368]
  40c588:	str	xzr, [x1, x19, lsl #3]
  40c58c:	ldr	x1, [x26, #352]
  40c590:	str	xzr, [x0, x19, lsl #3]
  40c594:	add	x19, x19, #0x1
  40c598:	cmp	x1, x19
  40c59c:	b.gt	40c570 <wcrtomb@plt+0x9c50>
  40c5a0:	mov	w1, #0x1                   	// #1
  40c5a4:	b	40c520 <wcrtomb@plt+0x9c00>
  40c5a8:	eor	w2, w2, #0x7
  40c5ac:	add	x1, sp, #0xa8
  40c5b0:	mov	x0, x26
  40c5b4:	bl	40ab90 <wcrtomb@plt+0x8270>
  40c5b8:	mov	x20, x0
  40c5bc:	b	40c3fc <wcrtomb@plt+0x9adc>
  40c5c0:	add	x27, sp, #0xe0
  40c5c4:	add	x24, sp, #0xc0
  40c5c8:	b	40c06c <wcrtomb@plt+0x974c>
  40c5cc:	cbnz	w0, 40c5e0 <wcrtomb@plt+0x9cc0>
  40c5d0:	mov	x20, #0xffffffffffffffff    	// #-1
  40c5d4:	mov	x25, x20
  40c5d8:	mov	x27, x20
  40c5dc:	b	40c434 <wcrtomb@plt+0x9b14>
  40c5e0:	mov	w28, #0x0                   	// #0
  40c5e4:	mov	w27, #0x0                   	// #0
  40c5e8:	mov	w2, #0x7                   	// #7
  40c5ec:	b	40c5ac <wcrtomb@plt+0x9c8c>
  40c5f0:	stp	x29, x30, [sp, #-96]!
  40c5f4:	mov	x29, sp
  40c5f8:	stp	x25, x26, [sp, #64]
  40c5fc:	mov	x25, x2
  40c600:	mov	x2, x3
  40c604:	stp	x23, x24, [sp, #48]
  40c608:	mov	x23, x1
  40c60c:	mov	x3, x0
  40c610:	ldr	x1, [x25]
  40c614:	stp	x21, x22, [sp, #32]
  40c618:	mov	x21, x0
  40c61c:	sub	x2, x2, x1
  40c620:	add	x0, sp, #0x5c
  40c624:	stp	x19, x20, [sp, #16]
  40c628:	bl	40a018 <wcrtomb@plt+0x76f8>
  40c62c:	mov	w24, w0
  40c630:	str	xzr, [x21, #416]
  40c634:	cmp	w0, #0x0
  40c638:	b.le	40c930 <wcrtomb@plt+0xa010>
  40c63c:	mov	x19, x23
  40c640:	mov	w22, #0x0                   	// #0
  40c644:	ldr	x3, [x25]
  40c648:	b	40c688 <wcrtomb@plt+0x9d68>
  40c64c:	mov	w4, w2
  40c650:	mov	x5, x3
  40c654:	ldr	x1, [x20, x4, lsl #3]
  40c658:	cmn	x1, #0x2
  40c65c:	b.eq	40c6e0 <wcrtomb@plt+0x9dc0>  // b.none
  40c660:	add	x3, x5, #0x1
  40c664:	str	x3, [x25]
  40c668:	add	w22, w22, #0x1
  40c66c:	ldrb	w1, [x5]
  40c670:	cmp	w24, w22
  40c674:	ldr	x19, [x20, x1, lsl #3]
  40c678:	b.eq	40c70c <wcrtomb@plt+0x9dec>  // b.none
  40c67c:	ldrsw	x0, [x21, #364]
  40c680:	cmp	x0, x19
  40c684:	b.gt	40c8e4 <wcrtomb@plt+0x9fc4>
  40c688:	ldr	x1, [x21, #368]
  40c68c:	lsl	x26, x19, #3
  40c690:	ldrb	w2, [x3]
  40c694:	ldr	x20, [x1, x19, lsl #3]
  40c698:	cbnz	x20, 40c64c <wcrtomb@plt+0x9d2c>
  40c69c:	ldr	x0, [x21, #376]
  40c6a0:	ldr	x20, [x0, x19, lsl #3]
  40c6a4:	cbnz	x20, 40c64c <wcrtomb@plt+0x9d2c>
  40c6a8:	mov	x1, x21
  40c6ac:	mov	x0, x19
  40c6b0:	bl	40bdd8 <wcrtomb@plt+0x94b8>
  40c6b4:	ldr	x0, [x21, #368]
  40c6b8:	ldr	x20, [x0, x26]
  40c6bc:	cbz	x20, 40c8f8 <wcrtomb@plt+0x9fd8>
  40c6c0:	ldr	x3, [x25]
  40c6c4:	mov	x5, x3
  40c6c8:	ldrb	w2, [x3]
  40c6cc:	mov	w4, w2
  40c6d0:	ldr	x1, [x20, x4, lsl #3]
  40c6d4:	cmn	x1, #0x2
  40c6d8:	b.ne	40c660 <wcrtomb@plt+0x9d40>  // b.any
  40c6dc:	nop
  40c6e0:	mov	x0, x19
  40c6e4:	mov	x1, x21
  40c6e8:	bl	40bdd8 <wcrtomb@plt+0x94b8>
  40c6ec:	add	w22, w22, #0x1
  40c6f0:	ldr	x5, [x25]
  40c6f4:	cmp	w24, w22
  40c6f8:	add	x3, x5, #0x1
  40c6fc:	str	x3, [x25]
  40c700:	ldrb	w1, [x5]
  40c704:	ldr	x19, [x20, x1, lsl #3]
  40c708:	b.ne	40c67c <wcrtomb@plt+0x9d5c>  // b.any
  40c70c:	mov	w24, #0x0                   	// #0
  40c710:	ldr	w0, [sp, #92]
  40c714:	add	x3, x3, w24, sxtw
  40c718:	str	x3, [x25]
  40c71c:	mov	x22, x19
  40c720:	cmn	w0, #0x1
  40c724:	b.eq	40c7f0 <wcrtomb@plt+0x9ed0>  // b.none
  40c728:	add	x23, x23, x23, lsl #2
  40c72c:	ldr	x2, [x21, #296]
  40c730:	lsl	x23, x23, #4
  40c734:	ldr	x22, [x21, #432]
  40c738:	add	x3, x2, x23
  40c73c:	ldr	x0, [x3, #72]
  40c740:	tbnz	x0, #63, 40c80c <wcrtomb@plt+0x9eec>
  40c744:	ldr	x0, [x22, x19, lsl #3]
  40c748:	lsl	x20, x19, #3
  40c74c:	cbz	x0, 40c89c <wcrtomb@plt+0x9f7c>
  40c750:	add	x1, x2, x23
  40c754:	ldr	x3, [x1, #72]
  40c758:	ldr	x22, [x0, x3, lsl #3]
  40c75c:	tbz	x22, #63, 40c7f0 <wcrtomb@plt+0x9ed0>
  40c760:	add	x0, x1, #0x30
  40c764:	cmn	x19, #0x1
  40c768:	add	x1, x1, #0x38
  40c76c:	add	x22, x21, #0x198
  40c770:	b.eq	40c8ec <wcrtomb@plt+0x9fcc>  // b.none
  40c774:	add	x19, x19, x19, lsl #2
  40c778:	mov	x5, x22
  40c77c:	mov	w4, #0xffffffff            	// #-1
  40c780:	add	x2, x2, x19, lsl #4
  40c784:	add	x3, x2, #0x10
  40c788:	add	x2, x2, #0x8
  40c78c:	bl	40ae18 <wcrtomb@plt+0x84f8>
  40c790:	ldp	x0, x3, [x21, #408]
  40c794:	cmp	x3, #0x0
  40c798:	b.le	40c928 <wcrtomb@plt+0xa008>
  40c79c:	ldr	x4, [x21, #344]
  40c7a0:	add	x3, x0, x3, lsl #4
  40c7a4:	mov	w2, #0x0                   	// #0
  40c7a8:	ldr	x1, [x0], #16
  40c7ac:	cmp	x3, x0
  40c7b0:	ldr	w1, [x4, x1, lsl #2]
  40c7b4:	orr	w2, w2, w1
  40c7b8:	b.ne	40c7a8 <wcrtomb@plt+0x9e88>  // b.any
  40c7bc:	eor	w2, w2, #0x7
  40c7c0:	mov	x1, x22
  40c7c4:	mov	x0, x21
  40c7c8:	bl	40ab90 <wcrtomb@plt+0x8270>
  40c7cc:	mov	x22, x0
  40c7d0:	mov	x0, x21
  40c7d4:	bl	40a2f8 <wcrtomb@plt+0x79d8>
  40c7d8:	ldr	x0, [x21, #296]
  40c7dc:	ldr	x1, [x21, #432]
  40c7e0:	add	x23, x0, x23
  40c7e4:	ldr	x0, [x1, x20]
  40c7e8:	ldr	x1, [x23, #72]
  40c7ec:	str	x22, [x0, x1, lsl #3]
  40c7f0:	mov	x0, x22
  40c7f4:	ldp	x19, x20, [sp, #16]
  40c7f8:	ldp	x21, x22, [sp, #32]
  40c7fc:	ldp	x23, x24, [sp, #48]
  40c800:	ldp	x25, x26, [sp, #64]
  40c804:	ldp	x29, x30, [sp], #96
  40c808:	ret
  40c80c:	ldr	x0, [x21, #440]
  40c810:	add	x1, x0, #0x1
  40c814:	cmp	x0, #0x3ff
  40c818:	b.le	40c888 <wcrtomb@plt+0x9f68>
  40c81c:	ldr	x0, [x21, #352]
  40c820:	tbnz	x0, #63, 40c850 <wcrtomb@plt+0x9f30>
  40c824:	mov	x20, #0xffffffffffffffff    	// #-1
  40c828:	ldr	x0, [x22, x20, lsl #3]
  40c82c:	bl	4026b0 <free@plt>
  40c830:	ldr	x22, [x21, #432]
  40c834:	ldr	x0, [x21, #352]
  40c838:	str	xzr, [x22, x20, lsl #3]
  40c83c:	add	x20, x20, #0x1
  40c840:	cmp	x0, x20
  40c844:	b.gt	40c828 <wcrtomb@plt+0x9f08>
  40c848:	ldr	x2, [x21, #296]
  40c84c:	add	x3, x2, x23
  40c850:	ldr	x0, [x21, #304]
  40c854:	cmp	x0, #0x0
  40c858:	b.le	40c880 <wcrtomb@plt+0x9f60>
  40c85c:	add	x1, x0, x0, lsl #2
  40c860:	mov	x0, x2
  40c864:	mov	x4, #0xffffffffffffffff    	// #-1
  40c868:	add	x1, x2, x1, lsl #4
  40c86c:	nop
  40c870:	str	x4, [x0, #72]
  40c874:	add	x0, x0, #0x50
  40c878:	cmp	x1, x0
  40c87c:	b.ne	40c870 <wcrtomb@plt+0x9f50>  // b.any
  40c880:	mov	x1, #0x1                   	// #1
  40c884:	mov	x0, #0x0                   	// #0
  40c888:	str	x1, [x21, #440]
  40c88c:	lsl	x20, x19, #3
  40c890:	str	x0, [x3, #72]
  40c894:	ldr	x0, [x22, x19, lsl #3]
  40c898:	cbnz	x0, 40c750 <wcrtomb@plt+0x9e30>
  40c89c:	mov	x0, #0x2000                	// #8192
  40c8a0:	bl	414080 <wcrtomb@plt+0x11760>
  40c8a4:	str	x0, [x22, x19, lsl #3]
  40c8a8:	mov	x2, #0xffffffffffffffff    	// #-1
  40c8ac:	ldr	x0, [x21, #432]
  40c8b0:	ldr	x1, [x0, x19, lsl #3]
  40c8b4:	add	x0, x1, #0x2, lsl #12
  40c8b8:	str	x2, [x1], #8
  40c8bc:	cmp	x0, x1
  40c8c0:	b.ne	40c8b8 <wcrtomb@plt+0x9f98>  // b.any
  40c8c4:	ldr	x2, [x21, #296]
  40c8c8:	cmn	x19, #0x1
  40c8cc:	add	x22, x21, #0x198
  40c8d0:	add	x1, x2, x23
  40c8d4:	add	x0, x1, #0x30
  40c8d8:	add	x1, x1, #0x38
  40c8dc:	b.ne	40c774 <wcrtomb@plt+0x9e54>  // b.any
  40c8e0:	b	40c8ec <wcrtomb@plt+0x9fcc>
  40c8e4:	sub	w24, w24, w22
  40c8e8:	b	40c710 <wcrtomb@plt+0x9df0>
  40c8ec:	mov	x2, x22
  40c8f0:	bl	40aaf8 <wcrtomb@plt+0x81d8>
  40c8f4:	b	40c790 <wcrtomb@plt+0x9e70>
  40c8f8:	ldr	x0, [x21, #376]
  40c8fc:	ldr	x20, [x0, x26]
  40c900:	cbnz	x20, 40c6c0 <wcrtomb@plt+0x9da0>
  40c904:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xef38>
  40c908:	add	x3, x3, #0x658
  40c90c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40c910:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xdf38>
  40c914:	add	x3, x3, #0x18
  40c918:	add	x1, x1, #0x3c8
  40c91c:	add	x0, x0, #0x3b0
  40c920:	mov	w2, #0xc93                 	// #3219
  40c924:	bl	402880 <__assert_fail@plt>
  40c928:	mov	w2, #0x7                   	// #7
  40c92c:	b	40c7c0 <wcrtomb@plt+0x9ea0>
  40c930:	mov	x19, x23
  40c934:	ldr	x3, [x25]
  40c938:	b	40c710 <wcrtomb@plt+0x9df0>
  40c93c:	nop
  40c940:	stp	x29, x30, [sp, #-48]!
  40c944:	mov	x29, sp
  40c948:	stp	x19, x20, [sp, #16]
  40c94c:	mov	x19, x1
  40c950:	ldr	x1, [x0, #8]
  40c954:	stp	x21, x22, [sp, #32]
  40c958:	mov	x21, x0
  40c95c:	cmp	x1, #0x0
  40c960:	ldr	x0, [x0]
  40c964:	b.le	40ca00 <wcrtomb@plt+0xa0e0>
  40c968:	mov	x6, x0
  40c96c:	mov	x20, #0x0                   	// #0
  40c970:	mov	x2, #0x0                   	// #0
  40c974:	mov	x4, #0x0                   	// #0
  40c978:	ldr	x3, [x19, x2]
  40c97c:	ldr	x5, [x6, x2]
  40c980:	add	x2, x2, #0x8
  40c984:	cmp	x2, #0x20
  40c988:	eor	x3, x3, x5
  40c98c:	orr	x4, x4, x3
  40c990:	b.ne	40c978 <wcrtomb@plt+0xa058>  // b.any
  40c994:	cbz	x4, 40c9ec <wcrtomb@plt+0xa0cc>
  40c998:	add	x20, x20, #0x1
  40c99c:	add	x6, x6, #0x20
  40c9a0:	cmp	x1, x20
  40c9a4:	b.ne	40c970 <wcrtomb@plt+0xa050>  // b.any
  40c9a8:	lsl	x22, x1, #5
  40c9ac:	mov	x20, x1
  40c9b0:	ldr	x2, [x21, #16]
  40c9b4:	cmp	x1, x2
  40c9b8:	b.lt	40c9d8 <wcrtomb@plt+0xa0b8>  // b.tstop
  40c9bc:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40c9c0:	add	x1, x21, #0x10
  40c9c4:	movk	x3, #0x7fff, lsl #48
  40c9c8:	mov	x4, #0x20                  	// #32
  40c9cc:	mov	x2, #0x1                   	// #1
  40c9d0:	bl	40a0f8 <wcrtomb@plt+0x77d8>
  40c9d4:	ldr	x1, [x21, #8]
  40c9d8:	add	x22, x0, x22
  40c9dc:	ld1	{v0.16b, v1.16b}, [x19]
  40c9e0:	add	x1, x1, #0x1
  40c9e4:	stp	x0, x1, [x21]
  40c9e8:	st1	{v0.16b, v1.16b}, [x22]
  40c9ec:	mov	x0, x20
  40c9f0:	ldp	x19, x20, [sp, #16]
  40c9f4:	ldp	x21, x22, [sp, #32]
  40c9f8:	ldp	x29, x30, [sp], #48
  40c9fc:	ret
  40ca00:	mov	x22, #0x0                   	// #0
  40ca04:	mov	x20, #0x0                   	// #0
  40ca08:	b	40c9b0 <wcrtomb@plt+0xa090>
  40ca0c:	nop
  40ca10:	stp	x29, x30, [sp, #-304]!
  40ca14:	mov	x29, sp
  40ca18:	ldr	x1, [x0, #40]
  40ca1c:	stp	x19, x20, [sp, #16]
  40ca20:	stp	x21, x22, [sp, #32]
  40ca24:	stp	x23, x24, [sp, #48]
  40ca28:	stp	x25, x26, [sp, #64]
  40ca2c:	stp	x27, x28, [sp, #80]
  40ca30:	str	xzr, [x0, #104]
  40ca34:	stp	xzr, xzr, [sp, #136]
  40ca38:	stp	xzr, xzr, [sp, #152]
  40ca3c:	cbz	x1, 40cd68 <wcrtomb@plt+0xa448>
  40ca40:	mov	x28, x0
  40ca44:	bl	40a098 <wcrtomb@plt+0x7778>
  40ca48:	mov	w1, #0x1                   	// #1
  40ca4c:	stp	w1, w0, [sp, #120]
  40ca50:	cmp	w0, #0x5e
  40ca54:	mov	w19, w0
  40ca58:	b.eq	40d058 <wcrtomb@plt+0xa738>  // b.none
  40ca5c:	cmp	w19, #0x3a
  40ca60:	ldr	w25, [x28, #72]
  40ca64:	add	x23, sp, #0xa8
  40ca68:	cset	w21, eq  // eq = none
  40ca6c:	add	x20, sp, #0x88
  40ca70:	add	x0, x23, #0x4
  40ca74:	str	x0, [sp, #112]
  40ca78:	and	w21, w21, #0xfffffffd
  40ca7c:	cmp	w19, #0x5b
  40ca80:	ldr	x0, [x28, #40]
  40ca84:	b.eq	40cbe4 <wcrtomb@plt+0xa2c4>  // b.none
  40ca88:	cmp	w19, #0x5c
  40ca8c:	b.eq	40cbc0 <wcrtomb@plt+0xa2a0>  // b.none
  40ca90:	cbz	x0, 40cd68 <wcrtomb@plt+0xa448>
  40ca94:	mov	x0, x28
  40ca98:	bl	40a098 <wcrtomb@plt+0x7778>
  40ca9c:	ldr	w24, [x28, #72]
  40caa0:	cmp	w0, #0x2d
  40caa4:	b.ne	40d000 <wcrtomb@plt+0xa6e0>  // b.any
  40caa8:	ldr	x0, [x28, #40]
  40caac:	cbz	x0, 40cd68 <wcrtomb@plt+0xa448>
  40cab0:	mov	x0, x28
  40cab4:	bl	40a098 <wcrtomb@plt+0x7778>
  40cab8:	ldr	w26, [x28, #72]
  40cabc:	mov	w22, w0
  40cac0:	cmp	w0, #0x5b
  40cac4:	b.eq	40ce10 <wcrtomb@plt+0xa4f0>  // b.none
  40cac8:	cmp	w0, #0x5d
  40cacc:	ldr	x1, [x28, #40]
  40cad0:	b.eq	40ce44 <wcrtomb@plt+0xa524>  // b.none
  40cad4:	cmp	w0, #0x5c
  40cad8:	b.ne	40cb00 <wcrtomb@plt+0xa1e0>  // b.any
  40cadc:	ldr	x0, [x28, #448]
  40cae0:	tbz	w0, #0, 40cb00 <wcrtomb@plt+0xa1e0>
  40cae4:	cbz	x1, 40cd68 <wcrtomb@plt+0xa448>
  40cae8:	mov	x0, x28
  40caec:	bl	40a098 <wcrtomb@plt+0x7778>
  40caf0:	ldr	w26, [x28, #72]
  40caf4:	mov	w22, w0
  40caf8:	ldr	x1, [x28, #40]
  40cafc:	nop
  40cb00:	orr	w21, w21, #0x8
  40cb04:	cbz	x1, 40cd68 <wcrtomb@plt+0xa448>
  40cb08:	mov	x0, x28
  40cb0c:	bl	40a098 <wcrtomb@plt+0x7778>
  40cb10:	cmp	w26, w25
  40cb14:	ldr	w6, [x28, #72]
  40cb18:	mov	w24, w0
  40cb1c:	ccmn	w25, #0x1, #0x4, eq  // eq = none
  40cb20:	b.eq	40ce74 <wcrtomb@plt+0xa554>  // b.none
  40cb24:	mov	w26, w19
  40cb28:	mov	w2, w25
  40cb2c:	mov	w19, w0
  40cb30:	mov	w25, w6
  40cb34:	cmp	w26, #0x3a
  40cb38:	mov	w0, #0x2                   	// #2
  40cb3c:	mov	w1, #0x4                   	// #4
  40cb40:	csel	w0, w0, w1, eq  // eq = none
  40cb44:	ldrb	w1, [x28, #1048]
  40cb48:	orr	w21, w21, w0
  40cb4c:	cbz	w1, 40cc38 <wcrtomb@plt+0xa318>
  40cb50:	cmn	w2, #0x1
  40cb54:	b.ne	40cc6c <wcrtomb@plt+0xa34c>  // b.any
  40cb58:	str	wzr, [sp, #120]
  40cb5c:	cmp	w19, #0x5d
  40cb60:	b.ne	40ca78 <wcrtomb@plt+0xa158>  // b.any
  40cb64:	cmp	w21, #0x7
  40cb68:	b.eq	40d078 <wcrtomb@plt+0xa758>  // b.none
  40cb6c:	ldr	w1, [sp, #120]
  40cb70:	mov	x0, #0x112                 	// #274
  40cb74:	cbz	w1, 40cba4 <wcrtomb@plt+0xa284>
  40cb78:	ldrb	w0, [x28, #1048]
  40cb7c:	cbz	w0, 40d014 <wcrtomb@plt+0xa6f4>
  40cb80:	ldr	w0, [sp, #124]
  40cb84:	cmp	w0, #0x5e
  40cb88:	b.eq	40d0a4 <wcrtomb@plt+0xa784>  // b.none
  40cb8c:	ldr	x0, [x28, #104]
  40cb90:	add	x1, sp, #0x88
  40cb94:	cbnz	x0, 40d0a4 <wcrtomb@plt+0xa784>
  40cb98:	mov	x0, x28
  40cb9c:	bl	40c940 <wcrtomb@plt+0xa020>
  40cba0:	add	x0, x0, #0x114
  40cba4:	ldp	x19, x20, [sp, #16]
  40cba8:	ldp	x21, x22, [sp, #32]
  40cbac:	ldp	x23, x24, [sp, #48]
  40cbb0:	ldp	x25, x26, [sp, #64]
  40cbb4:	ldp	x27, x28, [sp, #80]
  40cbb8:	ldp	x29, x30, [sp], #304
  40cbbc:	ret
  40cbc0:	ldr	x1, [x28, #448]
  40cbc4:	tbz	w1, #0, 40ca90 <wcrtomb@plt+0xa170>
  40cbc8:	cbz	x0, 40cd68 <wcrtomb@plt+0xa448>
  40cbcc:	mov	x0, x28
  40cbd0:	bl	40a098 <wcrtomb@plt+0x7778>
  40cbd4:	ldr	w25, [x28, #72]
  40cbd8:	mov	w19, w0
  40cbdc:	ldr	x0, [x28, #40]
  40cbe0:	b	40ca90 <wcrtomb@plt+0xa170>
  40cbe4:	cbz	x0, 40cd68 <wcrtomb@plt+0xa448>
  40cbe8:	mov	x0, x28
  40cbec:	bl	40a098 <wcrtomb@plt+0x7778>
  40cbf0:	mov	w22, w0
  40cbf4:	cmp	w0, #0x3a
  40cbf8:	b.eq	40cd04 <wcrtomb@plt+0xa3e4>  // b.none
  40cbfc:	cmp	w0, #0x2e
  40cc00:	mov	w0, #0x3d                  	// #61
  40cc04:	ccmp	w22, w0, #0x4, ne  // ne = any
  40cc08:	b.eq	40cd24 <wcrtomb@plt+0xa404>  // b.none
  40cc0c:	cmp	w22, #0x100
  40cc10:	b.eq	40cec4 <wcrtomb@plt+0xa5a4>  // b.none
  40cc14:	ldr	w24, [x28, #72]
  40cc18:	cmp	w22, #0x2d
  40cc1c:	b.eq	40caa8 <wcrtomb@plt+0xa188>  // b.none
  40cc20:	mov	w26, w19
  40cc24:	mov	w2, w25
  40cc28:	mov	w19, w22
  40cc2c:	mov	w25, w24
  40cc30:	mov	w0, #0x4                   	// #4
  40cc34:	b	40cb44 <wcrtomb@plt+0xa224>
  40cc38:	ldrb	w0, [x28, #457]
  40cc3c:	cbz	w0, 40cc50 <wcrtomb@plt+0xa330>
  40cc40:	bl	4026a0 <__ctype_b_loc@plt>
  40cc44:	ldr	x0, [x0]
  40cc48:	ldrh	w0, [x0, w26, sxtw #1]
  40cc4c:	tbnz	w0, #10, 40ceb4 <wcrtomb@plt+0xa594>
  40cc50:	lsr	w1, w26, #6
  40cc54:	mov	x0, #0x1                   	// #1
  40cc58:	lsl	x26, x0, x26
  40cc5c:	ldr	x0, [x20, x1, lsl #3]
  40cc60:	orr	x26, x26, x0
  40cc64:	str	x26, [x20, x1, lsl #3]
  40cc68:	b	40cb5c <wcrtomb@plt+0xa23c>
  40cc6c:	ldrb	w0, [x28, #457]
  40cc70:	cbnz	w0, 40ce4c <wcrtomb@plt+0xa52c>
  40cc74:	mov	w22, #0x1                   	// #1
  40cc78:	str	w2, [sp, #168]
  40cc7c:	add	x0, x28, #0x70
  40cc80:	mov	x26, x23
  40cc84:	mov	w27, #0x0                   	// #0
  40cc88:	mov	x24, #0x1                   	// #1
  40cc8c:	str	x0, [sp, #104]
  40cc90:	b	40ccbc <wcrtomb@plt+0xa39c>
  40cc94:	lsr	w1, w0, #6
  40cc98:	lsl	x0, x24, x0
  40cc9c:	ldr	x2, [x20, x1, lsl #3]
  40cca0:	orr	x0, x0, x2
  40cca4:	str	x0, [x20, x1, lsl #3]
  40cca8:	add	w27, w27, #0x1
  40ccac:	add	x26, x26, #0x4
  40ccb0:	cmp	w27, w22
  40ccb4:	b.ge	40cb5c <wcrtomb@plt+0xa23c>  // b.tcont
  40ccb8:	ldr	w2, [x26]
  40ccbc:	mov	w0, w2
  40ccc0:	bl	4023f0 <wctob@plt>
  40ccc4:	tbz	w0, #31, 40cc94 <wcrtomb@plt+0xa374>
  40ccc8:	ldp	x0, x1, [x28, #96]
  40cccc:	ldr	x2, [x28, #112]
  40ccd0:	cmp	x1, x2
  40ccd4:	b.lt	40ccf0 <wcrtomb@plt+0xa3d0>  // b.tstop
  40ccd8:	ldr	x1, [sp, #104]
  40ccdc:	mov	x4, #0x4                   	// #4
  40cce0:	mov	x3, #0xffffffffffffffff    	// #-1
  40cce4:	mov	x2, #0x1                   	// #1
  40cce8:	bl	40a0f8 <wcrtomb@plt+0x77d8>
  40ccec:	ldr	x1, [x28, #104]
  40ccf0:	add	x2, x1, #0x1
  40ccf4:	stp	x0, x2, [x28, #96]
  40ccf8:	ldr	w2, [x26]
  40ccfc:	str	w2, [x0, x1, lsl #2]
  40cd00:	b	40cca8 <wcrtomb@plt+0xa388>
  40cd04:	ldr	x0, [x28, #448]
  40cd08:	tbnz	w0, #2, 40cd24 <wcrtomb@plt+0xa404>
  40cd0c:	mov	w26, w19
  40cd10:	mov	w2, w25
  40cd14:	mov	w19, w22
  40cd18:	ldr	w25, [x28, #72]
  40cd1c:	mov	w0, #0x4                   	// #4
  40cd20:	b	40cb44 <wcrtomb@plt+0xa224>
  40cd24:	ldr	x0, [x28, #40]
  40cd28:	cbz	x0, 40cd68 <wcrtomb@plt+0xa448>
  40cd2c:	mov	w19, #0x0                   	// #0
  40cd30:	mov	x0, x28
  40cd34:	bl	40a098 <wcrtomb@plt+0x7778>
  40cd38:	ldr	x1, [x28, #40]
  40cd3c:	cbz	x1, 40cd68 <wcrtomb@plt+0xa448>
  40cd40:	cmp	w22, w0
  40cd44:	b.eq	40cd74 <wcrtomb@plt+0xa454>  // b.none
  40cd48:	cmp	w19, #0x1f
  40cd4c:	b.gt	40cd6c <wcrtomb@plt+0xa44c>
  40cd50:	strb	w0, [x23, w19, sxtw]
  40cd54:	mov	x0, x28
  40cd58:	bl	40a098 <wcrtomb@plt+0x7778>
  40cd5c:	add	w19, w19, #0x1
  40cd60:	ldr	x1, [x28, #40]
  40cd64:	cbnz	x1, 40cd40 <wcrtomb@plt+0xa420>
  40cd68:	bl	40aa28 <wcrtomb@plt+0x8108>
  40cd6c:	strb	wzr, [sp, #168]
  40cd70:	b	40cd30 <wcrtomb@plt+0xa410>
  40cd74:	ldr	x1, [x28, #32]
  40cd78:	ldrb	w1, [x1]
  40cd7c:	cmp	w1, #0x5d
  40cd80:	b.ne	40cd48 <wcrtomb@plt+0xa428>  // b.any
  40cd84:	mov	x0, x28
  40cd88:	strb	wzr, [x23, w19, sxtw]
  40cd8c:	bl	40a098 <wcrtomb@plt+0x7778>
  40cd90:	cmp	w22, #0x3a
  40cd94:	b.eq	40cdbc <wcrtomb@plt+0xa49c>  // b.none
  40cd98:	str	wzr, [sp, #120]
  40cd9c:	ldr	x0, [x28, #40]
  40cda0:	orr	w21, w21, #0x8
  40cda4:	cbz	x0, 40cd68 <wcrtomb@plt+0xa448>
  40cda8:	mov	x0, x28
  40cdac:	bl	40a098 <wcrtomb@plt+0x7778>
  40cdb0:	ldr	w25, [x28, #72]
  40cdb4:	mov	w19, w0
  40cdb8:	b	40cb5c <wcrtomb@plt+0xa23c>
  40cdbc:	ldrb	w0, [x28, #457]
  40cdc0:	cbnz	w0, 40cf5c <wcrtomb@plt+0xa63c>
  40cdc4:	adrp	x19, 426000 <_obstack_memory_used@@Base+0xef38>
  40cdc8:	add	x19, x19, #0x658
  40cdcc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40cdd0:	add	x24, x19, #0x38
  40cdd4:	add	x1, x1, #0x3d0
  40cdd8:	mov	w22, #0x0                   	// #0
  40cddc:	nop
  40cde0:	mov	x0, x23
  40cde4:	bl	402690 <strcmp@plt>
  40cde8:	cbz	w0, 40cf9c <wcrtomb@plt+0xa67c>
  40cdec:	ldr	x1, [x24, #24]!
  40cdf0:	add	w22, w22, #0x1
  40cdf4:	cbnz	x1, 40cde0 <wcrtomb@plt+0xa4c0>
  40cdf8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40cdfc:	add	x1, x1, #0x420
  40ce00:	mov	w2, #0x5                   	// #5
  40ce04:	mov	x0, #0x0                   	// #0
  40ce08:	bl	4027f0 <dcgettext@plt>
  40ce0c:	bl	404118 <wcrtomb@plt+0x17f8>
  40ce10:	ldp	x0, x1, [x28, #32]
  40ce14:	ldrb	w2, [x0]
  40ce18:	cmp	w2, #0x2e
  40ce1c:	b.ne	40cb00 <wcrtomb@plt+0xa1e0>  // b.any
  40ce20:	str	wzr, [sp, #120]
  40ce24:	sub	x0, x0, #0x1
  40ce28:	add	x1, x1, #0x1
  40ce2c:	mov	w26, w19
  40ce30:	mov	w2, w25
  40ce34:	mov	w19, #0x2d                  	// #45
  40ce38:	mov	w25, w24
  40ce3c:	stp	x0, x1, [x28, #32]
  40ce40:	b	40cb34 <wcrtomb@plt+0xa214>
  40ce44:	ldr	x0, [x28, #32]
  40ce48:	b	40ce24 <wcrtomb@plt+0xa504>
  40ce4c:	ldr	x1, [sp, #112]
  40ce50:	mov	w0, w2
  40ce54:	str	w2, [sp, #104]
  40ce58:	bl	40f958 <wcrtomb@plt+0xd038>
  40ce5c:	add	w22, w0, #0x1
  40ce60:	ldr	w2, [sp, #104]
  40ce64:	cmp	w22, #0x0
  40ce68:	str	w2, [sp, #168]
  40ce6c:	b.gt	40cc7c <wcrtomb@plt+0xa35c>
  40ce70:	b	40cb5c <wcrtomb@plt+0xa23c>
  40ce74:	ldrb	w0, [x28, #1049]
  40ce78:	cbnz	w0, 40cecc <wcrtomb@plt+0xa5ac>
  40ce7c:	sub	w1, w22, #0x30
  40ce80:	sub	w0, w19, #0x30
  40ce84:	and	w1, w1, #0xff
  40ce88:	and	w0, w0, #0xff
  40ce8c:	cmp	w1, #0x9
  40ce90:	cset	w1, ls  // ls = plast
  40ce94:	cmp	w0, #0x9
  40ce98:	cset	w0, ls  // ls = plast
  40ce9c:	tst	w1, w0
  40cea0:	b.ne	40cecc <wcrtomb@plt+0xa5ac>  // b.any
  40cea4:	mov	w25, w6
  40cea8:	mov	w19, w24
  40ceac:	str	wzr, [sp, #120]
  40ceb0:	b	40cb5c <wcrtomb@plt+0xa23c>
  40ceb4:	mov	w0, w26
  40ceb8:	mov	x1, x20
  40cebc:	bl	40a448 <wcrtomb@plt+0x7b28>
  40cec0:	b	40cb5c <wcrtomb@plt+0xa23c>
  40cec4:	ldr	x0, [x28, #40]
  40cec8:	b	40ca90 <wcrtomb@plt+0xa170>
  40cecc:	cmp	w22, w19
  40ced0:	b.lt	40cf50 <wcrtomb@plt+0xa630>  // b.tstop
  40ced4:	add	w22, w22, #0x1
  40ced8:	sbfiz	x25, x19, #1, #32
  40cedc:	mov	x26, #0x1                   	// #1
  40cee0:	b	40cf08 <wcrtomb@plt+0xa5e8>
  40cee4:	lsr	w2, w19, #6
  40cee8:	lsl	x1, x26, x19
  40ceec:	add	w19, w19, #0x1
  40cef0:	add	x25, x25, #0x2
  40cef4:	cmp	w22, w19
  40cef8:	ldr	x3, [x20, x2, lsl #3]
  40cefc:	orr	x1, x1, x3
  40cf00:	str	x1, [x20, x2, lsl #3]
  40cf04:	b.eq	40cf50 <wcrtomb@plt+0xa630>  // b.none
  40cf08:	ldrb	w1, [x28, #457]
  40cf0c:	cbz	w1, 40cee4 <wcrtomb@plt+0xa5c4>
  40cf10:	str	w6, [sp, #104]
  40cf14:	bl	4026a0 <__ctype_b_loc@plt>
  40cf18:	ldr	x0, [x0]
  40cf1c:	ldr	w6, [sp, #104]
  40cf20:	ldrh	w0, [x0, x25]
  40cf24:	tbz	w0, #10, 40cee4 <wcrtomb@plt+0xa5c4>
  40cf28:	mov	w0, w19
  40cf2c:	mov	x1, x20
  40cf30:	add	w19, w19, #0x1
  40cf34:	str	w6, [sp, #104]
  40cf38:	bl	40a448 <wcrtomb@plt+0x7b28>
  40cf3c:	add	x25, x25, #0x2
  40cf40:	ldr	w6, [sp, #104]
  40cf44:	cmp	w22, w19
  40cf48:	b.ne	40cf08 <wcrtomb@plt+0xa5e8>  // b.any
  40cf4c:	nop
  40cf50:	mov	w25, w6
  40cf54:	mov	w19, w24
  40cf58:	b	40cb5c <wcrtomb@plt+0xa23c>
  40cf5c:	ldr	w0, [x23]
  40cf60:	mov	w1, #0x7075                	// #28789
  40cf64:	movk	w1, #0x6570, lsl #16
  40cf68:	cmp	w0, w1
  40cf6c:	b.eq	40d094 <wcrtomb@plt+0xa774>  // b.none
  40cf70:	ldr	w1, [x23]
  40cf74:	mov	w0, #0x6f6c                	// #28524
  40cf78:	movk	w0, #0x6577, lsl #16
  40cf7c:	cmp	w1, w0
  40cf80:	b.ne	40cdc4 <wcrtomb@plt+0xa4a4>  // b.any
  40cf84:	ldrh	w0, [x23, #4]
  40cf88:	cmp	w0, #0x72
  40cf8c:	b.ne	40cdc4 <wcrtomb@plt+0xa4a4>  // b.any
  40cf90:	adrp	x19, 426000 <_obstack_memory_used@@Base+0xef38>
  40cf94:	add	x19, x19, #0x658
  40cf98:	mov	w22, #0x0                   	// #0
  40cf9c:	ldrb	w0, [x28, #1048]
  40cfa0:	sxtw	x1, w22
  40cfa4:	cbz	w0, 40cfb8 <wcrtomb@plt+0xa698>
  40cfa8:	add	x0, x1, w22, sxtw #1
  40cfac:	add	x0, x19, x0, lsl #3
  40cfb0:	ldrb	w0, [x0, #72]
  40cfb4:	cbz	w0, 40cd98 <wcrtomb@plt+0xa478>
  40cfb8:	add	x1, x1, x1, lsl #1
  40cfbc:	mov	w24, #0x0                   	// #0
  40cfc0:	mov	x22, #0x1                   	// #1
  40cfc4:	add	x19, x19, x1, lsl #3
  40cfc8:	ldr	x19, [x19, #64]
  40cfcc:	nop
  40cfd0:	mov	w0, w24
  40cfd4:	blr	x19
  40cfd8:	cbz	w0, 40cff0 <wcrtomb@plt+0xa6d0>
  40cfdc:	lsr	w1, w24, #6
  40cfe0:	lsl	x0, x22, x24
  40cfe4:	ldr	x2, [x20, x1, lsl #3]
  40cfe8:	orr	x0, x0, x2
  40cfec:	str	x0, [x20, x1, lsl #3]
  40cff0:	add	w24, w24, #0x1
  40cff4:	cmp	w24, #0x100
  40cff8:	b.ne	40cfd0 <wcrtomb@plt+0xa6b0>  // b.any
  40cffc:	b	40cd9c <wcrtomb@plt+0xa47c>
  40d000:	mov	w26, w19
  40d004:	mov	w2, w25
  40d008:	mov	w19, w0
  40d00c:	mov	w25, w24
  40d010:	b	40cb34 <wcrtomb@plt+0xa214>
  40d014:	ldr	w0, [sp, #124]
  40d018:	add	x1, sp, #0x88
  40d01c:	cmp	w0, #0x5e
  40d020:	b.ne	40cb98 <wcrtomb@plt+0xa278>  // b.any
  40d024:	mov	x0, x1
  40d028:	add	x3, x1, #0x20
  40d02c:	ldr	x2, [x0]
  40d030:	mvn	x2, x2
  40d034:	str	x2, [x0], #8
  40d038:	cmp	x0, x3
  40d03c:	b.ne	40d02c <wcrtomb@plt+0xa70c>  // b.any
  40d040:	ldr	x0, [x28, #448]
  40d044:	tbz	w0, #8, 40cb98 <wcrtomb@plt+0xa278>
  40d048:	ldr	x0, [sp, #136]
  40d04c:	and	x0, x0, #0xfffffffffffffbff
  40d050:	str	x0, [sp, #136]
  40d054:	b	40cb98 <wcrtomb@plt+0xa278>
  40d058:	ldr	x0, [x28, #40]
  40d05c:	cbz	x0, 40cd68 <wcrtomb@plt+0xa448>
  40d060:	mov	x0, x28
  40d064:	bl	40a098 <wcrtomb@plt+0x7778>
  40d068:	ldrb	w1, [x28, #1049]
  40d06c:	mov	w19, w0
  40d070:	str	w1, [sp, #120]
  40d074:	b	40ca5c <wcrtomb@plt+0xa13c>
  40d078:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40d07c:	add	x1, x1, #0x3e8
  40d080:	mov	w2, #0x5                   	// #5
  40d084:	mov	x0, #0x0                   	// #0
  40d088:	bl	4027f0 <dcgettext@plt>
  40d08c:	bl	404138 <wcrtomb@plt+0x1818>
  40d090:	b	40cb6c <wcrtomb@plt+0xa24c>
  40d094:	ldrh	w0, [x23, #4]
  40d098:	cmp	w0, #0x72
  40d09c:	b.ne	40cf70 <wcrtomb@plt+0xa650>  // b.any
  40d0a0:	b	40cf90 <wcrtomb@plt+0xa670>
  40d0a4:	ldr	w0, [sp, #124]
  40d0a8:	ldp	x2, x1, [sp, #136]
  40d0ac:	cmp	w0, #0x5e
  40d0b0:	cset	w0, eq  // eq = none
  40d0b4:	strb	w0, [x28, #88]
  40d0b8:	ldp	x3, x0, [sp, #152]
  40d0bc:	orr	x2, x2, x1
  40d0c0:	mov	x1, #0xffffffffffffffff    	// #-1
  40d0c4:	orr	x0, x0, x3
  40d0c8:	orr	x0, x0, x2
  40d0cc:	cbnz	x0, 40d0f4 <wcrtomb@plt+0xa7d4>
  40d0d0:	str	x1, [x28, #80]
  40d0d4:	mov	x0, #0x113                 	// #275
  40d0d8:	ldp	x19, x20, [sp, #16]
  40d0dc:	ldp	x21, x22, [sp, #32]
  40d0e0:	ldp	x23, x24, [sp, #48]
  40d0e4:	ldp	x25, x26, [sp, #64]
  40d0e8:	ldp	x27, x28, [sp, #80]
  40d0ec:	ldp	x29, x30, [sp], #304
  40d0f0:	ret
  40d0f4:	add	x1, sp, #0x88
  40d0f8:	mov	x0, x28
  40d0fc:	bl	40c940 <wcrtomb@plt+0xa020>
  40d100:	mov	x1, x0
  40d104:	b	40d0d0 <wcrtomb@plt+0xa7b0>
  40d108:	stp	x29, x30, [sp, #-96]!
  40d10c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40d110:	mov	x29, sp
  40d114:	stp	x21, x22, [sp, #32]
  40d118:	add	x21, x1, #0x570
  40d11c:	mov	w22, #0x0                   	// #0
  40d120:	stp	x19, x20, [sp, #16]
  40d124:	mov	x19, x0
  40d128:	ldr	x0, [x0, #40]
  40d12c:	str	x23, [sp, #48]
  40d130:	mov	w23, #0x2                   	// #2
  40d134:	cbz	x0, 40d638 <wcrtomb@plt+0xad18>
  40d138:	mov	x0, x19
  40d13c:	bl	40a098 <wcrtomb@plt+0x7778>
  40d140:	mov	w20, w0
  40d144:	sub	w0, w0, #0xa
  40d148:	cmp	w0, #0x72
  40d14c:	b.hi	40d200 <wcrtomb@plt+0xa8e0>  // b.pmore
  40d150:	ldrh	w0, [x21, w0, uxtw #1]
  40d154:	adr	x1, 40d160 <wcrtomb@plt+0xa840>
  40d158:	add	x0, x1, w0, sxth #2
  40d15c:	br	x0
  40d160:	cbnz	w22, 40d200 <wcrtomb@plt+0xa8e0>
  40d164:	ldr	x1, [x19, #448]
  40d168:	tbnz	w1, #3, 40d454 <wcrtomb@plt+0xab34>
  40d16c:	ldr	x2, [x19, #40]
  40d170:	cbz	x2, 40d454 <wcrtomb@plt+0xab34>
  40d174:	lsr	x0, x1, #13
  40d178:	eor	x0, x0, #0x1
  40d17c:	and	x3, x0, #0x1
  40d180:	and	w0, w0, #0x1
  40d184:	cmp	x2, x3
  40d188:	b.le	40d1ac <wcrtomb@plt+0xa88c>
  40d18c:	ldr	x3, [x19, #32]
  40d190:	ldrb	w4, [x3]
  40d194:	cmp	w4, #0x5c
  40d198:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  40d19c:	cset	x0, ne  // ne = any
  40d1a0:	ldrb	w0, [x3, x0]
  40d1a4:	cmp	w0, #0x29
  40d1a8:	b.eq	40d454 <wcrtomb@plt+0xab34>  // b.none
  40d1ac:	lsr	x0, x1, #15
  40d1b0:	eor	x0, x0, #0x1
  40d1b4:	and	x3, x0, #0x1
  40d1b8:	and	w0, w0, #0x1
  40d1bc:	cmp	x2, x3
  40d1c0:	b.le	40d1e4 <wcrtomb@plt+0xa8c4>
  40d1c4:	ldr	x3, [x19, #32]
  40d1c8:	ldrb	w4, [x3]
  40d1cc:	cmp	w4, #0x5c
  40d1d0:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  40d1d4:	cset	x0, ne  // ne = any
  40d1d8:	ldrb	w0, [x3, x0]
  40d1dc:	cmp	w0, #0x7c
  40d1e0:	b.eq	40d454 <wcrtomb@plt+0xab34>  // b.none
  40d1e4:	tst	x1, #0x800
  40d1e8:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  40d1ec:	b.le	40d200 <wcrtomb@plt+0xa8e0>
  40d1f0:	ldr	x0, [x19, #32]
  40d1f4:	ldrb	w0, [x0]
  40d1f8:	cmp	w0, #0xa
  40d1fc:	b.eq	40d454 <wcrtomb@plt+0xab34>  // b.none
  40d200:	ldrb	w1, [x19, #1048]
  40d204:	strb	wzr, [x19, #120]
  40d208:	cbnz	w1, 40d278 <wcrtomb@plt+0xa958>
  40d20c:	ldrb	w0, [x19, #457]
  40d210:	cbz	w0, 40d244 <wcrtomb@plt+0xa924>
  40d214:	bl	4026a0 <__ctype_b_loc@plt>
  40d218:	mov	x1, x0
  40d21c:	sxtw	x0, w20
  40d220:	ldr	x1, [x1]
  40d224:	ldrh	w1, [x1, w20, sxtw #1]
  40d228:	tbnz	w1, #10, 40d24c <wcrtomb@plt+0xa92c>
  40d22c:	str	x0, [x19, #48]
  40d230:	ldp	x19, x20, [sp, #16]
  40d234:	ldp	x21, x22, [sp, #32]
  40d238:	ldr	x23, [sp, #48]
  40d23c:	ldp	x29, x30, [sp], #96
  40d240:	ret
  40d244:	sxtw	x0, w20
  40d248:	b	40d22c <wcrtomb@plt+0xa90c>
  40d24c:	mov	w0, w20
  40d250:	add	x1, sp, #0x40
  40d254:	stp	xzr, xzr, [sp, #64]
  40d258:	stp	xzr, xzr, [sp, #80]
  40d25c:	bl	40a448 <wcrtomb@plt+0x7b28>
  40d260:	add	x1, sp, #0x40
  40d264:	mov	x0, x19
  40d268:	bl	40c940 <wcrtomb@plt+0xa020>
  40d26c:	add	x0, x0, #0x114
  40d270:	str	x0, [x19, #48]
  40d274:	b	40d230 <wcrtomb@plt+0xa910>
  40d278:	mov	x1, #0x109                 	// #265
  40d27c:	str	x1, [x19, #48]
  40d280:	mov	x0, x1
  40d284:	ldp	x19, x20, [sp, #16]
  40d288:	ldp	x21, x22, [sp, #32]
  40d28c:	ldr	x23, [sp, #48]
  40d290:	ldp	x29, x30, [sp], #96
  40d294:	ret
  40d298:	cbz	w22, 40d200 <wcrtomb@plt+0xa8e0>
  40d29c:	ldr	x0, [x19, #448]
  40d2a0:	tbnz	w0, #14, 40d200 <wcrtomb@plt+0xa8e0>
  40d2a4:	mov	x1, #0x112                 	// #274
  40d2a8:	mov	x0, x1
  40d2ac:	str	x1, [x19, #48]
  40d2b0:	strb	wzr, [x19, #120]
  40d2b4:	b	40d230 <wcrtomb@plt+0xa910>
  40d2b8:	ldrb	w1, [x19, #1048]
  40d2bc:	cbz	w22, 40d204 <wcrtomb@plt+0xa8e4>
  40d2c0:	ldr	x2, [x19, #448]
  40d2c4:	and	x0, x2, #0x80000
  40d2c8:	tbnz	w2, #19, 40d204 <wcrtomb@plt+0xa8e4>
  40d2cc:	cbz	w1, 40d728 <wcrtomb@plt+0xae08>
  40d2d0:	cmp	w20, #0x77
  40d2d4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40d2d8:	cset	x0, eq  // eq = none
  40d2dc:	add	x1, x1, #0x498
  40d2e0:	mov	x2, #0xc                   	// #12
  40d2e4:	sub	x2, x2, x0
  40d2e8:	cinc	x1, x1, eq  // eq = none
  40d2ec:	ldp	x21, x20, [x19, #32]
  40d2f0:	stp	x1, x2, [x19, #32]
  40d2f4:	mov	x0, x19
  40d2f8:	bl	40ca10 <wcrtomb@plt+0xa0f0>
  40d2fc:	stp	x21, x20, [x19, #32]
  40d300:	str	x0, [x19, #48]
  40d304:	strb	wzr, [x19, #120]
  40d308:	b	40d230 <wcrtomb@plt+0xa910>
  40d30c:	ldrb	w1, [x19, #1048]
  40d310:	cbz	w22, 40d204 <wcrtomb@plt+0xa8e4>
  40d314:	ldr	x0, [x19, #448]
  40d318:	and	x21, x0, #0x80000
  40d31c:	tbnz	w0, #19, 40d204 <wcrtomb@plt+0xa8e4>
  40d320:	cbz	w1, 40d78c <wcrtomb@plt+0xae6c>
  40d324:	cmp	w20, #0x73
  40d328:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40d32c:	cset	x0, eq  // eq = none
  40d330:	add	x1, x1, #0x488
  40d334:	mov	x2, #0xb                   	// #11
  40d338:	b	40d2e4 <wcrtomb@plt+0xa9c4>
  40d33c:	cbz	w22, 40d200 <wcrtomb@plt+0xa8e0>
  40d340:	ldr	x0, [x19, #448]
  40d344:	tbnz	w0, #19, 40d200 <wcrtomb@plt+0xa8e0>
  40d348:	mov	x1, #0x110                 	// #272
  40d34c:	mov	x0, x1
  40d350:	str	x1, [x19, #48]
  40d354:	b	40d230 <wcrtomb@plt+0xa910>
  40d358:	cbnz	w22, 40d200 <wcrtomb@plt+0xa8e0>
  40d35c:	ldr	x0, [x19, #448]
  40d360:	tbnz	w0, #3, 40d378 <wcrtomb@plt+0xaa58>
  40d364:	ldr	x0, [x19, #48]
  40d368:	sub	x1, x0, #0x106
  40d36c:	cmp	x1, #0x1
  40d370:	ccmn	x0, #0x1, #0x4, hi  // hi = pmore
  40d374:	b.ne	40d200 <wcrtomb@plt+0xa8e0>  // b.any
  40d378:	mov	x1, #0x10c                 	// #268
  40d37c:	mov	x0, x1
  40d380:	str	x1, [x19, #48]
  40d384:	b	40d230 <wcrtomb@plt+0xa910>
  40d388:	cbnz	w22, 40d200 <wcrtomb@plt+0xa8e0>
  40d38c:	ldr	x0, [x19, #40]
  40d390:	cbz	x0, 40d8dc <wcrtomb@plt+0xafbc>
  40d394:	cmp	w23, #0x1
  40d398:	mov	w22, #0x1                   	// #1
  40d39c:	b.eq	40d8f0 <wcrtomb@plt+0xafd0>  // b.none
  40d3a0:	mov	w23, w22
  40d3a4:	b	40d134 <wcrtomb@plt+0xa814>
  40d3a8:	cbz	w22, 40d200 <wcrtomb@plt+0xa8e0>
  40d3ac:	ldr	x0, [x19, #448]
  40d3b0:	tbnz	w0, #19, 40d200 <wcrtomb@plt+0xa8e0>
  40d3b4:	b	40d378 <wcrtomb@plt+0xaa58>
  40d3b8:	ldr	x6, [x19, #448]
  40d3bc:	tbz	w6, #9, 40d200 <wcrtomb@plt+0xa8e0>
  40d3c0:	lsr	x0, x6, #12
  40d3c4:	eor	x0, x0, #0x1
  40d3c8:	and	w0, w0, #0x1
  40d3cc:	cmp	w0, w22
  40d3d0:	b.ne	40d200 <wcrtomb@plt+0xa8e0>  // b.any
  40d3d4:	tbnz	w6, #4, 40d3e0 <wcrtomb@plt+0xaac0>
  40d3d8:	ldrb	w0, [x19, #120]
  40d3dc:	cbnz	w0, 40d200 <wcrtomb@plt+0xa8e0>
  40d3e0:	ldp	x1, x5, [x19, #32]
  40d3e4:	mov	x0, #0xffffffffffffffff    	// #-1
  40d3e8:	str	x0, [x19, #64]
  40d3ec:	mov	w7, #0x8030                	// #32816
  40d3f0:	add	x5, x1, x5
  40d3f4:	cmp	x1, x5
  40d3f8:	b.ne	40d424 <wcrtomb@plt+0xab04>  // b.any
  40d3fc:	b	40d838 <wcrtomb@plt+0xaf18>
  40d400:	add	w0, w0, w0, lsl #2
  40d404:	add	w0, w2, w0, lsl #1
  40d408:	cmp	w0, w7
  40d40c:	csel	w0, w0, w7, le
  40d410:	sub	w0, w0, #0x30
  40d414:	str	w0, [x19, #64]
  40d418:	add	x1, x1, #0x1
  40d41c:	cmp	x5, x1
  40d420:	b.eq	40d838 <wcrtomb@plt+0xaf18>  // b.none
  40d424:	ldrb	w2, [x1]
  40d428:	sub	w3, w2, #0x30
  40d42c:	and	w4, w3, #0xff
  40d430:	cmp	w4, #0x9
  40d434:	b.hi	40d68c <wcrtomb@plt+0xad6c>  // b.pmore
  40d438:	cmn	w0, #0x1
  40d43c:	b.ne	40d400 <wcrtomb@plt+0xaae0>  // b.any
  40d440:	mov	w0, w3
  40d444:	b	40d414 <wcrtomb@plt+0xaaf4>
  40d448:	cbz	w22, 40d200 <wcrtomb@plt+0xa8e0>
  40d44c:	ldr	x0, [x19, #448]
  40d450:	tbnz	w0, #19, 40d200 <wcrtomb@plt+0xa8e0>
  40d454:	mov	x1, #0x10d                 	// #269
  40d458:	mov	x0, x1
  40d45c:	str	x1, [x19, #48]
  40d460:	b	40d230 <wcrtomb@plt+0xa910>
  40d464:	cbz	w22, 40d200 <wcrtomb@plt+0xa8e0>
  40d468:	ldr	x0, [x19, #448]
  40d46c:	tbnz	w0, #19, 40d200 <wcrtomb@plt+0xa8e0>
  40d470:	mov	x1, #0x10f                 	// #271
  40d474:	mov	x0, x1
  40d478:	str	x1, [x19, #48]
  40d47c:	b	40d230 <wcrtomb@plt+0xa910>
  40d480:	ldr	x0, [x19, #448]
  40d484:	tst	x0, #0x400
  40d488:	ccmp	w22, #0x0, #0x0, eq  // eq = none
  40d48c:	b.ne	40d200 <wcrtomb@plt+0xa8e0>  // b.any
  40d490:	tbz	w0, #11, 40d200 <wcrtomb@plt+0xa8e0>
  40d494:	mov	x1, #0x106                 	// #262
  40d498:	mov	w2, #0x1                   	// #1
  40d49c:	mov	x0, x1
  40d4a0:	str	x1, [x19, #48]
  40d4a4:	strb	w2, [x19, #120]
  40d4a8:	b	40d230 <wcrtomb@plt+0xa910>
  40d4ac:	ldr	x1, [x19, #448]
  40d4b0:	lsr	x0, x1, #13
  40d4b4:	eor	x0, x0, #0x1
  40d4b8:	and	w0, w0, #0x1
  40d4bc:	cmp	w0, w22
  40d4c0:	b.ne	40d200 <wcrtomb@plt+0xa8e0>  // b.any
  40d4c4:	ldr	x0, [x19, #56]
  40d4c8:	cbnz	x0, 40d4d0 <wcrtomb@plt+0xabb0>
  40d4cc:	tbnz	w1, #17, 40d200 <wcrtomb@plt+0xa8e0>
  40d4d0:	sub	x1, x0, #0x1
  40d4d4:	mov	x2, #0x108                 	// #264
  40d4d8:	mov	x0, x2
  40d4dc:	stp	x2, x1, [x19, #48]
  40d4e0:	strb	wzr, [x19, #120]
  40d4e4:	b	40d230 <wcrtomb@plt+0xa910>
  40d4e8:	ldr	x0, [x19, #448]
  40d4ec:	lsr	x0, x0, #13
  40d4f0:	eor	x0, x0, #0x1
  40d4f4:	and	w0, w0, #0x1
  40d4f8:	cmp	w0, w22
  40d4fc:	b.ne	40d200 <wcrtomb@plt+0xa8e0>  // b.any
  40d500:	ldr	x1, [x19, #56]
  40d504:	mov	x2, #0x107                 	// #263
  40d508:	mov	w3, #0x1                   	// #1
  40d50c:	mov	x0, x2
  40d510:	add	x1, x1, #0x1
  40d514:	stp	x2, x1, [x19, #48]
  40d518:	strb	w3, [x19, #120]
  40d51c:	b	40d230 <wcrtomb@plt+0xa910>
  40d520:	cbnz	w22, 40d200 <wcrtomb@plt+0xa8e0>
  40d524:	strb	wzr, [x19, #120]
  40d528:	mov	x0, x19
  40d52c:	bl	40ca10 <wcrtomb@plt+0xa0f0>
  40d530:	b	40d22c <wcrtomb@plt+0xa90c>
  40d534:	ldr	x0, [x19, #448]
  40d538:	tbnz	w0, #10, 40d200 <wcrtomb@plt+0xa8e0>
  40d53c:	ubfx	w1, w0, #1, #1
  40d540:	cmp	w1, w22
  40d544:	b.ne	40d200 <wcrtomb@plt+0xa8e0>  // b.any
  40d548:	tbnz	w0, #4, 40d554 <wcrtomb@plt+0xac34>
  40d54c:	ldrb	w0, [x19, #120]
  40d550:	cbnz	w0, 40d200 <wcrtomb@plt+0xa8e0>
  40d554:	mov	x1, #0x103                 	// #259
  40d558:	mov	x0, x1
  40d55c:	str	x1, [x19, #48]
  40d560:	b	40d230 <wcrtomb@plt+0xa910>
  40d564:	cbnz	w22, 40d200 <wcrtomb@plt+0xa8e0>
  40d568:	ldr	x0, [x19, #448]
  40d56c:	tbnz	w0, #4, 40d578 <wcrtomb@plt+0xac58>
  40d570:	ldrb	w0, [x19, #120]
  40d574:	cbnz	w0, 40d200 <wcrtomb@plt+0xa8e0>
  40d578:	mov	x1, #0x102                 	// #258
  40d57c:	mov	x0, x1
  40d580:	str	x1, [x19, #48]
  40d584:	b	40d230 <wcrtomb@plt+0xa910>
  40d588:	cbz	w22, 40d200 <wcrtomb@plt+0xa8e0>
  40d58c:	ldr	x0, [x19, #448]
  40d590:	tbnz	w0, #19, 40d200 <wcrtomb@plt+0xa8e0>
  40d594:	mov	x1, #0x10e                 	// #270
  40d598:	mov	x0, x1
  40d59c:	str	x1, [x19, #48]
  40d5a0:	b	40d230 <wcrtomb@plt+0xa910>
  40d5a4:	cbz	w22, 40d200 <wcrtomb@plt+0xa8e0>
  40d5a8:	ldr	x0, [x19, #448]
  40d5ac:	tbnz	w0, #19, 40d200 <wcrtomb@plt+0xa8e0>
  40d5b0:	mov	x1, #0x111                 	// #273
  40d5b4:	mov	x0, x1
  40d5b8:	str	x1, [x19, #48]
  40d5bc:	b	40d230 <wcrtomb@plt+0xa910>
  40d5c0:	ldr	x0, [x19, #448]
  40d5c4:	tbnz	w0, #10, 40d200 <wcrtomb@plt+0xa8e0>
  40d5c8:	ubfx	w1, w0, #1, #1
  40d5cc:	cmp	w1, w22
  40d5d0:	b.ne	40d200 <wcrtomb@plt+0xa8e0>  // b.any
  40d5d4:	tbnz	w0, #4, 40d5e0 <wcrtomb@plt+0xacc0>
  40d5d8:	ldrb	w0, [x19, #120]
  40d5dc:	cbnz	w0, 40d200 <wcrtomb@plt+0xa8e0>
  40d5e0:	mov	x1, #0x101                 	// #257
  40d5e4:	mov	x0, x1
  40d5e8:	str	x1, [x19, #48]
  40d5ec:	b	40d230 <wcrtomb@plt+0xa910>
  40d5f0:	ldr	x0, [x19, #448]
  40d5f4:	tbnz	w0, #10, 40d200 <wcrtomb@plt+0xa8e0>
  40d5f8:	lsr	x0, x0, #15
  40d5fc:	eor	x0, x0, #0x1
  40d600:	and	w0, w0, #0x1
  40d604:	cmp	w0, w22
  40d608:	b.ne	40d200 <wcrtomb@plt+0xa8e0>  // b.any
  40d60c:	b	40d494 <wcrtomb@plt+0xab74>
  40d610:	ldrb	w1, [x19, #1048]
  40d614:	cbnz	w22, 40d204 <wcrtomb@plt+0xa8e4>
  40d618:	ldr	x0, [x19, #24]
  40d61c:	tbnz	x0, #63, 40d648 <wcrtomb@plt+0xad28>
  40d620:	strb	wzr, [x19, #120]
  40d624:	mov	x0, #0x10a                 	// #266
  40d628:	cbnz	w1, 40d22c <wcrtomb@plt+0xa90c>
  40d62c:	ldr	x0, [x19, #24]
  40d630:	add	x0, x0, #0x114
  40d634:	b	40d22c <wcrtomb@plt+0xa90c>
  40d638:	mov	x1, #0xffffffffffffffff    	// #-1
  40d63c:	mov	x0, x1
  40d640:	str	x1, [x19, #48]
  40d644:	b	40d230 <wcrtomb@plt+0xa910>
  40d648:	ldr	x3, [x19, #448]
  40d64c:	mov	x2, #0xffffffffffffffff    	// #-1
  40d650:	mov	x0, #0xfffffffffffffbff    	// #-1025
  40d654:	stp	x2, x2, [sp, #80]
  40d658:	tst	x3, #0x40
  40d65c:	csel	x0, x0, x2, eq  // eq = none
  40d660:	stp	x0, x2, [sp, #64]
  40d664:	tbz	w3, #7, 40d670 <wcrtomb@plt+0xad50>
  40d668:	and	x0, x0, #0xfffffffffffffffe
  40d66c:	str	x0, [sp, #64]
  40d670:	cbnz	w1, 40d7f8 <wcrtomb@plt+0xaed8>
  40d674:	add	x1, sp, #0x40
  40d678:	mov	x0, x19
  40d67c:	bl	40c940 <wcrtomb@plt+0xa020>
  40d680:	ldrb	w1, [x19, #1048]
  40d684:	str	x0, [x19, #24]
  40d688:	b	40d620 <wcrtomb@plt+0xad00>
  40d68c:	cmp	w2, #0x2c
  40d690:	b.eq	40d840 <wcrtomb@plt+0xaf20>  // b.none
  40d694:	str	w0, [x19, #68]
  40d698:	cbz	w22, 40d6d0 <wcrtomb@plt+0xadb0>
  40d69c:	cmp	x1, x5
  40d6a0:	b.eq	40d6b0 <wcrtomb@plt+0xad90>  // b.none
  40d6a4:	ldrb	w0, [x1]
  40d6a8:	cmp	w0, #0x5c
  40d6ac:	b.eq	40d6cc <wcrtomb@plt+0xadac>  // b.none
  40d6b0:	tbnz	w6, #21, 40d200 <wcrtomb@plt+0xa8e0>
  40d6b4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40d6b8:	add	x1, x1, #0x450
  40d6bc:	mov	w2, #0x5                   	// #5
  40d6c0:	mov	x0, #0x0                   	// #0
  40d6c4:	bl	4027f0 <dcgettext@plt>
  40d6c8:	bl	404118 <wcrtomb@plt+0x17f8>
  40d6cc:	add	x1, x1, #0x1
  40d6d0:	cmp	x1, x5
  40d6d4:	b.eq	40d6b0 <wcrtomb@plt+0xad90>  // b.none
  40d6d8:	ldrb	w0, [x1]
  40d6dc:	cmp	w0, #0x7d
  40d6e0:	b.ne	40d6b0 <wcrtomb@plt+0xad90>  // b.any
  40d6e4:	ldr	w2, [x19, #64]
  40d6e8:	tbnz	w2, #31, 40d6b0 <wcrtomb@plt+0xad90>
  40d6ec:	ldr	w0, [x19, #68]
  40d6f0:	tbnz	w0, #31, 40d708 <wcrtomb@plt+0xade8>
  40d6f4:	cmp	w2, w0
  40d6f8:	b.gt	40d6b0 <wcrtomb@plt+0xad90>
  40d6fc:	mov	w2, #0x7fff                	// #32767
  40d700:	cmp	w0, w2
  40d704:	b.gt	40d8c4 <wcrtomb@plt+0xafa4>
  40d708:	add	x1, x1, #0x1
  40d70c:	mov	x2, #0x104                 	// #260
  40d710:	sub	x5, x5, x1
  40d714:	mov	x0, x2
  40d718:	stp	x1, x5, [x19, #32]
  40d71c:	str	x2, [x19, #48]
  40d720:	strb	wzr, [x19, #120]
  40d724:	b	40d230 <wcrtomb@plt+0xa910>
  40d728:	add	x1, sp, #0x40
  40d72c:	add	x4, x19, #0x1cc
  40d730:	mov	x6, #0x1                   	// #1
  40d734:	stp	xzr, xzr, [sp, #64]
  40d738:	stp	xzr, xzr, [sp, #80]
  40d73c:	nop
  40d740:	ldrb	w2, [x4, x0]
  40d744:	cmp	w2, #0x2
  40d748:	b.ne	40d760 <wcrtomb@plt+0xae40>  // b.any
  40d74c:	lsr	w3, w0, #6
  40d750:	lsl	x2, x6, x0
  40d754:	ldr	x5, [x1, x3, lsl #3]
  40d758:	orr	x2, x2, x5
  40d75c:	str	x2, [x1, x3, lsl #3]
  40d760:	add	x0, x0, #0x1
  40d764:	cmp	x0, #0x100
  40d768:	b.ne	40d740 <wcrtomb@plt+0xae20>  // b.any
  40d76c:	cmp	w20, #0x57
  40d770:	b.eq	40d8a4 <wcrtomb@plt+0xaf84>  // b.none
  40d774:	strb	wzr, [x19, #120]
  40d778:	mov	x0, x19
  40d77c:	bl	40c940 <wcrtomb@plt+0xa020>
  40d780:	add	x0, x0, #0x114
  40d784:	str	x0, [x19, #48]
  40d788:	b	40d230 <wcrtomb@plt+0xa910>
  40d78c:	stp	xzr, xzr, [sp, #64]
  40d790:	stp	xzr, xzr, [sp, #80]
  40d794:	bl	4026a0 <__ctype_b_loc@plt>
  40d798:	add	x1, sp, #0x40
  40d79c:	ldr	x3, [x0]
  40d7a0:	mov	x5, #0x1                   	// #1
  40d7a4:	nop
  40d7a8:	ldrh	w0, [x3, x21, lsl #1]
  40d7ac:	tbz	w0, #13, 40d7c4 <wcrtomb@plt+0xaea4>
  40d7b0:	lsr	w2, w21, #6
  40d7b4:	lsl	x0, x5, x21
  40d7b8:	ldr	x4, [x1, x2, lsl #3]
  40d7bc:	orr	x0, x0, x4
  40d7c0:	str	x0, [x1, x2, lsl #3]
  40d7c4:	add	x21, x21, #0x1
  40d7c8:	cmp	x21, #0x100
  40d7cc:	b.ne	40d7a8 <wcrtomb@plt+0xae88>  // b.any
  40d7d0:	cmp	w20, #0x53
  40d7d4:	b.ne	40d774 <wcrtomb@plt+0xae54>  // b.any
  40d7d8:	mov	x0, x1
  40d7dc:	add	x3, sp, #0x60
  40d7e0:	ldr	x2, [x0]
  40d7e4:	mvn	x2, x2
  40d7e8:	str	x2, [x0], #8
  40d7ec:	cmp	x0, x3
  40d7f0:	b.ne	40d7e0 <wcrtomb@plt+0xaec0>  // b.any
  40d7f4:	b	40d774 <wcrtomb@plt+0xae54>
  40d7f8:	add	x1, sp, #0x40
  40d7fc:	add	x4, x19, #0x51c
  40d800:	mov	x0, #0x0                   	// #0
  40d804:	mov	x6, #0x1                   	// #1
  40d808:	ldr	w2, [x4, x0, lsl #2]
  40d80c:	cmn	w2, #0x1
  40d810:	b.ne	40d828 <wcrtomb@plt+0xaf08>  // b.any
  40d814:	lsr	w3, w0, #6
  40d818:	lsl	x2, x6, x0
  40d81c:	ldr	x5, [x1, x3, lsl #3]
  40d820:	bic	x2, x5, x2
  40d824:	str	x2, [x1, x3, lsl #3]
  40d828:	add	x0, x0, #0x1
  40d82c:	cmp	x0, #0x100
  40d830:	b.ne	40d808 <wcrtomb@plt+0xaee8>  // b.any
  40d834:	b	40d678 <wcrtomb@plt+0xad58>
  40d838:	cbnz	w22, 40d6b0 <wcrtomb@plt+0xad90>
  40d83c:	b	40d6d0 <wcrtomb@plt+0xadb0>
  40d840:	cmn	w0, #0x1
  40d844:	b.ne	40d84c <wcrtomb@plt+0xaf2c>  // b.any
  40d848:	str	wzr, [x19, #64]
  40d84c:	add	x1, x1, #0x1
  40d850:	mov	w4, #0x8030                	// #32816
  40d854:	cmp	x5, x1
  40d858:	b.ne	40d88c <wcrtomb@plt+0xaf6c>  // b.any
  40d85c:	b	40d6b0 <wcrtomb@plt+0xad90>
  40d860:	ldr	w0, [x19, #68]
  40d864:	tbnz	w0, #31, 40d87c <wcrtomb@plt+0xaf5c>
  40d868:	add	w0, w0, w0, lsl #2
  40d86c:	add	w0, w3, w0, lsl #1
  40d870:	cmp	w0, w4
  40d874:	csel	w0, w0, w4, le
  40d878:	sub	w2, w0, #0x30
  40d87c:	str	w2, [x19, #68]
  40d880:	add	x1, x1, #0x1
  40d884:	cmp	x5, x1
  40d888:	b.eq	40d6b0 <wcrtomb@plt+0xad90>  // b.none
  40d88c:	ldrb	w3, [x1]
  40d890:	sub	w2, w3, #0x30
  40d894:	and	w0, w2, #0xff
  40d898:	cmp	w0, #0x9
  40d89c:	b.ls	40d860 <wcrtomb@plt+0xaf40>  // b.plast
  40d8a0:	b	40d698 <wcrtomb@plt+0xad78>
  40d8a4:	mov	x0, x1
  40d8a8:	add	x3, sp, #0x60
  40d8ac:	ldr	x2, [x0]
  40d8b0:	mvn	x2, x2
  40d8b4:	str	x2, [x0], #8
  40d8b8:	cmp	x0, x3
  40d8bc:	b.ne	40d8ac <wcrtomb@plt+0xaf8c>  // b.any
  40d8c0:	b	40d774 <wcrtomb@plt+0xae54>
  40d8c4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40d8c8:	add	x1, x1, #0x468
  40d8cc:	mov	w2, #0x5                   	// #5
  40d8d0:	mov	x0, #0x0                   	// #0
  40d8d4:	bl	4027f0 <dcgettext@plt>
  40d8d8:	bl	404118 <wcrtomb@plt+0x17f8>
  40d8dc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40d8e0:	add	x1, x1, #0x438
  40d8e4:	mov	w2, #0x5                   	// #5
  40d8e8:	bl	4027f0 <dcgettext@plt>
  40d8ec:	bl	404118 <wcrtomb@plt+0x17f8>
  40d8f0:	bl	4025f0 <abort@plt>
  40d8f4:	nop
  40d8f8:	stp	x29, x30, [sp, #-176]!
  40d8fc:	mov	x2, #0x109                 	// #265
  40d900:	mov	x29, sp
  40d904:	ldr	x1, [x0, #128]
  40d908:	stp	x19, x20, [sp, #16]
  40d90c:	mov	x19, x0
  40d910:	cmp	x1, #0xff
  40d914:	ccmp	x1, x2, #0x0, hi  // hi = pmore
  40d918:	b.le	40dc34 <wcrtomb@plt+0xb314>
  40d91c:	cmp	x1, #0x10a
  40d920:	b.ne	40d92c <wcrtomb@plt+0xb00c>  // b.any
  40d924:	ldrb	w0, [x0, #1050]
  40d928:	cbnz	w0, 40da64 <wcrtomb@plt+0xb144>
  40d92c:	mov	x0, x19
  40d930:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40d934:	mov	x0, x19
  40d938:	bl	40d108 <wcrtomb@plt+0xa7e8>
  40d93c:	mov	x1, x0
  40d940:	str	x0, [x19, #128]
  40d944:	sub	x0, x1, #0x101
  40d948:	cmp	x0, #0x3
  40d94c:	b.hi	40d984 <wcrtomb@plt+0xb064>  // b.pmore
  40d950:	stp	x21, x22, [sp, #32]
  40d954:	cmp	x1, #0x104
  40d958:	b.eq	40d990 <wcrtomb@plt+0xb070>  // b.none
  40d95c:	mov	x0, x19
  40d960:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40d964:	mov	x0, x19
  40d968:	bl	40d108 <wcrtomb@plt+0xa7e8>
  40d96c:	mov	x1, x0
  40d970:	str	x0, [x19, #128]
  40d974:	sub	x0, x1, #0x101
  40d978:	cmp	x0, #0x3
  40d97c:	b.ls	40d954 <wcrtomb@plt+0xb034>  // b.plast
  40d980:	ldp	x21, x22, [sp, #32]
  40d984:	ldp	x19, x20, [sp, #16]
  40d988:	ldp	x29, x30, [sp], #176
  40d98c:	ret
  40d990:	ldr	x21, [x19, #152]
  40d994:	mov	x0, x19
  40d998:	mov	x1, x21
  40d99c:	bl	409f68 <wcrtomb@plt+0x7648>
  40d9a0:	ldr	x1, [x19, #64]
  40d9a4:	mov	x22, x0
  40d9a8:	sub	x21, x21, x0
  40d9ac:	cbnz	x1, 40d9d0 <wcrtomb@plt+0xb0b0>
  40d9b0:	str	x21, [x19, #152]
  40d9b4:	mov	x0, x19
  40d9b8:	bl	40d108 <wcrtomb@plt+0xa7e8>
  40d9bc:	str	x0, [x19, #128]
  40d9c0:	mov	x0, x19
  40d9c4:	bl	40d8f8 <wcrtomb@plt+0xafd8>
  40d9c8:	ldr	x1, [x19, #128]
  40d9cc:	b	40d974 <wcrtomb@plt+0xb054>
  40d9d0:	ldr	w0, [x19, #68]
  40d9d4:	tbnz	w0, #31, 40dc14 <wcrtomb@plt+0xb2f4>
  40d9d8:	ldr	w0, [x19, #64]
  40d9dc:	cbz	w0, 40dc00 <wcrtomb@plt+0xb2e0>
  40d9e0:	cmp	w0, #0x1
  40d9e4:	mov	w20, #0x1                   	// #1
  40d9e8:	b.le	40da1c <wcrtomb@plt+0xb0fc>
  40d9ec:	nop
  40d9f0:	mov	x2, x22
  40d9f4:	mov	x1, x21
  40d9f8:	mov	x0, x19
  40d9fc:	bl	40aa48 <wcrtomb@plt+0x8128>
  40da00:	mov	x0, x19
  40da04:	mov	x1, #0x105                 	// #261
  40da08:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40da0c:	add	w20, w20, #0x1
  40da10:	ldr	w0, [x19, #64]
  40da14:	cmp	w0, w20
  40da18:	b.gt	40d9f0 <wcrtomb@plt+0xb0d0>
  40da1c:	ldr	w0, [x19, #68]
  40da20:	cmp	w20, w0
  40da24:	b.ge	40d964 <wcrtomb@plt+0xb044>  // b.tcont
  40da28:	mov	x2, x22
  40da2c:	mov	x1, x21
  40da30:	mov	x0, x19
  40da34:	bl	40aa48 <wcrtomb@plt+0x8128>
  40da38:	mov	x0, x19
  40da3c:	mov	x1, #0x101                 	// #257
  40da40:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40da44:	add	w20, w20, #0x1
  40da48:	mov	x0, x19
  40da4c:	mov	x1, #0x105                 	// #261
  40da50:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40da54:	ldr	w0, [x19, #68]
  40da58:	cmp	w0, w20
  40da5c:	b.gt	40da28 <wcrtomb@plt+0xb108>
  40da60:	b	40d964 <wcrtomb@plt+0xb044>
  40da64:	ldr	x1, [x19, #200]
  40da68:	cbnz	x1, 40dae0 <wcrtomb@plt+0xb1c0>
  40da6c:	adrp	x20, 426000 <_obstack_memory_used@@Base+0xef38>
  40da70:	add	x20, x20, #0x658
  40da74:	add	x2, x20, #0x170
  40da78:	add	x1, sp, #0x30
  40da7c:	ldr	x0, [x19, #448]
  40da80:	stp	x21, x22, [sp, #32]
  40da84:	ld1	{v0.16b, v1.16b}, [x2]
  40da88:	st1	{v0.16b, v1.16b}, [x1]
  40da8c:	tbnz	w0, #6, 40da98 <wcrtomb@plt+0xb178>
  40da90:	mov	x2, #0xfffffffffffffbff    	// #-1025
  40da94:	str	x2, [sp, #48]
  40da98:	tbnz	w0, #7, 40dc24 <wcrtomb@plt+0xb304>
  40da9c:	add	x20, x20, #0x190
  40daa0:	add	x21, x19, #0xd0
  40daa4:	add	x22, x19, #0x110
  40daa8:	mov	x0, x19
  40daac:	bl	40c940 <wcrtomb@plt+0xa020>
  40dab0:	add	x0, x0, #0x114
  40dab4:	str	x0, [x19, #200]
  40dab8:	mov	x1, x20
  40dabc:	mov	x0, x19
  40dac0:	bl	40c940 <wcrtomb@plt+0xa020>
  40dac4:	add	x0, x0, #0x114
  40dac8:	str	x0, [x21], #8
  40dacc:	add	x20, x20, #0x20
  40dad0:	cmp	x21, x22
  40dad4:	b.ne	40dab8 <wcrtomb@plt+0xb198>  // b.any
  40dad8:	ldp	x21, x22, [sp, #32]
  40dadc:	ldr	x1, [x19, #200]
  40dae0:	mov	x0, x19
  40dae4:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dae8:	mov	w20, #0x3                   	// #3
  40daec:	ldr	x1, [x19, #208]
  40daf0:	mov	x0, x19
  40daf4:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40daf8:	mov	x0, x19
  40dafc:	mov	x1, #0xe0                  	// #224
  40db00:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40db04:	ldr	x1, [x19, #224]
  40db08:	mov	x0, x19
  40db0c:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40db10:	mov	x0, x19
  40db14:	mov	x1, #0x105                 	// #261
  40db18:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40db1c:	mov	x0, x19
  40db20:	mov	x1, #0x106                 	// #262
  40db24:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40db28:	mov	x0, x19
  40db2c:	mov	x1, #0xed                  	// #237
  40db30:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40db34:	ldr	x1, [x19, #240]
  40db38:	mov	x0, x19
  40db3c:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40db40:	mov	x0, x19
  40db44:	mov	x1, #0x105                 	// #261
  40db48:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40db4c:	mov	x0, x19
  40db50:	mov	x1, #0x106                 	// #262
  40db54:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40db58:	ldr	x1, [x19, #232]
  40db5c:	mov	x0, x19
  40db60:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40db64:	mov	x0, x19
  40db68:	mov	x1, #0xf0                  	// #240
  40db6c:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40db70:	ldr	x1, [x19, #248]
  40db74:	mov	x0, x19
  40db78:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40db7c:	mov	x0, x19
  40db80:	mov	x1, #0x105                 	// #261
  40db84:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40db88:	mov	x0, x19
  40db8c:	mov	x1, #0x106                 	// #262
  40db90:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40db94:	mov	x0, x19
  40db98:	mov	x1, #0xf4                  	// #244
  40db9c:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dba0:	ldr	x1, [x19, #264]
  40dba4:	mov	x0, x19
  40dba8:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dbac:	mov	x0, x19
  40dbb0:	mov	x1, #0x105                 	// #261
  40dbb4:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dbb8:	mov	x0, x19
  40dbbc:	mov	x1, #0x106                 	// #262
  40dbc0:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dbc4:	ldr	x1, [x19, #256]
  40dbc8:	mov	x0, x19
  40dbcc:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dbd0:	ldr	x1, [x19, #216]
  40dbd4:	mov	x0, x19
  40dbd8:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dbdc:	mov	x0, x19
  40dbe0:	mov	x1, #0x105                 	// #261
  40dbe4:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dbe8:	mov	x0, x19
  40dbec:	mov	x1, #0x106                 	// #262
  40dbf0:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dbf4:	subs	w20, w20, #0x1
  40dbf8:	b.ne	40dbd0 <wcrtomb@plt+0xb2b0>  // b.any
  40dbfc:	b	40d934 <wcrtomb@plt+0xb014>
  40dc00:	mov	x0, x19
  40dc04:	mov	x1, #0x101                 	// #257
  40dc08:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dc0c:	ldr	w0, [x19, #64]
  40dc10:	b	40d9e0 <wcrtomb@plt+0xb0c0>
  40dc14:	mov	x0, x19
  40dc18:	mov	x1, #0x103                 	// #259
  40dc1c:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dc20:	b	40d9d8 <wcrtomb@plt+0xb0b8>
  40dc24:	ldr	x0, [sp, #48]
  40dc28:	and	x0, x0, #0xfffffffffffffffe
  40dc2c:	str	x0, [sp, #48]
  40dc30:	b	40da9c <wcrtomb@plt+0xb17c>
  40dc34:	cmp	x1, #0x109
  40dc38:	b.eq	40dc54 <wcrtomb@plt+0xb334>  // b.none
  40dc3c:	cmp	x1, #0x107
  40dc40:	b.eq	40dcbc <wcrtomb@plt+0xb39c>  // b.none
  40dc44:	mov	x1, #0x100                 	// #256
  40dc48:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dc4c:	ldr	x1, [x19, #128]
  40dc50:	b	40d944 <wcrtomb@plt+0xb024>
  40dc54:	ldr	w1, [x0, #72]
  40dc58:	cmn	w1, #0x1
  40dc5c:	b.eq	40dcf4 <wcrtomb@plt+0xb3d4>  // b.none
  40dc60:	bl	40a4b8 <wcrtomb@plt+0x7b98>
  40dc64:	ldrb	w0, [x19, #457]
  40dc68:	cbz	w0, 40d934 <wcrtomb@plt+0xb014>
  40dc6c:	ldr	w0, [x19, #72]
  40dc70:	add	x1, sp, #0x30
  40dc74:	bl	40f958 <wcrtomb@plt+0xd038>
  40dc78:	cmp	w0, #0x0
  40dc7c:	b.le	40d934 <wcrtomb@plt+0xb014>
  40dc80:	sub	w0, w0, #0x1
  40dc84:	stp	x21, x22, [sp, #32]
  40dc88:	add	x21, sp, #0x30
  40dc8c:	add	x20, x21, #0x4
  40dc90:	add	x20, x20, w0, uxtw #2
  40dc94:	ldr	w1, [x21], #4
  40dc98:	mov	x0, x19
  40dc9c:	bl	40a4b8 <wcrtomb@plt+0x7b98>
  40dca0:	mov	x0, x19
  40dca4:	mov	x1, #0x106                 	// #262
  40dca8:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dcac:	cmp	x20, x21
  40dcb0:	b.ne	40dc94 <wcrtomb@plt+0xb374>  // b.any
  40dcb4:	ldp	x21, x22, [sp, #32]
  40dcb8:	b	40d934 <wcrtomb@plt+0xb014>
  40dcbc:	bl	40d108 <wcrtomb@plt+0xa7e8>
  40dcc0:	str	x0, [x19, #128]
  40dcc4:	mov	x0, x19
  40dcc8:	bl	40dd50 <wcrtomb@plt+0xb430>
  40dccc:	ldr	x0, [x19, #128]
  40dcd0:	cmp	x0, #0x108
  40dcd4:	b.eq	40d934 <wcrtomb@plt+0xb014>  // b.none
  40dcd8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40dcdc:	add	x1, x1, #0x4a8
  40dce0:	mov	w2, #0x5                   	// #5
  40dce4:	mov	x0, #0x0                   	// #0
  40dce8:	stp	x21, x22, [sp, #32]
  40dcec:	bl	4027f0 <dcgettext@plt>
  40dcf0:	bl	404118 <wcrtomb@plt+0x17f8>
  40dcf4:	mov	x1, #0x112                 	// #274
  40dcf8:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dcfc:	b	40d934 <wcrtomb@plt+0xb014>
  40dd00:	stp	x29, x30, [sp, #-32]!
  40dd04:	mov	x29, sp
  40dd08:	str	x19, [sp, #16]
  40dd0c:	mov	x19, x0
  40dd10:	bl	40d8f8 <wcrtomb@plt+0xafd8>
  40dd14:	b	40dd2c <wcrtomb@plt+0xb40c>
  40dd18:	mov	x0, x19
  40dd1c:	bl	40d8f8 <wcrtomb@plt+0xafd8>
  40dd20:	mov	x0, x19
  40dd24:	mov	x1, #0x105                 	// #261
  40dd28:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dd2c:	ldr	x0, [x19, #128]
  40dd30:	sub	x1, x0, #0x106
  40dd34:	tst	x1, #0xfffffffffffffffd
  40dd38:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  40dd3c:	b.ge	40dd18 <wcrtomb@plt+0xb3f8>  // b.tcont
  40dd40:	ldr	x19, [sp, #16]
  40dd44:	ldp	x29, x30, [sp], #32
  40dd48:	ret
  40dd4c:	nop
  40dd50:	stp	x29, x30, [sp, #-32]!
  40dd54:	mov	x29, sp
  40dd58:	str	x19, [sp, #16]
  40dd5c:	mov	x19, x0
  40dd60:	bl	40dd00 <wcrtomb@plt+0xb3e0>
  40dd64:	ldr	x0, [x19, #128]
  40dd68:	cmp	x0, #0x106
  40dd6c:	b.ne	40dd9c <wcrtomb@plt+0xb47c>  // b.any
  40dd70:	mov	x0, x19
  40dd74:	bl	40d108 <wcrtomb@plt+0xa7e8>
  40dd78:	str	x0, [x19, #128]
  40dd7c:	mov	x0, x19
  40dd80:	bl	40dd00 <wcrtomb@plt+0xb3e0>
  40dd84:	mov	x0, x19
  40dd88:	mov	x1, #0x106                 	// #262
  40dd8c:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40dd90:	ldr	x0, [x19, #128]
  40dd94:	cmp	x0, #0x106
  40dd98:	b.eq	40dd70 <wcrtomb@plt+0xb450>  // b.none
  40dd9c:	ldr	x19, [sp, #16]
  40dda0:	ldp	x29, x30, [sp], #32
  40dda4:	ret
  40dda8:	stp	x29, x30, [sp, #-144]!
  40ddac:	mov	x29, sp
  40ddb0:	stp	x19, x20, [sp, #16]
  40ddb4:	mov	x19, x0
  40ddb8:	ldr	x0, [x0, #304]
  40ddbc:	stp	x21, x22, [sp, #32]
  40ddc0:	mov	x22, x2
  40ddc4:	stp	x23, x24, [sp, #48]
  40ddc8:	cmp	x0, #0x3ff
  40ddcc:	mov	x23, x4
  40ddd0:	stp	x25, x26, [sp, #64]
  40ddd4:	mov	x25, x1
  40ddd8:	and	w1, w3, #0xff
  40dddc:	stp	x27, x28, [sp, #80]
  40dde0:	str	w1, [sp, #108]
  40dde4:	b.gt	40e16c <wcrtomb@plt+0xb84c>
  40dde8:	ldr	x0, [x19, #352]
  40ddec:	cbz	x0, 40e288 <wcrtomb@plt+0xb968>
  40ddf0:	ldrb	w24, [x19, #459]
  40ddf4:	mov	x20, x25
  40ddf8:	ldrb	w0, [x22]
  40ddfc:	ldr	x28, [x19, #368]
  40de00:	strb	w24, [x22]
  40de04:	str	w0, [sp, #104]
  40de08:	ldr	x0, [x19, #424]
  40de0c:	str	x25, [sp, #136]
  40de10:	str	xzr, [x19, #272]
  40de14:	cbz	x0, 40e294 <wcrtomb@plt+0xb974>
  40de18:	add	x0, x19, w24, sxtw
  40de1c:	mov	x27, #0x0                   	// #0
  40de20:	mov	x21, #0x0                   	// #0
  40de24:	mov	x26, #0x0                   	// #0
  40de28:	str	xzr, [sp, #96]
  40de2c:	str	x0, [sp, #112]
  40de30:	ldr	x6, [x28, x26]
  40de34:	cbz	x6, 40def8 <wcrtomb@plt+0xb5d8>
  40de38:	add	x4, x21, x21, lsl #2
  40de3c:	ldrsw	x1, [x19, #364]
  40de40:	ldr	x0, [x19, #296]
  40de44:	lsl	x26, x4, #4
  40de48:	cmp	x1, x21
  40de4c:	add	x0, x0, x26
  40de50:	ldr	x2, [x0, #56]
  40de54:	b.le	40deb8 <wcrtomb@plt+0xb598>
  40de58:	ldrb	w0, [x20]
  40de5c:	cbz	x2, 40dfd0 <wcrtomb@plt+0xb6b0>
  40de60:	add	x0, x19, w0, sxtw
  40de64:	ldrb	w0, [x0, #716]
  40de68:	cbnz	w0, 40deb0 <wcrtomb@plt+0xb590>
  40de6c:	cmp	x25, x20
  40de70:	b.cs	40e008 <wcrtomb@plt+0xb6e8>  // b.hs, b.nlast
  40de74:	nop
  40de78:	sub	x2, x22, x25
  40de7c:	mov	x1, x25
  40de80:	mov	x3, x19
  40de84:	add	x0, sp, #0x84
  40de88:	str	x6, [sp, #120]
  40de8c:	bl	40a018 <wcrtomb@plt+0x76f8>
  40de90:	add	x25, x25, w0, sxtw
  40de94:	cmp	x25, x20
  40de98:	ldr	x6, [sp, #120]
  40de9c:	b.cc	40de78 <wcrtomb@plt+0xb558>  // b.lo, b.ul, b.last
  40dea0:	ldr	x0, [x19, #296]
  40dea4:	mov	x20, x25
  40dea8:	add	x4, x0, x26
  40deac:	ldr	x2, [x4, #56]
  40deb0:	mov	x25, x20
  40deb4:	str	x20, [sp, #136]
  40deb8:	cbz	x2, 40ded4 <wcrtomb@plt+0xb5b4>
  40debc:	ldrb	w0, [x20]
  40dec0:	cmp	x22, x20
  40dec4:	add	x0, x19, x0, lsl #2
  40dec8:	ldr	w0, [x0, #1308]
  40decc:	ccmn	w0, #0x1, #0x0, hi  // hi = pmore
  40ded0:	b.eq	40e010 <wcrtomb@plt+0xb6f0>  // b.none
  40ded4:	add	x0, x20, #0x1
  40ded8:	str	x0, [sp, #136]
  40dedc:	mov	x27, x21
  40dee0:	ldrb	w1, [x20]
  40dee4:	mov	x20, x0
  40dee8:	ldr	x21, [x6, x1, lsl #3]
  40deec:	lsl	x26, x21, #3
  40def0:	ldr	x6, [x28, x26]
  40def4:	cbnz	x6, 40de38 <wcrtomb@plt+0xb518>
  40def8:	tbnz	x21, #63, 40e0bc <wcrtomb@plt+0xb79c>
  40defc:	ldr	x0, [x19, #376]
  40df00:	ldrb	w2, [x20]
  40df04:	ldr	x0, [x0, x26]
  40df08:	cbz	x0, 40e0a4 <wcrtomb@plt+0xb784>
  40df0c:	ldr	x0, [x19, #384]
  40df10:	add	x1, x19, x2
  40df14:	ldrb	w0, [x0, x21]
  40df18:	ldrb	w1, [x1, #460]
  40df1c:	and	w0, w0, w1
  40df20:	tst	w0, #0xff
  40df24:	b.ne	40e2a8 <wcrtomb@plt+0xb988>  // b.any
  40df28:	add	x6, x21, x21, lsl #2
  40df2c:	cmp	x22, x20
  40df30:	lsl	x27, x6, #4
  40df34:	b.eq	40e048 <wcrtomb@plt+0xb728>  // b.none
  40df38:	ldrsw	x0, [x19, #364]
  40df3c:	cmp	x21, x0
  40df40:	b.ge	40df80 <wcrtomb@plt+0xb660>  // b.tcont
  40df44:	add	x2, x19, x2
  40df48:	ldrb	w0, [x2, #716]
  40df4c:	cbnz	w0, 40e040 <wcrtomb@plt+0xb720>
  40df50:	cmp	x25, x20
  40df54:	b.cs	40df78 <wcrtomb@plt+0xb658>  // b.hs, b.nlast
  40df58:	sub	x2, x22, x25
  40df5c:	mov	x1, x25
  40df60:	mov	x3, x19
  40df64:	add	x0, sp, #0x84
  40df68:	bl	40a018 <wcrtomb@plt+0x76f8>
  40df6c:	add	x25, x25, w0, sxtw
  40df70:	cmp	x25, x20
  40df74:	b.cc	40df58 <wcrtomb@plt+0xb638>  // b.lo, b.ul, b.last
  40df78:	mov	x20, x25
  40df7c:	str	x25, [sp, #136]
  40df80:	ldr	x0, [x19, #296]
  40df84:	add	x6, x0, x27
  40df88:	ldr	x0, [x6, #56]
  40df8c:	cbz	x0, 40dfa8 <wcrtomb@plt+0xb688>
  40df90:	ldrb	w0, [x20]
  40df94:	cmp	x22, x20
  40df98:	add	x0, x19, x0, lsl #2
  40df9c:	ldr	w0, [x0, #1308]
  40dfa0:	ccmn	w0, #0x1, #0x0, hi  // hi = pmore
  40dfa4:	b.eq	40e010 <wcrtomb@plt+0xb6f0>  // b.none
  40dfa8:	ldr	x1, [x19, #376]
  40dfac:	add	x0, x20, #0x1
  40dfb0:	mov	x27, x21
  40dfb4:	ldr	x1, [x1, x26]
  40dfb8:	str	x0, [sp, #136]
  40dfbc:	ldrb	w2, [x20]
  40dfc0:	mov	x20, x0
  40dfc4:	ldr	x21, [x1, x2, lsl #3]
  40dfc8:	lsl	x26, x21, #3
  40dfcc:	b	40de30 <wcrtomb@plt+0xb510>
  40dfd0:	mov	w1, w0
  40dfd4:	ldr	x1, [x6, x1, lsl #3]
  40dfd8:	cmp	x21, x1
  40dfdc:	b.ne	40de60 <wcrtomb@plt+0xb540>  // b.any
  40dfe0:	add	x1, x20, #0x1
  40dfe4:	nop
  40dfe8:	str	x1, [sp, #136]
  40dfec:	mov	x20, x1
  40dff0:	ldrb	w3, [x1], #1
  40dff4:	mov	x0, x3
  40dff8:	ldr	x3, [x6, x3, lsl #3]
  40dffc:	cmp	x21, x3
  40e000:	b.eq	40dfe8 <wcrtomb@plt+0xb6c8>  // b.none
  40e004:	b	40de60 <wcrtomb@plt+0xb540>
  40e008:	mov	x20, x25
  40e00c:	b	40deb0 <wcrtomb@plt+0xb590>
  40e010:	mov	x1, x21
  40e014:	mov	x3, x22
  40e018:	add	x2, sp, #0x88
  40e01c:	mov	x0, x19
  40e020:	bl	40c5f0 <wcrtomb@plt+0x9cd0>
  40e024:	mov	x27, x21
  40e028:	ldr	x25, [sp, #136]
  40e02c:	mov	x21, x0
  40e030:	lsl	x26, x0, #3
  40e034:	mov	x20, x25
  40e038:	ldr	x28, [x19, #368]
  40e03c:	b	40de30 <wcrtomb@plt+0xb510>
  40e040:	mov	x25, x20
  40e044:	b	40df78 <wcrtomb@plt+0xb658>
  40e048:	ldr	x0, [x19, #296]
  40e04c:	add	x0, x0, x27
  40e050:	ldrh	w1, [x0, #34]
  40e054:	ldrb	w0, [x0, #32]
  40e058:	and	w0, w0, w1, lsr #6
  40e05c:	tst	x0, #0x7
  40e060:	b.eq	40df38 <wcrtomb@plt+0xb618>  // b.none
  40e064:	mov	x6, x22
  40e068:	cbz	x23, 40e07c <wcrtomb@plt+0xb75c>
  40e06c:	ldr	x0, [x23]
  40e070:	ldr	x1, [sp, #96]
  40e074:	add	x25, x0, x1
  40e078:	str	x25, [x23]
  40e07c:	ldrb	w1, [sp, #104]
  40e080:	mov	x0, x6
  40e084:	strb	w1, [x22]
  40e088:	ldp	x19, x20, [sp, #16]
  40e08c:	ldp	x21, x22, [sp, #32]
  40e090:	ldp	x23, x24, [sp, #48]
  40e094:	ldp	x25, x26, [sp, #64]
  40e098:	ldp	x27, x28, [sp, #80]
  40e09c:	ldp	x29, x30, [sp], #144
  40e0a0:	ret
  40e0a4:	mov	x1, x19
  40e0a8:	mov	x0, x21
  40e0ac:	bl	40bdd8 <wcrtomb@plt+0x94b8>
  40e0b0:	ldr	x20, [sp, #136]
  40e0b4:	ldr	x28, [x19, #368]
  40e0b8:	b	40de30 <wcrtomb@plt+0xb510>
  40e0bc:	cmn	x21, #0x2
  40e0c0:	b.eq	40e120 <wcrtomb@plt+0xb800>  // b.none
  40e0c4:	cmp	x22, x20
  40e0c8:	b.cc	40e068 <wcrtomb@plt+0xb748>  // b.lo, b.ul, b.last
  40e0cc:	ldurb	w0, [x20, #-1]
  40e0d0:	cmp	w0, w24
  40e0d4:	b.ne	40e068 <wcrtomb@plt+0xb748>  // b.any
  40e0d8:	ldr	x0, [x19, #392]
  40e0dc:	ldr	x21, [x0, x27, lsl #3]
  40e0e0:	tbnz	x21, #63, 40e068 <wcrtomb@plt+0xb748>
  40e0e4:	ldr	x0, [sp, #96]
  40e0e8:	add	x0, x0, #0x1
  40e0ec:	str	x0, [sp, #96]
  40e0f0:	ldr	w0, [sp, #108]
  40e0f4:	cbnz	w0, 40e114 <wcrtomb@plt+0xb7f4>
  40e0f8:	ldr	x0, [sp, #112]
  40e0fc:	ldrb	w0, [x0, #460]
  40e100:	cmp	w0, #0x4
  40e104:	b.eq	40e144 <wcrtomb@plt+0xb824>  // b.none
  40e108:	cmp	w0, #0x2
  40e10c:	b.eq	40e154 <wcrtomb@plt+0xb834>  // b.none
  40e110:	ldr	x21, [x19, #400]
  40e114:	mov	x25, x20
  40e118:	lsl	x26, x21, #3
  40e11c:	b	40de30 <wcrtomb@plt+0xb510>
  40e120:	ldurb	w2, [x20, #-1]
  40e124:	mov	x1, x19
  40e128:	mov	x0, x27
  40e12c:	bl	40bdd8 <wcrtomb@plt+0x94b8>
  40e130:	mov	x21, x0
  40e134:	lsl	x26, x0, #3
  40e138:	ldr	x20, [sp, #136]
  40e13c:	ldr	x28, [x19, #368]
  40e140:	b	40de30 <wcrtomb@plt+0xb510>
  40e144:	mov	x25, x20
  40e148:	mov	x21, #0x0                   	// #0
  40e14c:	mov	x26, #0x0                   	// #0
  40e150:	b	40de30 <wcrtomb@plt+0xb510>
  40e154:	ldr	w4, [x19, #364]
  40e158:	mov	x25, x20
  40e15c:	sub	w4, w4, #0x1
  40e160:	sxtw	x21, w4
  40e164:	sbfiz	x26, x4, #3, #32
  40e168:	b	40de30 <wcrtomb@plt+0xb510>
  40e16c:	ldr	w20, [x19, #364]
  40e170:	cmp	x0, w20, sxtw
  40e174:	sxtw	x21, w20
  40e178:	b.le	40e1c0 <wcrtomb@plt+0xb8a0>
  40e17c:	mov	w0, #0x50                  	// #80
  40e180:	smull	x20, w20, w0
  40e184:	nop
  40e188:	ldr	x0, [x19, #296]
  40e18c:	add	x21, x21, #0x1
  40e190:	add	x0, x0, x20
  40e194:	ldr	x0, [x0, #8]
  40e198:	bl	4026b0 <free@plt>
  40e19c:	ldr	x0, [x19, #296]
  40e1a0:	add	x0, x0, x20
  40e1a4:	add	x20, x20, #0x50
  40e1a8:	ldr	x0, [x0, #48]
  40e1ac:	bl	4026b0 <free@plt>
  40e1b0:	ldr	x0, [x19, #304]
  40e1b4:	cmp	x21, x0
  40e1b8:	b.lt	40e188 <wcrtomb@plt+0xb868>  // b.tstop
  40e1bc:	ldrsw	x21, [x19, #364]
  40e1c0:	ldr	x1, [x19, #368]
  40e1c4:	str	x21, [x19, #304]
  40e1c8:	ldr	x0, [x19, #352]
  40e1cc:	cbz	x1, 40e214 <wcrtomb@plt+0xb8f4>
  40e1d0:	cmp	x0, #0x0
  40e1d4:	b.le	40e210 <wcrtomb@plt+0xb8f0>
  40e1d8:	mov	x20, #0x0                   	// #0
  40e1dc:	nop
  40e1e0:	ldr	x0, [x1, x20, lsl #3]
  40e1e4:	bl	4026b0 <free@plt>
  40e1e8:	ldr	x0, [x19, #376]
  40e1ec:	ldr	x0, [x0, x20, lsl #3]
  40e1f0:	bl	4026b0 <free@plt>
  40e1f4:	ldp	x1, x0, [x19, #368]
  40e1f8:	str	xzr, [x0, x20, lsl #3]
  40e1fc:	ldr	x0, [x19, #352]
  40e200:	str	xzr, [x1, x20, lsl #3]
  40e204:	add	x20, x20, #0x1
  40e208:	cmp	x20, x0
  40e20c:	b.lt	40e1e0 <wcrtomb@plt+0xb8c0>  // b.tstop
  40e210:	str	wzr, [x19, #360]
  40e214:	ldrb	w1, [x19, #1048]
  40e218:	cbz	w1, 40ddec <wcrtomb@plt+0xb4cc>
  40e21c:	ldr	x1, [x19, #432]
  40e220:	cbz	x1, 40ddec <wcrtomb@plt+0xb4cc>
  40e224:	tbnz	x0, #63, 40e250 <wcrtomb@plt+0xb930>
  40e228:	mov	x20, #0xffffffffffffffff    	// #-1
  40e22c:	nop
  40e230:	ldr	x0, [x1, x20, lsl #3]
  40e234:	bl	4026b0 <free@plt>
  40e238:	ldr	x1, [x19, #432]
  40e23c:	ldr	x0, [x19, #352]
  40e240:	str	xzr, [x1, x20, lsl #3]
  40e244:	add	x20, x20, #0x1
  40e248:	cmp	x20, x0
  40e24c:	b.lt	40e230 <wcrtomb@plt+0xb910>  // b.tstop
  40e250:	ldr	w2, [x19, #364]
  40e254:	cmp	w2, #0x0
  40e258:	b.le	40e27c <wcrtomb@plt+0xb95c>
  40e25c:	ldr	x1, [x19, #296]
  40e260:	mov	w4, #0x50                  	// #80
  40e264:	mov	x3, #0xffffffffffffffff    	// #-1
  40e268:	add	x1, x1, #0x48
  40e26c:	smaddl	x2, w2, w4, x1
  40e270:	str	x3, [x1], #80
  40e274:	cmp	x2, x1
  40e278:	b.ne	40e270 <wcrtomb@plt+0xb950>  // b.any
  40e27c:	str	xzr, [x19, #440]
  40e280:	cbnz	x0, 40ddf0 <wcrtomb@plt+0xb4d0>
  40e284:	nop
  40e288:	mov	x0, x19
  40e28c:	bl	40a2f8 <wcrtomb@plt+0x79d8>
  40e290:	b	40ddf0 <wcrtomb@plt+0xb4d0>
  40e294:	ldr	x1, [x19, #176]
  40e298:	add	x0, x19, #0x198
  40e29c:	bl	40a750 <wcrtomb@plt+0x7e30>
  40e2a0:	ldr	x20, [sp, #136]
  40e2a4:	b	40de18 <wcrtomb@plt+0xb4f8>
  40e2a8:	mov	x6, x20
  40e2ac:	b	40e068 <wcrtomb@plt+0xb748>
  40e2b0:	stp	x29, x30, [sp, #-112]!
  40e2b4:	mov	x29, sp
  40e2b8:	stp	x19, x20, [sp, #16]
  40e2bc:	mov	x19, x0
  40e2c0:	mov	x20, x1
  40e2c4:	ldr	x0, [x0, #304]
  40e2c8:	stp	x21, x22, [sp, #32]
  40e2cc:	mov	x21, x2
  40e2d0:	stp	x23, x24, [sp, #48]
  40e2d4:	mov	x22, x4
  40e2d8:	cmp	x0, #0x3ff
  40e2dc:	stp	x25, x26, [sp, #64]
  40e2e0:	and	w26, w3, #0xff
  40e2e4:	stp	x27, x28, [sp, #80]
  40e2e8:	b.gt	40e514 <wcrtomb@plt+0xbbf4>
  40e2ec:	ldr	x0, [x19, #352]
  40e2f0:	cbz	x0, 40e630 <wcrtomb@plt+0xbd10>
  40e2f4:	ldr	x1, [x19, #368]
  40e2f8:	mov	x28, #0x0                   	// #0
  40e2fc:	ldrb	w24, [x19, #459]
  40e300:	mov	x23, #0x0                   	// #0
  40e304:	ldrb	w0, [x21]
  40e308:	mov	x4, #0x0                   	// #0
  40e30c:	strb	w24, [x21]
  40e310:	str	w0, [sp, #108]
  40e314:	add	x25, x19, w24, sxtw
  40e318:	ldr	x2, [x1, x28, lsl #3]
  40e31c:	cbz	x2, 40e3f0 <wcrtomb@plt+0xbad0>
  40e320:	mov	x0, x20
  40e324:	ldrsw	x4, [x19, #364]
  40e328:	cmp	x4, x28
  40e32c:	ldrb	w4, [x0], #1
  40e330:	ldr	x27, [x2, x4, lsl #3]
  40e334:	b.le	40e458 <wcrtomb@plt+0xbb38>
  40e338:	cmp	x28, x27
  40e33c:	b.ne	40e44c <wcrtomb@plt+0xbb2c>  // b.any
  40e340:	ldrb	w4, [x0]
  40e344:	mov	x5, x20
  40e348:	mov	x20, x0
  40e34c:	add	x0, x0, #0x1
  40e350:	ldr	x27, [x2, x4, lsl #3]
  40e354:	cmp	x28, x27
  40e358:	b.eq	40e340 <wcrtomb@plt+0xba20>  // b.none
  40e35c:	mov	x4, x20
  40e360:	add	x20, x5, #0x2
  40e364:	ldr	x2, [x1, x27, lsl #3]
  40e368:	cbnz	x2, 40e3b4 <wcrtomb@plt+0xba94>
  40e36c:	tbnz	x27, #63, 40e3fc <wcrtomb@plt+0xbadc>
  40e370:	ldr	x0, [x19, #376]
  40e374:	ldrb	w2, [x20]
  40e378:	ldr	x5, [x0, x27, lsl #3]
  40e37c:	cbz	x5, 40e4cc <wcrtomb@plt+0xbbac>
  40e380:	ldr	x0, [x19, #384]
  40e384:	add	x4, x19, w2, sxtw
  40e388:	ldrb	w0, [x0, x27]
  40e38c:	ldrb	w4, [x4, #460]
  40e390:	and	w0, w0, w4
  40e394:	tst	w0, #0xff
  40e398:	b.ne	40e63c <wcrtomb@plt+0xbd1c>  // b.any
  40e39c:	cmp	x21, x20
  40e3a0:	b.eq	40e470 <wcrtomb@plt+0xbb50>  // b.none
  40e3a4:	add	x20, x20, #0x1
  40e3a8:	mov	x28, x27
  40e3ac:	ldr	x0, [x5, x2, lsl #3]
  40e3b0:	b	40e3e0 <wcrtomb@plt+0xbac0>
  40e3b4:	ldrb	w0, [x4, #1]
  40e3b8:	ldr	x0, [x2, x0, lsl #3]
  40e3bc:	cmp	x0, x27
  40e3c0:	b.ne	40e3d8 <wcrtomb@plt+0xbab8>  // b.any
  40e3c4:	nop
  40e3c8:	ldrb	w0, [x20, #1]!
  40e3cc:	ldr	x0, [x2, x0, lsl #3]
  40e3d0:	cmp	x0, x27
  40e3d4:	b.eq	40e3c8 <wcrtomb@plt+0xbaa8>  // b.none
  40e3d8:	add	x20, x20, #0x1
  40e3dc:	mov	x28, x27
  40e3e0:	mov	x4, x28
  40e3e4:	mov	x28, x0
  40e3e8:	ldr	x2, [x1, x28, lsl #3]
  40e3ec:	cbnz	x2, 40e320 <wcrtomb@plt+0xba00>
  40e3f0:	mov	x27, x28
  40e3f4:	mov	x28, x4
  40e3f8:	tbz	x27, #63, 40e370 <wcrtomb@plt+0xba50>
  40e3fc:	cmn	x27, #0x2
  40e400:	b.eq	40e4e4 <wcrtomb@plt+0xbbc4>  // b.none
  40e404:	cmp	x21, x20
  40e408:	b.cc	40e50c <wcrtomb@plt+0xbbec>  // b.lo, b.ul, b.last
  40e40c:	ldurb	w0, [x20, #-1]
  40e410:	cmp	w0, w24
  40e414:	b.ne	40e50c <wcrtomb@plt+0xbbec>  // b.any
  40e418:	ldr	x0, [x19, #392]
  40e41c:	ldr	x0, [x0, x28, lsl #3]
  40e420:	tbnz	x0, #63, 40e50c <wcrtomb@plt+0xbbec>
  40e424:	add	x23, x23, #0x1
  40e428:	cbnz	w26, 40e3e0 <wcrtomb@plt+0xbac0>
  40e42c:	ldrb	w2, [x25, #460]
  40e430:	mov	x0, #0x0                   	// #0
  40e434:	cmp	w2, #0x4
  40e438:	b.eq	40e3e0 <wcrtomb@plt+0xbac0>  // b.none
  40e43c:	cmp	w2, #0x2
  40e440:	b.eq	40e4fc <wcrtomb@plt+0xbbdc>  // b.none
  40e444:	ldr	x0, [x19, #400]
  40e448:	b	40e3e0 <wcrtomb@plt+0xbac0>
  40e44c:	mov	x4, x20
  40e450:	mov	x20, x0
  40e454:	b	40e364 <wcrtomb@plt+0xba44>
  40e458:	ldr	x2, [x1, x27, lsl #3]
  40e45c:	cbz	x2, 40e644 <wcrtomb@plt+0xbd24>
  40e460:	ldrb	w4, [x20, #1]
  40e464:	mov	x20, x0
  40e468:	ldr	x0, [x2, x4, lsl #3]
  40e46c:	b	40e3d8 <wcrtomb@plt+0xbab8>
  40e470:	ldr	x4, [x19, #296]
  40e474:	add	x0, x27, x27, lsl #2
  40e478:	add	x0, x4, x0, lsl #4
  40e47c:	ldrh	w4, [x0, #34]
  40e480:	ldrb	w0, [x0, #32]
  40e484:	and	w0, w0, w4, lsr #6
  40e488:	tst	x0, #0x7
  40e48c:	b.eq	40e3a4 <wcrtomb@plt+0xba84>  // b.none
  40e490:	mov	x0, x21
  40e494:	nop
  40e498:	cbz	x22, 40e4a8 <wcrtomb@plt+0xbb88>
  40e49c:	ldr	x1, [x22]
  40e4a0:	add	x23, x1, x23
  40e4a4:	str	x23, [x22]
  40e4a8:	ldrb	w1, [sp, #108]
  40e4ac:	strb	w1, [x21]
  40e4b0:	ldp	x19, x20, [sp, #16]
  40e4b4:	ldp	x21, x22, [sp, #32]
  40e4b8:	ldp	x23, x24, [sp, #48]
  40e4bc:	ldp	x25, x26, [sp, #64]
  40e4c0:	ldp	x27, x28, [sp, #80]
  40e4c4:	ldp	x29, x30, [sp], #112
  40e4c8:	ret
  40e4cc:	mov	x1, x19
  40e4d0:	mov	x0, x27
  40e4d4:	bl	40bdd8 <wcrtomb@plt+0x94b8>
  40e4d8:	mov	x0, x27
  40e4dc:	ldr	x1, [x19, #368]
  40e4e0:	b	40e3e0 <wcrtomb@plt+0xbac0>
  40e4e4:	ldurb	w2, [x20, #-1]
  40e4e8:	mov	x1, x19
  40e4ec:	mov	x0, x28
  40e4f0:	bl	40bdd8 <wcrtomb@plt+0x94b8>
  40e4f4:	ldr	x1, [x19, #368]
  40e4f8:	b	40e3e0 <wcrtomb@plt+0xbac0>
  40e4fc:	ldr	w0, [x19, #364]
  40e500:	sub	w0, w0, #0x1
  40e504:	sxtw	x0, w0
  40e508:	b	40e3e0 <wcrtomb@plt+0xbac0>
  40e50c:	mov	x0, #0x0                   	// #0
  40e510:	b	40e498 <wcrtomb@plt+0xbb78>
  40e514:	ldr	w23, [x19, #364]
  40e518:	cmp	x0, w23, sxtw
  40e51c:	sxtw	x24, w23
  40e520:	b.le	40e568 <wcrtomb@plt+0xbc48>
  40e524:	mov	w0, #0x50                  	// #80
  40e528:	smull	x23, w23, w0
  40e52c:	nop
  40e530:	ldr	x0, [x19, #296]
  40e534:	add	x24, x24, #0x1
  40e538:	add	x0, x0, x23
  40e53c:	ldr	x0, [x0, #8]
  40e540:	bl	4026b0 <free@plt>
  40e544:	ldr	x0, [x19, #296]
  40e548:	add	x0, x0, x23
  40e54c:	add	x23, x23, #0x50
  40e550:	ldr	x0, [x0, #48]
  40e554:	bl	4026b0 <free@plt>
  40e558:	ldr	x0, [x19, #304]
  40e55c:	cmp	x24, x0
  40e560:	b.lt	40e530 <wcrtomb@plt+0xbc10>  // b.tstop
  40e564:	ldrsw	x24, [x19, #364]
  40e568:	ldr	x1, [x19, #368]
  40e56c:	str	x24, [x19, #304]
  40e570:	ldr	x0, [x19, #352]
  40e574:	cbz	x1, 40e5bc <wcrtomb@plt+0xbc9c>
  40e578:	cmp	x0, #0x0
  40e57c:	b.le	40e5b8 <wcrtomb@plt+0xbc98>
  40e580:	mov	x23, #0x0                   	// #0
  40e584:	nop
  40e588:	ldr	x0, [x1, x23, lsl #3]
  40e58c:	bl	4026b0 <free@plt>
  40e590:	ldr	x0, [x19, #376]
  40e594:	ldr	x0, [x0, x23, lsl #3]
  40e598:	bl	4026b0 <free@plt>
  40e59c:	ldp	x1, x0, [x19, #368]
  40e5a0:	str	xzr, [x0, x23, lsl #3]
  40e5a4:	ldr	x0, [x19, #352]
  40e5a8:	str	xzr, [x1, x23, lsl #3]
  40e5ac:	add	x23, x23, #0x1
  40e5b0:	cmp	x23, x0
  40e5b4:	b.lt	40e588 <wcrtomb@plt+0xbc68>  // b.tstop
  40e5b8:	str	wzr, [x19, #360]
  40e5bc:	ldrb	w1, [x19, #1048]
  40e5c0:	cbz	w1, 40e2f0 <wcrtomb@plt+0xb9d0>
  40e5c4:	ldr	x1, [x19, #432]
  40e5c8:	cbz	x1, 40e2f0 <wcrtomb@plt+0xb9d0>
  40e5cc:	tbnz	x0, #63, 40e5f8 <wcrtomb@plt+0xbcd8>
  40e5d0:	mov	x23, #0xffffffffffffffff    	// #-1
  40e5d4:	nop
  40e5d8:	ldr	x0, [x1, x23, lsl #3]
  40e5dc:	bl	4026b0 <free@plt>
  40e5e0:	ldr	x1, [x19, #432]
  40e5e4:	ldr	x0, [x19, #352]
  40e5e8:	str	xzr, [x1, x23, lsl #3]
  40e5ec:	add	x23, x23, #0x1
  40e5f0:	cmp	x23, x0
  40e5f4:	b.lt	40e5d8 <wcrtomb@plt+0xbcb8>  // b.tstop
  40e5f8:	ldr	w2, [x19, #364]
  40e5fc:	cmp	w2, #0x0
  40e600:	b.le	40e624 <wcrtomb@plt+0xbd04>
  40e604:	ldr	x1, [x19, #296]
  40e608:	mov	w4, #0x50                  	// #80
  40e60c:	mov	x3, #0xffffffffffffffff    	// #-1
  40e610:	add	x1, x1, #0x48
  40e614:	smaddl	x2, w2, w4, x1
  40e618:	str	x3, [x1], #80
  40e61c:	cmp	x2, x1
  40e620:	b.ne	40e618 <wcrtomb@plt+0xbcf8>  // b.any
  40e624:	str	xzr, [x19, #440]
  40e628:	cbnz	x0, 40e2f4 <wcrtomb@plt+0xb9d4>
  40e62c:	nop
  40e630:	mov	x0, x19
  40e634:	bl	40a2f8 <wcrtomb@plt+0x79d8>
  40e638:	b	40e2f4 <wcrtomb@plt+0xb9d4>
  40e63c:	mov	x0, x20
  40e640:	b	40e498 <wcrtomb@plt+0xbb78>
  40e644:	mov	x20, x0
  40e648:	b	40e36c <wcrtomb@plt+0xba4c>
  40e64c:	nop
  40e650:	stp	x29, x30, [sp, #-32]!
  40e654:	mov	x4, #0xffffffffffffffff    	// #-1
  40e658:	mov	w3, #0x1                   	// #1
  40e65c:	mov	x29, sp
  40e660:	str	x19, [sp, #16]
  40e664:	mov	x19, x2
  40e668:	ldrb	w2, [x2, #456]
  40e66c:	stp	x0, x1, [x19, #32]
  40e670:	str	x4, [x19, #48]
  40e674:	strb	w3, [x19, #120]
  40e678:	cbz	w2, 40e718 <wcrtomb@plt+0xbdf8>
  40e67c:	ldr	x0, [x19, #184]
  40e680:	cbz	x0, 40e6e4 <wcrtomb@plt+0xbdc4>
  40e684:	mov	x0, x19
  40e688:	bl	40d108 <wcrtomb@plt+0xa7e8>
  40e68c:	str	x0, [x19, #128]
  40e690:	ldr	x0, [x19, #168]
  40e694:	str	x0, [x19, #136]
  40e698:	mov	x0, x19
  40e69c:	bl	40dd50 <wcrtomb@plt+0xb430>
  40e6a0:	ldr	x0, [x19, #128]
  40e6a4:	cmn	x0, #0x1
  40e6a8:	b.ne	40e730 <wcrtomb@plt+0xbe10>  // b.any
  40e6ac:	ldr	x1, [x19, #184]
  40e6b0:	mov	x0, x19
  40e6b4:	mvn	x1, x1
  40e6b8:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40e6bc:	mov	x0, x19
  40e6c0:	mov	x1, #0x105                 	// #261
  40e6c4:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40e6c8:	ldr	x0, [x19, #184]
  40e6cc:	cbnz	x0, 40e6f4 <wcrtomb@plt+0xbdd4>
  40e6d0:	add	x0, x0, #0x1
  40e6d4:	str	x0, [x19, #184]
  40e6d8:	ldr	x19, [sp, #16]
  40e6dc:	ldp	x29, x30, [sp], #32
  40e6e0:	ret
  40e6e4:	mov	x0, x19
  40e6e8:	mov	x1, #0x10b                 	// #267
  40e6ec:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40e6f0:	b	40e684 <wcrtomb@plt+0xbd64>
  40e6f4:	mov	x0, x19
  40e6f8:	mov	x1, #0x106                 	// #262
  40e6fc:	bl	40a5a0 <wcrtomb@plt+0x7c80>
  40e700:	ldr	x0, [x19, #184]
  40e704:	add	x0, x0, #0x1
  40e708:	str	x0, [x19, #184]
  40e70c:	ldr	x19, [sp, #16]
  40e710:	ldp	x29, x30, [sp], #32
  40e714:	ret
  40e718:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40e71c:	add	x1, x1, #0x4b8
  40e720:	mov	w2, #0x5                   	// #5
  40e724:	mov	x0, #0x0                   	// #0
  40e728:	bl	4027f0 <dcgettext@plt>
  40e72c:	bl	404118 <wcrtomb@plt+0x17f8>
  40e730:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40e734:	add	x1, x1, #0x4d0
  40e738:	mov	w2, #0x5                   	// #5
  40e73c:	mov	x0, #0x0                   	// #0
  40e740:	bl	4027f0 <dcgettext@plt>
  40e744:	bl	404118 <wcrtomb@plt+0x17f8>
  40e748:	ldr	x6, [x0, #1040]
  40e74c:	mov	x16, x6
  40e750:	br	x16
  40e754:	nop
  40e758:	ldr	x0, [x0, #288]
  40e75c:	ret
  40e760:	ldrb	w0, [x0, #192]
  40e764:	ret
  40e768:	stp	x29, x30, [sp, #-48]!
  40e76c:	mov	x29, sp
  40e770:	stp	x19, x20, [sp, #16]
  40e774:	mov	x19, x0
  40e778:	ldr	x0, [x0]
  40e77c:	str	x21, [sp, #32]
  40e780:	bl	4026b0 <free@plt>
  40e784:	ldr	x0, [x19, #144]
  40e788:	bl	4026b0 <free@plt>
  40e78c:	ldrb	w0, [x19, #1048]
  40e790:	cbnz	w0, 40e8c8 <wcrtomb@plt+0xbfa8>
  40e794:	ldr	x0, [x19, #336]
  40e798:	mov	x20, #0x0                   	// #0
  40e79c:	mov	x21, #0x0                   	// #0
  40e7a0:	bl	4026b0 <free@plt>
  40e7a4:	ldr	x0, [x19, #344]
  40e7a8:	bl	4026b0 <free@plt>
  40e7ac:	ldr	x0, [x19, #304]
  40e7b0:	cmp	x0, #0x0
  40e7b4:	b.le	40e7ec <wcrtomb@plt+0xbecc>
  40e7b8:	ldr	x0, [x19, #296]
  40e7bc:	add	x21, x21, #0x1
  40e7c0:	add	x0, x0, x20
  40e7c4:	ldr	x0, [x0, #8]
  40e7c8:	bl	4026b0 <free@plt>
  40e7cc:	ldr	x0, [x19, #296]
  40e7d0:	add	x0, x0, x20
  40e7d4:	add	x20, x20, #0x50
  40e7d8:	ldr	x0, [x0, #48]
  40e7dc:	bl	4026b0 <free@plt>
  40e7e0:	ldr	x0, [x19, #304]
  40e7e4:	cmp	x0, x21
  40e7e8:	b.gt	40e7b8 <wcrtomb@plt+0xbe98>
  40e7ec:	ldr	x0, [x19, #296]
  40e7f0:	bl	4026b0 <free@plt>
  40e7f4:	ldr	x0, [x19, #320]
  40e7f8:	cbz	x0, 40e834 <wcrtomb@plt+0xbf14>
  40e7fc:	ldr	x1, [x19, #152]
  40e800:	cmp	x1, #0x0
  40e804:	b.le	40e830 <wcrtomb@plt+0xbf10>
  40e808:	mov	x21, #0x0                   	// #0
  40e80c:	mov	x20, #0x0                   	// #0
  40e810:	ldr	x0, [x0, x21]
  40e814:	add	x20, x20, #0x1
  40e818:	add	x21, x21, #0x18
  40e81c:	bl	4026b0 <free@plt>
  40e820:	ldr	x0, [x19, #152]
  40e824:	cmp	x0, x20
  40e828:	ldr	x0, [x19, #320]
  40e82c:	b.gt	40e810 <wcrtomb@plt+0xbef0>
  40e830:	bl	4026b0 <free@plt>
  40e834:	ldr	x0, [x19, #368]
  40e838:	cbz	x0, 40e898 <wcrtomb@plt+0xbf78>
  40e83c:	ldr	x1, [x19, #352]
  40e840:	cmp	x1, #0x0
  40e844:	b.le	40e878 <wcrtomb@plt+0xbf58>
  40e848:	mov	x20, #0x0                   	// #0
  40e84c:	nop
  40e850:	ldr	x0, [x0, x20, lsl #3]
  40e854:	bl	4026b0 <free@plt>
  40e858:	ldr	x0, [x19, #376]
  40e85c:	ldr	x0, [x0, x20, lsl #3]
  40e860:	add	x20, x20, #0x1
  40e864:	bl	4026b0 <free@plt>
  40e868:	ldr	x0, [x19, #352]
  40e86c:	cmp	x0, x20
  40e870:	ldr	x0, [x19, #368]
  40e874:	b.gt	40e850 <wcrtomb@plt+0xbf30>
  40e878:	sub	x0, x0, #0x10
  40e87c:	bl	4026b0 <free@plt>
  40e880:	ldr	x0, [x19, #376]
  40e884:	bl	4026b0 <free@plt>
  40e888:	ldr	x0, [x19, #392]
  40e88c:	bl	4026b0 <free@plt>
  40e890:	ldr	x0, [x19, #384]
  40e894:	bl	4026b0 <free@plt>
  40e898:	ldr	x0, [x19, #288]
  40e89c:	cbz	x0, 40e8b8 <wcrtomb@plt+0xbf98>
  40e8a0:	bl	40e768 <wcrtomb@plt+0xbe48>
  40e8a4:	ldr	x21, [sp, #32]
  40e8a8:	ldr	x0, [x19, #288]
  40e8ac:	ldp	x19, x20, [sp, #16]
  40e8b0:	ldp	x29, x30, [sp], #48
  40e8b4:	b	4026b0 <free@plt>
  40e8b8:	ldp	x19, x20, [sp, #16]
  40e8bc:	ldr	x21, [sp, #32]
  40e8c0:	ldp	x29, x30, [sp], #48
  40e8c4:	ret
  40e8c8:	mov	x0, x19
  40e8cc:	bl	40af88 <wcrtomb@plt+0x8668>
  40e8d0:	b	40e794 <wcrtomb@plt+0xbe74>
  40e8d4:	nop
  40e8d8:	stp	x29, x30, [sp, #-144]!
  40e8dc:	and	w3, w3, #0xff
  40e8e0:	mov	x29, sp
  40e8e4:	stp	x19, x20, [sp, #16]
  40e8e8:	mov	x20, x2
  40e8ec:	stp	x21, x22, [sp, #32]
  40e8f0:	stp	x23, x24, [sp, #48]
  40e8f4:	str	w3, [sp, #100]
  40e8f8:	cbz	x0, 40e900 <wcrtomb@plt+0xbfe0>
  40e8fc:	bl	40e650 <wcrtomb@plt+0xbd30>
  40e900:	mov	x0, #0x920                 	// #2336
  40e904:	bl	414080 <wcrtomb@plt+0x11760>
  40e908:	mov	x19, x0
  40e90c:	mov	x1, x20
  40e910:	mov	x2, #0x920                 	// #2336
  40e914:	bl	4022a0 <memcpy@plt>
  40e918:	adrp	x23, 40e000 <wcrtomb@plt+0xb6e0>
  40e91c:	add	x0, x23, #0x2b0
  40e920:	ldr	x1, [x19, #16]
  40e924:	mov	x3, x0
  40e928:	str	x3, [sp, #104]
  40e92c:	stp	xzr, xzr, [x19, #280]
  40e930:	cmp	xzr, x1, lsr #59
  40e934:	stp	xzr, xzr, [x19, #296]
  40e938:	cset	x2, ne  // ne = any
  40e93c:	lsl	x0, x1, #5
  40e940:	str	xzr, [x19, #320]
  40e944:	stp	xzr, xzr, [x19, #336]
  40e948:	str	xzr, [x19, #352]
  40e94c:	stp	xzr, xzr, [x19, #368]
  40e950:	stp	xzr, xzr, [x19, #384]
  40e954:	str	x3, [x19, #1040]
  40e958:	strb	wzr, [x19, #1048]
  40e95c:	tbnz	x1, #58, 40ec28 <wcrtomb@plt+0xc308>
  40e960:	cbnz	x2, 40ec28 <wcrtomb@plt+0xc308>
  40e964:	bl	414080 <wcrtomb@plt+0x11760>
  40e968:	str	x0, [x19]
  40e96c:	ldr	x2, [x20, #8]
  40e970:	cbnz	x2, 40ebec <wcrtomb@plt+0xc2cc>
  40e974:	ldr	x0, [x20, #152]
  40e978:	cmp	xzr, x0, lsr #60
  40e97c:	lsl	x0, x0, #4
  40e980:	cset	x22, ne  // ne = any
  40e984:	cmp	x0, #0x0
  40e988:	csinc	x22, x22, xzr, ge  // ge = tcont
  40e98c:	cbnz	x22, 40ec28 <wcrtomb@plt+0xc308>
  40e990:	bl	414080 <wcrtomb@plt+0x11760>
  40e994:	str	x0, [x19, #144]
  40e998:	ldr	x0, [x20, #152]
  40e99c:	cmp	x0, #0x0
  40e9a0:	lsl	x0, x0, #1
  40e9a4:	str	x0, [x19, #160]
  40e9a8:	b.le	40ebfc <wcrtomb@plt+0xc2dc>
  40e9ac:	mov	x24, #0x0                   	// #0
  40e9b0:	mov	x21, #0x0                   	// #0
  40e9b4:	mov	w8, #0x0                   	// #0
  40e9b8:	mov	x23, #0xffffffffffffffff    	// #-1
  40e9bc:	stp	x25, x26, [sp, #64]
  40e9c0:	mov	w26, #0x0                   	// #0
  40e9c4:	stp	x27, x28, [sp, #80]
  40e9c8:	ldr	x7, [x20, #144]
  40e9cc:	b	40ea08 <wcrtomb@plt+0xc0e8>
  40e9d0:	cmp	x0, #0xff
  40e9d4:	cset	w1, ls  // ls = plast
  40e9d8:	cmp	x0, #0x113
  40e9dc:	cset	w4, gt
  40e9e0:	ldr	x3, [x19, #144]
  40e9e4:	orr	w1, w1, w4
  40e9e8:	cmp	w1, #0x0
  40e9ec:	csel	w26, w26, w1, eq  // eq = none
  40e9f0:	str	x0, [x3, x28]
  40e9f4:	ldr	x1, [x20, #152]
  40e9f8:	cmp	x1, x27
  40e9fc:	b.le	40ea90 <wcrtomb@plt+0xc170>
  40ea00:	mov	x24, x5
  40ea04:	mov	x21, x27
  40ea08:	ldr	x0, [x7, x21, lsl #3]
  40ea0c:	lsl	x25, x21, #3
  40ea10:	add	x5, x24, #0x1
  40ea14:	lsl	x28, x24, #3
  40ea18:	cmp	x0, #0x111
  40ea1c:	add	x27, x21, #0x1
  40ea20:	b.gt	40eb64 <wcrtomb@plt+0xc244>
  40ea24:	cmp	x0, #0x10d
  40ea28:	b.gt	40eb48 <wcrtomb@plt+0xc228>
  40ea2c:	cmp	x0, #0x10a
  40ea30:	b.ne	40e9d0 <wcrtomb@plt+0xc0b0>  // b.any
  40ea34:	add	x1, sp, #0x70
  40ea38:	mov	x0, x19
  40ea3c:	stp	x23, x23, [sp, #112]
  40ea40:	add	x21, x21, #0x2
  40ea44:	stp	x23, x23, [sp, #128]
  40ea48:	bl	40c940 <wcrtomb@plt+0xa020>
  40ea4c:	add	x0, x0, #0x114
  40ea50:	ldr	x1, [x19, #144]
  40ea54:	add	x5, x24, #0x2
  40ea58:	ldr	x7, [x20, #144]
  40ea5c:	add	x9, x1, x28
  40ea60:	str	x0, [x1, x28]
  40ea64:	mov	x0, #0x102                 	// #258
  40ea68:	add	x4, x7, x25
  40ea6c:	mov	w8, #0x1                   	// #1
  40ea70:	str	x0, [x9, #8]
  40ea74:	ldr	x0, [x4, #8]
  40ea78:	ldr	x1, [x20, #152]
  40ea7c:	sub	x0, x0, #0x101
  40ea80:	cmp	x0, #0x3
  40ea84:	csel	x27, x21, x27, cc  // cc = lo, ul, last
  40ea88:	cmp	x1, x27
  40ea8c:	b.gt	40ea00 <wcrtomb@plt+0xc0e0>
  40ea90:	str	x5, [x19, #152]
  40ea94:	cbz	w26, 40ebcc <wcrtomb@plt+0xc2ac>
  40ea98:	cbz	w8, 40ebc4 <wcrtomb@plt+0xc2a4>
  40ea9c:	ldp	x25, x26, [sp, #64]
  40eaa0:	ldp	x27, x28, [sp, #80]
  40eaa4:	str	x19, [x20, #288]
  40eaa8:	cmp	x1, #0x0
  40eaac:	b.le	40ec04 <wcrtomb@plt+0xc2e4>
  40eab0:	ldr	x3, [x20, #144]
  40eab4:	mov	x2, #0x0                   	// #0
  40eab8:	ldr	x0, [x3, x2, lsl #3]
  40eabc:	cmp	x0, #0x111
  40eac0:	b.gt	40eb74 <wcrtomb@plt+0xc254>
  40eac4:	cmp	x0, #0x10d
  40eac8:	b.gt	40ebb8 <wcrtomb@plt+0xc298>
  40eacc:	add	x2, x2, #0x1
  40ead0:	cmp	x2, x1
  40ead4:	b.ne	40eab8 <wcrtomb@plt+0xc198>  // b.any
  40ead8:	ldrb	w4, [x20, #1050]
  40eadc:	mov	w2, #0x0                   	// #0
  40eae0:	cbz	w4, 40eb38 <wcrtomb@plt+0xc218>
  40eae4:	nop
  40eae8:	ldr	x0, [x3, x22, lsl #3]
  40eaec:	cmp	x0, #0x113
  40eaf0:	b.eq	40eb38 <wcrtomb@plt+0xc218>  // b.none
  40eaf4:	b.gt	40eb08 <wcrtomb@plt+0xc1e8>
  40eaf8:	cmp	x0, #0x10a
  40eafc:	b.eq	40ec34 <wcrtomb@plt+0xc314>  // b.none
  40eb00:	cmp	x0, #0x112
  40eb04:	csel	w2, w2, w4, ne  // ne = any
  40eb08:	add	x22, x22, #0x1
  40eb0c:	cmp	x22, x1
  40eb10:	b.ne	40eae8 <wcrtomb@plt+0xc1c8>  // b.any
  40eb14:	cbz	w2, 40ec0c <wcrtomb@plt+0xc2ec>
  40eb18:	mov	x0, x20
  40eb1c:	bl	40af88 <wcrtomb@plt+0x8668>
  40eb20:	mov	w0, #0x1                   	// #1
  40eb24:	strb	w0, [x20, #192]
  40eb28:	ldr	x0, [sp, #104]
  40eb2c:	str	x0, [x20, #1040]
  40eb30:	strb	wzr, [x20, #1048]
  40eb34:	nop
  40eb38:	ldrb	w1, [sp, #100]
  40eb3c:	mov	x0, x20
  40eb40:	bl	40b198 <wcrtomb@plt+0x8878>
  40eb44:	b	40eb8c <wcrtomb@plt+0xc26c>
  40eb48:	ldr	x1, [x19, #144]
  40eb4c:	mov	x2, #0x100                 	// #256
  40eb50:	ldrb	w3, [x20, #1048]
  40eb54:	cmp	w3, #0x0
  40eb58:	csel	x0, x2, x0, ne  // ne = any
  40eb5c:	str	x0, [x1, x28]
  40eb60:	b	40e9f4 <wcrtomb@plt+0xc0d4>
  40eb64:	sub	x1, x0, #0x112
  40eb68:	cmp	x1, #0x1
  40eb6c:	b.hi	40e9d0 <wcrtomb@plt+0xc0b0>  // b.pmore
  40eb70:	b	40ea34 <wcrtomb@plt+0xc114>
  40eb74:	sub	x0, x0, #0x112
  40eb78:	cmp	x0, #0x1
  40eb7c:	b.hi	40eacc <wcrtomb@plt+0xc1ac>  // b.pmore
  40eb80:	adrp	x0, 40a000 <wcrtomb@plt+0x76e0>
  40eb84:	add	x0, x0, #0x8
  40eb88:	str	x0, [x20, #1040]
  40eb8c:	ldr	x0, [x20, #288]
  40eb90:	cbz	x0, 40eba4 <wcrtomb@plt+0xc284>
  40eb94:	mov	w1, #0x1                   	// #1
  40eb98:	strb	w1, [x20, #192]
  40eb9c:	ldrb	w1, [sp, #100]
  40eba0:	bl	40b198 <wcrtomb@plt+0x8878>
  40eba4:	ldp	x19, x20, [sp, #16]
  40eba8:	ldp	x21, x22, [sp, #32]
  40ebac:	ldp	x23, x24, [sp, #48]
  40ebb0:	ldp	x29, x30, [sp], #144
  40ebb4:	ret
  40ebb8:	ldrb	w0, [x20, #1048]
  40ebbc:	cbnz	w0, 40eb80 <wcrtomb@plt+0xc260>
  40ebc0:	b	40eacc <wcrtomb@plt+0xc1ac>
  40ebc4:	ldrb	w0, [x20, #1048]
  40ebc8:	cbnz	w0, 40ea9c <wcrtomb@plt+0xc17c>
  40ebcc:	ldp	x25, x26, [sp, #64]
  40ebd0:	ldp	x27, x28, [sp, #80]
  40ebd4:	mov	x0, x19
  40ebd8:	bl	40e768 <wcrtomb@plt+0xbe48>
  40ebdc:	mov	x0, x19
  40ebe0:	bl	4026b0 <free@plt>
  40ebe4:	ldr	x1, [x20, #152]
  40ebe8:	b	40eaa8 <wcrtomb@plt+0xc188>
  40ebec:	ldr	x1, [x20]
  40ebf0:	lsl	x2, x2, #5
  40ebf4:	bl	4022a0 <memcpy@plt>
  40ebf8:	b	40e974 <wcrtomb@plt+0xc054>
  40ebfc:	str	xzr, [x19, #152]
  40ec00:	b	40ebd4 <wcrtomb@plt+0xc2b4>
  40ec04:	ldrb	w0, [x20, #1050]
  40ec08:	cbz	w0, 40eb38 <wcrtomb@plt+0xc218>
  40ec0c:	ldr	x0, [x20, #288]
  40ec10:	cbz	x0, 40eb18 <wcrtomb@plt+0xc1f8>
  40ec14:	bl	40e768 <wcrtomb@plt+0xbe48>
  40ec18:	ldr	x0, [x20, #288]
  40ec1c:	bl	4026b0 <free@plt>
  40ec20:	str	xzr, [x20, #288]
  40ec24:	b	40eb18 <wcrtomb@plt+0xc1f8>
  40ec28:	stp	x25, x26, [sp, #64]
  40ec2c:	stp	x27, x28, [sp, #80]
  40ec30:	bl	4142c0 <wcrtomb@plt+0x119a0>
  40ec34:	stp	x25, x26, [sp, #64]
  40ec38:	stp	x27, x28, [sp, #80]
  40ec3c:	bl	4025f0 <abort@plt>
  40ec40:	stp	x29, x30, [sp, #-144]!
  40ec44:	mov	x29, sp
  40ec48:	stp	x25, x26, [sp, #64]
  40ec4c:	mov	x25, x0
  40ec50:	ldrb	w26, [x0, #1048]
  40ec54:	stp	x21, x22, [sp, #32]
  40ec58:	eor	w26, w26, #0x1
  40ec5c:	ldr	x22, [x0, #152]
  40ec60:	stp	x19, x20, [sp, #16]
  40ec64:	ldrb	w0, [x0, #457]
  40ec68:	cmp	x22, #0x2
  40ec6c:	and	w26, w26, w0
  40ec70:	and	w0, w26, #0xff
  40ec74:	str	w0, [sp, #124]
  40ec78:	b.le	40f59c <wcrtomb@plt+0xcc7c>
  40ec7c:	stp	x23, x24, [sp, #48]
  40ec80:	mov	x23, #0x1                   	// #1
  40ec84:	mov	x19, #0x0                   	// #0
  40ec88:	ldr	x24, [x25, #144]
  40ec8c:	stp	x27, x28, [sp, #80]
  40ec90:	lsl	x28, x23, #3
  40ec94:	stp	wzr, wzr, [sp, #136]
  40ec98:	ldr	x20, [x24, x23, lsl #3]
  40ec9c:	cmp	x20, #0x105
  40eca0:	b.eq	40ed24 <wcrtomb@plt+0xc404>  // b.none
  40eca4:	b.gt	40ee40 <wcrtomb@plt+0xc520>
  40eca8:	cmp	x20, #0x100
  40ecac:	b.eq	40f12c <wcrtomb@plt+0xc80c>  // b.none
  40ecb0:	b.le	40edfc <wcrtomb@plt+0xc4dc>
  40ecb4:	cmp	x20, #0x102
  40ecb8:	b.gt	40edd4 <wcrtomb@plt+0xc4b4>
  40ecbc:	ldr	x20, [x19]
  40ecc0:	ldr	x0, [x20]
  40ecc4:	cbz	x0, 40ecd8 <wcrtomb@plt+0xc3b8>
  40ecc8:	bl	4026b0 <free@plt>
  40eccc:	ldr	x0, [x20, #8]!
  40ecd0:	cbnz	x0, 40ecc8 <wcrtomb@plt+0xc3a8>
  40ecd4:	ldr	x20, [x19]
  40ecd8:	str	xzr, [x20]
  40ecdc:	add	x20, x23, #0x2
  40ece0:	add	x23, x23, #0x1
  40ece4:	ldr	x0, [x19, #24]
  40ece8:	strb	wzr, [x0]
  40ecec:	ldr	x0, [x19, #16]
  40ecf0:	strb	wzr, [x0]
  40ecf4:	ldr	x0, [x19, #8]
  40ecf8:	strb	wzr, [x0]
  40ecfc:	strh	wzr, [x19, #32]
  40ed00:	ldr	x22, [x25, #152]
  40ed04:	cmp	x22, x20
  40ed08:	b.le	40ee08 <wcrtomb@plt+0xc4e8>
  40ed0c:	nop
  40ed10:	ldr	x24, [x25, #144]
  40ed14:	lsl	x28, x23, #3
  40ed18:	ldr	x20, [x24, x23, lsl #3]
  40ed1c:	cmp	x20, #0x105
  40ed20:	b.ne	40eca4 <wcrtomb@plt+0xc384>  // b.any
  40ed24:	ldr	x21, [x19, #40]
  40ed28:	ldr	x1, [x19]
  40ed2c:	ldr	x0, [x21]
  40ed30:	bl	40a948 <wcrtomb@plt+0x8028>
  40ed34:	str	x0, [x21]
  40ed38:	ldr	x1, [x21, #16]
  40ed3c:	ldrb	w0, [x1]
  40ed40:	cbz	w0, 40ed50 <wcrtomb@plt+0xc430>
  40ed44:	ldr	x20, [x19, #8]
  40ed48:	ldrb	w0, [x20]
  40ed4c:	cbnz	w0, 40f4c0 <wcrtomb@plt+0xcba0>
  40ed50:	ldr	x0, [x21, #24]
  40ed54:	ldrb	w0, [x0]
  40ed58:	cbnz	w0, 40f524 <wcrtomb@plt+0xcc04>
  40ed5c:	ldr	x1, [x19, #24]
  40ed60:	ldr	x0, [x21, #16]
  40ed64:	ldrb	w1, [x1]
  40ed68:	cbnz	w1, 40ed74 <wcrtomb@plt+0xc454>
  40ed6c:	strb	wzr, [x0]
  40ed70:	ldr	x0, [x21, #16]
  40ed74:	ldr	x1, [x19, #16]
  40ed78:	bl	40a680 <wcrtomb@plt+0x7d60>
  40ed7c:	str	x0, [x21, #16]
  40ed80:	ldr	x2, [x21, #24]
  40ed84:	ldrb	w0, [x2]
  40ed88:	cbnz	w0, 40ed94 <wcrtomb@plt+0xc474>
  40ed8c:	ldrb	w0, [x21, #32]
  40ed90:	cbz	w0, 40eda8 <wcrtomb@plt+0xc488>
  40ed94:	ldr	x1, [x19, #24]
  40ed98:	ldrb	w0, [x1]
  40ed9c:	cbnz	w0, 40f350 <wcrtomb@plt+0xca30>
  40eda0:	ldrb	w0, [x19, #33]
  40eda4:	cbnz	w0, 40f350 <wcrtomb@plt+0xca30>
  40eda8:	strb	wzr, [x2]
  40edac:	strh	wzr, [x21, #32]
  40edb0:	mov	x0, x19
  40edb4:	bl	40a6f0 <wcrtomb@plt+0x7dd0>
  40edb8:	ldr	x22, [x25, #152]
  40edbc:	add	x20, x23, #0x2
  40edc0:	mov	x19, x21
  40edc4:	add	x23, x23, #0x1
  40edc8:	cmp	x22, x20
  40edcc:	b.gt	40ed10 <wcrtomb@plt+0xc3f0>
  40edd0:	b	40ee08 <wcrtomb@plt+0xc4e8>
  40edd4:	cmp	x20, #0x103
  40edd8:	b.ne	40f230 <wcrtomb@plt+0xc910>  // b.any
  40eddc:	ldr	x0, [x19, #24]
  40ede0:	add	x20, x23, #0x2
  40ede4:	add	x23, x23, #0x1
  40ede8:	strb	wzr, [x0]
  40edec:	ldr	x22, [x25, #152]
  40edf0:	cmp	x22, x20
  40edf4:	b.gt	40ed10 <wcrtomb@plt+0xc3f0>
  40edf8:	b	40ee08 <wcrtomb@plt+0xc4e8>
  40edfc:	cmn	x20, #0x1
  40ee00:	b.eq	40f368 <wcrtomb@plt+0xca48>  // b.none
  40ee04:	cbnz	x20, 40f234 <wcrtomb@plt+0xc914>
  40ee08:	mov	x20, #0x0                   	// #0
  40ee0c:	cbz	x19, 40ee20 <wcrtomb@plt+0xc500>
  40ee10:	mov	x0, x19
  40ee14:	ldr	x19, [x19, #40]
  40ee18:	bl	40a6f0 <wcrtomb@plt+0x7dd0>
  40ee1c:	cbnz	x19, 40ee10 <wcrtomb@plt+0xc4f0>
  40ee20:	ldp	x23, x24, [sp, #48]
  40ee24:	ldp	x27, x28, [sp, #80]
  40ee28:	mov	x0, x20
  40ee2c:	ldp	x19, x20, [sp, #16]
  40ee30:	ldp	x21, x22, [sp, #32]
  40ee34:	ldp	x25, x26, [sp, #64]
  40ee38:	ldp	x29, x30, [sp], #144
  40ee3c:	ret
  40ee40:	cmp	x20, #0x10c
  40ee44:	b.eq	40f450 <wcrtomb@plt+0xcb30>  // b.none
  40ee48:	b.le	40ee8c <wcrtomb@plt+0xc56c>
  40ee4c:	cmp	x20, #0x10d
  40ee50:	b.ne	40f050 <wcrtomb@plt+0xc730>  // b.any
  40ee54:	mov	x0, x19
  40ee58:	mov	x1, #0x2                   	// #2
  40ee5c:	bl	40a798 <wcrtomb@plt+0x7e78>
  40ee60:	mov	x19, x0
  40ee64:	ldr	x22, [x25, #152]
  40ee68:	mov	w0, #0x1                   	// #1
  40ee6c:	mov	w1, #0x1                   	// #1
  40ee70:	strb	w0, [x19, #33]
  40ee74:	str	w1, [sp, #140]
  40ee78:	add	x20, x23, #0x2
  40ee7c:	cmp	x22, x20
  40ee80:	add	x23, x23, #0x1
  40ee84:	b.gt	40ed10 <wcrtomb@plt+0xc3f0>
  40ee88:	b	40ee08 <wcrtomb@plt+0xc4e8>
  40ee8c:	cmp	x20, #0x106
  40ee90:	b.ne	40f11c <wcrtomb@plt+0xc7fc>  // b.any
  40ee94:	ldr	x21, [x19, #40]
  40ee98:	str	x21, [sp, #112]
  40ee9c:	ldr	x1, [x19, #24]
  40eea0:	ldr	x20, [x21, #24]
  40eea4:	mov	x0, x20
  40eea8:	bl	402690 <strcmp@plt>
  40eeac:	cbz	w0, 40f154 <wcrtomb@plt+0xc834>
  40eeb0:	ldr	x0, [sp, #112]
  40eeb4:	strb	wzr, [x20]
  40eeb8:	strh	wzr, [x0, #32]
  40eebc:	ldr	x0, [sp, #112]
  40eec0:	ldr	x2, [x0, #8]
  40eec4:	ldrb	w0, [x2]
  40eec8:	cbz	w0, 40eeec <wcrtomb@plt+0xc5cc>
  40eecc:	ldr	x1, [x19, #8]
  40eed0:	b	40eee0 <wcrtomb@plt+0xc5c0>
  40eed4:	ldrb	w0, [x2, #1]!
  40eed8:	add	x1, x1, #0x1
  40eedc:	cbz	w0, 40eeec <wcrtomb@plt+0xc5cc>
  40eee0:	ldrb	w3, [x1]
  40eee4:	cmp	w3, w0
  40eee8:	b.eq	40eed4 <wcrtomb@plt+0xc5b4>  // b.none
  40eeec:	ldr	x0, [sp, #112]
  40eef0:	strb	wzr, [x2]
  40eef4:	ldr	x20, [x0, #16]
  40eef8:	mov	x0, x20
  40eefc:	bl	402300 <strlen@plt>
  40ef00:	ldr	x21, [x19, #16]
  40ef04:	mov	x22, x0
  40ef08:	mov	x0, x21
  40ef0c:	bl	402300 <strlen@plt>
  40ef10:	cmp	x0, x22
  40ef14:	csel	x6, x0, x22, le
  40ef18:	cbz	x6, 40ef90 <wcrtomb@plt+0xc670>
  40ef1c:	sub	x5, x0, x22
  40ef20:	mov	x1, x22
  40ef24:	sub	x5, x5, #0x1
  40ef28:	sub	x7, x20, #0x1
  40ef2c:	add	x5, x21, x5
  40ef30:	mov	x2, #0x0                   	// #0
  40ef34:	b	40ef48 <wcrtomb@plt+0xc628>
  40ef38:	add	x2, x2, #0x1
  40ef3c:	sub	x1, x1, #0x1
  40ef40:	cmp	x6, x2
  40ef44:	b.eq	40f488 <wcrtomb@plt+0xcb68>  // b.none
  40ef48:	ldrb	w4, [x7, x1]
  40ef4c:	ldrb	w3, [x5, x1]
  40ef50:	cmp	w4, w3
  40ef54:	b.eq	40ef38 <wcrtomb@plt+0xc618>  // b.none
  40ef58:	cbz	x2, 40ef90 <wcrtomb@plt+0xc670>
  40ef5c:	mov	x0, #0x0                   	// #0
  40ef60:	b	40ef6c <wcrtomb@plt+0xc64c>
  40ef64:	ldr	x3, [sp, #112]
  40ef68:	ldr	x20, [x3, #16]
  40ef6c:	add	x3, x20, x1
  40ef70:	ldrb	w3, [x3, x0]
  40ef74:	strb	w3, [x20, x0]
  40ef78:	add	x0, x0, #0x1
  40ef7c:	cmp	x2, x0
  40ef80:	b.gt	40ef64 <wcrtomb@plt+0xc644>
  40ef84:	ldr	x0, [sp, #112]
  40ef88:	ldr	x20, [x0, #16]
  40ef8c:	add	x20, x20, x2
  40ef90:	ldr	x1, [sp, #112]
  40ef94:	strb	wzr, [x20]
  40ef98:	mov	x0, #0x8                   	// #8
  40ef9c:	ldr	x24, [x1]
  40efa0:	ldr	x1, [x19]
  40efa4:	str	x1, [sp, #128]
  40efa8:	bl	414250 <wcrtomb@plt+0x11930>
  40efac:	mov	x20, x0
  40efb0:	ldr	x1, [x24]
  40efb4:	cbz	x1, 40f1d8 <wcrtomb@plt+0xc8b8>
  40efb8:	ldr	x22, [sp, #128]
  40efbc:	ldr	x21, [x22], #8
  40efc0:	cbz	x21, 40f1d0 <wcrtomb@plt+0xc8b0>
  40efc4:	nop
  40efc8:	ldr	x27, [x24]
  40efcc:	mov	x0, #0x8                   	// #8
  40efd0:	bl	414250 <wcrtomb@plt+0x11930>
  40efd4:	mov	x28, x0
  40efd8:	ldrb	w26, [x27]
  40efdc:	cbz	w26, 40f194 <wcrtomb@plt+0xc874>
  40efe0:	mov	w1, w26
  40efe4:	mov	x0, x21
  40efe8:	bl	4026e0 <strchr@plt>
  40efec:	mov	w1, w26
  40eff0:	mov	x2, #0x0                   	// #0
  40eff4:	ldrb	w26, [x27, #1]
  40eff8:	cbnz	x0, 40f028 <wcrtomb@plt+0xc708>
  40effc:	b	40f18c <wcrtomb@plt+0xc86c>
  40f000:	cmp	x2, x6
  40f004:	add	x0, x0, #0x1
  40f008:	csel	x2, x2, x6, ge  // ge = tcont
  40f00c:	str	x2, [sp, #96]
  40f010:	str	w1, [sp, #96]
  40f014:	str	x2, [sp, #104]
  40f018:	bl	4026e0 <strchr@plt>
  40f01c:	ldr	w1, [sp, #96]
  40f020:	ldr	x2, [sp, #104]
  40f024:	cbz	x0, 40f178 <wcrtomb@plt+0xc858>
  40f028:	mov	w7, w26
  40f02c:	mov	x6, #0x1                   	// #1
  40f030:	cbz	w26, 40f000 <wcrtomb@plt+0xc6e0>
  40f034:	ldrb	w8, [x0, x6]
  40f038:	cmp	w8, w7
  40f03c:	b.ne	40f000 <wcrtomb@plt+0xc6e0>  // b.any
  40f040:	add	x6, x6, #0x1
  40f044:	ldrb	w7, [x27, x6]
  40f048:	cbnz	w7, 40f034 <wcrtomb@plt+0xc714>
  40f04c:	b	40f000 <wcrtomb@plt+0xc6e0>
  40f050:	sub	x0, x20, #0x10e
  40f054:	cmp	x0, #0x5
  40f058:	b.ls	40f12c <wcrtomb@plt+0xc80c>  // b.plast
  40f05c:	cmp	x20, #0x113
  40f060:	b.le	40f234 <wcrtomb@plt+0xc914>
  40f064:	ldr	x3, [x25]
  40f068:	mov	x0, #0xffffffffffffdd80    	// #-8832
  40f06c:	add	x20, x0, x20, lsl #5
  40f070:	mov	w21, #0x0                   	// #0
  40f074:	add	x3, x3, x20
  40f078:	b	40f084 <wcrtomb@plt+0xc764>
  40f07c:	cmp	w21, #0x100
  40f080:	b.eq	40f12c <wcrtomb@plt+0xc80c>  // b.none
  40f084:	mov	w1, w21
  40f088:	mov	w27, w21
  40f08c:	add	w21, w21, #0x1
  40f090:	lsr	w0, w1, #6
  40f094:	ldr	x0, [x3, x0, lsl #3]
  40f098:	lsr	x0, x0, x1
  40f09c:	tbz	w0, #0, 40f07c <wcrtomb@plt+0xc75c>
  40f0a0:	sxtw	x20, w1
  40f0a4:	sbfiz	x26, x1, #2, #32
  40f0a8:	cmp	w21, #0x100
  40f0ac:	sbfiz	x1, x21, #2, #32
  40f0b0:	b.ne	40f0bc <wcrtomb@plt+0xc79c>  // b.any
  40f0b4:	b	40f234 <wcrtomb@plt+0xc914>
  40f0b8:	mov	w21, w0
  40f0bc:	lsr	w0, w21, #6
  40f0c0:	ldr	x0, [x3, x0, lsl #3]
  40f0c4:	lsr	x0, x0, x21
  40f0c8:	tbz	w0, #0, 40f104 <wcrtomb@plt+0xc7e4>
  40f0cc:	ldr	w0, [sp, #124]
  40f0d0:	stp	x1, x3, [sp, #96]
  40f0d4:	cbz	w0, 40f12c <wcrtomb@plt+0xc80c>
  40f0d8:	bl	402560 <__ctype_toupper_loc@plt>
  40f0dc:	add	w27, w27, #0x81
  40f0e0:	mov	w4, w21
  40f0e4:	cmp	w27, #0x17f
  40f0e8:	ldr	x0, [x0]
  40f0ec:	ldp	x1, x3, [sp, #96]
  40f0f0:	b.hi	40f0f8 <wcrtomb@plt+0xc7d8>  // b.pmore
  40f0f4:	ldr	w4, [x0, x1]
  40f0f8:	ldr	w0, [x0, x26]
  40f0fc:	cmp	w4, w0
  40f100:	b.ne	40f12c <wcrtomb@plt+0xc80c>  // b.any
  40f104:	add	x1, x1, #0x4
  40f108:	cmp	w21, #0xff
  40f10c:	add	w0, w21, #0x1
  40f110:	mov	w27, w21
  40f114:	b.ne	40f0b8 <wcrtomb@plt+0xc798>  // b.any
  40f118:	b	40f234 <wcrtomb@plt+0xc914>
  40f11c:	cmp	x20, #0x108
  40f120:	b.le	40f5a4 <wcrtomb@plt+0xcc84>
  40f124:	cmp	x20, #0x10a
  40f128:	b.ne	40f234 <wcrtomb@plt+0xc914>  // b.any
  40f12c:	mov	x0, x19
  40f130:	mov	x1, #0x2                   	// #2
  40f134:	bl	40a798 <wcrtomb@plt+0x7e78>
  40f138:	add	x20, x23, #0x2
  40f13c:	ldr	x22, [x25, #152]
  40f140:	mov	x19, x0
  40f144:	add	x23, x23, #0x1
  40f148:	cmp	x22, x20
  40f14c:	b.gt	40ed10 <wcrtomb@plt+0xc3f0>
  40f150:	b	40ee08 <wcrtomb@plt+0xc4e8>
  40f154:	ldrb	w3, [x19, #32]
  40f158:	ldrb	w2, [x19, #33]
  40f15c:	ldrb	w1, [x21, #32]
  40f160:	ldrb	w0, [x21, #33]
  40f164:	and	w1, w1, w3
  40f168:	strb	w1, [x21, #32]
  40f16c:	and	w0, w0, w2
  40f170:	strb	w0, [x21, #33]
  40f174:	b	40eebc <wcrtomb@plt+0xc59c>
  40f178:	mov	x0, x28
  40f17c:	mov	x1, x27
  40f180:	bl	40a818 <wcrtomb@plt+0x7ef8>
  40f184:	ldrb	w26, [x27, #1]
  40f188:	mov	x28, x0
  40f18c:	add	x27, x27, #0x1
  40f190:	cbnz	w26, 40efe0 <wcrtomb@plt+0xc6c0>
  40f194:	mov	x0, x20
  40f198:	mov	x1, x28
  40f19c:	bl	40a948 <wcrtomb@plt+0x8028>
  40f1a0:	mov	x21, x28
  40f1a4:	ldr	x1, [x28]
  40f1a8:	mov	x20, x0
  40f1ac:	cbz	x1, 40f1c0 <wcrtomb@plt+0xc8a0>
  40f1b0:	mov	x0, x1
  40f1b4:	bl	4026b0 <free@plt>
  40f1b8:	ldr	x1, [x21, #8]!
  40f1bc:	cbnz	x1, 40f1b0 <wcrtomb@plt+0xc890>
  40f1c0:	mov	x0, x28
  40f1c4:	bl	4026b0 <free@plt>
  40f1c8:	ldr	x21, [x22], #8
  40f1cc:	cbnz	x21, 40efc8 <wcrtomb@plt+0xc6a8>
  40f1d0:	ldr	x0, [x24, #8]!
  40f1d4:	cbnz	x0, 40efb8 <wcrtomb@plt+0xc698>
  40f1d8:	ldr	x0, [sp, #112]
  40f1dc:	ldr	x21, [x0]
  40f1e0:	ldr	x0, [x21]
  40f1e4:	cbz	x0, 40f1fc <wcrtomb@plt+0xc8dc>
  40f1e8:	bl	4026b0 <free@plt>
  40f1ec:	ldr	x0, [x21, #8]!
  40f1f0:	cbnz	x0, 40f1e8 <wcrtomb@plt+0xc8c8>
  40f1f4:	ldr	x0, [sp, #112]
  40f1f8:	ldr	x21, [x0]
  40f1fc:	mov	x0, x21
  40f200:	bl	4026b0 <free@plt>
  40f204:	ldr	x21, [sp, #112]
  40f208:	mov	x0, x19
  40f20c:	mov	x19, x21
  40f210:	str	x20, [x21]
  40f214:	add	x20, x23, #0x2
  40f218:	add	x23, x23, #0x1
  40f21c:	bl	40a6f0 <wcrtomb@plt+0x7dd0>
  40f220:	ldr	x22, [x25, #152]
  40f224:	cmp	x22, x20
  40f228:	b.gt	40ed10 <wcrtomb@plt+0xc3f0>
  40f22c:	b	40ee08 <wcrtomb@plt+0xc4e8>
  40f230:	mov	x20, #0x104                 	// #260
  40f234:	add	x0, x24, x28
  40f238:	add	x27, x23, #0x2
  40f23c:	mov	x21, x27
  40f240:	mov	x1, #0x2                   	// #2
  40f244:	ldr	x0, [x0, #8]
  40f248:	cmp	x0, #0x105
  40f24c:	b.eq	40f538 <wcrtomb@plt+0xcc18>  // b.none
  40f250:	mov	x0, x19
  40f254:	bl	40a798 <wcrtomb@plt+0x7e78>
  40f258:	ldr	w1, [sp, #124]
  40f25c:	mov	x19, x0
  40f260:	and	w0, w20, #0xff
  40f264:	cbnz	w1, 40f490 <wcrtomb@plt+0xcb70>
  40f268:	ldr	x1, [x19, #16]
  40f26c:	cmp	x21, x27
  40f270:	strb	w0, [x1]
  40f274:	ldr	x1, [x19, #8]
  40f278:	strb	w0, [x1]
  40f27c:	ldr	x1, [x19, #24]
  40f280:	strb	w0, [x1]
  40f284:	b.le	40f58c <wcrtomb@plt+0xcc6c>
  40f288:	sub	x24, x21, x23
  40f28c:	add	x22, x28, #0x10
  40f290:	sub	x24, x24, #0x3
  40f294:	mov	x20, #0x1                   	// #1
  40f298:	lsr	x24, x24, #1
  40f29c:	add	x28, x24, #0x2
  40f2a0:	ldr	x0, [x25, #144]
  40f2a4:	ldr	w1, [sp, #124]
  40f2a8:	ldr	x21, [x0, x22]
  40f2ac:	and	w0, w21, #0xff
  40f2b0:	cbz	w1, 40f2d4 <wcrtomb@plt+0xc9b4>
  40f2b4:	add	w1, w21, #0x80
  40f2b8:	mov	w0, w21
  40f2bc:	cmp	w1, #0x17f
  40f2c0:	b.hi	40f2d0 <wcrtomb@plt+0xc9b0>  // b.pmore
  40f2c4:	bl	402560 <__ctype_toupper_loc@plt>
  40f2c8:	ldr	x0, [x0]
  40f2cc:	ldr	w0, [x0, w21, sxtw #2]
  40f2d0:	and	w0, w0, #0xff
  40f2d4:	ldr	x1, [x19, #16]
  40f2d8:	add	x22, x22, #0x10
  40f2dc:	strb	w0, [x1, x20]
  40f2e0:	ldr	x1, [x19, #8]
  40f2e4:	strb	w0, [x1, x20]
  40f2e8:	ldr	x1, [x19, #24]
  40f2ec:	strb	w0, [x1, x20]
  40f2f0:	add	x20, x20, #0x1
  40f2f4:	cmp	x28, x20
  40f2f8:	b.ne	40f2a0 <wcrtomb@plt+0xc980>  // b.any
  40f2fc:	lsl	x24, x24, #1
  40f300:	add	x20, x23, #0x4
  40f304:	mov	x2, x28
  40f308:	add	x20, x20, x24
  40f30c:	add	x23, x27, x24
  40f310:	mov	x0, x28
  40f314:	ldr	x1, [x19, #16]
  40f318:	add	x23, x23, #0x1
  40f31c:	strb	wzr, [x1, x0]
  40f320:	ldr	x1, [x19, #8]
  40f324:	strb	wzr, [x1, x0]
  40f328:	ldr	x1, [x19, #24]
  40f32c:	strb	wzr, [x1, x0]
  40f330:	ldr	x0, [x19]
  40f334:	ldr	x1, [x19, #24]
  40f338:	bl	40a818 <wcrtomb@plt+0x7ef8>
  40f33c:	str	x0, [x19]
  40f340:	ldr	x22, [x25, #152]
  40f344:	cmp	x22, x20
  40f348:	b.gt	40ed10 <wcrtomb@plt+0xc3f0>
  40f34c:	b	40ee08 <wcrtomb@plt+0xc4e8>
  40f350:	mov	x0, x2
  40f354:	bl	40a680 <wcrtomb@plt+0x7d60>
  40f358:	ldrb	w1, [x19, #33]
  40f35c:	str	x0, [x21, #24]
  40f360:	strb	w1, [x21, #33]
  40f364:	b	40edb0 <wcrtomb@plt+0xc490>
  40f368:	ldr	x0, [x19, #40]
  40f36c:	cbnz	x0, 40f5d0 <wcrtomb@plt+0xccb0>
  40f370:	ldr	x23, [x19]
  40f374:	ldr	x24, [x19, #24]
  40f378:	ldr	x20, [x23]
  40f37c:	cbz	x20, 40f41c <wcrtomb@plt+0xcafc>
  40f380:	adrp	x22, 426000 <_obstack_memory_used@@Base+0xef38>
  40f384:	add	x23, x23, #0x8
  40f388:	add	x22, x22, #0x9e8
  40f38c:	mov	x21, #0x0                   	// #0
  40f390:	b	40f3a0 <wcrtomb@plt+0xca80>
  40f394:	mov	x0, x22
  40f398:	bl	402300 <strlen@plt>
  40f39c:	mov	x21, x0
  40f3a0:	mov	x0, x20
  40f3a4:	bl	402300 <strlen@plt>
  40f3a8:	cmp	x0, x21
  40f3ac:	csel	x22, x22, x20, ls  // ls = plast
  40f3b0:	ldr	x20, [x23], #8
  40f3b4:	cbnz	x20, 40f394 <wcrtomb@plt+0xca74>
  40f3b8:	mov	x1, x24
  40f3bc:	mov	x0, x22
  40f3c0:	bl	402690 <strcmp@plt>
  40f3c4:	ldrb	w1, [x22]
  40f3c8:	cbz	w0, 40f430 <wcrtomb@plt+0xcb10>
  40f3cc:	mov	w21, #0x0                   	// #0
  40f3d0:	mov	w23, #0x0                   	// #0
  40f3d4:	mov	w24, #0x0                   	// #0
  40f3d8:	cbz	w1, 40f5c8 <wcrtomb@plt+0xcca8>
  40f3dc:	mov	x0, x22
  40f3e0:	bl	402300 <strlen@plt>
  40f3e4:	add	x0, x0, #0x4
  40f3e8:	bl	414080 <wcrtomb@plt+0x11760>
  40f3ec:	mov	x20, x0
  40f3f0:	mov	x1, x22
  40f3f4:	add	x0, x0, #0x3
  40f3f8:	strb	w24, [x20]
  40f3fc:	strb	w23, [x20, #1]
  40f400:	strb	w21, [x20, #2]
  40f404:	bl	402730 <strcpy@plt>
  40f408:	mov	x0, x19
  40f40c:	ldr	x19, [x19, #40]
  40f410:	bl	40a6f0 <wcrtomb@plt+0x7dd0>
  40f414:	cbnz	x19, 40ee10 <wcrtomb@plt+0xc4f0>
  40f418:	b	40ee20 <wcrtomb@plt+0xc500>
  40f41c:	ldrb	w1, [x24]
  40f420:	cbnz	w1, 40ee10 <wcrtomb@plt+0xc4f0>
  40f424:	adrp	x22, 426000 <_obstack_memory_used@@Base+0xef38>
  40f428:	add	x22, x22, #0x9e8
  40f42c:	nop
  40f430:	ldr	w0, [sp, #136]
  40f434:	ldrb	w23, [x19, #32]
  40f438:	ldrb	w21, [x19, #33]
  40f43c:	cbnz	w0, 40f4b4 <wcrtomb@plt+0xcb94>
  40f440:	ldr	w0, [sp, #140]
  40f444:	cmp	w0, #0x0
  40f448:	csinc	w24, w21, wzr, ne  // ne = any
  40f44c:	b	40f3d8 <wcrtomb@plt+0xcab8>
  40f450:	mov	x0, x19
  40f454:	mov	x1, #0x2                   	// #2
  40f458:	bl	40a798 <wcrtomb@plt+0x7e78>
  40f45c:	mov	x19, x0
  40f460:	ldr	x22, [x25, #152]
  40f464:	mov	w0, #0x1                   	// #1
  40f468:	mov	w1, #0x1                   	// #1
  40f46c:	strb	w0, [x19, #32]
  40f470:	str	w1, [sp, #136]
  40f474:	add	x20, x23, #0x2
  40f478:	cmp	x22, x20
  40f47c:	add	x23, x23, #0x1
  40f480:	b.gt	40ed10 <wcrtomb@plt+0xc3f0>
  40f484:	b	40ee08 <wcrtomb@plt+0xc4e8>
  40f488:	sub	x1, x22, x2
  40f48c:	b	40ef5c <wcrtomb@plt+0xc63c>
  40f490:	add	w1, w20, #0x80
  40f494:	mov	w0, w20
  40f498:	cmp	w1, #0x17f
  40f49c:	b.hi	40f4ac <wcrtomb@plt+0xcb8c>  // b.pmore
  40f4a0:	bl	402560 <__ctype_toupper_loc@plt>
  40f4a4:	ldr	x0, [x0]
  40f4a8:	ldr	w0, [x0, w20, sxtw #2]
  40f4ac:	and	w0, w0, #0xff
  40f4b0:	b	40f268 <wcrtomb@plt+0xc948>
  40f4b4:	mov	w24, #0x0                   	// #0
  40f4b8:	cbz	w23, 40f3d8 <wcrtomb@plt+0xcab8>
  40f4bc:	b	40f440 <wcrtomb@plt+0xcb20>
  40f4c0:	mov	x0, x1
  40f4c4:	bl	402300 <strlen@plt>
  40f4c8:	mov	x22, x0
  40f4cc:	mov	x0, x20
  40f4d0:	bl	402300 <strlen@plt>
  40f4d4:	add	x27, x22, x0
  40f4d8:	mov	x24, x0
  40f4dc:	mov	x0, x27
  40f4e0:	bl	414080 <wcrtomb@plt+0x11760>
  40f4e4:	mov	x20, x0
  40f4e8:	ldr	x1, [x21, #16]
  40f4ec:	mov	x2, x22
  40f4f0:	bl	4022a0 <memcpy@plt>
  40f4f4:	ldr	x1, [x19, #8]
  40f4f8:	mov	x2, x24
  40f4fc:	add	x0, x20, x22
  40f500:	bl	4022a0 <memcpy@plt>
  40f504:	ldr	x0, [x21]
  40f508:	mov	x2, x27
  40f50c:	mov	x1, x20
  40f510:	bl	40a818 <wcrtomb@plt+0x7ef8>
  40f514:	str	x0, [x21]
  40f518:	mov	x0, x20
  40f51c:	bl	4026b0 <free@plt>
  40f520:	b	40ed50 <wcrtomb@plt+0xc430>
  40f524:	ldr	x1, [x19, #8]
  40f528:	ldr	x0, [x21, #8]
  40f52c:	bl	40a680 <wcrtomb@plt+0x7d60>
  40f530:	str	x0, [x21, #8]
  40f534:	b	40ed5c <wcrtomb@plt+0xc43c>
  40f538:	sub	x2, x22, #0x1
  40f53c:	cmp	x27, x2
  40f540:	b.ge	40f250 <wcrtomb@plt+0xc930>  // b.tcont
  40f544:	add	x1, x24, #0x8
  40f548:	b	40f558 <wcrtomb@plt+0xcc38>
  40f54c:	add	x21, x21, #0x2
  40f550:	cmp	x21, x2
  40f554:	b.ge	40f57c <wcrtomb@plt+0xcc5c>  // b.tcont
  40f558:	cmp	x23, x21
  40f55c:	b.eq	40f570 <wcrtomb@plt+0xcc50>  // b.none
  40f560:	ldr	x0, [x24, x21, lsl #3]
  40f564:	sub	x0, x0, #0x1
  40f568:	cmp	x0, #0xfe
  40f56c:	b.hi	40f57c <wcrtomb@plt+0xcc5c>  // b.pmore
  40f570:	ldr	x0, [x1, x21, lsl #3]
  40f574:	cmp	x0, #0x105
  40f578:	b.eq	40f54c <wcrtomb@plt+0xcc2c>  // b.none
  40f57c:	sub	x1, x21, x23
  40f580:	asr	x1, x1, #1
  40f584:	add	x1, x1, #0x1
  40f588:	b	40f250 <wcrtomb@plt+0xc930>
  40f58c:	mov	x0, #0x1                   	// #1
  40f590:	mov	x20, x27
  40f594:	mov	x2, x0
  40f598:	b	40f314 <wcrtomb@plt+0xc9f4>
  40f59c:	mov	x20, #0x0                   	// #0
  40f5a0:	b	40ee28 <wcrtomb@plt+0xc508>
  40f5a4:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xef38>
  40f5a8:	add	x3, x3, #0x658
  40f5ac:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40f5b0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  40f5b4:	add	x3, x3, #0x290
  40f5b8:	add	x1, x1, #0x3c8
  40f5bc:	add	x0, x0, #0x4e0
  40f5c0:	mov	w2, #0xff6                 	// #4086
  40f5c4:	bl	402880 <__assert_fail@plt>
  40f5c8:	mov	x20, #0x0                   	// #0
  40f5cc:	b	40ee10 <wcrtomb@plt+0xc4f0>
  40f5d0:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xef38>
  40f5d4:	add	x3, x3, #0x658
  40f5d8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40f5dc:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  40f5e0:	add	x3, x3, #0x290
  40f5e4:	add	x1, x1, #0x3c8
  40f5e8:	add	x0, x0, #0x510
  40f5ec:	mov	w2, #0x1039                	// #4153
  40f5f0:	bl	402880 <__assert_fail@plt>
  40f5f4:	nop
  40f5f8:	b	4026b0 <free@plt>
  40f5fc:	nop
  40f600:	mov	x0, #0x920                 	// #2336
  40f604:	b	414080 <wcrtomb@plt+0x11760>
  40f608:	stp	x29, x30, [sp, #-112]!
  40f60c:	mov	x5, x2
  40f610:	mov	x2, #0x410                 	// #1040
  40f614:	mov	x29, sp
  40f618:	stp	x21, x22, [sp, #32]
  40f61c:	mov	x21, x1
  40f620:	sub	x22, x0, x0, lsl #2
  40f624:	mov	w1, #0x0                   	// #0
  40f628:	stp	x19, x20, [sp, #16]
  40f62c:	mov	w19, w3
  40f630:	stp	x23, x24, [sp, #48]
  40f634:	mov	x23, x0
  40f638:	sub	x22, x22, #0x214
  40f63c:	stp	x25, x26, [sp, #64]
  40f640:	adrp	x25, 426000 <_obstack_memory_used@@Base+0xef38>
  40f644:	add	x25, x25, #0x520
  40f648:	stp	x27, x28, [sp, #80]
  40f64c:	add	x28, x0, #0x1cc
  40f650:	mov	x24, #0x1                   	// #1
  40f654:	str	x5, [sp, #104]
  40f658:	bl	402510 <memset@plt>
  40f65c:	ldrb	w20, [x21]
  40f660:	adrp	x2, 40e000 <wcrtomb@plt+0xb6e0>
  40f664:	adrp	x0, 40d000 <wcrtomb@plt+0xa6e0>
  40f668:	add	x2, x2, #0x2b0
  40f66c:	cmp	w20, #0x0
  40f670:	add	x0, x0, #0xda8
  40f674:	csel	x0, x0, x2, ne  // ne = any
  40f678:	str	x0, [x23, #1040]
  40f67c:	mov	x1, x21
  40f680:	mov	x2, #0x504                 	// #1284
  40f684:	add	x0, x23, #0x418
  40f688:	bl	4022a0 <memcpy@plt>
  40f68c:	ldr	x5, [sp, #104]
  40f690:	tst	x19, #0x2
  40f694:	ldrb	w21, [x23, #1050]
  40f698:	eor	w0, w20, #0x1
  40f69c:	and	w19, w19, #0x1
  40f6a0:	mov	x6, #0xffffffffffffffff    	// #-1
  40f6a4:	ubfx	w1, w5, #22, #1
  40f6a8:	mov	w2, #0x1                   	// #1
  40f6ac:	mov	w20, #0xa                   	// #10
  40f6b0:	mov	x27, #0x0                   	// #0
  40f6b4:	csel	w20, wzr, w20, ne  // ne = any
  40f6b8:	str	x6, [x23, #24]
  40f6bc:	strb	w0, [x23, #192]
  40f6c0:	str	x5, [x23, #448]
  40f6c4:	strb	w2, [x23, #456]
  40f6c8:	strb	w1, [x23, #457]
  40f6cc:	strb	w19, [x23, #458]
  40f6d0:	strb	w20, [x23, #459]
  40f6d4:	nop
  40f6d8:	cmp	w19, #0x0
  40f6dc:	and	w0, w27, #0xff
  40f6e0:	ccmp	w0, w20, #0x0, eq  // eq = none
  40f6e4:	mov	w26, w27
  40f6e8:	b.eq	40f798 <wcrtomb@plt+0xce78>  // b.none
  40f6ec:	ldr	w0, [x22, x28, lsl #2]
  40f6f0:	cmn	w0, #0x1
  40f6f4:	b.eq	40f774 <wcrtomb@plt+0xce54>  // b.none
  40f6f8:	bl	4026a0 <__ctype_b_loc@plt>
  40f6fc:	ldr	x0, [x0]
  40f700:	cmp	w27, #0x5f
  40f704:	ldrh	w0, [x0, x27, lsl #1]
  40f708:	and	w0, w0, #0x8
  40f70c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  40f710:	b.eq	40f774 <wcrtomb@plt+0xce54>  // b.none
  40f714:	lsr	w0, w27, #6
  40f718:	mov	w1, #0x2                   	// #2
  40f71c:	strb	w1, [x28]
  40f720:	lsl	x2, x24, x27
  40f724:	add	x0, x23, x0, lsl #3
  40f728:	ldr	x5, [x0, #976]
  40f72c:	orr	x2, x5, x2
  40f730:	str	x2, [x0, #976]
  40f734:	cbz	w21, 40f780 <wcrtomb@plt+0xce60>
  40f738:	and	w1, w26, #0xc0
  40f73c:	cmp	w1, #0x80
  40f740:	cset	w0, ne  // ne = any
  40f744:	strb	w0, [x28, #256]
  40f748:	add	x27, x27, #0x1
  40f74c:	cmp	x27, #0x100
  40f750:	add	x28, x28, #0x1
  40f754:	b.ne	40f6d8 <wcrtomb@plt+0xcdb8>  // b.any
  40f758:	ldp	x19, x20, [sp, #16]
  40f75c:	ldp	x21, x22, [sp, #32]
  40f760:	ldp	x23, x24, [sp, #48]
  40f764:	ldp	x25, x26, [sp, #64]
  40f768:	ldp	x27, x28, [sp, #80]
  40f76c:	ldp	x29, x30, [sp], #112
  40f770:	ret
  40f774:	mov	w0, #0x1                   	// #1
  40f778:	strb	w0, [x28]
  40f77c:	cbnz	w21, 40f738 <wcrtomb@plt+0xce18>
  40f780:	mov	w1, w26
  40f784:	mov	x0, x25
  40f788:	bl	4026e0 <strchr@plt>
  40f78c:	cmp	x0, #0x0
  40f790:	cset	w0, ne  // ne = any
  40f794:	b	40f744 <wcrtomb@plt+0xce24>
  40f798:	lsr	w0, w27, #6
  40f79c:	mov	w1, #0x4                   	// #4
  40f7a0:	strb	w1, [x28]
  40f7a4:	lsl	x2, x24, x27
  40f7a8:	add	x0, x23, x0, lsl #3
  40f7ac:	ldr	x5, [x0, #1008]
  40f7b0:	orr	x2, x5, x2
  40f7b4:	str	x2, [x0, #1008]
  40f7b8:	b	40f734 <wcrtomb@plt+0xce14>
  40f7bc:	nop
  40f7c0:	stp	x29, x30, [sp, #-32]!
  40f7c4:	mov	x2, #0x1c0                 	// #448
  40f7c8:	mov	x29, sp
  40f7cc:	stp	x19, x20, [sp, #16]
  40f7d0:	mov	x20, x1
  40f7d4:	mov	x19, x0
  40f7d8:	mov	w1, #0x0                   	// #0
  40f7dc:	bl	402510 <memset@plt>
  40f7e0:	ldrb	w2, [x20, #192]
  40f7e4:	mov	x0, #0xffffffffffffffff    	// #-1
  40f7e8:	str	x0, [x19, #24]
  40f7ec:	add	x1, x20, #0x1c0
  40f7f0:	strb	w2, [x19, #192]
  40f7f4:	add	x0, x19, #0x1c0
  40f7f8:	mov	x2, #0x250                 	// #592
  40f7fc:	bl	4022a0 <memcpy@plt>
  40f800:	ldr	x0, [x20, #1040]
  40f804:	str	x0, [x19, #1040]
  40f808:	add	x1, x20, #0x418
  40f80c:	add	x0, x19, #0x418
  40f810:	mov	x2, #0x504                 	// #1284
  40f814:	bl	4022a0 <memcpy@plt>
  40f818:	ldp	x19, x20, [sp, #16]
  40f81c:	ldp	x29, x30, [sp], #32
  40f820:	ret
  40f824:	nop
  40f828:	stp	x29, x30, [sp, #-112]!
  40f82c:	mov	x29, sp
  40f830:	stp	x25, x26, [sp, #64]
  40f834:	mov	x26, x0
  40f838:	stp	x19, x20, [sp, #16]
  40f83c:	add	x20, sp, #0x68
  40f840:	stp	x21, x22, [sp, #32]
  40f844:	add	x21, sp, #0x60
  40f848:	stp	x23, x24, [sp, #48]
  40f84c:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  40f850:	cmp	x0, #0x1
  40f854:	cset	w1, hi  // hi = pmore
  40f858:	strb	w1, [x26]
  40f85c:	b.hi	40f89c <wcrtomb@plt+0xcf7c>  // b.pmore
  40f860:	mov	w19, #0x0                   	// #0
  40f864:	b	40f870 <wcrtomb@plt+0xcf50>
  40f868:	cmp	w19, #0xff
  40f86c:	b.eq	40f94c <wcrtomb@plt+0xd02c>  // b.none
  40f870:	and	w2, w19, #0xff
  40f874:	mov	x1, x21
  40f878:	add	w3, w2, #0x1
  40f87c:	add	w19, w19, #0x1
  40f880:	mov	x0, x20
  40f884:	strb	w3, [sp, #96]
  40f888:	strb	wzr, [sp, #97]
  40f88c:	strb	w2, [sp, #104]
  40f890:	strb	wzr, [sp, #105]
  40f894:	bl	402810 <strcoll@plt>
  40f898:	tbnz	w0, #31, 40f868 <wcrtomb@plt+0xcf48>
  40f89c:	mov	w0, #0x0                   	// #0
  40f8a0:	strb	w0, [x26, #1]
  40f8a4:	mov	x3, x20
  40f8a8:	mov	x0, x21
  40f8ac:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40f8b0:	mov	x2, #0x2                   	// #2
  40f8b4:	add	x1, x1, #0x8f0
  40f8b8:	str	xzr, [sp, #104]
  40f8bc:	bl	416cf8 <wcrtomb@plt+0x143d8>
  40f8c0:	mov	w1, #0x0                   	// #0
  40f8c4:	cmp	x0, #0x2
  40f8c8:	b.ne	40f8d8 <wcrtomb@plt+0xcfb8>  // b.any
  40f8cc:	ldr	w0, [sp, #96]
  40f8d0:	cmp	w0, #0x100
  40f8d4:	cset	w1, eq  // eq = none
  40f8d8:	add	x25, x26, #0x3
  40f8dc:	add	x24, x26, #0x104
  40f8e0:	mov	x19, #0x0                   	// #0
  40f8e4:	mov	x23, #0x1                   	// #1
  40f8e8:	mov	w22, #0xffffffff            	// #-1
  40f8ec:	strb	w1, [x26, #2]
  40f8f0:	add	x1, sp, #0x5f
  40f8f4:	mov	x2, #0x1                   	// #1
  40f8f8:	mov	x3, x20
  40f8fc:	mov	x0, x21
  40f900:	strb	w19, [sp, #95]
  40f904:	str	xzr, [sp, #104]
  40f908:	bl	416cf8 <wcrtomb@plt+0x143d8>
  40f90c:	ldr	w1, [sp, #96]
  40f910:	cmp	x0, #0x0
  40f914:	csel	x2, x0, x23, ne  // ne = any
  40f918:	cmp	x0, #0x2
  40f91c:	strb	w2, [x25, x19]
  40f920:	csel	w1, w1, w22, cc  // cc = lo, ul, last
  40f924:	str	w1, [x24, x19, lsl #2]
  40f928:	add	x19, x19, #0x1
  40f92c:	cmp	x19, #0x100
  40f930:	b.ne	40f8f0 <wcrtomb@plt+0xcfd0>  // b.any
  40f934:	ldp	x19, x20, [sp, #16]
  40f938:	ldp	x21, x22, [sp, #32]
  40f93c:	ldp	x23, x24, [sp, #48]
  40f940:	ldp	x25, x26, [sp, #64]
  40f944:	ldp	x29, x30, [sp], #112
  40f948:	ret
  40f94c:	mov	w0, #0x1                   	// #1
  40f950:	b	40f8a0 <wcrtomb@plt+0xcf80>
  40f954:	nop
  40f958:	stp	x29, x30, [sp, #-80]!
  40f95c:	mov	x29, sp
  40f960:	stp	x19, x20, [sp, #16]
  40f964:	stp	x21, x22, [sp, #32]
  40f968:	stp	x23, x24, [sp, #48]
  40f96c:	mov	x24, x1
  40f970:	stp	x25, x26, [sp, #64]
  40f974:	mov	w25, w0
  40f978:	bl	402830 <towupper@plt>
  40f97c:	mov	w21, w0
  40f980:	bl	4028c0 <towlower@plt>
  40f984:	cmp	w25, w21
  40f988:	mov	w22, w0
  40f98c:	mov	w26, #0x0                   	// #0
  40f990:	b.eq	40f99c <wcrtomb@plt+0xd07c>  // b.none
  40f994:	mov	w26, #0x1                   	// #1
  40f998:	str	w21, [x24]
  40f99c:	cmp	w21, w22
  40f9a0:	ccmp	w25, w22, #0x4, ne  // ne = any
  40f9a4:	b.eq	40f9b8 <wcrtomb@plt+0xd098>  // b.none
  40f9a8:	mov	w0, w22
  40f9ac:	bl	402830 <towupper@plt>
  40f9b0:	cmp	w0, w21
  40f9b4:	b.eq	40fa28 <wcrtomb@plt+0xd108>  // b.none
  40f9b8:	adrp	x23, 426000 <_obstack_memory_used@@Base+0xef38>
  40f9bc:	add	x23, x23, #0x8f8
  40f9c0:	add	x20, x23, #0x2
  40f9c4:	mov	w19, #0xb5                  	// #181
  40f9c8:	add	x23, x23, #0x26
  40f9cc:	b	40f9dc <wcrtomb@plt+0xd0bc>
  40f9d0:	cmp	x23, x20
  40f9d4:	b.eq	40fa0c <wcrtomb@plt+0xd0ec>  // b.none
  40f9d8:	ldrsh	w19, [x20], #2
  40f9dc:	cmp	w22, w19
  40f9e0:	ccmp	w21, w19, #0x4, ne  // ne = any
  40f9e4:	ccmp	w25, w19, #0x4, ne  // ne = any
  40f9e8:	b.eq	40f9d0 <wcrtomb@plt+0xd0b0>  // b.none
  40f9ec:	mov	w0, w19
  40f9f0:	bl	402830 <towupper@plt>
  40f9f4:	cmp	w0, w21
  40f9f8:	b.ne	40f9d0 <wcrtomb@plt+0xd0b0>  // b.any
  40f9fc:	str	w19, [x24, w26, sxtw #2]
  40fa00:	cmp	x23, x20
  40fa04:	add	w26, w26, #0x1
  40fa08:	b.ne	40f9d8 <wcrtomb@plt+0xd0b8>  // b.any
  40fa0c:	mov	w0, w26
  40fa10:	ldp	x19, x20, [sp, #16]
  40fa14:	ldp	x21, x22, [sp, #32]
  40fa18:	ldp	x23, x24, [sp, #48]
  40fa1c:	ldp	x25, x26, [sp, #64]
  40fa20:	ldp	x29, x30, [sp], #80
  40fa24:	ret
  40fa28:	str	w22, [x24, w26, sxtw #2]
  40fa2c:	add	w26, w26, #0x1
  40fa30:	b	40f9b8 <wcrtomb@plt+0xd098>
  40fa34:	nop
  40fa38:	stp	x29, x30, [sp, #-32]!
  40fa3c:	mov	x29, sp
  40fa40:	str	x19, [sp, #16]
  40fa44:	mov	x19, x0
  40fa48:	bl	423b10 <_obstack_memory_used@@Base+0xca48>
  40fa4c:	ldrb	w1, [x0]
  40fa50:	cmp	w1, #0x0
  40fa54:	csel	x19, x19, x0, eq  // eq = none
  40fa58:	mov	x0, x19
  40fa5c:	bl	423b68 <_obstack_memory_used@@Base+0xcaa0>
  40fa60:	ldrb	w1, [x19, x0]
  40fa64:	strb	wzr, [x19, x0]
  40fa68:	cmp	w1, #0x0
  40fa6c:	cset	w0, ne  // ne = any
  40fa70:	ldr	x19, [sp, #16]
  40fa74:	ldp	x29, x30, [sp], #32
  40fa78:	ret
  40fa7c:	nop
  40fa80:	ldr	x3, [x3]
  40fa84:	mov	x16, x3
  40fa88:	br	x16
  40fa8c:	nop
  40fa90:	b	4026b0 <free@plt>
  40fa94:	nop
  40fa98:	stp	x29, x30, [sp, #-16]!
  40fa9c:	mov	x29, sp
  40faa0:	bl	4118b8 <wcrtomb@plt+0xef98>
  40faa4:	cmp	w0, #0x0
  40faa8:	cset	w0, eq  // eq = none
  40faac:	ldp	x29, x30, [sp], #16
  40fab0:	ret
  40fab4:	nop
  40fab8:	stp	x29, x30, [sp, #-16]!
  40fabc:	mov	x29, sp
  40fac0:	bl	402690 <strcmp@plt>
  40fac4:	cmp	w0, #0x0
  40fac8:	cset	w0, eq  // eq = none
  40facc:	ldp	x29, x30, [sp], #16
  40fad0:	ret
  40fad4:	nop
  40fad8:	b	4110d8 <wcrtomb@plt+0xe7b8>
  40fadc:	nop
  40fae0:	and	w3, w2, #0x10
  40fae4:	tbz	w2, #3, 40fbbc <wcrtomb@plt+0xd29c>
  40fae8:	stp	x29, x30, [sp, #-64]!
  40faec:	mov	x29, sp
  40faf0:	stp	x19, x20, [sp, #16]
  40faf4:	mov	x19, x1
  40faf8:	stp	x21, x22, [sp, #32]
  40fafc:	mov	x21, x0
  40fb00:	cbnz	w3, 40fb44 <wcrtomb@plt+0xd224>
  40fb04:	bl	402300 <strlen@plt>
  40fb08:	mov	x22, x0
  40fb0c:	mov	x2, x22
  40fb10:	mov	x0, x21
  40fb14:	mov	x1, x19
  40fb18:	bl	4024c0 <strncmp@plt>
  40fb1c:	mov	w20, w0
  40fb20:	cbnz	w0, 40fb30 <wcrtomb@plt+0xd210>
  40fb24:	ldrb	w20, [x19, x22]
  40fb28:	cmp	w20, #0x2f
  40fb2c:	csel	w20, wzr, w20, eq  // eq = none
  40fb30:	mov	w0, w20
  40fb34:	ldp	x19, x20, [sp, #16]
  40fb38:	ldp	x21, x22, [sp, #32]
  40fb3c:	ldp	x29, x30, [sp], #64
  40fb40:	ret
  40fb44:	mov	x0, x1
  40fb48:	str	x23, [sp, #48]
  40fb4c:	bl	414288 <wcrtomb@plt+0x11968>
  40fb50:	mov	w23, #0x2f                  	// #47
  40fb54:	mov	x22, x0
  40fb58:	mov	x19, x0
  40fb5c:	b	40fb78 <wcrtomb@plt+0xd258>
  40fb60:	strb	wzr, [x19]
  40fb64:	bl	4118b8 <wcrtomb@plt+0xef98>
  40fb68:	mov	w20, w0
  40fb6c:	cmp	w0, #0x0
  40fb70:	b.le	40fb9c <wcrtomb@plt+0xd27c>
  40fb74:	strb	w23, [x19], #1
  40fb78:	mov	x0, x19
  40fb7c:	mov	w1, #0x2f                  	// #47
  40fb80:	bl	4026e0 <strchr@plt>
  40fb84:	mov	x19, x0
  40fb88:	mov	x1, x22
  40fb8c:	mov	x0, x21
  40fb90:	cbnz	x19, 40fb60 <wcrtomb@plt+0xd240>
  40fb94:	bl	4118b8 <wcrtomb@plt+0xef98>
  40fb98:	mov	w20, w0
  40fb9c:	mov	x0, x22
  40fba0:	bl	4026b0 <free@plt>
  40fba4:	mov	w0, w20
  40fba8:	ldp	x19, x20, [sp, #16]
  40fbac:	ldp	x21, x22, [sp, #32]
  40fbb0:	ldr	x23, [sp, #48]
  40fbb4:	ldp	x29, x30, [sp], #64
  40fbb8:	ret
  40fbbc:	cbz	w3, 40fbc4 <wcrtomb@plt+0xd2a4>
  40fbc0:	b	4118b8 <wcrtomb@plt+0xef98>
  40fbc4:	b	402690 <strcmp@plt>
  40fbc8:	stp	x29, x30, [sp, #-144]!
  40fbcc:	mov	x29, sp
  40fbd0:	strb	wzr, [sp, #80]
  40fbd4:	str	x0, [sp, #96]
  40fbd8:	ldrb	w0, [sp, #80]
  40fbdc:	stp	x19, x20, [sp, #16]
  40fbe0:	mov	x19, #0x0                   	// #0
  40fbe4:	stp	x21, x22, [sp, #32]
  40fbe8:	mov	x21, x1
  40fbec:	mov	w22, #0x1                   	// #1
  40fbf0:	stp	x23, x24, [sp, #48]
  40fbf4:	adrp	x23, 426000 <_obstack_memory_used@@Base+0xef38>
  40fbf8:	add	x24, sp, #0x54
  40fbfc:	str	x25, [sp, #64]
  40fc00:	add	x23, x23, #0xa20
  40fc04:	stur	xzr, [sp, #84]
  40fc08:	strb	wzr, [sp, #92]
  40fc0c:	ldr	x20, [sp, #96]
  40fc10:	cbnz	w0, 40fc8c <wcrtomb@plt+0xd36c>
  40fc14:	nop
  40fc18:	ldrb	w1, [x20]
  40fc1c:	ubfx	x0, x1, #5, #3
  40fc20:	ldr	w0, [x23, x0, lsl #2]
  40fc24:	lsr	w0, w0, w1
  40fc28:	tbz	w0, #0, 40fd28 <wcrtomb@plt+0xd408>
  40fc2c:	mov	x0, #0x1                   	// #1
  40fc30:	str	x0, [sp, #104]
  40fc34:	ldrb	w25, [x20]
  40fc38:	strb	w0, [sp, #92]
  40fc3c:	strb	w0, [sp, #112]
  40fc40:	str	w25, [sp, #116]
  40fc44:	cbz	w25, 40fd04 <wcrtomb@plt+0xd3e4>
  40fc48:	ldrb	w0, [sp, #112]
  40fc4c:	ldr	x20, [sp, #96]
  40fc50:	cbz	w0, 40fd20 <wcrtomb@plt+0xd400>
  40fc54:	mov	w0, w25
  40fc58:	bl	4028c0 <towlower@plt>
  40fc5c:	lsl	x1, x19, #5
  40fc60:	strb	wzr, [sp, #92]
  40fc64:	sub	x19, x1, x19
  40fc68:	add	x0, x19, w0, uxtw
  40fc6c:	ldr	x1, [sp, #104]
  40fc70:	udiv	x19, x0, x21
  40fc74:	add	x20, x20, x1
  40fc78:	str	x20, [sp, #96]
  40fc7c:	ldr	x20, [sp, #96]
  40fc80:	msub	x19, x19, x21, x0
  40fc84:	ldrb	w0, [sp, #80]
  40fc88:	cbz	w0, 40fc18 <wcrtomb@plt+0xd2f8>
  40fc8c:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  40fc90:	mov	x1, x0
  40fc94:	mov	x0, x20
  40fc98:	bl	413aa8 <wcrtomb@plt+0x11188>
  40fc9c:	mov	x2, x0
  40fca0:	add	x0, sp, #0x50
  40fca4:	mov	x1, x20
  40fca8:	add	x3, sp, #0x54
  40fcac:	add	x0, x0, #0x24
  40fcb0:	bl	416cf8 <wcrtomb@plt+0x143d8>
  40fcb4:	str	x0, [sp, #104]
  40fcb8:	cmn	x0, #0x1
  40fcbc:	b.eq	40fd3c <wcrtomb@plt+0xd41c>  // b.none
  40fcc0:	cmn	x0, #0x2
  40fcc4:	b.eq	40fd54 <wcrtomb@plt+0xd434>  // b.none
  40fcc8:	cbnz	x0, 40fd70 <wcrtomb@plt+0xd450>
  40fccc:	ldr	x0, [sp, #96]
  40fcd0:	mov	x1, #0x1                   	// #1
  40fcd4:	str	x1, [sp, #104]
  40fcd8:	ldrb	w0, [x0]
  40fcdc:	cbnz	w0, 40fdb8 <wcrtomb@plt+0xd498>
  40fce0:	ldr	w25, [sp, #116]
  40fce4:	cbnz	w25, 40fd98 <wcrtomb@plt+0xd478>
  40fce8:	add	x0, sp, #0x54
  40fcec:	strb	w22, [sp, #112]
  40fcf0:	bl	402610 <mbsinit@plt>
  40fcf4:	cbz	w0, 40fcfc <wcrtomb@plt+0xd3dc>
  40fcf8:	strb	wzr, [sp, #80]
  40fcfc:	strb	w22, [sp, #92]
  40fd00:	cbnz	w25, 40fc48 <wcrtomb@plt+0xd328>
  40fd04:	mov	x0, x19
  40fd08:	ldp	x19, x20, [sp, #16]
  40fd0c:	ldp	x21, x22, [sp, #32]
  40fd10:	ldp	x23, x24, [sp, #48]
  40fd14:	ldr	x25, [sp, #64]
  40fd18:	ldp	x29, x30, [sp], #144
  40fd1c:	ret
  40fd20:	ldrb	w0, [x20]
  40fd24:	b	40fc5c <wcrtomb@plt+0xd33c>
  40fd28:	mov	x0, x24
  40fd2c:	bl	402610 <mbsinit@plt>
  40fd30:	cbz	w0, 40fd78 <wcrtomb@plt+0xd458>
  40fd34:	strb	w22, [sp, #80]
  40fd38:	b	40fc8c <wcrtomb@plt+0xd36c>
  40fd3c:	mov	x0, #0x1                   	// #1
  40fd40:	ldr	w25, [sp, #116]
  40fd44:	strb	w0, [sp, #92]
  40fd48:	str	x0, [sp, #104]
  40fd4c:	strb	wzr, [sp, #112]
  40fd50:	b	40fc48 <wcrtomb@plt+0xd328>
  40fd54:	ldr	x0, [sp, #96]
  40fd58:	bl	402300 <strlen@plt>
  40fd5c:	ldr	w25, [sp, #116]
  40fd60:	strb	w22, [sp, #92]
  40fd64:	str	x0, [sp, #104]
  40fd68:	strb	wzr, [sp, #112]
  40fd6c:	b	40fc48 <wcrtomb@plt+0xd328>
  40fd70:	ldr	w25, [sp, #116]
  40fd74:	b	40fce8 <wcrtomb@plt+0xd3c8>
  40fd78:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xef38>
  40fd7c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40fd80:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  40fd84:	add	x3, x3, #0x980
  40fd88:	add	x1, x1, #0x920
  40fd8c:	add	x0, x0, #0x930
  40fd90:	mov	w2, #0x96                  	// #150
  40fd94:	bl	402880 <__assert_fail@plt>
  40fd98:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xef38>
  40fd9c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40fda0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  40fda4:	add	x3, x3, #0x980
  40fda8:	add	x1, x1, #0x920
  40fdac:	add	x0, x0, #0x960
  40fdb0:	mov	w2, #0xb3                  	// #179
  40fdb4:	bl	402880 <__assert_fail@plt>
  40fdb8:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xef38>
  40fdbc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  40fdc0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  40fdc4:	add	x3, x3, #0x980
  40fdc8:	add	x1, x1, #0x920
  40fdcc:	add	x0, x0, #0x948
  40fdd0:	mov	w2, #0xb2                  	// #178
  40fdd4:	bl	402880 <__assert_fail@plt>
  40fdd8:	stp	x29, x30, [sp, #-32]!
  40fddc:	mov	x29, sp
  40fde0:	stp	x19, x20, [sp, #16]
  40fde4:	mov	x19, x0
  40fde8:	mov	x20, x1
  40fdec:	mov	x0, #0x10                  	// #16
  40fdf0:	bl	414080 <wcrtomb@plt+0x11760>
  40fdf4:	ldr	x1, [x19, #8]
  40fdf8:	stp	x1, x20, [x0]
  40fdfc:	str	x0, [x19, #8]
  40fe00:	ldp	x19, x20, [sp, #16]
  40fe04:	ldp	x29, x30, [sp], #32
  40fe08:	ret
  40fe0c:	nop
  40fe10:	and	w9, w1, #0x8000000
  40fe14:	and	w10, w1, #0x2
  40fe18:	and	w2, w1, #0x20
  40fe1c:	ldrb	w1, [x0]
  40fe20:	mov	x7, #0x401                 	// #1025
  40fe24:	mov	x5, #0x200                 	// #512
  40fe28:	mov	x8, #0x1                   	// #1
  40fe2c:	movk	x7, #0x8000, lsl #16
  40fe30:	mov	x6, #0x2180                	// #8576
  40fe34:	movk	x5, #0x4000, lsl #16
  40fe38:	cmp	w1, #0x40
  40fe3c:	add	x4, x0, #0x1
  40fe40:	b.hi	40fe8c <wcrtomb@plt+0xd56c>  // b.pmore
  40fe44:	cmp	w1, #0x20
  40fe48:	b.hi	40fe58 <wcrtomb@plt+0xd538>  // b.pmore
  40fe4c:	cbnz	w1, 40fe78 <wcrtomb@plt+0xd558>
  40fe50:	mov	w0, #0x0                   	// #0
  40fe54:	ret
  40fe58:	sub	w1, w1, #0x21
  40fe5c:	lsl	x1, x8, x1
  40fe60:	tst	x1, x7
  40fe64:	b.ne	40fec4 <wcrtomb@plt+0xd5a4>  // b.any
  40fe68:	tst	x1, x6
  40fe6c:	b.ne	40fea8 <wcrtomb@plt+0xd588>  // b.any
  40fe70:	tst	x1, x5
  40fe74:	b.ne	40feac <wcrtomb@plt+0xd58c>  // b.any
  40fe78:	ldrb	w1, [x0, #1]
  40fe7c:	mov	x0, x4
  40fe80:	add	x4, x0, #0x1
  40fe84:	cmp	w1, #0x40
  40fe88:	b.ls	40fe44 <wcrtomb@plt+0xd524>  // b.plast
  40fe8c:	cmp	w1, #0x5c
  40fe90:	b.eq	40fedc <wcrtomb@plt+0xd5bc>  // b.none
  40fe94:	b.ls	40feb4 <wcrtomb@plt+0xd594>  // b.plast
  40fe98:	sub	w1, w1, #0x7b
  40fe9c:	mov	w3, #0xfd                  	// #253
  40fea0:	tst	w1, w3
  40fea4:	b.ne	40fe78 <wcrtomb@plt+0xd558>  // b.any
  40fea8:	cbz	w9, 40fe78 <wcrtomb@plt+0xd558>
  40feac:	mov	w0, #0x1                   	// #1
  40feb0:	ret
  40feb4:	cmp	w1, #0x5b
  40feb8:	b.ne	40fe78 <wcrtomb@plt+0xd558>  // b.any
  40febc:	mov	w0, #0x1                   	// #1
  40fec0:	b	40feb0 <wcrtomb@plt+0xd590>
  40fec4:	cbz	w2, 40fe78 <wcrtomb@plt+0xd558>
  40fec8:	ldrb	w1, [x0, #1]
  40fecc:	cmp	w1, #0x28
  40fed0:	b.eq	40feac <wcrtomb@plt+0xd58c>  // b.none
  40fed4:	mov	x0, x4
  40fed8:	b	40fe38 <wcrtomb@plt+0xd518>
  40fedc:	cbnz	w9, 40fe78 <wcrtomb@plt+0xd558>
  40fee0:	cbnz	w10, 40fef4 <wcrtomb@plt+0xd5d4>
  40fee4:	ldrb	w1, [x0, #1]
  40fee8:	add	x0, x0, #0x2
  40feec:	cmp	w1, #0x0
  40fef0:	csel	x4, x0, x4, ne  // ne = any
  40fef4:	ldrb	w1, [x4]
  40fef8:	mov	x0, x4
  40fefc:	b	40fe38 <wcrtomb@plt+0xd518>
  40ff00:	mov	x0, #0x10                  	// #16
  40ff04:	b	414250 <wcrtomb@plt+0x11930>
  40ff08:	stp	x29, x30, [sp, #-64]!
  40ff0c:	mov	x29, sp
  40ff10:	stp	x21, x22, [sp, #32]
  40ff14:	ldr	x21, [x0]
  40ff18:	stp	x19, x20, [sp, #16]
  40ff1c:	str	x23, [sp, #48]
  40ff20:	mov	x23, x0
  40ff24:	cbz	x21, 40ff9c <wcrtomb@plt+0xd67c>
  40ff28:	ldr	w1, [x21, #8]
  40ff2c:	mov	x19, x21
  40ff30:	ldr	x21, [x21]
  40ff34:	cbz	w1, 40ffdc <wcrtomb@plt+0xd6bc>
  40ff38:	cmp	w1, #0x1
  40ff3c:	b.ne	40ff90 <wcrtomb@plt+0xd670>  // b.any
  40ff40:	ldr	x1, [x19, #32]
  40ff44:	ldr	x0, [x19, #16]
  40ff48:	cbz	x1, 40ff8c <wcrtomb@plt+0xd66c>
  40ff4c:	mov	x20, #0x0                   	// #0
  40ff50:	mov	x22, #0x0                   	// #0
  40ff54:	b	40ff60 <wcrtomb@plt+0xd640>
  40ff58:	cmp	x22, x1
  40ff5c:	b.cs	40ff8c <wcrtomb@plt+0xd66c>  // b.hs, b.nlast
  40ff60:	ldr	w2, [x0, x20]
  40ff64:	add	x3, x0, x20
  40ff68:	add	x22, x22, #0x1
  40ff6c:	add	x20, x20, #0x48
  40ff70:	tbz	w2, #27, 40ff58 <wcrtomb@plt+0xd638>
  40ff74:	add	x0, x3, #0x8
  40ff78:	bl	4237f0 <_obstack_memory_used@@Base+0xc728>
  40ff7c:	ldr	x1, [x19, #32]
  40ff80:	ldr	x0, [x19, #16]
  40ff84:	cmp	x22, x1
  40ff88:	b.cc	40ff60 <wcrtomb@plt+0xd640>  // b.lo, b.ul, b.last
  40ff8c:	bl	4026b0 <free@plt>
  40ff90:	mov	x0, x19
  40ff94:	bl	4026b0 <free@plt>
  40ff98:	cbnz	x21, 40ff28 <wcrtomb@plt+0xd608>
  40ff9c:	ldr	x19, [x23, #8]
  40ffa0:	cbz	x19, 40ffc4 <wcrtomb@plt+0xd6a4>
  40ffa4:	nop
  40ffa8:	mov	x20, x19
  40ffac:	ldr	x19, [x19]
  40ffb0:	ldr	x0, [x20, #8]
  40ffb4:	bl	4026b0 <free@plt>
  40ffb8:	mov	x0, x20
  40ffbc:	bl	4026b0 <free@plt>
  40ffc0:	cbnz	x19, 40ffa8 <wcrtomb@plt+0xd688>
  40ffc4:	mov	x0, x23
  40ffc8:	ldp	x19, x20, [sp, #16]
  40ffcc:	ldp	x21, x22, [sp, #32]
  40ffd0:	ldr	x23, [sp, #48]
  40ffd4:	ldp	x29, x30, [sp], #64
  40ffd8:	b	4026b0 <free@plt>
  40ffdc:	ldr	x0, [x19, #16]
  40ffe0:	bl	4112c8 <wcrtomb@plt+0xe9a8>
  40ffe4:	mov	x0, x19
  40ffe8:	bl	4026b0 <free@plt>
  40ffec:	cbnz	x21, 40ff28 <wcrtomb@plt+0xd608>
  40fff0:	b	40ff9c <wcrtomb@plt+0xd67c>
  40fff4:	nop
  40fff8:	stp	x29, x30, [sp, #-64]!
  40fffc:	mov	x29, sp
  410000:	stp	x21, x22, [sp, #32]
  410004:	mov	w21, w2
  410008:	tst	x21, #0x10000000
  41000c:	stp	x19, x20, [sp, #16]
  410010:	adrp	x20, 40f000 <wcrtomb@plt+0xc6e0>
  410014:	add	x3, x20, #0xae0
  410018:	str	x23, [sp, #48]
  41001c:	adrp	x20, 402000 <mbrtowc@plt-0x290>
  410020:	add	x20, x20, #0x700
  410024:	csel	x20, x20, x3, ne  // ne = any
  410028:	mov	x19, x1
  41002c:	mov	x23, x0
  410030:	blr	x20
  410034:	cmp	w0, #0x0
  410038:	mov	w1, w0
  41003c:	cset	w0, eq  // eq = none
  410040:	tbnz	w21, #30, 410068 <wcrtomb@plt+0xd748>
  410044:	ldrb	w3, [x19]
  410048:	cbz	w3, 410068 <wcrtomb@plt+0xd748>
  41004c:	cbz	w1, 4100ac <wcrtomb@plt+0xd78c>
  410050:	mov	x22, x19
  410054:	cmp	w3, #0x2f
  410058:	ldrb	w3, [x19, #1]!
  41005c:	b.eq	410088 <wcrtomb@plt+0xd768>  // b.none
  410060:	cbnz	w3, 410050 <wcrtomb@plt+0xd730>
  410064:	mov	w0, #0x0                   	// #0
  410068:	ldp	x19, x20, [sp, #16]
  41006c:	ldp	x21, x22, [sp, #32]
  410070:	ldr	x23, [sp, #48]
  410074:	ldp	x29, x30, [sp], #64
  410078:	ret
  41007c:	ldrb	w3, [x19, #1]
  410080:	mov	x22, x19
  410084:	add	x19, x19, #0x1
  410088:	cmp	w3, #0x2f
  41008c:	b.eq	41007c <wcrtomb@plt+0xd75c>  // b.none
  410090:	mov	w2, w21
  410094:	mov	x1, x19
  410098:	mov	x0, x23
  41009c:	blr	x20
  4100a0:	ldrb	w3, [x22, #1]
  4100a4:	cbz	w3, 4100c4 <wcrtomb@plt+0xd7a4>
  4100a8:	cbnz	w0, 410050 <wcrtomb@plt+0xd730>
  4100ac:	mov	w0, #0x1                   	// #1
  4100b0:	ldp	x19, x20, [sp, #16]
  4100b4:	ldp	x21, x22, [sp, #32]
  4100b8:	ldr	x23, [sp, #48]
  4100bc:	ldp	x29, x30, [sp], #64
  4100c0:	ret
  4100c4:	cmp	w0, #0x0
  4100c8:	cset	w0, eq  // eq = none
  4100cc:	b	410068 <wcrtomb@plt+0xd748>
  4100d0:	stp	x29, x30, [sp, #-80]!
  4100d4:	mov	x29, sp
  4100d8:	stp	x21, x22, [sp, #32]
  4100dc:	ldr	x22, [x0]
  4100e0:	cbz	x22, 410254 <wcrtomb@plt+0xd934>
  4100e4:	ldr	w0, [x22, #8]
  4100e8:	stp	x19, x20, [sp, #16]
  4100ec:	mov	x20, #0x0                   	// #0
  4100f0:	stp	x23, x24, [sp, #48]
  4100f4:	mov	x23, x1
  4100f8:	str	x25, [sp, #64]
  4100fc:	cbnz	w0, 4101d0 <wcrtomb@plt+0xd8b0>
  410100:	cbz	x20, 410234 <wcrtomb@plt+0xd914>
  410104:	ldr	w21, [x22, #12]
  410108:	mov	x19, x23
  41010c:	ldr	x25, [x22, #16]
  410110:	and	w24, w21, #0x8
  410114:	and	w21, w21, #0x40000000
  410118:	mov	x1, x19
  41011c:	mov	x0, x20
  410120:	bl	402730 <strcpy@plt>
  410124:	mov	x1, x20
  410128:	mov	x0, x25
  41012c:	bl	410e98 <wcrtomb@plt+0xe578>
  410130:	mov	x2, x0
  410134:	mov	w1, #0x2f                  	// #47
  410138:	mov	x0, x20
  41013c:	cbnz	x2, 41016c <wcrtomb@plt+0xd84c>
  410140:	cbz	w24, 4101a0 <wcrtomb@plt+0xd880>
  410144:	bl	4025a0 <strrchr@plt>
  410148:	cbz	x0, 4101a0 <wcrtomb@plt+0xd880>
  41014c:	strb	wzr, [x0]
  410150:	mov	x1, x20
  410154:	mov	x0, x25
  410158:	bl	410e98 <wcrtomb@plt+0xe578>
  41015c:	mov	x2, x0
  410160:	mov	w1, #0x2f                  	// #47
  410164:	mov	x0, x20
  410168:	cbz	x2, 410140 <wcrtomb@plt+0xd820>
  41016c:	mov	w19, #0x0                   	// #0
  410170:	mov	x0, x20
  410174:	bl	4026b0 <free@plt>
  410178:	ldr	w0, [x22, #12]
  41017c:	ldp	x21, x22, [sp, #32]
  410180:	eor	x0, x0, #0x20000000
  410184:	ldp	x23, x24, [sp, #48]
  410188:	ubfx	x0, x0, #29, #1
  41018c:	eor	w0, w19, w0
  410190:	ldp	x19, x20, [sp, #16]
  410194:	ldr	x25, [sp, #64]
  410198:	ldp	x29, x30, [sp], #80
  41019c:	ret
  4101a0:	cbnz	w21, 4101bc <wcrtomb@plt+0xd89c>
  4101a4:	mov	x0, x19
  4101a8:	mov	w1, #0x2f                  	// #47
  4101ac:	bl	4026e0 <strchr@plt>
  4101b0:	cbz	x0, 4101bc <wcrtomb@plt+0xd89c>
  4101b4:	add	x19, x0, #0x1
  4101b8:	b	410118 <wcrtomb@plt+0xd7f8>
  4101bc:	ldr	x0, [x22]
  4101c0:	cbz	x0, 41024c <wcrtomb@plt+0xd92c>
  4101c4:	mov	x22, x0
  4101c8:	ldr	w0, [x22, #8]
  4101cc:	cbz	w0, 410100 <wcrtomb@plt+0xd7e0>
  4101d0:	ldr	x24, [x22, #32]
  4101d4:	ldr	x19, [x22, #16]
  4101d8:	cbz	x24, 4101bc <wcrtomb@plt+0xd89c>
  4101dc:	add	x19, x19, #0x8
  4101e0:	mov	x21, #0x0                   	// #0
  4101e4:	b	41020c <wcrtomb@plt+0xd8ec>
  4101e8:	mov	x2, #0x0                   	// #0
  4101ec:	bl	423838 <_obstack_memory_used@@Base+0xc770>
  4101f0:	cmp	w0, #0x0
  4101f4:	cset	w0, eq  // eq = none
  4101f8:	add	x21, x21, #0x1
  4101fc:	cbnz	w0, 41016c <wcrtomb@plt+0xd84c>
  410200:	cmp	x24, x21
  410204:	add	x19, x19, #0x48
  410208:	b.eq	4101bc <wcrtomb@plt+0xd89c>  // b.none
  41020c:	ldur	w2, [x19, #-8]
  410210:	mov	x1, x23
  410214:	mov	x0, x19
  410218:	mov	w4, #0x0                   	// #0
  41021c:	mov	x3, #0x0                   	// #0
  410220:	tbnz	w2, #27, 4101e8 <wcrtomb@plt+0xd8c8>
  410224:	ldr	x0, [x19]
  410228:	bl	40fff8 <wcrtomb@plt+0xd6d8>
  41022c:	and	w0, w0, #0xff
  410230:	b	4101f8 <wcrtomb@plt+0xd8d8>
  410234:	mov	x0, x23
  410238:	bl	402300 <strlen@plt>
  41023c:	add	x0, x0, #0x1
  410240:	bl	414080 <wcrtomb@plt+0x11760>
  410244:	mov	x20, x0
  410248:	b	410104 <wcrtomb@plt+0xd7e4>
  41024c:	mov	w19, #0x1                   	// #1
  410250:	b	410170 <wcrtomb@plt+0xd850>
  410254:	mov	w0, #0x0                   	// #0
  410258:	ldp	x21, x22, [sp, #32]
  41025c:	ldp	x29, x30, [sp], #80
  410260:	ret
  410264:	nop
  410268:	stp	x29, x30, [sp, #-64]!
  41026c:	tst	w2, #0x18000000
  410270:	mov	x29, sp
  410274:	stp	x19, x20, [sp, #16]
  410278:	mov	x20, x0
  41027c:	mov	w19, w2
  410280:	stp	x21, x22, [sp, #32]
  410284:	mov	x22, x1
  410288:	ldr	x21, [x0]
  41028c:	b.eq	410344 <wcrtomb@plt+0xda24>  // b.none
  410290:	mov	w1, w2
  410294:	mov	x0, x22
  410298:	bl	40fe10 <wcrtomb@plt+0xd4f0>
  41029c:	tst	w0, #0xff
  4102a0:	b.eq	410344 <wcrtomb@plt+0xda24>  // b.none
  4102a4:	stp	x23, x24, [sp, #48]
  4102a8:	cbz	x21, 4102b8 <wcrtomb@plt+0xd998>
  4102ac:	ldr	w0, [x21, #8]
  4102b0:	cmp	w0, #0x1
  4102b4:	b.eq	41048c <wcrtomb@plt+0xdb6c>  // b.none
  4102b8:	mov	x0, #0x28                  	// #40
  4102bc:	bl	414250 <wcrtomb@plt+0x11930>
  4102c0:	mov	x21, x0
  4102c4:	mov	w1, #0x1                   	// #1
  4102c8:	ldr	x0, [x20]
  4102cc:	str	x21, [x20]
  4102d0:	str	x0, [x21]
  4102d4:	stp	w1, w19, [x21, #8]
  4102d8:	add	x24, x21, #0x10
  4102dc:	ldr	x0, [x21, #16]
  4102e0:	ldp	x1, x23, [x24, #8]
  4102e4:	cmp	x23, x1
  4102e8:	b.eq	41049c <wcrtomb@plt+0xdb7c>  // b.none
  4102ec:	add	x1, x23, x23, lsl #3
  4102f0:	add	x2, x23, #0x1
  4102f4:	str	x2, [x24, #16]
  4102f8:	lsl	x1, x1, #3
  4102fc:	add	x21, x0, x1
  410300:	str	w19, [x0, x1]
  410304:	tbz	w19, #27, 41041c <wcrtomb@plt+0xdafc>
  410308:	asr	w0, w19, #3
  41030c:	mov	w20, #0x9                   	// #9
  410310:	and	w0, w0, #0x2
  410314:	orr	w20, w0, w20
  410318:	tbz	w19, #3, 410518 <wcrtomb@plt+0xdbf8>
  41031c:	mov	x0, x22
  410320:	bl	402300 <strlen@plt>
  410324:	mov	x19, x0
  410328:	cbz	x19, 4104e4 <wcrtomb@plt+0xdbc4>
  41032c:	sub	x2, x19, #0x1
  410330:	ldrb	w0, [x22, x2]
  410334:	cmp	w0, #0x2f
  410338:	b.ne	41055c <wcrtomb@plt+0xdc3c>  // b.any
  41033c:	mov	x19, x2
  410340:	b	410328 <wcrtomb@plt+0xda08>
  410344:	cbz	x21, 410350 <wcrtomb@plt+0xda30>
  410348:	ldr	w0, [x21, #8]
  41034c:	cbz	w0, 4103e0 <wcrtomb@plt+0xdac0>
  410350:	mov	x0, #0x28                  	// #40
  410354:	bl	414250 <wcrtomb@plt+0x11930>
  410358:	stp	wzr, w19, [x0, #8]
  41035c:	mov	x21, x0
  410360:	tbnz	w19, #4, 410408 <wcrtomb@plt+0xdae8>
  410364:	adrp	x2, 40f000 <wcrtomb@plt+0xc6e0>
  410368:	adrp	x3, 40f000 <wcrtomb@plt+0xc6e0>
  41036c:	add	x2, x2, #0xad8
  410370:	add	x3, x3, #0xab8
  410374:	mov	x1, #0x0                   	// #0
  410378:	adrp	x4, 40f000 <wcrtomb@plt+0xc6e0>
  41037c:	mov	x0, #0x0                   	// #0
  410380:	add	x4, x4, #0xa90
  410384:	bl	411130 <wcrtomb@plt+0xe810>
  410388:	str	x0, [x21, #16]
  41038c:	ldr	x1, [x20]
  410390:	str	x1, [x21]
  410394:	str	x21, [x20]
  410398:	and	w19, w19, #0x1ffffffe
  41039c:	mov	x0, x22
  4103a0:	and	w19, w19, #0xf0000003
  4103a4:	bl	414288 <wcrtomb@plt+0x11968>
  4103a8:	mov	x20, x0
  4103ac:	mov	w0, #0x10000000            	// #268435456
  4103b0:	cmp	w19, w0
  4103b4:	b.eq	410438 <wcrtomb@plt+0xdb18>  // b.none
  4103b8:	ldr	x0, [x21, #16]
  4103bc:	mov	x1, x20
  4103c0:	bl	411688 <wcrtomb@plt+0xed68>
  4103c4:	cmp	x20, x0
  4103c8:	b.eq	410428 <wcrtomb@plt+0xdb08>  // b.none
  4103cc:	mov	x0, x20
  4103d0:	ldp	x19, x20, [sp, #16]
  4103d4:	ldp	x21, x22, [sp, #32]
  4103d8:	ldp	x29, x30, [sp], #64
  4103dc:	b	4026b0 <free@plt>
  4103e0:	ldr	w2, [x21, #12]
  4103e4:	eor	w2, w19, w2
  4103e8:	and	w2, w2, #0x7ffffff8
  4103ec:	and	w2, w2, #0xe000001f
  4103f0:	cbz	w2, 410398 <wcrtomb@plt+0xda78>
  4103f4:	mov	x0, #0x28                  	// #40
  4103f8:	bl	414250 <wcrtomb@plt+0x11930>
  4103fc:	stp	wzr, w19, [x0, #8]
  410400:	mov	x21, x0
  410404:	tbz	w19, #4, 410364 <wcrtomb@plt+0xda44>
  410408:	adrp	x2, 40f000 <wcrtomb@plt+0xc6e0>
  41040c:	adrp	x3, 40f000 <wcrtomb@plt+0xc6e0>
  410410:	add	x2, x2, #0xbc8
  410414:	add	x3, x3, #0xa98
  410418:	b	410374 <wcrtomb@plt+0xda54>
  41041c:	tbnz	w19, #26, 410538 <wcrtomb@plt+0xdc18>
  410420:	ldp	x23, x24, [sp, #48]
  410424:	str	x22, [x21, #8]
  410428:	ldp	x19, x20, [sp, #16]
  41042c:	ldp	x21, x22, [sp, #32]
  410430:	ldp	x29, x30, [sp], #64
  410434:	ret
  410438:	mov	x4, x20
  41043c:	mov	x5, x20
  410440:	mov	x2, x4
  410444:	ldrb	w3, [x2], #1
  410448:	cmp	w3, #0x5c
  41044c:	b.eq	41046c <wcrtomb@plt+0xdb4c>  // b.none
  410450:	strb	w3, [x5], #1
  410454:	cbz	w3, 4103b8 <wcrtomb@plt+0xda98>
  410458:	mov	x4, x2
  41045c:	mov	x2, x4
  410460:	ldrb	w3, [x2], #1
  410464:	cmp	w3, #0x5c
  410468:	b.ne	410450 <wcrtomb@plt+0xdb30>  // b.any
  41046c:	ldrb	w0, [x4, #1]
  410470:	cbz	w0, 410480 <wcrtomb@plt+0xdb60>
  410474:	mov	w3, w0
  410478:	add	x2, x4, #0x2
  41047c:	b	410450 <wcrtomb@plt+0xdb30>
  410480:	mov	x4, x2
  410484:	strb	w3, [x5], #1
  410488:	b	41045c <wcrtomb@plt+0xdb3c>
  41048c:	ldr	w0, [x21, #12]
  410490:	eor	w0, w19, w0
  410494:	tbz	w0, #29, 4102d8 <wcrtomb@plt+0xd9b8>
  410498:	b	4102b8 <wcrtomb@plt+0xd998>
  41049c:	cbz	x0, 4104f0 <wcrtomb@plt+0xdbd0>
  4104a0:	mov	x1, #0xf683                	// #63107
  4104a4:	movk	x1, #0xda12, lsl #16
  4104a8:	movk	x1, #0x684b, lsl #32
  4104ac:	movk	x1, #0x12f, lsl #48
  4104b0:	cmp	x23, x1
  4104b4:	b.hi	410514 <wcrtomb@plt+0xdbf4>  // b.pmore
  4104b8:	add	x1, x23, #0x1
  4104bc:	add	x23, x1, x23, lsr #1
  4104c0:	add	x1, x23, x23, lsl #3
  4104c4:	str	x23, [x21, #24]
  4104c8:	lsl	x1, x1, #3
  4104cc:	bl	4140e0 <wcrtomb@plt+0x117c0>
  4104d0:	ldr	x23, [x24, #16]
  4104d4:	str	x0, [x21, #16]
  4104d8:	b	4102ec <wcrtomb@plt+0xd9cc>
  4104dc:	ldr	x23, [x24, #16]
  4104e0:	sub	x23, x23, #0x1
  4104e4:	str	x23, [x24, #16]
  4104e8:	ldp	x23, x24, [sp, #48]
  4104ec:	b	410428 <wcrtomb@plt+0xdb08>
  4104f0:	cmp	x23, #0x0
  4104f4:	mov	x1, #0x48                  	// #72
  4104f8:	csinc	x23, x23, xzr, ne  // ne = any
  4104fc:	umulh	x2, x23, x1
  410500:	mul	x1, x23, x1
  410504:	cmp	x2, #0x0
  410508:	cset	x2, ne  // ne = any
  41050c:	tbnz	x1, #63, 410514 <wcrtomb@plt+0xdbf4>
  410510:	cbz	x2, 4104c0 <wcrtomb@plt+0xdba0>
  410514:	bl	4142c0 <wcrtomb@plt+0x119a0>
  410518:	mov	w2, w20
  41051c:	mov	x1, x22
  410520:	add	x0, x21, #0x8
  410524:	bl	423640 <_obstack_memory_used@@Base+0xc578>
  410528:	mov	w19, w0
  41052c:	cbnz	w19, 4104dc <wcrtomb@plt+0xdbbc>
  410530:	ldp	x23, x24, [sp, #48]
  410534:	b	410428 <wcrtomb@plt+0xdb08>
  410538:	mov	x0, x22
  41053c:	bl	414288 <wcrtomb@plt+0x11968>
  410540:	mov	x22, x0
  410544:	mov	x0, #0x10                  	// #16
  410548:	bl	414080 <wcrtomb@plt+0x11760>
  41054c:	ldr	x1, [x20, #8]
  410550:	stp	x1, x22, [x0]
  410554:	str	x0, [x20, #8]
  410558:	b	410420 <wcrtomb@plt+0xdb00>
  41055c:	add	x0, x19, #0x7
  410560:	bl	414080 <wcrtomb@plt+0x11760>
  410564:	mov	x1, x22
  410568:	mov	x2, x19
  41056c:	mov	x22, x0
  410570:	bl	4022a0 <memcpy@plt>
  410574:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xef38>
  410578:	add	x3, x3, #0x978
  41057c:	add	x4, x22, x19
  410580:	mov	w2, w20
  410584:	mov	x1, x22
  410588:	add	x0, x21, #0x8
  41058c:	ldr	w5, [x3]
  410590:	ldur	w3, [x3, #3]
  410594:	str	w5, [x22, x19]
  410598:	stur	w3, [x4, #3]
  41059c:	bl	423640 <_obstack_memory_used@@Base+0xc578>
  4105a0:	mov	w19, w0
  4105a4:	mov	x0, x22
  4105a8:	bl	4026b0 <free@plt>
  4105ac:	b	41052c <wcrtomb@plt+0xdc0c>
  4105b0:	stp	x29, x30, [sp, #-144]!
  4105b4:	mov	x29, sp
  4105b8:	stp	x19, x20, [sp, #16]
  4105bc:	and	w20, w4, #0xff
  4105c0:	mov	x19, #0x0                   	// #0
  4105c4:	stp	x21, x22, [sp, #32]
  4105c8:	mov	x21, x1
  4105cc:	mov	x22, x2
  4105d0:	stp	x23, x24, [sp, #48]
  4105d4:	mov	w24, w3
  4105d8:	stp	x25, x26, [sp, #64]
  4105dc:	mov	x25, x5
  4105e0:	stp	x27, x28, [sp, #80]
  4105e4:	mov	x27, #0x0                   	// #0
  4105e8:	str	x0, [sp, #104]
  4105ec:	str	xzr, [sp, #136]
  4105f0:	b	4105fc <wcrtomb@plt+0xdcdc>
  4105f4:	strb	w26, [x27, x19]
  4105f8:	add	x19, x19, #0x1
  4105fc:	ldp	x1, x2, [x22, #8]
  410600:	add	x3, x1, #0x1
  410604:	cmp	x1, x2
  410608:	b.cs	410634 <wcrtomb@plt+0xdd14>  // b.hs, b.nlast
  41060c:	str	x3, [x22, #8]
  410610:	ldrb	w26, [x1]
  410614:	ldr	x0, [sp, #136]
  410618:	cmp	x0, x19
  41061c:	b.ne	4105f4 <wcrtomb@plt+0xdcd4>  // b.any
  410620:	mov	x0, x27
  410624:	add	x1, sp, #0x88
  410628:	bl	4141c8 <wcrtomb@plt+0x118a8>
  41062c:	mov	x27, x0
  410630:	b	4105f4 <wcrtomb@plt+0xdcd4>
  410634:	mov	x0, x22
  410638:	bl	4028e0 <__uflow@plt>
  41063c:	cmn	w0, #0x1
  410640:	b.ne	410780 <wcrtomb@plt+0xde60>  // b.any
  410644:	ldr	w22, [x22]
  410648:	str	wzr, [sp, #116]
  41064c:	bl	402890 <__errno_location@plt>
  410650:	str	x0, [sp, #120]
  410654:	and	w22, w22, #0x20
  410658:	cbz	w22, 41066c <wcrtomb@plt+0xdd4c>
  41065c:	ldr	w22, [x0]
  410660:	cmp	w22, #0x0
  410664:	csetm	w0, ne  // ne = any
  410668:	str	w0, [sp, #116]
  41066c:	mov	x0, x27
  410670:	add	x1, x19, #0x1
  410674:	bl	4140e0 <wcrtomb@plt+0x117c0>
  410678:	strb	w20, [x0, x19]
  41067c:	mov	x26, x0
  410680:	cbz	x19, 410768 <wcrtomb@plt+0xde48>
  410684:	add	x1, x0, x19
  410688:	mov	x0, #0x10                  	// #16
  41068c:	ldurb	w1, [x1, #-1]
  410690:	cmp	w1, w20
  410694:	cinc	x19, x19, ne  // ne = any
  410698:	add	x19, x26, x19
  41069c:	bl	414080 <wcrtomb@plt+0x11760>
  4106a0:	ldr	x1, [x21, #8]
  4106a4:	stp	x1, x26, [x0]
  4106a8:	cmp	x26, x19
  4106ac:	str	x0, [x21, #8]
  4106b0:	b.cs	410714 <wcrtomb@plt+0xddf4>  // b.hs, b.nlast
  4106b4:	ubfiz	x27, x20, #1, #8
  4106b8:	mov	x28, x26
  4106bc:	b	4106c8 <wcrtomb@plt+0xdda8>
  4106c0:	cmp	x19, x26
  4106c4:	b.eq	410714 <wcrtomb@plt+0xddf4>  // b.none
  4106c8:	ldrb	w0, [x26]
  4106cc:	mov	x23, x26
  4106d0:	add	x26, x26, #0x1
  4106d4:	cmp	w0, w20
  4106d8:	b.ne	4106c0 <wcrtomb@plt+0xdda0>  // b.any
  4106dc:	bl	4026a0 <__ctype_b_loc@plt>
  4106e0:	ldr	x3, [x0]
  4106e4:	ldrh	w0, [x3, x27]
  4106e8:	tbnz	w0, #13, 41073c <wcrtomb@plt+0xde1c>
  4106ec:	ldr	x4, [sp, #104]
  4106f0:	strb	wzr, [x23]
  4106f4:	mov	x1, x28
  4106f8:	mov	x3, x25
  4106fc:	mov	w2, w24
  410700:	mov	x0, x21
  410704:	blr	x4
  410708:	mov	x28, x26
  41070c:	cmp	x19, x26
  410710:	b.ne	4106c8 <wcrtomb@plt+0xdda8>  // b.any
  410714:	ldr	x0, [sp, #120]
  410718:	ldp	x19, x20, [sp, #16]
  41071c:	ldp	x23, x24, [sp, #48]
  410720:	ldp	x25, x26, [sp, #64]
  410724:	ldp	x27, x28, [sp, #80]
  410728:	str	w22, [x0]
  41072c:	ldr	w0, [sp, #116]
  410730:	ldp	x21, x22, [sp, #32]
  410734:	ldp	x29, x30, [sp], #144
  410738:	ret
  41073c:	sub	x0, x26, #0x1
  410740:	cmp	x28, x0
  410744:	b.eq	410708 <wcrtomb@plt+0xdde8>  // b.none
  410748:	ldurb	w0, [x23, #-1]
  41074c:	ldrh	w0, [x3, x0, lsl #1]
  410750:	tbz	w0, #13, 4106ec <wcrtomb@plt+0xddcc>
  410754:	sub	x23, x23, #0x1
  410758:	cmp	x23, x28
  41075c:	b.ne	410748 <wcrtomb@plt+0xde28>  // b.any
  410760:	mov	x28, x26
  410764:	b	41070c <wcrtomb@plt+0xddec>
  410768:	mov	x0, #0x10                  	// #16
  41076c:	bl	414080 <wcrtomb@plt+0x11760>
  410770:	ldr	x1, [x21, #8]
  410774:	stp	x1, x26, [x0]
  410778:	str	x0, [x21, #8]
  41077c:	b	410714 <wcrtomb@plt+0xddf4>
  410780:	and	w26, w0, #0xff
  410784:	b	410614 <wcrtomb@plt+0xdcf4>
  410788:	stp	x29, x30, [sp, #-64]!
  41078c:	mov	x29, sp
  410790:	stp	x19, x20, [sp, #16]
  410794:	mov	x19, x1
  410798:	mov	w20, w3
  41079c:	stp	x21, x22, [sp, #32]
  4107a0:	and	w21, w4, #0xff
  4107a4:	str	x0, [sp, #56]
  4107a8:	mov	x0, x2
  4107ac:	ldrb	w2, [x2]
  4107b0:	cmp	w2, #0x2d
  4107b4:	b.eq	410810 <wcrtomb@plt+0xdef0>  // b.none
  4107b8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  4107bc:	add	x1, x1, #0x398
  4107c0:	bl	402410 <fopen@plt>
  4107c4:	mov	x22, x0
  4107c8:	cbz	x0, 41084c <wcrtomb@plt+0xdf2c>
  4107cc:	mov	x1, x19
  4107d0:	mov	w4, w21
  4107d4:	mov	w3, w20
  4107d8:	add	x5, sp, #0x38
  4107dc:	mov	x2, x22
  4107e0:	adrp	x0, 40f000 <wcrtomb@plt+0xc6e0>
  4107e4:	add	x0, x0, #0xa80
  4107e8:	bl	4105b0 <wcrtomb@plt+0xdc90>
  4107ec:	mov	w19, w0
  4107f0:	mov	x0, x22
  4107f4:	bl	4023e0 <fclose@plt>
  4107f8:	cbnz	w0, 41084c <wcrtomb@plt+0xdf2c>
  4107fc:	mov	w0, w19
  410800:	ldp	x19, x20, [sp, #16]
  410804:	ldp	x21, x22, [sp, #32]
  410808:	ldp	x29, x30, [sp], #64
  41080c:	ret
  410810:	ldrb	w2, [x0, #1]
  410814:	cbnz	w2, 4107b8 <wcrtomb@plt+0xde98>
  410818:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x26f38>
  41081c:	mov	w4, w21
  410820:	add	x5, sp, #0x38
  410824:	adrp	x0, 40f000 <wcrtomb@plt+0xc6e0>
  410828:	ldr	x2, [x2, #1120]
  41082c:	add	x0, x0, #0xa80
  410830:	bl	4105b0 <wcrtomb@plt+0xdc90>
  410834:	mov	w19, w0
  410838:	mov	w0, w19
  41083c:	ldp	x19, x20, [sp, #16]
  410840:	ldp	x21, x22, [sp, #32]
  410844:	ldp	x29, x30, [sp], #64
  410848:	ret
  41084c:	mov	w19, #0xffffffff            	// #-1
  410850:	b	4107fc <wcrtomb@plt+0xdedc>
  410854:	nop
  410858:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  41085c:	ldr	x0, [x0, #1128]
  410860:	ret
  410864:	nop
  410868:	ror	x2, x0, #3
  41086c:	udiv	x0, x2, x1
  410870:	msub	x0, x0, x1, x2
  410874:	ret
  410878:	cmp	x1, x0
  41087c:	cset	w0, eq  // eq = none
  410880:	ret
  410884:	nop
  410888:	stp	x29, x30, [sp, #-32]!
  41088c:	mov	x29, sp
  410890:	str	x19, [sp, #16]
  410894:	mov	x19, x0
  410898:	mov	x0, x1
  41089c:	ldr	x1, [x19, #16]
  4108a0:	ldr	x2, [x19, #48]
  4108a4:	blr	x2
  4108a8:	ldr	x1, [x19, #16]
  4108ac:	cmp	x1, x0
  4108b0:	b.ls	4108c8 <wcrtomb@plt+0xdfa8>  // b.plast
  4108b4:	ldr	x1, [x19]
  4108b8:	ldr	x19, [sp, #16]
  4108bc:	add	x0, x1, x0, lsl #4
  4108c0:	ldp	x29, x30, [sp], #32
  4108c4:	ret
  4108c8:	bl	4025f0 <abort@plt>
  4108cc:	nop
  4108d0:	stp	x29, x30, [sp, #-64]!
  4108d4:	mov	x29, sp
  4108d8:	str	x23, [sp, #48]
  4108dc:	mov	x23, x2
  4108e0:	stp	x19, x20, [sp, #16]
  4108e4:	mov	x20, x1
  4108e8:	stp	x21, x22, [sp, #32]
  4108ec:	and	w22, w3, #0xff
  4108f0:	mov	x21, x0
  4108f4:	bl	410888 <wcrtomb@plt+0xdf68>
  4108f8:	str	x0, [x23]
  4108fc:	ldr	x1, [x0]
  410900:	cbz	x1, 41098c <wcrtomb@plt+0xe06c>
  410904:	mov	x19, x0
  410908:	cmp	x1, x20
  41090c:	b.eq	4109e4 <wcrtomb@plt+0xe0c4>  // b.none
  410910:	ldr	x2, [x21, #56]
  410914:	mov	x0, x20
  410918:	blr	x2
  41091c:	tst	w0, #0xff
  410920:	b.eq	410984 <wcrtomb@plt+0xe064>  // b.none
  410924:	ldr	x0, [x19]
  410928:	cbz	w22, 410990 <wcrtomb@plt+0xe070>
  41092c:	ldr	x1, [x19, #8]
  410930:	cbz	x1, 4109dc <wcrtomb@plt+0xe0bc>
  410934:	ldp	x2, x3, [x1]
  410938:	stp	x2, x3, [x19]
  41093c:	str	xzr, [x1]
  410940:	ldp	x19, x20, [sp, #16]
  410944:	ldr	x2, [x21, #72]
  410948:	str	x2, [x1, #8]
  41094c:	str	x1, [x21, #72]
  410950:	ldp	x21, x22, [sp, #32]
  410954:	ldr	x23, [sp, #48]
  410958:	ldp	x29, x30, [sp], #64
  41095c:	ret
  410960:	ldr	x1, [x2]
  410964:	mov	x0, x20
  410968:	cmp	x1, x20
  41096c:	b.eq	4109a4 <wcrtomb@plt+0xe084>  // b.none
  410970:	ldr	x2, [x21, #56]
  410974:	blr	x2
  410978:	tst	w0, #0xff
  41097c:	b.ne	4109a4 <wcrtomb@plt+0xe084>  // b.any
  410980:	ldr	x19, [x19, #8]
  410984:	ldr	x2, [x19, #8]
  410988:	cbnz	x2, 410960 <wcrtomb@plt+0xe040>
  41098c:	mov	x0, #0x0                   	// #0
  410990:	ldp	x19, x20, [sp, #16]
  410994:	ldp	x21, x22, [sp, #32]
  410998:	ldr	x23, [sp, #48]
  41099c:	ldp	x29, x30, [sp], #64
  4109a0:	ret
  4109a4:	ldr	x1, [x19, #8]
  4109a8:	ldr	x0, [x1]
  4109ac:	cbz	w22, 410990 <wcrtomb@plt+0xe070>
  4109b0:	ldr	x2, [x1, #8]
  4109b4:	str	x2, [x19, #8]
  4109b8:	str	xzr, [x1]
  4109bc:	ldp	x19, x20, [sp, #16]
  4109c0:	ldr	x2, [x21, #72]
  4109c4:	str	x2, [x1, #8]
  4109c8:	str	x1, [x21, #72]
  4109cc:	ldp	x21, x22, [sp, #32]
  4109d0:	ldr	x23, [sp, #48]
  4109d4:	ldp	x29, x30, [sp], #64
  4109d8:	ret
  4109dc:	str	xzr, [x19]
  4109e0:	b	410990 <wcrtomb@plt+0xe070>
  4109e4:	mov	x0, x1
  4109e8:	b	410928 <wcrtomb@plt+0xe008>
  4109ec:	nop
  4109f0:	ldr	x3, [x0]
  4109f4:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xef38>
  4109f8:	add	x2, x2, #0xa08
  4109fc:	mov	x1, x0
  410a00:	cmp	x3, x2
  410a04:	b.eq	410a8c <wcrtomb@plt+0xe16c>  // b.none
  410a08:	mov	w0, #0xcccd                	// #52429
  410a0c:	ldr	s1, [x3, #8]
  410a10:	movk	w0, #0x3dcc, lsl #16
  410a14:	fmov	s0, w0
  410a18:	fcmpe	s1, s0
  410a1c:	b.le	410a80 <wcrtomb@plt+0xe160>
  410a20:	mov	w0, #0x6666                	// #26214
  410a24:	movk	w0, #0x3f66, lsl #16
  410a28:	fmov	s2, w0
  410a2c:	fcmpe	s1, s2
  410a30:	b.pl	410a80 <wcrtomb@plt+0xe160>  // b.nfrst
  410a34:	mov	w0, #0xcccd                	// #52429
  410a38:	ldr	s3, [x3, #12]
  410a3c:	movk	w0, #0x3f8c, lsl #16
  410a40:	fmov	s2, w0
  410a44:	fcmpe	s3, s2
  410a48:	b.le	410a80 <wcrtomb@plt+0xe160>
  410a4c:	ldr	s2, [x3]
  410a50:	fcmpe	s2, #0.0
  410a54:	b.lt	410a80 <wcrtomb@plt+0xe160>  // b.tstop
  410a58:	fadd	s0, s2, s0
  410a5c:	ldr	s2, [x3, #4]
  410a60:	fcmpe	s0, s2
  410a64:	b.pl	410a80 <wcrtomb@plt+0xe160>  // b.nfrst
  410a68:	fmov	s3, #1.000000000000000000e+00
  410a6c:	fcmpe	s2, s3
  410a70:	b.hi	410a80 <wcrtomb@plt+0xe160>  // b.pmore
  410a74:	fcmpe	s1, s0
  410a78:	mov	w0, #0x1                   	// #1
  410a7c:	b.gt	410a88 <wcrtomb@plt+0xe168>
  410a80:	mov	w0, #0x0                   	// #0
  410a84:	str	x2, [x1]
  410a88:	ret
  410a8c:	mov	w0, #0x1                   	// #1
  410a90:	ret
  410a94:	nop
  410a98:	tst	w1, #0xff
  410a9c:	b.ne	410ac0 <wcrtomb@plt+0xe1a0>  // b.any
  410aa0:	ucvtf	s1, x0
  410aa4:	mov	w0, #0x5f800000            	// #1602224128
  410aa8:	fmov	s2, w0
  410aac:	mov	x0, #0x0                   	// #0
  410ab0:	fdiv	s0, s1, s0
  410ab4:	fcmpe	s0, s2
  410ab8:	b.ge	410b40 <wcrtomb@plt+0xe220>  // b.tcont
  410abc:	fcvtzu	x0, s0
  410ac0:	cmp	x0, #0xa
  410ac4:	mov	x1, #0xa                   	// #10
  410ac8:	csel	x0, x0, x1, cs  // cs = hs, nlast
  410acc:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  410ad0:	orr	x0, x0, #0x1
  410ad4:	movk	x5, #0xaaab
  410ad8:	cmn	x0, #0x1
  410adc:	b.eq	410b3c <wcrtomb@plt+0xe21c>  // b.none
  410ae0:	umulh	x1, x0, x5
  410ae4:	cmp	x0, #0x9
  410ae8:	and	x2, x1, #0xfffffffffffffffe
  410aec:	add	x1, x2, x1, lsr #1
  410af0:	sub	x1, x0, x1
  410af4:	b.ls	410b2c <wcrtomb@plt+0xe20c>  // b.plast
  410af8:	cbz	x1, 410b30 <wcrtomb@plt+0xe210>
  410afc:	mov	x4, #0x10                  	// #16
  410b00:	mov	x3, #0x9                   	// #9
  410b04:	mov	x2, #0x3                   	// #3
  410b08:	b	410b10 <wcrtomb@plt+0xe1f0>
  410b0c:	cbz	x1, 410b30 <wcrtomb@plt+0xe210>
  410b10:	add	x2, x2, #0x2
  410b14:	add	x3, x3, x4
  410b18:	cmp	x0, x3
  410b1c:	add	x4, x4, #0x8
  410b20:	udiv	x1, x0, x2
  410b24:	msub	x1, x1, x2, x0
  410b28:	b.hi	410b0c <wcrtomb@plt+0xe1ec>  // b.pmore
  410b2c:	cbnz	x1, 410b44 <wcrtomb@plt+0xe224>
  410b30:	add	x0, x0, #0x2
  410b34:	cmn	x0, #0x1
  410b38:	b.ne	410ae0 <wcrtomb@plt+0xe1c0>  // b.any
  410b3c:	mov	x0, #0x0                   	// #0
  410b40:	ret
  410b44:	cmp	xzr, x0, lsr #61
  410b48:	cset	x1, ne  // ne = any
  410b4c:	tbnz	x0, #60, 410b3c <wcrtomb@plt+0xe21c>
  410b50:	cbnz	x1, 410b3c <wcrtomb@plt+0xe21c>
  410b54:	ret
  410b58:	stp	x29, x30, [sp, #-64]!
  410b5c:	mov	x29, sp
  410b60:	stp	x19, x20, [sp, #16]
  410b64:	mov	x20, x0
  410b68:	stp	x21, x22, [sp, #32]
  410b6c:	ldp	x22, x0, [x1]
  410b70:	stp	x23, x24, [sp, #48]
  410b74:	mov	x23, x1
  410b78:	and	w24, w2, #0xff
  410b7c:	cmp	x22, x0
  410b80:	b.cc	410b94 <wcrtomb@plt+0xe274>  // b.lo, b.ul, b.last
  410b84:	b	410bf4 <wcrtomb@plt+0xe2d4>
  410b88:	add	x22, x22, #0x10
  410b8c:	cmp	x0, x22
  410b90:	b.ls	410bf4 <wcrtomb@plt+0xe2d4>  // b.plast
  410b94:	ldr	x21, [x22]
  410b98:	cbz	x21, 410b88 <wcrtomb@plt+0xe268>
  410b9c:	ldr	x19, [x22, #8]
  410ba0:	cbz	x19, 410bdc <wcrtomb@plt+0xe2bc>
  410ba4:	nop
  410ba8:	ldr	x21, [x19]
  410bac:	mov	x0, x20
  410bb0:	mov	x1, x21
  410bb4:	bl	410888 <wcrtomb@plt+0xdf68>
  410bb8:	ldr	x3, [x0]
  410bbc:	mov	x2, x19
  410bc0:	ldr	x19, [x19, #8]
  410bc4:	cbz	x3, 410c10 <wcrtomb@plt+0xe2f0>
  410bc8:	ldr	x1, [x0, #8]
  410bcc:	str	x1, [x2, #8]
  410bd0:	str	x2, [x0, #8]
  410bd4:	cbnz	x19, 410ba8 <wcrtomb@plt+0xe288>
  410bd8:	ldr	x21, [x22]
  410bdc:	str	xzr, [x22, #8]
  410be0:	cbz	w24, 410c38 <wcrtomb@plt+0xe318>
  410be4:	ldr	x0, [x23, #8]
  410be8:	add	x22, x22, #0x10
  410bec:	cmp	x0, x22
  410bf0:	b.hi	410b94 <wcrtomb@plt+0xe274>  // b.pmore
  410bf4:	mov	w24, #0x1                   	// #1
  410bf8:	mov	w0, w24
  410bfc:	ldp	x19, x20, [sp, #16]
  410c00:	ldp	x21, x22, [sp, #32]
  410c04:	ldp	x23, x24, [sp, #48]
  410c08:	ldp	x29, x30, [sp], #64
  410c0c:	ret
  410c10:	ldr	x1, [x20, #24]
  410c14:	str	x21, [x0]
  410c18:	add	x1, x1, #0x1
  410c1c:	str	x1, [x20, #24]
  410c20:	str	xzr, [x2]
  410c24:	ldr	x0, [x20, #72]
  410c28:	str	x0, [x2, #8]
  410c2c:	str	x2, [x20, #72]
  410c30:	cbnz	x19, 410ba8 <wcrtomb@plt+0xe288>
  410c34:	b	410bd8 <wcrtomb@plt+0xe2b8>
  410c38:	mov	x1, x21
  410c3c:	mov	x0, x20
  410c40:	bl	410888 <wcrtomb@plt+0xdf68>
  410c44:	mov	x19, x0
  410c48:	ldr	x0, [x0]
  410c4c:	cbz	x0, 410c84 <wcrtomb@plt+0xe364>
  410c50:	ldr	x0, [x20, #72]
  410c54:	cbz	x0, 410c98 <wcrtomb@plt+0xe378>
  410c58:	ldr	x1, [x0, #8]
  410c5c:	str	x1, [x20, #72]
  410c60:	ldr	x1, [x19, #8]
  410c64:	stp	x21, x1, [x0]
  410c68:	str	x0, [x19, #8]
  410c6c:	ldr	x1, [x23, #24]
  410c70:	str	xzr, [x22]
  410c74:	sub	x1, x1, #0x1
  410c78:	str	x1, [x23, #24]
  410c7c:	ldr	x0, [x23, #8]
  410c80:	b	410b88 <wcrtomb@plt+0xe268>
  410c84:	ldr	x0, [x20, #24]
  410c88:	str	x21, [x19]
  410c8c:	add	x0, x0, #0x1
  410c90:	str	x0, [x20, #24]
  410c94:	b	410c6c <wcrtomb@plt+0xe34c>
  410c98:	mov	x0, #0x10                  	// #16
  410c9c:	bl	402440 <malloc@plt>
  410ca0:	cbnz	x0, 410c60 <wcrtomb@plt+0xe340>
  410ca4:	mov	w0, w24
  410ca8:	ldp	x19, x20, [sp, #16]
  410cac:	ldp	x21, x22, [sp, #32]
  410cb0:	ldp	x23, x24, [sp, #48]
  410cb4:	ldp	x29, x30, [sp], #64
  410cb8:	ret
  410cbc:	nop
  410cc0:	ldr	x0, [x0, #16]
  410cc4:	ret
  410cc8:	ldr	x0, [x0, #24]
  410ccc:	ret
  410cd0:	ldr	x0, [x0, #32]
  410cd4:	ret
  410cd8:	ldp	x3, x4, [x0]
  410cdc:	mov	x0, #0x0                   	// #0
  410ce0:	cmp	x3, x4
  410ce4:	b.cc	410cf8 <wcrtomb@plt+0xe3d8>  // b.lo, b.ul, b.last
  410ce8:	b	410d30 <wcrtomb@plt+0xe410>
  410cec:	add	x3, x3, #0x10
  410cf0:	cmp	x3, x4
  410cf4:	b.cs	410d30 <wcrtomb@plt+0xe410>  // b.hs, b.nlast
  410cf8:	ldr	x1, [x3]
  410cfc:	cbz	x1, 410cec <wcrtomb@plt+0xe3cc>
  410d00:	ldr	x1, [x3, #8]
  410d04:	mov	x2, #0x1                   	// #1
  410d08:	cbz	x1, 410d1c <wcrtomb@plt+0xe3fc>
  410d0c:	nop
  410d10:	ldr	x1, [x1, #8]
  410d14:	add	x2, x2, #0x1
  410d18:	cbnz	x1, 410d10 <wcrtomb@plt+0xe3f0>
  410d1c:	cmp	x0, x2
  410d20:	add	x3, x3, #0x10
  410d24:	csel	x0, x0, x2, cs  // cs = hs, nlast
  410d28:	cmp	x3, x4
  410d2c:	b.cc	410cf8 <wcrtomb@plt+0xe3d8>  // b.lo, b.ul, b.last
  410d30:	ret
  410d34:	nop
  410d38:	ldp	x3, x4, [x0]
  410d3c:	mov	x6, x0
  410d40:	mov	x2, #0x0                   	// #0
  410d44:	mov	x5, #0x0                   	// #0
  410d48:	cmp	x3, x4
  410d4c:	b.cc	410d60 <wcrtomb@plt+0xe440>  // b.lo, b.ul, b.last
  410d50:	b	410d90 <wcrtomb@plt+0xe470>
  410d54:	add	x3, x3, #0x10
  410d58:	cmp	x3, x4
  410d5c:	b.cs	410d90 <wcrtomb@plt+0xe470>  // b.hs, b.nlast
  410d60:	ldr	x1, [x3]
  410d64:	cbz	x1, 410d54 <wcrtomb@plt+0xe434>
  410d68:	ldr	x1, [x3, #8]
  410d6c:	add	x5, x5, #0x1
  410d70:	add	x2, x2, #0x1
  410d74:	cbz	x1, 410d54 <wcrtomb@plt+0xe434>
  410d78:	ldr	x1, [x1, #8]
  410d7c:	add	x2, x2, #0x1
  410d80:	cbnz	x1, 410d78 <wcrtomb@plt+0xe458>
  410d84:	add	x3, x3, #0x10
  410d88:	cmp	x3, x4
  410d8c:	b.cc	410d60 <wcrtomb@plt+0xe440>  // b.lo, b.ul, b.last
  410d90:	ldr	x1, [x6, #24]
  410d94:	mov	w0, #0x0                   	// #0
  410d98:	cmp	x1, x5
  410d9c:	b.eq	410da4 <wcrtomb@plt+0xe484>  // b.none
  410da0:	ret
  410da4:	ldr	x0, [x6, #32]
  410da8:	cmp	x0, x2
  410dac:	cset	w0, eq  // eq = none
  410db0:	ret
  410db4:	nop
  410db8:	stp	x29, x30, [sp, #-48]!
  410dbc:	mov	x29, sp
  410dc0:	ldp	x4, x5, [x0]
  410dc4:	stp	x19, x20, [sp, #16]
  410dc8:	mov	x20, x1
  410dcc:	stp	x21, x22, [sp, #32]
  410dd0:	mov	x19, #0x0                   	// #0
  410dd4:	ldp	x21, x22, [x0, #16]
  410dd8:	cmp	x4, x5
  410ddc:	ldr	x2, [x0, #32]
  410de0:	b.cc	410df4 <wcrtomb@plt+0xe4d4>  // b.lo, b.ul, b.last
  410de4:	b	410e28 <wcrtomb@plt+0xe508>
  410de8:	add	x4, x4, #0x10
  410dec:	cmp	x4, x5
  410df0:	b.cs	410e28 <wcrtomb@plt+0xe508>  // b.hs, b.nlast
  410df4:	ldr	x0, [x4]
  410df8:	cbz	x0, 410de8 <wcrtomb@plt+0xe4c8>
  410dfc:	ldr	x0, [x4, #8]
  410e00:	mov	x3, #0x1                   	// #1
  410e04:	cbz	x0, 410e14 <wcrtomb@plt+0xe4f4>
  410e08:	ldr	x0, [x0, #8]
  410e0c:	add	x3, x3, #0x1
  410e10:	cbnz	x0, 410e08 <wcrtomb@plt+0xe4e8>
  410e14:	cmp	x19, x3
  410e18:	add	x4, x4, #0x10
  410e1c:	csel	x19, x19, x3, cs  // cs = hs, nlast
  410e20:	cmp	x4, x5
  410e24:	b.cc	410df4 <wcrtomb@plt+0xe4d4>  // b.lo, b.ul, b.last
  410e28:	mov	x0, x20
  410e2c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  410e30:	add	x1, x1, #0x998
  410e34:	bl	4028d0 <fprintf@plt>
  410e38:	mov	x2, x21
  410e3c:	mov	x0, x20
  410e40:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  410e44:	add	x1, x1, #0x9b0
  410e48:	bl	4028d0 <fprintf@plt>
  410e4c:	ucvtf	d1, x22
  410e50:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  410e54:	fmov	d2, x0
  410e58:	ucvtf	d0, x21
  410e5c:	mov	x2, x22
  410e60:	mov	x0, x20
  410e64:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  410e68:	add	x1, x1, #0x9c8
  410e6c:	fmul	d1, d1, d2
  410e70:	fdiv	d0, d1, d0
  410e74:	bl	4028d0 <fprintf@plt>
  410e78:	mov	x2, x19
  410e7c:	mov	x0, x20
  410e80:	ldp	x19, x20, [sp, #16]
  410e84:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  410e88:	ldp	x21, x22, [sp, #32]
  410e8c:	add	x1, x1, #0x9f0
  410e90:	ldp	x29, x30, [sp], #48
  410e94:	b	4028d0 <fprintf@plt>
  410e98:	stp	x29, x30, [sp, #-48]!
  410e9c:	mov	x29, sp
  410ea0:	stp	x19, x20, [sp, #16]
  410ea4:	mov	x20, x1
  410ea8:	str	x21, [sp, #32]
  410eac:	mov	x21, x0
  410eb0:	bl	410888 <wcrtomb@plt+0xdf68>
  410eb4:	ldr	x1, [x0]
  410eb8:	cbz	x1, 410eec <wcrtomb@plt+0xe5cc>
  410ebc:	mov	x19, x0
  410ec0:	b	410ec8 <wcrtomb@plt+0xe5a8>
  410ec4:	ldr	x1, [x19]
  410ec8:	mov	x0, x20
  410ecc:	cmp	x1, x20
  410ed0:	b.eq	410f04 <wcrtomb@plt+0xe5e4>  // b.none
  410ed4:	ldr	x2, [x21, #56]
  410ed8:	blr	x2
  410edc:	tst	w0, #0xff
  410ee0:	b.ne	410f00 <wcrtomb@plt+0xe5e0>  // b.any
  410ee4:	ldr	x19, [x19, #8]
  410ee8:	cbnz	x19, 410ec4 <wcrtomb@plt+0xe5a4>
  410eec:	mov	x0, #0x0                   	// #0
  410ef0:	ldp	x19, x20, [sp, #16]
  410ef4:	ldr	x21, [sp, #32]
  410ef8:	ldp	x29, x30, [sp], #48
  410efc:	ret
  410f00:	ldr	x20, [x19]
  410f04:	mov	x0, x20
  410f08:	ldp	x19, x20, [sp, #16]
  410f0c:	ldr	x21, [sp, #32]
  410f10:	ldp	x29, x30, [sp], #48
  410f14:	ret
  410f18:	ldr	x1, [x0, #32]
  410f1c:	cbz	x1, 410f48 <wcrtomb@plt+0xe628>
  410f20:	ldp	x1, x2, [x0]
  410f24:	cmp	x1, x2
  410f28:	b.cc	410f3c <wcrtomb@plt+0xe61c>  // b.lo, b.ul, b.last
  410f2c:	b	410f50 <wcrtomb@plt+0xe630>
  410f30:	add	x1, x1, #0x10
  410f34:	cmp	x1, x2
  410f38:	b.cs	410f50 <wcrtomb@plt+0xe630>  // b.hs, b.nlast
  410f3c:	ldr	x0, [x1]
  410f40:	cbz	x0, 410f30 <wcrtomb@plt+0xe610>
  410f44:	ret
  410f48:	mov	x0, #0x0                   	// #0
  410f4c:	ret
  410f50:	stp	x29, x30, [sp, #-16]!
  410f54:	mov	x29, sp
  410f58:	bl	4025f0 <abort@plt>
  410f5c:	nop
  410f60:	stp	x29, x30, [sp, #-32]!
  410f64:	mov	x29, sp
  410f68:	stp	x19, x20, [sp, #16]
  410f6c:	mov	x20, x0
  410f70:	mov	x19, x1
  410f74:	bl	410888 <wcrtomb@plt+0xdf68>
  410f78:	mov	x3, x0
  410f7c:	mov	x2, x0
  410f80:	b	410f88 <wcrtomb@plt+0xe668>
  410f84:	cbz	x2, 410f98 <wcrtomb@plt+0xe678>
  410f88:	ldp	x4, x2, [x2]
  410f8c:	cmp	x4, x19
  410f90:	b.ne	410f84 <wcrtomb@plt+0xe664>  // b.any
  410f94:	cbnz	x2, 410fc4 <wcrtomb@plt+0xe6a4>
  410f98:	ldr	x1, [x20, #8]
  410f9c:	b	410fa8 <wcrtomb@plt+0xe688>
  410fa0:	ldr	x0, [x3]
  410fa4:	cbnz	x0, 410fb8 <wcrtomb@plt+0xe698>
  410fa8:	add	x3, x3, #0x10
  410fac:	cmp	x1, x3
  410fb0:	b.hi	410fa0 <wcrtomb@plt+0xe680>  // b.pmore
  410fb4:	mov	x0, #0x0                   	// #0
  410fb8:	ldp	x19, x20, [sp, #16]
  410fbc:	ldp	x29, x30, [sp], #32
  410fc0:	ret
  410fc4:	ldr	x0, [x2]
  410fc8:	ldp	x19, x20, [sp, #16]
  410fcc:	ldp	x29, x30, [sp], #32
  410fd0:	ret
  410fd4:	nop
  410fd8:	ldp	x5, x3, [x0]
  410fdc:	mov	x6, x0
  410fe0:	cmp	x3, x5
  410fe4:	b.ls	411034 <wcrtomb@plt+0xe714>  // b.plast
  410fe8:	sub	x4, x1, #0x8
  410fec:	mov	x0, #0x0                   	// #0
  410ff0:	ldr	x1, [x5]
  410ff4:	cbnz	x1, 411008 <wcrtomb@plt+0xe6e8>
  410ff8:	add	x5, x5, #0x10
  410ffc:	cmp	x3, x5
  411000:	b.hi	410ff0 <wcrtomb@plt+0xe6d0>  // b.pmore
  411004:	ret
  411008:	mov	x1, x5
  41100c:	nop
  411010:	cmp	x2, x0
  411014:	b.ls	411004 <wcrtomb@plt+0xe6e4>  // b.plast
  411018:	add	x0, x0, #0x1
  41101c:	ldr	x3, [x1]
  411020:	str	x3, [x4, x0, lsl #3]
  411024:	ldr	x1, [x1, #8]
  411028:	cbnz	x1, 411010 <wcrtomb@plt+0xe6f0>
  41102c:	ldr	x3, [x6, #8]
  411030:	b	410ff8 <wcrtomb@plt+0xe6d8>
  411034:	mov	x0, #0x0                   	// #0
  411038:	ret
  41103c:	nop
  411040:	stp	x29, x30, [sp, #-64]!
  411044:	mov	x29, sp
  411048:	stp	x21, x22, [sp, #32]
  41104c:	mov	x21, x1
  411050:	stp	x23, x24, [sp, #48]
  411054:	ldp	x23, x1, [x0]
  411058:	stp	x19, x20, [sp, #16]
  41105c:	cmp	x1, x23
  411060:	b.ls	4110cc <wcrtomb@plt+0xe7ac>  // b.plast
  411064:	mov	x24, x0
  411068:	mov	x22, x2
  41106c:	mov	x20, #0x0                   	// #0
  411070:	ldr	x0, [x23]
  411074:	cbnz	x0, 41109c <wcrtomb@plt+0xe77c>
  411078:	add	x23, x23, #0x10
  41107c:	cmp	x1, x23
  411080:	b.hi	411070 <wcrtomb@plt+0xe750>  // b.pmore
  411084:	mov	x0, x20
  411088:	ldp	x19, x20, [sp, #16]
  41108c:	ldp	x21, x22, [sp, #32]
  411090:	ldp	x23, x24, [sp, #48]
  411094:	ldp	x29, x30, [sp], #64
  411098:	ret
  41109c:	mov	x19, x23
  4110a0:	b	4110a8 <wcrtomb@plt+0xe788>
  4110a4:	ldr	x0, [x19]
  4110a8:	mov	x1, x22
  4110ac:	blr	x21
  4110b0:	tst	w0, #0xff
  4110b4:	b.eq	411084 <wcrtomb@plt+0xe764>  // b.none
  4110b8:	ldr	x19, [x19, #8]
  4110bc:	add	x20, x20, #0x1
  4110c0:	cbnz	x19, 4110a4 <wcrtomb@plt+0xe784>
  4110c4:	ldr	x1, [x24, #8]
  4110c8:	b	411078 <wcrtomb@plt+0xe758>
  4110cc:	mov	x20, #0x0                   	// #0
  4110d0:	b	411084 <wcrtomb@plt+0xe764>
  4110d4:	nop
  4110d8:	ldrb	w4, [x0]
  4110dc:	mov	x2, #0x0                   	// #0
  4110e0:	cbz	w4, 411104 <wcrtomb@plt+0xe7e4>
  4110e4:	nop
  4110e8:	lsl	x3, x2, #5
  4110ec:	sub	x2, x3, x2
  4110f0:	add	x2, x2, w4, uxtb
  4110f4:	ldrb	w4, [x0, #1]!
  4110f8:	udiv	x3, x2, x1
  4110fc:	msub	x2, x3, x1, x2
  411100:	cbnz	w4, 4110e8 <wcrtomb@plt+0xe7c8>
  411104:	mov	x0, x2
  411108:	ret
  41110c:	nop
  411110:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  411114:	add	x1, x1, #0xa08
  411118:	ldp	x2, x3, [x1]
  41111c:	stp	x2, x3, [x0]
  411120:	ldr	w1, [x1, #16]
  411124:	str	w1, [x0, #16]
  411128:	ret
  41112c:	nop
  411130:	stp	x29, x30, [sp, #-64]!
  411134:	cmp	x2, #0x0
  411138:	mov	x29, sp
  41113c:	stp	x21, x22, [sp, #32]
  411140:	mov	x22, x2
  411144:	adrp	x2, 410000 <wcrtomb@plt+0xd6e0>
  411148:	add	x2, x2, #0x868
  41114c:	stp	x19, x20, [sp, #16]
  411150:	csel	x22, x2, x22, eq  // eq = none
  411154:	cmp	x3, #0x0
  411158:	adrp	x2, 410000 <wcrtomb@plt+0xd6e0>
  41115c:	add	x2, x2, #0x878
  411160:	mov	x20, x1
  411164:	csel	x21, x2, x3, eq  // eq = none
  411168:	stp	x23, x24, [sp, #48]
  41116c:	mov	x24, x0
  411170:	mov	x23, x4
  411174:	mov	x0, #0x50                  	// #80
  411178:	bl	402440 <malloc@plt>
  41117c:	mov	x19, x0
  411180:	cbz	x0, 4111e4 <wcrtomb@plt+0xe8c4>
  411184:	cmp	x20, #0x0
  411188:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41118c:	add	x1, x1, #0xa08
  411190:	csel	x20, x1, x20, eq  // eq = none
  411194:	str	x20, [x0, #40]!
  411198:	bl	4109f0 <wcrtomb@plt+0xe0d0>
  41119c:	tst	w0, #0xff
  4111a0:	b.eq	4111fc <wcrtomb@plt+0xe8dc>  // b.none
  4111a4:	ldrb	w1, [x20, #16]
  4111a8:	mov	x0, x24
  4111ac:	ldr	s0, [x20, #8]
  4111b0:	bl	410a98 <wcrtomb@plt+0xe178>
  4111b4:	str	x0, [x19, #16]
  4111b8:	mov	x20, x0
  4111bc:	cbz	x0, 4111fc <wcrtomb@plt+0xe8dc>
  4111c0:	mov	x1, #0x10                  	// #16
  4111c4:	bl	402520 <calloc@plt>
  4111c8:	str	x0, [x19]
  4111cc:	cbz	x0, 4111fc <wcrtomb@plt+0xe8dc>
  4111d0:	add	x20, x0, x20, lsl #4
  4111d4:	str	x20, [x19, #8]
  4111d8:	stp	xzr, xzr, [x19, #24]
  4111dc:	stp	x22, x21, [x19, #48]
  4111e0:	stp	x23, xzr, [x19, #64]
  4111e4:	mov	x0, x19
  4111e8:	ldp	x19, x20, [sp, #16]
  4111ec:	ldp	x21, x22, [sp, #32]
  4111f0:	ldp	x23, x24, [sp, #48]
  4111f4:	ldp	x29, x30, [sp], #64
  4111f8:	ret
  4111fc:	mov	x0, x19
  411200:	mov	x19, #0x0                   	// #0
  411204:	bl	4026b0 <free@plt>
  411208:	mov	x0, x19
  41120c:	ldp	x19, x20, [sp, #16]
  411210:	ldp	x21, x22, [sp, #32]
  411214:	ldp	x23, x24, [sp, #48]
  411218:	ldp	x29, x30, [sp], #64
  41121c:	ret
  411220:	stp	x29, x30, [sp, #-48]!
  411224:	mov	x29, sp
  411228:	ldr	x1, [x0, #8]
  41122c:	str	x21, [sp, #32]
  411230:	ldr	x21, [x0]
  411234:	stp	x19, x20, [sp, #16]
  411238:	mov	x20, x0
  41123c:	cmp	x21, x1
  411240:	b.cc	411254 <wcrtomb@plt+0xe934>  // b.lo, b.ul, b.last
  411244:	b	4112b0 <wcrtomb@plt+0xe990>
  411248:	add	x21, x21, #0x10
  41124c:	cmp	x1, x21
  411250:	b.ls	4112b0 <wcrtomb@plt+0xe990>  // b.plast
  411254:	ldr	x0, [x21]
  411258:	cbz	x0, 411248 <wcrtomb@plt+0xe928>
  41125c:	ldr	x19, [x21, #8]
  411260:	ldr	x1, [x20, #64]
  411264:	cbz	x19, 411290 <wcrtomb@plt+0xe970>
  411268:	cbz	x1, 411278 <wcrtomb@plt+0xe958>
  41126c:	ldr	x0, [x19]
  411270:	blr	x1
  411274:	ldr	x1, [x20, #64]
  411278:	ldr	x0, [x19, #8]
  41127c:	ldr	x2, [x20, #72]
  411280:	stp	xzr, x2, [x19]
  411284:	str	x19, [x20, #72]
  411288:	mov	x19, x0
  41128c:	cbnz	x0, 411268 <wcrtomb@plt+0xe948>
  411290:	cbz	x1, 41129c <wcrtomb@plt+0xe97c>
  411294:	ldr	x0, [x21]
  411298:	blr	x1
  41129c:	stp	xzr, xzr, [x21]
  4112a0:	add	x21, x21, #0x10
  4112a4:	ldr	x1, [x20, #8]
  4112a8:	cmp	x1, x21
  4112ac:	b.hi	411254 <wcrtomb@plt+0xe934>  // b.pmore
  4112b0:	ldr	x21, [sp, #32]
  4112b4:	stp	xzr, xzr, [x20, #24]
  4112b8:	ldp	x19, x20, [sp, #16]
  4112bc:	ldp	x29, x30, [sp], #48
  4112c0:	ret
  4112c4:	nop
  4112c8:	stp	x29, x30, [sp, #-48]!
  4112cc:	mov	x29, sp
  4112d0:	str	x21, [sp, #32]
  4112d4:	mov	x21, x0
  4112d8:	ldr	x0, [x0, #64]
  4112dc:	stp	x19, x20, [sp, #16]
  4112e0:	ldp	x20, x1, [x21]
  4112e4:	cbz	x0, 411340 <wcrtomb@plt+0xea20>
  4112e8:	ldr	x0, [x21, #32]
  4112ec:	cbz	x0, 411340 <wcrtomb@plt+0xea20>
  4112f0:	cmp	x20, x1
  4112f4:	b.cc	411308 <wcrtomb@plt+0xe9e8>  // b.lo, b.ul, b.last
  4112f8:	b	411370 <wcrtomb@plt+0xea50>
  4112fc:	add	x20, x20, #0x10
  411300:	cmp	x1, x20
  411304:	b.ls	41133c <wcrtomb@plt+0xea1c>  // b.plast
  411308:	ldr	x0, [x20]
  41130c:	cbz	x0, 4112fc <wcrtomb@plt+0xe9dc>
  411310:	mov	x19, x20
  411314:	b	41131c <wcrtomb@plt+0xe9fc>
  411318:	ldr	x0, [x19]
  41131c:	ldr	x1, [x21, #64]
  411320:	blr	x1
  411324:	ldr	x19, [x19, #8]
  411328:	cbnz	x19, 411318 <wcrtomb@plt+0xe9f8>
  41132c:	ldr	x1, [x21, #8]
  411330:	add	x20, x20, #0x10
  411334:	cmp	x1, x20
  411338:	b.hi	411308 <wcrtomb@plt+0xe9e8>  // b.pmore
  41133c:	ldr	x20, [x21]
  411340:	cmp	x20, x1
  411344:	b.cs	411370 <wcrtomb@plt+0xea50>  // b.hs, b.nlast
  411348:	ldr	x19, [x20, #8]
  41134c:	cbz	x19, 411364 <wcrtomb@plt+0xea44>
  411350:	mov	x0, x19
  411354:	ldr	x19, [x19, #8]
  411358:	bl	4026b0 <free@plt>
  41135c:	cbnz	x19, 411350 <wcrtomb@plt+0xea30>
  411360:	ldr	x1, [x21, #8]
  411364:	add	x20, x20, #0x10
  411368:	cmp	x1, x20
  41136c:	b.hi	411348 <wcrtomb@plt+0xea28>  // b.pmore
  411370:	ldr	x19, [x21, #72]
  411374:	cbz	x19, 411388 <wcrtomb@plt+0xea68>
  411378:	mov	x0, x19
  41137c:	ldr	x19, [x19, #8]
  411380:	bl	4026b0 <free@plt>
  411384:	cbnz	x19, 411378 <wcrtomb@plt+0xea58>
  411388:	ldr	x0, [x21]
  41138c:	bl	4026b0 <free@plt>
  411390:	mov	x0, x21
  411394:	ldp	x19, x20, [sp, #16]
  411398:	ldr	x21, [sp, #32]
  41139c:	ldp	x29, x30, [sp], #48
  4113a0:	b	4026b0 <free@plt>
  4113a4:	nop
  4113a8:	stp	x29, x30, [sp, #-128]!
  4113ac:	mov	x29, sp
  4113b0:	stp	x19, x20, [sp, #16]
  4113b4:	mov	x19, x0
  4113b8:	mov	x0, x1
  4113bc:	str	x21, [sp, #32]
  4113c0:	ldr	x21, [x19, #40]
  4113c4:	ldrb	w1, [x21, #16]
  4113c8:	ldr	s0, [x21, #8]
  4113cc:	bl	410a98 <wcrtomb@plt+0xe178>
  4113d0:	cbz	x0, 411498 <wcrtomb@plt+0xeb78>
  4113d4:	ldr	x1, [x19, #16]
  4113d8:	mov	x20, x0
  4113dc:	cmp	x1, x0
  4113e0:	b.eq	411480 <wcrtomb@plt+0xeb60>  // b.none
  4113e4:	mov	x1, #0x10                  	// #16
  4113e8:	bl	402520 <calloc@plt>
  4113ec:	str	x0, [sp, #48]
  4113f0:	cbz	x0, 411498 <wcrtomb@plt+0xeb78>
  4113f4:	ldp	x7, x6, [x19, #48]
  4113f8:	add	x3, x0, x20, lsl #4
  4113fc:	ldp	x5, x4, [x19, #64]
  411400:	add	x0, sp, #0x30
  411404:	mov	x1, x19
  411408:	mov	w2, #0x0                   	// #0
  41140c:	stp	x3, x20, [sp, #56]
  411410:	stp	xzr, xzr, [sp, #72]
  411414:	stp	x21, x7, [sp, #88]
  411418:	stp	x6, x5, [sp, #104]
  41141c:	str	x4, [sp, #120]
  411420:	bl	410b58 <wcrtomb@plt+0xe238>
  411424:	ands	w20, w0, #0xff
  411428:	b.ne	4114b0 <wcrtomb@plt+0xeb90>  // b.any
  41142c:	ldr	x0, [sp, #120]
  411430:	str	x0, [x19, #72]
  411434:	add	x1, sp, #0x30
  411438:	mov	x0, x19
  41143c:	mov	w2, #0x1                   	// #1
  411440:	bl	410b58 <wcrtomb@plt+0xe238>
  411444:	tst	w0, #0xff
  411448:	b.eq	4114f4 <wcrtomb@plt+0xebd4>  // b.none
  41144c:	add	x1, sp, #0x30
  411450:	mov	x0, x19
  411454:	mov	w2, #0x0                   	// #0
  411458:	bl	410b58 <wcrtomb@plt+0xe238>
  41145c:	tst	w0, #0xff
  411460:	b.eq	4114f4 <wcrtomb@plt+0xebd4>  // b.none
  411464:	ldr	x0, [sp, #48]
  411468:	bl	4026b0 <free@plt>
  41146c:	mov	w0, w20
  411470:	ldp	x19, x20, [sp, #16]
  411474:	ldr	x21, [sp, #32]
  411478:	ldp	x29, x30, [sp], #128
  41147c:	ret
  411480:	mov	w20, #0x1                   	// #1
  411484:	mov	w0, w20
  411488:	ldp	x19, x20, [sp, #16]
  41148c:	ldr	x21, [sp, #32]
  411490:	ldp	x29, x30, [sp], #128
  411494:	ret
  411498:	mov	w20, #0x0                   	// #0
  41149c:	mov	w0, w20
  4114a0:	ldp	x19, x20, [sp, #16]
  4114a4:	ldr	x21, [sp, #32]
  4114a8:	ldp	x29, x30, [sp], #128
  4114ac:	ret
  4114b0:	ldr	x0, [x19]
  4114b4:	bl	4026b0 <free@plt>
  4114b8:	ldr	x0, [sp, #48]
  4114bc:	str	x0, [x19]
  4114c0:	ldr	x0, [sp, #56]
  4114c4:	str	x0, [x19, #8]
  4114c8:	ldr	x0, [sp, #64]
  4114cc:	str	x0, [x19, #16]
  4114d0:	ldr	x0, [sp, #72]
  4114d4:	str	x0, [x19, #24]
  4114d8:	ldr	x0, [sp, #120]
  4114dc:	str	x0, [x19, #72]
  4114e0:	mov	w0, w20
  4114e4:	ldp	x19, x20, [sp, #16]
  4114e8:	ldr	x21, [sp, #32]
  4114ec:	ldp	x29, x30, [sp], #128
  4114f0:	ret
  4114f4:	bl	4025f0 <abort@plt>
  4114f8:	stp	x29, x30, [sp, #-64]!
  4114fc:	mov	x29, sp
  411500:	stp	x19, x20, [sp, #16]
  411504:	str	x21, [sp, #32]
  411508:	cbz	x1, 411684 <wcrtomb@plt+0xed64>
  41150c:	mov	w3, #0x0                   	// #0
  411510:	mov	x20, x2
  411514:	mov	x19, x0
  411518:	mov	x21, x1
  41151c:	add	x2, sp, #0x38
  411520:	bl	4108d0 <wcrtomb@plt+0xdfb0>
  411524:	mov	x3, x0
  411528:	cbz	x0, 411548 <wcrtomb@plt+0xec28>
  41152c:	mov	w0, #0x0                   	// #0
  411530:	cbz	x20, 411538 <wcrtomb@plt+0xec18>
  411534:	str	x3, [x20]
  411538:	ldp	x19, x20, [sp, #16]
  41153c:	ldr	x21, [sp, #32]
  411540:	ldp	x29, x30, [sp], #64
  411544:	ret
  411548:	ldr	x0, [x19, #16]
  41154c:	ldr	x1, [x19, #40]
  411550:	ucvtf	s0, x0
  411554:	ldr	x0, [x19, #24]
  411558:	ldr	s2, [x1, #8]
  41155c:	ucvtf	s1, x0
  411560:	fmul	s0, s0, s2
  411564:	fcmpe	s1, s0
  411568:	b.gt	4115b4 <wcrtomb@plt+0xec94>
  41156c:	ldr	x20, [sp, #56]
  411570:	ldr	x0, [x20]
  411574:	cbz	x0, 411614 <wcrtomb@plt+0xecf4>
  411578:	ldr	x0, [x19, #72]
  41157c:	cbz	x0, 41163c <wcrtomb@plt+0xed1c>
  411580:	ldr	x1, [x0, #8]
  411584:	str	x1, [x19, #72]
  411588:	ldr	x2, [x20, #8]
  41158c:	ldr	x1, [x19, #32]
  411590:	stp	x21, x2, [x0]
  411594:	str	x0, [x20, #8]
  411598:	add	x1, x1, #0x1
  41159c:	str	x1, [x19, #32]
  4115a0:	mov	w0, #0x1                   	// #1
  4115a4:	ldp	x19, x20, [sp, #16]
  4115a8:	ldr	x21, [sp, #32]
  4115ac:	ldp	x29, x30, [sp], #64
  4115b0:	ret
  4115b4:	add	x0, x19, #0x28
  4115b8:	bl	4109f0 <wcrtomb@plt+0xe0d0>
  4115bc:	ldr	x0, [x19, #16]
  4115c0:	ldr	x1, [x19, #40]
  4115c4:	ucvtf	s0, x0
  4115c8:	ldr	x0, [x19, #24]
  4115cc:	ldr	s2, [x1, #8]
  4115d0:	ucvtf	s1, x0
  4115d4:	fmul	s3, s2, s0
  4115d8:	fcmpe	s1, s3
  4115dc:	b.le	41156c <wcrtomb@plt+0xec4c>
  4115e0:	ldrb	w0, [x1, #16]
  4115e4:	ldr	s1, [x1, #12]
  4115e8:	fmul	s0, s0, s1
  4115ec:	cbz	w0, 411650 <wcrtomb@plt+0xed30>
  4115f0:	mov	w0, #0x5f800000            	// #1602224128
  4115f4:	fmov	s1, w0
  4115f8:	fcmpe	s0, s1
  4115fc:	b.lt	411658 <wcrtomb@plt+0xed38>  // b.tstop
  411600:	mov	w0, #0xffffffff            	// #-1
  411604:	ldp	x19, x20, [sp, #16]
  411608:	ldr	x21, [sp, #32]
  41160c:	ldp	x29, x30, [sp], #64
  411610:	ret
  411614:	ldp	x2, x1, [x19, #24]
  411618:	str	x21, [x20]
  41161c:	mov	w0, #0x1                   	// #1
  411620:	ldr	x21, [sp, #32]
  411624:	add	x2, x2, #0x1
  411628:	add	x1, x1, #0x1
  41162c:	stp	x2, x1, [x19, #24]
  411630:	ldp	x19, x20, [sp, #16]
  411634:	ldp	x29, x30, [sp], #64
  411638:	ret
  41163c:	mov	x0, #0x10                  	// #16
  411640:	bl	402440 <malloc@plt>
  411644:	cbnz	x0, 411588 <wcrtomb@plt+0xec68>
  411648:	mov	w0, #0xffffffff            	// #-1
  41164c:	b	411604 <wcrtomb@plt+0xece4>
  411650:	fmul	s0, s0, s2
  411654:	b	4115f0 <wcrtomb@plt+0xecd0>
  411658:	fcvtzu	x1, s0
  41165c:	mov	x0, x19
  411660:	bl	4113a8 <wcrtomb@plt+0xea88>
  411664:	tst	w0, #0xff
  411668:	b.eq	411600 <wcrtomb@plt+0xece0>  // b.none
  41166c:	add	x2, sp, #0x38
  411670:	mov	x1, x21
  411674:	mov	x0, x19
  411678:	mov	w3, #0x0                   	// #0
  41167c:	bl	4108d0 <wcrtomb@plt+0xdfb0>
  411680:	cbz	x0, 41156c <wcrtomb@plt+0xec4c>
  411684:	bl	4025f0 <abort@plt>
  411688:	stp	x29, x30, [sp, #-48]!
  41168c:	mov	x29, sp
  411690:	add	x2, sp, #0x28
  411694:	str	x19, [sp, #16]
  411698:	mov	x19, x1
  41169c:	bl	4114f8 <wcrtomb@plt+0xebd8>
  4116a0:	cmn	w0, #0x1
  4116a4:	b.eq	4116c0 <wcrtomb@plt+0xeda0>  // b.none
  4116a8:	ldr	x1, [sp, #40]
  4116ac:	cmp	w0, #0x0
  4116b0:	csel	x0, x1, x19, eq  // eq = none
  4116b4:	ldr	x19, [sp, #16]
  4116b8:	ldp	x29, x30, [sp], #48
  4116bc:	ret
  4116c0:	mov	x0, #0x0                   	// #0
  4116c4:	ldr	x19, [sp, #16]
  4116c8:	ldp	x29, x30, [sp], #48
  4116cc:	ret
  4116d0:	stp	x29, x30, [sp, #-64]!
  4116d4:	mov	w3, #0x1                   	// #1
  4116d8:	mov	x29, sp
  4116dc:	add	x2, sp, #0x38
  4116e0:	stp	x19, x20, [sp, #16]
  4116e4:	mov	x19, x0
  4116e8:	bl	4108d0 <wcrtomb@plt+0xdfb0>
  4116ec:	mov	x20, x0
  4116f0:	cbz	x0, 41170c <wcrtomb@plt+0xedec>
  4116f4:	ldr	x1, [sp, #56]
  4116f8:	ldr	x0, [x19, #32]
  4116fc:	ldr	x1, [x1]
  411700:	sub	x0, x0, #0x1
  411704:	str	x0, [x19, #32]
  411708:	cbz	x1, 41171c <wcrtomb@plt+0xedfc>
  41170c:	mov	x0, x20
  411710:	ldp	x19, x20, [sp, #16]
  411714:	ldp	x29, x30, [sp], #64
  411718:	ret
  41171c:	ldr	x0, [x19, #16]
  411720:	ldr	x1, [x19, #40]
  411724:	ucvtf	s1, x0
  411728:	ldr	x0, [x19, #24]
  41172c:	ldr	s0, [x1]
  411730:	sub	x0, x0, #0x1
  411734:	str	x0, [x19, #24]
  411738:	fmul	s1, s1, s0
  41173c:	ucvtf	s0, x0
  411740:	fcmpe	s0, s1
  411744:	b.pl	41170c <wcrtomb@plt+0xedec>  // b.nfrst
  411748:	add	x0, x19, #0x28
  41174c:	bl	4109f0 <wcrtomb@plt+0xe0d0>
  411750:	ldr	x0, [x19, #16]
  411754:	ldr	x1, [x19, #40]
  411758:	ucvtf	s0, x0
  41175c:	ldr	x0, [x19, #24]
  411760:	ldr	s1, [x1]
  411764:	ucvtf	s2, x0
  411768:	fmul	s1, s0, s1
  41176c:	fcmpe	s2, s1
  411770:	b.pl	41170c <wcrtomb@plt+0xedec>  // b.nfrst
  411774:	ldrb	w0, [x1, #16]
  411778:	ldr	s1, [x1, #4]
  41177c:	fmul	s0, s0, s1
  411780:	cbnz	w0, 41178c <wcrtomb@plt+0xee6c>
  411784:	ldr	s1, [x1, #8]
  411788:	fmul	s0, s0, s1
  41178c:	fcvtzu	x1, s0
  411790:	mov	x0, x19
  411794:	bl	4113a8 <wcrtomb@plt+0xea88>
  411798:	tst	w0, #0xff
  41179c:	b.ne	41170c <wcrtomb@plt+0xedec>  // b.any
  4117a0:	str	x21, [sp, #32]
  4117a4:	ldr	x21, [x19, #72]
  4117a8:	cbz	x21, 4117c0 <wcrtomb@plt+0xeea0>
  4117ac:	nop
  4117b0:	mov	x0, x21
  4117b4:	ldr	x21, [x21, #8]
  4117b8:	bl	4026b0 <free@plt>
  4117bc:	cbnz	x21, 4117b0 <wcrtomb@plt+0xee90>
  4117c0:	ldr	x21, [sp, #32]
  4117c4:	str	xzr, [x19, #72]
  4117c8:	b	41170c <wcrtomb@plt+0xedec>
  4117cc:	nop
  4117d0:	stp	x29, x30, [sp, #-32]!
  4117d4:	mov	x29, sp
  4117d8:	str	x19, [sp, #16]
  4117dc:	mov	w19, w0
  4117e0:	bl	402450 <wcwidth@plt>
  4117e4:	tbz	w0, #31, 4117f8 <wcrtomb@plt+0xeed8>
  4117e8:	mov	w0, w19
  4117ec:	bl	402370 <iswcntrl@plt>
  4117f0:	cmp	w0, #0x0
  4117f4:	cset	w0, eq  // eq = none
  4117f8:	ldr	x19, [sp, #16]
  4117fc:	ldp	x29, x30, [sp], #32
  411800:	ret
  411804:	nop
  411808:	stp	x29, x30, [sp, #-32]!
  41180c:	mov	x29, sp
  411810:	stp	x19, x20, [sp, #16]
  411814:	mov	x20, x0
  411818:	mov	x0, x1
  41181c:	mov	x19, x1
  411820:	ldr	x2, [x1, #8]
  411824:	ldr	x1, [x0], #24
  411828:	cmp	x1, x0
  41182c:	b.eq	411858 <wcrtomb@plt+0xef38>  // b.none
  411830:	str	x1, [x20]
  411834:	ldrb	w0, [x19, #16]
  411838:	str	x2, [x20, #8]
  41183c:	strb	w0, [x20, #16]
  411840:	cbz	w0, 41184c <wcrtomb@plt+0xef2c>
  411844:	ldr	w0, [x19, #20]
  411848:	str	w0, [x20, #20]
  41184c:	ldp	x19, x20, [sp, #16]
  411850:	ldp	x29, x30, [sp], #32
  411854:	ret
  411858:	add	x3, x20, #0x18
  41185c:	mov	x0, x3
  411860:	bl	4022a0 <memcpy@plt>
  411864:	ldr	x2, [x19, #8]
  411868:	str	x0, [x20]
  41186c:	b	411834 <wcrtomb@plt+0xef14>
  411870:	ubfx	x2, x0, #5, #3
  411874:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  411878:	add	x1, x1, #0xa20
  41187c:	ldr	w1, [x1, x2, lsl #2]
  411880:	lsr	w0, w1, w0
  411884:	and	w0, w0, #0x1
  411888:	ret
  41188c:	nop
  411890:	stp	x29, x30, [sp, #-16]!
  411894:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xef38>
  411898:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41189c:	mov	x29, sp
  4118a0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  4118a4:	add	x3, x3, #0xa40
  4118a8:	add	x1, x1, #0x920
  4118ac:	add	x0, x0, #0x960
  4118b0:	mov	w2, #0xb3                  	// #179
  4118b4:	bl	402880 <__assert_fail@plt>
  4118b8:	cmp	x0, x1
  4118bc:	b.eq	411c24 <wcrtomb@plt+0xf304>  // b.none
  4118c0:	stp	x29, x30, [sp, #-192]!
  4118c4:	mov	x29, sp
  4118c8:	stp	x19, x20, [sp, #16]
  4118cc:	stp	x21, x22, [sp, #32]
  4118d0:	stp	x23, x24, [sp, #48]
  4118d4:	mov	x23, x0
  4118d8:	mov	x24, x1
  4118dc:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  4118e0:	cmp	x0, #0x1
  4118e4:	b.ls	411a5c <wcrtomb@plt+0xf13c>  // b.plast
  4118e8:	strb	wzr, [sp, #64]
  4118ec:	mov	x19, x23
  4118f0:	stur	xzr, [sp, #68]
  4118f4:	add	x21, sp, #0x44
  4118f8:	ldrb	w0, [sp, #64]
  4118fc:	add	x22, sp, #0x84
  411900:	strb	wzr, [sp, #76]
  411904:	mov	w20, #0x1                   	// #1
  411908:	str	x23, [sp, #80]
  41190c:	strb	wzr, [sp, #128]
  411910:	stur	xzr, [sp, #132]
  411914:	strb	wzr, [sp, #140]
  411918:	str	x24, [sp, #144]
  41191c:	cbnz	w0, 4119fc <wcrtomb@plt+0xf0dc>
  411920:	ldrb	w2, [x19]
  411924:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  411928:	add	x1, x1, #0xa20
  41192c:	ubfx	x0, x2, #5, #3
  411930:	ldr	w0, [x1, x0, lsl #2]
  411934:	lsr	w0, w0, w2
  411938:	tbz	w0, #0, 411b70 <wcrtomb@plt+0xf250>
  41193c:	mov	x0, #0x1                   	// #1
  411940:	str	x0, [sp, #88]
  411944:	ldrb	w1, [x19]
  411948:	strb	w0, [sp, #76]
  41194c:	mov	w19, w1
  411950:	strb	w0, [sp, #96]
  411954:	str	w1, [sp, #100]
  411958:	cbz	w19, 411cd8 <wcrtomb@plt+0xf3b8>
  41195c:	ldrb	w0, [sp, #140]
  411960:	cbnz	w0, 411b48 <wcrtomb@plt+0xf228>
  411964:	ldrb	w0, [sp, #128]
  411968:	ldr	x19, [sp, #144]
  41196c:	cbnz	w0, 411ae8 <wcrtomb@plt+0xf1c8>
  411970:	ldrb	w2, [x19]
  411974:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  411978:	add	x1, x1, #0xa20
  41197c:	ubfx	x0, x2, #5, #3
  411980:	ldr	w0, [x1, x0, lsl #2]
  411984:	lsr	w0, w0, w2
  411988:	tbz	w0, #0, 411ad8 <wcrtomb@plt+0xf1b8>
  41198c:	mov	x0, #0x1                   	// #1
  411990:	str	x0, [sp, #152]
  411994:	ldrb	w1, [x19]
  411998:	strb	w0, [sp, #140]
  41199c:	mov	w23, w1
  4119a0:	strb	w0, [sp, #160]
  4119a4:	str	w1, [sp, #164]
  4119a8:	cbz	w23, 411c60 <wcrtomb@plt+0xf340>
  4119ac:	ldrb	w0, [sp, #96]
  4119b0:	cbz	w0, 411c40 <wcrtomb@plt+0xf320>
  4119b4:	ldr	w0, [sp, #100]
  4119b8:	bl	4028c0 <towlower@plt>
  4119bc:	mov	w19, w0
  4119c0:	mov	w0, w23
  4119c4:	bl	4028c0 <towlower@plt>
  4119c8:	sub	w0, w19, w0
  4119cc:	cbnz	w0, 411ac4 <wcrtomb@plt+0xf1a4>
  4119d0:	ldp	x19, x1, [sp, #80]
  4119d4:	strb	wzr, [sp, #76]
  4119d8:	ldr	x0, [sp, #144]
  4119dc:	strb	wzr, [sp, #140]
  4119e0:	add	x19, x19, x1
  4119e4:	str	x19, [sp, #80]
  4119e8:	ldr	x1, [sp, #152]
  4119ec:	add	x0, x0, x1
  4119f0:	str	x0, [sp, #144]
  4119f4:	ldrb	w0, [sp, #64]
  4119f8:	cbz	w0, 411920 <wcrtomb@plt+0xf000>
  4119fc:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  411a00:	mov	x1, x0
  411a04:	mov	x0, x19
  411a08:	bl	413aa8 <wcrtomb@plt+0x11188>
  411a0c:	mov	x2, x0
  411a10:	add	x0, sp, #0x40
  411a14:	mov	x1, x19
  411a18:	add	x3, sp, #0x44
  411a1c:	add	x0, x0, #0x24
  411a20:	bl	416cf8 <wcrtomb@plt+0x143d8>
  411a24:	str	x0, [sp, #88]
  411a28:	cmn	x0, #0x1
  411a2c:	b.eq	411b84 <wcrtomb@plt+0xf264>  // b.none
  411a30:	cmn	x0, #0x2
  411a34:	b.eq	411bac <wcrtomb@plt+0xf28c>  // b.none
  411a38:	cbz	x0, 411bdc <wcrtomb@plt+0xf2bc>
  411a3c:	ldr	w19, [sp, #100]
  411a40:	add	x0, sp, #0x44
  411a44:	strb	w20, [sp, #96]
  411a48:	bl	402610 <mbsinit@plt>
  411a4c:	cbz	w0, 411a54 <wcrtomb@plt+0xf134>
  411a50:	strb	wzr, [sp, #64]
  411a54:	strb	w20, [sp, #76]
  411a58:	b	411958 <wcrtomb@plt+0xf038>
  411a5c:	bl	4026a0 <__ctype_b_loc@plt>
  411a60:	mov	x20, #0x0                   	// #0
  411a64:	ldr	x21, [x0]
  411a68:	ldrb	w22, [x23, x20]
  411a6c:	mov	x19, x22
  411a70:	ubfiz	x0, x22, #1, #8
  411a74:	ldrh	w0, [x21, x0]
  411a78:	tbz	w0, #8, 411a8c <wcrtomb@plt+0xf16c>
  411a7c:	bl	4023c0 <__ctype_tolower_loc@plt>
  411a80:	ldr	x0, [x0]
  411a84:	ldr	w19, [x0, x22, lsl #2]
  411a88:	and	w19, w19, #0xff
  411a8c:	ldrb	w22, [x24, x20]
  411a90:	mov	x2, x22
  411a94:	ubfiz	x0, x22, #1, #8
  411a98:	ldrh	w0, [x21, x0]
  411a9c:	tbz	w0, #8, 411ab0 <wcrtomb@plt+0xf190>
  411aa0:	bl	4023c0 <__ctype_tolower_loc@plt>
  411aa4:	ldr	x0, [x0]
  411aa8:	ldr	w2, [x0, x22, lsl #2]
  411aac:	and	w2, w2, #0xff
  411ab0:	cbz	w19, 411c58 <wcrtomb@plt+0xf338>
  411ab4:	add	x20, x20, #0x1
  411ab8:	cmp	w19, w2
  411abc:	b.eq	411a68 <wcrtomb@plt+0xf148>  // b.none
  411ac0:	sub	w0, w19, w2
  411ac4:	ldp	x19, x20, [sp, #16]
  411ac8:	ldp	x21, x22, [sp, #32]
  411acc:	ldp	x23, x24, [sp, #48]
  411ad0:	ldp	x29, x30, [sp], #192
  411ad4:	ret
  411ad8:	mov	x0, x22
  411adc:	bl	402610 <mbsinit@plt>
  411ae0:	cbz	w0, 411e58 <wcrtomb@plt+0xf538>
  411ae4:	strb	w20, [sp, #128]
  411ae8:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  411aec:	mov	x1, x0
  411af0:	mov	x0, x19
  411af4:	bl	413aa8 <wcrtomb@plt+0x11188>
  411af8:	mov	x2, x0
  411afc:	add	x0, sp, #0x80
  411b00:	mov	x1, x19
  411b04:	add	x3, sp, #0x84
  411b08:	add	x0, x0, #0x24
  411b0c:	bl	416cf8 <wcrtomb@plt+0x143d8>
  411b10:	str	x0, [sp, #152]
  411b14:	cmn	x0, #0x1
  411b18:	b.eq	411b98 <wcrtomb@plt+0xf278>  // b.none
  411b1c:	cmn	x0, #0x2
  411b20:	b.eq	411bc4 <wcrtomb@plt+0xf2a4>  // b.none
  411b24:	cbz	x0, 411bfc <wcrtomb@plt+0xf2dc>
  411b28:	ldr	w23, [sp, #164]
  411b2c:	add	x0, sp, #0x84
  411b30:	strb	w20, [sp, #160]
  411b34:	bl	402610 <mbsinit@plt>
  411b38:	cbz	w0, 411b40 <wcrtomb@plt+0xf220>
  411b3c:	strb	wzr, [sp, #128]
  411b40:	strb	w20, [sp, #140]
  411b44:	b	4119a8 <wcrtomb@plt+0xf088>
  411b48:	ldrb	w0, [sp, #160]
  411b4c:	cbnz	w0, 411c1c <wcrtomb@plt+0xf2fc>
  411b50:	ldrb	w0, [sp, #96]
  411b54:	cbnz	w0, 411cc0 <wcrtomb@plt+0xf3a0>
  411b58:	ldp	x0, x2, [sp, #80]
  411b5c:	ldp	x1, x3, [sp, #144]
  411b60:	cmp	x2, x3
  411b64:	b.ne	411c2c <wcrtomb@plt+0xf30c>  // b.any
  411b68:	bl	402660 <memcmp@plt>
  411b6c:	b	4119cc <wcrtomb@plt+0xf0ac>
  411b70:	mov	x0, x21
  411b74:	bl	402610 <mbsinit@plt>
  411b78:	cbz	w0, 411e58 <wcrtomb@plt+0xf538>
  411b7c:	strb	w20, [sp, #64]
  411b80:	b	4119fc <wcrtomb@plt+0xf0dc>
  411b84:	mov	x0, #0x1                   	// #1
  411b88:	strb	w0, [sp, #76]
  411b8c:	str	x0, [sp, #88]
  411b90:	strb	wzr, [sp, #96]
  411b94:	b	41195c <wcrtomb@plt+0xf03c>
  411b98:	mov	x0, #0x1                   	// #1
  411b9c:	strb	w0, [sp, #140]
  411ba0:	str	x0, [sp, #152]
  411ba4:	strb	wzr, [sp, #160]
  411ba8:	b	411b50 <wcrtomb@plt+0xf230>
  411bac:	ldr	x0, [sp, #80]
  411bb0:	bl	402300 <strlen@plt>
  411bb4:	strb	w20, [sp, #76]
  411bb8:	str	x0, [sp, #88]
  411bbc:	strb	wzr, [sp, #96]
  411bc0:	b	41195c <wcrtomb@plt+0xf03c>
  411bc4:	ldr	x0, [sp, #144]
  411bc8:	bl	402300 <strlen@plt>
  411bcc:	strb	w20, [sp, #140]
  411bd0:	str	x0, [sp, #152]
  411bd4:	strb	wzr, [sp, #160]
  411bd8:	b	411b50 <wcrtomb@plt+0xf230>
  411bdc:	ldr	x0, [sp, #80]
  411be0:	mov	x1, #0x1                   	// #1
  411be4:	str	x1, [sp, #88]
  411be8:	ldrb	w0, [x0]
  411bec:	cbnz	w0, 411e78 <wcrtomb@plt+0xf558>
  411bf0:	ldr	w19, [sp, #100]
  411bf4:	cbz	w19, 411a40 <wcrtomb@plt+0xf120>
  411bf8:	bl	411890 <wcrtomb@plt+0xef70>
  411bfc:	ldr	x0, [sp, #144]
  411c00:	mov	x1, #0x1                   	// #1
  411c04:	str	x1, [sp, #152]
  411c08:	ldrb	w0, [x0]
  411c0c:	cbnz	w0, 411e78 <wcrtomb@plt+0xf558>
  411c10:	ldr	w23, [sp, #164]
  411c14:	cbz	w23, 411b2c <wcrtomb@plt+0xf20c>
  411c18:	bl	411890 <wcrtomb@plt+0xef70>
  411c1c:	ldr	w23, [sp, #164]
  411c20:	b	4119a8 <wcrtomb@plt+0xf088>
  411c24:	mov	w0, #0x0                   	// #0
  411c28:	ret
  411c2c:	b.cs	411da4 <wcrtomb@plt+0xf484>  // b.hs, b.nlast
  411c30:	bl	402660 <memcmp@plt>
  411c34:	cmp	w0, #0x0
  411c38:	b.le	411cc0 <wcrtomb@plt+0xf3a0>
  411c3c:	nop
  411c40:	mov	w0, #0x1                   	// #1
  411c44:	ldp	x19, x20, [sp, #16]
  411c48:	ldp	x21, x22, [sp, #32]
  411c4c:	ldp	x23, x24, [sp, #48]
  411c50:	ldp	x29, x30, [sp], #192
  411c54:	ret
  411c58:	mov	w19, #0x0                   	// #0
  411c5c:	b	411ac0 <wcrtomb@plt+0xf1a0>
  411c60:	ldrb	w0, [sp, #76]
  411c64:	cbz	w0, 411ce0 <wcrtomb@plt+0xf3c0>
  411c68:	ldrb	w0, [sp, #96]
  411c6c:	cbz	w0, 411c40 <wcrtomb@plt+0xf320>
  411c70:	ldr	w19, [sp, #100]
  411c74:	nop
  411c78:	cbnz	w19, 411c40 <wcrtomb@plt+0xf320>
  411c7c:	ldrb	w0, [sp, #140]
  411c80:	cbnz	w0, 411e24 <wcrtomb@plt+0xf504>
  411c84:	ldrb	w0, [sp, #128]
  411c88:	add	x20, sp, #0x80
  411c8c:	ldr	x19, [sp, #144]
  411c90:	cbnz	w0, 411dd0 <wcrtomb@plt+0xf4b0>
  411c94:	ldrb	w1, [x19]
  411c98:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  411c9c:	add	x0, x0, #0xa20
  411ca0:	ubfx	x2, x1, #5, #3
  411ca4:	ldr	w0, [x0, x2, lsl #2]
  411ca8:	lsr	w0, w0, w1
  411cac:	tbz	w0, #0, 411db8 <wcrtomb@plt+0xf498>
  411cb0:	mov	x0, #0x1                   	// #1
  411cb4:	str	x0, [sp, #152]
  411cb8:	ldrb	w23, [x19]
  411cbc:	cbz	w23, 411e1c <wcrtomb@plt+0xf4fc>
  411cc0:	mov	w0, #0xffffffff            	// #-1
  411cc4:	ldp	x19, x20, [sp, #16]
  411cc8:	ldp	x21, x22, [sp, #32]
  411ccc:	ldp	x23, x24, [sp, #48]
  411cd0:	ldp	x29, x30, [sp], #192
  411cd4:	ret
  411cd8:	ldrb	w0, [sp, #76]
  411cdc:	cbnz	w0, 411c7c <wcrtomb@plt+0xf35c>
  411ce0:	ldrb	w0, [sp, #64]
  411ce4:	add	x20, sp, #0x40
  411ce8:	ldr	x19, [sp, #80]
  411cec:	cbnz	w0, 411d24 <wcrtomb@plt+0xf404>
  411cf0:	ldrb	w1, [x19]
  411cf4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  411cf8:	add	x0, x0, #0xa20
  411cfc:	ubfx	x2, x1, #5, #3
  411d00:	ldr	w0, [x0, x2, lsl #2]
  411d04:	lsr	w0, w0, w1
  411d08:	tbnz	w0, #0, 411d84 <wcrtomb@plt+0xf464>
  411d0c:	add	x20, sp, #0x40
  411d10:	add	x0, x20, #0x4
  411d14:	bl	402610 <mbsinit@plt>
  411d18:	cbz	w0, 411e58 <wcrtomb@plt+0xf538>
  411d1c:	mov	w0, #0x1                   	// #1
  411d20:	strb	w0, [sp, #64]
  411d24:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  411d28:	mov	x1, x0
  411d2c:	mov	x0, x19
  411d30:	bl	413aa8 <wcrtomb@plt+0x11188>
  411d34:	mov	x1, x19
  411d38:	mov	x2, x0
  411d3c:	add	x3, x20, #0x4
  411d40:	add	x0, x20, #0x24
  411d44:	bl	416cf8 <wcrtomb@plt+0x143d8>
  411d48:	str	x0, [sp, #88]
  411d4c:	cmn	x0, #0x1
  411d50:	b.eq	411c40 <wcrtomb@plt+0xf320>  // b.none
  411d54:	cmn	x0, #0x2
  411d58:	b.eq	411c40 <wcrtomb@plt+0xf320>  // b.none
  411d5c:	cbz	x0, 411e38 <wcrtomb@plt+0xf518>
  411d60:	ldr	w19, [sp, #100]
  411d64:	add	x0, x20, #0x4
  411d68:	mov	w20, #0x1                   	// #1
  411d6c:	strb	w20, [sp, #96]
  411d70:	bl	402610 <mbsinit@plt>
  411d74:	cbz	w0, 411d7c <wcrtomb@plt+0xf45c>
  411d78:	strb	wzr, [sp, #64]
  411d7c:	strb	w20, [sp, #76]
  411d80:	b	411c78 <wcrtomb@plt+0xf358>
  411d84:	mov	x0, #0x1                   	// #1
  411d88:	str	x0, [sp, #88]
  411d8c:	ldrb	w1, [x19]
  411d90:	strb	w0, [sp, #76]
  411d94:	mov	w19, w1
  411d98:	strb	w0, [sp, #96]
  411d9c:	str	w1, [sp, #100]
  411da0:	b	411c78 <wcrtomb@plt+0xf358>
  411da4:	mov	x2, x3
  411da8:	bl	402660 <memcmp@plt>
  411dac:	tbnz	w0, #31, 411cc0 <wcrtomb@plt+0xf3a0>
  411db0:	mov	w0, #0x1                   	// #1
  411db4:	b	411c44 <wcrtomb@plt+0xf324>
  411db8:	add	x20, sp, #0x80
  411dbc:	add	x0, sp, #0x84
  411dc0:	bl	402610 <mbsinit@plt>
  411dc4:	cbz	w0, 411e58 <wcrtomb@plt+0xf538>
  411dc8:	mov	w0, #0x1                   	// #1
  411dcc:	strb	w0, [sp, #128]
  411dd0:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  411dd4:	mov	x1, x0
  411dd8:	mov	x0, x19
  411ddc:	bl	413aa8 <wcrtomb@plt+0x11188>
  411de0:	mov	x1, x19
  411de4:	mov	x2, x0
  411de8:	add	x3, x20, #0x4
  411dec:	add	x0, x20, #0x24
  411df0:	bl	416cf8 <wcrtomb@plt+0x143d8>
  411df4:	cmn	x0, #0x3
  411df8:	b.hi	411cc0 <wcrtomb@plt+0xf3a0>  // b.pmore
  411dfc:	cbnz	x0, 411e2c <wcrtomb@plt+0xf50c>
  411e00:	ldr	x0, [sp, #144]
  411e04:	mov	x1, #0x1                   	// #1
  411e08:	str	x1, [sp, #152]
  411e0c:	ldrb	w0, [x0]
  411e10:	cbnz	w0, 411e78 <wcrtomb@plt+0xf558>
  411e14:	ldr	w23, [sp, #164]
  411e18:	cbnz	w23, 411bf8 <wcrtomb@plt+0xf2d8>
  411e1c:	mov	w0, #0x0                   	// #0
  411e20:	b	411ac4 <wcrtomb@plt+0xf1a4>
  411e24:	ldrb	w0, [sp, #160]
  411e28:	cbz	w0, 411cc0 <wcrtomb@plt+0xf3a0>
  411e2c:	ldr	w23, [sp, #164]
  411e30:	cbnz	w23, 411cc0 <wcrtomb@plt+0xf3a0>
  411e34:	b	411e1c <wcrtomb@plt+0xf4fc>
  411e38:	ldr	x0, [sp, #80]
  411e3c:	mov	x1, #0x1                   	// #1
  411e40:	str	x1, [sp, #88]
  411e44:	ldrb	w0, [x0]
  411e48:	cbnz	w0, 411e78 <wcrtomb@plt+0xf558>
  411e4c:	ldr	w19, [sp, #100]
  411e50:	cbz	w19, 411d64 <wcrtomb@plt+0xf444>
  411e54:	bl	411890 <wcrtomb@plt+0xef70>
  411e58:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xef38>
  411e5c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  411e60:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  411e64:	add	x3, x3, #0xa40
  411e68:	add	x1, x1, #0x920
  411e6c:	add	x0, x0, #0x930
  411e70:	mov	w2, #0x96                  	// #150
  411e74:	bl	402880 <__assert_fail@plt>
  411e78:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xef38>
  411e7c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  411e80:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  411e84:	add	x3, x3, #0xa40
  411e88:	add	x1, x1, #0x920
  411e8c:	add	x0, x0, #0x948
  411e90:	mov	w2, #0xb2                  	// #178
  411e94:	bl	402880 <__assert_fail@plt>
  411e98:	and	w5, w2, #0xff
  411e9c:	and	w6, w1, #0xff
  411ea0:	cmp	w5, w1, uxtb
  411ea4:	b.eq	411f98 <wcrtomb@plt+0xf678>  // b.none
  411ea8:	cbz	x3, 411fb0 <wcrtomb@plt+0xf690>
  411eac:	tst	x0, #0x7
  411eb0:	add	x4, x0, x3
  411eb4:	b.ne	411ed4 <wcrtomb@plt+0xf5b4>  // b.any
  411eb8:	b	411eec <wcrtomb@plt+0xf5cc>
  411ebc:	add	x0, x0, #0x1
  411ec0:	cmp	x0, x4
  411ec4:	sub	x3, x4, x0
  411ec8:	b.eq	411ee8 <wcrtomb@plt+0xf5c8>  // b.none
  411ecc:	tst	x0, #0x7
  411ed0:	b.eq	411eec <wcrtomb@plt+0xf5cc>  // b.none
  411ed4:	ldrb	w3, [x0]
  411ed8:	cmp	w3, w5
  411edc:	ccmp	w3, w6, #0x4, ne  // ne = any
  411ee0:	b.ne	411ebc <wcrtomb@plt+0xf59c>  // b.any
  411ee4:	ret
  411ee8:	mov	x3, #0x0                   	// #0
  411eec:	ubfiz	w4, w1, #8, #8
  411ef0:	ubfiz	w7, w2, #8, #8
  411ef4:	and	w1, w1, #0xff
  411ef8:	and	w2, w2, #0xff
  411efc:	orr	w1, w4, w1
  411f00:	orr	w2, w7, w2
  411f04:	cmp	x3, #0x7
  411f08:	sxtw	x8, w1
  411f0c:	sbfiz	x4, x1, #16, #32
  411f10:	sbfiz	x7, x2, #16, #32
  411f14:	sxtw	x1, w2
  411f18:	orr	x4, x4, x8
  411f1c:	orr	x7, x7, x1
  411f20:	orr	x4, x4, x4, lsl #32
  411f24:	orr	x7, x7, x7, lsl #32
  411f28:	b.ls	411fa4 <wcrtomb@plt+0xf684>  // b.plast
  411f2c:	mov	x8, #0xfefefefefefefefe    	// #-72340172838076674
  411f30:	movk	x8, #0xfeff
  411f34:	b	411f48 <wcrtomb@plt+0xf628>
  411f38:	sub	x3, x3, #0x8
  411f3c:	add	x0, x0, #0x8
  411f40:	cmp	x3, #0x7
  411f44:	b.ls	411fa4 <wcrtomb@plt+0xf684>  // b.plast
  411f48:	ldr	x1, [x0]
  411f4c:	eor	x2, x1, x4
  411f50:	eor	x1, x1, x7
  411f54:	add	x10, x2, x8
  411f58:	add	x9, x1, x8
  411f5c:	bic	x2, x10, x2
  411f60:	bic	x1, x9, x1
  411f64:	orr	x1, x2, x1
  411f68:	tst	x1, #0x8080808080808080
  411f6c:	b.eq	411f38 <wcrtomb@plt+0xf618>  // b.none
  411f70:	add	x3, x0, x3
  411f74:	b	411f84 <wcrtomb@plt+0xf664>
  411f78:	add	x0, x0, #0x1
  411f7c:	cmp	x0, x3
  411f80:	b.eq	411fa8 <wcrtomb@plt+0xf688>  // b.none
  411f84:	ldrb	w1, [x0]
  411f88:	cmp	w1, w6
  411f8c:	ccmp	w1, w5, #0x4, ne  // ne = any
  411f90:	b.ne	411f78 <wcrtomb@plt+0xf658>  // b.any
  411f94:	b	411ee4 <wcrtomb@plt+0xf5c4>
  411f98:	mov	x2, x3
  411f9c:	and	w1, w1, #0xff
  411fa0:	b	402770 <memchr@plt>
  411fa4:	cbnz	x3, 411f70 <wcrtomb@plt+0xf650>
  411fa8:	mov	x0, #0x0                   	// #0
  411fac:	ret
  411fb0:	mov	x3, #0x0                   	// #0
  411fb4:	b	411eec <wcrtomb@plt+0xf5cc>
  411fb8:	stp	x29, x30, [sp, #-64]!
  411fbc:	mov	x29, sp
  411fc0:	str	x3, [sp, #56]
  411fc4:	mov	w3, #0x0                   	// #0
  411fc8:	tbnz	w2, #6, 411fdc <wcrtomb@plt+0xf6bc>
  411fcc:	bl	402860 <openat@plt>
  411fd0:	bl	413ae0 <wcrtomb@plt+0x111c0>
  411fd4:	ldp	x29, x30, [sp], #64
  411fd8:	ret
  411fdc:	mov	w3, #0xfffffff8            	// #-8
  411fe0:	stp	w3, wzr, [sp, #40]
  411fe4:	ldr	w3, [sp, #56]
  411fe8:	add	x4, sp, #0x30
  411fec:	add	x5, sp, #0x40
  411ff0:	stp	x5, x5, [sp, #16]
  411ff4:	str	x4, [sp, #32]
  411ff8:	bl	402860 <openat@plt>
  411ffc:	bl	413ae0 <wcrtomb@plt+0x111c0>
  412000:	ldp	x29, x30, [sp], #64
  412004:	ret
  412008:	stp	xzr, xzr, [x8]
  41200c:	cmp	w0, #0xa
  412010:	stp	xzr, xzr, [x8, #16]
  412014:	stp	xzr, xzr, [x8, #32]
  412018:	str	xzr, [x8, #48]
  41201c:	b.eq	412028 <wcrtomb@plt+0xf708>  // b.none
  412020:	str	w0, [x8]
  412024:	ret
  412028:	stp	x29, x30, [sp, #-16]!
  41202c:	mov	x29, sp
  412030:	bl	4025f0 <abort@plt>
  412034:	nop
  412038:	stp	x29, x30, [sp, #-48]!
  41203c:	mov	w2, #0x5                   	// #5
  412040:	mov	x29, sp
  412044:	stp	x19, x20, [sp, #16]
  412048:	mov	x20, x0
  41204c:	str	x21, [sp, #32]
  412050:	mov	w21, w1
  412054:	mov	x1, x0
  412058:	mov	x0, #0x0                   	// #0
  41205c:	bl	4027f0 <dcgettext@plt>
  412060:	mov	x19, x0
  412064:	cmp	x20, x0
  412068:	b.eq	412080 <wcrtomb@plt+0xf760>  // b.none
  41206c:	mov	x0, x19
  412070:	ldp	x19, x20, [sp, #16]
  412074:	ldr	x21, [sp, #32]
  412078:	ldp	x29, x30, [sp], #48
  41207c:	ret
  412080:	bl	423d18 <_obstack_memory_used@@Base+0xcc50>
  412084:	ldrb	w1, [x0]
  412088:	and	w1, w1, #0xffffffdf
  41208c:	cmp	w1, #0x55
  412090:	b.ne	4120f4 <wcrtomb@plt+0xf7d4>  // b.any
  412094:	ldrb	w1, [x0, #1]
  412098:	and	w1, w1, #0xffffffdf
  41209c:	cmp	w1, #0x54
  4120a0:	b.ne	412170 <wcrtomb@plt+0xf850>  // b.any
  4120a4:	ldrb	w1, [x0, #2]
  4120a8:	and	w1, w1, #0xffffffdf
  4120ac:	cmp	w1, #0x46
  4120b0:	b.ne	412170 <wcrtomb@plt+0xf850>  // b.any
  4120b4:	ldrb	w1, [x0, #3]
  4120b8:	cmp	w1, #0x2d
  4120bc:	b.ne	412170 <wcrtomb@plt+0xf850>  // b.any
  4120c0:	ldrb	w1, [x0, #4]
  4120c4:	cmp	w1, #0x38
  4120c8:	b.ne	412170 <wcrtomb@plt+0xf850>  // b.any
  4120cc:	ldrb	w0, [x0, #5]
  4120d0:	cbnz	w0, 412170 <wcrtomb@plt+0xf850>
  4120d4:	ldrb	w1, [x19]
  4120d8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  4120dc:	adrp	x19, 426000 <_obstack_memory_used@@Base+0xef38>
  4120e0:	add	x0, x0, #0xa60
  4120e4:	cmp	w1, #0x60
  4120e8:	add	x19, x19, #0xa78
  4120ec:	csel	x19, x19, x0, eq  // eq = none
  4120f0:	b	41206c <wcrtomb@plt+0xf74c>
  4120f4:	cmp	w1, #0x47
  4120f8:	b.ne	412170 <wcrtomb@plt+0xf850>  // b.any
  4120fc:	ldrb	w1, [x0, #1]
  412100:	and	w1, w1, #0xffffffdf
  412104:	cmp	w1, #0x42
  412108:	b.ne	412170 <wcrtomb@plt+0xf850>  // b.any
  41210c:	ldrb	w1, [x0, #2]
  412110:	cmp	w1, #0x31
  412114:	b.ne	412170 <wcrtomb@plt+0xf850>  // b.any
  412118:	ldrb	w1, [x0, #3]
  41211c:	cmp	w1, #0x38
  412120:	b.ne	412170 <wcrtomb@plt+0xf850>  // b.any
  412124:	ldrb	w1, [x0, #4]
  412128:	cmp	w1, #0x30
  41212c:	b.ne	412170 <wcrtomb@plt+0xf850>  // b.any
  412130:	ldrb	w1, [x0, #5]
  412134:	cmp	w1, #0x33
  412138:	b.ne	412170 <wcrtomb@plt+0xf850>  // b.any
  41213c:	ldrb	w1, [x0, #6]
  412140:	cmp	w1, #0x30
  412144:	b.ne	412170 <wcrtomb@plt+0xf850>  // b.any
  412148:	ldrb	w0, [x0, #7]
  41214c:	cbnz	w0, 412170 <wcrtomb@plt+0xf850>
  412150:	ldrb	w1, [x19]
  412154:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  412158:	adrp	x19, 426000 <_obstack_memory_used@@Base+0xef38>
  41215c:	add	x0, x0, #0xa68
  412160:	cmp	w1, #0x60
  412164:	add	x19, x19, #0xa70
  412168:	csel	x19, x19, x0, eq  // eq = none
  41216c:	b	41206c <wcrtomb@plt+0xf74c>
  412170:	cmp	w21, #0x9
  412174:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  412178:	adrp	x19, 426000 <_obstack_memory_used@@Base+0xef38>
  41217c:	add	x0, x0, #0xa80
  412180:	add	x19, x19, #0xa58
  412184:	csel	x19, x19, x0, eq  // eq = none
  412188:	mov	x0, x19
  41218c:	ldp	x19, x20, [sp, #16]
  412190:	ldr	x21, [sp, #32]
  412194:	ldp	x29, x30, [sp], #48
  412198:	ret
  41219c:	nop
  4121a0:	sub	sp, sp, #0xf0
  4121a4:	stp	x29, x30, [sp, #16]
  4121a8:	add	x29, sp, #0x10
  4121ac:	stp	x19, x20, [sp, #32]
  4121b0:	mov	w19, w5
  4121b4:	and	w20, w5, #0x2
  4121b8:	stp	x21, x22, [sp, #48]
  4121bc:	stp	x23, x24, [sp, #64]
  4121c0:	mov	x23, x1
  4121c4:	stp	x25, x26, [sp, #80]
  4121c8:	mov	w26, w4
  4121cc:	mov	x25, x3
  4121d0:	stp	x27, x28, [sp, #96]
  4121d4:	mov	x28, x0
  4121d8:	mov	x27, x2
  4121dc:	str	x6, [sp, #112]
  4121e0:	str	w5, [sp, #200]
  4121e4:	str	x7, [sp, #208]
  4121e8:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  4121ec:	mov	x1, x19
  4121f0:	str	x0, [sp, #192]
  4121f4:	cmp	w26, #0x4
  4121f8:	ubfx	x11, x1, #1, #1
  4121fc:	ldr	x6, [sp, #112]
  412200:	b.eq	412e98 <wcrtomb@plt+0x10578>  // b.none
  412204:	b.ls	41226c <wcrtomb@plt+0xf94c>  // b.plast
  412208:	cmp	w26, #0x7
  41220c:	b.eq	412d28 <wcrtomb@plt+0x10408>  // b.none
  412210:	b.ls	412994 <wcrtomb@plt+0x10074>  // b.plast
  412214:	sub	w0, w26, #0x8
  412218:	cmp	w0, #0x2
  41221c:	b.hi	4131b4 <wcrtomb@plt+0x10894>  // b.pmore
  412220:	cmp	w26, #0xa
  412224:	b.ne	412d9c <wcrtomb@plt+0x1047c>  // b.any
  412228:	mov	x19, #0x0                   	// #0
  41222c:	cbz	w20, 413014 <wcrtomb@plt+0x106f4>
  412230:	ldr	x0, [sp, #240]
  412234:	str	w11, [sp, #136]
  412238:	str	x6, [sp, #144]
  41223c:	bl	402300 <strlen@plt>
  412240:	mov	x12, x0
  412244:	ldr	x0, [sp, #240]
  412248:	mov	w10, #0x1                   	// #1
  41224c:	ldr	w11, [sp, #136]
  412250:	mov	w5, w10
  412254:	mov	w7, #0x0                   	// #0
  412258:	str	x0, [sp, #112]
  41225c:	str	wzr, [sp, #120]
  412260:	str	xzr, [sp, #128]
  412264:	ldr	x6, [sp, #144]
  412268:	b	4122b0 <wcrtomb@plt+0xf990>
  41226c:	cmp	w26, #0x1
  412270:	b.eq	412cf4 <wcrtomb@plt+0x103d4>  // b.none
  412274:	b.ls	412968 <wcrtomb@plt+0x10048>  // b.plast
  412278:	cmp	w26, #0x2
  41227c:	b.eq	412ebc <wcrtomb@plt+0x1059c>  // b.none
  412280:	mov	w10, #0x1                   	// #1
  412284:	adrp	x26, 426000 <_obstack_memory_used@@Base+0xef38>
  412288:	mov	w11, w10
  41228c:	mov	w5, w10
  412290:	add	x0, x26, #0xa80
  412294:	mov	w7, #0x0                   	// #0
  412298:	mov	x12, #0x1                   	// #1
  41229c:	mov	x19, #0x0                   	// #0
  4122a0:	mov	w26, #0x2                   	// #2
  4122a4:	str	x0, [sp, #112]
  4122a8:	str	wzr, [sp, #120]
  4122ac:	str	xzr, [sp, #128]
  4122b0:	mov	w22, w5
  4122b4:	mov	w24, w7
  4122b8:	mov	x20, #0x0                   	// #0
  4122bc:	nop
  4122c0:	cmp	x25, x20
  4122c4:	cset	w21, ne  // ne = any
  4122c8:	cmn	x25, #0x1
  4122cc:	b.eq	41239c <wcrtomb@plt+0xfa7c>  // b.none
  4122d0:	cbz	w21, 4123ac <wcrtomb@plt+0xfa8c>
  4122d4:	cmp	w26, #0x2
  4122d8:	add	x3, x27, x20
  4122dc:	cset	w5, ne  // ne = any
  4122e0:	ands	w5, w22, w5
  4122e4:	b.eq	4128b4 <wcrtomb@plt+0xff94>  // b.none
  4122e8:	cbz	x12, 4125a8 <wcrtomb@plt+0xfc88>
  4122ec:	cmp	x12, #0x1
  4122f0:	add	x1, x20, x12
  4122f4:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  4122f8:	b.ne	412330 <wcrtomb@plt+0xfa10>  // b.any
  4122fc:	mov	x0, x27
  412300:	str	x1, [sp, #136]
  412304:	str	w5, [sp, #144]
  412308:	stp	x3, x12, [sp, #152]
  41230c:	stp	w11, w10, [sp, #172]
  412310:	str	x6, [sp, #184]
  412314:	bl	402300 <strlen@plt>
  412318:	ldp	x3, x12, [sp, #152]
  41231c:	mov	x25, x0
  412320:	ldr	w5, [sp, #144]
  412324:	ldp	w11, w10, [sp, #172]
  412328:	ldr	x1, [sp, #136]
  41232c:	ldr	x6, [sp, #184]
  412330:	cmp	x1, x25
  412334:	b.hi	4125a8 <wcrtomb@plt+0xfc88>  // b.pmore
  412338:	ldr	x1, [sp, #112]
  41233c:	mov	x2, x12
  412340:	mov	x0, x3
  412344:	stp	x3, x12, [sp, #136]
  412348:	str	w5, [sp, #152]
  41234c:	str	w11, [sp, #160]
  412350:	str	w10, [sp, #172]
  412354:	str	x6, [sp, #176]
  412358:	bl	402660 <memcmp@plt>
  41235c:	ldr	w5, [sp, #152]
  412360:	ldr	w11, [sp, #160]
  412364:	ldr	w10, [sp, #172]
  412368:	ldp	x3, x12, [sp, #136]
  41236c:	ldr	x6, [sp, #176]
  412370:	cbnz	w0, 4125a8 <wcrtomb@plt+0xfc88>
  412374:	cbnz	w11, 4126a0 <wcrtomb@plt+0xfd80>
  412378:	ldrb	w4, [x3]
  41237c:	cmp	w4, #0x7e
  412380:	b.hi	4125b8 <wcrtomb@plt+0xfc98>  // b.pmore
  412384:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  412388:	add	x0, x0, #0xaf8
  41238c:	ldrh	w0, [x0, w4, uxtw #1]
  412390:	adr	x1, 41239c <wcrtomb@plt+0xfa7c>
  412394:	add	x0, x1, w0, sxth #2
  412398:	br	x0
  41239c:	ldrb	w0, [x27, x20]
  4123a0:	cmp	w0, #0x0
  4123a4:	cset	w21, ne  // ne = any
  4123a8:	cbnz	w21, 4122d4 <wcrtomb@plt+0xf9b4>
  4123ac:	cmp	w26, #0x2
  4123b0:	mov	w5, w22
  4123b4:	cset	w0, eq  // eq = none
  4123b8:	mov	w7, w24
  4123bc:	cmp	w0, #0x0
  4123c0:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  4123c4:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  4123c8:	b.eq	41315c <wcrtomb@plt+0x1083c>  // b.none
  4123cc:	eor	w11, w11, #0x1
  4123d0:	ands	w0, w0, w11
  4123d4:	b.eq	4130bc <wcrtomb@plt+0x1079c>  // b.none
  4123d8:	ldr	w1, [sp, #120]
  4123dc:	cbz	w1, 4130c0 <wcrtomb@plt+0x107a0>
  4123e0:	cbnz	w10, 413118 <wcrtomb@plt+0x107f8>
  4123e4:	ldr	x2, [sp, #128]
  4123e8:	cmp	x23, #0x0
  4123ec:	cset	w0, eq  // eq = none
  4123f0:	cmp	x2, #0x0
  4123f4:	mov	x1, x2
  4123f8:	csel	w0, w0, wzr, ne  // ne = any
  4123fc:	cbz	w0, 413148 <wcrtomb@plt+0x10828>
  412400:	adrp	x26, 426000 <_obstack_memory_used@@Base+0xef38>
  412404:	mov	x12, #0x1                   	// #1
  412408:	mov	w11, #0x0                   	// #0
  41240c:	mov	x19, x12
  412410:	str	w0, [sp, #120]
  412414:	mov	w0, #0x27                  	// #39
  412418:	strb	w0, [x28]
  41241c:	ldr	x23, [sp, #128]
  412420:	str	x1, [sp, #128]
  412424:	add	x1, x26, #0xa80
  412428:	mov	w26, #0x2                   	// #2
  41242c:	str	x1, [sp, #112]
  412430:	b	4122b0 <wcrtomb@plt+0xf990>
  412434:	mov	w0, w5
  412438:	mov	w21, w5
  41243c:	mov	w5, w0
  412440:	mov	w1, #0x0                   	// #0
  412444:	nop
  412448:	cbz	x6, 412560 <wcrtomb@plt+0xfc40>
  41244c:	ubfx	x0, x4, #5, #8
  412450:	ldr	w0, [x6, x0, lsl #2]
  412454:	lsr	w0, w0, w4
  412458:	tbz	w0, #0, 412560 <wcrtomb@plt+0xfc40>
  41245c:	cmp	w26, #0x2
  412460:	cset	w0, eq  // eq = none
  412464:	cbnz	w11, 4127e0 <wcrtomb@plt+0xfec0>
  412468:	eor	w1, w24, #0x1
  41246c:	ands	w0, w0, w1
  412470:	b.eq	4124b4 <wcrtomb@plt+0xfb94>  // b.none
  412474:	cmp	x23, x19
  412478:	b.ls	412484 <wcrtomb@plt+0xfb64>  // b.plast
  41247c:	mov	w1, #0x27                  	// #39
  412480:	strb	w1, [x28, x19]
  412484:	add	x1, x19, #0x1
  412488:	cmp	x23, x1
  41248c:	b.ls	412498 <wcrtomb@plt+0xfb78>  // b.plast
  412490:	mov	w2, #0x24                  	// #36
  412494:	strb	w2, [x28, x1]
  412498:	add	x1, x19, #0x2
  41249c:	cmp	x23, x1
  4124a0:	b.ls	4124ac <wcrtomb@plt+0xfb8c>  // b.plast
  4124a4:	mov	w2, #0x27                  	// #39
  4124a8:	strb	w2, [x28, x1]
  4124ac:	add	x19, x19, #0x3
  4124b0:	mov	w24, w0
  4124b4:	cmp	x19, x23
  4124b8:	b.cs	4124c4 <wcrtomb@plt+0xfba4>  // b.hs, b.nlast
  4124bc:	mov	w0, #0x5c                  	// #92
  4124c0:	strb	w0, [x28, x19]
  4124c4:	add	x19, x19, #0x1
  4124c8:	add	x20, x20, #0x1
  4124cc:	cmp	x19, x23
  4124d0:	b.cs	4124d8 <wcrtomb@plt+0xfbb8>  // b.hs, b.nlast
  4124d4:	strb	w4, [x28, x19]
  4124d8:	cmp	w21, #0x0
  4124dc:	add	x19, x19, #0x1
  4124e0:	csel	w10, w10, wzr, ne  // ne = any
  4124e4:	b	4122c0 <wcrtomb@plt+0xf9a0>
  4124e8:	cbnz	w11, 413104 <wcrtomb@plt+0x107e4>
  4124ec:	ldr	x1, [sp, #128]
  4124f0:	cmp	x23, #0x0
  4124f4:	mov	x0, #0x0                   	// #0
  4124f8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  4124fc:	b.eq	412540 <wcrtomb@plt+0xfc20>  // b.none
  412500:	cmp	x23, x19
  412504:	b.ls	412510 <wcrtomb@plt+0xfbf0>  // b.plast
  412508:	mov	w0, #0x27                  	// #39
  41250c:	strb	w0, [x28, x19]
  412510:	add	x0, x19, #0x1
  412514:	cmp	x23, x0
  412518:	b.ls	412524 <wcrtomb@plt+0xfc04>  // b.plast
  41251c:	mov	w1, #0x5c                  	// #92
  412520:	strb	w1, [x28, x0]
  412524:	add	x1, x19, #0x2
  412528:	mov	x0, x23
  41252c:	cmp	x23, x1
  412530:	b.ls	413194 <wcrtomb@plt+0x10874>  // b.plast
  412534:	ldr	x23, [sp, #128]
  412538:	mov	w2, #0x27                  	// #39
  41253c:	strb	w2, [x28, x1]
  412540:	add	x19, x19, #0x3
  412544:	str	x23, [sp, #128]
  412548:	mov	x23, x0
  41254c:	mov	w1, #0x0                   	// #0
  412550:	mov	w24, #0x0                   	// #0
  412554:	mov	w4, #0x27                  	// #39
  412558:	str	w21, [sp, #120]
  41255c:	nop
  412560:	cbnz	w5, 41245c <wcrtomb@plt+0xfb3c>
  412564:	eor	w1, w1, #0x1
  412568:	add	x20, x20, #0x1
  41256c:	and	w1, w24, w1
  412570:	and	w1, w1, #0xff
  412574:	cbz	w1, 4124cc <wcrtomb@plt+0xfbac>
  412578:	cmp	x23, x19
  41257c:	b.ls	412588 <wcrtomb@plt+0xfc68>  // b.plast
  412580:	mov	w0, #0x27                  	// #39
  412584:	strb	w0, [x28, x19]
  412588:	add	x0, x19, #0x1
  41258c:	cmp	x23, x0
  412590:	b.ls	41259c <wcrtomb@plt+0xfc7c>  // b.plast
  412594:	mov	w1, #0x27                  	// #39
  412598:	strb	w1, [x28, x0]
  41259c:	add	x19, x19, #0x2
  4125a0:	mov	w24, #0x0                   	// #0
  4125a4:	b	4124cc <wcrtomb@plt+0xfbac>
  4125a8:	ldrb	w4, [x3]
  4125ac:	cmp	w4, #0x7e
  4125b0:	b.ls	41293c <wcrtomb@plt+0x1001c>  // b.plast
  4125b4:	mov	w5, #0x0                   	// #0
  4125b8:	ldr	x0, [sp, #192]
  4125bc:	cmp	x0, #0x1
  4125c0:	b.ne	412a68 <wcrtomb@plt+0x10148>  // b.any
  4125c4:	str	w4, [sp, #136]
  4125c8:	str	w5, [sp, #144]
  4125cc:	str	x12, [sp, #152]
  4125d0:	str	w11, [sp, #160]
  4125d4:	str	w10, [sp, #172]
  4125d8:	str	x6, [sp, #176]
  4125dc:	bl	4026a0 <__ctype_b_loc@plt>
  4125e0:	ldr	w4, [sp, #136]
  4125e4:	ldr	x0, [x0]
  4125e8:	ldr	w5, [sp, #144]
  4125ec:	ldr	w11, [sp, #160]
  4125f0:	ldrh	w21, [x0, w4, uxtw #1]
  4125f4:	ldr	w10, [sp, #172]
  4125f8:	ands	w0, w21, #0x4000
  4125fc:	cset	w2, eq  // eq = none
  412600:	ubfx	x21, x21, #14, #1
  412604:	ldr	x12, [sp, #152]
  412608:	and	w2, w22, w2
  41260c:	ldr	x6, [sp, #176]
  412610:	ldr	x8, [sp, #192]
  412614:	cbnz	w2, 412e7c <wcrtomb@plt+0x1055c>
  412618:	cmp	w26, #0x2
  41261c:	cset	w1, eq  // eq = none
  412620:	eor	w0, w22, #0x1
  412624:	orr	w1, w1, w0
  412628:	cbz	w1, 412448 <wcrtomb@plt+0xfb28>
  41262c:	mov	w1, #0x0                   	// #0
  412630:	cbnz	w11, 412448 <wcrtomb@plt+0xfb28>
  412634:	nop
  412638:	cbnz	w5, 41245c <wcrtomb@plt+0xfb3c>
  41263c:	b	412564 <wcrtomb@plt+0xfc44>
  412640:	mov	w5, #0x0                   	// #0
  412644:	cmp	x25, #0x1
  412648:	cset	w0, ne  // ne = any
  41264c:	cmn	x25, #0x1
  412650:	b.ne	412660 <wcrtomb@plt+0xfd40>  // b.any
  412654:	ldrb	w0, [x27, #1]
  412658:	cmp	w0, #0x0
  41265c:	cset	w0, ne  // ne = any
  412660:	cmp	w26, #0x2
  412664:	cset	w1, eq  // eq = none
  412668:	cbz	w0, 41267c <wcrtomb@plt+0xfd5c>
  41266c:	mov	w21, #0x0                   	// #0
  412670:	b	412620 <wcrtomb@plt+0xfd00>
  412674:	cmp	w26, #0x2
  412678:	cset	w1, eq  // eq = none
  41267c:	cbnz	x20, 41266c <wcrtomb@plt+0xfd4c>
  412680:	cmp	w11, #0x0
  412684:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  412688:	b.eq	412620 <wcrtomb@plt+0xfd00>  // b.none
  41268c:	mov	w5, w22
  412690:	mov	w26, #0x2                   	// #2
  412694:	cmp	w5, #0x0
  412698:	mov	w0, #0x4                   	// #4
  41269c:	csel	w26, w26, w0, eq  // eq = none
  4126a0:	ldr	x7, [sp, #208]
  4126a4:	mov	w4, w26
  4126a8:	ldr	x0, [sp, #240]
  4126ac:	str	x0, [sp]
  4126b0:	ldr	w0, [sp, #200]
  4126b4:	mov	x3, x25
  4126b8:	mov	x2, x27
  4126bc:	mov	x1, x23
  4126c0:	and	w5, w0, #0xfffffffd
  4126c4:	mov	x6, #0x0                   	// #0
  4126c8:	mov	x0, x28
  4126cc:	bl	4121a0 <wcrtomb@plt+0xf880>
  4126d0:	mov	x19, x0
  4126d4:	mov	x0, x19
  4126d8:	ldp	x29, x30, [sp, #16]
  4126dc:	ldp	x19, x20, [sp, #32]
  4126e0:	ldp	x21, x22, [sp, #48]
  4126e4:	ldp	x23, x24, [sp, #64]
  4126e8:	ldp	x25, x26, [sp, #80]
  4126ec:	ldp	x27, x28, [sp, #96]
  4126f0:	add	sp, sp, #0xf0
  4126f4:	ret
  4126f8:	mov	w5, #0x0                   	// #0
  4126fc:	cmp	w26, #0x2
  412700:	b.eq	412a38 <wcrtomb@plt+0x10118>  // b.none
  412704:	cmp	w22, #0x0
  412708:	mov	w4, #0x5c                  	// #92
  41270c:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  412710:	mov	w0, w4
  412714:	ccmp	x12, #0x0, #0x4, ne  // ne = any
  412718:	b.ne	412d68 <wcrtomb@plt+0x10448>  // b.any
  41271c:	cbnz	w22, 412dd8 <wcrtomb@plt+0x104b8>
  412720:	mov	w21, #0x0                   	// #0
  412724:	mov	w1, #0x0                   	// #0
  412728:	cbnz	w11, 412448 <wcrtomb@plt+0xfb28>
  41272c:	b	412638 <wcrtomb@plt+0xfd18>
  412730:	mov	w5, #0x0                   	// #0
  412734:	cmp	w26, #0x2
  412738:	b.eq	412a50 <wcrtomb@plt+0x10130>  // b.none
  41273c:	cmp	w26, #0x5
  412740:	b.ne	412768 <wcrtomb@plt+0xfe48>  // b.any
  412744:	ldr	x0, [sp, #200]
  412748:	tbz	w0, #2, 412768 <wcrtomb@plt+0xfe48>
  41274c:	add	x7, x20, #0x2
  412750:	cmp	x7, x25
  412754:	b.cs	412768 <wcrtomb@plt+0xfe48>  // b.hs, b.nlast
  412758:	ldrb	w4, [x3, #1]
  41275c:	cmp	w4, #0x3f
  412760:	b.eq	412f44 <wcrtomb@plt+0x10624>  // b.none
  412764:	nop
  412768:	mov	w1, #0x0                   	// #0
  41276c:	mov	w21, #0x0                   	// #0
  412770:	mov	w4, #0x3f                  	// #63
  412774:	b	412620 <wcrtomb@plt+0xfd00>
  412778:	mov	w5, #0x0                   	// #0
  41277c:	cmp	w26, #0x2
  412780:	b.eq	4124e8 <wcrtomb@plt+0xfbc8>  // b.none
  412784:	mov	w1, #0x0                   	// #0
  412788:	mov	w4, #0x27                  	// #39
  41278c:	str	w21, [sp, #120]
  412790:	b	412620 <wcrtomb@plt+0xfd00>
  412794:	mov	w0, #0x74                  	// #116
  412798:	cmp	w11, #0x0
  41279c:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  4127a0:	b.eq	41268c <wcrtomb@plt+0xfd6c>  // b.none
  4127a4:	cbz	w22, 412720 <wcrtomb@plt+0xfe00>
  4127a8:	b	412dd8 <wcrtomb@plt+0x104b8>
  4127ac:	mov	w4, #0x62                  	// #98
  4127b0:	cmp	w26, #0x2
  4127b4:	cset	w0, eq  // eq = none
  4127b8:	cbnz	w11, 4127e0 <wcrtomb@plt+0xfec0>
  4127bc:	mov	w21, #0x0                   	// #0
  4127c0:	b	4124b4 <wcrtomb@plt+0xfb94>
  4127c4:	mov	w4, #0x66                  	// #102
  4127c8:	b	4127b0 <wcrtomb@plt+0xfe90>
  4127cc:	mov	w4, #0x6e                  	// #110
  4127d0:	mov	w21, #0x0                   	// #0
  4127d4:	cmp	w26, #0x2
  4127d8:	cset	w0, eq  // eq = none
  4127dc:	cbz	w11, 412468 <wcrtomb@plt+0xfb48>
  4127e0:	and	w5, w22, w0
  4127e4:	b	412694 <wcrtomb@plt+0xfd74>
  4127e8:	mov	w4, #0x72                  	// #114
  4127ec:	mov	w21, #0x0                   	// #0
  4127f0:	b	4127d4 <wcrtomb@plt+0xfeb4>
  4127f4:	mov	w4, #0x61                  	// #97
  4127f8:	b	4127b0 <wcrtomb@plt+0xfe90>
  4127fc:	cbnz	w11, 41310c <wcrtomb@plt+0x107ec>
  412800:	mov	w5, #0x0                   	// #0
  412804:	cmp	w26, #0x2
  412808:	eor	w1, w24, #0x1
  41280c:	cset	w0, eq  // eq = none
  412810:	ands	w1, w0, w1
  412814:	b.eq	412a18 <wcrtomb@plt+0x100f8>  // b.none
  412818:	cmp	x23, x19
  41281c:	b.ls	412828 <wcrtomb@plt+0xff08>  // b.plast
  412820:	mov	w2, #0x27                  	// #39
  412824:	strb	w2, [x28, x19]
  412828:	add	x2, x19, #0x1
  41282c:	cmp	x23, x2
  412830:	b.ls	41283c <wcrtomb@plt+0xff1c>  // b.plast
  412834:	mov	w3, #0x24                  	// #36
  412838:	strb	w3, [x28, x2]
  41283c:	add	x2, x19, #0x2
  412840:	cmp	x23, x2
  412844:	b.ls	412850 <wcrtomb@plt+0xff30>  // b.plast
  412848:	mov	w3, #0x27                  	// #39
  41284c:	strb	w3, [x28, x2]
  412850:	add	x2, x19, #0x3
  412854:	cmp	x23, x2
  412858:	b.ls	412d50 <wcrtomb@plt+0x10430>  // b.plast
  41285c:	mov	w24, w1
  412860:	mov	w1, #0x5c                  	// #92
  412864:	strb	w1, [x28, x2]
  412868:	cmp	w26, #0x2
  41286c:	add	x19, x2, #0x1
  412870:	b.eq	412f30 <wcrtomb@plt+0x10610>  // b.none
  412874:	add	x1, x20, #0x1
  412878:	mov	w4, #0x30                  	// #48
  41287c:	cmp	x1, x25
  412880:	b.cs	412898 <wcrtomb@plt+0xff78>  // b.hs, b.nlast
  412884:	ldrb	w1, [x27, x1]
  412888:	sub	w1, w1, #0x30
  41288c:	and	w1, w1, #0xff
  412890:	cmp	w1, #0x9
  412894:	b.ls	412de4 <wcrtomb@plt+0x104c4>  // b.plast
  412898:	eor	w1, w22, #0x1
  41289c:	orr	w0, w0, w1
  4128a0:	mov	w1, w21
  4128a4:	mov	w21, #0x0                   	// #0
  4128a8:	cbz	w0, 412448 <wcrtomb@plt+0xfb28>
  4128ac:	cbnz	w5, 41245c <wcrtomb@plt+0xfb3c>
  4128b0:	b	412564 <wcrtomb@plt+0xfc44>
  4128b4:	ldrb	w4, [x27, x20]
  4128b8:	cmp	w4, #0x7e
  4128bc:	b.hi	4125b8 <wcrtomb@plt+0xfc98>  // b.pmore
  4128c0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  4128c4:	add	x0, x0, #0xbf8
  4128c8:	ldrh	w0, [x0, w4, uxtw #1]
  4128cc:	adr	x1, 4128d8 <wcrtomb@plt+0xffb8>
  4128d0:	add	x0, x1, w0, sxth #2
  4128d4:	br	x0
  4128d8:	cmp	w26, #0x2
  4128dc:	mov	w21, #0x0                   	// #0
  4128e0:	cset	w1, eq  // eq = none
  4128e4:	cmp	w11, #0x0
  4128e8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4128ec:	b.eq	412620 <wcrtomb@plt+0xfd00>  // b.none
  4128f0:	b	41268c <wcrtomb@plt+0xfd6c>
  4128f4:	cmp	w26, #0x2
  4128f8:	cset	w1, eq  // eq = none
  4128fc:	cmp	w11, #0x0
  412900:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  412904:	b.eq	412620 <wcrtomb@plt+0xfd00>  // b.none
  412908:	b	41268c <wcrtomb@plt+0xfd6c>
  41290c:	cbnz	w22, 4127fc <wcrtomb@plt+0xfedc>
  412910:	ldr	x0, [sp, #200]
  412914:	mov	w5, #0x0                   	// #0
  412918:	tbz	w0, #0, 412720 <wcrtomb@plt+0xfe00>
  41291c:	add	x20, x20, #0x1
  412920:	b	4122c0 <wcrtomb@plt+0xf9a0>
  412924:	mov	w0, #0x66                  	// #102
  412928:	cbz	w22, 412720 <wcrtomb@plt+0xfe00>
  41292c:	b	412dd8 <wcrtomb@plt+0x104b8>
  412930:	mov	w0, #0x62                  	// #98
  412934:	cbz	w22, 412720 <wcrtomb@plt+0xfe00>
  412938:	b	412dd8 <wcrtomb@plt+0x104b8>
  41293c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  412940:	add	x0, x0, #0xcf8
  412944:	ldrh	w0, [x0, w4, uxtw #1]
  412948:	adr	x1, 412954 <wcrtomb@plt+0x10034>
  41294c:	add	x0, x1, w0, sxth #2
  412950:	br	x0
  412954:	mov	w0, #0x0                   	// #0
  412958:	b	412438 <wcrtomb@plt+0xfb18>
  41295c:	mov	w0, #0x0                   	// #0
  412960:	mov	w5, #0x0                   	// #0
  412964:	b	412438 <wcrtomb@plt+0xfb18>
  412968:	cbnz	w26, 4131b4 <wcrtomb@plt+0x10894>
  41296c:	mov	w10, #0x1                   	// #1
  412970:	mov	w7, #0x0                   	// #0
  412974:	mov	w11, #0x0                   	// #0
  412978:	mov	w5, #0x0                   	// #0
  41297c:	mov	x12, #0x0                   	// #0
  412980:	mov	x19, #0x0                   	// #0
  412984:	str	xzr, [sp, #112]
  412988:	str	wzr, [sp, #120]
  41298c:	str	xzr, [sp, #128]
  412990:	b	4122b0 <wcrtomb@plt+0xf990>
  412994:	cmp	w26, #0x5
  412998:	b.ne	4129dc <wcrtomb@plt+0x100bc>  // b.any
  41299c:	cbnz	w20, 412fd4 <wcrtomb@plt+0x106b4>
  4129a0:	cbz	x23, 412f00 <wcrtomb@plt+0x105e0>
  4129a4:	mov	w0, #0x22                  	// #34
  4129a8:	mov	w10, #0x1                   	// #1
  4129ac:	mov	x12, #0x1                   	// #1
  4129b0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  4129b4:	mov	w5, w10
  4129b8:	add	x1, x1, #0xa58
  4129bc:	mov	x19, x12
  4129c0:	mov	w7, #0x0                   	// #0
  4129c4:	mov	w11, #0x0                   	// #0
  4129c8:	strb	w0, [x28]
  4129cc:	str	x1, [sp, #112]
  4129d0:	str	wzr, [sp, #120]
  4129d4:	str	xzr, [sp, #128]
  4129d8:	b	4122b0 <wcrtomb@plt+0xf990>
  4129dc:	cmp	w26, #0x6
  4129e0:	b.ne	4131b4 <wcrtomb@plt+0x10894>  // b.any
  4129e4:	adrp	x26, 426000 <_obstack_memory_used@@Base+0xef38>
  4129e8:	mov	w10, #0x1                   	// #1
  4129ec:	add	x0, x26, #0xa58
  4129f0:	mov	w11, w10
  4129f4:	mov	w5, w10
  4129f8:	mov	w7, #0x0                   	// #0
  4129fc:	mov	x12, #0x1                   	// #1
  412a00:	mov	x19, #0x0                   	// #0
  412a04:	mov	w26, #0x5                   	// #5
  412a08:	str	x0, [sp, #112]
  412a0c:	str	wzr, [sp, #120]
  412a10:	str	xzr, [sp, #128]
  412a14:	b	4122b0 <wcrtomb@plt+0xf990>
  412a18:	mov	x2, x19
  412a1c:	cmp	x23, x19
  412a20:	b.ls	412868 <wcrtomb@plt+0xff48>  // b.plast
  412a24:	mov	w1, w24
  412a28:	mov	w24, w1
  412a2c:	mov	w1, #0x5c                  	// #92
  412a30:	strb	w1, [x28, x2]
  412a34:	b	412868 <wcrtomb@plt+0xff48>
  412a38:	cbnz	w11, 413104 <wcrtomb@plt+0x107e4>
  412a3c:	add	x20, x20, #0x1
  412a40:	mov	w1, w24
  412a44:	mov	w21, #0x0                   	// #0
  412a48:	mov	w4, #0x5c                  	// #92
  412a4c:	b	412574 <wcrtomb@plt+0xfc54>
  412a50:	cbnz	w11, 413104 <wcrtomb@plt+0x107e4>
  412a54:	mov	w21, #0x0                   	// #0
  412a58:	mov	w1, #0x0                   	// #0
  412a5c:	mov	w4, #0x3f                  	// #63
  412a60:	cbnz	w5, 41245c <wcrtomb@plt+0xfb3c>
  412a64:	b	412564 <wcrtomb@plt+0xfc44>
  412a68:	str	xzr, [sp, #232]
  412a6c:	cmn	x25, #0x1
  412a70:	b.ne	412ab0 <wcrtomb@plt+0x10190>  // b.any
  412a74:	mov	x0, x27
  412a78:	str	w4, [sp, #136]
  412a7c:	str	w5, [sp, #144]
  412a80:	str	x12, [sp, #152]
  412a84:	str	w11, [sp, #160]
  412a88:	str	w10, [sp, #172]
  412a8c:	str	x6, [sp, #176]
  412a90:	bl	402300 <strlen@plt>
  412a94:	ldr	w4, [sp, #136]
  412a98:	mov	x25, x0
  412a9c:	ldr	w5, [sp, #144]
  412aa0:	ldr	w11, [sp, #160]
  412aa4:	ldr	w10, [sp, #172]
  412aa8:	ldr	x12, [sp, #152]
  412aac:	ldr	x6, [sp, #176]
  412ab0:	mov	x8, #0x0                   	// #0
  412ab4:	str	x19, [sp, #184]
  412ab8:	mov	w19, w21
  412abc:	mov	x21, x8
  412ac0:	str	w11, [sp, #136]
  412ac4:	str	x12, [sp, #144]
  412ac8:	str	w24, [sp, #152]
  412acc:	str	w10, [sp, #160]
  412ad0:	stp	w4, w5, [sp, #172]
  412ad4:	str	x6, [sp, #216]
  412ad8:	add	x24, x20, x21
  412adc:	add	x3, sp, #0xe8
  412ae0:	sub	x2, x25, x24
  412ae4:	add	x1, x27, x24
  412ae8:	add	x0, sp, #0xe4
  412aec:	bl	416cf8 <wcrtomb@plt+0x143d8>
  412af0:	mov	x13, #0x2b                  	// #43
  412af4:	mov	x3, x0
  412af8:	movk	x13, #0x2, lsl #32
  412afc:	cbz	x0, 412b44 <wcrtomb@plt+0x10224>
  412b00:	cmn	x0, #0x1
  412b04:	b.eq	41303c <wcrtomb@plt+0x1071c>  // b.none
  412b08:	cmn	x0, #0x2
  412b0c:	mov	x7, #0x1                   	// #1
  412b10:	b.eq	413068 <wcrtomb@plt+0x10748>  // b.none
  412b14:	ldr	w0, [sp, #136]
  412b18:	cmp	w0, #0x0
  412b1c:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  412b20:	b.eq	412ca8 <wcrtomb@plt+0x10388>  // b.none
  412b24:	ldr	w0, [sp, #228]
  412b28:	add	x21, x21, x3
  412b2c:	bl	402840 <iswprint@plt>
  412b30:	cmp	w0, #0x0
  412b34:	csel	w19, w19, wzr, ne  // ne = any
  412b38:	add	x0, sp, #0xe8
  412b3c:	bl	402610 <mbsinit@plt>
  412b40:	cbz	w0, 412ad8 <wcrtomb@plt+0x101b8>
  412b44:	eor	w2, w19, #0x1
  412b48:	mov	x8, x21
  412b4c:	ldr	w11, [sp, #136]
  412b50:	mov	w21, w19
  412b54:	ldr	w24, [sp, #152]
  412b58:	and	w2, w22, w2
  412b5c:	ldr	w10, [sp, #160]
  412b60:	ldp	w4, w5, [sp, #172]
  412b64:	ldr	x12, [sp, #144]
  412b68:	ldr	x19, [sp, #184]
  412b6c:	ldr	x6, [sp, #216]
  412b70:	cmp	x8, #0x1
  412b74:	b.ls	412614 <wcrtomb@plt+0xfcf4>  // b.plast
  412b78:	add	x8, x20, x8
  412b7c:	mov	w14, #0x0                   	// #0
  412b80:	mov	w3, #0x27                  	// #39
  412b84:	mov	w7, #0x5c                  	// #92
  412b88:	mov	w9, #0x24                  	// #36
  412b8c:	cbz	w2, 412c4c <wcrtomb@plt+0x1032c>
  412b90:	cmp	w26, #0x2
  412b94:	cset	w0, eq  // eq = none
  412b98:	cbnz	w11, 412e90 <wcrtomb@plt+0x10570>
  412b9c:	eor	w1, w24, #0x1
  412ba0:	ands	w0, w0, w1
  412ba4:	b.eq	412bdc <wcrtomb@plt+0x102bc>  // b.none
  412ba8:	cmp	x23, x19
  412bac:	b.ls	412bb4 <wcrtomb@plt+0x10294>  // b.plast
  412bb0:	strb	w3, [x28, x19]
  412bb4:	add	x1, x19, #0x1
  412bb8:	cmp	x23, x1
  412bbc:	b.ls	412bc4 <wcrtomb@plt+0x102a4>  // b.plast
  412bc0:	strb	w9, [x28, x1]
  412bc4:	add	x1, x19, #0x2
  412bc8:	cmp	x23, x1
  412bcc:	b.ls	412bd4 <wcrtomb@plt+0x102b4>  // b.plast
  412bd0:	strb	w3, [x28, x1]
  412bd4:	add	x19, x19, #0x3
  412bd8:	mov	w24, w0
  412bdc:	cmp	x23, x19
  412be0:	b.ls	412be8 <wcrtomb@plt+0x102c8>  // b.plast
  412be4:	strb	w7, [x28, x19]
  412be8:	add	x0, x19, #0x1
  412bec:	cmp	x23, x0
  412bf0:	b.ls	412c00 <wcrtomb@plt+0x102e0>  // b.plast
  412bf4:	lsr	w1, w4, #6
  412bf8:	add	w1, w1, #0x30
  412bfc:	strb	w1, [x28, x0]
  412c00:	add	x0, x19, #0x2
  412c04:	cmp	x23, x0
  412c08:	b.ls	412c18 <wcrtomb@plt+0x102f8>  // b.plast
  412c0c:	ubfx	x1, x4, #3, #3
  412c10:	add	w1, w1, #0x30
  412c14:	strb	w1, [x28, x0]
  412c18:	and	w4, w4, #0x7
  412c1c:	add	x20, x20, #0x1
  412c20:	add	w4, w4, #0x30
  412c24:	cmp	x20, x8
  412c28:	add	x19, x19, #0x3
  412c2c:	b.cs	4124cc <wcrtomb@plt+0xfbac>  // b.hs, b.nlast
  412c30:	mov	w14, w2
  412c34:	cmp	x23, x19
  412c38:	b.ls	412c40 <wcrtomb@plt+0x10320>  // b.plast
  412c3c:	strb	w4, [x28, x19]
  412c40:	ldrb	w4, [x27, x20]
  412c44:	add	x19, x19, #0x1
  412c48:	cbnz	w2, 412b90 <wcrtomb@plt+0x10270>
  412c4c:	eor	w0, w14, #0x1
  412c50:	and	w0, w24, w0
  412c54:	and	w0, w0, #0xff
  412c58:	cbz	w5, 412c6c <wcrtomb@plt+0x1034c>
  412c5c:	cmp	x23, x19
  412c60:	b.ls	412c68 <wcrtomb@plt+0x10348>  // b.plast
  412c64:	strb	w7, [x28, x19]
  412c68:	add	x19, x19, #0x1
  412c6c:	add	x20, x20, #0x1
  412c70:	cmp	x20, x8
  412c74:	b.cs	412e88 <wcrtomb@plt+0x10568>  // b.hs, b.nlast
  412c78:	cbz	w0, 412ef8 <wcrtomb@plt+0x105d8>
  412c7c:	cmp	x23, x19
  412c80:	b.ls	412c88 <wcrtomb@plt+0x10368>  // b.plast
  412c84:	strb	w3, [x28, x19]
  412c88:	add	x0, x19, #0x1
  412c8c:	cmp	x23, x0
  412c90:	b.ls	412c98 <wcrtomb@plt+0x10378>  // b.plast
  412c94:	strb	w3, [x28, x0]
  412c98:	add	x19, x19, #0x2
  412c9c:	mov	w5, #0x0                   	// #0
  412ca0:	mov	w24, #0x0                   	// #0
  412ca4:	b	412c34 <wcrtomb@plt+0x10314>
  412ca8:	cmp	x3, #0x1
  412cac:	b.eq	412b24 <wcrtomb@plt+0x10204>  // b.none
  412cb0:	add	x2, x24, #0x1
  412cb4:	add	x0, x27, x3
  412cb8:	add	x2, x27, x2
  412cbc:	add	x9, x0, x24
  412cc0:	b	412cd0 <wcrtomb@plt+0x103b0>
  412cc4:	add	x2, x2, #0x1
  412cc8:	cmp	x9, x2
  412ccc:	b.eq	412b24 <wcrtomb@plt+0x10204>  // b.none
  412cd0:	ldrb	w0, [x2]
  412cd4:	sub	w0, w0, #0x5b
  412cd8:	and	w0, w0, #0xff
  412cdc:	cmp	w0, #0x21
  412ce0:	b.hi	412cc4 <wcrtomb@plt+0x103a4>  // b.pmore
  412ce4:	lsl	x0, x7, x0
  412ce8:	tst	x0, x13
  412cec:	b.eq	412cc4 <wcrtomb@plt+0x103a4>  // b.none
  412cf0:	b	41268c <wcrtomb@plt+0xfd6c>
  412cf4:	mov	w10, w26
  412cf8:	mov	w11, w26
  412cfc:	adrp	x26, 426000 <_obstack_memory_used@@Base+0xef38>
  412d00:	add	x0, x26, #0xa80
  412d04:	str	x0, [sp, #112]
  412d08:	str	wzr, [sp, #120]
  412d0c:	mov	w7, #0x0                   	// #0
  412d10:	mov	w5, #0x0                   	// #0
  412d14:	mov	x12, #0x1                   	// #1
  412d18:	mov	x19, #0x0                   	// #0
  412d1c:	mov	w26, #0x2                   	// #2
  412d20:	str	xzr, [sp, #128]
  412d24:	b	4122b0 <wcrtomb@plt+0xf990>
  412d28:	mov	w10, #0x1                   	// #1
  412d2c:	mov	w7, #0x0                   	// #0
  412d30:	mov	w5, w10
  412d34:	mov	w11, #0x0                   	// #0
  412d38:	mov	x12, #0x0                   	// #0
  412d3c:	mov	x19, #0x0                   	// #0
  412d40:	str	xzr, [sp, #112]
  412d44:	str	wzr, [sp, #120]
  412d48:	str	xzr, [sp, #128]
  412d4c:	b	4122b0 <wcrtomb@plt+0xf990>
  412d50:	add	x19, x19, #0x4
  412d54:	mov	w24, w1
  412d58:	mov	w21, #0x0                   	// #0
  412d5c:	mov	w4, #0x30                  	// #48
  412d60:	cbnz	w5, 41245c <wcrtomb@plt+0xfb3c>
  412d64:	b	412564 <wcrtomb@plt+0xfc44>
  412d68:	add	x20, x20, #0x1
  412d6c:	mov	w1, w24
  412d70:	mov	w21, #0x0                   	// #0
  412d74:	b	412574 <wcrtomb@plt+0xfc54>
  412d78:	mov	w0, w5
  412d7c:	mov	w5, #0x0                   	// #0
  412d80:	b	412438 <wcrtomb@plt+0xfb18>
  412d84:	mov	w0, #0x0                   	// #0
  412d88:	cbnz	x20, 412e6c <wcrtomb@plt+0x1054c>
  412d8c:	mov	w21, w5
  412d90:	mov	w1, #0x0                   	// #0
  412d94:	mov	w5, w0
  412d98:	b	412620 <wcrtomb@plt+0xfd00>
  412d9c:	mov	w1, w26
  412da0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  412da4:	add	x0, x0, #0xa88
  412da8:	str	w11, [sp, #112]
  412dac:	str	x6, [sp, #120]
  412db0:	bl	412038 <wcrtomb@plt+0xf718>
  412db4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  412db8:	str	x0, [sp, #208]
  412dbc:	add	x0, x1, #0xa80
  412dc0:	mov	w1, w26
  412dc4:	bl	412038 <wcrtomb@plt+0xf718>
  412dc8:	str	x0, [sp, #240]
  412dcc:	ldr	w11, [sp, #112]
  412dd0:	ldr	x6, [sp, #120]
  412dd4:	b	412228 <wcrtomb@plt+0xf908>
  412dd8:	mov	w4, w0
  412ddc:	mov	w21, #0x0                   	// #0
  412de0:	b	4127d4 <wcrtomb@plt+0xfeb4>
  412de4:	cmp	x23, x19
  412de8:	b.ls	412df0 <wcrtomb@plt+0x104d0>  // b.plast
  412dec:	strb	w4, [x28, x19]
  412df0:	add	x1, x2, #0x2
  412df4:	cmp	x23, x1
  412df8:	b.ls	412e04 <wcrtomb@plt+0x104e4>  // b.plast
  412dfc:	mov	w3, #0x30                  	// #48
  412e00:	strb	w3, [x28, x1]
  412e04:	add	x19, x2, #0x3
  412e08:	mov	w4, #0x30                  	// #48
  412e0c:	b	412898 <wcrtomb@plt+0xff78>
  412e10:	mov	w0, #0x76                  	// #118
  412e14:	cbz	w22, 412720 <wcrtomb@plt+0xfe00>
  412e18:	b	412dd8 <wcrtomb@plt+0x104b8>
  412e1c:	mov	w0, #0x72                  	// #114
  412e20:	b	412798 <wcrtomb@plt+0xfe78>
  412e24:	mov	w0, #0x61                  	// #97
  412e28:	cbz	w22, 412720 <wcrtomb@plt+0xfe00>
  412e2c:	b	412dd8 <wcrtomb@plt+0x104b8>
  412e30:	mov	w0, #0x6e                  	// #110
  412e34:	b	412798 <wcrtomb@plt+0xfe78>
  412e38:	mov	w0, #0x0                   	// #0
  412e3c:	mov	w21, w5
  412e40:	mov	w1, #0x0                   	// #0
  412e44:	mov	w5, w0
  412e48:	mov	w4, #0x20                  	// #32
  412e4c:	b	412620 <wcrtomb@plt+0xfd00>
  412e50:	mov	w5, #0x0                   	// #0
  412e54:	mov	w0, #0x74                  	// #116
  412e58:	b	412798 <wcrtomb@plt+0xfe78>
  412e5c:	mov	w5, #0x0                   	// #0
  412e60:	mov	w0, #0x76                  	// #118
  412e64:	cbz	w22, 412720 <wcrtomb@plt+0xfe00>
  412e68:	b	412dd8 <wcrtomb@plt+0x104b8>
  412e6c:	mov	w5, w0
  412e70:	mov	w21, #0x0                   	// #0
  412e74:	mov	w1, #0x0                   	// #0
  412e78:	b	412448 <wcrtomb@plt+0xfb28>
  412e7c:	mov	w2, w22
  412e80:	mov	w21, #0x0                   	// #0
  412e84:	b	412b78 <wcrtomb@plt+0x10258>
  412e88:	mov	w1, w0
  412e8c:	b	412574 <wcrtomb@plt+0xfc54>
  412e90:	mov	w5, w0
  412e94:	b	412694 <wcrtomb@plt+0xfd74>
  412e98:	mov	w5, #0x1                   	// #1
  412e9c:	cbz	w20, 412ec4 <wcrtomb@plt+0x105a4>
  412ea0:	mov	w10, #0x1                   	// #1
  412ea4:	adrp	x26, 426000 <_obstack_memory_used@@Base+0xef38>
  412ea8:	mov	w11, w10
  412eac:	add	x0, x26, #0xa80
  412eb0:	str	x0, [sp, #112]
  412eb4:	str	wzr, [sp, #120]
  412eb8:	b	412d0c <wcrtomb@plt+0x103ec>
  412ebc:	cbnz	w20, 413164 <wcrtomb@plt+0x10844>
  412ec0:	mov	w5, #0x0                   	// #0
  412ec4:	cbnz	x23, 41319c <wcrtomb@plt+0x1087c>
  412ec8:	adrp	x26, 426000 <_obstack_memory_used@@Base+0xef38>
  412ecc:	mov	x12, #0x1                   	// #1
  412ed0:	add	x0, x26, #0xa80
  412ed4:	mov	x19, x12
  412ed8:	mov	w10, #0x1                   	// #1
  412edc:	mov	w7, #0x0                   	// #0
  412ee0:	mov	w11, #0x0                   	// #0
  412ee4:	mov	w26, #0x2                   	// #2
  412ee8:	str	x0, [sp, #112]
  412eec:	str	wzr, [sp, #120]
  412ef0:	str	xzr, [sp, #128]
  412ef4:	b	4122b0 <wcrtomb@plt+0xf990>
  412ef8:	mov	w5, #0x0                   	// #0
  412efc:	b	412c34 <wcrtomb@plt+0x10314>
  412f00:	mov	w10, #0x1                   	// #1
  412f04:	mov	x12, #0x1                   	// #1
  412f08:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  412f0c:	mov	w5, w10
  412f10:	add	x0, x0, #0xa58
  412f14:	mov	x19, x12
  412f18:	mov	w7, #0x0                   	// #0
  412f1c:	mov	w11, #0x0                   	// #0
  412f20:	str	x0, [sp, #112]
  412f24:	str	wzr, [sp, #120]
  412f28:	str	xzr, [sp, #128]
  412f2c:	b	4122b0 <wcrtomb@plt+0xf990>
  412f30:	mov	w1, w21
  412f34:	mov	w4, #0x30                  	// #48
  412f38:	mov	w21, #0x0                   	// #0
  412f3c:	cbnz	w5, 41245c <wcrtomb@plt+0xfb3c>
  412f40:	b	412564 <wcrtomb@plt+0xfc44>
  412f44:	ldrb	w3, [x27, x7]
  412f48:	cmp	w3, #0x3e
  412f4c:	b.hi	413150 <wcrtomb@plt+0x10830>  // b.pmore
  412f50:	mov	x0, #0x1                   	// #1
  412f54:	mov	x2, #0xa38200000000        	// #179778741075968
  412f58:	movk	x2, #0x7000, lsl #48
  412f5c:	lsl	x0, x0, x3
  412f60:	mov	w1, #0x0                   	// #0
  412f64:	tst	x0, x2
  412f68:	mov	w21, #0x0                   	// #0
  412f6c:	b.eq	412620 <wcrtomb@plt+0xfd00>  // b.none
  412f70:	cbnz	w11, 4126a0 <wcrtomb@plt+0xfd80>
  412f74:	cmp	x23, x19
  412f78:	b.ls	412f80 <wcrtomb@plt+0x10660>  // b.plast
  412f7c:	strb	w4, [x28, x19]
  412f80:	add	x0, x19, #0x1
  412f84:	cmp	x23, x0
  412f88:	b.ls	412f94 <wcrtomb@plt+0x10674>  // b.plast
  412f8c:	mov	w1, #0x22                  	// #34
  412f90:	strb	w1, [x28, x0]
  412f94:	add	x0, x19, #0x2
  412f98:	cmp	x23, x0
  412f9c:	b.ls	412fa8 <wcrtomb@plt+0x10688>  // b.plast
  412fa0:	mov	w1, #0x22                  	// #34
  412fa4:	strb	w1, [x28, x0]
  412fa8:	add	x0, x19, #0x3
  412fac:	cmp	x23, x0
  412fb0:	b.ls	412fbc <wcrtomb@plt+0x1069c>  // b.plast
  412fb4:	mov	w1, #0x3f                  	// #63
  412fb8:	strb	w1, [x28, x0]
  412fbc:	add	x19, x19, #0x4
  412fc0:	mov	w4, w3
  412fc4:	mov	x20, x7
  412fc8:	mov	w0, #0x0                   	// #0
  412fcc:	mov	w21, #0x0                   	// #0
  412fd0:	b	412898 <wcrtomb@plt+0xff78>
  412fd4:	mov	w10, #0x1                   	// #1
  412fd8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  412fdc:	mov	w11, w10
  412fe0:	add	x0, x0, #0xa58
  412fe4:	mov	w5, w10
  412fe8:	mov	w7, #0x0                   	// #0
  412fec:	mov	x12, #0x1                   	// #1
  412ff0:	mov	x19, #0x0                   	// #0
  412ff4:	str	x0, [sp, #112]
  412ff8:	str	wzr, [sp, #120]
  412ffc:	str	xzr, [sp, #128]
  413000:	b	4122b0 <wcrtomb@plt+0xf990>
  413004:	mov	w0, w5
  413008:	b	412d88 <wcrtomb@plt+0x10468>
  41300c:	mov	w0, w5
  413010:	b	412e3c <wcrtomb@plt+0x1051c>
  413014:	ldr	x1, [sp, #208]
  413018:	ldrb	w0, [x1]
  41301c:	cbz	w0, 412230 <wcrtomb@plt+0xf910>
  413020:	cmp	x23, x19
  413024:	b.ls	41302c <wcrtomb@plt+0x1070c>  // b.plast
  413028:	strb	w0, [x28, x19]
  41302c:	add	x19, x19, #0x1
  413030:	ldrb	w0, [x1, x19]
  413034:	cbnz	w0, 413020 <wcrtomb@plt+0x10700>
  413038:	b	412230 <wcrtomb@plt+0xf910>
  41303c:	mov	x8, x21
  413040:	ldr	w11, [sp, #136]
  413044:	ldr	w24, [sp, #152]
  413048:	mov	w2, w22
  41304c:	ldr	w10, [sp, #160]
  413050:	mov	w21, #0x0                   	// #0
  413054:	ldp	w4, w5, [sp, #172]
  413058:	ldr	x12, [sp, #144]
  41305c:	ldr	x19, [sp, #184]
  413060:	ldr	x6, [sp, #216]
  413064:	b	412b70 <wcrtomb@plt+0x10250>
  413068:	mov	x9, x24
  41306c:	cmp	x24, x25
  413070:	ldr	w11, [sp, #136]
  413074:	mov	x8, x21
  413078:	ldr	w24, [sp, #152]
  41307c:	ldr	w10, [sp, #160]
  413080:	ldp	w4, w5, [sp, #172]
  413084:	ldr	x12, [sp, #144]
  413088:	ldr	x19, [sp, #184]
  41308c:	ldr	x6, [sp, #216]
  413090:	b.cc	4130a8 <wcrtomb@plt+0x10788>  // b.lo, b.ul, b.last
  413094:	b	4130b0 <wcrtomb@plt+0x10790>
  413098:	add	x8, x8, #0x1
  41309c:	add	x9, x20, x8
  4130a0:	cmp	x25, x9
  4130a4:	b.ls	4130b0 <wcrtomb@plt+0x10790>  // b.plast
  4130a8:	ldrb	w0, [x27, x9]
  4130ac:	cbnz	w0, 413098 <wcrtomb@plt+0x10778>
  4130b0:	mov	w2, w22
  4130b4:	mov	w21, #0x0                   	// #0
  4130b8:	b	412b70 <wcrtomb@plt+0x10250>
  4130bc:	mov	w0, w11
  4130c0:	ldr	x1, [sp, #112]
  4130c4:	cmp	x1, #0x0
  4130c8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4130cc:	b.eq	4130f4 <wcrtomb@plt+0x107d4>  // b.none
  4130d0:	ldrb	w0, [x1]
  4130d4:	cbz	w0, 4130f4 <wcrtomb@plt+0x107d4>
  4130d8:	sub	x26, x1, x19
  4130dc:	cmp	x23, x19
  4130e0:	b.ls	4130e8 <wcrtomb@plt+0x107c8>  // b.plast
  4130e4:	strb	w0, [x28, x19]
  4130e8:	add	x19, x19, #0x1
  4130ec:	ldrb	w0, [x26, x19]
  4130f0:	cbnz	w0, 4130dc <wcrtomb@plt+0x107bc>
  4130f4:	cmp	x23, x19
  4130f8:	b.ls	4126d4 <wcrtomb@plt+0xfdb4>  // b.plast
  4130fc:	strb	wzr, [x28, x19]
  413100:	b	4126d4 <wcrtomb@plt+0xfdb4>
  413104:	mov	w5, w22
  413108:	b	412694 <wcrtomb@plt+0xfd74>
  41310c:	cmp	w26, #0x2
  413110:	cset	w5, eq  // eq = none
  413114:	b	412694 <wcrtomb@plt+0xfd74>
  413118:	ldr	w5, [sp, #200]
  41311c:	mov	x3, x25
  413120:	ldr	x1, [sp, #128]
  413124:	mov	x2, x27
  413128:	ldr	x7, [sp, #208]
  41312c:	mov	w4, #0x5                   	// #5
  413130:	ldr	x0, [sp, #240]
  413134:	str	x0, [sp]
  413138:	mov	x0, x28
  41313c:	bl	4121a0 <wcrtomb@plt+0xf880>
  413140:	mov	x19, x0
  413144:	b	4126d4 <wcrtomb@plt+0xfdb4>
  413148:	ldr	w0, [sp, #120]
  41314c:	b	4130c0 <wcrtomb@plt+0x107a0>
  413150:	mov	w1, #0x0                   	// #0
  413154:	mov	w21, #0x0                   	// #0
  413158:	b	412620 <wcrtomb@plt+0xfd00>
  41315c:	mov	w26, #0x2                   	// #2
  413160:	b	412694 <wcrtomb@plt+0xfd74>
  413164:	mov	w10, #0x1                   	// #1
  413168:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xef38>
  41316c:	mov	w11, w10
  413170:	add	x0, x0, #0xa80
  413174:	mov	w7, #0x0                   	// #0
  413178:	mov	w5, #0x0                   	// #0
  41317c:	mov	x12, #0x1                   	// #1
  413180:	mov	x19, #0x0                   	// #0
  413184:	str	x0, [sp, #112]
  413188:	str	wzr, [sp, #120]
  41318c:	str	xzr, [sp, #128]
  413190:	b	4122b0 <wcrtomb@plt+0xf990>
  413194:	ldr	x23, [sp, #128]
  413198:	b	412540 <wcrtomb@plt+0xfc20>
  41319c:	mov	x1, #0x0                   	// #0
  4131a0:	mov	w0, #0x0                   	// #0
  4131a4:	mov	w7, #0x0                   	// #0
  4131a8:	mov	w10, #0x1                   	// #1
  4131ac:	str	x23, [sp, #128]
  4131b0:	b	412400 <wcrtomb@plt+0xfae0>
  4131b4:	bl	4025f0 <abort@plt>
  4131b8:	sub	sp, sp, #0x80
  4131bc:	stp	x29, x30, [sp, #16]
  4131c0:	add	x29, sp, #0x10
  4131c4:	stp	x19, x20, [sp, #32]
  4131c8:	mov	w19, w0
  4131cc:	mov	x20, x3
  4131d0:	stp	x21, x22, [sp, #48]
  4131d4:	stp	x23, x24, [sp, #64]
  4131d8:	mov	x23, x1
  4131dc:	mov	x24, x2
  4131e0:	stp	x25, x26, [sp, #80]
  4131e4:	stp	x27, x28, [sp, #96]
  4131e8:	bl	402890 <__errno_location@plt>
  4131ec:	mov	x22, x0
  4131f0:	ldr	w0, [x0]
  4131f4:	adrp	x27, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4131f8:	str	w0, [sp, #116]
  4131fc:	ldr	x21, [x27, #984]
  413200:	tbnz	w19, #31, 413358 <wcrtomb@plt+0x10a38>
  413204:	add	x26, x27, #0x3d8
  413208:	ldr	w0, [x26, #8]
  41320c:	cmp	w0, w19
  413210:	b.gt	413260 <wcrtomb@plt+0x10940>
  413214:	mov	w0, #0x7fffffff            	// #2147483647
  413218:	cmp	w19, w0
  41321c:	b.eq	413354 <wcrtomb@plt+0x10a34>  // b.none
  413220:	add	w28, w19, #0x1
  413224:	add	x0, x26, #0x10
  413228:	cmp	x21, x0
  41322c:	sbfiz	x1, x28, #4, #32
  413230:	b.eq	413338 <wcrtomb@plt+0x10a18>  // b.none
  413234:	mov	x0, x21
  413238:	bl	4140e0 <wcrtomb@plt+0x117c0>
  41323c:	mov	x21, x0
  413240:	str	x0, [x27, #984]
  413244:	ldr	w0, [x26, #8]
  413248:	mov	w1, #0x0                   	// #0
  41324c:	sub	w2, w28, w0
  413250:	add	x0, x21, w0, sxtw #4
  413254:	sbfiz	x2, x2, #4, #32
  413258:	bl	402510 <memset@plt>
  41325c:	str	w28, [x26, #8]
  413260:	sbfiz	x19, x19, #4, #32
  413264:	add	x26, x20, #0x8
  413268:	add	x0, x21, x19
  41326c:	str	x0, [sp, #120]
  413270:	ldp	w4, w5, [x20]
  413274:	mov	x6, x26
  413278:	ldr	x7, [x20, #40]
  41327c:	orr	w25, w5, #0x1
  413280:	ldr	x27, [x21, x19]
  413284:	mov	x3, x24
  413288:	ldr	x28, [x0, #8]
  41328c:	mov	x1, x27
  413290:	ldr	x0, [x20, #48]
  413294:	str	x0, [sp]
  413298:	mov	x2, x23
  41329c:	mov	w5, w25
  4132a0:	mov	x0, x28
  4132a4:	bl	4121a0 <wcrtomb@plt+0xf880>
  4132a8:	cmp	x27, x0
  4132ac:	b.hi	41330c <wcrtomb@plt+0x109ec>  // b.pmore
  4132b0:	add	x27, x0, #0x1
  4132b4:	str	x27, [x21, x19]
  4132b8:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4132bc:	add	x0, x0, #0x790
  4132c0:	cmp	x28, x0
  4132c4:	b.eq	4132d0 <wcrtomb@plt+0x109b0>  // b.none
  4132c8:	mov	x0, x28
  4132cc:	bl	4026b0 <free@plt>
  4132d0:	mov	x0, x27
  4132d4:	bl	414080 <wcrtomb@plt+0x11760>
  4132d8:	ldr	x1, [sp, #120]
  4132dc:	mov	x28, x0
  4132e0:	ldr	w4, [x20]
  4132e4:	mov	x6, x26
  4132e8:	ldr	x7, [x20, #40]
  4132ec:	str	x0, [x1, #8]
  4132f0:	ldr	x1, [x20, #48]
  4132f4:	str	x1, [sp]
  4132f8:	mov	w5, w25
  4132fc:	mov	x3, x24
  413300:	mov	x2, x23
  413304:	mov	x1, x27
  413308:	bl	4121a0 <wcrtomb@plt+0xf880>
  41330c:	ldr	w0, [sp, #116]
  413310:	ldp	x29, x30, [sp, #16]
  413314:	ldp	x19, x20, [sp, #32]
  413318:	ldp	x23, x24, [sp, #64]
  41331c:	ldp	x25, x26, [sp, #80]
  413320:	str	w0, [x22]
  413324:	mov	x0, x28
  413328:	ldp	x21, x22, [sp, #48]
  41332c:	ldp	x27, x28, [sp, #96]
  413330:	add	sp, sp, #0x80
  413334:	ret
  413338:	mov	x0, #0x0                   	// #0
  41333c:	bl	4140e0 <wcrtomb@plt+0x117c0>
  413340:	mov	x21, x0
  413344:	str	x0, [x27, #984]
  413348:	ldp	x0, x1, [x26, #16]
  41334c:	stp	x0, x1, [x21]
  413350:	b	413244 <wcrtomb@plt+0x10924>
  413354:	bl	4142c0 <wcrtomb@plt+0x119a0>
  413358:	bl	4025f0 <abort@plt>
  41335c:	nop
  413360:	stp	x29, x30, [sp, #-48]!
  413364:	mov	x29, sp
  413368:	stp	x19, x20, [sp, #16]
  41336c:	mov	x20, x0
  413370:	str	x21, [sp, #32]
  413374:	bl	402890 <__errno_location@plt>
  413378:	adrp	x2, 442000 <__progname@@GLIBC_2.17+0x3b98>
  41337c:	mov	x19, x0
  413380:	add	x2, x2, #0x790
  413384:	cmp	x20, #0x0
  413388:	add	x2, x2, #0x100
  41338c:	mov	x1, #0x38                  	// #56
  413390:	ldr	w21, [x19]
  413394:	csel	x0, x2, x20, eq  // eq = none
  413398:	bl	414258 <wcrtomb@plt+0x11938>
  41339c:	str	w21, [x19]
  4133a0:	ldp	x19, x20, [sp, #16]
  4133a4:	ldr	x21, [sp, #32]
  4133a8:	ldp	x29, x30, [sp], #48
  4133ac:	ret
  4133b0:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4133b4:	add	x1, x1, #0x790
  4133b8:	cmp	x0, #0x0
  4133bc:	add	x1, x1, #0x100
  4133c0:	csel	x0, x1, x0, eq  // eq = none
  4133c4:	ldr	w0, [x0]
  4133c8:	ret
  4133cc:	nop
  4133d0:	adrp	x2, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4133d4:	add	x2, x2, #0x790
  4133d8:	cmp	x0, #0x0
  4133dc:	add	x2, x2, #0x100
  4133e0:	csel	x0, x2, x0, eq  // eq = none
  4133e4:	str	w1, [x0]
  4133e8:	ret
  4133ec:	nop
  4133f0:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4133f4:	add	x3, x3, #0x790
  4133f8:	cmp	x0, #0x0
  4133fc:	add	x3, x3, #0x100
  413400:	csel	x0, x3, x0, eq  // eq = none
  413404:	ubfx	x4, x1, #5, #3
  413408:	add	x3, x0, #0x8
  41340c:	and	w1, w1, #0x1f
  413410:	ldr	w5, [x3, x4, lsl #2]
  413414:	lsr	w0, w5, w1
  413418:	eor	w2, w0, w2
  41341c:	and	w2, w2, #0x1
  413420:	and	w0, w0, #0x1
  413424:	lsl	w2, w2, w1
  413428:	eor	w2, w2, w5
  41342c:	str	w2, [x3, x4, lsl #2]
  413430:	ret
  413434:	nop
  413438:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3b98>
  41343c:	add	x3, x3, #0x790
  413440:	cmp	x0, #0x0
  413444:	add	x3, x3, #0x100
  413448:	csel	x2, x3, x0, eq  // eq = none
  41344c:	ldr	w0, [x2, #4]
  413450:	str	w1, [x2, #4]
  413454:	ret
  413458:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3b98>
  41345c:	add	x3, x3, #0x790
  413460:	cmp	x0, #0x0
  413464:	add	x3, x3, #0x100
  413468:	csel	x0, x3, x0, eq  // eq = none
  41346c:	mov	w3, #0xa                   	// #10
  413470:	cmp	x1, #0x0
  413474:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  413478:	str	w3, [x0]
  41347c:	b.eq	413488 <wcrtomb@plt+0x10b68>  // b.none
  413480:	stp	x1, x2, [x0, #40]
  413484:	ret
  413488:	stp	x29, x30, [sp, #-16]!
  41348c:	mov	x29, sp
  413490:	bl	4025f0 <abort@plt>
  413494:	nop
  413498:	sub	sp, sp, #0x50
  41349c:	adrp	x5, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4134a0:	stp	x29, x30, [sp, #16]
  4134a4:	add	x29, sp, #0x10
  4134a8:	stp	x19, x20, [sp, #32]
  4134ac:	mov	x19, x4
  4134b0:	add	x4, x5, #0x790
  4134b4:	cmp	x19, #0x0
  4134b8:	add	x4, x4, #0x100
  4134bc:	csel	x19, x4, x19, eq  // eq = none
  4134c0:	mov	x20, x3
  4134c4:	stp	x21, x22, [sp, #48]
  4134c8:	mov	x21, x0
  4134cc:	mov	x22, x1
  4134d0:	str	x23, [sp, #64]
  4134d4:	mov	x23, x2
  4134d8:	bl	402890 <__errno_location@plt>
  4134dc:	ldp	x7, x8, [x19, #40]
  4134e0:	mov	x3, x20
  4134e4:	mov	x20, x0
  4134e8:	mov	x0, x21
  4134ec:	ldp	w4, w5, [x19]
  4134f0:	mov	x2, x23
  4134f4:	ldr	w21, [x20]
  4134f8:	mov	x1, x22
  4134fc:	str	x8, [sp]
  413500:	add	x6, x19, #0x8
  413504:	bl	4121a0 <wcrtomb@plt+0xf880>
  413508:	ldp	x29, x30, [sp, #16]
  41350c:	ldr	x23, [sp, #64]
  413510:	str	w21, [x20]
  413514:	ldp	x19, x20, [sp, #32]
  413518:	ldp	x21, x22, [sp, #48]
  41351c:	add	sp, sp, #0x50
  413520:	ret
  413524:	nop
  413528:	sub	sp, sp, #0x70
  41352c:	adrp	x4, 442000 <__progname@@GLIBC_2.17+0x3b98>
  413530:	add	x4, x4, #0x790
  413534:	cmp	x3, #0x0
  413538:	add	x4, x4, #0x100
  41353c:	stp	x29, x30, [sp, #16]
  413540:	add	x29, sp, #0x10
  413544:	stp	x19, x20, [sp, #32]
  413548:	csel	x19, x4, x3, eq  // eq = none
  41354c:	mov	x20, x2
  413550:	stp	x21, x22, [sp, #48]
  413554:	mov	x22, x0
  413558:	stp	x23, x24, [sp, #64]
  41355c:	mov	x23, x1
  413560:	stp	x25, x26, [sp, #80]
  413564:	stp	x27, x28, [sp, #96]
  413568:	bl	402890 <__errno_location@plt>
  41356c:	ldr	w28, [x0]
  413570:	ldp	w4, w5, [x19]
  413574:	mov	x21, x0
  413578:	ldp	x7, x0, [x19, #40]
  41357c:	cmp	x20, #0x0
  413580:	cset	w24, eq  // eq = none
  413584:	add	x27, x19, #0x8
  413588:	orr	w24, w24, w5
  41358c:	mov	x6, x27
  413590:	mov	x3, x23
  413594:	mov	x2, x22
  413598:	mov	w5, w24
  41359c:	str	x0, [sp]
  4135a0:	mov	x1, #0x0                   	// #0
  4135a4:	mov	x0, #0x0                   	// #0
  4135a8:	bl	4121a0 <wcrtomb@plt+0xf880>
  4135ac:	add	x26, x0, #0x1
  4135b0:	mov	x25, x0
  4135b4:	mov	x0, x26
  4135b8:	bl	414080 <wcrtomb@plt+0x11760>
  4135bc:	ldp	x7, x1, [x19, #40]
  4135c0:	mov	w5, w24
  4135c4:	ldr	w4, [x19]
  4135c8:	mov	x6, x27
  4135cc:	str	x1, [sp]
  4135d0:	mov	x3, x23
  4135d4:	mov	x2, x22
  4135d8:	mov	x19, x0
  4135dc:	mov	x1, x26
  4135e0:	bl	4121a0 <wcrtomb@plt+0xf880>
  4135e4:	str	w28, [x21]
  4135e8:	cbz	x20, 4135f0 <wcrtomb@plt+0x10cd0>
  4135ec:	str	x25, [x20]
  4135f0:	mov	x0, x19
  4135f4:	ldp	x29, x30, [sp, #16]
  4135f8:	ldp	x19, x20, [sp, #32]
  4135fc:	ldp	x21, x22, [sp, #48]
  413600:	ldp	x23, x24, [sp, #64]
  413604:	ldp	x25, x26, [sp, #80]
  413608:	ldp	x27, x28, [sp, #96]
  41360c:	add	sp, sp, #0x70
  413610:	ret
  413614:	nop
  413618:	mov	x3, x2
  41361c:	mov	x2, #0x0                   	// #0
  413620:	b	413528 <wcrtomb@plt+0x10c08>
  413624:	nop
  413628:	stp	x29, x30, [sp, #-64]!
  41362c:	mov	x29, sp
  413630:	stp	x21, x22, [sp, #32]
  413634:	str	x23, [sp, #48]
  413638:	adrp	x23, 43e000 <_obstack_memory_used@@Base+0x26f38>
  41363c:	add	x22, x23, #0x3d8
  413640:	stp	x19, x20, [sp, #16]
  413644:	ldr	x21, [x23, #984]
  413648:	ldr	w20, [x22, #8]
  41364c:	cmp	w20, #0x1
  413650:	b.le	413678 <wcrtomb@plt+0x10d58>
  413654:	sub	w0, w20, #0x2
  413658:	add	x20, x21, #0x28
  41365c:	add	x19, x21, #0x18
  413660:	add	x20, x20, w0, uxtw #4
  413664:	nop
  413668:	ldr	x0, [x19], #16
  41366c:	bl	4026b0 <free@plt>
  413670:	cmp	x19, x20
  413674:	b.ne	413668 <wcrtomb@plt+0x10d48>  // b.any
  413678:	ldr	x0, [x21, #8]
  41367c:	adrp	x19, 442000 <__progname@@GLIBC_2.17+0x3b98>
  413680:	add	x19, x19, #0x790
  413684:	cmp	x0, x19
  413688:	b.eq	413698 <wcrtomb@plt+0x10d78>  // b.none
  41368c:	bl	4026b0 <free@plt>
  413690:	mov	x0, #0x100                 	// #256
  413694:	stp	x0, x19, [x22, #16]
  413698:	add	x19, x22, #0x10
  41369c:	cmp	x21, x19
  4136a0:	b.eq	4136b0 <wcrtomb@plt+0x10d90>  // b.none
  4136a4:	mov	x0, x21
  4136a8:	bl	4026b0 <free@plt>
  4136ac:	str	x19, [x23, #984]
  4136b0:	mov	w0, #0x1                   	// #1
  4136b4:	str	w0, [x22, #8]
  4136b8:	ldp	x19, x20, [sp, #16]
  4136bc:	ldp	x21, x22, [sp, #32]
  4136c0:	ldr	x23, [sp, #48]
  4136c4:	ldp	x29, x30, [sp], #64
  4136c8:	ret
  4136cc:	nop
  4136d0:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4136d4:	add	x3, x3, #0x790
  4136d8:	add	x3, x3, #0x100
  4136dc:	mov	x2, #0xffffffffffffffff    	// #-1
  4136e0:	b	4131b8 <wcrtomb@plt+0x10898>
  4136e4:	nop
  4136e8:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4136ec:	add	x3, x3, #0x790
  4136f0:	add	x3, x3, #0x100
  4136f4:	b	4131b8 <wcrtomb@plt+0x10898>
  4136f8:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4136fc:	add	x3, x3, #0x790
  413700:	mov	x1, x0
  413704:	add	x3, x3, #0x100
  413708:	mov	x2, #0xffffffffffffffff    	// #-1
  41370c:	mov	w0, #0x0                   	// #0
  413710:	b	4131b8 <wcrtomb@plt+0x10898>
  413714:	nop
  413718:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3b98>
  41371c:	add	x3, x3, #0x790
  413720:	mov	x2, x1
  413724:	add	x3, x3, #0x100
  413728:	mov	x1, x0
  41372c:	mov	w0, #0x0                   	// #0
  413730:	b	4131b8 <wcrtomb@plt+0x10898>
  413734:	nop
  413738:	stp	x29, x30, [sp, #-96]!
  41373c:	add	x8, sp, #0x28
  413740:	mov	x29, sp
  413744:	stp	x19, x20, [sp, #16]
  413748:	mov	x20, x2
  41374c:	mov	w19, w0
  413750:	mov	w0, w1
  413754:	bl	412008 <wcrtomb@plt+0xf6e8>
  413758:	add	x3, sp, #0x28
  41375c:	mov	x1, x20
  413760:	mov	w0, w19
  413764:	mov	x2, #0xffffffffffffffff    	// #-1
  413768:	bl	4131b8 <wcrtomb@plt+0x10898>
  41376c:	ldp	x19, x20, [sp, #16]
  413770:	ldp	x29, x30, [sp], #96
  413774:	ret
  413778:	stp	x29, x30, [sp, #-112]!
  41377c:	add	x8, sp, #0x38
  413780:	mov	x29, sp
  413784:	stp	x19, x20, [sp, #16]
  413788:	mov	x20, x2
  41378c:	mov	w19, w0
  413790:	mov	w0, w1
  413794:	str	x21, [sp, #32]
  413798:	mov	x21, x3
  41379c:	bl	412008 <wcrtomb@plt+0xf6e8>
  4137a0:	add	x3, sp, #0x38
  4137a4:	mov	x2, x21
  4137a8:	mov	x1, x20
  4137ac:	mov	w0, w19
  4137b0:	bl	4131b8 <wcrtomb@plt+0x10898>
  4137b4:	ldp	x19, x20, [sp, #16]
  4137b8:	ldr	x21, [sp, #32]
  4137bc:	ldp	x29, x30, [sp], #112
  4137c0:	ret
  4137c4:	nop
  4137c8:	mov	x2, x1
  4137cc:	mov	w1, w0
  4137d0:	mov	w0, #0x0                   	// #0
  4137d4:	b	413738 <wcrtomb@plt+0x10e18>
  4137d8:	mov	x4, x1
  4137dc:	mov	x3, x2
  4137e0:	mov	w1, w0
  4137e4:	mov	x2, x4
  4137e8:	mov	w0, #0x0                   	// #0
  4137ec:	b	413778 <wcrtomb@plt+0x10e58>
  4137f0:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3b98>
  4137f4:	add	x3, x3, #0x790
  4137f8:	stp	x29, x30, [sp, #-80]!
  4137fc:	add	x5, x3, #0x100
  413800:	ubfx	x7, x2, #5, #3
  413804:	mov	x29, sp
  413808:	ldp	x8, x9, [x3, #256]
  41380c:	stp	x8, x9, [sp, #24]
  413810:	add	x6, sp, #0x20
  413814:	and	w8, w2, #0x1f
  413818:	add	x4, sp, #0x18
  41381c:	ldp	x2, x3, [x3, #272]
  413820:	stp	x2, x3, [sp, #40]
  413824:	ldp	x2, x3, [x5, #32]
  413828:	stp	x2, x3, [sp, #56]
  41382c:	mov	x2, x1
  413830:	mov	x3, x4
  413834:	ldr	x1, [x5, #48]
  413838:	str	x1, [sp, #72]
  41383c:	mov	x1, x0
  413840:	mov	w0, #0x0                   	// #0
  413844:	ldr	w5, [x6, x7, lsl #2]
  413848:	lsr	w4, w5, w8
  41384c:	mvn	w4, w4
  413850:	and	w4, w4, #0x1
  413854:	lsl	w4, w4, w8
  413858:	eor	w4, w4, w5
  41385c:	str	w4, [x6, x7, lsl #2]
  413860:	bl	4131b8 <wcrtomb@plt+0x10898>
  413864:	ldp	x29, x30, [sp], #80
  413868:	ret
  41386c:	nop
  413870:	mov	w2, w1
  413874:	mov	x1, #0xffffffffffffffff    	// #-1
  413878:	b	4137f0 <wcrtomb@plt+0x10ed0>
  41387c:	nop
  413880:	mov	w2, #0x3a                  	// #58
  413884:	mov	x1, #0xffffffffffffffff    	// #-1
  413888:	b	4137f0 <wcrtomb@plt+0x10ed0>
  41388c:	nop
  413890:	mov	w2, #0x3a                  	// #58
  413894:	b	4137f0 <wcrtomb@plt+0x10ed0>
  413898:	stp	x29, x30, [sp, #-160]!
  41389c:	mov	x29, sp
  4138a0:	add	x8, sp, #0x20
  4138a4:	stp	x19, x20, [sp, #16]
  4138a8:	mov	x20, x2
  4138ac:	mov	w19, w0
  4138b0:	mov	w0, w1
  4138b4:	bl	412008 <wcrtomb@plt+0xf6e8>
  4138b8:	ldp	x0, x1, [sp, #32]
  4138bc:	stp	x0, x1, [sp, #104]
  4138c0:	add	x3, sp, #0x68
  4138c4:	ldr	w2, [sp, #116]
  4138c8:	mov	x1, x20
  4138cc:	ldp	x6, x7, [sp, #48]
  4138d0:	mvn	w4, w2
  4138d4:	ldp	x8, x9, [sp, #64]
  4138d8:	and	w4, w4, #0x4000000
  4138dc:	ldr	x5, [sp, #80]
  4138e0:	eor	w4, w4, w2
  4138e4:	mov	w0, w19
  4138e8:	mov	x2, #0xffffffffffffffff    	// #-1
  4138ec:	str	w4, [sp, #116]
  4138f0:	stp	x6, x7, [sp, #120]
  4138f4:	stp	x8, x9, [sp, #136]
  4138f8:	str	x5, [sp, #152]
  4138fc:	bl	4131b8 <wcrtomb@plt+0x10898>
  413900:	ldp	x19, x20, [sp, #16]
  413904:	ldp	x29, x30, [sp], #160
  413908:	ret
  41390c:	nop
  413910:	adrp	x5, 442000 <__progname@@GLIBC_2.17+0x3b98>
  413914:	add	x5, x5, #0x790
  413918:	stp	x29, x30, [sp, #-80]!
  41391c:	mov	x6, x1
  413920:	mov	w1, #0xa                   	// #10
  413924:	mov	x29, sp
  413928:	ldp	x8, x9, [x5, #256]
  41392c:	stp	x8, x9, [sp, #24]
  413930:	cmp	x6, #0x0
  413934:	str	w1, [sp, #24]
  413938:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  41393c:	ldp	x10, x11, [x5, #272]
  413940:	stp	x10, x11, [sp, #40]
  413944:	ldp	x8, x9, [x5, #288]
  413948:	stp	x8, x9, [sp, #56]
  41394c:	ldr	x1, [x5, #304]
  413950:	str	x1, [sp, #72]
  413954:	b.eq	413978 <wcrtomb@plt+0x11058>  // b.none
  413958:	mov	x5, x2
  41395c:	mov	x1, x3
  413960:	mov	x2, x4
  413964:	add	x3, sp, #0x18
  413968:	stp	x6, x5, [sp, #64]
  41396c:	bl	4131b8 <wcrtomb@plt+0x10898>
  413970:	ldp	x29, x30, [sp], #80
  413974:	ret
  413978:	bl	4025f0 <abort@plt>
  41397c:	nop
  413980:	mov	x4, #0xffffffffffffffff    	// #-1
  413984:	b	413910 <wcrtomb@plt+0x10ff0>
  413988:	mov	x4, x1
  41398c:	mov	x3, x2
  413990:	mov	x1, x0
  413994:	mov	x2, x4
  413998:	mov	w0, #0x0                   	// #0
  41399c:	mov	x4, #0xffffffffffffffff    	// #-1
  4139a0:	b	413910 <wcrtomb@plt+0x10ff0>
  4139a4:	nop
  4139a8:	mov	x4, x1
  4139ac:	mov	x5, x2
  4139b0:	mov	x1, x0
  4139b4:	mov	x2, x4
  4139b8:	mov	w0, #0x0                   	// #0
  4139bc:	mov	x4, x3
  4139c0:	mov	x3, x5
  4139c4:	b	413910 <wcrtomb@plt+0x10ff0>
  4139c8:	adrp	x3, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4139cc:	add	x3, x3, #0x3d8
  4139d0:	add	x3, x3, #0x20
  4139d4:	b	4131b8 <wcrtomb@plt+0x10898>
  4139d8:	adrp	x3, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4139dc:	add	x3, x3, #0x3d8
  4139e0:	mov	x2, x1
  4139e4:	add	x3, x3, #0x20
  4139e8:	mov	x1, x0
  4139ec:	mov	w0, #0x0                   	// #0
  4139f0:	b	4131b8 <wcrtomb@plt+0x10898>
  4139f4:	nop
  4139f8:	adrp	x3, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4139fc:	add	x3, x3, #0x3d8
  413a00:	add	x3, x3, #0x20
  413a04:	mov	x2, #0xffffffffffffffff    	// #-1
  413a08:	b	4131b8 <wcrtomb@plt+0x10898>
  413a0c:	nop
  413a10:	adrp	x3, 43e000 <_obstack_memory_used@@Base+0x26f38>
  413a14:	add	x3, x3, #0x3d8
  413a18:	mov	x1, x0
  413a1c:	add	x3, x3, #0x20
  413a20:	mov	x2, #0xffffffffffffffff    	// #-1
  413a24:	mov	w0, #0x0                   	// #0
  413a28:	b	4131b8 <wcrtomb@plt+0x10898>
  413a2c:	nop
  413a30:	stp	x29, x30, [sp, #-64]!
  413a34:	mov	x29, sp
  413a38:	stp	x19, x20, [sp, #16]
  413a3c:	mov	x20, x2
  413a40:	stp	x21, x22, [sp, #32]
  413a44:	mov	w22, w0
  413a48:	mov	x21, x1
  413a4c:	str	x23, [sp, #48]
  413a50:	mov	x23, #0x7ff00000            	// #2146435072
  413a54:	nop
  413a58:	mov	x2, x20
  413a5c:	mov	x1, x21
  413a60:	mov	w0, w22
  413a64:	bl	402760 <read@plt>
  413a68:	mov	x19, x0
  413a6c:	tbz	x0, #63, 413a90 <wcrtomb@plt+0x11170>
  413a70:	bl	402890 <__errno_location@plt>
  413a74:	ldr	w2, [x0]
  413a78:	cmp	w2, #0x4
  413a7c:	b.eq	413a58 <wcrtomb@plt+0x11138>  // b.none
  413a80:	cmp	w2, #0x16
  413a84:	ccmp	x20, x23, #0x0, eq  // eq = none
  413a88:	mov	x20, #0x7ff00000            	// #2146435072
  413a8c:	b.hi	413a58 <wcrtomb@plt+0x11138>  // b.pmore
  413a90:	mov	x0, x19
  413a94:	ldp	x19, x20, [sp, #16]
  413a98:	ldp	x21, x22, [sp, #32]
  413a9c:	ldr	x23, [sp, #48]
  413aa0:	ldp	x29, x30, [sp], #64
  413aa4:	ret
  413aa8:	stp	x29, x30, [sp, #-32]!
  413aac:	mov	x2, x1
  413ab0:	mov	x29, sp
  413ab4:	stp	x19, x20, [sp, #16]
  413ab8:	mov	x19, x0
  413abc:	mov	x20, x1
  413ac0:	mov	w1, #0x0                   	// #0
  413ac4:	bl	402770 <memchr@plt>
  413ac8:	sub	x19, x0, x19
  413acc:	cmp	x0, #0x0
  413ad0:	csinc	x0, x20, x19, eq  // eq = none
  413ad4:	ldp	x19, x20, [sp, #16]
  413ad8:	ldp	x29, x30, [sp], #32
  413adc:	ret
  413ae0:	stp	x29, x30, [sp, #-48]!
  413ae4:	cmp	w0, #0x2
  413ae8:	mov	x29, sp
  413aec:	stp	x19, x20, [sp, #16]
  413af0:	mov	w19, w0
  413af4:	b.ls	413b08 <wcrtomb@plt+0x111e8>  // b.plast
  413af8:	mov	w0, w19
  413afc:	ldp	x19, x20, [sp, #16]
  413b00:	ldp	x29, x30, [sp], #48
  413b04:	ret
  413b08:	str	x21, [sp, #32]
  413b0c:	bl	423e88 <_obstack_memory_used@@Base+0xcdc0>
  413b10:	mov	w21, w0
  413b14:	bl	402890 <__errno_location@plt>
  413b18:	mov	x20, x0
  413b1c:	mov	w0, w19
  413b20:	mov	w19, w21
  413b24:	ldr	w21, [x20]
  413b28:	bl	402580 <close@plt>
  413b2c:	str	w21, [x20]
  413b30:	mov	w0, w19
  413b34:	ldp	x19, x20, [sp, #16]
  413b38:	ldr	x21, [sp, #32]
  413b3c:	ldp	x29, x30, [sp], #48
  413b40:	ret
  413b44:	nop
  413b48:	sub	sp, sp, #0x50
  413b4c:	stp	x29, x30, [sp, #32]
  413b50:	add	x29, sp, #0x20
  413b54:	stp	x19, x20, [sp, #48]
  413b58:	mov	x19, x5
  413b5c:	mov	x20, x0
  413b60:	str	x21, [sp, #64]
  413b64:	mov	x21, x4
  413b68:	cbz	x1, 413d4c <wcrtomb@plt+0x1142c>
  413b6c:	mov	x4, x3
  413b70:	mov	x3, x2
  413b74:	mov	x2, x1
  413b78:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  413b7c:	add	x1, x1, #0xe78
  413b80:	bl	4028d0 <fprintf@plt>
  413b84:	mov	w2, #0x5                   	// #5
  413b88:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  413b8c:	mov	x0, #0x0                   	// #0
  413b90:	add	x1, x1, #0xe90
  413b94:	bl	4027f0 <dcgettext@plt>
  413b98:	mov	x2, x0
  413b9c:	mov	w3, #0x7e4                 	// #2020
  413ba0:	mov	x0, x20
  413ba4:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  413ba8:	add	x1, x1, #0x1b8
  413bac:	bl	4028d0 <fprintf@plt>
  413bb0:	mov	x1, x20
  413bb4:	mov	w0, #0xa                   	// #10
  413bb8:	bl	4027a0 <fputc_unlocked@plt>
  413bbc:	mov	w2, #0x5                   	// #5
  413bc0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  413bc4:	mov	x0, #0x0                   	// #0
  413bc8:	add	x1, x1, #0xe98
  413bcc:	bl	4027f0 <dcgettext@plt>
  413bd0:	mov	x1, x0
  413bd4:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xef38>
  413bd8:	add	x2, x2, #0xf48
  413bdc:	mov	x0, x20
  413be0:	bl	4028d0 <fprintf@plt>
  413be4:	mov	x1, x20
  413be8:	mov	w0, #0xa                   	// #10
  413bec:	bl	4027a0 <fputc_unlocked@plt>
  413bf0:	cmp	x19, #0x5
  413bf4:	b.eq	413d5c <wcrtomb@plt+0x1143c>  // b.none
  413bf8:	b.hi	413c48 <wcrtomb@plt+0x11328>  // b.pmore
  413bfc:	cmp	x19, #0x2
  413c00:	b.eq	413d98 <wcrtomb@plt+0x11478>  // b.none
  413c04:	b.ls	413cb4 <wcrtomb@plt+0x11394>  // b.plast
  413c08:	cmp	x19, #0x3
  413c0c:	b.eq	413e18 <wcrtomb@plt+0x114f8>  // b.none
  413c10:	mov	w2, #0x5                   	// #5
  413c14:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  413c18:	mov	x0, #0x0                   	// #0
  413c1c:	add	x1, x1, #0xfb8
  413c20:	bl	4027f0 <dcgettext@plt>
  413c24:	mov	x1, x0
  413c28:	mov	x0, x20
  413c2c:	ldp	x2, x3, [x21]
  413c30:	ldp	x4, x5, [x21, #16]
  413c34:	ldp	x29, x30, [sp, #32]
  413c38:	ldp	x19, x20, [sp, #48]
  413c3c:	ldr	x21, [sp, #64]
  413c40:	add	sp, sp, #0x50
  413c44:	b	4028d0 <fprintf@plt>
  413c48:	cmp	x19, #0x8
  413c4c:	b.eq	413e50 <wcrtomb@plt+0x11530>  // b.none
  413c50:	b.ls	413cf4 <wcrtomb@plt+0x113d4>  // b.plast
  413c54:	cmp	x19, #0x9
  413c58:	b.ne	413e08 <wcrtomb@plt+0x114e8>  // b.any
  413c5c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  413c60:	add	x1, x1, #0x88
  413c64:	mov	w2, #0x5                   	// #5
  413c68:	mov	x0, #0x0                   	// #0
  413c6c:	bl	4027f0 <dcgettext@plt>
  413c70:	ldr	x8, [x21, #48]
  413c74:	mov	x1, x0
  413c78:	ldp	x2, x3, [x21]
  413c7c:	mov	x0, x20
  413c80:	ldp	x4, x5, [x21, #16]
  413c84:	ldp	x6, x7, [x21, #32]
  413c88:	str	x8, [sp]
  413c8c:	ldr	x8, [x21, #56]
  413c90:	str	x8, [sp, #8]
  413c94:	ldr	x8, [x21, #64]
  413c98:	str	x8, [sp, #16]
  413c9c:	bl	4028d0 <fprintf@plt>
  413ca0:	ldp	x29, x30, [sp, #32]
  413ca4:	ldp	x19, x20, [sp, #48]
  413ca8:	ldr	x21, [sp, #64]
  413cac:	add	sp, sp, #0x50
  413cb0:	ret
  413cb4:	cbz	x19, 413d38 <wcrtomb@plt+0x11418>
  413cb8:	cmp	x19, #0x1
  413cbc:	b.ne	413e08 <wcrtomb@plt+0x114e8>  // b.any
  413cc0:	mov	w2, #0x5                   	// #5
  413cc4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  413cc8:	mov	x0, #0x0                   	// #0
  413ccc:	add	x1, x1, #0xf70
  413cd0:	bl	4027f0 <dcgettext@plt>
  413cd4:	mov	x1, x0
  413cd8:	mov	x0, x20
  413cdc:	ldp	x29, x30, [sp, #32]
  413ce0:	ldp	x19, x20, [sp, #48]
  413ce4:	ldr	x2, [x21]
  413ce8:	ldr	x21, [sp, #64]
  413cec:	add	sp, sp, #0x50
  413cf0:	b	4028d0 <fprintf@plt>
  413cf4:	cmp	x19, #0x6
  413cf8:	b.eq	413dcc <wcrtomb@plt+0x114ac>  // b.none
  413cfc:	cmp	x19, #0x7
  413d00:	b.ne	413e08 <wcrtomb@plt+0x114e8>  // b.any
  413d04:	mov	w2, #0x5                   	// #5
  413d08:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  413d0c:	mov	x0, #0x0                   	// #0
  413d10:	add	x1, x1, #0x28
  413d14:	bl	4027f0 <dcgettext@plt>
  413d18:	mov	x1, x0
  413d1c:	ldp	x2, x3, [x21]
  413d20:	mov	x0, x20
  413d24:	ldp	x4, x5, [x21, #16]
  413d28:	ldp	x6, x7, [x21, #32]
  413d2c:	ldr	x8, [x21, #48]
  413d30:	str	x8, [sp]
  413d34:	bl	4028d0 <fprintf@plt>
  413d38:	ldp	x29, x30, [sp, #32]
  413d3c:	ldp	x19, x20, [sp, #48]
  413d40:	ldr	x21, [sp, #64]
  413d44:	add	sp, sp, #0x50
  413d48:	ret
  413d4c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  413d50:	add	x1, x1, #0xe88
  413d54:	bl	4028d0 <fprintf@plt>
  413d58:	b	413b84 <wcrtomb@plt+0x11264>
  413d5c:	mov	w2, w19
  413d60:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  413d64:	mov	x0, #0x0                   	// #0
  413d68:	add	x1, x1, #0xfd8
  413d6c:	bl	4027f0 <dcgettext@plt>
  413d70:	mov	x1, x0
  413d74:	mov	x0, x20
  413d78:	ldp	x2, x3, [x21]
  413d7c:	ldp	x4, x5, [x21, #16]
  413d80:	ldp	x29, x30, [sp, #32]
  413d84:	ldp	x19, x20, [sp, #48]
  413d88:	ldr	x6, [x21, #32]
  413d8c:	ldr	x21, [sp, #64]
  413d90:	add	sp, sp, #0x50
  413d94:	b	4028d0 <fprintf@plt>
  413d98:	mov	w2, #0x5                   	// #5
  413d9c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  413da0:	mov	x0, #0x0                   	// #0
  413da4:	add	x1, x1, #0xf80
  413da8:	bl	4027f0 <dcgettext@plt>
  413dac:	mov	x1, x0
  413db0:	mov	x0, x20
  413db4:	ldp	x2, x3, [x21]
  413db8:	ldp	x29, x30, [sp, #32]
  413dbc:	ldp	x19, x20, [sp, #48]
  413dc0:	ldr	x21, [sp, #64]
  413dc4:	add	sp, sp, #0x50
  413dc8:	b	4028d0 <fprintf@plt>
  413dcc:	mov	w2, #0x5                   	// #5
  413dd0:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  413dd4:	mov	x0, #0x0                   	// #0
  413dd8:	add	x1, x1, #0x0
  413ddc:	bl	4027f0 <dcgettext@plt>
  413de0:	mov	x1, x0
  413de4:	mov	x0, x20
  413de8:	ldp	x2, x3, [x21]
  413dec:	ldp	x4, x5, [x21, #16]
  413df0:	ldp	x29, x30, [sp, #32]
  413df4:	ldp	x6, x7, [x21, #32]
  413df8:	ldp	x19, x20, [sp, #48]
  413dfc:	ldr	x21, [sp, #64]
  413e00:	add	sp, sp, #0x50
  413e04:	b	4028d0 <fprintf@plt>
  413e08:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  413e0c:	mov	w2, #0x5                   	// #5
  413e10:	add	x1, x1, #0xc0
  413e14:	b	413c68 <wcrtomb@plt+0x11348>
  413e18:	mov	w2, #0x5                   	// #5
  413e1c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  413e20:	mov	x0, #0x0                   	// #0
  413e24:	add	x1, x1, #0xf98
  413e28:	bl	4027f0 <dcgettext@plt>
  413e2c:	mov	x1, x0
  413e30:	mov	x0, x20
  413e34:	ldp	x2, x3, [x21]
  413e38:	ldp	x29, x30, [sp, #32]
  413e3c:	ldp	x19, x20, [sp, #48]
  413e40:	ldr	x4, [x21, #16]
  413e44:	ldr	x21, [sp, #64]
  413e48:	add	sp, sp, #0x50
  413e4c:	b	4028d0 <fprintf@plt>
  413e50:	mov	w2, #0x5                   	// #5
  413e54:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  413e58:	mov	x0, #0x0                   	// #0
  413e5c:	add	x1, x1, #0x58
  413e60:	bl	4027f0 <dcgettext@plt>
  413e64:	mov	x1, x0
  413e68:	ldr	x8, [x21, #48]
  413e6c:	mov	x0, x20
  413e70:	ldp	x2, x3, [x21]
  413e74:	ldp	x4, x5, [x21, #16]
  413e78:	ldp	x6, x7, [x21, #32]
  413e7c:	str	x8, [sp]
  413e80:	ldr	x8, [x21, #56]
  413e84:	str	x8, [sp, #8]
  413e88:	bl	4028d0 <fprintf@plt>
  413e8c:	b	413d38 <wcrtomb@plt+0x11418>
  413e90:	ldr	x5, [x4]
  413e94:	cbz	x5, 413eb0 <wcrtomb@plt+0x11590>
  413e98:	mov	x5, #0x0                   	// #0
  413e9c:	nop
  413ea0:	add	x5, x5, #0x1
  413ea4:	ldr	x6, [x4, x5, lsl #3]
  413ea8:	cbnz	x6, 413ea0 <wcrtomb@plt+0x11580>
  413eac:	b	413b48 <wcrtomb@plt+0x11228>
  413eb0:	mov	x5, #0x0                   	// #0
  413eb4:	b	413b48 <wcrtomb@plt+0x11228>
  413eb8:	stp	x29, x30, [sp, #-96]!
  413ebc:	mov	x5, #0x0                   	// #0
  413ec0:	mov	x29, sp
  413ec4:	add	x8, sp, #0x10
  413ec8:	ldr	w7, [x4, #24]
  413ecc:	ldp	x6, x11, [x4]
  413ed0:	b	413ef8 <wcrtomb@plt+0x115d8>
  413ed4:	mov	x4, x6
  413ed8:	add	x8, x8, #0x8
  413edc:	and	x6, x10, #0xfffffffffffffff8
  413ee0:	ldr	x4, [x4]
  413ee4:	stur	x4, [x8, #-8]
  413ee8:	cbz	x4, 413f28 <wcrtomb@plt+0x11608>
  413eec:	add	x5, x5, #0x1
  413ef0:	cmp	x5, #0xa
  413ef4:	b.eq	413f28 <wcrtomb@plt+0x11608>  // b.none
  413ef8:	add	x10, x6, #0xf
  413efc:	add	w9, w7, #0x8
  413f00:	tbz	w7, #31, 413ed4 <wcrtomb@plt+0x115b4>
  413f04:	add	x4, x11, w7, sxtw
  413f08:	add	x10, x6, #0xf
  413f0c:	mov	w7, w9
  413f10:	cmp	w9, #0x0
  413f14:	b.gt	413ed4 <wcrtomb@plt+0x115b4>
  413f18:	ldr	x4, [x4]
  413f1c:	str	x4, [x8]
  413f20:	add	x8, x8, #0x8
  413f24:	cbnz	x4, 413eec <wcrtomb@plt+0x115cc>
  413f28:	add	x4, sp, #0x10
  413f2c:	bl	413b48 <wcrtomb@plt+0x11228>
  413f30:	ldp	x29, x30, [sp], #96
  413f34:	ret
  413f38:	stp	x29, x30, [sp, #-288]!
  413f3c:	mov	w12, #0xffffffe0            	// #-32
  413f40:	mov	w13, #0xffffff80            	// #-128
  413f44:	mov	x29, sp
  413f48:	add	x14, sp, #0x100
  413f4c:	add	x11, sp, #0x120
  413f50:	add	x9, sp, #0x30
  413f54:	mov	w8, w12
  413f58:	mov	x10, #0x0                   	// #0
  413f5c:	stp	x11, x11, [sp, #16]
  413f60:	str	x14, [sp, #32]
  413f64:	stp	w12, w13, [sp, #40]
  413f68:	str	q0, [sp, #128]
  413f6c:	str	q1, [sp, #144]
  413f70:	str	q2, [sp, #160]
  413f74:	str	q3, [sp, #176]
  413f78:	str	q4, [sp, #192]
  413f7c:	str	q5, [sp, #208]
  413f80:	str	q6, [sp, #224]
  413f84:	str	q7, [sp, #240]
  413f88:	stp	x4, x5, [sp, #256]
  413f8c:	stp	x6, x7, [sp, #272]
  413f90:	b	413fb8 <wcrtomb@plt+0x11698>
  413f94:	mov	x4, x11
  413f98:	add	x9, x9, #0x8
  413f9c:	add	x11, x11, #0x8
  413fa0:	ldr	x4, [x4]
  413fa4:	stur	x4, [x9, #-8]
  413fa8:	cbz	x4, 413fe4 <wcrtomb@plt+0x116c4>
  413fac:	add	x10, x10, #0x1
  413fb0:	cmp	x10, #0xa
  413fb4:	b.eq	413fe4 <wcrtomb@plt+0x116c4>  // b.none
  413fb8:	add	w5, w8, #0x8
  413fbc:	tbz	w8, #31, 413f94 <wcrtomb@plt+0x11674>
  413fc0:	add	x4, sp, #0x120
  413fc4:	cmp	w5, #0x0
  413fc8:	add	x4, x4, w8, sxtw
  413fcc:	mov	w8, w5
  413fd0:	b.gt	413f94 <wcrtomb@plt+0x11674>
  413fd4:	ldr	x4, [x4]
  413fd8:	str	x4, [x9]
  413fdc:	add	x9, x9, #0x8
  413fe0:	cbnz	x4, 413fac <wcrtomb@plt+0x1168c>
  413fe4:	add	x4, sp, #0x30
  413fe8:	mov	x5, x10
  413fec:	bl	413b48 <wcrtomb@plt+0x11228>
  413ff0:	ldp	x29, x30, [sp], #288
  413ff4:	ret
  413ff8:	stp	x29, x30, [sp, #-16]!
  413ffc:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  414000:	mov	w0, #0xa                   	// #10
  414004:	mov	x29, sp
  414008:	ldr	x1, [x1, #1112]
  41400c:	bl	4027a0 <fputc_unlocked@plt>
  414010:	mov	w2, #0x5                   	// #5
  414014:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  414018:	mov	x0, #0x0                   	// #0
  41401c:	add	x1, x1, #0x100
  414020:	bl	4027f0 <dcgettext@plt>
  414024:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  414028:	add	x1, x1, #0x118
  41402c:	bl	402870 <printf@plt>
  414030:	mov	w2, #0x5                   	// #5
  414034:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  414038:	mov	x0, #0x0                   	// #0
  41403c:	add	x1, x1, #0x130
  414040:	bl	4027f0 <dcgettext@plt>
  414044:	adrp	x2, 427000 <_obstack_memory_used@@Base+0xff38>
  414048:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xdf38>
  41404c:	add	x2, x2, #0x148
  414050:	add	x1, x1, #0x448
  414054:	bl	402870 <printf@plt>
  414058:	mov	w2, #0x5                   	// #5
  41405c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  414060:	mov	x0, #0x0                   	// #0
  414064:	add	x1, x1, #0x170
  414068:	bl	4027f0 <dcgettext@plt>
  41406c:	ldp	x29, x30, [sp], #16
  414070:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  414074:	add	x1, x1, #0x198
  414078:	b	402870 <printf@plt>
  41407c:	nop
  414080:	stp	x29, x30, [sp, #-32]!
  414084:	mov	x29, sp
  414088:	str	x19, [sp, #16]
  41408c:	mov	x19, x0
  414090:	bl	402440 <malloc@plt>
  414094:	cmp	x0, #0x0
  414098:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41409c:	b.ne	4140ac <wcrtomb@plt+0x1178c>  // b.any
  4140a0:	ldr	x19, [sp, #16]
  4140a4:	ldp	x29, x30, [sp], #32
  4140a8:	ret
  4140ac:	bl	4142c0 <wcrtomb@plt+0x119a0>
  4140b0:	umulh	x2, x0, x1
  4140b4:	mul	x0, x0, x1
  4140b8:	cmp	x2, #0x0
  4140bc:	cset	x1, ne  // ne = any
  4140c0:	tbnz	x0, #63, 4140cc <wcrtomb@plt+0x117ac>
  4140c4:	cbnz	x1, 4140cc <wcrtomb@plt+0x117ac>
  4140c8:	b	414080 <wcrtomb@plt+0x11760>
  4140cc:	stp	x29, x30, [sp, #-16]!
  4140d0:	mov	x29, sp
  4140d4:	bl	4142c0 <wcrtomb@plt+0x119a0>
  4140d8:	b	414080 <wcrtomb@plt+0x11760>
  4140dc:	nop
  4140e0:	stp	x29, x30, [sp, #-32]!
  4140e4:	cmp	x1, #0x0
  4140e8:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  4140ec:	mov	x29, sp
  4140f0:	b.ne	414118 <wcrtomb@plt+0x117f8>  // b.any
  4140f4:	str	x19, [sp, #16]
  4140f8:	mov	x19, x1
  4140fc:	bl	402550 <realloc@plt>
  414100:	cmp	x0, #0x0
  414104:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  414108:	b.ne	414128 <wcrtomb@plt+0x11808>  // b.any
  41410c:	ldr	x19, [sp, #16]
  414110:	ldp	x29, x30, [sp], #32
  414114:	ret
  414118:	bl	4026b0 <free@plt>
  41411c:	mov	x0, #0x0                   	// #0
  414120:	ldp	x29, x30, [sp], #32
  414124:	ret
  414128:	bl	4142c0 <wcrtomb@plt+0x119a0>
  41412c:	nop
  414130:	umulh	x3, x1, x2
  414134:	mul	x1, x1, x2
  414138:	cmp	x3, #0x0
  41413c:	cset	x2, ne  // ne = any
  414140:	tbnz	x1, #63, 41414c <wcrtomb@plt+0x1182c>
  414144:	cbnz	x2, 41414c <wcrtomb@plt+0x1182c>
  414148:	b	4140e0 <wcrtomb@plt+0x117c0>
  41414c:	stp	x29, x30, [sp, #-16]!
  414150:	mov	x29, sp
  414154:	bl	4142c0 <wcrtomb@plt+0x119a0>
  414158:	mov	x4, x1
  41415c:	ldr	x3, [x1]
  414160:	cbz	x0, 41418c <wcrtomb@plt+0x1186c>
  414164:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  414168:	movk	x1, #0x5554
  41416c:	udiv	x1, x1, x2
  414170:	cmp	x1, x3
  414174:	b.ls	4141a8 <wcrtomb@plt+0x11888>  // b.plast
  414178:	add	x1, x3, #0x1
  41417c:	add	x3, x1, x3, lsr #1
  414180:	mul	x1, x3, x2
  414184:	str	x3, [x4]
  414188:	b	4140e0 <wcrtomb@plt+0x117c0>
  41418c:	cbz	x3, 4141b4 <wcrtomb@plt+0x11894>
  414190:	umulh	x5, x3, x2
  414194:	mul	x1, x3, x2
  414198:	cmp	x5, #0x0
  41419c:	cset	x2, ne  // ne = any
  4141a0:	tbnz	x1, #63, 4141a8 <wcrtomb@plt+0x11888>
  4141a4:	cbz	x2, 414184 <wcrtomb@plt+0x11864>
  4141a8:	stp	x29, x30, [sp, #-16]!
  4141ac:	mov	x29, sp
  4141b0:	bl	4142c0 <wcrtomb@plt+0x119a0>
  4141b4:	mov	x3, #0x80                  	// #128
  4141b8:	cmp	x2, x3
  4141bc:	udiv	x3, x3, x2
  4141c0:	cinc	x3, x3, hi  // hi = pmore
  4141c4:	b	414190 <wcrtomb@plt+0x11870>
  4141c8:	mov	x2, x1
  4141cc:	ldr	x1, [x1]
  4141d0:	cbz	x0, 4141f4 <wcrtomb@plt+0x118d4>
  4141d4:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  4141d8:	movk	x3, #0x5553
  4141dc:	cmp	x1, x3
  4141e0:	b.hi	41420c <wcrtomb@plt+0x118ec>  // b.pmore
  4141e4:	add	x3, x1, #0x1
  4141e8:	add	x1, x3, x1, lsr #1
  4141ec:	str	x1, [x2]
  4141f0:	b	4140e0 <wcrtomb@plt+0x117c0>
  4141f4:	cmp	x1, #0x0
  4141f8:	cbnz	x1, 414208 <wcrtomb@plt+0x118e8>
  4141fc:	mov	x1, #0x80                  	// #128
  414200:	str	x1, [x2]
  414204:	b	4140e0 <wcrtomb@plt+0x117c0>
  414208:	b.ge	4141ec <wcrtomb@plt+0x118cc>  // b.tcont
  41420c:	stp	x29, x30, [sp, #-16]!
  414210:	mov	x29, sp
  414214:	bl	4142c0 <wcrtomb@plt+0x119a0>
  414218:	umulh	x4, x0, x1
  41421c:	stp	x29, x30, [sp, #-16]!
  414220:	mul	x2, x0, x1
  414224:	cmp	x4, #0x0
  414228:	mov	x29, sp
  41422c:	cset	x3, ne  // ne = any
  414230:	tbnz	x2, #63, 414248 <wcrtomb@plt+0x11928>
  414234:	cbnz	x3, 414248 <wcrtomb@plt+0x11928>
  414238:	bl	402520 <calloc@plt>
  41423c:	cbz	x0, 414248 <wcrtomb@plt+0x11928>
  414240:	ldp	x29, x30, [sp], #16
  414244:	ret
  414248:	bl	4142c0 <wcrtomb@plt+0x119a0>
  41424c:	nop
  414250:	mov	x1, #0x1                   	// #1
  414254:	b	414218 <wcrtomb@plt+0x118f8>
  414258:	stp	x29, x30, [sp, #-32]!
  41425c:	mov	x29, sp
  414260:	stp	x19, x20, [sp, #16]
  414264:	mov	x19, x1
  414268:	mov	x20, x0
  41426c:	mov	x0, x1
  414270:	bl	414080 <wcrtomb@plt+0x11760>
  414274:	mov	x2, x19
  414278:	mov	x1, x20
  41427c:	ldp	x19, x20, [sp, #16]
  414280:	ldp	x29, x30, [sp], #32
  414284:	b	4022a0 <memcpy@plt>
  414288:	stp	x29, x30, [sp, #-32]!
  41428c:	mov	x29, sp
  414290:	stp	x19, x20, [sp, #16]
  414294:	mov	x20, x0
  414298:	bl	402300 <strlen@plt>
  41429c:	add	x19, x0, #0x1
  4142a0:	mov	x0, x19
  4142a4:	bl	414080 <wcrtomb@plt+0x11760>
  4142a8:	mov	x2, x19
  4142ac:	mov	x1, x20
  4142b0:	ldp	x19, x20, [sp, #16]
  4142b4:	ldp	x29, x30, [sp], #32
  4142b8:	b	4022a0 <memcpy@plt>
  4142bc:	nop
  4142c0:	stp	x29, x30, [sp, #-32]!
  4142c4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4142c8:	mov	w2, #0x5                   	// #5
  4142cc:	mov	x29, sp
  4142d0:	str	x19, [sp, #16]
  4142d4:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  4142d8:	ldr	w19, [x0, #976]
  4142dc:	add	x1, x1, #0x1e8
  4142e0:	mov	x0, #0x0                   	// #0
  4142e4:	bl	4027f0 <dcgettext@plt>
  4142e8:	adrp	x2, 424000 <_obstack_memory_used@@Base+0xcf38>
  4142ec:	mov	x3, x0
  4142f0:	add	x2, x2, #0x1b8
  4142f4:	mov	w0, w19
  4142f8:	mov	w1, #0x0                   	// #0
  4142fc:	bl	402330 <error@plt>
  414300:	bl	4025f0 <abort@plt>
  414304:	nop
  414308:	stp	x29, x30, [sp, #-112]!
  41430c:	cmp	w2, #0x24
  414310:	mov	x29, sp
  414314:	stp	x19, x20, [sp, #16]
  414318:	stp	x21, x22, [sp, #32]
  41431c:	stp	x23, x24, [sp, #48]
  414320:	stp	x25, x26, [sp, #64]
  414324:	stp	x27, x28, [sp, #80]
  414328:	b.hi	414988 <wcrtomb@plt+0x12068>  // b.pmore
  41432c:	cmp	x1, #0x0
  414330:	mov	x21, x0
  414334:	add	x0, sp, #0x68
  414338:	mov	w20, w2
  41433c:	csel	x19, x0, x1, eq  // eq = none
  414340:	mov	x23, x3
  414344:	mov	x24, x4
  414348:	bl	402890 <__errno_location@plt>
  41434c:	mov	x22, x0
  414350:	mov	w2, w20
  414354:	mov	x1, x19
  414358:	mov	x0, x21
  41435c:	mov	w3, #0x0                   	// #0
  414360:	str	wzr, [x22]
  414364:	bl	4024a0 <__strtol_internal@plt>
  414368:	mov	x20, x0
  41436c:	ldr	x27, [x19]
  414370:	cmp	x27, x21
  414374:	b.eq	4143c8 <wcrtomb@plt+0x11aa8>  // b.none
  414378:	ldr	w0, [x22]
  41437c:	cbz	w0, 4143c0 <wcrtomb@plt+0x11aa0>
  414380:	cmp	w0, #0x22
  414384:	mov	w26, #0x4                   	// #4
  414388:	b.ne	4143a0 <wcrtomb@plt+0x11a80>  // b.any
  41438c:	mov	w26, #0x1                   	// #1
  414390:	cbz	x24, 41439c <wcrtomb@plt+0x11a7c>
  414394:	ldrb	w21, [x27]
  414398:	cbnz	w21, 41468c <wcrtomb@plt+0x11d6c>
  41439c:	str	x20, [x23]
  4143a0:	mov	w0, w26
  4143a4:	ldp	x19, x20, [sp, #16]
  4143a8:	ldp	x21, x22, [sp, #32]
  4143ac:	ldp	x23, x24, [sp, #48]
  4143b0:	ldp	x25, x26, [sp, #64]
  4143b4:	ldp	x27, x28, [sp, #80]
  4143b8:	ldp	x29, x30, [sp], #112
  4143bc:	ret
  4143c0:	mov	w26, #0x0                   	// #0
  4143c4:	b	414390 <wcrtomb@plt+0x11a70>
  4143c8:	cbz	x24, 4146a4 <wcrtomb@plt+0x11d84>
  4143cc:	ldrb	w21, [x27]
  4143d0:	mov	w26, #0x4                   	// #4
  4143d4:	cbz	w21, 4143a0 <wcrtomb@plt+0x11a80>
  4143d8:	mov	w1, w21
  4143dc:	mov	x0, x24
  4143e0:	mov	x20, #0x1                   	// #1
  4143e4:	mov	w26, #0x0                   	// #0
  4143e8:	bl	4026e0 <strchr@plt>
  4143ec:	cbz	x0, 4146a4 <wcrtomb@plt+0x11d84>
  4143f0:	sub	w0, w21, #0x45
  4143f4:	and	w0, w0, #0xff
  4143f8:	cmp	w0, #0x2f
  4143fc:	b.hi	41458c <wcrtomb@plt+0x11c6c>  // b.pmore
  414400:	mov	x1, #0x8945                	// #35141
  414404:	mov	x25, #0x1                   	// #1
  414408:	movk	x1, #0x30, lsl #16
  41440c:	lsl	x0, x25, x0
  414410:	movk	x1, #0x8144, lsl #32
  414414:	mov	w28, w25
  414418:	tst	x0, x1
  41441c:	mov	x22, #0x400                 	// #1024
  414420:	b.ne	4146b8 <wcrtomb@plt+0x11d98>  // b.any
  414424:	cmp	w21, #0x5a
  414428:	b.eq	414938 <wcrtomb@plt+0x12018>  // b.none
  41442c:	b.hi	4144f4 <wcrtomb@plt+0x11bd4>  // b.pmore
  414430:	cmp	w21, #0x4d
  414434:	b.eq	4145a0 <wcrtomb@plt+0x11c80>  // b.none
  414438:	b.hi	41449c <wcrtomb@plt+0x11b7c>  // b.pmore
  41443c:	cmp	w21, #0x45
  414440:	b.eq	414730 <wcrtomb@plt+0x11e10>  // b.none
  414444:	b.ls	4145e4 <wcrtomb@plt+0x11cc4>  // b.plast
  414448:	cmp	w21, #0x47
  41444c:	b.eq	414544 <wcrtomb@plt+0x11c24>  // b.none
  414450:	cmp	w21, #0x4b
  414454:	b.ne	41469c <wcrtomb@plt+0x11d7c>  // b.any
  414458:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41445c:	sxtw	x25, w28
  414460:	sdiv	x0, x0, x22
  414464:	cmp	x20, x0
  414468:	b.lt	4146ac <wcrtomb@plt+0x11d8c>  // b.tstop
  41446c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  414470:	udiv	x1, x0, x22
  414474:	cmp	x20, x1
  414478:	b.gt	4147c0 <wcrtomb@plt+0x11ea0>
  41447c:	mul	x20, x20, x22
  414480:	add	x0, x27, x25
  414484:	str	x0, [x19]
  414488:	orr	w0, w26, #0x2
  41448c:	ldrb	w1, [x27, x25]
  414490:	cmp	w1, #0x0
  414494:	csel	w26, w0, w26, ne  // ne = any
  414498:	b	41439c <wcrtomb@plt+0x11a7c>
  41449c:	cmp	w21, #0x54
  4144a0:	b.eq	414778 <wcrtomb@plt+0x11e58>  // b.none
  4144a4:	cmp	w21, #0x59
  4144a8:	b.ne	414610 <wcrtomb@plt+0x11cf0>  // b.any
  4144ac:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  4144b0:	sxtw	x25, w28
  4144b4:	sdiv	x1, x1, x22
  4144b8:	mov	w0, #0x8                   	// #8
  4144bc:	mov	w3, #0x0                   	// #0
  4144c0:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  4144c4:	b	4144e0 <wcrtomb@plt+0x11bc0>
  4144c8:	udiv	x2, x4, x22
  4144cc:	cmp	x2, x20
  4144d0:	b.lt	414868 <wcrtomb@plt+0x11f48>  // b.tstop
  4144d4:	mul	x20, x20, x22
  4144d8:	subs	w0, w0, #0x1
  4144dc:	b.eq	414814 <wcrtomb@plt+0x11ef4>  // b.none
  4144e0:	cmp	x20, x1
  4144e4:	b.ge	4144c8 <wcrtomb@plt+0x11ba8>  // b.tcont
  4144e8:	mov	w3, #0x1                   	// #1
  4144ec:	mov	x20, #0x8000000000000000    	// #-9223372036854775808
  4144f0:	b	4144d8 <wcrtomb@plt+0x11bb8>
  4144f4:	cmp	w21, #0x6b
  4144f8:	b.eq	414458 <wcrtomb@plt+0x11b38>  // b.none
  4144fc:	b.ls	414534 <wcrtomb@plt+0x11c14>  // b.plast
  414500:	cmp	w21, #0x74
  414504:	b.eq	414778 <wcrtomb@plt+0x11e58>  // b.none
  414508:	cmp	w21, #0x77
  41450c:	sxtw	x25, w28
  414510:	b.ne	414598 <wcrtomb@plt+0x11c78>  // b.any
  414514:	mov	x0, #0xc000000000000000    	// #-4611686018427387904
  414518:	cmp	x20, x0
  41451c:	b.lt	4146ac <wcrtomb@plt+0x11d8c>  // b.tstop
  414520:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  414524:	cmp	x20, x0
  414528:	b.gt	414948 <wcrtomb@plt+0x12028>
  41452c:	lsl	x20, x20, #1
  414530:	b	414480 <wcrtomb@plt+0x11b60>
  414534:	cmp	w21, #0x63
  414538:	b.eq	414728 <wcrtomb@plt+0x11e08>  // b.none
  41453c:	cmp	w21, #0x67
  414540:	b.ne	414660 <wcrtomb@plt+0x11d40>  // b.any
  414544:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  414548:	sxtw	x25, w28
  41454c:	sdiv	x1, x1, x22
  414550:	mov	w0, #0x3                   	// #3
  414554:	mov	w3, #0x0                   	// #0
  414558:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41455c:	b	414578 <wcrtomb@plt+0x11c58>
  414560:	udiv	x2, x4, x22
  414564:	cmp	x2, x20
  414568:	b.lt	41485c <wcrtomb@plt+0x11f3c>  // b.tstop
  41456c:	mul	x20, x20, x22
  414570:	subs	w0, w0, #0x1
  414574:	b.eq	414814 <wcrtomb@plt+0x11ef4>  // b.none
  414578:	cmp	x1, x20
  41457c:	b.le	414560 <wcrtomb@plt+0x11c40>
  414580:	mov	w3, #0x1                   	// #1
  414584:	mov	x20, #0x8000000000000000    	// #-9223372036854775808
  414588:	b	414570 <wcrtomb@plt+0x11c50>
  41458c:	mov	w28, #0x1                   	// #1
  414590:	mov	x22, #0x400                 	// #1024
  414594:	b	414424 <wcrtomb@plt+0x11b04>
  414598:	cmp	w21, #0x6d
  41459c:	b.ne	41469c <wcrtomb@plt+0x11d7c>  // b.any
  4145a0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  4145a4:	sxtw	x25, w28
  4145a8:	sdiv	x0, x0, x22
  4145ac:	cmp	x20, x0
  4145b0:	b.lt	4146ac <wcrtomb@plt+0x11d8c>  // b.tstop
  4145b4:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  4145b8:	udiv	x1, x2, x22
  4145bc:	cmp	x20, x1
  4145c0:	b.gt	4145d8 <wcrtomb@plt+0x11cb8>
  4145c4:	mul	x20, x20, x22
  4145c8:	cmp	x0, x20
  4145cc:	b.gt	4146ac <wcrtomb@plt+0x11d8c>
  4145d0:	cmp	x1, x20
  4145d4:	b.ge	41447c <wcrtomb@plt+0x11b5c>  // b.tcont
  4145d8:	mov	x20, x2
  4145dc:	mov	w26, #0x1                   	// #1
  4145e0:	b	414480 <wcrtomb@plt+0x11b60>
  4145e4:	sxtw	x25, w28
  4145e8:	cmp	w21, #0x42
  4145ec:	b.ne	41469c <wcrtomb@plt+0x11d7c>  // b.any
  4145f0:	mov	x0, #0xffe0000000000000    	// #-9007199254740992
  4145f4:	cmp	x20, x0
  4145f8:	b.lt	4146ac <wcrtomb@plt+0x11d8c>  // b.tstop
  4145fc:	mov	x0, #0x1fffffffffffff      	// #9007199254740991
  414600:	cmp	x20, x0
  414604:	b.gt	414948 <wcrtomb@plt+0x12028>
  414608:	lsl	x20, x20, #10
  41460c:	b	414480 <wcrtomb@plt+0x11b60>
  414610:	cmp	w21, #0x50
  414614:	b.ne	41469c <wcrtomb@plt+0x11d7c>  // b.any
  414618:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  41461c:	sxtw	x25, w28
  414620:	sdiv	x1, x1, x22
  414624:	mov	w0, #0x5                   	// #5
  414628:	mov	w3, #0x0                   	// #0
  41462c:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  414630:	b	41464c <wcrtomb@plt+0x11d2c>
  414634:	udiv	x2, x4, x22
  414638:	cmp	x2, x20
  41463c:	b.lt	414850 <wcrtomb@plt+0x11f30>  // b.tstop
  414640:	mul	x20, x20, x22
  414644:	subs	w0, w0, #0x1
  414648:	b.eq	414814 <wcrtomb@plt+0x11ef4>  // b.none
  41464c:	cmp	x20, x1
  414650:	b.ge	414634 <wcrtomb@plt+0x11d14>  // b.tcont
  414654:	mov	w3, #0x1                   	// #1
  414658:	mov	x20, #0x8000000000000000    	// #-9223372036854775808
  41465c:	b	414644 <wcrtomb@plt+0x11d24>
  414660:	sxtw	x25, w28
  414664:	cmp	w21, #0x62
  414668:	b.ne	41469c <wcrtomb@plt+0x11d7c>  // b.any
  41466c:	mov	x0, #0xffc0000000000000    	// #-18014398509481984
  414670:	cmp	x20, x0
  414674:	b.lt	4146ac <wcrtomb@plt+0x11d8c>  // b.tstop
  414678:	mov	x0, #0x3fffffffffffff      	// #18014398509481983
  41467c:	cmp	x20, x0
  414680:	b.gt	414948 <wcrtomb@plt+0x12028>
  414684:	lsl	x20, x20, #9
  414688:	b	414480 <wcrtomb@plt+0x11b60>
  41468c:	mov	w1, w21
  414690:	mov	x0, x24
  414694:	bl	4026e0 <strchr@plt>
  414698:	cbnz	x0, 4143f0 <wcrtomb@plt+0x11ad0>
  41469c:	orr	w26, w26, #0x2
  4146a0:	b	41439c <wcrtomb@plt+0x11a7c>
  4146a4:	mov	w26, #0x4                   	// #4
  4146a8:	b	4143a0 <wcrtomb@plt+0x11a80>
  4146ac:	mov	w26, #0x1                   	// #1
  4146b0:	mov	x20, #0x8000000000000000    	// #-9223372036854775808
  4146b4:	b	414480 <wcrtomb@plt+0x11b60>
  4146b8:	mov	x0, x24
  4146bc:	mov	w1, #0x30                  	// #48
  4146c0:	bl	4026e0 <strchr@plt>
  4146c4:	cbz	x0, 414424 <wcrtomb@plt+0x11b04>
  4146c8:	ldrb	w0, [x27, #1]
  4146cc:	cmp	w0, #0x44
  4146d0:	b.eq	414874 <wcrtomb@plt+0x11f54>  // b.none
  4146d4:	cmp	w0, #0x69
  4146d8:	b.eq	4148a8 <wcrtomb@plt+0x11f88>  // b.none
  4146dc:	cmp	w0, #0x42
  4146e0:	b.eq	414874 <wcrtomb@plt+0x11f54>  // b.none
  4146e4:	cmp	w21, #0x5a
  4146e8:	b.eq	4147cc <wcrtomb@plt+0x11eac>  // b.none
  4146ec:	b.hi	4148bc <wcrtomb@plt+0x11f9c>  // b.pmore
  4146f0:	cmp	w21, #0x4d
  4146f4:	b.eq	41489c <wcrtomb@plt+0x11f7c>  // b.none
  4146f8:	b.hi	4148ec <wcrtomb@plt+0x11fcc>  // b.pmore
  4146fc:	cmp	w21, #0x45
  414700:	b.eq	41496c <wcrtomb@plt+0x1204c>  // b.none
  414704:	b.ls	41490c <wcrtomb@plt+0x11fec>  // b.plast
  414708:	cmp	w21, #0x47
  41470c:	b.eq	41481c <wcrtomb@plt+0x11efc>  // b.none
  414710:	cmp	w21, #0x4b
  414714:	b.ne	41469c <wcrtomb@plt+0x11d7c>  // b.any
  414718:	mov	x25, #0x1                   	// #1
  41471c:	mov	x0, #0xffe0000000000000    	// #-9007199254740992
  414720:	mov	x22, #0x400                 	// #1024
  414724:	b	414464 <wcrtomb@plt+0x11b44>
  414728:	sxtw	x25, w28
  41472c:	b	414480 <wcrtomb@plt+0x11b60>
  414730:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  414734:	sxtw	x25, w28
  414738:	sdiv	x1, x1, x22
  41473c:	mov	w0, #0x6                   	// #6
  414740:	mov	w3, #0x0                   	// #0
  414744:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  414748:	b	414764 <wcrtomb@plt+0x11e44>
  41474c:	udiv	x2, x4, x22
  414750:	cmp	x2, x20
  414754:	b.lt	41482c <wcrtomb@plt+0x11f0c>  // b.tstop
  414758:	mul	x20, x20, x22
  41475c:	subs	w0, w0, #0x1
  414760:	b.eq	414814 <wcrtomb@plt+0x11ef4>  // b.none
  414764:	cmp	x1, x20
  414768:	b.le	41474c <wcrtomb@plt+0x11e2c>
  41476c:	mov	w3, #0x1                   	// #1
  414770:	mov	x20, #0x8000000000000000    	// #-9223372036854775808
  414774:	b	41475c <wcrtomb@plt+0x11e3c>
  414778:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  41477c:	sxtw	x25, w28
  414780:	sdiv	x1, x1, x22
  414784:	mov	w0, #0x4                   	// #4
  414788:	mov	w3, #0x0                   	// #0
  41478c:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  414790:	b	4147ac <wcrtomb@plt+0x11e8c>
  414794:	udiv	x2, x4, x22
  414798:	cmp	x2, x20
  41479c:	b.lt	414838 <wcrtomb@plt+0x11f18>  // b.tstop
  4147a0:	mul	x20, x20, x22
  4147a4:	subs	w0, w0, #0x1
  4147a8:	b.eq	414814 <wcrtomb@plt+0x11ef4>  // b.none
  4147ac:	cmp	x20, x1
  4147b0:	b.ge	414794 <wcrtomb@plt+0x11e74>  // b.tcont
  4147b4:	mov	w3, #0x1                   	// #1
  4147b8:	mov	x20, #0x8000000000000000    	// #-9223372036854775808
  4147bc:	b	4147a4 <wcrtomb@plt+0x11e84>
  4147c0:	mov	x20, x0
  4147c4:	mov	w26, #0x1                   	// #1
  4147c8:	b	414480 <wcrtomb@plt+0x11b60>
  4147cc:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  4147d0:	mov	x22, #0x400                 	// #1024
  4147d4:	nop
  4147d8:	mov	w0, #0x7                   	// #7
  4147dc:	mov	w3, #0x0                   	// #0
  4147e0:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  4147e4:	b	414800 <wcrtomb@plt+0x11ee0>
  4147e8:	udiv	x2, x4, x22
  4147ec:	cmp	x2, x20
  4147f0:	b.lt	414844 <wcrtomb@plt+0x11f24>  // b.tstop
  4147f4:	mul	x20, x20, x22
  4147f8:	subs	w0, w0, #0x1
  4147fc:	b.eq	414814 <wcrtomb@plt+0x11ef4>  // b.none
  414800:	cmp	x20, x1
  414804:	b.ge	4147e8 <wcrtomb@plt+0x11ec8>  // b.tcont
  414808:	mov	w3, #0x1                   	// #1
  41480c:	mov	x20, #0x8000000000000000    	// #-9223372036854775808
  414810:	b	4147f8 <wcrtomb@plt+0x11ed8>
  414814:	orr	w26, w26, w3
  414818:	b	414480 <wcrtomb@plt+0x11b60>
  41481c:	mov	x25, #0x1                   	// #1
  414820:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  414824:	mov	x22, #0x400                 	// #1024
  414828:	b	414550 <wcrtomb@plt+0x11c30>
  41482c:	mov	w3, #0x1                   	// #1
  414830:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
  414834:	b	41475c <wcrtomb@plt+0x11e3c>
  414838:	mov	w3, #0x1                   	// #1
  41483c:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
  414840:	b	4147a4 <wcrtomb@plt+0x11e84>
  414844:	mov	w3, #0x1                   	// #1
  414848:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
  41484c:	b	4147f8 <wcrtomb@plt+0x11ed8>
  414850:	mov	w3, #0x1                   	// #1
  414854:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
  414858:	b	414644 <wcrtomb@plt+0x11d24>
  41485c:	mov	w3, #0x1                   	// #1
  414860:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
  414864:	b	414570 <wcrtomb@plt+0x11c50>
  414868:	mov	w3, #0x1                   	// #1
  41486c:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
  414870:	b	4144d8 <wcrtomb@plt+0x11bb8>
  414874:	mov	w28, #0x2                   	// #2
  414878:	mov	x22, #0x3e8                 	// #1000
  41487c:	b	414424 <wcrtomb@plt+0x11b04>
  414880:	cmp	w21, #0x74
  414884:	b.eq	414954 <wcrtomb@plt+0x12034>  // b.none
  414888:	cmp	w21, #0x77
  41488c:	mov	x25, #0x1                   	// #1
  414890:	b.eq	414514 <wcrtomb@plt+0x11bf4>  // b.none
  414894:	cmp	w21, #0x6d
  414898:	b.ne	41469c <wcrtomb@plt+0x11d7c>  // b.any
  41489c:	mov	x0, #0xffe0000000000000    	// #-9007199254740992
  4148a0:	mov	x22, #0x400                 	// #1024
  4148a4:	b	4145ac <wcrtomb@plt+0x11c8c>
  4148a8:	ldrb	w1, [x27, #2]
  4148ac:	mov	w0, #0x3                   	// #3
  4148b0:	cmp	w1, #0x42
  4148b4:	csel	w28, w25, w0, ne  // ne = any
  4148b8:	b	414424 <wcrtomb@plt+0x11b04>
  4148bc:	cmp	w21, #0x6b
  4148c0:	b.eq	41497c <wcrtomb@plt+0x1205c>  // b.none
  4148c4:	b.hi	414880 <wcrtomb@plt+0x11f60>  // b.pmore
  4148c8:	cmp	w21, #0x63
  4148cc:	b.eq	414964 <wcrtomb@plt+0x12044>  // b.none
  4148d0:	cmp	w21, #0x67
  4148d4:	b.eq	41481c <wcrtomb@plt+0x11efc>  // b.none
  4148d8:	cmp	w21, #0x62
  4148dc:	mov	x25, #0x1                   	// #1
  4148e0:	b.eq	41466c <wcrtomb@plt+0x11d4c>  // b.none
  4148e4:	orr	w26, w26, #0x2
  4148e8:	b	41439c <wcrtomb@plt+0x11a7c>
  4148ec:	cmp	w21, #0x54
  4148f0:	b.eq	414954 <wcrtomb@plt+0x12034>  // b.none
  4148f4:	cmp	w21, #0x59
  4148f8:	b.ne	414920 <wcrtomb@plt+0x12000>  // b.any
  4148fc:	mov	x25, #0x1                   	// #1
  414900:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  414904:	mov	x22, #0x400                 	// #1024
  414908:	b	4144b8 <wcrtomb@plt+0x11b98>
  41490c:	cmp	w21, #0x42
  414910:	mov	x25, #0x1                   	// #1
  414914:	b.eq	4145f0 <wcrtomb@plt+0x11cd0>  // b.none
  414918:	orr	w26, w26, #0x2
  41491c:	b	41439c <wcrtomb@plt+0x11a7c>
  414920:	cmp	w21, #0x50
  414924:	b.ne	41469c <wcrtomb@plt+0x11d7c>  // b.any
  414928:	mov	x25, #0x1                   	// #1
  41492c:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  414930:	mov	x22, #0x400                 	// #1024
  414934:	b	414624 <wcrtomb@plt+0x11d04>
  414938:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  41493c:	sxtw	x25, w28
  414940:	sdiv	x1, x1, x22
  414944:	b	4147d8 <wcrtomb@plt+0x11eb8>
  414948:	mov	w26, #0x1                   	// #1
  41494c:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
  414950:	b	414480 <wcrtomb@plt+0x11b60>
  414954:	mov	x25, #0x1                   	// #1
  414958:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  41495c:	mov	x22, #0x400                 	// #1024
  414960:	b	414784 <wcrtomb@plt+0x11e64>
  414964:	mov	x25, #0x1                   	// #1
  414968:	b	414480 <wcrtomb@plt+0x11b60>
  41496c:	mov	x25, #0x1                   	// #1
  414970:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  414974:	mov	x22, #0x400                 	// #1024
  414978:	b	41473c <wcrtomb@plt+0x11e1c>
  41497c:	mov	x0, #0xffe0000000000000    	// #-9007199254740992
  414980:	mov	x22, #0x400                 	// #1024
  414984:	b	414464 <wcrtomb@plt+0x11b44>
  414988:	adrp	x3, 427000 <_obstack_memory_used@@Base+0xff38>
  41498c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  414990:	adrp	x0, 427000 <_obstack_memory_used@@Base+0xff38>
  414994:	add	x3, x3, #0x238
  414998:	add	x1, x1, #0x200
  41499c:	add	x0, x0, #0x210
  4149a0:	mov	w2, #0x54                  	// #84
  4149a4:	bl	402880 <__assert_fail@plt>
  4149a8:	stp	x29, x30, [sp, #-16]!
  4149ac:	adrp	x0, 427000 <_obstack_memory_used@@Base+0xff38>
  4149b0:	add	x0, x0, #0x248
  4149b4:	mov	x29, sp
  4149b8:	bl	4028a0 <getenv@plt>
  4149bc:	mov	w1, #0x0                   	// #0
  4149c0:	cbz	x0, 4149d8 <wcrtomb@plt+0x120b8>
  4149c4:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  4149c8:	add	x1, x1, #0x250
  4149cc:	bl	402690 <strcmp@plt>
  4149d0:	cmp	w0, #0x0
  4149d4:	cset	w1, ne  // ne = any
  4149d8:	mov	w0, w1
  4149dc:	ldp	x29, x30, [sp], #16
  4149e0:	ret
  4149e4:	nop
  4149e8:	ret
  4149ec:	nop
  4149f0:	b	402870 <printf@plt>
  4149f4:	nop
  4149f8:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x26f38>
  4149fc:	ldr	x1, [x1, #1112]
  414a00:	b	402310 <fputs@plt>
  414a04:	nop
  414a08:	ldr	x3, [x0, #8]
  414a0c:	ldr	x2, [x1, #8]
  414a10:	cmp	x3, x2
  414a14:	b.eq	414a20 <wcrtomb@plt+0x12100>  // b.none
  414a18:	mov	w0, #0x0                   	// #0
  414a1c:	ret
  414a20:	ldr	x2, [x0]
  414a24:	ldr	x0, [x1]
  414a28:	cmp	x2, x0
  414a2c:	cset	w0, eq  // eq = none
  414a30:	ret
  414a34:	nop
  414a38:	ldr	x0, [x0, #8]
  414a3c:	udiv	x2, x0, x1
  414a40:	msub	x0, x2, x1, x0
  414a44:	ret
  414a48:	ldr	x0, [x0]
  414a4c:	udiv	x2, x0, x1
  414a50:	msub	x0, x2, x1, x0
  414a54:	ret
  414a58:	ldr	x2, [x0]
  414a5c:	ldr	x0, [x1]
  414a60:	cmp	x2, x0
  414a64:	cset	w0, eq  // eq = none
  414a68:	ret
  414a6c:	nop
  414a70:	ldr	x2, [x0]
  414a74:	mov	w3, #0xffffffff            	// #-1
  414a78:	ldr	x0, [x1]
  414a7c:	ldr	x2, [x2, #128]
  414a80:	ldr	x1, [x0, #128]
  414a84:	cmp	x2, x1
  414a88:	cset	w0, hi  // hi = pmore
  414a8c:	csel	w0, w0, w3, cs  // cs = hs, nlast
  414a90:	ret
  414a94:	nop
  414a98:	stp	x29, x30, [sp, #-48]!
  414a9c:	mov	x29, sp
  414aa0:	stp	x19, x20, [sp, #16]
  414aa4:	mov	x19, x1
  414aa8:	mov	x20, x2
  414aac:	stp	x21, x22, [sp, #32]
  414ab0:	mov	x21, x0
  414ab4:	ldr	x1, [x0, #56]
  414ab8:	ldr	x0, [x0, #16]
  414abc:	cmp	x1, x2
  414ac0:	ldr	x22, [x21, #64]
  414ac4:	b.cs	414aec <wcrtomb@plt+0x121cc>  // b.hs, b.nlast
  414ac8:	add	x1, x2, #0x28
  414acc:	str	x1, [x21, #56]
  414ad0:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
  414ad4:	cmp	x1, x2
  414ad8:	b.hi	414b6c <wcrtomb@plt+0x1224c>  // b.pmore
  414adc:	lsl	x1, x1, #3
  414ae0:	bl	402550 <realloc@plt>
  414ae4:	cbz	x0, 414b68 <wcrtomb@plt+0x12248>
  414ae8:	str	x0, [x21, #16]
  414aec:	mov	x1, x0
  414af0:	cbz	x19, 414b04 <wcrtomb@plt+0x121e4>
  414af4:	nop
  414af8:	str	x19, [x1], #8
  414afc:	ldr	x19, [x19, #16]
  414b00:	cbnz	x19, 414af8 <wcrtomb@plt+0x121d8>
  414b04:	mov	x3, x22
  414b08:	mov	x1, x20
  414b0c:	mov	x2, #0x8                   	// #8
  414b10:	bl	402380 <qsort@plt>
  414b14:	ldr	x2, [x21, #16]
  414b18:	subs	x6, x20, #0x1
  414b1c:	mov	x1, #0x0                   	// #0
  414b20:	mov	x5, x2
  414b24:	ldr	x0, [x5], #8
  414b28:	mov	x3, x0
  414b2c:	b.ne	414b38 <wcrtomb@plt+0x12218>  // b.any
  414b30:	b	414b8c <wcrtomb@plt+0x1226c>
  414b34:	ldr	x3, [x2, x1, lsl #3]
  414b38:	ldr	x4, [x5, x1, lsl #3]
  414b3c:	str	x4, [x3, #16]
  414b40:	add	x1, x1, #0x1
  414b44:	cmp	x1, x6
  414b48:	b.ne	414b34 <wcrtomb@plt+0x12214>  // b.any
  414b4c:	add	x20, x2, x20, lsl #3
  414b50:	ldur	x1, [x20, #-8]
  414b54:	str	xzr, [x1, #16]
  414b58:	ldp	x19, x20, [sp, #16]
  414b5c:	ldp	x21, x22, [sp, #32]
  414b60:	ldp	x29, x30, [sp], #48
  414b64:	ret
  414b68:	ldr	x0, [x21, #16]
  414b6c:	bl	4026b0 <free@plt>
  414b70:	str	xzr, [x21, #16]
  414b74:	mov	x0, x19
  414b78:	str	xzr, [x21, #56]
  414b7c:	ldp	x19, x20, [sp, #16]
  414b80:	ldp	x21, x22, [sp, #32]
  414b84:	ldp	x29, x30, [sp], #48
  414b88:	ret
  414b8c:	mov	x1, x0
  414b90:	b	414b54 <wcrtomb@plt+0x12234>
  414b94:	nop
  414b98:	stp	x29, x30, [sp, #-48]!
  414b9c:	mov	x29, sp
  414ba0:	stp	x19, x20, [sp, #16]
  414ba4:	mov	x20, x2
  414ba8:	add	x2, x2, #0x100
  414bac:	stp	x21, x22, [sp, #32]
  414bb0:	mov	x21, x0
  414bb4:	mov	x22, x1
  414bb8:	and	x0, x2, #0xfffffffffffffff8
  414bbc:	bl	402440 <malloc@plt>
  414bc0:	mov	x19, x0
  414bc4:	cbz	x0, 414c04 <wcrtomb@plt+0x122e4>
  414bc8:	mov	x1, x22
  414bcc:	mov	x2, x20
  414bd0:	add	x0, x0, #0xf8
  414bd4:	bl	4022a0 <memcpy@plt>
  414bd8:	add	x2, x19, x20
  414bdc:	mov	w0, #0x30000               	// #196608
  414be0:	ldr	x1, [x21, #32]
  414be4:	strb	wzr, [x2, #248]
  414be8:	stp	xzr, xzr, [x19, #24]
  414bec:	str	xzr, [x19, #40]
  414bf0:	str	x1, [x19, #56]
  414bf4:	str	wzr, [x19, #64]
  414bf8:	str	x21, [x19, #80]
  414bfc:	str	x20, [x19, #96]
  414c00:	stur	w0, [x19, #110]
  414c04:	mov	x0, x19
  414c08:	ldp	x19, x20, [sp, #16]
  414c0c:	ldp	x21, x22, [sp, #32]
  414c10:	ldp	x29, x30, [sp], #48
  414c14:	ret
  414c18:	cbz	x0, 414c5c <wcrtomb@plt+0x1233c>
  414c1c:	stp	x29, x30, [sp, #-32]!
  414c20:	mov	x29, sp
  414c24:	stp	x19, x20, [sp, #16]
  414c28:	mov	x19, x0
  414c2c:	nop
  414c30:	mov	x20, x19
  414c34:	ldr	x19, [x19, #16]
  414c38:	ldr	x0, [x20, #24]
  414c3c:	cbz	x0, 414c44 <wcrtomb@plt+0x12324>
  414c40:	bl	402570 <closedir@plt>
  414c44:	mov	x0, x20
  414c48:	bl	4026b0 <free@plt>
  414c4c:	cbnz	x19, 414c30 <wcrtomb@plt+0x12310>
  414c50:	ldp	x19, x20, [sp, #16]
  414c54:	ldp	x29, x30, [sp], #32
  414c58:	ret
  414c5c:	ret
  414c60:	stp	x29, x30, [sp, #-32]!
  414c64:	mov	x29, sp
  414c68:	str	x19, [sp, #16]
  414c6c:	mov	x19, x0
  414c70:	b	414c7c <wcrtomb@plt+0x1235c>
  414c74:	bl	423cc8 <_obstack_memory_used@@Base+0xcc00>
  414c78:	tbz	w0, #31, 414ca0 <wcrtomb@plt+0x12380>
  414c7c:	mov	x0, x19
  414c80:	bl	423c78 <_obstack_memory_used@@Base+0xcbb0>
  414c84:	mov	w1, w0
  414c88:	mov	x0, x19
  414c8c:	tst	w1, #0xff
  414c90:	b.eq	414c74 <wcrtomb@plt+0x12354>  // b.none
  414c94:	ldr	x19, [sp, #16]
  414c98:	ldp	x29, x30, [sp], #32
  414c9c:	ret
  414ca0:	bl	402580 <close@plt>
  414ca4:	b	414c7c <wcrtomb@plt+0x1235c>
  414ca8:	stp	x29, x30, [sp, #-176]!
  414cac:	mov	x29, sp
  414cb0:	stp	x21, x22, [sp, #32]
  414cb4:	ldr	x22, [x0, #80]
  414cb8:	stp	x19, x20, [sp, #16]
  414cbc:	mov	x19, x0
  414cc0:	ldr	w0, [x22, #72]
  414cc4:	tbz	w0, #9, 414d48 <wcrtomb@plt+0x12428>
  414cc8:	ldr	x21, [x22, #80]
  414ccc:	mov	w20, w1
  414cd0:	cbz	x21, 414d04 <wcrtomb@plt+0x123e4>
  414cd4:	ldr	x2, [x19, #120]
  414cd8:	add	x1, sp, #0x38
  414cdc:	mov	x0, x21
  414ce0:	str	x2, [sp, #56]
  414ce4:	bl	410e98 <wcrtomb@plt+0xe578>
  414ce8:	cbz	x0, 414d34 <wcrtomb@plt+0x12414>
  414cec:	ldr	x20, [x0, #8]
  414cf0:	ldp	x21, x22, [sp, #32]
  414cf4:	mov	x0, x20
  414cf8:	ldp	x19, x20, [sp, #16]
  414cfc:	ldp	x29, x30, [sp], #176
  414d00:	ret
  414d04:	adrp	x4, 402000 <mbrtowc@plt-0x290>
  414d08:	adrp	x3, 414000 <wcrtomb@plt+0x116e0>
  414d0c:	add	x4, x4, #0x6b0
  414d10:	add	x3, x3, #0xa58
  414d14:	adrp	x2, 414000 <wcrtomb@plt+0x116e0>
  414d18:	mov	x1, #0x0                   	// #0
  414d1c:	add	x2, x2, #0xa48
  414d20:	mov	x0, #0xd                   	// #13
  414d24:	bl	411130 <wcrtomb@plt+0xe810>
  414d28:	str	x0, [x22, #80]
  414d2c:	mov	x21, x0
  414d30:	cbnz	x0, 414cd4 <wcrtomb@plt+0x123b4>
  414d34:	tbnz	w20, #31, 414d48 <wcrtomb@plt+0x12428>
  414d38:	mov	w0, w20
  414d3c:	add	x1, sp, #0x38
  414d40:	bl	402500 <fstatfs@plt>
  414d44:	cbz	w0, 414d60 <wcrtomb@plt+0x12440>
  414d48:	mov	x20, #0x0                   	// #0
  414d4c:	mov	x0, x20
  414d50:	ldp	x19, x20, [sp, #16]
  414d54:	ldp	x21, x22, [sp, #32]
  414d58:	ldp	x29, x30, [sp], #176
  414d5c:	ret
  414d60:	ldr	x20, [sp, #56]
  414d64:	cbz	x21, 414d4c <wcrtomb@plt+0x1242c>
  414d68:	mov	x0, #0x10                  	// #16
  414d6c:	bl	402440 <malloc@plt>
  414d70:	mov	x22, x0
  414d74:	cbz	x0, 414d4c <wcrtomb@plt+0x1242c>
  414d78:	ldr	x2, [x19, #120]
  414d7c:	stp	x2, x20, [x22]
  414d80:	mov	x0, x21
  414d84:	mov	x1, x22
  414d88:	bl	411688 <wcrtomb@plt+0xed68>
  414d8c:	cbz	x0, 414da0 <wcrtomb@plt+0x12480>
  414d90:	cmp	x22, x0
  414d94:	b.ne	414db0 <wcrtomb@plt+0x12490>  // b.any
  414d98:	ldr	x20, [sp, #56]
  414d9c:	b	414d4c <wcrtomb@plt+0x1242c>
  414da0:	mov	x0, x22
  414da4:	bl	4026b0 <free@plt>
  414da8:	ldr	x20, [sp, #56]
  414dac:	b	414d4c <wcrtomb@plt+0x1242c>
  414db0:	bl	4025f0 <abort@plt>
  414db4:	nop
  414db8:	stp	x29, x30, [sp, #-16]!
  414dbc:	mov	x29, sp
  414dc0:	bl	414ca8 <wcrtomb@plt+0x12388>
  414dc4:	mov	x1, x0
  414dc8:	mov	x0, #0x4973                	// #18803
  414dcc:	movk	x0, #0x5265, lsl #16
  414dd0:	cmp	x1, x0
  414dd4:	b.eq	414e50 <wcrtomb@plt+0x12530>  // b.none
  414dd8:	b.le	414e1c <wcrtomb@plt+0x124fc>
  414ddc:	mov	x2, #0x5342                	// #21314
  414de0:	mov	w0, #0x2                   	// #2
  414de4:	movk	x2, #0x5846, lsl #16
  414de8:	cmp	x1, x2
  414dec:	b.eq	414e14 <wcrtomb@plt+0x124f4>  // b.none
  414df0:	mov	x2, #0x4d42                	// #19778
  414df4:	mov	w0, #0x0                   	// #0
  414df8:	movk	x2, #0xff53, lsl #16
  414dfc:	cmp	x1, x2
  414e00:	b.eq	414e14 <wcrtomb@plt+0x124f4>  // b.none
  414e04:	mov	x0, #0x414f                	// #16719
  414e08:	movk	x0, #0x5346, lsl #16
  414e0c:	cmp	x1, x0
  414e10:	cset	w0, ne  // ne = any
  414e14:	ldp	x29, x30, [sp], #16
  414e18:	ret
  414e1c:	mov	x0, #0x6969                	// #26985
  414e20:	cmp	x1, x0
  414e24:	b.eq	414e48 <wcrtomb@plt+0x12528>  // b.none
  414e28:	mov	x2, #0x9fa0                	// #40864
  414e2c:	mov	w0, #0x0                   	// #0
  414e30:	cmp	x1, x2
  414e34:	b.eq	414e14 <wcrtomb@plt+0x124f4>  // b.none
  414e38:	cmp	x1, #0x0
  414e3c:	cset	w0, ne  // ne = any
  414e40:	ldp	x29, x30, [sp], #16
  414e44:	ret
  414e48:	mov	w0, #0x0                   	// #0
  414e4c:	b	414e14 <wcrtomb@plt+0x124f4>
  414e50:	mov	w0, #0x2                   	// #2
  414e54:	b	414e14 <wcrtomb@plt+0x124f4>
  414e58:	stp	x29, x30, [sp, #-32]!
  414e5c:	mov	x29, sp
  414e60:	stp	x19, x20, [sp, #16]
  414e64:	mov	x19, x0
  414e68:	mov	w20, w1
  414e6c:	mov	w0, #0xffffff9c            	// #-100
  414e70:	ldr	w1, [x19, #44]
  414e74:	cmp	w1, w20
  414e78:	ccmp	w1, w0, #0x4, eq  // eq = none
  414e7c:	b.ne	414ed4 <wcrtomb@plt+0x125b4>  // b.any
  414e80:	and	w2, w2, #0xff
  414e84:	cbnz	w2, 414ea8 <wcrtomb@plt+0x12588>
  414e88:	ldr	w0, [x19, #72]
  414e8c:	tst	x0, #0x4
  414e90:	ccmp	w1, #0x0, #0x1, eq  // eq = none
  414e94:	b.ge	414ec8 <wcrtomb@plt+0x125a8>  // b.tcont
  414e98:	str	w20, [x19, #44]
  414e9c:	ldp	x19, x20, [sp, #16]
  414ea0:	ldp	x29, x30, [sp], #32
  414ea4:	ret
  414ea8:	add	x0, x19, #0x60
  414eac:	bl	423c80 <_obstack_memory_used@@Base+0xcbb8>
  414eb0:	tbnz	w0, #31, 414e98 <wcrtomb@plt+0x12578>
  414eb4:	bl	402580 <close@plt>
  414eb8:	str	w20, [x19, #44]
  414ebc:	ldp	x19, x20, [sp, #16]
  414ec0:	ldp	x29, x30, [sp], #32
  414ec4:	ret
  414ec8:	mov	w0, w1
  414ecc:	bl	402580 <close@plt>
  414ed0:	b	414eb8 <wcrtomb@plt+0x12598>
  414ed4:	bl	4025f0 <abort@plt>
  414ed8:	stp	x29, x30, [sp, #-32]!
  414edc:	mov	x29, sp
  414ee0:	ldr	w1, [x0, #72]
  414ee4:	stp	x19, x20, [sp, #16]
  414ee8:	mov	x19, x0
  414eec:	mov	w20, #0x0                   	// #0
  414ef0:	tbnz	w1, #2, 414f08 <wcrtomb@plt+0x125e8>
  414ef4:	tbz	w1, #9, 414f20 <wcrtomb@plt+0x12600>
  414ef8:	and	w20, w1, #0x4
  414efc:	mov	w2, #0x1                   	// #1
  414f00:	mov	w1, #0xffffff9c            	// #-100
  414f04:	bl	414e58 <wcrtomb@plt+0x12538>
  414f08:	add	x0, x19, #0x60
  414f0c:	bl	414c60 <wcrtomb@plt+0x12340>
  414f10:	mov	w0, w20
  414f14:	ldp	x19, x20, [sp, #16]
  414f18:	ldp	x29, x30, [sp], #32
  414f1c:	ret
  414f20:	ldr	w0, [x0, #40]
  414f24:	bl	402340 <fchdir@plt>
  414f28:	cmp	w0, #0x0
  414f2c:	cset	w20, ne  // ne = any
  414f30:	add	x0, x19, #0x60
  414f34:	bl	414c60 <wcrtomb@plt+0x12340>
  414f38:	mov	w0, w20
  414f3c:	ldp	x19, x20, [sp, #16]
  414f40:	ldp	x29, x30, [sp], #32
  414f44:	ret
  414f48:	stp	x29, x30, [sp, #-32]!
  414f4c:	mov	x4, x1
  414f50:	mov	x29, sp
  414f54:	ldr	x5, [x1]
  414f58:	str	x19, [sp, #16]
  414f5c:	mov	x19, x0
  414f60:	add	x3, x5, #0x100
  414f64:	add	x1, x3, x2
  414f68:	cmp	x5, x1
  414f6c:	ldr	x0, [x0]
  414f70:	b.hi	414f98 <wcrtomb@plt+0x12678>  // b.pmore
  414f74:	str	x1, [x4]
  414f78:	bl	402550 <realloc@plt>
  414f7c:	mov	x1, x0
  414f80:	cbz	x0, 414fc0 <wcrtomb@plt+0x126a0>
  414f84:	mov	w0, #0x1                   	// #1
  414f88:	str	x1, [x19]
  414f8c:	ldr	x19, [sp, #16]
  414f90:	ldp	x29, x30, [sp], #32
  414f94:	ret
  414f98:	bl	4026b0 <free@plt>
  414f9c:	str	xzr, [x19]
  414fa0:	bl	402890 <__errno_location@plt>
  414fa4:	mov	x1, x0
  414fa8:	mov	w2, #0x24                  	// #36
  414fac:	mov	w0, #0x0                   	// #0
  414fb0:	ldr	x19, [sp, #16]
  414fb4:	str	w2, [x1]
  414fb8:	ldp	x29, x30, [sp], #32
  414fbc:	ret
  414fc0:	ldr	x0, [x19]
  414fc4:	bl	4026b0 <free@plt>
  414fc8:	str	xzr, [x19]
  414fcc:	mov	w0, #0x0                   	// #0
  414fd0:	b	414f8c <wcrtomb@plt+0x1266c>
  414fd4:	nop
  414fd8:	stp	x29, x30, [sp, #-48]!
  414fdc:	and	w3, w3, #0xff
  414fe0:	mov	x29, sp
  414fe4:	ldr	x5, [x2, #88]
  414fe8:	stp	x19, x20, [sp, #16]
  414fec:	ldr	w4, [x1]
  414ff0:	str	x21, [sp, #32]
  414ff4:	mov	x19, x2
  414ff8:	mov	x21, x1
  414ffc:	add	x20, x2, #0x78
  415000:	ldr	x1, [x2, #48]
  415004:	cbnz	x5, 41505c <wcrtomb@plt+0x1273c>
  415008:	tbz	w4, #0, 41505c <wcrtomb@plt+0x1273c>
  41500c:	mov	x2, x20
  415010:	mov	w0, #0x0                   	// #0
  415014:	bl	4028b0 <__xstat@plt>
  415018:	cbz	w0, 415084 <wcrtomb@plt+0x12764>
  41501c:	bl	402890 <__errno_location@plt>
  415020:	mov	x21, x0
  415024:	ldr	w0, [x0]
  415028:	cmp	w0, #0x2
  41502c:	b.ne	4150c4 <wcrtomb@plt+0x127a4>  // b.any
  415030:	ldr	x1, [x19, #48]
  415034:	mov	x2, x20
  415038:	mov	w0, #0x0                   	// #0
  41503c:	bl	402750 <__lxstat@plt>
  415040:	cbnz	w0, 415168 <wcrtomb@plt+0x12848>
  415044:	str	wzr, [x21]
  415048:	mov	w0, #0xd                   	// #13
  41504c:	ldp	x19, x20, [sp, #16]
  415050:	ldr	x21, [sp, #32]
  415054:	ldp	x29, x30, [sp], #48
  415058:	ret
  41505c:	tst	x4, #0x2
  415060:	ccmp	w3, #0x0, #0x0, eq  // eq = none
  415064:	b.ne	41500c <wcrtomb@plt+0x126ec>  // b.any
  415068:	mov	x2, x1
  41506c:	mov	x3, x20
  415070:	mov	w1, w0
  415074:	mov	w4, #0x100                 	// #256
  415078:	mov	w0, #0x0                   	// #0
  41507c:	bl	402910 <__fxstatat@plt>
  415080:	cbnz	w0, 4150bc <wcrtomb@plt+0x1279c>
  415084:	ldr	w0, [x20, #16]
  415088:	and	w0, w0, #0xf000
  41508c:	cmp	w0, #0x4, lsl #12
  415090:	b.eq	4150fc <wcrtomb@plt+0x127dc>  // b.none
  415094:	cmp	w0, #0xa, lsl #12
  415098:	b.eq	415178 <wcrtomb@plt+0x12858>  // b.none
  41509c:	cmp	w0, #0x8, lsl #12
  4150a0:	mov	w1, #0x8                   	// #8
  4150a4:	mov	w0, #0x3                   	// #3
  4150a8:	csel	w0, w0, w1, ne  // ne = any
  4150ac:	ldp	x19, x20, [sp, #16]
  4150b0:	ldr	x21, [sp, #32]
  4150b4:	ldp	x29, x30, [sp], #48
  4150b8:	ret
  4150bc:	bl	402890 <__errno_location@plt>
  4150c0:	ldr	w0, [x0]
  4150c4:	str	w0, [x19, #64]
  4150c8:	mov	w0, #0xa                   	// #10
  4150cc:	stp	xzr, xzr, [x19, #120]
  4150d0:	stp	xzr, xzr, [x20, #16]
  4150d4:	stp	xzr, xzr, [x20, #32]
  4150d8:	stp	xzr, xzr, [x20, #48]
  4150dc:	stp	xzr, xzr, [x20, #64]
  4150e0:	stp	xzr, xzr, [x20, #80]
  4150e4:	stp	xzr, xzr, [x20, #96]
  4150e8:	stp	xzr, xzr, [x20, #112]
  4150ec:	ldp	x19, x20, [sp, #16]
  4150f0:	ldr	x21, [sp, #32]
  4150f4:	ldp	x29, x30, [sp], #48
  4150f8:	ret
  4150fc:	ldr	w1, [x20, #20]
  415100:	cmp	w1, #0x1
  415104:	b.ls	415170 <wcrtomb@plt+0x12850>  // b.plast
  415108:	ldr	x0, [x19, #88]
  41510c:	cmp	x0, #0x0
  415110:	b.le	415170 <wcrtomb@plt+0x12850>
  415114:	ldr	w2, [x21]
  415118:	sub	w0, w1, #0x2
  41511c:	tst	x2, #0x20
  415120:	csel	w1, w0, w1, eq  // eq = none
  415124:	ldrb	w2, [x19, #248]
  415128:	mov	w0, #0x1                   	// #1
  41512c:	str	w1, [x19, #104]
  415130:	cmp	w2, #0x2e
  415134:	b.ne	4150ac <wcrtomb@plt+0x1278c>  // b.any
  415138:	ldrb	w1, [x19, #249]
  41513c:	cbz	w1, 415154 <wcrtomb@plt+0x12834>
  415140:	ldr	w1, [x19, #248]
  415144:	mov	w2, #0x2e00                	// #11776
  415148:	and	w1, w1, #0xffff00
  41514c:	cmp	w1, w2
  415150:	b.ne	4150ac <wcrtomb@plt+0x1278c>  // b.any
  415154:	ldr	x1, [x19, #88]
  415158:	mov	w0, #0x5                   	// #5
  41515c:	cmp	x1, #0x0
  415160:	csinc	w0, w0, wzr, ne  // ne = any
  415164:	b	4150ac <wcrtomb@plt+0x1278c>
  415168:	ldr	w0, [x21]
  41516c:	b	4150c4 <wcrtomb@plt+0x127a4>
  415170:	mov	w1, #0xffffffff            	// #-1
  415174:	b	415124 <wcrtomb@plt+0x12804>
  415178:	mov	w0, #0xc                   	// #12
  41517c:	b	4150ac <wcrtomb@plt+0x1278c>
  415180:	stp	x29, x30, [sp, #-32]!
  415184:	mov	x29, sp
  415188:	str	x19, [sp, #16]
  41518c:	mov	x19, x1
  415190:	mov	w1, #0x102                 	// #258
  415194:	tst	w0, w1
  415198:	b.eq	4151d8 <wcrtomb@plt+0x128b8>  // b.none
  41519c:	adrp	x4, 402000 <mbrtowc@plt-0x290>
  4151a0:	adrp	x3, 414000 <wcrtomb@plt+0x116e0>
  4151a4:	add	x4, x4, #0x6b0
  4151a8:	add	x3, x3, #0xa08
  4151ac:	adrp	x2, 414000 <wcrtomb@plt+0x116e0>
  4151b0:	mov	x1, #0x0                   	// #0
  4151b4:	add	x2, x2, #0xa38
  4151b8:	mov	x0, #0x1f                  	// #31
  4151bc:	bl	411130 <wcrtomb@plt+0xe810>
  4151c0:	cmp	x0, #0x0
  4151c4:	str	x0, [x19]
  4151c8:	cset	w0, ne  // ne = any
  4151cc:	ldr	x19, [sp, #16]
  4151d0:	ldp	x29, x30, [sp], #32
  4151d4:	ret
  4151d8:	mov	x0, #0x20                  	// #32
  4151dc:	bl	402440 <malloc@plt>
  4151e0:	str	x0, [x19]
  4151e4:	cbz	x0, 4151fc <wcrtomb@plt+0x128dc>
  4151e8:	bl	423a48 <_obstack_memory_used@@Base+0xc980>
  4151ec:	mov	w0, #0x1                   	// #1
  4151f0:	ldr	x19, [sp, #16]
  4151f4:	ldp	x29, x30, [sp], #32
  4151f8:	ret
  4151fc:	mov	w0, #0x0                   	// #0
  415200:	b	4151cc <wcrtomb@plt+0x128ac>
  415204:	nop
  415208:	lsl	w3, w1, #11
  41520c:	mov	x4, x2
  415210:	and	w3, w3, #0x8000
  415214:	mov	w2, #0x4900                	// #18688
  415218:	movk	w2, #0x8, lsl #16
  41521c:	orr	w2, w3, w2
  415220:	tbz	w1, #9, 41522c <wcrtomb@plt+0x1290c>
  415224:	mov	x1, x4
  415228:	b	411fb8 <wcrtomb@plt+0xf698>
  41522c:	mov	w1, w2
  415230:	mov	x0, x4
  415234:	b	423ba8 <_obstack_memory_used@@Base+0xcae0>
  415238:	stp	x29, x30, [sp, #-208]!
  41523c:	mov	x29, sp
  415240:	stp	x19, x20, [sp, #16]
  415244:	mov	w20, w2
  415248:	mov	x19, x3
  41524c:	stp	x21, x22, [sp, #32]
  415250:	mov	x21, x0
  415254:	ldr	w22, [x0, #72]
  415258:	stp	x23, x24, [sp, #48]
  41525c:	mov	x23, x1
  415260:	and	w0, w22, #0x4
  415264:	str	x25, [sp, #64]
  415268:	cbz	x3, 415278 <wcrtomb@plt+0x12958>
  41526c:	ldrb	w1, [x3]
  415270:	cmp	w1, #0x2e
  415274:	b.eq	4152e8 <wcrtomb@plt+0x129c8>  // b.none
  415278:	cbnz	w0, 4153ac <wcrtomb@plt+0x12a8c>
  41527c:	mov	w25, #0x0                   	// #0
  415280:	tbnz	w20, #31, 41531c <wcrtomb@plt+0x129fc>
  415284:	mov	w24, w20
  415288:	mov	w25, #0x0                   	// #0
  41528c:	tbnz	w22, #1, 415340 <wcrtomb@plt+0x12a20>
  415290:	cbz	x19, 4152a0 <wcrtomb@plt+0x12980>
  415294:	ldrb	w1, [x19]
  415298:	cmp	w1, #0x2e
  41529c:	b.eq	4153f0 <wcrtomb@plt+0x12ad0>  // b.none
  4152a0:	tbnz	w22, #9, 41537c <wcrtomb@plt+0x12a5c>
  4152a4:	mov	w0, w24
  4152a8:	bl	402340 <fchdir@plt>
  4152ac:	mov	w19, w0
  4152b0:	tbz	w20, #31, 4153bc <wcrtomb@plt+0x12a9c>
  4152b4:	bl	402890 <__errno_location@plt>
  4152b8:	mov	x20, x0
  4152bc:	mov	w0, w24
  4152c0:	ldr	w21, [x20]
  4152c4:	bl	402580 <close@plt>
  4152c8:	str	w21, [x20]
  4152cc:	mov	w0, w19
  4152d0:	ldp	x19, x20, [sp, #16]
  4152d4:	ldp	x21, x22, [sp, #32]
  4152d8:	ldp	x23, x24, [sp, #48]
  4152dc:	ldr	x25, [sp, #64]
  4152e0:	ldp	x29, x30, [sp], #208
  4152e4:	ret
  4152e8:	ldrb	w2, [x3, #1]
  4152ec:	cmp	w2, #0x2e
  4152f0:	b.ne	415278 <wcrtomb@plt+0x12958>  // b.any
  4152f4:	ldrb	w2, [x3, #2]
  4152f8:	cbnz	w2, 415278 <wcrtomb@plt+0x12958>
  4152fc:	cbnz	w0, 4153ac <wcrtomb@plt+0x12a8c>
  415300:	tbz	w20, #31, 415454 <wcrtomb@plt+0x12b34>
  415304:	tbz	w22, #9, 415408 <wcrtomb@plt+0x12ae8>
  415308:	add	x24, x21, #0x60
  41530c:	mov	x0, x24
  415310:	bl	423c78 <_obstack_memory_used@@Base+0xcbb0>
  415314:	ands	w25, w0, #0xff
  415318:	b.eq	41541c <wcrtomb@plt+0x12afc>  // b.none
  41531c:	ldr	w0, [x21, #44]
  415320:	mov	w1, w22
  415324:	mov	x2, x19
  415328:	bl	415208 <wcrtomb@plt+0x128e8>
  41532c:	mov	w24, w0
  415330:	tbnz	w0, #31, 41544c <wcrtomb@plt+0x12b2c>
  415334:	ldr	w22, [x21, #72]
  415338:	tbz	w22, #1, 415290 <wcrtomb@plt+0x12970>
  41533c:	nop
  415340:	add	x2, sp, #0x50
  415344:	mov	w1, w24
  415348:	mov	w0, #0x0                   	// #0
  41534c:	bl	4027d0 <__fxstat@plt>
  415350:	cbnz	w0, 4153e4 <wcrtomb@plt+0x12ac4>
  415354:	ldr	x0, [sp, #80]
  415358:	ldr	x1, [x23, #120]
  41535c:	cmp	x1, x0
  415360:	b.ne	4153d8 <wcrtomb@plt+0x12ab8>  // b.any
  415364:	ldr	x0, [sp, #88]
  415368:	ldr	x1, [x23, #128]
  41536c:	cmp	x1, x0
  415370:	b.ne	4153d8 <wcrtomb@plt+0x12ab8>  // b.any
  415374:	ldr	w22, [x21, #72]
  415378:	tbz	w22, #9, 4152a4 <wcrtomb@plt+0x12984>
  41537c:	eor	w2, w25, #0x1
  415380:	mov	w1, w24
  415384:	mov	x0, x21
  415388:	mov	w19, #0x0                   	// #0
  41538c:	bl	414e58 <wcrtomb@plt+0x12538>
  415390:	mov	w0, w19
  415394:	ldp	x19, x20, [sp, #16]
  415398:	ldp	x21, x22, [sp, #32]
  41539c:	ldp	x23, x24, [sp, #48]
  4153a0:	ldr	x25, [sp, #64]
  4153a4:	ldp	x29, x30, [sp], #208
  4153a8:	ret
  4153ac:	tst	x22, #0x200
  4153b0:	mov	w19, #0x0                   	// #0
  4153b4:	ccmp	w20, #0x0, #0x1, ne  // ne = any
  4153b8:	b.ge	415410 <wcrtomb@plt+0x12af0>  // b.tcont
  4153bc:	mov	w0, w19
  4153c0:	ldp	x19, x20, [sp, #16]
  4153c4:	ldp	x21, x22, [sp, #32]
  4153c8:	ldp	x23, x24, [sp, #48]
  4153cc:	ldr	x25, [sp, #64]
  4153d0:	ldp	x29, x30, [sp], #208
  4153d4:	ret
  4153d8:	bl	402890 <__errno_location@plt>
  4153dc:	mov	w1, #0x2                   	// #2
  4153e0:	str	w1, [x0]
  4153e4:	mov	w19, #0xffffffff            	// #-1
  4153e8:	tbz	w20, #31, 4153bc <wcrtomb@plt+0x12a9c>
  4153ec:	b	4152b4 <wcrtomb@plt+0x12994>
  4153f0:	ldrb	w0, [x19, #1]
  4153f4:	cmp	w0, #0x2e
  4153f8:	b.ne	4152a0 <wcrtomb@plt+0x12980>  // b.any
  4153fc:	ldrb	w0, [x19, #2]
  415400:	cbz	w0, 415340 <wcrtomb@plt+0x12a20>
  415404:	b	4152a0 <wcrtomb@plt+0x12980>
  415408:	mov	w25, #0x1                   	// #1
  41540c:	b	41531c <wcrtomb@plt+0x129fc>
  415410:	mov	w0, w20
  415414:	bl	402580 <close@plt>
  415418:	b	4153bc <wcrtomb@plt+0x12a9c>
  41541c:	mov	x0, x24
  415420:	bl	423cc8 <_obstack_memory_used@@Base+0xcc00>
  415424:	mov	w24, w0
  415428:	tbnz	w0, #31, 415440 <wcrtomb@plt+0x12b20>
  41542c:	ldr	w22, [x21, #72]
  415430:	mov	w20, w0
  415434:	mov	w25, #0x1                   	// #1
  415438:	tbz	w22, #1, 4152a0 <wcrtomb@plt+0x12980>
  41543c:	b	415340 <wcrtomb@plt+0x12a20>
  415440:	ldr	w22, [x21, #72]
  415444:	mov	w25, #0x1                   	// #1
  415448:	b	41531c <wcrtomb@plt+0x129fc>
  41544c:	mov	w19, #0xffffffff            	// #-1
  415450:	b	4153bc <wcrtomb@plt+0x12a9c>
  415454:	mov	w24, w20
  415458:	mov	w25, #0x1                   	// #1
  41545c:	tbz	w22, #1, 415298 <wcrtomb@plt+0x12978>
  415460:	b	415340 <wcrtomb@plt+0x12a20>
  415464:	nop
  415468:	stp	x29, x30, [sp, #-48]!
  41546c:	mov	x29, sp
  415470:	stp	x19, x20, [sp, #16]
  415474:	mov	x19, x2
  415478:	str	x21, [sp, #32]
  41547c:	mov	x21, x1
  415480:	mov	w1, #0x102                 	// #258
  415484:	tst	w0, w1
  415488:	b.eq	4154f8 <wcrtomb@plt+0x12bd8>  // b.none
  41548c:	mov	x0, #0x18                  	// #24
  415490:	bl	402440 <malloc@plt>
  415494:	mov	x20, x0
  415498:	cbz	x0, 41553c <wcrtomb@plt+0x12c1c>
  41549c:	ldr	x2, [x19, #120]
  4154a0:	mov	x1, x0
  4154a4:	str	x2, [x20]
  4154a8:	ldr	x0, [x21]
  4154ac:	str	x19, [x20, #16]
  4154b0:	ldr	x2, [x19, #128]
  4154b4:	str	x2, [x20, #8]
  4154b8:	bl	411688 <wcrtomb@plt+0xed68>
  4154bc:	mov	x21, x0
  4154c0:	cmp	x20, x0
  4154c4:	b.eq	415528 <wcrtomb@plt+0x12c08>  // b.none
  4154c8:	mov	x0, x20
  4154cc:	bl	4026b0 <free@plt>
  4154d0:	cbz	x21, 41553c <wcrtomb@plt+0x12c1c>
  4154d4:	ldr	x2, [x21, #16]
  4154d8:	mov	w1, #0x2                   	// #2
  4154dc:	mov	w0, #0x1                   	// #1
  4154e0:	str	x2, [x19]
  4154e4:	strh	w1, [x19, #108]
  4154e8:	ldp	x19, x20, [sp, #16]
  4154ec:	ldr	x21, [sp, #32]
  4154f0:	ldp	x29, x30, [sp], #48
  4154f4:	ret
  4154f8:	ldr	x0, [x21]
  4154fc:	add	x1, x2, #0x78
  415500:	bl	423a60 <_obstack_memory_used@@Base+0xc998>
  415504:	ands	w0, w0, #0xff
  415508:	b.eq	415528 <wcrtomb@plt+0x12c08>  // b.none
  41550c:	mov	w1, #0x2                   	// #2
  415510:	str	x19, [x19]
  415514:	strh	w1, [x19, #108]
  415518:	ldp	x19, x20, [sp, #16]
  41551c:	ldr	x21, [sp, #32]
  415520:	ldp	x29, x30, [sp], #48
  415524:	ret
  415528:	mov	w0, #0x1                   	// #1
  41552c:	ldp	x19, x20, [sp, #16]
  415530:	ldr	x21, [sp, #32]
  415534:	ldp	x29, x30, [sp], #48
  415538:	ret
  41553c:	mov	w0, #0x0                   	// #0
  415540:	b	4154e8 <wcrtomb@plt+0x12bc8>
  415544:	nop
  415548:	stp	x29, x30, [sp, #-48]!
  41554c:	mov	w3, #0x102                 	// #258
  415550:	tst	w0, w3
  415554:	mov	x29, sp
  415558:	b.ne	415590 <wcrtomb@plt+0x12c70>  // b.any
  41555c:	ldr	x0, [x2, #8]
  415560:	cbz	x0, 415588 <wcrtomb@plt+0x12c68>
  415564:	ldr	x3, [x0, #88]
  415568:	tbnz	x3, #63, 415588 <wcrtomb@plt+0x12c68>
  41556c:	ldr	x1, [x1]
  415570:	ldr	x3, [x1, #16]
  415574:	cbz	x3, 4155d0 <wcrtomb@plt+0x12cb0>
  415578:	ldr	x4, [x1]
  41557c:	ldr	x3, [x2, #128]
  415580:	cmp	x4, x3
  415584:	b.eq	4155b4 <wcrtomb@plt+0x12c94>  // b.none
  415588:	ldp	x29, x30, [sp], #48
  41558c:	ret
  415590:	ldp	x3, x2, [x2, #120]
  415594:	stp	x3, x2, [sp, #24]
  415598:	ldr	x0, [x1]
  41559c:	add	x1, sp, #0x18
  4155a0:	bl	4116d0 <wcrtomb@plt+0xedb0>
  4155a4:	cbz	x0, 4155d0 <wcrtomb@plt+0x12cb0>
  4155a8:	bl	4026b0 <free@plt>
  4155ac:	ldp	x29, x30, [sp], #48
  4155b0:	ret
  4155b4:	ldr	x3, [x1, #8]
  4155b8:	ldr	x2, [x2, #120]
  4155bc:	cmp	x3, x2
  4155c0:	b.ne	415588 <wcrtomb@plt+0x12c68>  // b.any
  4155c4:	ldp	x2, x0, [x0, #120]
  4155c8:	stp	x0, x2, [x1]
  4155cc:	b	415588 <wcrtomb@plt+0x12c68>
  4155d0:	bl	4025f0 <abort@plt>
  4155d4:	nop
  4155d8:	stp	x29, x30, [sp, #-192]!
  4155dc:	mov	x29, sp
  4155e0:	stp	x21, x22, [sp, #32]
  4155e4:	ldr	x21, [x0]
  4155e8:	stp	x27, x28, [sp, #80]
  4155ec:	mov	x28, x0
  4155f0:	stp	x19, x20, [sp, #16]
  4155f4:	ldr	x0, [x21, #24]
  4155f8:	stp	x23, x24, [sp, #48]
  4155fc:	str	w1, [sp, #156]
  415600:	str	x0, [sp, #160]
  415604:	cbz	x0, 415958 <wcrtomb@plt+0x13038>
  415608:	bl	402740 <dirfd@plt>
  41560c:	str	w0, [sp, #188]
  415610:	tbnz	w0, #31, 415dd8 <wcrtomb@plt+0x134b8>
  415614:	ldr	x0, [x28, #64]
  415618:	stp	x25, x26, [sp, #64]
  41561c:	cbz	x0, 415d38 <wcrtomb@plt+0x13418>
  415620:	ldr	w0, [x28, #72]
  415624:	mov	x1, #0xffffffffffffffff    	// #-1
  415628:	str	x1, [sp, #128]
  41562c:	mov	w1, #0x1                   	// #1
  415630:	str	w1, [sp, #172]
  415634:	ldr	x20, [x21, #72]
  415638:	ldr	x1, [x21, #56]
  41563c:	sub	x2, x20, #0x1
  415640:	str	x2, [sp, #136]
  415644:	ldrb	w1, [x1, x2]
  415648:	cmp	w1, #0x2f
  41564c:	b.eq	415658 <wcrtomb@plt+0x12d38>  // b.none
  415650:	str	x20, [sp, #136]
  415654:	add	x20, x20, #0x1
  415658:	str	xzr, [sp, #120]
  41565c:	tbz	w0, #2, 41567c <wcrtomb@plt+0x12d5c>
  415660:	ldr	x0, [x28, #32]
  415664:	mov	w1, #0x2f                  	// #47
  415668:	ldr	x2, [sp, #136]
  41566c:	add	x26, x0, x2
  415670:	add	x3, x26, #0x1
  415674:	strb	w1, [x0, x2]
  415678:	str	x3, [sp, #120]
  41567c:	ldr	x0, [x21, #88]
  415680:	ldr	x27, [x21, #24]
  415684:	add	x1, x0, #0x1
  415688:	ldr	x22, [x28, #48]
  41568c:	str	x1, [sp, #112]
  415690:	sub	x22, x22, x20
  415694:	cbz	x27, 415ea8 <wcrtomb@plt+0x13588>
  415698:	bl	402890 <__errno_location@plt>
  41569c:	mov	x24, #0x0                   	// #0
  4156a0:	mov	x19, #0x0                   	// #0
  4156a4:	mov	x23, #0x0                   	// #0
  4156a8:	str	x0, [sp, #104]
  4156ac:	adrp	x0, 427000 <_obstack_memory_used@@Base+0xff38>
  4156b0:	add	x0, x0, #0x260
  4156b4:	str	x0, [sp, #144]
  4156b8:	str	wzr, [sp, #152]
  4156bc:	str	wzr, [sp, #168]
  4156c0:	ldr	x0, [sp, #104]
  4156c4:	str	wzr, [x0]
  4156c8:	mov	x0, x27
  4156cc:	bl	402540 <readdir@plt>
  4156d0:	mov	x26, x0
  4156d4:	cbz	x0, 415c28 <wcrtomb@plt+0x13308>
  4156d8:	ldr	w0, [x28, #72]
  4156dc:	tbnz	w0, #5, 4156ec <wcrtomb@plt+0x12dcc>
  4156e0:	ldrb	w0, [x26, #19]
  4156e4:	cmp	w0, #0x2e
  4156e8:	b.eq	4158f8 <wcrtomb@plt+0x12fd8>  // b.none
  4156ec:	add	x25, x26, #0x13
  4156f0:	mov	x0, x25
  4156f4:	bl	402300 <strlen@plt>
  4156f8:	mov	x1, x25
  4156fc:	mov	x25, x0
  415700:	mov	x2, x25
  415704:	mov	x0, x28
  415708:	bl	414b98 <wcrtomb@plt+0x12278>
  41570c:	mov	x27, x0
  415710:	cbz	x0, 415b04 <wcrtomb@plt+0x131e4>
  415714:	cmp	x25, x22
  415718:	b.cs	415878 <wcrtomb@plt+0x12f58>  // b.hs, b.nlast
  41571c:	adds	x3, x25, x20
  415720:	b.cs	415ec0 <wcrtomb@plt+0x135a0>  // b.hs, b.nlast
  415724:	ldr	w0, [x28, #72]
  415728:	add	x1, x27, #0xf8
  41572c:	ldr	x2, [x28]
  415730:	str	x2, [x27, #8]
  415734:	ldr	x2, [x26]
  415738:	str	x3, [x27, #72]
  41573c:	ldr	x3, [sp, #112]
  415740:	str	x3, [x27, #88]
  415744:	str	x2, [x27, #128]
  415748:	tbnz	w0, #2, 4158d0 <wcrtomb@plt+0x12fb0>
  41574c:	str	x1, [x27, #48]
  415750:	ldr	x1, [x28, #64]
  415754:	cbz	x1, 41575c <wcrtomb@plt+0x12e3c>
  415758:	tbz	w0, #10, 415934 <wcrtomb@plt+0x13014>
  41575c:	ldrb	w1, [x26, #18]
  415760:	and	w0, w0, #0x18
  415764:	cmp	w0, #0x18
  415768:	sub	w0, w1, #0x1
  41576c:	b.eq	415910 <wcrtomb@plt+0x12ff0>  // b.none
  415770:	mov	w1, #0xb                   	// #11
  415774:	strh	w1, [x27, #108]
  415778:	cmp	w0, #0xb
  41577c:	b.ls	415850 <wcrtomb@plt+0x12f30>  // b.plast
  415780:	mov	x1, #0x2                   	// #2
  415784:	str	wzr, [x27, #136]
  415788:	str	x1, [x27, #168]
  41578c:	str	xzr, [x27, #16]
  415790:	cbz	x23, 4158f0 <wcrtomb@plt+0x12fd0>
  415794:	str	x27, [x24, #16]
  415798:	mov	x0, #0x2710                	// #10000
  41579c:	cmp	x19, x0
  4157a0:	b.eq	415864 <wcrtomb@plt+0x12f44>  // b.none
  4157a4:	ldr	x0, [sp, #128]
  4157a8:	add	x19, x19, #0x1
  4157ac:	cmp	x19, x0
  4157b0:	b.cs	4157c0 <wcrtomb@plt+0x12ea0>  // b.hs, b.nlast
  4157b4:	mov	x24, x27
  4157b8:	ldr	x27, [x21, #24]
  4157bc:	cbnz	x27, 4156c0 <wcrtomb@plt+0x12da0>
  4157c0:	ldr	w0, [sp, #152]
  4157c4:	cbnz	w0, 415c6c <wcrtomb@plt+0x1334c>
  4157c8:	ldr	w0, [x28, #72]
  4157cc:	tbz	w0, #2, 4157f4 <wcrtomb@plt+0x12ed4>
  4157d0:	ldr	x0, [x28, #48]
  4157d4:	cmp	x19, #0x0
  4157d8:	ccmp	x0, x20, #0x4, ne  // ne = any
  4157dc:	b.ne	4157ec <wcrtomb@plt+0x12ecc>  // b.any
  4157e0:	ldr	x0, [sp, #120]
  4157e4:	sub	x0, x0, #0x1
  4157e8:	str	x0, [sp, #120]
  4157ec:	ldr	x0, [sp, #120]
  4157f0:	strb	wzr, [x0]
  4157f4:	ldr	x0, [sp, #160]
  4157f8:	cmp	x0, #0x0
  4157fc:	ldr	w0, [sp, #172]
  415800:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  415804:	b.eq	415ad0 <wcrtomb@plt+0x131b0>  // b.none
  415808:	ldr	w0, [sp, #156]
  41580c:	cmp	x19, #0x0
  415810:	ccmp	w0, #0x1, #0x4, ne  // ne = any
  415814:	b.eq	415b64 <wcrtomb@plt+0x13244>  // b.none
  415818:	ldr	w0, [sp, #168]
  41581c:	cbnz	w0, 415cf4 <wcrtomb@plt+0x133d4>
  415820:	ldr	x0, [x28, #64]
  415824:	cmp	x0, #0x0
  415828:	ccmp	x19, #0x1, #0x4, ne  // ne = any
  41582c:	b.ne	415b6c <wcrtomb@plt+0x1324c>  // b.any
  415830:	mov	x0, x23
  415834:	ldp	x19, x20, [sp, #16]
  415838:	ldp	x21, x22, [sp, #32]
  41583c:	ldp	x23, x24, [sp, #48]
  415840:	ldp	x25, x26, [sp, #64]
  415844:	ldp	x27, x28, [sp, #80]
  415848:	ldp	x29, x30, [sp], #192
  41584c:	ret
  415850:	mov	x1, #0x2                   	// #2
  415854:	ldr	x2, [sp, #144]
  415858:	ldr	w0, [x2, w0, uxtw #2]
  41585c:	str	w0, [x27, #136]
  415860:	b	415788 <wcrtomb@plt+0x12e68>
  415864:	ldr	x0, [x28, #64]
  415868:	cbz	x0, 415a54 <wcrtomb@plt+0x13134>
  41586c:	mov	x24, x27
  415870:	mov	x19, #0x2711                	// #10001
  415874:	b	4157b8 <wcrtomb@plt+0x12e98>
  415878:	ldr	x0, [sp, #136]
  41587c:	add	x1, x28, #0x30
  415880:	ldr	x22, [x28, #32]
  415884:	add	x2, x0, #0x2
  415888:	add	x2, x2, x25
  41588c:	add	x0, x28, #0x20
  415890:	bl	414f48 <wcrtomb@plt+0x12628>
  415894:	ands	w0, w0, #0xff
  415898:	b.eq	415b04 <wcrtomb@plt+0x131e4>  // b.none
  41589c:	ldr	x1, [x28, #32]
  4158a0:	cmp	x1, x22
  4158a4:	b.eq	415950 <wcrtomb@plt+0x13030>  // b.none
  4158a8:	ldr	w2, [x28, #72]
  4158ac:	add	x1, x1, x20
  4158b0:	tst	x2, #0x4
  4158b4:	ldr	x2, [sp, #120]
  4158b8:	csel	x1, x1, x2, ne  // ne = any
  4158bc:	str	x1, [sp, #120]
  4158c0:	ldr	x22, [x28, #48]
  4158c4:	str	w0, [sp, #152]
  4158c8:	sub	x22, x22, x20
  4158cc:	b	41571c <wcrtomb@plt+0x12dfc>
  4158d0:	ldr	x0, [x27, #56]
  4158d4:	str	x0, [x27, #48]
  4158d8:	ldr	x0, [sp, #120]
  4158dc:	ldr	x2, [x27, #96]
  4158e0:	add	x2, x2, #0x1
  4158e4:	bl	4022c0 <memmove@plt>
  4158e8:	ldr	w0, [x28, #72]
  4158ec:	b	415750 <wcrtomb@plt+0x12e30>
  4158f0:	mov	x23, x27
  4158f4:	b	415798 <wcrtomb@plt+0x12e78>
  4158f8:	ldrb	w0, [x26, #20]
  4158fc:	cbz	w0, 4157b8 <wcrtomb@plt+0x12e98>
  415900:	ldrh	w0, [x26, #20]
  415904:	cmp	w0, #0x2e
  415908:	b.ne	4156ec <wcrtomb@plt+0x12dcc>  // b.any
  41590c:	b	4157b8 <wcrtomb@plt+0x12e98>
  415910:	and	w1, w1, #0xfffffffb
  415914:	cbz	w1, 415770 <wcrtomb@plt+0x12e50>
  415918:	mov	w1, #0xb                   	// #11
  41591c:	strh	w1, [x27, #108]
  415920:	cmp	w0, #0xb
  415924:	mov	x1, #0x1                   	// #1
  415928:	b.ls	415854 <wcrtomb@plt+0x12f34>  // b.plast
  41592c:	str	wzr, [x27, #136]
  415930:	b	415788 <wcrtomb@plt+0x12e68>
  415934:	ldr	w0, [x28, #44]
  415938:	mov	x2, x27
  41593c:	add	x1, x28, #0x48
  415940:	mov	w3, #0x0                   	// #0
  415944:	bl	414fd8 <wcrtomb@plt+0x126b8>
  415948:	strh	w0, [x27, #108]
  41594c:	b	41578c <wcrtomb@plt+0x12e6c>
  415950:	ldr	w0, [sp, #152]
  415954:	b	4158c0 <wcrtomb@plt+0x12fa0>
  415958:	ldr	w3, [x28, #72]
  41595c:	mov	w1, #0x204                 	// #516
  415960:	mov	w0, #0xffffff9c            	// #-100
  415964:	and	w1, w3, w1
  415968:	cmp	w1, #0x200
  41596c:	b.ne	415974 <wcrtomb@plt+0x13054>  // b.any
  415970:	ldr	w0, [x28, #44]
  415974:	and	w2, w3, #0x10
  415978:	ldr	x1, [x21, #48]
  41597c:	tbz	w3, #4, 415988 <wcrtomb@plt+0x13068>
  415980:	mov	w2, #0x8000                	// #32768
  415984:	tbnz	w3, #0, 415ba0 <wcrtomb@plt+0x13280>
  415988:	add	x3, sp, #0xbc
  41598c:	bl	423d58 <_obstack_memory_used@@Base+0xcc90>
  415990:	str	x0, [x21, #24]
  415994:	mov	x23, x0
  415998:	cbz	x0, 415e68 <wcrtomb@plt+0x13548>
  41599c:	ldrh	w0, [x21, #108]
  4159a0:	cmp	w0, #0xb
  4159a4:	b.eq	415d60 <wcrtomb@plt+0x13440>  // b.none
  4159a8:	ldr	w0, [x28, #72]
  4159ac:	tbnz	w0, #8, 415bb4 <wcrtomb@plt+0x13294>
  4159b0:	stp	x25, x26, [sp, #64]
  4159b4:	mov	x0, #0x86a0                	// #34464
  4159b8:	ldr	x1, [x28, #64]
  4159bc:	movk	x0, #0x1, lsl #16
  4159c0:	cmp	x1, #0x0
  4159c4:	csinv	x0, x0, xzr, eq  // eq = none
  4159c8:	str	x0, [sp, #128]
  4159cc:	ldr	w0, [sp, #156]
  4159d0:	cmp	w0, #0x2
  4159d4:	b.eq	415d54 <wcrtomb@plt+0x13434>  // b.none
  4159d8:	ldr	w3, [x28, #72]
  4159dc:	ldr	w0, [sp, #188]
  4159e0:	and	w3, w3, #0x38
  4159e4:	cmp	w3, #0x18
  4159e8:	b.eq	415c04 <wcrtomb@plt+0x132e4>  // b.none
  4159ec:	ldr	w1, [sp, #156]
  4159f0:	mov	w20, #0x1                   	// #1
  4159f4:	cmp	w1, #0x3
  4159f8:	cset	w19, eq  // eq = none
  4159fc:	ldr	w1, [x28, #72]
  415a00:	tbnz	w1, #9, 415dc4 <wcrtomb@plt+0x134a4>
  415a04:	tbz	w0, #31, 415da8 <wcrtomb@plt+0x13488>
  415a08:	cmp	w19, #0x0
  415a0c:	ccmp	w20, #0x0, #0x4, ne  // ne = any
  415a10:	b.eq	415a20 <wcrtomb@plt+0x13100>  // b.none
  415a14:	bl	402890 <__errno_location@plt>
  415a18:	ldr	w0, [x0]
  415a1c:	str	w0, [x21, #64]
  415a20:	ldrh	w1, [x21, #110]
  415a24:	ldr	x0, [x21, #24]
  415a28:	orr	w1, w1, #0x1
  415a2c:	strh	w1, [x21, #110]
  415a30:	bl	402570 <closedir@plt>
  415a34:	ldr	w0, [x28, #72]
  415a38:	str	xzr, [x21, #24]
  415a3c:	tbz	w0, #9, 415a48 <wcrtomb@plt+0x13128>
  415a40:	ldr	w1, [sp, #188]
  415a44:	tbz	w1, #31, 415df8 <wcrtomb@plt+0x134d8>
  415a48:	str	xzr, [x21, #24]
  415a4c:	str	wzr, [sp, #172]
  415a50:	b	415634 <wcrtomb@plt+0x12d14>
  415a54:	ldr	w1, [sp, #188]
  415a58:	mov	x0, x21
  415a5c:	bl	414ca8 <wcrtomb@plt+0x12388>
  415a60:	mov	x1, #0x1994                	// #6548
  415a64:	movk	x1, #0x102, lsl #16
  415a68:	cmp	x0, x1
  415a6c:	b.eq	415af4 <wcrtomb@plt+0x131d4>  // b.none
  415a70:	mov	x1, #0x4d42                	// #19778
  415a74:	movk	x1, #0xff53, lsl #16
  415a78:	cmp	x0, x1
  415a7c:	b.eq	415af4 <wcrtomb@plt+0x131d4>  // b.none
  415a80:	mov	x1, #0x6969                	// #26985
  415a84:	cmp	x0, x1
  415a88:	b.eq	415af4 <wcrtomb@plt+0x131d4>  // b.none
  415a8c:	mov	w0, #0x1                   	// #1
  415a90:	str	w0, [sp, #168]
  415a94:	b	41586c <wcrtomb@plt+0x12f4c>
  415a98:	ldr	x1, [sp, #160]
  415a9c:	mov	x23, #0x0                   	// #0
  415aa0:	cmp	x1, #0x0
  415aa4:	ldr	w1, [sp, #172]
  415aa8:	csel	w1, w1, wzr, eq  // eq = none
  415aac:	cbz	w1, 415ad4 <wcrtomb@plt+0x131b4>
  415ab0:	mov	x19, #0x0                   	// #0
  415ab4:	str	wzr, [sp, #168]
  415ab8:	cbnz	x0, 415d80 <wcrtomb@plt+0x13460>
  415abc:	mov	x0, x28
  415ac0:	bl	414ed8 <wcrtomb@plt+0x125b8>
  415ac4:	cmp	w0, #0x0
  415ac8:	cset	w0, ne  // ne = any
  415acc:	cbnz	w0, 415e24 <wcrtomb@plt+0x13504>
  415ad0:	cbnz	x19, 415818 <wcrtomb@plt+0x12ef8>
  415ad4:	ldr	w0, [sp, #156]
  415ad8:	cmp	w0, #0x3
  415adc:	b.eq	415e8c <wcrtomb@plt+0x1356c>  // b.none
  415ae0:	mov	x0, x23
  415ae4:	mov	x23, #0x0                   	// #0
  415ae8:	bl	414c18 <wcrtomb@plt+0x122f8>
  415aec:	ldp	x25, x26, [sp, #64]
  415af0:	b	415b48 <wcrtomb@plt+0x13228>
  415af4:	mov	x24, x27
  415af8:	mov	x19, #0x2711                	// #10001
  415afc:	str	wzr, [sp, #168]
  415b00:	b	4157b8 <wcrtomb@plt+0x12e98>
  415b04:	ldr	x20, [sp, #104]
  415b08:	mov	x0, x27
  415b0c:	ldr	w19, [x20]
  415b10:	bl	4026b0 <free@plt>
  415b14:	mov	x0, x23
  415b18:	bl	414c18 <wcrtomb@plt+0x122f8>
  415b1c:	ldr	x0, [x21, #24]
  415b20:	mov	x23, #0x0                   	// #0
  415b24:	bl	402570 <closedir@plt>
  415b28:	ldr	w0, [x28, #72]
  415b2c:	mov	w1, #0x7                   	// #7
  415b30:	ldp	x25, x26, [sp, #64]
  415b34:	str	xzr, [x21, #24]
  415b38:	strh	w1, [x21, #108]
  415b3c:	orr	w0, w0, #0x2000
  415b40:	str	w0, [x28, #72]
  415b44:	str	w19, [x20]
  415b48:	mov	x0, x23
  415b4c:	ldp	x19, x20, [sp, #16]
  415b50:	ldp	x21, x22, [sp, #32]
  415b54:	ldp	x23, x24, [sp, #48]
  415b58:	ldp	x27, x28, [sp, #80]
  415b5c:	ldp	x29, x30, [sp], #192
  415b60:	ret
  415b64:	ldr	x0, [x21, #88]
  415b68:	b	415ab8 <wcrtomb@plt+0x13198>
  415b6c:	mov	x2, x19
  415b70:	mov	x1, x23
  415b74:	mov	x0, x28
  415b78:	bl	414a98 <wcrtomb@plt+0x12178>
  415b7c:	mov	x23, x0
  415b80:	mov	x0, x23
  415b84:	ldp	x19, x20, [sp, #16]
  415b88:	ldp	x21, x22, [sp, #32]
  415b8c:	ldp	x23, x24, [sp, #48]
  415b90:	ldp	x25, x26, [sp, #64]
  415b94:	ldp	x27, x28, [sp, #80]
  415b98:	ldp	x29, x30, [sp], #192
  415b9c:	ret
  415ba0:	ldr	x2, [x21, #88]
  415ba4:	cmp	x2, #0x0
  415ba8:	cset	w2, ne  // ne = any
  415bac:	lsl	w2, w2, #15
  415bb0:	b	415988 <wcrtomb@plt+0x13068>
  415bb4:	add	x19, x28, #0x58
  415bb8:	mov	x2, x21
  415bbc:	mov	x1, x19
  415bc0:	bl	415548 <wcrtomb@plt+0x12c28>
  415bc4:	ldr	w0, [x28, #44]
  415bc8:	mov	x2, x21
  415bcc:	add	x1, x28, #0x48
  415bd0:	mov	w3, #0x0                   	// #0
  415bd4:	bl	414fd8 <wcrtomb@plt+0x126b8>
  415bd8:	ldr	w0, [x28, #72]
  415bdc:	mov	x2, x21
  415be0:	mov	x1, x19
  415be4:	bl	415468 <wcrtomb@plt+0x12b48>
  415be8:	tst	w0, #0xff
  415bec:	b.ne	4159b0 <wcrtomb@plt+0x13090>  // b.any
  415bf0:	bl	402890 <__errno_location@plt>
  415bf4:	mov	x23, #0x0                   	// #0
  415bf8:	mov	w1, #0xc                   	// #12
  415bfc:	str	w1, [x0]
  415c00:	b	415b48 <wcrtomb@plt+0x13228>
  415c04:	ldr	w1, [x21, #140]
  415c08:	cmp	w1, #0x2
  415c0c:	b.ne	4159ec <wcrtomb@plt+0x130cc>  // b.any
  415c10:	mov	w1, w0
  415c14:	mov	x0, x21
  415c18:	bl	414db8 <wcrtomb@plt+0x12498>
  415c1c:	cbnz	w0, 415e4c <wcrtomb@plt+0x1352c>
  415c20:	ldr	w0, [sp, #188]
  415c24:	b	4159ec <wcrtomb@plt+0x130cc>
  415c28:	ldr	x0, [sp, #104]
  415c2c:	ldr	w0, [x0]
  415c30:	cbz	w0, 415c54 <wcrtomb@plt+0x13334>
  415c34:	ldr	x1, [sp, #160]
  415c38:	str	w0, [x21, #64]
  415c3c:	orr	x2, x1, x19
  415c40:	mov	w1, #0x4                   	// #4
  415c44:	cmp	x2, #0x0
  415c48:	mov	w2, #0x7                   	// #7
  415c4c:	csel	w1, w1, w2, eq  // eq = none
  415c50:	strh	w1, [x21, #108]
  415c54:	ldr	x0, [x21, #24]
  415c58:	cbz	x0, 4157c0 <wcrtomb@plt+0x12ea0>
  415c5c:	bl	402570 <closedir@plt>
  415c60:	str	xzr, [x21, #24]
  415c64:	ldr	w0, [sp, #152]
  415c68:	cbz	w0, 4157c8 <wcrtomb@plt+0x12ea8>
  415c6c:	ldr	x0, [x28, #8]
  415c70:	ldr	x2, [x28, #32]
  415c74:	cbz	x0, 415ca4 <wcrtomb@plt+0x13384>
  415c78:	ldr	x1, [x0, #48]
  415c7c:	add	x3, x0, #0xf8
  415c80:	cmp	x1, x3
  415c84:	b.eq	415c98 <wcrtomb@plt+0x13378>  // b.none
  415c88:	ldr	x3, [x0, #56]
  415c8c:	sub	x1, x1, x3
  415c90:	add	x1, x2, x1
  415c94:	str	x1, [x0, #48]
  415c98:	str	x2, [x0, #56]
  415c9c:	ldr	x0, [x0, #16]
  415ca0:	cbnz	x0, 415c78 <wcrtomb@plt+0x13358>
  415ca4:	ldr	x1, [x23, #88]
  415ca8:	mov	x0, x23
  415cac:	tbz	x1, #63, 415cc0 <wcrtomb@plt+0x133a0>
  415cb0:	b	4157c8 <wcrtomb@plt+0x12ea8>
  415cb4:	mov	x0, x1
  415cb8:	ldr	x1, [x0, #88]
  415cbc:	tbnz	x1, #63, 4157c8 <wcrtomb@plt+0x12ea8>
  415cc0:	ldr	x1, [x0, #48]
  415cc4:	add	x3, x0, #0xf8
  415cc8:	cmp	x1, x3
  415ccc:	b.eq	415ce0 <wcrtomb@plt+0x133c0>  // b.none
  415cd0:	ldr	x3, [x0, #56]
  415cd4:	sub	x1, x1, x3
  415cd8:	add	x1, x2, x1
  415cdc:	str	x1, [x0, #48]
  415ce0:	ldr	x1, [x0, #16]
  415ce4:	str	x2, [x0, #56]
  415ce8:	cbnz	x1, 415cb4 <wcrtomb@plt+0x13394>
  415cec:	ldr	x0, [x0, #8]
  415cf0:	b	415cb8 <wcrtomb@plt+0x13398>
  415cf4:	adrp	x0, 414000 <wcrtomb@plt+0x116e0>
  415cf8:	add	x0, x0, #0xa70
  415cfc:	str	x0, [x28, #64]
  415d00:	mov	x2, x19
  415d04:	mov	x1, x23
  415d08:	mov	x0, x28
  415d0c:	bl	414a98 <wcrtomb@plt+0x12178>
  415d10:	mov	x23, x0
  415d14:	ldp	x25, x26, [sp, #64]
  415d18:	str	xzr, [x28, #64]
  415d1c:	mov	x0, x23
  415d20:	ldp	x19, x20, [sp, #16]
  415d24:	ldp	x21, x22, [sp, #32]
  415d28:	ldp	x23, x24, [sp, #48]
  415d2c:	ldp	x27, x28, [sp, #80]
  415d30:	ldp	x29, x30, [sp], #192
  415d34:	ret
  415d38:	mov	x0, #0x86a0                	// #34464
  415d3c:	movk	x0, #0x1, lsl #16
  415d40:	str	x0, [sp, #128]
  415d44:	mov	w0, #0x1                   	// #1
  415d48:	str	w0, [sp, #172]
  415d4c:	ldr	w0, [x28, #72]
  415d50:	b	415634 <wcrtomb@plt+0x12d14>
  415d54:	ldr	w0, [x28, #72]
  415d58:	str	wzr, [sp, #172]
  415d5c:	b	415634 <wcrtomb@plt+0x12d14>
  415d60:	ldr	w0, [x28, #44]
  415d64:	mov	x2, x21
  415d68:	add	x1, x28, #0x48
  415d6c:	mov	w3, #0x0                   	// #0
  415d70:	stp	x25, x26, [sp, #64]
  415d74:	bl	414fd8 <wcrtomb@plt+0x126b8>
  415d78:	strh	w0, [x21, #108]
  415d7c:	b	4159b4 <wcrtomb@plt+0x13094>
  415d80:	ldr	x1, [x21, #8]
  415d84:	mov	x0, x28
  415d88:	adrp	x3, 427000 <_obstack_memory_used@@Base+0xff38>
  415d8c:	mov	w2, #0xffffffff            	// #-1
  415d90:	add	x3, x3, #0x258
  415d94:	bl	415238 <wcrtomb@plt+0x12918>
  415d98:	cmp	w0, #0x0
  415d9c:	cset	w0, ne  // ne = any
  415da0:	cbz	w0, 415ad0 <wcrtomb@plt+0x131b0>
  415da4:	b	415e24 <wcrtomb@plt+0x13504>
  415da8:	mov	w2, w0
  415dac:	mov	x1, x21
  415db0:	mov	x0, x28
  415db4:	mov	x3, #0x0                   	// #0
  415db8:	bl	415238 <wcrtomb@plt+0x12918>
  415dbc:	cbnz	w0, 415a08 <wcrtomb@plt+0x130e8>
  415dc0:	b	415d44 <wcrtomb@plt+0x13424>
  415dc4:	mov	w2, #0x3                   	// #3
  415dc8:	mov	w1, #0x406                 	// #1030
  415dcc:	bl	423e98 <_obstack_memory_used@@Base+0xcdd0>
  415dd0:	str	w0, [sp, #188]
  415dd4:	b	415a04 <wcrtomb@plt+0x130e4>
  415dd8:	ldr	x0, [x21, #24]
  415ddc:	bl	402570 <closedir@plt>
  415de0:	str	xzr, [x21, #24]
  415de4:	ldr	w0, [sp, #156]
  415de8:	cmp	w0, #0x3
  415dec:	b.eq	415e08 <wcrtomb@plt+0x134e8>  // b.none
  415df0:	mov	x23, #0x0                   	// #0
  415df4:	b	415b48 <wcrtomb@plt+0x13228>
  415df8:	mov	w0, w1
  415dfc:	bl	402580 <close@plt>
  415e00:	ldr	w0, [x28, #72]
  415e04:	b	415a48 <wcrtomb@plt+0x13128>
  415e08:	mov	w0, #0x4                   	// #4
  415e0c:	strh	w0, [x21, #108]
  415e10:	mov	x23, #0x0                   	// #0
  415e14:	bl	402890 <__errno_location@plt>
  415e18:	ldr	w0, [x0]
  415e1c:	str	w0, [x21, #64]
  415e20:	b	415b48 <wcrtomb@plt+0x13228>
  415e24:	ldr	w1, [x28, #72]
  415e28:	mov	w0, #0x7                   	// #7
  415e2c:	strh	w0, [x21, #108]
  415e30:	mov	x0, x23
  415e34:	orr	w1, w1, #0x2000
  415e38:	str	w1, [x28, #72]
  415e3c:	mov	x23, #0x0                   	// #0
  415e40:	bl	414c18 <wcrtomb@plt+0x122f8>
  415e44:	ldp	x25, x26, [sp, #64]
  415e48:	b	415b48 <wcrtomb@plt+0x13228>
  415e4c:	ldr	w0, [sp, #156]
  415e50:	cmp	w0, #0x3
  415e54:	b.ne	415d54 <wcrtomb@plt+0x13434>  // b.any
  415e58:	ldr	w0, [sp, #188]
  415e5c:	mov	w20, #0x0                   	// #0
  415e60:	mov	w19, #0x1                   	// #1
  415e64:	b	4159fc <wcrtomb@plt+0x130dc>
  415e68:	ldr	w0, [sp, #156]
  415e6c:	cmp	w0, #0x3
  415e70:	b.ne	415df0 <wcrtomb@plt+0x134d0>  // b.any
  415e74:	mov	w0, #0x4                   	// #4
  415e78:	strh	w0, [x21, #108]
  415e7c:	bl	402890 <__errno_location@plt>
  415e80:	ldr	w0, [x0]
  415e84:	str	w0, [x21, #64]
  415e88:	b	415b48 <wcrtomb@plt+0x13228>
  415e8c:	ldrh	w0, [x21, #108]
  415e90:	cmp	w0, #0x4
  415e94:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  415e98:	b.eq	415ae0 <wcrtomb@plt+0x131c0>  // b.none
  415e9c:	mov	w0, #0x6                   	// #6
  415ea0:	strh	w0, [x21, #108]
  415ea4:	b	415ae0 <wcrtomb@plt+0x131c0>
  415ea8:	ldr	w1, [x28, #72]
  415eac:	tbz	w1, #2, 415a98 <wcrtomb@plt+0x13178>
  415eb0:	mov	x23, #0x0                   	// #0
  415eb4:	mov	x19, #0x0                   	// #0
  415eb8:	str	wzr, [sp, #168]
  415ebc:	b	4157e0 <wcrtomb@plt+0x12ec0>
  415ec0:	mov	x0, x27
  415ec4:	bl	4026b0 <free@plt>
  415ec8:	mov	x0, x23
  415ecc:	bl	414c18 <wcrtomb@plt+0x122f8>
  415ed0:	ldr	x0, [x21, #24]
  415ed4:	mov	x23, #0x0                   	// #0
  415ed8:	bl	402570 <closedir@plt>
  415edc:	mov	w1, #0x7                   	// #7
  415ee0:	ldr	w0, [x28, #72]
  415ee4:	ldp	x25, x26, [sp, #64]
  415ee8:	strh	w1, [x21, #108]
  415eec:	ldr	x1, [sp, #104]
  415ef0:	str	xzr, [x21, #24]
  415ef4:	orr	w0, w0, #0x2000
  415ef8:	str	w0, [x28, #72]
  415efc:	mov	w0, #0x24                  	// #36
  415f00:	str	w0, [x1]
  415f04:	b	415b48 <wcrtomb@plt+0x13228>
  415f08:	stp	x29, x30, [sp, #-112]!
  415f0c:	tst	w1, #0xfffff000
  415f10:	mov	x29, sp
  415f14:	stp	x19, x20, [sp, #16]
  415f18:	b.ne	41624c <wcrtomb@plt+0x1392c>  // b.any
  415f1c:	stp	x23, x24, [sp, #48]
  415f20:	mov	x23, x0
  415f24:	mov	w0, #0x204                 	// #516
  415f28:	and	w0, w1, w0
  415f2c:	mov	w20, w1
  415f30:	cmp	w0, #0x204
  415f34:	b.eq	41620c <wcrtomb@plt+0x138ec>  // b.none
  415f38:	mov	w0, #0x12                  	// #18
  415f3c:	tst	w1, w0
  415f40:	b.eq	41620c <wcrtomb@plt+0x138ec>  // b.none
  415f44:	mov	x24, x2
  415f48:	mov	x1, #0x80                  	// #128
  415f4c:	mov	x0, #0x1                   	// #1
  415f50:	bl	402520 <calloc@plt>
  415f54:	mov	x19, x0
  415f58:	cbz	x0, 41629c <wcrtomb@plt+0x1397c>
  415f5c:	and	w1, w20, #0xfffffdff
  415f60:	tst	x20, #0x2
  415f64:	ldr	x0, [x23]
  415f68:	orr	w1, w1, #0x4
  415f6c:	stp	x21, x22, [sp, #32]
  415f70:	csel	w1, w20, w1, eq  // eq = none
  415f74:	mov	w2, #0xffffff9c            	// #-100
  415f78:	stp	x25, x26, [sp, #64]
  415f7c:	str	w2, [x19, #44]
  415f80:	str	x24, [x19, #64]
  415f84:	str	w1, [x19, #72]
  415f88:	cbz	x0, 416244 <wcrtomb@plt+0x13924>
  415f8c:	mov	x22, x23
  415f90:	mov	x21, #0x0                   	// #0
  415f94:	nop
  415f98:	bl	402300 <strlen@plt>
  415f9c:	mov	x3, x0
  415fa0:	ldr	x0, [x22, #8]!
  415fa4:	cmp	x21, x3
  415fa8:	csel	x21, x21, x3, cs  // cs = hs, nlast
  415fac:	cbnz	x0, 415f98 <wcrtomb@plt+0x13678>
  415fb0:	add	x2, x21, #0x1
  415fb4:	mov	x0, #0x1000                	// #4096
  415fb8:	cmp	x2, x0
  415fbc:	csel	x2, x2, x0, cs  // cs = hs, nlast
  415fc0:	add	x1, x19, #0x30
  415fc4:	add	x0, x19, #0x20
  415fc8:	bl	414f48 <wcrtomb@plt+0x12628>
  415fcc:	ands	w25, w0, #0xff
  415fd0:	b.eq	4161e4 <wcrtomb@plt+0x138c4>  // b.none
  415fd4:	ldr	x26, [x23]
  415fd8:	stp	x27, x28, [sp, #80]
  415fdc:	cbz	x26, 416230 <wcrtomb@plt+0x13910>
  415fe0:	mov	x0, x19
  415fe4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  415fe8:	mov	x2, #0x0                   	// #0
  415fec:	add	x1, x1, #0x9e8
  415ff0:	bl	414b98 <wcrtomb@plt+0x12278>
  415ff4:	mov	x26, x0
  415ff8:	cbz	x0, 4161d8 <wcrtomb@plt+0x138b8>
  415ffc:	mov	x0, #0xffffffffffffffff    	// #-1
  416000:	ldr	x27, [x23]
  416004:	str	x0, [x26, #88]
  416008:	str	w0, [x26, #104]
  41600c:	cbz	x24, 416018 <wcrtomb@plt+0x136f8>
  416010:	ldr	w25, [x19, #72]
  416014:	ubfx	x25, x25, #10, #1
  416018:	cbz	x27, 41626c <wcrtomb@plt+0x1394c>
  41601c:	eor	x20, x20, #0x800
  416020:	add	x0, x19, #0x48
  416024:	mov	x21, #0x0                   	// #0
  416028:	mov	x22, #0x0                   	// #0
  41602c:	ubfx	w20, w20, #11, #1
  416030:	mov	w28, #0xb                   	// #11
  416034:	stp	xzr, x0, [sp, #96]
  416038:	b	416060 <wcrtomb@plt+0x13740>
  41603c:	mov	x0, #0x2                   	// #2
  416040:	strh	w28, [x27, #108]
  416044:	str	x0, [x27, #168]
  416048:	cbz	x24, 4161b4 <wcrtomb@plt+0x13894>
  41604c:	str	x22, [x27, #16]
  416050:	mov	x22, x27
  416054:	add	x21, x21, #0x1
  416058:	ldr	x27, [x23, x21, lsl #3]
  41605c:	cbz	x27, 4160e0 <wcrtomb@plt+0x137c0>
  416060:	mov	x0, x27
  416064:	bl	402300 <strlen@plt>
  416068:	cmp	w20, #0x0
  41606c:	mov	x2, x0
  416070:	ccmp	x0, #0x2, #0x0, ne  // ne = any
  416074:	b.hi	416184 <wcrtomb@plt+0x13864>  // b.pmore
  416078:	mov	x1, x27
  41607c:	mov	x0, x19
  416080:	bl	414b98 <wcrtomb@plt+0x12278>
  416084:	mov	x27, x0
  416088:	cbz	x0, 4161c8 <wcrtomb@plt+0x138a8>
  41608c:	add	x0, x0, #0xf8
  416090:	str	x26, [x27, #8]
  416094:	str	x0, [x27, #48]
  416098:	cmp	x22, #0x0
  41609c:	str	xzr, [x27, #88]
  4160a0:	ccmp	w25, #0x0, #0x4, ne  // ne = any
  4160a4:	b.ne	41603c <wcrtomb@plt+0x1371c>  // b.any
  4160a8:	ldr	w0, [x19, #44]
  4160ac:	mov	x2, x27
  4160b0:	ldr	x1, [sp, #104]
  4160b4:	mov	w3, #0x0                   	// #0
  4160b8:	bl	414fd8 <wcrtomb@plt+0x126b8>
  4160bc:	strh	w0, [x27, #108]
  4160c0:	cbnz	x24, 41604c <wcrtomb@plt+0x1372c>
  4160c4:	str	xzr, [x27, #16]
  4160c8:	cbnz	x22, 4161b8 <wcrtomb@plt+0x13898>
  4160cc:	add	x21, x21, #0x1
  4160d0:	mov	x22, x27
  4160d4:	str	x27, [sp, #96]
  4160d8:	ldr	x27, [x23, x21, lsl #3]
  4160dc:	cbnz	x27, 416060 <wcrtomb@plt+0x13740>
  4160e0:	cmp	x24, #0x0
  4160e4:	ccmp	x21, #0x1, #0x0, ne  // ne = any
  4160e8:	b.ls	416100 <wcrtomb@plt+0x137e0>  // b.plast
  4160ec:	mov	x1, x22
  4160f0:	mov	x2, x21
  4160f4:	mov	x0, x19
  4160f8:	bl	414a98 <wcrtomb@plt+0x12178>
  4160fc:	mov	x22, x0
  416100:	mov	x2, #0x0                   	// #0
  416104:	mov	x0, x19
  416108:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41610c:	add	x1, x1, #0x9e8
  416110:	bl	414b98 <wcrtomb@plt+0x12278>
  416114:	str	x0, [x19]
  416118:	mov	x2, x0
  41611c:	cbz	x0, 4161c8 <wcrtomb@plt+0x138a8>
  416120:	ldr	w0, [x19, #72]
  416124:	mov	w3, #0x9                   	// #9
  416128:	mov	x1, #0x1                   	// #1
  41612c:	str	x22, [x2, #16]
  416130:	str	x1, [x2, #88]
  416134:	add	x1, x19, #0x58
  416138:	strh	w3, [x2, #108]
  41613c:	bl	415180 <wcrtomb@plt+0x12860>
  416140:	tst	w0, #0xff
  416144:	b.eq	4161c8 <wcrtomb@plt+0x138a8>  // b.none
  416148:	ldr	w1, [x19, #72]
  41614c:	mov	w0, #0x204                 	// #516
  416150:	tst	w1, w0
  416154:	b.eq	416274 <wcrtomb@plt+0x13954>  // b.none
  416158:	add	x0, x19, #0x60
  41615c:	mov	w1, #0xffffffff            	// #-1
  416160:	bl	423c58 <_obstack_memory_used@@Base+0xcb90>
  416164:	mov	x0, x19
  416168:	ldp	x19, x20, [sp, #16]
  41616c:	ldp	x21, x22, [sp, #32]
  416170:	ldp	x23, x24, [sp, #48]
  416174:	ldp	x25, x26, [sp, #64]
  416178:	ldp	x27, x28, [sp, #80]
  41617c:	ldp	x29, x30, [sp], #112
  416180:	ret
  416184:	add	x0, x27, x0
  416188:	sub	x3, x27, #0x2
  41618c:	ldurb	w0, [x0, #-1]
  416190:	cmp	w0, #0x2f
  416194:	b.ne	416078 <wcrtomb@plt+0x13758>  // b.any
  416198:	ldrb	w0, [x3, x2]
  41619c:	cmp	w0, #0x2f
  4161a0:	b.ne	416078 <wcrtomb@plt+0x13758>  // b.any
  4161a4:	sub	x2, x2, #0x1
  4161a8:	cmp	x2, #0x1
  4161ac:	b.ne	416198 <wcrtomb@plt+0x13878>  // b.any
  4161b0:	b	416078 <wcrtomb@plt+0x13758>
  4161b4:	str	xzr, [x27, #16]
  4161b8:	ldr	x0, [sp, #96]
  4161bc:	str	x27, [sp, #96]
  4161c0:	str	x27, [x0, #16]
  4161c4:	b	416054 <wcrtomb@plt+0x13734>
  4161c8:	mov	x0, x22
  4161cc:	bl	414c18 <wcrtomb@plt+0x122f8>
  4161d0:	mov	x0, x26
  4161d4:	bl	4026b0 <free@plt>
  4161d8:	ldr	x0, [x19, #32]
  4161dc:	bl	4026b0 <free@plt>
  4161e0:	ldp	x27, x28, [sp, #80]
  4161e4:	mov	x0, x19
  4161e8:	bl	4026b0 <free@plt>
  4161ec:	mov	x19, #0x0                   	// #0
  4161f0:	ldp	x21, x22, [sp, #32]
  4161f4:	ldp	x23, x24, [sp, #48]
  4161f8:	ldp	x25, x26, [sp, #64]
  4161fc:	mov	x0, x19
  416200:	ldp	x19, x20, [sp, #16]
  416204:	ldp	x29, x30, [sp], #112
  416208:	ret
  41620c:	bl	402890 <__errno_location@plt>
  416210:	mov	x19, #0x0                   	// #0
  416214:	mov	w1, #0x16                  	// #22
  416218:	ldp	x23, x24, [sp, #48]
  41621c:	str	w1, [x0]
  416220:	mov	x0, x19
  416224:	ldp	x19, x20, [sp, #16]
  416228:	ldp	x29, x30, [sp], #112
  41622c:	ret
  416230:	cbz	x24, 41626c <wcrtomb@plt+0x1394c>
  416234:	ldr	w25, [x19, #72]
  416238:	mov	x27, #0x0                   	// #0
  41623c:	ubfx	x25, x25, #10, #1
  416240:	b	416018 <wcrtomb@plt+0x136f8>
  416244:	mov	x2, #0x1000                	// #4096
  416248:	b	415fc0 <wcrtomb@plt+0x136a0>
  41624c:	bl	402890 <__errno_location@plt>
  416250:	mov	x19, #0x0                   	// #0
  416254:	mov	w1, #0x16                  	// #22
  416258:	str	w1, [x0]
  41625c:	mov	x0, x19
  416260:	ldp	x19, x20, [sp, #16]
  416264:	ldp	x29, x30, [sp], #112
  416268:	ret
  41626c:	mov	x22, #0x0                   	// #0
  416270:	b	416100 <wcrtomb@plt+0x137e0>
  416274:	ldr	w0, [x19, #44]
  416278:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xdf38>
  41627c:	add	x2, x2, #0x4f0
  416280:	bl	415208 <wcrtomb@plt+0x128e8>
  416284:	str	w0, [x19, #40]
  416288:	tbz	w0, #31, 416158 <wcrtomb@plt+0x13838>
  41628c:	ldr	w0, [x19, #72]
  416290:	orr	w0, w0, #0x4
  416294:	str	w0, [x19, #72]
  416298:	b	416158 <wcrtomb@plt+0x13838>
  41629c:	ldp	x23, x24, [sp, #48]
  4162a0:	b	4161fc <wcrtomb@plt+0x138dc>
  4162a4:	nop
  4162a8:	stp	x29, x30, [sp, #-48]!
  4162ac:	mov	x29, sp
  4162b0:	ldr	x1, [x0]
  4162b4:	stp	x19, x20, [sp, #16]
  4162b8:	mov	x20, x0
  4162bc:	cbz	x1, 416304 <wcrtomb@plt+0x139e4>
  4162c0:	ldr	x0, [x1, #88]
  4162c4:	tbz	x0, #63, 4162dc <wcrtomb@plt+0x139bc>
  4162c8:	b	4163f8 <wcrtomb@plt+0x13ad8>
  4162cc:	bl	4026b0 <free@plt>
  4162d0:	ldr	x0, [x19, #88]
  4162d4:	mov	x1, x19
  4162d8:	tbnz	x0, #63, 4162fc <wcrtomb@plt+0x139dc>
  4162dc:	ldr	x19, [x1, #16]
  4162e0:	mov	x0, x1
  4162e4:	cbnz	x19, 4162cc <wcrtomb@plt+0x139ac>
  4162e8:	ldr	x19, [x1, #8]
  4162ec:	bl	4026b0 <free@plt>
  4162f0:	mov	x1, x19
  4162f4:	ldr	x0, [x19, #88]
  4162f8:	tbz	x0, #63, 4162dc <wcrtomb@plt+0x139bc>
  4162fc:	mov	x0, x19
  416300:	bl	4026b0 <free@plt>
  416304:	ldr	x0, [x20, #8]
  416308:	cbz	x0, 416310 <wcrtomb@plt+0x139f0>
  41630c:	bl	414c18 <wcrtomb@plt+0x122f8>
  416310:	ldr	x0, [x20, #16]
  416314:	bl	4026b0 <free@plt>
  416318:	ldr	x0, [x20, #32]
  41631c:	bl	4026b0 <free@plt>
  416320:	ldr	w0, [x20, #72]
  416324:	tbz	w0, #9, 416380 <wcrtomb@plt+0x13a60>
  416328:	ldr	w0, [x20, #44]
  41632c:	tbz	w0, #31, 4163b4 <wcrtomb@plt+0x13a94>
  416330:	mov	w19, #0x0                   	// #0
  416334:	add	x0, x20, #0x60
  416338:	bl	414c60 <wcrtomb@plt+0x12340>
  41633c:	ldr	x0, [x20, #80]
  416340:	cbz	x0, 416348 <wcrtomb@plt+0x13a28>
  416344:	bl	4112c8 <wcrtomb@plt+0xe9a8>
  416348:	ldr	w2, [x20, #72]
  41634c:	mov	w1, #0x102                 	// #258
  416350:	ldr	x0, [x20, #88]
  416354:	tst	w2, w1
  416358:	b.eq	4163c8 <wcrtomb@plt+0x13aa8>  // b.none
  41635c:	cbz	x0, 416364 <wcrtomb@plt+0x13a44>
  416360:	bl	4112c8 <wcrtomb@plt+0xe9a8>
  416364:	mov	x0, x20
  416368:	bl	4026b0 <free@plt>
  41636c:	cbnz	w19, 416408 <wcrtomb@plt+0x13ae8>
  416370:	mov	w0, w19
  416374:	ldp	x19, x20, [sp, #16]
  416378:	ldp	x29, x30, [sp], #48
  41637c:	ret
  416380:	tbnz	w0, #2, 416330 <wcrtomb@plt+0x13a10>
  416384:	ldr	w0, [x20, #40]
  416388:	str	x21, [sp, #32]
  41638c:	bl	402340 <fchdir@plt>
  416390:	cbnz	w0, 4163d0 <wcrtomb@plt+0x13ab0>
  416394:	ldr	w0, [x20, #40]
  416398:	bl	402580 <close@plt>
  41639c:	cbz	w0, 416400 <wcrtomb@plt+0x13ae0>
  4163a0:	bl	402890 <__errno_location@plt>
  4163a4:	mov	x21, x0
  4163a8:	ldr	w19, [x21]
  4163ac:	ldr	x21, [sp, #32]
  4163b0:	b	416334 <wcrtomb@plt+0x13a14>
  4163b4:	bl	402580 <close@plt>
  4163b8:	cbz	w0, 416330 <wcrtomb@plt+0x13a10>
  4163bc:	bl	402890 <__errno_location@plt>
  4163c0:	ldr	w19, [x0]
  4163c4:	b	416334 <wcrtomb@plt+0x13a14>
  4163c8:	bl	4026b0 <free@plt>
  4163cc:	b	416364 <wcrtomb@plt+0x13a44>
  4163d0:	bl	402890 <__errno_location@plt>
  4163d4:	mov	x21, x0
  4163d8:	ldr	w0, [x20, #40]
  4163dc:	ldr	w19, [x21]
  4163e0:	bl	402580 <close@plt>
  4163e4:	cmp	w19, #0x0
  4163e8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  4163ec:	b.ne	4163a8 <wcrtomb@plt+0x13a88>  // b.any
  4163f0:	ldr	x21, [sp, #32]
  4163f4:	b	416334 <wcrtomb@plt+0x13a14>
  4163f8:	mov	x19, x1
  4163fc:	b	4162fc <wcrtomb@plt+0x139dc>
  416400:	ldr	x21, [sp, #32]
  416404:	b	416330 <wcrtomb@plt+0x13a10>
  416408:	bl	402890 <__errno_location@plt>
  41640c:	str	w19, [x0]
  416410:	mov	w19, #0xffffffff            	// #-1
  416414:	b	416370 <wcrtomb@plt+0x13a50>
  416418:	stp	x29, x30, [sp, #-48]!
  41641c:	mov	x29, sp
  416420:	stp	x19, x20, [sp, #16]
  416424:	ldr	x19, [x0]
  416428:	cbz	x19, 416628 <wcrtomb@plt+0x13d08>
  41642c:	ldr	w1, [x0, #72]
  416430:	mov	x20, x0
  416434:	tbnz	w1, #13, 416628 <wcrtomb@plt+0x13d08>
  416438:	ldrh	w0, [x19, #112]
  41643c:	mov	w2, #0x3                   	// #3
  416440:	strh	w2, [x19, #112]
  416444:	cmp	w0, #0x1
  416448:	b.eq	416804 <wcrtomb@plt+0x13ee4>  // b.none
  41644c:	ldrh	w2, [x19, #108]
  416450:	cmp	w0, #0x2
  416454:	b.eq	416548 <wcrtomb@plt+0x13c28>  // b.none
  416458:	cmp	w2, #0x1
  41645c:	b.eq	41663c <wcrtomb@plt+0x13d1c>  // b.none
  416460:	stp	x21, x22, [sp, #32]
  416464:	b	416488 <wcrtomb@plt+0x13b68>
  416468:	str	x19, [x20]
  41646c:	mov	x0, x21
  416470:	bl	4026b0 <free@plt>
  416474:	ldr	x0, [x19, #88]
  416478:	cbz	x0, 416678 <wcrtomb@plt+0x13d58>
  41647c:	ldrh	w0, [x19, #112]
  416480:	cmp	w0, #0x4
  416484:	b.ne	416718 <wcrtomb@plt+0x13df8>  // b.any
  416488:	mov	x21, x19
  41648c:	ldr	x19, [x19, #16]
  416490:	cbnz	x19, 416468 <wcrtomb@plt+0x13b48>
  416494:	ldr	x22, [x21, #8]
  416498:	ldr	x0, [x22, #24]
  41649c:	cbnz	x0, 41692c <wcrtomb@plt+0x1400c>
  4164a0:	str	x22, [x20]
  4164a4:	mov	x0, x21
  4164a8:	bl	4026b0 <free@plt>
  4164ac:	ldr	x0, [x22, #88]
  4164b0:	cmn	x0, #0x1
  4164b4:	b.eq	4168b0 <wcrtomb@plt+0x13f90>  // b.none
  4164b8:	ldrh	w0, [x22, #108]
  4164bc:	cmp	w0, #0xb
  4164c0:	b.eq	416800 <wcrtomb@plt+0x13ee0>  // b.none
  4164c4:	ldr	x1, [x20, #32]
  4164c8:	ldr	x0, [x22, #72]
  4164cc:	strb	wzr, [x1, x0]
  4164d0:	ldr	x0, [x22, #88]
  4164d4:	cbz	x0, 41685c <wcrtomb@plt+0x13f3c>
  4164d8:	ldrh	w0, [x22, #110]
  4164dc:	tbz	w0, #1, 4165dc <wcrtomb@plt+0x13cbc>
  4164e0:	ldr	w1, [x20, #72]
  4164e4:	ldr	w0, [x22, #68]
  4164e8:	tbnz	w1, #2, 416504 <wcrtomb@plt+0x13be4>
  4164ec:	tbz	w1, #9, 4169fc <wcrtomb@plt+0x140dc>
  4164f0:	mov	w1, w0
  4164f4:	mov	w2, #0x1                   	// #1
  4164f8:	mov	x0, x20
  4164fc:	bl	414e58 <wcrtomb@plt+0x12538>
  416500:	ldr	w0, [x22, #68]
  416504:	bl	402580 <close@plt>
  416508:	ldr	w0, [x20, #72]
  41650c:	ldrh	w1, [x22, #108]
  416510:	cmp	w1, #0x2
  416514:	b.eq	416538 <wcrtomb@plt+0x13c18>  // b.none
  416518:	ldr	w1, [x22, #64]
  41651c:	cbnz	w1, 4168cc <wcrtomb@plt+0x13fac>
  416520:	mov	w1, #0x6                   	// #6
  416524:	strh	w1, [x22, #108]
  416528:	mov	x2, x22
  41652c:	add	x1, x20, #0x58
  416530:	bl	415548 <wcrtomb@plt+0x12c28>
  416534:	ldr	w0, [x20, #72]
  416538:	tbnz	w0, #13, 416620 <wcrtomb@plt+0x13d00>
  41653c:	mov	x19, x22
  416540:	ldp	x21, x22, [sp, #32]
  416544:	b	41662c <wcrtomb@plt+0x13d0c>
  416548:	sub	w0, w2, #0xc
  41654c:	and	w0, w0, #0xffff
  416550:	cmp	w0, #0x1
  416554:	b.ls	4167b8 <wcrtomb@plt+0x13e98>  // b.plast
  416558:	cmp	w2, #0x1
  41655c:	b.ne	416460 <wcrtomb@plt+0x13b40>  // b.any
  416560:	tbz	w1, #6, 416574 <wcrtomb@plt+0x13c54>
  416564:	ldr	x0, [x20, #24]
  416568:	ldr	x2, [x19, #120]
  41656c:	cmp	x2, x0
  416570:	b.ne	416644 <wcrtomb@plt+0x13d24>  // b.any
  416574:	ldr	x0, [x20, #8]
  416578:	cbz	x0, 416830 <wcrtomb@plt+0x13f10>
  41657c:	tbnz	w1, #12, 416820 <wcrtomb@plt+0x13f00>
  416580:	ldr	x3, [x19, #48]
  416584:	mov	x1, x19
  416588:	mov	x0, x20
  41658c:	mov	w2, #0xffffffff            	// #-1
  416590:	bl	415238 <wcrtomb@plt+0x12918>
  416594:	cbz	w0, 416850 <wcrtomb@plt+0x13f30>
  416598:	bl	402890 <__errno_location@plt>
  41659c:	ldr	w0, [x0]
  4165a0:	ldrh	w1, [x19, #110]
  4165a4:	str	w0, [x19, #64]
  4165a8:	orr	w1, w1, #0x1
  4165ac:	strh	w1, [x19, #110]
  4165b0:	ldr	x19, [x20, #8]
  4165b4:	cbz	x19, 4165d4 <wcrtomb@plt+0x13cb4>
  4165b8:	mov	x0, x19
  4165bc:	nop
  4165c0:	ldr	x1, [x0, #8]
  4165c4:	ldr	x1, [x1, #48]
  4165c8:	str	x1, [x0, #48]
  4165cc:	ldr	x0, [x0, #16]
  4165d0:	cbnz	x0, 4165c0 <wcrtomb@plt+0x13ca0>
  4165d4:	str	xzr, [x20, #8]
  4165d8:	b	416724 <wcrtomb@plt+0x13e04>
  4165dc:	tbnz	w0, #0, 416868 <wcrtomb@plt+0x13f48>
  4165e0:	ldr	x1, [x22, #8]
  4165e4:	adrp	x3, 427000 <_obstack_memory_used@@Base+0xff38>
  4165e8:	mov	x0, x20
  4165ec:	add	x3, x3, #0x258
  4165f0:	mov	w2, #0xffffffff            	// #-1
  4165f4:	bl	415238 <wcrtomb@plt+0x12918>
  4165f8:	cbz	w0, 416868 <wcrtomb@plt+0x13f48>
  4165fc:	bl	402890 <__errno_location@plt>
  416600:	ldr	w2, [x0]
  416604:	ldr	w1, [x20, #72]
  416608:	str	w2, [x22, #64]
  41660c:	orr	w0, w1, #0x2000
  416610:	ldrh	w1, [x22, #108]
  416614:	str	w0, [x20, #72]
  416618:	cmp	w1, #0x2
  41661c:	b.ne	416518 <wcrtomb@plt+0x13bf8>  // b.any
  416620:	ldp	x21, x22, [sp, #32]
  416624:	nop
  416628:	mov	x19, #0x0                   	// #0
  41662c:	mov	x0, x19
  416630:	ldp	x19, x20, [sp, #16]
  416634:	ldp	x29, x30, [sp], #48
  416638:	ret
  41663c:	cmp	w0, #0x4
  416640:	b.ne	416560 <wcrtomb@plt+0x13c40>  // b.any
  416644:	ldrh	w0, [x19, #110]
  416648:	tbnz	w0, #1, 416980 <wcrtomb@plt+0x14060>
  41664c:	ldr	x0, [x20, #8]
  416650:	cbz	x0, 41665c <wcrtomb@plt+0x13d3c>
  416654:	bl	414c18 <wcrtomb@plt+0x122f8>
  416658:	str	xzr, [x20, #8]
  41665c:	ldr	w0, [x20, #72]
  416660:	mov	w1, #0x6                   	// #6
  416664:	strh	w1, [x19, #108]
  416668:	mov	x2, x19
  41666c:	add	x1, x20, #0x58
  416670:	bl	415548 <wcrtomb@plt+0x12c28>
  416674:	b	41662c <wcrtomb@plt+0x13d0c>
  416678:	mov	x0, x20
  41667c:	bl	414ed8 <wcrtomb@plt+0x125b8>
  416680:	cbnz	w0, 416960 <wcrtomb@plt+0x14040>
  416684:	ldr	w2, [x20, #72]
  416688:	mov	w1, #0x102                 	// #258
  41668c:	ldr	x0, [x20, #88]
  416690:	tst	w2, w1
  416694:	b.eq	416978 <wcrtomb@plt+0x14058>  // b.none
  416698:	cbz	x0, 4166a0 <wcrtomb@plt+0x13d80>
  41669c:	bl	4112c8 <wcrtomb@plt+0xe9a8>
  4166a0:	ldr	x2, [x19, #96]
  4166a4:	add	x22, x19, #0xf8
  4166a8:	ldr	x0, [x20, #32]
  4166ac:	str	x2, [x19, #72]
  4166b0:	add	x2, x2, #0x1
  4166b4:	mov	x1, x22
  4166b8:	bl	4022c0 <memmove@plt>
  4166bc:	mov	x0, x22
  4166c0:	mov	w1, #0x2f                  	// #47
  4166c4:	bl	4025a0 <strrchr@plt>
  4166c8:	cbz	x0, 4166f8 <wcrtomb@plt+0x13dd8>
  4166cc:	cmp	x22, x0
  4166d0:	b.eq	416870 <wcrtomb@plt+0x13f50>  // b.none
  4166d4:	add	x21, x0, #0x1
  4166d8:	mov	x0, x21
  4166dc:	bl	402300 <strlen@plt>
  4166e0:	mov	x1, x21
  4166e4:	mov	x21, x0
  4166e8:	add	x2, x21, #0x1
  4166ec:	mov	x0, x22
  4166f0:	bl	4022c0 <memmove@plt>
  4166f4:	str	x21, [x19, #96]
  4166f8:	ldr	w0, [x20, #72]
  4166fc:	add	x1, x20, #0x58
  416700:	ldr	x2, [x20, #32]
  416704:	stp	x2, x2, [x19, #48]
  416708:	bl	415180 <wcrtomb@plt+0x12860>
  41670c:	ldrh	w0, [x19, #108]
  416710:	ldp	x21, x22, [sp, #32]
  416714:	b	416768 <wcrtomb@plt+0x13e48>
  416718:	cmp	w0, #0x2
  41671c:	b.eq	41698c <wcrtomb@plt+0x1406c>  // b.none
  416720:	ldp	x21, x22, [sp, #32]
  416724:	mov	w4, #0x2f                  	// #47
  416728:	ldr	x2, [x19, #8]
  41672c:	add	x1, x19, #0xf8
  416730:	ldr	x3, [x20, #32]
  416734:	ldr	x0, [x2, #72]
  416738:	ldr	x5, [x2, #56]
  41673c:	sub	x2, x0, #0x1
  416740:	ldrb	w5, [x5, x2]
  416744:	cmp	w5, #0x2f
  416748:	csel	x2, x2, x0, eq  // eq = none
  41674c:	add	x0, x3, x2
  416750:	add	x0, x0, #0x1
  416754:	strb	w4, [x3, x2]
  416758:	ldr	x2, [x19, #96]
  41675c:	add	x2, x2, #0x1
  416760:	bl	4022c0 <memmove@plt>
  416764:	ldrh	w0, [x19, #108]
  416768:	str	x19, [x20]
  41676c:	cmp	w0, #0xb
  416770:	b.eq	4167e8 <wcrtomb@plt+0x13ec8>  // b.none
  416774:	cmp	w0, #0x1
  416778:	b.ne	41662c <wcrtomb@plt+0x13d0c>  // b.any
  41677c:	ldr	x0, [x19, #88]
  416780:	cbnz	x0, 41678c <wcrtomb@plt+0x13e6c>
  416784:	ldr	x0, [x19, #120]
  416788:	str	x0, [x20, #24]
  41678c:	ldr	w0, [x20, #72]
  416790:	add	x1, x20, #0x58
  416794:	mov	x2, x19
  416798:	bl	415468 <wcrtomb@plt+0x12b48>
  41679c:	tst	w0, #0xff
  4167a0:	b.ne	41662c <wcrtomb@plt+0x13d0c>  // b.any
  4167a4:	bl	402890 <__errno_location@plt>
  4167a8:	mov	x19, #0x0                   	// #0
  4167ac:	mov	w1, #0xc                   	// #12
  4167b0:	str	w1, [x0]
  4167b4:	b	41662c <wcrtomb@plt+0x13d0c>
  4167b8:	ldr	w0, [x20, #44]
  4167bc:	mov	x2, x19
  4167c0:	add	x1, x20, #0x48
  4167c4:	mov	w3, #0x1                   	// #1
  4167c8:	bl	414fd8 <wcrtomb@plt+0x126b8>
  4167cc:	strh	w0, [x19, #108]
  4167d0:	and	w0, w0, #0xffff
  4167d4:	cmp	w0, #0x1
  4167d8:	b.eq	416a0c <wcrtomb@plt+0x140ec>  // b.none
  4167dc:	str	x19, [x20]
  4167e0:	cmp	w0, #0xb
  4167e4:	b.ne	41662c <wcrtomb@plt+0x13d0c>  // b.any
  4167e8:	ldr	x0, [x19, #168]
  4167ec:	cmp	x0, #0x2
  4167f0:	b.eq	4168d8 <wcrtomb@plt+0x13fb8>  // b.none
  4167f4:	cmp	x0, #0x1
  4167f8:	b.eq	41662c <wcrtomb@plt+0x13d0c>  // b.none
  4167fc:	stp	x21, x22, [sp, #32]
  416800:	bl	4025f0 <abort@plt>
  416804:	ldr	w0, [x20, #44]
  416808:	add	x1, x20, #0x48
  41680c:	mov	x2, x19
  416810:	mov	w3, #0x0                   	// #0
  416814:	bl	414fd8 <wcrtomb@plt+0x126b8>
  416818:	strh	w0, [x19, #108]
  41681c:	b	41662c <wcrtomb@plt+0x13d0c>
  416820:	and	w1, w1, #0xffffefff
  416824:	str	w1, [x20, #72]
  416828:	bl	414c18 <wcrtomb@plt+0x122f8>
  41682c:	str	xzr, [x20, #8]
  416830:	mov	x0, x20
  416834:	mov	w1, #0x3                   	// #3
  416838:	bl	4155d8 <wcrtomb@plt+0x12cb8>
  41683c:	str	x0, [x20, #8]
  416840:	cbz	x0, 41687c <wcrtomb@plt+0x13f5c>
  416844:	mov	x19, x0
  416848:	str	xzr, [x20, #8]
  41684c:	b	416724 <wcrtomb@plt+0x13e04>
  416850:	ldr	x19, [x20, #8]
  416854:	str	xzr, [x20, #8]
  416858:	b	416724 <wcrtomb@plt+0x13e04>
  41685c:	mov	x0, x20
  416860:	bl	414ed8 <wcrtomb@plt+0x125b8>
  416864:	cbnz	w0, 4165fc <wcrtomb@plt+0x13cdc>
  416868:	ldr	w0, [x20, #72]
  41686c:	b	41650c <wcrtomb@plt+0x13bec>
  416870:	ldrb	w1, [x22, #1]
  416874:	cbz	w1, 4166f8 <wcrtomb@plt+0x13dd8>
  416878:	b	4166d4 <wcrtomb@plt+0x13db4>
  41687c:	ldr	w0, [x20, #72]
  416880:	tbnz	w0, #13, 416628 <wcrtomb@plt+0x13d08>
  416884:	ldr	w1, [x19, #64]
  416888:	cbz	w1, 4168a0 <wcrtomb@plt+0x13f80>
  41688c:	ldrh	w1, [x19, #108]
  416890:	cmp	w1, #0x4
  416894:	b.eq	4168a0 <wcrtomb@plt+0x13f80>  // b.none
  416898:	mov	w1, #0x7                   	// #7
  41689c:	strh	w1, [x19, #108]
  4168a0:	add	x1, x20, #0x58
  4168a4:	mov	x2, x19
  4168a8:	bl	415548 <wcrtomb@plt+0x12c28>
  4168ac:	b	41662c <wcrtomb@plt+0x13d0c>
  4168b0:	mov	x0, x22
  4168b4:	bl	4026b0 <free@plt>
  4168b8:	bl	402890 <__errno_location@plt>
  4168bc:	ldp	x21, x22, [sp, #32]
  4168c0:	str	wzr, [x0]
  4168c4:	str	xzr, [x20]
  4168c8:	b	41662c <wcrtomb@plt+0x13d0c>
  4168cc:	mov	w1, #0x7                   	// #7
  4168d0:	strh	w1, [x22, #108]
  4168d4:	b	416538 <wcrtomb@plt+0x13c18>
  4168d8:	stp	x21, x22, [sp, #32]
  4168dc:	ldr	w0, [x20, #44]
  4168e0:	ldr	x21, [x19, #8]
  4168e4:	ldr	w1, [x21, #104]
  4168e8:	cbnz	w1, 4168fc <wcrtomb@plt+0x13fdc>
  4168ec:	ldr	w2, [x20, #72]
  4168f0:	and	w2, w2, #0x18
  4168f4:	cmp	w2, #0x18
  4168f8:	b.eq	416a5c <wcrtomb@plt+0x1413c>  // b.none
  4168fc:	add	x1, x20, #0x48
  416900:	mov	x2, x19
  416904:	mov	w3, #0x0                   	// #0
  416908:	bl	414fd8 <wcrtomb@plt+0x126b8>
  41690c:	ldr	w1, [x19, #136]
  416910:	strh	w0, [x19, #108]
  416914:	and	w0, w0, #0xffff
  416918:	and	w1, w1, #0xf000
  41691c:	cmp	w1, #0x4, lsl #12
  416920:	b.eq	4169d4 <wcrtomb@plt+0x140b4>  // b.none
  416924:	ldp	x21, x22, [sp, #32]
  416928:	b	416774 <wcrtomb@plt+0x13e54>
  41692c:	ldr	x3, [x20, #32]
  416930:	mov	w1, #0x3                   	// #3
  416934:	ldr	x2, [x22, #72]
  416938:	str	x22, [x20]
  41693c:	mov	x0, x20
  416940:	strb	wzr, [x3, x2]
  416944:	bl	4155d8 <wcrtomb@plt+0x12cb8>
  416948:	mov	x1, x0
  41694c:	cbnz	x0, 4169c0 <wcrtomb@plt+0x140a0>
  416950:	ldr	w0, [x20, #72]
  416954:	tbnz	w0, #13, 416620 <wcrtomb@plt+0x13d00>
  416958:	ldr	x22, [x21, #8]
  41695c:	b	4164a0 <wcrtomb@plt+0x13b80>
  416960:	ldr	w0, [x20, #72]
  416964:	mov	x19, #0x0                   	// #0
  416968:	ldp	x21, x22, [sp, #32]
  41696c:	orr	w0, w0, #0x2000
  416970:	str	w0, [x20, #72]
  416974:	b	41662c <wcrtomb@plt+0x13d0c>
  416978:	bl	4026b0 <free@plt>
  41697c:	b	4166a0 <wcrtomb@plt+0x13d80>
  416980:	ldr	w0, [x19, #68]
  416984:	bl	402580 <close@plt>
  416988:	b	41664c <wcrtomb@plt+0x13d2c>
  41698c:	ldr	w0, [x20, #44]
  416990:	mov	x2, x19
  416994:	add	x1, x20, #0x48
  416998:	mov	w3, #0x1                   	// #1
  41699c:	bl	414fd8 <wcrtomb@plt+0x126b8>
  4169a0:	strh	w0, [x19, #108]
  4169a4:	and	w0, w0, #0xffff
  4169a8:	cmp	w0, #0x1
  4169ac:	b.eq	416a1c <wcrtomb@plt+0x140fc>  // b.none
  4169b0:	mov	w0, #0x3                   	// #3
  4169b4:	strh	w0, [x19, #112]
  4169b8:	ldp	x21, x22, [sp, #32]
  4169bc:	b	416724 <wcrtomb@plt+0x13e04>
  4169c0:	mov	x0, x21
  4169c4:	mov	x19, x1
  4169c8:	bl	4026b0 <free@plt>
  4169cc:	ldp	x21, x22, [sp, #32]
  4169d0:	b	416724 <wcrtomb@plt+0x13e04>
  4169d4:	ldr	x1, [x19, #88]
  4169d8:	cbz	x1, 416a4c <wcrtomb@plt+0x1412c>
  4169dc:	ldr	w1, [x21, #104]
  4169e0:	sub	w1, w1, #0x1
  4169e4:	cmn	w1, #0x3
  4169e8:	b.ls	416ac4 <wcrtomb@plt+0x141a4>  // b.plast
  4169ec:	cmp	w0, #0x1
  4169f0:	ldp	x21, x22, [sp, #32]
  4169f4:	b.eq	41678c <wcrtomb@plt+0x13e6c>  // b.none
  4169f8:	b	41662c <wcrtomb@plt+0x13d0c>
  4169fc:	bl	402340 <fchdir@plt>
  416a00:	cbnz	w0, 416a78 <wcrtomb@plt+0x14158>
  416a04:	ldr	w0, [x22, #68]
  416a08:	b	416504 <wcrtomb@plt+0x13be4>
  416a0c:	ldr	w1, [x20, #72]
  416a10:	tbz	w1, #2, 416a98 <wcrtomb@plt+0x14178>
  416a14:	str	x19, [x20]
  416a18:	b	41677c <wcrtomb@plt+0x13e5c>
  416a1c:	ldr	w1, [x20, #72]
  416a20:	tbnz	w1, #2, 4169b0 <wcrtomb@plt+0x14090>
  416a24:	ldr	w0, [x20, #44]
  416a28:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xdf38>
  416a2c:	add	x2, x2, #0x4f0
  416a30:	bl	415208 <wcrtomb@plt+0x128e8>
  416a34:	str	w0, [x19, #68]
  416a38:	tbnz	w0, #31, 416af4 <wcrtomb@plt+0x141d4>
  416a3c:	ldrh	w0, [x19, #110]
  416a40:	orr	w0, w0, #0x2
  416a44:	strh	w0, [x19, #110]
  416a48:	b	4169b0 <wcrtomb@plt+0x14090>
  416a4c:	cmp	w0, #0x1
  416a50:	ldp	x21, x22, [sp, #32]
  416a54:	b.eq	416784 <wcrtomb@plt+0x13e64>  // b.none
  416a58:	b	41662c <wcrtomb@plt+0x13d0c>
  416a5c:	mov	w1, w0
  416a60:	mov	x0, x21
  416a64:	bl	414db8 <wcrtomb@plt+0x12498>
  416a68:	cmp	w0, #0x2
  416a6c:	b.eq	416acc <wcrtomb@plt+0x141ac>  // b.none
  416a70:	ldr	w0, [x20, #44]
  416a74:	b	4168fc <wcrtomb@plt+0x13fdc>
  416a78:	bl	402890 <__errno_location@plt>
  416a7c:	ldr	w2, [x0]
  416a80:	ldr	w1, [x20, #72]
  416a84:	str	w2, [x22, #64]
  416a88:	ldr	w0, [x22, #68]
  416a8c:	orr	w1, w1, #0x2000
  416a90:	str	w1, [x20, #72]
  416a94:	b	416504 <wcrtomb@plt+0x13be4>
  416a98:	ldr	w0, [x20, #44]
  416a9c:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xdf38>
  416aa0:	add	x2, x2, #0x4f0
  416aa4:	bl	415208 <wcrtomb@plt+0x128e8>
  416aa8:	str	w0, [x19, #68]
  416aac:	tbnz	w0, #31, 416ad8 <wcrtomb@plt+0x141b8>
  416ab0:	ldrh	w1, [x19, #110]
  416ab4:	ldrh	w0, [x19, #108]
  416ab8:	orr	w1, w1, #0x2
  416abc:	strh	w1, [x19, #110]
  416ac0:	b	416768 <wcrtomb@plt+0x13e48>
  416ac4:	str	w1, [x21, #104]
  416ac8:	b	4169ec <wcrtomb@plt+0x140cc>
  416acc:	ldrh	w0, [x19, #108]
  416ad0:	ldp	x21, x22, [sp, #32]
  416ad4:	b	416774 <wcrtomb@plt+0x13e54>
  416ad8:	bl	402890 <__errno_location@plt>
  416adc:	ldr	w0, [x0]
  416ae0:	mov	w1, #0x7                   	// #7
  416ae4:	str	w0, [x19, #64]
  416ae8:	strh	w1, [x19, #108]
  416aec:	str	x19, [x20]
  416af0:	b	41662c <wcrtomb@plt+0x13d0c>
  416af4:	bl	402890 <__errno_location@plt>
  416af8:	ldr	w0, [x0]
  416afc:	mov	w1, #0x7                   	// #7
  416b00:	str	w0, [x19, #64]
  416b04:	strh	w1, [x19, #108]
  416b08:	b	4169b0 <wcrtomb@plt+0x14090>
  416b0c:	nop
  416b10:	cmp	w2, #0x4
  416b14:	b.hi	416b24 <wcrtomb@plt+0x14204>  // b.pmore
  416b18:	mov	w0, #0x0                   	// #0
  416b1c:	strh	w2, [x1, #112]
  416b20:	ret
  416b24:	stp	x29, x30, [sp, #-16]!
  416b28:	mov	x29, sp
  416b2c:	bl	402890 <__errno_location@plt>
  416b30:	mov	x1, x0
  416b34:	mov	w2, #0x16                  	// #22
  416b38:	mov	w0, #0x1                   	// #1
  416b3c:	str	w2, [x1]
  416b40:	ldp	x29, x30, [sp], #16
  416b44:	ret
  416b48:	stp	x29, x30, [sp, #-48]!
  416b4c:	mov	x29, sp
  416b50:	stp	x19, x20, [sp, #16]
  416b54:	mov	w20, w1
  416b58:	mov	x19, x0
  416b5c:	stp	x21, x22, [sp, #32]
  416b60:	bl	402890 <__errno_location@plt>
  416b64:	tst	w20, #0xffffefff
  416b68:	mov	x21, x0
  416b6c:	b.ne	416c4c <wcrtomb@plt+0x1432c>  // b.any
  416b70:	ldr	x22, [x19]
  416b74:	str	wzr, [x0]
  416b78:	ldr	w0, [x19, #72]
  416b7c:	tbnz	w0, #13, 416c68 <wcrtomb@plt+0x14348>
  416b80:	ldrh	w0, [x22, #108]
  416b84:	cmp	w0, #0x9
  416b88:	b.eq	416c7c <wcrtomb@plt+0x1435c>  // b.none
  416b8c:	cmp	w0, #0x1
  416b90:	mov	x0, #0x0                   	// #0
  416b94:	b.ne	416bf0 <wcrtomb@plt+0x142d0>  // b.any
  416b98:	ldr	x0, [x19, #8]
  416b9c:	cbz	x0, 416ba4 <wcrtomb@plt+0x14284>
  416ba0:	bl	414c18 <wcrtomb@plt+0x122f8>
  416ba4:	cmp	w20, #0x1, lsl #12
  416ba8:	mov	w20, #0x1                   	// #1
  416bac:	b.ne	416bc0 <wcrtomb@plt+0x142a0>  // b.any
  416bb0:	ldr	w0, [x19, #72]
  416bb4:	mov	w20, #0x2                   	// #2
  416bb8:	orr	w0, w0, #0x1000
  416bbc:	str	w0, [x19, #72]
  416bc0:	ldr	x0, [x22, #88]
  416bc4:	cbnz	x0, 416be0 <wcrtomb@plt+0x142c0>
  416bc8:	ldr	x0, [x22, #48]
  416bcc:	ldrb	w0, [x0]
  416bd0:	cmp	w0, #0x2f
  416bd4:	b.eq	416be0 <wcrtomb@plt+0x142c0>  // b.none
  416bd8:	ldr	w1, [x19, #72]
  416bdc:	tbz	w1, #2, 416c00 <wcrtomb@plt+0x142e0>
  416be0:	mov	w1, w20
  416be4:	mov	x0, x19
  416be8:	bl	4155d8 <wcrtomb@plt+0x12cb8>
  416bec:	str	x0, [x19, #8]
  416bf0:	ldp	x19, x20, [sp, #16]
  416bf4:	ldp	x21, x22, [sp, #32]
  416bf8:	ldp	x29, x30, [sp], #48
  416bfc:	ret
  416c00:	ldr	w0, [x19, #44]
  416c04:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xdf38>
  416c08:	add	x2, x2, #0x4f0
  416c0c:	bl	415208 <wcrtomb@plt+0x128e8>
  416c10:	mov	w22, w0
  416c14:	tbnz	w0, #31, 416ca8 <wcrtomb@plt+0x14388>
  416c18:	mov	w1, w20
  416c1c:	mov	x0, x19
  416c20:	bl	4155d8 <wcrtomb@plt+0x12cb8>
  416c24:	str	x0, [x19, #8]
  416c28:	ldr	w1, [x19, #72]
  416c2c:	tbnz	w1, #9, 416c90 <wcrtomb@plt+0x14370>
  416c30:	mov	w0, w22
  416c34:	bl	402340 <fchdir@plt>
  416c38:	cbnz	w0, 416cb4 <wcrtomb@plt+0x14394>
  416c3c:	mov	w0, w22
  416c40:	bl	402580 <close@plt>
  416c44:	ldr	x0, [x19, #8]
  416c48:	b	416bf0 <wcrtomb@plt+0x142d0>
  416c4c:	mov	w1, #0x16                  	// #22
  416c50:	str	w1, [x21]
  416c54:	mov	x0, #0x0                   	// #0
  416c58:	ldp	x19, x20, [sp, #16]
  416c5c:	ldp	x21, x22, [sp, #32]
  416c60:	ldp	x29, x30, [sp], #48
  416c64:	ret
  416c68:	mov	x0, #0x0                   	// #0
  416c6c:	ldp	x19, x20, [sp, #16]
  416c70:	ldp	x21, x22, [sp, #32]
  416c74:	ldp	x29, x30, [sp], #48
  416c78:	ret
  416c7c:	ldr	x0, [x22, #16]
  416c80:	ldp	x19, x20, [sp, #16]
  416c84:	ldp	x21, x22, [sp, #32]
  416c88:	ldp	x29, x30, [sp], #48
  416c8c:	ret
  416c90:	mov	x0, x19
  416c94:	mov	w1, w22
  416c98:	mov	w2, #0x1                   	// #1
  416c9c:	bl	414e58 <wcrtomb@plt+0x12538>
  416ca0:	ldr	x0, [x19, #8]
  416ca4:	b	416bf0 <wcrtomb@plt+0x142d0>
  416ca8:	mov	x0, #0x0                   	// #0
  416cac:	str	xzr, [x19, #8]
  416cb0:	b	416bf0 <wcrtomb@plt+0x142d0>
  416cb4:	ldr	w19, [x21]
  416cb8:	mov	w0, w22
  416cbc:	bl	402580 <close@plt>
  416cc0:	str	w19, [x21]
  416cc4:	mov	x0, #0x0                   	// #0
  416cc8:	b	416bf0 <wcrtomb@plt+0x142d0>
  416ccc:	nop
  416cd0:	mov	x4, x2
  416cd4:	cmp	x2, #0x0
  416cd8:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3b98>
  416cdc:	add	x3, x3, #0x8c8
  416ce0:	mov	x2, x1
  416ce4:	csel	x3, x3, x4, eq  // eq = none
  416ce8:	mov	x1, x0
  416cec:	mov	x0, #0x0                   	// #0
  416cf0:	b	416cf8 <wcrtomb@plt+0x143d8>
  416cf4:	nop
  416cf8:	stp	x29, x30, [sp, #-64]!
  416cfc:	cmp	x0, #0x0
  416d00:	add	x4, sp, #0x3c
  416d04:	mov	x29, sp
  416d08:	stp	x19, x20, [sp, #16]
  416d0c:	csel	x19, x4, x0, eq  // eq = none
  416d10:	mov	x20, x2
  416d14:	mov	x0, x19
  416d18:	str	x21, [sp, #32]
  416d1c:	mov	x21, x1
  416d20:	bl	402290 <mbrtowc@plt>
  416d24:	cmp	x20, #0x0
  416d28:	mov	x20, x0
  416d2c:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  416d30:	b.hi	416d48 <wcrtomb@plt+0x14428>  // b.pmore
  416d34:	mov	x0, x20
  416d38:	ldp	x19, x20, [sp, #16]
  416d3c:	ldr	x21, [sp, #32]
  416d40:	ldp	x29, x30, [sp], #64
  416d44:	ret
  416d48:	mov	w0, #0x0                   	// #0
  416d4c:	bl	423bf8 <_obstack_memory_used@@Base+0xcb30>
  416d50:	tst	w0, #0xff
  416d54:	b.ne	416d34 <wcrtomb@plt+0x14414>  // b.any
  416d58:	ldrb	w0, [x21]
  416d5c:	mov	x20, #0x1                   	// #1
  416d60:	str	w0, [x19]
  416d64:	mov	x0, x20
  416d68:	ldp	x19, x20, [sp, #16]
  416d6c:	ldr	x21, [sp, #32]
  416d70:	ldp	x29, x30, [sp], #64
  416d74:	ret
  416d78:	stp	x29, x30, [sp, #-32]!
  416d7c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  416d80:	mov	w2, #0x5                   	// #5
  416d84:	mov	x29, sp
  416d88:	str	x19, [sp, #16]
  416d8c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  416d90:	ldr	x19, [x0, #1088]
  416d94:	add	x1, x1, #0x1e8
  416d98:	mov	x0, #0x0                   	// #0
  416d9c:	bl	4027f0 <dcgettext@plt>
  416da0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  416da4:	mov	x2, x0
  416da8:	add	x1, x1, #0xe80
  416dac:	mov	x0, x19
  416db0:	bl	4028d0 <fprintf@plt>
  416db4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  416db8:	ldr	w0, [x0, #976]
  416dbc:	bl	402320 <exit@plt>
  416dc0:	mov	x2, x0
  416dc4:	mov	x0, x1
  416dc8:	ldrb	w4, [x2, #80]
  416dcc:	ldr	x3, [x2, #56]
  416dd0:	tbz	w4, #0, 416de0 <wcrtomb@plt+0x144c0>
  416dd4:	ldr	x0, [x2, #72]
  416dd8:	mov	x16, x3
  416ddc:	br	x16
  416de0:	mov	x16, x3
  416de4:	br	x16
  416de8:	mov	x2, x0
  416dec:	mov	x0, x1
  416df0:	ldrb	w4, [x2, #80]
  416df4:	ldr	x3, [x2, #64]
  416df8:	tbz	w4, #0, 416e08 <wcrtomb@plt+0x144e8>
  416dfc:	ldr	x0, [x2, #72]
  416e00:	mov	x16, x3
  416e04:	br	x16
  416e08:	mov	x16, x3
  416e0c:	br	x16
  416e10:	stp	x29, x30, [sp, #-48]!
  416e14:	mov	x29, sp
  416e18:	stp	x19, x20, [sp, #16]
  416e1c:	mov	x19, x0
  416e20:	str	x21, [sp, #32]
  416e24:	cbz	x2, 416ea0 <wcrtomb@plt+0x14580>
  416e28:	mov	x20, x2
  416e2c:	sub	x21, x2, #0x1
  416e30:	cmp	x1, #0x0
  416e34:	mov	x0, #0xfe0                 	// #4064
  416e38:	csel	x1, x1, x0, ne  // ne = any
  416e3c:	str	x1, [x19]
  416e40:	str	x21, [x19, #48]
  416e44:	mov	x0, x19
  416e48:	bl	416dc0 <wcrtomb@plt+0x144a0>
  416e4c:	str	x0, [x19, #8]
  416e50:	mov	x1, x0
  416e54:	cbz	x0, 416eac <wcrtomb@plt+0x1458c>
  416e58:	add	x2, x0, #0x10
  416e5c:	neg	x20, x20
  416e60:	ldr	x0, [x19]
  416e64:	add	x2, x2, x21
  416e68:	and	x20, x2, x20
  416e6c:	ldr	x21, [sp, #32]
  416e70:	stp	x20, x20, [x19, #16]
  416e74:	add	x2, x1, x0
  416e78:	str	x2, [x1]
  416e7c:	mov	w0, #0x1                   	// #1
  416e80:	str	x2, [x19, #32]
  416e84:	ldrb	w2, [x19, #80]
  416e88:	str	xzr, [x1, #8]
  416e8c:	and	w1, w2, #0xfffffff9
  416e90:	strb	w1, [x19, #80]
  416e94:	ldp	x19, x20, [sp, #16]
  416e98:	ldp	x29, x30, [sp], #48
  416e9c:	ret
  416ea0:	mov	x21, #0xf                   	// #15
  416ea4:	mov	x20, #0x10                  	// #16
  416ea8:	b	416e30 <wcrtomb@plt+0x14510>
  416eac:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  416eb0:	ldr	x0, [x0, #1072]
  416eb4:	blr	x0

0000000000416eb8 <_obstack_begin@@Base>:
  416eb8:	ldrb	w6, [x0, #80]
  416ebc:	stp	x3, x4, [x0, #56]
  416ec0:	and	w6, w6, #0xfffffffe
  416ec4:	strb	w6, [x0, #80]
  416ec8:	b	416e10 <wcrtomb@plt+0x144f0>
  416ecc:	nop

0000000000416ed0 <_obstack_begin_1@@Base>:
  416ed0:	ldrb	w7, [x0, #80]
  416ed4:	stp	x3, x4, [x0, #56]
  416ed8:	orr	w7, w7, #0x1
  416edc:	str	x5, [x0, #72]
  416ee0:	strb	w7, [x0, #80]
  416ee4:	b	416e10 <wcrtomb@plt+0x144f0>

0000000000416ee8 <_obstack_newchunk@@Base>:
  416ee8:	stp	x29, x30, [sp, #-64]!
  416eec:	mov	x29, sp
  416ef0:	stp	x21, x22, [sp, #32]
  416ef4:	ldp	x2, x21, [x0, #16]
  416ef8:	stp	x19, x20, [sp, #16]
  416efc:	ldr	x4, [x0, #48]
  416f00:	ldr	x3, [x0]
  416f04:	sub	x21, x21, x2
  416f08:	adds	x1, x21, x1
  416f0c:	str	x23, [sp, #48]
  416f10:	cset	x2, cs  // cs = hs, nlast
  416f14:	lsr	x20, x21, #3
  416f18:	adds	x4, x4, x1
  416f1c:	add	x20, x20, #0x64
  416f20:	cset	x1, cs  // cs = hs, nlast
  416f24:	cmp	x3, x4
  416f28:	csel	x3, x3, x4, cs  // cs = hs, nlast
  416f2c:	add	x4, x20, x4
  416f30:	cmp	x3, x4
  416f34:	csel	x20, x3, x4, cs  // cs = hs, nlast
  416f38:	cmp	x2, #0x0
  416f3c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  416f40:	ldr	x23, [x0, #8]
  416f44:	b.ne	416ff0 <_obstack_newchunk@@Base+0x108>  // b.any
  416f48:	mov	x19, x0
  416f4c:	mov	x1, x20
  416f50:	bl	416dc0 <wcrtomb@plt+0x144a0>
  416f54:	mov	x22, x0
  416f58:	cbz	x0, 416ff0 <_obstack_newchunk@@Base+0x108>
  416f5c:	str	x0, [x19, #8]
  416f60:	add	x3, x0, x20
  416f64:	ldr	x1, [x19, #16]
  416f68:	mov	x2, x21
  416f6c:	ldr	x20, [x19, #48]
  416f70:	str	x23, [x0, #8]
  416f74:	str	x3, [x19, #32]
  416f78:	str	x3, [x0], #16
  416f7c:	add	x0, x0, x20
  416f80:	bic	x20, x0, x20
  416f84:	mov	x0, x20
  416f88:	bl	4022a0 <memcpy@plt>
  416f8c:	ldrb	w0, [x19, #80]
  416f90:	tbnz	w0, #1, 416fb0 <_obstack_newchunk@@Base+0xc8>
  416f94:	ldr	x1, [x19, #48]
  416f98:	add	x0, x23, #0x10
  416f9c:	ldr	x2, [x19, #16]
  416fa0:	add	x0, x0, x1
  416fa4:	bic	x0, x0, x1
  416fa8:	cmp	x2, x0
  416fac:	b.eq	416fd8 <_obstack_newchunk@@Base+0xf0>  // b.none
  416fb0:	ldrb	w0, [x19, #80]
  416fb4:	add	x21, x20, x21
  416fb8:	ldr	x23, [sp, #48]
  416fbc:	and	w0, w0, #0xfffffffd
  416fc0:	stp	x20, x21, [x19, #16]
  416fc4:	strb	w0, [x19, #80]
  416fc8:	ldp	x19, x20, [sp, #16]
  416fcc:	ldp	x21, x22, [sp, #32]
  416fd0:	ldp	x29, x30, [sp], #64
  416fd4:	ret
  416fd8:	ldr	x0, [x23, #8]
  416fdc:	str	x0, [x22, #8]
  416fe0:	mov	x1, x23
  416fe4:	mov	x0, x19
  416fe8:	bl	416de8 <wcrtomb@plt+0x144c8>
  416fec:	b	416fb0 <_obstack_newchunk@@Base+0xc8>
  416ff0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x26f38>
  416ff4:	ldr	x0, [x0, #1072]
  416ff8:	blr	x0
  416ffc:	nop

0000000000417000 <_obstack_allocated_p@@Base>:
  417000:	ldr	x0, [x0, #8]
  417004:	cbz	x0, 417028 <_obstack_allocated_p@@Base+0x28>
  417008:	cmp	x1, x0
  41700c:	b.ls	41701c <_obstack_allocated_p@@Base+0x1c>  // b.plast
  417010:	ldr	x2, [x0]
  417014:	cmp	x2, x1
  417018:	b.cs	41702c <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  41701c:	ldr	x0, [x0, #8]
  417020:	cbnz	x0, 417008 <_obstack_allocated_p@@Base+0x8>
  417024:	mov	w0, #0x0                   	// #0
  417028:	ret
  41702c:	mov	w0, #0x1                   	// #1
  417030:	ret
  417034:	nop

0000000000417038 <_obstack_free@@Base>:
  417038:	stp	x29, x30, [sp, #-48]!
  41703c:	mov	x29, sp
  417040:	str	x21, [sp, #32]
  417044:	mov	x21, x1
  417048:	ldr	x1, [x0, #8]
  41704c:	cbz	x1, 417094 <_obstack_free@@Base+0x5c>
  417050:	stp	x19, x20, [sp, #16]
  417054:	mov	x20, x0
  417058:	b	417060 <_obstack_free@@Base+0x28>
  41705c:	mov	x1, x19
  417060:	cmp	x1, x21
  417064:	b.cs	417074 <_obstack_free@@Base+0x3c>  // b.hs, b.nlast
  417068:	ldr	x0, [x1]
  41706c:	cmp	x0, x21
  417070:	b.cs	4170a4 <_obstack_free@@Base+0x6c>  // b.hs, b.nlast
  417074:	mov	x0, x20
  417078:	ldr	x19, [x1, #8]
  41707c:	bl	416de8 <wcrtomb@plt+0x144c8>
  417080:	ldrb	w2, [x20, #80]
  417084:	orr	w2, w2, #0x2
  417088:	strb	w2, [x20, #80]
  41708c:	cbnz	x19, 41705c <_obstack_free@@Base+0x24>
  417090:	ldp	x19, x20, [sp, #16]
  417094:	cbnz	x21, 4170bc <_obstack_free@@Base+0x84>
  417098:	ldr	x21, [sp, #32]
  41709c:	ldp	x29, x30, [sp], #48
  4170a0:	ret
  4170a4:	stp	x1, x21, [x20, #8]
  4170a8:	stp	x21, x0, [x20, #24]
  4170ac:	ldp	x19, x20, [sp, #16]
  4170b0:	ldr	x21, [sp, #32]
  4170b4:	ldp	x29, x30, [sp], #48
  4170b8:	ret
  4170bc:	stp	x19, x20, [sp, #16]
  4170c0:	bl	4025f0 <abort@plt>
  4170c4:	nop

00000000004170c8 <_obstack_memory_used@@Base>:
  4170c8:	ldr	x1, [x0, #8]
  4170cc:	mov	x0, #0x0                   	// #0
  4170d0:	cbz	x1, 4170ec <_obstack_memory_used@@Base+0x24>
  4170d4:	nop
  4170d8:	ldr	x2, [x1]
  4170dc:	sub	x2, x2, x1
  4170e0:	ldr	x1, [x1, #8]
  4170e4:	add	x0, x0, x2
  4170e8:	cbnz	x1, 4170d8 <_obstack_memory_used@@Base+0x10>
  4170ec:	ret
  4170f0:	cmp	x0, #0x0
  4170f4:	mov	x3, x0
  4170f8:	cset	w0, eq  // eq = none
  4170fc:	cmp	x1, #0x0
  417100:	csinc	w0, w0, wzr, ne  // ne = any
  417104:	cbnz	w0, 417144 <_obstack_memory_used@@Base+0x7c>
  417108:	ldr	x4, [x1, #8]
  41710c:	ldr	x2, [x3, #8]
  417110:	cmp	x2, x4
  417114:	b.eq	417134 <_obstack_memory_used@@Base+0x6c>  // b.none
  417118:	ret
  41711c:	ldr	x4, [x1, #16]
  417120:	ldr	x5, [x3, #16]
  417124:	ldr	x4, [x4, x2, lsl #3]
  417128:	ldr	x5, [x5, x2, lsl #3]
  41712c:	cmp	x5, x4
  417130:	b.ne	417118 <_obstack_memory_used@@Base+0x50>  // b.any
  417134:	subs	x2, x2, #0x1
  417138:	b.pl	41711c <_obstack_memory_used@@Base+0x54>  // b.nfrst
  41713c:	mov	w0, #0x1                   	// #1
  417140:	ret
  417144:	mov	w0, #0x0                   	// #0
  417148:	ret
  41714c:	nop
  417150:	mov	x3, x0
  417154:	ldr	x0, [x1, #72]
  417158:	ldr	x4, [x1, #104]
  41715c:	cmp	x4, x0
  417160:	b.le	417204 <_obstack_memory_used@@Base+0x13c>
  417164:	ldr	x5, [x1, #8]
  417168:	ldr	w6, [x1, #144]
  41716c:	ldrb	w4, [x5, x0]
  417170:	cmp	w6, #0x1
  417174:	strb	w4, [x3]
  417178:	b.le	417198 <_obstack_memory_used@@Base+0xd0>
  41717c:	ldr	x6, [x1, #48]
  417180:	cmp	x0, x6
  417184:	b.eq	417198 <_obstack_memory_used@@Base+0xd0>  // b.none
  417188:	ldr	x6, [x1, #16]
  41718c:	ldr	w6, [x6, x0, lsl #2]
  417190:	cmn	w6, #0x1
  417194:	b.eq	4171dc <_obstack_memory_used@@Base+0x114>  // b.none
  417198:	cmp	w4, #0x5c
  41719c:	b.eq	4171c8 <_obstack_memory_used@@Base+0x100>  // b.none
  4171a0:	cmp	w4, #0x5b
  4171a4:	b.eq	417214 <_obstack_memory_used@@Base+0x14c>  // b.none
  4171a8:	cmp	w4, #0x5d
  4171ac:	b.eq	417260 <_obstack_memory_used@@Base+0x198>  // b.none
  4171b0:	cmp	w4, #0x5e
  4171b4:	b.ne	4171ec <_obstack_memory_used@@Base+0x124>  // b.any
  4171b8:	mov	w1, #0x19                  	// #25
  4171bc:	mov	w0, #0x1                   	// #1
  4171c0:	strb	w1, [x3, #8]
  4171c4:	ret
  4171c8:	tbz	w2, #0, 4171dc <_obstack_memory_used@@Base+0x114>
  4171cc:	ldr	x4, [x1, #88]
  4171d0:	add	x2, x0, #0x1
  4171d4:	cmp	x2, x4
  4171d8:	b.lt	417270 <_obstack_memory_used@@Base+0x1a8>  // b.tstop
  4171dc:	mov	w1, #0x1                   	// #1
  4171e0:	mov	w0, #0x1                   	// #1
  4171e4:	strb	w1, [x3, #8]
  4171e8:	ret
  4171ec:	cmp	w4, #0x2d
  4171f0:	b.ne	4171dc <_obstack_memory_used@@Base+0x114>  // b.any
  4171f4:	mov	w1, #0x16                  	// #22
  4171f8:	mov	w0, #0x1                   	// #1
  4171fc:	strb	w1, [x3, #8]
  417200:	ret
  417204:	mov	w1, #0x2                   	// #2
  417208:	mov	w0, #0x0                   	// #0
  41720c:	strb	w1, [x3, #8]
  417210:	ret
  417214:	ldr	x1, [x1, #88]
  417218:	add	x4, x0, #0x1
  41721c:	cmp	x4, x1
  417220:	b.ge	417248 <_obstack_memory_used@@Base+0x180>  // b.tcont
  417224:	add	x0, x5, x0
  417228:	ldrb	w0, [x0, #1]
  41722c:	strb	w0, [x3]
  417230:	cmp	w0, #0x3a
  417234:	b.eq	4172ac <_obstack_memory_used@@Base+0x1e4>  // b.none
  417238:	cmp	w0, #0x3d
  41723c:	b.eq	41729c <_obstack_memory_used@@Base+0x1d4>  // b.none
  417240:	cmp	w0, #0x2e
  417244:	b.eq	41728c <_obstack_memory_used@@Base+0x1c4>  // b.none
  417248:	mov	w1, #0x1                   	// #1
  41724c:	mov	w2, #0x5b                  	// #91
  417250:	mov	w0, #0x1                   	// #1
  417254:	strb	w2, [x3]
  417258:	strb	w1, [x3, #8]
  41725c:	ret
  417260:	mov	w1, #0x15                  	// #21
  417264:	mov	w0, #0x1                   	// #1
  417268:	strb	w1, [x3, #8]
  41726c:	ret
  417270:	str	x2, [x1, #72]
  417274:	mov	w0, #0x1                   	// #1
  417278:	mov	w1, #0x1                   	// #1
  41727c:	ldrb	w2, [x5, x2]
  417280:	strb	w2, [x3]
  417284:	strb	w1, [x3, #8]
  417288:	ret
  41728c:	mov	w1, #0x1a                  	// #26
  417290:	mov	w0, #0x2                   	// #2
  417294:	strb	w1, [x3, #8]
  417298:	ret
  41729c:	mov	w1, #0x1c                  	// #28
  4172a0:	mov	w0, #0x2                   	// #2
  4172a4:	strb	w1, [x3, #8]
  4172a8:	ret
  4172ac:	tbz	w2, #2, 417248 <_obstack_memory_used@@Base+0x180>
  4172b0:	mov	w1, #0x1e                  	// #30
  4172b4:	mov	w0, #0x2                   	// #2
  4172b8:	strb	w1, [x3, #8]
  4172bc:	ret
  4172c0:	ldrb	w2, [x1, #48]
  4172c4:	cmp	w2, #0x11
  4172c8:	b.eq	4172d4 <_obstack_memory_used@@Base+0x20c>  // b.none
  4172cc:	mov	w0, #0x0                   	// #0
  4172d0:	ret
  4172d4:	ldr	x2, [x1, #40]
  4172d8:	cmp	x0, x2
  4172dc:	b.ne	4172cc <_obstack_memory_used@@Base+0x204>  // b.any
  4172e0:	ldrb	w0, [x1, #50]
  4172e4:	orr	w0, w0, #0x8
  4172e8:	strb	w0, [x1, #50]
  4172ec:	mov	w0, #0x0                   	// #0
  4172f0:	ret
  4172f4:	nop
  4172f8:	stp	x29, x30, [sp, #-144]!
  4172fc:	mov	x12, x0
  417300:	add	x9, x3, x3, lsl #1
  417304:	mov	x29, sp
  417308:	stp	x23, x24, [sp, #48]
  41730c:	ldr	x24, [x0, #152]
  417310:	stp	x21, x22, [sp, #32]
  417314:	stp	x25, x26, [sp, #64]
  417318:	mov	w26, w1
  41731c:	ldr	x0, [x24, #48]
  417320:	add	x22, x0, x9, lsl #3
  417324:	ldr	x0, [x22, #8]
  417328:	cmp	x0, #0x0
  41732c:	b.le	4174e8 <_obstack_memory_used@@Base+0x420>
  417330:	mov	x1, #0x1                   	// #1
  417334:	add	x23, x4, x4, lsl #2
  417338:	lsl	x1, x1, x2
  41733c:	str	x1, [sp, #120]
  417340:	mvn	w1, w1
  417344:	mov	x13, x3
  417348:	and	w1, w1, #0xffff
  41734c:	str	w1, [sp, #132]
  417350:	lsl	x1, x23, #3
  417354:	mov	x25, x4
  417358:	and	w23, w26, #0x1
  41735c:	stp	x19, x20, [sp, #16]
  417360:	mov	x19, #0x0                   	// #0
  417364:	stp	x27, x28, [sp, #80]
  417368:	mov	x27, x2
  41736c:	str	x1, [sp, #136]
  417370:	and	w1, w26, #0x2
  417374:	str	w1, [sp, #128]
  417378:	b	417390 <_obstack_memory_used@@Base+0x2c8>
  41737c:	cmp	w5, #0x4
  417380:	b.eq	41741c <_obstack_memory_used@@Base+0x354>  // b.none
  417384:	add	x19, x19, #0x1
  417388:	cmp	x0, x19
  41738c:	b.le	4174e0 <_obstack_memory_used@@Base+0x418>
  417390:	ldr	x5, [x22, #16]
  417394:	ldr	x7, [x24]
  417398:	ldr	x21, [x5, x19, lsl #3]
  41739c:	lsl	x6, x21, #4
  4173a0:	add	x5, x7, x6
  4173a4:	ldrb	w5, [x5, #8]
  4173a8:	cmp	w5, #0x8
  4173ac:	b.eq	4173ec <_obstack_memory_used@@Base+0x324>  // b.none
  4173b0:	cmp	w5, #0x9
  4173b4:	b.ne	41737c <_obstack_memory_used@@Base+0x2b4>  // b.any
  4173b8:	ldr	w1, [sp, #128]
  4173bc:	cbz	w1, 417384 <_obstack_memory_used@@Base+0x2bc>
  4173c0:	ldr	x1, [x7, x6]
  4173c4:	cmp	x1, x27
  4173c8:	b.ne	417384 <_obstack_memory_used@@Base+0x2bc>  // b.any
  4173cc:	mov	w0, #0x0                   	// #0
  4173d0:	ldp	x19, x20, [sp, #16]
  4173d4:	ldp	x21, x22, [sp, #32]
  4173d8:	ldp	x23, x24, [sp, #48]
  4173dc:	ldp	x25, x26, [sp, #64]
  4173e0:	ldp	x27, x28, [sp, #80]
  4173e4:	ldp	x29, x30, [sp], #144
  4173e8:	ret
  4173ec:	cbz	w23, 417384 <_obstack_memory_used@@Base+0x2bc>
  4173f0:	ldr	x1, [x7, x6]
  4173f4:	cmp	x1, x27
  4173f8:	b.ne	417384 <_obstack_memory_used@@Base+0x2bc>  // b.any
  4173fc:	mov	w0, #0xffffffff            	// #-1
  417400:	ldp	x19, x20, [sp, #16]
  417404:	ldp	x21, x22, [sp, #32]
  417408:	ldp	x23, x24, [sp, #48]
  41740c:	ldp	x25, x26, [sp, #64]
  417410:	ldp	x27, x28, [sp, #80]
  417414:	ldp	x29, x30, [sp], #144
  417418:	ret
  41741c:	cmn	x25, #0x1
  417420:	b.eq	417384 <_obstack_memory_used@@Base+0x2bc>  // b.none
  417424:	ldr	x0, [sp, #136]
  417428:	add	x28, x21, x21, lsl #1
  41742c:	ldr	x20, [x12, #216]
  417430:	lsl	x28, x28, #3
  417434:	add	x20, x20, x0
  417438:	ldr	x5, [x20]
  41743c:	mov	x4, x25
  417440:	mov	x2, x27
  417444:	mov	w1, w26
  417448:	mov	x0, x12
  41744c:	cmp	x5, x21
  417450:	b.ne	4174c0 <_obstack_memory_used@@Base+0x3f8>  // b.any
  417454:	cmp	x27, #0x3f
  417458:	b.gt	41746c <_obstack_memory_used@@Base+0x3a4>
  41745c:	ldr	x5, [sp, #120]
  417460:	ldrh	w3, [x20, #34]
  417464:	tst	x3, x5
  417468:	b.eq	4174c0 <_obstack_memory_used@@Base+0x3f8>  // b.none
  41746c:	ldr	x3, [x24, #40]
  417470:	add	x3, x3, x28
  417474:	ldr	x3, [x3, #16]
  417478:	ldr	x3, [x3]
  41747c:	cmp	x13, x3
  417480:	b.eq	417500 <_obstack_memory_used@@Base+0x438>  // b.none
  417484:	stp	x12, x13, [sp, #104]
  417488:	bl	4172f8 <_obstack_memory_used@@Base+0x230>
  41748c:	cmn	w0, #0x1
  417490:	ldp	x12, x13, [sp, #104]
  417494:	b.eq	4173fc <_obstack_memory_used@@Base+0x334>  // b.none
  417498:	cbnz	w0, 4174a4 <_obstack_memory_used@@Base+0x3dc>
  41749c:	ldr	w0, [sp, #128]
  4174a0:	cbnz	w0, 4173cc <_obstack_memory_used@@Base+0x304>
  4174a4:	cmp	x27, #0x3f
  4174a8:	b.gt	4174c0 <_obstack_memory_used@@Base+0x3f8>
  4174ac:	ldrh	w0, [x20, #34]
  4174b0:	ldr	w1, [sp, #132]
  4174b4:	and	w0, w1, w0
  4174b8:	strh	w0, [x20, #34]
  4174bc:	nop
  4174c0:	ldrb	w0, [x20, #32]
  4174c4:	add	x20, x20, #0x28
  4174c8:	cbnz	w0, 417438 <_obstack_memory_used@@Base+0x370>
  4174cc:	ldr	x0, [x22, #8]
  4174d0:	add	x19, x19, #0x1
  4174d4:	cmp	x0, x19
  4174d8:	b.gt	417390 <_obstack_memory_used@@Base+0x2c8>
  4174dc:	nop
  4174e0:	ldp	x19, x20, [sp, #16]
  4174e4:	ldp	x27, x28, [sp, #80]
  4174e8:	asr	w0, w26, #1
  4174ec:	ldp	x21, x22, [sp, #32]
  4174f0:	ldp	x23, x24, [sp, #48]
  4174f4:	ldp	x25, x26, [sp, #64]
  4174f8:	ldp	x29, x30, [sp], #144
  4174fc:	ret
  417500:	sbfx	x0, x26, #0, #1
  417504:	ldp	x19, x20, [sp, #16]
  417508:	ldp	x21, x22, [sp, #32]
  41750c:	ldp	x23, x24, [sp, #48]
  417510:	ldp	x25, x26, [sp, #64]
  417514:	ldp	x27, x28, [sp, #80]
  417518:	ldp	x29, x30, [sp], #144
  41751c:	ret
  417520:	mov	x7, x0
  417524:	add	x1, x1, x1, lsl #2
  417528:	ldr	x0, [x0, #216]
  41752c:	mov	x6, x4
  417530:	add	x1, x0, x1, lsl #3
  417534:	ldr	x0, [x1, #16]
  417538:	cmp	x0, x4
  41753c:	b.gt	417584 <_obstack_memory_used@@Base+0x4bc>
  417540:	ldr	x4, [x1, #24]
  417544:	cmp	x4, x6
  417548:	b.lt	41757c <_obstack_memory_used@@Base+0x4b4>  // b.tstop
  41754c:	cmp	x0, x6
  417550:	cset	w1, eq  // eq = none
  417554:	cmp	x4, x6
  417558:	b.eq	41756c <_obstack_memory_used@@Base+0x4a4>  // b.none
  41755c:	cmp	x0, x6
  417560:	mov	w0, #0x0                   	// #0
  417564:	b.eq	417570 <_obstack_memory_used@@Base+0x4a8>  // b.none
  417568:	ret
  41756c:	orr	w1, w1, #0x2
  417570:	mov	x4, x5
  417574:	mov	x0, x7
  417578:	b	4172f8 <_obstack_memory_used@@Base+0x230>
  41757c:	mov	w0, #0x1                   	// #1
  417580:	ret
  417584:	mov	w0, #0xffffffff            	// #-1
  417588:	ret
  41758c:	nop
  417590:	stp	x29, x30, [sp, #-48]!
  417594:	mov	x29, sp
  417598:	stp	x19, x20, [sp, #16]
  41759c:	mov	x20, x2
  4175a0:	str	x21, [sp, #32]
  4175a4:	mov	x21, x1
  4175a8:	mov	x19, x0
  4175ac:	ldr	x0, [x0, #8]
  4175b0:	cbnz	x0, 4175a8 <_obstack_memory_used@@Base+0x4e0>
  4175b4:	ldr	x0, [x19, #16]
  4175b8:	cbnz	x0, 4175a8 <_obstack_memory_used@@Base+0x4e0>
  4175bc:	mov	x1, x19
  4175c0:	mov	x0, x20
  4175c4:	blr	x21
  4175c8:	cbnz	w0, 4175fc <_obstack_memory_used@@Base+0x534>
  4175cc:	nop
  4175d0:	ldr	x3, [x19]
  4175d4:	cbz	x3, 4175fc <_obstack_memory_used@@Base+0x534>
  4175d8:	ldr	x0, [x3, #16]
  4175dc:	cmp	x0, #0x0
  4175e0:	ccmp	x0, x19, #0x4, ne  // ne = any
  4175e4:	mov	x19, x3
  4175e8:	b.ne	4175a8 <_obstack_memory_used@@Base+0x4e0>  // b.any
  4175ec:	mov	x1, x19
  4175f0:	mov	x0, x20
  4175f4:	blr	x21
  4175f8:	cbz	w0, 4175d0 <_obstack_memory_used@@Base+0x508>
  4175fc:	ldp	x19, x20, [sp, #16]
  417600:	ldr	x21, [sp, #32]
  417604:	ldp	x29, x30, [sp], #48
  417608:	ret
  41760c:	nop
  417610:	stp	x29, x30, [sp, #-48]!
  417614:	mov	x29, sp
  417618:	stp	x19, x20, [sp, #16]
  41761c:	mov	x19, x0
  417620:	mov	x20, x2
  417624:	str	x21, [sp, #32]
  417628:	mov	x0, x20
  41762c:	mov	x21, x1
  417630:	mov	x1, x19
  417634:	blr	x21
  417638:	cbnz	w0, 41765c <_obstack_memory_used@@Base+0x594>
  41763c:	nop
  417640:	ldr	x3, [x19, #8]
  417644:	cbz	x3, 41766c <_obstack_memory_used@@Base+0x5a4>
  417648:	mov	x19, x3
  41764c:	mov	x1, x19
  417650:	mov	x0, x20
  417654:	blr	x21
  417658:	cbz	w0, 417640 <_obstack_memory_used@@Base+0x578>
  41765c:	ldp	x19, x20, [sp, #16]
  417660:	ldr	x21, [sp, #32]
  417664:	ldp	x29, x30, [sp], #48
  417668:	ret
  41766c:	ldr	x4, [x19, #16]
  417670:	cmp	x4, #0x0
  417674:	ccmp	x4, x3, #0x4, ne  // ne = any
  417678:	b.ne	4176a0 <_obstack_memory_used@@Base+0x5d8>  // b.any
  41767c:	nop
  417680:	ldr	x4, [x19]
  417684:	mov	x3, x19
  417688:	mov	x19, x4
  41768c:	cbz	x4, 41765c <_obstack_memory_used@@Base+0x594>
  417690:	ldr	x4, [x19, #16]
  417694:	cmp	x4, #0x0
  417698:	ccmp	x4, x3, #0x4, ne  // ne = any
  41769c:	b.eq	417680 <_obstack_memory_used@@Base+0x5b8>  // b.none
  4176a0:	mov	x3, x4
  4176a4:	mov	x19, x3
  4176a8:	b	41764c <_obstack_memory_used@@Base+0x584>
  4176ac:	nop
  4176b0:	stp	x29, x30, [sp, #-32]!
  4176b4:	mov	x29, sp
  4176b8:	stp	x19, x20, [sp, #16]
  4176bc:	mov	x19, x0
  4176c0:	ldr	w0, [x0, #144]
  4176c4:	mov	x20, x1
  4176c8:	cmp	w0, #0x1
  4176cc:	b.le	41770c <_obstack_memory_used@@Base+0x644>
  4176d0:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  4176d4:	cmp	x1, x0
  4176d8:	b.hi	417740 <_obstack_memory_used@@Base+0x678>  // b.pmore
  4176dc:	ldr	x0, [x19, #16]
  4176e0:	lsl	x1, x1, #2
  4176e4:	bl	402550 <realloc@plt>
  4176e8:	mov	x1, x0
  4176ec:	cbz	x0, 417740 <_obstack_memory_used@@Base+0x678>
  4176f0:	ldr	x0, [x19, #24]
  4176f4:	str	x1, [x19, #16]
  4176f8:	cbz	x0, 41770c <_obstack_memory_used@@Base+0x644>
  4176fc:	lsl	x1, x20, #3
  417700:	bl	402550 <realloc@plt>
  417704:	cbz	x0, 417740 <_obstack_memory_used@@Base+0x678>
  417708:	str	x0, [x19, #24]
  41770c:	ldrb	w0, [x19, #139]
  417710:	cbnz	w0, 417728 <_obstack_memory_used@@Base+0x660>
  417714:	str	x20, [x19, #64]
  417718:	mov	w0, #0x0                   	// #0
  41771c:	ldp	x19, x20, [sp, #16]
  417720:	ldp	x29, x30, [sp], #32
  417724:	ret
  417728:	ldr	x0, [x19, #8]
  41772c:	mov	x1, x20
  417730:	bl	402550 <realloc@plt>
  417734:	cbz	x0, 417740 <_obstack_memory_used@@Base+0x678>
  417738:	str	x0, [x19, #8]
  41773c:	b	417714 <_obstack_memory_used@@Base+0x64c>
  417740:	mov	w0, #0xc                   	// #12
  417744:	ldp	x19, x20, [sp, #16]
  417748:	ldp	x29, x30, [sp], #32
  41774c:	ret
  417750:	stp	x29, x30, [sp, #-32]!
  417754:	mov	x29, sp
  417758:	stp	x19, x20, [sp, #16]
  41775c:	mov	x19, x0
  417760:	mov	x20, x1
  417764:	ldr	x0, [x0]
  417768:	ldp	x2, x1, [x19, #8]
  41776c:	cmp	x0, x2
  417770:	b.eq	417790 <_obstack_memory_used@@Base+0x6c8>  // b.none
  417774:	add	x0, x2, #0x1
  417778:	str	x0, [x19, #8]
  41777c:	mov	w0, #0x1                   	// #1
  417780:	str	x20, [x1, x2, lsl #3]
  417784:	ldp	x19, x20, [sp, #16]
  417788:	ldp	x29, x30, [sp], #32
  41778c:	ret
  417790:	add	x2, x2, #0x1
  417794:	mov	x0, x1
  417798:	lsl	x1, x2, #1
  41779c:	str	x1, [x19]
  4177a0:	lsl	x1, x2, #4
  4177a4:	bl	402550 <realloc@plt>
  4177a8:	mov	x1, x0
  4177ac:	cbz	x0, 4177bc <_obstack_memory_used@@Base+0x6f4>
  4177b0:	str	x0, [x19, #16]
  4177b4:	ldr	x2, [x19, #8]
  4177b8:	b	417774 <_obstack_memory_used@@Base+0x6ac>
  4177bc:	mov	w0, #0x0                   	// #0
  4177c0:	b	417784 <_obstack_memory_used@@Base+0x6bc>
  4177c4:	nop
  4177c8:	stp	x29, x30, [sp, #-48]!
  4177cc:	mov	x29, sp
  4177d0:	ldr	x2, [x0]
  4177d4:	stp	x19, x20, [sp, #16]
  4177d8:	mov	x19, x0
  4177dc:	mov	x20, x1
  4177e0:	cbz	x2, 41780c <_obstack_memory_used@@Base+0x744>
  4177e4:	ldp	x1, x0, [x0, #8]
  4177e8:	cbnz	x1, 417844 <_obstack_memory_used@@Base+0x77c>
  4177ec:	str	x20, [x0]
  4177f0:	mov	w0, #0x1                   	// #1
  4177f4:	ldr	x1, [x19, #8]
  4177f8:	add	x1, x1, #0x1
  4177fc:	str	x1, [x19, #8]
  417800:	ldp	x19, x20, [sp, #16]
  417804:	ldp	x29, x30, [sp], #48
  417808:	ret
  41780c:	str	x21, [sp, #32]
  417810:	mov	x21, #0x1                   	// #1
  417814:	stp	x21, x21, [x19]
  417818:	mov	x0, #0x8                   	// #8
  41781c:	bl	402440 <malloc@plt>
  417820:	str	x0, [x19, #16]
  417824:	mov	x1, x0
  417828:	cbz	x0, 4178c0 <_obstack_memory_used@@Base+0x7f8>
  41782c:	mov	w0, w21
  417830:	ldr	x21, [sp, #32]
  417834:	str	x20, [x1]
  417838:	ldp	x19, x20, [sp, #16]
  41783c:	ldp	x29, x30, [sp], #48
  417840:	ret
  417844:	cmp	x2, x1
  417848:	b.eq	4178d0 <_obstack_memory_used@@Base+0x808>  // b.none
  41784c:	ldr	x3, [x0]
  417850:	lsl	x2, x1, #3
  417854:	cmp	x3, x20
  417858:	b.le	417894 <_obstack_memory_used@@Base+0x7cc>
  41785c:	cmp	x1, #0x0
  417860:	b.le	41787c <_obstack_memory_used@@Base+0x7b4>
  417864:	add	x2, x0, x2
  417868:	ldur	x1, [x2, #-8]
  41786c:	str	x1, [x2], #-8
  417870:	cmp	x2, x0
  417874:	b.ne	417868 <_obstack_memory_used@@Base+0x7a0>  // b.any
  417878:	mov	x2, #0x0                   	// #0
  41787c:	str	x20, [x0, x2]
  417880:	mov	w0, #0x1                   	// #1
  417884:	ldr	x1, [x19, #8]
  417888:	add	x1, x1, #0x1
  41788c:	str	x1, [x19, #8]
  417890:	b	417800 <_obstack_memory_used@@Base+0x738>
  417894:	add	x1, x0, x2
  417898:	ldur	x1, [x1, #-8]
  41789c:	cmp	x20, x1
  4178a0:	b.ge	41787c <_obstack_memory_used@@Base+0x7b4>  // b.tcont
  4178a4:	sub	x3, x0, #0x8
  4178a8:	str	x1, [x0, x2]
  4178ac:	sub	x2, x2, #0x8
  4178b0:	ldr	x1, [x3, x2]
  4178b4:	cmp	x1, x20
  4178b8:	b.gt	4178a8 <_obstack_memory_used@@Base+0x7e0>
  4178bc:	b	41787c <_obstack_memory_used@@Base+0x7b4>
  4178c0:	mov	w0, #0x0                   	// #0
  4178c4:	ldr	x21, [sp, #32]
  4178c8:	stp	xzr, xzr, [x19]
  4178cc:	b	417800 <_obstack_memory_used@@Base+0x738>
  4178d0:	lsl	x2, x1, #1
  4178d4:	str	x2, [x19]
  4178d8:	lsl	x1, x1, #4
  4178dc:	bl	402550 <realloc@plt>
  4178e0:	cbz	x0, 4178f0 <_obstack_memory_used@@Base+0x828>
  4178e4:	str	x0, [x19, #16]
  4178e8:	ldr	x1, [x19, #8]
  4178ec:	b	41784c <_obstack_memory_used@@Base+0x784>
  4178f0:	mov	w0, #0x0                   	// #0
  4178f4:	b	417800 <_obstack_memory_used@@Base+0x738>
  4178f8:	stp	x29, x30, [sp, #-64]!
  4178fc:	mov	x29, sp
  417900:	stp	x19, x20, [sp, #16]
  417904:	mov	x20, x1
  417908:	ldr	x19, [x1, #16]
  41790c:	str	x23, [sp, #48]
  417910:	mov	x23, x1
  417914:	stp	x21, x22, [sp, #32]
  417918:	mov	x22, x2
  41791c:	mov	x21, x0
  417920:	lsl	x0, x19, #3
  417924:	str	x2, [x23], #32
  417928:	str	x19, [x1, #32]
  41792c:	str	xzr, [x23, #8]
  417930:	bl	402440 <malloc@plt>
  417934:	str	x0, [x23, #16]
  417938:	cbz	x0, 417984 <_obstack_memory_used@@Base+0x8bc>
  41793c:	cmp	x19, #0x0
  417940:	mov	x19, #0x0                   	// #0
  417944:	b.gt	417958 <_obstack_memory_used@@Base+0x890>
  417948:	b	41799c <_obstack_memory_used@@Base+0x8d4>
  41794c:	ldr	x1, [x20, #16]
  417950:	cmp	x1, x19
  417954:	b.le	41799c <_obstack_memory_used@@Base+0x8d4>
  417958:	ldr	x1, [x20, #24]
  41795c:	ldr	x3, [x21]
  417960:	ldr	x1, [x1, x19, lsl #3]
  417964:	add	x19, x19, #0x1
  417968:	add	x3, x3, x1, lsl #4
  41796c:	ldrb	w3, [x3, #8]
  417970:	tbnz	w3, #3, 41794c <_obstack_memory_used@@Base+0x884>
  417974:	mov	x0, x23
  417978:	bl	417750 <_obstack_memory_used@@Base+0x688>
  41797c:	tst	w0, #0xff
  417980:	b.ne	41794c <_obstack_memory_used@@Base+0x884>  // b.any
  417984:	mov	w0, #0xc                   	// #12
  417988:	ldp	x19, x20, [sp, #16]
  41798c:	ldp	x21, x22, [sp, #32]
  417990:	ldr	x23, [sp, #48]
  417994:	ldp	x29, x30, [sp], #64
  417998:	ret
  41799c:	ldr	x19, [x21, #136]
  4179a0:	ldr	x21, [x21, #64]
  4179a4:	and	x22, x22, x19
  4179a8:	add	x22, x22, x22, lsl #1
  4179ac:	lsl	x19, x22, #3
  4179b0:	add	x22, x21, x19
  4179b4:	ldr	x2, [x21, x19]
  4179b8:	ldp	x0, x3, [x22, #8]
  4179bc:	add	x1, x2, #0x1
  4179c0:	cmp	x0, x2
  4179c4:	b.le	4179e8 <_obstack_memory_used@@Base+0x920>
  4179c8:	str	x1, [x21, x19]
  4179cc:	mov	w0, #0x0                   	// #0
  4179d0:	str	x20, [x3, x2, lsl #3]
  4179d4:	ldp	x19, x20, [sp, #16]
  4179d8:	ldp	x21, x22, [sp, #32]
  4179dc:	ldr	x23, [sp, #48]
  4179e0:	ldp	x29, x30, [sp], #64
  4179e4:	ret
  4179e8:	mov	x0, x3
  4179ec:	lsl	x23, x1, #1
  4179f0:	lsl	x1, x1, #4
  4179f4:	bl	402550 <realloc@plt>
  4179f8:	mov	x3, x0
  4179fc:	cbz	x0, 417984 <_obstack_memory_used@@Base+0x8bc>
  417a00:	ldr	x2, [x21, x19]
  417a04:	stp	x23, x0, [x22, #8]
  417a08:	add	x1, x2, #0x1
  417a0c:	b	4179c8 <_obstack_memory_used@@Base+0x900>
  417a10:	stp	x29, x30, [sp, #-48]!
  417a14:	mov	x29, sp
  417a18:	stp	x19, x20, [sp, #16]
  417a1c:	mov	x20, x0
  417a20:	ldr	x19, [x0, #48]
  417a24:	str	x21, [sp, #32]
  417a28:	ldr	x21, [x0, #64]
  417a2c:	ldr	x0, [x0, #88]
  417a30:	cmp	x21, x0
  417a34:	csel	x21, x21, x0, le
  417a38:	cmp	x21, x19
  417a3c:	b.le	417a98 <_obstack_memory_used@@Base+0x9d0>
  417a40:	bl	402560 <__ctype_toupper_loc@plt>
  417a44:	nop
  417a48:	ldr	x1, [x20]
  417a4c:	ldr	x3, [x20, #40]
  417a50:	add	x1, x1, x19
  417a54:	ldr	x2, [x20, #120]
  417a58:	ldrb	w1, [x1, x3]
  417a5c:	cbnz	x2, 417a90 <_obstack_memory_used@@Base+0x9c8>
  417a60:	ldr	x3, [x0]
  417a64:	ldr	x2, [x20, #8]
  417a68:	ldr	w1, [x3, x1, lsl #2]
  417a6c:	strb	w1, [x2, x19]
  417a70:	add	x19, x19, #0x1
  417a74:	cmp	x21, x19
  417a78:	b.ne	417a48 <_obstack_memory_used@@Base+0x980>  // b.any
  417a7c:	stp	x21, x21, [x20, #48]
  417a80:	ldp	x19, x20, [sp, #16]
  417a84:	ldr	x21, [sp, #32]
  417a88:	ldp	x29, x30, [sp], #48
  417a8c:	ret
  417a90:	ldrb	w1, [x2, x1]
  417a94:	b	417a60 <_obstack_memory_used@@Base+0x998>
  417a98:	mov	x21, x19
  417a9c:	stp	x21, x21, [x20, #48]
  417aa0:	ldp	x19, x20, [sp, #16]
  417aa4:	ldr	x21, [sp, #32]
  417aa8:	ldp	x29, x30, [sp], #48
  417aac:	ret
  417ab0:	stp	x29, x30, [sp, #-144]!
  417ab4:	mov	x29, sp
  417ab8:	stp	x19, x20, [sp, #16]
  417abc:	mov	x19, x0
  417ac0:	stp	x23, x24, [sp, #48]
  417ac4:	ldr	x24, [x0, #64]
  417ac8:	ldr	x0, [x0, #88]
  417acc:	ldr	x20, [x19, #48]
  417ad0:	cmp	x24, x0
  417ad4:	csel	x24, x24, x0, le
  417ad8:	cmp	x24, x20
  417adc:	b.le	417b7c <_obstack_memory_used@@Base+0xab4>
  417ae0:	stp	x21, x22, [sp, #32]
  417ae4:	add	x22, x19, #0x20
  417ae8:	mov	w21, #0xffffffff            	// #-1
  417aec:	nop
  417af0:	ldr	x4, [x19, #120]
  417af4:	sub	x2, x24, x20
  417af8:	ldr	x23, [x19, #32]
  417afc:	cbnz	x4, 417bd8 <_obstack_memory_used@@Base+0xb10>
  417b00:	ldr	x0, [x19, #40]
  417b04:	ldr	x1, [x19]
  417b08:	add	x0, x20, x0
  417b0c:	add	x1, x1, x0
  417b10:	mov	x3, x22
  417b14:	add	x0, sp, #0x4c
  417b18:	bl	416cf8 <wcrtomb@plt+0x143d8>
  417b1c:	sub	x1, x0, #0x1
  417b20:	cmn	x1, #0x3
  417b24:	b.hi	417b90 <_obstack_memory_used@@Base+0xac8>  // b.pmore
  417b28:	cmn	x0, #0x2
  417b2c:	b.eq	417c54 <_obstack_memory_used@@Base+0xb8c>  // b.none
  417b30:	ldr	x1, [x19, #16]
  417b34:	add	x0, x20, x0
  417b38:	ldr	w3, [sp, #76]
  417b3c:	add	x4, x20, #0x1
  417b40:	lsl	x2, x20, #2
  417b44:	cmp	x4, x0
  417b48:	str	w3, [x1, x20, lsl #2]
  417b4c:	b.ge	417bd0 <_obstack_memory_used@@Base+0xb08>  // b.tcont
  417b50:	add	x3, x2, #0x4
  417b54:	add	x2, x1, x0, lsl #2
  417b58:	add	x1, x1, x3
  417b5c:	nop
  417b60:	str	w21, [x1], #4
  417b64:	cmp	x2, x1
  417b68:	b.ne	417b60 <_obstack_memory_used@@Base+0xa98>  // b.any
  417b6c:	mov	x20, x0
  417b70:	cmp	x20, x24
  417b74:	b.lt	417af0 <_obstack_memory_used@@Base+0xa28>  // b.tstop
  417b78:	ldp	x21, x22, [sp, #32]
  417b7c:	ldp	x23, x24, [sp, #48]
  417b80:	stp	x20, x20, [x19, #48]
  417b84:	ldp	x19, x20, [sp, #16]
  417b88:	ldp	x29, x30, [sp], #144
  417b8c:	ret
  417b90:	ldr	x0, [x19]
  417b94:	ldr	x2, [x19, #40]
  417b98:	add	x0, x0, x20
  417b9c:	ldr	x1, [x19, #120]
  417ba0:	ldrb	w3, [x0, x2]
  417ba4:	str	w3, [sp, #76]
  417ba8:	cbnz	x1, 417c80 <_obstack_memory_used@@Base+0xbb8>
  417bac:	ldr	x1, [x19, #16]
  417bb0:	str	x23, [x19, #32]
  417bb4:	add	x4, x20, #0x1
  417bb8:	mov	x0, #0x1                   	// #1
  417bbc:	add	x0, x20, x0
  417bc0:	lsl	x2, x20, #2
  417bc4:	str	w3, [x1, x20, lsl #2]
  417bc8:	cmp	x4, x0
  417bcc:	b.lt	417b50 <_obstack_memory_used@@Base+0xa88>  // b.tstop
  417bd0:	mov	x20, x4
  417bd4:	b	417b70 <_obstack_memory_used@@Base+0xaa8>
  417bd8:	ldr	w0, [x19, #144]
  417bdc:	cmp	w0, #0x0
  417be0:	b.le	417c4c <_obstack_memory_used@@Base+0xb84>
  417be4:	cmp	x2, #0x0
  417be8:	b.le	417c4c <_obstack_memory_used@@Base+0xb84>
  417bec:	mov	x1, #0x1                   	// #1
  417bf0:	b	417c04 <_obstack_memory_used@@Base+0xb3c>
  417bf4:	cmp	x2, x1
  417bf8:	b.eq	417c4c <_obstack_memory_used@@Base+0xb84>  // b.none
  417bfc:	ldr	x4, [x19, #120]
  417c00:	mov	x1, x7
  417c04:	ldr	x0, [x19]
  417c08:	add	x3, sp, #0x50
  417c0c:	add	x5, x3, x1
  417c10:	add	x7, x1, #0x1
  417c14:	ldr	x3, [x19, #40]
  417c18:	add	x0, x0, x20
  417c1c:	add	x0, x0, x1
  417c20:	add	x0, x0, x3
  417c24:	ldr	x3, [x19, #8]
  417c28:	ldurb	w6, [x0, #-1]
  417c2c:	add	x0, x3, x20
  417c30:	add	x0, x0, x1
  417c34:	ldrb	w3, [x4, x6]
  417c38:	sturb	w3, [x0, #-1]
  417c3c:	sturb	w3, [x5, #-1]
  417c40:	ldr	w0, [x19, #144]
  417c44:	cmp	w0, w1
  417c48:	b.gt	417bf4 <_obstack_memory_used@@Base+0xb2c>
  417c4c:	add	x1, sp, #0x50
  417c50:	b	417b10 <_obstack_memory_used@@Base+0xa48>
  417c54:	ldr	x1, [x19, #64]
  417c58:	ldr	x0, [x19, #88]
  417c5c:	cmp	x1, x0
  417c60:	b.ge	417b90 <_obstack_memory_used@@Base+0xac8>  // b.tcont
  417c64:	ldp	x21, x22, [sp, #32]
  417c68:	str	x23, [x19, #32]
  417c6c:	ldp	x23, x24, [sp, #48]
  417c70:	stp	x20, x20, [x19, #48]
  417c74:	ldp	x19, x20, [sp, #16]
  417c78:	ldp	x29, x30, [sp], #144
  417c7c:	ret
  417c80:	and	x3, x3, #0xff
  417c84:	ldrb	w3, [x1, x3]
  417c88:	str	w3, [sp, #76]
  417c8c:	b	417bac <_obstack_memory_used@@Base+0xae4>
  417c90:	stp	x29, x30, [sp, #-192]!
  417c94:	mov	x29, sp
  417c98:	stp	x19, x20, [sp, #16]
  417c9c:	mov	x19, x0
  417ca0:	stp	x21, x22, [sp, #32]
  417ca4:	ldrb	w1, [x0, #138]
  417ca8:	ldr	x21, [x0, #64]
  417cac:	ldr	x0, [x0, #88]
  417cb0:	ldr	x20, [x19, #48]
  417cb4:	cmp	x21, x0
  417cb8:	csel	x21, x21, x0, le
  417cbc:	cbnz	w1, 417cc8 <_obstack_memory_used@@Base+0xc00>
  417cc0:	ldr	x0, [x19, #120]
  417cc4:	cbz	x0, 417e18 <_obstack_memory_used@@Base+0xd50>
  417cc8:	ldr	x22, [x19, #56]
  417ccc:	cmp	x21, x20
  417cd0:	b.le	417e00 <_obstack_memory_used@@Base+0xd38>
  417cd4:	stp	x23, x24, [sp, #48]
  417cd8:	add	x24, x19, #0x20
  417cdc:	add	x0, sp, #0x74
  417ce0:	stp	x25, x26, [sp, #64]
  417ce4:	sub	x26, x21, x20
  417ce8:	stp	x27, x28, [sp, #80]
  417cec:	str	x0, [sp, #104]
  417cf0:	ldr	x2, [x19, #120]
  417cf4:	ldr	x0, [x19, #32]
  417cf8:	str	x0, [sp, #120]
  417cfc:	cbnz	x2, 417ff8 <_obstack_memory_used@@Base+0xf30>
  417d00:	ldr	x0, [x19, #40]
  417d04:	ldr	x25, [x19]
  417d08:	add	x0, x22, x0
  417d0c:	add	x25, x25, x0
  417d10:	ldr	x0, [sp, #104]
  417d14:	mov	x3, x24
  417d18:	mov	x2, x26
  417d1c:	mov	x1, x25
  417d20:	bl	416cf8 <wcrtomb@plt+0x143d8>
  417d24:	sub	x28, x0, #0x1
  417d28:	mov	x23, x0
  417d2c:	cmn	x28, #0x4
  417d30:	b.hi	41808c <_obstack_memory_used@@Base+0xfc4>  // b.pmore
  417d34:	ldr	w27, [sp, #116]
  417d38:	mov	x26, x20
  417d3c:	mov	w0, w27
  417d40:	bl	402830 <towupper@plt>
  417d44:	mov	w24, w0
  417d48:	cmp	w27, w0
  417d4c:	b.eq	418064 <_obstack_memory_used@@Base+0xf9c>  // b.none
  417d50:	add	x3, sp, #0x80
  417d54:	add	x2, sp, #0x78
  417d58:	mov	x0, x3
  417d5c:	mov	w1, w24
  417d60:	str	x3, [sp, #104]
  417d64:	bl	402920 <wcrtomb@plt>
  417d68:	mov	x27, x0
  417d6c:	cmp	x23, x0
  417d70:	ldr	x3, [sp, #104]
  417d74:	b.ne	418128 <_obstack_memory_used@@Base+0x1060>  // b.any
  417d78:	ldr	x0, [x19, #8]
  417d7c:	mov	x1, x3
  417d80:	mov	x2, x23
  417d84:	add	x0, x0, x20
  417d88:	bl	4022a0 <memcpy@plt>
  417d8c:	ldrb	w0, [x19, #140]
  417d90:	cbnz	w0, 418100 <_obstack_memory_used@@Base+0x1038>
  417d94:	add	x0, x23, x22
  417d98:	ldr	x1, [x19, #16]
  417d9c:	add	x20, x20, #0x1
  417da0:	add	x23, x23, x26
  417da4:	mov	x22, x0
  417da8:	cmp	x20, x23
  417dac:	lsl	x0, x26, #2
  417db0:	str	w24, [x1, x26, lsl #2]
  417db4:	b.ge	41807c <_obstack_memory_used@@Base+0xfb4>  // b.tcont
  417db8:	add	x0, x0, #0x4
  417dbc:	add	x2, x1, x23, lsl #2
  417dc0:	add	x0, x1, x0
  417dc4:	mov	w1, #0xffffffff            	// #-1
  417dc8:	str	w1, [x0], #4
  417dcc:	cmp	x2, x0
  417dd0:	b.ne	417dc8 <_obstack_memory_used@@Base+0xd00>  // b.any
  417dd4:	mov	x20, x23
  417dd8:	ldp	x23, x24, [sp, #48]
  417ddc:	ldp	x25, x26, [sp, #64]
  417de0:	ldp	x27, x28, [sp, #80]
  417de4:	b	417ccc <_obstack_memory_used@@Base+0xc04>
  417de8:	ldr	x0, [sp, #120]
  417dec:	ldp	x23, x24, [sp, #48]
  417df0:	ldp	x25, x26, [sp, #64]
  417df4:	ldp	x27, x28, [sp, #80]
  417df8:	str	x0, [x19, #32]
  417dfc:	nop
  417e00:	mov	w0, #0x0                   	// #0
  417e04:	stp	x20, x22, [x19, #48]
  417e08:	ldp	x19, x20, [sp, #16]
  417e0c:	ldp	x21, x22, [sp, #32]
  417e10:	ldp	x29, x30, [sp], #192
  417e14:	ret
  417e18:	ldrb	w0, [x19, #140]
  417e1c:	cbnz	w0, 417cc8 <_obstack_memory_used@@Base+0xc00>
  417e20:	cmp	x20, x21
  417e24:	b.ge	417f34 <_obstack_memory_used@@Base+0xe6c>  // b.tcont
  417e28:	stp	x23, x24, [sp, #48]
  417e2c:	add	x24, x19, #0x20
  417e30:	mov	w23, #0xffffffff            	// #-1
  417e34:	stp	x25, x26, [sp, #64]
  417e38:	stp	x27, x28, [sp, #80]
  417e3c:	nop
  417e40:	mov	x25, x20
  417e44:	ldr	x27, [x19]
  417e48:	ldr	x22, [x19, #40]
  417e4c:	add	x0, x27, x22
  417e50:	ldrb	w26, [x0, x20]
  417e54:	tbnz	w26, #7, 417e64 <_obstack_memory_used@@Base+0xd9c>
  417e58:	mov	x0, x24
  417e5c:	bl	402610 <mbsinit@plt>
  417e60:	cbnz	w0, 417f60 <_obstack_memory_used@@Base+0xe98>
  417e64:	ldr	x4, [x19, #32]
  417e68:	add	x22, x22, x20
  417e6c:	sub	x26, x21, x20
  417e70:	add	x1, x27, x22
  417e74:	mov	x2, x26
  417e78:	mov	x3, x24
  417e7c:	add	x0, sp, #0x74
  417e80:	str	x4, [sp, #120]
  417e84:	bl	416cf8 <wcrtomb@plt+0x143d8>
  417e88:	mov	x22, x0
  417e8c:	add	x0, sp, #0x74
  417e90:	str	x0, [sp, #104]
  417e94:	sub	x0, x22, #0x1
  417e98:	cmn	x0, #0x4
  417e9c:	b.hi	417f88 <_obstack_memory_used@@Base+0xec0>  // b.pmore
  417ea0:	ldr	w28, [sp, #116]
  417ea4:	mov	w0, w28
  417ea8:	bl	402830 <towupper@plt>
  417eac:	mov	w27, w0
  417eb0:	cmp	w28, w0
  417eb4:	b.eq	417f40 <_obstack_memory_used@@Base+0xe78>  // b.none
  417eb8:	mov	w1, w0
  417ebc:	add	x2, sp, #0x78
  417ec0:	add	x0, sp, #0x80
  417ec4:	bl	402920 <wcrtomb@plt>
  417ec8:	cmp	x22, x0
  417ecc:	b.ne	41805c <_obstack_memory_used@@Base+0xf94>  // b.any
  417ed0:	ldr	x0, [x19, #8]
  417ed4:	mov	x2, x22
  417ed8:	add	x1, sp, #0x80
  417edc:	add	x0, x0, x20
  417ee0:	bl	4022a0 <memcpy@plt>
  417ee4:	ldr	x1, [x19, #16]
  417ee8:	add	x20, x20, #0x1
  417eec:	add	x22, x22, x25
  417ef0:	lsl	x0, x25, #2
  417ef4:	cmp	x20, x22
  417ef8:	str	w27, [x1, x25, lsl #2]
  417efc:	b.ge	417f20 <_obstack_memory_used@@Base+0xe58>  // b.tcont
  417f00:	add	x2, x0, #0x4
  417f04:	add	x0, x1, x22, lsl #2
  417f08:	add	x1, x1, x2
  417f0c:	nop
  417f10:	str	w23, [x1], #4
  417f14:	cmp	x0, x1
  417f18:	b.ne	417f10 <_obstack_memory_used@@Base+0xe48>  // b.any
  417f1c:	mov	x20, x22
  417f20:	cmp	x20, x21
  417f24:	b.lt	417e40 <_obstack_memory_used@@Base+0xd78>  // b.tstop
  417f28:	ldp	x23, x24, [sp, #48]
  417f2c:	ldp	x25, x26, [sp, #64]
  417f30:	ldp	x27, x28, [sp, #80]
  417f34:	mov	w0, #0x0                   	// #0
  417f38:	stp	x20, x20, [x19, #48]
  417f3c:	b	417e08 <_obstack_memory_used@@Base+0xd40>
  417f40:	ldp	x3, x0, [x19]
  417f44:	mov	x2, x22
  417f48:	ldr	x1, [x19, #40]
  417f4c:	add	x1, x20, x1
  417f50:	add	x1, x3, x1
  417f54:	add	x0, x0, x20
  417f58:	bl	4022a0 <memcpy@plt>
  417f5c:	b	417ee4 <_obstack_memory_used@@Base+0xe1c>
  417f60:	bl	402560 <__ctype_toupper_loc@plt>
  417f64:	ldr	x0, [x0]
  417f68:	ldr	x1, [x19, #8]
  417f6c:	ldr	w0, [x0, x26, lsl #2]
  417f70:	strb	w0, [x1, x20]
  417f74:	ldp	x1, x0, [x19, #8]
  417f78:	ldrb	w1, [x1, x20]
  417f7c:	str	w1, [x0, x20, lsl #2]
  417f80:	add	x20, x20, #0x1
  417f84:	b	417f20 <_obstack_memory_used@@Base+0xe58>
  417f88:	cmn	x0, #0x3
  417f8c:	b.eq	417fc4 <_obstack_memory_used@@Base+0xefc>  // b.none
  417f90:	ldp	x0, x1, [x19]
  417f94:	cmn	x22, #0x1
  417f98:	ldr	x2, [x19, #40]
  417f9c:	add	x0, x0, x20
  417fa0:	ldrb	w0, [x0, x2]
  417fa4:	strb	w0, [x1, x20]
  417fa8:	add	x20, x20, #0x1
  417fac:	ldr	x1, [x19, #16]
  417fb0:	str	w0, [x1, x25, lsl #2]
  417fb4:	b.ne	417f20 <_obstack_memory_used@@Base+0xe58>  // b.any
  417fb8:	ldr	x0, [sp, #120]
  417fbc:	str	x0, [x19, #32]
  417fc0:	b	417f20 <_obstack_memory_used@@Base+0xe58>
  417fc4:	ldr	x1, [x19, #64]
  417fc8:	ldr	x0, [x19, #88]
  417fcc:	cmp	x1, x0
  417fd0:	b.lt	418214 <_obstack_memory_used@@Base+0x114c>  // b.tstop
  417fd4:	ldp	x0, x1, [x19]
  417fd8:	ldr	x2, [x19, #40]
  417fdc:	add	x0, x0, x20
  417fe0:	ldrb	w0, [x0, x2]
  417fe4:	strb	w0, [x1, x20]
  417fe8:	add	x20, x20, #0x1
  417fec:	ldr	x1, [x19, #16]
  417ff0:	str	w0, [x1, x25, lsl #2]
  417ff4:	b	417f20 <_obstack_memory_used@@Base+0xe58>
  417ff8:	ldr	w7, [x19, #144]
  417ffc:	cmp	w7, #0x0
  418000:	b.le	418258 <_obstack_memory_used@@Base+0x1190>
  418004:	cmp	x26, #0x0
  418008:	b.le	418258 <_obstack_memory_used@@Base+0x1190>
  41800c:	ldr	x1, [x19, #40]
  418010:	add	x3, sp, #0x80
  418014:	ldr	x6, [x19]
  418018:	add	x1, x22, x1
  41801c:	sub	x1, x1, #0x1
  418020:	mov	x0, #0x1                   	// #1
  418024:	add	x6, x6, x1
  418028:	b	418038 <_obstack_memory_used@@Base+0xf70>
  41802c:	cmp	x26, x0
  418030:	mov	x0, x4
  418034:	b.eq	418054 <_obstack_memory_used@@Base+0xf8c>  // b.none
  418038:	ldrb	w5, [x6, x0]
  41803c:	add	x1, x3, x0
  418040:	cmp	w7, w0
  418044:	add	x4, x0, #0x1
  418048:	ldrb	w5, [x2, x5]
  41804c:	sturb	w5, [x1, #-1]
  418050:	b.gt	41802c <_obstack_memory_used@@Base+0xf64>
  418054:	mov	x25, x3
  418058:	b	417d10 <_obstack_memory_used@@Base+0xc48>
  41805c:	mov	x22, x20
  418060:	b	417cf0 <_obstack_memory_used@@Base+0xc28>
  418064:	ldr	x0, [x19, #8]
  418068:	mov	x1, x25
  41806c:	mov	x2, x23
  418070:	add	x0, x0, x20
  418074:	bl	4022a0 <memcpy@plt>
  418078:	b	417d8c <_obstack_memory_used@@Base+0xcc4>
  41807c:	ldp	x23, x24, [sp, #48]
  418080:	ldp	x25, x26, [sp, #64]
  418084:	ldp	x27, x28, [sp, #80]
  418088:	b	417ccc <_obstack_memory_used@@Base+0xc04>
  41808c:	cmn	x28, #0x3
  418090:	b.ne	4180a4 <_obstack_memory_used@@Base+0xfdc>  // b.any
  418094:	ldr	x1, [x19, #64]
  418098:	ldr	x0, [x19, #88]
  41809c:	cmp	x1, x0
  4180a0:	b.lt	417de8 <_obstack_memory_used@@Base+0xd20>  // b.tstop
  4180a4:	ldr	x0, [x19]
  4180a8:	ldr	x2, [x19, #40]
  4180ac:	add	x0, x0, x22
  4180b0:	ldr	x1, [x19, #120]
  4180b4:	ldrb	w0, [x0, x2]
  4180b8:	cbnz	x1, 418270 <_obstack_memory_used@@Base+0x11a8>
  4180bc:	ldr	x1, [x19, #8]
  4180c0:	mov	x2, x20
  4180c4:	strb	w0, [x1, x20]
  4180c8:	ldrb	w1, [x19, #140]
  4180cc:	cbnz	w1, 418264 <_obstack_memory_used@@Base+0x119c>
  4180d0:	ldr	x1, [x19, #16]
  4180d4:	add	x22, x22, #0x1
  4180d8:	add	x20, x20, #0x1
  4180dc:	cmn	x23, #0x1
  4180e0:	str	w0, [x1, x2, lsl #2]
  4180e4:	b.ne	41807c <_obstack_memory_used@@Base+0xfb4>  // b.any
  4180e8:	ldr	x0, [sp, #120]
  4180ec:	ldp	x23, x24, [sp, #48]
  4180f0:	ldp	x25, x26, [sp, #64]
  4180f4:	ldp	x27, x28, [sp, #80]
  4180f8:	str	x0, [x19, #32]
  4180fc:	b	417ccc <_obstack_memory_used@@Base+0xc04>
  418100:	ldr	x1, [x19, #24]
  418104:	neg	x2, x22, lsl #3
  418108:	add	x2, x2, x20, lsl #3
  41810c:	add	x0, x23, x22
  418110:	add	x1, x1, x2
  418114:	str	x22, [x1, x22, lsl #3]
  418118:	add	x22, x22, #0x1
  41811c:	cmp	x0, x22
  418120:	b.ne	418114 <_obstack_memory_used@@Base+0x104c>  // b.any
  418124:	b	417d98 <_obstack_memory_used@@Base+0xcd0>
  418128:	cmn	x0, #0x1
  41812c:	b.eq	418064 <_obstack_memory_used@@Base+0xf9c>  // b.none
  418130:	add	x25, x0, x20
  418134:	ldr	x0, [x19, #64]
  418138:	cmp	x25, x0
  41813c:	b.hi	417de8 <_obstack_memory_used@@Base+0xd20>  // b.pmore
  418140:	ldr	x1, [x19, #24]
  418144:	cbz	x1, 41822c <_obstack_memory_used@@Base+0x1164>
  418148:	ldrb	w0, [x19, #140]
  41814c:	cbnz	w0, 418174 <_obstack_memory_used@@Base+0x10ac>
  418150:	cbz	x20, 41816c <_obstack_memory_used@@Base+0x10a4>
  418154:	ldr	x1, [x19, #24]
  418158:	mov	x0, #0x0                   	// #0
  41815c:	str	x0, [x1, x0, lsl #3]
  418160:	add	x0, x0, #0x1
  418164:	cmp	x0, x20
  418168:	b.ne	41815c <_obstack_memory_used@@Base+0x1094>  // b.any
  41816c:	mov	w0, #0x1                   	// #1
  418170:	strb	w0, [x19, #140]
  418174:	ldr	x0, [x19, #8]
  418178:	mov	x1, x3
  41817c:	mov	x2, x27
  418180:	add	x0, x0, x20
  418184:	bl	4022a0 <memcpy@plt>
  418188:	ldp	x2, x1, [x19, #16]
  41818c:	str	w24, [x2, x20, lsl #2]
  418190:	cmp	x27, #0x1
  418194:	mov	x0, #0x1                   	// #1
  418198:	mov	w4, #0xffffffff            	// #-1
  41819c:	str	x22, [x1, x20, lsl #3]
  4181a0:	add	x2, x2, x20, lsl #2
  4181a4:	add	x1, x1, x20, lsl #3
  4181a8:	b.ls	4181cc <_obstack_memory_used@@Base+0x1104>  // b.plast
  4181ac:	cmp	x0, x23
  4181b0:	csel	x3, x28, x0, cs  // cs = hs, nlast
  4181b4:	add	x3, x3, x22
  4181b8:	str	x3, [x1, x0, lsl #3]
  4181bc:	str	w4, [x2, x0, lsl #2]
  4181c0:	add	x0, x0, #0x1
  4181c4:	cmp	x27, x0
  4181c8:	b.ne	4181ac <_obstack_memory_used@@Base+0x10e4>  // b.any
  4181cc:	ldp	x0, x1, [x19, #88]
  4181d0:	sub	x27, x27, x23
  4181d4:	add	x0, x27, x0
  4181d8:	str	x0, [x19, #88]
  4181dc:	cmp	x22, x1
  4181e0:	b.ge	4181f0 <_obstack_memory_used@@Base+0x1128>  // b.tcont
  4181e4:	ldr	x1, [x19, #104]
  4181e8:	add	x27, x1, x27
  4181ec:	str	x27, [x19, #104]
  4181f0:	ldr	x21, [x19, #64]
  4181f4:	mov	x20, x25
  4181f8:	add	x22, x23, x22
  4181fc:	cmp	x21, x0
  418200:	csel	x21, x21, x0, le
  418204:	ldp	x23, x24, [sp, #48]
  418208:	ldp	x25, x26, [sp, #64]
  41820c:	ldp	x27, x28, [sp, #80]
  418210:	b	417ccc <_obstack_memory_used@@Base+0xc04>
  418214:	ldr	x0, [sp, #120]
  418218:	ldp	x23, x24, [sp, #48]
  41821c:	ldp	x25, x26, [sp, #64]
  418220:	ldp	x27, x28, [sp, #80]
  418224:	str	x0, [x19, #32]
  418228:	b	417f34 <_obstack_memory_used@@Base+0xe6c>
  41822c:	lsl	x0, x0, #3
  418230:	str	x3, [sp, #104]
  418234:	bl	402440 <malloc@plt>
  418238:	str	x0, [x19, #24]
  41823c:	ldr	x3, [sp, #104]
  418240:	cbnz	x0, 418148 <_obstack_memory_used@@Base+0x1080>
  418244:	mov	w0, #0xc                   	// #12
  418248:	ldp	x23, x24, [sp, #48]
  41824c:	ldp	x25, x26, [sp, #64]
  418250:	ldp	x27, x28, [sp, #80]
  418254:	b	417e08 <_obstack_memory_used@@Base+0xd40>
  418258:	add	x3, sp, #0x80
  41825c:	mov	x25, x3
  418260:	b	417d10 <_obstack_memory_used@@Base+0xc48>
  418264:	ldr	x1, [x19, #24]
  418268:	str	x22, [x1, x20, lsl #3]
  41826c:	b	4180d0 <_obstack_memory_used@@Base+0x1008>
  418270:	and	x0, x0, #0xff
  418274:	ldrb	w0, [x1, x0]
  418278:	b	4180bc <_obstack_memory_used@@Base+0xff4>
  41827c:	nop
  418280:	stp	x29, x30, [sp, #-32]!
  418284:	mov	x3, #0xffffffffffffffe     	// #1152921504606846974
  418288:	mov	x29, sp
  41828c:	ldr	x2, [x0, #64]
  418290:	stp	x19, x20, [sp, #16]
  418294:	cmp	x2, x3
  418298:	b.hi	4183ac <_obstack_memory_used@@Base+0x12e4>  // b.pmore
  41829c:	ldr	x3, [x0, #88]
  4182a0:	lsl	x2, x2, #1
  4182a4:	sxtw	x1, w1
  4182a8:	mov	x19, x0
  4182ac:	cmp	x2, x3
  4182b0:	csel	x2, x2, x3, le
  4182b4:	cmp	x2, x1
  4182b8:	csel	x1, x2, x1, ge  // ge = tcont
  4182bc:	bl	4176b0 <_obstack_memory_used@@Base+0x5e8>
  4182c0:	mov	w20, w0
  4182c4:	cbnz	w0, 418314 <_obstack_memory_used@@Base+0x124c>
  4182c8:	ldr	x0, [x19, #184]
  4182cc:	cbz	x0, 4182e8 <_obstack_memory_used@@Base+0x1220>
  4182d0:	ldr	x1, [x19, #64]
  4182d4:	add	x1, x1, #0x1
  4182d8:	lsl	x1, x1, #3
  4182dc:	bl	402550 <realloc@plt>
  4182e0:	cbz	x0, 4183ac <_obstack_memory_used@@Base+0x12e4>
  4182e4:	str	x0, [x19, #184]
  4182e8:	ldrb	w0, [x19, #136]
  4182ec:	ldr	w1, [x19, #144]
  4182f0:	cmp	w1, #0x1
  4182f4:	cbz	w0, 418324 <_obstack_memory_used@@Base+0x125c>
  4182f8:	mov	x0, x19
  4182fc:	b.le	418398 <_obstack_memory_used@@Base+0x12d0>
  418300:	ldp	x19, x20, [sp, #16]
  418304:	ldp	x29, x30, [sp], #32
  418308:	b	417c90 <_obstack_memory_used@@Base+0xbc8>
  41830c:	mov	x5, x1
  418310:	stp	x5, x5, [x19, #48]
  418314:	mov	w0, w20
  418318:	ldp	x19, x20, [sp, #16]
  41831c:	ldp	x29, x30, [sp], #32
  418320:	ret
  418324:	b.gt	418380 <_obstack_memory_used@@Base+0x12b8>
  418328:	ldr	x0, [x19, #120]
  41832c:	cbz	x0, 418314 <_obstack_memory_used@@Base+0x124c>
  418330:	ldr	x5, [x19, #64]
  418334:	ldr	x2, [x19, #88]
  418338:	ldr	x1, [x19, #48]
  41833c:	cmp	x5, x2
  418340:	csel	x5, x5, x2, le
  418344:	cmp	x5, x1
  418348:	b.gt	418354 <_obstack_memory_used@@Base+0x128c>
  41834c:	b	41830c <_obstack_memory_used@@Base+0x1244>
  418350:	ldr	x0, [x19, #120]
  418354:	ldp	x2, x3, [x19]
  418358:	ldr	x4, [x19, #40]
  41835c:	add	x2, x2, x1
  418360:	ldrb	w2, [x2, x4]
  418364:	ldrb	w0, [x0, x2]
  418368:	strb	w0, [x3, x1]
  41836c:	add	x1, x1, #0x1
  418370:	cmp	x5, x1
  418374:	b.ne	418350 <_obstack_memory_used@@Base+0x1288>  // b.any
  418378:	stp	x5, x5, [x19, #48]
  41837c:	b	418314 <_obstack_memory_used@@Base+0x124c>
  418380:	mov	x0, x19
  418384:	bl	417ab0 <_obstack_memory_used@@Base+0x9e8>
  418388:	mov	w0, w20
  41838c:	ldp	x19, x20, [sp, #16]
  418390:	ldp	x29, x30, [sp], #32
  418394:	ret
  418398:	bl	417a10 <_obstack_memory_used@@Base+0x948>
  41839c:	mov	w0, w20
  4183a0:	ldp	x19, x20, [sp, #16]
  4183a4:	ldp	x29, x30, [sp], #32
  4183a8:	ret
  4183ac:	mov	w20, #0xc                   	// #12
  4183b0:	mov	w0, w20
  4183b4:	ldp	x19, x20, [sp, #16]
  4183b8:	ldp	x29, x30, [sp], #32
  4183bc:	ret
  4183c0:	stp	x29, x30, [sp, #-48]!
  4183c4:	mov	x29, sp
  4183c8:	stp	x19, x20, [sp, #16]
  4183cc:	mov	x19, x0
  4183d0:	mov	x20, x1
  4183d4:	ldr	x0, [x0, #64]
  4183d8:	str	x21, [sp, #32]
  4183dc:	ldr	x21, [x19, #192]
  4183e0:	cmp	x0, x1
  4183e4:	b.gt	418420 <_obstack_memory_used@@Base+0x1358>
  4183e8:	ldr	x1, [x19, #88]
  4183ec:	cmp	x0, x1
  4183f0:	b.ge	418420 <_obstack_memory_used@@Base+0x1358>  // b.tcont
  4183f4:	add	w1, w20, #0x1
  4183f8:	mov	x0, x19
  4183fc:	bl	418280 <_obstack_memory_used@@Base+0x11b8>
  418400:	cbnz	w0, 418410 <_obstack_memory_used@@Base+0x1348>
  418404:	cmp	x21, x20
  418408:	mov	w0, #0x0                   	// #0
  41840c:	b.lt	41844c <_obstack_memory_used@@Base+0x1384>  // b.tstop
  418410:	ldp	x19, x20, [sp, #16]
  418414:	ldr	x21, [sp, #32]
  418418:	ldp	x29, x30, [sp], #48
  41841c:	ret
  418420:	ldr	x0, [x19, #48]
  418424:	cmp	x0, x20
  418428:	b.gt	418404 <_obstack_memory_used@@Base+0x133c>
  41842c:	ldr	x1, [x19, #88]
  418430:	cmp	x0, x1
  418434:	b.ge	418404 <_obstack_memory_used@@Base+0x133c>  // b.tcont
  418438:	add	w1, w20, #0x1
  41843c:	mov	x0, x19
  418440:	bl	418280 <_obstack_memory_used@@Base+0x11b8>
  418444:	cbz	w0, 418404 <_obstack_memory_used@@Base+0x133c>
  418448:	b	418410 <_obstack_memory_used@@Base+0x1348>
  41844c:	ldr	x0, [x19, #184]
  418450:	add	x3, x21, #0x1
  418454:	sub	x2, x20, x21
  418458:	mov	w1, #0x0                   	// #0
  41845c:	lsl	x2, x2, #3
  418460:	add	x0, x0, x3, lsl #3
  418464:	bl	402510 <memset@plt>
  418468:	str	x20, [x19, #192]
  41846c:	mov	w0, #0x0                   	// #0
  418470:	ldp	x19, x20, [sp, #16]
  418474:	ldr	x21, [sp, #32]
  418478:	ldp	x29, x30, [sp], #48
  41847c:	ret
  418480:	stp	x29, x30, [sp, #-32]!
  418484:	mov	x29, sp
  418488:	str	x19, [sp, #16]
  41848c:	mov	x19, x0
  418490:	ldr	x0, [x0]
  418494:	bl	4026b0 <free@plt>
  418498:	ldr	x0, [x19, #8]
  41849c:	bl	4026b0 <free@plt>
  4184a0:	ldr	x0, [x19, #16]
  4184a4:	bl	4026b0 <free@plt>
  4184a8:	ldr	x0, [x19, #24]
  4184ac:	bl	4026b0 <free@plt>
  4184b0:	mov	x0, x19
  4184b4:	ldr	x19, [sp, #16]
  4184b8:	ldp	x29, x30, [sp], #32
  4184bc:	b	4026b0 <free@plt>
  4184c0:	ldr	w1, [x0, #8]
  4184c4:	and	w1, w1, #0x7ffff
  4184c8:	and	w1, w1, #0xfffc00ff
  4184cc:	cmp	w1, #0x6
  4184d0:	b.eq	4184e0 <_obstack_memory_used@@Base+0x1418>  // b.none
  4184d4:	cmp	w1, #0x3
  4184d8:	b.eq	4184e8 <_obstack_memory_used@@Base+0x1420>  // b.none
  4184dc:	ret
  4184e0:	ldr	x0, [x0]
  4184e4:	b	418480 <_obstack_memory_used@@Base+0x13b8>
  4184e8:	ldr	x0, [x0]
  4184ec:	b	4026b0 <free@plt>
  4184f0:	stp	x29, x30, [sp, #-16]!
  4184f4:	add	x0, x1, #0x28
  4184f8:	mov	x29, sp
  4184fc:	bl	4184c0 <_obstack_memory_used@@Base+0x13f8>
  418500:	mov	w0, #0x0                   	// #0
  418504:	ldp	x29, x30, [sp], #16
  418508:	ret
  41850c:	nop
  418510:	stp	x29, x30, [sp, #-96]!
  418514:	mov	x29, sp
  418518:	stp	x21, x22, [sp, #32]
  41851c:	ldp	x21, x4, [x0, #8]
  418520:	stp	x19, x20, [sp, #16]
  418524:	mov	x19, x0
  418528:	stp	x23, x24, [sp, #48]
  41852c:	mov	x20, x2
  418530:	mov	x24, x1
  418534:	stp	x25, x26, [sp, #64]
  418538:	and	w25, w2, #0xff
  41853c:	cmp	x4, x21
  418540:	b.cs	4185ec <_obstack_memory_used@@Base+0x1524>  // b.hs, b.nlast
  418544:	ldr	x22, [x0, #24]
  418548:	ldr	x21, [x0, #40]
  41854c:	lsl	x3, x4, #4
  418550:	ldr	x5, [x19]
  418554:	and	w1, w20, #0xfffc00ff
  418558:	cmp	w25, #0x6
  41855c:	add	x2, x5, x3
  418560:	cset	w0, eq  // eq = none
  418564:	str	x24, [x5, x3]
  418568:	cmp	w25, #0x5
  41856c:	str	x20, [x2, #8]
  418570:	str	w1, [x2, #8]
  418574:	b.ne	418584 <_obstack_memory_used@@Base+0x14bc>  // b.any
  418578:	ldr	w0, [x19, #180]
  41857c:	cmp	w0, #0x1
  418580:	cset	w0, gt
  418584:	ldrb	w1, [x2, #10]
  418588:	mov	x3, #0xffffffffffffffff    	// #-1
  41858c:	bfi	w1, w0, #4, #1
  418590:	strb	w1, [x2, #10]
  418594:	str	x3, [x22, x4, lsl #3]
  418598:	ldr	x0, [x19, #16]
  41859c:	add	x0, x0, x0, lsl #1
  4185a0:	add	x0, x21, x0, lsl #3
  4185a4:	stp	xzr, xzr, [x0]
  4185a8:	str	xzr, [x0, #16]
  4185ac:	ldr	x0, [x19, #16]
  4185b0:	ldr	x1, [x19, #48]
  4185b4:	add	x0, x0, x0, lsl #1
  4185b8:	add	x0, x1, x0, lsl #3
  4185bc:	stp	xzr, xzr, [x0]
  4185c0:	str	xzr, [x0, #16]
  4185c4:	ldr	x1, [x19, #16]
  4185c8:	mov	x0, x1
  4185cc:	add	x1, x1, #0x1
  4185d0:	str	x1, [x19, #16]
  4185d4:	ldp	x19, x20, [sp, #16]
  4185d8:	ldp	x21, x22, [sp, #32]
  4185dc:	ldp	x23, x24, [sp, #48]
  4185e0:	ldp	x25, x26, [sp, #64]
  4185e4:	ldp	x29, x30, [sp], #96
  4185e8:	ret
  4185ec:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4185f0:	lsl	x23, x21, #1
  4185f4:	movk	x0, #0xaaa, lsl #48
  4185f8:	cmp	x0, x21, lsl #1
  4185fc:	b.cc	418698 <_obstack_memory_used@@Base+0x15d0>  // b.lo, b.ul, b.last
  418600:	ldr	x0, [x19]
  418604:	lsl	x1, x21, #5
  418608:	bl	402550 <realloc@plt>
  41860c:	mov	x1, x0
  418610:	cbz	x0, 418698 <_obstack_memory_used@@Base+0x15d0>
  418614:	ldr	x0, [x19, #24]
  418618:	str	x27, [sp, #80]
  41861c:	str	x1, [x19]
  418620:	lsl	x26, x21, #4
  418624:	mov	x1, x26
  418628:	add	x21, x23, x21
  41862c:	bl	402550 <realloc@plt>
  418630:	mov	x22, x0
  418634:	ldr	x0, [x19, #32]
  418638:	mov	x1, x26
  41863c:	lsl	x21, x21, #4
  418640:	bl	402550 <realloc@plt>
  418644:	mov	x26, x0
  418648:	ldr	x0, [x19, #40]
  41864c:	mov	x1, x21
  418650:	bl	402550 <realloc@plt>
  418654:	mov	x1, x21
  418658:	mov	x21, x0
  41865c:	ldr	x0, [x19, #48]
  418660:	bl	402550 <realloc@plt>
  418664:	mov	x27, x0
  418668:	cmp	x22, #0x0
  41866c:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  418670:	b.eq	4186a0 <_obstack_memory_used@@Base+0x15d8>  // b.none
  418674:	cmp	x21, #0x0
  418678:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41867c:	b.eq	4186a0 <_obstack_memory_used@@Base+0x15d8>  // b.none
  418680:	str	x23, [x19, #8]
  418684:	stp	x22, x26, [x19, #24]
  418688:	stp	x21, x0, [x19, #40]
  41868c:	ldr	x4, [x19, #16]
  418690:	ldr	x27, [sp, #80]
  418694:	b	41854c <_obstack_memory_used@@Base+0x1484>
  418698:	mov	x0, #0xffffffffffffffff    	// #-1
  41869c:	b	4185d4 <_obstack_memory_used@@Base+0x150c>
  4186a0:	mov	x0, x22
  4186a4:	bl	4026b0 <free@plt>
  4186a8:	mov	x0, x26
  4186ac:	bl	4026b0 <free@plt>
  4186b0:	mov	x0, x21
  4186b4:	bl	4026b0 <free@plt>
  4186b8:	mov	x0, x27
  4186bc:	bl	4026b0 <free@plt>
  4186c0:	mov	x0, #0xffffffffffffffff    	// #-1
  4186c4:	ldr	x27, [sp, #80]
  4186c8:	b	4185d4 <_obstack_memory_used@@Base+0x150c>
  4186cc:	nop
  4186d0:	stp	x29, x30, [sp, #-48]!
  4186d4:	mov	x29, sp
  4186d8:	stp	x19, x20, [sp, #16]
  4186dc:	mov	x20, x1
  4186e0:	mov	x19, x0
  4186e4:	stp	x21, x22, [sp, #32]
  4186e8:	lsl	x21, x1, #4
  4186ec:	mov	w22, w2
  4186f0:	ldr	x1, [x0]
  4186f4:	add	x1, x1, x21
  4186f8:	ldp	x2, x3, [x1]
  4186fc:	mov	x1, x2
  418700:	mov	x2, x3
  418704:	bl	418510 <_obstack_memory_used@@Base+0x1448>
  418708:	cmn	x0, #0x1
  41870c:	b.eq	418754 <_obstack_memory_used@@Base+0x168c>  // b.none
  418710:	ldr	x3, [x19]
  418714:	and	w1, w22, #0x3ff
  418718:	add	x21, x3, x21
  41871c:	add	x3, x3, x0, lsl #4
  418720:	ldr	w4, [x3, #8]
  418724:	bfi	w4, w1, #8, #10
  418728:	str	w4, [x3, #8]
  41872c:	and	w4, w4, #0xfff800ff
  418730:	ldr	w2, [x21, #8]
  418734:	ldr	x5, [x19, #32]
  418738:	ubfx	x2, x2, #8, #10
  41873c:	orr	w2, w2, w1
  418740:	lsl	w2, w2, #8
  418744:	orr	w2, w2, #0x40000
  418748:	orr	w2, w2, w4
  41874c:	str	w2, [x3, #8]
  418750:	str	x20, [x5, x0, lsl #3]
  418754:	ldp	x19, x20, [sp, #16]
  418758:	ldp	x21, x22, [sp, #32]
  41875c:	ldp	x29, x30, [sp], #48
  418760:	ret
  418764:	nop
  418768:	stp	x29, x30, [sp, #-80]!
  41876c:	mov	x29, sp
  418770:	stp	x19, x20, [sp, #16]
  418774:	mov	x20, x0
  418778:	mov	x19, x2
  41877c:	stp	x21, x22, [sp, #32]
  418780:	mov	x21, x1
  418784:	stp	x23, x24, [sp, #48]
  418788:	mov	x24, x3
  41878c:	mov	w23, w4
  418790:	stp	x25, x26, [sp, #64]
  418794:	mov	x22, x19
  418798:	ldr	x4, [x20]
  41879c:	ldr	x0, [x20, #40]
  4187a0:	add	x3, x4, x21, lsl #4
  4187a4:	ldrb	w1, [x3, #8]
  4187a8:	cmp	w1, #0x4
  4187ac:	b.eq	418924 <_obstack_memory_used@@Base+0x185c>  // b.none
  4187b0:	add	x25, x21, x21, lsl #1
  4187b4:	lsl	x25, x25, #3
  4187b8:	add	x2, x0, x25
  4187bc:	ldr	x1, [x2, #8]
  4187c0:	cbz	x1, 4189d8 <_obstack_memory_used@@Base+0x1910>
  4187c4:	ldr	x2, [x2, #16]
  4187c8:	add	x22, x19, x19, lsl #1
  4187cc:	cmp	x1, #0x1
  4187d0:	lsl	x22, x22, #3
  4187d4:	add	x0, x0, x22
  4187d8:	ldr	x26, [x2]
  4187dc:	b.eq	4188b4 <_obstack_memory_used@@Base+0x17ec>  // b.none
  4187e0:	ldr	x3, [x20, #16]
  4187e4:	sub	x1, x3, #0x1
  4187e8:	add	x2, x4, x1, lsl #4
  4187ec:	ldrb	w5, [x2, #10]
  4187f0:	str	xzr, [x0, #8]
  4187f4:	tst	x5, #0x4
  4187f8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4187fc:	b.le	418984 <_obstack_memory_used@@Base+0x18bc>
  418800:	add	x3, x4, x3, lsl #4
  418804:	sub	x3, x3, x2
  418808:	sub	x3, x3, #0x20
  41880c:	ldr	x5, [x20, #32]
  418810:	b	41882c <_obstack_memory_used@@Base+0x1764>
  418814:	add	x2, x2, x3
  418818:	sub	x1, x1, #0x1
  41881c:	ldrb	w4, [x2, #10]
  418820:	tst	x4, #0x4
  418824:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  418828:	b.le	418984 <_obstack_memory_used@@Base+0x18bc>
  41882c:	ldr	x4, [x5, x1, lsl #3]
  418830:	cmp	x4, x26
  418834:	b.ne	418814 <_obstack_memory_used@@Base+0x174c>  // b.any
  418838:	ldr	w4, [x2, #8]
  41883c:	ubfx	x4, x4, #8, #10
  418840:	cmp	w23, w4
  418844:	b.ne	418814 <_obstack_memory_used@@Base+0x174c>  // b.any
  418848:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  41884c:	tst	w0, #0xff
  418850:	b.eq	418898 <_obstack_memory_used@@Base+0x17d0>  // b.none
  418854:	ldr	x1, [x20, #40]
  418858:	mov	w2, w23
  41885c:	mov	x0, x20
  418860:	add	x25, x1, x25
  418864:	ldr	x1, [x25, #16]
  418868:	ldr	x21, [x1, #8]
  41886c:	mov	x1, x21
  418870:	bl	4186d0 <_obstack_memory_used@@Base+0x1608>
  418874:	mov	x19, x0
  418878:	cmn	x0, #0x1
  41887c:	b.eq	418898 <_obstack_memory_used@@Base+0x17d0>  // b.none
  418880:	mov	x1, x0
  418884:	ldr	x0, [x20, #40]
  418888:	add	x0, x0, x22
  41888c:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  418890:	tst	w0, #0xff
  418894:	b.ne	418794 <_obstack_memory_used@@Base+0x16cc>  // b.any
  418898:	mov	w0, #0xc                   	// #12
  41889c:	ldp	x19, x20, [sp, #16]
  4188a0:	ldp	x21, x22, [sp, #32]
  4188a4:	ldp	x23, x24, [sp, #48]
  4188a8:	ldp	x25, x26, [sp, #64]
  4188ac:	ldp	x29, x30, [sp], #80
  4188b0:	ret
  4188b4:	str	xzr, [x0, #8]
  4188b8:	cmp	x21, x24
  4188bc:	ccmp	x21, x19, #0x4, eq  // eq = none
  4188c0:	b.ne	4189ec <_obstack_memory_used@@Base+0x1924>  // b.any
  4188c4:	ldr	w2, [x3, #8]
  4188c8:	mov	x1, x26
  4188cc:	mov	x0, x20
  4188d0:	ubfx	x2, x2, #8, #10
  4188d4:	orr	w23, w23, w2
  4188d8:	mov	w2, w23
  4188dc:	bl	4186d0 <_obstack_memory_used@@Base+0x1608>
  4188e0:	mov	x19, x0
  4188e4:	cmn	x0, #0x1
  4188e8:	b.eq	418898 <_obstack_memory_used@@Base+0x17d0>  // b.none
  4188ec:	mov	x1, x0
  4188f0:	ldr	x0, [x20, #40]
  4188f4:	add	x0, x0, x22
  4188f8:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  4188fc:	tst	w0, #0xff
  418900:	b.eq	418898 <_obstack_memory_used@@Base+0x17d0>  // b.none
  418904:	ldr	x4, [x20]
  418908:	mov	x21, x26
  41890c:	mov	x22, x19
  418910:	ldr	x0, [x20, #40]
  418914:	add	x3, x4, x21, lsl #4
  418918:	ldrb	w1, [x3, #8]
  41891c:	cmp	w1, #0x4
  418920:	b.ne	4187b0 <_obstack_memory_used@@Base+0x16e8>  // b.any
  418924:	add	x19, x19, x19, lsl #1
  418928:	lsl	x26, x21, #3
  41892c:	ldr	x3, [x20, #24]
  418930:	lsl	x25, x19, #3
  418934:	add	x1, x0, x25
  418938:	mov	w2, w23
  41893c:	mov	x0, x20
  418940:	ldr	x21, [x3, x21, lsl #3]
  418944:	str	xzr, [x1, #8]
  418948:	mov	x1, x21
  41894c:	bl	4186d0 <_obstack_memory_used@@Base+0x1608>
  418950:	mov	x19, x0
  418954:	cmn	x0, #0x1
  418958:	b.eq	418898 <_obstack_memory_used@@Base+0x17d0>  // b.none
  41895c:	ldr	x2, [x20, #24]
  418960:	mov	x1, x0
  418964:	ldr	x0, [x20, #40]
  418968:	ldr	x3, [x2, x26]
  41896c:	str	x3, [x2, x22, lsl #3]
  418970:	add	x0, x0, x25
  418974:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  418978:	tst	w0, #0xff
  41897c:	b.ne	418794 <_obstack_memory_used@@Base+0x16cc>  // b.any
  418980:	b	418898 <_obstack_memory_used@@Base+0x17d0>
  418984:	mov	w2, w23
  418988:	mov	x1, x26
  41898c:	mov	x0, x20
  418990:	bl	4186d0 <_obstack_memory_used@@Base+0x1608>
  418994:	mov	x19, x0
  418998:	cmn	x0, #0x1
  41899c:	b.eq	418898 <_obstack_memory_used@@Base+0x17d0>  // b.none
  4189a0:	ldr	x0, [x20, #40]
  4189a4:	mov	x1, x19
  4189a8:	add	x0, x0, x22
  4189ac:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  4189b0:	tst	w0, #0xff
  4189b4:	b.eq	418898 <_obstack_memory_used@@Base+0x17d0>  // b.none
  4189b8:	mov	x2, x19
  4189bc:	mov	x1, x26
  4189c0:	mov	w4, w23
  4189c4:	mov	x3, x24
  4189c8:	mov	x0, x20
  4189cc:	bl	418768 <_obstack_memory_used@@Base+0x16a0>
  4189d0:	cbz	w0, 418854 <_obstack_memory_used@@Base+0x178c>
  4189d4:	b	41889c <_obstack_memory_used@@Base+0x17d4>
  4189d8:	ldr	x1, [x20, #24]
  4189dc:	mov	w0, #0x0                   	// #0
  4189e0:	ldr	x2, [x1, x21, lsl #3]
  4189e4:	str	x2, [x1, x19, lsl #3]
  4189e8:	b	41889c <_obstack_memory_used@@Base+0x17d4>
  4189ec:	mov	x1, x26
  4189f0:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  4189f4:	tst	w0, #0xff
  4189f8:	mov	w0, #0x0                   	// #0
  4189fc:	b.ne	41889c <_obstack_memory_used@@Base+0x17d4>  // b.any
  418a00:	b	418898 <_obstack_memory_used@@Base+0x17d0>
  418a04:	nop
  418a08:	stp	x29, x30, [sp, #-32]!
  418a0c:	mov	x29, sp
  418a10:	str	x19, [sp, #16]
  418a14:	mov	x19, x0
  418a18:	ldr	x0, [x0, #48]
  418a1c:	bl	4026b0 <free@plt>
  418a20:	ldr	x0, [x19, #72]
  418a24:	bl	4026b0 <free@plt>
  418a28:	ldr	x0, [x19, #80]
  418a2c:	add	x1, x19, #0x8
  418a30:	cmp	x0, x1
  418a34:	b.eq	418a48 <_obstack_memory_used@@Base+0x1980>  // b.none
  418a38:	ldr	x0, [x0, #16]
  418a3c:	bl	4026b0 <free@plt>
  418a40:	ldr	x0, [x19, #80]
  418a44:	bl	4026b0 <free@plt>
  418a48:	ldr	x0, [x19, #24]
  418a4c:	bl	4026b0 <free@plt>
  418a50:	ldr	x0, [x19, #96]
  418a54:	bl	4026b0 <free@plt>
  418a58:	ldr	x0, [x19, #88]
  418a5c:	bl	4026b0 <free@plt>
  418a60:	mov	x0, x19
  418a64:	ldr	x19, [sp, #16]
  418a68:	ldp	x29, x30, [sp], #32
  418a6c:	b	4026b0 <free@plt>
  418a70:	stp	x29, x30, [sp, #-32]!
  418a74:	mov	x29, sp
  418a78:	str	x19, [sp, #16]
  418a7c:	mov	x19, x0
  418a80:	ldr	x0, [x0, #16]
  418a84:	bl	4026b0 <free@plt>
  418a88:	ldr	x0, [x19, #24]
  418a8c:	bl	4026b0 <free@plt>
  418a90:	ldrb	w0, [x19, #139]
  418a94:	cbnz	w0, 418aa4 <_obstack_memory_used@@Base+0x19dc>
  418a98:	ldr	x19, [sp, #16]
  418a9c:	ldp	x29, x30, [sp], #32
  418aa0:	ret
  418aa4:	ldr	x0, [x19, #8]
  418aa8:	ldr	x19, [sp, #16]
  418aac:	ldp	x29, x30, [sp], #32
  418ab0:	b	4026b0 <free@plt>
  418ab4:	nop
  418ab8:	stp	x29, x30, [sp, #-64]!
  418abc:	mov	x29, sp
  418ac0:	stp	x21, x22, [sp, #32]
  418ac4:	mov	x21, x0
  418ac8:	ldr	x0, [x0]
  418acc:	stp	x19, x20, [sp, #16]
  418ad0:	str	x23, [sp, #48]
  418ad4:	cbz	x0, 418b04 <_obstack_memory_used@@Base+0x1a3c>
  418ad8:	ldr	x1, [x21, #16]
  418adc:	cbz	x1, 418b04 <_obstack_memory_used@@Base+0x1a3c>
  418ae0:	mov	x19, #0x0                   	// #0
  418ae4:	b	418aec <_obstack_memory_used@@Base+0x1a24>
  418ae8:	ldr	x0, [x21]
  418aec:	add	x0, x0, x19, lsl #4
  418af0:	bl	4184c0 <_obstack_memory_used@@Base+0x13f8>
  418af4:	add	x19, x19, #0x1
  418af8:	ldr	x0, [x21, #16]
  418afc:	cmp	x0, x19
  418b00:	b.hi	418ae8 <_obstack_memory_used@@Base+0x1a20>  // b.pmore
  418b04:	ldr	x0, [x21, #24]
  418b08:	mov	x19, #0x0                   	// #0
  418b0c:	mov	x20, #0x0                   	// #0
  418b10:	bl	4026b0 <free@plt>
  418b14:	ldr	x0, [x21, #16]
  418b18:	cbz	x0, 418b70 <_obstack_memory_used@@Base+0x1aa8>
  418b1c:	nop
  418b20:	ldr	x0, [x21, #48]
  418b24:	add	x20, x20, #0x1
  418b28:	add	x1, x0, x19
  418b2c:	cbz	x0, 418b38 <_obstack_memory_used@@Base+0x1a70>
  418b30:	ldr	x0, [x1, #16]
  418b34:	bl	4026b0 <free@plt>
  418b38:	ldr	x0, [x21, #56]
  418b3c:	add	x1, x0, x19
  418b40:	cbz	x0, 418b4c <_obstack_memory_used@@Base+0x1a84>
  418b44:	ldr	x0, [x1, #16]
  418b48:	bl	4026b0 <free@plt>
  418b4c:	ldr	x0, [x21, #40]
  418b50:	add	x1, x0, x19
  418b54:	add	x19, x19, #0x18
  418b58:	cbz	x0, 418b64 <_obstack_memory_used@@Base+0x1a9c>
  418b5c:	ldr	x0, [x1, #16]
  418b60:	bl	4026b0 <free@plt>
  418b64:	ldr	x0, [x21, #16]
  418b68:	cmp	x0, x20
  418b6c:	b.hi	418b20 <_obstack_memory_used@@Base+0x1a58>  // b.pmore
  418b70:	ldr	x0, [x21, #40]
  418b74:	mov	x22, #0x0                   	// #0
  418b78:	mov	x23, #0x0                   	// #0
  418b7c:	bl	4026b0 <free@plt>
  418b80:	ldr	x0, [x21, #48]
  418b84:	bl	4026b0 <free@plt>
  418b88:	ldr	x0, [x21, #56]
  418b8c:	bl	4026b0 <free@plt>
  418b90:	ldr	x0, [x21]
  418b94:	bl	4026b0 <free@plt>
  418b98:	ldr	x0, [x21, #64]
  418b9c:	cbz	x0, 418bfc <_obstack_memory_used@@Base+0x1b34>
  418ba0:	ldr	x1, [x0, x22]
  418ba4:	add	x20, x0, x22
  418ba8:	mov	x19, #0x0                   	// #0
  418bac:	cmp	x1, #0x0
  418bb0:	b.le	418bd4 <_obstack_memory_used@@Base+0x1b0c>
  418bb4:	nop
  418bb8:	ldr	x1, [x20, #16]
  418bbc:	ldr	x0, [x1, x19, lsl #3]
  418bc0:	add	x19, x19, #0x1
  418bc4:	bl	418a08 <_obstack_memory_used@@Base+0x1940>
  418bc8:	ldr	x1, [x20]
  418bcc:	cmp	x1, x19
  418bd0:	b.gt	418bb8 <_obstack_memory_used@@Base+0x1af0>
  418bd4:	ldr	x0, [x20, #16]
  418bd8:	add	x23, x23, #0x1
  418bdc:	add	x22, x22, #0x18
  418be0:	bl	4026b0 <free@plt>
  418be4:	ldr	x0, [x21, #136]
  418be8:	cmp	x0, x23
  418bec:	b.cc	418bf8 <_obstack_memory_used@@Base+0x1b30>  // b.lo, b.ul, b.last
  418bf0:	ldr	x0, [x21, #64]
  418bf4:	b	418ba0 <_obstack_memory_used@@Base+0x1ad8>
  418bf8:	ldr	x0, [x21, #64]
  418bfc:	bl	4026b0 <free@plt>
  418c00:	ldr	x0, [x21, #120]
  418c04:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  418c08:	add	x1, x1, #0x348
  418c0c:	cmp	x0, x1
  418c10:	b.eq	418c18 <_obstack_memory_used@@Base+0x1b50>  // b.none
  418c14:	bl	4026b0 <free@plt>
  418c18:	ldr	x0, [x21, #224]
  418c1c:	bl	4026b0 <free@plt>
  418c20:	mov	x0, x21
  418c24:	ldp	x19, x20, [sp, #16]
  418c28:	ldp	x21, x22, [sp, #32]
  418c2c:	ldr	x23, [sp, #48]
  418c30:	ldp	x29, x30, [sp], #64
  418c34:	b	4026b0 <free@plt>
  418c38:	stp	x29, x30, [sp, #-64]!
  418c3c:	mov	x29, sp
  418c40:	str	x23, [sp, #48]
  418c44:	mov	x23, x0
  418c48:	ldr	x0, [x0, #232]
  418c4c:	cmp	x0, #0x0
  418c50:	b.le	418ce0 <_obstack_memory_used@@Base+0x1c18>
  418c54:	stp	x19, x20, [sp, #16]
  418c58:	stp	x21, x22, [sp, #32]
  418c5c:	mov	x22, #0x0                   	// #0
  418c60:	ldr	x0, [x23, #248]
  418c64:	ldr	x21, [x0, x22, lsl #3]
  418c68:	ldr	x0, [x21, #32]
  418c6c:	cmp	x0, #0x0
  418c70:	b.le	418ca0 <_obstack_memory_used@@Base+0x1bd8>
  418c74:	mov	x19, #0x0                   	// #0
  418c78:	ldr	x1, [x21, #40]
  418c7c:	ldr	x20, [x1, x19, lsl #3]
  418c80:	add	x19, x19, #0x1
  418c84:	ldr	x0, [x20, #32]
  418c88:	bl	4026b0 <free@plt>
  418c8c:	mov	x0, x20
  418c90:	bl	4026b0 <free@plt>
  418c94:	ldr	x1, [x21, #32]
  418c98:	cmp	x1, x19
  418c9c:	b.gt	418c78 <_obstack_memory_used@@Base+0x1bb0>
  418ca0:	ldr	x0, [x21, #40]
  418ca4:	bl	4026b0 <free@plt>
  418ca8:	ldr	x0, [x21, #16]
  418cac:	cbz	x0, 418cc0 <_obstack_memory_used@@Base+0x1bf8>
  418cb0:	ldr	x0, [x0, #16]
  418cb4:	bl	4026b0 <free@plt>
  418cb8:	ldr	x0, [x21, #16]
  418cbc:	bl	4026b0 <free@plt>
  418cc0:	mov	x0, x21
  418cc4:	bl	4026b0 <free@plt>
  418cc8:	ldr	x0, [x23, #232]
  418ccc:	add	x22, x22, #0x1
  418cd0:	cmp	x0, x22
  418cd4:	b.gt	418c60 <_obstack_memory_used@@Base+0x1b98>
  418cd8:	ldp	x19, x20, [sp, #16]
  418cdc:	ldp	x21, x22, [sp, #32]
  418ce0:	str	xzr, [x23, #200]
  418ce4:	str	xzr, [x23, #232]
  418ce8:	ldr	x23, [sp, #48]
  418cec:	ldp	x29, x30, [sp], #64
  418cf0:	ret
  418cf4:	nop
  418cf8:	ldr	x3, [x0, #48]
  418cfc:	add	x1, x1, #0x1
  418d00:	cmp	x1, x3
  418d04:	b.ge	418d34 <_obstack_memory_used@@Base+0x1c6c>  // b.tcont
  418d08:	ldr	x4, [x0, #16]
  418d0c:	mov	w0, #0x1                   	// #1
  418d10:	b	418d20 <_obstack_memory_used@@Base+0x1c58>
  418d14:	add	w0, w0, #0x1
  418d18:	cmp	x1, x3
  418d1c:	b.eq	418d30 <_obstack_memory_used@@Base+0x1c68>  // b.none
  418d20:	ldr	w2, [x4, x1, lsl #2]
  418d24:	add	x1, x1, #0x1
  418d28:	cmn	w2, #0x1
  418d2c:	b.eq	418d14 <_obstack_memory_used@@Base+0x1c4c>  // b.none
  418d30:	ret
  418d34:	mov	w0, #0x1                   	// #1
  418d38:	ret
  418d3c:	nop
  418d40:	cmp	x0, #0x0
  418d44:	b.le	418d90 <_obstack_memory_used@@Base+0x1cc8>
  418d48:	sub	x3, x0, #0x1
  418d4c:	mov	x0, #0x0                   	// #0
  418d50:	ldr	x5, [x1]
  418d54:	b	418d6c <_obstack_memory_used@@Base+0x1ca4>
  418d58:	lsr	x1, x1, #1
  418d5c:	ldr	x4, [x5, x1, lsl #3]
  418d60:	cmp	x4, x2
  418d64:	b.lt	418d88 <_obstack_memory_used@@Base+0x1cc0>  // b.tstop
  418d68:	mov	x3, x1
  418d6c:	add	x1, x3, x0
  418d70:	cmp	x3, x0
  418d74:	b.hi	418d58 <_obstack_memory_used@@Base+0x1c90>  // b.pmore
  418d78:	ldr	x1, [x5, x0, lsl #3]
  418d7c:	cmp	x2, x1
  418d80:	csinc	x0, xzr, x0, ne  // ne = any
  418d84:	ret
  418d88:	add	x0, x1, #0x1
  418d8c:	b	418d6c <_obstack_memory_used@@Base+0x1ca4>
  418d90:	mov	x0, #0x0                   	// #0
  418d94:	ret
  418d98:	stp	x29, x30, [sp, #-64]!
  418d9c:	mov	x29, sp
  418da0:	stp	x19, x20, [sp, #16]
  418da4:	mov	x20, x1
  418da8:	mov	x19, x2
  418dac:	stp	x21, x22, [sp, #32]
  418db0:	mov	x21, x0
  418db4:	mov	w22, w4
  418db8:	stp	x23, x24, [sp, #48]
  418dbc:	mov	x23, x3
  418dc0:	add	x24, x1, #0x10
  418dc4:	ldr	x0, [x20, #8]
  418dc8:	mov	x2, x19
  418dcc:	mov	x1, x24
  418dd0:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  418dd4:	mov	x3, x0
  418dd8:	lsl	x2, x19, #4
  418ddc:	mov	x1, x19
  418de0:	mov	x0, x20
  418de4:	cbnz	x3, 418ea8 <_obstack_memory_used@@Base+0x1de0>
  418de8:	ldr	x3, [x21]
  418dec:	add	x4, x3, x2
  418df0:	ldrb	w4, [x4, #8]
  418df4:	cmp	w4, w22
  418df8:	b.ne	418e08 <_obstack_memory_used@@Base+0x1d40>  // b.any
  418dfc:	ldr	x2, [x3, x2]
  418e00:	cmp	x2, x23
  418e04:	b.eq	418e70 <_obstack_memory_used@@Base+0x1da8>  // b.none
  418e08:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  418e0c:	add	x19, x19, x19, lsl #1
  418e10:	tst	w0, #0xff
  418e14:	b.eq	418e90 <_obstack_memory_used@@Base+0x1dc8>  // b.none
  418e18:	ldr	x2, [x21, #40]
  418e1c:	lsl	x19, x19, #3
  418e20:	add	x2, x2, x19
  418e24:	ldr	x0, [x2, #8]
  418e28:	cmp	x0, #0x2
  418e2c:	cbz	x0, 418ea8 <_obstack_memory_used@@Base+0x1de0>
  418e30:	ldr	x2, [x2, #16]
  418e34:	b.eq	418e40 <_obstack_memory_used@@Base+0x1d78>  // b.none
  418e38:	ldr	x19, [x2]
  418e3c:	b	418dc4 <_obstack_memory_used@@Base+0x1cfc>
  418e40:	ldr	x2, [x2, #8]
  418e44:	mov	w4, w22
  418e48:	mov	x3, x23
  418e4c:	mov	x1, x20
  418e50:	mov	x0, x21
  418e54:	bl	418d98 <_obstack_memory_used@@Base+0x1cd0>
  418e58:	cbnz	w0, 418e94 <_obstack_memory_used@@Base+0x1dcc>
  418e5c:	ldr	x0, [x21, #40]
  418e60:	add	x19, x0, x19
  418e64:	ldr	x2, [x19, #16]
  418e68:	ldr	x19, [x2]
  418e6c:	b	418dc4 <_obstack_memory_used@@Base+0x1cfc>
  418e70:	cmp	w22, #0x9
  418e74:	b.ne	418ea8 <_obstack_memory_used@@Base+0x1de0>  // b.any
  418e78:	mov	x1, x19
  418e7c:	mov	x0, x20
  418e80:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  418e84:	tst	w0, #0xff
  418e88:	b.ne	418ea8 <_obstack_memory_used@@Base+0x1de0>  // b.any
  418e8c:	nop
  418e90:	mov	w0, #0xc                   	// #12
  418e94:	ldp	x19, x20, [sp, #16]
  418e98:	ldp	x21, x22, [sp, #32]
  418e9c:	ldp	x23, x24, [sp, #48]
  418ea0:	ldp	x29, x30, [sp], #64
  418ea4:	ret
  418ea8:	mov	w0, #0x0                   	// #0
  418eac:	ldp	x19, x20, [sp, #16]
  418eb0:	ldp	x21, x22, [sp, #32]
  418eb4:	ldp	x23, x24, [sp, #48]
  418eb8:	ldp	x29, x30, [sp], #64
  418ebc:	ret
  418ec0:	ldr	x3, [x0]
  418ec4:	cmp	x2, x3
  418ec8:	b.ge	418ef0 <_obstack_memory_used@@Base+0x1e28>  // b.tcont
  418ecc:	ldr	x3, [x1]
  418ed0:	add	x4, x3, #0x8
  418ed4:	nop
  418ed8:	ldr	x1, [x4, x2, lsl #3]
  418edc:	str	x1, [x3, x2, lsl #3]
  418ee0:	add	x2, x2, #0x1
  418ee4:	ldr	x1, [x0]
  418ee8:	cmp	x2, x1
  418eec:	b.lt	418ed8 <_obstack_memory_used@@Base+0x1e10>  // b.tstop
  418ef0:	ret
  418ef4:	nop
  418ef8:	ldrb	w2, [x1, #48]
  418efc:	cmp	w2, #0x4
  418f00:	b.eq	418f6c <_obstack_memory_used@@Base+0x1ea4>  // b.none
  418f04:	cmp	w2, #0x11
  418f08:	b.eq	418f14 <_obstack_memory_used@@Base+0x1e4c>  // b.none
  418f0c:	mov	w0, #0x0                   	// #0
  418f10:	ret
  418f14:	ldr	x2, [x1, #8]
  418f18:	cbz	x2, 418f0c <_obstack_memory_used@@Base+0x1e44>
  418f1c:	ldrb	w3, [x2, #48]
  418f20:	cmp	w3, #0x11
  418f24:	b.ne	418f0c <_obstack_memory_used@@Base+0x1e44>  // b.any
  418f28:	ldr	x3, [x2, #8]
  418f2c:	ldr	x2, [x2, #40]
  418f30:	str	x3, [x1, #8]
  418f34:	cbz	x3, 418f3c <_obstack_memory_used@@Base+0x1e74>
  418f38:	str	x1, [x3]
  418f3c:	ldr	x3, [x1, #40]
  418f40:	cmp	x2, #0x3f
  418f44:	ldr	x1, [x0, #224]
  418f48:	ldr	x3, [x1, x3, lsl #3]
  418f4c:	str	x3, [x1, x2, lsl #3]
  418f50:	b.gt	418f0c <_obstack_memory_used@@Base+0x1e44>
  418f54:	ldr	x3, [x0, #160]
  418f58:	mov	x1, #0x1                   	// #1
  418f5c:	lsl	x1, x1, x2
  418f60:	bic	x1, x3, x1
  418f64:	str	x1, [x0, #160]
  418f68:	b	418f0c <_obstack_memory_used@@Base+0x1e44>
  418f6c:	ldr	x4, [x0, #224]
  418f70:	cbz	x4, 418f0c <_obstack_memory_used@@Base+0x1e44>
  418f74:	ldrsw	x5, [x1, #40]
  418f78:	mov	w2, #0x1                   	// #1
  418f7c:	ldr	x3, [x0, #160]
  418f80:	ldr	x4, [x4, x5, lsl #3]
  418f84:	str	x4, [x1, #40]
  418f88:	lsl	w1, w2, w4
  418f8c:	sxtw	x1, w1
  418f90:	orr	x1, x3, x1
  418f94:	str	x1, [x0, #160]
  418f98:	mov	w0, #0x0                   	// #0
  418f9c:	ret
  418fa0:	ldrb	w0, [x1, #48]
  418fa4:	ldr	x2, [x1, #8]
  418fa8:	cmp	w0, #0xb
  418fac:	b.eq	418fdc <_obstack_memory_used@@Base+0x1f14>  // b.none
  418fb0:	cmp	w0, #0x10
  418fb4:	b.eq	418fe8 <_obstack_memory_used@@Base+0x1f20>  // b.none
  418fb8:	cbz	x2, 418fc4 <_obstack_memory_used@@Base+0x1efc>
  418fbc:	ldr	x0, [x1, #32]
  418fc0:	str	x0, [x2, #32]
  418fc4:	ldr	x0, [x1, #16]
  418fc8:	cbz	x0, 418fd4 <_obstack_memory_used@@Base+0x1f0c>
  418fcc:	ldr	x1, [x1, #32]
  418fd0:	str	x1, [x0, #32]
  418fd4:	mov	w0, #0x0                   	// #0
  418fd8:	ret
  418fdc:	mov	w0, #0x0                   	// #0
  418fe0:	str	x1, [x2, #32]
  418fe4:	ret
  418fe8:	ldr	x0, [x1, #16]
  418fec:	ldr	x3, [x0, #24]
  418ff0:	str	x3, [x2, #32]
  418ff4:	ldr	x1, [x1, #32]
  418ff8:	str	x1, [x0, #32]
  418ffc:	mov	w0, #0x0                   	// #0
  419000:	ret
  419004:	nop
  419008:	stp	x29, x30, [sp, #-64]!
  41900c:	mov	x10, x0
  419010:	mov	x15, x4
  419014:	mov	x29, sp
  419018:	ldr	x12, [x0, #200]
  41901c:	mov	x18, x5
  419020:	mov	x11, #0x0                   	// #0
  419024:	stp	x19, x20, [sp, #16]
  419028:	mov	x9, x12
  41902c:	mov	x20, x2
  419030:	mov	x19, x6
  419034:	stp	x21, x22, [sp, #32]
  419038:	mov	x21, x1
  41903c:	mov	x22, x3
  419040:	stp	x23, x24, [sp, #48]
  419044:	ldr	x23, [x0, #152]
  419048:	b	41906c <_obstack_memory_used@@Base+0x1fa4>
  41904c:	asr	x7, x7, #1
  419050:	ldr	x0, [x10, #216]
  419054:	add	x8, x7, x7, lsl #2
  419058:	add	x8, x0, x8, lsl #3
  41905c:	ldr	x0, [x8, #8]
  419060:	cmp	x0, x15
  419064:	b.lt	41917c <_obstack_memory_used@@Base+0x20b4>  // b.tstop
  419068:	mov	x9, x7
  41906c:	add	x7, x9, x11
  419070:	cmp	x9, x11
  419074:	b.gt	41904c <_obstack_memory_used@@Base+0x1f84>
  419078:	cmp	x12, x11
  41907c:	b.le	4191a4 <_obstack_memory_used@@Base+0x20dc>
  419080:	ldr	x1, [x10, #216]
  419084:	add	x0, x11, x11, lsl #2
  419088:	add	x0, x1, x0, lsl #3
  41908c:	ldr	x0, [x0, #8]
  419090:	cmp	x15, x0
  419094:	csinv	x11, x11, xzr, eq  // eq = none
  419098:	mov	x9, x12
  41909c:	mov	x14, #0x0                   	// #0
  4190a0:	b	4190c4 <_obstack_memory_used@@Base+0x1ffc>
  4190a4:	asr	x7, x7, #1
  4190a8:	ldr	x0, [x10, #216]
  4190ac:	add	x8, x7, x7, lsl #2
  4190b0:	add	x8, x0, x8, lsl #3
  4190b4:	ldr	x0, [x8, #8]
  4190b8:	cmp	x0, x19
  4190bc:	b.lt	419184 <_obstack_memory_used@@Base+0x20bc>  // b.tstop
  4190c0:	mov	x9, x7
  4190c4:	add	x7, x9, x14
  4190c8:	cmp	x9, x14
  4190cc:	b.gt	4190a4 <_obstack_memory_used@@Base+0x1fdc>
  4190d0:	cmp	x12, x14
  4190d4:	b.le	4191ac <_obstack_memory_used@@Base+0x20e4>
  4190d8:	ldr	x1, [x10, #216]
  4190dc:	add	x0, x14, x14, lsl #2
  4190e0:	add	x0, x1, x0, lsl #3
  4190e4:	ldr	x0, [x0, #8]
  4190e8:	cmp	x19, x0
  4190ec:	csinv	x14, x14, xzr, eq  // eq = none
  4190f0:	ldr	x0, [x21]
  4190f4:	cmp	x0, #0x0
  4190f8:	b.le	41919c <_obstack_memory_used@@Base+0x20d4>
  4190fc:	mov	x24, #0x0                   	// #0
  419100:	ldr	x0, [x20]
  419104:	mov	x5, x11
  419108:	ldr	x7, [x10, #216]
  41910c:	mov	x4, x15
  419110:	ldr	x1, [x0, x24, lsl #3]
  419114:	mov	x3, x22
  419118:	ldr	x6, [x23]
  41911c:	mov	x0, x10
  419120:	add	x2, x1, x1, lsl #2
  419124:	ldr	x2, [x7, x2, lsl #3]
  419128:	lsl	x2, x2, #4
  41912c:	ldr	x8, [x6, x2]
  419130:	mov	x2, x8
  419134:	bl	417520 <_obstack_memory_used@@Base+0x458>
  419138:	mov	x2, x8
  41913c:	ldr	x1, [x20]
  419140:	mov	w8, w0
  419144:	mov	x5, x14
  419148:	mov	x4, x19
  41914c:	mov	x3, x18
  419150:	mov	x0, x10
  419154:	ldr	x1, [x1, x24, lsl #3]
  419158:	bl	417520 <_obstack_memory_used@@Base+0x458>
  41915c:	cmp	w8, w0
  419160:	b.eq	41918c <_obstack_memory_used@@Base+0x20c4>  // b.none
  419164:	mov	w0, #0x1                   	// #1
  419168:	ldp	x19, x20, [sp, #16]
  41916c:	ldp	x21, x22, [sp, #32]
  419170:	ldp	x23, x24, [sp, #48]
  419174:	ldp	x29, x30, [sp], #64
  419178:	ret
  41917c:	add	x11, x7, #0x1
  419180:	b	41906c <_obstack_memory_used@@Base+0x1fa4>
  419184:	add	x14, x7, #0x1
  419188:	b	4190c4 <_obstack_memory_used@@Base+0x1ffc>
  41918c:	ldr	x0, [x21]
  419190:	add	x24, x24, #0x1
  419194:	cmp	x24, x0
  419198:	b.lt	419100 <_obstack_memory_used@@Base+0x2038>  // b.tstop
  41919c:	mov	w0, #0x0                   	// #0
  4191a0:	b	419168 <_obstack_memory_used@@Base+0x20a0>
  4191a4:	mov	x11, #0xffffffffffffffff    	// #-1
  4191a8:	b	419098 <_obstack_memory_used@@Base+0x1fd0>
  4191ac:	mov	x14, #0xffffffffffffffff    	// #-1
  4191b0:	b	4190f0 <_obstack_memory_used@@Base+0x2028>
  4191b4:	nop
  4191b8:	stp	x29, x30, [sp, #-64]!
  4191bc:	mov	x29, sp
  4191c0:	ldr	w5, [x1]
  4191c4:	stp	x19, x20, [sp, #16]
  4191c8:	mov	x20, x2
  4191cc:	mov	x19, x3
  4191d0:	stp	x21, x22, [sp, #32]
  4191d4:	cmp	w5, #0xf
  4191d8:	mov	x21, x1
  4191dc:	mov	x22, x0
  4191e0:	b.eq	419258 <_obstack_memory_used@@Base+0x2190>  // b.none
  4191e4:	mov	x6, #0x8                   	// #8
  4191e8:	mov	w0, #0x40                  	// #64
  4191ec:	add	w1, w5, #0x1
  4191f0:	smaddl	x0, w5, w0, x6
  4191f4:	ldr	x6, [x22]
  4191f8:	sbfiz	x5, x5, #6, #32
  4191fc:	str	w1, [x21]
  419200:	add	x1, x6, x5
  419204:	add	x5, x5, #0x20
  419208:	add	x0, x6, x0
  41920c:	add	x5, x6, x5
  419210:	mov	x3, #0xffffffffffffffff    	// #-1
  419214:	stp	xzr, x20, [x1, #8]
  419218:	str	x19, [x1, #24]
  41921c:	ldp	x6, x7, [x4]
  419220:	stp	x6, x7, [x1, #48]
  419224:	ldrb	w2, [x5, #26]
  419228:	and	w2, w2, #0xfffffff3
  41922c:	strb	w2, [x5, #26]
  419230:	stp	xzr, xzr, [x1, #32]
  419234:	str	x3, [x1, #64]
  419238:	cbz	x20, 419240 <_obstack_memory_used@@Base+0x2178>
  41923c:	str	x0, [x20]
  419240:	cbz	x19, 419248 <_obstack_memory_used@@Base+0x2180>
  419244:	str	x0, [x19]
  419248:	ldp	x19, x20, [sp, #16]
  41924c:	ldp	x21, x22, [sp, #32]
  419250:	ldp	x29, x30, [sp], #64
  419254:	ret
  419258:	mov	x0, #0x3c8                 	// #968
  41925c:	str	x4, [sp, #56]
  419260:	bl	402440 <malloc@plt>
  419264:	mov	x6, x0
  419268:	cbz	x0, 41928c <_obstack_memory_used@@Base+0x21c4>
  41926c:	ldr	x2, [x22]
  419270:	mov	x0, #0x8                   	// #8
  419274:	mov	w1, #0x1                   	// #1
  419278:	mov	w5, #0x0                   	// #0
  41927c:	str	x2, [x6]
  419280:	str	x6, [x22]
  419284:	ldr	x4, [sp, #56]
  419288:	b	4191f8 <_obstack_memory_used@@Base+0x2130>
  41928c:	mov	x0, #0x0                   	// #0
  419290:	b	419248 <_obstack_memory_used@@Base+0x2180>
  419294:	nop
  419298:	stp	x29, x30, [sp, #-80]!
  41929c:	mov	x29, sp
  4192a0:	stp	x19, x20, [sp, #16]
  4192a4:	mov	x19, x0
  4192a8:	stp	x21, x22, [sp, #32]
  4192ac:	add	x21, x1, #0x70
  4192b0:	add	x22, x1, #0x80
  4192b4:	ldr	x20, [x0]
  4192b8:	str	x23, [sp, #48]
  4192bc:	add	x23, sp, #0x48
  4192c0:	b	4192cc <_obstack_memory_used@@Base+0x2204>
  4192c4:	mov	x19, x0
  4192c8:	add	x23, x20, #0x8
  4192cc:	add	x4, x19, #0x28
  4192d0:	mov	x1, x22
  4192d4:	mov	x0, x21
  4192d8:	mov	x3, #0x0                   	// #0
  4192dc:	mov	x2, #0x0                   	// #0
  4192e0:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  4192e4:	str	x0, [x23]
  4192e8:	cbz	x0, 419330 <_obstack_memory_used@@Base+0x2268>
  4192ec:	str	x20, [x0]
  4192f0:	ldr	x20, [x23]
  4192f4:	ldrb	w0, [x20, #50]
  4192f8:	orr	w0, w0, #0x4
  4192fc:	strb	w0, [x20, #50]
  419300:	ldr	x0, [x19, #8]
  419304:	cbnz	x0, 4192c4 <_obstack_memory_used@@Base+0x21fc>
  419308:	ldr	x2, [x19, #16]
  41930c:	cmp	x2, #0x0
  419310:	ccmp	x2, x0, #0x4, ne  // ne = any
  419314:	b.ne	419344 <_obstack_memory_used@@Base+0x227c>  // b.any
  419318:	ldr	x2, [x19]
  41931c:	mov	x0, x19
  419320:	ldr	x20, [x20]
  419324:	mov	x19, x2
  419328:	cbnz	x2, 419308 <_obstack_memory_used@@Base+0x2240>
  41932c:	ldr	x0, [sp, #72]
  419330:	ldp	x19, x20, [sp, #16]
  419334:	ldp	x21, x22, [sp, #32]
  419338:	ldr	x23, [sp, #48]
  41933c:	ldp	x29, x30, [sp], #80
  419340:	ret
  419344:	mov	x19, x2
  419348:	add	x23, x20, #0x10
  41934c:	b	4192cc <_obstack_memory_used@@Base+0x2204>
  419350:	stp	x29, x30, [sp, #-112]!
  419354:	mov	x29, sp
  419358:	stp	x23, x24, [sp, #48]
  41935c:	mov	x24, x0
  419360:	ldrb	w0, [x1, #56]
  419364:	stp	x19, x20, [sp, #16]
  419368:	stp	x21, x22, [sp, #32]
  41936c:	mov	x21, x2
  419370:	stp	x25, x26, [sp, #64]
  419374:	ldr	x20, [x1]
  419378:	ldr	x19, [x2, #8]
  41937c:	str	x27, [sp, #80]
  419380:	tbz	w0, #4, 419514 <_obstack_memory_used@@Base+0x244c>
  419384:	cbz	x19, 4194b0 <_obstack_memory_used@@Base+0x23e8>
  419388:	ldr	x0, [x2, #40]
  41938c:	cmp	x0, #0x3f
  419390:	b.gt	419490 <_obstack_memory_used@@Base+0x23c8>
  419394:	ldr	x1, [x20, #160]
  419398:	lsr	x0, x1, x0
  41939c:	tbz	w0, #0, 419490 <_obstack_memory_used@@Base+0x23c8>
  4193a0:	mov	w5, #0x8                   	// #8
  4193a4:	add	x26, x20, #0x70
  4193a8:	add	x27, sp, #0x60
  4193ac:	add	x20, x20, #0x80
  4193b0:	stp	xzr, xzr, [sp, #96]
  4193b4:	mov	x1, x20
  4193b8:	mov	x4, x27
  4193bc:	mov	x3, #0x0                   	// #0
  4193c0:	mov	x2, #0x0                   	// #0
  4193c4:	mov	x0, x26
  4193c8:	strb	w5, [sp, #104]
  4193cc:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  4193d0:	stp	xzr, xzr, [sp, #96]
  4193d4:	mov	w5, #0x9                   	// #9
  4193d8:	mov	x22, x0
  4193dc:	mov	x4, x27
  4193e0:	mov	x1, x20
  4193e4:	mov	x0, x26
  4193e8:	mov	x3, #0x0                   	// #0
  4193ec:	mov	x2, #0x0                   	// #0
  4193f0:	strb	w5, [sp, #104]
  4193f4:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  4193f8:	mov	x23, x0
  4193fc:	mov	w5, #0x10                  	// #16
  419400:	stp	xzr, xzr, [sp, #96]
  419404:	mov	x2, x19
  419408:	mov	x4, x27
  41940c:	mov	x3, x23
  419410:	mov	x1, x20
  419414:	mov	x0, x26
  419418:	strb	w5, [sp, #104]
  41941c:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  419420:	mov	x25, x0
  419424:	mov	w5, #0x10                  	// #16
  419428:	stp	xzr, xzr, [sp, #96]
  41942c:	mov	x4, x27
  419430:	mov	x1, x20
  419434:	mov	x0, x26
  419438:	mov	x3, x25
  41943c:	mov	x2, x22
  419440:	strb	w5, [sp, #104]
  419444:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  419448:	cmp	x0, #0x0
  41944c:	mov	x19, x0
  419450:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  419454:	b.eq	41957c <_obstack_memory_used@@Base+0x24b4>  // b.none
  419458:	cmp	x22, #0x0
  41945c:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  419460:	b.eq	41957c <_obstack_memory_used@@Base+0x24b4>  // b.none
  419464:	ldr	x0, [x21, #40]
  419468:	str	x0, [x23, #40]
  41946c:	str	x0, [x22, #40]
  419470:	ldrb	w0, [x21, #50]
  419474:	ldrb	w1, [x23, #50]
  419478:	ubfx	x0, x0, #3, #1
  41947c:	bfi	w1, w0, #3, #1
  419480:	strb	w1, [x23, #50]
  419484:	ldrb	w1, [x22, #50]
  419488:	bfi	w1, w0, #3, #1
  41948c:	strb	w1, [x22, #50]
  419490:	mov	x0, x19
  419494:	ldp	x19, x20, [sp, #16]
  419498:	ldp	x21, x22, [sp, #32]
  41949c:	ldp	x23, x24, [sp, #48]
  4194a0:	ldp	x25, x26, [sp, #64]
  4194a4:	ldr	x27, [sp, #80]
  4194a8:	ldp	x29, x30, [sp], #112
  4194ac:	ret
  4194b0:	mov	w5, #0x8                   	// #8
  4194b4:	add	x26, x20, #0x70
  4194b8:	add	x27, sp, #0x60
  4194bc:	add	x20, x20, #0x80
  4194c0:	stp	xzr, xzr, [sp, #96]
  4194c4:	mov	x1, x20
  4194c8:	mov	x4, x27
  4194cc:	mov	x3, #0x0                   	// #0
  4194d0:	mov	x2, #0x0                   	// #0
  4194d4:	mov	x0, x26
  4194d8:	strb	w5, [sp, #104]
  4194dc:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  4194e0:	stp	xzr, xzr, [sp, #96]
  4194e4:	mov	w5, #0x9                   	// #9
  4194e8:	mov	x22, x0
  4194ec:	mov	x4, x27
  4194f0:	mov	x1, x20
  4194f4:	mov	x0, x26
  4194f8:	mov	x3, #0x0                   	// #0
  4194fc:	mov	x2, #0x0                   	// #0
  419500:	strb	w5, [sp, #104]
  419504:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  419508:	mov	x25, x0
  41950c:	mov	x23, x0
  419510:	b	419424 <_obstack_memory_used@@Base+0x235c>
  419514:	mov	w5, #0x8                   	// #8
  419518:	add	x26, x20, #0x70
  41951c:	add	x27, sp, #0x60
  419520:	add	x20, x20, #0x80
  419524:	stp	xzr, xzr, [sp, #96]
  419528:	mov	x1, x20
  41952c:	mov	x4, x27
  419530:	mov	x3, #0x0                   	// #0
  419534:	mov	x2, #0x0                   	// #0
  419538:	mov	x0, x26
  41953c:	strb	w5, [sp, #104]
  419540:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  419544:	stp	xzr, xzr, [sp, #96]
  419548:	mov	w5, #0x9                   	// #9
  41954c:	mov	x22, x0
  419550:	mov	x4, x27
  419554:	mov	x1, x20
  419558:	mov	x0, x26
  41955c:	mov	x3, #0x0                   	// #0
  419560:	mov	x2, #0x0                   	// #0
  419564:	strb	w5, [sp, #104]
  419568:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  41956c:	mov	x23, x0
  419570:	mov	x25, x0
  419574:	cbnz	x19, 4193fc <_obstack_memory_used@@Base+0x2334>
  419578:	b	419424 <_obstack_memory_used@@Base+0x235c>
  41957c:	mov	w0, #0xc                   	// #12
  419580:	str	w0, [x24]
  419584:	mov	x19, #0x0                   	// #0
  419588:	mov	x0, x19
  41958c:	ldp	x19, x20, [sp, #16]
  419590:	ldp	x21, x22, [sp, #32]
  419594:	ldp	x23, x24, [sp, #48]
  419598:	ldp	x25, x26, [sp, #64]
  41959c:	ldr	x27, [sp, #80]
  4195a0:	ldp	x29, x30, [sp], #112
  4195a4:	ret
  4195a8:	stp	x29, x30, [sp, #-48]!
  4195ac:	mov	x29, sp
  4195b0:	ldr	x2, [x1, #8]
  4195b4:	stp	x19, x20, [sp, #16]
  4195b8:	mov	x19, x1
  4195bc:	str	wzr, [sp, #44]
  4195c0:	mov	x20, x0
  4195c4:	cbz	x2, 4195d4 <_obstack_memory_used@@Base+0x250c>
  4195c8:	ldrb	w0, [x2, #48]
  4195cc:	cmp	w0, #0x11
  4195d0:	b.eq	4195f8 <_obstack_memory_used@@Base+0x2530>  // b.none
  4195d4:	ldr	x2, [x19, #16]
  4195d8:	cbz	x2, 4195e8 <_obstack_memory_used@@Base+0x2520>
  4195dc:	ldrb	w0, [x2, #48]
  4195e0:	cmp	w0, #0x11
  4195e4:	b.eq	419614 <_obstack_memory_used@@Base+0x254c>  // b.none
  4195e8:	ldr	w0, [sp, #44]
  4195ec:	ldp	x19, x20, [sp, #16]
  4195f0:	ldp	x29, x30, [sp], #48
  4195f4:	ret
  4195f8:	mov	x1, x20
  4195fc:	add	x0, sp, #0x2c
  419600:	bl	419350 <_obstack_memory_used@@Base+0x2288>
  419604:	str	x0, [x19, #8]
  419608:	cbz	x0, 4195d4 <_obstack_memory_used@@Base+0x250c>
  41960c:	str	x19, [x0]
  419610:	b	4195d4 <_obstack_memory_used@@Base+0x250c>
  419614:	mov	x1, x20
  419618:	add	x0, sp, #0x2c
  41961c:	bl	419350 <_obstack_memory_used@@Base+0x2288>
  419620:	str	x0, [x19, #16]
  419624:	cbz	x0, 4195e8 <_obstack_memory_used@@Base+0x2520>
  419628:	str	x19, [x0]
  41962c:	b	4195e8 <_obstack_memory_used@@Base+0x2520>
  419630:	cbz	x1, 4197c4 <_obstack_memory_used@@Base+0x26fc>
  419634:	stp	x29, x30, [sp, #-48]!
  419638:	mov	x29, sp
  41963c:	stp	x19, x20, [sp, #16]
  419640:	ldr	x19, [x1, #8]
  419644:	stp	x21, x22, [sp, #32]
  419648:	mov	x21, x1
  41964c:	cbz	x19, 419734 <_obstack_memory_used@@Base+0x266c>
  419650:	ldp	x2, x1, [x0]
  419654:	mov	x20, x0
  419658:	add	x0, x1, x19, lsl #1
  41965c:	cmp	x2, x0
  419660:	b.lt	41977c <_obstack_memory_used@@Base+0x26b4>  // b.tstop
  419664:	cbz	x1, 4197a8 <_obstack_memory_used@@Base+0x26e0>
  419668:	subs	x2, x19, #0x1
  41966c:	sub	x3, x1, #0x1
  419670:	add	x19, x1, x19, lsl #1
  419674:	ccmp	x3, #0x0, #0x1, pl  // pl = nfrst
  419678:	b.lt	4196c8 <_obstack_memory_used@@Base+0x2600>  // b.tstop
  41967c:	ldr	x0, [x20, #16]
  419680:	ldr	x1, [x21, #16]
  419684:	b	4196a4 <_obstack_memory_used@@Base+0x25dc>
  419688:	b.ge	419748 <_obstack_memory_used@@Base+0x2680>  // b.tcont
  41968c:	sub	x19, x19, #0x1
  419690:	sub	x2, x2, #0x1
  419694:	str	x4, [x0, x19, lsl #3]
  419698:	cmp	x2, #0x0
  41969c:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
  4196a0:	b.lt	4196c8 <_obstack_memory_used@@Base+0x2600>  // b.tstop
  4196a4:	ldr	x5, [x0, x3, lsl #3]
  4196a8:	ldr	x4, [x1, x2, lsl #3]
  4196ac:	cmp	x5, x4
  4196b0:	b.ne	419688 <_obstack_memory_used@@Base+0x25c0>  // b.any
  4196b4:	sub	x2, x2, #0x1
  4196b8:	sub	x3, x3, #0x1
  4196bc:	cmp	x2, #0x0
  4196c0:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
  4196c4:	b.ge	4196a4 <_obstack_memory_used@@Base+0x25dc>  // b.tcont
  4196c8:	tbnz	x2, #63, 4196e8 <_obstack_memory_used@@Base+0x2620>
  4196cc:	ldr	x0, [x20, #16]
  4196d0:	add	x2, x2, #0x1
  4196d4:	ldr	x1, [x21, #16]
  4196d8:	sub	x19, x19, x2
  4196dc:	lsl	x2, x2, #3
  4196e0:	add	x0, x0, x19, lsl #3
  4196e4:	bl	4022a0 <memcpy@plt>
  4196e8:	ldr	x3, [x20, #8]
  4196ec:	ldr	x2, [x21, #8]
  4196f0:	add	x2, x3, x2, lsl #1
  4196f4:	sub	x5, x2, #0x1
  4196f8:	subs	x2, x2, x19
  4196fc:	b.eq	419734 <_obstack_memory_used@@Base+0x266c>  // b.none
  419700:	ldr	x0, [x20, #16]
  419704:	sub	x1, x3, #0x1
  419708:	add	x3, x3, x2
  41970c:	str	x3, [x20, #8]
  419710:	ldr	x4, [x0, x5, lsl #3]
  419714:	add	x6, x1, x2
  419718:	ldr	x3, [x0, x1, lsl #3]
  41971c:	cmp	x4, x3
  419720:	b.le	419750 <_obstack_memory_used@@Base+0x2688>
  419724:	str	x4, [x0, x6, lsl #3]
  419728:	sub	x5, x5, #0x1
  41972c:	subs	x2, x2, #0x1
  419730:	b.ne	419710 <_obstack_memory_used@@Base+0x2648>  // b.any
  419734:	mov	w0, #0x0                   	// #0
  419738:	ldp	x19, x20, [sp, #16]
  41973c:	ldp	x21, x22, [sp, #32]
  419740:	ldp	x29, x30, [sp], #48
  419744:	ret
  419748:	sub	x3, x3, #0x1
  41974c:	b	419698 <_obstack_memory_used@@Base+0x25d0>
  419750:	str	x3, [x0, x6, lsl #3]
  419754:	subs	x1, x1, #0x1
  419758:	b.pl	419710 <_obstack_memory_used@@Base+0x2648>  // b.nfrst
  41975c:	add	x1, x0, x19, lsl #3
  419760:	lsl	x2, x2, #3
  419764:	bl	4022a0 <memcpy@plt>
  419768:	mov	w0, #0x0                   	// #0
  41976c:	ldp	x19, x20, [sp, #16]
  419770:	ldp	x21, x22, [sp, #32]
  419774:	ldp	x29, x30, [sp], #48
  419778:	ret
  41977c:	ldr	x0, [x20, #16]
  419780:	add	x19, x19, x2
  419784:	lsl	x22, x19, #1
  419788:	lsl	x1, x19, #4
  41978c:	bl	402550 <realloc@plt>
  419790:	cbz	x0, 4197cc <_obstack_memory_used@@Base+0x2704>
  419794:	ldr	x1, [x20, #8]
  419798:	ldr	x19, [x21, #8]
  41979c:	str	x22, [x20]
  4197a0:	str	x0, [x20, #16]
  4197a4:	cbnz	x1, 419668 <_obstack_memory_used@@Base+0x25a0>
  4197a8:	ldr	x1, [x21, #16]
  4197ac:	str	x19, [x20, #8]
  4197b0:	ldr	x0, [x20, #16]
  4197b4:	ldr	x2, [x21, #8]
  4197b8:	lsl	x2, x2, #3
  4197bc:	bl	4022a0 <memcpy@plt>
  4197c0:	b	419734 <_obstack_memory_used@@Base+0x266c>
  4197c4:	mov	w0, #0x0                   	// #0
  4197c8:	ret
  4197cc:	mov	w0, #0xc                   	// #12
  4197d0:	b	419738 <_obstack_memory_used@@Base+0x2670>
  4197d4:	nop
  4197d8:	stp	x29, x30, [sp, #-144]!
  4197dc:	mov	x29, sp
  4197e0:	stp	x19, x20, [sp, #16]
  4197e4:	add	x20, x2, x2, lsl #1
  4197e8:	mov	x19, x1
  4197ec:	stp	x23, x24, [sp, #48]
  4197f0:	lsl	x20, x20, #3
  4197f4:	and	w24, w3, #0xff
  4197f8:	ldr	x23, [x1, #40]
  4197fc:	stp	x21, x22, [sp, #32]
  419800:	mov	x22, x0
  419804:	add	x23, x23, x20
  419808:	mov	x21, x2
  41980c:	ldr	x0, [x23, #8]
  419810:	add	x0, x0, #0x1
  419814:	stp	x0, xzr, [sp, #96]
  419818:	lsl	x0, x0, #3
  41981c:	bl	402440 <malloc@plt>
  419820:	str	x0, [sp, #112]
  419824:	cbz	x0, 419a14 <_obstack_memory_used@@Base+0x294c>
  419828:	ldr	x2, [x19]
  41982c:	stp	x25, x26, [sp, #64]
  419830:	lsl	x25, x21, #4
  419834:	ldr	x0, [x19, #48]
  419838:	add	x1, x2, x25
  41983c:	mov	x3, #0xffffffffffffffff    	// #-1
  419840:	add	x0, x0, x20
  419844:	ldr	w4, [x1, #8]
  419848:	str	x3, [x0, #8]
  41984c:	tst	w4, #0x3ff00
  419850:	b.ne	41999c <_obstack_memory_used@@Base+0x28d4>  // b.any
  419854:	ldrb	w0, [x1, #8]
  419858:	tbz	w0, #3, 4199e0 <_obstack_memory_used@@Base+0x2918>
  41985c:	ldr	x1, [x19, #40]
  419860:	add	x0, x1, x20
  419864:	ldr	x2, [x0, #8]
  419868:	cmp	x2, #0x0
  41986c:	b.le	4199e0 <_obstack_memory_used@@Base+0x2918>
  419870:	mov	w23, #0x0                   	// #0
  419874:	mov	x26, #0x0                   	// #0
  419878:	str	x27, [sp, #80]
  41987c:	nop
  419880:	ldr	x0, [x0, #16]
  419884:	add	x27, sp, #0x78
  419888:	ldr	x3, [x19, #48]
  41988c:	ldr	x2, [x0, x26, lsl #3]
  419890:	add	x25, x2, x2, lsl #1
  419894:	lsl	x25, x25, #3
  419898:	add	x3, x3, x25
  41989c:	ldr	x0, [x3, #8]
  4198a0:	cmn	x0, #0x1
  4198a4:	b.eq	419994 <_obstack_memory_used@@Base+0x28cc>  // b.none
  4198a8:	cbz	x0, 419960 <_obstack_memory_used@@Base+0x2898>
  4198ac:	ldp	x0, x1, [x3]
  4198b0:	stp	x0, x1, [sp, #120]
  4198b4:	ldr	x0, [x3, #16]
  4198b8:	str	x0, [sp, #136]
  4198bc:	mov	x1, x27
  4198c0:	add	x0, sp, #0x60
  4198c4:	bl	419630 <_obstack_memory_used@@Base+0x2568>
  4198c8:	cbnz	w0, 419978 <_obstack_memory_used@@Base+0x28b0>
  4198cc:	ldr	x0, [x19, #48]
  4198d0:	add	x25, x0, x25
  4198d4:	ldr	x0, [x25, #8]
  4198d8:	cbz	x0, 419950 <_obstack_memory_used@@Base+0x2888>
  4198dc:	ldr	x1, [x19, #40]
  4198e0:	add	x0, x1, x20
  4198e4:	add	x26, x26, #0x1
  4198e8:	ldr	x2, [x0, #8]
  4198ec:	cmp	x2, x26
  4198f0:	b.gt	419880 <_obstack_memory_used@@Base+0x27b8>
  4198f4:	mov	x1, x21
  4198f8:	add	x0, sp, #0x60
  4198fc:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  419900:	tst	w0, #0xff
  419904:	b.eq	419a34 <_obstack_memory_used@@Base+0x296c>  // b.none
  419908:	ldr	x0, [x19, #48]
  41990c:	eor	w24, w24, #0x1
  419910:	tst	w23, w24
  419914:	add	x1, x0, x20
  419918:	b.eq	419a44 <_obstack_memory_used@@Base+0x297c>  // b.none
  41991c:	ldr	x27, [sp, #80]
  419920:	str	xzr, [x1, #8]
  419924:	ldp	x2, x3, [sp, #96]
  419928:	mov	w0, #0x0                   	// #0
  41992c:	ldr	x1, [sp, #112]
  419930:	stp	x2, x3, [x22]
  419934:	ldp	x25, x26, [sp, #64]
  419938:	str	x1, [x22, #16]
  41993c:	ldp	x19, x20, [sp, #16]
  419940:	ldp	x21, x22, [sp, #32]
  419944:	ldp	x23, x24, [sp, #48]
  419948:	ldp	x29, x30, [sp], #144
  41994c:	ret
  419950:	ldr	x0, [sp, #136]
  419954:	mov	w23, #0x1                   	// #1
  419958:	bl	4026b0 <free@plt>
  41995c:	b	4198dc <_obstack_memory_used@@Base+0x2814>
  419960:	add	x27, sp, #0x78
  419964:	mov	x1, x19
  419968:	mov	x0, x27
  41996c:	mov	w3, #0x0                   	// #0
  419970:	bl	4197d8 <_obstack_memory_used@@Base+0x2710>
  419974:	cbz	w0, 4198bc <_obstack_memory_used@@Base+0x27f4>
  419978:	ldp	x19, x20, [sp, #16]
  41997c:	ldp	x21, x22, [sp, #32]
  419980:	ldp	x23, x24, [sp, #48]
  419984:	ldp	x25, x26, [sp, #64]
  419988:	ldr	x27, [sp, #80]
  41998c:	ldp	x29, x30, [sp], #144
  419990:	ret
  419994:	mov	w23, #0x1                   	// #1
  419998:	b	4198e0 <_obstack_memory_used@@Base+0x2818>
  41999c:	ldr	x0, [x23, #8]
  4199a0:	cbz	x0, 4199e0 <_obstack_memory_used@@Base+0x2918>
  4199a4:	ldr	x0, [x23, #16]
  4199a8:	ldr	x0, [x0]
  4199ac:	add	x2, x2, x0, lsl #4
  4199b0:	ldrb	w0, [x2, #10]
  4199b4:	tbnz	w0, #2, 419854 <_obstack_memory_used@@Base+0x278c>
  4199b8:	ubfx	x4, x4, #8, #10
  4199bc:	mov	x3, x21
  4199c0:	mov	x2, x21
  4199c4:	mov	x1, x21
  4199c8:	mov	x0, x19
  4199cc:	bl	418768 <_obstack_memory_used@@Base+0x16a0>
  4199d0:	cbnz	w0, 419a2c <_obstack_memory_used@@Base+0x2964>
  4199d4:	ldr	x1, [x19]
  4199d8:	add	x1, x1, x25
  4199dc:	b	419854 <_obstack_memory_used@@Base+0x278c>
  4199e0:	mov	x1, x21
  4199e4:	add	x0, sp, #0x60
  4199e8:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  4199ec:	tst	w0, #0xff
  4199f0:	b.eq	419a10 <_obstack_memory_used@@Base+0x2948>  // b.none
  4199f4:	ldr	x0, [x19, #48]
  4199f8:	add	x20, x0, x20
  4199fc:	ldp	x0, x1, [sp, #96]
  419a00:	stp	x0, x1, [x20]
  419a04:	ldr	x0, [sp, #112]
  419a08:	str	x0, [x20, #16]
  419a0c:	b	419924 <_obstack_memory_used@@Base+0x285c>
  419a10:	ldp	x25, x26, [sp, #64]
  419a14:	mov	w0, #0xc                   	// #12
  419a18:	ldp	x19, x20, [sp, #16]
  419a1c:	ldp	x21, x22, [sp, #32]
  419a20:	ldp	x23, x24, [sp, #48]
  419a24:	ldp	x29, x30, [sp], #144
  419a28:	ret
  419a2c:	ldp	x25, x26, [sp, #64]
  419a30:	b	41993c <_obstack_memory_used@@Base+0x2874>
  419a34:	mov	w0, #0xc                   	// #12
  419a38:	ldp	x25, x26, [sp, #64]
  419a3c:	ldr	x27, [sp, #80]
  419a40:	b	419a18 <_obstack_memory_used@@Base+0x2950>
  419a44:	ldr	x27, [sp, #80]
  419a48:	b	4199f8 <_obstack_memory_used@@Base+0x2930>
  419a4c:	nop
  419a50:	stp	x29, x30, [sp, #-96]!
  419a54:	mov	x29, sp
  419a58:	stp	x21, x22, [sp, #32]
  419a5c:	ldr	x21, [x1, #8]
  419a60:	stp	x19, x20, [sp, #16]
  419a64:	mov	x20, x2
  419a68:	mov	w19, w3
  419a6c:	stp	x23, x24, [sp, #48]
  419a70:	mov	x24, x1
  419a74:	mov	x23, x0
  419a78:	lsl	x0, x21, #3
  419a7c:	stp	x21, xzr, [sp, #72]
  419a80:	bl	402440 <malloc@plt>
  419a84:	str	x0, [sp, #88]
  419a88:	cbz	x0, 419b90 <_obstack_memory_used@@Base+0x2ac8>
  419a8c:	cmp	x21, #0x0
  419a90:	b.le	419b2c <_obstack_memory_used@@Base+0x2a64>
  419a94:	mov	x22, #0x0                   	// #0
  419a98:	ldr	x1, [x24, #16]
  419a9c:	ldr	x0, [x23, #48]
  419aa0:	ldr	x2, [x1, x22, lsl #3]
  419aa4:	add	x1, x2, x2, lsl #1
  419aa8:	add	x1, x0, x1, lsl #3
  419aac:	ldr	x10, [x1, #8]
  419ab0:	cmp	x10, #0x0
  419ab4:	b.le	419b60 <_obstack_memory_used@@Base+0x2a98>
  419ab8:	mov	x5, #0x0                   	// #0
  419abc:	ldr	x9, [x23]
  419ac0:	ldr	x4, [x1, #16]
  419ac4:	b	419ad0 <_obstack_memory_used@@Base+0x2a08>
  419ac8:	cmp	x10, x5
  419acc:	b.eq	419b60 <_obstack_memory_used@@Base+0x2a98>  // b.none
  419ad0:	ldr	x7, [x4, x5, lsl #3]
  419ad4:	add	x5, x5, #0x1
  419ad8:	lsl	x6, x7, #4
  419adc:	add	x8, x9, x6
  419ae0:	ldrb	w8, [x8, #8]
  419ae4:	cmp	w19, w8
  419ae8:	b.ne	419ac8 <_obstack_memory_used@@Base+0x2a00>  // b.any
  419aec:	ldr	x6, [x9, x6]
  419af0:	cmp	x20, x6
  419af4:	b.ne	419ac8 <_obstack_memory_used@@Base+0x2a00>  // b.any
  419af8:	cmn	x7, #0x1
  419afc:	b.eq	419b60 <_obstack_memory_used@@Base+0x2a98>  // b.none
  419b00:	mov	w4, w19
  419b04:	mov	x3, x20
  419b08:	add	x1, sp, #0x48
  419b0c:	mov	x0, x23
  419b10:	bl	418d98 <_obstack_memory_used@@Base+0x1cd0>
  419b14:	mov	w21, w0
  419b18:	cbnz	w0, 419b70 <_obstack_memory_used@@Base+0x2aa8>
  419b1c:	ldr	x0, [x24, #8]
  419b20:	add	x22, x22, #0x1
  419b24:	cmp	x0, x22
  419b28:	b.gt	419a98 <_obstack_memory_used@@Base+0x29d0>
  419b2c:	ldr	x0, [x24, #16]
  419b30:	mov	w21, #0x0                   	// #0
  419b34:	bl	4026b0 <free@plt>
  419b38:	ldp	x0, x1, [sp, #72]
  419b3c:	stp	x0, x1, [x24]
  419b40:	ldr	x0, [sp, #88]
  419b44:	str	x0, [x24, #16]
  419b48:	mov	w0, w21
  419b4c:	ldp	x19, x20, [sp, #16]
  419b50:	ldp	x21, x22, [sp, #32]
  419b54:	ldp	x23, x24, [sp, #48]
  419b58:	ldp	x29, x30, [sp], #96
  419b5c:	ret
  419b60:	add	x0, sp, #0x48
  419b64:	bl	419630 <_obstack_memory_used@@Base+0x2568>
  419b68:	mov	w21, w0
  419b6c:	cbz	w0, 419b1c <_obstack_memory_used@@Base+0x2a54>
  419b70:	ldr	x0, [sp, #88]
  419b74:	bl	4026b0 <free@plt>
  419b78:	mov	w0, w21
  419b7c:	ldp	x19, x20, [sp, #16]
  419b80:	ldp	x21, x22, [sp, #32]
  419b84:	ldp	x23, x24, [sp, #48]
  419b88:	ldp	x29, x30, [sp], #96
  419b8c:	ret
  419b90:	mov	w21, #0xc                   	// #12
  419b94:	mov	w0, w21
  419b98:	ldp	x19, x20, [sp, #16]
  419b9c:	ldp	x21, x22, [sp, #32]
  419ba0:	ldp	x23, x24, [sp, #48]
  419ba4:	ldp	x29, x30, [sp], #96
  419ba8:	ret
  419bac:	nop
  419bb0:	stp	x29, x30, [sp, #-48]!
  419bb4:	mov	x29, sp
  419bb8:	stp	x19, x20, [sp, #16]
  419bbc:	mov	x19, x0
  419bc0:	ldr	x2, [x1, #8]
  419bc4:	str	x2, [x0, #8]
  419bc8:	cmp	x2, #0x0
  419bcc:	b.le	419c10 <_obstack_memory_used@@Base+0x2b48>
  419bd0:	str	x21, [sp, #32]
  419bd4:	lsl	x20, x2, #3
  419bd8:	str	x2, [x19]
  419bdc:	mov	x0, x20
  419be0:	mov	x21, x1
  419be4:	bl	402440 <malloc@plt>
  419be8:	str	x0, [x19, #16]
  419bec:	cbz	x0, 419c28 <_obstack_memory_used@@Base+0x2b60>
  419bf0:	ldr	x1, [x21, #16]
  419bf4:	mov	x2, x20
  419bf8:	bl	4022a0 <memcpy@plt>
  419bfc:	ldr	x21, [sp, #32]
  419c00:	mov	w0, #0x0                   	// #0
  419c04:	ldp	x19, x20, [sp, #16]
  419c08:	ldp	x29, x30, [sp], #48
  419c0c:	ret
  419c10:	stp	xzr, xzr, [x19]
  419c14:	mov	w0, #0x0                   	// #0
  419c18:	str	xzr, [x19, #16]
  419c1c:	ldp	x19, x20, [sp, #16]
  419c20:	ldp	x29, x30, [sp], #48
  419c24:	ret
  419c28:	mov	w0, #0xc                   	// #12
  419c2c:	ldr	x21, [sp, #32]
  419c30:	stp	xzr, xzr, [x19]
  419c34:	b	419c04 <_obstack_memory_used@@Base+0x2b3c>
  419c38:	stp	x29, x30, [sp, #-64]!
  419c3c:	mov	x29, sp
  419c40:	str	x21, [sp, #24]
  419c44:	mov	x21, x0
  419c48:	cbz	x1, 419c6c <_obstack_memory_used@@Base+0x2ba4>
  419c4c:	stp	x22, x23, [sp, #32]
  419c50:	cmp	x2, #0x0
  419c54:	ldr	x22, [x1, #8]
  419c58:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  419c5c:	b.gt	419c94 <_obstack_memory_used@@Base+0x2bcc>
  419c60:	cmp	x22, #0x0
  419c64:	b.gt	419ca4 <_obstack_memory_used@@Base+0x2bdc>
  419c68:	ldp	x22, x23, [sp, #32]
  419c6c:	cbz	x2, 419c7c <_obstack_memory_used@@Base+0x2bb4>
  419c70:	ldr	x0, [x2, #8]
  419c74:	cmp	x0, #0x0
  419c78:	b.gt	419cb8 <_obstack_memory_used@@Base+0x2bf0>
  419c7c:	mov	w0, #0x0                   	// #0
  419c80:	stp	xzr, xzr, [x21]
  419c84:	str	xzr, [x21, #16]
  419c88:	ldr	x21, [sp, #24]
  419c8c:	ldp	x29, x30, [sp], #64
  419c90:	ret
  419c94:	ldr	x23, [x2, #8]
  419c98:	str	x2, [sp, #48]
  419c9c:	cmp	x23, #0x0
  419ca0:	b.gt	419ccc <_obstack_memory_used@@Base+0x2c04>
  419ca4:	mov	x0, x21
  419ca8:	ldr	x21, [sp, #24]
  419cac:	ldp	x22, x23, [sp, #32]
  419cb0:	ldp	x29, x30, [sp], #64
  419cb4:	b	419bb0 <_obstack_memory_used@@Base+0x2ae8>
  419cb8:	mov	x0, x21
  419cbc:	mov	x1, x2
  419cc0:	ldr	x21, [sp, #24]
  419cc4:	ldp	x29, x30, [sp], #64
  419cc8:	b	419bb0 <_obstack_memory_used@@Base+0x2ae8>
  419ccc:	add	x0, x22, x23
  419cd0:	str	x0, [x21]
  419cd4:	str	x1, [sp, #56]
  419cd8:	lsl	x0, x0, #3
  419cdc:	bl	402440 <malloc@plt>
  419ce0:	str	x0, [x21, #16]
  419ce4:	ldp	x2, x1, [sp, #48]
  419ce8:	cbz	x0, 419da4 <_obstack_memory_used@@Base+0x2cdc>
  419cec:	sub	x7, x0, #0x8
  419cf0:	mov	x3, #0x0                   	// #0
  419cf4:	mov	x4, #0x0                   	// #0
  419cf8:	ldr	x1, [x1, #16]
  419cfc:	ldr	x6, [x2, #16]
  419d00:	str	x19, [sp, #16]
  419d04:	mov	x19, #0x0                   	// #0
  419d08:	b	419d28 <_obstack_memory_used@@Base+0x2c60>
  419d0c:	cinc	x3, x3, eq  // eq = none
  419d10:	add	x4, x4, #0x1
  419d14:	str	x2, [x7, x19, lsl #3]
  419d18:	cmp	x22, x4
  419d1c:	b.le	419d48 <_obstack_memory_used@@Base+0x2c80>
  419d20:	cmp	x23, x3
  419d24:	b.le	419d88 <_obstack_memory_used@@Base+0x2cc0>
  419d28:	ldr	x2, [x1, x4, lsl #3]
  419d2c:	add	x19, x19, #0x1
  419d30:	ldr	x5, [x6, x3, lsl #3]
  419d34:	cmp	x2, x5
  419d38:	b.le	419d0c <_obstack_memory_used@@Base+0x2c44>
  419d3c:	add	x3, x3, #0x1
  419d40:	str	x5, [x7, x19, lsl #3]
  419d44:	b	419d18 <_obstack_memory_used@@Base+0x2c50>
  419d48:	cmp	x23, x3
  419d4c:	b.gt	419d6c <_obstack_memory_used@@Base+0x2ca4>
  419d50:	ldp	x22, x23, [sp, #32]
  419d54:	str	x19, [x21, #8]
  419d58:	mov	w0, #0x0                   	// #0
  419d5c:	ldr	x19, [sp, #16]
  419d60:	ldr	x21, [sp, #24]
  419d64:	ldp	x29, x30, [sp], #64
  419d68:	ret
  419d6c:	sub	x2, x23, x3
  419d70:	add	x0, x0, x19, lsl #3
  419d74:	add	x1, x6, x3, lsl #3
  419d78:	add	x19, x19, x2
  419d7c:	lsl	x2, x2, #3
  419d80:	bl	4022a0 <memcpy@plt>
  419d84:	b	419d50 <_obstack_memory_used@@Base+0x2c88>
  419d88:	sub	x2, x22, x4
  419d8c:	add	x1, x1, x4, lsl #3
  419d90:	add	x0, x0, x19, lsl #3
  419d94:	add	x19, x19, x2
  419d98:	lsl	x2, x2, #3
  419d9c:	bl	4022a0 <memcpy@plt>
  419da0:	b	419d50 <_obstack_memory_used@@Base+0x2c88>
  419da4:	mov	w0, #0xc                   	// #12
  419da8:	ldp	x22, x23, [sp, #32]
  419dac:	b	419c88 <_obstack_memory_used@@Base+0x2bc0>
  419db0:	stp	x29, x30, [sp, #-112]!
  419db4:	mov	x29, sp
  419db8:	stp	x25, x26, [sp, #64]
  419dbc:	mov	x25, x2
  419dc0:	ldr	x2, [x2, #8]
  419dc4:	stp	x27, x28, [sp, #80]
  419dc8:	str	x0, [sp, #104]
  419dcc:	cbz	x2, 41a064 <_obstack_memory_used@@Base+0x2f9c>
  419dd0:	stp	x19, x20, [sp, #16]
  419dd4:	cmp	x2, #0x0
  419dd8:	mov	w20, w3
  419ddc:	stp	x21, x22, [sp, #32]
  419de0:	add	x26, x2, w3, uxtw
  419de4:	mov	x22, x1
  419de8:	b.le	419e08 <_obstack_memory_used@@Base+0x2d40>
  419dec:	ldr	x0, [x25, #16]
  419df0:	add	x2, x0, x2, lsl #3
  419df4:	nop
  419df8:	ldr	x1, [x0], #8
  419dfc:	add	x26, x26, x1
  419e00:	cmp	x2, x0
  419e04:	b.ne	419df8 <_obstack_memory_used@@Base+0x2d30>  // b.any
  419e08:	ldr	x0, [x22, #136]
  419e0c:	ldr	x1, [x22, #64]
  419e10:	and	x0, x26, x0
  419e14:	add	x0, x0, x0, lsl #1
  419e18:	lsl	x0, x0, #3
  419e1c:	add	x2, x1, x0
  419e20:	ldr	x10, [x1, x0]
  419e24:	cmp	x10, #0x0
  419e28:	b.le	419e94 <_obstack_memory_used@@Base+0x2dcc>
  419e2c:	mov	x6, #0x0                   	// #0
  419e30:	ldr	x11, [x2, #16]
  419e34:	b	419e40 <_obstack_memory_used@@Base+0x2d78>
  419e38:	cmp	x6, x10
  419e3c:	b.eq	419e94 <_obstack_memory_used@@Base+0x2dcc>  // b.none
  419e40:	ldr	x27, [x11, x6, lsl #3]
  419e44:	add	x6, x6, #0x1
  419e48:	ldr	x0, [x27]
  419e4c:	cmp	x0, x26
  419e50:	b.ne	419e38 <_obstack_memory_used@@Base+0x2d70>  // b.any
  419e54:	ldrb	w0, [x27, #104]
  419e58:	and	w0, w0, #0xf
  419e5c:	cmp	w0, w20
  419e60:	b.ne	419e38 <_obstack_memory_used@@Base+0x2d70>  // b.any
  419e64:	ldr	x0, [x27, #80]
  419e68:	mov	x1, x25
  419e6c:	bl	4170f0 <_obstack_memory_used@@Base+0x28>
  419e70:	tst	w0, #0xff
  419e74:	b.eq	419e38 <_obstack_memory_used@@Base+0x2d70>  // b.none
  419e78:	ldp	x19, x20, [sp, #16]
  419e7c:	ldp	x21, x22, [sp, #32]
  419e80:	mov	x0, x27
  419e84:	ldp	x25, x26, [sp, #64]
  419e88:	ldp	x27, x28, [sp, #80]
  419e8c:	ldp	x29, x30, [sp], #112
  419e90:	ret
  419e94:	mov	x1, #0x1                   	// #1
  419e98:	mov	x0, #0x70                  	// #112
  419e9c:	bl	402520 <calloc@plt>
  419ea0:	mov	x27, x0
  419ea4:	cbz	x0, 419fd8 <_obstack_memory_used@@Base+0x2f10>
  419ea8:	add	x21, x0, #0x8
  419eac:	mov	x1, x25
  419eb0:	mov	x0, x21
  419eb4:	bl	419bb0 <_obstack_memory_used@@Base+0x2ae8>
  419eb8:	cbnz	w0, 41a090 <_obstack_memory_used@@Base+0x2fc8>
  419ebc:	ldrb	w0, [x27, #104]
  419ec0:	ldr	x2, [x25, #8]
  419ec4:	str	x21, [x27, #80]
  419ec8:	bfxil	w0, w20, #0, #4
  419ecc:	strb	w0, [x27, #104]
  419ed0:	cmp	x2, #0x0
  419ed4:	b.le	419fb8 <_obstack_memory_used@@Base+0x2ef0>
  419ed8:	and	w0, w20, #0x4
  419edc:	stp	x23, x24, [sp, #48]
  419ee0:	add	x24, x27, #0x18
  419ee4:	add	x23, x27, #0x10
  419ee8:	str	w0, [sp, #100]
  419eec:	and	w0, w20, #0x2
  419ef0:	and	w20, w20, #0x1
  419ef4:	mov	x6, #0x0                   	// #0
  419ef8:	mov	x28, #0x0                   	// #0
  419efc:	str	w0, [sp, #96]
  419f00:	ldr	x1, [x25, #16]
  419f04:	ldr	x0, [x22]
  419f08:	ldr	x3, [x1, x28, lsl #3]
  419f0c:	add	x3, x0, x3, lsl #4
  419f10:	ldr	w19, [x3, #8]
  419f14:	ldrb	w4, [x3, #8]
  419f18:	ubfx	x19, x19, #8, #10
  419f1c:	cmp	w19, #0x0
  419f20:	ccmp	w4, #0x1, #0x0, eq  // eq = none
  419f24:	b.eq	419fa8 <_obstack_memory_used@@Base+0x2ee0>  // b.none
  419f28:	ldrb	w5, [x3, #10]
  419f2c:	cmp	w4, #0x2
  419f30:	ldrb	w0, [x27, #104]
  419f34:	ubfx	x5, x5, #4, #1
  419f38:	mov	w3, w0
  419f3c:	ubfx	x0, x0, #5, #1
  419f40:	orr	w0, w0, w5
  419f44:	bfi	w3, w0, #5, #1
  419f48:	strb	w3, [x27, #104]
  419f4c:	b.eq	41a058 <_obstack_memory_used@@Base+0x2f90>  // b.none
  419f50:	cmp	w4, #0x4
  419f54:	b.eq	419ff4 <_obstack_memory_used@@Base+0x2f2c>  // b.none
  419f58:	cbz	w19, 419fa8 <_obstack_memory_used@@Base+0x2ee0>
  419f5c:	ldr	x0, [x27, #80]
  419f60:	cmp	x21, x0
  419f64:	b.eq	41a000 <_obstack_memory_used@@Base+0x2f38>  // b.none
  419f68:	tbz	w19, #0, 41a030 <_obstack_memory_used@@Base+0x2f68>
  419f6c:	cbz	w20, 419f78 <_obstack_memory_used@@Base+0x2eb0>
  419f70:	tbz	w19, #1, 41a038 <_obstack_memory_used@@Base+0x2f70>
  419f74:	nop
  419f78:	subs	x2, x28, x6
  419f7c:	b.mi	419fa0 <_obstack_memory_used@@Base+0x2ed8>  // b.first
  419f80:	ldr	x0, [x27, #16]
  419f84:	cmp	x2, x0
  419f88:	b.ge	419fa0 <_obstack_memory_used@@Base+0x2ed8>  // b.tcont
  419f8c:	sub	x0, x0, #0x1
  419f90:	str	x0, [x27, #16]
  419f94:	mov	x1, x24
  419f98:	mov	x0, x23
  419f9c:	bl	418ec0 <_obstack_memory_used@@Base+0x1df8>
  419fa0:	ldr	x2, [x25, #8]
  419fa4:	add	x6, x6, #0x1
  419fa8:	add	x28, x28, #0x1
  419fac:	cmp	x28, x2
  419fb0:	b.lt	419f00 <_obstack_memory_used@@Base+0x2e38>  // b.tstop
  419fb4:	ldp	x23, x24, [sp, #48]
  419fb8:	mov	x2, x26
  419fbc:	mov	x0, x22
  419fc0:	mov	x1, x27
  419fc4:	bl	4178f8 <_obstack_memory_used@@Base+0x830>
  419fc8:	cbz	w0, 419e78 <_obstack_memory_used@@Base+0x2db0>
  419fcc:	mov	x0, x27
  419fd0:	bl	418a08 <_obstack_memory_used@@Base+0x1940>
  419fd4:	nop
  419fd8:	ldr	x1, [sp, #104]
  419fdc:	mov	w0, #0xc                   	// #12
  419fe0:	mov	x27, #0x0                   	// #0
  419fe4:	ldp	x19, x20, [sp, #16]
  419fe8:	ldp	x21, x22, [sp, #32]
  419fec:	str	w0, [x1]
  419ff0:	b	419e80 <_obstack_memory_used@@Base+0x2db8>
  419ff4:	orr	w3, w3, #0x40
  419ff8:	strb	w3, [x27, #104]
  419ffc:	b	419f58 <_obstack_memory_used@@Base+0x2e90>
  41a000:	mov	x0, #0x18                  	// #24
  41a004:	bl	402440 <malloc@plt>
  41a008:	cbz	x0, 41a080 <_obstack_memory_used@@Base+0x2fb8>
  41a00c:	str	x0, [x27, #80]
  41a010:	mov	x1, x25
  41a014:	bl	419bb0 <_obstack_memory_used@@Base+0x2ae8>
  41a018:	cbnz	w0, 41a080 <_obstack_memory_used@@Base+0x2fb8>
  41a01c:	ldrb	w0, [x27, #104]
  41a020:	mov	x6, #0x0                   	// #0
  41a024:	orr	w0, w0, #0xffffff80
  41a028:	strb	w0, [x27, #104]
  41a02c:	tbnz	w19, #0, 419f6c <_obstack_memory_used@@Base+0x2ea4>
  41a030:	tbz	w19, #1, 41a038 <_obstack_memory_used@@Base+0x2f70>
  41a034:	cbnz	w20, 419f78 <_obstack_memory_used@@Base+0x2eb0>
  41a038:	tbz	w19, #4, 41a044 <_obstack_memory_used@@Base+0x2f7c>
  41a03c:	ldr	w0, [sp, #96]
  41a040:	cbz	w0, 419f78 <_obstack_memory_used@@Base+0x2eb0>
  41a044:	tbz	w19, #6, 41a050 <_obstack_memory_used@@Base+0x2f88>
  41a048:	ldr	w0, [sp, #100]
  41a04c:	cbz	w0, 419f78 <_obstack_memory_used@@Base+0x2eb0>
  41a050:	ldr	x2, [x25, #8]
  41a054:	b	419fa8 <_obstack_memory_used@@Base+0x2ee0>
  41a058:	orr	w3, w3, #0x10
  41a05c:	strb	w3, [x27, #104]
  41a060:	b	419f58 <_obstack_memory_used@@Base+0x2e90>
  41a064:	str	wzr, [x0]
  41a068:	mov	x27, #0x0                   	// #0
  41a06c:	mov	x0, x27
  41a070:	ldp	x25, x26, [sp, #64]
  41a074:	ldp	x27, x28, [sp, #80]
  41a078:	ldp	x29, x30, [sp], #112
  41a07c:	ret
  41a080:	mov	x0, x27
  41a084:	bl	418a08 <_obstack_memory_used@@Base+0x1940>
  41a088:	ldp	x23, x24, [sp, #48]
  41a08c:	b	419fd8 <_obstack_memory_used@@Base+0x2f10>
  41a090:	mov	x0, x27
  41a094:	bl	4026b0 <free@plt>
  41a098:	b	419fd8 <_obstack_memory_used@@Base+0x2f10>
  41a09c:	nop
  41a0a0:	stp	x29, x30, [sp, #-64]!
  41a0a4:	mov	x29, sp
  41a0a8:	stp	x19, x20, [sp, #16]
  41a0ac:	ldr	x20, [x2, #8]
  41a0b0:	stp	x21, x22, [sp, #32]
  41a0b4:	mov	x22, x0
  41a0b8:	cbz	x20, 41a298 <_obstack_memory_used@@Base+0x31d0>
  41a0bc:	stp	x23, x24, [sp, #48]
  41a0c0:	mov	x21, x1
  41a0c4:	mov	x23, x2
  41a0c8:	cmp	x20, #0x0
  41a0cc:	b.le	41a0e8 <_obstack_memory_used@@Base+0x3020>
  41a0d0:	ldr	x3, [x2, #16]
  41a0d4:	add	x1, x3, x20, lsl #3
  41a0d8:	ldr	x0, [x3], #8
  41a0dc:	add	x20, x20, x0
  41a0e0:	cmp	x1, x3
  41a0e4:	b.ne	41a0d8 <_obstack_memory_used@@Base+0x3010>  // b.any
  41a0e8:	ldr	x0, [x21, #136]
  41a0ec:	ldr	x1, [x21, #64]
  41a0f0:	and	x0, x20, x0
  41a0f4:	add	x0, x0, x0, lsl #1
  41a0f8:	lsl	x0, x0, #3
  41a0fc:	add	x2, x1, x0
  41a100:	ldr	x7, [x1, x0]
  41a104:	cmp	x7, #0x0
  41a108:	b.le	41a148 <_obstack_memory_used@@Base+0x3080>
  41a10c:	ldr	x8, [x2, #16]
  41a110:	mov	x6, #0x0                   	// #0
  41a114:	nop
  41a118:	ldr	x19, [x8, x6, lsl #3]
  41a11c:	mov	x1, x23
  41a120:	add	x6, x6, #0x1
  41a124:	add	x0, x19, #0x8
  41a128:	ldr	x3, [x19]
  41a12c:	cmp	x3, x20
  41a130:	b.ne	41a140 <_obstack_memory_used@@Base+0x3078>  // b.any
  41a134:	bl	4170f0 <_obstack_memory_used@@Base+0x28>
  41a138:	tst	w0, #0xff
  41a13c:	b.ne	41a240 <_obstack_memory_used@@Base+0x3178>  // b.any
  41a140:	cmp	x6, x7
  41a144:	b.ne	41a118 <_obstack_memory_used@@Base+0x3050>  // b.any
  41a148:	mov	x1, #0x1                   	// #1
  41a14c:	mov	x0, #0x70                  	// #112
  41a150:	bl	402520 <calloc@plt>
  41a154:	mov	x19, x0
  41a158:	cbz	x0, 41a284 <_obstack_memory_used@@Base+0x31bc>
  41a15c:	add	x24, x0, #0x8
  41a160:	mov	x1, x23
  41a164:	mov	x0, x24
  41a168:	bl	419bb0 <_obstack_memory_used@@Base+0x2ae8>
  41a16c:	cbnz	w0, 41a27c <_obstack_memory_used@@Base+0x31b4>
  41a170:	ldr	x6, [x23, #8]
  41a174:	str	x24, [x19, #80]
  41a178:	cmp	x6, #0x0
  41a17c:	b.le	41a22c <_obstack_memory_used@@Base+0x3164>
  41a180:	ldr	x0, [x23, #16]
  41a184:	ldr	x7, [x21]
  41a188:	add	x6, x0, x6, lsl #3
  41a18c:	b	41a1d4 <_obstack_memory_used@@Base+0x310c>
  41a190:	ldrb	w3, [x19, #104]
  41a194:	cmp	w4, #0x2
  41a198:	ldrb	w5, [x2, #10]
  41a19c:	mov	w1, w3
  41a1a0:	ubfx	x3, x3, #5, #1
  41a1a4:	ubfx	x5, x5, #4, #1
  41a1a8:	orr	w3, w3, w5
  41a1ac:	bfi	w1, w3, #5, #1
  41a1b0:	strb	w1, [x19, #104]
  41a1b4:	b.eq	41a258 <_obstack_memory_used@@Base+0x3190>  // b.none
  41a1b8:	cmp	w4, #0x4
  41a1bc:	b.ne	41a264 <_obstack_memory_used@@Base+0x319c>  // b.any
  41a1c0:	orr	w1, w1, #0x40
  41a1c4:	strb	w1, [x19, #104]
  41a1c8:	add	x0, x0, #0x8
  41a1cc:	cmp	x6, x0
  41a1d0:	b.eq	41a22c <_obstack_memory_used@@Base+0x3164>  // b.none
  41a1d4:	ldr	x2, [x0]
  41a1d8:	add	x2, x7, x2, lsl #4
  41a1dc:	ldrb	w4, [x2, #8]
  41a1e0:	cmp	w4, #0x1
  41a1e4:	b.ne	41a190 <_obstack_memory_used@@Base+0x30c8>  // b.any
  41a1e8:	ldr	w1, [x2, #8]
  41a1ec:	tst	w1, #0x3ff00
  41a1f0:	b.eq	41a1c8 <_obstack_memory_used@@Base+0x3100>  // b.none
  41a1f4:	ldrb	w1, [x19, #104]
  41a1f8:	ldrb	w2, [x2, #10]
  41a1fc:	mov	w3, w1
  41a200:	ubfx	x1, x1, #5, #1
  41a204:	ubfx	x2, x2, #4, #1
  41a208:	orr	w1, w1, w2
  41a20c:	bfi	w3, w1, #5, #1
  41a210:	strb	w3, [x19, #104]
  41a214:	ldrb	w1, [x19, #104]
  41a218:	add	x0, x0, #0x8
  41a21c:	cmp	x6, x0
  41a220:	orr	w1, w1, #0xffffff80
  41a224:	strb	w1, [x19, #104]
  41a228:	b.ne	41a1d4 <_obstack_memory_used@@Base+0x310c>  // b.any
  41a22c:	mov	x2, x20
  41a230:	mov	x0, x21
  41a234:	mov	x1, x19
  41a238:	bl	4178f8 <_obstack_memory_used@@Base+0x830>
  41a23c:	cbnz	w0, 41a2b4 <_obstack_memory_used@@Base+0x31ec>
  41a240:	ldp	x23, x24, [sp, #48]
  41a244:	mov	x0, x19
  41a248:	ldp	x19, x20, [sp, #16]
  41a24c:	ldp	x21, x22, [sp, #32]
  41a250:	ldp	x29, x30, [sp], #64
  41a254:	ret
  41a258:	orr	w1, w1, #0x10
  41a25c:	strb	w1, [x19, #104]
  41a260:	b	41a1c8 <_obstack_memory_used@@Base+0x3100>
  41a264:	cmp	w4, #0xc
  41a268:	b.eq	41a214 <_obstack_memory_used@@Base+0x314c>  // b.none
  41a26c:	ldr	w1, [x2, #8]
  41a270:	tst	w1, #0x3ff00
  41a274:	b.eq	41a1c8 <_obstack_memory_used@@Base+0x3100>  // b.none
  41a278:	b	41a214 <_obstack_memory_used@@Base+0x314c>
  41a27c:	mov	x0, x19
  41a280:	bl	4026b0 <free@plt>
  41a284:	mov	w0, #0xc                   	// #12
  41a288:	mov	x19, #0x0                   	// #0
  41a28c:	ldp	x23, x24, [sp, #48]
  41a290:	str	w0, [x22]
  41a294:	b	41a244 <_obstack_memory_used@@Base+0x317c>
  41a298:	str	wzr, [x0]
  41a29c:	mov	x19, #0x0                   	// #0
  41a2a0:	mov	x0, x19
  41a2a4:	ldp	x19, x20, [sp, #16]
  41a2a8:	ldp	x21, x22, [sp, #32]
  41a2ac:	ldp	x29, x30, [sp], #64
  41a2b0:	ret
  41a2b4:	mov	x0, x19
  41a2b8:	bl	418a08 <_obstack_memory_used@@Base+0x1940>
  41a2bc:	b	41a284 <_obstack_memory_used@@Base+0x31bc>
  41a2c0:	cmp	x3, #0x0
  41a2c4:	b.le	41a37c <_obstack_memory_used@@Base+0x32b4>
  41a2c8:	stp	x29, x30, [sp, #-96]!
  41a2cc:	mov	x29, sp
  41a2d0:	stp	x19, x20, [sp, #16]
  41a2d4:	mov	x20, x1
  41a2d8:	mov	x19, #0x0                   	// #0
  41a2dc:	stp	x21, x22, [sp, #32]
  41a2e0:	mov	x21, x3
  41a2e4:	mov	x22, x2
  41a2e8:	str	x23, [sp, #48]
  41a2ec:	mov	x23, x0
  41a2f0:	b	41a344 <_obstack_memory_used@@Base+0x327c>
  41a2f4:	add	x2, x4, #0x8
  41a2f8:	add	x1, x1, #0x8
  41a2fc:	add	x0, sp, #0x48
  41a300:	cbz	x4, 41a338 <_obstack_memory_used@@Base+0x3270>
  41a304:	bl	419c38 <_obstack_memory_used@@Base+0x2b70>
  41a308:	mov	w4, w0
  41a30c:	str	w4, [sp, #68]
  41a310:	add	x2, sp, #0x48
  41a314:	mov	x1, x23
  41a318:	add	x0, sp, #0x44
  41a31c:	cbnz	w4, 41a364 <_obstack_memory_used@@Base+0x329c>
  41a320:	bl	41a0a0 <_obstack_memory_used@@Base+0x2fd8>
  41a324:	str	x0, [x20, x19, lsl #3]
  41a328:	ldr	x0, [sp, #88]
  41a32c:	bl	4026b0 <free@plt>
  41a330:	ldr	w4, [sp, #68]
  41a334:	cbnz	w4, 41a364 <_obstack_memory_used@@Base+0x329c>
  41a338:	add	x19, x19, #0x1
  41a33c:	cmp	x21, x19
  41a340:	b.eq	41a360 <_obstack_memory_used@@Base+0x3298>  // b.none
  41a344:	ldr	x1, [x20, x19, lsl #3]
  41a348:	ldr	x4, [x22, x19, lsl #3]
  41a34c:	cbnz	x1, 41a2f4 <_obstack_memory_used@@Base+0x322c>
  41a350:	str	x4, [x20, x19, lsl #3]
  41a354:	add	x19, x19, #0x1
  41a358:	cmp	x21, x19
  41a35c:	b.ne	41a344 <_obstack_memory_used@@Base+0x327c>  // b.any
  41a360:	mov	w4, #0x0                   	// #0
  41a364:	mov	w0, w4
  41a368:	ldp	x19, x20, [sp, #16]
  41a36c:	ldp	x21, x22, [sp, #32]
  41a370:	ldr	x23, [sp, #48]
  41a374:	ldp	x29, x30, [sp], #96
  41a378:	ret
  41a37c:	mov	w4, #0x0                   	// #0
  41a380:	mov	w0, w4
  41a384:	ret
  41a388:	stp	x29, x30, [sp, #-160]!
  41a38c:	mov	x29, sp
  41a390:	ldr	x7, [x0, #200]
  41a394:	stp	x19, x20, [sp, #16]
  41a398:	mov	x20, #0x0                   	// #0
  41a39c:	stp	x21, x22, [sp, #32]
  41a3a0:	mov	x21, x2
  41a3a4:	mov	x22, x1
  41a3a8:	mov	x2, x7
  41a3ac:	stp	x23, x24, [sp, #48]
  41a3b0:	mov	x24, x0
  41a3b4:	str	x3, [sp, #104]
  41a3b8:	str	w4, [sp, #116]
  41a3bc:	b	41a3e0 <_obstack_memory_used@@Base+0x3318>
  41a3c0:	asr	x5, x5, #1
  41a3c4:	ldr	x0, [x24, #216]
  41a3c8:	add	x1, x5, x5, lsl #2
  41a3cc:	add	x1, x0, x1, lsl #3
  41a3d0:	ldr	x0, [x1, #8]
  41a3d4:	cmp	x21, x0
  41a3d8:	b.gt	41a5bc <_obstack_memory_used@@Base+0x34f4>
  41a3dc:	mov	x2, x5
  41a3e0:	add	x5, x2, x20
  41a3e4:	cmp	x2, x20
  41a3e8:	b.gt	41a3c0 <_obstack_memory_used@@Base+0x32f8>
  41a3ec:	cmp	x7, x20
  41a3f0:	b.le	41a5cc <_obstack_memory_used@@Base+0x3504>
  41a3f4:	add	x20, x20, x20, lsl #2
  41a3f8:	ldr	x19, [x24, #216]
  41a3fc:	lsl	x0, x20, #3
  41a400:	str	x0, [sp, #120]
  41a404:	add	x19, x19, x0
  41a408:	ldr	x0, [x19, #8]
  41a40c:	cmp	x21, x0
  41a410:	b.ne	41a5cc <_obstack_memory_used@@Base+0x3504>  // b.any
  41a414:	add	x23, x22, #0x10
  41a418:	stp	x25, x26, [sp, #64]
  41a41c:	stp	x27, x28, [sp, #80]
  41a420:	ldr	x26, [x24, #152]
  41a424:	b	41a4d0 <_obstack_memory_used@@Base+0x3408>
  41a428:	ldr	x0, [x24, #184]
  41a42c:	lsl	x28, x20, #3
  41a430:	ldr	x1, [x26, #24]
  41a434:	add	x25, x0, x28
  41a438:	ldr	x7, [x0, x20, lsl #3]
  41a43c:	ldr	x27, [x1, x2, lsl #3]
  41a440:	cbz	x7, 41a598 <_obstack_memory_used@@Base+0x34d0>
  41a444:	ldr	x0, [x7, #16]
  41a448:	mov	x2, x27
  41a44c:	add	x1, x7, #0x18
  41a450:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41a454:	cbnz	x0, 41a4c4 <_obstack_memory_used@@Base+0x33fc>
  41a458:	add	x1, x7, #0x8
  41a45c:	add	x0, sp, #0x88
  41a460:	bl	419bb0 <_obstack_memory_used@@Base+0x2ae8>
  41a464:	mov	w4, w0
  41a468:	mov	x1, x27
  41a46c:	add	x0, sp, #0x88
  41a470:	str	w4, [sp, #132]
  41a474:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  41a478:	and	w0, w0, #0xff
  41a47c:	ldr	w1, [sp, #132]
  41a480:	eor	w0, w0, #0x1
  41a484:	cmp	w1, #0x0
  41a488:	cset	w1, ne  // ne = any
  41a48c:	orr	w0, w1, w0
  41a490:	cbnz	w0, 41a608 <_obstack_memory_used@@Base+0x3540>
  41a494:	ldr	x4, [x24, #184]
  41a498:	add	x25, x4, x28
  41a49c:	add	x2, sp, #0x88
  41a4a0:	mov	x1, x26
  41a4a4:	add	x0, sp, #0x84
  41a4a8:	bl	41a0a0 <_obstack_memory_used@@Base+0x2fd8>
  41a4ac:	str	x0, [x25]
  41a4b0:	ldr	x0, [sp, #152]
  41a4b4:	bl	4026b0 <free@plt>
  41a4b8:	ldr	x0, [x24, #184]
  41a4bc:	ldr	x0, [x0, x20, lsl #3]
  41a4c0:	cbz	x0, 41a5e4 <_obstack_memory_used@@Base+0x351c>
  41a4c4:	ldrb	w0, [x19, #32]
  41a4c8:	add	x19, x19, #0x28
  41a4cc:	cbz	w0, 41a5c4 <_obstack_memory_used@@Base+0x34fc>
  41a4d0:	ldr	x2, [x19]
  41a4d4:	mov	x1, x23
  41a4d8:	ldr	x7, [x22, #8]
  41a4dc:	mov	x0, x7
  41a4e0:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41a4e4:	cbz	x0, 41a4c4 <_obstack_memory_used@@Base+0x33fc>
  41a4e8:	ldp	x0, x3, [x19, #16]
  41a4ec:	add	x3, x21, x3
  41a4f0:	sub	x20, x3, x0
  41a4f4:	cmp	x21, x20
  41a4f8:	b.ne	41a428 <_obstack_memory_used@@Base+0x3360>  // b.any
  41a4fc:	ldr	x3, [x26, #40]
  41a500:	add	x2, x2, x2, lsl #1
  41a504:	mov	x0, x7
  41a508:	mov	x1, x23
  41a50c:	add	x2, x3, x2, lsl #3
  41a510:	ldr	x2, [x2, #16]
  41a514:	ldr	x28, [x2]
  41a518:	mov	x2, x28
  41a51c:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41a520:	cbnz	x0, 41a4c4 <_obstack_memory_used@@Base+0x33fc>
  41a524:	mov	x1, #0x1                   	// #1
  41a528:	mov	x0, #0x8                   	// #8
  41a52c:	stp	x1, x1, [sp, #136]
  41a530:	bl	402440 <malloc@plt>
  41a534:	str	x0, [sp, #152]
  41a538:	cbz	x0, 41a638 <_obstack_memory_used@@Base+0x3570>
  41a53c:	mov	w4, #0x0                   	// #0
  41a540:	str	x28, [x0]
  41a544:	ldr	w3, [sp, #116]
  41a548:	add	x1, sp, #0x88
  41a54c:	ldr	x2, [sp, #104]
  41a550:	mov	x0, x26
  41a554:	str	w4, [sp, #132]
  41a558:	bl	419a50 <_obstack_memory_used@@Base+0x2988>
  41a55c:	mov	w19, w0
  41a560:	add	x1, sp, #0x88
  41a564:	mov	x0, x22
  41a568:	bl	419630 <_obstack_memory_used@@Base+0x2568>
  41a56c:	mov	w28, w0
  41a570:	ldr	x0, [sp, #152]
  41a574:	bl	4026b0 <free@plt>
  41a578:	ldr	w0, [sp, #132]
  41a57c:	orr	w1, w19, w28
  41a580:	orr	w1, w1, w0
  41a584:	cbnz	w1, 41a644 <_obstack_memory_used@@Base+0x357c>
  41a588:	ldr	x0, [sp, #120]
  41a58c:	ldr	x19, [x24, #216]
  41a590:	add	x19, x19, x0
  41a594:	b	41a4d0 <_obstack_memory_used@@Base+0x3408>
  41a598:	mov	x1, #0x1                   	// #1
  41a59c:	mov	x0, #0x8                   	// #8
  41a5a0:	stp	x1, x1, [sp, #136]
  41a5a4:	bl	402440 <malloc@plt>
  41a5a8:	str	x0, [sp, #152]
  41a5ac:	cbz	x0, 41a618 <_obstack_memory_used@@Base+0x3550>
  41a5b0:	str	x27, [x0]
  41a5b4:	str	wzr, [sp, #132]
  41a5b8:	b	41a49c <_obstack_memory_used@@Base+0x33d4>
  41a5bc:	add	x20, x5, #0x1
  41a5c0:	b	41a3e0 <_obstack_memory_used@@Base+0x3318>
  41a5c4:	ldp	x25, x26, [sp, #64]
  41a5c8:	ldp	x27, x28, [sp, #80]
  41a5cc:	mov	w0, #0x0                   	// #0
  41a5d0:	ldp	x19, x20, [sp, #16]
  41a5d4:	ldp	x21, x22, [sp, #32]
  41a5d8:	ldp	x23, x24, [sp, #48]
  41a5dc:	ldp	x29, x30, [sp], #160
  41a5e0:	ret
  41a5e4:	ldr	w0, [sp, #132]
  41a5e8:	cbz	w0, 41a4c4 <_obstack_memory_used@@Base+0x33fc>
  41a5ec:	ldp	x19, x20, [sp, #16]
  41a5f0:	ldp	x21, x22, [sp, #32]
  41a5f4:	ldp	x23, x24, [sp, #48]
  41a5f8:	ldp	x25, x26, [sp, #64]
  41a5fc:	ldp	x27, x28, [sp, #80]
  41a600:	ldp	x29, x30, [sp], #160
  41a604:	ret
  41a608:	ldr	x0, [sp, #152]
  41a60c:	bl	4026b0 <free@plt>
  41a610:	ldr	w0, [sp, #132]
  41a614:	cbnz	w0, 41a5ec <_obstack_memory_used@@Base+0x3524>
  41a618:	mov	w0, #0xc                   	// #12
  41a61c:	ldp	x19, x20, [sp, #16]
  41a620:	ldp	x21, x22, [sp, #32]
  41a624:	ldp	x23, x24, [sp, #48]
  41a628:	ldp	x25, x26, [sp, #64]
  41a62c:	ldp	x27, x28, [sp, #80]
  41a630:	ldp	x29, x30, [sp], #160
  41a634:	ret
  41a638:	mov	w4, #0xc                   	// #12
  41a63c:	stp	xzr, xzr, [sp, #136]
  41a640:	b	41a544 <_obstack_memory_used@@Base+0x347c>
  41a644:	cbnz	w0, 41a5ec <_obstack_memory_used@@Base+0x3524>
  41a648:	cmp	w19, #0x0
  41a64c:	csel	w0, w19, w28, ne  // ne = any
  41a650:	ldp	x25, x26, [sp, #64]
  41a654:	ldp	x27, x28, [sp, #80]
  41a658:	b	41a5d0 <_obstack_memory_used@@Base+0x3508>
  41a65c:	nop
  41a660:	stp	x29, x30, [sp, #-256]!
  41a664:	mov	x29, sp
  41a668:	stp	x23, x24, [sp, #48]
  41a66c:	mov	x23, x0
  41a670:	mov	x0, #0x3800                	// #14336
  41a674:	str	x1, [sp, #136]
  41a678:	bl	402440 <malloc@plt>
  41a67c:	cbz	x0, 41ae78 <_obstack_memory_used@@Base+0x3db0>
  41a680:	ldr	x2, [sp, #136]
  41a684:	mov	x1, #0x1800                	// #6144
  41a688:	add	x1, x0, x1
  41a68c:	stp	x19, x20, [sp, #16]
  41a690:	add	x24, x2, #0x8
  41a694:	str	x1, [sp, #104]
  41a698:	mov	x20, x0
  41a69c:	stp	xzr, xzr, [sp, #160]
  41a6a0:	ldr	x1, [x24, #8]
  41a6a4:	stp	xzr, xzr, [x2, #88]
  41a6a8:	stp	xzr, xzr, [sp, #176]
  41a6ac:	cmp	x1, #0x0
  41a6b0:	b.le	41aed8 <_obstack_memory_used@@Base+0x3e10>
  41a6b4:	mov	x19, #0x0                   	// #0
  41a6b8:	stp	x21, x22, [sp, #32]
  41a6bc:	stp	x25, x26, [sp, #64]
  41a6c0:	mov	x25, #0x0                   	// #0
  41a6c4:	stp	x27, x28, [sp, #80]
  41a6c8:	lsl	x1, x25, #3
  41a6cc:	ldr	x0, [x24, #16]
  41a6d0:	str	x1, [sp, #120]
  41a6d4:	ldr	x2, [x23]
  41a6d8:	ldr	x1, [x0, x25, lsl #3]
  41a6dc:	lsl	x1, x1, #4
  41a6e0:	add	x21, x2, x1
  41a6e4:	ldr	w0, [x21, #8]
  41a6e8:	ldrb	w28, [x21, #8]
  41a6ec:	ubfx	x0, x0, #8, #10
  41a6f0:	cmp	w28, #0x1
  41a6f4:	b.eq	41a95c <_obstack_memory_used@@Base+0x3894>  // b.none
  41a6f8:	cmp	w28, #0x3
  41a6fc:	b.eq	41adc0 <_obstack_memory_used@@Base+0x3cf8>  // b.none
  41a700:	cmp	w28, #0x5
  41a704:	b.eq	41aca0 <_obstack_memory_used@@Base+0x3bd8>  // b.none
  41a708:	cmp	w28, #0x7
  41a70c:	b.eq	41ad9c <_obstack_memory_used@@Base+0x3cd4>  // b.none
  41a710:	ldr	x0, [x24, #8]
  41a714:	add	x25, x25, #0x1
  41a718:	cmp	x25, x0
  41a71c:	b.lt	41a6c8 <_obstack_memory_used@@Base+0x3600>  // b.tstop
  41a720:	cmp	x19, #0x0
  41a724:	b.le	41afe0 <_obstack_memory_used@@Base+0x3f18>
  41a728:	add	x22, x19, #0x1
  41a72c:	stp	x22, xzr, [sp, #192]
  41a730:	lsl	x27, x19, #1
  41a734:	lsl	x22, x22, #3
  41a738:	mov	x0, x22
  41a73c:	bl	402440 <malloc@plt>
  41a740:	str	x0, [sp, #208]
  41a744:	mov	x25, x0
  41a748:	cbz	x0, 41ac24 <_obstack_memory_used@@Base+0x3b5c>
  41a74c:	add	x26, x27, x19
  41a750:	str	wzr, [sp, #160]
  41a754:	lsl	x21, x26, #3
  41a758:	mov	x0, x21
  41a75c:	bl	402440 <malloc@plt>
  41a760:	mov	x24, x0
  41a764:	cbz	x0, 41ac24 <_obstack_memory_used@@Base+0x3b5c>
  41a768:	sub	x22, x22, #0x8
  41a76c:	add	x26, x20, #0x8
  41a770:	add	x0, x0, x22
  41a774:	add	x25, sp, #0x100
  41a778:	str	x0, [sp, #112]
  41a77c:	add	x0, x0, x22
  41a780:	mov	x22, #0x0                   	// #0
  41a784:	str	x0, [sp, #120]
  41a788:	str	wzr, [sp, #128]
  41a78c:	stp	xzr, xzr, [sp, #224]
  41a790:	stp	xzr, xzr, [sp, #240]
  41a794:	mov	x28, #0x0                   	// #0
  41a798:	ldr	x5, [x26]
  41a79c:	str	xzr, [sp, #200]
  41a7a0:	cmp	x5, #0x0
  41a7a4:	b.le	41a7ec <_obstack_memory_used@@Base+0x3724>
  41a7a8:	ldr	x3, [x26, #8]
  41a7ac:	add	x0, sp, #0xc0
  41a7b0:	ldr	x1, [x23, #24]
  41a7b4:	ldr	x3, [x3, x28, lsl #3]
  41a7b8:	ldr	x3, [x1, x3, lsl #3]
  41a7bc:	cmn	x3, #0x1
  41a7c0:	b.eq	41a7e0 <_obstack_memory_used@@Base+0x3718>  // b.none
  41a7c4:	ldr	x1, [x23, #48]
  41a7c8:	add	x3, x3, x3, lsl #1
  41a7cc:	add	x1, x1, x3, lsl #3
  41a7d0:	bl	419630 <_obstack_memory_used@@Base+0x2568>
  41a7d4:	str	w0, [sp, #160]
  41a7d8:	cbnz	w0, 41ac18 <_obstack_memory_used@@Base+0x3b50>
  41a7dc:	ldr	x5, [x26]
  41a7e0:	add	x28, x28, #0x1
  41a7e4:	cmp	x5, x28
  41a7e8:	b.gt	41a7a8 <_obstack_memory_used@@Base+0x36e0>
  41a7ec:	add	x2, sp, #0xc0
  41a7f0:	mov	x1, x23
  41a7f4:	add	x0, sp, #0xa0
  41a7f8:	mov	w3, #0x0                   	// #0
  41a7fc:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  41a800:	str	x0, [x24, x22, lsl #3]
  41a804:	cbz	x0, 41ac0c <_obstack_memory_used@@Base+0x3b44>
  41a808:	ldrsb	w1, [x0, #104]
  41a80c:	tbnz	w1, #31, 41adfc <_obstack_memory_used@@Base+0x3d34>
  41a810:	ldr	x1, [sp, #112]
  41a814:	str	x0, [x1, x22, lsl #3]
  41a818:	ldr	x1, [sp, #120]
  41a81c:	ldr	x0, [x24, x22, lsl #3]
  41a820:	str	x0, [x1, x22, lsl #3]
  41a824:	add	x5, sp, #0xe0
  41a828:	mov	x7, x20
  41a82c:	mov	x0, x5
  41a830:	add	x2, x20, x22, lsl #5
  41a834:	ldr	x1, [x0]
  41a838:	add	x2, x2, #0x8
  41a83c:	ldr	x3, [x2, #6136]
  41a840:	orr	x1, x1, x3
  41a844:	str	x1, [x0], #8
  41a848:	cmp	x25, x0
  41a84c:	b.ne	41a834 <_obstack_memory_used@@Base+0x376c>  // b.any
  41a850:	add	x22, x22, #0x1
  41a854:	add	x26, x26, #0x18
  41a858:	cmp	x22, x19
  41a85c:	b.ne	41a794 <_obstack_memory_used@@Base+0x36cc>  // b.any
  41a860:	ldr	w0, [sp, #128]
  41a864:	stp	x5, x7, [sp, #144]
  41a868:	cbnz	w0, 41af28 <_obstack_memory_used@@Base+0x3e60>
  41a86c:	mov	x1, #0x100                 	// #256
  41a870:	mov	x0, #0x8                   	// #8
  41a874:	bl	402520 <calloc@plt>
  41a878:	mov	x10, x0
  41a87c:	ldr	x0, [sp, #136]
  41a880:	str	x10, [x0, #88]
  41a884:	cbz	x10, 41ac18 <_obstack_memory_used@@Base+0x3b50>
  41a888:	ldp	x5, x7, [sp, #144]
  41a88c:	add	x6, x23, #0xb8
  41a890:	ldr	x8, [sp, #104]
  41a894:	mov	x9, #0x0                   	// #0
  41a898:	ldr	x0, [x5]
  41a89c:	add	x3, x10, x9, lsl #9
  41a8a0:	mov	x1, #0x1                   	// #1
  41a8a4:	cbz	x0, 41a8bc <_obstack_memory_used@@Base+0x37f4>
  41a8a8:	tbnz	w0, #0, 41ae88 <_obstack_memory_used@@Base+0x3dc0>
  41a8ac:	lsl	x1, x1, #1
  41a8b0:	lsr	x0, x0, #1
  41a8b4:	add	x3, x3, #0x8
  41a8b8:	cbnz	x0, 41a8a8 <_obstack_memory_used@@Base+0x37e0>
  41a8bc:	add	x9, x9, #0x1
  41a8c0:	add	x5, x5, #0x8
  41a8c4:	cmp	x9, #0x4
  41a8c8:	add	x8, x8, #0x8
  41a8cc:	b.ne	41a898 <_obstack_memory_used@@Base+0x37d0>  // b.any
  41a8d0:	ldr	x0, [sp, #224]
  41a8d4:	tst	w0, #0x400
  41a8d8:	b.eq	41a900 <_obstack_memory_used@@Base+0x3838>  // b.none
  41a8dc:	mov	x0, #0x0                   	// #0
  41a8e0:	ldr	x2, [sp, #104]
  41a8e4:	lsl	x1, x0, #5
  41a8e8:	ldr	x1, [x2, x1]
  41a8ec:	tst	w1, #0x400
  41a8f0:	b.ne	41af0c <_obstack_memory_used@@Base+0x3e44>  // b.any
  41a8f4:	add	x0, x0, #0x1
  41a8f8:	cmp	x0, x19
  41a8fc:	b.ne	41a8e0 <_obstack_memory_used@@Base+0x3818>  // b.any
  41a900:	mov	x0, x24
  41a904:	str	x7, [sp, #104]
  41a908:	bl	4026b0 <free@plt>
  41a90c:	add	x26, x20, x21
  41a910:	ldr	x0, [sp, #208]
  41a914:	bl	4026b0 <free@plt>
  41a918:	ldr	x7, [sp, #104]
  41a91c:	nop
  41a920:	add	x7, x7, #0x18
  41a924:	ldur	x0, [x7, #-8]
  41a928:	stp	x7, x7, [sp, #104]
  41a92c:	bl	4026b0 <free@plt>
  41a930:	ldr	x7, [sp, #104]
  41a934:	cmp	x26, x7
  41a938:	b.ne	41a920 <_obstack_memory_used@@Base+0x3858>  // b.any
  41a93c:	mov	x0, x20
  41a940:	bl	4026b0 <free@plt>
  41a944:	mov	w0, #0x1                   	// #1
  41a948:	ldp	x19, x20, [sp, #16]
  41a94c:	ldp	x21, x22, [sp, #32]
  41a950:	ldp	x25, x26, [sp, #64]
  41a954:	ldp	x27, x28, [sp, #80]
  41a958:	b	41ac68 <_obstack_memory_used@@Base+0x3ba0>
  41a95c:	ldrb	w2, [x2, x1]
  41a960:	add	x27, sp, #0xa0
  41a964:	mov	x1, #0x1                   	// #1
  41a968:	ubfx	x3, x2, #6, #2
  41a96c:	lsl	x2, x1, x2
  41a970:	ldr	x1, [x27, x3, lsl #3]
  41a974:	orr	x1, x1, x2
  41a978:	str	x1, [x27, x3, lsl #3]
  41a97c:	cbz	w0, 41aa38 <_obstack_memory_used@@Base+0x3970>
  41a980:	tbnz	w0, #5, 41abec <_obstack_memory_used@@Base+0x3b24>
  41a984:	tbnz	w0, #7, 41abe0 <_obstack_memory_used@@Base+0x3b18>
  41a988:	tbz	w0, #2, 41a9e0 <_obstack_memory_used@@Base+0x3918>
  41a98c:	cmp	w28, #0x1
  41a990:	b.eq	41ad84 <_obstack_memory_used@@Base+0x3cbc>  // b.none
  41a994:	ldr	w1, [x23, #180]
  41a998:	cmp	w1, #0x1
  41a99c:	b.le	41ad4c <_obstack_memory_used@@Base+0x3c84>
  41a9a0:	ldr	x12, [x23, #120]
  41a9a4:	mov	x5, x27
  41a9a8:	add	x3, x23, #0xb8
  41a9ac:	mov	x4, #0x0                   	// #0
  41a9b0:	mov	x2, #0x0                   	// #0
  41a9b4:	ldr	x1, [x12, x2, lsl #3]
  41a9b8:	ldr	x11, [x3, x2, lsl #3]
  41a9bc:	add	x2, x2, #0x1
  41a9c0:	ldr	x10, [x5]
  41a9c4:	orn	x1, x11, x1
  41a9c8:	cmp	x2, #0x4
  41a9cc:	and	x1, x1, x10
  41a9d0:	str	x1, [x5], #8
  41a9d4:	orr	x4, x4, x1
  41a9d8:	b.ne	41a9b4 <_obstack_memory_used@@Base+0x38ec>  // b.any
  41a9dc:	cbz	x4, 41a710 <_obstack_memory_used@@Base+0x3648>
  41a9e0:	tbz	w0, #3, 41aa38 <_obstack_memory_used@@Base+0x3970>
  41a9e4:	cmp	w28, #0x1
  41a9e8:	b.eq	41adf0 <_obstack_memory_used@@Base+0x3d28>  // b.none
  41a9ec:	ldr	w0, [x23, #180]
  41a9f0:	cmp	w0, #0x1
  41a9f4:	b.le	41ad14 <_obstack_memory_used@@Base+0x3c4c>
  41a9f8:	ldr	x11, [x23, #120]
  41a9fc:	mov	x4, x27
  41aa00:	add	x3, x23, #0xb8
  41aa04:	mov	x2, #0x0                   	// #0
  41aa08:	mov	x1, #0x0                   	// #0
  41aa0c:	ldr	x10, [x11, x1, lsl #3]
  41aa10:	ldr	x0, [x3, x1, lsl #3]
  41aa14:	add	x1, x1, #0x1
  41aa18:	ldr	x5, [x4]
  41aa1c:	and	x0, x0, x10
  41aa20:	cmp	x1, #0x4
  41aa24:	bic	x0, x5, x0
  41aa28:	str	x0, [x4], #8
  41aa2c:	orr	x2, x2, x0
  41aa30:	b.ne	41aa0c <_obstack_memory_used@@Base+0x3944>  // b.any
  41aa34:	cbz	x2, 41a710 <_obstack_memory_used@@Base+0x3648>
  41aa38:	mov	x0, #0x17f8                	// #6136
  41aa3c:	cmp	x19, #0x0
  41aa40:	add	x26, x20, x0
  41aa44:	mov	x22, #0x0                   	// #0
  41aa48:	b.gt	41aa7c <_obstack_memory_used@@Base+0x39b4>
  41aa4c:	b	41ab88 <_obstack_memory_used@@Base+0x3ac0>
  41aa50:	ldrb	w2, [x21]
  41aa54:	ldr	x3, [sp, #104]
  41aa58:	ubfx	x1, x2, #6, #2
  41aa5c:	add	x1, x3, x1, lsl #3
  41aa60:	ldr	x0, [x1, x0]
  41aa64:	lsr	x0, x0, x2
  41aa68:	tbnz	w0, #0, 41aa88 <_obstack_memory_used@@Base+0x39c0>
  41aa6c:	add	x22, x22, #0x1
  41aa70:	add	x26, x26, #0x20
  41aa74:	cmp	x22, x19
  41aa78:	b.ge	41ab88 <_obstack_memory_used@@Base+0x3ac0>  // b.tcont
  41aa7c:	cmp	w28, #0x1
  41aa80:	lsl	x0, x22, #5
  41aa84:	b.eq	41aa50 <_obstack_memory_used@@Base+0x3988>  // b.none
  41aa88:	mov	x1, #0x1                   	// #1
  41aa8c:	mov	x3, #0x0                   	// #0
  41aa90:	lsl	x0, x1, #3
  41aa94:	add	x2, sp, #0xc0
  41aa98:	add	x5, x27, x0
  41aa9c:	add	x2, x2, x0
  41aaa0:	ldr	x4, [x26, x1, lsl #3]
  41aaa4:	add	x1, x1, #0x1
  41aaa8:	ldur	x0, [x5, #-8]
  41aaac:	cmp	x1, #0x5
  41aab0:	and	x0, x0, x4
  41aab4:	stur	x0, [x2, #-8]
  41aab8:	orr	x3, x3, x0
  41aabc:	b.ne	41aa90 <_obstack_memory_used@@Base+0x39c8>  // b.any
  41aac0:	cbz	x3, 41aa6c <_obstack_memory_used@@Base+0x39a4>
  41aac4:	mov	x2, x27
  41aac8:	mov	x0, #0x1                   	// #1
  41aacc:	mov	x10, #0x0                   	// #0
  41aad0:	mov	x5, #0x0                   	// #0
  41aad4:	add	x1, sp, #0xe0
  41aad8:	add	x11, x1, x0, lsl #3
  41aadc:	ldr	x4, [x2]
  41aae0:	ldr	x1, [x26, x0, lsl #3]
  41aae4:	add	x0, x0, #0x1
  41aae8:	cmp	x0, #0x5
  41aaec:	bic	x3, x1, x4
  41aaf0:	bic	x1, x4, x1
  41aaf4:	stur	x3, [x11, #-8]
  41aaf8:	orr	x5, x5, x3
  41aafc:	str	x1, [x2], #8
  41ab00:	orr	x10, x10, x1
  41ab04:	b.ne	41aad4 <_obstack_memory_used@@Base+0x3a0c>  // b.any
  41ab08:	add	x1, x22, x22, lsl #1
  41ab0c:	add	x1, x20, x1, lsl #3
  41ab10:	cbz	x5, 41ab60 <_obstack_memory_used@@Base+0x3a98>
  41ab14:	ldr	x0, [sp, #104]
  41ab18:	str	x1, [sp, #112]
  41ab1c:	ldp	x4, x5, [sp, #224]
  41ab20:	str	x10, [sp, #128]
  41ab24:	add	x11, x0, x19, lsl #5
  41ab28:	add	x0, x19, x19, lsl #1
  41ab2c:	ldp	x2, x3, [sp, #240]
  41ab30:	add	x0, x20, x0, lsl #3
  41ab34:	stp	x4, x5, [x11]
  41ab38:	stp	x2, x3, [x11, #16]
  41ab3c:	ldp	x2, x3, [sp, #192]
  41ab40:	stp	x2, x3, [x26, #8]
  41ab44:	ldp	x2, x3, [sp, #208]
  41ab48:	stp	x2, x3, [x26, #24]
  41ab4c:	bl	419bb0 <_obstack_memory_used@@Base+0x2ae8>
  41ab50:	cbnz	w0, 41ac80 <_obstack_memory_used@@Base+0x3bb8>
  41ab54:	ldr	x1, [sp, #112]
  41ab58:	add	x19, x19, #0x1
  41ab5c:	ldr	x10, [sp, #128]
  41ab60:	mov	x0, x1
  41ab64:	ldr	x2, [x24, #16]
  41ab68:	str	x10, [sp, #112]
  41ab6c:	ldr	x1, [sp, #120]
  41ab70:	ldr	x1, [x2, x1]
  41ab74:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  41ab78:	tst	w0, #0xff
  41ab7c:	b.eq	41ac80 <_obstack_memory_used@@Base+0x3bb8>  // b.none
  41ab80:	ldr	x10, [sp, #112]
  41ab84:	cbnz	x10, 41aa6c <_obstack_memory_used@@Base+0x39a4>
  41ab88:	cmp	x22, x19
  41ab8c:	b.ne	41a710 <_obstack_memory_used@@Base+0x3648>  // b.any
  41ab90:	ldr	x0, [sp, #104]
  41ab94:	add	x2, x19, x19, lsl #1
  41ab98:	ldr	x5, [x24, #16]
  41ab9c:	add	x26, x20, x2, lsl #3
  41aba0:	add	x3, x0, x19, lsl #5
  41aba4:	mov	x4, #0x1                   	// #1
  41aba8:	ldp	x0, x1, [x27]
  41abac:	stp	x0, x1, [x3]
  41abb0:	ldp	x0, x1, [x27, #16]
  41abb4:	stp	x0, x1, [x3, #16]
  41abb8:	ldr	x1, [sp, #120]
  41abbc:	mov	x0, #0x8                   	// #8
  41abc0:	ldr	x22, [x5, x1]
  41abc4:	str	x4, [x20, x2, lsl #3]
  41abc8:	str	x4, [x26, #8]
  41abcc:	bl	402440 <malloc@plt>
  41abd0:	str	x0, [x26, #16]
  41abd4:	cbz	x0, 41ac74 <_obstack_memory_used@@Base+0x3bac>
  41abd8:	add	x19, x19, #0x1
  41abdc:	str	x22, [x0]
  41abe0:	stp	xzr, xzr, [x27]
  41abe4:	stp	xzr, xzr, [x27, #16]
  41abe8:	b	41a710 <_obstack_memory_used@@Base+0x3648>
  41abec:	ldr	x1, [sp, #160]
  41abf0:	stp	xzr, xzr, [x27]
  41abf4:	stp	xzr, xzr, [x27, #16]
  41abf8:	tst	w1, #0x400
  41abfc:	b.eq	41a710 <_obstack_memory_used@@Base+0x3648>  // b.none
  41ac00:	mov	x1, #0x400                 	// #1024
  41ac04:	str	x1, [sp, #160]
  41ac08:	b	41a984 <_obstack_memory_used@@Base+0x38bc>
  41ac0c:	ldr	w1, [sp, #160]
  41ac10:	cbz	w1, 41a808 <_obstack_memory_used@@Base+0x3740>
  41ac14:	nop
  41ac18:	mov	x0, x24
  41ac1c:	bl	4026b0 <free@plt>
  41ac20:	ldr	x25, [sp, #208]
  41ac24:	add	x19, x27, x19
  41ac28:	mov	x21, x20
  41ac2c:	mov	x0, x25
  41ac30:	add	x19, x20, x19, lsl #3
  41ac34:	bl	4026b0 <free@plt>
  41ac38:	ldr	x0, [x21, #16]
  41ac3c:	add	x21, x21, #0x18
  41ac40:	bl	4026b0 <free@plt>
  41ac44:	cmp	x19, x21
  41ac48:	b.ne	41ac38 <_obstack_memory_used@@Base+0x3b70>  // b.any
  41ac4c:	mov	x0, x20
  41ac50:	bl	4026b0 <free@plt>
  41ac54:	ldp	x19, x20, [sp, #16]
  41ac58:	mov	w0, #0x0                   	// #0
  41ac5c:	ldp	x21, x22, [sp, #32]
  41ac60:	ldp	x25, x26, [sp, #64]
  41ac64:	ldp	x27, x28, [sp, #80]
  41ac68:	ldp	x23, x24, [sp, #48]
  41ac6c:	ldp	x29, x30, [sp], #256
  41ac70:	ret
  41ac74:	stp	xzr, xzr, [x26]
  41ac78:	cbz	x19, 41ac4c <_obstack_memory_used@@Base+0x3b84>
  41ac7c:	nop
  41ac80:	add	x22, x20, #0x10
  41ac84:	mov	x21, #0x0                   	// #0
  41ac88:	ldr	x0, [x22], #24
  41ac8c:	add	x21, x21, #0x1
  41ac90:	bl	4026b0 <free@plt>
  41ac94:	cmp	x21, x19
  41ac98:	b.lt	41ac88 <_obstack_memory_used@@Base+0x3bc0>  // b.tstop
  41ac9c:	b	41ac4c <_obstack_memory_used@@Base+0x3b84>
  41aca0:	ldr	w1, [x23, #180]
  41aca4:	add	x27, sp, #0xa0
  41aca8:	cmp	w1, #0x1
  41acac:	b.le	41ad00 <_obstack_memory_used@@Base+0x3c38>
  41acb0:	ldr	x5, [x23, #120]
  41acb4:	mov	x3, x27
  41acb8:	mov	x1, #0x0                   	// #0
  41acbc:	ldr	x4, [x5, x1]
  41acc0:	add	x1, x1, #0x8
  41acc4:	ldr	x2, [x3]
  41acc8:	cmp	x1, #0x20
  41accc:	orr	x2, x2, x4
  41acd0:	str	x2, [x3], #8
  41acd4:	b.ne	41acbc <_obstack_memory_used@@Base+0x3bf4>  // b.any
  41acd8:	ldr	x1, [x23, #216]
  41acdc:	tbnz	w1, #6, 41acec <_obstack_memory_used@@Base+0x3c24>
  41ace0:	ldr	x2, [sp, #160]
  41ace4:	and	x2, x2, #0xfffffffffffffbff
  41ace8:	str	x2, [sp, #160]
  41acec:	tbz	w1, #7, 41a97c <_obstack_memory_used@@Base+0x38b4>
  41acf0:	ldr	x1, [sp, #160]
  41acf4:	and	x1, x1, #0xfffffffffffffffe
  41acf8:	str	x1, [sp, #160]
  41acfc:	b	41a97c <_obstack_memory_used@@Base+0x38b4>
  41ad00:	mov	x2, #0xffffffffffffffff    	// #-1
  41ad04:	mov	x3, #0xffffffffffffffff    	// #-1
  41ad08:	stp	x2, x3, [sp, #160]
  41ad0c:	stp	x2, x3, [sp, #176]
  41ad10:	b	41acd8 <_obstack_memory_used@@Base+0x3c10>
  41ad14:	mov	x4, x27
  41ad18:	add	x3, x23, #0xb8
  41ad1c:	mov	x2, #0x0                   	// #0
  41ad20:	mov	x1, #0x0                   	// #0
  41ad24:	ldr	x0, [x3, x1, lsl #3]
  41ad28:	add	x1, x1, #0x1
  41ad2c:	ldr	x5, [x4]
  41ad30:	cmp	x1, #0x4
  41ad34:	bic	x0, x5, x0
  41ad38:	str	x0, [x4], #8
  41ad3c:	orr	x2, x2, x0
  41ad40:	b.ne	41ad24 <_obstack_memory_used@@Base+0x3c5c>  // b.any
  41ad44:	cbz	x2, 41a710 <_obstack_memory_used@@Base+0x3648>
  41ad48:	b	41aa38 <_obstack_memory_used@@Base+0x3970>
  41ad4c:	mov	x5, x27
  41ad50:	add	x3, x23, #0xb8
  41ad54:	mov	x4, #0x0                   	// #0
  41ad58:	mov	x2, #0x0                   	// #0
  41ad5c:	ldr	x1, [x3, x2, lsl #3]
  41ad60:	add	x2, x2, #0x1
  41ad64:	ldr	x10, [x5]
  41ad68:	cmp	x2, #0x4
  41ad6c:	and	x1, x1, x10
  41ad70:	str	x1, [x5], #8
  41ad74:	orr	x4, x4, x1
  41ad78:	b.ne	41ad5c <_obstack_memory_used@@Base+0x3c94>  // b.any
  41ad7c:	cbnz	x4, 41a9e0 <_obstack_memory_used@@Base+0x3918>
  41ad80:	b	41a710 <_obstack_memory_used@@Base+0x3648>
  41ad84:	ldrb	w1, [x21, #10]
  41ad88:	tbz	w1, #6, 41abe0 <_obstack_memory_used@@Base+0x3b18>
  41ad8c:	ldr	w1, [x23, #180]
  41ad90:	cmp	w1, #0x1
  41ad94:	b.gt	41a9a0 <_obstack_memory_used@@Base+0x38d8>
  41ad98:	b	41ad4c <_obstack_memory_used@@Base+0x3c84>
  41ad9c:	ldr	x1, [x23, #216]
  41ada0:	mov	x2, #0xffffffffffffffff    	// #-1
  41ada4:	mov	x3, #0xffffffffffffffff    	// #-1
  41ada8:	stp	x2, x3, [sp, #160]
  41adac:	add	x27, sp, #0xa0
  41adb0:	tbnz	w1, #6, 41acec <_obstack_memory_used@@Base+0x3c24>
  41adb4:	mov	x2, #0xfffffffffffffbff    	// #-1025
  41adb8:	str	x2, [sp, #160]
  41adbc:	b	41acec <_obstack_memory_used@@Base+0x3c24>
  41adc0:	add	x27, sp, #0xa0
  41adc4:	mov	x3, #0x0                   	// #0
  41adc8:	ldr	x5, [x2, x1]
  41adcc:	mov	x2, x27
  41add0:	ldr	x4, [x5, x3]
  41add4:	add	x3, x3, #0x8
  41add8:	ldr	x1, [x2]
  41addc:	cmp	x3, #0x20
  41ade0:	orr	x1, x1, x4
  41ade4:	str	x1, [x2], #8
  41ade8:	b.ne	41add0 <_obstack_memory_used@@Base+0x3d08>  // b.any
  41adec:	b	41a97c <_obstack_memory_used@@Base+0x38b4>
  41adf0:	ldrb	w0, [x21, #10]
  41adf4:	tbz	w0, #6, 41a9ec <_obstack_memory_used@@Base+0x3924>
  41adf8:	b	41abe0 <_obstack_memory_used@@Base+0x3b18>
  41adfc:	mov	x1, x23
  41ae00:	add	x2, sp, #0xc0
  41ae04:	add	x0, sp, #0xa0
  41ae08:	mov	w3, #0x1                   	// #1
  41ae0c:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  41ae10:	ldr	x1, [sp, #112]
  41ae14:	str	x0, [x1, x22, lsl #3]
  41ae18:	cbz	x0, 41af00 <_obstack_memory_used@@Base+0x3e38>
  41ae1c:	ldr	x1, [x24, x22, lsl #3]
  41ae20:	cmp	x0, x1
  41ae24:	b.eq	41ae3c <_obstack_memory_used@@Base+0x3d74>  // b.none
  41ae28:	ldr	w0, [x23, #180]
  41ae2c:	cmp	w0, #0x2
  41ae30:	ldr	w0, [sp, #128]
  41ae34:	csinc	w0, w0, wzr, lt  // lt = tstop
  41ae38:	str	w0, [sp, #128]
  41ae3c:	mov	x1, x23
  41ae40:	add	x2, sp, #0xc0
  41ae44:	add	x0, sp, #0xa0
  41ae48:	mov	w3, #0x2                   	// #2
  41ae4c:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  41ae50:	ldr	x1, [sp, #120]
  41ae54:	str	x0, [x1, x22, lsl #3]
  41ae58:	cbnz	x0, 41a824 <_obstack_memory_used@@Base+0x375c>
  41ae5c:	ldr	w0, [sp, #160]
  41ae60:	cbz	w0, 41a824 <_obstack_memory_used@@Base+0x375c>
  41ae64:	b	41ac18 <_obstack_memory_used@@Base+0x3b50>
  41ae68:	ldp	x19, x20, [sp, #16]
  41ae6c:	ldp	x21, x22, [sp, #32]
  41ae70:	ldp	x25, x26, [sp, #64]
  41ae74:	ldp	x27, x28, [sp, #80]
  41ae78:	mov	w0, #0x0                   	// #0
  41ae7c:	ldp	x23, x24, [sp, #48]
  41ae80:	ldp	x29, x30, [sp], #256
  41ae84:	ret
  41ae88:	ldr	x2, [x8]
  41ae8c:	tst	x1, x2
  41ae90:	mov	x2, #0x0                   	// #0
  41ae94:	b.ne	41aeb0 <_obstack_memory_used@@Base+0x3de8>  // b.any
  41ae98:	add	x2, x2, #0x1
  41ae9c:	lsl	x4, x2, #5
  41aea0:	ldr	x4, [x8, x4]
  41aea4:	tst	x1, x4
  41aea8:	b.eq	41ae98 <_obstack_memory_used@@Base+0x3dd0>  // b.none
  41aeac:	lsl	x2, x2, #3
  41aeb0:	ldr	x4, [x6, x9, lsl #3]
  41aeb4:	tst	x1, x4
  41aeb8:	b.eq	41aecc <_obstack_memory_used@@Base+0x3e04>  // b.none
  41aebc:	ldr	x4, [sp, #112]
  41aec0:	ldr	x2, [x4, x2]
  41aec4:	str	x2, [x3]
  41aec8:	b	41a8ac <_obstack_memory_used@@Base+0x37e4>
  41aecc:	ldr	x2, [x24, x2]
  41aed0:	str	x2, [x3]
  41aed4:	b	41a8ac <_obstack_memory_used@@Base+0x37e4>
  41aed8:	bl	4026b0 <free@plt>
  41aedc:	mov	x1, #0x100                 	// #256
  41aee0:	mov	x0, #0x8                   	// #8
  41aee4:	bl	402520 <calloc@plt>
  41aee8:	cmp	x0, #0x0
  41aeec:	ldr	x1, [sp, #136]
  41aef0:	ldp	x19, x20, [sp, #16]
  41aef4:	str	x0, [x1, #88]
  41aef8:	cset	w0, ne  // ne = any
  41aefc:	b	41ac68 <_obstack_memory_used@@Base+0x3ba0>
  41af00:	ldr	w1, [sp, #160]
  41af04:	cbz	w1, 41ae1c <_obstack_memory_used@@Base+0x3d54>
  41af08:	b	41ac18 <_obstack_memory_used@@Base+0x3b50>
  41af0c:	ldr	x1, [sp, #120]
  41af10:	ldr	x0, [x1, x0, lsl #3]
  41af14:	str	x0, [x10, #80]
  41af18:	ldr	w1, [sp, #128]
  41af1c:	cbz	w1, 41a900 <_obstack_memory_used@@Base+0x3838>
  41af20:	str	x0, [x10, #2128]
  41af24:	b	41a900 <_obstack_memory_used@@Base+0x3838>
  41af28:	mov	x1, #0x200                 	// #512
  41af2c:	mov	x0, #0x8                   	// #8
  41af30:	bl	402520 <calloc@plt>
  41af34:	mov	x10, x0
  41af38:	ldr	x0, [sp, #136]
  41af3c:	str	x10, [x0, #96]
  41af40:	cbz	x10, 41ac18 <_obstack_memory_used@@Base+0x3b50>
  41af44:	ldp	x5, x7, [sp, #144]
  41af48:	add	x11, x10, #0x800
  41af4c:	ldr	x6, [sp, #104]
  41af50:	mov	w9, #0x0                   	// #0
  41af54:	ldr	x0, [x5]
  41af58:	mov	x3, x11
  41af5c:	mov	x2, #0x1                   	// #1
  41af60:	cbz	x0, 41af78 <_obstack_memory_used@@Base+0x3eb0>
  41af64:	tbnz	w0, #0, 41af94 <_obstack_memory_used@@Base+0x3ecc>
  41af68:	lsl	x2, x2, #1
  41af6c:	lsr	x0, x0, #1
  41af70:	add	x3, x3, #0x8
  41af74:	cbnz	x0, 41af64 <_obstack_memory_used@@Base+0x3e9c>
  41af78:	add	w9, w9, #0x40
  41af7c:	add	x5, x5, #0x8
  41af80:	cmp	w9, #0x100
  41af84:	add	x11, x11, #0x200
  41af88:	add	x6, x6, #0x8
  41af8c:	b.ne	41af54 <_obstack_memory_used@@Base+0x3e8c>  // b.any
  41af90:	b	41a8d0 <_obstack_memory_used@@Base+0x3808>
  41af94:	ldr	x1, [x6]
  41af98:	tst	x2, x1
  41af9c:	b.ne	41afd8 <_obstack_memory_used@@Base+0x3f10>  // b.any
  41afa0:	mov	x1, #0x0                   	// #0
  41afa4:	add	x1, x1, #0x1
  41afa8:	mov	x8, x1
  41afac:	lsl	x4, x1, #5
  41afb0:	ldr	x4, [x6, x4]
  41afb4:	tst	x2, x4
  41afb8:	b.eq	41afa4 <_obstack_memory_used@@Base+0x3edc>  // b.none
  41afbc:	sub	x1, x3, #0x8, lsl #12
  41afc0:	ldr	x4, [x24, x8, lsl #3]
  41afc4:	str	x4, [x1, #30720]
  41afc8:	ldr	x1, [sp, #112]
  41afcc:	ldr	x1, [x1, x8, lsl #3]
  41afd0:	str	x1, [x3]
  41afd4:	b	41af68 <_obstack_memory_used@@Base+0x3ea0>
  41afd8:	mov	x8, #0x0                   	// #0
  41afdc:	b	41afbc <_obstack_memory_used@@Base+0x3ef4>
  41afe0:	mov	x0, x20
  41afe4:	bl	4026b0 <free@plt>
  41afe8:	cbnz	x19, 41ae68 <_obstack_memory_used@@Base+0x3da0>
  41afec:	ldp	x21, x22, [sp, #32]
  41aff0:	ldp	x25, x26, [sp, #64]
  41aff4:	ldp	x27, x28, [sp, #80]
  41aff8:	b	41aedc <_obstack_memory_used@@Base+0x3e14>
  41affc:	nop
  41b000:	ldr	x4, [x1, #8]
  41b004:	cbz	x4, 41b178 <_obstack_memory_used@@Base+0x40b0>
  41b008:	stp	x29, x30, [sp, #-48]!
  41b00c:	mov	x29, sp
  41b010:	ldr	x8, [x2, #8]
  41b014:	stp	x19, x20, [sp, #16]
  41b018:	mov	x19, x0
  41b01c:	stp	x21, x22, [sp, #32]
  41b020:	mov	w0, #0x0                   	// #0
  41b024:	mov	x21, x2
  41b028:	cbz	x8, 41b11c <_obstack_memory_used@@Base+0x4054>
  41b02c:	ldp	x22, x3, [x19]
  41b030:	mov	x20, x1
  41b034:	add	x1, x4, x8
  41b038:	ldr	x0, [x19, #16]
  41b03c:	add	x2, x1, x3
  41b040:	cmp	x2, x22
  41b044:	b.gt	41b180 <_obstack_memory_used@@Base+0x40b8>
  41b048:	ldr	x10, [x20, #16]
  41b04c:	sub	x6, x4, #0x1
  41b050:	ldr	x9, [x21, #16]
  41b054:	sub	x7, x8, #0x1
  41b058:	add	x4, x3, x4
  41b05c:	sub	x3, x3, #0x1
  41b060:	add	x8, x4, x8
  41b064:	ldr	x5, [x9, x7, lsl #3]
  41b068:	ldr	x4, [x10, x6, lsl #3]
  41b06c:	nop
  41b070:	cmp	x4, x5
  41b074:	b.eq	41b090 <_obstack_memory_used@@Base+0x3fc8>  // b.none
  41b078:	b.ge	41b168 <_obstack_memory_used@@Base+0x40a0>  // b.tcont
  41b07c:	subs	x7, x7, #0x1
  41b080:	b.mi	41b0d8 <_obstack_memory_used@@Base+0x4010>  // b.first
  41b084:	ldr	x5, [x9, x7, lsl #3]
  41b088:	cmp	x4, x5
  41b08c:	b.ne	41b078 <_obstack_memory_used@@Base+0x3fb0>  // b.any
  41b090:	tbz	x3, #63, 41b0a4 <_obstack_memory_used@@Base+0x3fdc>
  41b094:	b	41b0b4 <_obstack_memory_used@@Base+0x3fec>
  41b098:	sub	x3, x3, #0x1
  41b09c:	cmn	x3, #0x1
  41b0a0:	b.eq	41b0b4 <_obstack_memory_used@@Base+0x3fec>  // b.none
  41b0a4:	ldr	x5, [x0, x3, lsl #3]
  41b0a8:	cmp	x5, x4
  41b0ac:	b.gt	41b098 <_obstack_memory_used@@Base+0x3fd0>
  41b0b0:	b.eq	41b0bc <_obstack_memory_used@@Base+0x3ff4>  // b.none
  41b0b4:	sub	x8, x8, #0x1
  41b0b8:	str	x4, [x0, x8, lsl #3]
  41b0bc:	subs	x6, x6, #0x1
  41b0c0:	b.mi	41b0d8 <_obstack_memory_used@@Base+0x4010>  // b.first
  41b0c4:	subs	x7, x7, #0x1
  41b0c8:	b.mi	41b0d8 <_obstack_memory_used@@Base+0x4010>  // b.first
  41b0cc:	ldr	x4, [x10, x6, lsl #3]
  41b0d0:	ldr	x5, [x9, x7, lsl #3]
  41b0d4:	b	41b088 <_obstack_memory_used@@Base+0x3fc0>
  41b0d8:	ldr	x1, [x19, #8]
  41b0dc:	ldr	x4, [x20, #8]
  41b0e0:	sub	x2, x1, #0x1
  41b0e4:	ldr	x3, [x21, #8]
  41b0e8:	add	x4, x1, x4
  41b0ec:	add	x4, x4, x3
  41b0f0:	sub	x3, x4, x8
  41b0f4:	sub	x4, x4, #0x1
  41b0f8:	add	x1, x1, x3
  41b0fc:	str	x1, [x19, #8]
  41b100:	cmp	x3, #0x0
  41b104:	ccmp	x2, #0x0, #0x1, gt
  41b108:	b.ge	41b13c <_obstack_memory_used@@Base+0x4074>  // b.tcont
  41b10c:	lsl	x2, x3, #3
  41b110:	add	x1, x0, x8, lsl #3
  41b114:	bl	4022a0 <memcpy@plt>
  41b118:	mov	w0, #0x0                   	// #0
  41b11c:	ldp	x19, x20, [sp, #16]
  41b120:	ldp	x21, x22, [sp, #32]
  41b124:	ldp	x29, x30, [sp], #48
  41b128:	ret
  41b12c:	str	x1, [x0, x6, lsl #3]
  41b130:	sub	x2, x2, #0x1
  41b134:	cmn	x2, #0x1
  41b138:	b.eq	41b10c <_obstack_memory_used@@Base+0x4044>  // b.none
  41b13c:	ldr	x5, [x0, x4, lsl #3]
  41b140:	add	x6, x2, x3
  41b144:	ldr	x1, [x0, x2, lsl #3]
  41b148:	cmp	x5, x1
  41b14c:	b.le	41b12c <_obstack_memory_used@@Base+0x4064>
  41b150:	str	x5, [x0, x6, lsl #3]
  41b154:	sub	x4, x4, #0x1
  41b158:	subs	x3, x3, #0x1
  41b15c:	b.ne	41b13c <_obstack_memory_used@@Base+0x4074>  // b.any
  41b160:	mov	x2, #0x0                   	// #0
  41b164:	b	41b110 <_obstack_memory_used@@Base+0x4048>
  41b168:	subs	x6, x6, #0x1
  41b16c:	b.mi	41b0d8 <_obstack_memory_used@@Base+0x4010>  // b.first
  41b170:	ldr	x4, [x10, x6, lsl #3]
  41b174:	b	41b070 <_obstack_memory_used@@Base+0x3fa8>
  41b178:	mov	w0, #0x0                   	// #0
  41b17c:	ret
  41b180:	add	x22, x1, x22
  41b184:	lsl	x1, x22, #3
  41b188:	bl	402550 <realloc@plt>
  41b18c:	cbz	x0, 41b1a8 <_obstack_memory_used@@Base+0x40e0>
  41b190:	ldr	x4, [x20, #8]
  41b194:	ldr	x8, [x21, #8]
  41b198:	str	x22, [x19]
  41b19c:	str	x0, [x19, #16]
  41b1a0:	ldr	x3, [x19, #8]
  41b1a4:	b	41b048 <_obstack_memory_used@@Base+0x3f80>
  41b1a8:	mov	w0, #0xc                   	// #12
  41b1ac:	b	41b11c <_obstack_memory_used@@Base+0x4054>
  41b1b0:	stp	x29, x30, [sp, #-128]!
  41b1b4:	mov	x29, sp
  41b1b8:	stp	x25, x26, [sp, #64]
  41b1bc:	mov	x26, x0
  41b1c0:	ldr	x0, [x0, #56]
  41b1c4:	stp	x19, x20, [sp, #16]
  41b1c8:	add	x20, x1, x1, lsl #1
  41b1cc:	stp	xzr, xzr, [sp, #104]
  41b1d0:	add	x20, x0, x20, lsl #3
  41b1d4:	str	xzr, [sp, #120]
  41b1d8:	str	x27, [sp, #80]
  41b1dc:	ldr	x7, [x20, #8]
  41b1e0:	cmp	x7, #0x0
  41b1e4:	b.le	41b3b0 <_obstack_memory_used@@Base+0x42e8>
  41b1e8:	add	x25, x2, #0x10
  41b1ec:	mov	x19, #0x0                   	// #0
  41b1f0:	stp	x21, x22, [sp, #32]
  41b1f4:	mov	x21, x1
  41b1f8:	mov	x22, x2
  41b1fc:	stp	x23, x24, [sp, #48]
  41b200:	mov	x24, x3
  41b204:	add	x23, x20, #0x10
  41b208:	b	41b24c <_obstack_memory_used@@Base+0x4184>
  41b20c:	cbnz	x0, 41b2f4 <_obstack_memory_used@@Base+0x422c>
  41b210:	ldr	x0, [x22, #8]
  41b214:	mov	x1, x25
  41b218:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41b21c:	cbz	x0, 41b2f4 <_obstack_memory_used@@Base+0x422c>
  41b220:	ldr	x2, [x26, #56]
  41b224:	mov	x1, x24
  41b228:	add	x0, sp, #0x68
  41b22c:	add	x2, x2, x6
  41b230:	bl	41b000 <_obstack_memory_used@@Base+0x3f38>
  41b234:	mov	w27, w0
  41b238:	cbnz	w0, 41b2cc <_obstack_memory_used@@Base+0x4204>
  41b23c:	ldr	x7, [x20, #8]
  41b240:	add	x19, x19, #0x1
  41b244:	cmp	x7, x19
  41b248:	b.le	41b310 <_obstack_memory_used@@Base+0x4248>
  41b24c:	ldr	x1, [x20, #16]
  41b250:	ldr	x4, [x1, x19, lsl #3]
  41b254:	cmp	x21, x4
  41b258:	b.eq	41b240 <_obstack_memory_used@@Base+0x4178>  // b.none
  41b25c:	ldr	x1, [x26]
  41b260:	add	x1, x1, x4, lsl #4
  41b264:	ldrb	w0, [x1, #8]
  41b268:	tbz	w0, #3, 41b240 <_obstack_memory_used@@Base+0x4178>
  41b26c:	add	x4, x4, x4, lsl #1
  41b270:	mov	x1, x23
  41b274:	ldr	x8, [x26, #40]
  41b278:	lsl	x6, x4, #3
  41b27c:	mov	x0, x7
  41b280:	add	x8, x8, x6
  41b284:	ldr	x9, [x8, #16]
  41b288:	ldr	x2, [x9]
  41b28c:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41b290:	ldr	x1, [x8, #8]
  41b294:	cmp	x1, #0x1
  41b298:	b.gt	41b20c <_obstack_memory_used@@Base+0x4144>
  41b29c:	cbnz	x0, 41b240 <_obstack_memory_used@@Base+0x4178>
  41b2a0:	ldr	x0, [x22, #8]
  41b2a4:	mov	x1, x25
  41b2a8:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41b2ac:	cbz	x0, 41b240 <_obstack_memory_used@@Base+0x4178>
  41b2b0:	ldr	x2, [x26, #56]
  41b2b4:	mov	x1, x24
  41b2b8:	add	x0, sp, #0x68
  41b2bc:	add	x2, x2, x6
  41b2c0:	bl	41b000 <_obstack_memory_used@@Base+0x3f38>
  41b2c4:	mov	w27, w0
  41b2c8:	cbz	w0, 41b23c <_obstack_memory_used@@Base+0x4174>
  41b2cc:	ldr	x0, [sp, #120]
  41b2d0:	bl	4026b0 <free@plt>
  41b2d4:	mov	w0, w27
  41b2d8:	ldp	x19, x20, [sp, #16]
  41b2dc:	ldp	x21, x22, [sp, #32]
  41b2e0:	ldp	x23, x24, [sp, #48]
  41b2e4:	ldp	x25, x26, [sp, #64]
  41b2e8:	ldr	x27, [sp, #80]
  41b2ec:	ldp	x29, x30, [sp], #128
  41b2f0:	ret
  41b2f4:	ldr	x2, [x9, #8]
  41b2f8:	cmp	x2, #0x0
  41b2fc:	b.le	41b240 <_obstack_memory_used@@Base+0x4178>
  41b300:	mov	x1, x23
  41b304:	mov	x0, x7
  41b308:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41b30c:	b	41b29c <_obstack_memory_used@@Base+0x41d4>
  41b310:	cmp	x7, #0x0
  41b314:	add	x10, sp, #0x78
  41b318:	add	x9, x22, #0x10
  41b31c:	add	x11, x22, #0x8
  41b320:	mov	x6, #0x0                   	// #0
  41b324:	b.le	41b384 <_obstack_memory_used@@Base+0x42bc>
  41b328:	ldr	x2, [x20, #16]
  41b32c:	mov	x1, x10
  41b330:	ldr	x0, [sp, #112]
  41b334:	ldr	x2, [x2, x6, lsl #3]
  41b338:	add	x6, x6, #0x1
  41b33c:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41b340:	mov	x1, x9
  41b344:	cbnz	x0, 41b37c <_obstack_memory_used@@Base+0x42b4>
  41b348:	ldr	x8, [x22, #8]
  41b34c:	mov	x0, x8
  41b350:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41b354:	mov	x2, x0
  41b358:	subs	x2, x2, #0x1
  41b35c:	sub	x3, x8, #0x1
  41b360:	mov	x1, x9
  41b364:	mov	x0, x11
  41b368:	ccmp	x2, x8, #0x0, pl  // pl = nfrst
  41b36c:	b.ge	41b37c <_obstack_memory_used@@Base+0x42b4>  // b.tcont
  41b370:	str	x3, [x22, #8]
  41b374:	bl	418ec0 <_obstack_memory_used@@Base+0x1df8>
  41b378:	ldr	x7, [x20, #8]
  41b37c:	cmp	x7, x6
  41b380:	b.gt	41b328 <_obstack_memory_used@@Base+0x4260>
  41b384:	ldp	x21, x22, [sp, #32]
  41b388:	ldp	x23, x24, [sp, #48]
  41b38c:	ldr	x0, [sp, #120]
  41b390:	bl	4026b0 <free@plt>
  41b394:	mov	w27, #0x0                   	// #0
  41b398:	mov	w0, w27
  41b39c:	ldp	x19, x20, [sp, #16]
  41b3a0:	ldp	x25, x26, [sp, #64]
  41b3a4:	ldr	x27, [sp, #80]
  41b3a8:	ldp	x29, x30, [sp], #128
  41b3ac:	ret
  41b3b0:	mov	x0, #0x0                   	// #0
  41b3b4:	b	41b390 <_obstack_memory_used@@Base+0x42c8>
  41b3b8:	stp	x29, x30, [sp, #-32]!
  41b3bc:	mov	x29, sp
  41b3c0:	stp	x19, x20, [sp, #16]
  41b3c4:	mov	x19, x1
  41b3c8:	ldrb	w1, [x1, #48]
  41b3cc:	cmp	w1, #0x10
  41b3d0:	b.ne	41b3f8 <_obstack_memory_used@@Base+0x4330>  // b.any
  41b3d4:	ldr	x1, [x19, #8]
  41b3d8:	mov	w0, #0x0                   	// #0
  41b3dc:	ldr	x2, [x1, #24]
  41b3e0:	ldr	x1, [x1, #56]
  41b3e4:	str	x2, [x19, #24]
  41b3e8:	str	x1, [x19, #56]
  41b3ec:	ldp	x19, x20, [sp, #16]
  41b3f0:	ldp	x29, x30, [sp], #32
  41b3f4:	ret
  41b3f8:	ldp	x2, x3, [x19, #40]
  41b3fc:	str	x19, [x19, #24]
  41b400:	mov	x20, x0
  41b404:	mov	x1, x2
  41b408:	mov	x2, x3
  41b40c:	bl	418510 <_obstack_memory_used@@Base+0x1448>
  41b410:	str	x0, [x19, #56]
  41b414:	mov	x1, x0
  41b418:	cmn	x0, #0x1
  41b41c:	b.eq	41b454 <_obstack_memory_used@@Base+0x438c>  // b.none
  41b420:	ldrb	w2, [x19, #48]
  41b424:	mov	w0, #0x0                   	// #0
  41b428:	cmp	w2, #0xc
  41b42c:	b.ne	41b3ec <_obstack_memory_used@@Base+0x4324>  // b.any
  41b430:	ldr	x2, [x20]
  41b434:	ldr	w3, [x19, #40]
  41b438:	add	x1, x2, x1, lsl #4
  41b43c:	ldr	w2, [x1, #8]
  41b440:	bfi	w2, w3, #8, #10
  41b444:	str	w2, [x1, #8]
  41b448:	ldp	x19, x20, [sp, #16]
  41b44c:	ldp	x29, x30, [sp], #32
  41b450:	ret
  41b454:	mov	w0, #0xc                   	// #12
  41b458:	b	41b3ec <_obstack_memory_used@@Base+0x4324>
  41b45c:	nop
  41b460:	stp	x29, x30, [sp, #-48]!
  41b464:	mov	x29, sp
  41b468:	stp	x19, x20, [sp, #16]
  41b46c:	mov	x20, x0
  41b470:	ldr	x0, [x0]
  41b474:	cmp	x0, #0x0
  41b478:	b.le	41b4c0 <_obstack_memory_used@@Base+0x43f8>
  41b47c:	mov	x19, #0x0                   	// #0
  41b480:	str	x21, [sp, #32]
  41b484:	mov	x21, #0x0                   	// #0
  41b488:	ldr	x1, [x20, #16]
  41b48c:	add	x21, x21, #0x1
  41b490:	add	x1, x1, x19
  41b494:	ldr	x0, [x1, #40]
  41b498:	bl	4026b0 <free@plt>
  41b49c:	ldr	x1, [x20, #16]
  41b4a0:	add	x1, x1, x19
  41b4a4:	add	x19, x19, #0x30
  41b4a8:	ldr	x0, [x1, #16]
  41b4ac:	bl	4026b0 <free@plt>
  41b4b0:	ldr	x0, [x20]
  41b4b4:	cmp	x21, x0
  41b4b8:	b.lt	41b488 <_obstack_memory_used@@Base+0x43c0>  // b.tstop
  41b4bc:	ldr	x21, [sp, #32]
  41b4c0:	ldr	x0, [x20, #16]
  41b4c4:	ldp	x19, x20, [sp, #16]
  41b4c8:	ldp	x29, x30, [sp], #48
  41b4cc:	b	4026b0 <free@plt>
  41b4d0:	stp	x29, x30, [sp, #-32]!
  41b4d4:	mov	x29, sp
  41b4d8:	stp	x19, x20, [sp, #16]
  41b4dc:	mov	x20, x0
  41b4e0:	tbnz	x1, #63, 41b574 <_obstack_memory_used@@Base+0x44ac>
  41b4e4:	ldr	x0, [x0, #88]
  41b4e8:	cmp	x0, x1
  41b4ec:	b.eq	41b5a0 <_obstack_memory_used@@Base+0x44d8>  // b.none
  41b4f0:	ldr	w0, [x20, #144]
  41b4f4:	cmp	w0, #0x1
  41b4f8:	b.le	41b53c <_obstack_memory_used@@Base+0x4474>
  41b4fc:	ldr	x0, [x20, #16]
  41b500:	b	41b50c <_obstack_memory_used@@Base+0x4444>
  41b504:	cmn	x1, #0x1
  41b508:	b.eq	41b574 <_obstack_memory_used@@Base+0x44ac>  // b.none
  41b50c:	ldr	w19, [x0, x1, lsl #2]
  41b510:	sub	x1, x1, #0x1
  41b514:	cmn	w19, #0x1
  41b518:	b.eq	41b504 <_obstack_memory_used@@Base+0x443c>  // b.none
  41b51c:	ldrb	w0, [x20, #142]
  41b520:	cbnz	w0, 41b5b4 <_obstack_memory_used@@Base+0x44ec>
  41b524:	cmp	w19, #0xa
  41b528:	mov	w0, #0x0                   	// #0
  41b52c:	b.eq	41b584 <_obstack_memory_used@@Base+0x44bc>  // b.none
  41b530:	ldp	x19, x20, [sp, #16]
  41b534:	ldp	x29, x30, [sp], #32
  41b538:	ret
  41b53c:	ldr	x2, [x20, #8]
  41b540:	mov	w0, #0x1                   	// #1
  41b544:	ldr	x3, [x20, #128]
  41b548:	ldrb	w2, [x2, x1]
  41b54c:	ubfx	x1, x2, #6, #2
  41b550:	ldr	x1, [x3, x1, lsl #3]
  41b554:	lsr	x1, x1, x2
  41b558:	tbnz	w1, #0, 41b530 <_obstack_memory_used@@Base+0x4468>
  41b55c:	cmp	w2, #0xa
  41b560:	b.eq	41b584 <_obstack_memory_used@@Base+0x44bc>  // b.none
  41b564:	mov	w0, #0x0                   	// #0
  41b568:	ldp	x19, x20, [sp, #16]
  41b56c:	ldp	x29, x30, [sp], #32
  41b570:	ret
  41b574:	ldr	w0, [x20, #112]
  41b578:	ldp	x19, x20, [sp, #16]
  41b57c:	ldp	x29, x30, [sp], #32
  41b580:	ret
  41b584:	ldrb	w0, [x20, #141]
  41b588:	ldp	x19, x20, [sp, #16]
  41b58c:	cmp	w0, #0x0
  41b590:	cset	w0, ne  // ne = any
  41b594:	ldp	x29, x30, [sp], #32
  41b598:	lsl	w0, w0, #1
  41b59c:	ret
  41b5a0:	tst	x2, #0x2
  41b5a4:	mov	w0, #0x8                   	// #8
  41b5a8:	mov	w1, #0xa                   	// #10
  41b5ac:	csel	w0, w0, w1, ne  // ne = any
  41b5b0:	b	41b530 <_obstack_memory_used@@Base+0x4468>
  41b5b4:	mov	w0, w19
  41b5b8:	bl	4027c0 <iswalnum@plt>
  41b5bc:	cmp	w19, #0x5f
  41b5c0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41b5c4:	mov	w0, #0x1                   	// #1
  41b5c8:	b.ne	41b530 <_obstack_memory_used@@Base+0x4468>  // b.any
  41b5cc:	b	41b524 <_obstack_memory_used@@Base+0x445c>
  41b5d0:	mov	x4, x1
  41b5d4:	mov	x5, x0
  41b5d8:	ldr	x0, [x0, #8]
  41b5dc:	mov	x1, x2
  41b5e0:	ldrb	w3, [x4, #8]
  41b5e4:	ldrb	w2, [x0, x2]
  41b5e8:	cmp	w3, #0x5
  41b5ec:	b.eq	41b690 <_obstack_memory_used@@Base+0x45c8>  // b.none
  41b5f0:	b.hi	41b680 <_obstack_memory_used@@Base+0x45b8>  // b.pmore
  41b5f4:	cmp	w3, #0x1
  41b5f8:	b.eq	41b6c8 <_obstack_memory_used@@Base+0x4600>  // b.none
  41b5fc:	cmp	w3, #0x3
  41b600:	b.ne	41b6f0 <_obstack_memory_used@@Base+0x4628>  // b.any
  41b604:	ldr	x0, [x4]
  41b608:	ubfx	x3, x2, #6, #2
  41b60c:	ldr	x0, [x0, x3, lsl #3]
  41b610:	lsr	x2, x0, x2
  41b614:	and	w0, w2, #0x1
  41b618:	tbz	w2, #0, 41b6c4 <_obstack_memory_used@@Base+0x45fc>
  41b61c:	stp	x29, x30, [sp, #-32]!
  41b620:	mov	w0, #0x1                   	// #1
  41b624:	mov	x29, sp
  41b628:	str	x19, [sp, #16]
  41b62c:	ldr	w19, [x4, #8]
  41b630:	tst	w19, #0x3ff00
  41b634:	b.eq	41b674 <_obstack_memory_used@@Base+0x45ac>  // b.none
  41b638:	ldr	w2, [x5, #160]
  41b63c:	mov	x0, x5
  41b640:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41b644:	mov	w1, w0
  41b648:	ubfx	x2, x19, #8, #10
  41b64c:	tbz	w19, #10, 41b6b4 <_obstack_memory_used@@Base+0x45ec>
  41b650:	mov	w0, #0x0                   	// #0
  41b654:	tbz	w1, #0, 41b674 <_obstack_memory_used@@Base+0x45ac>
  41b658:	tbnz	w2, #3, 41b674 <_obstack_memory_used@@Base+0x45ac>
  41b65c:	tbz	w2, #5, 41b668 <_obstack_memory_used@@Base+0x45a0>
  41b660:	mov	w0, #0x0                   	// #0
  41b664:	tbz	w1, #1, 41b674 <_obstack_memory_used@@Base+0x45ac>
  41b668:	ubfx	x0, x1, #3, #1
  41b66c:	tst	x2, #0x80
  41b670:	csinc	w0, w0, wzr, ne  // ne = any
  41b674:	ldr	x19, [sp, #16]
  41b678:	ldp	x29, x30, [sp], #32
  41b67c:	ret
  41b680:	cmp	w3, #0x7
  41b684:	mov	w0, #0x0                   	// #0
  41b688:	b.ne	41b6b0 <_obstack_memory_used@@Base+0x45e8>  // b.any
  41b68c:	tbnz	w2, #7, 41b6ac <_obstack_memory_used@@Base+0x45e4>
  41b690:	cmp	w2, #0xa
  41b694:	b.eq	41b6dc <_obstack_memory_used@@Base+0x4614>  // b.none
  41b698:	cbnz	w2, 41b61c <_obstack_memory_used@@Base+0x4554>
  41b69c:	ldr	x2, [x5, #152]
  41b6a0:	mov	w0, #0x0                   	// #0
  41b6a4:	ldr	x2, [x2, #216]
  41b6a8:	tbz	w2, #7, 41b61c <_obstack_memory_used@@Base+0x4554>
  41b6ac:	ret
  41b6b0:	ret
  41b6b4:	tbz	w2, #3, 41b65c <_obstack_memory_used@@Base+0x4594>
  41b6b8:	tbz	w1, #0, 41b65c <_obstack_memory_used@@Base+0x4594>
  41b6bc:	mov	w0, #0x0                   	// #0
  41b6c0:	b	41b674 <_obstack_memory_used@@Base+0x45ac>
  41b6c4:	ret
  41b6c8:	ldrb	w3, [x4]
  41b6cc:	mov	w0, #0x0                   	// #0
  41b6d0:	cmp	w3, w2
  41b6d4:	b.eq	41b61c <_obstack_memory_used@@Base+0x4554>  // b.none
  41b6d8:	ret
  41b6dc:	ldr	x2, [x5, #152]
  41b6e0:	mov	w0, #0x0                   	// #0
  41b6e4:	ldr	x2, [x2, #216]
  41b6e8:	tbnz	w2, #6, 41b61c <_obstack_memory_used@@Base+0x4554>
  41b6ec:	ret
  41b6f0:	mov	w0, #0x0                   	// #0
  41b6f4:	ret
  41b6f8:	stp	x29, x30, [sp, #-32]!
  41b6fc:	mov	x29, sp
  41b700:	stp	x19, x20, [sp, #16]
  41b704:	mov	x19, x1
  41b708:	mov	x1, x2
  41b70c:	ldr	w2, [x0, #160]
  41b710:	mov	x20, x0
  41b714:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41b718:	ldr	x4, [x19, #16]
  41b71c:	cmp	x4, #0x0
  41b720:	b.le	41b79c <_obstack_memory_used@@Base+0x46d4>
  41b724:	ldr	x1, [x20, #152]
  41b728:	and	w9, w0, #0x8
  41b72c:	ldr	x6, [x19, #24]
  41b730:	and	w8, w0, #0x2
  41b734:	ldr	x5, [x1]
  41b738:	and	w7, w0, #0x1
  41b73c:	mov	x2, #0x0                   	// #0
  41b740:	ldr	x0, [x6, x2, lsl #3]
  41b744:	add	x3, x5, x0, lsl #4
  41b748:	ldr	w1, [x3, #8]
  41b74c:	ldrb	w3, [x3, #8]
  41b750:	ubfx	x1, x1, #8, #10
  41b754:	cmp	w3, #0x2
  41b758:	b.ne	41b790 <_obstack_memory_used@@Base+0x46c8>  // b.any
  41b75c:	cbz	w1, 41b77c <_obstack_memory_used@@Base+0x46b4>
  41b760:	tbz	w1, #2, 41b788 <_obstack_memory_used@@Base+0x46c0>
  41b764:	cbz	w7, 41b790 <_obstack_memory_used@@Base+0x46c8>
  41b768:	tbnz	w1, #3, 41b790 <_obstack_memory_used@@Base+0x46c8>
  41b76c:	tbz	w1, #5, 41b774 <_obstack_memory_used@@Base+0x46ac>
  41b770:	cbz	w8, 41b790 <_obstack_memory_used@@Base+0x46c8>
  41b774:	tbz	w1, #7, 41b77c <_obstack_memory_used@@Base+0x46b4>
  41b778:	cbz	w9, 41b790 <_obstack_memory_used@@Base+0x46c8>
  41b77c:	ldp	x19, x20, [sp, #16]
  41b780:	ldp	x29, x30, [sp], #32
  41b784:	ret
  41b788:	tbz	w1, #3, 41b76c <_obstack_memory_used@@Base+0x46a4>
  41b78c:	cbz	w7, 41b76c <_obstack_memory_used@@Base+0x46a4>
  41b790:	add	x2, x2, #0x1
  41b794:	cmp	x2, x4
  41b798:	b.ne	41b740 <_obstack_memory_used@@Base+0x4678>  // b.any
  41b79c:	mov	x0, #0x0                   	// #0
  41b7a0:	ldp	x19, x20, [sp, #16]
  41b7a4:	ldp	x29, x30, [sp], #32
  41b7a8:	ret
  41b7ac:	nop
  41b7b0:	stp	x29, x30, [sp, #-128]!
  41b7b4:	mov	x29, sp
  41b7b8:	stp	x19, x20, [sp, #16]
  41b7bc:	mov	x19, x0
  41b7c0:	ldr	x20, [x0, #40]
  41b7c4:	stp	x21, x22, [sp, #32]
  41b7c8:	mov	x21, x1
  41b7cc:	stp	x23, x24, [sp, #48]
  41b7d0:	cmp	x20, x1
  41b7d4:	mov	w24, w2
  41b7d8:	b.le	41b94c <_obstack_memory_used@@Base+0x4884>
  41b7dc:	ldr	w0, [x0, #144]
  41b7e0:	cmp	w0, #0x1
  41b7e4:	b.le	41b7ec <_obstack_memory_used@@Base+0x4724>
  41b7e8:	str	xzr, [x19, #32]
  41b7ec:	ldrb	w0, [x19, #139]
  41b7f0:	tst	x24, #0x1
  41b7f4:	ldr	x3, [x19, #80]
  41b7f8:	mov	w1, #0x4                   	// #4
  41b7fc:	ldr	x2, [x19, #96]
  41b800:	mov	w4, #0x6                   	// #6
  41b804:	csel	w1, w1, w4, ne  // ne = any
  41b808:	stp	xzr, xzr, [x19, #40]
  41b80c:	mov	x20, x21
  41b810:	str	xzr, [x19, #56]
  41b814:	str	x3, [x19, #88]
  41b818:	str	x2, [x19, #104]
  41b81c:	str	w1, [x19, #112]
  41b820:	strb	wzr, [x19, #140]
  41b824:	cbz	w0, 41b8e0 <_obstack_memory_used@@Base+0x4818>
  41b828:	cbz	x20, 41b8ec <_obstack_memory_used@@Base+0x4824>
  41b82c:	ldp	x23, x0, [x19, #48]
  41b830:	ldrb	w1, [x19, #140]
  41b834:	cmp	x0, x20
  41b838:	b.le	41b954 <_obstack_memory_used@@Base+0x488c>
  41b83c:	cbnz	w1, 41ba38 <_obstack_memory_used@@Base+0x4970>
  41b840:	mov	w2, w24
  41b844:	sub	x1, x20, #0x1
  41b848:	mov	x0, x19
  41b84c:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41b850:	str	w0, [x19, #112]
  41b854:	sub	x2, x23, x20
  41b858:	ldr	w0, [x19, #144]
  41b85c:	cmp	w0, #0x1
  41b860:	b.gt	41b920 <_obstack_memory_used@@Base+0x4858>
  41b864:	ldrb	w0, [x19, #139]
  41b868:	cbnz	w0, 41ba7c <_obstack_memory_used@@Base+0x49b4>
  41b86c:	ldr	x3, [x19, #56]
  41b870:	str	x2, [x19, #48]
  41b874:	ldr	x1, [x19, #88]
  41b878:	sub	x2, x3, x20
  41b87c:	ldr	x3, [x19, #104]
  41b880:	str	x2, [x19, #56]
  41b884:	ldr	w2, [x19, #144]
  41b888:	sub	x1, x1, x20
  41b88c:	sub	x3, x3, x20
  41b890:	cbnz	w0, 41b8a0 <_obstack_memory_used@@Base+0x47d8>
  41b894:	ldr	x0, [x19, #8]
  41b898:	add	x20, x0, x20
  41b89c:	str	x20, [x19, #8]
  41b8a0:	str	x21, [x19, #40]
  41b8a4:	cmp	w2, #0x1
  41b8a8:	str	x1, [x19, #88]
  41b8ac:	str	x3, [x19, #104]
  41b8b0:	b.le	41b910 <_obstack_memory_used@@Base+0x4848>
  41b8b4:	ldrb	w0, [x19, #136]
  41b8b8:	cbnz	w0, 41b93c <_obstack_memory_used@@Base+0x4874>
  41b8bc:	mov	x0, x19
  41b8c0:	bl	417ab0 <_obstack_memory_used@@Base+0x9e8>
  41b8c4:	mov	w0, #0x0                   	// #0
  41b8c8:	str	xzr, [x19, #72]
  41b8cc:	ldp	x19, x20, [sp, #16]
  41b8d0:	ldp	x21, x22, [sp, #32]
  41b8d4:	ldp	x23, x24, [sp, #48]
  41b8d8:	ldp	x29, x30, [sp], #128
  41b8dc:	ret
  41b8e0:	ldr	x0, [x19]
  41b8e4:	str	x0, [x19, #8]
  41b8e8:	cbnz	x20, 41b82c <_obstack_memory_used@@Base+0x4764>
  41b8ec:	ldr	x1, [x19, #88]
  41b8f0:	str	x21, [x19, #40]
  41b8f4:	ldr	x3, [x19, #104]
  41b8f8:	str	x1, [x19, #88]
  41b8fc:	ldr	w2, [x19, #144]
  41b900:	str	x3, [x19, #104]
  41b904:	cmp	w2, #0x1
  41b908:	b.gt	41b8b4 <_obstack_memory_used@@Base+0x47ec>
  41b90c:	nop
  41b910:	ldrb	w0, [x19, #139]
  41b914:	cbnz	w0, 41bc48 <_obstack_memory_used@@Base+0x4b80>
  41b918:	str	x1, [x19, #48]
  41b91c:	b	41b8c4 <_obstack_memory_used@@Base+0x47fc>
  41b920:	ldr	x0, [x19, #16]
  41b924:	lsl	x2, x2, #2
  41b928:	add	x1, x0, x20, lsl #2
  41b92c:	bl	4022c0 <memmove@plt>
  41b930:	ldr	x2, [x19, #48]
  41b934:	sub	x2, x2, x20
  41b938:	b	41b864 <_obstack_memory_used@@Base+0x479c>
  41b93c:	mov	x0, x19
  41b940:	bl	417c90 <_obstack_memory_used@@Base+0xbc8>
  41b944:	cbz	w0, 41b8c4 <_obstack_memory_used@@Base+0x47fc>
  41b948:	b	41b8cc <_obstack_memory_used@@Base+0x4804>
  41b94c:	sub	x20, x1, x20
  41b950:	b	41b828 <_obstack_memory_used@@Base+0x4760>
  41b954:	cbnz	w1, 41be08 <_obstack_memory_used@@Base+0x4d40>
  41b958:	ldr	w2, [x19, #144]
  41b95c:	str	xzr, [x19, #48]
  41b960:	cmp	w2, #0x1
  41b964:	ldr	x1, [x19, #40]
  41b968:	b.le	41bca4 <_obstack_memory_used@@Base+0x4bdc>
  41b96c:	ldrb	w3, [x19, #137]
  41b970:	cbnz	w3, 41bb98 <_obstack_memory_used@@Base+0x4ad0>
  41b974:	add	x22, x1, x0
  41b978:	cmp	x21, x22
  41b97c:	b.le	41bf18 <_obstack_memory_used@@Base+0x4e50>
  41b980:	stp	x27, x28, [sp, #80]
  41b984:	add	x27, x19, #0x20
  41b988:	stp	x25, x26, [sp, #64]
  41b98c:	nop
  41b990:	mov	x3, x27
  41b994:	ldr	x1, [x19]
  41b998:	add	x0, sp, #0x78
  41b99c:	ldr	x25, [x19, #80]
  41b9a0:	add	x1, x1, x22
  41b9a4:	ldr	x26, [x19, #32]
  41b9a8:	sub	x25, x25, x22
  41b9ac:	mov	x2, x25
  41b9b0:	bl	416cf8 <wcrtomb@plt+0x143d8>
  41b9b4:	sub	x1, x0, #0x1
  41b9b8:	cmn	x1, #0x4
  41b9bc:	b.hi	41be30 <_obstack_memory_used@@Base+0x4d68>  // b.pmore
  41b9c0:	ldr	w28, [sp, #120]
  41b9c4:	add	x22, x22, x0
  41b9c8:	cmp	x21, x22
  41b9cc:	b.gt	41b990 <_obstack_memory_used@@Base+0x48c8>
  41b9d0:	sub	x22, x22, x21
  41b9d4:	str	x22, [x19, #48]
  41b9d8:	cmn	w28, #0x1
  41b9dc:	b.eq	41be54 <_obstack_memory_used@@Base+0x4d8c>  // b.none
  41b9e0:	ldrb	w0, [x19, #142]
  41b9e4:	cbnz	w0, 41beb8 <_obstack_memory_used@@Base+0x4df0>
  41b9e8:	cmp	w28, #0xa
  41b9ec:	mov	w0, #0x0                   	// #0
  41b9f0:	b.ne	41ba04 <_obstack_memory_used@@Base+0x493c>  // b.any
  41b9f4:	ldrb	w0, [x19, #141]
  41b9f8:	cmp	w0, #0x0
  41b9fc:	cset	w0, ne  // ne = any
  41ba00:	lsl	w0, w0, #1
  41ba04:	ldp	x25, x26, [sp, #64]
  41ba08:	ldp	x27, x28, [sp, #80]
  41ba0c:	str	w0, [x19, #112]
  41ba10:	cmp	x22, #0x0
  41ba14:	cbnz	x22, 41be74 <_obstack_memory_used@@Base+0x4dac>
  41ba18:	ldrb	w0, [x19, #139]
  41ba1c:	ldr	x1, [x19, #88]
  41ba20:	str	x22, [x19, #56]
  41ba24:	ldr	x3, [x19, #104]
  41ba28:	sub	x1, x1, x20
  41ba2c:	ldr	w2, [x19, #144]
  41ba30:	sub	x3, x3, x20
  41ba34:	b	41b890 <_obstack_memory_used@@Base+0x47c8>
  41ba38:	mov	x1, x23
  41ba3c:	mov	x2, #0x0                   	// #0
  41ba40:	stp	x25, x26, [sp, #64]
  41ba44:	ldr	x25, [x19, #24]
  41ba48:	b	41ba5c <_obstack_memory_used@@Base+0x4994>
  41ba4c:	b.ge	41bc3c <_obstack_memory_used@@Base+0x4b74>  // b.tcont
  41ba50:	add	x2, x0, #0x1
  41ba54:	cmp	x2, x1
  41ba58:	b.ge	41ba98 <_obstack_memory_used@@Base+0x49d0>  // b.tcont
  41ba5c:	add	x0, x2, x1
  41ba60:	add	x0, x0, x0, lsr #63
  41ba64:	asr	x0, x0, #1
  41ba68:	ldr	x3, [x25, x0, lsl #3]
  41ba6c:	cmp	x3, x20
  41ba70:	b.le	41ba4c <_obstack_memory_used@@Base+0x4984>
  41ba74:	mov	x1, x0
  41ba78:	b	41ba54 <_obstack_memory_used@@Base+0x498c>
  41ba7c:	ldr	x0, [x19, #8]
  41ba80:	add	x1, x0, x20
  41ba84:	bl	4022c0 <memmove@plt>
  41ba88:	ldr	x2, [x19, #48]
  41ba8c:	ldrb	w0, [x19, #139]
  41ba90:	sub	x2, x2, x20
  41ba94:	b	41b86c <_obstack_memory_used@@Base+0x47a4>
  41ba98:	cmp	x3, x20
  41ba9c:	add	x22, x0, #0x1
  41baa0:	b.ge	41bc3c <_obstack_memory_used@@Base+0x4b74>  // b.tcont
  41baa4:	mov	x1, x0
  41baa8:	mov	w2, w24
  41baac:	mov	x0, x19
  41bab0:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41bab4:	str	w0, [x19, #112]
  41bab8:	cmp	x20, x22
  41babc:	ccmp	x20, x23, #0x0, eq  // eq = none
  41bac0:	b.lt	41bd58 <_obstack_memory_used@@Base+0x4c90>  // b.tstop
  41bac4:	ldr	x1, [x19, #80]
  41bac8:	strb	wzr, [x19, #140]
  41bacc:	ldr	x3, [x19, #96]
  41bad0:	sub	x1, x1, x21
  41bad4:	add	x0, x1, x20
  41bad8:	str	x0, [x19, #88]
  41badc:	sub	x3, x3, x21
  41bae0:	cmp	x22, #0x0
  41bae4:	add	x0, x3, x20
  41bae8:	str	x0, [x19, #104]
  41baec:	sub	x2, x25, #0x8
  41baf0:	b.gt	41bb00 <_obstack_memory_used@@Base+0x4a38>
  41baf4:	b	41bb0c <_obstack_memory_used@@Base+0x4a44>
  41baf8:	subs	x22, x22, #0x1
  41bafc:	b.eq	41bb0c <_obstack_memory_used@@Base+0x4a44>  // b.none
  41bb00:	ldr	x0, [x2, x22, lsl #3]
  41bb04:	cmp	x0, x20
  41bb08:	b.eq	41baf8 <_obstack_memory_used@@Base+0x4a30>  // b.none
  41bb0c:	cmp	x22, x23
  41bb10:	b.ge	41bd2c <_obstack_memory_used@@Base+0x4c64>  // b.tcont
  41bb14:	ldr	x2, [x19, #16]
  41bb18:	b	41bb28 <_obstack_memory_used@@Base+0x4a60>
  41bb1c:	add	x22, x22, #0x1
  41bb20:	cmp	x22, x23
  41bb24:	b.eq	41bd30 <_obstack_memory_used@@Base+0x4c68>  // b.none
  41bb28:	ldr	w0, [x2, x22, lsl #2]
  41bb2c:	cmn	w0, #0x1
  41bb30:	b.eq	41bb1c <_obstack_memory_used@@Base+0x4a54>  // b.none
  41bb34:	ldr	x2, [x25, x22, lsl #3]
  41bb38:	sub	x2, x2, x20
  41bb3c:	str	x2, [x19, #48]
  41bb40:	cmp	x2, #0x0
  41bb44:	cbz	x2, 41bb84 <_obstack_memory_used@@Base+0x4abc>
  41bb48:	b.le	41bb64 <_obstack_memory_used@@Base+0x4a9c>
  41bb4c:	ldr	x0, [x19, #16]
  41bb50:	mov	w3, #0xffffffff            	// #-1
  41bb54:	add	x1, x0, x2, lsl #2
  41bb58:	str	w3, [x0], #4
  41bb5c:	cmp	x1, x0
  41bb60:	b.ne	41bb58 <_obstack_memory_used@@Base+0x4a90>  // b.any
  41bb64:	ldr	x0, [x19, #8]
  41bb68:	mov	w1, #0xff                  	// #255
  41bb6c:	bl	402510 <memset@plt>
  41bb70:	ldr	x1, [x19, #88]
  41bb74:	ldr	x3, [x19, #104]
  41bb78:	sub	x1, x1, x20
  41bb7c:	ldr	x2, [x19, #48]
  41bb80:	sub	x3, x3, x20
  41bb84:	ldrb	w0, [x19, #139]
  41bb88:	ldp	x25, x26, [sp, #64]
  41bb8c:	str	x2, [x19, #56]
  41bb90:	ldr	w2, [x19, #144]
  41bb94:	b	41b890 <_obstack_memory_used@@Base+0x47c8>
  41bb98:	ldr	x3, [x19]
  41bb9c:	sub	x2, x20, w2, sxtw
  41bba0:	stp	x25, x26, [sp, #64]
  41bba4:	sub	x22, x20, #0x1
  41bba8:	add	x25, x3, x1
  41bbac:	add	x2, x25, x2
  41bbb0:	add	x22, x25, x22
  41bbb4:	cmp	x3, x2
  41bbb8:	csel	x3, x3, x2, cs  // cs = hs, nlast
  41bbbc:	cmp	x3, x22
  41bbc0:	b.ls	41bbd4 <_obstack_memory_used@@Base+0x4b0c>  // b.plast
  41bbc4:	b	41bdf4 <_obstack_memory_used@@Base+0x4d2c>
  41bbc8:	sub	x22, x22, #0x1
  41bbcc:	cmp	x3, x22
  41bbd0:	b.hi	41bdf4 <_obstack_memory_used@@Base+0x4d2c>  // b.pmore
  41bbd4:	ldrb	w2, [x22]
  41bbd8:	and	w2, w2, #0xc0
  41bbdc:	cmp	w2, #0x80
  41bbe0:	b.eq	41bbc8 <_obstack_memory_used@@Base+0x4b00>  // b.none
  41bbe4:	ldr	x2, [x19, #88]
  41bbe8:	mov	x1, x22
  41bbec:	ldr	x3, [x19, #120]
  41bbf0:	add	x2, x25, x2
  41bbf4:	sub	x2, x2, x22
  41bbf8:	cbnz	x3, 41bee0 <_obstack_memory_used@@Base+0x4e18>
  41bbfc:	add	x3, sp, #0x78
  41bc00:	add	x0, sp, #0x6c
  41bc04:	str	xzr, [sp, #120]
  41bc08:	bl	416cf8 <wcrtomb@plt+0x143d8>
  41bc0c:	add	x1, x25, x20
  41bc10:	sub	x22, x1, x22
  41bc14:	cmp	x0, x22
  41bc18:	b.cc	41bf24 <_obstack_memory_used@@Base+0x4e5c>  // b.lo, b.ul, b.last
  41bc1c:	stp	x27, x28, [sp, #80]
  41bc20:	cmn	x0, #0x3
  41bc24:	b.ls	41bd3c <_obstack_memory_used@@Base+0x4c74>  // b.plast
  41bc28:	ldr	x1, [x19, #40]
  41bc2c:	ldr	x0, [x19, #56]
  41bc30:	ldp	x25, x26, [sp, #64]
  41bc34:	ldp	x27, x28, [sp, #80]
  41bc38:	b	41b974 <_obstack_memory_used@@Base+0x48ac>
  41bc3c:	mov	x22, x0
  41bc40:	sub	x0, x0, #0x1
  41bc44:	b	41baa4 <_obstack_memory_used@@Base+0x49dc>
  41bc48:	ldrb	w0, [x19, #136]
  41bc4c:	cbnz	w0, 41bdfc <_obstack_memory_used@@Base+0x4d34>
  41bc50:	ldr	x2, [x19, #120]
  41bc54:	cbz	x2, 41b8c4 <_obstack_memory_used@@Base+0x47fc>
  41bc58:	ldr	x4, [x19, #64]
  41bc5c:	ldr	x0, [x19, #48]
  41bc60:	cmp	x4, x1
  41bc64:	csel	x4, x4, x1, le
  41bc68:	cmp	x4, x0
  41bc6c:	b.gt	41bc7c <_obstack_memory_used@@Base+0x4bb4>
  41bc70:	b	41bed4 <_obstack_memory_used@@Base+0x4e0c>
  41bc74:	ldr	x21, [x19, #40]
  41bc78:	ldr	x2, [x19, #120]
  41bc7c:	ldp	x1, x3, [x19]
  41bc80:	add	x1, x1, x0
  41bc84:	ldrb	w1, [x1, x21]
  41bc88:	ldrb	w1, [x2, x1]
  41bc8c:	strb	w1, [x3, x0]
  41bc90:	add	x0, x0, #0x1
  41bc94:	cmp	x4, x0
  41bc98:	b.ne	41bc74 <_obstack_memory_used@@Base+0x4bac>  // b.any
  41bc9c:	stp	x4, x4, [x19, #48]
  41bca0:	b	41b8c4 <_obstack_memory_used@@Base+0x47fc>
  41bca4:	ldr	x22, [x19]
  41bca8:	ldr	x3, [x19, #120]
  41bcac:	add	x22, x22, x20
  41bcb0:	add	x22, x22, x1
  41bcb4:	ldurb	w0, [x22, #-1]
  41bcb8:	str	xzr, [x19, #56]
  41bcbc:	cbz	x3, 41bcc8 <_obstack_memory_used@@Base+0x4c00>
  41bcc0:	and	x0, x0, #0xff
  41bcc4:	ldrb	w0, [x3, x0]
  41bcc8:	ldr	x4, [x19, #128]
  41bccc:	ubfx	x1, x0, #6, #2
  41bcd0:	mov	w3, #0x1                   	// #1
  41bcd4:	ldr	x1, [x4, x1, lsl #3]
  41bcd8:	lsr	x1, x1, x0
  41bcdc:	tbnz	w1, #0, 41bd00 <_obstack_memory_used@@Base+0x4c38>
  41bce0:	cmp	w0, #0xa
  41bce4:	mov	w3, #0x0                   	// #0
  41bce8:	b.ne	41bd00 <_obstack_memory_used@@Base+0x4c38>  // b.any
  41bcec:	ldrb	w0, [x19, #141]
  41bcf0:	cmp	w0, #0x0
  41bcf4:	cset	w3, ne  // ne = any
  41bcf8:	lsl	w3, w3, #1
  41bcfc:	nop
  41bd00:	ldrb	w0, [x19, #139]
  41bd04:	str	w3, [x19, #112]
  41bd08:	ldr	x1, [x19, #88]
  41bd0c:	ldr	x3, [x19, #104]
  41bd10:	sub	x1, x1, x20
  41bd14:	sub	x3, x3, x20
  41bd18:	cbz	w0, 41b894 <_obstack_memory_used@@Base+0x47cc>
  41bd1c:	str	x21, [x19, #40]
  41bd20:	str	x1, [x19, #88]
  41bd24:	str	x3, [x19, #104]
  41bd28:	b	41b914 <_obstack_memory_used@@Base+0x484c>
  41bd2c:	b.ne	41bb34 <_obstack_memory_used@@Base+0x4a6c>  // b.any
  41bd30:	mov	x2, #0x0                   	// #0
  41bd34:	str	xzr, [x19, #48]
  41bd38:	b	41bb84 <_obstack_memory_used@@Base+0x4abc>
  41bd3c:	ldr	w28, [sp, #108]
  41bd40:	sub	x22, x0, x22
  41bd44:	str	xzr, [x19, #32]
  41bd48:	str	x22, [x19, #48]
  41bd4c:	cmn	w28, #0x1
  41bd50:	b.ne	41b9e0 <_obstack_memory_used@@Base+0x4918>  // b.any
  41bd54:	b	41bc28 <_obstack_memory_used@@Base+0x4b60>
  41bd58:	ldr	x0, [x25, x22, lsl #3]
  41bd5c:	cmp	x0, x20
  41bd60:	b.ne	41bac4 <_obstack_memory_used@@Base+0x49fc>  // b.any
  41bd64:	ldr	x0, [x19, #16]
  41bd68:	sub	x2, x23, x20
  41bd6c:	lsl	x2, x2, #2
  41bd70:	add	x1, x0, x20, lsl #2
  41bd74:	bl	4022c0 <memmove@plt>
  41bd78:	ldr	x0, [x19, #8]
  41bd7c:	ldr	x2, [x19, #48]
  41bd80:	add	x1, x0, x20
  41bd84:	sub	x2, x2, x20
  41bd88:	bl	4022c0 <memmove@plt>
  41bd8c:	ldp	x0, x1, [x19, #48]
  41bd90:	sub	x0, x0, x20
  41bd94:	str	x0, [x19, #48]
  41bd98:	cmp	x0, #0x0
  41bd9c:	sub	x0, x1, x20
  41bda0:	str	x0, [x19, #56]
  41bda4:	b.le	41bdd4 <_obstack_memory_used@@Base+0x4d0c>
  41bda8:	ldr	x2, [x19, #24]
  41bdac:	mov	x0, #0x0                   	// #0
  41bdb0:	add	x3, x2, x20, lsl #3
  41bdb4:	nop
  41bdb8:	ldr	x1, [x3, x0, lsl #3]
  41bdbc:	sub	x1, x1, x20
  41bdc0:	str	x1, [x2, x0, lsl #3]
  41bdc4:	add	x0, x0, #0x1
  41bdc8:	ldr	x1, [x19, #48]
  41bdcc:	cmp	x1, x0
  41bdd0:	b.gt	41bdb8 <_obstack_memory_used@@Base+0x4cf0>
  41bdd4:	ldr	x1, [x19, #88]
  41bdd8:	ldr	x3, [x19, #104]
  41bddc:	sub	x1, x1, x20
  41bde0:	ldrb	w0, [x19, #139]
  41bde4:	ldr	w2, [x19, #144]
  41bde8:	sub	x3, x3, x20
  41bdec:	ldp	x25, x26, [sp, #64]
  41bdf0:	b	41b890 <_obstack_memory_used@@Base+0x47c8>
  41bdf4:	ldp	x25, x26, [sp, #64]
  41bdf8:	b	41b974 <_obstack_memory_used@@Base+0x48ac>
  41bdfc:	mov	x0, x19
  41be00:	bl	417a10 <_obstack_memory_used@@Base+0x948>
  41be04:	b	41b8c4 <_obstack_memory_used@@Base+0x47fc>
  41be08:	ldr	x2, [x19, #80]
  41be0c:	strb	wzr, [x19, #140]
  41be10:	ldr	x1, [x19, #96]
  41be14:	sub	x2, x2, x21
  41be18:	add	x2, x2, x20
  41be1c:	str	x2, [x19, #88]
  41be20:	sub	x1, x1, x21
  41be24:	add	x1, x1, x20
  41be28:	str	x1, [x19, #104]
  41be2c:	b	41b958 <_obstack_memory_used@@Base+0x4890>
  41be30:	cmp	x0, #0x0
  41be34:	mov	w28, #0x0                   	// #0
  41be38:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  41be3c:	b.eq	41be48 <_obstack_memory_used@@Base+0x4d80>  // b.none
  41be40:	ldr	x0, [x19]
  41be44:	ldrb	w28, [x0, x22]
  41be48:	mov	x0, #0x1                   	// #1
  41be4c:	str	x26, [x19, #32]
  41be50:	b	41b9c4 <_obstack_memory_used@@Base+0x48fc>
  41be54:	ldp	x25, x26, [sp, #64]
  41be58:	ldp	x27, x28, [sp, #80]
  41be5c:	mov	w2, w24
  41be60:	sub	x1, x23, #0x1
  41be64:	mov	x0, x19
  41be68:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41be6c:	str	w0, [x19, #112]
  41be70:	b	41ba10 <_obstack_memory_used@@Base+0x4948>
  41be74:	b.le	41be94 <_obstack_memory_used@@Base+0x4dcc>
  41be78:	ldr	x0, [x19, #16]
  41be7c:	mov	w2, #0xffffffff            	// #-1
  41be80:	add	x1, x0, x22, lsl #2
  41be84:	nop
  41be88:	str	w2, [x0], #4
  41be8c:	cmp	x1, x0
  41be90:	b.ne	41be88 <_obstack_memory_used@@Base+0x4dc0>  // b.any
  41be94:	ldrb	w0, [x19, #139]
  41be98:	cbz	w0, 41ba1c <_obstack_memory_used@@Base+0x4954>
  41be9c:	ldr	x0, [x19, #8]
  41bea0:	mov	x2, x22
  41bea4:	mov	w1, #0xff                  	// #255
  41bea8:	bl	402510 <memset@plt>
  41beac:	ldrb	w0, [x19, #139]
  41beb0:	ldr	x22, [x19, #48]
  41beb4:	b	41ba1c <_obstack_memory_used@@Base+0x4954>
  41beb8:	mov	w0, w28
  41bebc:	bl	4027c0 <iswalnum@plt>
  41bec0:	cmp	w28, #0x5f
  41bec4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41bec8:	mov	w0, #0x1                   	// #1
  41becc:	b.ne	41ba04 <_obstack_memory_used@@Base+0x493c>  // b.any
  41bed0:	b	41b9e8 <_obstack_memory_used@@Base+0x4920>
  41bed4:	mov	x4, x0
  41bed8:	stp	x4, x4, [x19, #48]
  41bedc:	b	41b8c4 <_obstack_memory_used@@Base+0x47fc>
  41bee0:	cmp	x2, #0x6
  41bee4:	mov	x0, #0x6                   	// #6
  41bee8:	csel	x0, x2, x0, le
  41beec:	add	x1, sp, #0x70
  41bef0:	subs	w0, w0, #0x1
  41bef4:	b.mi	41bbfc <_obstack_memory_used@@Base+0x4b34>  // b.first
  41bef8:	sxtw	x0, w0
  41befc:	add	x1, sp, #0x70
  41bf00:	ldrb	w4, [x22, x0]
  41bf04:	ldrb	w4, [x3, x4]
  41bf08:	strb	w4, [x1, x0]
  41bf0c:	sub	x0, x0, #0x1
  41bf10:	tbz	w0, #31, 41bf00 <_obstack_memory_used@@Base+0x4e38>
  41bf14:	b	41bbfc <_obstack_memory_used@@Base+0x4b34>
  41bf18:	sub	x22, x22, x21
  41bf1c:	str	x22, [x19, #48]
  41bf20:	b	41be5c <_obstack_memory_used@@Base+0x4d94>
  41bf24:	ldr	x1, [x19, #40]
  41bf28:	ldr	x0, [x19, #56]
  41bf2c:	ldp	x25, x26, [sp, #64]
  41bf30:	b	41b974 <_obstack_memory_used@@Base+0x48ac>
  41bf34:	nop
  41bf38:	stp	x29, x30, [sp, #-96]!
  41bf3c:	mov	x29, sp
  41bf40:	stp	x21, x22, [sp, #32]
  41bf44:	mov	x22, x2
  41bf48:	ldr	x2, [x1]
  41bf4c:	ldr	x21, [x0, #152]
  41bf50:	cmp	x2, #0x0
  41bf54:	b.le	41c00c <_obstack_memory_used@@Base+0x4f44>
  41bf58:	stp	x19, x20, [sp, #16]
  41bf5c:	mov	x19, #0x0                   	// #0
  41bf60:	stp	x23, x24, [sp, #48]
  41bf64:	mov	x24, x0
  41bf68:	mov	x23, x3
  41bf6c:	stp	x25, x26, [sp, #64]
  41bf70:	mov	x25, x1
  41bf74:	b	41bf80 <_obstack_memory_used@@Base+0x4eb8>
  41bf78:	cmp	x19, x2
  41bf7c:	b.ge	41c000 <_obstack_memory_used@@Base+0x4f38>  // b.tcont
  41bf80:	ldr	x4, [x22]
  41bf84:	ldr	x5, [x21]
  41bf88:	ldr	x20, [x4, x19, lsl #3]
  41bf8c:	add	x19, x19, #0x1
  41bf90:	lsl	x4, x20, #4
  41bf94:	add	x6, x5, x4
  41bf98:	ldrb	w6, [x6, #8]
  41bf9c:	cmp	w6, #0x8
  41bfa0:	b.ne	41bf78 <_obstack_memory_used@@Base+0x4eb0>  // b.any
  41bfa4:	ldr	x3, [x5, x4]
  41bfa8:	cmp	x3, #0x3f
  41bfac:	b.gt	41bf78 <_obstack_memory_used@@Base+0x4eb0>
  41bfb0:	ldr	x4, [x21, #160]
  41bfb4:	lsr	x3, x4, x3
  41bfb8:	tbz	w3, #0, 41bf78 <_obstack_memory_used@@Base+0x4eb0>
  41bfbc:	ldp	x26, x0, [x24, #232]
  41bfc0:	str	x27, [sp, #80]
  41bfc4:	ldr	x27, [x24, #248]
  41bfc8:	cmp	x0, x26
  41bfcc:	b.eq	41c034 <_obstack_memory_used@@Base+0x4f6c>  // b.none
  41bfd0:	mov	x1, #0x30                  	// #48
  41bfd4:	mov	x0, #0x1                   	// #1
  41bfd8:	bl	402520 <calloc@plt>
  41bfdc:	str	x0, [x27, x26, lsl #3]
  41bfe0:	add	x1, x26, #0x1
  41bfe4:	cbz	x0, 41c01c <_obstack_memory_used@@Base+0x4f54>
  41bfe8:	ldr	x27, [sp, #80]
  41bfec:	str	x1, [x24, #232]
  41bff0:	stp	x23, x20, [x0]
  41bff4:	ldr	x2, [x25]
  41bff8:	cmp	x19, x2
  41bffc:	b.lt	41bf80 <_obstack_memory_used@@Base+0x4eb8>  // b.tstop
  41c000:	ldp	x19, x20, [sp, #16]
  41c004:	ldp	x23, x24, [sp, #48]
  41c008:	ldp	x25, x26, [sp, #64]
  41c00c:	mov	w0, #0x0                   	// #0
  41c010:	ldp	x21, x22, [sp, #32]
  41c014:	ldp	x29, x30, [sp], #96
  41c018:	ret
  41c01c:	mov	w0, #0xc                   	// #12
  41c020:	ldp	x19, x20, [sp, #16]
  41c024:	ldp	x23, x24, [sp, #48]
  41c028:	ldp	x25, x26, [sp, #64]
  41c02c:	ldr	x27, [sp, #80]
  41c030:	b	41c010 <_obstack_memory_used@@Base+0x4f48>
  41c034:	mov	x0, x27
  41c038:	lsl	x1, x26, #4
  41c03c:	bl	402550 <realloc@plt>
  41c040:	mov	x27, x0
  41c044:	lsl	x0, x26, #1
  41c048:	cbz	x27, 41c01c <_obstack_memory_used@@Base+0x4f54>
  41c04c:	stp	x0, x27, [x24, #240]
  41c050:	ldr	x26, [x24, #232]
  41c054:	b	41bfd0 <_obstack_memory_used@@Base+0x4f08>
  41c058:	stp	x29, x30, [sp, #-48]!
  41c05c:	mov	x6, x0
  41c060:	mov	x7, x2
  41c064:	mov	x29, sp
  41c068:	stp	x19, x20, [sp, #16]
  41c06c:	lsl	x2, x3, #4
  41c070:	mov	x20, x5
  41c074:	ldr	x19, [x6]
  41c078:	str	x21, [sp, #32]
  41c07c:	mov	x21, x1
  41c080:	mov	x0, x4
  41c084:	sub	x19, x19, #0x1
  41c088:	ldr	x1, [x1]
  41c08c:	str	x19, [x6]
  41c090:	add	x19, x19, x19, lsl #1
  41c094:	lsl	x19, x19, #4
  41c098:	add	x3, x1, x19
  41c09c:	ldr	x1, [x1, x19]
  41c0a0:	str	x1, [x7]
  41c0a4:	ldr	x1, [x3, #16]
  41c0a8:	bl	4022a0 <memcpy@plt>
  41c0ac:	ldr	x0, [x20, #16]
  41c0b0:	bl	4026b0 <free@plt>
  41c0b4:	ldr	x0, [x21]
  41c0b8:	add	x0, x0, x19
  41c0bc:	ldr	x0, [x0, #16]
  41c0c0:	bl	4026b0 <free@plt>
  41c0c4:	ldr	x0, [x21]
  41c0c8:	ldr	x21, [sp, #32]
  41c0cc:	add	x19, x0, x19
  41c0d0:	ldp	x0, x1, [x19, #24]
  41c0d4:	stp	x0, x1, [x20]
  41c0d8:	ldr	x0, [x19, #40]
  41c0dc:	str	x0, [x20, #16]
  41c0e0:	ldr	x0, [x19, #8]
  41c0e4:	ldp	x19, x20, [sp, #16]
  41c0e8:	ldp	x29, x30, [sp], #48
  41c0ec:	ret
  41c0f0:	stp	x29, x30, [sp, #-32]!
  41c0f4:	mov	x29, sp
  41c0f8:	stp	x19, x20, [sp, #16]
  41c0fc:	mov	x19, x1
  41c100:	mov	x20, x0
  41c104:	mov	x0, x1
  41c108:	bl	402300 <strlen@plt>
  41c10c:	cmp	x0, #0x1
  41c110:	b.ne	41c140 <_obstack_memory_used@@Base+0x5078>  // b.any
  41c114:	ldrb	w1, [x19]
  41c118:	mov	x2, x0
  41c11c:	mov	w0, #0x0                   	// #0
  41c120:	ubfx	x3, x1, #6, #2
  41c124:	lsl	x2, x2, x1
  41c128:	ldr	x1, [x20, x3, lsl #3]
  41c12c:	orr	x2, x1, x2
  41c130:	str	x2, [x20, x3, lsl #3]
  41c134:	ldp	x19, x20, [sp, #16]
  41c138:	ldp	x29, x30, [sp], #32
  41c13c:	ret
  41c140:	mov	w0, #0x3                   	// #3
  41c144:	ldp	x19, x20, [sp, #16]
  41c148:	ldp	x29, x30, [sp], #32
  41c14c:	ret
  41c150:	stp	x29, x30, [sp, #-80]!
  41c154:	mov	x29, sp
  41c158:	stp	x19, x20, [sp, #16]
  41c15c:	mov	x20, x0
  41c160:	mov	x19, x1
  41c164:	stp	x21, x22, [sp, #32]
  41c168:	mov	x22, x3
  41c16c:	mov	x21, x5
  41c170:	stp	x23, x24, [sp, #48]
  41c174:	mov	x24, x4
  41c178:	stp	x25, x26, [sp, #64]
  41c17c:	mov	x25, x2
  41c180:	tbz	w6, #22, 41c1a0 <_obstack_memory_used@@Base+0x50d8>
  41c184:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c188:	mov	x0, x5
  41c18c:	add	x1, x1, #0x3d8
  41c190:	bl	402690 <strcmp@plt>
  41c194:	cbnz	w0, 41c28c <_obstack_memory_used@@Base+0x51c4>
  41c198:	adrp	x21, 426000 <_obstack_memory_used@@Base+0xef38>
  41c19c:	add	x21, x21, #0x3d0
  41c1a0:	ldr	x23, [x22]
  41c1a4:	ldr	x0, [x24]
  41c1a8:	ldr	x26, [x25]
  41c1ac:	cmp	x0, x23
  41c1b0:	b.eq	41c2c0 <_obstack_memory_used@@Base+0x51f8>  // b.none
  41c1b4:	add	x0, x23, #0x1
  41c1b8:	str	x0, [x22]
  41c1bc:	mov	x0, x21
  41c1c0:	bl	402350 <wctype@plt>
  41c1c4:	str	x0, [x26, x23, lsl #3]
  41c1c8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c1cc:	mov	x0, x21
  41c1d0:	add	x1, x1, #0x548
  41c1d4:	bl	402690 <strcmp@plt>
  41c1d8:	cbz	w0, 41c24c <_obstack_memory_used@@Base+0x5184>
  41c1dc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c1e0:	mov	x0, x21
  41c1e4:	add	x1, x1, #0x560
  41c1e8:	bl	402690 <strcmp@plt>
  41c1ec:	cbnz	w0, 41c2ec <_obstack_memory_used@@Base+0x5224>
  41c1f0:	bl	4026a0 <__ctype_b_loc@plt>
  41c1f4:	mov	x2, #0x0                   	// #0
  41c1f8:	mov	x5, #0x1                   	// #1
  41c1fc:	ldr	x4, [x0]
  41c200:	cbnz	x20, 41c478 <_obstack_memory_used@@Base+0x53b0>
  41c204:	nop
  41c208:	ldrh	w0, [x4, x2, lsl #1]
  41c20c:	asr	x1, x2, #6
  41c210:	lsl	x3, x5, x2
  41c214:	add	x2, x2, #0x1
  41c218:	tbz	w0, #1, 41c228 <_obstack_memory_used@@Base+0x5160>
  41c21c:	ldr	x0, [x19, x1, lsl #3]
  41c220:	orr	x0, x0, x3
  41c224:	str	x0, [x19, x1, lsl #3]
  41c228:	cmp	x2, #0x100
  41c22c:	b.ne	41c208 <_obstack_memory_used@@Base+0x5140>  // b.any
  41c230:	mov	w0, #0x0                   	// #0
  41c234:	ldp	x19, x20, [sp, #16]
  41c238:	ldp	x21, x22, [sp, #32]
  41c23c:	ldp	x23, x24, [sp, #48]
  41c240:	ldp	x25, x26, [sp, #64]
  41c244:	ldp	x29, x30, [sp], #80
  41c248:	ret
  41c24c:	bl	4026a0 <__ctype_b_loc@plt>
  41c250:	mov	x2, #0x0                   	// #0
  41c254:	mov	x6, #0x1                   	// #1
  41c258:	ldr	x5, [x0]
  41c25c:	cbnz	x20, 41c43c <_obstack_memory_used@@Base+0x5374>
  41c260:	ldrh	w3, [x5, x2, lsl #1]
  41c264:	asr	x0, x2, #6
  41c268:	lsl	x4, x6, x2
  41c26c:	add	x2, x2, #0x1
  41c270:	tbz	w3, #3, 41c280 <_obstack_memory_used@@Base+0x51b8>
  41c274:	ldr	x1, [x19, x0, lsl #3]
  41c278:	orr	x1, x1, x4
  41c27c:	str	x1, [x19, x0, lsl #3]
  41c280:	cmp	x2, #0x100
  41c284:	b.ne	41c260 <_obstack_memory_used@@Base+0x5198>  // b.any
  41c288:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c28c:	mov	x0, x21
  41c290:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c294:	add	x1, x1, #0x3e0
  41c298:	bl	402690 <strcmp@plt>
  41c29c:	cmp	w0, #0x0
  41c2a0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c2a4:	ldr	x23, [x22]
  41c2a8:	add	x1, x1, #0x3d0
  41c2ac:	ldr	x0, [x24]
  41c2b0:	csel	x21, x1, x21, eq  // eq = none
  41c2b4:	ldr	x26, [x25]
  41c2b8:	cmp	x0, x23
  41c2bc:	b.ne	41c1b4 <_obstack_memory_used@@Base+0x50ec>  // b.any
  41c2c0:	lsl	x23, x23, #1
  41c2c4:	mov	x0, x26
  41c2c8:	add	x23, x23, #0x1
  41c2cc:	lsl	x1, x23, #3
  41c2d0:	bl	402550 <realloc@plt>
  41c2d4:	mov	x26, x0
  41c2d8:	cbz	x0, 41c590 <_obstack_memory_used@@Base+0x54c8>
  41c2dc:	str	x0, [x25]
  41c2e0:	str	x23, [x24]
  41c2e4:	ldr	x23, [x22]
  41c2e8:	b	41c1b4 <_obstack_memory_used@@Base+0x50ec>
  41c2ec:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c2f0:	mov	x0, x21
  41c2f4:	add	x1, x1, #0x3e0
  41c2f8:	bl	402690 <strcmp@plt>
  41c2fc:	cbz	w0, 41c354 <_obstack_memory_used@@Base+0x528c>
  41c300:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c304:	mov	x0, x21
  41c308:	add	x1, x1, #0x538
  41c30c:	bl	402690 <strcmp@plt>
  41c310:	cbnz	w0, 41c394 <_obstack_memory_used@@Base+0x52cc>
  41c314:	bl	4026a0 <__ctype_b_loc@plt>
  41c318:	mov	x1, #0x0                   	// #0
  41c31c:	mov	x5, #0x1                   	// #1
  41c320:	ldr	x4, [x0]
  41c324:	cbnz	x20, 41c620 <_obstack_memory_used@@Base+0x5558>
  41c328:	ldrh	w0, [x4, x1, lsl #1]
  41c32c:	asr	x2, x1, #6
  41c330:	lsl	x3, x5, x1
  41c334:	add	x1, x1, #0x1
  41c338:	tbz	w0, #13, 41c348 <_obstack_memory_used@@Base+0x5280>
  41c33c:	ldr	x0, [x19, x2, lsl #3]
  41c340:	orr	x0, x0, x3
  41c344:	str	x0, [x19, x2, lsl #3]
  41c348:	cmp	x1, #0x100
  41c34c:	b.ne	41c328 <_obstack_memory_used@@Base+0x5260>  // b.any
  41c350:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c354:	bl	4026a0 <__ctype_b_loc@plt>
  41c358:	mov	x1, #0x0                   	// #0
  41c35c:	mov	x5, #0x1                   	// #1
  41c360:	ldr	x4, [x0]
  41c364:	cbnz	x20, 41c4b0 <_obstack_memory_used@@Base+0x53e8>
  41c368:	ldrh	w0, [x4, x1, lsl #1]
  41c36c:	asr	x2, x1, #6
  41c370:	lsl	x3, x5, x1
  41c374:	add	x1, x1, #0x1
  41c378:	tbz	w0, #9, 41c388 <_obstack_memory_used@@Base+0x52c0>
  41c37c:	ldr	x0, [x19, x2, lsl #3]
  41c380:	orr	x0, x0, x3
  41c384:	str	x0, [x19, x2, lsl #3]
  41c388:	cmp	x1, #0x100
  41c38c:	b.ne	41c368 <_obstack_memory_used@@Base+0x52a0>  // b.any
  41c390:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c394:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c398:	mov	x0, x21
  41c39c:	add	x1, x1, #0x3d0
  41c3a0:	bl	402690 <strcmp@plt>
  41c3a4:	cbz	w0, 41c3fc <_obstack_memory_used@@Base+0x5334>
  41c3a8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c3ac:	mov	x0, x21
  41c3b0:	add	x1, x1, #0x528
  41c3b4:	bl	402690 <strcmp@plt>
  41c3b8:	cbnz	w0, 41c4e8 <_obstack_memory_used@@Base+0x5420>
  41c3bc:	bl	4026a0 <__ctype_b_loc@plt>
  41c3c0:	mov	x1, #0x0                   	// #0
  41c3c4:	mov	x5, #0x1                   	// #1
  41c3c8:	ldr	x4, [x0]
  41c3cc:	cbnz	x20, 41c658 <_obstack_memory_used@@Base+0x5590>
  41c3d0:	ldrh	w2, [x4, x1, lsl #1]
  41c3d4:	asr	x0, x1, #6
  41c3d8:	lsl	x3, x5, x1
  41c3dc:	add	x1, x1, #0x1
  41c3e0:	tbz	w2, #11, 41c3f0 <_obstack_memory_used@@Base+0x5328>
  41c3e4:	ldr	x2, [x19, x0, lsl #3]
  41c3e8:	orr	x2, x2, x3
  41c3ec:	str	x2, [x19, x0, lsl #3]
  41c3f0:	cmp	x1, #0x100
  41c3f4:	b.ne	41c3d0 <_obstack_memory_used@@Base+0x5308>  // b.any
  41c3f8:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c3fc:	bl	4026a0 <__ctype_b_loc@plt>
  41c400:	mov	x1, #0x0                   	// #0
  41c404:	mov	x5, #0x1                   	// #1
  41c408:	ldr	x4, [x0]
  41c40c:	cbnz	x20, 41c5ec <_obstack_memory_used@@Base+0x5524>
  41c410:	ldrh	w0, [x4, x1, lsl #1]
  41c414:	asr	x2, x1, #6
  41c418:	lsl	x3, x5, x1
  41c41c:	add	x1, x1, #0x1
  41c420:	tbz	w0, #10, 41c430 <_obstack_memory_used@@Base+0x5368>
  41c424:	ldr	x0, [x19, x2, lsl #3]
  41c428:	orr	x0, x0, x3
  41c42c:	str	x0, [x19, x2, lsl #3]
  41c430:	cmp	x1, #0x100
  41c434:	b.ne	41c410 <_obstack_memory_used@@Base+0x5348>  // b.any
  41c438:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c43c:	mov	x4, x6
  41c440:	mov	x0, #0x0                   	// #0
  41c444:	nop
  41c448:	ldrh	w1, [x5, x0, lsl #1]
  41c44c:	tbz	w1, #3, 41c468 <_obstack_memory_used@@Base+0x53a0>
  41c450:	ldrb	w1, [x20, x0]
  41c454:	ubfx	x3, x1, #6, #2
  41c458:	lsl	x1, x4, x1
  41c45c:	ldr	x2, [x19, x3, lsl #3]
  41c460:	orr	x1, x2, x1
  41c464:	str	x1, [x19, x3, lsl #3]
  41c468:	add	x0, x0, #0x1
  41c46c:	cmp	x0, #0x100
  41c470:	b.ne	41c448 <_obstack_memory_used@@Base+0x5380>  // b.any
  41c474:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c478:	mov	x0, #0x0                   	// #0
  41c47c:	nop
  41c480:	ldrh	w1, [x4, x0, lsl #1]
  41c484:	tbz	w1, #1, 41c4a0 <_obstack_memory_used@@Base+0x53d8>
  41c488:	ldrb	w1, [x20, x0]
  41c48c:	ubfx	x3, x1, #6, #2
  41c490:	lsl	x1, x5, x1
  41c494:	ldr	x2, [x19, x3, lsl #3]
  41c498:	orr	x1, x2, x1
  41c49c:	str	x1, [x19, x3, lsl #3]
  41c4a0:	add	x0, x0, #0x1
  41c4a4:	cmp	x0, #0x100
  41c4a8:	b.ne	41c480 <_obstack_memory_used@@Base+0x53b8>  // b.any
  41c4ac:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c4b0:	mov	x0, #0x0                   	// #0
  41c4b4:	nop
  41c4b8:	ldrh	w1, [x4, x0, lsl #1]
  41c4bc:	tbz	w1, #9, 41c4d8 <_obstack_memory_used@@Base+0x5410>
  41c4c0:	ldrb	w1, [x20, x0]
  41c4c4:	ubfx	x3, x1, #6, #2
  41c4c8:	lsl	x1, x5, x1
  41c4cc:	ldr	x2, [x19, x3, lsl #3]
  41c4d0:	orr	x1, x2, x1
  41c4d4:	str	x1, [x19, x3, lsl #3]
  41c4d8:	add	x0, x0, #0x1
  41c4dc:	cmp	x0, #0x100
  41c4e0:	b.ne	41c4b8 <_obstack_memory_used@@Base+0x53f0>  // b.any
  41c4e4:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c4e8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c4ec:	mov	x0, x21
  41c4f0:	add	x1, x1, #0x550
  41c4f4:	bl	402690 <strcmp@plt>
  41c4f8:	cbnz	w0, 41c53c <_obstack_memory_used@@Base+0x5474>
  41c4fc:	bl	4026a0 <__ctype_b_loc@plt>
  41c500:	mov	x1, #0x0                   	// #0
  41c504:	mov	x5, #0x1                   	// #1
  41c508:	ldr	x4, [x0]
  41c50c:	cbnz	x20, 41c838 <_obstack_memory_used@@Base+0x5770>
  41c510:	ldrh	w0, [x4, x1, lsl #1]
  41c514:	asr	x2, x1, #6
  41c518:	lsl	x3, x5, x1
  41c51c:	add	x1, x1, #0x1
  41c520:	tbz	w0, #14, 41c530 <_obstack_memory_used@@Base+0x5468>
  41c524:	ldr	x0, [x19, x2, lsl #3]
  41c528:	orr	x0, x0, x3
  41c52c:	str	x0, [x19, x2, lsl #3]
  41c530:	cmp	x1, #0x100
  41c534:	b.ne	41c510 <_obstack_memory_used@@Base+0x5448>  // b.any
  41c538:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c53c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c540:	mov	x0, x21
  41c544:	add	x1, x1, #0x3d8
  41c548:	bl	402690 <strcmp@plt>
  41c54c:	cbnz	w0, 41c598 <_obstack_memory_used@@Base+0x54d0>
  41c550:	bl	4026a0 <__ctype_b_loc@plt>
  41c554:	mov	x1, #0x0                   	// #0
  41c558:	mov	x5, #0x1                   	// #1
  41c55c:	ldr	x4, [x0]
  41c560:	cbnz	x20, 41c8a4 <_obstack_memory_used@@Base+0x57dc>
  41c564:	ldrh	w0, [x4, x1, lsl #1]
  41c568:	asr	x2, x1, #6
  41c56c:	lsl	x3, x5, x1
  41c570:	add	x1, x1, #0x1
  41c574:	tbz	w0, #8, 41c584 <_obstack_memory_used@@Base+0x54bc>
  41c578:	ldr	x0, [x19, x2, lsl #3]
  41c57c:	orr	x0, x0, x3
  41c580:	str	x0, [x19, x2, lsl #3]
  41c584:	cmp	x1, #0x100
  41c588:	b.ne	41c564 <_obstack_memory_used@@Base+0x549c>  // b.any
  41c58c:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c590:	mov	w0, #0xc                   	// #12
  41c594:	b	41c234 <_obstack_memory_used@@Base+0x516c>
  41c598:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c59c:	mov	x0, x21
  41c5a0:	add	x1, x1, #0x568
  41c5a4:	bl	402690 <strcmp@plt>
  41c5a8:	cbnz	w0, 41c68c <_obstack_memory_used@@Base+0x55c4>
  41c5ac:	bl	4026a0 <__ctype_b_loc@plt>
  41c5b0:	mov	x1, #0x0                   	// #0
  41c5b4:	mov	x4, #0x1                   	// #1
  41c5b8:	ldr	x2, [x0]
  41c5bc:	cbnz	x20, 41c86c <_obstack_memory_used@@Base+0x57a4>
  41c5c0:	ldrh	w0, [x2, x1, lsl #1]
  41c5c4:	asr	x3, x1, #6
  41c5c8:	lsl	x5, x4, x1
  41c5cc:	add	x1, x1, #0x1
  41c5d0:	tbz	w0, #0, 41c5e0 <_obstack_memory_used@@Base+0x5518>
  41c5d4:	ldr	x0, [x19, x3, lsl #3]
  41c5d8:	orr	x0, x0, x5
  41c5dc:	str	x0, [x19, x3, lsl #3]
  41c5e0:	cmp	x1, #0x100
  41c5e4:	b.ne	41c5c0 <_obstack_memory_used@@Base+0x54f8>  // b.any
  41c5e8:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c5ec:	mov	x0, #0x0                   	// #0
  41c5f0:	ldrh	w1, [x4, x0, lsl #1]
  41c5f4:	tbz	w1, #10, 41c610 <_obstack_memory_used@@Base+0x5548>
  41c5f8:	ldrb	w1, [x20, x0]
  41c5fc:	ubfx	x3, x1, #6, #2
  41c600:	lsl	x1, x5, x1
  41c604:	ldr	x2, [x19, x3, lsl #3]
  41c608:	orr	x1, x2, x1
  41c60c:	str	x1, [x19, x3, lsl #3]
  41c610:	add	x0, x0, #0x1
  41c614:	cmp	x0, #0x100
  41c618:	b.ne	41c5f0 <_obstack_memory_used@@Base+0x5528>  // b.any
  41c61c:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c620:	mov	x0, #0x0                   	// #0
  41c624:	nop
  41c628:	ldrh	w1, [x4, x0, lsl #1]
  41c62c:	tbz	w1, #13, 41c648 <_obstack_memory_used@@Base+0x5580>
  41c630:	ldrb	w1, [x20, x0]
  41c634:	ubfx	x3, x1, #6, #2
  41c638:	lsl	x1, x5, x1
  41c63c:	ldr	x2, [x19, x3, lsl #3]
  41c640:	orr	x1, x2, x1
  41c644:	str	x1, [x19, x3, lsl #3]
  41c648:	add	x0, x0, #0x1
  41c64c:	cmp	x0, #0x100
  41c650:	b.ne	41c628 <_obstack_memory_used@@Base+0x5560>  // b.any
  41c654:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c658:	mov	x0, #0x0                   	// #0
  41c65c:	ldrh	w1, [x4, x0, lsl #1]
  41c660:	tbz	w1, #11, 41c67c <_obstack_memory_used@@Base+0x55b4>
  41c664:	ldrb	w1, [x20, x0]
  41c668:	ubfx	x3, x1, #6, #2
  41c66c:	lsl	x1, x5, x1
  41c670:	ldr	x2, [x19, x3, lsl #3]
  41c674:	orr	x1, x2, x1
  41c678:	str	x1, [x19, x3, lsl #3]
  41c67c:	add	x0, x0, #0x1
  41c680:	cmp	x0, #0x100
  41c684:	b.ne	41c65c <_obstack_memory_used@@Base+0x5594>  // b.any
  41c688:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c68c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c690:	mov	x0, x21
  41c694:	add	x1, x1, #0x558
  41c698:	bl	402690 <strcmp@plt>
  41c69c:	cbnz	w0, 41c718 <_obstack_memory_used@@Base+0x5650>
  41c6a0:	bl	4026a0 <__ctype_b_loc@plt>
  41c6a4:	mov	x1, #0x0                   	// #0
  41c6a8:	mov	x4, #0x1                   	// #1
  41c6ac:	ldr	x3, [x0]
  41c6b0:	cbnz	x20, 41c6e0 <_obstack_memory_used@@Base+0x5618>
  41c6b4:	ldrsh	w0, [x3, x1, lsl #1]
  41c6b8:	asr	x2, x1, #6
  41c6bc:	lsl	x5, x4, x1
  41c6c0:	add	x1, x1, #0x1
  41c6c4:	tbz	w0, #31, 41c6d4 <_obstack_memory_used@@Base+0x560c>
  41c6c8:	ldr	x0, [x19, x2, lsl #3]
  41c6cc:	orr	x0, x0, x5
  41c6d0:	str	x0, [x19, x2, lsl #3]
  41c6d4:	cmp	x1, #0x100
  41c6d8:	b.ne	41c6b4 <_obstack_memory_used@@Base+0x55ec>  // b.any
  41c6dc:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c6e0:	mov	x5, x4
  41c6e4:	mov	x0, #0x0                   	// #0
  41c6e8:	ldrsh	w1, [x3, x0, lsl #1]
  41c6ec:	tbz	w1, #31, 41c708 <_obstack_memory_used@@Base+0x5640>
  41c6f0:	ldrb	w1, [x20, x0]
  41c6f4:	ubfx	x4, x1, #6, #2
  41c6f8:	lsl	x1, x5, x1
  41c6fc:	ldr	x2, [x19, x4, lsl #3]
  41c700:	orr	x1, x2, x1
  41c704:	str	x1, [x19, x4, lsl #3]
  41c708:	add	x0, x0, #0x1
  41c70c:	cmp	x0, #0x100
  41c710:	b.ne	41c6e8 <_obstack_memory_used@@Base+0x5620>  // b.any
  41c714:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c718:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c71c:	mov	x0, x21
  41c720:	add	x1, x1, #0x540
  41c724:	bl	402690 <strcmp@plt>
  41c728:	cbnz	w0, 41c7a4 <_obstack_memory_used@@Base+0x56dc>
  41c72c:	bl	4026a0 <__ctype_b_loc@plt>
  41c730:	mov	x1, #0x0                   	// #0
  41c734:	mov	x4, #0x1                   	// #1
  41c738:	ldr	x3, [x0]
  41c73c:	cbnz	x20, 41c76c <_obstack_memory_used@@Base+0x56a4>
  41c740:	ldrh	w0, [x3, x1, lsl #1]
  41c744:	asr	x2, x1, #6
  41c748:	lsl	x5, x4, x1
  41c74c:	add	x1, x1, #0x1
  41c750:	tbz	w0, #2, 41c760 <_obstack_memory_used@@Base+0x5698>
  41c754:	ldr	x0, [x19, x2, lsl #3]
  41c758:	orr	x0, x0, x5
  41c75c:	str	x0, [x19, x2, lsl #3]
  41c760:	cmp	x1, #0x100
  41c764:	b.ne	41c740 <_obstack_memory_used@@Base+0x5678>  // b.any
  41c768:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c76c:	mov	x5, x4
  41c770:	mov	x0, #0x0                   	// #0
  41c774:	ldrh	w1, [x3, x0, lsl #1]
  41c778:	tbz	w1, #2, 41c794 <_obstack_memory_used@@Base+0x56cc>
  41c77c:	ldrb	w1, [x20, x0]
  41c780:	ubfx	x4, x1, #6, #2
  41c784:	lsl	x1, x5, x1
  41c788:	ldr	x2, [x19, x4, lsl #3]
  41c78c:	orr	x1, x2, x1
  41c790:	str	x1, [x19, x4, lsl #3]
  41c794:	add	x0, x0, #0x1
  41c798:	cmp	x0, #0x100
  41c79c:	b.ne	41c774 <_obstack_memory_used@@Base+0x56ac>  // b.any
  41c7a0:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c7a4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xef38>
  41c7a8:	mov	x0, x21
  41c7ac:	add	x1, x1, #0x530
  41c7b0:	bl	402690 <strcmp@plt>
  41c7b4:	cbnz	w0, 41c830 <_obstack_memory_used@@Base+0x5768>
  41c7b8:	bl	4026a0 <__ctype_b_loc@plt>
  41c7bc:	mov	x1, #0x0                   	// #0
  41c7c0:	mov	x4, #0x1                   	// #1
  41c7c4:	ldr	x3, [x0]
  41c7c8:	cbnz	x20, 41c7f8 <_obstack_memory_used@@Base+0x5730>
  41c7cc:	ldrh	w0, [x3, x1, lsl #1]
  41c7d0:	asr	x2, x1, #6
  41c7d4:	lsl	x5, x4, x1
  41c7d8:	add	x1, x1, #0x1
  41c7dc:	tbz	w0, #12, 41c7ec <_obstack_memory_used@@Base+0x5724>
  41c7e0:	ldr	x0, [x19, x2, lsl #3]
  41c7e4:	orr	x0, x0, x5
  41c7e8:	str	x0, [x19, x2, lsl #3]
  41c7ec:	cmp	x1, #0x100
  41c7f0:	b.ne	41c7cc <_obstack_memory_used@@Base+0x5704>  // b.any
  41c7f4:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c7f8:	mov	x5, x4
  41c7fc:	mov	x0, #0x0                   	// #0
  41c800:	ldrh	w1, [x3, x0, lsl #1]
  41c804:	tbz	w1, #12, 41c820 <_obstack_memory_used@@Base+0x5758>
  41c808:	ldrb	w1, [x20, x0]
  41c80c:	ubfx	x4, x1, #6, #2
  41c810:	lsl	x1, x5, x1
  41c814:	ldr	x2, [x19, x4, lsl #3]
  41c818:	orr	x1, x2, x1
  41c81c:	str	x1, [x19, x4, lsl #3]
  41c820:	add	x0, x0, #0x1
  41c824:	cmp	x0, #0x100
  41c828:	b.ne	41c800 <_obstack_memory_used@@Base+0x5738>  // b.any
  41c82c:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c830:	mov	w0, #0x4                   	// #4
  41c834:	b	41c234 <_obstack_memory_used@@Base+0x516c>
  41c838:	mov	x0, #0x0                   	// #0
  41c83c:	ldrh	w1, [x4, x0, lsl #1]
  41c840:	tbz	w1, #14, 41c85c <_obstack_memory_used@@Base+0x5794>
  41c844:	ldrb	w1, [x20, x0]
  41c848:	ubfx	x3, x1, #6, #2
  41c84c:	lsl	x1, x5, x1
  41c850:	ldr	x2, [x19, x3, lsl #3]
  41c854:	orr	x1, x2, x1
  41c858:	str	x1, [x19, x3, lsl #3]
  41c85c:	add	x0, x0, #0x1
  41c860:	cmp	x0, #0x100
  41c864:	b.ne	41c83c <_obstack_memory_used@@Base+0x5774>  // b.any
  41c868:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c86c:	mov	x5, x4
  41c870:	mov	x0, #0x0                   	// #0
  41c874:	ldrh	w1, [x2, x0, lsl #1]
  41c878:	tbz	w1, #0, 41c894 <_obstack_memory_used@@Base+0x57cc>
  41c87c:	ldrb	w1, [x20, x0]
  41c880:	ubfx	x4, x1, #6, #2
  41c884:	lsl	x1, x5, x1
  41c888:	ldr	x3, [x19, x4, lsl #3]
  41c88c:	orr	x1, x3, x1
  41c890:	str	x1, [x19, x4, lsl #3]
  41c894:	add	x0, x0, #0x1
  41c898:	cmp	x0, #0x100
  41c89c:	b.ne	41c874 <_obstack_memory_used@@Base+0x57ac>  // b.any
  41c8a0:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c8a4:	mov	x0, #0x0                   	// #0
  41c8a8:	ldrh	w1, [x4, x0, lsl #1]
  41c8ac:	tbz	w1, #8, 41c8c8 <_obstack_memory_used@@Base+0x5800>
  41c8b0:	ldrb	w1, [x20, x0]
  41c8b4:	ubfx	x3, x1, #6, #2
  41c8b8:	lsl	x1, x5, x1
  41c8bc:	ldr	x2, [x19, x3, lsl #3]
  41c8c0:	orr	x1, x2, x1
  41c8c4:	str	x1, [x19, x3, lsl #3]
  41c8c8:	add	x0, x0, #0x1
  41c8cc:	cmp	x0, #0x100
  41c8d0:	b.ne	41c8a8 <_obstack_memory_used@@Base+0x57e0>  // b.any
  41c8d4:	b	41c230 <_obstack_memory_used@@Base+0x5168>
  41c8d8:	stp	x29, x30, [sp, #-128]!
  41c8dc:	mov	x29, sp
  41c8e0:	stp	x19, x20, [sp, #16]
  41c8e4:	mov	x20, x3
  41c8e8:	stp	x21, x22, [sp, #32]
  41c8ec:	mov	x21, x0
  41c8f0:	mov	x22, x5
  41c8f4:	mov	x0, #0x20                  	// #32
  41c8f8:	stp	x23, x24, [sp, #48]
  41c8fc:	and	w23, w4, #0xff
  41c900:	stp	x25, x26, [sp, #64]
  41c904:	mov	x25, x1
  41c908:	mov	x26, x2
  41c90c:	mov	x1, #0x1                   	// #1
  41c910:	str	xzr, [sp, #88]
  41c914:	bl	402520 <calloc@plt>
  41c918:	cbz	x0, 41cb04 <_obstack_memory_used@@Base+0x5a3c>
  41c91c:	mov	x19, x0
  41c920:	mov	x1, #0x1                   	// #1
  41c924:	mov	x0, #0x50                  	// #80
  41c928:	bl	402520 <calloc@plt>
  41c92c:	mov	x24, x0
  41c930:	cbz	x0, 41cb2c <_obstack_memory_used@@Base+0x5a64>
  41c934:	ldrb	w7, [x0, #32]
  41c938:	mov	x5, x26
  41c93c:	mov	x0, x25
  41c940:	add	x4, sp, #0x58
  41c944:	add	x3, x24, #0x48
  41c948:	add	x2, x24, #0x18
  41c94c:	bfxil	w7, w23, #0, #1
  41c950:	mov	x1, x19
  41c954:	mov	x6, #0x0                   	// #0
  41c958:	strb	w7, [x24, #32]
  41c95c:	bl	41c150 <_obstack_memory_used@@Base+0x5088>
  41c960:	mov	w25, w0
  41c964:	cbnz	w0, 41cb44 <_obstack_memory_used@@Base+0x5a7c>
  41c968:	ldrb	w1, [x20]
  41c96c:	mov	x0, #0x1                   	// #1
  41c970:	cbz	w1, 41c994 <_obstack_memory_used@@Base+0x58cc>
  41c974:	nop
  41c978:	ubfx	x4, x1, #6, #2
  41c97c:	lsl	x3, x0, x1
  41c980:	ldrb	w1, [x20, #1]!
  41c984:	ldr	x2, [x19, x4, lsl #3]
  41c988:	orr	x2, x2, x3
  41c98c:	str	x2, [x19, x4, lsl #3]
  41c990:	cbnz	w1, 41c978 <_obstack_memory_used@@Base+0x58b0>
  41c994:	cbz	w23, 41c9b4 <_obstack_memory_used@@Base+0x58ec>
  41c998:	mov	x0, #0x0                   	// #0
  41c99c:	ldr	x1, [x19, x0, lsl #3]
  41c9a0:	mvn	x1, x1
  41c9a4:	str	x1, [x19, x0, lsl #3]
  41c9a8:	add	x0, x0, #0x1
  41c9ac:	cmp	x0, #0x4
  41c9b0:	b.ne	41c99c <_obstack_memory_used@@Base+0x58d4>  // b.any
  41c9b4:	ldr	w0, [x21, #180]
  41c9b8:	cmp	w0, #0x1
  41c9bc:	b.le	41c9e4 <_obstack_memory_used@@Base+0x591c>
  41c9c0:	ldr	x3, [x21, #120]
  41c9c4:	mov	x1, #0x0                   	// #0
  41c9c8:	ldr	x0, [x19, x1]
  41c9cc:	ldr	x2, [x3, x1]
  41c9d0:	and	x0, x0, x2
  41c9d4:	str	x0, [x19, x1]
  41c9d8:	add	x1, x1, #0x8
  41c9dc:	cmp	x1, #0x20
  41c9e0:	b.ne	41c9c8 <_obstack_memory_used@@Base+0x5900>  // b.any
  41c9e4:	mov	w5, #0x3                   	// #3
  41c9e8:	add	x23, x21, #0x70
  41c9ec:	add	x25, x21, #0x80
  41c9f0:	mov	x0, x23
  41c9f4:	mov	x1, x25
  41c9f8:	add	x4, sp, #0x60
  41c9fc:	mov	x3, #0x0                   	// #0
  41ca00:	mov	x2, #0x0                   	// #0
  41ca04:	str	x19, [sp, #96]
  41ca08:	strb	w5, [sp, #104]
  41ca0c:	stur	wzr, [sp, #105]
  41ca10:	sturh	wzr, [sp, #109]
  41ca14:	strb	wzr, [sp, #111]
  41ca18:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  41ca1c:	mov	x20, x0
  41ca20:	cbz	x0, 41cacc <_obstack_memory_used@@Base+0x5a04>
  41ca24:	ldr	w0, [x21, #180]
  41ca28:	cmp	w0, #0x1
  41ca2c:	b.le	41caa8 <_obstack_memory_used@@Base+0x59e0>
  41ca30:	ldrb	w0, [x21, #176]
  41ca34:	mov	w5, #0x6                   	// #6
  41ca38:	mov	x3, #0x0                   	// #0
  41ca3c:	add	x4, sp, #0x60
  41ca40:	orr	w0, w0, #0x2
  41ca44:	strb	w0, [x21, #176]
  41ca48:	mov	x1, x25
  41ca4c:	mov	x0, x23
  41ca50:	mov	x2, #0x0                   	// #0
  41ca54:	str	x24, [sp, #96]
  41ca58:	strb	w5, [sp, #104]
  41ca5c:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  41ca60:	mov	x3, x0
  41ca64:	cbz	x0, 41cacc <_obstack_memory_used@@Base+0x5a04>
  41ca68:	mov	w5, #0xa                   	// #10
  41ca6c:	stp	xzr, xzr, [sp, #112]
  41ca70:	mov	x2, x20
  41ca74:	mov	x1, x25
  41ca78:	mov	x0, x23
  41ca7c:	add	x4, sp, #0x70
  41ca80:	strb	w5, [sp, #120]
  41ca84:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  41ca88:	mov	x20, x0
  41ca8c:	mov	x0, x20
  41ca90:	ldp	x19, x20, [sp, #16]
  41ca94:	ldp	x21, x22, [sp, #32]
  41ca98:	ldp	x23, x24, [sp, #48]
  41ca9c:	ldp	x25, x26, [sp, #64]
  41caa0:	ldp	x29, x30, [sp], #128
  41caa4:	ret
  41caa8:	mov	x0, x24
  41caac:	bl	418480 <_obstack_memory_used@@Base+0x13b8>
  41cab0:	mov	x0, x20
  41cab4:	ldp	x19, x20, [sp, #16]
  41cab8:	ldp	x21, x22, [sp, #32]
  41cabc:	ldp	x23, x24, [sp, #48]
  41cac0:	ldp	x25, x26, [sp, #64]
  41cac4:	ldp	x29, x30, [sp], #128
  41cac8:	ret
  41cacc:	mov	x0, x19
  41cad0:	bl	4026b0 <free@plt>
  41cad4:	mov	x0, x24
  41cad8:	bl	418480 <_obstack_memory_used@@Base+0x13b8>
  41cadc:	mov	w0, #0xc                   	// #12
  41cae0:	str	w0, [x22]
  41cae4:	mov	x20, #0x0                   	// #0
  41cae8:	mov	x0, x20
  41caec:	ldp	x19, x20, [sp, #16]
  41caf0:	ldp	x21, x22, [sp, #32]
  41caf4:	ldp	x23, x24, [sp, #48]
  41caf8:	ldp	x25, x26, [sp, #64]
  41cafc:	ldp	x29, x30, [sp], #128
  41cb00:	ret
  41cb04:	mov	w0, #0xc                   	// #12
  41cb08:	str	w0, [x22]
  41cb0c:	mov	x20, #0x0                   	// #0
  41cb10:	mov	x0, x20
  41cb14:	ldp	x19, x20, [sp, #16]
  41cb18:	ldp	x21, x22, [sp, #32]
  41cb1c:	ldp	x23, x24, [sp, #48]
  41cb20:	ldp	x25, x26, [sp, #64]
  41cb24:	ldp	x29, x30, [sp], #128
  41cb28:	ret
  41cb2c:	mov	x0, x19
  41cb30:	bl	4026b0 <free@plt>
  41cb34:	mov	w0, #0xc                   	// #12
  41cb38:	mov	x20, #0x0                   	// #0
  41cb3c:	str	w0, [x22]
  41cb40:	b	41ca8c <_obstack_memory_used@@Base+0x59c4>
  41cb44:	mov	x0, x19
  41cb48:	bl	4026b0 <free@plt>
  41cb4c:	mov	x0, x24
  41cb50:	mov	x20, #0x0                   	// #0
  41cb54:	bl	418480 <_obstack_memory_used@@Base+0x13b8>
  41cb58:	str	w25, [x22]
  41cb5c:	b	41ca8c <_obstack_memory_used@@Base+0x59c4>
  41cb60:	stp	x29, x30, [sp, #-400]!
  41cb64:	mov	x29, sp
  41cb68:	stp	x21, x22, [sp, #32]
  41cb6c:	ldr	x22, [x0]
  41cb70:	stp	x25, x26, [sp, #64]
  41cb74:	mov	w26, #0x0                   	// #0
  41cb78:	stp	x27, x28, [sp, #80]
  41cb7c:	mov	x28, x3
  41cb80:	stp	x0, x2, [sp, #104]
  41cb84:	ldr	w0, [x22, #180]
  41cb88:	str	x1, [sp, #120]
  41cb8c:	cmp	w0, #0x1
  41cb90:	b.ne	41cba0 <_obstack_memory_used@@Base+0x5ad8>  // b.any
  41cb94:	ldr	x0, [sp, #104]
  41cb98:	ldr	x6, [x0, #24]
  41cb9c:	ubfx	w26, w6, #22, #1
  41cba0:	ldr	x0, [sp, #120]
  41cba4:	mov	x21, #0x0                   	// #0
  41cba8:	ldr	x2, [x0]
  41cbac:	cmp	x2, #0x0
  41cbb0:	b.le	41cc74 <_obstack_memory_used@@Base+0x5bac>
  41cbb4:	mov	w27, #0x1                   	// #1
  41cbb8:	stp	x19, x20, [sp, #16]
  41cbbc:	stp	x23, x24, [sp, #48]
  41cbc0:	add	x23, sp, #0x90
  41cbc4:	b	41cbf8 <_obstack_memory_used@@Base+0x5b30>
  41cbc8:	cmp	w19, #0x3
  41cbcc:	b.eq	41cda8 <_obstack_memory_used@@Base+0x5ce0>  // b.none
  41cbd0:	cmp	w19, #0x6
  41cbd4:	b.eq	41cc88 <_obstack_memory_used@@Base+0x5bc0>  // b.none
  41cbd8:	and	w0, w19, #0xfffffffd
  41cbdc:	cmp	w0, #0x5
  41cbe0:	b.eq	41cee4 <_obstack_memory_used@@Base+0x5e1c>  // b.none
  41cbe4:	cmp	w19, #0x2
  41cbe8:	b.eq	41cf08 <_obstack_memory_used@@Base+0x5e40>  // b.none
  41cbec:	add	x21, x21, #0x1
  41cbf0:	cmp	x21, x2
  41cbf4:	b.ge	41cc6c <_obstack_memory_used@@Base+0x5ba4>  // b.tcont
  41cbf8:	ldr	x0, [sp, #112]
  41cbfc:	ldr	x1, [x0]
  41cc00:	ldr	x0, [x22]
  41cc04:	ldr	x20, [x1, x21, lsl #3]
  41cc08:	lsl	x24, x20, #4
  41cc0c:	add	x1, x0, x24
  41cc10:	ldrb	w19, [x1, #8]
  41cc14:	cmp	w19, #0x1
  41cc18:	b.ne	41cbc8 <_obstack_memory_used@@Base+0x5b00>  // b.any
  41cc1c:	ldrb	w25, [x0, x24]
  41cc20:	and	x0, x25, #0xff
  41cc24:	strb	w19, [x28, x0]
  41cc28:	cbz	w26, 41cc3c <_obstack_memory_used@@Base+0x5b74>
  41cc2c:	bl	4023c0 <__ctype_tolower_loc@plt>
  41cc30:	ldr	x0, [x0]
  41cc34:	ldrsw	x0, [x0, x25, lsl #2]
  41cc38:	strb	w19, [x28, x0]
  41cc3c:	ldr	x0, [sp, #104]
  41cc40:	ldr	x0, [x0, #24]
  41cc44:	tbz	w0, #22, 41cc58 <_obstack_memory_used@@Base+0x5b90>
  41cc48:	ldr	w0, [x22, #180]
  41cc4c:	cmp	w0, #0x1
  41cc50:	b.gt	41ce24 <_obstack_memory_used@@Base+0x5d5c>
  41cc54:	nop
  41cc58:	ldr	x0, [sp, #120]
  41cc5c:	add	x21, x21, #0x1
  41cc60:	ldr	x2, [x0]
  41cc64:	cmp	x21, x2
  41cc68:	b.lt	41cbf8 <_obstack_memory_used@@Base+0x5b30>  // b.tstop
  41cc6c:	ldp	x19, x20, [sp, #16]
  41cc70:	ldp	x23, x24, [sp, #48]
  41cc74:	ldp	x21, x22, [sp, #32]
  41cc78:	ldp	x25, x26, [sp, #64]
  41cc7c:	ldp	x27, x28, [sp, #80]
  41cc80:	ldp	x29, x30, [sp], #400
  41cc84:	ret
  41cc88:	ldr	w0, [x22, #180]
  41cc8c:	ldr	x24, [x1]
  41cc90:	cmp	w0, #0x1
  41cc94:	b.le	41ccb0 <_obstack_memory_used@@Base+0x5be8>
  41cc98:	ldr	x0, [x24, #72]
  41cc9c:	cbnz	x0, 41cd60 <_obstack_memory_used@@Base+0x5c98>
  41cca0:	ldrb	w0, [x24, #32]
  41cca4:	tbnz	w0, #0, 41cd60 <_obstack_memory_used@@Base+0x5c98>
  41cca8:	ldr	x0, [x24, #64]
  41ccac:	cbnz	x0, 41cd60 <_obstack_memory_used@@Base+0x5c98>
  41ccb0:	ldr	x0, [x24, #40]
  41ccb4:	mov	x20, #0x0                   	// #0
  41ccb8:	cmp	x0, #0x0
  41ccbc:	b.gt	41ccd0 <_obstack_memory_used@@Base+0x5c08>
  41ccc0:	b	41cbec <_obstack_memory_used@@Base+0x5b24>
  41ccc4:	ldr	x0, [x24, #40]
  41ccc8:	cmp	x20, x0
  41cccc:	b.ge	41cc58 <_obstack_memory_used@@Base+0x5b90>  // b.tcont
  41ccd0:	str	xzr, [sp, #136]
  41ccd4:	add	x2, sp, #0x88
  41ccd8:	mov	x0, x23
  41ccdc:	lsl	x19, x20, #2
  41cce0:	ldr	x1, [x24]
  41cce4:	ldr	w1, [x1, x20, lsl #2]
  41cce8:	add	x20, x20, #0x1
  41ccec:	bl	402920 <wcrtomb@plt>
  41ccf0:	cmn	x0, #0x1
  41ccf4:	b.eq	41cd18 <_obstack_memory_used@@Base+0x5c50>  // b.none
  41ccf8:	ldrb	w25, [sp, #144]
  41ccfc:	and	x0, x25, #0xff
  41cd00:	strb	w27, [x28, x0]
  41cd04:	cbz	w26, 41cd18 <_obstack_memory_used@@Base+0x5c50>
  41cd08:	bl	4023c0 <__ctype_tolower_loc@plt>
  41cd0c:	ldr	x0, [x0]
  41cd10:	ldrsw	x0, [x0, x25, lsl #2]
  41cd14:	strb	w27, [x28, x0]
  41cd18:	ldr	x0, [sp, #104]
  41cd1c:	ldr	x0, [x0, #24]
  41cd20:	tbz	w0, #22, 41ccc4 <_obstack_memory_used@@Base+0x5bfc>
  41cd24:	ldr	w0, [x22, #180]
  41cd28:	cmp	w0, #0x1
  41cd2c:	b.le	41ccc4 <_obstack_memory_used@@Base+0x5bfc>
  41cd30:	ldr	x0, [x24]
  41cd34:	ldr	w0, [x0, x19]
  41cd38:	bl	4028c0 <towlower@plt>
  41cd3c:	mov	w1, w0
  41cd40:	add	x2, sp, #0x88
  41cd44:	mov	x0, x23
  41cd48:	bl	402920 <wcrtomb@plt>
  41cd4c:	cmn	x0, #0x1
  41cd50:	b.eq	41ccc4 <_obstack_memory_used@@Base+0x5bfc>  // b.none
  41cd54:	ldrb	w0, [sp, #144]
  41cd58:	strb	w27, [x28, x0]
  41cd5c:	b	41ccc4 <_obstack_memory_used@@Base+0x5bfc>
  41cd60:	strb	wzr, [sp, #136]
  41cd64:	nop
  41cd68:	mov	x3, x23
  41cd6c:	add	x1, sp, #0x88
  41cd70:	mov	x2, #0x1                   	// #1
  41cd74:	mov	x0, #0x0                   	// #0
  41cd78:	str	xzr, [x23]
  41cd7c:	bl	416cf8 <wcrtomb@plt+0x143d8>
  41cd80:	cmn	x0, #0x2
  41cd84:	b.ne	41cd90 <_obstack_memory_used@@Base+0x5cc8>  // b.any
  41cd88:	ldrb	w0, [sp, #136]
  41cd8c:	strb	w27, [x28, x0]
  41cd90:	ldrb	w0, [sp, #136]
  41cd94:	add	w0, w0, #0x1
  41cd98:	and	w0, w0, #0xff
  41cd9c:	strb	w0, [sp, #136]
  41cda0:	cbnz	w0, 41cd68 <_obstack_memory_used@@Base+0x5ca0>
  41cda4:	b	41cc58 <_obstack_memory_used@@Base+0x5b90>
  41cda8:	str	xzr, [sp, #96]
  41cdac:	ldr	x0, [x1]
  41cdb0:	mov	w19, #0x0                   	// #0
  41cdb4:	ldr	x1, [sp, #96]
  41cdb8:	ldr	x25, [x0, x1]
  41cdbc:	lsl	x20, x1, #3
  41cdc0:	lsr	x0, x25, x19
  41cdc4:	add	w19, w19, #0x1
  41cdc8:	tbz	w0, #0, 41cdf8 <_obstack_memory_used@@Base+0x5d30>
  41cdcc:	strb	w27, [x28, x20]
  41cdd0:	add	w0, w20, #0x80
  41cdd4:	add	x2, x28, x20
  41cdd8:	cmp	w0, #0x17f
  41cddc:	cbz	w26, 41cdf8 <_obstack_memory_used@@Base+0x5d30>
  41cde0:	b.hi	41cdf4 <_obstack_memory_used@@Base+0x5d2c>  // b.pmore
  41cde4:	bl	4023c0 <__ctype_tolower_loc@plt>
  41cde8:	ldr	x0, [x0]
  41cdec:	ldrsw	x2, [x0, x20, lsl #2]
  41cdf0:	add	x2, x28, x2
  41cdf4:	strb	w27, [x2]
  41cdf8:	add	x20, x20, #0x1
  41cdfc:	cmp	w19, #0x40
  41ce00:	b.ne	41cdc0 <_obstack_memory_used@@Base+0x5cf8>  // b.any
  41ce04:	ldr	x0, [sp, #96]
  41ce08:	add	x0, x0, #0x8
  41ce0c:	str	x0, [sp, #96]
  41ce10:	cmp	x0, #0x20
  41ce14:	b.eq	41cc58 <_obstack_memory_used@@Base+0x5b90>  // b.none
  41ce18:	ldr	x0, [x22]
  41ce1c:	add	x1, x0, x24
  41ce20:	b	41cdac <_obstack_memory_used@@Base+0x5ce4>
  41ce24:	ldr	x2, [x22]
  41ce28:	add	x0, x20, #0x1
  41ce2c:	add	x7, x23, #0x1
  41ce30:	ldrb	w1, [x2, x24]
  41ce34:	strb	w1, [sp, #144]
  41ce38:	ldr	x1, [x22, #16]
  41ce3c:	cmp	x1, x0
  41ce40:	b.ls	41cf44 <_obstack_memory_used@@Base+0x5e7c>  // b.plast
  41ce44:	mov	w9, #0xff                  	// #255
  41ce48:	mov	w8, #0x1                   	// #1
  41ce4c:	movk	w9, #0x20, lsl #16
  41ce50:	movk	w8, #0x20, lsl #16
  41ce54:	b	41ce70 <_obstack_memory_used@@Base+0x5da8>
  41ce58:	ldrb	w1, [x2, x3]
  41ce5c:	strb	w1, [x7], #1
  41ce60:	ldr	x1, [x22, #16]
  41ce64:	cmp	x1, x0
  41ce68:	b.ls	41ce8c <_obstack_memory_used@@Base+0x5dc4>  // b.plast
  41ce6c:	ldr	x2, [x22]
  41ce70:	lsl	x3, x0, #4
  41ce74:	add	x1, x2, x3
  41ce78:	add	x0, x0, #0x1
  41ce7c:	ldr	w1, [x1, #8]
  41ce80:	and	w1, w1, w9
  41ce84:	cmp	w1, w8
  41ce88:	b.eq	41ce58 <_obstack_memory_used@@Base+0x5d90>  // b.none
  41ce8c:	sub	x19, x7, x23
  41ce90:	add	x3, sp, #0x88
  41ce94:	mov	x2, x19
  41ce98:	mov	x1, x23
  41ce9c:	add	x0, sp, #0x84
  41cea0:	str	xzr, [sp, #136]
  41cea4:	bl	416cf8 <wcrtomb@plt+0x143d8>
  41cea8:	cmp	x0, x19
  41ceac:	b.ne	41cc58 <_obstack_memory_used@@Base+0x5b90>  // b.any
  41ceb0:	ldr	w0, [sp, #132]
  41ceb4:	bl	4028c0 <towlower@plt>
  41ceb8:	mov	w1, w0
  41cebc:	add	x2, sp, #0x88
  41cec0:	mov	x0, x23
  41cec4:	bl	402920 <wcrtomb@plt>
  41cec8:	cmn	x0, #0x1
  41cecc:	b.eq	41cc58 <_obstack_memory_used@@Base+0x5b90>  // b.none
  41ced0:	ldrb	w0, [sp, #144]
  41ced4:	strb	w27, [x28, x0]
  41ced8:	ldr	x0, [sp, #120]
  41cedc:	ldr	x2, [x0]
  41cee0:	b	41cbec <_obstack_memory_used@@Base+0x5b24>
  41cee4:	mov	x0, x28
  41cee8:	mov	x2, #0x100                 	// #256
  41ceec:	mov	w1, #0x1                   	// #1
  41cef0:	bl	402510 <memset@plt>
  41cef4:	cmp	w19, #0x2
  41cef8:	b.eq	41cf18 <_obstack_memory_used@@Base+0x5e50>  // b.none
  41cefc:	ldp	x19, x20, [sp, #16]
  41cf00:	ldp	x23, x24, [sp, #48]
  41cf04:	b	41cc74 <_obstack_memory_used@@Base+0x5bac>
  41cf08:	mov	x0, x28
  41cf0c:	mov	x2, #0x100                 	// #256
  41cf10:	mov	w1, #0x1                   	// #1
  41cf14:	bl	402510 <memset@plt>
  41cf18:	ldr	x1, [sp, #104]
  41cf1c:	ldp	x19, x20, [sp, #16]
  41cf20:	ldrb	w0, [x1, #56]
  41cf24:	ldp	x23, x24, [sp, #48]
  41cf28:	orr	w0, w0, #0x1
  41cf2c:	strb	w0, [x1, #56]
  41cf30:	ldp	x21, x22, [sp, #32]
  41cf34:	ldp	x25, x26, [sp, #64]
  41cf38:	ldp	x27, x28, [sp, #80]
  41cf3c:	ldp	x29, x30, [sp], #400
  41cf40:	ret
  41cf44:	mov	x19, #0x1                   	// #1
  41cf48:	b	41ce90 <_obstack_memory_used@@Base+0x5dc8>
  41cf4c:	nop
  41cf50:	lsl	x7, x2, #4
  41cf54:	stp	x29, x30, [sp, #-48]!
  41cf58:	mov	x8, x0
  41cf5c:	add	x0, x0, x7
  41cf60:	mov	x29, sp
  41cf64:	mov	x5, x3
  41cf68:	stp	x19, x20, [sp, #16]
  41cf6c:	mov	x6, x4
  41cf70:	ldrb	w10, [x0, #8]
  41cf74:	cmp	w10, #0x7
  41cf78:	b.eq	41d0a8 <_obstack_memory_used@@Base+0x5fe0>  // b.none
  41cf7c:	ldr	w0, [x3, #144]
  41cf80:	cmp	w0, #0x1
  41cf84:	b.eq	41cfb0 <_obstack_memory_used@@Base+0x5ee8>  // b.none
  41cf88:	mov	x9, x1
  41cf8c:	mov	x0, x3
  41cf90:	mov	x1, x4
  41cf94:	bl	418cf8 <_obstack_memory_used@@Base+0x1c30>
  41cf98:	mov	w19, w0
  41cf9c:	cmp	w10, #0x5
  41cfa0:	b.eq	41cfc4 <_obstack_memory_used@@Base+0x5efc>  // b.none
  41cfa4:	cmp	w10, #0x6
  41cfa8:	ccmp	w0, #0x1, #0x4, eq  // eq = none
  41cfac:	b.ne	41cff8 <_obstack_memory_used@@Base+0x5f30>  // b.any
  41cfb0:	mov	w19, #0x0                   	// #0
  41cfb4:	mov	w0, w19
  41cfb8:	ldp	x19, x20, [sp, #16]
  41cfbc:	ldp	x29, x30, [sp], #48
  41cfc0:	ret
  41cfc4:	cmp	w0, #0x1
  41cfc8:	b.eq	41cfb0 <_obstack_memory_used@@Base+0x5ee8>  // b.none
  41cfcc:	ldr	x0, [x9]
  41cfd0:	tbnz	w0, #6, 41cfe4 <_obstack_memory_used@@Base+0x5f1c>
  41cfd4:	ldr	x1, [x5, #8]
  41cfd8:	ldrb	w1, [x1, x6]
  41cfdc:	cmp	w1, #0xa
  41cfe0:	b.eq	41cfb0 <_obstack_memory_used@@Base+0x5ee8>  // b.none
  41cfe4:	tbz	w0, #7, 41cfb4 <_obstack_memory_used@@Base+0x5eec>
  41cfe8:	ldr	x0, [x5, #8]
  41cfec:	ldrb	w0, [x0, x6]
  41cff0:	cbz	w0, 41cfb0 <_obstack_memory_used@@Base+0x5ee8>
  41cff4:	b	41cfb4 <_obstack_memory_used@@Base+0x5eec>
  41cff8:	stp	x21, x22, [sp, #32]
  41cffc:	ldr	x22, [x8, x7]
  41d000:	ldr	x4, [x22, #64]
  41d004:	ldr	x2, [x22, #40]
  41d008:	cbnz	x4, 41d018 <_obstack_memory_used@@Base+0x5f50>
  41d00c:	ldr	x0, [x22, #72]
  41d010:	orr	x0, x2, x0
  41d014:	cbz	x0, 41d098 <_obstack_memory_used@@Base+0x5fd0>
  41d018:	ldr	x0, [x5, #16]
  41d01c:	cmp	x2, #0x0
  41d020:	ldr	w20, [x0, x6, lsl #2]
  41d024:	b.le	41d130 <_obstack_memory_used@@Base+0x6068>
  41d028:	mov	x1, #0x0                   	// #0
  41d02c:	ldr	x3, [x22]
  41d030:	b	41d03c <_obstack_memory_used@@Base+0x5f74>
  41d034:	cmp	x1, x2
  41d038:	b.eq	41d130 <_obstack_memory_used@@Base+0x6068>  // b.none
  41d03c:	ldr	w0, [x3, x1, lsl #2]
  41d040:	add	x1, x1, #0x1
  41d044:	cmp	w20, w0
  41d048:	b.ne	41d034 <_obstack_memory_used@@Base+0x5f6c>  // b.any
  41d04c:	ldrb	w0, [x22, #32]
  41d050:	tbz	w0, #0, 41d0a0 <_obstack_memory_used@@Base+0x5fd8>
  41d054:	ldp	x21, x22, [sp, #32]
  41d058:	b	41cfb0 <_obstack_memory_used@@Base+0x5ee8>
  41d05c:	ldr	x4, [x22, #64]
  41d060:	cmp	x4, #0x0
  41d064:	b.le	41d098 <_obstack_memory_used@@Base+0x5fd0>
  41d068:	ldr	x2, [x22, #8]
  41d06c:	mov	x0, #0x0                   	// #0
  41d070:	ldr	w1, [x2, x0, lsl #2]
  41d074:	cmp	w20, w1
  41d078:	b.cc	41d08c <_obstack_memory_used@@Base+0x5fc4>  // b.lo, b.ul, b.last
  41d07c:	ldr	x1, [x22, #16]
  41d080:	ldr	w1, [x1, x0, lsl #2]
  41d084:	cmp	w20, w1
  41d088:	b.ls	41d04c <_obstack_memory_used@@Base+0x5f84>  // b.plast
  41d08c:	add	x0, x0, #0x1
  41d090:	cmp	x0, x4
  41d094:	b.ne	41d070 <_obstack_memory_used@@Base+0x5fa8>  // b.any
  41d098:	ldrb	w0, [x22, #32]
  41d09c:	tbz	w0, #0, 41d054 <_obstack_memory_used@@Base+0x5f8c>
  41d0a0:	ldp	x21, x22, [sp, #32]
  41d0a4:	b	41cfb4 <_obstack_memory_used@@Base+0x5eec>
  41d0a8:	ldr	x0, [x3, #8]
  41d0ac:	add	x1, x0, x4
  41d0b0:	ldrb	w0, [x0, x4]
  41d0b4:	cmp	w0, #0xc1
  41d0b8:	b.ls	41cfb0 <_obstack_memory_used@@Base+0x5ee8>  // b.plast
  41d0bc:	ldr	x2, [x5, #88]
  41d0c0:	add	x3, x4, #0x1
  41d0c4:	cmp	x3, x2
  41d0c8:	b.ge	41cfb0 <_obstack_memory_used@@Base+0x5ee8>  // b.tcont
  41d0cc:	ldrb	w3, [x1, #1]
  41d0d0:	cmp	w0, #0xdf
  41d0d4:	b.ls	41d190 <_obstack_memory_used@@Base+0x60c8>  // b.plast
  41d0d8:	cmp	w0, #0xef
  41d0dc:	b.hi	41d16c <_obstack_memory_used@@Base+0x60a4>  // b.pmore
  41d0e0:	cmp	w0, #0xe0
  41d0e4:	mov	w0, #0x9f                  	// #159
  41d0e8:	ccmp	w3, w0, #0x2, eq  // eq = none
  41d0ec:	b.ls	41cfb0 <_obstack_memory_used@@Base+0x5ee8>  // b.plast
  41d0f0:	mov	x3, #0x3                   	// #3
  41d0f4:	mov	w19, w3
  41d0f8:	add	x6, x6, x3
  41d0fc:	cmp	x2, x6
  41d100:	b.lt	41cfb0 <_obstack_memory_used@@Base+0x5ee8>  // b.tstop
  41d104:	mov	x2, #0x1                   	// #1
  41d108:	b	41d114 <_obstack_memory_used@@Base+0x604c>
  41d10c:	cmp	x2, x3
  41d110:	b.eq	41cfb4 <_obstack_memory_used@@Base+0x5eec>  // b.none
  41d114:	ldrb	w0, [x1, x2]
  41d118:	add	x2, x2, #0x1
  41d11c:	sub	w0, w0, #0x80
  41d120:	and	w0, w0, #0xff
  41d124:	cmp	w0, #0x3f
  41d128:	b.ls	41d10c <_obstack_memory_used@@Base+0x6044>  // b.plast
  41d12c:	b	41cfb0 <_obstack_memory_used@@Base+0x5ee8>
  41d130:	ldr	x0, [x22, #72]
  41d134:	cmp	x0, #0x0
  41d138:	b.le	41d060 <_obstack_memory_used@@Base+0x5f98>
  41d13c:	mov	x21, #0x0                   	// #0
  41d140:	b	41d150 <_obstack_memory_used@@Base+0x6088>
  41d144:	ldr	x0, [x22, #72]
  41d148:	cmp	x21, x0
  41d14c:	b.ge	41d05c <_obstack_memory_used@@Base+0x5f94>  // b.tcont
  41d150:	ldr	x1, [x22, #24]
  41d154:	mov	w0, w20
  41d158:	ldr	x1, [x1, x21, lsl #3]
  41d15c:	add	x21, x21, #0x1
  41d160:	bl	402430 <iswctype@plt>
  41d164:	cbz	w0, 41d144 <_obstack_memory_used@@Base+0x607c>
  41d168:	b	41d04c <_obstack_memory_used@@Base+0x5f84>
  41d16c:	cmp	w0, #0xf7
  41d170:	b.hi	41d1a8 <_obstack_memory_used@@Base+0x60e0>  // b.pmore
  41d174:	cmp	w0, #0xf0
  41d178:	mov	w0, #0x8f                  	// #143
  41d17c:	ccmp	w3, w0, #0x2, eq  // eq = none
  41d180:	b.ls	41cfb0 <_obstack_memory_used@@Base+0x5ee8>  // b.plast
  41d184:	mov	x3, #0x4                   	// #4
  41d188:	mov	w19, w3
  41d18c:	b	41d0f8 <_obstack_memory_used@@Base+0x6030>
  41d190:	sub	w0, w3, #0x80
  41d194:	mov	w19, #0x2                   	// #2
  41d198:	and	w0, w0, #0xff
  41d19c:	cmp	w0, #0x3f
  41d1a0:	b.ls	41cfb4 <_obstack_memory_used@@Base+0x5eec>  // b.plast
  41d1a4:	b	41cfb0 <_obstack_memory_used@@Base+0x5ee8>
  41d1a8:	cmp	w0, #0xfb
  41d1ac:	b.hi	41d1cc <_obstack_memory_used@@Base+0x6104>  // b.pmore
  41d1b0:	cmp	w0, #0xf8
  41d1b4:	mov	w0, #0x87                  	// #135
  41d1b8:	ccmp	w3, w0, #0x2, eq  // eq = none
  41d1bc:	b.ls	41cfb0 <_obstack_memory_used@@Base+0x5ee8>  // b.plast
  41d1c0:	mov	x3, #0x5                   	// #5
  41d1c4:	mov	w19, w3
  41d1c8:	b	41d0f8 <_obstack_memory_used@@Base+0x6030>
  41d1cc:	cmp	w0, #0xfd
  41d1d0:	b.hi	41cfb0 <_obstack_memory_used@@Base+0x5ee8>  // b.pmore
  41d1d4:	cmp	w0, #0xfc
  41d1d8:	mov	w0, #0x83                  	// #131
  41d1dc:	ccmp	w3, w0, #0x2, eq  // eq = none
  41d1e0:	b.ls	41cfb0 <_obstack_memory_used@@Base+0x5ee8>  // b.plast
  41d1e4:	mov	x3, #0x6                   	// #6
  41d1e8:	mov	w19, w3
  41d1ec:	b	41d0f8 <_obstack_memory_used@@Base+0x6030>
  41d1f0:	stp	x29, x30, [sp, #-240]!
  41d1f4:	mov	x29, sp
  41d1f8:	stp	x27, x28, [sp, #80]
  41d1fc:	ldr	x27, [x0, #152]
  41d200:	stp	x19, x20, [sp, #16]
  41d204:	mov	x20, x2
  41d208:	stp	x21, x22, [sp, #32]
  41d20c:	mov	x19, x3
  41d210:	str	x1, [sp, #144]
  41d214:	ldr	x22, [x1, #8]
  41d218:	lsl	x1, x2, #4
  41d21c:	ldr	x2, [x27]
  41d220:	stp	x25, x26, [sp, #64]
  41d224:	mov	x26, x0
  41d228:	ldrsw	x0, [x0, #224]
  41d22c:	ldr	x1, [x2, x1]
  41d230:	stp	x23, x24, [sp, #48]
  41d234:	add	x0, x0, x5
  41d238:	str	x5, [sp, #120]
  41d23c:	cmp	x0, x22
  41d240:	str	x1, [sp, #128]
  41d244:	str	w6, [sp, #140]
  41d248:	str	x4, [sp, #168]
  41d24c:	str	wzr, [sp, #184]
  41d250:	b.ge	41d68c <_obstack_memory_used@@Base+0x65c4>  // b.tcont
  41d254:	ldr	x0, [sp, #144]
  41d258:	ldr	w2, [x26, #160]
  41d25c:	ldr	x21, [x0]
  41d260:	ldr	x22, [x0, #16]
  41d264:	ldr	x0, [x26, #72]
  41d268:	str	x0, [sp, #160]
  41d26c:	ldr	x0, [x26, #184]
  41d270:	str	x0, [sp, #152]
  41d274:	cbz	x21, 41d628 <_obstack_memory_used@@Base+0x6560>
  41d278:	str	x21, [x26, #72]
  41d27c:	sub	x1, x21, #0x1
  41d280:	str	x22, [x26, #184]
  41d284:	mov	x0, x26
  41d288:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41d28c:	mov	w23, w0
  41d290:	cmp	x21, x19
  41d294:	b.eq	41d640 <_obstack_memory_used@@Base+0x6578>  // b.none
  41d298:	ldr	x19, [x22, x21, lsl #3]
  41d29c:	cbz	x19, 41d2a8 <_obstack_memory_used@@Base+0x61e0>
  41d2a0:	ldrb	w0, [x19, #104]
  41d2a4:	tbnz	w0, #6, 41d4d0 <_obstack_memory_used@@Base+0x6408>
  41d2a8:	stp	xzr, xzr, [sp, #192]
  41d2ac:	str	xzr, [sp, #208]
  41d2b0:	ldr	x0, [sp, #120]
  41d2b4:	cmp	x21, x0
  41d2b8:	b.ge	41d438 <_obstack_memory_used@@Base+0x6370>  // b.tcont
  41d2bc:	add	x22, x21, #0x1
  41d2c0:	str	xzr, [sp, #96]
  41d2c4:	ldr	x1, [sp, #96]
  41d2c8:	sub	x21, x22, #0x1
  41d2cc:	ldrsw	x0, [x26, #224]
  41d2d0:	cmp	x1, x0
  41d2d4:	b.gt	41d438 <_obstack_memory_used@@Base+0x6370>
  41d2d8:	ldr	x0, [x26, #184]
  41d2dc:	lsl	x1, x22, #3
  41d2e0:	str	x1, [sp, #104]
  41d2e4:	str	xzr, [sp, #200]
  41d2e8:	ldr	x1, [x0, x22, lsl #3]
  41d2ec:	cbz	x1, 41d5f8 <_obstack_memory_used@@Base+0x6530>
  41d2f0:	add	x1, x1, #0x8
  41d2f4:	add	x0, sp, #0xc0
  41d2f8:	bl	419630 <_obstack_memory_used@@Base+0x2568>
  41d2fc:	str	w0, [sp, #184]
  41d300:	cbnz	w0, 41d4a8 <_obstack_memory_used@@Base+0x63e0>
  41d304:	cbz	x19, 41d3a0 <_obstack_memory_used@@Base+0x62d8>
  41d308:	ldr	x0, [x19, #40]
  41d30c:	str	wzr, [sp, #188]
  41d310:	stp	xzr, xzr, [sp, #216]
  41d314:	add	x19, x19, #0x20
  41d318:	cmp	x0, #0x0
  41d31c:	str	xzr, [sp, #232]
  41d320:	ldr	x23, [x26, #152]
  41d324:	b.le	41d710 <_obstack_memory_used@@Base+0x6648>
  41d328:	add	x0, x23, #0xd8
  41d32c:	mov	x24, #0x0                   	// #0
  41d330:	str	x0, [sp, #112]
  41d334:	nop
  41d338:	ldr	x1, [x19, #16]
  41d33c:	ldr	x0, [x23]
  41d340:	ldr	x28, [x1, x24, lsl #3]
  41d344:	lsl	x20, x28, #4
  41d348:	add	x1, x0, x20
  41d34c:	ldrb	w2, [x1, #10]
  41d350:	tbnz	w2, #4, 41d540 <_obstack_memory_used@@Base+0x6478>
  41d354:	mov	x2, x21
  41d358:	mov	x0, x26
  41d35c:	bl	41b5d0 <_obstack_memory_used@@Base+0x4508>
  41d360:	tst	w0, #0xff
  41d364:	b.eq	41d384 <_obstack_memory_used@@Base+0x62bc>  // b.none
  41d368:	lsl	x25, x28, #3
  41d36c:	ldr	x1, [x23, #24]
  41d370:	add	x0, sp, #0xc0
  41d374:	ldr	x1, [x1, x25]
  41d378:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  41d37c:	tst	w0, #0xff
  41d380:	b.eq	41d498 <_obstack_memory_used@@Base+0x63d0>  // b.none
  41d384:	ldr	x0, [x19, #8]
  41d388:	add	x24, x24, #0x1
  41d38c:	cmp	x24, x0
  41d390:	b.lt	41d338 <_obstack_memory_used@@Base+0x6270>  // b.tstop
  41d394:	ldr	x0, [sp, #232]
  41d398:	bl	4026b0 <free@plt>
  41d39c:	str	wzr, [sp, #184]
  41d3a0:	ldr	x0, [sp, #200]
  41d3a4:	mov	x20, x22
  41d3a8:	cbz	x0, 41d3e8 <_obstack_memory_used@@Base+0x6320>
  41d3ac:	ldr	w3, [sp, #140]
  41d3b0:	add	x1, sp, #0xc0
  41d3b4:	ldr	x2, [sp, #128]
  41d3b8:	mov	x0, x27
  41d3bc:	bl	419a50 <_obstack_memory_used@@Base+0x2988>
  41d3c0:	str	w0, [sp, #184]
  41d3c4:	cbnz	w0, 41d4a8 <_obstack_memory_used@@Base+0x63e0>
  41d3c8:	ldr	w4, [sp, #140]
  41d3cc:	mov	x2, x22
  41d3d0:	ldr	x3, [sp, #128]
  41d3d4:	add	x1, sp, #0xc0
  41d3d8:	mov	x0, x26
  41d3dc:	bl	41a388 <_obstack_memory_used@@Base+0x32c0>
  41d3e0:	str	w0, [sp, #184]
  41d3e4:	cbnz	w0, 41d4a8 <_obstack_memory_used@@Base+0x63e0>
  41d3e8:	ldr	w2, [x26, #160]
  41d3ec:	mov	x1, x21
  41d3f0:	mov	x0, x26
  41d3f4:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41d3f8:	mov	w3, w0
  41d3fc:	add	x2, sp, #0xc0
  41d400:	mov	x1, x27
  41d404:	add	x0, sp, #0xb8
  41d408:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  41d40c:	mov	x19, x0
  41d410:	cbz	x0, 41d604 <_obstack_memory_used@@Base+0x653c>
  41d414:	ldr	x1, [sp, #104]
  41d418:	str	xzr, [sp, #96]
  41d41c:	ldr	x0, [x26, #184]
  41d420:	str	x19, [x0, x1]
  41d424:	ldr	x0, [sp, #120]
  41d428:	add	x22, x22, #0x1
  41d42c:	cmp	x20, x0
  41d430:	b.lt	41d2c4 <_obstack_memory_used@@Base+0x61fc>  // b.tstop
  41d434:	mov	x21, x20
  41d438:	ldr	x0, [sp, #208]
  41d43c:	bl	4026b0 <free@plt>
  41d440:	ldr	x1, [sp, #120]
  41d444:	ldr	x0, [x26, #184]
  41d448:	ldr	x0, [x0, x1, lsl #3]
  41d44c:	cbz	x0, 41d6f0 <_obstack_memory_used@@Base+0x6628>
  41d450:	ldp	x1, x3, [sp, #144]
  41d454:	str	x21, [x1]
  41d458:	ldr	x1, [sp, #160]
  41d45c:	str	x1, [x26, #72]
  41d460:	add	x1, x0, #0x18
  41d464:	str	x3, [x26, #184]
  41d468:	ldr	x0, [x0, #16]
  41d46c:	ldr	x2, [sp, #168]
  41d470:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41d474:	cmp	x0, #0x0
  41d478:	cset	w0, eq  // eq = none
  41d47c:	ldp	x19, x20, [sp, #16]
  41d480:	ldp	x21, x22, [sp, #32]
  41d484:	ldp	x23, x24, [sp, #48]
  41d488:	ldp	x25, x26, [sp, #64]
  41d48c:	ldp	x27, x28, [sp, #80]
  41d490:	ldp	x29, x30, [sp], #240
  41d494:	ret
  41d498:	ldr	x0, [sp, #232]
  41d49c:	bl	4026b0 <free@plt>
  41d4a0:	mov	w0, #0xc                   	// #12
  41d4a4:	str	w0, [sp, #184]
  41d4a8:	ldr	x0, [sp, #208]
  41d4ac:	bl	4026b0 <free@plt>
  41d4b0:	ldr	w0, [sp, #184]
  41d4b4:	ldp	x19, x20, [sp, #16]
  41d4b8:	ldp	x21, x22, [sp, #32]
  41d4bc:	ldp	x23, x24, [sp, #48]
  41d4c0:	ldp	x25, x26, [sp, #64]
  41d4c4:	ldp	x27, x28, [sp, #80]
  41d4c8:	ldp	x29, x30, [sp], #240
  41d4cc:	ret
  41d4d0:	add	x22, sp, #0xc0
  41d4d4:	add	x1, x19, #0x8
  41d4d8:	mov	x0, x22
  41d4dc:	bl	419bb0 <_obstack_memory_used@@Base+0x2ae8>
  41d4e0:	str	w0, [sp, #184]
  41d4e4:	cbnz	w0, 41d4b4 <_obstack_memory_used@@Base+0x63ec>
  41d4e8:	ldrb	w0, [x19, #104]
  41d4ec:	tbz	w0, #6, 41d2b0 <_obstack_memory_used@@Base+0x61e8>
  41d4f0:	ldr	x0, [sp, #200]
  41d4f4:	cbz	x0, 41d518 <_obstack_memory_used@@Base+0x6450>
  41d4f8:	ldr	w4, [sp, #140]
  41d4fc:	mov	x2, x21
  41d500:	ldr	x3, [sp, #128]
  41d504:	mov	x1, x22
  41d508:	mov	x0, x26
  41d50c:	bl	41a388 <_obstack_memory_used@@Base+0x32c0>
  41d510:	str	w0, [sp, #184]
  41d514:	cbnz	w0, 41d4a8 <_obstack_memory_used@@Base+0x63e0>
  41d518:	mov	w3, w23
  41d51c:	mov	x2, x22
  41d520:	mov	x1, x27
  41d524:	add	x0, sp, #0xb8
  41d528:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  41d52c:	mov	x19, x0
  41d530:	cbz	x0, 41d6dc <_obstack_memory_used@@Base+0x6614>
  41d534:	ldr	x0, [x26, #184]
  41d538:	str	x19, [x0, x21, lsl #3]
  41d53c:	b	41d2b0 <_obstack_memory_used@@Base+0x61e8>
  41d540:	ldr	x1, [sp, #112]
  41d544:	mov	x4, x21
  41d548:	mov	x3, x26
  41d54c:	mov	x2, x28
  41d550:	bl	41cf50 <_obstack_memory_used@@Base+0x5e88>
  41d554:	cmp	w0, #0x1
  41d558:	b.le	41d5e8 <_obstack_memory_used@@Base+0x6520>
  41d55c:	ldr	x1, [x26, #184]
  41d560:	add	x20, x21, w0, sxtw
  41d564:	ldr	x0, [x23, #24]
  41d568:	lsl	x25, x28, #3
  41d56c:	ldr	x1, [x1, x20, lsl #3]
  41d570:	ldr	x28, [x0, x28, lsl #3]
  41d574:	str	xzr, [sp, #224]
  41d578:	cbz	x1, 41d590 <_obstack_memory_used@@Base+0x64c8>
  41d57c:	add	x1, x1, #0x8
  41d580:	add	x0, sp, #0xd8
  41d584:	bl	419630 <_obstack_memory_used@@Base+0x2568>
  41d588:	str	w0, [sp, #188]
  41d58c:	cbnz	w0, 41d5d0 <_obstack_memory_used@@Base+0x6508>
  41d590:	mov	x1, x28
  41d594:	add	x0, sp, #0xd8
  41d598:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  41d59c:	tst	w0, #0xff
  41d5a0:	b.eq	41d498 <_obstack_memory_used@@Base+0x63d0>  // b.none
  41d5a4:	ldr	x28, [x26, #184]
  41d5a8:	mov	x1, x23
  41d5ac:	add	x2, sp, #0xd8
  41d5b0:	add	x0, sp, #0xbc
  41d5b4:	bl	41a0a0 <_obstack_memory_used@@Base+0x2fd8>
  41d5b8:	ldr	x1, [x26, #184]
  41d5bc:	str	x0, [x28, x20, lsl #3]
  41d5c0:	ldr	x0, [x1, x20, lsl #3]
  41d5c4:	cbnz	x0, 41d36c <_obstack_memory_used@@Base+0x62a4>
  41d5c8:	ldr	w0, [sp, #188]
  41d5cc:	cbz	w0, 41d36c <_obstack_memory_used@@Base+0x62a4>
  41d5d0:	ldr	x0, [sp, #232]
  41d5d4:	bl	4026b0 <free@plt>
  41d5d8:	ldr	w0, [sp, #188]
  41d5dc:	str	w0, [sp, #184]
  41d5e0:	cbz	w0, 41d3a0 <_obstack_memory_used@@Base+0x62d8>
  41d5e4:	b	41d4a8 <_obstack_memory_used@@Base+0x63e0>
  41d5e8:	cbnz	w0, 41d368 <_obstack_memory_used@@Base+0x62a0>
  41d5ec:	ldr	x1, [x23]
  41d5f0:	add	x1, x1, x20
  41d5f4:	b	41d354 <_obstack_memory_used@@Base+0x628c>
  41d5f8:	cbnz	x19, 41d308 <_obstack_memory_used@@Base+0x6240>
  41d5fc:	mov	x20, x22
  41d600:	b	41d3e8 <_obstack_memory_used@@Base+0x6320>
  41d604:	ldr	w0, [sp, #184]
  41d608:	cbnz	w0, 41d4a8 <_obstack_memory_used@@Base+0x63e0>
  41d60c:	ldr	x1, [sp, #96]
  41d610:	ldr	x0, [x26, #184]
  41d614:	add	x1, x1, #0x1
  41d618:	str	x1, [sp, #96]
  41d61c:	ldr	x1, [sp, #104]
  41d620:	str	xzr, [x0, x1]
  41d624:	b	41d424 <_obstack_memory_used@@Base+0x635c>
  41d628:	str	x19, [x26, #72]
  41d62c:	sub	x1, x19, #0x1
  41d630:	str	x22, [x26, #184]
  41d634:	mov	x0, x26
  41d638:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41d63c:	mov	w23, w0
  41d640:	mov	x1, #0x1                   	// #1
  41d644:	mov	x0, #0x8                   	// #8
  41d648:	stp	x1, x1, [sp, #192]
  41d64c:	bl	402440 <malloc@plt>
  41d650:	str	x0, [sp, #208]
  41d654:	mov	x4, x0
  41d658:	cbz	x0, 41d6e8 <_obstack_memory_used@@Base+0x6620>
  41d65c:	ldr	w3, [sp, #140]
  41d660:	add	x22, sp, #0xc0
  41d664:	ldr	x2, [sp, #128]
  41d668:	str	x20, [x4]
  41d66c:	mov	x1, x22
  41d670:	mov	x0, x27
  41d674:	str	wzr, [sp, #184]
  41d678:	mov	x21, x19
  41d67c:	bl	419a50 <_obstack_memory_used@@Base+0x2988>
  41d680:	str	w0, [sp, #184]
  41d684:	cbz	w0, 41d4f0 <_obstack_memory_used@@Base+0x6428>
  41d688:	b	41d4a8 <_obstack_memory_used@@Base+0x63e0>
  41d68c:	add	x21, x0, #0x1
  41d690:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  41d694:	sub	x0, x0, x22
  41d698:	cmp	x0, x21
  41d69c:	b.lt	41d6e8 <_obstack_memory_used@@Base+0x6620>  // b.tstop
  41d6a0:	add	x23, x22, x21
  41d6a4:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  41d6a8:	cmp	x23, x0
  41d6ac:	b.hi	41d6e8 <_obstack_memory_used@@Base+0x6620>  // b.pmore
  41d6b0:	ldr	x24, [sp, #144]
  41d6b4:	lsl	x1, x23, #3
  41d6b8:	ldr	x0, [x24, #16]
  41d6bc:	bl	402550 <realloc@plt>
  41d6c0:	cbz	x0, 41d6e8 <_obstack_memory_used@@Base+0x6620>
  41d6c4:	stp	x23, x0, [x24, #8]
  41d6c8:	lsl	x2, x21, #3
  41d6cc:	add	x0, x0, x22, lsl #3
  41d6d0:	mov	w1, #0x0                   	// #0
  41d6d4:	bl	402510 <memset@plt>
  41d6d8:	b	41d254 <_obstack_memory_used@@Base+0x618c>
  41d6dc:	ldr	w0, [sp, #184]
  41d6e0:	cbz	w0, 41d534 <_obstack_memory_used@@Base+0x646c>
  41d6e4:	b	41d4a8 <_obstack_memory_used@@Base+0x63e0>
  41d6e8:	mov	w0, #0xc                   	// #12
  41d6ec:	b	41d4b4 <_obstack_memory_used@@Base+0x63ec>
  41d6f0:	ldr	x0, [sp, #144]
  41d6f4:	ldr	x1, [sp, #160]
  41d6f8:	str	x21, [x0]
  41d6fc:	mov	w0, #0x1                   	// #1
  41d700:	str	x1, [x26, #72]
  41d704:	ldr	x1, [sp, #152]
  41d708:	str	x1, [x26, #184]
  41d70c:	b	41d4b4 <_obstack_memory_used@@Base+0x63ec>
  41d710:	mov	x0, #0x0                   	// #0
  41d714:	b	41d398 <_obstack_memory_used@@Base+0x62d0>
  41d718:	stp	x29, x30, [sp, #-208]!
  41d71c:	mov	x5, #0x2                   	// #2
  41d720:	tst	w4, #0xff
  41d724:	mov	x29, sp
  41d728:	stp	x19, x20, [sp, #16]
  41d72c:	mov	x19, x1
  41d730:	mov	x20, x3
  41d734:	stp	x21, x22, [sp, #32]
  41d738:	mov	x21, x2
  41d73c:	stp	x23, x24, [sp, #48]
  41d740:	stp	x25, x26, [sp, #64]
  41d744:	stp	x27, x28, [sp, #80]
  41d748:	stp	xzr, x5, [x29, #184]
  41d74c:	str	xzr, [x29, #200]
  41d750:	ldr	x24, [x0]
  41d754:	b.eq	41dce8 <_obstack_memory_used@@Base+0x6c20>  // b.none
  41d758:	mov	x0, #0x60                  	// #96
  41d75c:	bl	402440 <malloc@plt>
  41d760:	str	x0, [x29, #200]
  41d764:	add	x22, x29, #0xb8
  41d768:	cbz	x0, 41dc4c <_obstack_memory_used@@Base+0x6b84>
  41d76c:	lsl	x0, x21, #4
  41d770:	str	x0, [x29, #136]
  41d774:	stp	xzr, xzr, [x29, #160]
  41d778:	cmp	x0, #0xfbf
  41d77c:	str	xzr, [x29, #176]
  41d780:	ldr	x28, [x24, #144]
  41d784:	b.hi	41dd08 <_obstack_memory_used@@Base+0x6c40>  // b.pmore
  41d788:	sub	sp, sp, x0
  41d78c:	str	wzr, [x29, #108]
  41d790:	mov	x0, sp
  41d794:	str	x0, [x29, #120]
  41d798:	ldr	x0, [x29, #120]
  41d79c:	mov	x1, x20
  41d7a0:	ldr	x2, [x29, #136]
  41d7a4:	bl	4022a0 <memcpy@plt>
  41d7a8:	ldr	x3, [x20]
  41d7ac:	add	x0, x29, #0xb0
  41d7b0:	str	x0, [x29, #112]
  41d7b4:	str	x3, [x29, #152]
  41d7b8:	add	x0, x22, #0x10
  41d7bc:	str	x0, [x29, #128]
  41d7c0:	ldr	x0, [x20, #8]
  41d7c4:	cmp	x0, x3
  41d7c8:	b.lt	41d89c <_obstack_memory_used@@Base+0x67d4>  // b.tstop
  41d7cc:	nop
  41d7d0:	ldr	x2, [x24]
  41d7d4:	lsl	x26, x28, #4
  41d7d8:	mov	x23, x28
  41d7dc:	add	x4, x2, x26
  41d7e0:	ldrb	w1, [x4, #8]
  41d7e4:	cmp	w1, #0x8
  41d7e8:	b.eq	41d914 <_obstack_memory_used@@Base+0x684c>  // b.none
  41d7ec:	cmp	w1, #0x9
  41d7f0:	b.eq	41d9c4 <_obstack_memory_used@@Base+0x68fc>  // b.none
  41d7f4:	cmp	x3, x0
  41d7f8:	b.ne	41d808 <_obstack_memory_used@@Base+0x6740>  // b.any
  41d7fc:	ldr	x0, [x19, #176]
  41d800:	cmp	x0, x28
  41d804:	b.eq	41db48 <_obstack_memory_used@@Base+0x6a80>  // b.none
  41d808:	ldr	x27, [x19, #152]
  41d80c:	ldr	x0, [x27]
  41d810:	add	x1, x0, x26
  41d814:	ldrb	w2, [x1, #8]
  41d818:	tbnz	w2, #3, 41d940 <_obstack_memory_used@@Base+0x6878>
  41d81c:	ldrb	w3, [x1, #10]
  41d820:	tbnz	w3, #4, 41da0c <_obstack_memory_used@@Base+0x6944>
  41d824:	cmp	w2, #0x4
  41d828:	b.eq	41da38 <_obstack_memory_used@@Base+0x6970>  // b.none
  41d82c:	ldr	x25, [x29, #152]
  41d830:	mov	x2, x25
  41d834:	mov	x0, x19
  41d838:	bl	41b5d0 <_obstack_memory_used@@Base+0x4508>
  41d83c:	tst	w0, #0xff
  41d840:	b.eq	41d8e8 <_obstack_memory_used@@Base+0x6820>  // b.none
  41d844:	ldr	x0, [x27, #24]
  41d848:	add	x2, x25, #0x1
  41d84c:	ldr	x28, [x0, x23, lsl #3]
  41d850:	str	x2, [x29, #152]
  41d854:	cbz	x22, 41d884 <_obstack_memory_used@@Base+0x67bc>
  41d858:	ldr	x0, [x19, #168]
  41d85c:	cmp	x2, x0
  41d860:	b.gt	41d8ec <_obstack_memory_used@@Base+0x6824>
  41d864:	ldr	x0, [x19, #184]
  41d868:	ldr	x1, [x0, x2, lsl #3]
  41d86c:	cbz	x1, 41d8ec <_obstack_memory_used@@Base+0x6824>
  41d870:	ldr	x0, [x1, #16]
  41d874:	mov	x2, x28
  41d878:	add	x1, x1, #0x18
  41d87c:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41d880:	cbz	x0, 41d8ec <_obstack_memory_used@@Base+0x6824>
  41d884:	str	xzr, [x29, #168]
  41d888:	tbnz	x28, #63, 41d8e0 <_obstack_memory_used@@Base+0x6818>
  41d88c:	ldr	x0, [x20, #8]
  41d890:	ldr	x3, [x29, #152]
  41d894:	cmp	x0, x3
  41d898:	b.ge	41d7d0 <_obstack_memory_used@@Base+0x6708>  // b.tcont
  41d89c:	ldr	x0, [x29, #176]
  41d8a0:	bl	4026b0 <free@plt>
  41d8a4:	ldr	w0, [x29, #108]
  41d8a8:	cbnz	w0, 41dc98 <_obstack_memory_used@@Base+0x6bd0>
  41d8ac:	cbz	x22, 41dcb8 <_obstack_memory_used@@Base+0x6bf0>
  41d8b0:	mov	x0, x22
  41d8b4:	mov	w19, #0x0                   	// #0
  41d8b8:	bl	41b460 <_obstack_memory_used@@Base+0x4398>
  41d8bc:	mov	sp, x29
  41d8c0:	mov	w0, w19
  41d8c4:	ldp	x19, x20, [sp, #16]
  41d8c8:	ldp	x21, x22, [sp, #32]
  41d8cc:	ldp	x23, x24, [sp, #48]
  41d8d0:	ldp	x25, x26, [sp, #64]
  41d8d4:	ldp	x27, x28, [sp, #80]
  41d8d8:	ldp	x29, x30, [sp], #208
  41d8dc:	ret
  41d8e0:	cmn	x28, #0x2
  41d8e4:	b.eq	41dc38 <_obstack_memory_used@@Base+0x6b70>  // b.none
  41d8e8:	cbz	x22, 41dd38 <_obstack_memory_used@@Base+0x6c70>
  41d8ec:	mov	x3, x21
  41d8f0:	add	x5, x29, #0xa0
  41d8f4:	mov	x4, x20
  41d8f8:	add	x2, x29, #0x98
  41d8fc:	add	x1, x22, #0x10
  41d900:	mov	x0, x22
  41d904:	bl	41c058 <_obstack_memory_used@@Base+0x4f90>
  41d908:	mov	x28, x0
  41d90c:	ldr	x3, [x29, #152]
  41d910:	b	41d7b8 <_obstack_memory_used@@Base+0x66f0>
  41d914:	ldr	x1, [x2, x26]
  41d918:	add	x1, x1, #0x1
  41d91c:	cmp	x21, x1
  41d920:	b.le	41d7f4 <_obstack_memory_used@@Base+0x672c>
  41d924:	lsl	x1, x1, #4
  41d928:	add	x0, x20, x1
  41d92c:	str	x3, [x20, x1]
  41d930:	mov	x1, #0xffffffffffffffff    	// #-1
  41d934:	str	x1, [x0, #8]
  41d938:	ldr	x0, [x20, #8]
  41d93c:	b	41d7f4 <_obstack_memory_used@@Base+0x672c>
  41d940:	ldr	x4, [x27, #40]
  41d944:	add	x23, x28, x28, lsl #1
  41d948:	ldr	x3, [x29, #152]
  41d94c:	mov	x1, x28
  41d950:	ldr	x2, [x19, #184]
  41d954:	add	x0, x29, #0xa0
  41d958:	add	x23, x4, x23, lsl #3
  41d95c:	ldr	x25, [x2, x3, lsl #3]
  41d960:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  41d964:	tst	w0, #0xff
  41d968:	b.eq	41dc38 <_obstack_memory_used@@Base+0x6b70>  // b.none
  41d96c:	ldr	x7, [x23, #8]
  41d970:	cmp	x7, #0x0
  41d974:	b.le	41d8e8 <_obstack_memory_used@@Base+0x6820>
  41d978:	ldr	x10, [x23, #16]
  41d97c:	add	x9, x25, #0x18
  41d980:	ldr	x8, [x25, #16]
  41d984:	mov	x28, #0xffffffffffffffff    	// #-1
  41d988:	mov	x6, #0x0                   	// #0
  41d98c:	nop
  41d990:	ldr	x23, [x10, x6, lsl #3]
  41d994:	add	x6, x6, #0x1
  41d998:	mov	x1, x9
  41d99c:	mov	x0, x8
  41d9a0:	mov	x2, x23
  41d9a4:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41d9a8:	cbz	x0, 41d9b8 <_obstack_memory_used@@Base+0x68f0>
  41d9ac:	cmn	x28, #0x1
  41d9b0:	b.ne	41dab0 <_obstack_memory_used@@Base+0x69e8>  // b.any
  41d9b4:	mov	x28, x23
  41d9b8:	cmp	x6, x7
  41d9bc:	b.ne	41d990 <_obstack_memory_used@@Base+0x68c8>  // b.any
  41d9c0:	b	41d888 <_obstack_memory_used@@Base+0x67c0>
  41d9c4:	ldr	x1, [x4]
  41d9c8:	add	x1, x1, #0x1
  41d9cc:	cmp	x21, x1
  41d9d0:	b.le	41d7f4 <_obstack_memory_used@@Base+0x672c>
  41d9d4:	lsl	x1, x1, #4
  41d9d8:	add	x2, x20, x1
  41d9dc:	ldr	x0, [x20, x1]
  41d9e0:	cmp	x0, x3
  41d9e4:	b.lt	41dc54 <_obstack_memory_used@@Base+0x6b8c>  // b.tstop
  41d9e8:	ldrb	w0, [x4, #10]
  41d9ec:	tbz	w0, #3, 41da00 <_obstack_memory_used@@Base+0x6938>
  41d9f0:	ldr	x4, [x29, #120]
  41d9f4:	ldr	x0, [x4, x1]
  41d9f8:	cmn	x0, #0x1
  41d9fc:	b.ne	41dc78 <_obstack_memory_used@@Base+0x6bb0>  // b.any
  41da00:	str	x3, [x2, #8]
  41da04:	ldr	x0, [x20, #8]
  41da08:	b	41d7f4 <_obstack_memory_used@@Base+0x672c>
  41da0c:	ldr	x4, [x29, #152]
  41da10:	mov	x3, x19
  41da14:	mov	x2, x28
  41da18:	add	x1, x27, #0xd8
  41da1c:	bl	41cf50 <_obstack_memory_used@@Base+0x5e88>
  41da20:	sxtw	x25, w0
  41da24:	cbnz	w0, 41dc28 <_obstack_memory_used@@Base+0x6b60>
  41da28:	ldr	x1, [x27]
  41da2c:	ldr	x25, [x29, #152]
  41da30:	add	x1, x1, x26
  41da34:	b	41d830 <_obstack_memory_used@@Base+0x6768>
  41da38:	ldr	x0, [x1]
  41da3c:	add	x0, x0, #0x1
  41da40:	cmp	x21, x0
  41da44:	b.le	41dbcc <_obstack_memory_used@@Base+0x6b04>
  41da48:	lsl	x0, x0, #4
  41da4c:	add	x1, x20, x0
  41da50:	ldr	x0, [x20, x0]
  41da54:	ldr	x1, [x1, #8]
  41da58:	sub	x25, x1, x0
  41da5c:	cbz	x22, 41dc24 <_obstack_memory_used@@Base+0x6b5c>
  41da60:	cmn	x0, #0x1
  41da64:	b.eq	41d8ec <_obstack_memory_used@@Base+0x6824>  // b.none
  41da68:	cmn	x1, #0x1
  41da6c:	b.eq	41d8ec <_obstack_memory_used@@Base+0x6824>  // b.none
  41da70:	cbz	x25, 41dbd0 <_obstack_memory_used@@Base+0x6b08>
  41da74:	ldr	x3, [x19, #48]
  41da78:	ldr	x23, [x29, #152]
  41da7c:	ldr	x1, [x19, #8]
  41da80:	sub	x3, x3, x23
  41da84:	cmp	x25, x3
  41da88:	b.gt	41d8ec <_obstack_memory_used@@Base+0x6824>
  41da8c:	add	x0, x1, x0
  41da90:	mov	x2, x25
  41da94:	add	x1, x1, x23
  41da98:	bl	402660 <memcmp@plt>
  41da9c:	cbnz	w0, 41d8ec <_obstack_memory_used@@Base+0x6824>
  41daa0:	ldr	x0, [x27, #24]
  41daa4:	add	x2, x23, x25
  41daa8:	ldr	x28, [x0, x28, lsl #3]
  41daac:	b	41d850 <_obstack_memory_used@@Base+0x6788>
  41dab0:	ldr	x1, [x29, #112]
  41dab4:	mov	x2, x28
  41dab8:	ldr	x0, [x29, #168]
  41dabc:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41dac0:	cbnz	x0, 41dc30 <_obstack_memory_used@@Base+0x6b68>
  41dac4:	cbz	x22, 41d888 <_obstack_memory_used@@Base+0x67c0>
  41dac8:	ldp	x25, x0, [x22]
  41dacc:	ldr	x26, [x29, #152]
  41dad0:	add	x1, x25, #0x1
  41dad4:	str	x1, [x22]
  41dad8:	cmp	x1, x0
  41dadc:	b.eq	41dcc0 <_obstack_memory_used@@Base+0x6bf8>  // b.none
  41dae0:	ldr	x1, [x22, #16]
  41dae4:	add	x2, x25, x25, lsl #1
  41dae8:	ldr	x27, [x29, #136]
  41daec:	lsl	x2, x2, #4
  41daf0:	add	x25, x1, x2
  41daf4:	mov	x0, x27
  41daf8:	str	x26, [x1, x2]
  41dafc:	str	x23, [x25, #8]
  41db00:	bl	402440 <malloc@plt>
  41db04:	str	x0, [x25, #16]
  41db08:	cbz	x0, 41db28 <_obstack_memory_used@@Base+0x6a60>
  41db0c:	mov	x2, x27
  41db10:	mov	x1, x20
  41db14:	bl	4022a0 <memcpy@plt>
  41db18:	add	x1, x29, #0xa0
  41db1c:	add	x0, x25, #0x18
  41db20:	bl	419bb0 <_obstack_memory_used@@Base+0x2ae8>
  41db24:	cbz	w0, 41d888 <_obstack_memory_used@@Base+0x67c0>
  41db28:	ldr	x0, [x29, #176]
  41db2c:	bl	4026b0 <free@plt>
  41db30:	ldr	w0, [x29, #108]
  41db34:	cbnz	w0, 41dd28 <_obstack_memory_used@@Base+0x6c60>
  41db38:	mov	x0, x22
  41db3c:	mov	w19, #0xc                   	// #12
  41db40:	bl	41b460 <_obstack_memory_used@@Base+0x4398>
  41db44:	b	41d8bc <_obstack_memory_used@@Base+0x67f4>
  41db48:	cbz	x22, 41dca8 <_obstack_memory_used@@Base+0x6be0>
  41db4c:	mov	x0, x20
  41db50:	mov	x1, #0x0                   	// #0
  41db54:	nop
  41db58:	ldr	x2, [x0]
  41db5c:	tbnz	x2, #63, 41db6c <_obstack_memory_used@@Base+0x6aa4>
  41db60:	ldr	x2, [x0, #8]
  41db64:	cmn	x2, #0x1
  41db68:	b.eq	41db98 <_obstack_memory_used@@Base+0x6ad0>  // b.none
  41db6c:	add	x1, x1, #0x1
  41db70:	add	x0, x0, #0x10
  41db74:	cmp	x21, x1
  41db78:	b.ne	41db58 <_obstack_memory_used@@Base+0x6a90>  // b.any
  41db7c:	ldr	x0, [x29, #176]
  41db80:	bl	4026b0 <free@plt>
  41db84:	ldr	w0, [x29, #108]
  41db88:	cbz	w0, 41d8b0 <_obstack_memory_used@@Base+0x67e8>
  41db8c:	ldr	x0, [x29, #120]
  41db90:	bl	4026b0 <free@plt>
  41db94:	b	41d8b0 <_obstack_memory_used@@Base+0x67e8>
  41db98:	cmp	x21, x1
  41db9c:	b.eq	41db7c <_obstack_memory_used@@Base+0x6ab4>  // b.none
  41dba0:	ldr	x1, [x29, #128]
  41dba4:	add	x5, x29, #0xa0
  41dba8:	mov	x4, x20
  41dbac:	mov	x3, x21
  41dbb0:	add	x2, x29, #0x98
  41dbb4:	mov	x0, x22
  41dbb8:	bl	41c058 <_obstack_memory_used@@Base+0x4f90>
  41dbbc:	mov	x28, x0
  41dbc0:	mov	x23, x0
  41dbc4:	lsl	x26, x0, #4
  41dbc8:	b	41d808 <_obstack_memory_used@@Base+0x6740>
  41dbcc:	cbnz	x22, 41d8ec <_obstack_memory_used@@Base+0x6824>
  41dbd0:	mov	x1, x28
  41dbd4:	add	x0, x29, #0xa0
  41dbd8:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  41dbdc:	tst	w0, #0xff
  41dbe0:	b.eq	41dc38 <_obstack_memory_used@@Base+0x6b70>  // b.none
  41dbe4:	ldr	x1, [x27, #40]
  41dbe8:	add	x5, x28, x28, lsl #1
  41dbec:	ldr	x25, [x29, #152]
  41dbf0:	ldr	x0, [x19, #184]
  41dbf4:	add	x5, x1, x5, lsl #3
  41dbf8:	ldr	x0, [x0, x25, lsl #3]
  41dbfc:	ldr	x2, [x5, #16]
  41dc00:	add	x1, x0, #0x18
  41dc04:	ldr	x0, [x0, #16]
  41dc08:	ldr	x28, [x2]
  41dc0c:	mov	x2, x28
  41dc10:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41dc14:	cbnz	x0, 41d888 <_obstack_memory_used@@Base+0x67c0>
  41dc18:	ldr	x1, [x27]
  41dc1c:	add	x1, x1, x26
  41dc20:	b	41d830 <_obstack_memory_used@@Base+0x6768>
  41dc24:	cbz	x25, 41dbd0 <_obstack_memory_used@@Base+0x6b08>
  41dc28:	ldr	x23, [x29, #152]
  41dc2c:	b	41daa0 <_obstack_memory_used@@Base+0x69d8>
  41dc30:	mov	x28, x23
  41dc34:	b	41d888 <_obstack_memory_used@@Base+0x67c0>
  41dc38:	ldr	x0, [x29, #176]
  41dc3c:	bl	4026b0 <free@plt>
  41dc40:	ldr	w0, [x29, #108]
  41dc44:	cbnz	w0, 41dd28 <_obstack_memory_used@@Base+0x6c60>
  41dc48:	cbnz	x22, 41db38 <_obstack_memory_used@@Base+0x6a70>
  41dc4c:	mov	w19, #0xc                   	// #12
  41dc50:	b	41d8bc <_obstack_memory_used@@Base+0x67f4>
  41dc54:	str	x3, [x2, #8]
  41dc58:	mov	x1, x20
  41dc5c:	ldr	x0, [x29, #120]
  41dc60:	str	x3, [x29, #96]
  41dc64:	ldr	x2, [x29, #136]
  41dc68:	bl	4022a0 <memcpy@plt>
  41dc6c:	ldr	x0, [x20, #8]
  41dc70:	ldr	x3, [x29, #96]
  41dc74:	b	41d7f4 <_obstack_memory_used@@Base+0x672c>
  41dc78:	ldr	x2, [x29, #136]
  41dc7c:	mov	x1, x4
  41dc80:	mov	x0, x20
  41dc84:	str	x3, [x29, #96]
  41dc88:	bl	4022a0 <memcpy@plt>
  41dc8c:	ldr	x0, [x20, #8]
  41dc90:	ldr	x3, [x29, #96]
  41dc94:	b	41d7f4 <_obstack_memory_used@@Base+0x672c>
  41dc98:	ldr	x0, [x29, #120]
  41dc9c:	bl	4026b0 <free@plt>
  41dca0:	cbnz	x22, 41d8b0 <_obstack_memory_used@@Base+0x67e8>
  41dca4:	b	41dcb8 <_obstack_memory_used@@Base+0x6bf0>
  41dca8:	ldr	x0, [x29, #176]
  41dcac:	bl	4026b0 <free@plt>
  41dcb0:	ldr	w0, [x29, #108]
  41dcb4:	cbnz	w0, 41dd58 <_obstack_memory_used@@Base+0x6c90>
  41dcb8:	mov	w19, #0x0                   	// #0
  41dcbc:	b	41d8bc <_obstack_memory_used@@Base+0x67f4>
  41dcc0:	ldr	x0, [x22, #16]
  41dcc4:	add	x1, x1, x1, lsl #1
  41dcc8:	lsl	x1, x1, #5
  41dccc:	bl	402550 <realloc@plt>
  41dcd0:	mov	x1, x0
  41dcd4:	cbz	x0, 41db28 <_obstack_memory_used@@Base+0x6a60>
  41dcd8:	ldr	x0, [x22, #8]
  41dcdc:	lsl	x0, x0, #1
  41dce0:	stp	x0, x1, [x22, #8]
  41dce4:	b	41dae4 <_obstack_memory_used@@Base+0x6a1c>
  41dce8:	lsl	x0, x21, #4
  41dcec:	str	x0, [x29, #136]
  41dcf0:	stp	xzr, xzr, [x29, #160]
  41dcf4:	cmp	x0, #0xfbf
  41dcf8:	mov	x22, #0x0                   	// #0
  41dcfc:	str	xzr, [x29, #176]
  41dd00:	ldr	x28, [x24, #144]
  41dd04:	b.ls	41d788 <_obstack_memory_used@@Base+0x66c0>  // b.plast
  41dd08:	ldr	x0, [x29, #136]
  41dd0c:	bl	402440 <malloc@plt>
  41dd10:	str	x0, [x29, #120]
  41dd14:	mov	w1, #0x1                   	// #1
  41dd18:	str	w1, [x29, #108]
  41dd1c:	cbnz	x0, 41d798 <_obstack_memory_used@@Base+0x66d0>
  41dd20:	cbnz	x22, 41db38 <_obstack_memory_used@@Base+0x6a70>
  41dd24:	b	41dc4c <_obstack_memory_used@@Base+0x6b84>
  41dd28:	ldr	x0, [x29, #120]
  41dd2c:	bl	4026b0 <free@plt>
  41dd30:	cbnz	x22, 41db38 <_obstack_memory_used@@Base+0x6a70>
  41dd34:	b	41dc4c <_obstack_memory_used@@Base+0x6b84>
  41dd38:	ldr	x0, [x29, #176]
  41dd3c:	mov	w19, #0x1                   	// #1
  41dd40:	bl	4026b0 <free@plt>
  41dd44:	ldr	w0, [x29, #108]
  41dd48:	cbz	w0, 41d8bc <_obstack_memory_used@@Base+0x67f4>
  41dd4c:	ldr	x0, [x29, #120]
  41dd50:	bl	4026b0 <free@plt>
  41dd54:	b	41d8bc <_obstack_memory_used@@Base+0x67f4>
  41dd58:	ldr	x0, [x29, #120]
  41dd5c:	mov	w19, #0x0                   	// #0
  41dd60:	bl	4026b0 <free@plt>
  41dd64:	b	41d8bc <_obstack_memory_used@@Base+0x67f4>
  41dd68:	stp	x29, x30, [sp, #-80]!
  41dd6c:	mov	x6, x2
  41dd70:	mov	x5, x4
  41dd74:	mov	x29, sp
  41dd78:	stp	x19, x20, [sp, #16]
  41dd7c:	mov	x20, x2
  41dd80:	mov	x19, x0
  41dd84:	stp	x23, x24, [sp, #48]
  41dd88:	mov	x24, x4
  41dd8c:	mov	x4, x3
  41dd90:	str	x25, [sp, #64]
  41dd94:	mov	x25, x3
  41dd98:	ldr	x3, [x2, #8]
  41dd9c:	stp	x21, x22, [sp, #32]
  41dda0:	mov	x21, x1
  41dda4:	ldr	x2, [x6], #16
  41dda8:	mov	x1, x6
  41ddac:	mov	w6, #0x8                   	// #8
  41ddb0:	bl	41d1f0 <_obstack_memory_used@@Base+0x6128>
  41ddb4:	cbz	w0, 41ddd0 <_obstack_memory_used@@Base+0x6d08>
  41ddb8:	ldp	x19, x20, [sp, #16]
  41ddbc:	ldp	x21, x22, [sp, #32]
  41ddc0:	ldp	x23, x24, [sp, #48]
  41ddc4:	ldr	x25, [sp, #64]
  41ddc8:	ldp	x29, x30, [sp], #80
  41ddcc:	ret
  41ddd0:	ldp	x2, x1, [x19, #200]
  41ddd4:	ldr	x22, [x20, #8]
  41ddd8:	ldr	x23, [x21]
  41dddc:	mov	x4, x22
  41dde0:	cmp	x2, x1
  41dde4:	ldr	x0, [x19, #216]
  41dde8:	b.ge	41de84 <_obstack_memory_used@@Base+0x6dbc>  // b.tcont
  41ddec:	add	x6, x2, x2, lsl #2
  41ddf0:	cmp	x2, #0x0
  41ddf4:	lsl	x6, x6, #3
  41ddf8:	b.le	41de10 <_obstack_memory_used@@Base+0x6d48>
  41ddfc:	sub	x3, x6, #0x28
  41de00:	add	x3, x0, x3
  41de04:	ldr	x1, [x3, #8]
  41de08:	cmp	x24, x1
  41de0c:	b.eq	41de78 <_obstack_memory_used@@Base+0x6db0>  // b.none
  41de10:	add	x7, x0, x6
  41de14:	cmp	x23, x22
  41de18:	str	x25, [x0, x6]
  41de1c:	csetm	w1, eq  // eq = none
  41de20:	add	x2, x2, #0x1
  41de24:	sub	x0, x22, x23
  41de28:	stp	x24, x23, [x7, #8]
  41de2c:	str	x22, [x7, #24]
  41de30:	strh	w1, [x7, #34]
  41de34:	str	x2, [x19, #200]
  41de38:	strb	wzr, [x7, #32]
  41de3c:	ldrsw	x1, [x19, #224]
  41de40:	cmp	x1, x0
  41de44:	b.ge	41de50 <_obstack_memory_used@@Base+0x6d88>  // b.tcont
  41de48:	sub	w22, w22, w23
  41de4c:	str	w22, [x19, #224]
  41de50:	add	x4, x24, x4
  41de54:	mov	x0, x19
  41de58:	ldr	x1, [x21]
  41de5c:	ldp	x19, x20, [sp, #16]
  41de60:	sub	x1, x4, x1
  41de64:	ldp	x21, x22, [sp, #32]
  41de68:	ldp	x23, x24, [sp, #48]
  41de6c:	ldr	x25, [sp, #64]
  41de70:	ldp	x29, x30, [sp], #80
  41de74:	b	4183c0 <_obstack_memory_used@@Base+0x12f8>
  41de78:	mov	w1, #0x1                   	// #1
  41de7c:	strb	w1, [x3, #32]
  41de80:	b	41de10 <_obstack_memory_used@@Base+0x6d48>
  41de84:	add	x1, x1, x1, lsl #2
  41de88:	lsl	x1, x1, #4
  41de8c:	bl	402550 <realloc@plt>
  41de90:	cbz	x0, 41decc <_obstack_memory_used@@Base+0x6e04>
  41de94:	ldp	x3, x2, [x19, #200]
  41de98:	str	x0, [x19, #216]
  41de9c:	mov	w1, #0x0                   	// #0
  41dea0:	add	x3, x3, x3, lsl #2
  41dea4:	add	x2, x2, x2, lsl #2
  41dea8:	add	x0, x0, x3, lsl #3
  41deac:	lsl	x2, x2, #3
  41deb0:	bl	402510 <memset@plt>
  41deb4:	ldp	x2, x1, [x19, #200]
  41deb8:	ldr	x4, [x20, #8]
  41debc:	ldr	x0, [x19, #216]
  41dec0:	lsl	x1, x1, #1
  41dec4:	str	x1, [x19, #208]
  41dec8:	b	41ddec <_obstack_memory_used@@Base+0x6d24>
  41decc:	ldr	x0, [x19, #216]
  41ded0:	bl	4026b0 <free@plt>
  41ded4:	mov	w0, #0xc                   	// #12
  41ded8:	b	41ddb8 <_obstack_memory_used@@Base+0x6cf0>
  41dedc:	nop
  41dee0:	stp	x29, x30, [sp, #-208]!
  41dee4:	mov	x29, sp
  41dee8:	stp	x21, x22, [sp, #32]
  41deec:	ldr	x21, [x0, #72]
  41def0:	stp	x25, x26, [sp, #64]
  41def4:	stp	x27, x28, [sp, #80]
  41def8:	mov	x28, x0
  41defc:	lsl	x0, x21, #3
  41df00:	ldr	x25, [x1]
  41df04:	stp	x23, x24, [sp, #48]
  41df08:	stp	x2, x0, [sp, #136]
  41df0c:	cmp	x25, #0x0
  41df10:	str	x1, [sp, #168]
  41df14:	ldr	x24, [x28, #152]
  41df18:	b.le	41df98 <_obstack_memory_used@@Base+0x6ed0>
  41df1c:	mov	x23, #0x0                   	// #0
  41df20:	stp	x19, x20, [sp, #16]
  41df24:	nop
  41df28:	ldr	x0, [sp, #136]
  41df2c:	ldr	x1, [x0]
  41df30:	ldr	x0, [x24]
  41df34:	ldr	x20, [x1, x23, lsl #3]
  41df38:	lsl	x22, x20, #4
  41df3c:	add	x0, x0, x22
  41df40:	ldrb	w1, [x0, #8]
  41df44:	cmp	w1, #0x4
  41df48:	b.ne	41df88 <_obstack_memory_used@@Base+0x6ec0>  // b.any
  41df4c:	ldr	w19, [x0, #8]
  41df50:	tst	w19, #0x3ff00
  41df54:	b.eq	41dfc0 <_obstack_memory_used@@Base+0x6ef8>  // b.none
  41df58:	ldr	w2, [x28, #160]
  41df5c:	mov	x1, x21
  41df60:	mov	x0, x28
  41df64:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41df68:	ubfx	x1, x19, #8, #10
  41df6c:	tbz	w19, #10, 41dfb4 <_obstack_memory_used@@Base+0x6eec>
  41df70:	tbz	w0, #0, 41df88 <_obstack_memory_used@@Base+0x6ec0>
  41df74:	tbnz	w1, #3, 41df88 <_obstack_memory_used@@Base+0x6ec0>
  41df78:	tbz	w1, #5, 41df80 <_obstack_memory_used@@Base+0x6eb8>
  41df7c:	tbz	w0, #1, 41df88 <_obstack_memory_used@@Base+0x6ec0>
  41df80:	tbz	w1, #7, 41dfc0 <_obstack_memory_used@@Base+0x6ef8>
  41df84:	tbnz	w0, #3, 41dfc0 <_obstack_memory_used@@Base+0x6ef8>
  41df88:	add	x23, x23, #0x1
  41df8c:	cmp	x23, x25
  41df90:	b.lt	41df28 <_obstack_memory_used@@Base+0x6e60>  // b.tstop
  41df94:	ldp	x19, x20, [sp, #16]
  41df98:	mov	w0, #0x0                   	// #0
  41df9c:	ldp	x21, x22, [sp, #32]
  41dfa0:	ldp	x23, x24, [sp, #48]
  41dfa4:	ldp	x25, x26, [sp, #64]
  41dfa8:	ldp	x27, x28, [sp, #80]
  41dfac:	ldp	x29, x30, [sp], #208
  41dfb0:	ret
  41dfb4:	tbz	w1, #3, 41df78 <_obstack_memory_used@@Base+0x6eb0>
  41dfb8:	tbz	w0, #0, 41df78 <_obstack_memory_used@@Base+0x6eb0>
  41dfbc:	b	41df88 <_obstack_memory_used@@Base+0x6ec0>
  41dfc0:	ldr	x5, [x28, #200]
  41dfc4:	mov	x1, #0x0                   	// #0
  41dfc8:	mov	x19, x5
  41dfcc:	mov	x3, x5
  41dfd0:	b	41dff4 <_obstack_memory_used@@Base+0x6f2c>
  41dfd4:	asr	x0, x0, #1
  41dfd8:	ldr	x4, [x28, #216]
  41dfdc:	add	x2, x0, x0, lsl #2
  41dfe0:	add	x2, x4, x2, lsl #3
  41dfe4:	ldr	x2, [x2, #8]
  41dfe8:	cmp	x21, x2
  41dfec:	b.gt	41e228 <_obstack_memory_used@@Base+0x7160>
  41dff0:	mov	x3, x0
  41dff4:	add	x0, x3, x1
  41dff8:	cmp	x3, x1
  41dffc:	b.gt	41dfd4 <_obstack_memory_used@@Base+0x6f0c>
  41e000:	cmp	x5, x1
  41e004:	b.le	41e230 <_obstack_memory_used@@Base+0x7168>
  41e008:	ldr	x0, [x28, #216]
  41e00c:	add	x1, x1, x1, lsl #2
  41e010:	add	x1, x0, x1, lsl #3
  41e014:	ldr	x0, [x1, #8]
  41e018:	cmp	x21, x0
  41e01c:	b.eq	41e02c <_obstack_memory_used@@Base+0x6f64>  // b.none
  41e020:	b	41e230 <_obstack_memory_used@@Base+0x7168>
  41e024:	ldurb	w0, [x1, #-8]
  41e028:	cbz	w0, 41e230 <_obstack_memory_used@@Base+0x7168>
  41e02c:	ldr	x0, [x1]
  41e030:	add	x1, x1, #0x28
  41e034:	cmp	x20, x0
  41e038:	b.ne	41e024 <_obstack_memory_used@@Base+0x6f5c>  // b.any
  41e03c:	lsl	x0, x20, #3
  41e040:	str	x0, [sp, #112]
  41e044:	str	wzr, [sp, #180]
  41e048:	cmp	x19, x5
  41e04c:	b.ge	41e178 <_obstack_memory_used@@Base+0x70b0>  // b.tcont
  41e050:	add	x4, x19, x19, lsl #2
  41e054:	add	x0, x20, x20, lsl #1
  41e058:	lsl	x27, x4, #3
  41e05c:	lsl	x0, x0, #3
  41e060:	str	x0, [sp, #120]
  41e064:	nop
  41e068:	ldr	x0, [x28, #216]
  41e06c:	add	x1, x0, x27
  41e070:	ldr	x0, [x0, x27]
  41e074:	cmp	x20, x0
  41e078:	b.ne	41e168 <_obstack_memory_used@@Base+0x70a0>  // b.any
  41e07c:	ldr	x0, [x1, #8]
  41e080:	cmp	x21, x0
  41e084:	b.ne	41e168 <_obstack_memory_used@@Base+0x70a0>  // b.any
  41e088:	ldp	x22, x0, [x1, #16]
  41e08c:	ldr	x25, [x24, #48]
  41e090:	subs	x26, x0, x22
  41e094:	b.ne	41e1dc <_obstack_memory_used@@Base+0x7114>  // b.any
  41e098:	ldr	x1, [x24, #40]
  41e09c:	ldr	x2, [sp, #120]
  41e0a0:	add	x1, x1, x2
  41e0a4:	ldr	x1, [x1, #16]
  41e0a8:	ldr	x1, [x1]
  41e0ac:	add	x1, x1, x1, lsl #1
  41e0b0:	add	x25, x25, x1, lsl #3
  41e0b4:	ldr	w2, [x28, #160]
  41e0b8:	add	x0, x21, x0
  41e0bc:	sub	x22, x0, x22
  41e0c0:	mov	x0, x28
  41e0c4:	sub	x1, x22, #0x1
  41e0c8:	str	xzr, [sp, #96]
  41e0cc:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41e0d0:	mov	w3, w0
  41e0d4:	ldr	x0, [sp, #144]
  41e0d8:	ldr	x5, [x28, #184]
  41e0dc:	ldr	x1, [x5, x0]
  41e0e0:	ldr	x0, [x5, x22, lsl #3]
  41e0e4:	cbz	x1, 41e0f0 <_obstack_memory_used@@Base+0x7028>
  41e0e8:	ldr	x1, [x1, #16]
  41e0ec:	str	x1, [sp, #96]
  41e0f0:	cbz	x0, 41e1f4 <_obstack_memory_used@@Base+0x712c>
  41e0f4:	ldr	x1, [x0, #80]
  41e0f8:	mov	x2, x25
  41e0fc:	add	x0, sp, #0xb8
  41e100:	str	w3, [sp, #104]
  41e104:	bl	419c38 <_obstack_memory_used@@Base+0x2b70>
  41e108:	str	w0, [sp, #180]
  41e10c:	ldr	w3, [sp, #104]
  41e110:	cbnz	w0, 41e3ac <_obstack_memory_used@@Base+0x72e4>
  41e114:	ldr	x5, [x28, #184]
  41e118:	mov	x1, x24
  41e11c:	add	x2, sp, #0xb8
  41e120:	add	x0, sp, #0xb4
  41e124:	str	x5, [sp, #104]
  41e128:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  41e12c:	ldr	x5, [sp, #104]
  41e130:	str	x0, [x5, x22, lsl #3]
  41e134:	ldr	x0, [sp, #200]
  41e138:	bl	4026b0 <free@plt>
  41e13c:	ldr	x1, [x28, #184]
  41e140:	ldr	x0, [x1, x22, lsl #3]
  41e144:	cbz	x0, 41e21c <_obstack_memory_used@@Base+0x7154>
  41e148:	cbnz	x26, 41e164 <_obstack_memory_used@@Base+0x709c>
  41e14c:	ldr	x0, [sp, #144]
  41e150:	ldr	x0, [x1, x0]
  41e154:	ldr	x1, [sp, #96]
  41e158:	ldr	x0, [x0, #16]
  41e15c:	cmp	x0, x1
  41e160:	b.gt	41e184 <_obstack_memory_used@@Base+0x70bc>
  41e164:	ldr	x5, [x28, #200]
  41e168:	add	x19, x19, #0x1
  41e16c:	add	x27, x27, #0x28
  41e170:	cmp	x19, x5
  41e174:	b.lt	41e068 <_obstack_memory_used@@Base+0x6fa0>  // b.tstop
  41e178:	ldr	x0, [sp, #168]
  41e17c:	ldr	x25, [x0]
  41e180:	b	41df88 <_obstack_memory_used@@Base+0x6ec0>
  41e184:	add	x22, x25, #0x8
  41e188:	add	x25, x25, #0x10
  41e18c:	mov	x2, x25
  41e190:	mov	x1, x22
  41e194:	mov	x3, x21
  41e198:	mov	x0, x28
  41e19c:	bl	41bf38 <_obstack_memory_used@@Base+0x4e70>
  41e1a0:	str	w0, [sp, #180]
  41e1a4:	cbnz	w0, 41e1c0 <_obstack_memory_used@@Base+0x70f8>
  41e1a8:	mov	x2, x25
  41e1ac:	mov	x1, x22
  41e1b0:	mov	x0, x28
  41e1b4:	bl	41dee0 <_obstack_memory_used@@Base+0x6e18>
  41e1b8:	str	w0, [sp, #180]
  41e1bc:	cbz	w0, 41e164 <_obstack_memory_used@@Base+0x709c>
  41e1c0:	ldp	x19, x20, [sp, #16]
  41e1c4:	ldp	x21, x22, [sp, #32]
  41e1c8:	ldp	x23, x24, [sp, #48]
  41e1cc:	ldp	x25, x26, [sp, #64]
  41e1d0:	ldp	x27, x28, [sp, #80]
  41e1d4:	ldp	x29, x30, [sp], #208
  41e1d8:	ret
  41e1dc:	ldr	x1, [x24, #24]
  41e1e0:	ldr	x2, [sp, #112]
  41e1e4:	ldr	x1, [x1, x2]
  41e1e8:	add	x1, x1, x1, lsl #1
  41e1ec:	add	x25, x25, x1, lsl #3
  41e1f0:	b	41e0b4 <_obstack_memory_used@@Base+0x6fec>
  41e1f4:	mov	x1, x24
  41e1f8:	mov	x2, x25
  41e1fc:	add	x0, sp, #0xb4
  41e200:	str	x5, [sp, #104]
  41e204:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  41e208:	ldr	x5, [sp, #104]
  41e20c:	ldr	x1, [x28, #184]
  41e210:	str	x0, [x5, x22, lsl #3]
  41e214:	ldr	x0, [x1, x22, lsl #3]
  41e218:	cbnz	x0, 41e148 <_obstack_memory_used@@Base+0x7080>
  41e21c:	ldr	w0, [sp, #180]
  41e220:	cbz	w0, 41e148 <_obstack_memory_used@@Base+0x7080>
  41e224:	b	41e1c0 <_obstack_memory_used@@Base+0x70f8>
  41e228:	add	x1, x0, #0x1
  41e22c:	b	41dff4 <_obstack_memory_used@@Base+0x6f2c>
  41e230:	ldr	x0, [x28, #152]
  41e234:	str	x0, [sp, #160]
  41e238:	ldr	x2, [x28, #232]
  41e23c:	ldr	x1, [x0]
  41e240:	cmp	x2, #0x0
  41e244:	ldr	x0, [x1, x22]
  41e248:	str	x0, [sp, #152]
  41e24c:	b.le	41e03c <_obstack_memory_used@@Base+0x6f74>
  41e250:	ldr	x7, [x28, #8]
  41e254:	str	xzr, [sp, #128]
  41e258:	ldr	x3, [sp, #128]
  41e25c:	ldr	x0, [x28, #248]
  41e260:	ldr	x26, [x0, x3, lsl #3]
  41e264:	ldr	x0, [x26, #8]
  41e268:	lsl	x0, x0, #4
  41e26c:	ldr	x0, [x1, x0]
  41e270:	ldr	x1, [sp, #152]
  41e274:	cmp	x1, x0
  41e278:	b.eq	41e29c <_obstack_memory_used@@Base+0x71d4>  // b.none
  41e27c:	ldr	x0, [sp, #128]
  41e280:	add	x0, x0, #0x1
  41e284:	str	x0, [sp, #128]
  41e288:	cmp	x0, x2
  41e28c:	b.ge	41e590 <_obstack_memory_used@@Base+0x74c8>  // b.tcont
  41e290:	ldr	x0, [sp, #160]
  41e294:	ldr	x1, [x0]
  41e298:	b	41e258 <_obstack_memory_used@@Base+0x7190>
  41e29c:	ldr	x0, [x26]
  41e2a0:	str	x0, [sp, #96]
  41e2a4:	ldr	x4, [x26, #32]
  41e2a8:	cmp	x4, #0x0
  41e2ac:	b.le	41e5c4 <_obstack_memory_used@@Base+0x74fc>
  41e2b0:	mov	x27, x21
  41e2b4:	mov	x22, #0x0                   	// #0
  41e2b8:	b	41e2c8 <_obstack_memory_used@@Base+0x7200>
  41e2bc:	ldr	x4, [x26, #32]
  41e2c0:	cmp	x22, x4
  41e2c4:	b.ge	41e554 <_obstack_memory_used@@Base+0x748c>  // b.tcont
  41e2c8:	ldr	x0, [x26, #40]
  41e2cc:	mov	x9, x27
  41e2d0:	ldr	x25, [sp, #96]
  41e2d4:	ldr	x3, [x0, x22, lsl #3]
  41e2d8:	ldr	x0, [x3, #8]
  41e2dc:	str	x0, [sp, #96]
  41e2e0:	sub	x2, x0, x25
  41e2e4:	cmp	x2, #0x0
  41e2e8:	add	x27, x27, x2
  41e2ec:	b.le	41e31c <_obstack_memory_used@@Base+0x7254>
  41e2f0:	ldr	x0, [x28, #48]
  41e2f4:	cmp	x0, x27
  41e2f8:	b.lt	41e348 <_obstack_memory_used@@Base+0x7280>  // b.tstop
  41e2fc:	add	x1, x7, x25
  41e300:	add	x0, x7, x9
  41e304:	stp	x7, x9, [sp, #104]
  41e308:	str	x3, [sp, #120]
  41e30c:	bl	402660 <memcmp@plt>
  41e310:	ldp	x7, x9, [sp, #104]
  41e314:	ldr	x3, [sp, #120]
  41e318:	cbnz	w0, 41e398 <_obstack_memory_used@@Base+0x72d0>
  41e31c:	mov	x2, x3
  41e320:	mov	x4, x21
  41e324:	mov	x3, x20
  41e328:	mov	x1, x26
  41e32c:	mov	x0, x28
  41e330:	bl	41dd68 <_obstack_memory_used@@Base+0x6ca0>
  41e334:	add	x22, x22, #0x1
  41e338:	cmp	w0, #0x1
  41e33c:	ldr	x7, [x28, #8]
  41e340:	b.ls	41e2bc <_obstack_memory_used@@Base+0x71f4>  // b.plast
  41e344:	b	41e1c0 <_obstack_memory_used@@Base+0x70f8>
  41e348:	ldr	x12, [x28, #88]
  41e34c:	stp	x3, x2, [sp, #104]
  41e350:	mov	x1, x27
  41e354:	mov	x0, x28
  41e358:	cmp	x12, x27
  41e35c:	b.lt	41e39c <_obstack_memory_used@@Base+0x72d4>  // b.tstop
  41e360:	str	x9, [sp, #120]
  41e364:	bl	4183c0 <_obstack_memory_used@@Base+0x12f8>
  41e368:	cbnz	w0, 41e1c0 <_obstack_memory_used@@Base+0x70f8>
  41e36c:	ldp	x3, x2, [sp, #104]
  41e370:	ldr	x7, [x28, #8]
  41e374:	ldr	x9, [sp, #120]
  41e378:	add	x1, x7, x25
  41e37c:	stp	x7, x9, [sp, #104]
  41e380:	add	x0, x7, x9
  41e384:	str	x3, [sp, #120]
  41e388:	bl	402660 <memcmp@plt>
  41e38c:	ldp	x7, x9, [sp, #104]
  41e390:	ldr	x3, [sp, #120]
  41e394:	cbz	w0, 41e31c <_obstack_memory_used@@Base+0x7254>
  41e398:	ldr	x4, [x26, #32]
  41e39c:	cmp	x22, x4
  41e3a0:	b.ge	41e3d4 <_obstack_memory_used@@Base+0x730c>  // b.tcont
  41e3a4:	ldr	x2, [x28, #232]
  41e3a8:	b	41e27c <_obstack_memory_used@@Base+0x71b4>
  41e3ac:	ldr	x0, [sp, #200]
  41e3b0:	bl	4026b0 <free@plt>
  41e3b4:	ldr	w0, [sp, #180]
  41e3b8:	ldp	x19, x20, [sp, #16]
  41e3bc:	ldp	x21, x22, [sp, #32]
  41e3c0:	ldp	x23, x24, [sp, #48]
  41e3c4:	ldp	x25, x26, [sp, #64]
  41e3c8:	ldp	x27, x28, [sp, #80]
  41e3cc:	ldp	x29, x30, [sp], #208
  41e3d0:	ret
  41e3d4:	cbnz	x22, 41e54c <_obstack_memory_used@@Base+0x7484>
  41e3d8:	cmp	x21, x25
  41e3dc:	b.lt	41e3a4 <_obstack_memory_used@@Base+0x72dc>  // b.tstop
  41e3e0:	ldr	x0, [x26]
  41e3e4:	sub	x0, x25, x0
  41e3e8:	cmp	x0, #0x0
  41e3ec:	b.le	41e414 <_obstack_memory_used@@Base+0x734c>
  41e3f0:	ldr	x0, [x28, #48]
  41e3f4:	cmp	x0, x9
  41e3f8:	b.le	41e564 <_obstack_memory_used@@Base+0x749c>
  41e3fc:	add	x0, x7, x25
  41e400:	ldrb	w1, [x7, x9]
  41e404:	add	x9, x9, #0x1
  41e408:	ldurb	w0, [x0, #-1]
  41e40c:	cmp	w1, w0
  41e410:	b.ne	41e3a4 <_obstack_memory_used@@Base+0x72dc>  // b.any
  41e414:	ldr	x0, [x28, #184]
  41e418:	ldr	x1, [x0, x25, lsl #3]
  41e41c:	cbz	x1, 41e514 <_obstack_memory_used@@Base+0x744c>
  41e420:	ldr	x4, [x1, #16]
  41e424:	cmp	x4, #0x0
  41e428:	b.le	41e514 <_obstack_memory_used@@Base+0x744c>
  41e42c:	ldr	x0, [sp, #160]
  41e430:	ldr	x6, [x1, #24]
  41e434:	ldr	x3, [x0]
  41e438:	mov	x0, #0x0                   	// #0
  41e43c:	b	41e448 <_obstack_memory_used@@Base+0x7380>
  41e440:	cmp	x4, x0
  41e444:	b.eq	41e514 <_obstack_memory_used@@Base+0x744c>  // b.none
  41e448:	ldr	x22, [x6, x0, lsl #3]
  41e44c:	add	x0, x0, #0x1
  41e450:	lsl	x1, x22, #4
  41e454:	add	x2, x3, x1
  41e458:	ldrb	w2, [x2, #8]
  41e45c:	cmp	w2, #0x9
  41e460:	b.ne	41e440 <_obstack_memory_used@@Base+0x7378>  // b.any
  41e464:	ldr	x1, [x3, x1]
  41e468:	ldr	x2, [sp, #152]
  41e46c:	cmp	x2, x1
  41e470:	b.ne	41e440 <_obstack_memory_used@@Base+0x7378>  // b.any
  41e474:	cmn	x22, #0x1
  41e478:	b.eq	41e514 <_obstack_memory_used@@Base+0x744c>  // b.none
  41e47c:	ldr	x1, [x26, #16]
  41e480:	ldr	x27, [x26]
  41e484:	cbz	x1, 41e51c <_obstack_memory_used@@Base+0x7454>
  41e488:	ldr	x2, [x26, #8]
  41e48c:	mov	x3, x27
  41e490:	mov	x5, x25
  41e494:	mov	x4, x22
  41e498:	mov	x0, x28
  41e49c:	mov	w6, #0x9                   	// #9
  41e4a0:	stp	x7, x9, [sp, #96]
  41e4a4:	bl	41d1f0 <_obstack_memory_used@@Base+0x6128>
  41e4a8:	cmp	w0, #0x1
  41e4ac:	ldp	x7, x9, [sp, #96]
  41e4b0:	b.eq	41e514 <_obstack_memory_used@@Base+0x744c>  // b.none
  41e4b4:	cbnz	w0, 41e1c0 <_obstack_memory_used@@Base+0x70f8>
  41e4b8:	ldp	x0, x1, [x26, #24]
  41e4bc:	cmp	x1, x0
  41e4c0:	b.eq	41e598 <_obstack_memory_used@@Base+0x74d0>  // b.none
  41e4c4:	mov	x1, #0x28                  	// #40
  41e4c8:	mov	x0, #0x1                   	// #1
  41e4cc:	str	x9, [sp, #96]
  41e4d0:	bl	402520 <calloc@plt>
  41e4d4:	mov	x2, x0
  41e4d8:	cbz	x0, 41e540 <_obstack_memory_used@@Base+0x7478>
  41e4dc:	ldp	x0, x1, [x26, #32]
  41e4e0:	mov	x4, x21
  41e4e4:	mov	x3, x20
  41e4e8:	str	x2, [x1, x0, lsl #3]
  41e4ec:	add	x6, x0, #0x1
  41e4f0:	stp	x22, x25, [x2]
  41e4f4:	mov	x1, x26
  41e4f8:	mov	x0, x28
  41e4fc:	str	x6, [x26, #32]
  41e500:	bl	41dd68 <_obstack_memory_used@@Base+0x6ca0>
  41e504:	cmp	w0, #0x1
  41e508:	ldr	x7, [x28, #8]
  41e50c:	ldr	x9, [sp, #96]
  41e510:	b.hi	41e1c0 <_obstack_memory_used@@Base+0x70f8>  // b.pmore
  41e514:	add	x25, x25, #0x1
  41e518:	b	41e3d8 <_obstack_memory_used@@Base+0x7310>
  41e51c:	sub	x1, x25, x27
  41e520:	mov	x0, #0x18                  	// #24
  41e524:	add	x1, x1, #0x1
  41e528:	stp	x7, x9, [sp, #96]
  41e52c:	bl	402520 <calloc@plt>
  41e530:	str	x0, [x26, #16]
  41e534:	mov	x1, x0
  41e538:	ldp	x7, x9, [sp, #96]
  41e53c:	cbnz	x0, 41e488 <_obstack_memory_used@@Base+0x73c0>
  41e540:	mov	w0, #0xc                   	// #12
  41e544:	ldp	x19, x20, [sp, #16]
  41e548:	b	41e1c4 <_obstack_memory_used@@Base+0x70fc>
  41e54c:	mov	x27, x9
  41e550:	str	x25, [sp, #96]
  41e554:	ldr	x0, [sp, #96]
  41e558:	mov	x9, x27
  41e55c:	add	x25, x0, #0x1
  41e560:	b	41e3d8 <_obstack_memory_used@@Base+0x7310>
  41e564:	ldr	x0, [x28, #88]
  41e568:	cmp	x0, x9
  41e56c:	b.le	41e3a4 <_obstack_memory_used@@Base+0x72dc>
  41e570:	add	w1, w9, #0x1
  41e574:	mov	x0, x28
  41e578:	str	x9, [sp, #96]
  41e57c:	bl	418280 <_obstack_memory_used@@Base+0x11b8>
  41e580:	cbnz	w0, 41e1c0 <_obstack_memory_used@@Base+0x70f8>
  41e584:	ldr	x7, [x28, #8]
  41e588:	ldr	x9, [sp, #96]
  41e58c:	b	41e3fc <_obstack_memory_used@@Base+0x7334>
  41e590:	ldr	x5, [x28, #200]
  41e594:	b	41e03c <_obstack_memory_used@@Base+0x6f74>
  41e598:	ldr	x0, [x26, #40]
  41e59c:	lsl	x1, x1, #1
  41e5a0:	add	x27, x1, #0x1
  41e5a4:	str	x9, [sp, #96]
  41e5a8:	lsl	x1, x27, #3
  41e5ac:	bl	402550 <realloc@plt>
  41e5b0:	cbz	x0, 41e540 <_obstack_memory_used@@Base+0x7478>
  41e5b4:	str	x27, [x26, #24]
  41e5b8:	str	x0, [x26, #40]
  41e5bc:	ldr	x9, [sp, #96]
  41e5c0:	b	41e4c4 <_obstack_memory_used@@Base+0x73fc>
  41e5c4:	mov	x9, x21
  41e5c8:	ldr	x25, [sp, #96]
  41e5cc:	b	41e3d8 <_obstack_memory_used@@Base+0x7310>
  41e5d0:	stp	x29, x30, [sp, #-112]!
  41e5d4:	mov	x29, sp
  41e5d8:	stp	x21, x22, [sp, #32]
  41e5dc:	mov	x21, x0
  41e5e0:	stp	x23, x24, [sp, #48]
  41e5e4:	ldp	x24, x0, [x1, #184]
  41e5e8:	stp	x19, x20, [sp, #16]
  41e5ec:	mov	x19, x1
  41e5f0:	ldr	x20, [x1, #72]
  41e5f4:	ldr	x23, [x1, #152]
  41e5f8:	cmp	x0, x20
  41e5fc:	b.ge	41e62c <_obstack_memory_used@@Base+0x7564>  // b.tcont
  41e600:	mov	x22, x2
  41e604:	str	x2, [x24, x20, lsl #3]
  41e608:	str	x20, [x1, #192]
  41e60c:	ldr	x0, [x23, #152]
  41e610:	cbnz	x0, 41e6f0 <_obstack_memory_used@@Base+0x7628>
  41e614:	mov	x0, x22
  41e618:	ldp	x19, x20, [sp, #16]
  41e61c:	ldp	x21, x22, [sp, #32]
  41e620:	ldp	x23, x24, [sp, #48]
  41e624:	ldp	x29, x30, [sp], #112
  41e628:	ret
  41e62c:	ldr	x0, [x24, x20, lsl #3]
  41e630:	cbz	x0, 41e6e4 <_obstack_memory_used@@Base+0x761c>
  41e634:	ldr	x0, [x0, #80]
  41e638:	cbz	x2, 41e6a4 <_obstack_memory_used@@Base+0x75dc>
  41e63c:	ldr	x24, [x2, #80]
  41e640:	mov	x2, x0
  41e644:	add	x0, sp, #0x58
  41e648:	mov	x1, x24
  41e64c:	bl	419c38 <_obstack_memory_used@@Base+0x2b70>
  41e650:	str	w0, [x21]
  41e654:	cbnz	w0, 41e744 <_obstack_memory_used@@Base+0x767c>
  41e658:	ldr	w2, [x19, #160]
  41e65c:	mov	x0, x19
  41e660:	ldr	x1, [x19, #72]
  41e664:	str	x25, [sp, #64]
  41e668:	sub	x1, x1, #0x1
  41e66c:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41e670:	ldr	x25, [x19, #184]
  41e674:	mov	w3, w0
  41e678:	add	x2, sp, #0x58
  41e67c:	mov	x1, x23
  41e680:	mov	x0, x21
  41e684:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  41e688:	str	x0, [x25, x20, lsl #3]
  41e68c:	mov	x22, x0
  41e690:	cbz	x24, 41e74c <_obstack_memory_used@@Base+0x7684>
  41e694:	ldr	x0, [sp, #104]
  41e698:	bl	4026b0 <free@plt>
  41e69c:	ldr	x25, [sp, #64]
  41e6a0:	b	41e60c <_obstack_memory_used@@Base+0x7544>
  41e6a4:	ldp	x2, x3, [x0]
  41e6a8:	stp	x2, x3, [sp, #88]
  41e6ac:	ldr	w2, [x19, #160]
  41e6b0:	ldr	x3, [x0, #16]
  41e6b4:	sub	x1, x20, #0x1
  41e6b8:	mov	x0, x19
  41e6bc:	str	x3, [sp, #104]
  41e6c0:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41e6c4:	mov	w3, w0
  41e6c8:	add	x2, sp, #0x58
  41e6cc:	mov	x1, x23
  41e6d0:	mov	x0, x21
  41e6d4:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  41e6d8:	mov	x22, x0
  41e6dc:	str	x0, [x24, x20, lsl #3]
  41e6e0:	b	41e60c <_obstack_memory_used@@Base+0x7544>
  41e6e4:	mov	x22, x2
  41e6e8:	str	x2, [x24, x20, lsl #3]
  41e6ec:	b	41e60c <_obstack_memory_used@@Base+0x7544>
  41e6f0:	cbz	x22, 41e744 <_obstack_memory_used@@Base+0x767c>
  41e6f4:	add	x23, x22, #0x10
  41e6f8:	add	x24, x22, #0x18
  41e6fc:	mov	x1, x23
  41e700:	mov	x2, x24
  41e704:	mov	x3, x20
  41e708:	mov	x0, x19
  41e70c:	bl	41bf38 <_obstack_memory_used@@Base+0x4e70>
  41e710:	str	w0, [x21]
  41e714:	cbnz	w0, 41e744 <_obstack_memory_used@@Base+0x767c>
  41e718:	ldrb	w0, [x22, #104]
  41e71c:	tbz	w0, #6, 41e614 <_obstack_memory_used@@Base+0x754c>
  41e720:	mov	x2, x24
  41e724:	mov	x1, x23
  41e728:	mov	x0, x19
  41e72c:	bl	41dee0 <_obstack_memory_used@@Base+0x6e18>
  41e730:	str	w0, [x21]
  41e734:	cbnz	w0, 41e744 <_obstack_memory_used@@Base+0x767c>
  41e738:	ldr	x0, [x19, #184]
  41e73c:	ldr	x22, [x0, x20, lsl #3]
  41e740:	b	41e614 <_obstack_memory_used@@Base+0x754c>
  41e744:	mov	x22, #0x0                   	// #0
  41e748:	b	41e614 <_obstack_memory_used@@Base+0x754c>
  41e74c:	ldr	x25, [sp, #64]
  41e750:	b	41e60c <_obstack_memory_used@@Base+0x7544>
  41e754:	nop
  41e758:	stp	x29, x30, [sp, #-160]!
  41e75c:	mov	x29, sp
  41e760:	stp	x21, x22, [sp, #32]
  41e764:	mov	x21, x1
  41e768:	mov	x1, #0x1                   	// #1
  41e76c:	stp	x19, x20, [sp, #16]
  41e770:	mov	x20, x0
  41e774:	mov	x0, #0x8                   	// #8
  41e778:	stp	x1, x1, [sp, #136]
  41e77c:	ldp	x22, x19, [x21, #16]
  41e780:	bl	402440 <malloc@plt>
  41e784:	str	x0, [sp, #152]
  41e788:	cbz	x0, 41e9ec <_obstack_memory_used@@Base+0x7924>
  41e78c:	mov	x4, x0
  41e790:	mov	x2, x19
  41e794:	add	x3, sp, #0x88
  41e798:	mov	x1, x21
  41e79c:	mov	x0, x20
  41e7a0:	str	x22, [x4]
  41e7a4:	bl	41fb58 <_obstack_memory_used@@Base+0x8a90>
  41e7a8:	cbnz	w0, 41ea04 <_obstack_memory_used@@Base+0x793c>
  41e7ac:	add	x0, x21, #0x30
  41e7b0:	stp	x23, x24, [sp, #48]
  41e7b4:	stp	x25, x26, [sp, #64]
  41e7b8:	mov	w25, #0x0                   	// #0
  41e7bc:	stp	x27, x28, [sp, #80]
  41e7c0:	str	x0, [sp, #112]
  41e7c4:	add	x0, x21, #0x28
  41e7c8:	str	x0, [sp, #120]
  41e7cc:	cmp	x19, #0x0
  41e7d0:	b.le	41e9a0 <_obstack_memory_used@@Base+0x78d8>
  41e7d4:	ldr	x0, [x21]
  41e7d8:	lsl	x26, x19, #3
  41e7dc:	ldr	w1, [x20, #224]
  41e7e0:	ldr	x2, [x0, x19, lsl #3]
  41e7e4:	cmp	x2, #0x0
  41e7e8:	csinc	w25, wzr, w25, ne  // ne = any
  41e7ec:	cmp	w1, w25
  41e7f0:	b.lt	41e9b4 <_obstack_memory_used@@Base+0x78ec>  // b.tstop
  41e7f4:	ldr	x0, [x20, #184]
  41e7f8:	sub	x19, x19, #0x1
  41e7fc:	add	x0, x0, x26
  41e800:	ldur	x22, [x0, #-8]
  41e804:	str	xzr, [sp, #144]
  41e808:	cbz	x22, 41e94c <_obstack_memory_used@@Base+0x7884>
  41e80c:	ldr	x0, [x22, #40]
  41e810:	add	x22, x22, #0x20
  41e814:	ldr	x23, [x20, #152]
  41e818:	cmp	x0, #0x0
  41e81c:	b.le	41e94c <_obstack_memory_used@@Base+0x7884>
  41e820:	mov	x24, #0x0                   	// #0
  41e824:	b	41e8b8 <_obstack_memory_used@@Base+0x77f0>
  41e828:	mov	x2, x19
  41e82c:	mov	x0, x20
  41e830:	bl	41b5d0 <_obstack_memory_used@@Base+0x4508>
  41e834:	tst	w0, #0xff
  41e838:	b.eq	41e8a8 <_obstack_memory_used@@Base+0x77e0>  // b.none
  41e83c:	ldr	x0, [x21]
  41e840:	ldr	x0, [x0, x26]
  41e844:	cbz	x0, 41e8a8 <_obstack_memory_used@@Base+0x77e0>
  41e848:	ldr	x2, [x23, #24]
  41e84c:	add	x1, x0, #0x18
  41e850:	ldr	x0, [x0, #16]
  41e854:	ldr	x2, [x2, x27, lsl #3]
  41e858:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41e85c:	cbz	x0, 41e8a8 <_obstack_memory_used@@Base+0x77e0>
  41e860:	mov	w6, #0x1                   	// #1
  41e864:	ldr	x0, [x21, #40]
  41e868:	cbz	x0, 41e894 <_obstack_memory_used@@Base+0x77cc>
  41e86c:	ldr	x0, [x23, #24]
  41e870:	add	x4, x19, w6, sxtw
  41e874:	ldp	x2, x1, [sp, #112]
  41e878:	mov	x6, x19
  41e87c:	ldr	x3, [x0, x27, lsl #3]
  41e880:	mov	x5, x27
  41e884:	mov	x0, x20
  41e888:	bl	419008 <_obstack_memory_used@@Base+0x1f40>
  41e88c:	tst	w0, #0xff
  41e890:	b.ne	41e8a8 <_obstack_memory_used@@Base+0x77e0>  // b.any
  41e894:	mov	x1, x27
  41e898:	add	x0, sp, #0x88
  41e89c:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  41e8a0:	tst	w0, #0xff
  41e8a4:	b.eq	41e998 <_obstack_memory_used@@Base+0x78d0>  // b.none
  41e8a8:	ldr	x0, [x22, #8]
  41e8ac:	add	x24, x24, #0x1
  41e8b0:	cmp	x24, x0
  41e8b4:	b.ge	41e94c <_obstack_memory_used@@Base+0x7884>  // b.tcont
  41e8b8:	ldr	x0, [x22, #16]
  41e8bc:	ldr	x1, [x23]
  41e8c0:	ldr	x27, [x0, x24, lsl #3]
  41e8c4:	lsl	x28, x27, #4
  41e8c8:	add	x1, x1, x28
  41e8cc:	ldrb	w0, [x1, #10]
  41e8d0:	tbz	w0, #4, 41e828 <_obstack_memory_used@@Base+0x7760>
  41e8d4:	ldr	x8, [x20, #152]
  41e8d8:	mov	x4, x19
  41e8dc:	ldr	x9, [x21, #24]
  41e8e0:	mov	x1, x8
  41e8e4:	mov	x3, x20
  41e8e8:	mov	x2, x27
  41e8ec:	stp	x9, x8, [sp, #96]
  41e8f0:	ldr	x0, [x1], #216
  41e8f4:	bl	41cf50 <_obstack_memory_used@@Base+0x5e88>
  41e8f8:	mov	w6, w0
  41e8fc:	cmp	w0, #0x0
  41e900:	b.le	41e990 <_obstack_memory_used@@Base+0x78c8>
  41e904:	ldr	x9, [sp, #96]
  41e908:	add	x0, x19, w0, sxtw
  41e90c:	cmp	x9, x0
  41e910:	b.lt	41e864 <_obstack_memory_used@@Base+0x779c>  // b.tstop
  41e914:	ldr	x1, [x21]
  41e918:	ldr	x8, [sp, #104]
  41e91c:	ldr	x0, [x1, x0, lsl #3]
  41e920:	cbz	x0, 41e940 <_obstack_memory_used@@Base+0x7878>
  41e924:	ldr	x2, [x8, #24]
  41e928:	add	x1, x0, #0x18
  41e92c:	ldr	x0, [x0, #16]
  41e930:	ldr	x2, [x2, x27, lsl #3]
  41e934:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41e938:	cbnz	x0, 41e864 <_obstack_memory_used@@Base+0x779c>
  41e93c:	nop
  41e940:	ldr	x1, [x23]
  41e944:	add	x1, x1, x28
  41e948:	b	41e828 <_obstack_memory_used@@Base+0x7760>
  41e94c:	add	x3, sp, #0x88
  41e950:	mov	x2, x19
  41e954:	mov	x1, x21
  41e958:	mov	x0, x20
  41e95c:	bl	41fb58 <_obstack_memory_used@@Base+0x8a90>
  41e960:	mov	w22, w0
  41e964:	cbz	w0, 41e7cc <_obstack_memory_used@@Base+0x7704>
  41e968:	ldp	x23, x24, [sp, #48]
  41e96c:	ldp	x25, x26, [sp, #64]
  41e970:	ldp	x27, x28, [sp, #80]
  41e974:	ldr	x0, [sp, #152]
  41e978:	bl	4026b0 <free@plt>
  41e97c:	mov	w0, w22
  41e980:	ldp	x19, x20, [sp, #16]
  41e984:	ldp	x21, x22, [sp, #32]
  41e988:	ldp	x29, x30, [sp], #160
  41e98c:	ret
  41e990:	b.eq	41e940 <_obstack_memory_used@@Base+0x7878>  // b.none
  41e994:	b	41e864 <_obstack_memory_used@@Base+0x779c>
  41e998:	mov	w22, #0xc                   	// #12
  41e99c:	b	41e968 <_obstack_memory_used@@Base+0x78a0>
  41e9a0:	mov	w22, #0x0                   	// #0
  41e9a4:	ldp	x23, x24, [sp, #48]
  41e9a8:	ldp	x25, x26, [sp, #64]
  41e9ac:	ldp	x27, x28, [sp, #80]
  41e9b0:	b	41e974 <_obstack_memory_used@@Base+0x78ac>
  41e9b4:	mov	x2, x26
  41e9b8:	mov	w1, #0x0                   	// #0
  41e9bc:	bl	402510 <memset@plt>
  41e9c0:	mov	w22, #0x0                   	// #0
  41e9c4:	ldr	x0, [sp, #152]
  41e9c8:	bl	4026b0 <free@plt>
  41e9cc:	mov	w0, w22
  41e9d0:	ldp	x19, x20, [sp, #16]
  41e9d4:	ldp	x21, x22, [sp, #32]
  41e9d8:	ldp	x23, x24, [sp, #48]
  41e9dc:	ldp	x25, x26, [sp, #64]
  41e9e0:	ldp	x27, x28, [sp, #80]
  41e9e4:	ldp	x29, x30, [sp], #160
  41e9e8:	ret
  41e9ec:	mov	w22, #0xc                   	// #12
  41e9f0:	mov	w0, w22
  41e9f4:	ldp	x19, x20, [sp, #16]
  41e9f8:	ldp	x21, x22, [sp, #32]
  41e9fc:	ldp	x29, x30, [sp], #160
  41ea00:	ret
  41ea04:	mov	w22, w0
  41ea08:	b	41e974 <_obstack_memory_used@@Base+0x78ac>
  41ea0c:	nop
  41ea10:	sub	sp, sp, #0x260
  41ea14:	stp	x29, x30, [sp]
  41ea18:	mov	x29, sp
  41ea1c:	stp	x19, x20, [sp, #16]
  41ea20:	mov	x20, x3
  41ea24:	ldr	w3, [sp, #608]
  41ea28:	stp	x21, x22, [sp, #32]
  41ea2c:	mov	x22, x0
  41ea30:	mov	x21, x4
  41ea34:	mov	x19, x5
  41ea38:	stp	x25, x26, [sp, #64]
  41ea3c:	stp	x27, x28, [sp, #80]
  41ea40:	str	x0, [sp, #104]
  41ea44:	str	x6, [sp, #120]
  41ea48:	str	w3, [sp, #144]
  41ea4c:	str	x2, [sp, #152]
  41ea50:	mov	x2, #0x100                 	// #256
  41ea54:	str	x1, [sp, #176]
  41ea58:	mov	w1, #0x0                   	// #0
  41ea5c:	str	x7, [sp, #256]
  41ea60:	ldr	x27, [x0]
  41ea64:	add	x0, sp, #0x160
  41ea68:	bl	402510 <memset@plt>
  41ea6c:	str	x27, [sp, #504]
  41ea70:	ldr	x26, [x22, #32]
  41ea74:	cbz	x26, 41ea8c <_obstack_memory_used@@Base+0x79c4>
  41ea78:	ldrb	w0, [x22, #56]
  41ea7c:	tst	x0, #0x8
  41ea80:	ccmp	x20, x21, #0x4, ne  // ne = any
  41ea84:	b.ne	41ee64 <_obstack_memory_used@@Base+0x7d9c>  // b.any
  41ea88:	mov	x26, #0x0                   	// #0
  41ea8c:	ldr	x0, [sp, #104]
  41ea90:	str	xzr, [sp, #224]
  41ea94:	ldr	x3, [sp, #120]
  41ea98:	ldr	x0, [x0, #48]
  41ea9c:	cmp	x0, x3
  41eaa0:	b.cs	41eabc <_obstack_memory_used@@Base+0x79f4>  // b.hs, b.nlast
  41eaa4:	sub	x1, x3, #0x1
  41eaa8:	sub	x2, x0, x1
  41eaac:	sub	x0, x1, x0
  41eab0:	str	x0, [sp, #224]
  41eab4:	add	x0, x3, x2
  41eab8:	str	x0, [sp, #120]
  41eabc:	ldr	x4, [sp, #104]
  41eac0:	ldr	x0, [x4, #16]
  41eac4:	cbz	x0, 41f61c <_obstack_memory_used@@Base+0x8554>
  41eac8:	ldr	x0, [x27, #72]
  41eacc:	cbz	x0, 41f61c <_obstack_memory_used@@Base+0x8554>
  41ead0:	ldr	x1, [x27, #80]
  41ead4:	cbz	x1, 41f61c <_obstack_memory_used@@Base+0x8554>
  41ead8:	ldr	x2, [x27, #88]
  41eadc:	cbz	x2, 41f61c <_obstack_memory_used@@Base+0x8554>
  41eae0:	ldr	x3, [x27, #96]
  41eae4:	cbz	x3, 41f61c <_obstack_memory_used@@Base+0x8554>
  41eae8:	ldr	x0, [x0, #16]
  41eaec:	cbnz	x0, 41eb28 <_obstack_memory_used@@Base+0x7a60>
  41eaf0:	ldr	x0, [x1, #16]
  41eaf4:	cbnz	x0, 41eb28 <_obstack_memory_used@@Base+0x7a60>
  41eaf8:	ldr	x0, [x2, #16]
  41eafc:	cbz	x0, 41eb08 <_obstack_memory_used@@Base+0x7a40>
  41eb00:	ldrsb	w0, [x4, #56]
  41eb04:	tbnz	w0, #31, 41eb28 <_obstack_memory_used@@Base+0x7a60>
  41eb08:	mov	w0, #0x1                   	// #1
  41eb0c:	str	w0, [sp, #116]
  41eb10:	cmp	x20, #0x0
  41eb14:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  41eb18:	b.ne	41f5fc <_obstack_memory_used@@Base+0x8534>  // b.any
  41eb1c:	mov	x21, #0x0                   	// #0
  41eb20:	mov	x20, #0x0                   	// #0
  41eb24:	nop
  41eb28:	ldr	x0, [sp, #120]
  41eb2c:	cbnz	x0, 41ee54 <_obstack_memory_used@@Base+0x7d8c>
  41eb30:	ldr	x0, [x27, #152]
  41eb34:	cmp	x0, #0x0
  41eb38:	cset	w0, ne  // ne = any
  41eb3c:	str	w0, [sp, #160]
  41eb40:	str	w0, [sp, #200]
  41eb44:	ldr	x8, [sp, #104]
  41eb48:	add	x0, sp, #0x160
  41eb4c:	ldr	w6, [x27, #180]
  41eb50:	ldr	x2, [x27, #16]
  41eb54:	str	w6, [sp, #496]
  41eb58:	ldr	x3, [x8, #24]
  41eb5c:	add	x1, x2, #0x1
  41eb60:	ldr	x7, [sp, #152]
  41eb64:	sxtw	x2, w6
  41eb68:	ldr	x8, [x8, #40]
  41eb6c:	cmp	x1, x2
  41eb70:	ldr	x5, [sp, #176]
  41eb74:	csel	x1, x1, x2, ge  // ge = tcont
  41eb78:	add	x4, x7, #0x1
  41eb7c:	str	x5, [sp, #352]
  41eb80:	and	x5, x3, #0x400000
  41eb84:	cmp	x1, x4
  41eb88:	orr	x2, x5, x8
  41eb8c:	csel	x1, x1, x4, le
  41eb90:	cmp	x2, #0x0
  41eb94:	ldrb	w2, [x27, #176]
  41eb98:	ubfx	w3, w3, #22, #1
  41eb9c:	strb	w3, [sp, #488]
  41eba0:	cset	w3, ne  // ne = any
  41eba4:	strb	w3, [sp, #491]
  41eba8:	ubfx	x3, x2, #2, #1
  41ebac:	ubfx	x2, x2, #3, #1
  41ebb0:	str	x8, [sp, #240]
  41ebb4:	stp	x7, x7, [sp, #432]
  41ebb8:	stp	x7, x7, [sp, #448]
  41ebbc:	str	x8, [sp, #472]
  41ebc0:	strb	w3, [sp, #489]
  41ebc4:	strb	w2, [sp, #490]
  41ebc8:	bl	4176b0 <_obstack_memory_used@@Base+0x5e8>
  41ebcc:	str	w0, [sp, #116]
  41ebd0:	cbnz	w0, 41f908 <_obstack_memory_used@@Base+0x8840>
  41ebd4:	ldrb	w0, [x27, #176]
  41ebd8:	add	x1, x27, #0xb8
  41ebdc:	ldrb	w2, [sp, #491]
  41ebe0:	str	x1, [sp, #480]
  41ebe4:	ubfx	x0, x0, #4, #1
  41ebe8:	strb	w0, [sp, #494]
  41ebec:	cbnz	w2, 41ec08 <_obstack_memory_used@@Base+0x7b40>
  41ebf0:	ldr	x0, [sp, #176]
  41ebf4:	str	x0, [sp, #360]
  41ebf8:	ldr	w0, [x27, #180]
  41ebfc:	ldr	x1, [sp, #152]
  41ec00:	cmp	w0, #0x1
  41ec04:	b.le	41ec0c <_obstack_memory_used@@Base+0x7b44>
  41ec08:	mov	x1, #0x0                   	// #0
  41ec0c:	ldr	x0, [sp, #104]
  41ec10:	mov	x2, #0xffffffffffffffff    	// #-1
  41ec14:	ldr	x22, [x27, #152]
  41ec18:	stp	x1, x1, [sp, #400]
  41ec1c:	ldrb	w0, [x0, #56]
  41ec20:	stp	x19, x19, [sp, #448]
  41ec24:	cmp	xzr, x22, lsl #1
  41ec28:	ubfx	x0, x0, #7, #1
  41ec2c:	strb	w0, [sp, #493]
  41ec30:	ldr	w0, [sp, #144]
  41ec34:	lsl	x19, x22, #1
  41ec38:	str	w0, [sp, #512]
  41ec3c:	str	x2, [sp, #520]
  41ec40:	b.ge	41ec84 <_obstack_memory_used@@Base+0x7bbc>  // b.tcont
  41ec44:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  41ec48:	movk	x0, #0x666, lsl #48
  41ec4c:	cmp	x19, x0
  41ec50:	b.gt	41f900 <_obstack_memory_used@@Base+0x8838>
  41ec54:	add	x0, x19, x22, lsl #3
  41ec58:	lsl	x0, x0, #3
  41ec5c:	bl	402440 <malloc@plt>
  41ec60:	mov	x1, x0
  41ec64:	lsl	x0, x22, #4
  41ec68:	mov	x22, x1
  41ec6c:	str	x1, [sp, #568]
  41ec70:	bl	402440 <malloc@plt>
  41ec74:	str	x0, [sp, #600]
  41ec78:	cmp	x0, #0x0
  41ec7c:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  41ec80:	b.eq	41f900 <_obstack_memory_used@@Base+0x8838>  // b.none
  41ec84:	mov	w0, #0x1                   	// #1
  41ec88:	str	w0, [sp, #576]
  41ec8c:	ldr	x0, [sp, #120]
  41ec90:	str	x19, [sp, #560]
  41ec94:	str	x19, [sp, #592]
  41ec98:	cmp	x0, #0x1
  41ec9c:	b.ls	41f8f4 <_obstack_memory_used@@Base+0x882c>  // b.plast
  41eca0:	ldr	x0, [sp, #416]
  41eca4:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
  41eca8:	cmp	x0, x1
  41ecac:	b.hi	41f900 <_obstack_memory_used@@Base+0x8838>  // b.pmore
  41ecb0:	add	x0, x0, #0x1
  41ecb4:	lsl	x0, x0, #3
  41ecb8:	bl	402440 <malloc@plt>
  41ecbc:	str	x0, [sp, #536]
  41ecc0:	mov	x28, x0
  41ecc4:	cbz	x0, 41fa6c <_obstack_memory_used@@Base+0x89a4>
  41ecc8:	ldr	x0, [sp, #144]
  41eccc:	mov	w1, #0x6                   	// #6
  41ecd0:	mov	w2, #0x1                   	// #1
  41ecd4:	str	x20, [sp, #288]
  41ecd8:	tst	x0, #0x1
  41ecdc:	mov	w0, #0x4                   	// #4
  41ece0:	csel	w1, w0, w1, ne  // ne = any
  41ece4:	cmp	x20, x21
  41ece8:	str	w1, [sp, #464]
  41ecec:	csel	x1, x20, x21, ge  // ge = tcont
  41ecf0:	str	x1, [sp, #128]
  41ecf4:	mov	w1, #0x8                   	// #8
  41ecf8:	cneg	w2, w2, gt
  41ecfc:	str	w1, [sp, #164]
  41ed00:	ldr	w1, [x27, #180]
  41ed04:	str	w2, [sp, #204]
  41ed08:	csel	x2, x20, x21, le
  41ed0c:	str	x2, [sp, #168]
  41ed10:	str	w1, [sp, #236]
  41ed14:	cbz	x26, 41ed68 <_obstack_memory_used@@Base+0x7ca0>
  41ed18:	ldr	w1, [sp, #236]
  41ed1c:	cmp	w1, #0x1
  41ed20:	b.eq	41ed44 <_obstack_memory_used@@Base+0x7c7c>  // b.none
  41ed24:	ldr	x0, [sp, #104]
  41ed28:	ldr	x1, [sp, #240]
  41ed2c:	ldr	x0, [x0, #24]
  41ed30:	and	x0, x0, #0x400000
  41ed34:	orr	x0, x1, x0
  41ed38:	cmp	x0, #0x0
  41ed3c:	cset	w0, eq  // eq = none
  41ed40:	lsl	w0, w0, #2
  41ed44:	cmp	x20, x21
  41ed48:	mov	w1, #0x2                   	// #2
  41ed4c:	csel	w2, wzr, w1, gt
  41ed50:	ldr	x1, [sp, #240]
  41ed54:	cmp	x1, #0x0
  41ed58:	cset	w1, ne  // ne = any
  41ed5c:	orr	w0, w1, w0
  41ed60:	orr	w0, w0, w2
  41ed64:	str	w0, [sp, #164]
  41ed68:	ldr	x0, [sp, #168]
  41ed6c:	cmp	x20, x0
  41ed70:	ldr	x0, [sp, #128]
  41ed74:	cset	w1, lt  // lt = tstop
  41ed78:	cmp	x20, x0
  41ed7c:	cset	w0, gt
  41ed80:	orr	w0, w1, w0
  41ed84:	str	w0, [sp, #268]
  41ed88:	cbnz	w0, 41faa8 <_obstack_memory_used@@Base+0x89e0>
  41ed8c:	cmp	x20, x21
  41ed90:	add	x0, sp, #0x120
  41ed94:	csel	x0, x0, xzr, le
  41ed98:	str	x0, [sp, #248]
  41ed9c:	cmp	x0, #0x0
  41eda0:	stp	x23, x24, [sp, #48]
  41eda4:	cset	w0, ne  // ne = any
  41eda8:	stp	x27, x26, [sp, #184]
  41edac:	str	w0, [sp, #264]
  41edb0:	ldr	w0, [sp, #164]
  41edb4:	cmp	w0, #0x7
  41edb8:	b.eq	41f454 <_obstack_memory_used@@Base+0x838c>  // b.none
  41edbc:	cmp	w0, #0x8
  41edc0:	b.eq	41ef48 <_obstack_memory_used@@Base+0x7e80>  // b.none
  41edc4:	cmp	w0, #0x5
  41edc8:	b.gt	41ee70 <_obstack_memory_used@@Base+0x7da8>
  41edcc:	cmp	w0, #0x3
  41edd0:	b.gt	41f874 <_obstack_memory_used@@Base+0x87ac>
  41edd4:	ldrsw	x19, [sp, #204]
  41edd8:	ldr	x23, [sp, #128]
  41eddc:	ldr	x21, [sp, #152]
  41ede0:	ldr	x22, [sp, #168]
  41ede4:	ldr	x26, [sp, #192]
  41ede8:	ldr	x2, [sp, #392]
  41edec:	b	41ee24 <_obstack_memory_used@@Base+0x7d5c>
  41edf0:	cmp	x21, x20
  41edf4:	mov	x0, x26
  41edf8:	b.le	41ee08 <_obstack_memory_used@@Base+0x7d40>
  41edfc:	ldr	x0, [sp, #360]
  41ee00:	ldrb	w0, [x0, x1]
  41ee04:	add	x0, x26, x0
  41ee08:	ldrb	w0, [x0]
  41ee0c:	cbnz	w0, 41ef48 <_obstack_memory_used@@Base+0x7e80>
  41ee10:	add	x20, x20, x19
  41ee14:	str	x20, [sp, #288]
  41ee18:	cmp	x20, x22
  41ee1c:	ccmp	x20, x23, #0x0, ge  // ge = tcont
  41ee20:	b.gt	41eef0 <_obstack_memory_used@@Base+0x7e28>
  41ee24:	ldr	x0, [sp, #408]
  41ee28:	sub	x1, x20, x2
  41ee2c:	cmp	x0, x1
  41ee30:	b.hi	41edf0 <_obstack_memory_used@@Base+0x7d28>  // b.pmore
  41ee34:	ldr	w2, [sp, #144]
  41ee38:	mov	x1, x20
  41ee3c:	add	x0, sp, #0x160
  41ee40:	bl	41b7b0 <_obstack_memory_used@@Base+0x46e8>
  41ee44:	cbnz	w0, 41fa78 <_obstack_memory_used@@Base+0x89b0>
  41ee48:	ldr	x2, [sp, #392]
  41ee4c:	sub	x1, x20, x2
  41ee50:	b	41edf0 <_obstack_memory_used@@Base+0x7d28>
  41ee54:	mov	w0, #0x1                   	// #1
  41ee58:	str	w0, [sp, #160]
  41ee5c:	str	w0, [sp, #200]
  41ee60:	b	41eb44 <_obstack_memory_used@@Base+0x7a7c>
  41ee64:	tst	x0, #0x1
  41ee68:	csel	x26, x26, xzr, eq  // eq = none
  41ee6c:	b	41ea8c <_obstack_memory_used@@Base+0x79c4>
  41ee70:	ldr	w0, [sp, #164]
  41ee74:	cmp	w0, #0x6
  41ee78:	b.ne	41edd4 <_obstack_memory_used@@Base+0x7d0c>  // b.any
  41ee7c:	ldr	x0, [sp, #128]
  41ee80:	mov	w2, #0x0                   	// #0
  41ee84:	cmp	x0, x20
  41ee88:	mov	x0, x20
  41ee8c:	b.le	41ef3c <_obstack_memory_used@@Base+0x7e74>
  41ee90:	ldr	x4, [sp, #128]
  41ee94:	ldr	x3, [sp, #176]
  41ee98:	ldr	x26, [sp, #192]
  41ee9c:	nop
  41eea0:	ldrb	w1, [x3, x0]
  41eea4:	ldrb	w1, [x26, x1]
  41eea8:	cbnz	w1, 41ef30 <_obstack_memory_used@@Base+0x7e68>
  41eeac:	add	x0, x0, #0x1
  41eeb0:	mov	w2, #0x1                   	// #1
  41eeb4:	cmp	x0, x4
  41eeb8:	b.ne	41eea0 <_obstack_memory_used@@Base+0x7dd8>  // b.any
  41eebc:	ldr	x20, [sp, #128]
  41eec0:	ldr	x0, [sp, #128]
  41eec4:	str	x0, [sp, #288]
  41eec8:	ldr	x0, [sp, #152]
  41eecc:	cmp	x20, x0
  41eed0:	mov	x0, #0x0                   	// #0
  41eed4:	b.lt	41fa08 <_obstack_memory_used@@Base+0x8940>  // b.tstop
  41eed8:	ldr	x1, [sp, #240]
  41eedc:	cbz	x1, 41eee4 <_obstack_memory_used@@Base+0x7e1c>
  41eee0:	ldrb	w0, [x1, x0]
  41eee4:	ldr	x1, [sp, #192]
  41eee8:	ldrb	w0, [x1, x0]
  41eeec:	cbnz	w0, 41ef48 <_obstack_memory_used@@Base+0x7e80>
  41eef0:	ldr	x27, [sp, #184]
  41eef4:	mov	w0, #0x1                   	// #1
  41eef8:	ldr	x28, [sp, #536]
  41eefc:	str	w0, [sp, #116]
  41ef00:	ldp	x23, x24, [sp, #48]
  41ef04:	mov	x0, x28
  41ef08:	bl	4026b0 <free@plt>
  41ef0c:	ldr	x0, [x27, #152]
  41ef10:	cbz	x0, 41f5f4 <_obstack_memory_used@@Base+0x852c>
  41ef14:	add	x0, sp, #0x160
  41ef18:	bl	418c38 <_obstack_memory_used@@Base+0x1b70>
  41ef1c:	ldr	x0, [sp, #600]
  41ef20:	bl	4026b0 <free@plt>
  41ef24:	ldr	x0, [sp, #568]
  41ef28:	bl	4026b0 <free@plt>
  41ef2c:	b	41f5f4 <_obstack_memory_used@@Base+0x852c>
  41ef30:	cbz	w2, 41ef48 <_obstack_memory_used@@Base+0x7e80>
  41ef34:	mov	x20, x0
  41ef38:	str	x0, [sp, #288]
  41ef3c:	ldr	x0, [sp, #128]
  41ef40:	cmp	x0, x20
  41ef44:	b.eq	41eec8 <_obstack_memory_used@@Base+0x7e00>  // b.none
  41ef48:	ldr	w2, [sp, #144]
  41ef4c:	mov	x1, x20
  41ef50:	add	x0, sp, #0x160
  41ef54:	bl	41b7b0 <_obstack_memory_used@@Base+0x46e8>
  41ef58:	str	w0, [sp, #116]
  41ef5c:	cbnz	w0, 41f96c <_obstack_memory_used@@Base+0x88a4>
  41ef60:	ldr	w0, [sp, #236]
  41ef64:	cmp	w0, #0x1
  41ef68:	b.eq	41ef84 <_obstack_memory_used@@Base+0x7ebc>  // b.none
  41ef6c:	ldr	x0, [sp, #400]
  41ef70:	cbz	x0, 41ef84 <_obstack_memory_used@@Base+0x7ebc>
  41ef74:	ldr	x0, [sp, #368]
  41ef78:	ldr	w0, [x0]
  41ef7c:	cmn	w0, #0x1
  41ef80:	b.eq	41f428 <_obstack_memory_used@@Base+0x8360>  // b.none
  41ef84:	ldr	x20, [sp, #504]
  41ef88:	str	wzr, [sp, #280]
  41ef8c:	ldr	x27, [sp, #424]
  41ef90:	ldr	x19, [x20, #72]
  41ef94:	ldrsb	w0, [x19, #104]
  41ef98:	str	xzr, [sp, #544]
  41ef9c:	str	xzr, [sp, #552]
  41efa0:	str	wzr, [sp, #576]
  41efa4:	tbz	w0, #31, 41efd8 <_obstack_memory_used@@Base+0x7f10>
  41efa8:	ldr	w2, [sp, #512]
  41efac:	sub	x1, x27, #0x1
  41efb0:	add	x0, sp, #0x160
  41efb4:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41efb8:	tbnz	w0, #0, 41f930 <_obstack_memory_used@@Base+0x8868>
  41efbc:	cbz	w0, 41efd8 <_obstack_memory_used@@Base+0x7f10>
  41efc0:	and	w1, w0, #0x6
  41efc4:	cmp	w1, #0x6
  41efc8:	b.eq	41f910 <_obstack_memory_used@@Base+0x8848>  // b.none
  41efcc:	tbnz	w0, #1, 41f9b4 <_obstack_memory_used@@Base+0x88ec>
  41efd0:	tbnz	w0, #2, 41f9cc <_obstack_memory_used@@Base+0x8904>
  41efd4:	nop
  41efd8:	ldr	x0, [sp, #536]
  41efdc:	cbz	x0, 41f868 <_obstack_memory_used@@Base+0x87a0>
  41efe0:	ldr	x1, [x20, #152]
  41efe4:	str	x19, [x0, x27, lsl #3]
  41efe8:	cbnz	x1, 41fa14 <_obstack_memory_used@@Base+0x894c>
  41efec:	ldrb	w0, [x19, #104]
  41eff0:	ldr	w24, [sp, #264]
  41eff4:	str	xzr, [sp, #96]
  41eff8:	mov	x25, #0xffffffffffffffff    	// #-1
  41effc:	tbnz	w0, #4, 41f97c <_obstack_memory_used@@Base+0x88b4>
  41f000:	ldr	x0, [sp, #248]
  41f004:	str	x0, [sp, #136]
  41f008:	ldr	x22, [sp, #424]
  41f00c:	ldr	x0, [sp, #456]
  41f010:	cmp	x0, x22
  41f014:	b.le	41f2cc <_obstack_memory_used@@Base+0x8204>
  41f018:	ldr	x0, [sp, #416]
  41f01c:	add	x21, x22, #0x1
  41f020:	cmp	x21, x0
  41f024:	b.ge	41f0d4 <_obstack_memory_used@@Base+0x800c>  // b.tcont
  41f028:	ldr	x0, [sp, #400]
  41f02c:	cmp	x21, x0
  41f030:	b.ge	41f580 <_obstack_memory_used@@Base+0x84b8>  // b.tcont
  41f034:	ldrb	w0, [x19, #104]
  41f038:	mov	x4, x22
  41f03c:	tbnz	w0, #5, 41f108 <_obstack_memory_used@@Base+0x8040>
  41f040:	ldr	x0, [sp, #360]
  41f044:	add	x1, x4, #0x1
  41f048:	str	x1, [sp, #424]
  41f04c:	ldrb	w20, [x0, x4]
  41f050:	ldr	x0, [x19, #88]
  41f054:	cbz	x0, 41f550 <_obstack_memory_used@@Base+0x8488>
  41f058:	ldr	x20, [x0, x20, lsl #3]
  41f05c:	ldr	x0, [sp, #536]
  41f060:	cbz	x0, 41f078 <_obstack_memory_used@@Base+0x7fb0>
  41f064:	mov	x2, x20
  41f068:	add	x1, sp, #0x160
  41f06c:	add	x0, sp, #0x118
  41f070:	bl	41e5d0 <_obstack_memory_used@@Base+0x7508>
  41f074:	mov	x20, x0
  41f078:	cbz	x20, 41f274 <_obstack_memory_used@@Base+0x81ac>
  41f07c:	cmp	x19, x20
  41f080:	ldrb	w0, [x20, #104]
  41f084:	csel	w24, w24, wzr, eq  // eq = none
  41f088:	cmp	w24, #0x0
  41f08c:	csel	x27, x27, x21, eq  // eq = none
  41f090:	ldr	x22, [sp, #424]
  41f094:	tbz	w0, #4, 41f0b4 <_obstack_memory_used@@Base+0x7fec>
  41f098:	tbnz	w0, #7, 41f4d0 <_obstack_memory_used@@Base+0x8408>
  41f09c:	ldr	w0, [sp, #160]
  41f0a0:	mov	x25, x22
  41f0a4:	cbz	w0, 41f2e0 <_obstack_memory_used@@Base+0x8218>
  41f0a8:	mov	x0, #0x1                   	// #1
  41f0ac:	str	x0, [sp, #96]
  41f0b0:	str	xzr, [sp, #136]
  41f0b4:	ldr	x0, [sp, #456]
  41f0b8:	cmp	x0, x22
  41f0bc:	b.le	41f2cc <_obstack_memory_used@@Base+0x8204>
  41f0c0:	ldr	x0, [sp, #416]
  41f0c4:	add	x21, x22, #0x1
  41f0c8:	mov	x19, x20
  41f0cc:	cmp	x21, x0
  41f0d0:	b.lt	41f028 <_obstack_memory_used@@Base+0x7f60>  // b.tstop
  41f0d4:	ldr	x1, [sp, #440]
  41f0d8:	cmp	x0, x1
  41f0dc:	b.ge	41f028 <_obstack_memory_used@@Base+0x7f60>  // b.tcont
  41f0e0:	add	w1, w21, #0x1
  41f0e4:	add	x0, sp, #0x160
  41f0e8:	bl	418280 <_obstack_memory_used@@Base+0x11b8>
  41f0ec:	str	w0, [sp, #280]
  41f0f0:	cbnz	w0, 41f918 <_obstack_memory_used@@Base+0x8850>
  41f0f4:	ldrb	w0, [x19, #104]
  41f0f8:	ldr	x22, [sp, #424]
  41f0fc:	mov	x4, x22
  41f100:	tbz	w0, #5, 41f040 <_obstack_memory_used@@Base+0x7f78>
  41f104:	nop
  41f108:	ldr	x26, [x19, #16]
  41f10c:	ldr	x20, [sp, #504]
  41f110:	cmp	x26, #0x0
  41f114:	b.le	41f26c <_obstack_memory_used@@Base+0x81a4>
  41f118:	add	x22, x20, #0xd8
  41f11c:	stp	x21, x25, [sp, #208]
  41f120:	mov	x21, x4
  41f124:	str	w24, [sp, #232]
  41f128:	mov	x24, x26
  41f12c:	mov	x23, #0x0                   	// #0
  41f130:	ldr	x0, [x19, #24]
  41f134:	ldr	x25, [x20]
  41f138:	ldr	x28, [x0, x23, lsl #3]
  41f13c:	add	x0, x25, x28, lsl #4
  41f140:	ldrb	w1, [x0, #10]
  41f144:	tbz	w1, #4, 41f254 <_obstack_memory_used@@Base+0x818c>
  41f148:	ldr	w26, [x0, #8]
  41f14c:	tst	w26, #0x3ff00
  41f150:	b.eq	41f188 <_obstack_memory_used@@Base+0x80c0>  // b.none
  41f154:	ldr	w2, [sp, #512]
  41f158:	mov	x1, x21
  41f15c:	add	x0, sp, #0x160
  41f160:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41f164:	ubfx	x2, x26, #8, #10
  41f168:	tbz	w26, #10, 41f4e8 <_obstack_memory_used@@Base+0x8420>
  41f16c:	tbz	w0, #0, 41f254 <_obstack_memory_used@@Base+0x818c>
  41f170:	tbnz	w2, #3, 41f254 <_obstack_memory_used@@Base+0x818c>
  41f174:	tbz	w2, #5, 41f17c <_obstack_memory_used@@Base+0x80b4>
  41f178:	tbz	w0, #1, 41f254 <_obstack_memory_used@@Base+0x818c>
  41f17c:	tbz	w2, #7, 41f188 <_obstack_memory_used@@Base+0x80c0>
  41f180:	tbz	w0, #3, 41f254 <_obstack_memory_used@@Base+0x818c>
  41f184:	nop
  41f188:	mov	x1, x22
  41f18c:	mov	x4, x21
  41f190:	mov	x0, x25
  41f194:	add	x3, sp, #0x160
  41f198:	mov	x2, x28
  41f19c:	bl	41cf50 <_obstack_memory_used@@Base+0x5e88>
  41f1a0:	mov	w1, w0
  41f1a4:	cbz	w0, 41f24c <_obstack_memory_used@@Base+0x8184>
  41f1a8:	ldr	w2, [sp, #576]
  41f1ac:	add	x0, sp, #0x160
  41f1b0:	ldr	x26, [sp, #424]
  41f1b4:	cmp	w2, w1
  41f1b8:	add	x26, x26, w1, sxtw
  41f1bc:	csel	w1, w2, w1, ge  // ge = tcont
  41f1c0:	str	w1, [sp, #576]
  41f1c4:	mov	x1, x26
  41f1c8:	bl	4183c0 <_obstack_memory_used@@Base+0x12f8>
  41f1cc:	str	w0, [sp, #284]
  41f1d0:	cbnz	w0, 41f590 <_obstack_memory_used@@Base+0x84c8>
  41f1d4:	ldr	x0, [x20, #24]
  41f1d8:	ldr	x21, [sp, #536]
  41f1dc:	ldr	x0, [x0, x28, lsl #3]
  41f1e0:	ldr	x1, [x21, x26, lsl #3]
  41f1e4:	ldr	x3, [x20, #48]
  41f1e8:	add	x0, x0, x0, lsl #1
  41f1ec:	add	x3, x3, x0, lsl #3
  41f1f0:	cbz	x1, 41f4f4 <_obstack_memory_used@@Base+0x842c>
  41f1f4:	ldr	x1, [x1, #80]
  41f1f8:	mov	x2, x3
  41f1fc:	add	x0, sp, #0x128
  41f200:	bl	419c38 <_obstack_memory_used@@Base+0x2b70>
  41f204:	str	w0, [sp, #284]
  41f208:	cbnz	w0, 41f590 <_obstack_memory_used@@Base+0x84c8>
  41f20c:	ldr	w2, [sp, #512]
  41f210:	sub	x1, x26, #0x1
  41f214:	add	x0, sp, #0x160
  41f218:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41f21c:	mov	w3, w0
  41f220:	ldr	x28, [sp, #536]
  41f224:	mov	x1, x20
  41f228:	add	x2, sp, #0x128
  41f22c:	add	x0, sp, #0x11c
  41f230:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  41f234:	str	x0, [x28, x26, lsl #3]
  41f238:	ldr	x0, [sp, #312]
  41f23c:	bl	4026b0 <free@plt>
  41f240:	ldr	x1, [sp, #536]
  41f244:	ldr	x0, [x1, x26, lsl #3]
  41f248:	cbz	x0, 41f53c <_obstack_memory_used@@Base+0x8474>
  41f24c:	ldr	x24, [x19, #16]
  41f250:	ldr	x21, [sp, #424]
  41f254:	add	x23, x23, #0x1
  41f258:	cmp	x23, x24
  41f25c:	b.lt	41f130 <_obstack_memory_used@@Base+0x8068>  // b.tstop
  41f260:	mov	x4, x21
  41f264:	ldr	w24, [sp, #232]
  41f268:	ldp	x21, x25, [sp, #208]
  41f26c:	str	wzr, [sp, #280]
  41f270:	b	41f040 <_obstack_memory_used@@Base+0x7f78>
  41f274:	ldr	w0, [sp, #280]
  41f278:	ldr	x28, [sp, #536]
  41f27c:	cbnz	w0, 41f93c <_obstack_memory_used@@Base+0x8874>
  41f280:	cbz	x28, 41f2cc <_obstack_memory_used@@Base+0x8204>
  41f284:	ldr	w0, [sp, #200]
  41f288:	ldr	w1, [sp, #96]
  41f28c:	eor	w0, w0, #0x1
  41f290:	tst	w0, w1
  41f294:	b.ne	41f2cc <_obstack_memory_used@@Base+0x8204>  // b.any
  41f298:	mov	w1, #0x0                   	// #0
  41f29c:	ldr	x0, [sp, #424]
  41f2a0:	ldr	x2, [sp, #544]
  41f2a4:	b	41f2b4 <_obstack_memory_used@@Base+0x81ec>
  41f2a8:	ldr	x3, [x28, x0, lsl #3]
  41f2ac:	mov	w1, #0x1                   	// #1
  41f2b0:	cbnz	x3, 41f49c <_obstack_memory_used@@Base+0x83d4>
  41f2b4:	mov	x3, x0
  41f2b8:	add	x0, x0, #0x1
  41f2bc:	cmp	x2, x0
  41f2c0:	b.ge	41f2a8 <_obstack_memory_used@@Base+0x81e0>  // b.tcont
  41f2c4:	cbz	w1, 41f2cc <_obstack_memory_used@@Base+0x8204>
  41f2c8:	str	x3, [sp, #424]
  41f2cc:	ldr	x1, [sp, #136]
  41f2d0:	cbz	x1, 41f2e0 <_obstack_memory_used@@Base+0x8218>
  41f2d4:	ldr	x0, [x1]
  41f2d8:	add	x27, x0, x27
  41f2dc:	str	x27, [x1]
  41f2e0:	cmn	x25, #0x1
  41f2e4:	b.eq	41f41c <_obstack_memory_used@@Base+0x8354>  // b.none
  41f2e8:	cmn	x25, #0x2
  41f2ec:	b.eq	41f918 <_obstack_memory_used@@Base+0x8850>  // b.none
  41f2f0:	ldr	x0, [sp, #104]
  41f2f4:	str	x25, [sp, #520]
  41f2f8:	ldrb	w0, [x0, #56]
  41f2fc:	tbnz	w0, #4, 41f64c <_obstack_memory_used@@Base+0x8584>
  41f300:	ldr	x0, [sp, #120]
  41f304:	cmp	x0, #0x1
  41f308:	b.ls	41f8e0 <_obstack_memory_used@@Base+0x8818>  // b.plast
  41f30c:	ldr	x19, [sp, #536]
  41f310:	mov	x2, x25
  41f314:	add	x0, sp, #0x160
  41f318:	mov	x28, x19
  41f31c:	ldr	x1, [x19, x25, lsl #3]
  41f320:	bl	41b6f8 <_obstack_memory_used@@Base+0x4630>
  41f324:	ldr	x1, [sp, #184]
  41f328:	ldrb	w1, [x1, #176]
  41f32c:	str	x0, [sp, #528]
  41f330:	tbnz	w1, #0, 41f344 <_obstack_memory_used@@Base+0x827c>
  41f334:	ldr	x0, [sp, #184]
  41f338:	ldr	x0, [x0, #152]
  41f33c:	cbz	x0, 41f8ec <_obstack_memory_used@@Base+0x8824>
  41f340:	mov	x28, x19
  41f344:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  41f348:	cmp	x25, x0
  41f34c:	ldr	x22, [sp, #504]
  41f350:	ldr	x20, [sp, #528]
  41f354:	b.hi	41f93c <_obstack_memory_used@@Base+0x8874>  // b.pmore
  41f358:	add	x21, x25, #0x1
  41f35c:	lsl	x19, x21, #3
  41f360:	mov	x0, x19
  41f364:	bl	402440 <malloc@plt>
  41f368:	mov	x24, x0
  41f36c:	cbz	x0, 41f93c <_obstack_memory_used@@Base+0x8874>
  41f370:	ldr	x0, [x22, #152]
  41f374:	cbz	x0, 41f6c8 <_obstack_memory_used@@Base+0x8600>
  41f378:	mov	x0, x19
  41f37c:	bl	402440 <malloc@plt>
  41f380:	mov	x27, x0
  41f384:	mov	x23, x0
  41f388:	cbz	x0, 41fa8c <_obstack_memory_used@@Base+0x89c4>
  41f38c:	add	x28, sp, #0x128
  41f390:	lsl	x2, x21, #3
  41f394:	mov	w1, #0x0                   	// #0
  41f398:	mov	x0, x27
  41f39c:	bl	402510 <memset@plt>
  41f3a0:	stp	x24, x27, [sp, #296]
  41f3a4:	mov	x1, x28
  41f3a8:	add	x0, sp, #0x160
  41f3ac:	stp	x20, x25, [sp, #312]
  41f3b0:	stp	xzr, xzr, [x28, #32]
  41f3b4:	str	xzr, [x28, #48]
  41f3b8:	bl	41e758 <_obstack_memory_used@@Base+0x7690>
  41f3bc:	mov	w19, w0
  41f3c0:	ldr	x0, [sp, #344]
  41f3c4:	bl	4026b0 <free@plt>
  41f3c8:	cbnz	w19, 41f69c <_obstack_memory_used@@Base+0x85d4>
  41f3cc:	ldr	x0, [x24]
  41f3d0:	cbnz	x0, 41f674 <_obstack_memory_used@@Base+0x85ac>
  41f3d4:	ldr	x0, [x27]
  41f3d8:	cbnz	x0, 41f674 <_obstack_memory_used@@Base+0x85ac>
  41f3dc:	sub	x25, x25, #0x1
  41f3e0:	cmn	x25, #0x1
  41f3e4:	b.eq	41f40c <_obstack_memory_used@@Base+0x8344>  // b.none
  41f3e8:	ldr	x2, [sp, #536]
  41f3ec:	nop
  41f3f0:	ldr	x1, [x2, x25, lsl #3]
  41f3f4:	cbz	x1, 41f400 <_obstack_memory_used@@Base+0x8338>
  41f3f8:	ldrb	w0, [x1, #104]
  41f3fc:	tbnz	w0, #4, 41f944 <_obstack_memory_used@@Base+0x887c>
  41f400:	sub	x25, x25, #0x1
  41f404:	cmn	x25, #0x1
  41f408:	b.ne	41f3f0 <_obstack_memory_used@@Base+0x8328>  // b.any
  41f40c:	mov	x0, x24
  41f410:	bl	4026b0 <free@plt>
  41f414:	mov	x0, x27
  41f418:	bl	4026b0 <free@plt>
  41f41c:	add	x0, sp, #0x160
  41f420:	bl	418c38 <_obstack_memory_used@@Base+0x1b70>
  41f424:	ldr	x20, [sp, #288]
  41f428:	ldr	w0, [sp, #204]
  41f42c:	add	x20, x20, w0, sxtw
  41f430:	str	x20, [sp, #288]
  41f434:	ldr	x0, [sp, #168]
  41f438:	cmp	x20, x0
  41f43c:	ldr	x0, [sp, #128]
  41f440:	ccmp	x20, x0, #0x0, ge  // ge = tcont
  41f444:	b.gt	41eef0 <_obstack_memory_used@@Base+0x7e28>
  41f448:	ldr	w0, [sp, #164]
  41f44c:	cmp	w0, #0x7
  41f450:	b.ne	41edbc <_obstack_memory_used@@Base+0x7cf4>  // b.any
  41f454:	ldr	x0, [sp, #128]
  41f458:	mov	w2, #0x0                   	// #0
  41f45c:	cmp	x0, x20
  41f460:	mov	x0, x20
  41f464:	b.le	41ef3c <_obstack_memory_used@@Base+0x7e74>
  41f468:	ldr	x5, [sp, #128]
  41f46c:	ldr	x4, [sp, #176]
  41f470:	ldr	x26, [sp, #192]
  41f474:	ldr	x3, [sp, #240]
  41f478:	ldrb	w1, [x4, x0]
  41f47c:	ldrb	w1, [x3, x1]
  41f480:	ldrb	w1, [x26, x1]
  41f484:	cbnz	w1, 41f99c <_obstack_memory_used@@Base+0x88d4>
  41f488:	add	x0, x0, #0x1
  41f48c:	mov	w2, #0x1                   	// #1
  41f490:	cmp	x0, x5
  41f494:	b.ne	41f478 <_obstack_memory_used@@Base+0x83b0>  // b.any
  41f498:	b	41eebc <_obstack_memory_used@@Base+0x7df4>
  41f49c:	add	x1, sp, #0x160
  41f4a0:	mov	x2, #0x0                   	// #0
  41f4a4:	str	x0, [sp, #424]
  41f4a8:	add	x0, sp, #0x118
  41f4ac:	bl	41e5d0 <_obstack_memory_used@@Base+0x7508>
  41f4b0:	ldr	w1, [sp, #280]
  41f4b4:	cbnz	w1, 41f4c4 <_obstack_memory_used@@Base+0x83fc>
  41f4b8:	cbnz	x0, 41f9ac <_obstack_memory_used@@Base+0x88e4>
  41f4bc:	ldr	x28, [sp, #536]
  41f4c0:	b	41f298 <_obstack_memory_used@@Base+0x81d0>
  41f4c4:	mov	x20, x0
  41f4c8:	cbnz	x0, 41f07c <_obstack_memory_used@@Base+0x7fb4>
  41f4cc:	b	41f2cc <_obstack_memory_used@@Base+0x8204>
  41f4d0:	mov	x2, x22
  41f4d4:	mov	x1, x20
  41f4d8:	add	x0, sp, #0x160
  41f4dc:	bl	41b6f8 <_obstack_memory_used@@Base+0x4630>
  41f4e0:	cbz	x0, 41f0b4 <_obstack_memory_used@@Base+0x7fec>
  41f4e4:	b	41f09c <_obstack_memory_used@@Base+0x7fd4>
  41f4e8:	tbz	w2, #3, 41f174 <_obstack_memory_used@@Base+0x80ac>
  41f4ec:	tbz	w0, #0, 41f174 <_obstack_memory_used@@Base+0x80ac>
  41f4f0:	b	41f254 <_obstack_memory_used@@Base+0x818c>
  41f4f4:	add	x0, sp, #0x200
  41f4f8:	ldr	w2, [sp, #512]
  41f4fc:	ldp	x6, x7, [x3]
  41f500:	sub	x1, x26, #0x1
  41f504:	stp	x6, x7, [x0, #-216]
  41f508:	add	x0, sp, #0x160
  41f50c:	ldr	x3, [x3, #16]
  41f510:	str	x3, [sp, #312]
  41f514:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41f518:	mov	w3, w0
  41f51c:	mov	x1, x20
  41f520:	add	x2, sp, #0x128
  41f524:	add	x0, sp, #0x11c
  41f528:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  41f52c:	ldr	x1, [sp, #536]
  41f530:	str	x0, [x21, x26, lsl #3]
  41f534:	ldr	x0, [x1, x26, lsl #3]
  41f538:	cbnz	x0, 41f24c <_obstack_memory_used@@Base+0x8184>
  41f53c:	ldr	w0, [sp, #284]
  41f540:	cbz	w0, 41f24c <_obstack_memory_used@@Base+0x8184>
  41f544:	ldr	w24, [sp, #232]
  41f548:	ldp	x21, x25, [sp, #208]
  41f54c:	b	41f59c <_obstack_memory_used@@Base+0x84d4>
  41f550:	ldr	x22, [x19, #96]
  41f554:	cbz	x22, 41f5ac <_obstack_memory_used@@Base+0x84e4>
  41f558:	ldr	w2, [sp, #512]
  41f55c:	add	x0, sp, #0x160
  41f560:	ldr	x1, [sp, #424]
  41f564:	sub	x1, x1, #0x1
  41f568:	bl	41b4d0 <_obstack_memory_used@@Base+0x4408>
  41f56c:	and	x1, x20, #0xff
  41f570:	tbz	w0, #0, 41f644 <_obstack_memory_used@@Base+0x857c>
  41f574:	add	x1, x1, #0x100
  41f578:	ldr	x20, [x22, x1, lsl #3]
  41f57c:	b	41f05c <_obstack_memory_used@@Base+0x7f94>
  41f580:	ldr	x1, [sp, #440]
  41f584:	cmp	x0, x1
  41f588:	b.ge	41f034 <_obstack_memory_used@@Base+0x7f6c>  // b.tcont
  41f58c:	b	41f0e0 <_obstack_memory_used@@Base+0x8018>
  41f590:	ldp	x21, x25, [sp, #208]
  41f594:	ldr	w24, [sp, #232]
  41f598:	ldr	x1, [sp, #536]
  41f59c:	str	w0, [sp, #280]
  41f5a0:	cbz	x1, 41f5d0 <_obstack_memory_used@@Base+0x8508>
  41f5a4:	mov	x20, #0x0                   	// #0
  41f5a8:	b	41f064 <_obstack_memory_used@@Base+0x7f9c>
  41f5ac:	ldr	x0, [sp, #504]
  41f5b0:	mov	x1, x19
  41f5b4:	bl	41a660 <_obstack_memory_used@@Base+0x3598>
  41f5b8:	tst	w0, #0xff
  41f5bc:	b.ne	41f050 <_obstack_memory_used@@Base+0x7f88>  // b.any
  41f5c0:	ldr	x0, [sp, #536]
  41f5c4:	mov	w1, #0xc                   	// #12
  41f5c8:	str	w1, [sp, #280]
  41f5cc:	cbnz	x0, 41f5a4 <_obstack_memory_used@@Base+0x84dc>
  41f5d0:	ldr	x27, [sp, #184]
  41f5d4:	mov	x28, #0x0                   	// #0
  41f5d8:	ldp	x23, x24, [sp, #48]
  41f5dc:	mov	w0, #0xc                   	// #12
  41f5e0:	str	w0, [sp, #116]
  41f5e4:	mov	x0, x28
  41f5e8:	bl	4026b0 <free@plt>
  41f5ec:	ldr	x0, [x27, #152]
  41f5f0:	cbnz	x0, 41ef14 <_obstack_memory_used@@Base+0x7e4c>
  41f5f4:	add	x0, sp, #0x160
  41f5f8:	bl	418a70 <_obstack_memory_used@@Base+0x19a8>
  41f5fc:	ldr	w0, [sp, #116]
  41f600:	ldp	x29, x30, [sp]
  41f604:	ldp	x19, x20, [sp, #16]
  41f608:	ldp	x21, x22, [sp, #32]
  41f60c:	ldp	x25, x26, [sp, #64]
  41f610:	ldp	x27, x28, [sp, #80]
  41f614:	add	sp, sp, #0x260
  41f618:	ret
  41f61c:	mov	w0, #0x1                   	// #1
  41f620:	str	w0, [sp, #116]
  41f624:	ldp	x29, x30, [sp]
  41f628:	ldr	w0, [sp, #116]
  41f62c:	ldp	x19, x20, [sp, #16]
  41f630:	ldp	x21, x22, [sp, #32]
  41f634:	ldp	x25, x26, [sp, #64]
  41f638:	ldp	x27, x28, [sp, #80]
  41f63c:	add	sp, sp, #0x260
  41f640:	ret
  41f644:	ldr	x20, [x22, x20, lsl #3]
  41f648:	b	41f05c <_obstack_memory_used@@Base+0x7f94>
  41f64c:	ldr	x27, [sp, #184]
  41f650:	ldr	x0, [x27, #152]
  41f654:	cbz	x0, 41f71c <_obstack_memory_used@@Base+0x8654>
  41f658:	ldr	x19, [sp, #536]
  41f65c:	mov	x2, x25
  41f660:	add	x0, sp, #0x160
  41f664:	ldr	x1, [x19, x25, lsl #3]
  41f668:	bl	41b6f8 <_obstack_memory_used@@Base+0x4630>
  41f66c:	str	x0, [sp, #528]
  41f670:	b	41f340 <_obstack_memory_used@@Base+0x8278>
  41f674:	mov	x3, x21
  41f678:	mov	x2, x27
  41f67c:	mov	x1, x24
  41f680:	mov	x0, x22
  41f684:	bl	41a2c0 <_obstack_memory_used@@Base+0x31f8>
  41f688:	mov	w19, w0
  41f68c:	mov	x0, x27
  41f690:	bl	4026b0 <free@plt>
  41f694:	cbz	w19, 41f704 <_obstack_memory_used@@Base+0x863c>
  41f698:	mov	x23, #0x0                   	// #0
  41f69c:	mov	x0, x24
  41f6a0:	bl	4026b0 <free@plt>
  41f6a4:	mov	x0, x23
  41f6a8:	bl	4026b0 <free@plt>
  41f6ac:	cmp	w19, #0x1
  41f6b0:	b.eq	41f41c <_obstack_memory_used@@Base+0x8354>  // b.none
  41f6b4:	ldr	x27, [sp, #184]
  41f6b8:	str	w19, [sp, #116]
  41f6bc:	ldp	x23, x24, [sp, #48]
  41f6c0:	ldr	x28, [sp, #536]
  41f6c4:	b	41f5e4 <_obstack_memory_used@@Base+0x851c>
  41f6c8:	add	x2, sp, #0x200
  41f6cc:	stp	x24, xzr, [sp, #296]
  41f6d0:	add	x28, sp, #0x128
  41f6d4:	stp	x20, x25, [sp, #312]
  41f6d8:	mov	x1, x28
  41f6dc:	add	x0, sp, #0x160
  41f6e0:	stp	xzr, xzr, [x2, #-184]
  41f6e4:	str	xzr, [sp, #344]
  41f6e8:	bl	41e758 <_obstack_memory_used@@Base+0x7690>
  41f6ec:	mov	w19, w0
  41f6f0:	ldr	x0, [sp, #344]
  41f6f4:	bl	4026b0 <free@plt>
  41f6f8:	cbnz	w19, 41f698 <_obstack_memory_used@@Base+0x85d0>
  41f6fc:	ldr	x0, [x24]
  41f700:	cbz	x0, 41f9c0 <_obstack_memory_used@@Base+0x88f8>
  41f704:	ldr	x0, [sp, #536]
  41f708:	ldr	x27, [sp, #184]
  41f70c:	bl	4026b0 <free@plt>
  41f710:	str	x25, [sp, #520]
  41f714:	str	x20, [sp, #528]
  41f718:	str	x24, [sp, #536]
  41f71c:	ldr	x0, [sp, #120]
  41f720:	cbz	x0, 41f6bc <_obstack_memory_used@@Base+0x85f4>
  41f724:	ldr	x1, [sp, #120]
  41f728:	ldr	x2, [sp, #256]
  41f72c:	cmp	x1, #0x1
  41f730:	add	x0, x2, #0x10
  41f734:	add	x2, x2, x1, lsl #4
  41f738:	mov	x1, #0xffffffffffffffff    	// #-1
  41f73c:	b.ls	41fb30 <_obstack_memory_used@@Base+0x8a68>  // b.plast
  41f740:	str	x1, [x0, #8]
  41f744:	str	x1, [x0], #16
  41f748:	cmp	x2, x0
  41f74c:	b.ne	41f740 <_obstack_memory_used@@Base+0x8678>  // b.any
  41f750:	ldr	x0, [sp, #104]
  41f754:	mov	x1, #0x0                   	// #0
  41f758:	ldr	x3, [sp, #256]
  41f75c:	ldrb	w0, [x0, #56]
  41f760:	ldr	x2, [sp, #520]
  41f764:	stp	xzr, x2, [x3]
  41f768:	tst	x0, #0x10
  41f76c:	ldr	x0, [sp, #120]
  41f770:	ccmp	x0, #0x1, #0x4, eq  // eq = none
  41f774:	b.ne	41fae0 <_obstack_memory_used@@Base+0x8a18>  // b.any
  41f778:	ldrb	w5, [sp, #492]
  41f77c:	mov	x2, #0x0                   	// #0
  41f780:	ldr	x9, [sp, #120]
  41f784:	ldr	x0, [sp, #256]
  41f788:	ldr	x4, [sp, #288]
  41f78c:	ldr	x8, [sp, #376]
  41f790:	ldp	x6, x7, [sp, #400]
  41f794:	b	41f79c <_obstack_memory_used@@Base+0x86d4>
  41f798:	ldr	x1, [x0]
  41f79c:	cmn	x1, #0x1
  41f7a0:	b.eq	41f7b8 <_obstack_memory_used@@Base+0x86f0>  // b.none
  41f7a4:	ldr	x3, [x0, #8]
  41f7a8:	cbnz	w5, 41fac0 <_obstack_memory_used@@Base+0x89f8>
  41f7ac:	add	x1, x4, x1
  41f7b0:	add	x3, x4, x3
  41f7b4:	stp	x1, x3, [x0]
  41f7b8:	add	x2, x2, #0x1
  41f7bc:	add	x0, x0, #0x10
  41f7c0:	cmp	x2, x9
  41f7c4:	b.ne	41f798 <_obstack_memory_used@@Base+0x86d0>  // b.any
  41f7c8:	ldr	x0, [sp, #224]
  41f7cc:	cmp	x0, #0x0
  41f7d0:	b.le	41f800 <_obstack_memory_used@@Base+0x8738>
  41f7d4:	ldr	x0, [sp, #120]
  41f7d8:	ldr	x1, [sp, #224]
  41f7dc:	ldr	x3, [sp, #256]
  41f7e0:	add	x2, x1, x0
  41f7e4:	mov	x1, #0xffffffffffffffff    	// #-1
  41f7e8:	add	x0, x3, x0, lsl #4
  41f7ec:	add	x2, x3, x2, lsl #4
  41f7f0:	stp	x1, x1, [x0]
  41f7f4:	add	x0, x0, #0x10
  41f7f8:	cmp	x2, x0
  41f7fc:	b.ne	41f7f0 <_obstack_memory_used@@Base+0x8728>  // b.any
  41f800:	ldr	x3, [x27, #224]
  41f804:	ldr	x28, [sp, #536]
  41f808:	cbz	x3, 41f860 <_obstack_memory_used@@Base+0x8798>
  41f80c:	ldr	x0, [sp, #120]
  41f810:	cmp	x0, #0x1
  41f814:	b.ls	41f860 <_obstack_memory_used@@Base+0x8798>  // b.plast
  41f818:	ldr	x5, [sp, #256]
  41f81c:	sub	x4, x0, #0x1
  41f820:	mov	x0, #0x0                   	// #0
  41f824:	add	x2, x5, #0x10
  41f828:	ldr	x1, [x3, x0, lsl #3]
  41f82c:	cmp	x1, x0
  41f830:	b.eq	41f850 <_obstack_memory_used@@Base+0x8788>  // b.none
  41f834:	add	x1, x5, x1, lsl #4
  41f838:	ldr	x1, [x1, #16]
  41f83c:	str	x1, [x2]
  41f840:	ldr	x1, [x3, x0, lsl #3]
  41f844:	add	x1, x5, x1, lsl #4
  41f848:	ldr	x1, [x1, #24]
  41f84c:	str	x1, [x2, #8]
  41f850:	add	x0, x0, #0x1
  41f854:	add	x2, x2, #0x10
  41f858:	cmp	x4, x0
  41f85c:	b.ne	41f828 <_obstack_memory_used@@Base+0x8760>  // b.any
  41f860:	ldp	x23, x24, [sp, #48]
  41f864:	b	41f5e4 <_obstack_memory_used@@Base+0x851c>
  41f868:	ldrb	w0, [x19, #104]
  41f86c:	ldr	w24, [sp, #264]
  41f870:	b	41eff4 <_obstack_memory_used@@Base+0x7f2c>
  41f874:	ldr	x0, [sp, #168]
  41f878:	cmp	x0, x20
  41f87c:	b.gt	41eef0 <_obstack_memory_used@@Base+0x7e28>
  41f880:	ldp	x5, x6, [sp, #168]
  41f884:	mov	x1, x20
  41f888:	ldr	x4, [sp, #152]
  41f88c:	mov	w0, #0x0                   	// #0
  41f890:	ldr	x26, [sp, #192]
  41f894:	ldr	x3, [sp, #240]
  41f898:	cmp	x1, x4
  41f89c:	mov	x2, #0x0                   	// #0
  41f8a0:	b.ge	41f8a8 <_obstack_memory_used@@Base+0x87e0>  // b.tcont
  41f8a4:	ldrb	w2, [x6, x1]
  41f8a8:	cbz	x3, 41f8b0 <_obstack_memory_used@@Base+0x87e8>
  41f8ac:	ldrb	w2, [x3, x2]
  41f8b0:	ldrb	w2, [x26, x2]
  41f8b4:	cbnz	w2, 41f95c <_obstack_memory_used@@Base+0x8894>
  41f8b8:	sub	x1, x1, #0x1
  41f8bc:	mov	w0, #0x1                   	// #1
  41f8c0:	cmp	x1, x5
  41f8c4:	b.ge	41f898 <_obstack_memory_used@@Base+0x87d0>  // b.tcont
  41f8c8:	str	w0, [sp, #116]
  41f8cc:	str	x1, [sp, #288]
  41f8d0:	ldp	x23, x24, [sp, #48]
  41f8d4:	ldr	x27, [sp, #184]
  41f8d8:	ldr	x28, [sp, #536]
  41f8dc:	b	41f5e4 <_obstack_memory_used@@Base+0x851c>
  41f8e0:	ldr	x0, [sp, #184]
  41f8e4:	ldr	x0, [x0, #152]
  41f8e8:	cbnz	x0, 41f658 <_obstack_memory_used@@Base+0x8590>
  41f8ec:	ldr	x27, [sp, #184]
  41f8f0:	b	41f71c <_obstack_memory_used@@Base+0x8654>
  41f8f4:	ldrb	w0, [x27, #176]
  41f8f8:	tbnz	w0, #1, 41eca0 <_obstack_memory_used@@Base+0x7bd8>
  41f8fc:	b	41ecc8 <_obstack_memory_used@@Base+0x7c00>
  41f900:	mov	w0, #0xc                   	// #12
  41f904:	str	w0, [sp, #116]
  41f908:	ldr	x28, [sp, #536]
  41f90c:	b	41f5e4 <_obstack_memory_used@@Base+0x851c>
  41f910:	ldr	x19, [x20, #96]
  41f914:	cbnz	x19, 41efd8 <_obstack_memory_used@@Base+0x7f10>
  41f918:	mov	w0, #0xc                   	// #12
  41f91c:	str	w0, [sp, #116]
  41f920:	ldp	x23, x24, [sp, #48]
  41f924:	ldr	x27, [sp, #184]
  41f928:	ldr	x28, [sp, #536]
  41f92c:	b	41f5e4 <_obstack_memory_used@@Base+0x851c>
  41f930:	ldr	x19, [x20, #80]
  41f934:	cbnz	x19, 41efd8 <_obstack_memory_used@@Base+0x7f10>
  41f938:	b	41f918 <_obstack_memory_used@@Base+0x8850>
  41f93c:	ldr	x27, [sp, #184]
  41f940:	b	41f5d8 <_obstack_memory_used@@Base+0x8510>
  41f944:	mov	x2, x25
  41f948:	add	x0, sp, #0x160
  41f94c:	add	x21, x25, #0x1
  41f950:	bl	41b6f8 <_obstack_memory_used@@Base+0x4630>
  41f954:	mov	x20, x0
  41f958:	b	41f390 <_obstack_memory_used@@Base+0x82c8>
  41f95c:	cbz	w0, 41ef48 <_obstack_memory_used@@Base+0x7e80>
  41f960:	mov	x20, x1
  41f964:	str	x1, [sp, #288]
  41f968:	b	41ef48 <_obstack_memory_used@@Base+0x7e80>
  41f96c:	ldp	x23, x24, [sp, #48]
  41f970:	ldr	x27, [sp, #184]
  41f974:	ldr	x28, [sp, #536]
  41f978:	b	41f5e4 <_obstack_memory_used@@Base+0x851c>
  41f97c:	ldrsb	w0, [x19, #104]
  41f980:	tbnz	w0, #31, 41f9ec <_obstack_memory_used@@Base+0x8924>
  41f984:	mov	x0, #0x1                   	// #1
  41f988:	str	x0, [sp, #96]
  41f98c:	ldr	w0, [sp, #160]
  41f990:	mov	x25, x27
  41f994:	cbnz	w0, 41f000 <_obstack_memory_used@@Base+0x7f38>
  41f998:	b	41f2e0 <_obstack_memory_used@@Base+0x8218>
  41f99c:	cbz	w2, 41ef48 <_obstack_memory_used@@Base+0x7e80>
  41f9a0:	mov	x20, x0
  41f9a4:	str	x0, [sp, #288]
  41f9a8:	b	41ef3c <_obstack_memory_used@@Base+0x7e74>
  41f9ac:	mov	x20, x0
  41f9b0:	b	41f07c <_obstack_memory_used@@Base+0x7fb4>
  41f9b4:	ldr	x19, [x20, #88]
  41f9b8:	cbnz	x19, 41efd8 <_obstack_memory_used@@Base+0x7f10>
  41f9bc:	b	41f918 <_obstack_memory_used@@Base+0x8850>
  41f9c0:	mov	x0, x24
  41f9c4:	bl	4026b0 <free@plt>
  41f9c8:	b	41f41c <_obstack_memory_used@@Base+0x8354>
  41f9cc:	ldr	x2, [x19, #80]
  41f9d0:	mov	w3, w0
  41f9d4:	mov	x1, x20
  41f9d8:	add	x0, sp, #0x118
  41f9dc:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  41f9e0:	mov	x19, x0
  41f9e4:	cbnz	x19, 41efd8 <_obstack_memory_used@@Base+0x7f10>
  41f9e8:	b	41f918 <_obstack_memory_used@@Base+0x8850>
  41f9ec:	mov	x2, x27
  41f9f0:	mov	x1, x19
  41f9f4:	add	x0, sp, #0x160
  41f9f8:	bl	41b6f8 <_obstack_memory_used@@Base+0x4630>
  41f9fc:	str	x0, [sp, #96]
  41fa00:	cbz	x0, 41f000 <_obstack_memory_used@@Base+0x7f38>
  41fa04:	b	41f984 <_obstack_memory_used@@Base+0x88bc>
  41fa08:	ldr	x0, [sp, #176]
  41fa0c:	ldrb	w0, [x0, x20]
  41fa10:	b	41eed8 <_obstack_memory_used@@Base+0x7e10>
  41fa14:	add	x20, x19, #0x10
  41fa18:	add	x21, x19, #0x18
  41fa1c:	mov	x1, x20
  41fa20:	mov	x2, x21
  41fa24:	add	x0, sp, #0x160
  41fa28:	mov	x3, #0x0                   	// #0
  41fa2c:	bl	41bf38 <_obstack_memory_used@@Base+0x4e70>
  41fa30:	str	w0, [sp, #280]
  41fa34:	cbnz	w0, 41fab8 <_obstack_memory_used@@Base+0x89f0>
  41fa38:	ldrb	w0, [x19, #104]
  41fa3c:	tbnz	w0, #6, 41fa48 <_obstack_memory_used@@Base+0x8980>
  41fa40:	mov	w24, #0x0                   	// #0
  41fa44:	b	41eff4 <_obstack_memory_used@@Base+0x7f2c>
  41fa48:	mov	x2, x21
  41fa4c:	mov	x1, x20
  41fa50:	add	x0, sp, #0x160
  41fa54:	bl	41dee0 <_obstack_memory_used@@Base+0x6e18>
  41fa58:	str	w0, [sp, #280]
  41fa5c:	cbnz	w0, 41fab8 <_obstack_memory_used@@Base+0x89f0>
  41fa60:	ldrb	w0, [x19, #104]
  41fa64:	mov	w24, #0x0                   	// #0
  41fa68:	b	41eff4 <_obstack_memory_used@@Base+0x7f2c>
  41fa6c:	mov	w0, #0xc                   	// #12
  41fa70:	str	w0, [sp, #116]
  41fa74:	b	41f5e4 <_obstack_memory_used@@Base+0x851c>
  41fa78:	str	w0, [sp, #116]
  41fa7c:	ldp	x23, x24, [sp, #48]
  41fa80:	ldr	x27, [sp, #184]
  41fa84:	ldr	x28, [sp, #536]
  41fa88:	b	41f5e4 <_obstack_memory_used@@Base+0x851c>
  41fa8c:	mov	w1, #0xc                   	// #12
  41fa90:	mov	x0, x24
  41fa94:	str	w1, [sp, #116]
  41fa98:	ldr	x27, [sp, #184]
  41fa9c:	bl	4026b0 <free@plt>
  41faa0:	ldp	x23, x24, [sp, #48]
  41faa4:	b	41f5e4 <_obstack_memory_used@@Base+0x851c>
  41faa8:	mov	w0, #0x1                   	// #1
  41faac:	str	w0, [sp, #116]
  41fab0:	ldr	x28, [sp, #536]
  41fab4:	b	41f5e4 <_obstack_memory_used@@Base+0x851c>
  41fab8:	sxtw	x25, w0
  41fabc:	b	41f2e0 <_obstack_memory_used@@Base+0x8218>
  41fac0:	cmp	x6, x1
  41fac4:	b.eq	41fb28 <_obstack_memory_used@@Base+0x8a60>  // b.none
  41fac8:	ldr	x1, [x8, x1, lsl #3]
  41facc:	str	x1, [x0]
  41fad0:	cmp	x6, x3
  41fad4:	b.eq	41fb20 <_obstack_memory_used@@Base+0x8a58>  // b.none
  41fad8:	ldr	x3, [x8, x3, lsl #3]
  41fadc:	b	41f7ac <_obstack_memory_used@@Base+0x86e4>
  41fae0:	ldrb	w0, [x27, #176]
  41fae4:	tbz	w0, #0, 41faf8 <_obstack_memory_used@@Base+0x8a30>
  41fae8:	ldr	x0, [x27, #152]
  41faec:	cmp	x0, #0x0
  41faf0:	cset	w0, gt
  41faf4:	str	w0, [sp, #268]
  41faf8:	ldrb	w4, [sp, #268]
  41fafc:	add	x1, sp, #0x160
  41fb00:	ldr	x0, [sp, #104]
  41fb04:	ldr	x2, [sp, #120]
  41fb08:	ldr	x19, [sp, #256]
  41fb0c:	mov	x3, x19
  41fb10:	bl	41d718 <_obstack_memory_used@@Base+0x6650>
  41fb14:	cbnz	w0, 41fb44 <_obstack_memory_used@@Base+0x8a7c>
  41fb18:	ldr	x1, [x19]
  41fb1c:	b	41f778 <_obstack_memory_used@@Base+0x86b0>
  41fb20:	mov	x3, x7
  41fb24:	b	41f7ac <_obstack_memory_used@@Base+0x86e4>
  41fb28:	mov	x1, x7
  41fb2c:	b	41facc <_obstack_memory_used@@Base+0x8a04>
  41fb30:	ldr	x2, [sp, #256]
  41fb34:	mov	x1, #0x0                   	// #0
  41fb38:	ldr	x0, [sp, #520]
  41fb3c:	stp	xzr, x0, [x2]
  41fb40:	b	41f778 <_obstack_memory_used@@Base+0x86b0>
  41fb44:	str	w0, [sp, #116]
  41fb48:	ldp	x23, x24, [sp, #48]
  41fb4c:	ldr	x28, [sp, #536]
  41fb50:	b	41f5e4 <_obstack_memory_used@@Base+0x851c>
  41fb54:	nop
  41fb58:	stp	x29, x30, [sp, #-224]!
  41fb5c:	mov	x29, sp
  41fb60:	stp	x19, x20, [sp, #16]
  41fb64:	mov	x20, x0
  41fb68:	mov	x19, x2
  41fb6c:	ldr	x0, [x0, #184]
  41fb70:	stp	x21, x22, [sp, #32]
  41fb74:	lsl	x2, x2, #3
  41fb78:	stp	x23, x24, [sp, #48]
  41fb7c:	mov	x21, x3
  41fb80:	ldr	x22, [x0, x19, lsl #3]
  41fb84:	stp	x27, x28, [sp, #80]
  41fb88:	mov	x27, x1
  41fb8c:	str	x2, [sp, #96]
  41fb90:	add	x1, x0, x2
  41fb94:	str	wzr, [sp, #164]
  41fb98:	ldr	x0, [x3, #8]
  41fb9c:	ldr	x23, [x20, #152]
  41fba0:	cbz	x22, 41ff60 <_obstack_memory_used@@Base+0x8e98>
  41fba4:	cbnz	x0, 41fbdc <_obstack_memory_used@@Base+0x8b14>
  41fba8:	ldr	x0, [x27]
  41fbac:	mov	w2, #0x0                   	// #0
  41fbb0:	str	xzr, [x0, x19, lsl #3]
  41fbb4:	ldr	x0, [x1]
  41fbb8:	ldrb	w0, [x0, #104]
  41fbbc:	tbnz	w0, #6, 41fcfc <_obstack_memory_used@@Base+0x8c34>
  41fbc0:	mov	w0, w2
  41fbc4:	ldp	x19, x20, [sp, #16]
  41fbc8:	ldp	x21, x22, [sp, #32]
  41fbcc:	ldp	x23, x24, [sp, #48]
  41fbd0:	ldp	x27, x28, [sp, #80]
  41fbd4:	ldp	x29, x30, [sp], #224
  41fbd8:	ret
  41fbdc:	mov	x2, x3
  41fbe0:	mov	x1, x23
  41fbe4:	add	x0, sp, #0xa8
  41fbe8:	str	wzr, [sp, #168]
  41fbec:	bl	41a0a0 <_obstack_memory_used@@Base+0x2fd8>
  41fbf0:	ldr	w2, [sp, #168]
  41fbf4:	cbnz	w2, 41fbc0 <_obstack_memory_used@@Base+0x8af8>
  41fbf8:	stp	x25, x26, [sp, #64]
  41fbfc:	mov	x26, x0
  41fc00:	ldr	x24, [x26, #56]!
  41fc04:	cbnz	x24, 41fc90 <_obstack_memory_used@@Base+0x8bc8>
  41fc08:	ldr	x1, [x21, #8]
  41fc0c:	str	x1, [x0, #56]
  41fc10:	str	xzr, [x26, #8]
  41fc14:	lsl	x0, x1, #3
  41fc18:	bl	402440 <malloc@plt>
  41fc1c:	str	x0, [x26, #16]
  41fc20:	cbz	x0, 41fc6c <_obstack_memory_used@@Base+0x8ba4>
  41fc24:	ldr	x0, [x21, #8]
  41fc28:	str	wzr, [sp, #168]
  41fc2c:	cmp	x0, #0x0
  41fc30:	b.gt	41fc44 <_obstack_memory_used@@Base+0x8b7c>
  41fc34:	b	41fc90 <_obstack_memory_used@@Base+0x8bc8>
  41fc38:	ldr	x0, [x21, #8]
  41fc3c:	cmp	x24, x0
  41fc40:	b.ge	41fc90 <_obstack_memory_used@@Base+0x8bc8>  // b.tcont
  41fc44:	ldr	x2, [x21, #16]
  41fc48:	mov	x0, x26
  41fc4c:	ldr	x1, [x23, #56]
  41fc50:	ldr	x3, [x2, x24, lsl #3]
  41fc54:	add	x24, x24, #0x1
  41fc58:	add	x3, x3, x3, lsl #1
  41fc5c:	add	x1, x1, x3, lsl #3
  41fc60:	bl	419630 <_obstack_memory_used@@Base+0x2568>
  41fc64:	str	w0, [sp, #168]
  41fc68:	cbz	w0, 41fc38 <_obstack_memory_used@@Base+0x8b70>
  41fc6c:	mov	w2, #0xc                   	// #12
  41fc70:	mov	w0, w2
  41fc74:	ldp	x19, x20, [sp, #16]
  41fc78:	ldp	x21, x22, [sp, #32]
  41fc7c:	ldp	x23, x24, [sp, #48]
  41fc80:	ldp	x25, x26, [sp, #64]
  41fc84:	ldp	x27, x28, [sp, #80]
  41fc88:	ldp	x29, x30, [sp], #224
  41fc8c:	ret
  41fc90:	add	x25, x22, #0x8
  41fc94:	mov	x2, x26
  41fc98:	mov	x1, x25
  41fc9c:	mov	x0, x21
  41fca0:	bl	41b000 <_obstack_memory_used@@Base+0x3f38>
  41fca4:	str	w0, [sp, #164]
  41fca8:	mov	w2, w0
  41fcac:	cbnz	w0, 420048 <_obstack_memory_used@@Base+0x8f80>
  41fcb0:	ldr	x0, [x27, #40]
  41fcb4:	cmp	x0, #0x0
  41fcb8:	cbnz	x0, 420068 <_obstack_memory_used@@Base+0x8fa0>
  41fcbc:	ldr	x24, [x27]
  41fcc0:	mov	x2, x21
  41fcc4:	mov	x1, x23
  41fcc8:	add	x0, sp, #0xa4
  41fccc:	bl	41a0a0 <_obstack_memory_used@@Base+0x2fd8>
  41fcd0:	ldr	w2, [sp, #164]
  41fcd4:	str	x0, [x24, x19, lsl #3]
  41fcd8:	cbnz	w2, 420048 <_obstack_memory_used@@Base+0x8f80>
  41fcdc:	ldr	x0, [sp, #96]
  41fce0:	mov	w2, #0x0                   	// #0
  41fce4:	ldr	x1, [x20, #184]
  41fce8:	ldp	x25, x26, [sp, #64]
  41fcec:	add	x1, x1, x0
  41fcf0:	ldr	x0, [x1]
  41fcf4:	ldrb	w0, [x0, #104]
  41fcf8:	tbz	w0, #6, 41fbc0 <_obstack_memory_used@@Base+0x8af8>
  41fcfc:	ldr	x4, [x20, #200]
  41fd00:	stp	x25, x26, [sp, #64]
  41fd04:	mov	x26, #0x0                   	// #0
  41fd08:	mov	x2, x4
  41fd0c:	b	41fd30 <_obstack_memory_used@@Base+0x8c68>
  41fd10:	asr	x0, x0, #1
  41fd14:	ldr	x3, [x20, #216]
  41fd18:	add	x1, x0, x0, lsl #2
  41fd1c:	add	x1, x3, x1, lsl #3
  41fd20:	ldr	x1, [x1, #8]
  41fd24:	cmp	x19, x1
  41fd28:	b.gt	41ffd4 <_obstack_memory_used@@Base+0x8f0c>
  41fd2c:	mov	x2, x0
  41fd30:	add	x0, x2, x26
  41fd34:	cmp	x2, x26
  41fd38:	b.gt	41fd10 <_obstack_memory_used@@Base+0x8c48>
  41fd3c:	cmp	x4, x26
  41fd40:	b.le	41ffc8 <_obstack_memory_used@@Base+0x8f00>
  41fd44:	add	x1, x26, x26, lsl #2
  41fd48:	ldr	x0, [x20, #216]
  41fd4c:	lsl	x1, x1, #3
  41fd50:	str	x1, [sp, #136]
  41fd54:	add	x0, x0, x1
  41fd58:	ldr	x0, [x0, #8]
  41fd5c:	cmp	x19, x0
  41fd60:	b.ne	41ffc8 <_obstack_memory_used@@Base+0x8f00>  // b.any
  41fd64:	ldr	x0, [x22, #16]
  41fd68:	str	xzr, [sp, #168]
  41fd6c:	add	x22, x22, #0x8
  41fd70:	cmp	x0, #0x0
  41fd74:	ldr	x25, [x20, #152]
  41fd78:	b.le	41ffc8 <_obstack_memory_used@@Base+0x8f00>
  41fd7c:	add	x0, x27, #0x30
  41fd80:	mov	x24, #0x0                   	// #0
  41fd84:	str	x0, [sp, #128]
  41fd88:	add	x0, sp, #0xc8
  41fd8c:	str	x0, [sp, #152]
  41fd90:	b	41fdac <_obstack_memory_used@@Base+0x8ce4>
  41fd94:	cmp	w0, #0x4
  41fd98:	b.eq	41fde0 <_obstack_memory_used@@Base+0x8d18>  // b.none
  41fd9c:	ldr	x0, [x22, #8]
  41fda0:	add	x24, x24, #0x1
  41fda4:	cmp	x24, x0
  41fda8:	b.ge	41ffc0 <_obstack_memory_used@@Base+0x8ef8>  // b.tcont
  41fdac:	ldr	x1, [x22, #16]
  41fdb0:	ldr	x0, [x25]
  41fdb4:	ldr	x21, [x1, x24, lsl #3]
  41fdb8:	ldr	x1, [x27, #16]
  41fdbc:	add	x0, x0, x21, lsl #4
  41fdc0:	cmp	x21, x1
  41fdc4:	ldrb	w0, [x0, #8]
  41fdc8:	b.ne	41fd94 <_obstack_memory_used@@Base+0x8ccc>  // b.any
  41fdcc:	ldr	x1, [x27, #24]
  41fdd0:	cmp	x19, x1
  41fdd4:	b.eq	41fd9c <_obstack_memory_used@@Base+0x8cd4>  // b.none
  41fdd8:	cmp	w0, #0x4
  41fddc:	b.ne	41fd9c <_obstack_memory_used@@Base+0x8cd4>  // b.any
  41fde0:	add	x0, x21, x21, lsl #1
  41fde4:	lsl	x1, x21, #3
  41fde8:	ldr	x8, [x20, #216]
  41fdec:	lsl	x0, x0, #3
  41fdf0:	stp	x1, x0, [sp, #104]
  41fdf4:	add	x0, x27, #0x28
  41fdf8:	mov	x23, x26
  41fdfc:	ldr	x1, [sp, #136]
  41fe00:	str	x0, [sp, #120]
  41fe04:	add	x0, x27, #0x20
  41fe08:	str	x0, [sp, #144]
  41fe0c:	add	x28, x8, x1
  41fe10:	b	41ff2c <_obstack_memory_used@@Base+0x8e64>
  41fe14:	ldr	x0, [x25, #24]
  41fe18:	ldr	x1, [sp, #104]
  41fe1c:	ldr	x2, [x0, x1]
  41fe20:	ldr	x0, [x27, #24]
  41fe24:	cmp	x6, x0
  41fe28:	b.gt	41ff18 <_obstack_memory_used@@Base+0x8e50>
  41fe2c:	ldr	x0, [x27]
  41fe30:	ldr	x1, [x0, x6, lsl #3]
  41fe34:	cbz	x1, 41ff18 <_obstack_memory_used@@Base+0x8e50>
  41fe38:	ldr	x0, [x1, #16]
  41fe3c:	add	x1, x1, #0x18
  41fe40:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41fe44:	cbz	x0, 41ff18 <_obstack_memory_used@@Base+0x8e50>
  41fe48:	mov	x5, x2
  41fe4c:	mov	x4, x19
  41fe50:	ldp	x1, x2, [sp, #120]
  41fe54:	mov	x3, x21
  41fe58:	mov	x0, x20
  41fe5c:	bl	419008 <_obstack_memory_used@@Base+0x1f40>
  41fe60:	tst	w0, #0xff
  41fe64:	b.ne	41ff18 <_obstack_memory_used@@Base+0x8e50>  // b.any
  41fe68:	ldr	x0, [sp, #168]
  41fe6c:	cbz	x0, 41ffdc <_obstack_memory_used@@Base+0x8f14>
  41fe70:	mov	x1, x23
  41fe74:	add	x0, sp, #0xc8
  41fe78:	stp	x21, x19, [sp, #184]
  41fe7c:	bl	4177c8 <_obstack_memory_used@@Base+0x700>
  41fe80:	tst	w0, #0xff
  41fe84:	b.eq	420254 <_obstack_memory_used@@Base+0x918c>  // b.none
  41fe88:	ldr	x3, [sp, #96]
  41fe8c:	add	x1, sp, #0xa8
  41fe90:	ldr	x2, [sp, #168]
  41fe94:	mov	x0, x20
  41fe98:	ldr	x28, [x2, x3]
  41fe9c:	bl	41e758 <_obstack_memory_used@@Base+0x7690>
  41fea0:	mov	w2, w0
  41fea4:	cbnz	w0, 420010 <_obstack_memory_used@@Base+0x8f48>
  41fea8:	ldr	x1, [x27, #8]
  41feac:	ldr	x2, [sp, #168]
  41feb0:	cbz	x1, 41fecc <_obstack_memory_used@@Base+0x8e04>
  41feb4:	add	x3, x19, #0x1
  41feb8:	mov	x0, x25
  41febc:	bl	41a2c0 <_obstack_memory_used@@Base+0x31f8>
  41fec0:	mov	w2, w0
  41fec4:	cbnz	w0, 420010 <_obstack_memory_used@@Base+0x8f48>
  41fec8:	ldr	x2, [sp, #168]
  41fecc:	add	x8, sp, #0xd8
  41fed0:	ldr	x0, [sp, #96]
  41fed4:	mov	x1, x8
  41fed8:	ldr	x6, [sp, #208]
  41fedc:	str	x28, [x2, x0]
  41fee0:	mov	x2, x23
  41fee4:	mov	x0, x6
  41fee8:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  41feec:	subs	x2, x0, #0x1
  41fef0:	ccmp	x6, x2, #0x4, pl  // pl = nfrst
  41fef4:	b.le	41ff0c <_obstack_memory_used@@Base+0x8e44>
  41fef8:	sub	x6, x6, #0x1
  41fefc:	mov	x1, x8
  41ff00:	add	x0, sp, #0xd0
  41ff04:	str	x6, [sp, #208]
  41ff08:	bl	418ec0 <_obstack_memory_used@@Base+0x1df8>
  41ff0c:	ldr	x0, [x20, #216]
  41ff10:	add	x8, x23, x23, lsl #2
  41ff14:	add	x28, x0, x8, lsl #3
  41ff18:	ldrb	w0, [x28, #32]
  41ff1c:	add	x23, x23, #0x1
  41ff20:	add	x8, x28, #0x28
  41ff24:	cbz	w0, 41fd9c <_obstack_memory_used@@Base+0x8cd4>
  41ff28:	mov	x28, x8
  41ff2c:	ldr	x0, [x28]
  41ff30:	cmp	x21, x0
  41ff34:	b.ne	41ff18 <_obstack_memory_used@@Base+0x8e50>  // b.any
  41ff38:	ldp	x1, x0, [x28, #16]
  41ff3c:	sub	x0, x0, x1
  41ff40:	add	x6, x19, x0
  41ff44:	cbnz	x0, 41fe14 <_obstack_memory_used@@Base+0x8d4c>
  41ff48:	ldr	x0, [x25, #40]
  41ff4c:	ldr	x1, [sp, #112]
  41ff50:	add	x0, x0, x1
  41ff54:	ldr	x0, [x0, #16]
  41ff58:	ldr	x2, [x0]
  41ff5c:	b	41fe20 <_obstack_memory_used@@Base+0x8d58>
  41ff60:	ldr	x20, [x27]
  41ff64:	cbnz	x0, 41ff8c <_obstack_memory_used@@Base+0x8ec4>
  41ff68:	str	xzr, [x20, x19, lsl #3]
  41ff6c:	mov	w2, #0x0                   	// #0
  41ff70:	mov	w0, w2
  41ff74:	ldp	x19, x20, [sp, #16]
  41ff78:	ldp	x21, x22, [sp, #32]
  41ff7c:	ldp	x23, x24, [sp, #48]
  41ff80:	ldp	x27, x28, [sp, #80]
  41ff84:	ldp	x29, x30, [sp], #224
  41ff88:	ret
  41ff8c:	mov	x2, x3
  41ff90:	mov	x1, x23
  41ff94:	add	x0, sp, #0xa4
  41ff98:	bl	41a0a0 <_obstack_memory_used@@Base+0x2fd8>
  41ff9c:	ldr	w2, [sp, #164]
  41ffa0:	str	x0, [x20, x19, lsl #3]
  41ffa4:	mov	w0, w2
  41ffa8:	ldp	x19, x20, [sp, #16]
  41ffac:	ldp	x21, x22, [sp, #32]
  41ffb0:	ldp	x23, x24, [sp, #48]
  41ffb4:	ldp	x27, x28, [sp, #80]
  41ffb8:	ldp	x29, x30, [sp], #224
  41ffbc:	ret
  41ffc0:	ldr	x0, [sp, #168]
  41ffc4:	cbnz	x0, 420280 <_obstack_memory_used@@Base+0x91b8>
  41ffc8:	mov	w2, #0x0                   	// #0
  41ffcc:	ldp	x25, x26, [sp, #64]
  41ffd0:	b	41fbc0 <_obstack_memory_used@@Base+0x8af8>
  41ffd4:	add	x26, x0, #0x1
  41ffd8:	b	41fd30 <_obstack_memory_used@@Base+0x8c68>
  41ffdc:	ldp	x0, x1, [x27]
  41ffe0:	stp	x0, x1, [sp, #168]
  41ffe4:	ldp	x2, x3, [x27, #16]
  41ffe8:	stp	x2, x3, [sp, #184]
  41ffec:	ldp	x2, x3, [x27, #32]
  41fff0:	stp	x2, x3, [sp, #200]
  41fff4:	ldp	x1, x0, [sp, #144]
  41fff8:	ldr	x2, [x27, #48]
  41fffc:	str	x2, [sp, #216]
  420000:	bl	419bb0 <_obstack_memory_used@@Base+0x2ae8>
  420004:	mov	w2, w0
  420008:	cbz	w0, 41fe70 <_obstack_memory_used@@Base+0x8da8>
  42000c:	nop
  420010:	ldr	x0, [sp, #168]
  420014:	cbz	x0, 420048 <_obstack_memory_used@@Base+0x8f80>
  420018:	ldr	x0, [sp, #216]
  42001c:	str	w2, [sp, #96]
  420020:	bl	4026b0 <free@plt>
  420024:	ldr	w2, [sp, #96]
  420028:	ldp	x19, x20, [sp, #16]
  42002c:	mov	w0, w2
  420030:	ldp	x21, x22, [sp, #32]
  420034:	ldp	x23, x24, [sp, #48]
  420038:	ldp	x25, x26, [sp, #64]
  42003c:	ldp	x27, x28, [sp, #80]
  420040:	ldp	x29, x30, [sp], #224
  420044:	ret
  420048:	mov	w0, w2
  42004c:	ldp	x19, x20, [sp, #16]
  420050:	ldp	x21, x22, [sp, #32]
  420054:	ldp	x23, x24, [sp, #48]
  420058:	ldp	x25, x26, [sp, #64]
  42005c:	ldp	x27, x28, [sp, #80]
  420060:	ldp	x29, x30, [sp], #224
  420064:	ret
  420068:	ldr	x0, [x20, #216]
  42006c:	str	x0, [sp, #104]
  420070:	b.le	420148 <_obstack_memory_used@@Base+0x9080>
  420074:	mov	x28, #0x0                   	// #0
  420078:	ldr	x0, [x27, #48]
  42007c:	ldr	x3, [sp, #104]
  420080:	ldr	x0, [x0, x28, lsl #3]
  420084:	add	x0, x0, x0, lsl #2
  420088:	add	x1, x3, x0, lsl #3
  42008c:	ldr	x2, [x1, #16]
  420090:	cmp	x19, x2
  420094:	b.le	420138 <_obstack_memory_used@@Base+0x9070>
  420098:	ldr	x2, [x1, #8]
  42009c:	cmp	x19, x2
  4200a0:	b.gt	420138 <_obstack_memory_used@@Base+0x9070>
  4200a4:	ldr	x2, [x3, x0, lsl #3]
  4200a8:	ldr	x0, [x23]
  4200ac:	lsl	x2, x2, #4
  4200b0:	ldr	x1, [x1, #24]
  4200b4:	ldr	x24, [x0, x2]
  4200b8:	cmp	x19, x1
  4200bc:	ldr	x6, [x21, #8]
  4200c0:	b.eq	420150 <_obstack_memory_used@@Base+0x9088>  // b.none
  4200c4:	cmp	x6, #0x0
  4200c8:	mov	x26, #0x0                   	// #0
  4200cc:	b.gt	4200e4 <_obstack_memory_used@@Base+0x901c>
  4200d0:	b	420138 <_obstack_memory_used@@Base+0x9070>
  4200d4:	add	x26, x26, #0x1
  4200d8:	cmp	x26, x6
  4200dc:	b.ge	420138 <_obstack_memory_used@@Base+0x9070>  // b.tcont
  4200e0:	ldr	x0, [x23]
  4200e4:	ldr	x1, [x21, #16]
  4200e8:	ldr	x1, [x1, x26, lsl #3]
  4200ec:	lsl	x3, x1, #4
  4200f0:	add	x2, x0, x3
  4200f4:	ldrb	w2, [x2, #8]
  4200f8:	sub	w2, w2, #0x8
  4200fc:	cmp	w2, #0x1
  420100:	b.hi	4200d4 <_obstack_memory_used@@Base+0x900c>  // b.pmore
  420104:	ldr	x0, [x0, x3]
  420108:	cmp	x24, x0
  42010c:	b.ne	4200d4 <_obstack_memory_used@@Base+0x900c>  // b.any
  420110:	mov	x2, x21
  420114:	mov	x3, x25
  420118:	mov	x0, x23
  42011c:	bl	41b1b0 <_obstack_memory_used@@Base+0x40e8>
  420120:	mov	w2, w0
  420124:	cbnz	w0, 420048 <_obstack_memory_used@@Base+0x8f80>
  420128:	ldr	x6, [x21, #8]
  42012c:	add	x26, x26, #0x1
  420130:	cmp	x26, x6
  420134:	b.lt	4200e0 <_obstack_memory_used@@Base+0x9018>  // b.tstop
  420138:	ldr	x0, [x27, #40]
  42013c:	add	x28, x28, #0x1
  420140:	cmp	x28, x0
  420144:	b.lt	420078 <_obstack_memory_used@@Base+0x8fb0>  // b.tstop
  420148:	str	wzr, [sp, #164]
  42014c:	b	41fcbc <_obstack_memory_used@@Base+0x8bf4>
  420150:	cmp	x6, #0x0
  420154:	b.le	420138 <_obstack_memory_used@@Base+0x9070>
  420158:	ldr	x10, [x21, #16]
  42015c:	mov	x26, #0xffffffffffffffff    	// #-1
  420160:	mov	x1, x26
  420164:	mov	x2, x10
  420168:	add	x11, x10, x6, lsl #3
  42016c:	b	420190 <_obstack_memory_used@@Base+0x90c8>
  420170:	cmp	w3, #0x9
  420174:	b.ne	420184 <_obstack_memory_used@@Base+0x90bc>  // b.any
  420178:	ldr	x3, [x9]
  42017c:	cmp	x24, x3
  420180:	csel	x26, x26, x4, ne  // ne = any
  420184:	add	x2, x2, #0x8
  420188:	cmp	x11, x2
  42018c:	b.eq	4201c0 <_obstack_memory_used@@Base+0x90f8>  // b.none
  420190:	ldr	x4, [x2]
  420194:	lsl	x5, x4, #4
  420198:	add	x9, x0, x5
  42019c:	ldrb	w3, [x9, #8]
  4201a0:	cmp	w3, #0x8
  4201a4:	b.ne	420170 <_obstack_memory_used@@Base+0x90a8>  // b.any
  4201a8:	ldr	x3, [x0, x5]
  4201ac:	add	x2, x2, #0x8
  4201b0:	cmp	x24, x3
  4201b4:	csel	x1, x1, x4, ne  // ne = any
  4201b8:	cmp	x11, x2
  4201bc:	b.ne	420190 <_obstack_memory_used@@Base+0x90c8>  // b.any
  4201c0:	tbz	x1, #63, 420224 <_obstack_memory_used@@Base+0x915c>
  4201c4:	tbnz	x26, #63, 420138 <_obstack_memory_used@@Base+0x9070>
  4201c8:	mov	x24, #0x0                   	// #0
  4201cc:	nop
  4201d0:	ldr	x9, [x10, x24, lsl #3]
  4201d4:	mov	x2, x26
  4201d8:	ldr	x0, [x23, #56]
  4201dc:	add	x8, x9, x9, lsl #1
  4201e0:	lsl	x8, x8, #3
  4201e4:	add	x0, x0, x8
  4201e8:	add	x1, x0, #0x10
  4201ec:	ldr	x0, [x0, #8]
  4201f0:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  4201f4:	cbnz	x0, 420210 <_obstack_memory_used@@Base+0x9148>
  4201f8:	ldr	x0, [x23, #48]
  4201fc:	add	x8, x0, x8
  420200:	add	x1, x8, #0x10
  420204:	ldr	x0, [x8, #8]
  420208:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  42020c:	cbz	x0, 42025c <_obstack_memory_used@@Base+0x9194>
  420210:	add	x24, x24, #0x1
  420214:	cmp	x6, x24
  420218:	b.le	420138 <_obstack_memory_used@@Base+0x9070>
  42021c:	ldr	x10, [x21, #16]
  420220:	b	4201d0 <_obstack_memory_used@@Base+0x9108>
  420224:	mov	x2, x21
  420228:	mov	x3, x25
  42022c:	mov	x0, x23
  420230:	bl	41b1b0 <_obstack_memory_used@@Base+0x40e8>
  420234:	mov	w2, w0
  420238:	cbnz	w0, 420048 <_obstack_memory_used@@Base+0x8f80>
  42023c:	tbnz	x26, #63, 420138 <_obstack_memory_used@@Base+0x9070>
  420240:	ldr	x6, [x21, #8]
  420244:	cmp	x6, #0x0
  420248:	b.le	420138 <_obstack_memory_used@@Base+0x9070>
  42024c:	ldr	x10, [x21, #16]
  420250:	b	4201c8 <_obstack_memory_used@@Base+0x9100>
  420254:	mov	w2, #0xc                   	// #12
  420258:	b	420010 <_obstack_memory_used@@Base+0x8f48>
  42025c:	mov	x2, x21
  420260:	mov	x1, x9
  420264:	mov	x3, x25
  420268:	mov	x0, x23
  42026c:	bl	41b1b0 <_obstack_memory_used@@Base+0x40e8>
  420270:	mov	w2, w0
  420274:	cbnz	w0, 420048 <_obstack_memory_used@@Base+0x8f80>
  420278:	ldr	x6, [x21, #8]
  42027c:	b	420214 <_obstack_memory_used@@Base+0x914c>
  420280:	mov	w2, #0x0                   	// #0
  420284:	b	420018 <_obstack_memory_used@@Base+0x8f50>
  420288:	stp	x29, x30, [sp, #-32]!
  42028c:	mov	x9, x0
  420290:	mov	x6, x1
  420294:	mov	x29, sp
  420298:	ldr	w0, [x1, #144]
  42029c:	mov	x10, x2
  4202a0:	mov	w7, w3
  4202a4:	mov	x12, x4
  4202a8:	and	w5, w5, #0xff
  4202ac:	cmp	w0, #0x1
  4202b0:	ldr	x11, [x1, #72]
  4202b4:	b.eq	4202cc <_obstack_memory_used@@Base+0x9204>  // b.none
  4202b8:	mov	x1, x11
  4202bc:	mov	x0, x6
  4202c0:	bl	418cf8 <_obstack_memory_used@@Base+0x1c30>
  4202c4:	cmp	w0, #0x1
  4202c8:	b.gt	42030c <_obstack_memory_used@@Base+0x9244>
  4202cc:	ldrb	w8, [x10, #8]
  4202d0:	add	x7, x11, w7, sxtw
  4202d4:	str	x7, [x6, #72]
  4202d8:	and	w0, w8, #0xfffffffb
  4202dc:	cmp	w0, #0x1a
  4202e0:	ccmp	w8, #0x1c, #0x4, ne  // ne = any
  4202e4:	b.eq	420334 <_obstack_memory_used@@Base+0x926c>  // b.none
  4202e8:	cmp	w5, #0x0
  4202ec:	ccmp	w8, #0x16, #0x0, eq  // eq = none
  4202f0:	b.eq	420480 <_obstack_memory_used@@Base+0x93b8>  // b.none
  4202f4:	ldrb	w1, [x10]
  4202f8:	mov	w0, #0x0                   	// #0
  4202fc:	str	wzr, [x9]
  420300:	strb	w1, [x9, #8]
  420304:	ldp	x29, x30, [sp], #32
  420308:	ret
  42030c:	ldr	x1, [x6, #16]
  420310:	mov	w2, #0x1                   	// #1
  420314:	str	w2, [x9]
  420318:	add	x2, x11, w0, sxtw
  42031c:	mov	w0, #0x0                   	// #0
  420320:	ldr	w1, [x1, x11, lsl #2]
  420324:	str	w1, [x9, #8]
  420328:	str	x2, [x6, #72]
  42032c:	ldp	x29, x30, [sp], #32
  420330:	ret
  420334:	ldr	x11, [x6, #104]
  420338:	cmp	x7, x11
  42033c:	b.ge	4203e4 <_obstack_memory_used@@Base+0x931c>  // b.tcont
  420340:	ldrb	w12, [x10]
  420344:	mov	x5, #0x0                   	// #0
  420348:	b	42036c <_obstack_memory_used@@Base+0x92a4>
  42034c:	ldr	x0, [x9, #8]
  420350:	strb	w8, [x0, x5]
  420354:	add	x5, x5, #0x1
  420358:	cmp	x5, #0x20
  42035c:	b.eq	4203e4 <_obstack_memory_used@@Base+0x931c>  // b.none
  420360:	ldrb	w8, [x10, #8]
  420364:	ldr	x7, [x6, #72]
  420368:	ldr	x11, [x6, #104]
  42036c:	cmp	w8, #0x1e
  420370:	mov	w13, w5
  420374:	b.eq	4203f0 <_obstack_memory_used@@Base+0x9328>  // b.none
  420378:	ldr	x0, [x6, #8]
  42037c:	add	x1, x7, #0x1
  420380:	str	x1, [x6, #72]
  420384:	ldrb	w8, [x0, x7]
  420388:	cmp	x11, x1
  42038c:	b.le	4203e4 <_obstack_memory_used@@Base+0x931c>
  420390:	cmp	w12, w8
  420394:	b.ne	42034c <_obstack_memory_used@@Base+0x9284>  // b.any
  420398:	ldr	x0, [x6, #8]
  42039c:	ldrb	w0, [x0, x1]
  4203a0:	cmp	w0, #0x5d
  4203a4:	b.ne	42034c <_obstack_memory_used@@Base+0x9284>  // b.any
  4203a8:	ldr	x0, [x9, #8]
  4203ac:	add	x1, x1, #0x1
  4203b0:	str	x1, [x6, #72]
  4203b4:	strb	wzr, [x0, w13, sxtw]
  4203b8:	ldrb	w0, [x10, #8]
  4203bc:	cmp	w0, #0x1c
  4203c0:	b.eq	4204b4 <_obstack_memory_used@@Base+0x93ec>  // b.none
  4203c4:	cmp	w0, #0x1e
  4203c8:	b.eq	4204a4 <_obstack_memory_used@@Base+0x93dc>  // b.none
  4203cc:	cmp	w0, #0x1a
  4203d0:	mov	w0, #0x0                   	// #0
  4203d4:	b.ne	420304 <_obstack_memory_used@@Base+0x923c>  // b.any
  4203d8:	mov	w1, #0x3                   	// #3
  4203dc:	str	w1, [x9]
  4203e0:	b	420304 <_obstack_memory_used@@Base+0x923c>
  4203e4:	mov	w0, #0x7                   	// #7
  4203e8:	ldp	x29, x30, [sp], #32
  4203ec:	ret
  4203f0:	ldrb	w0, [x6, #139]
  4203f4:	cbz	w0, 420378 <_obstack_memory_used@@Base+0x92b0>
  4203f8:	ldrb	w0, [x6, #140]
  4203fc:	cbz	w0, 420464 <_obstack_memory_used@@Base+0x939c>
  420400:	ldr	x0, [x6, #48]
  420404:	cmp	x7, x0
  420408:	b.eq	42041c <_obstack_memory_used@@Base+0x9354>  // b.none
  42040c:	ldr	x0, [x6, #16]
  420410:	ldr	w0, [x0, x7, lsl #2]
  420414:	cmn	w0, #0x1
  420418:	b.eq	420378 <_obstack_memory_used@@Base+0x92b0>  // b.none
  42041c:	ldr	x1, [x6, #24]
  420420:	ldr	x0, [x6]
  420424:	ldr	x2, [x1, x7, lsl #3]
  420428:	ldr	x1, [x6, #40]
  42042c:	add	x0, x0, x2
  420430:	ldrb	w8, [x0, x1]
  420434:	tbnz	w8, #7, 420378 <_obstack_memory_used@@Base+0x92b0>
  420438:	ldr	w0, [x6, #144]
  42043c:	mov	x1, #0x1                   	// #1
  420440:	cmp	w0, #0x1
  420444:	b.eq	420458 <_obstack_memory_used@@Base+0x9390>  // b.none
  420448:	mov	x1, x7
  42044c:	mov	x0, x6
  420450:	bl	418cf8 <_obstack_memory_used@@Base+0x1c30>
  420454:	sxtw	x1, w0
  420458:	add	x1, x7, x1
  42045c:	str	x1, [x6, #72]
  420460:	b	420388 <_obstack_memory_used@@Base+0x92c0>
  420464:	ldr	x0, [x6]
  420468:	add	x1, x7, #0x1
  42046c:	ldr	x2, [x6, #40]
  420470:	add	x0, x0, x7
  420474:	str	x1, [x6, #72]
  420478:	ldrb	w8, [x0, x2]
  42047c:	b	420388 <_obstack_memory_used@@Base+0x92c0>
  420480:	mov	x2, x12
  420484:	mov	x1, x6
  420488:	add	x0, sp, #0x10
  42048c:	bl	417150 <_obstack_memory_used@@Base+0x88>
  420490:	ldrb	w0, [sp, #24]
  420494:	cmp	w0, #0x15
  420498:	b.eq	4202f4 <_obstack_memory_used@@Base+0x922c>  // b.none
  42049c:	mov	w0, #0xb                   	// #11
  4204a0:	b	420304 <_obstack_memory_used@@Base+0x923c>
  4204a4:	mov	w1, #0x4                   	// #4
  4204a8:	mov	w0, #0x0                   	// #0
  4204ac:	str	w1, [x9]
  4204b0:	b	420304 <_obstack_memory_used@@Base+0x923c>
  4204b4:	mov	w1, #0x2                   	// #2
  4204b8:	mov	w0, #0x0                   	// #0
  4204bc:	str	w1, [x9]
  4204c0:	b	420304 <_obstack_memory_used@@Base+0x923c>
  4204c4:	nop
  4204c8:	stp	x29, x30, [sp, #-96]!
  4204cc:	mov	x29, sp
  4204d0:	stp	x19, x20, [sp, #16]
  4204d4:	mov	x19, x1
  4204d8:	stp	x21, x22, [sp, #32]
  4204dc:	ldr	x21, [x1, #72]
  4204e0:	stp	x23, x24, [sp, #48]
  4204e4:	mov	x23, x0
  4204e8:	ldr	x1, [x1, #104]
  4204ec:	cmp	x1, x21
  4204f0:	b.le	420718 <_obstack_memory_used@@Base+0x9650>
  4204f4:	ldr	x24, [x19, #8]
  4204f8:	mov	x22, x2
  4204fc:	ldrb	w1, [x0, #10]
  420500:	ldr	w0, [x19, #144]
  420504:	ldrb	w20, [x24, x21]
  420508:	and	w1, w1, #0xffffff9f
  42050c:	strb	w20, [x23]
  420510:	cmp	w0, #0x1
  420514:	strb	w1, [x23, #10]
  420518:	b.le	4205cc <_obstack_memory_used@@Base+0x9504>
  42051c:	ldr	x1, [x19, #48]
  420520:	cmp	x21, x1
  420524:	b.eq	420538 <_obstack_memory_used@@Base+0x9470>  // b.none
  420528:	ldr	x1, [x19, #16]
  42052c:	ldr	w1, [x1, x21, lsl #2]
  420530:	cmn	w1, #0x1
  420534:	b.eq	4207a8 <_obstack_memory_used@@Base+0x96e0>  // b.none
  420538:	cmp	w20, #0x5c
  42053c:	b.eq	420614 <_obstack_memory_used@@Base+0x954c>  // b.none
  420540:	ldr	x0, [x19, #16]
  420544:	str	x25, [sp, #64]
  420548:	mov	w1, #0x1                   	// #1
  42054c:	strb	w1, [x23, #8]
  420550:	ldr	w25, [x0, x21, lsl #2]
  420554:	mov	w0, w25
  420558:	bl	4027c0 <iswalnum@plt>
  42055c:	cmp	w25, #0x5f
  420560:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  420564:	ldrb	w0, [x23, #10]
  420568:	cset	w1, ne  // ne = any
  42056c:	bfi	w0, w1, #6, #1
  420570:	strb	w0, [x23, #10]
  420574:	ldr	x25, [sp, #64]
  420578:	cmp	w20, #0x2e
  42057c:	b.eq	420af0 <_obstack_memory_used@@Base+0x9a28>  // b.none
  420580:	b.hi	420644 <_obstack_memory_used@@Base+0x957c>  // b.pmore
  420584:	cmp	w20, #0x29
  420588:	b.eq	420ad4 <_obstack_memory_used@@Base+0x9a0c>  // b.none
  42058c:	b.ls	42067c <_obstack_memory_used@@Base+0x95b4>  // b.plast
  420590:	cmp	w20, #0x2a
  420594:	b.eq	420ae0 <_obstack_memory_used@@Base+0x9a18>  // b.none
  420598:	cmp	w20, #0x2b
  42059c:	b.ne	420acc <_obstack_memory_used@@Base+0x9a04>  // b.any
  4205a0:	mov	x1, #0x402                 	// #1026
  4205a4:	mov	w0, #0x1                   	// #1
  4205a8:	tst	x22, x1
  4205ac:	b.ne	4205b8 <_obstack_memory_used@@Base+0x94f0>  // b.any
  4205b0:	mov	w1, #0x12                  	// #18
  4205b4:	strb	w1, [x23, #8]
  4205b8:	ldp	x19, x20, [sp, #16]
  4205bc:	ldp	x21, x22, [sp, #32]
  4205c0:	ldp	x23, x24, [sp, #48]
  4205c4:	ldp	x29, x30, [sp], #96
  4205c8:	ret
  4205cc:	cmp	w20, #0x5c
  4205d0:	b.eq	420614 <_obstack_memory_used@@Base+0x954c>  // b.none
  4205d4:	bl	4026a0 <__ctype_b_loc@plt>
  4205d8:	ldr	x0, [x0]
  4205dc:	ubfiz	x2, x20, #1, #8
  4205e0:	cmp	w20, #0x5f
  4205e4:	ldr	w1, [x23, #8]
  4205e8:	ldrh	w0, [x0, x2]
  4205ec:	and	w1, w1, #0xffffff00
  4205f0:	and	w1, w1, #0xffbfffff
  4205f4:	and	w0, w0, #0x8
  4205f8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4205fc:	cset	w0, ne  // ne = any
  420600:	lsl	w0, w0, #22
  420604:	orr	w0, w0, #0x1
  420608:	orr	w0, w0, w1
  42060c:	str	w0, [x23, #8]
  420610:	b	420578 <_obstack_memory_used@@Base+0x94b0>
  420614:	ldr	x2, [x19, #88]
  420618:	add	x1, x21, #0x1
  42061c:	cmp	x1, x2
  420620:	b.lt	420738 <_obstack_memory_used@@Base+0x9670>  // b.tstop
  420624:	mov	w1, #0x24                  	// #36
  420628:	strb	w1, [x23, #8]
  42062c:	mov	w0, #0x1                   	// #1
  420630:	ldp	x19, x20, [sp, #16]
  420634:	ldp	x21, x22, [sp, #32]
  420638:	ldp	x23, x24, [sp, #48]
  42063c:	ldp	x29, x30, [sp], #96
  420640:	ret
  420644:	cmp	w20, #0x7b
  420648:	b.eq	420aa8 <_obstack_memory_used@@Base+0x99e0>  // b.none
  42064c:	b.ls	4206a0 <_obstack_memory_used@@Base+0x95d8>  // b.plast
  420650:	cmp	w20, #0x7c
  420654:	b.eq	420abc <_obstack_memory_used@@Base+0x99f4>  // b.none
  420658:	cmp	w20, #0x7d
  42065c:	b.ne	420acc <_obstack_memory_used@@Base+0x9a04>  // b.any
  420660:	mov	x1, #0x1200                	// #4608
  420664:	mov	w0, #0x1                   	// #1
  420668:	bics	xzr, x1, x22
  42066c:	b.ne	4205b8 <_obstack_memory_used@@Base+0x94f0>  // b.any
  420670:	mov	w1, #0x18                  	// #24
  420674:	strb	w1, [x23, #8]
  420678:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  42067c:	cmp	w20, #0x24
  420680:	b.eq	420a44 <_obstack_memory_used@@Base+0x997c>  // b.none
  420684:	cmp	w20, #0x28
  420688:	mov	w0, #0x1                   	// #1
  42068c:	b.ne	4206d8 <_obstack_memory_used@@Base+0x9610>  // b.any
  420690:	tbz	w22, #13, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  420694:	mov	w1, #0x8                   	// #8
  420698:	strb	w1, [x23, #8]
  42069c:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  4206a0:	cmp	w20, #0x5b
  4206a4:	b.eq	420b00 <_obstack_memory_used@@Base+0x9a38>  // b.none
  4206a8:	cmp	w20, #0x5e
  4206ac:	b.ne	4206f4 <_obstack_memory_used@@Base+0x962c>  // b.any
  4206b0:	and	x0, x22, #0xfffff8
  4206b4:	ands	x0, x0, #0xffffffffff80000f
  4206b8:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  4206bc:	b.ne	420864 <_obstack_memory_used@@Base+0x979c>  // b.any
  4206c0:	mov	w1, #0xc                   	// #12
  4206c4:	mov	w2, #0x10                  	// #16
  4206c8:	mov	w0, #0x1                   	// #1
  4206cc:	str	w2, [x23]
  4206d0:	strb	w1, [x23, #8]
  4206d4:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  4206d8:	cmp	w20, #0xa
  4206dc:	b.ne	4205b8 <_obstack_memory_used@@Base+0x94f0>  // b.any
  4206e0:	tbz	w22, #11, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  4206e4:	mov	w1, #0xa                   	// #10
  4206e8:	mov	w0, #0x1                   	// #1
  4206ec:	strb	w1, [x23, #8]
  4206f0:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  4206f4:	cmp	w20, #0x3f
  4206f8:	b.ne	420acc <_obstack_memory_used@@Base+0x9a04>  // b.any
  4206fc:	mov	x1, #0x402                 	// #1026
  420700:	mov	w0, #0x1                   	// #1
  420704:	tst	x22, x1
  420708:	b.ne	4205b8 <_obstack_memory_used@@Base+0x94f0>  // b.any
  42070c:	mov	w1, #0x13                  	// #19
  420710:	strb	w1, [x23, #8]
  420714:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420718:	mov	w1, #0x2                   	// #2
  42071c:	strb	w1, [x23, #8]
  420720:	mov	w0, #0x0                   	// #0
  420724:	ldp	x19, x20, [sp, #16]
  420728:	ldp	x21, x22, [sp, #32]
  42072c:	ldp	x23, x24, [sp, #48]
  420730:	ldp	x29, x30, [sp], #96
  420734:	ret
  420738:	ldrb	w2, [x19, #139]
  42073c:	cbnz	w2, 420804 <_obstack_memory_used@@Base+0x973c>
  420740:	ldrb	w20, [x24, x1]
  420744:	mov	w2, #0x1                   	// #1
  420748:	strb	w20, [x23]
  42074c:	strb	w2, [x23, #8]
  420750:	cmp	w0, #0x1
  420754:	b.le	4207cc <_obstack_memory_used@@Base+0x9704>
  420758:	ldr	x2, [x19, #16]
  42075c:	add	x2, x2, x1, lsl #2
  420760:	ldr	w19, [x2]
  420764:	mov	w0, w19
  420768:	bl	4027c0 <iswalnum@plt>
  42076c:	cmp	w19, #0x5f
  420770:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  420774:	ldrb	w0, [x23, #10]
  420778:	cset	w1, ne  // ne = any
  42077c:	bfi	w0, w1, #6, #1
  420780:	strb	w0, [x23, #10]
  420784:	sub	w0, w20, #0x27
  420788:	cmp	w0, #0x56
  42078c:	b.hi	4207fc <_obstack_memory_used@@Base+0x9734>  // b.pmore
  420790:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  420794:	add	x1, x1, #0x298
  420798:	ldrh	w0, [x1, w0, uxtw #1]
  42079c:	adr	x1, 4207a8 <_obstack_memory_used@@Base+0x96e0>
  4207a0:	add	x0, x1, w0, sxth #2
  4207a4:	br	x0
  4207a8:	ldr	w1, [x23, #8]
  4207ac:	mov	w2, #0x1                   	// #1
  4207b0:	movk	w2, #0x20, lsl #16
  4207b4:	mov	w0, #0x1                   	// #1
  4207b8:	and	w1, w1, #0xffffff00
  4207bc:	and	w1, w1, #0xffdfffff
  4207c0:	orr	w1, w1, w2
  4207c4:	str	w1, [x23, #8]
  4207c8:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  4207cc:	bl	4026a0 <__ctype_b_loc@plt>
  4207d0:	ldr	x0, [x0]
  4207d4:	ubfiz	x1, x20, #1, #8
  4207d8:	cmp	w20, #0x5f
  4207dc:	ldrb	w2, [x23, #10]
  4207e0:	ldrh	w0, [x0, x1]
  4207e4:	and	w0, w0, #0x8
  4207e8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4207ec:	cset	w0, ne  // ne = any
  4207f0:	bfi	w2, w0, #6, #1
  4207f4:	strb	w2, [x23, #10]
  4207f8:	b	420784 <_obstack_memory_used@@Base+0x96bc>
  4207fc:	mov	w0, #0x2                   	// #2
  420800:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420804:	cmp	w0, #0x1
  420808:	b.le	42083c <_obstack_memory_used@@Base+0x9774>
  42080c:	ldr	x2, [x19, #16]
  420810:	ldr	w3, [x2, x1, lsl #2]
  420814:	add	x2, x2, x1, lsl #2
  420818:	cmn	w3, #0x1
  42081c:	b.eq	420b1c <_obstack_memory_used@@Base+0x9a54>  // b.none
  420820:	ldr	x3, [x19, #48]
  420824:	add	x21, x21, #0x2
  420828:	cmp	x3, x21
  42082c:	b.eq	42083c <_obstack_memory_used@@Base+0x9774>  // b.none
  420830:	ldr	w3, [x2, #4]
  420834:	cmn	w3, #0x1
  420838:	b.eq	420b1c <_obstack_memory_used@@Base+0x9a54>  // b.none
  42083c:	ldrb	w3, [x19, #140]
  420840:	ldr	x2, [x19]
  420844:	ldr	x4, [x19, #40]
  420848:	cbz	w3, 420b10 <_obstack_memory_used@@Base+0x9a48>
  42084c:	ldr	x3, [x19, #24]
  420850:	add	x2, x2, x4
  420854:	ldr	x3, [x3, x1, lsl #3]
  420858:	ldrb	w20, [x2, x3]
  42085c:	tbz	w20, #7, 420744 <_obstack_memory_used@@Base+0x967c>
  420860:	b	420740 <_obstack_memory_used@@Base+0x9678>
  420864:	add	x21, x24, x21
  420868:	tst	x22, #0x800
  42086c:	mov	w0, #0x1                   	// #1
  420870:	ldurb	w1, [x21, #-1]
  420874:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  420878:	b.ne	4205b8 <_obstack_memory_used@@Base+0x94f0>  // b.any
  42087c:	b	4206c0 <_obstack_memory_used@@Base+0x95f8>
  420880:	mov	w0, #0x2                   	// #2
  420884:	tbnz	w22, #14, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  420888:	sub	w1, w20, #0x31
  42088c:	mov	w2, #0x4                   	// #4
  420890:	strb	w2, [x23, #8]
  420894:	sxtw	x1, w1
  420898:	str	x1, [x23]
  42089c:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  4208a0:	mov	x0, #0x402                 	// #1026
  4208a4:	and	x0, x22, x0
  4208a8:	cmp	x0, #0x2
  4208ac:	mov	w0, #0x2                   	// #2
  4208b0:	b.ne	4205b8 <_obstack_memory_used@@Base+0x94f0>  // b.any
  4208b4:	b	4205b0 <_obstack_memory_used@@Base+0x94e8>
  4208b8:	mov	w0, #0x2                   	// #2
  4208bc:	tbnz	w22, #19, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  4208c0:	mov	w1, #0xc                   	// #12
  4208c4:	mov	w2, #0x9                   	// #9
  4208c8:	str	w2, [x23]
  4208cc:	strb	w1, [x23, #8]
  4208d0:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  4208d4:	mov	w0, #0x2                   	// #2
  4208d8:	tbnz	w22, #19, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  4208dc:	mov	w1, #0xc                   	// #12
  4208e0:	mov	w2, #0x6                   	// #6
  4208e4:	str	w2, [x23]
  4208e8:	strb	w1, [x23, #8]
  4208ec:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  4208f0:	mov	w0, #0x2                   	// #2
  4208f4:	tbnz	w22, #19, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  4208f8:	mov	w1, #0x20                  	// #32
  4208fc:	strb	w1, [x23, #8]
  420900:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420904:	mov	w0, #0x2                   	// #2
  420908:	tbnz	w22, #19, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  42090c:	mov	w1, #0x22                  	// #34
  420910:	strb	w1, [x23, #8]
  420914:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420918:	mov	w0, #0x2                   	// #2
  42091c:	tbnz	w22, #19, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  420920:	mov	w1, #0xc                   	// #12
  420924:	mov	w2, #0x100                 	// #256
  420928:	str	w2, [x23]
  42092c:	strb	w1, [x23, #8]
  420930:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420934:	mov	w0, #0x2                   	// #2
  420938:	tbnz	w22, #19, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  42093c:	mov	w1, #0xc                   	// #12
  420940:	mov	w2, #0x40                  	// #64
  420944:	str	w2, [x23]
  420948:	strb	w1, [x23, #8]
  42094c:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420950:	mov	w0, #0x2                   	// #2
  420954:	tbnz	w22, #19, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  420958:	mov	w1, #0x21                  	// #33
  42095c:	strb	w1, [x23, #8]
  420960:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420964:	mov	w0, #0x2                   	// #2
  420968:	tbnz	w22, #19, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  42096c:	mov	w1, #0x23                  	// #35
  420970:	strb	w1, [x23, #8]
  420974:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420978:	mov	w0, #0x2                   	// #2
  42097c:	tbnz	w22, #19, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  420980:	mov	w1, #0xc                   	// #12
  420984:	mov	w2, #0x200                 	// #512
  420988:	str	w2, [x23]
  42098c:	strb	w1, [x23, #8]
  420990:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420994:	mov	x0, #0x402                 	// #1026
  420998:	and	x0, x22, x0
  42099c:	cmp	x0, #0x2
  4209a0:	mov	w0, #0x2                   	// #2
  4209a4:	b.ne	4205b8 <_obstack_memory_used@@Base+0x94f0>  // b.any
  4209a8:	b	42070c <_obstack_memory_used@@Base+0x9644>
  4209ac:	mov	x1, #0x8400                	// #33792
  4209b0:	mov	w0, #0x2                   	// #2
  4209b4:	tst	x22, x1
  4209b8:	b.ne	4205b8 <_obstack_memory_used@@Base+0x94f0>  // b.any
  4209bc:	mov	w1, #0xa                   	// #10
  4209c0:	strb	w1, [x23, #8]
  4209c4:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  4209c8:	mov	x0, #0x1200                	// #4608
  4209cc:	and	x0, x22, x0
  4209d0:	cmp	x0, #0x200
  4209d4:	mov	w0, #0x2                   	// #2
  4209d8:	b.ne	4205b8 <_obstack_memory_used@@Base+0x94f0>  // b.any
  4209dc:	nop
  4209e0:	mov	w1, #0x17                  	// #23
  4209e4:	strb	w1, [x23, #8]
  4209e8:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  4209ec:	mov	x0, #0x1200                	// #4608
  4209f0:	and	x0, x22, x0
  4209f4:	cmp	x0, #0x200
  4209f8:	mov	w0, #0x2                   	// #2
  4209fc:	b.ne	4205b8 <_obstack_memory_used@@Base+0x94f0>  // b.any
  420a00:	b	420670 <_obstack_memory_used@@Base+0x95a8>
  420a04:	mov	w0, #0x2                   	// #2
  420a08:	tbnz	w22, #13, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  420a0c:	nop
  420a10:	mov	w1, #0x9                   	// #9
  420a14:	strb	w1, [x23, #8]
  420a18:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420a1c:	mov	w0, #0x2                   	// #2
  420a20:	tbnz	w22, #13, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  420a24:	b	420694 <_obstack_memory_used@@Base+0x95cc>
  420a28:	mov	w0, #0x2                   	// #2
  420a2c:	tbnz	w22, #19, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  420a30:	mov	w1, #0xc                   	// #12
  420a34:	mov	w2, #0x80                  	// #128
  420a38:	str	w2, [x23]
  420a3c:	strb	w1, [x23, #8]
  420a40:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420a44:	tbnz	w22, #3, 420a90 <_obstack_memory_used@@Base+0x99c8>
  420a48:	ldr	x0, [x19, #88]
  420a4c:	add	x21, x21, #0x1
  420a50:	cmp	x21, x0
  420a54:	b.eq	420a90 <_obstack_memory_used@@Base+0x99c8>  // b.none
  420a58:	str	x21, [x19, #72]
  420a5c:	mov	x2, x22
  420a60:	mov	x1, x19
  420a64:	add	x0, sp, #0x50
  420a68:	bl	4204c8 <_obstack_memory_used@@Base+0x9400>
  420a6c:	ldr	x2, [x19, #72]
  420a70:	mov	w0, #0x1                   	// #1
  420a74:	ldrb	w1, [sp, #88]
  420a78:	sub	x2, x2, #0x1
  420a7c:	str	x2, [x19, #72]
  420a80:	sub	w1, w1, #0x9
  420a84:	and	w1, w1, #0xff
  420a88:	cmp	w1, w0
  420a8c:	b.hi	4205b8 <_obstack_memory_used@@Base+0x94f0>  // b.pmore
  420a90:	mov	w1, #0xc                   	// #12
  420a94:	mov	w2, #0x20                  	// #32
  420a98:	mov	w0, #0x1                   	// #1
  420a9c:	str	w2, [x23]
  420aa0:	strb	w1, [x23, #8]
  420aa4:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420aa8:	mov	x1, #0x1200                	// #4608
  420aac:	mov	w0, #0x1                   	// #1
  420ab0:	bics	xzr, x1, x22
  420ab4:	b.ne	4205b8 <_obstack_memory_used@@Base+0x94f0>  // b.any
  420ab8:	b	4209e0 <_obstack_memory_used@@Base+0x9918>
  420abc:	mov	x0, #0x8400                	// #33792
  420ac0:	and	x0, x22, x0
  420ac4:	cmp	x0, #0x8, lsl #12
  420ac8:	b.eq	4206e4 <_obstack_memory_used@@Base+0x961c>  // b.none
  420acc:	mov	w0, #0x1                   	// #1
  420ad0:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420ad4:	mov	w0, #0x1                   	// #1
  420ad8:	tbz	w22, #13, 4205b8 <_obstack_memory_used@@Base+0x94f0>
  420adc:	b	420a10 <_obstack_memory_used@@Base+0x9948>
  420ae0:	mov	w1, #0xb                   	// #11
  420ae4:	mov	w0, #0x1                   	// #1
  420ae8:	strb	w1, [x23, #8]
  420aec:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420af0:	mov	w1, #0x5                   	// #5
  420af4:	mov	w0, #0x1                   	// #1
  420af8:	strb	w1, [x23, #8]
  420afc:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420b00:	mov	w1, #0x14                  	// #20
  420b04:	mov	w0, #0x1                   	// #1
  420b08:	strb	w1, [x23, #8]
  420b0c:	b	4205b8 <_obstack_memory_used@@Base+0x94f0>
  420b10:	add	x2, x2, x1
  420b14:	ldrb	w20, [x2, x4]
  420b18:	b	420744 <_obstack_memory_used@@Base+0x967c>
  420b1c:	ldrb	w20, [x24, x1]
  420b20:	mov	w0, #0x1                   	// #1
  420b24:	strb	w20, [x23]
  420b28:	strb	w0, [x23, #8]
  420b2c:	b	420760 <_obstack_memory_used@@Base+0x9698>
  420b30:	stp	x29, x30, [sp, #-64]!
  420b34:	mov	x29, sp
  420b38:	stp	x19, x20, [sp, #16]
  420b3c:	mov	x20, x0
  420b40:	mov	x19, x1
  420b44:	str	x23, [sp, #48]
  420b48:	mov	x23, x2
  420b4c:	stp	x21, x22, [sp, #32]
  420b50:	mov	x21, #0xffffffffffffffff    	// #-1
  420b54:	mov	x22, #0x8030                	// #32816
  420b58:	mov	x1, x20
  420b5c:	mov	x2, x23
  420b60:	mov	x0, x19
  420b64:	bl	4204c8 <_obstack_memory_used@@Base+0x9400>
  420b68:	ldr	x4, [x20, #72]
  420b6c:	ldrb	w3, [x19, #8]
  420b70:	ldrb	w1, [x19]
  420b74:	add	x0, x4, w0, sxtw
  420b78:	str	x0, [x20, #72]
  420b7c:	cmp	w3, #0x2
  420b80:	b.eq	420bd8 <_obstack_memory_used@@Base+0x9b10>  // b.none
  420b84:	cmp	w1, #0x2c
  420b88:	ccmp	w3, #0x18, #0x4, ne  // ne = any
  420b8c:	b.eq	420bdc <_obstack_memory_used@@Base+0x9b14>  // b.none
  420b90:	cmp	w3, #0x1
  420b94:	b.eq	420ba0 <_obstack_memory_used@@Base+0x9ad8>  // b.none
  420b98:	mov	x21, #0xfffffffffffffffe    	// #-2
  420b9c:	b	420b58 <_obstack_memory_used@@Base+0x9a90>
  420ba0:	sub	w0, w1, #0x30
  420ba4:	and	w2, w0, #0xff
  420ba8:	cmp	w2, #0x9
  420bac:	ccmn	x21, #0x2, #0x4, ls  // ls = plast
  420bb0:	b.eq	420b98 <_obstack_memory_used@@Base+0x9ad0>  // b.none
  420bb4:	add	x2, x21, x21, lsl #2
  420bb8:	and	x1, x1, #0xff
  420bbc:	cmn	x21, #0x1
  420bc0:	b.eq	420bf4 <_obstack_memory_used@@Base+0x9b2c>  // b.none
  420bc4:	add	x1, x1, x2, lsl #1
  420bc8:	cmp	x1, x22
  420bcc:	csel	x1, x1, x22, le
  420bd0:	sub	x21, x1, #0x30
  420bd4:	b	420b58 <_obstack_memory_used@@Base+0x9a90>
  420bd8:	mov	x21, #0xfffffffffffffffe    	// #-2
  420bdc:	mov	x0, x21
  420be0:	ldp	x19, x20, [sp, #16]
  420be4:	ldp	x21, x22, [sp, #32]
  420be8:	ldr	x23, [sp, #48]
  420bec:	ldp	x29, x30, [sp], #64
  420bf0:	ret
  420bf4:	sxtw	x21, w0
  420bf8:	b	420b58 <_obstack_memory_used@@Base+0x9a90>
  420bfc:	nop
  420c00:	stp	x29, x30, [sp, #-272]!
  420c04:	mov	x29, sp
  420c08:	stp	x19, x20, [sp, #16]
  420c0c:	stp	x21, x22, [sp, #32]
  420c10:	mov	x22, x2
  420c14:	ldrb	w2, [x2, #8]
  420c18:	stp	x25, x26, [sp, #64]
  420c1c:	mov	x21, x0
  420c20:	cmp	w2, #0xc
  420c24:	stp	x27, x28, [sp, #80]
  420c28:	mov	x28, x3
  420c2c:	str	x5, [sp, #112]
  420c30:	ldr	x26, [x1]
  420c34:	b.eq	4213a0 <_obstack_memory_used@@Base+0xa2d8>  // b.none
  420c38:	mov	x19, x1
  420c3c:	b.ls	420fac <_obstack_memory_used@@Base+0x9ee4>  // b.plast
  420c40:	cmp	w2, #0x18
  420c44:	b.eq	420f70 <_obstack_memory_used@@Base+0x9ea8>  // b.none
  420c48:	b.ls	420f50 <_obstack_memory_used@@Base+0x9e88>  // b.plast
  420c4c:	cmp	w2, #0x23
  420c50:	b.hi	4214a8 <_obstack_memory_used@@Base+0xa3e0>  // b.pmore
  420c54:	cmp	w2, #0x21
  420c58:	ldr	x1, [x0, #120]
  420c5c:	b.hi	4214bc <_obstack_memory_used@@Base+0xa3f4>  // b.pmore
  420c60:	adrp	x3, 427000 <_obstack_memory_used@@Base+0xff38>
  420c64:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xef38>
  420c68:	add	x3, x3, #0x290
  420c6c:	add	x2, x2, #0x548
  420c70:	cset	w4, eq  // eq = none
  420c74:	mov	x0, x26
  420c78:	bl	41c8d8 <_obstack_memory_used@@Base+0x5810>
  420c7c:	ldr	x1, [sp, #112]
  420c80:	mov	x27, x0
  420c84:	ldr	w1, [x1]
  420c88:	cmp	w1, #0x0
  420c8c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  420c90:	b.eq	421250 <_obstack_memory_used@@Base+0xa188>  // b.none
  420c94:	stp	x23, x24, [sp, #48]
  420c98:	mov	x2, x28
  420c9c:	mov	x1, x21
  420ca0:	mov	x0, x22
  420ca4:	bl	4204c8 <_obstack_memory_used@@Base+0x9400>
  420ca8:	ldr	x23, [x21, #72]
  420cac:	ldrb	w1, [x22, #8]
  420cb0:	cmp	w1, #0x12
  420cb4:	sub	w2, w1, #0x12
  420cb8:	cset	w19, eq  // eq = none
  420cbc:	add	x23, x23, w0, sxtw
  420cc0:	cmp	w1, #0x17
  420cc4:	str	x23, [x21, #72]
  420cc8:	and	w2, w2, #0xff
  420ccc:	ccmp	w1, #0xb, #0x4, ne  // ne = any
  420cd0:	ccmp	w2, #0x1, #0x0, ne  // ne = any
  420cd4:	b.hi	421318 <_obstack_memory_used@@Base+0xa250>  // b.pmore
  420cd8:	adrp	x0, 417000 <_obstack_allocated_p@@Base>
  420cdc:	add	x0, x0, #0x2c0
  420ce0:	str	x0, [sp, #120]
  420ce4:	nop
  420ce8:	cmp	w1, #0x17
  420cec:	ldp	x24, x25, [x22]
  420cf0:	b.eq	420e44 <_obstack_memory_used@@Base+0x9d7c>  // b.none
  420cf4:	cmp	w1, #0x13
  420cf8:	mov	x2, x28
  420cfc:	mov	x1, x21
  420d00:	mov	x0, x22
  420d04:	mov	x20, #0xffffffffffffffff    	// #-1
  420d08:	cneg	x20, x20, eq  // eq = none
  420d0c:	bl	4204c8 <_obstack_memory_used@@Base+0x9400>
  420d10:	ldr	x1, [x21, #72]
  420d14:	add	x0, x1, w0, sxtw
  420d18:	str	x0, [x21, #72]
  420d1c:	cbz	x27, 420f3c <_obstack_memory_used@@Base+0x9e74>
  420d20:	cbnz	w19, 4212e8 <_obstack_memory_used@@Base+0xa220>
  420d24:	mov	x25, x27
  420d28:	mov	x19, #0x0                   	// #0
  420d2c:	str	xzr, [sp, #104]
  420d30:	ldrb	w0, [x25, #48]
  420d34:	cmp	w0, #0x11
  420d38:	b.eq	420eec <_obstack_memory_used@@Base+0x9e24>  // b.none
  420d3c:	cmn	x20, #0x1
  420d40:	mov	x2, x25
  420d44:	cset	w6, eq  // eq = none
  420d48:	add	x23, x26, #0x70
  420d4c:	add	w6, w6, #0xa
  420d50:	add	x24, x26, #0x80
  420d54:	stp	xzr, xzr, [sp, #240]
  420d58:	mov	x0, x23
  420d5c:	mov	x1, x24
  420d60:	add	x4, sp, #0xf0
  420d64:	mov	x3, #0x0                   	// #0
  420d68:	strb	w6, [sp, #248]
  420d6c:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  420d70:	mov	x2, x0
  420d74:	cbz	x0, 420dfc <_obstack_memory_used@@Base+0x9d34>
  420d78:	add	x19, x19, #0x2
  420d7c:	cmp	x19, x20
  420d80:	b.gt	420f00 <_obstack_memory_used@@Base+0x9e38>
  420d84:	mov	x0, x25
  420d88:	mov	x1, x26
  420d8c:	str	x2, [sp, #96]
  420d90:	bl	419298 <_obstack_memory_used@@Base+0x21d0>
  420d94:	ldr	x2, [sp, #96]
  420d98:	mov	w5, #0x10                  	// #16
  420d9c:	stp	xzr, xzr, [sp, #240]
  420da0:	mov	x3, x0
  420da4:	mov	x25, x0
  420da8:	add	x4, sp, #0xf0
  420dac:	mov	x1, x24
  420db0:	mov	x0, x23
  420db4:	strb	w5, [sp, #248]
  420db8:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  420dbc:	mov	x2, x0
  420dc0:	cmp	x25, #0x0
  420dc4:	add	x19, x19, #0x1
  420dc8:	add	x4, sp, #0xf0
  420dcc:	mov	x1, x24
  420dd0:	mov	x0, x23
  420dd4:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  420dd8:	mov	x3, #0x0                   	// #0
  420ddc:	b.eq	420dfc <_obstack_memory_used@@Base+0x9d34>  // b.none
  420de0:	mov	w5, #0xa                   	// #10
  420de4:	stp	xzr, xzr, [sp, #240]
  420de8:	strb	w5, [sp, #248]
  420dec:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  420df0:	cmp	x19, x20
  420df4:	mov	x2, x0
  420df8:	cbnz	x0, 420d80 <_obstack_memory_used@@Base+0x9cb8>
  420dfc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0xf38>
  420e00:	add	x19, x1, #0x4f0
  420e04:	ldr	x1, [sp, #112]
  420e08:	mov	w0, #0xc                   	// #12
  420e0c:	str	w0, [x1]
  420e10:	mov	x0, x27
  420e14:	mov	x1, x19
  420e18:	mov	x2, #0x0                   	// #0
  420e1c:	bl	417590 <_obstack_memory_used@@Base+0x4c8>
  420e20:	ldp	x23, x24, [sp, #48]
  420e24:	mov	x27, #0x0                   	// #0
  420e28:	mov	x0, x27
  420e2c:	ldp	x19, x20, [sp, #16]
  420e30:	ldp	x21, x22, [sp, #32]
  420e34:	ldp	x25, x26, [sp, #64]
  420e38:	ldp	x27, x28, [sp, #80]
  420e3c:	ldp	x29, x30, [sp], #272
  420e40:	ret
  420e44:	mov	x2, x28
  420e48:	mov	x1, x22
  420e4c:	mov	x0, x21
  420e50:	bl	420b30 <_obstack_memory_used@@Base+0x9a68>
  420e54:	mov	x19, x0
  420e58:	cmn	x0, #0x1
  420e5c:	b.eq	421064 <_obstack_memory_used@@Base+0x9f9c>  // b.none
  420e60:	cmn	x0, #0x2
  420e64:	b.eq	420e7c <_obstack_memory_used@@Base+0x9db4>  // b.none
  420e68:	ldrb	w0, [x22, #8]
  420e6c:	cmp	w0, #0x18
  420e70:	b.eq	421120 <_obstack_memory_used@@Base+0xa058>  // b.none
  420e74:	cmp	w0, #0x1
  420e78:	b.eq	421150 <_obstack_memory_used@@Base+0xa088>  // b.none
  420e7c:	tbz	w28, #21, 421b04 <_obstack_memory_used@@Base+0xaa3c>
  420e80:	str	x23, [x21, #72]
  420e84:	mov	w1, #0x1                   	// #1
  420e88:	stp	x24, x25, [x22]
  420e8c:	mov	x0, x27
  420e90:	strb	w1, [x22, #8]
  420e94:	ldr	x1, [sp, #112]
  420e98:	ldr	w1, [x1]
  420e9c:	cbnz	w1, 421358 <_obstack_memory_used@@Base+0xa290>
  420ea0:	mov	x27, x0
  420ea4:	ldrb	w1, [x22, #8]
  420ea8:	cmp	w1, #0xb
  420eac:	cset	w3, eq  // eq = none
  420eb0:	cmp	w1, #0x17
  420eb4:	cset	w2, eq  // eq = none
  420eb8:	tbz	w28, #24, 420ec8 <_obstack_memory_used@@Base+0x9e00>
  420ebc:	cmp	w3, #0x0
  420ec0:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  420ec4:	b.ne	421180 <_obstack_memory_used@@Base+0xa0b8>  // b.any
  420ec8:	subs	w0, w1, #0x12
  420ecc:	cset	w19, eq  // eq = none
  420ed0:	cmp	w3, #0x0
  420ed4:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  420ed8:	and	w0, w0, #0xff
  420edc:	ccmp	w0, #0x1, #0x0, eq  // eq = none
  420ee0:	b.hi	421318 <_obstack_memory_used@@Base+0xa250>  // b.pmore
  420ee4:	ldr	x23, [x21, #72]
  420ee8:	b	420ce8 <_obstack_memory_used@@Base+0x9c20>
  420eec:	ldr	x2, [x25, #40]
  420ef0:	mov	x0, x25
  420ef4:	ldr	x1, [sp, #120]
  420ef8:	bl	417590 <_obstack_memory_used@@Base+0x4c8>
  420efc:	b	420d3c <_obstack_memory_used@@Base+0x9c74>
  420f00:	ldr	x0, [sp, #104]
  420f04:	cbz	x0, 421178 <_obstack_memory_used@@Base+0xa0b0>
  420f08:	mov	w5, #0x10                  	// #16
  420f0c:	stp	xzr, xzr, [sp, #240]
  420f10:	mov	x3, x2
  420f14:	mov	x1, x24
  420f18:	mov	x2, x0
  420f1c:	add	x4, sp, #0xf0
  420f20:	mov	x0, x23
  420f24:	strb	w5, [sp, #248]
  420f28:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  420f2c:	ldr	x1, [sp, #112]
  420f30:	ldr	w1, [x1]
  420f34:	cbz	w1, 420ea0 <_obstack_memory_used@@Base+0x9dd8>
  420f38:	b	421358 <_obstack_memory_used@@Base+0xa290>
  420f3c:	ldr	x0, [sp, #112]
  420f40:	ldr	w0, [x0]
  420f44:	cbnz	w0, 42134c <_obstack_memory_used@@Base+0xa284>
  420f48:	mov	x27, #0x0                   	// #0
  420f4c:	b	420ea4 <_obstack_memory_used@@Base+0x9ddc>
  420f50:	cmp	w2, #0x14
  420f54:	b.eq	421514 <_obstack_memory_used@@Base+0xa44c>  // b.none
  420f58:	b.ls	420f60 <_obstack_memory_used@@Base+0x9e98>  // b.plast
  420f5c:	tbnz	w3, #24, 421188 <_obstack_memory_used@@Base+0xa0c0>
  420f60:	tbnz	w28, #5, 421188 <_obstack_memory_used@@Base+0xa0c0>
  420f64:	tbnz	w28, #4, 4217dc <_obstack_memory_used@@Base+0xa714>
  420f68:	cmp	w2, #0x9
  420f6c:	b.eq	421648 <_obstack_memory_used@@Base+0xa580>  // b.none
  420f70:	mov	w0, #0x1                   	// #1
  420f74:	strb	w0, [x22, #8]
  420f78:	mov	x4, x22
  420f7c:	add	x1, x26, #0x80
  420f80:	add	x0, x26, #0x70
  420f84:	mov	x3, #0x0                   	// #0
  420f88:	mov	x2, #0x0                   	// #0
  420f8c:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  420f90:	mov	x27, x0
  420f94:	cbnz	x0, 420c94 <_obstack_memory_used@@Base+0x9bcc>
  420f98:	ldr	x1, [sp, #112]
  420f9c:	mov	w0, #0xc                   	// #12
  420fa0:	mov	x27, #0x0                   	// #0
  420fa4:	str	w0, [x1]
  420fa8:	b	420e28 <_obstack_memory_used@@Base+0x9d60>
  420fac:	cmp	w2, #0x5
  420fb0:	b.eq	421360 <_obstack_memory_used@@Base+0xa298>  // b.none
  420fb4:	b.ls	420fec <_obstack_memory_used@@Base+0x9f24>  // b.plast
  420fb8:	cmp	w2, #0x9
  420fbc:	b.eq	421648 <_obstack_memory_used@@Base+0xa580>  // b.none
  420fc0:	b.ls	4211b4 <_obstack_memory_used@@Base+0xa0ec>  // b.plast
  420fc4:	cmp	w2, #0xa
  420fc8:	mov	x27, #0x0                   	// #0
  420fcc:	b.ne	420f60 <_obstack_memory_used@@Base+0x9e98>  // b.any
  420fd0:	mov	x0, x27
  420fd4:	ldp	x19, x20, [sp, #16]
  420fd8:	ldp	x21, x22, [sp, #32]
  420fdc:	ldp	x25, x26, [sp, #64]
  420fe0:	ldp	x27, x28, [sp, #80]
  420fe4:	ldp	x29, x30, [sp], #272
  420fe8:	ret
  420fec:	cmp	w2, #0x2
  420ff0:	b.eq	421250 <_obstack_memory_used@@Base+0xa188>  // b.none
  420ff4:	cmp	w2, #0x4
  420ff8:	b.ne	421d48 <_obstack_memory_used@@Base+0xac80>  // b.any
  420ffc:	ldr	x2, [x22]
  421000:	mov	w0, #0x1                   	// #1
  421004:	ldr	x1, [x26, #168]
  421008:	lsl	w0, w0, w2
  42100c:	sxtw	x0, w0
  421010:	tst	x0, x1
  421014:	b.eq	4216fc <_obstack_memory_used@@Base+0xa634>  // b.none
  421018:	ldr	x1, [x26, #160]
  42101c:	mov	x4, x22
  421020:	mov	x3, #0x0                   	// #0
  421024:	mov	x2, #0x0                   	// #0
  421028:	orr	x0, x1, x0
  42102c:	str	x0, [x26, #160]
  421030:	add	x1, x26, #0x80
  421034:	add	x0, x26, #0x70
  421038:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  42103c:	mov	x27, x0
  421040:	cbz	x0, 420f98 <_obstack_memory_used@@Base+0x9ed0>
  421044:	ldr	x1, [x26, #152]
  421048:	stp	x23, x24, [sp, #48]
  42104c:	ldrb	w0, [x26, #176]
  421050:	add	x1, x1, #0x1
  421054:	str	x1, [x26, #152]
  421058:	orr	w0, w0, #0x2
  42105c:	strb	w0, [x26, #176]
  421060:	b	420c98 <_obstack_memory_used@@Base+0x9bd0>
  421064:	ldrb	w0, [x22, #8]
  421068:	cmp	w0, #0x1
  42106c:	b.ne	421160 <_obstack_memory_used@@Base+0xa098>  // b.any
  421070:	ldrb	w0, [x22]
  421074:	cmp	w0, #0x2c
  421078:	b.ne	421160 <_obstack_memory_used@@Base+0xa098>  // b.any
  42107c:	mov	x19, #0x0                   	// #0
  421080:	mov	x2, x28
  421084:	mov	x1, x22
  421088:	mov	x0, x21
  42108c:	bl	420b30 <_obstack_memory_used@@Base+0x9a68>
  421090:	mov	x20, x0
  421094:	cmn	x0, #0x2
  421098:	b.eq	420e7c <_obstack_memory_used@@Base+0x9db4>  // b.none
  42109c:	cmp	x19, x0
  4210a0:	ccmn	x0, #0x1, #0x4, gt
  4210a4:	b.ne	421160 <_obstack_memory_used@@Base+0xa098>  // b.any
  4210a8:	ldrb	w0, [x22, #8]
  4210ac:	cmp	w0, #0x18
  4210b0:	b.ne	421160 <_obstack_memory_used@@Base+0xa098>  // b.any
  4210b4:	cmn	x20, #0x1
  4210b8:	b.ne	421124 <_obstack_memory_used@@Base+0xa05c>  // b.any
  4210bc:	mov	x0, #0x7fff                	// #32767
  4210c0:	cmp	x19, x0
  4210c4:	cset	x0, gt
  4210c8:	cbnz	x0, 421134 <_obstack_memory_used@@Base+0xa06c>
  4210cc:	mov	x1, x21
  4210d0:	mov	x2, x28
  4210d4:	mov	x0, x22
  4210d8:	bl	4204c8 <_obstack_memory_used@@Base+0x9400>
  4210dc:	ldr	x1, [x21, #72]
  4210e0:	add	x0, x1, w0, sxtw
  4210e4:	str	x0, [x21, #72]
  4210e8:	cbz	x27, 420f3c <_obstack_memory_used@@Base+0x9e74>
  4210ec:	orr	x0, x19, x20
  4210f0:	cbnz	x0, 421270 <_obstack_memory_used@@Base+0xa1a8>
  4210f4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0xf38>
  4210f8:	add	x19, x1, #0x4f0
  4210fc:	mov	x1, x19
  421100:	mov	x0, x27
  421104:	mov	x2, #0x0                   	// #0
  421108:	bl	417590 <_obstack_memory_used@@Base+0x4c8>
  42110c:	ldr	x0, [sp, #112]
  421110:	ldr	w0, [x0]
  421114:	cbnz	w0, 420e10 <_obstack_memory_used@@Base+0x9d48>
  421118:	mov	x27, #0x0                   	// #0
  42111c:	b	420ea4 <_obstack_memory_used@@Base+0x9ddc>
  421120:	mov	x20, x19
  421124:	mov	x0, #0x7fff                	// #32767
  421128:	cmp	x20, x0
  42112c:	cset	x0, gt
  421130:	cbz	x0, 4210cc <_obstack_memory_used@@Base+0xa004>
  421134:	ldr	x1, [sp, #112]
  421138:	mov	w0, #0xf                   	// #15
  42113c:	str	w0, [x1]
  421140:	cbz	x27, 42134c <_obstack_memory_used@@Base+0xa284>
  421144:	adrp	x1, 418000 <_obstack_memory_used@@Base+0xf38>
  421148:	add	x19, x1, #0x4f0
  42114c:	b	420e10 <_obstack_memory_used@@Base+0x9d48>
  421150:	ldrb	w0, [x22]
  421154:	cmp	w0, #0x2c
  421158:	b.eq	421080 <_obstack_memory_used@@Base+0x9fb8>  // b.none
  42115c:	tbnz	w28, #21, 420e80 <_obstack_memory_used@@Base+0x9db8>
  421160:	ldr	x1, [sp, #112]
  421164:	mov	w0, #0xa                   	// #10
  421168:	str	w0, [x1]
  42116c:	b	421140 <_obstack_memory_used@@Base+0xa078>
  421170:	ldr	x2, [sp, #104]
  421174:	nop
  421178:	mov	x27, x2
  42117c:	b	420ea4 <_obstack_memory_used@@Base+0x9ddc>
  421180:	cbnz	x27, 421320 <_obstack_memory_used@@Base+0xa258>
  421184:	ldp	x23, x24, [sp, #48]
  421188:	mov	w0, #0xd                   	// #13
  42118c:	ldr	x1, [sp, #112]
  421190:	mov	x27, #0x0                   	// #0
  421194:	str	w0, [x1]
  421198:	mov	x0, x27
  42119c:	ldp	x19, x20, [sp, #16]
  4211a0:	ldp	x21, x22, [sp, #32]
  4211a4:	ldp	x25, x26, [sp, #64]
  4211a8:	ldp	x27, x28, [sp, #80]
  4211ac:	ldp	x29, x30, [sp], #272
  4211b0:	ret
  4211b4:	ldr	x20, [x19, #48]
  4211b8:	orr	x2, x3, #0x800000
  4211bc:	mov	x1, x0
  4211c0:	mov	x0, x22
  4211c4:	add	x3, x20, #0x1
  4211c8:	str	x3, [x19, #48]
  4211cc:	str	x4, [sp, #96]
  4211d0:	bl	4204c8 <_obstack_memory_used@@Base+0x9400>
  4211d4:	ldr	x3, [x21, #72]
  4211d8:	mov	x2, #0x0                   	// #0
  4211dc:	ldrb	w1, [x22, #8]
  4211e0:	add	x0, x3, w0, sxtw
  4211e4:	str	x0, [x21, #72]
  4211e8:	cmp	w1, #0x9
  4211ec:	b.eq	4214d8 <_obstack_memory_used@@Base+0xa410>  // b.none
  4211f0:	mov	x1, x19
  4211f4:	mov	x2, x22
  4211f8:	ldr	x4, [sp, #96]
  4211fc:	mov	x3, x28
  421200:	ldr	x19, [sp, #112]
  421204:	mov	x0, x21
  421208:	add	x4, x4, #0x1
  42120c:	mov	x5, x19
  421210:	bl	4220c0 <_obstack_memory_used@@Base+0xaff8>
  421214:	ldr	w1, [x19]
  421218:	mov	x2, x0
  42121c:	cbnz	w1, 421250 <_obstack_memory_used@@Base+0xa188>
  421220:	ldrb	w0, [x22, #8]
  421224:	cmp	w0, #0x9
  421228:	b.eq	4214d8 <_obstack_memory_used@@Base+0xa410>  // b.none
  42122c:	cbz	x2, 421244 <_obstack_memory_used@@Base+0xa17c>
  421230:	mov	x0, x2
  421234:	adrp	x1, 418000 <_obstack_memory_used@@Base+0xf38>
  421238:	mov	x2, #0x0                   	// #0
  42123c:	add	x1, x1, #0x4f0
  421240:	bl	417590 <_obstack_memory_used@@Base+0x4c8>
  421244:	ldr	x1, [sp, #112]
  421248:	mov	w0, #0x8                   	// #8
  42124c:	str	w0, [x1]
  421250:	mov	x27, #0x0                   	// #0
  421254:	mov	x0, x27
  421258:	ldp	x19, x20, [sp, #16]
  42125c:	ldp	x21, x22, [sp, #32]
  421260:	ldp	x25, x26, [sp, #64]
  421264:	ldp	x27, x28, [sp, #80]
  421268:	ldp	x29, x30, [sp], #272
  42126c:	ret
  421270:	cmp	x19, #0x0
  421274:	b.le	421d3c <_obstack_memory_used@@Base+0xac74>
  421278:	cmp	x19, #0x1
  42127c:	b.eq	421d30 <_obstack_memory_used@@Base+0xac68>  // b.none
  421280:	add	x0, x26, #0x70
  421284:	add	x24, x26, #0x80
  421288:	mov	x25, x27
  42128c:	mov	x23, #0x2                   	// #2
  421290:	stp	x0, x27, [sp, #96]
  421294:	b	4212a0 <_obstack_memory_used@@Base+0xa1d8>
  421298:	cmp	x23, x19
  42129c:	b.gt	4212f8 <_obstack_memory_used@@Base+0xa230>
  4212a0:	mov	x0, x25
  4212a4:	mov	x1, x26
  4212a8:	bl	419298 <_obstack_memory_used@@Base+0x21d0>
  4212ac:	mov	x25, x0
  4212b0:	mov	x3, x0
  4212b4:	mov	w5, #0x10                  	// #16
  4212b8:	ldp	x0, x2, [sp, #96]
  4212bc:	stp	xzr, xzr, [sp, #240]
  4212c0:	add	x4, sp, #0xf0
  4212c4:	mov	x1, x24
  4212c8:	strb	w5, [sp, #248]
  4212cc:	add	x23, x23, #0x1
  4212d0:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  4212d4:	str	x0, [sp, #104]
  4212d8:	cmp	x25, #0x0
  4212dc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4212e0:	b.ne	421298 <_obstack_memory_used@@Base+0xa1d0>  // b.any
  4212e4:	b	420dfc <_obstack_memory_used@@Base+0x9d34>
  4212e8:	mov	x25, x27
  4212ec:	mov	x19, #0x1                   	// #1
  4212f0:	str	x27, [sp, #104]
  4212f4:	nop
  4212f8:	cmp	x20, x19
  4212fc:	b.eq	421170 <_obstack_memory_used@@Base+0xa0a8>  // b.none
  421300:	mov	x0, x25
  421304:	mov	x1, x26
  421308:	bl	419298 <_obstack_memory_used@@Base+0x21d0>
  42130c:	mov	x25, x0
  421310:	cbnz	x0, 420d30 <_obstack_memory_used@@Base+0x9c68>
  421314:	b	420dfc <_obstack_memory_used@@Base+0x9d34>
  421318:	ldp	x23, x24, [sp, #48]
  42131c:	b	420e28 <_obstack_memory_used@@Base+0x9d60>
  421320:	mov	x0, x27
  421324:	adrp	x1, 418000 <_obstack_memory_used@@Base+0xf38>
  421328:	mov	x2, #0x0                   	// #0
  42132c:	add	x1, x1, #0x4f0
  421330:	bl	417590 <_obstack_memory_used@@Base+0x4c8>
  421334:	mov	x27, #0x0                   	// #0
  421338:	ldr	x1, [sp, #112]
  42133c:	mov	w0, #0xd                   	// #13
  421340:	ldp	x23, x24, [sp, #48]
  421344:	str	w0, [x1]
  421348:	b	421198 <_obstack_memory_used@@Base+0xa0d0>
  42134c:	mov	x27, #0x0                   	// #0
  421350:	ldp	x23, x24, [sp, #48]
  421354:	b	421254 <_obstack_memory_used@@Base+0xa18c>
  421358:	cbnz	x0, 420ea0 <_obstack_memory_used@@Base+0x9dd8>
  42135c:	b	421140 <_obstack_memory_used@@Base+0xa078>
  421360:	mov	x4, x22
  421364:	add	x1, x26, #0x80
  421368:	add	x0, x26, #0x70
  42136c:	mov	x3, #0x0                   	// #0
  421370:	mov	x2, #0x0                   	// #0
  421374:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  421378:	mov	x27, x0
  42137c:	cbz	x0, 420f98 <_obstack_memory_used@@Base+0x9ed0>
  421380:	ldr	w0, [x26, #180]
  421384:	stp	x23, x24, [sp, #48]
  421388:	cmp	w0, #0x1
  42138c:	b.le	420c98 <_obstack_memory_used@@Base+0x9bd0>
  421390:	ldrb	w0, [x26, #176]
  421394:	orr	w0, w0, #0x2
  421398:	strb	w0, [x26, #176]
  42139c:	b	420c98 <_obstack_memory_used@@Base+0x9bd0>
  4213a0:	stp	x23, x24, [sp, #48]
  4213a4:	mov	w0, #0x30f                 	// #783
  4213a8:	ldr	w23, [x22]
  4213ac:	tst	w23, w0
  4213b0:	b.eq	4213e8 <_obstack_memory_used@@Base+0xa320>  // b.none
  4213b4:	ldrb	w0, [x26, #176]
  4213b8:	tbnz	w0, #4, 4213e8 <_obstack_memory_used@@Base+0xa320>
  4213bc:	orr	w0, w0, #0x10
  4213c0:	strb	w0, [x26, #176]
  4213c4:	mov	w1, w0
  4213c8:	tbnz	w0, #3, 421d1c <_obstack_memory_used@@Base+0xac54>
  4213cc:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
  4213d0:	mov	x2, #0x3ff000000000000     	// #287948901175001088
  4213d4:	movk	x0, #0x87ff, lsl #16
  4213d8:	stp	x2, x0, [x26, #184]
  4213dc:	tbz	w1, #2, 421cac <_obstack_memory_used@@Base+0xabe4>
  4213e0:	stp	xzr, xzr, [x26, #200]
  4213e4:	ldr	w23, [x22]
  4213e8:	sub	w0, w23, #0x100
  4213ec:	add	x24, x26, #0x70
  4213f0:	tst	w0, #0xfffffeff
  4213f4:	add	x26, x26, #0x80
  4213f8:	b.ne	42167c <_obstack_memory_used@@Base+0xa5b4>  // b.any
  4213fc:	cmp	w23, #0x100
  421400:	b.eq	421904 <_obstack_memory_used@@Base+0xa83c>  // b.none
  421404:	mov	w0, #0x5                   	// #5
  421408:	str	w0, [x22]
  42140c:	mov	x1, x26
  421410:	mov	x4, x22
  421414:	mov	x0, x24
  421418:	mov	x3, #0x0                   	// #0
  42141c:	mov	x2, #0x0                   	// #0
  421420:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  421424:	mov	x20, x0
  421428:	mov	w1, #0xa                   	// #10
  42142c:	str	w1, [x22]
  421430:	mov	x4, x22
  421434:	mov	x1, x26
  421438:	mov	x3, #0x0                   	// #0
  42143c:	mov	x2, #0x0                   	// #0
  421440:	mov	x0, x24
  421444:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  421448:	mov	w5, #0xa                   	// #10
  42144c:	mov	x19, x0
  421450:	stp	xzr, xzr, [sp, #240]
  421454:	mov	x1, x26
  421458:	mov	x0, x24
  42145c:	mov	x3, x19
  421460:	add	x4, sp, #0xf0
  421464:	mov	x2, x20
  421468:	strb	w5, [sp, #248]
  42146c:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  421470:	mov	x27, x0
  421474:	cmp	x20, #0x0
  421478:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  42147c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  421480:	b.eq	42169c <_obstack_memory_used@@Base+0xa5d4>  // b.none
  421484:	mov	x1, x21
  421488:	mov	x2, x28
  42148c:	mov	x0, x22
  421490:	bl	4204c8 <_obstack_memory_used@@Base+0x9400>
  421494:	ldr	x1, [x21, #72]
  421498:	ldp	x23, x24, [sp, #48]
  42149c:	add	x0, x1, w0, sxtw
  4214a0:	str	x0, [x21, #72]
  4214a4:	b	420e28 <_obstack_memory_used@@Base+0x9d60>
  4214a8:	ldr	x1, [sp, #112]
  4214ac:	mov	w0, #0x5                   	// #5
  4214b0:	mov	x27, #0x0                   	// #0
  4214b4:	str	w0, [x1]
  4214b8:	b	420e28 <_obstack_memory_used@@Base+0x9d60>
  4214bc:	cmp	w2, #0x23
  4214c0:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xef38>
  4214c4:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xef38>
  4214c8:	cset	w4, eq  // eq = none
  4214cc:	add	x3, x3, #0x9e8
  4214d0:	add	x2, x2, #0x538
  4214d4:	b	420c74 <_obstack_memory_used@@Base+0x9bac>
  4214d8:	cmp	x20, #0x8
  4214dc:	b.ls	421660 <_obstack_memory_used@@Base+0xa598>  // b.plast
  4214e0:	mov	w5, #0x11                  	// #17
  4214e4:	stp	xzr, xzr, [sp, #240]
  4214e8:	add	x4, sp, #0xf0
  4214ec:	add	x1, x26, #0x80
  4214f0:	add	x0, x26, #0x70
  4214f4:	mov	x3, #0x0                   	// #0
  4214f8:	strb	w5, [sp, #248]
  4214fc:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  421500:	mov	x27, x0
  421504:	cbz	x0, 420f98 <_obstack_memory_used@@Base+0x9ed0>
  421508:	stp	x23, x24, [sp, #48]
  42150c:	str	x20, [x0, #40]
  421510:	b	420c98 <_obstack_memory_used@@Base+0x9bd0>
  421514:	mov	x1, #0x1                   	// #1
  421518:	mov	x0, #0x20                  	// #32
  42151c:	str	xzr, [sp, #152]
  421520:	bl	402520 <calloc@plt>
  421524:	mov	x1, #0x1                   	// #1
  421528:	mov	x19, x0
  42152c:	mov	x0, #0x50                  	// #80
  421530:	bl	402520 <calloc@plt>
  421534:	cmp	x19, #0x0
  421538:	mov	x20, x0
  42153c:	cset	w0, eq  // eq = none
  421540:	cmp	x20, #0x0
  421544:	csinc	w0, w0, wzr, ne  // ne = any
  421548:	cbnz	w0, 421b20 <_obstack_memory_used@@Base+0xaa58>
  42154c:	mov	x1, x21
  421550:	mov	x2, x28
  421554:	mov	x0, x22
  421558:	bl	417150 <_obstack_memory_used@@Base+0x88>
  42155c:	ldrb	w1, [x22, #8]
  421560:	mov	w27, w0
  421564:	cmp	w1, #0x2
  421568:	b.eq	421af4 <_obstack_memory_used@@Base+0xaa2c>  // b.none
  42156c:	str	wzr, [sp, #120]
  421570:	cmp	w1, #0x19
  421574:	b.eq	4216a4 <_obstack_memory_used@@Base+0xa5dc>  // b.none
  421578:	stp	x23, x24, [sp, #48]
  42157c:	cmp	w1, #0x15
  421580:	b.ne	42158c <_obstack_memory_used@@Base+0xa4c4>  // b.any
  421584:	mov	w0, #0x1                   	// #1
  421588:	strb	w0, [x22, #8]
  42158c:	add	x23, sp, #0xd0
  421590:	mov	w5, #0x1                   	// #1
  421594:	mov	w24, #0x3                   	// #3
  421598:	stp	xzr, xzr, [sp, #96]
  42159c:	mov	w3, w27
  4215a0:	mov	x4, x28
  4215a4:	mov	x2, x22
  4215a8:	mov	x1, x21
  4215ac:	add	x0, sp, #0xa0
  4215b0:	str	w24, [sp, #160]
  4215b4:	str	x23, [sp, #168]
  4215b8:	bl	420288 <_obstack_memory_used@@Base+0x91c0>
  4215bc:	cbnz	w0, 4218f4 <_obstack_memory_used@@Base+0xa82c>
  4215c0:	mov	x1, x21
  4215c4:	mov	x2, x28
  4215c8:	mov	x0, x22
  4215cc:	bl	417150 <_obstack_memory_used@@Base+0x88>
  4215d0:	ldr	w1, [sp, #160]
  4215d4:	mov	w27, w0
  4215d8:	sub	w0, w1, #0x2
  4215dc:	tst	w0, #0xfffffffd
  4215e0:	b.eq	4215f8 <_obstack_memory_used@@Base+0xa530>  // b.none
  4215e4:	ldrb	w0, [x22, #8]
  4215e8:	cmp	w0, #0x2
  4215ec:	b.eq	4217c8 <_obstack_memory_used@@Base+0xa700>  // b.none
  4215f0:	cmp	w0, #0x16
  4215f4:	b.eq	421934 <_obstack_memory_used@@Base+0xa86c>  // b.none
  4215f8:	cmp	w1, #0x2
  4215fc:	b.eq	42178c <_obstack_memory_used@@Base+0xa6c4>  // b.none
  421600:	b.hi	421710 <_obstack_memory_used@@Base+0xa648>  // b.pmore
  421604:	cbz	w1, 4217a8 <_obstack_memory_used@@Base+0xa6e0>
  421608:	ldr	x1, [x20, #40]
  42160c:	ldr	x2, [sp, #96]
  421610:	ldr	x0, [x20]
  421614:	cmp	x1, x2
  421618:	b.eq	421bc8 <_obstack_memory_used@@Base+0xab00>  // b.none
  42161c:	add	x2, x1, #0x1
  421620:	str	x2, [x20, #40]
  421624:	ldr	w2, [sp, #168]
  421628:	str	w2, [x0, x1, lsl #2]
  42162c:	ldrb	w0, [x22, #8]
  421630:	cmp	w0, #0x2
  421634:	b.eq	4217c8 <_obstack_memory_used@@Base+0xa700>  // b.none
  421638:	cmp	w0, #0x15
  42163c:	b.eq	421824 <_obstack_memory_used@@Base+0xa75c>  // b.none
  421640:	mov	w5, #0x0                   	// #0
  421644:	b	42159c <_obstack_memory_used@@Base+0xa4d4>
  421648:	tbnz	w28, #17, 420f70 <_obstack_memory_used@@Base+0x9ea8>
  42164c:	ldr	x1, [sp, #112]
  421650:	mov	w0, #0x10                  	// #16
  421654:	mov	x27, #0x0                   	// #0
  421658:	str	w0, [x1]
  42165c:	b	420e28 <_obstack_memory_used@@Base+0x9d60>
  421660:	mov	w0, #0x1                   	// #1
  421664:	ldr	x1, [x26, #168]
  421668:	lsl	w0, w0, w20
  42166c:	sxtw	x0, w0
  421670:	orr	x0, x1, x0
  421674:	str	x0, [x26, #168]
  421678:	b	4214e0 <_obstack_memory_used@@Base+0xa418>
  42167c:	mov	x1, x26
  421680:	mov	x0, x24
  421684:	mov	x4, x22
  421688:	mov	x3, #0x0                   	// #0
  42168c:	mov	x2, #0x0                   	// #0
  421690:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  421694:	mov	x27, x0
  421698:	cbnz	x0, 421484 <_obstack_memory_used@@Base+0xa3bc>
  42169c:	ldp	x23, x24, [sp, #48]
  4216a0:	b	420f98 <_obstack_memory_used@@Base+0x9ed0>
  4216a4:	ldrb	w0, [x20, #32]
  4216a8:	orr	w0, w0, #0x1
  4216ac:	strb	w0, [x20, #32]
  4216b0:	tbz	w28, #8, 4216c0 <_obstack_memory_used@@Base+0xa5f8>
  4216b4:	ldr	x0, [x19]
  4216b8:	orr	x0, x0, #0x400
  4216bc:	str	x0, [x19]
  4216c0:	ldr	x3, [x21, #72]
  4216c4:	mov	x1, x21
  4216c8:	mov	x2, x28
  4216cc:	mov	x0, x22
  4216d0:	add	x7, x3, w27, sxtw
  4216d4:	str	x7, [x21, #72]
  4216d8:	bl	417150 <_obstack_memory_used@@Base+0x88>
  4216dc:	mov	w27, w0
  4216e0:	ldrb	w1, [x22, #8]
  4216e4:	cmp	w1, #0x2
  4216e8:	b.eq	421af4 <_obstack_memory_used@@Base+0xaa2c>  // b.none
  4216ec:	mov	w0, #0x1                   	// #1
  4216f0:	stp	x23, x24, [sp, #48]
  4216f4:	str	w0, [sp, #120]
  4216f8:	b	42157c <_obstack_memory_used@@Base+0xa4b4>
  4216fc:	ldr	x1, [sp, #112]
  421700:	mov	w0, #0x6                   	// #6
  421704:	mov	x27, #0x0                   	// #0
  421708:	str	w0, [x1]
  42170c:	b	420e28 <_obstack_memory_used@@Base+0x9d60>
  421710:	cmp	w1, #0x3
  421714:	b.eq	421770 <_obstack_memory_used@@Base+0xa6a8>  // b.none
  421718:	ldr	x0, [x21, #120]
  42171c:	mov	x1, x19
  421720:	ldr	x5, [sp, #168]
  421724:	mov	x6, x28
  421728:	add	x4, sp, #0x98
  42172c:	add	x3, x20, #0x48
  421730:	add	x2, x20, #0x18
  421734:	bl	41c150 <_obstack_memory_used@@Base+0x5088>
  421738:	ldr	x1, [sp, #112]
  42173c:	str	w0, [x1]
  421740:	cbz	w0, 42162c <_obstack_memory_used@@Base+0xa564>
  421744:	ldp	x23, x24, [sp, #48]
  421748:	mov	x0, x19
  42174c:	bl	4026b0 <free@plt>
  421750:	mov	x0, x20
  421754:	bl	418480 <_obstack_memory_used@@Base+0x13b8>
  421758:	ldr	x0, [sp, #112]
  42175c:	ldr	w0, [x0]
  421760:	cbnz	w0, 421250 <_obstack_memory_used@@Base+0xa188>
  421764:	mov	x27, #0x0                   	// #0
  421768:	stp	x23, x24, [sp, #48]
  42176c:	b	420c98 <_obstack_memory_used@@Base+0x9bd0>
  421770:	ldr	x1, [sp, #168]
  421774:	mov	x0, x19
  421778:	bl	41c0f0 <_obstack_memory_used@@Base+0x5028>
  42177c:	ldr	x1, [sp, #112]
  421780:	str	w0, [x1]
  421784:	cbz	w0, 42162c <_obstack_memory_used@@Base+0xa564>
  421788:	b	421744 <_obstack_memory_used@@Base+0xa67c>
  42178c:	ldr	x1, [sp, #168]
  421790:	mov	x0, x19
  421794:	bl	41c0f0 <_obstack_memory_used@@Base+0x5028>
  421798:	ldr	x1, [sp, #112]
  42179c:	str	w0, [x1]
  4217a0:	cbz	w0, 42162c <_obstack_memory_used@@Base+0xa564>
  4217a4:	b	421744 <_obstack_memory_used@@Base+0xa67c>
  4217a8:	ldrb	w1, [sp, #168]
  4217ac:	mov	x0, #0x1                   	// #1
  4217b0:	ubfx	x2, x1, #6, #2
  4217b4:	lsl	x1, x0, x1
  4217b8:	ldr	x0, [x19, x2, lsl #3]
  4217bc:	orr	x0, x0, x1
  4217c0:	str	x0, [x19, x2, lsl #3]
  4217c4:	b	42162c <_obstack_memory_used@@Base+0xa564>
  4217c8:	ldr	x1, [sp, #112]
  4217cc:	mov	w0, #0x7                   	// #7
  4217d0:	ldp	x23, x24, [sp, #48]
  4217d4:	str	w0, [x1]
  4217d8:	b	421748 <_obstack_memory_used@@Base+0xa680>
  4217dc:	mov	x2, x28
  4217e0:	mov	x1, x21
  4217e4:	mov	x0, x22
  4217e8:	str	x4, [sp, #96]
  4217ec:	bl	4204c8 <_obstack_memory_used@@Base+0x9400>
  4217f0:	mov	w6, w0
  4217f4:	ldr	x7, [x21, #72]
  4217f8:	mov	x3, x28
  4217fc:	ldr	x4, [sp, #96]
  421800:	mov	x2, x22
  421804:	ldr	x5, [sp, #112]
  421808:	add	x6, x7, w6, sxtw
  42180c:	str	x6, [x21, #72]
  421810:	mov	x1, x19
  421814:	mov	x0, x21
  421818:	bl	420c00 <_obstack_memory_used@@Base+0x9b38>
  42181c:	mov	x27, x0
  421820:	b	420e28 <_obstack_memory_used@@Base+0x9d60>
  421824:	ldr	x0, [x21, #72]
  421828:	add	x7, x0, w27, sxtw
  42182c:	ldr	w0, [sp, #120]
  421830:	str	x7, [x21, #72]
  421834:	cbz	w0, 421854 <_obstack_memory_used@@Base+0xa78c>
  421838:	mov	x0, #0x0                   	// #0
  42183c:	ldr	x1, [x19, x0, lsl #3]
  421840:	mvn	x1, x1
  421844:	str	x1, [x19, x0, lsl #3]
  421848:	add	x0, x0, #0x1
  42184c:	cmp	x0, #0x4
  421850:	b.ne	42183c <_obstack_memory_used@@Base+0xa774>  // b.any
  421854:	ldr	w2, [x26, #180]
  421858:	cmp	w2, #0x1
  42185c:	b.le	421884 <_obstack_memory_used@@Base+0xa7bc>
  421860:	ldr	x3, [x26, #120]
  421864:	mov	x0, #0x0                   	// #0
  421868:	ldr	x1, [x19, x0]
  42186c:	ldr	x4, [x3, x0]
  421870:	and	x1, x1, x4
  421874:	str	x1, [x19, x0]
  421878:	add	x0, x0, #0x8
  42187c:	cmp	x0, #0x20
  421880:	b.ne	421868 <_obstack_memory_used@@Base+0xa7a0>  // b.any
  421884:	ldr	x0, [x20, #40]
  421888:	cbnz	x0, 421b64 <_obstack_memory_used@@Base+0xaa9c>
  42188c:	ldr	x0, [x20, #48]
  421890:	cbnz	x0, 421b64 <_obstack_memory_used@@Base+0xaa9c>
  421894:	ldr	x0, [x20, #56]
  421898:	cbnz	x0, 421b64 <_obstack_memory_used@@Base+0xaa9c>
  42189c:	ldr	x0, [x20, #64]
  4218a0:	cbnz	x0, 421b64 <_obstack_memory_used@@Base+0xaa9c>
  4218a4:	cmp	w2, #0x1
  4218a8:	b.le	4218bc <_obstack_memory_used@@Base+0xa7f4>
  4218ac:	ldr	x0, [x20, #72]
  4218b0:	cbnz	x0, 421b64 <_obstack_memory_used@@Base+0xaa9c>
  4218b4:	ldrb	w0, [x20, #32]
  4218b8:	tbnz	w0, #0, 421b64 <_obstack_memory_used@@Base+0xaa9c>
  4218bc:	mov	x0, x20
  4218c0:	bl	418480 <_obstack_memory_used@@Base+0x13b8>
  4218c4:	mov	w5, #0x3                   	// #3
  4218c8:	mov	x4, x23
  4218cc:	add	x1, x26, #0x80
  4218d0:	add	x0, x26, #0x70
  4218d4:	mov	x3, #0x0                   	// #0
  4218d8:	mov	x2, #0x0                   	// #0
  4218dc:	str	x19, [sp, #208]
  4218e0:	strb	w5, [sp, #216]
  4218e4:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  4218e8:	mov	x27, x0
  4218ec:	cbnz	x0, 420c98 <_obstack_memory_used@@Base+0x9bd0>
  4218f0:	mov	w0, #0xc                   	// #12
  4218f4:	ldr	x1, [sp, #112]
  4218f8:	ldp	x23, x24, [sp, #48]
  4218fc:	str	w0, [x1]
  421900:	b	421748 <_obstack_memory_used@@Base+0xa680>
  421904:	mov	w0, #0x6                   	// #6
  421908:	str	w0, [x22]
  42190c:	mov	x1, x26
  421910:	mov	x4, x22
  421914:	mov	x0, x24
  421918:	mov	x3, #0x0                   	// #0
  42191c:	mov	x2, #0x0                   	// #0
  421920:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  421924:	mov	w1, #0x9                   	// #9
  421928:	mov	x20, x0
  42192c:	str	w1, [x22]
  421930:	b	421430 <_obstack_memory_used@@Base+0xa368>
  421934:	ldr	x3, [x21, #72]
  421938:	mov	x1, x21
  42193c:	mov	x2, x28
  421940:	add	x0, sp, #0xc0
  421944:	add	x3, x3, w27, sxtw
  421948:	str	x3, [x21, #72]
  42194c:	bl	417150 <_obstack_memory_used@@Base+0x88>
  421950:	mov	w3, w0
  421954:	ldrb	w1, [sp, #200]
  421958:	cmp	w1, #0x2
  42195c:	b.eq	4217c8 <_obstack_memory_used@@Base+0xa700>  // b.none
  421960:	cmp	w1, #0x15
  421964:	b.eq	421b44 <_obstack_memory_used@@Base+0xaa7c>  // b.none
  421968:	add	x6, sp, #0xf0
  42196c:	mov	x4, x28
  421970:	add	x2, sp, #0xc0
  421974:	mov	x1, x21
  421978:	add	x0, sp, #0xb0
  42197c:	mov	w5, #0x1                   	// #1
  421980:	str	w24, [sp, #176]
  421984:	str	x6, [sp, #184]
  421988:	bl	420288 <_obstack_memory_used@@Base+0x91c0>
  42198c:	cbnz	w0, 4218f4 <_obstack_memory_used@@Base+0xa82c>
  421990:	mov	x2, x28
  421994:	mov	x1, x21
  421998:	mov	x0, x22
  42199c:	bl	417150 <_obstack_memory_used@@Base+0x88>
  4219a0:	ldr	w1, [x26, #180]
  4219a4:	mov	w27, w0
  4219a8:	ldr	w2, [sp, #160]
  4219ac:	cmp	w1, #0x2
  4219b0:	sub	w0, w2, #0x2
  4219b4:	csel	x25, x20, xzr, ge  // ge = tcont
  4219b8:	tst	w0, #0xfffffffd
  4219bc:	b.eq	421c98 <_obstack_memory_used@@Base+0xabd0>  // b.none
  4219c0:	ldr	w1, [sp, #176]
  4219c4:	sub	w0, w1, #0x2
  4219c8:	tst	w0, #0xfffffffd
  4219cc:	b.eq	421c98 <_obstack_memory_used@@Base+0xabd0>  // b.none
  4219d0:	cmp	w2, #0x3
  4219d4:	cset	w0, eq  // eq = none
  4219d8:	str	w0, [sp, #128]
  4219dc:	b.eq	421e50 <_obstack_memory_used@@Base+0xad88>  // b.none
  4219e0:	cmp	w1, #0x3
  4219e4:	b.eq	421e28 <_obstack_memory_used@@Base+0xad60>  // b.none
  4219e8:	cbnz	w2, 421ad8 <_obstack_memory_used@@Base+0xaa10>
  4219ec:	ldrb	w3, [sp, #168]
  4219f0:	ldr	w0, [sp, #128]
  4219f4:	cmp	w2, #0x0
  4219f8:	csinc	w0, w0, wzr, ne  // ne = any
  4219fc:	cbz	w1, 421d28 <_obstack_memory_used@@Base+0xac60>
  421a00:	cmp	w1, #0x3
  421a04:	b.ne	421ae4 <_obstack_memory_used@@Base+0xaa1c>  // b.any
  421a08:	ldr	x2, [sp, #184]
  421a0c:	ldrb	w4, [x2]
  421a10:	cbz	w0, 421c74 <_obstack_memory_used@@Base+0xabac>
  421a14:	cbz	x25, 421c80 <_obstack_memory_used@@Base+0xabb8>
  421a18:	mov	w0, w3
  421a1c:	str	w4, [sp, #128]
  421a20:	bl	4025e0 <btowc@plt>
  421a24:	mov	w3, w0
  421a28:	ldr	w1, [sp, #176]
  421a2c:	ldr	w4, [sp, #128]
  421a30:	cmp	w1, #0x0
  421a34:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  421a38:	b.ne	421aec <_obstack_memory_used@@Base+0xaa24>  // b.any
  421a3c:	mov	w0, w4
  421a40:	str	w3, [sp, #128]
  421a44:	bl	4025e0 <btowc@plt>
  421a48:	mov	w4, w0
  421a4c:	ldr	w3, [sp, #128]
  421a50:	cmn	w3, #0x1
  421a54:	ccmn	w4, #0x1, #0x4, ne  // ne = any
  421a58:	b.eq	421c04 <_obstack_memory_used@@Base+0xab3c>  // b.none
  421a5c:	tst	x28, #0x10000
  421a60:	ccmp	w4, w3, #0x2, ne  // ne = any
  421a64:	b.cc	421c98 <_obstack_memory_used@@Base+0xabd0>  // b.lo, b.ul, b.last
  421a68:	cbz	x25, 421a94 <_obstack_memory_used@@Base+0xa9cc>
  421a6c:	ldr	x0, [x25, #64]
  421a70:	ldr	x1, [sp, #104]
  421a74:	ldr	x2, [x25, #8]
  421a78:	cmp	x0, x1
  421a7c:	b.eq	421e7c <_obstack_memory_used@@Base+0xadb4>  // b.none
  421a80:	ldr	x1, [x25, #16]
  421a84:	str	w3, [x2, x0, lsl #2]
  421a88:	add	x2, x0, #0x1
  421a8c:	str	x2, [x25, #64]
  421a90:	str	w4, [x1, x0, lsl #2]
  421a94:	mov	x1, #0x0                   	// #0
  421a98:	mov	x6, #0x1                   	// #1
  421a9c:	nop
  421aa0:	cmp	w1, w3
  421aa4:	asr	x0, x1, #6
  421aa8:	ccmp	w1, w4, #0x2, cs  // cs = hs, nlast
  421aac:	lsl	x5, x6, x1
  421ab0:	add	x1, x1, #0x1
  421ab4:	b.hi	421ac4 <_obstack_memory_used@@Base+0xa9fc>  // b.pmore
  421ab8:	ldr	x2, [x19, x0, lsl #3]
  421abc:	orr	x2, x2, x5
  421ac0:	str	x2, [x19, x0, lsl #3]
  421ac4:	cmp	x1, #0x100
  421ac8:	b.ne	421aa0 <_obstack_memory_used@@Base+0xa9d8>  // b.any
  421acc:	ldr	x0, [sp, #112]
  421ad0:	str	wzr, [x0]
  421ad4:	b	42162c <_obstack_memory_used@@Base+0xa564>
  421ad8:	ldrb	w0, [sp, #128]
  421adc:	mov	w3, #0x0                   	// #0
  421ae0:	cbz	w1, 421d28 <_obstack_memory_used@@Base+0xac60>
  421ae4:	cbnz	w0, 421ed4 <_obstack_memory_used@@Base+0xae0c>
  421ae8:	ldr	w3, [sp, #168]
  421aec:	ldr	w4, [sp, #184]
  421af0:	b	421a50 <_obstack_memory_used@@Base+0xa988>
  421af4:	ldr	x1, [sp, #112]
  421af8:	mov	w0, #0x2                   	// #2
  421afc:	str	w0, [x1]
  421b00:	b	421748 <_obstack_memory_used@@Base+0xa680>
  421b04:	ldrb	w0, [x22, #8]
  421b08:	cmp	w0, #0x2
  421b0c:	b.ne	421160 <_obstack_memory_used@@Base+0xa098>  // b.any
  421b10:	ldr	x1, [sp, #112]
  421b14:	mov	w0, #0x9                   	// #9
  421b18:	str	w0, [x1]
  421b1c:	b	421140 <_obstack_memory_used@@Base+0xa078>
  421b20:	mov	x0, x19
  421b24:	bl	4026b0 <free@plt>
  421b28:	mov	x0, x20
  421b2c:	bl	4026b0 <free@plt>
  421b30:	ldr	x1, [sp, #112]
  421b34:	mov	w0, #0xc                   	// #12
  421b38:	mov	x27, #0x0                   	// #0
  421b3c:	str	w0, [x1]
  421b40:	b	420e28 <_obstack_memory_used@@Base+0x9d60>
  421b44:	ldr	x3, [x21, #72]
  421b48:	neg	w0, w27
  421b4c:	mov	w2, #0x1                   	// #1
  421b50:	ldr	w1, [sp, #160]
  421b54:	add	x0, x3, w0, sxtw
  421b58:	str	x0, [x21, #72]
  421b5c:	strb	w2, [x22, #8]
  421b60:	b	4215f8 <_obstack_memory_used@@Base+0xa530>
  421b64:	ldrb	w1, [x26, #176]
  421b68:	mov	w5, #0x6                   	// #6
  421b6c:	add	x24, x26, #0x70
  421b70:	add	x25, x26, #0x80
  421b74:	orr	w1, w1, #0x2
  421b78:	strb	w1, [x26, #176]
  421b7c:	mov	x2, #0x0                   	// #0
  421b80:	mov	x0, x24
  421b84:	mov	x1, x25
  421b88:	mov	x4, x23
  421b8c:	mov	x3, #0x0                   	// #0
  421b90:	str	x20, [sp, #208]
  421b94:	strb	w5, [sp, #216]
  421b98:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  421b9c:	mov	x2, #0x0                   	// #0
  421ba0:	mov	x27, x0
  421ba4:	cbz	x0, 4218f0 <_obstack_memory_used@@Base+0xa828>
  421ba8:	ldr	x0, [x19, x2, lsl #3]
  421bac:	add	x2, x2, #0x1
  421bb0:	cmp	x2, #0x4
  421bb4:	cbnz	x0, 421c18 <_obstack_memory_used@@Base+0xab50>
  421bb8:	b.ne	421ba8 <_obstack_memory_used@@Base+0xaae0>  // b.any
  421bbc:	mov	x0, x19
  421bc0:	bl	4026b0 <free@plt>
  421bc4:	b	420c98 <_obstack_memory_used@@Base+0x9bd0>
  421bc8:	lsl	x1, x2, #1
  421bcc:	add	x1, x1, #0x1
  421bd0:	str	x1, [sp, #96]
  421bd4:	lsl	x1, x1, #2
  421bd8:	bl	402550 <realloc@plt>
  421bdc:	cbz	x0, 4218f0 <_obstack_memory_used@@Base+0xa828>
  421be0:	str	x0, [x20]
  421be4:	ldr	x1, [x20, #40]
  421be8:	b	42161c <_obstack_memory_used@@Base+0xa554>
  421bec:	ldr	x0, [sp, #184]
  421bf0:	stp	w2, w1, [sp, #136]
  421bf4:	bl	402300 <strlen@plt>
  421bf8:	cmp	x0, #0x1
  421bfc:	ldp	w2, w1, [sp, #136]
  421c00:	b.ls	421e70 <_obstack_memory_used@@Base+0xada8>  // b.plast
  421c04:	ldr	x1, [sp, #112]
  421c08:	mov	w0, #0x3                   	// #3
  421c0c:	ldp	x23, x24, [sp, #48]
  421c10:	str	w0, [x1]
  421c14:	b	421748 <_obstack_memory_used@@Base+0xa680>
  421c18:	mov	w5, #0x3                   	// #3
  421c1c:	mov	x2, #0x0                   	// #0
  421c20:	mov	x4, x23
  421c24:	mov	x1, x25
  421c28:	mov	x0, x24
  421c2c:	mov	x3, #0x0                   	// #0
  421c30:	str	x19, [sp, #208]
  421c34:	strb	w5, [sp, #216]
  421c38:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  421c3c:	mov	x2, x0
  421c40:	cbz	x0, 4218f0 <_obstack_memory_used@@Base+0xa828>
  421c44:	mov	w5, #0xa                   	// #10
  421c48:	stp	xzr, xzr, [sp, #240]
  421c4c:	mov	x3, x27
  421c50:	mov	x1, x25
  421c54:	mov	x0, x24
  421c58:	add	x4, sp, #0xf0
  421c5c:	strb	w5, [sp, #248]
  421c60:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  421c64:	mov	x27, x0
  421c68:	cbnz	x0, 420c98 <_obstack_memory_used@@Base+0x9bd0>
  421c6c:	mov	w0, #0xc                   	// #12
  421c70:	b	4218f4 <_obstack_memory_used@@Base+0xa82c>
  421c74:	ldr	w3, [sp, #168]
  421c78:	cbnz	x25, 421a3c <_obstack_memory_used@@Base+0xa974>
  421c7c:	b	421a50 <_obstack_memory_used@@Base+0xa988>
  421c80:	cmp	w1, #0x0
  421c84:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  421c88:	b.ne	421aec <_obstack_memory_used@@Base+0xaa24>  // b.any
  421c8c:	tst	x28, #0x10000
  421c90:	ccmp	w4, w3, #0x2, ne  // ne = any
  421c94:	b.cs	421a94 <_obstack_memory_used@@Base+0xa9cc>  // b.hs, b.nlast
  421c98:	ldr	x1, [sp, #112]
  421c9c:	mov	w0, #0xb                   	// #11
  421ca0:	ldp	x23, x24, [sp, #48]
  421ca4:	str	w0, [x1]
  421ca8:	b	421748 <_obstack_memory_used@@Base+0xa680>
  421cac:	mov	w20, #0x80                  	// #128
  421cb0:	mov	w19, #0x2                   	// #2
  421cb4:	bl	4026a0 <__ctype_b_loc@plt>
  421cb8:	ldr	x6, [x0]
  421cbc:	sxtw	x4, w19
  421cc0:	add	x5, x26, #0xb8
  421cc4:	mov	x7, #0x1                   	// #1
  421cc8:	add	x6, x6, w20, sxtw #1
  421ccc:	mov	x0, #0x0                   	// #0
  421cd0:	ldrh	w1, [x6, x0, lsl #1]
  421cd4:	add	w2, w20, w0
  421cd8:	cmp	w2, #0x5f
  421cdc:	lsl	x3, x7, x0
  421ce0:	and	w1, w1, #0x8
  421ce4:	add	x0, x0, #0x1
  421ce8:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  421cec:	b.eq	421cfc <_obstack_memory_used@@Base+0xac34>  // b.none
  421cf0:	ldr	x1, [x5, x4, lsl #3]
  421cf4:	orr	x1, x1, x3
  421cf8:	str	x1, [x5, x4, lsl #3]
  421cfc:	cmp	x0, #0x40
  421d00:	b.ne	421cd0 <_obstack_memory_used@@Base+0xac08>  // b.any
  421d04:	add	x4, x4, #0x1
  421d08:	add	w20, w20, #0x40
  421d0c:	cmp	w4, #0x3
  421d10:	add	x6, x6, #0x80
  421d14:	b.le	421ccc <_obstack_memory_used@@Base+0xac04>
  421d18:	b	4213e8 <_obstack_memory_used@@Base+0xa320>
  421d1c:	mov	w20, #0x0                   	// #0
  421d20:	mov	w19, #0x0                   	// #0
  421d24:	b	421cb4 <_obstack_memory_used@@Base+0xabec>
  421d28:	ldrb	w4, [sp, #184]
  421d2c:	b	421a10 <_obstack_memory_used@@Base+0xa948>
  421d30:	mov	x25, x27
  421d34:	str	x27, [sp, #104]
  421d38:	b	4212f8 <_obstack_memory_used@@Base+0xa230>
  421d3c:	mov	x25, x27
  421d40:	str	xzr, [sp, #104]
  421d44:	b	420d30 <_obstack_memory_used@@Base+0x9c68>
  421d48:	add	x20, x26, #0x70
  421d4c:	stp	x23, x24, [sp, #48]
  421d50:	add	x23, x26, #0x80
  421d54:	mov	x0, x20
  421d58:	mov	x1, x23
  421d5c:	mov	x4, x22
  421d60:	mov	x3, #0x0                   	// #0
  421d64:	mov	x2, #0x0                   	// #0
  421d68:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  421d6c:	mov	x27, x0
  421d70:	cbz	x0, 42169c <_obstack_memory_used@@Base+0xa5d4>
  421d74:	ldr	w0, [x26, #180]
  421d78:	mov	w24, #0x10                  	// #16
  421d7c:	cmp	w0, #0x1
  421d80:	b.le	420c98 <_obstack_memory_used@@Base+0x9bd0>
  421d84:	nop
  421d88:	ldr	x3, [x21, #72]
  421d8c:	mov	x2, x28
  421d90:	ldr	x4, [x21, #104]
  421d94:	mov	x1, x21
  421d98:	mov	x0, x22
  421d9c:	cmp	x4, x3
  421da0:	b.le	420c98 <_obstack_memory_used@@Base+0x9bd0>
  421da4:	ldr	x4, [x21, #48]
  421da8:	cmp	x3, x4
  421dac:	b.eq	420c98 <_obstack_memory_used@@Base+0x9bd0>  // b.none
  421db0:	ldr	x4, [x21, #16]
  421db4:	ldr	w3, [x4, x3, lsl #2]
  421db8:	cmn	w3, #0x1
  421dbc:	b.ne	420c98 <_obstack_memory_used@@Base+0x9bd0>  // b.any
  421dc0:	bl	4204c8 <_obstack_memory_used@@Base+0x9400>
  421dc4:	mov	w5, w0
  421dc8:	ldr	x6, [x21, #72]
  421dcc:	mov	x4, x22
  421dd0:	mov	x1, x23
  421dd4:	mov	x3, #0x0                   	// #0
  421dd8:	mov	x2, #0x0                   	// #0
  421ddc:	mov	x0, x20
  421de0:	add	x5, x6, w5, sxtw
  421de4:	str	x5, [x21, #72]
  421de8:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  421dec:	stp	xzr, xzr, [sp, #240]
  421df0:	mov	x19, x0
  421df4:	mov	x2, x27
  421df8:	mov	x3, x0
  421dfc:	add	x4, sp, #0xf0
  421e00:	mov	x1, x23
  421e04:	mov	x0, x20
  421e08:	strb	w24, [sp, #248]
  421e0c:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  421e10:	mov	x27, x0
  421e14:	cmp	x19, #0x0
  421e18:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  421e1c:	b.ne	421d88 <_obstack_memory_used@@Base+0xacc0>  // b.any
  421e20:	ldp	x23, x24, [sp, #48]
  421e24:	b	420f98 <_obstack_memory_used@@Base+0x9ed0>
  421e28:	ldr	x0, [sp, #184]
  421e2c:	stp	w2, w1, [sp, #136]
  421e30:	bl	402300 <strlen@plt>
  421e34:	cmp	x0, #0x1
  421e38:	b.hi	421c04 <_obstack_memory_used@@Base+0xab3c>  // b.pmore
  421e3c:	ldp	w2, w1, [sp, #136]
  421e40:	cbz	w2, 4219ec <_obstack_memory_used@@Base+0xa924>
  421e44:	ldrb	w0, [sp, #128]
  421e48:	mov	w3, #0x0                   	// #0
  421e4c:	b	421a08 <_obstack_memory_used@@Base+0xa940>
  421e50:	ldr	x0, [sp, #168]
  421e54:	stp	w2, w1, [sp, #136]
  421e58:	bl	402300 <strlen@plt>
  421e5c:	cmp	x0, #0x1
  421e60:	ldp	w2, w1, [sp, #136]
  421e64:	b.hi	421c04 <_obstack_memory_used@@Base+0xab3c>  // b.pmore
  421e68:	cmp	w1, #0x3
  421e6c:	b.eq	421bec <_obstack_memory_used@@Base+0xab24>  // b.none
  421e70:	ldr	x0, [sp, #168]
  421e74:	ldrb	w3, [x0]
  421e78:	b	4219f0 <_obstack_memory_used@@Base+0xa928>
  421e7c:	lsl	x1, x1, #1
  421e80:	mov	x0, x2
  421e84:	add	x1, x1, #0x1
  421e88:	str	x1, [sp, #104]
  421e8c:	stp	w3, w4, [sp, #136]
  421e90:	lsl	x1, x1, #2
  421e94:	str	x1, [sp, #128]
  421e98:	bl	402550 <realloc@plt>
  421e9c:	mov	x2, x0
  421ea0:	ldr	x0, [x25, #16]
  421ea4:	ldr	x1, [sp, #128]
  421ea8:	str	x2, [sp, #128]
  421eac:	bl	402550 <realloc@plt>
  421eb0:	mov	x1, x0
  421eb4:	ldr	x2, [sp, #128]
  421eb8:	ldp	w3, w4, [sp, #136]
  421ebc:	cmp	x2, #0x0
  421ec0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  421ec4:	b.eq	421ee0 <_obstack_memory_used@@Base+0xae18>  // b.none
  421ec8:	stp	x2, x1, [x25, #8]
  421ecc:	ldr	x0, [x25, #64]
  421ed0:	b	421a80 <_obstack_memory_used@@Base+0xa9b8>
  421ed4:	cbz	x25, 421aec <_obstack_memory_used@@Base+0xaa24>
  421ed8:	mov	w4, #0x0                   	// #0
  421edc:	b	421a18 <_obstack_memory_used@@Base+0xa950>
  421ee0:	mov	x0, x2
  421ee4:	str	x1, [sp, #96]
  421ee8:	bl	4026b0 <free@plt>
  421eec:	ldr	x1, [sp, #96]
  421ef0:	mov	x0, x1
  421ef4:	bl	4026b0 <free@plt>
  421ef8:	ldr	x1, [sp, #112]
  421efc:	mov	w0, #0xc                   	// #12
  421f00:	ldp	x23, x24, [sp, #48]
  421f04:	str	w0, [x1]
  421f08:	b	421748 <_obstack_memory_used@@Base+0xa680>
  421f0c:	nop
  421f10:	stp	x29, x30, [sp, #-128]!
  421f14:	mov	x29, sp
  421f18:	stp	x27, x28, [sp, #80]
  421f1c:	mov	x27, x5
  421f20:	stp	x19, x20, [sp, #16]
  421f24:	mov	x20, x1
  421f28:	stp	x21, x22, [sp, #32]
  421f2c:	mov	x22, x0
  421f30:	mov	x21, x4
  421f34:	stp	x23, x24, [sp, #48]
  421f38:	mov	x23, x3
  421f3c:	stp	x25, x26, [sp, #64]
  421f40:	mov	x26, x2
  421f44:	ldr	x25, [x1]
  421f48:	bl	420c00 <_obstack_memory_used@@Base+0x9b38>
  421f4c:	ldr	w1, [x27]
  421f50:	cmp	w1, #0x0
  421f54:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  421f58:	b.eq	4220b8 <_obstack_memory_used@@Base+0xaff0>  // b.none
  421f5c:	ldrb	w6, [x26, #8]
  421f60:	mov	x28, x0
  421f64:	and	w0, w6, #0xfffffff7
  421f68:	cmp	w0, #0x2
  421f6c:	b.eq	422024 <_obstack_memory_used@@Base+0xaf5c>  // b.none
  421f70:	cmp	x21, #0x0
  421f74:	add	x0, x25, #0x80
  421f78:	cset	w24, eq  // eq = none
  421f7c:	add	x25, x25, #0x70
  421f80:	str	x0, [sp, #104]
  421f84:	b	421fa0 <_obstack_memory_used@@Base+0xaed8>
  421f88:	ldrb	w6, [x26, #8]
  421f8c:	cmp	x28, #0x0
  421f90:	csel	x28, x28, x0, ne  // ne = any
  421f94:	and	w0, w6, #0xfffffff7
  421f98:	cmp	w0, #0x2
  421f9c:	b.eq	422024 <_obstack_memory_used@@Base+0xaf5c>  // b.none
  421fa0:	cmp	w24, #0x0
  421fa4:	mov	x5, x27
  421fa8:	mov	x4, x21
  421fac:	mov	x3, x23
  421fb0:	mov	x2, x26
  421fb4:	mov	x1, x20
  421fb8:	mov	x0, x22
  421fbc:	ccmp	w6, #0x9, #0x0, eq  // eq = none
  421fc0:	b.eq	422024 <_obstack_memory_used@@Base+0xaf5c>  // b.none
  421fc4:	bl	420c00 <_obstack_memory_used@@Base+0x9b38>
  421fc8:	mov	x19, x0
  421fcc:	ldr	w1, [x27]
  421fd0:	cmp	w1, #0x0
  421fd4:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  421fd8:	b.eq	422044 <_obstack_memory_used@@Base+0xaf7c>  // b.none
  421fdc:	cmp	x28, #0x0
  421fe0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  421fe4:	b.eq	421f88 <_obstack_memory_used@@Base+0xaec0>  // b.none
  421fe8:	ldr	x1, [sp, #104]
  421fec:	mov	w5, #0x10                  	// #16
  421ff0:	stp	xzr, xzr, [sp, #112]
  421ff4:	mov	x3, x0
  421ff8:	add	x4, sp, #0x70
  421ffc:	mov	x2, x28
  422000:	mov	x0, x25
  422004:	strb	w5, [sp, #120]
  422008:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  42200c:	cbz	x0, 422064 <_obstack_memory_used@@Base+0xaf9c>
  422010:	ldrb	w6, [x26, #8]
  422014:	mov	x28, x0
  422018:	and	w0, w6, #0xfffffff7
  42201c:	cmp	w0, #0x2
  422020:	b.ne	421fa0 <_obstack_memory_used@@Base+0xaed8>  // b.any
  422024:	mov	x0, x28
  422028:	ldp	x19, x20, [sp, #16]
  42202c:	ldp	x21, x22, [sp, #32]
  422030:	ldp	x23, x24, [sp, #48]
  422034:	ldp	x25, x26, [sp, #64]
  422038:	ldp	x27, x28, [sp, #80]
  42203c:	ldp	x29, x30, [sp], #128
  422040:	ret
  422044:	cbz	x28, 4220b8 <_obstack_memory_used@@Base+0xaff0>
  422048:	mov	x0, x28
  42204c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0xf38>
  422050:	mov	x2, #0x0                   	// #0
  422054:	add	x1, x1, #0x4f0
  422058:	mov	x28, #0x0                   	// #0
  42205c:	bl	417590 <_obstack_memory_used@@Base+0x4c8>
  422060:	b	422024 <_obstack_memory_used@@Base+0xaf5c>
  422064:	adrp	x20, 418000 <_obstack_memory_used@@Base+0xf38>
  422068:	add	x20, x20, #0x4f0
  42206c:	mov	x1, x20
  422070:	mov	x0, x19
  422074:	mov	x2, #0x0                   	// #0
  422078:	bl	417590 <_obstack_memory_used@@Base+0x4c8>
  42207c:	mov	x1, x20
  422080:	mov	x0, x28
  422084:	mov	x2, #0x0                   	// #0
  422088:	bl	417590 <_obstack_memory_used@@Base+0x4c8>
  42208c:	mov	w0, #0xc                   	// #12
  422090:	str	w0, [x27]
  422094:	mov	x28, #0x0                   	// #0
  422098:	mov	x0, x28
  42209c:	ldp	x19, x20, [sp, #16]
  4220a0:	ldp	x21, x22, [sp, #32]
  4220a4:	ldp	x23, x24, [sp, #48]
  4220a8:	ldp	x25, x26, [sp, #64]
  4220ac:	ldp	x27, x28, [sp, #80]
  4220b0:	ldp	x29, x30, [sp], #128
  4220b4:	ret
  4220b8:	mov	x28, #0x0                   	// #0
  4220bc:	b	422024 <_obstack_memory_used@@Base+0xaf5c>
  4220c0:	stp	x29, x30, [sp, #-128]!
  4220c4:	mov	x29, sp
  4220c8:	stp	x19, x20, [sp, #16]
  4220cc:	mov	x20, x5
  4220d0:	ldr	x19, [x1]
  4220d4:	stp	x21, x22, [sp, #32]
  4220d8:	mov	x22, x1
  4220dc:	mov	x21, x4
  4220e0:	stp	x23, x24, [sp, #48]
  4220e4:	mov	x23, x3
  4220e8:	ldr	x6, [x19, #168]
  4220ec:	stp	x25, x26, [sp, #64]
  4220f0:	mov	x26, x0
  4220f4:	mov	x25, x2
  4220f8:	stp	x27, x28, [sp, #80]
  4220fc:	str	x6, [sp, #104]
  422100:	bl	421f10 <_obstack_memory_used@@Base+0xae48>
  422104:	ldr	w1, [x20]
  422108:	cmp	w1, #0x0
  42210c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  422110:	b.eq	42224c <_obstack_memory_used@@Base+0xb184>  // b.none
  422114:	mov	x28, x0
  422118:	orr	x24, x23, #0x800000
  42211c:	add	x0, x19, #0x80
  422120:	str	x0, [sp, #96]
  422124:	b	42218c <_obstack_memory_used@@Base+0xb0c4>
  422128:	cmp	x21, #0x0
  42212c:	ccmp	w10, #0x9, #0x0, ne  // ne = any
  422130:	b.eq	4221e0 <_obstack_memory_used@@Base+0xb118>  // b.none
  422134:	ldr	x6, [sp, #104]
  422138:	ldr	x27, [x19, #168]
  42213c:	str	x6, [x19, #168]
  422140:	bl	421f10 <_obstack_memory_used@@Base+0xae48>
  422144:	mov	x3, x0
  422148:	ldr	w1, [x20]
  42214c:	cmp	w1, #0x0
  422150:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  422154:	b.eq	4221e8 <_obstack_memory_used@@Base+0xb120>  // b.none
  422158:	ldr	x0, [x19, #168]
  42215c:	orr	x27, x0, x27
  422160:	str	x27, [x19, #168]
  422164:	ldr	x1, [sp, #96]
  422168:	mov	w5, #0xa                   	// #10
  42216c:	stp	xzr, xzr, [sp, #112]
  422170:	mov	x2, x28
  422174:	add	x4, sp, #0x70
  422178:	add	x0, x19, #0x70
  42217c:	strb	w5, [sp, #120]
  422180:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  422184:	mov	x28, x0
  422188:	cbz	x0, 422224 <_obstack_memory_used@@Base+0xb15c>
  42218c:	ldrb	w3, [x25, #8]
  422190:	mov	x2, x24
  422194:	mov	x1, x26
  422198:	mov	x0, x25
  42219c:	cmp	w3, #0xa
  4221a0:	b.ne	422204 <_obstack_memory_used@@Base+0xb13c>  // b.any
  4221a4:	bl	4204c8 <_obstack_memory_used@@Base+0x9400>
  4221a8:	mov	w9, w0
  4221ac:	ldr	x11, [x26, #72]
  4221b0:	mov	x5, x20
  4221b4:	ldrb	w10, [x25, #8]
  4221b8:	mov	x4, x21
  4221bc:	mov	x3, x23
  4221c0:	mov	x2, x25
  4221c4:	add	x9, x11, w9, sxtw
  4221c8:	str	x9, [x26, #72]
  4221cc:	and	w9, w10, #0xfffffff7
  4221d0:	mov	x1, x22
  4221d4:	mov	x0, x26
  4221d8:	cmp	w9, #0x2
  4221dc:	b.ne	422128 <_obstack_memory_used@@Base+0xb060>  // b.any
  4221e0:	mov	x3, #0x0                   	// #0
  4221e4:	b	422164 <_obstack_memory_used@@Base+0xb09c>
  4221e8:	cbz	x28, 42224c <_obstack_memory_used@@Base+0xb184>
  4221ec:	mov	x0, x28
  4221f0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0xf38>
  4221f4:	mov	x2, #0x0                   	// #0
  4221f8:	add	x1, x1, #0x4f0
  4221fc:	mov	x28, #0x0                   	// #0
  422200:	bl	417590 <_obstack_memory_used@@Base+0x4c8>
  422204:	mov	x0, x28
  422208:	ldp	x19, x20, [sp, #16]
  42220c:	ldp	x21, x22, [sp, #32]
  422210:	ldp	x23, x24, [sp, #48]
  422214:	ldp	x25, x26, [sp, #64]
  422218:	ldp	x27, x28, [sp, #80]
  42221c:	ldp	x29, x30, [sp], #128
  422220:	ret
  422224:	mov	w0, #0xc                   	// #12
  422228:	str	w0, [x20]
  42222c:	mov	x0, x28
  422230:	ldp	x19, x20, [sp, #16]
  422234:	ldp	x21, x22, [sp, #32]
  422238:	ldp	x23, x24, [sp, #48]
  42223c:	ldp	x25, x26, [sp, #64]
  422240:	ldp	x27, x28, [sp, #80]
  422244:	ldp	x29, x30, [sp], #128
  422248:	ret
  42224c:	mov	x28, #0x0                   	// #0
  422250:	b	422204 <_obstack_memory_used@@Base+0xb13c>
  422254:	nop
  422258:	stp	x29, x30, [sp, #-320]!
  42225c:	mov	x29, sp
  422260:	stp	x21, x22, [sp, #32]
  422264:	mov	x21, x0
  422268:	mov	x22, x1
  42226c:	stp	x19, x20, [sp, #16]
  422270:	mov	x20, x2
  422274:	ldrb	w0, [x0, #56]
  422278:	ldp	x19, x1, [x21]
  42227c:	stp	x23, x24, [sp, #48]
  422280:	mov	x24, x3
  422284:	mov	w3, #0xffffff90            	// #-112
  422288:	and	w0, w0, w3
  42228c:	stp	xzr, x24, [x21, #16]
  422290:	str	xzr, [x21, #48]
  422294:	cmp	x1, #0xe7
  422298:	strb	w0, [x21, #56]
  42229c:	str	wzr, [sp, #124]
  4222a0:	b.ls	422ecc <_obstack_memory_used@@Base+0xbe04>  // b.plast
  4222a4:	mov	x2, #0xe8                  	// #232
  4222a8:	str	x2, [x21, #16]
  4222ac:	mov	x0, x19
  4222b0:	mov	w1, #0x0                   	// #0
  4222b4:	bl	402510 <memset@plt>
  4222b8:	mov	w0, #0xf                   	// #15
  4222bc:	str	w0, [x19, #128]
  4222c0:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  4222c4:	movk	x0, #0x555, lsl #48
  4222c8:	cmp	x20, x0
  4222cc:	b.cs	422818 <_obstack_memory_used@@Base+0xb750>  // b.hs, b.nlast
  4222d0:	stp	x25, x26, [sp, #64]
  4222d4:	add	x25, x20, #0x1
  4222d8:	str	x25, [x19, #8]
  4222dc:	lsl	x0, x25, #4
  4222e0:	bl	402440 <malloc@plt>
  4222e4:	str	x0, [x19]
  4222e8:	cbz	x20, 422eec <_obstack_memory_used@@Base+0xbe24>
  4222ec:	mov	x1, #0x1                   	// #1
  4222f0:	lsl	x1, x1, #1
  4222f4:	cmp	x20, x1
  4222f8:	b.cs	4222f0 <_obstack_memory_used@@Base+0xb228>  // b.hs, b.nlast
  4222fc:	sub	x23, x1, #0x1
  422300:	mov	x0, #0x18                  	// #24
  422304:	bl	402520 <calloc@plt>
  422308:	str	x0, [x19, #64]
  42230c:	str	x23, [x19, #136]
  422310:	bl	4026c0 <__ctype_get_mb_cur_max@plt>
  422314:	str	w0, [x19, #180]
  422318:	mov	w0, #0xe                   	// #14
  42231c:	bl	402400 <nl_langinfo@plt>
  422320:	ldrb	w1, [x0]
  422324:	and	w1, w1, #0xffffffdf
  422328:	and	w1, w1, #0xff
  42232c:	cmp	w1, #0x55
  422330:	b.ne	422390 <_obstack_memory_used@@Base+0xb2c8>  // b.any
  422334:	ldrb	w1, [x0, #1]
  422338:	and	w1, w1, #0xffffffdf
  42233c:	and	w1, w1, #0xff
  422340:	cmp	w1, #0x54
  422344:	b.ne	422390 <_obstack_memory_used@@Base+0xb2c8>  // b.any
  422348:	ldrb	w1, [x0, #2]
  42234c:	and	w1, w1, #0xffffffdf
  422350:	and	w1, w1, #0xff
  422354:	cmp	w1, #0x46
  422358:	b.ne	422390 <_obstack_memory_used@@Base+0xb2c8>  // b.any
  42235c:	ldrb	w1, [x0, #3]
  422360:	cmp	w1, #0x2d
  422364:	cset	x1, eq  // eq = none
  422368:	add	x1, x1, #0x3
  42236c:	add	x2, x0, x1
  422370:	ldrb	w0, [x0, x1]
  422374:	cmp	w0, #0x38
  422378:	b.ne	422390 <_obstack_memory_used@@Base+0xb2c8>  // b.any
  42237c:	ldrb	w0, [x2, #1]
  422380:	cbnz	w0, 422390 <_obstack_memory_used@@Base+0xb2c8>
  422384:	ldrb	w0, [x19, #176]
  422388:	orr	w0, w0, #0x4
  42238c:	strb	w0, [x19, #176]
  422390:	ldrb	w0, [x19, #176]
  422394:	ldr	w1, [x19, #180]
  422398:	and	w2, w0, #0xfffffff7
  42239c:	strb	w2, [x19, #176]
  4223a0:	cmp	w1, #0x1
  4223a4:	b.le	4223b8 <_obstack_memory_used@@Base+0xb2f0>
  4223a8:	tbz	w0, #2, 422844 <_obstack_memory_used@@Base+0xb77c>
  4223ac:	adrp	x0, 427000 <_obstack_memory_used@@Base+0xff38>
  4223b0:	add	x0, x0, #0x348
  4223b4:	str	x0, [x19, #120]
  4223b8:	ldr	x0, [x19]
  4223bc:	cbz	x0, 422814 <_obstack_memory_used@@Base+0xb74c>
  4223c0:	ldr	x0, [x19, #64]
  4223c4:	cbz	x0, 422814 <_obstack_memory_used@@Base+0xb74c>
  4223c8:	stp	xzr, xzr, [sp, #208]
  4223cc:	ands	x23, x24, #0x400000
  4223d0:	cset	w6, ne  // ne = any
  4223d4:	stp	xzr, xzr, [sp, #224]
  4223d8:	stp	xzr, xzr, [sp, #240]
  4223dc:	stp	xzr, xzr, [sp, #256]
  4223e0:	stp	xzr, xzr, [sp, #272]
  4223e4:	stp	xzr, xzr, [sp, #288]
  4223e8:	stp	xzr, xzr, [sp, #304]
  4223ec:	ldr	x4, [x21, #40]
  4223f0:	str	wzr, [sp, #124]
  4223f4:	ldrb	w1, [x19, #176]
  4223f8:	orr	x26, x4, x23
  4223fc:	ldr	w2, [x19, #180]
  422400:	cmp	x26, #0x0
  422404:	str	x22, [sp, #168]
  422408:	ubfx	x5, x1, #2, #1
  42240c:	cset	w3, ne  // ne = any
  422410:	ubfx	x1, x1, #3, #1
  422414:	stp	xzr, xzr, [sp, #176]
  422418:	stp	xzr, xzr, [sp, #192]
  42241c:	stp	x20, x20, [sp, #248]
  422420:	stp	x20, x20, [sp, #264]
  422424:	str	x4, [sp, #288]
  422428:	strb	w6, [sp, #304]
  42242c:	strb	w5, [sp, #305]
  422430:	strb	w1, [sp, #306]
  422434:	strb	w3, [sp, #307]
  422438:	str	w2, [sp, #312]
  42243c:	cbnz	x20, 4227f8 <_obstack_memory_used@@Base+0xb730>
  422440:	ldr	x0, [sp, #176]
  422444:	cmp	w3, #0x0
  422448:	csel	x22, x0, x22, ne  // ne = any
  42244c:	str	x22, [sp, #176]
  422450:	cmp	w2, #0x1
  422454:	cbz	x23, 422508 <_obstack_memory_used@@Base+0xb440>
  422458:	b.le	422ebc <_obstack_memory_used@@Base+0xbdf4>
  42245c:	add	x0, sp, #0xa8
  422460:	bl	417c90 <_obstack_memory_used@@Base+0xbc8>
  422464:	cbnz	w0, 4224a0 <_obstack_memory_used@@Base+0xb3d8>
  422468:	ldr	x0, [sp, #224]
  42246c:	cmp	x20, x0
  422470:	b.le	422f58 <_obstack_memory_used@@Base+0xbe90>
  422474:	ldr	x2, [sp, #216]
  422478:	ldrsw	x0, [x19, #180]
  42247c:	ldr	x1, [sp, #232]
  422480:	add	x0, x0, x2
  422484:	cmp	x1, x0
  422488:	b.gt	422f58 <_obstack_memory_used@@Base+0xbe90>
  42248c:	lsl	x1, x1, #1
  422490:	add	x0, sp, #0xa8
  422494:	bl	4176b0 <_obstack_memory_used@@Base+0x5e8>
  422498:	cbz	w0, 42245c <_obstack_memory_used@@Base+0xb394>
  42249c:	nop
  4224a0:	ldr	x20, [x21]
  4224a4:	str	w0, [sp, #124]
  4224a8:	ldr	x22, [x20, #112]
  4224ac:	cbz	x22, 4224c0 <_obstack_memory_used@@Base+0xb3f8>
  4224b0:	mov	x0, x22
  4224b4:	ldr	x22, [x22]
  4224b8:	bl	4026b0 <free@plt>
  4224bc:	cbnz	x22, 4224b0 <_obstack_memory_used@@Base+0xb3e8>
  4224c0:	ldr	x0, [x20, #32]
  4224c4:	mov	w1, #0xf                   	// #15
  4224c8:	stp	xzr, xzr, [x20, #104]
  4224cc:	str	w1, [x20, #128]
  4224d0:	bl	4026b0 <free@plt>
  4224d4:	str	xzr, [x20, #32]
  4224d8:	add	x0, sp, #0xa8
  4224dc:	bl	418a70 <_obstack_memory_used@@Base+0x19a8>
  4224e0:	mov	x0, x19
  4224e4:	bl	418ab8 <_obstack_memory_used@@Base+0x19f0>
  4224e8:	ldp	x25, x26, [sp, #64]
  4224ec:	stp	xzr, xzr, [x21]
  4224f0:	ldr	w0, [sp, #124]
  4224f4:	ldp	x19, x20, [sp, #16]
  4224f8:	ldp	x21, x22, [sp, #32]
  4224fc:	ldp	x23, x24, [sp, #48]
  422500:	ldp	x29, x30, [sp], #320
  422504:	ret
  422508:	b.gt	422d54 <_obstack_memory_used@@Base+0xbc8c>
  42250c:	ldr	x1, [sp, #232]
  422510:	cbz	x26, 4229a0 <_obstack_memory_used@@Base+0xb8d8>
  422514:	ldr	x2, [sp, #256]
  422518:	ldr	x0, [sp, #216]
  42251c:	cmp	x2, x1
  422520:	csel	x2, x2, x1, le
  422524:	cmp	x2, x0
  422528:	b.gt	422534 <_obstack_memory_used@@Base+0xb46c>
  42252c:	b	423030 <_obstack_memory_used@@Base+0xbf68>
  422530:	ldr	x22, [sp, #176]
  422534:	ldr	x1, [sp, #168]
  422538:	ldr	x4, [sp, #208]
  42253c:	add	x1, x1, x0
  422540:	ldr	x3, [sp, #288]
  422544:	ldrb	w1, [x1, x4]
  422548:	ldrb	w1, [x3, x1]
  42254c:	strb	w1, [x22, x0]
  422550:	add	x0, x0, #0x1
  422554:	cmp	x2, x0
  422558:	b.ne	422530 <_obstack_memory_used@@Base+0xb468>  // b.any
  42255c:	str	wzr, [sp, #124]
  422560:	stp	x2, x2, [sp, #216]
  422564:	orr	x2, x24, #0x800000
  422568:	ldr	x20, [x21]
  42256c:	str	xzr, [x21, #48]
  422570:	add	x1, sp, #0xa8
  422574:	add	x0, sp, #0x80
  422578:	str	x24, [x20, #216]
  42257c:	bl	4204c8 <_obstack_memory_used@@Base+0x9400>
  422580:	ldr	x6, [sp, #240]
  422584:	mov	x3, x24
  422588:	mov	x1, x21
  42258c:	add	x2, sp, #0x80
  422590:	add	x5, sp, #0x7c
  422594:	mov	x4, #0x0                   	// #0
  422598:	add	x6, x6, w0, sxtw
  42259c:	add	x0, sp, #0xa8
  4225a0:	str	x6, [sp, #240]
  4225a4:	bl	4220c0 <_obstack_memory_used@@Base+0xaff8>
  4225a8:	mov	x24, x0
  4225ac:	ldr	w1, [sp, #124]
  4225b0:	cbnz	w1, 422f0c <_obstack_memory_used@@Base+0xbe44>
  4225b4:	add	x26, x20, #0x70
  4225b8:	mov	w5, #0x2                   	// #2
  4225bc:	add	x20, x20, #0x80
  4225c0:	add	x22, sp, #0x90
  4225c4:	mov	x1, x20
  4225c8:	stp	xzr, xzr, [sp, #144]
  4225cc:	mov	x0, x26
  4225d0:	mov	x4, x22
  4225d4:	mov	x3, #0x0                   	// #0
  4225d8:	mov	x2, #0x0                   	// #0
  4225dc:	strb	w5, [sp, #152]
  4225e0:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  4225e4:	mov	x25, x0
  4225e8:	mov	x1, x0
  4225ec:	cbz	x24, 42261c <_obstack_memory_used@@Base+0xb554>
  4225f0:	mov	w5, #0x10                  	// #16
  4225f4:	stp	xzr, xzr, [sp, #144]
  4225f8:	mov	x1, x20
  4225fc:	mov	x3, x25
  422600:	mov	x2, x24
  422604:	mov	x0, x26
  422608:	mov	x4, x22
  42260c:	strb	w5, [sp, #152]
  422610:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  422614:	mov	x1, x25
  422618:	mov	x25, x0
  42261c:	cmp	x1, #0x0
  422620:	cset	w0, eq  // eq = none
  422624:	cmp	x25, #0x0
  422628:	csinc	w0, w0, wzr, ne  // ne = any
  42262c:	ldr	x20, [x21]
  422630:	cbnz	w0, 422f48 <_obstack_memory_used@@Base+0xbe80>
  422634:	ldr	x24, [x20, #8]
  422638:	str	x25, [x19, #104]
  42263c:	lsl	x26, x24, #3
  422640:	add	x24, x24, x24, lsl #1
  422644:	mov	x0, x26
  422648:	bl	402440 <malloc@plt>
  42264c:	mov	x25, x0
  422650:	str	x25, [x20, #24]
  422654:	mov	x0, x26
  422658:	lsl	x24, x24, #3
  42265c:	bl	402440 <malloc@plt>
  422660:	mov	x26, x0
  422664:	str	x26, [x20, #32]
  422668:	mov	x0, x24
  42266c:	bl	402440 <malloc@plt>
  422670:	mov	x1, x0
  422674:	str	x1, [x20, #40]
  422678:	mov	x0, x24
  42267c:	mov	x24, x1
  422680:	bl	402440 <malloc@plt>
  422684:	str	x0, [x20, #48]
  422688:	cbz	x25, 422d48 <_obstack_memory_used@@Base+0xbc80>
  42268c:	cbz	x26, 422d48 <_obstack_memory_used@@Base+0xbc80>
  422690:	cbz	x24, 422d48 <_obstack_memory_used@@Base+0xbc80>
  422694:	cbz	x0, 422d48 <_obstack_memory_used@@Base+0xbc80>
  422698:	ldr	x24, [x21, #48]
  42269c:	lsl	x0, x24, #3
  4226a0:	bl	402440 <malloc@plt>
  4226a4:	str	x0, [x20, #224]
  4226a8:	cbz	x0, 422708 <_obstack_memory_used@@Base+0xb640>
  4226ac:	mov	x1, #0x0                   	// #0
  4226b0:	cbz	x24, 4226c8 <_obstack_memory_used@@Base+0xb600>
  4226b4:	nop
  4226b8:	str	x1, [x0, x1, lsl #3]
  4226bc:	add	x1, x1, #0x1
  4226c0:	cmp	x1, x24
  4226c4:	b.ne	4226b8 <_obstack_memory_used@@Base+0xb5f0>  // b.any
  4226c8:	ldr	x0, [x20, #104]
  4226cc:	mov	x2, x20
  4226d0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0xf38>
  4226d4:	add	x1, x1, #0xef8
  4226d8:	bl	417610 <_obstack_memory_used@@Base+0x548>
  4226dc:	ldr	x3, [x21, #48]
  4226e0:	cbz	x3, 422ef8 <_obstack_memory_used@@Base+0xbe30>
  4226e4:	mov	x1, #0x0                   	// #0
  4226e8:	ldr	x0, [x20, #224]
  4226ec:	b	4226fc <_obstack_memory_used@@Base+0xb634>
  4226f0:	add	x1, x1, #0x1
  4226f4:	cmp	x1, x3
  4226f8:	b.eq	422f00 <_obstack_memory_used@@Base+0xbe38>  // b.none
  4226fc:	ldr	x2, [x0, x1, lsl #3]
  422700:	cmp	x1, x2
  422704:	b.eq	4226f0 <_obstack_memory_used@@Base+0xb628>  // b.none
  422708:	ldr	x0, [x20, #104]
  42270c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1f38>
  422710:	mov	x2, x21
  422714:	add	x1, x1, #0x5a8
  422718:	bl	417590 <_obstack_memory_used@@Base+0x4c8>
  42271c:	cbnz	w0, 4224a0 <_obstack_memory_used@@Base+0xb3d8>
  422720:	ldr	x0, [x20, #104]
  422724:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3f38>
  422728:	mov	x2, x20
  42272c:	add	x1, x1, #0x3b8
  422730:	bl	417590 <_obstack_memory_used@@Base+0x4c8>
  422734:	cbnz	w0, 4224a0 <_obstack_memory_used@@Base+0xb3d8>
  422738:	ldr	x0, [x20, #104]
  42273c:	mov	x2, x20
  422740:	adrp	x1, 418000 <_obstack_memory_used@@Base+0xf38>
  422744:	add	x1, x1, #0xfa0
  422748:	stp	x27, x28, [sp, #80]
  42274c:	mov	x24, #0x1                   	// #1
  422750:	bl	417610 <_obstack_memory_used@@Base+0x548>
  422754:	ldr	x26, [x20, #104]
  422758:	mov	x25, #0x2                   	// #2
  42275c:	ldrb	w0, [x26, #48]
  422760:	ldr	x1, [x26, #56]
  422764:	cmp	w0, #0xb
  422768:	b.hi	4227e0 <_obstack_memory_used@@Base+0xb718>  // b.pmore
  42276c:	nop
  422770:	cmp	w0, #0x9
  422774:	b.hi	422a24 <_obstack_memory_used@@Base+0xb95c>  // b.pmore
  422778:	cmp	w0, #0x4
  42277c:	b.eq	4229f4 <_obstack_memory_used@@Base+0xb92c>  // b.none
  422780:	b.ls	4229ac <_obstack_memory_used@@Base+0xb8e4>  // b.plast
  422784:	sub	w0, w0, #0x8
  422788:	and	w0, w0, #0xff
  42278c:	cmp	w0, #0x1
  422790:	b.hi	4229b4 <_obstack_memory_used@@Base+0xb8ec>  // b.pmore
  422794:	ldr	x3, [x26, #32]
  422798:	add	x1, x1, x1, lsl #1
  42279c:	ldr	x2, [x20, #40]
  4227a0:	mov	x0, #0x8                   	// #8
  4227a4:	ldr	x27, [x3, #56]
  4227a8:	add	x28, x2, x1, lsl #3
  4227ac:	str	x24, [x2, x1, lsl #3]
  4227b0:	str	x24, [x28, #8]
  4227b4:	bl	402440 <malloc@plt>
  4227b8:	str	x0, [x28, #16]
  4227bc:	cbz	x0, 422fec <_obstack_memory_used@@Base+0xbf24>
  4227c0:	str	x27, [x0]
  4227c4:	ldr	x28, [x26, #8]
  4227c8:	cbz	x28, 4228f0 <_obstack_memory_used@@Base+0xb828>
  4227cc:	mov	x26, x28
  4227d0:	ldrb	w0, [x26, #48]
  4227d4:	ldr	x1, [x26, #56]
  4227d8:	cmp	w0, #0xb
  4227dc:	b.ls	422770 <_obstack_memory_used@@Base+0xb6a8>  // b.plast
  4227e0:	cmp	w0, #0xc
  4227e4:	b.eq	422794 <_obstack_memory_used@@Base+0xb6cc>  // b.none
  4227e8:	cmp	w0, #0x10
  4227ec:	b.ne	4229b4 <_obstack_memory_used@@Base+0xb8ec>  // b.any
  4227f0:	ldr	x28, [x26, #8]
  4227f4:	b	4227c8 <_obstack_memory_used@@Base+0xb700>
  4227f8:	mov	x1, x25
  4227fc:	add	x0, sp, #0xa8
  422800:	bl	4176b0 <_obstack_memory_used@@Base+0x5e8>
  422804:	cbnz	w0, 4224a0 <_obstack_memory_used@@Base+0xb3d8>
  422808:	ldrb	w3, [sp, #307]
  42280c:	ldr	w2, [x19, #180]
  422810:	b	422440 <_obstack_memory_used@@Base+0xb378>
  422814:	ldp	x25, x26, [sp, #64]
  422818:	mov	w1, #0xc                   	// #12
  42281c:	mov	x0, x19
  422820:	str	w1, [sp, #124]
  422824:	bl	418ab8 <_obstack_memory_used@@Base+0x19f0>
  422828:	stp	xzr, xzr, [x21]
  42282c:	ldr	w0, [sp, #124]
  422830:	ldp	x19, x20, [sp, #16]
  422834:	ldp	x21, x22, [sp, #32]
  422838:	ldp	x23, x24, [sp, #48]
  42283c:	ldp	x29, x30, [sp], #320
  422840:	ret
  422844:	mov	x1, #0x1                   	// #1
  422848:	mov	x0, #0x20                  	// #32
  42284c:	bl	402520 <calloc@plt>
  422850:	str	x0, [x19, #120]
  422854:	cbz	x0, 422814 <_obstack_memory_used@@Base+0xb74c>
  422858:	mov	x26, #0x1                   	// #1
  42285c:	stp	x27, x28, [sp, #80]
  422860:	mov	x27, #0x0                   	// #0
  422864:	lsl	w23, w27, #3
  422868:	mov	w28, #0x0                   	// #0
  42286c:	b	422890 <_obstack_memory_used@@Base+0xb7c8>
  422870:	cbnz	w3, 422880 <_obstack_memory_used@@Base+0xb7b8>
  422874:	ldrb	w0, [x19, #176]
  422878:	orr	w0, w0, #0x8
  42287c:	strb	w0, [x19, #176]
  422880:	add	w28, w28, #0x1
  422884:	add	w23, w23, #0x1
  422888:	cmp	w28, #0x40
  42288c:	b.eq	4228d8 <_obstack_memory_used@@Base+0xb810>  // b.none
  422890:	mov	w0, w23
  422894:	bl	4025e0 <btowc@plt>
  422898:	and	w3, w23, #0xffffff80
  42289c:	cmn	w0, #0x1
  4228a0:	b.eq	422870 <_obstack_memory_used@@Base+0xb7a8>  // b.none
  4228a4:	ldr	x4, [x19, #120]
  4228a8:	lsl	x1, x26, x28
  4228ac:	ldr	x2, [x4, x27]
  4228b0:	orr	x1, x2, x1
  4228b4:	str	x1, [x4, x27]
  4228b8:	cbnz	w3, 422880 <_obstack_memory_used@@Base+0xb7b8>
  4228bc:	cmp	w0, w23
  4228c0:	b.ne	422874 <_obstack_memory_used@@Base+0xb7ac>  // b.any
  4228c4:	add	w28, w28, #0x1
  4228c8:	add	w23, w23, #0x1
  4228cc:	cmp	w28, #0x40
  4228d0:	b.ne	422890 <_obstack_memory_used@@Base+0xb7c8>  // b.any
  4228d4:	nop
  4228d8:	add	x27, x27, #0x8
  4228dc:	cmp	x27, #0x20
  4228e0:	b.ne	422864 <_obstack_memory_used@@Base+0xb79c>  // b.any
  4228e4:	ldp	x27, x28, [sp, #80]
  4228e8:	b	4223b8 <_obstack_memory_used@@Base+0xb2f0>
  4228ec:	mov	x26, x0
  4228f0:	ldr	x0, [x26, #16]
  4228f4:	cmp	x0, #0x0
  4228f8:	cset	w27, eq  // eq = none
  4228fc:	cmp	x0, x28
  422900:	csinc	w27, w27, wzr, ne  // ne = any
  422904:	cbz	w27, 422e7c <_obstack_memory_used@@Base+0xbdb4>
  422908:	ldr	x0, [x26]
  42290c:	mov	x28, x26
  422910:	cbnz	x0, 4228ec <_obstack_memory_used@@Base+0xb824>
  422914:	ldr	x0, [x20, #16]
  422918:	mov	w26, #0x0                   	// #0
  42291c:	mov	x24, #0x0                   	// #0
  422920:	cmp	x0, x24
  422924:	b.eq	42294c <_obstack_memory_used@@Base+0xb884>  // b.none
  422928:	add	x25, x24, x24, lsl #1
  42292c:	lsl	x25, x25, #3
  422930:	ldr	x1, [x20, #48]
  422934:	add	x1, x1, x25
  422938:	ldr	x1, [x1, #8]
  42293c:	cbz	x1, 42296c <_obstack_memory_used@@Base+0xb8a4>
  422940:	add	x24, x24, #0x1
  422944:	cmp	x0, x24
  422948:	b.ne	422928 <_obstack_memory_used@@Base+0xb860>  // b.any
  42294c:	cbz	w26, 422a94 <_obstack_memory_used@@Base+0xb9cc>
  422950:	ldr	x1, [x20, #48]
  422954:	mov	x25, #0x0                   	// #0
  422958:	mov	w26, #0x0                   	// #0
  42295c:	mov	x24, #0x0                   	// #0
  422960:	add	x1, x1, x25
  422964:	ldr	x1, [x1, #8]
  422968:	cbnz	x1, 422940 <_obstack_memory_used@@Base+0xb878>
  42296c:	mov	x2, x24
  422970:	mov	x1, x20
  422974:	mov	x0, x22
  422978:	mov	w3, #0x1                   	// #1
  42297c:	bl	4197d8 <_obstack_memory_used@@Base+0x2710>
  422980:	cbnz	w0, 422d40 <_obstack_memory_used@@Base+0xbc78>
  422984:	ldr	x0, [x20, #48]
  422988:	add	x24, x24, #0x1
  42298c:	add	x25, x0, x25
  422990:	ldr	x0, [x25, #8]
  422994:	cbz	x0, 4229d0 <_obstack_memory_used@@Base+0xb908>
  422998:	ldr	x0, [x20, #16]
  42299c:	b	422920 <_obstack_memory_used@@Base+0xb858>
  4229a0:	str	wzr, [sp, #124]
  4229a4:	stp	x1, x1, [sp, #216]
  4229a8:	b	422564 <_obstack_memory_used@@Base+0xb49c>
  4229ac:	cmp	w0, #0x2
  4229b0:	b.eq	4227c4 <_obstack_memory_used@@Base+0xb6fc>  // b.none
  4229b4:	ldr	x2, [x26, #32]
  4229b8:	ldr	x0, [x20, #24]
  4229bc:	ldr	x28, [x26, #8]
  4229c0:	ldr	x2, [x2, #56]
  4229c4:	str	x2, [x0, x1, lsl #3]
  4229c8:	cbnz	x28, 4227cc <_obstack_memory_used@@Base+0xb704>
  4229cc:	b	4228f0 <_obstack_memory_used@@Base+0xb828>
  4229d0:	ldr	x0, [sp, #160]
  4229d4:	bl	4026b0 <free@plt>
  4229d8:	ldr	x0, [x20, #16]
  4229dc:	cmp	x0, x24
  4229e0:	b.eq	422d30 <_obstack_memory_used@@Base+0xbc68>  // b.none
  4229e4:	add	x25, x24, x24, lsl #1
  4229e8:	mov	w26, w27
  4229ec:	lsl	x25, x25, #3
  4229f0:	b	422930 <_obstack_memory_used@@Base+0xb868>
  4229f4:	ldr	x2, [x26, #32]
  4229f8:	ldr	x0, [x20, #24]
  4229fc:	ldr	x27, [x2, #56]
  422a00:	str	x27, [x0, x1, lsl #3]
  422a04:	ldrb	w0, [x26, #48]
  422a08:	cmp	w0, #0x4
  422a0c:	b.ne	4227c4 <_obstack_memory_used@@Base+0xb6fc>  // b.any
  422a10:	ldr	x2, [x20, #40]
  422a14:	add	x1, x1, x1, lsl #1
  422a18:	mov	x0, #0x8                   	// #8
  422a1c:	add	x28, x2, x1, lsl #3
  422a20:	b	4227ac <_obstack_memory_used@@Base+0xb6e4>
  422a24:	ldrb	w0, [x20, #176]
  422a28:	orr	w0, w0, #0x1
  422a2c:	strb	w0, [x20, #176]
  422a30:	ldr	x28, [x26, #8]
  422a34:	cbz	x28, 422ea4 <_obstack_memory_used@@Base+0xbddc>
  422a38:	ldr	x0, [x28, #24]
  422a3c:	ldr	x3, [x0, #56]
  422a40:	ldr	x0, [x26, #16]
  422a44:	cbz	x0, 422e98 <_obstack_memory_used@@Base+0xbdd0>
  422a48:	ldr	x0, [x0, #24]
  422a4c:	ldr	x4, [x0, #56]
  422a50:	add	x1, x1, x1, lsl #1
  422a54:	ldr	x2, [x20, #40]
  422a58:	mov	x0, #0x10                  	// #16
  422a5c:	stp	x3, x4, [sp, #96]
  422a60:	add	x27, x2, x1, lsl #3
  422a64:	str	x25, [x2, x1, lsl #3]
  422a68:	bl	402440 <malloc@plt>
  422a6c:	str	x0, [x27, #16]
  422a70:	ldp	x3, x4, [sp, #96]
  422a74:	cbz	x0, 422b60 <_obstack_memory_used@@Base+0xba98>
  422a78:	cmp	x3, x4
  422a7c:	b.eq	422e88 <_obstack_memory_used@@Base+0xbdc0>  // b.none
  422a80:	str	x25, [x27, #8]
  422a84:	b.ge	422eb0 <_obstack_memory_used@@Base+0xbde8>  // b.tcont
  422a88:	stp	x3, x4, [x0]
  422a8c:	cbnz	x28, 4227cc <_obstack_memory_used@@Base+0xb704>
  422a90:	b	4228f0 <_obstack_memory_used@@Base+0xb828>
  422a94:	ldrb	w0, [x21, #56]
  422a98:	tbnz	w0, #4, 422ab0 <_obstack_memory_used@@Base+0xb9e8>
  422a9c:	ldr	x0, [x21, #48]
  422aa0:	cbz	x0, 422ab0 <_obstack_memory_used@@Base+0xb9e8>
  422aa4:	ldrb	w0, [x20, #176]
  422aa8:	tbnz	w0, #0, 422ab8 <_obstack_memory_used@@Base+0xb9f0>
  422aac:	nop
  422ab0:	ldr	x0, [x20, #152]
  422ab4:	cbz	x0, 422b80 <_obstack_memory_used@@Base+0xbab8>
  422ab8:	add	x0, x24, x24, lsl #1
  422abc:	lsl	x0, x0, #3
  422ac0:	bl	402440 <malloc@plt>
  422ac4:	str	x0, [x20, #56]
  422ac8:	cbz	x0, 423038 <_obstack_memory_used@@Base+0xbf70>
  422acc:	mov	x2, #0x0                   	// #0
  422ad0:	mov	x1, #0x0                   	// #0
  422ad4:	cbnz	x24, 422ae0 <_obstack_memory_used@@Base+0xba18>
  422ad8:	b	422b80 <_obstack_memory_used@@Base+0xbab8>
  422adc:	ldr	x0, [x20, #56]
  422ae0:	add	x0, x0, x2
  422ae4:	add	x1, x1, #0x1
  422ae8:	add	x2, x2, #0x18
  422aec:	stp	xzr, xzr, [x0]
  422af0:	str	xzr, [x0, #16]
  422af4:	ldr	x0, [x20, #16]
  422af8:	cmp	x0, x1
  422afc:	b.hi	422adc <_obstack_memory_used@@Base+0xba14>  // b.pmore
  422b00:	cbz	x0, 422b80 <_obstack_memory_used@@Base+0xbab8>
  422b04:	ldr	x2, [x20, #48]
  422b08:	mov	x24, #0x0                   	// #0
  422b0c:	mov	x27, #0x0                   	// #0
  422b10:	add	x1, x2, x24
  422b14:	mov	x25, #0x0                   	// #0
  422b18:	ldp	x3, x28, [x1, #8]
  422b1c:	cmp	x3, #0x0
  422b20:	b.gt	422b40 <_obstack_memory_used@@Base+0xba78>
  422b24:	b	422b70 <_obstack_memory_used@@Base+0xbaa8>
  422b28:	ldr	x2, [x20, #48]
  422b2c:	add	x25, x25, #0x1
  422b30:	add	x0, x2, x24
  422b34:	ldr	x0, [x0, #8]
  422b38:	cmp	x25, x0
  422b3c:	b.ge	422b6c <_obstack_memory_used@@Base+0xbaa4>  // b.tcont
  422b40:	ldr	x2, [x28, x25, lsl #3]
  422b44:	mov	x1, x27
  422b48:	ldr	x0, [x20, #56]
  422b4c:	add	x2, x2, x2, lsl #1
  422b50:	add	x0, x0, x2, lsl #3
  422b54:	bl	417750 <_obstack_memory_used@@Base+0x688>
  422b58:	tst	w0, #0xff
  422b5c:	b.ne	422b28 <_obstack_memory_used@@Base+0xba60>  // b.any
  422b60:	mov	w0, #0xc                   	// #12
  422b64:	ldp	x27, x28, [sp, #80]
  422b68:	b	4224a0 <_obstack_memory_used@@Base+0xb3d8>
  422b6c:	ldr	x0, [x20, #16]
  422b70:	add	x27, x27, #0x1
  422b74:	add	x24, x24, #0x18
  422b78:	cmp	x0, x27
  422b7c:	b.hi	422b10 <_obstack_memory_used@@Base+0xba48>  // b.pmore
  422b80:	ldrb	w0, [x19, #176]
  422b84:	cmp	x23, #0x0
  422b88:	str	wzr, [sp, #124]
  422b8c:	cset	w1, eq  // eq = none
  422b90:	ands	w1, w1, w0, lsr #2
  422b94:	b.ne	422d64 <_obstack_memory_used@@Base+0xbc9c>  // b.any
  422b98:	ldr	x2, [x19, #104]
  422b9c:	mov	x0, x22
  422ba0:	ldr	x1, [x19, #48]
  422ba4:	ldr	x2, [x2, #24]
  422ba8:	ldr	x2, [x2, #56]
  422bac:	str	x2, [x19, #144]
  422bb0:	add	x2, x2, x2, lsl #1
  422bb4:	add	x1, x1, x2, lsl #3
  422bb8:	bl	419bb0 <_obstack_memory_used@@Base+0x2ae8>
  422bbc:	str	w0, [sp, #128]
  422bc0:	mov	w20, w0
  422bc4:	cbnz	w0, 422c44 <_obstack_memory_used@@Base+0xbb7c>
  422bc8:	ldr	x0, [x19, #152]
  422bcc:	cmp	x0, #0x0
  422bd0:	b.le	422c10 <_obstack_memory_used@@Base+0xbb48>
  422bd4:	ldr	x7, [sp, #152]
  422bd8:	cmp	x7, #0x0
  422bdc:	b.le	422c10 <_obstack_memory_used@@Base+0xbb48>
  422be0:	add	x23, x22, #0x10
  422be4:	mov	x6, #0x0                   	// #0
  422be8:	ldr	x4, [sp, #160]
  422bec:	ldr	x3, [x19]
  422bf0:	ldr	x1, [x4, x6, lsl #3]
  422bf4:	add	x5, x3, x1, lsl #4
  422bf8:	ldrb	w0, [x5, #8]
  422bfc:	cmp	w0, #0x4
  422c00:	b.eq	422cac <_obstack_memory_used@@Base+0xbbe4>  // b.none
  422c04:	add	x6, x6, #0x1
  422c08:	cmp	x7, x6
  422c0c:	b.gt	422be8 <_obstack_memory_used@@Base+0xbb20>
  422c10:	mov	x2, x22
  422c14:	mov	x1, x19
  422c18:	add	x0, sp, #0x80
  422c1c:	mov	w3, #0x0                   	// #0
  422c20:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  422c24:	str	x0, [x19, #72]
  422c28:	cbz	x0, 422e74 <_obstack_memory_used@@Base+0xbdac>
  422c2c:	ldrsb	w1, [x0, #104]
  422c30:	tbnz	w1, #31, 422e14 <_obstack_memory_used@@Base+0xbd4c>
  422c34:	stp	x0, x0, [x19, #80]
  422c38:	str	x0, [x19, #96]
  422c3c:	ldr	x0, [sp, #160]
  422c40:	bl	4026b0 <free@plt>
  422c44:	ldr	x22, [x21]
  422c48:	str	w20, [sp, #124]
  422c4c:	ldr	x20, [x22, #112]
  422c50:	cbz	x20, 422c68 <_obstack_memory_used@@Base+0xbba0>
  422c54:	nop
  422c58:	mov	x0, x20
  422c5c:	ldr	x20, [x20]
  422c60:	bl	4026b0 <free@plt>
  422c64:	cbnz	x20, 422c58 <_obstack_memory_used@@Base+0xbb90>
  422c68:	ldr	x0, [x22, #32]
  422c6c:	mov	w1, #0xf                   	// #15
  422c70:	stp	xzr, xzr, [x22, #104]
  422c74:	str	w1, [x22, #128]
  422c78:	bl	4026b0 <free@plt>
  422c7c:	str	xzr, [x22, #32]
  422c80:	add	x0, sp, #0xa8
  422c84:	bl	418a70 <_obstack_memory_used@@Base+0x19a8>
  422c88:	ldr	w0, [sp, #124]
  422c8c:	cbnz	w0, 422f60 <_obstack_memory_used@@Base+0xbe98>
  422c90:	ldp	x19, x20, [sp, #16]
  422c94:	ldp	x21, x22, [sp, #32]
  422c98:	ldp	x23, x24, [sp, #48]
  422c9c:	ldp	x25, x26, [sp, #64]
  422ca0:	ldp	x27, x28, [sp, #80]
  422ca4:	ldp	x29, x30, [sp], #320
  422ca8:	ret
  422cac:	mov	x2, #0x0                   	// #0
  422cb0:	b	422cc0 <_obstack_memory_used@@Base+0xbbf8>
  422cb4:	add	x2, x2, #0x1
  422cb8:	cmp	x2, x7
  422cbc:	b.eq	422c04 <_obstack_memory_used@@Base+0xbb3c>  // b.none
  422cc0:	ldr	x0, [x4, x2, lsl #3]
  422cc4:	lsl	x0, x0, #4
  422cc8:	add	x8, x3, x0
  422ccc:	ldrb	w8, [x8, #8]
  422cd0:	cmp	w8, #0x9
  422cd4:	b.ne	422cb4 <_obstack_memory_used@@Base+0xbbec>  // b.any
  422cd8:	ldr	x8, [x3, x0]
  422cdc:	ldr	x0, [x5]
  422ce0:	cmp	x8, x0
  422ce4:	b.ne	422cb4 <_obstack_memory_used@@Base+0xbbec>  // b.any
  422ce8:	ldr	x3, [x19, #40]
  422cec:	add	x2, x1, x1, lsl #1
  422cf0:	mov	x0, x7
  422cf4:	mov	x1, x23
  422cf8:	add	x2, x3, x2, lsl #3
  422cfc:	ldr	x2, [x2, #16]
  422d00:	ldr	x2, [x2]
  422d04:	bl	418d40 <_obstack_memory_used@@Base+0x1c78>
  422d08:	cbnz	x0, 422c04 <_obstack_memory_used@@Base+0xbb3c>
  422d0c:	ldr	x1, [x19, #48]
  422d10:	add	x2, x2, x2, lsl #1
  422d14:	mov	x0, x22
  422d18:	add	x1, x1, x2, lsl #3
  422d1c:	bl	419630 <_obstack_memory_used@@Base+0x2568>
  422d20:	cbnz	w0, 422ffc <_obstack_memory_used@@Base+0xbf34>
  422d24:	mov	x6, #0x1                   	// #1
  422d28:	ldr	x7, [sp, #152]
  422d2c:	b	422c08 <_obstack_memory_used@@Base+0xbb40>
  422d30:	mov	w26, #0x0                   	// #0
  422d34:	mov	x24, #0x0                   	// #0
  422d38:	mov	x25, #0x0                   	// #0
  422d3c:	b	422930 <_obstack_memory_used@@Base+0xb868>
  422d40:	ldp	x27, x28, [sp, #80]
  422d44:	b	4224a0 <_obstack_memory_used@@Base+0xb3d8>
  422d48:	mov	w0, #0xc                   	// #12
  422d4c:	str	w0, [sp, #124]
  422d50:	b	4224a8 <_obstack_memory_used@@Base+0xb3e0>
  422d54:	add	x0, sp, #0xa8
  422d58:	bl	417ab0 <_obstack_memory_used@@Base+0x9e8>
  422d5c:	str	wzr, [sp, #124]
  422d60:	b	422564 <_obstack_memory_used@@Base+0xb49c>
  422d64:	ldr	x0, [x21, #40]
  422d68:	cbnz	x0, 422b98 <_obstack_memory_used@@Base+0xbad0>
  422d6c:	ldr	x6, [x19, #16]
  422d70:	cbz	x6, 423058 <_obstack_memory_used@@Base+0xbf90>
  422d74:	ldr	x7, [x19]
  422d78:	mov	w2, #0x10001               	// #65537
  422d7c:	mov	w8, #0x0                   	// #0
  422d80:	mov	x5, #0x0                   	// #0
  422d84:	mov	x4, x7
  422d88:	mov	x3, #0x1                   	// #1
  422d8c:	movk	x2, #0x1, lsl #48
  422d90:	ldrb	w0, [x4, #8]
  422d94:	cmp	w0, #0x5
  422d98:	b.eq	423010 <_obstack_memory_used@@Base+0xbf48>  // b.none
  422d9c:	b.hi	422f94 <_obstack_memory_used@@Base+0xbecc>  // b.pmore
  422da0:	cmp	w0, #0x3
  422da4:	b.eq	423018 <_obstack_memory_used@@Base+0xbf50>  // b.none
  422da8:	cmp	w0, #0x4
  422dac:	b.ne	422f7c <_obstack_memory_used@@Base+0xbeb4>  // b.any
  422db0:	add	x5, x5, #0x1
  422db4:	add	x4, x4, #0x10
  422db8:	cmp	x5, x6
  422dbc:	b.ne	422d90 <_obstack_memory_used@@Base+0xbcc8>  // b.any
  422dc0:	orr	w26, w26, w8
  422dc4:	add	x5, x7, x5, lsl #4
  422dc8:	tst	w26, #0xff
  422dcc:	mov	w1, #0x7                   	// #7
  422dd0:	b.ne	422df0 <_obstack_memory_used@@Base+0xbd28>  // b.any
  422dd4:	b	423058 <_obstack_memory_used@@Base+0xbf90>
  422dd8:	cmp	w0, #0x5
  422ddc:	b.ne	422de4 <_obstack_memory_used@@Base+0xbd1c>  // b.any
  422de0:	strb	w1, [x7, #8]
  422de4:	add	x7, x7, #0x10
  422de8:	cmp	x5, x7
  422dec:	b.eq	42305c <_obstack_memory_used@@Base+0xbf94>  // b.none
  422df0:	ldrb	w0, [x7, #8]
  422df4:	cmp	w0, #0x1
  422df8:	b.ne	422dd8 <_obstack_memory_used@@Base+0xbd10>  // b.any
  422dfc:	ldrsb	w0, [x7]
  422e00:	tbz	w0, #31, 422de4 <_obstack_memory_used@@Base+0xbd1c>
  422e04:	ldrb	w0, [x7, #10]
  422e08:	and	w0, w0, #0xffffffdf
  422e0c:	strb	w0, [x7, #10]
  422e10:	b	422de4 <_obstack_memory_used@@Base+0xbd1c>
  422e14:	mov	x2, x22
  422e18:	mov	x1, x19
  422e1c:	mov	w3, #0x1                   	// #1
  422e20:	add	x0, sp, #0x80
  422e24:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  422e28:	str	x0, [x19, #80]
  422e2c:	mov	x2, x22
  422e30:	mov	x1, x19
  422e34:	mov	w3, #0x2                   	// #2
  422e38:	add	x0, sp, #0x80
  422e3c:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  422e40:	str	x0, [x19, #88]
  422e44:	mov	x1, x19
  422e48:	mov	x2, x22
  422e4c:	add	x0, sp, #0x80
  422e50:	mov	w3, #0x6                   	// #6
  422e54:	bl	419db0 <_obstack_memory_used@@Base+0x2ce8>
  422e58:	str	x0, [x19, #96]
  422e5c:	ldr	x1, [x19, #80]
  422e60:	cbz	x1, 422e74 <_obstack_memory_used@@Base+0xbdac>
  422e64:	ldr	x1, [x19, #88]
  422e68:	cmp	x1, #0x0
  422e6c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  422e70:	b.ne	422c3c <_obstack_memory_used@@Base+0xbb74>  // b.any
  422e74:	ldr	w20, [sp, #128]
  422e78:	b	422c44 <_obstack_memory_used@@Base+0xbb7c>
  422e7c:	mov	x28, x0
  422e80:	mov	x26, x28
  422e84:	b	4227d0 <_obstack_memory_used@@Base+0xb708>
  422e88:	str	x24, [x27, #8]
  422e8c:	str	x3, [x0]
  422e90:	cbnz	x28, 4227cc <_obstack_memory_used@@Base+0xb704>
  422e94:	b	4228f0 <_obstack_memory_used@@Base+0xb828>
  422e98:	ldr	x0, [x26, #32]
  422e9c:	ldr	x4, [x0, #56]
  422ea0:	b	422a50 <_obstack_memory_used@@Base+0xb988>
  422ea4:	ldr	x0, [x26, #32]
  422ea8:	ldr	x3, [x0, #56]
  422eac:	b	422a40 <_obstack_memory_used@@Base+0xb978>
  422eb0:	stp	x4, x3, [x0]
  422eb4:	cbnz	x28, 4227cc <_obstack_memory_used@@Base+0xb704>
  422eb8:	b	4228f0 <_obstack_memory_used@@Base+0xb828>
  422ebc:	add	x0, sp, #0xa8
  422ec0:	bl	417a10 <_obstack_memory_used@@Base+0x948>
  422ec4:	str	wzr, [sp, #124]
  422ec8:	b	422564 <_obstack_memory_used@@Base+0xb49c>
  422ecc:	mov	x0, x19
  422ed0:	mov	x1, #0xe8                  	// #232
  422ed4:	bl	402550 <realloc@plt>
  422ed8:	mov	x19, x0
  422edc:	cbz	x0, 423088 <_obstack_memory_used@@Base+0xbfc0>
  422ee0:	mov	x0, #0xe8                  	// #232
  422ee4:	stp	x19, x0, [x21]
  422ee8:	b	4222a4 <_obstack_memory_used@@Base+0xb1dc>
  422eec:	mov	x23, #0x0                   	// #0
  422ef0:	mov	x1, #0x1                   	// #1
  422ef4:	b	422300 <_obstack_memory_used@@Base+0xb238>
  422ef8:	ldr	x0, [x20, #224]
  422efc:	nop
  422f00:	bl	4026b0 <free@plt>
  422f04:	str	xzr, [x20, #224]
  422f08:	b	422708 <_obstack_memory_used@@Base+0xb640>
  422f0c:	cbz	x0, 42304c <_obstack_memory_used@@Base+0xbf84>
  422f10:	mov	w5, #0x2                   	// #2
  422f14:	add	x26, x20, #0x70
  422f18:	add	x22, sp, #0x90
  422f1c:	add	x20, x20, #0x80
  422f20:	stp	xzr, xzr, [sp, #144]
  422f24:	mov	x1, x20
  422f28:	mov	x0, x26
  422f2c:	mov	x4, x22
  422f30:	mov	x3, #0x0                   	// #0
  422f34:	mov	x2, #0x0                   	// #0
  422f38:	strb	w5, [sp, #152]
  422f3c:	bl	4191b8 <_obstack_memory_used@@Base+0x20f0>
  422f40:	mov	x25, x0
  422f44:	b	4225f0 <_obstack_memory_used@@Base+0xb528>
  422f48:	mov	w0, #0xc                   	// #12
  422f4c:	str	xzr, [x19, #104]
  422f50:	str	w0, [sp, #124]
  422f54:	b	4224a8 <_obstack_memory_used@@Base+0xb3e0>
  422f58:	str	wzr, [sp, #124]
  422f5c:	b	422564 <_obstack_memory_used@@Base+0xb49c>
  422f60:	mov	x0, x19
  422f64:	bl	418ab8 <_obstack_memory_used@@Base+0x19f0>
  422f68:	ldr	w0, [sp, #124]
  422f6c:	ldp	x25, x26, [sp, #64]
  422f70:	ldp	x27, x28, [sp, #80]
  422f74:	stp	xzr, xzr, [x21]
  422f78:	b	422830 <_obstack_memory_used@@Base+0xb768>
  422f7c:	cmp	w0, #0x1
  422f80:	b.ne	422fb0 <_obstack_memory_used@@Base+0xbee8>  // b.any
  422f84:	ldrsb	w0, [x4]
  422f88:	cmp	w0, #0x0
  422f8c:	csel	w26, w26, w1, ge  // ge = tcont
  422f90:	b	422db0 <_obstack_memory_used@@Base+0xbce8>
  422f94:	cmp	w0, #0xb
  422f98:	b.hi	422fbc <_obstack_memory_used@@Base+0xbef4>  // b.pmore
  422f9c:	cmp	w0, #0x7
  422fa0:	b.hi	422db0 <_obstack_memory_used@@Base+0xbce8>  // b.pmore
  422fa4:	cmp	w0, #0x6
  422fa8:	b.eq	422b98 <_obstack_memory_used@@Base+0xbad0>  // b.none
  422fac:	bl	4025f0 <abort@plt>
  422fb0:	cmp	w0, #0x2
  422fb4:	b.eq	422db0 <_obstack_memory_used@@Base+0xbce8>  // b.none
  422fb8:	bl	4025f0 <abort@plt>
  422fbc:	cmp	w0, #0xc
  422fc0:	b.ne	422fac <_obstack_memory_used@@Base+0xbee4>  // b.any
  422fc4:	ldr	w0, [x4]
  422fc8:	cmp	w0, #0x40
  422fcc:	b.hi	423004 <_obstack_memory_used@@Base+0xbf3c>  // b.pmore
  422fd0:	cmp	w0, #0xf
  422fd4:	b.ls	422b98 <_obstack_memory_used@@Base+0xbad0>  // b.plast
  422fd8:	sub	w0, w0, #0x10
  422fdc:	lsl	x0, x3, x0
  422fe0:	tst	x0, x2
  422fe4:	b.eq	422b98 <_obstack_memory_used@@Base+0xbad0>  // b.none
  422fe8:	b	422db0 <_obstack_memory_used@@Base+0xbce8>
  422fec:	mov	w0, #0xc                   	// #12
  422ff0:	stp	xzr, xzr, [x28]
  422ff4:	ldp	x27, x28, [sp, #80]
  422ff8:	b	4224a0 <_obstack_memory_used@@Base+0xb3d8>
  422ffc:	mov	w20, w0
  423000:	b	422c44 <_obstack_memory_used@@Base+0xbb7c>
  423004:	cmp	w0, #0x80
  423008:	b.eq	422db0 <_obstack_memory_used@@Base+0xbce8>  // b.none
  42300c:	b	422b98 <_obstack_memory_used@@Base+0xbad0>
  423010:	mov	w8, w1
  423014:	b	422db0 <_obstack_memory_used@@Base+0xbce8>
  423018:	ldr	x0, [x4]
  42301c:	ldr	x9, [x0, #16]
  423020:	cbnz	x9, 422b98 <_obstack_memory_used@@Base+0xbad0>
  423024:	ldr	x0, [x0, #24]
  423028:	cbz	x0, 422db0 <_obstack_memory_used@@Base+0xbce8>
  42302c:	b	422b98 <_obstack_memory_used@@Base+0xbad0>
  423030:	mov	x2, x0
  423034:	b	42255c <_obstack_memory_used@@Base+0xb494>
  423038:	mov	w0, #0xc                   	// #12
  42303c:	str	w0, [sp, #124]
  423040:	ldr	x20, [x21]
  423044:	ldp	x27, x28, [sp, #80]
  423048:	b	4224a8 <_obstack_memory_used@@Base+0xb3e0>
  42304c:	ldr	x20, [x21]
  423050:	str	xzr, [x19, #104]
  423054:	b	4224a8 <_obstack_memory_used@@Base+0xb3e0>
  423058:	mov	w8, #0x0                   	// #0
  42305c:	ldr	x2, [x19, #152]
  423060:	mov	w1, #0x1                   	// #1
  423064:	ldrb	w0, [x19, #176]
  423068:	cmp	x2, #0x0
  42306c:	str	w1, [x19, #180]
  423070:	ccmp	w8, #0x0, #0x0, le
  423074:	and	w1, w0, #0xfffffff9
  423078:	cset	w0, ne  // ne = any
  42307c:	orr	w0, w1, w0, lsl #1
  423080:	strb	w0, [x19, #176]
  423084:	b	422b98 <_obstack_memory_used@@Base+0xbad0>
  423088:	mov	w0, #0xc                   	// #12
  42308c:	b	422830 <_obstack_memory_used@@Base+0xb768>
  423090:	stp	x29, x30, [sp, #-16]!
  423094:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3b98>
  423098:	mov	x5, x2
  42309c:	mov	x29, sp
  4230a0:	ldr	x3, [x3, #3560]
  4230a4:	mov	w7, #0x6f                  	// #111
  4230a8:	ldrb	w6, [x2, #56]
  4230ac:	mov	x2, x1
  4230b0:	mov	x1, x0
  4230b4:	mov	x0, x5
  4230b8:	ubfx	w4, w3, #25, #1
  4230bc:	and	w6, w6, w7
  4230c0:	ubfiz	w4, w4, #4, #4
  4230c4:	orr	w4, w4, #0xffffff80
  4230c8:	orr	w4, w4, w6
  4230cc:	strb	w4, [x5, #56]
  4230d0:	bl	422258 <_obstack_memory_used@@Base+0xb190>
  4230d4:	cbz	w0, 423104 <_obstack_memory_used@@Base+0xc03c>
  4230d8:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  4230dc:	add	x1, x1, #0x348
  4230e0:	add	x4, x1, #0x1a0
  4230e4:	mov	w3, w0
  4230e8:	ldp	x29, x30, [sp], #16
  4230ec:	add	x1, x1, #0x20
  4230f0:	ldr	x3, [x4, w3, sxtw #3]
  4230f4:	mov	w2, #0x5                   	// #5
  4230f8:	mov	x0, #0x0                   	// #0
  4230fc:	add	x1, x1, x3
  423100:	b	4027f0 <dcgettext@plt>
  423104:	mov	x0, #0x0                   	// #0
  423108:	ldp	x29, x30, [sp], #16
  42310c:	ret
  423110:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3b98>
  423114:	mov	x2, x0
  423118:	ldr	x0, [x1, #3560]
  42311c:	str	x2, [x1, #3560]
  423120:	ret
  423124:	nop
  423128:	stp	x29, x30, [sp, #-48]!
  42312c:	mov	x2, #0x100                 	// #256
  423130:	mov	w1, #0x0                   	// #0
  423134:	mov	x29, sp
  423138:	stp	x19, x20, [sp, #16]
  42313c:	mov	x19, x0
  423140:	ldr	x20, [x0]
  423144:	str	x21, [sp, #32]
  423148:	ldr	x21, [x0, #32]
  42314c:	mov	x0, x21
  423150:	bl	402510 <memset@plt>
  423154:	ldr	x1, [x20, #72]
  423158:	mov	x0, x19
  42315c:	mov	x3, x21
  423160:	add	x2, x1, #0x18
  423164:	add	x1, x1, #0x10
  423168:	bl	41cb60 <_obstack_memory_used@@Base+0x5a98>
  42316c:	ldp	x1, x0, [x20, #72]
  423170:	cmp	x1, x0
  423174:	b.eq	423190 <_obstack_memory_used@@Base+0xc0c8>  // b.none
  423178:	add	x2, x0, #0x18
  42317c:	add	x1, x0, #0x10
  423180:	mov	x3, x21
  423184:	mov	x0, x19
  423188:	bl	41cb60 <_obstack_memory_used@@Base+0x5a98>
  42318c:	ldr	x0, [x20, #72]
  423190:	ldr	x1, [x20, #88]
  423194:	cmp	x1, x0
  423198:	b.eq	4231b4 <_obstack_memory_used@@Base+0xc0ec>  // b.none
  42319c:	add	x2, x1, #0x18
  4231a0:	mov	x0, x19
  4231a4:	mov	x3, x21
  4231a8:	add	x1, x1, #0x10
  4231ac:	bl	41cb60 <_obstack_memory_used@@Base+0x5a98>
  4231b0:	ldr	x0, [x20, #72]
  4231b4:	ldr	x1, [x20, #96]
  4231b8:	cmp	x1, x0
  4231bc:	b.eq	4231d4 <_obstack_memory_used@@Base+0xc10c>  // b.none
  4231c0:	add	x2, x1, #0x18
  4231c4:	mov	x3, x21
  4231c8:	add	x1, x1, #0x10
  4231cc:	mov	x0, x19
  4231d0:	bl	41cb60 <_obstack_memory_used@@Base+0x5a98>
  4231d4:	ldrb	w1, [x19, #56]
  4231d8:	mov	w0, #0x0                   	// #0
  4231dc:	ldr	x21, [sp, #32]
  4231e0:	orr	w1, w1, #0x8
  4231e4:	strb	w1, [x19, #56]
  4231e8:	ldp	x19, x20, [sp, #16]
  4231ec:	ldp	x29, x30, [sp], #48
  4231f0:	ret
  4231f4:	nop
  4231f8:	sub	sp, sp, #0x80
  4231fc:	cmp	x3, #0x0
  423200:	ccmp	x3, x2, #0x0, ge  // ge = tcont
  423204:	stp	x29, x30, [sp, #16]
  423208:	add	x29, sp, #0x10
  42320c:	stp	x19, x20, [sp, #32]
  423210:	stp	x23, x24, [sp, #64]
  423214:	add	x23, x3, x4
  423218:	b.gt	42344c <_obstack_memory_used@@Base+0xc384>
  42321c:	stp	x21, x22, [sp, #48]
  423220:	mov	x19, x3
  423224:	mov	x24, x2
  423228:	stp	x25, x26, [sp, #80]
  42322c:	mov	x20, x0
  423230:	mov	x21, x6
  423234:	stp	x27, x28, [sp, #96]
  423238:	and	w25, w7, #0xff
  42323c:	cmp	x23, x2
  423240:	b.gt	423434 <_obstack_memory_used@@Base+0xc36c>
  423244:	cmp	x4, #0x0
  423248:	ccmp	x3, x23, #0x4, ge  // ge = tcont
  42324c:	b.gt	423434 <_obstack_memory_used@@Base+0xc36c>
  423250:	tbnz	x23, #63, 42343c <_obstack_memory_used@@Base+0xc374>
  423254:	cmp	x4, #0x0
  423258:	ccmp	x3, x23, #0x0, lt  // lt = tstop
  42325c:	b.le	42343c <_obstack_memory_used@@Base+0xc374>
  423260:	ldrb	w0, [x20, #56]
  423264:	cmp	x23, x19
  423268:	ubfx	x27, x0, #5, #2
  42326c:	b.le	42327c <_obstack_memory_used@@Base+0xc1b4>
  423270:	ldr	x2, [x20, #32]
  423274:	cbz	x2, 42327c <_obstack_memory_used@@Base+0xc1b4>
  423278:	tbz	w0, #3, 4233ec <_obstack_memory_used@@Base+0xc324>
  42327c:	ldrb	w2, [x20, #56]
  423280:	cmp	x21, #0x0
  423284:	cset	w0, eq  // eq = none
  423288:	ubfx	x3, x2, #4, #1
  42328c:	orr	w0, w0, w3
  423290:	tbnz	w0, #0, 4233d8 <_obstack_memory_used@@Base+0xc310>
  423294:	and	w2, w2, #0x6
  423298:	cmp	w2, #0x4
  42329c:	ldr	x0, [x20, #48]
  4232a0:	b.eq	42347c <_obstack_memory_used@@Base+0xc3b4>  // b.none
  4232a4:	add	x28, x0, #0x1
  4232a8:	mov	x26, x28
  4232ac:	lsl	x0, x28, #4
  4232b0:	stp	x1, x5, [sp, #112]
  4232b4:	bl	402440 <malloc@plt>
  4232b8:	mov	x22, x0
  4232bc:	cbz	x0, 423468 <_obstack_memory_used@@Base+0xc3a0>
  4232c0:	ldp	x1, x5, [sp, #112]
  4232c4:	str	w27, [sp]
  4232c8:	mov	x7, x0
  4232cc:	mov	x6, x28
  4232d0:	mov	x4, x23
  4232d4:	mov	x3, x19
  4232d8:	mov	x2, x24
  4232dc:	mov	x0, x20
  4232e0:	bl	41ea10 <_obstack_memory_used@@Base+0x7948>
  4232e4:	cbnz	w0, 42339c <_obstack_memory_used@@Base+0xc2d4>
  4232e8:	cbz	x21, 423388 <_obstack_memory_used@@Base+0xc2c0>
  4232ec:	ldrb	w0, [x20, #56]
  4232f0:	add	x23, x26, #0x1
  4232f4:	ubfx	x0, x0, #1, #2
  4232f8:	cbz	w0, 423400 <_obstack_memory_used@@Base+0xc338>
  4232fc:	cmp	w0, #0x1
  423300:	mov	w19, #0x2                   	// #2
  423304:	b.eq	4234a8 <_obstack_memory_used@@Base+0xc3e0>  // b.none
  423308:	cmp	x26, #0x0
  42330c:	b.le	4234ec <_obstack_memory_used@@Base+0xc424>
  423310:	ldp	x4, x3, [x21, #8]
  423314:	mov	x0, x22
  423318:	mov	x1, #0x0                   	// #0
  42331c:	nop
  423320:	ldr	x2, [x0]
  423324:	str	x2, [x4, x1, lsl #3]
  423328:	add	x0, x0, #0x10
  42332c:	ldur	x2, [x0, #-8]
  423330:	str	x2, [x3, x1, lsl #3]
  423334:	add	x1, x1, #0x1
  423338:	cmp	x26, x1
  42333c:	b.ne	423320 <_obstack_memory_used@@Base+0xc258>  // b.any
  423340:	mov	x0, x1
  423344:	ldr	x2, [x21]
  423348:	cmp	x2, x0
  42334c:	b.ls	423374 <_obstack_memory_used@@Base+0xc2ac>  // b.plast
  423350:	ldp	x5, x4, [x21, #8]
  423354:	mov	x2, #0xffffffffffffffff    	// #-1
  423358:	str	x2, [x4, x0, lsl #3]
  42335c:	add	x1, x1, #0x1
  423360:	str	x2, [x5, x0, lsl #3]
  423364:	mov	x0, x1
  423368:	ldr	x3, [x21]
  42336c:	cmp	x3, x1
  423370:	b.hi	423358 <_obstack_memory_used@@Base+0xc290>  // b.pmore
  423374:	ldrb	w0, [x20, #56]
  423378:	bfi	w0, w19, #1, #2
  42337c:	strb	w0, [x20, #56]
  423380:	tst	w0, #0x6
  423384:	b.eq	4233a8 <_obstack_memory_used@@Base+0xc2e0>  // b.none
  423388:	ldr	x19, [x22]
  42338c:	cbz	w25, 4233ac <_obstack_memory_used@@Base+0xc2e4>
  423390:	ldr	x0, [x22, #8]
  423394:	sub	x19, x0, x19
  423398:	b	4233ac <_obstack_memory_used@@Base+0xc2e4>
  42339c:	cmp	w0, #0x1
  4233a0:	mov	x19, #0xffffffffffffffff    	// #-1
  4233a4:	b.eq	4233ac <_obstack_memory_used@@Base+0xc2e4>  // b.none
  4233a8:	mov	x19, #0xfffffffffffffffe    	// #-2
  4233ac:	mov	x0, x22
  4233b0:	bl	4026b0 <free@plt>
  4233b4:	ldp	x21, x22, [sp, #48]
  4233b8:	ldp	x25, x26, [sp, #80]
  4233bc:	ldp	x27, x28, [sp, #96]
  4233c0:	mov	x0, x19
  4233c4:	ldp	x29, x30, [sp, #16]
  4233c8:	ldp	x19, x20, [sp, #32]
  4233cc:	ldp	x23, x24, [sp, #64]
  4233d0:	add	sp, sp, #0x80
  4233d4:	ret
  4233d8:	mov	x28, #0x1                   	// #1
  4233dc:	mov	x0, #0x10                  	// #16
  4233e0:	mov	x26, x28
  4233e4:	mov	x21, #0x0                   	// #0
  4233e8:	b	4232b0 <_obstack_memory_used@@Base+0xc1e8>
  4233ec:	mov	x0, x20
  4233f0:	stp	x1, x5, [sp, #112]
  4233f4:	bl	423128 <_obstack_memory_used@@Base+0xc060>
  4233f8:	ldp	x1, x5, [sp, #112]
  4233fc:	b	42327c <_obstack_memory_used@@Base+0xc1b4>
  423400:	lsl	x24, x23, #3
  423404:	mov	x0, x24
  423408:	bl	402440 <malloc@plt>
  42340c:	str	x0, [x21, #8]
  423410:	mov	x19, x0
  423414:	cbz	x0, 4234f8 <_obstack_memory_used@@Base+0xc430>
  423418:	mov	x0, x24
  42341c:	bl	402440 <malloc@plt>
  423420:	str	x0, [x21, #16]
  423424:	cbz	x0, 423500 <_obstack_memory_used@@Base+0xc438>
  423428:	mov	w19, #0x1                   	// #1
  42342c:	str	x23, [x21]
  423430:	b	423308 <_obstack_memory_used@@Base+0xc240>
  423434:	mov	x23, x24
  423438:	b	423260 <_obstack_memory_used@@Base+0xc198>
  42343c:	ldrb	w27, [x20, #56]
  423440:	mov	x23, #0x0                   	// #0
  423444:	ubfx	x27, x27, #5, #2
  423448:	b	42327c <_obstack_memory_used@@Base+0xc1b4>
  42344c:	mov	x19, #0xffffffffffffffff    	// #-1
  423450:	mov	x0, x19
  423454:	ldp	x29, x30, [sp, #16]
  423458:	ldp	x19, x20, [sp, #32]
  42345c:	ldp	x23, x24, [sp, #64]
  423460:	add	sp, sp, #0x80
  423464:	ret
  423468:	mov	x19, #0xfffffffffffffffe    	// #-2
  42346c:	ldp	x21, x22, [sp, #48]
  423470:	ldp	x25, x26, [sp, #80]
  423474:	ldp	x27, x28, [sp, #96]
  423478:	b	4233c0 <_obstack_memory_used@@Base+0xc2f8>
  42347c:	ldr	x28, [x21]
  423480:	cmp	x28, x0
  423484:	b.hi	4232a4 <_obstack_memory_used@@Base+0xc1dc>  // b.pmore
  423488:	cmp	x28, #0x0
  42348c:	mov	x26, x28
  423490:	b.gt	4232ac <_obstack_memory_used@@Base+0xc1e4>
  423494:	mov	x28, #0x1                   	// #1
  423498:	mov	x0, #0x10                  	// #16
  42349c:	mov	x26, x28
  4234a0:	mov	x21, #0x0                   	// #0
  4234a4:	b	4232b0 <_obstack_memory_used@@Base+0xc1e8>
  4234a8:	ldr	x1, [x21]
  4234ac:	mov	w19, w0
  4234b0:	cmp	x1, x23
  4234b4:	b.cs	423308 <_obstack_memory_used@@Base+0xc240>  // b.hs, b.nlast
  4234b8:	ldr	x0, [x21, #8]
  4234bc:	lsl	x27, x23, #3
  4234c0:	mov	x1, x27
  4234c4:	bl	402550 <realloc@plt>
  4234c8:	mov	x24, x0
  4234cc:	cbz	x0, 4234f8 <_obstack_memory_used@@Base+0xc430>
  4234d0:	ldr	x0, [x21, #16]
  4234d4:	mov	x1, x27
  4234d8:	bl	402550 <realloc@plt>
  4234dc:	cbz	x0, 423510 <_obstack_memory_used@@Base+0xc448>
  4234e0:	stp	x23, x24, [x21]
  4234e4:	str	x0, [x21, #16]
  4234e8:	b	423308 <_obstack_memory_used@@Base+0xc240>
  4234ec:	mov	x0, #0x0                   	// #0
  4234f0:	mov	x1, #0x0                   	// #0
  4234f4:	b	423344 <_obstack_memory_used@@Base+0xc27c>
  4234f8:	mov	w19, #0x0                   	// #0
  4234fc:	b	423374 <_obstack_memory_used@@Base+0xc2ac>
  423500:	mov	x0, x19
  423504:	mov	w19, #0x0                   	// #0
  423508:	bl	4026b0 <free@plt>
  42350c:	b	423374 <_obstack_memory_used@@Base+0xc2ac>
  423510:	mov	x0, x24
  423514:	mov	w19, #0x0                   	// #0
  423518:	bl	4026b0 <free@plt>
  42351c:	b	423374 <_obstack_memory_used@@Base+0xc2ac>
  423520:	stp	x29, x30, [sp, #-112]!
  423524:	cmp	x4, #0x0
  423528:	mov	x29, sp
  42352c:	stp	x27, x28, [sp, #80]
  423530:	ldr	x27, [sp, #112]
  423534:	stp	x19, x20, [sp, #16]
  423538:	stp	x25, x26, [sp, #64]
  42353c:	ccmp	x27, #0x0, #0x1, ge  // ge = tcont
  423540:	mov	x25, x7
  423544:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
  423548:	ldrb	w7, [sp, #120]
  42354c:	b.lt	423618 <_obstack_memory_used@@Base+0xc550>  // b.tstop
  423550:	mov	x19, x4
  423554:	mov	x20, x2
  423558:	adds	x28, x2, x4
  42355c:	b.vs	423618 <_obstack_memory_used@@Base+0xc550>
  423560:	stp	x21, x22, [sp, #32]
  423564:	mov	x22, x0
  423568:	stp	x23, x24, [sp, #48]
  42356c:	mov	x23, x5
  423570:	mov	x24, x6
  423574:	cbz	x4, 423634 <_obstack_memory_used@@Base+0xc56c>
  423578:	str	x1, [sp, #96]
  42357c:	mov	x21, x3
  423580:	mov	x26, #0x0                   	// #0
  423584:	cbnz	x2, 4235d4 <_obstack_memory_used@@Base+0xc50c>
  423588:	mov	x6, x25
  42358c:	mov	x5, x27
  423590:	mov	x4, x24
  423594:	mov	x3, x23
  423598:	mov	x2, x28
  42359c:	mov	x1, x21
  4235a0:	mov	x0, x22
  4235a4:	bl	4231f8 <_obstack_memory_used@@Base+0xc130>
  4235a8:	mov	x19, x0
  4235ac:	mov	x0, x26
  4235b0:	bl	4026b0 <free@plt>
  4235b4:	mov	x0, x19
  4235b8:	ldp	x19, x20, [sp, #16]
  4235bc:	ldp	x21, x22, [sp, #32]
  4235c0:	ldp	x23, x24, [sp, #48]
  4235c4:	ldp	x25, x26, [sp, #64]
  4235c8:	ldp	x27, x28, [sp, #80]
  4235cc:	ldp	x29, x30, [sp], #112
  4235d0:	ret
  4235d4:	mov	x0, x28
  4235d8:	str	w7, [sp, #108]
  4235dc:	bl	402440 <malloc@plt>
  4235e0:	mov	x26, x0
  4235e4:	cbz	x0, 423610 <_obstack_memory_used@@Base+0xc548>
  4235e8:	ldr	x1, [sp, #96]
  4235ec:	mov	x2, x20
  4235f0:	bl	4022a0 <memcpy@plt>
  4235f4:	mov	x1, x21
  4235f8:	mov	x2, x19
  4235fc:	add	x0, x26, x20
  423600:	bl	4022a0 <memcpy@plt>
  423604:	ldr	w7, [sp, #108]
  423608:	mov	x21, x26
  42360c:	b	423588 <_obstack_memory_used@@Base+0xc4c0>
  423610:	ldp	x21, x22, [sp, #32]
  423614:	ldp	x23, x24, [sp, #48]
  423618:	mov	x19, #0xfffffffffffffffe    	// #-2
  42361c:	mov	x0, x19
  423620:	ldp	x19, x20, [sp, #16]
  423624:	ldp	x25, x26, [sp, #64]
  423628:	ldp	x27, x28, [sp, #80]
  42362c:	ldp	x29, x30, [sp], #112
  423630:	ret
  423634:	mov	x21, x1
  423638:	mov	x26, #0x0                   	// #0
  42363c:	b	423588 <_obstack_memory_used@@Base+0xc4c0>
  423640:	stp	x29, x30, [sp, #-64]!
  423644:	mov	x29, sp
  423648:	stp	x19, x20, [sp, #16]
  42364c:	mov	w19, w2
  423650:	mov	x20, x0
  423654:	tst	x19, #0x1
  423658:	stp	x21, x22, [sp, #32]
  42365c:	mov	x21, #0xb2fc                	// #45820
  423660:	str	x23, [sp, #48]
  423664:	mov	x23, #0x2c6                 	// #710
  423668:	stp	xzr, xzr, [x0]
  42366c:	mov	x22, x1
  423670:	movk	x21, #0x3, lsl #16
  423674:	str	xzr, [x0, #16]
  423678:	movk	x23, #0x101, lsl #16
  42367c:	mov	x0, #0x100                 	// #256
  423680:	csel	x23, x21, x23, ne  // ne = any
  423684:	bl	402440 <malloc@plt>
  423688:	str	x0, [x20, #32]
  42368c:	cbz	x0, 423738 <_obstack_memory_used@@Base+0xc670>
  423690:	sbfiz	x21, x19, #21, #32
  423694:	mov	w0, #0x0                   	// #0
  423698:	and	x21, x21, #0x400000
  42369c:	orr	x21, x21, x23
  4236a0:	tbnz	w19, #2, 423714 <_obstack_memory_used@@Base+0xc64c>
  4236a4:	ldrb	w1, [x20, #56]
  4236a8:	ubfx	x19, x19, #3, #1
  4236ac:	ubfiz	w0, w0, #7, #1
  4236b0:	mov	w2, #0x6f                  	// #111
  4236b4:	orr	w19, w0, w19, lsl #4
  4236b8:	and	w0, w1, w2
  4236bc:	orr	w19, w19, w0
  4236c0:	str	xzr, [x20, #40]
  4236c4:	strb	w19, [x20, #56]
  4236c8:	mov	x0, x22
  4236cc:	bl	402300 <strlen@plt>
  4236d0:	mov	x2, x0
  4236d4:	mov	x3, x21
  4236d8:	mov	x1, x22
  4236dc:	mov	x0, x20
  4236e0:	bl	422258 <_obstack_memory_used@@Base+0xb190>
  4236e4:	mov	w19, w0
  4236e8:	cmp	w0, #0x10
  4236ec:	b.eq	423724 <_obstack_memory_used@@Base+0xc65c>  // b.none
  4236f0:	cbnz	w0, 423728 <_obstack_memory_used@@Base+0xc660>
  4236f4:	mov	x0, x20
  4236f8:	bl	423128 <_obstack_memory_used@@Base+0xc060>
  4236fc:	mov	w0, w19
  423700:	ldp	x19, x20, [sp, #16]
  423704:	ldp	x21, x22, [sp, #32]
  423708:	ldr	x23, [sp, #48]
  42370c:	ldp	x29, x30, [sp], #64
  423710:	ret
  423714:	and	x21, x21, #0xffffffffffffffbf
  423718:	mov	w0, #0x1                   	// #1
  42371c:	orr	x21, x21, #0x100
  423720:	b	4236a4 <_obstack_memory_used@@Base+0xc5dc>
  423724:	mov	w19, #0x8                   	// #8
  423728:	ldr	x0, [x20, #32]
  42372c:	bl	4026b0 <free@plt>
  423730:	str	xzr, [x20, #32]
  423734:	b	4236fc <_obstack_memory_used@@Base+0xc634>
  423738:	mov	w19, #0xc                   	// #12
  42373c:	mov	w0, w19
  423740:	ldp	x19, x20, [sp, #16]
  423744:	ldp	x21, x22, [sp, #32]
  423748:	ldr	x23, [sp, #48]
  42374c:	ldp	x29, x30, [sp], #64
  423750:	ret
  423754:	nop
  423758:	stp	x29, x30, [sp, #-48]!
  42375c:	cmp	w0, #0x10
  423760:	mov	x29, sp
  423764:	stp	x19, x20, [sp, #16]
  423768:	stp	x21, x22, [sp, #32]
  42376c:	b.hi	4237e8 <_obstack_memory_used@@Base+0xc720>  // b.pmore
  423770:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  423774:	add	x1, x1, #0x348
  423778:	mov	w4, w0
  42377c:	mov	x20, x3
  423780:	add	x3, x1, #0x1a0
  423784:	add	x1, x1, #0x20
  423788:	mov	x21, x2
  42378c:	mov	w2, #0x5                   	// #5
  423790:	mov	x0, #0x0                   	// #0
  423794:	ldr	x3, [x3, w4, sxtw #3]
  423798:	add	x1, x1, x3
  42379c:	bl	4027f0 <dcgettext@plt>
  4237a0:	mov	x22, x0
  4237a4:	bl	402300 <strlen@plt>
  4237a8:	add	x19, x0, #0x1
  4237ac:	cbz	x20, 4237c8 <_obstack_memory_used@@Base+0xc700>
  4237b0:	cmp	x19, x20
  4237b4:	mov	x2, x19
  4237b8:	b.hi	4237dc <_obstack_memory_used@@Base+0xc714>  // b.pmore
  4237bc:	mov	x1, x22
  4237c0:	mov	x0, x21
  4237c4:	bl	4022a0 <memcpy@plt>
  4237c8:	mov	x0, x19
  4237cc:	ldp	x19, x20, [sp, #16]
  4237d0:	ldp	x21, x22, [sp, #32]
  4237d4:	ldp	x29, x30, [sp], #48
  4237d8:	ret
  4237dc:	sub	x2, x20, #0x1
  4237e0:	strb	wzr, [x21, x2]
  4237e4:	b	4237bc <_obstack_memory_used@@Base+0xc6f4>
  4237e8:	bl	4025f0 <abort@plt>
  4237ec:	nop
  4237f0:	stp	x29, x30, [sp, #-32]!
  4237f4:	mov	x29, sp
  4237f8:	str	x19, [sp, #16]
  4237fc:	mov	x19, x0
  423800:	ldr	x0, [x0]
  423804:	cbz	x0, 42380c <_obstack_memory_used@@Base+0xc744>
  423808:	bl	418ab8 <_obstack_memory_used@@Base+0x19f0>
  42380c:	ldr	x0, [x19, #32]
  423810:	stp	xzr, xzr, [x19]
  423814:	bl	4026b0 <free@plt>
  423818:	str	xzr, [x19, #32]
  42381c:	ldr	x0, [x19, #40]
  423820:	bl	4026b0 <free@plt>
  423824:	str	xzr, [x19, #40]
  423828:	ldr	x19, [sp, #16]
  42382c:	ldp	x29, x30, [sp], #32
  423830:	ret
  423834:	nop
  423838:	tst	w4, #0xfffffff8
  42383c:	b.ne	423914 <_obstack_memory_used@@Base+0xc84c>  // b.any
  423840:	sub	sp, sp, #0x50
  423844:	stp	x29, x30, [sp, #16]
  423848:	add	x29, sp, #0x10
  42384c:	stp	x19, x20, [sp, #32]
  423850:	mov	w19, w4
  423854:	mov	x20, x0
  423858:	stp	x21, x22, [sp, #48]
  42385c:	mov	x21, x1
  423860:	mov	x22, x3
  423864:	str	x23, [sp, #64]
  423868:	mov	x23, x2
  42386c:	tbnz	w19, #2, 4238c8 <_obstack_memory_used@@Base+0xc800>
  423870:	mov	x0, x1
  423874:	bl	402300 <strlen@plt>
  423878:	mov	x5, x0
  42387c:	ldrb	w0, [x20, #56]
  423880:	str	w19, [sp]
  423884:	mov	x3, #0x0                   	// #0
  423888:	tbz	w0, #4, 4238d8 <_obstack_memory_used@@Base+0xc810>
  42388c:	mov	x1, x21
  423890:	mov	x0, x20
  423894:	mov	x4, x5
  423898:	mov	x2, x5
  42389c:	mov	x7, #0x0                   	// #0
  4238a0:	mov	x6, #0x0                   	// #0
  4238a4:	bl	41ea10 <_obstack_memory_used@@Base+0x7948>
  4238a8:	cmp	w0, #0x0
  4238ac:	cset	w0, ne  // ne = any
  4238b0:	ldp	x29, x30, [sp, #16]
  4238b4:	ldp	x19, x20, [sp, #32]
  4238b8:	ldp	x21, x22, [sp, #48]
  4238bc:	ldr	x23, [sp, #64]
  4238c0:	add	sp, sp, #0x50
  4238c4:	ret
  4238c8:	ldrb	w0, [x20, #56]
  4238cc:	ldp	x3, x5, [x3]
  4238d0:	str	w19, [sp]
  4238d4:	tbnz	w0, #4, 42388c <_obstack_memory_used@@Base+0xc7c4>
  4238d8:	mov	x7, x22
  4238dc:	mov	x6, x23
  4238e0:	mov	x1, x21
  4238e4:	mov	x0, x20
  4238e8:	mov	x4, x5
  4238ec:	mov	x2, x5
  4238f0:	bl	41ea10 <_obstack_memory_used@@Base+0x7948>
  4238f4:	cmp	w0, #0x0
  4238f8:	cset	w0, ne  // ne = any
  4238fc:	ldp	x29, x30, [sp, #16]
  423900:	ldp	x19, x20, [sp, #32]
  423904:	ldp	x21, x22, [sp, #48]
  423908:	ldr	x23, [sp, #64]
  42390c:	add	sp, sp, #0x50
  423910:	ret
  423914:	mov	w0, #0x2                   	// #2
  423918:	ret
  42391c:	nop
  423920:	mov	x6, x4
  423924:	mov	x5, x2
  423928:	mov	w7, #0x1                   	// #1
  42392c:	mov	x4, #0x0                   	// #0
  423930:	b	4231f8 <_obstack_memory_used@@Base+0xc130>
  423934:	nop
  423938:	mov	x6, x5
  42393c:	mov	w7, #0x0                   	// #0
  423940:	mov	x5, x2
  423944:	b	4231f8 <_obstack_memory_used@@Base+0xc130>
  423948:	sub	sp, sp, #0x20
  42394c:	mov	w8, #0x1                   	// #1
  423950:	stp	x29, x30, [sp, #16]
  423954:	add	x29, sp, #0x10
  423958:	str	x7, [sp]
  42395c:	mov	x7, x6
  423960:	strb	w8, [sp, #8]
  423964:	mov	x6, #0x0                   	// #0
  423968:	bl	423520 <_obstack_memory_used@@Base+0xc458>
  42396c:	ldp	x29, x30, [sp, #16]
  423970:	add	sp, sp, #0x20
  423974:	ret
  423978:	sub	sp, sp, #0x20
  42397c:	stp	x29, x30, [sp, #16]
  423980:	add	x29, sp, #0x10
  423984:	ldr	x8, [sp, #32]
  423988:	str	x8, [sp]
  42398c:	strb	wzr, [sp, #8]
  423990:	bl	423520 <_obstack_memory_used@@Base+0xc458>
  423994:	ldp	x29, x30, [sp, #16]
  423998:	add	sp, sp, #0x20
  42399c:	ret
  4239a0:	cbz	x2, 4239c0 <_obstack_memory_used@@Base+0xc8f8>
  4239a4:	ldrb	w5, [x0, #56]
  4239a8:	mov	w6, #0x1                   	// #1
  4239ac:	bfi	w5, w6, #1, #2
  4239b0:	strb	w5, [x0, #56]
  4239b4:	stp	x2, x3, [x1]
  4239b8:	str	x4, [x1, #16]
  4239bc:	ret
  4239c0:	ldrb	w2, [x0, #56]
  4239c4:	and	w2, w2, #0xfffffff9
  4239c8:	strb	w2, [x0, #56]
  4239cc:	stp	xzr, xzr, [x1]
  4239d0:	str	xzr, [x1, #16]
  4239d4:	ret
  4239d8:	stp	x29, x30, [sp, #-32]!
  4239dc:	mov	x29, sp
  4239e0:	stp	x19, x20, [sp, #16]
  4239e4:	mov	x19, x0
  4239e8:	bl	4023b0 <__fpending@plt>
  4239ec:	mov	x20, x0
  4239f0:	mov	x0, x19
  4239f4:	ldr	w19, [x19]
  4239f8:	and	w19, w19, #0x20
  4239fc:	bl	4023e0 <fclose@plt>
  423a00:	cbnz	w19, 423a28 <_obstack_memory_used@@Base+0xc960>
  423a04:	cbz	w0, 423a1c <_obstack_memory_used@@Base+0xc954>
  423a08:	cbnz	x20, 423a40 <_obstack_memory_used@@Base+0xc978>
  423a0c:	bl	402890 <__errno_location@plt>
  423a10:	ldr	w0, [x0]
  423a14:	cmp	w0, #0x9
  423a18:	csetm	w0, ne  // ne = any
  423a1c:	ldp	x19, x20, [sp, #16]
  423a20:	ldp	x29, x30, [sp], #32
  423a24:	ret
  423a28:	cbnz	w0, 423a40 <_obstack_memory_used@@Base+0xc978>
  423a2c:	bl	402890 <__errno_location@plt>
  423a30:	mov	x1, x0
  423a34:	mov	w0, #0xffffffff            	// #-1
  423a38:	str	wzr, [x1]
  423a3c:	b	423a1c <_obstack_memory_used@@Base+0xc954>
  423a40:	mov	w0, #0xffffffff            	// #-1
  423a44:	b	423a1c <_obstack_memory_used@@Base+0xc954>
  423a48:	mov	w1, #0xf616                	// #62998
  423a4c:	str	xzr, [x0, #16]
  423a50:	movk	w1, #0x95, lsl #16
  423a54:	str	w1, [x0, #24]
  423a58:	ret
  423a5c:	nop
  423a60:	mov	x2, x0
  423a64:	mov	w0, #0xf616                	// #62998
  423a68:	movk	w0, #0x95, lsl #16
  423a6c:	ldr	w3, [x2, #24]
  423a70:	cmp	w3, w0
  423a74:	b.ne	423ae4 <_obstack_memory_used@@Base+0xca1c>  // b.any
  423a78:	ldr	x0, [x2, #16]
  423a7c:	ldr	x3, [x1, #8]
  423a80:	cbz	x0, 423aa8 <_obstack_memory_used@@Base+0xc9e0>
  423a84:	ldr	x4, [x2]
  423a88:	cmp	x4, x3
  423a8c:	b.eq	423ac0 <_obstack_memory_used@@Base+0xc9f8>  // b.none
  423a90:	add	x4, x0, #0x1
  423a94:	str	x4, [x2, #16]
  423a98:	tst	x0, x4
  423a9c:	mov	w0, #0x0                   	// #0
  423aa0:	b.eq	423ad8 <_obstack_memory_used@@Base+0xca10>  // b.none
  423aa4:	ret
  423aa8:	mov	x0, #0x1                   	// #1
  423aac:	str	x0, [x2, #16]
  423ab0:	ldr	x1, [x1]
  423ab4:	mov	w0, #0x0                   	// #0
  423ab8:	stp	x3, x1, [x2]
  423abc:	ret
  423ac0:	ldr	x5, [x1]
  423ac4:	ldr	x4, [x2, #8]
  423ac8:	cmp	x5, x4
  423acc:	b.ne	423a90 <_obstack_memory_used@@Base+0xc9c8>  // b.any
  423ad0:	mov	w0, #0x1                   	// #1
  423ad4:	ret
  423ad8:	cbnz	x4, 423ab0 <_obstack_memory_used@@Base+0xc9e8>
  423adc:	mov	w0, #0x1                   	// #1
  423ae0:	ret
  423ae4:	stp	x29, x30, [sp, #-16]!
  423ae8:	adrp	x3, 427000 <_obstack_memory_used@@Base+0xff38>
  423aec:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  423af0:	mov	x29, sp
  423af4:	adrp	x0, 427000 <_obstack_memory_used@@Base+0xff38>
  423af8:	add	x3, x3, #0x598
  423afc:	add	x1, x1, #0x570
  423b00:	add	x0, x0, #0x580
  423b04:	mov	w2, #0x3c                  	// #60
  423b08:	bl	402880 <__assert_fail@plt>
  423b0c:	nop
  423b10:	ldrb	w1, [x0]
  423b14:	cmp	w1, #0x2f
  423b18:	b.ne	423b2c <_obstack_memory_used@@Base+0xca64>  // b.any
  423b1c:	nop
  423b20:	ldrb	w1, [x0, #1]!
  423b24:	cmp	w1, #0x2f
  423b28:	b.eq	423b20 <_obstack_memory_used@@Base+0xca58>  // b.none
  423b2c:	cbz	w1, 423b64 <_obstack_memory_used@@Base+0xca9c>
  423b30:	mov	x2, x0
  423b34:	mov	w3, #0x0                   	// #0
  423b38:	b	423b50 <_obstack_memory_used@@Base+0xca88>
  423b3c:	cbz	w3, 423b48 <_obstack_memory_used@@Base+0xca80>
  423b40:	mov	x0, x2
  423b44:	mov	w3, #0x0                   	// #0
  423b48:	ldrb	w1, [x2, #1]!
  423b4c:	cbz	w1, 423b64 <_obstack_memory_used@@Base+0xca9c>
  423b50:	cmp	w1, #0x2f
  423b54:	b.ne	423b3c <_obstack_memory_used@@Base+0xca74>  // b.any
  423b58:	ldrb	w1, [x2, #1]!
  423b5c:	mov	w3, #0x1                   	// #1
  423b60:	cbnz	w1, 423b50 <_obstack_memory_used@@Base+0xca88>
  423b64:	ret
  423b68:	stp	x29, x30, [sp, #-32]!
  423b6c:	mov	x29, sp
  423b70:	str	x19, [sp, #16]
  423b74:	mov	x19, x0
  423b78:	bl	402300 <strlen@plt>
  423b7c:	subs	x1, x0, #0x1
  423b80:	b.ls	423b90 <_obstack_memory_used@@Base+0xcac8>  // b.plast
  423b84:	ldrb	w2, [x19, x1]
  423b88:	cmp	w2, #0x2f
  423b8c:	b.eq	423b9c <_obstack_memory_used@@Base+0xcad4>  // b.none
  423b90:	ldr	x19, [sp, #16]
  423b94:	ldp	x29, x30, [sp], #32
  423b98:	ret
  423b9c:	mov	x0, x1
  423ba0:	b	423b7c <_obstack_memory_used@@Base+0xcab4>
  423ba4:	nop
  423ba8:	stp	x29, x30, [sp, #-64]!
  423bac:	mov	x29, sp
  423bb0:	str	x2, [sp, #56]
  423bb4:	mov	w2, #0x0                   	// #0
  423bb8:	tbnz	w1, #6, 423bcc <_obstack_memory_used@@Base+0xcb04>
  423bbc:	bl	402460 <open@plt>
  423bc0:	bl	413ae0 <wcrtomb@plt+0x111c0>
  423bc4:	ldp	x29, x30, [sp], #64
  423bc8:	ret
  423bcc:	mov	w2, #0xfffffff8            	// #-8
  423bd0:	stp	w2, wzr, [sp, #40]
  423bd4:	ldr	w2, [sp, #56]
  423bd8:	add	x3, sp, #0x30
  423bdc:	add	x4, sp, #0x40
  423be0:	stp	x4, x4, [sp, #16]
  423be4:	str	x3, [sp, #32]
  423be8:	bl	402460 <open@plt>
  423bec:	bl	413ae0 <wcrtomb@plt+0x111c0>
  423bf0:	ldp	x29, x30, [sp], #64
  423bf4:	ret
  423bf8:	stp	x29, x30, [sp, #-288]!
  423bfc:	mov	x2, #0x101                 	// #257
  423c00:	mov	x29, sp
  423c04:	add	x1, sp, #0x18
  423c08:	bl	423dc8 <_obstack_memory_used@@Base+0xcd00>
  423c0c:	cbnz	w0, 423c48 <_obstack_memory_used@@Base+0xcb80>
  423c10:	ldrh	w0, [sp, #24]
  423c14:	cmp	w0, #0x43
  423c18:	b.eq	423c48 <_obstack_memory_used@@Base+0xcb80>  // b.none
  423c1c:	ldr	w1, [sp, #24]
  423c20:	mov	w0, #0x4f50                	// #20304
  423c24:	movk	w0, #0x4953, lsl #16
  423c28:	cmp	w1, w0
  423c2c:	b.eq	423c3c <_obstack_memory_used@@Base+0xcb74>  // b.none
  423c30:	mov	w0, #0x1                   	// #1
  423c34:	ldp	x29, x30, [sp], #288
  423c38:	ret
  423c3c:	ldrh	w0, [sp, #28]
  423c40:	cmp	w0, #0x58
  423c44:	b.ne	423c30 <_obstack_memory_used@@Base+0xcb68>  // b.any
  423c48:	mov	w0, #0x0                   	// #0
  423c4c:	ldp	x29, x30, [sp], #288
  423c50:	ret
  423c54:	nop
  423c58:	mov	w2, #0x1                   	// #1
  423c5c:	stp	w1, w1, [x0]
  423c60:	stp	w1, w1, [x0, #8]
  423c64:	str	w1, [x0, #16]
  423c68:	stur	xzr, [x0, #20]
  423c6c:	strb	w2, [x0, #28]
  423c70:	ret
  423c74:	nop
  423c78:	ldrb	w0, [x0, #28]
  423c7c:	ret
  423c80:	ldrb	w4, [x0, #28]
  423c84:	mov	x2, x0
  423c88:	ldr	w3, [x0, #20]
  423c8c:	eor	w4, w4, #0x1
  423c90:	add	w3, w4, w3
  423c94:	and	x5, x3, #0x3
  423c98:	and	w3, w3, #0x3
  423c9c:	ldr	w0, [x0, x5, lsl #2]
  423ca0:	str	w1, [x2, x5, lsl #2]
  423ca4:	str	w3, [x2, #20]
  423ca8:	ldr	w1, [x2, #24]
  423cac:	cmp	w1, w3
  423cb0:	b.ne	423cc0 <_obstack_memory_used@@Base+0xcbf8>  // b.any
  423cb4:	add	w4, w4, w1
  423cb8:	and	w4, w4, #0x3
  423cbc:	str	w4, [x2, #24]
  423cc0:	strb	wzr, [x2, #28]
  423cc4:	ret
  423cc8:	mov	x1, x0
  423ccc:	ldrb	w0, [x0, #28]
  423cd0:	cbnz	w0, 423d0c <_obstack_memory_used@@Base+0xcc44>
  423cd4:	ldp	w4, w2, [x1, #16]
  423cd8:	mov	w3, w2
  423cdc:	ldr	w0, [x1, x3, lsl #2]
  423ce0:	str	w4, [x1, x3, lsl #2]
  423ce4:	ldr	w3, [x1, #24]
  423ce8:	cmp	w2, w3
  423cec:	b.eq	423d00 <_obstack_memory_used@@Base+0xcc38>  // b.none
  423cf0:	add	w2, w2, #0x3
  423cf4:	and	w2, w2, #0x3
  423cf8:	str	w2, [x1, #20]
  423cfc:	ret
  423d00:	mov	w2, #0x1                   	// #1
  423d04:	strb	w2, [x1, #28]
  423d08:	ret
  423d0c:	stp	x29, x30, [sp, #-16]!
  423d10:	mov	x29, sp
  423d14:	bl	4025f0 <abort@plt>
  423d18:	stp	x29, x30, [sp, #-16]!
  423d1c:	mov	w0, #0xe                   	// #14
  423d20:	mov	x29, sp
  423d24:	bl	402400 <nl_langinfo@plt>
  423d28:	cbz	x0, 423d48 <_obstack_memory_used@@Base+0xcc80>
  423d2c:	ldrb	w2, [x0]
  423d30:	adrp	x1, 427000 <_obstack_memory_used@@Base+0xff38>
  423d34:	add	x1, x1, #0x5b8
  423d38:	cmp	w2, #0x0
  423d3c:	csel	x0, x1, x0, eq  // eq = none
  423d40:	ldp	x29, x30, [sp], #16
  423d44:	ret
  423d48:	ldp	x29, x30, [sp], #16
  423d4c:	adrp	x0, 427000 <_obstack_memory_used@@Base+0xff38>
  423d50:	add	x0, x0, #0x5b8
  423d54:	ret
  423d58:	stp	x29, x30, [sp, #-48]!
  423d5c:	mov	x29, sp
  423d60:	str	x21, [sp, #32]
  423d64:	mov	x21, x3
  423d68:	mov	w3, #0x4900                	// #18688
  423d6c:	stp	x19, x20, [sp, #16]
  423d70:	movk	w3, #0x8, lsl #16
  423d74:	mov	x20, #0x0                   	// #0
  423d78:	orr	w2, w2, w3
  423d7c:	bl	411fb8 <wcrtomb@plt+0xf698>
  423d80:	tbnz	w0, #31, 423d98 <_obstack_memory_used@@Base+0xccd0>
  423d84:	mov	w19, w0
  423d88:	bl	4025c0 <fdopendir@plt>
  423d8c:	mov	x20, x0
  423d90:	cbz	x0, 423dac <_obstack_memory_used@@Base+0xcce4>
  423d94:	str	w19, [x21]
  423d98:	mov	x0, x20
  423d9c:	ldp	x19, x20, [sp, #16]
  423da0:	ldr	x21, [sp, #32]
  423da4:	ldp	x29, x30, [sp], #48
  423da8:	ret
  423dac:	bl	402890 <__errno_location@plt>
  423db0:	mov	x21, x0
  423db4:	mov	w0, w19
  423db8:	ldr	w19, [x21]
  423dbc:	bl	402580 <close@plt>
  423dc0:	b	423d94 <_obstack_memory_used@@Base+0xcccc>
  423dc4:	nop
  423dc8:	stp	x29, x30, [sp, #-48]!
  423dcc:	mov	x29, sp
  423dd0:	stp	x19, x20, [sp, #16]
  423dd4:	mov	x19, x2
  423dd8:	stp	x21, x22, [sp, #32]
  423ddc:	mov	x21, x1
  423de0:	mov	x1, #0x0                   	// #0
  423de4:	bl	402900 <setlocale@plt>
  423de8:	cbz	x0, 423e6c <_obstack_memory_used@@Base+0xcda4>
  423dec:	mov	x20, x0
  423df0:	bl	402300 <strlen@plt>
  423df4:	cmp	x19, x0
  423df8:	b.hi	423e18 <_obstack_memory_used@@Base+0xcd50>  // b.pmore
  423dfc:	mov	w22, #0x22                  	// #34
  423e00:	cbnz	x19, 423e40 <_obstack_memory_used@@Base+0xcd78>
  423e04:	mov	w0, w22
  423e08:	ldp	x19, x20, [sp, #16]
  423e0c:	ldp	x21, x22, [sp, #32]
  423e10:	ldp	x29, x30, [sp], #48
  423e14:	ret
  423e18:	add	x2, x0, #0x1
  423e1c:	mov	x1, x20
  423e20:	mov	x0, x21
  423e24:	mov	w22, #0x0                   	// #0
  423e28:	bl	4022a0 <memcpy@plt>
  423e2c:	mov	w0, w22
  423e30:	ldp	x19, x20, [sp, #16]
  423e34:	ldp	x21, x22, [sp, #32]
  423e38:	ldp	x29, x30, [sp], #48
  423e3c:	ret
  423e40:	sub	x19, x19, #0x1
  423e44:	mov	x1, x20
  423e48:	mov	x2, x19
  423e4c:	mov	x0, x21
  423e50:	bl	4022a0 <memcpy@plt>
  423e54:	strb	wzr, [x21, x19]
  423e58:	mov	w0, w22
  423e5c:	ldp	x19, x20, [sp, #16]
  423e60:	ldp	x21, x22, [sp, #32]
  423e64:	ldp	x29, x30, [sp], #48
  423e68:	ret
  423e6c:	mov	w22, #0x16                  	// #22
  423e70:	cbz	x19, 423e04 <_obstack_memory_used@@Base+0xcd3c>
  423e74:	strb	wzr, [x21]
  423e78:	b	423e04 <_obstack_memory_used@@Base+0xcd3c>
  423e7c:	nop
  423e80:	mov	x1, #0x0                   	// #0
  423e84:	b	402900 <setlocale@plt>
  423e88:	mov	w2, #0x3                   	// #3
  423e8c:	mov	w1, #0x0                   	// #0
  423e90:	b	423e98 <_obstack_memory_used@@Base+0xcdd0>
  423e94:	nop
  423e98:	stp	x29, x30, [sp, #-112]!
  423e9c:	mov	w6, #0xffffffe0            	// #-32
  423ea0:	mov	x29, sp
  423ea4:	add	x7, sp, #0x50
  423ea8:	stp	x19, x20, [sp, #16]
  423eac:	str	x7, [sp, #64]
  423eb0:	stp	w6, wzr, [sp, #72]
  423eb4:	stp	x2, x3, [sp, #80]
  423eb8:	add	x2, sp, #0x70
  423ebc:	stp	x2, x2, [sp, #48]
  423ec0:	stp	x4, x5, [sp, #96]
  423ec4:	cbz	w1, 423f84 <_obstack_memory_used@@Base+0xcebc>
  423ec8:	mov	w20, w0
  423ecc:	mov	w3, w1
  423ed0:	cmp	w1, #0x406
  423ed4:	b.eq	423fa0 <_obstack_memory_used@@Base+0xced8>  // b.none
  423ed8:	cmp	w1, #0xb
  423edc:	b.gt	423f28 <_obstack_memory_used@@Base+0xce60>
  423ee0:	cmp	w1, #0x0
  423ee4:	b.le	423f54 <_obstack_memory_used@@Base+0xce8c>
  423ee8:	mov	x1, #0x1                   	// #1
  423eec:	mov	x2, #0x514                 	// #1300
  423ef0:	lsl	x1, x1, x3
  423ef4:	tst	x1, x2
  423ef8:	b.ne	42401c <_obstack_memory_used@@Base+0xcf54>  // b.any
  423efc:	mov	x2, #0xa0a                 	// #2570
  423f00:	tst	x1, x2
  423f04:	b.eq	423f54 <_obstack_memory_used@@Base+0xce8c>  // b.none
  423f08:	mov	w1, w3
  423f0c:	mov	w0, w20
  423f10:	bl	402720 <fcntl@plt>
  423f14:	mov	w19, w0
  423f18:	mov	w0, w19
  423f1c:	ldp	x19, x20, [sp, #16]
  423f20:	ldp	x29, x30, [sp], #112
  423f24:	ret
  423f28:	sub	w0, w1, #0x400
  423f2c:	cmp	w0, #0xa
  423f30:	b.hi	423f54 <_obstack_memory_used@@Base+0xce8c>  // b.pmore
  423f34:	mov	x1, #0x1                   	// #1
  423f38:	mov	x2, #0x2c5                 	// #709
  423f3c:	lsl	x1, x1, x0
  423f40:	tst	x1, x2
  423f44:	b.ne	42401c <_obstack_memory_used@@Base+0xcf54>  // b.any
  423f48:	mov	x2, #0x502                 	// #1282
  423f4c:	tst	x1, x2
  423f50:	b.ne	423f08 <_obstack_memory_used@@Base+0xce40>  // b.any
  423f54:	ldr	w0, [sp, #72]
  423f58:	ldr	x1, [sp, #48]
  423f5c:	tbnz	w0, #31, 4240c8 <_obstack_memory_used@@Base+0xd000>
  423f60:	ldr	x2, [x1]
  423f64:	mov	w0, w20
  423f68:	mov	w1, w3
  423f6c:	bl	402720 <fcntl@plt>
  423f70:	mov	w19, w0
  423f74:	mov	w0, w19
  423f78:	ldp	x19, x20, [sp, #16]
  423f7c:	ldp	x29, x30, [sp], #112
  423f80:	ret
  423f84:	ldr	w2, [sp, #80]
  423f88:	bl	402720 <fcntl@plt>
  423f8c:	mov	w19, w0
  423f90:	mov	w0, w19
  423f94:	ldp	x19, x20, [sp, #16]
  423f98:	ldp	x29, x30, [sp], #112
  423f9c:	ret
  423fa0:	stp	x21, x22, [sp, #32]
  423fa4:	adrp	x21, 442000 <__progname@@GLIBC_2.17+0x3b98>
  423fa8:	mov	w2, #0xffffffe8            	// #-24
  423fac:	str	w2, [sp, #72]
  423fb0:	ldr	w2, [x21, #2256]
  423fb4:	ldr	w22, [sp, #80]
  423fb8:	tbnz	w2, #31, 423fe8 <_obstack_memory_used@@Base+0xcf20>
  423fbc:	mov	w2, w22
  423fc0:	bl	402720 <fcntl@plt>
  423fc4:	mov	w19, w0
  423fc8:	tbnz	w0, #31, 42404c <_obstack_memory_used@@Base+0xcf84>
  423fcc:	mov	w0, #0x1                   	// #1
  423fd0:	str	w0, [x21, #2256]
  423fd4:	mov	w0, w19
  423fd8:	ldp	x19, x20, [sp, #16]
  423fdc:	ldp	x21, x22, [sp, #32]
  423fe0:	ldp	x29, x30, [sp], #112
  423fe4:	ret
  423fe8:	mov	w2, w22
  423fec:	mov	w1, #0x0                   	// #0
  423ff0:	bl	402720 <fcntl@plt>
  423ff4:	mov	w19, w0
  423ff8:	tbnz	w0, #31, 424008 <_obstack_memory_used@@Base+0xcf40>
  423ffc:	ldr	w0, [x21, #2256]
  424000:	cmn	w0, #0x1
  424004:	b.eq	42407c <_obstack_memory_used@@Base+0xcfb4>  // b.none
  424008:	mov	w0, w19
  42400c:	ldp	x19, x20, [sp, #16]
  424010:	ldp	x21, x22, [sp, #32]
  424014:	ldp	x29, x30, [sp], #112
  424018:	ret
  42401c:	ldr	w0, [sp, #72]
  424020:	ldr	x1, [sp, #48]
  424024:	tbnz	w0, #31, 4240dc <_obstack_memory_used@@Base+0xd014>
  424028:	ldr	w2, [x1]
  42402c:	mov	w0, w20
  424030:	mov	w1, w3
  424034:	bl	402720 <fcntl@plt>
  424038:	mov	w19, w0
  42403c:	mov	w0, w19
  424040:	ldp	x19, x20, [sp, #16]
  424044:	ldp	x29, x30, [sp], #112
  424048:	ret
  42404c:	bl	402890 <__errno_location@plt>
  424050:	ldr	w0, [x0]
  424054:	cmp	w0, #0x16
  424058:	b.ne	423fcc <_obstack_memory_used@@Base+0xcf04>  // b.any
  42405c:	mov	w2, w22
  424060:	mov	w0, w20
  424064:	mov	w1, #0x0                   	// #0
  424068:	bl	402720 <fcntl@plt>
  42406c:	mov	w19, w0
  424070:	tbnz	w0, #31, 424008 <_obstack_memory_used@@Base+0xcf40>
  424074:	mov	w0, #0xffffffff            	// #-1
  424078:	str	w0, [x21, #2256]
  42407c:	mov	w0, w19
  424080:	mov	w1, #0x1                   	// #1
  424084:	bl	402720 <fcntl@plt>
  424088:	tbnz	w0, #31, 4240a4 <_obstack_memory_used@@Base+0xcfdc>
  42408c:	orr	w2, w0, #0x1
  424090:	mov	w1, #0x2                   	// #2
  424094:	mov	w0, w19
  424098:	bl	402720 <fcntl@plt>
  42409c:	cmn	w0, #0x1
  4240a0:	b.ne	424008 <_obstack_memory_used@@Base+0xcf40>  // b.any
  4240a4:	bl	402890 <__errno_location@plt>
  4240a8:	mov	x20, x0
  4240ac:	mov	w0, w19
  4240b0:	mov	w19, #0xffffffff            	// #-1
  4240b4:	ldr	w21, [x20]
  4240b8:	bl	402580 <close@plt>
  4240bc:	str	w21, [x20]
  4240c0:	ldp	x21, x22, [sp, #32]
  4240c4:	b	423f18 <_obstack_memory_used@@Base+0xce50>
  4240c8:	cmn	w0, #0x7
  4240cc:	b.ge	423f60 <_obstack_memory_used@@Base+0xce98>  // b.tcont
  4240d0:	ldr	x1, [sp, #56]
  4240d4:	add	x1, x1, w0, sxtw
  4240d8:	b	423f60 <_obstack_memory_used@@Base+0xce98>
  4240dc:	cmn	w0, #0x7
  4240e0:	b.ge	424028 <_obstack_memory_used@@Base+0xcf60>  // b.tcont
  4240e4:	ldr	x1, [sp, #56]
  4240e8:	add	x1, x1, w0, sxtw
  4240ec:	b	424028 <_obstack_memory_used@@Base+0xcf60>
  4240f0:	stp	x29, x30, [sp, #-64]!
  4240f4:	mov	x29, sp
  4240f8:	stp	x19, x20, [sp, #16]
  4240fc:	adrp	x20, 43d000 <_obstack_memory_used@@Base+0x25f38>
  424100:	add	x20, x20, #0xdf0
  424104:	stp	x21, x22, [sp, #32]
  424108:	adrp	x21, 43d000 <_obstack_memory_used@@Base+0x25f38>
  42410c:	add	x21, x21, #0xde8
  424110:	sub	x20, x20, x21
  424114:	mov	w22, w0
  424118:	stp	x23, x24, [sp, #48]
  42411c:	mov	x23, x1
  424120:	mov	x24, x2
  424124:	bl	402250 <mbrtowc@plt-0x40>
  424128:	cmp	xzr, x20, asr #3
  42412c:	b.eq	424158 <_obstack_memory_used@@Base+0xd090>  // b.none
  424130:	asr	x20, x20, #3
  424134:	mov	x19, #0x0                   	// #0
  424138:	ldr	x3, [x21, x19, lsl #3]
  42413c:	mov	x2, x24
  424140:	add	x19, x19, #0x1
  424144:	mov	x1, x23
  424148:	mov	w0, w22
  42414c:	blr	x3
  424150:	cmp	x20, x19
  424154:	b.ne	424138 <_obstack_memory_used@@Base+0xd070>  // b.any
  424158:	ldp	x19, x20, [sp, #16]
  42415c:	ldp	x21, x22, [sp, #32]
  424160:	ldp	x23, x24, [sp, #48]
  424164:	ldp	x29, x30, [sp], #64
  424168:	ret
  42416c:	nop
  424170:	ret
  424174:	nop
  424178:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x26f38>
  42417c:	mov	x1, #0x0                   	// #0
  424180:	ldr	x2, [x2, #856]
  424184:	b	402360 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000424188 <.fini>:
  424188:	stp	x29, x30, [sp, #-16]!
  42418c:	mov	x29, sp
  424190:	ldp	x29, x30, [sp], #16
  424194:	ret
